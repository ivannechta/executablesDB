sub esp 0CCh +
push ebx  +
push esi  +
push edi  +
lea edi [ebp+var_C] +
mov ecx 3 +
mov eax 0CCCCCCCCh +
stosd   +
mov ecx offset unk_41C015 +
call sub_41132A  +
mov [ebp+var_8] 0 +
jmp loc_411987  +
mov eax [ebp+var_8] +
add eax 1 +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 10h +
jge loc_4119A6  +
mov eax [ebp+arg_0] +
add eax [ebp+var_8] +
movzx ecx byte ptr [eax] +
push ecx  +
push offset Format  +
call sub_4110D7  +
add esp 8 +
jmp loc_41197E  +
push offset asc_417B48  +
call sub_4110D7  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
add esp 0CCh +
cmp ebp esp +
call sub_411253  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0DCh +
push ebx  +
push esi  +
push edi  +
lea edi [ebp+var_1C] +
mov ecx 7 +
mov eax 0CCCCCCCCh +
stosd   +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx offset unk_41C015 +
call sub_41132A  +
mov [ebp+var_18] 0 +
mov [ebp+var_17] 0 +
mov [ebp+var_16] 0 +
mov [ebp+var_15] 0 +
mov [ebp+var_14] 0 +
mov [ebp+var_13] 0 +
mov [ebp+var_12] 0 +
mov [ebp+var_11] 0 +
mov [ebp+var_10] 0 +
mov [ebp+var_F] 0 +
mov [ebp+var_E] 0 +
mov [ebp+var_D] 0 +
mov [ebp+var_C] 0 +
mov [ebp+var_B] 0 +
mov [ebp+var_A] 0 +
mov [ebp+var_9] 0 +
mov esi esp +
lea eax [ebp+var_18] +
push eax  +
push 1  +
mov ecx [ebp+arg_0] +
push ecx  +
call dword_41A4E0  +
add esp 0Ch +
cmp esi esp +
call sub_411253  +
push edx  +
mov ecx ebp +
push eax  +
lea edx dword_411A9C +
call sub_4111F4  +
pop eax  +
pop edx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call j_@__security_check_cookie@4  +
add esp 0DCh +
cmp ebp esp +
call sub_411253  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0C0h +
push ebx  +
push esi  +
push edi  +
mov edi ebp +
xor ecx ecx +
mov eax 0CCCCCCCCh +
stosd   +
mov ecx offset unk_41C012 +
call sub_41132A  +
mov eax offset unk_41A1B0 +
pop edi  +
pop esi  +
pop ebx  +
add esp 0C0h +
cmp ebp esp +
call sub_411253  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0C0h +
push ebx  +
push esi  +
push edi  +
mov edi ebp +
xor ecx ecx +
mov eax 0CCCCCCCCh +
stosd   +
mov ecx offset unk_41C014 +
call sub_41132A  +
mov esi esp +
mov eax [ebp+ArgList] +
push eax  +
mov ecx [ebp+Locale] +
push ecx  +
mov edx [ebp+Format] +
push edx  +
mov eax [ebp+Stream] +
push eax  +
call sub_411302  +
mov ecx [eax+4] +
push ecx  +
mov edx [eax] +
push edx  +
call ds:__stdio_common_vfprintf  +
add esp 18h +
cmp esi esp +
call sub_411253  +
pop edi  +
pop esi  +
pop ebx  +
add esp 0C0h +
cmp ebp esp +
call sub_411253  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
call ds:SetUnhandledExceptionFilter  +
mov eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
pop ebp  +
retn   +
***
sub esp 324h +
push 17h  +
call ds:IsProcessorFeaturePresent  +
test eax eax +
jz loc_41228C  +
mov ecx 2 +
int 29h  +
mov dword_41A2C0 eax +
mov dword_41A2BC ecx +
mov dword_41A2B8 edx +
mov dword_41A2B4 ebx +
mov dword_41A2B0 esi +
mov dword_41A2AC edi +
mov word_41A2D8 ss +
mov word_41A2CC cs +
mov word_41A2A8 ds +
mov word_41A2A4 es +
mov word_41A2A0 fs +
mov word_41A29C gs +
pushf   +
pop dword_41A2D0  +
mov eax [ebp+var_s0] +
mov dword_41A2C4 eax +
mov eax [ebp+4] +
mov dword_41A2C8 eax +
lea eax [ebp+arg_0] +
mov dword_41A2D4 eax +
mov eax [ebp+var_324] +
mov dword_41A210 10001h +
mov eax dword_41A2C8 +
mov dword_41A1CC eax +
mov dword_41A1C0 0C0000409h +
mov dword_41A1C4 1 +
mov dword_41A1D0 1 +
mov ecx 4 +
imul edx ecx +
mov dword_41A1D4[edx] 2 +
mov eax 4 +
imul ecx eax +
mov edx ___security_cookie +
mov [ebp+ecx+var_8] edx +
mov eax 4 +
shl eax 0 +
mov ecx dword_41A000 +
mov [ebp+eax+var_8] ecx +
push offset ExceptionInfo  +
call sub_4113C5  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 31Ch +
push 17h  +
call ds:IsProcessorFeaturePresent  +
test eax eax +
jz loc_4123EA  +
mov ecx [ebp+arg_0] +
int 29h  +
mov dword_41A2C0 eax +
mov dword_41A2BC ecx +
mov dword_41A2B8 edx +
mov dword_41A2B4 ebx +
mov dword_41A2B0 esi +
mov dword_41A2AC edi +
mov word_41A2D8 ss +
mov word_41A2CC cs +
mov word_41A2A8 ds +
mov word_41A2A4 es +
mov word_41A2A0 fs +
mov word_41A29C gs +
pushf   +
pop dword_41A2D0  +
mov eax [ebp+var_s0] +
mov dword_41A2C4 eax +
mov eax [ebp+4] +
mov dword_41A2C8 eax +
lea eax [ebp+arg_0] +
mov dword_41A2D4 eax +
mov eax [ebp+var_31C] +
mov eax dword_41A2C8 +
mov dword_41A1CC eax +
mov dword_41A1C0 0C0000409h +
mov dword_41A1C4 1 +
mov dword_41A1D0 1 +
mov ecx 4 +
imul edx ecx +
mov eax [ebp+arg_0] +
mov dword_41A1D4[edx] eax +
push offset ExceptionInfo  +
call sub_4113C5  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
mov ebx edx +
mov [ebp+var_4] ecx +
push esi  +
xor esi esi +
cmp [ebx] esi +
jle loc_4127F2  +
push edi  +
xor edi edi +
mov ecx [ebx+4] +
mov eax [ebp+var_4] +
mov edx [ecx+edi] +
cmp dword ptr [edx+eax-4] 0CCCCCCCCh +
jnz loc_4127D9  +
mov eax [ecx+edi+4] +
add eax edx +
mov edx [ebp+var_4] +
cmp dword ptr [eax+edx] 0CCCCCCCCh +
jz loc_4127E9  +
push dword ptr [ecx+edi+8]  +
mov eax [ebp+4] +
push eax  +
call sub_41134D  +
add esp 8 +
inc esi  +
add edi 0Ch +
cmp esi [ebx] +
jl loc_4127B4  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
jnz loc_412813  +
retn   +
push ebp  +
mov ebp esp +
sub esp 0 +
push eax  +
push edx  +
push ebx  +
push esi  +
push edi  +
mov eax [ebp+4] +
push 0  +
push eax  +
call sub_4110E6  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
pop edx  +
pop eax  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_4] +
movzx edx byte ptr [ecx] +
test edx edx +
jz loc_412871  +
cmp dword_41A608 0 +
jz loc_412871  +
call ds:GetCurrentThreadId  +
cmp dword_41A608 eax +
jnz loc_412871  +
nop   +
mov esp ebp +
pop ebp  +
retn   +
***
cmp ecx ___security_cookie +
jnz loc_412899  +
retn   +
jmp sub_41102D  +
***
cmp byte_41A57B 0 +
jnz locret_4128F8  +
push 0  +
push 1  +
push 0  +
push 0  +
push 0  +
mov byte_41A57B 1 +
call sub_4110C3  +
push eax  +
call sub_411339  +
add esp 18h +
retn   +
***
push 0  +
push 0  +
push 0  +
call sub_4110C3  +
add esp 14h +
retn   +
***
call sub_4110AA  +
call sub_4112E4  +
call sub_41100F  +
push 1  +
call sub_411145  +
add esp 4 +
movzx eax al +
test eax eax +
jnz loc_41295A  +
push 7  +
call sub_4111E5  +
fnclex   +
call sub_41100A  +
push offset Function  +
call sub_411203  +
add esp 4 +
call sub_411217  +
test eax eax +
jz loc_41297E  +
push 7  +
call sub_4111E5  +
call sub_411091  +
call sub_41121C  +
test eax eax +
jz loc_412999  +
push offset UserMathErrorFunction  +
call j___setusermatherr  +
add esp 4 +
call sub_411398  +
call sub_41103C  +
call sub_41132F  +
call sub_411280  +
push eax  +
call j__configthreadlocale  +
add esp 4 +
call sub_4112F3  +
movzx ecx al +
test ecx ecx +
jz loc_4129C7  +
call sub_411140  +
call sub_411285  +
call sub_411226  +
test eax eax +
jz loc_4129DC  +
push 7  +
call sub_4111E5  +
xor eax eax +
pop ebp  +
retn   +
***
call sub_41117C  +
xor eax eax +
pop ebp  +
retn   +
***
call sub_411334  +
call sub_411154  +
push eax  +
call j__set_new_mode  +
add esp 4 +
pop ebp  +
retn   +
***
call sub_4113B6  +
call sub_412A60  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset stru_419180  +
push offset SEH_412A60  +
mov eax large fs:0 +
push eax  +
add esp 0FFFFFFCCh +
push ebx  +
push esi  +
push edi  +
mov eax ___security_cookie +
xor [ebp+ms_exc.registration.ScopeTable] eax +
xor eax ebp +
push eax  +
lea eax [ebp+ms_exc.registration] +
mov large fs:0 eax +
mov [ebp+ms_exc.old_esp] esp +
push 1  +
call sub_4112B7  +
add esp 4 +
movzx eax al +
test eax eax +
jnz loc_412AAB  +
push 7  +
call sub_4111E5  +
mov [ebp+var_19] 0 +
mov [ebp+ms_exc.registration.TryLevel] 0 +
call sub_4112E9  +
mov [ebp+var_1A] al +
cmp dword_41A588 1 +
jnz loc_412AD0  +
push 7  +
call sub_4111E5  +
jmp loc_412B31  +
cmp dword_41A588 0 +
jnz loc_412B2D  +
mov dword_41A588 1 +
push offset Last  +
push offset First  +
call j__initterm_e  +
add esp 8 +
test eax eax +
jz loc_412B0F  +
mov [ebp+var_38] 0FFh +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov eax [ebp+var_38] +
jmp loc_412C62  +
push offset dword_417208  +
push offset dword_417000  +
call j__initterm  +
add esp 8 +
mov dword_41A588 2 +
jmp loc_412B31  +
mov [ebp+var_19] 1 +
movzx ecx [ebp+var_1A] +
push ecx  +
call sub_411181  +
add esp 4 +
call sub_411050  +
mov [ebp+var_20] eax +
mov edx [ebp+var_20] +
cmp dword ptr [edx] 0 +
jz loc_412B81  +
mov eax [ebp+var_20] +
push eax  +
call sub_411136  +
add esp 4 +
movzx ecx al +
test ecx ecx +
jz loc_412B81  +
mov edx [ebp+var_20] +
mov eax [edx] +
mov [ebp+var_3C] eax +
push 0  +
push 2  +
push 0  +
mov ecx [ebp+var_3C] +
mov [ebp+var_28] ecx +
mov ecx [ebp+var_28] +
call ds:___guard_check_icall_fptr  +
call [ebp+var_28]  +
call sub_411037  +
mov [ebp+var_24] eax +
mov edx [ebp+var_24] +
cmp dword ptr [edx] 0 +
jz loc_412BB2  +
mov eax [ebp+var_24] +
push eax  +
call sub_411136  +
add esp 4 +
movzx ecx al +
test ecx ecx +
jz loc_412BB2  +
mov edx [ebp+var_24] +
mov eax [edx] +
push eax  +
call j__register_thread_local_exe_atexit_callback  +
add esp 4 +
call sub_412D30  +
mov [ebp+Code] eax +
call sub_4112FD  +
movzx ecx al +
test ecx ecx +
jnz loc_412BCF  +
mov edx [ebp+Code] +
push edx  +
call j_exit  +
movzx eax [ebp+var_19] +
test eax eax +
jnz loc_412BDC  +
call j__cexit  +
push 0  +
push 1  +
call sub_411190  +
add esp 8 +
mov ecx [ebp+Code] +
mov [ebp+var_40] ecx +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov eax [ebp+var_40] +
jmp loc_412C62  +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
jmp loc_412C62  +
mov edx [ebp+ms_exc.exc_ptr] +
mov eax [edx] +
mov ecx [eax] +
mov [ebp+ExceptionNum] ecx +
mov edx [ebp+ms_exc.exc_ptr] +
push edx  +
mov eax [ebp+ExceptionNum] +
push eax  +
call j__seh_filter_exe  +
add esp 8 +
retn   +
mov esp [ebp+ms_exc.old_esp] +
mov ecx [ebp+ExceptionNum] +
mov [ebp+var_34] ecx +
call sub_4112FD  +
movzx edx al +
test edx edx +
jnz loc_412C3C  +
mov eax [ebp+var_34] +
push eax  +
call j__exit  +
movzx ecx [ebp+var_19] +
test ecx ecx +
jnz loc_412C49  +
call j__c_exit  +
mov edx [ebp+var_34] +
mov [ebp+var_44] edx +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov eax [ebp+var_44] +
jmp loc_412C62  +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov ecx [ebp+ms_exc.registration.Next] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41129E  +
push eax  +
call j__configure_narrow_argv  +
add esp 4 +
pop ebp  +
retn   +
***
call j__initialize_narrow_environment  +
pop ebp  +
retn   +
***
sub esp 0Ch +
call j__get_initial_narrow_environment  +
mov [ebp+var_4] eax +
call j___p___argv  +
mov eax [eax] +
mov [ebp+var_8] eax +
call j___p___argc  +
mov ecx [eax] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_C] +
push ecx  +
call sub_4112DF  +
add esp 0Ch +
mov esp ebp +
pop ebp  +
retn   +
***
push 1  +
call j__set_app_type  +
add esp 4 +
pop ebp  +
retn   +
***
push ecx  +
call sub_411131  +
mov [ebp+var_4] eax +
call j___p__commode  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_4110DC  +
push eax  +
call j__set_fmode  +
add esp 4 +
pop ebp  +
retn   +
***
call sub_412A40  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov [ebp+var_18] eax +
lea eax [ebp+var_1] +
mov [ebp+var_14] eax +
lea eax [ebp+Arguments] +
push eax  +
mov [ebp+var_1] 0 +
mov [ebp+Arguments] 1001h +
call sub_413440  +
add esp 4 +
cmp [ebp+var_1] 0 +
setnz al  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_10] eax +
lea eax [ebp+var_1] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_8] eax +
lea eax [ebp+Arguments] +
push eax  +
mov [ebp+var_1] 0 +
mov [ebp+Arguments] 1002h +
call sub_413440  +
add esp 4 +
cmp [ebp+var_1] 0 +
setnz al  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 144h +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov edi dword_41A01C +
mov [ebp+var_144] eax +
cmp edi 0FFFFFFFFh +
jz loc_412F76  +
test ebx ebx +
jnz loc_412EF5  +
push offset MultiByteStr  +
push 4  +
push edi  +
push eax  +
call sub_4131C0  +
add esp 10h +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
push esi  +
sub eax 24h +
lea esi [ebx+20h] +
push eax  +
push esi  +
lea eax [ebp+var_4C] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call sub_413110  +
push offset asc_418198  +
lea eax [ebp+var_4C] +
push eax  +
push offset asc_41819C  +
lea eax [ebp+var_18] +
push eax  +
mov eax [ebx+0Ch] +
push offset aData  +
push [ebp+arg_8]  +
sub eax 24h +
push offset aAllocationNumb  +
push eax  +
push offset aSize  +
push esi  +
push offset aAddress0x  +
push offset aStackAreaAroun_0  +
push offset aSSPSZdSDSSSSS  +
lea eax [ebp+MultiByteStr] +
push 0F4h  +
push eax  +
call sub_4112DA  +
add esp 4Ch +
lea eax [ebp+MultiByteStr] +
push eax  +
push 4  +
push edi  +
push [ebp+var_144]  +
call sub_4131C0  +
add esp 10h +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
cmp eax 4 +
ja loc_412FEE  +
mov ecx dword_41A00C[eax*4] +
mov edx ds:lpMultiByteStr[eax*4] +
cmp ecx 0FFFFFFFFh +
jz loc_41300C  +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_0]  +
call sub_4131C0  +
add esp 10h +
pop ebp  +
retn   +
mov edx ds:off_417C10 +
mov eax 5 +
push edx  +
push eax  +
mov ecx 1 +
push ecx  +
push [ebp+arg_0]  +
call sub_4131C0  +
add esp 10h +
pop ebp  +
retn   +
***
sub esp 404h +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+Source] +
push edi  +
mov edi dword_41A014 +
cmp edi 0FFFFFFFFh +
jz loc_4130CA  +
cmp byte ptr [esi] 0 +
jz loc_4130B8  +
push esi  +
call sub_4131A0  +
add eax 2Dh +
add esp 4 +
cmp eax 400h +
ja loc_4130B8  +
push offset Source  +
lea eax [ebp+Destination] +
push 400h  +
push eax  +
call j_strcpy_s  +
push esi  +
lea eax [ebp+Destination] +
push 400h  +
push eax  +
call j_strcat_s  +
push offset aWasCorrupted  +
lea eax [ebp+Destination] +
push 400h  +
push eax  +
call j_strcat_s  +
add esp 24h +
lea eax [ebp+Destination] +
jmp loc_4130BD  +
mov eax offset aStackCorrupted +
push eax  +
push 2  +
push edi  +
push ebx  +
call sub_4131C0  +
add esp 10h +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
sub ebx esi +
mov [ebp+arg_8] ebx +
mov eax [ebp+arg_C] +
mov [ebp+var_4] edx +
cmp eax 10h +
jb loc_413136  +
mov eax 10h +
mov ecx [ebp+arg_4] +
add ecx edi +
cmp edx eax +
jnb loc_41316B  +
mov bl [ebx+esi] +
movzx eax bl +
push eax  +
mov eax 31h +
push offset a2x  +
sub eax edi +
push eax  +
push ecx  +
call sub_4112DA  +
mov edx [ebp+var_4] +
add esp 10h +
mov [esi] bl +
inc edx  +
mov ebx [ebp+arg_8] +
inc esi  +
add edi 3 +
jmp loc_413126  +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
mov byte ptr [ecx] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
mov eax edx +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4131A8  +
sub eax edx +
dec eax  +
pop ebp  +
retn   +
***
sub esp 0E3Ch +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+lpMultiByteStr] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov [ebp+var_E30] eax +
mov [ebp+var_E3C] ebx +
mov [ebp+var_E34] 0 +
call sub_41138E  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_413213  +
push esi  +
call sub_411087  +
add esp 4 +
mov [ebp+var_E34] eax +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
cmp eax 200h +
jnb loc_413250  +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
lea ebx [ebp+WideCharStr] +
test eax eax +
jnz loc_413255  +
mov ebx offset aRuntimeCheckEr +
push 1002h  +
call sub_412DF0  +
add esp 4 +
test al al +
jz loc_413288  +
mov eax [ebp+var_E30] +
push ebx  +
push esi  +
push ds:dword_417C14[eax*4]  +
push eax  +
call sub_412E40  +
add esp 10h +
test al al +
jnz loc_4133AD  +
jmp loc_41328A  +
mov al 1 +
cmp [ebp+var_E34] 0 +
jnz loc_41329B  +
test edi edi +
jz loc_4133AC  +
test al al +
jz loc_4132AD  +
call ds:IsDebuggerPresent  +
test eax eax +
jnz loc_4133AC  +
push 104h  +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+var_E38] +
push eax  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [esi-5] +
push eax  +
call near ptr unk_41107D  +
add esp 18h +
test edi edi +
jz loc_41330E  +
push ebx  +
push [ebp+var_E30]  +
lea eax [ebp+var_414] +
mov ecx edi +
push offset aRunTimeCheckFa  +
push eax  +
push [ebp+var_E38]  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+arg_4]  +
call ds:___guard_check_icall_fptr  +
call edi  +
jmp loc_4133A4  +
push 0  +
push 0  +
push 30Ah  +
lea eax [ebp+MultiByteStr] +
mov esi offset aUnknownFilenam +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+var_20C] +
push eax  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jz loc_413343  +
lea esi [ebp+MultiByteStr] +
push 0  +
push 0  +
push 30Ah  +
lea eax [ebp+var_A2C] +
mov edi offset aUnknownModuleN +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+var_414] +
push eax  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jz loc_413378  +
lea edi [ebp+var_A2C] +
push [ebp+var_E3C]  +
mov ebx [ebp+var_E34] +
mov ecx ebx +
push [ebp+var_E30]  +
push offset aRunTimeCheckFa_0  +
push edi  +
push [ebp+var_E38]  +
push esi  +
push [ebp+arg_4]  +
call ds:___guard_check_icall_fptr  +
call ebx  +
add esp 1Ch +
cmp eax 1 +
jnz loc_4133AD  +
int 3  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset stru_4191A0  +
push offset SEH_413440  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax ___security_cookie +
xor [ebp+ms_exc.registration.ScopeTable] eax +
xor eax ebp +
push eax  +
lea eax [ebp+ms_exc.registration] +
mov large fs:0 eax +
mov [ebp+ms_exc.old_esp] esp +
mov [ebp+ms_exc.registration.TryLevel] 0 +
push [ebp+lpArguments]  +
push 6  +
push 0  +
push 406D1388h  +
call ds:RaiseException  +
jmp loc_4134A4  +
mov eax [ebp+ms_exc.exc_ptr] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 406D1388h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp+ms_exc.old_esp] +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov ecx [ebp+ms_exc.registration.Next] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_411302  +
push [ebp+ArgList]  +
push [ebp+Locale]  +
push [ebp+Format]  +
push [ebp+BufferCount]  +
push [ebp+Buffer]  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call j___stdio_common_vsprintf_s  +
add esp 1Ch +
test eax eax +
jns loc_4135EB  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
lea eax [ebp+ArgList] +
push eax  +
push 0  +
push [ebp+Format]  +
push [ebp+BufferCount]  +
push [ebp+Buffer]  +
call sub_4111D6  +
add esp 14h +
pop ebp  +
retn   +
***
mov eax dword_41A580 +
mov ecx [ebp+arg_0] +
mov dword_41A580 ecx +
mov dword_41A57C 0 +
pop ebp  +
retn   +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [ebp+var_C] eax +
mov ecx [ebp+var_C] +
mov edx [ebp+var_C] +
add edx [ecx+3Ch] +
mov [ebp+var_14] edx +
mov eax [ebp+var_14] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
movzx edx word ptr [ecx+14h] +
mov eax [ebp+var_8] +
lea ecx [eax+edx+18h] +
mov [ebp+var_10] ecx +
mov edx [ebp+var_8] +
movzx eax word ptr [edx+6] +
imul ecx eax +
add ecx [ebp+var_10] +
mov [ebp+var_18] ecx +
mov edx [ebp+var_10] +
mov [ebp+var_4] edx +
jmp loc_413760  +
mov eax [ebp+var_4] +
add eax 28h +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
cmp ecx [ebp+var_18] +
jz loc_41378B  +
mov edx [ebp+var_4] +
mov eax [ebp+arg_4] +
cmp eax [edx+0Ch] +
jb loc_413789  +
mov ecx [ebp+var_4] +
mov edx [ecx+0Ch] +
mov eax [ebp+var_4] +
add edx [eax+8] +
cmp [ebp+arg_4] edx +
jnb loc_413789  +
mov eax [ebp+var_4] +
jmp loc_41378D  +
jmp loc_413757  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 10h +
cmp [ebp+arg_0] 0 +
jnz loc_4137D0  +
xor al al +
jmp loc_413825  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
movzx edx word ptr [ecx] +
cmp edx 5A4Dh +
jz loc_4137E8  +
xor al al +
jmp loc_413825  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_4] +
add ecx [eax+3Ch] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_C] +
mov [ebp+var_8] edx +
mov eax [ebp+var_8] +
cmp dword ptr [eax] 4550h +
jz loc_413809  +
xor al al +
jmp loc_413825  +
mov ecx [ebp+var_8] +
add ecx 18h +
mov [ebp+var_10] ecx +
mov edx [ebp+var_10] +
movzx eax word ptr [edx] +
cmp eax 10Bh +
jz loc_413823  +
xor al al +
jmp loc_413825  +
mov al 1 +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax large fs:18h +
pop ebp  +
retn   +
***
sub esp 8 +
call sub_4111B3  +
test eax eax +
jnz loc_413873  +
xor al al +
jmp loc_4138A5  +
call sub_411384  +
mov eax [eax+4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov edx offset unk_41A58C +
xor eax eax +
cmpxchg [edx] ecx +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_4138A3  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jnz loc_4138A1  +
mov al 1 +
jmp loc_4138A5  +
jmp loc_41387E  +
xor al al +
mov esp ebp +
pop ebp  +
retn   +
***
cmp [ebp+arg_0] 0 +
jnz loc_413A60  +
mov byte_41A590 1 +
call sub_4111B8  +
call sub_41128A  +
movzx eax al +
test eax eax +
jnz loc_413A75  +
xor al al +
jmp loc_413A91  +
call sub_41128F  +
movzx ecx al +
test ecx ecx +
jnz loc_413A8F  +
push 0  +
call sub_41101E  +
add esp 4 +
xor al al +
jmp loc_413A91  +
mov al 1 +
pop ebp  +
retn   +
***
sub esp 1Ch +
movzx eax byte_41A591 +
test eax eax +
jz loc_413AC8  +
mov al 1 +
jmp loc_413B7E  +
cmp [ebp+arg_0] 0 +
jz loc_413ADB  +
cmp [ebp+arg_0] 1 +
jz loc_413ADB  +
push 5  +
call sub_4111E5  +
call sub_4111B3  +
test eax eax +
jz loc_413B16  +
cmp [ebp+arg_0] 0 +
jnz loc_413B16  +
push offset Table  +
call j__initialize_onexit_table  +
add esp 4 +
test eax eax +
jz loc_413AFF  +
xor al al +
jmp loc_413B7E  +
push offset stru_41A5A0  +
call j__initialize_onexit_table  +
add esp 4 +
test eax eax +
jz loc_413B14  +
xor al al +
jmp loc_413B7E  +
jmp loc_413B75  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_4] +
mov [ebp+var_10] ecx +
mov edx [ebp+var_4] +
mov [ebp+var_C] edx +
mov eax [ebp+var_4] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_10] +
mov Table._first ecx +
mov edx [ebp+var_C] +
mov Table._last edx +
mov eax [ebp+var_8] +
mov Table._end eax +
mov ecx [ebp+var_4] +
mov [ebp+var_1C] ecx +
mov edx [ebp+var_4] +
mov [ebp+var_18] edx +
mov eax [ebp+var_4] +
mov [ebp+var_14] eax +
mov ecx [ebp+var_1C] +
mov stru_41A5A0._first ecx +
mov edx [ebp+var_18] +
mov stru_41A5A0._last edx +
mov eax [ebp+var_14] +
mov stru_41A5A0._end eax +
mov byte_41A591 1 +
mov al 1 +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset stru_4191C0  +
push offset SEH_412A60  +
mov eax large fs:0 +
push eax  +
add esp 0FFFFFFD8h +
push ebx  +
push esi  +
push edi  +
mov eax ___security_cookie +
xor [ebp+ms_exc.registration.ScopeTable] eax +
xor eax ebp +
push eax  +
lea eax [ebp+ms_exc.registration] +
mov large fs:0 eax +
mov [ebp+ms_exc.old_esp] esp +
mov eax [ebp+arg_0] +
mov [ebp+var_30] eax +
mov [ebp+var_24] 400000h +
mov [ebp+ms_exc.registration.TryLevel] 0 +
mov ecx [ebp+var_24] +
push ecx  +
call sub_4137C0  +
add esp 4 +
movzx edx al +
test edx edx +
jnz loc_413C2D  +
mov [ebp+var_19] 0 +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov al [ebp+var_19] +
jmp loc_413CD7  +
mov eax [ebp+var_30] +
sub eax [ebp+var_24] +
mov [ebp+var_34] eax +
mov ecx [ebp+var_34] +
push ecx  +
mov edx [ebp+var_24] +
push edx  +
call sub_413710  +
add esp 8 +
mov [ebp+var_28] eax +
cmp [ebp+var_28] 0 +
jnz loc_413C5F  +
mov [ebp+var_1A] 0 +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov al [ebp+var_1A] +
jmp loc_413CD7  +
mov eax [ebp+var_28] +
mov ecx [eax+24h] +
and ecx 80000000h +
jz loc_413C7D  +
mov [ebp+var_1B] 0 +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov al [ebp+var_1B] +
jmp loc_413CD7  +
mov [ebp+var_1C] 1 +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov al [ebp+var_1C] +
jmp loc_413CD7  +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
jmp loc_413CD7  +
mov edx [ebp+ms_exc.exc_ptr] +
mov eax [edx] +
mov ecx [eax] +
mov [ebp+var_38] ecx +
cmp [ebp+var_38] 0C0000005h +
jnz loc_413CB2  +
mov [ebp+var_2C] 1 +
jmp loc_413CB9  +
mov [ebp+var_2C] 0 +
mov eax [ebp+var_2C] +
retn   +
mov esp [ebp+ms_exc.old_esp] +
mov [ebp+var_1D] 0 +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov al [ebp+var_1D] +
jmp loc_413CD7  +
mov [ebp+ms_exc.registration.TryLevel] 0FFFFFFFEh +
mov ecx [ebp+ms_exc.registration.Next] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_4111B3  +
test eax eax +
jnz loc_413D4E  +
jmp loc_413D61  +
movzx eax [ebp+arg_0] +
test eax eax +
jz loc_413D58  +
jmp loc_413D61  +
xor ecx ecx +
mov edx offset unk_41A58C +
xchg ecx [edx] +
pop ebp  +
retn   +
***
movzx eax byte_41A590 +
test eax eax +
jz loc_413D8A  +
movzx ecx [ebp+arg_4] +
test ecx ecx +
jz loc_413D8A  +
mov al 1 +
jmp loc_413DA6  +
movzx edx [ebp+arg_0] +
push edx  +
call sub_41113B  +
add esp 4 +
movzx eax [ebp+arg_0] +
push eax  +
call sub_41101E  +
add esp 4 +
mov al 1 +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax Table._first +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0FFFFFFFFh +
jnz loc_413DFA  +
mov ecx [ebp+Function] +
push ecx  +
call j__crt_atexit  +
add esp 4 +
test eax eax +
jnz loc_413DEC  +
mov edx [ebp+Function] +
mov [ebp+var_4] edx +
jmp loc_413DF3  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
jmp loc_413E21  +
jmp loc_413E21  +
mov eax [ebp+Function] +
push eax  +
push offset Table  +
call j__register_onexit_function  +
add esp 8 +
test eax eax +
jnz loc_413E17  +
mov ecx [ebp+Function] +
mov [ebp+var_8] ecx +
jmp loc_413E1E  +
mov [ebp+var_8] 0 +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+Function] +
push eax  +
call sub_411221  +
add esp 4 +
test eax eax +
jz loc_413EAD  +
mov [ebp+var_4] 0 +
jmp loc_413EB4  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 14h +
xor eax eax +
mov [ebp+SystemTimeAsFileTime.dwLowDateTime] eax +
mov [ebp+SystemTimeAsFileTime.dwHighDateTime] eax +
lea ecx [ebp+SystemTimeAsFileTime] +
push ecx  +
call ds:GetSystemTimeAsFileTime  +
mov edx [ebp+SystemTimeAsFileTime.dwLowDateTime] +
mov [ebp+var_4] edx +
mov eax [ebp+var_4] +
xor eax [ebp+SystemTimeAsFileTime.dwHighDateTime] +
mov [ebp+var_4] eax +
call ds:GetCurrentThreadId  +
xor eax [ebp+var_4] +
mov [ebp+var_4] eax +
call ds:GetCurrentProcessId  +
xor eax [ebp+var_4] +
mov [ebp+var_4] eax +
lea ecx [ebp+PerformanceCount] +
push ecx  +
call ds:QueryPerformanceCounter  +
mov edx [ebp+var_4] +
xor edx dword ptr [ebp+PerformanceCount] +
mov [ebp+var_4] edx +
mov eax [ebp+var_4] +
xor eax dword ptr [ebp+PerformanceCount+4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
lea edx [ebp+var_4] +
xor ecx edx +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp ___security_cookie 0BB40E64Eh +
jz loc_413F8C  +
mov eax ___security_cookie +
and eax 0FFFF0000h +
jz loc_413F8C  +
mov ecx ___security_cookie +
not ecx  +
mov dword_41A000 ecx +
jmp loc_413FD6  +
call sub_413ED0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0BB40E64Eh +
jnz loc_413FA6  +
mov [ebp+var_4] 0BB40E64Fh +
jmp loc_413FC2  +
mov edx [ebp+var_4] +
and edx 0FFFF0000h +
jnz loc_413FC2  +
mov eax [ebp+var_4] +
or eax 4711h +
shl eax 10h +
or eax [ebp+var_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov ___security_cookie ecx +
mov edx [ebp+var_4] +
not edx  +
mov dword_41A000 edx +
mov esp ebp +
pop ebp  +
retn   +
***
xor eax eax +
pop ebp  +
retn   +
***
mov eax 1 +
pop ebp  +
retn   +
***
xor eax eax +
pop ebp  +
retn   +
***
mov eax 4000h +
pop ebp  +
retn   +
***
xor eax eax +
pop ebp  +
retn   +
***
xor eax eax +
pop ebp  +
retn   +
***
push offset ListHead  +
call ds:InitializeSListHead  +
pop ebp  +
retn   +
***
mov al 1 +
pop ebp  +
retn   +
***
push 30000h  +
push 10000h  +
push 0  +
call j__controlfp_s  +
add esp 0Ch +
test eax eax +
jz loc_4140D2  +
push 7  +
call sub_4111E5  +
pop ebp  +
retn   +
***
mov eax offset unk_41A5C8 +
pop ebp  +
retn   +
***
sub esp 8 +
call sub_411302  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
or ecx 24h +
mov edx [eax+4] +
mov eax [ebp+var_4] +
mov [eax] ecx +
mov [eax+4] edx +
call sub_411361  +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
mov edx [ecx] +
or edx 2 +
mov eax [ecx+4] +
mov ecx [ebp+var_8] +
mov [ecx] edx +
mov [ecx+4] eax +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp dword_41A028 0 +
jnz loc_414176  +
mov [ebp+var_4] 1 +
jmp loc_41417D  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax offset unk_41A5FC +
pop ebp  +
retn   +
***
mov eax offset unk_41A5F0 +
pop ebp  +
retn   +
***
sub esp 32Ch +
push 17h  +
call ds:IsProcessorFeaturePresent  +
test eax eax +
jz loc_4141CA  +
mov ecx [ebp+arg_0] +
int 29h  +
push 3  +
call sub_4112AD  +
add esp 4 +
push 2CCh  +
push 0  +
lea eax [ebp+var_32C] +
push eax  +
call j_memset  +
add esp 0Ch +
mov [ebp+var_27C] eax +
mov [ebp+var_280] ecx +
mov [ebp+var_284] edx +
mov [ebp+var_288] ebx +
mov [ebp+var_28C] esi +
mov [ebp+var_290] edi +
mov [ebp+var_264] ss +
mov [ebp+var_270] cs +
mov [ebp+var_294] ds +
mov [ebp+var_298] es +
mov [ebp+var_29C] fs +
mov [ebp+var_2A0] gs +
pushf   +
pop [ebp+var_26C]  +
mov [ebp+var_32C] 10001h +
mov ecx [ebp+4] +
mov [ebp+var_274] ecx +
lea edx [ebp+4] +
mov [ebp+var_268] edx +
lea eax [ebp+4] +
mov ecx [eax-4] +
mov [ebp+var_278] ecx +
push 50h  +
push 0  +
lea edx [ebp+var_60] +
push edx  +
call j_memset  +
add esp 0Ch +
mov [ebp+var_60] 40000015h +
mov [ebp+var_5C] 1 +
mov eax [ebp+4] +
mov [ebp+var_54] eax +
call ds:IsDebuggerPresent  +
cmp eax 1 +
jnz loc_41429C  +
mov [ebp+var_1] 1 +
jmp loc_4142A0  +
mov [ebp+var_1] 0 +
mov cl [ebp+var_1] +
mov [ebp+var_2] cl +
lea edx [ebp+var_60] +
mov [ebp+ExceptionInfo.ExceptionRecord] edx +
lea eax [ebp+var_32C] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
lea ecx [ebp+ExceptionInfo] +
push ecx  +
call ds:UnhandledExceptionFilter  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_4142E2  +
movzx edx [ebp+var_2] +
test edx edx +
jnz loc_4142E2  +
push 3  +
call sub_4112AD  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41105A  +
pop ebp  +
retn   +
***
xor eax eax +
pop ebp  +
retn   +
***
sub esp 8 +
push 0  +
call ds:GetModuleHandleW  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_4143CB  +
xor al al +
jmp loc_41442F  +
mov eax [ebp+var_4] +
movzx ecx word ptr [eax] +
cmp ecx 5A4Dh +
jz loc_4143DD  +
xor al al +
jmp loc_41442F  +
mov edx [ebp+var_4] +
mov eax [ebp+var_4] +
add eax [edx+3Ch] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx] 4550h +
jz loc_4143F8  +
xor al al +
jmp loc_41442F  +
mov edx [ebp+var_8] +
movzx eax word ptr [edx+18h] +
cmp eax 10Bh +
jz loc_41440A  +
xor al al +
jmp loc_41442F  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+74h] 0Eh +
ja loc_414417  +
xor al al +
jmp loc_41442F  +
mov edx 8 +
imul eax edx +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+eax+78h] 0 +
jnz loc_41442D  +
xor al al +
jmp loc_41442F  +
mov al 1 +
mov esp ebp +
pop ebp  +
retn   +
***
push offset TopLevelExceptionFilter  +
call ds:SetUnhandledExceptionFilter  +
pop ebp  +
retn   +
***
xor eax eax +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_4] +
cmp dword ptr [edx] 0E06D7363h +
jnz loc_414504  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+10h] 3 +
jnz loc_414504  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+14h] 19930520h +
jz loc_4144E2  +
mov edx [ebp+var_4] +
cmp dword ptr [edx+14h] 19930521h +
jz loc_4144E2  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+14h] 19930522h +
jz loc_4144E2  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+14h] 1994000h +
jnz loc_414504  +
call j___current_exception  +
mov edx [ebp+var_4] +
mov [eax] edx +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
mov [ebp+var_8] ecx +
call j___current_exception_context  +
mov edx [ebp+var_8] +
mov [eax] edx +
call j_terminate  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword_41A5D4 0 +
pop ebp  +
retn   +
***
mov eax esi +
cmp eax offset unk_418D70 +
jnb loc_41457C  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_414570  +
mov ecx edi +
call ds:___guard_check_icall_fptr  +
call edi  +
add esi 4 +
cmp esi offset unk_418D70 +
jb loc_414560  +
pop edi  +
pop esi  +
retn   +
***
mov eax esi +
cmp eax offset unk_41907C +
jnb loc_4145BC  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_4145B0  +
mov ecx edi +
call ds:___guard_check_icall_fptr  +
call edi  +
add esi 4 +
cmp esi offset unk_41907C +
jb loc_4145A0  +
pop edi  +
pop esi  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ecx  +
call sub_4113A2  +
add esp 4 +
mov edx [ebp+arg_0] +
mov [edx] eax +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
push offset j_@__security_check_cookie@4  +
push offset ___security_cookie  +
call j__except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push eax  +
call sub_411320  +
add esp 4 +
pop ebp  +
retn   +
***
sub esp 10h +
mov [ebp+var_4] offset unk_418840 +
mov [ebp+var_C] offset unk_418904 +
mov eax [ebp+var_C] +
sub eax [ebp+var_4] +
mov [ebp+var_10] eax +
mov ecx [ebp+arg_0] +
sub ecx [ebp+var_4] +
cmp ecx [ebp+var_10] +
ja loc_414751  +
mov [ebp+var_8] 1 +
jmp loc_414758  +
mov [ebp+var_8] 0 +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov [ebp+var_8] offset unk_418840 +
mov eax [ebp+var_8] +
add eax [ebp+arg_4] +
mov [ebp+var_C] eax +
mov ecx [ebp+arg_0] +
sub ecx [ebp+var_C] +
cmp ecx [ebp+arg_8] +
jbe loc_4148AA  +
mov [ebp+var_4] 1 +
jmp loc_4148B1  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 414h +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
cmp byte_41A5E0 0 +
jnz loc_414A40  +
mov byte_41A5E0 1 +
call sub_414AA0  +
test eax eax +
jnz loc_414A42  +
push offset aVcruntime140dD  +
call j___vcrt_GetModuleHandleW  +
add esp 4 +
test eax eax +
jz loc_4149CD  +
push 104h  +
lea ecx [ebp+FullPath] +
push ecx  +
push eax  +
call j___vcrt_GetModuleFileNameW  +
add esp 0Ch +
test eax eax +
jz loc_4149CD  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+FullPath] +
push eax  +
call sub_414D90  +
add esp 0Ch +
test eax eax +
jz loc_4149CD  +
push 900h  +
lea eax [ebp+Buffer] +
push 0  +
push eax  +
call j___vcrt_LoadLibraryExW  +
add esp 0Ch +
test eax eax +
jnz loc_414A42  +
call ds:GetLastError  +
cmp eax 57h +
jnz loc_4149CD  +
push 8  +
lea eax [ebp+Buffer] +
push 0  +
push eax  +
call j___vcrt_LoadLibraryExW  +
add esp 0Ch +
test eax eax +
jnz loc_414A42  +
push 0A00h  +
push 0  +
push offset aMspdb140  +
call j___vcrt_LoadLibraryExW  +
add esp 0Ch +
test eax eax +
jnz loc_414A42  +
call ds:GetLastError  +
cmp eax 57h +
jnz loc_414A40  +
push 104h  +
lea eax [ebp+FullPath] +
push eax  +
push 0  +
call j___vcrt_GetModuleFileNameW  +
add esp 0Ch +
test eax eax +
jz loc_414A40  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+FullPath] +
push eax  +
call sub_414D90  +
add esp 0Ch +
test eax eax +
jz loc_414A40  +
push 8  +
lea eax [ebp+Buffer] +
push 0  +
push eax  +
call j___vcrt_LoadLibraryExW  +
add esp 0Ch +
test eax eax +
jnz loc_414A42  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 21Ch +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 800h  +
push 0  +
push offset aApiMsWinCoreRe  +
call j___vcrt_LoadLibraryExW  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_414B09  +
push 800h  +
push eax  +
push offset aAdvapi32Dll  +
call j___vcrt_LoadLibraryExW  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_414B09  +
call ds:GetLastError  +
cmp eax 57h +
jnz loc_414B6D  +
push edi  +
push edi  +
push offset aAdvapi32Dll  +
call j___vcrt_LoadLibraryExW  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_414B6D  +
push offset ProcName  +
push edi  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_414B6D  +
push offset aRegqueryvaluee  +
push edi  +
call ds:GetProcAddress  +
mov ebx eax +
test ebx ebx +
jz loc_414B6D  +
push offset aRegclosekey  +
push edi  +
call ds:GetProcAddress  +
mov [ebp+var_218] eax +
test eax eax +
jz loc_414B6D  +
lea eax [ebp+var_210] +
mov ecx esi +
push eax  +
push 1  +
push 0  +
push offset aSoftwareWow643  +
push 80000002h  +
call ds:___guard_check_icall_fptr  +
call esi  +
test eax eax +
jz loc_414B80  +
push edi  +
call ds:FreeLibrary  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+var_214] +
mov [ebp+var_214] 208h +
push eax  +
lea eax [ebp+var_20C] +
mov ecx ebx +
push eax  +
lea eax [ebp+var_21C] +
push eax  +
push 0  +
push offset aProductdir  +
push [ebp+var_210]  +
call ds:___guard_check_icall_fptr  +
call ebx  +
push [ebp+var_210]  +
mov ebx [ebp+var_218] +
mov esi eax +
mov ecx ebx +
call ds:___guard_check_icall_fptr  +
call ebx  +
push edi  +
call ds:FreeLibrary  +
test esi esi +
jnz loc_414B6D  +
cmp [ebp+var_21C] 1 +
jnz loc_414B6D  +
mov ecx [ebp+var_214] +
test cl 1 +
jnz loc_414B6D  +
shr ecx 1 +
mov edx ecx +
cmp ecx 2 +
jb loc_414B6D  +
dec ecx  +
lea eax [ebp+var_20C] +
cmp [eax+ecx*2] si +
lea eax [eax+ecx*2] +
jnz loc_414B6D  +
cmp word ptr [eax-2] 5Ch +
jz loc_414C1F  +
mov ecx 5Ch +
mov [eax] cx +
mov ecx edx +
mov eax ecx +
not eax  +
cmp eax 12h +
jb loc_414B6D  +
lea eax [ecx+11h] +
cmp eax 104h +
ja loc_414B6D  +
mov eax ds:dword_41839C +
mov [ebp+ecx*2+var_20C] eax +
mov eax ds:dword_4183A0 +
mov [ebp+ecx*2+var_208] eax +
mov eax ds:dword_4183A4 +
mov [ebp+ecx*2+var_204] eax +
mov eax ds:dword_4183A8 +
mov [ebp+ecx*2+var_200] eax +
mov eax ds:dword_4183AC +
mov [ebp+ecx*2+var_1FC] eax +
mov eax ds:dword_4183B0 +
mov [ebp+ecx*2+var_1F8] eax +
mov eax ds:dword_4183B4 +
mov [ebp+ecx*2+var_1F4] eax +
mov eax ds:dword_4183B8 +
mov [ebp+ecx*2+var_1F0] eax +
mov ax ds:word_4183BC +
push 900h  +
mov [ebp+ecx*2+var_1EC] ax +
lea eax [ebp+var_20C] +
push 0  +
push eax  +
call j___vcrt_LoadLibraryExW  +
mov esi eax +
add esp 0Ch +
test esi esi +
jnz loc_414CE3  +
call ds:GetLastError  +
cmp eax 57h +
jnz loc_414CE3  +
push 8  +
lea eax [ebp+var_20C] +
push esi  +
push eax  +
call j___vcrt_LoadLibraryExW  +
add esp 0Ch +
mov esi eax +
mov ecx [ebp+var_4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 60Ch +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+FullPath] +
lea ecx [ebp+Ext] +
push esi  +
mov esi [ebp+Buffer] +
push 100h  +
push ecx  +
push 100h  +
lea ecx [ebp+Filename] +
push ecx  +
push 100h  +
lea ecx [ebp+Dir] +
push ecx  +
push 3  +
lea ecx [ebp+Drive] +
push ecx  +
push eax  +
call j__wsplitpath_s  +
add esp 24h +
test eax eax +
jnz loc_414E52  +
push offset aMspdb140_0  +
lea eax [ebp+Filename] +
push 9  +
push eax  +
call j_wcscpy_s  +
add esp 0Ch +
test eax eax +
jnz loc_414E52  +
push offset aDll  +
lea eax [ebp+Ext] +
push 4  +
push eax  +
call j_wcscpy_s  +
add esp 0Ch +
test eax eax +
jnz loc_414E52  +
lea eax [ebp+Ext] +
push eax  +
lea eax [ebp+Filename] +
push eax  +
lea eax [ebp+Dir] +
push eax  +
lea eax [ebp+Drive] +
push eax  +
push [ebp+BufferCount]  +
push esi  +
call j__wmakepath_s  +
add esp 18h +
test eax eax +
jnz loc_414E52  +
mov eax 1 +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
xor eax eax +
xor ecx ebp +
pop esi  +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_C] +
sub esp 4Ch +
xor ecx ecx +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov dword ptr [eax] 0 +
dec esi  +
mov eax [ebp+arg_4] +
push edi  +
push 1Ch  +
mov [eax] cx +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call ds:VirtualQuery  +
test eax eax +
jz loc_415217  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+Buffer.AllocationBase]  +
call j___vcrt_GetModuleFileNameW  +
add esp 0Ch +
test eax eax +
jz loc_415217  +
mov eax [ebp+Buffer.AllocationBase] +
mov ecx 5A4Dh +
cmp [eax] cx +
jnz loc_415217  +
mov ecx [eax+3Ch] +
test ecx ecx +
jle loc_415217  +
add ecx eax +
cmp dword ptr [ecx] 4550h +
jnz loc_415217  +
movzx edx word ptr [ecx+14h] +
sub esi eax +
movzx edi word ptr [ecx+6] +
add edx 20h +
xor ebx ebx +
xor eax eax +
test edi edi +
jz loc_414F47  +
add ecx edx +
lea ecx [ecx+0] +
mov edx [ecx+4] +
cmp esi edx +
jb loc_414F3F  +
mov ebx esi +
sub ebx edx +
cmp esi [ecx] +
jb loc_414F4F  +
inc eax  +
add ecx 28h +
cmp eax edi +
jb loc_414F30  +
cmp eax edi +
jz loc_415217  +
inc eax  +
cmp byte_41A5E1 0 +
mov [ebp+var_C] eax +
jnz loc_414F84  +
cmp dword_41A5DC 0 +
jnz loc_415217  +
call sub_414910  +
mov dword_41A5DC eax +
test eax eax +
jz loc_415217  +
mov byte_41A5E1 1 +
jmp loc_414F89  +
mov eax dword_41A5DC +
push offset aPdbopenvalidat  +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_415217  +
lea eax [ebp+var_18] +
mov ecx esi +
push eax  +
push 0  +
push 0  +
lea eax [ebp+var_30] +
push eax  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_10]  +
call ds:___guard_check_icall_fptr  +
call esi  +
add esp 20h +
test eax eax +
jz loc_415217  +
mov edi [ebp+var_18] +
mov [ebp+var_8] 0 +
mov [ebp+var_24] 0 +
mov eax [edi] +
mov esi [eax] +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
cmp eax 1329141h +
jnz loc_415134  +
mov edi [ebp+var_18] +
mov eax [edi] +
mov esi [eax+1Ch] +
lea eax [ebp+var_20] +
push eax  +
push offset aR  +
push 0  +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
test eax eax +
jz loc_415134  +
mov edi [ebp+var_20] +
push 0  +
push 0  +
push 0  +
mov eax [edi] +
mov esi [eax+20h] +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+var_C]  +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
test eax eax +
jz loc_415120  +
mov edi [ebp+var_14] +
mov eax [edi] +
mov esi [eax+68h] +
lea eax [ebp+var_8] +
push eax  +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
test al al +
jz loc_41510C  +
mov edi [ebp+var_8] +
test edi edi +
jz loc_41510C  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
test eax eax +
jz loc_4150E7  +
mov edi [ebp+var_8] +
push 0  +
mov eax [edi] +
mov esi [eax+0Ch] +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_28] +
mov ecx esi +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push 0  +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
test al al +
jz loc_4150F9  +
movzx eax [ebp+var_4] +
cmp eax [ebp+var_C] +
jnz loc_4150CF  +
mov ecx [ebp+var_1C] +
cmp ecx ebx +
ja loc_4150CF  +
mov eax [ebp+var_28] +
add eax ecx +
cmp ebx eax +
jb loc_415152  +
mov edi [ebp+var_8] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
test eax eax +
jnz loc_415086  +
xor ecx ecx +
push ecx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edi [ebp+var_8] +
mov eax [edi] +
mov esi [eax] +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
mov edi [ebp+var_14] +
mov eax [edi] +
mov esi [eax+40h] +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
mov edi [ebp+var_20] +
mov eax [edi] +
mov esi [eax+38h] +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
mov edi [ebp+var_18] +
mov edx [edi] +
mov esi [edx+2Ch] +
mov ecx esi +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
mov eax [ebp+var_24] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov esi [ebp+var_10] +
test esi esi +
jz loc_4150F9  +
cmp esi 1FFFFFFFh +
jnb loc_4150F9  +
shl esi 3 +
call ds:GetProcessHeap  +
push esi  +
push 0  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_4150F9  +
mov edi [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov ecx [edi] +
lea eax [ebp+var_2C] +
push 0  +
push 0  +
push 0  +
mov esi [ecx+0Ch] +
mov ecx esi +
push eax  +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
test al al +
jz loc_4150E9  +
sub ebx [ebp+var_1C] +
cmp ebx [ecx] +
jb loc_4150E9  +
mov edx [ebp+var_10] +
mov eax 1 +
cmp edx eax +
jbe loc_4151CE  +
cmp ebx [ecx+eax*8] +
jb loc_4151CE  +
inc eax  +
cmp eax edx +
jb loc_4151C4  +
mov eax [ecx+eax*8-4] +
mov ecx [ebp+arg_C] +
and eax 0FFFFFFh +
mov edi [ebp+var_14] +
push 0  +
push 0  +
mov [ecx] eax +
mov eax [edi] +
push 0  +
mov esi [eax+70h] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+var_2C]  +
call ds:___guard_check_icall_fptr  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
test al al +
jz loc_4150E9  +
mov [ebp+var_24] 1 +
jmp loc_4150E9  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call SEH_412A60  +
add esp 10h +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov edx [ecx+4] +
and edx 66h +
jnz loc_415354  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_415354  +
cmp [ebp+var_4] 1 +
jnz loc_415354  +
call j___current_exception  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
call j___current_exception_context  +
mov edx [ebp+arg_8] +
mov [eax] edx +
call j_terminate  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov dword_41A5E4 0 +
mov eax dword_41A02C +
or eax 1 +
mov dword_41A02C eax +
push 0Ah  +
call ds:IsProcessorFeaturePresent  +
test eax eax +
jnz loc_4153BC  +
xor eax eax +
jmp loc_4156A3  +
mov [ebp+var_10] 0 +
mov [ebp+var_C] 0 +
mov [ebp+var_8] 0 +
lea esi [ebp+var_20] +
xor eax eax +
xor ecx ecx +
cpuid   +
mov [esi] eax +
mov [esi+4] ebx +
mov [esi+8] ecx +
mov [esi+0Ch] edx +
mov ecx 4 +
imul edx ecx +
mov eax [ebp+edx+var_20] +
mov [ebp+var_38] eax +
mov ecx 4 +
shl ecx 0 +
mov edx [ebp+ecx+var_20] +
xor edx 756E6547h +
mov eax 4 +
imul ecx eax +
mov eax [ebp+ecx+var_20] +
xor eax 49656E69h +
or edx eax +
mov ecx 4 +
shl ecx 1 +
mov eax [ebp+ecx+var_20] +
xor eax 6C65746Eh +
or edx eax +
jnz loc_415436  +
mov [ebp+var_2C] 1 +
jmp loc_41543D  +
mov [ebp+var_2C] 0 +
mov cl byte ptr [ebp+var_2C] +
mov [ebp+var_21] cl +
lea esi [ebp+var_20] +
mov eax 1 +
xor ecx ecx +
cpuid   +
mov [esi] eax +
mov [esi+4] ebx +
mov [esi+8] ecx +
mov [esi+0Ch] edx +
mov edx 4 +
imul eax edx +
mov ecx [ebp+eax+var_20] +
mov [ebp+var_28] ecx +
movzx edx [ebp+var_21] +
test edx edx +
jz loc_4154E0  +
mov eax [ebp+var_28] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_4154D3  +
mov ecx [ebp+var_28] +
and ecx 0FFF3FF0h +
cmp ecx 20660h +
jz loc_4154D3  +
mov edx [ebp+var_28] +
and edx 0FFF3FF0h +
cmp edx 20670h +
jz loc_4154D3  +
mov eax [ebp+var_28] +
and eax 0FFF3FF0h +
cmp eax 30650h +
jz loc_4154D3  +
mov ecx [ebp+var_28] +
and ecx 0FFF3FF0h +
cmp ecx 30660h +
jz loc_4154D3  +
mov edx [ebp+var_28] +
and edx 0FFF3FF0h +
cmp edx 30670h +
jnz loc_4154E0  +
mov eax dword_41A5E8 +
or eax 1 +
mov dword_41A5E8 eax +
mov ecx 4 +
imul edx ecx +
mov eax 4 +
imul ecx eax +
mov edx [ebp+edx+var_20] +
mov [ebp+ecx+var_10] edx +
mov eax 4 +
shl eax 1 +
mov ecx 4 +
shl ecx 0 +
mov edx [ebp+eax+var_20] +
mov [ebp+ecx+var_10] edx +
cmp [ebp+var_38] 7 +
jl loc_415566  +
lea esi [ebp+var_20] +
mov eax 7 +
xor ecx ecx +
cpuid   +
mov [esi] eax +
mov [esi+4] ebx +
mov [esi+8] ecx +
mov [esi+0Ch] edx +
mov eax 4 +
shl eax 0 +
mov ecx 4 +
shl ecx 1 +
mov edx [ebp+eax+var_20] +
mov [ebp+ecx+var_10] edx +
mov eax 4 +
shl eax 0 +
mov ecx [ebp+eax+var_20] +
and ecx 200h +
jz loc_415566  +
mov edx dword_41A5E8 +
or edx 2 +
mov dword_41A5E8 edx +
mov dword_41A5E4 1 +
mov eax dword_41A02C +
or eax 2 +
mov dword_41A02C eax +
mov ecx 4 +
shl ecx 0 +
mov edx [ebp+ecx+var_10] +
and edx 100000h +
jz loc_4156A1  +
mov dword_41A5E4 2 +
mov eax dword_41A02C +
or eax 4 +
mov dword_41A02C eax +
mov ecx 4 +
shl ecx 0 +
mov edx [ebp+ecx+var_10] +
and edx 8000000h +
jz loc_4156A1  +
mov eax 4 +
shl eax 0 +
mov ecx [ebp+eax+var_10] +
and ecx 10000000h +
jz loc_4156A1  +
xor ecx ecx +
xgetbv   +
mov [ebp+var_34] eax +
mov [ebp+var_30] edx +
mov edx [ebp+var_34] +
mov eax [ebp+var_30] +
and edx 6 +
and eax 0 +
mov [ebp+var_40] edx +
mov [ebp+var_3C] eax +
cmp [ebp+var_40] 6 +
jnz loc_4156A1  +
cmp [ebp+var_3C] 0 +
jnz loc_4156A1  +
mov dword_41A5E4 3 +
mov ecx dword_41A02C +
or ecx 8 +
mov dword_41A02C ecx +
mov edx 4 +
shl edx 1 +
mov eax [ebp+edx+var_10] +
and eax 20h +
jz loc_4156A1  +
mov dword_41A5E4 5 +
mov ecx dword_41A02C +
or ecx 20h +
mov dword_41A02C ecx +
mov edx 4 +
shl edx 1 +
mov eax [ebp+edx+var_10] +
and eax 0D0030000h +
cmp eax 0D0030000h +
jnz loc_4156A1  +
mov ecx [ebp+var_34] +
mov edx [ebp+var_30] +
and ecx 0E0h +
and edx 0 +
mov [ebp+var_48] ecx +
mov [ebp+var_44] edx +
cmp [ebp+var_48] 0E0h +
jnz loc_4156A1  +
cmp [ebp+var_44] 0 +
jnz loc_4156A1  +
mov dword_41A5E4 6 +
mov eax dword_41A02C +
or eax 40h +
mov dword_41A02C eax +
xor eax eax +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call j_@__security_check_cookie@4  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp dword_41A030 0 +
jz loc_415796  +
mov [ebp+var_4] 1 +
jmp loc_41579D  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov al 1 +
pop ebp  +
retn   +
***
mov al 1 +
pop ebp  +
retn   +
***
mov al 1 +
pop ebp  +
retn   +
***
mov al 1 +
pop ebp  +
retn   +
***
mov al 1 +
pop ebp  +
retn   +
***
xor eax eax +
pop ebp  +
retn   +
***
sub esp 54h +
cmp dword_41A5E4 1 +
jge loc_4159B7  +
mov eax [ebp+arg_0] +
jmp loc_415AD0  +
cmp [ebp+arg_0] 0C00002B4h +
jz loc_4159D1  +
cmp [ebp+arg_0] 0C00002B5h +
jz loc_4159D1  +
mov eax [ebp+arg_0] +
jmp loc_415AD0  +
mov [ebp+var_C] 1 +
mov [ebp+var_10] 2 +
mov [ebp+var_14] 4 +
mov [ebp+var_18] 8 +
mov [ebp+var_1C] 10h +
mov [ebp+var_20] 20h +
mov [ebp+var_24] 3Fh +
mov [ebp+var_28] 80h +
mov [ebp+var_2C] 100h +
mov [ebp+var_30] 200h +
mov [ebp+var_34] 400h +
mov [ebp+var_38] 800h +
mov [ebp+var_3C] 1000h +
mov [ebp+var_40] 81h +
mov [ebp+var_44] 102h +
mov [ebp+var_48] 204h +
mov [ebp+var_4C] 408h +
mov [ebp+var_50] 810h +
mov [ebp+var_54] 1020h +
stmxcsr [ebp+var_8]  +
mov eax [ebp+var_8] +
xor eax 3Fh +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
and ecx 81h +
jnz loc_415A75  +
mov eax 0C0000090h +
jmp loc_415AD0  +
mov edx [ebp+var_4] +
and edx 204h +
jnz loc_415A87  +
mov eax 0C000008Eh +
jmp loc_415AD0  +
mov eax [ebp+var_4] +
and eax 102h +
jnz loc_415A98  +
mov eax 0C0000090h +
jmp loc_415AD0  +
mov ecx [ebp+var_4] +
and ecx 408h +
jnz loc_415AAA  +
mov eax 0C0000091h +
jmp loc_415AD0  +
mov edx [ebp+var_4] +
and edx 810h +
jnz loc_415ABC  +
mov eax 0C0000093h +
jmp loc_415AD0  +
mov eax [ebp+var_4] +
and eax 1020h +
jnz loc_415ACD  +
mov eax 0C000008Fh +
jmp loc_415AD0  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0E4h +
push ebx  +
push esi  +
push edi  +
lea edi [ebp+var_24] +
mov ecx 9 +
mov eax 0CCCCCCCCh +
stosd   +
mov ecx offset unk_41C014 +
call sub_41132A  +
lea eax [ebp+arg_4] +
mov [ebp+ArgList] eax +
mov eax [ebp+ArgList] +
push eax  +
push 0  +
mov ecx [ebp+Format] +
push ecx  +
mov esi esp +
push 1  +
call ds:__acrt_iob_func  +
add esp 4 +
cmp esi esp +
call sub_411253  +
push eax  +
call sub_4113B1  +
add esp 10h +
mov [ebp+var_8] eax +
mov [ebp+ArgList] 0 +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
add esp 0E4h +
cmp ebp esp +
call sub_411253  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4D0h +
push ebx  +
push esi  +
push edi  +
lea edi [ebp+var_350] +
mov ecx 0D4h +
mov eax 0CCCCCCCCh +
stosd   +
mov eax ___security_cookie +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx offset unk_41C015 +
call sub_41132A  +
mov esi esp +
push offset LibFileName  +
call ds:LoadLibraryW  +
cmp esi esp +
call sub_411253  +
mov [ebp+hModule] eax +
cmp [ebp+hModule] 0 +
jnz loc_416404  +
push offset aLoadlibraryErr  +
call sub_4110D7  +
add esp 4 +
or eax 0FFFFFFFFh +
jmp loc_41671C  +
mov esi esp +
push offset aReadanswer  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4DC eax +
mov esi esp +
push offset aSendcmd16  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4E0 eax +
mov esi esp +
push offset aSendcmd1  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4E4 eax +
mov esi esp +
push offset aOpenhid  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4E8 eax +
mov esi esp +
push offset aClosehid  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4EC eax +
mov esi esp +
push offset aHidgetmanufact  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4F0 eax +
mov esi esp +
push offset aHidgetproducts  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4F4 eax +
mov esi esp +
push offset aHidgetserialnu  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4F8 eax +
mov esi esp +
push offset aHidgetindexeds  +
mov eax [ebp+hModule] +
push eax  +
call ds:GetProcAddress  +
cmp esi esp +
call sub_411253  +
mov dword_41A4FC eax +
cmp dword_41A4DC 0 +
jz loc_41655A  +
cmp dword_41A4E0 0 +
jz loc_41655A  +
cmp dword_41A4E4 0 +
jz loc_41655A  +
cmp dword_41A4E8 0 +
jz loc_41655A  +
cmp dword_41A4EC 0 +
jz loc_41655A  +
cmp dword_41A4F0 0 +
jz loc_41655A  +
cmp dword_41A4F4 0 +
jz loc_41655A  +
cmp dword_41A4F8 0 +
jz loc_41655A  +
cmp dword_41A4FC 0 +
jnz loc_416571  +
push offset aGetprocadressE  +
call sub_4110D7  +
add esp 4 +
mov eax 0FFFFFFFEh +
jmp loc_41671C  +
mov esi esp +
push offset aNechta  +
push 3E8h  +
push 16C0h  +
call dword_41A4E8  +
add esp 0Ch +
cmp esi esp +
call sub_411253  +
mov [ebp+var_22C] eax +
cmp [ebp+var_22C] 0 +
jnz loc_4165B5  +
push offset aErrorDuringOpe  +
call sub_4110D7  +
add esp 4 +
xor eax eax +
jmp loc_41671C  +
mov esi esp +
lea eax [ebp+var_334] +
push eax  +
mov ecx [ebp+var_22C] +
push ecx  +
call dword_41A4F0  +
add esp 8 +
cmp esi esp +
call sub_411253  +
mov [ebp+var_220] eax +
lea eax [ebp+var_334] +
push eax  +
push offset aManufacturerSt  +
call sub_4110D7  +
add esp 8 +
mov esi esp +
lea eax [ebp+var_334] +
push eax  +
mov ecx [ebp+var_22C] +
push ecx  +
call dword_41A4F4  +
add esp 8 +
cmp esi esp +
call sub_411253  +
mov [ebp+var_220] eax +
lea eax [ebp+var_334] +
push eax  +
push offset aProductStringS  +
call sub_4110D7  +
add esp 8 +
mov esi esp +
lea eax [ebp+var_334] +
push eax  +
mov ecx [ebp+var_22C] +
push ecx  +
call dword_41A4F8  +
add esp 8 +
cmp esi esp +
call sub_411253  +
mov [ebp+var_220] eax +
lea eax [ebp+var_334] +
push eax  +
mov ecx 1 +
imul edx ecx +
movsx eax [ebp+edx+var_334] +
push eax  +
push offset aSerialNumberSt  +
call sub_4110D7  +
add esp 0Ch +
mov esi esp +
lea eax [ebp+var_334] +
push eax  +
push 1  +
mov ecx [ebp+var_22C] +
push ecx  +
call dword_41A4FC  +
add esp 0Ch +
cmp esi esp +
call sub_411253  +
mov [ebp+var_220] eax +
lea eax [ebp+var_334] +
push eax  +
push offset aIndexedString1  +
call sub_4110D7  +
add esp 8 +
mov eax [ebp+var_22C] +
push eax  +
call sub_4110CD  +
add esp 4 +
mov esi esp +
lea eax [ebp+var_34C] +
push eax  +
mov ecx [ebp+var_22C] +
push ecx  +
call dword_41A4DC  +
add esp 8 +
cmp esi esp +
call sub_411253  +
lea eax [ebp+var_34C] +
push eax  +
call sub_4113E3  +
add esp 4 +
mov esi esp +
mov eax [ebp+var_22C] +
push eax  +
call dword_41A4EC  +
add esp 4 +
cmp esi esp +
call sub_411253  +
mov esi esp +
mov eax [ebp+hModule] +
push eax  +
call ds:FreeLibrary  +
cmp esi esp +
call sub_411253  +
xor eax eax +
push edx  +
mov ecx ebp +
push eax  +
lea edx dword_41674C +
call sub_4111F4  +
pop eax  +
pop edx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call j_@__security_check_cookie@4  +
add esp 4D0h +
cmp ebp esp +
call sub_411253  +
mov esp ebp +
pop ebp  +
retn   +
***
