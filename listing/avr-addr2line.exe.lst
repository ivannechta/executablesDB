sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_49A4B8 1 +
mov ds:dword_49A4B4 1 +
mov ds:dword_49A4B0 1 +
mov ds:dword_49A4C0 1 +
jz loc_4010B0  +
mov ds:dword_496008 eax +
mov eax ds:dword_49A4C4 +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_46EB40  +
mov edx ds:dword_49A4C8 +
mov ds:dword_49A87C eax +
mov ds:dword_49A880 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_46ED80  +
cmp dword_4738D0 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_46EDF0 +
call sub_46EDE0  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_49A4CC +
mov dword ptr [esp+10h] offset dword_496000 +
mov dword ptr [esp+8] offset dword_496014 +
mov dword ptr [esp+4] offset dword_496018 +
mov ds:dword_496000 eax +
mov eax ds:dword_49A4D0 +
mov dword ptr [esp] offset dword_49601C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_496010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_46FB40  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_49A4C4 +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_49A884 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_49A888 +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_49A888 +
test eax eax +
jz loc_401481  +
mov ds:dword_496004 1 +
mov eax ds:dword_49A888 +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_494700 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_46F0F0  +
mov [esp+88h+var_88] offset sub_46EC30 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_49A4D4 eax +
mov [esp+88h+var_88] offset dword_401000 +
call near ptr off_4738D8  +
call sub_46F3C0  +
mov eax ds:_acmdln +
mov ds:dword_49A86C 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_49A868 eax +
mov ebx ds:dword_49A4C4 +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_473000 eax +
mov eax ds:dword_49601C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_496018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_496018 esi +
call sub_46F450  +
mov edx ds:dword_496014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_49601C +
mov ecx ds:dword_496014 +
mov edx ds:dword_496018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_471290  +
mov ecx ds:dword_496008 +
test ecx ecx +
mov ds:dword_49600C eax +
jz loc_4014AB  +
mov edx ds:dword_496004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_49600C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_49A888 +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_49A888 +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_49C008 +
mov [esp+88h+var_88] offset unk_49C000 +
call _initterm  +
test ebx ebx +
mov ds:dword_49A888 2 +
jnz loc_401261  +
xchg ebx ds:dword_49A884 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_49A888 1 +
mov [esp+88h+var_84] offset unk_49C018 +
mov [esp+88h+var_88] offset unk_49C00C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+80h+var_80] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_49A4C4 1 +
call sub_46F470  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_49A4C4 0 +
call sub_46F470  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_4738E4 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_4738E4 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax ds:dword_49A870 +
mov [esp+18h+var_14] offset aUsageSOptionSA +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call fprintf  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 35h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aConvertAddress +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 51h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIfNoAddressesA +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 29Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheOptionsAre@ +
call fwrite  +
mov eax ds:dword_49A870 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_4019C0  +
test esi esi +
jz loc_4015FF  +
mov [esp+18h+var_18] esi +
call exit  +
mov [esp+18h+var_10] offset aHttpWww_source +
mov [esp+18h+var_14] offset aReportBugsToS +
mov [esp+18h+var_18] ebx +
call fprintf  +
jmp loc_4015F7  +
***
mov edx ds:dword_496020 +
mov eax [esp+28h+arg_4] +
test edx edx +
jnz loc_401650  +
test byte ptr [eax+14h] 1 +
jz loc_401650  +
mov edx [eax+1Ch] +
mov ecx ds:dword_496034 +
cmp edx ecx +
ja loc_401650  +
mov ebx [eax+24h] +
add ebx edx +
cmp ecx ebx +
jb loc_401655  +
nop   +
add esp 28h +
pop ebx  +
retn   +
mov ebx [esp+28h+arg_0] +
sub ecx edx +
mov ebx [ebx+4] +
mov ebx [ebx+128h] +
mov [esp+28h+var_20] eax +
mov eax ds:dword_496038 +
mov [esp+28h+var_C] offset dword_496024 +
mov [esp+28h+var_10] offset dword_496028 +
mov [esp+28h+var_14] offset dword_49602C +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_18] offset dword_496030 +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_28] eax +
call ebx  +
mov ds:dword_496020 eax +
jmp loc_401650  +
***
mov esi eax +
push ebx  +
sub esp 10h +
mov [esp+14h+var_10] 2Fh +
mov [esp+14h+var_14] eax +
call strrchr  +
mov [esp+14h+var_10] 5Ch +
mov [esp+14h+var_14] esi +
mov edi eax +
call strrchr  +
test edi edi +
jz loc_401734  +
cmp eax edi +
ja loc_401730  +
sub edi esi +
lea eax [edi+0Bh] +
mov [esp+14h+var_14] eax +
call sub_458340  +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
mov ebx eax +
call memcpy  +
cmp edi 2 +
lea eax [edi+1] +
jz loc_401757  +
mov byte ptr [ebx+edi] 2Fh +
add eax ebx +
mov dword ptr [eax] 58587473h +
mov dword ptr [eax+4] 58585858h +
mov byte ptr [eax+8] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_4016E2  +
test eax eax +
mov edi eax +
jnz loc_4016E2  +
cmp byte ptr [esi] 0 +
jz loc_401745  +
cmp byte ptr [esi+1] 3Ah +
jz loc_401770  +
mov [esp+14h+var_14] 9 +
call sub_458340  +
mov ebx eax +
xor eax eax +
jmp loc_40170D  +
cmp byte ptr [ebx+1] 3Ah +
mov eax 3 +
jnz loc_401709  +
mov byte ptr [ebx+2] 2Eh +
mov al 4 +
mov edi 3 +
jmp loc_401709  +
mov edi esi +
add edi 1 +
jz loc_401745  +
jmp loc_4016E2  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
call sub_402790  +
mov [esp+24h+var_24] eax +
call sub_4027A0  +
mov esi eax +
mov eax ds:_iob +
lea edx [eax+20h] +
mov [esp+24h+var_24] edx +
call fflush  +
test ebx ebx +
jz loc_4017E0  +
mov eax ds:dword_49A870 +
mov [esp+24h+var_14] esi +
mov [esp+24h+var_18] ebx +
mov [esp+24h+var_20] offset aSSS +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax ds:dword_49A870 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_20] offset aSS_1 +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
sub esp 14h +
mov eax ds:_iob +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
add eax 20h +
mov [esp+14h+var_14] eax +
call fflush  +
mov eax ds:dword_49A870 +
mov [esp+14h+var_10] offset aS_1 +
mov [esp+14h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14h+var_14] eax +
call fprintf  +
mov eax ds:_iob +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
add eax 40h +
mov [esp+14h+var_14] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+14h+arg_0] 0Ah +
add eax 40h +
mov [esp+14h+arg_4] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp putc  +
***
sub esp 1Ch +
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_401830  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax ds:_iob +
mov ebx [esp+18h+arg_0] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
mov eax ds:dword_49A870 +
mov [esp+18h+var_14] offset aSMatchingForma +
mov [esp+18h+var_10] eax +
jmp loc_40197F  +
add ebx 4 +
mov [esp+18h+var_10] eax +
mov [esp+18h+var_14] offset aS_2 +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax [ebx] +
test eax eax +
jnz loc_401970  +
mov eax ds:_iob +
mov [esp+18h+var_18] 0Ah +
add eax 40h +
mov [esp+18h+var_14] eax +
call fputc  +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
test eax eax +
jz loc_401A33  +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset aSSupportedTarg +
mov [esp+10h+var_10] esi +
call fprintf  +
call sub_4069A0  +
mov edx [eax] +
mov edi eax +
lea ebx [eax+4] +
test edx edx +
jz loc_401A14  +
mov [esp+10h+var_8] edx +
add ebx 4 +
mov [esp+10h+var_C] offset aS_2 +
mov [esp+10h+var_10] esi +
call fprintf  +
mov edx [ebx-4] +
test edx edx +
jnz loc_4019F6  +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] 0Ah +
call fputc  +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
mov [esp+10h+var_4] esi +
mov [esp+10h+var_8] 12h +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset aSupportedTarge +
call fwrite  +
jmp loc_4019E6  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
test eax eax +
jz loc_401AD1  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aSSupportedArch +
mov [esp] esi +
call fprintf  +
call sub_407050  +
mov edx [eax] +
mov edi eax +
mov ebx eax +
test edx edx +
jz loc_401AB2  +
mov [esp+8] edx +
add ebx 4 +
mov dword ptr [esp+4] offset aS_2 +
mov [esp] esi +
call fprintf  +
mov edx [ebx] +
test edx edx +
jnz loc_401A95  +
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
mov [esp+20h] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
***
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aSupportedArchi +
call fwrite  +
jmp loc_401A86  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov dword ptr [esp+4] offset aGnuBinutils2_1 +
mov dword ptr [esp] offset aBfdHeaderFileV +
call printf  +
mov dword ptr [esp] 0 +
call sub_45E890  +
mov edi eax +
mov eax off_4733CC +
mov esi [eax] +
test esi esi +
jz loc_401C94  +
mov dword ptr [esp+20h] 4 +
mov dword ptr [esp+1Ch] 1 +
mov eax [esi] +
mov [esp] edi +
mov [esp+4] eax +
call sub_404780  +
mov edx offset aBigEndian +
mov ebx eax +
mov eax [esi+8] +
test eax eax +
jz loc_401B74  +
cmp eax 1 +
mov edx offset aEndiannessUnkn +
mov eax offset aLittleEndian +
cmovz edx eax +
mov ecx [esi+0Ch] +
mov eax offset aBigEndian +
test ecx ecx +
jz loc_401B90  +
cmp ecx 1 +
mov eax offset aEndiannessUnkn +
mov ecx offset aLittleEndian +
cmovz eax ecx +
mov ecx [esi] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov dword ptr [esp] offset aSHeaderSDataS +
mov [esp+4] ecx +
call printf  +
test ebx ebx +
jz loc_401C82  +
mov dword ptr [esp+4] 1 +
mov ebp 2 +
mov [esp] ebx +
call sub_405A30  +
test eax eax +
jnz loc_401BD8  +
jmp loc_401C64  +
add ebp 1 +
cmp ebp 5Ch +
jz loc_401C1E  +
mov eax [ebx+4] +
mov eax [eax+150h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_401BD0  +
mov [esp] ebp +
add ebp 1 +
mov dword ptr [esp+4] 0 +
call sub_407240  +
mov dword ptr [esp] offset aS_7 +
mov [esp+4] eax +
call printf  +
cmp ebp 5Ch +
jnz loc_401BD8  +
mov [esp] ebx +
call sub_4048E0  +
mov ecx [esp+20h] +
mov eax off_4733CC +
add dword ptr [esp+20h] 4 +
mov esi [eax+ecx] +
test esi esi +
jnz loc_401B48  +
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov ebx [esp+1Ch] +
mov eax 1 +
test ebx ebx +
jnz loc_401CA4  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
call sub_402790  +
cmp eax 5 +
jz loc_401C1E  +
mov eax [esi] +
mov [esp] eax +
call sub_401780  +
mov dword ptr [esp+1Ch] 0 +
jmp loc_401C1E  +
***
mov [esp] edi +
call sub_401780  +
mov dword ptr [esp+1Ch] 0 +
jmp loc_401C26  +
***
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov dword ptr [esp] offset aColumns +
call getenv  +
test eax eax +
jz loc_401FF8  +
mov [esp] eax +
call atoi  +
test eax eax +
mov [esp+3Ch] eax +
jz loc_401FF8  +
mov dword ptr [esp+38h] 1 +
mov dword ptr [esp+28h] 0 +
mov eax [esp+28h] +
mov esi off_4733CC +
lea ecx ds:0[eax*4] +
mov eax [esi+eax*4] +
mov [esp+2Ch] ecx +
test eax eax +
jz loc_401FE5  +
mov eax [eax] +
mov [esp] eax +
call strlen  +
mov ebp [esp+3Ch] +
lea ebx [eax+10h] +
mov eax [esp+28h] +
add eax 1 +
cmp ebx ebp +
mov edi eax +
mov [esp+20h] eax +
jge loc_401D50  +
mov eax [esp+2Ch] +
mov eax [esi+eax+4] +
test eax eax +
jnz loc_401D3A  +
jmp loc_401D50  +
add edi 1 +
mov eax [esi+edi*4] +
test eax eax +
jz loc_401D4C  +
mov eax [eax] +
mov [esp] eax +
call strlen  +
lea ebx [ebx+eax+1] +
cmp ebx ebp +
jl loc_401D30  +
mov [esp+20h] edi +
mov dword ptr [esp+8] offset asc_47480C +
mov dword ptr [esp+4] 0Fh +
mov dword ptr [esp] offset aS_8 +
call printf  +
mov eax [esp+28h] +
cmp [esp+20h] eax +
jle loc_401FD5  +
mov eax off_4733CC +
mov ecx [esp+2Ch] +
mov eax [eax+ecx] +
test eax eax +
jz loc_401FC7  +
mov ecx [esp+2Ch] +
mov ebx [esp+28h] +
mov edi [esp+20h] +
add ecx 4 +
mov [esp+34h] ecx +
mov esi ecx +
jmp loc_401DB4  +
mov eax off_4733CC +
mov eax [eax+esi] +
add esi 4 +
test eax eax +
jz loc_401DCD  +
mov eax [eax] +
add ebx 1 +
mov dword ptr [esp] offset aS_9 +
mov [esp+4] eax +
call printf  +
cmp ebx edi +
jnz loc_401DA5  +
mov dword ptr [esp] 0Ah +
call putchar  +
mov dword ptr [esp] 0 +
call sub_45E890  +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+1Ch] 2 +
mov [esp+24h] eax +
jmp loc_401E10  +
add dword ptr [esp+1Ch] 1 +
cmp dword ptr [esp+1Ch] 5Ch +
jz loc_401F92  +
mov eax [esp+1Ch] +
mov edi offset aUnknown_0 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_407240  +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_401E00  +
mov eax [esp+1Ch] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_407240  +
mov dword ptr [esp+4] 0Eh +
mov dword ptr [esp] offset aS_10 +
mov [esp+8] eax +
call printf  +
mov edi [esp+28h] +
cmp [esp+20h] edi +
jle loc_401F76  +
mov eax off_4733CC +
mov ecx [esp+2Ch] +
mov ebx [eax+ecx] +
test ebx ebx +
jz loc_401F76  +
mov ebp [esp+34h] +
jmp loc_401EE8  +
mov eax [esi+4] +
mov edx [esp+1Ch] +
mov eax [eax+150h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_401F34  +
mov eax [ebx] +
mov dword ptr [esp] offset aS_9 +
mov [esp+4] eax +
call printf  +
mov [esp] esi +
add edi 1 +
call sub_4048E0  +
cmp edi [esp+20h] +
jz loc_401F76  +
mov eax off_4733CC +
mov ebx [eax+ebp] +
add ebp 4 +
test ebx ebx +
jz loc_401F76  +
mov eax [ebx] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_404780  +
test eax eax +
mov esi eax +
jz loc_401F22  +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call sub_405A30  +
test eax eax +
jnz loc_401E88  +
call sub_402790  +
cmp eax 5 +
jz loc_401F34  +
mov eax [ebx] +
mov [esp] eax +
call sub_401780  +
mov dword ptr [esp+30h] 0 +
mov eax [ebx] +
mov [esp] eax +
call strlen  +
test eax eax +
jz loc_401F55  +
mov ebx eax +
mov dword ptr [esp] 2Dh +
call putchar  +
sub ebx 1 +
jnz loc_401F44  +
mov dword ptr [esp] 20h +
call putchar  +
test esi esi +
jnz loc_401EC0  +
add edi 1 +
cmp edi [esp+20h] +
jnz loc_401ED5  +
mov dword ptr [esp] 0Ah +
call putchar  +
add dword ptr [esp+1Ch] 1 +
cmp dword ptr [esp+1Ch] 5Ch +
jnz loc_401E10  +
mov edi [esp+24h] +
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov ecx [esp+30h] +
mov eax 0 +
test ecx ecx +
cmovnz eax [esp+38h] +
mov [esp+38h] eax +
mov eax [esp+20h] +
mov [esp+28h] eax +
jmp loc_401CDC  +
***
mov eax ecx +
add eax 4 +
mov [esp+34h] eax +
jmp loc_401DCD  +
***
mov eax [esp+2Ch] +
add eax 4 +
mov [esp+34h] eax +
jmp loc_401DCD  +
***
mov edx [esp+38h] +
xor eax eax +
test edx edx +
setz al  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+3Ch] 50h +
jmp loc_401CCC  +
***
push edi  +
push esi  +
push ebx  +
sub esp 90h +
mov eax [esp+0A8h] +
mov esi [esp+0A0h] +
mov ebx [esp+0A4h] +
test eax eax +
jnz loc_402052  +
mov eax [ebx] +
mov [esp] esi +
mov dword ptr [esp+4] offset aS_11 +
mov [esp+8] eax +
call fprintf  +
add esp 90h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+4] +
lea edx [esp+60h] +
mov eax [eax+0FCh] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_402032  +
mov eax [esp+84h] +
mov [esp+28h] eax +
lea eax [esp+28h] +
mov [esp] eax +
call ctime  +
test eax eax +
jz loc_402100  +
lea edx [eax+14h] +
add eax 4 +
lea edi [esp+38h] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a_12s_4s +
mov [esp] edi +
call sprintf  +
lea eax [esp+2Dh] +
mov [esp+4] eax +
movzx eax word ptr [esp+66h] +
mov [esp] eax +
call loc_402650  +
mov eax [esp+78h] +
mov [esp+18h] edi +
mov dword ptr [esp+4] offset aSLdLd6luS +
mov [esp] esi +
mov [esp+14h] eax +
movsx eax word ptr [esp+6Ch] +
mov byte ptr [esp+37h] 0 +
mov [esp+10h] eax +
movsx eax word ptr [esp+6Ah] +
mov [esp+0Ch] eax +
lea eax [esp+2Eh] +
mov [esp+8] eax +
call fprintf  +
jmp loc_402032  +
***
mov dword ptr [esp+38h] 6D69743Ch +
lea edi [esp+38h] +
mov dword ptr [esp+3Ch] 61642065h +
mov dword ptr [esp+40h] 63206174h +
mov dword ptr [esp+44h] 7572726Fh +
mov dword ptr [esp+48h] 3E7470h +
jmp loc_4020A9  +
***
jmp loc_402140  +
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
call sub_4016B0  +
mov [esp] eax +
call _mktemp  +
test eax eax +
mov ebx eax +
jz loc_402187  +
mov dword ptr [esp+8] 180h +
mov dword ptr [esp+4] 502h +
mov [esp] eax +
call _open  +
cmp eax 0FFFFFFFFh +
jz loc_402190  +
mov [esp] eax +
call _close  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_402182  +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_402182  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
call sub_4016B0  +
mov [esp] eax +
call _mktemp  +
test eax eax +
mov ebx eax +
jz loc_4021D0  +
mov [esp] eax +
call _mkdir  +
test eax eax +
jnz loc_4021D0  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 28h +
pop ebx  +
retn   +
***
sub esp 44h +
mov ebx [esp+44h+arg_0] +
lea eax [esp+44h+var_34] +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] ebx +
call ds:_stati64  +
test eax eax +
js loc_402273  +
movzx eax [esp+44h+var_2E] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_4022D0  +
mov edx [esp+44h+var_18] +
mov eax [esp+44h+var_1C] +
test edx edx +
js loc_4022EF  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
mov esi ds:__imp__errno +
call esi  +
cmp dword ptr [eax] 2 +
jz loc_4022B0  +
call esi  +
mov eax [eax] +
mov [esp+44h+var_44] eax +
call strerror  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aWarningCouldNo +
mov [esp+44h+var_3C] eax +
call sub_4018E0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40226D  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aSNoSuchFile +
call sub_4018E0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40226D  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aWarningSIsNotA +
call sub_4018E0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40226D  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aWarningSHasNeg +
call sub_4018E0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40226D  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_4023D4  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_4023CA  +
mov esi [eax] +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebp [ebx] +
mov [esp+1Ch+var_1C] ebp +
mov edi eax +
call strlen  +
lea edi [edi+eax+3] +
mov eax ds:dword_496060 +
cmp edi eax +
jbe loc_4023A4  +
test eax eax +
jnz loc_4023B0  +
mov eax edi +
shr eax 1 +
add edi eax +
mov [esp+1Ch+var_1C] edi +
mov ds:dword_496060 edi +
call sub_407460  +
test eax eax +
mov ds:dword_49605C eax +
jz loc_4023C0  +
mov edx [ebx+8Ch] +
mov ebp [ebx] +
mov esi [edx] +
mov [esp+1Ch+var_10] ebp +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] offset aSS_2 +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
mov eax ds:dword_49605C +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_49605C +
jmp loc_40237F  +
mov eax ds:dword_49605C +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_402358  +
mov ds:dword_496060 0 +
mov eax [ebx] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] 25Eh +
mov [esp+1Ch+var_18] offset a____BinutilsBi +
mov [esp+1Ch+var_1C] offset aAbfdNull +
call loc_470230  +
jmp loc_402323  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov edi [esp+38h] +
mov esi [esp+3Ch] +
call sub_402790  +
mov [esp] eax +
call sub_4027A0  +
mov ebp eax +
mov eax ds:_iob +
add eax 20h +
mov [esp] eax +
call fflush  +
mov eax ds:_iob +
add eax 40h +
mov [esp+4] eax +
mov eax ds:dword_49A870 +
mov [esp] eax +
call fputs  +
mov eax [esp+34h] +
test eax eax +
jz loc_402500  +
test ebx ebx +
jz loc_402521  +
test edi edi +
jz loc_402500  +
mov eax [edi] +
test eax eax +
jz loc_402500  +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aSS_3 +
add eax 40h +
mov [esp] eax +
call fprintf  +
test esi esi +
jz loc_4024D9  +
mov eax ds:_iob +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_474941 +
add eax 40h +
mov [esp+0Ch] eax +
call fwrite  +
lea eax [esp+40h] +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+4] esi +
add eax 40h +
mov [esp] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aS_12 +
add eax 40h +
mov [esp] eax +
call fprintf  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aS_13 +
add eax 40h +
mov [esp] eax +
call fprintf  +
jmp loc_402491  +
***
mov eax [esp+34h] +
mov [esp] eax +
call sub_402310  +
mov ebx eax +
jmp loc_40245F  +
***
mov eax [esp+4] +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_402596  +
cmp dl 2Fh +
jz loc_402596  +
test dl dl +
jnz loc_402590  +
test dl dl +
jz loc_402586  +
cmp dl 2Eh +
lea esi [esi+0] +
jz loc_4025B7  +
cmp dl 2Fh +
jz loc_402599  +
cmp dl 5Ch +
jnz loc_40257C  +
lea esi [esi+0] +
jmp loc_402599  +
cmp dl 5Ch +
jz loc_4025A0  +
cmp dl 2Fh +
jz loc_4025A0  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_402572  +
mov eax 1 +
retn   +
***
cmp byte ptr [eax+1] 3Ah +
jnz loc_402555  +
xor eax eax +
retn   +
***
movzx edx byte ptr [eax] +
lea esi [esi+0] +
cmp dl 2Fh +
jnz loc_4025E9  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_4025A5  +
cmp dl 2Fh +
jz loc_4025A5  +
jmp loc_402555  +
***
movzx edx byte ptr [eax+1] +
cmp dl 2Eh +
jz loc_4025CD  +
add eax 1 +
test dl dl +
jnz loc_402562  +
mov eax 1 +
retn   +
***
movzx edx byte ptr [eax+2] +
lea ecx [eax+2] +
test dl dl +
jz loc_402596  +
cmp dl 2Fh +
jz loc_402596  +
cmp dl 5Ch +
jz loc_402596  +
mov eax ecx +
jmp loc_402562  +
***
cmp dl 5Ch +
jz loc_4025A5  +
nop   +
jmp loc_402555  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset aGnuBinutils2_0 +
mov [esp+1Ch+var_1C] offset aGnuSS +
mov [esp+1Ch+var_18] eax +
call printf  +
mov [esp+1Ch+var_1C] offset aCopyrightC2015 +
call puts  +
mov [esp+1Ch+var_1C] offset aThisProgramIsF +
call puts  +
mov [esp+1Ch+var_1C] 0 +
call exit  +
push ebx  +
mov edx [esp+8] +
mov ecx 64h +
mov eax [esp+0Ch] +
mov ebx edx +
and ebx 0F000h +
cmp ebx 4000h +
jz loc_40269B  +
cmp ebx 3000h +
mov ecx 62h +
jz loc_40269B  +
cmp ebx 2000h +
mov ecx 63h +
jz loc_40269B  +
cmp ebx 1000h +
mov ecx 70h +
mov ebx 2Dh +
cmovnz ecx ebx +
mov [eax] cl +
mov ecx edx +
and ecx 100h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+1] cl +
mov ecx edx +
and ecx 80h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB6h +
add ecx 77h +
mov [eax+2] cl +
mov ecx edx +
and ecx 40h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB5h +
add ecx 78h +
mov [eax+3] cl +
mov ecx edx +
and ecx 20h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+4] cl +
mov ecx edx +
and ecx 10h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB6h +
add ecx 77h +
mov [eax+5] cl +
mov ecx edx +
and ecx 8 +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB5h +
add ecx 78h +
mov [eax+6] cl +
mov ecx edx +
and ecx 4 +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+7] cl +
mov ecx edx +
and ecx 2 +
cmp ecx 1 +
sbb ecx ecx +
and edx 1 +
and ecx 0FFFFFFB6h +
add ecx 77h +
cmp edx 1 +
sbb edx edx +
and edx 0FFFFFFB5h +
add edx 78h +
mov [eax+8] cl +
mov [eax+9] dl +
pop ebx  +
retn   +
***
mov eax off_4730E4 +
jmp eax  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
retn   +
***
mov eax [esp+28h+arg_0] +
cmp eax 14h +
jz loc_4027D0  +
cmp eax 1 +
jz loc_402811  +
cmp eax 15h +
mov edx 15h +
cmovbe edx eax +
mov eax ds:off_474E40[edx*4] +
add esp 28h +
pop ebx  +
retn   +
mov eax ds:dword_496068 +
mov [esp+28h+var_28] eax +
call sub_4027A0  +
mov ebx eax +
mov eax ds:dword_49606C +
mov eax [eax] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] offset aErrorReadingSS +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_470310  +
cmp eax 0FFFFFFFFh +
mov eax ebx +
cmovnz eax [esp+28h+var_C] +
add esp 28h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call sub_45E980  +
jmp loc_4027C4  +
***
mov eax ds:_iob +
mov ebx [esp+18h+arg_0] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
test ebx ebx +
mov eax ds:dword_496070 +
jz loc_402856  +
cmp byte ptr [ebx] 0 +
jnz loc_402890  +
mov [esp+18h+var_18] eax +
call sub_4027A0  +
mov [esp+18h+var_14] offset aS_14 +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
mov [esp+18h+var_18] eax +
call sub_4027A0  +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aSS_4 +
mov [esp+18h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
jmp loc_40287A  +
***
mov eax [esp+arg_0] +
mov ds:dword_496064 eax +
retn   +
***
mov eax off_4730E4 +
retn   +
***
mov edx [esp+4] +
mov eax off_4730E0 +
mov off_4730E0 edx +
retn   +
***
mov eax off_4730E0 +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [eax+48h] edx +
mov edx [esp+10h] +
mov [eax+4Ch] edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] offset aGnuBinutils2_2 +
mov [esp+1Ch+var_1C] offset aBfdSAssertionF +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] eax +
call off_4730E0  +
add esp 1Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_4029AD  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternalEr +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_4730E4  +
mov [esp+2Ch+var_2C] offset aPleaseReportTh +
call off_4730E4  +
mov [esp+2Ch+var_2C] 1 +
call _exit  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternal_0 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_4730E4  +
jmp loc_402994  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax 14h +
mov ds:dword_496070 eax +
jz loc_4029F5  +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov ds:dword_49606C eax +
mov eax [esp+1Ch+arg_8] +
cmp eax 13h +
mov ds:dword_496068 eax +
jbe loc_4029F1  +
mov [esp+1Ch+var_14] offset aBfd_set_error +
mov [esp+1Ch+var_18] 203h +
mov [esp+1Ch+var_1C] offset a____BinutilsBf +
call sub_402960  +
nop   +
lea esi [esi+0] +
sub esp 1Ch +
mov edx [esp+38h+var_18] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_402A50  +
mov eax [edx+4] +
mov eax [eax+140h] +
add esp 1Ch +
jmp eax  +
mov [esp+38h+var_38] 5 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov edx [esp+14h+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_402A94  +
mov eax [edx+4] +
mov eax [eax+144h] +
add esp 14h +
pop ebx  +
pop esi  +
jmp eax  +
mov [esp+14h+var_14] 5 +
call sub_4029E0  +
add esp 14h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov ecx [esp+24h] +
movzx edx byte ptr [eax+28h] +
mov ebx edx +
and ebx 7 +
cmp bl 1 +
jnz loc_402B07  +
and edx 8 +
jnz loc_402AF4  +
mov edx [eax+28h] +
mov ebx ecx +
and ebx 3FFFFh +
shl ebx 5 +
and edx 0FF80001Fh +
or edx ebx +
mov [eax+28h] edx +
mov eax [eax+4] +
mov edx [eax+10h] +
and edx ecx +
cmp edx ecx +
jz loc_402B20  +
mov dword ptr [esp] 5 +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 41Ch +
mov eax ds:_iob +
mov edi [esp+41Ch+arg_0] +
add eax 20h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
mov eax ds:dword_496064 +
test eax eax +
jz loc_402E1C  +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
mov [esp+41Ch+var_418] offset aS +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fprintf  +
lea eax [esp+41Ch+arg_4] +
mov ebp 3E7h +
mov [esp+41Ch+var_41C] edi +
mov [esp+41Ch+var_400] eax +
call strlen  +
sub ebp eax +
cmp ebp 3E8h +
ja loc_402E89  +
lea eax [esp+41Ch+var_3F4] +
mov ecx edi +
mov esi edi +
mov [esp+41Ch+var_408] eax +
lea esi [esi+0] +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] ecx +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_402CFA  +
movzx eax byte ptr [eax+1] +
test al al +
jz loc_402CFA  +
sub eax 41h +
cmp al 1 +
lea ecx [ebx+2] +
ja loc_402BB0  +
mov esi ebx +
sub esi edi +
mov [esp+41Ch+var_418] edi +
mov edi [esp+41Ch+var_408] +
mov [esp+41Ch+var_414] esi +
mov [esp+41Ch+var_404] ecx +
mov [esp+41Ch+var_41C] edi +
call memcpy  +
mov ecx [esp+41Ch+var_404] +
test ebp ebp +
lea edx [edi+esi] +
mov edi ecx +
jnz loc_402C21  +
lea eax [edx+2] +
mov byte ptr [edx] 2Ah +
lea esi [esp+41Ch+var_3F4] +
mov [esp+41Ch+var_408] eax +
mov byte ptr [edx+1] 2Ah +
mov byte ptr [edx+2] 0 +
jmp loc_402BB0  +
mov eax [esp+41Ch+var_400] +
cmp byte ptr [ebx+1] 42h +
lea ebx [eax+4] +
mov eax [eax] +
jz loc_402D7E  +
test eax eax +
jz loc_402E95  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_402C5E  +
mov ecx [ecx+4] +
mov ecx [ecx+4] +
cmp ecx 5 +
jz loc_402DC5  +
cmp ecx 2 +
jz loc_402DE5  +
mov eax [eax] +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_414] offset aS_6 +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_408] edx +
call sub_402760  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
mov [esp+41Ch+var_41C] edx +
add ebp 2 +
xor esi esi +
mov [esp+41Ch+var_408] edx +
call strlen  +
mov edx [esp+41Ch+var_408] +
sub ebp eax +
lea ebx [edx+eax] +
mov eax edx +
jmp loc_402CA8  +
add eax 1 +
add esi 1 +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] eax +
call strchr  +
test eax eax +
jnz loc_402CA2  +
lea eax [ebx+esi] +
cmp ebp esi +
mov [esp+41Ch+var_408] eax +
jb loc_402D55  +
sub ebp esi +
test esi esi +
jnz loc_402CD6  +
jmp loc_402CEF  +
sub ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 25h +
mov [ebx+esi] al +
jnz loc_402CD3  +
sub esi 1 +
sub ebx 1 +
mov byte ptr [ebx+esi+1] 25h +
test esi esi +
jnz loc_402CD6  +
mov ecx edi +
lea esi [esp+41Ch+var_3F4] +
jmp loc_402BB0  +
lea eax [esp+41Ch+var_3F4] +
cmp esi eax +
jz loc_402E49  +
mov eax [esp+41Ch+var_400] +
mov [esp+41Ch+var_418] esi +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+41Ch+var_41C] 0Ah +
add eax 40h +
mov [esp+41Ch+var_418] eax +
call fputc  +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
add esp 41Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
sub eax ebp +
mov edx eax +
neg edx  +
add [esp+41Ch+var_408] edx +
add ebx edx +
xor edx edx +
cmp byte ptr [ebx+eax-1] 25h +
setz dl  +
sub esi edx +
sub eax 1 +
jnz loc_402D63  +
mov byte ptr [ebx] 0 +
xor ebp ebp +
jmp loc_402CCD  +
test eax eax +
jz loc_402E6D  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_402C5E  +
mov esi [eax] +
mov eax [ecx] +
mov [esp+41Ch+var_414] offset aSS +
mov [esp+41Ch+var_40C] esi +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_408] edx +
call sub_402760  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
jmp loc_402C84  +
mov ecx [eax+8Ch] +
mov esi [ecx+7Ch] +
test esi esi +
jz loc_402C5E  +
test byte ptr [eax+17h] 2 +
jnz loc_402C5E  +
mov ecx [ecx+74h] +
jmp loc_402E00  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_402C5E  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jz loc_402C5E  +
mov ecx [ecx] +
test ecx ecx +
jz loc_402C5E  +
mov eax [eax] +
mov [esp+41Ch+var_40C] ecx +
mov [esp+41Ch+var_414] offset aSS_0 +
mov [esp+41Ch+var_410] eax +
jmp loc_402DA8  +
mov eax ds:_iob +
mov [esp+41Ch+var_414] 5 +
mov [esp+41Ch+var_418] 1 +
mov [esp+41Ch+var_41C] offset aBfd +
add eax 40h +
mov [esp+41Ch+var_410] eax +
call fwrite  +
jmp loc_402B7A  +
mov [esp+41Ch+var_41C] edi +
call strlen  +
mov [esp+41Ch+var_418] edi +
add eax 1 +
mov [esp+41Ch+var_414] eax +
mov eax [esp+41Ch+var_408] +
mov [esp+41Ch+var_41C] eax +
call memcpy  +
jmp loc_402D06  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2BAh +
mov [esp+41Ch+var_41C] offset a____BinutilsBf +
call sub_402960  +
mov [esp+41Ch+var_41C] 1 +
call _exit  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2CAh +
mov [esp+41Ch+var_41C] offset a____BinutilsBf +
call sub_402960  +
jmp loc_402EC0  +
sub esp 1Ch +
mov eax [esp+438h+var_418] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_402EE7  +
mov [esp+438h+var_438] eax +
call sub_407180  +
cmp eax 21h +
sbb eax eax +
add esp 1Ch +
and eax 0FFFFFFE0h +
add eax 40h +
retn   +
mov eax [edx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_402FE7  +
mov edx [eax] +
mov ecx 9 +
mov edi offset aCoffGo32 +
mov eax 1 +
mov esi edx +
cmps   +
setnbe bl  +
setb cl  +
cmp bl cl +
jz loc_402FE0  +
mov edi offset aPeI386 +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_402FE0  +
mov edi offset aPeiI386 +
mov ecx 9 +
mov esi edx +
cmps   +
jz loc_402FE0  +
mov edi offset aPeX8664 +
mov ecx 0Ah +
mov esi edx +
cmps   +
jz loc_402FE0  +
mov edi offset aPeiX8664 +
mov ecx 0Bh +
mov esi edx +
cmps   +
jz loc_402FE0  +
mov edi offset aPeArmWinceLitt +
mov ecx 14h +
mov esi edx +
cmps   +
jz loc_402FE0  +
mov edi offset aPeiArmWinceLit +
mov ecx 15h +
mov esi edx +
cmps   +
jz loc_402FE0  +
mov edi offset aAixcoffRs6000 +
mov ecx 0Fh +
mov esi edx +
cmps   +
jz loc_402FE0  +
mov esi edx +
mov edi offset aMachO +
mov ecx 6 +
cmps   +
setnbe al  +
setb dl  +
sub eax edx +
movsx eax al +
test eax eax +
jz loc_402FE0  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
or eax 0FFFFFFFFh +
nop   +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
shr al 7 +
movzx eax al +
retn   +
***
jmp sub_403010  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov [eax+74h] edx +
mov eax 1 +
retn   +
***
jmp loc_403030  +
mov ecx [esp+4] +
xor eax eax +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 1 +
jz loc_403044  +
retn   +
***
mov edx [ecx+4] +
mov edx [edx+4] +
cmp edx 3 +
jz loc_403061  +
cmp edx 5 +
jnz locret_403042  +
mov eax [ecx+0A0h] +
mov eax [eax+210h] +
retn   +
***
mov eax [ecx+0A0h] +
mov eax [eax+1Ch] +
retn   +
***
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jz loc_403120  +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+4] +
cmp eax 3 +
jz loc_403144  +
cmp eax 5 +
jnz loc_403116  +
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+20Ch] ecx +
add esp 1Ch +
retn   +
***
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+18h] ecx +
jmp loc_403116  +
***
push esi  +
push ebx  +
mov ecx [esp+arg_8] +
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
mov esi [esp+arg_C] +
cmp dword ptr [ecx+4] 1 +
mov edi [esp+arg_10] +
mov eax edx +
mov ebp [esp+arg_14] +
jnz loc_4031B2  +
mov eax [ecx+10h] +
mov eax [eax+94h] +
test eax eax +
cmovz eax edx +
mov eax [eax+4] +
mov eax [eax+15Ch] +
mov [esp+arg_14] ebp +
mov [esp+arg_10] edi +
mov [esp+arg_C] esi +
mov [esp+arg_8] ecx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_403200  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+40h] +
mov [esp] ebx +
lea edi ds:0FFFFFFFCh[eax*4] +
lea eax [edi+2Ch] +
mov [esp+4] eax +
call sub_404C60  +
test eax eax +
mov esi eax +
jz loc_4032D0  +
mov eax [esp+24h] +
movzx edx byte ptr [esi+20h] +
movzx ecx byte ptr [esp+28h] +
mov [esi+4] eax +
mov eax [esp+2Ch] +
and edx 0FFFFFFFCh +
and ecx 1 +
or edx ecx +
movzx ecx byte ptr [esp+38h] +
mov [esi+8] eax +
mov eax [esp+34h] +
and ecx 1 +
mov [esi+0Ch] eax +
movzx eax byte ptr [esp+30h] +
shl ecx 4 +
and eax 1 +
add eax eax +
or edx eax +
movzx eax byte ptr [esp+3Ch] +
and edx 0FFFFFFCFh +
or edx ecx +
and eax 1 +
shl eax 5 +
or edx eax +
mov eax [esp+40h] +
mov [esi+20h] dl +
test eax eax +
mov [esi+24h] eax +
jnz loc_4032B0  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov ecx [eax] +
test ecx ecx +
jnz loc_403297  +
jmp loc_4032D7  +
mov ecx edx +
mov edx [ecx] +
test edx edx +
jnz loc_403295  +
mov [ecx] esi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+44h] +
lea eax [esi+28h] +
add edi 4 +
mov [esp+8] edi +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
jmp loc_403281  +
***
xor eax eax +
jmp loc_4031F8  +
***
mov ecx eax +
lea esi [esi+0] +
jmp loc_40329D  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx +
mov [esp+arg_0] eax +
jmp sprintf  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx +
mov [esp+arg_0] eax +
jmp fprintf  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_4067D0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4033CE  +
cmp dword ptr [edx+4] 5 +
jnz loc_4033CE  +
mov eax [edx+1B0h] +
mov eax [eax+10h] +
add esp 1Ch +
retn   +
***
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_4067D0  +
test eax eax +
mov edx eax +
jnz loc_403412  +
jmp loc_403430  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_403430  +
cmp edx eax +
jz loc_403430  +
cmp dword ptr [edx+4] 5 +
jnz loc_403404  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+10h] ebx +
test edx edx +
jnz loc_40340E  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_4067D0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40346E  +
cmp dword ptr [edx+4] 5 +
jnz loc_40346E  +
mov eax [edx+1B0h] +
mov eax [eax+18h] +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov ebx [esp+24h] +
mov [esp] eax +
call sub_4067D0  +
test eax eax +
mov edx eax +
jnz loc_4034B2  +
jmp loc_4034D0  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_4034D0  +
cmp edx eax +
jz loc_4034D0  +
cmp dword ptr [edx+4] 5 +
jnz loc_4034A4  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+18h] ebx +
test edx edx +
jnz loc_4034AE  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jz loc_4036D3  +
mov ecx [esp+2Ch+arg_4] +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_403653  +
mov eax [eax+4] +
cmp dl [eax+18h] +
jz loc_4036E7  +
mov [esp+2Ch+var_14] 0 +
cmp dl 2Eh +
jnz loc_40370A  +
mov ebp [esp+2Ch+arg_4] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
cmp al 24h +
jz loc_403523  +
cmp al 2Eh +
jz loc_403523  +
mov eax ebp +
mov edi ebp +
sub eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_28] 40h +
mov [esp+2Ch+var_2C] ebp +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_403670  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp+2Ch+var_2C] eax +
call sub_407460  +
test eax eax +
mov esi eax +
jz loc_403703  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [esp+2Ch+arg_8] +
mov byte ptr [esi+edi] 0 +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] eax +
call sub_459C90  +
mov [esp+2Ch+var_2C] esi +
mov edi eax +
call free  +
test edi edi +
jz loc_403690  +
test ebx ebx +
jnz loc_4035B9  +
mov edx [esp+2Ch+var_18] +
mov eax edi +
test edx edx +
jz loc_40364B  +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov esi eax +
add eax edi +
test ebx ebx +
cmovz ebx eax +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] esi +
add ecx esi +
mov esi ecx +
add eax 1 +
mov [esp+2Ch+var_14] eax +
add eax ecx +
mov [esp+2Ch+var_2C] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_403641  +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] edi +
lea eax [ebp+edx+0] +
mov edx [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] edx +
call memcpy  +
mov ecx [esp+2Ch+var_14] +
mov eax esi +
add eax ebp +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] ecx +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
call free  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_14] 0 +
mov edi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_18] 0 +
mov ebp edi +
jmp loc_40353E  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call sub_459C90  +
mov edi eax +
test edi edi +
jnz loc_4035A7  +
lea esi [esi+0] +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_403703  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
lea ebx [eax+1] +
mov [esp+2Ch+var_2C] ebx +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_403703  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcpy  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_14] 0 +
movzx edx byte ptr [eax] +
jmp loc_403516  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_14] 1 +
movzx edx byte ptr [eax+1] +
add eax 1 +
mov [esp+2Ch+arg_4] eax +
jmp loc_403516  +
xor eax eax +
jmp loc_40364B  +
cmp dl 24h +
jz loc_40351F  +
jmp loc_40365B  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov edi [esp+28h] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
test ah 40h +
jz loc_403865  +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_403756  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
test eax 20000h +
jz loc_403830  +
mov ecx [edx+1B0h] +
mov eax [edi+8Ch] +
or dword ptr [eax+8] 800h +
mov eax [ecx+174h] +
cmp byte ptr [eax+0Ch] 1 +
mov eax [edx+30h] +
mov [esp+4] esi +
mov dword ptr [esp] 1 +
jz loc_4037F0  +
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [ebx+4] +
lea edx [esi+8] +
add esi 10h +
mov eax [eax+24h] +
mov [esp+8] edx +
mov ecx [edi+24h] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+24h] +
mov eax 1 +
mov [esp+28h] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+20h] eax +
sar eax 1Fh +
mov [esp+24h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
***
call eax  +
mov eax [ebx+4] +
lea ecx [esi+4] +
mov edx [edi+24h] +
add esi 8 +
mov eax [eax+30h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+30h] +
mov eax 1 +
mov [esp+24h] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+20h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
***
mov eax [edi+8Ch] +
add esi 4 +
and dword ptr [eax+8] 0FFFFF7FFh +
mov dword ptr [esi-4] 42494C5Ah +
mov [esp+28h] esi +
mov eax [edi+24h] +
mov dword ptr [esp+24h] 0 +
mov [esp+20h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_407AD0  +
***
mov dword ptr [esp+8] offset aBfd_update_com +
mov dword ptr [esp+4] 7E8h +
mov dword ptr [esp] offset a____BinutilsBf +
call sub_402960  +
jmp loc_403890  +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4038B0  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ecx [esp+28h] +
mov edx [ecx+8Ch] +
test byte ptr [edx+9] 8 +
jz loc_4038A3  +
mov edx [eax+1B0h] +
mov eax [eax+28h] +
mov edx [edx+174h] +
cmp byte ptr [edx+0Ch] 1 +
jz loc_403925  +
mov edi [esp+24h] +
mov [esp] edi +
call eax  +
mov edi [esp+24h] +
lea edx [edi+8] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp] edx +
call eax  +
mov edi eax +
mov eax [ebx+4] +
mov edx [eax+1Ch] +
mov eax [esp+24h] +
add eax 10h +
mov [esp] eax +
call edx  +
cmp esi 1 +
jnz loc_4038A3  +
mov ecx [esp+28h] +
mov ecx [ecx+40h] +
shl esi cl +
cmp eax esi +
jnz loc_4038A3  +
mov eax [esp+2Ch] +
mov [eax] edi +
mov eax 1 +
jmp loc_4038A5  +
***
mov esi [esp+24h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
lea edx [ecx+4] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp] edx +
call eax  +
mov ecx [esp+24h] +
lea edx [ecx+8] +
mov edi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp] edx +
call eax  +
jmp loc_403906  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
test byte ptr [ebx+2Ah] 10h +
jnz loc_403A4F  +
mov ebp [ebx+4] +
cmp dword ptr [ebp+4] 5 +
jz loc_403A60  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_403A4F  +
mov eax [eax+1B0h] +
mov edx [ebp+1B0h] +
mov eax [eax+174h] +
mov edx [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+0Ch] al +
jz loc_403A4F  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call near ptr dword_403960  +
test eax eax +
mov edi eax +
jz loc_403A4F  +
mov eax [esp+4Ch] +
cmp edi 0Ch +
mov esi [eax] +
mov eax [ebp+28h] +
mov [esp] esi +
jz loc_403B64  +
call eax  +
mov eax [ebx+4] +
lea ebp [esi+8] +
mov eax [eax+1Ch] +
mov [esp] ebp +
call eax  +
lea edx [esi+10h] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp] edx +
call eax  +
mov ecx [esp+44h] +
mov ebx [ecx+24h] +
mov [esp+18h] eax +
sub ebx edi +
lea ecx [ebx+0Ch] +
mov [esp+14h] ecx +
mov ecx [esp+48h] +
mov eax [ecx+4] +
mov eax [eax+30h] +
mov [esp+4] esi +
mov dword ptr [esp] 1 +
call eax  +
mov ecx [esp+48h] +
lea edx [esi+4] +
add esi 0Ch +
mov eax [ecx+4] +
mov ecx [esp+1Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov ecx [esp+48h] +
mov eax [ecx+4] +
mov ecx [esp+18h] +
mov eax [eax+30h] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
mov eax [esp+4Ch] +
mov [esp+8] ebx +
add edi [eax] +
mov [esp] esi +
mov [esp+4] edi +
call memmove  +
mov eax [esp+50h] +
mov esi 1 +
mov ecx [esp+14h] +
mov [eax] ecx +
jmp loc_403A4F  +
***
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
add esi 8 +
mov eax [eax+28h] +
mov [esp] edx +
call eax  +
mov ebp eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov edi eax +
mov eax [esp+44h] +
mov eax [eax+24h] +
lea esi [eax-0Ch] +
add eax 0Ch +
mov [esp] eax +
mov [esp+14h] eax +
call sub_407460  +
test eax eax +
mov ebx eax +
jz loc_403C4F  +
mov eax [esp+48h] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+4] ebx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+8] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+10h] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] edi +
mov dword ptr [esp+4] 0 +
call eax  +
mov edi [esp+4Ch] +
lea eax [ebx+18h] +
mov edi [edi] +
mov [esp+8] esi +
mov [esp] eax +
lea edx [edi+0Ch] +
mov [esp+4] edx +
mov [esp+18h] edi +
call memcpy  +
mov eax [esp+4Ch] +
mov eax [eax] +
mov [esp] eax +
call free  +
mov eax [esp+4Ch] +
mov [eax] ebx +
jmp loc_403B50  +
***
xor esi esi +
jmp loc_403A4F  +
***
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov edx [eax+14h] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_C] +
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx [esp+arg_8] +
cmp edx 1 +
mov esi [eax+8] +
jz loc_403CC0  +
cmp edx 2 +
mov eax 0FFFFFFFFh +
jz loc_403CAA  +
xor eax eax +
test edx edx +
jz loc_403CB0  +
pop ebx  +
pop esi  +
retn   +
mov [esi+10h] ecx +
xor eax eax +
mov [esi+14h] ebx +
pop ebx  +
pop esi  +
retn   +
add [esi+10h] ecx +
adc [esi+14h] ebx +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 20h +
mov ecx [esp+20h+arg_0] +
mov ebx [ecx+8] +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov esi [ebx+4] +
mov edi [ebx] +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_8] +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_C] +
mov [esp+20h+var_20] ecx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] eax +
mov eax [esp+20h+arg_4] +
mov [esp+20h+var_10] edx +
mov [esp+20h+var_18] eax +
call esi  +
test edx edx +
js loc_403D1B  +
add [ebx+10h] eax +
adc [ebx+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
retn   +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+8] +
mov edx [ecx+8] +
test edx edx +
jz loc_403D5F  +
mov eax [ecx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call edx  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_4] +
mov ebp [esp+28h+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [ebp+8] +
jnz loc_403DF8  +
test edi 2 +
jnz loc_403E08  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_403DD0  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_403DD8  +
mov byte ptr [edi] 0 +
mov edx [ebx+0Ch] +
xor eax eax +
test edx edx +
jz loc_403DF0  +
mov eax [ebx] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_403DB9  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_403DB9  +
***
sub esp 18h +
mov eax [eax+0A8h] +
test eax eax +
jz loc_403E49  +
lea eax [ebx+48h] +
mov [esp+18h+var_18] eax +
call sub_408A50  +
mov eax [ebx+0A8h] +
mov [esp+18h+var_18] eax +
call sub_45EB40  +
mov eax [ebx] +
test eax eax +
jz loc_403E57  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+88h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_403F40  +
test edi edi +
jz loc_403F20  +
mov [esp+2Ch+var_28] offset a_gnu_debuglink +
mov [esp+2Ch+var_2C] ebx +
call sub_405CC0  +
test eax eax +
mov esi eax +
jz loc_403EDD  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_406620  +
test eax eax +
jnz loc_403EE7  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_403EDD  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebp [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebp +
call sub_470390  +
add eax 4 +
and eax 0FFFFFFFCh +
cmp eax [esi+24h] +
jnb loc_403EDD  +
mov edx [ebx+4] +
add eax [esp+2Ch+var_10] +
mov edx [edx+28h] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov [edi] eax +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 49Fh +
mov [esp+2Ch+var_2C] offset a____Binutils_5 +
call sub_402930  +
jmp loc_403E9F  +
mov [esp+2Ch+var_28] 49Eh +
mov [esp+2Ch+var_2C] offset a____Binutils_5 +
call sub_402930  +
jmp loc_403E97  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_403F96  +
mov [esp+18h+var_14] offset aRb_0 +
mov [esp+18h+var_18] ebx +
call j_j_fopen  +
xor edx edx +
test eax eax +
jz loc_403F8F  +
mov [esp+18h+var_18] eax +
call fclose  +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [esp+18h+var_14] 529h +
mov [esp+18h+var_18] offset a____Binutils_5 +
call sub_402930  +
jmp loc_403F6C  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_40405E  +
mov [esp+14h+var_10] offset aRb_0 +
mov [esp+14h+var_14] ebx +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_404056  +
xor ebx ebx +
lea esi [esi+0] +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_C] 2000h +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] offset unk_4980A0 +
call fread  +
test eax eax +
jz loc_40403F  +
add eax offset unk_4980A0 +
mov edx ebx +
cmp eax offset unk_4980A0 +
not edx  +
jbe loc_404039  +
mov ecx offset unk_4980A0 +
lea esi [esi+0] +
mov ebx edx +
add ecx 1 +
xor bl [ecx-1] +
shr edx 8 +
movzx ebx bl +
xor edx ds:dword_474F00[ebx*4] +
cmp ecx eax +
jnz loc_404020  +
not edx  +
mov ebx edx +
jmp loc_403FE0  +
mov [esp+14h+var_14] esi +
call fclose  +
xor eax eax +
cmp ebx [esp+14h+arg_4] +
setz al  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 508h +
mov [esp+14h+var_14] offset a____Binutils_5 +
call sub_402930  +
jmp loc_403FC1  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
test eax eax +
mov [esp+48h+var_34] edx +
jz loc_404303  +
mov esi [esp+48h+var_34] +
mov eax offset a__1 +
mov edx [ebp+0] +
test esi esi +
cmovnz eax esi +
test edx edx +
mov [esp+48h+var_34] eax +
jz loc_404365  +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebp +
call ecx  +
test eax eax +
mov esi eax +
jz loc_40435E  +
cmp byte ptr [eax] 0 +
jz loc_40432B  +
mov edi [ebp+0] +
mov [esp+48h+var_48] edi +
call strlen  +
test eax eax +
jz loc_404324  +
movzx edx byte ptr [edi+eax-1] +
lea ebx [eax-1] +
cmp dl 5Ch +
jz loc_40434D  +
cmp dl 2Fh +
jnz loc_40411A  +
jmp loc_40434D  +
movzx eax byte ptr [edi+ebx-1] +
lea edx [ebx-1] +
cmp al 5Ch +
jz loc_404234  +
cmp al 2Fh +
jz loc_404234  +
mov ebx edx +
test ebx ebx +
jnz loc_404100  +
mov edx 1 +
mov [esp+48h+var_48] edx +
call sub_407460  +
test eax eax +
mov [esp+48h+var_30] eax +
jz loc_404378  +
mov eax [ebp+0] +
mov edi [esp+48h+var_30] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] edi +
call memcpy  +
mov byte ptr [edi+ebx] 0 +
mov eax [ebp+0] +
mov [esp+48h+var_48] eax +
call sub_45ECB0  +
mov [esp+48h+var_48] eax +
mov edi eax +
call strlen  +
test eax eax +
jz loc_404346  +
movzx ecx byte ptr [edi+eax-1] +
lea ebp [eax-1] +
cmp cl 2Fh +
jz loc_404357  +
cmp cl 5Ch +
jnz loc_4041A2  +
jmp loc_404357  +
movzx eax byte ptr [edi+ebp-1] +
lea edx [ebp-1] +
cmp al 5Ch +
jz loc_4041A6  +
cmp al 2Fh +
jz loc_4041A6  +
mov ebp edx +
test ebp ebp +
jnz loc_404190  +
mov eax [esp+48h+var_34] +
mov byte ptr [edi+ebp] 0 +
mov [esp+48h+var_48] eax +
call strlen  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_2C] eax +
call strlen  +
mov ecx [esp+48h+var_2C] +
cmp ebp ebx +
cmovnb ebx ebp +
lea eax [ecx+eax+9] +
add ebx eax +
mov [esp+48h+var_48] ebx +
call sub_407460  +
test eax eax +
mov ebx eax +
jz loc_40420E  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45ED20  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jz loc_404240  +
mov [esp+48h+var_48] esi +
call free  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] edi +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [ebx+1] +
jmp loc_404123  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45ED20  +
mov dword ptr [eax] 6265642Eh +
add eax 7 +
mov dword ptr [eax-3] 2F6775h +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_40420E  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45ED20  +
mov ebp eax +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] eax +
call strlen  +
cmp eax 1 +
jz loc_4042BB  +
mov ecx [esp+48h+var_34] +
cmp byte ptr [ecx+eax-1] 2Fh +
jz loc_4042BB  +
cmp byte ptr [edi] 2Fh +
jz loc_4042BB  +
mov eax 2Fh +
mov [ebp+0] ax +
mov [esp+48h+var_48] ebx +
call strlen  +
mov [esp+48h+var_44] edi +
add eax ebx +
mov [esp+48h+var_48] eax +
call sub_45ED20  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_40420E  +
mov [esp+48h+var_48] ebx +
xor ebx ebx +
call free  +
jmp loc_40420E  +
mov [esp+48h+var_44] 559h +
mov [esp+48h+var_48] offset a____Binutils_5 +
mov [esp+48h+var_30] ecx +
call sub_402930  +
mov ecx [esp+48h+var_30] +
jmp loc_404095  +
xor ebx ebx +
jmp loc_40411E  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] 10h +
call sub_4029E0  +
xor eax eax +
jmp loc_40422C  +
xor ebp ebp +
jmp loc_4041A6  +
lea edx [eax+1] +
mov ebx eax +
jmp loc_404123  +
mov ebp eax +
jmp loc_4041A6  +
xor eax eax +
jmp loc_40422C  +
mov [esp+48h+var_48] 5 +
call sub_4029E0  +
xor eax eax +
jmp loc_40422C  +
mov [esp+48h+var_48] esi +
call free  +
xor eax eax +
jmp loc_40422C  +
***
mov [esp+18h+var_18] 0B0h +
call sub_4075F0  +
test eax eax +
mov ebx eax +
jz loc_404440  +
mov eax ds:dword_496080 +
test eax eax +
jnz loc_404410  +
mov eax ds:dword_49A0A4 +
lea edx [eax+1] +
mov ds:dword_49A0A4 edx +
mov [ebx+24h] eax +
call sub_45E9D0  +
test eax eax +
mov [ebx+0A8h] eax +
jz loc_404444  +
lea eax [ebx+48h] +
mov dword ptr [ebx+84h] offset asc_475620 +
mov [esp+18h+var_C] 0Dh +
mov [esp+18h+var_10] 0B8h +
mov [esp+18h+var_14] offset sub_405B60 +
mov [esp+18h+var_18] eax +
call sub_408940  +
test eax eax +
jz loc_404430  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov ecx ds:dword_49A0A0 +
sub eax 1 +
mov ds:dword_496080 eax +
lea edx [ecx-1] +
mov ds:dword_49A0A0 edx +
mov [ebx+24h] edx +
jmp loc_4043C4  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_404404  +
xor ebx ebx +
jmp loc_404404  +
mov [esp+18h+var_18] 6 +
call sub_4029E0  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_404404  +
***
sub esp 4 +
mov ebx [esp+4+arg_0] +
call sub_404390  +
test eax eax +
jz loc_4044E0  +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
cmp dword ptr [ebx+0Ch] offset off_475300 +
jz loc_4044D5  +
movzx edx byte ptr [eax+28h] +
mov [eax+8Ch] ebx +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFE7h +
or edx 8 +
and ecx 1 +
mov [eax+28h] dl +
movzx edx byte ptr [eax+2Bh] +
and edx 0FFFFFFFEh +
or edx ecx +
movzx ecx byte ptr [eax+2Ch] +
mov [eax+2Bh] dl +
movzx esi byte ptr [ebx+2Ch] +
and edx 0FFFFFFF7h +
and ecx 0FFFFFFEFh +
and esi 10h +
or ecx esi +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+8] +
mov [eax+8] edx +
jmp loc_404487  +
xor eax eax +
jmp loc_4044CF  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_40454E  +
lea eax [ebx+48h] +
mov [esp] eax +
call sub_408A50  +
mov eax [ebx+0A8h] +
mov [esp] eax +
call sub_45EB40  +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+0A8h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov esi [esp+10h+arg_C] +
call sub_404390  +
test eax eax +
mov ebx eax +
jz loc_404630  +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call sub_4067D0  +
test eax eax +
jz loc_404680  +
cmp esi 0FFFFFFFFh +
mov [esp+10h+var_C] edi +
jz loc_404646  +
mov [esp+10h+var_10] esi +
call _fdopen  +
mov [ebx+8] eax +
test eax eax +
jz loc_40469E  +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_45ED60  +
mov [ebx] eax +
movzx eax byte ptr [edi] +
cmp al 72h +
setz dl  +
cmp al 77h +
jz loc_404610  +
test dl dl +
jnz loc_404610  +
cmp al 61h +
jz loc_40466D  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+10h+var_10] ebx +
call sub_409460  +
test eax eax +
jz loc_404690  +
or byte ptr [ebx+2Bh] 2 +
cmp esi 0FFFFFFFFh +
jz loc_404660  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jz loc_404677  +
test dl dl +
jz loc_4045DB  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
jmp loc_4045E8  +
cmp esi 0FFFFFFFFh +
jz loc_404601  +
mov [esp+10h+var_10] esi +
call _close  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_4045AD  +
or byte ptr [ebx+2Ah] 80h +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jnz loc_4045DB  +
or byte ptr [ebx+28h] 18h +
jmp loc_4045E8  +
cmp esi 0FFFFFFFFh +
jz loc_404690  +
mov [esp+10h+var_10] esi +
call _close  +
lea esi [esi+0] +
mov eax ebx +
xor ebx ebx +
call sub_403E20  +
jmp loc_404601  +
mov [esp+10h+var_10] 1 +
call sub_4029E0  +
jmp loc_404690  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0FFFFFFFFh +
mov [esp+1Ch+var_14] offset aRb_0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_404560  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
mov dword ptr [esp+8] offset aRB_0 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_404560  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
call sub_404390  +
test eax eax +
mov ebx eax +
jz loc_404773  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_4067D0  +
test eax eax +
jz loc_404768  +
mov eax [esp+28h] +
mov [ebx+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45ED60  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov [esp] ebx +
call sub_409460  +
test eax eax +
jz loc_404768  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax ebx +
xor ebx ebx +
call sub_403E20  +
jmp loc_404761  +
***
xor ebx ebx +
jmp loc_404761  +
***
call sub_404390  +
test eax eax +
mov ebx eax +
jz loc_4047E4  +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_4067D0  +
test eax eax +
jz loc_4047DD  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_45ED60  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+18h+var_18] ebx +
call sub_409590  +
test eax eax +
jz loc_4047D1  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 1 +
call sub_4029E0  +
mov eax ebx +
call sub_403E20  +
xor eax eax +
jmp loc_4047CC  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 10h +
jz loc_404818  +
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jz loc_40482A  +
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jnz loc_404833  +
add esp 40h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+0Ch] +
mov eax [eax+10h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
setz al  +
movzx eax al +
mov esi eax +
jz loc_404860  +
mov eax ebx +
call sub_403E20  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_40484A  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_40484A  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_40484A  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_40484A  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_40484A  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
mov [esp+40h+var_40] ebx +
call sub_409520  +
test eax eax +
mov esi eax +
jnz loc_404908  +
mov eax ebx +
call sub_403E20  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_4048F8  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_4048F8  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_4048F8  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_4048F8  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_4048F8  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
call sub_404390  +
test eax eax +
mov ebx eax +
jz loc_4049C8  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45ED60  +
test esi esi +
mov [ebx] eax +
jz loc_4049AC  +
mov eax [esi+4] +
mov [ebx+4] eax +
and byte ptr [ebx+28h] 0E7h +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_405A30  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_4049C2  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
test byte ptr [ebx+28h] 18h +
jnz loc_404A40  +
mov dword ptr [esp] 8 +
call sub_407460  +
test eax eax +
jz loc_404A53  +
mov [ebx+8] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+0Ch] offset off_475800 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov eax 1 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_404A3A  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov edx eax +
and edx 18h +
cmp dl 10h +
jnz loc_404A7C  +
test byte ptr [ebx+2Ah] 1 +
jnz loc_404A90  +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_404AB0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_404AA6  +
and byte ptr [ebx+28h] 0F8h +
and byte ptr [ebx+2Bh] 0EDh +
and byte ptr [ebx+2Ah] 7Fh +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+2Bh] +
mov dword ptr [ebx+84h] offset asc_475620 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
and eax 0FFFFFFFBh +
or eax 1 +
mov [ebx+2Bh] al +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+8Ch] 0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+7Ch] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov [esp] ebx +
call sub_405C70  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_405A00  +
mov eax 1 +
jmp loc_404A8A  +
***
jmp sub_404B80  +
***
mov ecx [esp+18h+arg_4] +
test ecx ecx +
js loc_404BE6  +
mov eax [esp+18h+arg_0] +
mov edx [eax+0A8h] +
jz loc_404BB5  +
add ecx 7 +
and ecx 0FFFFFFF8h +
jnz loc_404BBA  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call sub_45EA30  +
test eax eax +
jz loc_404BD0  +
add esp 18h +
pop ebx  +
retn   +
mov ecx 8 +
mov ebx [edx+4] +
cmp ebx ecx +
jb loc_404BA0  +
mov eax [edx] +
sub ebx ecx +
mov [edx+4] ebx +
add eax ecx +
mov [edx] eax +
sub eax ecx +
jmp loc_404BAC  +
mov [esp+18h+var_18] 6 +
mov [esp+18h+var_C] eax +
call sub_4029E0  +
mov eax [esp+18h+var_C] +
jmp loc_404BB0  +
mov [esp+18h+var_18] 6 +
call sub_4029E0  +
xor eax eax +
jmp loc_404BB0  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov esi [esp+14h+arg_0] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_404C2D  +
test ecx ecx +
jz loc_404C2D  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_404C42  +
imul ecx ebx +
mov [esp+14h+arg_0] esi +
mov [esp+14h+arg_4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_404B80  +
mov [esp+14h+var_14] 6 +
call sub_4029E0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_404C93  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
call sub_404390  +
test eax eax +
mov ebx eax +
jz loc_404D31  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_4067D0  +
test eax eax +
jz loc_404D35  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45ED60  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+4] eax +
call dword ptr [esp+28h]  +
test eax eax +
mov esi eax +
jz loc_404D35  +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_404C60  +
mov edx [esp+30h] +
mov [eax+4] edx +
mov edx [esp+34h] +
mov [eax] esi +
mov [eax+8] edx +
mov edx [esp+38h] +
mov [eax+0Ch] edx +
mov [ebx+8] eax +
mov eax ebx +
mov dword ptr [ebx+0Ch] offset off_475300 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_404D2B  +
***
mov eax ebx +
call sub_403E20  +
xor eax eax +
nop   +
jmp loc_404D2B  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_404D6C  +
test ecx ecx +
jnz loc_404DA5  +
mov esi ebx +
mov eax [esp+14h+arg_0] +
imul esi ecx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] esi +
call sub_404B80  +
mov ebx eax +
xor eax eax +
test ebx ebx +
jz loc_404D9F  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] ebx +
call memset  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
jbe loc_404D6C  +
mov [esp+14h+var_14] 6 +
call sub_4029E0  +
xor eax eax +
jmp loc_404D9F  +
***
mov eax [esp+arg_0] +
mov eax [eax+0A8h] +
mov [esp+arg_0] eax +
jmp sub_45EB70  +
***
push ebx  +
mov edx [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [esp+8] +
add ebx edx +
cmp edx ebx +
not eax  +
jnb loc_404E1E  +
mov ecx eax +
add edx 1 +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_474F00[ecx*4] +
cmp edx ebx +
jnz loc_404E05  +
not eax  +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_404F10  +
test edi edi +
jz loc_404F30  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_404EF4  +
mov [esp+2Ch+var_28] offset a_gnu_debugaltl +
mov [esp+2Ch+var_2C] ebx +
call sub_405CC0  +
test eax eax +
mov esi eax +
jz loc_404E99  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_406620  +
test eax eax +
jnz loc_404EA3  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_404E99  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_470390  +
lea ebp [eax+1] +
mov eax [esi+24h] +
cmp ebp eax +
jnb loc_404E99  +
sub eax ebp +
mov [edi] eax +
mov [esp+2Ch+var_2C] eax +
call sub_407460  +
mov ecx [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_10] +
add edx ebp +
mov [ecx] eax +
mov ecx [edi] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] ecx +
call memcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 4D8h +
mov [esp+2Ch+var_2C] offset a____Binutils_5 +
call sub_402930  +
jmp loc_404E5B  +
mov [esp+2Ch+var_28] 4D6h +
mov [esp+2Ch+var_2C] offset a____Binutils_5 +
call sub_402930  +
jmp loc_404E47  +
mov [esp+2Ch+var_28] 4D7h +
mov [esp+2Ch+var_2C] offset a____Binutils_5 +
call sub_402930  +
jmp loc_404E4F  +
***
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_C] 0 +
mov [esp+28h+var_28] eax +
call sub_404E30  +
mov ebx eax +
mov eax [esp+28h+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call free  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx offset sub_403E80 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_403FB0 +
jmp sub_404080  +
***
mov eax [esp+arg_0] +
mov ecx offset sub_404F50 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_403F60 +
jmp sub_404080  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [esp+24h] +
test ebx ebx +
jz loc_405060  +
test eax eax +
jz loc_405060  +
mov [esp] eax +
call sub_45EE20  +
mov dword ptr [esp+4] offset a_gnu_debuglink +
mov [esp] ebx +
mov edi eax +
call sub_405CC0  +
test eax eax +
jnz loc_405060  +
mov dword ptr [esp+8] 2108h +
mov dword ptr [esp+4] offset a_gnu_debuglink +
mov [esp] ebx +
call sub_406180  +
test eax eax +
mov esi eax +
jz loc_405075  +
mov [esp] edi +
call strlen  +
mov [esp+4] esi +
mov [esp] ebx +
add eax 4 +
and eax 0FFFFFFFCh +
add eax 4 +
mov [esp+8] eax +
call sub_406390  +
test eax eax +
jz loc_405075  +
mov eax esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4029E0  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
jmp loc_405059  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov edi [esp+48h] +
test edx edx +
jz loc_4051E5  +
mov eax [esp+44h] +
test eax eax +
jz loc_4051E5  +
test edi edi +
jz loc_4051E5  +
mov dword ptr [esp+4] offset aRb_0 +
mov [esp] edi +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_40520D  +
xor ebx ebx +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 2000h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_4960A0 +
call fread  +
test eax eax +
jz loc_40511D  +
add eax offset unk_4960A0 +
not ebx  +
cmp eax offset unk_4960A0 +
jbe loc_405119  +
mov edx offset unk_4960A0 +
nop   +
mov ecx ebx +
add edx 1 +
xor cl [edx-1] +
shr ebx 8 +
movzx ecx cl +
xor ebx ds:dword_474F00[ecx*4] +
cmp edx eax +
jnz loc_405100  +
not ebx  +
jmp loc_4050C7  +
***
mov [esp] esi +
call fclose  +
mov [esp] edi +
call sub_45EE20  +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
lea edi [eax+4] +
mov ebp eax +
and edi 0FFFFFFFCh +
lea eax [edi+4] +
mov [esp] eax +
mov [esp+18h] eax +
call sub_407460  +
mov esi eax +
xor eax eax +
test esi esi +
jz loc_4051DD  +
mov ecx [esp+1Ch] +
mov [esp+8] ebp +
mov [esp] esi +
mov [esp+4] ecx +
call memcpy  +
mov edx edi +
add edi esi +
sub edx ebp +
mov eax edx +
lea edx [esi+ebp] +
mov [esp] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] 0 +
call memset  +
mov edx [esp+40h] +
mov eax [edx+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
mov eax [esp+18h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+8] esi +
mov [esp+14h] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_4063D0  +
mov edx eax +
mov eax 1 +
test edx edx +
jz loc_4051FB  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4029E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4029E0  +
xor eax eax +
jmp loc_4051DD  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+8Ch+arg_8] +
mov ebx [esp+8Ch+arg_0] +
test eax eax +
jz loc_405249  +
mov eax [esp+8Ch+arg_8] +
mov dword ptr [eax] 0 +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_405640  +
and eax 7 +
cmp al 3 +
ja loc_405640  +
test al al +
jnz loc_4057A0  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_4057CB  +
mov eax ds:dword_4755B0 +
shl eax 3 +
mov [esp+8Ch+var_8C] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_405733  +
movzx eax byte ptr [ebx+28h] +
movzx edx byte ptr [esp+8Ch+arg_4] +
mov [esp+8Ch+var_44] 0 +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
mov [ebx+28h] al +
mov eax [ebx+4] +
test byte ptr [ebx+2Bh] 1 +
mov [esp+8Ch+var_70] eax +
jz loc_405659  +
mov eax ds:dword_4755B0 +
mov edi off_4733CC +
mov [esp+8Ch+var_50] eax +
mov eax [edi] +
test eax eax +
jz loc_4059B8  +
xor esi esi +
mov ecx 100h +
lea edx [ebx+48h] +
mov [esp+8Ch+var_60] esi +
mov esi ecx +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_6C] 0 +
mov [esp+8Ch+var_5C] 0 +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_58] edx +
mov [esp+8Ch+var_68] ebp +
jmp loc_405321  +
add edi 4 +
mov eax [edi] +
test eax eax +
jz loc_4054CF  +
cmp eax offset off_4759E0 +
jz loc_405314  +
test byte ptr [ebx+2Bh] 1 +
jnz loc_405334  +
cmp [esp+8Ch+var_70] eax +
jz loc_405314  +
movzx eax byte ptr [eax+1Bh] +
cmp eax esi +
jg loc_405314  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_475620 +
mov [esp+8Ch+var_8C] ebx +
call sub_405C70  +
mov eax [edi] +
mov [ebx+4] eax +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_405791  +
mov [esp+8Ch+var_8C] 3 +
call sub_4029E0  +
movzx eax byte ptr [ebx+28h] +
mov ecx [ebx+4] +
and eax 7 +
mov eax [ecx+eax*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_405783  +
mov eax [esp+8Ch+var_44] +
test eax eax +
jz loc_4053D1  +
lea eax [esp+8Ch+var_28] +
mov [esp+8Ch+var_8C] eax +
call sub_408A50  +
mov [esp+8Ch+var_44] 0 +
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 2 +
jz loc_405750  +
cmp off_4733C4 ebp +
jz loc_405995  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jz loc_4053FB  +
mov ecx [esp+8Ch+var_6C] +
mov [eax+ecx*4] ebp +
movzx eax byte ptr [ebp+1Bh] +
add [esp+8Ch+var_6C] 1 +
cmp eax esi +
jl loc_405740  +
add [esp+8Ch+var_64] 1 +
mov [esp+8Ch+var_60] ebp +
mov eax [ebx+0A0h] +
mov [esp+8Ch+var_40] eax +
mov eax [ebx+84h] +
mov [esp+8Ch+var_38] eax +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
mov [esp+8Ch+var_3C] eax +
mov eax [ebx+64h] +
mov [esp+8Ch+var_34] eax +
mov eax [ebx+68h] +
mov [esp+8Ch+var_30] eax +
mov eax [ebx+6Ch] +
mov [esp+8Ch+var_2C] eax +
mov eax [ebx+48h] +
mov [esp+8Ch+var_28] eax +
mov eax [ebx+4Ch] +
mov [esp+8Ch+var_24] eax +
mov eax [ebx+50h] +
mov [esp+8Ch+var_20] eax +
mov eax [ebx+54h] +
mov [esp+8Ch+var_1C] eax +
mov eax [ebx+58h] +
mov [esp+8Ch+var_18] eax +
mov eax [ebx+5Ch] +
mov [esp+8Ch+var_14] eax +
mov eax [ebx+60h] +
mov [esp+8Ch+var_88] 1 +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_10] eax +
call sub_404B80  +
test eax eax +
mov [esp+8Ch+var_44] eax +
jz loc_405791  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_84] 0B8h +
mov [esp+8Ch+var_88] offset sub_405B60 +
mov [esp+8Ch+var_8C] eax +
call sub_408A20  +
test eax eax +
jz loc_405791  +
add edi 4 +
mov eax [edi] +
mov [esp+8Ch+var_5C] ebp +
test eax eax +
jnz loc_405321  +
cmp [esp+8Ch+var_64] 1 +
mov ebp [esp+8Ch+var_68] +
mov [esp+8Ch+var_68] esi +
mov esi [esp+8Ch+var_60] +
jz loc_405819  +
mov eax [esp+8Ch+var_6C] +
test eax eax +
jnz loc_405950  +
mov eax [esp+8Ch+var_54] +
cmp eax off_4733C4 +
jz loc_4059A7  +
mov eax [esp+8Ch+var_50] +
sub eax ds:dword_4755B0 +
cmp eax 1 +
mov [esp+8Ch+var_6C] eax +
jg loc_405826  +
cmp [esp+8Ch+var_6C] 1 +
jle loc_4059F6  +
mov [esp+8Ch+arg_0] ebx +
mov ecx off_4733C0 +
mov edi [esp+8Ch+var_6C] +
mov ebx [esp+8Ch+var_68] +
lea esi [esi+0] +
add ecx 4 +
mov esi [ecx-4] +
test esi esi +
jz loc_4057E1  +
mov eax edi +
sub eax 1 +
js loc_405540  +
cmp [ebp+eax*4+0] esi +
jnz loc_405550  +
movzx edx byte ptr [esi+1Bh] +
cmp ebx edx +
jl loc_405550  +
mov ebx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_6C] 1 +
mov edi [esp+8Ch+var_44] +
test edi edi +
jz loc_405615  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_408A50  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_404DD0  +
mov [esp+8Ch+var_44] 0 +
cmp [esp+8Ch+var_6C] 1 +
jz loc_405853  +
mov ecx [esp+8Ch+var_6C] +
test ecx ecx +
jnz loc_4058F3  +
mov [esp+8Ch+var_8C] 0Ch +
call sub_4029E0  +
jmp loc_405681  +
mov [esp+8Ch+var_8C] 5 +
call sub_4029E0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_4086D0  +
test eax eax +
jz loc_405959  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
test ebp ebp +
mov [ebx+4] eax +
jz loc_405698  +
mov [esp+8Ch+var_8C] ebp +
call free  +
mov edx [esp+8Ch+var_44] +
test edx edx +
jz loc_405733  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_408A50  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_404DD0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi eax +
mov [esp+8Ch+var_64] 1 +
jmp loc_405411  +
test byte ptr [ebx+2Bh] 20h +
jnz loc_4057BB  +
mov eax [esp+8Ch+var_54] +
cmp off_4733C4 eax +
jz loc_405768  +
mov eax [edi] +
mov [esp+8Ch+var_54] eax +
mov edx [esp+8Ch+var_68] +
test edx edx +
jz loc_405779  +
mov eax [edi] +
mov ecx [esp+8Ch+var_50] +
mov [edx+ecx*4] eax +
add [esp+8Ch+var_50] 1 +
jmp loc_405415  +
call sub_402790  +
cmp eax 3 +
jz loc_405314  +
mov ebp [esp+8Ch+var_68] +
jmp loc_405681  +
movzx eax al +
cmp eax [esp+8Ch+arg_4] +
setz al  +
add esp 8Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_402790  +
cmp eax 4 +
jnz loc_4053E0  +
jmp loc_405756  +
mov eax off_4733C0 +
mov eax [eax] +
test eax eax +
jnz loc_405277  +
xor ebp ebp +
jmp loc_405291  +
test ebp ebp +
mov ebx [esp+8Ch+arg_0] +
jz loc_405572  +
mov eax [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_6C] +
cmp edi eax +
jz loc_405572  +
mov ecx [esp+8Ch+var_68] +
xor eax eax +
mov esi [ebp+eax*4+0] +
movzx edx byte ptr [esi+1Bh] +
cmp ecx edx +
jge loc_405819  +
add eax 1 +
cmp eax edi +
jl loc_405806  +
mov [esp+8Ch+var_6C] 1 +
jmp loc_405572  +
test ebp ebp +
jz loc_405519  +
lea edx ds:0[eax*4] +
mov eax ds:dword_4755B0 +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] ebp +
lea eax [ebp+eax*4+0] +
mov [esp+8Ch+var_88] eax +
call memcpy  +
jmp loc_405524  +
cmp [esp+8Ch+var_5C] esi +
mov [ebx+4] esi +
jz loc_4058C2  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_475620 +
mov [esp+8Ch+var_8C] ebx +
call sub_405C70  +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_405681  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jz loc_4059DD  +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 18h +
jz loc_40599E  +
test ebp ebp +
mov eax 1 +
jz loc_40564E  +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_70] eax +
call free  +
mov eax [esp+8Ch+var_70] +
jmp loc_40564E  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
mov [ebx+4] eax +
mov [esp+8Ch+var_8C] 0Dh +
call sub_4029E0  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_405733  +
mov eax [esp+8Ch+arg_8] +
mov [eax] ebp +
mov eax [esp+8Ch+var_6C] +
mov dword ptr [ebp+eax*4+0] 0 +
sub eax 1 +
js loc_405733  +
mov edx [ebp+eax*4+0] +
mov edx [edx] +
mov [ebp+eax*4+0] edx +
sub eax 1 +
cmp eax 0FFFFFFFFh +
jnz loc_405937  +
xor eax eax +
jmp loc_405735  +
mov [esp+8Ch+var_54] esi +
jmp loc_405519  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jnz loc_4058C2  +
cmp [esp+8Ch+arg_4] 2 +
jnz loc_4052C1  +
cmp [esp+8Ch+var_70] offset off_4759E0 +
jnz loc_4052C1  +
jmp loc_40562C  +
mov ebp [esp+8Ch+var_68] +
jmp loc_4058C2  +
or byte ptr [ebx+2Bh] 10h +
jmp loc_4058D1  +
mov esi [esp+8Ch+var_54] +
mov [esp+8Ch+var_6C] 1 +
jmp loc_405572  +
mov [esp+8Ch+var_68] 100h +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_5C] 0 +
jmp loc_4054F2  +
mov [esp+8Ch+var_88] 1B5h +
mov [esp+8Ch+var_8C] offset a____Binutils_1 +
call sub_402930  +
jmp loc_4058C2  +
mov esi [esp+8Ch+var_54] +
jmp loc_405572  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_405220  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jnz loc_405A60  +
mov edx eax +
and edx 7 +
cmp dl 3 +
ja loc_405A60  +
test dl dl +
jz loc_405A73  +
xor eax eax +
movzx edx dl +
cmp edx [esp+18h+arg_4] +
setz al  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 5 +
call sub_4029E0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
movzx edx byte ptr [esp+18h+arg_4] +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
movzx edx dl +
mov [ebx+28h] al +
mov eax [ebx+4] +
mov eax [eax+edx*4+74h] +
mov [esp+18h+var_18] ebx +
call eax  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_405A6E  +
and byte ptr [ebx+28h] 0F8h +
add esp 18h +
xor al al +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax dword_473100 +
mov [edx+4] eax +
mov eax [esi+6Ch] +
mov [edx+94h] esi +
mov [edx+8] eax +
mov eax [esi+4] +
mov eax [eax+9Ch] +
mov [esp+0Ch+var_8] edx +
mov [esp+0Ch+var_C] esi +
call eax  +
test eax eax +
jz loc_405B50  +
mov eax [esi+68h] +
add dword ptr [esi+6Ch] 1 +
add dword_473100 1 +
test eax eax +
mov dword ptr [ebx+0Ch] 0 +
jz loc_405B40  +
mov [ebx+10h] eax +
mov [eax+0Ch] ebx +
mov [esi+68h] ebx +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ebx+10h] 0 +
mov [esi+64h] ebx +
jmp loc_405B32  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
test eax eax +
jz loc_405BD5  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_C] edx +
call sub_408FA0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_405BBA  +
lea edi [edx+10h] +
mov ebx 0A8h +
test edi 1 +
jnz loc_405BF0  +
test edi 2 +
jnz loc_405C00  +
mov ecx ebx +
xor eax eax +
shr ecx 2 +
test bl 2 +
stos   +
jnz loc_405BC5  +
and ebx 1 +
jnz loc_405BC0  +
mov eax edx +
add esp 14h +
pop ebx  +
pop edi  +
retn   +
mov byte ptr [edi] 0 +
jmp loc_405BB8  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and ebx 1 +
jz loc_405BB8  +
jmp loc_405BC0  +
mov [esp+14h+var_10] 0B8h +
mov [esp+14h+var_14] ebx +
call sub_408EF0  +
test eax eax +
jnz loc_405B71  +
xor eax eax +
jmp loc_405BBA  +
mov byte ptr [edx+10h] 0 +
lea edi [edx+11h] +
mov bl 0A7h +
jmp loc_405B9D  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub ebx 2 +
jmp loc_405BA5  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov ebx [esp+24h] +
mov edx [eax+4] +
mov edx [edx+10Ch] +
mov [esp] eax +
call edx  +
test eax eax +
mov [ebx+98h] eax +
jz loc_405C60  +
mov edx [ebx] +
mov dword ptr [eax+8] 0 +
mov [eax+10h] ebx +
mov dword ptr [eax+0Ch] 100h +
mov [eax+4] edx +
lea eax [ebx+98h] +
mov [ebx+9Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+54h] +
mov eax [ebx+48h] +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
lea edx ds:0[ecx*4] +
mov dword ptr [ebx+6Ch] 0 +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call memset  +
mov dword ptr [ebx+58h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_408C80  +
test eax eax +
jz loc_405CF5  +
add eax 10h +
add esp 1Ch +
retn   +
xor eax eax +
jmp loc_405CF1  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
mov ebx [eax-10h] +
mov ebp [eax-8] +
mov edi [eax] +
test ebx ebx +
jnz loc_405D26  +
jmp loc_405D50  +
mov ebx [ebx] +
test ebx ebx +
jz loc_405D50  +
cmp [ebx+8] ebp +
jnz loc_405D20  +
mov [esp+1Ch+var_18] edi +
mov eax [ebx+4] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_405D20  +
add esp 1Ch +
lea eax [ebx+10h] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jz loc_405D90  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_405D90  +
lea eax [esi+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_408C80  +
test eax eax +
jz loc_405D54  +
add esp 1Ch +
add eax 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_408C80  +
test eax eax +
mov edx eax +
jz loc_405DFA  +
test byte ptr [edx+26h] 10h +
lea eax [eax+10h] +
jz loc_405DE6  +
jmp loc_405DFC  +
test byte ptr [eax+16h] 10h +
jnz loc_405DFC  +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_405D00  +
test eax eax +
jnz loc_405DE0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov esi [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
add eax 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_408C80  +
test eax eax +
mov ebx eax +
jz loc_405E88  +
mov edi [eax+8] +
mov eax edi +
jmp loc_405E49  +
mov ebx [ebx] +
test ebx ebx +
jz loc_405E88  +
mov eax [ebx+8] +
cmp eax edi +
jnz loc_405E40  +
mov [esp+4] esi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_405E40  +
mov eax [esp+3Ch] +
lea ebp [ebx+10h] +
mov [esp+4] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
test eax eax +
jz loc_405E40  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor ebp ebp +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
mov [esp+8] edx +
lea ebp [edx+1] +
mov dword ptr [esp+4] offset a_D +
mov [esp] edi +
call sprintf  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] esi +
call sub_408C80  +
test eax eax +
jnz loc_405F00  +
mov eax [esp+38h] +
test eax eax +
jz loc_405F60  +
mov eax [esp+38h] +
mov [eax] ebp +
mov eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 1 +
jmp loc_405EF0  +
***
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
jmp loc_405F51  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
test byte ptr [ebx+2Bh] 10h +
jnz loc_406080  +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_406010  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_405FF2  +
mov edi offset off_473120 +
mov eax [ebx+4] +
mov eax [eax+9Ch] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_406076  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_406017  +
mov edi offset off_4731C8 +
jmp loc_405FCE  +
mov edi offset off_473270 +
jmp loc_405FCE  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebp +
cmps   +
mov edi offset off_473318 +
setnbe dl  +
setb al  +
cmp dl al +
jz loc_405FCE  +
lea eax [ebx+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call sub_408C80  +
test eax eax +
mov ecx eax +
jz loc_406076  +
mov esi [ecx+10h] +
lea edx [eax+10h] +
mov eax edx +
test esi esi +
jnz loc_405FEA  +
mov [ecx+10h] ebp +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_405AE0  +
xor eax eax +
jmp loc_405FEA  +
mov [esp+1Ch+var_1C] 5 +
call sub_4029E0  +
xor eax eax +
jmp loc_405FEA  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
test byte ptr [esi+2Bh] 10h +
jnz loc_406135  +
lea edx [esi+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] edx +
call sub_408C80  +
test eax eax +
mov ebx eax +
jz loc_406141  +
mov eax [eax+10h] +
mov edx [esp+2Ch+var_10] +
test eax eax +
jz loc_406130  +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] 0 +
call sub_405B60  +
test eax eax +
jz loc_406141  +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
lea edx [eax+10h] +
mov [ebx] eax +
mov [edx+14h] edi +
mov eax esi +
mov [edx] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_405AE0  +
lea edx [ebx+10h] +
jmp loc_40611A  +
mov [esp+2Ch+var_2C] 5 +
call sub_4029E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4060A0  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_8] +
test byte ptr [ebp+2Bh] 10h +
jnz loc_406237  +
mov [esp+2Ch+var_10] edx +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_40620F  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_40620F  +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_40620F  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_40620F  +
lea eax [ebp+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call sub_408C80  +
test eax eax +
jz loc_40620F  +
mov edx [eax+10h] +
test edx edx +
mov edx [esp+2Ch+var_10] +
jz loc_406220  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [eax+24h] edx +
lea edx [eax+10h] +
mov [eax+10h] ebx +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_405AE0  +
mov [esp+2Ch+var_2C] 5 +
call sub_4029E0  +
jmp loc_40620F  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_406180  +
add esp 1Ch +
retn   +
***
mov eax dword_473100 +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
mov [eax+14h] edx +
mov eax 1 +
retn   +
***
jmp sub_4062B0  +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov [edx] eax +
sub edx 10h +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov [esp+arg_8] edx +
add eax 48h +
mov [esp+arg_0] eax +
jmp sub_408DD0  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_8] +
mov edi [esi+64h] +
test edi edi +
jz loc_406311  +
mov [esp+1Ch+var_18] edi +
add ebx 1 +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] esi +
call [esp+1Ch+arg_4]  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_4062F8  +
cmp [esi+6Ch] ebx +
jnz loc_40631E  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aBfd_map_over_s +
mov [esp+1Ch+var_18] 573h +
mov [esp+1Ch+var_1C] offset a____Binutils_3 +
call sub_402960  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+48h+var_18] +
mov ebp [esp+48h+var_14] +
mov edi [esp+48h+var_10] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_406367  +
jmp loc_406382  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_406382  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] esi +
call ebp  +
test eax eax +
jz loc_406360  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
test byte ptr [eax+2Bh] 10h +
jnz loc_4063B1  +
mov eax [esp+1Ch+arg_4] +
mov edx [esp+1Ch+arg_8] +
mov [eax+24h] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_C] +
mov edi [esp+2Ch+arg_10] +
mov ebx [esp+2Ch+arg_14] +
test byte ptr [ebp+15h] 1 +
jz loc_4064A2  +
mov ecx [ebp+24h] +
cmp ecx esi +
jb loc_406410  +
cmp ecx ebx +
jb loc_406410  +
mov eax ebx +
xor edx edx +
add eax esi +
adc edx edi +
cmp edx 0 +
jl loc_406426  +
jg loc_406410  +
cmp eax ecx +
jbe loc_406426  +
nop   +
mov [esp+2Ch+var_2C] 11h +
call sub_4029E0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
test byte ptr [eax+28h] 10h +
jz loc_4064B8  +
mov eax [ebp+6Ch] +
test eax eax +
jz loc_406457  +
add eax esi +
cmp eax [esp+2Ch+arg_8] +
jz loc_406457  +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx [esp+2Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+154h] +
mov [esp+2Ch+var_1C] edi +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_18] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40641E  +
mov eax [esp+2Ch+arg_0] +
or byte ptr [eax+2Bh] 10h +
add esp 2Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0Eh +
call sub_4029E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 5 +
call sub_4029E0  +
xor eax eax +
jmp loc_40641E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_4] +
mov eax [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_C] +
mov ebx [edx+14h] +
mov [esp+2Ch+var_20] eax +
mov ebp [esp+2Ch+arg_10] +
mov ecx [esp+2Ch+arg_14] +
test bl 80h +
jnz loc_4065A2  +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 10h +
jz loc_406566  +
mov eax [edx+28h] +
test eax eax +
jz loc_406566  +
cmp eax edi +
jb loc_406550  +
cmp eax ecx +
jb loc_406550  +
mov [esp+2Ch+var_1C] ecx +
add [esp+2Ch+var_1C] edi +
mov [esp+2Ch+var_18] 0 +
adc [esp+2Ch+var_18] ebp +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] 0 +
jl loc_406570  +
jg loc_406550  +
mov eax [esp+2Ch+var_14] +
cmp [esp+2Ch+var_1C] eax +
jbe loc_406570  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] 11h +
call sub_4029E0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+24h] +
jmp loc_406511  +
test ecx ecx +
jz loc_4065C7  +
test bh 1 +
jz loc_4065A2  +
test bh 40h +
jz loc_4065D0  +
mov eax [edx+6Ch] +
test eax eax +
jz loc_406600  +
add eax edi +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] eax +
call memmove  +
mov eax 1 +
jmp loc_40655E  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
jmp loc_40655E  +
mov eax [esi+4] +
mov eax [eax+0A0h] +
mov [esp+2Ch+arg_C] edi +
mov edi [esp+2Ch+var_20] +
mov [esp+2Ch+arg_10] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_14] ecx +
mov [esp+2Ch+arg_8] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
and bh 0BFh +
mov [edx+14h] ebx +
mov [esp+2Ch+var_2C] 5 +
call sub_4029E0  +
xor eax eax +
jmp loc_40655E  +
***
mov eax [esp+arg_8] +
mov dword ptr [eax] 0 +
jmp sub_40A080  +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+20h+var_14] ecx +
jz loc_4066C0  +
mov ebx [edx] +
mov edi eax +
test ebx ebx +
jnz loc_406679  +
jmp loc_4066C0  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_4066C0  +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] ebx +
call strstr  +
test eax eax +
mov ebp eax +
jz loc_406670  +
mov [esp+20h+var_20] edi +
call strlen  +
cmp ebx ebp +
movzx eax byte ptr [ebp+eax+0] +
jz loc_4066A2  +
cmp byte ptr [ebp-1] 3Ah +
jnz loc_406670  +
test al al +
jnz loc_406670  +
mov eax [esp+20h+var_14] +
mov [eax] ebx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi off_4733CC +
mov ebx [esi] +
test ebx ebx +
jnz loc_4066EF  +
jmp loc_406710  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_406710  +
mov eax [ebx] +
mov [esp+18h+var_18] edi +
mov [esp+18h+var_14] eax +
call strcmp  +
test eax eax +
jnz loc_4066E6  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi offset off_4755A0 +
mov eax offset aAvr +
jmp loc_406729  +
add esi 8 +
mov eax [esi] +
test eax eax +
jz loc_406760  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call sub_45EE30  +
test eax eax +
jnz loc_406720  +
mov ebx [esi+4] +
test ebx ebx +
jnz loc_406701  +
add esi 8 +
mov ebx [esi+4] +
test ebx ebx +
jz loc_406748  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_18] 2 +
xor ebx ebx +
call sub_4029E0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx off_4733C4 +
mov ebx [esp+18h+arg_0] +
test edx edx +
jz loc_4067A9  +
mov eax [edx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_4067BE  +
mov eax ebx +
call sub_4066D0  +
test eax eax +
jz loc_4067C5  +
mov off_4733C4 eax +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
xor edx edx +
jmp loc_4067BE  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
test eax eax +
jz loc_406850  +
mov edi offset aDefault +
mov ecx 8 +
mov esi eax +
cmps   +
jnz loc_406810  +
mov eax off_4733C4 +
test eax eax +
jz loc_406840  +
test ebx ebx +
jz loc_406806  +
or byte ptr [ebx+2Bh] 1 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test ebx ebx +
jz loc_406830  +
and byte ptr [ebx+2Bh] 0FEh +
call sub_4066D0  +
test eax eax +
jz loc_406839  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_4066D0  +
test eax eax +
jnz loc_406806  +
xor eax eax +
jmp loc_406806  +
mov eax off_4733CC +
mov eax [eax] +
jmp loc_4067FB  +
mov [esp+10h+var_10] offset aGnutarget +
call getenv  +
test eax eax +
jz loc_4067F2  +
jmp loc_4067E2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+78h] +
mov edi [esp+7Ch] +
mov esi [esp+80h] +
test ebp ebp +
jz loc_406891  +
mov dword ptr [ebp+0] 0 +
test edi edi +
jz loc_40689B  +
mov dword ptr [edi] 0FFFFFFFFh +
test esi esi +
jz loc_4068A5  +
mov dword ptr [esi] 0 +
mov eax [esp+74h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_4067D0  +
test eax eax +
mov ebx eax +
jz loc_406990  +
test ebp ebp +
jz loc_4068D4  +
mov edx [ebx+8] +
xor eax eax +
test edx edx +
setz al  +
mov [ebp+0] eax +
test edi edi +
jz loc_4068DE  +
movzx eax byte ptr [ebx+18h] +
mov [edi] eax +
test esi esi +
mov eax ebx +
jz loc_4068F3  +
mov ebp [ebx] +
call sub_407050  +
mov edi eax +
mov eax ebx +
test edi edi +
jnz loc_406900  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test ebp ebp +
jz loc_40692A  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_406980  +
lea ebp [eax+1] +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_406650  +
test eax eax +
jz loc_406940  +
mov [esp] edi +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] ebp +
lea ebp [esp+1Eh] +
mov [esp] ebp +
call strcpy  +
jmp loc_406964  +
mov byte ptr [eax] 0 +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_406650  +
test eax eax +
jnz loc_40692A  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strrchr  +
test eax eax +
jnz loc_406952  +
jmp loc_40692A  +
***
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_406650  +
jmp loc_40692A  +
***
xor eax eax +
jmp loc_4068F3  +
***
sub esp 14h +
mov edx off_4733CC +
mov ebx [edx] +
test ebx ebx +
jz loc_406A0D  +
xor eax eax +
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_4069B3  +
lea eax ds:4[eax*4] +
mov [esp+14h+var_14] eax +
call sub_407460  +
test eax eax +
jz loc_406A18  +
mov edx off_4733CC +
mov ecx [edx] +
test ecx ecx +
jz loc_406A14  +
mov ebx edx +
mov esi eax +
jmp loc_4069E8  +
mov ebx off_4733CC +
cmp edx ebx +
jz loc_4069F0  +
cmp ecx [ebx] +
jz loc_4069F8  +
mov ecx [ecx] +
add esi 4 +
mov [esi-4] ecx +
add edx 4 +
mov ecx [edx] +
test ecx ecx +
jnz loc_4069E2  +
mov dword ptr [esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax 4 +
jmp loc_4069C4  +
mov esi eax +
jmp loc_406A01  +
xor eax eax +
jmp loc_406A07  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx off_4733CC +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jnz loc_406A49  +
jmp loc_406A60  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jz loc_406A60  +
mov [esp+4] esi +
mov [esp] eax +
call edi  +
test eax eax +
jz loc_406A40  +
mov eax [ebx] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax offset aA_out_0 +
mov eax offset aUnknownFileFor +
jmp loc_406A90  +
***
mov eax offset aSym +
mov eax offset aPef_xlib +
jmp loc_406A90  +
***
mov eax offset off_4754FE +
mov eax offset aMach_o +
jmp loc_406A90  +
***
mov eax offset aMmo +
mov eax offset aEvax +
jmp loc_406A90  +
***
mov eax offset aOvax +
mov eax offset aMsdos +
jmp loc_406A90  +
***
mov eax offset aVersados +
mov eax offset aOs9k +
jmp loc_406A90  +
***
mov eax offset aSom +
mov eax offset aIhex +
jmp loc_406A90  +
***
mov eax offset aVerilog +
mov eax offset aSrec +
jmp loc_406A90  +
***
mov eax offset aTekhex +
jmp loc_406A90  +
***
mov eax offset aOasys +
jmp loc_406A90  +
***
mov eax offset aNlm +
jmp loc_406A90  +
***
mov eax offset aIeee +
jmp loc_406A90  +
***
mov eax offset off_4754A5 +
jmp loc_406A90  +
***
mov eax offset aXcoff +
jmp loc_406A90  +
***
mov eax offset aEcoff +
jmp loc_406A90  +
***
mov eax offset aCoff +
jmp loc_406A90  +
***
mov dword ptr [esp+8] offset aBfd_flavour_na +
mov dword ptr [esp+4] 75Ah +
mov dword ptr [esp] offset a____Binutils_8 +
call sub_402960  +
nop   +
nop   +
nop   +
nop   +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov [esp] esi +
call sub_407460  +
test eax eax +
mov ebx eax +
jz loc_406BDB  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov edx [esp+0Ch] +
xor eax eax +
mov ecx [esp+8] +
mov ebx [edx+0Ch] +
cmp [ecx+0Ch] ebx +
jnz loc_406C19  +
mov ebx [edx] +
cmp [ecx] ebx +
jnz loc_406C19  +
mov ebx [edx+10h] +
mov eax ecx +
cmp [ecx+10h] ebx +
mov ecx edx +
cmovnb ecx eax +
cmovbe eax ecx +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:_stricmp +
mov esi [esp+30h] +
mov ebx [esp+34h] +
mov eax [esi+14h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jnz loc_406C50  +
mov eax [esi+20h] +
test eax eax +
jnz loc_406DB8  +
mov eax [esi+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jz loc_406DB8  +
mov ebp [esi+18h] +
mov dword ptr [esp+4] 3Ah +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_406D6C  +
sub eax ebp +
mov [esp+8] eax +
mov [esp+0Ch] eax +
mov [esp+4] ebp +
mov [esp] ebx +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jz loc_406E24  +
movzx eax byte ptr [ebx] +
mov edx [esi+14h] +
test al al +
jnz loc_406CC6  +
jmp loc_406DD1  +
cmp al cl +
jnz loc_406CCD  +
add ebx 1 +
movzx eax byte ptr [ebx] +
add edx 1 +
test al al +
jz loc_406DD1  +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_406CB1  +
cmp al 3Ah +
jz loc_406DC5  +
movsx edx byte ptr [ebx] +
test dl dl +
jz loc_406DD1  +
movzx ecx dl +
xor eax eax +
test ds:byte_4922A0[ecx+ecx] 4 +
jz loc_406DBD  +
add ebx 1 +
lea eax [eax+eax*4] +
lea eax [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx ecx dl +
test ds:byte_4922A0[ecx+ecx] 4 +
jnz loc_406CF3  +
cmp eax 1CF2h +
mov edx eax +
jz loc_406F33  +
jbe loc_406DE0  +
cmp eax 109AAh +
jz loc_406F4C  +
nop   +
lea esi [esi+0] +
ja loc_406E43  +
cmp eax 1E46h +
jz loc_406EA2  +
ja loc_406F12  +
cmp eax 1E1Ch +
jz loc_406F88  +
cmp eax 1E31h +
jnz loc_406FD9  +
mov ecx 25h +
mov edx 3Dh +
jmp loc_406E72  +
mov ebp [esi+14h] +
mov [esp] ebp +
call strlen  +
mov [esp+4] ebp +
mov [esp] ebx +
mov [esp+8] eax +
mov [esp+0Ch] eax +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jnz loc_406CA2  +
lea eax [ebx+edx] +
cmp byte ptr [eax] 3Ah +
jz loc_406FBC  +
mov edx [esi+18h] +
mov [esp] eax +
mov [esp+4] edx +
call edi  +
test eax eax +
jnz loc_406CA2  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movsx edx byte ptr [ebx+1] +
add ebx 1 +
jmp loc_406CD8  +
***
mov eax [esi+20h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 1450h +
jz loc_406F6A  +
jbe loc_406EAE  +
cmp eax 14BBh +
jz loc_406E8A  +
lea esi [esi+0] +
ja loc_406EF2  +
cmp eax 1456h +
jz loc_406E8A  +
cmp eax 14A2h +
jnz loc_406FD9  +
mov ecx 2 +
mov edx 10h +
jmp loc_406E72  +
mov eax [esi+18h] +
lea eax [eax+edx+1] +
add edx ebx +
mov [esp+4] eax +
mov [esp] edx +
call edi  +
test eax eax +
jnz loc_406CA2  +
jmp loc_406DB8  +
***
cmp eax 109C8h +
jz loc_406E96  +
lea esi [esi+0] +
ja loc_406ED0  +
cmp eax 109B4h +
jz loc_406F5B  +
cmp eax 109BEh +
jnz loc_406FD9  +
mov ecx 2 +
mov edx 5 +
xor eax eax +
cmp [esi+0Ch] ecx +
jnz loc_406DBD  +
xor eax eax +
cmp [esi+10h] edx +
setz al  +
jmp loc_406DBD  +
***
mov ecx 2 +
mov edx 0Ch +
jmp loc_406E72  +
***
mov ecx 2 +
mov edx 6 +
jmp loc_406E72  +
***
mov ecx 25h +
mov edx 40h +
jmp loc_406E72  +
***
cmp eax 8 +
jbe loc_406FA6  +
cmp eax 0BB8h +
jz loc_406EC9  +
cmp eax 0FA0h +
jnz loc_406FD9  +
mov ecx 8 +
jmp loc_406E72  +
***
cmp eax 109DCh +
jz loc_406F79  +
cmp eax 10AECh +
jnz loc_406FD9  +
mov ecx 2 +
mov edx 8 +
jmp loc_406E72  +
***
cmp eax 151Fh +
jz loc_406F97  +
cmp eax 1770h +
jnz loc_406FD9  +
mov ecx 1Ah +
jmp loc_406E72  +
***
cmp eax 7D00h +
jz loc_406F42  +
cmp eax 109A0h +
jnz loc_406FD9  +
mov ecx 2 +
mov edx 1 +
jmp loc_406E72  +
***
mov ecx 25h +
mov edx 2Dh +
jmp loc_406E72  +
***
mov ecx 0Dh +
jmp loc_406E72  +
***
mov ecx 2 +
mov edx 3 +
jmp loc_406E72  +
***
mov ecx 2 +
mov edx 4 +
jmp loc_406E72  +
***
mov ecx 2 +
mov edx 0Ah +
jmp loc_406E72  +
***
mov ecx 2 +
mov edx 7 +
jmp loc_406E72  +
***
mov ecx 25h +
mov edx 30h +
jmp loc_406E72  +
***
mov ecx 2 +
mov edx 12h +
jmp loc_406E72  +
***
cmp eax 3 +
jnb loc_406FB0  +
cmp eax 1 +
jnz loc_406FD9  +
mov edx eax +
mov ecx 2 +
jmp loc_406E72  +
***
mov eax [esi+18h] +
mov [esp+4] eax +
lea eax [ebx+edx+1] +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_406CA2  +
jmp loc_406DB8  +
***
xor eax eax +
nop   +
lea esi [esi+0] +
jmp loc_406DBD  +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+18h] +
retn   +
***
push edi  +
mov edi offset off_475654 +
push esi  +
push ebx  +
mov ebx offset unk_478700 +
sub esp 10h +
mov esi [esp+20h] +
mov eax [ebx+28h] +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_407038  +
mov ebx [ebx+30h] +
test ebx ebx +
jnz loc_407014  +
add edi 4 +
mov ebx [edi] +
test ebx ebx +
jnz loc_407014  +
xor eax eax +
jmp loc_40703A  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_407050  +
***
push ebx  +
xor edx edx +
sub esp 14h +
mov eax [eax+30h] +
mov ebx offset off_475654 +
lea ecx [edx+1] +
test eax eax +
jz loc_40707C  +
nop   +
lea esi [esi+0] +
mov eax [eax+30h] +
mov edx ecx +
lea ecx [edx+1] +
test eax eax +
jnz loc_407070  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_407070  +
lea eax ds:8[edx*4] +
mov [esp+14h+var_14] eax +
call sub_407460  +
test eax eax +
jz loc_4070C9  +
mov ecx eax +
mov ebx offset off_475654 +
mov edx offset unk_478700 +
mov esi [edx+18h] +
add ecx 4 +
mov [ecx-4] esi +
mov edx [edx+30h] +
test edx edx +
jnz loc_4070A4  +
add ebx 4 +
mov edx [ebx] +
test edx edx +
jnz loc_4070A4  +
mov dword ptr [ecx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_4070C3  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [esp+18h] +
mov ecx [eax+84h] +
mov edi [ecx+0Ch] +
test edi edi +
jz loc_4070FF  +
mov edi [edx+84h] +
mov esi [edi+0Ch] +
test esi esi +
jnz loc_407127  +
mov ecx eax +
mov eax edx +
mov edx ecx +
test ebx ebx +
jz loc_407110  +
mov eax [edx+84h] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4] +
mov edi offset aBinary_0 +
mov ecx 7 +
mov esi [eax] +
cmps   +
jz loc_407103  +
xor eax eax +
jmp loc_407109  +
***
mov eax [ecx+24h] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+84h] edx +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+8] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
retn   +
***
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx offset off_475654 +
jmp loc_4071BC  +
mov eax [eax+30h] +
test eax eax +
jz loc_4071D4  +
cmp [eax+0Ch] edx +
jnz loc_4071B5  +
cmp [eax+10h] ecx +
jz loc_4071D2  +
test ecx ecx +
jnz loc_4071B5  +
cmp dword ptr [eax+20h] 0 +
nop   +
jz loc_4071B5  +
pop ebx  +
retn   +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_4071BC  +
xor eax eax +
pop ebx  +
retn   +
***
jmp sub_4071F0  +
***
mov eax [esp+18h+arg_8] +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_4071A0  +
mov edx eax +
test edx edx +
mov [ebx+84h] eax +
mov eax 1 +
jz loc_407222  +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [ebx+84h] offset asc_475620 +
mov [esp+18h+var_18] 11h +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_4] +
mov [esp+8+var_4] eax +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] eax +
call sub_4071A0  +
test eax eax +
jz loc_407262  +
mov eax [eax+18h] +
add esp 8 +
retn   +
mov eax offset aUnknown_1 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_0] +
mov eax [eax+84h] +
mov edx [eax+10h] +
mov [esp+8+var_4] edx +
mov eax [eax+0Ch] +
mov [esp+8+var_8] eax +
call sub_4071A0  +
test eax eax +
jz loc_4072A5  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
mov eax 1 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_4071A0  +
test eax eax +
jz loc_4072E0  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
***
mov eax 1 +
add esp 8 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax 4 +
retn   +
***
mov eax [esp+0Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 3 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
js loc_407484  +
mov [esp+18h+var_18] ebx +
call malloc  +
test eax eax +
jz loc_407480  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_407478  +
mov [esp+18h+var_18] 6 +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_4] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_4074C8  +
test ecx ecx +
jz loc_4074C8  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_4074D5  +
imul ecx ebx +
mov [esp+18h+arg_0] ecx +
add esp 18h +
pop ebx  +
jmp sub_407460  +
mov [esp+18h+var_18] 6 +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_407537  +
test ebx ebx +
js loc_407524  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_407520  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_407514  +
mov [esp+18h+var_18] 6 +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_407460  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov ecx [esp+28h] +
mov esi [esp+20h] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_40757D  +
test ecx ecx +
jz loc_40757D  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_407592  +
imul ecx ebx +
mov [esp+20h] esi +
mov [esp+24h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_4074F0  +
***
mov dword ptr [esp] 6 +
call sub_4029E0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_4074F0  +
test eax eax +
jz loc_4075D1  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_4075CC  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call free  +
mov eax [esp+18h+var_C] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] esi +
call sub_407460  +
test eax eax +
mov ebx eax +
jnz loc_407610  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_407607  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
mov [esp+4] esi +
call sub_4074A0  +
test eax eax +
mov ebx eax +
jz loc_40766B  +
imul esi edi +
test esi esi +
jz loc_40766B  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] 4 +
mov edx eax +
shr edx 18h +
mov [esp+2Ch+var_10] dl +
mov edx eax +
shr edx 10h +
mov [esp+1Dh] dl +
mov edx eax +
mov [esp+2Ch+var_D] al +
mov eax [esp+2Ch+arg_0] +
shr edx 8 +
mov [esp+2Ch+var_E] dl +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call sub_408570  +
cmp eax 4 +
setz al  +
add esp 2Ch +
movzx eax al +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_4076F0  +
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_407710  +
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax] cl +
mov [eax+1] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov [eax] dl +
shr edx 8 +
mov [eax+1] dl +
retn   +
***
jmp sub_407790  +
***
mov edx [esp+arg_0] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
push ebx  +
mov edx [esp+8] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
movzx ecx byte ptr [ecx+7] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
movzx ecx byte ptr [ecx] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx+7] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 18h +
mov [eax] cl +
mov ecx edx +
shr ecx 10h +
mov [eax+1] cl +
mov ecx edx +
shr ecx 8 +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax+1] cl +
mov ecx edx +
mov [eax] dl +
shr ecx 10h +
shr edx 18h +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
jmp loc_407AD0  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov esi [esp+14h] +
mov eax [esp+0Ch] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+1] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+2] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+4] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+5] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+3] dl +
mov [esi+6] cl +
mov [esi+7] al +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
mov esi [esp+14h] +
mov eax [esp+0Ch] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi+7] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+6] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+5] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+3] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+2] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+4] dl +
mov [esi+1] cl +
mov [esi] al +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+3Ch] +
mov eax [esp+30h] +
mov edx [esp+34h] +
mov ebp [esp+38h] +
test cl 7 +
mov esi [esp+40h] +
jnz loc_407BCD  +
test ecx ecx +
lea edi [ecx+7] +
cmovns edi ecx +
xor ecx ecx +
sar edi 3 +
lea ebx [edi-1] +
test edi edi +
mov [esp+0Ch] ebx +
jle loc_407BC5  +
mov ebx [esp+0Ch] +
sub ebx ecx +
test esi esi +
cmovz ebx ecx +
add ecx 1 +
mov [ebp+ebx+0] al +
shrd eax edx +
shr edx 8 +
cmp ecx edi +
jnz loc_407BA8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aBfd_put_bits +
mov dword ptr [esp+4] 2E2h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_402960  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov ebp [esp+48h] +
test al 7 +
jnz loc_407C70  +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
mov [esp+18h] eax +
sar dword ptr [esp+18h] 3 +
mov ebx [esp+18h] +
test ebx ebx +
jle loc_407C6A  +
sub ebx 1 +
xor esi esi +
xor eax eax +
xor edx edx +
mov [esp+1Ch] ebx +
mov [esp+48h] ebp +
lea esi [esi+0] +
mov ecx [esp+48h] +
mov ebx edx +
mov edi [esp+1Ch] +
mov ebp [esp+40h] +
sub edi esi +
test ecx ecx +
cmovnz edi esi +
mov ecx eax +
movzx edi byte ptr [ebp+edi+0] +
shl ecx 8 +
add esi 1 +
shld ebx eax +
mov edx ebx +
or edi ecx +
cmp esi [esp+18h] +
mov eax edi +
jnz loc_407C30  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor edx edx +
jmp loc_407C62  +
***
mov dword ptr [esp+8] offset aBfd_get_bits +
mov dword ptr [esp+4] 2F7h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_402960  +
lea esi [esi+0] +
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+44h] +
mov ecx [esp+3Ch] +
mov ebx [esp+40h] +
test edx edx +
jz loc_407D55  +
mov eax [esp+34h] +
test byte ptr [eax+18h] 30h +
jnz loc_407D90  +
mov eax [esp+30h] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_407D60  +
mov eax [esp+34h] +
mov ebp [eax+28h] +
test ebp ebp +
jz loc_407D60  +
mov eax [esp+44h] +
xor edx edx +
mov edi edx +
mov esi eax +
add esi ecx +
adc edi ebx +
cmp edx edi +
jg loc_407D76  +
jge loc_407DC0  +
cmp edi 0 +
jge loc_407D70  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+30h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_4086D0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_407D55  +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_4084C0  +
cmp [esp+44h] eax +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebp [eax+24h] +
jmp loc_407CE0  +
***
jg loc_407D76  +
cmp esi ebp +
jbe loc_407D01  +
mov dword ptr [esp] 5 +
call sub_4029E0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+30h] +
mov dword ptr [esp] offset aBUnableToGetDe +
mov [esp+4] eax +
call off_4730E4  +
mov dword ptr [esp] 5 +
call sub_4029E0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp [esp+44h] esi +
ja loc_407D76  +
jmp loc_407CFC  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_generic_g +
mov dword ptr [esp+4] 362h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_402960  +
nop   +
push esi  +
mov eax 1 +
push ebx  +
sub esp 14h +
mov esi [esp+34h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test esi esi +
jnz loc_407E10  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+20h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_4086D0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_407E0A  +
mov eax [esp+20h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_408570  +
cmp esi eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
add eax 1 +
shr edx 1 +
jnz loc_407E80  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax 4Ch +
cmp byte ptr [edx+18h] 5Fh +
mov edx 2Eh +
cmovnz eax edx +
mov edx [esp+8] +
cmp al [edx] +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov ecx [esp+20h] +
mov edx [esp+24h] +
mov eax [ecx+4] +
mov edx [edx+4] +
mov eax [eax+8] +
mov edx [edx+8] +
cmp eax edx +
jz loc_407F23  +
cmp eax 2 +
jz loc_407F23  +
cmp edx 2 +
jz loc_407F23  +
test eax eax +
mov edx offset aBCompiledForAB +
mov eax offset aBCompiledForAL +
cmovnz edx eax +
mov [esp+4] ecx +
mov [esp] edx +
call off_4730E4  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_49A0C4 +
mov ebx [esp+3Ch] +
or eax ebx +
cmp eax 0FFFFFFFFh +
jz loc_407FA4  +
mov eax ds:_iob +
add eax 20h +
mov [esp] eax +
call fflush  +
test ebx ebx +
jz loc_407FB0  +
mov eax [esp+38h] +
mov [esp+14h] ebx +
mov dword ptr [esp+4] offset aDeprecatedSCal +
mov [esp+10h] eax +
mov eax [esp+34h] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
mov eax ds:_iob +
not ebx  +
add eax 40h +
mov [esp] eax +
call fflush  +
or ds:dword_49A0C4 ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aDeprecatedSC_0 +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
jmp loc_407F8C  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_407FF0  +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov edi [esp+arg_4] +
mov ebp [esp+arg_10] +
cmp edi ebp +
jnb loc_40809F  +
movzx eax byte ptr [edi] +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_4080AE  +
sub ebp edi +
mov ecx 7 +
mov edx 1 +
jmp loc_408067  +
movzx eax byte ptr [edi+edx] +
add edx 1 +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or esi ebx +
test al al +
jns loc_40806B  +
cmp edx ebp +
jnz loc_408050  +
cmp ecx 1Fh +
setbe bl  +
mov edi [esp+arg_8] +
test edi edi +
jz loc_40807F  +
mov edi [esp+arg_8] +
mov [edi] edx +
mov edx [esp+arg_C] +
test edx edx +
jz loc_408098  +
test bl bl +
jz loc_408098  +
test al 40h +
jz loc_408098  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 1 +
xor eax eax +
xor ecx ecx +
xor edx edx +
xor esi esi +
jmp loc_408071  +
mov ebx 1 +
mov ecx 7 +
mov edx 1 +
jmp loc_408071  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_4080D0  +
cmp ecx 1Fh +
ja loc_4080F9  +
test al 40h +
jz loc_4080F9  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
retn   +
***
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov esi [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [eax+8] +
jnz loc_4081A6  +
test edi 2 +
jnz loc_4081B6  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_40818C  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_408194  +
mov byte ptr [edi] 0 +
mov eax [ebx] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_408175  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_408175  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+8] +
mov eax [esi+4] +
test eax eax +
jz loc_4081EB  +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+var_14] esi +
call free  +
xor eax eax +
mov dword ptr [ebx+8] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_C] +
mov ecx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
test esi esi +
mov ebx [ecx+8] +
jz loc_408233  +
add eax [ecx+18h] +
adc edx [ecx+1Ch] +
test edx edx +
js loc_4082BD  +
mov edi [ebx] +
mov esi eax +
cmp eax edi +
jbe loc_40825B  +
test byte ptr [ecx+28h] 10h +
jz loc_408294  +
add edi 7Fh +
add esi 7Fh +
and edi 0FFFFFF80h +
and esi 0FFFFFF80h +
cmp edi esi +
mov [ebx] eax +
jb loc_408264  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call sub_4075B0  +
test eax eax +
mov [ebx+4] eax +
jz loc_4082E1  +
sub esi edi +
add edi eax +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
call memset  +
jmp loc_40825B  +
mov [ecx+18h] edi +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov [esp+10h+var_10] 12h +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
jmp loc_40825D  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_40825D  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
mov dword ptr [ebx] 0 +
jmp loc_40825D  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ecx [esp+38h+arg_8] +
mov edi [eax+18h] +
mov ebp [eax+1Ch] +
mov ebx [eax+8] +
mov eax ecx +
add eax edi +
adc edx ebp +
cmp edx 0 +
mov esi [ebx] +
ja loc_40840B  +
cmp eax esi +
jbe loc_408470  +
cmp esi edi +
jb loc_408457  +
sub esi edi +
mov [esp+38h+var_20] esi +
mov [esp+38h+var_1C] 0 +
mov [esp+38h+var_38] 12h +
call sub_4029E0  +
mov eax [esp+38h+arg_0] +
mov eax [eax+18h] +
add eax [ebx+4] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_38] eax +
call memcpy  +
mov eax [esp+38h+var_20] +
mov edx [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_20] 0 +
xor esi esi +
mov [esp+38h+var_1C] 0 +
jmp loc_40841D  +
mov esi ecx +
mov eax edi +
mov [esp+38h+var_20] ecx +
mov [esp+38h+var_1C] 0 +
jmp loc_408430  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+88h] +
test eax eax +
jz loc_408508  +
mov ecx [esi+18h] +
xor edx edx +
mov ebx [esi+1Ch] +
mov ebp [eax+4] +
mov eax edi +
add eax ecx +
adc edx ebx +
cmp edx 0 +
jbe loc_408550  +
cmp ebx 0 +
jbe loc_408500  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx ebp +
jnb loc_4084F4  +
mov edi ebp +
sub edi ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_408560  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_4084F6  +
mov ecx edx +
xor ebx ebx +
add [esi+18h] ecx +
mov eax edx +
adc [esi+1Ch] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax ebp +
ja loc_4084EF  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_40850F  +
nop   +
lea esi [esi+0] +
xor ecx ecx +
xor ebx ebx +
xor edx edx +
jmp loc_40853A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4085E0  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_4085B3  +
mov ecx eax +
xor ebx ebx +
add [esi+18h] ecx +
adc [esi+1Ch] ebx +
cmp ebp edi +
jz loc_4085CF  +
call ds:__imp__errno  +
mov dword ptr [eax] 1Ch +
mov [esp+1Ch+var_1C] 1 +
call sub_4029E0  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor ebx ebx +
xor ebp ebp +
jmp loc_4085AD  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_408640  +
mov eax [eax+8] +
mov edi esi +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esi+8Ch] +
test ecx ecx +
jnz loc_40861B  +
jmp loc_40862B  +
mov edi ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
sub eax [edi+38h] +
sbb edx [edi+3Ch] +
test ebx ebx +
jnz loc_408617  +
mov ebx edx +
mov ecx eax +
mov [esi+18h] ecx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor ebx ebx +
xor ecx ecx +
mov [esi+18h] ecx +
xor eax eax +
xor edx edx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_408670  +
mov edx [edx+14h] +
jmp edx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4086A6  +
mov ecx [esp+1Ch+arg_4] +
mov edx [edx+18h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] ecx +
call edx  +
test eax eax +
js loc_4086B0  +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
nop   +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_4029E0  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_C] 1 +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
jbe loc_4086FA  +
mov [esp+1Ch+var_18] 11Fh +
mov [esp+1Ch+var_1C] offset a____Binutils_2 +
call sub_402930  +
cmp [esp+1Ch+arg_C] 1 +
jz loc_4087F0  +
mov eax [esp+1Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 2 +
jz loc_408726  +
mov eax [esp+1Ch+arg_0] +
mov ebp [eax+8Ch] +
test ebp ebp +
jz loc_408814  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jnz loc_4087A3  +
mov eax [esp+1Ch+arg_0] +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_4087A3  +
mov ebp [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
jmp loc_40874A  +
mov ebp ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
add eax [ebp+38h] +
adc edx [ebp+3Ch] +
test ebx ebx +
jnz loc_408746  +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_4087B2  +
mov ecx [ecx+0Ch] +
mov ebx [esp+1Ch+arg_C] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_10] ebx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
test eax eax +
mov ebx eax +
jnz loc_4087B7  +
mov edx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_408804  +
mov [eax+18h] esi +
mov [eax+1Ch] edi +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
mov ecx [ebx+0Ch] +
test ecx ecx +
jnz loc_408765  +
mov ebx 0FFFFFFFFh +
mov ebp ds:__imp__errno +
call ebp  +
mov edi [eax] +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4085F0  +
cmp edi 16h +
jz loc_408840  +
mov [esp+1Ch+var_1C] 1 +
call sub_4029E0  +
call ebp  +
mov [eax] edi +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
xor eax eax +
or edx edi +
jnz loc_408705  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [eax+18h] esi +
adc [eax+1Ch] edi +
add esp 1Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_C] +
mov eax esi +
test ebx ebx +
jnz loc_408835  +
mov edx [esp+1Ch+arg_0] +
xor eax [edx+18h] +
or eax [edx+1Ch] +
jnz loc_4087A3  +
xor eax eax +
jmp loc_40879B  +
mov edx edi +
jmp loc_40875A  +
mov [esp+1Ch+var_1C] 12h +
call sub_4029E0  +
mov eax ebx +
jmp loc_40879B  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 4 +
jnz loc_4088A0  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_408895  +
mov eax [eax+18h] +
lea edx [esp+10h] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_408895  +
mov eax [esp+34h] +
mov [ebx+20h] eax +
add esp 48h +
pop ebx  +
retn   +
***
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+20h] +
add esp 48h +
pop ebx  +
retn   +
***
sub esp 4Ch +
mov eax [esp+50h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4088E0  +
mov edx [edx+18h] +
lea ecx [esp+10h] +
mov [esp+4] ecx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_4088E0  +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
add esp 4Ch +
retn   +
***
xor eax eax +
xor edx edx +
add esp 4Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 18h +
mov eax [esp+2Ch] +
mov ecx [esp+30h] +
mov edi [esp+40h] +
mov ebp [esp+44h] +
mov edx [eax+0Ch] +
mov [esp] ecx +
mov [esp+4] edi +
mov [esp+8] ebp +
test edx edx +
jz loc_408925  +
mov edx [edx+1Ch] +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
add esp 18h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_0] +
lea esi ds:0[eax*4] +
mov edi esi +
shr edi 2 +
cmp edi eax +
jz loc_408975  +
mov [esp+1Ch+var_1C] 6 +
call sub_4029E0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_45E9D0  +
test eax eax +
mov [ebx+8] eax +
jz loc_40895F  +
test esi esi +
jnz loc_4089E3  +
mov edx 8 +
mov ecx [eax+4] +
cmp ecx edx +
jb loc_4089EB  +
mov ebp [eax] +
sub ecx edx +
mov [eax+4] ecx +
add ebp edx +
mov [eax] ebp +
mov eax ebp +
sub eax edx +
test eax eax +
mov [ebx] eax +
jz loc_408A00  +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [esp+1Ch+arg_8] +
mov [ebx+0Ch] edi +
mov dword ptr [ebx+10h] 0 +
and byte ptr [ebx+18h] 0FEh +
mov [ebx+14h] eax +
mov eax [esp+1Ch+arg_4] +
mov [ebx+4] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esi+7] +
and edx 0FFFFFFF8h +
jnz loc_40898A  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call sub_45EA30  +
jmp loc_4089A0  +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_45EB40  +
mov dword ptr [ebx+8] 0 +
jmp loc_40895F  +
***
sub esp 1Ch +
mov eax dword_4733D0 +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_408940  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_45EB40  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_8] +
mov eax [edi+4] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] 0 +
call eax  +
test eax eax +
mov ebp eax +
jz loc_408C72  +
mov ecx [edi+0Ch] +
xor edx edx +
mov [eax+4] esi +
mov [eax+8] ebx +
mov eax ebx +
div  ecx +
mov eax [edi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebp+0] edx +
mov [eax] ebp +
mov eax [edi+10h] +
test byte ptr [edi+18h] 1 +
lea edx [eax+1] +
mov eax ebp +
mov [edi+10h] edx +
jnz loc_408C20  +
lea ebx [ecx+ecx*2] +
shr ebx 2 +
cmp edx ebx +
jbe loc_408C20  +
mov esi offset unk_475910 +
mov edx offset unk_4758A0 +
mov eax esi +
sub eax edx +
sar eax 2 +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
lea ebx [edx+eax*4] +
cmp ecx [ebx] +
jb loc_408B22  +
jmp loc_408C36  +
mov eax ebx +
sub eax edx +
sar eax 2 +
mov esi eax +
shr esi 1Fh +
add eax esi +
sar eax 1 +
lea eax [edx+eax*4] +
cmp ecx [eax] +
jnb loc_408C3A  +
mov ebx eax +
cmp edx ebx +
jnz loc_408B05  +
mov eax [edx] +
cmp ecx eax +
jnb loc_408C28  +
test eax eax +
lea ebx ds:0[eax*4] +
jz loc_408C28  +
mov esi ebx +
shr esi 2 +
cmp esi eax +
mov [esp+2Ch+var_1C] esi +
jnz loc_408C28  +
test ebx ebx +
mov edx [edi+8] +
jz loc_408C4C  +
lea eax [ebx+7] +
and eax 0FFFFFFF8h +
jnz loc_408C51  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call sub_45EA30  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_408C28  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov eax [edi+0Ch] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_408C10  +
mov eax [edi] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_10] ebp +
mov esi [esp+2Ch+var_18] +
lea ebp ds:0[esi*4] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jz loc_408BFD  +
mov eax [esi+8] +
mov ebx esi +
jmp loc_408BD7  +
cmp [ecx+8] eax +
jnz loc_408BDD  +
mov ebx ecx +
mov ecx [ebx] +
test ecx ecx +
jnz loc_408BD0  +
mov [edx] ecx +
xor edx edx +
div  [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_20] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebx] edx +
mov [eax] esi +
mov eax [edi] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jnz loc_408BC8  +
add [esp+2Ch+var_18] 1 +
mov esi [esp+2Ch+var_14] +
cmp [esp+2Ch+var_18] esi +
jnz loc_408BB4  +
mov ebp [esp+2Ch+var_10] +
mov eax [esp+2Ch+var_20] +
mov [edi] eax +
mov eax [esp+2Ch+var_1C] +
mov [edi+0Ch] eax +
mov eax ebp +
nop   +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or byte ptr [edi+18h] 1 +
add esp 2Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx esi +
lea edx [eax+4] +
cmp edx ebx +
jz loc_408B26  +
mov esi ebx +
jmp loc_408AE9  +
mov eax 8 +
mov ecx [edx+4] +
cmp ecx eax +
jb loc_408B67  +
mov esi [edx] +
sub ecx eax +
mov [edx+4] ecx +
add esi eax +
mov [edx] esi +
sub esi eax +
mov [esp+2Ch+var_20] esi +
jmp loc_408B77  +
xor eax eax +
jmp loc_408C20  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ebx [esp+38h+arg_4] +
mov [esp+38h+var_24] eax +
mov eax [esp+38h+arg_8] +
lea ebp [ebx+1] +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_C] +
mov [esp+38h+var_1C] eax +
movzx eax byte ptr [ebx] +
test eax eax +
jz loc_408CCB  +
nop   +
mov ecx eax +
add ebp 1 +
shl ecx 11h +
add eax ecx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ebp-1] +
test eax eax +
jnz loc_408CB0  +
sub ebp ebx +
mov ecx [esp+38h+var_24] +
sub ebp 1 +
mov eax ebp +
add edx ebp +
shl eax 11h +
add edx eax +
mov esi edx +
shr esi 2 +
xor esi edx +
xor edx edx +
mov eax esi +
div  dword ptr [ecx+0Ch] +
mov eax [ecx] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_408CFC  +
jmp loc_408D20  +
mov edi [edi] +
test edi edi +
jz loc_408D20  +
cmp [edi+8] esi +
nop   +
jnz loc_408CF6  +
mov [esp+38h+var_34] ebx +
mov eax [edi+4] +
mov [esp+38h+var_38] eax +
call strcmp  +
test eax eax +
jnz loc_408CF6  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+38h+var_20] +
test edx edx +
jz loc_408DB4  +
mov eax [esp+38h+var_1C] +
test eax eax +
jz loc_408DB0  +
mov eax [esp+38h+var_24] +
mov edi ebp +
add edi 1 +
mov eax [eax+8] +
jnz loc_408D90  +
mov edx [eax+4] +
mov ebp 8 +
cmp edx ebp +
jnb loc_408D9F  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] eax +
call sub_45EA30  +
mov ebp eax +
test ebp ebp +
jz loc_408DBB  +
mov [esp+38h+var_30] edi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ebp +
call memcpy  +
mov eax [esp+38h+var_24] +
mov [esp+38h+arg_8] esi +
mov [esp+38h+arg_4] ebp +
mov [esp+38h+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_408A70  +
add ebp 8 +
and ebp 0FFFFFFF8h +
jz loc_408D4E  +
mov edx [eax+4] +
cmp edx ebp +
jb loc_408D4E  +
mov ecx [eax] +
sub edx ebp +
mov [eax+4] edx +
add ecx ebp +
mov [eax] ecx +
sub ecx ebp +
mov ebp ecx +
jmp loc_408D5C  +
mov ebp ebx +
jmp loc_408D70  +
xor eax eax +
jmp loc_408D17  +
mov [esp+38h+var_38] 6 +
call sub_4029E0  +
xor eax eax +
jmp loc_408D17  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov ecx [esp+28h+arg_8] +
mov ebx [esi+0Ch] +
mov eax [ecx+8] +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
test edx edx +
jz loc_408E0C  +
cmp ecx edx +
jnz loc_408E06  +
jmp loc_408E2A  +
cmp ecx eax +
jz loc_408E28  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_408E00  +
mov [esp+28h+var_20] offset aBfd_hash_renam +
mov [esp+28h+var_24] 243h +
mov [esp+28h+var_28] offset a____Binutils_7 +
call sub_402960  +
mov eax edx +
mov edx [ecx] +
mov [eax] edx +
mov eax [esp+28h+arg_4] +
mov [ecx+4] eax +
movzx edx byte ptr [eax] +
lea edi [eax+1] +
xor eax eax +
test edx edx +
jz loc_408E5C  +
mov ebp edx +
add edi 1 +
shl ebp 11h +
add edx ebp +
add edx eax +
mov eax edx +
shr eax 2 +
xor eax edx +
movzx edx byte ptr [edi-1] +
test edx edx +
jnz loc_408E41  +
sub edi [esp+28h+arg_4] +
sub edi 1 +
add eax edi +
shl edi 11h +
lea edx [eax+edi] +
mov eax edx +
shr eax 2 +
xor eax edx +
xor edx edx +
mov [ecx+8] eax +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ecx] edx +
mov [eax] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
test ebx ebx +
mov edx [eax+8] +
jz loc_408F22  +
lea ecx [ebx+7] +
and ecx 0FFFFFFF8h +
jnz loc_408F27  +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] edx +
call sub_45EA30  +
test eax eax +
jz loc_408F3F  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx 8 +
mov esi [edx+4] +
cmp esi ecx +
jb loc_408F0C  +
mov eax [edx] +
sub esi ecx +
mov [edx+4] esi +
add eax ecx +
mov [edx] eax +
sub eax ecx +
test eax eax +
jnz loc_408F1C  +
test ebx ebx +
jz loc_408F1C  +
mov [esp+14h+var_14] 6 +
mov [esp+14h+var_8] eax +
call sub_4029E0  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
test edx edx +
jz loc_408F80  +
mov dword ptr [edx+0Ch] 0FFFFFFFFh +
mov eax edx +
mov dword ptr [edx+10h] 0 +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] eax +
call sub_408EF0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_408F6B  +
jmp loc_408F7B  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test eax eax +
jz loc_408FB0  +
retn   +
mov [esp+arg_4] 0Ch +
mov [esp+arg_0] edx +
jmp sub_408EF0  +
***
jmp sub_408FD0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi+18h] +
mov edx [edi+0Ch] +
or eax 1 +
test edx edx +
mov [edi+18h] al +
jz loc_409028  +
mov eax [edi] +
mov edx [esp+1Ch+var_10] +
mov ebp [eax+edx*4] +
test ebp ebp +
jnz loc_409017  +
jmp loc_409036  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_409036  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call esi  +
test eax eax +
jnz loc_409010  +
movzx eax byte ptr [edi+18h] +
and eax 0FFFFFFFEh +
mov [edi+18h] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [esp+1Ch+var_10] 1 +
mov eax [esp+1Ch+var_10] +
cmp [edi+0Ch] eax +
ja loc_408FFC  +
jmp loc_409024  +
***
mov ecx [esp+4] +
xor edx edx +
mov eax ds:dword_475840[edx*4] +
cmp eax ecx +
jnb loc_40906E  +
add edx 1 +
cmp edx 0Bh +
jnz loc_409056  +
mov eax 10001h +
mov dword_4733D0 eax +
retn   +
***
mov [esp+18h+var_18] 2Ch +
call sub_407460  +
test eax eax +
mov ebx eax +
jz loc_4090E0  +
mov eax dword_4733D0 +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] offset sub_408F60 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_408940  +
test eax eax +
jz loc_4090E4  +
mov dword ptr [ebx+1Ch] 0 +
mov eax ebx +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_4090D9  +
mov [esp+18h+var_18] ebx +
call free  +
xor eax eax +
jmp loc_4090D9  +
***
sub esp 0Ch +
call sub_409080  +
test eax eax +
jz loc_409103  +
mov dword ptr [eax+28h] 1 +
add esp 0Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_45EB40  +
mov dword ptr [ebx+8] 0 +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov esi [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_409190  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
call sub_408C80  +
test eax eax +
mov ebx eax +
jz loc_409200  +
mov eax [eax+0Ch] +
cmp eax 0FFFFFFFFh +
jz loc_4091C3  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] esi +
call sub_408EF0  +
test eax eax +
mov ebx eax +
jz loc_409200  +
mov ecx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_4] +
test ecx ecx +
jnz loc_409220  +
mov [ebx+4] eax +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
mov dword ptr [ebx+10h] 0 +
mov ebp [esi+1Ch] +
mov eax [esp+1Ch+arg_4] +
mov [ebx+0Ch] ebp +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add eax ebp +
lea edx [eax+1] +
mov [esi+1Ch] edx +
mov edx [esi+28h] +
test edx edx +
jnz loc_409210  +
mov eax [esi+20h] +
test eax eax +
jz loc_409260  +
mov eax [esi+24h] +
mov [eax+10h] ebx +
mov [esi+24h] ebx +
mov eax [ebx+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebp 2 +
add eax 3 +
mov [ebx+0Ch] ebp +
mov [esi+1Ch] eax +
jmp loc_4091E4  +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov [esp+1Ch+var_1C] esi +
lea edi [eax+1] +
mov [esp+1Ch+var_18] edi +
call sub_408EF0  +
test eax eax +
mov ebp eax +
jz loc_409200  +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov [ebx+4] ebp +
jmp loc_4091B5  +
mov [esi+20h] ebx +
jmp loc_4091F1  +
***
mov eax [esp+arg_0] +
mov eax [eax+1Ch] +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [eax+20h] +
mov ecx [eax+28h] +
test ebx ebx +
mov [esp+2Ch+var_20] ecx +
jnz loc_4092A7  +
jmp loc_409310  +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_409310  +
mov esi [ebx+4] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_4092ED  +
mov eax [edi+4] +
lea edx [esp+2Ch+var_E] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] ebp +
call eax  +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_408570  +
cmp eax 2 +
jnz loc_409301  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_408570  +
cmp eax ebp +
jz loc_4092A0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax+8] +
mov [esp+18h+var_18] eax +
call fclose  +
test eax eax +
jnz loc_409368  +
mov edx [ebx+10h] +
mov eax [ebx+14h] +
cmp ebx ds:dword_49A0C8 +
mov [edx+14h] eax +
mov ecx [ebx+14h] +
mov [ecx+10h] edx +
jz loc_409380  +
mov dword ptr [ebx+8] 0 +
mov eax esi +
sub ds:dword_49A0CC 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] 1 +
xor si si +
call sub_4029E0  +
jmp loc_40933B  +
***
xor eax eax +
cmp ebx ecx +
cmovnz eax ecx +
mov ds:dword_49A0C8 eax +
jmp loc_409352  +
***
mov eax ds:dword_49A0C8 +
test eax eax +
jz loc_4093E0  +
push ebx  +
sub esp 18h +
mov ebx [eax+10h] +
cmp byte ptr [ebx+2Ah] 0 +
jns loc_4093B1  +
jmp loc_4093C0  +
mov ebx [ebx+10h] +
cmp byte ptr [ebx+2Ah] 0 +
js loc_4093C0  +
cmp eax ebx +
jnz loc_4093A8  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_408490  +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx+1Ch] edx +
add esp 18h +
pop ebx  +
jmp sub_409320  +
mov eax 1 +
retn   +
***
sub esp 1Ch +
sub esp 0Ch +
xor eax eax +
mov edx [esp+0Ch+arg_0] +
cmp dword ptr [edx+0Ch] offset off_475980 +
jz loc_409446  +
add esp 0Ch +
retn   +
mov ecx [edx+8] +
test ecx ecx +
jz loc_409442  +
mov eax edx +
call sub_409320  +
sub eax 1 +
jmp loc_409442  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_4094F8  +
mov eax ds:dword_49A0D0 +
test eax eax +
jnz loc_409488  +
mov ds:dword_49A0D0 0Ah +
mov al 0Ah +
cmp ds:dword_49A0CC eax +
jge loc_4094D0  +
mov eax ds:dword_49A0C8 +
mov dword ptr [ebx+0Ch] offset off_475980 +
test eax eax +
jz loc_4094F0  +
mov [ebx+14h] eax +
mov eax [eax+10h] +
mov [ebx+10h] eax +
mov [eax+14h] ebx +
mov eax [ebx+14h] +
mov [eax+10h] ebx +
add ds:dword_49A0CC 1 +
mov eax 1 +
mov ds:dword_49A0C8 ebx +
add esp 18h +
pop ebx  +
retn   +
call sub_409390  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4094C4  +
mov eax ds:dword_49A0C8 +
mov dword ptr [ebx+0Ch] offset off_475980 +
test eax eax +
jnz loc_4094A0  +
lea esi [esi+0] +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_4094B2  +
mov [esp+18h+var_14] 1FFh +
mov [esp+18h+var_18] offset a____Binutils_0 +
call sub_402930  +
jmp loc_409473  +
***
jmp sub_409520  +
***
mov eax [esp+arg_0] +
cmp dword ptr [eax+0Ch] offset off_475980 +
jz loc_409533  +
mov eax 1 +
retn   +
mov edx [eax+8] +
test edx edx +
jz loc_40952D  +
jmp sub_409320  +
***
push ebx  +
mov ebx 1 +
sub esp 8 +
mov edx ds:dword_49A0C8 +
test edx edx +
jz loc_409567  +
cmp dword ptr [edx+0Ch] offset off_475980 +
mov eax 1 +
jz loc_409570  +
and ebx eax +
test edx edx +
jnz loc_409553  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
mov ecx [edx+8] +
test ecx ecx +
jz loc_409561  +
mov eax edx +
call sub_409320  +
mov edx ds:dword_49A0C8 +
jmp loc_409561  +
***
mov ebx [esp+48h+arg_0] +
or byte ptr [ebx+2Ah] 80h +
mov eax ds:dword_49A0D0 +
test eax eax +
jnz loc_4095B1  +
mov ds:dword_49A0D0 0Ah +
mov al 0Ah +
cmp ds:dword_49A0CC eax +
jge loc_409670  +
movzx eax byte ptr [ebx+28h] +
shr al 3 +
and eax 3 +
sub eax 2 +
cmp eax 1 +
ja loc_409684  +
test byte ptr [ebx+2Bh] 2 +
mov eax [ebx] +
jz loc_409610  +
mov [esp+48h+var_44] offset aRB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
test eax eax +
mov [ebx+8] eax +
jz loc_4096A0  +
mov [esp+48h+var_48] ebx +
call sub_409460  +
test eax eax +
jz loc_40967D  +
mov eax [ebx+8] +
add esp 48h +
pop ebx  +
retn   +
lea edx [esp+48h+var_38] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call ds:_stati64  +
test eax eax +
jnz loc_409640  +
mov eax [esp+48h+var_1C] +
or eax [esp+48h+var_20] +
jz loc_409640  +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_45F2B0  +
lea esi [esi+0] +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
or byte ptr [ebx+2Bh] 2 +
mov [ebx+8] eax +
test eax eax +
jnz loc_4095F6  +
mov [esp+48h+var_48] 1 +
call sub_4029E0  +
jmp loc_409602  +
call sub_409390  +
test eax eax +
jnz loc_4095BD  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx] +
mov [esp+48h+var_44] offset aRb +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_409659  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_409659  +
***
push ebx  +
sub esp 24h +
test byte ptr [eax+2Ah] 1 +
jnz loc_4097B9  +
mov ebx eax +
jmp loc_4096D7  +
mov ebx ecx +
mov ecx [ebx+8Ch] +
test ecx ecx +
jnz loc_4096D5  +
mov eax [ebx+8] +
test eax eax +
jz loc_409723  +
mov edx ds:dword_49A0C8 +
cmp ebx edx +
jz loc_40971D  +
mov esi [ebx+14h] +
test edx edx +
mov ecx [ebx+10h] +
mov [ecx+14h] esi +
mov esi [ebx+14h] +
mov [esi+10h] ecx +
jz loc_40974C  +
mov [ebx+14h] edx +
mov edx [edx+10h] +
mov [ebx+10h] edx +
mov [edx+14h] ebx +
mov edx [ebx+14h] +
mov [edx+10h] ebx +
mov ds:dword_49A0C8 ebx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
test dl 1 +
mov [esp+28h+var_C] edx +
jnz loc_40971D  +
mov [esp+28h+var_28] ebx +
call sub_409590  +
test eax eax +
jz loc_40978E  +
mov edx [esp+28h+var_C] +
and edx 2 +
jz loc_409754  +
mov eax [ebx+8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_409717  +
mov eax [ebx+8] +
mov [esp+28h+var_1C] 0 +
mov edx [ebx+18h] +
mov ecx [ebx+1Ch] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_20] ecx +
call sub_4084A0  +
test eax eax +
jz loc_409743  +
mov edx [esp+28h+var_C] +
and edx 4 +
jnz loc_409743  +
mov [esp+28h+var_28] 1 +
call sub_4029E0  +
mov ebx off_4730E4 +
call sub_402790  +
mov [esp+28h+var_28] eax +
call sub_4027A0  +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] offset aReopeningBS +
mov [esp+28h+var_20] eax +
call ebx  +
xor eax eax +
jmp loc_40971D  +
mov [esp+28h+var_20] offset aBfd_cache_look +
mov [esp+28h+var_24] 0F2h +
mov [esp+28h+var_28] offset a____Binutils_0 +
call sub_402960  +
lea esi [esi+0] +
lea edi [edi+0] +
sub esp 1Ch +
mov eax [esp+44h+var_24] +
cmp eax ds:dword_49A0C8 +
jz loc_409820  +
mov edx 4 +
call sub_4096C0  +
test eax eax +
jz loc_409840  +
mov [esp+44h+var_44] eax +
call _fileno_0  +
mov edx [esp+44h+var_20] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_44] eax +
call ds:_fstati64  +
test eax eax +
js loc_409825  +
add esp 1Ch +
retn   +
mov eax [eax+8] +
jmp loc_4097F9  +
mov [esp+44h+var_44] 1 +
mov [esp+44h+var_38] eax +
call sub_4029E0  +
mov eax [esp+44h+var_38] +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_40981A  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ds:dword_49A0C8 +
jz loc_409881  +
mov edx 1 +
call sub_4096C0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40987D  +
mov [esp+1Ch+var_1C] edx +
call fflush  +
test eax eax +
js loc_409886  +
add esp 1Ch +
retn   +
mov edx [eax+8] +
jmp loc_40986B  +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_4029E0  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push ebx  +
mov eax [esp+arg_0] +
cmp eax ds:dword_49A0C8 +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov ebx [esp+arg_C] +
jz loc_4098E6  +
xor edx edx +
cmp ebx 1 +
setnz dl  +
add edx edx +
call sub_4096C0  +
test eax eax +
jz loc_4098F0  +
mov [esp+arg_C] ebx +
mov [esp+arg_4] esi +
mov [esp+arg_8] edi +
mov [esp+arg_0] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4084A0  +
mov eax [eax+8] +
jmp loc_4098CA  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
mov ebx [esp+8+arg_0] +
cmp ebx ds:dword_49A0C8 +
jz loc_409930  +
mov edx 1 +
mov eax ebx +
call sub_4096C0  +
test eax eax +
jz loc_409937  +
mov [esp+8+arg_0] eax +
add esp 8 +
pop ebx  +
jmp sub_408490  +
mov eax [ebx+8] +
test eax eax +
jnz loc_409920  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+arg_C] +
cmp eax ds:dword_49A0C8 +
mov ebx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] ecx +
jz loc_4099E0  +
xor edx edx +
call sub_4096C0  +
mov ebp eax +
xor eax eax +
xor edx edx +
test ebp ebp +
jz loc_4099AB  +
mov eax [esp+2Ch+arg_4] +
xor edi edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
cmp [esp+2Ch+var_10] 0 +
mov esi eax +
jge loc_4099B3  +
mov eax esi +
mov edx edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jle loc_4099E5  +
mov [esp+2Ch+var_2C] ebp +
call ferror  +
test eax eax +
nop   +
jz loc_4099A7  +
mov [esp+2Ch+var_2C] 1 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4099AB  +
mov ebp [eax+8] +
jmp loc_409978  +
cmp ebx eax +
jbe loc_4099A7  +
jmp loc_4099B5  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+3Ch+arg_C] +
mov eax [esp+3Ch+arg_8] +
cmp edx 0 +
mov [esp+3Ch+var_1C] eax +
mov [esp+3Ch+var_18] edx +
jl loc_409BEB  +
jle loc_409BE0  +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_20] 0 +
mov ecx [esp+3Ch+var_1C] +
mov ebx [esp+3Ch+var_18] +
sub ecx [esp+3Ch+var_24] +
sbb ebx [esp+3Ch+var_20] +
cmp ebx 0 +
jle loc_409B83  +
mov esi [esp+3Ch+var_24] +
xor ebx ebx +
mov ecx 800000h +
mov eax ds:dword_49A0C8 +
add esi [esp+3Ch+arg_4] +
cmp [esp+3Ch+arg_0] eax +
jz loc_409BB6  +
mov eax [esp+3Ch+arg_0] +
xor edx edx +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call sub_4096C0  +
mov ecx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
mov ebp eax +
test ebp ebp +
jz loc_409BC5  +
mov [esp+3Ch+var_34] ecx +
xor edi edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call fread  +
mov ebx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
cmp edi ebx +
mov esi eax +
jge loc_409B64  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call ferror  +
mov ecx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
test eax eax +
jnz loc_409BD0  +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
mov [esp+3Ch+var_3C] 12h +
call sub_4029E0  +
mov eax esi +
mov edx edi +
neg eax  +
mov ecx [esp+3Ch+var_14] +
adc edx 0 +
mov ebx [esp+3Ch+var_10] +
neg edx  +
mov eax edx +
shr eax 1Fh +
test al al +
jnz loc_409B14  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
mov ebp eax +
or ebp edx +
jnz loc_409B1C  +
add [esp+3Ch+var_24] esi +
adc [esp+3Ch+var_20] edi +
cmp edi ebx +
jge loc_409B30  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jg loc_409B36  +
cmp esi ecx +
jb loc_409B20  +
mov eax [esp+3Ch+var_18] +
cmp [esp+3Ch+var_20] eax +
jg loc_409B20  +
jl loc_409A26  +
mov eax [esp+3Ch+var_1C] +
cmp [esp+3Ch+var_24] eax +
jb loc_409A26  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jg loc_409B6E  +
cmp eax ecx +
jb loc_409AB6  +
mov eax esi +
mov edx edi +
neg eax  +
adc edx 0 +
neg edx  +
mov eax edx +
shr eax 1Fh +
jmp loc_409B02  +
jl loc_409B91  +
cmp ecx 800000h +
ja loc_409A3F  +
mov eax ebx +
xor esi esi +
xor edi edi +
or eax ecx +
jz loc_409B06  +
mov esi [esp+3Ch+var_24] +
mov eax ds:dword_49A0C8 +
add esi [esp+3Ch+arg_4] +
cmp [esp+3Ch+arg_0] eax +
jnz loc_409A5D  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+8] +
test ebp ebp +
jnz loc_409A82  +
xor esi esi +
xor edi edi +
jmp loc_409B06  +
mov [esp+3Ch+var_3C] 1 +
jmp loc_409AE5  +
cmp [esp+3Ch+var_1C] 0 +
ja loc_409A16  +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_20] 0 +
jmp loc_409B20  +
***
mov eax 1 +
retn   +
***
mov eax 10h +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_413440  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call strlen  +
mov [esp+18h+var_18] edi +
mov ebx eax +
call strlen  +
mov [esp+18h+var_18] esi +
lea eax [ebx+eax+0Ah] +
mov [esp+18h+var_14] eax +
call sub_404B80  +
mov ebx eax +
mov eax offset unk_4759A0 +
test ebx ebx +
jz loc_409CC9  +
mov eax [esi] +
mov [esp+18h+var_C] edi +
mov [esp+18h+var_14] offset a_binary_S_S +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sprintf  +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_409CC7  +
mov edx ebx +
lea esi [esi+0] +
test ds:byte_4922A0[ecx+ecx] 8Ch +
jnz loc_409CBD  +
mov byte ptr [edx] 5Fh +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_409CB0  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebp [esi+0A0h] +
mov dword ptr [esp+4] 48h +
mov [esp] esi +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_409DA0  +
mov [eax] esi +
mov edx offset aStart +
mov eax esi +
call sub_409C50  +
mov edx offset aEnd +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 2 +
mov [ebx+10h] ebp +
mov dword ptr [ebx+14h] 0 +
mov [ebx+18h] esi +
mov [ebx+4] eax +
mov eax esi +
call sub_409C50  +
mov edx offset aSize +
mov [ebx+1Ch] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+24h] 2 +
mov [ebx+28h] ebp +
mov dword ptr [ebx+2Ch] 0 +
mov [ebx+20h] eax +
mov eax esi +
mov [ebx+30h] esi +
call sub_409C50  +
mov [ebx+34h] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+3Ch] 2 +
mov dword ptr [ebx+40h] offset off_473270 +
mov dword ptr [ebx+44h] 0 +
mov [ebx+38h] eax +
lea eax [ebx+18h] +
mov [edi] ebx +
add ebx 30h +
mov [edi+4] eax +
mov eax 3 +
mov [edi+8] ebx +
mov dword ptr [edi+0Ch] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_409D98  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 1 +
jnz loc_409E20  +
lea eax [esp+10h] +
mov dword ptr [ebx+7Ch] 3 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_408680  +
test eax eax +
js loc_409E33  +
mov dword ptr [esp+8] 123h +
mov dword ptr [esp+4] offset a_data +
mov [esp] ebx +
call sub_406180  +
test eax eax +
jz loc_409E43  +
mov edx [esp+28h] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+50h] 0 +
mov dword ptr [eax+54h] 0 +
mov [eax+24h] edx +
mov [ebx+0A0h] eax +
mov eax [ebx+4] +
add esp 48h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4029E0  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4029E0  +
xor eax eax +
jmp loc_409E1A  +
***
xor eax eax +
jmp loc_409E1A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+38h] +
mov edi [esp+44h] +
mov edx [esp+40h] +
mov esi [esp+30h] +
mov [esp+4] eax +
mov eax [esp+3Ch] +
test edi edi +
mov ebp [esp+34h] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
jz loc_409EFD  +
test byte ptr [esi+2Bh] 10h +
jnz loc_409EF1  +
mov eax [esi+64h] +
xor ebx ebx +
mov dword ptr [esp] 0 +
test eax eax +
mov edx eax +
jnz loc_409EA7  +
jmp loc_409EED  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_409ED7  +
mov ecx [edx+14h] +
and ecx 303h +
cmp ecx 103h +
jnz loc_409EA0  +
mov ecx [edx+24h] +
test ecx ecx +
jz loc_409EA0  +
mov ecx [esp] +
test ecx ecx +
jnz loc_409F10  +
mov ebx [edx+20h] +
mov edx [edx+0Ch] +
mov dword ptr [esp] 1 +
test edx edx +
jnz loc_409EA7  +
mov edx [eax+20h] +
mov dword ptr [eax+54h] 0 +
sub edx ebx +
mov [eax+50h] edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_409ED7  +
or byte ptr [esi+2Bh] 10h +
mov eax [ebp+14h] +
test al 3 +
jz loc_409EFD  +
test ah 2 +
jz loc_409F22  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [edx+20h] +
mov dword ptr [esp] 1 +
cmp ecx ebx +
jnb loc_409EA0  +
mov ebx ecx +
jmp loc_409EC9  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+44h] edi +
mov [esp+34h] ebp +
mov [esp+3Ch] eax +
mov eax [esp+4] +
mov [esp+30h] esi +
mov [esp+40h] edx +
mov [esp+38h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_407DF0  +
***
push ebx  +
sub esp 18h +
mov edx [esp+30h] +
mov ebx [esp+20h] +
mov eax [esp+2Ch] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4086D0  +
xor edx edx +
test eax eax +
jnz loc_409FAF  +
mov eax [esp+34h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_4084C0  +
xor edx edx +
cmp [esp+34h] eax +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push edi  +
mov ecx 0Eh +
push esi  +
push ebx  +
sub esp 5Ch +
lea ebx [esp+68h+var_50] +
mov esi [esp+68h+arg_0] +
mov [esp+68h+var_5C] eax +
mov edi ebx +
xor eax eax +
stos   +
mov eax [esp+68h+var_5C] +
mov [esp+68h+var_60] 38h +
mov [esp+68h+var_64] offset a1_2_7 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_4C] edx +
mov [esp+68h+var_50] eax +
mov [esp+68h+var_40] esi +
call sub_44F0B0  +
mov ecx [esp+68h+var_4C] +
test ecx ecx +
mov edi eax +
jnz loc_40A04D  +
jmp loc_40A055  +
test edi edi +
jnz loc_40A055  +
mov ecx esi +
sub ecx eax +
mov eax ecx +
add eax ebp +
mov [esp+68h+var_64] 4 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_44] eax +
call sub_44F150  +
cmp eax 1 +
mov edi eax +
jnz loc_40A055  +
mov [esp+68h+var_68] ebx +
call sub_44EED0  +
mov edx [esp+68h+var_4C] +
test edx edx +
mov edi eax +
jz loc_40A055  +
mov eax [esp+68h+var_40] +
test eax eax +
jnz loc_40A014  +
mov [esp+68h+var_68] ebx +
call sub_450F60  +
xor edx edx +
or eax edi +
jnz loc_40A06E  +
mov eax [esp+68h+var_40] +
xor edx edx +
test eax eax +
setz dl  +
add esp 5Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov ebx [esp+3Ch+arg_4] +
movzx eax byte ptr [eax+28h] +
mov edi [esi] +
and eax 18h +
cmp al 10h +
jz loc_40A0E0  +
mov ebp [ebx+28h] +
test ebp ebp +
jz loc_40A0E0  +
movzx eax byte ptr [ebx+18h] +
shr al 4 +
and eax 3 +
cmp eax 1 +
jz loc_40A100  +
cmp eax 2 +
jz loc_40A180  +
test eax eax +
jz loc_40A130  +
mov [esp+3Ch+var_34] offset aBfd_get_full_s +
mov [esp+3Ch+var_38] 145h +
mov [esp+3Ch+var_3C] offset a____Binutils_6 +
call sub_402960  +
nop   +
mov ebp [ebx+24h] +
test ebp ebp +
jnz loc_40A0A7  +
mov dword ptr [esi] 0 +
mov ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_40A292  +
test edi edi +
jz loc_40A299  +
cmp edi eax +
mov ebx 1 +
jz loc_40A0F2  +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call memcpy  +
jmp loc_40A0F2  +
test edi edi +
jz loc_40A280  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_4064D0  +
test eax eax +
jnz loc_40A26D  +
cmp [esi] edi +
jz loc_40A292  +
mov [esp+3Ch+var_3C] edi +
xor ebx ebx +
call free  +
jmp loc_40A0F2  +
mov eax [ebx+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_407460  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_18] eax +
jz loc_40A292  +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+3Ch+var_10] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+28h] 0 +
mov [ebx+24h] eax +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] ebx +
call sub_4064D0  +
mov edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
mov [ebx+28h] edx +
movzx edx byte ptr [ebx+18h] +
mov [ebx+24h] ecx +
and edx 0FFFFFFCFh +
or edx 20h +
test eax eax +
mov [ebx+18h] dl +
jz loc_40A24E  +
test edi edi +
jz loc_40A2B1  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_403960  +
mov edx 0Ch +
mov ecx edi +
test eax eax +
cmovz eax edx +
mov edx [ebx+2Ch] +
add eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_409FC0  +
test eax eax +
jnz loc_40A261  +
mov [esp+3Ch+var_3C] 11h +
call sub_4029E0  +
cmp [esi] edi +
jz loc_40A24E  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov eax [esp+3Ch+var_18] +
xor ebx ebx +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_40A0F2  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov [esi] edi +
mov ebx 1 +
jmp loc_40A0F2  +
mov [esp+3Ch+var_3C] ebp +
call sub_407460  +
test eax eax +
mov edi eax +
jnz loc_40A138  +
xor ebx ebx +
jmp loc_40A0F2  +
mov [esp+3Ch+var_3C] ebp +
call sub_407460  +
test eax eax +
mov edi eax +
jz loc_40A292  +
mov [esi] eax +
mov eax [ebx+6Ch] +
jmp loc_40A113  +
mov [esp+3Ch+var_3C] ebp +
call sub_407460  +
test eax eax +
mov edi eax +
jz loc_40A24E  +
jmp loc_40A207  +
***
mov eax [esp+4] +
movzx edx byte ptr [eax+18h] +
mov ecx edx +
and ecx 30h +
cmp cl 20h +
jnz loc_40A2EB  +
and edx 0FFFFFFCFh +
or edx 10h +
mov [eax+18h] dl +
mov edx [esp+8] +
or dword ptr [eax+14h] 4000h +
mov [eax+6Ch] edx +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx ecx byte ptr [esi+28h] +
and ecx 18h +
cmp cl 8 +
jnz loc_40A8B0  +
mov edi [ebx+24h] +
test edi edi +
jz loc_40A8B0  +
mov edx [ebx+28h] +
test edx edx +
jnz loc_40A8B0  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_40A8C6  +
mov [esp+2Ch+var_2C] 5 +
call sub_4029E0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+18h] 30h +
jnz loc_40A8B0  +
mov [esp+2Ch+var_2C] edi +
call sub_407460  +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov ebp eax +
call sub_4064D0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40A8BE  +
mov [esp+2Ch+var_2C] edi +
mov ecx ebp +
mov edx ebx +
mov eax esi +
call near ptr dword_40A4A0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_40A8BE  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
movzx ecx byte ptr [eax+28h] +
mov ebx [edx+24h] +
and ecx 18h +
cmp cl 10h +
jnz loc_40A94E  +
test ebx ebx +
jz loc_40A94E  +
mov ecx [esp+18h+arg_8] +
test ecx ecx +
jz loc_40A94E  +
mov ecx [edx+6Ch] +
test ecx ecx +
jz loc_40A961  +
mov [esp+18h+var_18] 5 +
call sub_4029E0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx+2Ch] +
test ecx ecx +
jnz loc_40A94E  +
test byte ptr [edx+18h] 30h +
jnz loc_40A94E  +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ebx +
call near ptr dword_40A4A0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_40A95C  +
***
mov edx [esp+8] +
xor eax eax +
jmp loc_40A9A0  +
add eax 1 +
cmp eax 25h +
jz loc_40A9B7  +
cmp ds:dword_476740[eax*8] edx +
jnz loc_40A998  +
imul eax ds:dword_476744[eax*8] +
add eax offset dword_476A80 +
retn   +
***
xor al al +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
movzx eax byte ptr [eax+4] +
cmp eax 24h +
jbe loc_40A9EB  +
mov [esp+8] eax +
mov eax [esp+20h] +
mov dword ptr [esp] offset aBInvalidAvrRel +
mov [esp+4] eax +
call off_4730E4  +
xor eax eax +
imul eax eax +
mov edx [esp+24h] +
add eax offset dword_476A80 +
mov [edx+0Ch] eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov ecx [edx+120h] +
mov ebx [ecx+3Ch] +
mov ebp [ecx+38h] +
mov edi [ebx+1Ch] +
mov ebx [edx+13Ch] +
mov [esp+4+var_4] edi +
test ebx ebx +
jz loc_40AA44  +
mov esi [edx+144h] +
xor ecx ecx +
cmp [esi] eax +
jnz loc_40AA3D  +
jmp loc_40AA51  +
cmp [esi+ecx*4] eax +
lea edi ds:0[ecx*4] +
jz loc_40AA53  +
add ecx 1 +
cmp ecx ebx +
jnz loc_40AA31  +
add esp 4 +
mov eax 20000h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov eax [esp+4+var_4] +
mov edx [edx+140h] +
add eax ebp +
add eax [edx+edi] +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+14h] 0 +
mov eax 1 +
retn   +
***
jmp loc_40AAA0  +
mov eax [esp+4] +
mov edx [esp+8] +
cmp dword ptr [eax+14h] 1 +
mov edx [edx+120h] +
sbb eax eax +
not eax  +
and eax 4 +
add [edx+24h] eax +
mov eax 1 +
retn   +
***
mov ebx [eax+0A0h] +
mov ecx [ebx+68h] +
mov edx [ebx+78h] +
test ecx ecx +
jnz loc_40AAF7  +
test edx edx +
jz loc_40AAF0  +
cmp [ebx+78h] edx +
jz loc_40AAF0  +
mov [ebx+78h] edx +
add esp 28h +
mov eax edx +
pop ebx  +
retn   +
test edx edx +
jnz loc_40AAE4  +
lea edx [ebx+48h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_28] eax +
call sub_420CB0  +
mov edx eax +
jmp loc_40AAE4  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_407160  +
mov edx 2 +
lea ecx [eax-1] +
cmp ecx 6Ah +
ja loc_40AB64  +
movzx edx ds:byte_4764DF[eax] +
mov eax [ebx+0A0h] +
mov ecx 53h +
mov [eax+26h] cx +
mov eax [ebx+0A0h] +
and dword ptr [eax+20h] 0FFFFFF80h +
mov eax [ebx+0A0h] +
or [eax+20h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+0A0h] +
movzx ecx word ptr [edx+26h] +
cmp cx 1057h +
jnz loc_40ABE0  +
mov edx [edx+20h] +
mov ebx 2 +
and edx 7Fh +
lea ecx [edx-1] +
cmp ecx 6Ah +
ja loc_40ABC3  +
movzx ebx ds:byte_47645F[edx] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 44h +
mov [esp] eax +
call sub_4071F0  +
add esp 18h +
pop ebx  +
retn   +
***
cmp cx 53h +
mov ebx 2 +
jz loc_40ABA9  +
jmp loc_40ABC3  +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 148h +
call sub_4075F0  +
test eax eax +
mov ebx eax +
jz loc_40AC70  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_40AD40 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43B9F0  +
test eax eax +
jz loc_40AC62  +
lea eax [ebx+0FCh] +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] offset sub_40ACE0 +
mov [esp] eax +
call sub_408A20  +
test eax eax +
jz loc_40AC74  +
mov dword ptr [ebx+24h] offset loc_40AC90 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_40AC5D  +
***
xor eax eax +
jmp loc_40AC5D  +
***
mov eax [esp+30h] +
mov [esp] eax +
call sub_42F200  +
xor eax eax +
jmp loc_40AC5D  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esi+9Ch] +
mov eax [ebx+140h] +
test eax eax +
jz loc_40ACB1  +
mov [esp] eax +
call free  +
mov eax [ebx+144h] +
test eax eax +
jz loc_40ACC3  +
mov [esp] eax +
call free  +
add ebx 0FCh +
mov [esp] ebx +
call sub_408A50  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_42F200  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_40AD20  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_408FA0  +
test eax eax +
jz loc_40AD34  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_408EF0  +
test eax eax +
jnz loc_40ACF0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
jmp loc_42F130  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 6Ch +
mov edi [eax+0A0h] +
mov [esp+70h+var_40] ecx +
mov ecx eax +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
mov [esp+70h+var_50] edx +
mov [esp+70h+var_48] eax +
call sub_424C30  +
mov [esp+70h+var_2C] eax +
mov eax [esi+8Ch] +
mov ecx [eax+30h] +
lea edx [eax+90h] +
mov [esp+70h+var_54] ecx +
xor ecx ecx +
cmp esi [esi+3Ch] +
mov esi [esi+24h] +
cmovnz ecx edx +
mov edx [ecx] +
mov [esp+70h+var_4C] esi +
test edx edx +
jz loc_40B295  +
mov eax [esp+70h+arg_0] +
xor ebx ebx +
mov esi [esp+70h+var_40] +
lea ebp [eax+esi] +
mov eax ebp +
mov ebp edi +
mov edi eax +
nop   +
mov eax [ecx+8] +
lea esi [ebx+ebx*2] +
lea esi [eax+esi*8] +
mov eax [esi+4] +
cmp eax [esp+70h+var_40] +
jbe loc_40B272  +
cmp eax edi +
jb loc_40B2A0  +
mov [esp+70h+var_3C] eax +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov eax [eax+8Ch] +
mov eax [eax+68h] +
xor ebx ebx +
mov ecx [esp+70h+var_40] +
mov [esp+70h+var_4C] eax +
mov eax [esp+70h+var_50] +
mov ebp [eax+4Ch] +
mov eax [esp+70h+var_3C] +
sub eax ecx +
cmp eax [esp+70h+arg_0] +
jz loc_40AE40  +
sub eax [esp+70h+arg_0] +
mov ebx [esp+70h+var_54] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+arg_0] +
add eax ecx +
add eax ebx +
mov [esp+70h+var_6C] eax +
mov eax ebx +
mov ebx 1 +
add eax ecx +
mov [esp+70h+var_70] eax +
call memmove  +
test esi esi +
jz loc_40B5EB  +
mov eax [esi+8] +
cmp eax 2 +
jz loc_40B4B5  +
cmp eax 3 +
jz loc_40B2BE  +
cmp eax 1 +
jz loc_40B4AD  +
xor eax eax +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_3C] +
mov [esp+70h+var_68] esi +
sub eax esi +
add eax [esp+70h+var_54] +
mov [esp+70h+var_70] eax +
call memset  +
test ebx ebx +
mov [esp+70h+var_30] 1 +
jz loc_40B3C0  +
mov esi [esp+70h+var_4C] +
lea eax [ebp+ebp*2+0] +
lea esi [esi+eax*4] +
mov eax [esp+70h+var_50] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
cmp esi ebx +
jbe loc_40AEFB  +
mov [esp+70h+var_4C] edi +
mov ebp [esp+70h+var_40] +
mov edi [esp+70h+var_50] +
mov eax [edi+3Ch] +
mov ecx [ebx] +
mov edx [edi+38h] +
mov eax [eax+1Ch] +
cmp ebp ecx +
mov [esp+70h+var_54] eax +
jnb loc_40AEF0  +
cmp [esp+70h+var_3C] ecx +
jbe loc_40AEF0  +
mov eax ds:dword_49A0E0 +
test eax eax +
jnz loc_40B42D  +
sub ecx [esp+70h+arg_0] +
mov [ebx] ecx +
add ebx 0Ch +
cmp esi ebx +
ja loc_40AEC1  +
mov edi [esp+70h+var_4C] +
mov eax [esp+70h+var_48] +
xor ecx ecx +
lea esi [edi+48h] +
mov [esp+70h+var_28] esi +
mov eax [eax+64h] +
test eax eax +
mov [esp+70h+var_4C] eax +
jz loc_40B095  +
mov ebp edi +
mov edi ecx +
nop   +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_40B080  +
mov ecx [esp+70h+var_50] +
mov esi [esp+70h+var_40] +
mov ebx [esp+70h+arg_4] +
mov edx [ecx+3Ch] +
add esi [ecx+38h] +
mov ecx [edx+1Ch] +
mov [esp+70h+var_44] esi +
add [esp+70h+var_44] ecx +
mov ecx [esp+70h+var_44] +
mov edx ecx +
sub edx [esp+70h+arg_0] +
test ebx ebx +
cmovz edx ecx +
mov ecx [esp+70h+var_4C] +
mov [esp+70h+var_44] edx +
mov edx [ecx+8Ch] +
mov ebx [edx+68h] +
test ebx ebx +
jz loc_40B46B  +
lea eax [eax+eax*2] +
lea ecx [ebx+eax*4] +
cmp ebx ecx +
jnb loc_40B080  +
mov esi ecx +
jmp loc_40AF9B  +
add ebx 0Ch +
cmp esi ebx +
jbe loc_40B080  +
test edi edi +
mov edx [ebp+68h] +
jz loc_40B2D0  +
mov eax [ebx+4] +
shr eax 8 +
cmp eax edx +
jnb loc_40AF90  +
lea eax [eax+eax*4] +
lea edx [edi+eax*4] +
mov eax [edx+10h] +
mov [esp+70h+var_54] edx +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_70] eax +
call sub_423710  +
mov edx [esp+70h+var_54] +
cmp eax [esp+70h+var_50] +
mov ecx [edx] +
jnz loc_40AF90  +
mov edx [esp+70h+var_50] +
mov eax [edx+3Ch] +
mov edx [edx+38h] +
mov eax [eax+1Ch] +
mov [esp+70h+var_38] eax +
add ecx [esp+70h+var_38] +
lea eax [ecx+edx] +
mov [esp+70h+var_54] eax +
mov eax ds:dword_49A0E0 +
test eax eax +
jnz loc_40B330  +
movzx eax byte ptr [ebx+4] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
jbe loc_40B36D  +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
add ecx eax +
mov [esp+70h+var_34] ecx +
mov ecx [esp+70h+var_54] +
cmp [esp+70h+var_44] ecx +
jb loc_40AF90  +
mov ecx [esp+70h+var_34] +
cmp [esp+70h+var_44] ecx +
jnb loc_40AF90  +
add edx [esp+70h+var_38] +
add edx [esp+70h+var_3C] +
cmp edx ecx +
jb loc_40AF90  +
mov ecx ds:dword_49A0E0 +
sub eax [esp+70h+arg_0] +
test ecx ecx +
mov [ebx+8] eax +
jz loc_40AF90  +
mov [esp+70h+var_70] offset aRelocationSAdd +
add ebx 0Ch +
call puts  +
cmp esi ebx +
ja loc_40AF9B  +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+70h+var_4C] eax +
jnz loc_40AF20  +
mov edi ebp +
mov esi [edi+78h] +
test esi esi +
jz loc_40B175  +
mov eax [edi+68h] +
lea edx [eax+eax*4] +
lea ebp [esi+edx*4] +
cmp esi ebp +
jnb loc_40B178  +
movzx eax byte ptr [esp+70h+var_30] +
mov [esp+70h+var_4C] edi +
mov edi [esp+70h+var_2C] +
and eax 1 +
mov byte ptr [esp+70h+var_44] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_38] eax +
jmp loc_40B0E1  +
add esi 14h +
cmp ebp esi +
jbe loc_40B171  +
cmp [esi+10h] edi +
jnz loc_40B0D6  +
mov eax [esi+4] +
mov ebx [esi] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_54] eax +
add eax ebx +
test edx edx +
jz loc_40B45D  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnbe dl  +
cmp [esp+70h+var_40] ebx +
jb loc_40B3D0  +
cmp [esp+70h+var_40] eax +
jnb loc_40B3D0  +
test edx edx +
jz loc_40B3D0  +
cmp eax [esp+70h+var_38] +
jb loc_40B4C5  +
mov ecx [esp+70h+var_54] +
sub ecx [esp+70h+arg_0] +
xor edx edx +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jz loc_40B41F  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnbe al  +
test eax eax +
jz loc_40B0D6  +
test dl dl +
jz loc_40B0D6  +
mov eax [esp+70h+arg_0] +
sub [esi] eax +
add esi 14h +
cmp ebp esi +
ja loc_40B0E1  +
mov edi [esp+70h+var_4C] +
mov eax [edi+68h] +
mov esi [esp+70h+var_48] +
mov edx [esi+0A0h] +
mov ebp [edx+218h] +
mov edx [edi+60h] +
shr edx 4 +
sub edx eax +
lea eax [ebp+edx*4+0] +
cmp ebp eax +
mov esi eax +
jnb loc_40B3C0  +
movzx eax byte ptr [esp+70h+var_30] +
mov ecx [esp+70h+var_50] +
and eax 1 +
mov byte ptr [esp+70h+var_4C] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_48] eax +
jmp loc_40B1CB  +
add ebp 4 +
cmp esi ebp +
jbe loc_40B3C0  +
mov ebx [ebp+0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_40B1C0  +
cmp [ebx+14h] ecx +
jnz loc_40B1C0  +
mov eax [ebx+2Ch] +
mov edi [ebx+18h] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_50] eax +
add eax edi +
test edx edx +
mov [esp+70h+var_54] eax +
jz loc_40B662  +
cmp [esp+70h+var_3C] eax +
setnbe al  +
movzx eax al +
cmp [esp+70h+var_40] edi +
jb loc_40B218  +
mov edx [esp+70h+var_54] +
cmp [esp+70h+var_40] edx +
jb loc_40B4E1  +
mov eax [esp+70h+var_30] +
test eax eax +
jz loc_40B6C7  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnbe al  +
mov edx eax +
cmp [esp+70h+var_40] edi +
setb al  +
and dl al +
jnz loc_40B6AF  +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_40B654  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnbe dl  +
test edx edx +
jz loc_40B1C0  +
test al al +
jz loc_40B1C0  +
mov eax [esp+70h+arg_0] +
sub [ebx+18h] eax +
jmp loc_40B1C0  +
cmp eax edi +
jnb loc_40ADDE  +
add ebx 1 +
cmp [ecx] ebx +
ja loc_40ADC0  +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov esi [esp+70h+var_4C] +
mov eax [eax+8Ch] +
mov [esp+70h+var_3C] esi +
xor esi esi +
jmp loc_40ADEE  +
mov [esp+70h+var_6C] 7A2h +
mov [esp+70h+var_70] offset a____Binutil_12 +
mov [esp+70h+var_44] ecx +
call sub_402930  +
mov ecx [esp+70h+var_44] +
jmp loc_40B27A  +
mov eax [esi+10h] +
mov ecx [esp+70h+arg_0] +
add [esi+14h] ecx +
jmp loc_40AE68  +
test edx edx +
jz loc_40AF90  +
mov edi [ebp+78h] +
test edi edi +
jnz loc_40AFA6  +
mov eax [esp+70h+var_28] +
mov [esp+70h+var_58] 0 +
mov [esp+70h+var_5C] 0 +
mov [esp+70h+var_60] 0 +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] edx +
mov [esp+70h+var_70] eax +
call sub_420CB0  +
test eax eax +
mov edi eax +
jnz loc_40B606  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+70h+var_44] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_34] edx +
mov [esp+70h+var_64] eax +
mov eax [ebx+8] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] offset aCheckingIfTheR +
add eax ecx +
mov [esp+70h+var_68] eax +
call printf  +
movzx eax byte ptr [ebx+4] +
mov edx [esp+70h+var_34] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
ja loc_40B012  +
mov ecx [esp+70h+var_4C] +
mov edx [ecx+8Ch] +
mov edx [edx+30h] +
test edx edx +
mov [esp+70h+var_14] edx +
jz loc_40B675  +
add edx [ebx] +
cmp eax 1Fh +
mov [esp+70h+var_34] edx +
jz loc_40B5CF  +
cmp eax 20h +
jz loc_40B5B3  +
cmp eax 1Eh +
jz loc_40B50C  +
mov [esp+70h+var_6C] 6F0h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_402930  +
jmp loc_40AF90  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_40B49F  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnbe cl  +
cmp [esp+70h+var_40] ebx +
setb dl  +
and cl dl +
jz loc_40B13C  +
cmp [esp+70h+var_3C] eax +
setbe dl  +
and dl byte ptr [esp+70h+var_44] +
jz loc_40B4BC  +
mov ecx [esp+70h+var_54] +
add ecx [esp+70h+arg_0] +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jnz loc_40B148  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnb al  +
jmp loc_40B151  +
mov eax ecx +
sub eax [esp+70h+arg_0] +
mov [esp+70h+var_68] ecx +
mov [esp+70h+var_70] offset aRelocationAtAd +
mov [esp+70h+var_64] eax +
mov eax [esp+70h+var_54] +
add eax edx +
add eax ecx +
mov [esp+70h+var_6C] eax +
call printf  +
mov ecx [ebx] +
jmp loc_40AEE7  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnb dl  +
jmp loc_40B106  +
mov eax [esp+70h+var_48] +
mov esi ecx +
mov [esp+70h+var_60] 1 +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] 0 +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_434EB0  +
mov ebx eax +
mov eax [esi+4Ch] +
jmp loc_40AF7A  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnb cl  +
jmp loc_40B3E5  +
mov eax [esi+0Ch] +
jmp loc_40AE68  +
xor eax eax +
jmp loc_40B2C1  +
mov edx ecx +
nop   +
jmp loc_40B13C  +
mov [esp+70h+var_6C] 864h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_402930  +
mov ecx [esi+4] +
jmp loc_40B130  +
test eax eax +
jz loc_40B218  +
mov eax [esp+70h+var_48] +
cmp [esp+70h+var_54] eax +
jb loc_40B6D7  +
mov eax [esp+70h+var_50] +
sub eax [esp+70h+arg_0] +
mov [ebx+2Ch] eax +
xor eax eax +
jmp loc_40B23E  +
movzx eax byte ptr [edx] +
add eax 0FFFFFF80h +
movzx eax al +
add eax 0FFFFFF80h +
mov [esp+70h+var_38] eax +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_24] eax +
add ecx eax +
mov edx ecx +
mov eax ecx +
sub edx [esp+70h+var_38] +
cmp edx ecx +
cmovnb ecx edx +
cmp [esp+70h+var_44] ecx +
jnb loc_40AF90  +
cmp edx eax +
cmova edx eax +
cmp [esp+70h+var_44] edx +
jb loc_40AF90  +
mov edx [esp+70h+var_38] +
mov ecx [esp+70h+arg_0] +
add ecx edx +
sub edx [esp+70h+arg_0] +
cmp [esp+70h+var_38] 0 +
cmovns ecx edx +
cmp [esp+70h+var_44] eax +
jnb loc_40B57F  +
mov eax [esp+70h+var_24] +
sub eax [esp+70h+arg_0] +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+4] +
cmp eax 1Fh +
jz loc_40B635  +
cmp eax 20h +
jz loc_40B619  +
cmp eax 1Eh +
jz loc_40B60E  +
mov [esp+70h+var_6C] 723h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_402930  +
jmp loc_40AF90  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_40B51C  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+38h] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_40B51C  +
mov eax [esp+70h+var_50] +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_30] 0 +
sub [eax+24h] esi +
jmp loc_40AE99  +
mov edx [ebp+68h] +
jmp loc_40AFA6  +
mov eax [esp+70h+var_34] +
mov [eax] cl +
jmp loc_40AF90  +
mov eax [esp+70h+var_48] +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_40AF90  +
mov eax [esp+70h+var_48] +
movzx ecx cx +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_40AF90  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnb dl  +
jmp loc_40B253  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setnb al  +
movzx eax al +
jmp loc_40B204  +
lea eax [esp+70h+var_14] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_406620  +
test eax eax +
jz loc_40AF90  +
mov eax [esp+70h+var_4C] +
mov edx [esp+70h+var_14] +
mov eax [eax+8Ch] +
mov [eax+30h] edx +
movzx eax byte ptr [ebx+4] +
jmp loc_40B386  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setbe al  +
and al byte ptr [esp+70h+var_4C] +
jnz loc_40B6FB  +
mov eax edx +
jmp loc_40B23E  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnb al  +
mov edx eax +
jmp loc_40B22F  +
mov [esp+70h+var_6C] 886h +
mov [esp+70h+var_70] offset a____Binutil_12 +
mov [esp+70h+var_54] ecx +
call sub_402930  +
mov eax [ebx+2Ch] +
mov ecx [esp+70h+var_54] +
jmp loc_40B4FB  +
mov edx [esp+70h+var_50] +
add edx [esp+70h+arg_0] +
mov [ebx+2Ch] edx +
jmp loc_40B23E  +
***
push ebp  +
push edi  +
push esi  +
mov esi offset off_476AA0 +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov edi ds:_stricmp +
mov ebp [esp+34h] +
jmp loc_40B73B  +
add ebx 1 +
add esi 34h +
cmp ebx 25h +
jz loc_40B760  +
mov eax [esi] +
test eax eax +
jz loc_40B730  +
mov [esp+4] ebp +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_40B730  +
imul eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax offset dword_476A80 +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_40B7A0  +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_4238B0  +
***
mov dword ptr [esp+4] 0A0h +
mov [esp] esi +
call sub_404C60  +
test eax eax +
jz loc_40B7C0  +
mov [ebx+8Ch] eax +
jmp loc_40B787  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jz loc_40B7E7  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_40B7F7  +
mov eax [eax+1Ch] +
sub eax [edx+1Ch] +
pop ebx  +
retn   +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_40B815  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jnz loc_40B811  +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov edx [eax+4] +
test edx edx +
jz loc_40B840  +
pop ebx  +
retn   +
mov edx [esp+arg_4] +
test byte ptr [edx+14h] 11h +
jz loc_40B83C  +
mov ecx [esp+arg_4] +
mov edx [eax] +
mov ecx [ecx+1Ch] +
cmp edx ecx +
jb loc_40B83C  +
mov ebx [esp+arg_4] +
add ecx [ebx+24h] +
cmp edx ecx +
jnb loc_40B83C  +
mov [eax+4] ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edx [esi+14h] +
test edx edx +
jz loc_40B896  +
mov eax [esp+1Ch+arg_4] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_40B8A0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_0] +
mov esi [eax+10h] +
mov eax [ebx+120h] +
mov edx [eax+24h] +
mov edi [eax+6Ch] +
mov ebp [eax+94h] +
mov eax ds:dword_49A0DC +
mov [ecx+0Ch] edx +
add edi edx +
mov [esp+1Ch+var_10] edi +
test eax eax +
jz loc_40B8E3  +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset aBuildingOneStu +
call printf  +
test esi 1 +
jnz loc_40B894  +
mov eax [ebp+4] +
mov edi esi +
shr edi 1 +
mov ecx edi +
and ecx 10000h +
mov edx [eax+3Ch] +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] eax +
lea eax ds:0[edi*8] +
movzx edi di +
and eax 1F00000h +
or eax ecx +
shr eax 10h +
or eax 940Ch +
mov [esp+1Ch+var_1C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax+3Ch] +
lea edx [ecx+2] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edi +
call eax  +
mov eax [ebx+120h] +
mov edx [ebx+138h] +
add dword ptr [eax+24h] 4 +
mov eax 1 +
lea ecx [edx+1] +
cmp ecx [ebx+13Ch] +
ja loc_40B896  +
mov edi [esp+1Ch+arg_0] +
add edx 40000000h +
mov [ebx+138h] ecx +
mov ecx [ebx+140h] +
mov edi [edi+0Ch] +
mov [ecx+edx*4] edi +
mov ecx [ebx+144h] +
mov [ecx+edx*4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov edi [esp+6Ch+arg_4] +
mov ebp [esp+6Ch+arg_14] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+2Ch] 4 +
mov [esp+6Ch+var_2C] eax +
jz loc_40B9BC  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+6Ch+arg_8] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_40] eax +
mov eax [eax+218h] +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_C] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebp+eax*4+0] +
cmp ebp eax +
mov [esp+6Ch+var_34] eax +
jnb loc_40BBCD  +
***
mov edx [ebp+4] +
mov [esp+arg_58] 0 +
movzx esi dl +
mov eax edx +
imul esi esi +
shr eax 8 +
lea ecx dword_476A80[esi] +
mov [esp+arg_30] ecx +
mov ecx [esp+arg_28] +
mov edx [ecx+68h] +
cmp eax edx +
jb loc_40C460  +
mov ecx [esp+arg_38] +
test ecx ecx +
jz loc_40B9B2  +
sub eax edx +
mov ebx [ecx+eax*4] +
mov eax [edi+28h] +
test eax eax +
jz loc_40BA53  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_40BA53  +
jmp loc_40C4F6  +
***
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-6] +
cmp dl 1 +
jbe loc_40BA50  +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_40C4D6  +
cmp al 2 +
jz loc_40BAE5  +
movzx edx byte ptr [edi+2] +
and edx 6 +
cmp dl 2 +
jz loc_40C514  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_40BAE5  +
cmp dl 6 +
mov eax 1 +
jz loc_40BAA2  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
setnz al  +
movzx eax al +
mov edx [edi+18h] +
mov ecx [edx+18h] +
mov edx [ebx+4] +
mov [esp+arg_24] ecx +
mov ecx [ebp+0] +
mov [esp+arg_10] eax +
mov eax [esp+arg_88] +
mov [esp+arg_0] edx +
mov [esp+0] edi +
mov [esp+arg_C] ecx +
mov [esp+arg_8] eax +
mov eax [esp+arg_84] +
mov [esp+arg_4] eax +
mov eax [esp+arg_24] +
call eax  +
test eax eax +
jz loc_40B9B2  +
mov eax [esp+arg_58] +
xor edx edx +
mov ecx [ebx+4] +
mov [esp+arg_2C] ecx +
test eax eax +
jz loc_40BB06  +
cmp eax offset off_473270 +
jz loc_40BB06  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jz loc_40BB60  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz sub_40BBC0  +
mov eax [ebp+0] +
mov [esp+arg_24] eax +
mov eax [esp+arg_3C] +
mov eax [eax+124h] +
mov [esp+arg_40] eax +
mov eax [esp+arg_88] +
mov ecx [eax+3Ch] +
mov eax [eax+38h] +
add eax [ecx+1Ch] +
mov ecx [esp+arg_24] +
add ecx eax +
cmp ds:dword_476A80[esi] 23h +
ja sub_40BCE1  +
mov esi ds:dword_476A80[esi] +
jmp ds:off_475F28[esi*4]  +
***
add ebp 0Ch +
add edx [ebp+8] +
mov eax 2 +
mov esi [esp+arg_24] +
movzx ecx dx +
cmp ecx 1Fh +
mov [esp+arg_40] edx +
jbe loc_40C5D7  +
***
mov edx offset aInternalErrorO +
mov eax [edi+18h] +
mov edx offset aInternalErrorD +
mov eax [edi+18h] +
mov edx offset aInternalErrorU +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov ecx [ebp+8] +
mov eax [esp+arg_24] +
mov eax [esp+arg_24] +
mov ebx [ebp+8] +
mov ebx [ebp+8] +
mov esi [ebp+8] +
mov esi [ebp+8] +
add esi edx +
movzx eax si +
cmp eax 3Fh +
jg loc_40C450  +
test esi esi +
js loc_40C450  +
mov eax [esp+arg_84] +
add ebp 0Ch +
mov ebx [esp+arg_24] +
add ebx [esp+arg_8C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov edx esi +
and edx 20h +
shl edx 8 +
mov ecx eax +
mov eax [esp+arg_84] +
and ecx 0D3F8h +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+arg_24] eax +
mov eax esi +
and esi 7 +
and eax 18h +
shl eax 7 +
or eax edx +
or eax esi +
or ecx eax +
mov eax [esp+arg_24] +
mov [esp+0] ecx +
call eax  +
cmp [esp+arg_34] ebp +
ja loc_40B9F4  +
jmp loc_40BBCD  +
***
mov esi [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_24] +
add edx [ebp+8] +
add edx [ebp+8] +
mov ebx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_3C] +
mov esi [esp-7Ch+arg_A0] +
mov esi [esp+arg_24] +
sub edx esi +
add edx [ebp+8] +
lea ecx [edx-2] +
sub ecx eax +
mov eax 2 +
test cl 1 +
jnz loc_40BBF6  +
lea edx [ecx+80h] +
mov al 1 +
cmp edx 0FFh +
ja loc_40BBF6  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov [esp+arg_2C] ecx +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_2C] +
mov edx [esi+4] +
shl ecx 2 +
and eax 0FC07h +
and ecx 3F8h +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_40BBC0  +
***
jz loc_40C04C  +
mov eax esi +
neg eax  +
movzx eax ax +
add eax 0FFFFFF80h +
jle loc_40C04C  +
***
mov esi [esp+28h] +
mov eax 1 +
jmp loc_40BBF6  +
***
mov ecx [esp-7Ch+arg_110] +
lea edx [eax+eax*4] +
lea ebx [ecx+edx*4] +
mov ecx [esp-7Ch+arg_114] +
mov eax [ecx+eax*4] +
mov [esp-7Ch+arg_84] ebp +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_D4] eax +
lea eax [esp-7Ch+arg_D4] +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_F8] +
mov [esp-7Ch+arg_78] eax +
call sub_42E1A0  +
mov ecx [esp-7Ch+arg_A4] +
mov ecx [ecx+64h] +
mov [esp-7Ch+arg_A0] eax +
mov eax [ebx+8] +
mov [esp-7Ch+arg_7C] ecx +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_100] +
mov [esp-7Ch+arg_78] eax +
call sub_420AB0  +
mov edx [esp-7Ch+arg_A0] +
test eax eax +
mov [esp-7Ch+arg_A8] eax +
mov eax [esp-7Ch+arg_D4] +
jz loc_40C535  +
xor ebx ebx +
jmp loc_40BAF2  +
mov eax [ebx+14h] +
test eax eax +
mov [esp+arg_58] eax +
jz loc_40C542  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_40C54B  +
mov edx [edx+1Ch] +
add edx [ebx+18h] +
add edx [eax+38h] +
jmp loc_40BAEB  +
mov eax [esp+arg_84] +
mov [esp+arg_4] ebx +
mov [esp+0] edi +
mov [esp+arg_0] eax +
call sub_419A40  +
mov ebx eax +
jmp loc_40BA53  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_40BAE5  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jnz loc_40BA9A  +
jmp loc_40BAE5  +
mov ecx [eax] +
xor ebx ebx +
mov [esp-7Ch+arg_A8] ecx +
jmp loc_40BAF6  +
xor eax eax +
xor edx edx +
jmp loc_40BAEB  +
xor edx edx +
jmp loc_40BAEB  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_40BBB2  +
mov eax [eax+3Ch] +
mov [esp+0] eax +
call sub_423EA0  +
mov ecx [eax+18h] +
mov edx [eax+28h] +
cmp ecx edx +
jbe loc_40BBB2  +
sub ecx edx +
mov [eax+18h] ecx +
mov eax [esp+arg_88] +
mov [esp+0] eax +
call sub_423EA0  +
mov edx [eax+28h] +
sub [eax+18h] edx +
mov eax [esp+arg_34] +
mov [esp+0] ebp +
sub eax ebp +
sar eax 2 +
imul eax eax +
lea eax [eax+eax*2-3] +
shl eax 2 +
mov [esp+arg_4] eax +
lea eax [ebp+0Ch] +
sub ebp 0Ch +
mov [esp+arg_0] eax +
call memmove  +
mov eax [esp+arg_88] +
sub [esp+arg_34] 0Ch +
sub dword ptr [eax+4Ch] 1 +
jmp sub_40BBC0  +
***
mov edx 1 +
shl edx cl +
test ds:dword_49A0D8 edx +
jnz loc_40BBF6  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_40] +
mov edx [esi+4] +
shl ecx 3 +
and eax 0FF07h +
movzx ecx cl +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_40BBC0  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_40AA00  +
mov ecx [esp+4Ch] +
mov esi eax +
mov eax ds:dword_49A0DC +
test eax eax +
jz loc_40C66B  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_40BE6A  +
jmp loc_40BEAE  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_40AA00  +
mov ecx ds:dword_49A0DC +
test ecx ecx +
mov ecx [esp+4Ch] +
mov esi eax +
jz loc_40C6BC  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_40BE6A  +
jmp loc_40BE5E  +
***
mov eax [esp-7Ch+arg_100] +
and esi 0FFFh +
mov ebx [esp-7Ch+arg_A0] +
add ebx [esp-7Ch+arg_108] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp-7Ch+arg_78] ebx +
call eax  +
mov ecx [esp-7Ch+arg_100] +
mov edx [ecx+4] +
and eax 0F000h +
or eax esi +
mov edx [edx+3Ch] +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_78] eax +
call edx  +
jmp sub_40BBC0  +
***
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
jmp loc_40C2F7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov edx [esp+70h] +
mov esi [esp+6Ch] +
mov edi [esp+74h] +
mov [esp+20h] eax +
mov eax [esp+64h] +
test edx edx +
mov [esp+24h] eax +
mov eax [esp+68h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
jnz loc_40C7B5  +
mov ecx [ebx+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_40C7B5  +
mov eax [ebp+0A0h] +
mov [esp+28h] eax +
mov eax [ebx+24h] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+8] eax +
call memcpy  +
test byte ptr [ebx+14h] 4 +
jz loc_40C7AB  +
mov eax [ebx+4Ch] +
test eax eax +
jnz loc_40C7E1  +
mov eax esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+68h] eax +
mov eax [esp+24h] +
mov [esp+74h] edi +
mov [esp+6Ch] esi +
mov [esp+70h] edx +
mov [esp+64h] eax +
mov eax [esp+20h] +
mov [esp+60h] eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_418B70  +
***
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_434EB0  +
test eax eax +
mov [esp+30h] eax +
jz loc_40CA08  +
mov eax [esp+28h] +
mov edi [eax+68h] +
test edi edi +
jz loc_40C890  +
mov eax [eax+78h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_40C9B9  +
shl edi 2 +
mov [esp] edi +
call sub_407460  +
test edi edi +
mov [esp+34h] eax +
jz loc_40C8A8  +
test eax eax +
jnz loc_40C8A8  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_40C85B  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_40C85B  +
mov [esp] eax +
call free  +
mov esi [esp+30h] +
test esi esi +
jz loc_40CA08  +
mov edx [ebx+8Ch] +
xor eax eax +
cmp [edx+68h] esi +
jz loc_40C7AD  +
mov [esp] esi +
mov [esp+20h] eax +
call free  +
mov eax [esp+20h] +
jmp loc_40C7AD  +
***
mov dword ptr [esp] 0 +
call sub_407460  +
mov dword ptr [esp+2Ch] 0 +
mov [esp+34h] eax +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
mov eax [eax+68h] +
mov edi edx +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
mov ecx eax +
mov eax edx +
mov edx [esp+34h] +
cmp ecx eax +
jbe loc_40C915  +
mov [esp+38h] ebx +
mov ebx edx +
mov [esp+3Ch] esi +
mov esi ecx +
mov ecx [edi+10h] +
mov eax offset off_4731C8 +
test ecx ecx +
jz loc_40C900  +
cmp ecx 0FFFFFFF1h +
mov eax offset off_473270 +
jz loc_40C900  +
cmp ecx 0FFFFFFF2h +
mov eax offset off_473120 +
jz loc_40C900  +
mov [esp+4] ecx +
mov [esp] ebp +
call sub_423710  +
nop   +
add edi 14h +
add ebx 4 +
mov [ebx-4] eax +
cmp esi edi +
ja loc_40C8D3  +
mov ebx [esp+38h] +
mov esi [esp+3Ch] +
mov eax [esp+34h] +
mov [esp+10h] esi +
mov [esp+0Ch] ebx +
mov [esp+8] ebp +
mov [esp+1Ch] eax +
mov eax [esp+2Ch] +
mov [esp+18h] eax +
mov eax [esp+30h] +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_40B990  +
test eax eax +
jz loc_40C9A0  +
mov eax [esp+34h] +
test eax eax +
jz loc_40C961  +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_40C97A  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_40C97A  +
mov [esp] eax +
call free  +
mov eax [ebx+8Ch] +
mov edx [esp+30h] +
cmp [eax+68h] edx +
jz loc_40C7AB  +
mov [esp] edx +
call free  +
jmp loc_40C7AB  +
***
mov eax [esp+34h] +
test eax eax +
jz loc_40C842  +
mov [esp] eax +
call free  +
jmp loc_40C842  +
***
mov eax [esp+28h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
add eax 48h +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_420CB0  +
test eax eax +
mov [esp+2Ch] eax +
jz loc_40C85B  +
mov eax [esp+28h] +
mov edi [eax+68h] +
jmp loc_40C82B  +
***
xor eax eax +
jmp loc_40C7AD  +
***
mov dword ptr [edx] offset off_473270 +
sub edx 4 +
cmp edx ecx +
jnz loc_40CB10  +
mov esi [esp+20h] +
mov edx [esi+64h] +
test edx edx +
jz loc_40CB3F  +
test byte ptr [edx+14h] 10h +
jz loc_40CB38  +
mov ecx [edx+8] +
mov dword ptr [eax+ecx*4] 0 +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_40CB28  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov [esp] esi +
call sub_434EB0  +
test eax eax +
mov ebx eax +
mov [esp+4Ch] eax +
jz loc_40D037  +
mov eax [edi+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+20h] eax +
jnb loc_40CF8B  +
mov [esp+44h] edi +
mov edi esi +
jmp loc_40CEAB  +
mov esi [esp+38h] +
lea eax [eax+eax*4] +
xor ecx ecx +
lea edx [esi+eax*4] +
movzx eax byte ptr [edx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_40CDD9  +
mov ecx [edx] +
mov eax [edx+10h] +
mov edx [edi+0A0h] +
cmp eax [edx+214h] +
jnb loc_40CF40  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov edx [eax+2Ch] +
mov eax [edx+3Ch] +
mov esi [eax+1Ch] +
add esi [edx+38h] +
add esi [ebx+8] +
add esi ecx +
mov ebp [esp+24h] +
mov eax esi +
sub eax [ebp+124h] +
cmp eax 1FFFFh +
ja loc_40CE20  +
mov eax [esp+78h] +
test eax eax +
jz loc_40CE9E  +
mov dword ptr [esp] 13h +
mov [esp+30h] ecx +
mov [esp+2Ch] edx +
call sub_407460  +
mov edx [esp+2Ch] +
mov ecx [esp+30h] +
add ecx [ebx+8] +
mov ebp eax +
mov eax [edx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a08x08x +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
test ebp ebp +
jz loc_40D074  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_408C80  +
test eax eax +
jz loc_40CFB0  +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
mov [esp] ebp +
call free  +
add ebx 0Ch +
cmp [esp+20h] ebx +
jbe loc_40CF87  +
mov eax [ebx+4] +
movzx edx al +
lea ecx [edx-18h] +
cmp ecx 1 +
jbe loc_40CEBE  +
cmp edx 5 +
jnz loc_40CE9E  +
mov esi [esp+28h] +
shr eax 8 +
mov edx [esi+68h] +
cmp eax edx +
jb loc_40CDC0  +
mov ecx [edi+0A0h] +
sub eax edx +
mov edx [ecx+218h] +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_40CEFF  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_40CEF0  +
lea ecx [edx-3] +
cmp cl 1 +
jbe loc_40CF50  +
cmp dl 2 +
jz loc_40CF71  +
cmp dl 1 +
jnz loc_40D0A0  +
mov esi [esp+74h] +
movzx edx byte ptr [esi+2] +
and edx 6 +
cmp dl 2 +
jnz loc_40CE9E  +
test byte ptr [eax+31h] 3 +
jnz loc_40CE9E  +
xor esi esi +
xor ecx ecx +
xor edx edx +
jmp loc_40CE05  +
***
xor esi esi +
xor edx edx +
jmp loc_40CE05  +
***
mov edx [eax+14h] +
mov ecx [eax+18h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_40D000  +
mov esi [edx+38h] +
add esi ecx +
add esi [eax+1Ch] +
add esi [ebx+8] +
jmp loc_40CE05  +
***
mov eax [esp+74h] +
test byte ptr [eax] 1 +
jnz loc_40CF33  +
add ebx 0Ch +
cmp [esp+20h] ebx +
ja loc_40CEAB  +
mov edi [esp+44h] +
mov eax [edi+8Ch] +
mov edx [eax+68h] +
test edx edx +
jnz near ptr dword_40CB4C+144h  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
jmp near ptr dword_40CB4C+144h  +
***
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_408C80  +
test eax eax +
jz loc_40D0B2  +
mov ebp ds:dword_49A0DC +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
test ebp ebp +
jnz loc_40D007  +
mov dword ptr [esp+48h] 1 +
jmp loc_40CE9E  +
***
xor esi esi +
jmp loc_40CE05  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aAddingStubWith +
call printf  +
mov ecx ds:dword_49A0DC +
test ecx ecx +
jz loc_40CFF3  +
mov eax [esp+78h] +
mov dword ptr [esp] offset aPreAllocRunI +
mov [esp+4] eax +
call printf  +
jmp loc_40CFF3  +
***
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_40CB4C+204h  +
***
mov ebp [esp+44h] +
mov eax [ebp+8Ch] +
mov eax [eax+68h] +
test eax eax +
jnz loc_40D037  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_40CB4C+204h  +
***
mov dword ptr [esp] 11h +
mov ebp [esp+44h] +
call sub_4029E0  +
jmp loc_40D078  +
***
mov esi ebp +
mov ebp [esp+44h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset aBCannotCreateS +
call off_4730E4  +
mov [esp] esi +
call free  +
jmp loc_40D078  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [eax+1Ch] +
cmp dword ptr [edi+2Ch] 4 +
jz loc_40D100  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+11Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_40D208  +
xor esi esi +
jmp loc_40D129  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_40D153  +
mov eax [edi+11Ch] +
mov ebp [ebx+24h] +
mov [esp] eax +
mov [esp+4] ebp +
add esi ebp +
call sub_404C60  +
test eax eax +
mov [ebx+6Ch] eax +
jnz loc_40D115  +
test ebp ebp +
jnz loc_40D0F4  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_40D123  +
shr esi 2 +
lea eax ds:0[esi*4] +
mov dword ptr [edi+138h] 0 +
mov [edi+13Ch] esi +
mov [esp] eax +
call sub_407460  +
mov [edi+140h] eax +
mov eax [edi+13Ch] +
shl eax 2 +
mov [esp] eax +
call sub_407460  +
mov edx ds:dword_49A0DC +
test edx edx +
mov [edi+144h] eax +
jnz loc_40D1F0  +
mov eax [esp+30h] +
mov ebx 1 +
mov dword ptr [esp+4] offset sub_40B870 +
mov [esp+8] eax +
lea eax [edi+0FCh] +
mov [esp] eax +
call sub_408FD0  +
mov eax ds:dword_49A0DC +
test eax eax +
jz loc_40D0F6  +
mov eax [edi+120h] +
mov eax [eax+24h] +
mov dword ptr [esp] offset aFinalStubSecti +
mov [esp+4] eax +
call printf  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+13Ch] +
mov dword ptr [esp] offset aAllocatingIEnt +
mov [esp+4] eax +
call printf  +
jmp loc_40D19C  +
***
xor eax eax +
xor esi esi +
jmp loc_40D15D  +
***
jmp sub_40D220  +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_avr_prop +
mov [esp+6Ch+var_6C] eax +
call sub_405CC0  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_34] eax +
jz loc_40D7EF  +
mov ebx [eax+24h] +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] ebx +
call sub_407460  +
mov [esp+6Ch+var_58] ebx +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_40] eax +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_4064D0  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_64] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_434EB0  +
test eax eax +
mov ecx eax +
mov [esp+6Ch+var_38] eax +
jz loc_40D2E2  +
mov eax [edi+4Ch] +
mov [esp+6Ch+var_60] offset sub_40B800 +
mov [esp+6Ch+var_64] 0Ch +
mov [esp+6Ch+var_6C] ecx +
mov [esp+6Ch+var_68] eax +
call qsort  +
cmp ebx 3 +
jbe loc_40D780  +
mov eax [esp+6Ch+var_40] +
movzx ecx byte ptr [eax] +
lea esi [eax+4] +
movzx edx byte ptr [eax+1] +
mov [esp+6Ch+var_3C] ecx +
movzx ecx word ptr [eax+2] +
mov [esp+6Ch+var_48] edx +
movzx ebp cx +
lea eax [ebp+ebp*2+0] +
lea eax ds:10h[eax*8] +
mov [esp+6Ch+var_6C] eax +
mov word ptr [esp+6Ch+var_44] cx +
call sub_407460  +
test eax eax +
mov edi eax +
jz loc_40D780  +
mov edx [esp+6Ch+var_48] +
sub ebx 4 +
mov ecx [esp+6Ch+var_3C] +
mov [esp+6Ch+var_48] ebx +
mov [eax+1] dl +
mov edx [esp+6Ch+var_34] +
mov [eax] cl +
cmp cl 1 +
lea eax [edi+10h] +
mov [edi+4] ebp +
mov [edi+8] edx +
mov [edi+0Ch] eax +
jnz loc_40D4B2  +
mov edx [edx+4Ch] +
mov ebx [esp+6Ch+var_38] +
cmp word ptr [esp+6Ch+var_44] 0 +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
jz loc_40D798  +
cmp [esp+6Ch+var_48] 4 +
jbe loc_40D4B2  +
movzx edx word ptr [esp+6Ch+var_44] +
mov ebp [esp+6Ch+var_38] +
mov [esp+6Ch+var_44] edi +
sub edx 1 +
movzx edx dx +
lea edx [edx+edx*2] +
lea ecx ds:0[edx*8] +
xor edx edx +
mov [esp+6Ch+var_30] ecx +
mov ecx esi +
mov edi edx +
mov esi ebx +
mov ebx ecx +
add eax edi +
test ebp ebp +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
jz loc_40D3E6  +
mov eax ebx +
sub eax [esp+6Ch+var_40] +
cmp esi ebp +
ja loc_40D3CC  +
jmp loc_40D3D2  +
add ebp 0Ch +
cmp esi ebp +
jbe loc_40D3D2  +
cmp eax [ebp+0] +
nop   +
ja loc_40D3C5  +
cmp esi ebp +
jz loc_40D5D2  +
cmp eax [ebp+0] +
lea esi [esi+0] +
jz loc_40D5E0  +
mov eax [esp+6Ch+var_44] +
mov edx [eax+0Ch] +
mov eax [ebx] +
mov [esp+6Ch+var_3C] eax +
lea eax [edx+edi] +
mov ecx [eax] +
test ecx ecx +
jz loc_40D548  +
movzx edx byte ptr [ebx+4] +
movzx ecx dl +
mov [eax+8] ecx +
mov ecx [esp+6Ch+var_48] +
sub ecx 5 +
cmp dl 1 +
jz loc_40D530  +
jb loc_40D520  +
cmp dl 2 +
jz loc_40D4F6  +
cmp dl 3 +
lea esi [esi+0] +
jnz loc_40D4F0  +
cmp ecx 7 +
jbe loc_40D4F0  +
mov edx [ebx+5] +
add ebx 0Dh +
mov ecx [esp+6Ch+var_44] +
sub [esp+6Ch+var_48] 0Dh +
mov [eax+0Ch] edx +
mov edx [ebx-4] +
mov eax [ecx+0Ch] +
mov [eax+edi+10h] edx +
mov eax [ecx+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
cmp edi [esp+6Ch+var_30] +
jz loc_40D794  +
add edi 18h +
cmp [esp+6Ch+var_48] 4 +
jbe loc_40D4F0  +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
jmp loc_40D3A6  +
mov eax ds:_iob +
mov [esp+6Ch+var_64] 21h +
mov edi [esp+6Ch+var_44] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] offset aFailedToFindMa +
add eax 40h +
mov [esp+6Ch+var_60] eax +
call fwrite  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_40D4CD  +
mov [esp+6Ch+var_6C] ebx +
call free  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov [esp+6Ch+var_6C] edi +
call free  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+6Ch+var_44] +
jmp loc_40D4B2  +
cmp ecx 3 +
jbe loc_40D4F0  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
jmp loc_40D466  +
add ebx 5 +
mov [esp+6Ch+var_48] ecx +
jmp loc_40D466  +
cmp ecx 3 +
jbe loc_40D4F0  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
jmp loc_40D466  +
mov ecx [esp+6Ch+var_10] +
test ecx ecx +
mov [esp+6Ch+var_2C] ecx +
jz loc_40D56D  +
mov ecx [ecx+1Ch] +
cmp [esp+6Ch+var_3C] ecx +
mov [esp+6Ch+var_28] ecx +
jnb loc_40D6DF  +
mov [esp+6Ch+var_10] 0 +
mov eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] offset sub_40B830 +
mov [esp+6Ch+var_14] eax +
lea eax [esp+6Ch+var_14] +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_4062E0  +
mov eax [esp+6Ch+var_10] +
test eax eax +
mov [esp+6Ch+var_2C] eax +
jz loc_40D486  +
mov eax [esp+6Ch+var_44] +
mov ecx [esp+6Ch+var_2C] +
mov edx [eax+0Ch] +
mov ecx [ecx+1Ch] +
lea eax [edx+edi] +
mov [esp+6Ch+var_28] ecx +
mov ecx [esp+6Ch+var_2C] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
sub ecx [esp+6Ch+var_28] +
mov [eax+4] ecx +
lea eax [edx+edi] +
jmp loc_40D400  +
xor ebp ebp +
jmp loc_40D3E6  +
mov eax [ebp+4] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
shr [esp+6Ch+var_3C] 8 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_28] eax +
jb loc_40D705  +
mov edx [esp+6Ch+var_2C] +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
mov edx [edx+218h] +
lea ecx ds:0[eax*4] +
mov [esp+6Ch+var_20] ecx +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_40D64F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_40D640  +
cmp dl 3 +
jb loc_40D787  +
cmp dl 4 +
jbe loc_40D7F6  +
cmp dl 5 +
mov [esp+6Ch+var_24] offset off_473120 +
jnz loc_40D787  +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
shl eax 2 +
mov [esp+6Ch+var_20] eax +
mov eax [esp+6Ch+var_2C] +
mov edx [esp+6Ch+var_20] +
mov eax [eax+218h] +
mov eax [eax+edx] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_40D6AF  +
nop   +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_40D6A0  +
sub edx 3 +
xor ecx ecx +
cmp dl 1 +
ja loc_40D6BC  +
mov ecx [eax+18h] +
mov eax [esp+6Ch+var_44] +
add ecx [ebp+8] +
mov edx [eax+0Ch] +
mov [esp+6Ch+var_3C] ecx +
mov ecx [esp+6Ch+var_24] +
lea eax [edx+edi] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
mov [eax+4] ecx +
jmp loc_40D3ED  +
mov [esp+6Ch+var_24] edx +
mov edx [esp+6Ch+var_2C] +
mov ecx eax +
mov eax [esp+6Ch+var_28] +
add eax [edx+24h] +
cmp [esp+6Ch+var_3C] eax +
mov eax ecx +
mov edx [esp+6Ch+var_24] +
jnb loc_40D565  +
jmp loc_40D5B9  +
mov eax [esp+6Ch+arg_0] +
call sub_40AAD0  +
mov ecx [esp+6Ch+var_3C] +
lea edx [ecx+ecx*4] +
mov eax [eax+edx*4+10h] +
test eax eax +
jz loc_40D7CA  +
cmp eax 0FFFFFFF1h +
jz loc_40D83E  +
cmp eax 0FFFFFFF2h +
jnz loc_40D802  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_473120 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_28] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_20] edx +
jnb loc_40D672  +
mov eax [esp+6Ch+arg_0] +
call sub_40AAD0  +
mov edx [esp+6Ch+var_20] +
mov ecx [eax+edx*4] +
jmp loc_40D6BC  +
xor edi edi +
jmp loc_40D4B2  +
mov [esp+6Ch+var_24] offset off_4731C8 +
jmp loc_40D681  +
mov edi [esp+6Ch+var_44] +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_40D7C3  +
mov eax [esp+6Ch+var_38] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax edi +
jmp loc_40D4E3  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_4731C8 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_40D756  +
xor eax eax +
jmp loc_40D4E3  +
mov eax [eax+14h] +
mov [esp+6Ch+var_24] eax +
jmp loc_40D681  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_20] edx +
mov [esp+6Ch+var_6C] eax +
call sub_423710  +
mov edx [esp+6Ch+var_20] +
mov [esp+6Ch+var_24] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_40D756  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_473270 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_40D756  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_49A0D4 +
mov dword ptr [esp+5Ch] 0 +
test eax eax +
jz loc_40DC34  +
mov eax [esp+84h] +
mov ecx 9 +
mov edi offset a_vectors +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax] +
mov esi eax +
cmps   +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_40D8CD  +
mov esi eax +
mov edi offset a_jumptables +
mov ecx 0Ch +
cmps   +
setnz al  +
movzx eax al +
mov [esp+2Ch] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_40E146  +
mov eax [esp+88h] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_40D8FC  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8Ch] +
mov dword ptr [eax] 0 +
mov eax [ebx+118h] +
test eax eax +
jz loc_40DBB0  +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_40DC27  +
mov eax [esp+84h] +
mov eax [eax+14h] +
test al 4 +
jz loc_40DC27  +
mov edi [esp+84h] +
mov edx [edi+4Ch] +
test edx edx +
jz loc_40DC27  +
test al 10h +
jz loc_40DC27  +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
test byte ptr [eax+20h] 80h +
mov [esp+24h] eax +
jz loc_40DC27  +
add eax 48h +
mov [esp+44h] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax+2] +
mov [esp+4] edi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_434EB0  +
test eax eax +
mov edi eax +
mov [esp+40h] eax +
jz loc_40E68D  +
mov eax [esp+84h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_40E1DC  +
mov ebp [esp+40h] +
xor esi esi +
jmp loc_40DA20  +
mov edi [esp+80h] +
sub eax edx +
mov ecx [edi+0A0h] +
mov edx [ecx+218h] +
mov ebx [edx+eax*4] +
test ebx ebx +
jz loc_40E1C3  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_40DED4  +
add ebp 0Ch +
cmp [esp+20h] ebp +
jbe loc_40E1DC  +
movzx eax byte ptr [ebp+4] +
lea edx [eax-2] +
cmp edx 1 +
jbe loc_40DA31  +
cmp eax 12h +
jnz loc_40DA13  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_40DF70  +
mov eax [esp+24h] +
test esi esi +
mov edx [eax+68h] +
jz loc_40DF05  +
mov eax [ebp+4] +
shr eax 8 +
cmp eax edx +
jnb loc_40D9E4  +
lea eax [eax+eax*4] +
lea ebx [esi+eax*4] +
mov eax [ebx+10h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_423710  +
mov ecx [ebx] +
test eax eax +
jz loc_40DA81  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
cmp byte ptr [ebp+4] 12h +
jnz loc_40DE51  +
mov eax [esp+84h] +
mov ebx [ebp+0] +
mov eax [eax+3Ch] +
mov [esp+30h] ebx +
mov eax [eax+1Ch] +
mov edi eax +
mov [esp+34h] eax +
mov eax [esp+84h] +
mov eax [eax+38h] +
mov [esp+38h] eax +
add eax edi +
add eax ebx +
sub ecx eax +
mov [esp+3Ch] eax +
mov eax [esp+2Ch] +
add ecx [ebp+8] +
test eax eax +
jz loc_40E125  +
cmp ecx 1001h +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF002h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
mov edx dword_473594 +
cmp edx 4001h +
sbb ebx ebx +
and ebx 0FFFFFDA8h +
sub ebx 8F4h +
cmp edx 4001h +
lea eax [edx-1] +
sbb edi edi +
and eax ecx +
mov ecx edx +
shr ecx 1 +
and edi 0FFFFFDA8h +
mov [esp+28h] ecx +
mov ecx eax +
add edi 708h +
sub ecx edx +
cmp eax [esp+28h] +
cmovg eax ecx +
cmp eax ebx +
jl loc_40DEE8  +
mov edx 0FFEh +
sub edx edi +
cmp edx eax +
jl loc_40DEE8  +
mov eax ds:dword_49A0E0 +
mov edx [esp+30h] +
test eax eax +
jnz loc_40E34B  +
mov eax [esp+84h] +
mov ebx [esp+5Ch] +
mov edi [esp+40h] +
mov eax [eax+8Ch] +
lea ecx [ebx+edx] +
mov [eax+68h] edi +
mov [eax+30h] ebx +
mov eax [esp+24h] +
mov [eax+78h] esi +
movzx edx byte ptr [ebx+edx+1] +
movzx eax byte ptr [ecx] +
and edx 0FFFFFF94h +
and eax 0Eh +
cmp dl 94h +
jz loc_40DE0B  +
mov dword ptr [esp+8] offset aElf32_avr_rela +
mov dword ptr [esp+4] 0AA6h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_402960  +
nop   +
mov eax [ebx+120h] +
cmp eax [esp+84h] +
jnz loc_40D917  +
mov edi [esp+84h] +
mov esi [edi+24h] +
mov edi ds:dword_49A0E0 +
test edi edi +
jnz loc_40E72B  +
mov eax [eax+3Ch] +
mov edi [esp+88h] +
mov eax [eax+94h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp] eax +
call near ptr dword_40CB4C+14h  +
mov eax [ebx+120h] +
mov eax [eax+24h] +
cmp eax esi +
jz loc_40DC19  +
mov edi [esp+8Ch] +
mov dword ptr [edi] 1 +
mov ecx ds:dword_49A0E0 +
test ecx ecx +
jnz loc_40E31A  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+88h] +
mov ds:dword_49A0D4 1 +
mov edi [eax+34h] +
test edi edi +
jz loc_40D88C  +
mov ecx edi +
mov eax [ecx+64h] +
test eax eax +
jnz loc_40DC87  +
jmp loc_40DC90  +
mov esi [eax+8Ch] +
lea edx [esi+90h] +
mov eax [eax+0Ch] +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+8] 0 +
test eax eax +
jz loc_40DC90  +
cmp eax [eax+3Ch] +
jnz loc_40DC60  +
xor edx edx +
jmp loc_40DC6C  +
***
mov ecx [ecx+9Ch] +
test ecx ecx +
jnz loc_40DC52  +
lea esi [esi+0] +
mov [esp] edi +
call sub_40D220  +
test eax eax +
mov ebp eax +
jz loc_40DD79  +
mov eax [eax+4] +
test eax eax +
jz loc_40DD79  +
xor ecx ecx +
xor esi esi +
mov [esp+1Ch] edi +
mov edi ecx +
jmp loc_40DD28  +
cmp eax [eax+3Ch] +
jz loc_40DD32  +
mov ebx [eax+8Ch] +
add ebx 90h +
jz loc_40DD32  +
mov edx [ebx] +
cmp edx [ebx+4] +
jz loc_40DD50  +
mov eax [ebx+8] +
lea edx [edx+edx*2] +
add edi 1 +
lea eax [eax+edx*8] +
mov edx [ebp+0Ch] +
add edx esi +
add esi 18h +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov ecx [edx+0Ch] +
mov [eax+0Ch] ecx +
mov ecx [edx+10h] +
mov [eax+10h] ecx +
mov edx [edx+14h] +
mov [eax+14h] edx +
add dword ptr [ebx] 1 +
cmp edi [ebp+4] +
jnb loc_40DD75  +
mov eax [ebp+0Ch] +
mov eax [eax+esi] +
test eax eax +
jnz loc_40DCD0  +
xor ebx ebx +
mov dword ptr [esp+4] 913h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_402930  +
mov edx [ebx] +
cmp edx [ebx+4] +
jnz loc_40DCEA  +
nop   +
mov eax [ebx+8] +
add edx 0Ah +
mov [ebx+4] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_4074F0  +
mov edx [ebx] +
mov [ebx+8] eax +
jmp loc_40DCED  +
***
mov edi [esp+1Ch] +
mov [esp] ebp +
call free  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_40DCA0  +
mov eax [esp+88h] +
mov esi [eax+34h] +
test esi esi +
jz loc_40D88C  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_40DDB7  +
jmp loc_40DDFC  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_40DDFC  +
cmp ebx [ebx+3Ch] +
jz loc_40DDB0  +
mov eax [ebx+8Ch] +
cmp eax 0FFFFFF70h +
jz loc_40DDB0  +
mov edx [eax+90h] +
test edx edx +
jz loc_40DDB0  +
mov eax [eax+98h] +
mov dword ptr [esp+0Ch] offset sub_40B7D0 +
mov dword ptr [esp+8] 18h +
mov [esp+4] edx +
mov [esp] eax +
call qsort  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_40DDB7  +
mov esi [esi+9Ch] +
test esi esi +
jnz loc_40DDA1  +
jmp loc_40D88C  +
***
cmp al 0Eh +
jnz loc_40E2FE  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0D0h +
mov eax [ebp+4] +
mov edi [esp+2Ch] +
xor al al +
add eax 3 +
test edi edi +
mov [ebp+4] eax +
mov eax [ebp+0] +
jnz loc_40E374  +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+2] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+3] 0 +
mov eax [esp+84h] +
mov edi [ebp+0] +
mov eax [eax+3Ch] +
mov ebx [eax+1Ch] +
mov eax [esp+84h] +
mov ecx [eax+38h] +
mov edx [esp+5Ch] +
add ebx edi +
lea eax [edx+edi+1] +
mov [esp+34h] eax +
movzx eax byte ptr [eax] +
mov [esp+1Ch] al +
lea eax [edx+edi] +
mov [esp+38h] eax +
movzx eax byte ptr [eax] +
mov [esp+28h] al +
lea eax [ebx+ecx] +
movzx ecx byte ptr [esp+1Ch] +
mov [esp+30h] eax +
and ecx 0FFFFFFF0h +
cmp cl 0D0h +
jz loc_40DF91  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jz loc_40DFAF  +
cmp cl 0C0h +
jnz loc_40DA13  +
mov dword ptr [esp+3Ch] 2 +
mov dword ptr [esp+34h] 2 +
jmp loc_40DFE0  +
mov eax [ebx+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+1Ch] +
add ecx [ebx+18h] +
add ecx [eax+38h] +
jmp loc_40DA81  +
***
mov eax [esp+1Ch] +
test eax eax +
jnz loc_40DB45  +
mov ecx [esp+38h] +
mov ebx [esp+34h] +
mov edi [esp+30h] +
jmp loc_40DE6B  +
***
test edx edx +
jz loc_40E161  +
mov esi [eax+78h] +
test esi esi +
jnz loc_40DA4C  +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] eax +
call sub_420CB0  +
test eax eax +
mov esi eax +
jz loc_40E68D  +
mov eax [esp+24h] +
mov edx [eax+68h] +
jmp loc_40DA4C  +
***
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_40E7A9  +
mov [esp+5Ch] eax +
jmp loc_40DA3D  +
***
mov ebx dword_473590 +
test ebx ebx +
jnz loc_40E16C  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jnz loc_40DA13  +
movzx eax byte ptr [esp+28h] +
and eax 0Eh +
cmp al 0Eh +
jz loc_40E3B3  +
cmp cl 0C0h +
jz loc_40DEBF  +
cmp al 0Ch +
jnz loc_40DA13  +
mov dword ptr [esp+3Ch] 4 +
mov dword ptr [esp+34h] 4 +
mov eax [esp+3Ch] +
mov ebx [esp+84h] +
add eax edi +
lea ecx [eax+1] +
cmp ecx [ebx+24h] +
jnb loc_40DA13  +
cmp byte ptr [edx+eax+1] 95h +
jnz loc_40DA13  +
cmp byte ptr [edx+eax] 8 +
jnz loc_40DA13  +
mov eax ds:dword_49A0E0 +
test eax eax +
jz loc_40E02D  +
cmp dword ptr [esp+34h] 2 +
jz loc_40E7F4  +
cmp dword ptr [esp+34h] 4 +
jz loc_40E7D8  +
cmp edi 1 +
jbe loc_40DA13  +
mov edx [esp+5Ch] +
movzx eax byte ptr [edx+edi-1] +
movzx edx byte ptr [edx+edi-2] +
cmp al 99h +
jz loc_40E77C  +
cmp al 9Bh +
jz loc_40E6F5  +
mov ebx eax +
and ebx 0FFFFFFFEh +
cmp bl 0FCh +
jnz loc_40E6DE  +
shr dl 3 +
mov ecx edx +
and ecx 1 +
and eax 0FFFFFFFCh +
cmp al 10h +
jz loc_40E6F5  +
test ecx ecx +
jz loc_40E6F5  +
mov eax [esp+84h] +
add edi [esp+3Ch] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov [esp] eax +
call sub_424C30  +
mov ecx eax +
mov eax [esp+24h] +
mov ebx [eax+78h] +
mov eax [eax+68h] +
lea edx [eax+eax*4] +
lea edx [ebx+edx*4] +
cmp ebx edx +
jnb loc_40E42A  +
test ebx ebx +
jz loc_40E42A  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_40E0E7  +
add ebx 14h +
cmp edx ebx +
jbe loc_40E423  +
test ebx ebx +
jz loc_40E423  +
mov eax [esp+1Ch] +
cmp [ebx] eax +
jnz loc_40E0D4  +
cmp [ebx+10h] ecx +
jnz loc_40E0D4  +
mov eax ds:dword_49A0E0 +
xor edi edi +
test eax eax +
jz loc_40E0D4  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aLocalLabelPrev +
mov [esp+48h] edx +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov edx [esp+48h] +
mov ecx [esp+38h] +
jmp loc_40E0D4  +
***
cmp ecx 0FFFh +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF000h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
jmp loc_40DAE8  +
***
mov eax [esp+88h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRMay +
call eax  +
jmp loc_40D8E2  +
***
mov eax [ebp+4] +
shr eax 8 +
jmp loc_40D9E4  +
***
mov eax [esp+84h] +
lea ecx [edi+3] +
cmp ecx [eax+24h] +
jnb loc_40DA13  +
cmp byte ptr [edx+edi+2] 8 +
jnz loc_40DA13  +
cmp byte ptr [edx+edi+3] 95h +
jnz loc_40DA13  +
movzx eax byte ptr [esp+1Ch] +
mov edx ds:dword_49A0E0 +
mov edi [esp+34h] +
and eax 0FFFFFFEFh +
test edx edx +
mov [edi] al +
jnz loc_40E783  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_40DA13  +
***
mov dword ptr [esp+4] 0A34h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_402930  +
jmp loc_40DA04  +
***
mov eax [esp+8Ch] +
mov eax [eax] +
test eax eax +
jnz loc_40E2BA  +
mov eax [esp+84h] +
mov eax [eax+3Ch] +
cmp [esp+84h] eax +
jz loc_40E810  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov [esp+1Ch] eax +
lea ebp [eax+90h] +
mov edx [ebp+0] +
test edx edx +
jz loc_40E2BA  +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+1Ch] +
lea edx [eax+eax*2] +
mov eax [ebp+8] +
lea esi [eax+edx*8] +
mov eax [esi+8] +
sub eax 2 +
cmp eax 1 +
ja loc_40E2A8  +
mov ecx [esi+0Ch] +
mov eax 1 +
mov ebx [esi+14h] +
shl eax cl +
mov edx ebx +
mov ecx eax +
sub edx eax +
cmp eax ebx +
jbe loc_40E262  +
jmp loc_40E2A8  +
mov edx ebx +
mov ebx edx +
mov edi ecx +
sub ebx eax +
add ecx eax +
cmp edx eax +
jnb loc_40E260  +
test edi edi +
mov [esi+14h] edx +
jle loc_40E2A8  +
mov ecx [esi+4] +
mov edx [esp+84h] +
mov eax [esp+80h] +
sub ecx edi +
mov [esi+4] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call sub_40AD50  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
add dword ptr [esp+1Ch] 1 +
mov eax [esp+1Ch] +
cmp [ebp+0] eax +
ja loc_40E22E  +
mov edx [esp+5Ch] +
test edx edx +
jz loc_40E33C  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp edx [eax+30h] +
jz loc_40E2E4  +
mov edi [esp+88h] +
test byte ptr [edi+2] 40h +
jz loc_40E334  +
mov [eax+30h] edx +
mov edi [esp+40h] +
cmp [eax+68h] edi +
jz loc_40DC27  +
mov [esp] edi +
call free  +
jmp loc_40DC27  +
***
cmp al 0Ch +
jnz loc_40DB92  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0C0h +
jmp loc_40DE22  +
***
mov [esp+4] eax +
mov dword ptr [esp] offset aSizeOfStubSect +
call printf  +
mov eax 1 +
jmp loc_40D8F4  +
***
mov [esp] edx +
call free  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
jmp loc_40E2E4  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aShrinkingJumpC +
mov [esp+8] eax +
mov eax [esp+3Ch] +
mov [esp+4] eax +
call printf  +
mov edx [ebp+0] +
jmp loc_40DB56  +
***
lea ecx [eax+2] +
mov edx [esp+84h] +
mov eax [esp+80h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_40AD50  +
test eax eax +
jz loc_40E678  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_40DE51  +
***
mov eax dword_473590 +
test eax eax +
jz loc_40DEB6  +
mov ecx [esp+84h] +
lea eax [edi+5] +
cmp eax [ecx+24h] +
jnb loc_40DA13  +
cmp byte ptr [edx+edi+4] 8 +
jnz loc_40DA13  +
cmp byte ptr [edx+edi+5] 95h +
jnz loc_40DA13  +
movzx eax byte ptr [esp+28h] +
mov edi [esp+38h] +
and eax 0FFFFFFFDh +
mov [edi] al +
mov eax ds:dword_49A0E0 +
test eax eax +
jz loc_40E1B1  +
mov eax [ecx] +
mov dword ptr [esp] offset aConvertedCallR +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_40E1B1  +
***
mov eax [esp+24h] +
mov eax [eax+68h] +
mov ecx [esp+80h] +
mov edx [ecx+0A0h] +
mov ecx [esp+24h] +
mov ebx [edx+218h] +
mov edx [ecx+60h] +
shr edx 4 +
sub edx eax +
lea ecx [ebx+edx*4] +
cmp ebx ecx +
jnb loc_40E4B1  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_40E465  +
add ebx 4 +
cmp ecx ebx +
jbe loc_40E4B1  +
mov eax [ebx] +
movzx edx byte ptr [eax+0Ch] +
sub edx 3 +
cmp dl 1 +
ja loc_40E45E  +
mov edx [esp+84h] +
cmp [eax+14h] edx +
jnz loc_40E45E  +
mov edx [esp+1Ch] +
cmp [eax+18h] edx +
jnz loc_40E45E  +
mov eax ds:dword_49A0E0 +
xor edi edi +
test eax eax +
jz loc_40E45E  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aGlobalLabelPre +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov ecx [esp+38h] +
jmp loc_40E45E  +
***
mov eax [esp+80h] +
mov eax [eax+64h] +
mov ecx eax +
mov [esp+38h] eax +
mov eax edi +
test al al +
mov [esp+4Fh] al +
jz loc_40DA13  +
test ecx ecx +
jz loc_40E62E  +
mov eax [esp+3Ch] +
add eax [esp+30h] +
mov edi [esp+24h] +
mov [esp+48h] ebp +
mov [esp+1Ch] eax +
mov eax [esp+38h] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
test ebx ebx +
jz loc_40E746  +
mov eax [esp+38h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea ebp [ebx+eax*4] +
cmp ebx ebp +
jb loc_40E527  +
jmp loc_40E617  +
cmp [esp+1Ch] ecx +
jz loc_40E582  +
add ebx 0Ch +
cmp ebp ebx +
jbe loc_40E617  +
test ebx ebx +
jz loc_40E617  +
test esi esi +
mov eax [edi+68h] +
jz loc_40E5B0  +
mov edx [ebx+4] +
xor ecx ecx +
shr edx 8 +
cmp edx eax +
jnb loc_40E516  +
lea eax [edx+edx*4] +
lea edx [esi+eax*4] +
mov eax [edx+10h] +
mov [esp+28h] edx +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_423710  +
mov edx [esp+28h] +
mov ecx [edx] +
test eax eax +
jz loc_40E60F  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
add ecx [ebx+8] +
cmp [esp+1Ch] ecx +
jnz loc_40E51C  +
mov ebx ds:dword_49A0E0 +
mov ebp [esp+48h] +
test ebx ebx +
jz loc_40DA13  +
mov eax [esp+1Ch] +
mov dword ptr [esp] offset aRetFromRjmpJmp +
mov [esp+4] eax +
call printf  +
jmp loc_40DA13  +
***
test eax eax +
jz loc_40E608  +
mov esi [edi+78h] +
test esi esi +
jnz loc_40E536  +
mov [esp+8] eax +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
call sub_420CB0  +
test eax eax +
mov esi eax +
jz loc_40E617  +
mov eax [edi+68h] +
jmp loc_40E536  +
***
xor ecx ecx +
jmp loc_40E516  +
***
add ecx [ebx+8] +
jmp loc_40E516  +
***
mov eax [esp+38h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+38h] eax +
jnz loc_40E4EB  +
mov ebp [esp+48h] +
cmp byte ptr [esp+4Fh] 0 +
jz loc_40DA13  +
mov ecx ds:dword_49A0E0 +
test ecx ecx +
jnz loc_40E817  +
mov ecx [esp+3Ch] +
mov edx [esp+84h] +
mov eax [esp+80h] +
add ecx [ebp+0] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_40AD50  +
test eax eax +
jnz loc_40E1B1  +
test esi esi +
jz loc_40E68D  +
mov eax [esp+24h] +
cmp [eax+78h] esi +
jz loc_40E68D  +
mov [esp] esi +
call free  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_40E6AF  +
mov edi [esp+84h] +
mov edx [edi+8Ch] +
cmp eax [edx+30h] +
jz loc_40E6AF  +
mov [esp] eax +
call free  +
mov edi [esp+40h] +
test edi edi +
jz loc_40D8F2  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp [eax+68h] edi +
jz loc_40D8F2  +
mov [esp] edi +
call free  +
jmp loc_40D8F2  +
***
cmp bl 0FEh +
mov ecx 1 +
jnz loc_40E06A  +
and edx 8 +
jnz loc_40E06A  +
mov eax ds:dword_49A0E0 +
test eax eax +
jz loc_40DA13  +
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aPrecedingSkipI +
mov [esp+8] eax +
mov eax [esp+30h] +
add eax 2 +
mov [esp+4] eax +
call printf  +
jmp loc_40DA13  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aRelaxingTheStu +
call printf  +
mov eax [ebx+120h] +
jmp loc_40DBDB  +
***
mov eax [esp+38h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_434EB0  +
mov ebx eax +
jmp loc_40E500  +
***
xor ecx ecx +
jmp loc_40E06A  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aConvertedRcall +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_40E1B1  +
***
lea eax [esp+5Ch] +
mov [esp+8] eax +
mov eax [esp+84h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_406620  +
test eax eax +
jnz loc_40DA3D  +
jmp loc_40E678  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundJmpRetSeq +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_40E02D  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundRjmpRetSe +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_40E02D  +
***
xor ebp ebp +
jmp loc_40E21B  +
***
mov eax [esp+30h] +
add eax [esp+34h] +
mov dword ptr [esp] offset aUnreachableRet +
mov [esp+4] eax +
call printf  +
jmp loc_40E647  +
***
mov [esp] ebx +
call sub_4062E0  +
mov edx [esp+1Ch] +
xor eax eax +
test edx edx +
jnz loc_40E8C2  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_435C50  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
test byte ptr [eax+14h] 4 +
jz loc_40E916  +
mov eax [edx+0A0h] +
movzx eax word ptr [eax+26h] +
mov [esp+4] edx +
mov dword ptr [esp] offset aBRelocationsIn +
mov [esp+8] eax +
call off_4730E4  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
mov eax [esp+28h] +
mov dword ptr [eax] 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+4] +
mov ds:dword_49A274 eax +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 227h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+8] 20Ch +
mov dword ptr [esp+4] offset a____Binutil_17 +
jmp sub_402930  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov eax [eax+0A0h] +
mov ebx [eax] +
test ebx ebx +
js loc_40E990  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
mov dword ptr [esp+4] 1BDh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1B3h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1ACh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1A5h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 19Eh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 197h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 18Ah +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 17Dh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_402930  +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_413440  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_404C60  +
test eax eax +
jz loc_40EACE  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 8 +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_404B80  +
mov edx [esp+28h] +
test esi esi +
mov [eax] esi +
mov [eax+4] edx +
jz loc_40EB11  +
or dword ptr [ebx+28h] 200h +
mov [ebx+0A0h] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+18h+var_18] offset aBfdPlugin +
lea ebx [esp+18h+arg_8] +
call printf  +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call vprintf  +
mov [esp+18h+var_18] 0Ah +
call putchar  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 9Ch +
mov dword ptr [ecx] 0 +
mov [esp+0A8h+var_A8] eax +
call ds:LoadLibraryA  +
sub esp 4 +
test eax eax +
jz loc_40ED10  +
mov [esp+0A8h+var_A4] offset aOnload +
mov [esp+0A8h+var_A8] eax +
call ds:GetProcAddress  +
sub esp 8 +
test eax eax +
jz loc_40ED03  +
lea edx [ebp+var_68] +
mov [ebp+var_68] 0Bh +
mov [ebp+var_64] offset sub_40EB20 +
mov [ebp+var_60] 5 +
mov [ebp+var_5C] offset loc_40E920 +
mov [ebp+var_58] 8 +
mov [ebp+var_54] offset loc_40EAE0 +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [esp+0A8h+var_A8] edx +
call eax  +
test eax eax +
jnz loc_40ED03  +
mov dword ptr [esi] 1 +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 8 +
mov [ebx+2Ch] al +
mov ecx ds:dword_49A274 +
test ecx ecx +
jz loc_40ED03  +
mov esi [ebx+8Ch] +
mov eax [ebx] +
mov [ebp+var_8C] 0 +
test esi esi +
mov [ebp+var_88] eax +
jz loc_40ED30  +
mov eax [ebx+38h] +
mov edx [ebx+3Ch] +
mov [ebp+var_80] eax +
mov eax [ebx+88h] +
mov [ebp+var_7C] edx +
mov eax [eax+4] +
mov [ebp+var_74] 0 +
mov [ebp+var_78] eax +
mov eax [esi+8] +
test eax eax +
jz loc_40ECF7  +
mov [esp+0A8h+var_A8] eax +
call _fileno_0  +
mov edx [ebx+8Ch] +
test edx edx +
mov [ebp+var_84] eax +
jz loc_40ED60  +
mov [esp+0A8h+var_9C] 1 +
mov [esp+0A8h+var_A4] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A8] eax +
mov [ebp+var_70] ebx +
call j__lseeki64  +
mov esi eax +
mov edi edx +
lea eax [ebp+var_8C] +
mov [esp+0A8h+var_A4] eax +
lea eax [ebp+var_88] +
mov [esp+0A8h+var_A8] eax +
call ds:dword_49A274  +
mov eax [ebp+var_84] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] esi +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_A8] eax +
call j__lseeki64  +
mov eax [ebp+var_8C] +
test eax eax +
jz loc_40ED03  +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 4 +
mov [ebx+2Ch] al +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A8] esi +
call sub_409590  +
test eax eax +
jnz loc_40ED53  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A4] offset aUnableToLoadDl +
mov [esp+0A8h+var_A8] offset aS_0 +
call off_4730E4  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_80] 0 +
mov esi ebx +
mov [ebp+var_7C] 0 +
mov [ebp+var_78] 0 +
mov [ebp+var_74] 0 +
jmp loc_40EC4E  +
mov eax [esi+8] +
jmp loc_40EC59  +
lea edx [ebp+var_48] +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call ds:_fstati64  +
test eax eax +
jnz loc_40ED03  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
mov [ebp+var_78] eax +
mov eax [ebp+var_84] +
mov [ebp+var_74] edx +
jmp loc_40EC75  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+30h] +
mov eax [ebp+0A0h] +
mov edx [eax] +
mov esi [eax+4] +
mov ds:dword_49A1C0 offset a_text +
mov ds:dword_49A114 1000h +
test edx edx +
mov [esp+0Ch] edx +
jle loc_40EE36  +
***
mov [esp+arg_0] 18h +
mov [esp+0] ebp +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_40EEA0  +
mov eax [esp+arg_30] +
mov [eax+edi*4] ebx +
mov ecx [esi+8] +
mov eax [esi] +
mov [ebx] ebp +
mov dword ptr [ebx+8] 0 +
cmp ecx 4 +
mov [ebx+4] eax +
ja loc_40EE67  +
mov edx 1 +
mov eax 2 +
shl edx cl +
test dl 15h +
jz loc_40EE60  +
cmp ecx 4 +
mov [ebx+0Ch] eax +
ja loc_40EE88  +
jmp ds:off_477670[ecx*4]  +
***
mov dword ptr [ebx+10h] offset off_4731C8 +
mov dword ptr [ebx+10h] offset dword_49A1C0 +
jmp loc_40EE27  +
***
mov dword ptr [ebx+10h] offset unk_49A100 +
jmp loc_40EE27  +
***
and edx 0Ah +
mov al 82h +
jnz loc_40EE0C  +
mov [esp-2Ch+arg_2C] 1D1h +
mov [esp-2Ch+arg_28] offset a____Binutil_17 +
call sub_402930  +
mov ecx [esi+8] +
xor eax eax +
mov [ebx+0Ch] eax +
cmp ecx 4 +
jbe loc_40EE14  +
mov [esp-2Ch+arg_2C] 1FDh +
mov [esp-2Ch+arg_28] offset a____Binutil_17 +
call sub_402930  +
jmp loc_40EE27  +
***
mov [esp+arg_0] 1E8h +
mov dword ptr [esp+0] offset a____Binutil_17 +
call sub_402930  +
jmp loc_40EDDE  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_49A26C +
mov ebx [esp+80h] +
test eax eax +
jz loc_40EEE4  +
mov [esp] ebx +
call eax  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jz loc_40EF00  +
xor eax eax +
cmp dl 4 +
jnz loc_40EEDC  +
mov eax [ebx+4] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx dword_473760 +
test ecx ecx +
jz loc_40EF38  +
mov eax ds:dword_49A268 +
test eax eax +
jz loc_40EF40  +
mov ecx offset dword_473760 +
mov edx ebx +
call sub_40EB60  +
test eax eax +
jz loc_40EF38  +
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jmp loc_40EEED  +
***
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_40EEDC  +
***
mov edx ds:dword_49A270 +
test edx edx +
jz loc_40EF38  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset a__LibBfdPlugin +
mov dword ptr [esp] offset aHomeJenkinsMin +
call sub_45F3F0  +
mov dword ptr [esp+4] offset aHomeJenkinsMin +
mov esi eax +
mov [esp+8] eax +
mov eax ds:dword_49A270 +
mov [esp] eax +
call sub_45FBE0  +
mov [esp] esi +
mov edi eax +
mov [esp+1Ch] eax +
call free  +
mov [esp] edi +
call sub_470970  +
test eax eax +
mov ebp eax +
jz loc_40EF2C  +
mov esi [esp+1Ch] +
mov [esp+80h] ebx +
jmp loc_40EFC0  +
mov [esp] edi +
call free  +
test ebx ebx +
jnz loc_40F061  +
mov [esp] ebp +
call sub_470B30  +
test eax eax +
jz loc_40F03D  +
add eax 8 +
xor ebx ebx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset asc_4776F0 +
mov [esp] esi +
call sub_45F3F0  +
mov edi eax +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
call ds:_stati64  +
test eax eax +
jnz loc_40F013  +
movzx eax word ptr [esp+36h] +
and ax 0F000h +
cmp ax 8000h +
jz loc_40F027  +
mov eax dword_473760 +
test eax eax +
jg loc_40EFB0  +
mov eax [esp+2Ch] +
mov dword_473760 eax +
jmp loc_40EFB0  +
***
mov edx [esp+80h] +
lea ecx [esp+2Ch] +
mov eax edi +
call sub_40EB60  +
mov ebx eax +
jmp loc_40F013  +
***
mov ebx [esp+80h] +
xor edi edi +
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call sub_470C50  +
mov eax edi +
jmp loc_40EF1F  +
***
mov edi ebx +
mov ebx [esp+80h] +
jmp loc_40F046  +
***
mov eax [esp+4] +
mov ds:dword_49A270 eax +
retn   +
***
mov eax [esp+4] +
test eax eax +
mov ds:dword_49A268 eax +
setnz al  +
movzx eax al +
mov dword_473760 eax +
retn   +
***
mov edx dword_473760 +
xor eax eax +
test edx edx +
setnle al  +
retn   +
***
xor eax eax +
cmp dword ptr [esp+4] offset off_477700 +
setz al  +
retn   +
***
mov eax [esp+4] +
mov ds:dword_49A26C eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [edi+7Ch] +
mov eax [edi+0A0h] +
test esi esi +
mov eax [eax+14h] +
jnz loc_40F120  +
mov dword ptr [ebx] 0 +
mov eax esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test eax eax +
jz loc_40F13C  +
xor edx edx +
jmp loc_40F12A  +
mov eax ecx +
add edx 1 +
add ebx 4 +
cmp esi edx +
lea ecx [eax+18h] +
mov [ebx-4] eax +
ja loc_40F128  +
jmp loc_40F10F  +
***
lea eax [esi+esi*2] +
shl eax 3 +
mov [esp+4] eax +
mov [esp] edi +
call sub_404B80  +
test eax eax +
jz loc_40F193  +
mov edx [edi+0A0h] +
mov ecx [edx+0Ch] +
mov [edx+14h] eax +
test ecx ecx +
jz loc_40F124  +
mov edx eax +
mov ebp [ecx+4] +
add edx 18h +
mov [edx-18h] edi +
mov [edx-14h] ebp +
mov ebp [ecx+8] +
mov ecx [ecx] +
mov dword ptr [edx-0Ch] 2 +
mov dword ptr [edx-8] offset off_473270 +
mov [edx-10h] ebp +
mov dword ptr [edx-4] 0 +
test ecx ecx +
jnz loc_40F164  +
jmp loc_40F124  +
***
mov eax 0FFFFFFFFh +
jmp loc_40F117  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
mov edx [esp+60h] +
mov eax [esp+5Ch] +
mov [esp] ebx +
mov [esp+14h] edx +
mov [esp+10h] eax +
call sub_407270  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
mov ebp eax +
call sub_404B80  +
test eax eax +
mov edi eax +
jz loc_40F333  +
mov ecx [esp+64h] +
test ecx ecx +
jz loc_40F1FC  +
mov eax [esp+54h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_40F210  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+64h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_404B80  +
test eax eax +
mov ecx eax +
mov [esp+20h] eax +
jz loc_40F333  +
mov eax [esp+64h] +
mov [esp] ecx +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp+4] eax +
call memcpy  +
mov edx ds:dword_49A280 +
test edx edx +
jnz loc_40F340  +
mov eax [esp+54h] +
xor ebx ebx +
mov [esp+18h] ebp +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+20h] +
mov [esp+8] ebp +
mov ecx eax +
mov [esp+24h] eax +
mov eax ebp +
mov [esp+28h] ecx +
mov ecx [esp+64h] +
cdq   +
add ecx [esp+10h] +
adc ebx [esp+14h] +
mov [esp+0Ch] edx +
mov [esp] ecx +
mov [esp+4] ebx +
mov [esp+1Ch] edx +
call sub_46FB70  +
add eax [esp+28h] +
adc edx [esp+2Ch] +
cmp edx 0 +
jl loc_40F375  +
jle loc_40F37E  +
mov ebx [esp+24h] +
mov dword ptr [esi+8] 3 +
lea esi [esi+0] +
mov eax [esp+20h] +
mov edx [esp+1Ch] +
mov [edi+4] eax +
mov eax [esp+18h] +
mov [esp+0Ch] edx +
mov edx [esp+14h] +
mov [esp+8] eax +
mov eax [esp+10h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_46FB70  +
add ebx eax +
mov eax [esp+64h] +
mov [edi+8] ebx +
mov [edi+0Ch] eax +
mov eax [esi+4] +
test eax eax +
jz loc_40F303  +
cmp ebx [eax+8] +
jnb loc_40F360  +
mov edx [esi] +
mov eax esi +
test edx edx +
jnz loc_40F318  +
jmp loc_40F31D  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_40F31D  +
cmp ebx [edx+8] +
ja loc_40F310  +
mov [edi] edx +
mov [eax] edi +
mov eax [edi] +
test eax eax +
jnz loc_40F1FC  +
mov [esi+4] edi +
jmp loc_40F1FC  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov [esp+18h] ebp +
sar ebp 1Fh +
mov dword ptr [esi+8] 3 +
mov [esp+1Ch] ebp +
mov ebx [eax+20h] +
jmp loc_40F2C0  +
***
mov [eax] edi +
mov eax 1 +
mov dword ptr [edi] 0 +
mov [esi+4] edi +
jmp loc_40F201  +
***
mov ebx [esp+24h] +
jmp loc_40F2C0  +
***
cmp eax 10000h +
jbe loc_40F375  +
cmp edx 0 +
jg loc_40F2B1  +
nop   +
jl loc_40F39D  +
cmp eax 1000000h +
ja loc_40F2B1  +
cmp dword ptr [esi+8] 2 +
ja loc_40F2B1  +
mov dword ptr [esi+8] 2 +
mov ebx [esp+24h] +
jmp loc_40F2C0  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_40F3E0  +
mov dword ptr [edx+84h] offset asc_475620 +
mov eax 1 +
retn   +
***
jmp sub_4071F0  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_413440  +
***
push esi  +
push ebx  +
sub esp 23Ch +
cmp edx 9 +
mov [esp+23Ch+var_220] eax +
mov eax ecx +
mov edi [esp+23Ch+arg_4] +
lea ecx [edx+30h] +
mov byte ptr [esp+23Ch+var_210] 53h +
mov byte ptr [esp+23Ch+var_210+1] cl +
ja loc_40F4B0  +
mov ebx 1 +
mov ecx edx +
shl ebx cl +
test ebx 203h +
jz loc_40F5A5  +
lea ebp [esp+23Ch+var_20C] +
xor esi esi +
mov ecx eax +
movzx ebx al +
shr ecx 8 +
add ebp 4 +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
add ebx ecx +
movzx edx ds:byte_477D34[edx] +
add ebx esi +
mov [ebp-3] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_477D34[edx] +
mov [ebp-4] dl +
mov edx eax +
and edx 0Fh +
movzx edx ds:byte_477D34[edx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 4 +
and edx 0Fh +
movzx edx ds:byte_477D34[edx] +
mov [ebp-2] dl +
jmp loc_40F4B6  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
cmp [esp+23Ch+arg_0] edi +
jnb loc_40F511  +
mov eax [esp+23Ch+arg_0] +
mov edx ebp +
mov [esp+23Ch+var_224] ebx +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
add eax 1 +
add edx 2 +
add [esp+23Ch+var_224] ecx +
mov esi ecx +
and esi 0Fh +
movzx ebx ds:byte_477D34[esi] +
mov [edx-1] bl +
mov ebx ecx +
shr bl 4 +
movzx esi bl +
movzx ebx ds:byte_477D34[esi] +
mov [edx-2] bl +
cmp eax edi +
jnz loc_40F4D0  +
sub eax [esp+23Ch+arg_0] +
mov ebx [esp+23Ch+var_224] +
lea ebp [ebp+eax*2+0] +
lea eax [esp+2Eh] +
mov edi ebp +
sub edi eax +
add ebp 4 +
mov esi edi +
shr esi 1Fh +
add esi edi +
mov ecx esi +
sar ecx 1 +
mov eax ecx +
movzx ecx cl +
and eax 0Fh +
add ebx ecx +
movzx eax ds:byte_477D34[eax] +
not ebx  +
movzx ebx bl +
lea edx [esp+23Ch+var_210] +
mov byte ptr [esp+23Ch+var_210+3] al +
mov eax esi +
sar eax 5 +
and eax 0Fh +
movzx eax ds:byte_477D34[eax] +
mov byte ptr [ebp-1] 0Ah +
mov byte ptr [esp+23Ch+var_210+2] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_477D34[eax] +
shr ebx 4 +
mov byte ptr [ebp-2] 0Dh +
mov [ebp-3] al +
movzx eax ds:byte_477D34[ebx] +
mov [ebp-4] al +
mov eax [esp+23Ch+var_220] +
sub ebp edx +
mov [esp+23Ch+var_238] ebp +
mov [esp+23Ch+var_23C] edx +
mov [esp+23Ch+var_234] eax +
call sub_408570  +
cmp eax ebp +
setz al  +
add esp 23Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx 104h +
jnz loc_40F5E4  +
and ebx 88h +
jz loc_40F4B0  +
mov ebx eax +
shr ebx 18h +
mov edx ebx +
and edx 0Fh +
movzx edx ds:byte_477D34[edx] +
lea ebp [esp+23Ch+var_20C+2] +
mov byte ptr [esp+23Ch+var_20C+1] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_477D34[edx] +
mov byte ptr [esp+23Ch+var_20C] dl +
jmp loc_40F5EA  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
mov ecx eax +
add ebp 2 +
shr ecx 10h +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
movzx edx ds:byte_477D34[edx] +
lea esi [ebx+ecx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_477D34[edx] +
mov [ebp-2] dl +
jmp loc_40F453  +
***
mov eax ds:dword_49A284 +
mov ebx [esp+18h+arg_0] +
test eax eax +
jz loc_40F680  +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_404B80  +
test eax eax +
jz loc_40F691  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+8] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov ds:dword_49A284 1 +
call nullsub_2  +
jmp loc_40F631  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+2Ch] +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test edx edx +
jz loc_40F6F0  +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] eax +
call sub_413100  +
mov eax [ebx+10h] +
mov edx [ebx+4] +
mov eax [eax] +
mov [esp+20h] esi +
mov [esp+2Ch] edx +
mov dword ptr [esp+24h] offset a5sS +
mov [esp+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fprintf  +
***
mov eax [ebx+4] +
mov [esp+20h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fputs  +
***
jmp sub_40F710  +
***
sub esp 28h +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_9] +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] eax +
call sub_4084C0  +
cmp eax 1 +
jz loc_40F750  +
call sub_402790  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 12h +
jz loc_40F74A  +
mov dword ptr [ebx] 1 +
add esp 28h +
pop ebx  +
retn   +
movzx eax byte ptr [esp+28h+var_9] +
add esp 28h +
pop ebx  +
retn   +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+74h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
test ebp ebp +
jz loc_40F798  +
mov eax esi +
xor ebx ebx +
mov edx edi +
add eax ebp +
adc edx ebx +
cmp ebx edx +
jle loc_40F7A0  +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jge loc_40F7E5  +
mov ebx [esp+64h] +
cmp edx 0 +
mov ecx [ebx+24h] +
jl loc_40F7B4  +
jg loc_40F78A  +
cmp eax ecx +
ja loc_40F78A  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_40F7F0  +
add eax esi +
mov [esp+4] eax +
mov eax [esp+68h] +
mov [esp+8] ebp +
mov [esp] eax +
call memcpy  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp eax +
ja loc_40F78A  +
jmp loc_40F7A2  +
***
mov eax [esp+60h] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_404B80  +
mov edx [esp+64h] +
mov ebx eax +
mov [esp+24h] eax +
mov [edx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_40F798  +
mov eax edx +
mov edx [edx+54h] +
mov eax [eax+50h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+8] edx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_4086D0  +
test eax eax +
jnz loc_40F9C2  +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp+74h] ebp +
nop   +
mov eax [esp+60h] +
lea edx [esp+3Ch] +
call sub_40F710  +
cmp eax 0FFFFFFFFh +
jz loc_40FB02  +
cmp eax 0Ah +
jz loc_40F870  +
cmp eax 0Dh +
nop   +
jz loc_40F870  +
cmp eax 53h +
jz loc_40F8AB  +
mov dword ptr [esp+4] 2E3h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_402930  +
mov eax [esp+60h] +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
lea eax [esp+39h] +
mov [esp] eax +
call sub_4084C0  +
cmp eax 3 +
jnz loc_40F9B2  +
movzx eax byte ptr [esp+3Ah] +
movzx eax ds:byte_4924C0[eax] +
cmp al 63h +
jz loc_40F9D0  +
movzx edx byte ptr [esp+3Bh] +
movzx edx ds:byte_4924C0[edx] +
cmp dl 63h +
jz loc_40F9D0  +
shl eax 4 +
lea ebp [eax+edx] +
lea ebx [ebp+ebp+0] +
cmp ebx [esp+20h] +
jbe loc_40F931  +
mov eax [esp+18h] +
test eax eax +
jz loc_40F919  +
mov [esp] eax +
call free  +
mov [esp] ebx +
call sub_407460  +
test eax eax +
mov [esp+18h] eax +
jz loc_40F9C2  +
mov [esp+20h] ebx +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp] eax +
call sub_4084C0  +
cmp ebx eax +
jnz loc_40F9B2  +
movzx eax byte ptr [esp+39h] +
cmp al 32h +
jz loc_40FAEC  +
cmp al 33h +
jz loc_40FA01  +
cmp al 31h +
jz loc_40FAF7  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp [eax+24h] ebx +
jz loc_40F993  +
mov dword ptr [esp+4] 2FEh +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_402930  +
mov eax [esp+18h] +
test eax eax +
jz loc_40F9A3  +
mov [esp] eax +
call free  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
jmp loc_40F7C2  +
***
mov eax [esp+18h] +
test eax eax +
jz loc_40F9C2  +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_40F798  +
***
mov dword ptr [esp+4] 2E8h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_402930  +
movzx eax byte ptr [esp+3Ah] +
movzx edx byte ptr [esp+3Bh] +
movzx eax ds:byte_4924C0[eax] +
movzx edx ds:byte_4924C0[edx] +
jmp loc_40F8F9  +
***
mov edi [esp+18h] +
sub ebp 1 +
movzx eax byte ptr [edi] +
lea edx [edi+2] +
movzx ecx byte ptr [edi+1] +
movzx eax ds:byte_4924C0[eax] +
movzx ebx ds:byte_4924C0[ecx] +
shl eax 4 +
add ebx eax +
shl ebx 8 +
movzx eax byte ptr [edx] +
lea ecx [edx+2] +
sub ebp 1 +
movzx edx byte ptr [edx+1] +
movzx eax ds:byte_4924C0[eax] +
movzx edx ds:byte_4924C0[edx] +
shl eax 4 +
add edx eax +
or edx ebx +
shl edx 8 +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
mov edi [esp+64h] +
movzx eax ds:byte_4924C0[eax] +
movzx ebx ds:byte_4924C0[ebx] +
shl eax 4 +
add eax ebx +
movzx ebx byte ptr [ecx+2] +
or eax edx +
lea edx [ecx+4] +
movzx ecx byte ptr [ecx+3] +
shl eax 8 +
movzx ebx ds:byte_4924C0[ebx] +
movzx ecx ds:byte_4924C0[ecx] +
shl ebx 4 +
add ecx ebx +
or eax ecx +
mov ecx [esp+1Ch] +
add ecx [edi+1Ch] +
cmp eax ecx +
jnz loc_40FB40  +
cmp ebp 3 +
jz loc_40F870  +
mov eax [esp+24h] +
lea edi [ebp-3] +
xor ecx ecx +
mov esi [esp+1Ch] +
add esi eax +
movzx eax byte ptr [edx] +
add edx 2 +
movzx ebx byte ptr [edx-1] +
movzx eax ds:byte_4924C0[eax] +
shl eax 4 +
add al ds:byte_4924C0[ebx] +
mov [esi+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_40FAB7  +
mov eax [esp+1Ch] +
lea eax [ebp+eax-3] +
mov [esp+1Ch] eax +
jmp loc_40F870  +
***
mov edx [esp+18h] +
xor ebx ebx +
jmp loc_40FA28  +
***
mov ecx [esp+18h] +
xor edx edx +
jmp loc_40FA4D  +
***
mov eax [esp+3Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
test eax eax +
jnz loc_40F9B2  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
cmp ebx [eax+24h] +
jz loc_40F993  +
mov dword ptr [esp+4] 32Eh +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_402930  +
jmp loc_40F993  +
***
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp ebx [eax+24h] +
jz loc_40F993  +
mov dword ptr [esp+4] 317h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_402930  +
jmp loc_40F993  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
test edx edx +
mov [esp+10h] eax +
mov eax [eax+0A0h] +
mov [esp+1Ch] eax +
jz loc_40FBA8  +
mov eax [esp+10h] +
mov ebx [eax+7Ch] +
test ebx ebx +
jnz loc_40FCF4  +
mov esi [esp+10h] +
mov ebx [esi] +
mov [esp] ebx +
call strlen  +
mov edx 28h +
mov [esp] ebx +
cmp eax 28h +
cmovbe edx eax +
xor ecx ecx +
add edx ebx +
mov eax esi +
mov [esp+4] edx +
xor edx edx +
call sub_40F410  +
test eax eax +
jz loc_40FC8A  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_40FCA6  +
nop   +
mov eax [esp+0Ch] +
mov edi [eax+4] +
mov eax dword_473764 +
test eax eax +
jnz loc_40FCD5  +
mov dword_473764 1 +
mov eax [esp+0Ch] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_40FC94  +
xor ebp ebp +
mov eax ebp +
mov ebp edi +
mov edi eax +
jmp loc_40FC32  +
mov eax [esp+0Ch] +
add edi ebx +
mov ebx [eax+0Ch] +
cmp ebx edi +
jbe loc_40FC94  +
mov ebp esi +
mov eax dword_473764 +
sub ebx edi +
cmp ebx eax +
cmova ebx eax +
mov eax [esp+0Ch] +
lea esi [ebp+ebx+0] +
mov edx [eax+8] +
mov eax [esp+10h] +
mov [esp+14h] edx +
mov [esp] eax +
call sub_407270  +
mov edx [esp+1Ch] +
mov edx [edx+8] +
mov [esp+4] esi +
mov ecx eax +
mov eax edi +
mov [esp] ebp +
mov [esp+18h] edx +
xor edx edx +
div  ecx +
mov ecx [esp+14h] +
mov edx [esp+18h] +
add ecx eax +
mov eax [esp+10h] +
call sub_40F410  +
test eax eax +
jnz loc_40FC23  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jnz loc_40FBF0  +
mov eax [esp+10h] +
mov edx 0Ah +
mov esi [esp+1Ch] +
mov ecx [eax+74h] +
sub edx [esi+8] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_40F410  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov edx 0FDh +
sub edx [esi+8] +
cmp eax edx +
jbe loc_40FC0E  +
mov dword_473764 edx +
jmp loc_40FC0E  +
***
mov esi [eax+78h] +
mov edi eax +
mov eax [eax] +
mov [esp+0Ch] esi +
mov [esp] eax +
call strlen  +
mov [esp+8] edi +
mov dword ptr [esp+4] 3 +
mov dword ptr [esp] offset asc_4778E3 +
mov esi eax +
call sub_408570  +
cmp eax 3 +
jnz loc_40FC8A  +
mov edi [esp+10h] +
mov eax [edi] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_408570  +
cmp esi eax +
jnz loc_40FC8A  +
mov eax [esp+10h] +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_4778E7 +
mov [esp+8] eax +
call sub_408570  +
cmp eax 2 +
jnz loc_40FC8A  +
xor edi edi +
test ebx ebx +
lea ebp [esp+27h] +
jle loc_40FE92  +
mov [esp+14h] ebx +
jmp loc_40FD8E  +
add edi 1 +
cmp [esp+14h] edi +
jz loc_40FE92  +
mov eax [esp+0Ch] +
mov ebx [eax+edi*4] +
mov eax [esp+10h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_413080  +
test eax eax +
jnz loc_40FD81  +
test byte ptr [ebx+0Ch] 4 +
jnz loc_40FD81  +
mov eax [ebx+4] +
mov [esp] eax +
call strlen  +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_4778F0 +
mov esi eax +
mov eax [esp+10h] +
mov [esp+8] eax +
call sub_408570  +
cmp eax 2 +
jnz loc_40FC8A  +
mov eax [ebx+4] +
mov ecx [esp+10h] +
mov [esp+4] esi +
mov [esp] eax +
mov [esp+8] ecx +
call sub_408570  +
cmp esi eax +
jnz loc_40FC8A  +
mov ecx [ebx+10h] +
mov eax [ecx+3Ch] +
mov eax [eax+20h] +
add eax [ebx+8] +
add eax [ecx+38h] +
mov dword ptr [esp+4] offset a08lx_0 +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
cmp byte ptr [esp+27h] 30h +
jnz loc_40FE8E  +
movzx eax byte ptr [esp+28h] +
mov esi ebp +
test al al +
jnz loc_40FE3F  +
jmp loc_40FE46  +
movzx eax byte ptr [esi+1] +
test al al +
jz loc_40FE46  +
add esi 1 +
cmp al 30h +
jz loc_40FE37  +
mov [esp] esi +
sub esi 2 +
call strlen  +
mov byte ptr [esi+eax+2] 0Dh +
lea edx [eax+4] +
mov byte ptr [esi+eax+3] 0Ah +
mov eax [esp+10h] +
mov byte ptr [esi+1] 24h +
mov byte ptr [esi] 20h +
mov [esp+4] edx +
mov [esp+8] eax +
mov [esp] esi +
mov [esp+18h] edx +
call sub_408570  +
mov edx [esp+18h] +
cmp edx eax +
jz loc_40FD81  +
jmp loc_40FC8A  +
***
mov esi ebp +
jmp loc_40FE46  +
***
mov eax [esp+10h] +
mov dword ptr [esp+4] 5 +
mov dword ptr [esp] offset asc_4778EA +
mov [esp+8] eax +
call sub_408570  +
cmp eax 5 +
jnz loc_40FC8A  +
jmp loc_40FBA8  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_40FB80  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_40FB80  +
***
sub esp 54h +
cmp ecx 0FFFFFFFFh +
jz loc_40FF31  +
mov ebx eax +
movzx eax cl +
test ds:byte_4922A0[eax+eax] 10h +
jz loc_40FF47  +
mov byte ptr [esp+54h+var_2C] cl +
lea esi [esp+54h+var_2C] +
mov byte ptr [esp+54h+var_2C+1] 0 +
mov [esp+54h+var_48] esi +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] offset aBDUnexpectedCh +
call off_4730E4  +
mov [esp+54h+var_54] 11h +
call sub_4029E0  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+54h+arg_0] +
test eax eax +
jnz loc_40FF2B  +
mov [esp+54h+var_54] 12h +
call sub_4029E0  +
jmp loc_40FF2B  +
lea esi [esp+54h+var_2C] +
mov [esp+54h+var_4C] eax +
mov [esp+54h+var_50] offset a03o +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
jmp loc_40FF06  +
***
push edi  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_40F710  +
cmp eax 0FFFFFFFFh +
jz loc_41065E  +
cmp eax 0Dh +
jz loc_40FFEB  +
cmp eax 53h +
jnz loc_410110  +
cmp eax 20h +
nop   +
jz loc_410130  +
jle loc_410215  +
cmp eax 24h +
nop   +
jz loc_4101FB  +
cmp eax 53h +
jnz loc_410223  +
mov [esp+0] ebp +
call sub_4085F0  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 3 +
mov [esp+arg_2C] eax +
lea eax [esp+arg_41] +
mov [esp+0] eax +
mov [esp+arg_30] edx +
call sub_4084C0  +
cmp eax 3 +
jnz loc_4102A4  +
movzx ecx byte ptr [esp+46h] +
movzx eax ds:byte_4924C0[ecx] +
cmp al 63h +
jz loc_410751  +
movzx ecx [esp+arg_43] +
movzx edx ds:byte_4924C0[ecx] +
cmp dl 63h +
jz loc_410751  +
shl eax 4 +
lea esi [eax+edx] +
movzx eax [esp+arg_41] +
mov ebx esi +
cmp al 38h +
jz loc_4102C2  +
cmp al 32h +
jz loc_4102C2  +
and eax 0FFFFFFFBh +
cmp al 33h +
setz al  +
movzx eax al +
lea eax [eax+eax+3] +
cmp eax esi +
ja loc_410768  +
lea edi [esi+esi] +
cmp [esp+arg_34] edi +
jnb loc_4100CE  +
mov eax [esp+arg_20] +
test eax eax +
jz loc_4100B6  +
mov [esp+0] eax +
call free  +
mov [esp+0] edi +
call sub_407460  +
test eax eax +
mov [esp+arg_20] eax +
jz loc_4101E8  +
mov [esp+arg_34] edi +
mov eax [esp+arg_20] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] edi +
mov [esp+0] eax +
call sub_4084C0  +
cmp edi eax +
jnz loc_4102A4  +
lea eax [esi-1] +
mov [esp+arg_18] eax +
movzx eax [esp+arg_41] +
sub eax 30h +
cmp al 9 +
ja sub_40FFC9  +
movzx eax al +
jmp ds:off_477984[eax*4]  +
***
cmp eax 0Ah +
jz loc_41020B  +
cmp eax 20h +
mov [esp+arg_28] 0 +
jnz loc_40FFF6  +
lea esi [esi+0] +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_40F710  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_41028D  +
cmp eax 9 +
jz loc_410130  +
cmp eax 20h +
jz loc_410130  +
cmp eax 0Ah +
jz loc_41073D  +
cmp eax 0Dh +
jz loc_41073D  +
mov dword ptr [esp+0] 0Bh +
call sub_407460  +
test eax eax +
mov esi eax +
jz loc_4102A4  +
mov [eax] bl +
lea edi [eax+1] +
mov ebx 0Ah +
jmp loc_410189  +
mov [edi] dl +
add edi 1 +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_40F710  +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_410796  +
movzx eax al +
test ds:byte_4922A0[eax+eax] 40h +
jnz loc_410240  +
mov ecx edi +
sub ecx esi +
cmp ebx ecx +
ja loc_410184  +
add ebx ebx +
lea eax [ebx+1] +
mov [esp+arg_0] eax +
mov [esp+0] esi +
mov [esp+arg_1C] ecx +
mov [esp+arg_18] edx +
call sub_4074F0  +
test eax eax +
jz loc_4107AD  +
mov ecx [esp+arg_1C] +
mov esi eax +
mov edx [esp+arg_18] +
lea edi [eax+ecx] +
jmp loc_410184  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 0FFFFFFFFh +
jz loc_41028D  +
lea edx [esp-7Ch+arg_C0] +
mov eax ebp +
call sub_40F710  +
cmp eax 0Ah +
jnz loc_4101F2  +
add [esp-7Ch+arg_A0] 1 +
jmp sub_40FFC9  +
cmp eax 0Ah +
jz loc_41020B  +
cmp eax 0Dh +
jz sub_40FFC9  +
mov edx [esp+arg_44] +
mov ecx eax +
mov eax ebp +
mov [esp+0] edx +
mov edx [esp+arg_24] +
call sub_40FEE0  +
jmp loc_4102A4  +
***
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov [esp+arg_28] 0 +
mov edi ebx +
mov edi [esp+arg_20] +
movzx eax byte ptr [edi] +
movzx edx ds:byte_4924C0[eax] +
movzx eax byte ptr [edi+1] +
movzx ecx ds:byte_4924C0[eax] +
mov eax edx +
shl eax 4 +
shl edx 4 +
lea ebx [ecx+esi] +
add ecx edx +
add ebx eax +
mov eax edi +
lea edi [esi-2] +
add eax 2 +
mov [esp+arg_18] edi +
shl ecx 8 +
jmp loc_4103CB  +
***
mov eax [esp+arg_20] +
test eax eax +
jz loc_410654  +
mov [esp+0] eax +
call free  +
mov eax 1 +
jmp loc_4101EA  +
mov eax [esp+arg_44] +
test eax eax +
jnz loc_4102A4  +
mov ebx [esp+arg_20] +
mov eax 1 +
test ebx ebx +
jz loc_4101EA  +
mov [esp+0] ebx +
mov [esp+arg_18] eax +
call free  +
mov eax [esp+arg_18] +
jmp loc_4101EA  +
***
add eax edi +
mov [ecx+24h] eax +
jmp loc_410544  +
***
cmp eax 20h +
jz loc_41027D  +
cmp eax 24h +
mov ebx eax +
jz loc_4107BA  +
xor esi esi +
mov eax ebx +
jmp loc_4106D9  +
***
shl esi 4 +
mov eax ebp +
add esi edx +
lea edx [esp+arg_44] +
call sub_40F710  +
cmp eax 0FFFFFFFFh +
jz loc_41028D  +
movzx edx al +
movzx edx ds:byte_4924C0[edx] +
cmp dl 63h +
jnz loc_4106C0  +
mov [esp+arg_0] 0Ch +
mov ebx eax +
mov [esp+0] ebp +
call sub_404B80  +
test eax eax +
jz loc_4102A4  +
mov [eax+4] edi +
mov [eax+8] esi +
mov edx [ebp+0A0h] +
mov ecx [edx+0Ch] +
test ecx ecx +
jz loc_4107D5  +
mov ecx [edx+10h] +
mov [ecx] eax +
mov [edx+10h] eax +
mov dword ptr [eax] 0 +
add dword ptr [ebp+7Ch] 1 +
cmp ebx 9 +
jz loc_410130  +
cmp ebx 20h +
jz loc_410130  +
cmp ebx 0Ah +
jz loc_41020B  +
cmp ebx 0Dh +
jz sub_40FFC9  +
mov ecx ebx +
mov eax [esp+arg_44] +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_40FEE0  +
jmp loc_4102A4  +
mov eax [esp+arg_24] +
mov [esp+arg_8] esi +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBDByteCountDTo +
mov [esp+arg_4] eax +
call off_4730E4  +
mov dword ptr [esp+0] 11h +
call sub_4029E0  +
jmp loc_4102A4  +
mov eax [esp+arg_44] +
mov ecx 0FFFFFFFFh +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_40FEE0  +
mov [esp+0] esi +
call free  +
jmp loc_4102A4  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_40F710  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_4106B4  +
jmp loc_41028D  +
mov [edx+0Ch] eax +
jmp loc_41071E  +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_49A284 +
mov ebx [esp+30h] +
test edx edx +
jz loc_4108B5  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_4108AD  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_4084C0  +
cmp eax 4 +
jnz loc_4108AD  +
cmp byte ptr [esp+1Ch] 53h +
jnz loc_4108A1  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_4924C0[eax] 63h +
jz loc_4108A1  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_4924C0[eax] 63h +
jz loc_4108A1  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_4924C0[eax] 63h +
jz loc_4108A1  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_40F620  +
test eax eax +
jz loc_4108D0  +
mov eax ebx +
call sub_40FF70  +
test eax eax +
jz loc_4108D0  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_410898  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4029E0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_49A284 1 +
call nullsub_2  +
jmp loc_4107F7  +
***
mov eax [ebx+0A0h] +
cmp eax esi +
jz loc_4108EA  +
test eax eax +
jz loc_4108EA  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_404DD0  +
mov [ebx+0A0h] esi +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_49A284 +
mov ebx [esp+30h] +
test edx edx +
jz loc_4109B4  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_4109AC  +
lea eax [esp+1Eh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 2 +
mov [esp] eax +
call sub_4084C0  +
cmp eax 2 +
jnz loc_4109AC  +
cmp byte ptr [esp+1Eh] 24h +
jnz loc_4109A0  +
cmp byte ptr [esp+1Fh] 24h +
jnz loc_4109A0  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_40F620  +
test eax eax +
jz loc_4109C8  +
mov eax ebx +
call sub_40FF70  +
test eax eax +
jz loc_4109C8  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_410991  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4029E0  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_49A284 1 +
call nullsub_2  +
jmp loc_410917  +
***
mov eax [ebx+0A0h] +
cmp esi eax +
jz loc_4109E2  +
test eax eax +
jz loc_4109E2  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_404DD0  +
mov [ebx+0A0h] esi +
xor eax eax +
jmp loc_4109AE  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov ebp [esp+3Ch] +
mov edi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
call sub_404B80  +
test eax eax +
mov esi eax +
jz loc_410AC3  +
mov edx [esp+44h] +
test edx edx +
jz loc_410A36  +
mov eax [esp+34h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_410A43  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_410AC3  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov [esi+4] ebx +
add ebp [eax+20h] +
mov eax [esp+44h] +
mov [esi+8] ebp +
mov [esi+0Ch] eax +
mov eax [edi+4] +
test eax eax +
jz loc_410A91  +
cmp ebp [eax+8] +
jnb loc_410AD0  +
mov edx [edi] +
mov eax edi +
test edx edx +
jnz loc_410AA8  +
jmp loc_410AAD  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_410AAD  +
cmp ebp [edx+8] +
ja loc_410AA0  +
mov [esi] edx +
mov [eax] esi +
mov eax [esi] +
test eax eax +
jnz loc_410A36  +
mov [edi+4] esi +
jmp loc_410A36  +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [eax] esi +
mov eax 1 +
mov dword ptr [esi] 0 +
mov [edi+4] esi +
jmp loc_410A3B  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_410B10  +
mov dword ptr [edx+84h] offset asc_475620 +
mov eax 1 +
retn   +
***
jmp sub_4071F0  +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_49A288 +
mov ebx [esp+20h] +
test eax eax +
jz loc_410B62  +
mov dword ptr [esp+4] 8 +
mov [esp] ebx +
call sub_404B80  +
test eax eax +
jz loc_410B73  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
mov ds:dword_49A288 1 +
call nullsub_2  +
jmp loc_410B31  +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_410D3A  +
lea edi [esp+2Eh] +
mov ebx [esp+1Ch] +
mov eax [ebx+8] +
mov esi [ebx+4] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov edx eax +
shr edx 18h +
mov ebp esi +
and edx 0Fh +
movzx edx ds:byte_477F34[edx] +
mov byte ptr [esp+2Eh] 40h +
mov byte ptr [esp+37h] 0Dh +
mov byte ptr [esp+38h] 0Ah +
mov [esp+30h] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_477F34[edx] +
mov [esp+2Fh] dl +
mov edx eax +
shr edx 10h +
and edx 0Fh +
movzx edx ds:byte_477F34[edx] +
mov [esp+32h] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_477F34[edx] +
mov [esp+31h] dl +
mov edx eax +
shr edx 8 +
and edx 0Fh +
movzx edx ds:byte_477F34[edx] +
mov [esp+34h] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_477F34[edx] +
mov [esp+33h] dl +
mov edx eax +
shr eax 4 +
and edx 0Fh +
and eax 0Fh +
movzx edx ds:byte_477F34[edx] +
movzx eax ds:byte_477F34[eax] +
mov [esp+36h] dl +
mov [esp+35h] al +
mov eax [esp+80h] +
mov [esp+8] eax +
call sub_408570  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_410D28  +
mov dword ptr [esp+14h] 0 +
mov eax esi +
sub eax [esp+14h] +
mov edx 10h +
mov esi ebp +
cmp eax 10h +
cmova eax edx +
lea ebp [ebp+eax+0] +
cmp ebp esi +
mov [esp+18h] eax +
jbe loc_410D47  +
mov edx esi +
mov eax edi +
movzx ebx byte ptr [edx] +
add edx 1 +
add eax 3 +
mov ecx ebx +
and ecx 0Fh +
movzx ecx ds:byte_477F34[ecx] +
shr bl 4 +
movzx ebx bl +
mov [eax-2] cl +
movzx ecx ds:byte_477F34[ebx] +
mov [eax-3] cl +
cmp edx ebp +
mov byte ptr [eax-1] 20h +
jnz loc_410CA6  +
add esi 1 +
mov eax 1 +
sub eax esi +
add eax ebp +
lea ebx [eax+eax*2] +
add ebx edi +
mov eax [esp+80h] +
add ebx 2 +
mov byte ptr [ebx-2] 0Dh +
mov byte ptr [ebx-1] 0Ah +
sub ebx edi +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_408570  +
cmp ebx eax +
jnz loc_410D4B  +
mov eax [esp+18h] +
add [esp+14h] eax +
mov eax [esp+1Ch] +
mov eax [eax+0Ch] +
cmp eax [esp+14h] +
ja loc_410C81  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_410BA6  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
jmp loc_410CE7  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 4 +
mov eax [eax] +
mov [esp+0Ch+var_C] edx +
movzx edx byte ptr [eax] +
movzx ebx ds:byte_4924C0[edx] +
cmp bl 63h +
jz loc_410DE2  +
test ebx ebx +
mov esi 0Fh +
lea edx [eax+1] +
lea ebp [ebx-1] +
cmovnz esi ebp +
cmp edx ecx +
jnb loc_410DF4  +
movzx eax byte ptr [eax+1] +
movzx eax ds:byte_4924C0[eax] +
cmp al 63h +
jz loc_410DE2  +
sub esi 1 +
xor ebx ebx +
jmp loc_410DBC  +
cmp edx ecx +
jz loc_410DF0  +
movzx eax byte ptr [edx] +
sub esi 1 +
movzx eax ds:byte_4924C0[eax] +
cmp al 63h +
jz loc_410DE2  +
shl ebx 4 +
add edx 1 +
mov ebp ebx +
movzx ebx al +
or ebx ebp +
cmp esi 0FFFFFFFFh +
jnz loc_410DA7  +
mov eax 1 +
mov [edi] edx +
mov edi [esp+0Ch+var_C] +
mov [edi] ebx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_410DD3  +
xor eax eax +
xor ebx ebx +
jmp loc_410DD3  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [edx] +
movzx ebx byte ptr [edi] +
movzx ebx ds:byte_4924C0[ebx] +
cmp bl 63h +
jz loc_410E60  +
movzx esi bl +
mov ebx 10h +
test esi esi +
lea ebp [edi+1] +
cmovz esi ebx +
cmp ebp [esp+4+arg_0] +
jnb loc_410E6A  +
xor bl bl +
mov [esp+4+var_4] edx +
movzx edx byte ptr [edi+ebx+1] +
mov [eax+ebx] dl +
add ebx 1 +
cmp esi ebx +
ja loc_410E33  +
mov edx [esp+4+var_4] +
mov byte ptr [eax+ebx] 0 +
add ebp ebx +
xor eax eax +
cmp ebx esi +
mov [edx] ebp +
setz al  +
mov [ecx] esi +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_410E45  +
***
mov [ecx-4] edx +
mov edx [edx+18h] +
sub ecx 4 +
test edx edx +
jnz loc_410E95  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx 8 +
sub esp 0Ch +
mov esi [eax] +
mov [esp+18h+var_18] edx +
mov edi edx +
shr edi cl +
and edi 0Fh +
jnz loc_410F00  +
sub ebx 1 +
sub ecx 4 +
cmp ebx 1 +
jnz loc_410ED6  +
mov byte ptr [esi] 31h +
add esi 2 +
mov byte ptr [esi-1] 30h +
mov [eax] esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+18h+var_18] edx +
lea edi [ebx+30h] +
lea edx [esi+1] +
mov ebp edx +
mov [esp+18h+var_14] edx +
mov edx edi +
mov [esi] dl +
mov edx [esp+18h+var_18] +
lea edi [esi+ebx+1] +
mov [esp+18h+var_10] eax +
mov esi ebp +
mov ebp edx +
add esi 1 +
shr ebp cl +
sub ecx 4 +
and ebp 0Fh +
cmp esi edi +
movzx eax ss:byte_478254[ebp] +
mov [esi-1] al +
jnz loc_410F20  +
mov eax [esp+18h+var_10] +
add ebx [esp+18h+var_14] +
mov [eax] ebx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
push ebx  +
and edx 0FFFFE000h +
sub esp 14h +
mov eax [eax+0A0h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jnz loc_410F8A  +
jmp loc_410FA0  +
mov ebx [ebx+2104h] +
test ebx ebx +
jz loc_410FA0  +
cmp [ebx+2100h] edx +
jnz loc_410F80  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
xor ebx ebx +
test ecx ecx +
mov [esp+18h+var_C] edx +
jz loc_410F92  +
mov [esp+18h+var_14] 2108h +
mov [esp+18h+var_18] esi +
call sub_404C60  +
test eax eax +
jz loc_410F92  +
mov ecx [esi+0A0h] +
mov ebx eax +
mov edx [esp+18h+var_C] +
mov ecx [ecx+0Ch] +
mov [eax+2100h] edx +
mov [eax+2104h] ecx +
mov edx [esi+0A0h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 1Ch +
mov [esp] ebx +
call sub_404C60  +
test eax eax +
jz loc_411015  +
mov [eax] ebx +
mov dword ptr [eax+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4071F0  +
mov edx 1 +
test eax eax +
jnz loc_411050  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_413440  +
***
push edi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 10h +
test edx edx +
mov edi [eax] +
jz loc_411225  +
mov [esp+14h+var_14] edx +
call strlen  +
cmp eax 0Fh +
jle loc_411210  +
lea edx [edi+1] +
mov eax 0Fh +
mov byte ptr [edi] 30h +
lea edi [eax+1] +
xor ecx ecx +
lea esi [esi+0] +
movzx eax byte ptr [ebx+ecx] +
mov [edx+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_4111F0  +
add ecx edx +
mov [esi] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_411225  +
movzx ecx ds:byte_478254[eax] +
lea edx [edi+1] +
sub eax 1 +
mov [edi] cl +
jmp loc_4111E8  +
lea edx [edi+1] +
xor eax eax +
mov byte ptr [edi] 31h +
mov ebx offset asc_477F7C +
jmp loc_4111E8  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_404B80  +
test eax eax +
jz loc_411287  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+arg_C] +
cmp eax 33h +
jz loc_411360  +
cmp eax 36h +
jnz loc_411351  +
lea edx [esp+4Ch+var_20] +
mov ecx ebx +
lea eax [esp+4Ch+arg_8] +
call sub_410D60  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_411356  +
mov eax [esp+4Ch+arg_8] +
movzx edx byte ptr [eax] +
mov ecx eax +
test dl dl +
jz loc_411351  +
lea edi [ebx-1] +
cmp eax edi +
jnb loc_411351  +
mov esi [esp+4Ch+var_20] +
jmp loc_4112F6  +
cmp eax edi +
jnb loc_411351  +
mov ecx eax +
movzx ecx byte ptr [ecx+1] +
movzx edx ds:byte_4924C0[edx] +
movzx ebx ds:byte_4924C0[ecx] +
shl edx 4 +
add ebx edx +
jz loc_411339  +
mov edx esi +
mov ecx 1 +
mov eax ebp +
and esi 1FFFh +
call sub_410F60  +
mov [eax+esi] bl +
shr esi 5 +
mov byte ptr [eax+esi+2000h] 1 +
mov eax [esp+4Ch+arg_8] +
mov esi [esp+4Ch+var_20] +
mov edx eax +
add esi 1 +
add eax 2 +
mov [esp+4Ch+arg_8] eax +
mov [esp+4Ch+var_20] esi +
movzx edx byte ptr [edx+2] +
test dl dl +
jnz loc_4112F0  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebx +
lea ecx [esp+4Ch+var_28] +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_410E00  +
test eax eax +
jnz loc_411382  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] ebp +
call sub_405CC0  +
test eax eax +
mov esi eax +
jz loc_4115C2  +
lea eax [esi+1Ch] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_38] eax +
mov edx [esp+4Ch+arg_8] +
cmp ebx edx +
jbe loc_411351  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_411351  +
sub ecx 30h +
cmp cl 8 +
ja loc_411378  +
mov eax 1 +
shl eax cl +
test eax 1DDh +
jnz loc_411440  +
test al 2 +
jz loc_411378  +
add edx 1 +
mov ecx ebx +
mov [esp+4Ch+arg_8] edx +
mov edx [esp+4Ch+var_38] +
lea eax [esp+4Ch+arg_8] +
call sub_410D60  +
test eax eax +
jz loc_411378  +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_410D60  +
test eax eax +
jz loc_411378  +
mov eax [esi+1Ch] +
mov edx [esp+4Ch+var_24] +
cmp eax edx +
jbe loc_411430  +
mov [esp+4Ch+var_24] eax +
mov dword ptr [esi+24h] 0 +
mov edx [esp+4Ch+arg_8] +
mov dword ptr [esi+14h] 103h +
cmp ebx edx +
ja loc_4113B3  +
jmp loc_411351  +
sub edx eax +
test edx edx +
mov [esi+24h] edx +
jns loc_41141B  +
xor eax eax +
jmp loc_41137A  +
mov [esp+4Ch+var_48] 1Ch +
mov [esp+4Ch+var_4C] ebp +
call sub_404B80  +
mov edi eax +
mov eax [esp+4Ch+arg_8] +
test edi edi +
movzx ecx byte ptr [eax] +
mov [esp+4Ch+var_31] cl +
jz loc_411378  +
add eax 1 +
mov [edi] ebp +
mov [esp+4Ch+arg_8] eax +
mov eax [ebp+0A0h] +
or dword ptr [ebp+28h] 200h +
add dword ptr [ebp+7Ch] 1 +
mov edx [eax+8] +
mov [edi+18h] edx +
lea edx [esp+4Ch+var_28] +
mov [eax+8] edi +
mov ecx edx +
mov [esp+4Ch+var_4C] ebx +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_410E00  +
test eax eax +
jz loc_411378  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
lea eax [edx+1] +
mov [esp+4Ch+var_48] eax +
call sub_404B80  +
test eax eax +
mov [edi+4] eax +
jz loc_411378  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
add edx 1 +
mov [esp+4Ch+var_44] edx +
lea edx [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] edx +
call memcpy  +
movzx ecx [esp+4Ch+var_31] +
xor eax eax +
mov [edi+10h] esi +
cmp cl 34h +
setle al  +
add eax 1 +
mov [edi+0Ch] eax +
mov eax ecx +
and eax 0FFFFFFFBh +
cmp al 32h +
jnz loc_411530  +
mov dword ptr [edi+10h] offset off_473270 +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_410D60  +
test eax eax +
jz loc_411378  +
mov eax [esp+4Ch+var_24] +
sub eax [esi+1Ch] +
mov [edi+8] eax +
jmp loc_4113AB  +
cmp al 33h +
jnz loc_411550  +
mov eax [esi+14h] +
test al 20h +
jz loc_411570  +
mov edx [esp+4Ch+var_30] +
test edx edx +
jz loc_411617  +
mov eax [esp+4Ch+var_30] +
mov [edi+10h] eax +
jmp loc_411505  +
cmp [esp+4Ch+var_31] 38h +
jz loc_41155E  +
cmp [esp+4Ch+var_31] 34h +
jnz loc_411505  +
mov eax [esi+14h] +
test al 10h +
jnz loc_411578  +
or eax 20h +
mov [esi+14h] eax +
jmp loc_411505  +
or eax 10h +
mov [esi+14h] eax +
jmp loc_411505  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_411547  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_405D00  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_411547  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 20h +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_4C] ebp +
call sub_4060A0  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_411547  +
xor eax eax +
jmp loc_41137A  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
add eax 1 +
mov [esp+4Ch+var_48] eax +
call sub_404B80  +
test eax eax +
mov esi eax +
jz loc_411378  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] esi +
add eax 1 +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] ebp +
call sub_406250  +
test eax eax +
mov esi eax +
jnz loc_41139C  +
xor eax eax +
jmp loc_41137A  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_405D00  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_411547  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 10h +
jmp loc_4115A3  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
or eax [esp+2Ch+arg_0] +
jnz loc_411728  +
mov eax [edx] +
mov ebx ecx +
mov edx 1 +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
xor eax eax +
sub [esp+2Ch+var_18] ecx +
test esi esi +
jnz loc_4116AA  +
jmp loc_411714  +
test eax eax +
jz loc_411720  +
movzx edx byte ptr [eax+ebp] +
mov [ebx] dl +
add ebx 1 +
sub [esp+2Ch+arg_8] 1 +
jz loc_411714  +
mov edx esi +
mov ecx [esp+2Ch+var_18] +
xor edi edi +
lea ebp [ebx+ecx] +
mov ecx [esp+2Ch+arg_C] +
mov esi ebp +
and ebp 1FFFh +
and esi 0FFFFE000h +
test ecx ecx +
jnz loc_4116D3  +
xor ecx ecx +
cmp byte ptr [ebx] 0 +
setnz cl  +
mov edi ecx +
cmp esi edx +
jnz loc_4116E0  +
test edi edi +
jz loc_4116ED  +
test eax eax +
jnz loc_4116ED  +
nop   +
mov eax [esp+2Ch+var_14] +
mov ecx edi +
mov edx esi +
call sub_410F60  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jnz loc_411690  +
test edi edi +
jz loc_41169E  +
movzx edx byte ptr [ebx] +
add ebx 1 +
mov [eax+ebp] dl +
shr ebp 5 +
sub [esp+2Ch+arg_8] 1 +
mov byte ptr [eax+ebp+2000h] 1 +
jnz loc_4116A8  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx] 0 +
jmp loc_41169E  +
mov [esp+2Ch+var_28] 27Ah +
mov [esp+2Ch+var_2C] offset a____Binutil_19 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_18] edx +
call sub_402930  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_18] +
jmp loc_411669  +
***
jmp loc_411760  +
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_4117A4  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_411650  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_4117F4  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_411650  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edx [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test eax eax +
jz loc_411860  +
cmp eax 2 +
jnz loc_411856  +
mov eax [ebx+10h] +
mov edi [eax] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call sub_413100  +
mov eax [ebx+4] +
mov [esp+28h] edi +
mov [esp+20h] esi +
mov dword ptr [esp+24h] offset a5sS_0 +
mov [esp+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fprintf  +
***
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+4] +
mov [esp+24h] esi +
mov [esp+20h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fputs  +
***
sub esp 0Ch +
mov ds:dword_49A2A0 1 +
call nullsub_2  +
xor eax eax +
mov ds:byte_49A2F0[eax] al +
add eax 1 +
cmp eax 0Ah +
jnz loc_411894  +
mov ds:byte_49A2F7[eax] al +
add eax 1 +
cmp eax 24h +
jnz loc_4118A2  +
mov ds:byte_49A2E4 24h +
mov al 28h +
mov ds:byte_49A2E5 25h +
mov ds:byte_49A2EE 26h +
mov ds:byte_49A31F 27h +
nop   +
mov ds:byte_49A2F9[eax] al +
add eax 1 +
cmp eax 42h +
jnz loc_4118D0  +
add esp 0Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax ds:dword_49A2A0 +
test eax eax +
jz loc_411B8F  +
mov eax [esp+0A0h] +
lea edi [esp+1Ch] +
mov eax [eax+0A0h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_4119D2  +
xor ebp ebp +
jmp loc_411936  +
add ebp 20h +
cmp ebp 2000h +
jz loc_4119C4  +
mov eax ebp +
sar eax 5 +
cmp byte ptr [esi+eax+2000h] 0 +
jz loc_411927  +
mov edx [esi+2100h] +
lea eax [esp+18h] +
mov [esp+18h] edi +
add edx ebp +
call sub_410EC0  +
mov edx [esp+18h] +
mov eax ebp +
lea ecx [esi+ebp+20h] +
add eax esi +
movzx ebx byte ptr [eax] +
add eax 1 +
and ebx 0Fh +
movzx ebx ds:byte_478254[ebx] +
mov [edx+1] bl +
movzx edx byte ptr [eax-1] +
shr dl 4 +
cmp eax ecx +
movzx edx dl +
movzx ebx ds:byte_478254[edx] +
mov edx [esp+18h] +
mov [edx] bl +
mov ebx [esp+18h] +
lea edx [ebx+2] +
mov [esp+18h] edx +
jnz loc_411966  +
mov eax [esp+0A0h] +
mov ecx edi +
add ebp 20h +
mov [esp] edx +
mov edx 36h +
call sub_411080  +
cmp ebp 2000h +
jnz loc_411936  +
mov esi [esi+2104h] +
test esi esi +
jnz loc_411923  +
mov eax [esp+0A0h] +
lea esi [esp+1Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_411A3D  +
mov [esp+18h] esi +
mov edx [ebx] +
lea eax [esp+18h] +
call sub_4111C0  +
mov eax [esp+18h] +
lea edx [eax+1] +
mov [esp+18h] edx +
mov byte ptr [eax] 31h +
mov edx [ebx+1Ch] +
lea eax [esp+18h] +
call sub_410EC0  +
mov edx [ebx+24h] +
lea eax [esp+18h] +
add edx [ebx+1Ch] +
call sub_410EC0  +
mov eax [esp+18h] +
mov ecx esi +
mov edx 33h +
mov [esp] eax +
mov eax [esp+0A0h] +
call sub_411080  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4119E4  +
mov eax [esp+0A0h] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_411AE2  +
mov eax [ebx] +
test eax eax +
jz loc_411AE2  +
lea edi [esp+1Ch] +
***
mov eax [esp+arg_14] +
mov edx [esi+4] +
mov eax [esp+arg_14] +
mov dword ptr [esp+0] 3 +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
lea edx [eax+1] +
mov [esp+arg_14] edx +
mov byte ptr [eax] 36h +
jmp sub_411A9D  +
***
call sub_411880  +
jmp loc_411907  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 11Ch +
mov [esp+120h+var_114] 0 +
mov [esp+120h+var_11C] 0 +
mov [esp+120h+var_118] 0 +
mov [esp+120h+var_120] eax +
call sub_4086D0  +
test eax eax +
jnz loc_411CC0  +
lea ebx [esp+120h+var_10F] +
jmp loc_411C08  +
***
test edx edx +
jnz loc_411CD0  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 1 +
mov [esp-9Ch+arg_98] ebx +
call sub_4084C0  +
xor edx edx +
cmp eax 1 +
setnz dl  +
cmp byte ptr [esp+11h] 25h +
mov eax edx +
jnz loc_411C00  +
test eax eax +
jnz loc_411CD0  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 5 +
mov [esp-9Ch+arg_98] ebx +
call sub_4084C0  +
cmp eax 5 +
jnz loc_411CC0  +
movzx eax byte ptr [esp+11h] +
movzx ebp byte ptr [esp+13h] +
movzx eax ds:byte_4924C0[eax] +
cmp al 63h +
jz loc_411CD0  +
movzx edx byte ptr [esp+12h] +
movzx edx ds:byte_4924C0[edx] +
cmp dl 63h +
jz loc_411CD0  +
shl eax 4 +
lea edi [edx+eax-5] +
cmp edi 0FEh +
ja loc_411CC0  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] edi +
mov [esp-9Ch+arg_98] ebx +
call sub_4084C0  +
cmp edi eax +
jnz loc_411CC0  +
mov eax ebp +
mov byte ptr [esp+edi+11h] 0 +
movsx ebp al +
add edi ebx +
mov [esp+0Ch] edi +
mov [esp-9Ch+arg_A0] ebx +
mov [esp-9Ch+arg_9C] ebp +
mov [esp-9Ch+arg_98] esi +
call sub_411290  +
test eax eax +
jnz loc_411C08  +
nop   +
add esp 11Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 11Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_49A2A0 +
mov ebx [esp+30h] +
test eax eax +
jz loc_411D90  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_411D82  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_4084C0  +
cmp eax 4 +
jnz loc_411D82  +
cmp byte ptr [esp+1Ch] 25h +
jnz loc_411D82  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_4924C0[eax] 63h +
jz loc_411D82  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_4924C0[eax] 63h +
jz loc_411D82  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_4924C0[eax] 63h +
jz loc_411D82  +
mov [esp] ebx +
call sub_411240  +
mov eax ebx +
call sub_411BC0  +
test eax eax +
jz loc_411D82  +
mov eax [ebx+4] +
add esp 28h +
pop ebx  +
retn   +
***
add esp 28h +
xor eax eax +
pop ebx  +
retn   +
***
call sub_411880  +
jmp loc_411CF5  +
***
xor eax eax +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] ebx +
call sub_404B80  +
test eax eax +
jz loc_411DF0  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4071F0  +
mov edx 1 +
test eax eax +
jnz loc_411E30  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 5Ch +
mov [esp+5Ch+var_40] eax +
mov eax edx +
mov esi [esp+5Ch+arg_0] +
shr eax 4 +
mov ebp [esp+5Ch+arg_4] +
and eax 0Fh +
movzx eax ds:byte_4784F4[eax] +
shr ebx 8 +
mov [esp+5Ch+var_39] 3Ah +
mov [esp+24h] al +
mov eax edx +
and eax 0Fh +
movzx eax ds:byte_4784F4[eax] +
mov [esp+25h] al +
movzx eax bl +
shr eax 4 +
movzx eax ds:byte_4784F4[eax] +
mov [esp+5Ch+var_36] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_4784F4[eax] +
mov [esp+5Ch+var_35] al +
movzx eax cl +
shr eax 4 +
movzx eax ds:byte_4784F4[eax] +
mov [esp+5Ch+var_34] al +
mov eax ecx +
add ecx esi +
and eax 0Fh +
add ecx edx +
movzx eax ds:byte_4784F4[eax] +
add ebx ecx +
mov [esp+5Ch+var_33] al +
mov eax esi +
shr eax 4 +
and eax 0Fh +
movzx eax ds:byte_4784F4[eax] +
mov [esp+5Ch+var_32] al +
mov eax esi +
and eax 0Fh +
test edx edx +
movzx eax ds:byte_4784F4[eax] +
mov [esp+5Ch+var_31] al +
jz loc_411F89  +
xor eax eax +
lea esi [esp+5Ch+var_39] +
mov [esp+5Ch+var_44] edx +
lea esi [esi+0] +
movzx ecx byte ptr [ebp+eax+0] +
mov edx ecx +
add ebx ecx +
shr dl 4 +
movzx edi dl +
movzx edx ds:byte_4784F4[edi] +
mov edi ecx +
and edi 0Fh +
mov [esi+eax*2+9] dl +
movzx edx ds:byte_4784F4[edi] +
mov [esi+eax*2+0Ah] dl +
add eax 1 +
cmp eax [esp+5Ch+var_44] +
jnz loc_411F00  +
mov edx [esp+5Ch+var_44] +
lea ecx [esp+edx*2+5Ch+var_30] +
neg ebx  +
movzx eax bl +
and ebx 0Fh +
shr eax 4 +
movzx eax ds:byte_4784F4[eax] +
mov byte ptr [ecx+2] 0Dh +
mov byte ptr [ecx+3] 0Ah +
mov [ecx] al +
movzx eax ds:byte_4784F4[ebx] +
lea ebx [edx+edx+0Dh] +
mov [ecx+1] al +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_54] eax +
call sub_408570  +
cmp ebx eax +
setz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+5Ch+var_30] +
lea esi [esp+5Ch+var_39] +
jmp loc_411F3B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_412182  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov eax [esp+1Ch] +
mov esi [eax+0Ch] +
mov ebp [eax+8] +
mov edi [eax+4] +
test esi esi +
jz loc_412170  +
mov eax [esp+14h] +
mov edx [esp+18h] +
add eax edx +
mov [esp+10h] eax +
jmp loc_41208E  +
mov edx [esp+14h] +
test edx edx +
jnz loc_412116  +
mov eax ebp +
xor ecx ecx +
and eax 0F0000h +
mov edx 2 +
mov [esp+18h] eax +
shr eax 0Ch +
mov [esp+2Ah] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Bh] 0 +
call sub_411E40  +
test eax eax +
jz loc_412161  +
mov eax [esp+14h] +
add eax [esp+18h] +
mov [esp+10h] eax +
mov ecx ebp +
sub ecx [esp+10h] +
lea eax [ecx+ebx] +
cmp eax 0FFFFh +
jbe loc_412064  +
mov ebx 10000h +
sub ebx ecx +
mov eax [esp+60h] +
mov edx ebx +
mov [esp+4] edi +
mov dword ptr [esp] 0 +
call sub_411E40  +
test eax eax +
jz loc_412161  +
add ebp ebx +
add edi ebx +
sub esi ebx +
jz loc_412170  +
mov eax [esp+10h] +
cmp esi 10h +
mov ebx 10h +
cmovbe ebx esi +
add eax 0FFFFh +
cmp eax ebp +
jnb loc_41204D  +
cmp ebp 0FFFFFh +
jbe loc_411FF7  +
mov eax [esp+18h] +
test eax eax +
jnz loc_412130  +
mov eax ebp +
xor ax ax +
mov [esp+14h] eax +
add eax 0FFFFh +
cmp eax ebp +
jb loc_412205  +
mov edx [esp+14h] +
xor ecx ecx +
mov dword ptr [esp] 4 +
mov eax edx +
shr eax 18h +
mov [esp+2Ah] al +
mov eax edx +
mov edx 2 +
shr eax 10h +
mov [esp+2Bh] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
call sub_411E40  +
test eax eax +
jz loc_412161  +
mov dword ptr [esp+18h] 0 +
jmp loc_412041  +
***
mov dword ptr [esp+4] 319h +
mov dword ptr [esp] offset a____Binutil_20 +
call sub_402930  +
jmp loc_412003  +
***
lea eax [esp+2Ah] +
xor ecx ecx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov edx 2 +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Ah] 0 +
mov byte ptr [esp+2Bh] 0 +
call sub_411E40  +
test eax eax +
jnz loc_4120BA  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_411FCF  +
mov eax [esp+60h] +
mov eax [eax+74h] +
test eax eax +
jz loc_4121DC  +
cmp eax 0FFFFFh +
mov edx eax +
ja loc_412249  +
and edx 0F0000h +
shr edx 0Ch +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov byte ptr [esp+2Dh] 0 +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 3 +
mov eax [esp+60h] +
xor ecx ecx +
mov edx 4 +
call sub_411E40  +
test eax eax +
jz loc_412161  +
mov eax [esp+60h] +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 1 +
call sub_411E40  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_412163  +
***
lea ebx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset a08lx_1 +
mov [esp] ebx +
call sprintf  +
mov eax [esp+60h] +
mov eax [eax] +
mov [esp+8] ebx +
mov dword ptr [esp] offset aSAddress0xSOut +
mov [esp+4] eax +
call off_4730E4  +
mov dword ptr [esp] 11h +
call sub_4029E0  +
jmp loc_412161  +
***
shr edx 18h +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 10h +
mov [esp+2Dh] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 5 +
jmp loc_4121C8  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 1Ch +
mov ebx [esp+44h] +
mov edi [esp+3Ch] +
test ebx ebx +
jz loc_4122A7  +
mov eax [esp+34h] +
mov edx [eax+14h] +
and edx 3 +
cmp edx 3 +
jz loc_4122B1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_404B80  +
test eax eax +
mov ebp eax +
jz loc_412371  +
mov eax [esp+30h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_404B80  +
test eax eax +
mov edx eax +
jz loc_412371  +
mov eax [esp+38h] +
mov [esp] edx +
mov [esp+8] ebx +
mov [esp+0Ch] edx +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov edx [esp+0Ch] +
add edi [eax+20h] +
mov eax [esp+30h] +
mov [ebp+4] edx +
mov [ebp+8] edi +
mov [ebp+0Ch] ebx +
mov ecx [eax+0A0h] +
mov eax [ecx+4] +
test eax eax +
jz loc_41232B  +
cmp edi [eax+8] +
jnb loc_412360  +
mov edx [ecx] +
mov eax ecx +
test edx edx +
jnz loc_41233D  +
jmp loc_412342  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_412342  +
cmp edi [edx+8] +
ja loc_412335  +
mov [ebp+0] edx +
mov esi 1 +
mov [eax] ebp +
mov eax [ebp+0] +
test eax eax +
jnz loc_4122A7  +
mov [ecx+4] ebp +
jmp loc_4122A7  +
***
mov [eax] ebp +
mov dword ptr [ebp+0] 0 +
mov [ecx+4] ebp +
jmp loc_4122A7  +
***
xor esi esi +
jmp loc_4122A7  +
***
sub esp 34h +
cmp ecx 0FFFFFFFFh +
jz loc_4123D1  +
mov ebx eax +
movzx eax cl +
test ds:byte_4922A0[eax+eax] 10h +
jz loc_4123E7  +
mov byte ptr [esp+34h+var_E] cl +
lea esi [esp+34h+var_E] +
mov byte ptr [esp+34h+var_E+1] 0 +
mov [esp+34h+var_28] esi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset aBDUnexpected_0 +
call off_4730E4  +
mov [esp+34h+var_34] 11h +
call sub_4029E0  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+34h+arg_0] +
test eax eax +
jnz loc_4123CB  +
mov [esp+34h+var_34] 12h +
call sub_4029E0  +
jmp loc_4123CB  +
lea esi [esp+34h+var_E] +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] offset a03o_0 +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_18] edx +
call sprintf  +
mov edx [esp+34h+var_18] +
jmp loc_4123A6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx ds:dword_49A3C0 +
mov ebp [esp+0A0h] +
test ebx ebx +
jz loc_412554  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_4086D0  +
test eax eax +
jnz loc_41247E  +
lea edi [esp+63h] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 9 +
mov [esp] edi +
call sub_4084C0  +
cmp eax 9 +
jz loc_412490  +
call sub_402790  +
cmp eax 12h +
jz loc_412543  +
xor eax eax +
***
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+63h] 3Ah +
jnz loc_412543  +
lea eax [esp+64h] +
lea ebx [esp+6Ch] +
movzx edx byte ptr [eax] +
cmp ds:byte_4924C0[edx] 63h +
jz loc_412543  +
add eax 1 +
cmp eax ebx +
jnz loc_4124A3  +
movzx eax byte ptr [esp+6Ah] +
movzx edx byte ptr [esp+6Bh] +
movzx eax ds:byte_4924C0[eax] +
movzx edx ds:byte_4924C0[edx] +
shl eax 4 +
add eax edx +
cmp eax 5 +
ja loc_412543  +
mov eax [ebp+0A0h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
call sub_411DB0  +
test eax eax +
jz loc_412516  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_4086D0  +
test eax eax +
jz loc_412568  +
***
mov eax [ebp+0A0h] +
cmp eax [esp+arg_18] +
jz loc_412532  +
test eax eax +
jz loc_412532  +
mov [esp+arg_0] eax +
mov [esp+0] ebp +
call sub_404DD0  +
mov eax [esp+arg_18] +
mov [ebp+0A0h] eax +
xor eax eax +
jmp loc_412480  +
***
mov dword ptr [esp] 3 +
call sub_4029E0  +
jmp loc_41247E  +
***
mov ds:dword_49A3C0 1 +
call nullsub_2  +
jmp loc_41242F  +
***
mov dword ptr [ebp+74h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+20h] 1 +
mov dword ptr [esp+3Ch] 0 +
mov dword ptr [esp+48h] 0 +
mov dword ptr [esp+4Ch] 0 +
***
mov [esp+arg_4] ebp +
mov [esp+arg_0] 1 +
mov [esp+0] ebx +
call sub_4084C0  +
cmp eax 1 +
jz loc_4125E0  +
call sub_402790  +
cmp eax 12h +
jz loc_412B60  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_412516  +
mov [esp+0] eax +
call free  +
jmp loc_412516  +
***
movzx ecx [esp+arg_68] +
cmp ecx 0Dh +
jz loc_41259F  +
cmp ecx 0Ah +
jz loc_412B55  +
cmp ecx 3Ah +
jnz loc_4127F8  +
mov [esp+0] ebp +
call sub_4085F0  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 8 +
mov [esp+arg_3C] eax +
lea eax [esp+arg_57] +
mov [esp+0] eax +
mov [esp+arg_40] edx +
call sub_4084C0  +
cmp eax 8 +
jnz loc_4125C6  +
lea eax [esp+arg_57] +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
cmp ds:byte_4924C0[ecx] 63h +
jz loc_4127F8  +
add eax 1 +
cmp eax edi +
jnz loc_412630  +
movzx eax byte ptr [esp+arg_57] +
movzx edx byte ptr [esp+arg_57+1] +
movzx eax ds:byte_4924C0[eax] +
movzx edx ds:byte_4924C0[edx] +
shl eax 4 +
add eax edx +
mov esi eax +
mov [esp+arg_24] eax +
movzx eax byte ptr [esp+arg_57+2] +
lea esi [esi+esi+2] +
cmp esi [esp+arg_20] +
movzx eax ds:byte_4924C0[eax] +
mov byte ptr [esp+arg_28] al +
movzx eax byte ptr [esp+arg_57+3] +
movzx eax ds:byte_4924C0[eax] +
mov byte ptr [esp+arg_2C] al +
movzx eax [esp+arg_5B] +
movzx eax ds:byte_4924C0[eax] +
mov byte ptr [esp+arg_30] al +
movzx eax [esp+arg_5C] +
movzx eax ds:byte_4924C0[eax] +
mov [esp+arg_35] al +
movzx eax [esp+arg_5D] +
movzx eax ds:byte_4924C0[eax] +
mov [esp+arg_36] al +
movzx eax [esp+arg_5E] +
movzx eax ds:byte_4924C0[eax] +
mov [esp+arg_37] al +
jnb loc_412810  +
mov eax [esp+arg_14] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] esi +
mov [esp+0] eax +
call sub_4084C0  +
cmp esi eax +
jnz loc_4125C6  +
mov edx [esp+arg_14] +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
cmp ds:byte_4924C0[ecx] 63h +
jz loc_4127F8  +
add eax 1 +
cmp esi eax +
ja loc_412700  +
movzx edx byte ptr [esp+arg_30] +
movzx eax [esp+arg_35] +
shl edx 4 +
lea ecx [edx+eax] +
movzx eax byte ptr [esp+arg_28] +
movzx edx byte ptr [esp+arg_2C] +
shl eax 4 +
add eax edx +
movzx edx [esp+arg_37] +
shl eax 8 +
add eax ecx +
mov [esp+arg_28] eax +
movzx eax [esp+arg_36] +
shl eax 4 +
lea ecx [eax+edx] +
mov edx [esp+arg_24] +
mov eax [esp+arg_28] +
mov [esp+arg_2C] ecx +
add ecx edx +
add ecx eax +
shr eax 8 +
add ecx eax +
test edx edx +
jz loc_412BA7  +
mov edx [esp+arg_14] +
sub esi 2 +
mov [esp+arg_30] esi +
mov [esp+arg_9C] ebp +
add esi edx +
mov eax edx +
mov ebp esi +
movzx edx byte ptr [eax] +
add eax 2 +
movzx esi byte ptr [eax-1] +
movzx edx ds:byte_4924C0[edx] +
movzx esi ds:byte_4924C0[esi] +
shl edx 4 +
add edx esi +
add ecx edx +
cmp eax ebp +
jnz loc_412785  +
mov edx [esp+arg_30] +
mov ebp [esp+arg_9C] +
mov eax edx +
add eax 1 +
mov esi [esp+arg_14] +
neg ecx  +
movzx ecx cl +
movzx edx byte ptr [esi+edx] +
movzx eax byte ptr [esi+eax] +
movzx edx ds:byte_4924C0[edx] +
movzx eax ds:byte_4924C0[eax] +
shl edx 4 +
add eax edx +
cmp ecx eax +
jnz loc_412C14  +
mov eax [esp+arg_2C] +
cmp eax 5 +
ja loc_412B75  +
jmp ds:off_478488[eax*4]  +
mov edx [esp+arg_1C] +
mov eax ebp +
mov dword ptr [esp+0] 0 +
call sub_412380  +
jmp loc_4125C6  +
***
cmp [esp+arg_24] 2 +
cmp [esp+arg_24] 4 +
cmp [esp+arg_24] 2 +
mov edx [ebp+74h] +
cmp [esp+arg_24] 4 +
mov eax [esp+arg_38] +
test eax eax +
jz loc_412A82  +
mov ecx [eax+24h] +
mov edx [eax+1Ch] +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
add edx ecx +
cmp edx eax +
jz loc_412C04  +
mov ecx [esp+arg_24] +
test ecx ecx +
jz loc_41259F  +
mov eax [ebp+6Ch] +
mov [esp+arg_0] offset a_secD_0 +
mov [esp+0] ebx +
add eax 1 +
mov [esp+arg_4] eax +
call sprintf  +
mov edx ebx +
mov eax [edx] +
add edx 4 +
lea ecx [eax-1010101h] +
not eax  +
and ecx eax +
and ecx 80808080h +
jz loc_412AAA  +
mov eax ecx +
shr eax 10h +
test ecx 8080h +
cmovz ecx eax +
lea eax [edx+2] +
cmovz edx eax +
add cl cl +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+arg_0] edx +
mov [esp+0] ebp +
call sub_404B80  +
test eax eax +
mov esi eax +
jz loc_4125C6  +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call strcpy  +
mov [esp+arg_0] esi +
mov [esp+arg_4] 103h +
mov [esp+0] ebp +
call sub_406180  +
test eax eax +
mov esi eax +
mov [esp+arg_38] eax +
jz loc_4125C6  +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
mov edx [esp+arg_40] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov eax [esp+arg_24] +
mov [esi+24h] eax +
mov eax [esp+arg_3C] +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
mov [esi+50h] eax +
mov [esi+54h] edx +
jmp loc_41259F  +
add [esp+arg_1C] 1 +
jmp loc_41259F  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_4129B2  +
mov eax [esp+arg_14] +
jmp loc_4129AA  +
mov eax [esp+arg_2C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUUnrecognized +
mov [esp+arg_8] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_4] eax +
call off_4730E4  +
mov dword ptr [esp+0] 11h +
call sub_4029E0  +
jmp loc_4125C6  +
mov eax 1 +
xor edx edx +
jmp loc_4127B8  +
mov esi [esp+arg_14] +
mov [esp+arg_38] 0 +
movzx eax byte ptr [esi+2] +
movzx edx byte ptr [esi+3] +
movzx eax ds:byte_4924C0[eax] +
movzx ecx ds:byte_4924C0[edx] +
shl eax 4 +
add ecx eax +
movzx eax byte ptr [esi] +
movzx edx ds:byte_4924C0[eax] +
movzx eax byte ptr [esi+1] +
shl edx 4 +
movzx eax ds:byte_4924C0[eax] +
add eax edx +
shl eax 8 +
add eax ecx +
shl eax 10h +
add [ebp+74h] eax +
jmp loc_41259F  +
mov eax [esp+arg_38] +
add ecx [esp+arg_24] +
mov [eax+24h] ecx +
jmp loc_41259F  +
***
mov [esp+arg_C] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_8] ecx +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadChecksumI +
mov [esp+arg_4] eax +
call off_4730E4  +
mov dword ptr [esp+0] 11h +
call sub_4029E0  +
jmp loc_4125C6  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedA +
mov [esp+arg_4] eax +
call off_4730E4  +
mov dword ptr [esp+0] 11h +
call sub_4029E0  +
jmp loc_4125C6  +
***
cmp [esp+arg_24] 2 +
jz loc_4129C5  +
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedL +
mov [esp+arg_4] eax +
call off_4730E4  +
mov dword ptr [esp+0] 11h +
call sub_4029E0  +
jmp loc_4125C6  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtende_0 +
mov [esp+arg_4] eax +
call off_4730E4  +
mov dword ptr [esp+0] 11h +
call sub_4029E0  +
jmp loc_4125C6  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedS +
mov [esp+arg_4] eax +
call off_4730E4  +
mov dword ptr [esp+0] 11h +
call sub_4029E0  +
jmp loc_4125C6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov esi [esp+5Ch] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_412D40  +
add esi eax +
mov eax [esp+64h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp] eax +
call memcpy  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov eax [eax+24h] +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_404B80  +
mov ecx [esp+54h] +
mov ebx eax +
mov [esp+14h] eax +
mov [ecx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_412D38  +
mov eax [ecx+50h] +
mov edx [ecx+54h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_4086D0  +
test eax eax +
jnz loc_412F3B  +
mov ebx [esp+14h] +
xor edi edi +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+50h] +
mov dword ptr [esp+4] 1 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_4084C0  +
cmp eax 1 +
jz loc_412DF7  +
call sub_402790  +
mov eax [esp+54h] +
sub ebx [esp+14h] +
cmp ebx [eax+24h] +
jb loc_412F68  +
test edi edi +
jz loc_412DE8  +
mov [esp] edi +
call free  +
mov eax [esp+54h] +
mov eax [eax+8Ch] +
jmp loc_412D19  +
***
movzx eax byte ptr [esp+28h] +
cmp eax 0Ah +
jz loc_412DA5  +
cmp eax 0Dh +
jz loc_412DA5  +
cmp eax 3Ah +
jz loc_412E1F  +
mov dword ptr [esp+4] 236h +
mov dword ptr [esp] offset a____Binutil_20 +
call sub_402930  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_4084C0  +
cmp eax 8 +
jnz loc_412F2F  +
movzx eax byte ptr [esp+28h] +
movzx edx byte ptr [esp+29h] +
movzx eax ds:byte_4924C0[eax] +
movzx ebp ds:byte_4924C0[edx] +
movzx edx byte ptr [esp+2Fh] +
shl eax 4 +
add ebp eax +
movzx eax byte ptr [esp+2Eh] +
movzx edx ds:byte_4924C0[edx] +
movzx eax ds:byte_4924C0[eax] +
shl eax 4 +
add eax edx +
jnz loc_412F45  +
lea edx [ebp+ebp+0] +
cmp edx [esp+1Ch] +
jbe loc_412EB0  +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+18h] edx +
call sub_4074F0  +
test eax eax +
mov edi eax +
jz loc_412F3B  +
mov edx [esp+18h] +
mov [esp+1Ch] edx +
mov eax [esp+50h] +
mov [esp+4] edx +
mov [esp] edi +
mov [esp+18h] edx +
mov [esp+8] eax +
call sub_4084C0  +
mov edx [esp+18h] +
cmp edx eax +
jnz loc_412F2F  +
test ebp ebp +
jz loc_412EFB  +
xor edx edx +
movzx eax byte ptr [edi+edx*2] +
movzx ecx byte ptr [edi+edx*2+1] +
movzx eax ds:byte_4924C0[eax] +
shl eax 4 +
add al ds:byte_4924C0[ecx] +
mov [ebx+edx] al +
add edx 1 +
cmp edx ebp +
jnz loc_412ED6  +
add ebx edx +
mov ecx [esp+54h] +
mov eax ebx +
sub eax [esp+14h] +
cmp eax [ecx+24h] +
jnb loc_412DDC  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 2 +
mov [esp] edi +
mov [esp+8] eax +
call sub_4084C0  +
cmp eax 2 +
jz loc_412DA5  +
test edi edi +
jz loc_412F3B  +
mov [esp] edi +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBInternalError +
mov [esp+4] eax +
call off_4730E4  +
mov dword ptr [esp] 11h +
call sub_4029E0  +
jmp loc_412F2F  +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBBadSectionLen +
mov [esp+4] eax +
call off_4730E4  +
mov dword ptr [esp] 11h +
call sub_4029E0  +
jmp loc_412F2F  +
***
push ebx  +
mov ebx [esp+0Ch] +
mov eax [esp+8] +
mov ecx [ebx+0Ch] +
cmp [eax+0Ch] ecx +
jnz loc_412FF0  +
mov edx [eax+10h] +
mov ecx [ebx+10h] +
cmp edx ecx +
jz loc_412FD2  +
cmp edx 6 +
jz loc_412FF0  +
cmp ecx 6 +
jz loc_412FF0  +
cmp edx 5 +
ja loc_412FD4  +
cmp ecx 5 +
ja loc_412FF4  +
cmp edx 3 +
jz loc_413042  +
cmp edx 4 +
jz loc_413050  +
cmp edx ecx +
nop   +
jbe loc_413007  +
pop ebx  +
retn   +
***
cmp edx 19h +
jz loc_413002  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_413010  +
cmp ecx 1Fh +
jz loc_412FD2  +
cmp ecx 23h +
jz loc_412FD2  +
lea esi [esi+0] +
xor eax eax +
pop ebx  +
retn   +
***
cmp edx 2 +
jnz loc_412FD9  +
cmp ecx 19h +
jz loc_412FD2  +
xor eax eax +
jmp loc_412FF2  +
***
cmp ecx 2 +
jnz loc_412FF0  +
mov eax ebx +
pop ebx  +
retn   +
***
cmp edx 1Fh +
jnz loc_41301E  +
cmp ecx 3 +
jz loc_413007  +
xor eax eax +
jmp loc_412FF2  +
***
cmp edx 23h +
jz loc_413015  +
cmp edx 5 +
jnz loc_413032  +
cmp ecx 33h +
jz loc_412FD2  +
xor eax eax +
nop   +
jmp loc_412FF2  +
***
cmp edx 33h +
jnz loc_412FF0  +
cmp ecx 5 +
jnz loc_412FF0  +
mov eax ebx +
nop   +
jmp loc_413009  +
***
cmp ecx 4 +
jnz loc_412FCD  +
xor eax eax +
jmp loc_412FF2  +
***
cmp ecx 3 +
jnz loc_412FCD  +
xor eax eax +
jmp loc_412FF2  +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
test dword ptr [eax+0Ch] 4182h +
jnz loc_4130A7  +
mov eax [eax+4] +
test eax eax +
jz loc_4130A7  +
mov ecx [edx+4] +
mov ecx [ecx+11Ch] +
mov [esp+arg_4] eax +
jmp ecx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 1 +
jnz loc_4130E1  +
and edx 8 +
jnz loc_4130E1  +
mov edx [esp+1Ch+arg_4] +
mov [eax+78h] edx +
mov edx [esp+1Ch+arg_8] +
mov [eax+7Ch] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
mov edx [eax+10h] +
mov ebx [eax+0Ch] +
test edx edx +
jz loc_413250  +
mov edx [edx+1Ch] +
add edx [eax+8] +
mov [esp+3Ch+var_34] edx +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_403310  +
test bl 8 +
mov [esp+3Ch+var_10] 46h +
jnz loc_413155  +
test bh 40h +
mov [esp+3Ch+var_10] 66h +
jz loc_413230  +
test bl 4 +
mov ebp 64h +
jnz loc_413171  +
mov eax ebx +
and eax 8000h +
cmp eax 1 +
sbb ebp ebp +
and ebp 0FFFFFFDCh +
add ebp 44h +
test bh 20h +
mov edi 49h +
jnz loc_41318D  +
mov eax ebx +
and eax 400000h +
cmp eax 1 +
sbb edi edi +
and edi 0FFFFFFB7h +
add edi 69h +
mov eax ebx +
and eax 1000h +
cmp eax 1 +
mov eax ebx +
sbb ecx ecx +
and eax 800h +
and ecx 0FFFFFFC9h +
add ecx 57h +
cmp eax 1 +
sbb edx edx +
mov eax ebx +
and edx 0FFFFFFDDh +
and eax 80h +
add edx 43h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFA9h +
add eax 77h +
test bl 1 +
jz loc_413212  +
and ebx 2 +
cmp ebx 1 +
sbb esi esi +
and esi 4Bh +
add esi 21h +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_20] ebp +
mov [esp+3Ch+var_24] edi +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aCCCCCCC +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 2 +
mov esi 67h +
jnz loc_4131D6  +
and ebx 800000h +
cmp ebx 1 +
sbb esi esi +
and esi 0FFFFFFABh +
add esi 75h +
jmp loc_4131D6  +
mov eax ebx +
and eax 10000h +
cmp eax 1 +
sbb eax eax +
mov [esp+3Ch+var_10] eax +
and [esp+3Ch+var_10] 0FFFFFFD1h +
add [esp+3Ch+var_10] 4Fh +
jmp loc_413155  +
mov eax [eax+8] +
mov [esp+3Ch+var_34] eax +
jmp loc_413123  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_404C60  +
test eax eax +
jz loc_41327E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov ebx [edx+10h] +
test ebx ebx +
jz loc_4132CE  +
test byte ptr [ebx+15h] 10h +
mov eax 43h +
jz loc_4132B5  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx offset off_4731C8 +
jz loc_413370  +
cmp ebx offset off_473318 +
mov eax 49h +
jz loc_4132AD  +
mov esi [edx+0Ch] +
mov eax 69h +
test esi 400000h +
jnz loc_4132AD  +
test esi 80h +
jnz loc_413390  +
test esi 800000h +
mov eax 75h +
jnz loc_4132AD  +
test esi 3 +
mov al 3Fh +
jz loc_4132AD  +
cmp ebx offset off_473270 +
jz loc_4133A0  +
test ebx ebx +
jz loc_4132AD  +
mov eax [ebx] +
mov edi offset off_478CC0 +
mov ebp offset a_bss +
mov [esp+1Ch+var_10] eax +
mov eax 4 +
jmp loc_413339  +
add edi 8 +
mov ebp [edi] +
test ebp ebp +
jz loc_4133A7  +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call strncmp  +
test eax eax +
jnz loc_413328  +
movzx eax byte ptr [edi+4] +
cmp al 3Fh +
jz loc_4133A7  +
and esi 2 +
jz loc_413368  +
movzx eax al +
movzx eax ds:byte_4920A0[eax] +
movsx eax al +
jmp loc_4132AD  +
mov edx [edx+0Ch] +
mov al 55h +
test dl 80h +
jz loc_4132AD  +
mov eax edx +
shl eax 0Fh +
sar eax 1Fh +
add eax 77h +
jmp loc_4132AD  +
mov eax esi +
shl eax 0Fh +
sar eax 1Fh +
add eax 57h +
jmp loc_4132AD  +
mov eax 61h +
jmp loc_413359  +
mov edx [ebx+14h] +
mov eax 74h +
test dl 10h +
jnz loc_413359  +
test dl 20h +
jz loc_4133D6  +
test dl 8 +
mov eax 72h +
jnz loc_413359  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 67h +
jmp loc_413359  +
test dh 1 +
jnz loc_4133F1  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFEFh +
add eax 73h +
jmp loc_413359  +
test dh 20h +
mov eax 4Eh +
jnz loc_413359  +
and edx 108h +
mov eax 6Eh +
cmp edx 108h +
mov edx 3Fh +
cmovnz eax edx +
jmp loc_413359  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov [esp] esi +
call sub_413290  +
cmp al 55h +
mov [ebx+4] al +
jz loc_413480  +
sub eax 76h +
cmp al 1 +
jbe loc_413480  +
mov eax [esi+10h] +
mov eax [eax+1Ch] +
add eax [esi+8] +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+4] +
mov dword ptr [ebx] 0 +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+24h] +
mov ebx [esp+20h] +
test esi esi +
mov eax [ebx+4] +
jz loc_4134D4  +
mov eax [eax+198h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
js loc_4134E5  +
mov eax 0 +
jnz loc_413500  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+104h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
jns loc_4134C6  +
mov dword ptr [esp] 7 +
call sub_4029E0  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] edx +
call sub_407460  +
test eax eax +
mov edi eax +
jz loc_4134E5  +
test esi esi +
mov eax [ebx+4] +
jnz loc_413540  +
mov eax [eax+108h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_413553  +
mov edx [esp+28h] +
mov [edx] edi +
mov edx [esp+2Ch] +
mov dword ptr [edx] 4 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+19Ch] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jns loc_413528  +
mov dword ptr [esp] 7 +
call sub_4029E0  +
mov [esp] edi +
call free  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov edi [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax] +
mov [edi] eax +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_20] +
mov eax [eax] +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_413972  +
mov esi [eax] +
test esi esi +
jz loc_413828  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+4] +
test eax eax +
jz loc_413828  +
mov edi [eax+28h] +
test edi edi +
mov [esp+4Ch+var_20] edi +
jz loc_413835  +
mov eax [esp+4Ch+arg_8] +
mov edx [esp+4Ch+arg_C] +
add edx [eax+1Ch] +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_2C] edx +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_41361D  +
cmp edx [eax+1Ch] +
jnb loc_413690  +
mov eax [esp+4Ch+var_30] +
xor ecx ecx +
mov ebp [esp+4Ch+var_2C] +
mov eax [eax+14h] +
mov [esp+4Ch+var_34] eax +
lea edx [eax-1] +
jmp loc_413647  +
lea eax [eax+eax*2+3] +
cmp ebp [esi+eax*8] +
jb loc_413960  +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
cmp ecx edx +
jz loc_413828  +
mov edi [esp+4Ch+var_30] +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
mov esi [edi+10h] +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
lea ebx [eax+eax*2] +
lea ebx [esi+ebx*8] +
cmp ebp [ebx] +
jnb loc_413633  +
cmp ecx eax +
mov edx eax +
jz loc_413828  +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
jmp loc_413666  +
cmp edx [ebx+18h] +
jnb loc_41361D  +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+20h] +
mov eax [eax+24h] +
mov [esp+4Ch+var_28] eax +
mov eax [ebx+0Ch] +
cmp ebp [ebx+1Ch] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+8] +
mov [esp+4Ch+var_1C] eax +
jnb loc_413718  +
mov edi [esp+4Ch+arg_0] +
xor esi esi +
mov [esp+4Ch+var_34] esi +
mov esi ebx +
mov [esp+4Ch+var_24] 0 +
lea esi [esi+0] +
movzx eax byte ptr [ebp+4] +
cmp al 46h +
jz loc_41384D  +
jbe loc_413841  +
cmp al 64h +
jz loc_413893  +
cmp al 84h +
lea esi [esi+0] +
jnz loc_4138B6  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
cmp [esp+4Ch+var_2C] eax +
jnb loc_4138D0  +
add ebp 0Ch +
cmp [esi+1Ch] ebp +
ja loc_4136D0  +
mov ebx esi +
mov eax [esp+4Ch+arg_10] +
mov dword ptr [eax] 1 +
mov eax [esp+4Ch+var_28] +
test eax eax +
jz loc_413940  +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_413940  +
cmp al 2Fh +
jz loc_413940  +
test al al +
jz loc_413753  +
mov eax [esp+4Ch+var_28] +
cmp byte ptr [eax+1] 3Ah +
jz loc_413940  +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_413940  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov edi eax +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_413794  +
mov esi [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] esi +
call sub_45FC80  +
test eax eax +
jz loc_413BFA  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
lea esi [eax+1] +
lea eax [esi+edi] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
mov edx [esp+4Ch+var_30] +
test eax eax +
mov [edx+28h] eax +
jz loc_413BF0  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call memcpy  +
mov eax [esp+4Ch+var_30] +
add edi [eax+28h] +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] edi +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+arg_14] +
mov eax [eax+28h] +
mov [edi] eax +
mov esi [ebx+14h] +
test esi esi +
jz loc_413828  +
mov [esp+4Ch+var_48] 3Ah +
mov [esp+4Ch+var_4C] esi +
call strchr  +
test eax eax +
jz loc_413822  +
mov byte ptr [eax] 0 +
mov esi [ebx+14h] +
mov eax [esp+4Ch+arg_18] +
mov [eax] esi +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+24h] +
mov [esp+4Ch+var_20] eax +
jmp loc_4135FE  +
cmp al 24h +
jz loc_413893  +
cmp al 44h +
jnz loc_41370E  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_4138C5  +
mov ebx [esi] +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
add ebx eax +
cmp ebx [esp+4Ch+var_2C] +
jbe loc_413913  +
mov edx [esp+4Ch+var_34] +
test edx edx +
jz loc_413913  +
cmp [esp+4Ch+var_2C] ebx +
jb loc_413716  +
mov [esp+4Ch+var_34] 1 +
jmp loc_41370E  +
mov eax [esp+4Ch+var_34] +
or eax [esp+4Ch+var_24] +
jnz loc_413716  +
mov [esp+4Ch+var_24] 1 +
mov [esp+4Ch+var_34] 0 +
jmp loc_41370E  +
cmp al 48h +
jnz loc_41370E  +
mov ecx [esi+14h] +
test ecx ecx +
jnz loc_413854  +
xor ebx ebx +
jmp loc_413856  +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov ecx [esp+4Ch+var_30] +
add eax [esp+4Ch+var_1C] +
mov edx eax +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_413950  +
cmp [esp+4Ch+var_1C] edx +
mov eax 0 +
cmovbe eax edx +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
jmp loc_41370E  +
mov eax [edi+4] +
lea ecx [ebp+6] +
mov eax [eax+34h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+arg_1C] +
mov [edx] eax +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+var_28] +
mov [eax+20h] ebp +
mov [eax+1Ch] ebx +
mov [eax+24h] edx +
mov [eax+18h] esi +
jmp loc_41387C  +
mov eax [esp+4Ch+arg_14] +
mov edi [esp+4Ch+var_28] +
mov [eax] edi +
jmp loc_413801  +
mov [esp+4Ch+var_28] 0 +
jmp loc_413904  +
mov eax [ebx+4] +
lea ebp [eax+0Ch] +
mov eax [ebx+10h] +
mov [esp+4Ch+var_28] eax +
jmp loc_4136A3  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 2Ch +
mov [esp+4Ch+var_4C] eax +
call sub_404C60  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_413BF0  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stab_0 +
mov [esp+4Ch+var_4C] eax +
call sub_405CC0  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stabstr_1 +
mov [esp+4Ch+var_4C] eax +
call sub_405CC0  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_413C20  +
test eax eax +
jz loc_413C20  +
mov eax [edx+28h] +
test eax eax +
jnz loc_4139E1  +
mov eax [edx+24h] +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
mov [esp+4Ch+var_34] eax +
mov eax [ecx+28h] +
test eax eax +
mov [esp+4Ch+var_20] eax +
jnz loc_413A07  +
mov eax [ecx+24h] +
mov [esp+4Ch+var_20] eax +
mov esi [esp+4Ch+var_34] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
mov edi [esp+4Ch+var_30] +
mov [edi+8] eax +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
mov edx [edi+8] +
test edx edx +
mov [edi+0Ch] eax +
jz loc_413BF0  +
test eax eax +
jz loc_413BF0  +
mov eax [edi] +
mov [esp+4Ch+var_38] esi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_4064D0  +
test eax eax +
jz loc_413BF0  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+var_20] +
mov edx [eax+0Ch] +
mov eax [eax+4] +
mov [esp+4Ch+var_38] edi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_4064D0  +
test eax eax +
jz loc_413BF0  +
mov eax [esp+4Ch+var_30] +
mov eax [eax] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call loc_402A30  +
test eax eax +
mov ebx eax +
js loc_413BF0  +
mov [esp+4Ch+var_4C] eax +
call sub_407460  +
test eax eax +
mov edi eax +
jnz loc_413AF2  +
test ebx ebx +
jnz loc_413BF0  +
mov eax [esp+4Ch+var_30] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_402A70  +
test eax eax +
js loc_413E9C  +
jz loc_413C78  +
mov esi [edi] +
test esi esi +
jz loc_413C7C  +
mov ebp edi +
nop   +
jmp loc_413BB8  +
cmp dword ptr [eax+8] 2 +
jnz loc_413BCD  +
cmp dword ptr [eax+0Ch] 20h +
jnz loc_413BCD  +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_413BCD  +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_413BCD  +
cmp edx 0FFFFFFFFh +
jnz loc_413BCD  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax [esp+4Ch+var_30] +
mov eax [eax+8] +
add eax [esi+4] +
mov [esp+4Ch+var_4C] eax +
call edx  +
mov edx [esi+0Ch] +
mov ebx [esp+4Ch+arg_0] +
and eax [edx+28h] +
mov edx [esi] +
mov ecx [edx] +
mov edx [ebx+4] +
mov ebx [edx+30h] +
mov edx [esp+4Ch+var_30] +
mov edx [edx+8] +
add edx [esi+4] +
mov [esp+4Ch+var_48] edx +
mov edx [ecx+10h] +
mov edx [edx+1Ch] +
add edx [ecx+8] +
add edx [esi+8] +
add eax edx +
mov [esp+4Ch+var_4C] eax +
call ebx  +
add ebp 4 +
mov esi [ebp+0] +
test esi esi +
jz loc_413C7C  +
mov eax [esi+0Ch] +
mov edx [eax+2Ch] +
test edx edx +
jz loc_413BAA  +
mov ebx [eax+4] +
test ebx ebx +
jz loc_413B35  +
mov [esp+4Ch+var_4C] offset aUnsupported_st +
call off_4730E4  +
mov [esp+4Ch+var_4C] 5 +
call sub_4029E0  +
mov [esp+4Ch+var_4C] edi +
call free  +
nop   +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_30] +
mov [esp+4Ch+var_48] eax +
mov eax [esi+28h] +
add eax edi +
mov [esp+4Ch+var_4C] eax +
call sub_45FC30  +
test eax eax +
jnz loc_413794  +
jmp loc_4137F4  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_symbols +
mov [esp+4Ch+var_4C] eax +
call sub_405CC0  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_strings +
mov [esp+4Ch+var_4C] eax +
call sub_405CC0  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_413C61  +
test eax eax +
jnz loc_4139D7  +
mov eax [esp+4Ch+arg_20] +
mov edi [esp+4Ch+var_30] +
mov [eax] edi +
mov eax 1 +
jmp loc_41382D  +
test edi edi +
jz loc_413C84  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov edi [esp+4Ch+var_30] +
xor esi esi +
mov ebp [esp+4Ch+var_34] +
mov ecx [edi+8] +
mov eax ebp +
mov dword ptr [edi+14h] 0 +
add eax ecx +
mov ebx ecx +
cmp ecx eax +
jb loc_413CB6  +
jmp loc_413D03  +
cmp al 24h +
jz loc_413E31  +
lea eax [ecx+ebp] +
add ebx 0Ch +
cmp eax ebx +
jbe loc_413CF7  +
movzx eax byte ptr [ebx+4] +
cmp al 64h +
jnz loc_413CA4  +
test esi esi +
jz loc_413CC6  +
add dword ptr [edi+14h] 1 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov ecx [edi+8] +
test eax eax +
lea eax [ecx+ebp] +
jz loc_413E4E  +
lea edx [ebx+10h] +
mov esi ebx +
cmp eax edx +
jbe loc_413CAF  +
cmp byte ptr [ebx+10h] 64h +
jnz loc_413CAF  +
add ebx 0Ch +
jmp loc_413CAF  +
test esi esi +
jz loc_413D03  +
mov eax [esp+4Ch+var_30] +
add dword ptr [eax+14h] 1 +
mov eax [esp+4Ch+var_30] +
mov eax [eax+14h] +
test eax eax +
jz loc_413828  +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
imul eax eax +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
mov [edi+10h] eax +
jz loc_413BF0  +
mov ebp [edi+8] +
cmp dword ptr [edi+14h] 0 +
mov esi [edi+0Ch] +
mov ecx ebp +
jle loc_414018  +
mov eax [esp+4Ch+var_34] +
add eax ebp +
cmp ebp eax +
jnb loc_414018  +
xor edi edi +
xor ecx ecx +
mov edx edi +
mov ebx ecx +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 0 +
jmp loc_413DEC  +
cmp al 64h +
jz loc_413EAD  +
cmp al 84h +
jnz loc_413DC5  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_30] +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx [esp+4Ch+var_18] +
cmp ebx eax +
jnb loc_413E95  +
cmp ebx esi +
mov eax 0 +
cmovb ebx eax +
mov eax [esp+4Ch+var_30] +
add ebp 0Ch +
mov ecx [esp+4Ch+var_28] +
cmp ecx [eax+14h] +
jge loc_414086  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp ebp eax +
jnb loc_414086  +
movzx eax byte ptr [ebp+4] +
cmp al 24h +
jz loc_413F8F  +
ja loc_413D86  +
test al al +
jnz loc_413DC5  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
sub eax esi +
cmp eax [esp+4Ch+var_1C] +
jb loc_413DC5  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov [esp+4Ch+var_18] edx +
add esi [esp+4Ch+var_1C] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_1C] eax +
jmp loc_413DC5  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
jz loc_413E55  +
mov ecx [edi+8] +
add dword ptr [edi+14h] 1 +
lea eax [ecx+ebp] +
xor esi esi +
jmp loc_413CAF  +
mov ecx [edi+8] +
jmp loc_413CAC  +
mov eax [edi+4] +
lea ecx [ebp+0Ch] +
mov [esp+4Ch+var_24] ecx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_24] esi +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx ebp +
mov ebp ecx +
cmp ebx eax +
jnb loc_413E95  +
cmp ebx esi +
jnb loc_413DC5  +
xor ebx ebx +
jmp loc_413DC5  +
test edi edi +
nop   +
jnz loc_413BE6  +
xor eax eax +
jmp loc_413BF2  +
test edx edx +
nop   +
jz loc_413F0D  +
imul eax [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_30] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
add eax [ecx+10h] +
lea ecx [edx+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_30] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_10] +
mov eax [esp+4Ch+var_18] +
add eax [ecx+10h] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+10h] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edx +
mov edx [esp+4Ch+var_2C] +
mov [eax+0Ch] edx +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
add eax esi +
cmp eax esi +
mov edx eax +
mov [esp+4Ch+var_2C] eax +
jz loc_413F7E  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_413F74  +
cmp edx esi +
mov eax 0 +
cmovnb eax edx +
mov [esp+4Ch+var_2C] eax +
mov ecx [esp+4Ch+var_30] +
lea edx [ebp+10h] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp edx eax +
jnb loc_413F5D  +
cmp byte ptr [ebp+10h] 64h +
jz loc_413E5D  +
mov ebx [esp+4Ch+var_2C] +
mov edx ebp +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_413DC5  +
mov [esp+4Ch+var_2C] 0 +
jmp loc_413F41  +
mov [esp+4Ch+var_2C] 0 +
xor ebx ebx +
xor edx edx +
jmp loc_413DC5  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_18] +
lea ecx [esi+eax] +
cmp ecx esi +
jz loc_413DC5  +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
cmp ecx eax +
mov eax 0 +
cmovnb ecx eax +
imul eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_10] ecx +
mov [esp+4Ch+var_18] eax +
add eax [edx+10h] +
lea edx [ebp+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_10] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_18] +
add eax [edx+10h] +
mov edx [esp+4Ch+var_2C] +
mov [eax+4] ebp +
mov [eax+8] esi +
mov [eax+0Ch] edx +
xor edx edx +
mov [eax+10h] ebx +
mov [eax+14h] ecx +
jmp loc_413DC5  +
mov [esp+4Ch+var_28] 0 +
mov edi [esp+4Ch+var_28] +
mov edx [esp+4Ch+var_34] +
imul eax edi +
add edx ecx +
add eax ebx +
mov dword ptr [eax] 0FFFFFFFFh +
mov [eax+4] edx +
mov [eax+8] esi +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax edi +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_40] offset sub_413060 +
mov [esp+4Ch+var_44] 18h +
mov [esp+4Ch+var_4C] ebx +
call qsort  +
mov eax [esp+4Ch+arg_20] +
mov [eax] edi +
jmp loc_4135FE  +
test edx edx +
mov edi edx +
jz loc_4140E8  +
mov eax [esp+4Ch+var_30] +
lea edx [edx+8] +
mov ecx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_1C] ebx +
imul ebp [esp+4Ch+var_28] +
mov ebx [eax+10h] +
mov eax [ecx+4] +
add ebx ebp +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_1C] +
add [esp+4Ch+var_28] 1 +
mov [ebx] eax +
mov ebx [edx+10h] +
lea eax [ebx+ebp] +
mov [eax+4] edi +
mov edi [esp+4Ch+var_24] +
mov [eax+10h] ecx +
mov ecx [edx+8] +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edi +
mov edi [esp+4Ch+var_2C] +
mov [eax+0Ch] edi +
jmp loc_414020  +
mov eax [esp+4Ch+var_30] +
mov ecx [eax+8] +
mov ebx [eax+10h] +
jmp loc_414020  +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+8] +
mov edx [eax] +
mov eax [eax+4] +
xor eax [ecx+4] +
xor edx [ecx] +
or edx eax +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
jmp calloc  +
***
sub esp 18h +
xor edx edx +
test byte ptr [ebx+2Bh] 1 +
jnz loc_414183  +
mov edx [ebx+4] +
mov edx [edx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_4046B0  +
test eax eax +
jz loc_4141B9  +
movzx edx byte ptr [ebx+2Ch] +
movzx ecx byte ptr [eax+2Ch] +
and edx 10h +
and ecx 0FFFFFFEFh +
or ecx edx +
movzx edx byte ptr [eax+2Bh] +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFF7h +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov ebp [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+0ECh] +
mov [esp+30h+var_30] esi +
call eax  +
test eax eax +
jz loc_4141F1  +
mov ebx [eax+4] +
mov [esp+30h+var_30] eax +
call free  +
cmp ebx 3 +
ja loc_414200  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_404C60  +
test eax eax +
mov edi eax +
jz loc_4141F1  +
mov [esp+30h+var_28] esi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_4084C0  +
cmp eax ebx +
jz loc_414250  +
call sub_402790  +
cmp eax 1 +
nop   +
jz loc_41423E  +
mov [esp+30h+var_30] 0Ah +
call sub_4029E0  +
mov [esp+30h+var_2C] edi +
mov [esp+30h+var_30] esi +
call sub_404DD0  +
jmp loc_4141F1  +
mov [esp+30h+var_20] eax +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
mov ecx [esp+30h+var_20] +
sub ecx 4 +
shr eax 3 +
lea edx ds:0[eax*8] +
cmp edx ecx +
mov [ebp+14h] eax +
ja loc_414363  +
shl eax 4 +
add edi 4 +
mov dword ptr [ebp+8] 0 +
lea edx [edi+edx+4] +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_18] edx +
call sub_404B80  +
test eax eax +
mov ebx eax +
mov [ebp+10h] eax +
jz loc_4141F1  +
mov eax [ebp+14h] +
xor edx edx +
test eax eax +
jz loc_414300  +
mov [esp+30h+var_20] ebp +
mov ebp esi +
mov esi edx +
lea esi [esi+0] +
mov eax [ebp+4] +
add esi 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
lea ecx [edi+4] +
add edi 8 +
add eax [esp+30h+var_18] +
mov [ebx-10h] eax +
mov eax [ebp+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+30h+var_20] +
cmp [eax+14h] esi +
ja loc_4142C0  +
mov esi ebp +
mov ebp eax +
mov [esp+30h+var_30] esi +
call sub_4085F0  +
mov [esp+30h+var_1C] edx +
mov edi [esp+30h+var_1C] +
mov [esp+30h+var_20] eax +
sar edi 1Fh +
mov eax edi +
sar eax 1Fh +
mov [esp+30h+var_14] eax +
mov eax [esp+30h+var_20] +
mov [esp+30h+var_18] edi +
mov edx [esp+30h+var_14] +
xor eax edi +
mov ecx eax +
mov ebx edx +
sub ecx [esp+30h+var_18] +
and ecx 1 +
mov eax ecx +
xor eax edi +
mov ecx eax +
mov eax [esp+30h+var_18] +
sub ecx eax +
mov eax 1 +
sbb ebx edx +
add ecx [esp+30h+var_20] +
adc ebx [esp+30h+var_1C] +
mov [ebp+0] ecx +
mov [ebp+4] ebx +
or byte ptr [esi+2Bh] 20h +
jmp loc_4141F3  +
mov [esp+30h+var_30] 3 +
call sub_4029E0  +
jmp loc_41423E  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
mov [esp+48h+var_20] edx +
call sub_45FDC0  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_1C] eax +
call sub_45ECB0  +
mov [esp+48h+var_48] edi +
test eax eax +
cmovnz ebp eax +
mov [esp+48h+var_28] eax +
call sub_45ECB0  +
test eax eax +
mov [esp+48h+var_24] eax +
cmovnz edi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+0] +
mov ebx ebp +
test al al +
jnz loc_4143DE  +
jmp loc_4143E2  +
cmp al 2Fh +
jz loc_4143E2  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_4143E2  +
cmp al 5Ch +
jnz loc_4143D0  +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_41452D  +
cmp cl 5Ch +
jz loc_4145A9  +
cmp cl 2Fh +
mov esi edi +
jnz loc_414417  +
lea esi [esi+0] +
jmp loc_4145A9  +
cmp dl 5Ch +
jz loc_4145B0  +
cmp dl 2Fh +
jz loc_4145B0  +
add esi 1 +
movzx edx byte ptr [esi] +
test dl dl +
jnz loc_414405  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_2C] ecx +
call strlen  +
mov ecx [esp+48h+var_2C] +
lea esi [eax+1] +
mov eax [esp+48h+var_20] +
xor edx edx +
xor ebx ebx +
add eax 1 +
nop   +
cmp cl 5Ch +
jz loc_41444A  +
cmp cl 2Fh +
jnz loc_41445B  +
cmp edi eax +
jbe loc_414458  +
cmp byte ptr [edi-1] 2Eh +
jz loc_41451B  +
add ebx 1 +
add edi 1 +
movzx ecx byte ptr [edi] +
test cl cl +
jnz loc_414440  +
lea eax [ebx+ebx*2] +
add esi eax +
test edx edx +
mov [esp+48h+var_2C] edx +
jz loc_414604  +
mov edi [esp+48h+var_1C] +
mov [esp+48h+var_48] edi +
call strlen  +
mov edx [esp+48h+var_2C] +
mov ecx edi +
lea edi [edi+eax-1] +
cmp ecx edi +
setb cl  +
test edx edx +
jz loc_4144AF  +
test cl cl +
jz loc_4144AF  +
movzx eax byte ptr [edi] +
jmp loc_4144A4  +
cmp al 2Fh +
jz loc_4144A8  +
cmp al 5Ch +
jnz loc_4144A0  +
sub edx 1 +
test edx edx +
jnz loc_414495  +
test edx edx +
jnz loc_4145EB  +
mov [esp+48h+var_48] edi +
call strlen  +
lea esi [esi+eax+1] +
cmp esi ds:dword_49A3C8 +
jbe loc_414544  +
mov eax ds:dword_49A3C4 +
test eax eax +
jz loc_4144DC  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] esi +
mov ds:dword_49A3C8 0 +
call sub_407460  +
test eax eax +
mov ds:dword_49A3C4 eax +
jz loc_4145E7  +
test ebx ebx +
mov ds:dword_49A3C8 esi +
mov esi eax +
jnz loc_41454E  +
test edi edi +
mov eax esi +
jnz loc_414569  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] eax +
call strcpy  +
jmp loc_414587  +
cmp byte ptr [edi-2] 2Eh +
jnz loc_414458  +
add edx 1 +
jmp loc_41445B  +
mov [esp+48h+var_48] ebp +
call strlen  +
lea esi [eax+1] +
xor ebx ebx +
xor edi edi +
cmp esi ds:dword_49A3C8 +
ja loc_4144CB  +
test ebx ebx +
mov esi ds:dword_49A3C4 +
jz loc_414507  +
mov edx ebx +
mov eax esi +
mov dword ptr [eax] 2F2E2Eh +
add eax 3 +
sub edx 1 +
jnz loc_414552  +
lea eax [ebx+ebx*2] +
add eax esi +
test edi edi +
jz loc_41450D  +
mov [esp+48h+var_3C] ebp +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] offset aSS_5 +
mov [esp+48h+var_48] eax +
call sprintf  +
mov esi ds:dword_49A3C4 +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [esp+48h+var_24] +
mov [esp+48h+var_48] eax +
call free  +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edi +
nop   +
lea esi [esi+0] +
test al al +
jz loc_414421  +
mov eax ebx +
mov edx esi +
sub eax ebp +
sub edx edi +
cmp eax edx +
jnz loc_414421  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call sub_45FC80  +
test eax eax +
jnz loc_41460B  +
lea ebp [ebx+1] +
lea edi [esi+1] +
jmp loc_4143C0  +
xor esi esi +
jmp loc_414587  +
mov [esp+48h+var_44] 5F3h +
mov [esp+48h+var_48] offset a____Binutil_21 +
call sub_402930  +
jmp loc_4144B7  +
xor edi edi +
jmp loc_41453C  +
mov [esp+48h+var_48] ebp +
nop   +
call strlen  +
movzx ecx byte ptr [edi] +
test cl cl +
lea esi [eax+1] +
jz loc_414538  +
jmp loc_414434  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov eax [eax+8] +
mov [esp+1Ch+var_1C] eax +
call sub_4048E0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_C] +
mov [esp+10h+var_C] 14h +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] offset unk_49A3E1 +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_4] eax +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
call sub_414130  +
mov [esp+10h+var_10] offset unk_49A3E1 +
call strlen  +
cmp eax esi +
mov ebx eax +
jb loc_4146B0  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] edi +
mov [esp+10h+arg_4] offset unk_49A3E1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memcpy  +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_49A3E1 +
call memcpy  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] 20h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memset  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] offset a10lu +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_C] 15h +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_10] offset unk_49A3CC +
mov [esp+10h+var_4] eax +
call sub_414130  +
mov [esp+10h+var_10] offset unk_49A3CC +
call strlen  +
cmp eax esi +
mov ebx eax +
ja loc_414790  +
jb loc_414756  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] offset unk_49A3CC +
call memcpy  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_49A3CC +
call memcpy  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] 20h +
call memset  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 13h +
call sub_4029E0  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_404C60  +
test eax eax +
mov [ebx+0A0h] eax +
setnz al  +
add esp 18h +
movzx eax al +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
test byte ptr [eax+2Bh] 20h +
jz loc_414812  +
mov edx [esp+24h] +
lea ecx [edx+1] +
xor edx edx +
cmp dword ptr [esp+24h] 0FFFFFFFFh +
cmovnz edx ecx +
mov ecx [eax+0A0h] +
mov eax 0FFFFFFFFh +
cmp edx [ecx+14h] +
jb loc_414827  +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax edx +
shl eax 4 +
add eax [ecx+10h] +
mov ecx [esp+28h] +
mov [ecx] eax +
mov eax edx +
add esp 1Ch +
retn   +
***
jmp sub_404460  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax+94h] edx +
mov eax 1 +
retn   +
***
mov ebx [esp+28h+arg_0] +
mov edx [esp+28h+arg_8] +
mov eax [ebx+0A0h] +
mov ecx [eax+8] +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_14] edx +
test ecx ecx +
mov [esp+28h+var_18] eax +
jz loc_4148C4  +
lea eax [esp+28h+var_18] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] ecx +
call sub_460670  +
test eax eax +
jz loc_4148C4  +
mov eax [eax+8] +
movzx ecx byte ptr [ebx+2Bh] +
movzx edx byte ptr [eax+2Bh] +
and ecx 8 +
and edx 0FFFFFFF7h +
or edx ecx +
mov [eax+2Bh] dl +
add esp 28h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_4148BF  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov eax [ebx+0A0h] +
mov ebp [eax+8] +
test ebp ebp +
jz loc_414944  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 10h +
call sub_404C60  +
mov [eax] esi +
mov ebx eax +
mov [eax+4] edi +
mov eax [esp+2Ch+arg_C] +
mov [ebx+8] eax +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_460870  +
mov [eax] ebx +
mov eax [esp+2Ch+arg_C] +
mov eax [eax+88h] +
mov [eax+18h] ebp +
mov [eax+20h] esi +
mov [eax+24h] edi +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_18] offset free +
mov [esp+2Ch+var_1C] offset loc_414160 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] offset loc_414110 +
mov [esp+2Ch+var_28] offset loc_414100 +
mov [esp+2Ch+var_2C] 10h +
call sub_4602B0  +
test eax eax +
mov ebp eax +
jz loc_414990  +
mov eax [ebx+0A0h] +
mov [eax+8] ebp +
jmp loc_4148F0  +
xor eax eax +
jmp loc_41493C  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+7Ch+arg_0] +
lea ebp [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] 3Ch +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] ebx +
call sub_4084C0  +
cmp eax 3Ch +
jz loc_414A06  +
call sub_402790  +
cmp eax 1 +
jz loc_4149FC  +
mov [esp+7Ch+var_7C] 9 +
call sub_4029E0  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ah +
call sub_4029E0  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_E] +
mov edi offset asc_478D8A +
mov ecx 2 +
mov esi eax +
cmps   +
jz loc_414A44  +
mov esi [esp+7Ch+arg_4] +
test esi esi +
jz loc_4149F0  +
mov edi [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_78] edi +
call strncmp  +
test eax eax +
jnz loc_4149F0  +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+7Ch+var_50] +
movzx edi byte ptr [esp+7Ch+var_E] +
mov [esp+7Ch+var_74] eax +
lea eax [esp+7Ch+var_18] +
mov [esp+7Ch+var_78] offset aLu +
mov [esp+7Ch+var_7C] eax +
mov byte ptr [esp+7Ch+var_E] 0 +
call sscanf  +
mov ecx edi +
mov byte ptr [esp+7Ch+var_E] cl +
cmp eax 1 +
jnz loc_4149F0  +
movzx edx byte ptr [esp+7Ch+var_48] +
cmp dl 2Fh +
jz loc_414C60  +
cmp dl 20h +
jz loc_414C32  +
cmp dl 23h +
jz loc_414BA0  +
mov eax [ebx+4] +
movzx edi byte ptr [eax+1Ah] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jz loc_414D65  +
sub eax ebp +
mov edi eax +
lea eax [edi+65h] +
xor edx edx +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_60] edx +
call sub_4075F0  +
test eax eax +
mov esi eax +
jz loc_4149FC  +
mov edx [esp+7Ch+var_60] +
xor ecx ecx +
lea eax [esi+28h] +
test edx edx +
mov [esi] eax +
mov eax [esp+7Ch+var_48] +
mov [esi+28h] eax +
mov eax [esp+7Ch+var_44] +
mov [esi+2Ch] eax +
mov eax [esp+7Ch+var_40] +
mov [esi+30h] eax +
mov eax [esp+7Ch+var_3C] +
mov [esi+34h] eax +
mov eax [esp+7Ch+var_38] +
mov [esi+38h] eax +
mov eax [esp+7Ch+var_34] +
mov [esi+3Ch] eax +
mov eax [esp+7Ch+var_30] +
mov [esi+40h] eax +
mov eax [esp+7Ch+var_2C] +
mov [esi+44h] eax +
mov eax [esp+7Ch+var_28] +
mov [esi+48h] eax +
mov eax [esp+7Ch+var_24] +
mov [esi+4Ch] eax +
mov eax [esp+7Ch+var_20] +
mov [esi+50h] eax +
mov eax [esp+7Ch+var_1C] +
mov [esi+54h] eax +
mov eax [esp+7Ch+var_18] +
mov [esi+58h] eax +
mov eax [esp+7Ch+var_14] +
mov [esi+5Ch] eax +
mov eax [esp+6Ch] +
mov [esi+60h] eax +
mov eax [esp+7Ch+var_50] +
mov [esi+4] eax +
mov [esi+8] ecx +
mov ecx [esp+7Ch+var_6C] +
mov ebx [esp+7Ch+var_68] +
mov [esi+10h] ecx +
mov [esi+14h] ebx +
jz loc_414D10  +
mov [esi+0Ch] edx +
add esp 7Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esp+7Ch+var_48+1] 31h +
jnz loc_414AA7  +
cmp byte ptr [esp+7Ch+var_48+2] 2Fh +
jnz loc_414AA7  +
movzx eax byte ptr [esp+7Ch+var_48+3] +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_414AA7  +
lea eax [esp+7Ch+var_48+3] +
mov [esp+7Ch+var_7C] eax +
call atoi  +
sub [esp+7Ch+var_50] eax +
mov ecx eax +
lea eax [eax+65h] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_6C] ecx +
call sub_4075F0  +
test eax eax +
mov esi eax +
jz loc_4149FC  +
mov ecx [esp+7Ch+var_6C] +
lea edx [eax+64h] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_60] ecx +
call sub_4084C0  +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_6C] +
cmp eax ecx +
mov edi eax +
jz loc_414DA2  +
mov [esp+7Ch+var_7C] esi +
call free  +
jmp loc_4149CB  +
mov eax [ebx+4] +
mov [esp+7Ch+var_6C] edx +
movzx edi byte ptr [eax+1Ah] +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] edi +
call memchr  +
mov edx [esp+7Ch+var_6C] +
test eax eax +
jnz loc_414AAE  +
lea esi [esi+0] +
mov eax [ebx+0A0h] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_414A9E  +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_48+1] +
mov [esp+7Ch+var_74] 0Ah +
mov [esp+7Ch+var_7C] eax +
call strtol  +
mov edi eax +
call esi  +
mov edx [eax] +
test edx edx +
jnz loc_4149F0  +
mov eax [ebx+0A0h] +
cmp edi [eax+1Ch] +
jnb loc_4149F0  +
test byte ptr [ebx+2Bh] 40h +
jz loc_414D25  +
mov edx [esp+7Ch+var_4C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
test edx edx +
jz loc_414D35  +
cmp byte ptr [edx] 3Ah +
jnz loc_414D35  +
add edx 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] 0Ah +
mov [esp+7Ch+var_78] 0 +
call strtol  +
mov [esp+7Ch+var_6C] eax +
sar eax 1Fh +
mov [esp+7Ch+var_68] eax +
call esi  +
mov eax [eax] +
test eax eax +
jnz loc_4149F0  +
mov eax [ebx+0A0h] +
jmp loc_414D35  +
lea eax [esi+64h] +
test edi edi +
mov [esi+0Ch] eax +
jnz loc_414D50  +
mov byte ptr [eax+edi] 0 +
mov eax esi +
jmp loc_4149E3  +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
mov edx edi +
add edx [eax+18h] +
jz loc_4149FC  +
mov eax 64h +
xor edi edi +
jmp loc_414AE3  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esi+0Ch] +
jmp loc_414D1A  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jnz loc_414ACA  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 20h +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jz loc_414ACE  +
jmp loc_414ACA  +
mov byte ptr [esi+eax+64h] 0 +
mov ecx eax +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
jmp loc_414AFF  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_4149A0  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi] +
mov [esp+1Ch+var_1C] ebx +
call sub_45EE20  +
mov esi [esp+1Ch+arg_4] +
cmp eax ebx +
jz loc_414E3F  +
sub eax ebx +
mov [esp+1Ch+var_1C] esi +
mov ebp eax +
call strlen  +
mov [esp+1Ch+var_1C] edi +
lea eax [ebp+eax+1] +
mov [esp+1Ch+var_18] eax +
call sub_404B80  +
test eax eax +
mov edi eax +
jz loc_414E50  +
mov [esp+1Ch+var_14] ebp +
add ebp edi +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call strncpy  +
mov [esp+1Ch+var_18] esi +
mov esi edi +
mov [esp+1Ch+var_1C] ebp +
call strcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_414E3F  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
call sub_414870  +
test eax eax +
mov ebx eax +
jz loc_414E93  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
call sub_4086D0  +
test eax eax +
js loc_414E89  +
mov eax [ebp+4] +
mov eax [eax+0ECh] +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_414E89  +
test byte ptr [ebp+2Bh] 40h +
mov ebx [eax+0Ch] +
jz loc_415085  +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_414F08  +
cmp al 2Fh +
jz loc_414F08  +
test al al +
nop   +
jz loc_414EE8  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_414F08  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_414DE0  +
test eax eax +
mov ebx eax +
jnz loc_414F08  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_414E89  +
mov eax [esp+2Ch+var_14] +
cmp dword ptr [eax+14h] 0 +
jl loc_414FBB  +
jle loc_414FB1  +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_45FC30  +
test eax eax +
jz loc_4150F3  +
mov esi [ebp+98h] +
test esi esi +
jnz loc_414F50  +
jmp loc_4150B0  +
mov esi [esi+90h] +
test esi esi +
jz loc_4150B0  +
mov eax [esi] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_45FC30  +
test eax eax +
jnz loc_414F42  +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] esi +
call sub_405A00  +
test eax eax +
jz loc_415097  +
mov eax [esp+2Ch+var_14] +
mov ebx [eax+14h] +
mov ecx [eax+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ecx +
call sub_414E60  +
test eax eax +
mov ebx eax +
jz loc_414EFA  +
mov [esp+2Ch+var_2C] ebp +
call sub_4085F0  +
mov [ebx+40h] eax +
mov [ebx+44h] edx +
jmp loc_414E89  +
cmp dword ptr [eax+10h] 0 +
ja loc_414F1C  +
mov edx ebp +
mov eax ebx +
call sub_414170  +
test eax eax +
mov ecx eax +
jz loc_4150F3  +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_4085F0  +
mov ecx [esp+2Ch+var_10] +
mov [ecx+40h] eax +
mov [ecx+44h] edx +
test byte ptr [ebp+2Bh] 40h +
jz loc_4150D6  +
mov dword ptr [ecx+38h] 0 +
mov dword ptr [ecx+3Ch] 0 +
mov eax [esp+2Ch+var_14] +
mov ebx [ecx+28h] +
mov [ecx+88h] eax +
mov eax [ebp+28h] +
mov edx ebx +
and ebx 0FF80001Fh +
shr edx 5 +
and edx 3FFFFh +
shr eax 5 +
and eax 2C000h +
or eax edx +
shl eax 5 +
or ebx eax +
movzx eax byte ptr [ecx+2Ch] +
mov [ecx+28h] ebx +
movzx edx byte ptr [ebp+2Ch] +
and eax 0FFFFFFFDh +
and edx 2 +
or eax edx +
mov [ecx+2Ch] al +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_4148D0  +
mov ecx [esp+2Ch+var_10] +
mov ebx ecx +
test eax eax +
jnz loc_414E89  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov dword ptr [ebx+88h] 0 +
xor ebx ebx +
jmp loc_414E89  +
mov [esp+2Ch+var_2C] ebp +
call sub_404460  +
test eax eax +
mov ecx eax +
jnz loc_414FCE  +
mov eax [esp+2Ch+var_14] +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_414E89  +
mov edx ebp +
mov eax ebx +
call sub_414170  +
test eax eax +
jz loc_415097  +
mov edx [ebp+98h] +
mov esi eax +
mov [eax+90h] edx +
mov [ebp+98h] eax +
jmp loc_414F62  +
mov [ecx+38h] eax +
mov [ecx+3Ch] edx +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_45ED60  +
mov ecx [esp+2Ch+var_10] +
mov [ecx] eax +
jmp loc_414FFC  +
mov [esp+2Ch+var_2C] 0Ah +
call sub_4029E0  +
jmp loc_415097  +
***
jmp loc_415110  +
sub esp 1Ch +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [ecx+0A0h] +
shl eax 4 +
add eax [edx+10h] +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp] ecx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_414E60  +
add esp 1Ch +
retn   +
***
jmp sub_415150  +
***
mov eax [esp+18h+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 2 +
jnz loc_415180  +
and edx 18h +
cmp dl 10h +
jz loc_415180  +
mov edx [eax+4] +
mov edx [edx+0F4h] +
add esp 18h +
pop ebx  +
jmp edx  +
mov [esp+18h+var_18] 5 +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+34h] +
test ecx ecx +
jz loc_415213  +
mov ebx [esp+30h] +
mov eax [ecx+40h] +
mov edx [ecx+44h] +
test byte ptr [ebx+2Bh] 40h +
jnz loc_4151F7  +
mov ecx [ecx+88h] +
xor ebx ebx +
mov ecx [ecx+4] +
add ecx eax +
mov ebp ecx +
adc ebx edx +
and ebp 1 +
xor edi edi +
add ecx ebp +
adc ebx edi +
cmp edx ebx +
jb loc_4151F3  +
ja loc_4151E3  +
cmp eax ecx +
jb loc_4151F3  +
mov dword ptr [esp] 0Ah +
call sub_4029E0  +
xor eax eax +
jmp loc_41520B  +
mov eax ecx +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_414E60  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov eax [eax+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
jmp loc_4151F7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
lea ebp [esp+17h] +
mov dword ptr [esp+4] 8 +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_4084C0  +
cmp eax 8 +
jz loc_415278  +
call sub_402790  +
cmp eax 1 +
jz loc_41526E  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi offset aThin +
mov ecx 8 +
movzx eax byte ptr [ebx+2Bh] +
mov esi ebp +
cmps   +
mov edi offset aArch +
mov ecx 8 +
mov esi ebp +
setz dl  +
and eax 0FFFFFFBFh +
shl edx 6 +
or eax edx +
mov [ebx+2Bh] al +
cmps   +
jz loc_4152B8  +
mov edi offset aBout +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_415323  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_404C60  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_4153B4  +
mov dword ptr [eax] 8 +
mov dword ptr [eax+4] 0 +
mov eax [ebx+4] +
mov eax [eax+0D8h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_415330  +
mov eax [ebx+4] +
mov eax [eax+0DCh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_415330  +
movzx eax byte ptr [ebx+2Bh] +
and eax 21h +
cmp al 21h +
jz loc_415365  +
mov eax [ebx+4] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 40h +
jnz loc_4152B8  +
jmp loc_41526E  +
***
call sub_402790  +
cmp eax 1 +
jz loc_415346  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
mov eax [ebx+0A0h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_404DD0  +
xor eax eax +
mov [ebx+0A0h] esi +
jmp loc_415270  +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_415150  +
test eax eax +
mov esi eax +
jz loc_415318  +
and byte ptr [eax+2Bh] 0FEh +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call sub_405A00  +
test eax eax +
mov eax [ebx+4] +
jz loc_415270  +
cmp [esi+4] eax +
jz loc_415270  +
mov dword ptr [esp] 4 +
call sub_4029E0  +
jmp loc_415318  +
***
mov [ebx+0A0h] esi +
jmp loc_415270  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0C0h] +
lea ebp [esp+3Eh] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_4084C0  +
mov edx 1 +
test eax eax +
jz loc_4153F9  +
cmp eax 10h +
jz loc_415406  +
xor edx edx +
add esp 0ACh +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_4153F7  +
mov edi offset a___symdef +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415543  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415543  +
mov edi offset asc_478DCE +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415551  +
mov edi offset aSym64 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4155B6  +
mov edi offset a120 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415498  +
and byte ptr [ebx+2Bh] 0DFh +
mov edx 1 +
jmp loc_4153F9  +
***
lea eax [esp+64h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_4084C0  +
cmp eax 3Ch +
jnz loc_4153F7  +
lea esi [esp+4Fh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 14h +
mov [esp] esi +
call sub_4084C0  +
cmp eax 14h +
jnz loc_4153F7  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFB0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_4153F7  +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset a___symdefSorte +
mov [esp] esi +
mov byte ptr [esp+63h] 0 +
call strncmp  +
test eax eax +
jz loc_415543  +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] offset a___symdef_1 +
mov [esp] esi +
call strncmp  +
test eax eax +
jnz loc_41548A  +
mov eax ebx +
call sub_4141C0  +
mov edx eax +
jmp loc_4153F9  +
***
mov eax [ebx+4] +
mov ebp [ebx+0A0h] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_4153F7  +
mov edi [eax+4] +
lea esi [esp+64h] +
mov [esp] eax +
call free  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] esi +
call sub_4084C0  +
cmp eax 4 +
jz loc_4155C7  +
call sub_402790  +
cmp eax 1 +
jz loc_4153F7  +
mov dword ptr [esp] 0Ah +
call sub_4029E0  +
xor edx edx +
jmp loc_4153F9  +
***
mov dword ptr [esp] 3 +
call sub_4029E0  +
jmp loc_4153F7  +
***
mov [esp] esi +
sub edi 4 +
call sub_407790  +
mov ecx edi +
mov dword ptr [esp+28h] offset sub_407790 +
mov [esp+18h] eax +
shl eax 2 +
sub ecx eax +
cmp ecx 0FFFFFh +
mov [esp+20h] ecx +
ja loc_4156A9  +
mov eax [esp+18h] +
cmp eax 0FFFFFFFh +
ja loc_4153F7  +
mov edi [esp+20h] +
shl eax 4 +
mov ecx eax +
mov [esp+2Ch] eax +
lea eax [edi+eax+1] +
cmp ecx eax +
jnb loc_4153F7  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_404C60  +
test eax eax +
mov esi eax +
mov [ebp+10h] eax +
jz loc_4153F7  +
mov eax [esp+18h] +
mov [esp] ebx +
lea edi ds:0[eax*4] +
mov [esp+4] edi +
call sub_404B80  +
test eax eax +
mov [esp+24h] eax +
jz loc_415693  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_4084C0  +
cmp edi eax +
jz loc_4156F1  +
call sub_402790  +
sub eax 1 +
jz loc_415683  +
mov dword ptr [esp] 0Ah +
call sub_4029E0  +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_404DD0  +
mov eax [ebp+10h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_404DD0  +
xor edx edx +
jmp loc_4153F9  +
***
mov [esp] ebx +
call sub_407150  +
cmp eax 4 +
jnz loc_4155F5  +
mov eax [ebx+4] +
mov dword ptr [esp+28h] offset sub_407790 +
cmp dword ptr [eax+4] 2 +
jnz loc_4155F5  +
mov [esp] esi +
call sub_4077C0  +
mov dword ptr [esp+28h] offset sub_4077C0 +
mov [esp+18h] eax +
shl eax 2 +
sub edi eax +
mov [esp+20h] edi +
jmp loc_4155F5  +
***
mov edi [esp+2Ch] +
mov eax [esp+20h] +
mov [esp+8] ebx +
add edi esi +
mov [esp+4] eax +
mov [esp] edi +
call sub_4084C0  +
cmp [esp+20h] eax +
jnz loc_41566D  +
mov [esp+0C0h] ebx +
xor edx edx +
mov ebx [esp+20h] +
jmp loc_415769  +
cmp [esp+18h] edx +
jbe loc_41576D  +
mov eax [esp+24h] +
mov [esp+20h] edx +
lea eax [eax+edx*4] +
mov [esp] eax +
mov eax [esp+28h] +
call eax  +
mov [esi] edi +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov [esp+4] ebx +
mov [esp] edi +
call sub_470390  +
mov edx [esp+20h] +
cmp eax ebx +
adc eax 0 +
add esi 10h +
add edi eax +
sub ebx eax +
add edx 1 +
test ebx ebx +
jnz loc_415724  +
mov ebx [esp+0C0h] +
mov eax [esp+18h] +
mov byte ptr [edi] 0 +
mov [ebp+14h] eax +
mov [esp] ebx +
call sub_4085F0  +
mov ecx eax +
and ecx 1 +
mov esi ecx +
mov ecx edx +
and ecx 80000000h +
test ecx ecx +
mov edi ecx +
jns loc_4157BD  +
add esi 0FFFFFFFFh +
mov ecx esi +
or ecx 0FFFFFFFEh +
mov [esp+18h] ecx +
mov esi [esp+18h] +
mov dword ptr [esp+1Ch] 0FFFFFFFFh +
mov edi [esp+1Ch] +
add esi 1 +
adc edi 0 +
add eax esi +
adc edx edi +
mov [ebp+0] eax +
mov [ebp+4] edx +
or byte ptr [ebx+2Bh] 20h +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_404DD0  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4086D0  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41548E  +
mov edx [eax] +
cmp byte ptr [edx] 2Fh +
jz loc_415828  +
mov [esp] eax +
call free  +
mov edx 1 +
jmp loc_4153F9  +
***
cmp byte ptr [edx+1] 20h +
jnz loc_415816  +
mov ecx [eax+4] +
xor ebx ebx +
add ecx 3Dh +
and ecx 0FFFFFFFEh +
add [ebp+0] ecx +
adc [ebp+4] ebx +
jmp loc_415816  +
***
jmp loc_415850  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 4Ch +
mov eax [esp+60h] +
lea ebp [esp+2Fh] +
mov eax [eax+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+18h] eax +
mov eax [esp+60h] +
mov [esp+8] eax +
call sub_4084C0  +
test eax eax +
jz loc_415891  +
cmp eax 10h +
jz loc_4158A0  +
xor ebx ebx +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+60h] +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] eax +
call sub_4086D0  +
test eax eax +
jnz loc_41588F  +
mov edi offset a___symdef +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415902  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415902  +
mov edi offset asc_478DCE +
mov ecx 10h +
mov eax [esp+60h] +
mov esi ebp +
cmps   +
jz loc_415910  +
and byte ptr [eax+2Bh] 0DFh +
jmp loc_415891  +
***
mov eax [esp+60h] +
call sub_4141C0  +
mov ebx eax +
jmp loc_415891  +
***
mov eax [eax+4] +
mov edx [esp+60h] +
mov eax [eax+0ECh] +
mov [esp] edx +
call eax  +
test eax eax +
jz loc_41588F  +
mov ebx [eax+4] +
mov [esp] eax +
cmp ebx 5 +
ja loc_41594B  +
call free  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
jmp loc_41588F  +
***
call free  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_404C60  +
test eax eax +
mov ebp eax +
jz loc_41588F  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+8] eax +
call sub_4084C0  +
cmp ebx eax +
jz loc_4159A3  +
call sub_402790  +
cmp eax 1 +
jz loc_41588F  +
mov dword ptr [esp] 0Ah +
xor ebx ebx +
call sub_4029E0  +
jmp loc_415891  +
***
mov eax [esp+60h] +
sub ebx 6 +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp] ebp +
call eax  +
mov edi [esp+18h] +
lea edx [ebp+2] +
mov dword ptr [edi+8] 0 +
mov [edi+14h] eax +
mov eax [esp+60h] +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
cmp ebx eax +
mov esi eax +
jb loc_41593A  +
mov eax [edi+14h] +
sub ebx esi +
mov [esp+1Ch] eax +
shl eax 3 +
cmp ebx eax +
jb loc_41593A  +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_404B80  +
mov ebx eax +
mov eax [esp+18h] +
test ebx ebx +
mov [eax+10h] ebx +
jz loc_41588F  +
cmp dword ptr [eax+14h] 0 +
jz loc_415A67  +
add ebp 6 +
xor edi edi +
add esi ebp +
mov [esp+1Ch] ebp +
mov ebp edi +
mov edi [esp+60h] +
mov eax [edi+4] +
add ebp 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
lea ecx [esi+4] +
add esi 8 +
add eax [esp+1Ch] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+18h] +
cmp [eax+14h] ebp +
ja loc_415A2B  +
mov eax [esp+60h] +
mov [esp] eax +
call sub_4085F0  +
mov edi edx +
mov esi eax +
and edi 80000000h +
and esi 1 +
test edi edi +
mov ecx esi +
mov ebx edi +
jns loc_415A99  +
add ecx 0FFFFFFFFh +
or edi 0FFFFFFFFh +
or ecx 0FFFFFFFEh +
mov ebx edi +
add ecx 1 +
adc ebx 0 +
add eax ecx +
mov ecx [esp+18h] +
adc edx ebx +
mov ebx 1 +
mov [ecx] eax +
mov eax [esp+60h] +
mov [ecx+4] edx +
or byte ptr [eax+2Bh] 20h +
jmp loc_415891  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov eax [ebx+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4086D0  +
test eax eax +
jz loc_415B00  +
xor ebp ebp +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+2Fh] +
mov ebp 1 +
mov [esp+8] ebx +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_4084C0  +
cmp eax 10h +
jnz loc_415AF4  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_415AF2  +
mov edi offset aArfilenames +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jz loc_415B6E  +
mov edi offset asc_478E2D +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jnz loc_415C23  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
mov esi eax +
jz loc_415AF2  +
mov edi [eax+4] +
cmp edi 0FFFFFFFFh +
jz loc_415C02  +
mov ebp [ebx+0A0h] +
lea eax [edi+1] +
mov [ebp+1Ch] edi +
mov [esp+4] eax +
mov [esp] ebx +
call sub_404C60  +
mov [ebp+18h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
test eax eax +
jz loc_415C02  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_4084C0  +
cmp eax edi +
jz loc_415C3C  +
call sub_402790  +
cmp eax 1 +
jz loc_415BE0  +
mov dword ptr [esp] 0Ah +
call sub_4029E0  +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_404DD0  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov [esp] esi +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_415AF2  +
***
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_415AF4  +
***
mov eax [ebx+0A0h] +
mov ecx [esi+4] +
mov edi [eax+18h] +
add ecx edi +
mov eax edi +
cmp edi ecx +
jb loc_415C5E  +
jmp loc_415C87  +
cmp dl 5Ch +
jz loc_415C82  +
add eax 1 +
cmp eax ecx +
jz loc_415C87  +
movzx edx byte ptr [eax] +
cmp dl 0Ah +
jnz loc_415C52  +
cmp edi eax +
jnb loc_415CF1  +
xor edx edx +
cmp byte ptr [eax-1] 2Fh +
setz dl  +
neg edx  +
mov byte ptr [eax+edx] 0 +
movzx edx byte ptr [eax] +
jmp loc_415C52  +
***
mov byte ptr [eax] 2Fh +
jmp loc_415C57  +
***
mov byte ptr [ecx] 0 +
mov edi [ebx+0A0h] +
mov [esp] ebx +
call sub_4085F0  +
mov [edi] eax +
mov [edi+4] edx +
mov ebx [ebx+0A0h] +
mov ecx [ebx+4] +
mov edi [ebx] +
sar ecx 1Fh +
xor edi ecx +
mov eax ecx +
cdq   +
mov eax edi +
mov [esp+18h] ecx +
sub eax [esp+18h] +
mov [esp+1Ch] edx +
mov ebp [esp+1Ch] +
and eax 1 +
mov edi eax +
xor edi ecx +
mov edx ebp +
mov eax edi +
mov edi [esp+18h] +
sub eax edi +
sbb edx ebp +
mov ebp 1 +
add eax [ebx] +
adc edx [ebx+4] +
mov [ebx] eax +
mov [ebx+4] edx +
mov [esp] esi +
call free  +
jmp loc_415AF4  +
***
xor edx edx +
jmp loc_415C79  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
xor esi esi +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov eax [eax+4] +
movzx eax byte ptr [eax+1Ah] +
mov [esp+20h] eax +
mov eax [esp+5Ch] +
mov dword ptr [eax] 0 +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jnz loc_415DD9  +
jmp loc_415E3E  +
mov eax [ebx+8Ch] +
mov ebp [ebx] +
test eax eax +
jz loc_415D54  +
test byte ptr [eax+2Bh] 40h +
jnz loc_415D54  +
mov ebp [eax] +
test esi esi +
jz loc_415D68  +
mov [esp+4] ebp +
mov [esp] esi +
call sub_45FC30  +
test eax eax +
jz loc_415DCF  +
movzx eax byte ptr [ebp+0] +
cmp al 5Ch +
jz loc_415E50  +
cmp al 2Fh +
jz loc_415E50  +
test al al +
jz loc_415D88  +
cmp byte ptr [ebp+1] 3Ah +
mov eax ebp +
jz loc_415DB4  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_415E50  +
cmp al 2Fh +
jz loc_415E50  +
test al al +
jz loc_415DAD  +
cmp byte ptr [edx+1] 3Ah +
mov eax ebp +
jz loc_415DB4  +
mov eax ebp +
call sub_414380  +
mov [esp] eax +
call strlen  +
mov esi [esp+54h] +
add edi eax +
test esi esi +
jnz loc_415E57  +
add edi 1 +
mov esi ebp +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_415E36  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_415D40  +
mov eax [ebx] +
mov [esp] eax +
call sub_45EE20  +
test eax eax +
jz loc_4160D0  +
mov [esp] eax +
mov [esp+18h] eax +
call strlen  +
mov edx [esp+18h] +
cmp [esp+20h] eax +
mov ebp eax +
jnb loc_415E65  +
mov eax [esp+50h] +
test byte ptr [eax+29h] 80h +
jnz loc_415E61  +
mov ecx [esp+54h] +
add ebp edi +
mov ebx [ebx+90h] +
lea edi [ebp+1] +
add ebp 2 +
test ecx ecx +
cmovnz edi ebp +
test ebx ebx +
jnz loc_415DD9  +
test edi edi +
jnz loc_415EF0  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ebp +
jmp loc_415DB4  +
***
add edi 2 +
mov esi ebp +
jmp loc_415DCF  +
***
mov ebp [esp+20h] +
mov eax [ebx+88h] +
mov [esp+18h] edx +
mov ecx [eax] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] ecx +
mov [esp+1Ch] ecx +
call sub_45FC80  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
test eax eax +
jnz loc_415EAA  +
cmp ebp 0Fh +
ja loc_415DCF  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
cmp [ecx+ebp] al +
jz loc_415DCF  +
mov [esp] ecx +
mov [esp+8] ebp +
mov [esp+4] edx +
mov [esp+18h] ecx +
call memcpy  +
mov ecx [esp+18h] +
cmp [esp+20h] ebp +
jbe loc_415ED7  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [ecx+ebp] al +
jmp loc_415DCF  +
***
cmp ebp 0Fh +
ja loc_415DCF  +
cmp [esp+20h] ebp +
jnz loc_415DCF  +
jmp loc_415EC8  +
***
mov eax [esp+50h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_404C60  +
mov ebp eax +
mov eax [esp+58h] +
test ebp ebp +
mov [eax] ebp +
jz loc_4160D0  +
mov eax [esp+5Ch] +
mov [eax] edi +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jz loc_415E3E  +
mov eax [esp+20h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+1Ch] 0 +
sub eax 1 +
mov [esp+28h] eax +
jmp loc_4160A5  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_415F5E  +
test byte ptr [eax+2Bh] 40h +
jnz loc_415F5E  +
mov eax [eax] +
mov [esp+18h] eax +
mov edx [esp+1Ch] +
test edx edx +
jz loc_415F7E  +
mov eax [esp+18h] +
mov esi [esp+1Ch] +
mov [esp+4] eax +
mov [esp] esi +
call sub_45FC30  +
test eax eax +
jz loc_415FD7  +
mov eax [esp+18h] +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_4160E0  +
cmp al 2Fh +
jz loc_4160E0  +
test al al +
jz loc_415FA5  +
mov eax [esp+18h] +
cmp byte ptr [eax+1] 3Ah +
mov esi eax +
jz loc_415FD7  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_4160E0  +
cmp al 2Fh +
jz loc_4160E0  +
test al al +
jz loc_415FCC  +
cmp byte ptr [edx+1] 3Ah +
mov esi [esp+18h] +
jz loc_415FD7  +
mov eax [esp+18h] +
call sub_414380  +
mov esi eax +
mov [esp] esi +
call strlen  +
cmp [esp+20h] eax +
mov edi eax +
jb loc_415FF5  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_416097  +
mov eax [ebx+88h] +
cmp esi [esp+1Ch] +
mov edx [eax] +
jz loc_41603B  +
lea eax [edi+1] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebp +
mov [esp+24h] edx +
call memcpy  +
mov eax [esp+54h] +
mov edx [esp+24h] +
test eax eax +
jnz loc_4160F0  +
mov byte ptr [ebp+edi+0] 0Ah +
mov ecx [esp+58h] +
mov eax ebp +
sub eax [ecx] +
mov [esp+24h] eax +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edx] al +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_41605A  +
mov eax [ebx+3Ch] +
or eax [ebx+38h] +
jnz loc_416100  +
mov eax [esp+24h] +
add edx 1 +
mov dword ptr [esp+8] offset aLd +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
call sub_414650  +
cmp esi [esp+1Ch] +
jz loc_416097  +
mov eax [esp+18h] +
lea ebp [ebp+edi+1] +
cmp dword ptr [esp+54h] 1 +
mov [esp+1Ch] eax +
sbb ebp 0FFFFFFFFh +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_415E3E  +
mov eax [ebx] +
mov [esp+18h] eax +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_415F48  +
mov eax [esp+18h] +
mov [esp] eax +
call sub_45EE20  +
test eax eax +
mov esi eax +
jnz loc_415FD7  +
nop   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+18h] +
jmp loc_415FD7  +
***
mov byte ptr [ebp+edi+0] 2Fh +
mov byte ptr [ebp+edi+1] 0Ah +
jmp loc_41602F  +
***
mov eax [esp+24h] +
mov dword ptr [esp+8] offset aLd_0 +
mov [esp+2Ch] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
lea eax [edx+1] +
mov [esp] eax +
call sub_414130  +
mov edx [ebx+38h] +
mov dword ptr [esp+8] offset aLd +
lea ecx [edx-3Ch] +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov ecx [esp+28h] +
sub ecx eax +
lea eax [edx+eax+1] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_414650  +
jmp loc_41607D  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset aArfilenames_0 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] eax +
jmp loc_415D00  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset asc_478E56 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
jmp loc_415D00  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov edx [eax+4] +
movzx edi byte ptr [edx+1Ah] +
mov edx [esp+48h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov dword ptr [edx] 0 +
mov edx [esp+44h] +
mov dword ptr [edx] 0 +
mov edx [esp+4Ch] +
mov dword ptr [edx] 0 +
mov ebp [eax+94h] +
test ebp ebp +
jz loc_416249  +
mov eax [ebp+0] +
mov [esp] eax +
call sub_45EE20  +
test eax eax +
jz loc_416285  +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_41623F  +
xor ecx ecx +
xor ebx ebx +
jmp loc_416222  +
mov ecx esi +
cmp dl 20h +
movzx edx byte ptr [eax+ecx+1] +
cmovz ebx edi +
lea esi [ecx+1] +
test dl dl +
jnz loc_416220  +
and ebx 1 +
jnz loc_416256  +
cmp [esp+1Ch] esi +
jb loc_416256  +
mov ebp [ebp+90h] +
test ebp ebp +
jnz loc_416203  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+88h] +
add ecx 4 +
and ecx 0FFFFFFFCh +
mov edx [eax] +
mov [eax+8] ecx +
mov eax [esp+1Ch] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset a1Lu +
mov [esp] edx +
mov [esp+4] eax +
call sub_414650  +
jmp loc_41623F  +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+88h] +
mov eax [eax] +
mov [esp+8] edx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_408570  +
cmp eax 3Ch +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov eax [esi+88h] +
mov ebx [eax] +
cmp byte ptr [ebx] 23h +
jz loc_416311  +
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_408570  +
cmp eax 3Ch +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [ebx+1] 31h +
jnz loc_4162E8  +
cmp byte ptr [ebx+2] 2Fh +
jnz loc_4162E8  +
movzx eax byte ptr [ebx+3] +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_4162E8  +
mov eax [esi] +
mov [esp] eax +
call sub_45EE20  +
mov [esp] eax +
mov ebp eax +
call strlen  +
mov edx [esi+88h] +
mov edi eax +
lea eax [eax+3] +
and eax 0FFFFFFFCh +
cmp [edx+8] eax +
jz loc_416374  +
mov dword ptr [esp+4] 73Dh +
mov dword ptr [esp] offset a____Binutil_21 +
mov [esp+0Ch] eax +
call sub_402930  +
mov edx [esi+88h] +
mov eax [esp+0Ch] +
add eax [edx+4] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [ebx+30h] +
mov [esp] eax +
call sub_4146F0  +
test eax eax +
jnz loc_416399  +
xor eax eax +
jmp loc_416309  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_408570  +
cmp eax 3Ch +
jnz loc_416392  +
mov eax [esp+30h] +
mov [esp+4] edi +
mov [esp] ebp +
mov [esp+8] eax +
call sub_408570  +
cmp eax edi +
jnz loc_416392  +
and edi 3 +
mov eax 1 +
jz loc_416309  +
mov eax [esp+30h] +
mov ebx 4 +
sub ebx edi +
mov [esp+4] ebx +
mov dword ptr [esp] offset unk_478F47 +
mov [esp+8] eax +
call sub_408570  +
cmp ebx eax +
setz al  +
movzx eax al +
jmp loc_416309  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov esi [esp+44h] +
mov eax [eax+88h] +
test eax eax +
jz loc_4164EA  +
mov ebx [eax] +
test ebx ebx +
jz loc_4164E3  +
lea ebp [ebx+10h] +
lea edi [esp+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+24h] eax +
jz loc_4164E3  +
lea ebp [ebx+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ah] ax +
jz loc_4164E3  +
lea ebp [ebx+22h] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ch] ax +
jz loc_4164E3  +
add ebx 28h +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strtol  +
cmp ebx [esp+1Ch] +
mov [esi+6] ax +
jz loc_4164E3  +
mov eax [esp+40h] +
mov eax [eax+88h] +
mov eax [eax+4] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_4164DB  +
***
mov dword ptr [esp] 5 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
jmp loc_4164DB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edi [esp+38h] +
mov [esp] eax +
call sub_45EE20  +
mov edx eax +
mov eax [ebp+4] +
mov [esp+0Ch] edx +
movzx esi byte ptr [eax+1Ah] +
mov [esp] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp esi eax +
mov ebx eax +
jb loc_416560  +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp esi ebx +
jbe loc_416558  +
mov eax [ebp+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+38h] esi +
mov [esp+30h] edi +
mov [esp+34h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov edi [esp+38h] +
mov edx [ebx+4] +
test byte ptr [ebx+29h] 80h +
movzx ebp byte ptr [edx+1Ah] +
jnz loc_4165E4  +
mov [esp] eax +
call sub_45EE20  +
test eax eax +
mov edx eax +
jz loc_416606  +
mov eax ebp +
mov [esp] edx +
movzx ebp al +
mov [esp+0Ch] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp ebp eax +
mov esi eax +
jnb loc_4165F0  +
cmp esi 0Fh +
ja loc_4165DC  +
cmp esi ebp +
jnz loc_4165DC  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+esi] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_416500  +
***
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp ebp esi +
ja loc_4165D2  +
jmp loc_4165C9  +
***
mov dword ptr [esp+8] offset aBfd_dont_trunc +
mov dword ptr [esp+4] 818h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_402960  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov [esp] eax +
call sub_45EE20  +
mov edi eax +
mov eax [ebp+4] +
movzx ebx byte ptr [eax+1Ah] +
mov [esp] edi +
call strlen  +
cmp ebx eax +
mov esi eax +
jb loc_416690  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov ebx esi +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp ebx 0Fh +
ja loc_416687  +
mov eax [ebp+4] +
mov edx [esp+38h] +
movzx eax byte ptr [eax+19h] +
mov [edx+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp byte ptr [edi+esi-2] 2Eh +
jnz loc_416674  +
cmp byte ptr [edi+esi-1] 6Fh +
jnz loc_416674  +
mov eax [esp+38h] +
mov byte ptr [eax+ebx-2] 2Eh +
mov byte ptr [eax+ebx-1] 6Fh +
jmp loc_416674  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_14] 0 +
test eax eax +
jz loc_4166F4  +
mov edx eax +
and edx 1 +
lea eax [edx+eax+3Ch] +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_4C] 6000h +
call sub_407460  +
mov edi eax +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edi edi +
jz loc_41699A  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
test eax eax +
mov [esp+4Ch+var_10] eax +
jz loc_416970  +
mov eax [esp+4Ch+arg_0] +
mov edx offset a___symdef_1 +
mov ebp [eax+94h] +
mov eax 0Ah +
test ebp ebp +
jnz loc_416768  +
jmp loc_4169D4  +
mov ebp [ebp+90h] +
mov edi [esp+4Ch+arg_0] +
test ebp ebp +
mov [edi+94h] ebp +
jz loc_4169D4  +
mov esi [ebp+0] +
mov edi edx +
mov ecx eax +
cmps   +
jz loc_416750  +
xor ebx ebx +
xor esi esi +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 400h +
jmp loc_41679F  +
mov ebp [ebp+90h] +
test ebp ebp +
jz loc_416A46  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] ebp +
call sub_405A00  +
test eax eax +
jz loc_416791  +
test byte ptr [ebp+29h] 2 +
jz loc_416791  +
mov eax [ebp+4] +
mov eax [eax+104h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_18] eax +
js loc_416960  +
jz loc_41694A  +
cmp eax ebx +
jle loc_416A36  +
test ebx ebx +
jz loc_4167F1  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call sub_407460  +
test eax eax +
mov [esp+4Ch+var_34] eax +
jz loc_416964  +
mov eax [ebp+4] +
mov ebx [esp+4Ch+var_34] +
mov eax [eax+108h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_28] eax +
js loc_416964  +
jz loc_416946  +
mov [esp+4Ch+var_20] ebp +
xor ebx ebx +
mov ebp esi +
jmp loc_4168D4  +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_48] 4 +
mov edi eax +
lea eax [ebp+ebp*2+0] +
lea esi [ecx+eax*8] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
test eax eax +
mov [esi] eax +
mov [esp+4Ch+var_30] eax +
jz loc_416964  +
lea eax [edi+1] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
mov edx [esp+4Ch+var_30] +
mov [edx] eax +
mov eax [esi] +
mov eax [eax] +
test eax eax +
jz loc_416964  +
mov ecx [esp+4Ch+var_34] +
add ebp 1 +
mov edx [ecx+ebx*4] +
mov edx [edx+4] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call strcpy  +
mov eax [esp+4Ch+var_20] +
mov [esi+8] eax +
mov eax [esp+4Ch+var_2C] +
mov [esi+10h] eax +
lea eax [eax+edi+1] +
mov [esp+4Ch+var_2C] eax +
add ebx 1 +
cmp ebx [esp+4Ch+var_28] +
jz loc_416940  +
mov eax [esp+4Ch+var_34] +
mov edx [eax+ebx*4] +
test dword ptr [edx+0Ch] 802082h +
mov eax [edx+10h] +
jnz loc_4168ED  +
test byte ptr [eax+15h] 10h +
jz loc_4168CB  +
cmp eax offset off_4731C8 +
jz loc_4168CB  +
cmp ebp [esp+4Ch+var_1C] +
jz loc_4169A2  +
mov eax [edx+4] +
mov edi offset a__gnu_lto_sl_0 +
mov ecx 0Fh +
mov esi eax +
cmps   +
jnz loc_416840  +
mov eax [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset aSPluginNeede_0 +
mov [esp+4Ch+var_48] eax +
call off_4730E4  +
mov eax [esp+4Ch+var_34] +
mov eax [eax+ebx*4] +
mov eax [eax+4] +
jmp loc_416840  +
mov esi ebp +
mov ebp [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_18] +
mov eax [ebp+4] +
mov eax [eax+98h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
jnz loc_416791  +
test ebx ebx +
jz loc_416970  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_416A3F  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_404DD0  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+ebp+0] +
mov [esp+4Ch+var_1C] eax +
lea eax [eax+ebp*4] +
shl eax 3 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call sub_4074F0  +
test eax eax +
jz loc_416964  +
mov edi [esp+4Ch+var_34] +
mov [esp+4Ch+var_24] eax +
mov edx [edi+ebx*4] +
jmp loc_4168FE  +
mov eax [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+var_24] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_44] ebx +
mov ebx [esp+4Ch+var_14] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] ebx +
mov ebx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov esi eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_404DD0  +
add esp 4Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_18] ebx +
jmp loc_416809  +
xor eax eax +
jmp loc_41699A  +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_2C] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_3C] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] edi +
call eax  +
test ebx ebx +
mov esi eax +
jz loc_416A0C  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
jmp loc_416A0C  +
***
push ebp  +
mov eax 203Ch +
push edi  +
push esi  +
push ebx  +
call sub_46FB40  +
sub esp eax +
mov eax [esp+2050h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+2Ch] 0 +
movzx eax byte ptr [eax+2Bh] +
mov [esp+1Bh] al +
mov eax [esp+2050h] +
shr byte ptr [esp+1Bh] 5 +
and byte ptr [esp+1Bh] 1 +
mov edi [eax+94h] +
test edi edi +
jz loc_416FAA  +
test byte ptr [edi+28h] 10h +
jnz loc_416D51  +
xor esi esi +
mov ebp [esp+2050h] +
mov ebx esi +
jmp loc_416B14  +
mov edi [edi+90h] +
test edi edi +
jz loc_416B4A  +
test byte ptr [edi+28h] 10h +
jnz loc_416D51  +
mov eax [edi+88h] +
test eax eax +
jz loc_416B95  +
test ebx ebx +
jnz loc_416B00  +
cmp byte ptr [esp+1Bh] 0 +
jz loc_416B00  +
mov [esp] edi +
xor ebx ebx +
mov dword ptr [esp+4] 1 +
call sub_405A00  +
mov edi [edi+90h] +
test eax eax +
setnz bl  +
test edi edi +
jnz loc_416B0A  +
mov esi ebx +
mov eax [esp+2050h] +
lea edx [esp+2Ch] +
mov ecx [esp+2050h] +
mov eax [eax+4] +
mov eax [eax+0E0h] +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
lea edx [esp+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
test eax eax +
jnz loc_416DC0  +
xor eax eax +
add esp 203Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test byte ptr [edi+2Ah] 1 +
mov eax [edi] +
jnz loc_416D80  +
lea ecx [esp+30h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
jnz loc_416ED3  +
test byte ptr [ebp+2Ah] 4 +
jz loc_416BE0  +
xor eax eax +
xor esi esi +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov dword ptr [esp+54h] 0 +
mov [esp+3Ah] si +
mov [esp+36h] ax +
mov dword ptr [esp] 64h +
call sub_4075F0  +
test eax eax +
mov esi eax +
jz loc_416EE0  +
lea edx [eax+28h] +
mov dword ptr [eax+28h] 20202020h +
mov dword ptr [eax+2Ch] 20202020h +
mov dword ptr [eax+30h] 20202020h +
mov dword ptr [eax+34h] 20202020h +
mov dword ptr [eax+38h] 20202020h +
mov dword ptr [eax+3Ch] 20202020h +
mov dword ptr [eax+40h] 20202020h +
mov dword ptr [eax+44h] 20202020h +
mov dword ptr [eax+48h] 20202020h +
mov dword ptr [eax+4Ch] 20202020h +
mov dword ptr [eax+50h] 20202020h +
mov dword ptr [eax+54h] 20202020h +
mov dword ptr [eax+58h] 20202020h +
mov dword ptr [eax+5Ch] 20202020h +
mov dword ptr [eax+60h] 20202020h +
mov eax [esp+54h] +
mov dword ptr [esp+8] offset a12ld +
mov dword ptr [esp+4] 0Ch +
mov [esp+1Ch] edx +
mov [esp+0Ch] eax +
lea eax [esi+38h] +
mov [esp] eax +
call sub_414650  +
movsx eax word ptr [esp+3Ah] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+44h] +
mov [esp] eax +
call sub_414650  +
movsx eax word ptr [esp+3Ch] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+4Ah] +
mov [esp] eax +
call sub_414650  +
movzx eax word ptr [esp+36h] +
mov dword ptr [esp+8] offset a8lo +
mov dword ptr [esp+4] 8 +
mov [esp+0Ch] eax +
lea eax [esi+50h] +
mov [esp] eax +
call sub_414650  +
mov eax [esp+48h] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [esi+58h] +
mov [esp] eax +
call sub_4146F0  +
mov edx [esp+1Ch] +
test eax eax +
jz loc_416EEF  +
mov ecx 0A60h +
mov [esi+62h] cx +
mov eax [esp+48h] +
mov ecx [edi] +
mov [esi] edx +
mov [esi+4] eax +
mov eax [ebp+4] +
mov [edi+88h] esi +
mov eax [eax+0E4h] +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] ebp +
call eax  +
jmp loc_416B1E  +
***
mov dword ptr [esp] 5 +
call sub_4029E0  +
call sub_402790  +
mov [esp+4] edi +
mov dword ptr [esp] 14h +
mov [esp+8] eax +
call sub_4029E0  +
jmp loc_416B88  +
***
lea eax [esp+54h] +
mov esi [edi+8] +
mov [esp] eax +
call time  +
xor eax eax +
mov [esp+3Ah] ax +
xor eax eax +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov [esp+36h] ax +
mov eax [esi] +
mov dword ptr [esp+4Ch] 0 +
mov [esp+48h] eax +
jmp loc_416BBA  +
***
mov eax [esp+2050h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_4086D0  +
test eax eax +
jnz loc_416B88  +
mov ecx [esp+2050h] +
mov edx offset aThin +
mov eax offset aArch +
test byte ptr [ecx+2Bh] 40h +
mov [esp+8] ecx +
mov dword ptr [esp+4] 8 +
cmovnz eax edx +
mov [esp] eax +
call sub_408570  +
cmp eax 8 +
jnz loc_416B88  +
mov eax esi +
and al [esp+1Bh] +
mov [esp+1Bh] al +
jnz loc_416FF0  +
mov esi [esp+28h] +
test esi esi +
jnz loc_417014  +
mov eax [esp+2050h] +
mov edi [eax+94h] +
test edi edi +
jz loc_416E92  +
mov eax [edi+88h] +
mov ecx [esp+2050h] +
mov ebx [eax+4] +
mov eax [edi+4] +
mov eax [eax+0F0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_416B88  +
mov eax [esp+2050h] +
test byte ptr [eax+2Bh] 40h +
jz loc_416EF9  +
mov edi [edi+90h] +
test edi edi +
jnz loc_416E51  +
cmp byte ptr [esp+1Bh] 0 +
mov esi 5 +
mov ebx [esp+2050h] +
jz loc_416EC9  +
mov eax [ebx+4] +
mov eax [eax+100h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_416EC9  +
mov dword ptr [esp] offset aWarningWriting +
call off_4730E4  +
sub esi 1 +
jnz loc_416EA5  +
mov eax 1 +
jmp loc_416B8A  +
***
mov dword ptr [esp] 1 +
call sub_4029E0  +
nop   +
mov dword ptr [edi+88h] 0 +
jmp loc_416D5D  +
***
mov [esp] esi +
call free  +
jmp loc_416EE0  +
***
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] edi +
call sub_4086D0  +
test eax eax +
jnz loc_416D5D  +
test ebx ebx +
jnz loc_416F57  +
jmp loc_416FB1  +
mov eax [esp+2050h] +
mov [esp+4] ebp +
mov [esp+8] eax +
lea eax [esp+30h] +
mov [esp] eax +
call sub_408570  +
cmp ebp eax +
jnz loc_416B88  +
sub ebx ebp +
jz loc_416FB1  +
cmp ebx 2000h +
mov esi 2000h +
cmovb esi ebx +
call ds:__imp__errno  +
mov dword ptr [eax] 0 +
lea eax [esp+30h] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_4084C0  +
cmp eax esi +
mov ebp eax +
jz loc_416F30  +
call sub_402790  +
cmp eax 1 +
jz loc_416D5D  +
mov dword ptr [esp] 12h +
call sub_4029E0  +
jmp loc_416D5D  +
***
xor esi esi +
jmp loc_416B4C  +
***
mov eax [edi+88h] +
test byte ptr [eax+4] 1 +
jz loc_416E88  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 478D8Bh +
mov [esp+8] eax +
call sub_408570  +
cmp eax 1 +
jz loc_416E88  +
jmp loc_416B88  +
***
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+2050h] +
mov [esp] eax +
call sub_4166D0  +
test eax eax +
jnz loc_416E34  +
jmp loc_416B88  +
***
mov ebp [esp+2Ch] +
lea edi [esp+30h] +
add esi 1 +
mov dword ptr [esp+30h] 20202020h +
and esi 0FFFFFFFEh +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
mov [esp] ebp +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
call strlen  +
mov [esp+4] ebp +
mov [esp] edi +
mov [esp+8] eax +
call memcpy  +
lea eax [esp+60h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_4146F0  +
test eax eax +
jz loc_416B88  +
mov eax 0A60h +
mov [esp+6Ah] ax +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+8] eax +
call sub_408570  +
cmp eax 3Ch +
jnz loc_416B88  +
mov eax [esp+2050h] +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_408570  +
cmp eax [esp+28h] +
jnz loc_416B88  +
test al 1 +
jz loc_416E40  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 478D8Bh +
mov [esp+8] eax +
call sub_408570  +
cmp eax 1 +
jnz loc_416B88  +
jmp loc_416E40  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+0B0h] +
mov ecx [esp+0ACh] +
mov ebx [esp+0A0h] +
mov edi eax +
and edi 1 +
add eax edi +
mov ebp [ebx+94h] +
lea esi ds:0[ecx*8] +
mov [esp+24h] edi +
lea edi [esi+eax+8] +
mov [esp+20h] eax +
mov eax [ebx+0A0h] +
test byte ptr [ebx+2Ah] 4 +
mov dword ptr [eax+20h] 0 +
jz loc_4174F0  +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov dword ptr [esp+70h] 20202020h +
mov dword ptr [esp+74h] 20202020h +
mov dword ptr [esp+78h] 20202020h +
mov dword ptr [esp+40h] 532E5F5Fh +
mov dword ptr [esp+44h] 45444D59h +
mov byte ptr [esp+48h] 46h +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov eax [eax+20h] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
mov [esp+0Ch] eax +
lea eax [esp+50h] +
mov [esp] eax +
call sub_414650  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_414650  +
lea eax [esp+62h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_414650  +
lea eax [esp+70h] +
mov [esp+8] edi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_4146F0  +
test eax eax +
jnz loc_4172E0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+40h] +
mov ecx 0A60h +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
mov [esp+7Ah] cx +
call sub_408570  +
cmp eax 3Ch +
jnz loc_4172CC  +
mov eax [ebx+4] +
lea ecx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] esi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_408570  +
cmp eax 4 +
jnz loc_4172CC  +
mov edx [esp+0ACh] +
test edx edx +
jz loc_417570  +
mov eax [esp+0A4h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+0A0h] ebx +
lea eax [edi+eax+44h] +
mov [esp+18h] eax +
mov eax [esp+0A8h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
mov ecx [esp+18h] +
mov ebx [esp+1Ch] +
mov eax [eax+8] +
cmp eax ebp +
mov [esp+10h] eax +
jz loc_4173C0  +
nop   +
mov edx [ebp+88h] +
mov ebp [ebp+90h] +
mov eax [edx+4] +
add eax [edx+8] +
xor edx edx +
add eax 3Ch +
add eax ecx +
adc edx ebx +
mov ebx eax +
and ebx 1 +
xor edi edi +
add eax ebx +
adc edx edi +
mov ecx eax +
cmp [esp+10h] ebp +
mov ebx edx +
jnz loc_417390  +
mov [esp+18h] ecx +
mov eax ebx +
xor ecx ecx +
or eax ecx +
mov dword ptr [esp+1Ch] 0 +
jnz loc_417520  +
mov eax [esp+0A0h] +
lea ecx [esp+38h] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+28h] +
mov edx [ecx+10h] +
mov [esp] edx +
call eax  +
mov eax [esp+0A0h] +
lea ecx [esp+3Ch] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp] ecx +
call eax  +
mov eax [esp+0A0h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+38h] +
mov [esp] eax +
call sub_408570  +
cmp eax 8 +
jnz loc_4172CC  +
add dword ptr [esp+2Ch] 1 +
mov eax [esp+2Ch] +
add dword ptr [esp+28h] 18h +
cmp eax [esp+0ACh] +
jnz loc_417377  +
mov ebx [esp+0A0h] +
lea edi [esp+34h] +
mov eax [ebx+4] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_408570  +
cmp eax 4 +
jnz loc_4172CC  +
xor edx edx +
mov ebp [esp+0A8h] +
mov [esp+0A0h] ebx +
mov ebx edx +
jmp loc_4174BF  +
add ebx 1 +
add ebp 18h +
cmp ebx [esp+0ACh] +
jz loc_417531  +
mov eax [ebp+0] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea esi [eax+1] +
mov eax [esp+0A0h] +
mov [esp+4] esi +
mov [esp+8] eax +
call sub_408570  +
cmp eax esi +
jz loc_4174B0  +
jmp loc_4172CC  +
***
mov eax [ebx] +
lea ecx [esp+40h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
mov eax [ebx+0A0h] +
jnz loc_4171B6  +
mov ecx [esp+64h] +
lea edx [ecx+3Ch] +
mov [eax+20h] edx +
jmp loc_4171B6  +
***
mov dword ptr [esp] 12h +
call sub_4029E0  +
jmp loc_4172CC  +
***
mov ebx [esp+0A0h] +
mov eax [esp+24h] +
test eax eax +
jnz loc_41754A  +
mov eax 1 +
jmp loc_4172CE  +
***
mov [esp+8] ebx +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_478EE0 +
call sub_408570  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_4172CE  +
***
mov eax [ebx+4] +
lea edi [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_408570  +
cmp eax 4 +
jnz loc_4172CC  +
jmp loc_417538  +
***
push esi  +
push ebx  +
sub esp 84h +
mov ebx [esp+90h] +
test byte ptr [ebx+2Ah] 4 +
jz loc_4175D3  +
mov eax 1 +
add esp 84h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] ebx +
call sub_408660  +
lea eax [esp+10h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_408680  +
cmp eax 0FFFFFFFFh +
jz loc_4176B0  +
mov eax [ebx+0A0h] +
mov edx [esp+34h] +
cmp edx [eax+20h] +
jle loc_4175C5  +
add edx 3Ch +
lea esi [esp+54h] +
mov [eax+20h] edx +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
call sub_414650  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 18h +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_417692  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
call sub_408570  +
cmp eax 0Ch +
jz loc_4176C1  +
mov dword ptr [esp] offset aWritingUpdated +
call sub_402830  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] offset aReadingArchive +
call sub_402830  +
jmp loc_4175C5  +
***
xor al al +
jmp loc_4175CA  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebp [esp+9Ch] +
mov dword ptr [esp+4] 0Ah +
mov esi [esp+90h] +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
lea ebx ds:4[ebp*4] +
add ebx [esp+0A0h] +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov eax ebx +
and eax 1 +
cmp eax 1 +
sbb ebx 0FFFFFFFFh +
mov [esp+20h] eax +
lea eax [esp+64h] +
mov [esp+8] ebx +
mov [esp] eax +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov byte ptr [esp+34h] 2Fh +
call sub_4146F0  +
test eax eax +
jz loc_417862  +
xor eax eax +
test byte ptr [esi+2Ah] 4 +
jz loc_417870  +
mov [esp+0Ch] eax +
lea eax [esp+44h] +
mov [esp] eax +
lea edi [esp+34h] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
call sub_414650  +
lea eax [esp+50h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_414650  +
lea eax [esp+56h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_414650  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset a7lo +
mov dword ptr [esp+4] 8 +
call sub_414650  +
mov edx 0A60h +
mov [esp+8] esi +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+6Eh] dx +
call sub_408570  +
cmp eax 3Ch +
jz loc_417881  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 0 +
call time  +
jmp loc_4177AB  +
***
mov [esp+4] ebp +
mov [esp] esi +
call sub_407680  +
test eax eax +
jz loc_417862  +
mov eax [esi+94h] +
test ebp ebp +
mov edx eax +
mov [esp+24h] eax +
jz loc_417A0A  +
mov eax [esp+94h] +
mov dword ptr [esp+1Ch] 0 +
lea eax [ebx+eax+44h] +
xor ebx ebx +
test edx edx +
mov [esp+18h] eax +
jz loc_41795A  +
cmp ebp ebx +
jbe loc_417930  +
mov edx [esp+98h] +
lea eax [ebx+ebx*2] +
lea edx [edx+eax*8] +
mov eax [edx+8] +
cmp eax [esp+24h] +
mov [esp+10h] eax +
jnz loc_417930  +
mov ecx [esp+1Ch] +
mov eax [esp+18h] +
test ecx ecx +
mov [esp+14h] eax +
jnz loc_4179F2  +
mov edi edx +
add ebx 1 +
jmp loc_417919  +
cmp ebx ebp +
jz loc_417930  +
mov eax [edi+20h] +
add edi 18h +
cmp eax [esp+10h] +
lea ecx [ebx+1] +
jnz loc_417930  +
mov eax [esp+14h] +
mov ebx ecx +
mov [esp+4] eax +
mov [esp] esi +
call sub_407680  +
test eax eax +
jnz loc_417900  +
jmp loc_417862  +
***
add dword ptr [esp+18h] 3Ch +
adc dword ptr [esp+1Ch] 0 +
test byte ptr [esi+2Bh] 40h +
jz loc_4179B5  +
mov eax [esp+24h] +
cmp ebp ebx +
mov eax [eax+90h] +
mov [esp+24h] eax +
jbe loc_41795A  +
test eax eax +
jnz loc_4178C6  +
mov ecx [esp+98h] +
xor edx edx +
mov [esp+90h] esi +
mov [esp+9Ch] ebp +
mov ebp edx +
mov esi ecx +
jmp loc_417986  +
add ebp 1 +
add esi 18h +
cmp [esp+9Ch] ebp +
jbe loc_417A03  +
mov eax [esi] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea ebx [eax+1] +
mov eax [esp+90h] +
mov [esp+4] ebx +
mov [esp+8] eax +
call sub_408570  +
cmp eax ebx +
jz loc_417977  +
jmp loc_417862  +
***
mov eax [esp+24h] +
xor edx edx +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+88h] +
mov eax [eax+4] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
mov ecx eax +
and ecx 1 +
mov [esp+28h] ecx +
add eax [esp+28h] +
adc edx [esp+2Ch] +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
jmp loc_417940  +
***
mov dword ptr [esp] 12h +
call sub_4029E0  +
jmp loc_417862  +
***
mov esi [esp+90h] +
mov eax [esp+20h] +
test eax eax +
jnz loc_417A1C  +
mov eax 1 +
jmp loc_417864  +
***
mov [esp+8] esi +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_478EE0 +
call sub_408570  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_417864  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_417A6D  +
and eax 7 +
cmp al 2 +
jz loc_417AF1  +
mov eax [ebx+88h] +
test eax eax +
jz loc_417AD1  +
mov esi [eax+18h] +
test esi esi +
jz loc_417AD1  +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov dword ptr [esp+8] 0 +
mov [esp] esi +
mov [esp+14h] edx +
mov [esp+10h] eax +
lea eax [esp+10h] +
mov [esp+4] eax +
call sub_460870  +
test eax eax +
mov edi eax +
jz loc_417AD1  +
mov eax [eax] +
cmp [eax+8] ebx +
jz loc_417AC5  +
mov dword ptr [esp+4] 0AEDh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_402930  +
mov [esp+4] edi +
mov [esp] esi +
call sub_460930  +
test byte ptr [ebx+2Ch] 1 +
jz loc_417AE5  +
mov eax [ebx+9Ch] +
mov eax [eax+24h] +
mov [esp] ebx +
call eax  +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+98h] +
test eax eax +
jnz loc_417B02  +
jmp loc_417B14  +
mov eax esi +
mov esi [eax+90h] +
mov [esp] eax +
call sub_4047F0  +
test esi esi +
jnz loc_417B00  +
mov eax [ebx+0A0h] +
mov esi [eax+8] +
test esi esi +
jz loc_417A6D  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_414630 +
mov [esp] esi +
call sub_460980  +
mov [esp] esi +
call sub_4603C0  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+8] 0 +
jmp loc_417A6D  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
add eax 2 +
cmp eax 0Ah +
ja loc_417BD0  +
jmp ds:off_478F7C[eax*4]  +
mov eax 2 +
add esp 1Ch +
retn   +
mov eax 4 +
add esp 1Ch +
retn   +
mov eax 1 +
add esp 1Ch +
retn   +
mov eax 8 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
mov eax 10h +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aBfd_get_reloc_ +
mov [esp+1Ch+var_18] 1BAh +
mov [esp+1Ch+var_1C] offset a____Binutil_13 +
call sub_402960  +
lea esi [esi+0] +
push ebp  +
mov edx 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+48h+var_14] +
mov ebx [esp+48h+var_C] +
mov esi [esp+48h+var_10] +
mov edi [esp+48h+var_18] +
lea ecx [eax-1] +
mov eax edx +
shl eax cl +
lea eax [eax+eax-2] +
lea ecx [ebx-1] +
or eax 1 +
shl edx cl +
mov ebx eax +
mov ecx esi +
mov ebp eax +
lea edx [edx+edx-2] +
not ebp  +
shl ebx cl +
or edx 1 +
or edx ebx +
mov ebx [esp+48h+var_8] +
mov ecx esi +
and ebx edx +
shr ebx cl +
cmp edi 1 +
jz loc_417C67  +
jb loc_417CA0  +
cmp edi 2 +
jz loc_417C61  +
cmp edi 3 +
nop   +
lea esi [esi+0] +
jnz loc_417C82  +
xor eax eax +
test ebp ebx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shr eax 1 +
mov ebp eax +
not ebp  +
xor eax eax +
and ebx ebp +
jz loc_417C59  +
mov ecx esi +
xor eax eax +
shr edx cl +
and edx ebp +
cmp ebx edx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_40] offset aBfd_check_over +
mov [esp+48h+var_44] 217h +
mov [esp+48h+var_48] offset a____Binutil_13 +
call sub_402960  +
nop   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
mov eax [esi+10h] +
cmp eax offset off_473270 +
jz loc_417E95  +
test ebp ebp +
jz loc_417E50  +
cmp eax offset off_4731C8 +
mov [esp+3Ch+var_1C] 0 +
jz loc_417EB5  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_417D30  +
mov edx [esp+3Ch+arg_14] +
mov edi [esp+3Ch+arg_10] +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] edi +
call eax  +
cmp eax 3 +
jz loc_417D30  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov edi [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_407270  +
mov [esp+3Ch+var_3C] ebp +
mov edx eax +
imul edx edi +
mov [esp+3Ch+var_18] edx +
call sub_417B60  +
mov edx [esp+3Ch+var_18] +
lea edi [edx+eax] +
mov eax [esp+3Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_417E60  +
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+28h] +
test ecx ecx +
jz loc_417E60  +
cmp ecx edi +
mov eax 2 +
jb loc_417D28  +
mov eax [esi+10h] +
xor ecx ecx +
test byte ptr [eax+15h] 10h +
jnz loc_417D90  +
mov ecx [esi+8] +
mov esi [esp+3Ch+arg_10] +
mov edi [eax+3Ch] +
test esi esi +
jz loc_417E80  +
xor esi esi +
cmp dword ptr [ebp+24h] 0 +
jnz loc_417E80  +
mov edi [ebx+8] +
mov [esp+3Ch+var_14] edi +
add edi [eax+38h] +
add ecx edi +
lea eax [ecx+esi] +
mov [esp+3Ch+var_18] eax +
mov eax [ebp+10h] +
test eax eax +
jz loc_417DE9  +
mov eax [esp+3Ch+arg_C] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+3Ch] +
mov ecx [ecx+38h] +
sub [esp+3Ch+var_18] ecx +
mov eax [eax+1Ch] +
sub [esp+3Ch+var_18] eax +
mov eax [ebp+30h] +
test eax eax +
jnz loc_417F24  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_417E1E  +
mov esi [ebp+24h] +
test esi esi +
jz loc_4180C0  +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+arg_0] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_417F30  +
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov ecx [ebp+18h] +
test ecx ecx +
jnz loc_417ED4  +
mov ecx [ebp+4] +
mov ebx [esp+3Ch+var_18] +
mov eax [ebp+8] +
shr ebx cl +
mov ecx [ebp+14h] +
add eax 2 +
shl ebx cl +
cmp eax 6 +
ja loc_4180DA  +
jmp ds:off_478FCC[eax*4]  +
add esp 3Ch +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_417D28  +
jmp loc_417D82  +
test edi edi +
jz loc_417F80  +
mov esi [edi+1Ch] +
nop   +
lea esi [esi+0] +
jmp loc_417DAB  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_4180E4  +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
add esp 3Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+0Ch] 80h +
jnz loc_417CEB  +
cmp [esp+3Ch+arg_10] 1 +
sbb eax eax +
mov [esp+3Ch+var_1C] eax +
and [esp+3Ch+var_1C] 6 +
jmp loc_417CEB  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
jnz loc_417E29  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_3C] eax +
call sub_407180  +
mov ebx [ebp+4] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_30] eax +
mov eax [ebp+0Ch] +
mov [esp+3Ch+var_38] eax +
mov eax [ebp+18h] +
mov [esp+3Ch+var_3C] eax +
call loc_417BF0  +
mov ecx ebx +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_1C] eax +
jmp loc_417E2C  +
mov eax [ebx+4] +
sub [esp+3Ch+var_18] eax +
jmp loc_417DE9  +
mov eax [eax] +
mov ecx 12h +
mov edi offset aCoffIntelLittl +
mov esi eax +
cmps   +
mov [esp+3Ch+var_10] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_417E17  +
mov esi [esp+3Ch+var_10] +
mov edi offset aCoffIntelBig +
mov ecx 0Fh +
cmps   +
jz loc_417E17  +
mov eax [esp+3Ch+var_14] +
sub [esp+3Ch+var_18] eax +
mov dword ptr [ebx+8] 0 +
jmp loc_417E1E  +
xor esi esi +
jmp loc_417DAB  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+3Ch+var_38] esi +
mov esi [ebp+28h] +
and esi eax +
sub esi ebx +
and esi edx +
not edx  +
and edx eax +
or esi edx +
mov [esp+3Ch+var_3C] esi +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_417D28  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+3Ch+var_38] esi +
mov esi [ebp+28h] +
and esi eax +
add ebx esi +
and ebx edx +
not edx  +
and edx eax +
or ebx edx +
mov [esp+3Ch+var_3C] ebx +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_417D28  +
mov [esp+3Ch+var_34] offset aBfd_perform_re +
mov [esp+3Ch+var_38] 3A6h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_402960  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+3Ch+var_38] esi +
mov esi eax +
and si [ebp+28h] +
add ebx esi +
and ebx edx +
not edx  +
and edx eax +
or ebx edx +
movsx ebx bx +
mov [esp+3Ch+var_3C] ebx +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_417D28  +
add edx [esp+3Ch+arg_8] +
movzx esi byte ptr [ebp+28h] +
mov ecx [ebp+2Ch] +
movzx eax byte ptr [edx] +
and esi eax +
add ebx esi +
and ebx ecx +
not ecx  +
and ecx eax +
mov eax [esp+3Ch+var_1C] +
or ebx ecx +
mov [edx] bl +
jmp loc_417D28  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
jmp loc_417FA9  +
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+var_1C] +
jmp loc_417D28  +
mov eax 5 +
jmp loc_417D28  +
test ebp ebp +
jz loc_417E50  +
mov [esp+3Ch+var_1C] 0 +
jmp loc_417CEB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+54h] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
cmp dword ptr [esi+10h] offset off_473270 +
jz loc_4182A0  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_418164  +
mov edx [esp+64h] +
mov edi [esp+50h] +
mov ecx [esp+60h] +
mov [esp+8] esi +
mov [esp+18h] edx +
mov edx [esp+58h] +
sub edx [esp+5Ch] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
cmp eax 3 +
jz loc_418164  +
***
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test esi esi +
jz loc_4182B4  +
mov ecx [ebx+4] +
add eax ecx +
mov [ebx+4] eax +
mov eax [esp+50h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_418452  +
mov eax [esp+24h] +
mov [ebx+8] eax +
mov eax [ebp+18h] +
test eax eax +
jnz loc_418410  +
mov ecx [ebp+4] +
xor ebx ebx +
mov edi [esp+24h] +
mov eax [ebp+8] +
mov esi [esp+58h] +
sub edx [esp+5Ch] +
shr edi cl +
mov ecx [ebp+14h] +
add eax 2 +
add esi edx +
shl edi cl +
cmp eax 6 +
ja sub_418400  +
jmp ds:off_478FF4[eax*4]  +
***
mov eax [esp+60h] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_41815C  +
jmp loc_4181B6  +
***
mov eax [esp+60h] +
mov eax [eax+38h] +
add [ebx+4] eax +
add esp 3Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+24h] +
add [ebx+4] eax +
xor eax eax +
mov [ebx+8] esi +
jmp loc_41815C  +
***
mov eax ebx +
jmp loc_41815C  +
***
mov eax [esp+arg_4C] +
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_41815C  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+arg_0] esi +
mov esi eax +
and si [ebp+28h] +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
movsx edi di +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_41815C  +
***
movzx eax byte ptr [esi] +
mov ecx [ebp+2Ch] +
mov edx eax +
and dl [ebp+28h] +
add edx edi +
and edx ecx +
not ecx  +
and ecx eax +
mov eax ebx +
or edx ecx +
mov [esi] dl +
jmp loc_41815C  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
sub esi edi +
and esi edx +
not edx  +
and edx eax +
or esi edx +
mov [esp+0] esi +
call ecx  +
mov eax ebx +
jmp loc_41815C  +
***
mov eax 5 +
jmp loc_41815C  +
***
mov eax [esp+50h] +
mov [esp+28h] edx +
mov [esp] eax +
call sub_407180  +
mov esi [ebp+4] +
mov ebx [esp+24h] +
mov [esp+8] esi +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
mov eax [ebp+18h] +
mov [esp] eax +
call loc_417BF0  +
mov ecx esi +
mov edx [esp+28h] +
mov ebx eax +
jmp loc_418256  +
***
mov eax [eax] +
mov ecx 12h +
mov edi offset aCoffIntelLittl +
mov esi eax +
cmps   +
mov [esp+2Ch] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_41823F  +
mov esi [esp+2Ch] +
mov edi offset aCoffIntelBig +
mov ecx 0Fh +
cmps   +
jz loc_41823F  +
mov eax [esp+28h] +
mov edi offset aCoffZ8k +
mov ecx 9 +
sub [esp+24h] eax +
mov esi [esp+2Ch] +
cmps   +
jz loc_418246  +
mov dword ptr [ebx+8] 0 +
jmp loc_418246  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
mov edx [ebx+8] +
mov [esp+3Ch+var_30] eax +
mov eax [ebx+14h] +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_2C] eax +
mov eax esi +
neg eax  +
test edx edx +
cmovs esi eax +
call sub_417B60  +
cmp eax 8 +
mov edi eax +
ja loc_4186B0  +
jmp ds:off_479010[eax*4]  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_C] +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_28] eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_4185B4  +
mov ebp [esp+3Ch+var_28] +
and ebp [ebx+28h] +
mov [esp+3Ch+var_24] 0 +
movzx ecx byte ptr [esp+3Ch+var_30] +
mov edx [ebx+2Ch] +
shr esi cl +
movzx ecx byte ptr [esp+3Ch+var_2C] +
mov eax edx +
not eax  +
and eax [esp+3Ch+var_28] +
shl esi cl +
lea ecx [esi+ebp] +
and ecx edx +
or ecx eax +
cmp edi 2 +
jz loc_4187A3  +
jle loc_418750  +
cmp edi 4 +
jz loc_418764  +
cmp edi 8 +
jnz loc_418787  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 60Bh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_402960  +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp+3Ch+var_28] eax +
mov eax [ebx+18h] +
test eax eax +
jz loc_418526  +
mov eax [ebx+0Ch] +
mov ebp 1 +
lea ecx [eax-1] +
mov eax ebp +
shl eax cl +
mov ecx [esp+3Ch+arg_4] +
lea eax [eax+eax-2] +
mov [esp+3Ch+var_24] eax +
or [esp+3Ch+var_24] 1 +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] ecx +
not eax  +
mov [esp+3Ch+var_1C] eax +
call sub_407180  +
movzx ecx byte ptr [esp+3Ch+var_30] +
mov edx [esp+3Ch+var_24] +
shl edx cl +
lea ecx [eax-1] +
or edx 1 +
shl ebp cl +
lea eax [ebp+ebp-2] +
mov ebp [esp+3Ch+var_28] +
or edx eax +
mov eax [esp+3Ch+var_30] +
mov ecx edx +
and ecx esi +
mov [esp+3Ch+var_20] ecx +
mov ecx eax +
shr [esp+3Ch+var_20] cl +
mov ecx [ebx+28h] +
and ebp ecx +
mov [esp+3Ch+var_10] ecx +
mov ecx edx +
and ecx ebp +
mov [esp+3Ch+var_18] ecx +
movzx ecx byte ptr [esp+3Ch+var_2C] +
shr [esp+3Ch+var_18] cl +
mov ecx eax +
mov eax [ebx+18h] +
shr edx cl +
mov [esp+3Ch+var_14] edx +
cmp eax 2 +
jz loc_4186D0  +
cmp eax 3 +
jz loc_4187B0  +
cmp eax 1 +
jz loc_4186DE  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 5EDh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_402960  +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp+3Ch+var_28] eax +
jmp loc_41851B  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 58Dh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_402960  +
lea esi [esi+0] +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 57Dh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_402960  +
lea esi [esi+0] +
mov eax [esp+3Ch+var_24] +
shr eax 1 +
mov [esp+3Ch+var_1C] eax +
not [esp+3Ch+var_1C]  +
mov eax [esp+3Ch+var_1C] +
and eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_24] 0 +
jz loc_418704  +
mov edx [esp+3Ch+var_1C] +
and edx [esp+3Ch+var_14] +
cmp eax edx +
setnz al  +
movzx eax al +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_10] +
movzx ecx byte ptr [esp+3Ch+var_2C] +
mov eax edx +
not eax  +
shr eax 1 +
and eax edx +
mov edx [esp+3Ch+var_18] +
shr eax cl +
mov ecx [esp+3Ch+var_20] +
xor edx eax +
sub edx eax +
mov eax ecx +
xor eax edx +
add edx ecx +
xor edx ecx +
not eax  +
and eax edx +
and eax [esp+3Ch+var_14] +
test [esp+3Ch+var_1C] eax +
mov eax 1 +
cmovz eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_24] eax +
jmp loc_418535  +
cmp edi 1 +
jnz loc_418787  +
mov eax [esp+3Ch+arg_C] +
mov [eax] cl +
mov eax [esp+3Ch+var_24] +
jmp loc_418505  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov edi [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] edi +
call eax  +
mov eax [esp+3Ch+var_24] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 5FDh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_402960  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
jmp loc_41876E  +
mov edx [esp+3Ch+var_18] +
mov ecx [esp+3Ch+var_20] +
mov eax edx +
add edx ecx +
or eax ecx +
and edx [esp+3Ch+var_14] +
or eax edx +
test [esp+3Ch+var_1C] eax +
setnz al  +
movzx eax al +
mov [esp+3Ch+var_24] eax +
jmp loc_418535  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
mov [esp+2Ch+var_2C] edx +
mov edi [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] ecx +
mov ebp [esp+2Ch+arg_14] +
mov [esp+2Ch+var_1C] edx +
mov [esp+2Ch+var_10] eax +
call sub_407270  +
mov [esp+2Ch+var_2C] esi +
mov ebx eax +
call sub_417B60  +
imul ebx edi +
mov edx [esp+2Ch+var_1C] +
mov ecx [esp+2Ch+var_18] +
add ebx eax +
movzx eax byte ptr [edx+28h] +
and eax 18h +
cmp al 10h +
jz loc_418855  +
mov eax [ecx+28h] +
test eax eax +
jz loc_418855  +
cmp eax ebx +
jnb loc_41885C  +
add esp 2Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+24h] +
cmp eax ebx +
jb loc_418848  +
mov ebx [esi+10h] +
add ebp [esp+2Ch+var_10] +
test ebx ebx +
jz loc_41887C  +
mov eax [ecx+3Ch] +
sub ebp [eax+1Ch] +
sub ebp [ecx+38h] +
mov ecx [esi+30h] +
mov eax ebp +
sub eax edi +
test ecx ecx +
cmovnz ebp eax +
add edi [esp+2Ch+var_14] +
mov [esp+2Ch+arg_8] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_C] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4184C0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_14] eax +
call sub_417B60  +
cmp eax 8 +
mov ebx eax +
ja loc_418992  +
jmp ds:off_479044[eax*4]  +
cmp ebx 1 +
jnz loc_4189D0  +
mov eax [esp+2Ch+var_14] +
mov [eax] dl +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 636h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_402960  +
lea esi [esi+0] +
mov eax [esp+2Ch+var_14] +
movzx eax byte ptr [eax] +
mov edx [edi+2Ch] +
mov ecx 0Eh +
mov edi offset a_debug_ranges +
mov esi [esi] +
mov [esp+2Ch+var_10] edx +
not edx  +
and edx eax +
cmps   +
jnz loc_41893F  +
mov eax edx +
or eax 1 +
test byte ptr [esp+2Ch+var_10] 1 +
cmovnz edx eax +
cmp ebx 2 +
jz loc_4189B0  +
jle loc_4188D5  +
cmp ebx 4 +
jz loc_4189F0  +
cmp ebx 8 +
jnz loc_4189D0  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 658h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_402960  +
mov eax [ebp+4] +
mov ecx [esp+2Ch+var_14] +
mov eax [eax+34h] +
mov [esp+2Ch+var_2C] ecx +
call eax  +
jmp loc_418917  +
mov eax [ebp+4] +
mov ecx [esp+2Ch+var_14] +
mov eax [eax+28h] +
mov [esp+2Ch+var_2C] ecx +
call eax  +
jmp loc_418917  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 626h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_402960  +
nop   +
mov eax [ebp+4] +
mov eax [eax+3Ch] +
mov ecx [esp+2Ch+var_14] +
mov [esp+2Ch+arg_0] edx +
mov [esp+2Ch+arg_4] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 64Ah +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_402960  +
lea esi [esi+0] +
mov eax [ebp+4] +
mov eax [eax+30h] +
jmp loc_4189B6  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov edx [edx+148h] +
jmp edx  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+14Ch] +
jmp edx  +
***
sub esp 1Ch +
cmp dword ptr [esp+24h] 225h +
jnz loc_418A77  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_407180  +
mov edx eax +
mov eax offset unk_479260 +
cmp edx 20h +
jz loc_418A8D  +
cmp edx 40h +
jz loc_418A91  +
cmp edx 10h +
jnz loc_418A63  +
mov dword ptr [esp+4] 1E30h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_402930  +
mov dword ptr [esp+4] 1E32h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_402930  +
mov dword ptr [esp+4] 1E35h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_402930  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+4] 1E2Ch +
mov dword ptr [esp] offset a____Binutil_13 +
mov [esp+0Ch] eax +
call sub_402930  +
mov eax [esp+0Ch] +
add esp 1Ch +
retn   +
***
jmp loc_418AC0  +
mov eax [esp+4] +
cmp eax 87Ah +
ja loc_418AD3  +
mov eax ds:off_486CE0[eax*4] +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov edx [esp+28h] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_418B04  +
mov eax [esp+2Ch] +
mov dword ptr [eax] 0 +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [edx+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRM_0 +
call eax  +
jmp loc_418AF1  +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov eax 1 +
mov edx [esp+24h] +
test edx edx +
jz loc_418B4F  +
mov dword ptr [esp] offset aInput_section_ +
call off_4730E4  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+68h] +
mov edi [esp+70h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
mov [esp+4] ebx +
mov [esp] ebp +
call loc_402A30  +
test eax eax +
mov esi eax +
js loc_418D31  +
lea eax [esp+6Ch] +
mov [esp+8] eax +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_40A080  +
test eax eax +
jz loc_418D31  +
test esi esi +
jnz loc_418BD0  +
***
mov eax [esp+arg_68] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call sub_407460  +
test eax eax +
mov esi eax +
mov [esp+2Ch] eax +
jz loc_418D31  +
mov eax [esp+74h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_402A70  +
test eax eax +
js loc_418D25  +
jz loc_418CED  +
mov eax [esi] +
test eax eax +
jz loc_418CED  +
mov [esp+28h] ebp +
mov [esp+70h] edi +
nop   +
***
mov dword ptr [esp+3Ch] 0 +
mov edx [esi] +
mov eax [edx] +
mov eax [eax] +
mov eax [eax+10h] +
test eax eax +
jz loc_418C49  +
cmp eax offset off_473270 +
jz loc_418C49  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jz loc_418E90  +
mov ecx [esp+70h] +
xor eax eax +
mov [esp-5Ch+arg_64] ebx +
mov [esp-5Ch+arg_5C] edx +
test ecx ecx +
cmovnz eax [esp+60h] +
lea ecx [esp+3Ch] +
mov [esp-5Ch+arg_6C] ecx +
mov [esp-5Ch+arg_68] eax +
mov eax [esp-5Ch+arg_C4] +
mov [esp-5Ch+arg_60] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_417CB0  +
mov edx [esp+70h] +
test edx edx +
jz loc_418C9B  +
mov edx [ebx+3Ch] +
mov edi [esi] +
mov ecx [edx+4Ch] +
mov ebp [edx+48h] +
mov [ebp+ecx*4+0] edi +
add ecx 1 +
mov [edx+4Ch] ecx +
test eax eax +
jz loc_418CE0  +
cmp eax 7 +
ja sub_418CB0  +
jmp ds:off_479164[eax*4]  +
***
mov edi [esp+64h] +
mov ecx [esi] +
mov edx [edi+18h] +
mov edx [edx+2Ch] +
mov [esp-5Ch+arg_68] eax +
mov eax [esp+60h] +
mov [esp-5Ch+arg_64] ecx +
mov [esp-5Ch+arg_60] ebx +
mov [esp-5Ch+arg_58] offset aXPBARelocation +
mov [esp-5Ch+arg_5C] eax +
call edx  +
lea esi [esi+0] +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_418C20  +
mov eax [esp+2Ch] +
mov [esp-5Ch+arg_58] eax +
call free  +
jmp loc_418BBE  +
***
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_0 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_38] +
test eax eax +
jz loc_418F06  +
mov edi [esp+arg_60] +
mov ecx [esi] +
mov edx [edi+18h] +
mov ecx [ecx+4] +
mov edi [esp+arg_24] +
mov edx [edx+20h] +
mov [esp+arg_0] eax +
mov eax [esp+arg_60] +
mov [esp+arg_C] ecx +
mov [esp+arg_8] ebx +
mov [esp+arg_4] edi +
mov [esp+0] eax +
call edx  +
test eax eax +
jz loc_418D25  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_418C20  +
jmp loc_418CED  +
***
mov eax [esp+arg_60] +
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_1 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
jmp loc_418D31  +
***
mov eax [esp+arg_60] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov edi eax +
mov eax [esi] +
mov edx [eax+8] +
mov ecx [eax+4] +
mov ebp edx +
mov edx [eax+0Ch] +
mov eax [eax] +
mov edx [edx+20h] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp+arg_18] ecx +
mov ecx [esp+arg_24] +
mov [esp+arg_14] ebx +
mov [esp+arg_C] ebp +
mov [esp+arg_4] eax +
mov eax [esp+arg_60] +
mov [esp+arg_10] ecx +
mov [esp+arg_8] edx +
mov [esp+arg_0] 0 +
mov [esp+0] eax +
call edi  +
test eax eax +
jz loc_418D25  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_418C20  +
jmp loc_418CED  +
***
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_418C49  +
cmp ax 200h +
jz loc_418C49  +
mov eax [esp-5Ch+arg_C4] +
mov edi eax +
mov eax [edx+4] +
mov ebp eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_407270  +
mov edx [esi] +
mov edx [edx+0Ch] +
mov [esp-5Ch+arg_60] ebx +
imul eax ebp +
mov [esp-5Ch+arg_58] edx +
add eax edi +
mov [esp-5Ch+arg_64] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_5C] eax +
call sub_4188A0  +
mov eax [esi] +
mov edx off_47330C +
mov [eax] edx +
mov eax [esi] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] offset unk_4791A0 +
xor eax eax +
jmp loc_418C7E  +
***
mov [esp+arg_0] 1F1Ch +
mov dword ptr [esp+0] offset a____Binutil_13 +
call sub_402930  +
mov eax [esp+arg_38] +
jmp loc_418D4C  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 10h +
mov [esp+1Ch+var_1C] eax +
call sub_408EF0  +
test eax eax +
jz loc_418F52  +
mov dword ptr [eax+0Ch] 0 +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test byte ptr [ebx+2Ch] 1 +
jz loc_418FA0  +
mov esi [ebx+9Ch] +
test esi esi +
jz loc_418FA0  +
mov [esp+14h+var_14] esi +
call sub_408A50  +
mov [esp+14h+var_14] esi +
call free  +
mov dword ptr [ebx+9Ch] 0 +
and byte ptr [ebx+2Ch] 0FEh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+14h+var_10] 30Ch +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_402930  +
mov esi [ebx+9Ch] +
jmp loc_418F79  +
***
sub esp 1Ch +
mov edx [edx+18h] +
retn   +
***
or dword ptr [eax+0Ch] 80h +
***
mov ecx [edx+14h] +
mov dword ptr [eax+10h] offset off_4731C8 +
mov edx [eax+10h] +
test edx edx +
jz loc_4190A1  +
test byte ptr [eax+0Dh] 8 +
jnz sub_419016  +
mov dword ptr [esp+4] 8E9h +
mov dword ptr [esp+0] offset a____Binutil_11 +
call sub_402930  +
jmp sub_419016  +
mov dword ptr [eax+10h] offset off_4731C8 +
mov dword ptr [eax+8] 0 +
add esp 1Ch +
retn   +
mov dword ptr [esp+8] offset aSet_symbol_fro +
mov [esp-1Ch+arg_1C] 8E2h +
mov [esp-1Ch+arg_18] offset a____Binutil_11 +
call sub_402960  +
or dword ptr [eax+0Ch] 800h +
mov dword ptr [eax+10h] offset off_473270 +
mov dword ptr [eax+8] 0 +
jmp sub_419016  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [edx] +
mov eax [ecx] +
mov edi [esp+28h+arg_0] +
cmp ebx eax +
jnb loc_4190F3  +
mov eax [ebp+0] +
test edi edi +
mov [eax+ebx*4] edi +
jz loc_419130  +
add ebx 1 +
mov eax 1 +
mov [esi] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax eax +
jz loc_419120  +
lea edx [eax+eax] +
mov [ecx] edx +
shl eax 3 +
mov edx [ebp+0] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_4074F0  +
test eax eax +
jz loc_419137  +
mov [ebp+0] eax +
mov ebx [esi] +
jmp loc_4190DA  +
mov dword ptr [ecx] 7Ch +
mov ax 1F0h +
jmp loc_4190FF  +
mov eax 1 +
jmp loc_4190EB  +
xor eax eax +
jmp loc_4190EB  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
mov esi [esp+24h+arg_4] +
mov eax [edx+1Ch] +
test eax eax +
jnz loc_419196  +
mov ecx [esi] +
mov dword ptr [edx+1Ch] 1 +
movzx eax byte ptr [ecx+1] +
and eax 18h +
cmp al 18h +
jz loc_419196  +
cmp al 10h +
jz loc_4191D0  +
mov ebx [edx+20h] +
test ebx ebx +
jz loc_4191A1  +
mov eax ebx +
call sub_418FC0  +
mov eax [esi+4] +
or dword ptr [ebx+0Ch] 2 +
mov ecx [esi+8] +
mov [esp+24h+var_24] ebx +
lea edx [eax+7Ch] +
add eax 78h +
call sub_4190C0  +
test eax eax +
jz loc_419204  +
mov eax 1 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+4] +
mov [esp+24h+var_8] edx +
mov ecx [eax+4] +
mov ecx [ecx+10Ch] +
mov [esp+24h+var_24] eax +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_419220  +
mov edx [esp+24h+var_8] +
mov eax [edx+4] +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+4] eax +
jmp loc_419173  +
mov ebx [edx+4] +
mov eax [ecx+20h] +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_8] edx +
call sub_408C80  +
mov edx [esp+24h+var_8] +
test eax eax +
jnz loc_41916C  +
jmp loc_419196  +
mov [esp+24h+var_1C] offset a_bfd_generic_1 +
mov [esp+24h+var_20] 93Fh +
mov [esp+24h+var_24] offset a____Binutil_11 +
call sub_402960  +
xor eax eax +
jmp loc_41919B  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
mov eax [eax+104h] +
mov [esp+14h+var_14] ebx +
call eax  +
test eax eax +
mov esi eax +
js loc_419286  +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call sub_404B80  +
test eax eax +
mov [ebx+78h] eax +
jz loc_419282  +
mov edx [ebx+4] +
mov edx [edx+108h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call edx  +
test eax eax +
js loc_419286  +
mov [ebx+7Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_41925E  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_4192E0  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_408FA0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4192DA  +
mov dword ptr [edx+0Ch] 0 +
mov eax edx +
mov dword ptr [edx+10h] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 1Ch +
mov [esp+18h+var_18] ebx +
call sub_408EF0  +
test eax eax +
jnz loc_4192A0  +
xor eax eax +
jmp loc_4192DA  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_419340  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_419290  +
test eax eax +
jz loc_419354  +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+20h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 24h +
mov [esp+18h+var_18] ebx +
call sub_408EF0  +
test eax eax +
jnz loc_419310  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
test byte ptr [esi+2Ch] 1 +
jnz loc_41937D  +
mov eax [esi+9Ch] +
test eax eax +
jz loc_419391  +
mov [esp+14h+var_10] 1DEh +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_402930  +
mov eax [esp+14h+arg_C] +
mov dword ptr [ebx+1Ch] 0 +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+28h] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_408A20  +
test eax eax +
jz loc_4193D3  +
mov dword ptr [ebx+24h] offset sub_418F60 +
or byte ptr [esi+2Ch] 1 +
mov [esi+9Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_408C80  +
test eax eax +
jz loc_419413  +
mov edx [esp+1Ch+arg_10] +
test edx edx +
jnz loc_41941A  +
add esp 1Ch +
retn   +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_419417  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_C] +
mov ebx [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_10] +
mov edi [ebx+28h] +
mov [esp+3Ch+var_10] eax +
mov eax [esp+3Ch+arg_14] +
test edi edi +
mov [esp+3Ch+var_18] eax +
jz loc_41954E  +
mov ecx [ecx+4] +
movzx eax byte ptr [edx] +
cmp al [ecx+18h] +
mov [esp+3Ch+var_1D] al +
jz loc_419540  +
cmp al [ebx+8] +
jz loc_419540  +
mov ebp edx +
mov [esp+3Ch+var_1D] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_14] edx +
call sub_408C80  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_419548  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 9 +
mov [esp+3Ch+var_3C] eax +
call sub_407460  +
test eax eax +
mov esi eax +
jz loc_419610  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea edx [esi+eax] +
lea eax [esi+eax+7] +
mov dword ptr [edx] 72775F5Fh +
mov dword ptr [edx+4] 5F7061h +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_4193E0  +
mov [esp+3Ch+var_3C] esi +
mov ebx eax +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [edx+1] +
jmp loc_419489  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_419580  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+arg_4] edx +
mov [esp+3Ch+arg_10] edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+arg_0] eax +
mov [esp+3Ch+arg_C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+arg_8] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4193E0  +
mov edi offset a__real_ +
mov ecx 7 +
mov esi ebp +
cmps   +
jnz loc_41954E  +
mov eax [ebx+28h] +
add ebp 7 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call sub_408C80  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_41954E  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 2 +
mov [esp+3Ch+var_3C] eax +
call sub_407460  +
test eax eax +
mov esi eax +
jz loc_419610  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
call strcat  +
mov ecx [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] ecx +
jmp loc_419520  +
xor eax eax +
jmp loc_419538  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
test byte ptr [ecx+15h] 1 +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_24] edx +
jz loc_419890  +
mov eax [esp+44h+arg_0] +
mov ebp [eax+10h] +
mov eax [ebp+94h] +
mov [esp+44h+var_1C] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_419880  +
cmp [ebp+3Ch] edi +
jz loc_419670  +
mov [esp+44h+var_40] 0A32h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_402930  +
mov eax [esp+44h+arg_0] +
mov eax [eax+8] +
cmp [ebp+38h] eax +
jz loc_419690  +
mov [esp+44h+var_40] 0A33h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_402930  +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
cmp [ebp+24h] eax +
jz loc_4196B0  +
mov [esp+44h+var_40] 0A34h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_402930  +
mov eax [esp+44h+var_24] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4198F2  +
mov ecx [esp+44h+arg_4] +
test ecx ecx +
jnz loc_419737  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_419A03  +
mov eax [esp+44h+var_1C] +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
jbe loc_419737  +
mov [esp+44h+var_18] edi +
mov edi ebx +
mov ebx eax +
jmp loc_41970F  +
mov eax [esi+10h] +
cmp eax offset off_4731C8 +
jz loc_41971A  +
test byte ptr [eax+15h] 10h +
jnz loc_41971A  +
cmp eax offset off_473318 +
jz loc_41971A  +
add edi 4 +
cmp ebx edi +
jbe loc_419733  +
mov esi [edi] +
test dword ptr [esi+0Ch] 3882h +
jz loc_4196F1  +
mov edx [esi+14h] +
test edx edx +
jz loc_419950  +
mov eax esi +
add edi 4 +
call sub_418FC0  +
cmp ebx edi +
ja loc_41970F  +
mov edi [esp+44h+var_18] +
mov eax [edi+14h] +
and eax 2100000h +
cmp eax 2000000h +
jnz loc_4197C0  +
mov edx [ebp+24h] +
test edx edx +
jz loc_419942  +
mov eax [esp+44h+var_20] +
test byte ptr [eax+2Bh] 10h +
jz loc_4198B0  +
mov ebx [edi+6Ch] +
test ebx ebx +
jz loc_419A20  +
mov eax [ebp+38h] +
xor esi esi +
test eax eax +
jnz loc_4199E7  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_407270  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_30] edx +
imul esi eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_44] eax +
call sub_4063D0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_419885  +
mov esi [ebp+24h] +
mov eax [ebp+28h] +
cmp esi eax +
cmovb esi eax +
mov [esp+44h+var_44] esi +
call sub_407460  +
test esi esi +
mov ebx eax +
jz loc_4197E1  +
test eax eax +
jz loc_4198E8  +
mov eax [esp+44h+var_1C] +
mov ecx [esp+44h+var_24] +
mov eax [eax+78h] +
mov [esp+44h+var_30] eax +
movzx eax byte ptr [ecx] +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_40] ecx +
and eax 3 +
cmp al 2 +
setz al  +
movzx eax al +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+arg_0] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_403180  +
test eax eax +
mov esi eax +
jz loc_419996  +
mov eax [esp+44h+var_20] +
mov ecx [ebp+38h] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_24] ecx +
call sub_407270  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] esi +
imul eax [esp+44h+var_24] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_4063D0  +
test eax eax +
jz loc_419996  +
test ebx ebx +
jz loc_419880  +
mov [esp+44h+var_44] ebx +
call free  +
nop   +
lea esi [esi+0] +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_40] 0A2Bh +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_402930  +
jmp loc_41963B  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] offset unk_488F5F +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_4063D0  +
test eax eax +
jnz loc_41975F  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4Ch] +
test esi esi +
jz loc_4196C2  +
mov ebx [edi+48h] +
test ebx ebx +
jnz loc_4196C2  +
mov eax [esp+44h+var_20] +
mov eax [eax+4] +
mov edx [eax] +
mov eax [esp+44h+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
mov [esp+44h+var_3C] edx +
mov [esp+44h+var_44] offset aAttemptToDoRel +
mov [esp+44h+var_40] eax +
call off_4730E4  +
mov [esp+44h+var_44] 3 +
call sub_4029E0  +
xor eax eax +
jmp loc_419885  +
xor esi esi +
jmp loc_4197C3  +
cmp dword ptr [esi+10h] offset off_4731C8 +
jz loc_4199B0  +
mov eax [esp+44h+var_24] +
mov edx [esi+4] +
mov eax [eax+1Ch] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_44] eax +
call sub_4193E0  +
mov edx eax +
test edx edx +
jz loc_419708  +
jmp loc_419725  +
test ebx ebx +
jz loc_4198E8  +
mov [esp+44h+var_44] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_419430  +
mov edx eax +
jmp loc_419989  +
mov [esp+44h+var_40] 0A87h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_402930  +
mov esi [ebp+38h] +
jmp loc_419777  +
call sub_419230  +
test eax eax +
jz loc_4198E8  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
jmp loc_4196D9  +
mov [esp+44h+var_40] 0A86h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_402930  +
jmp loc_41976A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_0] +
mov ebx [ebp+4] +
mov ecx [ecx+4] +
movzx eax byte ptr [ebx] +
cmp al [ecx+18h] +
jz loc_419A80  +
cmp al [edx+8] +
jz loc_419A80  +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_419A93  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_419A76  +
mov eax [edx+28h] +
lea esi [ebx+7] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] edx +
call sub_408C80  +
test eax eax +
jz loc_419A76  +
mov eax [ebp+4] +
mov edx [esp+2Ch+var_10] +
cmp ebx eax +
jz loc_419B15  +
movzx eax byte ptr [eax] +
movzx esi byte ptr [ebx+6] +
mov [ebx+6] al +
mov eax [edx+1Ch] +
lea edx [ebx+6] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_4193E0  +
mov ebp eax +
mov eax esi +
test al al +
jz loc_419A76  +
mov [ebx+6] al +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+1Ch] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_4193E0  +
mov ebp eax +
jmp loc_419A76  +
***
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
mov edx [esi+10h] +
test edx edx +
jz loc_419C08  +
mov [esp+14h+var_10] 2A3h +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_402930  +
mov eax [ebx+20h] +
test eax eax +
jz loc_419C12  +
mov [eax+10h] esi +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_419C22  +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+1Ch] esi +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+arg_0] +
lea esi [ebx+1Ch] +
mov edx esi +
nop   +
lea esi [esi+0] +
mov eax [edx] +
test eax eax +
jz loc_419C67  +
test byte ptr [eax+0Ch] 0FDh +
jnz loc_419C70  +
mov ecx [eax+10h] +
mov [edx] ecx +
mov dword ptr [eax+10h] 0 +
cmp eax [ebx+20h] +
jnz loc_419C40  +
cmp edx esi +
jz loc_419C75  +
sub edx 10h +
mov [ebx+20h] edx +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+10h] +
jmp loc_419C40  +
mov dword ptr [ebx+20h] 0 +
jmp loc_419C67  +
***
mov [esp+18h+var_18] 2Ch +
call sub_407460  +
test eax eax +
jz loc_419CC1  +
mov ebx eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_C] 24h +
mov [esp+18h+var_10] offset sub_419300 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_419360  +
test eax eax +
jz loc_419CC5  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_419CBA  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_419CBA  +
***
jmp sub_419CE0  +
***
mov eax [esp+arg_0] +
mov edx [eax+78h] +
test edx edx +
jz loc_419CF1  +
mov eax 1 +
retn   +
jmp sub_419230  +
***
mov eax [esp+4] +
movzx edx word ptr [eax+18h] +
mov dword ptr [eax+3Ch] offset off_473270 +
and dx 0FC7Fh +
or dh 2 +
mov [eax+18h] dx +
mov edx [eax+1Ch] +
mov [eax+38h] edx +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+3Ch+arg_10] +
mov ebp [esp+3Ch+arg_0] +
test edx edx +
jz loc_41A994  +
cmp [esp+3Ch+arg_10] offset off_473318 +
jz loc_41A0F0  +
test [esp+3Ch+arg_C] 2000h +
jnz loc_41A0F0  +
test [esp+3Ch+arg_C] 1000h +
jnz loc_41A850  +
test [esp+3Ch+arg_C] 800h +
jnz loc_41A880  +
cmp [esp+3Ch+arg_10] offset off_4731C8 +
jz loc_41AA0A  +
test byte ptr [esp+3Ch+arg_C] 80h +
jnz loc_41A9AD  +
mov eax [esp+3Ch+arg_10] +
test byte ptr [eax+15h] 10h +
jz loc_41A9C0  +
mov esi [esp+3Ch+arg_8] +
mov edi offset a__gnu_lto_slim +
mov ecx 0Fh +
cmps   +
mov esi 4 +
setnbe dl  +
setb al  +
xor edi edi +
cmp dl al +
jnz loc_41A12F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov [esp+3Ch+var_3C] offset aSPluginNeededT +
mov [esp+3Ch+var_38] eax +
call off_4730E4  +
jmp loc_41A12F  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_419430  +
test eax eax +
mov edi eax +
jz loc_41A320  +
mov esi 5 +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_41A7F0  +
mov eax [esp+3Ch+arg_24] +
mov ebx [eax] +
test ebx ebx +
jz loc_41A7F0  +
cmp byte ptr [ebp+0] 0 +
js loc_41A17A  +
mov eax [ebp+24h] +
test eax eax +
jz loc_41A1B5  +
mov ecx [esp+3Ch+arg_8] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_408C80  +
test eax eax +
jz loc_41A1B5  +
mov eax [ebp+18h] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+28h] +
mov [esp+3Ch+var_24] ecx +
mov ecx [esp+3Ch+arg_14] +
mov [esp+8] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+0Ch] ecx +
call eax  +
test eax eax +
jz loc_41A320  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_41A1C3  +
mov eax [esp+3Ch+arg_24] +
mov [eax] ebx +
movzx edx byte ptr [ebx+0Ch] +
movzx eax dl +
lea eax [eax+esi*8] +
mov eax ds:dword_489260[eax*4] +
cmp eax 14h +
ja loc_41A430  +
jmp ds:off_488FE4[eax*4]  +
cmp dl 5 +
jz loc_41A1FD  +
mov [esp+3Ch+var_38] 609h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402930  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+0Ch] 3 +
mov [esp+8] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_41A320  +
movzx edx byte ptr [ebx+0Ch] +
mov byte ptr [ebx+0Ch] 3 +
mov eax [esp+3Ch+arg_10] +
mov [ebx+14h] eax +
mov eax [esp+3Ch+arg_14] +
and byte ptr [ebx+0Dh] 0FDh +
mov [ebx+18h] eax +
mov eax [esp+3Ch+arg_20] +
test eax eax +
jz loc_41A430  +
mov eax [esp+3Ch+arg_8] +
cmp byte ptr [eax] 5Fh +
jnz loc_41A430  +
add eax 1 +
mov esi eax +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_8] +
movzx ecx byte ptr [eax+1] +
cmp cl 5Fh +
jnz loc_41A286  +
mov eax esi +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 5Fh +
jz loc_41A277  +
mov [esp+3Ch+var_20] eax +
cmp cl 47h +
jnz loc_41A430  +
mov esi [esp+3Ch+var_20] +
mov ecx 7 +
mov edi offset aGlobal_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_41A430  +
mov eax [esp+3Ch+var_20] +
cmp byte ptr [eax+8] 49h +
setz cl  +
cmp byte ptr [eax+8] 44h +
jnz loc_41A9CC  +
mov edi [esp+3Ch+var_20] +
movzx eax byte ptr [edi+9] +
cmp [edi+7] al +
jnz loc_41A430  +
cmp dl 4 +
jz loc_41AA1B  +
mov eax [ebp+18h] +
movzx esi cl +
mov edi [esp+3Ch+arg_14] +
mov edx [ebx+4] +
mov eax [eax+10h] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+8] edx +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+0Ch] edi +
call eax  +
test eax eax +
jnz loc_41A430  +
lea esi [esi+0] +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+10h] +
test eax eax +
jnz loc_41A342  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_41A342  +
mov [ebx+10h] ebx +
mov ebx [ebx+14h] +
jmp loc_41A1C3  +
cmp dl 5 +
jz loc_41A369  +
mov [esp+3Ch+var_38] 6C9h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402930  +
mov eax [ebp+18h] +
mov esi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+0Ch] 6 +
mov [esp+8] esi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_41A320  +
movzx eax byte ptr [edi+0Ch] +
cmp al 6 +
jz loc_41A938  +
test al al +
jnz loc_41A3BE  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [edi+0Ch] 1 +
mov [edi+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call sub_419BE0  +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_41A7E0  +
mov byte ptr [ebx+0Ch] 6 +
mov edx 6 +
xor esi esi +
mov [ebx+14h] edi +
jmp loc_41A1C7  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_38] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jz loc_41A430  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+0Ch] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] edi +
call eax  +
test eax eax +
jz loc_41A320  +
lea esi [esi+0] +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov ecx [ebx+4] +
mov edx [eax+4] +
mov [esp+8] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
call edx  +
test eax eax +
mov esi eax +
jz loc_41A320  +
mov eax [ebx] +
mov edx [esp+3Ch+arg_1C] +
mov [esi] eax +
mov eax [ebx+4] +
test edx edx +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+0Ch] +
mov [esi+0Ch] eax +
mov eax [ebx+10h] +
mov [esi+10h] eax +
mov eax [ebx+14h] +
mov [esi+14h] eax +
mov eax [ebx+18h] +
mov byte ptr [esi+0Ch] 7 +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov eax [esp+3Ch+arg_18] +
jz loc_41A9E0  +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [eax+1] +
mov [esp+3Ch+var_38] edx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_20] edx +
mov [esp+3Ch+var_3C] eax +
call sub_408EF0  +
test eax eax +
mov edi eax +
jz loc_41A320  +
mov edx [esp+3Ch+var_20] +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] edi +
mov [esp+8] edx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov [esi+18h] edi +
mov [esp+8] esi +
mov [esp+3Ch+var_38] ebx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_408E90  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_41A430  +
mov eax [esp+3Ch+arg_24] +
mov [eax] esi +
jmp loc_41A430  +
test byte ptr [ebp+1] 1 +
mov eax ebx +
jz loc_41A860  +
test byte ptr [ebx+0Dh] 1 +
jz loc_41A440  +
mov ecx [ebp+18h] +
cmp dl 7 +
mov ecx [ecx+14h] +
jnz loc_41A53D  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
cmp dl 7 +
jz loc_41A531  +
cmp dl 5 +
ja loc_41A9B9  +
jmp ds:off_489038[edx*4]  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov dword ptr [esp+0Ch] 5 +
jmp loc_41A410  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_41A430  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_41A430  +
mov [ebx+10h] ebx +
jmp loc_41A430  +
test dl dl +
jz loc_41A980  +
mov byte ptr [ebx+0Ch] 5 +
mov [esp+3Ch+var_38] 8 +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_408EF0  +
test eax eax +
mov [ebx+14h] eax +
jz loc_41A320  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_407E70  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_473120 +
mov [esi] edx +
jz loc_41A9E8  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_41A890  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_405F90  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
and byte ptr [ebx+0Dh] 0FDh +
jmp loc_41A430  +
cmp eax 4 +
jnz loc_41A230  +
mov byte ptr [ebx+0Ch] 4 +
jmp loc_41A234  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 2 +
mov [ebx+14h] eax +
jmp loc_41A430  +
mov dword ptr [esp+8] offset a_bfd_generic_l +
mov [esp+3Ch+var_38] 5F3h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402960  +
nop   +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_419BE0  +
jmp loc_41A430  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+0Ch] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov dword ptr [esp+8] 225h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+0Ch] edi +
call eax  +
test eax eax +
jnz loc_41A430  +
jmp loc_41A320  +
mov eax [ebx+18h] +
test eax eax +
jz loc_41A342  +
mov ecx [esp+3Ch+arg_4] +
test byte ptr [ecx+2Ah] 20h +
jnz loc_41A342  +
mov ecx [ebx+4] +
mov edx [ebp+18h] +
mov [esp+3Ch+var_20] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [edx+14h] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+0Ch] ecx +
mov ecx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] ecx +
call edx  +
test eax eax +
jz loc_41A320  +
mov dword ptr [ebx+18h] 0 +
jmp loc_41A342  +
cmp dl 5 +
jz loc_41A73C  +
mov [esp+3Ch+var_38] 68Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402930  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov dword ptr [esp+0Ch] 5 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] edi +
call eax  +
test eax eax +
jz loc_41A320  +
mov eax [ebx+18h] +
cmp [esp+3Ch+arg_14] eax +
jbe loc_41A430  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_407E70  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_473120 +
mov [esi] edx +
jz loc_41A9F9  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_41A8A0  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_405F90  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
jmp loc_41A430  +
mov byte ptr [ebx+0Ch] 6 +
mov [ebx+14h] edi +
jmp loc_41A430  +
cmp esi 1 +
jbe loc_41A8B0  +
mov ecx [esp+3Ch+arg_1C] +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] ecx +
mov ecx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_4193E0  +
mov ebx eax +
test ebx ebx +
jnz loc_41A149  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_41A320  +
mov eax [esp+3Ch+arg_24] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_41A322  +
xor edi edi +
mov esi 6 +
jmp loc_41A12F  +
mov ecx [ebx+10h] +
test ecx ecx +
jnz loc_41A526  +
mov ecx [ebp+1Ch] +
cmp [ecx+20h] ebx +
jnz loc_41A51C  +
jmp loc_41A526  +
xor edi edi +
mov esi 7 +
jmp loc_41A12F  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_41A618  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_41A430  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_419430  +
mov ebx eax +
jmp loc_41A826  +
mov edx [ebx+14h] +
mov edx [edx+4] +
mov edx [edx+94h] +
mov eax [eax+4] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_38] eax +
call ecx  +
test eax eax +
jnz loc_41A430  +
jmp loc_41A320  +
mov edx [ebx+14h] +
mov edx [edx+94h] +
jmp loc_41A8F3  +
mov edx [ebx+14h] +
jmp loc_41A8F3  +
cmp [edi+14h] ebx +
jnz loc_41A3BE  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] offset aBIndirectSymbo +
mov [esp+0Ch] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call off_4730E4  +
mov [esp+3Ch+var_3C] 5 +
call sub_4029E0  +
xor eax eax +
jmp loc_41A322  +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_419BE0  +
jmp loc_41A598  +
mov [esp+3Ch+var_38] 5A8h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402930  +
jmp loc_41A065  +
xor edi edi +
mov esi 3 +
jmp loc_41A12F  +
xor edx edx +
jmp loc_41A8F3  +
xor edi edi +
mov esi 2 +
jmp loc_41A12F  +
test cl cl +
jnz loc_41A2C6  +
jmp loc_41A430  +
mov [esi+18h] eax +
jmp loc_41A4E6  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_41A603  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_41A7C1  +
mov esi [esp+3Ch+arg_C] +
xor edi edi +
shr esi 7 +
and esi 1 +
jmp loc_41A12F  +
mov dword ptr [esp+8] offset a_bfd_generic_l +
mov [esp+3Ch+var_38] 643h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402960  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [eax+78h] +
mov [esp+0A8h+var_74] eax +
mov [esp+0A8h+var_6C] ecx +
test esi esi +
jz loc_41ABF0  +
mov eax [esp+0A8h+var_74] +
mov eax [eax+7Ch] +
lea eax [esi+eax*4] +
cmp eax esi +
mov [esp+0A8h+var_78] eax +
jbe loc_41AB6D  +
mov [esp+0A8h+var_70] ebp +
jmp loc_41AAA3  +
cmp edx offset off_4731C8 +
jz loc_41AC2A  +
test byte ptr [edx+15h] 10h +
jnz loc_41AAB2  +
cmp edx offset off_473318 +
jz loc_41AB9B  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
jbe loc_41AB6D  +
mov ebx [esi] +
mov eax [ebx+0Ch] +
mov edx [ebx+10h] +
test eax 3882h +
jz loc_41AA78  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_41ABA2  +
cmp edx offset off_473318 +
jz loc_41ABA2  +
test ah 10h +
mov edi [esp+0A8h+var_7C] +
jz loc_41AAF0  +
lea edi [esi+4] +
mov ecx edi +
mov edi [esp+0A8h+var_7C] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_41AAF0  +
mov esi [esi+4] +
mov edi [esi+4] +
mov esi ecx +
nop   +
lea ecx [esp+0A8h+var_5C] +
mov ebp [ebx+8] +
mov [esp+0A8h+var_84] ecx +
mov ecx [esp+0A8h+var_6C] +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+var_74] +
mov [esp+0A8h+var_8C] 0 +
mov [esp+0A8h+var_94] ebp +
mov [esp+0A8h+var_88] ecx +
mov ecx [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] eax +
mov eax [esp+0A8h+var_70] +
mov [esp+0A8h+var_98] edx +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_90] ecx +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_5C] 0 +
call sub_41A040  +
test eax eax +
jz loc_41AB72  +
mov edx [ebx+0Ch] +
mov eax [esp+0A8h+var_5C] +
test dh 8 +
jz loc_41AB80  +
test eax eax +
jz loc_41AB59  +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_41AB80  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
mov dword ptr [ebx+14h] 0 +
ja loc_41AAA3  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0A8h+var_70] +
mov ecx [edi+30h] +
mov edi [esp+0A8h+var_74] +
mov edi [edi+4] +
cmp [ecx+4] edi +
jz loc_41ABC4  +
mov [ebx+14h] eax +
jmp loc_41AA96  +
mov edi [ebx+4] +
mov [esp+0A8h+var_7C] edi +
lea ecx [esi+4] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_41AACE  +
mov esi [esi+4] +
mov edi [esp+0A8h+var_7C] +
mov esi [esi+4] +
mov [esp+0A8h+var_7C] esi +
mov esi ecx +
jmp loc_41AAF0  +
mov edi [eax+20h] +
mov ecx [ebx+10h] +
test edi edi +
jz loc_41AC10  +
cmp ecx offset off_4731C8 +
jz loc_41AB93  +
test byte ptr [ecx+15h] 10h +
jnz loc_41ABE1  +
mov [eax+20h] ebx +
jmp loc_41AB93  +
cmp dword ptr [edi+10h] offset off_4731C8 +
jnz loc_41AB93  +
mov [eax+20h] ebx +
jmp loc_41AC1F  +
call sub_419230  +
test eax eax +
jz loc_41AB72  +
mov eax [esp+0A8h+var_74] +
mov esi [eax+78h] +
jmp loc_41AA5C  +
mov ecx [ecx+14h] +
mov [eax+20h] ebx +
and ch 10h +
jz loc_41AB93  +
or dh 2 +
mov [ebx+0Ch] edx +
jmp loc_41AB93  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_41ABA2  +
jmp loc_41AACE  +
push ebx  +
sub esp 18h +
movzx ebx byte ptr [eax+28h] +
and ebx 7 +
cmp ebx 1 +
jz loc_41AC90  +
cmp ebx 2 +
jz loc_41AC68  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ecx ecx +
mov ebx offset loc_41AED0 +
mov ecx offset loc_41AEB0 +
cmovz ebx ecx +
mov [esp+8] ebx +
mov [esp+4] edx +
mov [esp] eax +
call sub_419D40  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
pop ebx  +
jmp loc_41AA40  +
mov edx [esp+8] +
xor ecx ecx +
mov eax [esp+4] +
jmp loc_41AC40  +
mov edx [esp+8] +
mov ecx 1 +
mov eax [esp+4] +
jmp loc_41AC40  +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+2Ch] eax +
mov eax ebx +
mov ebx [ebx+78h] +
mov [esp+28h] ecx +
mov dword ptr [ecx] 0 +
test ebx ebx +
jz loc_41AE2D  +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
mov edi eax +
ja loc_41AD10  +
jmp loc_41AE20  +
mov eax [esi+8] +
add eax [ecx+1Ch] +
cmp eax [edx+18h] +
jbe loc_41AD05  +
mov [edx+18h] eax +
add ebx 4 +
cmp edi ebx +
jbe loc_41AE20  +
mov esi [ebx] +
mov eax [esi+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_41AD24  +
test dword ptr [esi+0Ch] 2082h +
jz loc_41AD05  +
mov edx [esi+4] +
mov eax [ebp+1Ch] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_4193E0  +
test eax eax +
mov edx eax +
jz loc_41AD05  +
movzx eax byte ptr [eax+0Ch] +
mov ecx eax +
and ecx 0FFFFFFFBh +
cmp cl 1 +
jnz loc_41AD05  +
mov ecx [esi+10h] +
test byte ptr [ecx+15h] 10h +
jz loc_41AE40  +
cmp al 1 +
jnz loc_41ACF7  +
mov ecx [edx+14h] +
test ecx ecx +
jz loc_41AE40  +
mov byte ptr [edx+0Ch] 5 +
mov dword ptr [esp+4] 8 +
mov eax [ebp+1Ch] +
mov [esp+20h] edx +
mov [esp+24h] ecx +
mov [esp] eax +
call sub_408EF0  +
mov edx [esp+20h] +
test eax eax +
mov [edx+14h] eax +
jz loc_41AE36  +
mov ecx [esi+10h] +
mov eax [esi+8] +
add eax [ecx+1Ch] +
mov [edx+18h] eax +
mov [esp] eax +
call near ptr dword_407E70  +
mov edx [esp+20h] +
mov ecx [edx+14h] +
cmp eax 4 +
mov [esp+20h] ecx +
mov ecx 4 +
cmova eax ecx +
mov ecx [esp+20h] +
mov [ecx] eax +
mov eax [esi+10h] +
mov ecx [esp+24h] +
mov [esp+24h] edx +
cmp eax offset off_473120 +
jz loc_41AE80  +
mov eax [eax] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_405F90  +
mov esi [esp+20h] +
mov edx [esp+24h] +
mov [esi+4] eax +
mov eax [edx+14h] +
add ebx 4 +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
cmp edi ebx +
ja loc_41AD10  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_419230  +
test eax eax +
jnz loc_41AEA0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+28h] +
lea ecx [esp+2Ch] +
mov edx [esi+4] +
mov dword ptr [eax] 1 +
mov eax [ebp+18h] +
mov eax [eax] +
mov [esp+8] edx +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
test eax eax +
jz loc_41AE36  +
mov ecx [esp+50h] +
mov edx ebp +
mov eax [esp+2Ch] +
call loc_41AA40  +
jmp loc_41AE25  +
mov [esp+0A8h+var_A4] offset aCommon +
mov [esp] ecx +
call sub_405F90  +
mov edx [esp+20h] +
mov [edx+4] eax +
mov edx [esp+24h] +
jmp loc_41AE0B  +
mov eax [esp+2Ch] +
mov ebx [eax+78h] +
jmp loc_41ACE6  +
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp loc_41ACC0  +
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 1 +
jmp loc_41ACC0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebp [esp+58h] +
mov eax [eax+78h] +
test eax eax +
jz loc_41B310  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_41AF20  +
mov edi [esp+54h] +
mov ebx [edi+64h] +
test ebx ebx +
jnz loc_41B050  +
mov eax [esp+54h] +
mov edi [eax+78h] +
mov eax [eax+7Ch] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_41B300  +
mov eax [esp+50h] +
add eax 7Ch +
mov [esp+24h] eax +
mov eax [esp+50h] +
add eax 78h +
mov [esp+28h] eax +
jmp loc_41B002  +
mov edx [ebx+10h] +
cmp edx offset off_4731C8 +
jz loc_41B012  +
test byte ptr [edx+15h] 10h +
jnz loc_41B012  +
xor esi esi +
cmp edx offset off_473318 +
jz loc_41B012  +
movzx eax byte ptr [ebp+1] +
and eax 18h +
cmp al 18h +
jz loc_41AFA6  +
cmp al 10h +
jz loc_41B278  +
mov edx [ebx+0Ch] +
test dl 82h +
jz loc_41B150  +
mov eax [esp+54h] +
cmp [ebx] eax +
jz loc_41B2F0  +
mov eax [ebx+10h] +
xor ecx ecx +
cmp eax offset off_473270 +
jz loc_41AFCA  +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_41B255  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_41AFF5  +
test ecx ecx +
jz loc_41AFF5  +
mov ecx [esp+0A8h+var_4C] +
mov edx [esp+0A8h+var_84] +
mov eax [esp+0A8h+var_80] +
mov [esp+0A8h+var_A8] ebx +
call sub_4190C0  +
test eax eax +
jz loc_41B0A9  +
test esi esi +
jz loc_41AFF5  +
mov dword ptr [esi+1Ch] 1 +
add edi 4 +
cmp [esp+0A8h+var_88] edi +
jbe loc_41B300  +
mov ebx [edi] +
mov eax [ebx+0Ch] +
test eax 3882h +
jz loc_41AF54  +
mov esi [ebx+14h] +
test esi esi +
jz loc_41B206  +
mov ecx [esp+54h] +
mov eax [ebp+30h] +
mov ecx [ecx+4] +
cmp [eax+4] ecx +
jz loc_41B264  +
cmp byte ptr [esi+0Ch] 6 +
ja loc_41B130  +
movzx eax byte ptr [esi+0Ch] +
jmp ds:off_489050[eax*4]  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_41AF20  +
cmp eax [ebx+3Ch] +
jnz loc_41B045  +
mov eax [esp+54h] +
mov edi [esp+54h] +
mov eax [eax+4] +
mov eax [eax+10Ch] +
mov [esp] edi +
call eax  +
test eax eax +
mov ecx eax +
jz loc_41B0A9  +
mov eax [esp+54h] +
mov eax [eax] +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 4001h +
mov [ecx+10h] ebx +
mov [ecx+4] eax +
mov eax [esp+50h] +
mov [esp] ecx +
mov ecx [esp+5Ch] +
lea edx [eax+7Ch] +
add eax 78h +
call sub_4190C0  +
test eax eax +
jnz loc_41AF20  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esi+14h] +
mov eax [ebx+0Ch] +
and eax 0FFFFF77Fh +
or eax 2 +
mov [ebx+0Ch] eax +
mov eax [esi+18h] +
mov [ebx+8] eax +
mov eax [esi+14h] +
mov [ebx+10h] eax +
jmp loc_41AF7B  +
or dword ptr [ebx+0Ch] 80h +
jmp loc_41AF7B  +
mov eax [esi+18h] +
or dword ptr [ebx+0Ch] 2 +
mov [ebx+8] eax +
mov eax [ebx+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_41AF7B  +
cmp eax offset off_4731C8 +
jz loc_41B113  +
mov [esp+3Ch+var_38] 86Ah +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402930  +
mov dword ptr [ebx+10h] offset off_473120 +
jmp loc_41AF7B  +
mov eax [ebx+0Ch] +
and ah 0F7h +
or al 80h +
jmp loc_41B0C1  +
mov dword ptr [esp+8] offset a_bfd_generic_0 +
mov [esp+3Ch+var_38] 850h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402960  +
lea esi [esi+0] +
mov eax [ebx+10h] +
cmp eax offset off_473318 +
jz loc_41B2D0  +
test dl 4 +
jz loc_41B171  +
xor ecx ecx +
test byte ptr [ebp+1] 18h +
setz cl  +
jmp loc_41AFAB  +
cmp eax offset off_4731C8 +
jz loc_41B2D0  +
mov ecx [eax+14h] +
mov [esp+3Ch+var_10] ecx +
and ch 10h +
jnz loc_41B2C6  +
test dl 1 +
jz loc_41B2D7  +
xor ecx ecx +
and dh 10h +
jnz loc_41AFAB  +
movzx edx byte ptr [ebp+1] +
mov cl 1 +
shr dl 5 +
and edx 3 +
cmp edx 1 +
jz loc_41AFAB  +
cmp edx 2 +
jz loc_41B1E7  +
xor cl cl +
test edx edx +
jnz loc_41AFAB  +
movzx edx byte ptr [ebp+0] +
mov ecx 1 +
and edx 3 +
cmp dl 2 +
jz loc_41AFAB  +
test [esp+3Ch+var_10] 800000h +
jz loc_41AFAB  +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_413080  +
xor ecx ecx +
test eax eax +
mov eax [ebx+10h] +
setz cl  +
jmp loc_41AFAB  +
test ah 8 +
jnz loc_41AF7B  +
cmp dword ptr [ebx+10h] offset off_4731C8 +
mov eax [ebx+4] +
jz loc_41B326  +
mov [esp+0A8h+var_98] 1 +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A4] eax +
mov eax [ebp+1Ch] +
mov [esp+0A8h+var_A8] eax +
call sub_4193E0  +
mov esi eax +
test esi esi +
jz loc_41AF7B  +
jmp loc_41B01D  +
mov edx [esp+0A8h+var_58] +
cmp eax [edx+68h] +
setnz al  +
jmp loc_41AFC6  +
mov eax [esi+20h] +
test eax eax +
jz loc_41B030  +
mov [edi] eax +
mov ebx eax +
jmp loc_41B030  +
mov edx [ebx+4] +
mov eax [ebp+20h] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call sub_408C80  +
test eax eax +
jnz loc_41AF8E  +
jmp loc_41AFA6  +
test edx edx +
lea esi [esi+0] +
jnz loc_41B359  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_41B359  +
xor ecx ecx +
jmp loc_41AFAB  +
xor ecx ecx +
jmp loc_41AFB2  +
test dh 8 +
jz loc_41B2A7  +
movzx edx byte ptr [ebp+1] +
xor ecx ecx +
and edx 18h +
cmp dl 18h +
setnz cl  +
jmp loc_41AFAB  +
mov ecx edx +
mov eax [ebx+10h] +
shr ecx 0Ah +
and ecx 1 +
jmp loc_41AFAB  +
mov eax 1 +
jmp loc_41B0AB  +
mov eax [esp+54h] +
call sub_419230  +
test eax eax +
jz loc_41B0A9  +
jmp loc_41AF0A  +
mov [esp+0A8h+var_A0] eax +
mov eax [esp+0A8h+var_58] +
mov [esp+0A8h+var_94] 1 +
mov [esp+0A8h+var_98] 0 +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] ebp +
mov [esp+0A8h+var_A8] eax +
call sub_419430  +
mov esi eax +
jmp loc_41B248  +
mov [esp+0A8h+var_A0] offset a_bfd_generic_0 +
mov [esp+0A8h+var_A4] 8C3h +
mov [esp+0A8h+var_A8] offset a____Binutil_11 +
call sub_402960  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+0F4h+var_A0] +
mov esi [esp+0F4h+var_9C] +
mov ebx [esp+0F4h+var_98] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jnz loc_41B654  +
mov edi [esi+48h] +
test edi edi +
jz loc_41B638  +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F0] 10h +
mov [esp+0F4h+var_F4] eax +
call sub_404B80  +
test eax eax +
mov edi eax +
jz loc_41B47C  +
mov eax [ebx+8] +
mov [edi+4] eax +
mov eax [ebx+10h] +
mov eax [eax] +
mov [esp+0F4h+var_F0] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_418A00  +
test eax eax +
mov [edi+0Ch] eax +
jz loc_41B540  +
cmp dword ptr [ebx+4] 3 +
jz loc_41B486  +
mov eax [ebx+10h] +
mov eax [eax+4] +
mov [esp+0F4h+var_E0] 1 +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_E8] 0 +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A0] +
mov [esp+0F4h+var_F0] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_419430  +
test eax eax +
jz loc_41B43F  +
mov ecx [eax+1Ch] +
test ecx ecx +
jnz loc_41B4C0  +
mov eax [esp+0F4h+var_A0] +
mov edx [ebx+10h] +
mov ecx [esp+0F4h+var_A0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_E8] 0 +
mov [esp+0F4h+var_EC] 0 +
mov [esp+0F4h+var_F0] edx +
mov [esp+0F4h+var_F4] ecx +
call eax  +
test eax eax +
jnz loc_41B540  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+10h] +
mov edx [eax+24h] +
mov ebp [ebp+4] +
test edx edx +
mov ebp [ebp+9Ch] +
mov [edi] ebp +
jnz loc_41B4CF  +
mov eax [ebx+10h] +
mov eax [eax+8] +
mov [edi+8] eax +
mov eax [esi+4Ch] +
mov ecx [esi+48h] +
mov [ecx+eax*4] edi +
add eax 1 +
mov [esi+4Ch] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 20h +
mov [edi] eax +
mov eax [edi+0Ch] +
mov edx [eax+24h] +
test edx edx +
jz loc_41B49B  +
mov [esp+0F4h+var_F4] eax +
call sub_417B60  +
mov [esp+0F4h+var_F4] eax +
mov ebp eax +
call sub_4075F0  +
test ebp ebp +
mov edx eax +
jz loc_41B4EB  +
test eax eax +
jz loc_41B47C  +
mov eax [ebx+10h] +
mov ecx [edi+0Ch] +
mov [esp+0F4h+var_D0] edx +
mov eax [eax+8] +
mov [esp+0F4h+var_E8] edx +
mov [esp+0F4h+var_F4] ecx +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F0] eax +
call sub_4184C0  +
mov edx [esp+0F4h+var_D0] +
test eax eax +
jz loc_41B551  +
cmp eax 1 +
jz loc_41B5B1  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 990h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_402960  +
lea esi [esi+0] +
mov [esp+0F4h+var_F4] 11h +
call sub_4029E0  +
jmp loc_41B47C  +
mov eax [esp+0F4h+var_A4] +
mov ebx [ebx+8] +
mov [esp+0F4h+var_D0] edx +
mov [esp+0F4h+var_F4] eax +
call sub_407270  +
mov edx [esp+0F4h+var_D0] +
mov [esp+0F4h+var_E0] ebp +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_F0] esi +
mov [esp+0F4h+var_EC] edx +
imul eax ebx +
mov [esp+0F4h+var_E8] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_4063D0  +
mov edx [esp+0F4h+var_D0] +
mov [esp+0F4h+var_F4] edx +
mov ebx eax +
call free  +
test ebx ebx +
jz loc_41B47C  +
mov dword ptr [edi+8] 0 +
jmp loc_41B4A4  +
mov eax [esp+0F4h+var_A0] +
cmp dword ptr [ebx+4] 3 +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+0F4h+var_D0] eax +
mov eax [ebx+10h] +
mov ecx [eax+8] +
mov [esp+0F4h+var_CC] ecx +
mov ecx [edi+0Ch] +
mov eax [eax+4] +
mov ecx [ecx+20h] +
jz loc_41B634  +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A0] +
mov [esp+0F4h+var_C8] edx +
mov edx [esp+0F4h+var_CC] +
mov [esp+0F4h+var_D8] 0 +
mov [esp+0F4h+var_DC] 0 +
mov [esp+0F4h+var_F4] eax +
mov eax [esp+0F4h+var_D0] +
mov [esp+0F4h+var_E4] edx +
mov [esp+0F4h+var_E0] 0 +
mov [esp+0F4h+var_E8] ecx +
mov [esp+0F4h+var_F0] 0 +
call eax  +
mov edx [esp+0F4h+var_C8] +
test eax eax +
jnz loc_41B551  +
mov [esp+0F4h+var_F4] edx +
call free  +
xor eax eax +
jmp loc_41B47E  +
mov eax [eax] +
jmp loc_41B5D8  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 952h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_402960  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 950h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_402960  +
push ebx  +
sub esp 18h +
mov eax [esp+110h+var_F0] +
mov [esp+110h+var_10C] 18h +
mov ebx [esp+110h+var_EC] +
mov [esp+110h+var_110] eax +
call sub_404C60  +
test eax eax +
jz loc_41B6B8  +
mov dword ptr [eax+4] 0 +
mov edx [ebx+0A4h] +
test edx edx +
jz loc_41B6B0  +
mov [edx] eax +
mov [ebx+0A4h] eax +
add esp 18h +
pop ebx  +
retn   +
mov [ebx+0A0h] eax +
jmp loc_41B6A3  +
xor eax eax +
jmp loc_41B6A9  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_C] +
mov esi [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_4] +
mov edi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
cmp eax 1 +
jz loc_41B790  +
cmp eax 2 +
jnz loc_41B773  +
test byte ptr [edi+15h] 1 +
jz loc_41B7F8  +
mov edx [ebx+0Ch] +
mov eax 1 +
test edx edx +
jz loc_41B76B  +
mov ebp [ebx+10h] +
mov eax [ebx+14h] +
test ebp ebp +
mov [esp+3Ch+var_1C] eax +
jz loc_41B7B0  +
cmp edx ebp +
ja loc_41B811  +
mov ebp [ebx+8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_18] edx +
call sub_407270  +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_28] edx +
imul eax ebp +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] ebp +
call sub_4063D0  +
cmp ebp [ebx+14h] +
jz loc_41B76B  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_1C] eax +
call free  +
mov eax [esp+3Ch+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_default_l +
mov [esp+3Ch+var_38] 9D5h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402960  +
nop   +
mov [esp+3Ch+arg_0] ebx +
mov ecx edi +
mov eax esi +
mov [esp+3Ch+arg_4] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_419620  +
mov eax [esi+84h] +
mov [esp+3Ch+var_18] edx +
mov ecx [eax+2Ch] +
mov eax [edi+14h] +
shr eax 4 +
and eax 1 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+4] +
mov eax [eax+8] +
mov [esp+3Ch+var_3C] edx +
test eax eax +
setz al  +
movzx eax al +
mov [esp+3Ch+var_38] eax +
call ecx  +
mov edx [esp+3Ch+var_18] +
test eax eax +
mov [esp+3Ch+var_1C] eax +
jnz loc_41B71C  +
xor eax eax +
jmp loc_41B76B  +
mov [esp+3Ch+var_38] 9ECh +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_402930  +
jmp loc_41B6F6  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_18] edx +
call sub_407460  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
jz loc_41B7F1  +
mov edx [esp+3Ch+var_18] +
mov eax edx +
sub eax ebp +
cmp ebp 1 +
mov [esp+3Ch+var_18] eax +
jz loc_41B8A6  +
mov [esp+3Ch+var_14] esi +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] edi +
mov edi ebx +
mov ebx ecx +
jmp loc_41B852  +
mov esi eax +
mov eax [edi+14h] +
mov [esp+3Ch+var_3C] ebx +
add ebx ebp +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax esi +
sub eax ebp +
cmp ebp esi +
jbe loc_41B850  +
mov eax esi +
mov ecx ebx +
test eax eax +
mov ebx edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+var_18] esi +
mov esi [esp+3Ch+var_14] +
jnz loc_41B88D  +
mov edx [ebx+0Ch] +
jmp loc_41B71C  +
mov eax [ebx+14h] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call memcpy  +
jmp loc_41B885  +
mov [esp+3Ch+var_34] edx +
mov eax [ebx+14h] +
mov [esp+3Ch+var_18] edx +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
call memset  +
mov edx [esp+3Ch+var_18] +
jmp loc_41B71C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+50h] +
mov ebp [esp+54h] +
mov dword ptr [esp+20h] 0 +
mov ecx [esi+64h] +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 0 +
test ecx ecx +
jz loc_41B930  +
lea esi [esi+0] +
mov eax [ecx+0A0h] +
test eax eax +
jnz loc_41B916  +
jmp loc_41B929  +
mov eax [eax] +
test eax eax +
jz loc_41B929  +
cmp dword ptr [eax+4] 1 +
jnz loc_41B910  +
mov edx [eax+10h] +
mov eax [eax] +
or byte ptr [edx+18h] 2 +
test eax eax +
jnz loc_41B916  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jnz loc_41B900  +
mov ebx [ebp+34h] +
lea edi [esp+20h] +
test ebx ebx +
jnz loc_41B94A  +
jmp loc_41B96C  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_41B96C  +
mov [esp+0Ch] edi +
mov [esp+8] ebp +
mov [esp+4] ebx +
mov [esp] esi +
call loc_41AEF0  +
test eax eax +
jnz loc_41B940  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+24h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_419140 +
mov eax [ebp+1Ch] +
mov [esp+24h] ebp +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp] eax +
call sub_419B50  +
lea edx [esi+7Ch] +
mov ecx edi +
lea eax [esi+78h] +
mov dword ptr [esp] 0 +
call sub_4190C0  +
test eax eax +
jz loc_41B962  +
movzx eax byte ptr [ebp+0] +
and eax 3 +
cmp al 2 +
jz loc_41BA4E  +
mov edi [esi+64h] +
test edi edi +
jz loc_41BA2F  +
mov ebx [edi+0A0h] +
test ebx ebx +
jnz loc_41B9FC  +
jmp loc_41BA28  +
mov [esp+0Ch] ebx +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp] esi +
jb loc_41BA40  +
sub eax 3 +
cmp eax 1 +
ja loc_41BA40  +
call loc_41B380  +
test eax eax +
jz loc_41B962  +
mov ebx [ebx] +
test ebx ebx +
jz loc_41BA28  +
mov eax [ebx+4] +
cmp eax 1 +
jnz loc_41B9D0  +
mov dword ptr [esp+4] 1 +
mov ecx edi +
mov edx ebp +
mov [esp] ebx +
mov eax esi +
call sub_419620  +
test eax eax +
jz loc_41B962  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_41B9FC  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_41B9C1  +
mov eax 1 +
jmp loc_41B964  +
***
call sub_41B6C0  +
test eax eax +
jnz loc_41B9F6  +
jmp loc_41B962  +
***
mov edi [esi+64h] +
test edi edi +
jz loc_41BA2F  +
mov [esp+50h] esi +
mov [esp+54h] ebp +
mov ebx [edi+0A0h] +
mov dword ptr [edi+4Ch] 0 +
test ebx ebx +
jnz loc_41BA7B  +
jmp loc_41BAC0  +
cmp eax 1 +
jz loc_41BAD4  +
mov ebx [ebx] +
test ebx ebx +
jz loc_41BA90  +
mov eax [ebx+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_41BA70  +
mov ebx [ebx] +
add dword ptr [edi+4Ch] 1 +
test ebx ebx +
jnz loc_41BA7B  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_41BAC0  +
shl eax 2 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_404B80  +
test eax eax +
mov [edi+48h] eax +
jz loc_41B962  +
or dword ptr [edi+14h] 4 +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_41BA5D  +
mov esi [esp+50h] +
mov ebp [esp+54h] +
jmp loc_41B9BA  +
***
mov esi [ebx+10h] +
mov edx [esi+94h] +
mov [esp+4] esi +
mov [esp] edx +
mov [esp+1Ch] edx +
call loc_402A30  +
test eax eax +
js loc_41B962  +
mov [esp] eax +
mov [esp+18h] eax +
call sub_407460  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
test eax eax +
mov ebp eax +
jz loc_41BB63  +
mov eax [edx+78h] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp+0Ch] eax +
call sub_402A70  +
mov [esp] ebp +
mov [esp+18h] eax +
call free  +
mov eax [esp+18h] +
test eax eax +
js loc_41B962  +
cmp eax [esi+4Ch] +
jz loc_41BB5B  +
mov dword ptr [esp+4] 79Bh +
mov dword ptr [esp] offset a____Binutil_11 +
call sub_402930  +
mov eax [esp+18h] +
add [edi+4Ch] eax +
jmp loc_41BA75  +
***
test ecx ecx +
jz loc_41BB0F  +
jmp loc_41B962  +
***
mov ecx [edx+4] +
mov edx [edx] +
sub ecx 3 +
cmp ecx 2 +
adc eax 0 +
test edx edx +
jnz loc_41BB80  +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov dword ptr [esp] offset unk_49A3F8 +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] eax +
call sub_408FD0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] offset unk_49A3F8 +
mov [esp+1Ch+var_18] eax +
call sub_408C80  +
add esp 1Ch +
retn   +
***
mov [esp+18h+var_14] 8 +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] offset unk_49A3F8 +
call sub_408EF0  +
test eax eax +
jz loc_41BC50  +
mov edx [esp+18h+arg_4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax] edx +
mov [ebx+0Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+0Ch] 2Ah +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset sub_418F30 +
mov dword ptr [esp] offset unk_49A3F8 +
call sub_408940  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] offset unk_49A3F8 +
call sub_408A50  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+14h] +
and eax 0C0000h +
cmp eax 40000h +
jz loc_41BDB1  +
jbe loc_41BD60  +
cmp eax 80000h +
jz loc_41BD15  +
cmp eax 0C0000h +
jnz loc_41BD95  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_41BDE0  +
nop   +
lea esi [esi+0] +
mov [ebx+7Ch] eax +
mov eax 1 +
mov dword ptr [ebx+3Ch] offset off_473270 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jnz loc_41BD00  +
mov esi [eax+24h] +
cmp [ebx+24h] esi +
jz loc_41BD00  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBDuplicateSect +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_41BD00  +
test eax eax +
jnz loc_41BD95  +
mov eax [ebx+94h] +
test byte ptr [eax+2Ch] 10h +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jz loc_41BD00  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_41BD00  +
mov eax [esp+24h+arg_4] +
mov [eax+4] ebx +
xor eax eax +
jmp loc_41BD0F  +
mov [esp+24h+var_1C] offset a_bfd_handle_al +
mov [esp+24h+var_20] 0B4Ah +
mov [esp+24h+var_24] offset a____Binutil_11 +
call sub_402960  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBIgnoringDupli +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_41BD00  +
mov edx [ebx+24h] +
cmp edx [eax+24h] +
jnz loc_41BD30  +
test edx edx +
jz loc_41BD00  +
mov eax [ebx+94h] +
lea edx [esp+24h+var_C] +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_8] 0 +
mov [esp+24h+var_24] eax +
call sub_406620  +
test eax eax +
jnz loc_41BE67  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBCouldNotReadC +
call eax  +
mov edx [esp+24h+var_C] +
test edx edx +
jz loc_41BE4B  +
mov [esp+24h+var_24] edx +
call free  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_41BE5B  +
mov [esp+24h+var_24] eax +
call free  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_41BD00  +
mov eax [esp+24h+arg_4] +
lea ecx [esp+24h+var_8] +
mov eax [eax+4] +
mov edx [eax+94h] +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] edx +
call sub_406620  +
test eax eax +
jz loc_41BED7  +
mov eax [ebx+24h] +
mov esi [esp+24h+var_C] +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+var_8] +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcmp  +
mov edx esi +
test eax eax +
jz loc_41BE3F  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBDuplicateSe_0 +
call eax  +
mov edx [esp+24h+var_C] +
jmp loc_41BE3F  +
mov eax [esp+24h+arg_8] +
mov eax [eax+18h] +
mov edx [eax+2Ch] +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov ecx [eax+94h] +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] offset aBCouldNotReadC +
mov [esp+24h+var_20] ecx +
call edx  +
mov edx [esp+24h+var_C] +
jmp loc_41BE3F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
test eax 20000h +
jz loc_41BF2F  +
test eax 2000000h +
jz loc_41BF38  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp] offset unk_49A3F8 +
mov [esp+4] eax +
call sub_408C80  +
mov edx [eax+0Ch] +
mov edi eax +
test edx edx +
jz loc_41BF80  +
mov [esp+28h] esi +
mov [esp+20h] ebx +
mov [esp+24h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_41BCB0  +
***
mov dword ptr [esp+4] 8 +
mov dword ptr [esp] offset unk_49A3F8 +
call sub_408EF0  +
test eax eax +
jz loc_41BFA5  +
mov edx [edi+0Ch] +
mov [eax+4] ebx +
mov [eax] edx +
mov [edi+0Ch] eax +
jmp loc_41BF2F  +
***
mov eax [esi+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_link +
call eax  +
jmp loc_41BF2F  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_41C0CF  +
mov eax ecx +
jmp loc_41BFF1  +
cmp [edx+10h] eax +
setz dl  +
test dl dl +
jnz loc_41C008  +
mov eax [eax+10h] +
test eax eax +
jz loc_41C008  +
test byte ptr [eax+15h] 80h +
jnz loc_41BFEA  +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_41BFE0  +
cmp [esi+68h] eax +
setz dl  +
test dl dl +
jz loc_41BFEA  +
mov edx [ecx+0Ch] +
nop   +
lea esi [esi+0] +
test edx edx +
jz loc_41C023  +
mov ecx [edx+14h] +
test ch 80h +
jz loc_41C030  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_41C014  +
test eax eax +
mov edx offset off_473270 +
cmovz eax edx +
jmp loc_41C0AA  +
mov ebx [edx+0Ch] +
test ebx ebx +
mov [esp+4+var_4] ebx +
jz loc_41C050  +
mov ebx [esp+4+var_4] +
cmp [ebx+10h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jnz loc_41C060  +
mov edx [esp+4+var_4] +
jmp loc_41C010  +
cmp [esi+68h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jz loc_41C04B  +
nop   +
test eax eax +
jz loc_41C0A8  +
mov esi [eax+14h] +
mov ebx ecx +
xor ebx esi +
test ebx 403h +
jz loc_41C093  +
mov ebx [edi+14h] +
xor ebx ecx +
and ebx 401h +
jnz loc_41C0AA  +
and esi 2 +
jz loc_41C0A8  +
and ecx 2 +
cmovnz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 8 +
jnz loc_41C0B2  +
and ebx 10h +
jz loc_41C0C3  +
xor ecx [edi+14h] +
and ecx 10h +
cmovz eax edx +
jmp loc_41C0AA  +
mov eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx [edi+14h] +
and ecx 8 +
cmovz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+4+arg_8] +
cmp [edx+1Ch] edi +
cmovbe eax edx +
jmp loc_41C0AA  +
mov eax [edi+94h] +
mov edx [eax+64h] +
xor eax eax +
jmp loc_41C010  +
***
sub esp 0Ch +
mov ebx [esp+0Ch+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_41C100  +
add esp 0Ch +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+14h] +
test edx edx +
jz loc_41C0F4  +
mov eax [edx+3Ch] +
test eax eax +
jz loc_41C0F4  +
test byte ptr [eax+15h] 80h +
jz loc_41C0F4  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_41C150  +
cmp eax [ecx+10h] +
setnz cl  +
test cl cl +
jz loc_41C0F4  +
mov esi [edx+38h] +
add esi [ebx+18h] +
add esi [eax+1Ch] +
mov [ebx+18h] esi +
mov [esp+0Ch+var_8] eax +
mov eax [esp+0Ch+arg_4] +
mov [esp+0Ch+var_4] esi +
mov [esp+0Ch+var_C] eax +
call sub_41BFC0  +
sub esi [eax+1Ch] +
mov [ebx+14h] eax +
mov [ebx+18h] esi +
jmp loc_41C0F4  +
mov esi [esp+0Ch+arg_4] +
cmp eax [esi+68h] +
setnz cl  +
jmp loc_41C121  +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_41C0E0 +
mov [esp] eax +
call sub_419B50  +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+38h] +
test esi esi +
jz loc_41C1A5  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_41C1B9  +
mov dword ptr [esp+4] 0C49h +
mov dword ptr [esp] offset a____Binutil_11 +
call sub_402930  +
mov eax [esi+18h] +
mov [esp+8] eax +
mov eax [esi+14h] +
mov ebp [eax] +
mov ebx [eax+4] +
mov eax [esp+30h] +
mov [esp] eax +
call sub_407270  +
mov ecx ebp +
mov edi eax +
shl edi cl +
test edi edi +
jz loc_41C246  +
mov edx edi +
neg edx  +
mov eax edx +
and eax edi +
cmp eax edi +
jz loc_41C206  +
mov dword ptr [esp+4] 0C52h +
mov dword ptr [esp] offset a____Binutil_11 +
mov [esp+0Ch] edx +
call sub_402930  +
mov edx [esp+0Ch] +
mov eax [ebx+24h] +
lea eax [edi+eax-1] +
and eax edx +
cmp ebp [ebx+40h] +
mov [ebx+24h] eax +
jbe loc_41C21A  +
mov [ebx+40h] ebp +
mov ebp [esp+8] +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov byte ptr [esi+0Ch] 3 +
add ebp eax +
mov eax [ebx+14h] +
mov [ebx+24h] ebp +
and ah 0EFh +
or eax 1 +
mov [ebx+14h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edx edx +
jmp loc_41C1EA  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
test ebp ebp +
jz loc_41C3FF  +
mov [esp+3Ch+var_1C] 0 +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_14] 0 +
nop   +
lea esi [esi+0] +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_41C324  +
lea ebx [ebp+0Ch] +
xor eax eax +
mov [esp+3Ch+var_18] ebx +
jmp loc_41C2F9  +
mov esi [eax+4] +
mov edi offset asc_489148 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_1C] +
setb cl  +
setnbe bl  +
sub ebx ecx +
movsx ecx bl +
mov ebx [esp+3Ch+var_24] +
test ecx ecx +
cmovz edi ebp +
mov [esp+3Ch+var_1C] edi +
cmovnz ebx ebp +
mov [esp+3Ch+var_24] ebx +
and edx 2 +
mov ebx [esp+3Ch+var_20] +
movzx edx byte ptr [eax+8] +
cmovnz ebx ebp +
or edx 4 +
mov [eax+8] dl +
and edx 1 +
mov [esp+3Ch+var_20] ebx +
jnz loc_41C3D3  +
mov edx [ebp+38h] +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
test eax eax +
jz loc_41C324  +
movzx edx byte ptr [eax+8] +
test dl 1 +
jz loc_41C2A6  +
mov [esp+3Ch+var_24] ebp +
jmp loc_41C2D8  +
mov ecx [ebp+1Ch] +
xor eax eax +
lea ebx [ebp+1Ch] +
test ecx ecx +
jz loc_41C3C8  +
mov esi [esp+3Ch+arg_4] +
mov edx [ebp+38h] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] esi +
call edx  +
test eax eax +
jz loc_41C3C8  +
test byte ptr [eax+8] 1 +
jnz loc_41C386  +
mov esi [eax+4] +
mov edi offset asc_489148 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_10] +
setb cl  +
setnbe dl  +
sub edx ecx +
mov ecx [esp+3Ch+var_14] +
movsx edx dl +
test edx edx +
cmovz edi ebp +
cmovnz ecx ebp +
mov [esp+3Ch+var_10] edi +
mov [esp+3Ch+var_14] ecx +
jmp loc_41C334  +
test ebp ebp +
mov eax 1 +
mov [esp+3Ch+var_1C] 0 +
setz dl  +
mov [esp+3Ch+var_24] 0 +
jz loc_41C3E7  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_41C403  +
mov ebx [esp+3Ch+var_24] +
cmp [esp+3Ch+var_20] ebx +
mov esi [esp+3Ch+arg_8] +
setz al  +
movzx eax al +
mov [esi] eax +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_41C290  +
mov edx [esp+3Ch+var_24] +
mov ebp [esp+3Ch+var_14] +
test edx edx +
setz al  +
test ebp ebp +
setz dl  +
jnz loc_41C3A2  +
test al al +
jz loc_41C3A2  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
mov [esp+3Ch+var_24] eax +
jnz loc_41C3AA  +
mov ebp [esp+3Ch+var_10] +
test ebp ebp +
jnz loc_41C407  +
xor eax eax +
jmp loc_41C3C0  +
test dl dl +
jnz loc_41C3F7  +
mov eax [esp+3Ch+arg_8] +
mov dword ptr [eax] 1 +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41C250  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+2Ch] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp] esi +
shr dl 7 +
mov [esp+0Ch] edx +
call eax  +
mov edx [esp+0Ch] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jz loc_41C4F0  +
mov eax [eax+50h] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
lea edx [esi+8] +
add esi 0Eh +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [ebx+4] eax +
movzx eax byte ptr [esi-2] +
mov [ebx+0Ch] al +
movzx eax byte ptr [esi-1] +
mov [ebx+0Dh] al +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp] esi +
call eax  +
cmp eax 0FFFFh +
mov [ebx+10h] eax +
jz loc_41C510  +
cmp eax 0FEFFh +
ja loc_41C500  +
mov byte ptr [ebx+0Eh] 0 +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4Ch] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
jmp loc_41C49C  +
***
sub eax 10000h +
mov [ebx+10h] eax +
jmp loc_41C4DA  +
***
mov edx [esp+28h] +
xor ax ax +
test edx edx +
jz loc_41C4E3  +
mov eax [edi+4] +
mov ecx [esp+28h] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov [ebx+10h] eax +
jmp loc_41C4DA  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
add esi 8 +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+4] +
mov edx [esi+4] +
add ebx 8 +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+4] ebx +
add ebx 4 +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+24h] ebx +
mov [esp+20h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [esp+38h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] esi +
call eax  +
mov eax [edi+4] +
lea ecx [esi+4] +
mov edx [ebx] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
lea ecx [esi+8] +
mov edx [ebx+4] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] ecx +
call eax  +
movzx eax byte ptr [ebx+0Ch] +
mov [esi+0Ch] al +
movzx eax byte ptr [ebx+0Dh] +
mov [esi+0Dh] al +
mov eax [ebx+10h] +
lea edx [eax-0FF00h] +
cmp edx 0FFFEFFFFh +
ja loc_41C769  +
test ebp ebp +
jz loc_41C783  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp] eax +
mov [esp+4] ebp +
call edx  +
mov eax 0FFFFh +
mov edx [edi+4] +
add esi 0Eh +
mov edx [edx+60h] +
mov [esp+34h] esi +
mov [esp+30h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
mov dword ptr [esp+8] offset aBfd_elf32_swap +
mov dword ptr [esp+4] 0E0h +
mov dword ptr [esp] offset a____Binutil_22 +
call sub_402960  +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edx [esp+78h] +
mov ebp [esp+70h] +
test edx edx +
mov eax [ebp+0A0h] +
jnz loc_41C890  +
add eax 48h +
xor ebx ebx +
mov [esp+24h] eax +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+18h] +
mov [esp+28h] eax +
shr dword ptr [esp+28h] 4 +
mov esi [esp+28h] +
test esi esi +
jnz loc_41C910  +
xor ebx ebx +
xor edi edi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
***
mov eax [esp+arg_28] +
mov eax [eax+38h] +
test eax eax +
jz loc_41C81F  +
mov edx [esp+arg_24] +
mov [esp+arg_0] edi +
mov [esp+0] ebp +
mov [esp+arg_4] edx +
call eax  +
mov eax [esp+arg_70] +
test eax eax +
jz loc_41C858  +
test ebx ebx +
lea eax [ebx-1] +
jle loc_41C84E  +
mov edx [esp+arg_70] +
add edx 4 +
sub eax 1 +
mov [edx-4] edi +
add edi 34h +
cmp eax 0FFFFFFFFh +
jnz loc_41C832  +
mov eax [esp+arg_70] +
lea eax [eax+ebx*4] +
mov [esp+arg_70] eax +
mov eax [esp+arg_70] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_34] +
test eax eax +
jz loc_41C868  +
mov [esp+0] eax +
call free  +
mov eax [esp+arg_2C] +
test eax eax +
jz loc_41C881  +
mov edx [esp+arg_20] +
cmp [edx+30h] eax +
jz loc_41C881  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [eax+914h] +
xor ebx ebx +
mov edi [eax+918h] +
lea ecx [eax+160h] +
lea edx [eax+0F0h] +
mov [esp+24h] edx +
test esi esi +
cmovnz ebx ecx +
test edi edi +
jnz loc_41C900  +
mov edx [eax+91Ch] +
test edx edx +
jz loc_41C7C6  +
mov edi [eax+244h] +
test edi edi +
jnz loc_41C7C6  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_42A430  +
test eax eax +
jnz loc_41C7C6  +
nop   +
lea esi [esi+0] +
***
mov ebx 0FFFFFFFFh +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+240h] +
test ecx ecx +
jnz loc_41C8B7  +
jmp loc_41C8D3  +
***
mov esi [esp+28h] +
mov eax [esp+24h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_420CB0  +
test eax eax +
mov [esp+30h] eax +
jz loc_41C8F0  +
imul eax esi +
mov [esp] ebp +
mov [esp+4] eax +
call sub_404C60  +
test eax eax +
mov edi eax +
jz loc_41CADC  +
test ebx ebx +
jz loc_41C996  +
mov eax [ebx+18h] +
shr eax 1 +
cmp eax esi +
jz loc_41CA75  +
mov ecx [ebp+0] +
mov [esp+0Ch] esi +
mov [esp+8] eax +
mov dword ptr [esp] offset aSVersionCountL +
mov [esp+4] ecx +
call off_4730E4  +
mov dword ptr [esp+38h] 0 +
xor ecx ecx +
mov eax [esp+28h] +
mov edx [esp+30h] +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
lea esi [edx+14h] +
cmp eax esi +
mov [esp+34h] eax +
jbe loc_41CCF1  +
mov ebx edi +
mov [esp+3Ch] edi +
mov edi ecx +
***
mov ecx [esi] +
mov eax [esp+24h] +
mov [ebx+18h] ecx +
mov ecx [esi+4] +
mov [ebx+1Ch] ecx +
mov ecx [esi+8] +
mov [ebx+20h] ecx +
mov ecx [esi+0Ch] +
mov [ebx+24h] ecx +
mov ecx [esi+10h] +
mov [ebx] ebp +
mov [ebx+28h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_421000  +
mov [ebx+4] eax +
mov eax [esi] +
mov [ebx+8] eax +
mov eax [esi+10h] +
test eax eax +
jnz loc_41CBE0  +
mov dword ptr [ebx+10h] offset off_4731C8 +
mov eax [ebp+28h] +
shr eax 5 +
test al 42h +
jz loc_41CA2D  +
mov eax [ebx+10h] +
mov eax [eax+1Ch] +
sub [ebx+8] eax +
movzx eax byte ptr [esi+0Ch] +
mov ecx eax +
shr cl 4 +
cmp cl 1 +
jz loc_41CC02  +
jb loc_41CC33  +
cmp cl 2 +
jz loc_41CC23  +
cmp cl 0Ah +
jnz loc_41CA60  +
or dword ptr [ebx+0Ch] 800000h +
movzx eax byte ptr [esi+0Ch] +
nop   +
and eax 0Fh +
cmp al 0Ah +
ja sub_41CB07  +
movzx eax al +
jmp ds:off_4893C4[eax*4]  +
***
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_4086D0  +
test eax eax +
jnz loc_41CADC  +
mov eax [ebx+18h] +
mov [esp] eax +
call sub_407460  +
test eax eax +
mov edx eax +
mov [esp+38h] eax +
jz loc_41CC9A  +
mov eax [ebx+18h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call sub_4084C0  +
cmp eax [ebx+18h] +
jz loc_41CC8C  +
***
mov eax [esp+38h] +
test eax eax +
jz loc_41CADC  +
mov [esp-0D8h+arg_D4] eax +
call free  +
mov edx [esp+24h] +
mov eax [esp+30h] +
cmp [edx+30h] eax +
jz loc_41C8F0  +
mov [esp-0D8h+arg_D4] eax +
mov ebx 0FFFFFFFFh +
call free  +
jmp loc_41C8F5  +
***
or dword ptr [ebx+0Ch] 400000h +
***
mov edx [esp+78h] +
or dword ptr [ebx+0Ch] 100000h +
jmp sub_41CB07  +
***
or dword ptr [ebx+0Ch] 80000h +
jmp sub_41CB07  +
***
or dword ptr [ebx+0Ch] 10000h +
jmp sub_41CB07  +
***
or dword ptr [ebx+0Ch] 40000h +
jmp sub_41CB07  +
***
or dword ptr [ebx+0Ch] 4004h +
jmp sub_41CB07  +
***
or dword ptr [ebx+0Ch] 104h +
jmp sub_41CB07  +
***
or dword ptr [ebx+0Ch] 8 +
jmp sub_41CB07  +
***
cmp eax 0FFFFFFF1h +
jz loc_41CC60  +
cmp eax 0FFFFFFF2h +
jnz loc_41CC40  +
mov dword ptr [ebx+10h] offset off_473120 +
test byte ptr [ebp+2Ah] 20h +
jnz loc_41CC70  +
mov eax [esi+4] +
mov [ebx+8] eax +
jmp loc_41CA1A  +
mov ecx [esi+10h] +
cmp ecx 0FFFFFFF2h +
jz loc_41CA60  +
test ecx ecx +
jz loc_41CA60  +
or dword ptr [ebx+0Ch] 2 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41CA60  +
or dword ptr [ebx+0Ch] 80h +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41CA60  +
or dword ptr [ebx+0Ch] 1 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41CA60  +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_423710  +
mov edx offset off_473270 +
test eax eax +
cmovz eax edx +
mov [ebx+10h] eax +
jmp loc_41CA1A  +
***
mov dword ptr [ebx+10h] offset off_473270 +
jmp loc_41CA1A  +
***
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_405CC0  +
test eax eax +
jz loc_41CCD0  +
mov [ebx+10h] eax +
jmp loc_41CBF7  +
***
mov eax [esp+38h] +
add eax 2 +
mov ecx eax +
jmp loc_41C9A0  +
***
mov ecx [ebx+18h] +
test ecx ecx +
jnz loc_41CADC  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_4084C0  +
xor ecx ecx +
cmp eax [ebx+18h] +
jnz loc_41CADC  +
jmp loc_41C9A0  +
***
mov dword ptr [esp+8] 209001h +
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_406180  +
test eax eax +
jnz loc_41CC84  +
jmp loc_41CACC  +
***
xor ebx ebx +
jmp loc_41C803  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+18h+var_18] esi +
shr dl 7 +
mov [esp+18h+var_C] edx +
call eax  +
lea ecx [esi+4] +
mov [ebx] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+8] +
mov [ebx+4] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi] +
jnz loc_41CDE4  +
mov eax [eax+4Ch] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
mov eax [edi] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+14h] +
mov dword ptr [ebx+14h] 0 +
mov [ebx+10h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+18h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
add esi 24h +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+24h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] esi +
call eax  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
jmp loc_41CD68  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+4] +
mov edx [edi+4] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+8] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+0Ch] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea edx [ebx+10h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] edx +
mov edx [edi+10h] +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+18h] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+1Ch] +
mov edx [edi+20h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+20h] +
mov edx [edi+24h] +
add ebx 24h +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
mov edx [edi+28h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov eax [eax+1B0h] +
movzx edx byte ptr [eax+1ACh] +
mov eax [esi] +
shr dl 7 +
mov [ecx] eax +
mov eax [esi+4] +
mov [esp+18h+var_C] edx +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [edi] +
lea ecx [esi+10h] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+12h] +
mov [ebx+24h] ax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+14h] +
mov [ebx+26h] ax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+1Ch] eax +
mov eax [edi] +
jnz loc_41D000  +
mov eax [eax+4Ch] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi] +
lea edx [esi+1Ch] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
mov [ebx+14h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+24h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+28h] +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ah] +
mov [ebx+28h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Eh] +
mov [ebx+30h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+30h] +
add esi 32h +
mov [ebx+34h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+38h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] esi +
call eax  +
mov [ebx+3Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_41CF66  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov eax [eax] +
mov edx [edx] +
lea ecx [ecx+10h] +
lea ebp [ebx+14h] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov [ecx-10h] edx +
mov edx [esi+4] +
shr al 7 +
mov [ecx-0Ch] edx +
mov edx [esi+8] +
mov [esp+24h+var_18] eax +
mov [ecx-8] edx +
mov edx [esi+0Ch] +
mov [ecx-4] edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+24h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
lea ecx [ebx+12h] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+26h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
mov ecx [esi+1Ch] +
mov edx [edx+54h] +
mov [esp+24h+var_20] ebp +
mov ebp 0FFFFh +
mov [esp+24h+var_24] ecx +
call edx  +
mov eax [edi] +
lea ecx [ebx+18h] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+1Ch] +
mov edx [esi+14h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+20h] +
mov edx [esi+18h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+24h] +
mov edx [esi+20h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+28h] +
mov edx [esi+28h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+2Ah] +
mov edx [esi+2Ch] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+30h] +
lea ecx [ebx+2Ch] +
mov edx [edi] +
cmp eax 0FFFFh +
cmova eax ebp +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [edi] +
lea ecx [ebx+2Eh] +
mov edx [esi+34h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+38h] +
mov edx 0 +
lea ecx [ebx+30h] +
cmp eax 0FF00h +
cmovnb eax edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [esi+3Ch] +
mov edx [edi] +
cmp eax 0FF00h +
cmovnb eax ebp +
mov edx [edx+60h] +
add ebx 32h +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
lea ecx [esp+2Ch] +
mov esi [eax+0A0h] +
add eax 4 +
mov [esp+14h] eax +
mov edx esi +
mov ebp [esi+40h] +
call sub_41D020  +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_4086D0  +
test eax eax +
jz loc_41D1F0  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+80h] +
mov dword ptr [esp+4] 34h +
mov [esp+8] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
call sub_408570  +
cmp eax 34h +
jnz loc_41D1E4  +
mov eax [esi+30h] +
cmp eax 0FFFEh +
jbe loc_41D224  +
mov edx [ebp+0] +
mov [edx+20h] eax +
mov eax [esi+38h] +
cmp eax 0FEFFh +
jbe loc_41D234  +
mov edx [ebp+0] +
mov [edx+18h] eax +
mov edx [esi+3Ch] +
cmp edx 0FEFFh +
jbe loc_41D245  +
mov ecx [ebp+0] +
mov [ecx+1Ch] edx +
lea eax [eax+eax*4] +
shl eax 3 +
mov [esp+1Ch] eax +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_404B80  +
test eax eax +
mov [esp+18h] eax +
jz loc_41D1E4  +
mov edi eax +
mov eax [esi+38h] +
xor ebx ebx +
test eax eax +
jz loc_41D29A  +
lea esi [esi+0] +
mov edx [ebp+ebx*4+0] +
mov ecx edi +
add ebx 1 +
mov eax [esp+14h] +
add edi 28h +
call sub_41CE00  +
cmp [esi+38h] ebx +
ja loc_41D280  +
mov dword ptr [esp+0Ch] 0 +
mov eax [esi+18h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_4086D0  +
test eax eax +
jnz loc_41D1E4  +
mov eax [esp+80h] +
mov edi [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_408570  +
cmp edi eax +
setz al  +
movzx eax al +
jmp loc_41D1E6  +
***
mov dword ptr [esp+28h] 8 +
mov dword ptr [esp+24h] offset sub_41C5C0 +
mov eax [edi+28h] +
mov dword ptr [esp+20h] 0 +
shr eax 5 +
test al 42h +
jz loc_41D3AE  +
mov eax [ebp+1Ch] +
mov [esp+20h] eax +
mov ebx [ebp+4Ch] +
test ebx ebx +
jz loc_41D4B0  +
mov dword ptr [esp+2Ch] 0 +
xor esi esi +
mov dword ptr [esp+18h] 0 +
jmp loc_41D46A  +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
mov [esp+18h] edx +
call sub_428270  +
test eax eax +
mov ecx eax +
js loc_41D4A0  +
mov eax [ebx] +
mov [esp+2Ch] ecx +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_41D420  +
mov edx [edi+4] +
cmp [eax+4] edx +
jz loc_41D420  +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+1Ch] ecx +
call sub_42BD20  +
mov ecx [esp+1Ch] +
test eax eax +
jz loc_41D4A0  +
mov eax [esp+20h] +
shl ecx 8 +
add esi 1 +
add eax [ebx+4] +
mov [esp+34h] eax +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
add ecx eax +
mov eax [ebx+8] +
mov [esp+38h] ecx +
mov [esp] edi +
mov [esp+3Ch] eax +
mov eax [esp+14h] +
mov [esp+8] eax +
lea eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+24h] +
call eax  +
mov eax [esp+28h] +
add [esp+14h] eax +
cmp esi [ebp+4Ch] +
jnb loc_41D4B0  +
mov eax [ebp+48h] +
mov ebx [eax+esi*4] +
mov eax [ebx] +
mov edx [eax] +
cmp edx [esp+18h] +
mov [esp+30h] edx +
jz loc_41D4B8  +
cmp dword ptr [edx+10h] offset off_473270 +
jnz loc_41D3D0  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_41D3D0  +
xor ecx ecx +
jmp loc_41D3F4  +
***
mov eax [esp+68h] +
mov dword ptr [eax] 1 +
lea esi [esi+0] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+2Ch] +
jmp loc_41D3F4  +
***
mov dword ptr [esp+28h] 0Ch +
mov dword ptr [esp+24h] offset sub_41C600 +
jmp loc_41D395  +
***
mov ebx [edx+3Ch] +
jmp loc_41D34E  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [eax+4] +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_28] edx +
mov esi [esp+4Ch+arg_8] +
mov [esp+4Ch+var_2C] ecx +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_30] eax +
mov eax [edi+18h] +
mov [esp+4Ch+var_4C] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_41D561  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] edx +
call sub_4086D0  +
test eax eax +
jz loc_41D570  +
mov [esp+4Ch+var_4C] ebp +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+18h] +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call sub_4084C0  +
cmp eax [edi+18h] +
jnz loc_41D559  +
mov eax [edi+28h] +
mov [esp+4Ch+var_34] eax +
and eax 0FFFFFFFBh +
cmp eax 8 +
jnz loc_41D726  +
mov ecx [esp+4Ch+arg_10] +
mov edi ebp +
mov eax [ebx+80h] +
mov edx [esp+4Ch+arg_4] +
test ecx ecx +
cmovz eax [ebx+7Ch] +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edx edx +
jz loc_41D714  +
mov [esp+4Ch+var_20] ebp +
mov ebp eax +
jmp loc_41D621  +
cmp eax [esp+4Ch+var_24] +
ja loc_41D6E0  +
mov edx [esp+4Ch+arg_C] +
cmp [esp+4Ch+var_34] 0Ch +
lea eax [edx+eax*4-4] +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jz loc_41D699  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_41D6D0  +
lea edx [esp+4Ch+var_18] +
add ebp 1 +
mov [esp+4Ch+var_48] esi +
add esi 10h +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] ebx +
call eax  +
add edi [esp+4Ch+var_34] +
cmp ebp [esp+4Ch+arg_4] +
jz loc_41D710  +
cmp [esp+4Ch+var_34] 0Ch +
jz loc_41D6B0  +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] edi +
call eax  +
lea ecx [edi+4] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] eax +
mov ecx [ebx+28h] +
shr ecx 5 +
and ecx 42h +
mov ecx [esp+4Ch+var_18] +
jz loc_41D672  +
mov edx [esp+4Ch+arg_10] +
test edx edx +
jnz loc_41D672  +
mov edx [esp+4Ch+var_2C] +
sub ecx [edx] +
shr eax 8 +
test eax eax +
mov [esi+4] ecx +
jnz loc_41D5C7  +
mov eax off_47330C +
cmp [esp+4Ch+var_34] 0Ch +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jnz loc_41D5ED  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
test eax eax +
jnz loc_41D5FC  +
jmp loc_41D5ED  +
lea eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] ebx +
call sub_41C570  +
mov eax [esp+4Ch+var_14] +
jmp loc_41D655  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
jmp loc_41D5FC  +
mov edx [esp+4Ch+var_28] +
mov ecx [edx] +
mov [esp+4Ch+var_3C] eax +
mov eax [ebx] +
mov [esp+4Ch+var_40] ebp +
mov [esp+4Ch+var_4C] offset aSSRelocationDH +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] eax +
call off_4730E4  +
jmp loc_41D680  +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax 1 +
jmp loc_41D563  +
mov [esp+4Ch+var_48] 582h +
mov [esp+4Ch+var_4C] offset a____Binutil_22 +
call sub_402930  +
jmp loc_41D59B  +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov edi [ebx+44h] +
mov esi [ebx+8Ch] +
test edi edi +
jz loc_41D765  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4Ch] +
test ecx ecx +
jnz loc_41D7E0  +
test byte ptr [ebx+14h] 4 +
jz loc_41D75D  +
mov edi [ebx+4Ch] +
test edi edi +
jz loc_41D75D  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_41D91C  +
mov eax [ecx+28h] +
xor ebp ebp +
test eax eax +
mov [esp+18h] eax +
jz loc_41D79D  +
mov eax [ecx+18h] +
xor edx edx +
div  dword ptr [esp+18h] +
mov ebp eax +
mov esi [esi+4Ch] +
test esi esi +
jz loc_41D90F  +
mov eax [esi+28h] +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov [esp+1Ch] eax +
jz loc_41D7C8  +
mov eax [esi+18h] +
xor edx edx +
div  dword ptr [esp+1Ch] +
mov [esp+18h] eax +
mov eax [esp+18h] +
add eax ebp +
cmp edi eax +
jz loc_41D8C1  +
xor eax eax +
jmp loc_41D75D  +
***
mov edx [ebx+24h] +
test edx edx +
jz loc_41D75D  +
mov ecx esi +
mov esi [esi+28h] +
test esi esi +
jnz loc_41D8A6  +
xor eax eax +
xor ebp ebp +
mov dword ptr [esp+18h] 0 +
xor esi esi +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_404B80  +
test eax eax +
mov edi eax +
jz loc_41D7D6  +
mov ecx [esp+1Ch] +
test ecx ecx +
jz loc_41D85B  +
mov edx [esp+4Ch] +
lea eax [ebx+1Ch] +
mov [esp] ecx +
mov ecx eax +
mov eax [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp+10h] edx +
mov edx [esp+48h] +
mov [esp+0Ch] edx +
mov edx ebx +
call sub_41D500  +
test eax eax +
jz loc_41D7D6  +
test esi esi +
jz loc_41D899  +
mov eax [esp+4Ch] +
shl ebp 4 +
mov edx ebx +
add ebp edi +
lea ecx [ebx+1Ch] +
mov [esp+8] ebp +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp] esi +
mov [esp+0Ch] eax +
mov eax [esp+18h] +
mov [esp+4] eax +
mov eax [esp+40h] +
call sub_41D500  +
test eax eax +
jz loc_41D7D6  +
mov [ebx+44h] edi +
mov eax 1 +
jmp loc_41D75D  +
***
mov eax [ecx+18h] +
xor edx edx +
mov dword ptr [esp+18h] 0 +
div  esi +
xor esi esi +
mov ebp eax +
shl eax 4 +
jmp loc_41D806  +
***
test ecx ecx +
jz loc_41D8D5  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [ecx+14h] +
xor eax [ecx+10h] +
or edx eax +
jz loc_41D92D  +
test esi esi +
jz loc_41D8E9  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [esi+14h] +
xor eax [esi+10h] +
or edx eax +
jz loc_41D923  +
mov dword ptr [esp+4] 5E6h +
mov dword ptr [esp] offset a____Binutil_22 +
mov [esp+1Ch] ecx +
call sub_402930  +
mov eax edi +
mov ecx [esp+1Ch] +
shl eax 4 +
jmp loc_41D806  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_41D7C8  +
***
xor ebp ebp +
jmp loc_41D79D  +
***
mov eax edi +
shl eax 4 +
jmp loc_41D806  +
***
mov eax edi +
shl eax 4 +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_404B80  +
mov ecx [esp+1Ch] +
test eax eax +
mov edi eax +
jnz loc_41D828  +
xor eax eax +
jmp loc_41D75D  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+10h+var_10] esi +
shr dl 7 +
mov [esp+10h+var_4] edx +
call eax  +
lea ecx [esi+18h] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
lea ecx [esi+4] +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
mov edx [esp+10h+var_4] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jnz loc_41DA20  +
lea edx [esi+8] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi+4] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+14h] +
add esi 1Ch +
mov [ebx+14h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+18h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+1Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [esi+8] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_41D9DF  +
***
jmp sub_41DA50  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [esi+4] +
mov edx [eax+1B0h] +
test byte ptr [edx+1AEh] 10h +
jnz loc_41DA7A  +
mov ebp [edi+10h] +
mov edx [edi] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+4] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+8] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] ebp +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+10h] +
mov edx [edi+14h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+18h] +
mov edx [edi+4] +
add ebx 1Ch +
mov eax [eax+54h] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ecx +
call eax  +
mov eax [esi+4] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+28h+arg_4] ebx +
mov [esp+28h+arg_0] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+58h] +
lea edi [esp+10h] +
mov ebp [esp+50h] +
mov esi [esp+54h] +
test ebx ebx +
jnz loc_41DB48  +
jmp loc_41DB80  +
add esi 20h +
sub ebx 1 +
jz loc_41DB80  +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebp +
call sub_41DA50  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_408570  +
cmp eax 20h +
jz loc_41DB40  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C0h] +
lea esi [esp+60h] +
mov edi [esp+0C4h] +
mov edx esi +
mov ebp [esp+0C8h] +
mov ebx [eax+0A0h] +
mov eax [ebx+40h] +
mov [esp+10h] eax +
mov eax [ebx+44h] +
mov [esp+1Ch] eax +
mov eax [ebx] +
mov [esp+60h] eax +
mov eax [ebx+4] +
mov [esp+64h] eax +
mov eax [ebx+8] +
mov [esp+68h] eax +
mov eax [ebx+0Ch] +
mov [esp+6Ch] eax +
mov eax [ebx+10h] +
mov [esp+70h] eax +
mov eax [ebx+14h] +
mov [esp+74h] eax +
mov eax [ebx+18h] +
mov [esp+78h] eax +
mov eax [ebx+1Ch] +
mov [esp+7Ch] eax +
mov eax [ebx+20h] +
mov [esp+80h] eax +
mov eax [ebx+24h] +
mov [esp+84h] eax +
mov eax [ebx+28h] +
mov [esp+88h] eax +
mov eax [ebx+2Ch] +
mov ecx [esp+0C0h] +
mov [esp+8Ch] eax +
mov eax [ebx+30h] +
mov [esp+90h] eax +
mov eax [ebx+34h] +
mov [esp+94h] eax +
mov eax [ebx+38h] +
mov [esp+98h] eax +
mov eax [ebx+3Ch] +
mov dword ptr [esp+78h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+9Ch] eax +
lea eax [ecx+4] +
lea ecx [esp+2Ch] +
mov [esp+14h] eax +
call sub_41D020  +
lea ecx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 34h +
mov [esp] ecx +
call edi  +
mov eax [ebx+30h] +
xor ebx ebx +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_41DCF0  +
mov [esp+0C4h] edi +
mov edi edx +
lea esi [esi+0] +
mov eax [esp+0C0h] +
add ebx 1 +
mov [esp+4] edi +
add edi 20h +
mov [esp+8] esi +
mov [esp] eax +
call sub_41DA50  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] esi +
call dword ptr [esp+0C4h]  +
cmp ebx [esp+18h] +
jnz loc_41DCB0  +
mov edi [esp+0C4h] +
mov eax [esp+0C0h] +
xor ebx ebx +
mov eax [eax+0A0h] +
mov eax [eax+214h] +
test eax eax +
mov [esp+18h] eax +
jz loc_41DE07  +
mov eax [esp+10h] +
lea ecx [esp+2Ch] +
mov eax [eax+ebx*4] +
mov edx [eax] +
mov [esp+60h] edx +
mov edx [eax+4] +
mov [esp+64h] edx +
mov edx [eax+8] +
mov [esp+68h] edx +
mov edx [eax+0Ch] +
mov [esp+6Ch] edx +
mov edx [eax+10h] +
mov [esp+70h] edx +
mov edx [eax+14h] +
mov [esp+74h] edx +
mov edx [eax+18h] +
mov [esp+78h] edx +
mov edx [eax+1Ch] +
mov [esp+7Ch] edx +
mov edx [eax+20h] +
mov [esp+80h] edx +
mov edx [eax+24h] +
mov [esp+84h] edx +
mov edx [eax+28h] +
mov [esp+88h] edx +
mov edx [eax+2Ch] +
mov [esp+8Ch] edx +
mov edx [eax+30h] +
mov [esp+90h] edx +
mov eax [eax+34h] +
mov edx esi +
mov dword ptr [esp+70h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+94h] eax +
mov eax [esp+14h] +
call sub_41CE00  +
lea eax [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 28h +
mov [esp] eax +
call edi  +
cmp dword ptr [esp+64h] 8 +
jz loc_41DDFA  +
mov edx [esp+90h] +
mov dword ptr [esp+28h] 0 +
test edx edx +
jz loc_41DE17  +
mov eax [esp+78h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call edi  +
mov eax [esp+28h] +
test eax eax +
jz loc_41DDFA  +
mov [esp] eax +
call free  +
add ebx 1 +
cmp ebx [esp+18h] +
jnz loc_41DD11  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_423710  +
test eax eax +
jz loc_41DDFA  +
mov edx [eax+6Ch] +
test edx edx +
jnz loc_41DDD9  +
and dword ptr [eax+14h] 0FFFFBFFFh +
lea ecx [esp+28h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ecx +
mov [esp] eax +
call sub_406620  +
test eax eax +
jz loc_41DDFA  +
mov edx [esp+28h] +
test edx edx +
jz loc_41DDFA  +
jmp loc_41DDD9  +
***
mov dword ptr [esp+0] 3 +
call sub_4029E0  +
xor eax eax +
add esp 0FCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+84h] 7Fh +
jnz sub_41DEAB  +
cmp byte ptr [esp+85h] 45h +
jnz sub_41DEAB  +
cmp byte ptr [esp+86h] 4Ch +
jnz sub_41DEAB  +
cmp byte ptr [esp+87h] 46h +
jnz sub_41DEAB  +
cmp byte ptr [esp+8Ah] 1 +
jnz sub_41DEAB  +
cmp byte ptr [esp+88h] 1 +
jnz sub_41DEAB  +
movzx eax byte ptr [esp+89h] +
cmp al 1 +
jz loc_41E315  +
cmp al 2 +
jnz sub_41DEAB  +
mov eax [ebx+4] +
mov edi [eax+0Ch] +
mov [esp+24h] eax +
test edi edi +
jnz sub_41DEAB  +
***
mov eax [esp+arg_20] +
mov eax [eax+78h] +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz loc_41DEB7  +
mov ebp [ebx+0A0h] +
lea eax [ebx+4] +
mov edx esi +
mov [esp+arg_1C] eax +
mov ecx ebp +
call sub_41CEE0  +
movzx eax word ptr [ebp+24h] +
cmp ax 4 +
jz sub_41DEAB  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_41DF67  +
cmp ax 1 +
jz sub_41DEAB  +
cmp dword ptr [ebp+34h] 28h +
jz loc_41DF78  +
mov ecx [ebp+38h] +
test ecx ecx +
jnz sub_41DEAB  +
test edx edx +
jnz loc_41DF87  +
mov edi [ebp+38h] +
test edi edi +
jnz sub_41DEAB  +
mov edx [ebx+4] +
mov ecx [edx+1B0h] +
mov edx [ecx+174h] +
mov edi ecx +
mov [esp+arg_24] ecx +
cmp byte ptr [edx+0Ah] 20h +
jnz sub_41DEAB  +
mov ecx [ecx+8] +
movzx edx word ptr [ebp+26h] +
cmp ecx edx +
jz loc_41DFD9  +
mov esi [edi+16Ch] +
test esi esi +
jz loc_41DFBF  +
cmp edx esi +
jz loc_41DFD9  +
mov edi [esp+arg_24] +
mov esi [edi+170h] +
test esi esi +
jz loc_41DFD1  +
cmp edx esi +
jz loc_41DFD9  +
test ecx ecx +
jnz sub_41DEAB  +
cmp ax 2 +
lea esi [esi+0] +
jz loc_41E36B  +
cmp ax 3 +
jz loc_41E539  +
mov esi [ebp+30h] +
test esi esi +
jz loc_41DFFE  +
or dword ptr [ebx+28h] 2000h +
mov eax [esp+arg_24] +
mov eax [eax] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_4071F0  +
test eax eax +
mov eax [esp+arg_24] +
jnz loc_41E330  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_41DEB7  +
mov esi [ebp+18h] +
test esi esi +
jnz loc_41E375  +
mov eax [ebp+38h] +
test eax eax +
jz loc_41E357  +
cmp eax 4924924h +
ja sub_41DEAB  +
imul eax eax +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_404B80  +
test eax eax +
mov esi eax +
jz loc_41DEB7  +
mov eax [ebp+38h] +
mov ecx eax +
mov [esp+arg_18] eax +
mov eax [ebx+0A0h] +
mov [eax+214h] ecx +
mov eax ecx +
mov edi [ebx+0A0h] +
shl eax 2 +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_404B80  +
mov [edi+40h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+40h] +
test eax eax +
jz loc_41DEB7  +
mov eax [esp+arg_B4] +
xor edx edx +
mov ecx esi +
mov edi [esp+arg_18] +
mov [esi] eax +
mov eax [esp+arg_B8] +
test edi edi +
mov [esi+4] eax +
mov eax [esp+arg_BC] +
mov [esi+8] eax +
mov eax [esp+arg_C0] +
mov [esi+0Ch] eax +
mov eax [esp+arg_C4] +
mov [esi+10h] eax +
mov eax [esp+arg_C8] +
mov [esi+14h] eax +
mov eax [esp+arg_CC] +
mov [esi+18h] eax +
mov eax [esp+arg_D0] +
mov [esi+1Ch] eax +
mov eax [esp+arg_D4] +
mov [esi+20h] eax +
mov eax [esp+arg_D8] +
mov [esi+24h] eax +
mov eax [esp+arg_DC] +
mov [esi+28h] eax +
mov eax [esp+arg_E0] +
mov [esi+2Ch] eax +
mov eax [esp+arg_E4] +
mov [esi+30h] eax +
mov eax [esp+arg_E8] +
mov [esi+34h] eax +
jz loc_41E16C  +
mov [esp+arg_28] ebp +
mov ebp [esp+arg_18] +
jmp loc_41E152  +
***
sub eax 0FF00h +
cmp eax 1 +
ja sub_41DEAB  +
mov eax [esi+8] +
test al 40h +
jnz loc_41E300  +
mov edx [esi+4] +
cmp edx 4 +
jz loc_41E300  +
cmp edx 9 +
jz loc_41E300  +
mov edx [esi+18h] +
test edx edx +
jz loc_41E258  +
test al 2 +
jz loc_41E258  +
cmp dword ptr [esi+4] 8 +
jz loc_41E258  +
mov eax [esi+0Ch] +
xor edx edx +
mov ecx [ebp+14h] +
sub eax [esi+10h] +
sbb edx [esi+14h] +
mov [esp+arg_8] 0 +
mov [esp+arg_4] ecx +
mov [esp+0] eax +
mov [esp+arg_0] edx +
call sub_46FCD0  +
or edx eax +
jz loc_41E258  +
mov eax [esp+arg_10C] +
and dword ptr [eax+28h] 0FFFFDFFFh +
mov eax [esp+arg_28] +
add edi 1 +
add esi 38h +
cmp [eax+38h] edi +
ja loc_41E193  +
mov ebx [esp+arg_10C] +
mov ebp eax +
mov ecx [ebp+38h] +
test ecx ecx +
jz loc_41E357  +
mov eax [ebx+0A0h] +
mov eax [eax+214h] +
cmp [ebp+3Ch] eax +
jnb loc_41E5FD  +
mov eax [ebp+30h] +
test eax eax +
jnz loc_41E545  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+44h] 0 +
mov edx [ebp+3Ch] +
test edx edx +
jz loc_41E4BD  +
mov eax [ebp+18h] +
test eax eax +
jz loc_41E4BD  +
mov eax [ebx+0A0h] +
mov edi 1 +
mov esi [eax+214h] +
cmp esi 1 +
ja loc_41E2EB  +
jmp loc_41E4A7  +
add edi 1 +
cmp edi esi +
jz loc_41E4A7  +
mov [esp+arg_0] edi +
mov [esp+0] ebx +
call sub_421810  +
test eax eax +
jnz loc_41E2E0  +
jmp loc_41DEB7  +
mov ecx [esp+arg_18] +
cmp ecx [esi+20h] +
ja loc_41E20F  +
lea esi [esi+0] +
jmp sub_41DEAB  +
mov eax [ebx+4] +
cmp dword ptr [eax+0Ch] 1 +
mov [esp+arg_20] eax +
jz loc_41DF22  +
jmp sub_41DEAB  +
mov edx [eax+8] +
test edx edx +
jz loc_41E02F  +
mov eax [eax+0Ch] +
movzx edx byte ptr [ebp+7] +
cmp edx eax +
jz loc_41E02F  +
test eax eax +
jz loc_41E02F  +
jmp sub_41DEAB  +
mov edi [ebp+3Ch] +
test edi edi +
lea esi [esi+0] +
jz loc_41E294  +
jmp sub_41DEAB  +
or dword ptr [ebx+28h] 40h +
nop   +
jmp loc_41DFF0  +
xor edi edi +
mov [esp+arg_8] 0 +
mov [esp+arg_0] esi +
mov [esp+arg_4] edi +
mov [esp+0] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_41DEB7  +
lea eax [esp+arg_58] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
mov [esp+arg_18] eax +
call sub_4084C0  +
cmp eax 28h +
jnz loc_41DEB7  +
mov eax [esp+arg_1C] +
lea ecx [esp+arg_B4] +
mov edx [esp+arg_18] +
call sub_41CD00  +
mov eax [ebp+38h] +
test eax eax +
jnz loc_41E3F0  +
mov eax [esp+arg_CC] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
mov [ebp+38h] eax +
ja sub_41DEAB  +
cmp dword ptr [ebp+3Ch] 0FFFFh +
jz loc_41E633  +
cmp dword ptr [ebp+30h] 0FFFFh +
jz loc_41E61C  +
cmp eax 1 +
jz loc_41E050  +
cmp eax 4924924h +
ja sub_41DEAB  +
lea eax [eax+eax*4] +
xor edx edx +
lea eax ds:0FFFFFFD8h[eax*8] +
add eax esi +
adc edx edi +
cmp [ebp+18h] eax +
jnb sub_41DEAB  +
mov [esp+arg_8] 0 +
mov [esp+arg_0] eax +
mov [esp+arg_4] edx +
mov [esp+0] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_41DEB7  +
mov eax [esp+arg_18] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
call sub_4084C0  +
cmp eax 28h +
jnz loc_41DEB7  +
mov [esp+arg_8] 0 +
mov eax [ebp+18h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
add eax 28h +
mov [esp+arg_0] eax +
call sub_4086D0  +
test eax eax +
jz loc_41E03A  +
jmp loc_41DEB7  +
mov [esp+0] ebx +
lea esi [esi+0] +
call sub_421080  +
test eax eax +
jz sub_41DEAB  +
mov eax [esp+arg_24] +
mov eax [eax+30h] +
test eax eax +
jz loc_41E4D5  +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz sub_41DEAB  +
mov eax [ebp+10h] +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_403010  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_41E4F7  +
jmp loc_41E530  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_41E530  +
mov eax [esi+8Ch] +
mov edx [eax+4] +
cmp edx 4 +
jz loc_41E50A  +
cmp edx 9 +
jnz loc_41E4F0  +
mov eax [eax+20h] +
test eax eax +
jz loc_41E4F0  +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_423710  +
test eax eax +
jz loc_41E4F0  +
test byte ptr [eax+15h] 20h +
jz loc_41E4F0  +
or dword ptr [esi+14h] 2000h +
jmp loc_41E4F0  +
mov eax [esp+arg_20] +
jmp loc_41DEB9  +
or dword ptr [ebx+28h] 800h +
jmp loc_41DFF0  +
cmp eax 7FFFFFFh +
ja sub_41DEAB  +
shl eax 5 +
mov esi [ebx+0A0h] +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_404B80  +
mov [esi+44h] eax +
mov eax [ebx+0A0h] +
mov esi [eax+44h] +
test esi esi +
jz loc_41DEB7  +
mov [esp+arg_8] 0 +
mov eax [ebp+14h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_4086D0  +
test eax eax +
jnz loc_41DEB7  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov edi [eax+44h] +
jz loc_41E2AC  +
xor esi esi +
jmp loc_41E5DB  +
lea eax [esp+arg_38] +
add esi 1 +
mov [esp+arg_4] edi +
add edi 20h +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_41D960  +
cmp [ebp+30h] esi +
jbe loc_41E2AC  +
lea eax [esp+arg_38] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 20h +
mov [esp+0] eax +
call sub_4084C0  +
cmp eax 20h +
jz loc_41E5B8  +
jmp loc_41DEB7  +
mov eax [ebx] +
mov dword ptr [ebp+3Ch] 0 +
mov dword ptr [esp+0] offset aWarningSHasACo +
mov [esp+arg_0] eax +
call off_4730E4  +
jmp loc_41E294  +
***
mov edx [esp+arg_D4] +
test edx edx +
jz loc_41E40A  +
mov [ebp+30h] edx +
jmp loc_41E40A  +
mov edx [esp+arg_D0] +
mov [ebp+3Ch] edx +
jmp loc_41E3FD  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [esp+0D4h] +
lea ebx [esp+3Ch] +
mov edi [esp+0D0h] +
mov dword ptr [esp+8] 34h +
mov [esp+4] ebx +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov esi eax +
jnz loc_41EA90  +
cmp byte ptr [esp+3Ch] 7Fh +
jz loc_41E6B0  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
xor eax eax +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+3Dh] 45h +
jnz loc_41E693  +
cmp byte ptr [esp+3Eh] 4Ch +
jnz loc_41E693  +
cmp byte ptr [esp+3Fh] 46h +
jnz loc_41E693  +
cmp byte ptr [esp+42h] 1 +
jnz loc_41E693  +
cmp byte ptr [esp+40h] 1 +
jnz loc_41E693  +
movzx eax byte ptr [esp+41h] +
cmp al 1 +
jz loc_41E926  +
cmp al 2 +
jnz loc_41E693  +
mov eax [edi+4] +
mov ecx [eax+0Ch] +
test ecx ecx +
jnz loc_41E693  +
lea eax [edi+4] +
mov edx ebx +
lea ecx [esp+70h] +
call sub_41CEE0  +
cmp dword ptr [esp+9Ch] 20h +
jnz loc_41E693  +
mov eax [esp+0A0h] +
test eax eax +
jz loc_41E693  +
shl eax 6 +
mov [esp] eax +
call sub_407460  +
test eax eax +
mov ecx eax +
mov [esp+24h] eax +
jz loc_41E69F  +
mov eax [esp+0A0h] +
mov [esp+4] ecx +
shl eax 5 +
mov [esp+8] eax +
mov eax [esp+0D4h] +
add eax [esp+84h] +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov ebx eax +
jnz loc_41EAC3  +
mov eax [esp+0A0h] +
mov ebx eax +
shl ebx 5 +
add ebx [esp+24h] +
test eax eax +
mov [esp+28h] ebx +
jz loc_41EAB2  +
mov ebp [esp+24h] +
xor esi esi +
mov ebx [esp+28h] +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
jmp loc_41E7B8  +
add esi 1 +
add ebp 20h +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_41E813  +
mov [esp+8] ebx +
mov [esp+4] ebp +
mov [esp] edi +
call sub_41D960  +
cmp dword ptr [ebx] 1 +
jnz loc_41E7A6  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
add edx eax +
cmp edx [esp+14h] +
jbe loc_41E7E3  +
mov [esp+14h] edx +
mov [esp+1Ch] ebx +
mov edx [esp+18h] +
test edx edx +
jnz loc_41E7A6  +
mov ecx [ebx+1Ch] +
mov edx [ebx+0Ch] +
cmp ecx 1 +
jbe loc_41E7FC  +
neg ecx  +
and eax ecx +
and edx ecx +
test eax eax +
jnz loc_41E7A6  +
mov eax [esp+0D4h] +
mov [esp+18h] ebx +
sub eax edx +
mov [esp+20h] eax +
jmp loc_41E7A6  +
***
mov eax [esp+14h] +
test eax eax +
jz loc_41EAB2  +
mov eax [esp+88h] +
mov dword ptr [esp+2Ch] 0 +
test eax eax +
jz loc_41E861  +
mov edx [esp+0A8h] +
test edx edx +
jz loc_41E861  +
mov ecx [esp+0A4h] +
test ecx ecx +
jz loc_41E861  +
imul edx ecx +
mov ecx [esp+1Ch] +
add eax edx +
mov [esp+2Ch] eax +
mov eax [ecx+14h] +
cmp eax [ecx+18h] +
jz loc_41EAEA  +
mov eax [esp+14h] +
mov [esp] eax +
call sub_4075F0  +
test eax eax +
mov ebp eax +
jz loc_41EB60  +
mov eax [esp+0A0h] +
xor esi esi +
mov ebx [esp+28h] +
test eax eax +
jz loc_41E93F  +
mov [esp+0D0h] edi +
mov edi [esp+0E0h] +
jmp loc_41E8B3  +
add esi 1 +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_41E938  +
cmp dword ptr [ebx] 1 +
jnz loc_41E8A0  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
mov ecx [ebx+0Ch] +
add edx eax +
cmp ebx [esp+18h] +
jz loc_41EA60  +
cmp [esp+1Ch] ebx +
cmovz edx [esp+14h] +
add ecx [esp+20h] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] ecx +
call edi  +
test eax eax +
jz loc_41E8A0  +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call free  +
mov dword ptr [esp] 1 +
call sub_4029E0  +
call ds:__imp__errno  +
mov edx [esp+14h] +
mov [eax] edx +
xor eax eax +
jmp loc_41E6A1  +
***
mov eax [edi+4] +
cmp dword ptr [eax+0Ch] 1 +
jz loc_41E6EE  +
jmp loc_41E693  +
***
mov edi [esp+0D0h] +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
cmp [esp+14h] eax +
jb loc_41EA70  +
mov eax [esp+3Ch] +
mov [ebp+0] eax +
mov eax [esp+40h] +
mov [ebp+4] eax +
mov eax [esp+44h] +
mov [ebp+8] eax +
mov eax [esp+48h] +
mov [ebp+0Ch] eax +
mov eax [esp+4Ch] +
mov [ebp+10h] eax +
mov eax [esp+50h] +
mov [ebp+14h] eax +
mov eax [esp+54h] +
mov [ebp+18h] eax +
mov eax [esp+58h] +
mov [ebp+1Ch] eax +
mov eax [esp+5Ch] +
mov [ebp+20h] eax +
mov eax [esp+60h] +
mov [ebp+24h] eax +
mov eax [esp+64h] +
mov [ebp+28h] eax +
mov eax [esp+68h] +
mov [ebp+2Ch] eax +
mov eax [esp+6Ch] +
mov [ebp+30h] eax +
mov dword ptr [esp] 8 +
call sub_407460  +
test eax eax +
mov esi eax +
jz loc_41EB43  +
call sub_404390  +
test eax eax +
mov ebx eax +
jz loc_41EB3B  +
mov dword ptr [esp] offset aInMemory +
call sub_45ED60  +
mov [ebx] eax +
mov eax [edi+4] +
mov [ebx+4] eax +
mov eax [esp+14h] +
mov [esi+4] ebp +
mov [esi] eax +
mov eax [ebx+28h] +
mov [ebx+8] esi +
mov dword ptr [ebx+0Ch] offset off_475800 +
mov dword ptr [ebx+38h] 0 +
and eax 0FF80001Fh +
or eax 10000h +
mov [ebx+28h] eax +
and eax 7 +
or eax 8 +
mov dword ptr [ebx+3Ch] 0 +
mov [ebx+28h] al +
mov dword ptr [esp] 0 +
call time  +
or byte ptr [ebx+2Bh] 4 +
mov [ebx+20h] eax +
mov eax [esp+0DCh] +
test eax eax +
jz loc_41EAAB  +
mov eax [esp+0DCh] +
mov ecx [esp+20h] +
mov [eax] ecx +
add esp 0BCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub ecx eax +
xor eax eax +
jmp loc_41E8CD  +
***
xor edx edx +
xor ecx ecx +
mov dword ptr [esp+5Ch] 0 +
mov [esp+6Ch] dx +
mov [esp+6Eh] cx +
jmp loc_41E959  +
***
mov dword ptr [esp] 1 +
call sub_4029E0  +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_41E6A1  +
***
mov eax ebx +
jmp loc_41E6A1  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_41E693  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov dword ptr [esp] 1 +
call sub_4029E0  +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_41E6A1  +
***
mov ecx [esp+2Ch] +
cmp ecx [esp+0D8h] +
jbe loc_41EB50  +
mov edx [edi+4] +
mov ecx [esp+1Ch] +
mov edx [edx+1B0h] +
add eax [ecx+8] +
cmp [esp+2Ch] eax +
mov edx [edx+14h] +
jbe loc_41E861  +
cmp edx 1 +
jbe loc_41E861  +
mov ecx [esp+2Ch] +
lea eax [edx+eax-1] +
neg edx  +
and eax edx +
cmp ecx eax +
mov eax [esp+14h] +
cmovbe eax ecx +
mov [esp+14h] eax +
jmp loc_41E861  +
***
mov [esp] esi +
call free  +
mov [esp] ebp +
call free  +
jmp loc_41E69F  +
***
mov eax [esp+0D8h] +
mov [esp+14h] eax +
jmp loc_41E861  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_41E6A1  +
***
mov eax [esp+4] +
movzx edx byte ptr [esp+8] +
shl eax 8 +
add eax edx +
retn   +
***
mov eax [esp+4] +
shr eax 8 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+4] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+24h] +
mov eax [esp+20h] +
mov ecx [edx+4] +
cmp [eax+4] ecx +
jz loc_41EC30  +
mov dword ptr [esp] 1 +
call sub_4029E0  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_41EC77  +
mov ebx [edx] +
mov dword ptr [esp+4] 2Fh +
mov [esp] ebx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call strcmp  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
jmp loc_41EC23  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0CCh +
mov ebx [esp+0E0h] +
lea esi [esp+54h] +
mov dword ptr [esp+4] 34h +
mov [esp] esi +
mov [esp+8] ebx +
call sub_4084C0  +
cmp eax 34h +
jz loc_41ECD1  +
call sub_402790  +
cmp eax 1 +
jz loc_41ECC4  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
xor eax eax +
add esp 0CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+54h] 7Fh +
jnz loc_41ECB8  +
cmp byte ptr [esp+55h] 45h +
jnz loc_41ECB8  +
cmp byte ptr [esp+56h] 4Ch +
jnz loc_41ECB8  +
cmp byte ptr [esp+57h] 46h +
jnz loc_41ECB8  +
cmp byte ptr [esp+58h] 1 +
jnz loc_41ECB8  +
movzx eax byte ptr [esp+59h] +
cmp al 1 +
jz loc_41EF20  +
cmp al 2 +
jnz loc_41ECB8  +
mov eax [ebx+4] +
mov edi [eax+8] +
test edi edi +
jnz loc_41ECB8  +
mov eax [eax+80h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41ECC4  +
mov ebp [ebx+0A0h] +
lea edi [ebx+4] +
mov edx esi +
mov eax edi +
mov ecx ebp +
call sub_41CEE0  +
mov eax [ebx+4] +
movzx esi word ptr [ebp+26h] +
mov eax [eax+1B0h] +
mov ecx eax +
mov [esp+18h] eax +
mov eax [eax+8] +
cmp eax esi +
jz loc_41EDD4  +
mov edx [ecx+16Ch] +
test edx edx +
jz loc_41ED5E  +
cmp esi edx +
jz loc_41EDD4  +
mov ecx [esp+18h] +
mov edx [ecx+170h] +
test edx edx +
jz loc_41ED70  +
cmp esi edx +
jz loc_41EDD4  +
test eax eax +
jnz loc_41ECB8  +
mov eax off_4733CC +
mov edx [eax] +
test edx edx +
jnz loc_41ED8E  +
jmp loc_41EDD4  +
add eax 4 +
mov edx [eax] +
test edx edx +
jz loc_41EDD4  +
cmp dword ptr [edx+4] 5 +
jnz loc_41ED85  +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
cmp byte ptr [ecx+0Ah] 20h +
jnz loc_41ED85  +
cmp esi [edx+8] +
jz loc_41ECB8  +
mov ecx [edx+16Ch] +
test ecx ecx +
jz loc_41EDC1  +
cmp esi ecx +
jz loc_41ECB8  +
mov edx [edx+170h] +
test edx edx +
jz loc_41ED85  +
cmp esi edx +
jnz loc_41ED85  +
jmp loc_41ECB8  +
***
mov esi [ebp+14h] +
test esi esi +
jz loc_41ECB8  +
cmp word ptr [ebp+24h] 4 +
jnz loc_41ECB8  +
cmp dword ptr [ebp+2Ch] 20h +
jnz loc_41ECB8  +
mov edx [ebp+18h] +
mov eax [ebp+30h] +
test edx edx +
jz loc_41EE09  +
cmp eax 0FFFFh +
jz loc_41F02F  +
cmp eax 1 +
jbe loc_41EE75  +
cmp eax 7FFFFFFh +
ja loc_41ECB8  +
mov ecx [ebp+14h] +
add eax 7FFFFFFh +
xor edx edx +
shl eax 5 +
lea esi [eax+ecx] +
cmp ecx esi +
jnb loc_41ECB8  +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edx +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_41ECC4  +
lea eax [esp+88h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call sub_4084C0  +
cmp eax 20h +
jnz loc_41ECC4  +
mov dword ptr [esp+0Ch] 0 +
mov eax [ebp+14h] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4086D0  +
test eax eax +
jnz loc_41ECB8  +
mov eax [ebp+30h] +
mov [esp] ebx +
shl eax 5 +
mov [esp+4] eax +
call sub_404B80  +
test eax eax +
mov edi eax +
mov [esp+1Ch] eax +
jz loc_41ECC4  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov [eax+44h] edi +
jz loc_41EF37  +
lea eax [esp+88h] +
xor esi esi +
mov [esp+14h] ebp +
mov ebp eax +
jmp loc_41EEFF  +
mov [esp+8] edi +
add esi 1 +
add edi 20h +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_41D960  +
mov eax [esp+14h] +
cmp [eax+30h] esi +
jbe loc_41EF35  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] ebp +
call sub_4084C0  +
cmp eax 20h +
jz loc_41EEE0  +
jmp loc_41ECC4  +
***
mov eax [ebx+4] +
cmp dword ptr [eax+8] 1 +
jz loc_41ED0F  +
lea esi [esi+0] +
jmp loc_41ECB8  +
***
mov ebp eax +
mov eax [esp+18h] +
mov eax [eax] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4071F0  +
test eax eax +
jnz loc_41EF64  +
mov eax [esp+18h] +
mov edx [eax+8] +
test edx edx +
jnz loc_41ECC4  +
mov eax [esp+18h] +
mov eax [eax+30h] +
test eax eax +
jz loc_41EF7C  +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41ECB8  +
mov eax [ebp+30h] +
xor esi esi +
mov edi [esp+1Ch] +
test eax eax +
jnz loc_41EF9D  +
jmp loc_41F0A1  +
mov eax [ebp+30h] +
add esi 1 +
add edi 20h +
cmp eax esi +
jbe loc_41EFB6  +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call sub_423C90  +
test eax eax +
jnz loc_41EF90  +
jmp loc_41ECC4  +
***
test eax eax +
jz loc_41F0A1  +
mov edi [esp+1Ch] +
shl eax 5 +
xor esi esi +
lea ecx [edi+eax] +
mov eax edi +
lea esi [esi+0] +
mov edx [eax+14h] +
test edx edx +
jz loc_41EFDF  +
add edx [eax+8] +
cmp esi edx +
cmovb esi edx +
add eax 20h +
cmp eax ecx +
jnz loc_41EFD0  +
lea eax [esp+88h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_408680  +
test eax eax +
jnz loc_41F021  +
mov eax [esp+0A0h] +
cmp eax esi +
jnb loc_41F021  +
mov [esp+0Ch] eax +
mov [esp+8] esi +
mov [esp+4] ebx +
mov dword ptr [esp] offset aWarningBIsTrun +
call off_4730E4  +
mov eax [ebp+10h] +
mov [ebx+74h] eax +
mov eax [ebx+4] +
jmp loc_41ECC6  +
***
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jnz loc_41ECC4  +
lea esi [esp+2Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 28h +
mov [esp] esi +
call sub_4084C0  +
cmp eax 28h +
jnz loc_41ECC4  +
lea eax [esp+88h] +
mov edx esi +
mov ecx eax +
mov eax edi +
call sub_41CD00  +
mov eax [esp+0A8h] +
test eax eax +
jnz loc_41F099  +
mov eax [ebp+30h] +
jmp loc_41EE09  +
***
mov [ebp+30h] eax +
jmp loc_41EE09  +
***
xor esi esi +
jmp loc_41EFE6  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
mov ebx esi +
sub ebx ecx +
lea edx ds:28h[ebx*4] +
mov [esp+28h+var_24] edx +
call sub_404C60  +
test eax eax +
jz loc_41F26A  +
xor edx edx +
cmp esi edi +
mov dword ptr [eax] 0 +
lea ecx [ebp+edi*4+0] +
mov dword ptr [eax+4] 1 +
jbe loc_41F24F  +
mov esi [ecx+edx*4] +
mov [eax+edx*4+28h] esi +
add edx 1 +
cmp edx ebx +
jnz loc_41F241  +
test edi edi +
mov [eax+24h] ebx +
jnz loc_41F262  +
mov edx [esp+28h+arg_4] +
test edx edx +
jz loc_41F262  +
or byte ptr [eax+20h] 30h +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_41F262  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] edi +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_41F2F0  +
mov eax [esi+0Ch] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov byte ptr [ebx+edi-1] 0 +
mov [esp+1Ch+var_14] 100h +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call sub_4060A0  +
test eax eax +
jz loc_41F2F0  +
mov edx [esi+4] +
mov ecx [esi+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 1 +
mov [eax+24h] edx +
mov [eax+50h] ecx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
mov edi eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_41F342  +
mov byte ptr [eax] 2Eh +
sub edi 1 +
add esi 2 +
lea eax [eax+1] +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov [esp+18h+var_18] ebx +
mov esi eax +
lea eax [eax+2] +
mov [esp+18h+var_14] eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_41F396  +
mov byte ptr [eax] 2Eh +
add edi 1 +
mov byte ptr [eax+1] 7Ah +
lea eax [eax+2] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_28] offset a_interp_0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_14] edx +
call sub_405CC0  +
test eax eax +
jz loc_41F3CD  +
test byte ptr [eax+14h] 2 +
jnz loc_41F518  +
mov [esp+2Ch+var_1C] 2 +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] offset a_dynamic_1 +
mov [esp+2Ch+var_2C] eax +
call sub_405CC0  +
cmp eax 1 +
mov eax [esp+2Ch+var_14] +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test eax eax +
jz loc_41F407  +
movzx eax byte ptr [eax+3] +
and eax 1 +
cmp al 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
mov edi [esp+2Ch+var_18] +
mov eax [edi+0A0h] +
mov ebp [edi+64h] +
mov eax [eax+934h] +
cmp dword ptr [eax+0Ch] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
cmp dword ptr [eax+34h] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test ebp ebp +
jz loc_41F492  +
mov eax [ebp+14h] +
mov ebx ebp +
mov [esp+2Ch+var_10] eax +
mov edx eax +
jmp loc_41F443  +
mov edx [ebx+14h] +
and edx 2 +
jz loc_41F467  +
mov esi [ebx] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_41F467  +
add [esp+2Ch+var_1C] 1 +
cmp dword ptr [ebx+40h] 2 +
jz loc_41F50C  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_41F440  +
test [esp+2Ch+var_10] 400h +
jz loc_41F48A  +
jmp loc_41F525  +
test byte ptr [ebp+15h] 4 +
jnz loc_41F525  +
mov ebp [ebp+0Ch] +
test ebp ebp +
nop   +
jnz loc_41F480  +
mov edi [esp+2Ch+var_18] +
mov eax [edi+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_41F4BF  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] edx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_41F52F  +
add [esp+10h] eax +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+1] +
imul eax [esp+10h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+40h] 2 +
jnz loc_41F440  +
mov edx [ebx+14h] +
test dl 2 +
jz loc_41F443  +
mov esi [ebx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_41F443  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_41F4D6  +
jmp loc_41F46E  +
mov [esp+2Ch+var_1C] 4 +
jmp loc_41F3D5  +
add [esp+2Ch+var_1C] 1 +
jmp loc_41F492  +
mov dword ptr [esp+8] offset aGet_program_he +
mov dword ptr [esp+4] 0FD2h +
mov dword ptr [esp+0] offset a____Binutil_10 +
call sub_402960  +
nop   +
lea esi [esi+0] +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_41F571  +
sub esp 1Ch +
mov [esp+4] edx +
mov [esp+0] eax +
call ecx  +
add esp 1Ch +
retn   +
test dword ptr [edx+0Ch] 800082h +
mov eax 1 +
jnz locret_41F56F  +
mov edx [edx+10h] +
cmp edx offset off_4731C8 +
jz locret_41F56F  +
mov eax [edx+14h] +
shr eax 0Ch +
and eax 1 +
retn   +
***
mov ebx [ecx+4] +
cmp dword ptr [ebx+4] 5 +
jz loc_41F5E0  +
mov edx [edx+10h] +
cmp [edx+94h] eax +
jz loc_41F5D8  +
mov ecx [edx+3Ch] +
cmp eax [ecx+94h] +
jz loc_41F5D1  +
cmp edx offset off_473270 +
jz loc_41F5D8  +
mov eax 1 +
pop ebx  +
retn   +
mov ebx [edx+38h] +
test ebx ebx +
jnz loc_41F5C2  +
xor eax eax +
pop ebx  +
retn   +
mov ecx [ecx+0A0h] +
test ecx ecx +
jz loc_41F5AC  +
mov ecx [edx+28h] +
test ecx ecx +
jz loc_41F5AC  +
mov edx [edx+10h] +
cmp edx offset off_473270 +
jnz loc_41F5AF  +
jmp loc_41F5CA  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_8] +
mov eax [ebp+14h] +
and eax 2100000h +
cmp eax 2000000h +
jz loc_41F630  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
test eax eax +
jnz loc_41F622  +
mov ecx [ebp+8Ch] +
mov eax [ecx+20h] +
test eax eax +
jz loc_41F6C4  +
cmp eax 0FFFFFFFEh +
jz loc_41F738  +
mov eax [ebp+6Ch] +
mov edx 1 +
test eax eax +
jz loc_41F797  +
mov ecx [ecx+7Ch] +
mov esi [ebp+24h] +
mov [esp+2Ch+var_14] ecx +
add esi eax +
test ecx ecx +
jz loc_41F6EB  +
mov [esp+2Ch+var_10] ebp +
mov ebx ecx +
mov ebp edi +
mov edi esi +
mov esi edx +
jmp loc_41F6BC  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_41F6A9  +
cmp eax offset off_473270 +
jz loc_41F6A9  +
mov edx [ebp+4] +
sub edi 4 +
mov edx [edx+54h] +
mov [esp+2Ch+var_28] edi +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp [esp+2Ch+var_14] ebx +
jz loc_41F6E0  +
test ebx ebx +
jz loc_41F6E0  +
test esi esi +
jz loc_41F680  +
mov eax ebx +
jmp loc_41F687  +
mov eax [ecx+74h] +
test eax eax +
jz loc_41F716  +
mov eax [eax+14h] +
test eax eax +
jz loc_41F716  +
mov [ecx+20h] eax +
jmp loc_41F650  +
mov esi edi +
mov edi ebp +
mov ebp [esp+2Ch+var_10] +
mov eax [ebp+6Ch] +
sub esi 4 +
cmp esi eax +
jnz loc_41F7F5  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp+2Ch+arg_4] eax +
mov eax [ebp+14h] +
shr eax 11h +
and eax 1 +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+8] +
test eax eax +
jz loc_41F7C7  +
mov esi [ebp+8] +
mov eax [eax+esi*4] +
mov eax [eax+14h] +
jmp loc_41F6D2  +
mov eax [ecx+7Ch] +
xor edx edx +
mov eax [eax+8Ch] +
mov eax [eax+78h] +
mov esi [eax+8Ch] +
mov eax [eax+94h] +
mov esi [esi+20h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+928h] 0 +
jnz loc_41F767  +
mov edx [eax+68h] +
mov eax [eax+218h] +
sub esi edx +
mov eax [eax+esi*4] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
ja loc_41F78F  +
nop   +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
jbe loc_41F780  +
mov eax [eax+1Ch] +
jmp loc_41F6D2  +
mov eax [ebp+24h] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
call sub_404B80  +
mov ecx [ebp+8Ch] +
xor edx edx +
test eax eax +
mov [ebp+6Ch] eax +
mov [ecx+30h] eax +
jnz loc_41F660  +
mov dword ptr [ebx] 1 +
jmp loc_41F622  +
mov [esp+2Ch+var_28] 0C8Bh +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_402930  +
mov eax [edi+0A0h] +
mov ecx [ebp+8Ch] +
mov eax [eax+934h] +
mov eax [eax+8] +
jmp loc_41F72D  +
mov [esp+2Ch+var_24] offset aBfd_elf_set_gr +
mov [esp+2Ch+var_28] 0CDAh +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_402960  +
jmp sub_41F820  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_405CC0  +
test eax eax +
jz loc_41FB88  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edi+14h] +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_406180  +
test eax eax +
jz loc_41FBC0  +
mov edx [edi+24h] +
mov ecx [edi+50h] +
mov ebx [edi+54h] +
mov [eax+24h] edx +
mov edx [edi+40h] +
mov [eax+50h] ecx +
mov [eax+54h] ebx +
mov [eax+40h] edx +
mov eax 1 +
jmp loc_41FB81  +
xor eax eax +
jmp loc_41FB81  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 9Ch +
mov eax [esp+0A8h+arg_0] +
lea edi [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] offset aSLd +
mov [esp+0A8h+var_A8] edi +
mov [esp+0A8h+var_8C] ecx +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+arg_4] +
mov [esp+0A8h+var_A0] eax +
call sprintf  +
mov eax edi +
mov edx [eax] +
add eax 4 +
lea ebx [edx-1010101h] +
not edx  +
and ebx edx +
and ebx 80808080h +
jz loc_41FC0E  +
mov ecx ebx +
shr ecx 10h +
test ebx 8080h +
cmovz ebx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add bl bl +
sbb eax 3 +
sub eax edi +
add eax 1 +
mov [esp+0A8h+var_A4] eax +
mov [esp+0A8h+var_A8] esi +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_41FCC0  +
mov [esp+0A8h+var_A4] edi +
mov [esp+0A8h+var_A8] eax +
call strcpy  +
mov [esp+0A8h+var_A0] 100h +
mov [esp+0A8h+var_A4] ebx +
mov [esp+0A8h+var_A8] esi +
call sub_4060A0  +
test eax eax +
mov ecx eax +
jz loc_41FCC0  +
mov eax [ebp+0] +
mov [ecx+24h] eax +
mov eax [esp+0A8h+var_8C] +
mov eax [eax] +
mov dword ptr [ecx+54h] 0 +
mov dword ptr [ecx+40h] 2 +
mov [ecx+50h] eax +
mov eax [esi+0A0h] +
mov edx [eax+930h] +
mov eax 1 +
mov edi [edx+8] +
cmp [esp+0A8h+arg_0] edi +
jz loc_41FCD0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+0A8h+arg_4] +
mov eax esi +
call sub_41FB60  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_1C] ecx +
call strlen  +
mov [esp+38h+var_38] edi +
add eax 6 +
mov [esp+38h+var_34] eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_41FD82  +
mov eax [esp+38h+arg_0] +
mov esi offset a_rela +
mov ecx [esp+38h+var_1C] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aSS_6 +
test eax eax +
mov eax offset a_rel +
cmovz esi eax +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_30] esi +
call sprintf  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
mov [ebp+0] eax +
setnz al  +
add esp 2Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+4] +
mov [esp+28h+var_1C] ecx +
mov ecx [edx] +
mov edi [eax+1B0h] +
test ecx ecx +
jz loc_41FDC2  +
mov [esp+28h+var_24] 0B19h +
mov [esp+28h+var_28] offset a____Binutil_10 +
call sub_402930  +
mov [esp+28h+var_24] 38h +
mov [esp+28h+var_28] esi +
call sub_404C60  +
mov edx [esp+28h+arg_4] +
test edx edx +
mov ebx eax +
mov [ebp+0] eax +
jz loc_41FE53  +
mov dword ptr [eax] 0FFFFFFFFh +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_41FE40  +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 4 +
movzx edx byte ptr [eax+4] +
mov [ebx+28h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+18h] 0 +
shl eax cl +
mov [ebx+24h] eax +
mov eax 1 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 9 +
movzx edx byte ptr [eax+3] +
jmp loc_41FDFE  +
mov eax [esp+28h+arg_0] +
mov edx ebx +
mov ecx [esp+28h+var_1C] +
mov [esp+28h+var_28] eax +
mov eax esi +
call sub_41FCF0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_41FDE5  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [edi+4] +
mov ebx [esi+8Ch] +
mov ebp [esi] +
mov eax [eax+1B0h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+4] +
test edx edx +
jnz loc_420150  +
mov eax [eax] +
test eax eax +
jz loc_4202C0  +
test byte ptr [eax+0Ch] 1 +
jz loc_41FED5  +
mov edx [esi+14h] +
test dh 20h +
jz loc_41FED5  +
cmp byte ptr [ebp+1] 64h +
jz loc_420370  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
mov [ebx] eax +
jz loc_420277  +
mov edx [esi+14h] +
mov [esp+2Ch+var_10] 0 +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
jnz loc_41FF23  +
test byte ptr [esi+18h] 1 +
jz loc_420202  +
mov eax [esi+1Ch] +
mov [ebx+0Ch] eax +
mov ecx [esi+40h] +
mov eax [esi+24h] +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp ecx 1Eh +
mov [ebx+18h] eax +
mov dword ptr [ebx+1Ch] 0 +
ja loc_420293  +
mov eax 1 +
shl eax cl +
mov ecx edx +
and ecx 2000000h +
mov [ebx+24h] eax +
mov eax 11h +
mov [ebx+2Ch] esi +
mov dword ptr [ebx+30h] 0 +
mov [esp+2Ch+var_14] ecx +
jnz loc_41FF8C  +
mov ecx edx +
mov al 8 +
and ecx 103h +
cmp ecx 1 +
mov ecx 1 +
cmovnz eax ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_420158  +
mov [ebx+4] eax +
mov ecx eax +
cmp ecx 0Bh +
jz loc_4203D6  +
jbe loc_4201B0  +
cmp ecx 6FFFFFFDh +
jz loc_4203B0  +
ja loc_420300  +
cmp ecx 11h +
jz loc_420346  +
cmp ecx 6FFFFFF6h +
jnz loc_41FFE8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 40h +
setnz al  +
movzx eax al +
shl eax 2 +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_41FFF4  +
or dword ptr [ebx+8] 2 +
test dl 8 +
jnz loc_41FFFD  +
or dword ptr [ebx+8] 1 +
test dl 10h +
jz loc_420006  +
or dword ptr [ebx+8] 4 +
test edx 800000h +
jz loc_42002D  +
mov eax [ebx+8] +
mov ecx eax +
or ecx 10h +
test edx 1000000h +
mov [ebx+8] ecx +
mov ecx [esi+78h] +
mov [ebx+28h] ecx +
jz loc_42002D  +
or eax 30h +
mov [ebx+8] eax +
mov eax [esp+2Ch+var_14] +
test eax eax +
jnz loc_420049  +
mov eax [esi+8Ch] +
mov eax [eax+74h] +
test eax eax +
jz loc_420049  +
or dword ptr [ebx+8] 200h +
test dh 4 +
jz loc_420086  +
mov eax [esi+24h] +
or dword ptr [ebx+8] 400h +
test eax eax +
jnz loc_420086  +
test dh 1 +
jnz loc_420086  +
mov ecx [esi+0A4h] +
mov dword ptr [ebx+18h] 0 +
test ecx ecx +
jz loc_420086  +
mov eax [ecx+0Ch] +
add eax [ecx+8] +
test eax eax +
mov [ebx+18h] eax +
jz loc_420086  +
mov dword ptr [ebx+4] 8 +
mov eax edx +
and eax 2008000h +
cmp eax 8000h +
jz loc_420287  +
and edx 4 +
jz loc_420110  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
jz loc_4200D0  +
mov ecx [ebx+40h] +
mov edx [ebx+50h] +
mov [esp+2Ch+var_18] ecx +
add ecx edx +
test ecx ecx +
jz loc_4200D0  +
movzx ecx byte ptr [eax] +
and ecx 3 +
cmp cl 2 +
jz loc_420210  +
cmp byte ptr [eax+2] 0 +
js loc_420210  +
movzx ecx byte ptr [esi+19h] +
lea eax [ebx+3Ch] +
lea edx [ebx+4Ch] +
shr cl 2 +
and ecx 1 +
test byte ptr [esi+19h] 4 +
mov [esp+2Ch+var_2C] ecx +
mov ecx ebp +
cmovz edx eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_41FD90  +
test eax eax +
jnz loc_420110  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
lea esi [esi+0] +
mov eax [esp+2Ch+var_1C] +
mov ebp [ebx+4] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_42013A  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] edi +
call eax  +
test eax eax +
jnz loc_42013A  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
cmp ebp 8 +
jnz loc_420150  +
mov eax [esi+24h] +
test eax eax +
jz loc_420150  +
mov dword ptr [ebx+4] 8 +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 8 +
jnz loc_41FF9C  +
cmp eax 1 +
jnz loc_41FFE8  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_41FFF4  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] offset aWarningSection +
call off_4730E4  +
mov dword ptr [ebx+4] 1 +
mov edx [esi+14h] +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax edx +
and eax 2000000h +
mov [esp+2Ch+var_14] eax +
jmp loc_41FFE8  +
cmp ecx 5 +
jz loc_420396  +
jbe loc_4203F0  +
cmp ecx 6 +
jz loc_420330  +
cmp ecx 9 +
nop   +
lea esi [esi+0] +
jnz loc_41FFE8  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 4 +
jz loc_41FFE8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+3] +
mov [ebx+28h] eax +
jmp loc_41FFE8  +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_41FF29  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_420241  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jnz loc_420241  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+3Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_41FD90  +
test eax eax +
jz loc_420277  +
mov edx [ebx+50h] +
test edx edx +
jz loc_420110  +
mov edx [ebx+4Ch] +
test edx edx +
jnz loc_420110  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+4Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 1 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_41FD90  +
test eax eax +
jnz loc_420110  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
jmp loc_420150  +
or dword ptr [ebx+8] 80000000h +
jmp loc_420098  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] offset aBErrorAlignmen +
call off_4730E4  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+17h] 10h +
jz loc_41FED5  +
mov eax [edi+28h] +
shr eax 5 +
test eax 28000h +
jz loc_420425  +
cmp byte ptr [ebp+1] 7Ah +
jnz loc_41FED5  +
mov edx ebp +
mov eax edi +
call sub_41F300  +
test eax eax +
mov ebp eax +
jnz loc_41FED5  +
jmp loc_420277  +
cmp ecx 6FFFFFFEh +
jnz loc_420352  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_420455  +
mov eax [edi+0A0h] +
mov eax [eax+23Ch] +
mov [ebx+20h] eax +
jmp loc_41FFE8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+6] +
mov [ebx+28h] eax +
jmp loc_41FFE8  +
mov dword ptr [ebx+28h] 4 +
jmp loc_41FFE8  +
cmp ecx 6FFFFFFFh +
jnz loc_41FFE8  +
mov dword ptr [ebx+28h] 2 +
jmp loc_41FFE8  +
cmp byte ptr [ebp+6] 5Fh +
jnz loc_41FED5  +
or edx 8000000h +
mov [esi+14h] edx +
mov [esp+2Ch+var_10] 1 +
mov dword ptr [ebx] 0FFFFFFFFh +
jmp loc_41FF0E  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
mov [ebx+28h] eax +
jmp loc_41FFE8  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_420490  +
mov eax [edi+0A0h] +
mov eax [eax+238h] +
mov [ebx+20h] eax +
jmp loc_41FFE8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [ebx+28h] eax +
jmp loc_41FFE8  +
cmp ecx 4 +
jnz loc_41FFE8  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 8 +
jz loc_41FFE8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+4] +
mov [ebx+28h] eax +
jmp loc_41FFE8  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jnz loc_41FED5  +
mov edx ebp +
mov eax edi +
call sub_41F350  +
test eax eax +
jz loc_420277  +
cmp byte ptr [ebp+1] 7Ah +
jz loc_4204B6  +
mov ebp eax +
lea esi [esi+0] +
jmp loc_41FED5  +
mov ecx [edi+0A0h] +
mov ecx [ecx+23Ch] +
test ecx ecx +
jz loc_41FFE8  +
cmp eax ecx +
jz loc_41FFE8  +
mov [esp+2Ch+var_28] 0C08h +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_402930  +
jmp loc_42018E  +
mov ecx [edi+0A0h] +
mov ecx [ecx+238h] +
test ecx ecx +
jz loc_41FFE8  +
cmp eax ecx +
jz loc_41FFE8  +
mov [esp+2Ch+var_28] 0BFCh +
jmp loc_420479  +
mov [esp+2Ch+var_28] 0B87h +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
mov [esp+2Ch+var_18] eax +
call sub_402930  +
mov eax [esp+2Ch+var_18] +
mov ebp eax +
jmp loc_41FED5  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset a8_8x +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] ebx +
movzx edx word ptr [esi] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+2] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+2] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+4] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+6] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+6] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+8] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+0Ch] +
mov edx [esi+0Ch] +
add ebx 10h +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+2] +
mov [ebx] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+4] +
mov [ebx+2] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+6] +
mov [ebx+4] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+6] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edx [esp+1Ch+arg_8] +
mov [edx] ax +
add esp 1Ch +
retn   +
***
jmp sub_4208E0  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov eax [eax+4] +
mov eax [eax+60h] +
mov [esp+arg_4] ecx +
movzx edx word ptr [edx] +
mov [esp+arg_0] edx +
jmp eax  +
***
xor eax eax +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test cl cl +
jz locret_420932  +
shl eax 4 +
add eax ecx +
mov ecx eax +
and ecx 0F0000000h +
jz loc_420906  +
xor eax ecx +
add edx 1 +
shr ecx 18h +
xor eax ecx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jnz loc_420911  +
retn   +
***
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
mov eax 1505h +
test dl dl +
jz loc_420968  +
mov ebx eax +
add ecx 1 +
shl ebx 5 +
add edx ebx +
add eax edx +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_420954  +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
cmp esi 937h +
jbe loc_4209F1  +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
call sub_404C60  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_420A10  +
mov edx [esp+14h+arg_8] +
mov esi 1 +
mov [eax+920h] edx +
movzx edx byte ptr [ebx+28h] +
and edx 18h +
cmp dl 8 +
jz loc_4209E9  +
mov [esp+14h+var_10] 40h +
mov [esp+14h+var_14] ebx +
call sub_404C60  +
test eax eax +
jz loc_420A10  +
mov edx [ebx+0A0h] +
mov [edx+934h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+1Ch] 0FFFFFFFFh +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0F0h +
mov [esp+14h+var_14] offset a____Binutil_10 +
call sub_402930  +
jmp loc_420985  +
xor esi esi +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+4] +
mov dword ptr [esp+4] 938h +
mov [esp] eax +
mov [esp+8] edx +
call sub_420970  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov eax [ebx+4] +
mov eax [eax+78h] +
mov [esp] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_420A99  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 14h +
mov [esp] ebx +
call sub_404C60  +
xor edx edx +
mov [esi+930h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+930h] +
test eax eax +
setnz dl  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_420AB0  +
***
mov ecx [esp+arg_8] +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test ecx ecx +
jz loc_420AC2  +
jmp loc_420AD0  +
mov eax offset unk_4896B2 +
retn   +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov eax [eax+0A0h] +
mov ebx [eax+40h] +
test ebx ebx +
jz loc_420C07  +
cmp [eax+214h] edx +
jbe loc_420C07  +
lea edi [ebx+edx*4] +
mov ebx [edi] +
mov eax [ebx+30h] +
test eax eax +
jz loc_420B20  +
mov eax [ebx+18h] +
cmp eax ecx +
jbe loc_420C11  +
mov eax [ebx+30h] +
add eax ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
cmp eax 5FFFFFFFh +
jbe loc_420C72  +
mov ebp [ebx+18h] +
mov [esp+4Ch+var_28] ecx +
mov eax [ebx+10h] +
mov [esp+4Ch+var_2C] edx +
mov edx [ebx+14h] +
lea ecx [ebp+1] +
cmp ecx 1 +
mov [esp+4Ch+var_24] ecx +
jbe loc_420C00  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_4086D0  +
mov edx [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+var_28] +
test eax eax +
jnz loc_420C6E  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_20] ecx +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_48] eax +
call sub_404B80  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_20] +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_420C6E  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_24] ecx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
call sub_4084C0  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_24] +
cmp ebp eax +
jz loc_420C97  +
call sub_402790  +
sub eax 1 +
jz loc_420BE5  +
mov [esp+4Ch+var_4C] 12h +
call sub_4029E0  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call sub_404DD0  +
mov ebx [edi] +
mov dword ptr [ebx+18h] 0 +
nop   +
mov dword ptr [ebx+30h] 0 +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov ebp [edi+3Ch] +
mov edi off_4730E4 +
cmp edx ebp +
mov edx [ebx] +
jz loc_420C61  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_2C] ecx +
call sub_420AB0  +
mov edx [ebx+18h] +
mov ecx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBInvalidString +
call edi  +
xor eax eax +
jmp loc_420B12  +
cmp ecx edx +
jnz loc_420C26  +
mov edx eax +
mov eax offset a_shstrtab +
jmp loc_420C41  +
mov ebx [edi] +
jmp loc_420C00  +
cmp eax 3 +
jz loc_420B2E  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBAttemptToLoad +
call off_4730E4  +
xor eax eax +
jmp loc_420B12  +
mov eax [esp+4Ch+var_2C] +
mov byte ptr [eax+ebp] 0 +
mov eax [edi] +
mov edi [esp+4Ch+var_2C] +
mov [eax+30h] edi +
jmp loc_420B02  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov esi [eax+4] +
cmp dword ptr [esi+4] 5 +
jnz loc_420FD0  +
mov ebx [esp+3Ch+arg_8] +
test ebx ebx +
jz loc_420D89  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+0A0h] +
mov edi [ebp+208h] +
test edi edi +
jz loc_420E30  +
mov ebx [ebp+40h] +
mov eax edi +
mov edx [eax+1Ch] +
cmp [ebx+edx*4] ecx +
jz loc_420D0C  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_420CF5  +
add ebp 48h +
cmp ecx ebp +
cmovz eax edi +
mov [esp+3Ch+var_24] eax +
mov ebp [esi+1B0h] +
xor ebx ebx +
mov edx [esp+3Ch+arg_14] +
mov esi [ecx+10h] +
mov edi [ecx+14h] +
mov eax [ebp+174h] +
test edx edx +
movzx eax byte ptr [eax+5] +
mov [esp+3Ch+var_1C] eax +
jz loc_420E3D  +
mov eax [esp+3Ch+var_1C] +
xor edx edx +
imul eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
add eax esi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
adc edx edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4086D0  +
test eax eax +
jz loc_420D95  +
xor esi esi +
mov [esp+3Ch+arg_10] 0 +
test ebx ebx +
jz loc_420D7D  +
mov [esp+3Ch+var_3C] ebx +
call free  +
test esi esi +
jz loc_420D89  +
mov [esp+3Ch+var_3C] esi +
call free  +
mov eax [esp+3Ch+arg_10] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+var_1C] +
imul esi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_4084C0  +
cmp eax esi +
jnz loc_420D67  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_420E66  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_420E66  +
mov edx [eax+14h] +
xor esi esi +
mov eax [eax+10h] +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_24] eax +
test edx edx +
jz loc_420FA3  +
mov eax [esp+3Ch+arg_C] +
xor edx edx +
mov [esp+3Ch+var_30] 0 +
shl eax 2 +
add eax [esp+3Ch+var_24] +
adc edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4086D0  +
test eax eax +
jz loc_420F4A  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_420D71  +
mov [esp+3Ch+var_24] 0 +
jmp loc_420D10  +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
call sub_4074A0  +
test eax eax +
mov [esp+3Ch+arg_14] eax +
jnz loc_420FEC  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_420D89  +
xor esi esi +
mov [esp+3Ch+arg_18] 0 +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_18] 0 +
test eax eax +
jz loc_420F7A  +
mov eax [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*4] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+3Ch+var_24] eax +
jnb loc_420D71  +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_14] esi +
mov esi ebp +
mov [esp+3Ch+var_10] ebx +
mov ebx [esp+3Ch+arg_18] +
mov ebp edx +
jmp loc_420EC9  +
add edi 14h +
add ebp [esp+3Ch+var_1C] +
test ebx ebx +
lea eax [ebx+4] +
cmovnz ebx eax +
cmp [esp+3Ch+var_24] edi +
jbe loc_420F3D  +
mov eax [esi+174h] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+20h] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jnz loc_420EB4  +
mov eax ebp +
xor edx edx +
mov esi [esp+3Ch+var_14] +
sub eax [esp+3Ch+arg_14] +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] offset aBSymbolNumberL +
div  [esp+3Ch+var_1C] +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] eax +
call off_4730E4  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+arg_10] 0 +
test eax eax +
jz loc_420D71  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_420D71  +
mov esi [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
jmp loc_420D71  +
mov eax [esp+3Ch+arg_8] +
lea edi ds:0[eax*4] +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] eax +
call sub_4084C0  +
cmp eax edi +
jnz loc_420E22  +
jmp loc_420E70  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] eax +
call sub_4074A0  +
test eax eax +
mov [esp+3Ch+arg_10] eax +
jz loc_420D71  +
mov [esp+3Ch+var_18] eax +
jmp loc_420E84  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call sub_4074A0  +
test eax eax +
mov esi eax +
jz loc_420E22  +
mov [esp+3Ch+arg_18] eax +
jmp loc_420DED  +
mov [esp+3Ch+var_34] offset aBfd_elf_get_el +
mov [esp+3Ch+var_38] 18Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_10 +
call sub_402960  +
mov ebx eax +
jmp loc_420D38  +
***
sub esp 4 +
mov ebx [esp+4+arg_8] +
mov eax [esp+4+arg_4] +
mov esi [esp+4+arg_C] +
mov ecx [ebx+8] +
mov edx [eax+1Ch] +
test ecx ecx +
jz loc_421040  +
mov eax [esp+4+arg_0] +
call loc_420AD0  +
test eax eax +
jz loc_421077  +
test esi esi +
jz loc_421034  +
cmp byte ptr [eax] 0 +
nop   +
jnz loc_421034  +
mov eax [esi] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
movzx edx byte ptr [ebx+0Ch] +
mov eax offset unk_4896B2 +
and edx 0Fh +
cmp dl 3 +
jnz loc_421028  +
mov ecx [ebx+10h] +
mov ebx [esp+4+arg_0] +
mov edx [ebx+0A0h] +
cmp ecx [edx+214h] +
jnb loc_421028  +
mov ebx [edx+40h] +
mov edx [edx+3Ch] +
mov ecx [ebx+ecx*4] +
mov ecx [ecx] +
test ecx ecx +
jz loc_421028  +
jmp loc_42101B  +
mov eax offset aNull_0 +
jmp loc_421034  +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+44h+arg_0] +
mov eax [ebp+0A0h] +
mov ebx [ebp+64h] +
mov eax [eax+908h] +
test ebx ebx +
mov [esp+44h+var_24] eax +
jnz loc_4210DB  +
jmp loc_421137  +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_4210D4  +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBWarningSh_lin +
call eax  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_421137  +
mov eax [ebx+8Ch] +
test byte ptr [eax+8] 80h +
jz loc_4210D4  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_4210B0  +
mov ecx [ebp+0A0h] +
cmp edx [ecx+214h] +
jb loc_4211C0  +
mov eax [ebx+94h] +
xor edi edi +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_44] offset aBSh_linkDInSec +
mov [esp+44h+var_40] eax +
call off_4730E4  +
mov eax [ebx+8Ch] +
xor ecx ecx +
mov [eax+64h] ecx +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4210DB  +
mov eax [esp+44h+var_24] +
cmp eax 0FFFFFFFFh +
jz loc_421210  +
test eax eax +
jz loc_421210  +
mov [esp+44h+var_28] 0 +
mov edx edi +
mov eax [ebp+0A0h] +
mov edi [esp+44h+var_28] +
mov eax [eax+904h] +
mov ebx [eax+edi*4] +
test ebx ebx +
jz loc_4211E0  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_4211E0  +
mov eax [ebx+30h] +
test eax eax +
jz loc_4211E0  +
mov edi [ebx+18h] +
lea esi [eax+4] +
shr edi 2 +
jmp loc_421195  +
mov eax [eax+8Ch] +
mov ecx [ebx+2Ch] +
mov [eax+78h] ecx +
add esi 4 +
sub edi 1 +
jz loc_4211FB  +
mov ecx [esi] +
mov eax [ecx+2Ch] +
test eax eax +
jnz loc_421186  +
mov eax [ecx+4] +
cmp eax 9 +
jz loc_4211B0  +
cmp eax 4 +
jnz loc_421220  +
mov eax [ebx+2Ch] +
sub dword ptr [eax+24h] 4 +
jmp loc_421192  +
mov ecx [ecx+40h] +
mov ecx [ecx+edx*4] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_421100  +
mov [eax+64h] ecx +
jmp loc_421130  +
mov eax [esp+44h+var_28] +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBSectionGroupE +
mov [esp+44h+var_3C] eax +
call off_4730E4  +
xor edx edx +
add [esp+44h+var_28] 1 +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_24] eax +
jnz loc_421156  +
mov edi edx +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx off_4730E4 +
mov ecx [ecx] +
mov [esp+44h+var_20] edx +
mov edx [ebx+2Ch] +
test ecx ecx +
mov edx [edx] +
mov [esp+44h+var_1C] edx +
mov edx [ebp+0A0h] +
mov edx [edx+3Ch] +
mov [esp+44h+var_18] edx +
mov edx offset unk_4896B2 +
jnz loc_421273  +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_44] offset aBUnknownDSecti +
call eax  +
xor edx edx +
jmp loc_421192  +
mov edx [esp+44h+var_18] +
mov eax ebp +
call loc_420AD0  +
mov edx eax +
mov eax [esi] +
mov eax [eax+4] +
jmp loc_42124B  +
***
mov eax [esp+8] +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
setnz al  +
movzx eax al +
retn   +
***
mov ecx [esp+8] +
mov edx [ecx+0Ch] +
mov edx [edx+24h] +
test edx edx +
jnz loc_4212F0  +
mov eax [esp+14h] +
mov ecx [esp+8] +
mov eax [eax+38h] +
add [ecx+4] eax +
xor eax eax +
retn   +
***
mov edx [ecx+8] +
test edx edx +
jz loc_4212DE  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_421325  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_421318  +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_421360  +
mov edx [ebx+0A0h] +
mov edx [edx+20h] +
mov [eax+20h] edx +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov dword ptr [edx+3Ch] 1 +
mov edx [ebx+0A0h] +
mov edx [edx+20Ch] +
mov [eax+20Ch] edx +
mov edx [ebx+0A0h] +
mov eax [esi+0A0h] +
movzx edx byte ptr [edx+7] +
mov [eax+7] dl +
mov [esp+4] esi +
mov [esp] ebx +
call sub_44BB80  +
mov eax [ebx+0A0h] +
mov [esp+10h] eax +
mov ebp [eax+40h] +
mov eax [esi+0A0h] +
mov edx [eax+40h] +
test edx edx +
jz loc_421318  +
test ebp ebp +
jz loc_421318  +
mov eax [eax+214h] +
test eax eax +
jz loc_421318  +
lea eax [edx+eax*4] +
mov edi edx +
mov [esp+8] eax +
jmp loc_4213DD  +
add edi 4 +
cmp edi [esp+8] +
jz loc_421318  +
mov ecx [edi] +
test ecx ecx +
jz loc_4213D0  +
cmp dword ptr [ecx+4] 8 +
jnz loc_4213D0  +
mov eax [ecx+18h] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_4213D0  +
mov eax [ecx+20h] +
test eax eax +
mov [esp+18h] eax +
jz loc_421406  +
mov eax [ecx+1Ch] +
test eax eax +
jnz loc_4213D0  +
mov eax [esp+10h] +
mov ebx [eax+214h] +
test ebx ebx +
jz loc_4213D0  +
mov esi [ecx+8] +
xor eax eax +
mov [esp+14h] edi +
jmp loc_421427  +
add eax 1 +
cmp eax ebx +
jz loc_421495  +
mov edx [ebp+eax*4+0] +
cmp [edx+8] esi +
jnz loc_421420  +
mov edi [ecx+24h] +
cmp [edx+24h] edi +
jnz loc_421420  +
mov edi [ecx+28h] +
cmp [edx+28h] edi +
jnz loc_421420  +
mov edi [esp+0Ch] +
cmp edi [edx+18h] +
jnz loc_421420  +
mov edi [ecx+0Ch] +
cmp [edx+0Ch] edi +
jnz loc_421420  +
mov edi [edx+20h] +
cmp [esp+18h] edi +
mov [esp+1Ch] edi +
jnz loc_42149E  +
mov edi [ecx+1Ch] +
cmp [edx+1Ch] edi +
jz loc_421420  +
mov eax [esp+18h] +
mov edi [esp+14h] +
mov [esp+1Ch] eax +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_42147E  +
mov eax [edx+1Ch] +
mov [ecx+1Ch] eax +
cmp dword ptr [esp+18h] 0 +
jnz loc_4213D0  +
mov eax [esp+1Ch] +
mov [ecx+20h] eax +
jmp loc_4213D0  +
***
mov edi [esp+14h] +
jmp loc_4213D0  +
***
mov edi [esp+14h] +
jmp loc_421472  +
***
mov edx [esp+arg_0] +
mov eax [edx+0A0h] +
mov ecx [eax+914h] +
test ecx ecx +
jz loc_42154A  +
mov esi [eax+918h] +
test esi esi +
jz loc_421540  +
mov eax [esp+arg_4] +
mov ecx [esp+arg_8] +
movzx ebx word ptr [eax+30h] +
movsx eax bx +
shr eax 1Fh +
and ebx 7FFFh +
mov [ecx] eax +
mov eax offset unk_4896B2 +
jz loc_421539  +
cmp ebx 1 +
jz loc_42154F  +
mov edx [edx+0A0h] +
cmp ebx [edx+238h] +
jbe loc_421557  +
mov esi [edx+244h] +
test esi esi +
jz loc_421539  +
mov edx [esi+18h] +
test edx edx +
jnz loc_421527  +
jmp loc_421532  +
mov edx [edx+14h] +
test edx edx +
jz loc_421532  +
movzx ecx word ptr [edx+6] +
cmp ecx ebx +
jnz loc_421520  +
mov eax [edx+10h] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_421512  +
pop ebx  +
pop esi  +
retn   +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_4214D4  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax offset aBase +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+240h] +
lea eax [ebx+ebx*4] +
pop ebx  +
pop esi  +
lea eax [ecx+eax*8] +
mov eax [eax-10h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+4Ch] +
mov ebx [esp+44h] +
mov edi [esp+48h] +
cmp eax 1 +
jz loc_4216D0  +
jb loc_4216B6  +
cmp eax 2 +
jnz loc_4216AE  +
mov eax [edi+10h] +
test eax eax +
jz loc_421800  +
mov esi [eax] +
mov eax [esp+40h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0CCh] +
test eax eax +
jz loc_421726  +
mov edx [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_421726  +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aS_15 +
mov [esp] ebx +
call fprintf  +
mov eax [edi+10h] +
test eax eax +
jz loc_421742  +
test byte ptr [eax+15h] 10h +
jz loc_421742  +
mov eax [edi+18h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_403310  +
lea eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_4214B0  +
test eax eax +
mov esi eax +
jz loc_42165C  +
mov eax [esp+1Ch] +
mov [esp+8] esi +
test eax eax +
jnz loc_421750  +
mov dword ptr [esp+4] offset a11s +
mov [esp] ebx +
call fprintf  +
movzx eax byte ptr [edi+25h] +
cmp al 1 +
jz loc_4217D5  +
jb loc_42169A  +
cmp al 2 +
jz loc_4217B0  +
cmp al 3 +
jnz loc_421791  +
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_protected +
call fwrite  +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aS_17 +
mov [esp] ebx +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call fputs  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aElf +
call fwrite  +
mov eax [edi+8] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_403310  +
mov eax [edi+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+4] offset aLx +
mov [esp+8] eax +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov ebp [edi+4] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_413100  +
jmp loc_4215DE  +
***
mov eax [edi+1Ch] +
jmp loc_42160A  +
***
mov dword ptr [esp+4] offset aS_16 +
mov [esp] ebx +
call fprintf  +
mov [esp] esi +
mov esi 0Ah +
call strlen  +
sub esi eax +
test esi esi +
jle loc_42165C  +
mov [esp+4] ebx +
mov dword ptr [esp] 20h +
call putc  +
sub esi 1 +
jnz loc_421777  +
jmp loc_42165C  +
***
mov [esp+8] eax +
mov dword ptr [esp+4] offset a0x02x +
mov [esp] ebx +
call fprintf  +
jmp loc_42169A  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 8 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_hidden +
call fwrite  +
jmp loc_42169A  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Ah +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_internal +
call fwrite  +
jmp loc_42169A  +
***
mov esi offset aNone_1 +
jmp loc_4215A8  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+48h+arg_0] +
mov esi [ebx+0A0h] +
mov edx [esi+214h] +
cmp edx [esp+48h+arg_4] +
jbe loc_4219BB  +
mov eax ds:dword_49A41C +
add eax 1 +
cmp eax 3 +
mov ds:dword_49A41C eax +
ja loc_4219C3  +
mov eax [esp+48h+arg_4] +
shl eax 2 +
mov [esp+48h+var_30] eax +
mov eax [esi+40h] +
mov edx offset unk_4896B2 +
mov edi [esp+48h+var_30] +
mov ebp [eax+edi] +
mov eax [esi+3Ch] +
mov ecx [ebp+0] +
test ecx ecx +
jnz loc_421C14  +
mov eax [ebx+4] +
mov ecx [eax+1B0h] +
mov eax [ebp+4] +
cmp eax 0Ah +
jz loc_421CE4  +
jbe loc_421A20  +
cmp eax 12h +
jz loc_4222A3  +
jbe loc_421B90  +
cmp eax 6FFFFFFDh +
jz loc_422208  +
jbe loc_422162  +
cmp eax 6FFFFFFEh +
jz loc_421E88  +
cmp eax 6FFFFFFFh +
jnz loc_422170  +
cmp dword ptr [ebp+28h] 2 +
jnz loc_421980  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+914h] edi +
mov eax [ebx+0A0h] +
mov [eax+160h] ecx +
mov ecx [ebp+4] +
mov [eax+164h] ecx +
mov ecx [ebp+8] +
mov [eax+168h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+16Ch] ecx +
mov ecx [ebp+10h] +
mov [eax+170h] ecx +
mov ecx [ebp+14h] +
mov [eax+174h] ecx +
mov ecx [ebp+18h] +
mov [eax+178h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+17Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+180h] ecx +
mov ecx [ebp+24h] +
mov [eax+184h] ecx +
mov ecx [ebp+28h] +
mov [eax+188h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+18Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+190h] ecx +
mov ecx [ebp+34h] +
mov [eax+194h] ecx +
mov eax edi +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_422830  +
jmp loc_421982  +
mov ebx ebp +
lea esi [esi+0] +
xor eax eax +
mov edx ds:dword_49A414 +
test edx edx +
jz loc_421998  +
cmp ds:dword_49A418 ebx +
jz loc_421CF0  +
mov edi ds:dword_49A41C +
lea edx [edi-1] +
test edx edx +
mov ds:dword_49A41C edx +
jnz loc_4219BB  +
mov ds:dword_49A414 0 +
mov ds:dword_49A418 ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ds:dword_49A418 ebx +
jz loc_422150  +
mov ds:dword_49A414 0 +
shl edx 2 +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
call sub_404C60  +
mov ds:dword_49A418 ebx +
mov ds:dword_49A414 eax +
mov esi [esp+48h+arg_4] +
lea edi ds:0[esi*4] +
add eax edi +
mov ebp [eax] +
mov [esp+48h+var_30] edi +
test ebp ebp +
jnz loc_421D00  +
mov dword ptr [eax] 1 +
mov esi [ebx+0A0h] +
jmp loc_421854  +
cmp eax 4 +
jz loc_421F23  +
ja loc_421C30  +
cmp eax 1 +
jz loc_422140  +
nop   +
lea esi [esi+0] +
jb loc_421CE4  +
cmp eax 2 +
jz loc_421D18  +
cmp eax 3 +
jnz loc_422170  +
mov edi [ebp+2Ch] +
test edi edi +
jnz loc_421CE4  +
mov eax [esp+48h+arg_4] +
cmp [esi+3Ch] eax +
jz loc_422632  +
mov edi [ebx+0A0h] +
mov ecx [esp+48h+arg_4] +
mov esi [edi+90Ch] +
mov eax [edi+40h] +
mov [esp+48h+var_2C] esi +
mov esi [eax+esi*4] +
cmp [esi+1Ch] ecx +
jz loc_4226DB  +
mov esi [edi+910h] +
mov ecx [eax+esi*4] +
mov [esp+48h+var_28] esi +
mov esi [esp+48h+arg_4] +
cmp [ecx+1Ch] esi +
jz loc_421B48  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_421AC1  +
mov ecx [esp+48h+var_28] +
test ecx ecx +
jnz loc_422140  +
mov ecx [edi+214h] +
cmp ecx 1 +
jbe loc_422140  +
mov [esp+48h+var_28] edx +
mov edx edi +
mov esi 1 +
mov [esp+48h+var_2C] ebp +
mov edi ecx +
mov ebp ebx +
mov ecx edx +
mov ebx [esp+48h+arg_4] +
jmp loc_421AFE  +
add esi 1 +
cmp esi edi +
jz loc_422136  +
mov eax [ecx+40h] +
mov eax [eax+esi*4] +
cmp [eax+1Ch] ebx +
jnz loc_421AF0  +
cmp esi ebx +
jz loc_421978  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebp +
call sub_421810  +
test eax eax +
jz loc_421978  +
mov ecx [ebp+0A0h] +
cmp [ecx+90Ch] esi +
jz loc_4226D3  +
cmp [ecx+910h] esi +
jnz loc_421AF0  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov edi ecx +
mov ebp [esp+48h+var_2C] +
add edi 128h +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov ecx [ebx+0A0h] +
lea eax [ecx+128h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
mov edi [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] edi +
call sub_422830  +
jmp loc_421982  +
cmp eax 10h +
ja loc_4223B5  +
cmp eax 0Eh +
lea esi [esi+0] +
jnb loc_422140  +
cmp eax 0Bh +
jnz loc_422170  +
mov esi [ebx+0A0h] +
mov eax [esi+910h] +
cmp eax [esp+48h+arg_4] +
jz loc_421CE4  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_421980  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_422458  +
test eax eax +
mov eax [esp+48h+arg_4] +
jz loc_422566  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMultip +
call off_4730E4  +
mov eax 1 +
jmp loc_421982  +
mov edx eax +
mov eax ebx +
call loc_420AD0  +
test eax eax +
mov edx eax +
jz loc_421980  +
jmp loc_421871  +
cmp eax 8 +
ja loc_421F23  +
cmp eax 7 +
lea esi [esi+0] +
jnb loc_422140  +
cmp eax 5 +
jz loc_422140  +
cmp eax 6 +
jnz loc_422170  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_422830  +
test eax eax +
jz loc_421980  +
mov eax [ebx+0A0h] +
mov edx [ebp+1Ch] +
mov ecx [eax+214h] +
cmp edx ecx +
ja loc_422471  +
mov esi [eax+40h] +
mov edx [esi+edx*4] +
test edx edx +
jz loc_421980  +
cmp dword ptr [edx+4] 3 +
jz loc_421CE4  +
mov eax [eax+910h] +
test eax eax +
jnz loc_42249D  +
cmp ecx 1 +
jbe loc_421CE4  +
mov edx [esi+4] +
mov eax 1 +
cmp dword ptr [edx+4] 0Bh +
jnz loc_421CDD  +
jmp loc_422556  +
mov edx [esi+eax*4] +
cmp dword ptr [edx+4] 0Bh +
jz loc_422556  +
add eax 1 +
cmp eax ecx +
jnz loc_421CD0  +
mov eax 1 +
jmp loc_421982  +
mov edi [esp+48h+var_30] +
mov dword ptr [edx+edi] 0 +
jmp loc_421998  +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningLoopIn +
call off_4730E4  +
xor eax eax +
jmp loc_4219BB  +
mov esi [ebx+0A0h] +
mov eax [esi+90Ch] +
cmp eax [esp+48h+arg_4] +
jz loc_421CE4  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_421980  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_422458  +
test eax eax +
mov eax [esp+48h+arg_4] +
jnz loc_422798  +
mov [esi+90Ch] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+48h] ecx +
mov ecx [ebp+4] +
mov [eax+4Ch] ecx +
mov ecx [ebp+8] +
mov [eax+50h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+54h] ecx +
mov ecx [ebp+10h] +
mov [eax+58h] ecx +
mov ecx [ebp+14h] +
mov [eax+5Ch] ecx +
mov ecx [ebp+18h] +
mov [eax+60h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+64h] ecx +
mov ecx [ebp+20h] +
mov [eax+68h] ecx +
mov ecx [ebp+24h] +
mov [eax+6Ch] ecx +
mov ecx [ebp+28h] +
mov [eax+70h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+74h] ecx +
mov ecx [ebp+30h] +
mov [eax+78h] ecx +
mov ecx [ebp+34h] +
mov [eax+7Ch] ecx +
mov ecx [ebx+0A0h] +
mov eax [ecx+40h] +
lea ebp [ecx+48h] +
mov [eax+edi] ebp +
mov esi [ebx+28h] +
mov eax esi +
and esi 0FF80001Fh +
shr eax 5 +
and eax 3FFFFh +
mov edi eax +
or edi 10h +
shl edi 5 +
or esi edi +
mov [ebx+28h] esi +
test byte ptr [ecx+50h] 2 +
jz loc_421DFB  +
test al 40h +
jnz loc_4227FE  +
mov esi [ebx+0A0h] +
mov eax [esi+208h] +
test eax eax +
jz loc_421E32  +
mov edi [esp+48h+arg_4] +
cmp [eax+1Ch] edi +
mov edx [esp+48h+arg_4] +
jnz loc_421E29  +
jmp loc_421CE4  +
cmp [eax+1Ch] edx +
jz loc_421CE4  +
mov eax [eax+3Ch] +
test eax eax +
nop   +
jnz loc_421E20  +
mov eax [esp+48h+arg_4] +
mov ecx [esi+214h] +
add eax 1 +
cmp ecx eax +
jbe loc_421E65  +
mov edi [esi+40h] +
mov ebp [esp+48h+arg_4] +
jmp loc_421E57  +
add eax 1 +
cmp ecx eax +
jbe loc_421E65  +
mov edx [edi+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_421E50  +
cmp [edx+1Ch] ebp +
jnz loc_421E50  +
cmp eax ecx +
jz loc_4227C4  +
cmp eax [esp+48h+arg_4] +
jz loc_421CE4  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_421810  +
jmp loc_421982  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+91Ch] edi +
mov eax [ebx+0A0h] +
mov [eax+198h] ecx +
mov ecx [ebp+4] +
mov [eax+19Ch] ecx +
mov ecx [ebp+8] +
mov [eax+1A0h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1A4h] ecx +
mov ecx [ebp+10h] +
mov [eax+1A8h] ecx +
mov ecx [ebp+14h] +
mov [eax+1ACh] ecx +
mov ecx [ebp+18h] +
mov [eax+1B0h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1B4h] ecx +
mov ecx [ebp+20h] +
mov [eax+1B8h] ecx +
mov ecx [ebp+24h] +
mov [eax+1BCh] ecx +
mov ecx [ebp+28h] +
mov [eax+1C0h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1C4h] ecx +
mov ecx [ebp+30h] +
mov [eax+1C8h] ecx +
mov ecx [ebp+34h] +
mov [eax+1CCh] ecx +
mov eax edi +
jmp loc_421962  +
mov edi [ebx+0A0h] +
cmp eax 9 +
mov eax [ecx+174h] +
mov esi [edi+214h] +
mov [esp+48h+var_2C] esi +
mov esi [ebp+28h] +
jz loc_4223AC  +
movzx eax byte ptr [eax+4] +
cmp esi eax +
jnz loc_421980  +
mov eax [ebp+1Ch] +
cmp [esp+48h+var_2C] eax +
mov [esp+48h+var_28] eax +
jbe loc_4224B0  +
mov eax [ebx+28h] +
mov esi [edi+40h] +
shr eax 5 +
test al 42h +
jnz loc_421FE6  +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 2 +
jz loc_4224FA  +
cmp eax 0Bh +
jz loc_4224FA  +
mov ecx [esp+48h+var_2C] +
cmp ecx 1 +
jbe loc_422002  +
mov [esp+48h+var_24] ebp +
mov eax 1 +
mov ebp ecx +
mov [esp+48h+var_20] edi +
xor edi edi +
mov [esp+48h+var_1C] 0 +
lea esi [esi+0] +
mov ecx [esi+eax*4] +
mov ecx [ecx+4] +
cmp ecx 0Bh +
jz loc_421FC0  +
cmp ecx 2 +
jnz loc_421FCA  +
test edi edi +
jnz loc_4227B7  +
mov edi eax +
add eax 1 +
cmp eax ebp +
jnz loc_421FB0  +
mov eax edi +
mov ebp [esp+48h+var_24] +
test eax eax +
mov edi [esp+48h+var_20] +
jz loc_422002  +
mov [ebp+1Ch] eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 0Bh +
jz loc_4224FA  +
cmp eax 2 +
jz loc_4224FA  +
mov eax [esp+48h+var_28] +
cmp [edi+90Ch] eax +
jnz loc_422140  +
test eax eax +
jz loc_422140  +
mov eax [ebp+20h] +
test eax eax +
jz loc_422140  +
cmp [esp+48h+var_2C] eax +
jbe loc_422140  +
mov ecx [edi+40h] +
mov ecx [ecx+eax*4] +
mov ecx [ecx+4] +
cmp ecx 9 +
jz loc_422140  +
cmp ecx 4 +
jz loc_422140  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_421810  +
test eax eax +
jz loc_421980  +
mov edx [ebx+0A0h] +
mov eax [ebp+20h] +
cmp eax [edx+214h] +
jnb loc_421980  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
test eax eax +
mov [esp+48h+var_2C] eax +
jz loc_421980  +
mov eax [eax+8Ch] +
lea edx [eax+4Ch] +
add eax 3Ch +
cmp dword ptr [ebp+4] 4 +
cmovnz edx eax +
cmp dword ptr [edx] 0 +
jnz loc_421980  +
mov [esp+48h+var_44] 38h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_28] edx +
call sub_404B80  +
test eax eax +
jz loc_421980  +
mov edx [esp+48h+var_28] +
mov edi eax +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov [edx] eax +
mov edx [ebx+0A0h] +
mov ecx [ebp+28h] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax [esp+48h+var_2C] +
mov esi [eax+4Ch] +
xor eax eax +
test ecx ecx +
jz loc_4220F8  +
mov eax [ebp+18h] +
xor edx edx +
div  ecx +
mov edi [esp+48h+var_2C] +
add eax esi +
mov edx [ebp+14h] +
mov [edi+4Ch] eax +
mov eax [ebp+10h] +
or dword ptr [edi+14h] 4 +
cmp dword ptr [ebp+18h] 0 +
mov dword ptr [edi+44h] 0 +
mov [edi+58h] eax +
mov [edi+5Ch] edx +
jz loc_422128  +
cmp dword ptr [ebp+4] 4 +
jnz loc_422128  +
or byte ptr [edi+19h] 4 +
or dword ptr [ebx+28h] 20h +
mov eax 1 +
jmp loc_421982  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov ebp [esp+48h+var_2C] +
mov eax [esp+48h+arg_4] +
jmp loc_421962  +
mov eax ds:dword_49A414 +
test eax eax +
jnz loc_4219F3  +
jmp loc_4219D9  +
lea esi [eax-6FFFFFF6h] +
cmp esi 1 +
jbe loc_422140  +
lea esi [esi+0] +
cmp eax 6FFFFFF5h +
jz loc_422376  +
cmp eax [ecx+190h] +
jz loc_422376  +
mov edi [esp+48h+arg_4] +
mov eax [ecx+4Ch] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call eax  +
mov edx [esp+48h+var_2C] +
test eax eax +
jnz loc_421CE4  +
mov eax [ebp+4] +
test eax eax +
js loc_42252C  +
lea ecx [eax-70000000h] +
cmp ecx 0FFFFFFFh +
jbe loc_422612  +
lea ecx [eax-60000000h] +
cmp ecx 0FFFFFFFh +
ja loc_422778  +
test byte ptr [ebp+9] 1 +
jz loc_422140  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHowTo +
call off_4730E4  +
xor eax eax +
jmp loc_421982  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+918h] edi +
mov eax [ebx+0A0h] +
mov [eax+1D0h] ecx +
mov ecx [ebp+4] +
mov [eax+1D4h] ecx +
mov ecx [ebp+8] +
mov [eax+1D8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1DCh] ecx +
mov ecx [ebp+10h] +
mov [eax+1E0h] ecx +
mov ecx [ebp+14h] +
mov [eax+1E4h] ecx +
mov ecx [ebp+18h] +
mov [eax+1E8h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1ECh] ecx +
mov ecx [ebp+20h] +
mov [eax+1F0h] ecx +
mov ecx [ebp+24h] +
mov [eax+1F4h] ecx +
mov ecx [ebp+28h] +
mov [eax+1F8h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1FCh] ecx +
mov ecx [ebp+30h] +
mov [eax+200h] ecx +
mov ecx [ebp+34h] +
mov [eax+204h] ecx +
mov eax edi +
jmp loc_421962  +
mov eax [ebx+0A0h] +
mov eax [eax+208h] +
test eax eax +
jz loc_4222D5  +
mov edi [esp+48h+arg_4] +
cmp [eax+38h] edi +
mov edx [esp+48h+arg_4] +
jnz loc_4222CE  +
jmp loc_421CE4  +
cmp [eax+38h] edx +
jz loc_421CE4  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_4222C5  +
mov [esp+48h+var_44] 40h +
mov [esp+48h+var_48] ebx +
call sub_404B80  +
test eax eax +
jz loc_421980  +
mov edx [ebp+0] +
mov edi [esp+48h+arg_4] +
mov [eax] edx +
mov edx [ebp+4] +
mov [eax+38h] edi +
mov [eax+4] edx +
mov edx [ebp+8] +
mov [eax+8] edx +
mov edx [ebp+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebp+10h] +
mov [eax+10h] edx +
mov edx [ebp+14h] +
mov [eax+14h] edx +
mov edx [ebp+18h] +
mov [eax+18h] edx +
mov edx [ebp+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebp+20h] +
mov [eax+20h] edx +
mov edx [ebp+24h] +
mov [eax+24h] edx +
mov edx [ebp+28h] +
mov [eax+28h] edx +
mov edx [ebp+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebp+30h] +
mov [eax+30h] edx +
mov edx [ebp+34h] +
mov [eax+34h] edx +
mov edx [ebx+0A0h] +
mov ecx [edx+208h] +
mov [eax+3Ch] ecx +
mov [edx+208h] eax +
mov edx [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_421982  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_422830  +
test eax eax +
jz loc_421980  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_44BCF0  +
mov eax 1 +
jmp loc_421982  +
movzx eax byte ptr [eax+3] +
jmp loc_421F49  +
mov eax [ebp+18h] +
cmp eax 3 +
jbe loc_421980  +
cmp dword ptr [ebp+28h] 4 +
jnz loc_421980  +
test al 3 +
jnz loc_421980  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_422830  +
test eax eax +
jz loc_421980  +
mov edx [ebp+30h] +
test edx edx +
jz loc_421CE4  +
mov eax [ebp+18h] +
shr eax 2 +
test eax eax +
jz loc_421980  +
test byte ptr [edx] 1 +
jz loc_42241B  +
mov ecx [ebp+2Ch] +
or dword ptr [ecx+14h] 20000h +
lea esi [edx-4] +
sub eax 1 +
jz loc_421CE4  +
mov edx [esi+eax*4+4] +
test edx edx +
jz loc_42241E  +
mov edx [edx+2Ch] +
test edx edx +
jz loc_42241E  +
mov ecx [edx+8Ch] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_42241E  +
mov eax [ebp+2Ch] +
mov eax [eax+8Ch] +
mov [eax+7Ch] edx +
mov eax 1 +
jmp loc_421982  +
test ecx ecx +
jnz loc_421980  +
mov dword ptr [ebp+20h] 0 +
mov eax 1 +
jmp loc_421982  +
mov [esp+48h+var_48] ebx +
call sub_407150  +
cmp eax 6 +
jz loc_422487  +
cmp eax 9 +
jnz loc_421980  +
mov eax [ebp+1Ch] +
sub eax 0FF00h +
cmp eax 1 +
setbe al  +
movzx eax al +
jmp loc_421982  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_421982  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_38] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] offset aBInvalidLinkLu +
mov [esp+48h+var_40] eax +
call off_4730E4  +
mov eax [esp+48h+arg_4] +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
call sub_422830  +
jmp loc_421982  +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_24] edx +
mov [esp+48h+var_44] eax +
call sub_421810  +
mov edx [esp+48h+var_24] +
test eax eax +
jz loc_421980  +
mov eax [ebp+1Ch] +
mov edi [ebx+0A0h] +
mov [esp+48h+var_28] eax +
jmp loc_422002  +
test byte ptr [ebp+8] 2 +
jz loc_422140  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_0 +
call off_4730E4  +
xor eax eax +
jmp loc_421982  +
mov eax [edx+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_421982  +
mov [esi+910h] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+0F0h] ecx +
mov ecx [ebp+4] +
mov [eax+0F4h] ecx +
mov ecx [ebp+8] +
mov [eax+0F8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+0FCh] ecx +
mov ecx [ebp+10h] +
mov [eax+100h] ecx +
mov ecx [ebp+14h] +
mov [eax+104h] ecx +
mov ecx [ebp+18h] +
mov [eax+108h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+10Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+110h] ecx +
mov ecx [ebp+24h] +
mov [eax+114h] ecx +
mov ecx [ebp+28h] +
mov [eax+118h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+11Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+120h] ecx +
mov ecx [ebp+34h] +
mov [eax+124h] ecx +
mov ecx [ebx+0A0h] +
lea eax [ecx+0F0h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
or dword ptr [ebx+28h] 200h +
jmp loc_421B6D  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_1 +
call off_4730E4  +
xor eax eax +
jmp loc_421982  +
mov eax [ebx+0A0h] +
mov edx [ebp+0] +
mov edi [esp+48h+var_30] +
mov [eax+80h] edx +
mov edx [ebp+4] +
mov [eax+84h] edx +
mov edx [ebp+8] +
mov [eax+88h] edx +
mov edx [ebp+0Ch] +
mov [eax+8Ch] edx +
mov edx [ebp+10h] +
mov [eax+90h] edx +
mov edx [ebp+14h] +
mov [eax+94h] edx +
mov edx [ebp+18h] +
mov [eax+98h] edx +
mov edx [ebp+1Ch] +
mov [eax+9Ch] edx +
mov edx [ebp+20h] +
mov [eax+0A0h] edx +
mov edx [ebp+24h] +
mov [eax+0A4h] edx +
mov edx [ebp+28h] +
mov [eax+0A8h] edx +
mov edx [ebp+2Ch] +
mov [eax+0ACh] edx +
mov edx [ebp+30h] +
mov [eax+0B0h] edx +
mov edx [ebp+34h] +
mov [eax+0B4h] edx +
mov eax [ebx+0A0h] +
mov edx [eax+40h] +
sub eax 0FFFFFF80h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_421982  +
mov ebx ebp +
mov ebp [esp+48h+var_2C] +
mov edi ecx +
mov eax [ebp+0] +
mov [edi+0B8h] eax +
mov eax [ebp+4] +
mov [edi+0BCh] eax +
mov eax [ebp+8] +
mov [edi+0C0h] eax +
mov eax [ebp+0Ch] +
mov [edi+0C4h] eax +
mov eax [ebp+10h] +
mov [edi+0C8h] eax +
mov eax [ebp+14h] +
mov [edi+0CCh] eax +
mov eax [ebp+18h] +
mov [edi+0D0h] eax +
mov eax [ebp+1Ch] +
mov [edi+0D4h] eax +
mov eax [ebp+20h] +
mov [edi+0D8h] eax +
mov eax [ebp+24h] +
mov [edi+0DCh] eax +
mov eax [ebp+28h] +
mov [edi+0E0h] eax +
mov eax [ebp+2Ch] +
mov [edi+0E4h] eax +
mov eax [ebp+30h] +
mov [edi+0E8h] eax +
mov eax [ebp+34h] +
mov [edi+0ECh] eax +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [eax+40h] +
add eax 0B8h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_421982  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_2 +
call off_4730E4  +
xor eax eax +
jmp loc_421982  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMult_0 +
call off_4730E4  +
mov eax 1 +
jmp loc_421982  +
mov ebp [esp+48h+var_24] +
mov edi [esp+48h+var_20] +
jmp loc_422002  +
cmp [esp+48h+arg_4] 1 +
jbe loc_422823  +
mov ecx [esi+40h] +
mov eax 1 +
mov esi [esp+48h+arg_4] +
jmp loc_4227EB  +
add eax 1 +
cmp eax esi +
jz loc_421CE4  +
mov edx [ecx+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_4227E0  +
cmp [edx+1Ch] esi +
jnz loc_4227E0  +
jmp loc_421E6D  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_422830  +
test eax eax +
jz loc_421980  +
jmp loc_421DFB  +
mov eax 1 +
jmp loc_421E6D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [esp+8Ch+arg_4] +
mov edx [ebx+2Ch] +
test edx edx +
jz loc_422858  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_406150  +
test eax eax +
mov ebp eax +
jz loc_422928  +
mov [ebx+2Ch] eax +
mov edx [ebx] +
mov eax [eax+8Ch] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [ebx+14h] +
mov [eax+14h] edx +
mov edx [ebx+18h] +
mov [eax+18h] edx +
mov edx [ebx+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebx+20h] +
mov [eax+20h] edx +
mov edx [ebx+24h] +
mov [eax+24h] edx +
mov edx [ebx+28h] +
mov [eax+28h] edx +
mov edx [ebx+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebx+30h] +
mov [eax+30h] edx +
mov edx [ebx+34h] +
mov [eax+34h] edx +
mov edx [esp+8Ch+arg_C] +
mov [eax+5Ch] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov [ebp+50h] eax +
mov eax [ebx+0Ch] +
mov [ebp+54h] edx +
or byte ptr [ebp+18h] 1 +
mov [ebp+20h] eax +
mov [ebp+1Ch] eax +
mov eax [ebx+18h] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_406390  +
test eax eax +
jnz loc_422930  +
xor eax eax +
jmp loc_42284D  +
mov eax [ebx+24h] +
mov [esp+8Ch+var_8C] eax +
call near ptr dword_407E70  +
mov [esp+8Ch+var_40] 0 +
mov [ebp+40h] eax +
mov eax [ebx+4] +
cmp eax 8 +
jz loc_4234C1  +
cmp eax 11h +
jz loc_422B6E  +
mov [esp+8Ch+var_40] 100h +
mov edx 100h +
mov eax [ebx+8] +
test al 2 +
jz loc_422976  +
or edx 3 +
mov [esp+8Ch+var_40] edx +
test al 1 +
jnz loc_422981  +
or edx 8 +
mov [esp+8Ch+var_40] edx +
test al 4 +
jz loc_422AD6  +
or edx 10h +
mov [esp+8Ch+var_40] edx +
test al 10h +
jz loc_4229B8  +
mov edx [esp+8Ch+var_40] +
mov ecx edx +
or ecx 800000h +
test al 20h +
mov [esp+8Ch+var_40] ecx +
mov ecx [ebx+28h] +
mov [ebp+78h] ecx +
jz loc_4229B8  +
or edx 1800000h +
mov [esp+8Ch+var_40] edx +
test ah 2 +
jnz loc_422AFD  +
test ah 4 +
jnz loc_422AEB  +
mov esi [esp+8Ch+var_40] +
test eax eax +
js loc_422D36  +
test esi 1 +
jnz loc_4229EE  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax] 2Eh +
jz loc_422EFF  +
mov esi [esp+8Ch+arg_8] +
mov edi offset a_gnu_linkonce +
mov ecx 0Dh +
cmps   +
jnz loc_422A14  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_422F65  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+50h] +
test eax eax +
jz loc_422A40  +
lea edx [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_8C] edx +
call eax  +
test eax eax +
jz loc_422928  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_406290  +
test eax eax +
jz loc_422928  +
cmp dword ptr [ebx+4] 7 +
jz loc_422F72  +
mov eax [esp+8Ch+var_40] +
test al 1 +
mov [esp+8Ch+var_60] eax +
jz loc_422CFA  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+30h] +
mov esi [eax+44h] +
test edi edi +
jz loc_422CFA  +
mov eax [esi+10h] +
test eax eax +
jnz loc_422B91  +
mov eax esi +
xor edx edx +
xor ecx ecx +
jmp loc_422AC8  +
add edx 1 +
add eax 20h +
cmp edx edi +
jz loc_422B80  +
cmp dword ptr [eax+10h] 0 +
jnz loc_422B91  +
cmp dword ptr [eax] 1 +
jnz loc_422AB0  +
cmp dword ptr [eax+18h] 1 +
sbb ecx 0FFFFFFFFh +
jmp loc_422AB0  +
test dl 2 +
jz loc_422990  +
or edx 20h +
mov [esp+8Ch+var_40] edx +
jmp loc_422990  +
mov edx [esp+8Ch+var_40] +
or dh 4 +
mov [esp+8Ch+var_40] edx +
mov esi edx +
jmp loc_4229CE  +
mov eax [esp+8Ch+arg_0] +
mov edi [eax+0A0h] +
mov eax [edi+908h] +
test eax eax +
mov [esp+8Ch+var_64] eax +
jnz loc_422D46  +
mov eax [edi+214h] +
test eax eax +
mov ecx eax +
mov [esp+8Ch+var_60] eax +
jz loc_422EF0  +
mov eax [edi+40h] +
mov [esp+8Ch+var_68] 0 +
lea ecx [eax+ecx*4] +
jmp loc_422B4B  +
add eax 4 +
cmp eax ecx +
jz loc_422EE4  +
mov edx [eax] +
cmp dword ptr [edx+4] 11h +
jnz loc_422B40  +
mov esi [edx+18h] +
cmp esi 7 +
jbe loc_422B40  +
cmp dword ptr [edx+28h] 4 +
jnz loc_422B40  +
and esi 3 +
cmp esi 1 +
adc [esp+8Ch+var_68] 0 +
jmp loc_422B40  +
mov [esp+8Ch+var_40] 2008100h +
mov edx 2008100h +
jmp loc_422968  +
cmp ecx 1 +
ja loc_422D2C  +
test edi edi +
jz loc_422CFA  +
mov eax [esp+8Ch+var_60] +
xor edx edx +
mov [esp+8Ch+arg_4] ebx +
mov ebx edx +
mov [esp+8Ch+var_54] ebp +
mov [esp+8Ch+var_68] edi +
and eax 2 +
mov [esp+8Ch+var_50] eax +
jmp loc_422BCA  +
cmp ecx 7 +
jz loc_4234A0  +
add ebx 1 +
add esi 20h +
cmp ebx [esp+8Ch+var_68] +
jnb loc_422CF6  +
mov ecx [esi] +
cmp ecx 1 +
jnz loc_422BB1  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_422BBA  +
and eax 2 +
mov [esp+8Ch+var_5C] eax +
jnz loc_422C05  +
lea eax [ecx-6474E550h] +
cmp eax 2 +
jbe loc_422BBA  +
lea eax [ecx-1] +
cmp eax 1 +
jbe loc_422BBA  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+4] +
cmp eax 8 +
mov [esp+8Ch+var_58] eax +
jz loc_422C60  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
ja loc_422BBA  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+8Ch+arg_4] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
mov edi [edi+18h] +
add eax edi +
mov edi [esi+14h] +
adc edx ebp +
cmp edx 0 +
jg loc_422BBA  +
jl loc_422C60  +
cmp eax edi +
ja loc_422BBA  +
mov ebp [esp+8Ch+var_5C] +
test ebp ebp +
jz loc_422CA9  +
mov eax [esp+8Ch+arg_4] +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
cmp eax edx +
jb loc_422BBA  +
mov edi [esp+8Ch+var_64] +
sub eax edx +
mov edx eax +
test edi edi +
jz loc_422C94  +
cmp [esp+8Ch+var_58] 8 +
jz loc_423490  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+18h] +
add eax edx +
cmp eax [esi+18h] +
ja loc_422BBA  +
cmp ecx 2 +
mov eax [esp+8Ch+arg_4] +
jz loc_42339A  +
mov eax [eax+0Ch] +
mov edx [esi+0Ch] +
mov ecx [esp+8Ch+var_50] +
test ecx ecx +
jnz loc_423227  +
mov ecx [esi+10h] +
mov edi [esp+8Ch+var_54] +
add ecx eax +
sub ecx edx +
mov [edi+20h] ecx +
cmp edx eax +
ja loc_422BBA  +
mov edi [esp+8Ch+arg_4] +
add edx [esi+18h] +
add eax [edi+18h] +
cmp eax edx +
ja loc_422BBA  +
mov ebp [esp+8Ch+var_54] +
test [esp+8Ch+var_60] 2000h +
jz loc_422D2C  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_422FC8  +
cmp al 7Ah +
jnz loc_422D2C  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+7] 5Fh +
jz loc_422FD9  +
mov eax 1 +
jmp loc_42284D  +
mov eax esi +
or ah 80h +
mov [esp+8Ch+var_40] eax +
mov esi eax +
jmp loc_4229D6  +
mov eax [esp+8Ch+var_64] +
xor edi edi +
sub eax 1 +
cmp eax 0FFFFFFFDh +
mov [esp+8Ch+var_5C] eax +
ja loc_422DA9  +
mov [esp+8Ch+var_60] ebp +
lea esi [esi+0] +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
mov eax [eax+904h] +
mov ebp [eax+edi*4] +
mov ecx [ebp+18h] +
mov esi [ebp+30h] +
shr ecx 2 +
mov eax ecx +
mov edx esi +
jmp loc_422D97  +
add edx 4 +
cmp ebx [edx] +
jz loc_422DC2  +
sub eax 1 +
jnz loc_422D90  +
add edi 1 +
cmp [esp+8Ch+var_64] edi +
ja loc_422D60  +
mov ebp [esp+8Ch+var_60] +
mov eax [ebp+8Ch] +
mov ecx [eax+74h] +
test ecx ecx +
jz loc_423377  +
mov eax [ebx+8] +
jmp loc_4229C1  +
sub ecx 1 +
jz loc_422E10  +
add esi 4 +
mov eax [esi] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_422DC2  +
mov eax [eax+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_422DC2  +
mov edi [esp+8Ch+var_60] +
mov esi [eax+74h] +
mov ecx [edi+8Ch] +
mov [ecx+74h] esi +
mov [ecx+7Ch] edx +
mov [eax+7Ch] edi +
mov eax [ebp+2Ch] +
test eax eax +
jz loc_422E0A  +
mov eax [eax+8Ch] +
mov edi [esp+8Ch+var_60] +
mov [eax+7Ch] edi +
mov edi [esp+8Ch+var_5C] +
jmp loc_422D9C  +
mov edi [esp+8Ch+var_68] +
mov eax [ebp+1Ch] +
cmp eax [edi+214h] +
jnb loc_422928  +
mov edi [esp+8Ch+var_68] +
mov edx [edi+40h] +
mov edx [edx+eax*4] +
cmp dword ptr [edx+4] 2 +
jnz loc_422928  +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_421810  +
test eax eax +
jz loc_422928  +
mov eax [esp+8Ch+arg_0] +
lea edi [esp+8Ch+var_3C] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
lea esi [eax+48h] +
mov eax [ebp+20h] +
mov [esp+8Ch+var_74] edi +
lea edi [esp+8Ch+var_24] +
mov [esp+8Ch+var_78] edi +
lea edi [esp+8Ch+var_38] +
mov [esp+8Ch+var_7C] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_420CB0  +
test eax eax +
jz loc_422928  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_421000  +
test eax eax +
jz loc_422928  +
mov edi [esp+8Ch+var_60] +
mov edx [edi+8Ch] +
mov [edx+74h] eax +
mov [edx+7Ch] edi +
jmp loc_422DF6  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jnz loc_4230A6  +
mov dword ptr [edi+908h] 0FFFFFFFFh +
jmp loc_422DA9  +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_423243  +
cmp al 67h +
jz loc_4232D2  +
cmp al 6Ch +
jz loc_423421  +
cmp al 73h +
lea esi [esi+0] +
jz loc_423430  +
cmp al 7Ah +
jnz loc_4229EE  +
mov edx 7 +
mov eax offset a_zdebug +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call strncmp  +
test eax eax +
jnz loc_4229EE  +
mov eax esi +
or ah 20h +
mov [esp+8Ch+var_40] eax +
jmp loc_4229EE  +
or [esp+8Ch+var_40] 20000h +
jmp loc_422A14  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_406620  +
test eax eax +
jz loc_42284D  +
mov ecx [ebx+18h] +
mov edx [esp+8Ch+var_24] +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] 0FFFFFFFFh +
mov [esp+8Ch+var_88] 0FFFFFFFFh +
call sub_41F820  +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
call free  +
jmp loc_422A6D  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+6] 5Fh +
jnz loc_422D2C  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_80] eax +
lea eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call near ptr dword_40A300  +
test eax eax +
mov ecx eax +
jz loc_4232FC  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 10h +
jz loc_4232FC  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call near ptr dword_40A760  +
test eax eax +
jz loc_423466  +
mov eax 2 +
mov edi [esp+8Ch+arg_0] +
test byte ptr [edi+2Ch] 2 +
jz loc_42344B  +
mov edi [esp+8Ch+arg_8] +
cmp byte ptr [edi+1] 7Ah +
jnz loc_422D2C  +
cmp eax 2 +
jz loc_42306F  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 40h +
jz loc_422D2C  +
mov edx [esp+8Ch+arg_8] +
mov eax [esp+8Ch+arg_0] +
call sub_41F300  +
test eax eax +
jz loc_422928  +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_4062B0  +
jmp loc_422D2C  +
mov eax [esp+8Ch+var_68] +
mov [edi+908h] eax +
mov edi [esp+8Ch+arg_0] +
mov esi [edi+0A0h] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
call sub_404C00  +
mov [esi+904h] eax +
mov eax [esp+8Ch+arg_0] +
xor esi esi +
mov edx [eax+0A0h] +
mov edi [edx+904h] +
test edi edi +
jz loc_422928  +
mov [esp+8Ch+arg_4] ebx +
mov ebx [esp+8Ch+var_60] +
mov [esp+8Ch+var_5C] ebp +
jmp loc_423110  +
add esi 1 +
cmp esi ebx +
jz loc_423252  +
mov eax [edx+40h] +
mov edi [eax+esi*4] +
cmp dword ptr [edi+4] 11h +
jnz loc_423105  +
mov eax [edi+18h] +
cmp eax 7 +
jbe loc_423105  +
cmp dword ptr [edi+28h] 4 +
jnz loc_423105  +
test al 3 +
jnz loc_423105  +
mov edx [edx+904h] +
mov ebp eax +
mov ecx [esp+8Ch+var_64] +
and ebp 3FFFFFFFh +
mov [edx+ecx*4] edi +
add ecx 1 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_68] ecx +
mov [esp+8Ch+var_8C] eax +
call sub_404C00  +
test eax eax +
mov [edi+30h] eax +
jz loc_42350A  +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call sub_4086D0  +
test eax eax +
jnz loc_4231D3  +
mov eax [edi+18h] +
mov edx [edi+30h] +
mov ecx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] edx +
mov [esp+8Ch+var_84] ecx +
call sub_4084C0  +
cmp eax [edi+18h] +
jz loc_423547  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBInvalidSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_4730E4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4029E0  +
mov eax [edi+30h] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_423105  +
mov edi [esp+8Ch+arg_4] +
mov ecx [esi+10h] +
add ecx [edi+10h] +
mov edi [esp+8Ch+var_54] +
sub ecx [esi+8] +
mov [edi+20h] ecx +
jmp loc_422CD9  +
mov edx 6 +
mov eax offset a_debug +
jmp loc_422F38  +
mov eax [esp+8Ch+var_64] +
cmp [edx+908h] eax +
mov ebp [esp+8Ch+var_5C] +
mov ebx [esp+8Ch+arg_4] +
jz loc_422D46  +
test eax eax +
mov [edx+908h] eax +
jnz loc_422D46  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+904h] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+908h] 0FFFFFFFFh +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBNoValidGroupS +
mov [esp+8Ch+var_88] eax +
call off_4730E4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4029E0  +
jmp loc_422DA9  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+2] +
cmp al 6Eh +
jz loc_423457  +
cmp al 64h +
jnz loc_4229EE  +
mov edx 0Bh +
mov eax offset a_gdb_index +
jmp loc_422F38  +
cmp dword ptr [ebp+24h] 0 +
jz loc_422D2C  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax 1 +
shr edx 5 +
and edx 3FFFFh +
test dh 40h +
jz loc_42284D  +
mov ebx [esp+8Ch+var_38] +
test ebx ebx +
js loc_42284D  +
cmp [esp+8Ch+var_24] 0 +
jz loc_42284D  +
test ecx ecx +
jz loc_423352  +
shr edx 11h +
test ebx ebx +
setnle cl  +
cmp dl cl +
jz loc_42284D  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_40A880  +
test eax eax +
jz loc_4234E0  +
mov eax 1 +
jmp loc_423037  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_8C] offset aBNoGroupInfoFo +
mov [esp+8Ch+var_88] eax +
call off_4730E4  +
xor eax eax +
jmp loc_42284D  +
cmp dword ptr [eax+18h] 0 +
jnz loc_422CB9  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_42343F  +
cmp [esp+8Ch+var_58] 8 +
jz loc_4233F0  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
jnb loc_422BBA  +
xor edx edx +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edi [esi+14h] +
cmp ebp 0 +
jg loc_422BBA  +
jl loc_4233F0  +
cmp eax edi +
jnb loc_422BBA  +
mov eax [esp+8Ch+arg_4] +
cmp [esp+8Ch+var_5C] 0 +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
jz loc_422CBF  +
cmp eax edx +
jbe loc_422BBA  +
mov edi eax +
sub edi edx +
cmp ecx edi +
jbe loc_422BBA  +
jmp loc_422CBF  +
mov edx 5 +
mov eax offset a_line +
jmp loc_422F38  +
mov edx 5 +
mov eax offset a_stab_1 +
jmp loc_422F38  +
mov eax [esp+8Ch+arg_4] +
jmp loc_422CB9  +
or dword ptr [ebp+14h] 10000000h +
jmp loc_422D2C  +
mov edx 11h +
mov eax offset a_gnu_linkonce_ +
jmp loc_422F38  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIniti +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_4730E4  +
xor eax eax +
jmp loc_42284D  +
xor eax eax +
cmp ecx 7 +
jnz loc_422C9E  +
jmp loc_422C94  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_422BE9  +
jmp loc_422BBA  +
mov eax [ebx+8] +
xor edx edx +
test al 2 +
jz loc_422976  +
mov [esp+8Ch+var_40] 1 +
mov edx 1 +
jmp loc_422976  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIni_0 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_4730E4  +
xor eax eax +
jmp loc_42284D  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBCorruptSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_4730E4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4029E0  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_423105  +
mov ecx [edi+30h] +
mov [esp+8Ch+var_64] esi +
mov esi ebx +
lea edx [ecx+eax] +
add ebp ecx +
mov ebx edx +
jmp loc_423573  +
cmp esi eax +
jbe loc_4235C5  +
mov ecx [esp+8Ch+arg_0] +
mov ecx [ecx+0A0h] +
mov ecx [ecx+40h] +
mov eax [ecx+eax*4] +
mov [ebp+0] eax +
mov eax [esp+8Ch+arg_0] +
sub ebx 4 +
sub ebp 4 +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
cmp ebx [edi+30h] +
jnz loc_423559  +
mov [ebp+0] eax +
mov edx [edi+2Ch] +
mov ebx esi +
mov esi [esp+8Ch+var_64] +
test edx edx +
jz loc_4235AB  +
test al 1 +
jz loc_4235AB  +
or dword ptr [edx+14h] 20000h +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
mov eax [esp+8Ch+var_68] +
mov [esp+8Ch+var_64] eax +
jmp loc_423105  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBInvalidSht_gr +
mov [esp+8Ch+var_88] eax +
call off_4730E4  +
xor eax eax +
jmp loc_42355D  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov ebp [esp+68h] +
mov esi [esp+64h] +
and ebp 1Fh +
cmp [ebx] esi +
jz loc_4236C3  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [esp+24h] +
mov [esp+18h] eax +
lea eax [esp+28h] +
mov [esp+14h] eax +
mov eax [esp+68h] +
mov [esp+10h] ecx +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
mov eax [esi+0A0h] +
mov [esp] esi +
add eax 48h +
mov [esp+4] eax +
call sub_420CB0  +
test eax eax +
jz loc_423704  +
cmp [ebx] esi +
jz loc_423694  +
lea edi [ebx+4] +
mov edx 80h +
test edi 1 +
jnz loc_4236E2  +
test edi 2 +
jnz loc_4236F0  +
mov ecx edx +
mov eax 0FFFFFFFFh +
shr ecx 2 +
test dl 2 +
stos   +
jnz loc_4236B0  +
and edx 1 +
jnz loc_4236A8  +
mov [ebx] esi +
mov eax [esp+68h] +
mov [ebx+ebp*4+4] eax +
mov eax [esp+1Ch] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov byte ptr [edi] 0FFh +
jmp loc_423692  +
***
mov eax 0FFFFFFFFh +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_423692  +
jmp loc_4236A8  +
***
mov eax [esp+68h] +
cmp [ebx+ebp*4+4] eax +
jnz loc_42360E  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov [esp+1Ch] eax +
jmp loc_42369C  +
***
mov byte ptr [ebx+4] 0FFh +
lea edi [ebx+5] +
mov dl 7Fh +
jmp loc_423674  +
***
mov ecx 0FFFFFFFFh +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_42367C  +
***
mov dword ptr [esp+1Ch] 0 +
jmp loc_42369C  +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx+0A0h] +
cmp [edx+214h] eax +
jbe loc_423730  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov edx [ebx] +
test edx edx +
jz loc_423802  +
mov ebp eax +
mov edi edx +
lea esi [ebx+14h] +
jmp loc_4237A2  +
lea edx [ecx+eax] +
cmp ebp edx +
jl loc_423797  +
mov edx ebp +
add ecx edi +
sub edx eax +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] ecx +
add eax edx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
test eax eax +
jz loc_4237F8  +
mov ebx esi +
mov edi [esi] +
lea esi [esi+14h] +
test edi edi +
jz loc_423802  +
mov ecx [ebx+4] +
cmp ebp ecx +
jl loc_423797  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
jnz loc_423797  +
mov eax [ebx+8] +
test eax eax +
jg loc_423770  +
mov edx [esp+1Ch+arg_0] +
movzx edx byte ptr [edx+ecx] +
test dl dl +
jz loc_4237F8  +
test eax eax +
jz loc_423797  +
cmp dl 2Eh +
jz loc_4237F8  +
cmp eax 0FFFFFFFEh +
jz loc_423797  +
mov eax [esp+1Ch+arg_8] +
test eax eax +
jz loc_4237F8  +
cmp dword ptr [ebx+0Ch] 9 +
jz loc_423797  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov ebx [esi] +
test ebx ebx +
jz loc_4238A0  +
mov eax [esp+20h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov edx [eax+178h] +
test edx edx +
jz loc_423860  +
movzx eax byte ptr [esi+19h] +
mov [esp+4] edx +
mov [esp] ebx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_423740  +
test eax eax +
jz loc_423860  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
cmp byte ptr [ebx] 2Eh +
jnz loc_423858  +
movsx edx byte ptr [ebx+1] +
sub edx 62h +
cmp edx 18h +
ja loc_423858  +
mov edx ds:off_48A9C0[edx*4] +
test edx edx +
jz loc_423858  +
movzx eax byte ptr [esi+19h] +
mov [esp] ebx +
mov [esp+4] edx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_423740  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_423858  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_423952  +
mov eax [esi+4] +
mov ecx [eax+1B0h] +
movzx eax byte ptr [ebx+19h] +
movzx edx byte ptr [ecx+1ACh] +
and eax 0FFFFFFFBh +
shr dl 2 +
and edx 4 +
or eax edx +
mov [ebx+19h] al +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 8 +
jz loc_423945  +
mov eax [ecx+54h] +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_423921  +
mov edx [ebx+14h] +
mov ecx [eax+0Ch] +
test edx edx +
jnz loc_423933  +
mov edx [ebx+8Ch] +
mov eax [eax+10h] +
mov [edx+4] ecx +
mov [edx+8] eax +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_405C10  +
***
and edx 100000h +
jnz loc_423912  +
lea edx [ecx-0Eh] +
cmp edx 1 +
ja loc_423921  +
jmp loc_423912  +
***
test byte ptr [ebx+16h] 10h +
jz loc_423921  +
nop   +
lea esi [esi+0] +
jmp loc_4238F8  +
***
mov dword ptr [esp+4] 90h +
mov [esp] esi +
call sub_404C60  +
test eax eax +
jz loc_423971  +
mov [ebx+8Ch] eax +
jmp loc_4238CB  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov ebx [esp+6Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_4239B0  +
cmp dword ptr [ebx+14h] 0 +
jnz loc_423C7A  +
nop   +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+14h] +
lea esi [esp+6Ch+var_4C] +
test edx edx +
jnz loc_423AD1  +
mov eax offset unk_4896B2 +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_8] +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4239F0  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
lea edi [edx+1] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_404B80  +
test eax eax +
mov ebp eax +
jz loc_423BF8  +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_64] edi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] ebp +
mov [esp+6Ch+var_6C] eax +
call sub_406250  +
test eax eax +
mov esi eax +
jz loc_423BF8  +
mov edx [ebx+14h] +
mov ecx [ebx+10h] +
mov eax [ebx+0Ch] +
add ecx edx +
mov [esi+20h] ecx +
mov ecx [ebx+18h] +
add eax edx +
mov [esi+1Ch] eax +
sub ecx edx +
add edx [ebx+8] +
mov [esi+24h] ecx +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] edx +
mov edx eax +
neg edx  +
and eax edx +
jz loc_423C02  +
mov edx [ebx+1Ch] +
cmp eax edx +
cmova eax edx +
mov [esp+6Ch+var_6C] eax +
call near ptr dword_407E70  +
cmp dword ptr [ebx] 1 +
mov [esi+40h] eax +
jz loc_423C16  +
mov eax [ebx+4] +
test al 2 +
jnz loc_4239A0  +
or dword ptr [esi+14h] 8 +
jmp loc_4239A0  +
xor ecx ecx +
cmp edx eax +
setb cl  +
cmp eax edx +
mov ebp ecx +
mov eax offset unk_4896B2 +
mov ecx offset aA +
cmovbe ecx eax +
mov eax [esp+6Ch+arg_8] +
lea esi [esp+6Ch+var_4C] +
mov [esp+6Ch+var_5C] ecx +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_423B19  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
add edx 1 +
mov [esp+6Ch+var_68] edx +
mov [esp+6Ch+var_6C] eax +
mov [esp+6Ch+var_50] edx +
call sub_404B80  +
mov edx [esp+6Ch+var_50] +
test eax eax +
mov edi eax +
jz loc_423BF8  +
mov [esp+6Ch+var_64] edx +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_406250  +
test eax eax +
mov edi eax +
jz loc_423BF8  +
mov eax [ebx+0Ch] +
mov [edi+1Ch] eax +
mov eax [ebx+10h] +
mov [edi+20h] eax +
mov eax [ebx+14h] +
mov [edi+24h] eax +
mov eax [ebx+8] +
or dword ptr [edi+14h] 100h +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov eax [ebx+1Ch] +
mov [esp+6Ch+var_6C] eax +
call near ptr dword_407E70  +
cmp dword ptr [ebx] 1 +
mov [edi+40h] eax +
jz loc_423C50  +
mov eax [ebx+4] +
test al 2 +
jz loc_423C10  +
mov eax [ebx+14h] +
cmp [ebx+18h] eax +
jbe loc_4239A0  +
test ebp ebp +
mov eax offset aB +
jnz loc_4239C4  +
jmp loc_4239BF  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+1Ch] +
jmp loc_423AA9  +
or dword ptr [edi+14h] 8 +
jmp loc_423BDA  +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_423C71  +
mov edx [esi+14h] +
mov eax edx +
or eax 1 +
mov [esi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_423AC0  +
or edx 11h +
mov [esi+14h] edx +
jmp loc_423AC0  +
mov ecx [edi+14h] +
mov eax ecx +
or eax 3 +
mov [edi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_423BD6  +
or ecx 13h +
mov [edi+14h] ecx +
jmp loc_423BD6  +
mov dword ptr [esi+24h] 0 +
jmp loc_423C28  +
xor ebp ebp +
mov ecx offset unk_4896B2 +
jmp loc_423AE9  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov edx [esi] +
cmp edx 4 +
jz loc_423DB0  +
jbe loc_423CD6  +
cmp edx 6474E550h +
jz loc_423DA0  +
ja loc_423D20  +
cmp edx 5 +
jz loc_423D60  +
cmp edx 6 +
jnz loc_423D70  +
mov [esp+2Ch+var_20] offset aPhdr +
jmp loc_423D00  +
cmp edx 1 +
jz loc_423E00  +
jb loc_423DF0  +
cmp edx 2 +
jz loc_423D40  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_423D70  +
mov [esp+2Ch+var_20] offset aInterp +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_423980  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 6474E551h +
jz loc_423D50  +
cmp edx 6474E552h +
jnz loc_423D70  +
mov [esp+2Ch+var_20] offset aRelro +
jmp loc_423D00  +
mov [esp+2Ch+var_20] offset aDynamic +
jmp loc_423D00  +
mov [esp+2Ch+var_20] offset aStack +
jmp loc_423D00  +
mov [esp+2Ch+var_20] offset aShlib +
jmp loc_423D00  +
mov eax [ebx+4] +
mov edi [esp+2Ch+arg_8] +
mov eax [eax+1B0h] +
mov eax [eax+58h] +
mov [esp+2Ch+var_20] offset aProc +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call eax  +
jmp loc_423D14  +
mov [esp+2Ch+var_20] offset aEh_frame_hdr +
jmp loc_423D00  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_20] offset aNote +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_423980  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_423D14  +
mov ebp [esi+14h] +
mov esi [esi+8] +
test ebp ebp +
jnz loc_423E0D  +
mov eax 1 +
jmp loc_423D14  +
mov [esp+2Ch+var_20] offset aNull_1 +
jmp loc_423D00  +
mov [esp+2Ch+var_20] offset aLoad +
jmp loc_423D00  +
xor edi edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_4086D0  +
test eax eax +
jz loc_423E32  +
xor eax eax +
jmp loc_423D14  +
lea eax [ebp+1] +
mov [esp+2Ch+var_2C] eax +
call sub_407460  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_423E2B  +
mov byte ptr [eax+ebp] 0 +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_4084C0  +
cmp ebp eax +
jz loc_423E70  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
xor eax eax +
jmp loc_423D14  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_41F820  +
test eax eax +
jz loc_423E5D  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_423DE2  +
***
mov ebx [esp+18h+arg_0] +
mov edx [ebx+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_423EE0  +
mov edx [edx+4Ch] +
test edx edx +
jz loc_423ED9  +
mov [esp+18h+var_14] 0AECh +
mov [esp+18h+var_18] offset a____Binutil_10 +
call sub_402930  +
mov eax [ebx+8Ch] +
mov eax [eax+3Ch] +
add esp 18h +
pop ebx  +
retn   +
mov eax [edx+4Ch] +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+4] +
mov eax 8 +
and edx 103h +
cmp edx 1 +
mov edx 1 +
cmovnz eax edx +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
test eax eax +
jz loc_423F95  +
mov edx [eax+8Ch] +
mov ecx [edx+4] +
cmp ecx 4 +
jnz loc_423F90  +
mov ebx [eax] +
lea edx [ebx+4] +
add ebx 5 +
cmp ecx 9 +
cmovnz edx ebx +
mov ebx [eax+94h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ADh] 1 +
jz loc_423F62  +
mov edi offset a_plt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_423F75  +
mov [esp+4] edx +
mov [esp] ebx +
call sub_405CC0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+4] offset a_got_plt +
mov [esp] ebx +
call sub_405CC0  +
test eax eax +
jnz loc_423F6E  +
mov edx offset a_got +
jmp loc_423F62  +
***
cmp ecx 9 +
jz loc_423F2C  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+arg_C] +
mov ecx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
test ebx ebx +
jz loc_423FD0  +
mov ebx [ecx+24h] +
cmp ebx 1 +
jbe loc_423FD0  +
mov esi eax +
xor edx edx +
lea edi [ebx+eax-1] +
mov eax 0FFFFFFFFh +
cmp esi edi +
jbe loc_423FF6  +
mov ebx [ecx+2Ch] +
mov [ecx+10h] eax +
mov [ecx+14h] edx +
test ebx ebx +
jz loc_423FE3  +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
cmp dword ptr [ecx+4] 8 +
jz loc_423FF2  +
mov ecx [ecx+18h] +
xor ebx ebx +
add eax ecx +
adc edx ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ebx +
xor edx edx +
neg eax  +
and eax edi +
jmp loc_423FD0  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov eax [eax+44h] +
mov ecx [edx] +
test ecx ecx +
jz loc_424048  +
mov esi [ecx+24h] +
mov edx esi +
sub edx 1 +
js loc_42403F  +
cmp [ecx+esi*4+24h] ebx +
jnz loc_424037  +
jmp loc_424050  +
cmp [ecx+edx*4+28h] ebx +
jz loc_424050  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jnz loc_424031  +
mov ecx [ecx] +
add eax 20h +
test ecx ecx +
jnz loc_42401F  +
xor eax eax +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] 2Ch +
mov [esp+1Ch+var_1C] eax +
call sub_404C60  +
test eax eax +
jz loc_424096  +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 2 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
setz dl  +
movzx eax dl +
mov [esp+6Ch+var_58] eax +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_424107  +
mov eax [esp+6Ch+arg_4] +
xor edx 1 +
mov edi [esp+6Ch+arg_4] +
shl edx 6 +
movzx eax byte ptr [eax+5] +
and eax 0FFFFFFBFh +
or eax edx +
mov [edi+5] al +
mov eax [esp+6Ch+var_58] +
test eax eax +
jz loc_424121  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_424231  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+934h] +
mov eax [edi] +
test eax eax +
jz loc_424195  +
lea esi [esi+0] +
mov edx [eax+24h] +
xor esi esi +
test edx edx +
jz loc_424178  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov ebx [eax+edx*4+28h] +
mov ecx [ebx+14h] +
test ch 80h +
jnz loc_42416E  +
and ecx 1 +
jnz loc_424167  +
cmp dword ptr [eax+4] 1 +
jz loc_42416E  +
mov [eax+esi*4+28h] ebx +
add esi 1 +
mov eax [edi] +
add edx 1 +
cmp edx [eax+24h] +
jb loc_424150  +
mov ecx [esp+6Ch+var_58] +
mov [eax+24h] esi +
test ecx ecx +
jz loc_42418D  +
cmp dword ptr [eax+4] 1 +
jz loc_424220  +
mov edi eax +
mov eax [eax] +
test eax eax +
jnz loc_424140  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0ACh] +
test eax eax +
jz loc_4241CE  +
mov edi [esp+6Ch+arg_4] +
mov esi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] esi +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_424212  +
mov eax [esp+6Ch+arg_0] +
xor edx edx +
mov eax [eax+0A0h] +
mov ecx [eax+934h] +
mov eax [ecx] +
test eax eax +
jz loc_4241F9  +
lea esi [esi+0] +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_4241F0  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+1] +
imul edx eax +
mov eax 1 +
mov [ecx+1Ch] edx +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_42418D  +
mov eax [eax] +
mov [edi] eax +
jmp loc_424136  +
mov [esp+6Ch+var_68] 4 +
mov [esp+6Ch+var_6C] eax +
call sub_4074A0  +
mov ebp eax +
mov [esp+6Ch+var_4C] eax +
xor eax eax +
test ebp ebp +
jz loc_424212  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] eax +
call sub_407180  +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea esi [eax+eax-1] +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+64h] +
test eax eax +
jz loc_424C19  +
xor ecx ecx +
test byte ptr [eax+14h] 1 +
jz loc_42429E  +
mov edi [eax+20h] +
mov edx [eax+24h] +
mov [ebp+ecx*4+0] eax +
add ecx 1 +
add edx edi +
and edi esi +
and edx esi +
cmp edx edi +
cmovb ebx edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_424280  +
mov edi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_40] ecx +
cmp [edi+6Ch] ecx +
jb loc_424BE6  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_60] 41F150h +
mov [esp+6Ch+var_64] 4 +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call qsort  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_interp_0 +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] eax +
call sub_405CC0  +
mov ebp eax +
test ebp ebp +
lea eax [esp+6Ch+var_10] +
mov [esp+6Ch+var_48] eax +
jz loc_424314  +
test byte ptr [ebp+14h] 2 +
jnz loc_424B68  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+10h] +
mov [esp+6Ch+var_68] offset a_dynamic_1 +
test eax eax +
mov edi eax +
mov eax 1 +
cmovnz eax edi +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_405CC0  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_28] eax +
jz loc_42435C  +
test byte ptr [eax+14h] 2 +
mov eax 0 +
cmovnz eax edi +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_40] +
test eax eax +
jz loc_424561  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov edx [eax+1Ch] +
cmp edx 0FFFFFFFFh +
jz loc_424BFF  +
mov eax [esp+6Ch+var_3C] +
mov edi [esp+6Ch+arg_0] +
mov eax [eax+174h] +
test byte ptr [edi+29h] 20h +
movzx eax byte ptr [eax] +
jnz loc_42497A  +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
mov [esp+6Ch+var_34] 0 +
mov eax [esp+6Ch+var_30] +
mov ebx ecx +
xor esi esi +
xor edi edi +
xor edx edx +
mov [esp+6Ch+var_38] 0 +
mov ebp esi +
mov [esp+6Ch+var_54] 0 +
lea ecx [eax-1] +
neg eax  +
mov [esp+6Ch+var_20] ecx +
mov [esp+6Ch+var_2C] eax +
mov [esp+6Ch+var_50] edi +
jmp loc_424422  +
mov eax [ebx+14h] +
mov edx 1 +
mov [esp+6Ch+var_50] 0 +
test al 8 +
cmovz ebp edx +
and eax 402h +
cmp eax 400h +
jz loc_42440C  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_50] eax +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
jz loc_42450A  +
mov eax [esp+6Ch+var_4C] +
mov edx ebx +
mov ebx [eax+esi*4] +
test edx edx +
jz loc_4243E4  +
mov eax [ebx+20h] +
mov ecx [edx+20h] +
mov [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_44] eax +
mov edi ecx +
sub eax [ebx+1Ch] +
sub edi [edx+1Ch] +
cmp edi eax +
jz loc_424A54  +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_42448F  +
mov eax [esp+6Ch+arg_4] +
mov ecx [eax+18h] +
mov ecx [ecx+38h] +
test ecx ecx +
jz loc_42448F  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_60] edx +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_4] +
mov [esp+6Ch+var_6C] eax +
call ecx  +
mov [esp+6Ch+var_54] eax +
mov eax [esp+6Ch+var_54] +
test eax eax +
jz loc_4243E4  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
call sub_41F200  +
test eax eax +
jz loc_4248BC  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [ebx+14h] +
mov ebp eax +
and eax 402h +
shr ebp 3 +
xor ebp 1 +
and ebp 1 +
cmp eax 400h +
jz loc_424B10  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_38] esi +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] eax +
jnz loc_424419  +
test ebx ebx +
mov eax esi +
mov [esp+6Ch+var_54] esi +
jz loc_424561  +
sub eax [esp+6Ch+var_38] +
cmp eax 1 +
jnz loc_42452C  +
mov eax [ebx+14h] +
and eax 402h +
cmp eax 400h +
jz loc_424561  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_6C] eax +
mov eax [esp+6Ch+arg_0] +
call sub_41F200  +
test eax eax +
jz loc_4248BC  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+var_28] +
test eax eax +
jz loc_42458E  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_424060  +
test eax eax +
jz loc_4248BC  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_424767  +
mov [esp+6Ch+var_50] 0 +
mov [esp+6Ch+var_54] 0 +
mov eax [ebp+14h] +
test al 2 +
jz loc_424678  +
mov esi [ebp+0] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_424678  +
cmp dword ptr [ebp+40h] 2 +
mov eax 2Ch +
mov ebx 1 +
jz loc_4248D2  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_404C60  +
test eax eax +
mov edi eax +
jz loc_4248BC  +
cmp ebx 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 4 +
mov [eax+24h] ebx +
mov eax ebx +
ja loc_42462A  +
jmp loc_42465A  +
cmp esi 1 +
mov ebp [ebp+0Ch] +
jz loc_42465A  +
mov ebx esi +
mov edx eax +
sub edx ebx +
test byte ptr [ebp+15h] 4 +
lea esi [ebx-1] +
mov [edi+edx*4+28h] ebp +
jz loc_424620  +
mov [esp+6Ch+var_68] 11A6h +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_402930  +
cmp esi 1 +
mov eax [edi+24h] +
mov ebp [ebp+0Ch] +
jnz loc_424628  +
mov [edi+eax*4+24h] ebp +
mov eax [ebp+14h] +
and eax 400h +
jnz loc_424959  +
mov esi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] edi +
mov [esi] edi +
jmp loc_42467D  +
and eax 400h +
test eax eax +
jz loc_424697  +
mov edi [esp+6Ch+var_54] +
mov eax [esp+6Ch+var_50] +
test edi edi +
cmovz eax ebp +
add [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_50] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_4245B0  +
mov ebx [esp+6Ch+var_54] +
test ebx ebx +
jz loc_424767  +
lea eax ds:28h[ebx*4] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_404C60  +
test eax eax +
jz loc_4248BC  +
mov dword ptr [eax] 0 +
mov ecx [esp+6Ch+var_50] +
xor edx edx +
mov dword ptr [eax+4] 7 +
mov [eax+24h] ebx +
mov dword ptr [eax+8] 4 +
or byte ptr [eax+20h] 1 +
jmp loc_424701  +
mov [eax+edx*4+28h] ecx +
add edx 1 +
mov ecx [ecx+0Ch] +
cmp ebx edx +
jz loc_42475D  +
test byte ptr [ecx+15h] 4 +
jnz loc_4246F3  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] offset aBTlsSectionsAr +
mov [esp+6Ch+var_68] eax +
call off_4730E4  +
mov esi [esp+6Ch+var_50] +
jmp loc_424744  +
mov [esp+6Ch+var_6C] offset aTlsA +
add ebx 1 +
call off_4730E4  +
cmp ebx [esp+6Ch+var_54] +
mov esi [esi+0Ch] +
jnb loc_4248B0  +
test byte ptr [esi+15h] 4 +
mov [esp+6Ch+var_68] esi +
jnz loc_424727  +
mov [esp+6Ch+var_6C] offset aNonTlsA +
call off_4730E4  +
jmp loc_424737  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_4247E0  +
mov edx [ebx+3Ch] +
test byte ptr [edx+14h] 2 +
jz loc_4247E0  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_404C60  +
test eax eax +
jz loc_4248BC  +
mov edx [ebx+3Ch] +
mov edi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E550h +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov esi [eax+34h] +
test esi esi +
jnz loc_4249C5  +
mov ebx [esp+6Ch+arg_4] +
test ebx ebx +
jz loc_424886  +
mov eax [esp+6Ch+arg_4] +
test byte ptr [eax+3] 1 +
jz loc_424886  +
mov eax [esp+6Ch+var_10] +
test eax eax +
jz loc_424886  +
mov ebx [esp+6Ch+arg_4] +
jmp loc_42481E  +
mov eax [eax] +
test eax eax +
jz loc_424886  +
cmp dword ptr [eax+4] 1 +
jnz loc_424818  +
mov edx [eax+24h] +
test edx edx +
jz loc_424818  +
mov ecx [eax+28h] +
mov ecx [ecx+1Ch] +
cmp ecx [ebx+70h] +
jb loc_424818  +
cmp ecx [ebx+74h] +
jnb loc_424818  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_424818  +
mov ecx [eax+edx*4+28h] +
mov ecx [ecx+14h] +
and ecx 102h +
cmp ecx 102h +
jnz loc_42483B  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_404C60  +
test eax eax +
jz loc_4248BC  +
mov esi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E552h +
mov [esi] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+arg_0] +
mov ecx [esp+6Ch+var_10] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov [edx] ecx +
jmp loc_42412E  +
mov [esp+6Ch+var_6C] 11h +
call sub_4029E0  +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_4245E4  +
cmp dword ptr [edx+40h] 2 +
jnz loc_4245E4  +
test byte ptr [edx+14h] 2 +
jz loc_4245E4  +
mov eax ebp +
mov [esp+6Ch+var_44] ebx +
jmp loc_42492D  +
mov ecx [eax+20h] +
add ecx [eax+24h] +
lea eax [ecx+3] +
and eax 0FFFFFFFCh +
cmp eax [edx+20h] +
jnz loc_424949  +
mov ecx [edx+0Ch] +
add [esp+6Ch+var_44] 1 +
test ecx ecx +
jz loc_424949  +
cmp dword ptr [ecx+40h] 2 +
jnz loc_424949  +
test byte ptr [ecx+14h] 2 +
jz loc_424949  +
mov eax edx +
mov edx ecx +
mov esi [edx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
jz loc_424900  +
mov ebx [esp+6Ch+var_44] +
lea eax ds:28h[ebx*4] +
jmp loc_4245E4  +
mov [esp+6Ch+var_68] 11AAh +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_402930  +
mov eax [ebp+14h] +
and eax 400h +
jmp loc_42466C  +
lea edi [edx+eax] +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
and esi [ecx+20h] +
cmp edi esi +
ja loc_4243AB  +
xor edx edx +
mov eax esi +
div  [esp+6Ch+var_30] +
mov eax edi +
mov ebp edx +
xor edx edx +
div  [esp+6Ch+var_30] +
cmp ebp edx +
jb loc_4243AB  +
mov eax [esp+6Ch+var_30] +
mov [esp+6Ch+var_34] 1 +
neg eax  +
and eax esi +
cmp ebx eax +
jbe loc_4243B3  +
jmp loc_4243AB  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_404C60  +
test eax eax +
jz loc_4248BC  +
mov esi [esp+6Ch+arg_0] +
mov dword ptr [eax] 0 +
mov edi [esp+6Ch+var_3C] +
mov dword ptr [eax+4] 6474E551h +
mov edx [esi+0A0h] +
mov ecx [edi+1A8h] +
mov esi [esp+6Ch+arg_4] +
mov edx [edx+934h] +
mov edx [edx+34h] +
mov [eax+14h] ecx +
mov [eax+8] edx +
movzx edx byte ptr [eax+20h] +
or edx 1 +
test ecx ecx +
setnz cl  +
and edx 0FFFFFFFBh +
shl ecx 2 +
or edx ecx +
mov ecx [esi+10h] +
mov [eax+20h] dl +
test ecx ecx +
jle loc_424A45  +
or edx 8 +
mov [eax+18h] ecx +
mov [eax+20h] dl +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_4247FA  +
mov eax [esp+6Ch+var_50] +
add eax ecx +
cmp [esp+6Ch+var_44] eax +
mov [esp+6Ch+var_50] eax +
jb loc_424448  +
cmp ecx eax +
ja loc_424448  +
mov edi [esp+6Ch+var_30] +
sub eax 1 +
mov [esp+6Ch+var_24] eax +
add edi eax +
cmp [esp+6Ch+var_50] edi +
mov eax edi +
jbe loc_424B29  +
mov eax [esp+6Ch+var_20] +
cmp eax ecx +
mov edi eax +
jbe loc_424AA5  +
cmp [esp+6Ch+var_44] edi +
mov [esp+6Ch+var_54] 1 +
jnb loc_424448  +
test dword ptr [edx+14h] 402h +
jnz loc_424B40  +
test dword ptr [ebx+14h] 402h +
jz loc_424B40  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 1 +
test byte ptr [eax+29h] 20h +
jz loc_424448  +
mov ecx [esp+6Ch+var_24] +
xor ecx [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] ecx +
jnz loc_424448  +
test ebp ebp +
jnz loc_424B5B  +
test byte ptr [ebx+14h] 8 +
jnz loc_424B5B  +
mov eax [esp+6Ch+var_24] +
xor eax [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] eax +
jz loc_424B5B  +
mov [esp+6Ch+var_54] 1 +
jmp loc_424448  +
mov [esp+6Ch+var_38] esi +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] 0 +
jmp loc_42440C  +
mov edi [esp+6Ch+var_30] +
and eax [esp+6Ch+var_2C] +
add edi eax +
cmp edi ecx +
jbe loc_424AA5  +
jmp loc_424A93  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 0 +
test byte ptr [eax+29h] 20h +
jz loc_424448  +
jmp loc_424AEA  +
mov [esp+6Ch+var_54] 0 +
jmp loc_424448  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_404C60  +
test eax eax +
mov edi eax +
jz loc_4248BC  +
mov dword ptr [eax] 0 +
or byte ptr [eax+20h] 21h +
mov dword ptr [eax+4] 6 +
mov dword ptr [eax+8] 5 +
mov [esp+6Ch+var_10] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_404C60  +
test eax eax +
jz loc_4248BC  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 3 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] ebp +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_424314  +
mov [esp+6Ch+var_68] 1092h +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_402930  +
jmp loc_4242B9  +
mov edx [esp+6Ch+arg_4] +
mov eax [esp+6Ch+arg_0] +
call sub_41F3A0  +
mov edx eax +
jmp loc_424387  +
mov [esp+6Ch+var_40] 0 +
jmp loc_4242B9  +
***
sub esp 24h +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_0] +
mov eax [edx+8Ch] +
test eax eax +
jz loc_424C4E  +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_424C9D  +
cmp edx offset off_473270 +
jz loc_424CE2  +
mov esi [edx+14h] +
mov ebx 0FFFFFFF2h +
and esi 1000h +
jz loc_424CA3  +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jz loc_424C93  +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] ebx +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] ecx +
call eax  +
test eax eax +
jnz loc_424CD8  +
cmp ebx 0FFFFFEFFh +
mov eax ebx +
jz loc_424CC2  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
cmp edx offset off_4731C8 +
mov bx 0FEFFh +
cmovz ebx esi +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_424C7A  +
jmp loc_424C93  +
mov [esp+24h+var_24] 0Fh +
mov [esp+24h+var_18] ebx +
call sub_4029E0  +
mov eax [esp+24h+var_18] +
jmp loc_424C9D  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
mov ebx 0FFFFFFF1h +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_424C7A  +
jmp loc_424C93  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebp [esp+0ACh+arg_0] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov esi [eax+1B0h] +
jnz loc_424F12  +
mov eax [esi+0A0h] +
mov edx esi +
test eax eax +
jz loc_424D49  +
mov edi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] edi +
call eax  +
mov eax [ebp+4] +
mov edx [eax+1B0h] +
mov [esp+0ACh+var_94] edx +
mov ebx [ebp+0A0h] +
call sub_44ADF0  +
test eax eax +
mov edi eax +
jz loc_424EEE  +
mov eax [ebp+0A0h] +
mov edx [esp+0ACh+var_94] +
mov eax [eax+934h] +
mov [eax+4] edi +
mov byte ptr [ebx] 7Fh +
mov byte ptr [ebx+1] 45h +
mov byte ptr [ebx+2] 4Ch +
mov byte ptr [ebx+3] 46h +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
mov [ebx+4] al +
mov eax [ebp+4] +
cmp dword ptr [eax+8] 1 +
sbb eax eax +
not eax  +
add eax 2 +
mov [ebx+5] al +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Dh] +
mov [ebx+6] al +
mov eax [ebp+28h] +
shr eax 5 +
and eax 3FFFFh +
test al 40h +
jz loc_424F00  +
mov eax 3 +
mov [ebx+24h] ax +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_94] edx +
call sub_407150  +
mov edx [esp+0ACh+var_94] +
test eax eax +
jnz loc_424F22  +
xor eax eax +
mov [ebx+26h] ax +
mov eax [edx+174h] +
movzx edx byte ptr [eax+0Dh] +
mov [ebx+1Ch] edx +
movzx edx byte ptr [eax] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] edx +
mov edx [ebp+74h] +
mov [ebx+10h] edx +
movzx eax byte ptr [eax+2] +
mov [ebx+34h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab +
mov [esp+0ACh+var_AC] edi +
call sub_44AEA0  +
mov [ebx+48h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_strtab +
mov [esp+0ACh+var_AC] edi +
call sub_44AEA0  +
mov [ebx+0B8h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_shstrtab +
mov [esp+0ACh+var_AC] edi +
call sub_44AEA0  +
mov [ebx+80h] eax +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+48h] 0FFFFFFFFh +
jz loc_424EEE  +
cmp dword ptr [eax+0B8h] 0FFFFFFFFh +
jz loc_424EEE  +
cmp dword ptr [eax+80h] 0FFFFFFFFh +
jz loc_424EEE  +
mov eax [esi+0C8h] +
mov esi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] offset sub_41FE80 +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_34] eax +
lea eax [esp+0ACh+var_34] +
mov [esp+0ACh+var_A4] eax +
call sub_4062E0  +
mov ecx [esp+0ACh+var_30] +
test ecx ecx +
jz loc_424F50  +
***
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 2 +
jz loc_424F30  +
mov eax 2 +
mov [ebx+24h] ax +
jmp loc_424DCB  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+8] +
mov [ebx+26h] ax +
jmp loc_424DE9  +
***
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
setz al  +
movzx eax al +
lea eax [eax+eax*2+1] +
mov [ebx+24h] ax +
jmp loc_424DCB  +
***
mov eax [ebp+0A0h] +
mov [esp+0ACh+var_8C] eax +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_AC] eax +
call sub_44B0B0  +
mov esi [esp+0ACh+arg_4] +
test esi esi +
jz loc_425870  +
mov eax [esp+0ACh+arg_4] +
mov edi 2 +
mov esi 1 +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_425870  +
mov eax [ebp+64h] +
test eax eax +
jz loc_425099  +
mov ecx esi +
mov edx ebp +
mov esi eax +
jmp loc_42502A  +
***
mov eax [eax] +
lea ebp [edi+1] +
mov [ebx+44h] edi +
cmp eax 0FFFFFFFFh +
jz loc_424FE0  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_44AF80  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_425087  +
mov eax [eax] +
lea ecx [ebp+1] +
mov [ebx+54h] ebp +
cmp eax 0FFFFFFFFh +
jz loc_425023  +
mov ebx [edx+0A0h] +
mov [esp+0ACh+var_84] ecx +
mov [esp+0ACh+var_94] edx +
mov ebx [ebx+934h] +
mov ebx [ebx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ebx +
call sub_44AF80  +
mov edx [esp+0ACh+var_94] +
mov ecx [esp+0ACh+var_84] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_425092  +
mov ebx [esi+8Ch] +
mov edi ecx +
cmp dword ptr [ebx+4] 11h +
jz loc_42503E  +
add edi 1 +
mov [ebx+5Ch] ecx +
mov eax [ebx] +
cmp eax 0FFFFFFFFh +
jz loc_425068  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_44AF80  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+3Ch] +
test eax eax +
jnz loc_424FB0  +
mov eax [ebx+4Ch] +
mov ebp edi +
mov dword ptr [ebx+44h] 0 +
test eax eax +
jnz loc_424FEB  +
mov dword ptr [ebx+54h] 0 +
mov ecx ebp +
jmp loc_425023  +
mov esi ecx +
mov ebp edx +
lea edi [ecx+1] +
mov eax [ebp+0A0h] +
mov ecx [esp+0ACh+var_8C] +
mov eax [eax+934h] +
mov edx [ecx+80h] +
mov [eax+2Ch] esi +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_44AF80  +
mov eax [ebp+0A0h] +
mov ebx [ebp+7Ch] +
mov edx [eax+934h] +
test ebx ebx +
mov edx [edx+2Ch] +
mov [eax+3Ch] edx +
jz loc_425462  +
mov eax [ebp+0A0h] +
lea ebx [esi+2] +
mov [eax+90Ch] edi +
mov eax [esp+0ACh+var_8C] +
mov edx [eax+48h] +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_44AF80  +
cmp ebx 0FEFEh +
jbe loc_426984  +
mov eax [ebp+0A0h] +
mov edx [eax+208h] +
test edx edx +
jz loc_42513F  +
mov [esp+0ACh+var_A8] 0D5Ch +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
call sub_402930  +
mov [esp+0ACh+var_A8] 40h +
add esi 3 +
mov [esp+0ACh+var_AC] ebp +
call sub_404C60  +
mov [eax+38h] ebx +
mov edi eax +
mov eax [ebp+0A0h] +
mov [eax+208h] edi +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab_shndx +
mov [esp+0ACh+var_AC] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
mov [edi] eax +
jz loc_424EEE  +
mov eax [ebp+0A0h] +
lea edi [esi+1] +
mov ebx 1 +
mov eax [eax+934h] +
mov [eax+30h] esi +
mov esi [esp+0ACh+var_8C] +
mov eax [eax+4] +
mov edx [esi+0B8h] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
call sub_44AF80  +
cmp edi 0FFFFFEFFh +
ja loc_4258D0  +
mov eax [ebp+0A0h] +
mov [eax+214h] edi +
mov eax [ebp+0A0h] +
mov [eax+38h] edi +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] edi +
mov [esp+0ACh+var_AC] ebp +
call sub_404D50  +
test eax eax +
mov esi eax +
mov [esp+0ACh+var_94] eax +
jz loc_424EEE  +
mov [esp+0ACh+var_A8] 38h +
mov [esp+0ACh+var_AC] ebp +
call sub_404C60  +
test eax eax +
mov [esi] eax +
jz loc_42730B  +
mov eax [ebp+0A0h] +
test ebx ebx +
mov esi [esp+0ACh+var_94] +
mov edi [esp+0ACh+var_8C] +
mov [eax+40h] esi +
mov eax [ebp+0A0h] +
lea edx [edi+80h] +
mov eax [eax+934h] +
mov eax [eax+2Ch] +
mov [esi+eax*4] edx +
jz loc_4252CA  +
mov eax [ebp+0A0h] +
lea edx [edi+48h] +
mov esi [esp+0ACh+var_94] +
mov eax [eax+90Ch] +
mov [esi+eax*4] edx +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+214h] 0FF00h +
jbe loc_42529E  +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_427D13  +
mov eax [ebx+38h] +
mov esi [esp+0ACh+var_94] +
mov [esi+eax*4] ebx +
mov eax [ebp+0A0h] +
mov edx [eax+90Ch] +
mov [ebx+1Ch] edx +
mov eax [eax+934h] +
mov esi [esp+0ACh+var_8C] +
mov edi [esp+0ACh+var_94] +
mov eax [eax+30h] +
lea edx [esi+0B8h] +
mov [edi+eax*4] edx +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+30h] +
mov [esi+64h] eax +
mov edx [ebp+64h] +
test edx edx +
jz loc_4256EC  +
mov [esp+0ACh+arg_0] ebp +
jmp loc_42534B  +
***
cmp eax 5 +
jz loc_425565  +
ja loc_425491  +
cmp eax 3 +
jnz loc_425590  +
mov esi [edx] +
mov edi offset a_stab_1 +
mov ecx 5 +
mov ebp esi +
cmps   +
jnz loc_425340  +
mov [esp+0ACh+var_AC] ebp +
mov edi ebp +
mov [esp+0ACh+var_84] edx +
mov esi edi +
mov edi offset aStr +
call strlen  +
mov ecx 4 +
mov edx [esp+0ACh+var_84] +
mov ebp eax +
sub eax 3 +
mov [esp+0ACh+var_8C] eax +
add esi eax +
cmps   +
jz loc_4258F0  +
nop   +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jz loc_4256E5  +
mov ebx [edx+8Ch] +
mov eax [esp+0ACh+var_94] +
mov ecx [ebx+44h] +
mov esi [ebx+5Ch] +
test ecx ecx +
mov [eax+esi*4] ebx +
jz loc_42536C  +
mov eax [ebx+3Ch] +
mov edi [esp+0ACh+var_94] +
mov [edi+ecx*4] eax +
mov eax [ebx+54h] +
test eax eax +
jz loc_42537E  +
mov edi [ebx+4Ch] +
mov ebp [esp+0ACh+var_94] +
mov [ebp+eax*4+0] edi +
test ecx ecx +
jz loc_4253A2  +
mov edi [esp+0ACh+arg_0] +
mov ecx [ebx+3Ch] +
mov edi [edi+0A0h] +
mov edi [edi+90Ch] +
or dword ptr [ecx+8] 40h +
mov [ecx+20h] esi +
mov [ecx+1Ch] edi +
test eax eax +
jz loc_4253C6  +
mov edi [esp+0ACh+arg_0] +
mov eax [ebx+4Ch] +
mov ecx [edi+0A0h] +
mov ecx [ecx+90Ch] +
or dword ptr [eax+8] 40h +
mov [eax+20h] esi +
mov [eax+1Ch] ecx +
test byte ptr [ebx+8] 80h +
jz loc_42541B  +
mov eax [edx+8Ch] +
mov edi [eax+64h] +
test edi edi +
jz loc_4255B0  +
mov eax [esp+0ACh+arg_4] +
test eax eax +
jz loc_4255F3  +
cmp edi offset off_473270 +
jz loc_425640  +
mov esi [edi+3Ch] +
cmp esi offset off_473270 +
jz loc_425650  +
test esi esi +
jz loc_4256C4  +
mov eax [esi+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [ebx+4] +
cmp eax 0Bh +
jz loc_425510  +
jbe loc_4252E0  +
cmp eax 6FFFFFF7h +
jz loc_425573  +
ja loc_425548  +
cmp eax 11h +
jnz loc_4255A0  +
mov eax [esp+0ACh+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+90Ch] +
mov [ebx+1Ch] eax +
jmp loc_425340  +
mov ecx [esp+0ACh+arg_4] +
xor ebx ebx +
test ecx ecx +
jnz loc_4251C5  +
mov eax [ebp+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_4250DE  +
mov ebx [esp+0ACh+arg_4] +
jmp loc_4251C5  +
cmp eax 6 +
jz loc_425510  +
cmp eax 9 +
jnz loc_425340  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_dynsym_0 +
mov [esp+28h] edx +
mov [esp] eax +
call sub_405CC0  +
mov edx [esp+28h] +
test eax eax +
jz loc_4254CE  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [esp+0C0h] +
mov [esp+28h] edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+160h] +
mov [esp] edx +
call eax  +
mov edx [esp+28h] +
test eax eax +
jz loc_425340  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
or dword ptr [ebx+8] 40h +
mov [ebx+20h] eax +
jmp loc_425340  +
***
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynstr_0 +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call sub_405CC0  +
mov edx [esp+0ACh+var_84] +
test eax eax +
jz loc_425340  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
jmp loc_425340  +
cmp eax 6FFFFFFDh +
jb loc_425340  +
cmp eax 6FFFFFFEh +
jbe loc_425510  +
cmp eax 6FFFFFFFh +
jnz loc_425340  +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynsym_0 +
jmp loc_42551C  +
test byte ptr [edx+14h] 1 +
mov eax offset a_dynstr_0 +
mov esi offset a_gnu_libstr +
mov [esp+0ACh+var_84] edx +
cmovz eax esi +
mov [esp+0ACh+var_A8] eax +
jmp loc_42551C  +
***
cmp eax 4 +
jz loc_42549F  +
jmp loc_425340  +
***
cmp eax 6FFFFFF6h +
jz loc_425565  +
jmp loc_425340  +
***
mov eax [esp+0ACh+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_42541B  +
mov esi [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_AC] offset aBWarningSh_lin +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov edx [esp+0ACh+var_84] +
jmp loc_42541B  +
mov esi [edi+3Ch] +
test esi esi +
jnz loc_42540F  +
mov edx [edi+94h] +
mov eax [ebx+2Ch] +
mov ebp [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_9C] edx +
mov [esp+0ACh+var_A4] eax +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSect +
call off_4730E4  +
mov [esp+0ACh+var_AC] 11h +
call sub_4029E0  +
jmp loc_424EEE  +
***
mov esi off_4732AC +
jmp loc_425407  +
***
movzx eax word ptr [edi+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42540F  +
cmp ax 200h +
jz loc_42540F  +
mov eax [ebx+2Ch] +
mov ecx [edi+94h] +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_9C] ecx +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSe_0 +
mov [esp+0ACh+var_A8] eax +
call off_4730E4  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A8] eax +
call sub_43C0E0  +
test eax eax +
jz loc_427365  +
mov esi [eax+3Ch] +
mov edx [esp+0ACh+var_84] +
jmp loc_425407  +
mov [esp+0ACh+var_A8] 0DD0h +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
mov [esp+0ACh+var_84] edx +
call sub_402930  +
mov edx [esp+0ACh+var_84] +
jmp loc_42540F  +
mov ebp [esp+0ACh+arg_0] +
mov edx [esp+0ACh+arg_4] +
test edx edx +
jz loc_426ADE  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
mov eax [ebp+4] +
mov esi [ebp+0A0h] +
mov eax [eax+1B0h] +
mov [esp-0BCh+arg_114] esi +
mov dword ptr [esi+84h] 3 +
mov dword ptr [esi+88h] 0 +
mov [esp-0BCh+arg_104] eax +
mov eax [ebp+28h] +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+0A8h] 0 +
mov dword ptr [esi+9Ch] 0 +
shr eax 5 +
test al 42h +
mov dword ptr [esi+0A0h] 0 +
mov dword ptr [esi+0A4h] 1 +
jnz loc_425998  +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
jz loc_425998  +
mov eax esi +
xor edx edx +
mov esi [esi+40h] +
mov edi [eax+214h] +
mov eax [eax+28h] +
cmp edi 1 +
mov [esp-0BCh+arg_D0] edi +
jbe loc_4272B7  +
mov edi [esp-0BCh+arg_114] +
mov ebx 1 +
mov [esp-0BCh+arg_178] ebp +
mov ecx [edi+934h] +
mov ebp edi +
mov [esp-0BCh+arg_E0] ecx +
jmp loc_42582D  +
cmp [ebp+90Ch] ebx +
jz loc_42584E  +
mov edi [ebp+208h] +
test edi edi +
jz loc_4257E2  +
mov edi [edi+38h] +
cmp ecx [esi+edi*4] +
jz loc_42584E  +
mov edi [esp-0BCh+arg_E0] +
cmp ebx [edi+30h] +
jz loc_42584E  +
cmp ebx [edi+2Ch] +
jz loc_42584E  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_423FA0  +
mov edi [esp-0BCh+arg_178] +
mov ebp [edi+0A0h] +
mov edi [ebp+934h] +
mov [esp-0BCh+arg_E0] edi +
nop   +
add ebx 1 +
cmp ebx [esp-0BCh+arg_D0] +
jz loc_4268E9  +
mov ecx [esi+ebx*4] +
mov edi [ecx+4] +
cmp edi 4 +
jz loc_42583D  +
cmp edi 9 +
jnz loc_425860  +
mov edi [ecx+2Ch] +
test edi edi +
jz loc_42584E  +
test byte ptr [edi+17h] 8 +
jz loc_4257C8  +
mov dword ptr [ecx+10h] 0FFFFFFFFh +
mov dword ptr [ecx+14h] 0FFFFFFFFh +
jmp loc_425820  +
***
mov edi [ecx+2Ch] +
test edi edi +
jnz loc_425844  +
jmp loc_4257C8  +
***
mov eax [ebp+64h] +
test eax eax +
jz loc_4271E9  +
mov esi 1 +
jmp loc_42588F  +
mov edx [eax+0Ch] +
test edx edx +
mov eax edx +
jz loc_425990  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 11h +
jnz loc_425882  +
test byte ptr [eax+16h] 10h +
jz loc_4258C8  +
mov ecx [eax+10h] +
mov edx [eax+0Ch] +
test ecx ecx +
mov ebx edx +
jz loc_427016  +
mov [ecx+0Ch] edx +
mov edx [eax+0Ch] +
test ebx ebx +
jz loc_42700E  +
mov [ebx+10h] ecx +
sub dword ptr [ebp+6Ch] 1 +
jmp loc_425885  +
mov [edx+5Ch] esi +
add esi 1 +
jmp loc_425882  +
mov [esp+0ACh+var_A4] edi +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBTooManySectio +
call off_4730E4  +
jmp loc_424EEE  +
***
lea eax [ebp-2] +
mov [esp+0ACh+var_AC] eax +
call sub_407460  +
test eax eax +
mov esi eax +
jz loc_424EEE  +
mov edx [esp+0ACh+var_84] +
mov ecx [esp+0ACh+var_8C] +
mov eax [edx] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_AC] esi +
mov [esp+0ACh+var_A8] eax +
call memcpy  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [esi+ebp-3] 0 +
mov [esp+0ACh+var_A8] esi +
mov [esp+0ACh+var_AC] eax +
call sub_405CC0  +
mov [esp+0ACh+var_AC] esi +
mov edi eax +
call free  +
test edi edi +
mov edx [esp+0ACh+var_84] +
jz loc_425340  +
mov esi [edi+8Ch] +
mov eax [ebx+5Ch] +
mov [esi+1Ch] eax +
mov eax [esi+28h] +
test eax eax +
jnz loc_425340  +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call loc_402EC0  +
mov edx [esp+0ACh+var_84] +
test eax eax +
lea ecx [eax+3] +
cmovs eax ecx +
sar eax 2 +
add eax 4 +
mov [esi+28h] eax +
jmp loc_425340  +
***
lea edi [esi+1] +
jmp loc_424F99  +
***
mov edi [esp-0BCh+arg_17C] +
mov esi [esp-0BCh+arg_114] +
test edi edi +
jz loc_42732A  +
mov eax [esi+934h] +
xor edi edi +
mov eax [eax] +
test eax eax +
jz loc_426998  +
xor ecx ecx +
nop   +
mov edx [eax+1Ch] +
add ecx 1 +
mov eax [eax] +
test edx edx +
cmovnz edi edx +
test eax eax +
jnz loc_4259C0  +
test ecx ecx +
mov [esp-0BCh+arg_108] ecx +
jz loc_426998  +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
movzx eax byte ptr [ecx] +
mov [esi+14h] eax +
mov eax [ebp+0A0h] +
movzx edx byte ptr [ecx+1] +
mov [eax+2Ch] edx +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_108] +
mov [eax+30h] esi +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [edx+1Ch] +
cmp esi 0FFFFFFFFh +
jz loc_427045  +
movzx ebx byte ptr [ecx+1] +
imul ebx [esp-0BCh+arg_108] +
cmp esi ebx +
jb loc_427184  +
mov ebx [esp-0BCh+arg_108] +
test ebx ebx +
jz loc_426AC6  +
mov esi [edx+1Ch] +
xor edx edx +
movzx ecx byte ptr [ecx+1] +
mov eax esi +
div  ecx +
mov eax esi +
test edx edx +
jnz loc_4271B3  +
xor edx edx +
div  ecx +
mov [esp-0BCh+arg_C0] 20h +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_404D50  +
mov ebx eax +
mov eax [ebp+0A0h] +
test ebx ebx +
mov [eax+44h] ebx +
jz loc_424EEE  +
test byte ptr [ebp+29h] 20h +
mov [esp-0BCh+arg_11C] 1 +
jz loc_425A97  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+10h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov [esp-0BCh+arg_D4] 0 +
mov eax [eax+174h] +
movzx esi byte ptr [eax] +
movzx eax byte ptr [eax+1] +
imul eax [esp-0BCh+arg_108] +
mov [esp-0BCh+arg_D0] esi +
add [esp-0BCh+arg_D0] eax +
mov eax [esp-0BCh+arg_D0] +
adc [esp-0BCh+arg_D4] edx +
cmp eax edi +
ja loc_427056  +
sub edi eax +
xor edx edx +
mov [esp-0BCh+arg_120] edi +
mov eax edi +
add eax [esp-0BCh+arg_D0] +
adc edx [esp-0BCh+arg_D4] +
mov [esp-0BCh+arg_E8] eax +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_EC] edx +
mov edx [eax+934h] +
mov esi [edx] +
test esi esi +
mov [esp-0BCh+arg_E0] esi +
jz loc_4260C8  +
mov [esp-0BCh+arg_178] ebp +
mov ebp ebx +
mov [esp-0BCh+arg_100] 0 +
mov eax [esp-0BCh+arg_E0] +
mov ebx [eax+24h] +
cmp ebx 1 +
jbe loc_426417  +
mov eax [esp-0BCh+arg_178] +
mov eax [eax+0A0h] +
cmp word ptr [eax+24h] 4 +
jnz loc_425B4C  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+4] +
cmp eax 4 +
mov [esp-0BCh+arg_D0] eax +
jz loc_426250  +
mov esi [esp-0BCh+arg_E0] +
mov [esp-0BCh+arg_BC] ebx +
mov [esp-0BCh+arg_C4] 41F150h +
mov [esp-0BCh+arg_C0] 4 +
lea eax [esi+28h] +
mov [esp-0BCh+arg_B8] eax +
call qsort  +
mov eax esi +
mov esi [esi+4] +
mov ebx [eax+24h] +
mov [esp-0BCh+arg_D0] esi +
mov eax [esp-0BCh+arg_D0] +
test ebx ebx +
mov esi [esp-0BCh+arg_E0] +
mov [ebp+0] eax +
mov eax [esi+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
jnz loc_426265  +
movzx eax byte ptr [esi+20h] +
mov dword ptr [ebp+0Ch] 0 +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_426241  +
mov dword ptr [ebp+10h] 0 +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_4262F0  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_426295  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [ebp+1Ch] eax +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_42631A  +
cmp [esp-0BCh+arg_D0] 2 +
jz loc_4267B2  +
xor esi esi +
cmp [esp-0BCh+arg_D0] 4 +
mov [esp-0BCh+arg_F8] 0 +
jz loc_4263E0  +
movzx eax byte ptr [esp-0BCh+arg_D8] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+14h] 0 +
mov dword ptr [ebp+18h] 0 +
and eax 10h +
jz loc_425C70  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_425C36  +
mov edx [esp-0BCh+arg_F0] +
or edx 4 +
mov [ebp+4] edx +
mov edi [esp-0BCh+arg_104] +
test ebx ebx +
mov edx [edi+174h] +
movzx ecx byte ptr [edx] +
mov [ebp+14h] ecx +
movzx edx byte ptr [edx] +
mov [ebp+18h] edx +
jz loc_425C70  +
mov ecx [ebp+0Ch] +
mov edx [esp-0BCh+arg_E8] +
cmp ecx edx +
jb loc_42734D  +
sub ecx edx +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
mov [ebp+0Ch] ecx +
jnz loc_425C70  +
sub [ebp+10h] edx +
nop   +
test byte ptr [esp-0BCh+arg_D8] 20h +
jz loc_425CDC  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_425C82  +
or dword ptr [ebp+4] 4 +
test al al +
mov eax [esp-0BCh+arg_104] +
mov edx [eax+174h] +
jnz loc_426787  +
movzx eax byte ptr [edx] +
test ebx ebx +
mov [ebp+8] eax +
jz loc_426967  +
sub eax [esp-0BCh+arg_E8] +
add [ebp+0Ch] eax +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
jnz loc_425CB3  +
add [ebp+10h] eax +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
mov edi [esp-0BCh+arg_120] +
add eax edi +
add edx edi +
mov [ebp+14h] eax +
mov [ebp+18h] edx +
mov eax [esp-0BCh+arg_D0] +
cmp eax 1 +
jz loc_4262D6  +
cmp eax 4 +
jz loc_4262C0  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+24h] +
lea esi [eax+28h] +
mov [esp-0BCh+arg_F0] esi +
test ecx ecx +
jz loc_427178  +
mov edi [ebp+0] +
mov esi ebp +
mov [esp-0BCh+arg_D0] 0 +
mov [esp-0BCh+arg_E4] edi +
jmp loc_425DA9  +
***
cmp edi 1 +
jz loc_425EB0  +
cmp dword ptr [ebp+4] 8 +
jz loc_425EE0  +
mov ecx [ebp+18h] +
add [esi+14h] ecx +
test byte ptr [ebp+8] 2 +
jz loc_425D42  +
add [esi+18h] ecx +
mov eax [esp-0BCh+arg_D8] +
cmp eax [esi+1Ch] +
mov eax [esp-0BCh+arg_E0] +
movzx eax byte ptr [eax+20h] +
jbe loc_425D69  +
test al 4 +
jnz loc_425D69  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_426030  +
mov ecx [esp-0BCh+arg_D8] +
mov [esi+1Ch] ecx +
test al 1 +
jnz loc_425D8F  +
mov eax [esi+4] +
mov edx eax +
or edx 4 +
mov [esi+4] edx +
mov edx [ebp+8] +
test dl 4 +
jz loc_425D86  +
or eax 5 +
mov [esi+4] eax +
and edx 1 +
jz loc_425D8F  +
or dword ptr [esi+4] 2 +
mov [esp-0BCh+arg_E4] edi +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_D0] 1 +
mov ecx [eax+24h] +
cmp [esp-0BCh+arg_D0] ecx +
jnb loc_426086  +
mov eax [esp-0BCh+arg_F0] +
mov ecx [esp-0BCh+arg_D0] +
mov ebx [eax+ecx*4] +
mov eax 1 +
mov ecx [ebx+40h] +
mov ebp [ebx+8Ch] +
shl eax cl +
cmp edi 7 +
mov [esp-0BCh+arg_D8] eax +
setz dl  +
jz loc_425DD5  +
cmp edi 1 +
jnz loc_425E3F  +
mov eax [ebp+4] +
cmp eax 8 +
jz loc_425F73  +
mov edi [esi+18h] +
mov edx [esi+10h] +
mov ecx [ebx+20h] +
mov [esp-0BCh+arg_E4] edi +
mov [esp-0BCh+arg_F4] edx +
add edx edi +
mov edi ecx +
sub edi edx +
jz loc_425E0C  +
cmp [esp-0BCh+arg_F4] edx +
ja loc_426046  +
cmp edx ecx +
ja loc_426046  +
mov edx [esp-0BCh+arg_E4] +
add edx edi +
cmp eax 8 +
mov [esi+18h] edx +
jz loc_425E39  +
mov eax [esi+14h] +
lea ecx [edi+eax] +
cmp edx ecx +
mov [esp-0BCh+arg_E4] eax +
ja loc_425F95  +
xor edx edx +
add [esp-0BCh+arg_E8] edi +
adc [esp-0BCh+arg_EC] edx +
mov [esi+14h] ecx +
mov edi [esi] +
mov [esp-0BCh+arg_E4] edi +
cmp edi 4 +
jnz loc_425D20  +
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_425D29  +
mov eax [esp-0BCh+arg_D0] +
test eax eax +
jnz loc_426220  +
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
mov ecx [ebp+18h] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax [esp-0BCh+arg_E0] +
mov [ebp+14h] edx +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
movzx eax byte ptr [eax+20h] +
mov [esi+14h] ecx +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 1 +
jmp loc_425D69  +
***
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
cmp dword ptr [ebp+4] 8 +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov [ebp+14h] edx +
jz loc_426025  +
mov ecx [ebp+18h] +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
jmp loc_425D36  +
mov ecx [ebp+8] +
test ch 4 +
mov eax ecx +
jz loc_425F50  +
mov edx [ebp+14h] +
or edx [ebp+10h] +
jnz loc_425F50  +
mov eax [ebp+0Ch] +
xor edx edx +
mov [esp-0BCh+arg_F4] eax +
xor eax eax +
cmp [esp-0BCh+arg_D8] 0 +
jz loc_425F38  +
mov edi [esp-0BCh+arg_D8] +
xor edx edx +
mov eax [esp-0BCh+arg_F4] +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] edi +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
mov [esp-0BCh+arg_110] ecx +
call sub_46FE70  +
mov edi [esi] +
mov ecx [esp-0BCh+arg_110] +
add eax [esp-0BCh+arg_E8] +
adc edx [esp-0BCh+arg_EC] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax ecx +
mov [ebp+14h] edx +
nop   +
test al 2 +
jz loc_425D42  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_425F68  +
test ah 4 +
jnz loc_425D42  +
mov eax [ebp+18h] +
add [esi+18h] eax +
jmp loc_425D42  +
mov ecx [ebp+8] +
test cl 2 +
jz loc_425E3F  +
and ch 4 +
jz loc_425DE1  +
test dl dl +
jz loc_425E3F  +
jmp loc_425DE1  +
mov eax [esp-0BCh+arg_E8] +
mov [esp-0BCh+arg_F4] edx +
mov edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_4086D0  +
mov edx [esp-0BCh+arg_F4] +
test eax eax +
jnz loc_424EEE  +
mov edi edx +
sub edi [esp-0BCh+arg_E4] +
mov [esp-0BCh+arg_B8] edi +
call sub_4075F0  +
test eax eax +
mov edx eax +
jz loc_424EEE  +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_F4] edx +
mov [esp-0BCh+arg_C0] eax +
call sub_408570  +
mov edx [esp-0BCh+arg_F4] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_E4] eax +
call free  +
mov eax [esp-0BCh+arg_E4] +
cmp edi eax +
jnz loc_424EEE  +
mov ecx [esi+14h] +
add ecx edi +
jmp loc_425E2C  +
mov eax [ebp+8] +
jmp loc_425F50  +
***
mov ecx [esp-0BCh+arg_178] +
test byte ptr [ecx+29h] 20h +
jnz loc_425D69  +
jmp loc_425D62  +
mov eax [esp-0BCh+arg_178] +
xor edi edi +
mov [esp-0BCh+arg_C8] edx +
mov [esp-0BCh+arg_E4] edx +
mov [esp-0BCh+arg_C4] ecx +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] ebx +
mov [esp-0BCh+arg_B8] offset aBSectionALmaLx +
call off_4730E4  +
mov edx [esp-0BCh+arg_E4] +
mov eax [esi+18h] +
mov [ebx+20h] edx +
mov [esp-0BCh+arg_E4] eax +
mov eax [ebp+4] +
jmp loc_425E0C  +
mov ebp esi +
mov eax [esp-0BCh+arg_F8] +
xor edx edx +
sub [esp-0BCh+arg_E8] eax +
sbb [esp-0BCh+arg_EC] edx +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_426423  +
mov eax [esp-0BCh+arg_E0] +
add ebp 20h +
add [esp-0BCh+arg_100] 1 +
mov eax [eax] +
test eax eax +
mov [esp-0BCh+arg_E0] eax +
jnz loc_425B14  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_E8] +
mov edi [esp-0BCh+arg_EC] +
mov [edx+20h] esi +
mov [edx+24h] edi +
mov [esp-0BCh+arg_D8] esi +
mov [esp-0BCh+arg_DC] edi +
mov ecx [ebp+4] +
mov esi [ecx+1B0h] +
mov ecx [eax+214h] +
mov [esp-0BCh+arg_E0] esi +
mov esi [eax+40h] +
lea edi [esi+ecx*4] +
mov [esp-0BCh+arg_D0] esi +
add esi 4 +
cmp edi esi +
jbe loc_4269E6  +
mov [esp-0BCh+arg_178] ebp +
jmp loc_4261E2  +
cmp dword ptr [ebx+4] 8 +
jz loc_4269C3  +
test byte ptr [ebx+8] 2 +
jz loc_426800  +
mov edx [ebx+18h] +
test edx edx +
jz loc_42615B  +
test eax eax +
mov edx off_4730E4 +
jz loc_427320  +
mov eax [eax] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningAlloca +
mov [esp-0BCh+arg_BC] eax +
call edx  +
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_42695F  +
mov ebp [ebx+18h] +
test ebp ebp +
jz loc_42695F  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+10h] +
mov eax [ebx+0Ch] +
xor edx edx +
mov ebp eax +
xor eax eax +
test ecx ecx +
jz loc_4261AF  +
xor edx edx +
mov eax ebp +
sub eax [esp-0BCh+arg_D8] +
sbb edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_46FE70  +
add eax [esp-0BCh+arg_D8] +
adc edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ebx +
call sub_423FA0  +
mov [esp-0BCh+arg_D8] eax +
mov [esp-0BCh+arg_DC] edx +
add esi 4 +
cmp edi esi +
jbe loc_4269D3  +
mov ebx [esi] +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_426122  +
mov ecx [eax+54h] +
mov edx [eax+50h] +
mov ebp ecx +
or ebp edx +
jz loc_426118  +
xor ecx [ebx+14h] +
xor edx [ebx+10h] +
or ecx edx +
jz loc_4261D7  +
mov [esp-0BCh+arg_BC] 14BEh +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_402930  +
jmp loc_4261D7  +
***
mov dword ptr [ebx+50h] 0 +
mov dword ptr [ebx+54h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_425D93  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+0Ch] +
mov [ebp+10h] eax +
jmp loc_425BBB  +
mov eax [esp-0BCh+arg_E0] +
mov dword ptr [ebp+0] 4 +
mov eax [eax+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
mov edi [esp-0BCh+arg_E0] +
mov ecx [edi+28h] +
mov edx [edi+10h] +
mov eax [ecx+1Ch] +
sub eax edx +
mov [ebp+0Ch] eax +
movzx eax byte ptr [edi+20h] +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_426241  +
mov eax [ecx+20h] +
sub eax edx +
mov [ebp+10h] eax +
jmp loc_425BBB  +
test ebx ebx +
jnz loc_426890  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
mov [ebp+1Ch] eax +
jmp loc_425BDB  +
***
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_425CF2  +
test byte ptr [esp-0BCh+arg_D8] 30h +
jnz loc_426930  +
mov eax [esp-0BCh+arg_E8] +
mov [ebp+8] eax +
jmp loc_425CF2  +
***
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_425BC6  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_426313  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_11C] +
mov [ebp+1Ch] eax +
test ebx ebx +
jz loc_426408  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_426FBB  +
mov ecx [ebp+1Ch] +
mov esi [esp-0BCh+arg_E0] +
xor eax eax +
mov edx [esi+eax*4+28h] +
test dword ptr [edx+14h] 102h +
jnz loc_426350  +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 8 +
add eax 1 +
cmp eax ebx +
jnz loc_426336  +
mov esi [esp-0BCh+arg_E0] +
mov eax [esi+28h] +
mov eax [eax+8Ch] +
cmp dword ptr [eax+4] 8 +
jnz loc_426FEF  +
xor eax eax +
jmp loc_426386  +
mov edx [esi+eax*4+28h] +
mov edx [edx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_426FEF  +
add eax 1 +
cmp eax ebx +
jnz loc_426372  +
mov esi 1 +
test ecx ecx +
mov eax [ebp+0Ch] +
jz loc_426B52  +
xor edx edx +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_46FE70  +
mov edi edx +
mov edx eax +
mov ecx edi +
mov [esp-0BCh+arg_F8] eax +
add [esp-0BCh+arg_E8] edx +
adc [esp-0BCh+arg_EC] ecx +
test esi esi +
jz loc_42640A  +
mov esi 1 +
jmp loc_425C06  +
***
test ebx ebx +
jz loc_4272AC  +
mov ecx [esp-0BCh+arg_E0] +
xor eax eax +
nop   +
mov edx [ecx+eax*4+28h] +
add eax 1 +
cmp eax ebx +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 7 +
jnz loc_4263F0  +
xor esi esi +
mov [esp-0BCh+arg_F8] 0 +
jmp loc_425C06  +
mov eax [eax+4] +
mov [esp-0BCh+arg_D0] eax +
jmp loc_425B7B  +
mov eax [esp+0C0h] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_4260A1  +
cmp ecx 1 +
jbe loc_426952  +
mov eax 1 +
mov esi [esp+28h] +
jmp loc_42645B  +
***
add eax 1 +
cmp eax ecx +
jz loc_426952  +
mov ebx [esi+eax*4+24h] +
mov edx [esi+eax*4+28h] +
mov edi [ebx+1Ch] +
cmp [edx+1Ch] edi +
jnz loc_426450  +
mov edx [edx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_42647D  +
cmp dword ptr [edx+4] 8 +
jz loc_426450  +
mov edi [edx+18h] +
test edi edi +
jz loc_426450  +
mov edx [ebx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_426496  +
cmp dword ptr [edx+4] 8 +
jz loc_426450  +
mov ebx [edx+18h] +
test ebx ebx +
jz loc_426450  +
mov dword ptr [esp+58h] 0 +
***
mov esi [esp-0BCh+arg_E0] +
mov edx [esi+24h] +
test edx edx +
jz loc_4260A1  +
xor edi edi +
mov [esp-0BCh+arg_D8] ebp +
mov ebp edi +
jmp loc_4265C6  +
mov ecx [esp-0BCh+arg_E4] +
lea edx [ecx-6] +
cmp edx 1 +
jbe loc_426617  +
and eax 2 +
mov [esp-0BCh+arg_F4] eax +
jnz loc_4264FC  +
mov eax [esp-0BCh+arg_E4] +
sub eax 1 +
cmp eax 1 +
jbe loc_426766  +
mov eax [esp-0BCh+arg_E4] +
sub eax 6474E550h +
cmp eax 2 +
jbe loc_426766  +
mov eax [edi+4] +
cmp eax 8 +
mov [esp-0BCh+arg_F8] eax +
jz loc_426550  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov ecx [ecx+8] +
cmp ecx eax +
ja loc_426766  +
xor ebx ebx +
sub eax ecx +
mov ecx eax +
mov eax [edi+18h] +
sbb edx ebx +
mov ebx edx +
xor edx edx +
add ecx eax +
mov eax [esp-0BCh+arg_D8] +
adc ebx edx +
cmp ebx 0 +
mov eax [eax+14h] +
jg loc_426766  +
jl loc_426550  +
cmp ecx eax +
ja loc_426766  +
lea esi [esi+0] +
mov eax [esp-0BCh+arg_110] +
test eax eax +
jz loc_4265A0  +
mov eax [esp-0BCh+arg_F4] +
test eax eax +
jz loc_4265A0  +
mov eax [esp-0BCh+arg_D8] +
mov edx [edi+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_426766  +
sub edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_426587  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_427D72  +
mov eax [edi+18h] +
mov ecx [esp-0BCh+arg_D8] +
add eax edx +
cmp eax [ecx+18h] +
ja loc_426766  +
lea esi [esi+0] +
cmp [esp-0BCh+arg_E4] 2 +
jz loc_4266DF  +
nop   +
lea esi [esi+0] +
add ebp 1 +
cmp ebp [esi+24h] +
jnb loc_426914  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax] +
mov [esp-0BCh+arg_E4] eax +
mov eax [esi+ebp*4+28h] +
mov edi [eax+8Ch] +
mov [esp-0BCh+arg_D0] eax +
mov eax [edi+8] +
mov ecx eax +
and ecx 400h +
mov [esp-0BCh+arg_F0] ecx +
jz loc_4264C1  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_4264D1  +
cmp [esp-0BCh+arg_E4] 6474E552h +
jz loc_4264D1  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_4264D1  +
cmp dword ptr [edi+4] 8 +
jz loc_426777  +
mov eax [esp-0BCh+arg_100] +
mov [esp-0BCh+arg_B8] offset aBSectionACanTB +
mov [esp-0BCh+arg_C4] eax +
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_BC] eax +
call off_4730E4  +
mov edi [esi+4] +
mov eax edi +
call near ptr dword_41F0B0  +
test eax eax +
mov ebx eax +
jz loc_4268A0  +
mov eax ds:_iob +
add eax 20h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
mov eax ds:_iob +
mov [esp-0BCh+arg_C0] ebx +
xor ebx ebx +
mov [esp-0BCh+arg_BC] offset aS_18 +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
mov eax [esi+24h] +
test eax eax +
jz loc_4266B2  +
mov eax [esi+ebx*4+28h] +
add ebx 1 +
mov eax [eax] +
mov [esp-0BCh+arg_BC] offset aS_17 +
mov [esp-0BCh+arg_C0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
cmp ebx [esi+24h] +
jb loc_426688  +
mov eax ds:_iob +
mov [esp-0BCh+arg_B8] 0Ah +
add eax 40h +
mov [esp-0BCh+arg_BC] eax +
call putc  +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
jmp loc_4265B0  +
mov eax [edi+18h] +
test eax eax +
jnz loc_4265B0  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax+18h] +
test eax eax +
mov [esp-0BCh+arg_124] eax +
jz loc_4265B0  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_426741  +
mov eax [edi+10h] +
mov ecx [esp-0BCh+arg_D8] +
mov edx [edi+14h] +
mov [esp-0BCh+arg_F8] eax +
mov eax [ecx+8] +
cmp eax [esp-0BCh+arg_F8] +
mov [esp-0BCh+arg_FC] edx +
jnb loc_426766  +
mov ecx [esp-0BCh+arg_F8] +
xor edx edx +
mov ebx [esp-0BCh+arg_FC] +
sub ecx eax +
mov eax ecx +
mov ecx [esp-0BCh+arg_D8] +
sbb ebx edx +
cmp ebx 0 +
mov ecx [ecx+14h] +
jg loc_426766  +
jl loc_426741  +
cmp eax ecx +
jnb loc_426766  +
cmp [esp-0BCh+arg_F4] 0 +
jz loc_4265B0  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+0Ch] +
mov edx [ecx+0Ch] +
cmp eax edx +
jbe loc_426766  +
sub eax edx +
cmp [esp-0BCh+arg_124] eax +
ja loc_4265B0  +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jnz loc_42660D  +
jmp loc_426617  +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_4265B0  +
jmp loc_426617  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
test ebx ebx +
mov [ebp+18h] edx +
jnz loc_425CCE  +
jmp loc_425CDC  +
cmp ebx 1 +
jbe loc_426408  +
mov eax [esp-0BCh+arg_E0] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
mov eax [eax+28h] +
mov esi [eax] +
cmps   +
jz loc_426408  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBTheFirstSecti +
mov [esp-0BCh+arg_BC] ebp +
call off_4730E4  +
mov [esp-0BCh+arg_B8] 11h +
call sub_4029E0  +
jmp loc_424EEE  +
***
mov edx [ebx+4] +
cmp edx 4 +
jz loc_426811  +
cmp edx 9 +
jnz loc_42698B  +
test eax eax +
jz loc_42691D  +
test byte ptr [eax+17h] 8 +
jnz loc_42691D  +
mov eax [esp-0BCh+arg_178] +
mov ecx [esp-0BCh+arg_D0] +
mov eax [eax+0A0h] +
mov edx [eax+90Ch] +
cmp ebx [ecx+edx*4] +
jz loc_42691D  +
mov edx [eax+208h] +
test edx edx +
jz loc_426859  +
mov edx [edx+38h] +
cmp ebx [ecx+edx*4] +
jz loc_42691D  +
mov eax [eax+934h] +
mov ecx [esp-0BCh+arg_D0] +
mov edx [eax+30h] +
cmp ebx [ecx+edx*4] +
jz loc_42691D  +
mov eax [eax+2Ch] +
cmp ebx [ecx+eax*4] +
jz loc_42691D  +
mov [esp-0BCh+arg_C4] 1 +
mov eax [esp-0BCh+arg_D8] +
mov edx [esp-0BCh+arg_DC] +
jmp loc_4261BF  +
mov dword ptr [ebp+1Ch] 0 +
jmp loc_425BDB  +
***
lea eax [edi-70000000h] +
cmp eax 0FFFFFFFh +
jbe loc_42701E  +
lea eax [edi-60000000h] +
cmp eax 0FFFFFFFh +
ja loc_426A97  +
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoos7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_426653  +
mov ebp [esp-0BCh+arg_178] +
mov esi [esp-0BCh+arg_E0] +
mov [esi+20h] eax +
mov [esi+24h] edx +
mov eax [esp-0BCh+arg_118] +
test eax eax +
jnz loc_426EEE  +
or byte ptr [ebp+2Bh] 10h +
mov eax 1 +
jmp loc_424EF0  +
mov ebp [esp-0BCh+arg_D8] +
jmp loc_4260A1  +
mov dword ptr [ebx+10h] 0FFFFFFFFh +
mov dword ptr [ebx+14h] 0FFFFFFFFh +
jmp loc_4261D7  +
mov edi [ebp+14h] +
mov eax [ebp+8] +
mov ecx [esp-0BCh+arg_E8] +
add eax edi +
sub ecx eax +
test esi esi +
mov eax ecx +
jnz loc_42694A  +
lea ecx [edi+ecx] +
mov [ebp+14h] ecx +
add [ebp+18h] eax +
jmp loc_425CF2  +
mov [esp-0BCh+arg_110] 1 +
jmp loc_4264A5  +
mov ecx [ebx+24h] +
jmp loc_42617E  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add [ebp+14h] eax +
movzx eax byte ptr [edx+1] +
imul eax edi +
add [ebp+18h] eax +
jmp loc_425CDC  +
***
mov esi ebx +
jmp loc_425195  +
***
test eax eax +
jnz loc_426819  +
jmp loc_426823  +
mov dword ptr [esi+14h] 0 +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_108] 0 +
mov dword ptr [eax+2Ch] 0 +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
jmp loc_4259FA  +
mov ebp [ebx+30h] +
test ebp ebp +
jnz loc_426122  +
jmp loc_4261FF  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov edi [esp-0BCh+arg_E0] +
mov eax [eax+44h] +
mov ecx [edi+174h] +
mov [esp-0BCh+arg_E4] eax +
movzx esi byte ptr [ecx] +
mov [esp-0BCh+arg_F8] esi +
add esi [edi+10h] +
mov edi [edx] +
mov [esp-0BCh+arg_F0] esi +
test edi edi +
jz loc_427D49  +
mov edx edi +
xor esi esi +
mov [esp-0BCh+arg_100] 0 +
mov [esp-0BCh+arg_F4] 0 +
mov [esp-0BCh+arg_E8] 0 +
mov [esp-0BCh+arg_E0] 0 +
mov [esp-0BCh+arg_D0] edi +
jmp loc_426A4D  +
***
mov edx [edx] +
add eax 20h +
test edx edx +
jz loc_426B63  +
add esi 1 +
cmp dword ptr [eax] 1 +
jnz loc_426A40  +
movzx ecx byte ptr [edx+20h] +
mov ebx ecx +
and ebx 10h +
jz loc_426A6E  +
mov edi [eax+0Ch] +
mov [esp-0BCh+arg_E8] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_F4] edi +
and ecx 20h +
jz loc_426A40  +
mov edi [eax+0Ch] +
test bl bl +
mov [esp-0BCh+arg_F0] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_100] edi +
jz loc_426A40  +
mov ecx [esp-0BCh+arg_F8] +
add [esp-0BCh+arg_F0] ecx +
add [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_E0] edx +
jmp loc_426A40  +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C4] edi +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C0] offset a8_8x +
mov [esp-0BCh+arg_BC] 20h +
mov [esp-0BCh+arg_B8] eax +
call sub_4204E0  +
jmp loc_426653  +
movzx ecx byte ptr [ecx] +
xor ebx ebx +
mov [edx+24h] ebx +
mov [esp-0BCh+arg_DC] ebx +
mov [edx+20h] ecx +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_4260E4  +
***
mov eax [ebp+7Ch] +
mov [esp+0ACh+var_94] eax +
test eax eax +
mov eax [ebp+28h] +
mov [esp+0ACh+var_64] eax +
jnz loc_427067  +
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [esp+0ACh+var_64] +
and eax 43h +
cmp eax 1 +
jz loc_427074  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
lea eax [esp+74h] +
mov [esp-0BCh+arg_C0] eax +
mov [esp-0BCh+arg_BC] offset sub_41F600 +
mov [esp-0BCh+arg_B8] ebp +
call sub_4062E0  +
mov eax [esp+74h] +
test eax eax +
jz loc_425713  +
jmp loc_424EEE  +
mov dword ptr [esp+40h] 0 +
xor edx edx +
xor ecx ecx +
jmp loc_4263C9  +
mov ecx [esp-0BCh+arg_17C] +
mov ebx [esp-0BCh+arg_E0] +
mov edi [esp-0BCh+arg_D0] +
test ecx ecx +
setnz cl  +
test ebx ebx +
setnz al  +
mov ebx edi +
and al cl +
mov byte ptr [esp-0BCh+arg_D0] cl +
mov edi eax +
jnz loc_4271F8  +
mov eax [esp-0BCh+arg_E4] +
shl esi 5 +
mov edi [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_178] ebp +
add esi eax +
mov [esp-0BCh+arg_E0] esi +
mov esi eax +
lea esi [esi+0] +
mov edx [esi] +
cmp edx 6474E552h +
jz loc_426D05  +
cmp edx 6474E551h +
jz loc_426E00  +
mov eax [ebx+24h] +
test eax eax +
jz loc_426DB8  +
cmp edx 1 +
jz loc_426C20  +
cmp edx 4 +
jz loc_426E9C  +
test byte ptr [ebx+20h] 30h +
jnz loc_427CA6  +
mov edx [ebx+28h] +
mov dword ptr [esi+14h] 0 +
mov ebp [edx+50h] +
mov [esi+8] ebp +
lea esi [esi+0] +
mov ecx [ebx+eax*4+24h] +
mov edx [ecx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_426E8C  +
sub eax 1 +
jnz loc_426C00  +
lea esi [esi+0] +
mov ebx [ebx] +
add esi 20h +
test ebx ebx +
jnz loc_426BB0  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_D8] +
mov edi [esp-0BCh+arg_DC] +
mov [edx+20h] esi +
mov esi [esp-0BCh+arg_104] +
mov [edx+24h] edi +
mov edx [esi+0B0h] +
test edx edx +
jz loc_426C76  +
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call edx  +
test eax eax +
jz loc_424EEE  +
mov eax [ebp+0A0h] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_426C93  +
mov esi [esp-0BCh+arg_17C] +
movzx edx byte ptr [esi] +
and edx 3 +
cmp dl 1 +
jz loc_427CC3  +
mov eax [eax+934h] +
mov esi [eax+1Ch] +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+1] +
mov [esp-0BCh+arg_C4] 0 +
movzx eax byte ptr [eax] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_4086D0  +
test eax eax +
jnz loc_424EEE  +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov eax [eax+174h] +
mov ecx [eax+10h] +
mov eax [esp-0BCh+arg_114] +
mov edi [eax+44h] +
mov eax esi +
div  ebx +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_C0] eax +
call ecx  +
test eax eax +
jnz loc_424EEE  +
jmp loc_4268FA  +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_426EB8  +
mov eax [esp-0BCh+arg_178] +
mov ebp [esp-0BCh+arg_E4] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jnz loc_426D3F  +
jmp loc_426DE0  +
mov eax [eax] +
add ebp 20h +
test eax eax +
jz loc_426DE0  +
cmp dword ptr [ebp+0] 1 +
jnz loc_426D32  +
mov ecx [edi+74h] +
cmp [ebp+0Ch] ecx +
jnb loc_426D32  +
mov edx [eax+24h] +
test edx edx +
jz loc_426D32  +
mov edx [eax+28h] +
mov ecx [edi+70h] +
cmp [edx+1Ch] ecx +
jb loc_426D32  +
nop   +
cmp ebp [esp-0BCh+arg_E0] +
jnb loc_426E38  +
mov eax [ebp+0Ch] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
mov [esi+0Ch] eax +
mov eax [ebp+10h] +
mov [esi+10h] eax +
mov eax [ebp+8] +
mov [esi+8] eax +
jz loc_426FF6  +
mov eax [edi+74h] +
sub eax [ebp+0Ch] +
movzx edx byte ptr [ebx+20h] +
mov [esi+14h] eax +
test dl 4 +
mov [esi+18h] eax +
jnz loc_426DA3  +
mov dword ptr [esi+1Ch] 1 +
and edx 1 +
jnz loc_426C20  +
mov dword ptr [esi+4] 4 +
jmp loc_426C20  +
movzx eax byte ptr [ebx+20h] +
test al 10h +
jz loc_426E15  +
mov ecx [esp-0BCh+arg_E8] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_426C20  +
mov eax [esp-0BCh+arg_F4] +
mov [esi+10h] eax +
jmp loc_426C20  +
***
mov [esp-0BCh+arg_BC] 1546h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_402930  +
jmp loc_426D60  +
***
test byte ptr [ebx+20h] 8 +
jz loc_426C20  +
mov eax [ebx+18h] +
mov [esi+18h] eax +
jmp loc_426C20  +
test al 20h +
jz loc_426C20  +
mov ecx [esp-0BCh+arg_F0] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_426C20  +
mov eax [esp-0BCh+arg_100] +
mov [esi+10h] eax +
jmp loc_426C20  +
test esi 1 +
mov edx esi +
mov ecx 20h +
jnz loc_4272FE  +
test dl 2 +
jnz loc_4272ED  +
mov ebp ecx +
xor eax eax +
and ebp 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax ebp +
jb loc_426E5B  +
add edx eax +
test cl 2 +
jz loc_426E79  +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
and ecx 1 +
jz loc_426E81  +
mov byte ptr [edx] 0 +
mov dword ptr [esi] 0 +
jmp loc_426C20  +
mov eax [ecx+50h] +
add eax [edx+18h] +
sub eax ebp +
mov [esi+14h] eax +
jmp loc_426C20  +
mov ecx [esp-0BCh+arg_178] +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 3 +
jnz loc_426BE3  +
jmp loc_426C20  +
mov eax [esp-0BCh+arg_E4] +
mov ecx [esp-0BCh+arg_E0] +
mov ebp eax +
cmp eax ecx +
jnb loc_426E38  +
mov eax [esp-0BCh+arg_E0] +
jmp loc_426EDB  +
add ebp 20h +
cmp ebp eax +
jnb loc_426E38  +
cmp dword ptr [ebp+0] 1 +
jnz loc_426ED0  +
mov ecx [esi+10h] +
cmp [ebp+10h] ecx +
jnz loc_426ED0  +
jmp loc_426D60  +
mov ecx [ebp+0A0h] +
mov eax [ecx+934h] +
add ecx 48h +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp-0BCh+arg_B8] ecx +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_BC] eax +
call sub_423FA0  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+208h] +
test ecx ecx +
jz loc_426F36  +
mov esi [ecx+18h] +
test esi esi +
jnz loc_4272CA  +
mov [esp-0BCh+arg_BC] eax +
lea eax [ebx+0B8h] +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_423FA0  +
mov ecx [ebp+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [ebx+0C8h] +
mov [ecx+24h] edx +
mov edx [ebx+0CCh] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
call sub_4086D0  +
test eax eax +
jnz loc_424EEE  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_44B210  +
test eax eax +
jz loc_424EEE  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44AE70  +
jmp loc_426906  +
mov eax [esp-0BCh+arg_E0] +
xor ecx ecx +
lea esi [eax+28h] +
xor eax eax +
mov edx [esi+eax*4] +
mov edx [edx+40h] +
cmp ecx edx +
cmovb ecx edx +
add eax 1 +
cmp eax ebx +
jnz loc_426FC6  +
mov esi [esp-0BCh+arg_11C] +
mov eax 1 +
shl eax cl +
cmp eax esi +
cmovb eax esi +
mov ecx eax +
jmp loc_426330  +
xor esi esi +
jmp loc_426392  +
movzx edx byte ptr [ebx+20h] +
test dl 8 +
jz loc_427D8F  +
mov eax [ebx+18h] +
mov [esi+14h] eax +
jmp loc_426D94  +
***
mov [ebp+68h] ecx +
jmp loc_4258C2  +
mov [ebp+64h] edx +
jmp loc_4258B7  +
***
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoproc7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_426653  +
movzx esi byte ptr [ecx+1] +
imul esi [esp-0BCh+arg_108] +
mov [edx+1Ch] esi +
jmp loc_425A30  +
xor eax eax +
xor edx edx +
mov [esp-0BCh+arg_120] 0 +
jmp loc_425AD9  +
***
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [ebp+64h] +
xor edx edx +
mov esi [ebp+78h] +
test eax eax +
jz loc_42708F  +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
cmp edx ecx +
cmovb edx ecx +
test eax eax +
jnz loc_427080  +
lea ebx [edx+1] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] ebx +
mov [esp+0ACh+var_AC] ebp +
call sub_404D50  +
test eax eax +
mov edi eax +
mov [esp+0ACh+var_74] eax +
jz loc_424EEE  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov [eax+8] edi +
mov [eax+28h] ebx +
mov eax [esp+0ACh+var_94] +
test eax eax +
jz loc_427376  +
lea eax [esi+eax*4] +
mov edi esi +
mov [esp+0ACh+var_84] eax +
mov ebx [edi] +
test byte ptr [ebx+0Dh] 1 +
jnz loc_427140  +
add edi 4 +
cmp edi [esp+0ACh+var_84] +
jnz loc_4270DB  +
xor ebx ebx +
xor edi edi +
mov eax ebx +
mov ebx esi +
mov [esp+0ACh+var_8C] 0 +
mov esi eax +
jmp loc_427110  +
add esi 1 +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_427DB6  +
mov edx [ebx+edi*4] +
mov eax ebp +
call loc_41F550  +
test eax eax +
jnz loc_427100  +
mov edx [ebx+edi*4] +
test byte ptr [edx+0Dh] 1 +
jz loc_427132  +
mov eax ebp +
call sub_41F5A0  +
test eax eax +
jnz loc_427103  +
add [esp+0ACh+var_8C] 1 +
jmp loc_427103  +
***
mov eax [ebx+8] +
test eax eax +
jnz loc_4270E3  +
mov edx ebx +
mov eax ebp +
call sub_41F5A0  +
test eax eax +
jnz loc_4270E3  +
mov eax [ebx+10h] +
cmp eax offset off_473270 +
jz loc_4270E3  +
cmp ebp [eax+94h] +
jz loc_427169  +
mov eax [eax+3Ch] +
mov eax [eax+8] +
mov ecx [esp+0ACh+var_74] +
mov [ecx+eax*4] ebx +
jmp loc_4270E3  +
***
mov eax [ebp+0] +
mov [esp-0BCh+arg_E4] eax +
jmp loc_426088  +
mov [esp-0BCh+arg_BC] 12F7h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_402930  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov edx [eax+934h] +
mov ecx [esi+174h] +
jmp loc_425A30  +
mov [esp-0BCh+arg_BC] 1309h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_402930  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov eax [eax+934h] +
mov edx [esi+174h] +
mov eax [eax+1Ch] +
movzx ecx byte ptr [edx+1] +
jmp loc_425A53  +
***
mov edi 2 +
mov esi 1 +
jmp loc_425099  +
***
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_C8] 1 +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] offset a__ehdr_start +
mov eax [eax+1Ch] +
mov [esp-0BCh+arg_B8] eax +
call sub_4193E0  +
test eax eax +
mov ecx eax +
jz loc_42728B  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_42723C  +
cmp al 2 +
ja loc_42728B  +
mov eax [esp-0BCh+arg_E0] +
mov edx [eax+24h] +
test edx edx +
jnz loc_427D2C  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
jmp loc_42726B  +
***
mov ebx [eax+24h] +
test ebx ebx +
jnz loc_427D2C  +
mov eax [eax] +
test eax eax +
jnz loc_427260  +
mov eax [esp-0BCh+arg_E8] +
mov dword ptr [ecx+14h] offset off_473270 +
mov [ecx+18h] eax +
or byte ptr [ecx+33h] 2 +
and byte ptr [ecx+34h] 0FEh +
mov byte ptr [ecx+0Ch] 3 +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ebx [edx] +
test ebx ebx +
jz loc_427DAB  +
mov eax edi +
mov byte ptr [esp-0BCh+arg_D0] al +
jmp loc_426B8C  +
mov esi ebx +
mov [esp-0BCh+arg_F8] ebx +
jmp loc_425C06  +
mov esi [esp-0BCh+arg_114] +
mov esi [esi+934h] +
mov [esp-0BCh+arg_E0] esi +
jmp loc_4268F0  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_423FA0  +
mov ebx [ebp+0A0h] +
jmp loc_426F36  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_426E54  +
mov byte ptr [esi] 0 +
lea edx [esi+1] +
mov cl 1Fh +
jmp loc_426E4B  +
***
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] eax +
call sub_404DD0  +
jmp loc_424EEE  +
***
mov eax offset aUnknown_4 +
jmp loc_426143  +
mov [esp-0BCh+arg_BC] 0 +
mov [esp-0BCh+arg_B8] ebp +
call sub_4240A0  +
test eax eax +
jz loc_424EEE  +
mov esi [ebp+0A0h] +
jmp loc_4259AB  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBNotEnoughRoom +
mov [esp-0BCh+arg_BC] ebp +
call off_4730E4  +
mov [esp-0BCh+arg_B8] 11h +
call sub_4029E0  +
jmp loc_424EEE  +
***
mov [esp+0ACh+var_8C] 0 +
xor ebx ebx +
mov edi [ebp+64h] +
test edi edi +
jz loc_4273AC  +
mov [esp+0ACh+var_84] esi +
mov esi ebx +
mov ebx [esp+0ACh+var_74] +
mov eax [edi+8] +
mov eax [ebx+eax*4] +
test eax eax +
jz loc_4279FC  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_427391  +
mov ebx esi +
mov esi [esp+0ACh+var_84] +
mov eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_AC] ebp +
add eax ebx +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_70] eax +
call sub_404C00  +
test eax eax +
mov [esp+0ACh+var_80] eax +
jz loc_424EEE  +
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_7C] 0 +
test eax eax +
jz loc_427C18  +
xor eax eax +
xor edi edi +
mov [esp+0ACh+var_84] esi +
mov esi eax +
jmp loc_427415  +
mov eax [esp+0ACh+var_8C] +
add eax esi +
add esi 1 +
lea edx [eax+1] +
mov ecx [esp+0ACh+var_80] +
mov [ecx+eax*4] ebx +
mov [ebx+14h] edx +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_42744D  +
mov eax [esp+0ACh+var_84] +
mov ebx [eax+edi*4] +
mov eax ebp +
mov edx ebx +
call loc_41F550  +
test eax eax +
jnz loc_4273F6  +
test byte ptr [ebx+0Dh] 1 +
jz loc_427440  +
mov edx ebx +
mov eax ebp +
call sub_41F5A0  +
test eax eax +
jnz loc_42740C  +
lea esi [esi+0] +
mov eax [esp+0ACh+var_7C] +
lea edx [eax+1] +
mov [esp+0ACh+var_7C] edx +
jmp loc_427402  +
mov [esp+18h] esi +
mov ebx [ebp+64h] +
mov esi [esp+38h] +
test ebx ebx +
jz loc_427477  +
lea esi [esi+0] +
mov edx [ebx+8] +
lea ecx [esi+edx*4] +
mov eax [ecx] +
test eax eax +
jz loc_427A1B  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_427460  +
mov eax [esp+3Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+2Ch] +
mov [esp+4] eax +
call sub_4130B0  +
call sub_44ADF0  +
test eax eax +
mov [esp+54h] eax +
jz loc_424EEE  +
mov eax [ebp+4] +
mov esi [ebp+7Ch] +
mov eax [eax+1B0h] +
mov edi esi +
mov [esp+5Ch] esi +
mov esi [ebp+0A0h] +
add edi 1 +
mov [esp+40h] edi +
mov [esp+3Ch] eax +
mov eax [eax+174h] +
mov dword ptr [esi+4Ch] 2 +
mov [esp+68h] esi +
movzx edx byte ptr [eax+5] +
mov [esi+70h] edx +
imul edx edi +
mov [esi+60h] edx +
mov edx [esp+20h] +
add edx 1 +
mov [esi+68h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [esi+0BCh] 3 +
shl eax cl +
mov [esi+6Ch] eax +
mov eax edi +
shl eax 5 +
lea esi ds:0[edi*4] +
sub eax esi +
mov [esp] eax +
call sub_407460  +
test eax eax +
mov [esp+64h] eax +
jz loc_427D61  +
mov eax [esp+3Ch] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] eax +
call sub_404C00  +
test eax eax +
mov [esp+60h] eax +
jz loc_427BFB  +
mov eax [esp+68h] +
mov edi [esp+60h] +
mov [eax+78h] edi +
mov eax [ebp+0A0h] +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_427578  +
mov edi [ebx] +
test edi edi +
jnz loc_427C25  +
mov eax [esp+64h] +
mov dword ptr [esp+4Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
mov eax [esp+3Ch] +
mov dword ptr [esp+50h] 0 +
mov eax [eax+44h] +
test eax eax +
jz loc_4275E5  +
mov [esp] ebp +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+50h] eax +
mov ecx [esp+5Ch] +
mov eax [ebp+78h] +
test ecx ecx +
jle loc_427B35  +
mov edi eax +
mov eax [esp+64h] +
mov dword ptr [esp+28h] 1 +
mov [esp+0C0h] ebp +
lea esi [eax+1Ch] +
mov eax [esp+48h] +
and eax 42h +
mov [esp+58h] eax +
***
mov eax [edi] +
mov edx [esp-0BCh+arg_108] +
mov ecx [eax+8] +
test edx edx +
mov ebp [eax+0Ch] +
mov [esp-0BCh+arg_D0] ecx +
jnz loc_42763F  +
mov edx ebp +
and edx 102h +
cmp edx 100h +
jz loc_42793C  +
mov eax [eax+4] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
mov [esp-0BCh+arg_E8] eax +
jz loc_427BFB  +
mov eax [edi] +
mov edx [eax] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_427844  +
xor ebx ebx +
mov ecx ebp +
mov eax [eax+10h] +
and ecx 100h +
mov [esp-0BCh+arg_F0] ecx +
jnz loc_427860  +
test byte ptr [eax+15h] 10h +
jz loc_427860  +
test ebx ebx +
jz loc_4276A8  +
mov ecx [ebx+18h] +
test ecx ecx +
mov [esp-0BCh+arg_D8] ecx +
jnz loc_4276BB  +
cmp [esp-0BCh+arg_D0] 0Fh +
mov [esp-0BCh+arg_D8] 10h +
jbe loc_427AF8  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_424C30  +
mov ecx eax +
mov eax [edi] +
mov eax [eax+10h] +
test ebp 40000h +
mov edx 6 +
jnz loc_427715  +
test ebp 400000h +
mov dl 0Ah +
jnz loc_427715  +
test ebp 8 +
mov dl 2 +
jnz loc_427715  +
test ebp 10000h +
mov dl 1 +
jnz loc_427715  +
test ebp 80000h +
mov dl 8 +
jnz loc_427715  +
mov edx ebp +
shl edx 0Bh +
sar edx 1Fh +
and edx 9 +
test byte ptr [eax+15h] 4 +
mov eax 6 +
cmovnz edx eax +
test ebx ebx +
jz loc_427746  +
mov eax [esp-0BCh+arg_F4] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_427746  +
mov [esp-0BCh+arg_BC] edx +
lea edx [ebx+18h] +
mov [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_B8] edx +
call eax  +
mov ecx [esp-0BCh+arg_100] +
mov edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_4278D2  +
and ebp 2 +
cmp ebp 1 +
sbb eax eax +
and eax 0FFFFFFF0h +
add eax 13h +
test ebx ebx +
jz loc_4279F3  +
movzx edx byte ptr [ebx+25h] +
movzx ebx byte ptr [ebx+26h] +
mov ebp [esp-0BCh+arg_D8] +
mov [esi+0Ch] al +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_E0] 1 +
cmp [esp-0BCh+arg_104] 1 +
mov [esi] ebp +
mov ebp [esp-0BCh+arg_D0] +
mov [esi+14h] eax +
mov eax [esp-0BCh+arg_E4] +
mov [esi+0Dh] dl +
sbb [esp-0BCh+arg_E4] 0FFFFFFFFh +
add edi 4 +
add esi 1Ch +
mov [esi-18h] ebp +
mov ebp [esp-0BCh+arg_E8] +
mov [esi-4] eax +
mov eax [esp-0BCh+arg_E0] +
mov [esi-0Eh] bl +
mov [esi-0Ch] ecx +
mov [esi-14h] ebp +
cmp eax [esp-0BCh+arg_F8] +
jnz loc_427617  +
mov eax [esp-0BCh+arg_10C] +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B2E0  +
mov ebx [esp-0BCh+arg_11C] +
xor esi esi +
mov edi [esp-0BCh+arg_104] +
jmp loc_427827  +
mov dword ptr [ebx+8] 0 +
mov eax [esp-0BCh+arg_F4] +
add esi 1 +
mov ecx [ebx+18h] +
mov eax [eax+174h] +
lea ecx [edi+ecx*4] +
mov edx [eax+24h] +
mov [esp-0BCh+arg_C4] ecx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
add eax [esp-0BCh+arg_118] +
mov [esp-0BCh+arg_BC] ebx +
add ebx 1Ch +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_C0] eax +
call edx  +
cmp [esp-0BCh+arg_114] esi +
jl loc_427B4C  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_4277E0  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B170  +
mov [ebx+8] eax +
jmp loc_4277E7  +
mov ebx [edx+0A0h] +
test ebx ebx +
jz loc_427678  +
mov ebx eax +
jmp loc_42767A  +
***
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov edx [esp-0BCh+arg_178] +
mov edx [edx+0A0h] +
mov edx [edx+208h] +
test edx edx +
jz loc_4276D5  +
mov ecx [edx+38h] +
jmp loc_4276D5  +
***
xor ebx ebx +
xor edx edx +
jmp loc_427770  +
***
mov edx [edi+98h] +
mov eax ebp +
call loc_41F550  +
test eax eax +
jnz loc_427AD7  +
add [esp+0ACh+var_8C] 1 +
jmp loc_42739F  +
***
mov edi [ebx+98h] +
mov eax ebp +
mov [ecx] edi +
mov edx edi +
call loc_41F550  +
test eax eax +
jnz loc_427ADF  +
mov edx [esp+30h] +
mov eax edx +
add eax 1 +
mov [esp+30h] eax +
mov ecx [esp+2Ch] +
mov [ecx+edx*4] edi +
mov [edi+14h] eax +
jmp loc_427470  +
***
mov [esp-0BCh+arg_D0] 0 +
jmp loc_4278A0  +
mov ecx [esp-0BCh+arg_D0] +
mov edx eax +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_427876  +
mov eax [edx] +
mov [esp-0BCh+arg_100] edx +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_405CC0  +
mov edx [esp-0BCh+arg_100] +
test eax eax +
jz loc_427BC9  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
mov ecx eax +
jnz loc_4278C8  +
mov [esp-0BCh+arg_BC] 1D04h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
mov [esp-0BCh+arg_100] eax +
call sub_402930  +
mov eax [edi] +
mov ecx [esp-0BCh+arg_100] +
mov eax [eax+10h] +
jmp loc_4276D5  +
***
add esi 1 +
jmp loc_42739F  +
***
mov ecx [esp+18h] +
mov edx [esp+20h] +
add edx ecx +
add ecx 1 +
lea eax [edx+1] +
mov [esp+18h] ecx +
jmp loc_427A41  +
***
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_B8] eax +
call near ptr dword_407E70  +
mov edx 1 +
mov ecx eax +
mov eax [edi] +
shl edx cl +
mov [esp-0BCh+arg_D8] edx +
mov eax [eax+10h] +
jmp loc_4276BB  +
and ebp 80h +
cmp ebp 1 +
sbb eax eax +
and edx 0Fh +
and eax 0FFFFFFF0h +
lea eax [eax+edx+20h] +
jmp loc_427760  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_44B2E0  +
cmp dword ptr [esp+5Ch] 0 +
jz loc_4277D4  +
***
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B160  +
mov esi [esp-0BCh+arg_120] +
mov dword ptr [esp+74h] 0 +
mov [esp-0BCh+arg_118] 1 +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov [esi+0D0h] eax +
mov dword ptr [esi+0C4h] 0 +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
jmp loc_426B29  +
mov eax [edi] +
mov ecx [edx] +
mov edx [eax+4] +
mov eax offset aLocalSym +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_B8] offset aUnableToFindEq +
test edx edx +
cmovnz eax edx +
mov [esp-0BCh+arg_BC] eax +
call off_4730E4  +
mov [esp-0BCh+arg_B8] 5 +
call sub_4029E0  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44AE70  +
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
jmp loc_424EEE  +
***
mov [esp+0ACh+var_94] 0 +
jmp loc_427451  +
***
mov eax [esp+40h] +
mov dword ptr [esp+8] 4 +
mov [esp] ebp +
mov [esp+4] eax +
call sub_404D50  +
test eax eax +
mov [esp+4Ch] eax +
jz loc_427BFB  +
mov [ebx+30h] eax +
mov eax [esp+64h] +
mov dword ptr [ebx+4] 12h +
mov [ebx+18h] esi +
mov dword ptr [ebx+24h] 4 +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [esp+2Ch] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
jmp loc_4275C1  +
***
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningNonLoa +
mov [esp-0BCh+arg_BC] ebp +
call off_4730E4  +
jmp loc_424EEE  +
mov ecx [eax+30h] +
mov edx [eax+44h] +
shl ecx 5 +
lea ebx [edx+ecx] +
cmp edx ebx +
jnb loc_427CFE  +
mov esi 0FFFFFFFFh +
jmp loc_427CE7  +
***
add edx 20h +
cmp ebx edx +
jbe loc_427CF6  +
cmp dword ptr [edx] 1 +
jnz loc_427CE0  +
mov ecx [edx+0Ch] +
cmp esi ecx +
cmova esi ecx +
jmp loc_427CE0  +
test esi esi +
jz loc_426C93  +
mov eax [esp-0BCh+arg_114] +
mov word ptr [eax+24h] 2 +
mov eax [ebp+0A0h] +
jmp loc_426C93  +
***
mov [esp+0ACh+var_A8] 0D8Dh +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
call sub_402930  +
jmp loc_425285  +
***
mov eax [eax+28h] +
test eax eax +
jz loc_427271  +
mov edx [esp-0BCh+arg_E8] +
sub edx [eax+1Ch] +
mov [ecx+14h] eax +
mov [ecx+18h] edx +
jmp loc_42727F  +
cmp [esp-0BCh+arg_17C] 0 +
mov eax [ebp+0A0h] +
setnz byte ptr [esp-0BCh+arg_D0]  +
jmp loc_426C36  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_44AE70  +
jmp loc_424EEE  +
***
xor eax eax +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_42658A  +
nop   +
jmp loc_426587  +
mov ecx 0FFFFFFF1h +
jmp loc_4276D5  +
mov dword ptr [esp+8] offset aAssign_file_po +
mov dword ptr [esp+4] 155Eh +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_402960  +
mov ecx edi +
mov [esp+18h] cl +
jmp loc_426C36  +
***
mov eax esi +
mov esi ebx +
mov ebx eax +
jmp loc_427380  +
***
jmp loc_427DD0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov eax [eax+1B0h] +
mov [esp+20h] eax +
jnz loc_427E02  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_424D00  +
test eax eax +
jz loc_427E40  +
mov eax [ebp+0A0h] +
lea edx [esp+3Ch] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+40h] +
mov [esp+2Ch] eax +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov [esp] ebp +
mov [esp+4] eax +
call sub_4062E0  +
mov ecx [esp+3Ch] +
test ecx ecx +
jz loc_427E50  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ecx [edx+20h] +
mov ebx [edx+24h] +
mov [esp+18h] ecx +
mov ecx [eax+40h] +
mov eax [eax+214h] +
mov [esp+1Ch] ebx +
lea edi [ecx+4] +
lea eax [ecx+eax*4] +
cmp eax edi +
jbe loc_427FE1  +
mov [esp+60h] ebp +
mov ebp eax +
jmp loc_427E9B  +
add edi 4 +
cmp ebp edi +
jbe loc_427FD1  +
mov ebx [edi] +
mov eax [ebx+10h] +
and eax [ebx+14h] +
cmp eax 0FFFFFFFFh +
jnz loc_427E90  +
mov eax [ebx+4] +
mov esi [ebx+2Ch] +
cmp eax 4 +
jz loc_427F9E  +
cmp eax 9 +
jz loc_427F9E  +
test esi esi +
jz loc_427E90  +
test byte ptr [esi+17h] 8 +
jz loc_427E90  +
mov eax [esi] +
mov [esp+24h] eax +
mov eax [ebx+30h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_40A920  +
test eax eax +
jz loc_427E40  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jz loc_428210  +
cmp dword ptr [ebx] 0FFFFFFFFh +
jnz loc_428238  +
mov eax [esp+60h] +
mov ecx [esp+24h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44AEA0  +
mov [ebx] eax +
mov eax [esi+8Ch] +
mov edx [eax+3Ch] +
mov [esp+28h] eax +
test edx edx +
jz loc_427F61  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 0 +
call sub_41FCF0  +
test eax eax +
jz loc_427E40  +
mov eax [esp+28h] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_427F88  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 1 +
call sub_41FCF0  +
test eax eax +
jz loc_427E40  +
mov eax [esi+24h] +
mov [ebx+18h] eax +
mov eax [esi+6Ch] +
mov [ebx+30h] eax +
mov eax [ebx+2Ch] +
mov dword ptr [eax+6Ch] 0 +
mov eax [esp+18h] +
add edi 4 +
mov edx [esp+1Ch] +
mov dword ptr [esp+0Ch] 1 +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_423FA0  +
cmp ebp edi +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
ja loc_427E9B  +
mov ebp [esp+60h] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov eax [edx+4] +
mov esi 1 +
mov [esp] eax +
call sub_44B2E0  +
mov ebx [ebp+0A0h] +
mov eax [ebx+934h] +
sub ebx 0FFFFFF80h +
mov eax [eax+4] +
mov [esp] eax +
call sub_44B160  +
mov edx [esp+1Ch] +
mov [ebx+18h] eax +
mov eax [esp+18h] +
mov [esp] ebx +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_423FA0  +
mov ecx [ebp+4] +
mov edi [ebp+0A0h] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
shl esi cl +
mov ebx esi +
sar ebx 1Fh +
add eax esi +
adc edx ebx +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
neg esi  +
mov ebx esi +
and esi eax +
sar ebx 1Fh +
mov eax edx +
and eax ebx +
xor edx edx +
mov [edi+18h] esi +
mov ebx [ebp+0A0h] +
mov [esp+18h] esi +
mov [esp+1Ch] eax +
mov eax [edi+34h] +
imul eax [edi+38h] +
mov esi [ebx+214h] +
mov ecx [ebx+934h] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
cmp esi 1 +
mov [ecx+20h] eax +
mov [ecx+24h] edx +
jbe loc_428154  +
mov edi 1 +
mov ebx [esp+2Ch] +
mov [esp+18h] esi +
jmp loc_4280BD  +
mov eax [ebp+0A0h] +
mov ecx [eax+934h] +
mov esi [ebx+edi*4] +
mov eax [ecx+4] +
mov ecx [esi] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_44B170  +
mov [esi] eax +
mov eax [esp+20h] +
mov eax [eax+48h] +
test eax eax +
jz loc_4280EA  +
mov ecx [ebx+edi*4] +
mov [esp] ebp +
mov [esp+4] ecx +
call eax  +
mov eax [ebx+edi*4] +
mov edx [eax+30h] +
test edx edx +
jz loc_42813B  +
mov esi [eax+18h] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4086D0  +
test eax eax +
jnz loc_427E40  +
mov eax [ebx+edi*4] +
mov eax [eax+30h] +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp] eax +
call sub_408570  +
cmp eax esi +
jnz loc_427E40  +
add edi 1 +
cmp edi [esp+18h] +
jnz loc_4280B1  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+934h] +
mov eax [ecx+4] +
test eax eax +
jz loc_4281AA  +
mov eax [ebx+90h] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_4086D0  +
test eax eax +
jnz loc_427E40  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp] ebp +
mov [esp+4] eax +
call sub_44B210  +
test eax eax +
jz loc_427E40  +
mov eax [esp+20h] +
mov eax [eax+0A4h] +
test eax eax +
jz loc_4281D0  +
mov edx [ebp+0A0h] +
mov edx [edx+934h] +
mov edx [edx+38h] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+14h] +
mov [esp] ebp +
call eax  +
test eax eax +
jz loc_427E40  +
mov eax [ebx+934h] +
mov edx [eax+10h] +
mov eax 1 +
test edx edx +
jz loc_427E42  +
mov [esp] ebp +
call edx  +
jmp loc_427E42  +
***
mov eax [esp+60h] +
test byte ptr [eax+2Ah] 40h +
jnz loc_427EFE  +
mov edx [esp+24h] +
call sub_41F350  +
test eax eax +
mov [esp+24h] eax +
jnz loc_427EFE  +
jmp loc_427E40  +
***
mov dword ptr [esp+8] offset a_bfd_elf_assig +
mov dword ptr [esp+4] 16A7h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_402960  +
lea esi [esi+0] +
lea edi [edi+0] +
jmp loc_427DD0  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov edx [eax] +
mov eax [edx+14h] +
mov ecx [edx+0Ch] +
test eax eax +
jnz loc_428307  +
and ch 1 +
jz loc_4282B2  +
mov eax [edx+10h] +
test eax eax +
jz loc_4282B2  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_4282E3  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_4282B2  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_4282E3  +
mov eax [edx+4] +
mov [esp+1Ch+var_1C] offset aBSymbolSRequir +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call off_4730E4  +
mov [esp+1Ch+var_1C] 7 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
mov ecx [ecx+0A0h] +
mov eax [eax+8] +
mov ecx [ecx+934h] +
cmp eax [ecx+28h] +
jge loc_4282B2  +
mov ecx [ecx+8] +
mov eax [ecx+eax*4] +
test eax eax +
jz loc_4282B2  +
mov eax [eax+14h] +
mov [edx+14h] eax +
test eax eax +
jz loc_4282B2  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_10] +
mov ebx [esp+14h+arg_0] +
test eax eax +
jz loc_4283D0  +
movzx eax byte ptr [eax] +
xor edx edx +
and eax 3 +
cmp al 2 +
setnz dl  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_428346  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+14h+arg_8] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_42833B  +
mov eax [esp+14h+arg_C] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_428495  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_4283D7  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
test edx edx +
mov [eax+8] ecx +
jz loc_42840A  +
mov edx [esi+8] +
and edx 80h +
jz loc_4283A5  +
mov edx [esi+64h] +
or dword ptr [eax+8] 80h +
mov [eax+64h] edx +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_C] +
movzx edx byte ptr [eax+19h] +
mov eax [esp+14h+arg_C] +
and edx 4 +
movzx eax byte ptr [eax+19h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+19h] al +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
jmp loc_428332  +
mov ecx [esp+14h+arg_C] +
mov esi [esp+14h+arg_4] +
mov ecx [ecx+14h] +
mov esi [esi+14h] +
cmp ecx esi +
jz loc_428480  +
test edx edx +
jnz loc_428455  +
mov esi [esp+14h+arg_4] +
mov esi [esi+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
mov [eax+8] ecx +
mov edx [esi+78h] +
test edx edx +
jz loc_428417  +
test byte ptr [edx+16h] 10h +
jnz loc_428450  +
mov edx [esi+8] +
test dh 2 +
jz loc_428428  +
or ch 2 +
mov [eax+8] ecx +
mov edx [esi+8] +
mov ecx [esi+7Ch] +
mov [eax+7Ch] ecx +
mov ecx [esi+74h] +
mov [eax+74h] ecx +
test byte ptr [ebx+2Ah] 10h +
jnz loc_428390  +
and edx 800h +
or [eax+8] edx +
jmp loc_42838D  +
mov edx [esi+8] +
jmp loc_428434  +
xor ecx esi +
and ecx 0FFF1FFFBh +
jz loc_428480  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov edx [esi+8] +
and edx 0FFF00000h +
or [eax+8] edx +
mov edx [esi+8] +
jmp loc_428390  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+4] +
mov [eax+4] ecx +
jmp loc_428376  +
mov [esp+14h+var_10] 1B41h +
mov [esp+14h+var_14] offset a____Binutil_10 +
mov [esp+14h+var_8] edx +
call sub_402930  +
mov eax [esp+14h+arg_C] +
mov edx [esp+14h+var_8] +
mov eax [eax+8Ch] +
jmp loc_428365  +
***
push ebx  +
mov eax 1 +
sub esp 28h +
mov edx [esp+30h] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_4284E0  +
add esp 28h +
pop ebx  +
retn   +
***
mov ebx [esp+38h] +
mov ecx [ebx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_4284D6  +
mov eax [esp+34h] +
mov ebx [esp+3Ch] +
mov eax [eax+8Ch] +
mov ebx [ebx+8Ch] +
mov ecx [eax+28h] +
mov [ebx+28h] ecx +
mov ecx [eax+4] +
cmp ecx 2 +
jz loc_428514  +
cmp ecx 0Bh +
jnz loc_428547  +
mov eax [eax+20h] +
mov [ebx+20h] eax +
mov eax [esp+3Ch] +
mov dword ptr [esp+10h] 0 +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
call sub_428310  +
add esp 28h +
pop ebx  +
retn   +
***
sub ecx 6FFFFFFDh +
cmp ecx 1 +
ja loc_42851A  +
jmp loc_428514  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ebx [esp+arg_4] +
mov edx [eax+64h] +
test edx edx +
jnz loc_42857B  +
jmp loc_4285E8  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_4285E8  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 11h +
jnz loc_428574  +
mov esi [eax+7Ch] +
test esi esi +
jz loc_428574  +
mov eax esi +
xor edi edi +
jmp loc_4285AA  +
cmp [edx+3Ch] ebx +
jz loc_4285F1  +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax esi +
jz loc_4285C7  +
test eax eax +
jz loc_4285C7  +
mov ecx [eax+3Ch] +
cmp ecx ebx +
jnz loc_428594  +
mov eax [eax+8Ch] +
lea ecx [edi+4] +
cmp [edx+3Ch] ebx +
mov eax [eax+7Ch] +
cmovnz edi ecx +
cmp eax esi +
jnz loc_4285A6  +
test edi edi +
jz loc_428574  +
test ebx ebx +
jz loc_428607  +
mov eax [edx+28h] +
test eax eax +
jnz loc_4285DC  +
mov eax [edx+24h] +
mov [edx+28h] eax +
sub eax edi +
mov [edx+24h] eax +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_42857B  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
mov ecx [ecx+8Ch] +
and dword ptr [ecx+8] 0FFFFFDFFh +
mov dword ptr [ecx+74h] 0 +
jmp loc_428599  +
mov eax [edx+3Ch] +
sub [eax+24h] edi +
jmp loc_428574  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax 1 +
cmp dword ptr [edx+4] 5 +
jz loc_428650  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+0B4h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
mov ecx edi +
jnz loc_42863F  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jz loc_428696  +
mov eax [esp+0B0h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_428560  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0B0h] +
mov eax [eax+0A0h] +
mov ebp [eax+44h] +
mov [esp+48h] eax +
test ebp ebp +
jz loc_428674  +
cmp edx edi +
jz loc_429548  +
mov eax [edx+1B0h] +
mov dword ptr [esp+8Ch] 0 +
mov [esp+68h] eax +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+58h] eax +
mov eax [ecx+1B0h] +
mov eax [eax+10h] +
mov [esp+3Ch] eax +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+34h] eax +
jz loc_428700  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4286F5  +
mov eax [esp+48h] +
mov ebp [eax+44h] +
mov eax [esp+58h] +
test eax eax +
jz loc_429942  +
mov eax [ebp+10h] +
test eax eax +
jnz loc_42949A  +
mov edx ebp +
xor eax eax +
mov ecx [esp+58h] +
jmp loc_428733  +
mov edi [edx+10h] +
test edi edi +
jnz loc_42949A  +
add eax 1 +
add edx 20h +
cmp eax ecx +
jnz loc_428728  +
mov dword ptr [esp+64h] 0 +
xor esi esi +
mov edi ebp +
mov [esp+30h] ebp +
mov ebp esi +
jmp loc_428773  +
cmp eax 1 +
jz loc_4287D4  +
cmp eax 6474E552h +
jnz loc_428763  +
mov dword ptr [edi] 0 +
add ebp 1 +
add edi 20h +
cmp [esp+58h] ebp +
jbe loc_428889  +
mov eax [edi] +
cmp eax 3 +
jnz loc_428751  +
mov eax [esp+34h] +
test eax eax +
jz loc_428763  +
mov edx [edi+0Ch] +
jmp loc_42878E  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_428763  +
test edx edx +
jnz loc_428787  +
mov esi [edi+10h] +
test esi esi +
jnz loc_428787  +
mov ebx [edi+18h] +
test ebx ebx +
jnz loc_428787  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_428787  +
test byte ptr [eax+15h] 1 +
jz loc_428787  +
mov esi [eax+24h] +
test esi esi +
mov [esp+10h] esi +
jz loc_428787  +
mov esi [eax+50h] +
mov ebx [edi+8] +
cmp esi ebx +
jb loc_428787  +
add esi [esp+10h] +
add ecx ebx +
cmp esi ecx +
ja loc_428787  +
mov eax [eax+1Ch] +
mov [edi+0Ch] eax +
jmp loc_428763  +
***
test ebp ebp +
jz loc_428763  +
mov ebx [esp+30h] +
xor edx edx +
jmp loc_4287EE  +
add edx 1 +
add ebx 20h +
cmp edx ebp +
jz loc_428763  +
cmp dword ptr [ebx] 1 +
jnz loc_4287E0  +
mov eax [edi+0Ch] +
mov esi [ebx+18h] +
mov ecx [ebx+14h] +
mov [esp+10h] eax +
mov eax [ebx+0Ch] +
cmp esi ecx +
cmovnb ecx esi +
mov [esp+14h] ecx +
add ecx eax +
cmp [esp+10h] ecx +
mov [esp+18h] ecx +
jnb loc_4287E0  +
mov ecx [edi+18h] +
cmp ecx [edi+14h] +
mov [esp+28h] ecx +
cmovb ecx [edi+14h] +
mov [esp+1Ch] ecx +
add ecx [esp+10h] +
cmp eax ecx +
mov [esp+20h] ecx +
jnb loc_4287E0  +
mov ecx [edi+10h] +
mov [esp+24h] ecx +
mov ecx [ebx+10h] +
mov [esp+2Ch] ecx +
add ecx [esp+14h] +
cmp [esp+24h] ecx +
jnb loc_4287E0  +
mov ecx [esp+1Ch] +
add ecx [esp+24h] +
cmp [esp+2Ch] ecx +
jnb loc_4287E0  +
cmp [esp+10h] eax +
ja loc_429960  +
mov eax [esp+18h] +
sub eax [esp+20h] +
test eax eax +
jle loc_42887E  +
mov ecx [esp+28h] +
add [edi+14h] eax +
add ecx eax +
mov [edi+18h] ecx +
mov dword ptr [ebx] 0 +
jmp loc_4287E0  +
***
lea eax [esp+8Ch] +
mov ebp [esp+30h] +
mov [esp+4Ch] eax +
movzx eax byte ptr [esp+64h] +
mov dword ptr [esp+74h] 0 +
mov dword ptr [esp+6Ch] 0 +
mov dword ptr [esp+50h] 0 +
add eax eax +
mov dword ptr [esp+60h] 0 +
mov [esp+5Ch] al +
mov eax [ebp+0] +
test eax eax +
mov [esp+10h] eax +
jz loc_428B20  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
jz loc_429409  +
mov edx [ebp+10h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_428997  +
mov ebx [eax+20h] +
cmp ebx edx +
jb loc_4289E0  +
mov ecx [eax+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_428B93  +
mov esi [eax+24h] +
add ebx esi +
mov esi [ebp+14h] +
cmp [ebp+18h] esi +
cmovnb esi [ebp+18h] +
add esi edx +
cmp ebx esi +
ja loc_4289E0  +
test cl 1 +
jz loc_4289E0  +
mov esi [esp+10h] +
cmp esi 6474E551h +
jz loc_428990  +
cmp esi 7 +
jz loc_428BB9  +
cmp dword ptr [esp+10h] 1 +
jz loc_428965  +
test ch 4 +
jnz loc_428990  +
cmp dword ptr [esp+10h] 2 +
jz loc_428BC7  +
test byte ptr [eax+18h] 40h +
jnz loc_428990  +
mov edi [esp+18h] +
test edi edi +
cmovz edi eax +
cmp dword ptr [eax+3Ch] 1 +
sbb dword ptr [esp+1Ch] 0FFFFFFFFh +
mov [esp+18h] edi +
lea esi [esi+0] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_428A0F  +
test edx edx +
jnz loc_428900  +
mov esi [eax+1Ch] +
mov ebx [ebp+0Ch] +
cmp esi ebx +
jb loc_4289E0  +
mov ecx [eax+14h] +
mov edi ecx +
and edi 500h +
cmp edi 400h +
jz loc_428BA6  +
mov edi [eax+24h] +
add esi edi +
mov edi [ebp+14h] +
cmp [ebp+18h] edi +
cmovnb edi [ebp+18h] +
add edi ebx +
cmp esi edi +
jbe loc_42893B  +
lea esi [esi+0] +
cmp dword ptr [esp+10h] 4 +
jnz loc_428990  +
mov ecx [eax+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_428990  +
mov ebx [eax+50h] +
mov ecx [ebp+8] +
cmp ebx ecx +
jb loc_428990  +
add ebx [eax+24h] +
add ecx [ebp+14h] +
cmp ebx ecx +
ja loc_428990  +
mov ecx [eax+14h] +
jmp loc_428960  +
***
mov eax [esp+1Ch] +
lea eax ds:28h[eax*4] +
mov [esp+54h] eax +
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_404C60  +
test eax eax +
mov [esp+10h] eax +
jz loc_429432  +
mov edi [esp+10h] +
mov eax [ebp+4] +
mov edx [ebp+0] +
or byte ptr [edi+20h] 1 +
mov [edi+8] eax +
mov eax [esp+18h] +
mov dword ptr [edi] 0 +
mov [edi+4] edx +
test eax eax +
jz loc_428A6A  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_428A82  +
mov eax [ebp+10h] +
mov esi [esp+10h] +
mov [esi+0Ch] eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFFDh +
or al [esp+5Ch] +
mov [esi+20h] al +
mov ecx [ebp+8] +
xor eax eax +
test ecx ecx +
jnz loc_428A98  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [ebp+14h] eax +
setnb al  +
mov edi [esp+10h] +
shl eax 4 +
mov ebx eax +
movzx eax byte ptr [edi+20h] +
and eax 0FFFFFFCFh +
or eax ebx +
mov [edi+20h] al +
mov eax [esp+60h] +
test eax eax +
jz loc_428ABE  +
cmp edx 1 +
jz loc_429021  +
mov eax [esp+48h] +
mov ebx [eax+14h] +
xor eax eax +
cmp ecx ebx +
ja loc_428AE0  +
mov esi [esp+48h] +
add ecx [ebp+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax ebx +
cmp ecx eax +
setnb al  +
mov esi [esp+10h] +
shl eax 5 +
mov ecx eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFDFh +
or eax ecx +
cmp edx 1 +
mov [esi+20h] al +
jz loc_429016  +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_428C0A  +
mov eax [esp+10h] +
mov ebx [esp+4Ch] +
mov dword ptr [eax+24h] 0 +
mov [esp+4Ch] eax +
mov [ebx] eax +
nop   +
add dword ptr [esp+50h] 1 +
add ebp 20h +
mov eax [esp+58h] +
cmp [esp+50h] eax +
jnz loc_4288C3  +
mov edi [esp+0B4h] +
mov eax [esp+8Ch] +
mov edx [edi+0A0h] +
mov edx [edx+934h] +
mov [edx] eax +
mov edx [esp+6Ch] +
test edx edx +
jz loc_428674  +
test eax eax +
jz loc_428674  +
xor edx edx +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_428B68  +
mov eax [esp+74h] +
cmp eax edx +
jnb loc_428674  +
sub edx eax +
mov eax [esp+48h] +
imul edx [eax+2Ch] +
mov eax [esp+6Ch] +
sub [eax+0Ch] edx +
jmp loc_428674  +
***
xor si si +
cmp dword ptr [esp+10h] 7 +
jnz loc_428925  +
jmp loc_428922  +
***
xor di di +
cmp dword ptr [esp+10h] 7 +
jnz loc_4289C3  +
jmp loc_4289C0  +
***
and ch 4 +
jnz loc_428970  +
jmp loc_428990  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_428BE0  +
mov ecx [eax+24h] +
test ecx ecx +
jnz loc_428970  +
test edx edx +
jz loc_4293F8  +
cmp [eax+20h] edx +
jnz loc_428970  +
mov esi [eax] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_428990  +
jmp loc_428970  +
***
mov eax [esp+1Ch] +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_4074A0  +
test eax eax +
mov [esp+14h] eax +
jz loc_429432  +
mov eax [esp+0B0h] +
mov edx [eax+64h] +
test edx edx +
jz loc_428C56  +
cmp [esp+18h] edx +
mov eax [esp+18h] +
jnz loc_428C4F  +
jmp loc_429049  +
cmp eax edx +
jz loc_429049  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_428C47  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+4] 192Dh +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_402930  +
mov eax [esp+24h] +
cmp [esp+1Ch] eax +
jz loc_429439  +
mov ebx [esp+30h] +
mov eax [esp+10h] +
mov edx [esp+28h] +
test ebx ebx +
cmovnz edx [esp+34h] +
mov [eax+0Ch] edx +
movzx eax byte ptr [eax+20h] +
test al 10h +
jz loc_428CCE  +
mov edi [esp+48h] +
mov ecx [edi+28h] +
cmp edx ecx +
jb loc_429515  +
mov edi [esp+10h] +
sub edx ecx +
mov [edi+0Ch] edx +
test al 20h +
jz loc_428CFF  +
mov eax [esp+10h] +
mov edi [esp+48h] +
mov ecx [eax+0Ch] +
mov edx [edi+2Ch] +
mov eax [edi+30h] +
imul edx eax +
cmp ecx edx +
jb loc_429524  +
mov edi [esp+10h] +
sub ecx edx +
mov [esp+74h] eax +
mov [edi+0Ch] ecx +
mov [esp+6Ch] edi +
mov dword ptr [esp+38h] 0 +
mov eax [esp+10h] +
xor ecx ecx +
mov dword ptr [esp+24h] 0 +
mov ebx ecx +
mov dword ptr [esp+18h] 1 +
mov dword ptr [eax+24h] 0 +
mov eax [esp+3Ch] +
lea esi [eax-1] +
neg eax  +
mov [esp+40h] esi +
mov [esp+34h] eax +
jmp loc_428E04  +
mov ecx [esi+14h] +
and ecx 500h +
cmp ecx 400h +
jz loc_428F00  +
mov ecx [esi+24h] +
add ecx eax +
mov [esp+20h] ecx +
mov ecx [ebp+14h] +
cmp [ebp+18h] ecx +
cmovnb ecx [ebp+18h] +
add ecx edx +
cmp [esp+20h] ecx +
ja loc_428E2C  +
mov ecx [esp+10h] +
mov ecx [ecx+24h] +
test ecx ecx +
mov [esp+20h] ecx +
mov ecx [esp+10h] +
jnz loc_428F15  +
movzx ecx byte ptr [ecx+20h] +
mov dword ptr [esp+28h] 0 +
mov [esp+2Ch] cl +
and ecx 10h +
jz loc_428DAB  +
mov ecx [esp+48h] +
mov ecx [ecx+28h] +
mov [esp+28h] ecx +
add edx [esp+28h] +
mov [esp+28h] edx +
xor edx edx +
test byte ptr [esp+2Ch] 20h +
jz loc_428DC7  +
mov ecx [esp+48h] +
mov edx [ecx+2Ch] +
imul edx [ecx+30h] +
add edx [esp+28h] +
cmp eax edx +
jnz loc_429926  +
mov ecx [esp+20h] +
mov edx [esp+10h] +
add dword ptr [esp+38h] 1 +
mov eax ecx +
add eax 1 +
mov [edx+24h] eax +
mov eax [esp+14h] +
mov [edx+ecx*4+28h] esi +
mov dword ptr [eax+ebx*4] 0 +
or byte ptr [edi+18h] 40h +
add ebx 1 +
cmp [esp+1Ch] ebx +
jbe loc_428E4F  +
mov eax [esp+14h] +
mov edi [eax+ebx*4] +
test edi edi +
jz loc_428DFB  +
mov esi [edi+3Ch] +
test esi esi +
jz loc_428F80  +
mov edx [esp+10h] +
mov eax [esi+20h] +
mov edx [edx+0Ch] +
cmp eax edx +
jnb loc_428D40  +
cmp dword ptr [ebp+0] 4 +
jz loc_428E90  +
mov esi [esp+18h] +
test esi esi +
jz loc_428DFB  +
add ebx 1 +
cmp [esp+1Ch] ebx +
mov [esp+24h] eax +
mov dword ptr [esp+18h] 0 +
ja loc_428E04  +
mov eax [esp+10h] +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_428FA0  +
mov eax [esp+10h] +
mov edi [esp+4Ch] +
mov [esp+4Ch] eax +
mov [edi] eax +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
ja loc_428FC0  +
mov eax [esp+14h] +
mov [esp] eax +
call free  +
jmp loc_428B20  +
***
mov ecx [edi+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_428E32  +
mov ecx [edi+50h] +
mov [esp+20h] ecx +
mov ecx [ebp+8] +
cmp [esp+20h] ecx +
mov [esp+28h] ecx +
jb loc_428E32  +
mov ecx [esp+20h] +
add ecx [edi+24h] +
mov [esp+20h] ecx +
mov ecx [esp+28h] +
add ecx [ebp+14h] +
cmp [esp+20h] ecx +
ja loc_428E32  +
mov ecx [esp+0B0h] +
movzx ecx byte ptr [ecx+28h] +
and ecx 7 +
cmp cl 3 +
jnz loc_428E32  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_428E32  +
mov ecx [edi+20h] +
test ecx ecx +
jnz loc_428E32  +
jmp loc_428D74  +
***
xor cx cx +
cmp dword ptr [ebp+0] 7 +
jnz loc_428D58  +
lea esi [esi+0] +
jmp loc_428D55  +
***
mov edx [esp+20h] +
mov dword ptr [esp+2Ch] 0FFFFFFFFh +
mov edx [ecx+edx*4+24h] +
mov ecx [edx+24h] +
mov edx [edx+20h] +
mov [esp+28h] ecx +
add [esp+28h] edx +
mov edx [esp+40h] +
add edx [esp+28h] +
jb loc_428F45  +
and edx [esp+34h] +
mov [esp+2Ch] edx +
mov edx [esp+3Ch] +
mov ecx [esp+34h] +
lea edx [edx+eax-1] +
and ecx edx +
mov [esp+30h] edx +
mov edx 0FFFFFFFFh +
cmp eax [esp+30h] +
cmovbe edx ecx +
cmp [esp+2Ch] edx +
jb loc_428E32  +
cmp eax [esp+28h] +
jnb loc_428DD3  +
jmp loc_428E32  +
***
mov dword ptr [esp+4] 1991h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_402930  +
jmp loc_428E1A  +
***
mov dword ptr [esp+4] 19C8h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_402930  +
jmp loc_428E5E  +
***
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_404C60  +
test eax eax +
mov [esp+10h] eax +
jz loc_429426  +
mov ebx [esp+10h] +
mov eax [ebp+0] +
mov edi [esp+24h] +
mov dword ptr [ebx] 0 +
mov [ebx+4] eax +
mov eax [ebp+4] +
mov [ebx+0Ch] edi +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+20h] +
or eax 1 +
and eax 0FFFFFFCDh +
or al [esp+5Ch] +
mov [ebx+20h] al +
jmp loc_428D07  +
***
test al 20h +
cmovz edx [esp+60h] +
mov [esp+60h] edx +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_428C0A  +
mov eax [esp+0B0h] +
mov dword ptr [esp] offset aBWarningEmptyL +
mov [esp+4] eax +
call off_4730E4  +
jmp loc_428B09  +
***
mov eax [ebp+10h] +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+70h] 1 +
mov dword ptr [esp+28h] 0 +
mov [esp+18h] eax +
mov eax [ebp+0] +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+20h] eax +
mov eax [esp+18h] +
test eax eax +
jz loc_4292D0  +
mov eax [edx+20h] +
cmp [esp+18h] eax +
ja loc_429308  +
mov ecx [edx+14h] +
mov ebx ecx +
and ebx 500h +
cmp ebx 400h +
jz loc_42934B  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx [esp+18h] +
cmp esi ebx +
ja loc_429308  +
test cl 1 +
jz loc_429308  +
mov esi [esp+20h] +
cmp esi 6474E551h +
jz loc_429260  +
cmp esi 7 +
jz loc_429369  +
cmp dword ptr [esp+20h] 1 +
jz loc_429111  +
test ch 4 +
jnz loc_429260  +
cmp dword ptr [esp+20h] 2 +
jz loc_429280  +
xor edi edi +
test byte ptr [edx+18h] 40h +
jnz loc_429260  +
mov ecx [edx+3Ch] +
test ecx ecx +
jz loc_429260  +
mov ebx [esp+2Ch] +
lea esi [ebx+1] +
mov [esp+38h] esi +
mov esi [esp+14h] +
mov [esi+ebx*4] edx +
mov ebx [esp+64h] +
test ebx ebx +
jnz loc_4291B6  +
mov ebx [ebp+0Ch] +
test ebx ebx +
mov [esp+2Ch] ebx +
jz loc_4291B6  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jnz loc_4291B6  +
mov esi [esp+24h] +
test esi esi +
jnz loc_4291B6  +
mov ebx [ecx+20h] +
test ebx ebx +
jz loc_4291B6  +
mov ebx [esp+10h] +
mov esi [ecx+1Ch] +
movzx ebx byte ptr [ebx+20h] +
mov [esp+78h] esi +
mov [esp+40h] bl +
xor ebx ebx +
test byte ptr [esp+40h] 10h +
jz loc_42918C  +
mov esi [esp+48h] +
mov ebx [esi+28h] +
add ebx [esp+2Ch] +
mov [esp+7Ch] ebx +
xor ebx ebx +
test byte ptr [esp+40h] 20h +
jz loc_4291A8  +
mov esi [esp+48h] +
mov ebx [esi+2Ch] +
imul ebx [esi+30h] +
add ebx [esp+7Ch] +
cmp [esp+78h] ebx +
jz loc_429986  +
mov esi [ecx+20h] +
mov ebx esi +
mov [esp+2Ch] esi +
mov esi [esp+10h] +
mov esi [esi+0Ch] +
cmp ebx esi +
jb loc_42937C  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_429531  +
mov ebx [ecx+24h] +
mov [esp+40h] ebx +
mov ebx [esp+40h] +
add ebx [esp+2Ch] +
cmp [ebp+18h] eax +
mov [esp+40h] ebx +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx esi +
cmp [esp+40h] ebx +
ja loc_42937C  +
mov eax [esp+30h] +
test eax eax +
jnz loc_429224  +
mov edi [esp+2Ch] +
mov eax [esp+28h] +
cmp edi eax +
cmovbe eax edi +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov edi [esp+10h] +
mov dword ptr [esp+30h] 0 +
mov [edi+eax*4+28h] ecx +
mov edi [esp+2Ch] +
add eax 1 +
mov [esp+24h] eax +
mov [esp+28h] edi +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
jz loc_428C8A  +
mov [esp+2Ch] eax +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_429087  +
mov eax [esp+2Ch] +
cmp [esp+1Ch] eax +
jz loc_428C8A  +
jmp loc_428C76  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_429299  +
mov edi [edx+24h] +
test edi edi +
jnz loc_429111  +
mov esi [esp+18h] +
xor edi edi +
test esi esi +
jz loc_4294A7  +
mov esi [esp+18h] +
cmp esi [edx+20h] +
jnz loc_429113  +
mov esi [edx] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_429260  +
jmp loc_429111  +
***
mov eax [edx+1Ch] +
mov ebx [ebp+0Ch] +
cmp eax ebx +
jb loc_429308  +
mov ecx [edx+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_42935D  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov edi eax +
cmovnb edi [ebp+18h] +
add ebx edi +
cmp esi ebx +
jbe loc_4290D4  +
cmp dword ptr [esp+20h] 4 +
jnz loc_429260  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 7 +
jnz loc_429260  +
mov eax [edx+50h] +
mov ecx [ebp+8] +
cmp eax ecx +
jb loc_429260  +
add eax [edx+24h] +
mov ebx eax +
mov eax [ebp+14h] +
add ecx eax +
cmp ebx ecx +
ja loc_429260  +
mov ecx [edx+14h] +
jmp loc_4290FD  +
***
xor esi esi +
cmp dword ptr [esp+20h] 7 +
jnz loc_4290BA  +
jmp loc_4290B7  +
***
xor si si +
cmp dword ptr [esp+20h] 7 +
jnz loc_4292F0  +
jmp loc_4292ED  +
***
and ch 4 +
jz loc_429260  +
mov edi 1 +
jmp loc_429113  +
***
cmp dword ptr [esp+20h] 4 +
jz loc_4294B8  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jz loc_4293D7  +
mov ebx [ebp+0Ch] +
mov esi [ecx+1Ch] +
mov [esp+78h] ebx +
cmp esi ebx +
jb loc_4293D7  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_429871  +
mov edi [ecx+24h] +
mov [esp+40h] edi +
mov ebx [esp+40h] +
add ebx esi +
cmp [ebp+18h] eax +
cmovnb eax [ebp+18h] +
add eax [esp+78h] +
cmp ebx eax +
jbe loc_42920B  +
mov edi [esp+70h] +
test edi edi +
jz loc_429247  +
mov eax [esp+2Ch] +
mov dword ptr [esp+70h] 0 +
mov [esp+34h] eax +
jmp loc_429247  +
***
mov edi [eax+1Ch] +
cmp [ebp+0Ch] edi +
jnz loc_428970  +
jmp loc_428BF1  +
***
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+54h] 28h +
mov dword ptr [esp+1Ch] 0 +
jmp loc_428A1E  +
***
mov eax [esp+14h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_42863F  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov esi [esp+64h] +
mov [eax+24h] edi +
mov edi [esp+4Ch] +
test esi esi +
mov [esp+4Ch] eax +
mov [edi] eax +
jz loc_428E7A  +
mov eax [esp+68h] +
test byte ptr [eax+1AEh] 10h +
jnz loc_428E7A  +
mov edi [esp+4Ch] +
mov eax [edi+0Ch] +
cmp eax [esp+28h] +
jz loc_428E7A  +
test byte ptr [edi+20h] 30h +
jnz loc_428E7A  +
mov edi [esp+28h] +
sub edi eax +
mov eax edi +
mov edi [esp+4Ch] +
mov [edi+10h] eax +
jmp loc_428E7A  +
***
mov dword ptr [esp+64h] 1 +
jmp loc_428745  +
***
mov esi [edx+1Ch] +
cmp [ebp+0Ch] esi +
jnz loc_429113  +
jmp loc_4292B4  +
***
mov ebx [edx+8Ch] +
cmp dword ptr [ebx+4] 7 +
jnz loc_429387  +
mov esi [edx+50h] +
mov ebx [ebp+8] +
cmp esi ebx +
jb loc_429387  +
add esi [edx+24h] +
add ebx eax +
cmp esi ebx +
ja loc_429387  +
mov ebx [esp+0B0h] +
movzx ebx byte ptr [ebx+28h] +
and ebx 7 +
cmp bl 3 +
jnz loc_429387  +
cmp dword ptr [edx+1Ch] 0 +
jnz loc_429387  +
cmp dword ptr [edx+20h] 0 +
jz loc_42920B  +
nop   +
jmp loc_429387  +
***
mov edi [esp+10h] +
and eax 0FFFFFFCFh +
mov [edi+20h] al +
jmp loc_428CCE  +
***
mov eax [esp+10h] +
and byte ptr [eax+20h] 0DFh +
jmp loc_428CFF  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_4291EA  +
jmp loc_4291E3  +
***
mov eax [edi+1B0h] +
test byte ptr [eax+1AEh] 10h +
jz loc_42959F  +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+20h] eax +
cmp dword ptr [esp+20h] 0 +
jz loc_4299BC  +
xor esi esi +
xor ebx ebx +
jmp loc_429583  +
add esi 1 +
add ebp 20h +
cmp esi [esp+20h] +
jz loc_429888  +
cmp dword ptr [ebp+0] 1 +
jnz loc_429573  +
mov eax [ebp+1Ch] +
cmp eax ebx +
jbe loc_429573  +
cmp eax 40000000h +
ja loc_4298B8  +
mov ebx eax +
jmp loc_429573  +
***
mov eax [esp+0B4h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+30h] eax +
jz loc_4295BC  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4295B1  +
mov eax [esp+48h] +
mov dword ptr [esp+34h] 0 +
mov eax [eax+30h] +
test eax eax +
mov [esp+20h] eax +
jz loc_42984D  +
mov [esp+18h] edi +
mov edi ebp +
mov [esp+14h] ebp +
mov eax [edi+10h] +
test eax eax +
jnz loc_4295FC  +
cmp dword ptr [edi+18h] 0 +
jnz loc_4295FC  +
mov eax [edi] +
sub eax 2 +
cmp eax 1 +
jbe loc_4299C3  +
mov eax [esp+0B0h] +
mov esi [eax+64h] +
test esi esi +
jz loc_42982F  +
mov eax [edi] +
mov [esp+10h] edi +
lea ebx [eax-6474E550h] +
mov [esp+24h] eax +
mov [esp+3Ch] ebx +
lea ebx [eax-1] +
sub eax 6 +
mov [esp+40h] ebx +
mov [esp+38h] eax +
jmp loc_429756  +
cmp dword ptr [esp+38h] 1 +
jbe loc_42974B  +
and eax 2 +
mov [esp+28h] eax +
jnz loc_42965F  +
cmp dword ptr [esp+3Ch] 2 +
jbe loc_42974B  +
cmp dword ptr [esp+40h] 1 +
jbe loc_42974B  +
mov eax [ebx+4] +
cmp eax 8 +
mov [esp+2Ch] eax +
jz loc_4296B1  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
ja loc_42974B  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [ebx+18h] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
add eax edi +
mov edi [esp+10h] +
adc edx ebp +
cmp edx 0 +
mov edi [edi+14h] +
jg loc_42974B  +
jl loc_4296B1  +
cmp eax edi +
ja loc_42974B  +
mov ebp [esp+28h] +
test ebp ebp +
jz loc_4296EE  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_42974B  +
mov edi [esp+1Ch] +
sub edx eax +
test edi edi +
jz loc_4296E0  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_429912  +
mov eax [ebx+18h] +
mov edi [esp+10h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_42974B  +
mov eax [esp+10h] +
cmp dword ptr [eax] 2 +
jz loc_4297A1  +
test ecx ecx +
jz loc_4299C3  +
mov eax [ecx+14h] +
cmp [esi+14h] eax +
jnz loc_4299C3  +
mov eax [ecx+20h] +
cmp [esi+20h] eax +
jnz loc_4299C3  +
mov eax [ecx+1Ch] +
cmp [esi+1Ch] eax +
jnz loc_4299C3  +
mov eax [ecx+24h] +
cmp [esi+24h] eax +
jnz loc_4299C3  +
mov eax [ecx+28h] +
cmp [esi+28h] eax +
jnz loc_4299C3  +
mov eax [ecx+40h] +
cmp [esi+40h] eax +
jnz loc_4299C3  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_42982B  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_429761  +
or byte ptr [ecx+18h] 40h +
mov ebx [esi+8Ch] +
mov eax [ebx+8] +
mov ebp eax +
and ebp 400h +
mov [esp+1Ch] ebp +
jz loc_429635  +
cmp dword ptr [esp+24h] 7 +
jz loc_429640  +
cmp dword ptr [esp+24h] 6474E552h +
jz loc_429640  +
cmp dword ptr [esp+24h] 1 +
jnz loc_42974B  +
jmp loc_429640  +
***
mov edx [ebx+18h] +
test edx edx +
jnz loc_4296FB  +
mov eax [eax+18h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_4296FB  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_4297FD  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
jnb loc_42974B  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+10h] +
sbb ebp edx +
cmp ebp 0 +
mov edi [edi+14h] +
jg loc_42974B  +
jl loc_4297FD  +
cmp eax edi +
jnb loc_42974B  +
cmp dword ptr [esp+28h] 0 +
jz loc_4296FB  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_42974B  +
sub edx eax +
cmp [esp+1Ch] edx +
jbe loc_42974B  +
jmp loc_4296FB  +
***
mov edi [esp+10h] +
add dword ptr [esp+34h] 1 +
add edi 20h +
mov eax [esp+20h] +
cmp [esp+34h] eax +
jnz loc_4295E1  +
mov ebp [esp+14h] +
mov edi [esp+18h] +
mov eax [esp+30h] +
test eax eax +
jz loc_429996  +
movzx edx byte ptr [eax+18h] +
test dl 40h +
jz loc_429562  +
and edx 0FFFFFFBFh +
mov [eax+18h] dl +
mov eax [eax+0Ch] +
jmp loc_429851  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_4293BE  +
jmp loc_4293B7  +
***
mov eax [esp+0B4h] +
mov edi [eax+4] +
mov eax [edi+1B0h] +
mov ecx edi +
cmp ebx [eax+10h] +
jnz loc_4298E1  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
jmp loc_4286B6  +
***
mov [esp+8] eax +
mov eax [esp+0B0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp] offset aBWarningSegmen +
mov [esp+4] eax +
call off_4730E4  +
jmp loc_429573  +
***
mov eax [edi] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4033E0  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
mov eax [esp+0B4h] +
mov ecx [eax+4] +
jmp loc_4286B6  +
***
mov edi [esp+10h] +
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_4296E3  +
jmp loc_4296E0  +
***
mov dword ptr [esp+8] offset aRewrite_elf_pr +
mov dword ptr [esp+4] 19A1h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_402960  +
mov eax [esp+0B4h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax] 0 +
jmp loc_428674  +
***
mov eax [esp+20h] +
sub eax [esp+18h] +
test eax eax +
jle loc_429975  +
add [ebx+14h] eax +
lea edx [eax+esi] +
mov [ebx+18h] edx +
mov dword ptr [edi] 0 +
xor ebp ebp +
mov edi [esp+30h] +
jmp loc_428763  +
***
mov esi [esp+10h] +
mov ebx [esp+2Ch] +
mov [esi+0Ch] ebx +
jmp loc_4291B6  +
***
mov dword ptr [esp+8Ch] 0 +
cmp eax [esp+20h] +
jz loc_429EED  +
mov edx eax +
shl edx 5 +
cmp dword ptr [ebp+edx+10h] 0 +
jnz loc_4299D0  +
add eax 1 +
jmp loc_4299A1  +
***
xor ebx ebx +
jmp loc_429892  +
***
mov ebp [esp+14h] +
mov edi [esp+18h] +
jmp loc_429562  +
***
mov eax 1 +
lea edi [esp+8Ch] +
add eax eax +
mov [esp+38h] edi +
mov edi ebp +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+60h] al +
mov eax [esp+20h] +
cmp [esp+3Ch] eax +
jz loc_429ECC  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+14h] eax +
jz loc_429BB1  +
mov ebp [edi] +
mov [esp+10h] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+14h] 0 +
lea eax [ebp-6474E550h] +
mov [esp+30h] eax +
lea eax [ebp-1] +
mov [esp+34h] eax +
lea eax [ebp-6] +
mov [esp+40h] eax +
jmp loc_429A71  +
cmp ebp 7 +
jz loc_429A93  +
cmp ebp 6474E552h +
jz loc_429A93  +
cmp ebp 1 +
jz loc_429A93  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+10h] eax +
jz loc_429EF4  +
mov eax [esp+10h] +
mov esi [eax+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+2Ch] ebx +
jnz loc_429A4C  +
cmp dword ptr [esp+40h] 1 +
jbe loc_429A5E  +
and eax 2 +
mov [esp+18h] eax +
jnz loc_429AAA  +
cmp dword ptr [esp+30h] 2 +
jbe loc_429A5E  +
cmp dword ptr [esp+34h] 1 +
jbe loc_429A5E  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+24h] eax +
jz loc_429AE8  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
ja loc_429A5E  +
xor edx edx +
sub ecx eax +
mov eax ecx +
mov ecx [esi+18h] +
sbb ebx edx +
mov edx ebx +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_429A5E  +
jl loc_429AE8  +
cmp eax ecx +
ja loc_429A5E  +
cmp dword ptr [esp+18h] 0 +
lea esi [esi+0] +
jz loc_429B1E  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_429A5E  +
sub edx eax +
cmp dword ptr [esp+2Ch] 0 +
jz loc_429B10  +
cmp dword ptr [esp+24h] 8 +
jz loc_429B3C  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_429A5E  +
cmp dword ptr [edi] 2 +
jz loc_429B45  +
mov eax [esp+14h] +
test eax eax +
cmovz eax [esp+10h] +
add dword ptr [esp+28h] 1 +
mov [esp+14h] eax +
jmp loc_429A5E  +
***
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_429B13  +
jmp loc_429B10  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_429B23  +
mov eax [edi+18h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_429B23  +
cmp dword ptr [esp+24h] 8 +
jz loc_429B8A  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
jnb loc_429A5E  +
xor edx edx +
sub ecx eax +
mov eax [edi+14h] +
sbb ebx edx +
cmp ebx 0 +
jg loc_429A5E  +
jl loc_429B8A  +
cmp ecx eax +
jnb loc_429A5E  +
cmp dword ptr [esp+18h] 0 +
nop   +
jz loc_429B23  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_429A5E  +
sub edx eax +
cmp [esp+2Ch] edx +
jbe loc_429A5E  +
jmp loc_429B23  +
***
mov dword ptr [esp+24h] 0 +
mov eax 2Ch +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_404C60  +
test eax eax +
mov ebp eax +
jz loc_429432  +
mov ebx [edi] +
mov dword ptr [eax] 0 +
mov edx [edi+1Ch] +
mov esi [edi+10h] +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [ebp+14h] edx +
mov [esp+2Ch] esi +
mov [ebp+0Ch] esi +
mov [ebp+8] eax +
movzx eax byte ptr [ebp+20h] +
mov dword ptr [ebp+10h] 0 +
or eax 1 +
and eax 0FFFFFFFDh +
or eax [esp+60h] +
mov edx eax +
or edx 4 +
mov [ebp+20h] dl +
lea edx [ebx-6474E551h] +
cmp edx 1 +
ja loc_429C30  +
mov edx [edi+18h] +
or eax 0Ch +
mov [ebp+20h] al +
mov [ebp+18h] edx +
mov eax [edi+8] +
mov esi eax +
mov [esp+10h] eax +
xor eax eax +
test esi esi +
jnz loc_429C4F  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [edi+14h] eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 4 +
and eax 0FFFFFFCFh +
or eax edx +
cmp dword ptr [esp+1Ch] 0 +
mov [ebp+20h] al +
jz loc_429C70  +
cmp ebx 1 +
jz loc_429F14  +
mov eax [esp+48h] +
mov edx [eax+14h] +
xor eax eax +
cmp [esp+10h] edx +
ja loc_429C9B  +
mov esi [esp+48h] +
mov ecx [esp+10h] +
add ecx [edi+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax edx +
cmp ecx eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 5 +
and eax 0FFFFFFDFh +
or eax edx +
cmp ebx 1 +
mov [ebp+20h] al +
jnz loc_429CBE  +
test al 20h +
mov eax [esp+1Ch] +
cmovnz eax ebx +
mov [esp+1Ch] eax +
cmp dword ptr [esp+24h] 0 +
jz loc_429F21  +
mov eax [esp+14h] +
test eax eax +
jz loc_429F21  +
mov esi [esp+10h] +
xor ecx ecx +
mov [esp+28h] ebp +
mov ebp eax +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+44h] 0 +
mov [esp+40h] esi +
lea esi [ebx-6474E550h] +
mov [esp+54h] esi +
lea esi [ebx-1] +
mov [esp+58h] esi +
lea esi [ebx-6] +
mov [esp+5Ch] esi +
mov [esp+18h] ebx +
mov [esp+4Ch] ecx +
jmp loc_429D3A  +
cmp dword ptr [esp+18h] 7 +
jz loc_429D58  +
cmp dword ptr [esp+18h] 6474E552h +
jz loc_429D58  +
cmp dword ptr [esp+18h] 1 +
jz loc_429D58  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_429F4A  +
mov esi [ebp+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+50h] ebx +
jnz loc_429D17  +
cmp dword ptr [esp+5Ch] 1 +
jbe loc_429D2F  +
and eax 2 +
mov [esp+30h] eax +
jnz loc_429D6F  +
cmp dword ptr [esp+54h] 2 +
jbe loc_429D2F  +
cmp dword ptr [esp+58h] 1 +
jbe loc_429D2F  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+34h] eax +
jz loc_429DA6  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
ja loc_429D2F  +
mov ecx [esi+18h] +
sub eax [esp+40h] +
sbb edx [esp+44h] +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_429D2F  +
jl loc_429DA6  +
cmp eax ecx +
ja loc_429D2F  +
cmp dword ptr [esp+30h] 0 +
jz loc_429DDD  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_429D2F  +
sub edx eax +
cmp dword ptr [esp+50h] 0 +
jz loc_429DCF  +
cmp dword ptr [esp+34h] 8 +
jz loc_429EBA  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_429D2F  +
cmp dword ptr [esp+18h] 2 +
jz loc_429E4A  +
mov ebx [esp+4Ch] +
mov edx [esp+28h] +
mov eax [ebp+3Ch] +
lea ecx [ebx+1] +
mov [edx+ebx*4+28h] eax +
mov edx [ebp+14h] +
test dl 1 +
jz loc_429E37  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_429FA4  +
mov eax [ebp+20h] +
cmp eax [ebx+20h] +
cmovb ebx ebp +
mov [esp+14h] ebx +
and dl 2 +
jz loc_429F99  +
mov edx [esi+10h] +
sub edx [esp+10h] +
sub eax [esp+2Ch] +
cmp eax edx +
jz loc_429E37  +
mov eax [esp+28h] +
and byte ptr [eax+20h] 0FDh +
cmp [esp+24h] ecx +
jz loc_429F4A  +
mov [esp+4Ch] ecx +
jmp loc_429D2F  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_429DE4  +
mov eax [edi+18h] +
test eax eax +
mov [esp+50h] eax +
jz loc_429DE4  +
cmp dword ptr [esp+34h] 8 +
jz loc_429E90  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
jnb loc_429D2F  +
sub eax [esp+40h] +
sbb edx [esp+44h] +
mov ecx [edi+14h] +
cmp edx 0 +
jg loc_429D2F  +
jl loc_429E90  +
cmp eax ecx +
jnb loc_429D2F  +
cmp dword ptr [esp+30h] 0 +
jz loc_429DE4  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_429D2F  +
sub edx eax +
cmp [esp+50h] edx +
jbe loc_429D2F  +
jmp loc_429DE4  +
***
xor eax eax +
cmp dword ptr [esp+18h] 7 +
jnz loc_429DD2  +
jmp loc_429DCF  +
***
mov eax [esp+0B4h] +
mov edx [esp+8Ch] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax] edx +
jmp loc_428674  +
***
xor eax eax +
jmp loc_4299D5  +
***
mov eax [esp+28h] +
mov esi eax +
mov [esp+24h] eax +
test esi esi +
mov eax 2Ch +
lea edx ds:28h[esi*4] +
cmovnz eax edx +
jmp loc_429BBE  +
***
mov dword ptr [esp+1Ch] 1 +
jmp loc_429CBE  +
***
movzx eax byte ptr [ebp+20h] +
and eax 32h +
cmp al 2 +
jz loc_429F85  +
mov eax [esp+24h] +
add edi 20h +
add dword ptr [esp+3Ch] 1 +
mov [ebp+24h] eax +
mov eax [esp+38h] +
mov [esp+38h] ebp +
mov [eax] ebp +
jmp loc_4299F8  +
***
mov ebp [esp+28h] +
movzx eax byte ptr [ebp+20h] +
test al 10h +
jz loc_429F89  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_429F7E  +
mov edx [ebx+1Ch] +
and eax 32h +
sub edx [edi+0Ch] +
cmp al 2 +
mov [ebp+1Ch] edx +
jnz loc_429F2C  +
mov eax [esp+14h] +
mov eax [eax+20h] +
sub eax [esp+2Ch] +
mov [ebp+10h] eax +
jmp loc_429F2C  +
***
and eax 32h +
cmp al 2 +
jnz loc_429F2C  +
xor eax eax +
jmp loc_429F75  +
***
and eax 32h +
cmp al 2 +
jnz loc_429F2C  +
cmp dword ptr [esp+14h] 0 +
jnz loc_429F6E  +
jmp loc_429F85  +
***
mov edx [esi+0Ch] +
sub edx [edi+0Ch] +
jmp loc_429E27  +
***
mov [esp+14h] ebp +
mov eax [ebp+20h] +
jmp loc_429E17  +
***
mov eax [esp+4] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_429FC3  +
mov eax 1 +
retn   +
***
mov edx [esp+0Ch] +
mov edx [edx+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_429FBD  +
mov ecx [esp+8] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_42A083  +
mov dword ptr [esp+8] 0 +
mov ecx [esp+10h] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_42A074  +
mov dword ptr [esp+10h] 0 +
mov edx [esp+8] +
test edx edx +
jz loc_429FBD  +
mov ecx [esp+8] +
mov edx [ecx+28h] +
test edx edx +
jz loc_429FBD  +
cmp dword ptr [esp+10h] 0 +
jz loc_429FBD  +
cmp dword ptr [ecx+10h] offset off_473270 +
jnz loc_429FBD  +
mov eax [eax+0A0h] +
cmp edx [eax+90Ch] +
jz loc_42A096  +
cmp edx [eax+910h] +
jz loc_42A09D  +
mov ecx [eax+934h] +
cmp edx [ecx+30h] +
jz loc_42A0A4  +
cmp edx [ecx+2Ch] +
jz loc_42A0AB  +
mov eax [eax+208h] +
test eax eax +
jnz loc_42A05E  +
jmp loc_42A068  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_42A068  +
cmp edx [eax+38h] +
jnz loc_42A057  +
mov edx 0FFFFFF44h +
mov eax [esp+10h] +
mov [eax+28h] edx +
jmp loc_429FBD  +
***
mov ecx [edx+0A0h] +
test ecx ecx +
jnz loc_42A002  +
jmp loc_429FFA  +
***
mov edx [edx+0A0h] +
test edx edx +
jnz loc_429FEB  +
jmp loc_429FE3  +
***
mov edx 0FFFFFF40h +
jmp loc_42A068  +
***
mov edx 0FFFFFF41h +
jmp loc_42A068  +
***
mov edx 0FFFFFF42h +
jmp loc_42A068  +
***
mov edx 0FFFFFF43h +
jmp loc_42A068  +
***
mov eax [esp+4] +
mov edx [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [edx+60h] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
mov eax edx +
cmovg eax ecx +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov eax [edx+0A0h] +
mov ecx [eax+910h] +
test ecx ecx +
jz loc_42A150  +
mov edx [edx+4] +
mov eax [eax+108h] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+5] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
cmovle ecx edx +
mov eax ecx +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4029E0  +
mov ecx 0FFFFFFFFh +
jmp loc_42A143  +
***
mov eax [esp+8] +
mov eax [eax+4Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ecx [esp+2Ch] +
mov edi [esp+28h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
mov edx [edx+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] ecx +
mov [esp+4] esi +
mov [esp] eax +
call edx  +
test eax eax +
jz loc_42A1F3  +
mov eax [esi+4Ch] +
mov ebx [esi+44h] +
test eax eax +
jz loc_42A1E6  +
mov ecx edi +
xor edx edx +
jmp loc_42A1D3  +
mov ebx esi +
add edx 1 +
add ecx 4 +
cmp edx eax +
lea esi [ebx+10h] +
mov [ecx-4] ebx +
jnz loc_42A1D1  +
lea edi [edi+eax*4] +
mov dword ptr [edi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_42A1EC  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_42A236  +
mov [ebx+7Ch] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_42A279  +
mov [ebx+80h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edx [eax+0A0h] +
mov ebx [edx+910h] +
test ebx ebx +
jz loc_42A2F2  +
mov ecx [eax+64h] +
test ecx ecx +
jz loc_42A2EB  +
mov edi 4 +
jmp loc_42A2B7  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_42A2E1  +
mov ebp [ecx+8Ch] +
cmp ebx [ebp+1Ch] +
jnz loc_42A2B0  +
mov esi [ebp+4] +
cmp esi 4 +
jz loc_42A2CF  +
cmp esi 9 +
jnz loc_42A2B0  +
mov eax [ecx+24h] +
xor edx edx +
mov ecx [ecx+0Ch] +
div  dword ptr [ebp+28h] +
test ecx ecx +
lea edi [edi+eax*4] +
jnz loc_42A2B7  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 4 +
jmp loc_42A2E3  +
***
mov dword ptr [esp] 5 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
jmp loc_42A2E3  +
***
mov eax [edi+4] +
mov ebx [edi+64h] +
mov dword ptr [esp+18h] 0 +
mov eax [eax+1B0h] +
test ebx ebx +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov [esp+1Ch] eax +
jnz loc_42A377  +
jmp loc_42A400  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_42A400  +
mov eax [edi+0A0h] +
mov edx [eax+910h] +
mov eax [ebx+8Ch] +
cmp [eax+1Ch] edx +
jnz loc_42A360  +
mov eax [eax+4] +
cmp eax 4 +
jz loc_42A38F  +
cmp eax 9 +
jnz loc_42A360  +
mov eax [esp+48h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+8] eax +
mov eax [esp+1Ch] +
call eax  +
test eax eax +
jz loc_42A416  +
mov ecx [ebx+8Ch] +
xor edx edx +
mov eax [ebx+24h] +
mov ebp [ebx+44h] +
div  dword ptr [ecx+28h] +
test eax eax +
jle loc_42A3ED  +
mov esi [esp+44h] +
xor ecx ecx +
jmp loc_42A3D2  +
mov ebp edx +
add ecx 1 +
add esi 4 +
cmp eax ecx +
lea edx [ebp+10h] +
mov [esi-4] ebp +
jnz loc_42A3D0  +
mov ecx [esp+44h] +
lea esi [ecx+eax*4] +
mov [esp+44h] esi +
mov ebx [ebx+0Ch] +
add [esp+18h] eax +
test ebx ebx +
jnz loc_42A36B  +
lea esi [esi+0] +
mov eax [esp+44h] +
mov dword ptr [eax] 0 +
mov eax [esp+18h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_42A40E  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_0] +
mov ebx [edi+0A0h] +
mov esi [ebx+91Ch] +
test esi esi +
jz loc_42A4C0  +
mov ecx [ebx+1B8h] +
test ecx ecx +
jz loc_42A467  +
mov eax [ebx+1B0h] +
cmp eax 0Fh +
ja loc_42A5F2  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_version_ +
call off_4730E4  +
mov [esp+7Ch+var_7C] 11h +
call sub_4029E0  +
mov eax [edi+0A0h] +
mov dword ptr [eax+244h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+23Ch] 0 +
test ebp ebp +
jz loc_42A4B2  +
mov [esp+7Ch+var_7C] ebp +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
mov eax [ebx+918h] +
test eax eax +
jz loc_42A526  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42A4E5  +
mov eax [ebx+1E8h] +
cmp eax 13h +
ja loc_42A800  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_versio_0 +
call off_4730E4  +
mov [esp+7Ch+var_7C] 11h +
call sub_4029E0  +
mov eax [edi+0A0h] +
mov dword ptr [eax+240h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+238h] 0 +
jmp loc_42A4A6  +
mov ebp [esp+7Ch+arg_4] +
test ebp ebp +
jz loc_42A5E5  +
cmp esi 3 +
mov eax 3 +
lea edx [esi+1] +
cmovnb eax edx +
mov [esp+7Ch+var_74] 28h +
mov esi eax +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_404D50  +
mov [ebx+240h] eax +
mov eax [edi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_42A4B2  +
mov [eax+238h] esi +
mov eax [edi+0A0h] +
lea edx [esi+esi*4] +
mov ecx 1 +
mov eax [eax+240h] +
lea ebx [eax+edx*8-28h] +
xor edx edx +
mov eax 1 +
mov [ebx] ax +
mov [ebx+2] dx +
mov [ebx+4] si +
mov [ebx+6] cx +
mov [ebx+14h] edi +
mov [esp+7Ch+var_7C] edi +
call sub_43BB90  +
test eax eax +
mov [ebx+18h] eax +
jz loc_42A900  +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] edi +
call sub_404C60  +
test eax eax +
mov [ebx+20h] eax +
jz loc_42A900  +
mov edx [ebx+18h] +
mov [eax+8] edx +
add esp 7Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_42A486  +
mov eax [ebx+1A8h] +
mov edx [ebx+1ACh] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_4086D0  +
test eax eax +
jnz loc_42A486  +
mov eax [ebx+1B0h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_4084C0  +
cmp eax [ebx+1B0h] +
jnz loc_42A486  +
mov eax [ebx+1B8h] +
mov esi [edi+0A0h] +
mov [esp+7Ch+var_74] 20h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
call sub_404D50  +
mov [esi+244h] eax +
mov eax [edi+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
mov [esp+7Ch+var_68] ecx +
jz loc_42A48C  +
mov edx [ebx+1B0h] +
lea edx [ebp+edx-10h] +
mov [esp+7Ch+var_60] edx +
mov edx [ebx+1B8h] +
test edx edx +
jz loc_42ACC3  +
mov [esp+7Ch+var_5C] ebp +
xor esi esi +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_64] ebx +
mov [esp+7Ch+arg_0] edi +
mov eax [esp+7Ch+var_5C] +
mov edi [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] eax +
call sub_4206D0  +
mov ecx [esp+7Ch+arg_0] +
mov eax [esp+7Ch+var_64] +
mov [edi+10h] ecx +
mov ecx [edi+4] +
mov edx [eax+1B4h] +
test ecx ecx +
jnz loc_42A993  +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+14h] offset unk_4896B2 +
mov ecx [esp+7Ch+var_68] +
movzx eax word ptr [ecx+2] +
test ax ax +
jnz loc_42A9B3  +
mov dword ptr [ecx+18h] 0 +
mov eax [esp+7Ch+var_68] +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_5C] +
mov ebp [eax+8] +
sub ecx edx +
mov [esp+7Ch+var_50] ecx +
cmp ebp ecx +
ja loc_42A7ED  +
add ebp edx +
mov ebx [eax+18h] +
cmp word ptr [eax+2] 0 +
jz loc_42A915  +
xor edi edi +
jmp loc_42A7AE  +
mov dword ptr [ebx+10h] offset unk_4896B2 +
movzx eax word ptr [ebx+6] +
mov dword ptr [ebx+14h] 0 +
cmp esi eax +
cmovb esi eax +
mov eax [ebx+0Ch] +
add edi 1 +
test eax eax +
jz loc_42A90D  +
mov ecx [esp+7Ch+var_68] +
movzx edx word ptr [ecx+2] +
cmp edi edx +
jnb loc_42A797  +
lea ecx [ebx+18h] +
mov [ebx+14h] ecx +
mov ecx [esp+7Ch+var_60] +
sub ecx ebp +
cmp eax ecx +
ja loc_42A7ED  +
add ebp eax +
add ebx 18h +
cmp edi edx +
jnb loc_42A915  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_4207C0  +
mov ecx [ebx+8] +
mov eax [esp+7Ch+var_64] +
test ecx ecx +
mov edx [eax+1B4h] +
jz loc_42A760  +
mov eax [esp+7Ch+arg_0] +
call loc_420AD0  +
test eax eax +
mov [ebx+10h] eax +
jnz loc_42A767  +
mov ebp [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
jmp loc_42A469  +
mov [esp+7Ch+var_7C] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_42A900  +
mov eax [ebx+1E0h] +
mov edx [ebx+1E4h] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_4086D0  +
test eax eax +
jnz loc_42A504  +
mov eax [ebx+1E8h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_4084C0  +
cmp eax [ebx+1E8h] +
mov [esp+7Ch+var_5C] eax +
jnz loc_42A504  +
mov eax [esp+7Ch+var_5C] +
lea eax [ebp+eax-14h] +
mov [esp+7Ch+var_60] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42ACB6  +
xor edx edx +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_50] esi +
mov esi ebp +
xor ebp ebp +
mov [esp+7Ch+var_64] ebx +
mov ebx edx +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_68] eax +
jmp loc_42A8D7  +
movzx eax ax +
cmp ebp eax +
cmovb ebp eax +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_42AC6F  +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp eax ecx +
ja loc_42A8F6  +
add esi eax +
mov eax [esp+7Ch+var_64] +
add ebx 1 +
cmp [eax+1F0h] ebx +
jbe loc_42A9F3  +
mov eax [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] eax +
call sub_420510  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jnz loc_42A8A4  +
mov ebp [esp+7Ch+var_54] +
jmp loc_42A4E7  +
xor ebp ebp +
mov eax [edi+0A0h] +
jmp loc_42A50A  +
mov eax [esp+7Ch+var_68] +
mov [eax+2] di +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+1Ch] 0 +
mov eax [eax+0Ch] +
test eax eax +
jz loc_42A965  +
mov ecx [esp+7Ch+var_64] +
add [esp+7Ch+var_58] 1 +
mov edx [ecx+1B8h] +
cmp [esp+7Ch+var_58] edx +
jnb loc_42A948  +
mov edi [esp+7Ch+var_68] +
mov ecx edi +
add ecx 20h +
mov [edi+1Ch] ecx +
cmp [esp+7Ch+var_50] eax +
jb loc_42A7ED  +
add [esp+7Ch+var_5C] eax +
add [esp+7Ch+var_68] 20h +
cmp [esp+7Ch+var_58] edx +
jb loc_42A6C9  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
mov edx [esp+7Ch+var_58] +
mov [eax+23Ch] edx +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebx [edi+0A0h] +
jmp loc_42A4C2  +
mov eax [esp+7Ch+arg_0] +
call loc_420AD0  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+14h] eax +
jnz loc_42A712  +
jmp loc_42A7ED  +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 18h +
mov [esp+7Ch+var_7C] eax +
call sub_404C00  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+18h] eax +
jnz loc_42A72A  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_42A48C  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx eax +
mov ebp [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_4] +
test ecx ecx +
jz loc_42AA1D  +
cmp esi [esp+7Ch+var_58] +
ja loc_42AA16  +
mov esi [esp+7Ch+var_58] +
add esi 1 +
mov [esp+7Ch+var_58] esi +
mov eax [esp+7Ch+var_58] +
mov edx [edi+0A0h] +
mov [esp+7Ch+var_74] 28h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_68] edx +
call sub_404D50  +
mov edx [esp+7Ch+var_68] +
mov [edx+240h] eax +
mov eax [edi+0A0h] +
mov edx [eax+240h] +
test edx edx +
jz loc_42A50A  +
mov ecx [esp+7Ch+var_58] +
mov [eax+238h] ecx +
mov eax [edi+0A0h] +
mov eax [eax+240h] +
mov [esp+7Ch+var_4C] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42AC54  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_68] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_50] ebp +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_54] ebp +
lea eax [ebp+eax-8] +
mov [esp+7Ch+var_60] eax +
mov [esp+7Ch+var_40] esi +
mov [esp+7Ch+var_5C] ebx +
mov eax [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_68] +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] esi +
call sub_420510  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jz loc_42A8F6  +
mov edx [esp+7Ch+var_4C] +
movzx eax ax +
lea eax [eax+eax*4] +
lea eax [edx+eax*8-28h] +
mov ecx eax +
mov [esp+7Ch+var_64] eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [esi+10h] +
mov [ecx+14h] edi +
mov [ecx+10h] eax +
movzx eax word ptr [ecx+6] +
test ax ax +
jnz loc_42AC84  +
mov dword ptr [ecx+20h] 0 +
mov ecx [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_50] +
mov esi [ecx+0Ch] +
sub eax edx +
cmp esi eax +
ja loc_42A8F6  +
mov eax ecx +
mov ecx [ecx+20h] +
add esi edx +
xor ebp ebp +
cmp word ptr [eax+6] 0 +
mov [esp+7Ch+var_48] ecx +
lea ebx [ecx+10h] +
jnz loc_42AB8F  +
jmp loc_42ABDE  +
mov dword ptr [ebx-8] offset unk_4896B2 +
add ebp 1 +
test eax eax +
mov dword ptr [ebx-4] 0 +
jz loc_42ABD6  +
mov ecx [esp+7Ch+var_64] +
movzx edx word ptr [ecx+6] +
cmp ebp edx +
jnb loc_42AB78  +
mov [ebx-4] ebx +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp ecx eax +
jb loc_42A8F6  +
add esi eax +
add ebx 10h +
cmp ebp edx +
jnb loc_42ABDE  +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] esi +
call eax  +
lea edx [esi+4] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [ebx-10h] +
mov edx [esp+7Ch+var_5C] +
test ecx ecx +
mov edx [edx+1ECh] +
mov [ebx-0Ch] eax +
jz loc_42AB54  +
mov eax edi +
call loc_420AD0  +
test eax eax +
mov [ebx-8] eax +
jz loc_42A8F6  +
mov eax [ebx-0Ch] +
jmp loc_42AB5B  +
mov eax [esp+7Ch+var_64] +
mov [eax+6] bp +
mov eax [esp+7Ch+var_64] +
cmp word ptr [eax+6] 0 +
mov dword ptr [eax+18h] 0 +
jz loc_42ABFB  +
mov ecx eax +
mov eax [eax+20h] +
mov eax [eax+8] +
mov [ecx+18h] eax +
mov eax [esp+7Ch+var_64] +
mov edx [eax+10h] +
mov dword ptr [eax+1Ch] 0 +
test edx edx +
jz loc_42AC4C  +
sub eax [esp+7Ch+var_4C] +
sar eax 3 +
imul eax eax +
add eax 1 +
cmp [esp+7Ch+var_58] eax +
jbe loc_42AC2F  +
mov ecx [esp+7Ch+var_64] +
mov eax ecx +
add eax 28h +
mov [ecx+1Ch] eax +
mov eax [esp+7Ch+var_5C] +
add [esp+7Ch+var_44] 1 +
mov ecx [esp+7Ch+var_44] +
add [esp+7Ch+var_50] edx +
cmp [eax+1F0h] ecx +
ja loc_42AAB1  +
mov ebp [esp+7Ch+var_54] +
mov esi [esp+7Ch+var_40] +
mov [esp+7Ch+var_7C] ebp +
call free  +
cmp [esp+7Ch+arg_4] 0 +
jz loc_42A5E5  +
jmp loc_42A579  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_64] +
mov ebp [esp+7Ch+var_54] +
jmp loc_42AA01  +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_404C00  +
mov edx [esp+7Ch+var_64] +
test eax eax +
mov [edx+20h] eax +
jnz loc_42AB1F  +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_42A50A  +
mov [esp+7Ch+var_58] 0 +
jmp loc_42AA01  +
mov [esp+7Ch+var_58] 0 +
xor esi esi +
jmp loc_42A976  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov ebp [esp+74h] +
mov dword ptr [esp+30h] 0 +
mov eax [esi+0A0h] +
mov ebx [eax+44h] +
test ebx ebx +
jz loc_42AEF8  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 11h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aProgramHeader +
call fwrite  +
mov eax [esi+0A0h] +
mov eax [eax+30h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_42AEF8  +
xor edi edi +
jmp loc_42AD61  +
mov [esp+4] ebp +
add edi 1 +
add ebx 20h +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp edi [esp+1Ch] +
jz loc_42AEF8  +
mov eax [ebx] +
mov [esp+20h] eax +
call near ptr dword_41F0B0  +
test eax eax +
jz loc_42B056  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a8sOff0x +
mov [esp] ebp +
call fprintf  +
mov eax [ebx+8] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_403310  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVaddr0x +
call fwrite  +
mov eax [ebx+0Ch] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_403310  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aPaddr0x +
call fwrite  +
mov eax [ebx+10h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_403310  +
mov eax [ebx+1Ch] +
mov [esp] eax +
call near ptr dword_407E70  +
mov dword ptr [esp+4] offset aAlign2U +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aFilesz0x +
call fwrite  +
mov eax [ebx+14h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_403310  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMemsz0x +
call fwrite  +
mov eax [ebx+18h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_403310  +
mov eax [ebx+4] +
mov dword ptr [esp+4] offset aFlagsCCC +
mov [esp] ebp +
mov edx eax +
and edx 1 +
cmp edx 1 +
mov edx eax +
sbb ecx ecx +
and edx 2 +
and ecx 0FFFFFFB5h +
add ecx 78h +
cmp edx 1 +
sbb edx edx +
and eax 4 +
and edx 0FFFFFFB6h +
add edx 77h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFBBh +
add eax 72h +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+4] +
and eax 0FFFFFFF8h +
jz loc_42AD41  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aLx +
mov [esp] ebp +
call fprintf  +
jmp loc_42AD41  +
***
mov dword ptr [esp+4] offset a_dynamic_1 +
mov [esp] esi +
call sub_405CC0  +
test eax eax +
mov edi eax +
jz loc_42B090  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aDynamicSection +
call fwrite  +
lea eax [esp+30h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] esi +
call sub_406620  +
mov ebx [esp+30h] +
test eax eax +
jnz loc_42AF64  +
test ebx ebx +
jz loc_42AF5A  +
mov [esp] ebx +
call free  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] edi +
mov [esp] esi +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
jz loc_42B11A  +
mov edx [esi+0A0h] +
mov ebx [esp+30h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+2Ch] eax +
mov eax [esi+4] +
mov edx [eax+1B0h] +
mov eax [edx+174h] +
movzx ecx byte ptr [eax+6] +
mov eax [eax+30h] +
mov [esp+1Ch] ecx +
mov [esp+24h] eax +
mov eax [edi+24h] +
cmp ecx eax +
ja loc_42AF4E  +
add eax ebx +
mov [esp+20h] eax +
sub [esp+20h] ecx +
cmp ebx [esp+20h] +
ja loc_42B07F  +
mov [esp+28h] edx +
lea edi [esp+34h] +
mov eax [esp+24h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
mov edx [esp+34h] +
test edx edx +
jz loc_42B07B  +
cmp edx 1Dh +
jz loc_42B6A8  +
ja loc_42B123  +
cmp edx 0Eh +
jz loc_42B69E  +
nop   +
lea esi [esi+0] +
ja loc_42B180  +
cmp edx 7 +
jz loc_42B6E4  +
nop   +
ja loc_42B39E  +
cmp edx 3 +
jz loc_42B6DA  +
nop   +
jbe loc_42B648  +
cmp edx 5 +
mov eax offset aStrtab +
jz loc_42B3C4  +
mov eax offset aHash +
mov edx offset aSymtab +
cmova eax edx +
jmp loc_42B3C4  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_42AD74  +
***
mov ebx [esp+30h] +
mov [esp] ebx +
call free  +
mov dword ptr [esp+30h] 0 +
nop   +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
test edx edx +
jz loc_42B0AA  +
mov edi [eax+240h] +
test edi edi +
jz loc_42B0E1  +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_42B0D7  +
test edx edx +
jnz loc_42B2B5  +
mov eax [eax+91Ch] +
test eax eax +
jnz loc_42B20D  +
add esp 5Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+244h] +
test ecx ecx +
jnz loc_42B0B4  +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_42A430  +
test eax eax +
jz loc_42AF5A  +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
jmp loc_42B0B4  +
***
mov edx [esp+2Ch] +
mov eax esi +
call loc_420AD0  +
test eax eax +
jnz loc_42B5C9  +
mov ebx [esp+30h] +
jmp loc_42AF4E  +
***
cmp edx 6FFFFEFCh +
jz loc_42B6B2  +
ja loc_42B1C6  +
cmp edx 6FFFFDFBh +
jz loc_42B6D0  +
jbe loc_42B480  +
cmp edx 6FFFFDFFh +
jz loc_42B6C6  +
ja loc_42B516  +
cmp edx 6FFFFDFDh +
mov eax offset aPosflag_1 +
jz loc_42B3C4  +
mov eax offset aFeature +
mov edx offset aSyminsz +
cmova eax edx +
jmp loc_42B3C4  +
cmp edx 15h +
jz loc_42B6F8  +
jbe loc_42B4C5  +
cmp edx 19h +
jz loc_42B6EE  +
nop   +
lea esi [esi+0] +
ja loc_42B4F6  +
cmp edx 17h +
mov eax offset aJmprel +
jz loc_42B3C4  +
mov eax offset aTextrel +
mov edx offset aBind_now +
cmova eax edx +
jmp loc_42B3C4  +
cmp edx 6FFFFFFBh +
jz loc_42B720  +
jbe loc_42B43C  +
cmp edx 6FFFFFFFh +
jz loc_42B716  +
ja loc_42B57F  +
cmp edx 6FFFFFFDh +
mov eax offset aVerdefnum +
jz loc_42B3C4  +
mov eax offset aVerdef +
mov ecx offset aVerneed +
cmova eax ecx +
jmp loc_42B3C4  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 15h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionReferen +
call fwrite  +
mov eax [esi+0A0h] +
mov edi [eax+244h] +
test edi edi +
jz loc_42B0CA  +
mov esi offset aCorrupt +
mov eax [edi+14h] +
mov dword ptr [esp+4] offset aRequiredFromS +
mov [esp] ebp +
test eax eax +
cmovz eax esi +
mov [esp+8] eax +
call fprintf  +
mov ebx [edi+18h] +
test ebx ebx +
jz loc_42B2A9  +
lea esi [esi+0] +
mov eax [ebx+10h] +
mov edx [ebx] +
test eax eax +
cmovz eax esi +
mov [esp+14h] eax +
movzx eax word ptr [ebx+6] +
mov [esp+10h] eax +
movzx eax word ptr [ebx+4] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset a0x8_8lx0x2_2x2 +
mov [esp] ebp +
mov [esp+0Ch] eax +
call fprintf  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_42B270  +
mov edi [edi+1Ch] +
test edi edi +
jnz loc_42B246  +
jmp loc_42B0CA  +
***
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 16h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionDefinit +
call fwrite  +
mov eax [esi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_42B0BC  +
lea esi [esi+0] +
mov eax [ebx+18h] +
mov ecx offset aCorrupt +
mov edx [ebx+8] +
test eax eax +
cmovz eax ecx +
mov [esp+14h] eax +
mov [esp+10h] edx +
movzx eax word ptr [ebx+2] +
mov [esp+0Ch] eax +
movzx eax word ptr [ebx+4] +
mov dword ptr [esp+4] offset aD0x2_2x0x8_8lx +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+20h] +
test eax eax +
jz loc_42B388  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_42B388  +
mov [esp+4] ebp +
mov dword ptr [esp] 9 +
call fputc  +
mov eax [ebx+20h] +
mov edi [eax+0Ch] +
test edi edi +
jz loc_42B378  +
mov eax [edi+8] +
mov ecx offset aCorrupt +
mov dword ptr [esp+4] offset aS_19 +
mov [esp] ebp +
test eax eax +
cmovz eax ecx +
mov [esp+8] eax +
call fprintf  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_42B350  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_42B2F0  +
mov eax [esi+0A0h] +
jmp loc_42B0BC  +
***
cmp edx 0Ah +
jz loc_42B70C  +
jbe loc_42B627  +
cmp edx 0Ch +
mov eax offset aInit_0 +
jz loc_42B3C4  +
mov eax offset aSyment +
mov edx offset aFini +
cmova eax edx +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a0x_0 +
call fwrite  +
mov eax [esp+38h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_403310  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
add ebx [esp+1Ch] +
cmp ebx [esp+20h] +
ja loc_42B07B  +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov [esp+28h] eax +
jmp loc_42AFD3  +
***
cmp edx 6FFFFEFFh +
jz loc_42B694  +
jbe loc_42B600  +
cmp edx 6FFFFFF9h +
mov eax offset aRelacount +
jz loc_42B3C4  +
mov eax offset aRelcount +
ja loc_42B3C4  +
cmp edx 6FFFFFF0h +
mov eax offset aVersym +
jz loc_42B3C4  +
jmp loc_42B539  +
cmp edx 21h +
jz loc_42B68A  +
lea esi [esi+0] +
jbe loc_42B5DA  +
cmp edx 6FFFFDF9h +
mov eax offset aPltpadsz +
jz loc_42B3C4  +
mov eax offset aMoveent +
ja loc_42B3C4  +
cmp edx 6FFFFDF8h +
mov eax offset aChecksum +
jz loc_42B3C4  +
jmp loc_42B539  +
cmp edx 11h +
jz loc_42B6BC  +
nop   +
jbe loc_42B664  +
cmp edx 13h +
mov eax offset aRelent +
jz loc_42B3C4  +
mov eax offset aRelsz +
mov edx offset aPltrel +
cmova eax edx +
jmp loc_42B3C4  +
***
cmp edx 1Bh +
mov eax offset aInit_arraysz +
jz loc_42B3C4  +
mov eax offset aFini_array +
mov edx offset aFini_arraysz +
cmova eax edx +
jmp loc_42B3C4  +
***
cmp edx 6FFFFEFAh +
jz loc_42B680  +
ja loc_42B702  +
cmp edx 6FFFFEF5h +
mov eax offset aGnu_hash +
jz loc_42B3C4  +
mov eax [esp+28h] +
mov ecx [eax+0E8h] +
mov eax offset unk_4896B2 +
test ecx ecx +
jz loc_42B551  +
mov [esp] edx +
call ecx  +
cmp byte ptr [eax] 0 +
jnz loc_42B3C4  +
mov eax [esp+34h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_42B3C4  +
***
cmp edx 7FFFFFFEh +
jz loc_42B734  +
cmp edx 7FFFFFFFh +
jz loc_42B72A  +
cmp edx 7FFFFFFDh +
jnz loc_42B539  +
mov eax offset aAuxiliary +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov ecx [esp+38h] +
mov eax offset unk_4896B2 +
test ecx ecx +
jnz loc_42B107  +
mov [esp+4] ebp +
mov [esp] eax +
call fputs  +
jmp loc_42B40C  +
***
cmp edx 1Eh +
mov eax offset aFlags +
jz loc_42B3C4  +
cmp edx 20h +
mov eax offset aPreinit_array +
jz loc_42B3C4  +
jmp loc_42B539  +
***
cmp edx 6FFFFEFDh +
mov eax offset aPltpad +
jz loc_42B3C4  +
cmp edx 6FFFFEFEh +
mov eax offset aMovetab +
jz loc_42B3C4  +
jmp loc_42B539  +
***
cmp edx 8 +
mov eax offset aRelasz +
jz loc_42B3C4  +
cmp edx 9 +
mov eax offset aRelaent +
jz loc_42B3C4  +
jmp loc_42B539  +
***
cmp edx 1 +
jz loc_42B73E  +
cmp edx 2 +
mov eax offset aPltrelsz +
jz loc_42B3C4  +
jmp loc_42B539  +
***
cmp edx 0Fh +
jz loc_42B748  +
cmp edx 10h +
mov eax offset aSymbolic +
jz loc_42B3C4  +
jmp loc_42B539  +
***
mov eax offset aConfig +
jmp loc_42B5A4  +
***
mov eax offset aPreinit_arrays +
jmp loc_42B3C4  +
***
mov eax offset aSyminfo +
jmp loc_42B3C4  +
***
mov eax offset aSoname +
jmp loc_42B5A4  +
***
mov eax offset aRunpath +
jmp loc_42B5A4  +
***
mov eax offset aAudit +
jmp loc_42B5A4  +
***
mov eax offset aRel +
jmp loc_42B3C4  +
***
mov eax offset aSyminent +
jmp loc_42B3C4  +
***
mov eax offset aMovesz +
jmp loc_42B3C4  +
***
mov eax offset aPltgot +
jmp loc_42B3C4  +
***
mov eax offset aRela +
jmp loc_42B3C4  +
***
mov eax offset aInit_array +
jmp loc_42B3C4  +
***
mov eax offset aDebug +
jmp loc_42B3C4  +
***
mov eax offset aDepaudit +
jmp loc_42B5A4  +
***
mov eax offset aStrsz +
jmp loc_42B3C4  +
***
mov eax offset aVerneednum +
jmp loc_42B3C4  +
***
mov eax offset aFlags_1 +
jmp loc_42B3C4  +
***
mov eax offset aFilter +
jmp loc_42B5A4  +
***
mov eax offset aUsed +
jmp loc_42B3C4  +
***
mov eax offset aNeeded +
jmp loc_42B5A4  +
***
mov eax offset aRpath +
jmp loc_42B5A4  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 34h +
mov [esp] ebx +
call sub_404C60  +
test eax eax +
jz loc_42B77E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_413440  +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_42B823  +
cmp cl 5Fh +
jz loc_42B818  +
xor eax eax +
cmp cl 4Ch +
jnz loc_42B820  +
movzx ecx byte ptr [edx+1] +
test ds:byte_4922A0[ecx+ecx] 4 +
jz loc_42B820  +
lea esi [edx+2] +
movzx edx byte ptr [edx+2] +
test dl dl +
jz loc_42B820  +
mov ecx esi +
jmp loc_42B7FB  +
test ds:byte_4922A0[edx+edx] 4 +
jz loc_42B81E  +
add ecx 1 +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_42B820  +
lea ebx [edx-1] +
cmp bl 1 +
ja loc_42B7E7  +
cmp dl 1 +
mov eax 1 +
jnz loc_42B7E7  +
cmp ecx esi +
jnz loc_42B7E7  +
mov eax 1 +
jmp loc_42B820  +
cmp byte ptr [edx+1] 2Eh +
jz loc_42B836  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
movzx eax byte ptr [edx+1] +
cmp al 4Ch +
jz loc_42B811  +
cmp al 2Eh +
setz al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
cmp byte ptr [edx+2] 4Ch +
jnz loc_42B81E  +
cmp byte ptr [edx+3] 5Fh +
jnz loc_42B81E  +
jmp loc_42B811  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_elf_get_l +
mov dword ptr [esp+4] 1FE5h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_402960  +
nop   +
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx] +
cmp ecx eax +
jz loc_42B894  +
test eax eax +
jz loc_42B894  +
test ecx ecx +
jnz loc_42B8A6  +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov [esp+8] edx +
pop ebx  +
jmp sub_4071F0  +
***
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov edi [esp+64h] +
mov esi [esp+70h] +
mov ebx [esp+74h] +
mov eax [ebp+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_48D060 +
mov [esp+18h] ebx +
add eax 230h +
mov [esp+2Ch] eax +
mov eax [esp+7Ch] +
mov [esp+14h] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
mov eax [esp+6Ch] +
mov [esp+10h] eax +
mov eax [esp+68h] +
mov [esp+0Ch] eax +
call sub_449C60  +
test eax eax +
jz loc_42B940  +
mov ecx [ebx] +
test ecx ecx +
jz loc_42BA02  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+78h] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+18h] eax +
mov eax [esp+6Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_44C820  +
test eax eax +
jnz loc_42B926  +
mov eax [ebp+0A0h] +
mov [esp+18h] ebx +
mov [esp+14h] esi +
mov [esp+4] edi +
add eax 228h +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
lea eax [esp+3Ch] +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_413590  +
test eax eax +
jz loc_42BA60  +
mov ecx [esp+3Ch] +
test ecx ecx +
jnz loc_42BA40  +
test edi edi +
jz loc_42BA60  +
mov eax [esp+6Ch] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp] ebp +
mov [esp+8] eax +
call sub_449A50  +
test eax eax +
jz loc_42BA60  +
mov eax [esp+78h] +
mov dword ptr [eax] 0 +
jmp loc_42B930  +
***
mov edx [esi] +
xor eax eax +
mov [esp+14h] ebx +
mov [esp+4] edi +
mov [esp] ebp +
test edx edx +
cmovz eax esi +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_449A50  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
test edx edx +
jnz loc_42B930  +
mov eax [esp+78h] +
mov eax [eax] +
test eax eax +
jz loc_42B9C3  +
jmp loc_42B930  +
***
xor eax eax +
jmp loc_42B935  +
***
sub esp 3Ch +
mov eax [esp+40h] +
mov ecx [eax+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_48D060 +
mov dword ptr [esp+20h] 0 +
lea edx [ecx+230h] +
mov [esp+2Ch] edx +
mov edx [esp+50h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+1Ch] edx +
mov edx [esp+4Ch] +
mov [esp] eax +
mov [esp+14h] edx +
mov edx [esp+48h] +
mov [esp+8] edx +
mov edx [esp+44h] +
mov [esp+4] edx +
call sub_449C60  +
add esp 3Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+30h] +
mov ecx [eax+0A0h] +
mov [esp] eax +
lea edx [ecx+230h] +
mov [esp+10h] edx +
mov edx [esp+3Ch] +
mov [esp+0Ch] edx +
mov edx [esp+38h] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+4] edx +
call sub_4491C0  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
movzx ecx byte ptr [edx] +
mov eax [eax+1B0h] +
and ecx 3 +
cmp cl 2 +
mov edi [eax+174h] +
movzx esi byte ptr [edi] +
mov eax esi +
movzx eax al +
jz loc_42BB7F  +
mov eax [ebx+0A0h] +
mov ebp [eax+934h] +
mov eax [ebp+1Ch] +
cmp eax 0FFFFFFFFh +
jz loc_42BB87  +
mov edx esi +
movzx esi dl +
mov [ebp+1Ch] eax +
add eax esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [ebp+0] +
test ecx ecx +
jz loc_42BBA0  +
movzx edi byte ptr [edi+1] +
xor eax eax +
mov ecx [ecx] +
add eax edi +
test ecx ecx +
jnz loc_42BB94  +
test eax eax +
jnz loc_42BB75  +
mov eax ebx +
call sub_41F3A0  +
mov edx [ebx+0A0h] +
mov ebp [edx+934h] +
jmp loc_42BB75  +
***
add esi eax +
adc edi edx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] ebx +
call sub_4086D0  +
test eax eax +
jz loc_42BCB2  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
add esi ebp +
mov [esp] esi +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_424D00  +
test eax eax +
jnz loc_42BBDD  +
jmp loc_42BC26  +
***
mov eax [esp+44h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_408570  +
cmp [esp+44h] eax +
setz al  +
add esp 1Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov eax [ebx] +
mov ecx [esi+4] +
mov eax [eax] +
mov eax [eax] +
cmp [eax+4] ecx +
jz loc_42BE98  +
mov eax [ebx+0Ch] +
mov edx [eax+10h] +
mov ecx [eax+0Ch] +
test edx edx +
lea edx [ecx-8] +
jz loc_42BD60  +
cmp edx 38h +
ja loc_42BD88  +
jmp ds:off_48A48C[edx*4]  +
cmp edx 38h +
ja loc_42BD88  +
jmp ds:off_48A570[edx*4]  +
mov eax 6 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_418A00  +
test eax eax +
jnz loc_42BDE5  +
mov eax [ebx+0Ch] +
mov eax [eax+20h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] offset aBUnsupportedRe +
mov [esp+14h+var_C] eax +
call off_4730E4  +
mov [esp+14h+var_14] 11h +
call sub_4029E0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax 0Ch +
lea esi [esi+0] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_418A00  +
mov ecx [ebx+0Ch] +
mov edx [eax+30h] +
cmp [ecx+30h] edx +
jz loc_42BDE5  +
test edx edx +
mov edx [ebx+4] +
jz loc_42BE90  +
add [ebx+8] edx +
mov [ebx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax 0Dh +
jmp loc_42BDC0  +
mov eax 1 +
jmp loc_42BD75  +
mov eax 2 +
jmp loc_42BD75  +
mov eax 3 +
jmp loc_42BD75  +
mov eax 5 +
jmp loc_42BD75  +
mov eax 7 +
jmp loc_42BD75  +
mov eax 8 +
jmp loc_42BDC0  +
mov eax 9 +
jmp loc_42BDC0  +
mov eax 0Ah +
jmp loc_42BDC0  +
mov eax 0Bh +
jmp loc_42BDC0  +
sub [ebx+8] edx +
jmp loc_42BDE5  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov esi [ebx+0A0h] +
and eax 7 +
cmp al 1 +
jz loc_42BED8  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_417A50  +
***
test esi esi +
jz loc_42BECA  +
mov eax [esi+934h] +
test eax eax +
jz loc_42BEF5  +
mov eax [eax+4] +
test eax eax +
jz loc_42BEF5  +
mov [esp] eax +
call sub_44AE70  +
add esi 230h +
mov [esp+4] esi +
mov [esp] ebx +
call sub_449210  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_417A50  +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_0] +
mov esi [esp+9Ch+arg_C] +
mov edi [esp+9Ch+arg_10] +
mov eax [ebx+0A0h] +
mov edx [eax+930h] +
mov eax [edx+8] +
test eax eax +
jnz loc_42BF65  +
mov eax [edx+4] +
mov [esp+9Ch+var_90] eax +
mov eax [esp+9Ch+arg_4] +
lea ebp [esp+9Ch+var_70] +
mov [esp+9Ch+var_98] offset aSD +
mov [esp+9Ch+var_9C] ebp +
mov [esp+9Ch+var_94] eax +
call sprintf  +
mov eax ebp +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_42BF8A  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
sub eax ebp +
lea ecx [eax+1] +
mov [esp+9Ch+var_98] ecx +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_80] ecx +
call sub_404B80  +
mov ecx [esp+9Ch+var_80] +
test eax eax +
jz loc_42C040  +
mov [esp+9Ch+var_94] ecx +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] eax +
mov [esp+9Ch+var_80] eax +
call memcpy  +
mov edx [esp+9Ch+var_80] +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_98] edx +
call sub_4060A0  +
test eax eax +
jz loc_42C040  +
mov edx [esp+9Ch+arg_8] +
mov ecx eax +
mov [eax+50h] esi +
mov [eax+54h] edi +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx [esp+9Ch+arg_4] +
mov eax ebx +
call sub_41FB60  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_4] +
mov esi [esp+9Ch+arg_0] +
mov eax [ebx+8] +
cmp eax 8 +
jz loc_42C120  +
jbe loc_42C0D8  +
cmp eax 9 +
jz loc_42C0B0  +
cmp eax 0Ah +
nop   +
jnz loc_42C110  +
mov eax dword_473780 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg2 +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_41FBD0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_473780 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_41FBD0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 7 +
jnz loc_42C110  +
mov edi [ebx+14h] +
mov eax [ebx+4] +
mov [esp+9Ch+var_9C] esi +
mov [esp+9Ch+var_8C] 0 +
mov [esp+9Ch+var_90] edi +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_info +
call sub_42BF30  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+0A0h] +
mov edi [ebx+10h] +
mov ebp [eax+930h] +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
lea edx [edi+4] +
mov [ebp+4] eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
lea edx [edi+8] +
add edi 0Eh +
mov dword_473780 eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
mov ebp eax +
mov eax [esi+4] +
mov eax [eax+34h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
test ax ax +
jle loc_42C260  +
mov edx [esi+0A0h] +
cwde   +
mov edx [edx+930h] +
mov [edx] eax +
mov eax dword_473780 +
mov [edx+8] eax +
and ebp 80h +
jz loc_42C1A5  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
lea edi [esp+9Ch+var_70] +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_stat +
mov [esp+9Ch+var_9C] edi +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_42C1BF  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx edi +
add edx 1 +
mov [esp+9Ch+var_98] edx +
mov [esp+9Ch+var_9C] esi +
call sub_404B80  +
test eax eax +
mov ebp eax +
jz loc_42C270  +
mov [esp+9Ch+var_98] edi +
mov [esp+9Ch+var_9C] eax +
call strcpy  +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] esi +
call sub_4060A0  +
test eax eax +
jz loc_42C270  +
mov edx [ebx+4] +
mov ecx eax +
mov edi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx offset a_qnx_core_st_0 +
mov [eax+50h] edi +
mov eax esi +
call sub_41FB60  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_473780 +
jmp loc_42C18E  +
xor eax eax +
jmp loc_42C0A3  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov eax [esp+4Ch+arg_0] +
mov edx [ebx+8] +
mov eax [eax+4] +
cmp edx 304h +
mov ecx [eax+1B0h] +
jz loc_42CB80  +
jbe loc_42C348  +
cmp edx 400h +
jz loc_42C6A1  +
ja loc_42C3D2  +
cmp edx 307h +
jz loc_42C8A5  +
nop   +
lea esi [esi+0] +
jbe loc_42C550  +
cmp edx 309h +
jz loc_42CA80  +
jb loc_42C9A8  +
cmp edx 30Ah +
jnz loc_42C461  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsHi +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp edx 100h +
jz loc_42CBD4  +
jbe loc_42C437  +
cmp edx 300h +
jz loc_42C900  +
jbe loc_42C4D8  +
cmp edx 302h +
jz loc_42CAD4  +
ja loc_42C774  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Timer +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp edx 403h +
jz loc_42C954  +
nop   +
jbe loc_42C470  +
cmp edx 46E62B7Fh +
jz loc_42CB28  +
cmp edx 53494749h +
jz loc_42C874  +
cmp edx 46494C45h +
jnz loc_42C461  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxcor +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp edx 3 +
jz loc_42CA61  +
jbe loc_42C5B5  +
cmp edx 0Dh +
jz loc_42CA61  +
cmp edx 12h +
jz loc_42C600  +
cmp edx 6 +
jz loc_42CA00  +
mov ebp 1 +
jmp loc_42C5F3  +
cmp edx 401h +
jz loc_42C720  +
cmp edx 402h +
jnz loc_42C461  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwBre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp edx 102h +
jz loc_42C820  +
cmp edx 202h +
jnz loc_42C461  +
mov eax [ebx] +
cmp eax 6 +
jz loc_42CC28  +
cmp eax 8 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aFreebsd +
mov ecx 8 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXstate +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp edx 305h +
jz loc_42C7C8  +
cmp edx 306h +
jnz loc_42C461  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390LastBr +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp edx 1 +
jz loc_42C6F5  +
cmp edx 2 +
jnz loc_42C461  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_reg2 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+4] 2D7h +
jbe loc_42C461  +
mov esi [ebx+0Ch] +
mov edi offset aWin32 +
mov ecx 5 +
cmps   +
jnz loc_42C461  +
mov edx [ebx+10h] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
cmp eax 2 +
jz loc_42CCF5  +
cmp eax 3 +
jz loc_42CC4F  +
cmp eax 1 +
jnz loc_42C461  +
mov eax [esp+4Ch+arg_0] +
mov ebp 1 +
mov edi [ebx+10h] +
mov eax [eax+0A0h] +
lea edx [edi+8] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [ebx+10h] +
add edx 0Ch +
mov [esi+4] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+0A0h] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esi] eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regArmVfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
mov eax [ecx+0FCh] +
mov ebp 1 +
test eax eax +
jz loc_42C5F3  +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call eax  +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchTls +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todpre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Prefix +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVsx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxc_0 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390System +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390HighGp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov esi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwWat +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Tdb +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
mov eax [esp+4Ch+arg_0] +
xor ebp ebp +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] offset a_auxv +
mov [esp+4Ch+var_4C] eax +
call sub_4060A0  +
test eax eax +
mov esi eax +
jz loc_42C5F3  +
mov eax [ebx+4] +
mov bp 1 +
mov [esi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call loc_402EC0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [esi+40h] eax +
jmp loc_42C5F3  +
mov eax [ecx+100h] +
mov ebp 1 +
test eax eax +
jnz loc_42C708  +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsLo +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todcmp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Ctrs +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C5F3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVmx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42BF30  +
mov ebp eax +
jmp loc_42C5F3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
mov ebp 1 +
cmps   +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_42C5F3  +
jmp loc_42C51E  +
mov eax [esp+4Ch+arg_0] +
lea esi [esp+4Ch+var_2A] +
mov edi [ebx+10h] +
mov eax [eax+4] +
lea edx [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_module08lx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
test eax eax +
mov edi eax +
jz loc_42CDCF  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_4060A0  +
test eax eax +
jz loc_42CDCF  +
mov edx [ebx+4] +
mov ebp 1 +
mov esi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov [eax+50h] esi +
jmp loc_42C5F3  +
mov eax [esp+4Ch+arg_0] +
mov esi [ebx+10h] +
mov eax [eax+4] +
lea edx [esi+8] +
lea esi [esp+4Ch+var_2A] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_regLd +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_404B80  +
test eax eax +
mov edi eax +
jz loc_42CDCF  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_4060A0  +
test eax eax +
mov esi eax +
jz loc_42CDCF  +
mov dword ptr [eax+24h] 2CCh +
mov eax [ebx+14h] +
mov edx [ebx+10h] +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+40h] 2 +
add eax 0Ch +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
add edx 8 +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
test eax eax +
jz loc_42C461  +
mov eax [esp+4Ch+arg_0] +
mov ecx esi +
mov edx offset a_reg +
call sub_41FB60  +
test eax eax +
setnz al  +
movzx eax al +
mov ebp eax +
jmp loc_42C5F3  +
xor ebp ebp +
jmp loc_42C5F3  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_8] ebx +
call memchr  +
mov edx eax +
sub edx edi +
test eax eax +
cmovnz ebx edx +
lea eax [ebx+1] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_404B80  +
test eax eax +
mov esi eax +
jz loc_42CE38  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call memcpy  +
mov byte ptr [esi+ebx] 0 +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_42CE50  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov edx [ebx+8] +
cmp edx 0Ah +
jz loc_42CF48  +
cmp edx 14h +
jz loc_42CFC0  +
cmp edx 15h +
jz loc_42CFF0  +
cmp edx 16h +
jz loc_42D020  +
cmp edx 0Bh +
jz loc_42CEF0  +
cmp edx 17h +
mov edi 1 +
jz loc_42CEA0  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_wcookie +
mov [esp+2Ch+var_2C] esi +
call sub_4060A0  +
test eax eax +
mov ebp eax +
jz loc_42D050  +
mov eax [ebx+4] +
mov [ebp+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [ebp+54h] 0 +
mov [ebp+50h] eax +
mov [esp+2Ch+var_2C] esi +
call loc_402EC0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [ebp+40h] eax +
jmp loc_42CE95  +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_auxv +
mov [esp+2Ch+var_2C] esi +
call sub_4060A0  +
test eax eax +
mov edi eax +
jz loc_42D050  +
mov eax [ebx+4] +
mov [edi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov [esp+2Ch+var_2C] esi +
call loc_402EC0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [edi+40h] eax +
mov edi 1 +
jmp loc_42CE95  +
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+20h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov [esp+2Ch+var_24] 1Fh +
mov eax [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
add eax 48h +
mov [esp+2Ch+var_28] eax +
call sub_42CDE0  +
mov [edi+10h] eax +
mov edi 1 +
jmp loc_42CE95  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42BF30  +
mov edi eax +
jmp loc_42CE95  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42BF30  +
mov edi eax +
jmp loc_42CE95  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_regXfp +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42BF30  +
mov edi eax +
jmp loc_42CE95  +
xor edi edi +
jmp loc_42CE95  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov dword ptr [esp+4] 40h +
mov esi [esp+30h] +
mov eax [ebx+0Ch] +
mov [esp] eax +
call strchr  +
test eax eax +
jz loc_42D09F  +
add eax 1 +
mov [esp] eax +
call atoi  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
mov edx [ebx+8] +
cmp edx 1 +
jz loc_42D155  +
cmp edx 1Fh +
mov edi 1 +
ja loc_42D0C0  +
add esp 20h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] esi +
call sub_407150  +
cmp eax 6 +
jz loc_42D110  +
cmp eax 26h +
jz loc_42D110  +
mov eax [ebx+8] +
cmp eax 21h +
jz loc_42D124  +
cmp eax 23h +
jnz loc_42D0B5  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg2 +
call sub_42BF30  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [ebx+8] +
cmp eax 20h +
jz loc_42D124  +
cmp eax 22h +
jz loc_42D0DF  +
mov edi 1 +
jmp loc_42D0B5  +
***
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg +
call sub_42BF30  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+50h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov dword ptr [esp+8] 1Fh +
mov eax [ebx+10h] +
mov [esp] esi +
add eax 7Ch +
mov [esp+4] eax +
call sub_42CDE0  +
mov ecx [ebx+14h] +
mov [edi+10h] eax +
mov eax [ebx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+4] offset a_note_netbsdco +
mov [esp+8] eax +
mov [esp] esi +
call sub_42BF30  +
mov edi eax +
jmp loc_42D0B5  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_18] +
test edx edx +
jz loc_42D316  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea esi [eax+1] +
add eax 4 +
and eax 0FFFFFFFCh +
lea edx [ebx+3] +
and edx 0FFFFFFFCh +
lea ecx [eax+edx+0Ch] +
mov edx [esp+1Ch+arg_8] +
mov eax ecx +
mov [esp+1Ch+var_10] ecx +
add eax [edx] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call realloc  +
test eax eax +
mov ebp eax +
jz loc_42D30C  +
mov eax [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax] +
lea edi [ebp+eax+0] +
add ecx eax +
mov eax [esp+1Ch+arg_8] +
mov [eax] ecx +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+4] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+8] +
add edi 0Ch +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov ecx [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] ecx +
call eax  +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_42D2E1  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] eax +
call memcpy  +
lea ecx [edi+esi] +
test esi 3 +
mov edi ecx +
jz loc_42D2E1  +
add edi 1 +
lea eax [edi+esi] +
sub eax ecx +
test al 3 +
mov byte ptr [edi-1] 0 +
jnz loc_42D2D1  +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] edi +
add edi ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test bl 3 +
jz loc_42D30C  +
sub edi ebx +
nop   +
mov byte ptr [edi+ebx] 0 +
add ebx 1 +
test bl 3 +
jnz loc_42D300  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor esi esi +
jmp loc_42D21C  +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_42D371  +
mov ecx [esp+40h] +
mov dword ptr [esp+0Ch] 3 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_42D371  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_42D36C  +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 1Fh +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0CCh] +
lea ebp [esp+24h] +
mov edi ebp +
mov esi [esp+0C0h] +
stos   +
lea ecx [esp+28h] +
movzx eax byte ptr [ebx] +
mov edx [ebx+4] +
mov [esp+24h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+25h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+26h] al +
movzx eax byte ptr [ebx+3] +
mov [esp+27h] al +
mov eax [esi+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Ch] +
mov edx [ebx+8] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Eh] +
mov edx [ebx+0Ch] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+30h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+38h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+3Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+40h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0C8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 7Ch +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_42D1F0  +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 22h +
push esi  +
push ebx  +
sub esp 0BCh +
mov ebx [esp+0DCh] +
lea ebp [esp+28h] +
mov edi ebp +
mov esi [esp+0D0h] +
stos   +
lea edx [esp+2Ch] +
movzx eax byte ptr [ebx] +
mov [esp+28h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+29h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+2Ah] al +
movzx eax byte ptr [ebx+3] +
mov [esp+2Bh] al +
mov eax [esi+4] +
mov eax [eax+48h] +
mov [esp+8] edx +
mov edi [ebx+4] +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call eax  +
mov eax [esi+4] +
lea ecx [esp+38h] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+3Ch] +
mov edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+40h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+44h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+48h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+4Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+50h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+60h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0D8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 88h +
mov [esp+8] eax +
mov eax [esp+0D4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_42D1F0  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_42D6B0  +
mov ecx [esp+44h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+18h] ecx +
mov ecx [esp+40h] +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_42D6B0  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_42D6A4  +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 46E62B7Fh +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov edx [esp+30h] +
mov eax [edx+4] +
mov ecx [eax+1B0h] +
mov eax offset aFreebsd +
cmp dword ptr [ecx+0Ch] 9 +
mov ecx offset aLinux +
mov dword ptr [esp+10h] 202h +
mov [esp] edx +
cmovnz eax ecx +
mov ecx [esp+40h] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+18h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+14h] ecx +
mov [esp+4] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 100h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 102h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 301h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 302h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 303h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 304h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 305h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 306h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 307h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 308h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 309h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 30Ah +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 400h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 401h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 402h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 403h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 2Ch +
retn   +
***
push ebp  +
mov ecx 6 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov edi [esp+64h] +
mov ebp [esp+58h] +
mov ebx [esp+60h] +
mov [esp+24h] eax +
mov eax [esp+54h] +
mov [esp+2Ch] edi +
mov edi offset a_reg2 +
mov [esp+28h] eax +
mov eax [esp+5Ch] +
mov esi eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_42DEA7  +
mov edi offset a_regXfp +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_42DF30  +
mov edi offset a_regXstate +
mov ecx 0Ch +
mov esi eax +
cmps   +
jz loc_42DEE3  +
mov edi offset a_regPpcVmx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_42DF46  +
mov edi offset a_regPpcVsx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_42DF60  +
mov edi offset a_regS390HighGp +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_42DF76  +
mov edi offset a_regS390Timer +
mov ecx 10h +
mov esi eax +
cmps   +
jz loc_42DF10  +
mov edi offset a_regS390Todcmp +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_42DFB0  +
mov edi offset a_regS390Todpre +
mov ecx 12h +
mov esi eax +
cmps   +
jz loc_42DFD0  +
mov edi offset a_regS390Ctrs +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_42DFF0  +
mov edi offset a_regS390Prefix +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_42E010  +
mov edi offset a_regS390LastBr +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_42E030  +
mov edi offset a_regS390System +
mov ecx 16h +
mov esi eax +
cmps   +
jz loc_42DF90  +
mov edi offset a_regS390Tdb +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_42E050  +
mov edi offset a_regS390VxrsLo +
mov ecx 13h +
mov esi eax +
cmps   +
jz loc_42E069  +
mov edi offset a_regS390VxrsHi +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_42E082  +
mov edi offset a_regArmVfp +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_42E09B  +
mov edi offset a_regAarchTls +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_42E0B4  +
mov edi offset a_regAarchHwBre +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_42E0CD  +
mov esi eax +
mov ecx 14h +
mov edi offset a_regAarchHwWat +
cmps   +
setnbe al  +
setb cl  +
mov esi eax +
xor eax eax +
mov edx esi +
cmp dl cl +
jnz loc_42DEDB  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 403h +
mov [esp+18h] eax +
jmp loc_42DF24  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+28h] +
mov [esp+8] ebp +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_42D1F0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+2Ch] +
mov [esp+5Ch] ebx +
mov [esp+58h] ebp +
mov [esp+60h] eax +
mov eax [esp+28h] +
mov [esp+54h] eax +
mov eax [esp+24h] +
mov [esp+50h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_42D760  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 301h +
mov [esp+18h] eax +
mov dword ptr [esp+0Ch] offset aLinux +
jmp loc_42DEC3  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 46E62B7Fh +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 100h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 102h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 300h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 307h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 302h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 303h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 304h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 305h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 306h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 308h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 309h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 30Ah +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 400h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 401h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 402h +
mov [esp+18h] eax +
jmp loc_42DF24  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_42E110  +
mov eax [eax+0A0h] +
mov eax [eax+30h] +
shl eax 5 +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
jmp loc_42E10C  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_42E170  +
mov eax [eax+0A0h] +
mov ebx [eax+30h] +
mov eax [eax+44h] +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+24h] +
shl edx 5 +
mov [esp+8] edx +
mov [esp] eax +
call memcpy  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4029E0  +
mov eax 0FFFFFFFFh +
jmp loc_42E168  +
***
xor eax eax +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov eax [esp+10h+arg_4] +
mov ebx [edi] +
mov edx [eax] +
mov ecx [ebx+3Ch] +
mov esi [ebx+38h] +
add esi edx +
add esi [ecx+1Ch] +
test byte ptr [ebx+16h] 80h +
jz loc_42E1CE  +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_42E1D7  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jnz loc_42E1CE  +
mov eax [ebx+8Ch] +
mov ecx [esp+10h+arg_C] +
mov eax [eax+88h] +
add edx [ecx+8] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] edx +
mov [esp+10h+var_10] eax +
call sub_44D800  +
mov edx [edi] +
mov ecx [esp+10h+arg_C] +
cmp edx ebx +
mov [ecx+8] eax +
jz loc_42E228  +
test byte ptr [ebx+15h] 80h +
jz loc_42E240  +
mov [ebx+7Ch] edx +
mov ebx [edi] +
mov ecx [ebx+3Ch] +
mov edx [ebx+38h] +
mov edi [esp+10h+arg_C] +
add edx [ecx+1Ch] +
sub edx esi +
add eax edx +
mov [edi+8] eax +
jmp loc_42E1CE  +
mov ebx edx +
jmp loc_42E228  +
***
push ebx  +
mov ecx [esp+arg_8] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
mov ebx [ecx] +
movzx edx word ptr [ebx+18h] +
and dx 380h +
cmp dx 100h +
jz loc_42E277  +
add eax [esi] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+8Ch] +
add eax [esi] +
mov edx [edx+88h] +
mov [esp+arg_C] eax +
mov [esp+arg_4] ecx +
mov [esp+arg_8] edx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_44D800  +
***
mov ecx [esp+arg_8] +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
movzx edx word ptr [ecx+18h] +
shr dx 7 +
and edx 7 +
cmp edx 1 +
jz loc_42E310  +
cmp edx 3 +
jnz loc_42E2E0  +
mov [esp+arg_C] eax +
mov [esp+arg_8] ecx +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
jmp sub_444430  +
test byte ptr [ecx+17h] 4 +
jz loc_42E308  +
mov edx [ecx+24h] +
sub edx eax +
mov eax edx +
mov edx [ebx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx edx byte ptr [edx+0Ah] +
shr dl 3 +
movzx edx dl +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
mov edx [ecx+8Ch] +
mov edx [edx+88h] +
mov [esp+arg_8] eax +
mov [esp+arg_0] ecx +
mov [esp+arg_4] edx +
pop ebx  +
pop esi  +
jmp loc_44E860  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+13Ch] +
jmp edx  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov eax [esi+4] +
mov edi [eax+1B0h] +
mov eax [esp+84h] +
mov dword ptr [eax] 0 +
mov eax [esi+28h] +
shr eax 5 +
test al 42h +
jz loc_42E3C4  +
mov ebx [esp+7Ch] +
test ebx ebx +
jle loc_42E3C4  +
mov ecx [edi+140h] +
test ecx ecx +
jz loc_42E3C4  +
mov eax [edi+168h] +
test eax eax +
jz loc_42E650  +
mov [esp+4] eax +
mov [esp] esi +
call sub_405CC0  +
test eax eax +
mov ebp eax +
jz loc_42E3C4  +
mov ebx [eax+8Ch] +
mov eax [esi+0A0h] +
mov eax [eax+910h] +
cmp [ebx+1Ch] eax +
jz loc_42E3D0  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+4] +
cmp eax 4 +
jz loc_42E3DD  +
cmp eax 9 +
jnz loc_42E3C4  +
mov dword ptr [esp+4] offset a_plt +
mov [esp] esi +
call sub_405CC0  +
test eax eax +
mov [esp+24h] eax +
jz loc_42E3C4  +
mov eax [esi+4] +
mov edx [esp+80h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] ebp +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_42E682  +
mov eax [ebp+24h] +
xor edx edx +
div  dword ptr [ebx+28h] +
mov edx [ebp+44h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [eax+eax*2] +
shl eax 3 +
test ecx ecx +
mov ebx eax +
mov [esp+18h] eax +
jle loc_42E679  +
mov eax [edi+174h] +
xor ecx ecx +
mov [esp+20h] edi +
mov [esp+28h] ebp +
mov ebp edx +
mov [esp+70h] esi +
mov esi ecx +
movzx eax byte ptr [eax+9] +
shl eax 4 +
mov edi eax +
mov eax [ebp+0] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp] eax +
call strlen  +
mov edx [ebp+8] +
add eax ebx +
lea ebx [eax+5] +
add eax 10h +
test edx edx +
cmovnz ebx eax +
add esi 1 +
add ebp edi +
cmp [esp+1Ch] esi +
jnz loc_42E471  +
mov edi [esp+20h] +
mov ebp [esp+28h] +
mov esi [esp+70h] +
mov [esp] ebx +
call sub_407460  +
mov ebx eax +
mov eax [esp+84h] +
test ebx ebx +
mov [eax] ebx +
jz loc_42E682  +
mov eax [esp+18h] +
mov ecx [ebp+44h] +
mov ebp [esp+1Ch] +
add eax ebx +
test ebp ebp +
jle loc_42E3C4  +
mov [esp+20h] edi +
mov edi eax +
mov [esp+70h] esi +
mov esi ecx +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_42E532  +
add dword ptr [esp+2Ch] 1 +
add edi 5 +
add ebx 18h +
mov dword ptr [edi-5] 746C7040h +
mov byte ptr [edi-1] 0 +
mov eax [esp+20h] +
add dword ptr [esp+18h] 1 +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
shl eax 4 +
add esi eax +
mov eax [esp+18h] +
cmp [esp+1Ch] eax +
jz loc_42E670  +
mov ecx [esp+24h] +
mov eax [esp+20h] +
mov eax [eax+140h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp+8] esi +
mov [esp] ecx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_42E50C  +
mov ecx [esi] +
mov edx [ecx] +
mov [esp+28h] ecx +
mov ebp [edx] +
mov [ebx] ebp +
mov ebp [edx+4] +
mov [ebx+4] ebp +
mov ebp [edx+8] +
mov [ebx+8] ebp +
mov ebp [edx+0Ch] +
mov [ebx+0Ch] ebp +
mov ecx [edx+10h] +
test ebp 1 +
mov [ebx+10h] ecx +
mov edx [edx+14h] +
mov [ebx+14h] edx +
jnz loc_42E58B  +
or ebp 2 +
mov edx [esp+24h] +
or ebp 200000h +
mov [ebx+0Ch] ebp +
sub eax [edx+1Ch] +
mov [ebx+10h] edx +
mov [ebx+4] edi +
mov [ebx+8] eax +
mov eax [esp+28h] +
mov dword ptr [ebx+14h] 0 +
mov eax [eax] +
mov edx [eax+4] +
mov [esp] edx +
mov [esp+28h] edx +
call strlen  +
mov edx [esp+28h] +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov edx [esi+8] +
add edi ebp +
test edx edx +
jz loc_42E4F6  +
mov eax 302Bh +
mov [edi] ax +
lea eax [edi+3] +
mov byte ptr [edi+2] 78h +
lea edi [esp+32h] +
mov [esp+28h] eax +
mov eax [esi+8] +
mov [esp+8] eax +
lea eax [esp+32h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_4032F0  +
cmp byte ptr [esp+32h] 30h +
jnz loc_42E628  +
lea esi [esi+0] +
add edi 1 +
cmp byte ptr [edi] 30h +
jz loc_42E620  +
mov [esp] edi +
call strlen  +
mov [esp+4] edi +
mov edi [esp+28h] +
mov [esp] edi +
mov ebp eax +
mov [esp+8] eax +
lea edi [edi+ebp] +
call memcpy  +
jmp loc_42E4F6  +
***
test byte ptr [edi+1ACh] 20h +
mov eax offset a_rela_plt +
mov edx offset a_rel_plt +
cmovz eax edx +
jmp loc_42E39B  +
***
mov eax [esp+2Ch] +
jmp loc_42E3C6  +
***
mov ebx [esp+18h] +
jmp loc_42E4A8  +
***
mov eax 0FFFFFFFFh +
jmp loc_42E3C6  +
***
mov eax [esp+4] +
and eax 0FFFFFFF7h +
cmp eax 2 +
setz al  +
movzx eax al +
retn   +
***
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [eax+78h] +
test byte ptr [edx+34h] 10h +
jnz loc_42E76E  +
movzx ebx byte ptr [eax] +
and ebx 3 +
cmp bl 2 +
jz loc_42E76E  +
test byte ptr [eax+1] 4 +
jz loc_42E764  +
cmp byte ptr [edx+30h] 1 +
jz loc_42E797  +
test ecx ecx +
jz loc_42E764  +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 1 +
jz loc_42E797  +
test esi esi +
jz loc_42E76E  +
cmp byte ptr [edx+0Ch] 0 +
jz loc_42E774  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+4] +
mov eax [esi+10h] +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_14] esi +
call eax  +
mov edx [esp+14h+var_8] +
test eax eax +
jz loc_42E76E  +
or byte ptr [edx+34h] 10h +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_42E7B0  +
***
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+18h] +
sub eax [edx+18h] +
cmp eax 0 +
jz loc_42E7D6  +
mov eax 0FFFFFFFFh +
jle loc_42E7D4  +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ecx+14h] +
mov ebx [edx+14h] +
mov eax [eax+4] +
sub eax [ebx+4] +
cmp eax 0 +
jz loc_42E7F0  +
jg loc_42E7CF  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
mov ecx [ecx+2Ch] +
xor eax eax +
sub ecx [edx+2Ch] +
cmp ecx 0 +
jz loc_42E7D4  +
jg loc_42E7CF  +
jmp loc_42E7E9  +
***
jmp loc_42E810  +
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+10h] +
sub eax [edx+10h] +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
or eax ecx +
shl edx 18h +
or eax edx +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
mov eax [esp+arg_0] +
movzx ecx byte ptr [eax+1] +
movzx edx byte ptr [eax+2] +
shl ecx 8 +
shl edx 10h +
or edx ecx +
movzx ecx byte ptr [eax] +
movzx eax byte ptr [eax+3] +
or edx ecx +
shl eax 18h +
or eax edx +
retn   +
***
mov ecx [esp+arg_0] +
movzx eax byte ptr [ecx+4] +
movzx edx byte ptr [ecx+7] +
shl eax 18h +
or eax edx +
movzx edx byte ptr [ecx+5] +
shl edx 10h +
or edx eax +
movzx eax byte ptr [ecx+6] +
shl eax 8 +
or eax edx +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+44h] +
test eax eax +
jz loc_42E988  +
mov edx [eax+8] +
test edx edx +
jz loc_42E988  +
cmp edx 0FFFFFFFFh +
jz loc_42E988  +
mov eax [eax+4] +
test eax eax +
jz loc_42E91F  +
mov ebx [eax-4] +
test ebx ebx +
jnz loc_42E988  +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
call sub_42E8F0  +
mov eax [edi+44h] +
mov esi [eax+4] +
test esi esi +
jz loc_42E994  +
mov eax [eax+8] +
mov dword ptr [esi-4] 1 +
mov eax [eax+44h] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_42E988  +
mov edx [edi+14h] +
mov edx [edx+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+0Bh] +
mov edx [eax] +
shr edx cl +
test edx edx +
jz loc_42E988  +
xor eax eax +
mov ecx [ebx+eax*4] +
test ecx ecx +
jz loc_42E981  +
mov dword ptr [esi+eax*4] 1 +
add eax 1 +
cmp eax edx +
jnz loc_42E973  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [eax+8] +
mov edx [edx+44h] +
mov ecx [edx+4] +
mov edx [edx] +
mov [eax+4] ecx +
mov [eax] edx +
jmp loc_42E988  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_4] +
mov edx [esp+20h+arg_0] +
mov eax [ebx+4] +
mov ecx [eax+30h] +
mov edi [ecx+4] +
mov esi [edi+1B0h] +
mov edi [edx+24h] +
test edi edi +
jg loc_42E9E7  +
mov dword ptr [edx+24h] 0FFFFFFFFh +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi [ebx] +
mov [edx+24h] edi +
mov esi [esi+180h] +
mov [esp+20h+var_10] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ecx +
call esi  +
add edi eax +
mov eax 1 +
mov [ebx] edi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov ebx [esp+10h+arg_0] +
mov esi [edx+24h] +
mov ecx [edx] +
mov eax [edx+4] +
test esi esi +
jz loc_42EA3F  +
mov [edx+4] ecx +
mov eax ecx +
mov edi [edx+8] +
cmp eax edi +
jnb loc_42EA60  +
test esi esi +
mov ecx [eax] +
jnz loc_42EA50  +
cmp ecx ebx +
ja loc_42EA60  +
cmp ebx ecx +
jz loc_42EA70  +
add eax 0Ch +
cmp eax edi +
mov [edx+4] eax +
jb loc_42EA46  +
nop   +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jz loc_42EABB  +
cmp eax [edx+14h] +
jb loc_42EAC7  +
mov ecx [edx+1Ch] +
sub eax [edx+18h] +
mov eax [ecx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
ja loc_42EAA5  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
jbe loc_42EA96  +
sub ecx 3 +
cmp cl 1 +
ja loc_42EA60  +
mov eax [eax+14h] +
mov edi [edx+10h] +
cmp [eax+94h] edi +
jz loc_42EAF5  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+0Ch] +
lea ebx [eax+eax*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_42EA81  +
mov ecx [ebx+10h] +
mov eax [edx+10h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_423710  +
test eax eax +
jz loc_42EA60  +
mov edx [eax+7Ch] +
test edx edx +
jnz loc_42EABB  +
cmp eax offset off_473270 +
jz loc_42EA60  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jnz loc_42EA60  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42EA60  +
cmp ax 200h +
setnz al  +
movzx eax al +
jmp loc_42EAC0  +
***
push edi  +
push ebx  +
mov ebx eax +
sub esp 14h +
mov ecx [eax] +
test ecx ecx +
jz loc_42EC52  +
mov eax [edx+8Ch] +
cmp ecx [eax+68h] +
jz loc_42EC52  +
mov [esp+18h+var_18] ecx +
call free  +
mov eax [ebx+0Ch] +
mov edx [esi+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_42EC72  +
cmp eax [edx+78h] +
jz loc_42EC72  +
mov [esp+18h+var_18] eax +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_4] +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42ECAA  +
mov [esp+18h+var_14] 1AA1h +
mov [esp+18h+var_18] offset a____Binutils_4 +
call sub_402930  +
and word ptr [ebx+18h] 0FC7Fh +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
test byte ptr [eax+5] 8 +
mov [esp+4Ch+var_24] edx +
mov [esp+4Ch+var_30] ecx +
jz loc_42EEA0  +
mov eax [eax+1Ch] +
mov ebx [eax+4Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_20] eax +
mov eax ecx +
shr eax 2 +
test eax eax +
mov edi eax +
jnz loc_42EE6B  +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+arg_0] +
add eax eax +
test edx edx +
mov [esp+4Ch+var_14] eax +
jnz loc_42EEF9  +
mov [esp+4Ch+var_34] eax +
mov edi 1 +
lea esi [esi+0] +
mov esi [esp+4Ch+var_34] +
mov eax esi +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_42EF08  +
cmp edi esi +
jnb loc_42EE57  +
lea edx ds:0[edi*4] +
mov esi [esp+4Ch+var_30] +
add ebx 2 +
mov [esp+4Ch+var_3C] edx +
mov edx [esp+4Ch+var_24] +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_10] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0FFFFFFFFh +
lea edx [edx+esi*4] +
mov esi edi +
mov [esp+4Ch+var_18] edx +
mov [esp+4Ch+var_1C] ebx +
nop   +
mov edi [esp+4Ch+arg_0] +
test edi edi +
jz loc_42ED94  +
test esi 1Fh +
jz loc_42EE45  +
mov eax [esp+4Ch+var_3C] +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_44] eax +
call memset  +
mov ebx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
test ebx ebx +
jz loc_42EDD2  +
mov ebx [esp+4Ch+var_18] +
lea esi [esi+0] +
mov eax [ecx] +
xor edx edx +
add ecx 4 +
div  esi +
add dword ptr [ebp+edx*4+0] 1 +
cmp ecx ebx +
jnz loc_42EDC0  +
mov eax [esp+4Ch+var_20] +
xor ebx ebx +
xor edi edi +
mov ecx [esp+4Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
imul ecx eax +
mov [esp+4Ch+var_38] eax +
nop   +
mov eax [ebp+edi*4+0] +
xor edx edx +
imul eax eax +
add ecx eax +
adc ebx edx +
add edi 1 +
cmp edi esi +
jb loc_42EDF0  +
mov eax 1000h +
cdq   +
idiv  [esp+4Ch+var_38] +
xor edx edx +
mov edi eax +
mov eax esi +
div  edi +
add eax 1 +
imul eax eax +
imul ebx eax +
mul  ecx +
add edx ebx +
cmp edx [esp+4Ch+var_28] +
jb loc_42EEE0  +
ja loc_42EE39  +
cmp eax [esp+4Ch+var_10] +
jb loc_42EEE0  +
add [esp+4Ch+var_2C] 1 +
cmp [esp+4Ch+var_2C] 64h +
jz loc_42EE57  +
add esi 1 +
add [esp+4Ch+var_3C] 4 +
cmp [esp+4Ch+var_34] esi +
ja loc_42ED80  +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax [esp+4Ch+var_14] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+4Ch+arg_0] +
mov eax ecx +
add eax eax +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_34] eax +
test ebp ebp +
jz loc_42ED20  +
cmp edi 1 +
jz loc_42EEF9  +
mov eax [esp+4Ch+var_14] +
and eax 1Fh +
cmp eax 1 +
adc [esp+4Ch+var_14] 0 +
jmp loc_42ED20  +
mov eax 1 +
xor ecx ecx +
mov ebx [esp+4Ch+var_30] +
jmp loc_42EEB2  +
mov eax edx +
add ecx 1 +
mov edx ds:dword_48C240[ecx*4] +
cmp ebx edx +
jb loc_42EEC4  +
test edx edx +
jnz loc_42EEB0  +
cmp eax 1 +
ja loc_42EE63  +
mov ecx [esp+4Ch+arg_0] +
test ecx ecx +
jz loc_42EE63  +
add esp 4Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_10] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_14] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_42EE45  +
mov eax [esp+4Ch+var_14] +
mov edi 2 +
mov [esp+4Ch+var_34] eax +
jmp loc_42EE88  +
xor eax eax +
jmp loc_42EE63  +
***
mov eax [esp+8] +
mov eax [eax+4] +
mov [esp+8] eax +
mov eax [esp+4] +
mov eax [eax+4] +
mov [esp+4] eax +
jmp strcmp  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
test byte ptr [edx] 1 +
mov [esp+34h+var_18] 0 +
jnz loc_42EF54  +
mov eax [edx+1Ch] +
xor edx edx +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_42EFCF  +
mov ebx [edi+64h] +
mov eax [edi+4] +
test ebx ebx +
mov ebp [eax+1B0h] +
jnz loc_42EF84  +
jmp loc_42F042  +
mov eax [ebx+8Ch] +
mov ebx [ebx+0Ch] +
mov dword ptr [eax+60h] 0 +
test ebx ebx +
jz loc_42EFC8  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_42EF70  +
mov eax [ebp+70h] +
mov [esp+34h+var_28] ecx +
mov [esp+34h+var_2C] ebx +
mov [esp+34h+var_30] esi +
mov [esp+34h+var_34] edi +
call eax  +
mov ecx [esp+34h+var_28] +
test eax eax +
jnz loc_42EF70  +
mov edx [ebx+8Ch] +
mov eax [esp+34h+var_18] +
mov ebx [ebx+0Ch] +
add eax 1 +
test ebx ebx +
mov [esp+34h+var_18] eax +
mov [edx+60h] eax +
jnz loc_42EF84  +
mov edx [esp+34h+var_18] +
mov eax [esi+1Ch] +
lea edi [esp+34h+var_18] +
mov [ecx] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] offset loc_42F9C0 +
call sub_419B50  +
mov ebx [esi+1Ch] +
mov eax [ebx+0C0h] +
test eax eax +
jz loc_42F012  +
mov ecx [esp+34h+var_18] +
lea edx [ecx+1] +
jmp loc_42F002  +
mov edx ecx +
mov [eax+0Ch] edx +
mov eax [eax] +
lea ecx [edx+1] +
test eax eax +
jnz loc_42F000  +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_30] offset sub_42F990 +
call sub_419B50  +
mov edx [esp+34h+var_18] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
mov edx [esi+1Ch] +
cmovnz eax ecx +
mov [edx+4Ch] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
xor edx edx +
jmp loc_42EFCF  +
***
mov eax [esp+34h] +
mov dword ptr [eax+4] 1 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and ebx 1 +
jnz loc_42F1F0  +
or byte ptr [edx+34h] 1 +
mov eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+4] 48h +
mov [esp] ebx +
call sub_408EF0  +
test eax eax +
jnz loc_42F141  +
xor eax eax +
jmp loc_42F1B0  +
***
mov byte ptr [edx+2Ch] 0 +
lea ecx [edx+2Dh] +
mov bl 1Bh +
jmp loc_42F184  +
***
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_42F189  +
***
mov byte ptr [ecx] 0 +
jmp loc_42F1AA  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+9Ch] +
mov eax [esi+50h] +
test eax eax +
jz loc_42F21E  +
mov [esp+14h+var_14] eax +
call sub_44AE70  +
mov eax [esi+7Ch] +
mov [esp+14h+var_14] eax +
call sub_44D9E0  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_418F60  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [eax+94h] +
mov esi [edx+94h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
jz loc_42F266  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+4] +
cmp dword ptr [edi+4] 5 +
jnz loc_42F25C  +
mov edi [edx+8Ch] +
mov ebp [eax+8Ch] +
mov edi [edi+4] +
cmp [ebp+4] edi +
jnz loc_42F25C  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_30] ecx +
mov [esp+5Ch+var_34] edx +
call sub_424C30  +
mov edx [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] edx +
mov edi eax +
mov [esp+5Ch+var_2C] eax +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
mov [esp+5Ch+var_28] eax +
jz loc_42F25C  +
cmp edi 0FFFFFEFFh +
jz loc_42F25C  +
mov eax [ebx+0A0h] +
xor edx edx +
mov ecx eax +
mov [esp+5Ch+var_34] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
mov ecx [esi+0A0h] +
div  edi +
xor edx edx +
mov [esp+5Ch+var_18] ecx +
mov [esp+5Ch+var_20] eax +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
div  edi +
test eax eax +
mov ebp eax +
jz loc_42F25C  +
mov eax [esp+5Ch+var_20] +
test eax eax +
jz loc_42F25C  +
mov eax [esp+5Ch+var_34] +
lea edx [ecx+48h] +
mov [esp+5Ch+var_14] edx +
mov [esp+5Ch+var_1C] 0 +
mov edi [eax+24Ch] +
mov eax [ecx+24Ch] +
mov ecx [esp+5Ch+var_30] +
test edi edi +
mov [esp+5Ch+var_24] eax +
jz loc_42F4F8  +
test edi edi +
jz loc_42F47C  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_30] 0 +
test eax eax +
jz loc_42F47C  +
mov ecx [esp+5Ch+var_24] +
test ecx ecx +
jz loc_42F58D  +
test edi edi +
jz loc_42F58D  +
mov [esp+5Ch+var_20] ebx +
mov ebp [edi+4] +
lea eax [edi+0Ch] +
mov ebx [esp+5Ch+var_2C] +
xor edx edx +
mov [esp+5Ch+var_14] esi +
mov esi eax +
mov [esp+5Ch+var_10] eax +
lea esi [esi+0] +
cmp edx ebp +
jnb loc_42F3DB  +
lea eax [ebp+edx+0] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_42F3CE  +
cmp edx eax +
mov ebp eax +
jnb loc_42F3DB  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_42F3B7  +
cmp ebx ecx +
jbe loc_42F5E9  +
lea edx [eax+1] +
jmp loc_42F3A0  +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_2C] 0 +
mov eax [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_24] ebx +
mov ebx [esp+5Ch+var_28] +
mov [esp+5Ch+var_20] esi +
mov ebp [eax+4] +
add eax 0Ch +
mov esi eax +
cmp ebp edx +
jbe loc_42F447  +
lea eax [edx+ebp] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_42F432  +
cmp edx eax +
mov ebp eax +
jnb loc_42F447  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_42F41B  +
cmp ebx ecx +
jbe loc_42F601  +
lea edx [eax+1] +
jmp loc_42F405  +
mov [esp+5Ch+var_30] 0 +
xor edi edi +
mov eax [esp+5Ch+var_1C] +
test eax eax +
jz loc_42F459  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov esi [esp+5Ch+var_30] +
mov eax edi +
test esi esi +
jz loc_42F25E  +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_34] edi +
call free  +
mov eax [esp+5Ch+var_34] +
jmp loc_42F25E  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_10] ecx +
call sub_420CB0  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_42F447  +
test edi edi +
jz loc_42F58D  +
mov ecx [esp+5Ch+var_10] +
cmp byte ptr [ecx+3] 0 +
js loc_42F36F  +
mov ecx [esi+0A0h] +
mov edx eax +
mov eax ebp +
mov [esp+5Ch+var_14] ecx +
call loc_471AC0  +
mov ecx [esp+5Ch+var_14] +
mov [esp+5Ch+var_24] eax +
mov [ecx+24Ch] eax +
jmp loc_42F36F  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebx +
add eax 48h +
mov [esp+5Ch+var_58] eax +
call sub_420CB0  +
test eax eax +
mov [esp+5Ch+var_1C] eax +
jz loc_42F43F  +
mov ecx [esp+5Ch+var_30] +
cmp byte ptr [ecx+3] 0 +
jns loc_42F955  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call sub_420CB0  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_42F447  +
mov eax [esp+5Ch+var_20] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
call sub_407460  +
mov [esp+5Ch+var_24] eax +
lea eax ds:0[ebp*8] +
mov [esp+5Ch+var_5C] eax +
call sub_407460  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jnz loc_42F793  +
xor edi edi +
cmp [esp+5Ch+var_24] 0 +
jz loc_42F5D0  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_14] +
test eax eax +
jz loc_42F449  +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_42F449  +
mov eax [edi+4] +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_10] edi +
mov [esp+5Ch+var_2C] eax +
jmp loc_42F3EB  +
mov edx [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov esi [esp+5Ch+var_20] +
mov eax [edi+4] +
test edx edx +
jz loc_42F447  +
test eax eax +
jz loc_42F447  +
cmp [esp+5Ch+var_2C] eax +
jnz loc_42F447  +
mov eax [esp+5Ch+var_2C] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
mov ebp eax +
mov [esp+5Ch+var_28] eax +
call sub_407460  +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_24] eax +
call sub_407460  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jz loc_42F5BB  +
cmp [esp+5Ch+var_24] 0 +
jz loc_42F5BB  +
mov eax [esp+5Ch+var_10] +
mov edx [esp+5Ch+var_24] +
mov ebp [eax] +
mov eax [esp+5Ch+var_28] +
add eax ebp +
cmp ebp eax +
mov [esp+5Ch+var_20] eax +
jnb loc_42F6B2  +
mov [esp+5Ch+var_10] esi +
mov esi ebx +
mov ebx edx +
mov eax [esp+5Ch+var_34] +
add ebx 8 +
mov [ebx-8] ebp +
mov ecx [ebp+0] +
add ebp 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_420AB0  +
mov [ebx-4] eax +
cmp [esp+5Ch+var_20] ebp +
ja loc_42F682  +
mov esi [esp+5Ch+var_10] +
mov ebx [edi] +
mov ebp [esp+5Ch+var_28] +
mov edi [esp+5Ch+var_14] +
add ebp ebx +
cmp ebx ebp +
jnb loc_42F6EB  +
mov eax [esp+5Ch+var_18] +
add edi 8 +
mov [edi-8] ebx +
mov edx [ebx] +
add ebx 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_420AB0  +
mov [edi-4] eax +
cmp ebp ebx +
ja loc_42F6C2  +
mov esi [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_42EF10 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov [esp+5Ch+var_58] esi +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_42EF10 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov eax [esi] +
mov edx [ebx] +
movzx eax word ptr [eax+4] +
cmp [edx+4] ax +
jnz loc_42F78C  +
mov ebx [esp+5Ch+var_14] +
xor ebp ebp +
mov eax [esp+5Ch+var_24] +
lea edi [ebx+8] +
mov edx ebx +
lea esi [eax+8] +
jmp loc_42F776  +
add ebp 1 +
cmp ebp [esp+5Ch+var_2C] +
jz loc_42F94A  +
mov edx edi +
mov eax esi +
mov ecx [edx] +
add esi 8 +
add edi 8 +
mov ebx [eax] +
movzx ecx word ptr [ecx+4] +
cmp [ebx+4] cx +
jnz loc_42F78C  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_42F751  +
xor edi edi +
jmp loc_42F5C4  +
mov eax [esp+5Ch+var_24] +
test eax eax +
jz loc_42F5BB  +
mov eax [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_1C] +
lea eax [eax+eax*4] +
lea edx [ecx+eax*4] +
cmp edx ecx +
jbe loc_42F985  +
mov eax ecx +
mov edi ebx +
mov ebx [esp+5Ch+var_2C] +
xor ecx ecx +
mov [esp+5Ch+var_20] esi +
jmp loc_42F7CC  +
add eax 14h +
cmp edx eax +
jbe loc_42F7DD  +
cmp [eax+10h] ebx +
jnz loc_42F7C5  +
mov esi [esp+5Ch+var_24] +
mov [esi+ecx*8] eax +
add ecx 1 +
jmp loc_42F7C5  +
mov esi [esp+5Ch+var_20] +
mov ebx edi +
mov edi [esp+5Ch+var_30] +
lea eax [ebp+ebp*4+0] +
lea edx [edi+eax*4] +
cmp edx edi +
jbe loc_42F78C  +
mov eax edi +
xor ebp ebp +
mov edi ecx +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_2C] ebx +
jmp loc_42F809  +
add eax 14h +
cmp edx eax +
jbe loc_42F81A  +
cmp [eax+10h] ecx +
jnz loc_42F802  +
mov ebx [esp+5Ch+var_14] +
mov [ebx+ebp*8] eax +
add ebp 1 +
jmp loc_42F802  +
mov ecx edi +
xor edi edi +
mov ebx [esp+5Ch+var_2C] +
test ecx ecx +
jz loc_42F5C4  +
test ebp ebp +
jz loc_42F5C4  +
cmp ebp ecx +
jnz loc_42F5C4  +
mov edi [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_2C] esi +
mov esi ebx +
mov ebx edx +
mov eax [edi] +
add ebx 1 +
add edi 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_34] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_420AB0  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_42F848  +
mov esi [esp+5Ch+var_2C] +
xor edi edi +
mov ebx [esp+5Ch+var_14] +
mov eax [ebx] +
add edi 1 +
add ebx 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_18] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_420AB0  +
mov [ebx-4] eax +
cmp edi ebp +
jnz loc_42F87B  +
mov esi [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_42EF10 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov ebx [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_42EF10 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov eax [ebx] +
mov edx [esi] +
movzx eax word ptr [eax+0Ch] +
cmp [edx+0Ch] ax +
jnz loc_42F78C  +
mov eax esi +
mov edx ebx +
lea edi [ebx+8] +
xor ebx ebx +
lea esi [esi+8] +
mov [esp+5Ch+var_34] ebp +
jmp loc_42F92D  +
add ebx 1 +
cmp ebx [esp+5Ch+var_34] +
jz loc_42F94A  +
mov edx edi +
mov eax esi +
mov ebp [edx] +
add esi 8 +
add edi 8 +
mov ecx [eax] +
movzx ebp word ptr [ebp+0Ch] +
cmp [ecx+0Ch] bp +
jnz loc_42F78C  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_42F908  +
xor edi edi +
jmp loc_42F5C4  +
mov edi 1 +
nop   +
jmp loc_42F5C4  +
mov eax [ebx+0A0h] +
mov edx [esp+5Ch+var_1C] +
mov [esp+5Ch+var_10] ecx +
mov [esp+5Ch+var_30] eax +
mov eax [esp+5Ch+var_20] +
call loc_471AC0  +
mov ecx [esp+5Ch+var_10] +
mov edi eax +
mov eax [esp+5Ch+var_30] +
mov [eax+24Ch] edi +
jmp loc_42F353  +
xor ecx ecx +
jmp loc_42F7E3  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test byte ptr [eax+34h] 8 +
jnz loc_42F9AE  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_42F9AE  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
test byte ptr [eax+34h] 8 +
jz loc_42F9DE  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_42F9DE  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1B0h] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [eax+0E4h] +
test eax eax +
jz loc_42FA24  +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
test ebx ebx +
jnz loc_42FA55  +
movzx eax byte ptr [ebp+0Dh] +
movzx edx byte ptr [esi+31h] +
and eax 3 +
mov ecx edx +
movzx ebx al +
and ecx 3 +
sub ebx 1 +
sub ecx 1 +
cmp ebx ecx +
jnb loc_42FA4D  +
and edx 0FFFFFFFCh +
or edx eax +
mov [esi+31h] dl +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_42FA4D  +
test byte ptr [ebp+0Dh] 3 +
jz loc_42FA4D  +
mov eax [esp+28h+arg_0] +
test byte ptr [eax] 8 +
jnz loc_42FA4D  +
or byte ptr [esi+35h] 8 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_42FABB  +
mov eax [ebx+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] esi +
call eax  +
test eax eax +
jnz loc_42FAC8  +
mov eax [ebx+28h] +
cmp [esi+20h] eax +
jl loc_42FABB  +
mov eax [ebx+34h] +
lea edx [eax+1] +
mov [ebx+34h] edx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+14h] +
xor edx edx +
mov eax [esi+20h] +
mov ecx [ebx+38h] +
mov ebp [edi+eax*4] +
mov eax ebp +
div  dword ptr [ebx+2Ch] +
mov eax ebp +
shr eax cl +
mov [esp+1Ch+var_10] edx +
mov edx [ebx+0Ch] +
shr edx cl +
mov ecx [ebx+40h] +
sub edx 1 +
and eax edx +
mov edx [ebx+20h] +
and ecx ebp +
mov ebp 1 +
shl ebp cl +
lea eax [edx+eax*4] +
or ebp [eax] +
mov [esp+1Ch+var_14] eax +
mov [eax] ebp +
mov edx [esi+20h] +
mov eax 1 +
mov ecx [ebx+3Ch] +
mov edx [edi+edx*4] +
shr edx cl +
and edx [ebx+40h] +
mov ecx edx +
shl eax cl +
mov ecx [ebx+1Ch] +
mov edx eax +
mov eax [esp+1Ch+var_14] +
or edx ebp +
mov ebp [esp+1Ch+var_10] +
mov [eax] edx +
mov eax [esi+20h] +
mov eax [edi+eax*4] +
lea edi ds:0[ebp*4] +
and eax 0FFFFFFFEh +
mov edx eax +
or edx 1 +
cmp dword ptr [ecx+ebp*4] 1 +
cmovz eax edx +
mov edx [ebx] +
mov edx [edx+4] +
mov ecx [edx+30h] +
mov edx [ebx+18h] +
mov edx [edx+ebp*4] +
mov ebp [ebx+24h] +
sub edx [ebx+30h] +
mov [esp+1Ch+var_1C] eax +
lea edx [ebp+edx*4+0] +
mov [esp+1Ch+var_18] edx +
call ecx  +
mov eax [ebx+1Ch] +
add eax edi +
add edi [ebx+18h] +
sub dword ptr [eax] 1 +
mov eax [edi] +
lea ecx [eax+1] +
mov [edi] ecx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ecx [esp+4+arg_0] +
mov edx [esp+4+arg_4] +
cmp dword ptr [ecx+4] 1 +
setz al  +
xor ebx ebx +
cmp dword ptr [edx+4] 1 +
mov esi eax +
mov eax 1 +
setz bl  +
cmp esi ebx +
jl loc_42FBDC  +
jg loc_42FBE0  +
mov esi [ecx] +
mov ebx [edx] +
and esi [ecx+0Ch] +
and ebx [edx+0Ch] +
cmp esi ebx +
jb loc_42FBE0  +
ja loc_42FBDC  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_42FBDC  +
***
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
jb loc_42FC27  +
mov eax 1 +
ja loc_42FC25  +
mov ebx [edx] +
cmp [ecx] ebx +
jb loc_42FC27  +
nop   +
ja loc_42FC25  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
test byte ptr [ebx+34h] 20h +
jnz loc_42FC56  +
movzx eax byte ptr [ebx+0Ch] +
lea ecx [eax-3] +
cmp cl 1 +
jbe loc_42FC60  +
cmp al 1 +
jz loc_42FC72  +
cmp al 2 +
jz loc_42FC72  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
movzx ecx byte ptr [ebx+33h] +
test cl 2 +
jnz loc_42FC96  +
and ecx 0Ah +
jnz loc_42FC72  +
cmp al 3 +
jz loc_42FC96  +
mov eax [edx+4] +
mov edx [edx] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_18] edx +
call eax  +
mov eax 1 +
and byte ptr [ebx+33h] 0ECh +
add esp 18h +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+18h] 8 +
jz loc_42FC72  +
jmp loc_42FC56  +
***
jmp sub_42FCB0  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ecx+18h] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_40] ebp +
mov esi [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_4084C0  +
mov ecx eax +
xor eax eax +
cmp ecx [edi+18h] +
jz loc_42FCF0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0A0h] +
mov [esp+48h+var_1C] 0 +
mov edx [eax+70h] +
test edx edx +
mov [esp+48h+var_30] edx +
jnz loc_42FE00  +
mov eax [ebp+4] +
mov edx [edi+28h] +
mov eax [eax+1B0h] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_30] eax +
mov eax [eax+174h] +
movzx edx byte ptr [eax+3] +
cmp [esp+48h+var_2C] edx +
jz loc_42FE35  +
movzx edx byte ptr [eax+4] +
cmp [esp+48h+var_2C] edx +
jnz loc_42FE12  +
mov eax [eax+40h] +
mov [esp+48h+var_2C] eax +
lea eax [ebx+ecx] +
cmp ebx eax +
mov [esp+48h+var_28] eax +
jnb loc_42FE28  +
mov [esp+48h+var_24] edi +
mov edi ebx +
mov ebx [esp+48h+var_1C] +
jmp loc_42FD88  +
cmp eax ebx +
jnb loc_42FE41  +
movzx eax byte ptr [ecx+9] +
lea eax [eax+eax*2] +
lea esi [esi+eax*4] +
mov eax [esp+48h+var_24] +
add edi [eax+28h] +
cmp [esp+48h+var_28] edi +
jbe loc_42FE28  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call eax  +
mov edx [esp+48h+var_30] +
mov eax [esi+4] +
mov ecx [edx+174h] +
shr eax 8 +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_42FE7F  +
test ebx ebx +
jnz loc_42FD65  +
test eax eax +
jz loc_42FD6D  +
mov edx [esi] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBNonZeroSymbol +
call off_4730E4  +
mov [esp+48h+var_48] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_42FCE3  +
mov eax [eax+60h] +
xor edx edx +
div  [esp+48h+var_30] +
mov [esp+48h+var_1C] eax +
jmp loc_42FD0D  +
mov [esp+48h+var_48] 3 +
call sub_4029E0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+38h] +
mov [esp+48h+var_2C] eax +
jmp loc_42FD4A  +
mov edx [esi] +
mov ebx [esp+48h+var_1C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBBadRelocSymbo +
call off_4730E4  +
mov [esp+48h+var_48] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_42FCE3  +
test ebx ebx +
jz loc_42FD6D  +
xor eax eax +
jmp loc_42FD65  +
***
sub esp 1Ch +
mov edx [eax+6Ch] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_10] 0FF00h +
mov [esp+1Ch+var_1C] offset aBTooManySect_0 +
mov [esp+1Ch+var_14] edx +
call off_4730E4  +
mov [esp+1Ch+var_1C] 0Fh +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov ebx [esp+20h+arg_8] +
mov eax [esi+4] +
mov edx [eax+0A0h] +
mov edx [edx+90Ch] +
test edx edx +
jz loc_42FFC3  +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+68h] +
test eax eax +
jz loc_42FF34  +
mov ecx [esp+20h+arg_10] +
mov edx [esi] +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_10] ecx +
mov ecx [esp+20h+arg_C] +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_14] ecx +
call eax  +
cmp eax 1 +
jz loc_42FF34  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_42FF4B  +
cmp byte ptr [edi] 0 +
jz loc_42FF4B  +
mov eax [esp+20h+arg_C] +
test byte ptr [eax+15h] 80h +
jz loc_42FFE0  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov eax [esi] +
mov edi [eax+1Ch] +
mov eax [edi+58h] +
mov edx [edi+54h] +
cmp eax edx +
jbe loc_430010  +
mov eax [edi+5Ch] +
imul edx edx +
add eax edx +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [edi+54h] +
mov ecx [esi+34h] +
imul eax edx +
add eax [edi+5Ch] +
test ecx ecx +
mov ecx [esi+4] +
mov [eax+14h] edx +
jz loc_430037  +
mov ebx [ecx+7Ch] +
mov esi ebx +
mov [eax+18h] ebx +
add edx 1 +
lea eax [esi+1] +
mov [ecx+7Ch] eax +
mov eax 1 +
mov [edi+54h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+var_1C] 2213h +
mov [esp+20h+var_20] offset a____Binutils_4 +
call sub_402930  +
mov eax [esi+4] +
jmp loc_42FEF9  +
mov eax [esi+8] +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
mov [ebx+8] eax +
jnz loc_42FF52  +
xor eax eax +
jmp loc_42FF2D  +
lea edx [eax+eax] +
mov [edi+58h] edx +
imul eax eax +
mov edx [edi+5Ch] +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] edx +
call sub_4074F0  +
test eax eax +
mov [edi+5Ch] eax +
jz loc_430003  +
mov edx [edi+54h] +
jmp loc_42FF68  +
mov esi [ecx+7Ch] +
xor ebx ebx +
jmp loc_42FFA8  +
***
jmp sub_430050  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+94h] +
mov edx [eax+0A0h] +
mov esi [edx+40h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call sub_424C30  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_4300B6  +
mov ecx [ebx+94h] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov edx [eax+164h] +
xor eax eax +
test edx edx +
jz loc_4300B0  +
mov [esp+14h+var_8] eax +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] offset aBWarningSh_l_0 +
call edx  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+eax*4] +
mov eax [eax+2Ch] +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
add eax [edx+1Ch] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+8+arg_0] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_430050  +
mov ebx eax +
mov eax [esp+8+arg_4] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_430050  +
xor ecx ecx +
mov edx 0FFFFFFFFh +
cmp ebx eax +
setnbe cl  +
cmovnb edx ecx +
add esp 8 +
mov eax edx +
pop ebx  +
retn   +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
movzx edx byte ptr [esi+33h] +
and edx 0Ah +
cmp dl 8 +
jz loc_430132  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_43012B  +
mov ecx [esi+40h] +
test ecx ecx +
jz loc_43012B  +
mov edx [ecx+14h] +
mov ebx [edx+0A0h] +
test byte ptr [ebx+924h] 0Bh +
jnz loc_43012B  +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov ebx [eax+244h] +
test ebx ebx +
jnz loc_43017B  +
jmp loc_430200  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_430200  +
cmp edx [ebx+10h] +
nop   +
jnz loc_430170  +
mov edx [ebx+18h] +
test edx edx +
jz loc_4301A2  +
mov eax [ecx+18h] +
cmp [edx+10h] eax +
jnz loc_430198  +
jmp loc_4301F5  +
cmp [edx+10h] eax +
jz loc_4301F5  +
mov edx [edx+14h] +
test edx edx +
lea esi [esi+0] +
jnz loc_430193  +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_404C60  +
test eax eax +
jz loc_430242  +
mov ecx [esi+40h] +
mov edi [esp+24h] +
mov edx [ecx+18h] +
mov [eax+10h] edx +
movzx edx word ptr [ecx+2] +
mov [eax+4] dx +
mov edx [ebx+18h] +
mov [eax+14h] edx +
mov edx [edi+4] +
mov [ecx+24h] edx +
lea ecx [edx+1] +
add edx 1 +
mov [edi+4] ecx +
mov [eax+6] dx +
mov [ebx+18h] eax +
mov eax 1 +
jmp loc_43012B  +
***
mov eax 1 +
jmp loc_43012B  +
***
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_404C60  +
test eax eax +
mov ebx eax +
jz loc_430242  +
mov eax [esi+40h] +
mov eax [eax+14h] +
mov [ebx+10h] eax +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov edx [eax+244h] +
mov [ebx+1Ch] edx +
mov [eax+244h] ebx +
jmp loc_4301A2  +
***
mov eax [esp+24h] +
mov dword ptr [eax+8] 1 +
xor eax eax +
jmp loc_43012B  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov [esp+5Ch+var_30] edx +
movzx edx byte ptr [ecx+0Ch] +
mov [esp+5Ch+var_24] ecx +
cmp dl 6 +
jnz loc_430288  +
mov ecx [ecx+14h] +
movzx edx byte ptr [ecx+0Ch] +
cmp dl 6 +
jz loc_430278  +
mov [esp+5Ch+var_24] ecx +
cmp dl 5 +
ja loc_430563  +
jmp ds:off_48B310[edx*4]  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov edx [edx+4] +
mov esi [edx+94h] +
mov [esp+5Ch+var_3C] esi +
mov edi [esp+5Ch+var_3C] +
test edi edi +
jz loc_430563  +
mov eax [eax] +
mov edi [eax+0D0h] +
test edi edi +
jnz loc_4302DA  +
jmp loc_430538  +
mov edi [edi] +
test edi edi +
jz loc_430538  +
mov ebp [edi+4] +
cmp [esp+5Ch+var_3C] ebp +
jz loc_4302D0  +
test byte ptr [ebp+29h] 8 +
jz loc_4302D0  +
mov ecx [ebp+0A0h] +
mov esi [ecx+914h] +
test esi esi +
jz loc_4302D0  +
mov eax [esp+5Ch+var_30] +
xor edx edx +
xor esi esi +
mov eax [eax] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+108h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
mov [esp+5Ch+var_38] eax +
jnz loc_430327  +
mov esi [ecx+110h] +
sub [esp+5Ch+var_38] esi +
mov edx [esp+5Ch+var_38] +
test edx edx +
jz loc_4302D0  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
lea eax [ecx+0F0h] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_34] ecx +
call sub_420CB0  +
test eax eax +
mov [esp+5Ch+var_28] eax +
jz loc_430538  +
mov edx [ebp+0A0h] +
mov eax [edx+178h] +
mov [esp+5Ch+var_20] edx +
mov [esp+5Ch+var_5C] eax +
call sub_407460  +
test eax eax +
mov [esp+5Ch+var_2C] eax +
jz loc_430598  +
mov edx [esp+5Ch+var_20] +
mov ecx [edx+170h] +
mov ebx [edx+174h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_54] ebx +
call sub_4086D0  +
mov edx [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_34] +
test eax eax +
jnz loc_43058C  +
mov eax [edx+178h] +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_20] ecx +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call sub_4084C0  +
mov edx [esp+5Ch+var_34] +
mov ecx [esp+5Ch+var_20] +
cmp eax [edx+178h] +
jnz loc_43058C  +
mov eax [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_28] +
lea esi [eax+esi*2] +
mov eax [esp+5Ch+var_38] +
lea eax [eax+eax*4] +
lea edx [ebx+eax*4] +
cmp ebx edx +
jnb loc_430546  +
mov [esp+5Ch+var_38] ebp +
mov ebp esi +
mov esi edx +
mov [esp+5Ch+var_20] edi +
mov edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_34] ecx +
jmp loc_43044E  +
add ebx 14h +
add ebp 2 +
cmp esi ebx +
jbe loc_430542  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_430440  +
mov eax [ebx+10h] +
test eax eax +
jz loc_430440  +
mov eax [esp+5Ch+var_34] +
mov edx [ebx+8] +
mov eax [eax+10Ch] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_5C] eax +
call sub_420AB0  +
mov edx [edi+4] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jnz loc_430440  +
lea eax [esp+5Ch+var_E] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_4208B0  +
movzx eax word ptr [esp+5Ch+var_E] +
test ax ax +
js loc_4304CA  +
test byte ptr [edi+33h] 2 +
jz loc_4305A6  +
test byte ptr [edi+34h] 8 +
jz loc_4305A6  +
and ax 7FFFh +
sub eax 1 +
cmp ax 1 +
ja loc_430440  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax 1 +
jmp loc_43053A  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov ecx [edx+94h] +
mov [esp+5Ch+var_3C] ecx +
jmp loc_4302AC  +
mov ecx [esp+5Ch+var_24] +
mov esi [ecx+14h] +
test byte ptr [esi+29h] 8 +
mov [esp+5Ch+var_3C] esi +
jz loc_430538  +
mov ecx [esp+5Ch+var_3C] +
mov edx [ecx+0A0h] +
test byte ptr [edx+924h] 2 +
jnz loc_4302B8  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+5Ch+var_20] +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_4302D0  +
mov [esp+5Ch+var_58] 22D0h +
mov [esp+5Ch+var_5C] offset a____Binutils_4 +
mov [esp+5Ch+var_38] eax +
call sub_402930  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_3C] 0 +
jmp loc_4302B8  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_430538  +
mov [esp+5Ch+var_54] offset aElf_link_check +
mov [esp+5Ch+var_58] 232Ch +
mov [esp+5Ch+var_5C] offset a____Binutils_4 +
call sub_402960  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+0E8h+var_58] +
mov ebp [esp+0E8h+var_54] +
movzx eax byte ptr [ebx+34h] +
mov esi [ebp+0Ch] +
test al 8 +
jnz loc_43060A  +
mov edx [esi] +
movzx edx byte ptr [edx] +
mov ecx edx +
and ecx 3 +
cmp cl 1 +
jbe loc_430830  +
xor edi edi +
cmp byte ptr [ebx+0Ch] 7 +
jz loc_430735  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_4306D0  +
test edi edi +
jnz loc_4306D8  +
mov eax [esi+4] +
cmp byte ptr [ebx+0Ch] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_C4] eax +
jz loc_430764  +
mov eax [esi] +
movzx edx byte ptr [eax] +
and edx 3 +
cmp dl 1 +
jbe loc_430DB0  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jz loc_430DA0  +
movzx eax byte ptr [ebx+33h] +
test al 0Ch +
jz loc_4306E5  +
test al 3 +
jnz loc_4306EF  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
movzx ecx byte ptr [ebx+30h] +
jz loc_430D40  +
movzx eax byte ptr [ebx+0Ch] +
mov [esp+0E8h+var_BC] 1 +
mov edx [ebx+2Ch] +
and ecx 0Fh +
test edi edi +
mov [esp+0E8h+var_A0] 0 +
mov [esp+0E8h+var_9C] edx +
movzx edx byte ptr [ebx+31h] +
mov [esp+0E8h+var_93] dl +
jz loc_430744  +
and edx 0FFFFFFFCh +
mov [esp+0E8h+var_94] cl +
mov [esp+0E8h+var_93] dl +
movzx edx byte ptr [ebx+32h] +
cmp al 6 +
mov [esp+0E8h+var_92] dl +
ja loc_430D58  +
jmp ds:off_48B4B0[eax*4]  +
test edi edi +
jnz loc_430627  +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_430668  +
mov edx [esi] +
movzx eax byte ptr [edx+1] +
and eax 18h +
cmp al 18h +
jz loc_430670  +
cmp al 10h +
jz loc_430F80  +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_430F10  +
lea edx [eax-1] +
cmp dl 1 +
jbe loc_430F57  +
movzx ecx byte ptr [ebx+30h] +
mov [esp+0E8h+var_BC] 0 +
jmp loc_43068A  +
mov ebx [ebx+14h] +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_430614  +
jmp loc_4306D8  +
test byte ptr [ebx+35h] 4 +
jz loc_430860  +
test byte ptr [ebx+33h] 2 +
jz loc_430860  +
sub ecx 60h +
mov [esp+0E8h+var_94] cl +
jmp loc_4306B7  +
mov eax [eax+0ECh] +
test eax eax +
jz loc_43077B  +
mov [esp+0E8h+var_E8] ebx +
call eax  +
test eax eax +
jnz loc_430641  +
movzx eax byte ptr [ebx+33h] +
test al 4 +
jz loc_430641  +
test al 1 +
mov eax [esi] +
jz loc_430799  +
movzx edx byte ptr [eax] +
test dl 40h +
jz loc_430646  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_4310F5  +
movzx edx byte ptr [eax+2] +
and edx 18h +
cmp dl 8 +
jz loc_430643  +
mov ecx [eax+18h] +
mov ecx [ecx+18h] +
mov [esp+0E8h+var_C0] ecx +
xor ecx ecx +
cmp dl 18h +
setz cl  +
xor edx edx +
test byte ptr [ebx+33h] 1 +
mov [esp+0E8h+var_BC] ecx +
jnz loc_4307D7  +
mov edx [ebx+14h] +
mov ecx [ebx+4] +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_C0] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_B8] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ecx +
mov ecx [esp+0E8h+var_B8] +
mov [esp+0E8h+var_E4] ecx +
call eax  +
test eax eax +
jnz loc_430641  +
mov [esp+0E8h+var_E8] 11h +
call sub_4029E0  +
nop   +
mov dword ptr [ebp+0] 1 +
xor eax eax +
jmp loc_4306DD  +
or edx eax +
and edx 10h +
jnz loc_430608  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 2 +
jnz loc_430608  +
and eax 6 +
cmp al 6 +
jz loc_43060A  +
xor edi edi +
jmp loc_43060A  +
cmp al 4 +
jz loc_430D74  +
cmp al 2 +
jz loc_430D74  +
add ecx 10h +
mov [esp+0E8h+var_94] cl +
jmp loc_4306B7  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+94h] +
test eax eax +
jz loc_4308A8  +
test byte ptr [eax+29h] 8 +
jnz loc_4308A8  +
mov [esp+0E8h+var_E4] 2429h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402930  +
mov eax [esi] +
mov [esp+0E8h+var_90] 0 +
movzx ecx byte ptr [eax] +
mov [esp+0E8h+var_B8] offset off_4731C8 +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [ebx+30h] +
and edx 20000FFh +
cmp edx 200000Ah +
jz loc_430E51  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_430E67  +
test byte ptr [esp+0E8h+var_C0] 1 +
jz loc_430D80  +
test byte ptr [ebx+31h] 3 +
jz loc_4308FB  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_430D80  +
mov edx [eax+1Ch] +
mov edx [edx+30h] +
test edx edx +
jz loc_430940  +
mov ecx [esp+0E8h+var_C4] +
mov edx [ecx+98h] +
mov ecx [esi+4] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_C0] ecx +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_C0] +
mov [esp+0E8h+var_E8] ecx +
call edx  +
test eax eax +
jz loc_430820  +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [esp+0E8h+var_90] +
test edx edx +
mov [esp+0E8h+var_B4] edx +
jnz loc_43097C  +
movzx edx byte ptr [ebx+33h] +
test dl 1 +
jz loc_430970  +
mov ecx eax +
movzx eax [esp+0E8h+var_94] +
mov byte ptr [esp+0E8h+var_B0] al +
shr al 4 +
sub eax 1 +
cmp al 1 +
mov eax ecx +
jbe loc_430ECA  +
and edx 0Ah +
cmp dl 8 +
jz loc_430F71  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
and ecx 3 +
cmp cl 2 +
mov byte ptr [esp+0E8h+var_C0] cl +
jz loc_4309B0  +
movzx ecx [esp+0E8h+var_93] +
and ecx 3 +
mov edx ecx +
jz loc_4309B0  +
movzx ecx [esp+0E8h+var_94] +
shr cl 4 +
cmp cl 2 +
jz loc_4309B0  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_430E76  +
mov eax [eax+1Ch] +
mov ecx [eax+0F8h] +
test ecx ecx +
jz loc_430B80  +
mov edx [ebx+20h] +
cmp edx 0FFFFFFFFh +
mov [esp+0E8h+var_B0] edx +
jz loc_430B80  +
mov eax [eax+30h] +
test eax eax +
jz loc_430B80  +
mov eax [ebx+40h] +
test eax eax +
jz loc_430FD7  +
mov eax [ebx+38h] +
mov edi [esp+0E8h+var_B4] +
mov [esp+0E8h+var_98] eax +
mov eax [ecx+6Ch] +
sub edi 0FF00h +
cmp edi 0FFFEFFFFh +
mov [esp+0E8h+var_C0] eax +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
movzx ecx byte ptr [edx+5] +
jbe loc_430FB0  +
movzx edi cl +
mov edx [edx+24h] +
imul edi [esp+0E8h+var_B0] +
add edi [esp+0E8h+var_C0] +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_430B08  +
mov eax [esi] +
xor edx edx +
mov eax [eax+1Ch] +
mov eax [eax+60h] +
mov edi eax +
mov [esp+0E8h+var_C0] eax +
mov eax [ecx+8Ch] +
mov eax [eax+28h] +
mov [esp+0E8h+var_C4] eax +
mov eax [ebx+3Ch] +
div  edi +
mov eax [esp+0E8h+var_C4] +
lea edi [edx+2] +
imul edi eax +
shl eax 3 +
add edi [ecx+6Ch] +
cmp eax 8 +
jz loc_431071  +
cmp eax 10h +
jz loc_43113C  +
cmp eax 20h +
jz loc_431194  +
cmp eax 40h +
nop   +
jnz loc_43121B  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E0] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
sar edx 1Fh +
mov [esp+0E8h+var_E4] edx +
call eax  +
mov eax [esi+4] +
mov edx [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [eax+4] +
lea edx [edi+edx+2] +
mov edi [esp+0E8h+var_B4] +
imul edx [esp+0E8h+var_C4] +
add edx [ecx+6Ch] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
call eax  +
mov eax [esi+10h] +
test eax eax +
jz loc_430B80  +
mov eax [eax+6Ch] +
test eax eax +
jz loc_430B80  +
movzx edi byte ptr [ebx+33h] +
mov edx [ebx+40h] +
test edi 2 +
jnz loc_431040  +
test edx edx +
jz loc_4310D4  +
mov ecx [edx+14h] +
mov ecx [ecx+0A0h] +
test byte ptr [ecx+924h] 0Bh +
jnz loc_4310D4  +
mov edx [edx+24h] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
movzx edx byte ptr [ebx+34h] +
and edx 6 +
cmp dl 6 +
jz loc_4310E0  +
mov ecx [ebx+20h] +
mov edx [esi+4] +
lea eax [eax+ecx*2] +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_8C] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_4208E0  +
nop   +
mov eax [esp+0E8h+var_BC] +
test eax eax +
jnz loc_4306D8  +
mov eax [esp+0E8h+var_B8] +
test byte ptr [eax+15h] 80h +
jnz loc_4306D8  +
mov edi [ebp+4] +
test edi edi +
jz loc_430C16  +
mov ecx [ebp+8] +
test ecx ecx +
jnz loc_430C16  +
mov eax [ebp+0Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_430C16  +
lea edx [esp+0E8h+var_8C] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_4731C8 +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_80] 0 +
mov [esp+0E8h+var_8C] 0 +
mov [esp+0E8h+var_88] 0 +
mov [esp+0E8h+var_84] 0 +
mov byte ptr [esp+0E8h+var_80] 4 +
mov [esp+0E8h+var_7C] 0FFFFFFF1h +
call sub_42FED0  +
test eax eax +
jz loc_4306DD  +
mov dword ptr [ebp+8] 1 +
mov eax [esi+4] +
lea edx [esp+0E8h+var_A0] +
mov ecx [esp+0E8h+var_B8] +
mov edi [eax+7Ch] +
mov eax [ebx+4] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] esi +
call sub_42FED0  +
test eax eax +
jz loc_430D90  +
cmp eax 1 +
jz loc_431069  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jnz loc_4306D8  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 251Bh +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402960  +
mov eax [ebx+14h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+3Ch] +
test eax eax +
jz loc_430880  +
mov edx [esi+4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_90] eax +
jz loc_431097  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+38h] +
mov ecx eax +
mov eax [ebx+18h] +
add ecx eax +
mov eax [esi] +
mov [esp+0E8h+var_A0] ecx +
movzx edx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] dl +
and edx 3 +
cmp dl 2 +
jz loc_4308C1  +
mov edx [esp+0E8h+var_B8] +
mov edx [edx+3Ch] +
add ecx [edx+1Ch] +
cmp byte ptr [ebx+30h] 6 +
mov [esp+0E8h+var_A0] ecx +
jnz loc_4308C1  +
mov edx [eax+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_4308C1  +
sub ecx [edx+1Ch] +
mov [esp+0E8h+var_A0] ecx +
jmp loc_4308C1  +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov ecx eax +
mov [esp+0E8h+var_B8] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+148h] +
mov [esp+0E8h+var_E8] ecx +
call eax  +
mov [esp+0E8h+var_90] eax +
mov eax [ebx+14h] +
mov ecx [eax] +
mov eax 1 +
shl eax cl +
mov [esp+0E8h+var_A0] eax +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
jmp loc_4308C1  +
cmp cl 0Ah +
jz loc_43067E  +
test byte ptr [ebx+34h] 8 +
jnz loc_43067E  +
jmp loc_4306D8  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 23FBh +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402960  +
add ecx 20h +
mov [esp+0E8h+var_94] cl +
jmp loc_4306B7  +
test byte ptr [ebx+34h] 8 +
jnz loc_430940  +
jmp loc_4308FB  +
mov dword ptr [ebp+0] 1 +
jmp loc_4306DD  +
movzx eax byte ptr [ebx+0Ch] +
jmp loc_430724  +
test byte ptr [ebx+34h] 8 +
jz loc_430652  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 6 +
jnz loc_430652  +
movzx edx word ptr [ebx+34h] +
and dx 180h +
cmp dx 100h +
jnz loc_430652  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_4311F3  +
cmp byte ptr [ebx+0Ch] 6 +
mov eax ebx +
jnz loc_430DFC  +
mov eax [eax+14h] +
cmp byte ptr [eax+0Ch] 6 +
jz loc_430DF3  +
movzx ecx byte ptr [ebx+31h] +
mov edx offset aBInternalSymbo +
and ecx 3 +
cmp cl 1 +
jz loc_430E1D  +
cmp cl 2 +
mov edx offset aBHiddenSymbolS +
mov ecx offset aBLocalSymbolSI +
cmovnz edx ecx +
mov eax [eax+14h] +
mov ecx [esi+4] +
cmp eax offset off_473270 +
jz loc_431214  +
mov eax [eax+94h] +
mov ebx [ebx+4] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_DC] ebx +
call off_4730E4  +
jmp loc_430813  +
movzx edx byte ptr [esp+0E8h+var_C0] +
and edx 3 +
cmp dl 2 +
jnz loc_430905  +
jmp loc_4308D6  +
test byte ptr [ebx+34h] 8 +
jz loc_430940  +
jmp loc_4308E0  +
test byte ptr [ebx+33h] 2 +
jnz loc_4309B0  +
cmp dl 3 +
jz loc_4311C6  +
cmp dl 1 +
mov eax offset aBInternalSym_0 +
mov edx offset aBHiddenSymbo_0 +
cmovnz eax edx +
mov ecx [ebx+4] +
mov edx [esi+4] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
call off_4730E4  +
mov [esp+0E8h+var_E8] 11h +
call sub_4029E0  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_4306DD  +
movzx eax byte ptr [esp+0E8h+var_B0] +
mov [esp+0E8h+var_AC] ecx +
mov ecx edx +
and eax 0Fh +
movzx edx al +
cmp edx 0Ah +
mov edx 2 +
cmovz eax edx +
mov byte ptr [esp+0E8h+var_B0] al +
mov eax ecx +
and eax 10h +
cmp al 1 +
sbb eax eax +
mov edx eax +
movzx eax byte ptr [esp+0E8h+var_B0] +
and edx 10h +
lea eax [eax+edx+10h] +
mov edx ecx +
mov [esp+0E8h+var_94] al +
mov eax [esp+0E8h+var_AC] +
jmp loc_430970  +
mov edx [esi] +
test byte ptr [edx+1] 2 +
mov edx [ebx+14h] +
jz loc_430F30  +
cmp edx offset off_473270 +
jz loc_430F30  +
cmp dword ptr [edx+3Ch] offset off_473270 +
jz loc_431118  +
test byte ptr [edx+16h] 10h +
jnz loc_430718  +
mov edx [edx+94h] +
test edx edx +
jz loc_430718  +
test byte ptr [edx+2Ah] 20h +
jnz loc_430670  +
jmp loc_430718  +
mov edx [ebx+14h] +
test edx edx +
jz loc_430724  +
test byte ptr [edx+2Ah] 20h +
jnz loc_430670  +
jmp loc_430724  +
mov [esp+0E8h+var_9C] 0 +
jmp loc_43097C  +
mov ecx [ebx+4] +
mov eax [edx+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_408C80  +
test eax eax +
jnz loc_430708  +
jmp loc_430670  +
mov [esp+0E8h+var_B4] ecx +
call sub_42FE90  +
mov ecx [esp+0E8h+var_B4] +
test eax eax +
jz loc_430D90  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
jmp loc_430A1C  +
test edi edi +
jnz loc_4309E7  +
cmp byte ptr [esp+0E8h+var_C0] 1 +
jbe loc_4311D0  +
mov edi [ebx+4] +
mov [esp+0E8h+var_E4] 40h +
mov [esp+0E8h+var_C0] ecx +
mov [esp+0E8h+var_E8] edi +
call strrchr  +
mov ecx [esp+0E8h+var_C0] +
test eax eax +
jz loc_4309E7  +
cmp byte ptr [eax+1] 0 +
jz loc_4309E7  +
mov eax [esi+4] +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] offset aBNoSymbolVersi +
mov [esp+0E8h+var_E4] eax +
call off_4730E4  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_4306DD  +
test edx edx +
jz loc_4311E4  +
mov edx [edx+8] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
mov edx [esi] +
test byte ptr [edx] 20h +
jz loc_430B52  +
add word ptr [esp+0E8h+var_8C] 1 +
jmp loc_430B52  +
mov [ebx+1Ch] edi +
jmp loc_4306DD  +
mov eax [ebx+20h] +
movzx edx byte ptr [edi] +
mov [edi] al +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [ebx+20h] +
mov ecx [ecx+6Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
mov [ecx+eax] dl +
jmp loc_430B08  +
mov edi [esp+0E8h+var_B8] +
mov eax [esi+4] +
mov edx [edi+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_DC] edi +
mov [esp+0E8h+var_E8] offset aBCouldNotFindO +
mov [esp+0E8h+var_E0] edx +
call off_4730E4  +
mov [esp+0E8h+var_E8] 0Fh +
call sub_4029E0  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_4306DD  +
xor ecx ecx +
mov word ptr [esp+0E8h+var_8C] cx +
jmp loc_430B52  +
and edi 2 +
jz loc_430B62  +
or word ptr [esp+0E8h+var_8C] 8000h +
jmp loc_430B62  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_430260  +
test eax eax +
mov eax [esi] +
jnz loc_430643  +
jmp loc_4307A6  +
movzx ecx word ptr [edx+18h] +
and cx 380h +
cmp cx 100h +
jz loc_430F30  +
cmp cx 200h +
jnz loc_430670  +
jmp loc_430F30  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+3Ch] +
mov eax [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
add eax [ecx+6Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E8] eax +
call edx  +
jmp loc_430B08  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+30h] +
jmp loc_43116C  +
mov eax offset aBProtectedSymb +
jmp loc_430E99  +
movzx eax byte ptr [ebx+33h] +
and eax 6 +
cmp al 2 +
jnz loc_430FEA  +
jmp loc_4309E7  +
mov edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
jmp loc_431053  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_430260  +
test eax eax +
jnz loc_430652  +
jmp loc_430DEB  +
mov eax ecx +
jmp loc_430E34  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 24C9h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402960  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
mov [esp+124h+var_108] ecx +
jz loc_4312CF  +
mov ebp eax +
mov esi edx +
jmp loc_43125E  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_431286  +
mov [esp+124h+var_120] ebp +
mov eax [esi] +
mov [esp+124h+var_124] eax +
call strcmp  +
test eax eax +
jnz loc_431257  +
mov eax [esi+1Ch] +
mov edx [esp+124h+var_108] +
mov [edx] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+124h+var_124] ebp +
call strlen  +
mov [esp+124h+var_10C] eax +
mov esi [ebx] +
mov [esp+124h+var_124] esi +
call strlen  +
cmp eax [esp+124h+var_10C] +
mov edi eax +
ja loc_4312C8  +
mov [esp+124h+var_11C] eax +
mov [esp+124h+var_120] ebp +
mov [esp+124h+var_124] esi +
call strncmp  +
test eax eax +
jnz loc_4312C8  +
add edi ebp +
mov esi offset a_end +
mov ecx 4 +
cmps   +
jz loc_4312D9  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_431292  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
mov ecx [esp+124h+var_108] +
add eax [ebx+1Ch] +
mov [ecx] eax +
mov eax 1 +
jmp loc_43127E  +
***
push ebx  +
mov ebx edx +
sub esp 10h +
mov esi [edx] +
mov ecx [edx+4] +
imul ecx [esi+28h] +
mov [esi+18h] ecx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_404C60  +
test eax eax +
mov [esi+30h] eax +
jz loc_431350  +
mov eax [ebx+0Ch] +
mov edi 1 +
test eax eax +
jz loc_431330  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_431323  +
shl eax 2 +
mov [esp+10h+var_10] eax +
call sub_4075F0  +
test eax eax +
jz loc_43135B  +
mov [ebx+0Ch] eax +
jmp loc_431323  +
mov edx [esi+18h] +
xor edi edi +
test edx edx +
jz loc_431317  +
jmp loc_431323  +
xor edi edi +
jmp loc_431323  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_431445  +
mov eax [esi+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_431445  +
movzx eax byte ptr [ebx+34h] +
mov ebp [ebx+4] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_431452  +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
jz loc_431452  +
sub eax ebp +
mov [esp+1Ch+var_10] eax +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_407460  +
test eax eax +
mov edi eax +
jz loc_431456  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov ebp edi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] eax +
call memcpy  +
mov eax [esp+1Ch+var_10] +
mov byte ptr [edi+eax] 0 +
mov [esp+1Ch+var_1C] ebp +
call sub_420940  +
mov ecx [esi+8] +
mov edx [esi+10h] +
mov [edx+ecx*4] eax +
mov edx [esi+14h] +
mov ecx [ebx+20h] +
mov [edx+ecx*4] eax +
mov eax [esi+28h] +
add dword ptr [esi+8] 1 +
mov edx [ebx+20h] +
test eax eax +
js loc_431421  +
cmp eax edx +
jle loc_431424  +
mov [esi+28h] edx +
test edi edi +
mov eax 1 +
jz loc_43144A  +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_4313F5  +
mov dword ptr [esi+44h] 1 +
xor eax eax +
jmp loc_43144A  +
***
jmp sub_431470  +
***
mov ebx [esp+18h+arg_0] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_431494  +
mov eax [ebx+38h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_44B170  +
mov [ebx+38h] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax [edx+8] +
test eax eax +
jz loc_4314B8  +
mov [esp+18h+var_18] eax +
call sub_44AE70  +
mov eax [ebx+14h] +
test eax eax +
jz loc_4314C7  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_4314D6  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_4314E5  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+20h] +
test eax eax +
jz loc_4314F4  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+24h] +
test eax eax +
jz loc_431503  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+28h] +
test eax eax +
jz loc_431512  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_431521  +
mov [esp+18h+var_18] eax +
call free  +
mov edx [ebx+30h] +
test edx edx +
jz loc_431530  +
mov [esp+18h+var_18] edx +
call free  +
mov edx [ebx+34h] +
test edx edx +
jz loc_43153F  +
mov [esp+18h+var_18] edx +
call free  +
mov ebx [esi] +
test ebx ebx +
jz loc_43157C  +
test byte ptr [ebx+14h] 4 +
mov esi [ebx+8Ch] +
jz loc_431575  +
mov eax [esi+48h] +
test eax eax +
jz loc_431566  +
mov [esp+18h+var_18] eax +
call free  +
test byte ptr [ebx+14h] 4 +
jz loc_431575  +
mov eax [esi+58h] +
test eax eax +
jz loc_431575  +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_431545  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_4315B0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+16h] 80h +
jz loc_4315A3  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jnz loc_4315A3  +
mov eax [eax+8Ch] +
mov edx [ebx+18h] +
mov eax [eax+88h] +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_10] eax +
lea eax [ebx+14h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_44D800  +
mov [ebx+18h] eax +
jmp loc_4315A3  +
***
push esi  +
mov esi edx +
push ebx  +
mov edx offset a_rel_0 +
sub esp 1Ch +
mov ebx offset a_rela_0 +
test ecx ecx +
cmovz ebx edx +
test esi esi +
jz loc_431664  +
mov [esp+20h+var_20] ebx +
mov edi eax +
call strlen  +
mov [esp+20h+var_20] esi +
mov ebp eax +
call strlen  +
mov [esp+20h+var_20] edi +
lea eax [ebp+eax+1] +
mov [esp+20h+var_1C] eax +
call sub_404B80  +
mov [esp+20h+var_14] esi +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] offset aSS_8 +
mov edi eax +
mov [esp+20h+var_20] eax +
call sprintf  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_43165C  +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+44h+arg_C] +
mov [esp+44h+var_30] eax +
mov eax [edx+0A0h] +
mov [esp+44h+var_28] ecx +
mov ebp [esp+44h+arg_8] +
test ebx ebx +
mov [esp+44h+var_2C] eax +
jz loc_431741  +
mov esi ebp +
mov ebp edi +
mov edi edx +
jmp loc_4316B1  +
add ebp 1 +
add esi 14h +
cmp ebp ebx +
jz loc_431741  +
movzx eax byte ptr [esi+0Ch] +
shr al 4 +
test al al +
jnz loc_4316A3  +
mov eax [esp+44h+var_2C] +
mov ecx [esi+8] +
mov eax [eax+64h] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_420AB0  +
test eax eax +
jz loc_4316A3  +
mov edx [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_40] edx +
call strcmp  +
test eax eax +
jnz loc_4316A3  +
mov eax edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
mov eax [eax+edi*4] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_18] eax +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_3C] eax +
call sub_42E250  +
mov edx [esp+44h+var_18] +
mov edi [esp+44h+arg_4] +
mov ecx [edx+3Ch] +
mov [edi] eax +
add eax [ecx+1Ch] +
add eax [edx+38h] +
mov [edi] eax +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_28] +
mov edi [esp+44h+var_30] +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_4193E0  +
test eax eax +
mov edx eax +
jz loc_4317A8  +
movzx eax byte ptr [eax+0Ch] +
lea ecx [eax-3] +
xor eax eax +
cmp cl 1 +
ja loc_431739  +
mov ecx [edx+14h] +
mov edi [esp+44h+arg_4] +
mov eax [ecx+3Ch] +
mov eax [eax+1Ch] +
add eax [edx+18h] +
add eax [ecx+38h] +
mov [edi] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_431739  +
***
push esi  +
push ebx  +
push eax  +
mov eax 1048h +
call sub_46FB40  +
sub esp eax +
mov ebx [edx] +
mov ebp edx +
mov eax [esp+14h+arg_1030] +
mov [esp+14h+arg_C] ecx +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_8] eax +
call strlen  +
mov ecx eax +
lea eax [eax-1] +
cmp eax 0FFFh +
ja loc_431847  +
movzx edx byte ptr [ebx] +
cmp dl 2Eh +
jz loc_4319D0  +
jle loc_431860  +
cmp dl 53h +
jz loc_4319F3  +
cmp dl 73h +
mov [esp+14h+arg_14] 0 +
jnz loc_431945  +
lea eax [ebx+1] +
mov [esp+14h+var_C] 0Ah +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] eax +
mov [esp+14h+arg_10] ecx +
call strtol  +
mov ecx [esp+14h+arg_10] +
add ebx ecx +
mov esi eax +
mov eax [ebp+0] +
lea edi [eax+1] +
cmp edi ebx +
ja loc_431847  +
lea eax [esi+1] +
cmp eax 1000h +
jbe loc_431896  +
mov [esp+14h+var_14] 5 +
call sub_4029E0  +
xor eax eax +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dl 23h +
jnz loc_431945  +
add ebx 1 +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_C] 10h +
call strtoul  +
mov esi [esp+14h+arg_8] +
mov [esi] eax +
add esp 104Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [esp+14h+arg_28] +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] ebx +
call memcpy  +
mov byte ptr [esp+esi+14h+arg_28] 0 +
add esi edi +
mov [ebp+0] esi +
mov esi [esp+14h+arg_14] +
test esi esi +
jz loc_431B00  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_431240  +
test eax eax +
jnz loc_431B45  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_431670  +
test eax eax +
jnz loc_431B45  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSection +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_4730E4  +
xor eax eax +
jmp loc_431855  +
mov edi offset a0_0 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_431A00  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
neg eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
mov eax [esp+14h+arg_8] +
add ebx 1 +
mov edi [esp+14h+arg_104C] +
mov [eax] edi +
mov eax 1 +
mov [ebp+0] ebx +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+14h+arg_14] 1 +
jmp loc_431810  +
mov edi offset asc_48B523 +
mov ecx 2 +
mov esi ebx +
cmps   +
jz loc_431B50  +
mov edi offset asc_48B526 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_431C18  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov edx [esp+14h+arg_1058] +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
test edx edx +
jz loc_431FE4  +
mov edi [esp+14h+arg_8] +
sar eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_431670  +
test eax eax +
jz loc_431CF3  +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
shl eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
mov edi offset asc_48B529 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_431D33  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setz al  +
movzx eax al +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
jmp loc_431B45  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_431240  +
test eax eax +
jnz loc_431B45  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSymbol +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_4730E4  +
xor eax eax +
jmp loc_431855  +
mov edi offset asc_48B52C +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_431E08  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setnz al  +
movzx eax al +
jmp loc_431CE8  +
mov edi offset asc_48B52F +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_431EF6  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_4321BA  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
mov edi offset asc_48B532 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_431FF6  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43231B  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
mov edi [esp+14h+arg_8] +
shr eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
mov edi offset asc_48B535 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_4320CF  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
xor eax eax +
cmp [esp+14h+arg_24] 0 +
jz loc_431CE8  +
cmp [esp+14h+arg_28] 0 +
jmp loc_431DFD  +
mov [esp+14h+var_C] 2 +
mov [esp+14h+var_10] offset asc_48B538 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_10] edx +
call strncmp  +
mov edx [esp+14h+arg_10] +
test eax eax +
jnz loc_4321D4  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_24] 0 +
mov eax 1 +
jz loc_4320C5  +
jmp loc_431CE8  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp dl 7Eh +
jz loc_43239C  +
cmp dl 21h +
jz loc_432335  +
cmp dl 2Ah +
jz loc_4324F3  +
cmp dl 2Fh +
jz loc_432429  +
cmp dl 25h +
jz loc_432AEA  +
cmp dl 5Eh +
jz loc_432A24  +
cmp dl 7Ch +
jz loc_43295E  +
cmp dl 26h +
jz loc_432898  +
cmp dl 2Bh +
nop   +
jz loc_4327A1  +
cmp dl 2Dh +
jz loc_4326DB  +
cmp dl 3Ch +
jz loc_432601  +
cmp dl 3Eh +
jnz loc_4325E8  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43240F  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_24] 0 +
jmp loc_431CE2  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
not eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_4325B9  +
cdq   +
idiv  [esp+14h+arg_28] +
jmp loc_431CE8  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_1058] 0 +
jz loc_4325CF  +
mov eax [esp+14h+arg_24] +
imul eax [esp+14h+arg_28] +
jmp loc_431CE8  +
xor edx edx +
mov edi [esp+14h+arg_8] +
div  [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
mov eax [esp+14h+arg_28] +
imul eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
movsx edx dl +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] offset aUnknownOperato +
call off_4730E4  +
jmp loc_431847  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_432866  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
sub eax [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_1058] 0 +
jz loc_432880  +
mov eax [esp+14h+arg_24] +
add eax [esp+14h+arg_28] +
jmp loc_431CE8  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
add eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
and eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
or eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
xor eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_431855  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_4317B0  +
test eax eax +
jz loc_431853  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_432BB6  +
cdq   +
idiv  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
jmp loc_431B45  +
xor edx edx +
div  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_431855  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
cmp [eax+14h] edx +
jbe loc_432BF5  +
mov ecx [eax+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jz loc_432C58  +
sub edx [eax+18h] +
mov eax [eax+1Ch] +
mov eax [eax+edx*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_432C1F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_432C10  +
sub edx 3 +
cmp dl 1 +
ja loc_432C51  +
mov eax [eax+14h] +
cmp eax offset off_473270 +
jz loc_432C51  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jnz loc_432C51  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_432C51  +
cmp dx 200h +
jnz loc_432C53  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov edx [ebx+10h] +
mov eax [eax+10h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_423710  +
test eax eax +
jz loc_432C53  +
mov edx [esp+18h+arg_8] +
test edx edx +
jz loc_432C53  +
cmp eax offset off_473270 +
jnz loc_432C31  +
jmp loc_432C51  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_4] +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_3C] 0 +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] ebx +
mov eax [esi+1Ch] +
mov [esp+4Ch+var_4C] eax +
call sub_4193E0  +
test eax eax +
jz loc_432CC2  +
mov byte ptr [eax+0Ch] 0 +
mov [esp+4Ch+var_10] eax +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_28] eax +
movzx eax byte ptr [ebp+1ACh] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_38] 0 +
and eax 1 +
mov [esp+4Ch+var_2C] eax +
mov eax [esp+4Ch+arg_8] +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_4C] esi +
call sub_41A040  +
test eax eax +
jz loc_432D70  +
mov ebx [esp+4Ch+var_10] +
movzx eax byte ptr [ebx+31h] +
or byte ptr [ebx+33h] 2 +
and byte ptr [ebx+34h] 0FEh +
or byte ptr [ebx+0Dh] 2 +
mov edx eax +
and edx 3 +
cmp dl 1 +
mov byte ptr [ebx+30h] 1 +
jz loc_432D4C  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+31h] al +
mov eax [ebp+0DCh] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] 1 +
call eax  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esi+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_432EE0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+30h] +
mov eax 1 +
test ecx ecx +
jnz loc_432ED6  +
mov edx [ebx+38h] +
test edx edx +
jz loc_4330A8  +
mov eax [ebx+50h] +
test eax eax +
jz loc_4330B5  +
mov ebp [ebx+38h] +
mov eax [ebp+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+1Ch] +
mov edi eax +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [esi] +
or edi 8 +
and eax 3 +
cmp al 1 +
ja loc_432F35  +
mov edi [esp+2Ch+var_10] +
or edi 8 +
test byte ptr [esi+6] 1 +
jz loc_433087  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_d +
mov [esp+2Ch+var_2C] ebp +
call sub_4060A0  +
test eax eax +
jz loc_432ED4  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version +
mov [esp+2Ch+var_2C] ebp +
call sub_4060A0  +
test eax eax +
jz loc_432ED4  +
mov dword ptr [eax+40h] 1 +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_r +
mov [esp+2Ch+var_2C] ebp +
call sub_4060A0  +
test eax eax +
jz loc_432ED4  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynsym +
mov [esp+2Ch+var_2C] ebp +
call sub_4060A0  +
test eax eax +
jz loc_432ED4  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov ecx [esi+1Ch] +
mov [ecx+0F8h] eax +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynstr +
mov [esp+2Ch+var_2C] ebp +
call sub_4060A0  +
test eax eax +
jz loc_432ED4  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] eax +
call sub_4060A0  +
test eax eax +
jz loc_432ED4  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_20] offset a_dynamic_0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call sub_432C80  +
mov ecx [esi+1Ch] +
test eax eax +
mov [ecx+78h] eax +
jz loc_432ED4  +
movzx eax byte ptr [esi+3] +
test al 20h +
jnz loc_4330CD  +
test al 40h +
jnz loc_43310C  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_432ED4  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
jz loc_432ED4  +
mov eax [esi+1Ch] +
mov dword ptr [eax+30h] 1 +
mov eax 1 +
jmp loc_432ED6  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_interp +
mov [esp+2Ch+var_2C] ebp +
call sub_4060A0  +
test eax eax +
jnz loc_432F35  +
jmp loc_432ED4  +
mov eax [esp+2Ch+arg_0] +
mov [ebx+38h] eax +
nop   +
jmp loc_432EF7  +
call sub_44ADF0  +
test eax eax +
mov [ebx+50h] eax +
jz loc_432ED4  +
mov ebx [esi+1Ch] +
jmp loc_432F02  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_hash +
mov [esp+2Ch+var_2C] ebp +
call sub_4060A0  +
test eax eax +
jz loc_432ED4  +
mov ecx [ebx+174h] +
movzx edx byte ptr [ecx+0Bh] +
mov [eax+40h] edx +
mov eax [eax+8Ch] +
movzx ecx byte ptr [ecx+8] +
mov [eax+28h] ecx +
movzx eax byte ptr [esi+3] +
jmp loc_43304F  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_hash +
mov [esp+2Ch+var_2C] ebp +
call sub_4060A0  +
test eax eax +
jz loc_432ED4  +
mov ecx [ebx+174h] +
movzx edi byte ptr [ecx+0Bh] +
mov [eax+40h] edi +
mov eax [eax+8Ch] +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_43314D  +
mov dword ptr [eax+28h] 4 +
jmp loc_433057  +
mov dword ptr [eax+28h] 0 +
jmp loc_433057  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [ebx+4] +
mov esi [eax+1B0h] +
mov eax [esp+34h] +
mov ebp [esi+1Ch] +
movzx edx byte ptr [esi+1ADh] +
mov edi [eax+1Ch] +
mov dword ptr [esp+4] offset a_plt_0 +
mov eax ebp +
mov ecx ebp +
or ecx 13h +
and eax 0FFFFFEEDh +
test dl 8 +
cmovz eax ecx +
mov ecx eax +
or ecx 8 +
and edx 2 +
cmovnz eax ecx +
mov [esp+8] eax +
mov [esp] ebx +
call sub_4060A0  +
test eax eax +
jz loc_433273  +
movzx ecx byte ptr [esi+1ADh] +
shr cl 4 +
movzx ecx cl +
mov [eax+40h] ecx +
test byte ptr [esi+1ADh] 4 +
mov [edi+0E0h] eax +
jnz loc_433245  +
or ebp 8 +
mov ecx offset a_rela_plt_0 +
test byte ptr [esi+1ACh] 20h +
mov eax offset a_rel_plt_0 +
mov [esp+8] ebp +
mov [esp] ebx +
cmovnz eax ecx +
mov [esp+4] eax +
call sub_4060A0  +
test eax eax +
jz loc_433273  +
mov ecx [esi+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [edi+0E4h] eax +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_432D80  +
test eax eax +
jz loc_433273  +
test byte ptr [esi+1AEh] 8 +
jnz loc_433280  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] offset a_procedure_lin +
mov [esp] ebx +
mov [esp+4] eax +
call sub_432C80  +
mov edx [esp+34h] +
mov ecx [edx+1Ch] +
test eax eax +
mov [ecx+74h] eax +
jnz loc_4331DD  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] 100001h +
mov dword ptr [esp+4] offset a_dynbss +
mov [esp] ebx +
call sub_4060A0  +
test eax eax +
jz loc_433273  +
mov eax [esp+34h] +
test byte ptr [eax] 1 +
jnz loc_433238  +
test byte ptr [esi+1ACh] 20h +
mov ecx offset a_rel_bss +
mov eax offset a_rela_bss +
mov [esp+8] ebp +
cmovz eax ecx +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4060A0  +
test eax eax +
jz loc_433273  +
mov edx [esi+174h] +
movzx edx byte ptr [edx+0Bh] +
mov [eax+40h] edx +
jmp loc_433238  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_433300  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_433365  +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+4Ch] +
mov edi [esi+50h] +
mov [ebx+20h] eax +
add eax 1 +
test edi edi +
mov [esi+4Ch] eax +
jz loc_433387  +
mov ebp [ebx+4] +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
mov esi eax +
jz loc_4333A0  +
mov byte ptr [eax] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44AEA0  +
mov byte ptr [esi] 40h +
cmp eax 0FFFFFFFFh +
jz loc_433395  +
mov [ebx+38h] eax +
jmp loc_4332F1  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 1 +
cmp al 1 +
jbe loc_43330E  +
or byte ptr [ebx+34h] 8 +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+34h] +
test eax eax +
jnz loc_433315  +
jmp loc_4332F1  +
call sub_44ADF0  +
test eax eax +
mov edi eax +
mov [esi+50h] eax +
jnz loc_433328  +
xor eax eax +
jmp loc_4332F6  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44AEA0  +
jmp loc_43335B  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov esi [esp+94h+arg_8] +
mov edx [esp+94h+arg_10] +
mov ecx [esp+94h+arg_4] +
mov ebp [esp+94h+arg_20] +
mov [esp+94h+var_38] esi +
mov esi [esp+94h+arg_C] +
mov [esp+94h+var_64] edx +
mov edx [esp+94h+arg_14] +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+arg_0] +
mov [esp+94h+var_44] ecx +
mov ecx [ecx] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+arg_24] +
mov [esp+94h+var_5C] edx +
mov edx [esp+94h+arg_18] +
mov [esp+94h+var_58] eax +
mov [esp+94h+var_34] ebp +
mov [esp+94h+var_48] esi +
mov esi [esp+94h+arg_28] +
mov [esp+94h+var_50] edx +
mov edx [esp+94h+arg_1C] +
mov [esp+94h+var_40] esi +
mov esi [esp+94h+arg_2C] +
mov dword ptr [edx] 0 +
mov [esp+94h+var_3C] edx +
mov dword ptr [ebp+0] 0 +
mov [esp+94h+var_6C] esi +
mov [esp+94h+var_54] ecx +
movzx eax byte ptr [eax+0Ch] +
shr al 4 +
cmp ecx offset off_4731C8 +
movzx eax al +
mov [esp+94h+var_60] eax +
jz loc_433EF0  +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 0 +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov eax [edi+1Ch] +
mov [esp+94h+var_94] eax +
call sub_4193E0  +
mov ebp eax +
test ebp ebp +
jz loc_433990  +
mov eax [esp+94h+var_74] +
xor esi esi +
mov [eax] ebp +
mov eax [esp+94h+var_70] +
movzx edx byte ptr [ebp+34h] +
mov ecx [eax+4] +
and edx 6 +
cmp dl 2 +
mov [esp+94h+var_74] edx +
mov eax [ecx+1B0h] +
mov [esp+94h+var_68] eax +
jz loc_43351A  +
mov [esp+94h+var_90] 40h +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_4C] ecx +
call strrchr  +
mov ecx [esp+94h+var_4C] +
test eax eax +
mov esi eax +
jz loc_433F50  +
mov edx [esp+94h+var_74] +
test dl dl +
jz loc_4335F7  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov esi 0 +
cmovnz esi eax +
movzx eax byte ptr [ebp+0Ch] +
mov byte ptr [esp+94h+var_74] al +
sub eax 6 +
cmp al 1 +
ja loc_4336D4  +
mov ebx ebp +
nop   +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea eax [edx-6] +
cmp al 1 +
jbe loc_433530  +
mov eax [esp+94h+var_6C] +
mov byte ptr [esp+94h+var_74] dl +
mov eax [eax] +
test eax eax +
jnz loc_4335E0  +
cmp ebp ebx +
jz loc_4336E3  +
test dl dl +
jz loc_4336E3  +
movzx eax byte ptr [ebp+34h] +
and eax 6 +
cmp al 6 +
movzx eax byte ptr [ebx+34h] +
jz loc_43357D  +
mov edx eax +
and edx 6 +
cmp dl 6 +
jnz loc_4336E3  +
shr al 1 +
and eax 3 +
mov edx eax +
xor eax eax +
cmp edx 1 +
jle loc_4335A9  +
mov [esp+94h+var_90] 40h +
mov eax [ebx+4] +
mov [esp+94h+var_4C] ecx +
mov [esp+94h+var_94] eax +
call strrchr  +
mov ecx [esp+94h+var_4C] +
add eax 1 +
cmp eax esi +
jz loc_4340B2  +
test eax eax +
jz loc_4335D5  +
test esi esi +
jz loc_4335D5  +
mov [esp+94h+var_90] esi +
mov [esp+94h+var_94] eax +
mov [esp+94h+var_4C] ecx +
call strcmp  +
mov ecx [esp+94h+var_4C] +
test eax eax +
jnz loc_4335D5  +
mov al 1 +
jmp loc_4335D7  +
xor eax eax +
mov esi [esp+94h+var_6C] +
mov [esi] eax +
lea esi [esi+0] +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
ja loc_433700  +
movzx edx al +
jmp ds:off_48B770[edx*4]  +
cmp ebx eax +
jnb loc_4338A1  +
cmp byte ptr [eax-1] 40h +
jz loc_4338A1  +
or byte ptr [ebp+34h] 6 +
jmp loc_43350B  +
mov eax [ebx+14h] +
mov esi [eax+4] +
mov [esp+94h+var_30] esi +
mov esi [esi+94h] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+var_50] +
test esi esi +
jz loc_433645  +
mov eax [eax] +
mov [esi] eax +
jmp loc_433645  +
mov eax [ebx+14h] +
mov [esp+94h+var_30] eax +
mov eax [eax+94h] +
mov [esp+94h+var_74] eax +
mov eax [esp+94h+var_64] +
test eax eax +
jz loc_433657  +
mov edx [eax] +
test edx edx +
jz loc_433F37  +
cmp [esp+94h+var_60] 2 +
setz al  +
mov byte ptr [esp+94h+var_2C] al +
movzx eax al +
mov [esp+94h+var_64] eax +
movzx eax byte ptr [ebx+0Ch] +
cmp al 2 +
setz dl  +
cmp al 4 +
mov esi edx +
mov edx [esp+94h+var_5C] +
setz al  +
or esi eax +
mov eax esi +
movzx eax al +
test edx edx +
mov [esp+94h+var_4C] eax +
jz loc_43368F  +
mov [edx] eax +
mov edx [edi+30h] +
mov eax [esp+94h+var_68] +
mov edx [edx+4] +
mov eax [eax+74h] +
mov [esp+94h+var_94] ecx +
mov [esp+94h+var_90] edx +
call eax  +
test eax eax +
jnz loc_433715  +
mov eax 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+14h] +
mov [esp+94h+var_30] 0 +
mov [esp+94h+var_74] eax +
jmp loc_433645  +
mov eax [esp+94h+var_6C] +
mov ebx ebp +
cmp dword ptr [eax] 0 +
jnz loc_4335E0  +
mov eax [esp+94h+var_6C] +
mov dword ptr [eax] 1 +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
jbe loc_4335ED  +
lea esi [esi+0] +
mov [esp+94h+var_74] 0 +
mov [esp+94h+var_30] 0 +
jmp loc_433645  +
mov ecx [esp+94h+var_58] +
mov edx ebx +
mov eax edi +
call sub_42E730  +
mov eax [esp+94h+var_70] +
mov eax [eax+28h] +
shr eax 5 +
and eax 40h +
mov edx eax +
setnz al  +
mov byte ptr [esp+94h+var_5C] al +
movzx eax al +
test eax eax +
mov [esp+94h+var_28] eax +
jz loc_433763  +
cmp [esp+94h+var_54] offset off_4731C8 +
jz loc_43409A  +
mov eax [esp+94h+var_6C] +
mov eax [eax] +
test eax eax +
jz loc_43375F  +
or byte ptr [ebx+34h] 80h +
or byte ptr [ebp+34h] 80h +
movzx eax byte ptr [ebx+0Ch] +
test al al +
jz loc_433F23  +
mov ecx [esp+94h+var_74] +
cmp [esp+94h+var_70] ecx +
jz loc_433FFA  +
mov ecx [esp+94h+var_74] +
test ecx ecx +
jz loc_434067  +
mov ecx [esp+94h+var_74] +
mov ecx [ecx+28h] +
shr ecx 0Bh +
and ecx 1 +
mov esi [esp+94h+var_54] +
cmp esi offset off_4731C8 +
jz loc_434060  +
mov esi [esi+14h] +
shr esi 0Ch +
xor esi 1 +
and esi 1 +
lea edx [eax-1] +
cmp dl 1 +
setnbe byte ptr [esp+94h+var_6C]  +
cmp al 5 +
setnz al  +
and byte ptr [esp+94h+var_6C] al +
movzx eax byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_24] 0 +
mov [esp+94h+var_60] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Ch] +
mov byte ptr [esp+94h+var_2C] al +
and eax 0Fh +
jnz loc_433F8A  +
movzx eax byte ptr [ebx+30h] +
mov [esp+94h+var_2C] 0 +
test al al +
jnz loc_433F62  +
mov edx [esp+94h+var_50] +
test edx edx +
setz byte ptr [esp+94h+var_20]  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_4338C0  +
cmp byte ptr [esp+94h+var_20] 0 +
jz loc_4338C0  +
mov eax ecx +
mov edx esi +
xor eax 1 +
test al dl +
jz loc_4338C0  +
mov eax [esp+94h+var_60] +
test eax eax +
jz loc_4338B3  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [eax+0Ch] +
movzx eax byte ptr [ebx+30h] +
and edx 0Fh +
cmp al dl +
jz loc_433877  +
test dl dl +
jz loc_433877  +
test al al +
jz loc_433877  +
mov [esp+94h+var_16] dl +
mov edx [esp+94h+var_24] +
mov byte ptr [esp+94h+var_1C] al +
mov eax [esp+94h+var_2C] +
xor edx 1 +
xor eax 1 +
or al dl +
movzx eax byte ptr [esp+94h+var_1C] +
movzx edx [esp+94h+var_16] +
jnz loc_43388D  +
cmp [esp+94h+var_60] 0 +
jz loc_4338C0  +
cmp dl 0Ah +
setz dl  +
cmp al 0Ah +
setz al  +
cmp dl al +
jz loc_4338C0  +
mov eax [esp+94h+var_3C] +
mov dword ptr [eax] 1 +
mov eax 1 +
jmp loc_4336AE  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [ebp+34h] al +
jmp loc_43350B  +
cmp byte ptr [ebx+0Ch] 5 +
jz loc_433838  +
lea esi [esi+0] +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_4339A0  +
test byte ptr [eax+2Ah] 20h +
jnz loc_4339A0  +
mov eax [esp+94h+var_70] +
test byte ptr [eax+2Ah] 20h +
jnz loc_4339A0  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [ebx+30h] +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al dl +
jz loc_4339A0  +
cmp al 6 +
jz loc_4340CB  +
cmp dl 6 +
jnz loc_4339A0  +
mov eax [esp+94h+var_30] +
mov edi [esp+94h+var_54] +
mov [esp+94h+var_54] eax +
mov eax [esp+94h+var_60] +
mov [esp+94h+var_30] edi +
mov edi [esp+94h+var_70] +
mov [esp+94h+var_60] esi +
mov esi eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_74] edi +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+var_60] +
and eax esi +
test al 1 +
jnz loc_434105  +
mov eax [esp+94h+var_60] +
or eax esi +
mov eax [ebx+4] +
jz loc_434184  +
test esi esi +
mov [esp+94h+var_84] eax +
jz loc_43413E  +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsDefinition +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_4730E4  +
mov [esp+94h+var_94] 11h +
call sub_4029E0  +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_433A3D  +
mov eax [esp+94h+var_58] +
test byte ptr [eax+0Dh] 3 +
jz loc_433A4A  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_433A4A  +
cmp byte ptr [ebp+0Ch] 6 +
jz loc_4340EF  +
mov eax [ebx+10h] +
test eax eax +
jz loc_434168  +
mov eax [esp+94h+var_70] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_4340BC  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov eax 1 +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
jmp loc_4336AE  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jnz loc_433FB5  +
mov edx esi +
and edx 1 +
jz loc_433A5C  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_433C34  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_433A76  +
cmp byte ptr [esp+94h+var_5C] 0 +
mov eax 0 +
cmovz eax [esp+94h+var_4C] +
mov [esp+94h+var_4C] eax +
movzx eax byte ptr [esp+94h+var_24] +
test byte ptr [esp+94h+var_2C] al +
jz loc_433A8B  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_64] +
jnz loc_433CB0  +
test esi esi +
jnz loc_433CA6  +
mov eax [esp+94h+var_48] +
mov eax [eax] +
test eax eax +
jnz loc_433CBA  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_433CBA  +
and dl byte ptr [esp+94h+var_5C] +
mov [esp+94h+var_1C] 0 +
mov [esp+94h+var_16] dl +
jz loc_433B05  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_433B05  +
mov eax [esp+94h+var_54] +
mov edx [esp+94h+var_64] +
mov eax [eax+14h] +
mov [esp+94h+var_1C] edx +
and eax 3 +
cmp eax 1 +
jnz loc_433B05  +
mov eax [esp+94h+var_58] +
mov edx [esp+94h+var_24] +
mov eax [eax+4] +
xor edx 1 +
test eax eax +
mov eax edx +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_1C] eax +
mov eax ecx +
and al byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_5C] 0 +
mov [esp+94h+var_15] al +
jz loc_433B23  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_434025  +
mov eax [esp+94h+var_68] +
mov eax [eax+150h] +
test eax eax +
jz loc_433B74  +
mov ecx [esp+94h+var_30] +
mov edx [esp+94h+var_58] +
mov [esp+94h+var_88] esi +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_7C] ecx +
mov ecx [esp+94h+var_74] +
mov [esp+94h+var_90] edx +
mov [esp+94h+var_80] ecx +
mov ecx [esp+94h+var_60] +
mov [esp+94h+var_84] ecx +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_8C] ecx +
call eax  +
test eax eax +
jz loc_433990  +
mov ecx [esp+94h+var_44] +
mov eax [ecx] +
mov [esp+94h+var_54] eax +
movzx eax byte ptr [esp+94h+var_1C] +
test byte ptr [esp+94h+var_5C] al +
jz loc_433BCF  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jz loc_433BCF  +
mov edx [edi+18h] +
mov ecx [esp+94h+var_70] +
mov edx [edx+8] +
mov [esp+94h+var_84] eax +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call edx  +
test eax eax +
jz loc_433990  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jbe loc_433BC5  +
mov [ebx+2Ch] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
cmp [esp+94h+var_16] 0 +
jz loc_433C49  +
mov eax [esp+94h+var_60] +
test eax eax +
jnz loc_433BF3  +
cmp byte ptr [ebx+0Ch] 5 +
mov esi 1 +
jnz loc_433C49  +
mov eax [esp+94h+var_24] +
or eax [esp+94h+var_64] +
jz loc_433C49  +
mov eax [esp+94h+var_34] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_44] +
mov dword ptr [eax] offset off_4731C8 +
mov eax [esp+94h+var_40] +
cmp byte ptr [ebx+0Ch] 5 +
mov dword ptr [eax] 1 +
jz loc_4340E0  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_4336A9  +
mov [esp+94h+var_54] offset off_4731C8 +
jmp loc_433E3A  +
test ecx ecx +
mov eax 0 +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_64] eax +
jmp loc_433A5C  +
mov eax [esp+94h+var_1C] +
test eax eax +
jz loc_433CC9  +
cmp byte ptr [ebx+0Ch] 5 +
jnz loc_433CC9  +
mov eax [esp+94h+var_34] +
mov ecx [esp+94h+var_38] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
mov [ecx] eax +
mov eax [esp+94h+var_68] +
mov ecx [esp+94h+var_30] +
mov eax [eax+14Ch] +
mov [esp+94h+var_94] ecx +
call eax  +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_54] eax +
mov [ecx] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_28] +
test eax eax +
jz loc_433E3A  +
jmp loc_4336A9  +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_433AA1  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
jmp loc_433AB9  +
test esi 1 +
jz loc_433E26  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_433E26  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_433DA6  +
cmp [esp+94h+var_28] 0 +
jnz loc_4336A9  +
cmp [esp+94h+var_15] 0 +
jz loc_434087  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_434087  +
mov edx [ebx+14h] +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov edx [edx+94h] +
mov [ebx+14h] edx +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_54] +
test byte ptr [ecx+15h] 10h +
jz loc_433D4E  +
mov ecx [esp+94h+var_2C] +
test ecx ecx +
jz loc_433D44  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov byte ptr [ebx+30h] 0 +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
cmp byte ptr [ebp+0Ch] 6 +
jnz loc_433EE3  +
test ebp ebp +
jz loc_4336A9  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [ebx+14h] +
mov [ebp+14h] eax +
mov eax [esp+94h+var_68] +
mov [ebp+0Ch] dl +
mov [ebx+14h] ebp +
mov byte ptr [ebx+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_4336A9  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
or byte ptr [ebp+33h] 4 +
jmp loc_4336A9  +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_433DC3  +
test byte ptr [eax+2Ah] 20h +
jz loc_433DC3  +
mov eax [esp+94h+var_70] +
mov esi 1 +
test byte ptr [eax+2Ah] 20h +
jz loc_433DCF  +
mov eax [esp+94h+var_3C] +
xor esi esi +
mov dword ptr [eax] 1 +
mov ecx [esp+94h+var_28] +
mov eax [esp+94h+var_70] +
mov eax [eax+4] +
mov [esp+94h+var_8C] ecx +
mov ecx [esp+94h+var_54] +
mov [esp+94h+var_90] esi +
lea edx [ecx+14h] +
mov ecx [esp+94h+var_58] +
mov [esp+94h+var_94] edx +
mov edx ebx +
call sub_42F9F0  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_433E26  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
ja loc_433E26  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_4336A9  +
test esi esi +
jnz loc_433CF7  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jz loc_4336A9  +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_2C] +
jnz loc_433CF7  +
mov edx [esp+94h+var_5C] +
test edx edx +
jz loc_4336A9  +
mov ecx [esp+94h+var_58] +
mov eax [edi+18h] +
mov edx [ecx+4] +
mov ecx [esp+94h+var_70] +
mov eax [eax+8] +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_84] edx +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
test eax eax +
jz loc_433990  +
mov ecx [esp+94h+var_38] +
mov eax [ebx+2Ch] +
cmp eax [ecx] +
jbe loc_433EA1  +
mov [ecx] eax +
cmp byte ptr [esp+94h+var_20] 0 +
jnz loc_434231  +
mov eax [ebx+14h] +
mov ecx [esp+94h+var_50] +
mov edx [eax+40h] +
mov eax [eax+94h] +
mov [ecx] edx +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
cmp byte ptr [ebp+0Ch] 6 +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_48] +
mov dword ptr [ecx] 1 +
jz loc_4341AA  +
mov dword ptr [ebx+40h] 0 +
jmp loc_4336A9  +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_80] 0 +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 1 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] edi +
mov [esp+94h+var_94] eax +
call sub_419430  +
mov ebp eax +
jmp loc_4334AC  +
and byte ptr [ebx+34h] 0FEh +
add esp 8Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+94h+var_74] +
mov [eax] ecx +
mov eax [esp+94h+var_70] +
mov ecx [eax+4] +
jmp loc_433657  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [ebp+34h] al +
jmp loc_43351A  +
mov [esp+94h+var_20] ecx +
mov ecx [esp+94h+var_68] +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_20] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_2C] eax +
jmp loc_433800  +
mov [esp+94h+var_2C] ecx +
mov ecx [esp+94h+var_68] +
movzx eax al +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_2C] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_24] eax +
jmp loc_4337EC  +
cmp [esp+94h+var_54] offset off_4731C8 +
jz loc_433A4A  +
mov ecx [esp+94h+var_3C] +
mov dword ptr [ecx] 1 +
or byte ptr [ebx+33h] 4 +
or byte ptr [ebp+33h] 4 +
cmp al 3 +
jnz loc_4336A9  +
mov [esp+94h+arg_4] ebx +
mov [esp+94h+arg_0] edi +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4332E0  +
cmp byte ptr [esp+94h+var_2C] 0 +
jnz loc_43400B  +
mov ecx esi +
test cl cl +
jz loc_433789  +
test edx edx +
jz loc_4336A9  +
test byte ptr [ebx+33h] 2 +
jnz loc_433789  +
lea esi [esi+0] +
jmp loc_4336A9  +
test byte ptr [ebx+33h] 8 +
jz loc_433B23  +
mov eax [ebx+14h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 1 +
jnz loc_433B23  +
mov eax [esp+94h+var_2C] +
mov edx [ebx+2Ch] +
xor eax 1 +
test edx edx +
cmovz eax [esp+94h+var_5C] +
mov [esp+94h+var_5C] eax +
jmp loc_433B23  +
xor esi esi +
jmp loc_4337B2  +
mov ecx [esp+94h+var_30] +
test ecx ecx +
jz loc_4340FE  +
mov edx [ecx+98h] +
mov ecx [edx+0Ch] +
shr ecx 0Fh +
and ecx 1 +
jmp loc_433796  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jnz loc_433E56  +
jmp loc_4336A9  +
cmp [esp+94h+var_60] 2 +
jz loc_433763  +
or byte ptr [ebx+35h] 1 +
or byte ptr [ebp+35h] 1 +
jmp loc_433763  +
mov eax 1 +
jmp loc_4335D7  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_433A22  +
cmp dl 6 +
jnz loc_433936  +
jmp loc_43390C  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
jmp loc_433C1B  +
test al 1 +
jnz loc_4341B4  +
mov ebx ebp +
jmp loc_4339D0  +
xor ecx ecx +
jmp loc_433796  +
mov eax [ebx+4] +
mov [esp+94h+var_94] offset aSTlsDefiniti_0 +
mov [esp+94h+var_80] eax +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_84] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_4730E4  +
jmp loc_433984  +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_94] offset aSTlsReferenceI +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_4730E4  +
jmp loc_433984  +
mov eax [edi+1Ch] +
cmp [eax+20h] ebx +
jz loc_4339DB  +
mov byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_4339E6  +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsReferenc_0 +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_4730E4  +
jmp loc_433984  +
mov edx 1 +
jmp loc_433D67  +
movzx eax byte ptr [ebx+0Ch] +
mov esi [esp+94h+var_68] +
mov [ebp+0Ch] al +
mov eax [esi+0D8h] +
mov byte ptr [ebx+0Ch] 6 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_58] +
mov [ebx+14h] ebp +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_434225  +
mov eax [esi+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
mov ebx ebp +
jmp loc_4339D0  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_43420D  +
mov [esp+94h+var_90] 657h +
mov [esp+94h+var_94] offset a____Binutils_4 +
call sub_402930  +
jmp loc_433EAC  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
test byte ptr [eax+34h] 1 +
movzx eax byte ptr [eax+0Ch] +
jnz loc_4342FB  +
sub eax 3 +
cmp al 1 +
jbe loc_434470  +
mov edx [ebp+0] +
mov eax [edx+1Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [edi+0E0h] +
test eax eax +
jz loc_43429F  +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_4342EA  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_434410  +
movzx edx byte ptr [ebx+33h] +
test dl dl +
js loc_4343C0  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
jz loc_4342CA  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_4344CB  +
mov esi [ebx+3Ch] +
test esi esi +
jz loc_4344C1  +
movzx edx byte ptr [esi+33h] +
test dl 2 +
jz loc_434347  +
mov dword ptr [ebx+3Ch] 0 +
mov edx 1 +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_4342F4  +
sub eax 3 +
cmp al 1 +
jbe loc_434446  +
or byte ptr [ebx+33h] 11h +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_434274  +
test byte ptr [ebx+33h] 0Ch +
jz loc_434274  +
mov eax [ebp+0] +
mov [esp-4+arg_0] ebx +
mov [esp+0] eax +
call sub_4332E0  +
test eax eax +
jnz loc_434274  +
mov dword ptr [ebp+4] 1 +
xor edx edx +
jmp loc_4342EA  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_434344  +
sub eax 3 +
cmp al 1 +
jbe loc_43436E  +
mov [esp-4+arg_0] 0A4Ah +
mov dword ptr [esp+0] offset a____Binutils_4 +
call sub_402930  +
movzx edx byte ptr [esi+33h] +
and edx 8 +
jz loc_4344A8  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_434396  +
mov [esp-4+arg_0] 0A4Dh +
mov dword ptr [esp+0] offset a____Binutils_4 +
call sub_402930  +
mov edx [ebp+0] +
mov eax [edi+0D8h] +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] esi +
mov [esp+0] edx +
call eax  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+0] +
movzx eax byte ptr [ecx] +
test al 1 +
jz loc_4342B5  +
mov esi [ecx+1Ch] +
cmp dword ptr [esi+28h] 1 +
jnz loc_4342B5  +
test byte ptr [ebx+35h] 4 +
jnz loc_4344EA  +
test al 4 +
jnz loc_4343FD  +
test byte ptr [ecx+5] 1 +
jz loc_4344EA  +
test byte ptr [ebx+34h] 10h +
jnz loc_4344EA  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jmp loc_4344F7  +
movzx edx byte ptr [ebx+33h] +
mov eax edx +
and eax 0Bh +
cmp al 1 +
jnz loc_4342AD  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
mov eax [eax+28h] +
shr eax 5 +
test eax 10040h +
jnz loc_4342AD  +
or edx 2 +
mov [ebx+33h] dl +
jmp loc_4342AD  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
test eax eax +
jz loc_434460  +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43430A  +
or byte ptr [ebx+33h] 2 +
jmp loc_43430E  +
movzx eax byte ptr [ebx+33h] +
test al 2 +
jnz loc_434274  +
mov ecx [ebx+14h] +
mov edx [ecx+94h] +
test edx edx +
jz loc_434527  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
setnz al  +
test al al +
jz loc_434274  +
or byte ptr [ebx+33h] 2 +
jmp loc_434274  +
mov [esp-4+arg_0] 0A4Bh +
mov dword ptr [esp+0] offset a____Binutils_4 +
call sub_402930  +
jmp loc_434377  +
mov edx 1 +
jmp loc_4342EA  +
mov edx [ebp+0] +
mov eax [edi+0DCh] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
jmp loc_4342CA  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_4342CA  +
and edx 2 +
jz loc_4342BC  +
movzx eax al +
mov edx [edi+0DCh] +
sub eax 1 +
cmp eax 1 +
setbe al  +
movzx eax al +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] ecx +
call edx  +
jmp loc_4342B5  +
xor edx edx +
cmp ecx offset off_473270 +
jz loc_434538  +
mov eax edx +
jmp loc_434497  +
shr al 3 +
mov edx eax +
xor edx 1 +
and edx 1 +
mov eax edx +
jmp loc_434497  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
lea edx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov esi [eax] +
mov eax ebx +
mov [esp+3Ch+var_14] esi +
call sub_434250  +
test eax eax +
jnz loc_434697  +
mov ecx [esp+3Ch+var_10] +
test ecx ecx +
jz loc_43468F  +
mov ecx [esp+3Ch+arg_4] +
mov dword ptr [ecx+4] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+33h] 2 +
jz loc_4346CF  +
mov ebp [esi+30h] +
mov edi [ebx+4] +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_38] 40h +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_28] eax +
call strchr  +
test eax eax +
jz loc_4347D5  +
mov edx [ebx+40h] +
test edx edx +
jz loc_4346E0  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+1] +
cmp dl 40h +
jz loc_434888  +
add eax 1 +
mov [esp+3Ch+var_24] eax +
test dl dl +
jz loc_4346CF  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_434847  +
mov [esp+3Ch+var_20] ebp +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+arg_0] ebx +
mov ebx edx +
jmp loc_43472A  +
mov ebx [ebx] +
test ebx ebx +
jz loc_43483F  +
mov [esp+3Ch+var_38] ebp +
mov eax [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jnz loc_434720  +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+arg_0] +
sub ebp edi +
mov [esp+3Ch+var_3C] ebp +
call sub_407460  +
mov edx [esp+3Ch+var_20] +
test eax eax +
mov edi eax +
jz loc_434876  +
mov ecx [ebx+4] +
lea eax [ebp-1] +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] ecx +
call memcpy  +
lea eax [edi+ebp-2] +
mov edx [esp+3Ch+var_24] +
mov byte ptr [edi+ebp-1] 0 +
cmp byte ptr [eax] 40h +
jz loc_4348F6  +
mov [ebx+40h] edx +
mov ebp [edx+0Ch] +
mov dword ptr [edx+34h] 1 +
test ebp ebp +
jz loc_434898  +
mov eax [edx+38h] +
lea ecx [edx+0Ch] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] ecx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_434898  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov edx [ebx+40h] +
test edx edx +
jnz loc_4346CF  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_4346CF  +
mov edx [ebx+4] +
lea ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_41C250  +
test eax eax +
mov [ebx+40h] eax +
jz loc_4346CF  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_4346CF  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_4346CF  +
mov ebp [esp+3Ch+var_20] +
mov ebx [esp+3Ch+arg_0] +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 1 +
jbe loc_4348FE  +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] offset aBVersionNodeNo +
call off_4730E4  +
mov [esp+3Ch+var_3C] 11h +
call sub_4029E0  +
mov eax [esp+3Ch+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_43468F  +
lea ecx [eax+2] +
movzx edx byte ptr [eax+2] +
mov [esp+3Ch+var_24] ecx +
jmp loc_4346F4  +
mov ecx [edx+1Ch] +
test ecx ecx +
jz loc_4347CD  +
mov eax [edx+38h] +
add edx 1Ch +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_4347CD  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4347CD  +
test byte ptr [esi] 10h +
nop   +
jnz loc_4347CD  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_4347CD  +
mov byte ptr [eax] 0 +
jmp loc_434791  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4346CF  +
mov [esp+3Ch+var_38] 3Ch +
mov [esp+3Ch+var_3C] ebp +
call sub_404C60  +
test eax eax +
jz loc_434876  +
mov ecx [esp+3Ch+var_24] +
mov dword ptr [eax+30h] 0FFFFFFFFh +
mov dword ptr [eax+34h] 1 +
mov [eax+4] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [ecx] +
mov ecx [edx+7Ch] +
test ecx ecx +
jz loc_434972  +
cmp dword ptr [ecx+8] 0 +
setnz cl  +
movzx ecx cl +
mov esi [edx+7Ch] +
add edx 7Ch +
test esi esi +
jnz loc_43495A  +
jmp loc_434965  +
mov esi edx +
mov edx [esi] +
add ecx 1 +
test edx edx +
jnz loc_434958  +
mov edx esi +
mov [eax+8] ecx +
mov [edx] eax +
mov [ebx+40h] eax +
jmp loc_4346CF  +
mov ecx 1 +
jmp loc_43494C  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ch] 6 +
jz loc_4349A5  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
test byte ptr [eax] 10h +
jnz loc_43499F  +
test byte ptr [ebx+34h] 10h +
jz loc_4349A5  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4349B0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
test byte ptr [ebx+33h] 3 +
jz loc_4349A5  +
mov edx [ebx+4] +
mov eax [eax+7Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_41C420  +
test eax eax +
jnz loc_4349A5  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_4332E0  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_4349AA  +
mov eax [esp+18h+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_4349AA  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov edi [ebx+1Ch] +
cmp dword ptr [edi+28h] 1 +
jz loc_434A20  +
***
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+3Ch] +
xor eax eax +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp] edi +
test edx edx +
setz al  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call sub_4193E0  +
test eax eax +
mov esi eax +
jz loc_434C05  +
cmp byte ptr [eax+0Ch] 7 +
ja sub_434A87  +
movzx eax byte ptr [eax+0Ch] +
jmp ds:off_48B7F4[eax*4]  +
***
mov eax [esi+10h] +
movzx eax byte ptr [esi+33h] +
mov eax [esp+arg_2C] +
mov [esp+arg_4] offset aBfd_elf_record +
xor ecx ecx +
mov edx esi +
mov eax ebx +
call sub_42E730  +
and byte ptr [esi+34h] 0FEh +
jmp sub_434A87  +
***
mov eax [esp+3Ch] +
jmp loc_434A18  +
***
or byte ptr [esi+34h] 8 +
jmp loc_434B0C  +
***
mov byte ptr [esi+0Ch] 1 +
jmp loc_434AA2  +
***
cmp [edi+20h] esi +
jnz sub_434A87  +
jmp loc_434A7F  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [esp+70h] +
mov ebx [esp+74h] +
mov esi [esp+78h] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_434C66  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+0C0h] +
test eax eax +
jnz loc_434C78  +
jmp loc_434C90  +
mov eax [eax] +
test eax eax +
jz loc_434C90  +
cmp [eax+4] ebx +
jnz loc_434C72  +
cmp [eax+8] esi +
jnz loc_434C72  +
mov eax 1 +
jmp loc_434C5E  +
***
mov dword ptr [esp+4] 24h +
mov [esp] ebx +
call sub_404B80  +
test eax eax +
mov ebp eax +
jz loc_434C5C  +
lea eax [esp+34h] +
mov [esp+18h] eax +
lea eax [esp+38h] +
mov [esp+14h] eax +
lea eax [ebp+10h] +
mov [esp+10h] eax +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 1 +
mov eax [ebx+0A0h] +
mov [esp] ebx +
add eax 48h +
mov [esp+4] eax +
call sub_420CB0  +
test eax eax +
jz loc_434DC6  +
mov eax [ebp+20h] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
ja loc_434D15  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_423710  +
test eax eax +
jz loc_434DB0  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jz loc_434DB0  +
mov eax [ebx+0A0h] +
mov edx [ebp+18h] +
mov eax [eax+64h] +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_420AB0  +
mov edx [edi+1Ch] +
mov ecx eax +
mov eax [edx+50h] +
test eax eax +
jz loc_434D8A  +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jz loc_434C5C  +
mov [ebp+18h] eax +
mov eax [edi+1Ch] +
mov edx [eax+0C0h] +
mov [ebp+0] edx +
mov [eax+0C0h] ebp +
mov [ebp+4] ebx +
mov [ebp+8] esi +
add dword ptr [eax+4Ch] 1 +
mov eax 1 +
and byte ptr [ebp+1Ch] 0Fh +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+2Ch] edx +
mov [esp+28h] ecx +
call sub_44ADF0  +
mov edx [esp+2Ch] +
mov ecx [esp+28h] +
test eax eax +
mov [edx+50h] eax +
jnz loc_434D3D  +
jmp loc_434C5C  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_404DD0  +
mov eax 2 +
jmp loc_434C5E  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_404DD0  +
jmp loc_434C5C  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov ecx [esp+0Ch] +
mov eax [eax+1Ch] +
mov eax [eax+0C0h] +
test eax eax +
jnz loc_434E06  +
jmp loc_434E14  +
mov eax [eax] +
test eax eax +
jz loc_434E14  +
cmp [eax+4] edx +
jnz loc_434E00  +
cmp [eax+8] ecx +
jnz loc_434E00  +
mov eax [eax+0Ch] +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ebx [esp+18h+arg_8] +
mov eax [ebx+8Ch] +
mov ecx [eax+4] +
mov eax 1 +
cmp ecx 8 +
ja loc_434E70  +
mov edx eax +
shl edx cl +
mov ecx edx +
and ecx 103h +
jz loc_434E70  +
mov eax [esp+18h+arg_4] +
mov eax [eax+1Ch] +
cmp ebx [eax+0C8h] +
jz loc_434E75  +
mov edx [eax+68h] +
test edx edx +
jz loc_434E80  +
cmp ebx edx +
jz loc_434E75  +
cmp ebx [eax+6Ch] +
setnz al  +
movzx eax al +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_434E70  +
mov eax [eax+38h] +
test eax eax +
jz loc_434E75  +
mov edx [ebx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_405DA0  +
test eax eax +
jz loc_434E75  +
cmp ebx [eax+3Ch] +
setz al  +
movzx eax al +
jmp loc_434E70  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
mov eax [esp+2Ch+arg_4] +
mov esi [eax+8Ch] +
mov ebx [esi+68h] +
test ebx ebx +
jz loc_434EE0  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4Ch] +
test eax eax +
jz loc_434ED5  +
mov ecx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
test ecx ecx +
jz loc_435062  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_14] 0 +
test eax eax +
jz loc_4350A2  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_434F81  +
mov eax [ecx+10h] +
mov edx [ecx+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_10] ecx +
call sub_4086D0  +
mov ecx [esp+2Ch+var_10] +
test eax eax +
jz loc_435007  +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_434F54  +
mov [esp+2Ch+var_2C] eax +
call free  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
jz loc_434ED5  +
mov edx [esp+2Ch+arg_10] +
mov eax [esp+2Ch+var_18] +
test edx edx +
jz loc_434FF5  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_404DD0  +
jmp loc_434ED5  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] eax +
mov ebp [esi+4Ch] +
test ebp ebp +
jz loc_434FD6  +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
call sub_4086D0  +
test eax eax +
jnz loc_434F44  +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_42FCB0  +
test eax eax +
jz loc_434F44  +
mov ebx [esp+2Ch+arg_10] +
test ebx ebx +
jz loc_434FE5  +
mov eax [esp+2Ch+arg_C] +
mov [esi+68h] eax +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_434ED5  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_42FCB0  +
test eax eax +
jz loc_434F44  +
mov eax [esi+3Ch] +
mov ecx [eax+28h] +
mov edx [eax+18h] +
xor eax eax +
add [esp+2Ch+arg_8] edx +
test ecx ecx +
jz loc_435042  +
mov eax edx +
xor edx edx +
div  ecx +
mov edx [ebp+174h] +
movzx edx byte ptr [edx+9] +
lea ebp [edx+edx*2] +
shl ebp 2 +
imul ebp eax +
add ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] ebp +
jmp loc_434F89  +
mov edx [ebp+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
movzx edx byte ptr [edx+9] +
imul eax edx +
mov edx [esp+2Ch+arg_10] +
test edx edx +
jz loc_4350CF  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_404B80  +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
test eax eax +
jz loc_4350E5  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_434EFB  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_4350F2  +
mov eax [eax+18h] +
mov edx [esi+4Ch] +
test edx edx +
jz loc_4350B6  +
add eax [edx+18h] +
mov [esp+2Ch+var_2C] eax +
call sub_407460  +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jz loc_4350DD  +
mov [esp+2Ch+var_14] eax +
jmp loc_434F0F  +
mov [esp+2Ch+var_2C] eax +
call sub_407460  +
mov [esp+2Ch+arg_C] eax +
jmp loc_43508D  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_434F54  +
xor eax eax +
jmp loc_4350AC  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov eax [esi+4Ch] +
test eax eax +
jnz loc_435131  +
mov dword ptr [ebx] 0 +
xor eax eax +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+4] +
mov edi [eax+1B0h] +
movzx eax byte ptr [edx+2] +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] esi +
shr al 6 +
and eax 1 +
mov [esp+20h+var_10] eax +
mov [esp+20h+var_20] ecx +
call sub_434EB0  +
test eax eax +
mov [ebx] eax +
jz loc_435190  +
mov ecx [edi+174h] +
mov edx [esi+4Ch] +
mov [ebx+4] eax +
movzx ecx byte ptr [ecx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
mov [ebx+8] edx +
jmp loc_435122  +
xor eax eax +
jmp loc_43512A  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov ecx [ecx+94h] +
call sub_42EB40  +
test eax eax +
jnz loc_4351C4  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+94h] +
mov edx edi +
mov eax esi +
mov [esp+18h+var_18] ebx +
call sub_435100  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_4351BD  +
mov eax [esi+0Ch] +
mov edx [ebx+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_4351BB  +
cmp eax [edx+78h] +
jz loc_4351BB  +
mov [esp+18h+var_18] eax +
call free  +
jmp loc_4351BB  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov eax [esi+44h] +
test eax eax +
jz loc_4352F7  +
mov ebx [eax+8] +
test ebx ebx +
jz loc_4352F7  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_435250  +
mov [esp+2Ch+var_28] 3125h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_402930  +
mov ebx [esi+18h] +
mov eax [esi+2Ch] +
mov edi [esi+14h] +
add eax ebx +
mov [esp+2Ch+var_14] eax +
mov eax [edi+94h] +
mov [esp+2Ch+var_1C] 1 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_434EB0  +
test eax eax +
jz loc_435322  +
mov edx [edi+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
movzx edx byte ptr [ecx+0Bh] +
movzx ecx byte ptr [ecx+9] +
mov [esp+2Ch+var_D] dl +
mov edx [edi+4Ch] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
cmp eax edx +
jnb loc_4352F7  +
mov ebp [eax] +
cmp ebx ebp +
ja loc_4352F0  +
cmp [esp+2Ch+var_14] ebp +
jbe loc_4352F0  +
mov ecx [esi+44h] +
mov edi [ecx+4] +
test edi edi +
jz loc_435304  +
sub ebp ebx +
cmp ebp [ecx] +
jnb loc_435304  +
movzx ecx [esp+2Ch+var_D] +
shr ebp cl +
mov ecx [edi+ebp*4] +
test ecx ecx +
jz loc_435304  +
nop   +
add eax 0Ch +
cmp edx eax +
ja loc_4352C4  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [eax+8] 0 +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-0Ch] 0 +
cmp edx eax +
ja loc_4352C4  +
jmp loc_4352F7  +
mov eax [esp+2Ch+arg_4] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_4352FC  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+50h] +
mov ecx [esp+54h] +
mov eax [ebp+4] +
mov esi [eax+1B0h] +
mov eax [ecx+3Ch] +
mov edx [eax+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_435368  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_435488  +
mov eax [edx+4Ch] +
test eax eax +
jz loc_43537B  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_4353B0  +
mov eax [ecx+94h] +
mov [esp+0Ch] ecx +
mov [esp+4] ebp +
mov dword ptr [esp] offset aBRelocationSiz +
mov [esp+8] eax +
call off_4730E4  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+4Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+44h] +
mov [esp+1Ch] ecx +
mov ecx edi +
mov eax [eax+30h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+4] +
mov ebx eax +
xor eax eax +
test ecx ecx +
jz loc_435472  +
movzx eax byte ptr [edx+9] +
xor edx edx +
lea edi [eax+eax*2] +
mov eax [esp+58h] +
shl edi 2 +
mov eax [eax+18h] +
mov [esp+28h] eax +
div  ecx +
imul edi eax +
add edi [esp+5Ch] +
cmp [esp+5Ch] edi +
mov [esp+20h] edi +
jnb loc_43546A  +
mov eax ebx +
mov edi [esp+2Ch] +
imul eax ecx +
mov ebx [esp+5Ch] +
add edi eax +
mov eax edi +
mov edi esi +
mov esi eax +
nop   +
mov eax [esp+1Ch] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
call eax  +
mov edx [edi+174h] +
mov eax [esp+58h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
mov edx [eax+28h] +
add esi edx +
cmp [esp+20h] ebx +
ja loc_435420  +
mov eax [esp+24h] +
test edx edx +
mov eax [eax+4] +
mov ebx eax +
jz loc_4354A3  +
mov eax [esp+58h] +
mov ecx edx +
mov eax [eax+18h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
xor edx edx +
div  ecx +
mov ecx [esp+24h] +
add eax ebx +
mov [ecx+4] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+3Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+3Ch] +
mov [esp+1Ch] ecx +
mov ecx edi +
jmp loc_4353C6  +
***
xor eax eax +
jmp loc_435472  +
***
mov edx [esp+4] +
mov ecx [esp+8] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 1 +
jz loc_4354C8  +
mov eax 1 +
retn   +
***
cmp dword ptr [ecx+20h] 0FFFFFFFFh +
jnz loc_4354C2  +
cmp byte ptr [ecx+0Ch] 2 +
jnz loc_4354C2  +
jmp sub_4332E0  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
mov edx [ebx+18h] +
mov ecx [eax+40h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test edx eax +
jz loc_43550D  +
shr eax 1 +
sub ecx 1 +
test eax edx +
jnz loc_435504  +
cmp [esi+40h] ecx +
jnb loc_435515  +
mov [esi+40h] ecx +
mov ecx eax +
mov edx 0FFFFFFFFh +
add ecx [esi+24h] +
jb loc_435527  +
not eax  +
mov edx eax +
and edx ecx +
mov [ebx+18h] edx +
add edx [ebx+2Ch] +
test byte ptr [ebx+35h] 8 +
mov [ebx+14h] esi +
mov [esi+24h] edx +
jz loc_435546  +
mov eax [esp+20h] +
mov eax [eax+58h] +
test eax eax +
jz loc_435569  +
js loc_435551  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
cmp byte ptr [eax+1AEh] 0 +
js loc_435546  +
mov eax [esp+20h] +
mov edx [ebx+4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] edx +
mov dword ptr [esp] offset aPCopyRelocAgai +
call eax  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test ebx ebx +
jnz loc_4355A5  +
jmp loc_435646  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_4355A2  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_435646  +
movzx edx byte ptr [ebx+34h] +
xor eax eax +
test dl 8 +
jnz loc_435640  +
mov eax [esp+24h] +
mov esi 1 +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 3 +
cmp cl 1 +
jbe loc_4355E4  +
xor si si +
test byte ptr [ebx+35h] 4 +
jz loc_435650  +
movzx edx byte ptr [ebx+31h] +
and edx 3 +
jz loc_435620  +
xor eax eax +
cmp dl 2 +
jbe loc_435640  +
cmp dl 3 +
jnz loc_435620  +
mov ecx [esp+24h] +
mov edx [ecx+1Ch] +
cmp dword ptr [edx+28h] 1 +
jnz loc_435640  +
mov eax [edx+38h] +
mov edx [esp+28h] +
mov eax [eax+4] +
test edx edx +
mov eax [eax+1B0h] +
jnz loc_43568E  +
mov esi 1 +
nop   +
movzx edx byte ptr [ebx+33h] +
test dl 2 +
jnz loc_435680  +
and edx 0Ah +
mov eax 1 +
jnz loc_435640  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_435680  +
lea esi [esi+0] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
test al 4 +
mov si 1 +
jnz loc_4355E4  +
mov eax [esp+24h] +
xor si si +
test byte ptr [eax+5] 1 +
jz loc_4355E4  +
shr dl 4 +
xor edx 1 +
mov esi edx +
and esi 1 +
jmp loc_4355E4  +
***
mov eax esi +
add esp 14h +
xor eax 1 +
and eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+30h] +
mov eax [eax+158h] +
mov [esp] edx +
call eax  +
test eax eax +
mov eax 1 +
cmovz esi eax +
jmp loc_435620  +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_0] +
test edx edx +
jz loc_435730  +
movzx ecx byte ptr [edx+31h] +
and ecx 3 +
movzx eax cl +
sub eax 1 +
cmp eax 1 +
jbe loc_435730  +
movzx ebx byte ptr [edx+33h] +
test bl 0Ah +
jnz loc_4356DF  +
cmp byte ptr [edx+0Ch] 3 +
jz loc_4356E6  +
xor eax eax +
and ebx 2 +
jz loc_435735  +
movzx eax byte ptr [edx+34h] +
test al 8 +
jnz loc_435730  +
cmp dword ptr [edx+20h] 0FFFFFFFFh +
jz loc_435730  +
mov esi [esp+10h+arg_4] +
movzx edi byte ptr [esi] +
mov esi edi +
and esi 3 +
mov ebx esi +
cmp bl 1 +
jbe loc_435730  +
test byte ptr [edx+35h] 4 +
jnz loc_43571C  +
and edi 4 +
jnz loc_435730  +
mov esi [esp+10h+arg_4] +
test byte ptr [esi+5] 1 +
jnz loc_435780  +
xor eax eax +
test cl cl +
jz loc_435735  +
mov eax [esp+10h+arg_4] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_435740  +
nop   +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+38h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov eax [esp+10h+arg_4] +
mov eax [eax+58h] +
test eax eax +
jz loc_435766  +
mov eax [esp+10h+arg_8] +
jns loc_435735  +
cmp byte ptr [ecx+1AEh] 0 +
js loc_435735  +
movzx edx byte ptr [edx+30h] +
mov eax [ecx+158h] +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
jz loc_435730  +
mov eax [esp+10h+arg_8] +
jmp loc_435735  +
test al 10h +
jnz loc_43571C  +
jmp loc_435730  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
mov eax [eax+64h] +
test eax eax +
jnz loc_4357AA  +
jmp loc_4357E0  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4357E0  +
test byte ptr [eax+15h] 4 +
nop   +
jz loc_4357A3  +
mov edx eax +
xor ecx ecx +
jmp loc_4357BE  +
test byte ptr [edx+15h] 4 +
jz loc_4357CD  +
mov ebx [edx+40h] +
mov edx [edx+0Ch] +
cmp ecx ebx +
cmovb ecx ebx +
test edx edx +
jnz loc_4357B8  +
mov edx [esi+1Ch] +
mov [edx+0C8h] eax +
mov [eax+40h] ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+1Ch] +
mov dword ptr [eax+0C8h] 0 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_435820  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+38h] +
mov edx [eax+4] +
mov ebp [edx+1B0h] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] eax +
call sub_405DA0  +
test eax eax +
mov esi eax +
jz loc_4358B0  +
mov eax [ebp+174h] +
movzx edi byte ptr [eax+6] +
mov eax [esi+6Ch] +
add edi [esi+24h] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_4074F0  +
test eax eax +
jz loc_435814  +
mov edx [esp+2Ch+arg_4] +
mov ecx [ebx+38h] +
mov ebx eax +
add ebx [esi+24h] +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_14] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] edx +
mov edx [ebp+174h] +
mov edx [edx+34h] +
mov [esp+2Ch+var_24] ebx +
lea ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ecx +
call edx  +
mov eax [esp+2Ch+var_20] +
mov [esi+24h] edi +
mov [esi+6Ch] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 0C51h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_402930  +
jmp loc_435842  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [edx+1Ch] +
mov [esp+3Ch+var_20] edx +
mov esi [ebx+38h] +
test esi esi +
jz loc_435A40  +
mov edx [ebx+50h] +
test edx edx +
jz loc_435A50  +
mov eax [esp+3Ch+var_20] +
mov ebp [eax+1Ch] +
mov eax [ebp+50h] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
mov [esp+3Ch+var_24] eax +
jz loc_435A68  +
mov eax [ebp+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_44B090  +
cmp eax 1 +
jz loc_4359D2  +
mov eax [ebp+38h] +
mov edx [eax+4] +
mov esi [edx+1B0h] +
mov [esp+3Ch+var_38] offset a_dynamic +
mov [esp+3Ch+var_3C] eax +
call sub_405DA0  +
test eax eax +
jz loc_4359D2  +
mov ebx [eax+6Ch] +
mov edx [eax+24h] +
add edx ebx +
cmp ebx edx +
jnb loc_4359D2  +
mov edi ebp +
mov ecx [esi+174h] +
mov ebp eax +
jmp loc_435989  +
mov ecx [esi+174h] +
movzx eax byte ptr [ecx+6] +
add ebx eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp ebx eax +
jnb loc_4359D0  +
mov eax [ecx+30h] +
lea edx [esp+3Ch+var_14] +
mov ecx [edi+38h] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ecx +
call eax  +
cmp [esp+3Ch+var_14] 1 +
jnz loc_435973  +
mov eax [esp+3Ch+var_24] +
cmp [esp+3Ch+var_10] eax +
jnz loc_435973  +
mov eax [edi+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_44AFF0  +
mov eax 1 +
jmp loc_435A35  +
mov ebp edi +
mov eax [esp+3Ch+arg_0] +
test eax eax +
jz loc_435A20  +
mov eax [ebp+38h] +
mov edi [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_432EC0  +
test eax eax +
jz loc_435A68  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
call sub_435800  +
test eax eax +
setz al  +
add esp 3Ch +
movzx eax al +
pop ebx  +
neg eax  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+50h] +
mov esi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] esi +
call sub_44AFF0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+50h] +
mov [ebx+38h] eax +
test edx edx +
jnz loc_4358F4  +
nop   +
mov [esp+3Ch+var_24] ecx +
call sub_44ADF0  +
mov ecx [esp+3Ch+var_24] +
test eax eax +
mov [ebx+50h] eax +
jnz loc_4358F4  +
mov eax 0FFFFFFFFh +
jmp loc_435A35  +
***
mov eax [esp+8] +
cmp [esp+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
cmp edx eax +
jz loc_435AB1  +
mov ecx [edx+1B0h] +
mov edx [eax+1B0h] +
xor eax eax +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_435AA3  +
pop ebx  +
retn   +
***
mov eax [edx+74h] +
cmp [ecx+74h] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
mov eax 1 +
pop ebx  +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov ecx [esp+38h] +
mov edx [eax+18h] +
mov edx [edx+28h] +
mov [esp+14h] ecx +
mov ecx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call edx  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+44h] +
mov esi [esp+48h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4193E0  +
test eax eax +
mov ebx eax +
jz loc_435B56  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 40h +
mov [esp] esi +
call strchr  +
test eax eax +
jz loc_435B4C  +
cmp byte ptr [eax+1] 40h +
jnz loc_435B4C  +
mov [esp] esi +
mov ebx 0FFFFFFB8h +
mov [esp+1Ch] eax +
call strlen  +
mov ecx [esp+40h] +
mov [esp] ecx +
mov [esp+4] eax +
mov [esp+18h] eax +
call sub_404B80  +
test eax eax +
mov ebp eax +
jz loc_435B4C  +
mov ecx [esp+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
sub ecx esi +
lea ebx [ecx+1] +
mov [esp+8] ebx +
mov [esp+1Ch] ecx +
call memcpy  +
mov edx [esp+18h] +
lea eax [ebp+ebx+0] +
mov ecx [esp+1Ch] +
mov [esp] eax +
sub edx ebx +
lea ecx [esi+ecx+2] +
mov [esp+8] edx +
mov [esp+4] ecx +
call memcpy  +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4193E0  +
test eax eax +
mov esi eax +
jz loc_435C1E  +
mov eax [esp+40h] +
mov ebx esi +
mov [esp+4] ebp +
mov [esp] eax +
call sub_404DD0  +
jmp loc_435B4C  +
***
mov byte ptr [ebp+ebx-1] 0 +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4193E0  +
mov esi eax +
jmp loc_435C07  +
***
push esi  +
push ebx  +
sub esp 13Ch +
mov ebp [esp+13Ch+arg_0] +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp eax 1 +
jz loc_435CA0  +
cmp eax 2 +
jnz loc_435CE5  +
test byte ptr [ebp+2Bh] 20h +
jz loc_4360F0  +
mov eax [ebp+0A0h] +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_435EA2  +
add esp 13Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+13Ch+arg_4] +
test byte ptr [ebp+29h] 8 +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_FC] eax +
mov eax [ebp+4] +
mov edi [eax+1B0h] +
mov [esp+13Ch+var_104] edi +
jz loc_435D00  +
mov edi [esp+13Ch+arg_4] +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jz loc_436550  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jz loc_436316  +
mov [esp+13Ch+var_13C] 3 +
call sub_4029E0  +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_100] 0 +
mov edi [esp+13Ch+arg_4] +
mov eax [ebp+0A0h] +
test byte ptr [edi+5] 20h +
jz loc_435D62  +
mov edi [esp+13Ch+var_104] +
movzx eax word ptr [eax+26h] +
mov edx [edi+8] +
cmp edx eax +
jz loc_435D62  +
mov ecx [edi+16Ch] +
test ecx ecx +
jz loc_4360B0  +
cmp eax ecx +
jnz loc_4360B0  +
mov edi [esp+13Ch+arg_4] +
mov ecx [edi+18h] +
mov ecx [ecx+2Ch] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] offset aPAlternateElfM +
call ecx  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_435D7B  +
jmp loc_436139  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_436120  +
mov eax [ebx] +
mov edi offset a_gnu_warning_ +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_435D70  +
mov ecx [esp+13Ch+var_100] +
lea edi [eax+0Dh] +
test ecx ecx +
jz loc_435DCF  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_12C] 1 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_4193E0  +
test eax eax +
jz loc_435DCF  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_435D70  +
mov esi [ebx+24h] +
mov [esp+13Ch+var_13C] ebp +
lea eax [esi+1] +
mov [esp+13Ch+var_138] eax +
call sub_404B80  +
test eax eax +
jz loc_4360E0  +
mov [esp+13Ch+var_128] esi +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_108] eax +
call sub_4064D0  +
test eax eax +
jz loc_4360E0  +
mov edx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_104] +
mov byte ptr [edx+esi] 0 +
mov [esp+13Ch+var_118] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] edx +
mov [esp+13Ch+var_128] 0 +
and eax 1 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_12C] ebx +
mov [esp+13Ch+var_130] 1000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_41A040  +
test eax eax +
jz loc_4360E0  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 1 +
ja loc_435D70  +
mov dword ptr [ebx+24h] 0 +
or dword ptr [ebx+14h] 8000h +
jmp loc_435D70  +
mov [esp+13Ch+var_13C] ebx +
call sub_4075F0  +
mov edi eax +
mov [esp+13Ch+var_F8] eax +
xor eax eax +
test edi edi +
jz loc_435CF3  +
mov eax [ebp+0A0h] +
shl ebx 4 +
mov eax [eax+10h] +
mov edi eax +
mov [esp+13Ch+var_EC] eax +
mov eax [ebp+4] +
add ebx edi +
cmp edi ebx +
mov [esp+13Ch+var_108] ebx +
mov eax [eax+1B0h] +
mov eax [eax+40h] +
mov [esp+13Ch+var_100] eax +
jnb loc_4375AC  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_F8] +
mov ecx [esp+13Ch+var_EC] +
xor edi edi +
mov ebx 0FFFFFFFFh +
mov eax edi +
mov esi 0FFFFFFFFh +
mov edi ebp +
mov ebp eax +
mov [esp+13Ch+var_104] ebx +
mov [esp+13Ch+var_FC] 0 +
mov ebx ecx +
jmp loc_435F38  +
cmp al 2 +
jz loc_435F28  +
mov byte ptr [edi+ebp] 1 +
add ebx 10h +
add ebp 1 +
cmp ebx [esp+13Ch+var_108] +
jnb loc_43759E  +
cmp byte ptr [edi+ebp] 0 +
jnz loc_435F28  +
mov edx [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
xor eax [ebx+8] +
xor edx esi +
or edx eax +
jz loc_435F24  +
mov eax [ebx] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_13C] eax +
mov eax [esp+13Ch+var_100] +
call eax  +
cmp eax 0FFFFFFB8h +
jz loc_4360CF  +
test eax eax +
jz loc_435F28  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_436578  +
cmp al 1 +
jnz loc_435F20  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_414E60  +
test eax eax +
mov [esp+13Ch+var_14] eax +
jz loc_4360CF  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_405A00  +
test eax eax +
jz loc_4360CF  +
mov eax [esp+13Ch+arg_4] +
lea ecx [esp+13Ch+var_14] +
mov edx [ebx] +
mov eax [eax+1Ch] +
mov esi [eax+20h] +
mov eax [esp+13Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax] +
mov [esp+13Ch+var_130] ecx +
mov ecx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_134] edx +
mov edx [esp+13Ch+var_14] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] edx +
call eax  +
test eax eax +
jz loc_4360CF  +
mov eax [esp+13Ch+var_14] +
mov ecx [esp+13Ch+arg_4] +
mov edx [eax+4] +
mov edx [edx+168h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
test eax eax +
jz loc_4360CF  +
mov eax [esp+13Ch+arg_4] +
lea edx [ebx-8] +
mov [esp+13Ch+var_104] edi +
mov [esp+13Ch+var_F4] ebp +
mov eax [eax+1Ch] +
cmp esi [eax+20h] +
mov eax 1 +
cmovz eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_FC] eax +
mov eax ebp +
jmp loc_43608D  +
mov ecx [edx] +
sub eax 1 +
sub edx 10h +
mov esi [edx+14h] +
mov edi [ebx+8] +
mov ebp [ebx+0Ch] +
xor ecx edi +
xor esi ebp +
or esi ecx +
jnz loc_436563  +
mov edi [esp+13Ch+var_104] +
test eax eax +
mov byte ptr [edi+eax] 1 +
jnz loc_436070  +
mov eax [ebx+8] +
mov ebp [esp+13Ch+var_F4] +
mov esi [ebx+0Ch] +
mov [esp+13Ch+var_104] eax +
jmp loc_435F28  +
mov edi [esp+13Ch+var_104] +
mov ecx [edi+170h] +
test ecx ecx +
jz loc_435D62  +
cmp eax ecx +
jnz loc_435D62  +
jmp loc_435D40  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_138] 0 +
mov [esp+13Ch+var_13C] ebp +
call sub_415150  +
test eax eax +
jz loc_435C8D  +
mov [esp+13Ch+var_13C] 8 +
call sub_4029E0  +
xor eax eax +
jmp loc_435CF3  +
mov eax [ebp+64h] +
test eax eax +
jz loc_436139  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jz loc_436336  +
mov edx [esp+13Ch+var_100] +
xor eax eax +
test edx edx +
jnz loc_436346  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_436161  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_438123  +
mov ecx [ebp+0A0h] +
mov [esp+13Ch+var_AC] 1 +
lea eax [ecx+48h] +
mov [esp+13Ch+var_E4] eax +
mov eax [esp+13Ch+var_104] +
xor edx edx +
mov [esp+13Ch+var_108] 0 +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+18h] +
div  ebx +
mov [esp+13Ch+var_D0] eax +
mov eax [ecx+928h] +
test eax eax +
jnz loc_4361B7  +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+20h] +
sub [esp+13Ch+var_D0] eax +
mov [esp+13Ch+var_108] eax +
mov eax [ecx+218h] +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_D0] +
test eax eax +
jnz loc_4378AA  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_437930  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
test byte ptr [ebx+924h] 1 +
jz loc_4366FA  +
mov ecx [esp+13Ch+var_FC] +
mov edi [ecx+0Ch] +
test edi edi +
mov [esp+13Ch+var_F8] edi +
jz loc_4382E0  +
mov esi [ecx] +
xor eax eax +
mov [esp+13Ch+arg_0] ebp +
mov ebp ecx +
lea edi [esi+edi*4] +
nop   +
mov edx [esi] +
test edx edx +
jz loc_436242  +
mov ecx [ebp+14h] +
lea esi [esi+0] +
add eax ecx +
cmp byte ptr [edx+0Ch] 7 +
mov edx [edx] +
lea ebx [eax+ecx] +
cmovz eax ebx +
test edx edx +
jnz loc_436230  +
add esi 4 +
cmp esi edi +
jnz loc_436220  +
mov ebp [esp+13Ch+arg_0] +
mov edi [esp+13Ch+var_F8] +
shl edi 2 +
add eax edi +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_A8] edi +
call sub_407460  +
test eax eax +
mov [esp+13Ch+var_B8] eax +
jz loc_4362E7  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_408EF0  +
test eax eax +
mov [esp+13Ch+var_A4] eax +
jz loc_437CEA  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_C8] 0 +
test eax eax +
jnz loc_438170  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_4362E7  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_4362F7  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov ebx [esp+13Ch+var_D4] +
test ebx ebx +
jz loc_4360E0  +
mov eax [esp+13Ch+var_D4] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_435CF3  +
mov edi [esp+13Ch+arg_4] +
mov edx [edi+30h] +
cmp eax [edx+4] +
jnz loc_435CE5  +
mov [esp+13Ch+var_100] 1 +
jmp loc_435D08  +
cmp [esp+13Ch+var_100] 0 +
mov eax 1 +
jz loc_436161  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jnz loc_4360E0  +
test eax eax +
mov [esp+13Ch+var_20] 0 +
mov [esp+13Ch+var_1C] 0 +
jnz loc_438C9C  +
mov eax [ebp+0A0h] +
mov eax [eax+924h] +
mov [esp+13Ch+var_138] offset a_dynamic +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_E4] eax +
call sub_405CC0  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_108] eax +
jz loc_437B27  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call sub_406620  +
test eax eax +
jz loc_437A90  +
mov esi [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] esi +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
jz loc_437A90  +
mov edx [ebp+0A0h] +
mov edi [esp+13Ch+var_18] +
mov ecx [esi+24h] +
mov edx [edx+40h] +
add ecx edi +
cmp edi ecx +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_F8] eax +
jnb loc_43825F  +
mov eax [esp+13Ch+var_104] +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov eax [eax+174h] +
jmp loc_436453  +
cmp eax 6FFFFEFCh +
jz loc_437759  +
mov eax [esp+13Ch+var_104] +
mov esi [esp+13Ch+var_108] +
mov eax [eax+174h] +
mov ecx [esi+24h] +
movzx edx byte ptr [eax+6] +
add edi edx +
mov edx [esp+13Ch+var_18] +
add ecx edx +
cmp edi ecx +
jnb loc_438271  +
mov eax [eax+30h] +
lea ecx [esp+13Ch+var_14] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov eax [esp+13Ch+var_14] +
cmp eax 0Eh +
jz loc_437726  +
cmp eax 1 +
jz loc_437676  +
cmp eax 1Dh +
jz loc_4375C0  +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_436420  +
cmp eax 0Fh +
jnz loc_436420  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_404B80  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420AB0  +
test eax eax +
jz loc_437A90  +
test ebx ebx +
jz loc_437A90  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_404B80  +
test eax eax +
mov esi eax +
jz loc_437A90  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_20] +
test edx edx +
jnz loc_436538  +
jmp loc_438B6D  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_436536  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_436420  +
mov [esp+13Ch+var_13C] 5 +
call sub_4029E0  +
xor eax eax +
jmp loc_435CF3  +
mov eax edi +
mov esi ebp +
mov edi [esp+13Ch+var_104] +
mov ebp [esp+13Ch+var_F4] +
mov [esp+13Ch+var_104] eax +
jmp loc_435F28  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_414E60  +
test eax eax +
mov ecx eax +
jz loc_435F28  +
movzx eax byte ptr [eax+2Ch] +
and eax 0Ch +
cmp al 4 +
jz loc_435F28  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] ecx +
call sub_405A00  +
test eax eax +
jz loc_435F28  +
mov eax [esp+13Ch+var_F4] +
test byte ptr [eax+29h] 8 +
jnz loc_437C3D  +
mov eax [eax+0A0h] +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_F0] +
add eax 48h +
mov [esp+13Ch+var_E8] eax +
mov eax [esp+13Ch+var_F4] +
xor edx edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+18h] +
div  ecx +
mov edx [esp+13Ch+var_F0] +
mov edx [edx+928h] +
mov ecx eax +
xor eax eax +
test edx edx +
jnz loc_43662A  +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+20h] +
sub ecx eax +
test ecx ecx +
jz loc_435F28  +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_F0] ecx +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_420CB0  +
test eax eax +
mov edx eax +
mov [esp+13Ch+var_E4] eax +
jz loc_435F28  +
mov ecx [esp+13Ch+var_F0] +
lea eax [ecx+ecx*4] +
mov ecx edx +
lea edx [edx+eax*4] +
cmp ecx edx +
mov [esp+13Ch+var_F0] edx +
jnb loc_4366E9  +
mov [esp+13Ch+var_E0] edi +
mov edi [esp+13Ch+var_F4] +
mov [esp+13Ch+var_DC] ebp +
mov ebp [esp+13Ch+var_E8] +
mov [esp+13Ch+var_E8] esi +
mov esi ecx +
jmp loc_4366C3  +
mov edx [ebx] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
call strcmp  +
test eax eax +
jz loc_4388A8  +
add esi 14h +
cmp [esp+13Ch+var_F0] esi +
jbe loc_4366DD  +
mov edx [esi+8] +
mov eax [ebp+1Ch] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] eax +
call sub_420AB0  +
test eax eax +
jnz loc_4366A4  +
mov edi [esp+13Ch+var_E0] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_435F28  +
mov [esp+13Ch+var_A8] 0 +
mov [esp+13Ch+var_BC] 0 +
mov [esp+13Ch+var_D8] 0 +
mov [esp+13Ch+var_98] 0 +
mov [esp+13Ch+var_9C] 0 +
mov [esp+13Ch+var_B8] 0 +
mov [esp+13Ch+var_8C] 0 +
mov [esp+13Ch+var_90] 0 +
mov [esp+13Ch+var_94] 0 +
mov [esp+13Ch+var_A4] 0 +
mov edi [esp+13Ch+var_C0] +
mov ecx [esp+13Ch+var_108] +
mov ebx [esp+13Ch+var_D4] +
mov [esp+13Ch+var_B0] 0 +
test edi edi +
lea eax [edi+ecx*2] +
mov ecx 0 +
cmovz eax ecx +
mov [esp+13Ch+var_EC] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_C8] 0 +
mov [esp+13Ch+var_CC] 0 +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+13Ch+var_E0] eax +
jnb loc_436D62  +
mov eax [esp+13Ch+var_100] +
xor eax 1 +
mov [esp+13Ch+var_A0] eax +
mov eax [ebx] +
mov [esp+13Ch+var_44] 0 +
mov [esp+13Ch+var_58] 0 +
mov [esp+13Ch+var_5C] 0 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_104] +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ebx +
call eax  +
mov [esp+13Ch+var_E8] eax +
movzx eax byte ptr [ebx+0Ch] +
mov byte ptr [esp+13Ch+var_F8] al +
shr byte ptr [esp+13Ch+var_F8] 4 +
movzx eax byte ptr [esp+13Ch+var_F8] +
cmp al 1 +
jz loc_436FA0  +
jb loc_436D3E  +
cmp al 2 +
jz loc_436F88  +
cmp al 0Ah +
jnz loc_436835  +
mov [esp+13Ch+var_58] 800000h +
mov eax [ebx+10h] +
test eax eax +
jz loc_436ED7  +
cmp eax 0FFFFFFF1h +
jz loc_43702B  +
cmp eax 0FFFFFFF2h +
jnz loc_436FE2  +
mov eax [ebx+4] +
mov [esp+13Ch+var_5C] offset off_473120 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_E4] +
mov edx [ebx+8] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_420AB0  +
test eax eax +
mov [esp+13Ch+var_54] eax +
jz loc_437503  +
cmp dword ptr [ebx+10h] 0FFFFFFF2h +
jz loc_436F22  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+64h] +
test eax eax +
jz loc_436F78  +
lea edx [esp+13Ch+var_60] +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] edx +
lea edx [esp+13Ch+var_5C] +
mov [esp+13Ch+var_128] edx +
lea edx [esp+13Ch+var_58] +
mov [esp+13Ch+var_12C] edx +
lea edx [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
test eax eax +
jz loc_437503  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_54] +
test eax eax +
jz loc_436D3E  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_437B16  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jz loc_436FC7  +
mov eax [esp+13Ch+var_F4] +
cmp eax offset off_4731C8 +
jz loc_437565  +
mov eax [eax+14h] +
mov [esp+13Ch+var_108] eax +
shr [esp+13Ch+var_108] 0Ch +
xor [esp+13Ch+var_108] 1 +
and [esp+13Ch+var_108] 1 +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+var_FC] +
mov [esp+13Ch+var_50] 0 +
mov [esp+13Ch+var_48] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_38] 0 +
mov [esp+13Ch+var_40] 0 +
mov [esp+13Ch+var_3C] 0 +
shr al 1 +
and eax 1 +
cmp dword ptr [edi+28h] 1 +
mov [esp+13Ch+var_4C] eax +
mov eax [esp+13Ch+var_F4] +
jnz loc_436C51  +
mov eax [esp+13Ch+var_EC] +
test eax eax +
jz loc_437572  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_4208B0  +
movzx eax word ptr [esp+13Ch+var_18] +
mov esi eax +
and esi 7FFFh +
test ax ax +
js loc_436A01  +
cmp esi 1 +
jbe loc_43779B  +
cmp [esp+13Ch+var_5C] offset off_473270 +
jz loc_43777D  +
mov eax [ebx+10h] +
test eax eax +
jz loc_437460  +
mov eax [ebp+0A0h] +
mov ecx [eax+238h] +
cmp esi ecx +
ja loc_437AF2  +
cmp esi 1 +
jbe loc_437ACE  +
mov edi [eax+240h] +
lea edx [esi+esi*4] +
lea edx [edi+edx*8] +
mov edx [edx-10h] +
test edx edx +
jz loc_437AF2  +
mov [esp+13Ch+var_13C] edx +
mov [esp+13Ch+var_DC] edx +
call strlen  +
mov edx [esp+13Ch+var_DC] +
mov [esp+13Ch+var_B4] eax +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov eax ecx +
mov ecx [esp+13Ch+var_B4] +
not eax  +
sub eax 1 +
mov [esp+13Ch+var_DC] eax +
add ecx eax +
lea eax [ecx+3] +
add ecx 2 +
cmp word ptr [esp+13Ch+var_18] 0 +
cmovs eax ecx +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_C4] edx +
mov [esp+13Ch+var_13C] eax +
call sub_408EF0  +
test eax eax +
mov edi eax +
jz loc_437503  +
mov eax [esp+13Ch+var_DC] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_DC] +
mov edx [esp+13Ch+var_C4] +
lea ecx [edi+eax] +
mov byte ptr [ecx] 40h +
lea eax [ecx+1] +
cmp word ptr [esp+13Ch+var_18] 0 +
js loc_436AED  +
cmp dword ptr [ebx+10h] 0 +
jz loc_436AED  +
lea eax [ecx+2] +
mov byte ptr [ecx+1] 40h +
mov ecx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_13C] eax +
add ecx 1 +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_5C] +
mov ecx edi +
mov [esp+13Ch+var_54] edi +
cmp eax offset off_4731C8 +
jz loc_436B43  +
mov eax [esp+13Ch+var_100] +
test eax eax +
jnz loc_436B43  +
test byte ptr [ebp+2Bh] 8 +
jz loc_436B43  +
movzx eax byte ptr [ebx+0Dh] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jz loc_436B43  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+0Dh] al +
lea eax [esp+13Ch+var_38] +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_50] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_4C] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_44] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_40] +
mov [esp+13Ch+var_124] eax +
lea eax [esp+13Ch+var_48] +
mov [esp+13Ch+var_128] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
call sub_4333C0  +
test eax eax +
jz loc_437503  +
mov eax [esp+13Ch+var_14] +
test eax eax +
jnz loc_436D3E  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jz loc_436C03  +
mov eax [esp+13Ch+var_38] +
test eax eax +
mov eax 0 +
cmovz eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_108] eax +
mov eax [esp+13Ch+var_F0] +
mov eax [eax] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
ja loc_436C24  +
mov eax [eax+14h] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
jbe loc_436C15  +
mov edx [ebp+0A0h] +
mov edx [edx+240h] +
test edx edx +
jz loc_436C4A  +
cmp esi 1 +
jbe loc_436C4A  +
test byte ptr [esp+13Ch+var_108] 1 +
jz loc_436C4A  +
lea ecx [esi+esi*4] +
lea edx [edx+ecx*8-28h] +
mov [eax+40h] edx +
mov eax [esp+13Ch+var_5C] +
mov edi [esp+13Ch+var_F0] +
mov ecx [esp+13Ch+var_104] +
mov [esp+13Ch+var_118] edi +
movzx edx byte ptr [ecx+1ACh] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_58] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] 0 +
and edx 1 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_11C] edx +
mov edx [esp+13Ch+var_60] +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_128] edx +
mov [esp+13Ch+var_13C] eax +
call sub_41A040  +
test eax eax +
jz loc_437503  +
mov edi [edi] +
movzx eax byte ptr [edi+0Ch] +
mov esi edi +
sub eax 6 +
cmp al 1 +
ja loc_436CDE  +
lea esi [esi+0] +
mov esi [esi+14h] +
movzx eax byte ptr [esi+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_436CD0  +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_C4] 0 +
mov [eax] esi +
mov eax [esp+13Ch+var_58] +
shr eax 7 +
and eax 1 +
mov byte ptr [esp+13Ch+var_DC] al +
movzx eax byte ptr [esp+13Ch+var_100] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_436D13  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jnz loc_4377AE  +
mov eax [esp+13Ch+var_E8] +
test eax eax +
jz loc_436EE7  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_437AE3  +
lea esi [esi+0] +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_43703B  +
mov edi [esp+13Ch+var_EC] +
add ebx 14h +
add [esp+13Ch+var_F0] 4 +
mov eax edi +
add eax 2 +
test edi edi +
cmovz eax edi +
cmp [esp+13Ch+var_E0] ebx +
mov [esp+13Ch+var_EC] eax +
ja loc_4367C1  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_436D72  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_D4] +
test eax eax +
jz loc_436D82  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [ebp+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_43845F  +
mov eax [esp+13Ch+var_B8] +
test eax eax +
jz loc_436DE9  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 2 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_4362C8  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4382FA  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_4382FA  +
mov eax [esp+13Ch+var_B0] +
xor esi esi +
test eax eax +
jz loc_4382EE  +
mov [esp+13Ch+arg_0] ebp +
jmp loc_436E34  +
add esi 1 +
cmp esi [esp+13Ch+var_B0] +
jz loc_4382E7  +
mov eax [esp+13Ch+var_C8] +
mov ebx [eax+esi*4] +
mov edi [ebx+4] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] edi +
call strchr  +
test eax eax +
jz loc_436E24  +
movzx ecx byte ptr [ebx+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_436E24  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp+13Ch+var_13C] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_438C87  +
mov eax [ebx+4] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov byte ptr [ebp+edi+0] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_4193E0  +
test eax eax +
mov edi eax +
jz loc_436ECA  +
movzx eax byte ptr [ebx+0Ch] +
cmp [edi+0Ch] al +
jz loc_438AA4  +
mov [esp+13Ch+var_13C] ebp +
call free  +
jmp loc_436E24  +
mov [esp+13Ch+var_5C] offset off_4731C8 +
jmp loc_436867  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 10h +
jz loc_436D30  +
cmp byte ptr [esi+0Ch] 5 +
jnz loc_436D30  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+40h] +
mov edx [esp+13Ch+var_40] +
cmp edx eax +
jnb loc_437A6A  +
mov edx [esi+14h] +
mov [edx] eax +
jmp loc_436D30  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_437800  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jnz loc_43689A  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43689A  +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_405CC0  +
test eax eax +
jz loc_438B48  +
mov [esp+13Ch+var_5C] eax +
mov [esp+13Ch+var_F4] eax +
jmp loc_436917  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
jmp loc_43690B  +
mov [esp+13Ch+var_58] 80h +
mov eax [ebx+10h] +
jmp loc_436838  +
mov eax [ebx+10h] +
test eax eax +
jz loc_436ED7  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jnz loc_436840  +
mov [esp+13Ch+var_58] 2 +
jmp loc_436840  +
mov eax [esp+13Ch+var_F4] +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jnz loc_436926  +
jmp loc_436D3E  +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_423710  +
test eax eax +
mov [esp+13Ch+var_5C] eax +
jz loc_43702B  +
cmp eax offset off_473270 +
jz loc_43700D  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jz loc_437D13  +
mov edx [ebp+28h] +
shr edx 5 +
and edx 42h +
jz loc_436867  +
mov eax [eax+1Ch] +
sub [esp+13Ch+var_60] eax +
jmp loc_436867  +
mov [esp+13Ch+var_5C] offset off_473270 +
jmp loc_436867  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_437558  +
mov ecx [esp+13Ch+var_100] +
test ecx ecx +
jnz loc_437517  +
mov edx [esp+13Ch+var_108] +
movzx eax byte ptr [esi+33h] +
test edx edx +
jnz loc_437CF7  +
mov edx eax +
or edx 1 +
mov [esi+33h] dl +
cmp byte ptr [esp+13Ch+var_F8] 2 +
jz loc_437076  +
or eax 11h +
mov [esi+33h] al +
cmp edi esi +
jz loc_437084  +
test byte ptr [edi+34h] 8 +
jnz loc_437558  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 3 +
jz loc_43709F  +
test byte ptr [esi+33h] 0Ch +
jz loc_437558  +
mov [esp+13Ch+var_F8] 1 +
mov eax [esp+13Ch+var_108] +
test eax eax +
jnz loc_4379E4  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jnz loc_4370C8  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_4379E4  +
mov eax [esp+13Ch+var_40] +
test eax eax +
jnz loc_4370DF  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jz loc_4371A6  +
movzx edx byte ptr [esi+0Ch] +
cmp dl 5 +
jz loc_4371A6  +
sub edx 3 +
cmp dl 1 +
jbe loc_43710F  +
mov [esp+13Ch+var_138] 1135h +
mov [esp+13Ch+var_13C] offset a____Binutils_4 +
call sub_402930  +
mov eax [esp+13Ch+var_40] +
bsf edx [esi+18h] +
mov ecx 0FFFFFFFFh +
cmovz edx ecx +
mov ecx [esi+14h] +
mov [esp+13Ch+var_F4] edx +
mov edx [ecx+94h] +
test edx edx +
jz loc_437142  +
test byte ptr [edx+29h] 8 +
jnz loc_437142  +
mov edi [esp+13Ch+var_F4] +
mov edx [ecx+40h] +
cmp edi edx +
cmovbe edx edi +
mov [esp+13Ch+var_F4] edx +
test eax eax +
jz loc_437BFC  +
mov ecx [esp+13Ch+var_3C] +
mov edx ebp +
mov [esp+13Ch+var_E8] ecx +
cmp [esp+13Ch+var_F4] eax +
jnb loc_4371A6  +
test edx edx +
jz loc_438800  +
mov ecx eax +
mov edi 1 +
mov eax [esp+13Ch+var_54] +
shl edi cl +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_128] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_12C] eax +
mov eax 1 +
shl eax cl +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_13C] offset aWarningAlignme +
mov [esp+13Ch+var_134] eax +
call off_4730E4  +
mov eax [ebx+4] +
test eax eax +
jz loc_4371CA  +
mov edi [ebx+10h] +
test edi edi +
jz loc_4371CA  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_437C91  +
mov edx [esi+2Ch] +
test edx edx +
jnz loc_4371CA  +
mov [esi+2Ch] eax +
movzx eax byte ptr [esi+0Ch] +
cmp al 5 +
jz loc_437AAF  +
movzx ecx byte ptr [esp+13Ch+var_108] +
movzx edx byte ptr [ebx+0Ch] +
and ecx 1 +
and edx 0Fh +
mov byte ptr [esp+13Ch+var_F4] cl +
jz loc_43723E  +
test cl cl +
jz loc_4371FA  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jz loc_437AA6  +
mov ecx [esp+13Ch+var_48] +
test ecx ecx +
jz loc_43720D  +
cmp al 5 +
jz loc_437AA6  +
movzx eax byte ptr [esi+30h] +
test al al +
jnz loc_43723E  +
movzx ecx dl +
cmp ecx 0Ah +
jz loc_437D56  +
movzx edx al +
cmp edx ecx +
jz loc_43723E  +
test al al +
jz loc_43723B  +
mov eax [esp+13Ch+var_4C] +
test eax eax +
jz loc_438877  +
mov [esi+30h] cl +
mov edx [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_100] +
mov edi [esp+13Ch+var_108] +
mov eax [ebp+4] +
add edx 14h +
mov [esp+13Ch+var_134] ecx +
mov ecx ebx +
mov [esp+13Ch+var_13C] edx +
mov edx esi +
mov [esp+13Ch+var_138] edi +
call sub_42F9F0  +
test edi edi +
jz loc_437295  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 20h +
jz loc_437295  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
test byte ptr [ebp+2Ah] 20h +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
mov eax [esp+13Ch+var_108] +
test eax eax +
jz loc_437329  +
movzx eax byte ptr [ebx+0Eh] +
mov [esi+32h] al +
mov eax [esp+13Ch+var_58] +
shr eax 17h +
and eax 1 +
lea edx ds:0[eax*4] +
movzx eax byte ptr [esi+35h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+35h] al +
movzx eax byte ptr [esp+13Ch+var_A0] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_437329  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] eax +
call strchr  +
test eax eax +
jz loc_437329  +
cmp byte ptr [eax+1] 40h +
jz loc_437329  +
mov edi [esp+13Ch+var_C8] +
test edi edi +
jz loc_438A75  +
mov eax [esp+13Ch+var_B0] +
mov ecx [esp+13Ch+var_C8] +
mov [ecx+eax*4] esi +
add eax 1 +
mov [esp+13Ch+var_B0] eax +
mov ecx [esp+13Ch+var_F8] +
test ecx ecx +
jnz loc_437840  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_436D3E  +
cmp [esp+13Ch+var_AC] 0 +
jnz loc_436D3E  +
test byte ptr [esi+35h] 1 +
jz loc_437ABE  +
mov eax [ebp+0A0h] +
mov [esp+13Ch+var_AC] 0 +
test byte ptr [eax+924h] 1 +
jz loc_436D3E  +
mov edi [esp+13Ch+var_FC] +
mov edx [edi+64h] +
mov edi [eax+220h] +
test edx edx +
jz loc_4373C0  +
mov [esp+13Ch+var_108] ebx +
mov ebx edx +
mov eax [ebx+4] +
mov eax [eax+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_4373B6  +
mov eax [ebx+8] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call strcmp  +
test eax eax +
jz loc_437ABA  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43738D  +
mov ebx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_3C] +
mov ecx [esp+13Ch+arg_4] +
mov edx [ecx+18h] +
mov ecx [esi+4] +
mov edx [edx+34h] +
mov [esp+13Ch+var_130] ecx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] offset asc_48BA8D +
call edx  +
mov ecx [esp+13Ch+var_3C] +
mov eax [ebp+0A0h] +
test ecx ecx +
mov edx [eax+924h] +
jz loc_43740C  +
test dl 8 +
jnz loc_438C5A  +
and edx 0FFFFFFFEh +
mov ecx edi +
mov [eax+924h] edx +
mov edx [esp+13Ch+arg_4] +
mov eax ebp +
mov [esp+13Ch+var_13C] 1 +
call sub_4358D0  +
test eax eax +
js loc_437503  +
mov [esp+13Ch+var_AC] 1 +
jz loc_436D3E  +
mov [esp+13Ch+var_138] 11FDh +
mov [esp+13Ch+var_13C] offset a____Binutils_4 +
call sub_402930  +
jmp loc_436D3E  +
mov eax [ebp+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_4374D7  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_437487  +
jmp loc_4374D0  +
mov eax [eax+14h] +
test eax eax +
jz loc_4374D0  +
movzx edx word ptr [eax+6] +
cmp esi edx +
jnz loc_437480  +
mov edx [eax+10h] +
test edx edx +
jz loc_4374D7  +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
lea edi [ecx-1] +
or ecx 0FFFFFFFFh +
mov [esp+13Ch+var_DC] edi +
mov edi edx +
scas   +
mov edi [esp+13Ch+var_DC] +
not ecx  +
lea eax [ecx-1] +
mov [esp+13Ch+var_B4] eax +
lea eax [eax+edi+2] +
jmp loc_436A8B  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_437470  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBSInvalidNeede +
mov [esp+13Ch+var_134] eax +
call off_4730E4  +
mov [esp+13Ch+var_13C] 11h +
call sub_4029E0  +
mov esi [esp+13Ch+var_B8] +
test esi esi +
jnz loc_4362C8  +
jmp loc_4362D7  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_437D49  +
or byte ptr [esi+33h] 4 +
or byte ptr [edi+33h] 4 +
cmp edi esi +
jz loc_437535  +
test byte ptr [edi+34h] 8 +
jnz loc_437558  +
test byte ptr [esi+33h] 3 +
jnz loc_43709F  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_437558  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_437558  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_43709F  +
mov [esp+13Ch+var_F8] 0 +
jmp loc_4370A7  +
mov [esp+13Ch+var_108] 0 +
jmp loc_43694B  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 4 +
jz loc_437A74  +
mov eax [ebp+0A0h] +
mov edx [eax+238h] +
mov eax edx +
mov word ptr [esp+13Ch+var_18] dx +
jmp loc_4369DA  +
mov ecx [esp+13Ch+var_FC] +
mov ebp edi +
test ecx ecx +
jnz loc_435EF5  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_435C8D  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_404B80  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420AB0  +
test eax eax +
jz loc_437A90  +
test ebx ebx +
jz loc_437A90  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_404B80  +
test eax eax +
mov esi eax +
jz loc_437A90  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_437662  +
jmp loc_438453  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_437660  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_43648C  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_404B80  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420AB0  +
test eax eax +
jz loc_437A90  +
test ebx ebx +
jz loc_437A90  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_404B80  +
test eax eax +
mov esi eax +
jz loc_437A90  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [eax+64h] +
test edx edx +
jnz loc_437712  +
jmp loc_43844B  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_437710  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_436483  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420AB0  +
test eax eax +
mov [esp+13Ch+var_F4] eax +
jz loc_437A90  +
mov eax [esp+13Ch+var_14] +
jmp loc_43647A  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420AB0  +
mov [esp+13Ch+var_F0] eax +
jmp loc_43642B  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_436A01  +
mov eax [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_54] +
jmp loc_436B17  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_436D13  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_436D13  +
mov eax [esi+3Ch] +
test eax eax +
jnz loc_436D13  +
mov eax [esp+13Ch+var_CC] +
mov [esp+13Ch+var_C4] 1 +
mov [esp+13Ch+var_CC] esi +
mov [esi+3Ch] eax +
jmp loc_436D13  +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_405CC0  +
test eax eax +
jnz loc_436F68  +
mov [esp+13Ch+var_134] 209001h +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_406180  +
test eax eax +
jnz loc_436F68  +
jmp loc_437503  +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_43827E  +
movzx eax byte ptr [esi+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_437C16  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_436D3E  +
mov eax [esp+13Ch+var_AC] +
test eax eax +
jnz loc_436D3E  +
test byte ptr [esi+33h] 10h +
jz loc_43734E  +
mov eax [esp+13Ch+var_3C] +
test eax eax +
jz loc_438952  +
test byte ptr [eax+2Ah] 20h +
jnz loc_43734E  +
mov edx [ebp+0A0h] +
mov edi [edx+220h] +
jmp loc_4373C7  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_138] eax +
call sub_420CB0  +
test eax eax +
mov [esp+13Ch+var_D4] eax +
jz loc_4360E0  +
mov eax [esp+13Ch+var_F0] +
test eax eax +
jnz loc_4361D5  +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
shl eax 2 +
mov [esp+13Ch+var_138] eax +
call sub_404C60  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_F0] eax +
jz loc_436303  +
mov eax [ebp+0A0h] +
mov [eax+218h] edi +
jmp loc_4361D5  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+4] +
mov [esp+13Ch+var_13C] ebp +
shr al 2 +
and eax 1 +
mov [esp+13Ch+var_138] eax +
call sub_42A430  +
test eax eax +
jz loc_4362F7  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
mov esi [ebx+914h] +
test esi esi +
jz loc_4361EF  +
mov eax [ebx+178h] +
mov [esp+13Ch+var_13C] eax +
call sub_407460  +
test eax eax +
mov [esp+13Ch+var_C0] eax +
jz loc_4362F7  +
mov eax [ebx+170h] +
mov edx [ebx+174h] +
mov esi [ebx+178h] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
call sub_4086D0  +
test eax eax +
jnz loc_4362E7  +
mov eax [esp+13Ch+var_C0] +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_4084C0  +
cmp esi eax +
jnz loc_4362E7  +
mov ebx [ebp+0A0h] +
jmp loc_4361EF  +
mov eax [esp+13Ch+var_5C] +
movzx edx byte ptr [esi+34h] +
mov [esp+13Ch+var_88] eax +
mov eax [esp+13Ch+var_54] +
test dl 2 +
mov [esp+13Ch+var_84] edx +
mov ecx eax +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_34] eax +
jnz loc_4370C8  +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] ecx +
call strchr  +
mov edx [esp+13Ch+var_84] +
and edx 6 +
mov [esp+13Ch+var_B4] eax +
jnz loc_437D67  +
test eax eax +
jz loc_438B79  +
mov eax [esp+13Ch+var_B4] +
cmp byte ptr [eax+1] 40h +
jz loc_438865  +
or byte ptr [esi+34h] 6 +
jmp loc_4370C8  +
mov eax [esi+14h] +
mov [eax] edx +
jmp loc_436D30  +
xor eax eax +
mov ecx [esp+13Ch+var_54] +
xor esi esi +
mov word ptr [esp+13Ch+var_18] ax +
mov eax [esp+13Ch+var_F4] +
jmp loc_436B17  +
mov eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_4360E2  +
movzx eax byte ptr [esi+30h] +
jmp loc_437215  +
mov edx [esi+18h] +
mov [esi+2Ch] edx +
jmp loc_4371D6  +
mov ebx [esp+13Ch+var_108] +
mov [esp+13Ch+var_AC] 0 +
jmp loc_436D3E  +
mov [esp+13Ch+var_B4] 0 +
mov edx offset unk_48B878 +
jmp loc_436A57  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call near ptr dword_407E70  +
jmp loc_436F09  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_13C] offset aBSInvalidVersi +
call off_4730E4  +
mov [esp+13Ch+var_13C] 11h +
call sub_4029E0  +
jmp loc_437503  +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov ecx [esp+13Ch+var_1C] +
test ecx ecx +
jz loc_438851  +
mov [esp+13Ch+var_20] ecx +
mov eax [esp+13Ch+var_FC] +
mov edx [eax+0C4h] +
test edx edx +
jnz loc_437B62  +
jmp loc_438B3D  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_437B60  +
mov [edx] ecx +
mov [esp+13Ch+var_13C] ebp +
call sub_405C70  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_437C68  +
cmp byte ptr [eax] 0 +
jz loc_437C68  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F4] +
xor ecx ecx +
test byte ptr [esp+13Ch+var_E4] 0Bh +
mov edx [esp+13Ch+arg_4] +
setz cl  +
mov [eax+220h] edi +
mov eax ebp +
mov [esp+13Ch+var_AC] ecx +
mov [esp+13Ch+var_13C] ecx +
mov ecx edi +
call sub_4358D0  +
test eax eax +
js loc_4360E0  +
jnz loc_435C8D  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F0] +
mov [eax+224h] edi +
mov ecx [ebp+0A0h] +
mov eax [ecx+910h] +
test eax eax +
jz loc_436172  +
lea eax [ecx+0F0h] +
mov [esp+13Ch+var_E4] eax +
jmp loc_436179  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call near ptr dword_407E70  +
mov edx [esp+13Ch+var_3C] +
mov [esp+13Ch+var_E8] ebp +
jmp loc_437157  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] edi +
call eax  +
jmp loc_437335  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+0A0h] +
lea ecx [eax+0F0h] +
mov [esp+13Ch+var_E8] ecx +
mov ecx [eax+910h] +
mov [esp+13Ch+var_F0] eax +
test ecx ecx +
jnz loc_4365ED  +
jmp loc_4365E2  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
test edi edi +
mov [esp+13Ch+var_F4] edi +
jz loc_437C85  +
cmp byte ptr [edi] 0 +
jnz loc_437B8D  +
mov edi [ebp+0] +
mov [esp+13Ch+var_F4] edi +
jmp loc_437B8D  +
mov edx [esi+2Ch] +
test edx edx +
jz loc_4371C7  +
cmp eax edx +
jz loc_4371C7  +
mov edi [esp+13Ch+var_50] +
test edi edi +
jnz loc_4371C7  +
mov [esp+13Ch+var_128] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_13C] offset aWarningSizeOfS +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_138] eax +
call off_4730E4  +
mov eax [ebx+4] +
jmp loc_4371C7  +
mov [esp+13Ch+var_C8] 0 +
jmp loc_4362C8  +
or eax 2 +
test al 8 +
mov [esi+33h] al +
jz loc_437076  +
and eax 0FFFFFFF7h +
or eax 4 +
mov [esi+33h] al +
jmp loc_437076  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_43700D  +
cmp dx 200h +
jz loc_43700D  +
mov [esp+13Ch+var_5C] offset off_4731C8 +
mov dword ptr [ebx+10h] 0 +
jmp loc_436867  +
or byte ptr [esi+33h] 8 +
or byte ptr [edi+33h] 8 +
jmp loc_43752B  +
test byte ptr [ebp+29h] 8 +
mov edx 2 +
cmovnz ecx edx +
jmp loc_437221  +
mov eax [esp+13Ch+var_B4] +
test eax eax +
jz loc_4370C8  +
mov eax [ebp+4] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_7C] eax +
movzx eax byte ptr [eax+1ACh] +
mov byte ptr [esp+13Ch+var_78] al +
mov eax [ebp+28h] +
and byte ptr [esp+13Ch+var_78] 1 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_B4] +
sub eax [esp+13Ch+var_F4] +
shr [esp+13Ch+var_80] 5 +
and [esp+13Ch+var_80] 3FFFFh +
mov [esp+13Ch+var_84] eax +
add eax 1 +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_408EF0  +
test eax eax +
mov edi eax +
jz loc_437503  +
mov edx [esp+13Ch+var_F4] +
mov eax [esp+13Ch+var_84] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax [esp+13Ch+var_84] +
mov ecx edi +
mov edx [esp+13Ch+arg_4] +
mov byte ptr [edi+eax] 0 +
mov eax [esp+13Ch+var_88] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_18] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
lea eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov [esp+13Ch+var_14] 1 +
call sub_4333C0  +
test eax eax +
jz loc_437503  +
movzx eax byte ptr [esp+13Ch+var_78] +
mov [esp+13Ch+var_78] eax +
mov eax [esp+13Ch+var_80] +
shr eax 6 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_28] +
and [esp+13Ch+var_80] 1 +
test eax eax +
jnz loc_437F9A  +
mov eax [esp+13Ch+var_1C] +
test eax eax +
jz loc_4389E2  +
mov eax [esp+13Ch+var_24] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
mov edi [esp+13Ch+var_F8] +
cmp dl 1 +
ja loc_437F48  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_437F2E  +
mov [esp+13Ch+var_F8] edi +
mov [esp+13Ch+var_24] eax +
movzx edx byte ptr [esi+33h] +
mov byte ptr [esi+0Ch] 6 +
mov [esi+14h] eax +
test dl 8 +
jz loc_437F71  +
and edx 0FFFFFFF7h +
mov [esi+33h] dl +
movzx edx byte ptr [eax+33h] +
or edx 4 +
mov [eax+33h] dl +
and dl 3 +
jnz loc_438EF3  +
mov [esp+13Ch+var_24] esi +
mov eax esi +
movzx edx byte ptr [eax+0Ch] +
cmp dl 7 +
jnz loc_437F91  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
mov [esp+13Ch+var_24] eax +
cmp dl 6 +
jz loc_438B8B  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
call strlen  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_70] eax +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_408EF0  +
test eax eax +
mov edi eax +
jz loc_437503  +
mov edx [esp+13Ch+var_84] +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] ecx +
call memcpy  +
mov edx [esp+13Ch+var_84] +
mov eax edi +
mov ecx [esp+13Ch+var_70] +
mov [esp+13Ch+var_74] edi +
add eax edx +
sub ecx edx +
mov edx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_13C] eax +
add edx 1 +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov edi [esp+13Ch+var_88] +
mov eax ebp +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_18] edi +
lea edi [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] edi +
lea edi [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] edi +
lea edi [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] edi +
lea edi [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] edi +
lea edi [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] edi +
lea edi [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] edi +
lea edi [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] edi +
lea edi [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] edi +
lea edi [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] edi +
mov edi [esp+13Ch+var_74] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov ecx edi +
call sub_4333C0  +
test eax eax +
jz loc_437503  +
mov ecx [esp+13Ch+var_28] +
test ecx ecx +
jnz loc_4370C8  +
cmp [esp+13Ch+var_1C] 0 +
mov eax [esp+13Ch+var_24] +
jz loc_438DBD  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_4370C8  +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBUnexpectedRed +
call off_4730E4  +
jmp loc_4370C8  +
mov eax [esp+13Ch+arg_4] +
mov edi [ebp+4] +
mov eax [eax+30h] +
cmp [eax+4] edi +
jnz loc_436161  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+30h] 0 +
jnz loc_436161  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_432EC0  +
test eax eax +
jnz loc_436161  +
xor eax eax +
jmp loc_4360E2  +
mov esi [esp+13Ch+var_FC] +
mov ecx [esp+13Ch+var_B8] +
mov ebx [esp+13Ch+var_A8] +
mov eax [esi] +
mov [esp+13Ch+var_13C] ecx +
mov edi ecx +
mov [esp+13Ch+var_134] ebx +
add edi ebx +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov ecx [esi+1Ch] +
mov eax [esi+50h] +
mov [esp+13Ch+var_9C] ecx +
mov ecx [esi+20h] +
mov [esp+13Ch+var_98] ecx +
mov ecx [esi] +
mov [esp+13Ch+var_94] ecx +
mov ecx [esi+0Ch] +
mov [esp+13Ch+var_90] ecx +
mov ecx [esi+10h] +
mov [esp+13Ch+var_8C] ecx +
mov ecx [esi+4Ch] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_D8] ecx +
call sub_44B160  +
mov ecx [esi+0Ch] +
test ecx ecx +
mov [esp+13Ch+var_BC] eax +
jz loc_436765  +
xor ebx ebx +
mov [esp+13Ch+arg_0] ebp +
mov ebp edi +
mov edi ebx +
mov ebx esi +
mov eax [ebx] +
mov esi [eax+edi*4] +
test esi esi +
jz loc_43824B  +
mov eax [ebx+14h] +
jmp loc_438216  +
mov esi [esi] +
test esi esi +
jz loc_43824B  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] esi +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
cmp byte ptr [esi+0Ch] 7 +
jnz loc_438210  +
mov edx [esi+14h] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
jmp loc_438210  +
add edi 1 +
cmp edi [ebx+0Ch] +
jb loc_4381FC  +
mov ebp [esp+13Ch+arg_0] +
jmp loc_436765  +
mov edx edi +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov [esp+13Ch+var_13C] edx +
call free  +
jmp loc_437B37  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_4332E0  +
test eax eax +
jz loc_437503  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_43785C  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_43785C  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_43785C  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_4332E0  +
test eax eax +
jnz loc_43785C  +
jmp loc_437503  +
xor eax eax +
jmp loc_436250  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_CC] +
test eax eax +
jz loc_438399  +
mov ebx [esp+13Ch+var_D0] +
shl ebx 2 +
mov [esp+13Ch+var_13C] ebx +
call sub_407460  +
test eax eax +
mov edi eax +
jz loc_4360E0  +
mov eax [ebp+0A0h] +
mov esi [eax+218h] +
lea eax [esi+ebx] +
cmp esi eax +
mov [esp+13Ch+var_108] eax +
jnb loc_43868D  +
mov ecx edi +
mov [esp+13Ch+var_F4] 0 +
jmp loc_438353  +
add esi 4 +
cmp [esp+13Ch+var_108] esi +
jbe loc_438695  +
mov ebx [esi] +
test ebx ebx +
jz loc_438346  +
cmp byte ptr [ebx+0Ch] 3 +
jnz loc_438346  +
mov eax [esp+13Ch+var_104] +
movzx edx byte ptr [ebx+30h] +
mov [esp+13Ch+var_F8] ecx +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
mov ecx [esp+13Ch+var_F8] +
test eax eax +
jnz loc_438346  +
mov [ecx] ebx +
add ecx 4 +
add [esp+13Ch+var_F4] 1 +
jmp loc_438346  +
mov [esp+13Ch+var_13C] edi +
mov ebp [esp+13Ch+arg_0] +
call free  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_4383BC  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] edi +
call eax  +
test eax eax +
jz loc_4360E0  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_4389CF  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_438CB8  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 1 +
jnz loc_4389CF  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_435C8D  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+1] 8 +
jz loc_438965  +
cmp [esp+13Ch+var_AC] 0 +
jz loc_435C8D  +
mov [esp+13Ch+var_138] 8 +
mov [esp+13Ch+var_13C] ebp +
call sub_404B80  +
test eax eax +
jz loc_4360E0  +
mov edi [esp+13Ch+var_FC] +
mov [eax+4] ebp +
mov edx [edi+0D0h] +
mov [eax] edx +
mov [edi+0D0h] eax +
mov eax 1 +
jmp loc_435CF3  +
lea edx [eax+64h] +
jmp loc_437718  +
lea edx [esp+13Ch+var_1C] +
jmp loc_437668  +
mov edx [eax+218h] +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_138] 0 +
mov ebx [esp+13Ch+var_B8] +
mov esi [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] edx +
shl eax 2 +
mov [esp+13Ch+var_134] eax +
call memset  +
mov eax [esp+13Ch+var_FC] +
add esi ebx +
mov ecx [esp+13Ch+var_94] +
mov edi [esp+13Ch+var_90] +
mov edx [esp+13Ch+var_8C] +
mov [eax] ecx +
mov [eax+0Ch] edi +
mov edi eax +
mov [eax+10h] edx +
mov eax [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax edi +
mov edi [esp+13Ch+var_9C] +
mov ecx [esp+13Ch+var_BC] +
mov [eax+1Ch] edi +
mov edi [esp+13Ch+var_98] +
mov [eax+20h] edi +
mov edi eax +
mov eax [eax+50h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call sub_44B0E0  +
mov eax [edi+0Ch] +
mov [esp+13Ch+var_100] 0 +
test eax eax +
jz loc_438609  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_FC] +
mov eax [ebp+0] +
mov edi [esp+13Ch+var_100] +
mov ebx [eax+edi*4] +
test ebx ebx +
jnz loc_438581  +
jmp loc_4385F0  +
mov edi [esp+13Ch+var_D8] +
cmp [eax+20h] edi +
jl loc_438545  +
mov edx [eax+38h] +
cmp [esp+13Ch+var_BC] edx +
ja loc_4385B5  +
xor edi edi +
cmp byte ptr [eax+0Ch] 5 +
mov [esp+13Ch+var_108] 0 +
jz loc_4385A7  +
mov eax [ebp+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov edx [ebp+14h] +
mov ecx ebx +
movzx eax byte ptr [ebx+0Ch] +
add esi edx +
cmp al 7 +
jz loc_4385D1  +
cmp al 5 +
jz loc_438590  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4385F0  +
cmp byte ptr [ebx+0Ch] 7 +
mov eax ebx +
jnz loc_438530  +
mov eax [ebx+14h] +
jmp loc_438530  +
cmp [ecx+18h] edi +
jnb loc_438598  +
mov [ecx+18h] edi +
mov eax [ecx+14h] +
mov edi [esp+13Ch+var_108] +
cmp [eax] edi +
jnb loc_43857B  +
mov [eax] edi +
jmp loc_43857B  +
mov edi [eax+18h] +
mov eax [eax+14h] +
mov eax [eax] +
mov [esp+13Ch+var_108] eax +
jmp loc_438555  +
mov ecx [ebp+50h] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_108] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_44AFF0  +
mov eax [esp+13Ch+var_108] +
jmp loc_438545  +
mov eax [ebx+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call memcpy  +
mov ecx [ebx+14h] +
add esi [ebp+14h] +
movzx eax byte ptr [ecx+0Ch] +
jmp loc_438577  +
add [esp+13Ch+var_100] 1 +
mov eax [esp+13Ch+var_100] +
cmp eax [ebp+0Ch] +
jb loc_438516  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_437503  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_FC] +
mov edi [esp+13Ch+var_A4] +
mov eax [eax+8] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_45EB70  +
cmp [esp+13Ch+var_C8] 0 +
jz loc_435C8D  +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax 1 +
jmp loc_435CF3  +
mov [esp+13Ch+var_F4] 0 +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] offset sub_42E7B0 +
mov [esp+13Ch+var_134] 4 +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call qsort  +
mov [esp+13Ch+arg_0] ebp +
mov eax [esp+13Ch+var_CC] +
mov ecx [eax+3Ch] +
mov dword ptr [eax+3Ch] 0 +
movzx eax byte ptr [eax+0Ch] +
mov [esp+13Ch+var_108] ecx +
mov byte ptr [esp+13Ch+var_F8] al +
sub eax 3 +
cmp al 3 +
ja loc_438781  +
mov eax [esp+13Ch+var_CC] +
xor ecx ecx +
mov ebp [eax+14h] +
mov esi [eax+18h] +
mov eax [esp+13Ch+var_F4] +
test eax eax +
mov edx eax +
jnz loc_438709  +
jmp loc_438768  +
jz loc_438720  +
lea ecx [eax+1] +
cmp ecx edx +
jz loc_438768  +
lea eax [edx+ecx] +
shr eax 1 +
mov ebx [edi+eax*4] +
cmp esi [ebx+18h] +
jns loc_438700  +
mov edx eax +
jmp loc_438705  +
mov ebx [ebx+14h] +
mov ebx [ebx+4] +
cmp [ebp+4] ebx +
js loc_438716  +
jnz loc_438702  +
jmp loc_43873D  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_438744  +
cmp esi [ebx+18h] +
jnz loc_438744  +
add eax 1 +
cmp eax edx +
jnz loc_438730  +
sub eax 1 +
sub ecx 1 +
mov edx [esp+13Ch+var_CC] +
jmp loc_438764  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_438768  +
cmp esi [ebx+18h] +
jnz loc_438768  +
sub eax 1 +
cmp edx ebx +
jnz loc_43879A  +
cmp eax ecx +
jnz loc_438750  +
mov ebp [esp+13Ch+var_108] +
test ebp ebp +
jz loc_43838A  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_CC] eax +
jmp loc_4386BC  +
mov [esp+13Ch+var_138] 12D6h +
mov [esp+13Ch+var_13C] offset a____Binutils_4 +
call sub_402930  +
jmp loc_4386E1  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
mov [eax+3Ch] ebx +
jz loc_4387C4  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_438768  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] eax +
call sub_4332E0  +
test eax eax +
jz loc_4387F1  +
mov eax [ebx+20h] +
cmp eax 0FFFFFFFFh +
jz loc_438768  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_438768  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_4332E0  +
test eax eax +
jnz loc_438768  +
mov [esp+13Ch+var_13C] edi +
call free  +
xor eax eax +
jmp loc_435CF3  +
mov edi [esi+14h] +
mov dl 1 +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] offset aWarningAlign_0 +
mov [esp+13Ch+var_B4] edi +
mov edi edx +
shl edi cl +
mov ecx [esp+13Ch+var_54] +
mov [esp+13Ch+var_128] edi +
mov edi [esp+13Ch+var_B4] +
mov [esp+13Ch+var_12C] ecx +
mov ecx eax +
mov eax [esp+13Ch+var_E8] +
shl edx cl +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] eax +
call off_4730E4  +
jmp loc_4371A6  +
mov ecx [esp+13Ch+var_20] +
test ecx ecx +
jz loc_437B6A  +
jmp loc_437B4D  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [esi+34h] al +
jmp loc_437D76  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_E8] ecx +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aWarningTypeOfS +
call off_4730E4  +
mov ecx [esp+13Ch+var_E8] +
jmp loc_43723B  +
mov ecx esi +
mov edi [esp+13Ch+var_E0] +
movzx edx byte ptr [ecx+0Ch] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax edx +
shr al 4 +
cmp al 9 +
ja loc_4388CB  +
sub al 1 +
jnz loc_4366E9  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F0] ecx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_F4] eax +
mov eax [eax+158h] +
mov ecx eax +
mov eax edx +
and eax 0Fh +
mov [esp+13Ch+var_13C] eax +
call ecx  +
test eax eax +
jnz loc_4366E9  +
mov ecx [esp+13Ch+var_F0] +
cmp dword ptr [ecx+10h] 0 +
jz loc_4366E9  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F4] ecx +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ecx +
call eax  +
test eax eax +
jnz loc_4366E9  +
mov ecx [esp+13Ch+var_F4] +
mov eax [ecx+10h] +
mov ecx [esp+13Ch+var_E4] +
add eax 100h +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] eax +
call free  +
cmp [esp+13Ch+var_F4] 0F0h +
ja loc_435F8C  +
jmp loc_435F28  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
xor eax eax +
jmp loc_4373C7  +
mov [esp+13Ch+var_138] offset a_stabstr +
mov [esp+13Ch+var_13C] ebp +
call sub_405CC0  +
test eax eax +
mov ebx eax +
jz loc_4389CF  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_14] 0 +
mov esi [ebp+64h] +
sub eax 0FFFFFF80h +
mov [esp+13Ch+var_108] eax +
jmp loc_4389CB  +
mov edi [esi] +
mov [esp+13Ch+var_134] 5 +
mov [esp+13Ch+var_138] offset a_stab +
mov [esp+13Ch+var_13C] edi +
call strncmp  +
test eax eax +
jnz loc_4389C8  +
movzx eax byte ptr [edi+5] +
test al al +
jz loc_438F25  +
cmp al 2Eh +
jz loc_438F13  +
mov esi [esi+0Ch] +
test esi esi +
jnz loc_438996  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_438406  +
jmp loc_435C8D  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax [esp+13Ch+var_24] +
jz loc_437F7A  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_473318 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_41A040  +
test eax eax +
jz loc_437503  +
mov eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_24] eax +
jmp loc_437F7A  +
mov eax [esp+13Ch+var_E0] +
sub eax ebx +
sar eax 2 +
imul eax eax +
lea eax ds:4[eax*4] +
mov [esp+13Ch+var_13C] eax +
call sub_407460  +
test eax eax +
mov [esp+13Ch+var_C8] eax +
jnz loc_437311  +
jmp loc_437503  +
mov eax [ebx+18h] +
cmp [edi+18h] eax +
jnz loc_436ECA  +
mov eax [ebx+14h] +
cmp [edi+14h] eax +
jnz loc_436ECA  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
call eax  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov [edi+14h] ebx +
mov byte ptr [edi+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ecx +
call eax  +
mov eax [esp+13Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
test eax eax +
jz loc_436ECA  +
xor ecx ecx +
cmp ecx [esp+13Ch+var_D0] +
jz loc_436ECA  +
mov edx eax +
add eax 4 +
cmp edi [eax-4] +
jz loc_438C34  +
add ecx 1 +
jmp loc_438B20  +
lea edx [eax+0C4h] +
jmp loc_437B68  +
mov [esp+13Ch+var_134] 101401h +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_406180  +
test eax eax +
jnz loc_436F68  +
jmp loc_437503  +
lea edx [esp+13Ch+var_20] +
jmp loc_43653E  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [esi+34h] al +
jmp loc_4370C8  +
mov edi [eax+14h] +
mov ecx edi +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov edi ecx +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
movzx edx byte ptr [edi+35h] +
mov eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_74] edi +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
mov edi ecx +
and edi 1 +
or edx edi +
mov edi [esp+13Ch+var_74] +
mov [edi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [edi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_438C4D  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_438C3B  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_437F9A  +
test byte ptr [eax+33h] 0Ch +
setnz al  +
movzx eax al +
mov [esp+13Ch+var_F8] eax +
jmp loc_437F9A  +
mov [edx] ebx +
jmp loc_436ECA  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_437F9A  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_437F9A  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] offset aBUndefinedRefe +
mov [esp+13Ch+var_134] eax +
call off_4730E4  +
mov [esp+13Ch+var_13C] 0Bh +
call sub_4029E0  +
jmp loc_437503  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
jmp loc_4362D7  +
mov [esp+13Ch+var_134] offset aElf_link_add_o +
mov [esp+13Ch+var_138] 0E2Ah +
mov [esp+13Ch+var_13C] offset a____Binutils_4 +
call sub_402960  +
mov eax [esp+13Ch+var_104] +
cmp dword ptr [eax+78h] 0 +
jz loc_4383D6  +
mov edi [esp+13Ch+var_FC] +
mov eax [ebp+0A0h] +
mov edi [edi+2Ch] +
cmp [eax+920h] edi +
jnz loc_4383D6  +
mov edi [esp+13Ch+arg_4] +
mov eax [esp+13Ch+var_104] +
mov edx [edi+30h] +
mov eax [eax+74h] +
mov ecx [edx+4] +
mov edx [ebp+4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jz loc_4383D6  +
mov ebx [ebp+64h] +
jmp loc_438D4B  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+78h] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov edx [ebx+8Ch] +
cmp esi [edx+68h] +
mov edi eax +
jz loc_438D40  +
mov [esp+13Ch+var_13C] esi +
call free  +
test edi edi +
jz loc_4360E0  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4383D6  +
mov eax [ebx+14h] +
test al 4 +
jz loc_438D48  +
cmp dword ptr [ebx+4Ch] 0 +
jz loc_438D48  +
mov edi [esp+13Ch+arg_4] +
test byte ptr [edi+1] 8 +
jz loc_438D72  +
test ah 20h +
jnz loc_438D48  +
cmp dword ptr [ebx+3Ch] offset off_473270 +
jz loc_438D48  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+2] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebx +
shr al 6 +
and eax 1 +
mov [esp+13Ch+var_12C] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_434EB0  +
test eax eax +
mov esi eax +
jnz loc_438D0C  +
xor eax eax +
jmp loc_4360E2  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_473318 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+var_74] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_41A040  +
test eax eax +
jz loc_437503  +
mov eax [esp+13Ch+var_20] +
cmp byte ptr [eax+0Ch] 6 +
mov [esp+13Ch+var_24] eax +
jnz loc_4370C8  +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call edx  +
mov eax [esp+13Ch+var_24] +
movzx edx byte ptr [esi+35h] +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
and ecx 1 +
or edx ecx +
mov [esi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [esi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_438EE6  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_438ED4  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_4370C8  +
movzx eax byte ptr [eax+33h] +
shr al 2 +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_4370C8  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_4370C8  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_4370C8  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_4332E0  +
test eax eax +
jnz loc_437F71  +
jmp loc_437503  +
movzx eax byte ptr [edi+6] +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_4389C8  +
test byte ptr [esi+16h] 80h +
jnz loc_4389C8  +
cmp dword ptr [esi+3Ch] offset off_473270 +
jz loc_4389C8  +
mov edi [esi+8Ch] +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_128] eax +
mov [esp+13Ch+var_130] ebx +
mov [esp+13Ch+var_134] esi +
lea eax [edi+88h] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_44DA80  +
test eax eax +
jz loc_4360E0  +
cmp dword ptr [edi+88h] 0 +
jz loc_4389C8  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or al 80h +
mov [esi+18h] ax +
jmp loc_4389C8  +
***
push ebx  +
mov edx [esp+8] +
xor eax eax +
test byte ptr [edx+34h] 8 +
jnz loc_438FC6  +
movzx ecx byte ptr [edx+0Ch] +
lea ebx [ecx-1] +
cmp bl 1 +
jbe loc_438FC6  +
sub ecx 3 +
cmp cl 1 +
jbe loc_438FC8  +
mov eax 1 +
pop ebx  +
retn   +
***
mov edx [edx+14h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_438FC1  +
jmp loc_438FC6  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_438FFB  +
jmp loc_439020  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_439020  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_438FF1  +
mov [esp+18h+var_14] offset off_473270 +
mov [esp+18h+var_18] ebx +
call sub_428560  +
test eax eax +
jnz loc_438FF1  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 40h +
mov esi [esp+58h] +
mov ebx [esp+54h] +
test esi esi +
jz loc_4390A8  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [ebx+1Ch] +
mov [esp] eax +
call sub_4193E0  +
test eax eax +
jz loc_439079  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_4390B0  +
mov edx [ebx+10h] +
test edx edx +
jnz loc_439087  +
mov edx [esp+5Ch] +
mov [ebx+10h] edx +
test eax eax +
jz loc_439188  +
movzx eax byte ptr [eax+0Ch] +
mov edi 1 +
sub eax 1 +
cmp al 1 +
jbe loc_439101  +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [ebx+10h] +
xor eax eax +
jmp loc_43907C  +
***
test byte ptr [eax+33h] 2 +
jz loc_439079  +
cmp byte ptr [eax+30h] 1 +
ja loc_439079  +
mov ecx [ebx+10h] +
mov byte ptr [eax+30h] 1 +
test ecx ecx +
jnz loc_43919E  +
cmp dword ptr [eax+14h] offset off_473270 +
jz loc_4391C7  +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBSNotAbsolute +
mov [esp+4] eax +
call off_4730E4  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_43907C  +
***
lea eax [esp+3Ch] +
mov [esp+24h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov edx [ebx+10h] +
xor eax eax +
test edx edx +
cmovns eax [ebx+10h] +
mov dword ptr [esp+10h] offset off_473270 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+14h] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] eax +
call sub_41A040  +
test eax eax +
jz loc_439196  +
mov eax [esp+3Ch] +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 40h +
mov edi 1 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor di di +
jmp loc_43909F  +
***
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBStackSizeSpec +
mov [esp+4] eax +
call off_4730E4  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_43907C  +
***
mov edx [eax+18h] +
mov [ebx+10h] edx +
jmp loc_43907C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0E0h] +
mov edi [esp+0DCh] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_439217  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0C0h] +
mov edx [ecx+4] +
mov esi [edx+1B0h] +
mov edx [eax+44h] +
mov [eax+3Ch] edx +
mov edx [eax+48h] +
mov [eax+40h] edx +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_439A90  +
mov eax [esi+88h] +
test eax eax +
jz loc_439263  +
mov ebx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_4397D5  +
movzx eax byte ptr [edi+5] +
test al 2 +
jnz loc_4397E2  +
test al 4 +
jz loc_4399D0  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 6 +
mov eax [edi+1Ch] +
mov ebx [eax+38h] +
test ebx ebx +
mov [esp+30h] ebx +
jz loc_439801  +
mov eax [eax+30h] +
mov ebx 0FFFFFFFFh +
test eax eax +
jnz loc_439815  +
mov [esp] edi +
call sub_4442E0  +
test eax eax +
jz loc_4397D5  +
mov eax [esi+8Ch] +
test eax eax +
jz loc_4392E5  +
mov ecx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_4397D5  +
mov eax [edi+1Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_439207  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_405DA0  +
test eax eax +
mov ebp eax +
jz loc_43A257  +
mov esi [edi+7Ch] +
test esi esi +
jz loc_43A220  +
mov eax [esi+8] +
test eax eax +
jnz loc_43932D  +
mov esi [esi] +
test esi esi +
jz loc_43A220  +
test byte ptr [edi] 20h +
mov edx 1Ch +
mov dword ptr [esp+3Ch] 1 +
jnz loc_439DD5  +
mov [esp+34h] ebx +
mov ebx [esp+3Ch] +
mov ecx esi +
lea esi [esi+0] +
mov eax [ecx+8] +
test eax eax +
jz loc_43936D  +
mov eax [ecx+2Ch] +
add edx 1Ch +
add ebx 1 +
test eax eax +
jz loc_43936D  +
mov eax [eax] +
add edx 8 +
test eax eax +
jnz loc_439364  +
mov ecx [ecx] +
test ecx ecx +
jnz loc_439350  +
mov [esp+3Ch] ebx +
mov ebx [esp+34h] +
mov eax [esp+0C0h] +
mov [ebp+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_404B80  +
test eax eax +
mov edx eax +
mov [ebp+6Ch] eax +
jz loc_43A231  +
mov eax 1 +
mov ebp 1 +
test byte ptr [edi] 20h +
mov [esp+7Ah] ax +
mov eax 1 +
mov [esp+7Ch] ax +
mov eax 1 +
mov [esp+78h] bp +
mov [esp+7Eh] ax +
jz loc_439DEF  +
mov dword ptr [esp+84h] 28h +
mov dword ptr [esp+88h] 14h +
cmp ebx 0FFFFFFFFh +
mov [esp+34h] edx +
jz loc_439E91  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44AF80  +
mov eax [esp+0C4h] +
mov [esp] eax +
call near ptr dword_420900  +
mov edx [esp+34h] +
mov [esp+68h] ebx +
mov [esp+80h] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp+34h] edx +
mov dword ptr [esp+6Ch] 0 +
mov [esp] eax +
call sub_4205A0  +
mov edx [esp+34h] +
test byte ptr [edi] 20h +
lea ebx [edx+14h] +
jz loc_439549  +
mov ecx [esp+30h] +
lea eax [esp+5Ch] +
mov [esp+24h] eax +
mov dword ptr [esp+5Ch] 0 +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] offset off_473270 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+4] ecx +
mov [esp+8] eax +
mov [esp] edi +
call sub_41A040  +
test eax eax +
jz loc_4397D5  +
mov eax [esp+5Ch] +
and byte ptr [eax+34h] 0FEh +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
mov dword ptr [eax+40h] 0 +
mov [esp+4] eax +
mov [esp] edi +
call sub_4332E0  +
test eax eax +
jz loc_4397D5  +
xor edx edx +
cmp esi 1 +
sbb eax eax +
mov ecx 2 +
not eax  +
and eax 1Ch +
mov [esp+88h] eax +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+7Ah] dx +
mov [esp+7Ch] cx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov dword ptr [esp+84h] 14h +
mov [esp] eax +
call sub_4205A0  +
mov edx [esp+34h] +
lea ebx [edx+28h] +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 8 +
mov [esp] eax +
call sub_420690  +
test esi esi +
jz loc_439ABF  +
nop   +
mov eax [esi+8] +
test eax eax +
jz loc_439AB5  +
mov eax [esi+2Ch] +
xor edx edx +
test eax eax +
jz loc_43958D  +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_439584  +
mov [esp+34h] edx +
mov edx [esp+30h] +
lea ecx [esp+5Ch] +
mov eax [esi+4] +
mov [esp+24h] ecx +
mov dword ptr [esp+5Ch] 0 +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
movzx ecx byte ptr [ecx+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and ecx 1 +
mov [esp+20h] ecx +
mov dword ptr [esp+10h] offset off_473270 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call sub_41A040  +
test eax eax +
jz loc_4397D5  +
mov ebp [esp+5Ch] +
and byte ptr [ebp+34h] 0FEh +
or byte ptr [ebp+33h] 2 +
mov byte ptr [ebp+30h] 1 +
mov [ebp+40h] esi +
mov [esp+4] ebp +
mov [esp] edi +
call sub_4332E0  +
test eax eax +
jz loc_4397D5  +
mov eax 1 +
mov edx [esp+34h] +
mov [esp+78h] ax +
xor eax eax +
mov [esp+7Ah] ax +
mov eax [esi+0Ch] +
test eax eax +
jz loc_439DB0  +
movzx eax byte ptr [edi] +
mov [esp+34h] edx +
and eax 20h +
cmp al 1 +
sbb eax eax +
add eax 2 +
add ax [esi+8] +
mov [esp+7Ch] ax +
lea eax [edx+1] +
mov [esp+7Eh] ax +
mov eax [esi+4] +
mov [esp] eax +
call near ptr dword_420900  +
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 0 +
mov [esp+80h] eax +
mov eax [esi] +
test eax eax +
jz loc_4396D4  +
mov edx [eax+8] +
test edx edx +
mov edx [esp+34h] +
jnz loc_439D84  +
mov eax [eax] +
test eax eax +
jz loc_4396D4  +
mov dword ptr [esp+4] 1877h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
mov eax [esi] +
test eax eax +
jz loc_4396D4  +
mov eax [eax+8] +
mov edx [esp+34h] +
test eax eax +
jnz loc_439D84  +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp] eax +
call sub_4205A0  +
mov ecx [edi+1Ch] +
lea edx [ebx+14h] +
mov eax [ebp+38h] +
mov [esp+34h] edx +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_44AF80  +
mov ebp [esi+2Ch] +
mov dword ptr [esp+6Ch] 0 +
mov edx [esp+34h] +
test ebp ebp +
jz loc_43972A  +
mov dword ptr [esp+6Ch] 8 +
mov eax [esp+68h] +
add ebx 1Ch +
mov [esi+30h] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_420690  +
mov ebp [esi+2Ch] +
test ebp ebp +
jz loc_439AB5  +
mov [esp+34h] esi +
mov esi ebp +
mov ebp [esp+0C0h] +
jmp loc_4397B8  +
mov ecx [edi+1Ch] +
mov eax [eax+30h] +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_44AF80  +
cmp dword ptr [esi] 1 +
mov [esp+8] ebx +
mov [esp] ebp +
sbb eax eax +
add ebx 8 +
not eax  +
and eax 8 +
mov [esp+6Ch] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
call sub_420690  +
mov esi [esi] +
test esi esi +
jz loc_439AB1  +
mov eax [esi+4] +
test eax eax +
jnz loc_439770  +
mov dword ptr [esp+68h] 0 +
jmp loc_439789  +
***
mov dword ptr [esp] 11h +
call sub_4029E0  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 7 +
jmp loc_439291  +
***
mov [esp] edi +
call sub_4442E0  +
test eax eax +
jnz loc_439207  +
xor eax eax +
jmp loc_4397D7  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_interp +
mov [esp] eax +
call sub_405DA0  +
mov ebx [esp+0E0h] +
test eax eax +
mov [ebx] eax +
jz loc_439E33  +
mov eax [esp+0C4h] +
test eax eax +
jz loc_439AA7  +
mov eax [edi+1Ch] +
mov ebx [esp+0C4h] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4397D5  +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Eh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
test byte ptr [edi] 4 +
jnz loc_439E0A  +
mov eax [esp+0C8h] +
test eax eax +
jz loc_4398F9  +
mov eax [edi+1Ch] +
mov ecx [esp+0C8h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jz loc_4397D5  +
movzx edx byte ptr [edi+4] +
mov [esp+8] eax +
mov [esp] edi +
and edx 8 +
cmp dl 1 +
sbb edx edx +
and edx 0FFFFFFF2h +
add edx 1Dh +
mov [esp+4] edx +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov eax [esp+0CCh] +
test eax eax +
jz loc_43994A  +
mov eax [edi+1Ch] +
mov ecx [esp+0CCh] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jz loc_4397D5  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFFh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov ebp [esp+0D8h] +
test ebp ebp +
jz loc_439EEF  +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jnz loc_4399A5  +
jmp loc_439EEF  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFDh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
add dword ptr [esp+0D8h] 4 +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jz loc_439EEF  +
mov edx [edi+1Ch] +
mov edx [edx+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] edx +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jnz loc_439970  +
xor eax eax +
jmp loc_4397D7  +
***
mov ebx [edi+34h] +
test ebx ebx +
jz loc_439E64  +
xor eax eax +
xor ecx ecx +
mov [esp+30h] esi +
mov ebp 1 +
mov esi ebx +
mov [esp+0DCh] edi +
mov ebx eax +
mov edi ecx +
jmp loc_439A01  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_439A31  +
mov eax [esi+28h] +
shr eax 5 +
test eax 11042h +
jnz loc_4399F7  +
mov dword ptr [esp+4] offset a_note_gnuStack +
mov [esp] esi +
call sub_405CC0  +
test eax eax +
jz loc_439D97  +
test byte ptr [eax+14h] 10h +
mov edi eax +
cmovnz ebx ebp +
jmp loc_4399F7  +
***
mov ecx edi +
mov esi [esp+30h] +
test ecx ecx +
mov edi [esp+0DCh] +
jz loc_439E66  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
and ebx 1 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jz loc_439291  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jnz loc_439291  +
mov eax [ecx+3Ch] +
cmp eax offset off_473270 +
jz loc_439291  +
or dword ptr [eax+14h] 10h +
jmp loc_439291  +
***
mov [esp] edi +
call sub_438FE0  +
test eax eax +
jnz loc_439241  +
xor eax eax +
jmp loc_4397D7  +
***
mov ebx 0FFFFFFFFh +
jmp loc_439891  +
***
mov esi [esp+34h] +
mov esi [esi] +
test esi esi +
jnz loc_439570  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFCh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov eax [esp+3Ch] +
mov dword ptr [esp+4] 6FFFFFFDh +
mov [esp] edi +
mov [esp+8] eax +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov eax [esp+0C0h] +
mov ebx [esp+3Ch] +
mov eax [eax+0A0h] +
mov [eax+238h] ebx +
test byte ptr [edi+4] 8 +
mov eax [edi+68h] +
jz loc_43A3A6  +
test eax eax +
jz loc_439B43  +
mov [esp+8] eax +
mov dword ptr [esp+4] 1Eh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov eax [edi+6Ch] +
test eax eax +
jz loc_439B75  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
jbe loc_43A4BD  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFFFBh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_405DA0  +
test eax eax +
mov esi eax +
jz loc_43A4DD  +
mov eax [esp+0C0h] +
mov [esp+78h] edi +
mov eax [eax+0A0h] +
mov edx [eax+238h] +
mov eax 1 +
mov dword ptr [esp+4] offset loc_430110 +
mov dword ptr [esp+80h] 0 +
test edx edx +
cmovnz eax edx +
mov [esp+7Ch] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419B50  +
mov ebx [esp+80h] +
test ebx ebx +
jnz loc_4397D5  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_43A4D4  +
xor ebp ebp +
xor edx edx +
mov eax [ecx+18h] +
add edx 10h +
add ebp 1 +
test eax eax +
jz loc_439C2A  +
lea esi [esi+0] +
mov eax [eax+14h] +
add edx 10h +
test eax eax +
jnz loc_439C20  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_439C10  +
mov eax [esp+0C0h] +
mov [esi+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
mov [esi+6Ch] eax +
jz loc_4397D5  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+244h] +
test eax eax +
jz loc_43A427  +
mov [esp+34h] ebp +
mov esi eax +
mov eax [esi+18h] +
xor ebp ebp +
test eax eax +
jz loc_439C88  +
mov eax [eax+14h] +
add ebp 1 +
test eax eax +
jnz loc_439C7E  +
mov ecx 1 +
mov [esi] cx +
mov ecx [esi+10h] +
mov [esi+2] bp +
mov eax [ecx+0A0h] +
mov eax [eax+220h] +
test eax eax +
jz loc_43A729  +
mov ecx [edi+1Ch] +
mov ecx [ecx+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jz loc_4397D5  +
mov edx [esi+1Ch] +
mov [esi+4] eax +
mov dword ptr [esi+8] 10h +
test edx edx +
jz loc_43A4C8  +
lea edx [ebp+1] +
shl edx 4 +
mov [esi+0Ch] edx +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] esi +
mov [esp] eax +
call sub_420740  +
mov ebp [esi+18h] +
test ebp ebp +
jz loc_43A418  +
mov [esp+3Ch] esi +
mov esi [esp+0C0h] +
jmp loc_439D4D  +
cmp dword ptr [ebp+14h] 1 +
mov [ebp+8] eax +
sbb eax eax +
not eax  +
and eax 10h +
mov [ebp+0Ch] eax +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
call sub_420830  +
mov ebp [ebp+14h] +
test ebp ebp +
jz loc_43A414  +
mov eax [ebp+10h] +
mov [esp] eax +
call near ptr dword_420900  +
mov ecx [ebp+10h] +
mov [ebp+0] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jnz loc_439D1E  +
xor eax eax +
jmp loc_4397D7  +
***
lea eax ds:1Ch[edx*8] +
mov [esp+88h] eax +
jmp loc_4396D4  +
***
mov eax [esp+30h] +
test byte ptr [eax+1AEh] 20h +
cmovnz ebx ebp +
jmp loc_4399F7  +
***
mov eax [esi+1Ch] +
test eax eax +
jnz loc_439646  +
mov eax [esi+34h] +
test eax eax +
jnz loc_439646  +
mov ecx 2 +
mov [esp+7Ah] cx +
jmp loc_439646  +
***
test esi esi +
jz loc_43A245  +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_439343  +
***
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 1Ch +
jmp loc_4393E5  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 10h +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
or dword ptr [edi+68h] 2 +
jmp loc_43989A  +
***
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
ja loc_43983A  +
test byte ptr [edi+6] 1 +
jnz loc_43983A  +
mov dword ptr [esp+4] 168Dh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
jmp loc_43983A  +
***
xor ebx ebx +
mov eax [edi+10h] +
test eax eax +
jle loc_439291  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jmp loc_439291  +
***
mov eax [esp+0C0h] +
mov eax [eax] +
mov [esp] eax +
call sub_45EE20  +
mov [esp] eax +
mov [esp+0C4h] eax +
call near ptr dword_420900  +
mov ebx [esp+0C4h] +
mov [esp+80h] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jz loc_4397D5  +
mov [esp+68h] eax +
mov edx [esp+34h] +
jmp loc_439422  +
***
mov ecx [esp+0D0h] +
test ecx ecx +
jz loc_439F40  +
mov eax [edi+1Ch] +
mov ecx [esp+0D0h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jz loc_4397D5  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFCh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov edx [esp+0D4h] +
test edx edx +
jz loc_439F91  +
mov eax [edi+1Ch] +
mov ecx [esp+0D4h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44AEA0  +
cmp eax 0FFFFFFFFh +
jz loc_4397D5  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFBh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
movzx eax byte ptr [edi] +
mov [esp+78h] edi +
mov dword ptr [esp+7Ch] 0 +
test al 10h +
jnz loc_43A3E7  +
and eax 3 +
cmp al 1 +
jbe loc_43A3DD  +
mov eax [edi+7Ch] +
test eax eax +
mov [esp+3Ch] eax +
jz loc_43A17E  +
mov [esp+48h] ebx +
mov [esp+4Ch] esi +
mov [esp+0DCh] edi +
mov eax [esp+3Ch] +
mov edi [eax+0Ch] +
test edi edi +
mov ebp edi +
jnz loc_439FEE  +
jmp loc_43A15D  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_43A15D  +
movzx eax byte ptr [ebp+8] +
and eax 3 +
cmp al 1 +
jnz loc_439FE3  +
mov eax [esp+0C0h] +
mov edx [ebp+4] +
mov eax [eax+4] +
mov [esp+44h] edx +
movzx eax byte ptr [eax+18h] +
mov [esp] edx +
mov ebx eax +
call strlen  +
mov edi [esp+3Ch] +
xor ecx ecx +
test bl bl +
setnz cl  +
mov [esp+38h] bl +
mov edi [edi+4] +
mov [esp+40h] ecx +
lea esi [eax+ecx] +
mov [esp] edi +
mov [esp+34h] edi +
call strlen  +
mov edi eax +
lea eax [esi+eax+3] +
mov [esp] eax +
call sub_407460  +
test eax eax +
mov ebx eax +
jz loc_4397D5  +
mov ecx [esp+40h] +
mov edx [esp+44h] +
movzx eax byte ptr [esp+38h] +
add ecx ebx +
mov [ebx] al +
mov [esp] ecx +
mov [esp+8] esi +
add esi ebx +
mov [esp+4] edx +
call memcpy  +
lea edx [edi+1] +
mov edi [esp+34h] +
lea eax [esi+1] +
mov byte ptr [esi] 40h +
mov [esp+8] edx +
mov [esp+4] edi +
mov [esp] eax +
mov [esp+38h] edx +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_4193E0  +
mov edx [esp+38h] +
test eax eax +
mov edi eax +
jz loc_43A0E0  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_43A213  +
mov eax [esp+34h] +
add esi 2 +
mov byte ptr [esi-1] 40h +
mov [esp+8] edx +
mov [esp] esi +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_4193E0  +
mov [esp] ebx +
mov edi eax +
call free  +
test edi edi +
jz loc_439FE3  +
test byte ptr [edi+33h] 8 +
jnz loc_439FE3  +
movzx eax byte ptr [edi+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_439FE3  +
or byte ptr [ebp+8] 2 +
jmp loc_439FE3  +
***
mov eax [esp+3Ch] +
mov eax [eax] +
test eax eax +
mov [esp+3Ch] eax +
jnz loc_439FD1  +
mov ebx [esp+48h] +
mov esi [esp+4Ch] +
mov edi [esp+0DCh] +
lea eax [esp+60h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_434650 +
mov eax [edi+1Ch] +
mov [esp+60h] edi +
mov dword ptr [esp+64h] 0 +
mov [esp] eax +
call sub_419B50  +
cmp dword ptr [esp+64h] 0 +
jnz loc_4397D5  +
cmp byte ptr [edi+4] 0 +
js loc_43A286  +
mov ecx [edi+7Ch] +
test ecx ecx +
jz loc_43A286  +
mov edx 1 +
mov ebp [ecx+0Ch] +
test ebp ebp +
jnz loc_43A1E1  +
jmp loc_43A270  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_43A270  +
movzx eax byte ptr [ebp+8] +
and eax 7 +
cmp al 1 +
jnz loc_43A1D6  +
mov edx [ecx+4] +
mov eax [ebp+4] +
mov [esp+34h] ecx +
mov dword ptr [esp] offset aSUndefinedVers +
mov [esp+8] edx +
mov [esp+4] eax +
call off_4730E4  +
xor edx edx +
mov ecx [esp+34h] +
jmp loc_43A1D6  +
***
mov [esp] ebx +
call free  +
jmp loc_43A13B  +
***
test byte ptr [edi] 20h +
jnz loc_43A243  +
or dword ptr [ebp+14h] 8000h +
jmp loc_439B16  +
***
mov eax [ebp+24h] +
test eax eax +
jz loc_43939E  +
xor eax eax +
jmp loc_4397D7  +
***
xor esi esi +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_43937B  +
***
mov dword ptr [esp+4] 17BEh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
jmp loc_439311  +
***
mov ecx [ecx] +
test ecx ecx +
jnz loc_43A1CA  +
test edx edx +
lea esi [esi+0] +
jz loc_4397C9  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_434550 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419B50  +
cmp dword ptr [esp+7Ch] 0 +
jnz loc_4397D5  +
mov eax [edi+48h] +
test eax eax +
jz loc_43A2E8  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4193E0  +
test eax eax +
jz loc_43A2E8  +
test byte ptr [eax+33h] 3 +
jnz loc_43A772  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_43A324  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4193E0  +
test eax eax +
jz loc_43A324  +
test byte ptr [eax+33h] 3 +
jnz loc_43A738  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_preinit_array +
mov [esp] eax +
call sub_405CC0  +
test eax eax +
jz loc_43A536  +
test byte ptr [eax+18h] 4 +
jz loc_43A536  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
jbe loc_43A4F6  +
mov ebx [edi+34h] +
jmp loc_43A366  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_43A75F  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43A360  +
mov eax [ebx+64h] +
test eax eax +
jnz loc_43A387  +
jmp loc_43A360  +
***
mov eax [eax+0Ch] +
test eax eax +
jz loc_43A360  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 10h +
jnz loc_43A380  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aB_preinit_arra +
call off_4730E4  +
jmp loc_43A360  +
***
test al 10h +
jnz loc_439B27  +
test al 8 +
jz loc_439B43  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_435800  +
test eax eax +
jnz loc_439B43  +
xor eax eax +
jmp loc_4397D7  +
***
test byte ptr [edi+5] 1 +
jz loc_439FB3  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_434980 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419B50  +
cmp dword ptr [esp+7Ch] 0 +
jz loc_439FB3  +
xor eax eax +
jmp loc_4397D7  +
***
mov esi [esp+3Ch] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_439C75  +
mov ebp [esp+34h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFEh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 6FFFFFFFh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov [eax+23Ch] ebp +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+23Ch] 0 +
jnz loc_43A799  +
cmp dword ptr [eax+238h] 0 +
jnz loc_43A799  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version +
mov [esp] eax +
call sub_405DA0  +
or dword ptr [eax+14h] 8000h +
jmp loc_439207  +
***
and eax 0FFFFFF97h +
mov [edi+6Ch] eax +
jmp loc_439B59  +
***
mov dword ptr [esi+0Ch] 0 +
jmp loc_439CEC  +
***
or dword ptr [esi+14h] 8000h +
jmp loc_43A476  +
***
mov dword ptr [esp+4] 18C5h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
jmp loc_439B93  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 21h +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_init_array +
mov [esp] eax +
call sub_405CC0  +
test eax eax +
jz loc_43A55B  +
test byte ptr [eax+18h] 4 +
jnz loc_43A69B  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_fini_array +
mov [esp] eax +
call sub_405CC0  +
test eax eax +
jz loc_43A580  +
test byte ptr [eax+18h] 4 +
jnz loc_43A6E2  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_405DA0  +
test eax eax +
jz loc_4392B3  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jz loc_4392B3  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_44B160  +
mov ebp eax +
movzx eax byte ptr [edi+3] +
test al 20h +
jnz loc_43A672  +
test al 40h +
jz loc_43A5E9  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFEF5h +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 5 +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6 +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0Ah +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov [esp+8] eax +
call sub_435800  +
test eax eax +
jnz loc_4392B3  +
xor eax eax +
jmp loc_4397D7  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
movzx eax byte ptr [edi+3] +
jmp loc_43A5C5  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 19h +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Bh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jnz loc_43A55B  +
xor eax eax +
jmp loc_4397D7  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ah +
mov [esp] edi +
call sub_435800  +
test eax eax +
jz loc_4397D5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ch +
mov [esp] edi +
call sub_435800  +
test eax eax +
jnz loc_43A580  +
xor eax eax +
jmp loc_4397D7  +
***
mov eax [ecx] +
mov [esp] eax +
call sub_45EE20  +
jmp loc_439CAB  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Dh +
mov [esp] edi +
call sub_435800  +
test eax eax +
jnz loc_43A324  +
xor eax eax +
jmp loc_4397D7  +
***
mov dword ptr [esp] 0Fh +
call sub_4029E0  +
xor eax eax +
jmp loc_4397D7  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_435800  +
test eax eax +
jnz loc_43A2E8  +
xor eax eax +
jmp loc_4397D7  +
***
mov ecx [esp+38h] +
mov edx edi +
mov eax [esp+0C0h] +
call sub_42EF30  +
test eax eax +
jz loc_43A49D  +
jmp loc_439207  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43A7DE  +
jmp loc_43A805  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43A805  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_43A7D7  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_434E20  +
test eax eax +
jnz loc_43A7D7  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43A82E  +
jmp loc_43A8A2  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43A855  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 1 +
jnz loc_43A827  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_434E20  +
test eax eax +
jnz loc_43A827  +
mov eax [edi+1Ch] +
mov [eax+6Ch] ebx +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43A867  +
jmp loc_43A8A2  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43A8A2  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 9 +
jnz loc_43A860  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_434E20  +
test eax eax +
jnz loc_43A860  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
mov edx [eax+68h] +
test edx edx +
jnz loc_43A8AC  +
mov edx [eax+6Ch] +
mov [eax+68h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [edi+1Ch] +
mov edx [eax+68h] +
test edx edx +
jz loc_43A895  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C4h] +
mov esi [esp+0C0h] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_43A8F1  +
mov eax 1 +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
mov edx [esp+0C4h] +
mov ebx [eax+1B0h] +
mov eax [ebx+90h] +
mov [esp+4] edx +
mov [esp] esi +
call eax  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+30h] +
test edi edi +
jz loc_43A8E1  +
mov eax [eax+38h] +
lea ecx [esp+3Ch] +
mov edx [esp+0C4h] +
mov edi eax +
mov [esp+14h] eax +
mov eax esi +
call sub_42EF30  +
mov [esp] edi +
mov dword ptr [esp+4] offset a_gnu_version +
mov ebp eax +
call sub_405DA0  +
test eax eax +
mov edi eax +
jz loc_43B181  +
test ebp ebp +
jz loc_43A9A7  +
test byte ptr [edi+15h] 80h +
jnz loc_43A9A7  +
lea eax [ebp+ebp+0] +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_404C60  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43AD84  +
mov eax [esp+0C4h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFF0h +
mov [esp] eax +
call sub_435800  +
test eax eax +
jz loc_43AD84  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+0F8h] +
test edi edi +
jz loc_43B19A  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+5] +
imul eax ebp +
test ebp ebp +
mov [edi+24h] eax +
jnz loc_43AF5F  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov dword ptr [eax+60h] 0 +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
test al 20h +
jnz loc_43AD2D  +
test al 40h +
jz loc_43ABF0  +
xor eax eax +
mov ecx 12h +
lea edi [esp+58h] +
mov [esp+1Ch] edi +
stos   +
lea eax ds:0[ebp*8] +
mov [esp] eax +
call sub_407460  +
test eax eax +
mov [esp+68h] eax +
jz loc_43AD84  +
lea eax [eax+ebp*4] +
mov edi [esp+1Ch] +
mov [esp+6Ch] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset sub_431360 +
mov dword ptr [esp+80h] 0FFFFFFFFh +
mov [esp+8] edi +
mov eax [eax+1Ch] +
mov [esp+58h] esi +
mov [esp+5Ch] ebx +
mov [esp] eax +
call sub_419B50  +
mov edx [esp+9Ch] +
test edx edx +
jnz loc_43AFB3  +
mov ecx [esp+60h] +
mov edx [esp+68h] +
mov eax [esp+0C4h] +
mov dword ptr [esp] 1 +
call sub_42ECC0  +
test eax eax +
mov [esp+18h] eax +
jz loc_43AFB3  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_gnu_hash +
mov [esp] eax +
call sub_405DA0  +
test eax eax +
mov [esp+24h] eax +
jz loc_43B603  +
mov edi [esp+60h] +
test edi edi +
jnz loc_43B1B3  +
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_43AAEB  +
mov dword ptr [esp+4] 1A12h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
mov eax [ebx+174h] +
mov ebp [esp+24h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
add eax 14h +
mov [ebp+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_404C60  +
test eax eax +
mov edi eax +
jz loc_43AD84  +
mov ecx ebp +
mov [ecx+6Ch] eax +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
cmp al 8 +
jz loc_43B5DF  +
cmp al 10h +
jz loc_43B5E8  +
cmp al 20h +
jz loc_43B701  +
cmp al 40h +
jnz loc_43B6AC  +
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov dword ptr [esp] 0 +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esi+4] +
mov edx [eax+30h] +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
mov dword ptr [esp] 0 +
shr al 3 +
movzx eax al +
lea eax [edi+eax+10h] +
mov [esp+4] eax +
call edx  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_405DA0  +
test eax eax +
mov [esp+24h] eax +
jz loc_43B450  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edx [eax+50h] +
mov [esp+20h] eax +
mov eax [eax+38h] +
mov edi edx +
mov [esp] edx +
mov ebx eax +
mov [esp+14h] edx +
mov [esp+18h] eax +
call sub_44B2E0  +
mov [esp] edi +
call sub_44B160  +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov edi [eax+1B0h] +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_405DA0  +
test eax eax +
mov ebp eax +
jz loc_43B437  +
mov ebx [ebp+6Ch] +
mov eax [ebp+24h] +
add eax ebx +
cmp ebx eax +
jnb loc_43ADCD  +
lea eax [esp+58h] +
mov ecx [edi+174h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx eax +
jmp loc_43ACD5  +
cmp eax 0Ah +
jnz loc_43AD90  +
mov eax [esp+1Ch] +
mov [esp+5Ch] eax +
mov eax [edi+174h] +
mov edx [esp+18h] +
mov eax [eax+34h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
mov ecx [edi+174h] +
movzx eax byte ptr [ecx+6] +
add esi eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp esi eax +
jnb loc_43ADC6  +
mov edx [esp+18h] +
mov eax [ecx+30h] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
mov eax [esp+58h] +
cmp eax 1Dh +
jz loc_43AD10  +
jbe loc_43AC90  +
cmp eax 7FFFFFFDh +
jz loc_43AD10  +
nop   +
lea esi [esi+0] +
ja loc_43ADA5  +
sub eax 6FFFFEFBh +
cmp eax 1 +
ja loc_43ACBB  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44B170  +
mov [esp+5Ch] eax +
jmp loc_43ACA1  +
***
lea eax ds:0[ebp*4] +
mov [esp] eax +
call sub_407460  +
test eax eax +
mov edi eax +
jz loc_43AD84  +
mov [esp+58h] eax +
lea eax [esp+58h] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset dword_42F050 +
mov dword ptr [esp+5Ch] 0 +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_419B50  +
mov ecx [esp+5Ch] +
test ecx ecx +
jz loc_43B074  +
mov [esp] edi +
call free  +
xor eax eax +
jmp loc_43A8E6  +
***
ja loc_43ADB5  +
cmp eax 1 +
jnz loc_43ACBB  +
nop   +
lea esi [esi+0] +
jmp loc_43AD10  +
***
cmp eax 7FFFFFFFh +
jnz loc_43ACBB  +
jmp loc_43AD10  +
***
sub eax 0Eh +
cmp eax 1 +
ja loc_43ACBB  +
jmp loc_43AD10  +
***
mov esi [esp+0C0h] +
mov eax [esp+20h] +
mov edi [esp+14h] +
mov ebx [eax+0C0h] +
test ebx ebx +
jz loc_43ADF8  +
nop   +
mov eax [ebx+18h] +
mov [esp] edi +
mov [esp+4] eax +
call sub_44B170  +
mov [ebx+18h] eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43ADE0  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset sub_431470 +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_419B50  +
mov eax [esi+0A0h] +
mov ebx [eax+238h] +
test ebx ebx +
jnz loc_43AFC6  +
mov edx [eax+244h] +
test edx edx +
jz loc_43AF03  +
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_405DA0  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
lea esi [esi+0] +
mov ebp [esp+1Ch] +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] ebp +
call sub_4206D0  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44B170  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+5Ch] eax +
call sub_420740  +
cmp word ptr [esp+5Ah] 0 +
jz loc_43AEF7  +
xor ebp ebp +
lea esi [esi+0] +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_4207C0  +
mov eax [esp+48h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44B170  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+48h] eax +
call sub_420830  +
movzx eax word ptr [esp+5Ah] +
cmp ebp eax +
jb loc_43AEB0  +
mov eax [esp+64h] +
test eax eax +
jnz loc_43AE60  +
mov eax [esp+0C4h] +
xor ebx ebx +
mov eax [eax+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_44B160  +
mov ecx [esp+24h] +
mov esi [esp+0C4h] +
mov [ecx+24h] eax +
jmp loc_43AF3C  +
add ebx 1 +
cmp [esi+64h] ebx +
jb loc_43A8E1  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_435800  +
test eax eax +
jnz loc_43AF30  +
xor eax eax +
jmp loc_43A8E6  +
***
mov [esp+4] eax +
mov [esp] esi +
call sub_404B80  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43AD84  +
mov edx [ebx+174h] +
mov ecx [esp+3Ch] +
movzx edx byte ptr [edx+5] +
add ecx 1 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
imul edx ecx +
mov [esp+3Ch] ecx +
mov [esp+8] edx +
call memset  +
jmp loc_43A9D7  +
***
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_43A8E6  +
***
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_405DA0  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
jmp loc_43AFF8  +
mov ecx [esp+68h] +
test ecx ecx +
jz loc_43B069  +
mov eax [esp+1Ch] +
mov [esp+4] ebx +
add ebx 14h +
mov [esp] esi +
mov [esp+8] eax +
call sub_420510  +
cmp dword ptr [esp+64h] 14h +
jnz loc_43AFF0  +
cmp word ptr [esp+5Eh] 0 +
jz loc_43AFF0  +
xor ebp ebp +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_420650  +
mov eax [esp+40h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44B170  +
mov [esp+8] ebx +
add ebx 8 +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+40h] eax +
call sub_420690  +
movzx eax word ptr [esp+5Eh] +
cmp ebp eax +
jb loc_43B020  +
jmp loc_43AFF0  +
***
mov eax [esi+0A0h] +
jmp loc_43AE28  +
***
mov ecx [esp+58h] +
mov edx edi +
mov eax [esp+0C4h] +
mov dword ptr [esp] 0 +
sub ecx edi +
sar ecx 2 +
call sub_42ECC0  +
mov [esp] edi +
mov [esp+18h] eax +
call free  +
mov edx [esp+18h] +
test edx edx +
jz loc_43AD84  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [eax+60h] edx +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_hash +
mov [esp] eax +
call sub_405DA0  +
mov edx [esp+18h] +
test eax eax +
mov edi eax +
jz loc_43B6E4  +
mov eax [edi+8Ch] +
mov [esp+1Ch] edx +
mov eax [eax+28h] +
mov ecx eax +
mov [esp+18h] eax +
lea eax [ebp+edx+2] +
imul eax ecx +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_404C60  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43AD84  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
shl ecx 3 +
cmp ecx 8 +
jz loc_43B591  +
cmp ecx 10h +
jz loc_43B646  +
cmp ecx 20h +
jz loc_43B61C  +
cmp ecx 40h +
jnz loc_43B67A  +
mov ecx [esi+4] +
mov ecx [ecx+24h] +
mov [esp+8] eax +
mov [esp] edx +
mov dword ptr [esp+4] 0 +
call ecx  +
mov eax [esi+4] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
jmp loc_43A9FB  +
***
mov dword ptr [esp+4] 1989h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
jmp loc_43A958  +
***
mov dword ptr [esp+4] 199Dh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
jmp loc_43A9BF  +
***
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_43B65D  +
mov eax edi +
shr eax 1 +
jz loc_43B696  +
mov edx 1 +
jmp loc_43B1D4  +
mov edx ecx +
shr eax 1 +
lea ecx [edx+1] +
jnz loc_43B1D2  +
cmp ecx 2 +
jbe loc_43B696  +
lea eax [edx-1] +
bt edi eax +
jnb loc_43B5A4  +
mov eax [ebx+174h] +
add edx 4 +
cmp byte ptr [eax+0Ah] 40h +
jz loc_43B5C2  +
mov dword ptr [esp+90h] 5 +
mov eax 1Fh +
mov dword ptr [esp+20h] 5 +
mov [esp+98h] eax +
mov eax 1 +
mov ecx edx +
mov edi eax +
shl edi cl +
mov ecx edx +
sub ecx [esp+20h] +
mov [esp+64h] edi +
mov [esp+94h] edx +
shl eax cl +
mov [esp+20h] eax +
lea edi ds:0[eax*4] +
mov eax [esp+18h] +
lea eax [edi+eax*8] +
mov [esp] eax +
call sub_407460  +
test eax eax +
mov [esp+78h] eax +
jz loc_43AFB3  +
mov edx [esp+18h] +
lea ecx [eax+edi] +
mov [esp+74h] ecx +
mov [esp+2Ch] ecx +
mov [esp+8] edi +
shl edx 2 +
mov [esp+28h] edx +
add edx ecx +
mov ecx ebp +
sub ecx [esp+60h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
mov [esp+70h] edx +
mov [esp+88h] ecx +
call memset  +
mov edx [esp+28h] +
mov ecx [esp+2Ch] +
mov dword ptr [esp+4] 0 +
mov [esp+8] edx +
mov [esp] ecx +
call memset  +
mov eax [esp+60h] +
mov edi [esp+74h] +
test eax eax +
jz loc_43B2F1  +
mov eax [esp+68h] +
xor ecx ecx +
mov [esp+2Ch] ebx +
mov ebx eax +
mov eax [ebx+ecx*4] +
xor edx edx +
add ecx 1 +
div  dword ptr [esp+18h] +
add dword ptr [edi+edx*4] 1 +
cmp [esp+60h] ecx +
ja loc_43B2D7  +
mov ebx [esp+2Ch] +
mov edx [esp+88h] +
xor eax eax +
mov ecx [esp+70h] +
cmp dword ptr [edi+eax*4] 0 +
jz loc_43B30A  +
mov [ecx+eax*4] edx +
add edx [edi+eax*4] +
add eax 1 +
cmp eax [esp+18h] +
jnz loc_43B2FE  +
cmp edx ebp +
jz loc_43B32B  +
mov dword ptr [esp+4] 1A5Bh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
mov eax [esp+80h] +
mov ecx [esp+18h] +
mov [esp+8Ch] eax +
mov eax [esp+60h] +
mov [esp+84h] ecx +
add eax ecx +
mov ecx [esp+24h] +
mov edx eax +
mov eax [esp+64h] +
shr eax 3 +
lea eax [eax+edx*4+10h] +
mov [ecx+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_404C60  +
test eax eax +
mov edi eax +
jz loc_43AFA7  +
mov eax [esp+24h] +
mov ecx [esp+18h] +
mov [eax+6Ch] edi +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp] ecx +
mov [esp+4] edi +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+88h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov ecx [esp+20h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+94h] +
mov [esp] edx +
call eax  +
mov eax [esp+64h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx [esp+0C0h] +
shr eax 3 +
lea eax [edi+eax+10h] +
xor edi edi +
mov [esp+2Ch] eax +
mov ebp eax +
jmp loc_43B414  +
mov [esp+4] ebp +
mov dword ptr [esp] 0 +
call eax  +
add ebp 4 +
add edi 1 +
cmp edi [esp+18h] +
jz loc_43B469  +
mov eax [esp+74h] +
mov eax [eax+edi*4] +
test eax eax +
mov eax [ebx+4] +
mov eax [eax+30h] +
jz loc_43B3FB  +
mov ecx [esp+70h] +
mov ecx [ecx+edi*4] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
jmp loc_43B408  +
***
mov dword ptr [esp+4] 0CE2h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
jmp loc_43AC67  +
***
mov dword ptr [esp+4] 1A8Dh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
jmp loc_43AC10  +
***
mov eax [esp+2Ch] +
add eax [esp+28h] +
mov dword ptr [esp+4] offset sub_42FA80 +
mov [esp+0C0h] ebx +
mov ebx esi +
mov esi [esp+0C0h] +
mov [esp+7Ch] eax +
mov eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_419B50  +
mov eax [esp+24h] +
mov edi [esp+20h] +
mov ebp [eax+6Ch] +
add ebp 10h +
test edi edi +
jz loc_43B574  +
mov eax [ebx+174h] +
xor ecx ecx +
xor edi edi +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx ecx +
mov ecx [esp+0C0h] +
movzx eax byte ptr [eax+0Ah] +
jmp loc_43B536  +
cmp al 10h +
jz loc_43B546  +
cmp al 20h +
jz loc_43B566  +
cmp al 40h +
jnz loc_43B6C8  +
mov eax [ecx+4] +
mov edx [esp+78h] +
mov [esp+18h] ecx +
mov eax [eax+24h] +
mov [esp+8] ebp +
mov ecx [edx+edi] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
call eax  +
mov ecx [esp+18h] +
mov eax [esi+174h] +
add ebx 1 +
add edi 4 +
movzx eax byte ptr [eax+0Ah] +
mov edx eax +
shr dl 3 +
movzx edx dl +
add ebp edx +
cmp [esp+20h] ebx +
jz loc_43B572  +
cmp al 8 +
jnz loc_43B4E0  +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [ebp+0] al +
jmp loc_43B516  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+3Ch] +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [esp+4] ebp +
mov [esp] eax +
call edx  +
mov ecx [esp+18h] +
jmp loc_43B516  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+30h] +
jmp loc_43B550  +
***
mov esi ecx +
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
jmp loc_43ABF0  +
***
mov [eax] dl +
mov ecx [esp+18h] +
mov edx ebp +
mov eax [edi+6Ch] +
mov [eax+ecx] dl +
jmp loc_43B171  +
***
mov eax [ebx+174h] +
add edx 3 +
cmp byte ptr [eax+0Ah] 40h +
jnz loc_43B203  +
cmp edx 5 +
mov eax 6 +
cmovz edx eax +
mov dword ptr [esp+90h] 6 +
mov eax 3Fh +
mov dword ptr [esp+20h] 6 +
jmp loc_43B21B  +
***
mov byte ptr [edi+10h] 0 +
jmp loc_43ABC9  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+3Ch] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_43ABC9  +
***
mov dword ptr [esp+4] 1A0Dh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
jmp loc_43AAC1  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+30h] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
jmp loc_43B171  +
***
mov ecx [esi+4] +
mov ecx [ecx+3Ch] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+3Ch] +
jmp loc_43B631  +
***
mov dword ptr [esp+4] 1A2Ah +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
mov edi [esp+60h] +
jmp loc_43B1C1  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 19DEh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402960  +
mov eax [ebx+174h] +
cmp byte ptr [eax+0Ah] 40h +
jz loc_43B71C  +
mov edx 5 +
jmp loc_43B203  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A22h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402960  +
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A83h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402960  +
mov dword ptr [esp+4] 19D7h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
mov edx [esp+18h] +
jmp loc_43B0D9  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_43ABC9  +
***
mov edx 6 +
jmp loc_43B5C2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_43B754  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_43B772  +
jmp loc_43B810  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_43B810  +
test byte ptr [ebx+29h] 8 +
jnz loc_43B764  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43B764  +
mov eax [ebp+4] +
mov ecx [ebx+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_43B764  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_43B7CF  +
jmp loc_43B764  +
***
mov eax [edi+88h] +
test eax eax +
jz loc_43B7C1  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or ah 1 +
mov [esi+18h] ax +
mov eax [esp+34h] +
mov edx [eax+1Ch] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_43B764  +
test byte ptr [esi+16h] 80h +
jz loc_43B7C8  +
cmp dword ptr [esi+3Ch] offset off_473270 +
jz loc_43B7C8  +
mov edi [esi+8Ch] +
add edx 7Ch +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebp +
lea eax [edi+88h] +
mov [esp+0Ch] eax +
call sub_44CE00  +
test eax eax +
jnz loc_43B7A8  +
jmp loc_43B748  +
***
mov eax [edx+7Ch] +
mov ebx 1 +
test eax eax +
jz loc_43B74A  +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp] ebp +
mov dword ptr [esp+0Ch] offset sub_42EC80 +
mov [esp+4] eax +
call sub_44D080  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
movzx edx byte ptr [ebx+34h] +
mov eax edx +
and eax 6 +
cmp al 6 +
jz loc_43B8D3  +
movzx eax byte ptr [ebx+33h] +
mov ecx eax +
and eax 0FFFFFFFBh +
or cl [esi+33h] +
and ecx 4 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFFEh +
or cl [esi+33h] +
and ecx 1 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFEFh +
or cl [esi+33h] +
and ecx 10h +
or eax ecx +
mov ecx edx +
mov [ebx+33h] al +
and edx 0FFFFFFBFh +
or cl [esi+34h] +
and ecx 40h +
or edx ecx +
mov [ebx+34h] dl +
mov edx eax +
and eax 7Fh +
or dl [esi+33h] +
and edx 0FFFFFF80h +
or eax edx +
mov [ebx+33h] al +
movzx eax byte ptr [ebx+35h] +
mov edx eax +
and eax 0FFFFFFFDh +
or dl [esi+35h] +
and edx 2 +
or eax edx +
mov [ebx+35h] al +
cmp byte ptr [esi+0Ch] 6 +
jz loc_43B8E0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+20h] +
mov ecx [esi+24h] +
mov eax [eax+1Ch] +
mov edx [eax+3Ch] +
cmp ecx edx +
jle loc_43B900  +
mov edi [ebx+24h] +
test edi edi +
js loc_43B970  +
add ecx edi +
mov [ebx+24h] ecx +
mov [esi+24h] edx +
mov ecx [esi+28h] +
mov edx [eax+40h] +
cmp ecx edx +
jle loc_43B919  +
mov edi [ebx+28h] +
test edi edi +
js loc_43B960  +
add ecx edi +
mov [ebx+28h] ecx +
mov [esi+28h] edx +
mov edx [esi+20h] +
cmp edx 0FFFFFFFFh +
jz loc_43B8D9  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43B93C  +
mov edx [ebx+38h] +
mov eax [eax+50h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_44AFF0  +
mov edx [esi+20h] +
mov eax [esi+38h] +
mov [ebx+20h] edx +
mov [ebx+38h] eax +
mov dword ptr [esi+20h] 0FFFFFFFFh +
mov dword ptr [esi+38h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [ebx+28h] 0 +
xor edi edi +
mov ecx [esi+28h] +
jmp loc_43B911  +
***
mov dword ptr [ebx+24h] 0 +
xor edi edi +
mov ecx [esi+24h] +
jmp loc_43B8F8  +
***
jmp loc_43B990  +
push ebx  +
mov eax [esp+0Ch] +
mov edx [esp+8] +
mov ecx [esp+10h] +
cmp byte ptr [eax+30h] 0Ah +
jz loc_43B9B0  +
mov ebx [edx+1Ch] +
mov ebx [ebx+48h] +
and byte ptr [eax+33h] 7Fh +
mov [eax+28h] ebx +
test ecx ecx +
jz loc_43B9E0  +
or byte ptr [eax+34h] 8 +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_43B9E0  +
mov dword ptr [eax+20h] 0FFFFFFFFh +
mov ecx [eax+38h] +
mov eax [edx+1Ch] +
mov eax [eax+50h] +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
pop ebx  +
jmp sub_44AFF0  +
***
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1AEh] +
mov dword ptr [ebx+44h] 0FFFFFFFFh +
mov dword ptr [ebx+48h] 0FFFFFFFFh +
mov dword ptr [ebx+4Ch] 1 +
shr al 1 +
and eax 1 +
sub eax 1 +
mov [ebx+3Ch] eax +
mov [ebx+40h] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] eax +
call sub_419360  +
mov edx [esp+18h+arg_10] +
mov dword ptr [ebx+28h] 1 +
mov [ebx+2Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 0FCh +
call sub_4075F0  +
test eax eax +
mov ebx eax +
jz loc_43BAB0  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 23h +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_42F130 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43B9F0  +
test eax eax +
jz loc_43BAB4  +
mov dword ptr [ebx+24h] offset sub_42F200 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_43BAAB  +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_43BAAB  +
***
mov edx [esp+arg_0] +
xor eax eax +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_43BBB7  +
movzx ecx byte ptr [edx+28h] +
and ecx 7 +
cmp cl 1 +
jnz locret_43BBB7  +
mov eax [edx+0A0h] +
mov eax [eax+220h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebx [esp+50h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [eax] 0 +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43BBF3  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_43BBE6  +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_405CC0  +
test eax eax +
mov esi eax +
jz loc_43BBE6  +
mov eax [eax+24h] +
test eax eax +
jz loc_43BBE6  +
lea eax [esp+24h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_406620  +
test eax eax +
jnz loc_43BC4F  +
mov edx [esp+24h] +
xor eax eax +
test edx edx +
jz loc_43BBEB  +
mov [esp] edx +
mov [esp+14h] eax +
call free  +
mov eax [esp+14h] +
jmp loc_43BBEB  +
***
mov [esp+4] esi +
mov [esp] ebx +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
jz loc_43BC33  +
mov edx [ebx+0A0h] +
mov edi [esp+24h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
mov ebp [eax+30h] +
mov eax edi +
mov [esp+14h] edx +
mov edx [esi+24h] +
add edx edi +
cmp edi edx +
jnb loc_43BD24  +
mov esi edi +
mov edi edx +
jmp loc_43BCB0  +
add esi [esp+14h] +
cmp esi edi +
jnb loc_43BD20  +
lea eax [esp+28h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call ebp  +
mov eax [esp+28h] +
test eax eax +
jz loc_43BD20  +
cmp eax 1 +
jnz loc_43BCA8  +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call sub_420AB0  +
test eax eax +
mov [esp+18h] eax +
jz loc_43BC33  +
mov dword ptr [esp+4] 0Ch +
mov [esp] ebx +
call sub_404B80  +
test eax eax +
jz loc_43BC33  +
mov ecx [esp+18h] +
mov edx [esp+54h] +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jmp loc_43BCA8  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_43BBE6  +
***
jmp loc_43BD40  +
mov edx [esp+8] +
test edx edx +
jz loc_43BD64  +
mov eax [esp+10h] +
test eax eax +
jz loc_43BD64  +
mov eax [esp+4] +
mov ecx [eax+4] +
mov eax 1 +
cmp dword ptr [ecx+4] 5 +
jz loc_43BD70  +
retn   +
***
mov eax 1 +
retn   +
***
mov ecx [esp+0Ch] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_43BD62  +
mov eax [esp+10h] +
mov edx [edx+8Ch] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp [edx+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+5Ch] +
mov eax [eax+8] +
mov esi eax +
mov edx eax +
shr esi 6 +
mov edi eax +
mov [esp+18h] esi +
mov ebx eax +
mov esi eax +
and dword ptr [esp+18h] 3Fh +
and edx 3Fh +
shr edi 12h +
mov [esp+28h] eax +
mov eax [esp+18h] +
shr ebx 16h +
and edi 0Fh +
and ebx 0Fh +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea eax [eax+eax-2] +
mov [esp+20h] eax +
or dword ptr [esp+20h] 1 +
and esi 8000000h +
jz loc_43BFB5  +
lea eax [edx+1] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
mov eax [esp+5Ch] +
mov esi [esp+58h] +
add esi [eax] +
cmp edi ebx +
jb loc_43BE27  +
lea eax [ebx-1] +
cmp eax 3 +
jbe loc_43BFD1  +
mov dword ptr [esp+4] 1F35h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
cmp ebx 4 +
lea ecx ds:0[ebx*8] +
jz loc_43BFF8  +
xor ebp ebp +
test edi edi +
jz loc_43BECA  +
mov edx edi +
xor eax eax +
sub edx ebx +
mov [esp+2Ch] edi +
cmp ebx 2 +
mov edi edx +
jz loc_43BE90  +
cmp ebx 4 +
jz loc_43BF93  +
cmp ebx 1 +
jz loc_43BF85  +
mov dword ptr [esp+8] offset aGet_value +
mov dword ptr [esp+4] 1F56h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402960  +
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
mov edx edi +
add esi ebx +
sub edx ebx +
test edi edi +
jnz loc_43BE5B  +
mov ebp [esp+20h] +
movzx ecx byte ptr [esp+1Ch] +
mov edi [esp+2Ch] +
shl ebp cl +
not ebp  +
and ebp eax +
mov ecx [esp+28h] +
xor eax eax +
test ecx 20000000h +
jnz loc_43BF0E  +
mov eax ecx +
mov ecx [esp+60h] +
shl eax 3 +
sar eax 1Fh +
lea edx ds:0[edi*8] +
add eax 3 +
mov [esp+10h] ecx +
mov ecx [esp+18h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
mov [esp+4] ecx +
call loc_417BF0  +
movzx ecx byte ptr [esp+1Ch] +
mov esi [esp+20h] +
and esi [esp+60h] +
mov edx [esp+58h] +
shl esi cl +
mov ecx edi +
or esi ebp +
mov ebp [esp+5Ch] +
sub ecx ebx +
add edx [ebp+0] +
mov ebp ebx +
neg ebp  +
mov [esp+18h] ebp +
mov ebp ecx +
add edx ecx +
test edi edi +
jz loc_43C02B  +
cmp ebx 2 +
mov edi edx +
mov [esp+20h] eax +
mov edx esi +
mov esi [esp+50h] +
jz loc_43C04F  +
cmp ebx 4 +
jz loc_43C070  +
cmp ebx 1 +
jz loc_43C033  +
mov dword ptr [esp+8] offset aPut_value +
mov dword ptr [esp+4] 1F20h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402960  +
shl eax cl +
mov edx eax +
movzx eax byte ptr [esi] +
or eax edx +
jmp loc_43BEAD  +
***
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
jmp loc_43BEAD  +
***
lea eax ds:0[edi*8] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
sub [esp+1Ch] edx +
jmp loc_43BE0D  +
***
xor edx edx +
mov eax edi +
div  ebx +
test edx edx +
jnz loc_43BE27  +
mov eax [esp+50h] +
test eax eax +
jz loc_43BE27  +
test esi esi +
jnz loc_43BE3B  +
jmp loc_43BE27  +
***
cmp edi 4 +
nop   +
lea esi [esi+0] +
jz loc_43C020  +
mov dword ptr [esp+4] 1F39h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
xor ecx ecx +
jmp loc_43BE4B  +
***
xor ecx ecx +
jmp loc_43BE51  +
***
mov eax [esp+20h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [edi] dl +
shr edx 8 +
mov ecx ebp +
add edi [esp+18h] +
sub ecx ebx +
test ebp ebp +
jz loc_43C027  +
cmp ebx 2 +
mov ebp ecx +
jnz loc_43BF57  +
mov ecx [esi+4] +
mov [esp+1Ch] edx +
mov ecx [ecx+3Ch] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
mov edx [esp+1Ch] +
shr edx 10h +
jmp loc_43C038  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
xor edx edx +
jmp loc_43C038  +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [edx+14h] +
and eax 2000h +
jz loc_43C0B0  +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [edx] +
mov esi offset a_eh_frame_0 +
mov ecx 0Ah +
mov edi edx +
cmps   +
jz loc_43C0A6  +
mov edi edx +
mov esi offset a_gcc_except_ta +
mov ecx 12h +
mov edx 3 +
cmps   +
pop ebx  +
pop esi  +
pop edi  +
cmovnz eax edx +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov esi [esp+0Ch+arg_0] +
mov edi [esp+0Ch+arg_4] +
mov ebx [esi+7Ch] +
test ebx ebx +
jz loc_43C113  +
test byte ptr [ebx+17h] 2 +
jnz loc_43C140  +
mov edx [esi+28h] +
test edx edx +
jz loc_43C130  +
mov eax [ebx+28h] +
test eax eax +
jz loc_43C120  +
cmp edx eax +
jz loc_43C110  +
xor ebx ebx +
mov [esi+7Ch] ebx +
add esp 0Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
cmp edx eax +
jnz loc_43C10E  +
jmp loc_43C110  +
mov eax [ebx+28h] +
mov edx [esi+24h] +
test eax eax +
jnz loc_43C10A  +
jmp loc_43C120  +
mov eax [ebx+8Ch] +
mov ebp [eax+7Ch] +
test ebp ebp +
jz loc_43C10E  +
mov ebx ebp +
jmp loc_43C162  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp ebp ebx +
jz loc_43C10E  +
test ebx ebx +
jz loc_43C10E  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_42F240  +
test eax eax +
jz loc_43C151  +
test ebx ebx +
jnz loc_43C0FC  +
jmp loc_43C110  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov eax [eax+4] +
test byte ptr [edx+29h] 8 +
mov [esp+0E8h+var_B0] edx +
mov [esp+0E8h+var_BC] eax +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+94h] +
mov [esp+0E8h+var_84] eax +
jnz loc_43C6BB  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
lea edi [eax+48h] +
mov [esp+0E8h+var_AC] eax +
mov [esp+0E8h+var_88] edi +
test ecx ecx +
jnz loc_43C6D0  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+68h] +
mov [esp+0E8h+var_A8] eax +
mov [esp+0E8h+var_94] eax +
mov eax [esp+0E8h+var_AC] +
mov edx [esp+0E8h+var_A8] +
mov eax [eax+78h] +
test edx edx +
mov [esp+0E8h+var_A0] eax +
jnz loc_43CD09  +
mov eax [esp+0E8h+var_A8] +
mov ebx [esp+0E8h+var_A0] +
mov esi [ebp+2Ch] +
mov edi [ebp+30h] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+0E8h+var_C0] eax +
jnb loc_43C525  +
mov [esp+0E8h+var_C4] ebp +
mov ebx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_9C] 0 +
mov ebp [esp+0E8h+var_B0] +
jmp loc_43C25B  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_43C271  +
mov dword ptr [edi] 0 +
add ebx 14h +
add esi 4 +
add edi 4 +
cmp [esp+0E8h+var_C0] ebx +
jbe loc_43C521  +
mov dword ptr [esi] 0FFFFFFFFh +
mov eax [ebp+0A0h] +
mov eax [eax+928h] +
test eax eax +
jnz loc_43C237  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_43C700  +
mov [esp+0E8h+var_3C] offset off_4731C8 +
mov edx offset off_4731C8 +
mov ecx [esp+0E8h+var_C4] +
mov [edi] edx +
cmp [ecx+30h] edi +
jz loc_43C248  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_43C248  +
mov eax [ecx] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 18h +
cmp dl 18h +
jz loc_43C248  +
and eax 60h +
cmp al 60h +
jz loc_43C248  +
mov eax [ebx+10h] +
sub eax 1 +
cmp eax 0FFFFFEFEh +
ja loc_43C2E9  +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_43C7F0  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_43C248  +
mov eax [esp+0E8h+var_AC] +
mov edx [ebx+8] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] ebp +
mov [esp+0E8h+var_E4] eax +
call sub_420AB0  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_43C8F0  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
mov ecx eax +
and ecx 18h +
cmp cl 10h +
jz loc_43C890  +
and eax 60h +
jnz loc_43C7B5  +
mov eax [esp+0E8h+var_3C] +
test byte ptr [eax+16h] 80h +
jz loc_43C365  +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_43C365  +
mov eax [ebp+4] +
mov ecx [esp+0E8h+var_B4] +
mov eax [eax+11Ch] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_43C248  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jz loc_43C7CC  +
mov eax [esp+0E8h+var_9C] +
test eax eax +
jnz loc_43C40D  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_2C] 0 +
mov [esp+0E8h+var_38] 0 +
mov [esp+0E8h+var_34] 0 +
add dword ptr [eax+38h] 1 +
xor eax eax +
test byte ptr [ebp+2Ch] 10h +
mov [esp+0E8h+var_30] 0 +
mov byte ptr [esp+0E8h+var_2C] 4 +
mov [esp+0E8h+var_28] 0FFFFFFF1h +
jnz loc_43C3D2  +
mov eax [ebp+0] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
lea ecx [esp+0E8h+var_38] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_473270 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_42FED0  +
test eax eax +
jz loc_43C8F0  +
mov [esp+0E8h+var_9C] 1 +
mov eax [ebx] +
mov [esp+0E8h+var_38] eax +
mov eax [ebx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ebx+8] +
mov [esp+0E8h+var_30] eax +
mov eax [ebx+0Ch] +
mov [esp+0E8h+var_2C] eax +
mov eax [ebx+10h] +
mov [esp+0E8h+var_28] eax +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43C8F0  +
mov ecx [esp+0E8h+var_3C] +
mov edx [esp+0E8h+var_C4] +
mov eax [ecx+38h] +
mov edx [edx] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_A4] ecx +
mov [esp+0E8h+var_38] eax +
mov [esp+0E8h+var_98] edx +
movzx edx byte ptr [edx] +
and edx 3 +
cmp dl 2 +
jz loc_43C4BC  +
mov edx [ecx+3Ch] +
add eax [edx+1Ch] +
movzx edx byte ptr [esp+0E8h+var_2C] +
mov [esp+0E8h+var_38] eax +
and edx 0Fh +
cmp dl 6 +
jz loc_43C900  +
mov eax [esp+0E8h+var_BC] +
mov eax [eax+7Ch] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_98] eax +
mov eax [esp+0E8h+var_A4] +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_E8] eax +
call sub_42FED0  +
test eax eax +
jz loc_43C8F0  +
cmp eax 1 +
jnz loc_43C248  +
mov eax [esp+0E8h+var_98] +
add ebx 14h +
add esi 4 +
add edi 4 +
mov [esi-4] eax +
cmp [esp+0E8h+var_C0] ebx +
ja loc_43C25B  +
mov ebp [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_B8] +
mov edi 20h +
mov edx 8 +
mov esi 0FFFFFFFFh +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovnz edx edi +
mov edi [esp+0E8h+var_B0] +
setnz al  +
movzx eax al +
lea eax ds:4[eax*4] +
mov [esp+0E8h+var_98] eax +
mov eax [edi+0A0h] +
mov ebx [edi+64h] +
mov [esp+0E8h+var_C0] edx +
mov edx 0FFh +
cmovnz edx esi +
mov eax [eax+218h] +
test ebx ebx +
mov [esp+0E8h+var_74] edx +
mov [esp+0E8h+var_8C] eax +
jz loc_43C6BB  +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_C4] ebp +
mov ebp ebx +
mov [esp+0E8h+var_6C] 0 +
mov [esp+0E8h+var_70] eax +
nop   +
lea esi [esi+0] +
test byte ptr [ebp+18h] 2 +
jz loc_43C6B0  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43C800  +
mov eax [ebp+14h] +
test ah 1 +
jz loc_43C6B0  +
mov edx [ebp+24h] +
test edx edx +
jnz loc_43C5D9  +
test al 4 +
jz loc_43C6B0  +
test eax 100000h +
jnz loc_43C6B0  +
mov ecx [ebp+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_43D3E4  +
mov edi [esp+0E8h+var_B8] +
mov [esp+0E8h+var_40] ecx +
test byte ptr [edi+1AEh] 40h +
jz loc_43C618  +
mov ebx [ebp+28h] +
test ebx ebx +
jz loc_43C618  +
cmp edx ebx +
ja loc_43CCE0  +
test al 4 +
jnz loc_43C924  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+12Ch] +
test eax eax +
jz loc_43C654  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esp+0E8h+var_40] +
mov edi [esp+0E8h+var_BC] +
mov edx [esi] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E4] edx +
call eax  +
test eax eax +
jnz loc_43C6B0  +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
cmp eax 2 +
jz loc_43CE13  +
jle loc_43CD5D  +
cmp eax 3 +
jz loc_43CCAA  +
cmp eax 6 +
jnz loc_43CE40  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_444620  +
test eax eax +
jz loc_43C8F0  +
lea esi [esi+0] +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_43C5A0  +
add esp 0DCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0E8h+var_B8] +
xor edx edx +
mov [esp+0E8h+var_94] 0 +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+60h] +
div  ecx +
mov [esp+0E8h+var_A8] eax +
jmp loc_43C1EA  +
cmp eax 0FFFFFFF1h +
jz loc_43C7A0  +
cmp eax 0FFFFFFF2h +
jnz loc_43C723  +
mov [esp+0E8h+var_3C] offset off_473120 +
mov edx offset off_473120 +
jmp loc_43C28C  +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] ebp +
call sub_423710  +
test eax eax +
mov [esp+0E8h+var_3C] eax +
jz loc_43C242  +
movzx ecx word ptr [eax+18h] +
mov edx eax +
and cx 380h +
cmp cx 100h +
jnz loc_43C28C  +
movzx ecx byte ptr [ebx+0Ch] +
and ecx 0Fh +
cmp cl 3 +
jz loc_43C28C  +
mov eax [eax+8Ch] +
mov edx [ebx] +
mov eax [eax+88h] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_3C] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44D800  +
mov [ebx] eax +
mov edx [esp+0E8h+var_3C] +
jmp loc_43C28C  +
mov [esp+0E8h+var_3C] offset off_473270 +
mov edx offset off_473270 +
jmp loc_43C28C  +
cmp al 40h +
jz loc_43C347  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jnz loc_43C374  +
test byte ptr [ebp+2Ch] 10h +
jnz loc_43C248  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_9C] 1 +
add dword ptr [eax+38h] 1 +
jmp loc_43C40D  +
mov ecx [esp+0E8h+var_BC] +
cmp eax [ecx+68h] +
setnz al  +
jmp loc_43C2E1  +
mov edx [ebp+14h] +
mov ecx edx +
mov eax edx +
and ecx 2100000h +
cmp ecx 2000000h +
jnz loc_43C5C1  +
mov eax [ebp+8Ch] +
mov ebx [ebp+3Ch] +
mov eax [eax+20h] +
cmp [esp+0E8h+var_A8] eax +
jbe loc_43CC62  +
mov edi [esp+0E8h+var_B0] +
mov ecx [edi+0A0h] +
lea edi ds:0[eax*4] +
mov esi [ecx+928h] +
test esi esi +
jnz loc_43CC50  +
mov esi [esp+0E8h+var_A0] +
lea eax [eax+eax*4] +
lea ecx [esi+eax*4] +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_43D490  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+2Ch] +
mov esi [eax+edi] +
mov eax edx +
cmp esi 0FFFFFFFFh +
jz loc_43D6A3  +
mov edx [ebx+8Ch] +
mov [edx+20h] esi +
jmp loc_43C5C1  +
mov eax [edx+20h] +
mov ecx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] ecx +
call sub_408C80  +
test eax eax +
jz loc_43C248  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
jmp loc_43C327  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] offset aErrorBSizeOfSe +
mov [esp+0E8h+var_E4] eax +
call off_4730E4  +
mov [esp+0E8h+var_E8] 14h +
call sub_4029E0  +
nop   +
xor eax eax +
add esp 0DCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0E8h+var_98] +
mov edx [ecx+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_43D5C8  +
sub eax [edx+1Ch] +
mov [esp+0E8h+var_38] eax +
jmp loc_43C4BC  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_434EB0  +
test eax eax +
mov [esp+0E8h+var_7C] eax +
jz loc_43D5AE  +
mov edx [ebp+24h] +
cmp [esp+0E8h+var_98] edx +
jnb loc_43C9B4  +
mov eax [ebp+0] +
mov edi offset a_ctors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_43CDB0  +
mov ecx [ebp+3Ch] +
mov edi offset a_init_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_43CDB0  +
movzx eax byte ptr [eax+6] +
cmp al 2Eh +
jz loc_43C99D  +
test al al +
jnz loc_43C9B4  +
mov eax [esp+0E8h+var_98] +
imul eax [ebp+4Ch] +
cmp edx eax +
jnz loc_43C8CA  +
or dword ptr [ebp+14h] 4000000h +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
lea ecx [eax-1] +
cmp ecx 5 +
ja loc_43C9E0  +
mov eax 1 +
shl eax cl +
test al 25h +
jz loc_43C9E0  +
mov [esp+0E8h+var_A4] 0FFFFFFFFh +
jmp loc_43CA15  +
mov eax [ebp+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+114h] +
test eax eax +
jz loc_43CA02  +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_43C9D2  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+118h] +
mov [esp+0E8h+var_E8] ebp +
call eax  +
mov [esp+0E8h+var_A4] eax +
mov edi [esp+0E8h+var_B8] +
mov eax [ebp+4Ch] +
mov ecx [esp+0E8h+var_7C] +
mov esi [esp+0E8h+var_A4] +
mov edx [edi+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
mov edi ecx +
movzx edx byte ptr [edx+9] +
imul eax edx +
add eax ecx +
mov ebx eax +
mov [esp+0E8h+var_B4] eax +
mov eax esi +
and eax 1 +
mov [esp+0E8h+var_90] eax +
mov eax esi +
and eax 2 +
cmp ecx ebx +
mov [esp+0E8h+var_80] eax +
jnb loc_43CEC5  +
mov [esp+0E8h+var_9C] ebp +
jmp loc_43CB01  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov esi [eax+928h] +
mov eax [esp+0E8h+var_C4] +
test esi esi +
mov eax [eax+30h] +
lea esi [eax+ebx*4] +
mov eax [esi] +
jz loc_43CA8C  +
test eax eax +
jz loc_43CB1B  +
mov ecx [esp+0E8h+var_A0] +
lea edx [ebx+ebx*4] +
lea edx [ecx+edx*4] +
movzx ecx byte ptr [edx+0Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E0] edx +
mov ebp ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
and ebp 0Fh +
mov [esp+0E8h+var_E8] eax +
call sub_421000  +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
jbe loc_43CB7E  +
test esi esi +
jz loc_43CAF4  +
cmp [esp+0E8h+var_A4] 0FFFFFFFFh +
jz loc_43CAF4  +
mov ebx [esi] +
test ebx ebx +
jz loc_43CAF4  +
cmp ebx offset off_473270 +
jz loc_43CAF4  +
cmp dword ptr [ebx+3Ch] offset off_473270 +
jz loc_43D252  +
add edi 0Ch +
cmp [esp+0E8h+var_B4] edi +
jbe loc_43CEC1  +
mov edx [edi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
mov ebx edx +
shr ebx cl +
test ebx ebx +
jz loc_43CAF4  +
cmp [esp+0E8h+var_A8] ebx +
ja loc_43CA64  +
mov esi [esp+0E8h+var_8C] +
mov eax ebx +
sub eax [esp+0E8h+var_94] +
mov eax [esi+eax*4] +
test eax eax +
jnz loc_43CB34  +
jmp loc_43D629  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_43CB31  +
test byte ptr [eax+0Dh] 1 +
movzx ebp byte ptr [eax+30h] +
jz loc_43CB56  +
sub edx 3 +
cmp dl 1 +
jbe loc_43CDE0  +
movzx esi byte ptr [eax+0Ch] +
lea edx [eax+14h] +
lea ecx [esi-3] +
xor esi esi +
cmp cl 1 +
cmovbe esi edx +
mov eax [eax+4] +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
ja loc_43CACE  +
mov ecx [esp+0E8h+var_C4] +
mov eax [ecx] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43CACE  +
xor eax eax +
cmp ebp 9 +
mov esi [esp+0E8h+var_9C] +
setz al  +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
lea edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E0] eax +
mov eax [esi+3Ch] +
mov eax [eax+1Ch] +
add eax [esi+38h] +
add eax [edi] +
mov [esp+0E8h+var_E8] ecx +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E4] eax +
lea eax [esp+0E8h+var_38] +
call sub_4317B0  +
test eax eax +
jz loc_43C8F0  +
cmp [esp+0E8h+var_A8] ebx +
mov esi [esp+0E8h+var_38] +
jbe loc_43D4B3  +
mov ecx [esp+0E8h+var_A0] +
lea eax [ebx+ebx*4] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
shr dl 4 +
test dl dl +
jz loc_43D78B  +
mov eax [esp+0E8h+var_B0] +
xor ebp ebp +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
test ecx ecx +
jnz loc_43D4C1  +
mov [esp+0E8h+var_E4] 1DE1h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402930  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
jmp loc_43D4C1  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esi+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jnz loc_43C84E  +
mov edi [esp+0E8h+var_8C] +
sub eax [esp+0E8h+var_94] +
mov eax [edi+eax*4] +
movzx edi byte ptr [eax+0Ch] +
lea ecx [edi-6] +
cmp cl 1 +
ja loc_43CC8F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea ecx [esi-6] +
cmp cl 1 +
jbe loc_43CC80  +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov eax [ebx+8Ch] +
mov dword ptr [eax+20h] 0FFFFFFFEh +
mov eax edx +
jmp loc_43C5C1  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_4448A0  +
test eax eax +
jnz loc_43C6B0  +
jmp loc_43C8F0  +
mov edi [esp+0E8h+var_C4] +
mov eax [edi+14h] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [edi+14h] +
mov [esp+0E8h+var_40] eax +
mov eax [ebp+14h] +
jmp loc_43C618  +
test eax eax +
jnz loc_43C201  +
mov eax [ebp+28h] +
mov ecx [ebp+24h] +
mov edx [ebp+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
mov [esp+0E8h+var_D0] ecx +
mov [esp+0E8h+var_D4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_420CB0  +
test eax eax +
mov [esp+0E8h+var_A0] eax +
jnz loc_43C201  +
xor eax eax +
jmp loc_43C8F2  +
cmp eax 1 +
jnz loc_43CE40  +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_D8] eax +
mov eax [ebp+8Ch] +
mov [esp+0E8h+var_E0] ebp +
add eax 88h +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov eax [eax+1Ch] +
sub eax 0FFFFFF80h +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44E5C0  +
test eax eax +
jnz loc_43C6B0  +
jmp loc_43C8F0  +
mov edi offset a_dtors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_43C9B4  +
mov ecx [ebp+3Ch] +
mov edi offset a_fini_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_43C9B4  +
jmp loc_43C991  +
mov edx [eax+14h] +
test byte ptr [edx+16h] 10h +
jnz loc_43CB56  +
mov edx [edx+94h] +
test edx edx +
jz loc_43CB56  +
test byte ptr [edx+2Ah] 20h +
jz loc_43CB56  +
mov byte ptr [eax+0Ch] 1 +
xor esi esi +
mov [eax+14h] edx +
jmp loc_43CB68  +
mov eax [ebp+8Ch] +
mov eax [eax+88h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44D580  +
test eax eax +
jnz loc_43C6B0  +
jmp loc_43C8F0  +
mov eax [ebp+14h] +
test ah 80h +
jnz loc_43C6B0  +
xor edi edi +
test eax 4000000h +
mov esi [ebp+38h] +
mov ebx [ebp+24h] +
jz loc_43D511  +
sub ebx [esp+0E8h+var_98] +
mov eax ebp +
mov ebp ebx +
mov ebx eax +
jmp loc_43CE84  +
test ebp ebp +
jz loc_43D784  +
add esi [esp+0E8h+var_70] +
adc edi [esp+0E8h+var_6C] +
sub ebp [esp+0E8h+var_98] +
mov eax [ebx+3Ch] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_D8] edi +
mov ecx eax +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_E4] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] eax +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E8] ecx +
add eax ebp +
mov [esp+0E8h+var_E0] eax +
call sub_4063D0  +
test eax eax +
jnz loc_43CE70  +
xor eax eax +
jmp loc_43C8F2  +
mov ebp [esp+0E8h+var_9C] +
mov eax [esp+0E8h+var_C4] +
mov edi [esp+0E8h+var_A0] +
mov edx [eax+30h] +
mov eax [eax] +
mov [esp+0E8h+var_D0] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_CC] edx +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] edi +
mov edi [esp+0E8h+var_B0] +
mov [esp+0E8h+var_D8] edx +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_84] +
mov [esp+0E8h+var_E0] edi +
call eax  +
test eax eax +
jz loc_43C8F0  +
cmp eax 2 +
mov eax [esp+0E8h+var_C4] +
mov ecx [eax] +
movzx edi byte ptr [ecx] +
jz loc_43D5C0  +
and edi 3 +
mov eax edi +
cmp al 2 +
jz loc_43CF37  +
cmp byte ptr [ecx+2] 0 +
jns loc_43C620  +
mov eax [ebp+8Ch] +
mov ebx eax +
mov [esp+0E8h+var_64] eax +
mov eax [ebp+3Ch] +
mov [esp+0E8h+var_80] eax +
mov eax [eax+8Ch] +
mov esi eax +
mov [esp+0E8h+var_50] eax +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov edx eax +
mov byte ptr [esp+0E8h+var_90] al +
mov [esp+0E8h+var_B4] eax +
mov eax [ebp+4Ch] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax edx +
mov edx [esi+40h] +
add eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_A4] eax +
mov eax [esi+48h] +
mov esi [ebx+3Ch] +
lea eax [eax+edx*4] +
test esi esi +
mov [esp+0E8h+var_60] eax +
jz loc_43D799  +
mov ebx [esi+28h] +
test ebx ebx +
jnz loc_43D4FA  +
add ebx [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] ebx +
mov eax [ebp+38h] +
mov [esp+0E8h+var_B4] eax +
mov eax edi +
cmp al 2 +
jz loc_43CFCE  +
mov eax [esp+0E8h+var_80] +
mov eax [eax+1Ch] +
add [esp+0E8h+var_B4] eax +
mov eax [esp+0E8h+var_A4] +
mov edi [esp+0E8h+var_7C] +
cmp edi eax +
jnb loc_43D7FC  +
mov esi [esp+0E8h+var_60] +
movzx eax byte ptr [esp+0E8h+var_90] +
mov [esp+0E8h+var_68] 0 +
mov ebx [esp+0E8h+var_C4] +
mov [esp+0E8h+var_5C] 0 +
mov [esp+0E8h+var_90] esi +
mov esi edi +
xor edi edi +
jmp loc_43D044  +
mov eax [esp+0E8h+var_B4] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov [esi] eax +
add esi 0Ch +
add edi 1 +
cmp [esp+0E8h+var_A4] esi +
jbe loc_43D41D  +
mov eax [esp+0E8h+var_B8] +
mov ecx [ebx] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
cmp eax edi +
jz loc_43D174  +
cmp esi [esp+0E8h+var_9C] +
jz loc_43D81F  +
mov eax [esi] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_42E2A0  +
cmp eax 0FFFFFFFDh +
mov [esi] eax +
ja loc_43D010  +
mov edx [ebx] +
add eax [ebp+38h] +
mov [esi] eax +
movzx edx byte ptr [edx] +
mov ecx eax +
mov [esp+0E8h+var_B4] eax +
and edx 3 +
cmp dl 2 +
jz loc_43D09B  +
mov eax [ebp+3Ch] +
add ecx [eax+1Ch] +
mov [esi] ecx +
mov [esp+0E8h+var_B4] ecx +
mov eax [esi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shr eax cl +
test eax eax +
jz loc_43D024  +
mov ecx [esp+0E8h+var_B0] +
cmp [esp+0E8h+var_A8] eax +
mov edx [ecx+0A0h] +
jbe loc_43D180  +
cmp dword ptr [edx+928h] 0 +
lea ecx ds:0[eax*4] +
mov [esp+0E8h+var_80] ecx +
jz loc_43D0E3  +
mov ecx [ebx+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jz loc_43D180  +
mov edx [esp+0E8h+var_90] +
lea eax [eax+eax*4] +
mov dword ptr [edx] 0 +
mov edx [esp+0E8h+var_A0] +
lea eax [edx+eax*4] +
mov edx [eax] +
mov [esp+0E8h+var_38] edx +
mov edx [eax+4] +
mov [esp+0E8h+var_34] edx +
mov ecx [eax+8] +
mov [esp+0E8h+var_30] ecx +
mov edx [eax+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov eax [eax+10h] +
mov edx [esp+0E8h+var_80] +
mov [esp+0E8h+var_28] eax +
mov eax [ebx+30h] +
mov eax [eax+edx] +
mov [esp+0E8h+var_78] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 3 +
jz loc_43D1E4  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_80] +
mov eax [eax+edx] +
cmp eax 0FFFFFFFFh +
jz loc_43D2A7  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_74] +
and edx [esi+4] +
or edx eax +
mov [esi+4] edx +
jmp loc_43D024  +
add [esp+0E8h+var_90] 4 +
xor edi edi +
jmp loc_43D04C  +
mov edx [edx+218h] +
sub eax [esp+0E8h+var_94] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_43D1AF  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_43D1A0  +
mov edx [eax+1Ch] +
test edx edx +
js loc_43D1D2  +
mov [esp+0E8h+var_E4] 281Ch +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
mov [esp+0E8h+var_80] eax +
call sub_402930  +
mov eax [esp+0E8h+var_80] +
mov ecx [esp+0E8h+var_90] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [ecx] eax +
jmp loc_43D024  +
cmp [esp+0E8h+var_78] offset off_473270 +
jz loc_43D622  +
mov eax [esp+0E8h+var_78] +
test eax eax +
jz loc_43D7E9  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_43D7E9  +
mov eax [esp+0E8h+var_78] +
mov edx [eax+3Ch] +
cmp edx offset off_473270 +
jz loc_43D602  +
mov eax [edx+88h] +
test eax eax +
jz loc_43D678  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_68] +
test edx edx +
jz loc_43D163  +
mov ecx [esp+0E8h+var_78] +
mov edx [ecx+38h] +
add [esi+8] edx +
jmp loc_43D163  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_43CAF4  +
cmp ax 200h +
jz loc_43CAF4  +
mov edx [esp+0E8h+var_90] +
test edx edx +
jnz loc_43D7A6  +
mov eax [esp+0E8h+var_80] +
test eax eax +
jz loc_43CAF4  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_E4] eax +
call sub_43C0E0  +
test eax eax +
jz loc_43CAF4  +
mov [esi] eax +
jmp loc_43CAF4  +
mov eax [ebx] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jz loc_43D80C  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_420AB0  +
test eax eax +
mov [esp+0E8h+var_58] eax +
jz loc_43C8F0  +
mov eax [esp+0E8h+var_78] +
mov edx [esp+0E8h+var_BC] +
mov ecx [eax+3Ch] +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_54] ecx +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43C8F0  +
mov eax [esp+0E8h+var_78] +
mov ecx [ebx] +
mov eax [eax+38h] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_4C] ecx +
mov [esp+0E8h+var_38] eax +
movzx edx byte ptr [ecx] +
and edx 3 +
cmp dl 2 +
jz loc_43D37F  +
mov ecx [esp+0E8h+var_54] +
add eax [ecx+1Ch] +
mov edx eax +
mov [esp+0E8h+var_38] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 6 +
jnz loc_43D37F  +
mov eax [esp+0E8h+var_4C] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43D875  +
sub edx [eax+1Ch] +
mov [esp+0E8h+var_38] edx +
mov eax [esp+0E8h+var_BC] +
mov edx [eax+7Ch] +
mov eax [esp+0E8h+var_78] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_54] edx +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_58] +
mov [esp+0E8h+var_E4] eax +
call sub_42FED0  +
test eax eax +
jz loc_43C8F0  +
cmp eax 1 +
jnz loc_43D859  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_54] +
mov ecx [esp+0E8h+var_80] +
mov [eax+ecx] edx +
mov eax edx +
jmp loc_43D15C  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+14h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_40] eax +
lea eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_40A080  +
test eax eax +
jz loc_43C8F0  +
mov eax [ebp+14h] +
jmp loc_43C618  +
mov eax [esp+0E8h+var_64] +
mov esi [eax+3Ch] +
test esi esi +
jz loc_43D436  +
mov ecx [esi+18h] +
test ecx ecx +
jnz loc_43D548  +
mov eax [esp+0E8h+var_64] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_43C620  +
mov edx [eax+18h] +
test edx edx +
jz loc_43C620  +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+0F0h] +
mov edi [esp+0E8h+var_5C] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_DC] edi +
call edx  +
test eax eax +
jnz loc_43C620  +
xor eax eax +
jmp loc_43C8F2  +
mov esi [esp+0E8h+var_C4] +
mov eax [ebx+8Ch] +
mov ecx [esi+30h] +
mov ecx [ecx+edi] +
mov ecx [ecx+3Ch] +
mov ecx [ecx+88h] +
mov [eax+20h] ecx +
mov eax edx +
jmp loc_43C5C1  +
mov eax [esp+0E8h+var_B0] +
mov ebp [esp+0E8h+var_A8] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
sub ebx ebp +
mov eax [eax+ebx*4] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
ja loc_43D4E7  +
mov eax [eax+14h] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
jbe loc_43D4D8  +
mov byte ptr [eax+0Ch] 3 +
mov [eax+18h] esi +
mov dword ptr [eax+14h] offset off_473270 +
jmp loc_43CAF4  +
mov eax [esi+18h] +
xor edx edx +
div  ebx +
imul eax [esp+0E8h+var_B4] +
lea ebx [eax+eax*2] +
shl ebx 2 +
jmp loc_43CFAE  +
mov eax [ebp+3Ch] +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_D4] ebx +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] eax +
call sub_4063D0  +
test eax eax +
jnz loc_43C6B0  +
jmp loc_43C8F0  +
mov edi [esp+0E8h+var_60] +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+0F0h] +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E0] esi +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edi +
mov edi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] edi +
call eax  +
test eax eax +
jz loc_43C8F0  +
mov ecx [esi+28h] +
xor eax eax +
test ecx ecx +
jz loc_43D58E  +
mov eax [esi+18h] +
xor edx edx +
div  ecx +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+174h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx eax +
add [esp+0E8h+var_7C] edx +
jmp loc_43D436  +
mov edi [ebp+4Ch] +
test edi edi +
jz loc_43C95A  +
xor eax eax +
jmp loc_43C8F2  +
and edi 3 +
jmp loc_43CF37  +
mov [esp+0E8h+var_E4] 2656h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402930  +
mov ecx [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_38] +
mov edx [ecx] +
mov ecx [esp+0E8h+var_3C] +
mov edx [edx+1Ch] +
mov [esp+0E8h+var_A4] ecx +
mov edx [edx+0C8h] +
jmp loc_43C915  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_43D622  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_43D622  +
mov eax [edx+1Ch] +
sub [esi+8] eax +
cmp edx offset off_473270 +
jnz loc_43D21F  +
xor eax eax +
jmp loc_43D234  +
lea esi [esp+0E8h+var_38] +
mov ebx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] offset a08lx_2 +
mov [esp+0E8h+var_E8] esi +
call sprintf  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] offset aErrorBContains +
mov [esp+0E8h+var_E4] eax +
call off_4730E4  +
mov [esp+0E8h+var_E8] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_43C8F2  +
mov eax [edx+1Ch] +
add [esi+8] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_41BFC0  +
mov edx [eax+1Ch] +
sub [esi+8] edx +
mov eax [eax+88h] +
jmp loc_43D22D  +
mov eax [ecx] +
mov esi [esp+0E8h+var_C4] +
mov [esp+0E8h+var_38] eax +
mov eax [ecx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ecx+8] +
mov [esp+0E8h+var_30] eax +
mov edx [ecx+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov edx [ecx+10h] +
mov ecx [esp+0E8h+var_AC] +
mov [esp+0E8h+var_28] edx +
mov edx [esi+30h] +
mov edx [edx+edi] +
mov esi [edx+3Ch] +
mov edx [ecx+64h] +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] ecx +
call sub_420AB0  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_43C8F0  +
mov [esp+0E8h+var_E4] esi +
mov esi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] esi +
call sub_424C30  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43C8F0  +
mov eax [ebp+38h] +
add [esp+0E8h+var_38] eax +
lea eax [esp+0E8h+var_38] +
mov esi [esi+7Ch] +
mov edx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_42FED0  +
test eax eax +
jz loc_43C8F0  +
cmp eax 1 +
jnz loc_43D8A0  +
mov eax [esp+0E8h+var_C4] +
add edi [eax+2Ch] +
mov eax [ebp+14h] +
mov [edi] esi +
jmp loc_43C87C  +
mov ebp ebx +
jmp loc_43C6B0  +
mov dword ptr [eax+10h] 0FFFFFFF1h +
mov [eax] esi +
jmp loc_43CAF4  +
mov eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] eax +
jmp loc_43CFB6  +
mov eax [esp+0E8h+var_C4] +
mov edx [ebx+94h] +
mov ecx [esp+0E8h+var_B0] +
mov eax [eax] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+0E8h+var_D4] edx +
mov edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] offset aXSReferencedIn +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] ecx +
call eax  +
jmp loc_43D27A  +
mov [esp+0E8h+var_E8] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_43C8F2  +
mov [esp+0E8h+var_5C] 0 +
jmp loc_43D427  +
mov [esp+0E8h+var_E8] 5 +
call sub_4029E0  +
xor eax eax +
jmp loc_43C8F2  +
mov eax [esp+0E8h+var_50] +
mov edx [eax+50h] +
mov eax [eax+58h] +
lea eax [eax+edx*4] +
mov edx eax +
mov [esp+0E8h+var_90] eax +
mov eax [esp+0E8h+var_B8] +
mov [esp+0E8h+var_5C] edx +
movzx eax byte ptr [eax+1ACh] +
shr al 6 +
and eax 1 +
mov [esp+0E8h+var_68] eax +
jmp loc_43D056  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 2893h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402960  +
mov [esp+0E8h+var_E4] 2884h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402930  +
mov eax [ebx] +
mov edx [esp+0E8h+var_38] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
jmp loc_43D375  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 26B6h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_402960  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C0] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_43D900  +
xor ebx ebx +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
test dl 1 +
jnz loc_43E309  +
mov ecx [eax+30h] +
and edx 3 +
mov eax [eax+38h] +
cmp dl 2 +
mov [esp+1F4h+var_1C4] 1 +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_198] eax +
jz loc_43D945  +
mov eax [esp+1F4h+var_E0] +
movsx eax byte ptr [eax+2] +
mov [esp+1F4h+var_1C4] eax +
shr [esp+1F4h+var_1C4] 1Fh +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_140] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_13C] eax +
call sub_44ADF0  +
test eax eax +
mov [esp+1F4h+var_138] eax +
jz loc_43D8EE  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jnz loc_43E4BA  +
mov [esp+1F4h+var_134] 0 +
mov [esp+1F4h+var_130] 0 +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_12C] 0 +
mov [esp+1F4h+var_128] 0 +
mov [esp+1F4h+var_124] 0 +
mov eax [eax+4] +
mov [esp+1F4h+var_120] 0 +
mov [esp+1F4h+var_11C] 0 +
mov [esp+1F4h+var_118] 0 +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_114] 0 +
mov [esp+1F4h+var_110] 0 +
mov [esp+1F4h+var_10C] 0 +
mov ebp [eax+188h] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_108] 0 +
mov [esp+1F4h+var_1BC] 0 +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_43F07F  +
mov [esp+1F4h+var_1A4] 0 +
lea esi [esi+0] +
test ebp ebp +
mov esi [ebx] +
jz loc_43DA56  +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] esi +
call strcmp  +
test eax eax +
jz loc_43DA64  +
mov edi offset a_gnu_attribute +
mov ecx 10h +
cmps   +
jnz loc_43DAAE  +
mov eax [ebx+0A0h] +
test eax eax +
jnz loc_43DA76  +
jmp loc_43DA8C  +
mov eax [eax] +
test eax eax +
jz loc_43DA8C  +
cmp dword ptr [eax+4] 1 +
jnz loc_43DA70  +
mov edx [eax+10h] +
mov eax [eax] +
and dword ptr [edx+14h] 0FFFFFEFFh +
test eax eax +
jnz loc_43DA76  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B700  +
test eax eax +
mov [esp+1F4h+var_1BC] eax +
jnz loc_43E170  +
or dword ptr [ebx+14h] 8000h +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43DA40  +
mov eax [esp+1F4h+var_E4] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_43F07B  +
mov [esp+1F4h+var_1CC] 0 +
mov edi ebp +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1D4] 0 +
lea esi [esi+0] +
mov esi [edi+0A0h] +
mov ebp [edi+8Ch] +
mov dword ptr [edi+4Ch] 0 +
test esi esi +
jnz loc_43DB32  +
jmp loc_43E160  +
cmp eax 1 +
jz loc_43DF98  +
mov esi [esi] +
test esi esi +
lea esi [esi+0] +
jz loc_43DB59  +
mov eax [esi+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_43DB20  +
add dword ptr [edi+4Ch] 1 +
mov ecx 1 +
test byte ptr [edi+19h] 4 +
jz loc_43DF90  +
mov esi [esi] +
add [ebp+50h] ecx +
test esi esi +
jnz loc_43DB32  +
mov edx [edi+4Ch] +
test edx edx +
jz loc_43E160  +
mov eax [edi+14h] +
or eax 4 +
mov [edi+14h] eax +
test al 1 +
jnz loc_43DB7E  +
test byte ptr [edi+18h] 1 +
jnz loc_43DB7E  +
mov dword ptr [edi+1Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_43DB00  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43DBA6  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_43E326  +
mov eax [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_E4] +
movzx edx byte ptr [eax+1] +
mov eax 1 +
and edx 18h +
cmp dl 18h +
cmovz eax [esp+1F4h+var_1C4] +
test byte ptr [edi+2Bh] 10h +
mov [edi+7Ch] eax +
jnz loc_43E4F1  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_424D00  +
test eax eax +
jz loc_43E2DC  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+64h] +
test esi esi +
jz loc_43DCAA  +
mov edi [esp+1F4h+var_E4] +
jmp loc_43DC1D  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_43DCAA  +
test byte ptr [esi+14h] 4 +
mov ebx [esi+8Ch] +
jz loc_43DC5B  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_43DC42  +
lea edx [ebx+3Ch] +
mov eax edi +
call sub_4312F0  +
test eax eax +
jz loc_43E2DC  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_43DC5B  +
lea edx [ebx+4Ch] +
mov eax edi +
call sub_4312F0  +
test eax eax +
jz loc_43E2DC  +
mov edx [ebx+10h] +
and edx [ebx+14h] +
mov dword ptr [ebx+40h] 0 +
mov dword ptr [ebx+50h] 0 +
cmp edx 0FFFFFFFFh +
jnz loc_43DC12  +
test byte ptr [esi+17h] 8 +
mov eax [ebx+30h] +
jz loc_43F136  +
test eax eax +
jnz loc_43F136  +
mov eax [ebx+18h] +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
test eax eax +
jz loc_43E2DC  +
mov esi [esi+0Ch] +
mov [ebx+30h] eax +
test esi esi +
jnz loc_43DC1D  +
mov eax [esp+1F4h+var_E4] +
mov dword ptr [eax+7Ch] 0 +
mov eax [eax+0A0h] +
mov edi eax +
mov dword ptr [eax+4Ch] 2 +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+5] +
mov [edi+70h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
cmp [esp+1F4h+var_1B8] 13h +
mov [edi+6Ch] eax +
ja loc_43E511  +
mov eax 230h +
mov [esp+1F4h+var_1B8] 14h +
mov ecx [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_1B8] +
mov ebx [ecx+1Ch] +
mov [ebx+58h] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
mov [ebx+5Ch] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_43E2DC  +
mov eax [esp+1F4h+var_E4] +
mov edx [eax+0A0h] +
cmp dword ptr [edx+214h] 0FF01h +
sbb eax eax +
not eax  +
mov [esp+1F4h+var_10C] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_43E350  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jnz loc_43E350  +
mov eax [esp+1F4h+var_1D4] +
test eax eax +
jnz loc_43E9C7  +
mov ebp [esp+1F4h+var_1A8] +
test ebp ebp +
jnz loc_43E9A7  +
mov edi [esp+1F4h+var_1AC] +
test edi edi +
jnz loc_43E972  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
imul eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
test eax eax +
mov [esp+1F4h+var_120] eax +
jz loc_43E2DC  +
mov eax [esp+1F4h+var_1B8] +
lea ebx ds:0[eax*4] +
add eax ebx +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
test eax eax +
mov [esp+1F4h+var_118] eax +
jz loc_43E2DC  +
mov [esp+1F4h+var_1F4] ebx +
call sub_407460  +
test eax eax +
mov [esp+1F4h+var_114] eax +
jz loc_43E2DC  +
mov [esp+1F4h+var_1F4] ebx +
call sub_407460  +
test eax eax +
mov [esp+1F4h+var_110] eax +
jz loc_43E2DC  +
mov esi [esp+1F4h+var_1B0] +
test esi esi +
jnz loc_43E9E7  +
mov eax [esp+1F4h+var_E0] +
xor edx edx +
mov esi [eax+1Ch] +
mov ebx [esi+0C8h] +
test ebx ebx +
mov eax ebx +
jnz loc_43DE66  +
jmp loc_43DE9A  +
mov edx [eax+24h] +
test edx edx +
jnz loc_43DE5C  +
and ch 1 +
jnz loc_43DE5C  +
mov ecx [eax+0A4h] +
test ecx ecx +
jz loc_43DE5C  +
mov edx [ecx+0Ch] +
add edx [ecx+8] +
add edx [eax+1Ch] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_43DE6E  +
mov ecx [eax+14h] +
test ch 4 +
jnz loc_43DE40  +
mov eax [esp+1F4h+var_1C0] +
mov edi [ebx+1Ch] +
cmp dword ptr [eax+1A4h] 1 +
jnz loc_43DE90  +
mov ecx [ebx+40h] +
mov eax 1 +
shl eax cl +
lea edx [edx+eax-1] +
neg eax  +
and edx eax +
mov eax edx +
sub eax edi +
mov [esi+0CCh] eax +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_43E639  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_43E626  +
xor ecx ecx +
xor esi esi +
mov [esp+1F4h+var_1B8] 0 +
xor edi edi +
mov [esp+1F4h+var_1CC] ecx +
jmp loc_43DF01  +
add esi 1 +
test edi edi +
jnz loc_43DF28  +
mov ebx [ebx] +
test ebx ebx +
jz loc_43E590  +
cmp dword ptr [ebx+4] 1 +
jnz loc_43DEF0  +
mov ebp [ebx+10h] +
mov edx [ebp+94h] +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43E51B  +
add esi 1 +
test edi edi +
mov [esp+1F4h+var_1CC] ebp +
jz loc_43DEF7  +
test esi esi +
jz loc_43DEF7  +
mov ebx [esp+1F4h+var_1B8] +
mov ecx [esp+1F4h+var_1CC] +
test ebx ebx +
jz loc_43E8B9  +
test ecx ecx +
jz loc_43E8B9  +
mov edi [esp+1F4h+var_1B8] +
mov edx [ecx+94h] +
mov eax [edi+94h] +
mov [esp+1F4h+var_1E0] edx +
mov [esp+1F4h+var_1E4] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrdere +
mov [esp+1F4h+var_1F0] eax +
call off_4730E4  +
mov [esp+1F4h+var_1F4] 11h +
call sub_4029E0  +
jmp loc_43D8EE  +
add [ebp+40h] ecx +
jmp loc_43DB29  +
mov ebx [esi+10h] +
or byte ptr [ebx+18h] 2 +
test byte ptr [ebx+16h] 80h +
cmovz eax [esp+1F4h+var_1CC] +
mov ecx [ebx+8Ch] +
mov [esp+1F4h+var_1CC] eax +
mov eax [ebp+4] +
mov [esp+1F4h+var_1C8] ecx +
cmp eax 4 +
jz loc_43E073  +
cmp eax 9 +
jz loc_43E073  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_43E135  +
mov ecx [ebx+4Ch] +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
cmp edx eax +
cmovnb eax edx +
mov edx [esp+1F4h+var_1D4] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_43E080  +
test ecx ecx +
jz loc_43DB29  +
mov eax [esi+4] +
add [edi+4Ch] ecx +
cmp eax 1 +
jnz loc_43DB46  +
mov ebx [esp+1F4h+var_1C4] +
test ebx ebx +
jz loc_43DB46  +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+3Ch] +
test edx edx +
jz loc_43E047  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+40h] +
test ecx ecx +
jz loc_43E042  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+40h] eax +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_43DB29  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+50h] +
test ecx ecx +
jz loc_43E069  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+50h] eax +
jmp loc_43DB29  +
xor ecx ecx +
jmp loc_43DFDA  +
test byte ptr [eax+29h] 8 +
jnz loc_43E001  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1B4] eax +
mov eax [eax+928h] +
test eax eax +
jz loc_43E1B0  +
mov eax [esp+1F4h+var_1C0] +
xor edx edx +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp+1F4h+var_1A0] eax +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+60h] +
div  [esp+1F4h+var_1A0] +
mov edx [esp+1F4h+var_1B8] +
cmp edx eax +
cmovb edx eax +
cmp eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B8] edx +
jbe loc_43E0E9  +
mov edx [esp+1F4h+var_1B4] +
mov edx [edx+208h] +
test edx edx +
cmovz eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B0] eax +
test byte ptr [ebx+14h] 4 +
jz loc_43E001  +
mov eax [esp+1F4h+var_1C8] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_43E50A  +
mov eax [eax+18h] +
mov edx [esp+1F4h+var_1C8] +
mov edx [edx+4Ch] +
test edx edx +
jz loc_43E113  +
add eax [edx+18h] +
mov edx [esp+1F4h+var_1A8] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1A8] eax +
mov eax [ebx+4Ch] +
mov ebx [esp+1F4h+var_1AC] +
cmp ebx eax +
cmovnb eax ebx +
mov [esp+1F4h+var_1AC] eax +
jmp loc_43E001  +
mov eax [esp+1F4h+var_1C0] +
xor ecx ecx +
mov eax [eax+0F4h] +
test eax eax +
jz loc_43DFDA  +
mov ecx [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
mov ecx eax +
jmp loc_43DFDA  +
mov eax [edi+14h] +
and eax 0FFFFFFFBh +
mov [edi+14h] eax +
jmp loc_43DB6D  +
mov eax [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_406390  +
mov dword ptr [ebx+0A0h] 0 +
mov [esp+1F4h+var_1A4] ebx +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43DA40  +
jmp loc_43DAB5  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+68h] +
jmp loc_43E0C1  +
mov [esp+1F4h+var_1F4] edi +
call sub_417B60  +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_1C8] eax +
call sub_4075F0  +
mov edx eax +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jz loc_43E1E2  +
test edx edx +
jz loc_43E2DC  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] eax +
call sub_4184C0  +
mov edx [esp+1F4h+var_1AC] +
test eax eax +
jz loc_43E28A  +
cmp eax 1 +
jnz loc_43EFAF  +
cmp dword ptr [ebp+4] 3 +
mov eax [ebp+10h] +
jz loc_43F071  +
mov ecx [eax+4] +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1A8] edx +
mov edx [edi+20h] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1D8] 0 +
mov [esp+1F4h+var_1DC] 0 +
mov [esp+1F4h+var_1AC] eax +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1E4] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1AC] +
call eax  +
mov edx [esp+1F4h+var_1A8] +
test eax eax +
jz loc_43F11E  +
mov eax [esp+1F4h+var_1C8] +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1E0] eax +
mov eax [ebp+8] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4063D0  +
mov edx [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1C8] eax +
call free  +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jnz loc_43E7F1  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov eax [esp+1F4h+var_E4] +
xor ebx ebx +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_4314A0  +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E4] +
or dword ptr [ecx+28h] 800h +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
jmp loc_43D913  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_431590 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_419B50  +
jmp loc_43DBA6  +
mov eax [edx+934h] +
lea esi [esp+1F4h+var_178] +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_1B4] +
add eax 48h +
mov [esp+1F4h+var_1F4] eax +
call sub_423FA0  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] offset off_4731C8 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 0 +
mov [esp+1F4h+var_16B] 0 +
mov [esp+1F4h+var_168] 0 +
mov [esp+1F4h+var_16A] 0 +
mov [esp+1F4h+var_1CC] eax +
call sub_42FED0  +
cmp eax 1 +
jnz loc_43E2E7  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 3 +
mov [esp+1F4h+var_16B] 0 +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_16A] 0 +
cmp dword ptr [eax+214h] 1 +
jbe loc_43DD77  +
mov edi [esp+1F4h+var_E4] +
mov ebx 1 +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] edi +
call sub_423710  +
test eax eax +
jz loc_43E4A4  +
mov ecx [edi+7Ch] +
mov [esp+1F4h+var_168] ebx +
mov [eax+88h] ecx +
mov ecx [esp+1F4h+var_E0] +
movzx ecx byte ptr [ecx] +
and ecx 3 +
cmp cl 2 +
jz loc_43E47B  +
mov ecx [eax+1Ch] +
mov [esp+1F4h+var_178] ecx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call sub_42FED0  +
cmp eax 1 +
jnz loc_43E2E7  +
mov eax [edi+0A0h] +
add ebx 1 +
cmp [eax+214h] ebx +
ja loc_43E442  +
jmp loc_43DD77  +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_hash +
mov [esp+1F4h+var_1F4] edi +
call sub_405DA0  +
mov [esp+1F4h+var_1F0] offset a_gnu_version +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_134] eax +
call sub_405DA0  +
mov [esp+1F4h+var_130] eax +
jmp loc_43D997  +
mov [esp+1F4h+var_1F0] 2B5Fh +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_402930  +
jmp loc_43DBD5  +
xor eax eax +
jmp loc_43E105  +
imul eax [esp+1F4h+var_1B8] +
jmp loc_43DD02  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [edx+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_43DF1D  +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1B0] edx +
call sub_424C30  +
mov edx [esp+1F4h+var_1B0] +
test eax eax +
jz loc_43DF1D  +
mov edx [edx+0A0h] +
mov ecx [edx+214h] +
cmp eax ecx +
jnb loc_43DF1D  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
test byte ptr [eax+8] 80h +
jz loc_43DF1D  +
cmp ecx [eax+1Ch] +
jbe loc_43DF1D  +
add edi 1 +
mov [esp+1F4h+var_1B8] ebp +
jmp loc_43DEF3  +
test edi edi +
jz loc_43E626  +
shl edi 2 +
mov [esp+1F4h+var_1F4] edi +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_43D8EE  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0A0h] +
test eax eax +
jz loc_43EFCB  +
nop   +
add ebx 1 +
mov [ebp+ebx*4-4] eax +
mov eax [eax] +
test eax eax +
jnz loc_43E5C0  +
mov [esp+1F4h+var_1E8] offset sub_4300D0 +
xor edi edi +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
mov edx ebp +
lea eax [ebp+ebx*4+0] +
mov [esp+1F4h+var_1CC] ebp +
mov ebx [edx] +
mov ebp 0FFFFFFFFh +
add edx 4 +
mov esi [ebx+10h] +
mov ecx [esi+40h] +
shl ebp cl +
mov ecx ebp +
and ecx edi +
mov [esi+38h] ecx +
mov [ebx+8] ecx +
add ecx [ebx+0Ch] +
cmp edx eax +
mov edi ecx +
jnz loc_43E5F5  +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_43DEB0  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
call sub_445690  +
test eax eax +
jz loc_43D8EE  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+34h] +
test eax eax +
jz loc_43E66C  +
and byte ptr [eax+2Bh] 0EFh +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_43E65E  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov esi edi +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_43EA53  +
mov eax [esp+1F4h+var_1D4] +
mov edi [eax+0A0h] +
test edi edi +
jz loc_43EA40  +
mov ebp edi +
jmp loc_43E6E5  +
sub eax 3 +
cmp eax 1 +
jbe loc_43E740  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_41B6C0  +
test eax eax +
jz loc_43EFF0  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_43EA40  +
mov eax [ebp+4] +
cmp eax 1 +
jnz loc_43E6A0  +
mov eax [ebp+10h] +
mov esi [eax+94h] +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43E6AC  +
mov eax [esp+1F4h+var_1C0] +
mov edx [esi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jnz loc_43E6AC  +
test byte ptr [esi+2Bh] 10h +
jnz loc_43E6DA  +
lea eax [esp+1F4h+var_140] +
mov edx esi +
mov [esp+1F4h+var_1CC] eax +
call sub_43C180  +
test eax eax +
jz loc_43E2E7  +
or byte ptr [esi+2Bh] 10h +
jmp loc_43E6DA  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+8Ch] +
mov eax [ebp+10h] +
mov eax [eax] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_418A00  +
test eax eax +
mov edi eax +
jz loc_43EF93  +
mov eax [ebp+10h] +
mov ecx [eax+8] +
mov [esp+1F4h+var_1CC] ecx +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_43E95F  +
add ebx 3Ch +
mov edx [ebx+4] +
mov ecx [ebx+0Ch] +
cmp dword ptr [ebp+4] 3 +
lea ecx [ecx+edx*4] +
mov [esp+1F4h+var_1C8] ecx +
mov eax [eax+4] +
jnz loc_43E8D3  +
mov eax [eax+88h] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jnz loc_43E7D4  +
mov [esp+1F4h+var_1F0] 2932h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_402930  +
mov eax [esp+1F4h+var_1C8] +
mov dword ptr [eax] 0 +
mov eax [edi+24h] +
test eax eax +
jz loc_43E7F1  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_43E1BC  +
mov eax [ebp+8] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43E814  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+1Ch] +
add [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1B0] +
mov ecx [eax+174h] +
movzx edx byte ptr [ecx+9] +
test dl dl +
jz loc_43E85B  +
lea edx [edx+edx*2] +
lea eax [esp+1F4h+var_164] +
lea edx [esp+edx*4+1F4h+var_164] +
mov [esp+1F4h+var_1B0] ecx +
mov ecx [esp+1F4h+var_1C8] +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] ecx +
cmp eax edx +
jnz loc_43E83B  +
mov ecx [esp+1F4h+var_1B0] +
cmp byte ptr [ecx+0Ah] 20h +
jz loc_43E947  +
mov eax [edi] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx] +
cmp dword ptr [eax+4] 9 +
mov edx [eax+30h] +
jz loc_43E93B  +
mov eax [esp+1F4h+var_1CC] +
mov edi [ecx+44h] +
mov [esp+1F4h+var_15C] eax +
movzx eax byte ptr [ecx+4] +
imul eax [ebx+4] +
add eax edx +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edi  +
add dword ptr [ebx+4] 1 +
jmp loc_43E6DA  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrde_0 +
mov [esp+1F4h+var_1F0] eax +
call off_4730E4  +
jmp loc_43DF79  +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 1 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_419430  +
test eax eax +
jz loc_43F0CE  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_43EA10  +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [esp+1F4h+var_1B8] 0 +
mov [ecx] eax +
jmp loc_43E7DE  +
mov edi [ecx+3Ch] +
movzx eax byte ptr [ecx+3] +
jmp loc_43E88F  +
mov edx [esp+1F4h+var_1B8] +
movzx eax byte ptr [edi] +
shl edx 8 +
add eax edx +
mov [esp+1F4h+var_160] eax +
jmp loc_43E86E  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_43F0B0  +
add ebx 4Ch +
jmp loc_43E798  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
test eax eax +
mov [esp+1F4h+var_124] eax +
jnz loc_43DD9B  +
jmp loc_43E2DC  +
mov eax [esp+1F4h+var_1A8] +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
test eax eax +
mov [esp+1F4h+var_128] eax +
jnz loc_43DD8F  +
jmp loc_43E2DC  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
test eax eax +
mov [esp+1F4h+var_12C] eax +
jnz loc_43DD83  +
jmp loc_43E2DC  +
mov eax [esp+1F4h+var_1B0] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
test eax eax +
mov [esp+1F4h+var_11C] eax +
jnz loc_43DE26  +
jmp loc_43E2DC  +
mov eax [eax+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+88h] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [ecx] 0 +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
mov ecx [edx+1Ch] +
add [esp+1F4h+var_1CC] ecx +
add [esp+1F4h+var_1CC] eax +
jmp loc_43E7DE  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_43E686  +
mov eax [esp+1F4h+var_E0] +
cmp byte ptr [eax+3] 0 +
js loc_43EA85  +
mov eax [esp+1F4h+var_E0] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_43EA85  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43F152  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jnz loc_43EA6E  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] offset loc_4305D0 +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_184] 1 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_180] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_408FD0  +
mov eax [esp+1F4h+var_188] +
test eax eax +
jnz loc_43D8EE  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D0h] +
test edx edx +
jz loc_43EB31  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_43EB02  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_43EB31  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_42FED0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_43D8EE  +
mov eax [esp+1F4h+var_E4] +
mov edi [esp+1F4h+var_1B4] +
mov eax [eax+7Ch] +
mov [edi+68h] eax +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_440084  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
test eax eax +
jz loc_43ED72  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jz loc_43ED72  +
mov eax [eax+6Ch] +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax] 1 +
jnz loc_43EB91  +
mov ebp [ecx+34h] +
test ebp ebp +
jz loc_440093  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_160] 0 +
mov [esp+1F4h+var_15C] 0 +
mov [esp+1F4h+var_158] 3 +
mov ebp [eax+64h] +
mov [esp+1F4h+var_157] 0 +
mov [esp+1F4h+var_156] 0 +
test ebp ebp +
jz loc_43EC73  +
mov eax [ebp+8Ch] +
mov ebx [eax+60h] +
test ebx ebx +
jle loc_43EC5E  +
mov esi [eax+5Ch] +
test esi esi +
jg loc_43EBFB  +
mov [esp+1F4h+var_1F0] 2CD3h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_402930  +
mov [esp+1F4h+var_154] esi +
sub esi 0FF00h +
cmp esi 0FFFEFFFFh +
jbe loc_43F183  +
mov eax [ebp+1Ch] +
cmp edi ebx +
cmovl edi ebx +
mov [esp+1F4h+var_164] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
mov edx [eax+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx eax byte ptr [eax+5] +
imul eax ebx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_43EBD3  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov esi [ecx+0C0h] +
test esi esi +
jz loc_43ED5D  +
lea ebp [esp+1F4h+var_164] +
mov eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov eax [esi+14h] +
mov [esp+1F4h+var_160] eax +
mov eax [esi+18h] +
mov [esp+1F4h+var_15C] eax +
mov eax [esi+1Ch] +
mov dword ptr [esp+1F4h+var_158] eax +
mov eax [esi+20h] +
and [esp+1F4h+var_157] 0FCh +
mov [esp+1F4h+var_154] eax +
mov edx [esi+20h] +
mov eax [esi+4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_423710  +
test eax eax +
mov ebx eax +
jz loc_43ED0D  +
mov edx [eax+3Ch] +
mov eax [edx+8Ch] +
mov eax [eax+5Ch] +
mov [esp+1F4h+var_154] eax +
sub eax 0FF00h +
cmp eax 0FFFEFFFFh +
jbe loc_44009A  +
mov eax [ebx+38h] +
add eax [edx+1Ch] +
add eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov ecx [esp+1F4h+var_1C0] +
mov eax [esi+0Ch] +
mov edx [ecx+174h] +
cmp edi eax +
cmovl edi eax +
mov ecx [edx+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx edx byte ptr [edx+5] +
mov [esp+1F4h+var_1F0] ebp +
imul eax edx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call ecx  +
mov esi [esi] +
test esi esi +
jnz loc_43EC88  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
lea edx [edi+1] +
mov eax [eax+3Ch] +
mov eax [eax+8Ch] +
mov [eax+20h] edx +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] offset loc_4305D0 +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov [esp+1F4h+var_184] 0 +
call sub_408FD0  +
mov edi [esp+1F4h+var_188] +
test edi edi +
jnz loc_43D8EE  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D4h] +
test edx edx +
jz loc_43EE05  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_43EDD6  +
mov esi [esp+1F4h+var_1C4] +
test esi esi +
jz loc_43EE05  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_42FED0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_43D8EE  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B2E0  +
mov eax [esp+1F4h+var_140] +
mov edi [eax+1Ch] +
mov edx [edi+54h] +
test edx edx +
jz loc_43F1D8  +
mov eax [esp+1F4h+var_13C] +
mov ecx [eax+0A0h] +
mov ebx [ecx+90Ch] +
test ebx ebx +
jnz loc_43EE5E  +
mov [esp+1F4h+var_1F0] 2257h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_402930  +
mov eax [esp+1F4h+var_13C] +
mov edx [edi+54h] +
mov eax [eax+4] +
mov esi [eax+1B0h] +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
imul eax edx +
mov [esp+1F4h+var_1F4] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_43D8EE  +
mov ecx [esp+1F4h+var_10C] +
test ecx ecx +
jz loc_43EEB5  +
mov eax [esp+1F4h+var_13C] +
mov eax [eax+7Ch] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_4075F0  +
test eax eax +
mov [esp+1F4h+var_10C] eax +
jz loc_4400D1  +
mov edx [edi+54h] +
mov [esp+1F4h+var_1D4] 0 +
test edx edx +
jz loc_43EF2D  +
imul ebx [esp+1F4h+var_1D4] +
add ebx [edi+5Ch] +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jnz loc_4400B6  +
mov dword ptr [ebx+8] 0 +
mov eax [esi+174h] +
mov edx [esp+1F4h+var_10C] +
mov ecx [eax+24h] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [ebx+18h] +
lea edx [edx+ecx*4] +
mov [esp+1F4h+var_1E8] edx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
mov [esp+1F4h+var_1F0] ebx +
add eax ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1C8] +
call eax  +
mov edx [edi+54h] +
add [esp+1F4h+var_1D4] 1 +
cmp [esp+1F4h+var_1D4] edx +
jb loc_43EEC4  +
mov eax [esi+174h] +
mov esi edx +
xor edx edx +
mov ecx [esp+1F4h+var_13C] +
movzx eax byte ptr [eax+5] +
mov ebx [ecx+0A0h] +
mov [esp+1F4h+var_1E8] 0 +
imul esi eax +
mov eax [ebx+60h] +
add eax [ebx+58h] +
adc edx [ebx+5Ch] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_4086D0  +
test eax eax +
jz loc_43F19C  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
jmp loc_43D8EE  +
mov [esp+1F4h+var_1F4] 11h +
call sub_4029E0  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_43E2E7  +
mov [esp+1F4h+var_1EC] offset aElf_reloc_link +
mov [esp+1F4h+var_1F0] 2974h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_402960  +
mov [esp+1F4h+var_1E8] offset sub_4300D0 +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
jmp loc_43E61E  +
cmp dword ptr [ebp+4] 1 +
mov edi esi +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jnz loc_43E2E7  +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43E2E7  +
mov eax [esp+1F4h+var_1C0] +
mov edx [edi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jz loc_43E2E7  +
mov edx offset aElfclass32 +
mov ecx offset aElfclass64 +
cmp al 2 +
mov ebx ecx +
mov esi edx +
cmovnz ebx edx +
cmovnz esi ecx +
mov [esp+1F4h+var_1F4] 3 +
call sub_4029E0  +
mov [esp+1F4h+var_1E8] ebx +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov [esp+1F4h+var_1F4] offset aBFileClassSInc +
call off_4730E4  +
jmp loc_43E2E7  +
mov eax [eax+4] +
mov ecx [eax] +
jmp loc_43E226  +
mov ebx [esp+1F4h+var_1A4] +
mov [esp+1F4h+var_1A4] ebx +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1D4] 0 +
jmp loc_43DBA6  +
mov [esp+1F4h+var_1F0] 292Ah +
xor ebx ebx +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_402930  +
mov eax [ebp+10h] +
jmp loc_43E798  +
mov eax [esp+1F4h+var_E0] +
mov edx [ebp+10h] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
test eax eax +
jz loc_43E2DC  +
mov [esp+1F4h+var_1B8] 0 +
jmp loc_43E7DE  +
mov [esp+1F4h+var_1F4] edx +
call free  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_43E2E7  +
mov [esp+1F4h+var_1EC] offset aBfd_elf_final_ +
mov [esp+1F4h+var_1F0] 2B7Eh +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_402960  +
mov eax [ebx+0A0h] +
mov eax [eax+24Ch] +
test eax eax +
jz loc_43EA7B  +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+24Ch] 0 +
jmp loc_43EA7B  +
mov eax [esp+1F4h+var_E4] +
call sub_42FE90  +
test eax eax +
jnz loc_43EC14  +
jmp loc_43D8EE  +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] ebp +
mov [esp+1F4h+var_1EC] eax +
call sub_408570  +
cmp esi eax +
jnz loc_43EF74  +
add [ebx+60h] esi +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+7Ch] +
test eax eax +
jnz loc_43FD20  +
mov eax [esp+1F4h+var_E4] +
mov edi [eax+64h] +
test edi edi +
jz loc_43F274  +
test byte ptr [edi+14h] 4 +
mov ebx [edi+8Ch] +
jz loc_43F26D  +
mov eax [esp+1F4h+var_1C0] +
mov esi 1 +
mov eax [eax+0F8h] +
test eax eax +
jz loc_43F226  +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov esi eax +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_43F246  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+3Ch] +
mov ecx esi +
call sub_471C3E  +
test eax eax +
jz loc_43D8EE  +
mov ebp [ebx+4Ch] +
test ebp ebp +
jz loc_43F266  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+4Ch] +
mov ecx esi +
call sub_471C3E  +
test eax eax +
jz loc_43D8EE  +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_43F1F8  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_43F4AB  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+4] 2 +
jz loc_43F375  +
mov esi [esp+1F4h+var_198] +
test esi esi +
jz loc_43F375  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov [esp+1F4h+var_1F0] offset a_rela_dyn +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_405CC0  +
mov [esp+1F4h+var_1F0] offset a_rel_dyn +
mov ebx eax +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_405CC0  +
test ebx ebx +
mov edi eax +
jz loc_43FB6B  +
mov eax [ebx+24h] +
test eax eax +
mov [esp+1F4h+var_1AC] eax +
jz loc_43FB6B  +
test edi edi +
jz loc_43FB52  +
mov eax [edi+24h] +
test eax eax +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
jnz loc_43F6A3  +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+4] +
mov ecx [esp+1F4h+var_1AC] +
mov edi [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+40h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+44h] +
mov [esp+1F4h+var_1A8] eax +
test ebx ebx +
jz loc_43F375  +
xor edx edx +
cmp dword ptr [ebx+4] 1 +
jnz loc_43F367  +
mov eax [ebx+10h] +
add edx [eax+24h] +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43F35B  +
cmp edx ecx +
jz loc_43F6E7  +
xor edi edi +
xor ebp ebp +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_405DA0  +
test eax eax +
mov ebx eax +
jnz loc_43F3A7  +
mov [esp+1F4h+var_1F0] 2D73h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_402930  +
mov esi [ebx+6Ch] +
mov eax [ebx+24h] +
add eax esi +
cmp esi eax +
mov [esp+1F4h+var_1C4] eax +
jnb loc_43F4AB  +
mov eax [esp+1F4h+var_1C0] +
lea ecx [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] ecx +
mov [esp+1F4h+var_1B4] edi +
mov edx [eax+174h] +
mov ebx eax +
mov edi [esp+1F4h+var_1D4] +
mov eax [edx+30h] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov eax [esp+1F4h+var_164] +
cmp eax 12h +
jbe loc_43FAC8  +
cmp eax 20h +
jz loc_43FABE  +
jbe loc_43F9E3  +
cmp eax 6FFFFFF0h +
jz loc_43F9D9  +
ja loc_43F984  +
cmp eax 21h +
jz loc_43F910  +
cmp eax 6FFFFEF5h +
mov edx offset a_gnu_hash +
jnz loc_43F99B  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1C8] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_405CC0  +
mov edx [esp+1F4h+var_1C8] +
test eax eax +
jz loc_43F9B8  +
mov ecx [eax+3Ch] +
mov ecx [ecx+8Ch] +
cmp dword ptr [ecx+4] 7 +
jz loc_43F7F8  +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
mov edi [esp+1F4h+var_1D4] +
mov eax [eax+34h] +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov edx [ebx+174h] +
movzx eax byte ptr [edx+6] +
add esi eax +
cmp [esp+1F4h+var_1C4] esi +
ja loc_43F3D6  +
mov edi [esp+1F4h+var_198] +
test edi edi +
jz loc_43F597  +
mov edi [esp+1F4h+var_E0] +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+9Ch] +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
jz loc_43E2E7  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+3] +
test al 8 +
jz loc_43F4FB  +
mov edi [esp+1F4h+var_E0] +
test byte ptr [edi] 1 +
jnz loc_43F4FF  +
test al 10h +
jz loc_43F572  +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_405DA0  +
test eax eax +
jz loc_43F572  +
mov ebx [eax+6Ch] +
mov esi [eax+24h] +
add esi ebx +
cmp ebx esi +
jnb loc_43F572  +
mov eax [esp+1F4h+var_1C0] +
lea edi [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] edi +
mov eax [eax+174h] +
mov edi [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_198] +
mov eax [eax+30h] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
cmp [esp+1F4h+var_164] 16h +
jz loc_43FF4C  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
add ebx edx +
cmp esi ebx +
ja loc_43F538  +
mov eax [esp+1F4h+var_198] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_43F597  +
mov ebx [esp+1F4h+var_E0] +
mov ecx [ebp+14h] +
test ch 1 +
jnz loc_43FF71  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_43F584  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43FF0B  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov edx [eax+0A0h] +
test edx edx +
jz loc_43F5DE  +
sub eax 0FFFFFF80h +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44E790  +
test eax eax +
jz loc_43E2E7  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_445780  +
test eax eax +
jz loc_43E2E7  +
mov eax [esp+1F4h+var_E4] +
mov ebx 1 +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_4314A0  +
mov eax [esp+1F4h+var_E4] +
mov ebp [esp+1F4h+var_1A4] +
mov eax [eax+0A0h] +
test ebp ebp +
mov eax [eax+934h] +
mov dword ptr [eax+38h] 1 +
jz loc_43D8F0  +
mov edi [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F4] edi +
call sub_407460  +
test eax eax +
mov esi eax +
jz loc_43D8EE  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] eax +
call sub_44B740  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E0] edi +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] eax +
call sub_4063D0  +
mov [esp+1F4h+var_1F4] esi +
call free  +
jmp loc_43D8F0  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1C4] eax +
test eax eax +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jz loc_43FE96  +
mov ebx [esp+1F4h+var_1C4] +
mov ebp 1 +
xor ecx ecx +
mov [esp+1F4h+var_1A8] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_43FE4D  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43F6CE  +
mov edi [esp+1F4h+var_1A8] +
jmp loc_43FE9D  +
mov eax [esp+1F4h+var_1B4] +
lea eax [eax+eax*2-3] +
lea eax ds:14h[eax*4] +
mov [esp+1F4h+var_1D4] eax +
mov eax edx +
xor edx edx +
div  [esp+1F4h+var_1C4] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jz loc_43F375  +
imul eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4075F0  +
test eax eax +
mov [esp+1F4h+var_1B4] eax +
jz loc_43F8A3  +
mov eax [esp+1F4h+var_1C8] +
mov ecx 0FFFFFF00h +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovz ebx ecx +
mov ecx [edi+0A0h] +
mov [esp+1F4h+var_1AC] ebx +
test ecx ecx +
jz loc_43F766  +
mov [esp+1F4h+var_1A0] edi +
mov ebp ecx +
cmp dword ptr [ebp+4] 1 +
jz loc_43F81A  +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_43F751  +
mov edi [esp+1F4h+var_1A0] +
mov eax [esp+1F4h+var_1D4] +
xor ebp ebp +
mov ebx [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1E8] offset sub_42FB90 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] ebx +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx ebx +
cmp dword ptr [ecx+4] 1 +
jnz loc_43FA02  +
add ebp 1 +
add ecx [esp+1F4h+var_1D4] +
cmp ebp [esp+1F4h+var_1B8] +
jnz loc_43F78E  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1E8] offset sub_42FBF0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
sub eax ebp +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx [edi+0A0h] +
test ecx ecx +
jz loc_43F7E7  +
mov esi ecx +
mov ecx edi +
cmp dword ptr [esi+4] 1 +
jz loc_43FA5D  +
mov esi [esi] +
test esi esi +
jnz loc_43F7D5  +
mov edi ecx +
mov eax [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_43F379  +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] offset aWarningSecti_0 +
call off_4730E4  +
mov [esp+1F4h+var_1F4] 0Fh +
call sub_4029E0  +
jmp loc_43E2E7  +
mov esi [ebp+10h] +
mov ebx [esi+6Ch] +
test ebx ebx +
jz loc_43F8F0  +
mov eax [esi+38h] +
xor edx edx +
mov ecx [esi+24h] +
div  [esp+1F4h+var_1C4] +
add ecx ebx +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx ecx +
jnb loc_43F75B  +
lea edi [eax+8] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1B0] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+10Ch] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] esi +
call eax  +
mov ecx [esp+1F4h+var_19C] +
add ebx [esp+1F4h+var_1C4] +
mov [edi-4] eax +
mov eax [esp+1F4h+var_1AC] +
mov [edi-8] eax +
add edi [esp+1F4h+var_1D4] +
cmp ecx ebx +
ja loc_43F84A  +
jmp loc_43F75B  +
mov eax [esp+1F4h+var_E0] +
xor ebp ebp +
mov edi [esp+1F4h+var_E4] +
mov eax [eax+18h] +
mov eax [eax+14h] +
mov [esp+1F4h+var_1E8] edi +
mov edi [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F4] edi +
xor edi edi +
mov [esp+1F4h+var_1F0] offset aNotEnoughMemor +
call eax  +
jmp loc_43F379  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_43F75B  +
mov eax [esp+1F4h+var_1B4] +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_43F379  +
mov ecx offset a_preinit_array +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1C8] ecx +
mov [esp+1F4h+var_1F4] eax +
call sub_405CC0  +
mov ecx [esp+1F4h+var_1C8] +
test eax eax +
mov edi eax +
jz loc_43F963  +
mov edx [eax+24h] +
test edx edx +
jnz loc_43F951  +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1F4] offset aWarningSSectio +
call off_4730E4  +
mov edx [edi+24h] +
mov [esp+1F4h+var_160] edx +
mov eax [ebx+174h] +
jmp loc_43F47D  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_4730E4  +
jmp loc_43E2E7  +
cmp eax 6FFFFFFCh +
jz loc_43F9AE  +
cmp eax 6FFFFFFEh +
mov edx offset a_gnu_version_r +
jz loc_43F437  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
mov esi ecx +
jmp loc_43F4A1  +
mov edx offset a_gnu_version_d +
jmp loc_43F437  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_4730E4  +
jmp loc_43E2E7  +
mov edx offset a_gnu_version +
jmp loc_43F437  +
cmp eax 1Ah +
jz loc_43FA49  +
jbe loc_43FA36  +
cmp eax 1Bh +
lea esi [esi+0] +
jz loc_43FA53  +
cmp eax 1Ch +
mov ecx offset a_fini_array +
jz loc_43F915  +
jmp loc_43F99B  +
cmp [esp+1F4h+var_1B8] ebp +
jbe loc_43F7A5  +
mov esi ebp +
mov edx ecx +
mov ebx ecx +
mov eax [ebx+0Ch] +
xor eax [edx+0Ch] +
test [esp+1F4h+var_1AC] eax +
cmovnz edx ebx +
add esi 1 +
mov eax [edx+8] +
mov [ebx] eax +
add ebx [esp+1F4h+var_1D4] +
cmp esi [esp+1F4h+var_1B8] +
jnz loc_43FA12  +
jmp loc_43F7A5  +
cmp eax 19h +
mov edx offset a_init_array +
jz loc_43F437  +
jmp loc_43F99B  +
mov edx offset a_fini_array +
jmp loc_43F437  +
mov ecx offset a_init_array +
jmp loc_43F915  +
mov eax [esi+10h] +
xor edx edx +
mov ebx [eax+6Ch] +
mov edi [eax+24h] +
mov eax [eax+38h] +
add edi ebx +
div  [esp+1F4h+var_1C4] +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx edi +
jnb loc_43F7DF  +
add eax 8 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1B8] ecx +
mov [esp+1F4h+var_1EC] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1A8] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
add ebx [esp+1F4h+var_1C4] +
add eax [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_1B8] +
cmp edi ebx +
ja loc_43FA85  +
jmp loc_43F7DF  +
mov edx offset a_preinit_array +
jmp loc_43F437  +
cmp eax 11h +
jnb loc_43FC7B  +
cmp eax 6 +
jz loc_43FC68  +
ja loc_43FBCA  +
cmp eax 4 +
jz loc_43FBC0  +
lea esi [esi+0] +
ja loc_43FBB6  +
test eax eax +
jnz loc_43F99B  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
test ebp ebp +
jz loc_43F9A7  +
cmp [esp+1F4h+var_1C4] ecx +
jbe loc_43F9A7  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp eax 4 +
jz loc_43FBA9  +
cmp eax 9 +
jnz loc_43F9A7  +
mov [esp+1F4h+var_164] 6FFFFFFAh +
mov [esp+1F4h+var_160] ebp +
mov eax edx +
xor ebp ebp +
jmp loc_43F47D  +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jmp loc_43F337  +
test edi edi +
jz loc_43F377  +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_43F375  +
mov eax [esp+1F4h+var_1C8] +
mov ebx [edi+0A0h] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+3] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+38h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+3Ch] +
mov [esp+1F4h+var_1A8] eax +
jmp loc_43F355  +
mov [esp+1F4h+var_164] 6FFFFFF9h +
jmp loc_43FB42  +
mov edx offset a_dynstr +
jmp loc_43F437  +
mov edx offset a_hash +
jmp loc_43F437  +
cmp eax 0Ch +
jz loc_44018A  +
jbe loc_43FC72  +
cmp eax 0Dh +
lea esi [esi+0] +
jnz loc_43F99B  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+4Ch] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E4] 1 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_4193E0  +
test eax eax +
jz loc_43F99B  +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-3] +
cmp dl 1 +
ja loc_43F99B  +
mov ecx [eax+18h] +
mov [esp+1F4h+var_160] ecx +
mov edx [eax+14h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_43FCEA  +
add ecx [eax+1Ch] +
mov eax [edx+38h] +
add eax ecx +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
jmp loc_43F47D  +
mov edx offset a_dynsym +
jmp loc_43F437  +
cmp eax 8 +
ja loc_43F99B  +
mov ecx [esp+1F4h+var_E4] +
lea edx [eax-11h] +
cmp edx 2 +
mov [esp+1F4h+var_160] 0 +
sbb edi edi +
and edi 5 +
mov edx [ecx+0A0h] +
add edi 4 +
mov ecx [edx+214h] +
cmp ecx 1 +
mov [esp+1F4h+var_1B8] ecx +
jbe loc_43FCDF  +
mov edx [edx+40h] +
lea ecx [edx+4] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [esp+1F4h+var_1B8] +
lea ecx [edx+ecx*4] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov edx [ecx] +
cmp [edx+4] edi +
jz loc_43FD00  +
add [esp+1F4h+var_1C8] 4 +
mov ecx [esp+1F4h+var_1B8] +
cmp [esp+1F4h+var_1C8] ecx +
jnz loc_43FCC5  +
mov eax [ebx+174h] +
jmp loc_43F47D  +
mov [esp+1F4h+var_160] 0 +
mov eax [ebx+174h] +
jmp loc_43F47D  +
test byte ptr [edx+8] 2 +
jz loc_43FCD0  +
cmp eax 8 +
jz loc_43FD14  +
cmp eax 12h +
jnz loc_440199  +
mov edx [edx+18h] +
add [esp+1F4h+var_160] edx +
jmp loc_43FCD0  +
mov edi [esp+1F4h+var_1B4] +
xor ebx ebx +
mov [esp+1F4h+var_1D0] ebx +
mov ecx [edi+60h] +
mov ebx [edi+5Ch] +
mov [esp+1F4h+var_1D4] ecx +
mov ecx [edi+58h] +
mov edi [esp+1F4h+var_E4] +
add [esp+1F4h+var_1D4] ecx +
adc [esp+1F4h+var_1D0] ebx +
mov esi [edi+0A0h] +
mov ebx [esi+208h] +
test ebx ebx +
jz loc_43FD60  +
mov edx [ebx] +
test edx edx +
jnz loc_4400DE  +
mov eax [esp+1F4h+var_138] +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov dword ptr [esi+0C4h] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_44B160  +
mov edx [esp+1F4h+var_1D0] +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
mov [esi+0D0h] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
lea eax [esi+0B8h] +
mov [esp+1F4h+var_1F4] eax +
call sub_423FA0  +
mov edi [esp+1F4h+var_E4] +
mov ecx [edi+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [esi+0C8h] +
mov [ecx+24h] edx +
mov edx [esi+0CCh] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_4086D0  +
test eax eax +
jnz loc_43D8EE  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B210  +
test eax eax +
jnz loc_43F1EA  +
jmp loc_43D8EE  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_4401BB  +
div  edi +
test edx edx +
jz loc_43F6D8  +
mov eax ebp +
xor eax 1 +
test cl al +
jnz loc_43FEDE  +
mov ecx 1 +
mov ebp 1 +
jmp loc_43F6D8  +
mov ebp 1 +
xor ecx ecx +
mov eax [edi+0A0h] +
test eax eax +
mov [esp+1F4h+var_1A8] eax +
jz loc_43FEC5  +
mov ebx eax +
mov [esp+1F4h+var_1A0] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_4401D7  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43FEB1  +
mov edi [esp+1F4h+var_1A0] +
test ecx ecx +
jnz loc_44022E  +
mov ebx [esp+1F4h+var_1C4] +
jmp loc_43F337  +
test ecx ecx +
jz loc_440280  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_4730E4  +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] 5 +
call sub_4029E0  +
jmp loc_43F379  +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_41F600 +
mov [esp+1F4h+var_164] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_4062E0  +
mov ecx [esp+1F4h+var_164] +
test ecx ecx +
jnz loc_43E2E7  +
jmp loc_43F5AC  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+3] 10h +
jz loc_440010  +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPXReadOnlySegm +
call eax  +
jmp loc_43F572  +
mov eax [ebp+24h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_43F590  +
mov eax [ebp+3Ch] +
cmp eax offset off_473270 +
jz loc_43F590  +
and ecx 100000h +
jz loc_43F590  +
mov ecx [ebx+1Ch] +
cmp [ecx+0A0h] ebp +
jz loc_43F590  +
cmp [ecx+0A4h] ebp +
jz loc_43F590  +
mov esi [ebp+0] +
mov ecx 8 +
mov edi offset a_dynstr +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_44002B  +
mov edi [esp+1F4h+var_1D4] +
mov ecx [ebp+6Ch] +
mov [esp+1F4h+var_1E0] edi +
mov edi [ebp+38h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1E8] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_4063D0  +
test eax eax +
jnz loc_43F590  +
jmp loc_43E2E7  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPWarningCreati +
call eax  +
jmp loc_43F572  +
mov eax [eax+8Ch] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4086D0  +
test eax eax +
jnz loc_43E2E7  +
mov eax [ebx+1Ch] +
mov eax [eax+50h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B210  +
test eax eax +
jnz loc_43F590  +
jmp loc_43E2E7  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
jmp loc_43ED72  +
xor edi edi +
jmp loc_43EC73  +
mov eax [esp+1F4h+var_E4] +
call sub_42FE90  +
test eax eax +
jz loc_43D8EE  +
mov edx [ebx+3Ch] +
jmp loc_43ECFD  +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B170  +
mov [ebx+8] eax +
jmp loc_43EEDF  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
jmp loc_43D8EE  +
lea esi ds:0[eax*4] +
mov edx [esp+1F4h+var_1D0] +
mov eax [esp+1F4h+var_1D4] +
mov dword ptr [ebx+4] 12h +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [ebx+24h] 4 +
mov [ebx+18h] esi +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] ebx +
call sub_423FA0  +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+10h] +
mov [esp+1F4h+var_1D0] edx +
mov edx [ebx+14h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_4086D0  +
test eax eax +
jnz loc_43D8EE  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_10C] +
mov [esp+1F4h+var_1F4] eax +
call sub_408570  +
cmp eax esi +
jnz loc_43D8EE  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+0A0h] +
jmp loc_43FD60  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+48h] +
jmp loc_43FBF0  +
mov ecx [esp+1F4h+var_160] +
mov edx [edx+0Ch] +
test ecx ecx +
jz loc_4401AF  +
cmp ecx edx +
jbe loc_43FCD0  +
mov [esp+1F4h+var_160] edx +
jmp loc_43FCD0  +
div  edi +
test edx edx +
jnz loc_440217  +
mov eax ebp +
test cl al +
jnz loc_43FEDE  +
mov ecx 1 +
xor ebp ebp +
jmp loc_43F6D8  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_440272  +
div  edi +
test edx edx +
jz loc_43FEBB  +
test ebp ebp +
jz loc_440243  +
mov ecx 1 +
mov ebp 1 +
jmp loc_43FEBB  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSor_0 +
mov [esp+1F4h+var_1F0] eax +
jmp loc_43FEF0  +
test ebp ebp +
jnz loc_43FECD  +
mov ebx [esp+1F4h+var_1A8] +
mov ecx [esp+1F4h+var_1B0] +
jmp loc_43FB8E  +
test ecx ecx +
jz loc_440208  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_4730E4  +
mov [esp+1F4h+var_1F4] 5 +
call sub_4029E0  +
jmp loc_43F379  +
div  edi +
test edx edx +
jnz loc_440217  +
test ebp ebp +
jnz loc_43FED6  +
mov ecx 1 +
xor ebp ebp +
jmp loc_43FEBB  +
***
mov eax [esp+10h] +
mov edx [esp+4] +
mov ecx [esp+14h] +
test eax eax +
jz loc_4402C7  +
movzx edx byte ptr [eax+0Ch] +
cmp dl 3 +
jb loc_4402C4  +
cmp dl 4 +
jbe loc_4402C0  +
cmp dl 5 +
jnz loc_4402C4  +
mov eax [eax+14h] +
mov eax [eax+4] +
retn   +
***
mov eax [eax+14h] +
retn   +
***
xor eax eax +
retn   +
***
mov ecx [ecx+10h] +
mov eax [edx+94h] +
mov [esp+8] ecx +
mov [esp+4] eax +
jmp sub_423710  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
mov ecx [ebp+20h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_14] eax +
mov eax [ebp+4] +
mov edx [eax+4] +
shr edx cl +
test edx edx +
jz loc_440451  +
cmp edx [ebp+14h] +
jb loc_440390  +
mov ecx [ebp+1Ch] +
sub edx [ebp+18h] +
mov ebx [ecx+edx*4] +
test ebx ebx +
jnz loc_440338  +
jmp loc_440467  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_440335  +
mov ecx [ebx+3Ch] +
or byte ptr [ebx+34h] 20h +
test ecx ecx +
jz loc_440353  +
or byte ptr [ecx+34h] 20h +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_440363  +
sub edx 1 +
cmp dl 1 +
jbe loc_4403B6  +
mov [esp+2Ch+arg_10] 0 +
mov [esp+2Ch+arg_C] ebx +
mov [esp+2Ch+arg_8] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+arg_4] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+arg_0] eax +
mov eax [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov ecx [ebp+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_440323  +
mov [esp+2Ch+arg_10] ebx +
mov [esp+2Ch+arg_C] 0 +
jmp loc_44036F  +
mov esi [ebx+4] +
mov ecx 8 +
mov edi offset a__start_ +
mov [esp+2Ch+var_10] esi +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_440448  +
mov esi [esp+2Ch+var_10] +
mov ecx 7 +
mov edi offset a__stop_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_440363  +
mov esi [esp+2Ch+var_10] +
add esi 7 +
test esi esi +
jz loc_440363  +
cmp byte ptr [esi] 0 +
jz loc_440363  +
mov edi [esp+2Ch+var_20] +
mov edi [edi+34h] +
test edi edi +
jz loc_440363  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edi +
call sub_405CC0  +
test eax eax +
jz loc_440436  +
test byte ptr [eax+18h] 8 +
jz loc_44045B  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_440420  +
mov eax [ebp+4] +
jmp loc_440363  +
mov esi [esp+2Ch+var_10] +
add esi 8 +
jmp loc_440400  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+var_14] +
mov dword ptr [esi] 1 +
jmp loc_440453  +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_1C] +
mov eax [eax+18h] +
mov edx [esi+94h] +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] offset aFPCorruptInput +
call eax  +
xor eax eax +
jmp loc_440453  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+8Ch] +
or byte ptr [ebx+18h] 8 +
mov eax [eax+7Ch] +
test eax eax +
jz loc_4404B6  +
test byte ptr [eax+18h] 8 +
jz loc_440630  +
mov eax [ebx+94h] +
test byte ptr [ebx+14h] 4 +
mov eax [eax+0A0h] +
mov esi [eax+248h] +
jz loc_440570  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_440570  +
cmp ebx esi +
jz loc_4405C0  +
mov edx [esp+5Ch+arg_0] +
lea ebp [esp+5Ch+var_34] +
mov ecx ebx +
mov eax ebp +
call sub_4351A0  +
test eax eax +
jz loc_440698  +
mov eax [esp+5Ch+var_30] +
cmp [esp+5Ch+var_2C] eax +
jbe loc_4406A5  +
mov [esp+5Ch+var_44] esi +
mov edi [esp+5Ch+arg_8] +
mov esi [esp+5Ch+arg_0] +
jmp loc_440535  +
mov eax [esp+5Ch+var_30] +
add eax 0Ch +
cmp [esp+5Ch+var_2C] eax +
mov [esp+5Ch+var_30] eax +
jbe loc_4406A1  +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
call sub_4406C0  +
test eax eax +
jnz loc_440520  +
mov esi [esp+5Ch+var_44] +
xor ecx ecx +
xor edi edi +
mov byte ptr [esp+5Ch+var_44] 0 +
mov edx ebx +
mov eax ebp +
mov [esp+5Ch+var_40] ecx +
call sub_42EC30  +
mov ecx [esp+5Ch+var_40] +
jmp loc_440581  +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
cmp byte ptr [esp+5Ch+var_44] 0 +
jnz loc_4405C0  +
mov eax [ebx+8Ch] +
test cl cl +
mov edx [eax+84h] +
jz loc_4405B3  +
test edx edx +
jz loc_4405B3  +
test byte ptr [edx+18h] 8 +
mov eax 1 +
jz loc_440670  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8Ch] +
mov edx [eax+80h] +
test edx edx +
jz loc_440660  +
mov edx [esp+5Ch+arg_0] +
mov ecx esi +
xor edi edi +
lea eax [esp+5Ch+var_34] +
call sub_4351A0  +
xor ecx ecx +
test eax eax +
jz loc_440588  +
lea eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_443A20  +
mov edx esi +
test eax eax +
setnz cl  +
lea eax [esp+5Ch+var_34] +
movzx edi cl +
mov [esp+5Ch+var_44] ecx +
call sub_42EC30  +
mov ecx [esp+5Ch+var_44] +
jmp loc_440588  +
mov edi [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_5C] eax +
call sub_440490  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4404B6  +
jmp loc_4405AB  +
mov ecx 1 +
mov edi 1 +
jmp loc_44058E  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_440490  +
test eax eax +
setnz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor edi edi +
jmp loc_440588  +
mov esi [esp+5Ch+var_44] +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
jmp loc_44055A  +
***
push ebx  +
sub esp 30h +
lea eax [esp+30h+var_4] +
mov esi [esp+30h+arg_0] +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_C] +
mov edi [esp+30h+arg_8] +
mov [esp+30h+var_4] 0 +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] eax +
call sub_4402E0  +
test eax eax +
mov ebx eax +
jnz loc_440726  +
jmp loc_440760  +
or byte ptr [ebx+18h] 8 +
mov eax [esp+30h+var_4] +
test eax eax +
jz loc_440760  +
mov eax [ebx+94h] +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_405D00  +
test eax eax +
mov ebx eax +
jz loc_440760  +
test byte ptr [ebx+18h] 8 +
jnz loc_440706  +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_440702  +
test byte ptr [eax+29h] 8 +
jnz loc_440702  +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_440490  +
test eax eax +
jnz loc_440706  +
xor eax eax +
jmp loc_440765  +
mov eax 1 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+34h] +
test eax eax +
mov [esp+14h] eax +
jnz loc_4407A6  +
jmp loc_440933  +
mov eax [esp+14h] +
mov eax [eax+9Ch] +
test eax eax +
mov [esp+14h] eax +
jz loc_440933  +
mov eax [esp+14h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_440790  +
mov eax [esp+14h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+18h] eax +
jz loc_440790  +
xor ebx ebx +
xor edx edx +
jmp loc_4407F0  +
or byte ptr [eax+18h] 8 +
test ebx ebx +
jnz loc_44080B  +
and ch 20h +
jz loc_4407E9  +
mov esi [eax] +
mov edi offset a_debug_line_ +
mov ecx 0Ch +
cmps   +
setz bl  +
movzx ebx bl +
mov eax [eax+0Ch] +
test eax eax +
jz loc_440817  +
mov ecx [eax+14h] +
test ecx 100000h +
jnz loc_4407C8  +
test byte ptr [eax+18h] 8 +
mov esi 1 +
cmovnz edx esi +
test ebx ebx +
jz loc_4407D0  +
mov eax [eax+0Ch] +
mov ebx 1 +
test eax eax +
jnz loc_4407F0  +
test edx edx +
mov [esp+1Ch] ebx +
jz loc_440790  +
mov ebp [esp+18h] +
xor esi esi +
jmp loc_440851  +
test ah 20h +
jnz loc_440839  +
test al 7 +
jnz loc_44084A  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_440940  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_4408A8  +
mov eax [ebp+14h] +
test eax 2000000h +
jz loc_440830  +
mov eax [ebp+8Ch] +
mov ebx 1 +
mov ecx 1 +
mov edi [eax+7Ch] +
mov eax edi +
mov edx [eax+14h] +
mov eax [eax+8Ch] +
test dh 20h +
mov eax [eax+7Ch] +
cmovz ebx esi +
and edx 7 +
cmovnz ecx esi +
cmp edi eax +
jnz loc_440870  +
or ebx ecx +
jz loc_44084A  +
or byte ptr [eax+18h] 8 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp edi eax +
jnz loc_440890  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_440851  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_440790  +
mov ebp [esp+18h] +
test byte ptr [ebp+14h] 10h +
jz loc_440927  +
test byte ptr [ebp+18h] 8 +
jnz loc_440927  +
mov eax [ebp+0] +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
mov ebx [esp+18h] +
mov esi eax +
lea esi [esi+0] +
test byte ptr [ebx+18h] 8 +
jz loc_440920  +
test byte ptr [ebx+15h] 20h +
jz loc_440920  +
mov edi [ebx] +
mov [esp] edi +
call strlen  +
cmp esi eax +
jnb loc_440920  +
mov ecx [esp+1Ch] +
sub eax esi +
lea edx [edi+eax] +
mov [esp+8] esi +
mov [esp] edx +
mov [esp+4] ecx +
call strncmp  +
test eax eax +
jnz loc_440920  +
and byte ptr [ebx+18h] 0F7h +
nop   +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4408E0  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_4408B8  +
jmp loc_440790  +
***
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
or byte ptr [ebp+18h] 8 +
jmp loc_44084A  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
movzx eax byte ptr [ebx+0Ch] +
mov ecx [esi+78h] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_440977  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+33h] +
test dl 4 +
jnz loc_4409B9  +
test dl 2 +
jnz loc_440990  +
and edx 0Ah +
jnz loc_44096C  +
cmp al 3 +
jnz loc_44096C  +
nop   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_44096C  +
movzx eax byte ptr [esi] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jbe loc_4409E6  +
movzx eax byte ptr [ebx+34h] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_4409CE  +
mov eax [ebx+14h] +
or dword ptr [eax+14h] 200000h +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+4] +
mov eax [esi+7Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_41C420  +
test eax eax +
jz loc_4409B9  +
jmp loc_44096C  +
***
test al 10h +
jnz loc_4409AB  +
test byte ptr [ebx+34h] 10h +
nop   +
jz loc_44096C  +
test ecx ecx +
jz loc_44096C  +
mov edx [ebx+4] +
mov eax [ecx+10h] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
mov [esp+8] edx +
call eax  +
test eax eax +
jnz loc_4409AB  +
jmp loc_44096C  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov ebx [esi+40h] +
test ebx ebx +
jnz loc_440A38  +
jmp loc_440A90  +
mov ebx [ebx] +
test ebx ebx +
jz loc_440A90  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esi+1Ch] +
mov [esp] eax +
call sub_4193E0  +
test eax eax +
jz loc_440A32  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_440A32  +
mov eax [eax+14h] +
cmp eax offset off_473270 +
jz loc_440A32  +
mov ebx [ebx] +
or dword ptr [eax+14h] 200000h +
test ebx ebx +
jnz loc_440A38  +
lea esi [esi+0] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+64h] +
mov ebp [eax+34h] +
test ebp ebp +
jnz loc_440AC5  +
jmp loc_440B52  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_440B52  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_440AB7  +
mov edx [esp+64h] +
mov ecx ebp +
lea eax [esp+18h] +
call sub_42EB40  +
test eax eax +
jz loc_440B57  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_440AF7  +
jmp loc_440AB7  +
***
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_440AB7  +
mov esi [ebx] +
mov edi offset a_eh_frame_en_0 +
mov ecx 0Fh +
cmps   +
jnz loc_440AF0  +
mov edx [esp+64h] +
mov ecx ebp +
mov [esp] ebx +
lea eax [esp+18h] +
call sub_435100  +
test eax eax +
jz loc_440AF0  +
lea eax [esp+18h] +
mov [esp+8] eax +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_442370  +
mov eax [esp+18h] +
test eax eax +
jz loc_440AF0  +
mov edx [ebx+8Ch] +
cmp eax [edx+68h] +
jz loc_440AF0  +
mov [esp] eax +
call free  +
jmp loc_440AF0  +
***
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+70h] +
mov edi [esp+74h] +
mov dword ptr [esp+20h] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1AEh] 1 +
mov [esp+18h] eax +
jz loc_440B96  +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_440BB0  +
mov dword ptr [esp] offset aWarningGcSecti +
call off_4730E4  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+18h] +
mov eax [eax+0B4h] +
mov [esp] edi +
call eax  +
mov eax [edi+1Ch] +
mov ebp [edi+34h] +
mov [esp+1Ch] eax +
movzx eax byte ptr [edi+3] +
and eax 6 +
cmp al 4 +
jz loc_440C7D  +
test ebp ebp +
jz loc_440C7D  +
lea esi [esp+28h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] ebp +
call sub_405CC0  +
test eax eax +
mov ebx eax +
jnz loc_440C55  +
jmp loc_440C64  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] ebp +
call sub_4424D0  +
mov eax [ebx+8Ch] +
mov eax [eax+88h] +
test eax eax +
jz loc_440C36  +
test byte ptr [ebx+16h] 10h +
jnz loc_440C36  +
mov eax [ebp+0A0h] +
mov [eax+248h] ebx +
mov edx ebx +
mov eax esi +
call sub_42EC30  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call sub_405D00  +
test eax eax +
mov ebx eax +
jz loc_440C64  +
mov ecx ebx +
mov edx edi +
mov eax esi +
call sub_4351A0  +
test eax eax +
jnz loc_440C00  +
movzx eax byte ptr [edi+3] +
mov ebp [ebp+9Ch] +
and eax 6 +
cmp al 4 +
jz loc_440C7D  +
test ebp ebp +
jnz loc_440BE4  +
mov eax [esp+1Ch] +
lea ebx [esp+20h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_42E8F0 +
mov [esp] eax +
call sub_419B50  +
mov eax [esp+20h] +
test eax eax +
jnz loc_440CAB  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_435210 +
mov [esp] esi +
call sub_419B50  +
mov eax [esp+20h] +
test eax eax +
jz loc_440CA1  +
mov eax [esi+30h] +
test eax eax +
jnz loc_440F6F  +
mov esi [edi+34h] +
mov eax [esp+18h] +
test esi esi +
mov ebx [eax+0BCh] +
jz loc_440D8D  +
mov [esp+1Ch] ebx +
mov ebp esi +
mov ebx [esp+70h] +
jmp loc_440D05  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_440D89  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_440CF7  +
mov ecx [esp+18h] +
mov edx [ebx+4] +
mov ecx [ecx+74h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
test eax eax +
jz loc_440CF7  +
mov esi [ebp+64h] +
test esi esi +
jnz loc_440D47  +
lea esi [esi+0] +
jmp loc_440CF7  +
***
mov eax [esi+8Ch] +
cmp dword ptr [eax+4] 7 +
jz loc_440D80  +
nop   +
mov esi [esi+0Ch] +
test esi esi +
jz loc_440CF7  +
test byte ptr [esi+18h] 8 +
jnz loc_440D40  +
mov eax [esi+14h] +
test ah 80h +
jnz loc_440D40  +
test eax 200000h +
jz loc_440D32  +
mov eax [esp+1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [esp+8] eax +
call sub_440490  +
test eax eax +
jnz loc_440D40  +
xor eax eax +
jmp loc_440CA3  +
***
mov eax [eax+7Ch] +
test eax eax +
jnz loc_440D40  +
jmp loc_440D5C  +
***
mov ebx [esp+1Ch] +
mov eax [esp+18h] +
mov eax [eax+0C0h] +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
mov eax [esp+70h] +
mov esi [edi+34h] +
mov eax [eax+4] +
test esi esi +
mov eax [eax+1B0h] +
mov [esp+18h] eax +
mov ebp [eax+0C4h] +
jnz loc_440DD1  +
jmp loc_440F29  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_440F29  +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_440DC3  +
mov ecx [esp+18h] +
mov edx [ecx+74h] +
mov ecx [esp+70h] +
mov ecx [ecx+4] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test eax eax +
jz loc_440DC3  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_440EC0  +
jmp loc_440DC3  +
***
test ebp ebp +
jz loc_440EB5  +
mov eax [ebx+14h] +
test al 4 +
nop   +
jz loc_440EB5  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_440EB5  +
test byte ptr [edi+1] 8 +
jz loc_440E30  +
test ah 20h +
jnz loc_440EB5  +
cmp dword ptr [ebx+3Ch] offset off_473270 +
jz loc_440EB5  +
movzx eax byte ptr [edi+2] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp] edx +
mov [esp+10h] eax +
mov [esp+4] ebx +
call sub_434EB0  +
test eax eax +
mov edx eax +
jz loc_440CA1  +
mov eax [ebx+94h] +
mov [esp+1Ch] edx +
mov [esp+0Ch] edx +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call ebp  +
mov ecx [ebx+8Ch] +
mov edx [esp+1Ch] +
cmp edx [ecx+68h] +
jz loc_440EAD  +
mov [esp] edx +
mov [esp+1Ch] eax +
call free  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_440CA1  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_440DC3  +
mov edx [ebx+14h] +
test edx 2000000h +
jz loc_440EE7  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
movzx ecx byte ptr [eax+18h] +
movzx eax byte ptr [ebx+18h] +
and ecx 8 +
and eax 0FFFFFFF7h +
or eax ecx +
mov [ebx+18h] al +
test byte ptr [ebx+18h] 8 +
jnz loc_440EB5  +
test dh 80h +
jnz loc_440EB5  +
or dh 80h +
mov [ebx+14h] edx +
test byte ptr [edi+5] 10h +
jz loc_440E02  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_440E02  +
mov eax [ebx] +
mov [esp+4] esi +
mov dword ptr [esp] offset aRemovingUnused +
mov [esp+8] eax +
call off_4730E4  +
jmp loc_440E02  +
***
mov eax [esp+18h] +
mov [esp+28h] edi +
mov eax [eax+0DCh] +
mov dword ptr [esp+4] offset sub_42FC30 +
mov [esp+2Ch] eax +
lea eax [esp+28h] +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419B50  +
mov eax [esp+70h] +
lea ecx [esp+24h] +
mov edx edi +
call sub_42EF30  +
mov eax 1 +
jmp loc_440BA8  +
***
mov eax [esp+18h] +
mov eax [eax+0B8h] +
mov [esp+8] edi +
mov [esp+4] eax +
mov eax [esp+1Ch] +
mov [esp] eax +
call sub_419B50  +
jmp loc_440CD6  +
***
push ebp  +
xor edx edx +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov esi [esp+34h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov ecx [edi+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+60h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
jnz loc_440FE0  +
sub eax [ecx+68h] +
mov ecx [ecx+218h] +
lea edx [ecx+eax*4] +
cmp ecx edx +
jnz loc_440FF7  +
jmp loc_441030  +
add ecx 4 +
cmp edx ecx +
jz loc_441030  +
mov ebx [ecx] +
test ebx ebx +
jz loc_440FF0  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_440FF0  +
cmp [ebx+14h] esi +
jnz loc_440FF0  +
cmp [ebx+18h] ebp +
jnz loc_440FF0  +
mov eax [ebx+44h] +
test eax eax +
jz loc_44105F  +
mov edx [esp+38h] +
test edx edx +
jz loc_441080  +
mov edi [esp+38h] +
mov [eax+8] edi +
mov eax 1 +
jmp loc_441057  +
mov [esp+0Ch] ebp +
mov [esp+8] esi +
mov [esp+4] edi +
mov dword ptr [esp] offset aBALuNoSymbolFo +
call off_4730E4  +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_404C60  +
test eax eax +
mov [ebx+44h] eax +
jnz loc_441019  +
xor eax eax +
jmp loc_441057  +
***
mov dword ptr [eax+8] 0FFFFFFFFh +
mov eax 1 +
jmp loc_441057  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov esi [esp+48h] +
mov ebx [esp+4Ch] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax [esi+44h] +
test eax eax +
jz loc_441182  +
cmp [eax] ebx +
ja loc_441165  +
mov edx 1 +
movzx edi cl +
mov eax [eax+4] +
shl edx cl +
cmp byte ptr [esi+0Ch] 1 +
mov [esp+14h] edi +
lea edi [edx+ebx] +
jz loc_4410EE  +
mov edi [esi+2Ch] +
lea ebp [edx+ebx] +
cmp ebx edi +
cmovnb edi ebp +
lea edi [edi+edx-1] +
neg edx  +
and edi edx +
mov edx edi +
shr edx cl +
test eax eax +
mov [esp+18h] ecx +
lea edx ds:4[edx*4] +
jz loc_4411B0  +
sub eax 4 +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+1Ch] edx +
call sub_4074F0  +
test eax eax +
mov ebp eax +
jz loc_4411A5  +
mov eax [esi+44h] +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+4] 0 +
shr eax cl +
lea eax ds:4[eax*4] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp] eax +
call memset  +
mov eax [esi+44h] +
add ebp 4 +
mov ecx [esp+14h] +
mov [eax+4] ebp +
mov [eax] edi +
jmp loc_44116B  +
mov ebp [eax+4] +
movzx ecx cl +
shr ebx cl +
mov eax 1 +
mov dword ptr [ebp+ebx*4+0] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edx +
mov [esp+14h] ecx +
call sub_404C60  +
mov ecx [esp+14h] +
test eax eax +
mov [esi+44h] eax +
jnz loc_4410C1  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] edx +
call sub_4075F0  +
test eax eax +
mov ebp eax +
jnz loc_441154  +
xor eax eax +
jmp loc_4411A7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+48h] +
mov eax [eax+8Ch] +
mov eax [eax+8] +
mov [esp+1Ch] eax +
mov eax [esp+44h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_441220  +
mov edx [eax] +
mov ecx [esp+1Ch] +
xor eax eax +
and ecx edx +
cmp ecx edx +
jnz loc_441212  +
mov eax [esp+44h] +
mov ecx [esp+1Ch] +
test [eax+4] ecx +
setz al  +
movzx eax al +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov eax [eax+30h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [esp+44h] +
mov ebx [eax+8] +
test ebx ebx +
jz loc_44132E  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_44127D  +
mov edx [ebx] +
test edx edx +
jz loc_4412ED  +
mov ecx [esp+14h] +
or eax ecx +
cmp edx 1 +
cmovnz eax ecx +
mov [esp+14h] eax +
mov dword ptr [ebx+8] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_44130F  +
mov eax [edi+108h] +
test eax eax +
jz loc_441293  +
mov edx [ebx+4] +
mov [esp] edx +
call eax  +
test eax eax +
jnz loc_441251  +
mov esi [ebx+4] +
xor ebp ebp +
mov eax ds:off_48C1E0[ebp*8] +
mov [esp] esi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_4412E0  +
add ebp 1 +
cmp ebp 0Ch +
jnz loc_441298  +
mov eax [ebx+8] +
test eax eax +
jnz loc_441272  +
mov eax [esp+40h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] esi +
mov dword ptr [esp] offset aUnrecognizedIn +
call eax  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx] +
test eax eax +
jnz loc_4412F6  +
mov eax ds:dword_48C1E4[ebp*8] +
or [esp+18h] eax +
jmp loc_44126B  +
***
cmp eax 1 +
jnz loc_44126B  +
mov eax ds:dword_48C1E4[ebp*8] +
or [esp+14h] eax +
jmp loc_44126B  +
***
mov edx [esp+18h] +
mov ebp [esp+14h] +
mov eax [esp+44h] +
or edx [eax] +
mov dword ptr [eax+0Ch] 1 +
or [eax+4] ebp +
mov [eax] edx +
jmp loc_4411F5  +
***
xor ebp ebp +
xor edx edx +
jmp loc_441317  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_4] +
cmp [eax+30h] ecx +
jz loc_441379  +
mov [esp+3Ch+var_38] 32FAh +
mov [esp+3Ch+var_3C] offset a____Binutils_4 +
call sub_402930  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
xor eax eax +
cmp dword ptr [edx+28h] 1 +
jz loc_441390  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_20] +
xor ebp ebp +
test byte ptr [eax+1ADh] 1 +
jz loc_4414A8  +
mov eax [esp+3Ch+arg_4] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_4413C1  +
jmp loc_441477  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_441470  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_4413B3  +
mov eax [ebx+0A0h] +
mov esi [eax+21Ch] +
test esi esi +
jz loc_4413B3  +
mov ecx [eax+928h] +
test ecx ecx +
jz loc_441460  +
mov ecx [esp+3Ch+var_20] +
mov eax [eax+60h] +
mov edx [ecx+174h] +
movzx edi byte ptr [edx+5] +
xor edx edx +
div  edi +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_24] +
test edx edx +
jz loc_4413B3  +
xor edi edi +
jmp loc_44144D  +
mov eax [esp+3Ch+var_20] +
mov ecx [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_0] +
mov [esi+edi*4] ebp +
mov eax [eax+180h] +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] edx +
call eax  +
add ebp eax +
add edi 1 +
cmp edi [esp+3Ch+var_24] +
jz loc_4413B3  +
mov eax [esi+edi*4] +
test eax eax +
jg loc_441410  +
mov dword ptr [esi+edi*4] 0FFFFFFFFh +
jmp loc_441440  +
mov eax [eax+68h] +
mov [esp+3Ch+var_24] eax +
jmp loc_4413FD  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] offset sub_42E9B0 +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] eax +
call sub_419B50  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+17Ch] +
jmp loc_4413A3  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
mov [esp+4] esi +
call sub_441340  +
test eax eax +
jnz loc_4414E5  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+24h] esi +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_43D8C0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 5Ch +
mov esi [esp+74h] +
test byte ptr [esi+4] 1 +
jnz loc_44151C  +
mov eax [esi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_441526  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_stab +
mov [esp] eax +
call sub_405CC0  +
test eax eax +
jz loc_4415F7  +
mov ebx [eax+0A0h] +
mov dword ptr [esp+1Ch] 0 +
test ebx ebx +
jz loc_441600  +
mov ebp 1 +
jmp loc_44156E  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_441600  +
mov edi [ebx+24h] +
test edi edi +
jz loc_441560  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_441560  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
add ax 0FF80h +
jnz loc_441560  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_441560  +
mov ecx ebx +
mov edx esi +
lea eax [esp+28h] +
call sub_4351A0  +
test eax eax +
jz loc_441790  +
mov eax [ebx+8Ch] +
lea ecx [esp+28h] +
mov eax [eax+88h] +
mov [esp+10h] ecx +
mov dword ptr [esp+0Ch] offset sub_42EA20 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_44E2F0  +
mov edx ebx +
test eax eax +
mov eax [esp+1Ch] +
cmovnz eax ebp +
mov [esp+1Ch] eax +
lea eax [esp+28h] +
call sub_42EC30  +
jmp loc_441560  +
***
mov dword ptr [esp+1Ch] 0 +
nop   +
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_4416C0  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] eax +
call sub_405CC0  +
test eax eax +
jz loc_4416C0  +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_4416C0  +
lea ebp [esp+28h] +
jmp loc_44164A  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_4416C0  +
mov edx [ebx+24h] +
test edx edx +
jz loc_441640  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_441640  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_4351A0  +
test eax eax +
jz loc_441790  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_4424D0  +
mov [esp+10h] ebp +
mov dword ptr [esp+0Ch] offset sub_42EA20 +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_443AC0  +
mov edx ebx +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax ebp +
call sub_42EC30  +
jmp loc_441640  +
***
mov ebx [esi+34h] +
test ebx ebx +
jz loc_441746  +
lea ebp [esp+28h] +
jmp loc_4416DA  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_441746  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_4416D0  +
mov edi [eax+1B0h] +
mov eax [edi+110h] +
test eax eax +
jz loc_4416D0  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_42EB40  +
test eax eax +
jz loc_441790  +
mov eax [edi+110h] +
mov [esp+8] esi +
mov [esp+4] ebp +
mov [esp] ebx +
call eax  +
mov edx [ebx+0A0h] +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax [esp+34h] +
test eax eax +
jz loc_4416D0  +
cmp eax [edx+78h] +
jz loc_4416D0  +
mov [esp] eax +
call free  +
jmp loc_4416D0  +
***
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_44179A  +
test al al +
mov ebx [esp+1Ch] +
jz loc_44151C  +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 2 +
jz loc_44151C  +
mov eax [esp+70h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_444180  +
test eax eax +
mov eax 1 +
cmovnz ebx eax +
jmp loc_44151C  +
***
mov ebx 0FFFFFFFFh +
jmp loc_44151C  +
***
mov [esp] esi +
call sub_443850  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jmp loc_441751  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
cmp dword ptr [ebx+3Ch] offset off_473270 +
jz loc_4417DC  +
mov ebp [ebx+14h] +
test ebp 20000h +
jz loc_4417DC  +
mov eax [ebx+8Ch] +
mov esi [eax+78h] +
test esi esi +
jz loc_4417E6  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
mov [esp+14h] edx +
mov edx ebp +
and edx 2000000h +
mov [esp+10h] edx +
jz loc_441905  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_441905  +
mov eax [eax+8Ch] +
mov edx [eax+74h] +
test edx edx +
jz loc_441905  +
mov [esp] edx +
call sub_41BBE0  +
mov edi [eax+0Ch] +
mov [esp+18h] eax +
test edi edi +
jz loc_441B05  +
mov [esp+44h] ebx +
mov esi edi +
mov ebx ebp +
mov [esp+1Ch] edi +
mov ebp [esp+14h] +
jmp loc_44184D  +
mov esi [esi] +
test esi esi +
jz loc_441950  +
mov edi [esi+4] +
mov eax [edi+14h] +
xor eax ebx +
test eax 2000000h +
jnz loc_44187E  +
mov ecx [esp+10h] +
test ecx ecx +
jnz loc_441AE0  +
mov eax [edi] +
mov [esp] ebp +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_441A1B  +
mov eax [edi+94h] +
test byte ptr [eax+2Ah] 20h +
jz loc_441843  +
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_41BCB0  +
test eax eax +
jz loc_4417DC  +
mov edx [esp+10h] +
test edx edx +
jz loc_4418FB  +
mov eax [ebx+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_4418FB  +
mov ecx [esi+4] +
mov eax [edx+8Ch] +
mov dword ptr [edx+3Ch] offset off_473270 +
mov [edx+7Ch] ecx +
mov eax [eax+7Ch] +
cmp eax edx +
jnz loc_4418F7  +
jmp loc_4418FB  +
mov [eax+7Ch] ecx +
mov dword ptr [eax+3Ch] offset off_473270 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax edx +
jz loc_4418FB  +
test eax eax +
jnz loc_4418E0  +
mov eax 1 +
jmp loc_4417DE  +
***
mov esi [esp+14h] +
mov ecx 0Eh +
mov edi offset a_gnu_linkonc_1 +
mov edx [esp+14h] +
cmps   +
setnbe cl  +
setb al  +
cmp cl al +
jnz loc_44181A  +
mov eax edx +
mov esi edx +
add eax 0Eh +
mov dword ptr [esp+4] 2Eh +
mov [esp] eax +
call strchr  +
lea edx [eax+1] +
test eax eax +
cmovz edx esi +
jmp loc_44181A  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov ebx [esp+44h] +
test eax eax +
jz loc_4419A7  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_44197E  +
mov edx [eax+8Ch] +
mov esi [edx+7Ch] +
cmp esi eax +
jz loc_441A9C  +
mov eax [esp+18h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41BC10  +
test eax eax +
jz loc_441A64  +
xor eax eax +
cmp dword ptr [ebx+3Ch] offset off_473270 +
setz al  +
jmp loc_4417DE  +
***
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jz loc_4419CA  +
mov eax [eax+8Ch] +
mov ecx [eax+7Ch] +
test ecx ecx +
jz loc_4419CA  +
mov eax [ecx+8Ch] +
mov esi [eax+7Ch] +
cmp esi ecx +
jz loc_441A40  +
mov edi [edi] +
test edi edi +
jnz loc_4419A7  +
mov esi [esp+14h] +
mov edi offset a_gnu_linkonc_2 +
mov ecx 10h +
cmps   +
jnz loc_44197E  +
mov eax [esp+18h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44197E  +
mov ebp 10h +
mov [esp+44h] ebx +
mov edx [eax+4] +
test byte ptr [edx+17h] 2 +
jnz loc_441A0C  +
mov esi [edx] +
mov edi offset a_gnu_linkonc_3 +
mov ecx ebp +
cmps   +
jz loc_441A7C  +
mov eax [eax] +
test eax eax +
jnz loc_4419F6  +
mov ebx [esp+44h] +
jmp loc_44197E  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_41BCB0  +
test eax eax +
jnz loc_4418FB  +
jmp loc_4417DC  +
***
mov ecx [esp+48h] +
mov edx ebx +
mov eax esi +
call sub_42F240  +
test eax eax +
jz loc_4419CA  +
mov dword ptr [ebx+3Ch] offset off_473270 +
mov [ebx+7Ch] esi +
jmp loc_4419D0  +
***
mov eax [esp+48h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_li_0 +
call eax  +
jmp loc_441996  +
***
mov eax [esp+40h] +
cmp [edx+94h] eax +
mov ebx [esp+44h] +
jz loc_44197E  +
mov dword ptr [ebx+3Ch] offset off_473270 +
jmp loc_44197E  +
***
test edi edi +
jnz loc_441AAF  +
jmp loc_44197E  +
***
mov edi [edi] +
test edi edi +
jz loc_44197E  +
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jnz loc_441AA5  +
mov ecx [esp+48h] +
mov edx esi +
call sub_42F240  +
test eax eax +
jz loc_441AA5  +
mov eax [edi+4] +
mov dword ptr [esi+3Ch] offset off_473270 +
mov [esi+7Ch] eax +
mov dword ptr [ebx+3Ch] offset off_473270 +
jmp loc_44197E  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_41BCB0  +
test eax eax +
jnz loc_4418B2  +
jmp loc_4417DC  +
***
cmp dword ptr [esp+10h] 0 +
jnz loc_441960  +
jmp loc_4419D0  +
***
mov eax [esp+4] +
cmp dword ptr [eax+10h] 0FFFFFFF2h +
setz al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFF2h +
retn   +
***
mov eax offset off_473120 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_441B90  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+28h] +
mov eax [esp+20h] +
call sub_431600  +
test eax eax +
jz loc_441B86  +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_405DA0  +
test eax eax +
mov ebx eax +
jz loc_441B86  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_441B86  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_441BF0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+30h] +
mov eax [esp+2Ch] +
call sub_431600  +
test eax eax +
mov edi eax +
jz loc_441BE7  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_405DA0  +
test eax eax +
mov ebx eax +
jz loc_441C26  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_441BE7  +
***
mov eax [esi+14h] +
mov [esp+4] edi +
and eax 1 +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 10410Bh +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_4060A0  +
test eax eax +
mov ebx eax +
jz loc_441C1B  +
cmp dword ptr [esp+30h] 1 +
mov edx [eax+8Ch] +
sbb eax eax +
and eax 5 +
add eax 4 +
mov [edx+4] eax +
mov eax [esp+28h] +
mov [ebx+40h] eax +
jmp loc_441C1B  +
***
sub esp 3Ch +
mov eax [esp+48h] +
mov edx [esp+44h] +
movzx ecx byte ptr [eax+30h] +
mov [edx+30h] cl +
movzx ecx byte ptr [eax+32h] +
movzx eax byte ptr [eax+31h] +
mov [edx+32h] cl +
lea ecx [esp+1Ch] +
mov [esp+29h] al +
mov eax [esp+40h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 14h +
call sub_42F9F0  +
add esp 3Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+4] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_441D30  +
mov dword ptr [esp+4] 3519h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
mov eax [edi+174h] +
mov eax [eax+44h] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+3] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_441DB0  +
mov dword ptr [esp+4] 3524h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_402930  +
mov eax [edi+174h] +
mov eax [eax+3Ch] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [eax] +
mov [esp+4+var_4] ecx +
mov ebx edi +
jmp loc_441DEE  +
lea esi [ebx+1] +
mov [eax] esi +
movzx ecx byte ptr [ebx] +
test cl cl +
jns loc_441E00  +
mov ebx esi +
cmp edx ebx +
ja loc_441DE0  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4+var_4] +
movzx ebp cl +
cmp edi ebx +
mov [eax] ebp +
jb loc_441E12  +
jmp loc_441E29  +
mov ebp eax +
sub ebx 1 +
movzx eax byte ptr [ebx] +
mov edx [esp+4+var_4] +
shl ebp 7 +
and eax 7Fh +
or eax ebp +
cmp ebx edi +
mov [edx] eax +
jnz loc_441E10  +
add esp 4 +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov ecx eax +
xor eax eax +
test bl 2 +
jnz loc_441E86  +
mov eax [ecx+0Ch] +
cmp eax 4 +
jz loc_441E86  +
test bl 1 +
jz loc_441E88  +
shr bl 2 +
and ebx 1 +
test byte ptr [ecx+5] 10h +
jz loc_441E7A  +
add ebx 1 +
lea ecx [ebx+edx-1] +
add eax ebx +
add eax ecx +
neg edx  +
and eax edx +
pop ebx  +
retn   +
shr bl 2 +
and ebx 1 +
lea ecx [ebx+edx-1] +
neg edx  +
add eax ecx +
and eax edx +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax] +
cmp edx eax +
jbe loc_441EF0  +
lea edi [eax+1] +
mov [ebx] edi +
movzx ebp byte ptr [eax] +
mov edx ebp +
and edx 0FFFFFFC0h +
mov [esp+18h+var_15] dl +
movzx edx dl +
cmp [esp+18h+var_15] 0 +
cmovz edx ebp +
cmp edx 0C0h +
ja loc_441EF0  +
jmp ds:off_48C2A0[edx*4]  +
mov eax esi +
sub eax edi +
cmp ecx eax +
jbe loc_442018  +
mov [ebx] esi +
nop   +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
sub edx edi +
cmp edx 7 +
jbe loc_441EEC  +
add eax 9 +
mov [ebx] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+18h+var_8] +
mov edx esi +
mov eax ebx +
call sub_441DD0  +
test eax eax +
jz loc_441EF0  +
mov edx [ebx] +
mov ecx esi +
mov eax [esp+18h+var_8] +
sub ecx edx +
cmp eax ecx +
ja loc_441EEC  +
add eax edx +
mov [ebx] eax +
mov eax 1 +
jmp loc_441EF2  +
add eax 2 +
add esi 1 +
jmp loc_441F65  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_441F0E  +
cmp eax esi +
jnz loc_441F58  +
jmp loc_441EF0  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_441F85  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_441F20  +
cmp eax ecx +
jnz loc_441F78  +
jmp loc_441EF0  +
cmp esi edi +
jz loc_441EEC  +
add eax 2 +
mov [ebx] eax +
mov eax 1 +
jmp loc_441EF2  +
mov edx esi +
sub edx edi +
cmp edx 1 +
jbe loc_441EEC  +
add eax 3 +
mov [ebx] eax +
mov eax 1 +
jmp loc_441EF2  +
mov edx esi +
sub edx edi +
cmp edx 3 +
jbe loc_441EEC  +
add eax 5 +
mov [ebx] eax +
mov eax 1 +
jmp loc_441EF2  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_441FF5  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_44200F  +
cmp eax ecx +
jnz loc_441FE8  +
jmp loc_441EF0  +
add edx 1 +
mov [ebx] edx +
cmp byte ptr [edx-1] 0 +
jns loc_441F0E  +
cmp esi edx +
ja loc_442000  +
jmp loc_441EF0  +
add ecx edi +
mov eax 1 +
mov [ebx] ecx +
jmp loc_441EF2  +
***
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov edx [eax+3Ch] +
mov ecx [eax+38h] +
mov eax [esp+arg_4] +
add ecx [edx+1Ch] +
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov ebx [eax+3Ch] +
mov edx [eax+38h] +
mov eax 0FFFFFFFFh +
add edx [ebx+1Ch] +
xor ebx ebx +
cmp ecx edx +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [ecx+8] +
mov ebx [esp+28h+arg_4] +
lea edx [eax+eax*2] +
mov eax [ebx] +
lea eax [eax+edx*4] +
cmp eax [ebx+8] +
mov [ebx+4] eax +
jnb loc_4420F0  +
mov edx [ecx+0Ch] +
add edx [ecx+10h] +
cmp [eax] edx +
jb loc_4420C9  +
jmp loc_4420F0  +
mov edx [ebx+4] +
lea eax [edx+0Ch] +
cmp [ebx+8] eax +
mov [ebx+4] eax +
jbe loc_4420F0  +
mov eax [ebp+0Ch] +
add eax [ebp+10h] +
cmp [edx+0Ch] eax +
jnb loc_4420F0  +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_20] eax +
call sub_4406C0  +
test eax eax +
jnz loc_4420B0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov eax [ebp+4] +
cmp [ebx+4] eax +
jz loc_442123  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
cmp [ebx] eax +
jnz loc_442119  +
movzx eax word ptr [ebp+8] +
cmp [ebx+8] ax +
jnz loc_442119  +
lea eax [ebp+0Ah] +
lea esi [ebx+0Ah] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] esi +
call strcmp  +
test eax eax +
jnz loc_442119  +
mov edi offset unk_48C5A4 +
mov ecx 3 +
cmps   +
setnbe dl  +
setb al  +
sub edx eax +
movsx edi dl +
test edi edi +
jz loc_442119  +
mov eax [ebp+20h] +
xor edi edi +
cmp [ebx+20h] eax +
jnz loc_442119  +
mov eax [ebp+24h] +
cmp [ebx+24h] eax +
jnz loc_442119  +
mov eax [ebp+28h] +
cmp [ebx+28h] eax +
jnz loc_442119  +
mov eax [ebp+2Ch] +
cmp [ebx+2Ch] eax +
jnz loc_442119  +
lea eax [ebp+30h] +
mov [esp+24h+var_20] eax +
lea eax [ebx+30h] +
mov [esp+24h+var_1C] 8 +
mov [esp+24h+var_24] eax +
call memcmp  +
test eax eax +
mov edi eax +
jnz loc_4421FA  +
mov eax [ebx+38h] +
mov edx [eax] +
mov eax [ebp+38h] +
mov eax [eax] +
mov eax [eax+3Ch] +
cmp [edx+3Ch] eax +
jnz loc_442119  +
mov eax [ebp+3Ch] +
cmp [ebx+3Ch] eax +
jnz loc_442119  +
movzx eax byte ptr [ebx+3Fh] +
cmp al 32h +
ja loc_442119  +
add ebp 41h +
add ebx 41h +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_20] ebp +
mov [esp+24h+var_24] ebx +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
mov edi eax +
jmp loc_442119  +
xor edi edi +
jmp loc_442119  +
***
jmp sub_442210  +
***
mov eax 1 +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
ja loc_442237  +
jb loc_442240  +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
mov edx [edx+4] +
sbb ebx ebx +
cmp [ecx+4] edx +
cmovbe eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
cmp ecx 4 +
mov ebx [esp+18h+arg_0] +
jz loc_4422A8  +
cmp ecx 8 +
jz loc_442295  +
cmp ecx 2 +
jz loc_442282  +
mov [esp+18h+var_14] 0C1h +
mov [esp+18h+var_18] offset a____Binutil_25 +
call sub_402930  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_4422E0  +
mov eax [eax+38h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
test ebx ebx +
mov eax [eax] +
jz loc_4422D0  +
mov eax [eax+20h] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_4422C0  +
mov eax [eax+2Ch] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+28h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+1Ch] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax+34h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
***
mov ebx [esp+18h+arg_0] +
cmp ebx 4 +
jz loc_442350  +
cmp ebx 8 +
jz loc_442333  +
cmp ebx 2 +
jz loc_442320  +
mov [esp+18h+var_14] 0D2h +
mov [esp+18h+var_18] offset a____Binutil_25 +
call sub_402930  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+3Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+24h] +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] 0 +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+30h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov edx [esp+14h+arg_8] +
mov ecx [ebx+24h] +
mov esi [eax+1Ch] +
mov eax 1 +
test ecx ecx +
jz loc_4423BD  +
test word ptr [ebx+18h] 380h +
jnz loc_4423BD  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_4423A7  +
cmp ecx offset off_473270 +
jz loc_4423BD  +
mov eax [edx+4] +
cmp eax [edx+8] +
jz loc_4423BB  +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jnz loc_4423C3  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_432BD0  +
test eax eax +
jz loc_4423BB  +
mov edx [eax+8Ch] +
mov [edx+84h] ebx +
mov edx [eax+3Ch] +
test edx edx +
jz loc_4423FA  +
cmp edx offset off_473270 +
jz loc_4424A0  +
movzx edx word ptr [ebx+18h] +
and dx 0FC7Fh +
or dh 3 +
mov [ebx+18h] dx +
mov edx [ebx+8Ch] +
mov [edx+88h] eax +
mov edx [esi+0A8h] +
cmp edx [esi+0B0h] +
jz loc_442441  +
mov eax [esi+0B4h] +
lea ecx [edx+1] +
mov [esi+0A8h] ecx +
mov [eax+edx*4] ebx +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test edx edx +
jnz loc_442477  +
mov dword ptr [esi+0ACh] 1 +
mov dword ptr [esi+0B0h] 2 +
mov [esp+14h+var_14] 8 +
call sub_407460  +
mov [esi+0B4h] eax +
test eax eax +
jz loc_4424AC  +
mov edx [esi+0A8h] +
jmp loc_44242A  +
lea eax [edx+edx] +
mov [esi+0B0h] eax +
mov eax [esi+0B4h] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_4074F0  +
mov [esi+0B4h] eax +
jmp loc_44246B  +
or dword ptr [ebx+14h] 8000h +
jmp loc_4423FA  +
mov [esp+14h+var_10] 1F6h +
mov [esp+14h+var_14] offset a____Binutil_25 +
call sub_402930  +
mov eax [esi+0B4h] +
jmp loc_44246F  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_4] +
mov ebp [esp+7Ch+arg_8] +
mov edi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_20] 0 +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_64] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_44250A  +
test word ptr [ebp+18h] 380h +
jz loc_442512  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+3Ch] offset off_473270 +
jz loc_44250A  +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call sub_406620  +
test eax eax +
jz loc_442640  +
cmp dword ptr [ebp+24h] 3 +
jbe loc_442554  +
mov eax [edi+4] +
mov edx [esp+7Ch+var_20] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_442696  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
mov eax [eax+11Ch] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call eax  +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_442640  +
mov eax [esp+7Ch+var_20] +
mov ebx [ebp+24h] +
mov [esp+7Ch+var_1C] eax +
add ebx eax +
cmp eax ebx +
jz loc_4433A1  +
mov edx ebx +
sub edx eax +
cmp edx 3 +
mov [esp+7Ch+var_5C] 1 +
mov [esp+7Ch+var_60] 0 +
jbe loc_44263C  +
mov [esp+7Ch+arg_8] ebp +
mov esi eax +
mov ebp [esp+7Ch+var_5C] +
jmp loc_442603  +
lea ecx [eax+4] +
mov [esp+7Ch+var_1C] ecx +
mov ecx [edi+4] +
mov ecx [ecx+28h] +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ecx ebx +
cmp eax 1 +
mov eax [esp+7Ch+var_1C] +
adc [esp+7Ch+var_60] 0 +
sub esi 4 +
sub ecx eax +
cmp esi ecx +
ja loc_442635  +
add esi eax +
cmp ebx esi +
mov [esp+7Ch+var_1C] esi +
jz loc_4426C0  +
mov eax ebx +
add ebp 1 +
sub eax esi +
cmp eax 3 +
jbe loc_442635  +
lea eax [esi+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_4429B9  +
test eax eax +
jz loc_4426C0  +
mov eax [esp+7Ch+var_1C] +
mov ecx ebx +
sub ecx eax +
cmp ecx 3 +
ja loc_4425C0  +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] ebx +
mov eax [esp+7Ch+arg_4] +
xor esi esi +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_20] +
test eax eax +
jz loc_44267E  +
mov [esp+7Ch+var_7C] eax +
call free  +
test esi esi +
jz loc_44250A  +
mov [esp+7Ch+var_7C] esi +
call free  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+8] +
cmp [eax+4] edx +
jnz loc_442554  +
mov eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_44250A  +
mov eax ebp +
mov [esp+7Ch+var_5C] ebp +
mov ebp [esp+7Ch+arg_8] +
shl eax 5 +
add eax 8 +
mov [esp+7Ch+var_7C] eax +
call sub_4075F0  +
test eax eax +
mov [esp+7Ch+var_4C] eax +
jz loc_442640  +
imul eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] eax +
call sub_4075F0  +
test eax eax +
mov esi eax +
jz loc_44297C  +
mov ebx [edi+4] +
mov ecx [ebp+24h] +
mov eax [esp+7Ch+var_20] +
mov edx [ebx+1B0h] +
test ecx ecx +
mov [esp+7Ch+var_1C] eax +
mov [esp+7Ch+var_48] eax +
mov edx [edx+0BCh] +
mov [esp+7Ch+var_38] edx +
jz loc_4436BF  +
mov edx [esp+7Ch+var_4C] +
mov eax [edx] +
shl eax 5 +
lea eax [edx+eax+8] +
mov edx [esp+7Ch+var_48] +
mov [esp+7Ch+var_50] eax +
mov eax edx +
add eax ecx +
cmp ecx 3 +
jbe loc_44332C  +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_40] 0 +
mov [esp+7Ch+var_54] esi +
mov [esp+7Ch+arg_0] edi +
mov [esp+7Ch+arg_8] ebp +
mov edx [esp+7Ch+var_44] +
mov eax edx +
add eax 4 +
mov [esp+7Ch+var_1C] eax +
mov eax [ebx+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov edx [esp+7Ch+var_1C] +
mov ebx edx +
mov esi eax +
mov eax [esp+7Ch+var_20] +
sub ebx eax +
mov ecx ebx +
mov [esp+7Ch+var_34] ebx +
mov ebx [esp+7Ch+arg_8] +
lea ecx [esi+ecx] +
mov edi [ebx+24h] +
cmp ecx edi +
ja loc_44296A  +
mov ecx [esp+7Ch+var_48] +
lea ebp [edx+esi] +
mov ebx [esp+7Ch+arg_C] +
sub ecx eax +
mov eax ecx +
mov ecx [esp+7Ch+var_50] +
mov [ecx+10h] eax +
lea eax [esi+4] +
mov [esp+7Ch+var_3C] eax +
mov [ecx+0Ch] eax +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov [esp+7Ch+var_48] eax +
sub eax [ebx] +
sar eax 2 +
imul eax eax +
test esi esi +
mov [ecx+8] eax +
jz loc_443644  +
mov eax ebp +
sub eax edx +
cmp eax 3 +
jbe loc_442EF2  +
lea eax [edx+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jnz loc_4429C5  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 1 +
mov edx [esp+7Ch+var_40] +
lea ebx [edx+1] +
mov [esp+7Ch+var_3C] ebx +
imul ebx edx +
add ebx [esp+7Ch+var_54] +
mov [ebx+38h] eax +
mov eax [esp+7Ch+var_1C] +
mov [ebx] esi +
cmp ebp eax +
mov [esp+7Ch+var_48] eax +
jbe loc_44296A  +
lea esi [eax+1] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
lea edx [eax-3] +
cmp dl 1 +
mov [ebx+8] al +
jbe loc_442867  +
cmp al 1 +
jnz loc_44296A  +
mov [esp+7Ch+var_7C] esi +
call strlen  +
cmp eax 13h +
ja loc_44296A  +
lea edx [ebx+0Ah] +
add eax 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_40] edx +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] eax +
call strchr  +
mov edi [esp+7Ch+arg_C] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_1C] edx +
mov edx [esp+7Ch+arg_C] +
mov edx [edx+4] +
cmp ecx edx +
jbe loc_442906  +
mov esi [esp+7Ch+var_44] +
sub esi [esp+7Ch+var_20] +
cmp esi [edx] +
jbe loc_442906  +
mov edi [edx+4] +
test edi edi +
jnz loc_44296A  +
add edx 0Ch +
jmp loc_4428F6  +
cmp [edx] esi +
jnb loc_4428FC  +
add edx 0Ch +
cmp dword ptr [edx-8] 0 +
jnz loc_443110  +
cmp edx ecx +
mov edi edx +
jb loc_4428E5  +
mov edi [esp+7Ch+arg_C] +
mov [edi+4] edx +
cmp byte ptr [eax+1] 65h +
jz loc_443335  +
cmp byte ptr [ebx+8] 3 +
jbe loc_442937  +
mov eax [esp+7Ch+var_1C] +
lea edx [eax+1] +
cmp ebp edx +
jbe loc_44296A  +
movzx edx byte ptr [eax] +
cmp edx [esp+7Ch+var_58] +
jnz loc_44296A  +
cmp byte ptr [eax+1] 0 +
jnz loc_44296A  +
add eax 2 +
mov [esp+7Ch+var_1C] eax +
lea ecx [ebx+20h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_441DD0  +
test eax eax +
jz loc_44296A  +
mov edi [esp+7Ch+var_1C] +
mov eax edi +
jmp loc_442966  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jns loc_442F0F  +
mov eax edx +
cmp ebp eax +
ja loc_442951  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_44266E  +
mov ebp [esp+7Ch+arg_8] +
jmp loc_442640  +
mov edx [esp+7Ch+var_50] +
imul ecx [esp+7Ch+var_40] +
mov ebx [esp+7Ch+var_54] +
mov edx [edx+10h] +
add ecx ebx +
mov [esp+7Ch+var_48] edx +
add edx 4 +
sub edx eax +
cmp ebx ecx +
jnb loc_4434C2  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jnz loc_4429FD  +
jmp loc_4434C2  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jz loc_442A04  +
add ebx 74h +
cmp ebx ecx +
jb loc_4429F5  +
cmp ebx ecx +
jz loc_44296A  +
mov eax [ebx+38h] +
mov edi [esp+7Ch+var_50] +
mov [edi] eax +
mov ecx [ebx+38h] +
movzx eax byte ptr [edi+1Bh] +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFF7h +
and edx 8 +
or eax edx +
mov [edi+1Bh] al +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFFBh +
and edx 4 +
or eax edx +
mov [edi+1Bh] al +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+4] +
mov esi [eax+8] +
cmp edx esi +
jnb loc_442A89  +
mov ecx [esp+7Ch+var_1C] +
sub ecx [esp+7Ch+var_20] +
cmp ecx [edx] +
jbe loc_442A89  +
mov eax [edx+4] +
test eax eax +
jnz loc_44296A  +
lea eax [edx+0Ch] +
jmp loc_442A79  +
cmp [eax] ecx +
jnb loc_442A7F  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_442EA6  +
cmp eax esi +
mov edx eax +
jb loc_442A67  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov eax [esp+7Ch+arg_8] +
test byte ptr [eax+16h] 10h +
jz loc_442AA3  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax] +
test eax eax +
jz loc_442B20  +
cmp edx esi +
jnb loc_44296A  +
mov eax [esp+7Ch+var_1C] +
sub eax [esp+7Ch+var_20] +
cmp [edx] eax +
jnz loc_44296A  +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_4402E0  +
test eax eax +
jz loc_442B20  +
mov edx [esp+7Ch+arg_0] +
cmp [eax+94h] edx +
jnz loc_44296A  +
mov eax [eax+8Ch] +
mov edi [esp+7Ch+var_50] +
mov edx [eax+80h] +
mov [edi+4] edx +
mov [eax+80h] edi +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_48] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_443143  +
and eax 7 +
cmp al 2 +
jz loc_4434E7  +
jbe loc_443133  +
cmp al 3 +
lea esi [esi+0] +
jz loc_4434B5  +
cmp al 4 +
mov [esp+7Ch+var_34] 8 +
jnz loc_443143  +
mov eax [esp+7Ch+var_34] +
lea esi [eax+eax] +
mov [esp+7Ch+var_18] eax +
mov eax ebp +
sub eax [esp+7Ch+var_48] +
cmp esi eax +
ja loc_442EF2  +
mov edi [esp+7Ch+var_34] +
neg edi  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
add esi [esp+7Ch+var_48] +
mov eax [eax+4] +
mov ecx [edx+8] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_4436B3  +
add edi esi +
mov edx [eax] +
mov esi edi +
sub esi [esp+7Ch+var_20] +
mov [esp+7Ch+var_30] edi +
cmp edx esi +
jnb loc_442ED1  +
add eax 0Ch +
jmp loc_442BD2  +
add eax 0Ch +
mov edx [eax-0Ch] +
cmp edx esi +
jnb loc_442EC7  +
cmp eax ecx +
mov edi eax +
jb loc_442BC4  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_0] +
mov ecx [esp+7Ch+var_34] +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_7C] 0 +
add eax 4 +
call sub_442250  +
test eax eax +
jz loc_443440  +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_4434CB  +
mov [esp+7Ch+var_18] 0 +
cmp byte ptr [ebx+3Dh] 0FFh +
jz loc_442EDE  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov edi [esp+7Ch+var_1C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_442C6F  +
mov ecx edi +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_4432F8  +
lea edx [eax+0Ch] +
jmp loc_442C5F  +
lea edx [edx+0Ch] +
cmp [edx-0Ch] ecx +
jnb loc_4432EE  +
cmp edx esi +
mov eax edx +
jb loc_442C53  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_50] +
mov eax edi +
sub eax [esp+7Ch+var_48] +
mov [edx+1Ah] al +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_44348E  +
mov eax ebp +
sub eax edi +
mov [esp+7Ch+var_18] eax +
add eax edi +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov ecx [esp+7Ch+var_44] +
add ecx [esp+7Ch+var_3C] +
mov edx [edx+8] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] ecx +
cmp edx eax +
jbe loc_442CE1  +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_442CE1  +
add eax 0Ch +
jmp loc_442CD1  +
add eax 0Ch +
cmp [eax-0Ch] ecx +
jnb loc_44315C  +
cmp eax edx +
mov esi eax +
jb loc_442CC5  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
xor edi edi +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_442D17  +
and eax 7 +
cmp al 2 +
jz loc_4434AA  +
jbe loc_44347B  +
cmp al 3 +
mov edi 4 +
jz loc_442D17  +
cmp al 4 +
mov di 8 +
jnz loc_443487  +
mov ecx [esp+7Ch+var_34] +
xor esi esi +
mov [esp+7Ch+var_18] edi +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
cmp ebp eax +
jbe loc_442D41  +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_442E00  +
add eax 1 +
cmp ebp eax +
mov [esp+7Ch+var_10] eax +
ja loc_442D2B  +
test ecx ecx +
jz loc_44296A  +
test esi esi +
jz loc_442D5B  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 1 +
jnz loc_44296A  +
mov edx [esp+7Ch+var_50] +
mov eax ecx +
sub eax ebp +
add [edx+0Ch] eax +
cmp ebp ecx +
jz loc_442D75  +
test byte ptr [edx+1Bh] 1 +
jz loc_442D75  +
add [ebx+3Fh] al +
add [ebx] eax +
test esi esi +
jz loc_442E2A  +
movzx eax byte ptr [ebx+3Eh] +
and eax 70h +
cmp al 10h +
jz loc_442D96  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 8 +
jz loc_442E2A  +
lea eax ds:4[esi*4] +
mov [esp+7Ch+var_7C] eax +
call sub_407460  +
mov edx [esp+7Ch+var_50] +
test eax eax +
mov [edx+1Ch] eax +
jz loc_44296A  +
mov [eax] esi +
mov eax [esp+7Ch+var_34] +
xor esi esi +
mov edi edx +
mov [esp+7Ch+var_14] eax +
jmp loc_442DDF  +
mov ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_14] +
call sub_441EA0  +
test eax eax +
jz loc_44296A  +
mov eax [esp+7Ch+var_14] +
cmp ebp eax +
jbe loc_442E2A  +
cmp byte ptr [eax] 1 +
jnz loc_442DC4  +
mov edx [edi+1Ch] +
add eax 1 +
add esi 1 +
sub eax [esp+7Ch+var_48] +
mov [edx+esi*4] eax +
jmp loc_442DC4  +
xor eax eax +
cmp dl 1 +
setz al  +
mov ecx edi +
add esi eax +
mov edx ebp +
lea eax [esp+7Ch+var_10] +
call sub_441EA0  +
test eax eax +
jz loc_44296A  +
mov ecx [esp+7Ch+var_10] +
mov eax ecx +
jmp loc_442D27  +
mov edx [esp+7Ch+var_50] +
or byte ptr [edx+1Bh] 2 +
movzx eax byte ptr [ebx+3Eh] +
mov [edx+18h] al +
movzx eax byte ptr [ebx+3Dh] +
mov [edx+19h] al +
mov eax [esp+7Ch+var_4C] +
mov edx [eax] +
lea ecx [edx+1] +
mov [eax] ecx +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_50] edx +
mov edx [esp+7Ch+var_20] +
mov ebx eax +
mov [esp+7Ch+var_44] eax +
sub ebx edx +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_8] +
mov eax [eax+24h] +
cmp ebx eax +
jz loc_4437DD  +
add eax edx +
mov ebx [esp+7Ch+var_4C] +
mov edx eax +
sub edx [esp+7Ch+var_44] +
shl ecx 5 +
lea ebx [ebx+ecx+8] +
cmp edx 3 +
mov [esp+7Ch+var_50] ebx +
jbe loc_44331A  +
mov eax [esp+7Ch+arg_0] +
mov ebx [eax+4] +
jmp loc_442768  +
mov edx esi +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] edx +
jmp loc_44297C  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edi +
cmp esi edx +
jnz loc_442BE2  +
jmp loc_442C08  +
mov edi [esp+7Ch+var_1C] +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
cmp eax edx +
jbe loc_442C8E  +
mov eax ebp +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_44297C  +
xor ecx 40h +
movzx esi cl +
sub esi 40h +
cmp edi eax +
mov [ebx+24h] esi +
jb loc_442F23  +
jmp loc_442F38  +
mov esi ecx +
sub eax 1 +
movzx ecx byte ptr [eax] +
shl esi 7 +
and ecx 7Fh +
or ecx esi +
cmp eax edi +
mov [ebx+24h] ecx +
jnz loc_442F21  +
cmp byte ptr [ebx+8] 1 +
jnz loc_4430F2  +
cmp ebp edx +
jbe loc_44296A  +
lea eax [edx+1] +
mov [esp+7Ch+var_1C] eax +
movzx eax byte ptr [edx] +
mov [ebx+28h] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_442FB2  +
mov edx [esp+7Ch+var_1C] +
sub edx [esp+7Ch+var_20] +
cmp edx [eax] +
jbe loc_442FB2  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_44296A  +
add eax 0Ch +
jmp loc_442FA2  +
cmp [eax] edx +
jnb loc_442FA8  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_443230  +
cmp eax esi +
mov ecx eax +
jb loc_442F90  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Ah] +
mov byte ptr [ebx+3Dh] 0FFh +
mov byte ptr [ebx+3Eh] 0FFh +
mov byte ptr [ebx+3Ch] 0FFh +
cmp al 65h +
jz loc_44349B  +
cmp al 7Ah +
jz loc_4434F4  +
mov edx [esp+7Ch+var_20] +
mov [esp+7Ch+var_44] edx +
test al al +
jz loc_44300E  +
cmp al 50h +
jz loc_44316B  +
jle loc_443251  +
cmp al 52h +
nop   +
jz loc_4433BB  +
cmp al 53h +
jnz loc_44296A  +
add [esp+7Ch+var_40] 1 +
mov eax [esp+7Ch+var_40] +
movzx eax byte ptr [eax] +
test al al +
jnz loc_442FDE  +
mov eax [esp+7Ch+arg_4] +
test byte ptr [eax] 1 +
jnz loc_44377A  +
cmp byte ptr [ebx+3Eh] 0FFh +
jnz loc_443028  +
mov byte ptr [ebx+3Eh] 0 +
mov ecx [esp+7Ch+var_1C] +
mov esi ebp +
lea edx [ebx+41h] +
sub esi ecx +
mov eax esi +
cmp esi 32h +
mov [ebx+3Fh] al +
mov eax 32h +
cmovbe eax esi +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov edx [esp+7Ch+arg_C] +
lea ecx [eax+esi] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [edx+8] +
mov [esp+7Ch+var_1C] ecx +
mov eax [eax+4] +
cmp edx eax +
jbe loc_4430B3  +
sub ecx [esp+7Ch+var_20] +
cmp [eax] ecx +
jnb loc_4430B3  +
cmp dword ptr [eax+4] 0 +
jnz loc_44296A  +
add eax 0Ch +
jmp loc_4430A3  +
cmp [eax] ecx +
jnb loc_4430A9  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_442EA4  +
cmp eax edx +
mov esi eax +
jb loc_443091  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4430E5  +
mov edi [esp+7Ch+var_50] +
mov [edi] ebx +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 10h +
movzx eax byte ptr [edi+5] +
setz dl  +
shl edx 3 +
and eax 0FFFFFFF7h +
or eax edx +
mov [edi+5] al +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_40] eax +
jmp loc_442CE1  +
lea ecx [ebx+28h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_441DD0  +
test eax eax +
jnz loc_442F57  +
jmp loc_44296A  +
mov edx [esp+7Ch+arg_C] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_44297C  +
mov edx [esp+7Ch+var_58] +
test al al +
mov [esp+7Ch+var_34] edx +
jz loc_442B66  +
mov [esp+7Ch+var_18] 0 +
xor edi edi +
xor esi esi +
mov [esp+7Ch+var_34] 0 +
jmp loc_442B85  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] esi +
jmp loc_442CE1  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_44296A  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 60h +
cmp cl 60h +
mov [ebx+3Ch] al +
jz loc_44296A  +
mov ecx eax +
and ecx 7 +
cmp cl 2 +
jz loc_44375D  +
jbe loc_443633  +
cmp cl 3 +
jz loc_443753  +
cmp cl 4 +
jnz loc_44296A  +
mov edi 8 +
and eax 70h +
cmp al 50h +
jz loc_44360D  +
mov eax [esp+7Ch+var_1C] +
mov esi [esp+7Ch+var_50] +
mov edx eax +
mov [esp+7Ch+var_34] eax +
sub eax [esp+7Ch+var_48] +
mov [esi+4] al +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [esi+8] +
cmp eax esi +
jnb loc_44296A  +
sub edx [esp+7Ch+var_44] +
cmp [eax] edx +
jnb loc_4435A6  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_44296A  +
lea ecx [eax+0Ch] +
jmp loc_44322A  +
cmp [ecx] edx +
jnb loc_44359C  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_44357B  +
cmp ecx esi +
mov eax ecx +
jb loc_443215  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] ecx +
jmp loc_44297C  +
cmp al 4Ch +
jnz loc_44296A  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_44296A  +
lea esi [eax+1] +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
mov [ebx+3Dh] al +
mov eax [esp+7Ch+arg_C] +
mov ecx [edx+8] +
mov eax [eax+4] +
cmp ecx eax +
jbe loc_4432C3  +
sub esi [esp+7Ch+var_44] +
cmp [eax] esi +
jnb loc_4432C3  +
cmp dword ptr [eax+4] 0 +
jnz loc_44296A  +
add eax 0Ch +
jmp loc_4432B3  +
cmp [eax] esi +
jnb loc_4432B9  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_442EA6  +
cmp eax ecx +
mov edx eax +
jb loc_4432A1  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Dh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_44296A  +
and eax 7 +
jz loc_442FFE  +
sub eax 2 +
cmp al 2 +
jbe loc_442FFE  +
jmp loc_44296A  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
cmp byte ptr [ebx+40h] 0 +
jz loc_442C6F  +
cmp [eax] ecx +
jnz loc_442C6F  +
mov eax [ebx+38h] +
or byte ptr [eax+5] 2 +
mov edi [esp+7Ch+var_1C] +
jmp loc_442C6F  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_44297C  +
cmp byte ptr [eax+2] 68h +
jnz loc_442910  +
mov eax ebp +
sub eax [esp+7Ch+var_44] +
cmp [esp+7Ch+var_58] eax +
ja loc_442EF2  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_44] +
add esi [esp+7Ch+var_58] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_442910  +
sub esi [esp+7Ch+var_20] +
cmp [eax] esi +
jnb loc_442910  +
add eax 0Ch +
jmp loc_44338C  +
add eax 0Ch +
cmp [eax-0Ch] esi +
jnb loc_443744  +
cmp eax ecx +
mov edx eax +
jb loc_443380  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
jmp loc_442910  +
mov eax 8 +
mov [esp+7Ch+var_60] 0 +
mov [esp+7Ch+var_5C] 0 +
jmp loc_4426D3  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_44296A  +
lea edx [eax+1] +
mov edi [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov [ebx+3Eh] al +
mov eax [esp+7Ch+arg_C] +
mov esi [edi+8] +
mov eax [eax+4] +
cmp eax esi +
jnb loc_443425  +
sub edx [esp+7Ch+var_44] +
cmp edx [eax] +
jbe loc_443425  +
cmp dword ptr [eax+4] 0 +
jnz loc_44296A  +
add eax 0Ch +
jmp loc_443415  +
cmp [eax] edx +
jnb loc_44341B  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_443230  +
cmp eax esi +
mov ecx eax +
jb loc_443403  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jnz loc_4432D5  +
jmp loc_44296A  +
mov eax [esp+7Ch+arg_4] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+18h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] offset aDiscardingZero +
mov [esp+7Ch+var_78] edx +
call eax  +
mov eax [esp+7Ch+var_50] +
mov dword ptr [eax] 0 +
jmp loc_442C08  +
test al al +
mov edi [esp+7Ch+var_58] +
jz loc_442D17  +
xor edi edi +
jmp loc_442D17  +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
jmp loc_442EEA  +
cmp byte ptr [ebx+0Bh] 68h +
jnz loc_442FD2  +
jmp loc_44300E  +
mov edi 2 +
nop   +
jmp loc_442D17  +
mov [esp+7Ch+var_34] 4 +
jmp loc_442B66  +
mov ebx [esp+7Ch+var_54] +
jmp loc_442A04  +
lea ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_441DD0  +
test eax eax +
jnz loc_442C1A  +
jmp loc_44296A  +
mov [esp+7Ch+var_34] 2 +
jmp loc_442B66  +
lea eax [ebx+0Bh] +
mov edx ebp +
mov [esp+7Ch+var_40] eax +
lea ecx [ebx+2Ch] +
lea eax [esp+7Ch+var_1C] +
call sub_441DD0  +
test eax eax +
jz loc_44296A  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov ecx [edx+8] +
cmp ecx eax +
jbe loc_4437ED  +
mov edx [esp+7Ch+var_20] +
mov edi edx +
mov [esp+7Ch+var_44] edx +
mov edx [esp+7Ch+var_1C] +
sub edx edi +
cmp edx [eax] +
jbe loc_443572  +
cmp dword ptr [eax+4] 0 +
jnz loc_44296A  +
add eax 0Ch +
jmp loc_443562  +
cmp [eax] edx +
jnb loc_443568  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_442EA4  +
cmp eax ecx +
mov esi eax +
jb loc_443550  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_442FDA  +
mov edx [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_44297C  +
mov esi [esp+7Ch+arg_C] +
mov [esi+4] ecx +
mov ecx [eax] +
cmp ecx edx +
jnz loc_44296A  +
mov edx [esp+7Ch+arg_C] +
sub eax [edx] +
sar eax 2 +
imul eax eax +
mov [ebx+30h] eax +
mov eax [edx+4] +
mov edx [edx+8] +
mov [esp+7Ch+var_30] eax +
mov eax [esp+7Ch+var_30] +
jmp loc_4435E1  +
cmp ecx [eax] +
jnz loc_4435E8  +
test eax eax +
jz loc_443767  +
add eax 0Ch +
cmp eax edx +
jb loc_4435D5  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax ebp +
sub eax [esp+7Ch+var_34] +
cmp edi eax +
ja loc_442EF2  +
add edi [esp+7Ch+var_34] +
mov [esp+7Ch+var_1C] edi +
jmp loc_442FFE  +
mov ecx [esp+7Ch+var_44] +
lea eax [edi-1] +
sub ecx edx +
and eax ecx +
mov ecx ebp +
sub ecx edx +
cmp eax ecx +
mov [esp+7Ch+var_18] eax +
ja loc_442EF2  +
add eax edx +
mov [esp+7Ch+var_1C] eax +
jmp loc_4431C8  +
test cl cl +
jnz loc_44296A  +
mov edi [esp+7Ch+var_58] +
jmp loc_4431BD  +
mov ebx [esp+7Ch+var_34] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov ecx [esp+7Ch+var_48] +
mov edi [esp+7Ch+arg_0] +
cmp ebx eax +
mov ebp [esp+7Ch+arg_8] +
jnz loc_44297C  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+8] +
cmp eax ecx +
jbe loc_4436AA  +
cmp [ecx] ebx +
jnb loc_4436AA  +
cmp dword ptr [ecx+4] 0 +
jnz loc_44297C  +
add ecx 0Ch +
jmp loc_44369A  +
cmp [ecx] ebx +
jnb loc_4436A0  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_4437F6  +
cmp ecx eax +
mov edx ecx +
jb loc_443689  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] ecx +
mov eax [esp+7Ch+var_4C] +
add dword ptr [eax] 1 +
jmp loc_4436C7  +
lea eax [esi+edi] +
mov [esp+7Ch+var_30] eax +
jmp loc_442BE2  +
mov [esp+7Ch+var_40] 0 +
mov eax [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_5C] +
cmp [eax] edx +
jz loc_4436E7  +
mov [esp+7Ch+var_78] 3F8h +
mov [esp+7Ch+var_7C] offset a____Binutil_25 +
call sub_402930  +
mov eax [esp+7Ch+var_60] +
cmp [esp+7Ch+var_40] eax +
jz loc_443705  +
mov [esp+7Ch+var_78] 3F9h +
mov [esp+7Ch+var_7C] offset a____Binutil_25 +
call sub_402930  +
mov eax [ebp+8Ch] +
mov edx [esp+7Ch+var_4C] +
mov [eax+88h] edx +
movzx eax word ptr [ebp+18h] +
and ax 0FC7Fh +
or ax 180h +
mov [ebp+18h] ax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44266E  +
mov [edx+4] esi +
xor esi esi +
jmp loc_44266E  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_442910  +
mov edi 4 +
jmp loc_4431BD  +
mov edi 2 +
jmp loc_4431BD  +
mov eax [esp+7Ch+arg_C] +
mov dword ptr [eax+4] 0 +
jmp loc_4435F2  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_4] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_44301E  +
movzx eax byte ptr [ebx+3Eh] +
test al 70h +
jnz loc_443805  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 8 +
test byte ptr [ebx+3Dh] 70h +
jnz loc_44301E  +
mov byte ptr [ebx+40h] 1 +
jmp loc_44301E  +
mov esi [esp+7Ch+var_54] +
mov ebp [esp+7Ch+arg_8] +
jmp loc_4436C7  +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_442FD2  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_44297C  +
add al 1 +
jnz loc_4437CA  +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 50h +
jz loc_4437CA  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_443832  +
mov eax [esp+7Ch+var_50] +
movzx eax byte ptr [eax+1Bh] +
mov edx [esp+7Ch+var_50] +
or eax 8 +
or byte ptr [edx+5] 10h +
mov [edx+1Bh] al +
jmp loc_4437CA  +
mov edx [esp+7Ch+var_50] +
movzx eax byte ptr [edx+1Bh] +
or eax 4 +
mov [edx+1Bh] al +
jmp loc_443822  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
movzx edx byte ptr [eax+3] +
mov ebx [eax+1Ch] +
xor eax eax +
and edx 6 +
cmp dl 4 +
jz loc_443874  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+0A8h] +
test edi edi +
jz loc_44386C  +
mov edx [ebx+0B4h] +
xor ebp ebp +
jmp loc_443895  +
mov edi [ebx+0A8h] +
add ebp 1 +
cmp ebp edi +
jnb loc_4438F5  +
mov ecx [edx+ebp*4] +
lea eax ds:0[ebp*4] +
test byte ptr [ecx+15h] 80h +
jz loc_443888  +
lea ecx [ebp+1] +
cmp ecx edi +
jnb loc_4438D5  +
mov [esp+2Ch+var_1C] ebp +
jmp loc_4438BA  +
mov edx [ebx+0B4h] +
mov eax esi +
mov ebp [edx+eax+4] +
add ecx 1 +
cmp ecx edi +
lea esi [eax+4] +
mov [edx+eax] ebp +
jnz loc_4438B2  +
mov ebp [esp+2Ch+var_1C] +
mov edx [ebx+0B4h] +
sub ebp 1 +
sub edi 1 +
add ebp 1 +
cmp ebp edi +
mov [ebx+0A8h] edi +
mov dword ptr [edx+edi*4] 0 +
mov edx [ebx+0B4h] +
jb loc_443895  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] offset sub_442030 +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edx +
call qsort  +
mov eax [ebx+0A8h] +
mov edi [ebx+0B4h] +
mov [esp+2Ch+var_10] ebx +
sub eax 1 +
mov [esp+2Ch+var_18] edi +
mov ebp [edi] +
xor edi edi +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
jnb loc_4439DA  +
add edi 1 +
lea eax ds:0[edi*4] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_18] +
mov edx [eax+edi*4] +
test edx edx +
jz loc_443988  +
mov eax [ebp+8Ch] +
mov ecx [edx+8Ch] +
mov eax [eax+88h] +
mov ecx [ecx+88h] +
mov ebx [eax+3Ch] +
mov esi [eax+38h] +
add esi [ebx+1Ch] +
add esi [eax+24h] +
mov eax [ecx+3Ch] +
mov ecx [ecx+38h] +
add ecx [eax+1Ch] +
cmp esi ecx +
jz loc_443A10  +
mov edx [ebp+28h] +
test edx edx +
mov edx [ebp+24h] +
jnz loc_443995  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_406390  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+0A8h] +
mov esi [ebx+0B4h] +
mov ebx [esp+2Ch+var_14] +
sub eax 1 +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] esi +
mov ebp [esi+ebx] +
jb loc_44393A  +
mov eax [ebp+28h] +
mov edx [ebp+24h] +
test eax eax +
jnz loc_4439E7  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_406390  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp edx +
jmp loc_443930  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_10] +
mov eax [eax+8Ch] +
mov ebx [eax+80h] +
test ebx ebx +
jnz loc_443A57  +
jmp loc_443AB0  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_443AB0  +
mov edx [esp+1Ch+arg_8] +
mov ecx ebx +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_442080  +
test eax eax +
jz loc_443AA0  +
mov ecx [ebx] +
test ecx ecx +
jz loc_443A50  +
movzx eax byte ptr [ecx+5] +
test al 1 +
jnz loc_443A50  +
or eax 1 +
mov [ecx+5] al +
mov edx [esp+1Ch+arg_8] +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_442080  +
test eax eax +
jnz loc_443A50  +
lea esi [esi+0] +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
movzx edx word ptr [eax+18h] +
xor eax eax +
and dx 380h +
cmp dx 180h +
jz loc_443AE5  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+3Ch+arg_8] +
mov edx [edi+8Ch] +
mov ecx [edx+88h] +
test ecx ecx +
mov esi ecx +
mov [esp+3Ch+var_2C] ecx +
jz loc_443ADD  +
mov eax [edi+94h] +
lea ebx [esi+8] +
mov ebp ebx +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+11Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
mov edx [esi] +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+1Ch] +
mov [esp+3Ch+var_28] eax +
mov eax edx +
shl eax 5 +
lea eax [esi+eax+8] +
cmp ebx eax +
lea esi [edi+4] +
mov [esp+3Ch+var_1C] esi +
jnb loc_443EFC  +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+var_2C] +
cmp dword ptr [ebp+0Ch] 4 +
jz loc_443F70  +
test byte ptr [ebp+1Bh] 1 +
jnz loc_443EE4  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_443EE4  +
mov eax [esp+3Ch+arg_8] +
test byte ptr [eax+16h] 10h +
mov eax [esp+3Ch+arg_10] +
mov edx [eax] +
jz loc_443B8E  +
test edx edx +
jz loc_443FC0  +
mov eax [ebp+8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*2] +
lea eax [edx+eax*4] +
cmp eax [edi+8] +
mov [edi+4] eax +
jnb loc_443BAD  +
mov esi [ebp+10h] +
lea edx [esi+8] +
cmp [eax] edx +
jz loc_443BC7  +
mov [esp+3Ch+var_38] 552h +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_402930  +
mov eax [ebp+10h] +
lea edx [eax+8] +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_38] eax +
call [esp+3Ch+arg_C]  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jz loc_443EE2  +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_443C33  +
movzx eax byte ptr [ebp+18h] +
and eax 70h +
jnz loc_443FA8  +
test byte ptr [ebp+1Bh] 8 +
jnz loc_443C33  +
mov eax [esp+3Ch+var_28] +
mov edi [esp+3Ch+arg_8] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_34] edi +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] offset aPFdeEncodingIn +
mov [esp+3Ch+var_38] edi +
call eax  +
and byte ptr [ebp+1Bh] 0FDh +
mov eax [esp+3Ch+var_28] +
add dword ptr [eax+0B4h] 1 +
mov edi [ebp+0] +
movzx eax byte ptr [edi+1Bh] +
test al 2 +
jz loc_443EDF  +
test byte ptr [edi+5] 20h +
jnz loc_443FB5  +
and eax 0FFFFFFFDh +
mov esi [edi] +
mov [edi+1Bh] al +
mov eax [esp+3Ch+arg_8] +
test esi esi +
mov [edi] eax +
jz loc_443EDF  +
cmp byte ptr [esi+3Ch] 0FFh +
jz loc_4440E1  +
mov eax [esi+30h] +
lea ecx [esi+30h] +
mov [esp+3Ch+var_18] ecx +
lea edx [eax+eax*2] +
mov eax [esp+3Ch+arg_10] +
mov eax [eax] +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov ecx [eax+edx*4+4] +
mov eax [esp+3Ch+arg_10] +
shr ecx 8 +
cmp ecx [eax+14h] +
jnb loc_443CC8  +
mov edx [esp+3Ch+arg_10] +
lea eax [ecx+ecx*4] +
mov edx [edx+0Ch] +
lea edx [edx+eax*4] +
movzx eax byte ptr [edx+0Ch] +
shr al 4 +
test al al +
jz loc_44402F  +
mov edx [esp+3Ch+arg_10] +
mov eax ecx +
sub eax [edx+18h] +
mov edx [edx+1Ch] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_443CF2  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_443CE3  +
mov ecx [esp+3Ch+arg_4] +
mov [esi+30h] eax +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_4356B0  +
test eax eax +
jnz loc_444076  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
call sub_460A90  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+8] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
lea edx [esi+0Ah] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_10] eax +
call strlen  +
mov ecx [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
add eax 1 +
mov [esp+3Ch+var_38] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+20h] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+24h] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+28h] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+38h] +
mov eax [eax] +
add eax 3Ch +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Dh] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Eh] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Fh] +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
movzx edx byte ptr [esi+3Fh] +
cmp edx 32h +
mov [esp+3Ch+var_34] eax +
mov eax 32h +
cmova edx eax +
lea eax [esi+41h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call sub_460A90  +
mov ecx [esp+3Ch+var_28] +
mov edx [ecx+0B0h] +
mov [esi+4] eax +
test edx edx +
jz loc_4440ED  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_38] esi +
call sub_4606A0  +
test eax eax +
mov edx eax +
jz loc_443EDF  +
mov eax [eax] +
test eax eax +
jz loc_44414B  +
movzx edx byte ptr [edi+5] +
or byte ptr [edi+1Bh] 2 +
or edx 20h +
mov [edi+5] dl +
mov ecx [eax+38h] +
and edx 2 +
mov [edi] ecx +
jz loc_443EDC  +
mov edx [eax+38h] +
or byte ptr [edx+5] 2 +
mov edi [eax+38h] +
mov [ebp+0] edi +
mov edx [ebx] +
mov eax edx +
add ebp 20h +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_443B57  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_2C] +
mov eax [eax+4] +
test eax eax +
jz loc_443F1C  +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_2C] +
mov edx [eax] +
mov dword ptr [eax+4] 0 +
mov eax [esp+3Ch+var_2C] +
shl edx 5 +
xor edi edi +
lea esi [eax+edx+8] +
cmp ebx esi +
jnb loc_443F4C  +
mov ebp [esp+3Ch+var_24] +
test byte ptr [ebx+1Bh] 2 +
jnz loc_443F45  +
mov [ebx+14h] edi +
mov edx ebp +
mov eax ebx +
call sub_441E50  +
add edi eax +
add ebx 20h +
cmp ebx esi +
jb loc_443F31  +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+24h] +
mov [esi+24h] edi +
cmp edi eax +
mov [esi+28h] eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov esi [eax+0A0h] +
movzx eax byte ptr [ebp+1Bh] +
test esi esi +
setnz dl  +
and eax 0FFFFFFFDh +
add edx edx +
add ebp 20h +
or eax edx +
mov [ebp-5] al +
mov edx [ebx] +
mov eax edx +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_443B57  +
jmp loc_443EF8  +
cmp al 50h +
jnz loc_443C33  +
jmp loc_443C02  +
mov edi [edi] +
mov [ebp+0] edi +
jmp loc_443EE2  +
movzx eax byte ptr [ebp+18h] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_4440D8  +
mov edx eax +
and edx 7 +
cmp dl 2 +
jz loc_44412D  +
jbe loc_4440CA  +
cmp dl 3 +
jz loc_44413C  +
cmp dl 4 +
mov esi 8 +
mov ecx 8 +
jnz loc_4440D8  +
mov edx [ebp+10h] +
shr al 3 +
and eax 1 +
lea edx [esi+edx+8] +
mov esi [esp+3Ch+arg_8] +
add edx [esi+6Ch] +
mov [esp+3Ch+var_3C] eax +
mov eax [esp+3Ch+var_1C] +
call sub_442250  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_443BDE  +
mov eax [edx+10h] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_423710  +
test eax eax +
jz loc_443EDF  +
mov edx [eax+7Ch] +
test edx edx +
cmovz edx eax +
mov eax [edx+3Ch] +
test eax eax +
jz loc_443EDF  +
mov eax [esp+3Ch+arg_0] +
mov byte ptr [esi+9] 1 +
mov ecx [esp+3Ch+var_14] +
mov eax [eax+24h] +
mov [esi+34h] ecx +
mov [esi+30h] eax +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_443D15  +
test byte ptr [esi+3Ch] 70h +
jnz loc_443D15  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+3Ch+var_34] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ecx +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jz loc_443D15  +
or byte ptr [edi+5] 0Ch +
jmp loc_443D15  +
mov ecx [esp+3Ch+var_24] +
test dl dl +
mov esi ecx +
jz loc_444002  +
xor esi esi +
xor ecx ecx +
jmp loc_444002  +
lea eax [esi+30h] +
mov [esp+3Ch+var_18] eax +
jmp loc_443D15  +
mov [esp+3Ch+var_30] offset free +
mov [esp+3Ch+var_34] offset sub_442100 +
mov [esp+3Ch+var_38] offset loc_441E40 +
mov [esp+3Ch+var_3C] 1 +
call sub_460370  +
mov edx eax +
mov eax [esp+3Ch+var_28] +
test edx edx +
mov [eax+0B0h] edx +
jz loc_443EDF  +
mov eax [esi+4] +
jmp loc_443E95  +
mov esi 2 +
mov ecx 2 +
jmp loc_444002  +
mov esi 4 +
mov ecx 4 +
jmp loc_444002  +
mov [esp+3Ch+var_3C] 74h +
mov [esp+3Ch+var_18] edx +
call malloc  +
test eax eax +
jz loc_443EDF  +
mov edx [esp+3Ch+var_18] +
mov ecx 1Dh +
mov edi eax +
movs   +
mov [edx] eax +
jmp loc_443EDC  +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esi+1Ch] +
mov ecx [ebx+0ACh] +
test ecx ecx +
jnz loc_4441B2  +
mov eax [ebx+0B0h] +
test eax eax +
jz loc_4441B2  +
mov [esp+14h+var_14] eax +
call sub_4603C0  +
mov dword ptr [ebx+0B0h] 0 +
mov eax [ebx+0A4h] +
test eax eax +
jz loc_444210  +
movzx edx byte ptr [esi+3] +
mov dword ptr [eax+24h] 8 +
and edx 6 +
cmp dl 4 +
jz loc_4441D9  +
mov edx [ebx+0B8h] +
test edx edx +
jnz loc_4441F7  +
mov edx [esp+14h+arg_0] +
mov edx [edx+0A0h] +
mov edx [edx+934h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+0B4h] +
lea edx ds:0Ch[edx*8] +
mov [eax+24h] edx +
jmp loc_4441D9  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+30h] +
mov [esp+1Ch+var_18] offset a_eh_frame +
mov [esp+1Ch+var_1C] eax +
call sub_405CC0  +
test eax eax +
jz loc_444270  +
mov eax [eax+0A0h] +
test eax eax +
jnz loc_44425A  +
jmp loc_444270  +
mov eax [eax+0A0h] +
test eax eax +
jz loc_444265  +
cmp dword ptr [eax+24h] 8 +
jbe loc_444250  +
mov eax 1 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebp [eax+34h] +
test ebp ebp +
jz loc_4442C7  +
mov eax [ebp+64h] +
test eax eax +
jz loc_4442BD  +
mov edx offset a_eh_frame_entr +
nop   +
lea esi [esi+0] +
mov esi [eax] +
mov edi edx +
mov ecx 10h +
cmps   +
jz loc_4442B6  +
cmp dword ptr [eax+3Ch] offset off_473270 +
jnz loc_4442D0  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4442A0  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jnz loc_44428F  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 40h +
mov esi [esp+40h+arg_0] +
mov [esp+40h+var_4] 0 +
mov edi [esi+1Ch] +
mov ebx [edi+0A4h] +
test ebx ebx +
jz loc_4443F6  +
cmp dword ptr [ebx+3Ch] offset off_473270 +
jz loc_444396  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jz loc_444396  +
cmp al 2 +
jz loc_444380  +
cmp al 4 +
jz loc_444402  +
mov eax [esi+30h] +
lea edx [esp+40h+var_4] +
mov [esp+40h+var_1C] edx +
mov [esp+40h+var_20] 0 +
mov [esp+40h+var_24] 0 +
mov [esp+40h+var_28] 0 +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_30] ebx +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_38] offset a__gnu_eh_frame +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] esi +
call sub_41A040  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4443B3  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_444220  +
test eax eax +
jnz loc_444414  +
mov ebx [edi+0A4h] +
or dword ptr [ebx+14h] 8000h +
mov eax 1 +
mov dword ptr [edi+0A4h] 0 +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+40h+var_4] +
or byte ptr [eax+33h] 2 +
mov edx [esi+30h] +
mov byte ptr [eax+31h] 2 +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+0DCh] +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_38] 1 +
mov [esp+40h+var_40] esi +
call edx  +
mov eax [edi+0ACh] +
test eax eax +
jnz loc_4443F6  +
mov dword ptr [edi+0B8h] 1 +
add esp 40h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_444280  +
test eax eax +
jnz loc_444325  +
jmp loc_444396  +
movzx eax byte ptr [esi+3] +
mov ebx [edi+0A4h] +
and eax 6 +
jmp loc_44431D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_C] +
movzx edx word ptr [ecx+18h] +
mov eax esi +
and dx 380h +
cmp dx 180h +
jz loc_444460  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx+8Ch] +
mov edi [edx+88h] +
mov edx [ecx+28h] +
cmp esi edx +
jnb loc_4444C0  +
mov eax [edi] +
test eax eax +
jz loc_444603  +
xor edx edx +
jmp loc_44448F  +
add ebp [ecx+14h] +
cmp esi ebp +
jb loc_4444D0  +
lea edx [ebx+1] +
cmp edx eax +
jnb loc_4444A8  +
lea ebx [edx+eax] +
shr ebx 1 +
mov ecx ebx +
shl ecx 5 +
add ecx edi +
mov ebp [ecx+18h] +
cmp esi ebp +
jnb loc_444481  +
mov eax ebx +
cmp edx eax +
jb loc_44448F  +
mov [esp+2Ch+var_28] 628h +
mov [esp+2Ch+var_2C] offset a____Binutil_25 +
call sub_402930  +
jmp loc_4444D4  +
sub eax edx +
add eax [ecx+24h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx eax +
jnb loc_4444A8  +
mov edx ebx +
mov eax 0FFFFFFFFh +
shl edx 5 +
add edx edi +
movzx ecx byte ptr [edx+23h] +
test cl 2 +
jnz loc_444451  +
test cl 1 +
jz loc_4445B0  +
test byte ptr [edx+0Dh] 4 +
mov ebp [edx+18h] +
jz loc_444514  +
movzx eax byte ptr [edx+0Ch] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_444451  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+24h] +
test edx edx +
jz loc_444580  +
test byte ptr [eax+23h] 8 +
jz loc_444580  +
lea eax [ebp+8] +
mov [esp+2Ch+var_18] eax +
add eax [edx+4] +
cmp esi eax +
jb loc_444580  +
mov ecx [edx] +
test ecx ecx +
jz loc_444580  +
cmp esi eax +
jz loc_44460A  +
mov [esp+2Ch+var_14] edi +
mov eax 1 +
mov edi [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] ebx +
mov ebx ecx +
jmp loc_44456D  +
mov ecx [edx+eax*4] +
add ecx edi +
cmp ecx esi +
jz loc_44460A  +
add eax 1 +
cmp eax ebx +
jbe loc_444560  +
mov edi [esp+2Ch+var_14] +
mov ebx [esp+2Ch+var_10] +
lea esi [esi+0] +
shl ebx 5 +
add edi ebx +
movzx eax byte ptr [edi+23h] +
add edi 8 +
add esi [edi+14h] +
sub esi ebp +
test al 1 +
jz loc_4445F6  +
shr al 2 +
and eax 1 +
test byte ptr [edi+5] 10h +
jz loc_4445A4  +
add eax 1 +
add esi eax +
add eax esi +
jmp loc_444451  +
and ecx 8 +
mov ebp [edx+18h] +
jz loc_4445C8  +
lea edx [ebp+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_444451  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+8] +
test byte ptr [edx+5] 2 +
jz loc_444514  +
movzx eax byte ptr [eax+22h] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jnz loc_444514  +
jmp loc_444451  +
shr al 2 +
and eax 1 +
add eax esi +
jmp loc_444451  +
xor ebx ebx +
jmp loc_4444A8  +
mov eax 0FFFFFFFEh +
jmp loc_444451  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_8] +
mov edx [ebx+28h] +
mov eax [ebx+8Ch] +
test edx edx +
mov ebp [eax+88h] +
jnz loc_444644  +
mov eax [ebx+24h] +
mov [ebx+28h] eax +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 300h +
jz loc_444666  +
mov [esp+3Ch+var_38] 66Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_402930  +
test byte ptr [ebx+15h] 80h +
jnz loc_444672  +
test byte ptr [ebp+15h] 80h +
jz loc_444680  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+3Ch] +
mov [esp+3Ch+var_28] edx +
mov edx [ebx+38h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] edx +
call sub_4063D0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_444677  +
mov eax [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_3C] edi +
call eax  +
mov ecx [ebx+28h] +
cmp ecx 8 +
mov edi eax +
jbe loc_444734  +
mov [esp+3Ch+var_20] ebp +
mov esi 8 +
mov ebp [esp+3Ch+arg_0] +
jmp loc_4446F1  +
mov ecx [ebx+28h] +
add esi 8 +
cmp ecx esi +
jbe loc_444730  +
mov edi eax +
mov eax [ebp+4] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+2Ch] +
add ecx esi +
mov [esp+3Ch+var_3C] ecx +
call eax  +
add eax esi +
cmp eax edi +
ja loc_4446E5  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSNotInOrder +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_4730E4  +
xor eax eax +
jmp loc_444677  +
mov ebp [esp+3Ch+var_20] +
mov edi [ebp+3Ch] +
mov edx [ebp+38h] +
add edx [edi+1Ch] +
mov edi [ebx+3Ch] +
add edx [ebp+24h] +
and edx 0FFFFFFFEh +
sub edx [edi+1Ch] +
sub edx [ebx+38h] +
mov ebp edx +
sub ebp ecx +
test ebp 1 +
jnz loc_444820  +
cmp edx eax +
jbe loc_444850  +
mov eax [ebx+24h] +
cmp ecx eax +
jz loc_444672  +
mov edx [esp+3Ch+arg_0] +
add ecx 8 +
cmp eax ecx +
mov edx [edx+4] +
mov edi [edx+1B0h] +
jz loc_444797  +
mov [esp+3Ch+var_38] 69Eh +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_402930  +
mov eax [edi+1A0h] +
test eax eax +
jz loc_444880  +
mov eax [esp+3Ch+arg_0] +
lea edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_20] edx +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov ebp [eax+30h] +
mov eax [edi+1A0h] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
lea ecx [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call ebp  +
mov ecx [ebx+3Ch] +
mov [esp+3Ch+var_28] 8 +
mov eax [ebx+28h] +
add eax [ebx+38h] +
mov edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4063D0  +
jmp loc_444677  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSInvalidInput +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_4730E4  +
mov [esp+3Ch+var_3C] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_444677  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSPointsPastEn +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_4730E4  +
mov [esp+3Ch+var_3C] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_444677  +
mov [esp+3Ch+var_38] 6A0h +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_402930  +
jmp loc_4447A5  +
***
push esi  +
push esi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+5Ch+arg_4] +
mov esi [esp+5Ch+arg_0] +
mov ebx [eax+1Ch] +
movzx eax byte ptr [eax+3] +
mov edi [ebx+0A4h] +
mov byte ptr [esp+5Ch+var_34] al +
and eax 6 +
jz loc_445A81  +
test edi edi +
jz loc_445A81  +
cmp al 4 +
jz loc_445A90  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_445B58  +
mov edx [ebx+0A8h] +
mov eax 8 +
cmp edx [ebx+0B4h] +
lea ecx ds:0Ch[edx*8] +
cmovz eax ecx +
mov [esp+5Ch+var_5C] eax +
xor ebp ebp +
call sub_407460  +
test eax eax +
mov [esp+5Ch+var_20] eax +
jz loc_445A77  +
mov [esp+5Ch+var_58] offset a_eh_frame +
mov [esp+5Ch+var_5C] esi +
call sub_405CC0  +
test eax eax +
jz loc_445BA8  +
mov ebp [esp+5Ch+var_20] +
lea ecx [esp+5Ch+var_14] +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
mov byte ptr [ebp+0] 1 +
mov edx [esi+4] +
mov edx [edx+1B0h] +
mov edx [edx+128h] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_44] ecx +
mov [esp+5Ch+var_48] 4 +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call edx  +
mov [ebp+1] al +
mov ebp [ebx+0BCh] +
test ebp ebp +
jz loc_445881  +
mov eax [ebx+0B4h] +
cmp [ebx+0A8h] eax +
jz loc_445B30  +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 0FFh +
mov byte ptr [eax+3] 0FFh +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
lea edx [ebp+4] +
mov eax [eax+30h] +
mov [esp-10h+arg_0] edx +
mov edx [esp+48h] +
mov [esp+0] edx +
call eax  +
cmp byte ptr [ebp+2] 0FFh +
jz loc_445A21  +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
mov ecx [ebx+0B4h] +
mov edx ebp +
mov eax [eax+30h] +
add edx 8 +
mov [esp-10h+arg_0] edx +
mov [esp+0] ecx +
call eax  +
mov eax [ebx+0BCh] +
mov edx [ebx+0B4h] +
mov dword ptr [esp+0Ch] offset sub_442210 +
mov [esp-10h+arg_4] 0Ch +
mov [esp+0] eax +
mov [esp-10h+arg_0] edx +
call qsort  +
lea eax [ebp+10h] +
xor ebp ebp +
mov [esp+2Ch] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov [esp+30h] edi +
jmp loc_4459AD  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
lea ecx [edi-4] +
mov [esp-10h+arg_0] ecx +
mov [esp+0] eax +
call edx  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp+8] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jz loc_445B41  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
mov [esp-10h+arg_0] edi +
mov [esp+0] eax +
call edx  +
mov ecx [esp+28h] +
test ecx ecx +
jz loc_44599A  +
mov edx [ebx+0BCh] +
lea ecx [edx+ebp-0Ch] +
mov eax [ecx+4] +
add eax [ecx] +
cmp [edx+ebp] eax +
mov eax 1 +
cmovnb eax [esp+38h] +
mov [esp+38h] eax +
mov eax [esp+28h] +
add ebp 0Ch +
add dword ptr [esp+2Ch] 8 +
add eax 1 +
mov [esp+28h] eax +
mov eax [esp+28h] +
cmp eax [ebx+0B4h] +
jnb loc_4459F7  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jnz loc_445921  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_445921  +
mov edx [esp+34h] +
mov edi [esp+30h] +
test edx edx +
jnz loc_445B90  +
mov eax [esp+38h] +
test eax eax +
jnz loc_445B75  +
mov eax [esp+34h] +
or eax [esp+38h] +
jnz loc_445B62  +
mov ebp 1 +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov edi [edi+38h] +
mov dword ptr [esp+10h] 0 +
mov [esp-10h+arg_0] eax +
mov [esp+0] esi +
mov [esp+0Ch] edi +
mov edi [esp+3Ch] +
mov [esp-10h+arg_4] edi +
call sub_4063D0  +
mov [esp+0] edi +
test eax eax +
mov eax 0 +
cmovz ebp eax +
call free  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_445A77  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov ebp 1 +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [edi+24h] 8 +
jnz loc_445BD8  +
lea ebx [esp+5Ch+var_14] +
mov eax ebx +
lea edx [esp+5Ch+var_C] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_445AA4  +
mov eax [esi+4] +
mov byte ptr [esp+5Ch+var_14] 2 +
mov ebp [eax+1B0h] +
mov eax [ebp+19Ch] +
test eax eax +
jz loc_445BB9  +
mov ecx [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ecx +
call eax  +
mov [esp+49h] al +
mov eax [esi+4] +
mov edx [eax+30h] +
lea eax [esp+4Ch] +
mov [esp-10h+arg_0] eax +
mov eax [edi+3Ch] +
mov eax [eax+24h] +
sub eax 8 +
shr eax 3 +
mov [esp+0] eax +
call edx  +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov ecx [edi+38h] +
mov [esp-10h+arg_4] ebx +
mov [esp+0] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] ecx +
mov [esp-10h+arg_0] eax +
call sub_4063D0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
mov ebp eax +
mov eax ebp +
pop ebp  +
retn   +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 3 +
mov byte ptr [eax+3] 3Bh +
jmp loc_44588D  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_44595F  +
mov eax 8 +
jmp loc_4457E2  +
mov dword ptr [esp+0] 11h +
xor ebp ebp +
call sub_4029E0  +
jmp loc_445A26  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_hdr +
call eax  +
jmp loc_445A13  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_h_0 +
call eax  +
jmp loc_445A07  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_445A77  +
mov [esp+5Ch+var_58] 87Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_25 +
call sub_402930  +
mov eax [ebp+19Ch] +
jmp loc_445ACA  +
mov [esp+5Ch+var_54] offset aWrite_compact_ +
mov [esp+5Ch+var_58] 877h +
mov [esp+5Ch+var_5C] offset a____Binutil_25 +
call sub_402960  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+5Ch+var_58] +
mov eax [eax+0A0h] +
cmp byte ptr [eax+4] 2 +
setz al  +
movzx eax al +
lea eax ds:4[eax*4] +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+14h] +
mov edx [eax+3Ch] +
mov edx [edx+1Ch] +
add edx [eax+38h] +
mov eax [esp+0Ch] +
mov eax [eax+1Ch] +
sub eax edx +
mov edx [esp+1Ch] +
sub eax [esp+18h] +
add eax [esp+10h] +
mov [edx] eax +
mov eax 1Bh +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_445C80  +
mov eax [edx+4] +
mov eax [eax+0C8h] +
add esp 1Ch +
jmp eax  +
mov [esp+1Ch+var_1C] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_445CC4  +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0CCh] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_445D04  +
mov dword ptr [esp] 5 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D4h] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov ecx [esp+24h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_445D41  +
movzx eax byte ptr [ecx+28h] +
and eax 7 +
cmp al 1 +
jz loc_445D53  +
mov dword ptr [esp] 3 +
call sub_4029E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D0h] +
add esp 1Ch +
jmp eax  +
***
jmp loc_445D70  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
test ebx ebx +
jnz loc_445D88  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+20h] +
test eax eax +
jz loc_445D7D  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_445C60  +
test eax eax +
mov esi eax +
jz loc_445D7D  +
mov ebx [ebx] +
test ebx ebx +
jz loc_445D7D  +
mov dword ptr [esp+4] 2Fh +
mov [esp] eax +
call strrchr  +
mov [esp] ebx +
mov dword ptr [esp+4] 2Fh +
lea edx [eax+1] +
test eax eax +
cmovnz esi edx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call sub_45FC30  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [edx] +
mov eax [esp+44h+arg_8] +
mov esi [esp+44h+arg_0] +
mov ebx [esp+44h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_445E68  +
mov edi ebx +
mov eax 1 +
or edi esi +
jz loc_445E5A  +
mov ecx [esp+44h+arg_C] +
cmp ebx 0 +
mov edx [ecx] +
jbe loc_445E62  +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebp +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] offset aDwarfErrorOffs +
call off_4730E4  +
mov [esp+44h+var_44] 11h +
call sub_4029E0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
jb loc_445E5A  +
jmp loc_445E33  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_405CC0  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jz loc_445EE0  +
mov eax [esp+44h+var_20] +
mov eax [eax+28h] +
test eax eax +
jz loc_445ED3  +
mov edx [esp+44h+arg_C] +
test ecx ecx +
mov [edx] eax +
jz loc_445F31  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] eax +
call sub_44E9A0  +
mov edi [esp+44h+arg_8] +
test eax eax +
mov [edi] eax +
jnz loc_445E1D  +
xor eax eax +
jmp loc_445E5A  +
mov eax [esp+44h+var_20] +
mov eax [eax+24h] +
jmp loc_445E97  +
mov ebp [edx+4] +
test ebp ebp +
jz loc_445F0B  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_405CC0  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jnz loc_445E8C  +
mov eax [edx] +
mov [esp+44h+var_44] offset aDwarfErrorCanT +
mov [esp+44h+var_40] eax +
call off_4730E4  +
mov [esp+44h+var_44] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_445E5A  +
mov [esp+44h+var_44] eax +
call sub_407460  +
mov ecx [esp+44h+arg_8] +
test eax eax +
mov [ecx] eax +
jz loc_445E58  +
mov ecx [esp+44h+arg_C] +
mov edx [ecx] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edi +
call sub_4064D0  +
test eax eax +
jnz loc_445E1D  +
xor eax eax +
jmp loc_445E5A  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov [esp+38h+var_24] edx +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
mov eax [esi] +
mov [esp+38h+var_34] 1Ch +
mov [esp+38h+var_38] eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_446172  +
mov dword ptr [eax] 0 +
mov eax [esp+38h+var_24] +
test edi edi +
mov [ebx+4] eax +
mov eax ebp +
mov [ebx+18h] al +
mov eax [esp+38h+arg_4] +
mov [ebx+0Ch] eax +
mov eax [esp+38h+arg_8] +
mov [ebx+10h] eax +
mov eax [esp+38h+arg_C] +
mov [ebx+14h] eax +
movzx eax [esp+38h+arg_10] +
mov [ebx+19h] al +
jz loc_446002  +
cmp byte ptr [edi] 0 +
jnz loc_446141  +
mov dword ptr [ebx+8] 0 +
mov eax [esp+38h+var_20] +
test eax eax +
jz loc_446029  +
mov eax [eax+8] +
mov edi [eax+4] +
cmp edi [esp+38h+var_24] +
jz loc_446180  +
movzx edx byte ptr [eax+19h] +
test dl dl +
jz loc_446063  +
mov [esp+38h+var_38] 0Ch +
call sub_407460  +
test eax eax +
jz loc_446172  +
mov edx [esi+1Ch] +
mov edi [esp+38h+var_24] +
mov [eax+8] ebx +
mov [eax+4] edx +
mov [eax] edi +
add dword ptr [esi+0Ch] 1 +
mov [esi+1Ch] eax +
mov eax 1 +
mov [esi+20h] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+4] +
cmp edi ebp +
jb loc_446120  +
jz loc_446113  +
mov ecx [esi+20h] +
cmp ebp [ecx+4] +
mov [esp+38h+var_1C] ecx +
ja loc_4460C0  +
jz loc_446233  +
mov ecx [esp+38h+var_1C] +
mov ecx [ecx] +
test ecx ecx +
jz loc_446214  +
cmp ebp [ecx+4] +
ja loc_446214  +
jnz loc_4460C0  +
movzx edx byte ptr [ecx+18h] +
cmp [ebx+18h] dl +
ja loc_446214  +
lea esi [esi+0] +
jnz loc_4460C0  +
movzx edx byte ptr [ecx+19h] +
cmp [ebx+19h] dl +
jb loc_446214  +
nop   +
mov edx [eax] +
test edx edx +
jnz loc_4460F7  +
jmp loc_446260  +
cmp ebp [edx+4] +
ja loc_4461E0  +
lea esi [esi+0] +
jz loc_4461C0  +
mov ecx [edx] +
test ecx ecx +
jz loc_446210  +
mov edi [edx+4] +
mov eax edx +
mov edx ecx +
cmp ebp edi +
ja loc_4460E6  +
jnz loc_4460D0  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
ja loc_4460E6  +
jnz loc_4460D0  +
movzx ecx byte ptr [eax+19h] +
cmp [ebx+19h] cl +
jb loc_4460E6  +
jmp loc_4460D0  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
jbe loc_446074  +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax [esi+20h] +
test eax eax +
jz loc_446226  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
call strlen  +
mov edx [esi] +
mov [esp+38h+var_38] edx +
add eax 1 +
mov [esp+38h+var_34] eax +
call sub_404B80  +
test eax eax +
mov [ebx+8] eax +
jz loc_446172  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call strcpy  +
jmp loc_446009  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebp +
movzx edx byte ptr [eax+19h] +
cmp [eax+18h] cl +
jnz loc_446025  +
movzx ecx dl +
cmp ecx dword ptr [esp+38h+arg_10] +
jnz loc_446025  +
cmp eax [esi+20h] +
jz loc_446269  +
mov eax [eax] +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax 1 +
jmp loc_44605B  +
movzx ecx byte ptr [edx+18h] +
cmp [ebx+18h] cl +
ja loc_4461E0  +
jnz loc_4460E6  +
movzx ecx byte ptr [edx+19h] +
cmp [ebx+19h] cl +
jnb loc_4460E6  +
lea esi [esi+0] +
mov ecx [eax] +
mov edx eax +
mov eax [esp+38h+var_20] +
mov [esi+20h] edx +
mov esi [esp+38h+var_24] +
mov [ebx] ecx +
mov [edx] ebx +
cmp esi [eax] +
jnb loc_446134  +
mov eax [esp+38h+var_20] +
mov esi [esp+38h+var_24] +
mov [eax] esi +
jmp loc_446134  +
xor ecx ecx +
jmp loc_4461E4  +
mov eax [esp+38h+var_1C] +
mov [ebx] ecx +
mov [eax] ebx +
mov eax 1 +
jmp loc_44605B  +
mov [esi+20h] ebx +
mov eax 1 +
jmp loc_44605B  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+18h] +
cmp [ebx+18h] cl +
ja loc_4460C0  +
jnz loc_446086  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+19h] +
cmp [ebx+19h] cl +
jb loc_4460C0  +
jmp loc_446086  +
mov edx eax +
xor ecx ecx +
jmp loc_4461E4  +
mov [esi+20h] ebx +
lea esi [esi+0] +
jmp loc_4461A5  +
***
push ebx  +
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_446314  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_408FA0  +
test eax eax +
jz loc_446328  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_408EF0  +
test eax eax +
jnz loc_4462F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+34h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_446350  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+28h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_446370  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_446390  +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_4463D0  +
mov eax 1 +
ja loc_4463C7  +
mov edx [edx+8] +
mov ecx [ecx+8] +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jb loc_4463C7  +
ja loc_4463D0  +
movzx edx byte ptr [edx+18h] +
cmp [ecx+18h] dl +
jb loc_4463C7  +
setnbe al  +
movzx eax al +
neg eax  +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
add eax 0Ch +
cmp [eax+4] edx +
ja loc_4463ED  +
cmp edx [eax+8] +
jb loc_4463F6  +
mov eax [eax] +
test eax eax +
jnz loc_4463E3  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [edx+18h] +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_1C] eax +
call sub_405CC0  +
test eax eax +
jz loc_446426  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
test eax eax +
jz loc_44643D  +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ebx +
call sub_405CC0  +
test eax eax +
jnz loc_44641E  +
mov eax [ebx+64h] +
mov ebp offset a_gnu_linkonc_0 +
mov ebx 11h +
test eax eax +
jz loc_44641E  +
nop   +
mov esi [eax] +
mov edi ebp +
mov ecx ebx +
cmps   +
jz loc_44641E  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_446450  +
xor eax eax +
jmp loc_44641E  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
test ecx ecx +
jz loc_4464EA  +
mov ebx [ecx+0Ch] +
test ebx ebx +
jz loc_4464E0  +
mov eax [edx+18h] +
mov [esp+28h+var_1C] eax +
jmp loc_4464BC  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_4464A7  +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call strcmp  +
test eax eax +
jz loc_4464D2  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
jz loc_4464D2  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4464E0  +
mov esi [ebx] +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_446490  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_446400  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
cmp ecx edi +
jz loc_446551  +
mov esi [edx+8] +
mov ebx edx +
test esi esi +
jnz loc_44653E  +
mov [edx+4] ecx +
mov eax 1 +
mov [edx+8] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edi [ebx+4] +
jz loc_446560  +
mov ebx [ebx] +
test ebx ebx +
jz loc_446570  +
mov esi [ebx+8] +
cmp ecx esi +
jnz loc_446530  +
mov [ebx+8] edi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+4] ecx +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax] +
mov [esp-0Ch+arg_0] 0Ch +
mov [esp-0Ch+arg_8] ecx +
mov [esp-0Ch+arg_4] edx +
mov [esp+0] eax +
call sub_404B80  +
test eax eax +
jz loc_4465AE  +
mov ecx [esp-0Ch+arg_8] +
mov edx [esp-0Ch+arg_4] +
mov [eax+8] edi +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
jmp loc_446522  +
***
push ebx  +
sub esp 10h +
mov eax [eax+4] +
mov esi [esp+10h+arg_0] +
cmp dword ptr [eax+4] 5 +
jz loc_446617  +
movzx ebx dl +
add ebx ecx +
cmp esi ebx +
jb loc_446660  +
cmp dl 4 +
jz loc_4466A0  +
cmp dl 8 +
jz loc_446680  +
cmp dl 2 +
jz loc_4466B0  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 346h +
mov [esp+10h+var_10] offset a____Binutil_24 +
call sub_402960  +
mov ebx [eax+1B0h] +
movzx edi dl +
add edi ecx +
movzx ebx byte ptr [ebx+1ACh] +
shr bl 7 +
cmp esi edi +
jb loc_446660  +
test bl bl +
jz loc_4465E0  +
cmp dl 4 +
jz loc_446685  +
cmp dl 8 +
jz loc_446670  +
cmp dl 2 +
jz loc_446690  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 338h +
mov [esp+10h+var_10] offset a____Binutil_24 +
call sub_402960  +
nop   +
xor eax eax +
xor edx edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+20h] +
mov [esp+10h+arg_0] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [eax+1Ch] +
jmp loc_446673  +
mov eax [eax+2Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_446664  +
mov eax [eax+38h] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_446664  +
mov eax [eax+28h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_446664  +
mov eax [eax+34h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_446664  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_14] edx +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+50h] +
mov edi [eax+54h] +
test edi edi +
jz loc_44677F  +
add esi edi +
jb loc_4467B3  +
movzx edx byte ptr [ebx+58h] +
add edi [eax+58h] +
lea eax [ebx+8] +
mov [esp+2Ch+var_10] eax +
movzx ecx dl +
mov [esp+2Ch+var_18] edi +
jmp loc_44670E  +
cmp ebp 0FFFFFFFFh +
jnz loc_446756  +
mov [esp+2Ch+var_1C] eax +
mov edi [esp+2Ch+var_18] +
lea eax [esi+ecx*2] +
cmp edi eax +
jb loc_4467B3  +
mov eax [ebx+8] +
mov ecx esi +
mov [esp+2Ch+var_2C] edi +
call sub_4465C0  +
movzx edx byte ptr [ebx+58h] +
mov [esp+2Ch+var_2C] edi +
mov ebp eax +
movzx eax dl +
add esi eax +
mov eax [ebx+8] +
mov ecx esi +
call sub_4465C0  +
movzx edx byte ptr [ebx+58h] +
movzx ecx dl +
add esi ecx +
mov edi eax +
or edi ebp +
jz loc_4467C0  +
cmp eax 0FFFFFFFFh +
jnz loc_446705  +
mov edi [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_14] +
add eax edi +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
lea ecx [ebp+edi+0] +
call sub_446500  +
test eax eax +
jz loc_4467B3  +
movzx edx byte ptr [ebx+58h] +
mov eax edi +
movzx ecx dl +
jmp loc_44670A  +
mov edi [eax+8] +
lea edx [eax+58h] +
add eax 54h +
mov ecx [eax-1Ch] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+8] +
mov [esp+2Ch+var_20] edx +
add edi 58h +
mov [esp+2Ch+var_2C] 0 +
mov edx edi +
mov [esp+2Ch+var_28] 0 +
call sub_445E00  +
test eax eax +
jnz loc_4467CD  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
mov edi [eax+54h] +
jmp loc_4466E6  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edi [ecx+8] +
mov eax [esp+40h+arg_4] +
cmp [esp+40h+arg_0] eax +
jnb loc_4468B0  +
cmp edx 0Fh +
mov [esi+4] edx +
jz loc_446965  +
ja loc_446860  +
cmp edx 8 +
jz loc_446DF5  +
ja loc_4468D5  +
cmp edx 4 +
lea esi [esi+0] +
jz loc_446CD5  +
jbe loc_4469E0  +
cmp edx 6 +
nop   +
jz loc_44688C  +
ja loc_446943  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+2] +
cmp [esp+40h+arg_4] ebp +
jnb loc_446BD7  +
mov [esi+0Ch] ebx +
mov eax ebp +
mov [esi+8] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 16h +
jz loc_446D30  +
ja loc_446915  +
cmp edx 12h +
jz loc_446838  +
jbe loc_4469A4  +
cmp edx 14h +
lea esi [esi+0] +
jz loc_446943  +
ja loc_446965  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+4] +
cmp [esp+40h+arg_4] ebp +
jb loc_44684D  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_446350  +
mov ecx eax +
jmp loc_44684D  +
mov [esp+40h+var_40] offset aDwarfErrorInfo +
call off_4730E4  +
mov [esp+40h+var_40] 11h +
call sub_4029E0  +
mov eax [esp+40h+arg_0] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 0Bh +
jz loc_4468F6  +
jbe loc_446BF0  +
cmp edx 0Dh +
jz loc_446CC0  +
lea esi [esi+0] +
ja loc_446B34  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+1] +
cmp [esp+40h+arg_4] ebp +
jb loc_44684D  +
movzx ecx byte ptr [eax] +
xor ebx ebx +
jmp loc_44684D  +
cmp edx 19h +
jz loc_446DB4  +
nop   +
jbe loc_446C45  +
cmp edx 1F20h +
jz loc_446D80  +
cmp edx 1F21h +
jz loc_446A91  +
cmp edx 20h +
jnz loc_4469B6  +
mov eax [esp+40h+arg_0] +
xor edx edx +
lea ebp [eax+8] +
xor eax eax +
cmp [esp+40h+arg_4] ebp +
jnb loc_446DD0  +
mov [esi+8] eax +
mov eax ebp +
mov [esi+0Ch] edx +
jmp loc_4468CD  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] eax +
call sub_408020  +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
add eax [esp+40h+var_14] +
jmp loc_4468CD  +
cmp edx 10h +
jz loc_446A54  +
cmp edx 11h +
jz loc_4468F6  +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] offset aDwarfErrorIn_0 +
call off_4730E4  +
mov [esp+40h+var_40] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_4468CD  +
cmp edx 1 +
jz loc_446A28  +
cmp edx 3 +
jnz loc_4469B6  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_4469D3  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+2] +
cmp [esp+40h+arg_4] ecx +
jnb loc_446E24  +
mov dword ptr [ebx] 0 +
mov ebp ecx +
xor ecx ecx +
mov [ebx+4] ecx +
mov eax ebp +
mov [esi+8] ebx +
jmp loc_4468CD  +
mov edi [esp+40h+arg_4] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov ecx [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
call sub_4465C0  +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+58h] +
add eax ebp +
jmp loc_4468CD  +
mov eax [ecx+54h] +
sub eax 3 +
cmp eax 1 +
ja loc_446A28  +
cmp byte ptr [ecx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_446FB9  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_446FDD  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx eax byte ptr [ebx+59h] +
add eax [esp+40h+arg_0] +
jmp loc_4468CD  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_446EF0  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
jz loc_446E55  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_446F1D  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+20h] +
mov [esp+40h+var_14] ecx +
test eax eax +
jz loc_446F38  +
mov ecx [ebp+8] +
mov eax [ebx+50h] +
lea edx [ecx+78h] +
lea ecx [ebp+28h] +
mov eax [eax+20h] +
mov [esp+40h+var_34] ecx +
lea ecx [ebp+24h] +
mov [esp+40h+var_38] ecx +
mov ecx [esp+40h+var_2C] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] ecx +
xor ecx ecx +
call sub_445E00  +
test eax eax +
jz loc_446B20  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+28h] +
ja loc_446B20  +
cmp edi eax +
jb loc_446DE1  +
nop   +
mov ebp [esp+40h+var_14] +
xor edi edi +
mov eax [esp+40h+arg_0] +
mov [esi+8] edi +
add eax ebp +
jmp loc_4468CD  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_446EF0  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_28] edi +
jz loc_446E81  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_446EF9  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+8] +
mov [esp+40h+var_14] ecx +
mov ecx [ebp+38h] +
mov [esp+40h+var_40] edi +
lea edx [eax+70h] +
lea eax [ebp+50h] +
mov [esp+40h+var_34] eax +
lea eax [ebp+4Ch] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_2C] +
mov [esp+40h+var_3C] eax +
mov eax [esp+40h+var_28] +
call sub_445E00  +
test eax eax +
jz loc_446B20  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+50h] +
ja loc_446B20  +
cmp edi eax +
jnb loc_446B20  +
add edi [ebp+4Ch] +
cmp byte ptr [edi] 0 +
jz loc_446B20  +
mov ebp [esp+40h+var_14] +
jmp loc_446B26  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_446330  +
mov ecx eax +
jmp loc_44684D  +
cmp edx 9 +
jz loc_446C57  +
cmp edx 0Ah +
jnz loc_4469B6  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_404B80  +
test eax eax +
jz loc_4469D3  +
mov edi [esp+40h+arg_0] +
lea edx [edi+1] +
cmp [esp+40h+arg_4] edx +
jb loc_446E15  +
movzx ebp byte ptr [edi] +
mov [eax] ebp +
add ebp edx +
cmp [esp+40h+arg_4] ebp +
jb loc_44700D  +
mov [eax+4] edx +
mov [esi+8] eax +
mov eax ebp +
jmp loc_4468CD  +
cmp edx 17h +
jz loc_446D80  +
cmp edx 18h +
jnz loc_4469B6  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_4469D3  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_408020  +
mov ecx [esp+40h+arg_0] +
xor edx edx +
add ecx [esp+40h+var_14] +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
mov [ebx] eax +
mov eax ebp +
cmovnb edx ecx +
mov [ebx+4] edx +
mov [esi+8] ebx +
jmp loc_4468CD  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_30] eax +
jmp loc_446975  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_4469D3  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+4] +
cmp [esp+40h+arg_4] ecx +
jb loc_446A11  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_446350  +
mov ecx [esp+40h+var_2C] +
mov [ebx] eax +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
jnb loc_446A1B  +
mov ecx ebp +
jmp loc_446A17  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_408020  +
mov edx [esp+40h+arg_0] +
mov ecx ebx +
mov edi [esp+40h+arg_4] +
add edx [esp+40h+var_14] +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] edx +
mov edx eax +
mov eax esi +
call sub_4467E0  +
jmp loc_4468CD  +
cmp byte ptr [ebx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_446E39  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_446EDF  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+59h] +
mov eax [esp+40h+arg_0] +
add eax ebp +
jmp loc_4468CD  +
mov dword ptr [esi+8] 1 +
mov eax [esp+40h+arg_0] +
mov dword ptr [esi+0Ch] 0 +
jmp loc_4468CD  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_446370  +
jmp loc_446958  +
add edi [ebp+24h] +
cmp byte ptr [edi] 0 +
jnz loc_446BCE  +
lea esi [esi+0] +
jmp loc_446B20  +
mov eax [esp+40h+arg_0] +
cmp byte ptr [eax] 0 +
jnz loc_446EB6  +
mov eax 1 +
xor edx edx +
mov [esi+8] edx +
add eax [esp+40h+arg_0] +
jmp loc_4468CD  +
mov dword ptr [eax] 0 +
mov ebp edx +
xor edx edx +
jmp loc_446C38  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_446330  +
jmp loc_446D10  +
add eax 4 +
xor edx edx +
xor ecx ecx +
cmp [esp+40h+arg_4] eax +
jnb loc_446FA4  +
mov [esi+8] edx +
mov [esi+0Ch] ecx +
jmp loc_446DA5  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_446AC4  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_446350  +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov edi eax +
jmp loc_446ACE  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_446B6B  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_446350  +
mov edi [ebx+8] +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_28] edi +
mov edi eax +
jmp loc_446B75  +
mov eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_4] +
add eax 1 +
jmp loc_446ED0  +
add eax 1 +
cmp byte ptr [eax-1] 0 +
jz loc_446F97  +
cmp eax edx +
jnz loc_446EC3  +
sub eax [esp+40h+arg_0] +
xor edx edx +
jmp loc_446E09  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_446370  +
jmp loc_446D9F  +
xor ebp ebp +
xor edi edi +
jmp loc_446B26  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_446370  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov eax [ebx+8] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_28] eax +
jmp loc_446B75  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_446370  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov [esp+40h+var_2C] edx +
jmp loc_446ACE  +
mov eax [ebx+8] +
mov [esp+40h+var_3C] offset aHomeJenkinsM_0 +
mov [esp+40h+var_40] eax +
call sub_404FC0  +
test eax eax +
mov [esp+40h+var_28] eax +
jz loc_446B20  +
mov eax [esp+40h+var_28] +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] eax +
call sub_4046B0  +
test eax eax +
jz loc_446FF6  +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_24] eax +
call sub_405A00  +
mov edx [esp+40h+var_24] +
test eax eax +
jz loc_446FEE  +
mov [ebp+20h] edx +
jmp loc_446ADD  +
sub eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_0] +
jmp loc_446E09  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_446350  +
xor ecx ecx +
mov edx eax +
jmp loc_446E4A  +
lea ecx [eax+4] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jb loc_446A7E  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_446350  +
xor edx edx +
jmp loc_446A7E  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_446370  +
jmp loc_446A7E  +
mov [esp+40h+var_40] edx +
call sub_4047F0  +
mov eax [esp+40h+var_28] +
xor edi edi +
mov [esp+40h+var_40] eax +
call free  +
mov ebp [esp+40h+var_14] +
jmp loc_446B26  +
mov edx ebp +
jmp loc_446E1B  +
***
push esi  +
push ebx  +
sub esp 2Ch +
lea ecx [edx-1] +
cmp ecx [eax+4] +
jb loc_447050  +
test edx edx +
jnz loc_447110  +
mov [esp+2Ch+var_2C] offset aUnknown_5 +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [eax+18h] +
mov ebx [edx] +
movzx ecx byte ptr [ebx] +
cmp cl 5Ch +
jz loc_447100  +
cmp cl 2Fh +
jz loc_447100  +
test cl cl +
jnz loc_4470F2  +
mov edx [edx+4] +
test edx edx +
jz loc_447087  +
cmp edx [eax+8] +
jbe loc_447122  +
mov edi [eax+10h] +
test edi edi +
jz loc_447100  +
xor esi esi +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov ebp eax +
call strlen  +
add ebp eax +
test esi esi +
jz loc_4471A8  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea eax [ebp+eax+3] +
mov [esp+2Ch+var_2C] eax +
call sub_407460  +
mov ebp eax +
xor eax eax +
test ebp ebp +
jz loc_447043  +
mov [esp+2Ch+var_1C] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] offset aSSS_0 +
call sprintf  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 3Ah +
jnz loc_447077  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] ebx +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] offset aDwarfErrorMang +
call off_4730E4  +
jmp loc_447037  +
mov ecx [eax+14h] +
test ecx ecx +
jz loc_447087  +
mov esi [ecx+edx*4-4] +
test esi esi +
jz loc_447087  +
movzx edx byte ptr [esi] +
cmp dl 5Ch +
jz loc_447155  +
cmp dl 2Fh +
jz loc_447155  +
test dl dl +
jnz loc_4471A0  +
mov edi [eax+10h] +
test edi edi +
jnz loc_447090  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call strlen  +
lea ebp [edi+eax+2] +
mov [esp+2Ch+var_2C] ebp +
call sub_407460  +
mov edi eax +
xor eax eax +
test edi edi +
jz loc_447043  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset aSS_7 +
mov [esp+2Ch+var_2C] edi +
call sprintf  +
mov eax edi +
jmp loc_447043  +
cmp byte ptr [esi+1] 3Ah +
jnz loc_44714A  +
jmp loc_447155  +
add ebp 2 +
mov esi edi +
jmp loc_44716B  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 7Ch +
mov ecx [edx+38h] +
mov [esp+80h+var_34] eax +
mov eax [eax+8] +
mov edi eax +
mov [esp+80h+var_68] eax +
mov eax [edx+8] +
lea edx [eax+28h] +
lea eax [ebx+48h] +
mov [esp+80h+var_74] eax +
lea eax [ebx+44h] +
mov [esp+80h+var_78] eax +
mov eax [esi+38h] +
mov [esp+80h+var_7C] 0 +
mov [esp+80h+var_80] eax +
mov eax edi +
call sub_445E00  +
test eax eax +
jz loc_4472ED  +
mov edi [esp+80h+var_68] +
mov [esp+80h+var_7C] 24h +
mov [esp+80h+var_80] edi +
call sub_404B80  +
test eax eax +
mov esi eax +
mov [esp+80h+var_6C] eax +
jz loc_4472ED  +
mov [eax] edi +
mov eax [esp+80h+var_34] +
mov eax [eax+28h] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+8] 0 +
mov [esi+10h] eax +
mov eax [ebx+48h] +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+1Ch] 0 +
cmp eax 0Fh +
mov dword ptr [esi+20h] 0 +
jbe loc_447E3E  +
mov esi [esp+80h+var_34] +
mov edx [ebx+44h] +
mov edi [esi+38h] +
lea ebp [edx+eax] +
mov eax [esp+80h+var_68] +
add edi edx +
lea esi [edi+4] +
add eax 4 +
cmp ebp esi +
mov [esp+80h+var_30] eax +
jnb loc_4472F7  +
mov eax [esp+80h+var_34] +
cmp byte ptr [eax+58h] 8 +
jz loc_447B67  +
mov edi 4 +
xor eax eax +
lea ebp [esi+eax] +
xor eax eax +
lea ebx [esi+2] +
cmp ebp ebx +
jnb loc_447352  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorUnha +
call off_4730E4  +
mov [esp+80h+var_80] 11h +
call sub_4029E0  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] offset aDwarfErrorRanO +
call off_4730E4  +
mov dword ptr [esp+0] 11h +
call sub_4029E0  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+80h+var_30] +
mov edx edi +
call sub_446350  +
cmp eax 0FFFFFFFFh +
jnz loc_447ECC  +
add edi 0Ch +
xor eax eax +
cmp ebp edi +
jnb loc_447B7E  +
mov esi edi +
mov edi 8 +
mov edx [ebx+48h] +
cmp edx eax +
jnb loc_44729D  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_78] edx +
mov [esp+80h+var_80] offset aDwarfErrorLine +
call off_4730E4  +
mov [esp+80h+var_80] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_4472CC  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_446330  +
mov ecx eax +
lea eax [eax-2] +
cmp ax 2 +
ja loc_447EC4  +
xor eax eax +
cmp cx 4 +
setz al  +
lea eax [edi+eax+5] +
add eax ebx +
cmp ebp eax +
jbe loc_447E62  +
cmp edi 4 +
jz loc_447BF4  +
add esi 0Ah +
cmp ebp esi +
jnb loc_447C4F  +
add ebx edi +
lea eax [ebx+1] +
cmp ebp eax +
mov [esp+80h+var_40] 0 +
jb loc_4473AF  +
movzx esi byte ptr [ebx] +
mov [esp+80h+var_40] esi +
cmp cx 4 +
jnz loc_4473E0  +
lea eax [ebx+2] +
cmp ebp eax +
jnb loc_447B52  +
mov [esp+80h+var_80] offset aDwarfErrorInva +
call off_4730E4  +
mov [esp+80h+var_80] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_4472CC  +
mov [esp+80h+var_49] 1 +
lea edx [eax+2] +
cmp ebp edx +
mov [esp+80h+var_38] 0 +
jb loc_447405  +
movzx esi byte ptr [eax+1] +
lea edx [esi-80h] +
movzx edx dl +
lea esi [edx-80h] +
mov [esp+80h+var_38] esi +
lea edx [eax+3] +
cmp ebp edx +
jb loc_447AF5  +
movzx ecx byte ptr [eax+2] +
movzx esi cl +
mov [esp+80h+var_4A] cl +
mov [esp+80h+var_28] esi +
lea esi [eax+4] +
cmp ebp esi +
jb loc_447ADE  +
movzx eax byte ptr [eax+3] +
mov [esp+80h+var_4B] al +
mov [esp+80h+var_5C] eax +
sub eax 1 +
add eax esi +
cmp ebp eax +
jbe loc_4472D4  +
mov edi [esp+80h+var_5C] +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] eax +
call sub_404B80  +
cmp edi 1 +
mov [esp+80h+var_2C] eax +
mov ebx eax +
mov byte ptr [eax] 1 +
jbe loc_44748E  +
add eax 1 +
add ebx edi +
mov edx esi +
lea esi [esi+0] +
add edx 1 +
xor ecx ecx +
cmp ebp edx +
jb loc_44747D  +
movzx ecx byte ptr [edx-1] +
mov [eax] cl +
add eax 1 +
cmp eax ebx +
jnz loc_447470  +
mov eax [esp+80h+var_5C] +
lea esi [esi+eax-1] +
cmp esi ebp +
jnb loc_447A40  +
movzx eax byte ptr [esi] +
test al al +
jz loc_447A67  +
test al al +
lea ebx [esi+1] +
jnz loc_4474BD  +
jmp loc_447881  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_447881  +
cmp ebp ebx +
nop   +
ja loc_4474B0  +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
cmp ebp ebx +
jbe loc_447A58  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_4479E9  +
mov edi [esp+80h+var_6C] +
lea esi [esp+80h+var_14] +
test al al +
lea edx [ebx+1] +
jnz loc_4474FE  +
jmp loc_447900  +
add edx 1 +
cmp byte ptr [edx-1] 0 +
jz loc_447900  +
cmp ebp edx +
ja loc_4474F1  +
mov edi edx +
sub edi ebx +
mov [esp+80h+var_14] edi +
add edi ebx +
cmp ebp edi +
jbe loc_447D1C  +
mov eax [esp+80h+var_5C] +
mov [esp+80h+var_48] 0FFh +
sub [esp+80h+var_48] eax +
mov [esp+80h+var_64] ebp +
mov eax [esp+80h+var_6C] +
mov [esp+80h+var_44] 0 +
mov edx [eax+4] +
test edx edx +
jnz loc_447C67  +
mov [esp+80h+var_50] 0 +
xor esi esi +
mov [esp+80h+var_54] 0FFFFFFFFh +
mov [esp+80h+var_5C] 0 +
mov [esp+80h+var_3C] 0 +
mov [esp+80h+var_58] 1 +
mov byte ptr [esp+80h+var_60] 0 +
nop   +
lea ebx [edi+1] +
cmp [esp+80h+var_64] ebx +
jb loc_44764E  +
movzx ecx byte ptr [edi] +
cmp cl [esp+80h+var_4B] +
movzx ebp cl +
jb loc_44765C  +
sub cl [esp+80h+var_4B] +
cmp [esp+80h+var_4A] 0 +
jz loc_4477F4  +
cmp [esp+80h+var_49] 1 +
jz loc_447A28  +
movzx ecx cl +
movzx edx byte ptr [esp+80h+var_60] +
mov eax ecx +
movzx edi [esp+80h+var_49] +
div  [esp+80h+var_4A] +
movzx eax al +
add eax edx +
cdq   +
idiv  edi +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax ah +
add eax [esp+80h+var_38] +
add [esp+80h+var_58] eax +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 0 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_445F90  +
test eax eax +
jz loc_4477F4  +
mov eax [esp+80h+var_54] +
mov edi ebx +
lea ebx [edi+1] +
mov [esp+80h+var_5C] 0 +
cmp eax esi +
cmova eax esi +
mov [esp+80h+var_54] eax +
mov eax [esp+80h+var_50] +
cmp eax esi +
cmovb eax esi +
cmp [esp+80h+var_64] ebx +
mov [esp+80h+var_50] eax +
jnb loc_44757D  +
xor ecx ecx +
xor ebp ebp +
cmp cl [esp+80h+var_4B] +
jnb loc_44758D  +
cmp ebp 9 +
ja loc_447A7D  +
jmp ds:off_48CB90[ebp*4]  +
mov edi ebx +
nop   +
jmp loc_447570  +
add edi 3 +
xor eax eax +
cmp [esp+80h+var_64] edi +
jnb loc_447C3F  +
add esi eax +
mov byte ptr [esp+80h+var_60] 0 +
jmp loc_447570  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408020  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov [esp+80h+var_3C] eax +
jmp loc_447570  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408020  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov ebp eax +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_447707  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov edx ebp +
call sub_447020  +
mov [esp+80h+var_44] eax +
jmp loc_447570  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 1 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408020  +
add [esp+80h+var_58] eax +
mov edi [esp+80h+var_14] +
add edi ebx +
jmp loc_447570  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
cmp [esp+80h+var_49] 1 +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
jz loc_447C2E  +
call sub_408020  +
movzx edx byte ptr [esp+80h+var_60] +
movzx ecx [esp+80h+var_49] +
add eax edx +
xor edx edx +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
mov esi eax +
jmp loc_447747  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov ecx [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] ecx +
call sub_408020  +
add ebx [esp+80h+var_14] +
lea edi [ebx+1] +
cmp [esp+80h+var_64] edi +
jnb loc_447B07  +
mov [esp+80h+var_80] offset aDwarfErrorMa_0 +
call off_4730E4  +
mov [esp+80h+var_80] 11h +
call sub_4029E0  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_447804  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_447817  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
test eax eax +
jz loc_44782A  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+14h] +
test eax eax +
jz loc_4472ED  +
mov [esp+80h+var_80] eax +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+80h+var_49] 1 +
jz loc_447C17  +
mov eax [esp+80h+var_48] +
mov edi ebx +
movzx ecx byte ptr [esp+80h+var_60] +
cdq   +
idiv  [esp+80h+var_28] +
xor edx edx +
add eax ecx +
movzx ecx [esp+80h+var_49] +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
jmp loc_447570  +
mov edi [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
mov ecx [edi+8] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_4478D0  +
mov eax [edi+14h] +
mov edi [esp+80h+var_6C] +
lea edx [ecx+1] +
cmp ebp ebx +
mov [edi+8] edx +
mov [eax+ecx*4] esi +
jbe loc_447A42  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_447A69  +
mov esi ebx +
jmp loc_4474A1  +
mov edi [esp+80h+var_6C] +
lea edx ds:14h[ecx*4] +
mov eax [edi+14h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_4074F0  +
test eax eax +
jz loc_447804  +
mov [edi+14h] eax +
mov ecx [edi+8] +
jmp loc_4478A6  +
mov ecx [edi+4] +
sub edx ebx +
lea eax [ebx+edx] +
mov [esp+80h+var_60] eax +
mov eax 0CCCCCCCDh +
mov [esp+80h+var_14] edx +
mul  ecx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_447A00  +
mov eax [edi+18h] +
shl ecx 4 +
add ecx eax +
mov eax [esp+80h+var_68] +
mov [ecx] ebx +
mov ebx [esp+80h+var_60] +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_64] ecx +
call sub_408020  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_14] +
add edx ebx +
mov ebx [edi+4] +
mov [ecx+4] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_64] edx +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_408020  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [esp+80h+var_64] edx +
mov [ebx+8] eax +
mov ebx [edi+4] +
mov eax [esp+80h+var_68] +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_408020  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov ebx edx +
add dword ptr [edi+4] 1 +
cmp ebp edx +
jbe loc_447A58  +
movzx eax byte ptr [edx] +
test al al +
jnz loc_4474E5  +
mov [esp+80h+var_14] 1 +
mov edi 1 +
jmp loc_44750A  +
mov eax [edi+18h] +
add ecx 5 +
shl ecx 4 +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_4074F0  +
test eax eax +
jz loc_447804  +
mov [edi+18h] eax +
mov ecx [edi+4] +
jmp loc_447928  +
movzx ecx cl +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax al +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_4475CD  +
mov ebx esi +
mov esi ebx +
xor ebx ebx +
add ebx esi +
cmp ebp ebx +
mov [esp+80h+var_14] 0 +
ja loc_4474D2  +
mov [esp+80h+var_14] 0 +
xor edi edi +
jmp loc_44750A  +
mov ebx esi +
mov esi ebx +
mov ebx 1 +
mov [esp+80h+var_14] 1 +
jmp loc_4474C8  +
add ebp [esp+80h+var_2C] +
mov edi ebx +
xor ebx ebx +
mov eax ebp +
cmp byte ptr [eax] 0 +
lea ebp [esp+80h+var_14] +
jz loc_447570  +
mov [esp+80h+var_24] esi +
mov esi edi +
mov edi ebp +
mov ebp eax +
nop   +
mov eax [esp+80h+var_64] +
add ebx 1 +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] edi +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408020  +
movzx eax byte ptr [ebp+0] +
add esi [esp+80h+var_14] +
cmp eax ebx +
ja loc_447AA0  +
mov edi esi +
mov esi [esp+80h+var_24] +
jmp loc_447570  +
mov eax 0FFFFFFFFh +
mov [esp+80h+var_4B] 0 +
mov [esp+80h+var_5C] 0 +
jmp loc_447439  +
mov [esp+80h+var_4A] 0 +
mov [esp+80h+var_28] 0 +
jmp loc_44741F  +
movzx edx byte ptr [ebx] +
cmp dl 3 +
jz loc_447B8E  +
ja loc_447C7A  +
cmp dl 1 +
jz loc_447C95  +
cmp dl 2 +
jnz loc_4477DB  +
mov ebx [esp+80h+var_34] +
mov ecx edi +
mov esi [esp+80h+var_64] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov [esp+80h+var_80] esi +
call sub_4465C0  +
mov byte ptr [esp+80h+var_60] 0 +
mov esi eax +
movzx eax byte ptr [ebx+58h] +
add edi eax +
jmp loc_447570  +
movzx ecx byte ptr [ebx+1] +
test cl cl +
mov [esp+80h+var_49] cl +
jnz loc_4473E5  +
jmp loc_4473C0  +
add edi 8 +
cmp ebp edi +
jnb loc_447E82  +
mov esi edi +
mov edi 8 +
jmp loc_44729B  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_446370  +
jmp loc_447318  +
cmp [esp+80h+var_64] edi +
ja loc_447E24  +
mov [esp+80h+var_14] 0 +
xor eax eax +
xor ebx ebx +
add edi eax +
mov eax [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
mov ecx [eax+4] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jnz loc_447D65  +
mov eax [esp+80h+var_6C] +
add ecx 5 +
shl ecx 4 +
mov eax [eax+18h] +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_4074F0  +
test eax eax +
jz loc_4477F4  +
mov ecx [esp+80h+var_6C] +
mov [ecx+18h] eax +
mov ecx [ecx+4] +
jmp loc_447D6C  +
add esi 6 +
cmp ebp esi +
jb loc_447397  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_446350  +
mov ecx [esp+80h+var_64] +
jmp loc_447397  +
mov eax [esp+80h+var_48] +
mov edi ebx +
cdq   +
idiv  [esp+80h+var_28] +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_447570  +
call sub_408020  +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_447747  +
mov eax [esp+80h+var_30] +
mov edx ebx +
call sub_446330  +
jmp loc_447684  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_446370  +
mov ecx [esp+80h+var_64] +
jmp loc_447397  +
mov edx 1 +
call sub_447020  +
mov [esp+80h+var_44] eax +
jmp loc_44753F  +
cmp dl 4 +
jz loc_447D34  +
cmp dl 80h +
jnz loc_4477DB  +
lea edi [edi+eax-1] +
jmp loc_447570  +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 1 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_445F90  +
test eax eax +
jz loc_4477F4  +
mov eax [esp+80h+var_34] +
mov ecx [esp+80h+var_54] +
lea edx [eax+0Ch] +
lea ebx [eax+8] +
mov eax [esp+80h+var_50] +
cmp ecx esi +
cmova ecx esi +
cmp eax esi +
cmovb eax esi +
mov [esp+80h+var_80] eax +
mov eax ebx +
call sub_446500  +
test eax eax +
jz loc_4477F4  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_447D12  +
mov [esp+80h+var_80] eax +
call free  +
cmp [esp+80h+var_64] edi +
ja loc_447528  +
mov eax [esp+80h+var_6C] +
mov esi [eax+0Ch] +
test esi esi +
jnz loc_447EDE  +
mov eax [esp+80h+var_6C] +
jmp loc_4472CC  +
mov eax [esp+80h+var_64] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408020  +
add edi [esp+80h+var_14] +
mov [esp+80h+var_5C] eax +
jmp loc_447570  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
shl ecx 4 +
lea edx [eax+ecx] +
mov eax [esp+80h+var_64] +
mov [edx] ebx +
mov [esp+80h+var_24] edx +
mov edx [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_78] ebp +
call sub_408020  +
mov edx [esp+80h+var_24] +
mov ecx [esp+80h+var_64] +
add edi [esp+80h+var_14] +
mov [edx+4] eax +
mov eax [esp+80h+var_6C] +
mov edx [esp+80h+var_68] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
call sub_408020  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_68] +
add edi [esp+80h+var_14] +
mov [ebx+8] eax +
mov eax [esp+80h+var_6C] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] edx +
call sub_408020  +
add edi [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov eax [esp+80h+var_6C] +
add dword ptr [eax+4] 1 +
jmp loc_447570  +
cmp byte ptr [ebx+1] 0 +
jnz loc_447E92  +
mov [esp+80h+var_14] 1 +
mov eax 1 +
xor ebx ebx +
jmp loc_447BA4  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorLi_0 +
call off_4730E4  +
mov [esp+80h+var_80] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_4472CC  +
mov [esp+80h+var_80] offset aDwarfErrorRa_0 +
call off_4730E4  +
mov [esp+80h+var_80] 11h +
call sub_4029E0  +
xor eax eax +
jmp loc_4472CC  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_446350  +
jmp loc_447318  +
add ebx 2 +
jmp loc_447EA0  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_447EB5  +
cmp [esp+80h+var_64] ebx +
ja loc_447E97  +
mov eax ebx +
xor ebx ebx +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_447BA4  +
mov eax ebx +
mov ebx edi +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_447BA4  +
movzx eax cx +
jmp loc_4472AD  +
test eax eax +
jz loc_447288  +
mov edi 4 +
jmp loc_44731F  +
mov edi eax +
mov eax [eax] +
lea edx [esi+esi*2] +
shl edx 2 +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_404B80  +
test eax eax +
mov ebx eax +
jz loc_447804  +
mov eax [edi+1Ch] +
mov ebp ebx +
xor edi edi +
jmp loc_447F38  +
mov edx [eax] +
add edi 1 +
add ebp 0Ch +
mov dword ptr [ebp-8] 0 +
mov [ebp-0Ch] edx +
mov edx [eax+8] +
mov [ebp-4] edx +
mov edx [eax+4] +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_68] edx +
call free  +
cmp edi esi +
mov edx [esp+80h+var_68] +
jz loc_447F5A  +
mov eax edx +
test eax eax +
jnz loc_447F07  +
mov [esp+80h+var_7C] 648h +
mov [esp+80h+var_80] offset a____Binutil_24 +
mov [esp+80h+var_68] eax +
call sub_402930  +
mov eax [esp+80h+var_68] +
jmp loc_447F07  +
test edx edx +
jz loc_447F72  +
mov [esp+80h+var_7C] 64Fh +
mov [esp+80h+var_80] offset a____Binutil_24 +
call sub_402930  +
mov [esp+80h+var_74] offset sub_446390 +
mov [esp+80h+var_78] 0Ch +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_80] ebx +
call qsort  +
mov eax [ebx+8] +
mov ecx [eax+4] +
mov eax [esp+80h+var_6C] +
mov eax [eax+0Ch] +
cmp eax 1 +
mov [esp+80h+var_64] eax +
jbe loc_447FF2  +
mov eax ebx +
mov edx 1 +
mov ebp 1 +
mov [esp+80h+var_68] ebx +
cmp [eax+0Ch] ecx +
mov esi [eax+14h] +
jnb loc_447FC4  +
cmp [esi+4] ecx +
jbe loc_447FE0  +
mov [eax+0Ch] ecx +
cmp edx ebp +
mov ecx [esi+4] +
jnb loc_447FDD  +
mov ebx [esp+80h+var_68] +
lea edi [edx+edx*2] +
lea edi [ebx+edi*4] +
mov ebx [eax+0Ch] +
mov [edi+8] esi +
mov [edi] ebx +
add edx 1 +
add ebp 1 +
add eax 0Ch +
cmp ebp [esp+80h+var_64] +
jnz loc_447FB4  +
mov ebx [esp+80h+var_68] +
jmp loc_447FF7  +
mov edx 1 +
mov eax [esp+80h+var_6C] +
mov [eax+1Ch] ebx +
mov [eax+0Ch] edx +
jmp loc_447D2B  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [eax+8] +
mov ebp [eax+3Ch] +
mov [esp+7Ch+var_64] eax +
mov [esp+7Ch+var_50] edi +
mov edi eax +
mov eax [eax+50h] +
mov eax [eax+10h] +
mov [esp+7Ch+var_7C] 80h +
mov esi eax +
mov [esp+7Ch+var_60] eax +
call sub_407460  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_448A17  +
cmp ebp esi +
mov dword ptr [eax+4] 0 +
jnb loc_448438  +
mov eax edi +
add eax 8 +
mov [esp+7Ch+var_38] 20h +
mov [esp+7Ch+var_54] 1 +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_6C] eax +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call sub_408020  +
add ebp [esp+7Ch+var_20] +
test eax eax +
mov ecx eax +
jnz loc_448450  +
sub [esp+7Ch+var_54] 1 +
mov eax [esp+7Ch+var_54] +
test eax eax +
jz loc_448A55  +
cmp ebp [esp+7Ch+var_60] +
jb loc_4483EF  +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call free  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add edx eax +
mov eax ecx +
shr edx 6 +
imul edx edx +
sub eax edx +
mov edx eax +
mov eax [esp+7Ch+var_64] +
mov eax [eax+1Ch] +
mov ebx [eax+edx*4] +
test ebx ebx +
jnz loc_44848B  +
jmp loc_448860  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_448860  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_448480  +
mov eax [ebx+4] +
cmp eax 2Eh +
jz loc_448635  +
cmp eax 3 +
jz loc_448635  +
cmp eax 1Dh +
jz loc_448635  +
cmp eax 34h +
mov [esp+7Ch+var_5C] 0 +
jz loc_4489BB  +
mov edi [esp+7Ch+var_54] +
mov eax [esp+7Ch+var_44] +
mov dword ptr [eax+edi*4] 0 +
xor edi edi +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_448603  +
lea eax [edi+1Ch] +
xor esi esi +
mov [esp+7Ch+var_40] eax +
lea eax [edi+24h] +
mov [esp+7Ch+var_48] 0 +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_3C] eax +
jmp loc_44853C  +
cmp eax 12h +
jz loc_4487A5  +
ja loc_4486D6  +
cmp eax 3 +
jz loc_448750  +
cmp eax 11h +
mov eax [esp+7Ch+var_58] +
cmovz eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_58] eax +
nop   +
add esi 1 +
cmp [ebx+0Ch] esi +
jbe loc_4485C2  +
mov eax [ebx+10h] +
mov ecx [esp+7Ch+var_64] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+7Ch+var_1C] edx +
mov edx [eax+4] +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_1C] +
call sub_4467E0  +
test eax eax +
mov ebp eax +
jz loc_448438  +
test edi edi +
jz loc_448691  +
mov eax [esp+7Ch+var_1C] +
cmp eax 3Bh +
jz loc_448740  +
jbe loc_448507  +
cmp eax 58h +
jz loc_4487F3  +
lea esi [esi+0] +
jbe loc_448700  +
cmp eax 6Eh +
jz loc_4487C0  +
cmp eax 2007h +
jz loc_4487C0  +
cmp eax 59h +
jnz loc_448530  +
mov eax [esp+7Ch+var_14] +
add esi 1 +
cmp [ebx+0Ch] esi +
mov [edi+10h] eax +
ja loc_44853C  +
mov esi [esp+7Ch+var_48] +
test esi esi +
jz loc_448950  +
mov eax [esp+7Ch+var_58] +
add [esp+7Ch+var_4C] eax +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
test al al +
jz loc_448603  +
mov eax [esp+7Ch+var_4C] +
lea edx [edi+24h] +
mov ecx [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_34] +
call sub_446500  +
test eax eax +
jz loc_448438  +
mov edx [ebx+8] +
test edx edx +
jz loc_448426  +
add [esp+7Ch+var_54] 1 +
mov eax [esp+7Ch+var_38] +
cmp [esp+7Ch+var_54] eax +
jge loc_448A21  +
mov eax [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_54] +
mov dword ptr [eax+edi*4] 0 +
jmp loc_448426  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] 34h +
mov [esp+7Ch+var_7C] eax +
call sub_404C60  +
test eax eax +
mov edi eax +
jz loc_448438  +
mov ecx [esp+7Ch+var_64] +
mov eax [ebx+4] +
mov edx [ecx+48h] +
mov [edi+18h] eax +
mov [edi] edx +
mov edx [ecx+60h] +
mov [ecx+48h] edi +
test edx edx +
jnz loc_448965  +
cmp eax 1Dh +
jz loc_448985  +
mov eax [esp+7Ch+var_44] +
mov ecx [esp+7Ch+var_54] +
mov [esp+7Ch+var_5C] 0 +
mov [eax+ecx*4] edi +
jmp loc_4484D2  +
mov eax [esp+7Ch+var_5C] +
test eax eax +
jz loc_448530  +
mov eax [esp+7Ch+var_1C] +
cmp eax 3Ah +
jz loc_448882  +
ja loc_448830  +
cmp eax 2 +
jz loc_4488A0  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_448530  +
mov eax [esp+7Ch+var_14] +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+10h] eax +
jmp loc_448530  +
cmp eax 31h +
jz loc_448810  +
cmp eax 3Ah +
jnz loc_448530  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_447020  +
mov [edi+0Ch] eax +
jmp loc_448530  +
cmp eax 47h +
jz loc_448810  +
cmp eax 55h +
jnz loc_448530  +
mov eax [esp+7Ch+var_14] +
mov edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+var_3C] +
call sub_4466C0  +
test eax eax +
jnz loc_448530  +
jmp loc_448438  +
mov eax [esp+7Ch+var_14] +
mov [edi+14h] eax +
jmp loc_448530  +
mov eax [edi+20h] +
test eax eax +
jnz loc_448530  +
mov eax [esp+7Ch+var_18] +
cmp eax 8 +
jz loc_448774  +
cmp eax 0Eh +
jz loc_448774  +
cmp eax 1F21h +
jnz loc_448530  +
mov eax [esp+7Ch+var_14] +
mov [edi+20h] eax +
mov eax [esp+7Ch+var_64] +
mov eax [eax+20h] +
lea ecx [eax-1] +
cmp ecx 1Ch +
mov [esp+7Ch+var_30] eax +
ja loc_448530  +
mov eax 1 +
shl eax cl +
test eax 10025977h +
jnz loc_4487E7  +
jmp loc_448530  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_4C] eax +
xor eax eax +
cmp [esp+7Ch+var_18] 1 +
setnz al  +
mov [esp+7Ch+var_48] eax +
jmp loc_448530  +
mov eax [esp+7Ch+var_18] +
cmp eax 8 +
jz loc_4487E0  +
cmp eax 0Eh +
jz loc_4487E0  +
cmp eax 1F21h +
jnz loc_448530  +
lea esi [esi+0] +
mov eax [esp+7Ch+var_14] +
mov [edi+20h] eax +
mov dword ptr [edi+1Ch] 1 +
jmp loc_448530  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_447020  +
mov [edi+8] eax +
jmp loc_448530  +
mov ecx [esp+7Ch+var_40] +
lea edx [esp+7Ch+var_1C] +
mov eax [esp+7Ch+var_64] +
call sub_448010  +
mov [edi+20h] eax +
jmp loc_448530  +
cmp eax 3Bh +
jz loc_448940  +
cmp eax 3Fh +
jnz loc_448530  +
mov eax [esp+7Ch+var_10] +
or eax [esp+7Ch+var_14] +
jz loc_448530  +
mov eax [esp+7Ch+var_5C] +
and byte ptr [eax+1Ch] 0FEh +
jmp loc_448530  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] offset aDwarfErrorCoul +
call off_4730E4  +
mov [esp+7Ch+var_7C] 11h +
call sub_4029E0  +
jmp loc_448438  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_447020  +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+4] eax +
jmp loc_448530  +
mov eax [esp+7Ch+var_18] +
lea ecx [eax-3] +
cmp ecx 15h +
ja loc_448530  +
mov eax 1 +
shl eax cl +
test eax 2000C3h +
jz loc_448530  +
mov eax [esp+7Ch+var_14] +
mov ecx [eax+4] +
cmp byte ptr [ecx] 3 +
jnz loc_448530  +
mov edx [esp+7Ch+var_5C] +
mov [esp+7Ch+var_30] ecx +
and byte ptr [edx+1Ch] 0FEh +
mov edx [esp+7Ch+var_64] +
movzx edx byte ptr [edx+58h] +
lea ecx [edx+1] +
cmp [eax] ecx +
mov ecx [esp+7Ch+var_30] +
jnz loc_448530  +
shl edx 3 +
cmp edx 8 +
jz loc_448A6B  +
cmp edx 10h +
jz loc_448A74  +
cmp edx 20h +
jz loc_448AAA  +
cmp edx 40h +
jnz loc_448A8E  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+14h] eax +
jmp loc_448530  +
mov eax [esp+7Ch+var_14] +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+8] eax +
jmp loc_448530  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
jmp loc_4485E0  +
mov [esp+7Ch+var_78] 9D4h +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_402930  +
mov eax [edi+18h] +
cmp eax 1Dh +
jnz loc_448679  +
mov eax [esp+7Ch+var_54] +
sub eax 1 +
jz loc_448679  +
mov ecx [esp+7Ch+var_44] +
mov edx [ecx+eax*4] +
mov ecx [esp+7Ch+var_44] +
test edx edx +
jz loc_4489B1  +
jmp loc_448A4D  +
mov edx [ecx+eax*4] +
test edx edx +
jnz loc_448A4D  +
sub eax 1 +
jnz loc_4489A6  +
jmp loc_448679  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] 20h +
mov [esp+7Ch+var_7C] eax +
call sub_404C60  +
test eax eax +
mov edi eax +
mov [esp+7Ch+var_5C] eax +
jz loc_448438  +
mov eax [ebx+4] +
mov ecx [esp+7Ch+var_64] +
or byte ptr [edi+1Ch] 1 +
mov [edi+0Ch] eax +
mov eax [ecx+4Ch] +
mov [edi] eax +
mov eax [ecx+60h] +
mov [ecx+4Ch] edi +
test eax eax +
jz loc_4484C1  +
mov [esp+7Ch+var_78] 9ECh +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_402930  +
jmp loc_4484C1  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl [esp+7Ch+var_38] 1 +
mov eax [esp+7Ch+var_38] +
shl eax 2 +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call sub_4074F0  +
test eax eax +
jz loc_448438  +
mov [esp+7Ch+var_44] eax +
jmp loc_448621  +
mov [edi+4] edx +
jmp loc_448679  +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax 1 +
jmp loc_448446  +
movzx eax byte ptr [ecx+1] +
jmp loc_448931  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
jmp loc_448931  +
mov [esp+7Ch+var_74] offset aScan_unit_for_ +
mov [esp+7Ch+var_78] 0A68h +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_402960  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
jmp loc_448931  +
***
sub esp 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_448AF0  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_448AF7  +
mov eax 1 +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx+2Ch] +
test eax eax +
jnz loc_448B10  +
mov dword ptr [ebx+24h] 1 +
xor eax eax +
jmp loc_448AE9  +
mov eax ebx +
call sub_4471B0  +
test eax eax +
mov [ebx+44h] eax +
jz loc_448B43  +
mov eax [ebx+40h] +
cmp [ebx+3Ch] eax +
jnb loc_448AE4  +
mov eax ebx +
call sub_448390  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_448AE9  +
mov dword ptr [ebx+24h] 1 +
xor al al +
jmp loc_448AE9  +
mov dword ptr [ebx+24h] 1 +
jmp loc_448AE9  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov [esp+30h+var_28] ecx +
call sub_448AD0  +
test eax eax +
jz loc_448BE7  +
test byte ptr [ebx+0Ch] 8 +
mov ecx [esp+30h+var_28] +
jnz loc_448BF1  +
mov esi [esi+4Ch] +
mov edi [ebx+4] +
mov ebp [ebx+10h] +
test esi esi +
jz loc_448BE7  +
mov [esp+30h+var_28] edi +
mov edi ecx +
jmp loc_448B96  +
mov esi [esi] +
test esi esi +
jz loc_448BE7  +
test byte ptr [esi+1Ch] 1 +
jnz loc_448B90  +
mov ebx [esi+4] +
test ebx ebx +
jz loc_448B90  +
mov eax [esi+10h] +
test eax eax +
jz loc_448B90  +
cmp edi [esi+14h] +
jnz loc_448B90  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_448BBA  +
cmp ebp ecx +
jnz loc_448B90  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_30] eax +
call strcmp  +
test eax eax +
jnz loc_448B90  +
mov eax [esp+30h+arg_0] +
mov [esi+18h] ebp +
mov ecx [esp+30h+arg_4] +
mov [eax] ebx +
mov eax [esi+8] +
mov [ecx] eax +
mov eax 1 +
jmp loc_448BE9  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+48h] +
mov eax [ebx+4] +
mov edi [ebx+10h] +
test ebp ebp +
mov [esp+30h+var_1C] eax +
jz loc_448BE7  +
mov [esp+30h+var_14] 0 +
mov edx ebp +
mov [esp+30h+var_18] 0 +
lea ebx [edx+24h] +
mov esi [edx+30h] +
mov [esp+30h+var_28] edx +
jmp loc_448C2A  +
cmp edi esi +
jz loc_448C2E  +
mov ebx [ebx] +
test ebx ebx +
jz loc_448C90  +
test esi esi +
jnz loc_448C20  +
mov ebp [ebx+4] +
cmp ecx ebp +
jb loc_448C24  +
mov edx [ebx+8] +
cmp ecx edx +
jnb loc_448C24  +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_24] edx +
mov eax [eax+20h] +
test eax eax +
jz loc_448C24  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] ecx +
mov [esp+30h+var_30] eax +
call strcmp  +
mov ecx [esp+30h+var_20] +
mov edx [esp+30h+var_24] +
test eax eax +
jnz loc_448C24  +
mov eax [esp+30h+var_18] +
sub edx ebp +
test eax eax +
jz loc_448C7B  +
cmp edx [esp+30h+var_14] +
jnb loc_448C24  +
mov ebx [ebx] +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_14] edx +
test ebx ebx +
mov [esp+30h+var_18] eax +
jnz loc_448C2A  +
lea esi [esi+0] +
mov edx [esp+30h+var_28] +
mov edx [edx] +
test edx edx +
jnz loc_448C14  +
mov edx [esp+30h+var_18] +
test edx edx +
jz loc_448BE7  +
mov eax [edx+0Ch] +
mov ecx [esp+30h+arg_0] +
mov [edx+30h] edi +
mov [ecx] eax +
mov eax [edx+14h] +
mov edx [esp+30h+arg_4] +
mov [edx] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [eax+24h] +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_10] ecx +
test edi edi +
jnz loc_448DB2  +
mov esi [eax+44h] +
mov ebx edx +
test esi esi +
jz loc_448DA4  +
mov eax [esp+1Ch+arg_0] +
xor ebp ebp +
xor edi edi +
mov dword ptr [eax] 0 +
mov eax [esp+1Ch+var_14] +
mov esi [eax+48h] +
test esi esi +
jz loc_448D50  +
lea eax [esi+24h] +
mov edx [eax+4] +
cmp ebx edx +
jb loc_448D30  +
mov ecx [eax+8] +
cmp ebx ecx +
jnb loc_448D30  +
sub ecx edx +
test edi edi +
jz loc_448D2B  +
cmp ecx ebp +
jnb loc_448D30  +
mov ebp ecx +
mov edi esi +
nop   +
mov eax [eax] +
test eax eax +
jnz loc_448D13  +
mov esi [esi] +
test esi esi +
jnz loc_448D10  +
test edi edi +
jz loc_448D50  +
mov eax [esp+1Ch+arg_0] +
cmp dword ptr [edi+18h] 1Dh +
mov [eax] edi +
jz loc_448E10  +
mov eax [esp+1Ch+var_14] +
mov eax [eax+44h] +
mov edx [eax+0Ch] +
test edx edx +
jle loc_448D90  +
mov ebp [eax+1Ch] +
xor ecx ecx +
jmp loc_448D74  +
mov ecx [esi+8] +
cmp ebx [ecx+4] +
jb loc_448DC4  +
lea ecx [eax+1] +
cmp ecx edx +
jge loc_448D8C  +
lea eax [ecx+edx] +
sar eax 1 +
lea esi [eax+eax*2] +
lea esi [ebp+esi*4+0] +
mov edi [esi] +
cmp ebx edi +
jnb loc_448D65  +
mov edx eax +
cmp ecx edx +
jl loc_448D74  +
cmp ebx edi +
jnb loc_448DBC  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax] 0 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [eax+2Ch] +
test ecx ecx +
jnz loc_448DD5  +
mov dword ptr [eax+24h] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esi+8] +
cmp [ecx+4] ebx +
jbe loc_448D90  +
mov eax ecx +
jmp loc_448DCD  +
cmp ebx [eax+4] +
jnb loc_448E1C  +
mov eax [eax] +
test eax eax +
jnz loc_448DC8  +
jmp loc_448D90  +
mov edi [esp+1Ch+var_14] +
mov edx [esp+1Ch+arg_C] +
mov eax edi +
call sub_4471B0  +
test eax eax +
mov [edi+44h] eax +
mov eax [esp+1Ch+var_14] +
jz loc_448DAB  +
mov edi [eax+40h] +
cmp [eax+3Ch] edi +
jnb loc_448CF7  +
call sub_448390  +
test eax eax +
jnz loc_448CF7  +
mov eax [esp+1Ch+var_14] +
jmp loc_448DAB  +
mov eax [esp+1Ch+arg_C] +
mov [eax+5Ch] edi +
jmp loc_448D50  +
cmp byte ptr [eax+19h] 0 +
jnz loc_448D90  +
cmp ecx eax +
jz loc_448D90  +
mov edx [eax+8] +
mov ebx [esp+1Ch+var_10] +
mov ecx [eax+0Ch] +
mov [ebx] edx +
mov edx [esp+1Ch+arg_4] +
mov [edx] ecx +
mov edx [esp+1Ch+arg_8] +
test edx edx +
jz loc_448E51  +
mov eax [eax+14h] +
mov ebx [esp+1Ch+arg_8] +
mov [ebx] eax +
mov eax [esi+8] +
mov eax [eax+4] +
sub eax edi +
jmp loc_448DB4  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [eax] +
mov eax [eax+78h] +
cmp edx eax +
jz loc_4490A9  +
test eax eax +
jz loc_4490A1  +
mov esi [eax+4] +
test esi esi +
jz loc_44900E  +
lea esi [esi+0] +
mov eax [ebp+74h] +
cmp dword ptr [ebp+7Ch] 2 +
mov edi [ebp+70h] +
mov [esp+28h+var_1C] eax +
jz loc_449066  +
mov edx ebp +
mov eax esi +
call sub_448AD0  +
test eax eax +
jz loc_449090  +
mov ecx [esi+60h] +
test ecx ecx +
jnz loc_449020  +
mov ebx [esi+48h] +
test ebx ebx +
jz loc_44903F  +
xor edx edx +
jmp loc_448F34  +
mov edx ebx +
mov ebx eax +
mov eax [ebx] +
mov [ebx] edx +
test eax eax +
jnz loc_448F30  +
mov [esi+48h] ebx +
mov eax 1 +
jmp loc_448F4A  +
test ebx ebx +
jz loc_448F60  +
mov edx [ebx+20h] +
test edx edx +
jz loc_448F5A  +
mov ecx ebx +
mov eax edi +
call sub_448E60  +
test eax eax +
mov ebx [ebx] +
jnz loc_448F46  +
mov edx [esi+48h] +
test edx edx +
jz loc_448F7C  +
xor ebx ebx +
jmp loc_448F74  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_448F70  +
test eax eax +
mov [esi+48h] edx +
jz loc_449090  +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_449056  +
xor ecx ecx +
jmp loc_448F9A  +
mov ecx ebx +
mov ebx edx +
mov edx [ebx] +
mov [ebx] ecx +
test edx edx +
jnz loc_448F96  +
mov [esi+4Ch] ebx +
mov edi [esp+28h+var_1C] +
jmp loc_448FB4  +
test ebx ebx +
jz loc_448FD7  +
test byte ptr [ebx+1Ch] 1 +
jnz loc_448FD1  +
mov edx [ebx+4] +
test edx edx +
jz loc_448FD1  +
mov edx [ebx+10h] +
test edx edx +
jz loc_448FD1  +
mov ecx ebx +
mov eax edi +
call sub_448E60  +
test eax eax +
mov ebx [ebx] +
jnz loc_448FB0  +
mov edx [esi+4Ch] +
test edx edx +
jz loc_448FEE  +
xor ebx ebx +
jmp loc_448FE6  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_448FE2  +
test eax eax +
mov [esi+4Ch] edx +
mov dword ptr [esi+60h] 1 +
jz loc_449090  +
mov esi [esi+4] +
test esi esi +
jnz loc_448EF0  +
mov edx [ebp+0] +
mov [ebp+78h] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 0C23h +
mov [esp+28h+var_28] offset a____Binutil_24 +
call sub_402930  +
mov ebx [esi+48h] +
test ebx ebx +
jnz loc_448F2B  +
mov ebx [esi+4Ch] +
mov eax 1 +
mov dword ptr [esi+48h] 0 +
test ebx ebx +
jnz loc_448F92  +
mov dword ptr [esi+4Ch] 0 +
mov dword ptr [esi+60h] 1 +
jmp loc_449000  +
mov [esp+28h+var_24] 0C1Eh +
mov [esp+28h+var_28] offset a____Binutil_24 +
call sub_402930  +
mov edx ebp +
mov eax esi +
call sub_448AD0  +
test eax eax +
jnz loc_448F15  +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+7Ch] 2 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4] +
jmp loc_448EE1  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_449167  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jz loc_449167  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jz loc_449183  +
mov [esp+10h] esi +
nop   +
mov eax [esp+10h] +
mov edi [eax+20h] +
test edi edi +
jz loc_44914B  +
mov eax [eax+28h] +
test eax eax +
mov [esp+14h] eax +
jz loc_44914B  +
mov eax [esp+40h] +
mov ebx [eax] +
test ebx ebx +
jz loc_44914B  +
mov esi eax +
test byte ptr [ebx+0Ch] 8 +
jz loc_449142  +
mov ebp [ebx+10h] +
test ebp ebp +
jz loc_449142  +
mov [esp+4] edi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jz loc_449171  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_449122  +
mov eax [esp+10h] +
mov eax [eax] +
test eax eax +
mov [esp+10h] eax +
jnz loc_449100  +
mov eax [esp+18h] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jnz loc_4490EB  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+14h] +
sub eax [ebp+1Ch] +
sub eax [ebx+8] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+44h] +
test eax eax +
jz loc_4491A4  +
mov eax [esp+18h] +
call sub_448390  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jnz loc_4490FA  +
jmp loc_449159  +
***
mov edi [esp+18h] +
mov edx [esp+1Ch] +
mov eax edi +
call sub_4471B0  +
test eax eax +
mov [edi+44h] eax +
jz loc_449193  +
jmp loc_44918A  +
***
mov edx [eax] +
test edx edx +
jz loc_449204  +
mov eax [edx+5Ch] +
test eax eax +
jz loc_449204  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_449204  +
mov ebx [eax+8] +
mov ecx [esp+arg_4] +
mov [ecx] ebx +
mov ecx [eax+4] +
mov ebx [ecx+20h] +
mov ecx [esp+arg_8] +
mov [ecx] ebx +
mov ebx [eax+10h] +
mov ecx [esp+arg_C] +
mov eax [eax+4] +
mov [ecx] ebx +
mov [edx+5Ch] eax +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
test ecx ecx +
mov [esp+1Ch+var_18] ecx +
jz loc_4493EF  +
test eax eax +
jz loc_4493EF  +
mov eax [ecx] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jz loc_44930E  +
mov eax [esp+1Ch+var_14] +
xor ebx ebx +
mov esi [eax+1Ch] +
mov edi [eax+48h] +
mov eax [eax+4Ch] +
mov [esp+1Ch+var_10] eax +
mov ebp [esi+ebx*4] +
test ebp ebp +
jz loc_449272  +
lea esi [esi+0] +
mov eax [ebp+10h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ebp [ebp+14h] +
test ebp ebp +
jnz loc_449260  +
add ebx 1 +
cmp ebx 79h +
jnz loc_449256  +
mov esi [esp+1Ch+var_14] +
mov eax [esi+44h] +
test eax eax +
jz loc_44929E  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esi+44h] +
mov eax [eax+18h] +
mov [esp+1Ch+var_1C] eax +
call free  +
test edi edi +
jz loc_4492D4  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_4492B8  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+0Ch] 0 +
mov eax [edi+8] +
test eax eax +
jz loc_4492CE  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+8] 0 +
mov edi [edi] +
test edi edi +
jnz loc_4492A2  +
mov ecx [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_4492FC  +
mov eax [ebx+4] +
test eax eax +
jz loc_4492F6  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4492E0  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jnz loc_449243  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_449321  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+44h] +
test eax eax +
jz loc_449334  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_449347  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+54h] +
test eax eax +
jz loc_44935A  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+34h] +
test eax eax +
jz loc_44936D  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov edx [eax+80h] +
test edx edx +
jnz loc_4493E2  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+24h] +
test eax eax +
jz loc_44938E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_4493A1  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+60h] +
test eax eax +
jz loc_4493B4  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+68h] +
test eax eax +
jz loc_4493C7  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+20h] +
test eax eax +
jz loc_4493EF  +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4047F0  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call sub_4047F0  +
jmp loc_44937B  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov ebp [eax] +
test ebp ebp +
jz loc_4497F0  +
mov edi [esp+4Ch+arg_0] +
mov eax [esp+4Ch+arg_0] +
mov esi [edi+6Ch] +
mov eax [eax+64h] +
test esi esi +
jz loc_4495B8  +
mov edi [ebp+60h] +
xor edx edx +
jmp loc_44944B  +
mov ecx [eax+38h] +
add ecx [ebx+1Ch] +
cmp [edi+edx*4] ecx +
jnz loc_449460  +
add edx 1 +
mov eax [eax+0Ch] +
cmp edx esi +
jz loc_4495B8  +
mov ebx [eax+3Ch] +
test ebx ebx +
jnz loc_449432  +
mov ecx [eax+1Ch] +
cmp [edi+edx*4] ecx +
jz loc_44943D  +
lea esi [esi+0] +
mov eax [esp+4Ch+arg_10] +
mov edi ebp +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_449210  +
test ebp 1 +
mov edx 84h +
jnz loc_449968  +
test edi 2 +
jnz loc_449976  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_4494AA  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
and edx 1 +
jz loc_4494B2  +
mov byte ptr [edi] 0 +
mov eax [esp+4Ch+arg_8] +
mov [ebp+8] eax +
mov eax [esp+4Ch+arg_C] +
mov [ebp+38h] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_449635  +
mov eax [esp+4Ch+arg_10] +
mov [eax] ebp +
mov eax [esp+4Ch+arg_4] +
test eax eax +
jz loc_449815  +
mov eax [esp+4Ch+arg_4] +
cmp [esp+4Ch+arg_0] eax +
setz bl  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_446400  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_4495C5  +
mov eax [esp+4Ch+arg_4] +
mov [ebp+14h] eax +
mov eax [esp+4Ch+arg_14] +
test eax eax +
jz loc_4496A0  +
mov eax [ebp+64h] +
cmp eax 0 +
mov [esp+4Ch+var_30] eax +
jnz loc_449686  +
mov eax [ebp+8] +
mov [esp+4Ch+var_28] ebp +
mov eax [eax+18h] +
mov [esp+4Ch+var_34] eax +
mov eax [esp+4Ch+arg_0] +
mov ebp eax +
lea esi [esi+0] +
mov ebx [ebp+64h] +
test ebx ebx +
jz loc_4495A8  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_449558  +
cmp ebx eax +
jz loc_449558  +
test byte ptr [ebx+15h] 20h +
jz loc_4495A1  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_4495A1  +
mov esi [ebx] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_44958C  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
setz dl  +
movzx edx dl +
test byte ptr [ebx+14h] 1 +
jz loc_449598  +
cmp [esp+4Ch+arg_0] ebp +
jz loc_44959C  +
test edx edx +
jz loc_4495A1  +
add [esp+4Ch+var_30] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_449547  +
cmp [esp+4Ch+arg_4] ebp +
jz loc_449827  +
mov ebp [esp+4Ch+arg_4] +
jmp loc_449540  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_449505  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aHomeJenkinsM_0 +
mov [esp+4Ch+var_4C] eax +
call sub_404FA0  +
test eax eax +
mov ebx eax +
jz loc_44962B  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] eax +
call sub_4046B0  +
test eax eax +
mov [esp+4Ch+arg_4] eax +
jz loc_449623  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_405A00  +
test eax eax +
jnz loc_449A01  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_4047F0  +
mov [esp+4Ch+var_4C] ebx +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_407460  +
test eax eax +
mov [ebp+60h] eax +
jz loc_44962B  +
mov edi [esp+4Ch+arg_0] +
mov edx [edi+64h] +
mov edi [edi+6Ch] +
test edi edi +
jz loc_4494CF  +
xor ecx ecx +
jmp loc_449677  +
mov ebx [edx+38h] +
add ebx [esi+1Ch] +
mov [eax+ecx*4] ebx +
add ecx 1 +
mov edx [edx+0Ch] +
cmp ecx edi +
jz loc_4494CF  +
mov esi [edx+3Ch] +
test esi esi +
jnz loc_449660  +
mov ebx [edx+1Ch] +
mov [eax+ecx*4] ebx +
jmp loc_449669  +
mov eax [ebp+68h] +
jle loc_4496A0  +
mov edx [esp+4Ch+var_30] +
nop   +
mov ecx [eax] +
add eax 8 +
mov ebx [eax-4] +
sub edx 1 +
mov [ecx+1Ch] ebx +
jnz loc_449690  +
mov ecx [esp+4Ch+var_2C] +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_446470  +
test eax eax +
jz loc_44977F  +
mov ecx [esp+4Ch+var_2C] +
xor eax eax +
mov [esp+4Ch+var_10] 0 +
test ecx ecx +
jz loc_4496ED  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
add eax [ecx+24h] +
mov edx esi +
mov [esp+4Ch+var_10] eax +
mov eax ebx +
call sub_446470  +
mov ecx eax +
mov eax [esp+4Ch+var_10] +
test ecx ecx +
jnz loc_4496D3  +
mov [esp+4Ch+var_4C] eax +
call sub_407460  +
test eax eax +
mov [ebp+34h] eax +
jz loc_44962B  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_10] 0 +
call sub_446400  +
test eax eax +
mov ecx eax +
jz loc_4497C3  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
jmp loc_449743  +
mov edx esi +
mov eax ebx +
call sub_446470  +
test eax eax +
mov ecx eax +
jz loc_4497C3  +
mov edi [ecx+24h] +
test edi edi +
jz loc_449730  +
mov eax [esp+4Ch+arg_C] +
mov [esp+4Ch+var_34] ecx +
mov [esp+4Ch+var_40] eax +
mov eax [ebp+34h] +
add eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_44E9A0  +
test eax eax +
jz loc_44962B  +
add [esp+4Ch+var_10] edi +
mov ecx [esp+4Ch+var_34] +
jmp loc_449730  +
mov eax [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+arg_C] +
mov eax [eax+24h] +
mov [esp+4Ch+var_10] eax +
mov eax [ebp+8] +
mov [esp+4Ch+var_4C] 0 +
mov [esp+4Ch+var_48] 0 +
lea edx [eax+18h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] eax +
lea eax [ebp+34h] +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
call sub_445E00  +
test eax eax +
jz loc_44962B  +
mov eax [ebp+34h] +
mov edx [esp+4Ch+arg_8] +
mov [ebp+0Ch] eax +
add eax [esp+4Ch+var_10] +
mov [ebp+10h] eax +
mov eax [esp+4Ch+arg_4] +
call sub_446400  +
mov [ebp+18h] eax +
mov eax [ebp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_4495BD  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 84h +
mov [esp+4Ch+var_4C] eax +
call sub_404C60  +
test eax eax +
mov ebp eax +
jnz loc_4494B2  +
xor eax eax +
jmp loc_44962D  +
mov eax [esp+4Ch+arg_0] +
mov ebx 1 +
mov [esp+4Ch+arg_4] eax +
jmp loc_4494EC  +
cmp [esp+4Ch+var_30] 1 +
mov ebp [esp+4Ch+var_28] +
jle loc_449987  +
mov edi [esp+4Ch+var_30] +
mov eax edi +
shl eax 3 +
mov [esp+4Ch+var_4C] eax +
call sub_407460  +
test eax eax +
jz loc_44962B  +
mov [ebp+64h] edi +
mov edi [esp+4Ch+arg_0] +
mov ebx eax +
mov [ebp+68h] eax +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] edi +
mov [esp+4Ch+var_20] ebp +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_449910  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_449893  +
cmp ebp eax +
jz loc_449893  +
test byte ptr [ebp+15h] 20h +
jz loc_449905  +
mov eax [ebp+1Ch] +
test eax eax +
jnz loc_449905  +
mov esi [ebp+0] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov ecx 1 +
test eax eax +
jz loc_4498C5  +
mov cl 11h +
mov edi offset a_gnu_linkonc_0 +
cmps   +
setz cl  +
movzx ecx cl +
test byte ptr [ebp+14h] 1 +
jz loc_4498D5  +
mov eax [esp+4Ch+var_30] +
cmp [esp+4Ch+arg_0] eax +
jz loc_4498D9  +
test ecx ecx +
jz loc_449905  +
mov esi [ebp+28h] +
test esi esi +
jnz loc_4498E3  +
mov esi [ebp+24h] +
test ecx ecx +
jz loc_449930  +
mov edi [ebp+40h] +
test edi edi +
jnz loc_449952  +
mov edi [esp+4Ch+var_24] +
mov eax edi +
mov [ebp+1Ch] edi +
add edi esi +
mov [esp+4Ch+var_24] edi +
mov [ebx] ebp +
add ebx 8 +
mov [ebx-4] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_449882  +
mov eax [esp+4Ch+var_20] +
mov eax [eax+14h] +
cmp [esp+4Ch+var_30] eax +
jz loc_4499F7  +
mov [esp+4Ch+var_30] eax +
jmp loc_449873  +
mov ecx [ebp+40h] +
mov edi 1 +
mov eax [esp+4Ch+var_28] +
shl edi cl +
lea eax [eax+edi-1] +
neg edi  +
and eax edi +
lea edi [esi+eax] +
mov [ebp+1Ch] eax +
mov [esp+4Ch+var_28] edi +
jmp loc_4498FD  +
mov [esp+4Ch+var_48] 0D14h +
mov [esp+4Ch+var_4C] offset a____Binutil_24 +
call sub_402930  +
jmp loc_4498EE  +
mov byte ptr [ebp+0] 0 +
lea edi [ebp+1] +
mov dl 83h +
jmp loc_449487  +
xor ebx ebx +
add edi 2 +
mov [edi-2] bx +
sub edx 2 +
jmp loc_449493  +
mov eax [esp+4Ch+arg_4] +
mov dword ptr [ebp+64h] 0FFFFFFFFh +
cmp [esp+4Ch+arg_0] eax +
jz loc_4496A0  +
mov ebx [eax+64h] +
mov edi [esp+4Ch+arg_0] +
test ebx ebx +
mov esi [edi+64h] +
jnz loc_4499EE  +
jmp loc_4496A0  +
test byte ptr [ebx+15h] 20h +
jnz loc_4496A0  +
mov eax [ebx] +
mov [esp+4Ch+var_48] eax +
mov eax [esi] +
mov [esp+4Ch+var_4C] eax +
call strcmp  +
test eax eax +
jnz loc_4499E0  +
mov eax [esi+3Ch] +
mov [ebx+3Ch] eax +
mov eax [esi+38h] +
mov [ebx+38h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov ebx [ebx+0Ch] +
mov esi [esi+0Ch] +
test ebx ebx +
jz loc_4496A0  +
test esi esi +
jnz loc_4499B0  +
jmp loc_4496A0  +
mov ebp [esp+4Ch+var_20] +
mov eax [esp+4Ch+var_30] +
jmp loc_449992  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_446400  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_449617  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_419CE0  +
test eax eax +
jz loc_449617  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+78h] +
mov dword ptr [ebp+80h] 1 +
mov [esp+4Ch+arg_C] eax +
mov [ebp+38h] eax +
jmp loc_449505  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
test esi esi +
jz loc_449C00  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_449C00  +
mov eax [ebx+0A0h] +
mov ebp [eax+234h] +
test ebp ebp +
jz loc_449BD4  +
mov eax [esp+3Ch+arg_8] +
cmp [ebp+0] eax +
jz loc_449C22  +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+4] 0 +
mov dword ptr [ebp+0Ch] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_8] +
mov [ebp+0] eax +
mov ebx [esi] +
test ebx ebx +
jz loc_449C00  +
xor edx edx +
xor edi edi +
mov [esp+3Ch+var_24] ebp +
mov ebp edx +
mov [esp+3Ch+var_20] 0 +
jmp loc_449AFA  +
cmp edi 1 +
mov eax 2 +
cmovz edi eax +
mov ebp ebx +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_449B7F  +
test byte ptr [ebx+0Dh] 40h +
jnz loc_449AE0  +
mov eax [esp+3Ch+var_28] +
lea edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+15Ch] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jz loc_449B68  +
mov ecx [esp+3Ch+var_10] +
cmp [esp+3Ch+arg_C] ecx +
jb loc_449B68  +
cmp ecx [esp+3Ch+var_20] +
jbe loc_449BC0  +
mov edx [esp+3Ch+var_24] +
test ebp ebp +
mov [edx+4] ebx +
mov [edx+0Ch] eax +
mov dword ptr [edx+8] 0 +
jz loc_449C4C  +
test byte ptr [ebx+0Ch] 1 +
jz loc_449C10  +
mov eax [ebp+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ecx +
mov [edx+8] eax +
test edi edi +
mov eax 1 +
cmovz edi eax +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_449AFA  +
mov ebp [esp+3Ch+var_24] +
mov edx [ebp+4] +
test edx edx +
jz loc_449C00  +
mov ecx [esp+3Ch+arg_10] +
test ecx ecx +
jz loc_449B9B  +
mov eax [ebp+8] +
mov edx [esp+3Ch+arg_10] +
mov [edx] eax +
mov eax [esp+3Ch+arg_14] +
test eax eax +
jz loc_449BAF  +
mov eax [ebp+4] +
mov edx [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [edx] eax +
mov eax [ebp+4] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+3Ch+var_20] ecx +
jnz loc_449B68  +
mov edx [esp+3Ch+var_24] +
cmp eax [edx+0Ch] +
jbe loc_449B68  +
jmp loc_449B37  +
mov [esp+3Ch+var_38] 10h +
mov [esp+3Ch+var_3C] ebx +
call sub_404C60  +
mov ebp eax +
mov eax [ebx+0A0h] +
test ebp ebp +
mov [eax+234h] ebp +
jnz loc_449A88  +
lea esi [esi+0] +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 2 +
mov [esp+3Ch+var_20] ecx +
jnz loc_449B5A  +
jmp loc_449AED  +
mov eax [ebp+4] +
test eax eax +
jz loc_449A95  +
mov eax [eax+8] +
cmp eax [esp+3Ch+arg_C] +
ja loc_449A95  +
add eax [ebp+0Ch] +
cmp [esp+3Ch+arg_C] eax +
jnb loc_449A95  +
jmp loc_449B8A  +
mov [esp+3Ch+var_20] ecx +
jmp loc_449B68  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov esi [esp+8Ch+arg_18] +
mov eax [esp+8Ch+arg_14] +
mov ebx [esp+8Ch+arg_2C] +
mov [esp+8Ch+var_2C] 0 +
test esi esi +
mov dword ptr [eax] 0 +
jz loc_449C9E  +
mov eax [esp+8Ch+arg_18] +
mov dword ptr [eax] 0 +
mov ecx [esp+8Ch+arg_20] +
mov eax [esp+8Ch+arg_1C] +
test ecx ecx +
mov dword ptr [eax] 0 +
jz loc_449CC3  +
mov eax [esp+8Ch+arg_20] +
mov dword ptr [eax] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+28h] +
mov [esp+8Ch+var_7C] ebx +
mov [esp+8Ch+var_88] 0 +
shr eax 5 +
test al 42h +
setz al  +
movzx eax al +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_449400  +
test eax eax +
jz loc_449EA2  +
mov edx [esp+8Ch+arg_8] +
xor eax eax +
mov ebp [ebx] +
test edx edx +
setnz al  +
mov [esp+8Ch+var_5C] eax +
jz loc_449E41  +
mov eax [esp+8Ch+arg_C] +
test eax eax +
jnz loc_449D50  +
mov eax [esp+8Ch+arg_10] +
test eax eax +
jnz loc_449D50  +
mov eax [esp+8Ch+arg_18] +
test eax eax +
jz loc_449D64  +
mov [esp+8Ch+var_88] 0F3Dh +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_402930  +
mov eax [esp+8Ch+arg_8] +
mov eax [eax+10h] +
mov [esp+8Ch+arg_C] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [eax+8] +
mov eax [esp+8Ch+arg_C] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_449E8F  +
mov ecx [esp+8Ch+arg_C] +
mov eax [eax+1Ch] +
add edx [ecx+38h] +
mov [esp+8Ch+var_6C] edx +
add [esp+8Ch+var_6C] eax +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_449EA2  +
mov ecx [esp+8Ch+var_5C] +
mov dword ptr [ebp+5Ch] 0 +
test ecx ecx +
jz loc_449EC7  +
mov eax [ebp+7Ch] +
test eax eax +
jz loc_44A12C  +
cmp eax 1 +
jz loc_44A17D  +
mov ebx [ebp+0] +
test ebx ebx +
jz loc_44A048  +
mov esi [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_1C] +
jmp loc_449E08  +
mov eax [ebx+24h] +
test eax eax +
jz loc_449EAF  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44A048  +
test byte ptr [esi+0Ch] 8 +
jz loc_449E15  +
mov eax [ebx+14h] +
test eax eax +
jnz loc_449DF3  +
mov eax [esp+8Ch+arg_14] +
mov edx esi +
mov ecx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
call sub_448B50  +
test eax eax +
jz loc_449DFE  +
mov [esp+8Ch+var_68] eax +
jmp loc_449F3E  +
mov edi [esp+8Ch+arg_18] +
test edi edi +
jz loc_449E62  +
mov esi [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
test esi esi +
jnz loc_449D7F  +
mov [esp+8Ch+var_88] 0F43h +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_402930  +
mov eax [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_449D91  +
mov eax [esp+8Ch+arg_C] +
add edx [eax+1Ch] +
mov [esp+8Ch+var_6C] edx +
jmp loc_449DA6  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+8Ch+var_6C] +
mov eax ebx +
call sub_4463E0  +
test eax eax +
jnz loc_449E15  +
jmp loc_449DFE  +
mov ebx [ebp+0] +
mov [esp+8Ch+var_28] 0 +
mov [esp+8Ch+var_24] 0 +
mov [esp+8Ch+var_20] 0 +
test ebx ebx +
mov [esp+8Ch+var_1C] 0 +
jz loc_44AC40  +
mov edi 0FFFFFFFFh +
mov [esp+8Ch+var_74] edi +
mov edi [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_1C] +
mov eax [ebx+14h] +
test eax eax +
jz loc_449FB6  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_449FA5  +
xor eax eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_449F03  +
mov [esp+8Ch+var_68] eax +
mov eax [esp+8Ch+arg_1C] +
mov eax [eax] +
test eax eax +
jz loc_44A050  +
mov [esp+8Ch+var_68] 1 +
mov eax [esp+8Ch+var_2C] +
test eax eax +
jz loc_449F5D  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_44A247  +
mov eax [eax+20h] +
mov edi [esp+8Ch+arg_18] +
mov [edi] eax +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax [esp+8Ch+var_68] +
shr edx 5 +
and edx 42h +
jnz loc_449EA4  +
mov edx [ebp+64h] +
mov ecx [ebp+68h] +
test edx edx +
jle loc_449EA4  +
mov eax [ecx] +
add ecx 8 +
sub edx 1 +
mov dword ptr [eax+1Ch] 0 +
jnz loc_449F85  +
mov eax [esp+8Ch+var_68] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx edi +
mov eax ebx +
call sub_4463E0  +
test eax eax +
jz loc_449F19  +
lea eax [esp+8Ch+var_20] +
mov edx edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
lea ecx [esp+8Ch+var_28] +
mov eax ebx +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] esi +
call sub_448CD0  +
test eax eax +
jz loc_449F19  +
cmp eax [esp+8Ch+var_74] +
ja loc_44A0ED  +
mov edx [esp+8Ch+var_28] +
test edx edx +
jz loc_449FFD  +
mov ecx [esp+8Ch+arg_14] +
mov [ecx] edx +
mov edx [esp+8Ch+var_24] +
test edx edx +
jz loc_44A009  +
mov [esp+8Ch+var_2C] edx +
mov edx [esp+8Ch+arg_20] +
test edx edx +
jz loc_44A025  +
mov edx [esp+8Ch+var_1C] +
test edx edx +
jz loc_44A025  +
mov ecx [esp+8Ch+arg_20] +
mov [ecx] edx +
mov edx [esp+8Ch+var_20] +
test edx edx +
jz loc_44A0E9  +
mov ecx [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
mov [ecx] edx +
jmp loc_449F1B  +
mov [esp+8Ch+var_68] 0 +
mov eax [esp+8Ch+arg_28] +
test eax eax +
jnz loc_44A0F7  +
mov [esp+8Ch+arg_28] 4 +
lea eax [ebp+40h] +
mov ebx [ebp+0Ch] +
mov [esp+8Ch+var_3C] eax +
lea eax [ebp+3Ch] +
mov [esp+8Ch+var_38] eax +
jmp loc_44A098  +
add ebx 8 +
xor edi edi +
cmp ecx ebx +
jnb loc_44A235  +
test edi edi +
mov [ebp+0Ch] ebx +
jnz loc_44ACF9  +
mov ecx [ebp+10h] +
mov esi ebx +
cmp ecx ebx +
jbe loc_449F3E  +
mov eax [ebp+14h] +
lea edx [esi+4] +
mov ebx esi +
add eax 4 +
cmp ecx edx +
jb loc_44A080  +
mov edx esi +
call sub_446350  +
cmp eax 0FFFFFFFFh +
jnz loc_44A2DA  +
mov edx [ebp+0Ch] +
xor edi edi +
mov eax [ebp+14h] +
lea ebx [edx+0Ch] +
cmp [ebp+10h] ebx +
jb loc_44A08D  +
add edx 4 +
add eax 4 +
call sub_446370  +
mov edx [ebp+0Ch] +
lea ebx [edx+0Ch] +
mov edi eax +
jmp loc_44A08D  +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
jmp loc_449F1B  +
cmp [esp+8Ch+arg_28] 8 +
jz loc_44A06A  +
cmp [esp+8Ch+arg_28] 4 +
jz loc_44A06A  +
mov [esp+8Ch+var_88] 0FB3h +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_402930  +
jmp loc_44A06A  +
mov eax [ebp+6Ch] +
lea edx [eax+1] +
cmp eax 63h +
mov [ebp+6Ch] edx +
jle loc_449DD8  +
mov eax [esp+8Ch+arg_0] +
call sub_446280  +
mov [ebp+70h] eax +
mov eax [esp+8Ch+arg_0] +
call sub_446280  +
mov edx [ebp+70h] +
test edx edx +
mov [ebp+74h] eax +
jz loc_44AC4D  +
test eax eax +
jz loc_44AC4D  +
mov eax ebp +
call sub_448EC0  +
mov dword ptr [ebp+7Ch] 1 +
mov eax ebp +
call sub_448EC0  +
cmp dword ptr [ebp+7Ch] 1 +
jnz loc_449DD8  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jnz loc_44AB6E  +
mov eax [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_8] +
mov eax [eax+4] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+74h] +
mov [esp+8Ch+var_8C] eax +
call sub_408C80  +
test eax eax +
jz loc_44A048  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44A048  +
mov ecx [esp+8Ch+var_6C] +
jmp loc_44A1FA  +
mov eax [eax] +
test eax eax +
jz loc_44A048  +
mov edx [eax+4] +
cmp ecx [edx+14h] +
jnz loc_44A1F0  +
mov esi [edx+18h] +
test esi esi +
jz loc_44A20D  +
cmp ebx esi +
jnz loc_44A1F0  +
mov eax [edx+4] +
mov edi [esp+8Ch+arg_14] +
mov [edx+18h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [edi] eax +
mov eax [edx+8] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_449F3E  +
call sub_446350  +
mov ebx [ebp+0Ch] +
add ebx 8 +
mov edi eax +
jmp loc_44A08D  +
mov edi [esp+8Ch+arg_14] +
xor eax eax +
mov edx [edi] +
test edx edx +
cmovz eax edi +
mov edi [esp+8Ch+arg_18] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+arg_10] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_449A50  +
mov edi [esp+8Ch+arg_C] +
mov edx [edi+3Ch] +
mov ecx [edi+1Ch] +
test edx edx +
jz loc_44A2AD  +
mov ecx [edi+38h] +
add ecx [edx+1Ch] +
test eax eax +
mov edx [esp+8Ch+var_2C] +
jz loc_44A2BD  +
add ecx [eax+8] +
cmp ecx [edx+28h] +
jz loc_44A2CC  +
mov eax [edx+20h] +
mov dword ptr [edx+1Ch] 1 +
jmp loc_449F54  +
mov eax [esp+8Ch+arg_18] +
mov eax [eax] +
mov [edx+20h] eax +
jmp loc_44A2C0  +
test eax eax +
jz loc_44ACD8  +
cmp [esp+8Ch+arg_28] 8 +
mov [esp+8Ch+var_60] eax +
jz loc_44A390  +
mov eax [esp+8Ch+arg_28] +
add dword ptr [ebp+0Ch] 4 +
cmp [esp+8Ch+arg_28] 4 +
mov [esp+8Ch+var_64] eax +
setnz cl  +
mov ebx [ebp+0Ch] +
mov edi [ebp+14h] +
mov eax [esp+8Ch+var_60] +
mov [esp+8Ch+var_74] 0FFFFFFFEh +
mov [esp+8Ch+var_40] 0 +
mov [esp+8Ch+var_58] edi +
add edi 4 +
add eax ebx +
mov [esp+8Ch+var_70] edi +
lea edi [ebx+2] +
cmp eax edi +
mov [esp+8Ch+var_4C] eax +
mov [esp+8Ch+var_54] edi +
jnb loc_44AAEB  +
test cl cl +
jnz loc_44AAD2  +
cmp [esp+8Ch+var_64] 4 +
jz loc_44AB0E  +
lea eax [ebx+0Ah] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jnb loc_44AB33  +
mov eax [esp+8Ch+var_54] +
add eax [esp+8Ch+var_64] +
lea ecx [eax+1] +
cmp [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_34] ecx +
jnb loc_44A3A3  +
cmp [esp+8Ch+var_74] 2 +
ja loc_44ACB2  +
xor eax eax +
jmp loc_44A3C5  +
add dword ptr [ebp+0Ch] 4 +
xor ecx ecx +
mov [esp+8Ch+var_64] 4 +
jmp loc_44A30E  +
movzx eax byte ptr [eax] +
cmp [esp+8Ch+var_74] 2 +
mov [esp+8Ch+var_2D] al +
ja loc_44ACB2  +
cmp eax 4 +
ja loc_44AC62  +
jz loc_44A3E7  +
cmp eax 2 +
jz loc_44A3E7  +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFoun +
call off_4730E4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4029E0  +
jmp loc_449F3E  +
mov eax [esp+8Ch+var_3C] +
mov ecx [ebp+38h] +
mov edx [ebp+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
call sub_445E00  +
test eax eax +
jz loc_449F3E  +
cmp edi 0 +
mov eax [ebp+40h] +
ja loc_449F3E  +
cmp ebx eax +
jnb loc_449F3E  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 1E4h +
mov [esp+8Ch+var_8C] edi +
call sub_404C60  +
test eax eax +
mov [esp+8Ch+var_48] eax +
jz loc_449F3E  +
mov eax [ebp+3Ch] +
mov [esp+8Ch+var_58] edi +
add ebx eax +
add eax [ebp+40h] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_74] eax +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_408020  +
add ebx [esp+8Ch+var_1C] +
test eax eax +
mov [esp+8Ch+var_50] eax +
jz loc_44A64F  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_54] ebp +
mov ebp ebx +
mov [esp+8Ch+var_44] esi +
mov [esp+8Ch+var_88] 18h +
mov [esp+8Ch+var_8C] edi +
call sub_404C60  +
test eax eax +
mov ebx eax +
jz loc_44AC59  +
mov eax [esp+8Ch+var_50] +
mov esi [esp+8Ch+var_74] +
mov [ebx] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_7C] esi +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_408020  +
mov edx [esp+8Ch+var_1C] +
add edx ebp +
lea ebp [edx+1] +
mov [ebx+4] eax +
xor eax eax +
cmp esi ebp +
jb loc_44A4F0  +
movzx eax byte ptr [edx] +
mov [ebx+8] eax +
jmp loc_44A506  +
mov eax [ebx+10h] +
lea eax [eax+edx*8] +
add edx 1 +
mov [eax] esi +
mov [ebx+0Ch] edx +
mov [eax+4] ecx +
mov eax [esp+8Ch+var_74] +
lea ecx [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_8C] edi +
call sub_408020  +
add ebp [esp+8Ch+var_1C] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] ebp +
mov esi eax +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_408020  +
add ebp [esp+8Ch+var_1C] +
test esi esi +
mov ecx eax +
jz loc_44A599  +
mov edx [ebx+0Ch] +
test dl 3 +
jnz loc_44A4F5  +
mov [esp+8Ch+var_70] eax +
mov eax [ebx+10h] +
mov ecx eax +
lea eax ds:20h[edx*8] +
mov [esp+8Ch+var_8C] ecx +
mov [esp+8Ch+var_88] eax +
call sub_4074F0  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jz loc_44A8E9  +
mov [ebx+10h] eax +
mov edx [ebx+0Ch] +
jmp loc_44A4F8  +
mov ecx [esp+8Ch+var_50] +
mov eax 0ECF56BFh +
mov esi [esp+8Ch+var_48] +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov ecx [esp+8Ch+var_54] +
lea eax [esi+eax*4] +
mov edx [eax] +
mov [ebx+14h] edx +
mov [eax] ebx +
mov eax ebp +
sub eax [ecx+3Ch] +
cmp eax [ecx+40h] +
jnb loc_44A647  +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_408020  +
add ebp [esp+8Ch+var_1C] +
mov ecx eax +
mov [esp+8Ch+var_50] eax +
mov eax 0ECF56BFh +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov eax [esi+eax*4] +
test eax eax +
jz loc_44A63B  +
cmp edx [eax] +
jz loc_44A647  +
mov edx [esp+8Ch+var_50] +
jmp loc_44A634  +
cmp edx [eax] +
jz loc_44A647  +
mov eax [eax+14h] +
test eax eax +
jnz loc_44A630  +
mov eax [esp+8Ch+var_50] +
test eax eax +
jnz loc_44A497  +
mov ebp [esp+8Ch+var_54] +
mov esi [esp+8Ch+var_44] +
mov eax [esp+8Ch+var_4C] +
mov edi [esp+8Ch+var_34] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
call sub_408020  +
mov ecx eax +
mov eax [esp+8Ch+var_20] +
add eax edi +
test ecx ecx +
mov edi eax +
jz loc_44AC8C  +
mov eax ecx +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub edx eax +
mov eax edx +
mov edx [esp+8Ch+var_48] +
mov ebx [edx+eax*4] +
test ebx ebx +
jnz loc_44A6CB  +
jmp loc_44A91F  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_44A91F  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_44A6C0  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 64h +
mov [esp+8Ch+var_8C] eax +
call sub_404C60  +
test eax eax +
mov [esp+8Ch+var_74] eax +
jz loc_449F3E  +
mov eax [esp+8Ch+var_74] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_4C] +
mov [eax+8] ecx +
mov ecx [esp+8Ch+var_40] +
mov [eax+54h] ecx +
mov ecx eax +
movzx eax [esp+8Ch+var_2D] +
mov [ecx+58h] al +
movzx eax byte ptr [esp+8Ch+var_64] +
mov [ecx+59h] al +
mov eax ecx +
mov ecx [esp+8Ch+var_48] +
mov [eax+30h] esi +
mov esi [ebx+0Ch] +
mov [eax+40h] edx +
mov [eax+50h] ebp +
mov [eax+1Ch] ecx +
mov ecx eax +
mov eax [ebp+1Ch] +
test esi esi +
mov [ecx+34h] eax +
jz loc_44A984  +
mov eax ecx +
xor esi esi +
lea ecx [ecx+0Ch] +
mov [esp+8Ch+var_48] ecx +
mov ecx edi +
mov edi edx +
mov [esp+8Ch+var_50] ebp +
mov ebp eax +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_58] 0 +
mov [esp+8Ch+var_54] 0 +
jmp loc_44A79C  +
cmp eax 10h +
jz loc_44A892  +
ja loc_44A7EB  +
cmp eax 3 +
nop   +
jnz loc_44A790  +
mov eax [esp+8Ch+var_14] +
mov [ebp+18h] eax +
lea esi [esi+0] +
add esi 1 +
cmp esi [ebx+0Ch] +
jnb loc_44A941  +
mov eax [ebx+10h] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+8Ch+var_1C] edx +
mov edx [eax+4] +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_8C] ecx +
mov ecx ebp +
mov [esp+8Ch+var_88] edi +
call sub_4467E0  +
test eax eax +
mov ecx eax +
jz loc_44A828  +
mov eax [esp+8Ch+var_1C] +
cmp eax 12h +
jz loc_44A877  +
jbe loc_44A770  +
cmp eax 1Bh +
jz loc_44A831  +
cmp eax 55h +
jz loc_44A7FE  +
cmp eax 13h +
nop   +
jnz loc_44A790  +
mov eax [esp+8Ch+var_14] +
mov [ebp+20h] eax +
jmp loc_44A790  +
mov eax [esp+8Ch+var_14] +
cmp dword ptr [ebx+4] 11h +
mov [esp+8Ch+var_64] eax +
jnz loc_44A790  +
mov [ebp+5Ch] eax +
jmp loc_44A790  +
mov edx [esp+8Ch+var_10] +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] ecx +
mov [esp+8Ch+var_88] edx +
mov edx [esp+8Ch+var_48] +
mov [esp+8Ch+var_8C] eax +
mov eax ebp +
call sub_4466C0  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jnz loc_44A790  +
mov ebp [esp+8Ch+var_50] +
jmp loc_449F3E  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] eax +
mov eax [esp+8Ch+var_18] +
cmp eax 8 +
jz loc_44A8A5  +
cmp eax 0Eh +
jz loc_44A8A5  +
cmp eax 1F21h +
jz loc_44A8A5  +
mov [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorDw_a +
call off_4730E4  +
mov ecx [esp+8Ch+var_4C] +
mov [esp+8Ch+var_70] 0 +
mov eax [esp+8Ch+var_70] +
mov [ebp+28h] eax +
jmp loc_44A790  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_58] eax +
xor eax eax +
cmp [esp+8Ch+var_18] 1 +
setnz al  +
mov [esp+8Ch+var_54] eax +
jmp loc_44A790  +
mov dword ptr [ebp+2Ch] 1 +
mov eax [esp+8Ch+var_14] +
mov [ebp+38h] eax +
jmp loc_44A790  +
mov eax [esp+8Ch+var_70] +
test eax eax +
jz loc_44A86B  +
mov [esp+8Ch+var_88] 3Ah +
mov [esp+8Ch+var_8C] eax +
mov [esp+8Ch+var_4C] ecx +
call strchr  +
mov ecx [esp+8Ch+var_4C] +
cmp [esp+8Ch+var_70] eax +
jz loc_44A86B  +
test eax eax +
jz loc_44A86B  +
cmp byte ptr [eax-1] 2Eh +
jnz loc_44A86B  +
lea edx [eax+1] +
cmp byte ptr [eax+1] 2Fh +
mov eax edx +
cmovnz eax [esp+8Ch+var_70] +
mov [esp+8Ch+var_70] eax +
jmp loc_44A86B  +
mov ebp [esp+8Ch+var_54] +
xor ebx ebx +
mov edi [esp+8Ch+var_48] +
mov esi [edi+ebx*4] +
test esi esi +
jz loc_44A912  +
lea esi [esi+0] +
mov eax [esi+10h] +
mov [esp+8Ch+var_8C] eax +
call free  +
mov esi [esi+14h] +
test esi esi +
jnz loc_44A900  +
add ebx 1 +
cmp ebx 79h +
jnz loc_44A8F3  +
jmp loc_449F3E  +
mov [esp+8Ch+var_88] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorCoul +
call off_4730E4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4029E0  +
jmp loc_449F3E  +
mov edi ecx +
mov eax [esp+8Ch+var_64] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_54] +
mov ebp [esp+8Ch+var_50] +
add eax ecx +
test edx edx +
cmovz eax ecx +
test eax eax +
mov [esp+8Ch+var_58] eax +
jz loc_44A984  +
mov ecx [esp+8Ch+var_58] +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_8C] ecx +
mov ecx [esp+8Ch+var_64] +
lea edx [eax+0Ch] +
add eax 8 +
call sub_446500  +
test eax eax +
jz loc_449F3E  +
mov eax [esp+8Ch+var_74] +
mov [eax+3Ch] edi +
mov eax [esp+8Ch+var_60] +
add eax [ebp+0Ch] +
jb loc_44ACEC  +
mov [ebp+0Ch] eax +
mov eax [ebp+0] +
mov edi [esp+8Ch+var_74] +
test eax eax +
jz loc_44AB49  +
mov [eax+4] edi +
mov esi [esp+8Ch+var_5C] +
mov edi [esp+8Ch+var_74] +
test esi esi +
mov [edi] eax +
mov [ebp+0] edi +
jz loc_44AA10  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jz loc_44AA4E  +
mov ebx [edi+14h] +
mov eax edi +
test ebx ebx +
jz loc_44AA4E  +
mov ecx [edi+24h] +
mov [esp+8Ch+var_68] 0 +
test ecx ecx +
jz loc_44AA41  +
mov ecx [ebp+18h] +
mov ebx [ebp+0Ch] +
mov eax ebx +
sub eax [ebp+1Ch] +
cmp eax [ecx+24h] +
jz loc_44AB51  +
mov esi [esp+8Ch+var_68] +
test esi esi +
jz loc_44A098  +
jmp loc_449F36  +
mov eax [esp+8Ch+var_74] +
mov edx [eax+14h] +
test edx edx +
jz loc_44AA8C  +
mov edi [eax+24h] +
mov [esp+8Ch+var_68] 0 +
test edi edi +
jnz loc_44A9E7  +
mov edx [esp+8Ch+var_6C] +
call sub_4463E0  +
test eax eax +
jnz loc_44AA8C  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
jmp loc_44A9E7  +
mov edx [esp+8Ch+var_6C] +
call sub_4463E0  +
test eax eax +
jz loc_44A9E7  +
mov eax [esp+8Ch+arg_1C] +
mov ecx [esp+8Ch+var_6C] +
mov edx [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_448B50  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_44A9E7  +
mov eax [esp+8Ch+arg_20] +
mov ecx [esp+8Ch+arg_14] +
mov edx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_2C] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_448CD0  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_44A9E7  +
mov [esp+8Ch+var_88] 0ABDh +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_402930  +
jmp loc_44A35B  +
mov eax [esp+8Ch+var_70] +
mov edx ebx +
mov [esp+8Ch+var_50] ecx +
call sub_446330  +
mov ecx [esp+8Ch+var_50] +
mov [esp+8Ch+var_40] eax +
sub eax 2 +
mov [esp+8Ch+var_74] eax +
jmp loc_44A348  +
lea eax [ebx+6] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jb loc_44A36C  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_446350  +
mov ebx eax +
jmp loc_44A36C  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_446370  +
mov ebx eax +
mov edi edx +
jmp loc_44A36C  +
mov [ebp+4] edi +
jmp loc_44A9AD  +
mov eax [ebp+14h] +
mov edx [esp+8Ch+arg_24] +
call sub_446470  +
mov ebx [ebp+0Ch] +
mov [ebp+1Ch] ebx +
mov [ebp+18h] eax +
jmp loc_44A9FB  +
mov eax [eax+4] +
mov edi [esp+8Ch+arg_8] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+70h] +
mov [esp+8Ch+var_8C] eax +
call sub_408C80  +
test eax eax +
jz loc_44A048  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_44A048  +
mov [esp+8Ch+var_74] 0 +
xor edi edi +
mov [esp+8Ch+var_68] ebp +
mov eax [esi+4] +
mov ecx eax +
mov [esp+8Ch+var_70] eax +
add eax 24h +
jz loc_44AC06  +
mov edx [ecx+30h] +
jmp loc_44ABDA  +
cmp ebx edx +
jz loc_44ABDE  +
mov eax [eax] +
test eax eax +
jz loc_44AC06  +
test edx edx +
jnz loc_44ABD0  +
mov ecx [eax+4] +
cmp [esp+8Ch+var_6C] ecx +
jb loc_44ABD4  +
mov ebp [eax+8] +
cmp [esp+8Ch+var_6C] ebp +
jnb loc_44ABD4  +
sub ebp ecx +
test edi edi +
jz loc_44ABFC  +
cmp ebp [esp+8Ch+var_74] +
jnb loc_44ABD4  +
mov [esp+8Ch+var_74] ebp +
mov edi [esp+8Ch+var_70] +
jmp loc_44ABD4  +
mov esi [esi] +
test esi esi +
jnz loc_44ABBB  +
test edi edi +
mov ebp [esp+8Ch+var_68] +
jz loc_44A048  +
mov eax [edi+0Ch] +
mov ecx [esp+8Ch+arg_14] +
mov [edi+30h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [ecx] eax +
mov eax [edi+14h] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_449F3E  +
mov [esp+8Ch+var_68] 0 +
jmp loc_449F25  +
mov dword ptr [ebp+7Ch] 2 +
jmp loc_449DD8  +
mov ebp [esp+8Ch+var_54] +
jmp loc_449F3E  +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_0 +
call off_4730E4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4029E0  +
jmp loc_449F3E  +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] offset aDwarfErrorBadA +
call off_4730E4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4029E0  +
jmp loc_449F3E  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_1 +
mov [esp+8Ch+var_88] eax +
call off_4730E4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4029E0  +
jmp loc_449F3E  +
mov ebx [ebp+0Ch] +
mov eax [ebp+14h] +
mov ecx [ebp+10h] +
lea edx [ebx+4] +
add eax 4 +
jmp loc_44A080  +
mov [esp+8Ch+var_68] 0 +
jmp loc_449F3E  +
mov [esp+8Ch+var_60] edi +
xor ecx ecx +
mov [esp+8Ch+var_64] 8 +
jmp loc_44A311  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_44AD64  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_44AD70  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_44AD5F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_44AD70  +
sub edx 1 +
jnz loc_44AD53  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_44ADD0  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_408FA0  +
test eax eax +
jz loc_44ADC2  +
mov dword ptr [eax+14h] 0FFFFFFFFh +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_408EF0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_44ADBD  +
jmp loc_44AD90  +
***
mov [esp+18h+var_18] 2Ch +
call sub_407460  +
test eax eax +
mov ebx eax +
jz loc_44AE66  +
mov [esp+18h+var_10] 18h +
mov [esp+18h+var_14] offset sub_44AD80 +
mov [esp+18h+var_18] eax +
call sub_408A20  +
test eax eax +
jz loc_44AE57  +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+1Ch] 1 +
mov dword ptr [ebx+20h] 40h +
mov [esp+18h+var_18] 100h +
call sub_407460  +
test eax eax +
mov [ebx+28h] eax +
jz loc_44AE57  +
mov dword ptr [eax] 0 +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
jmp loc_44AE52  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_408A50  +
mov eax [ebx+28h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+18h+arg_4] +
mov esi [esp+18h+arg_0] +
cmp byte ptr [edi] 0 +
jz loc_44AF15  +
mov edx [esi+24h] +
test edx edx +
jnz loc_44AF20  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_408C80  +
test eax eax +
mov ebx eax +
jz loc_44AF36  +
add dword ptr [eax+10h] 1 +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_44AF12  +
mov [esp+18h+var_18] edi +
call strlen  +
add eax 1 +
test eax eax +
mov [ebx+0Ch] eax +
jle loc_44AF66  +
mov edx [esi+1Ch] +
cmp edx [esi+20h] +
jz loc_44AF42  +
mov eax [esi+28h] +
lea ecx [edx+1] +
mov [esi+1Ch] ecx +
mov [ebx+14h] edx +
mov [eax+edx*4] ebx +
mov eax [ebx+14h] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_14] 99h +
mov [esp+18h+var_18] offset a____Binutil_15 +
call sub_402930  +
jmp loc_44AEBC  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea eax [edx+edx] +
mov [esi+20h] eax +
mov eax [esi+28h] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_4075B0  +
test eax eax +
mov [esi+28h] eax +
jz loc_44AF36  +
mov edx [esi+1Ch] +
jmp loc_44AF06  +
mov [esp+18h+var_14] 0A5h +
mov [esp+18h+var_18] offset a____Binutil_15 +
call sub_402930  +
jmp loc_44AEFB  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_44AFAB  +
mov eax [esi+24h] +
test eax eax +
jnz loc_44AFC7  +
cmp ebx [esi+1Ch] +
jnb loc_44AFB1  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
add dword ptr [eax+10h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0BCh +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_402930  +
jmp loc_44AFA1  +
mov [esp+14h+var_10] 0BBh +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_402930  +
cmp ebx [esi+1Ch] +
jb loc_44AFA1  +
jmp loc_44AFB1  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_44B024  +
mov eax [esi+24h] +
test eax eax +
jnz loc_44B050  +
cmp ebx [esi+1Ch] +
jnb loc_44B069  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jz loc_44B030  +
sub edx 1 +
mov [eax+10h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0C7h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_402930  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
jmp loc_44B01E  +
mov [esp+14h+var_10] 0C5h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_402930  +
cmp ebx [esi+1Ch] +
jb loc_44B011  +
mov [esp+14h+var_10] 0C6h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_402930  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jnz loc_44B01E  +
jmp loc_44B030  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax+28h] +
mov eax [eax+edx*4] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
cmp edx 1 +
jbe locret_44B0D5  +
mov ecx [eax+28h] +
lea eax [ecx+4] +
lea ecx [ecx+edx*4] +
mov edx [eax] +
add eax 4 +
cmp eax ecx +
mov dword ptr [edx+10h] 0 +
jnz loc_44B0C5  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [edi+24h] +
mov esi [edi+1Ch] +
test eax eax +
jnz loc_44B125  +
cmp esi ebx +
jb loc_44B13D  +
cmp esi ebx +
mov [edi+1Ch] ebx +
jbe loc_44B11E  +
mov edx [edi+28h] +
mov eax [edx+ebx*4] +
add ebx 1 +
cmp ebx esi +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
jnz loc_44B106  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 0E1h +
mov [esp+10h+var_10] offset a____Binutil_15 +
call sub_402930  +
cmp esi ebx +
jnb loc_44B0FC  +
mov [esp+10h+var_C] 0E2h +
mov [esp+10h+var_10] offset a____Binutil_15 +
call sub_402930  +
jmp loc_44B0FC  +
***
mov edx [esp+arg_0] +
push esi  +
push esi  +
push esi  +
mov edx [eax] +
mov ecx eax +
test dl 1 +
jz loc_44B481  +
xor eax eax +
cmp dword ptr [ecx+4] 0 +
jnz locret_44B49C  +
test dl 2 +
jz loc_44B494  +
mov ecx [ecx+8] +
test ecx ecx +
jz loc_44B494  +
xor eax eax +
cmp byte ptr [ecx] 0 +
jnz locret_44B49C  +
xor eax eax +
and edx 4 +
setz al  +
retn   +
***
push ebx  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax ecx +
jmp loc_44B519  +
add ebx 1 +
or ecx 0FFFFFF80h +
mov [ebx-1] cl +
mov ecx edx +
shr edx 7 +
and ecx 7Fh +
test edx edx +
jnz loc_44B510  +
mov [ebx] cl +
mov edx [eax] +
lea esi [ebx+1] +
test dl 1 +
jz loc_44B549  +
mov ecx [eax+4] +
mov edx esi +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jnz loc_44B557  +
lea esi [edx+1] +
mov [edx] bl +
mov edx [eax] +
and edx 2 +
jnz loc_44B570  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
or ebx 0FFFFFF80h +
add edx 1 +
mov [edx-1] bl +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jz loc_44B542  +
jmp loc_44B557  +
mov edi [eax+8] +
mov [esp+10h+var_10] edi +
call strlen  +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] esi +
lea ebx [eax+1] +
mov [esp+10h+var_8] ebx +
add esi ebx +
call memcpy  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+1Ch+var_14] edx +
jnz loc_44B6E0  +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov ecx [edx+184h] +
test ecx ecx +
mov [esp+1Ch+var_10] ecx +
jz loc_44B6ED  +
mov eax [eax+0A0h] +
mov ebx 2 +
xor edi edi +
mov ecx eax +
mov ebp eax +
imul eax [esp+1Ch+var_14] +
lea esi [ecx+eax+268h] +
nop   +
mov eax esi +
call sub_44B470  +
xor edx edx +
test eax eax +
jnz loc_44B678  +
mov edx esi +
mov eax ebx +
call sub_44B4A0  +
mov edx eax +
add ebx 1 +
add edi edx +
add esi 0Ch +
cmp ebx 47h +
jnz loc_44B660  +
mov ecx [esp+1Ch+var_14] +
mov ebx [ebp+ecx*4+8F8h] +
test ebx ebx +
jz loc_44B6BA  +
lea esi [ebx+8] +
mov ebp [ebx+4] +
mov eax esi +
call sub_44B470  +
xor edx edx +
test eax eax +
jnz loc_44B6B2  +
mov edx esi +
mov eax ebp +
call sub_44B4A0  +
mov edx eax +
mov ebx [ebx] +
add edi edx +
test ebx ebx +
jnz loc_44B694  +
test edi edi +
jnz loc_44B6C8  +
mov edx [esp+1Ch+var_14] +
xor eax eax +
test edx edx +
jnz loc_44B6D8  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea eax [edi+eax+0Ah] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_10] offset aGnu_0 +
jmp loc_44B63E  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 4 +
mov ebx [esp+8+arg_0] +
mov eax ebx +
call sub_44B610  +
mov edx 1 +
mov esi eax +
mov eax ebx +
call sub_44B610  +
lea edx [eax+esi] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
cmovnz eax ecx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] 1 +
mov [esp+3Ch+var_1C] 0 +
lea edx [eax+1] +
mov [esp+3Ch+var_10] edx +
mov byte ptr [eax] 41h +
mov edx [esp+3Ch+var_1C] +
mov eax ebp +
call sub_44B610  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jnz loc_44B7B0  +
mov eax [esp+3Ch+var_18] +
add [esp+3Ch+var_1C] 1 +
add [esp+3Ch+var_10] eax +
add [esp+3Ch+var_14] eax +
cmp [esp+3Ch+var_1C] 2 +
jnz loc_44B769  +
mov eax [esp+3Ch+var_14] +
cmp eax [esp+3Ch+arg_8] +
jnz loc_44B8EA  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_1C] +
mov edi [ebp+4] +
test eax eax +
jz loc_44B8CE  +
mov ebx 4 +
mov esi offset aGnu_0 +
mov eax [edi+30h] +
mov edi [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_38] edi +
lea edi [edi+4] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp-10h+arg_4] ebx +
mov [esp-10h+arg_0] esi +
lea esi [edi+ebx] +
mov [esp+0] edi +
call memcpy  +
mov byte ptr [esi] 1 +
mov eax [ebp+4] +
mov edx [eax+30h] +
lea eax [esi+1] +
mov [esp-10h+arg_0] eax +
mov eax [esp+24h] +
sub eax 4 +
sub eax ebx +
mov ebx 2 +
mov [esp+0] eax +
call edx  +
lea eax [esi+5] +
mov edx [ebp+0A0h] +
mov [esp+18h] eax +
imul eax [esp+20h] +
lea eax [edx+eax+250h] +
mov [esp+1Ch] eax +
mov eax [ebp+4] +
mov edi ebx +
mov eax [eax+1B0h] +
mov eax [eax+194h] +
test eax eax +
jz loc_44B852  +
mov [esp+0] ebx +
call eax  +
mov edi eax +
mov ecx [esp+1Ch] +
lea eax [edi+edi*2] +
lea esi [ecx+eax*4] +
mov eax esi +
call sub_44B470  +
test eax eax +
jnz loc_44B878  +
mov eax [esp+18h] +
mov ecx esi +
mov edx edi +
call sub_44B500  +
mov [esp+18h] eax +
add ebx 1 +
cmp ebx 47h +
jnz loc_44B836  +
mov eax [ebp+0A0h] +
mov edx [esp+20h] +
mov ebx [eax+edx*4+8F8h] +
test ebx ebx +
jz loc_44B77C  +
mov edi [esp+18h] +
mov [esp+50h] ebp +
lea ebp [ebx+8] +
mov esi [ebx+4] +
mov eax ebp +
call sub_44B470  +
test eax eax +
jnz loc_44B8BF  +
mov eax edi +
mov ecx ebp +
mov edx esi +
call sub_44B500  +
mov edi eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44B8A1  +
mov ebp [esp+50h] +
jmp loc_44B77C  +
mov eax [edi+1B0h] +
mov esi [eax+184h] +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea ebx [eax+1] +
jmp loc_44B7C9  +
mov [esp+3Ch+var_34] offset aBfd_elf_set_ob +
mov [esp+3Ch+var_38] 0E1h +
mov [esp+3Ch+var_3C] offset a____Binutil_23 +
call sub_402960  +
lea esi [esi+0] +
lea edi [edi+0] +
mov ecx [esp+3Ch+var_30] +
cmp ecx 46h +
jbe loc_44B950  +
mov eax [esp+3Ch+var_38] +
mov edx [esp+3Ch+var_34] +
mov eax [eax+0A0h] +
mov eax [eax+edx*4+8F8h] +
test eax eax +
jnz loc_44B942  +
jmp loc_44B970  +
cmp ecx edx +
jb loc_44B970  +
mov eax [eax] +
test eax eax +
lea esi [esi+0] +
jz locret_44B973  +
mov edx [eax+4] +
cmp edx ecx +
jnz loc_44B934  +
mov eax [eax+0Ch] +
retn   +
lea edx [ecx+ecx*2] +
mov ecx [esp+3Ch+var_38] +
imul eax [esp+3Ch+var_34] +
lea eax [eax+edx*4] +
add eax [ecx+0A0h] +
mov eax [eax+254h] +
retn   +
xor eax eax +
retn   +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_404B80  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ecx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_8] +
test eax eax +
jz loc_44BA10  +
cmp eax 1 +
jnz loc_44B9F0  +
cmp edx 20h +
jz loc_44BA28  +
and edx 1 +
cmp edx 1 +
sbb eax eax +
add eax 2 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset a_bfd_elf_obj_a +
mov [esp+1Ch+var_18] 1A8h +
mov [esp+1Ch+var_1C] offset a____Binutil_23 +
call sub_402960  +
lea esi [esi+0] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+18Ch] +
mov [esp+1Ch+arg_0] edx +
add esp 1Ch +
jmp eax  +
mov eax 3 +
jmp loc_44B9E8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_44BA80  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44B9C0  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esi+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_44B5A0  +
mov esi eax +
jmp loc_44BA5E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_44BAF0  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44B9C0  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_44B980  +
mov [esi+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_44B5A0  +
mov esi eax +
jmp loc_44BABE  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp esi 46h +
ja loc_44BB62  +
imul eax ebp +
lea edx [esi+esi*2] +
lea ebx [eax+edx*4+250h] +
add ebx [edi+0A0h] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44B9C0  +
mov [ebx] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebx+4] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_44B980  +
mov [ebx+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov edx ebp +
mov eax edi +
call sub_44B5A0  +
mov ebx eax +
jmp loc_44BB2E  +
***
jmp sub_44BB80  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_44BBA0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44BB98  +
mov [esp+2Ch+var_10] 0 +
mov eax [esp+2Ch+arg_0] +
imul edx [esp+2Ch+var_10] +
mov ebx [eax+0A0h] +
add edx 268h +
add ebx edx +
add edx [esi+0A0h] +
lea ebp [ebx+33Ch] +
mov edi edx +
jmp loc_44BBEA  +
add ebx 0Ch +
add edi 0Ch +
cmp ebx ebp +
jz loc_44BC19  +
mov eax [ebx] +
mov [edi] eax +
mov eax [ebx+4] +
mov [edi+4] eax +
mov eax [ebx+8] +
test eax eax +
jz loc_44BBE0  +
cmp byte ptr [eax] 0 +
jz loc_44BBE0  +
mov [esp+2Ch+var_28] eax +
add ebx 0Ch +
add edi 0Ch +
mov [esp+2Ch+var_2C] esi +
call sub_44B980  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_44BBEA  +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+var_10] +
mov eax [eax+0A0h] +
mov ebx [eax+ecx*4+8F8h] +
test ebx ebx +
jz loc_44BC87  +
mov eax [ebx+8] +
and eax 3 +
cmp eax 2 +
jz loc_44BC63  +
cmp eax 3 +
jz loc_44BCC0  +
cmp eax 1 +
jz loc_44BCA0  +
mov [esp+2Ch+var_24] offset a_bfd_elf_copy_ +
mov [esp+2Ch+var_28] 185h +
mov [esp+2Ch+var_2C] offset a____Binutil_23 +
call sub_402960  +
mov eax [ebx+4] +
mov edx [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44BA90  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44BC32  +
add [esp+2Ch+var_10] 1 +
cmp [esp+2Ch+var_10] 2 +
jz loc_44BB98  +
jmp loc_44BBB1  +
mov eax [ebx+4] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44BA30  +
jmp loc_44BC81  +
mov eax [ebx+4] +
mov ecx [ebx+10h] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44BB00  +
jmp loc_44BC81  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_44BD10  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_5C] eax +
call sub_407460  +
test eax eax +
mov ebp eax +
jz loc_44BD02  +
mov eax [ebx+2Ch] +
mov edx [ebx+18h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_48] edx +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_4064D0  +
test eax eax +
jz loc_44BD70  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [ebp+0] 41h +
mov edx [ebx+18h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov ecx [ecx+184h] +
mov [esp+5Ch+var_30] ecx +
jz loc_44BD80  +
mov [esp+5Ch+var_5C] ebp +
call free  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
sub esi 1 +
mov [esp+5Ch+var_28] esi +
jz loc_44BD70  +
add edx ebp +
lea ecx [edx-4] +
lea ebx [ebp+1] +
cmp ebx ecx +
mov [esp+5Ch+var_3C] edx +
mov [esp+5Ch+var_34] ecx +
jnb loc_44BD70  +
mov [esp+5Ch+var_20] ebp +
mov ebp [esp+5Ch+arg_0] +
mov edi ebx +
mov eax [eax+28h] +
lea ebx [edi+4] +
mov [esp+5Ch+var_5C] edi +
call eax  +
test eax eax +
jz loc_44C068  +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] ebx +
cmp ecx eax +
cmovbe eax ecx +
mov [esp+5Ch+var_24] eax +
sub eax 4 +
mov [esp+5Ch+var_58] eax +
mov esi eax +
mov [esp+5Ch+var_38] eax +
call sub_470390  +
lea edx [eax+1] +
cmp edx esi +
jnb loc_44C068  +
test edx edx +
jz loc_44C068  +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_44C030  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_40] edx +
call strcmp  +
mov edx [esp+5Ch+var_40] +
test eax eax +
jnz loc_44C030  +
mov [esp+5Ch+var_40] 0 +
mov eax [esp+5Ch+var_38] +
lea edi [ebx+edx] +
sub eax edx +
mov [esp+5Ch+var_38] eax +
jz loc_44BF50  +
cmp [esp+5Ch+var_3C] edi +
jbe loc_44BF50  +
mov ebx edi +
mov eax [esp+5Ch+var_3C] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] eax +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
call sub_408020  +
mov edi [esp+5Ch+var_10] +
add edi ebx +
cmp edi [esp+5Ch+var_34] +
mov esi eax +
jnb loc_44C060  +
mov eax [ebp+4] +
mov eax [eax+28h] +
mov [esp+5Ch+var_5C] edi +
add edi 4 +
call eax  +
test eax eax +
jz loc_44BF50  +
mov ecx [esp+5Ch+var_38] +
mov ebx 0FFFFFFFCh +
cmp eax ecx +
cmova eax ecx +
sub ebx [esp+5Ch+var_10] +
mov [esp+5Ch+var_2C] eax +
add ebx eax +
add ebx edi +
cmp esi 1 +
jnz loc_44BF32  +
mov eax [esp+5Ch+var_3C] +
cmp ebx eax +
cmova ebx eax +
cmp ebx edi +
jbe loc_44BF30  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_408020  +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
mov esi eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44B9C0  +
and eax 3 +
cmp eax 2 +
jz loc_44C002  +
cmp eax 3 +
jz loc_44BFB1  +
cmp eax 1 +
jz loc_44BF70  +
mov [esp+5Ch+var_54] offset a_bfd_elf_parse +
mov [esp+5Ch+var_58] 21Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_23 +
call sub_402960  +
lea esi [esi+0] +
mov ebx edi +
mov eax [esp+5Ch+var_2C] +
sub [esp+5Ch+var_38] eax +
cmp ebx [esp+5Ch+var_3C] +
jnb loc_44BF4C  +
mov eax [esp+5Ch+var_38] +
test eax eax +
jnz loc_44BE40  +
mov edi ebx +
nop   +
mov eax [esp+5Ch+var_24] +
sub [esp+5Ch+var_28] eax +
jz loc_44C068  +
cmp edi [esp+5Ch+var_34] +
jnb loc_44C068  +
mov eax [ebp+4] +
jmp loc_44BDA9  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_408020  +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44BA30  +
jmp loc_44BEB8  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_408020  +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44BB00  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_44BEB8  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_50] edi +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_44BA90  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_44BEB8  +
mov edi offset aGnu_0 +
mov ecx 4 +
mov esi ebx +
cmps   +
jnz loc_44C050  +
mov [esp+5Ch+var_40] 1 +
jmp loc_44BE21  +
mov edi [esp+5Ch+var_38] +
add edi ebx +
jmp loc_44BF50  +
add edi 4 +
jmp loc_44BF50  +
mov ebp [esp+5Ch+var_20] +
jmp loc_44BD70  +
***
jmp loc_44C080  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov dword ptr [esp+24h] 2 +
mov eax [eax+0A0h] +
lea ebx [eax+3D0h] +
mov eax [esp+54h] +
mov ebp [eax+0A0h] +
add ebp 3D0h +
mov edx [ebx+4] +
test edx edx +
jnz loc_44C0E1  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_44C18A  +
add ebx 354h +
add ebp 354h +
sub dword ptr [esp+24h] 1 +
jnz loc_44C0AF  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [ebx+8] +
mov edi offset aGnu_0 +
mov ecx 4 +
mov [esp+28h] esi +
cmps   +
jnz loc_44C161  +
mov ecx [ebp+4] +
cmp edx ecx +
jnz loc_44C185  +
mov esi [ebp+8] +
mov eax [esp+28h] +
mov [esp+2Ch] edx +
mov [esp+4] esi +
mov [esp] eax +
call strcmp  +
mov edx [esp+2Ch] +
test eax eax +
jz loc_44C0C1  +
mov ecx edx +
mov edi [esp+28h] +
mov eax offset unk_48D167 +
test esi esi +
cmovz esi eax +
mov [esp+14h] esi +
mov [esp+10h] ecx +
test edi edi +
cmovnz eax edi +
mov [esp+0Ch] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov dword ptr [esp] offset aErrorBObjectTa +
mov [esp+4] eax +
call off_4730E4  +
xor eax eax +
jmp loc_44C0D9  +
***
mov eax [esp+28h] +
mov dword ptr [esp] offset aErrorBObjectHa +
mov [esp+8] eax +
mov eax [esp+50h] +
mov [esp+4] eax +
call off_4730E4  +
xor eax eax +
jmp loc_44C0D9  +
***
mov esi [ebp+8] +
jmp loc_44C122  +
***
mov eax [ebx+8] +
mov esi [ebp+8] +
mov [esp+28h] eax +
jmp loc_44C122  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esp+34h] +
mov edx [esp+38h] +
mov edi [esi+0A0h] +
mov ebx [eax+0A0h] +
lea ecx [edx+edx*2] +
shl ecx 2 +
add edi 250h +
lea ebx [ebx+ecx+250h] +
add edi ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_44C1E2  +
mov ebp [ebx+8] +
test ebp ebp +
jz loc_44C252  +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+198h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
mov esi eax +
mov eax [ebx+4] +
cmp [edi+4] eax +
jz loc_44C220  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp [ebx+8] +
mov eax [edi+8] +
test ebp ebp +
setz cl  +
test eax eax +
mov edi ecx +
setz cl  +
mov edx edi +
cmp dl cl +
jnz loc_44C204  +
test eax eax +
jz loc_44C212  +
test ebp ebp +
jz loc_44C212  +
mov [esp+4] ebp +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_44C204  +
jmp loc_44C212  +
***
mov eax esi +
mov esi [edi+4] +
test esi esi +
jnz loc_44C1E2  +
mov ecx [edi+8] +
mov esi 1 +
test ecx ecx +
jnz loc_44C1E2  +
jmp loc_44C212  +
***
mov eax [esi+4] +
test ebx ebx +
mov edi eax +
jz loc_44C2BD  +
mov edi [ebx+4] +
jmp loc_44C2B7  +
***
mov edi [ebx+4] +
mov ebx [ebx] +
mov eax [esp+34h] +
mov [ecx+8F8h] ebx +
jmp loc_44C2C3  +
***
mov eax [ebx+0Ch] +
cmp [esi+0Ch] eax +
jnz loc_44C313  +
mov edx [ebx+10h] +
mov eax [esi+10h] +
test edx edx +
setz byte ptr [esp+8]  +
test eax eax +
mov [esp+0Ch] edx +
setz dl  +
cmp [esp+8] dl +
jnz loc_44C313  +
test eax eax +
jz loc_44C369  +
mov edx [esp+0Ch] +
test edx edx +
jz loc_44C369  +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+8] ecx +
call strcmp  +
mov ecx [esp+8] +
test eax eax +
jnz loc_44C313  +
mov ebx [ebx] +
mov esi [esi] +
mov eax [esp+34h] +
jmp loc_44C2C3  +
***
push edi  +
mov ecx 20h +
push esi  +
mov edi eax +
push ebx  +
mov esi edx +
sub esp 1Ch +
test dl 1 +
mov eax edx +
jnz loc_44C507  +
test al 2 +
jnz loc_44C517  +
mov ebx ecx +
xor edx edx +
and ebx 0FFFFFFFCh +
mov dword ptr [eax+edx] 0 +
add edx 4 +
cmp edx ebx +
jb loc_44C3AC  +
add eax edx +
test cl 2 +
jz loc_44C3CA  +
xor ebx ebx +
add eax 2 +
mov [eax-2] bx +
and ecx 1 +
jz loc_44C3D2  +
mov byte ptr [eax] 0 +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ebp +
call eax  +
mov edx eax +
mov [esi] eax +
xor eax eax +
test edx edx +
jz loc_44C3FD  +
lea ecx [ebp+edx+0] +
cmp [esp+28h+arg_0] ecx +
jbe loc_44C3FD  +
cmp edx 5 +
ja loc_44C405  +
xor edx edx +
mov al 1 +
mov [esi+1Ch] dx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
lea edx [ebp+4] +
lea ebx [ebp+6] +
mov eax [eax+34h] +
mov [esp+28h+var_28] edx +
call eax  +
mov [esi+1Ch] ax +
lea esi [esi+0] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jnb loc_44C476  +
mov eax [edi] +
mov eax [eax+34h] +
mov [esp+28h+var_28] ebx +
call eax  +
lea ecx [ebx+2] +
mov edx eax +
and edx 0Fh +
cmp edx 8 +
ja loc_44C500  +
jmp ds:off_48D278[edx*4]  +
cmp ax 38h +
jz loc_44C528  +
mov [esp+28h+var_28] ecx +
mov [esp+28h+var_1C] ecx +
call strlen  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+1] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jb loc_44C428  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 0Ah +
jmp loc_44C420  +
add ebx 4 +
jmp loc_44C420  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+4] +
jmp loc_44C420  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+34h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+2] +
jmp loc_44C420  +
cmp ax 12h +
jz loc_44C540  +
cmp ax 106h +
jz loc_44C550  +
add ebx 6 +
jmp loc_44C420  +
cmp ax 111h +
jz loc_44C530  +
cmp ax 121h +
jnz loc_44C4DC  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+0Ch] eax +
jmp loc_44C4DC  +
mov ebx ecx +
jmp loc_44C420  +
lea eax [edx+1] +
mov cl 1Fh +
test al 2 +
mov byte ptr [edx] 0 +
jz loc_44C3A5  +
xor edx edx +
add eax 2 +
mov [eax-2] dx +
sub ecx 2 +
jmp loc_44C3A5  +
mov [esi+14h] ecx +
jmp loc_44C45A  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+8] eax +
jmp loc_44C4DC  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+4] eax +
jmp loc_44C4DC  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov dword ptr [esi+18h] 1 +
mov [esi+10h] eax +
jmp loc_44C4DC  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
cmp [edx+8] ecx +
ja loc_44C585  +
cmp ecx [edx+0Ch] +
jb loc_44C590  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
mov eax [edx+10h] +
test eax eax +
jz loc_44C587  +
mov ecx [edx+20h] +
test ecx ecx +
jz loc_44C624  +
mov eax [esi+24h] +
test eax eax +
jz loc_44C720  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_44C5D9  +
mov edi [esi+20h] +
mov edx 1 +
mov eax edi +
mov ecx eax +
sub ecx edi +
cmp ebx [eax] +
jb loc_44C5CD  +
cmp ebx [eax+8] +
jb loc_44C607  +
mov ecx edx +
add eax 8 +
add edx 1 +
cmp ebp ecx +
ja loc_44C5C0  +
xor eax eax +
mov edx [esi+24h] +
test edx edx +
jnz loc_44C5EA  +
jmp loc_44C587  +
mov edx [edx] +
test edx edx +
jz loc_44C587  +
cmp ebx [edx+8] +
lea esi [esi+0] +
jb loc_44C5E4  +
cmp ebx [edx+0Ch] +
jnb loc_44C5E4  +
mov eax [esp+50h+arg_4] +
mov edx [edx+4] +
mov [eax] edx +
mov eax 1 +
jmp loc_44C587  +
mov edx [esi+4] +
mov eax [esp+50h+arg_0] +
mov [eax] edx +
mov eax [esi+20h] +
mov edx [eax+ecx+4] +
mov eax [esp+50h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_44C5DB  +
mov eax [edi+14h] +
test eax eax +
jz loc_44C7C0  +
add eax [esi+14h] +
cmp eax [edi+18h] +
mov ebp eax +
jnb loc_44C5A4  +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebp +
call eax  +
lea ecx [ebp+4] +
add eax ebp +
mov [esp+50h+var_40] eax +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ecx +
call eax  +
lea ecx [ebp+8] +
mov edx 66666667h +
mov [esp+50h+var_3C] ecx +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+var_40] +
sub eax ecx +
mov ebp eax +
imul  edx +
mov eax [edi] +
sar ebp 1Fh +
sar edx 2 +
sub edx ebp +
mov [esi+1Ch] edx +
shl edx 3 +
mov [esp+50h+var_4C] edx +
mov [esp+50h+var_50] eax +
call sub_404B80  +
test eax eax +
mov [esi+20h] eax +
jz loc_44C585  +
mov edx [esi+1Ch] +
test edx edx +
jz loc_44C5A4  +
xor ecx ecx +
mov ebp eax +
mov [esp+50h+var_40] esi +
mov esi ecx +
mov [esp+50h+var_34] ebx +
mov ebx [esp+50h+var_3C] +
jmp loc_44C6C3  +
mov ebp [eax+20h] +
mov eax [edi] +
lea edx ds:0[esi*8] +
add esi 1 +
add ebp edx +
mov [esp+50h+var_3C] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebx +
call eax  +
mov edx [esp+50h+var_3C] +
mov [ebp+4] eax +
mov eax [esp+50h+var_40] +
add edx [eax+20h] +
mov eax [edi] +
mov ebp edx +
lea edx [ebx+6] +
add ebx 0Ah +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] edx +
call eax  +
add eax [esp+50h+var_38] +
mov [ebp+0] eax +
mov eax [esp+50h+var_40] +
cmp esi [eax+1Ch] +
jb loc_44C6C0  +
mov esi [esp+50h+var_40] +
mov ebx [esp+50h+var_34] +
jmp loc_44C5A4  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_44C5AF  +
mov edx [edi+10h] +
cmp ecx edx +
jb loc_44C763  +
jmp loc_44C5AF  +
cmp ax 14h +
jz loc_44C787  +
cmp ax 1Dh +
jz loc_44C787  +
cmp ax 3 +
jz loc_44C787  +
mov ecx [esp+50h+var_2C] +
test ecx ecx +
jz loc_44C5AF  +
mov edx [edi+10h] +
add ecx [edi+0Ch] +
cmp edx ecx +
jbe loc_44C5AF  +
mov eax [edi] +
mov [esp+50h+var_50] edx +
lea edx [esp+50h+var_30] +
add eax 4 +
call sub_44C380  +
test eax eax +
jz loc_44C585  +
movzx eax [esp+50h+var_14] +
cmp ax 6 +
jnz loc_44C737  +
mov eax [edi] +
mov [esp+50h+var_4C] 10h +
mov [esp+50h+var_50] eax +
call sub_404C60  +
test eax eax +
jz loc_44C585  +
mov edx [esi+24h] +
mov [eax] edx +
mov edx [esp+50h+var_1C] +
mov [esi+24h] eax +
mov [eax+4] edx +
mov edx [esp+50h+var_28] +
mov [eax+8] edx +
mov edx [esp+50h+var_24] +
mov [eax+0Ch] edx +
jmp loc_44C749  +
mov eax [edi] +
mov [esp+50h+var_4C] offset a_line_0 +
mov [esp+50h+var_50] eax +
call sub_405CC0  +
test eax eax +
jz loc_44C585  +
mov ebp [eax+28h] +
test ebp ebp +
jnz loc_44C7E4  +
mov ebp [eax+24h] +
mov ecx [edi+4] +
mov edx [edi] +
mov [esp+50h+var_48] 0 +
mov [esp+50h+var_4C] eax +
mov [esp+50h+var_44] ecx +
mov [esp+50h+var_50] edx +
call sub_44E9A0  +
test eax eax +
mov [edi+14h] eax +
jz loc_44C585  +
add ebp eax +
mov [edi+18h] ebp +
jmp loc_44C62F  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
mov eax [esi+0A0h] +
mov ebx [eax+22Ch] +
mov eax [esp+4Ch+arg_8] +
mov ebp [eax+1Ch] +
mov eax [esp+4Ch+arg_10] +
add ebp [esp+4Ch+arg_C] +
test ebx ebx +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
jz loc_44C9C8  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_44C8E3  +
mov edx [ebx+8] +
test edx edx +
jz loc_44C88A  +
cmp ebp [edx+8] +
jb loc_44C884  +
cmp ebp [edx+0Ch] +
jb loc_44C9A0  +
mov edx [edx] +
test edx edx +
jnz loc_44C876  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
cmp ecx edx +
jnb loc_44C8E3  +
mov [esp+4Ch+var_30] ebp +
jmp loc_44C8AD  +
mov edx [ebx+10h] +
add ecx [ebx+0Ch] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
jbe loc_44C8E3  +
mov eax [ebx] +
mov [esp+4Ch+var_4C] edx +
lea edx [esp+4Ch+var_2C] +
add eax 4 +
call sub_44C380  +
test eax eax +
jz loc_44C8E3  +
cmp [esp+4Ch+var_10] 11h +
mov ecx [esp+4Ch+var_28] +
jz loc_44C8F0  +
test ecx ecx +
jnz loc_44C8A0  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
add ecx [esp+4Ch+var_2C] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
ja loc_44C8AD  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
mov [esp+4Ch+var_48] 28h +
mov [esp+4Ch+var_4C] eax +
call sub_404C60  +
test eax eax +
jz loc_44C8E3  +
mov edx [ebx+8] +
mov ecx [esp+4Ch+var_14] +
mov edi [esp+4Ch+var_20] +
mov [eax] edx +
mov [ebx+8] eax +
mov edx [esp+4Ch+var_18] +
mov [eax+10h] ecx +
mov ecx [esp+4Ch+var_1C] +
mov [eax+0Ch] edi +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+14h] ecx +
mov ecx [esp+4Ch+var_28] +
mov [eax+8] edx +
test ecx ecx +
jz loc_44C945  +
mov esi [ebx+1Ch] +
add esi [esp+4Ch+var_2C] +
cmp esi [ebx+10h] +
jb loc_44C990  +
mov dword ptr [eax+18h] 0 +
cmp [esp+4Ch+var_30] edx +
jb loc_44C8CE  +
cmp [esp+4Ch+var_30] edi +
jnb loc_44C8CE  +
mov edi [esp+4Ch+arg_18] +
mov edx eax +
mov eax ebx +
mov ebp [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+arg_14] +
mov ecx ebp +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] edi +
call sub_44C570  +
jmp loc_44C8E5  +
mov ebp [ebx+0Ch] +
add ebp ecx +
cmp esi ebp +
jz loc_44C945  +
mov [eax+18h] esi +
jmp loc_44C94C  +
mov eax [esp+4Ch+arg_18] +
mov ecx ebp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_14] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_44C570  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov [esp+4Ch+var_48] 20h +
mov [esp+4Ch+var_4C] esi +
call sub_404C60  +
test eax eax +
mov ebx eax +
mov [edi+22Ch] eax +
jz loc_44C8E3  +
mov [esp+4Ch+var_48] offset a_debug_0 +
mov [esp+4Ch+var_4C] esi +
call sub_405CC0  +
test eax eax +
jz loc_44C8E3  +
mov edi [eax+28h] +
test edi edi +
jnz loc_44CA10  +
mov edi [eax+24h] +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] ecx +
call sub_44E9A0  +
test eax eax +
mov [ebx+0Ch] eax +
jz loc_44C8E3  +
add edi eax +
mov [ebx+1Ch] eax +
mov eax [esp+4Ch+arg_4] +
mov [ebx+10h] edi +
mov [ebx] esi +
mov [ebx+4] eax +
jmp loc_44C86F  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_44CAA4  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_44CAB0  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_44CA9F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_44CAB0  +
sub edx 1 +
jnz loc_44CA93  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov edx [edx] +
mov ebp [eax+0Ch] +
mov edi [edx+0Ch] +
mov ecx [edx+4] +
mov edx [eax+10h] +
mov ebx [eax+4] +
sub edx 1 +
mov eax edx +
and edx edi +
and eax ebp +
sub eax edx +
test eax eax +
jnz loc_44CB2A  +
cmp edi ebp +
mov edx ebp +
cmovbe edx edi +
test edx edx +
jz loc_44CB26  +
lea esi [ebx+ebp-1] +
lea ebx [ecx+edi-1] +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [ebx] +
cmp al cl +
jnz loc_44CB30  +
mov eax edx +
neg eax  +
add esi eax +
add ebx eax +
jmp loc_44CB21  +
movzx eax byte ptr [esi+edx] +
movzx ecx byte ptr [ebx+edx] +
cmp al cl +
jnz loc_44CB30  +
sub edx 1 +
jnz loc_44CB15  +
mov eax ebp +
sub eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
sub eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_44CB97  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_408FA0  +
test eax eax +
jz loc_44CB90  +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] ebx +
call sub_408EF0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_44CB84  +
jmp loc_44CB50  +
***
jmp sub_44CBC0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_10] ecx +
mov ecx [eax+2Ch] +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_18] edx +
test ecx ecx +
jnz loc_44CCA7  +
mov esi [eax+28h] +
xor ebx ebx +
mov eax edx +
test esi esi +
lea edi [edx+esi] +
jz loc_44CD82  +
add eax 1 +
movzx edx byte ptr [eax-1] +
mov ecx edx +
shl ecx 11h +
add edx ecx +
add edx ebx +
mov ebx edx +
shr ebx 2 +
xor ebx edx +
cmp eax edi +
jnz loc_44CBF0  +
mov edi [esp+2Ch+var_14] +
xor edx edx +
mov eax ebx +
div  dword ptr [edi+0Ch] +
mov eax [edi] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_44CC27  +
jmp loc_44CC71  +
mov edi [edi] +
test edi edi +
jz loc_44CC71  +
cmp [edi+8] ebx +
jnz loc_44CC21  +
cmp [edi+0Ch] esi +
jnz loc_44CC21  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] eax +
mov eax [edi+4] +
mov [esp+2Ch+var_2C] eax +
call memcmp  +
test eax eax +
jnz loc_44CC21  +
mov edx [esp+2Ch+var_10] +
mov eax edi +
cmp [edi+10h] edx +
jnb loc_44CC9F  +
mov edx [esp+2Ch+arg_0] +
xor eax eax +
test edx edx +
jz loc_44CC9F  +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi+10h] 0 +
jmp loc_44CC79  +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jz loc_44CCDA  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call sub_408A70  +
test eax eax +
jz loc_44CCDA  +
mov [eax+0Ch] esi +
mov esi [esp+2Ch+var_10] +
mov [eax+10h] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_14] +
mov esi [eax+28h] +
cmp esi 1 +
jz loc_44CD3A  +
test esi esi +
jnz loc_44CCE4  +
xor ebp ebp +
xor edx edx +
nop   +
mov eax ebp +
add edx ebp +
shl eax 11h +
imul ebp esi +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
add esi ebp +
jmp loc_44CC0B  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
movzx edi byte ptr [eax] +
mov ebx edi +
test bl bl +
jnz loc_44CD11  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ecx 1 +
cmp ecx esi +
jz loc_44CCC0  +
cmp byte ptr [eax+ecx] 0 +
jz loc_44CD00  +
cmp esi ecx +
jz loc_44CCC0  +
lea ebx [eax+esi] +
mov ecx edi +
jmp loc_44CD1B  +
movzx ecx byte ptr [eax] +
movzx ecx cl +
add eax 1 +
mov edi ecx +
shl edi 11h +
add ecx edi +
add ecx edx +
mov edx ecx +
shr edx 2 +
xor edx ecx +
cmp eax ebx +
jnz loc_44CD18  +
add ebp 1 +
jmp loc_44CCF0  +
mov ecx [esp+2Ch+var_18] +
movzx eax byte ptr [ecx] +
test eax eax +
jz loc_44CD89  +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
mov ebx eax +
add ebp 1 +
shl ebx 11h +
add eax ebx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ecx+ebp] +
test eax eax +
jnz loc_44CD50  +
mov eax ebp +
add edx ebp +
shl eax 11h +
add esi ebp +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
jmp loc_44CC0B  +
mov ebx esi +
jmp loc_44CC0B  +
xor ebp ebp +
xor ebx ebx +
add esi ebp +
jmp loc_44CC0B  +
***
sub esp 18h +
mov [esp+18h+var_18] 1 +
call sub_44CBC0  +
test eax eax +
mov edx eax +
jz loc_44CDF0  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_44CDC4  +
add esp 18h +
pop ebx  +
retn   +
mov eax [esp+18h+arg_0] +
add dword ptr [ebx+1Ch] 1 +
mov [edx+18h] eax +
mov eax [ebx+20h] +
test eax eax +
jz loc_44CDE6  +
mov eax [ebx+24h] +
mov [eax+1Ch] edx +
mov [ebx+24h] edx +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [ebx+20h] edx +
jmp loc_44CDDC  +
xor eax eax +
jmp loc_44CDBF  +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
test ebp ebp +
jz loc_44D336  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_44D324  +
mov edx [eax] +
mov ecx [esp+2Ch+arg_8] +
test edx edx +
mov ebp edx +
mov [ecx+4] edx +
mov dword ptr [eax] 0 +
jnz loc_44D0EE  +
jmp loc_44D1D4  +
mov edi [esp+2Ch+arg_C] +
mov eax [ebp+8] +
test edi edi +
mov dword ptr [eax] 0 +
jz loc_44D0E3  +
mov eax [ebp+4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_44D1D4  +
mov eax [ebp+4] +
mov [esp+2Ch+var_18] eax +
mov eax [eax+14h] +
test ah 80h +
jnz loc_44D0C0  +
mov edi [esp+2Ch+var_18] +
test eax 1000000h +
lea ebx [ebp+14h] +
mov edx [edi+24h] +
mov ecx [edi+40h] +
lea esi [ebp+edx+14h] +
jz loc_44D2D7  +
cmp esi ebx +
jbe loc_44D0E3  +
mov eax 1 +
xor edi edi +
shl eax cl +
mov [esp+2Ch+var_10] eax +
sub eax 1 +
mov [esp+2Ch+var_14] ebp +
mov ebp ebx +
mov [esp+2Ch+var_1C] eax +
mov eax ebx +
sub eax ebp +
lea ecx [eax-1] +
xor ecx eax +
add ecx 1 +
shr ecx 1 +
cmp [esp+2Ch+var_1C] ecx +
jb loc_44D14F  +
test ecx ecx +
jnz loc_44D153  +
mov ecx [esp+2Ch+var_10] +
mov eax [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_14] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] edx +
mov edx ebx +
call sub_44CDA0  +
test eax eax +
jz loc_44D30A  +
mov ecx [esp+2Ch+var_18] +
add ebx [eax+0Ch] +
mov edx [ecx+78h] +
cmp edx 1 +
jz loc_44D274  +
cmp esi ebx +
jbe loc_44D1C5  +
test edx edx +
jz loc_44D1B1  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_44D263  +
xor eax eax +
jmp loc_44D1AA  +
cmp byte ptr [ebx+eax] 0 +
jnz loc_44D263  +
add eax 1 +
cmp eax edx +
jnz loc_44D1A0  +
test edi edi +
jnz loc_44D1BF  +
mov eax ebx +
sub eax ebp +
test [esp+2Ch+var_1C] eax +
jz loc_44D230  +
add ebx edx +
cmp esi ebx +
ja loc_44D187  +
mov ebp [esp+2Ch+var_14] +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_44D0EE  +
mov eax [esp+2Ch+arg_8] +
mov ecx [eax+8] +
mov eax [ecx+20h] +
test eax eax +
jz loc_44D324  +
mov esi [ecx+2Ch] +
xor edx edx +
xor ebx ebx +
test esi esi +
jz loc_44D214  +
jmp loc_44D34A  +
mov ebx [eax+10h] +
lea edx [edx+ebx-1] +
neg ebx  +
and edx ebx +
mov ebx ecx +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44D56B  +
mov ecx [eax+18h] +
mov esi [ecx+10h] +
test esi esi +
jnz loc_44D1F6  +
test ebx ebx +
jz loc_44D228  +
mov ebx [ebx+4] +
mov [ebx+24h] edx +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_44D1F6  +
mov ecx [esp+2Ch+var_14] +
mov edx ebx +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_44CDA0  +
test eax eax +
jz loc_44D30A  +
mov eax [esp+2Ch+var_18] +
mov di 1 +
mov edx [eax+78h] +
add ebx edx +
jmp loc_44D1C1  +
cmp esi ebx +
ja loc_44D137  +
mov ebp [esp+2Ch+var_14] +
jmp loc_44D1C9  +
cmp esi ebx +
jbe loc_44D1C5  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_44D137  +
mov eax edi +
mov edi [esp+2Ch+var_1C] +
jmp loc_44D2A4  +
add ebx 1 +
cmp ebx esi +
jz loc_44D1C5  +
cmp byte ptr [ebx] 0 +
jnz loc_44D343  +
test eax eax +
jnz loc_44D290  +
mov edx ebx +
sub edx ebp +
test edi edx +
jnz loc_44D290  +
mov ecx [esp+2Ch+var_14] +
mov edx offset unk_48D2C7 +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_44CDA0  +
test eax eax +
jz loc_44D30A  +
mov eax 1 +
jmp loc_44D290  +
cmp esi ebx +
jbe loc_44D0E3  +
mov edi [esp+2Ch+arg_8] +
jmp loc_44D2F4  +
mov eax [esp+2Ch+var_18] +
add ebx [eax+78h] +
cmp esi ebx +
jbe loc_44D0E3  +
mov eax [edi+8] +
mov ecx 1 +
mov edx ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_44CDA0  +
test eax eax +
jnz loc_44D2E5  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_44D324  +
mov edx [eax+8] +
mov dword ptr [edx] 0 +
mov eax [eax] +
test eax eax +
jnz loc_44D315  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jnz loc_44D093  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_44D137  +
mov eax [ecx+1Ch] +
shl eax 2 +
mov [esp+2Ch+var_2C] eax +
call sub_407460  +
test eax eax +
mov edi eax +
jz loc_44D482  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+8] +
mov eax [edx+20h] +
test eax eax +
jz loc_44D473  +
mov ebp edi +
xor ecx ecx +
jmp loc_44D382  +
mov ebp ebx +
mov esi [eax+10h] +
mov ebx ebp +
test esi esi +
jz loc_44D3AC  +
mov edx [esp+2Ch+arg_8] +
add ebx 4 +
mov [ebp+0] eax +
mov edx [edx+8] +
mov ebp [edx+28h] +
sub [eax+0Ch] ebp +
cmp esi ecx +
jz loc_44D3AC  +
test ecx ecx +
mov ecx 0FFFFFFFFh +
cmovz ecx esi +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_44D380  +
mov eax ebx +
sub eax edi +
sar eax 2 +
test eax eax +
mov [edx+1Ch] eax +
jz loc_44D47A  +
cmp ecx 0FFFFFFFFh +
jz loc_44D3D4  +
cmp [edx+28h] ecx +
mov esi offset sub_44CAC0 +
jb loc_44D3D9  +
mov esi offset sub_44CA50 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edi +
call qsort  +
lea eax [ebx-4] +
mov ebp [ebx-4] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov eax [eax+28h] +
add [ebp+0Ch] eax +
mov [esp+2Ch+var_18] eax +
sub [esp+2Ch+var_1C] 4 +
cmp edi [esp+2Ch+var_1C] +
ja loc_44D47A  +
mov eax [esp+2Ch+var_1C] +
mov ebx [eax] +
mov eax [esp+2Ch+var_18] +
mov esi [ebx+10h] +
add eax [ebx+0Ch] +
cmp [ebp+10h] esi +
mov [ebx+0Ch] eax +
jb loc_44D46F  +
mov ecx [ebp+0Ch] +
sub esi 1 +
mov edx ecx +
sub edx eax +
test esi edx +
jnz loc_44D46F  +
mov esi [ebp+4] +
cmp eax ecx +
mov [esp+2Ch+var_14] esi +
mov esi [ebx+4] +
jnb loc_44D46F  +
add edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_44D46F  +
mov [ebx+14h] ebp +
mov dword ptr [ebx+10h] 0 +
mov ebx ebp +
mov ebp ebx +
jmp loc_44D40C  +
mov dword ptr [edx+1Ch] 0 +
mov [esp+2Ch+var_2C] edi +
call free  +
mov eax [esp+2Ch+arg_8] +
xor edx edx +
mov ebx [eax+8] +
mov eax [ebx+20h] +
mov ecx [eax+18h] +
mov esi [eax+10h] +
test esi esi +
jz loc_44D4B1  +
mov ebp [ecx+10h] +
test ebp ebp +
jz loc_44D561  +
lea edx [edx+esi-1] +
neg esi  +
and edx esi +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44D4C9  +
mov esi [eax+18h] +
cmp ecx esi +
jz loc_44D4C5  +
mov ecx [ecx+4] +
mov [ecx+24h] edx +
mov ecx esi +
jmp loc_44D491  +
mov eax [ecx+4] +
mov ecx [eax+40h] +
mov [eax+24h] edx +
test ecx ecx +
jz loc_44D4EA  +
mov edi 1 +
shl edi cl +
mov ecx edi +
lea edx [edx+edi-1] +
neg ecx  +
and edx ecx +
mov [eax+24h] edx +
mov eax [ebx+20h] +
lea esi [ebx+20h] +
test eax eax +
jnz loc_44D500  +
jmp loc_44D534  +
lea esi [eax+1Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44D534  +
mov edi [eax+10h] +
test edi edi +
jnz loc_44D4F6  +
mov ebx [eax+0Ch] +
mov edx [eax+1Ch] +
test ebx ebx +
mov [esi] edx +
jz loc_44D4F9  +
mov ecx [eax+14h] +
mov edx [ecx+18h] +
mov [eax+18h] edx +
mov edx [ecx+10h] +
mov [eax+10h] edx +
mov edx [ecx+0Ch] +
add edx [ecx+14h] +
sub edx ebx +
mov [eax+14h] edx +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_44D500  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jnz loc_44D54E  +
jmp loc_44D324  +
mov eax [eax] +
test eax eax +
jz loc_44D324  +
mov edx [eax+10h] +
test edx edx +
jnz loc_44D544  +
mov edx [eax+4] +
or dword ptr [edx+14h] 208000h +
jmp loc_44D544  +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_44D4A3  +
mov eax [ecx+4] +
mov [eax+24h] edx +
jmp loc_44D534  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_4] +
test edi edi +
jz loc_44D6E0  +
mov ebx [edi+10h] +
test ebx ebx +
jz loc_44D737  +
mov ecx [esi+3Ch] +
mov edx [ecx+8Ch] +
mov eax [edx+10h] +
and eax [edx+14h] +
cmp eax 0FFFFFFFFh +
jz loc_44D744  +
mov [esp+3Ch+var_30] 0 +
mov eax [esi+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4086D0  +
test eax eax +
jnz loc_44D6E0  +
mov ebx [edi+10h] +
mov [esp+3Ch+var_14] 0 +
mov eax [ebx+18h] +
xor edi edi +
mov esi [esi+38h] +
mov [esp+3Ch+var_18] 0 +
mov [esp+3Ch+var_1C] eax +
mov eax [eax+4] +
mov [esp+3Ch+var_10] eax +
mov eax [eax+3Ch] +
mov ecx [eax+40h] +
test ecx ecx +
jnz loc_44D7A0  +
mov ebp [esp+3Ch+var_14] +
xor ecx ecx +
mov [esp+3Ch+var_24] esi +
mov esi ecx +
mov [esp+3Ch+var_20] edi +
lea esi [esi+0] +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jz loc_44D6B8  +
mov ecx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
lea edx [ebp+ecx+0] +
mov [esp+3Ch+var_3C] edx +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
mov ebx [ebx+1Ch] +
add esi edi +
test ebx ebx +
jz loc_44D6F0  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jnz loc_44D6F0  +
mov eax [ebx+10h] +
mov edi esi +
neg edi  +
sub eax 1 +
and edi eax +
jz loc_44D630  +
test ebp ebp +
jz loc_44D775  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
add eax ebp +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
add esi edi +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jnz loc_44D63A  +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_408570  +
cmp edi eax +
jz loc_44D65C  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_44D6E0  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov esi [esp+3Ch+var_24] +
mov eax [esp+3Ch+var_10] +
mov eax [eax+24h] +
sub eax ecx +
mov ebx eax +
jz loc_44D727  +
mov eax [esp+3Ch+var_14] +
test eax eax +
jz loc_44D7CF  +
add eax esi +
mov edi eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_44D737  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+30h] +
test byte ptr [ecx+17h] 8 +
mov [esp+3Ch+var_14] eax +
jz loc_44D759  +
test eax eax +
jnz loc_44D5F4  +
mov [esp+3Ch+var_34] offset a_bfd_write_mer +
mov [esp+3Ch+var_38] 338h +
mov [esp+3Ch+var_3C] offset a____Binutil_14 +
call sub_402960  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_408570  +
cmp edi eax +
jnz loc_44D6D0  +
add esi edi +
jmp loc_44D6AE  +
mov eax 1 +
shl eax cl +
mov [esp+3Ch+var_3C] eax +
call sub_4075F0  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_44D6E0  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jz loc_44D61D  +
xor ecx ecx +
jmp loc_44D6F6  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_408570  +
cmp ebx eax +
jnz loc_44D6D0  +
jmp loc_44D727  +
***
push esi  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_44DA0C  +
lea esi [esi+0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_408A50  +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44D9F0  +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_44DA60  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_408FA0  +
test eax eax +
jz loc_44DA54  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_408EF0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_44DA4F  +
jmp loc_44DA30  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_10] 0 +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_44DCF0  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+24h] +
test eax eax +
jz loc_44DCF0  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
cmp ecx eax +
jnz loc_44DCF0  +
mov eax [esp+7Ch+arg_C] +
test byte ptr [eax+14h] 4 +
jnz loc_44DCF0  +
mov eax [esp+7Ch+arg_8] +
cmp dword ptr [eax+3Ch] offset off_473270 +
jz loc_44DCF0  +
mov eax [esp+7Ch+arg_C] +
cmp dword ptr [eax+3Ch] offset off_473270 +
jz loc_44DCF0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_5C] 0 +
mov ebp [eax+20h] +
test ebp ebp +
jz loc_44DF30  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov [esp+7Ch+var_64] edx +
shr [esp+7Ch+var_64] 3 +
mov eax [esp+7Ch+var_64] +
lea ebx ds:0FFFFFFFCh[eax*4] +
lea eax [ebx+0Ch] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_404B80  +
mov edi eax +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_10] +
test edi edi +
mov [eax] edi +
jz loc_44DBDB  +
mov eax [esp+7Ch+arg_8] +
mov esi [esp+7Ch+arg_8] +
mov dword ptr [edi] 0 +
mov eax [eax+24h] +
mov [esi+28h] eax +
lea eax [ebx+4] +
lea ebx [edi+8] +
mov dword ptr [edi+4] 0 +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebx +
mov [esp+7Ch+var_3C] eax +
mov [esp+7Ch+var_38] ebx +
call memset  +
lea eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_406620  +
test eax eax +
jnz loc_44DD00  +
mov eax [esp+7Ch+var_14] +
test eax eax +
jz loc_44DBEB  +
mov [esp+7Ch+var_7C] eax +
call free  +
mov edx [esp+7Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_44DCF5  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_6C] eax +
call free  +
mov eax [esp+7Ch+var_6C] +
jmp loc_44DCF5  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
sub eax [esp+7Ch+var_34] +
mov ebx [esp+7Ch+arg_8] +
mov [esp+7Ch+var_10] 0 +
lea eax [eax+eax*2] +
shl eax 2 +
test eax eax +
mov [ebx+24h] eax +
jnz loc_44DC59  +
or dword ptr [ebx+14h] 208000h +
mov eax [esp+7Ch+arg_C] +
or dword ptr [eax+14h] 208000h +
mov eax [esp+7Ch+arg_4] +
mov ebx [eax+20h] +
mov eax [eax] +
mov [esp+7Ch+var_7C] eax +
call sub_409270  +
mov esi [esp+7Ch+var_34] +
test esi esi +
mov [ebx+24h] eax +
jz loc_44DCF0  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_404B80  +
mov ebx [esp+7Ch+var_48] +
test eax eax +
mov [ebx+4] eax +
jz loc_44DBDB  +
mov ebx [esp+7Ch+var_64] +
xor ecx ecx +
xor edx edx +
test ebx ebx +
jz loc_44DCD8  +
mov esi [esp+7Ch+var_64] +
mov edi [esp+7Ch+var_38] +
mov [eax+edx*4] ecx +
lea ebx [ecx+0Ch] +
cmp dword ptr [edi+edx*4] 0FFFFFFFFh +
cmovz ecx ebx +
add edx 1 +
cmp edx esi +
jnz loc_44DCC0  +
test ecx ecx +
jnz loc_44DCF0  +
mov [esp+7Ch+var_78] 1EAh +
mov [esp+7Ch+var_7C] offset a____Binutil_16 +
call sub_402930  +
lea esi [esi+0] +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_406620  +
test eax eax +
jz loc_44DBDB  +
mov edi [esp+7Ch+arg_14] +
test edi edi +
jz loc_44E237  +
mov eax [esp+7Ch+arg_14] +
mov eax [eax] +
mov [esp+7Ch+var_58] eax +
mov esi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+var_14] +
mov ebx [esi+24h] +
add ebx eax +
cmp eax ebx +
mov [esp+7Ch+var_6C] ebx +
jnb loc_44E2CF  +
lea ebp [eax+0Ch] +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_34] 0 +
mov [esp+7Ch+var_54] 0 +
lea esi [eax+0Ch] +
mov eax [esp+7Ch+arg_4] +
mov ebx esi +
add eax 4 +
mov [esp+7Ch+var_28] eax +
jmp loc_44DDF1  +
mov eax [esp+7Ch+arg_0] +
lea edx [ebp-4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+arg_14] +
add eax [esp+7Ch+var_58] +
test ecx ecx +
jz loc_44DDBD  +
mov edi [esp+7Ch+arg_14] +
mov [edi] eax +
mov edx [esp+7Ch+var_5C] +
test edx edx +
jnz loc_44DF11  +
mov edi [esp+7Ch+var_58] +
add [esp+7Ch+var_34] 1 +
mov dword ptr [ebx-4] 0FFFFFFFFh +
mov [esp+7Ch+var_54] edi +
mov [esp+7Ch+var_58] eax +
cmp [esp+7Ch+var_6C] ebp +
jbe loc_44DC0E  +
add ebp 0Ch +
add ebx 4 +
mov esi [ebx-4] +
lea eax [ebp-0Ch] +
mov [esp+7Ch+var_68] eax +
mov [esp+7Ch+var_60] ebx +
test esi esi +
jnz loc_44DDE1  +
movzx esi byte ptr [ebp-8] +
mov [esp+7Ch+var_4C] ebp +
test esi esi +
jz loc_44DD90  +
mov eax [esp+7Ch+arg_0] +
mov edi [esp+7Ch+var_68] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edi +
call eax  +
mov edi [esp+7Ch+arg_C] +
add eax [esp+7Ch+var_54] +
cmp eax [edi+24h] +
jnb loc_44E1F7  +
add eax [esp+7Ch+var_10] +
mov edi eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_4] +
mov eax [eax] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_409140  +
cmp esi 82h +
mov [ebx-4] eax +
jnz loc_44DDE1  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_44E2B8  +
movzx eax byte ptr [ebp+4] +
test eax eax +
jz loc_44E2B8  +
xor ecx ecx +
xor edx edx +
mov esi ebp +
xor edi edi +
mov [esp+7Ch+var_24] ebx +
mov ebx edx +
mov [esp+7Ch+var_20] ebp +
mov ebp ecx +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_50] 0 +
mov [esp+7Ch+var_30] 0 +
jmp loc_44DEF0  +
cmp eax 82h +
jz loc_44DFD8  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_44DFE2  +
add esi 0Ch +
cmp [esp+7Ch+var_6C] esi +
jbe loc_44E0AB  +
movzx eax byte ptr [esi+4] +
test eax eax +
jz loc_44E0AB  +
cmp eax 0C2h +
jz loc_44DED7  +
cmp eax 0A2h +
jnz loc_44DEC0  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_44E0AB  +
sub [esp+7Ch+var_44] 1 +
jmp loc_44DED7  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_5C] 0 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_54] edi +
jmp loc_44DE0F  +
call sub_409080  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx] eax +
jz loc_44DBDB  +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] offset unk_48D344 +
mov [esp+7Ch+var_7C] eax +
call sub_409140  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] offset sub_44DA20 +
add eax 4 +
mov [esp+7Ch+var_7C] eax +
call sub_408A20  +
test eax eax +
jz loc_44DBDB  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 102108h +
mov [esp+7Ch+var_78] offset a_stabstr_0 +
mov [esp+7Ch+var_7C] eax +
call sub_4060A0  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx+20h] eax +
jz loc_44DBDB  +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_5C] 1 +
mov ecx [eax+24h] +
jmp loc_44DB28  +
add [esp+7Ch+var_44] 1 +
jmp loc_44DED7  +
mov eax [esp+7Ch+var_10] +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_2C] eax +
mov eax [edx+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
mov edx [esp+7Ch+var_54] +
add edx eax +
add edx [esp+7Ch+var_2C] +
cmp byte ptr [edx] 0 +
jz loc_44DED7  +
mov eax edi +
mov edi [esp+7Ch+var_30] +
mov [esp+7Ch+var_2C] esi +
mov esi edx +
jmp loc_44E044  +
movzx ecx byte ptr [esi] +
lea edx [eax+1] +
add ebx 1 +
mov [eax] cl +
movzx eax byte ptr [esi] +
movsx ecx al +
add edi ecx +
cmp al 28h +
jz loc_44E070  +
movzx ecx byte ptr [esi+1] +
add esi 1 +
test cl cl +
jz loc_44E09C  +
mov eax edx +
cmp ebp ebx +
ja loc_44E020  +
mov eax [esp+7Ch+var_50] +
add ebp 8000h +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_4075B0  +
test eax eax +
mov [esp+7Ch+var_50] eax +
jz loc_44DBDB  +
add eax ebx +
jmp loc_44E020  +
movzx ecx byte ptr [esi+1] +
lea eax [esi+1] +
movzx esi cl +
test ds:byte_4922A0[esi+esi] 4 +
jz loc_44E097  +
add eax 1 +
movzx ecx byte ptr [eax] +
movzx esi cl +
test ds:byte_4922A0[esi+esi] 4 +
jnz loc_44E084  +
lea esi [eax-1] +
jmp loc_44E03B  +
mov [esp+7Ch+var_30] edi +
mov esi [esp+7Ch+var_2C] +
mov edi edx +
jmp loc_44DED7  +
mov eax edi +
mov edx ebx +
mov ebp [esp+7Ch+var_20] +
sub eax [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_24] +
cmp eax edx +
jz loc_44E0DB  +
mov [esp+7Ch+var_78] 167h +
mov [esp+7Ch+var_7C] offset a____Binutil_16 +
mov [esp+7Ch+var_44] edx +
call sub_402930  +
mov edx [esp+7Ch+var_44] +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_7C] eax +
call sub_408C80  +
test eax eax +
mov edi eax +
jz loc_44DBDB  +
mov esi [eax+0Ch] +
mov edx [esp+7Ch+var_44] +
test esi esi +
jz loc_44E15D  +
mov [esp+7Ch+var_44] ebx +
mov edi edx +
mov ebx [esp+7Ch+var_30] +
mov [esp+7Ch+var_40] eax +
jmp loc_44E12E  +
mov esi [esi] +
test esi esi +
jz loc_44E153  +
cmp [esi+4] ebx +
jnz loc_44E128  +
cmp [esi+8] edi +
jnz loc_44E128  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] eax +
mov eax [esi+0Ch] +
mov [esp+7Ch+var_7C] eax +
call memcmp  +
test eax eax +
jnz loc_44E128  +
mov edx edi +
mov ebx [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_40] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_7C] eax +
call sub_404B80  +
test eax eax +
jz loc_44DBDB  +
mov edx [esp+7Ch+var_30] +
mov ecx [esp+7Ch+var_68] +
sub ecx [esp+7Ch+var_14] +
test esi esi +
mov dword ptr [eax+0Ch] 82h +
mov [eax+8] edx +
mov edx [esp+7Ch+var_48] +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jnz loc_44E244  +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] eax +
call sub_408EF0  +
test eax eax +
mov esi eax +
jz loc_44DBDB  +
mov edx [esp+7Ch+var_30] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_44] +
mov [eax+8] edx +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_4075B0  +
mov [esi+0Ch] eax +
mov eax [edi+0Ch] +
mov [esi] eax +
mov [edi+0Ch] esi +
jmp loc_44DDE1  +
mov eax [esp+7Ch+var_68] +
sub eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] offset aBA0xLxStabsEnt +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] eax +
call off_4730E4  +
mov [esp+7Ch+var_7C] 11h +
call sub_4029E0  +
jmp loc_44DBDB  +
mov [esp+7Ch+var_58] 0 +
jmp loc_44DD46  +
mov dword ptr [eax+0Ch] 0C2h +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call free  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_44DC0E  +
xor edx edx +
mov edi [esp+7Ch+var_6C] +
mov eax [esp+7Ch+var_4C] +
mov esi [esp+7Ch+var_60] +
jmp loc_44E29E  +
cmp ecx 82h +
jz loc_44E2B3  +
cmp ecx 0C2h +
jz loc_44E290  +
test edx edx +
jnz loc_44E290  +
add [esp+7Ch+var_34] 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add eax 0Ch +
add esi 4 +
cmp edi eax +
jbe loc_44DDEB  +
movzx ecx byte ptr [eax+4] +
cmp ecx 0A2h +
jnz loc_44E271  +
test edx edx +
jz loc_44E2DC  +
sub edx 1 +
jmp loc_44E290  +
add edx 1 +
jmp loc_44E290  +
mov [esp+7Ch+var_50] 0 +
xor edx edx +
mov [esp+7Ch+var_30] 0 +
jmp loc_44E0DB  +
mov [esp+7Ch+var_34] 0 +
jmp loc_44DC12  +
mov dword ptr [esi] 0FFFFFFFFh +
add [esp+7Ch+var_34] 1 +
jmp loc_44DDEB  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_44E490  +
mov eax ecx +
mov esi 0AAAAAAABh +
mul  esi +
mov esi edx +
shr esi 3 +
lea eax [esi+esi*2] +
shl eax 2 +
sub ecx eax +
mov esi ecx +
jnz loc_44E490  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_44E33E  +
cmp eax offset off_473270 +
jz loc_44E490  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_44E490  +
mov eax [edi+28h] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_28] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_406620  +
test eax eax +
jz loc_44E480  +
mov ebx [esp+3Ch+var_10] +
mov edx [edi+28h] +
mov eax [esp+3Ch+arg_8] +
add edx ebx +
add eax 8 +
cmp ebx edx +
mov [esp+3Ch+var_20] eax +
jnb loc_44E56E  +
xor ecx ecx +
mov esi eax +
mov [esp+3Ch+arg_4] edi +
mov ebp 0FFFFFFFFh +
mov edi ecx +
jmp loc_44E3B5  +
cmp ebp 0FFFFFFFFh +
jz loc_44E4A0  +
xor ebp ebp +
add ebx 0Ch +
add esi 4 +
cmp edx ebx +
jbe loc_44E3E4  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_44E3AB  +
movzx eax byte ptr [ebx+4] +
cmp eax 24h +
jz loc_44E4E2  +
cmp ebp 1 +
jnz loc_44E3A0  +
add ebx 0Ch +
add edi 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add esi 4 +
cmp edx ebx +
mov ebp 1 +
ja loc_44E3B5  +
mov ecx edi +
mov ebx [esp+3Ch+var_10] +
mov edi [esp+3Ch+arg_4] +
lea esi [ecx+ecx*2] +
shl esi 2 +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_24] ecx +
call free  +
mov ecx [esp+3Ch+var_24] +
sub [edi+24h] esi +
mov [esp+3Ch+var_10] 0 +
jnz loc_44E418  +
or dword ptr [edi+14h] 208000h +
test ecx ecx +
jz loc_44E46D  +
mov eax [esp+3Ch+var_28] +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [esp+3Ch+arg_8] +
mov edi [eax+4] +
shr edx 3 +
test edi edi +
jz loc_44E575  +
xor ebx ebx +
xor eax eax +
mov ebp [esp+3Ch+var_20] +
test edx edx +
jz loc_44E520  +
lea esi [esi+0] +
mov [edi+eax*4] ebx +
lea esi [ebx+0Ch] +
cmp dword ptr [ebp+eax*4+0] 0FFFFFFFFh +
cmovz ebx esi +
add eax 1 +
cmp eax edx +
jnz loc_44E450  +
test ebx ebx +
jz loc_44E520  +
xor eax eax +
test ecx ecx +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_44E490  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 28h +
jz loc_44E4AE  +
cmp eax 26h +
jnz loc_44E3AB  +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_44E3AB  +
mov dword ptr [esi] 0FFFFFFFFh +
add edi 1 +
jmp loc_44E3AB  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jnz loc_44E541  +
test ebp ebp +
jz loc_44E514  +
add edi 1 +
mov ebp 0FFFFFFFFh +
mov dword ptr [esi] 0FFFFFFFFh +
jmp loc_44E3AB  +
mov ebp 0FFFFFFFFh +
jmp loc_44E3AB  +
mov [esp+3Ch+var_38] 284h +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
mov [esp+3Ch+var_28] ecx +
call sub_402930  +
mov ecx [esp+3Ch+var_28] +
jmp loc_44E46D  +
mov eax [esp+3Ch+arg_10] +
xor ebp ebp +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_44E3AB  +
jmp loc_44E3CC  +
xor ecx ecx +
jmp loc_44E3F4  +
lea eax ds:0[edx*4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edx +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_404B80  +
mov edx [esp+3Ch+arg_8] +
test eax eax +
mov [edx+4] eax +
jz loc_44E480  +
mov edi eax +
mov ecx [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_28] +
jmp loc_44E439  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_44E77A  +
mov ebx [edi] +
test ebx ebx +
jz loc_44E63C  +
mov [esp+2Ch+var_14] edi +
mov esi [esp+2Ch+arg_8] +
jmp loc_44E617  +
add eax [esp+2Ch+arg_10] +
mov edx [ebp+4] +
mov edi eax +
mov eax [ebx+8] +
lea ecx [edi+8] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov edx [ebx+0Ch] +
mov [edi+4] dl +
mov ebx [ebx] +
test ebx ebx +
jz loc_44E638  +
mov eax [ebx+4] +
cmp eax [esi+28h] +
jb loc_44E5F0  +
mov [esp+2Ch+var_28] 2AAh +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_402930  +
mov eax [ebx+4] +
jmp loc_44E5F0  +
mov edi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+arg_8] +
add edi 8 +
mov esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_10] +
add eax [ecx+28h] +
mov ebx esi +
cmp esi eax +
mov [esp+2Ch+var_14] eax +
jnb loc_44E776  +
lea esi [esi+0] +
mov eax [edi] +
cmp eax 0FFFFFFFFh +
jz loc_44E704  +
cmp esi ebx +
jz loc_44E681  +
mov eax [ebx] +
mov [esi] eax +
mov eax [ebx+4] +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [edi] +
mov edx [ebp+4] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call edx  +
cmp byte ptr [ebx+4] 0 +
jnz loc_44E701  +
cmp ebx [esp+2Ch+arg_10] +
jz loc_44E6B0  +
mov [esp+2Ch+var_28] 2C4h +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_402930  +
mov eax [ebp+4] +
mov edx [eax+30h] +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] edx +
mov eax [eax] +
mov [esp+2Ch+var_2C] eax +
call sub_409270  +
lea ecx [esi+8] +
mov edx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [eax+3Ch] +
lea eax [esi+6] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov edx [eax+24h] +
mov eax 0AAAAAAABh +
mul  edx +
shr edx 3 +
sub edx 1 +
mov [esp+2Ch+var_2C] edx +
call ecx  +
add esi 0Ch +
add ebx 0Ch +
add edi 4 +
cmp [esp+2Ch+var_14] ebx +
ja loc_44E660  +
sub esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_8] +
cmp [eax+24h] esi +
jz loc_44E73C  +
mov [esp+2Ch+var_28] 2D0h +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_402930  +
mov eax [esp+2Ch+arg_8] +
mov esi [eax+24h] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] esi +
mov ecx [esp+2Ch+arg_8] +
mov ecx [ecx+38h] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] ecx +
mov ecx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_24] ecx +
call sub_4063D0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_44E718  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+24h] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] edx +
jmp loc_44E747  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov edx [ebx+20h] +
cmp dword ptr [edx+3Ch] offset off_473270 +
jz loc_44E7F2  +
mov eax [ebx] +
mov edi [edx+38h] +
mov [esp+10h+var_10] eax +
call sub_409270  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
add edi eax +
cmp edi [ecx+24h] +
ja loc_44E833  +
mov [esp+10h+var_4] 0 +
mov eax [edx+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_8] edx +
call sub_4086D0  +
test eax eax +
jz loc_44E800  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_409280  +
test eax eax +
jz loc_44E7F0  +
mov eax [ebx] +
add ebx 4 +
mov [esp+10h+var_10] eax +
call sub_409110  +
mov [esp+10h+var_10] ebx +
call sub_408A50  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 2E2h +
mov [esp+10h+var_10] offset a____Binutil_16 +
call sub_402930  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
jmp loc_44E7C9  +
***
push esi  +
push ebx  +
mov ebx [esp+arg_4] +
mov edx [esp+arg_0] +
mov ecx [esp+arg_8] +
test ebx ebx +
jz loc_44E8B0  +
mov eax [edx+28h] +
cmp ecx eax +
jnb loc_44E8A0  +
mov esi [ebx+4] +
test esi esi +
jz loc_44E8B0  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov eax 0FFFFFFFFh +
shr edx 3 +
cmp dword ptr [ebx+edx*4+8] 0FFFFFFFFh +
jz loc_44E89D  +
mov eax ecx +
sub eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
sub ecx eax +
mov eax [edx+24h] +
pop ebx  +
pop esi  +
add eax ecx +
retn   +
***
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov ebx [esp+10Ch+arg_0] +
mov esi [esp+10Ch+arg_4] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_44EA00  +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_EC] eax +
lea eax [esp+10Ch+var_EC] +
mov [esp+10Ch+var_104] eax +
call sub_40A080  +
mov edx eax +
xor eax eax +
test edx edx +
cmovnz eax [esp+10Ch+var_EC] +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+14h] 4 +
jz loc_44E9C6  +
lea ebp [esp+10Ch+var_8C] +
xor eax eax +
mov ecx 20h +
mov edi ebp +
stos   +
mov edi [ebx+9Ch] +
lea eax [ebx+9Ch] +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_5C] ebx +
mov [esp+10Ch+var_58] ebx +
mov [esp+10Ch+var_54] eax +
call sub_419C80  +
mov [esp+10Ch+var_B4] offset loc_44E8C0 +
mov [esp+10Ch+var_B0] offset loc_44E8D0 +
mov [esp+10Ch+var_AC] offset loc_44E8E0 +
mov [esp+10Ch+var_A8] offset loc_44E8F0 +
mov [esp+10Ch+var_A4] offset loc_44E900 +
mov [esp+10Ch+var_70] eax +
lea eax [esp+10Ch+var_C8] +
mov [esp+10Ch+var_74] eax +
xor eax eax +
mov [esp+10Ch+var_C4] offset loc_44E910 +
mov [esp+10Ch+var_9C] offset dword_44E920 +
mov [esp+eax+10Ch+var_E0] 0 +
add eax 4 +
cmp eax 18h +
jb loc_44EA97  +
mov edx [esp+10Ch+arg_8] +
mov eax [esi+24h] +
mov [esp+10Ch+var_DC] 1 +
mov [esp+10Ch+var_D0] esi +
test edx edx +
mov [esp+10Ch+var_D4] eax +
jz loc_44EB91  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
jz loc_44EC48  +
mov [esp+10Ch+var_F0] 0 +
lea esi [esp+10Ch+var_E8] +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_108] offset dword_44E930 +
mov [esp+10Ch+var_10C] ebx +
call sub_4062E0  +
mov eax [esp+10Ch+arg_C] +
test eax eax +
jz loc_44EBF9  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_FC] 0 +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
lea eax [esp+10Ch+var_E0] +
mov [esp+10Ch+var_104] eax +
call sub_403180  +
test eax eax +
mov [esp+10Ch+var_EC] eax +
jz loc_44EBE0  +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_108] offset dword_44E970 +
call sub_4062E0  +
mov eax [esp+10Ch+var_E4] +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_418F60  +
mov eax [esp+10Ch+var_EC] +
mov [ebx+9Ch] edi +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+28h] eax +
cmovnb eax [esi+28h] +
mov [esp+10Ch+var_10C] eax +
call sub_407460  +
test eax eax +
mov [esp+10Ch+arg_8] eax +
jz loc_44EC48  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+arg_8] +
jz loc_44EC40  +
mov [esp+10Ch+var_F0] eax +
jmp loc_44EAEF  +
mov eax [esp+10Ch+var_F0] +
test eax eax +
jz loc_44EB54  +
mov [esp+10Ch+var_10C] eax +
call free  +
jmp loc_44EB54  +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
call loc_41ACA0  +
mov eax [ebx+4] +
mov eax [eax+104h] +
mov [esp+10Ch+var_10C] ebx +
call eax  +
mov [esp+10Ch+var_10C] eax +
call sub_407460  +
mov [esp+10Ch+arg_C] eax +
mov eax [ebx+4] +
mov ecx [esp+10Ch+arg_C] +
mov eax [eax+108h] +
mov [esp+10Ch+var_108] ecx +
mov [esp+10Ch+var_10C] ebx +
call eax  +
jmp loc_44EB16  +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_418F60  +
xor eax eax +
mov [ebx+9Ch] edi +
jmp loc_44E9F0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5 +
mov esi [eax] +
mov [esp+10h+var_10+1] eax +
cmp esi 3 +
setbe dl  +
test ecx ecx +
setnz al  +
xor ebx ebx +
and dl al +
mov byte ptr [esp+10h+var_10] dl +
jz loc_44ECC8  +
mov edi 4 +
jmp loc_44ECA7  +
mov eax edi +
sub eax esi +
cmp eax 3 +
mov esi eax +
setbe al  +
add ebx 1 +
test al al +
jz loc_44ECC8  +
cmp ecx ebx +
jbe loc_44ECC8  +
movzx edx byte ptr [ebp+ebx+0] +
cmp esi 2 +
sbb eax eax +
not eax  +
cmp dl al +
jz loc_44ECD8  +
test dl dl +
jz loc_44EC90  +
movzx eax byte ptr [esp+10h+var_10] +
xor esi esi +
add ebx 1 +
test al al +
jnz loc_44ECA3  +
mov eax [esp+10h+var_10+1] +
mov [eax] esi +
add esp 5 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
cmp esi 3 +
setbe al  +
jmp loc_44EC9C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [eax+1Ch] +
mov eax [ebx+34h] +
test eax eax +
jz loc_44EDF1  +
mov esi [ebx+28h] +
test esi esi +
jz loc_44ED65  +
mov edi edx +
sub edi [ebp+10h] +
cmp edi esi +
jnb loc_44ED88  +
mov edx [ebx+30h] +
sub esi edx +
cmp esi edi +
cmova esi edi +
add eax edx +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx edi +
mov [esp+28h+var_24] edx +
call memcpy  +
sub edi esi +
jnz loc_44EDC6  +
mov eax [ebx+30h] +
mov edx [ebx+28h] +
add eax esi +
cmp eax edx +
mov [ebx+30h] eax +
jz loc_44EDB4  +
mov ecx [ebx+2Ch] +
xor eax eax +
cmp edx ecx +
jbe loc_44ED5D  +
add esi ecx +
mov [ebx+2Ch] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+24h] +
mov edi edx +
mov si 1 +
sub edi [ebp+10h] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+2Ch] 0 +
shl esi cl +
cmp edi esi +
mov [ebx+28h] esi +
jb loc_44ED17  +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx esi +
mov [esp+28h+var_24] edx +
call memcpy  +
mov eax [ebx+28h] +
mov dword ptr [ebx+30h] 0 +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+2Ch] +
xor eax eax +
mov dword ptr [ebx+30h] 0 +
cmp edx ecx +
ja loc_44ED58  +
jmp loc_44ED5D  +
mov eax [ebp+0Ch] +
mov edx [ebx+34h] +
mov [esp+28h+var_20] edi +
sub eax edi +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call memcpy  +
mov eax [ebx+28h] +
mov [ebx+30h] edi +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+20h] +
mov al 1 +
mov edi [ebp+28h] +
mov [esp+28h+var_20] 1 +
mov ecx [ebx+24h] +
mov [esp+28h+var_1C] edx +
mov [esp+28h+var_28] edi +
shl eax cl +
mov [esp+28h+var_24] eax +
call esi  +
test eax eax +
mov [ebx+34h] eax +
jz loc_44EE23  +
mov edx [esp+28h+var_1C] +
jmp loc_44ED07  +
mov eax 1 +
jmp loc_44ED5D  +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_44EEC2  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_44EEC2  +
mov ecx [eax+8] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+8] 0 +
test ecx ecx +
mov dword ptr [edx+18h] 0 +
jz loc_44EE6C  +
and ecx 1 +
mov [edx+30h] ecx +
lea edx [eax+530h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 8000h +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov [eax+6Ch] edx +
mov [eax+50h] edx +
mov [eax+4Ch] edx +
mov dword ptr [eax+1BC0h] 1 +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
xor eax eax +
retn   +
mov eax 0FFFFFFFEh +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_44EF00  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_44EF00  +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
jmp loc_44EE30  +
mov eax 0FFFFFFFEh +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
test edi edi +
jz loc_44EF90  +
mov esi [edi+1Ch] +
test esi esi +
jz loc_44EF90  +
test ebx ebx +
js loc_44EF81  +
mov ebp ebx +
mov eax ebx +
sar ebp 4 +
and eax 0Fh +
add ebp 1 +
cmp ebx 2Fh +
cmovle ebx eax +
lea eax [ebx-8] +
cmp eax 7 +
ja loc_44EF87  +
mov eax [esi+34h] +
test eax eax +
jz loc_44EF6B  +
cmp ebx [esi+24h] +
jz loc_44EF6B  +
mov ecx [edi+28h] +
mov edx [edi+24h] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
call edx  +
mov dword ptr [esi+34h] 0 +
mov [esi+8] ebp +
mov [esi+24h] ebx +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44EED0  +
neg ebx  +
xor ebp ebp +
jmp loc_44EF41  +
test ebx ebx +
jz loc_44EF49  +
nop   +
lea esi [esi+0] +
add esp 1Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov ebx [esp+10h+arg_0] +
test eax eax +
jz loc_44F060  +
cmp byte ptr [eax] 31h +
jnz loc_44F060  +
cmp [esp+10h+arg_C] 38h +
jnz loc_44F060  +
test ebx ebx +
jz loc_44F0A7  +
mov eax [ebx+20h] +
mov dword ptr [ebx+18h] 0 +
test eax eax +
jz loc_44F070  +
mov ecx [ebx+24h] +
mov edx [ebx+28h] +
test ecx ecx +
jz loc_44F090  +
mov [esp+10h+var_8] 1BCCh +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
mov esi eax +
jz loc_44F0A0  +
mov [ebx+1Ch] eax +
mov dword ptr [eax+34h] 0 +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] eax +
call sub_44EF10  +
mov edi eax +
xor eax eax +
test edi edi +
jnz loc_44F040  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov eax edi +
mov dword ptr [ebx+1Ch] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 0FFFFFFFAh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+24h] +
xor edx edx +
mov eax offset loc_451630 +
mov dword ptr [ebx+20h] offset loc_451630 +
mov dword ptr [ebx+28h] 0 +
test ecx ecx +
jnz loc_44EFF2  +
mov dword ptr [ebx+24h] offset loc_451650 +
jmp loc_44EFF2  +
mov eax 0FFFFFFFCh +
jmp loc_44F033  +
mov eax 0FFFFFFFEh +
jmp loc_44F033  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0Fh +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_44EFA0  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
test eax eax +
jz loc_44F140  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44F140  +
test ecx ecx +
js loc_44F126  +
cmp ecx 10h +
jg loc_44F140  +
mov edi [eax+3Ch] +
lea esi [ecx+edi] +
cmp esi 20h +
ja loc_44F140  +
mov edx 1 +
shl edx cl +
mov ecx edi +
sub edx 1 +
and edx [esp+14h] +
mov [eax+3Ch] esi +
shl edx cl +
add [eax+38h] edx +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFEh +
jmp loc_44F123  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_0] +
test eax eax +
jz loc_450850  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+1Ch] +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_450850  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+7Ch+var_48] eax +
jz loc_450850  +
mov eax [esp+7Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_4504E0  +
mov eax [eax+4] +
mov [esp+7Ch+var_50] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax] +
cmp eax 0Bh +
jz loc_44F350  +
mov ebx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 0 +
mov ebx [ebx+10h] +
mov esi [edx+3Ch] +
mov ebp [edx+38h] +
mov ecx ebx +
mov [esp+7Ch+var_4C] ebx +
mov ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] ecx +
lea ecx [edx+70h] +
add edx 530h +
mov [esp+7Ch+var_30] ecx +
mov ecx esi +
mov esi ebp +
mov [esp+7Ch+var_2C] edx +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
cmp eax 1Eh +
ja loc_450850  +
jmp ds:off_48D570[eax*4]  +
cmp ebx 1Fh +
ja loc_44F240  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
nop   +
jmp loc_44F22A  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_44F222  +
mov edx esi +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
mov esi [esp+7Ch+arg_0] +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov [ebx+18h] eax +
mov [esi+30h] eax +
xor esi esi +
mov dword ptr [ebx] 0Ah +
xor ebx ebx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_450CA8  +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_451700  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov dword ptr [edx] 0Bh +
mov eax [esp+7Ch+arg_4] +
sub eax 5 +
cmp eax 1 +
jbe loc_44F5F0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+4] +
test eax eax +
jnz loc_44F364  +
cmp ebx 2 +
ja loc_44F303  +
test edi edi +
jz loc_44F5F0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
sub edi 1 +
add ebx 8 +
shl eax cl +
add esi eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx esi +
and eax 1 +
shr edx 1 +
mov [ecx+4] eax +
mov eax edx +
and eax 3 +
cmp eax 2 +
jz loc_450707  +
cmp eax 3 +
jz loc_45098E  +
cmp eax 1 +
jz loc_450950  +
mov dword ptr [ecx] 0Dh +
mov eax 0Dh +
mov esi edx +
sub ebx 3 +
shr esi 2 +
jmp loc_44F1FE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_44F1B9  +
mov eax [esp+7Ch+var_58] +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
mov dword ptr [eax] 1Ah +
mov eax 1Ah +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jz loc_44F3E6  +
cmp ebx edx +
jnb loc_44F3C1  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
nop   +
lea esi [esi+0] +
jmp loc_44F3AA  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_44F3A2  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add [ecx+44h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 18h +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_44F5F0  +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_54] +
mov ecx [ecx+44h] +
sub eax edx +
cmp eax ecx +
jnb loc_450560  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
cmp ecx [eax+2Ch] +
ja loc_450664  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+30h] +
cmp ecx eax +
jbe loc_450882  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+28h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_40] edx +
sub [esp+7Ch+var_40] ecx +
add [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+40h] +
cmp ecx edx +
cmova ecx edx +
jmp loc_450573  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax] 13h +
jz loc_44F5F0  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
cmp edi 5 +
ja loc_450757  +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+4Ch] +
mov dword ptr [eax+1BC4h] 0 +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+54h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_44F52B  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
mov ebx esi +
mov esi edi +
jmp loc_44F4E8  +
test esi esi +
jz loc_450722  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub esi 1 +
mov edi [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add ebx eax +
mov eax [esp+7Ch+var_34] +
and eax ebx +
lea eax [edi+eax*4] +
movzx edx byte ptr [eax] +
movzx edi word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_44F4E0  +
mov word ptr [esp+7Ch+var_28] di +
mov edi esi +
mov esi ebx +
mov ebx ecx +
cmp byte ptr [esp+7Ch+var_40] 0 +
jz loc_4507F0  +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_4507F0  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_34] eax +
mov eax 1 +
mov [esp+7Ch+var_24] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_34] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_20] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jb loc_44F5E8  +
jmp loc_450B5C  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub edi 1 +
shl eax cl +
movzx ecx byte ptr [esp+7Ch+var_34] +
add esi eax +
mov eax [esp+7Ch+var_20] +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
add edx eax +
cmp edx ebx +
jbe loc_450B57  +
test edi edi +
jnz loc_44F5A0  +
lea esi [esi+0] +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_44F7D0  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jnz loc_4505D6  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov [edx+1BC8h] eax +
mov dword ptr [edx] 16h +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+50h] +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+58h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_44F6BF  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
mov ebx edi +
mov edi ebp +
jmp loc_44F67C  +
test ebx ebx +
jz loc_450454  +
add edi 1 +
movzx eax byte ptr [edi-1] +
sub ebx 1 +
mov edx [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_34] +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
movzx ebp word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_44F674  +
mov word ptr [esp+7Ch+var_28] bp +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_450694  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_20] eax +
mov eax 1 +
mov [esp+7Ch+var_34] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_20] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_24] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_20] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jnb loc_44F782  +
test edi edi +
jz loc_44F5F0  +
mov eax esi +
mov edx [esp+7Ch+var_20] +
mov esi edi +
mov edi eax +
jmp loc_44F739  +
test esi esi +
jz loc_45091D  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub esi 1 +
shl eax cl +
mov ecx edx +
add edi eax +
mov eax [esp+7Ch+var_24] +
and eax edi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] cl +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov word ptr [esp+7Ch+var_28] cx +
lea ecx [eax+edx] +
cmp ecx ebx +
ja loc_44F731  +
mov edx edi +
mov edi esi +
mov esi edx +
mov edx [esp+7Ch+var_20] +
sub ebx [esp+7Ch+var_38] +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add edx [ecx+1BC4h] +
jmp loc_45069E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Eh +
mov eax 0FFFFFFFCh +
lea esi [esi+0] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 1 +
mov edi ebp +
mov ebp esi +
mov esi eax +
lea esi [esi+0] +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov ecx eax +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov [ecx+4] ebx +
mov edx [esp+7Ch+var_4C] +
mov [ecx] edi +
mov ebx [eax+28h] +
mov [ecx+10h] edx +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
test ebx ebx +
jnz loc_44F820  +
mov ebx [esp+7Ch+var_54] +
cmp edx ebx +
jz loc_44F838  +
mov eax [eax] +
cmp eax 1Ch +
ja loc_44F838  +
cmp eax 19h +
jbe loc_44F820  +
cmp [esp+7Ch+arg_4] 4 +
jz loc_44F838  +
nop   +
lea esi [esi+0] +
mov edx [esp+7Ch+var_54] +
mov eax [esp+7Ch+arg_0] +
call sub_44ECF0  +
test eax eax +
jnz loc_44F79D  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_54] +
sub esi [eax+10h] +
sub ebx [eax+4] +
add [eax+14h] esi +
add [eax+8] ebx +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+8] +
add [eax+1Ch] esi +
test ecx ecx +
jz loc_44F8A0  +
test esi esi +
jz loc_44F8A0  +
mov edx [eax+10h] +
test edx edx +
jz loc_450520  +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_451C30  +
mov edi [esp+7Ch+var_58] +
mov [edi+18h] eax +
mov edi [esp+7Ch+arg_0] +
mov [edi+30h] eax +
mov edi [esp+7Ch+var_58] +
cmp dword ptr [edi+4] 1 +
mov edx [edi] +
sbb eax eax +
not eax  +
and eax 40h +
add eax [edi+3Ch] +
cmp edx 0Bh +
jz loc_450460  +
cmp edx 0Eh +
jnz loc_450470  +
mov edx 100h +
mov edi [esp+7Ch+arg_0] +
add eax edx +
or esi ebx +
mov [edi+2Ch] eax +
jz loc_44F8ED  +
cmp [esp+7Ch+arg_4] 4 +
mov eax [esp+7Ch+var_44] +
jnz loc_44F7B0  +
mov ebx [esp+7Ch+var_44] +
mov eax 0FFFFFFFBh +
test ebx ebx +
cmovnz eax ebx +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 1Fh +
ja loc_44F932  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
jmp loc_44F91C  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_44F914  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_44F940  +
mov [eax+4] esi +
mov eax [esp+7Ch+var_58] +
test byte ptr [eax+11h] 2 +
jnz loc_4509D7  +
mov eax [esp+7Ch+var_58] +
xor esi esi +
xor ebx ebx +
mov dword ptr [eax] 3 +
jmp loc_44F9CA  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 0Fh +
test eax eax +
jz loc_450548  +
mov edx [esp+7Ch+var_4C] +
cmp edi eax +
cmovbe eax edi +
cmp eax edx +
cmova eax edx +
test eax eax +
jz loc_44F5F0  +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
sub [esp+7Ch+var_4C] edx +
add [esp+7Ch+var_48] edx +
sub edi edx +
add ebp edx +
sub [eax+40h] edx +
mov eax [eax] +
jmp loc_44F1FE  +
cmp ebx 0Fh +
ja loc_44F9F4  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
jmp loc_44F9DE  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_44F9D6  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_44FA0F  +
mov ebx esi +
movzx edx bl +
mov [eax+8] edx +
mov edx esi +
shr edx 8 +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 2 +
mov eax edx +
jnz loc_4508E2  +
mov ebx [esp+7Ch+var_58] +
xor esi esi +
mov dword ptr [ebx] 4 +
xor ebx ebx +
test dh 4 +
jnz loc_4503DA  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_45071B  +
mov dword ptr [edx+10h] 0 +
xor edx edx +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx] 5 +
jmp loc_45012F  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+68h] +
mov [esp+7Ch+var_38] eax +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+60h] +
mov [esp+7Ch+var_28] eax +
add eax [ecx+64h] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_34] +
cmp [esp+7Ch+var_38] eax +
mov eax [esp+7Ch+var_58] +
jnb loc_450C73  +
mov ecx [eax+54h] +
mov edx [eax+4Ch] +
mov eax 1 +
shl eax cl +
lea eax [eax-1] +
mov [esp+7Ch+var_3C] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx ecx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax cl +
cmp ebx eax +
jnb loc_44FB0A  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
mov ebx edx +
jmp loc_44FAD8  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_3C] +
and eax esi +
lea eax [ebx+eax*4] +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax dl +
cmp eax ecx +
ja loc_44FAD0  +
mov ebx ecx +
mov ecx edx +
cmp word ptr [esp+7Ch+var_40] 0Fh +
jbe loc_4506E0  +
cmp word ptr [esp+7Ch+var_40] 10h +
jz loc_450AE3  +
cmp word ptr [esp+7Ch+var_40] 11h +
jz loc_450B6C  +
lea edx [eax+7] +
cmp ebx edx +
jnb loc_44FB66  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_44FB4D  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_44FB45  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 7 +
mov edx esi +
and esi 7Fh +
add esi 0Bh +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 7 +
mov eax [esp+7Ch+var_40] +
add eax [esp+7Ch+var_38] +
cmp eax [esp+7Ch+var_34] +
mov edx eax +
mov [esp+7Ch+var_40] eax +
ja loc_450EC9  +
mov word ptr [esp+7Ch+var_3C] cx +
mov eax [esp+7Ch+var_38] +
mov ecx [esp+7Ch+var_58] +
lea eax [ecx+eax*2+70h] +
mov ecx [esp+7Ch+var_30] +
lea edx [ecx+edx*2] +
movzx ecx word ptr [esp+7Ch+var_3C] +
mov [eax] cx +
add eax 2 +
cmp eax edx +
jnz loc_44FBB7  +
mov eax [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] eax +
mov [edx+68h] eax +
jmp loc_44FA7D  +
cmp ebx 0Fh +
ja loc_44FC06  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
jmp loc_44FBEE  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_44FBE6  +
mov ebx ecx +
mov edx [esp+7Ch+var_58] +
mov eax esi +
cmp al 8 +
mov [edx+10h] esi +
jz loc_450A4C  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax 1Dh +
mov dword ptr [edx] 1Dh +
jmp loc_44F207  +
cmp ebx 0Dh +
ja loc_44FC66  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
jmp loc_44FC4E  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Dh +
jbe loc_44FC46  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
mov edx esi +
mov eax esi +
shr edx 5 +
and eax 1Fh +
and edx 1Fh +
add eax 101h +
add edx 1 +
sub ebx 0Eh +
mov [ecx+64h] edx +
mov [ecx+60h] eax +
mov ecx esi +
shr ecx 0Ah +
and ecx 0Fh +
add ecx 4 +
mov [esp+7Ch+var_40] edx +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_58] +
shr esi 0Eh +
cmp eax 11Eh +
mov [ecx+5Ch] edx +
ja loc_450860  +
cmp [esp+7Ch+var_40] 1Eh +
ja loc_450860  +
mov eax [esp+7Ch+var_58] +
xor edx edx +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 11h +
jmp loc_44FCF2  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+5Ch] +
mov ecx edx +
mov [esp+7Ch+var_3C] edx +
mov edx [eax+68h] +
cmp ecx edx +
jbe loc_44FD48  +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
cmp ecx 2 +
ja loc_44FD10  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
add [esp+7Ch+var_40] 1 +
sub ecx 3 +
mov ebx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
movzx eax ds:word_48DE7E[ebx+ebx] +
mov [edx+68h] ebx +
mov ebx esi +
and ebx 7 +
shr esi 3 +
mov [edx+eax*2+70h] bx +
mov eax [esp+7Ch+var_40] +
cmp [esp+7Ch+var_3C] eax +
ja loc_44FCF2  +
mov edx [esp+7Ch+var_40] +
mov ebx ecx +
cmp edx 12h +
mov ecx [esp+7Ch+var_58] +
lea eax dword_48DE80[edx+edx] +
ja loc_44FD77  +
movzx edx word ptr [eax] +
add eax 2 +
cmp eax offset unk_48DEA6 +
mov word ptr [ecx+edx*2+70h] 0 +
jnz loc_44FD58  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+68h] 13h +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_2C] +
mov dword ptr [eax+54h] 7 +
mov [eax+6Ch] edx +
mov [eax+4Ch] edx +
mov edx eax +
add eax 2F0h +
mov [esp+7Ch+var_68] eax +
mov eax edx +
add eax 54h +
mov [esp+7Ch+var_6C] eax +
mov eax edx +
add eax 6Ch +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_74] 13h +
mov [esp+7Ch+var_7C] 0 +
mov [esp+7Ch+var_78] eax +
call sub_451F20  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_450C55  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidCodeLen +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
jmp loc_44F971  +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 0FFFFFFFDh +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_44F7D0  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
jz loc_44F5F0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
sub [esp+7Ch+var_4C] 1 +
mov eax [edx+40h] +
mov [ecx] al +
lea eax [ecx+1] +
mov [esp+7Ch+var_48] eax +
mov eax 14h +
mov dword ptr [edx] 14h +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_450641  +
cmp ebx 1Fh +
ja loc_44FE92  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
nop   +
jmp loc_44FE7A  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_44FE72  +
mov ebx ecx +
mov eax [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
sub eax [esp+7Ch+var_4C] +
add [ecx+14h] eax +
add [edx+1Ch] eax +
test eax eax +
jz loc_44FEE6  +
mov ecx edx +
mov edx [edx+10h] +
test edx edx +
jz loc_450C33  +
mov edx [ecx+18h] +
mov ecx [esp+7Ch+var_48] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] edx +
sub ecx eax +
mov [esp+7Ch+var_78] ecx +
call sub_451C30  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx [ecx+10h] +
test edx edx +
jnz loc_44FF15  +
mov edx esi +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov edx [esp+7Ch+var_58] +
cmp eax [edx+18h] +
jz loc_450632  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectDataC +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_54] eax +
mov eax 1Dh +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_450C12  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test eax eax +
jz loc_450C12  +
cmp ebx 1Fh +
ja loc_44FFA2  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
lea esi [esi+0] +
jmp loc_44FF8A  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_44FF82  +
mov ebx ecx +
mov eax [esp+7Ch+var_58] +
cmp [eax+1Ch] esi +
jz loc_450D16  +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aIncorrectLengt +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+8] +
test edx edx +
jz loc_450650  +
cmp ebx 0Fh +
ja loc_450012  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
nop   +
jmp loc_44FFFA  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_44FFF2  +
mov ebx ecx +
test dl 2 +
jz loc_450023  +
cmp esi 8B1Fh +
jz loc_450D23  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+10h] 0 +
mov eax [eax+20h] +
test eax eax +
jz loc_45003C  +
mov dword ptr [eax+30h] 0FFFFFFFFh +
and edx 1 +
jz loc_45092E  +
mov ecx esi +
mov eax esi +
shl ecx 8 +
mov edx 8421085h +
shr eax 8 +
movzx ecx cx +
add ecx eax +
mov eax ecx +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 4 +
mov edx eax +
shl edx 5 +
sub edx eax +
cmp ecx edx +
jnz loc_45092E  +
mov eax esi +
and eax 0Fh +
cmp eax 8 +
jz loc_450D7F  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
cmp ebx 1Fh +
ja loc_4500E2  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
jmp loc_4500CA  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_4500C2  +
mov ebx ecx +
mov edx esi +
movzx eax si +
shr edx 10h +
xor edx 0FFFFh +
cmp eax edx +
jz loc_450A7A  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidStoredB +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx eax +
and edx 400h +
test edx edx +
jz loc_4501D5  +
mov edx [esp+7Ch+var_58] +
mov ecx [edx+40h] +
cmp edi ecx +
mov [esp+7Ch+var_40] ecx +
cmovbe ecx edi +
mov edx ecx +
test edx edx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_40] +
jz loc_4501C6  +
mov ecx [esp+7Ch+var_58] +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_4501A9  +
mov edx [ecx+10h] +
test edx edx +
mov [esp+7Ch+var_38] edx +
jz loc_4501A9  +
mov edx [ecx+18h] +
mov eax [ecx+14h] +
mov ecx [esp+7Ch+var_3C] +
sub eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ebp +
add ecx eax +
mov [esp+7Ch+var_40] ecx +
mov ecx edx +
sub ecx eax +
cmp [esp+7Ch+var_40] edx +
mov edx ecx +
cmovbe edx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+10h] +
test ah 2 +
jnz loc_4509B0  +
mov edx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_3C] +
mov ecx [edx+40h] +
sub edi eax +
add ebp eax +
sub ecx eax +
mov [edx+40h] ecx +
test ecx ecx +
jnz loc_44F5F0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov ecx [esp+7Ch+var_58] +
test ah 8 +
mov dword ptr [ecx+40h] 0 +
mov dword ptr [ecx] 6 +
jnz loc_450212  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_4502A3  +
mov dword ptr [edx+1Ch] 0 +
jmp loc_4502A3  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test ah 8 +
jz loc_4501EB  +
test edi edi +
jz loc_44F5F0  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_450238  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_45026A  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_450266  +
mov edi [eax+1Ch] +
test edi edi +
jz loc_450266  +
mov ebx [esi+40h] +
cmp ebx [eax+20h] +
jnb loc_450266  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_450232  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_450825  +
mov eax [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test eax eax +
jnz loc_44F5F0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx+40h] 0 +
mov dword ptr [edx] 7 +
test ah 10h +
jz loc_450500  +
test edi edi +
jz loc_44F5F0  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_4502E6  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_450318  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_450314  +
mov edi [eax+24h] +
test edi edi +
jz loc_450314  +
mov ebx [esi+40h] +
cmp ebx [eax+28h] +
jnb loc_450314  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_4502E0  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_450730  +
mov ecx [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test ecx ecx +
jnz loc_44F5F0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 8 +
test ah 2 +
jz loc_450484  +
cmp ebx 0Fh +
ja loc_450395  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
jmp loc_45037D  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx 0Fh +
jbe loc_450375  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
movzx edx word ptr [ecx+18h] +
cmp edx esi +
jz loc_450480  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aHeaderCrcMisma +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 4 +
mov eax edx +
jz loc_44FA38  +
cmp ebx 0Fh +
ja loc_450400  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
jmp loc_4503EA  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_4503E6  +
mov eax [esp+7Ch+var_58] +
mov [eax+40h] esi +
mov eax [eax+20h] +
test eax eax +
jz loc_450411  +
mov [eax+14h] esi +
test dh 2 +
jnz loc_450A9E  +
mov eax edx +
xor ebx ebx +
and edx 400h +
xor esi esi +
jmp loc_44FA50  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_4502B4  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_45035B  +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi ecx +
jmp loc_44F7D0  +
sub eax 0FFFFFF80h +
xor edx edx +
jmp loc_44F8CB  +
cmp edx 13h +
jz loc_44F8C6  +
xor edx edx +
jmp loc_44F8CB  +
xor ebx ebx +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_45049F  +
sar eax 9 +
and eax 1 +
mov [edx+2Ch] eax +
mov dword ptr [edx+30h] 1 +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_451C30  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov eax 0Bh +
mov dword ptr [edx] 0Bh +
jmp loc_44F207  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
test eax eax +
jnz loc_450850  +
mov [esp+7Ch+var_50] 0 +
jmp loc_44F1AA  +
mov ecx [esp+7Ch+var_58] +
mov edx [ecx+20h] +
test edx edx +
jz loc_450351  +
mov dword ptr [edx+24h] 0 +
jmp loc_450351  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_451700  +
jmp loc_44F88F  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_44F207  +
mov eax [esp+7Ch+var_48] +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+40h] +
mov edx ecx +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_3C] ebx +
cmp ecx eax +
cmova ecx eax +
mov eax [esp+7Ch+var_58] +
sub edx ecx +
sub [esp+7Ch+var_4C] ecx +
mov [eax+40h] edx +
mov edx [esp+7Ch+var_48] +
mov eax [esp+7Ch+var_40] +
add ecx edx +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
cmp edx ecx +
mov [edx-1] bl +
jnz loc_450597  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_48] edx +
mov ebx [esp+7Ch+var_3C] +
mov edx [eax+40h] +
test edx edx +
jz loc_4505C2  +
mov eax [eax] +
jmp loc_44F1FE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
mov eax 14h +
jmp loc_44F207  +
cmp ebx edx +
jnb loc_450605  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
jmp loc_4505EE  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_4505E6  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add eax [ecx+40h] +
mov [ecx+40h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
jmp loc_44F616  +
mov esi [esp+7Ch+var_4C] +
xor ebx ebx +
mov eax [edx+8] +
mov [esp+7Ch+var_54] esi +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 1Bh +
jmp loc_44FF57  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_44F207  +
mov eax [eax+1BC0h] +
test eax eax +
jz loc_44F420  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDistanc +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+1BC4h] +
mov ecx eax +
sub ebx eax +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add eax edx +
test byte ptr [esp+7Ch+var_40] 40h +
mov [ecx+1BC4h] eax +
jz loc_450898  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_0 +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_44F207  +
mov edx [esp+7Ch+var_38] +
shr esi cl +
sub ebx eax +
mov ecx [esp+7Ch+var_58] +
mov eax edx +
add eax 1 +
mov [ecx+68h] eax +
mov [esp+7Ch+var_38] eax +
movzx eax word ptr [esp+7Ch+var_40] +
mov [ecx+edx*2+70h] ax +
jmp loc_44FA7D  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 10h +
mov eax 10h +
jmp loc_44F33E  +
xor edx edx +
jmp loc_44FA50  +
mov edi ebp +
mov ebp ebx +
mov ebx esi +
mov esi ecx +
jmp loc_44F7D0  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451C30  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_45033A  +
cmp [esp+7Ch+var_4C] 101h +
jbe loc_44F483  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov [eax] ebp +
mov [eax+0Ch] edx +
mov edx [esp+7Ch+var_4C] +
mov [eax+4] edi +
mov [eax+10h] edx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] esi +
mov esi eax +
mov [eax+3Ch] ebx +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_452480  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+10h] +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+arg_0] +
mov ebp [eax] +
mov edi [eax+4] +
mov eax esi +
mov ebx [eax+3Ch] +
mov eax [eax] +
mov esi [esi+38h] +
cmp eax 0Bh +
jnz loc_44F1FE  +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx+1BC4h] 0FFFFFFFFh +
jmp loc_44F207  +
mov edx eax +
mov ecx eax +
sub ebx eax +
movzx eax word ptr [esp+7Ch+var_28] +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
cmp byte ptr [esp+7Ch+var_40] 0 +
mov [ecx+1BC4h] edx +
mov [ecx+40h] eax +
jnz loc_4508B9  +
mov dword ptr [ecx] 19h +
mov eax 19h +
jmp loc_44F207  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451C30  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_45028C  +
mov eax 0FFFFFFFEh +
jmp loc_44F7B0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aTooManyLengthO +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax+34h] +
add [esp+7Ch+var_40] eax +
jmp loc_44F447  +
mov edx [esp+7Ch+var_40] +
mov ecx [esp+7Ch+var_58] +
movzx eax word ptr [esp+7Ch+var_28] +
and edx 0Fh +
mov [ecx+48h] edx +
mov [ecx+44h] eax +
mov dword ptr [ecx] 17h +
jmp loc_44F389  +
test byte ptr [esp+7Ch+var_40] 20h +
jz loc_450A1F  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_44F207  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_451C30  +
mov edx [esi+10h] +
mov [esi+18h] eax +
mov eax edx +
jmp loc_44FA21  +
mov ecx edi +
mov eax ebx +
mov edi ebp +
mov ebx esi +
mov ebp ecx +
mov esi eax +
jmp loc_44F7D0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectHeade +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax+4Ch] offset unk_48D680 +
mov dword ptr [eax+54h] 9 +
mov dword ptr [eax+50h] offset unk_48D600 +
mov dword ptr [eax+58h] 5 +
mov dword ptr [eax] 13h +
jz loc_450EB4  +
mov eax 13h +
jmp loc_44F33E  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBlockTy +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F33E  +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_3C] +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_451C30  +
mov ecx [esp+7Ch+var_58] +
mov [ecx+18h] eax +
jmp loc_4501B2  +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
mov eax esi +
shr eax 10h +
mov byte ptr [esp+7Ch+var_10+2] al +
mov eax esi +
shr eax 18h +
mov byte ptr [esp+7Ch+var_10+3] al +
mov eax [ebx+18h] +
lea edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451C30  +
mov [ebx+18h] eax +
jmp loc_44F94E  +
test byte ptr [esp+7Ch+var_40] 40h +
jz loc_450BC5  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidLiteral +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
test esi 0E000h +
jz loc_450BDE  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownHeaderF +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov ebx [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov [ebx+40h] eax +
mov dword ptr [ebx] 0Eh +
jz loc_450EA7  +
xor ebx ebx +
xor esi esi +
jmp loc_44F967  +
mov ebx [esp+7Ch+var_58] +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
xor esi esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [ebx+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_451C30  +
mov [ebx+18h] eax +
mov eax [ebx+10h] +
xor ebx ebx +
mov edx eax +
and edx 400h +
jmp loc_44FA50  +
lea edx [eax+2] +
cmp ebx edx +
jnb loc_450B21  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_450B08  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_450B00  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
mov eax [esp+7Ch+var_38] +
shr esi cl +
test eax eax +
jz loc_450EC9  +
mov eax [esp+7Ch+var_58] +
sub ebx 2 +
mov ecx [esp+7Ch+var_38] +
movzx ecx word ptr [eax+ecx*2+6Eh] +
mov eax esi +
and eax 3 +
add eax 3 +
mov [esp+7Ch+var_40] eax +
shr esi 2 +
jmp loc_44FB82  +
mov word ptr [esp+7Ch+var_28] cx +
movzx ecx byte ptr [esp+7Ch+var_34] +
sub ebx [esp+7Ch+var_38] +
shr esi cl +
jmp loc_4507F2  +
lea edx [eax+3] +
cmp ebx edx +
jnb loc_450BA4  +
test edi edi +
jz loc_44F5F0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_450B8B  +
test edi edi +
jz loc_450450  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_450B83  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 3 +
mov edx esi +
and esi 7 +
add esi 3 +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 3 +
jmp loc_44FB82  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
and edx 0Fh +
mov [eax+48h] edx +
mov dword ptr [eax] 15h +
jmp loc_44F607  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_450BF3  +
mov edx esi +
shr edx 8 +
and edx 1 +
mov [eax] edx +
test esi 200h +
jnz loc_450CE0  +
mov eax [esp+7Ch+var_58] +
xor ebx ebx +
xor esi esi +
mov dword ptr [eax] 2 +
jmp loc_44F908  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 1 +
mov dword ptr [eax] 1Ch +
jmp loc_44F7D0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
mov edx [edx+18h] +
sub ecx eax +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
call sub_451700  +
jmp loc_44FED5  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] 0 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 12h +
jmp loc_44FA6B  +
cmp dword ptr [eax] 1Dh +
jz loc_44FFC3  +
cmp word ptr [eax+270h] 0 +
jnz loc_450DF4  +
mov edx [esp+7Ch+arg_0] +
mov dword ptr [edx+18h] offset aInvalidCodeMis +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov eax ebx +
mov ecx [esp+7Ch+var_48] +
mov ebx edi +
mov edx [esp+7Ch+var_4C] +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax] edi +
mov [eax+4] ebx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
mov eax 2 +
jmp loc_44F7B0  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451C30  +
mov [esi+18h] eax +
jmp loc_450BFF  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_450C1C  +
mov [esp+7Ch+var_74] 0 +
xor ebx ebx +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_451C30  +
mov esi [esp+7Ch+var_58] +
lea edx [esp+7Ch+var_10] +
mov byte ptr [esp+7Ch+var_10] 1Fh +
mov byte ptr [esp+7Ch+var_10+1] 8Bh +
mov [esi+18h] eax +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451C30  +
mov dword ptr [esi] 1 +
mov [esi+18h] eax +
mov eax 1 +
xor esi esi +
jmp loc_44F207  +
mov eax [esp+7Ch+var_58] +
shr esi 4 +
mov ecx esi +
and ecx 0Fh +
add ecx 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_450E7A  +
mov eax [esp+7Ch+var_58] +
mov [eax+24h] ecx +
mov ebx [esp+7Ch+var_58] +
mov eax 1 +
shl eax cl +
mov [ebx+14h] eax +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_451700  +
mov edx [esp+7Ch+arg_0] +
mov [ebx+18h] eax +
mov [edx+30h] eax +
mov eax esi +
and eax 200h +
cmp eax 1 +
sbb eax eax +
xor esi esi +
and eax 2 +
add eax 9 +
mov [ebx] eax +
xor ebx ebx +
jmp loc_44F1FE  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_2C] +
lea edx [eax+2F0h] +
mov [eax+6Ch] ecx +
mov [eax+4Ch] ecx +
lea ecx [eax+6Ch] +
add eax 54h +
mov dword ptr [eax] 9 +
mov [esp+7Ch+var_3C] edx +
mov [esp+7Ch+var_68] edx +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_40] ecx +
mov ecx [esp+7Ch+var_28] +
mov [esp+7Ch+var_6C] eax +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_74] ecx +
call sub_451F20  +
mov ecx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_3C] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_450EE6  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidLiter_0 +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
cmp ecx eax +
jbe loc_450DA0  +
mov eax [esp+7Ch+arg_0] +
sub ebx 4 +
mov dword ptr [eax+18h] offset aInvalidWindowS +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_44F7D0  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
shr ebp 3 +
sub esi 3 +
jmp loc_44F7D0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBitLeng +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
jmp loc_44FFC3  +
mov [esp+7Ch+var_40] ebx +
mov ebx [esp+7Ch+var_58] +
mov eax [ebx+6Ch] +
mov dword ptr [ebx+58h] 6 +
mov [ebx+50h] eax +
mov eax [ebx+64h] +
mov [esp+7Ch+var_68] edx +
mov edx ebx +
add edx 58h +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_74] eax +
mov eax [ebx+60h] +
mov [esp+7Ch+var_7C] 2 +
lea eax [ebx+eax*2+70h] +
mov [esp+7Ch+var_78] eax +
call sub_451F20  +
mov ebx [esp+7Ch+var_40] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_44F458  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_1 +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F207  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_450FB0  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_450FB0  +
mov edx [ebx+24h] +
test edx edx +
jz loc_450FB0  +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_450F93  +
mov eax [ebx+28h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [ebx+24h] +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ecx +
call edx  +
xor eax eax +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_450FA8  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
test ebx ebx +
jz loc_451070  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_451070  +
mov eax [esi+8] +
test eax eax +
jnz loc_451028  +
cmp dword ptr [esi] 0Ah +
jz loc_45102D  +
mov eax [esp+34h] +
add eax [esp+38h] +
mov edx [esp+38h] +
mov ebp [ebx+0Ch] +
mov edi [ebx+10h] +
mov [ebx+0Ch] eax +
mov eax ebx +
mov dword ptr [ebx+10h] 0 +
call sub_44ECF0  +
mov [ebx+10h] edi +
mov [ebx+0Ch] ebp +
test eax eax +
jnz loc_451077  +
mov dword ptr [esi+0Ch] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [esi] 0Ah +
jnz loc_451070  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_451700  +
mov ecx [esp+38h] +
mov [esp+8] ecx +
mov ecx [esp+34h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_451700  +
cmp [esi+18h] eax +
jz loc_450FEA  +
mov eax 0FFFFFFFDh +
jmp loc_451020  +
***
mov eax 0FFFFFFFEh +
jmp loc_451020  +
***
mov dword ptr [esi] 1Eh +
mov eax 0FFFFFFFCh +
jmp loc_451020  +
***
mov eax [esp+4] +
mov edx [esp+8] +
test eax eax +
jz loc_4510B6  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4510B6  +
test byte ptr [eax+8] 2 +
jz loc_4510B6  +
mov [eax+20h] edx +
xor eax eax +
mov dword ptr [edx+30h] 0 +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+28h] +
test ebx ebx +
jz loc_4511B8  +
mov edi [ebx+1Ch] +
test edi edi +
jz loc_4511B8  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_451192  +
cmp dword ptr [edi] 1Fh +
lea esi [edi+68h] +
jz loc_451155  +
mov edx [edi+3Ch] +
mov eax [edi+38h] +
mov dword ptr [edi] 1Fh +
mov ecx edx +
and edx 0FFFFFFF8h +
and ecx 7 +
shl eax cl +
cmp edx 7 +
mov [edi+38h] eax +
mov ecx edx +
mov [edi+3Ch] edx +
jbe loc_4511B0  +
sub ecx 8 +
lea edx [esp+10h] +
shr ecx 3 +
mov esi edx +
lea ebp [esp+ecx+11h] +
mov [esi] al +
add esi 1 +
shr eax 8 +
cmp esi ebp +
jnz loc_451128  +
add ecx 1 +
mov [edi+38h] eax +
mov dword ptr [edi+3Ch] 0 +
lea esi [edi+68h] +
mov dword ptr [edi+68h] 0 +
mov eax esi +
call sub_44EC60  +
mov ecx [ebx+4] +
mov edx [ebx] +
mov eax esi +
call sub_44EC60  +
sub [ebx+4] eax +
add [ebx] eax +
add eax [ebx+8] +
cmp dword ptr [edi+68h] 4 +
mov esi eax +
mov [ebx+8] eax +
jnz loc_4511A3  +
mov ebp [ebx+14h] +
mov [esp] ebx +
call sub_44EED0  +
xor eax eax +
mov [ebx+8] esi +
mov [ebx+14h] ebp +
mov dword ptr [edi] 0Bh +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [edi+3Ch] 7 +
ja loc_4510E9  +
mov eax 0FFFFFFFBh +
jmp loc_45118A  +
***
add esp 14h +
mov eax 0FFFFFFFDh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor ecx ecx +
lea edx [esp+10h] +
jmp loc_451141  +
***
mov eax 0FFFFFFFEh +
jmp loc_45118A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
test ebx ebx +
jz loc_451420  +
test esi esi +
jz loc_451420  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_451420  +
mov eax [esi+20h] +
test eax eax +
jz loc_451420  +
mov edx [esi+24h] +
test edx edx +
jz loc_451420  +
mov edx [esi+28h] +
mov dword ptr [esp+8] 1BCCh +
mov dword ptr [esp+4] 1 +
mov [esp] edx +
call eax  +
test eax eax +
mov edx eax +
jz loc_45142A  +
mov eax [ebp+34h] +
test eax eax +
jz loc_4513E5  +
mov edi [esi+20h] +
mov eax 1 +
mov dword ptr [esp+8] 1 +
mov ecx [ebp+24h] +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+4] eax +
mov eax [esi+28h] +
mov [esp] eax +
call edi  +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_451434  +
mov eax [esi] +
test dl 1 +
mov edi edx +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+4] eax +
mov eax [esi+8] +
mov [ebx+8] eax +
mov eax [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov eax [esi+14h] +
mov [ebx+14h] eax +
mov eax [esi+18h] +
mov [ebx+18h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [esi+20h] +
mov [ebx+20h] eax +
mov eax [esi+24h] +
mov [ebx+24h] eax +
mov eax [esi+28h] +
mov [ebx+28h] eax +
mov eax [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [esi+30h] +
mov [ebx+30h] eax +
mov eax [esi+34h] +
mov esi ebp +
mov [ebx+34h] eax +
mov eax 1BCCh +
jnz loc_4513F2  +
test edi 2 +
jnz loc_451408  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_4513D0  +
test al 1 +
jnz loc_4513B0  +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jnb loc_451380  +
mov eax [ebp+6Ch] +
mov edi [esp+18h] +
sub eax ecx +
sar eax 2 +
test edi edi +
lea eax [edx+eax*4+530h] +
mov [edx+6Ch] eax +
jz loc_451365  +
mov ecx [ebp+24h] +
mov eax 1 +
mov esi [ebp+34h] +
mov [esp] edi +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+8] eax +
mov [esp+4] esi +
call memcpy  +
mov edx [esp+1Ch] +
mov eax [esp+18h] +
mov [edx+34h] eax +
xor eax eax +
mov [ebx+1Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea esi [ebp+1BBCh] +
cmp eax esi +
ja loc_451326  +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+4Ch] eax +
mov eax [ebp+50h] +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+50h] eax +
jmp loc_451326  +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jb loc_451326  +
jmp loc_451380  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_451319  +
jmp loc_4513B0  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_451292  +
***
movzx eax byte ptr [ebp+0] +
lea edi [edx+1] +
lea esi [ebp+1] +
mov [edx] al +
mov eax 1BCBh +
jmp loc_4512F6  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_451302  +
***
mov eax 0FFFFFFFEh +
jmp loc_451371  +
***
mov eax 0FFFFFFFCh +
jmp loc_451371  +
***
mov ecx [esi+28h] +
mov eax [esi+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax 0FFFFFFFCh +
jmp loc_451371  +
***
mov eax [esp+4] +
test eax eax +
jz loc_451470  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_451470  +
mov dword ptr [eax+1BC0h] 1 +
mov eax 0FFFFFFFDh +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
test eax eax +
jz loc_4514C4  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_4514C4  +
mov eax [edx+1BC4h] +
mov ecx [edx] +
shl eax 10h +
cmp ecx 0Fh +
jz loc_4514B0  +
xor ebx ebx +
cmp ecx 18h +
jz loc_4514B7  +
add eax ebx +
pop ebx  +
retn   +
***
mov ebx [edx+40h] +
add eax ebx +
jmp loc_4514A9  +
***
mov ebx [edx+1BC8h] +
sub ebx [edx+40h] +
add eax ebx +
jmp loc_4514A9  +
***
mov eax 0FFFF0000h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 50h +
mov eax [esp+50h+arg_8] +
lea ebx [esp+50h+var_38] +
mov esi [esp+50h+arg_4] +
mov [esp+50h+var_18] 0 +
mov [esp+50h+var_14] 0 +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+arg_C] +
mov [esp+50h+var_10] 0 +
mov [esp+50h+var_34] eax +
mov eax [esp+50h+arg_0] +
mov [esp+50h+var_2C] eax +
mov eax [esi] +
mov [esp+50h+var_44] 38h +
mov [esp+50h+var_48] offset a1_2_7_0 +
mov [esp+50h+var_50] ebx +
mov [esp+50h+var_28] eax +
mov eax [esp+50h+arg_10] +
mov [esp+50h+var_4C] eax +
call sub_4555A0  +
test eax eax +
jz loc_451540  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+50h+var_4C] 4 +
mov [esp+50h+var_50] ebx +
call sub_454040  +
cmp eax 1 +
mov edi eax +
jz loc_451570  +
mov [esp+50h+var_50] ebx +
call sub_4551C0  +
test edi edi +
mov eax 0FFFFFFFBh +
cmovnz eax edi +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+50h+var_24] +
mov [esi] eax +
mov [esp+50h+var_50] ebx +
call sub_4551C0  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+10h] 0FFFFFFFFh +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4514D0  +
add esp 2Ch +
retn   +
***
mov edx [esp+4] +
mov eax edx +
shr eax 0Ch +
lea ecx [edx+eax+0Dh] +
mov eax edx +
shr eax 0Eh +
add eax ecx +
shr edx 19h +
add eax edx +
retn   +
***
mov eax offset a1_2_7_1 +
retn   +
***
mov eax 55h +
retn   +
***
mov eax 2 +
sub eax [esp+4] +
mov eax ds:off_48DF60[eax*4] +
retn   +
***
jmp loc_451630  +
mov eax [esp+0Ch] +
imul eax [esp+8] +
mov [esp+4] eax +
jmp malloc  +
***
mov eax [esp+8] +
mov [esp+4] eax +
jmp free  +
***
push ebp  +
mov ebp 80078071h +
push edi  +
push esi  +
mov esi eax +
mov eax ecx +
push ebx  +
mov ebx edx +
imul  ebp +
mov eax ecx +
sar eax 1Fh +
sub esp 4 +
add edx ecx +
sar edx 0Fh +
sub edx eax +
movzx eax bx +
imul edx edx +
shr ebx 10h +
mov [esp] eax +
sub ecx edx +
mov edx ecx +
movzx ecx si +
mov edi edx +
imul edi ecx +
shr esi 10h +
add ebx esi +
sub ebx edx +
mov eax edi +
mul  ebp +
shr edx 0Fh +
imul edx edx +
sub edi edx +
mov edx 0FFF0h +
add ebx edi +
add ecx [esp] +
lea eax [ebx+0FFF1h] +
jz loc_4516D4  +
lea edx [ecx-1] +
cmp edx 0FFF0h +
jbe loc_4516D4  +
lea edx [ecx-0FFF2h] +
sub ebx 0FFF1h +
cmp eax 1FFE2h +
cmovnb eax ebx +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovnb eax ecx +
add esp 4 +
shl eax 10h +
pop ebx  +
or eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 38h +
mov ebp [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov eax ebp +
movzx ebp bp +
shr eax 10h +
cmp [esp+38h+arg_8] 1 +
mov [esp+38h+var_C] eax +
jz loc_4518EB  +
test edi edi +
jz loc_451AA9  +
cmp [esp+38h+arg_8] 0Fh +
ja loc_451792  +
mov edx [esp+38h+arg_8] +
test edx edx +
jz loc_45175A  +
mov edx [esp+38h+arg_8] +
mov eax [esp+38h+var_C] +
add edx edi +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_451747  +
mov [esp+38h+var_C] eax +
mov eax [esp+38h+var_C] +
cmp ebp 0FFF1h +
mov edx 80078071h +
lea ecx [ebp-0FFF1h] +
cmovb ecx ebp +
mul  edx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub eax edx +
shl eax 10h +
or ecx eax +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 15AFh +
jbe loc_45192D  +
sub [esp+38h+arg_8] 15B0h +
lea eax [edi+15B0h] +
mov [esp+38h+var_8] eax +
mov eax edi +
movzx edi byte ptr [eax] +
add eax 10h +
lea ebx [ebp+edi+0] +
movzx edi byte ptr [eax-0Fh] +
mov [esp+38h+var_38] ebx +
add edi ebx +
mov ebx edi +
movzx edi byte ptr [eax-0Eh] +
mov [esp+38h+var_34] ebx +
mov esi edi +
movzx edi byte ptr [eax-0Dh] +
add esi ebx +
mov [esp+38h+var_30] esi +
mov ecx edi +
movzx edi byte ptr [eax-0Ch] +
add ecx esi +
mov [esp+38h+var_2C] ecx +
mov edx edi +
movzx edi byte ptr [eax-0Bh] +
add edx ecx +
mov [esp+38h+var_28] edx +
mov ebp edi +
movzx edi byte ptr [eax-0Ah] +
add ebp edx +
mov [esp+38h+var_24] ebp +
add edi ebp +
movzx ebp byte ptr [eax-1] +
mov ebx edi +
movzx edi byte ptr [eax-9] +
mov [esp+38h+var_20] ebx +
add edi ebx +
movzx ebx byte ptr [eax-4] +
mov esi edi +
movzx edi byte ptr [eax-8] +
mov [esp+38h+var_1C] esi +
mov ecx edi +
movzx edi byte ptr [eax-7] +
add ecx esi +
movzx esi byte ptr [eax-5] +
mov [esp+38h+var_18] ecx +
mov edx edi +
movzx edi byte ptr [eax-6] +
add edx ecx +
movzx ecx byte ptr [eax-3] +
mov [esp+38h+var_14] edx +
add edi edx +
movzx edx byte ptr [eax-2] +
add esi edi +
mov [esp+38h+var_10] edi +
mov edi [esp+38h+var_34] +
add ebx esi +
add edi [esp+38h+var_38] +
add ecx ebx +
add edi [esp+38h+var_30] +
add edx ecx +
add edi [esp+38h+var_2C] +
add ebp edx +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add edi [esp+38h+var_18] +
add edi [esp+38h+var_14] +
add edi [esp+38h+var_10] +
add edi esi +
add edi ebx +
add ecx edi +
add edx ecx +
add edx ebp +
add [esp+38h+var_C] edx +
cmp eax [esp+38h+var_8] +
jnz loc_4517B4  +
mov edi eax +
mov eax 80078071h +
mul  ebp +
mov eax 80078071h +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
cmp [esp+38h+arg_8] 15AFh +
ja loc_4517A0  +
mov eax [esp+38h+arg_8] +
test eax eax +
jnz loc_451922  +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi] +
add ebp eax +
cmp ebp 0FFF1h +
lea eax [ebp-0FFF1h] +
cmovnb ebp eax +
mov eax [esp+38h+var_C] +
add eax ebp +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovb ecx eax +
add esp 38h +
shl ecx 10h +
or ecx ebp +
pop ebx  +
mov eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 0Fh +
jbe loc_451AB3  +
mov eax [esp+38h+arg_8] +
mov edx edi +
mov [esp+38h+arg_4] edi +
sub eax 10h +
mov [esp+38h+var_4] eax +
shr [esp+38h+var_4] 4 +
mov eax [esp+38h+var_4] +
shl eax 4 +
lea eax [edi+eax+10h] +
mov [esp+38h+var_8] eax +
movzx eax byte ptr [edx] +
add edx 10h +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-0Fh] +
mov [esp+38h+var_38] esi +
add eax esi +
mov edi eax +
movzx eax byte ptr [edx-0Eh] +
mov [esp+38h+var_34] edi +
add eax edi +
movzx edi byte ptr [edx-4] +
mov esi eax +
movzx eax byte ptr [edx-0Dh] +
mov [esp+38h+var_30] esi +
add eax esi +
mov ebx eax +
movzx eax byte ptr [edx-0Ch] +
mov [esp+38h+var_2C] ebx +
mov ecx eax +
movzx eax byte ptr [edx-0Bh] +
add ecx ebx +
movzx ebx byte ptr [edx-7] +
mov [esp+38h+var_28] ecx +
mov ebp eax +
movzx eax byte ptr [edx-0Ah] +
add ebp ecx +
movzx ecx byte ptr [edx-6] +
mov [esp+38h+var_24] ebp +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-9] +
mov [esp+38h+var_20] esi +
add eax esi +
movzx esi byte ptr [edx-8] +
mov [esp+38h+var_1C] eax +
add esi eax +
movzx eax byte ptr [edx-5] +
add ebx esi +
add ecx ebx +
add eax ecx +
lea ebp [eax+edi] +
movzx edi byte ptr [edx-3] +
mov [esp+38h+var_18] ebp +
add edi ebp +
mov ebp edi +
movzx edi byte ptr [edx-2] +
mov [esp+38h+var_14] ebp +
add edi ebp +
movzx ebp byte ptr [edx-1] +
mov [esp+38h+var_10] edi +
add ebp edi +
mov edi [esp+38h+var_34] +
add edi [esp+38h+var_38] +
add edi [esp+38h+var_30] +
add edi [esp+38h+var_2C] +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add esi edi +
add ebx esi +
add ecx ebx +
add eax ecx +
add eax [esp+38h+var_18] +
add eax [esp+38h+var_14] +
add eax [esp+38h+var_10] +
add eax ebp +
add [esp+38h+var_C] eax +
cmp edx [esp+38h+var_8] +
jnz loc_451952  +
mov esi [esp+38h+var_4] +
mov edi [esp+38h+arg_4] +
mov eax esi +
add eax 1 +
shl eax 4 +
add edi eax +
mov eax esi +
mov esi [esp+38h+arg_8] +
shl eax 4 +
neg eax  +
lea eax [esi+eax-11h] +
and esi 0Fh +
jz loc_451A74  +
lea edx [edi+eax+1] +
mov eax [esp+38h+var_C] +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_451A61  +
mov [esp+38h+var_C] eax +
mov ecx 80078071h +
mov eax ebp +
mul  ecx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  ecx +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
jmp loc_4518E1  +
mov ecx 1 +
jmp loc_451788  +
mov eax [esp+38h+arg_8] +
sub eax 1 +
jmp loc_451A59  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_451AD5  +
jmp loc_451660  +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_451AF5  +
jmp loc_451660  +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov ecx [edx+edi*4] +
test ecx ecx +
jz loc_451B2D  +
mov ebx edx +
xor esi esi +
test cl 1 +
jz loc_451B17  +
xor esi [ebx] +
add ebx 4 +
shr ecx 1 +
jnz loc_451B10  +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_451B05  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor esi esi +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_451B05  +
jmp loc_451B29  +
***
push ebp  +
mov ebp ecx +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 100h +
test ecx ecx +
jle loc_451C0D  +
mov edi edx +
mov edx 1 +
mov dword ptr [esp+80h] 0EDB88320h +
lea eax [esp+84h] +
lea ecx [esp+100h] +
mov [eax] edx +
add eax 4 +
add edx edx +
cmp eax ecx +
jnz loc_451B76  +
lea edx [esp+80h] +
mov eax esp +
call sub_451B00  +
mov edx esp +
lea eax [esp+80h] +
call sub_451B00  +
lea esi [esi+0] +
lea edx [esp+80h] +
mov eax esp +
call sub_451B00  +
test ebp 1 +
jz loc_451BCE  +
test esi esi +
jz loc_451BCE  +
mov ebx esi +
mov eax esp +
xor esi esi +
test bl 1 +
jz loc_451BC7  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_451BC0  +
sar ebp 1 +
jz loc_451C09  +
mov edx esp +
lea eax [esp+80h] +
call sub_451B00  +
test ebp 1 +
jz loc_451C05  +
test esi esi +
jz loc_451C05  +
mov ebx esi +
xor esi esi +
lea eax [esp+80h] +
test bl 1 +
jz loc_451BFE  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_451BF7  +
sar ebp 1 +
jnz loc_451BA0  +
mov eax esi +
xor eax edi +
add esp 100h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax offset dword_48DFA0 +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov ebp [esp+4+arg_8] +
test edx edx +
jz loc_451ED3  +
mov eax [esp+4+arg_0] +
test ebp ebp +
not eax  +
jnz loc_451C74  +
jmp loc_451EC9  +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_48DFA0[ecx*4] +
sub ebp 1 +
jz loc_451EC9  +
test dl 3 +
jnz loc_451C56  +
cmp ebp 1Fh +
jbe loc_451E44  +
lea edi [ebp-20h] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 5 +
mov ecx [esp+4+var_4] +
mov [esp+4+arg_4] edx +
shl ecx 5 +
lea edi [edx+ecx+20h] +
lea esi [esi+0] +
xor eax [ebx] +
mov edx eax +
movzx ecx al +
shr edx 10h +
movzx esi ah +
mov ecx ds:dword_48EBA0[ecx*4] +
shr eax 18h +
movzx edx dl +
xor ecx ds:dword_48DFA0[eax*4] +
xor ecx [ebx+4] +
xor ecx ds:dword_48E7A0[esi*4] +
xor ecx ds:dword_48E3A0[edx*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_48EBA0[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_48DFA0[ecx*4] +
xor esi [ebx+8] +
xor esi ds:dword_48E7A0[edx*4] +
xor esi ds:dword_48E3A0[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_48EBA0[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_48DFA0[esi*4] +
xor ecx [ebx+0Ch] +
xor ecx ds:dword_48E7A0[edx*4] +
xor ecx ds:dword_48E3A0[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_48EBA0[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_48DFA0[ecx*4] +
xor esi [ebx+10h] +
xor esi ds:dword_48E7A0[edx*4] +
xor esi ds:dword_48E3A0[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_48EBA0[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_48DFA0[esi*4] +
xor ecx [ebx+14h] +
xor ecx ds:dword_48E7A0[edx*4] +
xor ecx ds:dword_48E3A0[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_48EBA0[esi*4] +
movzx eax al +
shr ecx 18h +
xor esi ds:dword_48DFA0[ecx*4] +
add ebx 20h +
xor esi [ebx-8] +
xor esi ds:dword_48E7A0[edx*4] +
xor esi ds:dword_48E3A0[eax*4] +
mov eax esi +
mov edx esi +
movzx ecx ah +
movzx edx dl +
shr eax 10h +
mov edx ds:dword_48EBA0[edx*4] +
shr esi 18h +
movzx eax al +
xor edx ds:dword_48DFA0[esi*4] +
xor edx [ebx-4] +
xor edx ds:dword_48E7A0[ecx*4] +
xor edx ds:dword_48E3A0[eax*4] +
mov ecx edx +
mov eax edx +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_48DFA0[eax*4] +
movzx edx dh +
xor eax ds:dword_48EBA0[esi*4] +
xor eax ds:dword_48E7A0[edx*4] +
xor eax ds:dword_48E3A0[ecx*4] +
cmp ebx edi +
jnz loc_451CA0  +
mov ecx [esp+4+var_4] +
and ebp 1Fh +
mov edx [esp+4+arg_4] +
add ecx 1 +
shl ecx 5 +
add edx ecx +
cmp ebp 3 +
jbe loc_451EA6  +
lea edi [ebp-4] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 2 +
mov edi [esp+4+var_4] +
mov [esp+4+arg_4] edx +
lea edi [edx+edi*4+4] +
xor eax [ebx] +
add ebx 4 +
mov ecx eax +
mov edx eax +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_48DFA0[eax*4] +
movzx edx dh +
xor eax ds:dword_48EBA0[esi*4] +
xor eax ds:dword_48E7A0[edx*4] +
xor eax ds:dword_48E3A0[ecx*4] +
cmp ebx edi +
jnz loc_451E60  +
mov edx [esp+4+arg_4] +
and ebp 3 +
mov edi [esp+4+var_4] +
lea edx [edx+edi*4+4] +
test ebp ebp +
jz loc_451EC9  +
lea ebx [edx+ebp] +
lea esi [esi+0] +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_48DFA0[ecx*4] +
cmp edx ebx +
jnz loc_451EB0  +
add esp 4 +
not eax  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_451B40  +
***
jmp loc_451F00  +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_451B40  +
***
push esi  +
push ebx  +
sub esp 84h +
mov edi [esp+84h+arg_8] +
lea edx [esp+84h+var_40] +
lea eax [esp+84h+var_20] +
lea esi [esi+0] +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
cmp edx eax +
jnz loc_451F40  +
mov edx [esp+84h+arg_4] +
test edi edi +
lea ebx [edx+edi*2] +
jz loc_451F70  +
nop   +
lea esi [esi+0] +
movzx ecx word ptr [edx] +
add edx 2 +
add word ptr [esp+ecx*2+84h+var_40] 1 +
cmp edx ebx +
jnz loc_451F60  +
mov esi [esp+84h+arg_10] +
mov ecx 0Fh +
mov edx [esi] +
nop   +
cmp word ptr [esp+ecx*2+84h+var_40] 0 +
jnz loc_451FDD  +
sub ecx 1 +
jnz loc_451F80  +
mov eax [esp+84h+arg_C] +
xor ebx ebx +
xor esi esi +
mov edi [esp+84h+arg_C] +
mov eax [eax] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] bx +
mov eax [edi] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] si +
mov eax [esp+84h+arg_10] +
mov dword ptr [eax] 1 +
xor eax eax +
add esp 84h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx edx +
cmovbe edx ecx +
test ecx ecx +
mov [esp+84h+var_64] ecx +
mov [esp+84h+var_84] edx +
jz loc_451F8D  +
cmp ecx 1 +
movzx esi word ptr [esp+84h+var_40+2] +
mov ebp 1 +
jbe loc_452016  +
test si si +
jnz loc_452016  +
mov edx [esp+84h+var_64] +
jmp loc_45200F  +
cmp word ptr [esp+ebp*2+84h+var_40] 0 +
jnz loc_452016  +
add ebp 1 +
cmp ebp edx +
jnz loc_452007  +
lea edx [esp+84h+var_3C] +
movzx ecx si +
mov ebx 1 +
jmp loc_45202A  +
movzx ecx word ptr [edx] +
add edx 2 +
add ebx ebx +
sub ebx ecx +
js loc_45239E  +
cmp eax edx +
jnz loc_452024  +
test ebx ebx +
jz loc_452056  +
cmp [esp+84h+var_64] 1 +
jnz loc_45239E  +
mov ecx [esp+84h+arg_0] +
test ecx ecx +
jz loc_45239E  +
xor edx edx +
xor ecx ecx +
mov word ptr [esp+84h+var_20+2] dx +
mov edx 1 +
jmp loc_45206B  +
movzx esi word ptr [esp+edx*2+84h+var_40] +
add edx 1 +
add ecx esi +
cmp edx 0Fh +
mov [eax+edx*2] cx +
jnz loc_452066  +
xor eax eax +
test edi edi +
jz loc_4520B7  +
mov [esp+84h+var_80] ebp +
mov esi [esp+84h+arg_4] +
mov ebp [esp+84h+arg_14] +
movzx ecx word ptr [esi+eax*2] +
test cx cx +
jz loc_4520AC  +
movzx edx word ptr [esp+ecx*2+84h+var_20] +
lea ebx [edx+1] +
mov word ptr [esp+ecx*2+84h+var_20] bx +
mov [ebp+edx*2+0] ax +
add eax 1 +
cmp eax edi +
jnz loc_452091  +
mov ebp [esp+84h+var_80] +
mov ebx [esp+84h+arg_0] +
test ebx ebx +
jz loc_4523F9  +
cmp [esp+84h+arg_0] 1 +
mov edi 0FFFFFFFFh +
mov eax 100h +
mov ebx offset unk_48FFA0 +
cmovnz eax edi +
mov edi offset unk_48FFE0 +
mov [esp+84h+var_58] eax +
mov eax offset unk_48FE1E +
cmovnz eax ebx +
mov [esp+84h+var_48] eax +
mov eax offset unk_48FE5E +
cmovnz eax edi +
mov [esp+84h+var_4C] eax +
mov eax [esp+84h+var_84] +
cmp ebp eax +
cmovnb eax ebp +
mov edi eax +
mov [esp+84h+var_68] eax +
mov eax [esp+84h+arg_C] +
mov ecx edi +
mov eax [eax] +
mov [esp+84h+var_6C] eax +
mov eax 1 +
shl eax cl +
cmp [esp+84h+arg_0] 1 +
setz [esp+84h+var_42]  +
cmp eax 353h +
ja loc_4523EC  +
cmp [esp+84h+arg_0] 2 +
setz [esp+84h+var_41]  +
cmp eax 24Fh +
ja loc_4523AE  +
mov ebx [esp+84h+arg_14] +
mov edi [esp+84h+var_68] +
mov [esp+84h+var_5C] eax +
sub eax 1 +
mov [esp+84h+var_84] ebp +
mov [esp+84h+var_70] ebx +
mov [esp+84h+var_54] 0FFFFFFFFh +
mov ebp edi +
mov [esp+84h+var_80] 0 +
mov [esp+84h+var_7C] 0 +
mov [esp+84h+var_50] eax +
lea esi [esi+0] +
mov eax [esp+84h+var_70] +
movzx edx byte ptr [esp+84h+var_84] +
sub dl byte ptr [esp+84h+var_7C] +
mov byte ptr [esp+84h+var_74] 0 +
movzx esi word ptr [eax] +
movzx eax si +
cmp [esp+84h+var_58] eax +
jg loc_4521C7  +
jge loc_4523E0  +
mov edi [esp+84h+var_48] +
movzx ebx byte ptr [edi+eax*2] +
mov byte ptr [esp+84h+var_74] bl +
mov ebx [esp+84h+var_4C] +
movzx esi word ptr [ebx+eax*2] +
mov ecx [esp+84h+var_84] +
mov edi 1 +
mov eax 1 +
sub ecx [esp+84h+var_7C] +
shl edi cl +
mov ecx ebp +
shl eax cl +
movzx ecx byte ptr [esp+84h+var_7C] +
mov ebx eax +
mov [esp+84h+var_60] eax +
lea eax ds:0[edi*4] +
mov [esp+84h+var_78] eax +
mov eax [esp+84h+var_80] +
neg [esp+84h+var_78]  +
shr eax cl +
mov ecx ebx +
add eax ebx +
mov ebx [esp+84h+var_6C] +
sub eax edi +
lea eax [ebx+eax*4+1] +
movzx ebx byte ptr [esp+84h+var_74] +
mov [esp+84h+var_74] ebp +
mov ebp [esp+84h+var_78] +
lea esi [esi+0] +
mov [eax-1] bl +
mov [eax] dl +
mov [eax+1] si +
add eax ebp +
sub ecx edi +
jnz loc_452220  +
mov eax [esp+84h+var_84] +
mov ebp [esp+84h+var_74] +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+84h+var_80] +
test ecx eax +
jz loc_452256  +
lea esi [esi+0] +
shr ecx 1 +
test ecx eax +
jnz loc_452250  +
test ecx ecx +
jz loc_4523D0  +
lea eax [ecx-1] +
and eax [esp+84h+var_80] +
add eax ecx +
mov [esp+84h+var_80] eax +
mov esi [esp+84h+var_84] +
movzx eax word ptr [esp+esi*2+84h+var_40] +
mov word ptr [esp+84h+var_78] ax +
sub eax 1 +
test ax ax +
mov word ptr [esp+esi*2+84h+var_40] ax +
jnz loc_4522A7  +
mov eax [esp+84h+var_64] +
cmp esi eax +
jz loc_452415  +
mov eax [esp+84h+var_70] +
mov ebx [esp+84h+arg_4] +
movzx eax word ptr [eax+2] +
movzx eax word ptr [ebx+eax*2] +
mov [esp+84h+var_84] eax +
mov eax [esp+84h+var_84] +
cmp [esp+84h+var_68] eax +
jnb loc_452394  +
mov ebx [esp+84h+var_80] +
and ebx [esp+84h+var_50] +
cmp ebx [esp+84h+var_54] +
jz loc_452394  +
mov edi [esp+84h+var_6C] +
mov edx 1 +
mov esi [esp+84h+var_60] +
mov eax [esp+84h+var_7C] +
lea edi [edi+esi*4] +
mov [esp+84h+var_6C] edi +
mov edi [esp+84h+var_84] +
test eax eax +
cmovz eax [esp+84h+var_68] +
mov ebp edi +
mov esi eax +
sub ebp eax +
mov ecx ebp +
shl edx cl +
mov ecx [esp+84h+var_64] +
mov [esp+84h+var_7C] eax +
cmp edi ecx +
jnb loc_452329  +
movzx eax word ptr [esp+edi*2+84h+var_40] +
sub edx eax +
test edx edx +
jle loc_452329  +
lea ecx [esp+esi*2+84h+var_40] +
mov edi [esp+84h+var_64] +
jmp loc_45231D  +
movzx eax word ptr [ecx+ebp*2] +
sub edx eax +
test edx edx +
jle loc_452329  +
add ebp 1 +
add edx edx +
lea eax [esi+ebp] +
cmp eax edi +
jb loc_452313  +
mov eax 1 +
mov ecx ebp +
shl eax cl +
add [esp+84h+var_5C] eax +
cmp [esp+84h+var_5C] 353h +
ja loc_452458  +
cmp [esp+84h+var_5C] 24Fh +
ja loc_452468  +
mov eax [esp+84h+arg_C] +
mov ecx ebp +
lea edx ds:0[ebx*4] +
mov [esp+84h+var_54] ebx +
mov eax [eax] +
mov [eax+ebx*4] cl +
mov eax [esp+84h+arg_C] +
movzx ecx byte ptr [esp+84h+var_68] +
mov eax [eax] +
mov [eax+edx+1] cl +
mov eax [esp+84h+arg_C] +
mov ecx [eax] +
mov eax [esp+84h+var_6C] +
sub eax ecx +
sar eax 2 +
mov [ecx+edx+2] ax +
add [esp+84h+var_70] 2 +
jmp loc_452190  +
add esp 84h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+84h+var_41] 0 +
jz loc_452155  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+84h+var_80] 0 +
jmp loc_45226B  +
xor esi esi +
mov byte ptr [esp+84h+var_74] 60h +
jmp loc_4521C7  +
cmp [esp+84h+var_42] 0 +
jz loc_45213D  +
jmp loc_4523B9  +
mov eax [esp+84h+arg_14] +
mov [esp+84h+var_58] 13h +
mov [esp+84h+var_48] eax +
mov [esp+84h+var_4C] eax +
jmp loc_452101  +
mov ecx [esp+84h+var_80] +
test ecx ecx +
jz loc_452434  +
mov eax [esp+84h+var_6C] +
mov ebx [esp+84h+var_80] +
lea eax [eax+ebx*4] +
mov [eax+1] dl +
xor edx edx +
mov byte ptr [eax] 40h +
mov [eax+2] dx +
mov eax [esp+84h+var_5C] +
mov esi [esp+84h+arg_C] +
mov ebx [esp+84h+var_68] +
shl eax 2 +
add [esi] eax +
mov eax [esp+84h+arg_10] +
mov [eax] ebx +
xor eax eax +
jmp loc_451FD2  +
cmp [esp+84h+var_42] 0 +
jz loc_452344  +
jmp loc_4523B9  +
cmp [esp+84h+var_41] 0 +
jz loc_452352  +
jmp loc_4523B9  +
***
push esi  +
push ebx  +
sub esp 44h +
mov eax [esp+44h+arg_0] +
mov eax [eax+1Ch] +
mov esi eax +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
sub eax 1 +
mov edi eax +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+4] +
lea eax [edi+eax-5] +
mov [esp+44h+var_2C] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
lea edi [eax-1] +
mov eax [esp+44h+arg_0] +
mov eax [eax+10h] +
mov edx eax +
sub edx [esp+44h+arg_4] +
lea eax [edi+eax-101h] +
mov [esp+44h+var_34] eax +
mov eax esi +
lea ecx [edi+edx] +
mov edx 1 +
mov [esp+44h+var_14] ecx +
mov ecx [esi+28h] +
mov esi [esi+2Ch] +
mov [esp+44h+var_20] ecx +
mov [esp+44h+var_C] esi +
mov esi [eax+30h] +
mov [esp+44h+var_28] esi +
mov esi [eax+34h] +
mov [esp+44h+var_1C] esi +
mov esi eax +
mov eax [eax+38h] +
mov ebx [esi+4Ch] +
mov ebp [esi+3Ch] +
mov [esp+44h+var_40] ebx +
mov ebx [esi+50h] +
mov [esp+44h+var_24] ebx +
mov ecx [esi+54h] +
mov ebx edx +
shl ebx cl +
mov ecx [esi+58h] +
mov esi [esp+44h+var_1C] +
lea ebx [ebx-1] +
mov [esp+44h+var_30] ebx +
shl edx cl +
lea ebx [edx-1] +
mov [esp+44h+var_18] ebx +
lea ebx [esi-1] +
mov esi [esp+44h+var_28] +
add esi [esp+44h+var_20] +
mov [esp+44h+var_8] ebx +
mov [esp+44h+var_4] esi +
cmp ebp 0Eh +
ja loc_452569  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
lea esi [esi+2] +
movzx edx byte ptr [esi] +
mov [esp+44h+var_44] esi +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
add edx ebx +
add eax edx +
mov edx [esp+44h+var_30] +
mov esi [esp+44h+var_40] +
and edx eax +
lea ebx [esi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jz loc_4525E9  +
test dl 10h +
jnz loc_452664  +
test dl 40h +
jnz loc_452835  +
mov [esp+44h+var_3C] edi +
mov edi [esp+44h+var_40] +
jmp loc_4525BA  +
test dl 10h +
jnz loc_452660  +
test dl 40h +
jnz loc_452831  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jnz loc_4525A8  +
mov edi [esp+44h+var_3C] +
mov [edi+1] bl +
add edi 1 +
cmp edi [esp+44h+var_34] +
jnb loc_452602  +
mov ecx [esp+44h+var_2C] +
cmp [esp+44h+var_44] ecx +
jb loc_452544  +
mov edx [esp+44h+var_44] +
mov ecx ebp +
mov ebx 1 +
shr ecx 3 +
mov esi [esp+44h+arg_0] +
sub edx ecx +
shl ecx 3 +
sub ebp ecx +
mov ecx ebp +
shl ebx cl +
sub ebx 1 +
and ebx eax +
lea eax [edx+1] +
mov [esi] eax +
lea eax [edi+1] +
mov [esi+0Ch] eax +
mov eax [esp+44h+var_2C] +
sub eax edx +
add eax 5 +
mov [esi+4] eax +
mov eax [esp+44h+var_34] +
sub eax edi +
add eax 101h +
mov [esi+10h] eax +
mov eax [esp+44h+var_38] +
mov [eax+38h] ebx +
mov [eax+3Ch] ebp +
add esp 44h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+44h+var_3C] +
and edx 0Fh +
movzx ecx bx +
movzx ebx dl +
test ebx ebx +
mov [esp+44h+var_3C] ecx +
jz loc_4526A8  +
cmp ebx ebp +
jbe loc_452692  +
mov ecx [esp+44h+var_44] +
movzx esi byte ptr [ecx+1] +
mov ecx ebp +
add ebp 8 +
shl esi cl +
mov ecx [esp+44h+var_44] +
add eax esi +
lea esi [ecx+1] +
mov [esp+44h+var_44] esi +
mov ecx edx +
mov esi 1 +
shl esi cl +
sub ebp ebx +
sub esi 1 +
and esi eax +
add [esp+44h+var_3C] esi +
shr eax cl +
cmp ebp 0Eh +
jbe loc_452850  +
mov edx [esp+44h+var_18] +
mov ecx [esp+44h+var_24] +
and edx eax +
lea ebx [ecx+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jnz loc_452721  +
test dl 40h +
jnz loc_452896  +
mov [esp+44h+var_10] edi +
mov edi [esp+44h+var_24] +
jmp loc_4526F1  +
test dl 40h +
jnz loc_452892  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jz loc_4526E8  +
mov edi [esp+44h+var_10] +
movzx ecx bx +
mov ebx edx +
and ebx 0Fh +
movzx esi bl +
cmp esi ebp +
mov [esp+44h+var_10] ecx +
jbe loc_452752  +
mov ecx [esp+44h+var_44] +
movzx edx byte ptr [ecx+1] +
mov ecx ebp +
shl edx cl +
lea ecx [ebp+8] +
add eax edx +
cmp esi ecx +
ja loc_452991  +
add [esp+44h+var_44] 1 +
mov ebp ecx +
mov ecx ebx +
mov edx 1 +
shl edx cl +
sub ebp esi +
sub edx 1 +
and edx eax +
add edx [esp+44h+var_10] +
shr eax cl +
mov ecx edi +
sub ecx [esp+44h+var_14] +
mov [esp+44h+var_10] edx +
cmp [esp+44h+var_10] ecx +
mov edx ecx +
jbe loc_4528B0  +
mov ecx [esp+44h+var_10] +
sub ecx edx +
cmp [esp+44h+var_C] ecx +
jnb loc_45279C  +
mov esi [esp+44h+var_38] +
mov esi [esi+1BC0h] +
test esi esi +
jnz loc_4529F5  +
mov ebx [esp+44h+var_28] +
test ebx ebx +
jnz loc_452915  +
mov edx [esp+44h+var_20] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_4527D5  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_4527C0  +
mov edx edi +
sub edx [esp+44h+var_10] +
cmp [esp+44h+var_3C] 2 +
mov ecx [esp+44h+var_3C] +
jbe loc_452805  +
movzx ebx byte ptr [edx+1] +
add edx 3 +
sub ecx 3 +
add edi 3 +
mov [edi-2] bl +
movzx ebx byte ptr [edx-1] +
mov [edi-1] bl +
movzx ebx byte ptr [edx] +
cmp ecx 2 +
mov [edi] bl +
ja loc_4527E0  +
mov [esp+44h+var_3C] ecx +
mov ecx [esp+44h+var_3C] +
test ecx ecx +
jz loc_4525EF  +
movzx ecx byte ptr [edx+1] +
cmp [esp+44h+var_3C] 2 +
mov [edi+1] cl +
jnz loc_4529E4  +
movzx edx byte ptr [edx+2] +
add edi 2 +
mov [edi] dl +
jmp loc_4525EF  +
mov edi [esp+44h+var_3C] +
and edx 20h +
jz loc_452878  +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 0Bh +
jmp loc_452602  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
movzx edx byte ptr [esi+2] +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
mov ecx esi +
add edx ebx +
add ecx 2 +
add eax edx +
mov [esp+44h+var_44] ecx +
jmp loc_4526B1  +
mov ecx [esp+44h+arg_0] +
mov esi [esp+44h+var_38] +
mov dword ptr [ecx+18h] offset aInvalidLiter_1 +
mov dword ptr [esi] 1Dh +
jmp loc_452602  +
mov edi [esp+44h+var_10] +
mov ecx [esp+44h+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidDista_2 +
mov ecx [esp+44h+var_38] +
mov dword ptr [ecx] 1Dh +
jmp loc_452602  +
mov edx edi +
mov ebx [esp+44h+var_3C] +
sub edx [esp+44h+var_10] +
mov [esp+44h+var_10] eax +
jmp loc_4528C4  +
mov edi ecx +
mov edx esi +
movzx ecx byte ptr [edx+1] +
sub ebx 3 +
cmp ebx 2 +
lea esi [edx+3] +
mov [edi+1] cl +
movzx ecx byte ptr [edx+2] +
mov [edi+2] cl +
movzx eax byte ptr [edx+3] +
lea ecx [edi+3] +
mov [edi+3] al +
ja loc_4528C0  +
test ebx ebx +
mov eax [esp+44h+var_10] +
mov [esp+44h+var_3C] ebx +
jz loc_4529AD  +
movzx ecx byte ptr [edx+4] +
cmp ebx 2 +
mov [edi+4] cl +
jnz loc_4529EC  +
movzx edx byte ptr [edx+5] +
add edi 5 +
mov [edi] dl +
jmp loc_4525EF  +
cmp [esp+44h+var_28] ecx +
jnb loc_4529B4  +
mov edx [esp+44h+var_4] +
sub edx ecx +
sub ecx [esp+44h+var_28] +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_4527D5  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_452940  +
mov esi [esp+44h+var_3C] +
cmp [esp+44h+var_28] esi +
mov edx [esp+44h+var_8] +
jnb loc_4527D5  +
mov edi [esp+44h+var_28] +
xor edx edx +
sub [esp+44h+var_3C] edi +
mov esi edi +
mov edi [esp+44h+var_1C] +
movzx ebx byte ptr [edi+edx] +
mov [ecx+edx+1] bl +
add edx 1 +
cmp edx esi +
jnz loc_452971  +
mov edi [esp+44h+var_28] +
add edi ecx +
mov edx edi +
sub edx [esp+44h+var_10] +
jmp loc_4527D5  +
mov edx [esp+44h+var_44] +
add ebp 10h +
movzx edx byte ptr [edx+2] +
shl edx cl +
add eax edx +
mov edx [esp+44h+var_44] +
lea ecx [edx+2] +
mov [esp+44h+var_44] ecx +
jmp loc_452752  +
mov edi ecx +
jmp loc_4525EF  +
mov edx [esp+44h+var_28] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_4527D5  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_4529D0  +
jmp loc_4527CF  +
add edi 1 +
jmp loc_4525EF  +
add edi 4 +
nop   +
jmp loc_4525EF  +
mov esi [esp+44h+arg_0] +
mov dword ptr [esi+18h] offset aInvalidDista_3 +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 1Dh +
jmp loc_452602  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 28h +
mov ebx [eax+6Ch] +
mov [esp+2Ch+var_2C] edx +
mov edx [esi+90h] +
mov esi [esi+2Ch] +
mov ebp [eax+38h] +
mov [esp+2Ch+var_10] eax +
mov edi [eax+7Ch] +
mov eax [eax+78h] +
mov [esp+2Ch+var_14] edx +
lea edx [esi-106h] +
lea ecx [ebp+ebx+0] +
cmp ebx edx +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_28] 0 +
mov ecx eax +
jbe loc_452A63  +
lea edx [ebx+106h] +
mov [esp+2Ch+var_28] edx +
sub [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+var_10] +
lea ebx [ebp+ebx+102h] +
mov [esp+2Ch+var_8] ebx +
mov edx [esi+40h] +
mov [esp+2Ch+var_24] edx +
mov edx [esi+34h] +
mov [esp+2Ch+var_20] edx +
mov edx [esp+2Ch+var_18] +
movzx ebx byte ptr [edx+eax-1] +
mov [esp+2Ch+var_1A] bl +
movzx ebx byte ptr [edx+eax] +
mov edx [esp+2Ch+var_2C] +
mov [esp+2Ch+var_1C] bl +
mov ebx edi +
shr ebx 2 +
cmp eax [esi+8Ch] +
mov eax [esi+74h] +
cmovnb edi ebx +
mov ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_C] eax +
cmp ebx eax +
cmova ebx eax +
mov [esp+2Ch+var_14] ebx +
jmp loc_452ADF  +
mov eax [esp+2Ch+var_24] +
and edx [esp+2Ch+var_20] +
movzx edx word ptr [eax+edx*2] +
cmp [esp+2Ch+var_28] edx +
jnb loc_452C00  +
sub edi 1 +
jz loc_452C00  +
lea eax [ebp+edx+0] +
mov esi ecx +
movzx ebx byte ptr [eax+ecx] +
mov [esp+2Ch+var_2C] eax +
movzx eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_1B] bl +
cmp bl al +
jnz loc_452AC0  +
mov eax [esp+2Ch+var_2C] +
movzx ebx byte ptr [eax+ecx-1] +
cmp bl [esp+2Ch+var_1A] +
mov [esp+2Ch+var_19] bl +
jnz loc_452AC0  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx] +
cmp [eax] bl +
jnz loc_452AC0  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx+1] +
cmp [eax+1] bl +
jnz loc_452AC0  +
mov esi [esp+2Ch+var_18] +
add eax 2 +
movzx ebx [esp+2Ch+var_1B] +
mov [esp+2Ch+var_2C] edx +
add esi 2 +
jmp loc_452BA0  +
movzx edx byte ptr [eax+2] +
cmp [esi+2] dl +
jnz loc_452C7E  +
movzx edx byte ptr [eax+3] +
cmp [esi+3] dl +
jnz loc_452C6F  +
movzx edx byte ptr [eax+4] +
cmp [esi+4] dl +
jnz loc_452C60  +
movzx edx byte ptr [eax+5] +
cmp [esi+5] dl +
jnz loc_452C51  +
movzx edx byte ptr [eax+6] +
cmp [esi+6] dl +
jnz loc_452C42  +
movzx edx byte ptr [eax+7] +
cmp [esi+7] dl +
jnz loc_452C33  +
add eax 8 +
add esi 8 +
movzx edx byte ptr [eax] +
cmp [esi] dl +
jnz loc_452C2A  +
cmp [esp+2Ch+var_8] esi +
jbe loc_452C2A  +
movzx edx byte ptr [eax+1] +
cmp [esi+1] dl +
jz loc_452B37  +
mov edx [esp+2Ch+var_2C] +
add esi 1 +
mov [esp+2Ch+var_1B] bl +
mov eax [esp+2Ch+var_8] +
sub esi eax +
sub eax 102h +
add esi 102h +
cmp ecx esi +
mov [esp+2Ch+var_18] eax +
jge loc_452C11  +
mov eax [esp+2Ch+var_10] +
cmp [esp+2Ch+var_14] esi +
mov [eax+70h] edx +
jle loc_452C00  +
mov eax [esp+2Ch+var_18] +
mov ecx esi +
movzx eax byte ptr [eax+esi-1] +
mov [esp+2Ch+var_1A] al +
mov eax [esp+2Ch+var_8] +
movzx eax byte ptr [eax+esi-102h] +
mov [esp+2Ch+var_1C] al +
jmp loc_452AC0  +
mov eax [esp+2Ch+var_C] +
cmp esi eax +
cmovbe eax esi +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax [esp+2Ch+var_1B] +
mov esi ecx +
mov [esp+2Ch+var_1C] al +
movzx eax [esp+2Ch+var_19] +
mov [esp+2Ch+var_1A] al +
jmp loc_452AC0  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
jmp loc_452BB3  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 7 +
jmp loc_452BB3  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 6 +
jmp loc_452BB3  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 5 +
jmp loc_452BB3  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 4 +
jmp loc_452BB3  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 3 +
jmp loc_452BB3  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 2 +
jmp loc_452BB3  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edi [ebp+74h] +
lea ecx [eax+eax] +
mov edx eax +
mov [esp+48h+var_20] eax +
sub eax 106h +
mov [esp+48h+var_1C] ecx +
mov [esp+48h+var_24] eax +
mov ebx [ebp+3Ch] +
mov eax [ebp+6Ch] +
add edx [esp+48h+var_24] +
sub ebx edi +
sub ebx eax +
cmp eax edx +
jnb loc_452E10  +
mov esi [ebp+0] +
mov edi [esi+4] +
test edi edi +
jz loc_452EA0  +
cmp ebx edi +
mov edx [ebp+38h] +
mov ecx [ebp+6Ch] +
mov eax [ebp+74h] +
jnb loc_452DC5  +
test ebx ebx +
jnz loc_452F64  +
xor edi edi +
mov esi [ebp+16B4h] +
add edi eax +
mov [ebp+74h] edi +
lea eax [edi+esi] +
cmp eax 2 +
jbe loc_452DA3  +
mov ecx [ebp+58h] +
mov edx [ebp+6Ch] +
mov eax [ebp+38h] +
mov [esp+48h+var_34] ecx +
mov ecx [ebp+54h] +
sub edx esi +
movzx ebx byte ptr [eax+edx] +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_28] ecx +
movzx ecx byte ptr [esp+48h+var_34] +
mov [ebp+48h] ebx +
movzx eax byte ptr [eax+edx+1] +
shl ebx cl +
xor eax ebx +
and eax [esp+48h+var_30] +
mov [esp+48h+var_30] edi +
mov [ebp+48h] eax +
jmp loc_452D9B  +
mov eax [esp+48h+var_2C] +
sub esi 1 +
mov ebx [ebp+48h] +
movzx ecx byte ptr [esp+48h+var_34] +
movzx eax byte ptr [eax+edx+2] +
shl ebx cl +
mov ecx [ebp+40h] +
xor eax ebx +
mov ebx [ebp+44h] +
and eax [esp+48h+var_28] +
mov [ebp+48h] eax +
lea eax [ebx+eax*2] +
mov ebx [ebp+34h] +
movzx edi word ptr [eax] +
and ebx edx +
mov [ecx+ebx*2] di +
mov [eax] dx +
mov eax [esp+48h+var_30] +
add edx 1 +
mov [ebp+16B4h] esi +
add eax esi +
cmp eax 2 +
jbe loc_452D9F  +
test esi esi +
jnz loc_452D50  +
mov edi [esp+48h+var_30] +
cmp edi 105h +
ja loc_452EA0  +
mov eax [ebp+0] +
mov eax [eax+4] +
test eax eax +
jz loc_452EA0  +
mov edx [ebp+2Ch] +
jmp loc_452CB5  +
mov [esp+48h+var_34] 0 +
add eax ecx +
lea ebx [edx+eax] +
mov eax [esp+48h+var_34] +
mov [esi+4] eax +
mov eax [esi] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call memcpy  +
mov eax [esi+1Ch] +
mov eax [eax+18h] +
cmp eax 1 +
jz loc_452EF0  +
cmp eax 2 +
jz loc_452F0B  +
add [esi] edi +
add [esi+8] edi +
mov eax [ebp+74h] +
jmp loc_452CF4  +
mov esi [esp+48h+var_20] +
mov eax [ebp+38h] +
mov [esp+48h+var_40] esi +
lea edx [eax+esi] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call memcpy  +
mov ecx esi +
mov eax [ebp+44h] +
sub [ebp+70h] esi +
sub [ebp+6Ch] esi +
sub [ebp+5Ch] esi +
mov esi [ebp+4Ch] +
mov [esp+48h+var_34] ebx +
mov ebx ecx +
lea edx [eax+esi*2] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_452E44  +
mov eax [esp+48h+var_20] +
mov edx [esp+48h+var_1C] +
add edx [ebp+40h] +
mov esi eax +
mov ebx eax +
lea esi [esi+0] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_452E70  +
mov esi [ebp+0] +
mov ebx [esp+48h+var_34] +
add ebx [esp+48h+var_20] +
mov edi [esi+4] +
test edi edi +
jnz loc_452CD9  +
nop   +
mov eax [ebp+16C0h] +
mov edx [ebp+3Ch] +
cmp eax edx +
jnb loc_452EE8  +
mov ebx [ebp+74h] +
add ebx [ebp+6Ch] +
cmp eax ebx +
jnb loc_452F26  +
mov eax [ebp+38h] +
sub edx ebx +
mov esi 102h +
cmp edx 102h +
cmovbe esi edx +
mov [esp+48h+var_40] esi +
add eax ebx +
add ebx esi +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
mov [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_451700  +
mov [esi+30h] eax +
jmp loc_452E03  +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_451C30  +
mov [esi+30h] eax +
jmp loc_452E03  +
lea ecx [ebx+102h] +
cmp eax ecx +
jnb loc_452EE8  +
sub ebx eax +
sub edx eax +
add ebx 102h +
cmp ebx edx +
cmova ebx edx +
add eax [ebp+38h] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
add [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edi ebx +
mov [esp+48h+var_34] edi +
mov edi ebx +
jmp loc_452DCD  +
***
jmp sub_452F80  +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov esi [eax+1Ch] +
mov [esp+10h+var_10] esi +
call sub_456CB0  +
mov eax [esi+14h] +
mov edi [ebx+10h] +
cmp edi eax +
cmova edi eax +
test edi edi +
jnz loc_452FB0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+10h] +
mov eax [ebx+0Ch] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
add [ebx+0Ch] edi +
add [esi+10h] edi +
add [ebx+14h] edi +
sub [ebx+10h] edi +
sub [esi+14h] edi +
jnz loc_452FA2  +
mov eax [esi+8] +
mov [esi+10h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+50h] +
mov ebp [edi+74h] +
nop   +
cmp ebp 105h +
jbe loc_45326E  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
mov [ecx+esi*2] dx +
mov ecx [edi+70h] +
test edx edx +
mov [eax] bx +
mov eax [edi+60h] +
mov dword ptr [edi+60h] 2 +
mov [edi+64h] ecx +
mov [edi+78h] eax +
jz loc_453073  +
cmp eax [edi+80h] +
jnb loc_453073  +
mov ecx [edi+2Ch] +
mov esi ebx +
sub esi edx +
sub ecx 106h +
cmp esi ecx +
jbe loc_453330  +
cmp eax 2 +
jbe loc_4531F7  +
cmp [edi+60h] eax +
ja loc_4531F7  +
mov edx [edi+74h] +
sub eax 3 +
mov ecx [edi+16A4h] +
lea ebp [ebx+edx-3] +
mov edx [edi+16A0h] +
sub bx [edi+64h] +
lea esi [ebx-1] +
sub ebx 2 +
mov [ecx+edx*2] si +
mov ecx [edi+1698h] +
lea esi [edx+1] +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_490320[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_4532E0  +
movzx ebx bx +
movzx eax ds:byte_490420[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+16A0h] +
mov esi [edi+74h] +
mov [esp+18h] ebp +
mov [esp+20h] eax +
mov eax [edi+169Ch] +
add esi 1 +
mov [esp+1Ch] esi +
sub eax 1 +
mov [esp+24h] eax +
mov eax [edi+78h] +
sub [esp+1Ch] eax +
mov esi [esp+1Ch] +
lea ebx [eax-2] +
mov [esp+28h] eax +
mov eax [edi+6Ch] +
mov [edi+74h] esi +
mov [edi+78h] ebx +
mov [esp+2Ch] eax +
mov edx eax +
jmp loc_453136  +
mov edx eax +
lea eax [edx+1] +
cmp [esp+18h] eax +
mov [edi+6Ch] eax +
jb loc_453172  +
mov ecx [edi+38h] +
mov esi [edi+48h] +
movzx edx byte ptr [ecx+edx+3] +
mov ecx [edi+58h] +
shl esi cl +
mov ecx [edi+44h] +
xor edx esi +
mov esi [edi+34h] +
and edx [edi+54h] +
mov [edi+48h] edx +
lea edx [ecx+edx*2] +
mov ecx [edi+40h] +
movzx ebp word ptr [edx] +
and esi eax +
mov [ecx+esi*2] bp +
mov [edx] ax +
sub ebx 1 +
test ebx ebx +
mov [edi+78h] ebx +
jnz loc_453134  +
mov esi [esp+2Ch] +
mov eax [esp+28h] +
mov dword ptr [edi+68h] 0 +
mov ebp [esp+1Ch] +
mov dword ptr [edi+60h] 2 +
lea eax [eax+esi-1] +
mov esi [esp+24h] +
cmp [esp+20h] esi +
mov [edi+6Ch] eax +
jnz loc_453000  +
mov edx [edi+5Ch] +
xor ecx ecx +
sub eax edx +
test edx edx +
js loc_4531BB  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_456DB0  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_452F80  +
mov eax [edi] +
mov ebp [eax+10h] +
test ebp ebp +
jnz loc_452FFB  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [edi+68h] +
test esi esi +
jz loc_4532C0  +
mov eax [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx-1] +
xor ebx ebx +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
jz loc_4532F3  +
mov eax [edi+74h] +
add dword ptr [edi+6Ch] 1 +
lea ebp [eax-1] +
mov eax [edi] +
mov [edi+74h] ebp +
mov eax [eax+10h] +
test eax eax +
jz loc_4531ED  +
cmp ebp 105h +
ja loc_45300C  +
mov eax edi +
call sub_452C90  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_45300C  +
mov edx [esp+54h] +
test edx edx +
jz loc_4531ED  +
test eax eax +
jz loc_453375  +
cmp eax 2 +
ja loc_45300C  +
mov eax [edi+60h] +
mov edx [edi+70h] +
mov dword ptr [edi+60h] 2 +
mov ebx [edi+6Ch] +
mov [edi+78h] eax +
mov [edi+64h] edx +
jmp loc_453073  +
***
mov eax [edi+74h] +
add ebx 1 +
mov dword ptr [edi+68h] 1 +
mov [edi+6Ch] ebx +
lea ebp [eax-1] +
mov [edi+74h] ebp +
jmp loc_453000  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_490520[ebx] +
jmp loc_4530E3  +
***
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_453306  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ecx +
mov [esp] edi +
call sub_456DB0  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_452F80  +
jmp loc_45324C  +
***
mov eax edi +
call sub_452A10  +
cmp eax 5 +
mov [edi+60h] eax +
ja loc_45334D  +
cmp dword ptr [edi+88h] 1 +
jz loc_453358  +
cmp eax 3 +
jz loc_453364  +
mov ebx [edi+6Ch] +
mov eax [edi+78h] +
jmp loc_453073  +
***
mov ebx [edi+6Ch] +
mov dword ptr [edi+60h] 2 +
jmp loc_453350  +
***
mov ebx [edi+6Ch] +
mov eax ebx +
sub eax [edi+70h] +
cmp eax 1000h +
jbe loc_453350  +
jmp loc_45335B  +
***
mov esi [edi+68h] +
test esi esi +
jnz loc_4533F8  +
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+54h] 4 +
mov [edi+16B4h] eax +
jz loc_45343C  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_4531EF  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_4533BE  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 0 +
call sub_456DB0  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_452F80  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+6Ch] +
xor ebx ebx +
mov edx [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [edx+eax-1] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov dword ptr [edi+68h] 0 +
jmp loc_45337C  +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45344C  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_456DB0  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_452F80  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 3Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [esp+60h] +
nop   +
lea esi [esi+0] +
cmp dword ptr [edi+74h] 105h +
jbe loc_453730  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
test edx edx +
mov [ecx+esi*2] dx +
mov [eax] bx +
jz loc_4534F8  +
mov eax [edi+2Ch] +
mov ecx ebx +
sub ecx edx +
sub eax 106h +
cmp ecx eax +
jbe loc_453780  +
mov eax [edi+60h] +
cmp eax 2 +
jbe loc_4536A0  +
mov edx [edi+16A0h] +
sub eax 3 +
mov ecx [edi+16A4h] +
sub bx [edi+70h] +
lea esi [edx+1] +
mov [ecx+edx*2] bx +
mov ecx [edi+1698h] +
sub ebx 1 +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_490320[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_453766  +
movzx ebx bx +
movzx eax ds:byte_490420[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+169Ch] +
mov esi [edi+60h] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
mov eax [edi+74h] +
sub eax esi +
cmp esi [edi+80h] +
mov [edi+74h] eax +
ja loc_453700  +
cmp eax 2 +
jbe loc_453700  +
mov ecx [edi+40h] +
lea ebx [esi-1] +
mov eax [edi+6Ch] +
mov edx [edi+54h] +
mov [edi+60h] ebx +
mov ebp [edi+48h] +
mov [esp+20h] ecx +
mov ecx [edi+34h] +
mov [esp+38h] eax +
mov [esp+30h] edx +
lea edx [eax+1] +
mov [esp+3Ch] esi +
mov [esp+24h] ecx +
mov ecx [edi+44h] +
mov [esp+18h] ebx +
mov [esp+28h] ecx +
mov ecx [edi+38h] +
mov [esp+2Ch] ecx +
mov ecx [edi+58h] +
mov [esp+34h] ecx +
jmp loc_4535E7  +
mov [esp+18h] ebx +
mov ebp eax +
mov eax [esp+2Ch] +
movzx ecx byte ptr [esp+34h] +
mov [edi+6Ch] edx +
mov esi [esp+28h] +
movzx eax byte ptr [eax+edx+2] +
shl ebp cl +
mov ecx [esp+20h] +
xor eax ebp +
mov ebp [esp+24h] +
and eax [esp+30h] +
lea esi [esi+eax*2] +
and ebp edx +
movzx ebx word ptr [esi] +
mov [edi+48h] eax +
mov [ecx+ebp*2] bx +
mov ebx [esp+18h] +
mov [esi] dx +
add edx 1 +
sub ebx 1 +
test ebx ebx +
mov [edi+60h] ebx +
jnz loc_4535E1  +
mov esi [esp+3Ch] +
mov eax [esp+38h] +
add eax esi +
mov [edi+6Ch] eax +
lea esi [esi+0] +
mov esi [esp+1Ch] +
test esi esi +
jz loc_4534A0  +
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_45365F  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_456DB0  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_452F80  +
mov eax [edi] +
mov ebx [eax+10h] +
test ebx ebx +
jnz loc_4534A0  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+38h] +
xor ebp ebp +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bp +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
sub dword ptr [edi+74h] 1 +
add dword ptr [edi+6Ch] 1 +
jmp loc_453640  +
***
mov eax [edi+6Ch] +
mov ecx [edi+38h] +
mov dword ptr [edi+60h] 0 +
add eax esi +
mov [edi+6Ch] eax +
movzx edx byte ptr [ecx+eax] +
mov [edi+48h] edx +
movzx eax byte ptr [ecx+eax+1] +
mov ecx [edi+58h] +
shl edx cl +
xor eax edx +
and eax [edi+54h] +
mov [edi+48h] eax +
jmp loc_453640  +
***
mov eax edi +
call sub_452C90  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_4534AD  +
mov edx [esp+64h] +
test edx edx +
jz loc_453691  +
test eax eax +
jz loc_453792  +
cmp eax 2 +
ja loc_4534AD  +
mov ebx [edi+6Ch] +
jmp loc_4534F8  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_490520[ebx] +
jmp loc_453558  +
***
mov eax edi +
call sub_452A10  +
mov ebx [edi+6Ch] +
mov [edi+60h] eax +
jmp loc_4534FB  +
***
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+64h] 4 +
mov [edi+16B4h] eax +
jz loc_453806  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_4537FE  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_4537CC  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_456DB0  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_452F80  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_453816  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_456DB0  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_452F80  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 4Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov edi [esp+10h+arg_4] +
mov eax [ebx+0Ch] +
lea esi [eax-5] +
mov eax 0FFFFh +
cmp esi 0FFFFh +
cmovnb esi eax +
jmp loc_4538EF  +
add edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov dword ptr [ebx+74h] 0 +
test edx edx +
mov [ebx+6Ch] edx +
lea ecx [esi+eax] +
jz loc_45388F  +
cmp edx ecx +
jb loc_4538DC  +
sub edx ecx +
mov [ebx+74h] edx +
xor edx edx +
mov [ebx+6Ch] ecx +
sub ecx eax +
test eax eax +
js loc_4538A4  +
add eax [ebx+38h] +
mov edx eax +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_456DB0  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_452F80  +
mov eax [ebx] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_4539C0  +
mov edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov ecx [ebx+2Ch] +
sub edx eax +
sub ecx 106h +
cmp edx ecx +
jnb loc_453980  +
mov edx [ebx+74h] +
cmp edx 1 +
ja loc_453874  +
mov eax ebx +
call sub_452C90  +
mov edx [ebx+74h] +
test edx edx +
jnz loc_453874  +
test edi edi +
jz loc_4539C0  +
cmp edi 4 +
mov dword ptr [ebx+16B4h] 0 +
jz loc_4539C9  +
mov ecx [ebx+6Ch] +
mov eax 1 +
mov edx [ebx+5Ch] +
cmp ecx edx +
jle loc_4539C2  +
sub ecx edx +
xor al al +
test edx edx +
js loc_453948  +
mov eax [ebx+38h] +
add eax edx +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_456DB0  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_452F80  +
mov eax [ebx] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4539C2  +
xor ecx ecx +
test eax eax +
js loc_45398B  +
add eax [ebx+38h] +
mov ecx eax +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_456DB0  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_452F80  +
mov eax [ebx] +
mov edx [eax+10h] +
test edx edx +
jnz loc_4538EF  +
lea esi [esi+0] +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+5Ch] +
xor ecx ecx +
mov eax [ebx+6Ch] +
sub eax edx +
test edx edx +
js loc_4539DC  +
mov ecx [ebx+38h] +
add ecx edx +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 1 +
mov [esp+10h+var_10] ebx +
call sub_456DB0  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_452F80  +
mov eax [ebx] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add eax 3 +
jmp loc_4539C2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ecx [esp+50h] +
mov ebx [esp+54h] +
mov esi [esp+58h] +
test ecx ecx +
jz loc_453C2E  +
mov eax [esp+50h] +
mov edi [eax+1Ch] +
test edi edi +
jz loc_453C2E  +
test ebx ebx +
jz loc_453C2E  +
mov eax [edi+18h] +
cmp eax 2 +
mov [esp+24h] eax +
jz loc_453C2E  +
cmp eax 1 +
jz loc_453BA3  +
mov eax [edi+74h] +
test eax eax +
jnz loc_453C2E  +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_453B90  +
mov eax [esp+50h] +
mov eax [eax+4] +
mov [esp+28h] eax +
mov eax [esp+50h] +
mov eax [eax] +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [eax+4] esi +
mov [eax] ebx +
mov eax edi +
call sub_452C90  +
mov eax [edi+74h] +
cmp eax 2 +
jbe loc_453B41  +
mov edx eax +
nop   +
lea esi [esi+0] +
mov esi [edi+58h] +
mov ebx [edi+6Ch] +
mov eax [edi+48h] +
mov ebp [edi+40h] +
mov [esp+10h] esi +
mov esi [edi+38h] +
lea ecx [ebx+edx-2] +
mov [esp+0Ch] ecx +
mov [esp+14h] esi +
mov esi [edi+54h] +
mov [esp+18h] esi +
mov esi [edi+34h] +
mov [esp+1Ch] esi +
mov esi [edi+44h] +
mov [esp+20h] esi +
jmp loc_453AE8  +
mov eax edx +
mov edx [esp+14h] +
movzx ecx byte ptr [esp+10h] +
movzx edx byte ptr [edx+ebx+2] +
shl eax cl +
mov ecx [esp+1Ch] +
xor edx eax +
mov eax [esp+20h] +
and edx [esp+18h] +
and ecx ebx +
lea eax [eax+edx*2] +
movzx esi word ptr [eax] +
mov [edi+48h] edx +
mov [ebp+ecx*2+0] si +
mov [eax] bx +
add ebx 1 +
cmp ebx [esp+0Ch] +
jnz loc_453AE6  +
mov [edi+6Ch] ebx +
mov eax edi +
mov dword ptr [edi+74h] 2 +
call sub_452C90  +
mov edx [edi+74h] +
cmp edx 2 +
ja loc_453AB0  +
mov eax edx +
mov edx [edi+6Ch] +
mov [edi+16B4h] eax +
mov esi [esp+2Ch] +
mov dword ptr [edi+74h] 0 +
mov dword ptr [edi+78h] 2 +
add edx eax +
mov eax [esp+50h] +
mov [edi+6Ch] edx +
mov [edi+5Ch] edx +
mov dword ptr [edi+60h] 2 +
mov dword ptr [edi+68h] 0 +
mov [eax] esi +
mov esi [esp+28h] +
mov [eax+4] esi +
mov eax [esp+24h] +
mov [edi+18h] eax +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+24h] +
test edx edx +
jz loc_453BE5  +
sub esi eax +
add ebx esi +
mov esi eax +
jmp loc_453A78  +
***
cmp dword ptr [edi+4] 2Ah +
jnz loc_453C2E  +
mov edx [edi+74h] +
test edx edx +
jnz loc_453C2E  +
mov eax [esp+50h] +
mov eax [eax+30h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_451700  +
mov ecx [esp+50h] +
mov [ecx+30h] eax +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_453B98  +
jmp loc_453A78  +
***
mov ecx [edi+4Ch] +
xor ebp ebp +
mov eax [edi+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bp +
mov [esp+8] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
mov eax [edi+2Ch] +
mov dword ptr [edi+6Ch] 0 +
mov dword ptr [edi+5Ch] 0 +
mov dword ptr [edi+16B4h] 0 +
jmp loc_453B98  +
***
mov eax 0FFFFFFFEh +
jmp loc_453B88  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_453D10  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_453D10  +
mov edx [ebx+20h] +
test edx edx +
jz loc_453D10  +
mov eax [ebx+24h] +
test eax eax +
jz loc_453D10  +
mov eax [esi+8] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+2Ch] 2 +
mov [esi+10h] eax +
mov eax [esi+18h] +
mov dword ptr [esi+14h] 0 +
test eax eax +
js loc_453CE1  +
jnz loc_453CE6  +
mov dword ptr [esi+4] 71h +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_451700  +
mov [ebx+30h] eax +
mov dword ptr [esi+28h] 0 +
mov [esp+14h+var_14] esi +
call sub_456AB0  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
neg eax  +
mov [esi+18h] eax +
cmp eax 2 +
mov dword ptr [esi+4] 2Ah +
jnz loc_453CAB  +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_451C30  +
jmp loc_453CC7  +
mov eax 0FFFFFFFEh +
jmp loc_453CDB  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+0Ch+arg_0] +
mov [esp+0Ch+var_C] ebx +
call sub_453C40  +
test eax eax +
mov esi eax +
jnz loc_453DE7  +
mov ebx [ebx+1Ch] +
mov eax [ebx+2Ch] +
mov ecx [ebx+4Ch] +
add eax eax +
mov [ebx+3Ch] eax +
mov eax [ebx+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov word ptr [eax+edx*2] 0 +
mov [esp+0Ch+var_4] ecx +
mov [esp+0Ch+var_8] 0 +
mov [esp+0Ch+var_C] eax +
call memset  +
mov eax [ebx+84h] +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+74h] 0 +
lea edx [eax+eax*2] +
shl edx 2 +
lea eax dword_490140[edx] +
movzx ecx word ptr [edx+490142h] +
movzx edx word ptr ds:dword_490140[edx] +
mov dword ptr [ebx+16B4h] 0 +
mov dword ptr [ebx+78h] 2 +
mov [ebx+80h] ecx +
mov [ebx+8Ch] edx +
movzx edx word ptr [eax+4] +
movzx eax word ptr [eax+6] +
mov dword ptr [ebx+60h] 2 +
mov dword ptr [ebx+68h] 0 +
mov [ebx+90h] edx +
mov [ebx+7Ch] eax +
mov dword ptr [ebx+48h] 0 +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_453E10  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_453E10  +
cmp dword ptr [eax+18h] 2 +
jnz loc_453E10  +
mov edx [esp+8] +
mov [eax+1Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_453E55  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_453E55  +
test ecx ecx +
jz loc_453E41  +
mov ebx [eax+14h] +
mov [ecx] ebx +
test edx edx +
jz loc_453E51  +
mov eax [eax+16BCh] +
mov [edx] eax +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov eax 0FFFFFFFEh +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [esp+34h] +
mov ebp [esp+38h] +
test eax eax +
jz loc_453EE4  +
mov esi [eax+1Ch] +
test esi esi +
jz loc_453EE4  +
mov eax [esi+10h] +
add eax 2 +
cmp [esi+16A4h] eax +
jb loc_453EDD  +
lea esi [esi+0] +
mov edx [esi+16BCh] +
mov ebx 10h +
mov eax 1 +
sub ebx edx +
cmp edi ebx +
cmovle ebx edi +
mov ecx ebx +
shl eax cl +
mov ecx edx +
sub eax 1 +
add edx ebx +
and eax ebp +
shl eax cl +
or [esi+16B8h] ax +
mov [esi+16BCh] edx +
mov [esp] esi +
call sub_456CB0  +
mov ecx ebx +
sar ebp cl +
sub edi ebx +
jnz loc_453E90  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFBh +
jmp loc_453ED5  +
***
mov eax 0FFFFFFFEh +
jmp loc_453ED5  +
***
mov eax [esp+4] +
test eax eax +
jz loc_453F27  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_453F27  +
mov edx [esp+8] +
mov [eax+8Ch] edx +
mov edx [esp+0Ch] +
mov [eax+80h] edx +
mov edx [esp+10h] +
mov [eax+90h] edx +
mov edx [esp+14h] +
mov [eax+7Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov ebx [esp+14h] +
lea esi [ecx+7] +
mov edx esi +
lea eax [ecx+3Fh] +
shr edx 3 +
shr eax 6 +
add eax edx +
add eax ecx +
test ebx ebx +
jz loc_454014  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_454014  +
mov edx [ebx+18h] +
cmp edx 1 +
jz loc_454003  +
cmp edx 2 +
jz loc_453F90  +
cmp edx 1 +
sbb edx edx +
not edx  +
and edx 6 +
cmp dword ptr [ebx+30h] 0Fh +
jz loc_453FE3  +
pop ebx  +
lea eax [edx+eax+5] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [ebx+1Ch] +
test edi edi +
jz loc_454020  +
mov ebp [edi+10h] +
test ebp ebp +
jz loc_454030  +
mov edx [edi+14h] +
add edx 14h +
mov ebp [edi+1Ch] +
test ebp ebp +
jz loc_453FBF  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_453FB5  +
mov ebp [edi+24h] +
test ebp ebp +
jz loc_453FD2  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_453FC8  +
mov edi [edi+2Ch] +
lea ebp [edx+2] +
test edi edi +
cmovnz edx ebp +
cmp dword ptr [ebx+30h] 0Fh +
jnz loc_453F82  +
cmp dword ptr [ebx+50h] 0Fh +
jnz loc_453F82  +
mov eax ecx +
mov ebx ecx +
shr eax 0Ch +
add eax esi +
shr ebx 0Eh +
add eax ebx +
shr ecx 19h +
add eax ecx +
pop ebx  +
add eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [ebx+6Ch] 1 +
sbb edx edx +
and edx 0FFFFFFFCh +
add edx 0Ah +
jmp loc_453F7C  +
***
pop ebx  +
add eax 0Bh +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 12h +
jmp loc_453F7C  +
***
mov edx 12h +
jmp loc_453FAC  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
test edi edi +
jz loc_454C01  +
mov eax [esp+2Ch+arg_0] +
mov ebp [eax+1Ch] +
test ebp ebp +
jz loc_454C01  +
cmp [esp+2Ch+arg_4] 5 +
ja loc_454C01  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_45420B  +
mov ebx [eax] +
test ebx ebx +
jz loc_454A98  +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_454200  +
mov edi [esp+2Ch+arg_0] +
mov edx [edi+10h] +
test edx edx +
jz loc_454C64  +
mov edi [esp+2Ch+arg_0] +
cmp eax 2Ah +
mov [ebp+0] edi +
mov edi [ebp+28h] +
mov [esp+2Ch+var_18] edi +
mov edi [esp+2Ch+arg_4] +
mov [ebp+28h] edi +
jz loc_454361  +
cmp eax 45h +
jz loc_454469  +
cmp eax 49h +
mov edx [ebp+14h] +
jz loc_454520  +
cmp eax 5Bh +
jz loc_4547CB  +
cmp eax 67h +
jz loc_454B4B  +
test edx edx +
mov eax [esp+2Ch+arg_0] +
jnz loc_454221  +
mov edx [eax+4] +
test edx edx +
jnz loc_454710  +
mov eax [esp+2Ch+arg_4] +
cmp eax 5 +
lea edx [eax+eax] +
setz al  +
movzx eax al +
lea eax [eax+eax*8] +
sub edx eax +
mov eax [esp+2Ch+var_18] +
cmp eax 5 +
lea ecx [eax+eax] +
setnl al  +
movzx eax al +
lea eax [eax+eax*8] +
sub ecx eax +
cmp edx ecx +
jg loc_454134  +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_454726  +
mov eax [ebp+4] +
mov ecx [ebp+74h] +
test ecx ecx +
jnz loc_454252  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_4542A9  +
cmp eax 29Ah +
jnz loc_454252  +
lea esi [esi+0] +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_4542A9  +
mov eax [ebp+18h] +
test eax eax +
jle loc_454F60  +
cmp eax 2 +
jz loc_454CB0  +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea esi [eax+1] +
shr edx 18h +
mov [ebp+14h] esi +
shr ecx 10h +
mov [ebx+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov ebx edx +
shr ebx 8 +
mov [ecx+eax] bl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov eax [esp+2Ch+arg_0] +
call sub_452F80  +
mov eax [ebp+18h] +
test eax eax +
jle loc_4541EC  +
neg eax  +
mov [ebp+18h] eax +
mov edx [ebp+14h] +
xor eax eax +
test edx edx +
setz al  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+2Ch+arg_4] 4 +
jz loc_454090  +
mov eax ds:off_48DF70 +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFEh +
jmp loc_4542AB  +
call sub_452F80  +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_454355  +
mov eax [esp+2Ch+arg_0] +
mov edx [eax+4] +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_45471E  +
test edx edx +
jz loc_454137  +
mov eax [ebp+88h] +
cmp eax 2 +
jz loc_45456C  +
cmp eax 3 +
jz loc_4547D3  +
mov eax [ebp+84h] +
mov edi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebp +
lea eax [eax+eax*2] +
mov [esp+2Ch+var_28] edi +
call ds:off_490148[eax*4]  +
mov edx eax +
and edx 0FFFFFFFDh +
lea ecx [eax-2] +
cmp ecx 1 +
jbe loc_454790  +
test edx edx +
jnz loc_4542B3  +
mov eax [esp+2Ch+arg_0] +
mov edi [eax+10h] +
test edi edi +
jz loc_454355  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_454160  +
cmp [esp+2Ch+arg_4] 1 +
jz loc_454F73  +
cmp [esp+2Ch+arg_4] 5 +
jz loc_45433D  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_456B90  +
cmp [esp+2Ch+arg_4] 3 +
jnz loc_45433D  +
mov edi [ebp+4Ch] +
xor ebx ebx +
mov eax [ebp+44h] +
lea edx [edi+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bx +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov esi [ebp+74h] +
test esi esi +
jnz loc_45433D  +
mov dword ptr [ebp+6Ch] 0 +
mov dword ptr [ebp+5Ch] 0 +
mov dword ptr [ebp+16B4h] 0 +
mov eax [esp+2Ch+arg_0] +
call sub_452F80  +
mov eax [esp+2Ch+arg_0] +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_454160  +
mov dword ptr [ebp+28h] 0FFFFFFFFh +
jmp loc_4542A9  +
cmp dword ptr [ebp+18h] 2 +
jz loc_454D53  +
mov eax [ebp+30h] +
shl eax 0Ch +
lea ecx [eax-7800h] +
xor eax eax +
cmp dword ptr [ebp+88h] 1 +
jle loc_4546E3  +
mov edx [ebp+6Ch] +
or ecx eax +
mov eax ecx +
mov ebx [ebp+8] +
or eax 20h +
mov dword ptr [ebp+4] 71h +
test edx edx +
mov edx 8421085h +
cmovnz ecx eax +
mov eax ecx +
mul  edx +
mov eax [ebp+14h] +
sub ecx edx +
shr ecx 1 +
add ecx edx +
shr ecx 4 +
mov edx ecx +
shl edx 5 +
sub edx ecx +
add edx 1Fh +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov ecx [ebp+6Ch] +
test ecx ecx +
jz loc_45443A  +
mov eax [esp+2Ch+arg_0] +
mov esi [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea ebx [eax+1] +
shr edx 18h +
mov [ebp+14h] ebx +
shr ecx 10h +
mov [esi+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_451700  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
mov eax [ebp+4] +
cmp eax 45h +
jnz loc_4540C6  +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov edi [ecx+10h] +
test edi edi +
jz loc_454C55  +
mov edx [ebp+14h] +
movzx ebx word ptr [ecx+14h] +
cmp ebx [ebp+20h] +
mov edi edx +
jbe loc_4544F6  +
mov eax edx +
mov esi ecx +
jmp loc_4544BF  +
lea ebx [eax+1] +
mov esi [ebp+8] +
mov [ebp+14h] ebx +
mov ebx [ecx+10h] +
mov ecx [ebp+20h] +
movzx ecx byte ptr [ebx+ecx] +
mov [esi+eax] cl +
mov ecx [ebp+1Ch] +
mov eax [ebp+20h] +
movzx ebx word ptr [ecx+14h] +
mov esi ecx +
add eax 1 +
mov [ebp+20h] eax +
cmp ebx eax +
jbe loc_4544F1  +
mov eax [ebp+14h] +
cmp [ebp+0Ch] eax +
jnz loc_454490  +
mov esi [esi+2Ch] +
test esi esi +
jz loc_4544D3  +
cmp eax edx +
ja loc_454A70  +
mov eax [esp+2Ch+arg_0] +
call sub_452F80  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov edi edx +
jz loc_454C4D  +
mov eax edx +
mov ecx [ebp+1Ch] +
jmp loc_454490  +
mov edx [ebp+14h] +
mov eax ecx +
mov ebx [eax+2Ch] +
test ebx ebx +
jz loc_454505  +
cmp edi edx +
jb loc_454C0B  +
mov edi [eax+14h] +
cmp [ebp+20h] edi +
jz loc_454668  +
mov eax [ebp+4] +
cmp eax 49h +
jnz loc_4540D2  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
jmp loc_454676  +
mov eax [ebp+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_454538  +
add eax [ebp+38h] +
mov ecx eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_456DB0  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_452F80  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_45429A  +
mov eax [ebp+74h] +
jmp loc_4545D6  +
mov eax [ebp+6Ch] +
xor ebx ebx +
mov edx [ebp+38h] +
mov dword ptr [ebp+60h] 0 +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
mov edi [ebp+6Ch] +
lea ecx [eax-1] +
mov eax [ebp+74h] +
lea edx [edi+1] +
mov [ebp+6Ch] edx +
sub eax 1 +
cmp [ebp+16A0h] ecx +
mov [ebp+74h] eax +
jz loc_454528  +
test eax eax +
jnz loc_454571  +
mov eax ebp +
call sub_452C90  +
mov edi [ebp+74h] +
test edi edi +
jnz loc_454571  +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_45429A  +
cmp [esp+2Ch+arg_4] 4 +
mov dword ptr [ebp+16B4h] 0 +
jz loc_45473C  +
mov eax [ebp+16A0h] +
test eax eax +
jz loc_4542BC  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_45462A  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_456DB0  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_452F80  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
lea ecx [eax-2] +
mov edx eax +
jmp loc_45428D  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 49h +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_454C82  +
mov ebx edx +
mov ecx edx +
jmp loc_4546B1  +
mov esi [eax+1Ch] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_4547A0  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_454687  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_4546C5  +
cmp edx ecx +
jb loc_454A48  +
mov eax [esp+2Ch+arg_0] +
call sub_452F80  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_454C39  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_454687  +
mov edx [ebp+84h] +
cmp edx 1 +
jle loc_454386  +
cmp edx 5 +
mov al 40h +
jle loc_454386  +
cmp edx 6 +
mov al 80h +
mov edx 0C0h +
cmovnz eax edx +
jmp loc_454386  +
mov eax [ebp+4] +
cmp eax 29Ah +
jnz loc_454252  +
test edx edx +
jz loc_454137  +
mov eax ds:off_48DF7C +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_4542AB  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_45474F  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_456DB0  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_452F80  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
cmp ecx 1 +
sbb edx edx +
add edx 1 +
cmp ecx 1 +
sbb eax eax +
add eax 3 +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+4] 29Ah +
jmp loc_454296  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_4547B7  +
cmp ebx edx +
jb loc_454EF6  +
test esi esi +
jz loc_454AA8  +
mov eax [ebp+4] +
cmp eax 5Bh +
jnz loc_4540DB  +
mov eax [ebp+1Ch] +
jmp loc_454AB9  +
movzx eax ds:byte_490420 +
lea edi ds:0[eax*4] +
jmp loc_45485A  +
mov dword ptr [ebp+60h] 0 +
mov esi [ebp+6Ch] +
mov edx [ebp+38h] +
test esi esi +
jnz loc_4548B0  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_18] +
xor ebx ebx +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub dword ptr [ebp+74h] 1 +
add dword ptr [ebp+6Ch] 1 +
test eax eax +
jnz loc_4549FC  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_4547E3  +
mov eax ebp +
call sub_452C90  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_4547E3  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_45429A  +
test eax eax +
jz loc_4545F4  +
cmp eax 2 +
mov dword ptr [ebp+60h] 0 +
ja loc_4547EA  +
mov eax [ebp+6Ch] +
mov edx [ebp+38h] +
mov [esp+2Ch+var_18] eax +
jmp loc_454800  +
lea ebx [edx+esi-1] +
movzx ecx byte ptr [ebx] +
mov [esp+2Ch+var_18] esi +
mov [esp+2Ch+var_14] ecx +
movzx ecx byte ptr [ebx] +
cmp [ebx+1] cl +
jnz loc_454800  +
movzx ecx byte ptr [ebx+2] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_454800  +
movzx ecx byte ptr [ebx+3] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_454800  +
lea ecx [edx+esi+102h] +
add ebx 3 +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] ecx +
jmp loc_454960  +
movzx ecx byte ptr [ebx+2] +
cmp eax ecx +
jnz loc_454FBA  +
movzx ecx byte ptr [ebx+3] +
cmp eax ecx +
jnz loc_454FEA  +
movzx ecx byte ptr [ebx+4] +
cmp eax ecx +
jnz loc_454FDE  +
movzx ecx byte ptr [ebx+5] +
cmp eax ecx +
jnz loc_454FD2  +
movzx ecx byte ptr [ebx+6] +
cmp eax ecx +
jnz loc_454FC6  +
movzx ecx byte ptr [ebx+7] +
cmp eax ecx +
jnz loc_454FAE  +
add ebx 8 +
movzx ecx byte ptr [ebx] +
cmp eax ecx +
jnz loc_454F6A  +
cmp ebx [esp+2Ch+var_18] +
jnb loc_454F6A  +
movzx ecx byte ptr [ebx+1] +
cmp eax ecx +
jz loc_454900  +
mov eax [esp+2Ch+var_10] +
add ebx 1 +
sub ebx [esp+2Ch+var_18] +
lea ecx [ebx+102h] +
cmp ecx eax +
mov [ebp+60h] ecx +
jbe loc_454F4C  +
mov [ebp+60h] eax +
mov ecx eax +
mov eax [ebp+16A0h] +
lea edx [ecx-3] +
mov esi 1 +
mov ecx [ebp+16A4h] +
lea ebx [eax+1] +
mov [ecx+eax*2] si +
mov ecx [ebp+1698h] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
movzx edx dl +
movzx eax ds:byte_490320[edx] +
add word ptr [ebp+eax*4+498h] 1 +
add word ptr [ebp+edi+988h] 1 +
mov eax [ebp+169Ch] +
mov edx [ebp+60h] +
mov dword ptr [ebp+60h] 0 +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub [ebp+74h] edx +
add [ebp+6Ch] edx +
test eax eax +
jz loc_45485A  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_454A0F  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_456DB0  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_452F80  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
jnz loc_45485A  +
jmp loc_45429A  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_4546C5  +
mov edi [esp+2Ch+arg_0] +
sub eax edx +
mov ecx [edi+30h] +
mov [esp+2Ch+var_24] eax +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edx +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_4544D3  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_454082  +
jmp loc_45420B  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 5Bh +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_454C76  +
mov ebx edx +
mov ecx edx +
jmp loc_454AF6  +
mov esi [eax+24h] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_454B24  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_454AD0  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_454B06  +
cmp edx ecx +
jb loc_454B61  +
mov eax [esp+2Ch+arg_0] +
call sub_452F80  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_454C43  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_454AD0  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_454B3B  +
cmp ebx edx +
jb loc_454F21  +
test esi esi +
jz loc_454B86  +
mov eax [ebp+4] +
cmp eax 67h +
jnz loc_4540E4  +
mov eax [ebp+1Ch] +
mov esi [eax+2Ch] +
test esi esi +
jnz loc_454B97  +
mov dword ptr [ebp+4] 71h +
jmp loc_4540E4  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_454B06  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+4] 67h +
mov esi [eax+2Ch] +
test esi esi +
jz loc_454B55  +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_454C8E  +
lea eax [edx+1] +
mov ecx [ebp+8] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
mov [ecx+edx] al +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov dword ptr [ebp+4] 71h +
jmp loc_4540E4  +
mov eax 0FFFFFFFEh +
jmp loc_4542AB  +
mov eax [esp+2Ch+arg_0] +
sub edx edi +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add edi [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov eax [ebp+1Ch] +
jmp loc_454505  +
mov esi 1 +
jmp loc_4547A5  +
mov esi 1 +
jmp loc_454B29  +
mov eax [ebp+1Ch] +
jmp loc_4544F6  +
mov dword ptr [ebp+4] 49h +
mov edx [ebp+14h] +
jmp loc_454676  +
mov eax ds:off_48DF7C +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_4542AB  +
mov dword ptr [ebp+4] 67h +
jmp loc_454B90  +
mov dword ptr [ebp+4] 5Bh +
jmp loc_454AB9  +
mov eax [esp+2Ch+arg_0] +
call sub_452F80  +
mov edx [ebp+14h] +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_4540E4  +
jmp loc_454BA3  +
mov eax [ebp+14h] +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+30h] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+32h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+33h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+8] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+8] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+0Ah] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+0Bh] +
mov [edx+eax] cl +
jmp loc_4541D7  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+8] +
mov [edi+30h] eax +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 1Fh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8Bh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8 +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_454FF6  +
mov edi [eax] +
mov ebx [ebp+14h] +
mov esi [ebp+8] +
test edi edi +
setnz cl  +
cmp dword ptr [eax+2Ch] 1 +
lea edx [ebx+1] +
mov [ebp+14h] edx +
sbb edx edx +
not edx  +
and edx 2 +
add ecx edx +
cmp dword ptr [eax+10h] 1 +
sbb edx edx +
not edx  +
and edx 4 +
add ecx edx +
cmp dword ptr [eax+1Ch] 1 +
sbb edx edx +
not edx  +
and edx 8 +
add edx ecx +
cmp dword ptr [eax+24h] 1 +
sbb eax eax +
not eax  +
and eax 10h +
add eax edx +
mov [esi+ebx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+4] +
mov [edx+eax] cl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+4] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx word ptr [ecx+6] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx byte ptr [ecx+7] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_454E84  +
cmp dword ptr [ebp+88h] 1 +
jle loc_455093  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+0Ch] +
mov [edx+eax] cl +
mov ecx [ebp+1Ch] +
mov esi [ecx+10h] +
test esi esi +
jz loc_4550A3  +
mov eax [ebp+14h] +
mov ebx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ecx+14h] +
mov [ebx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+14h] +
shr eax 8 +
mov [ecx+edx] al +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov ebx [ecx+2Ch] +
test ebx ebx +
jnz loc_454F80  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 45h +
jmp loc_45446E  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_4547B7  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_454B3B  +
cmp ecx 2 +
ja loc_454989  +
mov [esp+2Ch+var_18] esi +
jmp loc_454800  +
mov eax 1 +
jmp loc_4542AB  +
mov eax [esp+2Ch+var_10] +
jmp loc_45496F  +
mov [esp+2Ch+var_2C] ebp +
call sub_456CC0  +
jmp loc_45433D  +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+14h] +
mov edx [ebp+8] +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_451C30  +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+1Ch] +
mov [edi+30h] eax +
mov eax ecx +
jmp loc_454EE3  +
mov eax [esp+2Ch+var_10] +
add ebx 7 +
jmp loc_45496F  +
mov eax [esp+2Ch+var_10] +
add ebx 2 +
jmp loc_45496F  +
mov eax [esp+2Ch+var_10] +
add ebx 6 +
jmp loc_45496F  +
mov eax [esp+2Ch+var_10] +
add ebx 5 +
jmp loc_45496F  +
mov eax [esp+2Ch+var_10] +
add ebx 4 +
jmp loc_45496F  +
mov eax [esp+2Ch+var_10] +
add ebx 3 +
jmp loc_45496F  +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_455072  +
cmp dword ptr [ebp+88h] 1 +
jle loc_4550AA  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0Bh +
mov edx [ebp+14h] +
mov dword ptr [ebp+4] 71h +
jmp loc_4540E4  +
cmp edx 1 +
jle loc_454E7F  +
xor eax eax +
jmp loc_454E84  +
mov eax ecx +
jmp loc_454ED8  +
cmp edx 1 +
lea esi [esi+0] +
jle loc_45506D  +
xor eax eax +
jmp loc_455072  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
test edx edx +
jz loc_4551B0  +
mov ebx [edx+1Ch] +
test ebx ebx +
jz loc_4551B0  +
cmp esi 0FFFFFFFFh +
jz loc_455171  +
cmp esi 9 +
ja loc_4551B0  +
cmp edi 4 +
ja loc_4551B0  +
mov ecx [ebx+84h] +
cmp [ebx+88h] edi +
lea eax [ecx+ecx*2] +
mov eax ds:off_490148[eax*4] +
jz loc_455180  +
mov ebp [edx+8] +
xor eax eax +
test ebp ebp +
jnz loc_455190  +
cmp esi ecx +
jz loc_455163  +
lea ecx [esi+esi*2] +
shl ecx 2 +
lea edx dword_490140[ecx] +
mov [ebx+84h] esi +
movzx esi word ptr [ecx+490142h] +
movzx ecx word ptr ds:dword_490140[ecx] +
mov [ebx+80h] esi +
mov [ebx+8Ch] ecx +
movzx ecx word ptr [edx+4] +
movzx edx word ptr [edx+6] +
mov [ebx+90h] ecx +
mov [ebx+7Ch] edx +
mov [ebx+88h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi 6 +
jmp loc_4550F8  +
***
lea ebp [esi+esi*2] +
cmp ds:off_490148[ebp*4] eax +
jnz loc_455119  +
xor eax eax +
jmp loc_455122  +
***
mov dword ptr [esp+4] 5 +
mov [esp] edx +
call sub_454040  +
mov ecx [ebx+84h] +
jmp loc_455122  +
***
mov eax 0FFFFFFFEh +
jmp loc_455169  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_4552AD  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_4552AD  +
mov esi [eax+4] +
cmp esi 2Ah +
jnz loc_455274  +
mov edx [eax+8] +
test edx edx +
jz loc_455201  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+44h] +
test edx edx +
jz loc_45521A  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+40h] +
test edx edx +
jz loc_455233  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_45524C  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov edx [ebx+24h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ecx +
call edx  +
xor eax eax +
cmp esi 71h +
setnz al  +
mov dword ptr [ebx+1Ch] 0 +
lea eax [eax+eax*2-3] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 45h +
jz loc_4551E8  +
cmp esi 49h +
jz loc_4551E8  +
cmp esi 5Bh +
jz loc_4551E8  +
cmp esi 67h +
jz loc_4551E8  +
cmp esi 71h +
jz loc_4551E8  +
cmp esi 29Ah +
jz loc_4551E8  +
mov eax 0FFFFFFFEh +
jmp loc_45526E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_14] +
mov ebp [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_1C] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
test eax eax +
jz loc_455530  +
cmp byte ptr [eax] 31h +
jnz loc_455530  +
cmp edx 38h +
jnz loc_455530  +
test esi esi +
jz loc_455540  +
mov eax [esi+20h] +
mov dword ptr [esi+18h] 0 +
test eax eax +
jz loc_455560  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_455550  +
cmp edi 0FFFFFFFFh +
mov eax 6 +
cmovz edi eax +
test ebp ebp +
js loc_455520  +
cmp ebp 0Fh +
mov edx 1 +
jg loc_455514  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] edx +
sub eax 1 +
cmp eax 8 +
ja loc_455540  +
cmp ecx 8 +
jnz loc_455540  +
lea eax [ebp-8] +
cmp eax 7 +
ja loc_455540  +
cmp edi 9 +
ja loc_455540  +
cmp [esp+2Ch+var_14] 4 +
ja loc_455540  +
mov ecx [esi+28h] +
cmp ebp 8 +
mov eax 9 +
cmovz ebp eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_24] 16C4h +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ecx +
call eax  +
test eax eax +
mov ebx eax +
jz loc_455591  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov [esi+1Ch] eax +
mov [eax+30h] ebp +
mov [eax] esi +
mov [eax+18h] edx +
mov edx 1 +
shl edx cl +
mov dword ptr [eax+1Ch] 0 +
lea eax [edx-1] +
mov ebp edx +
mov [ebx+34h] eax +
mov eax [esp+2Ch+var_18] +
mov [ebx+2Ch] edx +
mov edx 1 +
lea ecx [eax+7] +
add eax 9 +
shl edx cl +
mov [ebx+50h] ecx +
mov ecx edx +
mov [ebx+4Ch] edx +
mov edx 0AAAAAAABh +
sub ecx 1 +
mul  edx +
mov eax [esi+20h] +
mov [ebx+54h] ecx +
shr edx 1 +
mov [ebx+58h] edx +
mov edx [esi+28h] +
mov [esp+2Ch+var_24] 2 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+2Ch] +
mov edx [esi+28h] +
mov [ebx+38h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov ecx [ebx+4Ch] +
mov edx [esi+28h] +
mov [ebx+40h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov edx [esi+28h] +
mov dword ptr [ebx+16C0h] 0 +
mov [ebx+44h] eax +
mov eax [esp+2Ch+var_18] +
lea ecx [eax+6] +
mov eax 1 +
shl eax cl +
mov [ebx+169Ch] eax +
mov ecx eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 4 +
call eax  +
mov edx [ebx+169Ch] +
lea ecx ds:0[edx*4] +
mov [ebx+0Ch] ecx +
mov ecx [ebx+38h] +
mov [ebx+8] eax +
test ecx ecx +
jz loc_455573  +
mov ebp [ebx+40h] +
test ebp ebp +
jz loc_455573  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_455573  +
test eax eax +
jz loc_455573  +
mov ecx edx +
and ecx 0FFFFFFFEh +
lea edx [edx+edx*2] +
add ecx eax +
add eax edx +
mov [ebx+1698h] eax +
mov eax [esp+2Ch+var_14] +
mov [ebx+16A4h] ecx +
mov [ebx+84h] edi +
mov byte ptr [ebx+24h] 8 +
mov [ebx+88h] eax +
mov [esp+2Ch+arg_0] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_453D20  +
sub ebp 10h +
mov dl 2 +
jmp loc_45534F  +
neg ebp  +
xor edx edx +
jmp loc_45534F  +
mov eax 0FFFFFFFAh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi+24h] offset loc_451650 +
jmp loc_45532E  +
mov dword ptr [esi+20h] offset loc_451630 +
mov dword ptr [esi+28h] 0 +
jmp loc_455323  +
mov eax ds:off_48DF78 +
mov dword ptr [ebx+4] 29Ah +
mov [esi+18h] eax +
mov [esp+2Ch+var_2C] esi +
call sub_4551C0  +
mov eax 0FFFFFFFCh +
jmp loc_455535  +
mov eax 0FFFFFFFCh +
jmp loc_455535  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 8 +
mov [esp+2Ch+var_20] 0Fh +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 8 +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4552C0  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
test eax eax +
jz loc_455885  +
test ebp ebp +
jz loc_455885  +
mov edx [eax+1Ch] +
test edx edx +
mov [esp+0Ch] edx +
jz loc_455885  +
mov ecx [eax] +
mov [ebp+0] ecx +
mov ecx [eax+4] +
mov [ebp+4] ecx +
mov ecx [eax+8] +
mov [ebp+8] ecx +
mov ecx [eax+0Ch] +
mov [ebp+0Ch] ecx +
mov ecx [eax+10h] +
mov [ebp+10h] ecx +
mov ecx [eax+14h] +
mov [ebp+14h] ecx +
mov ecx [eax+18h] +
mov [ebp+18h] ecx +
mov ecx [eax+1Ch] +
mov [ebp+1Ch] ecx +
mov ecx [eax+20h] +
mov [ebp+20h] ecx +
mov ebx [eax+24h] +
mov [ebp+24h] ebx +
mov ebx [eax+28h] +
mov [ebp+28h] ebx +
mov esi [eax+2Ch] +
mov [ebp+2Ch] esi +
mov esi [eax+30h] +
mov [ebp+30h] esi +
mov eax [eax+34h] +
mov [ebp+34h] eax +
mov [esp] ebx +
mov dword ptr [esp+8] 16C4h +
mov dword ptr [esp+4] 1 +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_4558A0  +
test bl 1 +
mov edi eax +
mov esi [esp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 16C4h +
jnz loc_455870  +
test edi 2 +
jnz loc_455855  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_455840  +
test al 1 +
jnz loc_455833  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov eax [ebp+20h] +
mov [ebx] ebp +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov [ebx+38h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+4Ch] +
mov ecx [ebp+28h] +
mov [ebx+40h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+169Ch] +
mov ecx [ebp+28h] +
mov [ebx+44h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov dword ptr [esp+8] 4 +
mov [esp] ecx +
call eax  +
mov esi eax +
mov [ebx+8] eax +
mov eax [ebx+38h] +
test eax eax +
jz loc_455890  +
mov ecx [ebx+40h] +
test ecx ecx +
jz loc_455890  +
mov edx [ebx+44h] +
test edx edx +
jz loc_455890  +
test esi esi +
jz loc_455890  +
mov edi [esp+0Ch] +
mov ecx [ebx+2Ch] +
mov edx [edi+38h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
mov ecx [ebx+2Ch] +
mov edx [edi+40h] +
mov eax [ebx+40h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+4Ch] +
mov edx [edi+44h] +
mov eax [ebx+44h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+0Ch] +
mov edx [edi+8] +
mov eax [ebx+8] +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [edi+10h] +
mov edx [ebx+8] +
add eax edx +
sub eax [edi+8] +
mov [ebx+10h] eax +
mov eax [ebx+169Ch] +
mov ecx eax +
lea eax [eax+eax*2] +
and ecx 0FFFFFFFEh +
add edx eax +
add esi ecx +
lea eax [ebx+94h] +
mov [ebx+0B18h] eax +
lea eax [ebx+988h] +
mov [ebx+0B24h] eax +
lea eax [ebx+0A7Ch] +
mov [ebx+0B30h] eax +
xor eax eax +
mov [ebx+16A4h] esi +
mov [ebx+1698h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
jmp loc_4556CA  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_4556CA  +
jmp loc_455833  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_4556B3  +
***
movzx eax byte ptr [esi] +
lea edi [ebx+1] +
lea esi [esi+1] +
mov [ebx] al +
mov eax 16C3h +
jmp loc_4556A7  +
***
mov eax 0FFFFFFFEh +
jmp loc_45582B  +
***
mov [esp] ebp +
call sub_4551C0  +
mov eax 0FFFFFFFCh +
jmp loc_45582B  +
***
mov eax 0FFFFFFFCh +
jmp loc_45582B  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 18h +
mov edx [eax+1450h] +
lea ebp [ecx+2D4h] +
add ecx ecx +
mov ebx [eax+ebp*4+0Ch] +
cmp ecx edx +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_10] ebx +
jg loc_455950  +
lea edx [edi+ebx*4] +
mov [esp+20h+var_18] edx +
jmp loc_45590A  +
mov edx [eax+ecx*4+0B5Ch] +
mov ebx ecx +
movzx esi word ptr [edi+edx*4] +
mov ecx [esp+20h+var_18] +
cmp [ecx] si +
jb loc_455950  +
jz loc_455960  +
lea ecx [ebx+ebx] +
cmp ecx [esp+20h+var_20] +
mov [eax+ebp*4+0Ch] edx +
lea ebp [ebx+2D4h] +
jg loc_455950  +
cmp ecx [esp+20h+var_20] +
jge loc_4558E0  +
mov esi [eax+ecx*4+0B5Ch] +
lea ebx [ecx+1] +
mov edx [eax+ecx*4+0B60h] +
mov [esp+20h+var_14] esi +
movzx esi word ptr [edi+esi*4] +
mov word ptr [esp+20h+var_1C] si +
movzx esi word ptr [edi+edx*4] +
cmp si word ptr [esp+20h+var_1C] +
jb loc_4558ED  +
jz loc_455985  +
mov ebx ecx +
mov ecx [esp+20h+var_18] +
movzx esi word ptr [esp+20h+var_1C] +
mov edx [esp+20h+var_14] +
cmp [ecx] si +
jnb loc_4558F6  +
nop   +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+20h+var_10] +
movzx ecx byte ptr [eax+edx+1458h] +
cmp [eax+esi+1458h] cl +
ja loc_4558F8  +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+20h+var_C] ebx +
mov ebx [esp+20h+var_14] +
mov [esp+20h+var_1C] ecx +
movzx ecx byte ptr [eax+edx+1458h] +
cmp cl [eax+ebx+1458h] +
mov ecx [esp+20h+var_1C] +
cmova edx ebx +
mov ebx [esp+20h+var_C] +
cmova ebx ecx +
jmp loc_4558ED  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [edx+8] +
mov ecx [edx] +
mov [esp+4Ch+var_44] edx +
mov ebp [eax+0Ch] +
mov edi [eax] +
mov [esp+4Ch+var_28] ecx +
mov dword ptr [ebx+1450h] 0 +
test ebp ebp +
mov dword ptr [ebx+1454h] 23Dh +
jle loc_455E2C  +
mov edx ecx +
xor eax eax +
mov ecx 0FFFFFFFFh +
jmp loc_455A2C  +
mov ecx [ebx+1450h] +
add edx 4 +
lea esi [ecx+1] +
mov [ebx+1450h] esi +
mov [ebx+ecx*4+0B60h] eax +
mov ecx eax +
mov byte ptr [ebx+eax+1458h] 0 +
add eax 1 +
cmp eax ebp +
jz loc_455A42  +
cmp word ptr [edx] 0 +
jnz loc_455A02  +
xor esi esi +
add eax 1 +
mov [edx+2] si +
add edx 4 +
cmp eax ebp +
jnz loc_455A2C  +
mov esi ecx +
mov ecx [ebx+1450h] +
mov [esp+4Ch+var_4C] ebp +
mov ebp [esp+4Ch+var_28] +
jmp loc_455A88  +
mov [ebx+ecx*4+0B5Ch] eax +
mov ecx 1 +
mov [ebp+edx+0] cx +
mov byte ptr [ebx+eax+1458h] 0 +
sub dword ptr [ebx+16A8h] 1 +
test edi edi +
jz loc_455A82  +
movzx eax word ptr [edi+edx+2] +
sub [ebx+16ACh] eax +
mov ecx [ebx+1450h] +
cmp ecx 1 +
jg loc_455AAD  +
add ecx 1 +
xor edx edx +
xor eax eax +
cmp esi 1 +
mov [ebx+1450h] ecx +
jg loc_455A53  +
add esi 1 +
lea edx ds:0[esi*4] +
mov eax esi +
jmp loc_455A53  +
mov edi [esp+4Ch+var_44] +
sar ecx 1 +
mov ebp [esp+4Ch+var_4C] +
mov [esp+4Ch+var_24] esi +
mov [edi+4] esi +
mov edi [esp+4Ch+var_28] +
mov esi ecx +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_4558B0  +
sub esi 1 +
jnz loc_455AC3  +
mov eax [ebx+1450h] +
mov edi [esp+4Ch+var_28] +
jmp loc_455AE2  +
mov ebp esi +
lea edx [eax-1] +
mov eax [ebx+eax*4+0B5Ch] +
mov ecx 1 +
mov esi [ebx+0B60h] +
mov [ebx+1450h] edx +
mov edx edi +
mov [ebx+0B60h] eax +
mov eax ebx +
call sub_4558B0  +
mov edx [ebx+1454h] +
mov eax [ebx+0B60h] +
lea ecx [edx-2] +
mov [ebx+edx*4+0B58h] esi +
mov [ebx+1454h] ecx +
lea ecx [edi+esi*4] +
mov [ebx+edx*4+0B54h] eax +
mov edx ecx +
lea ecx [edi+eax*4] +
mov [esp+4Ch+var_48] ecx +
movzx ecx word ptr [ecx] +
add cx [edx] +
mov [edi+ebp*4] cx +
movzx ecx byte ptr [ebx+esi+1458h] +
mov byte ptr [esp+4Ch+var_4C] cl +
movzx ecx byte ptr [ebx+eax+1458h] +
movzx eax byte ptr [esp+4Ch+var_4C] +
lea esi [ecx+1] +
add eax 1 +
cmp byte ptr [esp+4Ch+var_4C] cl +
mov ecx 1 +
cmovb eax esi +
mov [ebx+ebp+1458h] al +
mov eax [esp+4Ch+var_48] +
lea esi [ebp+1] +
mov [eax+2] bp +
mov eax ebx +
mov [edx+2] bp +
mov edx edi +
mov [ebx+0B60h] ebp +
call sub_4558B0  +
mov eax [ebx+1450h] +
cmp eax 1 +
jg loc_455AE0  +
mov eax [ebx+1454h] +
mov ecx [ebx+0B60h] +
lea edx [eax-1] +
mov [ebx+1454h] edx +
xor edx edx +
mov [ebx+eax*4+0B58h] ecx +
mov eax [esp+4Ch+var_44] +
mov edi [eax] +
mov ebp [eax+4] +
mov eax [eax+8] +
mov [esp+4Ch+var_48] edi +
mov edi [eax] +
mov [esp+4Ch+var_30] edi +
mov edi [eax+4] +
mov [esp+4Ch+var_2C] edi +
mov edi [eax+8] +
mov eax [eax+10h] +
mov [esp+4Ch+var_38] edi +
xor esi esi +
mov [ebx+edx*2+0B3Ch] si +
add edx 1 +
cmp edx 10h +
jnz loc_455BE6  +
mov edi [esp+4Ch+var_48] +
xor edx edx +
mov [edi+ecx*4+2] dx +
mov edx [ebx+1454h] +
lea ecx [edx+1] +
cmp ecx 23Ch +
jg loc_455DB9  +
mov [esp+4Ch+var_44] ebp +
mov ebp [esp+4Ch+var_48] +
lea ecx [ebx+1450h] +
lea edi [ebx+edx*4+0B60h] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_3C] ebx +
mov edx [edi] +
lea esi ds:0[edx*4] +
lea ecx [ebp+esi+0] +
movzx eax word ptr [ecx+2] +
movzx eax word ptr [ebp+eax*4+2] +
add eax 1 +
cmp [esp+4Ch+var_4C] eax +
jge loc_455C66  +
add [esp+4Ch+var_34] 1 +
mov eax [esp+4Ch+var_4C] +
cmp [esp+4Ch+var_44] edx +
mov [ecx+2] ax +
jl loc_455CBC  +
mov ebx [esp+4Ch+var_3C] +
add word ptr [ebx+eax*2+0B3Ch] 1 +
xor ebx ebx +
cmp [esp+4Ch+var_38] edx +
jg loc_455C90  +
mov ebx [esp+4Ch+var_2C] +
sub edx [esp+4Ch+var_38] +
mov ebx [ebx+edx*4] +
movzx edx word ptr [ecx] +
add eax ebx +
mov ecx ebx +
mov ebx [esp+4Ch+var_3C] +
imul eax edx +
add [ebx+16A8h] eax +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_455CBC  +
movzx eax word ptr [eax+esi+2] +
add eax ecx +
imul eax edx +
add [ebx+16ACh] eax +
add edi 4 +
cmp edi [esp+4Ch+var_40] +
jnz loc_455C40  +
mov edx [esp+4Ch+var_34] +
mov ebp [esp+4Ch+var_44] +
mov eax [esp+4Ch+var_4C] +
mov ebx [esp+4Ch+var_3C] +
test edx edx +
jz loc_455DB9  +
lea ecx [eax-1] +
lea edi [eax+597h] +
lea esi [ebx+eax*2] +
mov [esp+4Ch+var_4C] ebp +
mov ebp edx +
mov [esp+4Ch+var_40] eax +
mov eax ecx +
mov [esp+4Ch+var_44] ecx +
movzx ecx word ptr [ebx+edi*2+0Ch] +
mov edx eax +
test cx cx +
jnz loc_455D17  +
sub edx 1 +
movzx ecx word ptr [ebx+edx*2+0B3Ch] +
test cx cx +
jz loc_455D07  +
sub ecx 1 +
sub ebp 2 +
add word ptr [ebx+edx*2+0B3Eh] 2 +
mov [ebx+edx*2+0B3Ch] cx +
movzx ecx word ptr [esi+0B3Ch] +
sub ecx 1 +
test ebp ebp +
mov [esi+0B3Ch] cx +
jg loc_455CFB  +
mov eax [esp+4Ch+var_40] +
mov ebp [esp+4Ch+var_4C] +
test eax eax +
jz loc_455DB9  +
mov edx 23Dh +
movzx ecx cx +
test ecx ecx +
jz loc_455D9E  +
mov [esp+4Ch+var_4C] ebp +
lea esi [esi+0] +
sub edx 1 +
mov esi [ebx+edx*4+0B5Ch] +
cmp [esp+4Ch+var_4C] esi +
jl loc_455D97  +
mov edi [esp+4Ch+var_48] +
lea esi [edi+esi*4] +
movzx edi word ptr [esi+2] +
cmp edi eax +
jz loc_455D94  +
mov ebp eax +
sub ebp edi +
mov edi ebp +
movzx ebp word ptr [esi] +
imul edi ebp +
add [ebx+16A8h] edi +
mov [esi+2] ax +
sub ecx 1 +
test ecx ecx +
jnz loc_455D60  +
mov ebp [esp+4Ch+var_4C] +
mov edi [esp+4Ch+var_44] +
test edi edi +
mov eax edi +
jz loc_455DB9  +
movzx ecx word ptr [ebx+edi*2+0B3Ch] +
sub edi 1 +
mov [esp+4Ch+var_44] edi +
jmp loc_455D53  +
add ebx 0B3Ch +
xor edx edx +
mov eax 1 +
add dx [ebx+eax*2-2] +
add edx edx +
mov [esp+eax*2+4Ch+var_20] dx +
add eax 1 +
cmp eax 10h +
jnz loc_455DC6  +
mov eax [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_28] +
cmp eax 0FFFFFFFFh +
lea edi [esi+eax*4+4] +
jz loc_455E24  +
nop   +
lea esi [esi+0] +
movzx edx word ptr [esi+2] +
test edx edx +
jz loc_455E1D  +
movzx ecx [esp+edx*2+4Ch+var_20] +
xor ebx ebx +
lea eax [ecx+1] +
mov [esp+edx*2+4Ch+var_20] ax +
mov eax ecx +
and eax 1 +
or eax ebx +
shr ecx 1 +
sub edx 1 +
lea ebx [eax+eax] +
jnz loc_455E07  +
shr ebx 1 +
mov [esi] bx +
add esi 4 +
cmp esi edi +
jnz loc_455DF0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebp +
xor ecx ecx +
mov esi 0FFFFFFFFh +
mov ebp [esp+4Ch+var_28] +
jmp loc_455A88  +
***
push esi  +
push ebx  +
sub esp 8 +
movzx ebx word ptr [edx+2] +
lea esi ds:4[ecx*4] +
mov word ptr [edx+esi+2] 0FFFFh +
cmp ebx 1 +
sbb ebp ebp +
add ebp 4 +
cmp ebx 1 +
sbb edi edi +
and edi 83h +
add edi 7 +
test ecx ecx +
js loc_455EFC  +
add esi edx +
xor ecx ecx +
mov [esp+8+var_4] esi +
mov [esp+8+var_8] 0FFFFFFFFh +
jmp loc_455EB5  +
add [eax+ebx*4+0A7Ch] cx +
test esi esi +
jz loc_455EE7  +
cmp ebx esi +
setnz cl  +
movzx ebp cl +
movzx edi cl +
add ebp 3 +
add edi 6 +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
jz loc_455EFC  +
mov [esp+8+var_8] ebx +
mov ebx esi +
add ecx 1 +
movzx esi word ptr [edx+6] +
cmp ecx edi +
jge loc_455EC4  +
cmp ebx esi +
jz loc_455F16  +
cmp ecx ebp +
jl loc_455E88  +
test ebx ebx +
jz loc_455F04  +
cmp [esp+8+var_8] ebx +
nop   +
jz loc_455EDB  +
add word ptr [eax+ebx*4+0A7Ch] 1 +
add word ptr [eax+0ABCh] 1 +
test esi esi +
jnz loc_455E94  +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
mov ebp 3 +
mov edi 8Ah +
jnz loc_455EB0  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 0Ah +
jg loc_455F20  +
add word ptr [eax+0AC0h] 1 +
jmp loc_455E90  +
mov ebx [esp+8+var_8] +
jmp loc_455EA7  +
add word ptr [eax+0AC4h] 1 +
jmp loc_455E90  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
movzx eax word ptr [edx+2] +
cmp eax 1 +
sbb esi esi +
add esi 4 +
cmp eax 1 +
sbb ebx ebx +
and ebx 83h +
add ebx 7 +
test ecx ecx +
mov [esp+20h+var_1C] eax +
js loc_456234  +
lea eax [edx+ecx*4+4] +
xor edi edi +
mov [esp+20h+var_14] edx +
mov edx 0FFFFFFFFh +
mov [esp+20h+var_20] edi +
mov edi ebp +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+var_14] +
movzx eax word ptr [eax+6] +
mov [esp+20h+var_18] eax +
mov eax [esp+20h+var_20] +
lea ebp [eax+1] +
cmp ebp ebx +
jge loc_455F9B  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
jz loc_456330  +
cmp ebp esi +
jge loc_456094  +
mov eax [esp+20h+var_1C] +
mov [esp+20h+var_20] ebp +
lea edx [edi+eax*4] +
mov ebp edx +
jmp loc_456010  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [edi+14h] +
or cx [edi+16B8h] +
lea esi [ebx+1] +
mov [edi+14h] esi +
mov esi [edi+8] +
mov [edi+16B8h] cx +
mov [esi+ebx] cl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov ebx [edi+16BCh] +
mov ecx 10h +
sub ecx ebx +
sar edx cl +
sub [esp+20h+var_20] 1 +
lea eax [eax+ebx-10h] +
mov [edi+16B8h] dx +
mov [edi+16BCh] eax +
jz loc_456046  +
movzx eax word ptr [ebp+0A7Eh] +
mov edx 10h +
mov ecx [edi+16BCh] +
sub edx eax +
cmp ecx edx +
movzx edx word ptr [ebp+0A7Ch] +
jg loc_455FB1  +
shl edx cl +
add eax ecx +
or [edi+16B8h] dx +
sub [esp+20h+var_20] 1 +
mov [edi+16BCh] eax +
jnz loc_456010  +
mov eax [esp+20h+var_18] +
test eax eax +
jz loc_456210  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
mov [esp+20h+var_20] 0 +
setnz bl  +
movzx esi bl +
movzx ebx bl +
add esi 3 +
add ebx 6 +
add [esp+20h+var_14] 4 +
mov eax [esp+20h+var_10] +
cmp [esp+20h+var_14] eax +
jz loc_456234  +
mov eax [esp+20h+var_18] +
mov edx [esp+20h+var_1C] +
mov [esp+20h+var_1C] eax +
jmp loc_455F77  +
mov ecx [esp+20h+var_1C] +
test ecx ecx +
jz loc_456240  +
cmp edx [esp+20h+var_1C] +
jz loc_456481  +
mov eax [esp+20h+var_1C] +
mov ebx 10h +
mov ecx [edi+16BCh] +
lea edx [edi+eax*4] +
movzx eax word ptr [edx+0A7Eh] +
sub ebx eax +
cmp ecx ebx +
movzx ebx word ptr [edx+0A7Ch] +
jle loc_456464  +
mov edx [edi+14h] +
mov esi ebx +
shl esi cl +
mov ebp [edi+8] +
mov ecx esi +
or cx [edi+16B8h] +
lea esi [edx+1] +
mov [edi+14h] esi +
mov [edi+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [edi+14h] +
mov esi [edi+8] +
lea ecx [edx+1] +
mov [edi+14h] ecx +
movzx ecx byte ptr [edi+16B9h] +
mov [esi+edx] cl +
mov edx [edi+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [eax+edx-10h] +
mov [edi+16B8h] bx +
mov [edi+16BCh] ecx +
movzx eax word ptr [edi+0ABEh] +
mov edx 10h +
sub edx eax +
cmp edx ecx +
movzx edx word ptr [edi+0ABCh] +
jge loc_456340  +
mov esi edx +
mov ebp [edi+8] +
shl esi cl +
mov ecx [edi+14h] +
or ebx esi +
mov [edi+16B8h] bx +
lea esi [ecx+1] +
mov [edi+14h] esi +
mov [ebp+ecx+0] bl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov esi [edi+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edx cl +
lea ecx [eax+esi-10h] +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jle loc_45635C  +
mov ebp [esp+20h+var_20] +
mov esi [edi+14h] +
sub ebp 3 +
movzx ebp bp +
mov eax ebp +
shl eax cl +
or edx eax +
mov eax [edi+8] +
lea ecx [esi+1] +
mov [edi+16B8h] dx +
mov [edi+14h] ecx +
mov [eax+esi] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Eh +
mov [edi+16BCh] eax +
mov eax [esp+20h+var_18] +
sar ebp cl +
mov [edi+16B8h] bp +
test eax eax +
jnz loc_456052  +
lea esi [esi+0] +
add [esp+20h+var_14] 4 +
mov esi 3 +
mov eax [esp+20h+var_10] +
mov ebx 8Ah +
cmp [esp+20h+var_14] eax +
mov [esp+20h+var_20] 0 +
jnz loc_456083  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebp 0Ah +
jg loc_456380  +
movzx esi word ptr [edi+0AC2h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_456496  +
movzx ebx word ptr [edi+0AC0h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
cmp ecx 0Dh +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jle loc_4564BE  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 2 +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_456046  +
mov [esp+20h+var_20] ebp +
mov [esp+20h+var_1C] edx +
jmp loc_456070  +
shl edx cl +
add ecx eax +
or edx ebx +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jg loc_4561A7  +
movzx ebp word ptr [esp+20h+var_20] +
sub ebp 3 +
movzx ebp bp +
shl ebp cl +
add ecx 2 +
or edx ebp +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jmp loc_456046  +
movzx esi word ptr [edi+0AC6h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_456500  +
movzx ebx word ptr [edi+0AC4h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
cmp ecx 9 +
jle loc_4564E0  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 0Ah +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 9 +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_456046  +
shl ebx cl +
add ecx eax +
or bx [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] bx +
jmp loc_45612E  +
mov ecx [edi+16BCh] +
movzx ebx word ptr [edi+16B8h] +
mov [esp+20h+var_20] ebp +
jmp loc_45612E  +
movzx eax word ptr [edi+0AC0h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
cmp ecx 0Dh +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jg loc_4562CE  +
lea edx [ebp-3] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_456046  +
lea edx [ebp-0Bh] +
movzx edx dx +
shl edx cl +
add ecx 7 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_456046  +
movzx eax word ptr [edi+0AC4h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jmp loc_4563FC  +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebp [eax+16BCh] +
mov [esp+18h+var_10] edx +
mov edx [eax+16A0h] +
mov [esp+18h+var_8] ecx +
test edx edx +
jnz loc_4565A1  +
movzx esi word ptr [eax+16B8h] +
mov word ptr [esp+18h+var_18] si +
mov ebx [esp+18h+var_10] +
movzx edi word ptr [ebx+402h] +
mov ebx 10h +
mov edx ebx +
sub edx edi +
cmp edx ebp +
jl loc_456948  +
mov ebx [esp+18h+var_10] +
mov ecx ebp +
lea edx [edi+ebp] +
movzx esi word ptr [ebx+400h] +
mov [eax+16BCh] edx +
shl esi cl +
or si word ptr [esp+18h+var_18] +
mov [eax+16B8h] si +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebx word ptr [eax+16B8h] +
xor ecx ecx +
mov edx ecx +
mov ecx ebp +
mov esi ebx +
jmp loc_456639  +
mov ebx [esp+18h+var_10] +
mov edi 10h +
lea ebx [ebx+edx*4] +
movzx edx word ptr [ebx+2] +
sub edi edx +
cmp edi ecx +
jge loc_4568C8  +
movzx ebp word ptr [ebx] +
mov ebx ebp +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi ebp +
sub ecx edi +
sar esi cl +
lea ecx [edx+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
jnb loc_4568A0  +
mov edx edi +
mov ebx [eax+16A4h] +
lea edi [edx+1] +
mov [esp+18h+var_18] edi +
mov edi [eax+1698h] +
movzx ebx word ptr [ebx+edx*2] +
movzx edx byte ptr [edi+edx] +
test ebx ebx +
jz loc_4565B5  +
mov [esp+18h+var_C] edx +
mov edi [esp+18h+var_10] +
movzx edx ds:byte_490320[edx] +
lea edi [edi+edx*4+404h] +
movzx ebp word ptr [edi+2] +
mov [esp+18h+var_14] edx +
mov edx 10h +
movzx edi word ptr [edi] +
sub edx ebp +
cmp edx ecx +
jge loc_4568B0  +
mov edx edi +
shl edx cl +
mov ecx [eax+14h] +
mov [esp+18h+var_4] edi +
mov edi [eax+8] +
or esi edx +
mov [eax+16B8h] si +
lea edx [ecx+1] +
mov [eax+14h] edx +
mov edx esi +
mov [edi+ecx] dl +
mov ecx [eax+14h] +
mov edi [eax+8] +
lea esi [ecx+1] +
mov [eax+14h] esi +
movzx esi byte ptr [eax+16B9h] +
mov edx esi +
mov esi [esp+18h+var_4] +
mov [edi+ecx] dl +
mov edi [eax+16BCh] +
mov ecx 10h +
sub ecx [eax+16BCh] +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_14] +
mov ebp ds:dword_490C20[edi*4] +
test ebp ebp +
jz loc_456773  +
mov edx [esp+18h+var_14] +
mov edi [esp+18h+var_C] +
sub edi ds:dword_4902A0[edx*4] +
mov edx 10h +
sub edx ebp +
cmp edx ecx +
jge loc_456915  +
movzx edi di +
mov edx edi +
shl edx cl +
or esi edx +
mov edx [eax+14h] +
mov [eax+16B8h] si +
mov ecx esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov esi [eax+8] +
mov [esi+edx] cl +
mov edx [eax+14h] +
mov esi [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx byte ptr [eax+16B9h] +
mov [esi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
mov esi edi +
sub ecx edx +
sar esi cl +
lea ecx [ebp+edx-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
lea edi [ebx-1] +
cmp edi 0FFh +
ja loc_456900  +
movzx ebx ds:byte_490420[edi] +
mov [esp+18h+var_14] ebx +
mov edx [esp+18h+var_14] +
mov ebx [esp+18h+var_8] +
lea ebx [ebx+edx*4] +
mov edx 10h +
movzx ebp word ptr [ebx+2] +
movzx ebx word ptr [ebx] +
sub edx ebp +
cmp edx ecx +
mov [esp+18h+var_C] ebp +
jge loc_4568E3  +
mov ebp [eax+14h] +
mov edx ebx +
shl ebx cl +
mov ecx [eax+8] +
or ebx esi +
mov [eax+16B8h] bx +
lea esi [ebp+1] +
mov [eax+14h] esi +
mov [ecx+ebp] bl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov ebp [eax+16BCh] +
mov ecx 10h +
mov ebx [esp+18h+var_C] +
mov esi edx +
sub ecx ebp +
sar esi cl +
lea ecx [ebx+ebp-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov ebx [esp+18h+var_14] +
mov ebp ds:dword_490BA0[ebx*4] +
test ebp ebp +
jz loc_456628  +
sub edi ds:dword_490220[ebx*4] +
mov ebx 10h +
sub ebx ebp +
cmp ebx ecx +
movzx edx di +
jge loc_456930  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi edx +
sub ecx edi +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jb loc_456637  +
nop   +
lea esi [esi+0] +
mov ebp ecx +
mov word ptr [esp+18h+var_18] si +
jmp loc_45655A  +
shl edi cl +
add ecx ebp +
or esi edi +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4566ED  +
movzx ebx word ptr [ebx] +
shl ebx cl +
add ecx edx +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_456628  +
shl ebx cl +
add ecx [esp+18h+var_C] +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_45680A  +
mov edx edi +
shr edx 7 +
movzx ebx ds:byte_490520[edx] +
mov [esp+18h+var_14] ebx +
jmp loc_45678D  +
movzx edx di +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_456773  +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_456628  +
mov esi [esp+18h+var_10] +
mov ecx ebp +
mov ebp [eax+8] +
movzx esi word ptr [esi+400h] +
mov edx esi +
shl edx cl +
mov ecx edx +
mov edx [eax+14h] +
or cx word ptr [esp+18h+var_18] +
mov [esp+18h+var_14] esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [eax+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov ebp [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebp+edx+0] cl +
mov edx [eax+16BCh] +
mov ebp [esp+18h+var_14] +
sub ebx edx +
mov ecx ebx +
sar ebp cl +
lea edx [edi+edx-10h] +
mov [eax+16B8h] bp +
mov [eax+16BCh] edx +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 8 +
jg loc_456A00  +
test edx edx +
jle loc_4569E6  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
jmp loc_4569E6  +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 10h +
jz loc_456A68  +
cmp edx 7 +
jle loc_456A66  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
shr word ptr [eax+16B8h] 8 +
sub dword ptr [eax+16BCh] 8 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
lea eax [edx+94h] +
mov [edx+0B18h] eax +
lea eax [edx+988h] +
mov [edx+0B24h] eax +
lea eax [edx+0A7Ch] +
mov [edx+0B30h] eax +
xor eax eax +
mov [edx+16B8h] ax +
xor eax eax +
mov dword ptr [edx+0B20h] offset off_473888 +
mov dword ptr [edx+0B2Ch] offset off_473874 +
mov dword ptr [edx+0B38h] offset unk_473860 +
mov dword ptr [edx+16BCh] 0 +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+94h] cx +
add eax 1 +
cmp eax 11Eh +
jnz loc_456B10  +
xor ax ax +
xor ecx ecx +
mov [edx+eax*4+988h] cx +
add eax 1 +
cmp eax 1Eh +
jnz loc_456B27  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_456B40  +
mov eax 1 +
mov [edx+494h] ax +
mov dword ptr [edx+16ACh] 0 +
mov dword ptr [edx+16A8h] 0 +
mov dword ptr [edx+16B0h] 0 +
mov dword ptr [edx+16A0h] 0 +
retn   +
***
push esi  +
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
movzx eax [esp+arg_C] +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_456C43  +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov eax ebx +
call sub_4569C0  +
mov eax [ebx+14h] +
lea ebp [esi+edi] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
shr cx 8 +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
not ecx  +
mov [edx+eax] cl +
mov edx [ebx+14h] +
mov ecx [ebx+8] +
lea eax [edx+1] +
mov [ebx+14h] eax +
mov eax edi +
not eax  +
shr ax 8 +
test edi edi +
mov [ecx+edx] al +
jz loc_456C3E  +
mov eax [ebx+14h] +
add esi 1 +
mov ecx [ebx+8] +
cmp esi ebp +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [esi-1] +
mov [ecx+eax] dl +
jnz loc_456C24  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or cx [ebx+16B8h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebx+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebp+edx+0] cl +
mov edx [ebx+16BCh] +
mov ecx 10h +
sub ecx edx +
sub edx 0Dh +
sar eax cl +
mov [ebx+16B8h] ax +
mov [ebx+16BCh] edx +
jmp loc_456BC6  +
***
mov eax [esp+arg_0] +
jmp loc_456A30  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax+16BCh] +
cmp ecx 0Dh +
jle loc_456D45  +
mov ebx 2 +
mov edx [eax+14h] +
mov edi ebx +
mov esi [eax+8] +
shl edi cl +
mov ecx edi +
or cx [eax+16B8h] +
lea edi [edx+1] +
mov [eax+14h] edi +
mov [eax+16B8h] cx +
mov [esi+edx] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov edi [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [edi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [edx-0Dh] +
cmp ecx 9 +
mov [eax+16B8h] bx +
mov [eax+16BCh] ecx +
jg loc_456D61  +
add ecx 7 +
mov [eax+16BCh] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_456A30  +
mov edx 2 +
shl edx cl +
add ecx 3 +
or [eax+16B8h] dx +
cmp ecx 9 +
mov [eax+16BCh] ecx +
jle loc_456D34  +
mov edx [eax+14h] +
movzx ecx word ptr [eax+16B8h] +
mov ebx [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
sub dword ptr [eax+16BCh] 9 +
mov [eax+16B8h] dx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_456A30  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [esp+24h+arg_C] +
mov edi [esp+24h+arg_4] +
mov esi [esp+24h+arg_8] +
mov ebp [ebx+84h] +
mov [esp+24h+var_C] eax +
test ebp ebp +
jle loc_45720F  +
mov ecx [ebx] +
cmp dword ptr [ecx+2Ch] 2 +
jz loc_45721B  +
lea edx [ebx+0B18h] +
mov eax ebx +
call sub_4559C0  +
lea edx [ebx+0B24h] +
mov eax ebx +
call sub_4559C0  +
mov ecx [ebx+0B1Ch] +
lea edx [ebx+94h] +
mov eax ebx +
call sub_455E40  +
mov ecx [ebx+0B28h] +
lea edx [ebx+988h] +
mov eax ebx +
call sub_455E40  +
mov eax ebx +
lea edx [ebx+0B30h] +
call sub_4559C0  +
mov eax 12h +
movzx edx ds:byte_490B20[eax] +
cmp word ptr [ebx+edx*4+0A7Eh] 0 +
jnz loc_4571C4  +
sub eax 1 +
cmp eax 2 +
jnz loc_456E37  +
mov ecx 9 +
mov edx [ebx+16A8h] +
lea ecx [ecx+edx+0Eh] +
mov edx [ebx+16ACh] +
mov [ebx+16A8h] ecx +
add ecx 0Ah +
shr ecx 3 +
add edx 0Ah +
shr edx 3 +
cmp ecx edx +
cmova ecx edx +
lea ebp [esi+4] +
cmp ecx ebp +
jb loc_456F3A  +
test edi edi +
jz loc_456F3A  +
mov eax [esp+24h+var_C] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_456B90  +
xor eax eax +
nop   +
xor edi edi +
mov [ebx+eax*4+94h] di +
add eax 1 +
cmp eax 11Eh +
jnz loc_456EB0  +
xor ax ax +
xor esi esi +
mov [ebx+eax*4+988h] si +
add eax 1 +
cmp eax 1Eh +
jnz loc_456EC7  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [ebx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_456EE0  +
mov edx [esp+24h+var_C] +
mov eax 1 +
mov [ebx+494h] ax +
mov dword ptr [ebx+16ACh] 0 +
mov dword ptr [ebx+16A8h] 0 +
test edx edx +
mov dword ptr [ebx+16B0h] 0 +
mov dword ptr [ebx+16A0h] 0 +
jnz loc_4571B6  +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+88h] 4 +
jz loc_4571CD  +
cmp edx ecx +
jz loc_4571CD  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_45728B  +
movzx edi word ptr [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or dx [ebx+16B8h] +
mov [ebx+16BCh] ecx +
mov [ebx+16B8h] dx +
mov esi edx +
mov edi [ebx+0B28h] +
cmp ecx 0Bh +
lea ebp [eax+1] +
mov [esp+24h+var_8] edi +
mov edi [ebx+0B1Ch] +
mov [esp+24h+var_4] edi +
jle loc_4573A6  +
lea edx [edi-100h] +
movzx edi dx +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov esi edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Bh +
jle loc_457388  +
movzx edi word ptr [esp+24h+var_8] +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov edx edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Ch +
jle loc_457367  +
sub eax 3 +
movzx edi ax +
mov eax edi +
shl eax cl +
mov ecx [ebx+8] +
or edx eax +
mov eax [ebx+14h] +
mov [ebx+16B8h] dx +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [ecx+eax] dl +
mov eax [ebx+14h] +
mov ecx [ebx+8] +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [ebx+16B9h] +
mov [ecx+eax] dl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sar edi cl +
lea ecx [eax-0Ch] +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
xor eax eax +
mov [esp+24h+var_14] ebp +
jmp loc_45714B  +
movzx edx word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
mov esi edx +
shl esi cl +
mov ecx [ebx+14h] +
or esi edi +
mov edi [ebx+8] +
mov [esp+24h+var_10] edx +
mov edx esi +
mov [ebx+16B8h] si +
lea ebp [ecx+1] +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov esi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_10] +
sub ecx esi +
sub esi 0Dh +
sar edx cl +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] esi +
jle loc_457180  +
mov ecx [ebx+16BCh] +
movzx edi word ptr [ebx+16B8h] +
cmp ecx 0Dh +
movzx edx ds:byte_490B20[eax] +
jg loc_4570D0  +
movzx esi word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
shl esi cl +
add ecx 3 +
or esi edi +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] si +
mov [ebx+16BCh] ecx +
jg loc_45713E  +
mov ecx [esp+24h+var_4] +
lea esi [ebx+94h] +
mov eax ebx +
mov edx esi +
lea edi [ebx+988h] +
call sub_455F30  +
mov ecx [esp+24h+var_8] +
mov edx edi +
mov eax ebx +
call sub_455F30  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_456530  +
jmp loc_456EAC  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4569C0  +
lea ecx [eax+eax*2+3] +
jmp loc_456E5A  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_457300  +
movzx eax word ptr [esp+24h+var_C] +
add eax 2 +
movzx eax ax +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov ecx offset unk_490620 +
mov edx offset unk_4906A0 +
mov eax ebx +
call sub_456530  +
jmp loc_456EAC  +
lea ecx [esi+5] +
xor eax eax +
mov edx ecx +
jmp loc_456E81  +
xor eax eax +
mov edx 0F3FFC07Fh +
test dl 1 +
jz loc_457236  +
cmp word ptr [ebx+eax*4+94h] 0 +
jnz loc_4573CF  +
add eax 1 +
shr edx 1 +
cmp eax 20h +
jnz loc_457222  +
cmp word ptr [ebx+0B8h] 0 +
mov edx 1 +
jnz loc_457283  +
cmp word ptr [ebx+0BCh] 0 +
jnz loc_457283  +
cmp word ptr [ebx+0C8h] 0 +
jz loc_457273  +
jmp loc_457283  +
add eax 1 +
cmp eax 100h +
jz loc_4573CF  +
cmp word ptr [ebx+eax*4+94h] 0 +
jz loc_457265  +
mov edx 1 +
mov [ecx+2Ch] edx +
jmp loc_456DE5  +
mov edi [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
mov edi edx +
shl edi cl +
mov ecx [ebx+14h] +
mov esi edi +
mov edi [ebx+8] +
or si [ebx+16B8h] +
mov [esp+24h+var_14] edx +
lea ebp [ecx+1] +
mov edx esi +
mov [ebx+16B8h] si +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov edi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_14] +
sub ecx edi +
sar edx cl +
lea ecx [edi-0Dh] +
mov esi edx +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_456F84  +
mov eax [esp+24h+var_C] +
mov esi [ebx+8] +
lea edx [eax+2] +
movzx edx dx +
mov eax edx +
shl eax cl +
mov ecx eax +
mov eax [ebx+14h] +
or cx [ebx+16B8h] +
lea edi [eax+1] +
mov [ebx+14h] edi +
mov [ebx+16B8h] cx +
mov [esi+eax] cl +
mov eax [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
mov edi [ebx+8] +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [edi+eax] cl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar edx cl +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] eax +
jmp loc_4571F9  +
lea eax [ebp-4] +
movzx eax ax +
shl eax cl +
add ecx 4 +
or eax edx +
mov [ebx+16B8h] ax +
mov edi eax +
mov [ebx+16BCh] ecx +
jmp loc_4570C5  +
movzx edx word ptr [esp+24h+var_8] +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_457065  +
movzx edi word ptr [esp+24h+var_4] +
lea edx [edi-100h] +
movzx edx dx +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov esi edx +
mov [ebx+16BCh] ecx +
jmp loc_457002  +
xor edx edx +
jmp loc_457283  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+16A0h] +
mov esi [eax+16A4h] +
test ecx ecx +
mov [esi+edx*2] cx +
lea esi [edx+1] +
mov [eax+16A0h] esi +
mov esi [eax+1698h] +
mov [esi+edx] bl +
jz loc_457470  +
movzx edx ds:byte_490320[ebx] +
lea esi [ecx-1] +
add dword ptr [eax+16B0h] 1 +
add word ptr [eax+edx*4+498h] 1 +
cmp esi 0FFh +
jbe loc_457461  +
shr esi 7 +
movzx edx ds:byte_490520[esi] +
add word ptr [eax+edx*4+988h] 1 +
mov ebx [eax+169Ch] +
lea edx [ebx-1] +
cmp [eax+16A0h] edx +
pop ebx  +
pop esi  +
setz al  +
movzx eax al +
retn   +
***
movzx edx ds:byte_49041F[ecx] +
jmp loc_457440  +
***
add word ptr [eax+ebx*4+94h] 1 +
jmp loc_457449  +
***
push esi  +
push ebx  +
sub esp 14h +
mov edi dword_4738A4 +
mov [esp+14h+var_10] eax +
mov eax ds:dword_49A42C +
mov esi ds:dword_49A428 +
mov [esp+14h+var_4] edi +
mov [esp+14h+var_14] edi +
mov edi eax +
mov [esp+14h+var_8] eax +
lea esi [esi+0] +
cmp esi edi +
jle loc_4574F5  +
cmp [esp+14h+var_14] esi +
jle loc_4574F5  +
mov edx [esp+14h+var_14] +
mov ebp esi +
sub ebp edi +
sub edx esi +
cmp edx ebp +
jg loc_457514  +
test edx edx +
jle loc_45754D  +
mov ebx [esp+14h+var_10] +
lea eax [ebx+edi*4] +
add edi edx +
lea edx [ebx+edi*4] +
lea esi [esi+0] +
mov ecx [eax] +
mov ebx [eax+ebp*4] +
mov [eax] ebx +
mov [eax+ebp*4] ecx +
add eax 4 +
cmp eax edx +
jnz loc_4574E0  +
cmp esi edi +
jg loc_4574B4  +
mov edi [esp+14h+var_4] +
mov eax edi +
sub eax esi +
add eax [esp+14h+var_8] +
mov ds:dword_49A428 edi +
mov ds:dword_49A42C eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jle loc_457545  +
mov ebx [esp+14h+var_10] +
lea edx [ebp+edi+0] +
mov [esp+14h+var_C] esi +
lea eax [ebx+edi*4] +
lea ebx [ebx+edx*4] +
mov edx [esp+14h+var_14] +
sub edx esi +
nop   +
mov ecx [eax] +
mov esi [eax+edx*4] +
mov [eax] esi +
mov [eax+edx*4] ecx +
add eax 4 +
cmp eax ebx +
jnz loc_457530  +
mov esi [esp+14h+var_C] +
sub [esp+14h+var_14] ebp +
jmp loc_4574B0  +
add edi edx +
jmp loc_4574B0  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax dword_4738A4 +
mov ds:dword_49A424 0 +
test eax eax +
jnz loc_4577C0  +
mov dword_4738A4 1 +
mov eax 1 +
mov [esp+4Ch+var_4C] offset aPosixly_correc +
mov ds:dword_49A428 eax +
mov ds:dword_49A42C eax +
mov ds:dword_49A438 0 +
call getenv  +
mov edi [esp+4Ch+arg_8] +
movzx edx byte ptr [edi] +
mov ds:dword_49A430 eax +
cmp dl 2Dh +
jz loc_457A53  +
cmp dl 2Bh +
jz loc_457A02  +
test eax eax +
setz al  +
movzx eax al +
mov ds:dword_49A434 eax +
mov ds:dword_49A420 1 +
mov edx ds:dword_49A438 +
test edx edx +
jz loc_4577D3  +
movzx eax byte ptr [edx] +
test al al +
mov byte ptr [esp+4Ch+var_2C] al +
jz loc_4577D3  +
mov [esp+4Ch+var_34] edx +
mov ecx [esp+4Ch+arg_C] +
test ecx ecx +
jz loc_457884  +
mov eax dword_4738A4 +
lea edi ds:0[eax*4] +
mov [esp+4Ch+var_10] edi +
mov edi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_24] eax +
mov eax [edi+eax*4] +
mov [esp+4Ch+var_20] eax +
movzx eax byte ptr [eax+1] +
cmp al 2Dh +
mov [esp+4Ch+var_19] al +
jz loc_457682  +
mov edx [esp+4Ch+arg_14] +
test edx edx +
jz loc_457884  +
mov eax [esp+4Ch+var_20] +
cmp byte ptr [eax+2] 0 +
jnz loc_457682  +
mov eax [esp+4Ch+arg_8] +
movzx ecx byte ptr [eax] +
test cl cl +
jz loc_457682  +
movzx ebx [esp+4Ch+var_19] +
cmp bl cl +
jnz loc_457678  +
jmp loc_457F3A  +
cmp bl dl +
jz loc_457BF3  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_457670  +
movzx eax byte ptr [esp+4Ch+var_2C] +
mov esi [esp+4Ch+var_34] +
test al al +
jz loc_4576A3  +
cmp al 3Dh +
jnz loc_457699  +
jmp loc_4576A3  +
test al al +
jz loc_4576A3  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jnz loc_457695  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_457B52  +
mov eax esi +
mov ebx [esp+4Ch+arg_C] +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_18] esi +
mov [esp+4Ch+var_14] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_30] 0 +
jmp loc_4576F4  +
mov [esp+4Ch+var_28] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_457738  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_4576E8  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_457B23  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_4576E0  +
mov [esp+4Ch+var_30] ebx +
add ebx 10h +
mov ebp [ebx] +
mov [esp+4Ch+var_14] edi +
add edi 1 +
test ebp ebp +
jnz loc_4576F4  +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_18] +
test eax eax +
jz loc_457AC0  +
mov eax dword_4738A0 +
mov esi [esp+4Ch+var_24] +
mov ebx [esp+4Ch+var_34] +
test eax eax +
jz loc_45778F  +
mov eax [esp+4Ch+arg_4] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_48] offset aSOptionSIsAmbi +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_49A438 +
mov esi dword_4738A4 +
mov [esp+4Ch+var_4C] ebx +
add esi 1 +
call strlen  +
mov dword_4738A4 esi +
mov dword_47389C 0 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_49A438 ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_49A420 +
test esi esi +
jz loc_45758D  +
jmp loc_4575E2  +
mov eax dword_4738A4 +
cmp ds:dword_49A428 eax +
jle loc_4577E5  +
mov ds:dword_49A428 eax +
cmp eax ds:dword_49A42C +
jge loc_4577F2  +
mov ds:dword_49A42C eax +
mov ebx ds:dword_49A434 +
cmp ebx 1 +
jz loc_457970  +
cmp [esp+4Ch+arg_0] eax +
jz loc_4579DC  +
mov edi [esp+4Ch+arg_4] +
mov ecx 3 +
mov ebp [edi+eax*4] +
mov edi offset asc_490CB0 +
mov esi ebp +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_457940  +
mov edx ds:dword_49A42C +
add eax 1 +
mov ecx ds:dword_49A428 +
mov dword_4738A4 eax +
cmp edx ecx +
jz loc_457B30  +
cmp eax ecx +
jz loc_457861  +
mov eax [esp+4Ch+arg_4] +
call sub_457480  +
mov edx ds:dword_49A42C +
mov eax [esp+4Ch+arg_0] +
cmp eax edx +
mov ds:dword_49A428 eax +
mov dword_4738A4 eax +
jnz loc_4579EF  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+arg_8] +
mov ecx [esp+4Ch+var_34] +
movzx eax byte ptr [eax] +
add ecx 1 +
mov ds:dword_49A438 ecx +
test al al +
jz loc_4578C2  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp bl al +
jz loc_457DB1  +
mov eax [esp+4Ch+arg_8] +
jmp loc_4578B8  +
cmp dl bl +
jz loc_457A67  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_4578B0  +
mov edx 1 +
xor eax eax +
mov edi [esp+4Ch+var_34] +
cmp byte ptr [edi+1] 0 +
jnz loc_4578DA  +
add dword_4738A4 1 +
test dl dl +
jz loc_457A91  +
mov ecx dword_4738A0 +
test ecx ecx +
jz loc_457AB1  +
mov eax [esp+4Ch+arg_4] +
mov edx ds:dword_49A430 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
mov eax [eax] +
test edx edx +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] eax +
jz loc_457D2B  +
mov [esp+4Ch+var_48] offset aSIllegalOption +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax ebx +
mov dword_47389C eax +
add esp 4Ch +
mov eax 3Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebp+0] 2Dh +
jz loc_457A16  +
test ebx ebx +
jz loc_457877  +
add eax 1 +
mov dword_4738A4 eax +
mov eax 1 +
mov ds:dword_49A424 ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_49A42C +
mov edx ds:dword_49A428 +
cmp ecx edx +
jz loc_457BE1  +
cmp eax edx +
jz loc_457996  +
mov eax [esp+4Ch+arg_4] +
call sub_457480  +
mov eax dword_4738A4 +
cmp [esp+4Ch+arg_0] eax +
mov edx eax +
jle loc_4579CC  +
mov esi [esp+4Ch+arg_0] +
mov ecx [esp+4Ch+arg_4] +
jmp loc_4579B9  +
add edx 1 +
cmp edx esi +
mov dword_4738A4 edx +
jz loc_457A80  +
mov eax [ecx+edx*4] +
cmp byte ptr [eax] 2Dh +
jnz loc_4579A8  +
cmp byte ptr [eax+1] 0 +
jz loc_4579A8  +
mov eax dword_4738A4 +
mov ds:dword_49A428 edx +
cmp [esp+4Ch+arg_0] eax +
jnz loc_45780B  +
mov eax ds:dword_49A428 +
mov edx ds:dword_49A42C +
cmp eax edx +
jz loc_457877  +
mov dword_4738A4 edx +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_49A434 0 +
add [esp+4Ch+arg_8] 1 +
jmp loc_4575D8  +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jz loc_45794A  +
mov ebx [esp+4Ch+arg_C] +
test ebx ebx +
jz loc_457BD7  +
xor eax eax +
cmp cl 2Dh +
setz al  +
add eax 1 +
lea edx [ebp+eax+0] +
movzx eax byte ptr [edx] +
mov ds:dword_49A438 edx +
mov [esp+4Ch+var_34] edx +
mov byte ptr [esp+4Ch+var_2C] al +
jmp loc_457603  +
mov ds:dword_49A434 2 +
add [esp+4Ch+arg_8] 1 +
jmp loc_4575D8  +
test eax eax +
setz dl  +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz bl  +
or edx ebx +
jmp loc_4578C9  +
mov eax [esp+4Ch+arg_0] +
mov edx eax +
mov ds:dword_49A428 edx +
jmp loc_4579D2  +
cmp byte ptr [eax] 57h +
movzx edx byte ptr [eax+1] +
jz loc_457C07  +
cmp dl 3Ah +
jz loc_457CF2  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_457965  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_45792B  +
mov ebx [esp+4Ch+var_30] +
test ebx ebx +
jz loc_457B52  +
mov edi [esp+4Ch+var_14] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
mov dword_4738A4 eax +
cmp byte ptr [esi] 0 +
jnz loc_457B3C  +
cmp dword ptr [ebx+4] 1 +
jz loc_457DFB  +
mov esi [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
call strlen  +
mov ebp [esp+4Ch+arg_10] +
add eax esi +
test ebp ebp +
mov ds:dword_49A438 eax +
jz loc_457B0C  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [ebx+8] +
test eax eax +
jz loc_457E4D  +
mov edx [ebx+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_457965  +
mov esi [esp+4Ch+var_18] +
jmp loc_457AD0  +
mov ds:dword_49A42C eax +
mov edx eax +
jmp loc_457861  +
mov eax [ebx+4] +
test eax eax +
jz loc_457D38  +
add esi 1 +
mov ds:dword_49A424 esi +
jmp loc_457AEB  +
mov edi [esp+4Ch+arg_14] +
test edi edi +
jnz loc_457F44  +
mov esi dword_4738A0 +
mov eax [esp+4Ch+var_24] +
test esi esi +
jz loc_457BB1  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_45809E  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_3C] edi +
movsx edx byte ptr [ecx] +
mov [esp+4Ch+var_48] offset aSUnrecognizedO +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
mov [esp+4Ch+var_40] edx +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_4738A4 +
add eax 1 +
mov dword_4738A4 eax +
mov eax 3Fh +
mov ds:dword_49A438 offset unk_490D9C +
mov dword_47389C 0 +
jmp loc_457965  +
mov eax 1 +
jmp loc_457A39  +
cmp eax ecx +
jz loc_457996  +
mov ds:dword_49A42C eax +
jmp loc_457996  +
mov eax ecx +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
mov ds:dword_49A438 ecx +
jmp loc_45789C  +
cmp dl 3Bh +
jnz loc_457A9E  +
mov eax [esp+4Ch+var_34] +
cmp byte ptr [eax+1] 0 +
jz loc_457F0D  +
add dword_4738A4 1 +
mov ds:dword_49A424 ecx +
mov [esp+4Ch+var_34] ecx +
mov eax [esp+4Ch+var_34] +
movzx ebx byte ptr [eax] +
mov ds:dword_49A438 eax +
cmp bl 3Dh +
jz loc_4581E3  +
test bl bl +
jz loc_4581E3  +
mov esi eax +
jmp loc_457C54  +
test bl bl +
jz loc_457C5F  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Dh +
jnz loc_457C50  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_4581CF  +
mov eax esi +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov byte ptr [esp+4Ch+var_24] bl +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_20] esi +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
jmp loc_457CB8  +
mov [esp+4Ch+var_2C] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_457E55  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_457CA8  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_458082  +
mov ebp [esp+4Ch+var_30] +
test ebp ebp +
jnz loc_457CA0  +
mov [esp+4Ch+var_28] edi +
mov [esp+4Ch+var_30] ebx +
jmp loc_457CA8  +
cmp byte ptr [eax+2] 3Ah +
mov eax [esp+4Ch+var_34] +
jz loc_457E27  +
cmp byte ptr [eax+1] 0 +
jz loc_457DCD  +
add dword_4738A4 1 +
movsx eax byte ptr [esp+4Ch+var_2C] +
mov ds:dword_49A424 ecx +
mov ds:dword_49A438 0 +
jmp loc_457965  +
mov [esp+4Ch+var_48] offset aSInvalidOption +
jmp loc_457919  +
mov eax dword_4738A0 +
test eax eax +
jz loc_457AEB  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov eax [eax+edi*4] +
cmp byte ptr [eax+1] 2Dh +
jz loc_457FA4  +
mov ecx [ebx] +
mov edi [esp+4Ch+arg_4] +
mov edx [edi] +
mov [esp+4Ch+var_3C] ecx +
movsx eax byte ptr [eax] +
mov [esp+4Ch+var_48] offset aSOptionCSDoesn +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_49A438 +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_49A438 esi +
mov dword_47389C eax +
mov eax 3Fh +
jmp loc_457965  +
mov ebx [esp+4Ch+arg_8] +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz dl  +
test ebx ebx +
setz al  +
or edx eax +
mov eax [esp+4Ch+arg_8] +
jmp loc_4578C9  +
mov eax dword_4738A4 +
cmp eax [esp+4Ch+arg_0] +
jz loc_457FD1  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4738A4 edx +
mov eax [ecx+eax*4] +
mov ds:dword_49A424 eax +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_457D1C  +
cmp [esp+4Ch+arg_0] eax +
jle loc_457ECD  +
mov eax [esp+4Ch+var_24] +
mov ecx [esp+4Ch+var_10] +
add eax 2 +
mov dword_4738A4 eax +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+ecx+4] +
mov ds:dword_49A424 eax +
jmp loc_457AEB  +
cmp byte ptr [eax+1] 0 +
jz loc_457F95  +
add dword_4738A4 1 +
mov ds:dword_49A424 ecx +
mov ds:dword_49A438 0 +
jmp loc_457AA7  +
mov eax [ebx+0Ch] +
jmp loc_457965  +
mov edi [esp+4Ch+var_2C] +
movzx ebx byte ptr [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_20] +
test edi edi +
jz loc_457FFF  +
mov ecx dword_4738A0 +
mov ebx [esp+4Ch+var_34] +
test ecx ecx +
jz loc_457EAC  +
mov eax dword_4738A4 +
mov ecx [esp+4Ch+arg_4] +
mov edx [ecx+eax*4] +
mov eax [ecx] +
mov [esp+4Ch+var_48] offset aSOptionWSIsAmb +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_49A438 +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
add dword_4738A4 1 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_49A438 ebx +
jmp loc_457965  +
mov eax dword_4738A0 +
mov esi [esp+4Ch+var_34] +
test eax eax +
jnz loc_4580D2  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_49A438 esi +
mov dword_47389C eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_457930  +
mov eax 3Ah +
jmp loc_457965  +
mov eax dword_4738A4 +
cmp eax [esp+4Ch+arg_0] +
jz loc_45810A  +
mov edi [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4738A4 edx +
mov eax [edi+eax*4] +
mov ds:dword_49A424 eax +
mov [esp+4Ch+var_34] eax +
jmp loc_457C2F  +
movzx eax [esp+4Ch+var_19] +
jmp loc_457BF5  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_458091  +
mov eax [esp+4Ch+arg_8] +
movzx eax byte ptr [eax] +
test al al +
jz loc_457F7F  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp al bl +
jz loc_45821F  +
mov edx [esp+4Ch+arg_8] +
jmp loc_457F75  +
cmp cl bl +
jz loc_457BF5  +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_457F6D  +
cmp dword_4738A0 0 +
jnz loc_457B77  +
mov eax [esp+4Ch+var_24] +
jmp loc_457BB1  +
mov ds:dword_49A424 0 +
jmp loc_457E3E  +
mov eax [esp+4Ch+arg_4] +
mov edx [ebx] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionSDoesnT +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_457D89  +
mov eax dword_4738A0 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jnz loc_4581A4  +
mov eax [esp+4Ch+arg_8] +
mov dword_47389C ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_457D1C  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_4581CF  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+arg_C] eax +
test bl bl +
mov eax [esp+4Ch+arg_C] +
jz loc_45815A  +
cmp dword ptr [eax+4] 0 +
jnz loc_458211  +
cmp dword_4738A0 0 +
jz loc_45805E  +
mov eax [esp+4Ch+arg_C] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionWSDoesn +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_49A438 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_49A438 eax +
mov eax 3Fh +
jmp loc_457965  +
mov [esp+4Ch+arg_C] ebx +
mov esi [esp+4Ch+var_20] +
movzx ebx byte ptr [esp+4Ch+var_24] +
jmp loc_458013  +
cmp dword_4738A0 0 +
jz loc_457F8C  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov eax [eax] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_48] offset aSUnrecognize_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_4738A4 +
jmp loc_457BB1  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov edx [eax+edi*4] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_49A438 +
jmp loc_457EDE  +
mov eax dword_4738A0 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jz loc_45813E  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+arg_8] +
mov dword_47389C ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_457965  +
cmp dword ptr [eax+4] 1 +
jz loc_4581EC  +
mov ebx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
mov edx [esp+4Ch+arg_10] +
add eax ebx +
test edx edx +
mov ds:dword_49A438 eax +
jz loc_458185  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+8] +
test eax eax +
jz loc_458229  +
mov edi [esp+4Ch+arg_C] +
mov edx [edi+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_457965  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_457FE3  +
mov ds:dword_49A438 0 +
mov eax 57h +
jmp loc_457965  +
mov esi [esp+4Ch+var_34] +
jmp loc_457C5F  +
mov eax dword_4738A4 +
cmp [esp+4Ch+arg_0] eax +
jle loc_458235  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4738A4 edx +
mov eax [ecx+eax*4] +
mov ds:dword_49A424 eax +
jmp loc_458164  +
add esi 1 +
mov ds:dword_49A424 esi +
jmp loc_458164  +
movzx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_457BF5  +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+0Ch] +
jmp loc_457965  +
cmp dword_4738A0 0 +
jz loc_458268  +
mov edi [esp+4Ch+arg_4] +
mov edx [edi+eax*4-4] +
mov eax [edi] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_49A438 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_49A438 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_457930  +
jmp loc_457F03  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_457560  +
add esp 2Ch +
retn   +
***
mov eax [esp+arg_0] +
mov off_4738A8 eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 18h +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
test esi esi +
jz loc_4584B6  +
mov ecx [esi] +
test ecx ecx +
jz loc_4584AB  +
xor eax eax +
nop   +
add eax 1 +
mov edx [esi+eax*4] +
test edx edx +
jnz loc_458430  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_458340  +
mov [esp+1Ch+var_10] eax +
mov eax [esi] +
test eax eax +
jz loc_4584B2  +
lea ebx [esi+4] +
mov ebp esi +
xor edi edi +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add edi [esp+1Ch+var_10] +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_458340  +
mov [edi] eax +
mov edx [ebp+0] +
mov edi ebx +
mov ebp ebx +
add ebx 4 +
mov [esp+1Ch+var_1C] eax +
sub edi esi +
mov [esp+1Ch+var_18] edx +
call strcpy  +
mov eax [ebx-4] +
test eax eax +
jnz loc_458460  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax+edi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_458441  +
xor edi edi +
jmp loc_458498  +
xor eax eax +
jmp loc_4584A3  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_4584F4  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_4584E6  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_4584D5  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
test ebx ebx +
jz loc_458713  +
mov [esp+2Ch+var_2C] ebx +
xor esi esi +
xor ebp ebp +
call strlen  +
xor edi edi +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_458340  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_14] eax +
jmp loc_458553  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test ds:byte_4922A0[eax+eax] 40h +
jnz loc_458550  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_458696  +
mov eax [esp+2Ch+var_18] +
sub eax 1 +
cmp [esp+2Ch+var_1C] eax +
jge loc_458696  +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebx] +
mov edx [esp+2Ch+var_14] +
test al al +
jnz loc_4585B1  +
jmp loc_4585F6  +
mov [edx] al +
xor esi esi +
add edx 1 +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_4585F6  +
movzx ecx al +
test ds:byte_4922A0[ecx+ecx] 40h +
jz loc_4585CA  +
mov ecx esi +
or ecx edi +
or ecx ebp +
jz loc_4586F0  +
test esi esi +
jnz loc_4585A0  +
cmp al 5Ch +
jz loc_458676  +
test edi edi +
jz loc_458663  +
cmp al 27h +
jz loc_4586D7  +
add ebx 1 +
add edx 1 +
mov [edx-1] al +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_4585B1  +
mov eax [esp+2Ch+var_14] +
mov byte ptr [edx] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_45ED60  +
mov edx [esp+2Ch+var_10] +
add [esp+2Ch+var_1C] 1 +
mov [edx] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
mov dword ptr [eax+edx*4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 40h +
jz loc_458643  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 40h +
jnz loc_458630  +
test al al +
jnz loc_458553  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+var_20] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jz loc_458680  +
cmp al 22h +
jnz loc_4585E6  +
xor ebp ebp +
jmp loc_4585A7  +
mov esi 1 +
jmp loc_4585A7  +
cmp al 27h +
jz loc_4586E0  +
cmp al 22h +
jnz loc_4585E6  +
mov ebp 1 +
jmp loc_4585A7  +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_4586F9  +
shl [esp+2Ch+var_18] 1 +
mov eax [esp+2Ch+var_18] +
shl eax 2 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_2C] eax +
call sub_4583C0  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
mov dword ptr [eax] 0 +
jmp loc_45858C  +
xor edi edi +
jmp loc_4585A7  +
mov edi 1 +
jmp loc_4585A7  +
xor esi esi +
xor ebp ebp +
jmp loc_4585F6  +
mov [esp+2Ch+var_2C] 20h +
call sub_458340  +
mov [esp+2Ch+var_18] 8 +
mov [esp+2Ch+var_20] eax +
jmp loc_4586BD  +
mov [esp+2Ch+var_20] 0 +
jmp loc_458657  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov edi [esp+30h] +
test esi esi +
jz loc_45878C  +
mov ebx [edi] +
test ebx ebx +
jnz loc_45875C  +
jmp loc_4587BD  +
cmp al 27h +
jz loc_458777  +
cmp al 22h +
jz loc_458777  +
mov [esp+4] esi +
mov [esp] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_45878C  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_4587A0  +
movzx edx al +
movsx ebp al +
test ds:byte_4922A0[edx+edx] 40h +
jnz loc_458777  +
cmp al 5Ch +
jnz loc_458740  +
mov [esp+4] esi +
mov dword ptr [esp] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_458748  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_45878C  +
add edi 4 +
jmp loc_458733  +
***
xor eax eax +
nop   +
jmp loc_458791  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+48h+arg_0] +
lea ebx [ebp+1] +
mov [esp+48h+var_30] 7D0h +
mov ecx [eax] +
cmp ebx ecx +
jge loc_45880E  +
nop   +
mov eax [esp+48h+arg_4] +
lea edi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_458816  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_4587F0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+48h+var_30] 1 +
jz loc_458A81  +
add eax 1 +
mov [esp+48h+var_44] offset aR +
mov [esp+48h+var_48] eax +
call fopen  +
test eax eax +
mov esi eax +
jz loc_458A08  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_458A00  +
mov [esp+48h+var_48] esi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+48h+var_2C] eax +
jz loc_458A00  +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] esi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_458A00  +
mov edx [esp+48h+var_2C] +
lea eax [edx+1] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] edx +
call sub_458340  +
mov edx [esp+48h+var_28] +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_2C] eax +
call fread  +
mov edx [esp+48h+var_28] +
cmp edx eax +
mov ecx eax +
jz loc_4588EA  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_28] eax +
call ferror  +
mov ecx [esp+48h+var_28] +
test eax eax +
jnz loc_458A00  +
mov eax [esp+48h+var_2C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_458928  +
test ds:byte_4922A0[eax+eax] 40h +
jz loc_458A15  +
mov eax [esp+48h+var_2C] +
jmp loc_45891E  +
test ds:byte_4922A0[edx+edx] 40h +
jz loc_458A15  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_458910  +
mov [esp+48h+var_48] 4 +
call sub_458340  +
mov dword ptr [eax] 0 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_458410  +
xor edx edx +
mov [esp+48h+var_20] 0 +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
mov ecx [esp+48h+arg_0] +
mov eax edx +
mov [esp+48h+var_1C] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+48h+var_44] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call sub_4583C0  +
mov ecx [esp+48h+arg_4] +
mov edx [esp+48h+var_1C] +
mov [esp+48h+var_28] edx +
mov [ecx] eax +
mov ecx [esp+48h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+48h+var_40] ecx +
lea ecx [eax+edi+4] +
lea eax [eax+ebx*4] +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] eax +
call memmove  +
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+var_24] +
add edi [eax] +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+arg_0] +
mov edx [esp+48h+var_28] +
mov edi [esp+48h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [edi] eax +
mov [esp+48h+var_48] ebx +
mov ebx ebp +
call free  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call free  +
nop   +
mov [esp+48h+var_48] esi +
call fclose  +
mov eax [esp+48h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_458807  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call sub_458500  +
mov edx [eax] +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_458410  +
mov edx [esp+48h+var_20] +
test edx edx +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
jz loc_458AAB  +
mov eax [esp+48h+var_24] +
xor edx edx +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_1C] ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ebp ds:0[edx*4] +
jnz loc_458A60  +
mov [esp+48h+var_20] ebp +
mov ebp [esp+48h+var_1C] +
mov [esp+48h+var_28] ecx +
jmp loc_458962  +
mov eax [edx] +
mov [esp+48h+var_44] offset aSErrorTooMany@ +
mov [esp+48h+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+48h+var_48] eax +
call fprintf  +
mov [esp+48h+var_48] 1 +
call sub_45E7E0  +
mov [esp+48h+var_20] 0 +
jmp loc_458962  +
***
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_458AD0  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_457560  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+14h] 1 +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_457560  +
add esp 2Ch +
retn   +
***
push ebx  +
mov edx [eax] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test ds:byte_4922A0[esi+esi] 4 +
jz loc_458BB5  +
lea esi [esi+0] +
lea ecx [ecx+ecx*4] +
mov [eax] edx +
lea ecx [ebx+ecx*2-30h] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test ds:byte_4922A0[esi+esi] 4 +
jnz loc_458B90  +
test ecx ecx +
js loc_458BB5  +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
movsx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_458BE0  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_458C08  +
add edx 1 +
sub eax 30h +
mov [ebx] edx +
pop ebx  +
retn   +
lea eax [edx+1] +
mov [ebx] eax +
movzx eax byte ptr [edx+1] +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_458C08  +
mov eax ebx +
call sub_458B70  +
mov edx [ebx] +
cmp byte ptr [edx] 5Fh +
jnz loc_458C08  +
add edx 1 +
mov [ebx] edx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
movzx edx cl +
test ds:byte_4922A0[edx+edx] 4 +
jz loc_458C80  +
sub ecx 30h +
lea ebx [eax+1] +
mov [ebp+0] ecx +
mov [edi] ebx +
movsx edx byte ptr [eax+1] +
mov eax 1 +
movzx esi dl +
test ds:byte_4922A0[esi+esi] 4 +
jz loc_458C74  +
nop   +
lea esi [esi+0] +
add ebx 1 +
lea eax [ecx+ecx*4] +
lea ecx [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx esi dl +
test ds:byte_4922A0[esi+esi] 4 +
jnz loc_458C50  +
cmp dl 5Fh +
mov eax 1 +
jz loc_458C87  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov [edi] ebx +
mov [ebp+0] ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx [ebx+10h] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_458CC9  +
mov eax [ebx+8] +
sub edx 1 +
mov [ebx+10h] edx +
lea ecx [esi-4] +
mov eax [eax+esi] +
test eax eax +
jnz loc_458D26  +
mov esi ecx +
test edx edx +
jg loc_458CB4  +
mov edx [ebx+14h] +
mov edi [ebx+0Ch] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_458CF2  +
mov ecx [edi+esi] +
sub edx 1 +
mov [ebx+14h] edx +
lea eax [esi-4] +
test ecx ecx +
jnz loc_458D40  +
mov esi eax +
test edx edx +
jg loc_458CE0  +
test edi edi +
jz loc_458D09  +
mov [esp+10h+var_10] edi +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+8] +
test eax eax +
jz loc_458D1F  +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] eax +
call free  +
mov eax [ebx+8] +
mov dword ptr [eax+esi] 0 +
jmp loc_458CA8  +
mov [esp+10h+var_10] ecx +
call free  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+esi] 0 +
jmp loc_458CCD  +
***
sub esp 18h +
mov edx [eax+14h] +
mov eax [eax+1Ch] +
cmp edx eax +
jl loc_458DC1  +
test eax eax +
jz loc_458DA6  +
lea edx [eax+eax] +
mov [ebx+1Ch] edx +
mov edx [ebx+0Ch] +
shl eax 3 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_4583C0  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
mov dword ptr [eax+edx*4] 0 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov dword ptr [ebx+1Ch] 5 +
mov [esp+18h+var_18] 14h +
call sub_458340  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
jmp loc_458D92  +
mov eax [ebx+0Ch] +
jmp loc_458D92  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+18h] +
cmp [ebx+10h] eax +
jl loc_458E04  +
test eax eax +
jz loc_458E40  +
lea edx [eax+eax] +
mov [ebx+18h] edx +
mov edx [ebx+8] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_4583C0  +
mov [ebx+8] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_458340  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+10h] +
mov edx [ebx+8] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+10h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+18h] 5 +
mov [esp+28h+var_28] 14h +
call sub_458340  +
mov [ebx+8] eax +
jmp loc_458E04  +
***
cmp eax 56h +
jz loc_458E86  +
cmp eax 75h +
jz loc_458E80  +
cmp eax 43h +
jz loc_458E77  +
sub esp 0Ch +
call abort  +
mov eax 1 +
retn   +
mov eax 4 +
retn   +
mov eax 2 +
retn   +
***
cmp eax 7 +
push edi  +
push ebx  +
sub esp 14h +
lea edx [eax+20h] +
lea eax [eax+4] +
call sub_458EF0  +
mov eax [esi+4] +
test eax eax +
jz loc_458F6F  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_458FA5  +
mov edx [esi+44h] +
test edx edx +
jle loc_458F96  +
xor ebx ebx +
nop   +
mov eax [eax+ebx*4] +
add ebx 1 +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+40h] +
cmp [esi+44h] ebx +
jg loc_458F80  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+40h] 0 +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_458FE0  +
mov eax [ebx] +
test eax eax +
jz loc_458FD1  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx] 0 +
mov ebx [esi+4Ch] +
mov [esp+18h+var_18] ebx +
call free  +
mov dword ptr [esi+4Ch] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
lea eax [ecx+1] +
mov [esp+28h+var_28] eax +
call sub_458340  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov ebx eax +
call memcpy  +
mov eax [edi] +
mov edx [esp+28h+arg_0] +
mov byte ptr [ebx+esi] 0 +
mov [eax+edx*4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_459070  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_459069  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_4583C0  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_458340  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_1C] edx +
mov edx ecx +
call sub_459030  +
mov eax [edi+4] +
mov esi [edi] +
lea ebx [eax-1] +
cmp ebx esi +
jb loc_459102  +
movzx eax byte ptr [ebx] +
sub ebx 1 +
mov [ebx+ebp+1] al +
mov esi [edi] +
cmp ebx esi +
jnb loc_4590F2  +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_20] ebp +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call memcpy  +
add [edi+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_459130  +
***
push ebx  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_459030  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 44h +
lea ebx [esp+48h+var_29] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] offset unk_490F4C +
mov [esp+48h+var_48] ebx +
call sprintf  +
cmp byte ptr [esp+48h+var_29] 0 +
jz loc_4591CF  +
mov edx ebx +
mov eax esi +
call sub_459160  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax] +
movzx ecx byte ptr [eax] +
cmp cl 2Dh +
jz loc_459260  +
cmp cl 2Bh +
jz loc_459250  +
movzx edx cl +
xor eax eax +
test ds:byte_4922A0[edx+edx] 4 +
jnz loc_459228  +
jmp loc_459245  +
mov ecx [ebx] +
lea eax [ecx+1] +
mov [ebx] eax +
movzx ecx byte ptr [ecx+1] +
movzx eax cl +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_459240  +
test cl cl +
mov ds:byte_49A43C cl +
jz loc_459210  +
mov edx offset byte_49A43C +
mov eax esi +
call sub_459160  +
jmp loc_459210  +
mov eax 1 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_4591F8  +
mov edx offset byte_49A43C +
mov eax esi +
mov ds:byte_49A43C 2Dh +
call sub_459160  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_4591F8  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [edx] +
cmp eax ecx +
jz loc_4592C5  +
mov esi ecx +
sub esi eax +
mov eax ebx +
mov edx esi +
call sub_459030  +
mov edx [edi] +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ebp +
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov esi ebx +
call sub_458F40  +
mov eax ebp +
call sub_458CA0  +
test ebp 1 +
mov eax 54h +
jnz loc_45958B  +
test edi 2 +
jnz loc_459576  +
mov ecx eax +
xor edx edx +
shr ecx 2 +
test al 2 +
movs   +
jz loc_459320  +
movzx edx word ptr [esi] +
mov [edi] dx +
mov edx 2 +
test al 1 +
jz loc_45932B  +
movzx eax byte ptr [esi+edx] +
mov [edi+edx] al +
mov eax [ebx+24h] +
test eax eax +
jnz loc_4594A8  +
mov eax [ebx+20h] +
xor esi esi +
test eax eax +
jle loc_459391  +
nop   +
mov eax [ebx+4] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+4] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_458340  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+4] +
mov ecx [eax+esi*4] +
mov eax [ebp+4] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+20h] esi +
jg loc_459340  +
mov eax [ebx+18h] +
test eax eax +
jnz loc_459563  +
mov eax [ebx+10h] +
xor esi esi +
test eax eax +
jle loc_4593F6  +
mov eax [ebx+8] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+8] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_458340  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+8] +
mov ecx [eax+esi*4] +
mov eax [ebp+8] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+10h] esi +
jg loc_4593A5  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_459550  +
mov edi [ebx+14h] +
xor esi esi +
test edi edi +
jle loc_459461  +
lea esi [esi+0] +
mov eax [ebx+0Ch] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+0Ch] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_458340  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+0Ch] +
mov ecx [eax+esi*4] +
mov eax [ebp+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+14h] esi +
jg loc_459410  +
mov eax [ebx+44h] +
test eax eax +
jnz loc_4594C0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_459544  +
mov [esp+28h+var_28] 0Ch +
call sub_458340  +
mov [ebp+4Ch] eax +
mov edx [ebx+4Ch] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov ecx [edx+4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_459290  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_458340  +
mov [ebp+4] eax +
jmp loc_459336  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_458340  +
mov edx [ebx+44h] +
test edx edx +
mov [ebp+40h] eax +
jle loc_459468  +
mov [esp+28h+var_1C] eax +
xor esi esi +
jmp loc_4594E7  +
mov eax [ebp+40h] +
mov [esp+28h+var_1C] eax +
mov eax [ebx+40h] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [esp+28h+var_1C] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_458340  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+40h] +
mov ecx [eax+esi*4] +
mov eax [ebp+40h] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+44h] esi +
jg loc_4594E0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jnz loc_459473  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_458340  +
mov [ebp+0Ch] eax +
jmp loc_459401  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_458340  +
mov [ebp+8] eax +
jmp loc_45939C  +
movzx edx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] dx +
jmp loc_459308  +
movzx eax byte ptr [ebx] +
lea edi [ebp+1] +
lea esi [ebx+1] +
mov [ebp+0] al +
mov eax 53h +
jmp loc_4592FC  +
***
jmp sub_4595B0  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+24h] +
cmp [ebx+20h] eax +
jl loc_4595DF  +
test eax eax +
jnz loc_459617  +
mov dword ptr [ebx+24h] 3 +
mov [esp+28h+var_28] 0Ch +
call sub_458340  +
mov [ebx+4] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_458340  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+20h] +
mov edx [ebx+4] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+20h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+eax] +
mov [ebx+24h] edx +
mov edx [ebx+4] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_4583C0  +
mov [ebx+4] eax +
jmp loc_4595DF  +
***
mov eax [esp+4] +
mov byte_4738AC al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+30h] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] eax +
jmp loc_459678  +
add ebx 1 +
cmp ebx 4Fh +
jz loc_4596D0  +
lea esi [ebx+ebx*2] +
mov ebp ds:off_491C84[esi*4] +
lea edi ds:0[esi*4] +
mov [esp] ebp +
call strlen  +
cmp [esp+0Ch] eax +
jnz loc_459670  +
mov eax [esp+34h] +
xor eax ds:dword_491C88[esi*4] +
test al 2 +
jnz loc_459670  +
mov eax [esp+0Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_459670  +
mov eax ds:off_491C80[edi] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+arg_0] +
mov edx offset off_4919E0 +
cmp ecx 0FFFFFFFFh +
jnz loc_4596F4  +
jmp loc_459700  +
cmp eax ecx +
jz loc_459700  +
add edx 0Ch +
mov eax [edx+4] +
test eax eax +
jnz loc_4596F0  +
retn   +
mov dword_4738B0 ecx +
mov eax ecx +
retn   +
***
mov esi 0FFFFFFFFh +
push ebx  +
mov ebx offset off_4919E0 +
sub esp 10h +
mov edi [esp+14h+arg_0] +
jmp loc_459730  +
add ebx 0Ch +
mov esi [ebx+4] +
test esi esi +
jz loc_459742  +
mov eax [ebx] +
mov [esp+14h+var_14] edi +
mov [esp+14h+var_10] eax +
call strcmp  +
test eax eax +
jnz loc_459726  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi offset a_ada_ +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+38h+arg_0] +
mov eax [esp+38h+arg_0] +
cmps   +
setnbe cl  +
setb dl  +
add eax 5 +
cmp cl dl +
cmovnz eax [esp+38h+arg_0] +
mov [esp+38h+arg_0] eax +
movzx eax byte ptr [eax] +
test ds:byte_4922A0[eax+eax] 8 +
jz loc_4599A7  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 8 +
mov [esp+38h+var_38] eax +
call sub_458340  +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_1C] eax +
mov esi eax +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 8 +
jnz loc_4598F4  +
cmp al 4Fh +
jnz loc_4599A7  +
mov edx 4 +
mov edi offset aOabs +
mov [esp+38h+var_20] esi +
xor ebp ebp +
mov esi edx +
jmp loc_4597FD  +
add ebp 1 +
mov edi ds:off_4917E0[ebp*8] +
test edi edi +
jz loc_4599A7  +
mov [esp+38h+var_38] edi +
call strlen  +
mov esi eax +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_4597E1  +
mov edx esi +
mov esi [esp+38h+var_20] +
add ebx edx +
mov edx ds:off_4917E4[ebp*8] +
lea ebp [esi+1] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_20] edx +
call strlen  +
mov edx [esp+38h+var_20] +
mov byte ptr [esi] 22h +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] edx +
mov edi eax +
add edi ebp +
mov [esp+38h+var_30] eax +
lea esi [edi+1] +
call memcpy  +
mov byte ptr [edi] 22h +
movzx eax byte ptr [ebx] +
cmp al 54h +
jz loc_459983  +
cmp al 45h +
jnz loc_459923  +
cmp byte ptr [ebx+1] 0 +
jz loc_4599A7  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
mov edi ebx +
cmp byte ptr [esp+38h+var_20] 0 +
jz loc_45994E  +
cmp byte ptr [ebx+1] 0 +
jz loc_4599A7  +
cmp al 58h +
jz loc_45995E  +
cmp al 53h +
jz loc_4599F0  +
cmp al 44h +
nop   +
jz loc_459B70  +
cmp al 5Fh +
jnz loc_459C7C  +
movzx eax byte ptr [edi+1] +
cmp al 5Fh +
jnz loc_459B23  +
movzx eax byte ptr [edi+2] +
lea ebx [edi+2] +
movzx ecx al +
test ds:byte_4922A0[ecx+ecx] 4 +
jnz loc_459BA6  +
cmp al 5Fh +
jz loc_459A50  +
mov byte ptr [edx] 2Eh +
movzx eax byte ptr [ebx] +
lea esi [edx+1] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 8 +
jz loc_4597C5  +
add esi 1 +
add ebx 1 +
mov [esi-1] al +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 0Ch +
jnz loc_4598F4  +
cmp al 5Fh +
jnz loc_459853  +
movzx edx byte ptr [ebx+1] +
test ds:byte_4922A0[edx+edx] 0Ch +
jnz loc_4598F4  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
cmp al 50h +
setz cl  +
mov edi ebx +
or cl byte ptr [esp+38h+var_20] +
jz loc_45994E  +
cmp byte ptr [ebx+1] 0 +
jz loc_459BF7  +
cmp byte ptr [esp+38h+var_20] 0 +
jnz loc_459883  +
cmp al 53h +
jz loc_459883  +
cmp al 58h +
jnz loc_459895  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
cmp al 6Eh +
jnz loc_459B07  +
lea esi [esi+0] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_459970  +
cmp al 6Eh +
jz loc_459970  +
jmp loc_459895  +
cmp byte ptr [ebx+1] 4Bh +
jnz loc_45986D  +
movzx eax byte ptr [ebx+2] +
cmp al 42h +
jz loc_459B15  +
cmp al 5Fh +
jnz loc_4599A7  +
cmp byte ptr [ebx+3] 5Fh +
jz loc_459AE7  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 3 +
mov [esp+38h+var_38] eax +
call sub_458340  +
mov ebx eax +
mov eax [esp+38h+arg_0] +
cmp byte ptr [eax] 3Ch +
jz loc_459AD1  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aS_5 +
mov [esp+38h+var_30] eax +
call sprintf  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_4599A7  +
movzx edx byte ptr [edi+2] +
test dl dl +
jz loc_459A05  +
cmp dl 5Fh +
jnz loc_4599A7  +
cmp al 4Fh +
jz loc_459BD6  +
lea esi [esi+0] +
jle loc_459AF5  +
cmp al 52h +
jz loc_459BE0  +
cmp al 57h +
jnz loc_4599A7  +
mov ebp offset aWrite +
mov [esp+38h+var_34] ebp +
lea ebx [edi+2] +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebp +
call strlen  +
lea edx [esi+eax] +
movzx eax byte ptr [edi+2] +
mov edi ebx +
jmp loc_4598A6  +
cmp byte ptr [edi+3] 5Fh +
jz loc_4598DA  +
mov ebp edx +
mov eax 6 +
mov edi offset a_elabb +
xor esi esi +
jmp loc_459A8A  +
add esi 1 +
mov edi ds:off_491720[esi*8] +
test edi edi +
jz loc_4599A7  +
mov [esp+38h+var_38] edi +
call strlen  +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_459A70  +
mov esi ds:off_491724[esi*8] +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] eax +
mov ebx eax +
call memcpy  +
add ebp ebx +
mov byte ptr [ebp+0] 0 +
mov eax [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] eax +
call strcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [esi] 2Eh +
add ebx 4 +
add esi 1 +
jmp loc_4597B1  +
cmp al 49h +
jnz loc_4599A7  +
mov ebp offset aInput +
jmp loc_459A27  +
cmp al 62h +
jz loc_459970  +
nop   +
jmp loc_459895  +
cmp byte ptr [ebx+3] 0 +
jnz loc_4599A7  +
mov ebp esi +
jmp loc_459AC1  +
cmp al 45h +
mov ebp edx +
jnz loc_459BEA  +
movzx edx byte ptr [edi+2] +
lea eax [edi+2] +
movzx ecx dl +
test ds:byte_4922A0[ecx+ecx] 4 +
jz loc_459B54  +
add eax 1 +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:byte_4922A0[ecx+ecx] 4 +
jnz loc_459B41  +
cmp dl 73h +
jnz loc_4599A7  +
cmp byte ptr [eax+1] 0 +
jnz loc_4599A7  +
jmp loc_459AC1  +
movzx eax byte ptr [edi+1] +
cmp al 41h +
jz loc_459C6C  +
cmp al 46h +
mov ebx offset a_finalize +
jnz loc_4599A7  +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebx +
call strlen  +
add eax esi +
mov ebp eax +
jmp loc_459AC1  +
mov ebp edx +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jnz loc_459BD2  +
cmp al 5Fh +
jnz loc_459C05  +
movzx eax byte ptr [edi+1] +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_4599A7  +
mov ebx edi +
jmp loc_459BA8  +
mov ebp offset aOutput +
jmp loc_459A27  +
mov ebp offset aRead +
jmp loc_459A27  +
cmp al 42h +
jnz loc_4599A7  +
jmp loc_459B2D  +
mov ebp esi +
lea esi [esi+0] +
jmp loc_459AC1  +
cmp al 58h +
jnz loc_459C22  +
movzx eax byte ptr [ebx+2] +
lea edi [ebx+2] +
cmp al 6Eh +
jnz loc_459C76  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_459C14  +
cmp al 6Eh +
jz loc_459C14  +
cmp al 2Eh +
jnz loc_459C5F  +
movzx eax byte ptr [edi+1] +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_4599A7  +
movzx eax byte ptr [edi+2] +
lea edx [edi+2] +
movzx ecx al +
test ds:byte_4922A0[ecx+ecx] 4 +
jz loc_459C5F  +
add edx 1 +
movzx eax byte ptr [edx] +
movzx ecx al +
test ds:byte_4922A0[ecx+ecx] 4 +
jnz loc_459C4C  +
test al al +
jnz loc_4599A7  +
jmp loc_459AC1  +
mov ebx offset a_adjust +
jmp loc_459B89  +
cmp al 62h +
jz loc_459C14  +
jmp loc_459C22  +
mov ebp edx +
nop   +
jmp loc_459C22  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edx dword_4738B0 +
mov esi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_4] +
cmp edx 0FFFFFFFFh +
jz loc_459D60  +
lea ebx [esp+7Ch+var_60] +
xor eax eax +
mov ecx 15h +
mov edi ebx +
test ebp 1FF04h +
stos   +
jz loc_459D11  +
mov [esp+7Ch+var_60] ebp +
mov ecx ebp +
test [esp+7Ch+var_60] 4100h +
jnz loc_459D29  +
test cl 4 +
jnz loc_459D70  +
test ch 80h +
jnz loc_459D85  +
and ecx 10000h +
jnz loc_459D44  +
mov edx esi +
mov eax ebx +
call sub_45E110  +
mov esi eax +
mov eax ebx +
call sub_458CA0  +
mov eax esi +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
and edx 1FF04h +
mov ecx edx +
or ecx ebp +
mov [esp+7Ch+var_60] ecx +
test [esp+7Ch+var_60] 4100h +
jz loc_459CDB  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] esi +
call sub_46C980  +
test eax eax +
jnz loc_459D09  +
mov ecx [esp+7Ch+var_60] +
test ch 40h +
jz loc_459CDB  +
jmp loc_459D09  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_46E6B0  +
test eax eax +
jz loc_459CF5  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_45ED60  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_46C9C0  +
test eax eax +
jnz loc_459D09  +
mov ecx [esp+7Ch+var_60] +
jmp loc_459CE4  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_459750  +
jmp loc_459D09  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov edx [edx] +
mov ecx [esp+54h+arg_0] +
movzx eax byte ptr [edx] +
cmp al 59h +
jz loc_459E90  +
cmp ecx 3 +
jz loc_459EF5  +
cmp ecx 5 +
jz loc_459DF8  +
cmp ecx 4 +
nop   +
jz loc_459E57  +
cmp ecx 6 +
jz loc_45A040  +
lea edx [ecx-1] +
cmp edx 1 +
jbe loc_459F98  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Dh +
jz loc_45A136  +
mov edx offset asc_490F9A +
mov ecx 1 +
mov eax esi +
call sub_4590A0  +
mov eax ebx +
call sub_458B70  +
xor edx edx +
test eax eax +
jle loc_459E4D  +
mov byte ptr [esp+54h+var_34] al +
mov ecx 1 +
mov eax esi +
lea edx [esp+54h+var_34] +
mov byte ptr [esp+54h+var_34+1] 0 +
call sub_4590A0  +
mov edx offset asc_490F9A +
mov ecx 1 +
mov eax esi +
call sub_4590A0  +
mov edx 1 +
add esp 4Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_458B70  +
test eax eax +
mov edx eax +
jz loc_45A1D2  +
xor eax eax +
cmp edx 1 +
jnz loc_459DF0  +
mov eax esi +
mov ecx 4 +
mov edx offset aTrue_0 +
call sub_4590A0  +
mov eax 1 +
jmp loc_459DF0  +
add edx 1 +
mov eax ebx +
mov [ebx] edx +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_45A204  +
mov edx [edi+40h] +
test edx edx +
jz loc_459EB7  +
cmp eax [edi+44h] +
jge loc_45A204  +
mov eax ebx +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
jz loc_45A204  +
mov eax [edi+40h] +
test eax eax +
jz loc_45A20E  +
mov edx [eax+ebp*4] +
test edx edx +
jz loc_459DEB  +
cmp byte ptr [edx] 0 +
jz loc_459DEB  +
mov eax esi +
call sub_459160  +
lea esi [esi+0] +
jmp loc_459DEB  +
cmp al 45h +
jz loc_45A1ED  +
cmp al 4Bh +
nop   +
jz loc_45A100  +
cmp al 51h +
jz loc_45A100  +
cmp al 5Fh +
jz loc_45A1B0  +
cmp al 6Dh +
mov [esp+54h+var_3C] 1 +
jz loc_45A221  +
mov eax ebx +
mov edi 1 +
call sub_458B70  +
mov ebp eax +
xor eax eax +
cmp ebp 0FFFFFFFFh +
jz loc_459DF0  +
lea edx [esp+54h+var_34] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] offset aD +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
cmp byte ptr [esp+54h+var_34] 0 +
jnz loc_45A14C  +
test edi edi +
jnz loc_459F77  +
cmp ebp 9 +
jle loc_459DEB  +
mov eax [esp+54h+var_3C] +
test eax eax +
jnz loc_459DEB  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_459DEB  +
add eax 1 +
mov [ebx] eax +
jmp loc_459DEB  +
cmp al 51h +
jz loc_45A100  +
mov eax ebx +
mov [esp+54h+var_3C] ecx +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_45A204  +
test eax eax +
mov ecx [esp+54h+var_3C] +
jz loc_45A120  +
lea eax [eax+1] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_38] ecx +
call sub_458340  +
mov [esp+54h+var_4C] ebp +
mov edx eax +
mov [esp+54h+var_3C] eax +
mov eax [ebx] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call strncpy  +
mov edx [esp+54h+var_3C] +
mov byte ptr [edx+ebp] 0 +
mov eax [edi] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call sub_459C90  +
mov ecx [esp+54h+var_38] +
cmp ecx 1 +
mov edi eax +
jz loc_45A284  +
test edi edi +
jz loc_45A25F  +
cmp byte ptr [edi] 0 +
jnz loc_45A23A  +
mov [esp+54h+var_54] edi +
call free  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
add [ebx] ebp +
mov eax 1 +
jmp loc_459DF0  +
cmp al 45h +
jz loc_45A248  +
cmp al 6Dh +
jnz loc_45A087  +
mov edx offset asc_490F95 +
mov eax esi +
mov ecx 1 +
call sub_4590A0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
jmp loc_45A087  +
mov ecx 1 +
mov eax esi +
call sub_4590A0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test ds:byte_4922A0[ecx+ecx] 4 +
jnz loc_45A070  +
cmp al 2Eh +
jz loc_45A158  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
cmp al 65h +
jnz loc_459DEB  +
mov edx offset aE +
mov eax esi +
mov ecx 1 +
call sub_4590A0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_459DEB  +
mov ecx 1 +
mov eax esi +
call sub_4590A0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
test ds:byte_4922A0[eax+eax] 4 +
jnz loc_45A0D3  +
jmp loc_459DEB  +
mov [esp+54h+var_50] 1 +
mov ecx esi +
mov edx ebx +
mov [esp+54h+var_54] 0 +
mov eax edi +
call sub_45AA70  +
jmp loc_459DF0  +
mov ecx 1 +
mov edx offset a0 +
mov eax esi +
call sub_4590A0  +
jmp loc_45A033  +
mov cl 1 +
mov edx offset asc_490F95 +
mov eax esi +
call sub_4590A0  +
add dword ptr [ebx] 1 +
jmp loc_459E00  +
mov eax esi +
call sub_459160  +
jmp loc_459F6A  +
mov ecx 1 +
mov edx offset a_ +
mov eax esi +
call sub_4590A0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
movzx ecx al +
test ds:byte_4922A0[ecx+ecx] 4 +
jz loc_45A0A1  +
mov ecx 1 +
mov eax esi +
call sub_4590A0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test ds:byte_4922A0[ecx+ecx] 4 +
jnz loc_45A185  +
jmp loc_45A0A1  +
cmp byte ptr [edx+1] 6Dh +
jz loc_45A295  +
mov eax ebx +
xor edi edi +
call sub_458BC0  +
mov [esp+54h+var_3C] 1 +
mov ebp eax +
jmp loc_459F34  +
mov eax esi +
mov ecx 5 +
mov edx offset aFalse_0 +
call sub_4590A0  +
mov eax 1 +
jmp loc_459DF0  +
mov [esp+54h+var_54] 3 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_45A2C0  +
jmp loc_459DF0  +
mov eax 0FFFFFFFFh +
jmp loc_459DF0  +
mov eax esi +
mov edx ebp +
call sub_4591A0  +
mov eax 1 +
jmp loc_459DF0  +
mov ecx 1 +
mov edx offset asc_490F95 +
mov eax esi +
call sub_4590A0  +
add dword ptr [ebx] 1 +
jmp loc_459F26  +
mov edx edi +
mov eax esi +
call sub_459160  +
jmp loc_45A01F  +
mov [esp+54h+var_54] 6 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_45A2C0  +
jmp loc_459DF0  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_45A027  +
cmp byte ptr [eax] 0 +
nop   +
jz loc_45A027  +
mov edx eax +
mov eax esi +
call sub_459160  +
jmp loc_45A027  +
mov edx offset asc_490FAD +
mov eax esi +
call sub_4590A0  +
jmp loc_45A00E  +
mov ecx 1 +
mov edx offset asc_490F95 +
mov eax esi +
call sub_4590A0  +
add dword ptr [ebx] 2 +
mov [esp+54h+var_3C] 0 +
jmp loc_459F26  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax ecx +
mov [esp+2Ch+var_14] edx +
mov edx offset asc_490FAF +
mov [esp+2Ch+var_18] ecx +
mov ecx 1 +
call sub_4590A0  +
mov edx [ebx] +
mov [esp+2Ch+var_20] edx +
add edx 1 +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov [ebx] edx +
mov ebx 1 +
xor edx edx +
mov eax ebx +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jz loc_45A3F5  +
nop   +
test cl cl +
jz loc_45A428  +
test edx edx +
jz loc_45A3BC  +
mov eax [esp+2Ch+var_1C] +
mov esi offset off_491C80 +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_20] eax +
jmp loc_45A34F  +
add ebx 1 +
add esi 0Ch +
cmp ebx 4Fh +
jz loc_45A428  +
mov ebp [esi] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
cmp [esp+2Ch+var_20] eax +
mov edi eax +
jb loc_45A340  +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_45A340  +
mov eax [esp+2Ch+var_18] +
mov edx offset asc_490FB1 +
mov ecx 1 +
call sub_4590A0  +
lea eax [ebx+ebx*2] +
mov edx ds:off_491C84[eax*4] +
test edx edx +
jz loc_45A3A3  +
cmp byte ptr [edx] 0 +
jnz loc_45A434  +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_490FB1 +
call sub_4590A0  +
mov eax [esp+2Ch+var_14] +
add [eax] edi +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
mov edx esi +
call sub_459DA0  +
test eax eax +
jz loc_45A41B  +
mov edx [esi] +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov edx 1 +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jnz loc_45A310  +
mov ebx eax +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_490FB3 +
call sub_4590A0  +
mov eax [esp+2Ch+var_14] +
add dword ptr [eax] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax] +
cmp byte ptr [eax] 57h +
jz loc_45A3F7  +
add esp 2Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
call sub_459160  +
jmp loc_45A3A3  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] eax +
mov eax [edx] +
mov [esp+58h+var_4C] ecx +
mov ecx [esp+58h+arg_4] +
lea edx [eax+1] +
test ecx ecx +
mov [ebp+0] edx +
jz loc_45A5A5  +
cmp byte ptr [eax+1] 7Ah +
jz loc_45A521  +
mov eax ebp +
call sub_458B70  +
test eax eax +
mov ebx eax +
mov [esp+58h+var_34] eax +
jle loc_45A6C4  +
mov edx [ebp+0] +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_48] edx +
call strlen  +
cmp ebx eax +
jg loc_45A6C4  +
mov eax [esp+58h+var_40] +
mov edx [esp+58h+var_48] +
test byte ptr [eax] 4 +
jz loc_45A4CC  +
mov edi offset aJarray1z +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_45A9AC  +
mov eax [esp+58h+var_4C] +
mov ecx ebx +
xor esi esi +
call sub_4590A0  +
mov eax [esp+58h+arg_0] +
mov ecx [esp+58h+var_34] +
mov edx [ebp+0] +
test eax eax +
jz loc_45A4F0  +
test ecx ecx +
jnz loc_45A9BE  +
add ecx edx +
test esi esi +
mov [ebp+0] ecx +
jz loc_45A6A3  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_458C10  +
test eax eax +
jz loc_45A6C4  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 1 +
jmp loc_45A5DE  +
add eax 3 +
mov [ebp+0] eax +
mov eax ebp +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_45A6C4  +
mov eax [esp+58h+var_40] +
mov edx [eax+40h] +
test edx edx +
jz loc_45A54D  +
cmp ebx [eax+44h] +
jge loc_45A6C4  +
mov eax ebp +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
jz loc_45A6C4  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
test eax eax +
jz loc_45AA42  +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_45A581  +
cmp byte ptr [edx] 0 +
jz loc_45A581  +
mov eax [esp+58h+var_4C] +
call sub_459160  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_45A5A5  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_45A5A5  +
cmp byte ptr [edx] 0 +
jz loc_45A5A5  +
mov eax [esp+58h+arg_0] +
call sub_459160  +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_490FC4+2) +
call sub_459160  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_458C10  +
test eax eax +
jz loc_45A6C4  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45A930  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 0 +
test eax eax +
jle loc_45A660  +
mov edx [ebp+0] +
xor ebx ebx +
mov esi [esp+58h+var_40] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_45A79F  +
cmp al 7Ah +
jz loc_45A7F1  +
mov edx ebp +
mov eax esi +
lea ecx [esp+58h+var_30] +
call sub_45AED0  +
mov edx [esp+58h+var_30] +
test edx edx +
mov edi eax +
jz loc_45A635  +
mov [esp+58h+var_58] edx +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
test edi edi +
jz loc_45A660  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45A6D0  +
mov ecx [esp+58h+var_4C] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_58] edi +
call sub_459DA0  +
mov edi eax +
test edi edi +
jnz loc_45A776  +
nop   +
xor edi edi +
mov ebx [esp+58h+var_3C] +
test ebx ebx +
jnz loc_45A980  +
mov eax [esp+58h+var_4C] +
mov eax [eax+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_45A9D3  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_490FC4 +
call sub_459160  +
mov ecx [esp+58h+arg_4] +
test ecx ecx +
jnz loc_45A8E5  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_490FC4+2) +
call sub_459160  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_458C10  +
test eax eax +
jnz loc_45A5D2  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+58h+var_58] edi +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
call sub_459DA0  +
test eax eax +
mov edi eax +
jz loc_45A993  +
mov eax [esi+40h] +
mov edx [esp+58h+var_20] +
sub edx [esp+58h+var_24] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_458340  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_24] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_24] +
mov ecx [esp+58h+var_20] +
call sub_459290  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45A776  +
mov [esp+58h+var_58] eax +
call free  +
add ebx 1 +
cmp [esp+58h+var_34] ebx +
jle loc_45A662  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_490FBE +
call sub_459160  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jnz loc_45A5F6  +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
lea ecx [esp+58h+var_30] +
mov edx ebp +
call sub_45AED0  +
test eax eax +
mov edi eax +
jnz loc_45A870  +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_45A657  +
mov [esp+58h+var_58] eax +
call free  +
test edi edi +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
jnz loc_45A776  +
jmp loc_45A660  +
mov ecx [esp+58h+var_4C] +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
mov edx ebp +
call sub_45C690  +
test eax eax +
mov edi eax +
jz loc_45A660  +
mov eax ebp +
call sub_458B70  +
test eax eax +
mov [esp+58h+var_48] eax +
jle loc_45A776  +
mov eax [ebp+0] +
mov [esp+58h+var_58] eax +
call strlen  +
cmp [esp+58h+var_48] eax +
jg loc_45A776  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+58h+var_4C] +
mov edx [ebp+0] +
mov ecx [esp+58h+var_48] +
call sub_4590A0  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45A9E6  +
mov eax [esp+58h+var_48] +
add [ebp+0] eax +
jmp loc_45A776  +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
call sub_459290  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_45A7BC  +
mov eax [esi+40h] +
mov edx [esp+58h+var_2C] +
sub edx [esp+58h+var_30] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_458340  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_30] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
jmp loc_45A7BC  +
mov edx [esp+58h+arg_8] +
test edx edx +
jz loc_45A699  +
mov ebp [esp+58h+var_40] +
mov eax ebp +
call sub_458D60  +
xor ecx ecx +
mov esi eax +
mov eax [esp+58h+var_4C] +
mov ebx [eax+4] +
mov edx [eax] +
mov [esp+58h+var_58] esi +
mov eax ebx +
sub eax edx +
cmp edx ebx +
cmovnz ecx eax +
mov eax ebp +
add eax 0Ch +
call sub_458FF0  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_34] +
shl eax 2 +
mov [esp+58h+var_58] eax +
call sub_458340  +
mov ecx [esp+58h+var_34] +
mov esi [esp+58h+var_40] +
test ecx ecx +
mov [esi+44h] ecx +
mov [esi+40h] eax +
jle loc_45AA35  +
xor edx edx +
mov ebx esi +
jmp loc_45A963  +
mov eax [ebx+40h] +
mov dword ptr [eax+edx*4] 0 +
add edx 1 +
cmp edx ecx +
jnz loc_45A960  +
mov [esp+58h+var_3C] 0 +
jmp loc_45A5E2  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_490FC1 +
call sub_459160  +
jmp loc_45A68D  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45A660  +
mov [esp+58h+var_58] eax +
call free  +
jmp loc_45A660  +
cmp [esp+58h+arg_0] 0 +
mov ecx ebx +
mov esi 1 +
jz loc_45A4F0  +
mov eax [esp+58h+arg_0] +
call sub_4590A0  +
mov edx [ebp+0] +
mov ecx [esp+58h+var_34] +
jmp loc_45A4F0  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_490FB1 +
call sub_459160  +
jmp loc_45A67F  +
mov eax [esi+40h] +
lea edx [eax+ebx*4] +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_44] edx +
add eax 1 +
mov [esp+58h+var_58] eax +
call sub_458340  +
mov edx [esp+58h+var_44] +
mov ecx [esp+58h+var_48] +
mov [edx] eax +
mov eax [esi+40h] +
mov edx [ebp+0] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] ecx +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov ecx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+ecx] 0 +
jmp loc_45A860  +
mov [esp+58h+var_3C] 0 +
jmp loc_45A660  +
mov eax [esp+58h+var_4C] +
mov edx ebx +
call sub_4591A0  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_45A5A5  +
mov eax [esp+58h+arg_0] +
mov edx ebx +
call sub_4591A0  +
jmp loc_45A5A5  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] ecx +
call sub_458D60  +
mov ecx [esp+58h+arg_0] +
test ecx ecx +
mov [esp+58h+var_3C] eax +
jz loc_45AAA2  +
test byte ptr [esi+28h] 1 +
jz loc_45AD44  +
mov [esp+58h+arg_0] 1 +
mov eax [ebp+0] +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_30] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
cmp byte ptr [eax] 4Bh +
jz loc_45AE6E  +
movzx edx byte ptr [eax+1] +
cmp dl 31h +
jl loc_45AE44  +
cmp dl 39h +
jle loc_45AD15  +
cmp dl 5Fh +
jnz loc_45AE44  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_45AE44  +
mov [esp+58h+var_4C] 1 +
jmp loc_45ABC3  +
cmp al 74h +
jz loc_45ABF7  +
cmp al 4Bh +
jz loc_45ADE6  +
test dword ptr [esi] 2000h +
jnz loc_45AD60  +
test ecx ecx +
jz loc_45AB62  +
mov [esp+58h+var_58] ecx +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
call sub_45AED0  +
test eax eax +
mov [esp+58h+var_4C] eax +
jz loc_45AC27  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_459290  +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov edi eax +
sub edi edx +
cmp edx eax +
cmovnz ecx edi +
mov eax esi +
call sub_458DD0  +
test ebx ebx +
jle loc_45ABC3  +
test byte ptr [esi] 4 +
mov eax offset asc_490FC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_459160  +
sub ebx 1 +
lea eax [ebx+1] +
test eax eax +
jle loc_45AC2F  +
mov ecx [esp+58h+var_24] +
mov edx [ebp+0] +
mov [esp+58h+var_20] ecx +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_45AB22  +
lea edi [edx+1] +
mov [ebp+0] edi +
movzx eax byte ptr [edx+1] +
mov edx edi +
cmp al 74h +
jnz loc_45AB2A  +
lea eax [esp+58h+var_24] +
mov edx ebp +
mov [esp+58h+var_58] eax +
lea ecx [esp+58h+var_30] +
mov eax esi +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] 1 +
call sub_45A450  +
test eax eax +
mov [esp+58h+var_4C] eax +
jnz loc_45AB8C  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov ebx eax +
sub ebx edx +
cmp edx eax +
cmovnz ecx ebx +
mov ebx [esp+58h+var_3C] +
lea eax [esi+0Ch] +
mov [esp+58h+var_58] ebx +
call sub_458FF0  +
mov edx [esp+58h+arg_0] +
test edx edx +
jz loc_45AC8D  +
test byte ptr [esi] 4 +
mov eax offset asc_490FC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_459160  +
test byte ptr [esi+2Ch] 1 +
jnz loc_45AEBA  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_459290  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_45AE58  +
mov eax [esp+58h+var_40] +
mov ebx [eax+4] +
cmp [eax] ebx +
jz loc_45ACBD  +
test byte ptr [esi] 4 +
mov eax offset asc_490FC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_459160  +
mov edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
cmp edx ecx +
jz loc_45ACD1  +
sub ecx edx +
jnz loc_45AEAC  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45ACF9  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_45AD09  +
mov [esp+58h+var_58] eax +
call free  +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+26h] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_32] dl +
mov [esp+58h+var_31] 0 +
call atoi  +
xor edx edx +
mov ebx eax +
mov eax [ebp+0] +
cmp byte ptr [eax+2] 5Fh +
setz dl  +
lea eax [eax+edx+2] +
mov [ebp+0] eax +
jmp loc_45AB15  +
test byte ptr [esi+2Ch] 1 +
jnz loc_45AA9A  +
mov [esp+58h+arg_0] 0 +
jmp loc_45AAA2  +
mov eax ebp +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
mov edi eax +
jz loc_45AC27  +
lea eax [eax+1] +
mov [esp+58h+var_58] eax +
call sub_458340  +
mov ecx eax +
mov [esp+58h+var_48] eax +
mov eax [ebp+0] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] eax +
call memcpy  +
mov ecx [esp+58h+var_48] +
mov byte ptr [ecx+edi] 0 +
mov eax [esi] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_54] eax +
call sub_459C90  +
test eax eax +
mov ecx eax +
jz loc_45AE30  +
cmp byte ptr [eax] 0 +
jz loc_45ADCA  +
mov edx eax +
mov [esp+58h+var_44] eax +
lea eax [esp+58h+var_30] +
call sub_459160  +
mov ecx [esp+58h+var_44] +
mov [esp+58h+var_58] ecx +
call free  +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_58] eax +
call free  +
add [ebp+0] edi +
jmp loc_45AB8C  +
add edx 1 +
mov eax ebp +
mov [ebp+0] edx +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
jz loc_45AC27  +
cmp eax [esi+10h] +
jge loc_45AC27  +
mov edx [esi+8] +
mov edx [edx+eax*4] +
test edx edx +
jz loc_45ABA6  +
cmp byte ptr [edx] 0 +
jz loc_45ABA6  +
lea eax [esp+58h+var_30] +
call sub_459160  +
jmp loc_45ABA6  +
test edi edi +
mov edx [ebp+0] +
jz loc_45ADD2  +
mov ecx edi +
lea eax [esp+58h+var_30] +
call sub_4590A0  +
jmp loc_45ADD2  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+58h+var_2C] +
lea edx [esp+58h+var_30] +
mov eax [esp+58h+var_40] +
call sub_459290  +
jmp loc_45ACD1  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
jz loc_45AE44  +
cmp eax [esi+10h] +
jge loc_45AE44  +
mov edx [esi+8] +
xor ebx ebx +
mov edx [edx+eax*4] +
test edx edx +
jz loc_45AB15  +
cmp byte ptr [edx] 0 +
jz loc_45AB15  +
lea eax [esp+58h+var_30] +
call sub_459160  +
jmp loc_45AB15  +
mov eax [esp+58h+var_40] +
call sub_4590D0  +
jmp loc_45ACD1  +
mov edx offset asc_490FCB +
lea eax [esp+58h+var_30] +
call sub_459160  +
jmp loc_45AC7C  +
***
push edi  +
mov edi 1 +
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov [esp+78h+var_68] eax +
mov [esp+78h+var_60] ecx +
mov [esp+78h+var_44] 0 +
mov [esp+78h+var_48] 0 +
mov [esp+78h+var_4C] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx] 0 +
test edi edi +
setnz dl  +
xor eax eax +
test eax eax +
jnz loc_45B180  +
test dl dl +
jz loc_45B180  +
mov ecx [ebx] +
movzx esi byte ptr [ecx] +
lea eax [esi-41h] +
cmp al 34h +
ja loc_45B172  +
movzx eax al +
jmp ds:off_491044[eax*4]  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_45AF98  +
mov eax esi +
mov esi [esp+78h+var_48] +
cmp [esp+78h+var_4C] esi +
jz loc_45AF6D  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_490FB1 +
call sub_459130  +
mov ecx [ebx] +
movzx eax byte ptr [ecx] +
movsx eax al +
mov [esp+78h+var_64] ecx +
call sub_458E60  +
call sub_458E90  +
mov ecx [esp+78h+var_64] +
test eax eax +
jz loc_45AF98  +
cmp byte ptr [eax] 0 +
jz loc_45AF98  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_459130  +
mov ecx [ebx] +
add ecx 1 +
mov [ebx] ecx +
jmp loc_45AF14  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_45AFC4  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_45B2A6  +
cmp al 2Ah +
jz loc_45B2A6  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_45CBA0  +
test eax eax +
jz loc_45B230  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_45B273  +
cmp al 5Fh +
jnz loc_45AF14  +
add edx 1 +
mov [ebx] edx +
jmp loc_45AF14  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_45B022  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_45B285  +
cmp al 2Ah +
jz loc_45B285  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_490FCF +
call sub_459160  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45B237  +
add eax 1 +
mov [ebx] eax +
mov edx offset asc_490FD1 +
lea eax [esp+78h+var_4C] +
call sub_459160  +
jmp loc_45AF14  +
add ecx 1 +
mov eax ebx +
mov [ebx] ecx +
lea edx [esp+78h+var_58] +
call sub_458C10  +
test eax eax +
jz loc_45B230  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+20h] eax +
jle loc_45B230  +
mov edx [esi+4] +
lea ebx [esp+78h+var_54] +
mov eax [edx+eax*4] +
mov [esp+78h+var_54] eax +
jmp loc_45AF14  +
mov eax [esp+78h+var_68] +
add ecx 1 +
mov [ebx] ecx +
test byte ptr [eax] 4 +
jz loc_45B260  +
test ebp ebp +
mov eax 1 +
cmovz ebp eax +
jmp loc_45AF14  +
add ecx 1 +
mov edx offset asc_490FB3 +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_459160  +
mov edx [ebx] +
mov eax 51h +
cmp byte ptr [edx] 51h +
jz loc_45B0F2  +
mov eax [esp+78h+var_68] +
mov edx offset a_ +
test byte ptr [eax] 4 +
mov eax offset asc_490FC8 +
cmovz edx eax +
lea eax [esp+78h+var_4C] +
call sub_459130  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jnz loc_45B1A2  +
lea edx [eax-58h] +
cmp dl 1 +
jbe loc_45B330  +
cmp al 74h +
jz loc_45B402  +
xor edi edi +
cmp al 51h +
jnz loc_45AF14  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_45AA70  +
test eax eax +
mov edi eax +
jz loc_45AF14  +
jmp loc_45B1E9  +
add ecx 1 +
mov edx offset asc_490FAD +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_459130  +
test ebp ebp +
mov eax 2 +
cmovz ebp eax +
jmp loc_45AF14  +
mov eax 1 +
test eax eax +
jz loc_45AF23  +
nop   +
test edi edi +
jz loc_45B393  +
mov esi [ebx] +
movzx eax byte ptr [esi] +
sub eax 42h +
cmp al 17h +
ja loc_45B531  +
movzx eax al +
jmp ds:off_491118[eax*4]  +
mov eax ebx +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
mov [esp+78h+var_58] eax +
mov [esp+78h+var_64] eax +
jz loc_45B230  +
mov edx [ebx] +
mov [esp+78h+var_78] edx +
mov [esp+78h+var_5C] edx +
call strlen  +
mov ecx [esp+78h+var_64] +
mov edx [esp+78h+var_5C] +
cmp ecx eax +
jg loc_45B230  +
xor eax eax +
test ecx ecx +
jz loc_45B1E5  +
lea eax [esp+78h+var_4C] +
call sub_4590D0  +
mov edx [ebx] +
mov eax [esp+78h+var_58] +
add eax edx +
mov [ebx] eax +
lea eax [esp+78h+var_4C] +
mov edx offset asc_490FAF +
call sub_459130  +
mov eax esi +
cmp al 4Dh +
jnz loc_45B2C7  +
mov edx [ebx] +
movsx eax byte ptr [edx] +
cmp al 56h +
jz loc_45B471  +
cmp al 75h +
jz loc_45B471  +
xor esi esi +
cmp al 43h +
jz loc_45B471  +
lea eax [edx+1] +
mov [ebx] eax +
cmp byte ptr [edx] 46h +
jz loc_45B3E4  +
nop   +
xor edi edi +
jmp loc_45AF14  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_78] 3 +
call sub_459DA0  +
mov edi eax +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45B040  +
jmp loc_45B03B  +
mov edx offset asc_490FCD +
lea eax [esp+78h+var_4C] +
call sub_459130  +
jmp loc_45B0A2  +
cmp al 5Fh +
jz loc_45AFE8  +
xor edi edi +
lea esi [esi+0] +
jmp loc_45AF14  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_490FAF +
call sub_459130  +
mov edx offset asc_490FB3 +
lea eax [esp+78h+var_4C] +
call sub_459160  +
jmp loc_45B022  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_490FAF +
call sub_459130  +
mov edx offset asc_490FB3 +
lea eax [esp+78h+var_4C] +
call sub_459160  +
jmp loc_45AFC4  +
xor esi esi +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45B230  +
add eax 1 +
mov [ebx] eax +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_45AF14  +
test esi esi +
jz loc_45AF14  +
mov eax [esp+78h+var_48] +
cmp [esp+78h+var_4C] eax +
jz loc_45B306  +
mov edx offset asc_490FB1 +
lea eax [esp+78h+var_4C] +
call sub_459160  +
mov eax esi +
call sub_458E90  +
test eax eax +
jz loc_45AF14  +
cmp byte ptr [eax] 0 +
jz loc_45AF14  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_459160  +
jmp loc_45AF14  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
call sub_45AED0  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
cmp edx ecx +
jz loc_45B353  +
sub ecx edx +
jnz loc_45B488  +
test edx edx +
jz loc_45B1E9  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_45B1E9  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45B393  +
mov eax [esp+78h+var_68] +
mov edx [eax+40h] +
test edx edx +
jz loc_45B640  +
cmp esi [eax+44h] +
jl loc_45B640  +
mov eax [esp+78h+var_60] +
mov eax [eax] +
test eax eax +
jz loc_45B3BD  +
mov [esp+78h+var_78] eax +
call free  +
mov eax [esp+78h+var_60] +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov eax [esp+78h+var_4C] +
xor edi edi +
test eax eax +
jz loc_45B3CF  +
mov [esp+78h+var_78] eax +
call free  +
xor eax eax +
test edi edi +
jz loc_45B3DC  +
mov al 3 +
test ebp ebp +
cmovnz eax ebp +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_45CBA0  +
test eax eax +
jnz loc_45B2C9  +
xor edi edi +
jmp loc_45AF14  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_45A450  +
test eax eax +
mov edi eax +
jz loc_45B458  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
sub ecx edx +
jz loc_45B353  +
jmp loc_45B488  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_45AF14  +
mov [esp+78h+var_78] eax +
call free  +
jmp loc_45AF14  +
mov [esp+78h+var_64] edx +
call sub_458E60  +
mov edx [esp+78h+var_64] +
add edx 1 +
mov esi eax +
jmp loc_45B220  +
lea eax [esp+78h+var_4C] +
call sub_4590D0  +
mov edx [esp+78h+var_40] +
jmp loc_45B353  +
mov ecx [esp+78h+var_60] +
mov edx ebx +
mov eax [esp+78h+var_68] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
call sub_45AA70  +
mov edi eax +
test edi edi +
jz loc_45B393  +
mov eax [esp+78h+var_4C] +
cmp eax [esp+78h+var_48] +
jz loc_45B3C3  +
mov esi [esp+78h+var_60] +
mov edx offset asc_490FB1 +
mov eax esi +
call sub_459160  +
mov ecx [esp+78h+var_48] +
mov eax esi +
lea edx [esp+78h+var_4C] +
call sub_459290  +
mov eax [esp+78h+var_4C] +
jmp loc_45B3C3  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
lea edx [esp+78h+var_58] +
call sub_458C10  +
test eax eax +
jz loc_45B393  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+14h] eax +
jle loc_45B393  +
mov edx [esi+0Ch] +
mov edx [edx+eax*4] +
test edx edx +
jnz loc_45B66F  +
jmp loc_45B4C2  +
mov edi [esp+78h+var_60] +
mov [esp+78h+var_50] 0 +
lea esi [esi+0] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
ja loc_45B584  +
movzx eax al +
jmp ds:off_491178[eax*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_45B56C  +
mov edx offset asc_490FB1 +
mov eax edi +
call sub_459160  +
mov edx offset aUnsigned +
mov eax edi +
call sub_459160  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
jbe loc_45B54A  +
cmp dl 78h +
mov eax esi +
ja loc_45B6EB  +
jmp ds:off_491244[edx*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_45B5AE  +
mov edx offset asc_490FB1 +
mov eax edi +
call sub_459160  +
mov edx offset aSigned +
mov eax edi +
call sub_459160  +
mov esi [ebx] +
jmp loc_45B540  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_45B5D8  +
mov edx offset asc_490FB1 +
mov eax edi +
call sub_459160  +
mov edx offset a__complex +
mov eax edi +
call sub_459160  +
mov esi [ebx] +
jmp loc_45B540  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_45B627  +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_45B611  +
mov edx offset asc_490FB1 +
mov eax edi +
call sub_459130  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
movsx eax dl +
call sub_458E60  +
call sub_458E90  +
test eax eax +
jz loc_45B627  +
cmp byte ptr [eax] 0 +
jnz loc_45B686  +
add esi 1 +
mov [ebx] esi +
jmp loc_45B540  +
mov edi 3 +
test ebp ebp +
cmovz ebp edi +
jmp loc_45B4BA  +
mov eax ebx +
call sub_458BC0  +
cmp eax 0FFFFFFFFh +
jz loc_45B393  +
mov eax [esp+78h+var_68] +
mov eax [eax+40h] +
test eax eax +
jz loc_45BAC8  +
mov edx [eax+esi*4] +
mov edi 1 +
test edx edx +
jz loc_45B4C2  +
cmp byte ptr [edx] 0 +
jz loc_45B4C2  +
mov eax [esp+78h+var_60] +
call sub_459160  +
jmp loc_45B4C2  +
mov edx eax +
mov eax edi +
call sub_459130  +
mov esi [ebx] +
jmp loc_45B627  +
add esi 1 +
mov [ebx] esi +
movzx eax byte ptr [eax+1] +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_45B6EB  +
lea edi [esi+1] +
mov [ebx] edi +
cmp byte ptr [esi+1] 5Fh +
jnz loc_45BA10  +
lea eax [esi+2] +
xor edx edx +
mov [ebx] eax +
jmp loc_45B6E4  +
cmp cl 5Fh +
jz loc_45BAA9  +
mov byte ptr [esp+edx+78h+var_40] cl +
add edx 1 +
lea ecx [eax+1] +
cmp edx 24h +
lea esi [esp+78h+var_40] +
mov [ebx] ecx +
jz loc_45BABB  +
mov eax ecx +
movzx ecx byte ptr [eax] +
test cl cl +
jnz loc_45B6C0  +
xor edi edi +
jmp loc_45B636  +
mov eax [esp+78h+var_68] +
lea esi [esp+78h+var_40] +
call sub_458D60  +
mov edx ebx +
mov ecx esi +
mov [esp+78h+var_38] 0 +
xor ebx ebx +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
mov edi eax +
mov eax [esp+78h+var_68] +
call sub_45C230  +
test eax eax +
jz loc_45B775  +
mov eax [esp+78h+var_3C] +
mov edx [esp+78h+var_40] +
mov [esp+78h+var_78] edi +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax [esp+78h+var_68] +
cmovz ecx ebx +
add eax 0Ch +
call sub_458FF0  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_45B761  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov ecx [esp+78h+var_3C] +
mov edx esi +
mov ebx 1 +
mov eax [esp+78h+var_60] +
call sub_459290  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_45B785  +
mov [esp+78h+var_78] eax +
call free  +
cmp ebx 1 +
sbb edi edi +
not edi  +
and edi 3 +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B7AE  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aLongLong +
mov edi 3 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B7E0  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aWchar_t +
mov edi 5 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B812  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aVoid +
mov edi 3 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_45A450  +
mov ecx [esp+78h+var_3C] +
lea edx [esp+78h+var_40] +
mov ebx eax +
mov eax [esp+78h+var_60] +
call sub_459290  +
jmp loc_45B775  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B89A  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aShort +
mov edi 3 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B8CC  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aLongDouble +
mov edi 6 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B8FE  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aLong +
mov edi 3 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B930  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aInt +
mov edi 3 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B962  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aFloat +
mov edi 6 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B994  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aDouble +
mov edi 6 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B9C6  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aChar +
mov edi 5 +
call sub_459160  +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45B9F8  +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [esp+78h+var_60] +
mov edx offset aBool +
mov edi 4 +
call sub_459160  +
jmp loc_45B636  +
lea esi [esp+78h+var_40] +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] edi +
mov [esp+78h+var_78] esi +
call strncpy  +
mov [esp+78h+var_78] edi +
mov byte ptr [esp+78h+var_40+2] 0 +
call strlen  +
mov edx 2 +
cmp eax 2 +
cmovb edx eax +
add edx edi +
mov [ebx] edx +
lea eax [esp+78h+var_50] +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_74] offset asc_491036 +
mov [esp+78h+var_78] esi +
call sscanf  +
mov eax [esp+78h+var_50] +
mov [esp+78h+var_74] offset aIntU_t +
mov [esp+78h+var_78] esi +
mov [esp+78h+var_70] eax +
call sprintf  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_45BA89  +
mov edx offset asc_490FB1 +
call sub_459160  +
cmp byte ptr [esp+78h+var_40] 0 +
mov edi 3 +
jz loc_45B636  +
mov eax [esp+78h+var_60] +
mov edx esi +
call sub_459160  +
jmp loc_45B636  +
mov ecx eax +
lea esi [esp+78h+var_40] +
add ecx 1 +
mov byte ptr [esp+edx+78h+var_40] 0 +
mov [ebx] ecx +
jmp loc_45BA44  +
cmp byte ptr [eax+1] 5Fh +
jz loc_45BAAF  +
xor edi edi +
jmp loc_45B636  +
mov eax [esp+78h+var_60] +
mov edx esi +
mov edi 1 +
call sub_4591A0  +
jmp loc_45B4C2  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [eax] +
mov [esp+54h+var_40] edx +
mov edx [edx] +
mov [esp+54h+var_44] eax +
mov ebx [esp+54h+arg_0] +
mov [esp+54h+var_3C] ecx +
add edi edx +
test esi 1000h +
jz loc_45BB10  +
cmp byte ptr [edi] 58h +
jz loc_45BC65  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
test ebp 1800h +
jz loc_45BB6B  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_45BB6B  +
lea eax [eax+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
jz loc_45BBBA  +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_38] +
add eax ecx +
cmp edi eax +
jz loc_45BFBC  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
and ebp 2100h +
jz loc_45BBBA  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__tm__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_45BE91  +
lea eax [esi+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
jz loc_45BBBA  +
mov edx [esp+54h+var_30] +
add eax edx +
cmp edi eax +
jz loc_45BC50  +
mov eax [esp+54h+var_40] +
cmp [esp+54h+var_3C] 0Ah +
mov edx [eax] +
jg loc_45BC00  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_45BF18  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_45BBEE  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_4590A0  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_40] +
add edx [esp+54h+var_3C] +
mov [eax] edx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_45BBC7  +
cmp byte ptr [edx+9] 4Eh +
jnz loc_45BBC7  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_45BBC7  +
mov [esp+54h+var_50] eax +
mov [esp+54h+var_54] offset byte_4738AC +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_45BBC7  +
mov edx offset aAnonymous +
mov eax ebx +
call sub_459160  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_45BBEE  +
cmp byte ptr [edx] 5Fh +
jnz loc_45BBBA  +
add edx 1 +
mov [esp+54h+var_30] edx +
jmp loc_45BFCC  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] 3Ch +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_45BEF0  +
sub eax edx +
cmp [esp+54h+var_3C] eax +
mov ecx eax +
jle loc_45BEF0  +
test eax eax +
jnz loc_45BF00  +
mov eax [esp+54h+var_3C] +
mov edi [esp+54h+var_40] +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
lea eax [edx+eax+1] +
mov [edi] eax +
mov eax [esp+54h+var_44] +
mov [esp+54h+var_2C] 0 +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_45BF32  +
mov edi [esp+54h+var_44] +
mov eax esi +
mov edx (offset asc_490FC4+2) +
or eax 1 +
mov [edi] eax +
mov eax ebx +
call sub_459160  +
mov edi [esp+54h+var_40] +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_45BD12  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [edi] +
movzx ecx byte ptr [eax] +
cmp cl 53h +
jz loc_45BD32  +
jle loc_45BDB1  +
cmp cl 54h +
jz loc_45BE40  +
cmp cl 55h +
nop   +
jnz loc_45BD60  +
cmp cl 53h +
jnz loc_45BF24  +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
cmp al 4Eh +
jz loc_45BF51  +
cmp al 50h +
jz loc_45BF69  +
cmp al 4Dh +
jz loc_45C152  +
lea esi [esi+0] +
mov eax ebx +
mov edx offset asc_490FC4 +
call sub_459160  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_45BD94  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [esp+54h+var_40] +
mov eax [eax] +
cmp byte ptr [eax] 5Fh +
jz loc_45BF43  +
mov eax [esp+54h+var_44] +
mov [eax] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp cl 41h +
jnz loc_45BD60  +
add eax 1 +
mov [edi] eax +
mov eax edi +
call sub_458B70  +
test eax eax +
mov ebp eax +
jle loc_45BD60  +
mov edx offset asc_490FAD +
lea eax [esp+54h+var_2C] +
call sub_459160  +
lea eax [ebp+1] +
mov [esp+54h+var_54] eax +
call sub_458340  +
mov ecx eax +
mov [esp+54h+var_3C] eax +
mov eax [edi] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] eax +
call memcpy  +
mov ecx [esp+54h+var_3C] +
mov eax [esp+54h+var_44] +
mov byte ptr [ecx+ebp] 0 +
mov eax [eax] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_50] eax +
call sub_459C90  +
test eax eax +
mov ecx eax +
jz loc_45C168  +
cmp byte ptr [eax] 0 +
jnz loc_45C212  +
mov [esp+54h+var_54] ecx +
call free  +
mov eax [esp+54h+var_3C] +
add [edi] ebp +
mov [esp+54h+var_54] eax +
call free  +
jmp loc_45BE5C  +
add eax 1 +
mov edx edi +
mov [edi] eax +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
call sub_45AED0  +
test eax eax +
jz loc_45BD60  +
mov ecx [esp+54h+var_28] +
mov eax ebx +
lea edx [esp+54h+var_2C] +
call sub_459290  +
mov eax [edi] +
movzx eax byte ptr [eax] +
cmp al 5Fh +
jz loc_45BD60  +
test al al +
jz loc_45BD60  +
mov edx (offset aU_0+2) +
mov eax ebx +
call sub_459160  +
jmp loc_45BCEA  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__ps__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_45BB95  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_45BB95  +
mov [esp+54h+var_50] offset a__s +
mov [esp+54h+var_54] edx +
call strstr  +
test eax eax +
mov esi eax +
jz loc_45BBBA  +
lea eax [eax+3] +
jmp loc_45BB98  +
mov ecx [esp+54h+var_3C] +
test ecx ecx +
jz loc_45BC9B  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_4590A0  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_44] +
mov esi [eax] +
jmp loc_45BC9B  +
mov dword ptr [eax+34h] 0 +
jmp loc_45BBD5  +
cmp cl 55h +
jz loc_45BD3B  +
jmp loc_45BD60  +
mov eax [ebx+4] +
mov edi [esp+54h+var_44] +
sub eax [ebx] +
mov [edi+34h] eax +
jmp loc_45BCCF  +
mov ebx [esp+54h+var_40] +
add eax 1 +
mov [ebx] eax +
jmp loc_45BDA3  +
mov edx offset asc_490F95 +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_3C] ecx +
call sub_459160  +
mov edx [edi] +
mov ecx [esp+54h+var_3C] +
lea eax [edx+1] +
mov [edi] eax +
movzx eax byte ptr [edx+1] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jz loc_45BD60  +
mov ebp ecx +
jmp loc_45BFA3  +
mov eax [edi] +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jz loc_45C1F4  +
test al al +
mov ds:byte_49A43C al +
jz loc_45BF87  +
mov edx offset byte_49A43C +
lea eax [esp+54h+var_2C] +
call sub_459160  +
jmp loc_45BF87  +
cmp byte ptr [ecx] 5Fh +
jnz loc_45BB65  +
add ecx 1 +
mov [esp+54h+var_30] ecx +
mov eax [esp+54h+var_40] +
mov ecx esi +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_2C] 0 +
mov edx [eax] +
sub ecx edx +
jz loc_45BFF7  +
mov eax ebx +
call sub_4590A0  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_45C1E3  +
mov ecx [esp+54h+var_44] +
mov edx 490FC6h +
mov eax [ecx] +
mov [esp+54h+var_38] eax +
or eax 1 +
mov [ecx] eax +
mov eax ebx +
call sub_459160  +
cmp edi [esp+54h+var_30] +
ja loc_45C0EF  +
jmp loc_45C190  +
mov eax [esp+54h+var_44] +
add esi 1 +
mov edx ebp +
lea ecx [esp+54h+var_20] +
mov [esp+54h+var_30] esi +
call sub_45AED0  +
test eax eax +
jz loc_45C190  +
mov edx offset asc_490FAF +
lea eax [esp+54h+var_2C] +
call sub_459160  +
mov ecx [esp+54h+var_1C] +
lea eax [esp+54h+var_2C] +
lea edx [esp+54h+var_20] +
call sub_459290  +
mov eax [esp+54h+var_20] +
test eax eax +
jz loc_45C095  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_1C] 0 +
mov [esp+54h+var_18] 0 +
mov [esp+54h+var_20] 0 +
lea eax [esp+54h+var_2C] +
mov edx offset asc_490FB3 +
call sub_459160  +
mov eax [esp+54h+var_30] +
cmp byte ptr [eax] 4Ch +
jnz loc_45C190  +
add eax 1 +
mov [esp+54h+var_30] eax +
lea edx [esp+54h+var_2C] +
mov eax ebp +
call sub_4591E0  +
test eax eax +
jz loc_45C190  +
mov ecx [esp+54h+var_28] +
lea edx [esp+54h+var_2C] +
mov eax ebx +
call sub_459290  +
mov edx (offset aU_0+2) +
mov eax ebx +
call sub_459160  +
cmp edi [esp+54h+var_30] +
jbe loc_45C190  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_45C117  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov esi [esp+54h+var_30] +
movzx eax byte ptr [esi] +
cmp al 4Ch +
jz loc_45C180  +
cmp al 58h +
jz loc_45C030  +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
mov edx ebp +
call sub_45AED0  +
test eax eax +
jz loc_45C190  +
cmp esi [esp+54h+var_30] +
jnz loc_45C0CA  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
jmp loc_45BBF8  +
mov edx offset a2147483648 +
lea eax [esp+54h+var_2C] +
call sub_459160  +
add dword ptr [edi] 1 +
jmp loc_45BE5C  +
mov edx [edi] +
mov ecx ebp +
lea eax [esp+54h+var_2C] +
call sub_4590A0  +
jmp loc_45BE2E  +
add esi 1 +
mov [esp+54h+var_30] esi +
jmp loc_45C0B7  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_45C1B8  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
cmp edi [esp+54h+var_30] +
ja loc_45C1C2  +
sub dword ptr [ebx+4] 1 +
mov eax ebx +
mov edx offset asc_490FC4 +
call sub_459160  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_45BBEE  +
mov eax [ebx+4] +
mov ecx [esp+54h+var_44] +
sub eax [ebx] +
mov [ecx+34h] eax +
jmp loc_45C005  +
mov ecx ebp +
cmp cl 55h +
jnz loc_45BE5C  +
mov edx offset aU_0 +
lea eax [esp+54h+var_2C] +
call sub_459160  +
jmp loc_45BE5C  +
mov edx eax +
mov [esp+54h+var_38] eax +
lea eax [esp+54h+var_2C] +
call sub_459160  +
mov ecx [esp+54h+var_38] +
jmp loc_45BE26  +
***
push edi  +
mov edi eax +
push esi  +
mov eax edx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45C282  +
mov eax [ebx] +
mov [esp+28h+var_28] eax +
call strlen  +
xor edx edx +
cmp esi eax +
jle loc_45C265  +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebp +
mov edx ebx +
mov eax edi +
mov ecx esi +
call sub_45BAE0  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor edx edx +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jle loc_45C336  +
cmp al 6Fh +
jz loc_45C3E0  +
cmp ebp 4 +
jle loc_45C336  +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] offset aType +
mov [esp] ebx +
call memcmp  +
test eax eax +
jnz loc_45C336  +
movsx eax byte ptr [ebx+4] +
add ebx 5 +
mov dword ptr [esp] offset byte_4738AC +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_45C336  +
lea ecx [esp+30h] +
mov eax esi +
lea edx [esp+2Ch] +
mov [esp+2Ch] ebx +
call sub_45AED0  +
test eax eax +
jnz loc_45C362  +
xor ebx ebx +
mov eax esi +
call sub_458CA0  +
add esp 9Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jg loc_45C2E3  +
nop   +
jmp loc_45C336  +
***
mov eax [esp+0B4h] +
mov ebx 1 +
mov [esp] eax +
call strlen  +
mov edx 20h +
add eax [esp+0B4h] +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov [eax+8] dx +
mov edi [esp+30h] +
mov eax [esp+34h] +
mov [esp+4] edi +
sub eax edi +
mov [esp+8] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call strncat  +
test edi edi +
jz loc_45C338  +
mov [esp] edi +
call free  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
jmp loc_45C338  +
***
cmp byte ptr [ebx+1] 70h +
jnz loc_45C2E3  +
movsx eax byte ptr [ebx+2] +
mov dword ptr [esp] offset byte_4738AC +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_45C2E3  +
cmp ebp 9 +
jle loc_45C5C0  +
lea eax [ebx+3] +
mov dword ptr [esp+8] 7 +
mov dword ptr [esp+4] offset aAssign_ +
mov [esp] eax +
call memcmp  +
test eax eax +
jnz loc_45C5C0  +
lea eax [ebp-0Ah] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+0Ah] +
mov ebp offset off_491C80 +
mov [esp+1Ch] eax +
jmp loc_45C45F  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_45C336  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax [esp+18h] +
jnz loc_45C450  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_45C450  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_491C84[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
mov eax [esp+0B4h] +
mov [esp] eax +
call strlen  +
mov edx [esp+0B4h] +
mov ecx 3Dh +
mov [edx+eax] cx +
jmp loc_45C338  +
***
lea eax [ebx+2] +
mov ebp offset off_491C80 +
xor edi edi +
mov [esp+18h] eax +
jmp loc_45C54F  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_45C336  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax 2 +
jnz loc_45C540  +
mov eax [esp+18h] +
mov dword ptr [esp+8] 2 +
mov [esp] ebx +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_45C540  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_491C84[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
jmp loc_45C338  +
***
lea eax [ebp-3] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+3] +
mov ebp offset off_491C80 +
mov [esp+1Ch] eax +
jmp loc_45C5E6  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_45C336  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp [esp+18h] eax +
jnz loc_45C5D7  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_45C5D7  +
jmp loc_45C57B  +
***
cmp byte ptr [ebx+3] 70h +
lea esi [esi+0] +
jnz loc_45C4FC  +
add ebx 4 +
jmp loc_45C31F  +
***
push edi  +
mov edi edx +
push esi  +
mov edx offset aTemplate +
push ebx  +
mov esi 1 +
sub esp 2Ch +
mov [esp+38h+var_2C] eax +
mov eax ecx +
call sub_459160  +
lea edx [esp+38h+var_28] +
mov eax edi +
call sub_458C10  +
test eax eax +
jz loc_45C6D0  +
mov eax [esp+38h+var_28] +
xor ebx ebx +
test eax eax +
jg loc_45C74D  +
lea esi [esi+0] +
mov eax [ebp+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_45C781  +
mov eax ebp +
mov edx offset aClass +
call sub_459160  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-4+arg_8] +
lea ecx [esp-4+arg_10] +
mov edx edi +
call sub_45AED0  +
test eax eax +
mov esi eax +
jnz loc_45C792  +
mov eax [esp-4+arg_10] +
test eax eax +
jz loc_45C734  +
mov [esp+0] eax +
call free  +
mov [esp-4+arg_14] 0 +
mov [esp-4+arg_18] 0 +
mov [esp-4+arg_10] 0 +
test esi esi +
jz loc_45C772  +
add ebx 1 +
cmp [esp-4+arg_C] ebx +
jle loc_45C6D0  +
mov edx offset asc_490FBE +
mov eax ebp +
call sub_459160  +
mov edx [edi] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_45C7A6  +
cmp al 7Ah +
jnz loc_45C6F3  +
mov eax [esp-4+arg_8] +
add edx 1 +
mov ecx ebp +
mov [edi] edx +
mov edx edi +
call sub_45C690  +
mov esi eax +
test esi esi +
jnz loc_45C738  +
mov eax [ebp+4] +
xor esi esi +
cmp byte ptr [eax-1] 3Eh +
jnz loc_45C6DD  +
mov edx offset asc_490FB1 +
mov eax ebp +
call sub_459160  +
jmp loc_45C6DD  +
mov ecx [esp-4+arg_14] +
lea edx [esp-4+arg_10] +
mov eax ebp +
call sub_459290  +
jmp loc_45C70C  +
add edx 1 +
mov eax ebp +
mov [edi] edx +
mov edx offset aClass_0 +
call sub_459160  +
jmp loc_45C738  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov ebp [edx] +
mov eax [eax+50h] +
test eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
jg loc_45C821  +
mov eax [ebx] +
cmp byte ptr [eax] 6Eh +
jnz loc_45C883  +
add eax 1 +
mov [ebx] eax +
mov eax ebx +
call sub_458B70  +
test eax eax +
mov [edi+50h] eax +
jle loc_45C865  +
cmp eax 9 +
jg loc_45C871  +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
mov edx [edi+4Ch] +
sub eax 1 +
mov [edi+50h] eax +
test edx edx +
jz loc_45C865  +
mov ecx [edx+4] +
mov eax esi +
mov ebx 1 +
call sub_459290  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ch +
call sub_458340  +
mov [edi+4Ch] eax +
mov ecx eax +
mov edx ebx +
mov eax edi +
call sub_45AED0  +
test eax eax +
jnz loc_45C8C4  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx] +
cmp byte ptr [ebp+0] 5Fh +
jnz loc_45C865  +
add ebp 1 +
mov [ebx] ebp +
jmp loc_45C7D2  +
mov ecx [edi+4Ch] +
test ecx ecx +
jz loc_45C847  +
mov eax [ecx] +
test eax eax +
jz loc_45C858  +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] ecx +
call free  +
mov ecx [esp+24h+var_18] +
mov edx ebx +
mov eax edi +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx] 0 +
mov ecx [edi+4Ch] +
call sub_45AED0  +
test eax eax +
jz loc_45C865  +
mov edx [edi+4Ch] +
mov eax esi +
mov ecx [edx+4] +
call sub_459290  +
mov eax [edi+48h] +
mov ecx [ebx] +
mov ebx 1 +
test eax eax +
jnz loc_45C867  +
sub ecx ebp +
mov edx ebp +
mov eax edi +
call sub_4595B0  +
jmp loc_45C867  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
test byte ptr [eax] 1 +
jnz loc_45CB11  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
xor esi esi +
cmp al 5Fh +
jz loc_45CA35  +
test al al +
jz loc_45CA35  +
cmp al 65h +
jz loc_45CA35  +
cmp al 54h +
jz loc_45C936  +
cmp al 4Eh +
lea esi [esi+0] +
jnz loc_45CA74  +
lea eax [edx+1] +
mov [ebp+0] eax +
cmp byte ptr [edx] 4Eh +
jz loc_45CAD8  +
mov [esp+48h+var_30] 1 +
test dword ptr [ebx] 3800h +
jz loc_45C95F  +
cmp dword ptr [ebx+20h] 9 +
jg loc_45CB3C  +
lea edx [esp+48h+var_2C] +
mov eax ebp +
call sub_458C10  +
test eax eax +
jz loc_45CAF0  +
mov eax [esp+48h+var_2C] +
test dword ptr [ebx] 3C00h +
jz loc_45C985  +
sub eax 1 +
mov [esp+48h+var_2C] eax +
test eax eax +
js loc_45CAF0  +
cmp [ebx+20h] eax +
jg loc_45C9A4  +
jmp loc_45CAF0  +
mov eax [esp+48h+var_24] +
test eax eax +
jnz loc_45C9F9  +
mov esi 1 +
mov eax [ebx+50h] +
test eax eax +
jle loc_45CA20  +
mov eax [ebx+4] +
test esi esi +
mov edx [esp+48h+var_2C] +
mov eax [eax+edx*4] +
mov [esp+48h+var_28] eax +
jz loc_45C9C6  +
test byte ptr [ebx] 1 +
jnz loc_45CA63  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_28] +
call sub_45C7C0  +
test eax eax +
jz loc_45CAF0  +
test byte ptr [ebx] 1 +
jz loc_45C997  +
mov ecx [esp+48h+var_20] +
mov eax edi +
lea edx [esp+48h+var_24] +
call sub_459290  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_45C99F  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
jmp loc_45C99F  +
sub [esp+48h+var_30] 1 +
jns loc_45C9AB  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_45C916  +
mov ecx [ebx+50h] +
test ecx ecx +
jg loc_45C926  +
cmp al 65h +
jz loc_45CB62  +
test byte ptr [ebx] 1 +
jz loc_45CA59  +
mov edx offset asc_490FB3 +
mov eax edi +
call sub_459160  +
mov eax 1 +
jmp loc_45CAF2  +
mov edx offset asc_490FBE +
mov eax edi +
call sub_459160  +
jmp loc_45C9C6  +
test esi esi +
jz loc_45CA86  +
test byte ptr [ebx] 1 +
nop   +
lea esi [esi+0] +
jnz loc_45CB51  +
lea ecx [esp+48h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_45C7C0  +
test eax eax +
jz loc_45CAF0  +
test byte ptr [ebx] 1 +
jnz loc_45CB00  +
mov eax [esp+48h+var_24] +
mov esi 1 +
test eax eax +
jz loc_45CA27  +
mov [esp+48h+var_48] eax +
call free  +
mov edx [ebp+0] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
movzx eax byte ptr [edx] +
jmp loc_45CA2D  +
lea edx [esp+48h+var_30] +
mov eax ebp +
call sub_458C10  +
test eax eax +
jnz loc_45C94D  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+48h+var_20] +
lea edx [esp+48h+var_24] +
mov eax edi +
call sub_459290  +
jmp loc_45CA9C  +
mov edx offset asc_490FAF +
mov eax ecx +
call sub_459160  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_45C90C  +
mov edx offset aVoid +
mov eax edi +
call sub_459160  +
jmp loc_45C906  +
mov eax ebp +
call sub_458B70  +
test eax eax +
mov [esp+48h+var_2C] eax +
jg loc_45C976  +
jmp loc_45CAF0  +
mov edx offset asc_490FBE +
mov eax edi +
call sub_459160  +
jmp loc_45CA86  +
add edx 1 +
test byte ptr [ebx] 1 +
mov [ebp+0] edx +
jz loc_45CA59  +
test esi esi +
jnz loc_45CB86  +
mov edx offset a____0 +
mov eax edi +
call sub_459160  +
jmp loc_45CA48  +
mov edx 491436h +
mov eax edi +
call sub_459160  +
jmp loc_45CB75  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov ebp [eax+4Ch] +
add dword ptr [eax+48h] 1 +
mov edi [eax+50h] +
mov dword ptr [eax+4Ch] 0 +
mov dword ptr [eax+50h] 0 +
call sub_45C8F0  +
mov esi [ebx+4Ch] +
test esi esi +
jz loc_45CC0A  +
mov edx [esi] +
test edx edx +
jz loc_45CBFA  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 0 +
mov esi [ebx+4Ch] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov [ebx+4Ch] ebp +
mov [ebx+50h] edi +
sub dword ptr [ebx+48h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edx [edx] +
mov esi [esp+48h+arg_0] +
mov ecx esi +
sub ecx edx +
jnz loc_45CE20  +
mov eax ebx +
mov edx 1 +
call sub_459030  +
mov eax [ebx+4] +
mov byte ptr [eax] 0 +
lea eax [esi+2] +
test dword ptr [ebp+0] 1000h +
mov [edi] eax +
jz loc_45CC67  +
cmp byte ptr [esi+2] 58h +
jz loc_45CE68  +
test dword ptr [ebp+0] 3C00h +
mov edx [ebx] +
jz loc_45CC9A  +
mov edi offset a__ct +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_45CE30  +
mov edi offset a__dt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_45CE54  +
mov eax [ebx+4] +
movzx edi byte ptr [edx] +
mov esi eax +
sub esi edx +
cmp esi 2 +
mov [esp+48h+var_38] eax +
jle loc_45CD54  +
mov eax edi +
cmp al 6Fh +
jz loc_45CE90  +
cmp esi 4 +
jle loc_45CD54  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] 4 +
mov [esp+48h+var_44] offset aType +
mov [esp+48h+var_34] edx +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_45CD54  +
movsx eax byte ptr [edx+4] +
mov [esp+48h+var_48] offset byte_4738AC +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_45CD54  +
add edx 5 +
mov [esp+48h+var_28] edx +
lea ecx [esp+48h+var_24] +
mov eax ebp +
lea edx [esp+48h+var_28] +
call sub_45AED0  +
test eax eax +
jnz loc_45CF80  +
mov eax [ebx+4] +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
nop   +
lea esi [esi+0] +
mov ecx [esp+48h+var_38] +
cmp edx ecx +
jz loc_45CE80  +
sub ecx edx +
mov eax 1 +
cmp ecx 1 +
jz loc_45CE44  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 5Fh +
jnz loc_45CD30  +
cmp byte ptr [edx+1] 5Fh +
jnz loc_45CD30  +
movzx eax byte ptr [edx+2] +
cmp al 6Fh +
jz loc_45D05F  +
movzx ecx al +
test ds:byte_4922A0[ecx+ecx] 8 +
jz loc_45CD30  +
movzx ecx byte ptr [edx+3] +
test ds:byte_4922A0[ecx+ecx] 8 +
jz loc_45CD30  +
cmp byte ptr [edx+4] 0 +
jnz loc_45D07E  +
lea eax [edx+2] +
mov edi offset off_491C80 +
mov [esp+48h+var_30] ebx +
xor esi esi +
mov ebx eax +
mov [esp+48h+var_34] edx +
jmp loc_45CDB6  +
add esi 1 +
add edi 0Ch +
cmp esi 4Fh +
jz loc_45D107  +
mov ebp [edi] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 2 +
jnz loc_45CDA7  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] ebp +
call memcmp  +
test eax eax +
jnz loc_45CDA7  +
mov edx [esp+48h+var_34] +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_459160  +
lea eax [esi+esi*2] +
mov edx ds:off_491C84[eax*4] +
test edx edx +
jz loc_45CD22  +
cmp byte ptr [edx] 0 +
jz loc_45CD22  +
mov eax ebx +
call sub_459160  +
jmp loc_45CD22  +
mov eax ebx +
call sub_4590A0  +
jmp loc_45CC3D  +
add dword ptr [ebp+28h] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [edx] 2Eh +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [ebp+2Ch] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] ebx +
xor ecx ecx +
mov edx edi +
mov eax ebp +
call sub_45BAE0  +
jmp loc_45CC67  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 70h +
jnz loc_45CCBB  +
movsx eax byte ptr [edx+2] +
mov [esp+48h+var_48] offset byte_4738AC +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_45CCBB  +
cmp esi 9 +
jle loc_45CFE0  +
lea eax [edx+3] +
mov [esp+48h+var_40] 7 +
mov [esp+48h+var_44] offset aAssign_ +
mov [esp+48h+var_48] eax +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_45CFE0  +
lea eax [edx+0Ah] +
sub esi 0Ah +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_45CF10  +
add edi 1 +
cmp edi 4Fh +
jz loc_45D075  +
lea eax [edi+edi*2] +
mov ebp ds:off_491C80[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_45CF04  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_45CF04  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_459160  +
mov edx ds:off_491C84[edi] +
test edx edx +
jz loc_45CF71  +
cmp byte ptr [edx] 0 +
jnz loc_45D110  +
mov edx offset asc_4914A3 +
jmp loc_45CE0F  +
mov eax [ebx] +
mov edx offset aOperator_2 +
mov [ebx+4] eax +
mov eax ebx +
call sub_459160  +
mov ecx [esp+48h+var_20] +
mov eax ebx +
lea edx [esp+48h+var_24] +
call sub_459290  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_45CD22  +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebx+4] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
jmp loc_45CD30  +
lea eax [edx+3] +
sub esi 3 +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_45CFFE  +
add edi 1 +
cmp edi 4Fh +
jz loc_45D075  +
lea eax [edi+edi*2] +
mov ebp ds:off_491C80[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_45CFF6  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_45CFF6  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_459160  +
mov edx ds:off_491C84[edi] +
test edx edx +
jnz loc_45CE06  +
jmp loc_45CD22  +
cmp byte ptr [edx+3] 70h +
jnz loc_45CD6C  +
add edx 4 +
lea esi [esi+0] +
jmp loc_45CD07  +
mov edx [esp+48h+var_30] +
jmp loc_45CD30  +
cmp al 61h +
jnz loc_45CD30  +
cmp byte ptr [edx+5] 0 +
jnz loc_45CD30  +
mov esi offset off_491C80 +
xor edi edi +
lea eax [edx+2] +
mov [esp+48h+var_30] ebx +
mov ebp eax +
mov ebx esi +
mov [esp+48h+var_34] edx +
jmp loc_45D0B3  +
add edi 1 +
add ebx 0Ch +
cmp edi 4Fh +
jz loc_45D107  +
mov esi [ebx] +
mov [esp+48h+var_48] esi +
call strlen  +
cmp eax 3 +
jnz loc_45D0A8  +
mov [esp+48h+var_40] 3 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] esi +
call memcmp  +
test eax eax +
jnz loc_45D0A8  +
mov edx [esp+48h+var_34] +
imul edi edi +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_459160  +
mov edx ds:off_491C84[edi] +
test edx edx +
jnz loc_45CE06  +
jmp loc_45CD22  +
mov edx [esp+48h+var_34] +
jmp loc_45CD30  +
mov eax ebx +
call sub_459160  +
jmp loc_45CF71  +
***
push edi  +
push esi  +
mov esi 1 +
push ebx  +
mov ebx eax +
sub esp 6Ch +
lea eax [eax+20h] +
mov [esp+78h+var_54] eax +
lea eax [ebx+4] +
mov [esp+78h+var_5C] ecx +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_4C] 0 +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 0 +
mov [esp+78h+var_50] eax +
mov edi [ebp+0] +
movsx eax byte ptr [edi] +
test al al +
jz loc_45D775  +
lea edx [eax-30h] +
cmp dl 45h +
ja loc_45D606  +
movzx edx dl +
jmp ds:off_4914B8[edx*4]  +
mov eax [esp+78h+var_60] +
lea ecx [esp+78h+var_30] +
mov edx ebp +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_34] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
lea edi [esp+78h+var_3C] +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_30] 0 +
call sub_45A450  +
test eax eax +
mov esi eax +
jnz loc_45D740  +
test byte ptr [ebx] 4 +
mov eax offset asc_490FC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+78h+var_30] +
call sub_459160  +
mov edx [esp+78h+var_30] +
mov ecx [esp+78h+var_2C] +
cmp edx ecx +
jz loc_45D21E  +
sub ecx edx +
jnz loc_45D830  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_45D806  +
test byte ptr [ebx+28h] 1 +
jnz loc_45D640  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_45D640  +
mov eax [esp+78h+var_3C] +
test eax eax +
jz loc_45D264  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_34] 0 +
mov [esp+78h+var_3C] 0 +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_45D28C  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
test esi esi +
setnz al  +
mov edi eax +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_45D339  +
test dword ptr [ebx] 300h +
jz loc_45D2C4  +
mov ecx [esp+78h+var_4C] +
test ecx ecx +
jnz loc_45D840  +
test dword ptr [ebx] 1000h +
jz loc_45D376  +
lea eax [edi+1] +
mov [ebp+0] eax +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_45D32A  +
add edi 2 +
test ds:byte_4922A0[eax+eax] 4 +
jnz loc_45D2FD  +
jmp loc_45D32A  +
add edi 1 +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_45D32A  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_45D2F0  +
jmp loc_45D32A  +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [ebp+0] edi +
mov [esp+78h+var_60] eax +
mov dword ptr [ebx+30h] 1 +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
mov ecx edi +
test cl cl +
jz loc_45D36E  +
test al al +
jz loc_45D36E  +
test dword ptr [ebx] 2C00h +
jnz loc_45D658  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_45C8F0  +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 1 +
mov esi eax +
test esi esi +
jnz loc_45D162  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_45AA70  +
test eax eax +
mov esi eax +
jz loc_45D5DE  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_45D5DE  +
sub ecx edi +
mov edx edi +
mov eax ebx +
call sub_4595B0  +
jmp loc_45D5DE  +
test dword ptr [ebx] 1000h +
jz loc_45D376  +
add edi 1 +
jmp loc_45D3D7  +
test al al +
jz loc_45D3E6  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
mov edx edi +
add edi 1 +
cmp al 5Fh +
jnz loc_45D3D3  +
test al al +
jz loc_45D376  +
add edx 1 +
mov [ebp+0] edx +
jmp loc_45D32A  +
call sub_458E60  +
or [ebx+38h] eax +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [esp+78h+var_60] eax +
mov [ebp+0] edi +
jmp loc_45D32A  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_45AED0  +
test eax eax +
mov esi eax +
jz loc_45D28C  +
test byte ptr [ebx] 4 +
mov eax offset asc_490FC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+78h+var_24] +
call sub_459160  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_45D459  +
sub ecx edx +
jnz loc_45D8F8  +
test edx edx +
jz loc_45D28C  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_45D28C  +
mov eax [esp+78h+var_60] +
mov dword ptr [ebx+34h] 0FFFFFFFFh +
mov [esp+78h+var_1C] 0 +
mov [esp+78h+var_20] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
mov [esp+78h+var_24] 0 +
call sub_458D60  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov edi eax +
mov eax ebx +
call sub_45C230  +
test eax eax +
jnz loc_45D670  +
mov edx [esp+78h+var_24] +
xor edi edi +
xor esi esi +
test edx edx +
jz loc_45D4CE  +
mov [esp+78h+var_78] edx +
call free  +
test esi esi +
jz loc_45D4E0  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jz loc_45D8D3  +
test dword ptr [ebx] 2300h +
jz loc_45D760  +
mov eax [ebp+0] +
cmp byte ptr [eax] 46h +
jz loc_45D760  +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_45D339  +
test dword ptr [ebx] 300h +
jz loc_45D376  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_45A450  +
test byte ptr [ebx+28h] 1 +
mov esi eax +
mov eax 1 +
cmovnz eax [esp+78h+var_4C] +
add dword ptr [ebp+0] 1 +
mov [esp+78h+var_4C] eax +
jmp loc_45D32A  +
add edi 1 +
mov [ebp+0] edi +
test dword ptr [ebx] 3C00h +
jnz loc_45D7F4  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_45C8F0  +
test eax eax +
mov esi eax +
jz loc_45D376  +
test dword ptr [ebx] 2100h +
jz loc_45D59D  +
mov eax [ebp+0] +
cmp byte ptr [eax] 5Fh +
jz loc_45D928  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
jmp loc_45D33F  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_45AA70  +
mov esi eax +
test dword ptr [ebx] 300h +
jnz loc_45D28C  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_45D339  +
test dword ptr [ebx] 300h +
jz loc_45D376  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_45C8F0  +
mov [esp+78h+var_58] 1 +
mov esi eax +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_45D339  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_459290  +
sub dword ptr [ebx+28h] 1 +
jmp loc_45D23C  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_458EF0  +
jmp loc_45D34F  +
test byte ptr [ebx+28h] 1 +
mov esi [esp+78h+var_20] +
jnz loc_45D680  +
test byte ptr [ebx+2Ch] 1 +
jz loc_45D6B3  +
mov ecx [ebx+34h] +
mov edx [esp+78h+var_24] +
lea eax [ecx+1] +
cmp eax 1 +
jbe loc_45D921  +
add ecx edx +
mov [esp+78h+var_20] ecx +
cmp edx ecx +
jz loc_45D6A5  +
sub ecx edx +
jnz loc_45D8A9  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_45D90A  +
sub dword ptr [ebx+28h] 1 +
mov edx [esp+78h+var_24] +
mov ecx esi +
mov eax 0 +
mov [esp+78h+var_20] esi +
sub ecx edx +
cmp esi edx +
cmovz ecx eax +
mov eax ebx +
call sub_458DD0  +
mov eax [esp+78h+var_20] +
mov esi 1 +
mov edx [esp+78h+var_24] +
mov [esp+78h+var_78] edi +
mov edi 1 +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax 0 +
cmovz ecx eax +
lea eax [ebx+0Ch] +
call sub_458FF0  +
mov eax offset asc_490FC8 +
mov edx offset a_ +
test byte ptr [ebx] 4 +
cmovz edx eax +
mov eax [esp+78h+var_5C] +
call sub_459130  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_45D4C2  +
sub ecx edx +
jz loc_45D4C2  +
mov eax [esp+78h+var_5C] +
call sub_4590D0  +
mov edx [esp+78h+var_24] +
jmp loc_45D4C2  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_45D1F1  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_4595B0  +
jmp loc_45D1F1  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
jmp loc_45D339  +
mov edx [esp+78h+var_58] +
test edx edx +
jnz loc_45D8C6  +
test esi esi +
jz loc_45D8C6  +
test dword ptr [ebx] 300h +
jnz loc_45D8B7  +
test byte ptr [ebx] 1 +
jz loc_45D378  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_45D8E5  +
mov eax [ebx+38h] +
test eax eax +
jz loc_45D378  +
mov ecx [esp+78h+var_5C] +
mov edi [ecx+4] +
cmp [ecx] edi +
jz loc_45D7CE  +
mov eax ecx +
mov edx offset asc_490FB1 +
call sub_459160  +
mov eax [ebx+38h] +
call sub_458E90  +
test eax eax +
jz loc_45D378  +
cmp byte ptr [eax] 0 +
jz loc_45D378  +
mov edx eax +
mov eax [esp+78h+var_5C] +
call sub_459160  +
jmp loc_45D378  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_458EF0  +
jmp loc_45D572  +
mov edx offset asc_490FCB +
mov eax edi +
call sub_459130  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_459290  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_45D228  +
mov eax [esp+78h+var_5C] +
call sub_4590D0  +
jmp loc_45D21E  +
add edi 1 +
mov edx ebp +
mov [ebp+0] edi +
lea ecx [esp+78h+var_24] +
mov eax ebx +
call sub_45AED0  +
mov edx [esp+78h+var_24] +
cmp edx [esp+78h+var_20] +
mov esi eax +
jz loc_45D881  +
mov edx offset asc_490FB1 +
lea eax [esp+78h+var_24] +
call sub_459160  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_45D881  +
sub ecx edx +
jnz loc_45D989  +
test edx edx +
jz loc_45D88D  +
mov [esp+78h+var_78] edx +
call free  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_4C] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_45D339  +
mov eax [esp+78h+var_5C] +
call sub_4590D0  +
jmp loc_45D6A5  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_45C8F0  +
mov esi eax +
test esi esi +
jnz loc_45D795  +
jmp loc_45D378  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_4595B0  +
jmp loc_45D4E0  +
mov eax [esp+78h+var_5C] +
mov edx offset aStatic +
call sub_459160  +
jmp loc_45D7A9  +
mov eax [esp+78h+var_5C] +
call sub_4590D0  +
mov edx [esp+78h+var_24] +
jmp loc_45D459  +
mov eax [esp+78h+var_5C] +
mov edx offset asc_490FCB +
call sub_459130  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_45D6B3  +
mov ecx esi +
jmp loc_45D699  +
add eax 1 +
mov edx ebp +
mov [ebp+0] eax +
lea ecx [esp+78h+var_30] +
mov eax ebx +
call sub_45AED0  +
mov esi eax +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_45D965  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_45D339  +
mov eax [esp+78h+var_5C] +
call sub_4590D0  +
mov edx [esp+78h+var_24] +
jmp loc_45D881  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov ecx [edx] +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_80] eax +
mov [esp+98h+var_84] ecx +
cmp byte ptr [esi+2] 0 +
jz loc_45DB2B  +
mov eax [eax] +
and eax 3C00h +
mov [esp+98h+var_7C] eax +
jnz loc_45DB10  +
lea eax [esi+2] +
mov [esp+98h+var_94] offset unk_4915D0 +
mov [esp+98h+var_98] eax +
call strstr  +
test eax eax +
jz loc_45DB10  +
mov ecx [ebx+4] +
mov edx ebx +
lea eax [esp+98h+var_78] +
mov [esp+98h+var_70] 0 +
lea edi [esp+98h+var_6C] +
mov [esp+98h+var_74] 0 +
mov [esp+98h+var_78] 0 +
call sub_459290  +
mov eax [esp+98h+var_7C] +
mov ecx 15h +
mov edx [esp+98h+var_80] +
stos   +
lea eax [esp+98h+var_6C] +
call sub_4592D0  +
mov edi [esp+98h+var_80] +
cmp byte ptr [esi+2] 0 +
jz loc_45DAD7  +
mov [esp+98h+var_98] esi +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_45CC20  +
test eax eax +
jz loc_45DA6A  +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_45D120  +
test eax eax +
jnz loc_45DB38  +
mov eax [esp+98h+var_84] +
lea edx [esp+98h+var_78] +
mov ecx [esp+98h+var_74] +
mov [ebp+0] eax +
mov eax [ebx] +
mov [ebx+4] eax +
mov eax ebx +
call sub_459290  +
lea edx [esp+98h+var_6C] +
mov eax edi +
call sub_4592D0  +
movzx edx byte ptr [esi+2] +
lea eax [esi+2] +
test dl dl +
jnz loc_45DAA7  +
jmp loc_45DAD7  +
add eax 1 +
test dl dl +
jz loc_45DAD7  +
cmp dl 5Fh +
movzx edx byte ptr [eax+1] +
jnz loc_45DAA0  +
cmp dl 5Fh +
jnz loc_45DAA0  +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_45DAC4  +
jmp loc_45DACC  +
movzx edx byte ptr [eax+1] +
add eax 1 +
cmp dl 5Fh +
jz loc_45DAC0  +
test dl dl +
lea esi [eax-2] +
jnz loc_45DA45  +
xor edi edi +
lea eax [esp+98h+var_6C] +
call sub_458F40  +
lea eax [esp+98h+var_6C] +
call sub_458CA0  +
mov edx [esp+98h+var_78] +
mov eax edi +
test edx edx +
jz loc_45DB20  +
mov [esp+98h+var_98] edx +
mov [esp+98h+var_84] edi +
call free  +
mov eax [esp+98h+var_84] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_80] +
mov ecx ebx +
mov edx ebp +
mov [esp+98h+var_98] esi +
call sub_45CC20  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_45DAD9  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov ebp [edx] +
mov [esp+6Ch+var_5C] eax +
mov [esp+6Ch+var_58] ecx +
cmp byte ptr [ebp+0] 5Fh +
jz loc_45DBF0  +
mov edi offset a__thunk_ +
mov ecx 8 +
mov esi ebp +
cmps   +
jz loc_45DCF0  +
mov edi offset a__t +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_45DBE0  +
movzx eax byte ptr [ebp+3] +
cmp al 69h +
setz cl  +
cmp al 66h +
jnz loc_45DD80  +
test cl cl +
jnz loc_45DD88  +
mov edi offset aType_infoFunct +
lea eax [ebp+4] +
mov [ebx] eax +
movzx eax byte ptr [ebp+4] +
cmp al 51h +
jz loc_45DEB0  +
cmp al 74h +
jz loc_45DED5  +
cmp al 4Bh +
jz loc_45DEB0  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
call sub_45AED0  +
mov esi eax +
test esi esi +
jz loc_45DBE0  +
mov eax [ebx] +
cmp byte ptr [eax] 0 +
jz loc_45DFB0  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx esi byte ptr [ebp+1] +
mov [esp+6Ch+var_6C] offset byte_4738AC +
mov eax esi +
movsx edi al +
mov [esp+6Ch+var_68] edi +
call strchr  +
test eax eax +
jz loc_45DC17  +
cmp byte ptr [ebp+2] 5Fh +
jz loc_45DFD0  +
mov eax esi +
cmp al 5Fh +
jz loc_45DD92  +
mov eax esi +
cmp al 76h +
jz loc_45DE80  +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] offset a0123456789qt +
call strchr  +
test eax eax +
jz loc_45DB5D  +
mov [esp+6Ch+var_68] offset byte_4738AC +
mov [esp+6Ch+var_6C] ebp +
call strpbrk  +
test eax eax +
mov [esp+6Ch+var_54] eax +
jz loc_45DB5D  +
lea eax [ebp+1] +
mov [ebx] eax +
movzx eax byte ptr [ebp+1] +
cmp al 51h +
jz loc_45DF88  +
cmp al 74h +
jz loc_45DF02  +
cmp al 4Bh +
jz loc_45DF88  +
mov eax ebx +
call sub_458B70  +
test eax eax +
mov ebp eax +
js loc_45DBE0  +
mov edx [ebx] +
mov [esp+6Ch+var_6C] edx +
mov [esp+6Ch+var_50] edx +
call strlen  +
mov edx [esp+6Ch+var_50] +
cmp ebp eax +
jg loc_45DBE0  +
cmp ebp 0Ah +
jle loc_45E0A0  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_45DCCE  +
cmp byte ptr [edx+9] 4Eh +
jz loc_45E0B0  +
mov eax [esp+6Ch+var_58] +
mov ecx ebp +
call sub_4590A0  +
mov edx [ebx] +
lea edi [edx+ebp] +
mov [ebx] edi +
mov esi 1 +
jmp loc_45DF34  +
lea edx [ebp+8] +
mov eax ebx +
mov [ebx] edx +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45DBE0  +
mov eax [ebx] +
lea edx [eax+1] +
mov eax [esp+6Ch+var_5C] +
mov [ebx] edx +
call sub_45E110  +
test eax eax +
mov edi eax +
jz loc_45DBE0  +
neg esi  +
mov [esp+6Ch+var_64] esi +
lea esi [esp+6Ch+var_3E] +
mov [esp+6Ch+var_68] offset aVirtualFunctio +
mov [esp+6Ch+var_6C] esi +
call sprintf  +
cmp byte ptr [esp+6Ch+var_3E] 0 +
jnz loc_45E047  +
cmp byte ptr [edi] 0 +
jz loc_45DD56  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_459160  +
mov [esp+6Ch+var_6C] edi +
call free  +
mov esi [ebx] +
mov [esp+6Ch+var_6C] esi +
call strlen  +
add esi eax +
mov [ebx] esi +
add esp 6Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jz loc_45DBE0  +
mov edi offset aType_infoNode +
jmp loc_45DB9F  +
cmp byte ptr [ebp+2] 76h +
jnz loc_45DB5D  +
cmp byte ptr [ebp+3] 74h +
jnz loc_45DB5D  +
cmp byte ptr [ebp+4] 5Fh +
jnz loc_45DB5D  +
add ebp 5 +
mov [ebx] ebp +
mov esi 1 +
mov edi ebp +
movzx eax byte ptr [edi] +
test al al +
jz loc_45DE65  +
cmp al 51h +
jz loc_45DFE7  +
cmp al 74h +
jz loc_45E010  +
cmp al 4Bh +
jz loc_45DFE7  +
test ds:byte_4922A0[eax+eax] 4 +
jnz loc_45E057  +
mov [esp+6Ch+var_68] offset byte_4738AC +
mov [esp+6Ch+var_6C] edi +
call strcspn  +
mov ebp eax +
test ebp ebp +
jnz loc_45E08C  +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_68] offset byte_4738AC +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
test esi esi +
jz loc_45DBE0  +
test eax eax +
jz loc_45E040  +
cmp edi eax +
lea esi [esi+0] +
jnz loc_45DBE0  +
mov eax [esp+6Ch+var_5C] +
mov edx offset a_ +
test byte ptr [eax] 4 +
mov eax offset asc_490FC8 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_459160  +
mov eax [ebx] +
lea edi [eax+1] +
mov [ebx] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_45DDC7  +
test esi esi +
jz loc_45DBE2  +
mov eax [esp+6Ch+var_58] +
mov edx offset aVirtualTable +
call sub_459160  +
jmp loc_45DBE2  +
cmp byte ptr [ebp+2] 74h +
jnz loc_45DB5D  +
movsx eax byte ptr [ebp+3] +
mov [esp+6Ch+var_6C] offset byte_4738AC +
mov [esp+6Ch+var_68] eax +
call strchr  +
test eax eax +
jz loc_45DB5D  +
add ebp 4 +
mov [ebx] ebp +
jmp loc_45DDB5  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45AA70  +
mov esi eax +
jmp loc_45DBD1  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45A450  +
mov esi eax +
jmp loc_45DBD1  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45A450  +
mov esi eax +
test esi esi +
jz loc_45DBE0  +
mov edi [ebx] +
cmp edi [esp+6Ch+var_54] +
jnz loc_45DBE0  +
mov eax [esp+6Ch+var_5C] +
add edi 1 +
mov edx offset a_ +
mov [ebx] edi +
test byte ptr [eax] 4 +
mov eax offset asc_490FC8 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_459160  +
mov ebp [ebx] +
mov [esp+6Ch+var_6C] ebp +
call strlen  +
test eax eax +
mov edi eax +
jz loc_45DF7F  +
mov ecx eax +
mov eax [esp+6Ch+var_58] +
mov edx ebp +
call sub_4590A0  +
mov ebp [ebx] +
add edi ebp +
mov [ebx] edi +
jmp loc_45DBE2  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45AA70  +
mov esi eax +
jmp loc_45DF2A  +
cmp byte ptr [edi] 0 +
jz loc_45DBE2  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_459160  +
jmp loc_45DBE2  +
mov eax [esp+6Ch+var_5C] +
lea edx [ebp+3] +
mov esi 1 +
mov [ebx] edx +
add dword ptr [eax+2Ch] 1 +
jmp loc_45DBE2  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45AA70  +
mov edi [ebx] +
mov esi eax +
jmp loc_45DE0B  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45A450  +
mov edi [ebx] +
mov esi eax +
jmp loc_45DE0B  +
mov edi [ebx] +
jmp loc_45DDBC  +
mov eax [esp+6Ch+var_58] +
mov edx esi +
call sub_459160  +
jmp loc_45DD46  +
mov eax ebx +
call sub_458B70  +
mov edi [ebx] +
mov [esp+6Ch+var_6C] edi +
mov ebp eax +
call strlen  +
cmp ebp eax +
jle loc_45DDFF  +
mov [esp+6Ch+var_68] offset byte_4738AC +
mov esi 1 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
jmp loc_45DE23  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
mov ecx ebp +
call sub_4590A0  +
mov edi [ebx] +
jmp loc_45DE07  +
test ebp ebp +
jz loc_45DCDB  +
jmp loc_45DCCE  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_45DCCE  +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] offset byte_4738AC +
call strchr  +
mov edx [esp+6Ch+var_50] +
test eax eax +
jz loc_45DCCE  +
mov eax [esp+6Ch+var_58] +
mov edx offset aAnonymous +
call sub_459160  +
mov edi [ebx] +
mov [esp+6Ch+var_68] offset byte_4738AC +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
mov [esp+6Ch+var_54] eax +
jmp loc_45DCE0  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [eax+28h] +
test edx edx +
mov [esp+48h+var_2C] edx +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+48h+var_40] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+2Ch] 0 +
mov [esp+48h+var_3C] eax +
mov eax [ebx+30h] +
mov [esp+48h+var_38] eax +
mov eax [ebx+38h] +
mov dword ptr [ebx+38h] 0 +
mov [esp+48h+var_34] eax +
jz loc_45E4A0  +
cmp byte ptr [edx] 0 +
jz loc_45E4A0  +
test dword ptr [ebx] 300h +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
jnz loc_45E258  +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 6 +
jbe loc_45E2F0  +
mov edi offset a_imp__ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_45E380  +
mov edi offset a__imp_ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_45E380  +
cmp eax 0Ah +
jbe loc_45E2F0  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_45E2F0  +
movsx eax byte ptr [ebp+8] +
mov [esp+48h+var_48] offset byte_4738AC +
mov [esp+48h+var_44] eax +
call strchr  +
test eax eax +
jz loc_45E6B1  +
movzx ecx byte ptr [ebp+0Ah] +
cmp [eax] cl +
mov [esp+48h+var_30] ebp +
jnz loc_45E392  +
movzx eax byte ptr [ebp+9] +
cmp al 44h +
jz loc_45E6BA  +
cmp al 49h +
mov [esp+48h+var_30] ebp +
jnz loc_45E392  +
add ebp 0Bh +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+28h] 2 +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_45DB40  +
test eax eax +
jnz loc_45E72F  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_30] eax +
jmp loc_45E392  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_45DB40  +
test eax eax +
mov esi eax +
jz loc_45E340  +
mov ebp [esp+48h+var_2C] +
cmp byte ptr [ebp+0] 0 +
jnz loc_45E402  +
mov eax [ebx+28h] +
cmp eax 2 +
jz loc_45E483  +
cmp dword ptr [ebx+2Ch] 2 +
jz loc_45E545  +
cmp dword ptr [ebx+3Ch] 1 +
jz loc_45E560  +
mov eax ebx +
call sub_458F40  +
test esi esi +
jnz loc_45E418  +
mov edx [esp+48h+var_24] +
xor eax eax +
test edx edx +
jz loc_45E2C8  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
call free  +
mov eax [esp+48h+var_30] +
mov edi [esp+48h+var_40] +
mov ecx [esp+48h+var_3C] +
mov [ebx+28h] edi +
mov edi [esp+48h+var_38] +
mov [ebx+2Ch] ecx +
mov ecx [esp+48h+var_34] +
mov [ebx+30h] edi +
mov [ebx+38h] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dword ptr [ebx] 3800h +
mov [esp+48h+var_30] ebp +
jz loc_45E392  +
mov edi offset a__std__ +
mov ecx 7 +
mov esi ebp +
cmps   +
jz loc_45E580  +
mov esi [esp+48h+var_30] +
mov edi offset a__sti__ +
mov ecx 7 +
cmps   +
jnz loc_45E392  +
mov eax [esp+48h+var_30] +
mov dword ptr [ebx+28h] 2 +
add eax 7 +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] eax +
jmp loc_45E392  +
mov eax ebx +
call sub_458F40  +
mov eax ebx +
call sub_458CA0  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_45E376  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov ebp [esp+48h+var_2C] +
jmp loc_45E18C  +
add ebp 6 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+3Ch] 1 +
mov [esp+48h+var_30] ebp +
mov eax [esp+48h+var_30] +
mov edx eax +
jmp loc_45E3AD  +
cmp byte ptr [eax+1] 5Fh +
lea edx [eax+1] +
jz loc_45E434  +
mov [esp+48h+var_44] 5Fh +
mov [esp+48h+var_48] edx +
call strchr  +
test eax eax +
jnz loc_45E3A0  +
cmp dword ptr [ebx+28h] 2 +
jz loc_45E3D3  +
xor esi esi +
cmp dword ptr [ebx+2Ch] 2 +
jnz loc_45E295  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_45E3E4  +
cmp byte ptr [esi] 0 +
jnz loc_45E597  +
mov [esp+48h+var_48] esi +
call strlen  +
lea ebp [esi+eax] +
mov [esp+48h+var_2C] ebp +
cmp byte ptr [ebp+0] 0 +
mov esi 1 +
jz loc_45E27F  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_45D120  +
mov esi eax +
jmp loc_45E27F  +
lea eax [esp+48h+var_24] +
mov ecx 1 +
mov edx offset unk_490EC0 +
call sub_4590A0  +
mov eax [esp+48h+var_24] +
jmp loc_45E2C8  +
test edx edx +
mov esi eax +
jz loc_45E3C1  +
mov [esp+48h+var_44] offset a__0 +
mov [esp+48h+var_48] esi +
call strspn  +
cmp eax 2 +
jle loc_45E45B  +
lea esi [esi+eax-2] +
test esi esi +
jz loc_45E3C1  +
mov eax [ebx+30h] +
test eax eax +
jz loc_45E4A7  +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jnz loc_45E47A  +
cmp al 74h +
jnz loc_45E3C1  +
mov ebp [esp+48h+var_30] +
jmp loc_45E3F3  +
mov edx offset aGlobalConstr_0 +
lea eax [esp+48h+var_24] +
call sub_459130  +
mov dword ptr [ebx+28h] 0 +
jmp loc_45E29F  +
xor eax eax +
jmp loc_45E2C8  +
cmp [esp+48h+var_30] esi +
jz loc_45E5AB  +
mov eax [ebx] +
test ah 8 +
jz loc_45E4F0  +
cmp byte ptr [esi+2] 70h +
jnz loc_45E4F0  +
cmp byte ptr [esi+3] 74h +
jnz loc_45E4F0  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call strlen  +
lea edx [esp+48h+var_24] +
mov [esp+48h+var_48] edx +
lea edx [esp+48h+var_2C] +
mov ecx eax +
mov eax ebx +
call sub_45BAE0  +
mov ebp [esp+48h+var_2C] +
jmp loc_45E3F3  +
test ah 20h +
jz loc_45E510  +
movzx eax byte ptr [esi+2] +
cmp al 74h +
jz loc_45E5F4  +
cmp al 70h +
jnz loc_45E510  +
movzx eax byte ptr [esi+3] +
sub eax 73h +
cmp al 1 +
jbe loc_45E4C4  +
cmp [esp+48h+var_30] esi +
jz loc_45E605  +
cmp byte ptr [esi+2] 0 +
jz loc_45E3C1  +
mov [esp+48h+var_48] esi +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_45D9A0  +
test eax eax +
mov esi eax +
jz loc_45E27F  +
jmp loc_45E271  +
mov edx offset aGlobalDestru_0 +
lea eax [esp+48h+var_24] +
call sub_459130  +
mov dword ptr [ebx+2Ch] 0 +
jmp loc_45E29F  +
mov edx offset aImportStubFor +
lea eax [esp+48h+var_24] +
call sub_459130  +
mov dword ptr [ebx+3Ch] 0 +
jmp loc_45E29F  +
add ebp 7 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+2Ch] 2 +
mov [esp+48h+var_30] ebp +
jmp loc_45E392  +
mov edx esi +
lea eax [esp+48h+var_24] +
call sub_459160  +
mov esi [esp+48h+var_2C] +
jmp loc_45E3E4  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jz loc_45E680  +
mov eax [ebx] +
test ah 1Ch +
jz loc_45E698  +
mov eax [esp+48h+var_30] +
add eax 2 +
mov [esp+48h+var_2C] eax +
lea eax [esp+48h+var_2C] +
call sub_458B70  +
mov esi [esp+48h+var_2C] +
test esi esi +
jnz loc_45E3DB  +
jmp loc_45E3E4  +
cmp byte ptr [esi+3] 6Dh +
jnz loc_45E510  +
nop   +
jmp loc_45E4C4  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jnz loc_45E51A  +
cmp al 74h +
jz loc_45E524  +
test dword ptr [ebx] 3C00h +
jnz loc_45E6CF  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 5Fh +
jnz loc_45E64C  +
nop   +
lea esi [esi+0] +
add eax 1 +
cmp byte ptr [eax] 5Fh +
jz loc_45E640  +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_44] offset unk_4915D0 +
mov [esp+48h+var_48] eax +
call strstr  +
test eax eax +
jz loc_45E3C1  +
cmp byte ptr [eax+2] 0 +
jz loc_45E3C1  +
mov [esp+48h+var_48] eax +
jmp loc_45E527  +
cmp al 51h +
jz loc_45E696  +
cmp al 74h +
jz loc_45E696  +
cmp al 4Bh +
jz loc_45E696  +
cmp al 48h +
nop   +
jnz loc_45E4B1  +
mov eax [ebx] +
test ah 3Ch +
jnz loc_45E6A1  +
add dword ptr [ebx+28h] 1 +
mov ebp [esp+48h+var_30] +
add ebp 2 +
mov [esp+48h+var_2C] ebp +
jmp loc_45E3F3  +
mov [esp+48h+var_30] ebp +
jmp loc_45E392  +
mov eax ebp +
add eax 0Bh +
mov [esp+48h+var_2C] eax +
mov dword ptr [ebx+2Ch] 2 +
jmp loc_45E234  +
mov esi [esp+48h+var_30] +
mov edi offset a__vtbl__ +
mov ecx 8 +
cmps   +
jnz loc_45E632  +
mov esi [esp+48h+var_30] +
movzx edx byte ptr [esi+8] +
mov eax esi +
add eax 8 +
mov [esp+48h+var_28] eax +
test dl dl +
jz loc_45E738  +
lea eax [esp+48h+var_28] +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
jz loc_45E632  +
add eax [esp+48h+var_28] +
mov [esp+48h+var_28] eax +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jnz loc_45E6F6  +
cmp byte ptr [eax+1] 5Fh +
jnz loc_45E6FA  +
lea edx [eax+2] +
mov [esp+48h+var_28] edx +
movzx edx byte ptr [eax+2] +
jmp loc_45E6F6  +
mov ebp [esp+48h+var_2C] +
jmp loc_45E3F3  +
mov eax [esp+48h+var_2C] +
lea edx [eax+8] +
movzx eax byte ptr [eax+8] +
mov [esp+48h+var_2C] edx +
test al al +
jz loc_45E7C3  +
lea eax [esp+48h+var_2C] +
call sub_458B70  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45E632  +
mov edi [esp+48h+var_2C] +
mov [esp+48h+var_48] edi +
call strlen  +
cmp esi eax +
jg loc_45E632  +
test esi esi +
jnz loc_45E7B0  +
add esi edi +
mov [esp+48h+var_2C] esi +
movzx eax byte ptr [esi] +
cmp al 5Fh +
jnz loc_45E747  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_45E74B  +
mov edx offset asc_490FC8 +
lea eax [esp+48h+var_24] +
call sub_459130  +
mov eax [esp+48h+var_2C] +
lea edx [eax+2] +
mov [esp+48h+var_2C] edx +
movzx eax byte ptr [eax+2] +
jmp loc_45E747  +
mov edx edi +
mov ecx esi +
lea eax [esp+48h+var_24] +
call sub_4590D0  +
mov edi [esp+48h+var_2C] +
jmp loc_45E777  +
mov edx offset aVirtualTable +
lea eax [esp+48h+var_24] +
call sub_459160  +
mov ebp [esp+48h+var_2C] +
jmp loc_45E3F3  +
***
sub esp 1Ch +
mov eax ds:dword_49A874 +
test eax eax +
jz loc_45E7EE  +
call eax  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call exit  +
mov eax ds:dword_49A440 +
test eax eax +
jz loc_45E810  +
retn   +
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov esi ds:GetTempPathA +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call esi  +
sub esp 8 +
test eax eax +
mov ebx eax +
jnz loc_45E848  +
mov eax ds:dword_49A440 +
test eax eax +
jz loc_45E87C  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call sub_458340  +
mov [esp+1Ch+var_1C] ebx +
mov ds:dword_49A440 eax +
mov [esp+1Ch+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jnz loc_45E838  +
mov eax ds:dword_49A440 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ds:dword_49A440 0 +
mov [esp+1Ch+var_1C] offset unk_492040 +
call sub_45ED60  +
mov ds:dword_49A440 eax +
jmp loc_45E841  +
***
push esi  +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_45E9A0  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_49A460 +
call sprintf  +
add esp 18h +
mov eax offset unk_49A460 +
pop ebx  +
retn   +
***
mov [esp+18h+var_18] 0Ch +
sub esp 14h +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
test eax eax +
jz loc_45EA9C  +
lea ebx [eax+7] +
and ebx 0FFFFFFF8h +
lea ecx [ebx+8] +
cmp eax ecx +
ja loc_45EAB9  +
mov edx [esi+4] +
cmp ebx edx +
jbe loc_45EAE0  +
cmp ebx 1FFh +
ja loc_45EAF7  +
mov [esp+14h+var_14] 0FE0h +
call malloc  +
test eax eax +
jz loc_45EAB9  +
mov edx [esi+8] +
test ebx ebx +
mov dword ptr [eax+4] 0 +
mov [eax] edx +
lea edx [eax+8] +
mov [esi] edx +
mov dword ptr [esi+4] 0FD8h +
mov [esi+8] eax +
jz loc_45EAC1  +
mov eax ebx +
jnz loc_45EB2C  +
mov edx [esi+4] +
cmp edx 7 +
ja loc_45EB20  +
mov [esp+14h+var_14] 0FE0h +
mov ebx 8 +
call malloc  +
test eax eax +
jnz loc_45EA75  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov ebx 0FFFFFFF8h +
mov ecx 0FD0h +
mov eax 8 +
add eax edx +
mov [esi] eax +
add eax ebx +
mov [esi+4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx ebx +
neg ecx  +
mov eax [esi] +
sub edx ebx +
mov [esi+4] edx +
add eax ebx +
mov [esi] eax +
add esp 14h +
add eax ecx +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ecx +
call malloc  +
test eax eax +
jz loc_45EAB9  +
mov edx [esi+8] +
mov [eax] edx +
mov edx [esi] +
mov [eax+4] edx +
mov [esi+8] eax +
add esp 14h +
add eax 8 +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFF8h +
mov ebx 8 +
jmp loc_45EAE4  +
mov ecx 0FD8h +
sub ecx ebx +
neg ebx  +
jmp loc_45EAD0  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [eax+8] +
test eax eax +
jz loc_45EBC0  +
mov ebx eax +
xor ebp ebp +
jmp loc_45EB9D  +
lea edx [ebx+8] +
cmp esi edx +
jz loc_45EBC5  +
mov ebx [ebx] +
test ebx ebx +
jz loc_45EBC0  +
mov edi [ebx+4] +
test edi edi +
jnz loc_45EB90  +
cmp esi ebx +
jbe loc_45EBB2  +
lea edx [ebx+0FE0h] +
cmp esi edx +
jb loc_45EC12  +
mov ebp ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_45EB9D  +
lea esi [esi+0] +
call abort  +
mov ebx [ebx] +
cmp eax ebx +
jnz loc_45EBD2  +
jmp loc_45EBE0  +
mov eax esi +
mov esi [eax] +
mov [esp+1Ch+var_1C] eax +
call free  +
cmp ebx esi +
jnz loc_45EBD0  +
mov eax [esp+1Ch+arg_0] +
mov [eax+8] ebx +
mov edx [ebx+4] +
test edx edx +
jz loc_45EBF9  +
nop   +
mov ebx [ebx] +
mov eax [ebx+4] +
test eax eax +
jnz loc_45EBF0  +
mov eax [esp+1Ch+arg_0] +
add ebx 0FE0h +
sub ebx edi +
mov [eax] edi +
mov [eax+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
mov [esp+1Ch+var_10] edx +
jz loc_45EBC0  +
cmp eax ebx +
jz loc_45ECA0  +
mov [esp+1Ch+var_14] 0 +
mov edi ebp +
jmp loc_45EC48  +
cmp edi eax +
mov ecx 0 +
mov [esp+1Ch+var_1C] eax +
cmovz edi ecx +
call free  +
cmp ebp ebx +
jz loc_45EC65  +
mov eax ebp +
test edi edi +
mov ebp [eax] +
jnz loc_45EC30  +
cmp esi [eax+4] +
jb loc_45EC96  +
mov ecx [esp+1Ch+var_14] +
test ecx ecx +
jnz loc_45EC42  +
mov edi [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] eax +
jmp loc_45EC42  +
mov eax [esp+1Ch+var_14] +
mov edi ebp +
test eax eax +
cmovnz edi eax +
mov [esp+1Ch+var_14] edi +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+var_14] +
mov [eax] esi +
mov [eax+8] ecx +
mov eax [esp+1Ch+var_10] +
mov ecx [esp+1Ch+arg_0] +
sub eax esi +
mov [ecx+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_45EC42  +
mov [esp+1Ch+var_14] eax +
jmp loc_45EC74  +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_45ED10  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_458340  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_45EDB0  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:byte_4922A0[ecx+ecx] 88h +
jz loc_45EDEA  +
cmp byte ptr [eax+1] 3Ah +
jz loc_45EE10  +
test dl dl +
jz locret_45EE07  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_45EDFB  +
cmp dl 2Fh +
jnz loc_45EDFD  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_45EDF1  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_45EDEA  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_0] +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
test al al +
jz loc_45F295  +
mov ebx [esp+2Ch+arg_8] +
mov edi [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+arg_4] +
and ebx 1 +
mov [esp+2Ch+var_1C] ebx +
mov ebx [esp+2Ch+arg_8] +
and edi 10h +
mov [esp+2Ch+var_18] ebp +
and ebx 4 +
mov [esp+2Ch+var_14] ebx +
mov ebx [esp+2Ch+arg_8] +
and ebx 2 +
mov [esp+2Ch+var_20] ebx +
test edi edi +
jz loc_45EE84  +
movzx eax ds:byte_4921A0[eax] +
cmp al 3Fh +
jz loc_45EF55  +
jbe loc_45EEF0  +
cmp al 5Bh +
jz loc_45EFC2  +
cmp al 5Ch +
jnz loc_45EFA2  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jnz loc_45F105  +
test edi edi +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
jz loc_45F112  +
movzx edx ds:byte_4921A0[edx] +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
movzx eax ds:byte_4921A0[eax] +
cmp eax edx +
jnz loc_45EF48  +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
add [esp+2Ch+var_18] 1 +
test al al +
jz loc_45F260  +
mov ecx esi +
mov esi edx +
jmp loc_45EE79  +
cmp al 2Ah +
jnz loc_45EFA2  +
test byte ptr [esp+2Ch+arg_8] 4 +
mov ebp [esp+2Ch+var_18] +
jnz loc_45F0D5  +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
cmp dl 3Fh +
jnz loc_45F29B  +
mov eax [esp+2Ch+arg_8] +
and eax 1 +
jmp loc_45EF33  +
add esi 1 +
movzx edx byte ptr [esi-1] +
add ebp 1 +
cmp dl 2Ah +
jnz loc_45F154  +
test eax eax +
jz loc_45EF3D  +
cmp byte ptr [ebp+0] 2Fh +
jz loc_45EF48  +
cmp dl 3Fh +
jnz loc_45EF20  +
cmp byte ptr [ebp+0] 0 +
jnz loc_45EF20  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
test al al +
jz loc_45EF48  +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_45EF6C  +
cmp al 2Fh +
jz loc_45EF48  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_45EED2  +
cmp al 2Eh +
jnz loc_45EED2  +
mov eax [esp+2Ch+var_18] +
cmp eax [esp+2Ch+arg_4] +
jz loc_45EF48  +
mov edx [esp+2Ch+var_1C] +
test edx edx +
jz loc_45EED2  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_45EED2  +
jmp loc_45EF48  +
mov ebx [esp+2Ch+var_18] +
test edi edi +
movzx edx byte ptr [ebx] +
jz loc_45EECE  +
movzx edx ds:byte_4921A0[edx] +
cmp eax edx +
jz loc_45EED2  +
jmp loc_45EF48  +
mov eax [esp+2Ch+var_18] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_45EF48  +
mov ebx [esp+2Ch+var_14] +
test ebx ebx +
jnz loc_45F126  +
movzx eax byte ptr [ecx+1] +
movzx ebp dl +
cmp al 5Eh +
setz bl  +
cmp al 21h +
setz al  +
add ecx 2 +
or ebx eax +
movzx eax bl +
test eax eax +
cmovnz esi ecx +
mov [esp+2Ch+var_10] eax +
lea ecx [esi+1] +
movzx eax byte ptr [esi] +
jmp loc_45F028  +
cmp dl ss:byte_4921A0[ebp] +
movzx ecx ss:byte_4921A0[ebp] +
ja loc_45F01E  +
cmp ecx ebx +
jle loc_45F211  +
cmp al 5Dh +
jz loc_45F200  +
mov ecx esi +
mov esi [esp+2Ch+var_20] +
movzx edx al +
test esi esi +
jnz loc_45F03B  +
cmp al 5Ch +
jz loc_45F0C0  +
test edi edi +
jz loc_45F046  +
movzx edx ds:byte_4921A0[edx] +
test al al +
jz loc_45EF48  +
test edi edi +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
jz loc_45F05F  +
movzx eax ds:byte_4921A0[eax] +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_45F06F  +
cmp al 2Fh +
jz loc_45EF48  +
cmp al 2Dh +
movzx ebx dl +
jz loc_45F082  +
test edi edi +
jnz loc_45F007  +
cmp edx ebp +
jg loc_45F01E  +
mov ecx ebp +
jmp loc_45F016  +
movzx ebx byte ptr [ecx+1] +
cmp bl 5Dh +
jz loc_45F0D0  +
mov esi [esp+2Ch+var_20] +
lea eax [ecx+2] +
test esi esi +
jnz loc_45F09F  +
cmp bl 5Ch +
jz loc_45F1F4  +
test bl bl +
jz loc_45EF48  +
test edi edi +
jz loc_45F0B2  +
movzx ebx ds:byte_4921A0[ebx] +
lea esi [eax+1] +
movzx eax byte ptr [eax] +
jmp loc_45F076  +
movzx edx byte ptr [ecx] +
add ecx 1 +
jmp loc_45F03B  +
movzx ebx dl +
jmp loc_45F076  +
cmp byte ptr [ebp+0] 2Eh +
jnz loc_45EF07  +
cmp [esp+2Ch+arg_4] ebp +
jz loc_45EF48  +
test byte ptr [esp+2Ch+arg_8] 1 +
jz loc_45EF07  +
cmp byte ptr [ebp-1] 2Fh +
jnz loc_45EF07  +
nop   +
jmp loc_45EF48  +
test edi edi +
mov edx 5Ch +
jnz loc_45EEC0  +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
cmp eax edx +
jz loc_45EED2  +
jmp loc_45EF48  +
cmp dl 2Eh +
jnz loc_45EFDD  +
cmp eax [esp+2Ch+arg_4] +
jz loc_45EF48  +
mov ebp [esp+2Ch+var_1C] +
test ebp ebp +
jz loc_45EFDD  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_45EFDD  +
jmp loc_45EF48  +
cmp dl 3Fh +
jz loc_45EF33  +
xor eax eax +
test dl dl +
jz loc_45EF4D  +
test byte ptr [esp+2Ch+arg_8] 2 +
movzx ebx dl +
jnz loc_45F17A  +
cmp dl 5Ch +
jz loc_45F28B  +
test edi edi +
jz loc_45F185  +
movzx ebx ds:byte_4921A0[ebx] +
movzx eax byte ptr [ebp+0] +
sub esi 1 +
test al al +
jz loc_45EF48  +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_1C] esi +
mov esi ebx +
mov ebx edx +
and ecx 0FFFFFFFBh +
mov [esp+2Ch+var_20] ecx +
jmp loc_45F1BF  +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_45EF48  +
cmp bl 5Bh +
jz loc_45F1D3  +
test edi edi +
jz loc_45F1CF  +
movzx eax ds:byte_4921A0[eax] +
cmp eax esi +
jnz loc_45F1B0  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call sub_45EE30  +
test eax eax +
jnz loc_45F1B0  +
jmp loc_45EF4D  +
lea eax [ecx+3] +
movzx ebx byte ptr [ecx+2] +
jmp loc_45F09F  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jnz loc_45EED2  +
jmp loc_45EF48  +
cmp al 5Dh +
jz loc_45F249  +
test al al +
jz loc_45EF48  +
mov ecx [esp+2Ch+var_20] +
mov edx esi +
add esi 1 +
test ecx ecx +
movzx eax byte ptr [edx] +
jnz loc_45F231  +
cmp al 5Ch +
jz loc_45F242  +
cmp al 5Dh +
jz loc_45F249  +
test al al +
jz loc_45EF48  +
mov edx esi +
nop   +
jmp loc_45F223  +
lea esi [edx+2] +
mov edx esi +
jmp loc_45F223  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_45EED2  +
jmp loc_45EF48  +
mov ebp [esp+2Ch+var_18] +
movzx edx byte ptr [ebp+0] +
xor eax eax +
test dl dl +
jz loc_45EF4D  +
test byte ptr [esp+2Ch+arg_8] 8 +
jz loc_45EF48  +
cmp dl 2Fh +
jnz loc_45EF48  +
jmp loc_45EF4D  +
movzx ebx byte ptr [esi] +
nop   +
jmp loc_45F17A  +
mov ebp [esp+2Ch+arg_4] +
jmp loc_45F264  +
cmp dl 2Ah +
jz loc_45EF17  +
jmp loc_45F15D  +
***
mov ebx [esp+48h+arg_0] +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
mov ecx 1 +
test eax eax +
jnz loc_45F2E3  +
movzx edx [esp+48h+var_32] +
and dx 0F000h +
cmp dx 8000h +
jz loc_45F2F0  +
add esp 48h +
mov eax ecx +
pop ebx  +
retn   +
mov [esp+48h+var_48] ebx +
call _unlink  +
add esp 48h +
pop ebx  +
mov ecx eax +
mov eax ecx +
retn   +
***
push esi  +
xor esi esi +
push ebx  +
sub esp 14h +
mov edx [esp+20h] +
lea ebx [esp+24h] +
test edx edx +
jz loc_45F337  +
mov [esp] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_45F323  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_45F37D  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_45F357  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_49A878 +
mov ebx [esp+30h] +
lea edi [esp+34h] +
test ebx ebx +
jz loc_45F3D6  +
lea esi [esi+0] +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_45F3B0  +
mov byte ptr [esi] 0 +
mov eax ds:dword_49A878 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
lea esi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_45F465  +
mov eax ebx +
xor edi edi +
mov [esp+1Ch+var_1C] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_45F407  +
add edi 1 +
mov [esp+1Ch+var_1C] edi +
lea edi [esp+1Ch+arg_4] +
call sub_458340  +
mov [esp+1Ch+var_10] eax +
mov esi eax +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_45F430  +
mov byte ptr [esi] 0 +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] 1 +
call sub_458340  +
mov esi eax +
mov [esp+1Ch+var_10] eax +
jmp loc_45F456  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_45F509  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_45F497  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_458340  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_45F4C0  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_45F4FD  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_458340  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_45F4E6  +
***
push ebx  +
sub esp 14h +
test eax eax +
jz loc_45F54E  +
mov edx [eax] +
lea ebx [eax+4] +
test edx edx +
jz loc_45F546  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call free  +
mov edx [ebx-4] +
test edx edx +
jnz loc_45F534  +
mov [esp+18h+var_18] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call malloc  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx ebx byte ptr [eax+1] +
mov [esp+28h+var_1C] edx +
xor edx edx +
cmp bl 3Ah +
jnz loc_45F5D6  +
jmp loc_45F6EF  +
cmp eax 5Ch +
jz loc_45F661  +
cmp eax 2Fh +
lea esi [esi+0] +
jz loc_45F661  +
movsx eax byte ptr [ecx] +
add ecx 1 +
test eax eax +
jnz loc_45F5C0  +
lea eax ds:8[edx*4] +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov edi eax +
jz loc_45F738  +
xor ebp ebp +
cmp bl 3Ah +
jz loc_45F6C0  +
mov edx esi +
jmp loc_45F614  +
cmp eax 5Ch +
jz loc_45F683  +
cmp eax 2Fh +
jz loc_45F683  +
mov edx ebx +
lea ebx [edx+1] +
movsx eax byte ptr [ebx-1] +
test eax eax +
jnz loc_45F608  +
sub edx esi +
mov eax ebp +
test edx edx +
jle loc_45F636  +
lea ebx [edi+eax*4] +
mov eax esi +
call sub_45F560  +
add ebp 1 +
mov [ebx] eax +
mov eax [edi+ebp*4-4] +
mov dword ptr [edi+ebp*4] 0 +
test eax eax +
jz loc_45F73F  +
mov eax [esp+28h+var_1C] +
test eax eax +
jz loc_45F70C  +
mov [eax] ebp +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax byte ptr [ecx] +
add edx 1 +
cmp al 5Ch +
jnz loc_45F67A  +
nop   +
lea esi [esi+0] +
add ecx 1 +
movsx eax byte ptr [ecx] +
cmp al 5Ch +
jz loc_45F670  +
cmp al 2Fh +
jz loc_45F670  +
jmp loc_45F5D9  +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_45F716  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_45F690  +
cmp al 2Fh +
jz loc_45F690  +
mov edx ebx +
mov eax esi +
sub edx esi +
add ebp 1 +
call sub_45F560  +
test eax eax +
mov [edi+ebp*4-4] eax +
jz loc_45F723  +
mov esi ebx +
jmp loc_45F604  +
movzx eax byte ptr [esi+2] +
cmp al 5Ch +
jz loc_45F6D0  +
cmp al 2Fh +
jnz loc_45F604  +
mov edx 3 +
mov eax esi +
call sub_45F560  +
test eax eax +
mov [edi] eax +
jz loc_45F74D  +
add esi 3 +
mov ebp 1 +
jmp loc_45F604  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_45F6FF  +
cmp al 2Fh +
jnz loc_45F5D6  +
lea ecx [esi+3] +
mov edx 1 +
jmp loc_45F5D6  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 5Ch +
jz loc_45F690  +
jmp loc_45F69E  +
mov eax edi +
mov dword ptr [edi+ebp*4] 0 +
call sub_45F520  +
xor eax eax +
jmp loc_45F659  +
xor eax eax +
jmp loc_45F659  +
mov eax edi +
call sub_45F520  +
xor eax eax +
jmp loc_45F659  +
mov [esp+28h+var_28] edi +
call free  +
xor eax eax +
jmp loc_45F659  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 7Ch +
test eax eax +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_45FA40  +
test edx edx +
jz loc_45FA40  +
mov ebx [ebp+var_60] +
test ebx ebx +
jz loc_45FA40  +
mov [esp+88h+var_88] eax +
call sub_45EE20  +
cmp eax esi +
mov [ebp+var_64] eax +
jz loc_45FA50  +
mov ecx [ebp+arg_0] +
mov [esp+88h+var_88] esi +
test ecx ecx +
jnz loc_45F8C0  +
call _strdup  +
mov ebx eax +
test ebx ebx +
jz loc_45FA40  +
lea edx [ebp+var_50] +
mov eax ebx +
call sub_45F5A0  +
mov [esp+88h+var_88] ebx +
mov esi eax +
mov [ebp+var_64] eax +
call free  +
test esi esi +
jz loc_45FA40  +
mov eax [ebp+var_5C] +
lea edx [ebp+var_4C] +
call sub_45F5A0  +
test eax eax +
mov ebx eax +
jz loc_45FA30  +
mov eax [ebp+var_50] +
lea esi [eax-1] +
cmp esi [ebp+var_4C] +
mov [ebp+var_50] esi +
jnz loc_45F83D  +
test esi esi +
jle loc_45FA30  +
mov [ebp+var_5C] esi +
xor edi edi +
mov esi [ebp+var_64] +
jmp loc_45F81C  +
add edi 1 +
cmp [ebp+var_5C] edi +
jz loc_45FA30  +
mov eax [ebx+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [esi+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_45F810  +
mov esi [ebp+var_5C] +
cmp esi edi +
jz loc_45FA30  +
mov eax [ebp+var_60] +
lea edx [ebp+var_48] +
call sub_45F5A0  +
test eax eax +
mov edx eax +
mov [ebp+var_60] eax +
jz loc_45FA30  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_48] +
mov [ebp+var_68] eax +
cmp ecx eax +
cmovle eax ecx +
test eax eax +
mov [ebp+var_6C] ecx +
jle loc_45FBC8  +
xor edi edi +
mov esi edx +
mov [ebp+var_5C] eax +
jmp loc_45F87F  +
add edi 1 +
cmp edi [ebp+var_5C] +
jz loc_45F8D0  +
mov eax [esi+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [ebx+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_45F877  +
xor esi esi +
test edi edi +
jnz loc_45F8D0  +
mov eax [ebp+var_64] +
call sub_45F520  +
mov eax ebx +
call sub_45F520  +
mov eax [ebp+var_60] +
call sub_45F520  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_45ECB0  +
mov ebx eax +
jmp loc_45F7B4  +
mov eax [ebp+var_50] +
test eax eax +
jle loc_45FB9D  +
mov edx [ebp+var_64] +
mov [ebp+var_5C] ebx +
mov [ebp+var_70] edi +
mov esi edx +
lea eax [edx+eax*4] +
xor edx edx +
mov edi esi +
mov ebx edx +
mov esi eax +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_45F8F1  +
mov esi ebx +
mov edi [ebp+var_70] +
mov ebx [ebp+var_5C] +
mov eax [ebp+var_68] +
mov edx [ebp+var_6C] +
sub eax edi +
lea eax [eax+eax*2] +
add eax esi +
cmp edx edi +
jle loc_45F94D  +
mov ecx [ebp+var_60] +
mov [ebp+var_5C] ebx +
mov ebx eax +
mov [ebp+var_68] edi +
lea esi [ecx+edi*4] +
lea edx [ecx+edx*4] +
mov edi esi +
mov esi edx +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_45F932  +
mov eax ebx +
mov edi [ebp+var_68] +
mov ebx [ebp+var_5C] +
mov esi eax +
add esi 1 +
mov [esp+88h+var_88] esi +
call malloc  +
test eax eax +
mov esi eax +
jz loc_45F89B  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_50] +
xor ecx ecx +
test eax eax +
mov [ebp+var_5C] eax +
jle loc_45F99D  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_64] +
mov [ebp+var_6C] edi +
mov edi ecx +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_45F980  +
mov ebx [ebp+var_68] +
mov edi [ebp+var_6C] +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_45F99F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovnz ecx edx +
add al al +
mov eax [ebp+var_4C] +
sbb ecx 3 +
cmp edi eax +
jge loc_45FBD7  +
sub eax edi +
lea eax [eax+eax*2] +
add eax ecx +
nop   +
mov edx 2E2Eh +
add ecx 3 +
mov [ecx-3] dx +
mov byte ptr [ecx-1] 0 +
cmp ecx eax +
mov byte ptr [ecx-1] 2Fh +
jnz loc_45F9E0  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_48] +
cmp edi eax +
mov [ebp+var_5C] eax +
jge loc_45F89B  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_60] +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_45FA10  +
mov ebx [ebp+var_68] +
jmp loc_45F89B  +
xor esi esi +
mov [ebp+var_60] 0 +
jmp loc_45F89B  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+88h+var_88] offset aPath +
call getenv  +
test eax eax +
jz loc_45F79F  +
mov [esp+88h+var_88] eax +
mov [ebp+var_68] eax +
call strlen  +
lea ebx [eax+1] +
mov eax 2 +
cmp ebx 1 +
cmovbe ebx eax +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] eax +
call strlen  +
lea eax [ebx+eax+23h] +
and eax 0FFFFFFF0h +
call sub_46FB40  +
mov edx [ebp+var_68] +
sub esp eax +
lea edi [esp+88h+var_70+3] +
mov ebx edx +
and edi 0FFFFFFF0h +
mov [ebp+var_68] edi +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45FAC0  +
cmp al 3Bh +
jz loc_45FAC0  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_45FAAC  +
lea esi [esi+0] +
cmp ebx edx +
jz loc_45FBB0  +
mov esi ebx +
sub esi edx +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_88] edi +
call memcpy  +
movzx eax byte ptr [ebx-1] +
cmp al 5Ch +
jz loc_45FBA4  +
cmp al 2Fh +
jz loc_45FBA4  +
mov byte ptr [edi+esi] 2Fh +
mov byte ptr [edi+esi+1] 0 +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] edi +
mov [esp+88h+var_84] eax +
call strcat  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jz loc_45FB6C  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_45FB1F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov dword ptr [edx] 6578652Eh +
mov byte ptr [edx+4] 0 +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jnz loc_45FB8E  +
lea eax [ebp+var_48] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edi +
call ds:_stati64  +
test eax eax +
js loc_45FB8E  +
movzx eax [ebp+var_42] +
and ax 0F000h +
cmp ax 8000h +
jz loc_45FBCF  +
cmp byte ptr [ebx] 0 +
jz loc_45FBC0  +
add ebx 1 +
mov edx ebx +
jmp loc_45FAA5  +
xor esi esi +
jmp loc_45F90C  +
mov byte ptr [edi+esi] 0 +
jmp loc_45FAF9  +
mov byte ptr [edi] 2Eh +
mov byte ptr [edi+1] 2Fh +
mov byte ptr [edi+2] 0 +
jmp loc_45FAF9  +
mov esi [ebp+var_64] +
jmp loc_45F79F  +
xor esi esi +
jmp loc_45F89B  +
mov esi [ebp+var_68] +
jmp loc_45F79F  +
mov eax ecx +
jmp loc_45F9F8  +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov [esp+arg_0] 1 +
jmp sub_45F760  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp sub_45F760  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_45FC4B  +
test eax eax +
jz loc_45FC74  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_4921A0[eax] +
movzx edx ds:byte_4921A0[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_45FC41  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_45FCC1  +
jmp loc_45FCF2  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_45FCF0  +
mov ecx ebp +
test cl cl +
jnz loc_45FCF0  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_45FCF7  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_4921A0[eax] +
movzx edx ds:byte_4921A0[edx] +
cmp eax 2Fh +
jnz loc_45FC98  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_45FCAE  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_45FD39  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_4921A0[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_45FD17  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_45FC30  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45ECB0  +
mov ebx eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_45ECB0  +
mov [esp] ebx +
mov [esp+4] eax +
mov esi eax +
call sub_45FC30  +
mov [esp] ebx +
mov edi eax +
call free  +
mov [esp] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax ds:dword_49A4A0 +
test eax eax +
jz loc_45FDD0  +
retn   +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 105h +
call sub_458340  +
mov [esp+1Ch+var_18] 105h +
mov [esp+1Ch+var_1C] eax +
call _getcwd  +
mov ds:dword_49A4A0 eax +
add esp 1Ch +
retn   +
***
mov eax [esp+arg_4] +
cmp [esp+arg_0] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_4600BC  +
shl edx 3 +
cmp ebx edx +
ja loc_4600B3  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_4600DB  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_4600F7  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_45FFB5  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_460092  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_45FFA8  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_492620[eax] +
mov edx ds:dword_49262C[eax] +
mov eax ds:dword_492620[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_46007F  +
cmp eax 1 +
jz loc_460131  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_46006A  +
cmp edx 1 +
jz loc_460131  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_460061  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_45FFB5  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_460101  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_45FF5D  +
call sub_45FE90  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_492620[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_45FF6C  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_45FF88  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_4600AB  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+4] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_45FE90  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_492620[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_460203  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_4601F0  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_460203  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_45FE90  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_492620[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_46029F  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_460290  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_46029F  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_460210  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset loc_458370 +
mov dword ptr [esp+10h] offset loc_458370 +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_460210  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset calloc +
mov [esp+2Ch+var_1C] offset calloc +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_460210  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_4603F1  +
sub ebx 1 +
js loc_4603F1  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_4603D7  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_4603DC  +
mov eax [edi+28h] +
test eax eax +
jz loc_460410  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_460432  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_46047B  +
lea esi [esi+0] +
sub ebx 1 +
js loc_46047B  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_460460  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_460465  +
cmp edi 40000h +
jbe loc_4604D0  +
mov eax 100h +
call sub_45FE90  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_492620[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_460500  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_460518  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_4604E7  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_4604A7  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_4604A7  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_4604C5  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_492620[eax] +
mov eax ds:dword_492620[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_460650  +
cmp edx 1 +
jz loc_460660  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_460644  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_492620[eax] +
mov eax ds:dword_492620[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_460650  +
cmp ebp 1 +
jz loc_460603  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_460642  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_460603  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_4605D4  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] eax +
call sub_460530  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_460821  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_492620[eax] +
mov ecx ds:dword_49262C[eax] +
mov eax ds:dword_492620[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_46084D  +
cmp eax 1 +
jz loc_460762  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_460814  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_492620[edx] +
mov ecx ds:dword_49262C[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_492620[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_4607F0  +
cmp ecx 1 +
jz loc_4607E0  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_460814  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_460795  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_460795  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_460849  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_460858  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_4606BD  +
mov eax ebx +
call sub_45FF20  +
test eax eax +
jz loc_460849  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_4606BD  +
xor eax eax +
jmp loc_46080C  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_460849  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_4606A0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_4606A0  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_4608F7  +
mov edx [ebx+8] +
test edx edx +
jz loc_4608ED  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_4608B0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_4609A7  +
add ebx 4 +
cmp esi ebx +
jbe loc_4609B9  +
cmp dword ptr [ebx] 1 +
jbe loc_4609A0  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_4609A0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_4609D0  +
push edi  +
push esi  +
push ebx  +
mov ebx [esp+10h] +
mov esi [esp+14h] +
mov edi [esp+18h] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_4609F4  +
cmp edx 20h +
ja loc_460A08  +
mov [esp+18h] edi +
mov [esp+14h] esi +
mov [esp+10h] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_460980  +
***
mov eax ebx +
call sub_45FF20  +
jmp loc_4609F4  +
***
jmp loc_460A20  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_460A51  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_460A70  +
retn   +
***
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_4] +
test al 3 +
jz loc_460C76  +
cmp esi 0Bh +
jbe loc_460B9E  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_460AC0  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+0Ch+arg_4] +
cmp esi 0Bh +
ja loc_460C0C  +
jmp ds:off_4925E4[esi*4]  +
movzx esi byte ptr [eax+0Ah] +
shl esi 18h +
add ebx esi +
movzx esi byte ptr [eax+9] +
shl esi 10h +
add ebx esi +
movzx esi byte ptr [eax+8] +
shl esi 8 +
add ebx esi +
movzx esi byte ptr [eax+7] +
shl esi 18h +
add ecx esi +
movzx esi byte ptr [eax+6] +
shl esi 10h +
add ecx esi +
movzx esi byte ptr [eax+5] +
shl esi 8 +
add ecx esi +
movzx esi byte ptr [eax+4] +
add ecx esi +
movzx esi byte ptr [eax+3] +
shl esi 18h +
add edx esi +
movzx esi byte ptr [eax+2] +
shl esi 10h +
add edx esi +
movzx esi byte ptr [eax+1] +
shl esi 8 +
add edx esi +
movzx eax byte ptr [eax] +
add edx eax +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0Ch+arg_4] 0Bh +
jbe loc_460B9E  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
lea ecx [ecx+edi] +
sub edi ebx +
sub edx ecx +
mov ecx ebx +
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_460C85  +
mov ebx ecx +
mov ecx edi +
jmp loc_460B9E  +
***
cmp edx 4Bh +
ja loc_460D67  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_492800[edx*4]  +
test ecx ecx +
jz loc_460D63  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_460D52  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_460D52  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_460D63  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_460D26  +
xor eax eax +
jmp loc_460D52  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_460D96  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_460D96  +
test edx edx +
jz loc_460D96  +
test ecx ecx +
jnz loc_460DA0  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_460E15  +
test dl dl +
jnz loc_460E21  +
cmp al 4Bh +
jnz loc_460E60  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_460D10  +
test eax eax +
mov [esi] eax +
jz loc_460E55  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_460DD7  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_460E40  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_460DF6  +
test cl cl +
jz loc_460DE7  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_460DF6  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_460EA3  +
cmp al 46h +
jnz loc_460EA3  +
cmp esi ebp +
jnz loc_460E8A  +
lea esi [esi+0] +
jmp loc_460EA3  +
cmp eax 1Bh +
jz loc_460EB0  +
cmp eax 19h +
jnz loc_460E83  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_460EA3  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_460E72  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_460E8A  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_460E83  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_460F00  +
test dl dl +
jnz loc_460F04  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_460D10  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_460EF9  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_460EE3  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_460F37  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Bh +
ja loc_460F37  +
mov ecx [ebx] +
jmp ds:off_492930[ecx*4]  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_460F20  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+4] +
jmp loc_460F33  +
mov ecx [ebx+4] +
cmp dword ptr [ecx] 5 +
jnz loc_460F53  +
add dword ptr [edi] 1 +
mov ecx [ebx+4] +
mov edx edi +
mov eax esi +
call sub_460F10  +
mov ebx [ebx+8] +
jmp loc_460F33  +
add dword ptr [esi] 1 +
mov ecx [ebx+4] +
jmp loc_460F53  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_460FA0  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_460F85  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_461034  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_461043  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_461010  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_461001  +
xor eax eax +
jmp loc_461027  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_461085  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_461081  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_460FF0  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_4610B8  +
cmp al 6Eh +
jz loc_4610B1  +
lea eax [ebx+0Ch] +
call sub_460FF0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_4610C2  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_4610BA  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_4610E1  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_461090  +
test eax eax +
js loc_4610DC  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_4610DC  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_4610DC  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_461130  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_460FF0  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_460FF0  +
test eax eax +
mov esi eax +
jle loc_461204  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_461208  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_4611C0  +
cmp esi 9 +
jle loc_4611A7  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_4611D0  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_460D70  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_461186  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_461186  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_4611E0  +
cmp al 5Fh +
jz loc_4611E0  +
cmp al 24h +
jnz loc_4611A7  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_4611A7  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_460D70  +
jmp loc_4611B2  +
xor eax eax +
jmp loc_4611B5  +
xor eax eax +
lea esi [esi+0] +
jmp loc_4611B2  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_46125E  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_461150  +
mov ecx edi +
mov edx 4Ah +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_460D10  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_461236  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_461290  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_4612E0  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_4612BF  +
test cl cl +
jnz loc_4612BF  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_0 +
cmp dl [eax] +
jz loc_461374  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_4612C7  +
jmp loc_461281  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_46144A  +
cmp dl 5Fh +
jz loc_461370  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_461333  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_461281  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_461348  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_461350  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_461304  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_461281  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_46130B  +
xor edx edx +
mov eax ecx +
jmp loc_46132B  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_461281  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_461353  +
mov edi [eax+14h] +
test edi edi +
mov [esp+1Ch+var_14] edi +
jz loc_46143A  +
mov edx [ebx+14h] +
mov ebp [ebx+18h] +
mov edi [eax+18h] +
mov [esp+1Ch+var_18] 0 +
cmp edx ebp +
mov [esp+1Ch+var_10] edi +
jge loc_4613C7  +
mov esi [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_4613C7  +
mov esi [esp+1Ch+var_14] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_18] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_10] +
mov [edi+8] esi +
mov edi [esp+1Ch+var_18] +
mov [ebx+2Ch] edi +
test ecx ecx +
jz loc_461442  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edx ebp +
jge loc_461400  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_461400  +
mov dword ptr [eax] 18h +
mov [eax+4] esi +
mov [eax+8] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_461283  +
mov edx eax +
mov eax ebx +
call sub_461220  +
test eax eax +
jz loc_461281  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_461283  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_461283  +
mov ebp [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_4613CE  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_4613D8  +
cmp dl 5Fh +
jz loc_4612F5  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_4612FA  +
nop   +
jmp loc_4612A0  +
***
push ebx  +
mov ebx eax +
jnz loc_46148E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_461485  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_4614C0  +
cmp edx 76h +
jnz loc_461480  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_460FF0  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_461480  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_460FF0  +
jmp loc_4614C8  +
lea eax [ebx+0Ch] +
call sub_460FF0  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_461482  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_461482  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_461527  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_461520  +
cmp dword ptr [eax] 2Fh +
jnz loc_461520  +
cmp edx 0 +
jg loc_46150B  +
jmp loc_461517  +
cmp dword ptr [eax] 2Fh +
jnz loc_461520  +
test edx edx +
jz loc_461523  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_461502  +
retn   +
jz loc_461523  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_461575  +
cmp dword ptr [ebx] 4Ah +
ja loc_461560  +
mov edx [ebx] +
jmp ds:off_492A80[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_461540  +
test eax eax +
jnz loc_461577  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_46154D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_4614E0  +
test eax eax +
jz loc_461575  +
cmp dword ptr [eax] 2Fh +
jnz loc_461575  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_461600  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4615D0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi] +
mov edx [esp+10h+arg_0] +
add eax [esi+4] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_4615C3  +
test ebx ebx +
jnz loc_461612  +
cmp eax 2 +
mov bl 2 +
jbe loc_461618  +
add ebx ebx +
cmp eax ebx +
ja loc_461612  +
mov eax [esi] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_461631  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_4615BC  +
mov eax [esi] +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_4615C3  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_4616E3  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_46169C  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_4616E3  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461681  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_461684  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_492BAC +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_461790  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_461742  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_461790  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_461727  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_46172A  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_80] edx +
jz loc_4618A0  +
mov eax [eax+118h] +
test eax eax +
jnz loc_461890  +
mov eax [ecx] +
cmp eax 4Bh +
ja loc_462D43  +
jmp ds:off_492E18[eax*4]  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_461810  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_461810  +
cmp esi 6 +
jbe loc_463632  +
cmp esi 7 +
jnz loc_461810  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_461810  +
cmp dword ptr [edx+8] 1 +
jz loc_463A6E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4635E7  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_463B40  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4635B0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_4637B2  +
cmp esi 8 +
jz loc_463787  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
lea esi [esi+0] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_463B40  +
mov eax ebx +
mov edx offset aClone +
call sub_461660  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_463B40  +
mov edx 5Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_463B40  +
mov eax ebx +
mov edx offset aAbi +
call sub_461660  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_463B40  +
mov edx 5Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov edx [ecx+4] +
mov eax ebx +
call sub_461540  +
test eax eax +
jz loc_46394B  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_462F62  +
mov edx [eax+4] +
test edx edx +
jz loc_462F62  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_461938  +
mov eax [ebp+4] +
mov [esp+98h+var_78] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+98h+var_74] eax +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov [ebx+11Ch] edi +
call sub_463B40  +
cmp [esp+98h+var_74] edi +
jle loc_462D84  +
mov eax [ebx+100h] +
mov ebp offset asc_492D46 +
jmp loc_4619B5  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_492D46+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462D84  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_461992  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_461995  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_461A33  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D31h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462E37  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461A10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_461A13  +
mov eax ebx +
mov edx offset aUnnamedType +
call sub_461660  +
mov edx [ebp+4] +
mov eax ebx +
add edx 1 +
call sub_4616F0  +
mov edx 7Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aLambda +
call sub_461660  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
mov eax ebx +
mov edx offset asc_492DFA +
call sub_461660  +
mov edx [ebp+8] +
mov eax ebx +
add edx 1 +
call sub_4616F0  +
mov edx 7Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aGlobalDestruct +
call sub_461660  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aGlobalConstruc +
call sub_461660  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aDecltype +
call sub_461660  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_463B40  +
mov edx 29h +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov edx [ecx+4] +
mov eax ebx +
call sub_4616F0  +
jmp loc_461890  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_461B93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D16h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462E5D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461B70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_461B73  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_46350F  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_461890  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_463B40  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_463B40  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aJavaResource +
call sub_461660  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_4618A0  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_4618A0  +
mov eax [eax+4] +
mov edi offset aQu +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+98h+var_7C] eax +
mov eax [edx+4] +
mov [esp+98h+var_78] eax +
mov eax [edx+8] +
mov [esp+98h+var_74] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_4638DF  +
mov eax ebx +
mov edx offset aNew +
call sub_461660  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax+4] 0 +
jz loc_461CC9  +
mov edx [esp+98h+var_80] +
mov ecx eax +
mov eax ebx +
call sub_464DD0  +
mov edx 20h +
mov eax ebx +
call sub_460F70  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_78] +
mov edx edi +
call sub_463B40  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_461890  +
mov edx edi +
mov eax ebx +
call sub_464DD0  +
jmp loc_461890  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
mov eax [ecx+8] +
cmp dword ptr [eax] 37h +
jnz loc_4618A0  +
mov edi [ecx+4] +
mov esi [edi+4] +
mov [esp+98h+var_7C] edi +
mov edx [esi] +
cmp byte ptr [edx+1] 63h +
jz loc_4637EF  +
mov edi [esp+98h+var_7C] +
cmp dword ptr [edi] 31h +
jz loc_462D52  +
mov esi edx +
mov ecx 3 +
mov edi offset aCl +
cmps   +
mov ecx [eax+4] +
jnz loc_461D4E  +
cmp dword ptr [ecx] 3 +
jz loc_463926  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_464DD0  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx +
mov edx [eax+4] +
mov [esp+98h+var_7C] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46389D  +
mov ecx 3 +
mov esi edx +
mov edi offset aCl +
cmps   +
jnz loc_4638CB  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_464DD0  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_461890  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_461890  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_461890  +
mov edx 29h +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+98h+var_78] eax +
mov eax [eax] +
mov [esp+98h+var_7C] edi +
cmp eax 31h +
jz loc_4632AE  +
cmp eax 33h +
jz loc_46337C  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464D10  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464DD0  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aOperator +
call sub_461660  +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_464A90  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aOperator +
call sub_461660  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ebp [ecx+4] +
mov eax ebx +
mov edx offset aOperator_0 +
mov edi [ebp+8] +
call sub_461660  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_4630DA  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_461890  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_461EC1  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461890  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461EA2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_461EA5  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_461F1C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_463B40  +
mov eax ebx +
mov edx 7Bh +
call sub_460F70  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx esi +
call sub_463B40  +
mov edx 7Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_461F58  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_463B40  +
mov eax [ebp+8] +
test eax eax +
jz loc_461890  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_4633AB  +
mov edx offset asc_492D46 +
mov eax ebx +
call sub_461660  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov esi [ebx+120h] +
mov edi [ebx+100h] +
call sub_463B40  +
cmp [ebx+120h] esi +
jnz loc_461890  +
mov eax [ebx+100h] +
cmp eax edi +
jnz loc_461890  +
sub eax 2 +
mov [ebx+100h] eax +
jmp loc_461890  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_4630EE  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_493940 +
jz loc_461FF0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_463B40  +
mov edx 20h +
mov eax ebx +
call sub_460F70  +
cmp word ptr [ebp+8] 0 +
jz loc_46302C  +
mov edx offset a_accum +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464D10  +
jmp loc_461890  +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ecx +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_463B40  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_46206C  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_463B80  +
mov eax [esp+98h+var_58] +
mov [ebx+114h] eax +
jmp loc_461890  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov ecx eax +
mov [esp+98h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+98h+var_74] edi +
test esi esi +
mov [esp+98h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_463B00  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_463B00  +
mov eax esi +
mov esi 1 +
mov [esp+98h+var_70] ebp +
mov [esp+98h+var_7C] ecx +
jmp loc_4620ED  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_46213E  +
mov edx [eax+8] +
test edx edx +
jnz loc_462138  +
cmp esi 3 +
ja loc_4634C7  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+98h+var_58] edi +
mov edi [esp+98h+var_7C] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_4620E0  +
mov ebp [esp+98h+var_70] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov ecx [ebp+8] +
call sub_463B40  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_461890  +
cmp esi 1 +
jz loc_463860  +
mov edi [esp+98h+var_78] +
sub esi 1 +
mov [esp+98h+var_7C] ebp +
mov ebp [esp+98h+var_80] +
mov eax esi +
shl eax 4 +
lea edi [edi+eax+4] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_463B80  +
cmp esi 1 +
jz loc_46304A  +
sub esi 1 +
jmp loc_462187  +
test byte ptr [esp+98h+var_80] 20h +
jnz loc_4630A5  +
cmp dword ptr [ecx+4] 0 +
jz loc_4621BF  +
test byte ptr [esp+98h+var_80] 40h +
jz loc_46354E  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_464780  +
jmp loc_461890  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_462213  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492C61h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462DEB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4621F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4621F3  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_462289  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492C4Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462DD8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462266  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462269  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_462303  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492C39h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462DC5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4622E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4622E3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_462379  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492C28h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462F2E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462356  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462359  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_4623F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492C15h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462F1B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4623D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4623D3  +
mov eax ebx +
mov edx offset aConstructionVt +
call sub_461660  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
mov edx edi +
call sub_463B40  +
mov eax ebx +
mov edx offset aIn +
call sub_461660  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_463B40  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aVttFor +
call sub_461660  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aVtableFor +
call sub_461660  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov eax ebx +
mov edx 7Eh +
call sub_460F70  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov esi [ecx+4] +
test esi esi +
jnz loc_462F76  +
mov edx offset aThis +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
lea edx [ecx+4] +
mov eax ebx +
call sub_4614E0  +
test eax eax +
jz loc_463096  +
cmp dword ptr [eax] 2Fh +
jz loc_46306A  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
mov [ebx+110h] esi +
jmp loc_461890  +
mov eax [ebx+140h] +
test byte ptr [esp+98h+var_80] 4 +
mov [ebx+140h] ecx +
mov [esp+98h+var_7C] eax +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+98h+var_78] eax +
jz loc_46257D  +
mov esi [edx] +
test esi esi +
jnz loc_46257D  +
cmp dword ptr [edx+8] 6 +
jz loc_463869  +
mov ecx edx +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_463B40  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_463776  +
mov edx 3Ch +
mov eax ebx +
call sub_460F70  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_463765  +
mov edx 3Eh +
mov eax ebx +
call sub_460F70  +
mov eax [esp+98h+var_78] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_7C] +
mov [ebx+140h] eax +
jmp loc_461890  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov esi [ecx+4] +
mov [esp+98h+var_74] eax +
test esi esi +
jz loc_463756  +
mov eax [ebx+110h] +
xor edx edx +
xor edi edi +
mov [esp+98h+var_70] ecx +
mov [esp+98h+var_7C] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_78] eax +
mov ecx [esp+98h+var_7C] +
add edi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [esi] +
mov [ebx+114h] eax +
mov [eax+4] esi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_462D94  +
cmp edx 4 +
mov ebp [esp+98h+var_70] +
jz loc_4639F4  +
cmp edx 2 +
jnz loc_4626D6  +
mov ecx [esi+8] +
cmp dword ptr [ecx] 45h +
jz loc_463A36  +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
ja loc_4626D6  +
cmp edi 4 +
jz loc_463A18  +
mov eax edi +
shl eax 4 +
mov [esp+98h+var_70] esi +
mov esi [esp+98h+var_7C] +
add eax [esp+98h+var_78] +
jmp loc_462698  +
add eax 10h +
cmp edi 4 +
jz loc_463A18  +
mov edx [eax-0Ch] +
add edi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] esi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_46268C  +
mov esi [esp+98h+var_70] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
cmp dword ptr [esi] 4 +
jz loc_463A27  +
test edi edi +
jz loc_4637E0  +
lea ebp [edi-1] +
mov edi [esp+98h+var_78] +
mov eax ebp +
shl eax 4 +
lea esi [edi+eax+8] +
jmp loc_462715  +
sub esi 10h +
test ebp ebp +
jz loc_4637E0  +
sub ebp 1 +
mov edi [esi] +
test edi edi +
jnz loc_462707  +
mov eax ebx +
mov edx 20h +
call sub_460F70  +
mov ecx [esi-4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B80  +
jmp loc_462707  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_461890  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46276F  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461890  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_462750  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_462753  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_4627E7  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CE7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462E70  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4627C4  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4627C7  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_462863  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CD1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462F08  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462840  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462843  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_4628D9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CB7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462DB2  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4628B6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4628B9  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_462953  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492C8Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462DFE  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462930  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462933  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_4629C9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CA0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462E24  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4629A6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4629A9  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_462A43  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492C7Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462E11  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462A20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462A23  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_463B40  +
and edi 4 +
jnz loc_462F9C  +
mov edx offset asc_492BB6 +
mov eax ebx +
call sub_461660  +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 45h +
jz loc_4634D6  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_463B40  +
jmp loc_461890  +
test byte ptr [esp+98h+var_80] 4 +
jnz loc_4633F1  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_461890  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_462B0F  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461890  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_462AF0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_462AF3  +
test byte ptr [esp+98h+var_80] 4 +
mov eax [ecx+4] +
jnz loc_462FAD  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_461890  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_462B9F  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461890  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_462B80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_462B83  +
mov eax [ecx+4] +
xor esi esi +
cmp dword ptr [eax] 5 +
jz loc_463169  +
mov edx [eax] +
cmp edx 23h +
jz loc_46303D  +
cmp edx [ebp+0] +
jz loc_46303D  +
cmp edx 24h +
jz loc_463705  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] edi +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_463B40  +
mov edi [esp+98h+var_50] +
test edi edi +
jz loc_462F50  +
mov eax [esp+98h+var_58] +
test esi esi +
mov [ebx+114h] eax +
jz loc_461890  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
jmp loc_461890  +
mov edi [ebx+114h] +
xor esi esi +
jmp loc_462C18  +
mov edi [ebx+114h] +
test edi edi +
jz loc_463A0F  +
mov edx edi +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_462CAD  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_462CB3  +
cmp eax ecx +
jz loc_4633DE  +
mov edx [edx] +
test edx edx +
jnz loc_462C91  +
xor esi esi +
jmp loc_462C18  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_462CEA  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CFFh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462E4A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462CC7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462CCA  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
cmp dword ptr [esi+8] 1 +
jnz loc_461D32  +
mov ecx [esi+4] +
cmp byte ptr [ecx] 3Eh +
jnz loc_461D32  +
mov eax ebx +
mov edx 28h +
call sub_460F70  +
mov eax [ebp+4] +
mov eax [eax+4] +
mov esi [eax] +
mov eax [ebp+8] +
jmp loc_461D34  +
add edi 1 +
cmp edi esi +
jnz loc_461966  +
jmp loc_461890  +
mov esi [esi+4] +
test esi esi +
jz loc_463756  +
add eax 10h +
cmp edi 4 +
jz loc_462F41  +
mov edx ebp +
jmp loc_46261C  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_80] +
call sub_463B40  +
mov eax [ebx+100h] +
jmp loc_462EAF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CEDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462EF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462E90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462E93  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_463B80  +
jmp loc_462C56  +
mov eax [ebp+4] +
test esi esi +
mov [esp+98h+var_78] eax +
jnz loc_46195D  +
jmp loc_461890  +
mov eax ebx +
mov edx offset aParm +
call sub_461660  +
mov edx esi +
mov eax ebx +
call sub_4616F0  +
mov edx 7Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov edx 2Eh +
mov eax ebx +
call sub_460F70  +
jmp loc_462AAE  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_461890  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_462FE4  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461890  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_462FC5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_462FC8  +
mov edx offset a_fract +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_462C18  +
mov ebp [esp+98h+var_7C] +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_464500  +
jmp loc_461890  +
mov edx [ebx+11Ch] +
jmp loc_463081  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_463096  +
cmp dword ptr [eax] 2Fh +
jnz loc_463096  +
cmp edx 0 +
jg loc_463072  +
jnz loc_463096  +
mov eax [eax+4] +
test eax eax +
lea esi [esi+0] +
jnz loc_462519  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
mov esi [esp+98h+var_80] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_464780  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_461890  +
mov edx esi +
mov eax ebx +
call sub_463B40  +
jmp loc_461890  +
mov edx 20h +
mov eax ebx +
call sub_460F70  +
mov esi [ebp+4] +
jmp loc_461E86  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_463123  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D37h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461FCD  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463100  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_463103  +
mov esi [ebx+12Ch] +
mov edi [ebx+128h] +
test esi esi +
mov [esp+98h+var_78] edi +
jle loc_4631A5  +
cmp eax [edi] +
jz loc_4636BB  +
lea edx [edi+8] +
xor ecx ecx +
jmp loc_46319E  +
mov edi edx +
add edx 8 +
cmp eax [edx-8] +
jz loc_4636BF  +
add ecx 1 +
cmp ecx esi +
jnz loc_463190  +
cmp esi [ebx+130h] +
jge loc_463ADD  +
mov edi [esp+98h+var_78] +
lea ecx [edi+esi*8] +
mov edi [ebx+110h] +
add esi 1 +
mov [ebx+12Ch] esi +
add ecx 4 +
mov [ecx-4] eax +
test edi edi +
mov [esp+98h+var_6C] edi +
jz loc_463238  +
mov edi [ebx+138h] +
mov esi [ebx+13Ch] +
lea edx ds:0[edi*8] +
cmp esi edi +
mov [esp+98h+var_70] esi +
mov [esp+98h+var_78] edx +
jle loc_463ADD  +
mov [esp+98h+var_74] eax +
mov edx [esp+98h+var_6C] +
jmp loc_463211  +
add [esp+98h+var_78] 8 +
cmp edi [esp+98h+var_70] +
jz loc_463AD3  +
mov eax [edx+4] +
add edi 1 +
mov esi [esp+98h+var_78] +
add esi [ebx+134h] +
mov [esi+4] eax +
mov [ecx] esi +
mov edx [edx] +
mov ecx esi +
test edx edx +
jnz loc_463202  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ecx] 0 +
cmp dword ptr [ebx+118h] 0 +
jnz loc_461890  +
xor esi esi +
lea edx [eax+4] +
mov eax ebx +
call sub_4614E0  +
test eax eax +
jz loc_463291  +
cmp dword ptr [eax] 2Fh +
jnz loc_462BF5  +
mov edx [ebx+11Ch] +
jmp loc_46327F  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_463291  +
cmp dword ptr [eax] 2Fh +
jnz loc_463291  +
cmp edx 0 +
jg loc_463270  +
jnz loc_463291  +
mov eax [eax+4] +
test eax eax +
jnz loc_462BF5  +
test esi esi +
jz loc_46329F  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
mov eax [esp+98h+var_78] +
mov edi offset aAd +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+98h+var_7C] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_4632D6  +
cmp eax 3 +
jz loc_46396A  +
cmp eax 37h +
jz loc_463A48  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464D10  +
test ebp ebp +
jz loc_461E11  +
mov edi offset aGs +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_46361E  +
mov edi offset aSt +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_461E11  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4639C2  +
lea edx [eax+1] +
mov ecx [esp+98h+var_7C] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_463B40  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_463990  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_461890  +
mov eax ebx +
mov edx 28h +
call sub_460F70  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
add ecx 4 +
call sub_464A90  +
mov edx 29h +
mov eax ebx +
call sub_460F70  +
jmp loc_461E11  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_461F74  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_46342D  +
jmp loc_461890  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_463488  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_461890  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_463402  +
cmp al 5Fh +
jnz loc_463402  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_463402  +
cmp byte ptr [esi+2] 55h +
jnz loc_463402  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_463402  +
xor ecx ecx +
jmp loc_46346A  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_463A3E  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_463454  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_463740  +
movsx eax dl +
sub eax 37h +
jmp loc_46345A  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+98h+var_80] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+98h+var_80] +
jmp loc_463413  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
mov edx offset aDefaultArg +
mov eax ebx +
mov [esp+98h+var_7C] ecx +
call sub_461660  +
mov ecx [esp+98h+var_7C] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax ebx +
call sub_4616F0  +
mov edx offset asc_492BC7 +
mov eax ebx +
call sub_461660  +
mov ecx [esp+98h+var_7C] +
mov ecx [ecx+4] +
jmp loc_462ABA  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_461BF0  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_463B40  +
mov ecx [esp+98h+var_50] +
mov eax [esp+98h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_461890  +
mov edx 20h +
mov eax ebx +
call sub_460F70  +
jmp loc_4621BF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_461857  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_461824  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
jmp loc_461890  +
mov ecx [ecx+8] +
mov edi [ecx] +
test edi edi +
jnz loc_461810  +
cmp eax 3Ch +
jz loc_463AEC  +
mov edx [esp+98h+var_80] +
mov eax ebx +
sub esi 2 +
call sub_463B40  +
cmp esi 4 +
ja loc_461890  +
jmp ds:off_492F48[esi*4]  +
mov edx offset aLl +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
mov edx offset aUl +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
mov edx 6Ch +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov edx 75h +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov edx offset aUll +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
mov edi [esp+98h+var_78] +
mov esi [ebx+124h] +
test esi esi +
jz loc_4637C3  +
mov ecx [esi] +
cmp ecx eax +
jz loc_46324B  +
mov edx esi +
jmp loc_4636F5  +
mov edx [edx+4] +
test edx edx +
jz loc_4637C3  +
mov ecx [edx] +
cmp ecx eax +
jz loc_46324B  +
cmp ebp ecx +
jnz loc_4636E0  +
cmp edx esi +
jz loc_4636E0  +
lea esi [esi+0] +
jmp loc_46324B  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
test ecx ecx +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_4C] eax +
jnz loc_462C3F  +
jmp loc_462C3C  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_463A9E  +
movsx eax dl +
sub eax 57h +
jmp loc_46345A  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
mov edx 20h +
mov eax ebx +
call sub_460F70  +
jmp loc_4625BE  +
mov edx 20h +
mov eax ebx +
call sub_460F70  +
jmp loc_462597  +
mov eax ebx +
mov edx 5Bh +
call sub_460F70  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_463B40  +
mov edx 5Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov edx 2Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461872  +
mov esi [ebx+110h] +
mov edx [edi+4] +
mov [esp+98h+var_7C] esi +
mov esi 1 +
mov [ebx+110h] edx +
jmp loc_46324D  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
jmp loc_461890  +
movzx edi byte ptr [edx] +
lea ecx [edi-63h] +
cmp cl 1 +
jbe loc_463808  +
sub edi 72h +
mov ecx edi +
cmp cl 1 +
ja loc_461D25  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_464D10  +
mov eax ebx +
mov edx 3Ch +
call sub_460F70  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_463B40  +
mov eax ebx +
mov edx offset asc_492E15 +
call sub_461660  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_463B40  +
mov edx 29h +
mov eax ebx +
call sub_460F70  +
jmp loc_461890  +
mov eax [esp+98h+var_74] +
jmp loc_463054  +
mov esi [edx+4] +
mov edi offset aJarray +
mov ecx 6 +
cmps   +
jnz loc_46257D  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_463B40  +
mov edx offset asc_492BD2 +
mov eax ebx +
call sub_461660  +
jmp loc_4625CA  +
mov eax ebx +
mov edx 5Bh +
call sub_460F70  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_463B40  +
mov edx 5Dh +
mov eax ebx +
call sub_460F70  +
jmp loc_461DAA  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464D10  +
jmp loc_461D99  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_464DD0  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_464D10  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_464DD0  +
mov eax ebx +
mov edx offset asc_492D6E +
call sub_461660  +
mov ecx [esp+98h+var_74] +
mov edx edi +
mov eax ebx +
call sub_464DD0  +
jmp loc_461890  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_463938  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464DD0  +
jmp loc_461D59  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_464DD0  +
mov edx offset a___ +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
mov eax [esp+98h+var_7C] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_4632DF  +
mov edi [esp+98h+var_7C] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_7C] eax +
jmp loc_4632DF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_463363  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46332F  +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] esi +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_4626D6  +
xor edi edi +
xor esi esi +
jmp loc_462C18  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461890  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_4626ED  +
mov ecx [ecx+4] +
jmp loc_462666  +
mov eax 5Fh +
jmp loc_463402  +
mov eax [esp+98h+var_7C] +
mov edi [esp+98h+var_80] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_464DD0  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_464D10  +
jmp loc_461890  +
cmp eax 3Bh +
jnz loc_461810  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_463B28  +
cmp al 31h +
jnz loc_461810  +
mov edx offset aTrue +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_463402  +
cmp dl 5Fh +
jnz loc_463402  +
cmp ecx 0FFh +
mov eax edx +
ja loc_463402  +
movsx edx cl +
mov eax ebx +
call sub_460F70  +
mov esi ebp +
jmp loc_463422  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ebx+118h] 1 +
jmp loc_46323E  +
mov edx 2Dh +
mov eax ebx +
call sub_460F70  +
mov ecx [ebp+8] +
jmp loc_463648  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_463B40  +
mov eax [esp+98h+var_74] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_463054  +
jmp loc_461890  +
mov edx offset aFalse +
mov eax ebx +
call sub_461660  +
jmp loc_461890  +
***
sub esp 18h +
mov eax [eax+124h] +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_C] eax +
lea eax [esp+18h+var_10] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_4617A0  +
mov eax [esp+18h+var_C] +
mov [ebx+124h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [esp+3Ch+var_24] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_463BC8  +
jmp ds:off_492FA0[eax*4]  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4641DE  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax [ebx+124h] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_4617A0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_463C35  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 492F9Ch +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464110  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_463C10  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ebp +
mov ebp 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_463C13  +
mov ecx [ecx+4] +
jmp loc_463BC8  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_463CB8  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492F65h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463BF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463C95  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_463C98  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_463D33  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492F6Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463BF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463D10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_463D13  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_463DB3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492F76h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463BF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463D90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_463D93  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46421D  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_464170  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4641A7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_492F77 +
jmp loc_463EA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492F79h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463BF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463E80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_463E83  +
test byte ptr [esp+3Ch+var_24] 4 +
jnz loc_463BF5  +
mov edx 2Ah +
mov eax ebx +
call sub_460F70  +
jmp loc_463BF5  +
mov eax [ebx+100h] +
jmp loc_463E26  +
mov eax [ebx+100h] +
jmp loc_463E76  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_463F63  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492F82h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463BF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463F40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_463F43  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_463FE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492F8Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463BF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463FC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_463FC3  +
cmp byte ptr [ebx+104h] 28h +
jz loc_46405E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46428B  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov eax [ebx+124h] +
mov esi offset asc_492F8E +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_4617A0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
jmp loc_4640C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492F91h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463BF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4640A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4640A3  +
mov eax [ebx+124h] +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_4617A0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464254  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_463BF5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_463E34  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_463E65  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_463BB4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_463E15  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464154  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_46404D  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
test ecx ecx +
mov [esp+2Ch+var_14] edx +
mov ebp [esp+2Ch+arg_0] +
jz loc_464351  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_4642FD  +
jmp loc_464351  +
mov edx [esi+118h] +
test edx edx +
jnz loc_464351  +
mov eax [ebx+8] +
test eax eax +
jnz loc_46434B  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_464315  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_46434B  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_464359  +
cmp eax 2Ah +
jz loc_46437A  +
cmp eax 2 +
jz loc_46439B  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_463B80  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4642F3  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_464780  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_464500  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+2Ch+var_14] +
mov ecx [ecx+4] +
call sub_463B40  +
mov eax [esi+100h] +
test byte ptr [esp+2Ch+var_14] 4 +
mov [esi+114h] ebp +
jnz loc_464435  +
mov ebp offset asc_492BB6 +
mov [esp+2Ch+var_10] ebx +
jmp loc_4643F6  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 492BB8h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_464452  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_4643D7  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_4643DA  +
cmp eax 0FFh +
jz loc_46448B  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_464456  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+4] +
mov ecx [eax+8] +
mov eax [ecx] +
cmp eax 45h +
jnz loc_46446A  +
jmp loc_4644BF  +
mov ecx [ecx+4] +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_464465  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_463B40  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_46443F  +
mov edx offset aDefaultArg +
mov eax esi +
mov [esp+2Ch+var_10] ecx +
call sub_461660  +
mov ecx [esp+2Ch+var_10] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax esi +
call sub_4616F0  +
mov edx offset asc_492BC7 +
mov eax esi +
call sub_461660  +
mov ecx [esp+2Ch+var_10] +
jmp loc_464465  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_46453A  +
mov edx [eax+8] +
test edx edx +
jz loc_4645C0  +
mov eax [eax] +
test eax eax +
jnz loc_464515  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_4642D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464680  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_464727  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_464595  +
mov eax ebx +
mov edx edi +
call sub_463B40  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4646F0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_464760  +
mov eax [ebx+100h] +
mov esi offset unk_49304C +
jmp loc_4645FF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_49304E +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464645  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4645E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_4645E3  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_4642D0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4646B7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_464540  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46454E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46466A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4645A3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46456E  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_4642D0  +
mov edx [ebx+100h] +
jmp loc_46455F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_28] ecx +
test esi esi +
jz loc_464860  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_464860  +
mov eax esi +
mov edx 1 +
jmp loc_4647CE  +
and ch 0Eh +
jnz loc_464922  +
mov eax [eax] +
test eax eax +
jz loc_464860  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_464860  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_4647B9  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_4647B0  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_464937  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_464A54  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_464948  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46494B  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+34h+var_34] 0 +
call sub_4642D0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4649AF  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+34h+var_28] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_4648E3  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_4617A0  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4649E6  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+34h+var_34] 1 +
call sub_4642D0  +
mov [ebx+114h] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_4647F0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464829  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+34h+var_34] 0 +
call sub_4642D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464A1D  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_464894  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_464897  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4648F1  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464992  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46480D  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+140h] +
test eax eax +
jz loc_464ABF  +
mov edx [ebx+110h] +
mov [esp+34h+var_20] eax +
mov [esp+34h+var_24] edx +
lea edx [esp+34h+var_24] +
mov [ebx+110h] edx +
mov ecx [esi] +
cmp dword ptr [ecx] 4 +
jz loc_464B10  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_4617A0  +
mov edx [ebx+140h] +
mov eax [esp+34h+var_18] +
test edx edx +
mov [ebx+124h] eax +
jz loc_464B05  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+124h] +
lea ebp [esp+34h+var_1C] +
mov edx edi +
mov ecx [ecx+4] +
mov [ebx+124h] ebp +
mov [esp+34h+var_18] eax +
mov eax ebx +
mov [esp+34h+var_1C] ecx +
call sub_4617A0  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+140h] +
test eax eax +
jz loc_464B52  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_464C57  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464BE2  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx edi +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [esi] +
mov ecx [eax+8] +
mov eax [ebx+124h] +
mov [ebx+124h] ebp +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
mov eax ebx +
call sub_4617A0  +
mov eax [esp+34h+var_18] +
cmp byte ptr [ebx+104h] 3Eh +
mov [ebx+124h] eax +
jz loc_464C80  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464C20  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464B6F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464BC9  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_464CA7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_464B65  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_464CDB  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_464BBF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_464C68  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_464C91  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
cmp dword ptr [ecx] 31h +
jz loc_464D50  +
mov eax [eax+124h] +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_10] eax +
lea eax [esp+2Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_4617A0  +
mov eax [esp+2Ch+var_10] +
mov [ebx+124h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_464D47  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_464D82  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464D47  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_464D67  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_20] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_20] +
jmp loc_464D6A  +
***
mov ebx eax +
sub esp 34h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_464DE3  +
cmp eax 30h +
jnz loc_464E12  +
mov eax [ebx+124h] +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_4617A0  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_464DE3  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464EC4  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+124h] +
mov byte ptr [ebx+104h] 28h +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_4617A0  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464E90  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464E75  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
mov [esp+34h+var_2C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_34] ebx +
call eax  +
xor eax eax +
mov ecx [esp+34h+var_18] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+34h+var_1C] +
jmp loc_464E2B  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_464F44  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_464F44  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_464F44  +
mov eax [esp+8] +
mov dword ptr [edx] 0 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_464F81  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_464F81  +
test edx edx +
jz loc_464F81  +
mov dword ptr [eax] 32h +
mov [eax+4] ecx +
mov [eax+8] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_464FC8  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_464FC8  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_464FCA  +
mov eax [esp+8] +
mov dword ptr [edx] 7 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_465008  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_465008  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_46500A  +
mov eax [esp+8] +
mov dword ptr [edx] 8 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov ecx [ebx+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_465160  +
cmp al 56h +
jz loc_465160  +
cmp al 4Bh +
jz loc_465160  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_465153  +
movzx edx dl +
jmp ds:off_49305C[edx*4]  +
mov eax [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
mov [esp+2Ch+var_24] eax +
movzx eax byte ptr [ecx+2] +
cmp al 4Ch +
jz loc_465D4D  +
cmp al 54h +
jz loc_465D3F  +
cmp al 73h +
jz loc_465AC5  +
cmp al 66h +
nop   +
lea esi [esi+0] +
jz loc_465B02  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_465A28  +
cmp al 6Fh +
jz loc_465A18  +
cmp al 74h +
setz dl  +
jnz loc_4661C1  +
cmp byte ptr [ecx+3] 6Ch +
jz loc_465EFF  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov esi eax +
jz loc_465CD2  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_465D5B  +
cmp ecx 32h +
jz loc_466037  +
cmp ecx 33h +
jnz loc_465CD2  +
xor ebp ebp +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_466125  +
mov eax ebx +
call sub_469B40  +
test ebp ebp +
mov [esp+2Ch+var_2C] eax +
jz loc_46510A  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
mov eax [esp+2Ch+var_24] +
mov edx 41h +
mov [ebx+34h] eax +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_460D10  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_465153  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_465153  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_465218  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_460DC0  +
test eax eax +
mov esi eax +
jz loc_465153  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_4651C0  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_465153  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_4651D0  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_465153  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_465153  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_466960  +
mov edx eax +
mov [esi] eax +
jmp loc_465187  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_465195  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_461150  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
lea esi [esi+0] +
test eax eax +
jz loc_465153  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_465153  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_4670E0  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_4657C3  +
sub eax 30h +
cmp al 9 +
ja loc_46580A  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_465270  +
sub ecx edx +
mov eax ebx +
call sub_460D70  +
test eax eax +
mov esi eax +
jz loc_46529B  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_4657C5  +
xor eax eax +
jmp loc_465379  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
mov eax ebx +
call sub_466960  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_465153  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_465153  +
movzx eax al +
jmp ds:off_493188[eax*4]  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
test eax eax +
mov esi eax +
jz loc_46529B  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
test eax eax +
jz loc_46529B  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_46542B  +
cmp al 5Fh +
jz loc_46542B  +
sub eax 41h +
cmp al 19h +
ja loc_4657E9  +
xor edx edx +
mov eax ebx +
call sub_461270  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_465155  +
mov eax ebx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_461150  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_4658E7  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:4938A0h[eax*4] +
jl loc_465791  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_465155  +
mov eax ebx +
call sub_4610D0  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_465210  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_46590C  +
test eax eax +
jz loc_465153  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_465153  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_4669B0  +
jmp loc_46544B  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4657B6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466335  +
mov dword ptr [eax] 27h +
mov edx offset off_493B0C +
mov dword ptr [eax+4] offset off_493B0C +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_465155  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4657B6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466335  +
mov dword ptr [eax] 27h +
mov edx offset off_493AE4 +
mov dword ptr [eax+4] offset off_493AE4 +
jmp loc_465563  +
mov eax ebx +
call sub_46A0F0  +
jmp loc_465379  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4657B6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466335  +
mov dword ptr [eax] 27h +
mov edx offset off_493AF8 +
mov dword ptr [eax+4] offset off_493AF8 +
jmp loc_465563  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
jmp loc_465210  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4657B6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466335  +
mov dword ptr [eax] 27h +
mov edx offset off_493B20 +
mov dword ptr [eax+4] offset off_493B20 +
jmp loc_465563  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4657B6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466335  +
mov dword ptr [eax] 27h +
mov edx offset off_493ABC +
mov dword ptr [eax+4] offset off_493ABC +
jmp loc_465563  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_460D70  +
jmp loc_465155  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_4656B4  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_465A6A  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_465153  +
lea eax [ebx+0Ch] +
call sub_460FF0  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_465714  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_465155  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4657B6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466335  +
mov dword ptr [eax] 27h +
mov edx offset off_493AA8 +
mov dword ptr [eax+4] offset off_493AA8 +
jmp loc_465563  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4657B6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466335  +
mov dword ptr [eax] 27h +
mov edx offset off_493AD0 +
mov dword ptr [eax+4] offset off_493AD0 +
jmp loc_465563  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_466340  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_4654CA  +
mov edx large ds:4 +
xor eax eax +
jmp loc_465563  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
jmp loc_465379  +
mov eax ebx +
call sub_4670E0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_465153  +
cmp dword ptr [eax] 18h +
jnz loc_465218  +
jmp loc_465155  +
mov edi [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
movzx eax byte ptr [ecx+1] +
cmp al 4Ch +
jz loc_465AA4  +
cmp al 54h +
jz loc_465B56  +
cmp al 73h +
jz loc_465988  +
cmp al 66h +
jz loc_4659C5  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_465963  +
cmp al 6Fh +
jz loc_465953  +
cmp al 74h +
setz dl  +
jnz loc_466324  +
cmp byte ptr [ecx+2] 6Ch +
jz loc_465B64  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov esi eax +
jz loc_465ABA  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_465C72  +
cmp ecx 32h +
jz loc_465B96  +
cmp ecx 33h +
jnz loc_465ABA  +
mov [esp+2Ch+var_24] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46610E  +
mov eax ebx +
call sub_469B40  +
cmp [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_4658C5  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_460D10  +
mov esi eax +
test esi esi +
mov [ebx+34h] edi +
jnz loc_46528F  +
xor eax eax +
jmp loc_465379  +
mov eax ebx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_465486  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_4669B0  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_465A7B  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_465210  +
cmp byte ptr [ecx+2] 6Eh +
jnz loc_465861  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_4665C0  +
test eax eax +
mov esi eax +
jz loc_465ABA  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jz loc_465CAB  +
mov [ebx+34h] edi +
jmp loc_465292  +
movzx eax byte ptr [ecx+2] +
cmp al 72h +
jz loc_465D02  +
cmp al 70h +
jnz loc_465861  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_469B40  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_4658D5  +
cmp byte ptr [ecx+2] 70h +
jnz loc_465861  +
lea eax [ecx+3] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+3] 54h +
jnz loc_465F31  +
add ecx 4 +
xor edx edx +
mov [ebx+0Ch] ecx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_465ABA  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_465ABA  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_465980  +
cmp byte ptr [ecx+3] 6Eh +
jnz loc_4650AF  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_4665C0  +
test eax eax +
jz loc_465CD2  +
mov edx [ebx+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jnz loc_46511A  +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_20] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46511A  +
lea eax [ebx+0Ch] +
call sub_460FF0  +
mov esi [esp+2Ch+var_10] +
jmp loc_4656DA  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_465153  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_465153  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_46544B  +
mov eax ebx +
call sub_467BB0  +
mov esi eax +
jmp loc_4658D5  +
cmp al 77h +
jz loc_465BEA  +
mov [ebx+34h] edi +
xor eax eax +
nop   +
jmp loc_465379  +
movzx eax byte ptr [ecx+3] +
cmp al 72h +
jz loc_465FFA  +
cmp al 70h +
jnz loc_4650AF  +
add ecx 4 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_469B40  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46511A  +
cmp byte ptr [ecx+3] 70h +
jnz loc_4650AF  +
lea eax [ecx+4] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+4] 54h +
jnz loc_465F8F  +
add ecx 5 +
xor esi esi +
mov [ebx+0Ch] ecx +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465CD2  +
imul eax edx +
xor ecx ecx +
add eax [ebx+10h] +
add edx 1 +
mov [ebx+14h] edx +
test eax eax +
jz loc_46511A  +
mov dword ptr [eax] 6 +
mov ecx eax +
mov [eax+4] esi +
jmp loc_46511A  +
mov eax ebx +
call sub_4610D0  +
mov esi eax +
jmp loc_4658D5  +
xor esi esi +
test dl dl +
jnz loc_465FD8  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_4658D5  +
mov eax [eax+4] +
xor ebp ebp +
cmp eax 1 +
jz loc_466295  +
jle loc_465CD9  +
cmp eax 2 +
jz loc_465E61  +
cmp eax 3 +
jnz loc_465ABA  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_465FB8  +
cmp byte ptr [ebp+0] 6Eh +
jnz loc_465ABA  +
movzx eax byte ptr [ebp+1] +
cmp al 61h +
jnz loc_465AB2  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_465010  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_466309  +
cmp dl 70h +
jz loc_4662E8  +
cmp dl 69h +
jnz loc_465ABA  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_465ABA  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_24] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_4658D5  +
mov eax [eax+4] +
mov [esp+2Ch+var_24] ecx +
mov ebp [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
mov ecx [esp+2Ch+var_24] +
test eax eax +
jz loc_465FA8  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_465B9B  +
mov eax ebx +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_4658D5  +
cmp al 77h +
jz loc_465DDD  +
xor ecx ecx +
jmp loc_46511A  +
test eax eax +
nop   +
lea esi [esi+0] +
jnz loc_465ABA  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_4658D5  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
mov eax ebx +
call sub_4665C0  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_465F6F  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_4658D5  +
mov eax ebx +
call sub_4610D0  +
mov ecx eax +
jmp loc_46511A  +
mov eax ebx +
call sub_467BB0  +
mov ecx eax +
jmp loc_46511A  +
mov eax [eax+4] +
mov [esp+2Ch+var_20] ecx +
mov edi [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
mov ecx [esp+2Ch+var_20] +
test eax eax +
jz loc_466222  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_4661F4  +
jle loc_4660DB  +
cmp eax 2 +
jz loc_466041  +
cmp eax 3 +
jnz loc_465CD2  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_466277  +
cmp byte ptr [edi] 6Eh +
jnz loc_465CD2  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_465CCA  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_465010  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46626A  +
cmp dl 70h +
jz loc_466249  +
cmp dl 69h +
jnz loc_465CD2  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_465CD2  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_460D10  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46511A  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_465F48  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_465FE7  +
mov [esp+2Ch+var_28] offset unk_49304F +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_465EBF  +
mov [esp+2Ch+var_28] offset unk_493052 +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jnz loc_466316  +
mov eax ebx +
call sub_4665C0  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4661D5  +
mov ecx [esp+2Ch+var_24] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_460D10  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_4658D5  +
xor esi esi +
test dl dl +
jnz loc_4660FF  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46511A  +
mov eax ebx +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_4659E7  +
jmp loc_465ABA  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_465F5E  +
sub eax 72h +
cmp al 1 +
ja loc_465E70  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_24] eax +
jmp loc_465E7B  +
mov eax ebx +
call sub_4669B0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
jmp loc_465D2A  +
mov eax ebx +
call sub_461090  +
add eax 1 +
mov esi eax +
jnz loc_465B24  +
xor ecx ecx +
jmp loc_46511A  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_2C] eax +
jmp loc_4658C5  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_24] eax +
mov eax ebx +
call sub_469B40  +
mov ebp eax +
mov eax ebx +
call sub_469B40  +
jmp loc_465C36  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
jmp loc_465B6E  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ebp eax +
jmp loc_465ED4  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
mov eax ebx +
call sub_4665C0  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46613C  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46511A  +
mov eax [eax+4] +
xor edi edi +
jmp loc_465D8F  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46616F  +
mov eax ebx +
call sub_469B40  +
mov ebp eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46615C  +
mov [esp+2Ch+var_28] offset unk_49304F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46609D  +
mov [esp+2Ch+var_28] offset unk_493052 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_466194  +
mov eax ebx +
call sub_4665C0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4661A2  +
mov ecx ebp +
mov edx 37h +
mov [esp+2Ch+var_2C] edi +
mov eax ebx +
call sub_460D10  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46511A  +
test eax eax +
jnz loc_465CD2  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46511A  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
jmp loc_465F09  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_4658AA  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_4650F2  +
mov eax ebx +
call sub_4669B0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
jmp loc_466022  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov edi eax +
jmp loc_4660B2  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_466185  +
sub eax 72h +
cmp al 1 +
ja loc_466050  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov ebp eax +
jmp loc_466059  +
mov eax ebx +
call sub_469B40  +
mov edi eax +
jmp loc_4660B2  +
mov eax ebx +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edi eax +
jmp loc_4660B2  +
cmp al 69h +
jz loc_4650A5  +
lea esi [esi+0] +
jmp loc_4650AF  +
mov eax ebx +
call sub_4669B0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ebp eax +
jmp loc_465ED4  +
xor ebp ebp +
test edi edi +
jz loc_466208  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_466216  +
xor ebp ebp +
cmp al [edi+1] +
jz loc_466232  +
cmp ecx 33h +
jnz loc_4650EB  +
jmp loc_4650DF  +
cmp al 70h +
jnz loc_466208  +
lea esi [esi+0] +
jmp loc_466201  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46510A  +
mov eax [ebx+0Ch] +
mov bp 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_466208  +
add eax 1 +
xor bp bp +
mov [ebx+0Ch] eax +
jmp loc_466208  +
cmp byte ptr [eax+1] 69h +
jnz loc_465CD2  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_465E27  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_465E27  +
mov eax ebx +
call sub_469B40  +
mov edi eax +
mov eax ebx +
call sub_469B40  +
mov ebp eax +
mov eax ebx +
call sub_469B40  +
jmp loc_465E27  +
test ebp ebp +
mov [esp+2Ch+var_24] 0 +
jz loc_4662AD  +
movzx eax byte ptr [ebp+0] +
cmp al 6Dh +
jz loc_4662BB  +
cmp al 70h +
jz loc_4662BB  +
cmp ecx 33h +
jnz loc_4658A3  +
jmp loc_465897  +
cmp al [ebp+1] +
mov [esp+2Ch+var_24] 0 +
jnz loc_4662AD  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_24] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4662AD  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_24] 0 +
jmp loc_4662AD  +
cmp byte ptr [eax+1] 69h +
jnz loc_465ABA  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_465C36  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_465C36  +
mov eax ebx +
call sub_469B40  +
mov ebp eax +
jmp loc_465ED4  +
cmp al 69h +
jz loc_465857  +
lea esi [esi+0] +
jmp loc_465861  +
mov edx large ds:4 +
jmp loc_465563  +
mov esi large ds:4 +
jmp loc_4654CA  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_4663F4  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_4664E4  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_466466  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_4663FB  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_461150  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_46645C  +
mov esi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [esi+10h] +
mov [esi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_46645C  +
test eax eax +
jz loc_46645C  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_46645E  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_466418  +
mov ebx edi +
cmp cl bl +
jle loc_466453  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_46645C  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_493CC0[ecx] +
lea ebp off_493CC0[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_466408  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_4664B0  +
cmp cl [esp+1Ch+var_11] +
jg loc_46640E  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_466418  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_4663FB  +
mov eax edi +
cmp al 63h +
jnz loc_4663FB  +
mov edi [esp+1Ch+var_10] +
mov eax [edi+34h] +
mov ebx [edi+38h] +
test eax eax +
setz al  +
movzx eax al +
mov [edi+38h] eax +
mov [esp+1Ch+var_1C] edi +
call sub_465010  +
mov edx 33h +
mov [edi+38h] ebx +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_460D10  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_46645E  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_46645E  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_46638C  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_466590  +
cmp dl 45h +
jz loc_466590  +
cmp dl 2Eh +
jz loc_466590  +
lea esi [esp+24h+var_8] +
jmp loc_466564  +
cmp byte ptr [eax+1] 45h +
jz loc_466574  +
mov [esp+24h+var_24] ebx +
call sub_465010  +
test eax eax +
jz loc_466590  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_460D10  +
test eax eax +
mov [esi] eax +
jz loc_466590  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_466574  +
cmp dl 45h +
jz loc_466574  +
cmp dl 2Eh +
jz loc_466574  +
cmp dl 4Fh +
jz loc_466520  +
cmp dl 52h +
jnz loc_466526  +
cmp byte ptr [eax+1] 45h +
jnz loc_466526  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_466590  +
mov edx [eax+8] +
test edx edx +
jz loc_466598  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+4] +
cmp dword ptr [edx] 27h +
jnz loc_466583  +
mov edx [edx+4] +
cmp dword ptr [edx+10h] 9 +
jnz loc_466583  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+4] 0 +
jmp loc_466583  +
***
push esi  +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_466937  +
xor esi esi +
test edx edx +
jnz loc_46693D  +
mov eax ebx +
call sub_4664F0  +
test eax eax +
jz loc_466950  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_460D10  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_465010  +
test eax eax +
mov esi eax +
jnz loc_466915  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_466931  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_466975  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_466987  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_466900  +
mov edx eax +
mov eax ebx +
call sub_460EC0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_46696E  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edx [ebp+0Ch] +
mov [esp+48h+var_34] eax +
movzx eax byte ptr [edx] +
sub eax 49h +
cmp al 1 +
ja loc_466B40  +
lea eax [edx+1] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+1] 45h +
jz loc_466E5A  +
mov [esp+48h+var_1C] 0 +
lea ebx [esp+48h+var_1C] +
movzx edx byte ptr [edx+1] +
jmp loc_466A3F  +
sub edx 49h +
cmp dl 1 +
ja loc_466B60  +
mov eax ebp +
call sub_4669B0  +
mov ecx eax +
test ecx ecx +
jz loc_466B40  +
mov [esp+48h+var_48] 0 +
mov edx 2Fh +
mov eax ebp +
call sub_460D10  +
test eax eax +
mov [ebx] eax +
jz loc_466B40  +
lea ebx [eax+8] +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_466CD4  +
cmp dl 4Ch +
jz loc_466B50  +
jle loc_4669F3  +
cmp dl 58h +
lea esi [esi+0] +
jnz loc_466B60  +
lea esi [eax+1] +
mov edi [ebp+34h] +
mov [ebp+0Ch] esi +
mov dword ptr [ebp+34h] 1 +
movzx edx byte ptr [eax+1] +
mov [esp+48h+var_3C] edi +
cmp dl 4Ch +
jz loc_466CF0  +
cmp dl 54h +
jz loc_466D01  +
cmp dl 73h +
jz loc_466C40  +
cmp dl 66h +
jz loc_466C82  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_466B80  +
cmp dl 6Fh +
jz loc_466B70  +
cmp dl 74h +
setz cl  +
jnz loc_467082  +
cmp byte ptr [eax+2] 6Ch +
jz loc_466D12  +
mov eax ebp +
call sub_466350  +
test eax eax +
mov [esp+48h+var_38] eax +
jz loc_466C30  +
mov eax [esp+48h+var_38] +
mov edx [eax] +
cmp edx 31h +
jz loc_466BB4  +
cmp edx 32h +
jz loc_466D50  +
cmp edx 33h +
jnz loc_466C30  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_466F85  +
mov eax ebp +
call sub_469B40  +
test esi esi +
mov [esp+48h+var_48] eax +
jz loc_466B1E  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_460D10  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov ecx eax +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jz loc_466BA9  +
nop   +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_467BB0  +
mov ecx eax +
jmp loc_466A08  +
mov [esp+48h+var_48] ebp +
call sub_465010  +
mov ecx eax +
jmp loc_466A08  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_466ABD  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_4665C0  +
mov edx [ebp+0Ch] +
test eax eax +
jz loc_466C33  +
cmp byte ptr [edx] 49h +
mov ecx eax +
jz loc_466D64  +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jnz loc_466B40  +
add edx 1 +
mov [ebp+0Ch] edx +
jmp loc_466A08  +
mov eax [eax+4] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_466F9C  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_467095  +
jle loc_466D90  +
cmp eax 2 +
jz loc_466DB9  +
cmp eax 3 +
jnz loc_466C30  +
mov esi [esp+48h+var_30] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_466FCE  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 6Eh +
jz loc_466ED1  +
nop   +
mov edx [ebp+0Ch] +
xor ecx ecx +
jmp loc_466B9D  +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_466E7A  +
cmp dl 70h +
jnz loc_466ABD  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_469B40  +
mov edx 49h +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_466B9D  +
cmp byte ptr [eax+2] 70h +
jnz loc_466ABD  +
lea edx [eax+3] +
mov [ebp+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_466EBA  +
add eax 4 +
xor edx edx +
mov [ebp+0Ch] eax +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_466C30  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_466F5D  +
mov [ecx+4] edx +
mov edx [ebp+0Ch] +
mov dword ptr [ecx] 6 +
jmp loc_466B9D  +
add eax 1 +
mov [ebp+0Ch] eax +
mov eax [esp+48h+var_34] +
mov [ebp+2Ch] eax +
mov eax [esp+48h+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_467BB0  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_466B9D  +
mov eax ebp +
call sub_4610D0  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_466B9D  +
xor edi edi +
test cl cl +
jnz loc_466FA9  +
add esi 2 +
mov edx 45h +
mov [ebp+0Ch] esi +
mov eax ebp +
call sub_467DD0  +
mov ecx edi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_466B9D  +
mov eax [esp+48h+var_38] +
mov [esp+48h+var_30] 0 +
mov eax [eax+4] +
jmp loc_466BEF  +
mov [esp+48h+var_38] eax +
mov eax ebp +
call sub_4669B0  +
mov ecx [esp+48h+var_38] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_466B9D  +
test eax eax +
jnz loc_466C30  +
mov ecx [esp+48h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_466B9D  +
mov eax [esp+48h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_466FEC  +
mov eax ebp +
call sub_469B40  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_466FBB  +
mov esi [esp+48h+var_30] +
mov edi offset unk_49304F +
mov ecx 3 +
cmps   +
jz loc_466E15  +
mov esi [esp+48h+var_30] +
mov edi offset unk_493052 +
mov ecx 3 +
cmps   +
jnz loc_467013  +
mov eax ebp +
call sub_4665C0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_467042  +
mov ecx [esp+48h+var_2C] +
mov edx 37h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_460D10  +
mov ecx [esp+48h+var_38] +
mov edx 36h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_466B9D  +
add edx 2 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax ebp +
mov edx 2Fh +
mov [esp+48h+var_48] 0 +
call sub_460D10  +
jmp loc_466B42  +
add eax 3 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_48] ebp +
call sub_465010  +
mov esi eax +
mov eax ebp +
call sub_4665C0  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_466F65  +
mov [esp+48h+var_48] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_466B9D  +
mov eax ebp +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_466CA4  +
jmp loc_466C30  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_467021  +
mov edx 5Fh +
mov eax ebp +
call sub_467DD0  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_465010  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_467035  +
xor ecx ecx +
cmp al 70h +
jz loc_467061  +
cmp al 69h +
jnz loc_466B9D  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_466B9D  +
mov eax ebp +
call sub_469B40  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_460D10  +
mov ecx esi +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_460D10  +
mov ecx [esp+48h+var_38] +
mov edx 38h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
mov edx [ebp+0Ch] +
jmp loc_466B9D  +
mov eax ebp +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_460D10  +
mov [esp+48h+var_48] eax +
jmp loc_466EA2  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
jmp loc_466B06  +
mov [esp+48h+var_48] ebp +
call sub_465010  +
jmp loc_466B1B  +
mov [esp+48h+var_48] ebp +
call sub_465010  +
mov esi [ebp+0Ch] +
mov edi eax +
jmp loc_466D1C  +
mov edx 45h +
mov eax ebp +
call sub_467DD0  +
mov esi eax +
jmp loc_466E2A  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
mov eax ebp +
call sub_469B40  +
mov edi eax +
mov eax ebp +
call sub_469B40  +
jmp loc_466F26  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_467002  +
sub eax 72h +
cmp al 1 +
ja loc_466DCC  +
mov [esp+48h+var_48] ebp +
call sub_465010  +
mov [esp+48h+var_2C] eax +
jmp loc_466DD7  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
jmp loc_466E2A  +
cmp al 77h +
jz loc_466EDD  +
lea esi [esi+0] +
jmp loc_466C30  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_466F26  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_466E2A  +
cmp byte ptr [edx+1] 69h +
jnz loc_466B9D  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
jmp loc_466F26  +
cmp dl 69h +
jz loc_466AB3  +
nop   +
lea esi [esi+0] +
jmp loc_466ABD  +
mov eax [esp+48h+var_30] +
xor esi esi +
test eax eax +
jz loc_4670AA  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_4670B8  +
cmp al 70h +
jz loc_4670B8  +
cmp edx 33h +
jnz loc_466AFF  +
jmp loc_466AF3  +
mov edi [esp+48h+var_30] +
xor esi esi +
cmp al [edi+1] +
jnz loc_4670AA  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4670AA  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_4670AA  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_467264  +
jle loc_467143  +
cmp al 55h +
jz loc_467130  +
cmp al 5Ah +
nop   +
jnz loc_467210  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_4674F0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_4673D0  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_4665C0  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_467210  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_460DC0  +
test eax eax +
mov edi eax +
jz loc_467123  +
xor edx edx +
mov eax esi +
call sub_460EC0  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_467202  +
cmp bl 44h +
jz loc_467366  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_467310  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_467310  +
cmp bl 43h +
jz loc_467310  +
cmp bl 55h +
jz loc_467310  +
cmp bl 4Ch +
jz loc_467310  +
cmp bl 53h +
jz loc_4673B0  +
cmp bl 49h +
jz loc_467390  +
cmp bl 54h +
jz loc_4673C1  +
cmp bl 45h +
nop   +
jz loc_4674AD  +
cmp bl 4Dh +
jnz loc_467202  +
test ebp ebp +
lea esi [esi+0] +
jz loc_467202  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_467184  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_467125  +
mov eax esi +
call sub_4665C0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_467139  +
test eax eax +
jz loc_467123  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_467123  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_4669B0  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_460D10  +
mov ebx eax +
jmp loc_467139  +
cmp byte ptr [edx+1] 74h +
jz loc_4672A2  +
xor edx edx +
mov eax esi +
call sub_461270  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_467139  +
mov eax esi +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_460D10  +
mov ebx eax +
jmp loc_467139  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_4665C0  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_460D70  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_460D10  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_467139  +
test edi edi +
jz loc_467123  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_467123  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_467283  +
mov eax esi +
call sub_4665C0  +
test ebp ebp +
jz loc_467380  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_460D10  +
mov ebp eax +
cmp bl 53h +
jz loc_46735B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_467384  +
test ebp ebp +
jz loc_467202  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_467202  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_467180  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_467310  +
mov [esp+30h+var_30] esi +
call sub_465010  +
test ebp ebp +
jnz loc_46731B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_46732E  +
mov ebx 45h +
jmp loc_46718D  +
test ebp ebp +
jz loc_467202  +
mov eax esi +
call sub_4669B0  +
mov edx 4 +
jmp loc_467320  +
mov edx 1 +
mov eax esi +
call sub_461270  +
jmp loc_467317  +
mov eax esi +
call sub_4610D0  +
jmp loc_467317  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_467482  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_467451  +
mov eax esi +
call sub_4670E0  +
test eax eax +
mov edi eax +
jz loc_467404  +
mov eax [eax] +
cmp eax 44h +
jz loc_467404  +
cmp eax 46h +
jnz loc_467470  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_467434  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_467434  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_467434  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_460D10  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_461090  +
test eax eax +
mov ebp eax +
jns loc_4673EB  +
xor ebx ebx +
jmp loc_467125  +
mov eax esi +
call sub_461120  +
test eax eax +
jnz loc_467404  +
xor ebx ebx +
jmp loc_467125  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_461120  +
test eax eax +
jz loc_467123  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_460D70  +
mov [esp+30h+var_30] eax +
jmp loc_467437  +
test ebp ebp +
mov [edi] ebp +
jz loc_467123  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_4674CA  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_467123  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_467139  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_4675D0  +
cmp cl 47h +
jz loc_4675D0  +
mov eax ebx +
mov edi edx +
call sub_4670E0  +
test eax eax +
mov esi eax +
jnz loc_467582  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_4675E8  +
test dl dl +
jz loc_4675E8  +
cmp dl 45h +
jz loc_4675E8  +
mov edx [eax] +
cmp edx 4 +
jz loc_4675F0  +
jb loc_467560  +
sub edx 1Ch +
cmp edx 4 +
ja loc_467560  +
mov eax [eax+4] +
test eax eax +
jnz loc_467541  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_466900  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_467520  +
test byte ptr [ebx+8] 1 +
jnz loc_467520  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_4675A3  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_467596  +
cmp edx 2 +
mov eax esi +
jnz loc_4675E8  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_4675C4  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_4675B7  +
mov [esi+8] eax +
mov eax esi +
jmp loc_4675E8  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_467630  +
cmp dl 47h +
jz loc_467605  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_467660  +
cmp dword ptr [eax] 33h +
ja loc_467660  +
mov edx [eax] +
jmp ds:off_493290[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_4675E6  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_4675E6  +
movzx edx dl +
jmp ds:off_493360[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_4675E6  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_4675E6  +
movzx eax al +
jmp ds:off_493428[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_4675F7  +
nop   +
mov edx 1 +
jmp loc_467562  +
lea eax [ebx+0Ch] +
call sub_460FF0  +
cmp eax 1 +
jle loc_4675E6  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_4675E6  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_4675E6  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_4675E6  +
xor esi esi +
cmp al 24h +
jz loc_4679F2  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_4676C9  +
cmp al 24h +
jz loc_4676C9  +
add esi 1 +
cmp esi ebp +
jl loc_4676B6  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_460D70  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_4675E6  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_467A40  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_460D10  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_4675E6  +
test ebp ebp +
jg loc_4676A1  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_460D10  +
jmp loc_4675E8  +
mov eax ebx +
call sub_4670E0  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov eax ebx +
call sub_4670E0  +
mov esi eax +
mov eax ebx +
call sub_461050  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
xor edx edx +
mov eax ebx +
call sub_4674F0  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
cmp byte ptr [eax+2] 0 +
jz loc_467A49  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_467A49  +
xor edx edx +
mov eax ebx +
call sub_4674F0  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov edx 76h +
mov eax ebx +
call sub_461470  +
test eax eax +
jz loc_4675E6  +
xor edx edx +
mov eax ebx +
call sub_4674F0  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov eax ebx +
call sub_4670E0  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_460FF0  +
test eax eax +
js loc_4675E6  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_4675E6  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov edx 68h +
mov eax ebx +
call sub_461470  +
test eax eax +
jz loc_4675E6  +
xor edx edx +
mov eax ebx +
call sub_4674F0  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
xor edx edx +
mov eax ebx +
call sub_461470  +
test eax eax +
jz loc_4675E6  +
xor edx edx +
mov eax ebx +
call sub_461470  +
test eax eax +
jz loc_4675E6  +
xor edx edx +
mov eax ebx +
call sub_4674F0  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov eax ebx +
call sub_4670E0  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_467A73  +
cmp al 5Fh +
jz loc_467A6C  +
cmp al 24h +
jnz loc_4675E6  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_467A7A  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_467A7A  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_4676E6  +
mov [esp+1Ch+var_10] eax +
jmp loc_46770D  +
xor edx edx +
mov eax ebx +
call sub_4674F0  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
jmp loc_4675E8  +
mov ecx 2Eh +
jmp loc_467A0B  +
mov ecx 2Fh +
jmp loc_467A0B  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_4675E6  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_467B90  +
test ebx ebx +
jnz loc_467AB6  +
cmp dl 5Ah +
jz loc_467ABF  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_4674F0  +
test ebx ebx +
mov edi eax +
jz loc_467AB8  +
test byte ptr [esi+8] 1 +
jz loc_467AB8  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_467AB8  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_467B64  +
cmp al 5Fh +
jz loc_467B64  +
sub eax 30h +
cmp al 9 +
ja loc_467B5B  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_467B32  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_467B32  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_467AFE  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_467B20  +
cmp cl 2Eh +
jz loc_467B03  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_460D70  +
mov ecx edi +
mov edx 4Bh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_460D10  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_467AE2  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_467B7F  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_467B72  +
cmp cl 5Fh +
jz loc_467B72  +
jmp loc_467AFE  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_467AB1  +
***
jmp sub_467BB0  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_46FB40  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_46FB40  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_467A90  +
mov ebx eax +
xor eax eax +
lea esi [esi+0] +
***
mov eax [ebx+4] +
lea esp [ebp-0Ch] +
mov eax [ebx+4] +
jmp loc_467D80  +
***
jmp loc_467D80  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [eax+0Ch] +
mov [esp+58h+var_1C] 0 +
lea eax [esp+58h+var_1C] +
mov [esp+58h+var_41] dl +
mov [esp+58h+var_4C] eax +
cmp [ebx] dl +
jz loc_46861A  +
mov eax [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
mov [esp+58h+var_48] eax +
movzx eax byte ptr [ebx] +
cmp al 4Ch +
jz loc_468081  +
cmp al 54h +
jz loc_4680A1  +
cmp al 73h +
jz loc_467F40  +
cmp al 66h +
jz loc_467F80  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_467ECE  +
cmp al 6Fh +
jz loc_467EC2  +
cmp al 74h +
setz dl  +
jnz loc_4699A6  +
cmp byte ptr [ebx+1] 6Ch +
jz loc_4680B0  +
mov eax ebp +
call sub_466350  +
test eax eax +
mov ebx eax +
jz loc_468070  +
mov eax [eax] +
cmp eax 31h +
jz loc_467FE0  +
cmp eax 32h +
jz loc_4680E1  +
cmp eax 33h +
jnz loc_468070  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_468703  +
mov eax ebp +
call sub_469B40  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_467EAD  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_460D10  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 35h +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
cmp byte ptr [ebx+1] 6Eh +
jnz loc_467E52  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_4665C0  +
test eax eax +
jz loc_468070  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_4680F1  +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
mov [esp+58h+var_58] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_460D10  +
mov edi [esp+58h+var_4C] +
test eax eax +
mov [edi] eax +
jz loc_468077  +
mov ebx [ebp+0Ch] +
add eax 8 +
mov [esp+58h+var_4C] eax +
movzx eax [esp+58h+var_41] +
cmp [ebx] al +
jnz loc_467DF8  +
add ebx 1 +
mov eax [esp+58h+var_1C] +
mov [ebp+0Ch] ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 72h +
jz loc_468204  +
cmp al 70h +
jnz loc_467E52  +
add ebx 2 +
mov eax ebp +
mov [ebp+0Ch] ebx +
call sub_469B40  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
cmp byte ptr [ebx+1] 70h +
jnz loc_467E52  +
lea eax [ebx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [ebx+2] 54h +
jz loc_4681A0  +
mov eax ebp +
call sub_461090  +
add eax 1 +
jz loc_468070  +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_468070  +
mov ecx [ebp+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [ebp+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_468070  +
mov dword ptr [ecx] 6 +
mov [ecx+4] eax +
jmp loc_467EEB  +
mov edi [ebx+4] +
mov esi [edi] +
mov [esp+58h+var_3C] edi +
mov edi [edi+8] +
mov [esp+58h+var_40] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_4682F0  +
mov esi [esp+58h+var_3C] +
mov edx [esi+0Ch] +
cmp edx 1 +
jz loc_469955  +
jle loc_4681E0  +
cmp edx 2 +
jz loc_468116  +
cmp edx 3 +
jnz loc_468070  +
mov esi [esp+58h+var_40] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_468322  +
mov eax [esp+58h+var_40] +
cmp byte ptr [eax] 6Eh +
jnz loc_468070  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jz loc_468241  +
cmp al 77h +
jz loc_468241  +
nop   +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_467BB0  +
mov ecx eax +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
test ecx ecx +
mov [ebp+34h] eax +
jnz loc_467EF2  +
jmp loc_468077  +
mov eax ebp +
call sub_4610D0  +
mov ecx eax +
jmp loc_468090  +
xor esi esi +
test dl dl +
jnz loc_468310  +
add ebx 2 +
mov edx 45h +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
mov edx [ebx+4] +
mov [esp+58h+var_40] 0 +
jmp loc_46801B  +
mov [esp+58h+var_40] eax +
mov eax ebp +
call sub_4669B0  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
mov eax [ebx+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4685F3  +
mov eax ebp +
call sub_469B40  +
mov [esp+58h+var_3C] eax +
mov esi [esp+58h+var_40] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_4685E0  +
mov esi [esp+58h+var_40] +
mov edi offset unk_49304F +
mov ecx 3 +
cmps   +
jz loc_4681B0  +
mov esi [esp+58h+var_40] +
mov edi offset unk_493052 +
mov ecx 3 +
cmps   +
jz loc_4681B0  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_460D10  +
mov ecx ebx +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
add ebx 3 +
xor eax eax +
mov [ebp+0Ch] ebx +
jmp loc_467FAA  +
mov eax ebp +
call sub_4665C0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_468173  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_468173  +
test edx edx +
jnz loc_468070  +
mov ecx ebx +
mov edx 34h +
mov [esp+58h+var_58] 0 +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov ebx eax +
mov eax ebp +
call sub_4665C0  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov esi eax +
jz loc_46863A  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 1 +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
mov edx 5Fh +
mov eax ebp +
call sub_467DD0  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_3C] eax +
call sub_465010  +
mov [esp+58h+var_40] eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_468774  +
cmp dl 70h +
jz loc_46881C  +
cmp dl 69h +
jnz loc_468070  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_468070  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
xor ecx ecx +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
mov [esp+58h+var_58] ecx +
mov ecx [esp+58h+var_40] +
mov edx 3Ah +
mov eax ebp +
call sub_460D10  +
mov ecx [esp+58h+var_3C] +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx ebx +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov ecx ebx +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_468090  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov ebx [ebp+0Ch] +
mov esi eax +
jmp loc_4680BA  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_4689E2  +
cmp al 54h +
jz loc_468A2A  +
cmp al 73h +
jz loc_46883F  +
cmp al 66h +
jz loc_46871A  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_46865A  +
mov eax ebp +
call sub_4665C0  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jz loc_468371  +
cmp al 49h +
jz loc_468E6C  +
cmp al 4Ch +
jz loc_4689F8  +
cmp al 54h +
nop   +
lea esi [esi+0] +
jz loc_468A40  +
cmp al 73h +
jz loc_468873  +
cmp al 66h +
jz loc_4688E4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_468791  +
cmp al 6Fh +
jz loc_468781  +
cmp al 74h +
setz cl  +
jnz loc_4694B9  +
cmp byte ptr [edx+1] 6Ch +
jz loc_468D79  +
mov eax ebp +
call sub_466350  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_4689BA  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_38] eax +
jz loc_468A56  +
mov eax [esp+58h+var_38] +
cmp eax 32h +
jz loc_468E0D  +
cmp eax 33h +
jnz loc_4689BA  +
mov edx [ebp+0Ch] +
movzx ecx byte ptr [edx] +
cmp [esp+58h+var_38] 33h +
mov [esp+58h+var_30] 0 +
jnz loc_468419  +
cmp cl 5Fh +
jz loc_469197  +
cmp cl 4Ch +
jz loc_4695DD  +
cmp cl 54h +
jz loc_46954A  +
cmp cl 73h +
nop   +
jz loc_469283  +
cmp cl 66h +
jz loc_469230  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_4691F2  +
cmp cl 6Fh +
jz loc_4691E2  +
cmp cl 74h +
setz al  +
jnz loc_4698E7  +
cmp byte ptr [edx+1] 6Ch +
jz loc_469571  +
mov eax ebp +
call sub_466350  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_46956A  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_4696DB  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_469602  +
cmp eax 33h +
jnz loc_46956A  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_469A31  +
mov eax ebp +
call sub_469B40  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_4684CE  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_460D10  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_460D10  +
mov esi eax +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_4691AB  +
mov ecx esi +
mov edx 37h +
mov [esp+58h+var_58] esi +
mov eax ebp +
call sub_460D10  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_468A0E  +
cmp al 54h +
jz loc_468A1C  +
cmp al 73h +
jz loc_4688A7  +
cmp al 66h +
jz loc_468942  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_4687DA  +
cmp al 6Fh +
jz loc_4687CA  +
cmp al 74h +
setz cl  +
jnz loc_469942  +
cmp byte ptr [edx+1] 6Ch +
jz loc_468DCD  +
mov eax ebp +
call sub_466350  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_46877A  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_468B5B  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_468E1B  +
cmp eax 33h +
jnz loc_46877A  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_4695EB  +
mov eax ebp +
call sub_469B40  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_4685C8  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_460D10  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_4682AD  +
mov edx 45h +
mov eax ebp +
call sub_467DD0  +
mov esi eax +
jmp loc_468173  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_468609  +
sub eax 72h +
cmp al 1 +
ja loc_468125  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov [esp+58h+var_3C] eax +
jmp loc_468130  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_460D10  +
jmp loc_468079  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov [esp+58h+var_58] eax +
jmp loc_46822C  +
cmp al 6Fh +
jz loc_4689CD  +
cmp al 74h +
setz cl  +
jnz loc_4695AE  +
cmp byte ptr [edx+1] 6Ch +
jz loc_468DA2  +
mov eax ebp +
call sub_466350  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_46899F  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_3C] eax +
jz loc_468C70  +
mov eax [esp+58h+var_3C] +
cmp eax 32h +
jz loc_468DFF  +
cmp eax 33h +
jnz loc_46899F  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_4699B5  +
mov eax ebp +
call sub_469B40  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_469170  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_460D10  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_468371  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
jmp loc_467E95  +
cmp byte ptr [edx+1] 70h +
jnz loc_468677  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46906F  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_4689A2  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_3C] esi +
jz loc_4686FB  +
mov eax [esp+58h+var_3C] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_468371  +
add eax 1 +
mov [ebp+0Ch] eax +
xor ecx ecx +
jmp loc_4682AD  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_4683BF  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_4665C0  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jz loc_46851A  +
cmp al 49h +
jnz loc_46851A  +
mov eax ebp +
call sub_4669B0  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_468509  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_468563  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_4665C0  +
test eax eax +
mov ecx eax +
jz loc_4682AD  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_4682AD  +
mov eax ebp +
mov [esp+58h+var_38] ecx +
call sub_4669B0  +
mov ecx [esp+58h+var_38] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_4682AD  +
cmp byte ptr [eax+1] 69h +
jnz loc_468070  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
mov ecx eax +
jmp loc_4682AD  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_469090  +
cmp al 70h +
jnz loc_468677  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_4686ED  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_469101  +
cmp al 70h +
jnz loc_4683BF  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_468509  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_4690C4  +
cmp al 70h +
jnz loc_468563  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_4682AD  +
cmp byte ptr [edx+1] 70h +
jnz loc_4683BF  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_469150  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_4689BD  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_40] esi +
jz loc_468517  +
mov eax [esp+58h+var_40] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_46851A  +
cmp byte ptr [edx+1] 70h +
jnz loc_468563  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_469135  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
xor ecx ecx +
cmp eax [ebp+18h] +
jge loc_4682AD  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_4682AD  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_4682AD  +
cmp al 77h +
jz loc_468CFF  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_3C] 0 +
jmp loc_468371  +
cmp al 77h +
jz loc_468AE1  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_40] 0 +
jmp loc_46851A  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_468677  +
add edx 2 +
mov [ebp+0Ch] edx +
jmp loc_468354  +
mov eax ebp +
call sub_467BB0  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_468371  +
mov eax ebp +
call sub_467BB0  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_46851A  +
mov eax ebp +
call sub_467BB0  +
mov ecx eax +
jmp loc_4682AD  +
mov eax ebp +
call sub_4610D0  +
mov ecx eax +
jmp loc_4682AD  +
mov eax ebp +
call sub_4610D0  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_468371  +
mov eax ebp +
call sub_4610D0  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_46851A  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_34] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_30] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4691BC  +
mov eax [esp+58h+var_34] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_469A48  +
jle loc_468E84  +
cmp ecx 2 +
jz loc_468FD8  +
cmp ecx 3 +
jnz loc_4689BA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_4692C0  +
cmp byte ptr [edx] 6Eh +
jnz loc_4689BA  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_4689B2  +
mov edx 5Fh +
mov eax ebp +
call sub_467DD0  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_465010  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_469AD2  +
cmp al 70h +
jz loc_469AB1  +
cmp al 69h +
jnz loc_469A24  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_469A12  +
mov eax ebp +
call sub_469B40  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_460D10  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_468509  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_30] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_2C] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4691D5  +
mov eax [esp+58h+var_30] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_4698F5  +
jle loc_468E46  +
cmp ecx 2 +
jz loc_468F38  +
cmp ecx 3 +
jnz loc_46877A  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_4692FE  +
xor ecx ecx +
cmp byte ptr [edx] 6Eh +
jnz loc_4682AD  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46950F  +
mov edx 5Fh +
mov eax ebp +
call sub_467DD0  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_465010  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46953D  +
xor ecx ecx +
cmp dl 70h +
jz loc_46951C  +
cmp dl 69h +
jnz loc_4682AD  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4682AD  +
mov eax ebp +
call sub_469B40  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_460D10  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_4682AD  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_38] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_34] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46917E  +
mov eax [esp+58h+var_38] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_4699CC  +
jle loc_468E29  +
cmp ecx 2 +
jz loc_468EA1  +
cmp ecx 3 +
lea esi [esi+0] +
jnz loc_46899F  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46947C  +
cmp byte ptr [edx] 6Eh +
jnz loc_46899F  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_468997  +
mov edx 5Fh +
mov eax ebp +
call sub_467DD0  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_465010  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_4694E3  +
cmp al 70h +
jz loc_4694C6  +
cmp al 69h +
jnz loc_4694AC  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_46949A  +
mov eax ebp +
call sub_469B40  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_460D10  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_4686ED  +
xor esi esi +
test cl cl +
jnz loc_46941E  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_468509  +
xor esi esi +
test cl cl +
jnz loc_4692DE  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_4686ED  +
xor esi esi +
test cl cl +
jnz loc_46946D  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_4682AD  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_468CB1  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_468A97  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_468B9C  +
test ecx ecx +
jnz loc_46899F  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_4686ED  +
test ecx ecx +
jnz loc_46877A  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_460D10  +
mov ecx eax +
jmp loc_4682AD  +
mov eax ebp +
call sub_4669B0  +
mov ecx [esp+58h+var_3C] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_4686ED  +
test ecx ecx +
jnz loc_4689BA  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_468509  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4693CF  +
mov eax ebp +
mov [esp+58h+var_38] edx +
call sub_469B40  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_4693BC  +
mov edi offset unk_49304F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_468EFF  +
mov edi offset unk_493052 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_4692F0  +
mov eax ebp +
call sub_4665C0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4694F0  +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_460D10  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_4686ED  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46937F  +
mov eax ebp +
mov [esp+58h+var_30] edx +
call sub_469B40  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46935E  +
mov edi offset unk_49304F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_468F96  +
mov edi offset unk_493052 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_4693AE  +
mov eax ebp +
call sub_4665C0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_469A92  +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_460D10  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_4682AD  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46932F  +
mov eax ebp +
mov [esp+58h+var_34] edx +
call sub_469B40  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46931C  +
mov edi offset unk_49304F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_469036  +
mov edi offset unk_493052 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_469371  +
mov eax ebp +
call sub_4665C0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4695BB  +
mov ecx [esp+58h+var_38] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_460D10  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_468509  +
mov eax ebp +
call sub_461090  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_46873C  +
jmp loc_4689A2  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov edi eax +
mov eax ebp +
call sub_4665C0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4693FE  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_4686ED  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov esi eax +
mov eax ebp +
call sub_4665C0  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46942D  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_460D10  +
mov ecx eax +
jmp loc_4682AD  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov edi eax +
mov eax ebp +
call sub_4665C0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46944D  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_468509  +
mov eax ebp +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_468964  +
xor ecx ecx +
jmp loc_4682AD  +
mov eax ebp +
call sub_461090  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_468906  +
jmp loc_4689BD  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_4686ED  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_4686ED  +
add edx 1 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
mov esi eax +
mov [esp+58h+var_58] esi +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_468509  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_468509  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
jmp loc_4685C5  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_468469  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_4665C0  +
test eax eax +
mov esi eax +
jz loc_46956A  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_4684E0  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_4684E0  +
cmp byte ptr [edx+1] 70h +
jnz loc_468469  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_469558  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_46956A  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_4684E0  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_4684E0  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_469ADF  +
cmp al 70h +
jnz loc_468469  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_4684E0  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
mov eax ebp +
call sub_469B40  +
mov edi eax +
mov eax ebp +
call sub_469B40  +
jmp loc_468B28  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov edx [ebp+0Ch] +
mov esi eax +
jmp loc_468DAC  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
jmp loc_468F14  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
mov eax ebp +
call sub_469B40  +
mov edi eax +
mov eax ebp +
call sub_469B40  +
jmp loc_468C34  +
mov edx 45h +
mov eax ebp +
call sub_467DD0  +
mov esi eax +
jmp loc_46904B  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_469345  +
sub eax 72h +
cmp al 1 +
ja loc_468FEB  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_34] edx +
call sub_465010  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
jmp loc_468FFE  +
mov edx 45h +
mov eax ebp +
call sub_467DD0  +
mov esi eax +
jmp loc_468FAB  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
jmp loc_46904B  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_469395  +
sub eax 72h +
cmp al 1 +
ja loc_468F4B  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_30] edx +
call sub_465010  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
jmp loc_468F5E  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
jmp loc_468FAB  +
mov edx 45h +
mov eax ebp +
call sub_467DD0  +
mov esi eax +
jmp loc_468F14  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4693E5  +
sub eax 72h +
cmp al 1 +
ja loc_468EB4  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_38] edx +
call sub_465010  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
jmp loc_468EC7  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov [esp+58h+var_58] eax +
jmp loc_4690B8  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov esi eax +
jmp loc_468D83  +
mov eax ebp +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov [esp+58h+var_58] eax +
jmp loc_4690EC  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov [esp+58h+var_58] eax +
jmp loc_469129  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov esi eax +
jmp loc_468DD7  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
mov eax ebp +
call sub_469B40  +
mov edi eax +
mov eax ebp +
call sub_469B40  +
jmp loc_468D46  +
mov eax 69h +
mov [esp+58h+var_3C] 0 +
jmp loc_4683A2  +
mov [esp+58h+var_3C] 0 +
jmp loc_468371  +
cmp al 69h +
jz loc_4683B5  +
jmp loc_4683BF  +
cmp byte ptr [edx+1] 69h +
jnz loc_46949F  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
jmp loc_468D46  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_468D46  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_468F14  +
cmp al 77h +
jz loc_468BE8  +
jmp loc_4682AD  +
cmp byte ptr [eax+1] 69h +
jnz loc_4682AD  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
jmp loc_468C34  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_468C34  +
mov eax ebp +
call sub_4610D0  +
mov esi eax +
jmp loc_4684E0  +
mov eax ebp +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_469252  +
xor esi esi +
jmp loc_4684E0  +
xor esi esi +
test al al +
jz loc_469584  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov edx [ebp+0Ch] +
mov esi eax +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_4684E0  +
cmp al 69h +
jz loc_46866D  +
jmp loc_468677  +
mov eax ebp +
lea esi [esi+0] +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_46904B  +
mov eax ebp +
call sub_467BB0  +
mov esi eax +
jmp loc_4684E0  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
jmp loc_4685B0  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov eax [eax+4] +
cmp eax 1 +
jz loc_4698A4  +
jle loc_46987E  +
cmp eax 2 +
jz loc_469782  +
cmp eax 3 +
jnz loc_46956A  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_469764  +
cmp byte ptr [edx] 6Eh +
jnz loc_46956A  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_469757  +
mov edx 5Fh +
mov eax ebp +
call sub_467DD0  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_465010  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46974A  +
cmp dl 70h +
jz loc_469719  +
cmp dl 69h +
jnz loc_46956A  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46956A  +
mov eax ebp +
call sub_469B40  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_460D10  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_4684E0  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_2C] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46973A  +
mov eax [esp+58h+var_2C] +
mov eax [eax+0Ch] +
jmp loc_46960B  +
cmp byte ptr [eax+1] 69h +
jnz loc_46956A  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
jmp loc_46969F  +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov [esp+58h+var_58] eax +
jmp loc_4684CE  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_46969F  +
cmp al 77h +
jz loc_469655  +
jmp loc_46956A  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
mov eax ebp +
call sub_469B40  +
mov edi eax +
mov eax ebp +
call sub_469B40  +
jmp loc_46969F  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_469844  +
mov eax ebp +
mov [esp+58h+var_2C] edx +
call sub_469B40  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_469834  +
mov edi offset unk_49304F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_4697DC  +
mov edi offset unk_493052 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_469873  +
mov eax ebp +
call sub_4665C0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_469807  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_460D10  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_4684E0  +
mov edx 45h +
mov eax ebp +
call sub_467DD0  +
mov esi eax +
jmp loc_469807  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46985A  +
sub eax 72h +
cmp al 1 +
ja loc_469795  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_2C] edx +
call sub_465010  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
jmp loc_4697A8  +
mov eax ebp +
call sub_469B40  +
mov esi eax +
jmp loc_469807  +
test eax eax +
jnz loc_46956A  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_460D10  +
mov esi eax +
jmp loc_4684E0  +
test edx edx +
jz loc_4698E3  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jz loc_4698B5  +
xor esi esi +
cmp al 70h +
jnz loc_4698BC  +
xor esi esi +
cmp al [edx+1] +
jz loc_4698CC  +
cmp [esp+58h+var_34] 33h +
jnz loc_4684AF  +
jmp loc_4684A3  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4698BC  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_4698BC  +
xor esi esi +
jmp loc_4698BC  +
cmp cl 69h +
jz loc_46845F  +
jmp loc_468469  +
test edx edx +
jz loc_46993E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
nop   +
jz loc_469920  +
xor esi esi +
cmp cl 70h +
jz loc_469920  +
cmp [esp+58h+var_34] 33h +
jnz loc_4685A9  +
jmp loc_46859D  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_469909  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_469909  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_469909  +
xor esi esi +
jmp loc_469909  +
cmp al 69h +
jz loc_468559  +
lea esi [esi+0] +
jmp loc_468563  +
mov esi [esp+58h+var_40] +
test esi esi +
jz loc_4699A2  +
movzx edx byte ptr [esi] +
cmp dl 6Dh +
jz loc_469980  +
xor esi esi +
cmp dl 70h +
jz loc_469980  +
cmp eax 33h +
jnz loc_467E8E  +
jmp loc_467E82  +
mov edi [esp+58h+var_40] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_46996C  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46996C  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_46996C  +
xor esi esi +
jmp loc_46996C  +
cmp al 69h +
jz loc_467E48  +
nop   +
jmp loc_467E52  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
jmp loc_4686C8  +
test edx edx +
jz loc_469A0E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_4699F0  +
xor esi esi +
cmp cl 70h +
jz loc_4699F0  +
cmp [esp+58h+var_3C] 33h +
jnz loc_4686C1  +
jmp loc_4686B5  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_4699DF  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_4699DF  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_4699DF  +
xor esi esi +
jmp loc_4699DF  +
mov eax 69h +
mov [esp+58h+var_40] 0 +
jmp loc_468546  +
mov [esp+58h+var_40] 0 +
jmp loc_46851A  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_467DD0  +
jmp loc_4684B6  +
test edx edx +
jz loc_4683FB  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_469A61  +
cmp cl 70h +
jnz loc_4683FB  +
cmp cl [edx+1] +
jnz loc_4683FB  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_30] 1 +
movzx ecx byte ptr [edx] +
cmp cl 5Fh +
jnz loc_468419  +
lea esi [edx+1] +
mov [ebp+0Ch] esi +
movzx ecx byte ptr [edx+1] +
mov edx esi +
jmp loc_468401  +
mov eax ebp +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_468FAB  +
cmp byte ptr [edx+1] 69h +
jnz loc_469A17  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
jmp loc_468B28  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_468B28  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_465010  +
mov esi eax +
mov eax ebp +
call sub_4665C0  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_469B18  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_460D10  +
mov esi eax +
jmp loc_4684E0  +
mov eax ebp +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_460D10  +
mov [esp+58h+var_58] eax +
jmp loc_469B03  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_469E35  +
cmp al 54h +
jz loc_469E43  +
cmp al 73h +
jz loc_469C87  +
cmp al 66h +
jz loc_469C30  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_469BA0  +
mov eax ebx +
call sub_4665C0  +
test eax eax +
jz loc_469E10  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_469E61  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_469E20  +
cmp al 74h +
setz cl  +
jnz loc_46A0E2  +
cmp byte ptr [edx+1] 6Ch +
jz loc_469DD3  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov ebp eax +
jz loc_469E10  +
mov eax [eax] +
cmp eax 31h +
jz loc_469CC4  +
cmp eax 32h +
jz loc_469E51  +
cmp eax 33h +
jnz loc_469E10  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_469F65  +
mov eax ebx +
call sub_469B40  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_469C18  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469B94  +
cmp byte ptr [edx+1] 70h +
jnz loc_469BBD  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_469F58  +
mov eax ebx +
call sub_461090  +
add eax 1 +
jz loc_469E10  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_469E10  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_469E10  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_469B94  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_469E80  +
cmp al 70h +
jnz loc_469BBD  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469B94  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_469FA4  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_46A096  +
jle loc_469F80  +
cmp edx 2 +
jz loc_469EC0  +
cmp edx 3 +
jnz loc_469E10  +
mov esi [esp+1Ch+var_14] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_469FC3  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_469E10  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_469E07  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_465010  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46A049  +
cmp dl 70h +
jz loc_46A075  +
cmp dl 69h +
jnz loc_469E10  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_469E10  +
mov eax ebx +
call sub_469B40  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_460D10  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469B94  +
xor esi esi +
test cl cl +
jnz loc_469FB1  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469B94  +
cmp al 77h +
jz loc_469D4F  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_469BBD  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_469B77  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_467BB0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4610D0  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_469CFF  +
mov eax ebx +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469B94  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov esi eax +
mov eax ebx +
call sub_4665C0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_46A01B  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469B94  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_469FF4  +
mov eax ebx +
call sub_469B40  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_469FE1  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_49304F +
mov ecx 3 +
cmps   +
jz loc_469F18  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_493052 +
mov ecx 3 +
cmps   +
jnz loc_46A03B  +
mov eax ebx +
call sub_4665C0  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A056  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_460D10  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469B94  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_469C56  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_469C00  +
test edx edx +
jnz loc_469E10  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469B94  +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
jmp loc_469C15  +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_469DDD  +
mov eax ebx +
call sub_469B40  +
mov esi eax +
mov eax ebx +
call sub_469B40  +
mov edi eax +
mov eax ebx +
call sub_469B40  +
jmp loc_469D99  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov esi eax +
jmp loc_469F2D  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46A00A  +
sub eax 72h +
cmp al 1 +
ja loc_469ECF  +
mov [esp+1Ch+var_1C] ebx +
call sub_465010  +
mov [esp+1Ch+var_10] eax +
jmp loc_469EDA  +
mov eax ebx +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+1Ch+var_1C] eax +
jmp loc_469EA8  +
mov eax ebx +
call sub_469B40  +
mov esi eax +
jmp loc_469F2D  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_469D99  +
mov eax ebx +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_469F2D  +
cmp byte ptr [eax+1] 69h +
jnz loc_469E10  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_469D99  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_46A0AD  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_46A0C0  +
cmp dl 70h +
jz loc_46A0C0  +
cmp eax 33h +
jnz loc_469BF9  +
jmp loc_469BED  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_46A0AD  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46A0AD  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_46A0AD  +
cmp al 69h +
jz loc_469BB3  +
jmp loc_469BBD  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46A128  +
mov eax ebx +
call sub_461050  +
mov esi eax +
test esi esi +
jz loc_46A504  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jz loc_46A1C0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea esi [eax+1] +
mov ebp [ebx+34h] +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
movzx edx byte ptr [eax+1] +
cmp dl 4Ch +
jz loc_46A4A0  +
cmp dl 54h +
jz loc_46A4B0  +
cmp dl 73h +
jz loc_46A1E7  +
cmp dl 66h +
jz loc_46A360  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_46A335  +
cmp dl 6Fh +
jz loc_46A325  +
cmp dl 74h +
setz cl  +
jnz loc_46C287  +
cmp byte ptr [eax+2] 6Ch +
jnz loc_46A1FD  +
xor edi edi +
test cl cl +
jnz loc_46A736  +
add esi 2 +
mov edx 45h +
mov [ebx+0Ch] esi +
mov eax ebx +
call sub_467DD0  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_46A352  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_46A6A7  +
cmp dl 70h +
jz loc_46A6FD  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov [esp+2Ch+var_1C] eax +
jz loc_46A497  +
mov eax [eax] +
cmp eax 31h +
jz loc_46A4C0  +
cmp eax 32h +
jz loc_46A3B0  +
cmp eax 33h +
jnz loc_46A497  +
mov edx [ebx+0Ch] +
xor esi esi +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_46AD4E  +
cmp al 4Ch +
jz loc_46AD32  +
cmp al 54h +
jz loc_46AD40  +
cmp al 73h +
nop   +
jz loc_46AA57  +
cmp al 66h +
jz loc_46AA94  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46A758  +
cmp al 6Fh +
jz loc_46A748  +
cmp al 74h +
setz cl  +
jnz loc_46C31A  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46AFAE  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov edi eax +
jz loc_46AB59  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_46ADA7  +
cmp ecx 32h +
jz loc_46AFE0  +
cmp ecx 33h +
jnz loc_46AB59  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C303  +
mov eax ebx +
call sub_469B40  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_46A2EB  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 35h +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
test esi esi +
mov [esp+2Ch+var_2C] ecx +
jz loc_46A311  +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_1C] +
mov edx 35h +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_46A352  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_46A1FD  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_4665C0  +
test eax eax +
mov esi eax +
jz loc_46A497  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A50B  +
mov [ebx+34h] ebp +
jmp loc_46A10A  +
cmp byte ptr [eax+2] 70h +
jnz loc_46A1FD  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_46A6E4  +
add eax 4 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46A497  +
mov ecx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_46A352  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_46A352  +
mov edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] 0 +
mov edx [edi+4] +
cmp edx 1 +
jz loc_46BFB6  +
jle loc_46A52A  +
cmp edx 2 +
jz loc_46A550  +
cmp edx 3 +
jnz loc_46A497  +
mov esi [esp+2Ch+var_18] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46A7AD  +
mov eax [esp+2Ch+var_18] +
cmp byte ptr [eax] 6Eh +
jnz loc_46A497  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46A48F  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_465010  +
mov esi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46AB36  +
cmp dl 70h +
jz loc_46AD0F  +
cmp dl 69h +
jnz loc_46A497  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46A497  +
mov eax ebx +
call sub_469B40  +
mov ecx eax +
mov [esp+2Ch+var_2C] ecx +
mov edx 3Ah +
mov ecx esi +
mov eax ebx +
call sub_460D10  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_1C] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_46A352  +
cmp al 77h +
jz loc_46A40F  +
xor esi esi +
jmp loc_46A352  +
mov eax ebx +
call sub_467BB0  +
mov esi eax +
jmp loc_46A352  +
mov eax ebx +
call sub_4610D0  +
mov esi eax +
jmp loc_46A352  +
mov edi [esp+2Ch+var_1C] +
mov edi [edi+4] +
mov esi [edi] +
mov [esp+2Ch+var_14] edi +
mov edi [edi+8] +
mov [esp+2Ch+var_18] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_46A726  +
mov edi [esp+2Ch+var_14] +
mov edx [edi+0Ch] +
jmp loc_46A3BF  +
xor eax eax +
jmp loc_46A120  +
mov eax ebx +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_46A352  +
test edx edx +
jnz loc_46A497  +
mov ecx [esp+2Ch+var_1C] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_460D10  +
mov esi eax +
jmp loc_46A352  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46AA10  +
mov edx [ebx+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46B08F  +
cmp al 54h +
jz loc_46B1E3  +
cmp al 73h +
jz loc_46AB65  +
cmp al 66h +
jz loc_46ABA4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46AAF4  +
cmp al 6Fh +
jz loc_46AAE4  +
cmp al 74h +
setz cl  +
jnz loc_46C2C7  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46B321  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov esi eax +
jz loc_46AECF  +
mov edx [eax] +
cmp edx 31h +
jz loc_46B09F  +
cmp edx 32h +
jz loc_46B2E6  +
cmp edx 33h +
jnz loc_46AECF  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C12B  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_469B40  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46A615  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_14] eax +
mov esi [esp+2Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_46A79A  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_49304F +
mov ecx 3 +
cmps   +
jz loc_46A665  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_493052 +
mov ecx 3 +
cmps   +
jnz loc_46AB43  +
mov eax ebx +
call sub_4665C0  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46AC00  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
call sub_460D10  +
mov ecx [esp+2Ch+var_1C] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_46A352  +
add eax 3 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
mov eax ebx +
call sub_4665C0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46AA37  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_46A352  +
mov eax ebx +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_46A382  +
xor esi esi +
jmp loc_46A352  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_469B40  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_46A352  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46A311  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi [ebx+0Ch] +
mov edi eax +
jmp loc_46A191  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46A287  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_4665C0  +
test eax eax +
mov ecx eax +
jz loc_46AB59  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46A2FB  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A2FB  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov esi eax +
jmp loc_46A67A  +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 4Ch +
jz loc_46B35B  +
cmp dl 54h +
jz loc_46B45A  +
cmp dl 73h +
jz loc_46AEDC  +
cmp dl 66h +
jz loc_46AFEA  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_46ACD0  +
cmp dl 6Fh +
jz loc_46ACC0  +
cmp dl 74h +
setz cl  +
jnz loc_46BFA8  +
cmp byte ptr [eax+1] 6Ch +
jz loc_46B595  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov esi eax +
jz loc_46B9B9  +
mov edx [eax] +
cmp edx 31h +
jz loc_46B55C  +
cmp edx 32h +
jz loc_46B47C  +
cmp edx 33h +
jnz loc_46B317  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C170  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_469B40  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46A865  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
mov edx 35h +
mov ecx esi +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46B36C  +
cmp al 54h +
jz loc_46B46B  +
cmp al 73h +
jz loc_46AD67  +
cmp al 66h +
jz loc_46AF5B  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46AC81  +
cmp al 6Fh +
jz loc_46AC71  +
cmp al 74h +
setz cl  +
jnz loc_46BF0D  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46B6F6  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov esi eax +
jz loc_46B1B5  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_46B5CA  +
cmp ecx 32h +
jz loc_46B8D4  +
cmp ecx 33h +
jnz loc_46B1B5  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46BED6  +
mov eax ebx +
call sub_469B40  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_46A928  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov esi eax +
movzx ecx byte ptr [edx] +
cmp cl 4Ch +
jz loc_46B2F0  +
cmp cl 54h +
jz loc_46B6E8  +
cmp cl 73h +
jz loc_46AF1E  +
cmp cl 66h +
jz loc_46B03D  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_46AC2F  +
cmp cl 6Fh +
jz loc_46AC1F  +
cmp cl 74h +
setz al  +
jnz loc_46C030  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46B820  +
mov eax ebx +
call sub_466350  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_46AB3C  +
mov eax [eax] +
cmp eax 31h +
mov [esp+2Ch+var_10] eax +
jz loc_46B858  +
mov eax [esp+2Ch+var_10] +
cmp eax 32h +
jz loc_46B72B  +
cmp eax 33h +
jnz loc_46AB3C  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C2D5  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_469B40  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46A9F9  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_18] +
mov edx 35h +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A453  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46AA26  +
sub eax 72h +
cmp al 1 +
ja loc_46A563  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
mov eax ebx +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46A6CF  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46B2A9  +
cmp al 70h +
jnz loc_46A287  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A2FB  +
cmp byte ptr [edx+1] 70h +
jnz loc_46A287  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46B2FE  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46AB59  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_46A2FB  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_46A2FB  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46A5B2  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_4665C0  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_46AECF  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46A627  +
mov eax ebx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
add eax 1 +
mov [ebx+0Ch] eax +
xor ecx ecx +
jmp loc_46A453  +
mov eax ebx +
call sub_469B40  +
mov esi eax +
jmp loc_46A67A  +
cmp al 77h +
jz loc_46AE3B  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
jmp loc_46A2FB  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46B895  +
cmp al 70h +
jnz loc_46A5B2  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
cmp byte ptr [edx+1] 70h +
jnz loc_46A5B2  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46B443  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46AECF  +
imul edi eax +
add eax 1 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_14] edi +
mov edi [ebx+10h] +
add [esp+2Ch+var_14] edi +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_46A627  +
mov dword ptr [eax] 6 +
mov [eax+4] edx +
jmp loc_46A627  +
mov eax ebx +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov esi eax +
jmp loc_46A67A  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46A98C  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_4665C0  +
test eax eax +
mov ecx eax +
jz loc_46A453  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46A453  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A453  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46A8C4  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_4665C0  +
mov edx [ebx+0Ch] +
test eax eax +
mov esi eax +
jz loc_46A93B  +
cmp byte ptr [edx] 49h +
jnz loc_46A93B  +
mov eax ebx +
call sub_4669B0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
cmp byte ptr [eax+1] 6Eh +
jnz loc_46A802  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_4665C0  +
test eax eax +
mov edi eax +
jz loc_46B9B9  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jnz loc_46A878  +
mov eax ebx +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
cmp byte ptr [eax+1] 69h +
jnz loc_46A497  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
mov ecx eax +
jmp loc_46A453  +
mov eax ebx +
call sub_467BB0  +
mov ecx eax +
jmp loc_46A2FB  +
mov eax ebx +
call sub_4610D0  +
mov ecx eax +
jmp loc_46A2FB  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
mov ecx eax +
jmp loc_46A2FB  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46BCB4  +
cmp al 70h +
jnz loc_46A8C4  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_46B8DE  +
mov eax [edi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46BF1A  +
jle loc_46B1BF  +
cmp eax 2 +
jz loc_46B1F3  +
cmp eax 3 +
nop   +
jnz loc_46AB59  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46BD43  +
cmp byte ptr [edx] 6Eh +
jnz loc_46AB59  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46AB51  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_465010  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46BEB8  +
cmp dl 70h +
jz loc_46BE97  +
cmp dl 69h +
jnz loc_46AB59  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46AB59  +
mov eax ebx +
call sub_469B40  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx edi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A2FB  +
cmp al 77h +
jz loc_46B123  +
mov [esp+2Ch+var_14] 0 +
jmp loc_46A627  +
movzx edx byte ptr [eax+1] +
cmp dl 72h +
jz loc_46B9D6  +
cmp dl 70h +
jnz loc_46A802  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_469B40  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46B910  +
cmp al 70h +
jnz loc_46A98C  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_469B40  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A453  +
cmp byte ptr [edx+1] 70h +
jnz loc_46A8C4  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46BCF4  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46B1B5  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_46B1B7  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_46A93B  +
xor edi edi +
test cl cl +
jnz loc_46B8EE  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A2FB  +
mov eax [eax+4] +
xor edx edx +
jmp loc_46ADE3  +
cmp byte ptr [eax+1] 70h +
jnz loc_46A802  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 54h +
jnz loc_46B9A7  +
add eax 3 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46B9B9  +
imul edi eax +
add eax 1 +
add edi [ebx+10h] +
mov [ebx+14h] eax +
test edi edi +
jz loc_46B319  +
mov [edi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [edi] 6 +
jmp loc_46A878  +
cmp byte ptr [edx+1] 70h +
jnz loc_46A98C  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46B951  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
xor ecx ecx +
cmp eax [ebx+18h] +
jge loc_46A453  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_46A453  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_46A453  +
mov eax ebx +
call sub_467BB0  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46BD33  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46BE5D  +
jle loc_46B41D  +
cmp eax 2 +
jz loc_46B37D  +
cmp eax 3 +
nop   +
jnz loc_46AECF  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46BBBE  +
cmp byte ptr [edi] 6Eh +
jnz loc_46AECF  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_46AEC7  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_465010  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46C1CF  +
cmp dl 70h +
jz loc_46C1AE  +
cmp dl 69h +
jnz loc_46AECF  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46AECF  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
cmp al 77h +
jz loc_46B65C  +
xor esi esi +
mov edx [ebx+0Ch] +
jmp loc_46A93B  +
test eax eax +
jnz loc_46AB59  +
mov ecx edi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A2FB  +
mov eax ebx +
call sub_4610D0  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
mov eax [edi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46B96A  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_469B40  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46B9C3  +
mov [esp+2Ch+var_28] offset unk_49304F +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_46B269  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_493052 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_46B999  +
mov eax ebx +
call sub_4665C0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46BF74  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov ecx edi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A2FB  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edi eax +
mov eax ebx +
call sub_4665C0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46BD0D  +
mov [esp+2Ch+var_2C] ecx +
mov ecx edi +
mov edx 1 +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A2FB  +
mov eax [eax+4] +
xor edi edi +
jmp loc_46B0D3  +
mov eax ebx +
call sub_467BB0  +
mov ecx eax +
jmp loc_46A453  +
mov eax ebx +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_46AAB6  +
xor ecx ecx +
jmp loc_46A2FB  +
xor edi edi +
mov edx [ebx+0Ch] +
jmp loc_46A878  +
xor esi esi +
test cl cl +
jz loc_46B331  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
mov eax ebx +
call sub_467BB0  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
mov eax ebx +
call sub_467BB0  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46BA16  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46B8FD  +
mov [esp+2Ch+var_28] offset unk_49304F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46B3DB  +
mov [esp+2Ch+var_28] offset unk_493052 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_46C002  +
mov eax ebx +
call sub_4665C0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C18F  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_460D10  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
test eax eax +
jnz loc_46AECF  +
mov [esp+2Ch+var_2C] 0 +
mov ecx esi +
mov edx 34h +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
mov eax ebx +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_46ABC6  +
jmp loc_46AECF  +
mov eax ebx +
call sub_4610D0  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
mov eax ebx +
call sub_4610D0  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
mov eax [eax+4] +
xor edi edi +
cmp eax 1 +
jz loc_46C3E0  +
jle loc_46BADE  +
cmp eax 2 +
jz loc_46BA3D  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_46B317  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46C398  +
cmp byte ptr [edi] 6Eh +
jnz loc_46B9B9  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_46C3D3  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_465010  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46C3C6  +
cmp al 70h +
jz loc_46C33D  +
cmp al 69h +
jnz loc_46B9BC  +
cmp byte ptr [edx+1] 6Ch +
nop   +
jnz loc_46C2BB  +
mov eax ebx +
call sub_469B40  +
mov ecx edi +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx 38h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
mov eax [eax+4] +
mov [esp+2Ch+var_18] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46C327  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_46B481  +
xor esi esi +
test cl cl +
jnz loc_46C26B  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov edx 30h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_46BDD4  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46BD9A  +
jle loc_46BD65  +
cmp eax 2 +
jz loc_46BB05  +
cmp eax 3 +
jnz loc_46B1B5  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46BE3B  +
cmp byte ptr [edx] 6Eh +
jnz loc_46B1B5  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46B1AD  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_465010  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_14] eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46BE17  +
cmp al 70h +
jz loc_46BE05  +
cmp al 69h +
jnz loc_46BECF  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_46BEC5  +
mov eax ebx +
call sub_469B40  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
mov eax ebx +
call sub_4610D0  +
mov ecx eax +
jmp loc_46A453  +
xor esi esi +
test cl cl +
jnz loc_46C2F4  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_14] 0 +
mov eax [eax+4] +
cmp eax 1 +
jz loc_46C0BD  +
jle loc_46BC8E  +
cmp eax 2 +
jz loc_46BBDE  +
cmp eax 3 +
jnz loc_46AB3C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46C23B  +
mov eax [esp+2Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_46AB3C  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46C06C  +
mov edx 5Fh +
mov eax ebx +
call sub_467DD0  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_465010  +
mov [esp+2Ch+var_10] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46C05F  +
xor ecx ecx +
cmp dl 70h +
jz loc_46C03E  +
cmp dl 69h +
jnz loc_46A453  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46A453  +
mov eax ebx +
call sub_469B40  +
mov ecx [esp+2Ch+var_10] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_18] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A453  +
xor ecx ecx +
test al al +
jnz loc_46BF99  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_467DD0  +
mov ecx [esp+2Ch+var_18] +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A453  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov ecx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ecx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_14] ecx +
call strcmp  +
test eax eax +
jz loc_46C27A  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax+0Ch] +
jmp loc_46B73A  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
mov eax ebx +
call sub_4665C0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46BEED  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_14] eax +
jmp loc_46A627  +
mov eax [eax+4] +
xor edx edx +
jmp loc_46B606  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46A2EB  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov edi eax +
jmp loc_46AFB8  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov edi eax +
jmp loc_46B3F0  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_4665C0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C295  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 1 +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A453  +
mov eax ebx +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_46B05F  +
xor ecx ecx +
jmp loc_46A453  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46B980  +
sub eax 72h +
cmp al 1 +
ja loc_46B202  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_465010  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_46B215  +
mov eax ebx +
call sub_469B40  +
mov ecx eax +
jmp loc_46B27E  +
mov eax ebx +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_46B00C  +
mov edx [ebx+0Ch] +
xor edi edi +
jmp loc_46A878  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ecx eax +
jmp loc_46B27E  +
add eax 2 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
mov eax ebx +
call sub_4665C0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C010  +
mov [esp+2Ch+var_2C] edi +
mov edx 1 +
mov ecx esi +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46BA2C  +
sub eax 72h +
cmp al 1 +
ja loc_46B38C  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_14] eax +
jmp loc_46B397  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46C371  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46C35E  +
mov [esp+2Ch+var_28] offset unk_49304F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46BA9B  +
mov [esp+2Ch+var_28] offset unk_493052 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_46C3B8  +
mov eax ebx +
call sub_4665C0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C412  +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_460D10  +
mov edx 36h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
test eax eax +
jnz loc_46B317  +
mov edx 34h +
mov ecx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46A878  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46C08E  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_469B40  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46C07B  +
mov [esp+2Ch+var_28] offset unk_49304F +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_46BB7B  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_493052 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_46BD8C  +
mov eax ebx +
call sub_4665C0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C1DC  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_469B40  +
mov edi eax +
mov eax ebx +
call sub_469B40  +
jmp loc_46B16F  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46C214  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46C201  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_49304F +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46BC4C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_493052 +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jnz loc_46C25D  +
mov eax ebx +
call sub_4665C0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C0F2  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
mov edx 37h +
mov eax ebx +
call sub_460D10  +
mov ecx [esp+2Ch+var_18] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46A453  +
test eax eax +
jnz loc_46AB3C  +
mov ecx [esp+2Ch+var_18] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_460D10  +
mov ecx eax +
jmp loc_46A453  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
mov eax ebx +
call sub_4665C0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C14A  +
mov [esp+2Ch+var_2C] ecx +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
mov eax ebx +
call sub_461090  +
add eax 1 +
mov edx eax +
jnz loc_46AF7D  +
xor esi esi +
jmp loc_46B1B7  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46B2D1  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46A615  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_469B40  +
jmp loc_46AE89  +
test eax eax +
jnz loc_46B1B5  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_460D10  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A93B  +
mov eax ebx +
call sub_469B40  +
mov ecx eax +
jmp loc_46BB90  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_46BDBA  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_46BDC8  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_46BDE5  +
cmp ecx 33h +
jnz loc_46A906  +
jmp loc_46A8FA  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_46BDBA  +
jmp loc_46BDAD  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_2C] eax +
nop   +
jmp loc_46A928  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46BDBA  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_46BDBA  +
cmp byte ptr [edx+1] 69h +
mov ecx 70h +
jz loc_46BE24  +
xor esi esi +
jmp loc_46A96D  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46B6A7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
jmp loc_46B6A7  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_469B40  +
jmp loc_46B6A7  +
xor ecx ecx +
test edi edi +
jz loc_46BE6E  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jz loc_46BE7C  +
cmp al 70h +
jz loc_46BE7C  +
cmp edx 33h +
jnz loc_46A5EE  +
jmp loc_46A5E2  +
xor ecx ecx +
cmp al [edi+1] +
jnz loc_46BE6E  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46BE6E  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46BE6E  +
cmp byte ptr [eax+1] 69h +
jnz loc_46AB59  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_46AE89  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46AE89  +
mov ecx 69h +
jmp loc_46BE10  +
xor esi esi +
jmp loc_46A93B  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_46A90D  +
mov eax ebx +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46B8BD  +
cmp al 69h +
jz loc_46A8BA  +
jmp loc_46A8C4  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_46BF3A  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_46BF48  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_46BF54  +
cmp ecx 33h +
jnz loc_46A2C9  +
jmp loc_46A2BD  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_46BF3A  +
jmp loc_46BF2D  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46BF3A  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_46BF3A  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46B27E  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov ecx eax +
jmp loc_46B82A  +
cmp dl 69h +
jz loc_46A7F8  +
jmp loc_46A802  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_46BFD4  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_46BFCB  +
cmp dl 70h +
jnz loc_46BFD4  +
mov edi [esp+2Ch+var_18] +
cmp dl [edi+1] +
jz loc_46BFEA  +
mov edx [ebx+0Ch] +
xor esi esi +
cmp eax 33h +
jz loc_46A232  +
movzx eax byte ptr [edx] +
jmp loc_46A23D  +
mov edx [ebx+0Ch] +
mov esi 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46BFD9  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_46BFD9  +
mov eax ebx +
call sub_469B40  +
mov edi eax +
jmp loc_46B3F0  +
mov eax ebx +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46B9FE  +
cmp cl 69h +
jz loc_46A982  +
jmp loc_46A98C  +
cmp byte ptr [eax+1] 69h +
jnz loc_46A453  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_46B7E0  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46B7E0  +
cmp al 77h +
jz loc_46B790  +
xor ecx ecx +
jmp loc_46A453  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ecx eax +
jmp loc_46BB90  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46C0A4  +
sub eax 72h +
cmp al 1 +
ja loc_46BB14  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_465010  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_46BB27  +
mov eax [esp+2Ch+var_14] +
xor ecx ecx +
test eax eax +
jz loc_46C0D9  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jnz loc_46C0E9  +
mov edx [esp+2Ch+var_14] +
xor ecx ecx +
cmp al [edx+1] +
jz loc_46C117  +
cmp [esp+2Ch+var_10] 33h +
jnz loc_46A9D2  +
jmp loc_46A9C6  +
cmp al 70h +
jnz loc_46C0D9  +
lea esi [esi+0] +
jmp loc_46C0CE  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46BC61  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46C0D9  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46C0D9  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_467DD0  +
mov ecx [esp+2Ch+var_14] +
jmp loc_46A5FD  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46BCDC  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_467DD0  +
mov ecx [esp+2Ch+var_18] +
jmp loc_46A84D  +
mov eax ebx +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edi eax +
jmp loc_46B3F0  +
cmp byte ptr [eax+1] 69h +
jnz loc_46AECF  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_46B16F  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46B16F  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov ecx eax +
jmp loc_46BB90  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov ecx eax +
jmp loc_46BC61  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46C22A  +
sub eax 72h +
cmp al 1 +
ja loc_46BBF1  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_10] eax +
jmp loc_46BBFC  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_469B40  +
jmp loc_46B7E0  +
mov eax ebx +
call sub_469B40  +
mov ecx eax +
jmp loc_46BC61  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
jmp loc_46B59F  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
jmp loc_46A9F6  +
cmp dl 69h +
jz loc_46A181  +
jmp loc_46A1FD  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_4669B0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46B93A  +
mov eax 69h +
xor edi edi +
jmp loc_46A8A7  +
cmp al 69h +
jz loc_46A5A8  +
nop   +
jmp loc_46A5B2  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_467DD0  +
mov ecx [esp+2Ch+var_14] +
jmp loc_46A9E1  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov esi eax +
jmp loc_46B700  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_467DD0  +
jmp loc_46A2D0  +
cmp al 69h +
jz loc_46A27D  +
jmp loc_46A287  +
mov [esp+2Ch+var_2C] ebx +
lea esi [esi+0] +
call sub_465010  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46A865  +
cmp byte ptr [edx+1] 69h +
jnz loc_46C2C0  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_467DD0  +
jmp loc_46B51D  +
mov edx 45h +
mov eax ebx +
call sub_467DD0  +
mov edi eax +
jmp loc_46BAB0  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46C387  +
sub eax 72h +
cmp al 1 +
ja loc_46BA4C  +
mov [esp+2Ch+var_2C] ebx +
call sub_465010  +
mov [esp+2Ch+var_18] eax +
jmp loc_46BA57  +
mov eax ebx +
call sub_469B40  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_469B40  +
mov edi eax +
mov eax ebx +
call sub_469B40  +
jmp loc_46B51D  +
mov eax ebx +
call sub_469B40  +
mov edi eax +
jmp loc_46BAB0  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46B51D  +
cmp al 77h +
jz loc_46B4D3  +
jmp loc_46B9B9  +
xor ecx ecx +
test edi edi +
jz loc_46C3F4  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_46C405  +
xor ecx ecx +
cmp al [edi+1] +
jz loc_46C431  +
cmp edx 33h +
jnz loc_46A83E  +
lea esi [esi+0] +
jmp loc_46A832  +
cmp al 70h +
jnz loc_46C3F4  +
lea esi [esi+0] +
jmp loc_46C3ED  +
mov eax ebx +
call sub_4669B0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_460D10  +
mov edi eax +
jmp loc_46BAB0  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46C3F4  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46C3F4  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] 0 +
mov [ebp+var_54] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_4C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_460F10  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx eax +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_46FB40  +
sub esp eax +
lea eax ds:12h[edx*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_46FB40  +
mov edx [ebp+arg_0] +
sub esp eax +
lea eax [esp+178h+var_16C] +
mov [ebp+var_28] eax +
mov eax [ebp+var_38] +
lea edi [ebp+var_15C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_164] ebx +
mov [ebp+var_160] eax +
lea eax [ebp+var_164] +
mov [ebp+var_38] eax +
mov eax edi +
call sub_4617A0  +
mov eax [ebp+var_160] +
mov [ebp+var_38] eax +
mov eax [ebp+var_5C] +
mov esp esi +
mov ecx [ebp+var_50] +
mov edx [ebp+var_54] +
mov byte ptr [ebp+eax+var_15C] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_44] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_46C590  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_46C770  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_46C724  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_46C71C  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_46FB40  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_46FB40  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_46C6D0  +
jb loc_46C785  +
cmp esi 3 +
ja loc_46C785  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_46C681  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_46C7A0  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_460D70  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+78h+var_78] 0 +
call sub_460D10  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_46C6E5  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_467A90  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_46C6F5  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_46C71A  +
test ebx ebx +
jz loc_46C797  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_46C450  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_46C730  +
cmp al 5Fh +
jnz loc_46C760  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_46C743  +
cmp al 44h +
jnz loc_46C5BE  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_46C5BE  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_46C5CC  +
cmp al 24h +
jnz loc_46C5BE  +
jmp loc_46C730  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_46C5AA  +
mov esi 1 +
nop   +
jmp loc_46C5CC  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_465010  +
mov ebx eax +
jmp loc_46C6E5  +
xor eax eax +
mov esp edi +
jmp loc_46C71C  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_4674F0  +
mov ecx eax +
jmp loc_46C69D  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset sub_4615A0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_46C590  +
test eax eax +
jz loc_46C816  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_46C811  +
***
push ebx  +
sub esp 28h +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov dword ptr [esp+1Ch] 0 +
jnz loc_46C8A3  +
lea eax [esp+10h] +
mov [esp+0Ch] eax +
mov eax [esp+34h] +
mov dword ptr [esp+8] offset sub_4615A0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_46C450  +
test eax eax +
jz loc_46C8D4  +
mov edx [esp+1Ch] +
mov eax 1 +
test edx edx +
mov edx [esp+3Ch] +
cmovz eax [esp+18h] +
mov [edx] eax +
mov eax [esp+10h] +
add esp 28h +
pop ebx  +
retn   +
***
cmp eax 2 +
mov ebx 2 +
jbe loc_46C8B6  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_46C8B0  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call realloc  +
test eax eax +
jz loc_46C8EE  +
mov [esp+10h] eax +
mov [esp+18h] ebx +
jmp loc_46C85C  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov eax [esp+3Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_46C89E  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 1 +
jmp loc_46C85C  +
***
push ebx  +
mov ecx [esp+8] +
mov edx [esp+10h] +
mov eax [esp+14h] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+0Ch] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_46C7C0  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_46C590  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+1Ch+arg_0] +
lea ecx [esp+1Ch+var_10] +
call sub_46C7C0  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_46C590  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_467CC0  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_467CC0  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_46CAA0  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_46CA99  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_4583C0  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_458340  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_46CA60  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
test edx edx +
jz loc_46CB90  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_46CB90  +
sub ecx 46h +
cmp cl 11h +
ja loc_46CB90  +
movzx ecx cl +
jmp ds:off_4940DC[ecx*4]  +
lea ebx [edx+1] +
mov edx offset aExternWindows +
call sub_46CAD0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
lea eax [edx+1] +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC +
call sub_46CAD0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC_0 +
call sub_46CAD0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternPascal +
call sub_46CAD0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
test edx edx +
jz loc_46CC6E  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
movzx eax byte ptr [edx] +
test al al +
jz loc_46CBE0  +
lea ebx [edx+2] +
mov edx eax +
cmp dl 4Eh +
lea eax [ebx-2] +
jnz loc_46CBE2  +
movzx ecx byte ptr [ebx-1] +
lea edx [ecx-61h] +
cmp dl 0Ah +
ja loc_46CBE0  +
movzx edx dl +
jmp ds:off_494164[edx*4]  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx offset a@nogc +
mov eax esi +
call sub_46CAD0  +
movzx edx byte ptr [ebx] +
add ebx 2 +
jmp loc_46CBBB  +
mov edx offset a@safe +
mov eax esi +
call sub_46CAD0  +
jmp loc_46CBF4  +
mov edx offset a@trusted +
mov eax esi +
call sub_46CAD0  +
jmp loc_46CBF4  +
mov edx offset a@property +
mov eax esi +
call sub_46CAD0  +
jmp loc_46CBF4  +
mov edx offset aRef +
mov eax esi +
call sub_46CAD0  +
jmp loc_46CBF4  +
mov edx offset aNothrow +
mov eax esi +
call sub_46CAD0  +
jmp loc_46CBF4  +
mov edx offset aPure +
mov eax esi +
call sub_46CAD0  +
jmp loc_46CBF4  +
mov edx offset aReturn +
mov eax esi +
call sub_46CAD0  +
jmp loc_46CBF4  +
xor eax eax +
retn   +
***
jmp sub_46CC80  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] edx +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_46CCA1  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
mov eax ebp +
call sub_46CA60  +
mov eax [ebp+4] +
mov ebx [ebp+0] +
lea ecx [eax-1] +
cmp ecx ebx +
jb loc_46CCC8  +
movzx eax byte ptr [ecx] +
sub ecx 1 +
mov [ecx+esi+1] al +
mov ebx [ebp+0] +
cmp ecx ebx +
jnb loc_46CCB7  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
add [ebp+4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp cl 61h +
setz al  +
mov ebp eax +
mov eax ecx +
and eax 0FFFFFFFDh +
cmp al 75h +
jz loc_46CD90  +
mov eax ebp +
test al al +
jnz loc_46CD90  +
cmp cl 62h +
jz loc_46CF10  +
movzx eax byte ptr [edx] +
xor ecx ecx +
mov ebx edx +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_46CD7B  +
lea esi [esi+0] +
add ebx 1 +
movzx eax byte ptr [ebx] +
add ecx 1 +
test ds:byte_4922A0[eax+eax] 4 +
jnz loc_46CD60  +
test ecx ecx +
jnz loc_46CF58  +
lea eax [edi-68h] +
cmp al 0Ch +
ja loc_46CF51  +
movzx eax al +
jmp ds:off_4941B0[eax*4]  +
lea eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
mov [esp+34h+var_34] edx +
call strtol  +
mov ecx [esp+34h+var_24] +
test ecx ecx +
mov ebx eax +
jz loc_46CF80  +
test eax eax +
js loc_46CF80  +
mov eax esi +
mov edx offset asc_49419B +
call sub_46CAD0  +
lea eax [ebx-20h] +
cmp eax 5Eh +
ja loc_46CE08  +
mov eax ebp +
test al al +
jz loc_46CE08  +
mov ecx 1 +
mov eax esi +
lea edx [esp+34h+var_20] +
mov byte ptr [esp+34h+var_20] bl +
call sub_46CCF0  +
lea esi [esi+0] +
mov eax esi +
mov edx offset asc_49419B +
call sub_46CAD0  +
mov eax [esp+34h+var_24] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 75h +
jz loc_46CF65  +
cmp al 77h +
jz loc_46CEF6  +
xor ecx ecx +
cmp al 61h +
jnz loc_46CE31  +
mov edx offset asc_49419D +
mov eax esi +
call sub_46CAD0  +
mov ecx 2 +
test ebx ebx +
jz loc_46CF87  +
mov edx 9 +
jmp loc_46CE54  +
add eax 30h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jz loc_46CE74  +
mov eax ebx +
mov edi edx +
and eax 0Fh +
cmp eax 9 +
jle loc_46CE40  +
add eax 57h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jnz loc_46CE54  +
test ecx ecx +
jle loc_46CE8E  +
mov eax edi +
mov edx ecx +
sub eax ecx +
lea eax [esp+eax+34h+var_20] +
mov byte ptr [eax+edx-1] 30h +
sub edx 1 +
jnz loc_46CE82  +
sub edi ecx +
mov ecx 0Ah +
sub ecx edi +
jz loc_46CDF0  +
lea edx [esp+edi+34h+var_20] +
mov eax esi +
call sub_46CCF0  +
jmp loc_46CDF0  +
mov eax esi +
mov edx offset aUl_0 +
call sub_46CAD0  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset asc_4941A8 +
call sub_46CAD0  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset aU_3 +
call sub_46CAD0  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aU_2 +
mov eax esi +
call sub_46CAD0  +
mov ecx 8 +
jmp loc_46CE31  +
lea eax [esp+34h+var_20] +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
call strtol  +
mov edx [esp+34h+var_20] +
test edx edx +
jz loc_46CF80  +
test eax eax +
js loc_46CF80  +
mov eax offset aFalse_1 +
mov edx offset aTrue_1 +
cmovz edx eax +
mov eax esi +
call sub_46CAD0  +
mov eax [esp+34h+var_20] +
jmp loc_46CEBE  +
mov eax ebx +
jmp loc_46CEBE  +
mov eax esi +
call sub_46CCF0  +
nop   +
jmp loc_46CD7B  +
mov edx offset aU_1 +
mov eax esi +
call sub_46CAD0  +
mov ecx 4 +
jmp loc_46CE31  +
xor eax eax +
jmp loc_46CEBE  +
mov edi 0Ah +
jmp loc_46CE74  +
***
jmp sub_46CFA0  +
***
push esi  +
mov edi offset unk_4941E4 +
push ebx  +
mov esi edx +
sub esp 40h +
mov ebx edx +
cmps   +
jz loc_46D0E7  +
mov edi offset off_4941EC +
mov ecx 3 +
mov esi edx +
cmps   +
jz loc_46D126  +
mov edi offset aNinf +
mov ecx 4 +
mov esi edx +
cmps   +
jz loc_46D13C  +
movzx ecx byte ptr [edx] +
xor edx edx +
cmp cl 4Eh +
jz loc_46D0FD  +
movzx esi cl +
test ds:byte_4922A1[esi+esi] 1 +
jz loc_46D11B  +
mov [esp+edx+48h+var_46] cl +
lea ecx [edx+4] +
mov [esp+edx+48h+var_48] 30h +
lea esi [ebx+1] +
mov [esp+edx+48h+var_47] 78h +
mov [esp+edx+48h+var_45] 2Eh +
movzx edx byte ptr [ebx+1] +
movzx ebx dl +
test ds:byte_4922A1[ebx+ebx] 1 +
jz loc_46D049  +
lea edi [esp-1] +
add ecx 1 +
add esi 1 +
mov [edi+ecx] dl +
movzx edx byte ptr [esi] +
movzx ebx dl +
test ds:byte_4922A1[ebx+ebx] 1 +
jnz loc_46D030  +
cmp dl 50h +
jnz loc_46D11B  +
movzx edi byte ptr [esi+1] +
lea edx [ecx+1] +
mov [esp+ecx+48h+var_48] 70h +
mov ebx edi +
cmp bl 4Eh +
jz loc_46D152  +
lea ebx [esi+1] +
mov esi edi +
mov ecx esi +
movzx ecx cl +
test ds:byte_4922A0[ecx+ecx] 4 +
jz loc_46D09B  +
mov ecx esi +
lea edi [esp-1] +
add edx 1 +
add ebx 1 +
mov [edi+edx] cl +
movzx ecx byte ptr [ebx] +
movzx esi cl +
test ds:byte_4922A0[esi+esi] 4 +
jnz loc_46D082  +
mov [esp+edx+48h+var_48] 0 +
mov esi esp +
mov ecx esp +
mov edi [ecx] +
add ecx 4 +
lea edx [edi-1010101h] +
not edi  +
and edx edi +
and edx 80808080h +
jz loc_46D0A3  +
mov edi edx +
shr edi 10h +
test edx 8080h +
cmovz edx edi +
lea edi [ecx+2] +
cmovz ecx edi +
add dl dl +
sbb ecx 3 +
sub ecx esi +
jz loc_46D0F4  +
mov edx esi +
call sub_46CCF0  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_4941E8 +
add ebx 3 +
call sub_46CAD0  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [ebx+1] +
add ebx 1 +
mov dl 1 +
mov [esp+48h+var_48] 2Dh +
movzx esi cl +
test ds:byte_4922A1[esi+esi] 1 +
jnz loc_46D003  +
add esp 40h +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_4941F0 +
add ebx 3 +
call sub_46CAD0  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset aInf +
add ebx 4 +
call sub_46CAD0  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+edx+48h+var_48] 2Dh +
lea ebx [esi+2] +
movzx esi byte ptr [esi+2] +
lea edx [ecx+2] +
jmp loc_46D06D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov esi [esp+2Ch+arg_0] +
jz loc_46D1D7  +
mov ebx eax +
movzx eax byte ptr [edx] +
test al al +
jz loc_46D1D7  +
lea edi [eax-30h] +
mov ebp ecx +
mov ecx edi +
cmp cl 47h +
ja loc_46D1D7  +
movzx edi cl +
jmp ds:off_49422C[edi*4]  +
add edx 1 +
mov byte ptr [esp+2Ch+var_12] al +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call strtol  +
mov ebp [esp+2Ch+var_12+2] +
test ebp ebp +
mov edi eax +
jz loc_46D1D7  +
test eax eax +
js loc_46D1D7  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_46D3B5  +
xor esi esi +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
lea ecx [edx+1] +
sub eax 30h +
cmp al 9 +
ja loc_46D1D7  +
mov edx ecx +
mov eax esi +
movsx ecx al +
mov eax ebx +
call sub_46CD20  +
add esp 2Ch +
pop ebx  +
mov esi eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
add edx 1 +
cmp al 48h +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
jz loc_46D573  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_46D1D7  +
test eax eax +
js loc_46D1D7  +
mov edx offset asc_49421C +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D275  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46D170  +
test edi edi +
mov esi eax +
jz loc_46D275  +
mov edx offset asc_494220 +
mov eax ebx +
call sub_46CAD0  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_46D251  +
mov edx offset asc_494223 +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D1D9  +
lea edi [edx+1] +
mov eax ebx +
mov edx offset asc_494203 +
call sub_46CAD0  +
mov eax esi +
mov edx edi +
movsx ecx al +
mov eax ebx +
call sub_46CD20  +
mov esi eax +
jmp loc_46D1D9  +
add edx 1 +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_20] ebp +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_46D1D7  +
test eax eax +
js loc_46D1D7  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jz loc_46D2FA  +
mov edx ebp +
mov eax ebx +
call sub_46CAD0  +
mov edx offset asc_494225 +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D32C  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46D170  +
test edi edi +
mov esi eax +
jz loc_46D32C  +
mov edx offset asc_494220 +
mov eax ebx +
call sub_46CAD0  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_46D308  +
mov edx offset asc_494227 +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D1D9  +
add edx 1 +
mov eax ebx +
call sub_46CFA0  +
mov edx offset asc_494205 +
mov esi eax +
mov eax ebx +
call sub_46CAD0  +
test esi esi +
jz loc_46D1D7  +
cmp byte ptr [esi] 63h +
jnz loc_46D1D7  +
lea edx [esi+1] +
mov eax ebx +
call sub_46CFA0  +
mov edx offset aI +
mov esi eax +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D1D9  +
add edx 1 +
mov eax ebx +
call sub_46CFA0  +
mov esi eax +
jmp loc_46D1D9  +
lea esi [edx+1] +
mov eax ebx +
mov edx offset aNull +
call sub_46CAD0  +
jmp loc_46D1D9  +
mov edx offset asc_494209 +
mov eax ebx +
call sub_46CAD0  +
test edi edi +
lea esi [ebp+1] +
jz loc_46D5F1  +
movzx edx byte ptr [ebp+1] +
movzx eax dl +
test ds:byte_4922A1[eax+eax] 1 +
jz loc_46D1D7  +
movzx ecx byte ptr [ebp+2] +
movzx eax cl +
test ds:byte_4922A1[eax+eax] 1 +
jz loc_46D1D7  +
mov eax edx +
lea edx [eax-61h] +
lea ebp [edi-1] +
xor edi edi +
cmp dl 5 +
ja loc_46D481  +
sub eax 57h +
shl eax 4 +
lea edx [ecx-61h] +
cmp dl 5 +
ja loc_46D49F  +
sub ecx 57h +
or eax ecx +
lea edx [eax-9] +
cmp dl 17h +
mov byte ptr [esp+2Ch+var_12+1] al +
ja loc_46D504  +
movzx edx dl +
jmp ds:off_49434C[edx*4]  +
mov edx offset asc_49420B +
mov eax ebx +
call sub_46CAD0  +
add esi 2 +
cmp edi ebp +
jz loc_46D5F1  +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:byte_4922A1[edx+edx] 1 +
jz loc_46D1D7  +
movzx ecx byte ptr [esi+1] +
add edi 1 +
movzx edx cl +
test ds:byte_4922A1[edx+edx] 1 +
jz loc_46D1D7  +
lea edx [eax-61h] +
cmp dl 5 +
jbe loc_46D405  +
lea edx [eax-41h] +
cmp dl 5 +
ja loc_46D536  +
sub eax 37h +
lea edx [ecx-61h] +
shl eax 4 +
cmp dl 5 +
jbe loc_46D417  +
lea edx [ecx-41h] +
cmp dl 5 +
ja loc_46D526  +
sub ecx 37h +
jmp loc_46D41A  +
mov edx offset aR_0 +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D442  +
mov edx offset aF +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D442  +
mov edx offset aV +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D442  +
mov edx offset aN +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D442  +
mov edx offset aT +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D442  +
movzx eax al +
test ds:byte_4922A0[eax+eax] 10h +
jz loc_46D554  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12+1] +
call sub_46CCF0  +
jmp loc_46D442  +
lea edx [ecx-30h] +
xor ecx ecx +
cmp dl 9 +
cmovbe ecx edx +
jmp loc_46D41A  +
lea edx [eax-30h] +
mov eax edx +
shl eax 4 +
mov byte ptr [esp+2Ch+var_20] al +
xor eax eax +
cmp dl 9 +
movzx edx byte ptr [esp+2Ch+var_20] +
cmovbe eax edx +
jmp loc_46D40B  +
mov eax ebx +
mov edx offset asc_49419D +
call sub_46CAD0  +
mov ecx 2 +
mov edx esi +
mov eax ebx +
call sub_46CCF0  +
jmp loc_46D442  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_46D1D7  +
test eax eax +
js loc_46D1D7  +
mov edx offset asc_49421C +
mov eax ebx +
call sub_46CAD0  +
jmp loc_46D5E4  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46D170  +
mov edx (offset asc_49421C+2) +
mov esi eax +
mov eax ebx +
call sub_46CAD0  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46D170  +
test edi edi +
mov esi eax +
jz loc_46D5E4  +
mov edx offset asc_494220 +
mov eax ebx +
call sub_46CAD0  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_46D5A0  +
jmp loc_46D27D  +
mov edx offset asc_494209 +
mov eax ebx +
call sub_46CAD0  +
cmp byte ptr [esp+2Ch+var_12] 61h +
jz loc_46D1D9  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12] +
call sub_46CCF0  +
jmp loc_46D1D9  +
***
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_46D696  +
movzx ecx byte ptr [edx] +
mov esi eax +
test cl cl +
jz loc_46D696  +
cmp cl 4Fh +
jz loc_46D6A0  +
jle loc_46D675  +
cmp cl 78h +
nop   +
jz loc_46D660  +
cmp cl 79h +
jnz loc_46D6B7  +
mov eax esi +
mov edx offset aImmutable_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
mov edx offset aConst_2 +
call sub_46CAD0  +
add esp 4 +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
retn   +
cmp cl 4Eh +
jnz loc_46D6B7  +
cmp byte ptr [ebx+1] 67h +
jnz loc_46D696  +
mov edx offset aInout +
mov eax esi +
add ebx 2 +
call sub_46CAD0  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_46D634  +
xor eax eax +
jmp loc_46D656  +
add ebx 1 +
mov edx offset aShared_0 +
mov eax esi +
call sub_46CAD0  +
test ebx ebx +
jnz loc_46D68F  +
xor eax eax +
jmp loc_46D656  +
add esp 4 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
jz loc_46D6E8  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_46D6E8  +
sub edx 41h +
cmp dl 39h +
ja loc_46D6E8  +
movzx edx dl +
mov esi eax +
jmp ds:off_4944AC[edx*4]  +
xor eax eax +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 69h +
jz loc_46DB8C  +
cmp al 6Bh +
jnz loc_46D6E8  +
mov eax esi +
mov edx offset aUcent +
call sub_46CAD0  +
lea eax [ebx+2] +
jmp loc_46D6F0  +
add ebx 1 +
mov edx offset aImmutable +
mov eax esi +
call sub_46CAD0  +
mov edx ebx +
mov eax esi +
call sub_46D6C0  +
mov edx offset asc_494227 +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edx offset aConst_1 +
jmp loc_46D728  +
mov edx offset aDchar +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aVoid_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aWchar +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aUshort +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aShort_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aCdouble +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aCfloat +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aIdouble +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aIfloat +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aNone +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aUlong +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aLong_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aUint +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aIreal +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aInt_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aUbyte +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aByte +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aFloat_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aReal +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aDouble_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aCreal +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aBool_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
mov edx offset aChar_0 +
call sub_46CAD0  +
lea eax [ebx+1] +
jmp loc_46D6F0  +
lea edx [ebx+1] +
call sub_46D6C0  +
mov edx offset asc_4943FB +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
mov eax ebx +
jmp loc_46D6F0  +
add ebx 1 +
mov edx offset aShared +
jmp loc_46D728  +
movzx edx byte ptr [ebx+1] +
cmp dl 67h +
jz loc_46DBDC  +
xor eax eax +
cmp dl 68h +
jnz loc_46D6F0  +
add ebx 2 +
mov edx offset a__vector_0 +
jmp loc_46D728  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_46D6C0  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_46DBC0  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_46D6C0  +
mov edx offset asc_49421C +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_46D9C5  +
mov ecx edi +
mov eax esi +
call sub_46CCF0  +
mov edx offset asc_494223 +
mov eax esi +
call sub_46CAD0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_46D746  +
mov [esp+2Ch+var_2C] edx +
call free  +
mov eax ebx +
jmp loc_46D748  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_46D620  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_46DBA0  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_46DD60  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_46DA54  +
mov ecx edi +
mov eax esi +
call sub_46CCF0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jnz loc_46D9DD  +
mov eax ebx +
jmp loc_46D748  +
lea edx [ebx+1] +
mov ecx 2 +
call sub_46E3B0  +
jmp loc_46D6F0  +
add ebx 1 +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
call strtol  +
mov edi [esp+2Ch+var_18] +
test edi edi +
mov ebx eax +
jz loc_46D6E8  +
test eax eax +
js loc_46D6E8  +
mov edx offset aTuple +
mov eax esi +
call sub_46CAD0  +
jmp loc_46DACC  +
mov edx edi +
mov eax esi +
call sub_46D6C0  +
test ebx ebx +
mov edi eax +
jz loc_46DACC  +
mov edx offset asc_494220 +
mov eax esi +
call sub_46CAD0  +
sub ebx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_46DAB1  +
mov eax esi +
mov edx offset asc_494227 +
call sub_46CAD0  +
mov eax edi +
jmp loc_46D6F0  +
lea edx [ebx+1] +
call sub_46D6C0  +
mov edx offset asc_4943F8 +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
mov eax ebx +
jmp loc_46D6F0  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
mov edx edi +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_46DBE9  +
nop   +
lea esi [esi+0] +
mov ebp edx +
add edx 1 +
movzx eax byte ptr [edx] +
sub ebp ebx +
test ds:byte_4922A0[eax+eax] 4 +
jnz loc_46DB20  +
mov eax esi +
call sub_46D6C0  +
mov edx offset asc_49421C +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
test ebp ebp +
jz loc_46DB58  +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_46CCF0  +
mov eax esi +
mov edx offset asc_494223 +
call sub_46CAD0  +
mov eax ebx +
jmp loc_46D6F0  +
mov edx ebx +
call sub_46DD60  +
mov edx offset aFunction +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
mov eax ebx +
jmp loc_46D6F0  +
mov eax esi +
mov edx offset aCent +
call sub_46CAD0  +
lea eax [ebx+2] +
jmp loc_46D6F0  +
mov edx eax +
mov eax esi +
call sub_46DD60  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
mov edx [esp+2Ch+var_18] +
jmp loc_46DA54  +
mov edx eax +
mov eax esi +
call sub_46D6C0  +
mov edx offset asc_49421C +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
jmp loc_46D9C5  +
add ebx 2 +
mov edx offset aInout_0 +
jmp loc_46D728  +
mov eax esi +
call sub_46D6C0  +
mov edx offset asc_49421C +
mov ebx eax +
mov eax esi +
call sub_46CAD0  +
jmp loc_46DB58  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0Ch +
test edx edx +
jz loc_46DD50  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_46DCEC  +
mov esi eax +
xor edi edi +
cmp dl 59h +
jz loc_46DCA2  +
cmp dl 5Ah +
jz loc_46DC97  +
cmp dl 58h +
jz loc_46DC80  +
test edi edi +
jnz loc_46DCF0  +
movzx eax byte ptr [ebx] +
cmp al 4Dh +
jz loc_46DD32  +
cmp al 4Eh +
jz loc_46DD01  +
cmp al 4Bh +
jz loc_46DCC0  +
cmp al 4Ch +
jz loc_46DD21  +
cmp al 4Ah +
jnz loc_46DCCF  +
mov edx offset aOut +
mov eax esi +
add ebx 1 +
call sub_46CAD0  +
jmp loc_46DCCF  +
mov eax esi +
mov edx offset unk_494594 +
call sub_46CAD0  +
lea eax [ebx+1] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset a____1 +
call sub_46CAD0  +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aRef +
mov eax esi +
add ebx 1 +
call sub_46CAD0  +
mov edx ebx +
mov eax esi +
call sub_46D6C0  +
test eax eax +
mov ebx eax +
jz loc_46DD50  +
movzx edx byte ptr [eax] +
add edi 1 +
test dl dl +
jnz loc_46DC30  +
mov eax ebx +
jmp loc_46DC8F  +
mov edx offset asc_494220 +
mov eax esi +
call sub_46CAD0  +
jmp loc_46DC47  +
cmp byte ptr [ebx+1] 6Bh +
jnz loc_46DCCF  +
mov eax esi +
mov edx offset aReturn +
lea ebp [ebx+2] +
call sub_46CAD0  +
movzx eax byte ptr [ebx+2] +
mov ebx ebp +
jmp loc_46DC5A  +
mov edx offset aLazy +
mov eax esi +
add ebx 1 +
call sub_46CAD0  +
jmp loc_46DCCF  +
mov eax esi +
mov edx offset aScope +
lea ebp [ebx+1] +
call sub_46CAD0  +
movzx eax byte ptr [ebx+1] +
mov ebx ebp +
jmp loc_46DC52  +
xor eax eax +
jmp loc_46DC8F  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
test edx edx +
jz loc_46DEAC  +
cmp byte ptr [edx] 0 +
jz loc_46DEAC  +
mov esi eax +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_18] 0 +
call sub_46CB10  +
mov edx eax +
lea eax [esp+4Ch+var_30] +
call sub_46CBA0  +
mov ecx [esp+4Ch+var_2C] +
mov ebp [esp+4Ch+var_30] +
mov edi ecx +
sub edi ebp +
cmp ebp ecx +
mov edx eax +
cmovz edi ebx +
lea eax [esp+4Ch+var_24] +
call sub_46DC10  +
mov ecx [esp+4Ch+var_20] +
mov ebp [esp+4Ch+var_24] +
mov edx ecx +
sub edx ebp +
cmp ebp ecx +
cmovnz ebx edx +
mov edx eax +
lea eax [esp+4Ch+var_18] +
mov ebp ebx +
call sub_46D6C0  +
mov edx [esp+4Ch+var_18] +
mov ecx [esp+4Ch+var_14] +
cmp edx ecx +
mov ebx eax +
jz loc_46DE24  +
sub ecx edx +
jnz loc_46DEB6  +
mov edx offset asc_494225 +
mov eax esi +
call sub_46CAD0  +
test ebp ebp +
mov edx [esp+4Ch+var_24] +
jnz loc_46DED4  +
mov edx offset asc_4945B0 +
mov eax esi +
call sub_46CAD0  +
test edi edi +
mov edx [esp+4Ch+var_30] +
jnz loc_46DEC2  +
test edx edx +
jz loc_46DE74  +
mov [esp+4Ch+var_4C] edx +
call free  +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] 0 +
mov eax [esp+4Ch+var_24] +
test eax eax +
jz loc_46DE9C  +
mov [esp+4Ch+var_4C] eax +
call free  +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_24] 0 +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_46DEAC  +
mov [esp+4Ch+var_4C] eax +
call free  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_46CCF0  +
jmp loc_46DE24  +
mov ecx edi +
mov eax esi +
call sub_46CCF0  +
mov edx [esp+4Ch+var_30] +
jmp loc_46DE50  +
mov ecx ebp +
mov eax esi +
call sub_46CCF0  +
jmp loc_46DE3C  +
***
push esi  +
push ebx  +
sub esp 3Ch +
test edx edx +
mov [esp+3Ch+var_28] eax +
jz loc_46E004  +
cmp byte ptr [edx] 0 +
jz loc_46E004  +
lea eax [esp+3Ch+var_1C] +
mov esi ecx +
mov [esp+3Ch+var_34] 0Ah +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call strtol  +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
mov [esp+3Ch+var_24] eax +
jz loc_46E004  +
test eax eax +
jle loc_46E004  +
cmp esi 4 +
jz loc_46E027  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov edi [esp+3Ch+var_24] +
cmp eax edi +
jb loc_46E004  +
cmp edi 4 +
jle loc_46E010  +
mov edi offset a__t_0 +
mov ecx 3 +
mov esi ebx +
cmps   +
jnz loc_46E010  +
movzx eax byte ptr [ebx+3] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jz loc_46E004  +
cmp al 30h +
jz loc_46E004  +
mov esi [esp+3Ch+var_28] +
lea edx [ebx+3] +
mov ecx 3 +
mov eax esi +
call sub_46DEF0  +
mov edx offset asc_4945BA +
mov edi eax +
mov eax esi +
call sub_46CAD0  +
test edi edi +
jz loc_46DFF6  +
movzx eax byte ptr [edi] +
test al al +
jz loc_46E289  +
xor esi esi +
cmp al 5Ah +
jz loc_46E3A3  +
test esi esi +
jnz loc_46E237  +
movzx eax byte ptr [edi] +
cmp al 48h +
jz loc_46E250  +
cmp al 54h +
jz loc_46E320  +
cmp al 56h +
jz loc_46E2B0  +
cmp al 53h +
lea esi [esi+0] +
jz loc_46E260  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_494227 +
call sub_46CAD0  +
xor esi esi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_24] +
sub eax 6 +
cmp eax 6 +
ja loc_46E120  +
jmp ds:off_494664[eax*4]  +
mov eax [esp+3Ch+var_28] +
xor edi edi +
mov ebp [esp+3Ch+var_24] +
mov edx [eax] +
mov eax [eax+4] +
mov ecx eax +
sub ecx edx +
cmp edx eax +
cmovz ecx edi +
mov edx ebx +
mov [esp+3Ch+var_20] ecx +
jmp loc_46E0BA  +
mov [esp+3Ch+var_1C] 0 +
movzx eax byte ptr [edx] +
mov ebp [esp+3Ch+var_24] +
test ds:byte_4922A0[eax+eax] 4 +
jnz loc_46E0CD  +
mov edi offset a_d +
mov esi edx +
mov ecx 2 +
cmps   +
jz loc_46E0F0  +
mov eax edx +
sub eax ebx +
cmp eax ebp +
jz loc_46E230  +
mov eax 66666667h +
imul  ebp +
mov eax [esp+3Ch+var_28] +
sar ebp 1Fh +
sar edx 2 +
mov ecx [eax+4] +
sub edx ebp +
mov ebp edx +
mov edx [eax] +
xor eax eax +
mov esi ecx +
sub esi edx +
cmp edx ecx +
cmovnz eax esi +
cmp [esp+3Ch+var_20] eax +
js loc_46E0E3  +
lea edx [ebx-1] +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
jz loc_46E004  +
test ebp ebp +
jz loc_46E047  +
movzx eax byte ptr [edx] +
mov ebx edx +
test ds:byte_4922A0[eax+eax] 4 +
jz loc_46E060  +
mov eax [esp+3Ch+var_28] +
mov ecx 3 +
call sub_46E3B0  +
mov edx eax +
test edx edx +
jnz loc_46E074  +
jmp loc_46E080  +
mov eax [esp+3Ch+var_28] +
add edx [esp+3Ch+var_20] +
mov [eax+4] edx +
jmp loc_46E0AB  +
mov eax [esp+3Ch+var_28] +
add edx 2 +
mov ecx 1 +
call sub_46E3B0  +
mov edx eax +
jmp loc_46E0DD  +
mov edi offset a__postblitmfz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jz loc_46E34C  +
lea esi [esi+0] +
mov esi [esp+3Ch+var_24] +
mov edx ebx +
mov eax [esp+3Ch+var_28] +
mov ecx esi +
add esi ebx +
call sub_46CCF0  +
jmp loc_46E006  +
mov edi offset a__classz +
mov ecx 8 +
mov esi ebx +
cmps   +
jnz loc_46E120  +
mov edx offset aClassinfoFor +
jmp loc_46E1C0  +
mov ecx [esp+3Ch+var_24] +
mov eax 7 +
mov edi offset a__ctor +
mov esi ebx +
cmp ecx 7 +
cmovg ecx eax +
cmp ecx ecx +
cmps   +
jz loc_46E333  +
mov edi [esp+3Ch+var_24] +
mov esi ebx +
cmp edi 7 +
cmovle eax edi +
mov edi offset a__dtor +
mov ecx eax +
cmp eax eax +
cmps   +
jz loc_46E367  +
mov edi offset a__initz +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_46E38A  +
mov edi offset a__vtblz +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_46E120  +
mov edx offset aVtableFor_0 +
lea esi [esi+0] +
mov edi [esp+3Ch+var_28] +
mov eax edi +
call sub_46CC80  +
mov eax [edi] +
mov edx [edi+4] +
cmp eax edx +
jz loc_46E380  +
sub edx eax +
sub edx 1 +
mov edi [esp+3Ch+var_28] +
add eax edx +
mov esi [esp+3Ch+var_24] +
mov [edi+4] eax +
add esi ebx +
jmp loc_46E006  +
mov edi offset a__moduleinfoz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jnz loc_46E120  +
mov edx offset aModuleinfoFor +
jmp loc_46E1C0  +
mov edi offset a__interfacez +
mov ecx 0Ch +
mov esi ebx +
cmps   +
jnz loc_46E120  +
mov edx offset aInterfaceFor +
jmp loc_46E1C0  +
mov esi edx +
jmp loc_46E006  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_494220 +
call sub_46CAD0  +
jmp loc_46DFCF  +
movzx eax byte ptr [edi+1] +
add edi 1 +
jmp loc_46DFDA  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
mov ecx 4 +
call sub_46E3B0  +
mov edi eax +
test edi edi +
jz loc_46DFF6  +
movzx eax byte ptr [edi] +
add esi 1 +
test al al +
jnz loc_46DFBF  +
mov esi edi +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_494227 +
call sub_46CAD0  +
mov eax esi +
sub eax ebx +
cmp [esp+3Ch+var_24] eax +
mov eax 0 +
cmovnz esi eax +
jmp loc_46E006  +
lea edx [edi+1] +
movsx ebp byte ptr [edi+1] +
lea eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_18] 0 +
call sub_46D6C0  +
mov edx 1 +
mov edi eax +
lea eax [esp+3Ch+var_18] +
call sub_46CA60  +
mov eax [esp+3Ch+var_14] +
mov edx edi +
mov byte ptr [eax] 0 +
mov eax [esp+3Ch+var_28] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_46D170  +
mov edi eax +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_46E273  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_46E273  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
call sub_46D6C0  +
mov edi eax +
jmp loc_46E273  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_0 +
call sub_46CAD0  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_46E006  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThisThis +
call sub_46CAD0  +
mov eax [esp+3Ch+var_24] +
lea esi [ebx+eax+3] +
jmp loc_46E006  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_1 +
call sub_46CAD0  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_46E006  +
mov edx 0FFFFFFFFh +
jmp loc_46E1DD  +
mov eax [esp+3Ch+var_28] +
mov edx offset aInit +
call sub_46CAD0  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_46E006  +
lea esi [edi+1] +
jmp loc_46E28B  +
***
push edi  +
mov edi 1 +
push esi  +
mov esi edi +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+48h+var_3C] ecx +
jmp loc_46E414  +
movzx eax byte ptr [eax] +
cmp al 4Dh +
mov ecx eax +
jz loc_46E602  +
sub ecx 46h +
cmp cl 11h +
ja loc_46E3F0  +
mov edx 1 +
shl edx cl +
and edx 39001h +
jnz loc_46E490  +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jz loc_46E5C3  +
test esi esi +
jz loc_46E411  +
mov edx offset unk_494680 +
mov eax ebp +
call sub_46CAD0  +
add esi 1 +
mov ecx [esp+48h+var_3C] +
mov edx ebx +
mov eax ebp +
call sub_46DEF0  +
test eax eax +
mov ebx eax +
jnz loc_46E3C8  +
cmp [esp+48h+var_3C] 1 +
jbe loc_46E435  +
xor edx edx +
jmp loc_46E5D0  +
xor ebx ebx +
mov eax [ebp+4] +
xor edi edi +
mov edx [ebp+0] +
mov esi eax +
sub esi edx +
cmp edx eax +
mov edx ebx +
mov eax ebp +
cmovz esi edi +
call sub_46D6C0  +
mov ebx [ebp+4] +
mov edx [ebp+0] +
mov ecx ebx +
sub ecx edx +
cmp edx ebx +
cmovz ecx edi +
cmp esi ecx +
js loc_46E680  +
mov edx eax +
mov eax [esp+48h+var_3C] +
test eax eax +
jnz loc_46E5D0  +
test edx edx +
jz loc_46E42E  +
cmp byte ptr [edx] 0 +
jnz loc_46E42E  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Dh +
jnz loc_46E49B  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
cmp al 56h +
jz loc_46E5E0  +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
mov [esp+48h+var_30] 0 +
mov edx ebx +
xor edi edi +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
call sub_46D620  +
mov edx [ebp+4] +
mov ecx [ebp+0] +
mov ebx edx +
sub ebx ecx +
cmp ecx edx +
mov edx eax +
mov eax ebp +
cmovz ebx edi +
call sub_46CB10  +
mov edx eax +
mov eax ebp +
call sub_46CBA0  +
mov ecx [ebp+0] +
mov [esp+48h+var_38] eax +
mov eax [ebp+4] +
mov edx eax +
sub edx ecx +
cmp ecx eax +
cmovnz edi edx +
cmp ebx edi +
js loc_46E638  +
mov edx offset asc_494225 +
mov eax ebp +
call sub_46CAD0  +
mov edx [esp+48h+var_38] +
mov eax ebp +
call sub_46DC10  +
mov edx offset asc_494227 +
mov ebx eax +
mov eax ebp +
call sub_46CAD0  +
mov edx [esp+48h+var_24] +
mov ecx [esp+48h+var_20] +
cmp edx ecx +
jz loc_46E559  +
sub ecx edx +
jz loc_46E559  +
mov eax ebp +
call sub_46CCF0  +
mov edx [esp+48h+var_24] +
test edx edx +
jz loc_46E57D  +
mov [esp+48h+var_48] edx +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
test ebx ebx +
jnz loc_46E5A7  +
cmp [esp+48h+var_29] 0 +
jz loc_46E5A7  +
mov ecx [ebp+4] +
xor eax eax +
mov edx [ebp+0] +
mov ebx ecx +
sub ebx edx +
cmp edx ecx +
cmovnz eax ebx +
mov ebx [esp+48h+var_30] +
cmp [esp+48h+var_34] eax +
js loc_46E664  +
test ebx ebx +
jz loc_46E427  +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4922A0[edx+edx] 4 +
jnz loc_46E401  +
cmp [esp+48h+var_3C] 1 +
mov edx ebx +
jbe loc_46E670  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
mov edx [ebp+4] +
cmp eax edx +
jz loc_46E690  +
sub edx eax +
mov [esp+48h+var_34] edx +
setnz [esp+48h+var_29]  +
mov [esp+48h+var_30] ebx +
jmp loc_46E4B8  +
lea edi [ebx+1] +
mov [esp+48h+var_38] edi +
mov ecx edi +
xor edi edi +
movzx edx byte ptr [ecx] +
cmp dl 4Fh +
jz loc_46E630  +
jg loc_46E642  +
cmp dl 4Eh +
jnz loc_46E660  +
cmp byte ptr [ecx+1] 67h +
jnz loc_46E660  +
add ecx 2 +
movzx edx byte ptr [ecx] +
add edi 2 +
cmp dl 4Fh +
jnz loc_46E615  +
add ecx 1 +
add edi 1 +
jmp loc_46E60D  +
add ecx ebx +
mov [ebp+4] ecx +
jmp loc_46E519  +
sub edx 78h +
cmp dl 1 +
ja loc_46E660  +
mov edx 1 +
mov ecx [esp+48h+var_38] +
add ecx edi +
movzx ecx byte ptr [ecx+edx] +
jmp loc_46E3D5  +
xor edx edx +
jmp loc_46E64F  +
add edx [esp+48h+var_34] +
mov [ebp+4] edx +
jmp loc_46E5A7  +
cmp al 5Ah +
jnz loc_46E437  +
lea eax [ebx+1] +
jmp loc_46E468  +
add edx esi +
mov [ebp+4] edx +
jmp loc_46E468  +
mov [esp+48h+var_30] ebx +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
jmp loc_46E4B8  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
test edx edx +
jz loc_46E751  +
cmp byte ptr [edx] 0 +
jz loc_46E751  +
mov edi offset a_d +
mov ecx 2 +
mov esi edx +
cmps   +
jnz loc_46E751  +
mov [esp+24h+var_8] 0 +
mov edi offset a_dmain +
mov ecx 7 +
mov [esp+24h+var_C] 0 +
mov esi edx +
mov [esp+24h+var_10] 0 +
cmps   +
jz loc_46E760  +
lea edi [esp+24h+var_10] +
add edx 2 +
xor ecx ecx +
mov eax edi +
call sub_46E3B0  +
mov edx [esp+24h+var_10] +
test eax eax +
jz loc_46E745  +
mov ecx [esp+24h+var_C] +
cmp edx ecx +
jz loc_46E751  +
sub ecx edx +
test ecx ecx +
jle loc_46E751  +
mov eax edi +
mov edx 1 +
call sub_46CA60  +
mov eax [esp+24h+var_C] +
mov byte ptr [eax] 0 +
mov eax [esp+24h+var_10] +
add esp 24h +
pop esi  +
pop edi  +
retn   +
test edx edx +
jz loc_46E71A  +
mov [esp+24h+var_24] edx +
call free  +
add esp 24h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
lea edi [esp+24h+var_10] +
mov edx offset aDMain +
mov eax edi +
call sub_46CAD0  +
mov edx [esp+24h+var_10] +
mov ecx [esp+24h+var_C] +
jmp loc_46E71E  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [ebx+5] +
cmp edx eax +
jge loc_46EA2B  +
mov ecx [esp+3Ch+arg_0] +
sub eax ebx +
mov edi offset aXxxxxx +
lea ebx [ecx+eax-6] +
mov ecx 6 +
mov esi ebx +
cmps   +
jnz loc_46EA2B  +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] eax +
call sub_470EC0  +
mov eax [esp+3Ch+var_10] +
mov ebp [esp+3Ch+var_14] +
cdq   +
shld edx eax +
mov edi ebp +
shl eax 10h +
sar edi 1Fh +
xor ebp eax +
mov eax edx +
xor eax edi +
mov [esp+3Ch+var_20] eax +
call _getpid  +
xor ebp eax +
mov ecx eax +
mov eax [esp+3Ch+var_20] +
sar ecx 1Fh +
mov esi ebp +
mov ebp 7FFFh +
xor eax ecx +
mov edi eax +
add esi ds:dword_49A4A8 +
adc edi ds:dword_49A4AC +
mov ds:dword_49A4A8 esi +
mov ds:dword_49A4AC edi +
jmp loc_46E86C  +
call ds:__imp__errno  +
cmp dword ptr [eax] 11h +
jz loc_46E842  +
call ds:__imp__errno  +
cmp dword ptr [eax] 15h +
jnz loc_46EA17  +
mov esi ds:dword_49A4A8 +
mov edi ds:dword_49A4AC +
add esi 1E61h +
adc edi 0 +
sub ebp 1 +
mov ds:dword_49A4A8 esi +
mov ds:dword_49A4AC edi +
jz loc_46EA17  +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_46FE70  +
movzx eax ds:byte_4946C0[eax] +
mov [ebx] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_46FFC0  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_46FE70  +
movzx eax ds:byte_4946C0[eax] +
mov [ebx+1] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_46FFC0  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_46FE70  +
movzx eax ds:byte_4946C0[eax] +
mov [ebx+2] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_46FFC0  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_46FE70  +
movzx eax ds:byte_4946C0[eax] +
mov [ebx+3] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_46FFC0  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_46FE70  +
movzx eax ds:byte_4946C0[eax] +
mov [ebx+4] al +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
call sub_46FFC0  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_46FE70  +
movzx eax ds:byte_4946C0[eax] +
mov [ebx+5] al +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] 180h +
mov [esp+3Ch+var_38] 8502h +
mov [esp+3Ch+var_3C] eax +
call _open  +
test eax eax +
js loc_46E828  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov byte ptr [eax] 0 +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_46EA60  +
cmp eax 3 +
jz loc_46EA60  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_46F760  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_4738CC 2 +
mov eax [esp+18h+arg_4] +
jz loc_46EAAB  +
mov dword_4738CC 2 +
cmp eax 2 +
jz loc_46EAC1  +
cmp eax 1 +
jz loc_46EAF0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_49C030 +
cmp ebx offset unk_49C030 +
jz loc_46EAB5  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_46EAD8  +
call eax  +
add ebx 4 +
cmp ebx offset unk_49C030 +
jnz loc_46EAD0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_46F760  +
jmp loc_46EAB5  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_49A880 +
mov [esp+28h+var_28] eax +
call sub_46EB30  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_46EBF0  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_49A880 +
mov [esp+28h+var_28] eax +
call sub_46EB30  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_49A87C +
mov [esp+28h+var_28] eax +
call sub_46EB30  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_46EB40  +
mov ds:dword_49A880 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_46EB40  +
mov [esp+28h+var_28] 8 +
mov ds:dword_49A87C eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_46EB50  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_46EC88  +
cmp eax 0C000008Dh +
jnb loc_46ECF0  +
cmp eax 0C0000005h +
jnz loc_46ECF7  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_46ED26  +
test eax eax +
jz loc_46EC9D  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_46ECDD  +
cmp eax 0C0000094h +
jz loc_46ECB1  +
cmp eax 0C0000096h +
jz loc_46ECFE  +
cmp eax 0C0000093h +
jz loc_46ECF0  +
mov eax ds:dword_49A4D4 +
test eax eax +
jz loc_46ECE2  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_46ED56  +
test eax eax +
jz loc_46EC9D  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_46ECB3  +
cmp eax 0C000001Dh +
jnz loc_46EC9D  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_46ED40  +
test eax eax +
jz loc_46EC9D  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_46ECDD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_46ECDD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_46ECDD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_46ECDD  +
call sub_46F3C0  +
jmp loc_46ECDD  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_49A4D8 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_46EDD1  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_46EDD7  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_49A4D8 eax +
jmp loc_471200  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_46EE0D  +
mov edx ds:off_494820[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_46EEB0  +
***
push edi  +
mov eax ds:dword_49A4DC +
retn   +
***
call eax  +
mov eax off_4738C8 +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_4738C8 edx +
test eax eax +
jnz loc_46F3E0  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_4720D0 +
cmp ebx 0FFFFFFFFh +
jz loc_46F433  +
test ebx ebx +
jz loc_46F422  +
call ds:dword_4720D0[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_46F413  +
mov [esp+18h+var_18] offset dword_46F3D0 +
call sub_46EC10  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_46F439  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_4720D0[eax*4] +
test edx edx +
jnz loc_46F437  +
jmp loc_46F40F  +
***
mov eax ds:dword_49A4E8 +
test eax eax +
jz loc_46F460  +
retn   +
mov ds:dword_49A4E8 1 +
jmp sub_46F400  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_4738DC +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_46F4A2  +
not eax  +
mov dword_4738E0 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_46F510  +
mov eax esi +
not eax  +
mov dword_4738DC esi +
mov dword_4738E0 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_46F4FC  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_49A848 +
call ds:EnterCriticalSection  +
mov edi ds:dword_49A840 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_46F609  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_46F602  +
test ebx ebx +
jz loc_46F602  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_46F5E0  +
mov [esp+28h+var_28] offset unk_49A848 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_46F630  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_49A844 +
test eax eax +
jnz loc_46F650  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_46F6AC  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_49A848 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_49A840 +
mov ds:dword_49A840 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_49A848 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_46F643  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_49A844 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_46F6E0  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_49A848 +
call ds:EnterCriticalSection  +
mov edx ds:dword_49A840 +
sub esp 4 +
test edx edx +
jz loc_46F711  +
mov eax [edx] +
cmp eax ebx +
jnz loc_46F70A  +
jmp loc_46F748  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_46F728  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_46F702  +
mov dword ptr [esp] offset unk_49A848 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_49A848 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_46F721  +
***
mov eax [edx+8] +
mov ds:dword_49A840 eax +
mov eax edx +
jmp loc_46F72E  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_46F7B4  +
jb loc_46F785  +
cmp eax 3 +
jnz loc_46F77E  +
mov eax ds:dword_49A844 +
test eax eax +
jnz loc_46F7E2  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_49A844 +
test eax eax +
jnz loc_46F7F0  +
mov eax ds:dword_49A844 +
cmp eax 1 +
jnz loc_46F77E  +
mov ds:dword_49A844 0 +
mov [esp+18h+var_18] offset unk_49A848 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_46F77E  +
mov eax ds:dword_49A844 +
test eax eax +
jz loc_46F7D0  +
mov ds:dword_49A844 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_49A848 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_46F7BD  +
call sub_46F5B0  +
jmp loc_46F77E  +
call sub_46F5B0  +
jmp loc_46F78E  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_46F810  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_46F830  +
xor eax eax +
retn   +
***
jmp sub_46F800  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_46F878  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_46F86E  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_46F87A  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_46F860  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_46F8A5  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_46F8B0  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_46F800  +
test eax eax +
jz loc_46F8A5  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_46F8EA  +
jmp loc_46F8A5  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_46F910  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_46F8E0  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_46F938  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_46F800  +
test eax eax +
jz loc_46F931  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_46F840  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_46F982  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_46F800  +
test eax eax +
jz loc_46F97E  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_46F9B8  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_46F800  +
test eax eax +
jz loc_46F9B3  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_46F9B3  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_46F9F3  +
test ebx ebx +
jz loc_46FA04  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_46F9E6  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_46FA20  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_46F800  +
test eax eax +
jz loc_46FA1B  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_46FA50  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_46F800  +
test eax eax +
jz loc_46FA86  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_46F840  +
test eax eax +
jz loc_46FA90  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_46FA86  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_46FAC0  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_46F800  +
test eax eax +
jz loc_46FAB7  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_46FAB7  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_46F840  +
test eax eax +
jz loc_46FAB7  +
add esi 400000h +
mov edx esi +
jnz loc_46FB06  +
jmp loc_46FAB7  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_46FB14  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_46FB30  +
test ebx ebx +
jg loc_46FB00  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_46FB62  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_46FB4D  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov esi [esp+18h+arg_C] +
mov ebp [esp+18h+arg_8] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
mov edx ebx +
mov edi esi +
mov [esp+18h+var_18] 0 +
js loc_46FC20  +
test edi edi +
mov ecx ebp +
mov ebx esi +
js loc_46FC3A  +
mov esi edx +
mov edx ebx +
test edx edx +
mov ebp eax +
mov edi ecx +
mov ebx eax +
jnz loc_46FBC2  +
cmp ecx esi +
jbe loc_46FBE4  +
mov edx esi +
xor esi esi +
div  ecx +
mov ebx eax +
jmp loc_46FBCA  +
cmp edx esi +
jbe loc_46FC03  +
xor esi esi +
xor ebx ebx +
mov ecx [esp+18h+var_18] +
mov eax ebx +
mov edx esi +
test ecx ecx +
jz loc_46FBDC  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_46FBF3  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov esi eax +
mov eax ebx +
div  ecx +
mov ebx eax +
jmp loc_46FBCA  +
bsr ebx edx +
xor ebx 1Fh +
jnz loc_46FC50  +
cmp ecx eax +
jbe loc_46FC13  +
cmp edx esi +
jnb loc_46FBC6  +
xor esi esi +
mov ebx 1 +
jmp loc_46FBCA  +
neg eax  +
mov ecx ebp +
adc edx 0 +
mov ebx esi +
neg edx  +
test edi edi +
mov [esp+18h+var_18] 0FFFFFFFFh +
jns loc_46FBA6  +
neg ecx  +
adc ebx 0 +
not [esp+18h+var_18]  +
neg ebx  +
jmp loc_46FBA6  +
mov ecx ebx +
mov eax 20h +
sub eax ebx +
shl edx cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx edi +
shr edx cl +
mov ecx ebx +
mov [esp+18h+var_14] edx +
mov edx [esp+18h+var_10] +
shl edi cl +
or [esp+18h+var_14] edx +
mov ecx eax +
mov edx esi +
shr edx cl +
mov ecx ebx +
shl esi cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx ebp +
shr edx cl +
mov eax edx +
or eax esi +
mov esi [esp+18h+var_10] +
mov edx esi +
div  [esp+18h+var_14] +
mov esi edx +
mov [esp+18h+var_14] eax +
mul  edi +
cmp esi edx +
jb loc_46FCC0  +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_46FCAF  +
cmp esi edx +
jz loc_46FCC0  +
mov ebx [esp+18h+var_14] +
xor esi esi +
jmp loc_46FBCA  +
mov ebx [esp+18h+var_14] +
xor esi esi +
sub ebx 1 +
jmp loc_46FBCA  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
test ebx ebx +
mov ebp ebx +
mov edx eax +
mov [esp+1Ch+var_1C] 0 +
js loc_46FDA0  +
test edx edx +
mov ecx esi +
mov ebx eax +
js loc_46FD93  +
mov edx ebx +
mov eax edi +
test edx edx +
mov esi ebp +
mov [esp+1Ch+var_18] ecx +
mov ebx edi +
mov [esp+1Ch+var_14] ebp +
jnz loc_46FD30  +
cmp ecx ebp +
jbe loc_46FD76  +
mov edx ebp +
div  ecx +
mov esi edx +
mov eax esi +
xor edx edx +
jmp loc_46FD38  +
cmp edx ebp +
jbe loc_46FD50  +
mov eax edi +
mov edx ebp +
mov ecx [esp+1Ch+var_1C] +
test ecx ecx +
jz loc_46FD46  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
bsr edi edx +
mov [esp+1Ch+var_10] edi +
xor [esp+1Ch+var_10] 1Fh +
jnz loc_46FDB3  +
cmp ecx eax +
jbe loc_46FE40  +
cmp edx ebp +
jb loc_46FE40  +
mov eax ebx +
mov edx [esp+1Ch+var_14] +
jmp loc_46FD38  +
test ecx ecx +
jnz loc_46FD85  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov eax ebx +
div  ecx +
mov esi edx +
jmp loc_46FD24  +
neg ecx  +
adc ebx 0 +
neg ebx  +
jmp loc_46FD06  +
neg edi  +
adc ebp 0 +
neg ebp  +
mov [esp+1Ch+var_1C] 0FFFFFFFFh +
jmp loc_46FCFA  +
mov ebp [esp+1Ch+var_10] +
mov edi 20h +
sub edi ebp +
mov ecx ebp +
mov ebp [esp+1Ch+var_18] +
shl edx cl +
mov ecx edi +
mov ebx ebp +
shr ebx cl +
mov [esp+1Ch+var_18] ebx +
mov ebx ebp +
mov ebp [esp+1Ch+var_10] +
or [esp+1Ch+var_18] edx +
mov edx esi +
mov ecx ebp +
shl ebx cl +
mov ecx edi +
shr edx cl +
mov ecx ebp +
shl esi cl +
mov ecx edi +
mov [esp+1Ch+var_14] ebx +
mov ebx edx +
mov edx eax +
shr edx cl +
mov ecx ebp +
or edx esi +
shl eax cl +
mov ebp eax +
mov eax edx +
mov edx ebx +
div  [esp+1Ch+var_18] +
mov ebx edx +
mul  [esp+1Ch+var_14] +
cmp ebx edx +
mov esi eax +
mov ecx edx +
jb loc_46FE54  +
cmp ebp eax +
jb loc_46FE50  +
mov eax ebp +
mov ebp [esp+1Ch+var_10] +
sub eax esi +
sbb ebx ecx +
mov ecx ebp +
shr eax cl +
mov ecx edi +
mov esi eax +
mov eax ebx +
shl eax cl +
mov ecx ebp +
or esi eax +
shr ebx cl +
mov eax esi +
mov edx ebx +
jmp loc_46FD38  +
mov eax esi +
sub ebx ecx +
sbb eax edx +
mov [esp+1Ch+var_14] eax +
jmp loc_46FD6E  +
cmp ebx edx +
jnz loc_46FE16  +
mov ecx edx +
mov esi eax +
sub esi [esp+1Ch+var_14] +
sbb ecx [esp+1Ch+var_18] +
jmp loc_46FE16  +
***
push esi  +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_470010  +
cmp ecx ebp +
ja loc_470042  +
test ecx ecx +
mov ebx ecx +
jnz loc_46FFF7  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_470036  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_470052  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_4700B0  +
cmp esi ebp +
jb loc_4700B0  +
xor eax eax +
jmp loc_470005  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_4700C0  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_4700A3  +
cmp esi edx +
jz loc_4700C0  +
mov eax edi +
xor edx edx +
jmp loc_470005  +
mov eax 1 +
jmp loc_470005  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 23Ch +
mov ebx [ebp+arg_4] +
mov [esp+248h+var_248] 4000h +
mov esi [ebp+arg_0] +
call malloc  +
test ebx ebx +
mov edi eax +
jz loc_4701E0  +
cmp word ptr [ebx] 0 +
mov eax offset aUnknown +
cmovz ebx eax +
test esi esi +
jz loc_4701D3  +
cmp word ptr [esi] 0 +
mov eax offset a? +
cmovz esi eax +
lea edx [ebp+var_222] +
mov [esp+248h+var_244] edx +
mov [ebp+var_22C] edx +
mov [esp+248h+var_240] 104h +
mov [esp+248h+var_248] 0 +
call ds:GetModuleFileNameW  +
mov edx [ebp+var_22C] +
sub esp 0Ch +
test eax eax +
jz loc_4701B8  +
mov eax [ebp+arg_8] +
mov [esp+248h+var_230] esi +
mov [esp+248h+var_238] ebx +
mov [esp+248h+var_23C] edx +
mov [esp+248h+var_234] eax +
mov [esp+248h+var_240] offset aAssertionFaile +
mov [esp+248h+var_244] 1FFFh +
mov [esp+248h+var_248] edi +
call _snwprintf  +
mov eax ds:dword_49A4C4 +
test eax eax +
jz loc_470207  +
mov [esp+248h+var_23C] 12012h +
mov [esp+248h+var_240] offset aMingwRuntimeAs +
mov [esp+248h+var_244] edi +
mov [esp+248h+var_248] 0 +
call ds:MessageBoxW  +
sub esp 10h +
cmp eax 3 +
jz loc_4701EF  +
cmp eax 5 +
jnz loc_4701EA  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+248h+var_248] edx +
mov [esp+248h+var_244] offset aUnknown +
call wcscpy  +
mov edx [ebp+var_22C] +
jmp loc_47014A  +
mov esi offset a? +
jmp loc_470118  +
mov ebx offset aUnknown +
jmp loc_470104  +
call abort  +
mov [esp+248h+var_248] 16h +
call raise  +
mov [esp+248h+var_248] 3 +
call _exit  +
mov eax ds:_iob +
mov [esp+248h+var_240] edi +
mov [esp+248h+var_244] offset aWs +
add eax 40h +
mov [esp+248h+var_248] eax +
call fwprintf  +
call abort  +
nop   +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+274h+var_244] +
mov eax [esp+274h+var_23C] +
mov edi [esp+274h+var_240] +
mov [esp+274h+var_274] ebp +
mov [esp+274h+var_268] eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+274h+var_274] eax +
call malloc  +
mov [esp+274h+var_274] edi +
mov esi eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+274h+var_274] eax +
call malloc  +
movzx ecx byte ptr [ebp+0] +
test cl cl +
jz loc_4702F2  +
xor ebx ebx +
xor edx edx +
lea esi [esi+0] +
add edx 1 +
mov [esi+ebx*2] cx +
movzx ecx byte ptr [ebp+edx+0] +
mov ebx edx +
test cl cl +
jnz loc_470280  +
add edx edx +
xor ebx ebx +
mov [esi+edx] bx +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_4702F6  +
xor ebx ebx +
xor edx edx +
add edx 1 +
mov [eax+ebx*2] cx +
movzx ecx byte ptr [edi+edx] +
mov ebx edx +
test cl cl +
jnz loc_4702A5  +
add edx edx +
mov edi [esp+274h+var_268] +
xor ecx ecx +
mov [eax+edx] cx +
mov [esp+274h+var_270] eax +
mov [esp+274h+var_274] esi +
mov [esp+274h+var_26C] edi +
mov [esp+274h+var_268] eax +
call sub_4700D0  +
mov [esp+274h+var_274] esi +
call free  +
mov eax [esp+274h+var_268] +
mov [esp+274h+var_244] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
xor edx edx +
jmp loc_470294  +
xor edx edx +
jmp loc_4702B8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
lea edi [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
mov [esp+1Ch+var_14] esi +
call _vsnprintf  +
test eax eax +
mov ebx eax +
js loc_470374  +
lea ebp [eax+1] +
mov [esp+1Ch+var_1C] ebp +
call malloc  +
mov edx [esp+1Ch+arg_0] +
test eax eax +
mov [edx] eax +
jz loc_470380  +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call _vsnprintf  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov byte ptr [eax+ebx] 0 +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 0FFFFFFFFh +
jmp loc_470374  +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_4703B8  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_4703AB  +
jmp loc_4703B8  +
cmp byte ptr [edx] 0 +
jz loc_4703B6  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_4703A6  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call fgetpos  +
test eax eax +
jnz loc_4703E7  +
mov eax [esp+2Ch+var_14] +
mov edx [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4703E3  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov edx eax +
and edx 3 +
cmp edx 2 +
jz loc_470430  +
xor eax eax +
mov [ebp+0] ebx +
mov dword ptr [ebp+4] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax 108h +
jz loc_47041B  +
mov edx [ebp+0] +
sub edx ebx +
mov edi edx +
sar edi 1Fh +
cmp edi 0 +
jl loc_47041B  +
jle loc_470490  +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] edx +
call _fileno  +
mov edx [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call _write  +
mov edx [esp+1Ch+var_10] +
mov ebx eax +
xor edx eax +
sar ebx 1Fh +
mov ecx ebx +
xor ecx edi +
or ecx edx +
jnz loc_470497  +
mov eax [ebp+0Ch] +
test al 80h +
jz loc_470488  +
and eax 0FFFFFFFDh +
mov [ebp+0Ch] eax +
mov ebx [ebp+8] +
xor eax eax +
jmp loc_47041D  +
cmp edx 0 +
jbe loc_47041B  +
jmp loc_470448  +
or dword ptr [ebp+0Ch] 20h +
mov eax 0FFFFFFFFh +
mov ebx [ebp+8] +
jmp loc_47041D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
cmp eax 1 +
jz loc_4704F5  +
cmp eax 2 +
jz loc_470513  +
test eax eax +
jnz loc_470540  +
mov [esp+2Ch+var_14] esi +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_10] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fsetpos  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fgetpos  +
test eax eax +
jnz loc_470552  +
add [esp+2Ch+var_14] esi +
adc [esp+2Ch+var_10] edi +
jmp loc_4704E1  +
mov [esp+2Ch+var_2C] ebx +
lea ebp [esp+2Ch+var_14] +
call fflush  +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_2C] eax +
call _filelengthi64  +
add eax esi +
adc edx edi +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] edx +
jmp loc_4704E1  +
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_4704ED  +
mov eax 0FFFFFFFFh +
jmp loc_4704ED  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
call _errno  +
mov dword ptr [eax] 0 +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+4] +
test eax eax +
js loc_4706D0  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
test edx edx +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_18] edx +
js loc_470711  +
mov edx [ebx+0Ch] +
test edx 108h +
jz loc_4706B0  +
mov ecx [ebx] +
mov eax [ebx+8] +
mov esi ecx +
sub esi eax +
test dl 3 +
mov [esp+2Ch+var_10] esi +
jnz loc_470657  +
test dl 80h +
jz loc_4707E2  +
mov esi [esp+2Ch+var_10] +
mov ebp [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_1C] +
mov eax ebp +
or eax edi +
jz loc_4706E0  +
and edx 1 +
jz loc_4706F0  +
mov edi [ebx+4] +
test edi edi +
jz loc_470704  +
mov eax [esp+2Ch+var_14] +
add edi [esp+2Ch+var_10] +
mov ecx eax +
and eax 1Fh +
lea eax [eax+eax*4] +
shl eax 3 +
mov edx eax +
mov ebp eax +
mov eax ds:__pioinfo +
sar ecx 5 +
mov eax [eax+ecx*4] +
cmp byte ptr [eax+edx+4] 0 +
js loc_470720  +
mov ecx edi +
xor ebx ebx +
mov eax esi +
xor edx edx +
sub [esp+2Ch+var_1C] ecx +
sbb [esp+2Ch+var_18] ebx +
jmp loc_4706F4  +
mov esi [esp+2Ch+var_14] +
mov edi esi +
and esi 1Fh +
sar edi 5 +
mov ebp edi +
lea edi [esi+esi*4] +
mov esi ds:__pioinfo +
shl edi 3 +
add edi [esi+ebp*4] +
mov esi [esp+2Ch+var_10] +
cmp byte ptr [edi+4] 0 +
jns loc_4705EF  +
cmp ecx eax +
jbe loc_4705EB  +
mov ebp [esp+2Ch+var_14] +
mov edi ecx +
xor ecx ecx +
cmp byte ptr [eax] 0Ah +
setz cl  +
add eax 1 +
add esi ecx +
cmp eax edi +
jnz loc_470690  +
mov [esp+2Ch+var_14] ebp +
jmp loc_4705EF  +
mov eax [ebx+4] +
mov edi [esp+2Ch+var_1C] +
mov ebp [esp+2Ch+var_18] +
cdq   +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edx ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+4] 0 +
jmp loc_47058D  +
add esp 2Ch +
mov eax esi +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
xor edx edx +
add eax [esp+2Ch+var_1C] +
adc edx [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor edx edx +
xor ecx ecx +
xor ebx ebx +
jmp loc_47064A  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4706C4  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 2 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] ecx +
call _lseeki64  +
mov ecx [esp+2Ch+var_10] +
xor edx [esp+2Ch+var_18] +
xor eax [esp+2Ch+var_1C] +
or edx eax +
jnz loc_470785  +
mov eax [ebx+8] +
lea ecx [eax+edi] +
cmp eax ecx +
jnb loc_470773  +
xor edx edx +
cmp byte ptr [eax] 0Ah +
setz dl  +
add eax 1 +
add edi edx +
cmp eax ecx +
jnz loc_470762  +
test byte ptr [ebx+0Dh] 20h +
jz loc_470642  +
add edi 1 +
jmp loc_470642  +
mov eax [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
cmp edi 200h +
mov ecx [esp+2Ch+var_10] +
ja loc_4707CB  +
mov eax [ebx+0Ch] +
mov edi 200h +
and eax 408h +
cmp eax 8 +
jz loc_4707CE  +
mov edi [ebx+18h] +
mov eax ds:__pioinfo +
mov eax [eax+ecx*4] +
test byte ptr [eax+ebp+4] 4 +
jnz loc_47077D  +
jmp loc_470642  +
call _errno  +
mov edx 0FFFFFFFFh +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_4706C4  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
mov ebp [esp+3Ch] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4708A2  +
cmp ebp 2 +
ja loc_4708A2  +
and dword ptr [ebx+0Ch] 0FFFFFFEFh +
cmp ebp 1 +
jz loc_470891  +
mov [esp] ebx +
call sub_470400  +
mov eax [ebx+0Ch] +
test al 80h +
jnz loc_470880  +
and eax 409h +
cmp eax 9 +
jz loc_470888  +
mov [esp] ebx +
call _fileno  +
mov [esp+0Ch] ebp +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] eax +
call _lseeki64  +
and eax edx +
cmp eax 0FFFFFFFFh +
setz al  +
movzx eax al +
neg eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and eax 0FFFFFFFCh +
mov [ebx+0Ch] eax +
jmp loc_47084D  +
***
mov dword ptr [ebx+18h] 200h +
jmp loc_47084D  +
***
mov [esp] ebx +
call sub_470560  +
add esi eax +
adc edi edx +
xor bp bp +
jmp loc_470834  +
***
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_470876  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4 +
mov esi [esp+10h] +
call __doserrno  +
mov [eax] esi +
jmp loc_4708E1  +
add ebx 1 +
cmp ds:dword_494A24[ebx*8] 0FFFFFFFFh +
jz loc_470900  +
cmp ds:dword_494A20[ebx*8] esi +
jnz loc_4708D4  +
call _errno  +
mov edx ds:dword_494A24[ebx*8] +
mov [eax] edx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
lea eax [esi-13h] +
cmp eax 11h +
jbe loc_470935  +
sub esi 0BCh +
cmp esi 0Eh +
jbe loc_470924  +
call _errno  +
mov dword ptr [eax] 16h +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 8 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Dh +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470B1E  +
cmp byte ptr [ebx] 0 +
jz loc_470AE8  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_470B00  +
test al 10h +
jz loc_470AE8  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4709D4  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_470B0F  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_470A63  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_470A63  +
cmp al 5Ch +
jz loc_470A63  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_470A65  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_470AE0  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_470AE0  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_470AE0  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470C32  +
mov eax [ebx+228h] +
test eax eax +
js loc_470C1D  +
jz loc_470BC0  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_470BF0  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_470C1D  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_470C13  +
mov dword ptr [ebx+228h] 1 +
jmp loc_470B89  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_470C25  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_470BFB  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_470BB3  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470C8F  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_470C7F  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_470C89  +
***
jmp sub_470CB0  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470CF3  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_470CDA  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_470CEE  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470D22  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_470D1D  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470DCD  +
cmp esi 0FFFFFFFFh +
jl loc_470DC0  +
jz loc_470D90  +
mov [esp] ebx +
call sub_470CB0  +
nop   +
lea esi [esi+0] +
jmp loc_470D7E  +
mov [esp] ebx +
call sub_470B30  +
test eax eax +
jz loc_470DB7  +
cmp esi [ebx+228h] +
jg loc_470D72  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_470DA3  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_470DB7  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_470DB7  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
test esi esi +
jz loc_470E25  +
lea eax [ebp+var_C4] +
mov [esp+0E8h+var_E8] eax +
call ds:GetTimeZoneInformation  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_470EA0  +
mov edx [ebp+var_C4] +
cmp eax 2 +
setz al  +
movzx eax al +
mov [esi+4] eax +
mov [esi] edx +
test ebx ebx +
jz loc_470E93  +
lea eax [ebp+var_D0] +
mov [esp+0E8h+var_E8] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_D0] +
mov edi [ebp+var_CC] +
sub esp 4 +
add esi 2AC18000h +
adc edi 0FE624E21h +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_46FFC0  +
mov [ebx] eax +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_46FE70  +
imul eax eax +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
jmp loc_470E25  +
***
sub esp 24h +
mov eax [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
lea eax [esp+24h+var_C] +
mov [esp+24h+var_24] eax +
call sub_470DE0  +
test eax eax +
mov ecx eax +
jnz loc_470F10  +
mov eax [esp+24h+var_C] +
mov edx 10624DD3h +
mov esi [esp+24h+var_8] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFFFh +
jmp loc_470F01  +
***
push esi  +
push ebx  +
sub esp 24h +
mov eax [esp+34h] +
mov ebx [esp+30h] +
mov [esp+4] eax +
lea eax [esp+18h] +
mov [esp] eax +
call sub_470DE0  +
test eax eax +
mov ecx eax +
jnz loc_470F70  +
mov eax [esp+18h] +
mov edx 10624DD3h +
mov esi [esp+1Ch] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx 0FFFFFFFFh +
jmp loc_470F61  +
***
retn   +
***
mov eax [esp+arg_0] +
xchg eax ds:dword_49A864 +
retn   +
***
jmp ds:__setusermatherr  +
***
push edi  +
push esi  +
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_46EC10  +
leave   +
retn   +
***
