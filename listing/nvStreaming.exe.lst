mov eax offset unk_4202D8 +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push 1  +
call sub_406028  +
add esp 4 +
lea ecx [ebp+arg_4] +
push ecx  +
push 0  +
push esi  +
push eax  +
call sub_401000  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_4073F8  +
add esp 18h +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 3A4h +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp-4] eax +
call sub_4074A3  +
cmp dword ptr [eax] 6 +
jge loc_40107F  +
push offset aUsageNvstreami  +
call sub_401010  +
add esp 4 +
mov eax 1 +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebx  +
push esi  +
push edi  +
call sub_401610  +
mov [ebp-3A4h] eax +
call sub_4074A9  +
mov ecx [eax] +
push dword ptr [ecx+4]  +
call sub_4077A9  +
mov edi eax +
mov [ebp-388h] edi +
call sub_4074A9  +
mov ecx [eax] +
push dword ptr [ecx+8]  +
call sub_4077A9  +
mov [ebp-390h] eax +
call sub_4074A9  +
mov ecx [eax] +
push dword ptr [ecx+0Ch]  +
call sub_4077A9  +
mov [ebp-38Ch] eax +
call sub_4074A9  +
mov ecx [eax] +
push dword ptr [ecx+10h]  +
call sub_4077A9  +
mov ebx eax +
mov dword ptr [ebp-380h] 114h +
add esp 10h +
lea eax [ebp-380h] +
not ebx  +
and ebx 1 +
mov [ebp-384h] ebx +
push eax  +
call ds:GetVersionExW  +
test eax eax +
jz loc_401270  +
cmp dword ptr [ebp-370h] 2 +
jz loc_401127  +
push offset aNotSupported  +
call sub_401010  +
add esp 4 +
jmp loc_401270  +
push offset aKernel32_dll  +
call ds:LoadLibraryA  +
mov ebx eax +
mov [ebp-3A0h] ebx +
test ebx ebx +
jnz loc_401150  +
push offset aKernel32_dllNo  +
call sub_401010  +
add esp 4 +
jmp loc_40126A  +
push offset aCreatetoolhelp  +
push ebx  +
call ds:GetProcAddress  +
push offset aProcess32first  +
push ebx  +
mov esi eax +
call ds:GetProcAddress  +
push offset aProcess32next  +
push ebx  +
mov edi eax +
call ds:GetProcAddress  +
mov [ebp-394h] eax +
test eax eax +
jz loc_40125D  +
test edi edi +
jz loc_40125D  +
test esi esi +
jz loc_40125D  +
push 0  +
push 2  +
mov ecx esi +
call ds:off_415148  +
call esi  +
mov esi eax +
mov [ebp-398h] esi +
cmp esi 0FFFFFFFFh +
jnz loc_4011C3  +
push offset aToolhelpSnapsh  +
call sub_401010  +
add esp 4 +
jmp loc_40125D  +
push 22Ch  +
lea eax [ebp-26Ch] +
push 0  +
push eax  +
call sub_404CB0  +
add esp 0Ch +
mov dword ptr [ebp-26Ch] 22Ch +
lea eax [ebp-26Ch] +
mov ecx edi +
push eax  +
push esi  +
call ds:off_415148  +
call edi  +
mov esi eax +
xor edi edi +
call ds:GetCurrentProcessId  +
mov [ebp-39Ch] eax +
test esi esi +
jz loc_40125D  +
mov esi [ebp-394h] +
mov ebx [ebp-398h] +
cmp eax [ebp-264h] +
mov dword ptr [ebp-26Ch] 22Ch +
cmovz edi [ebp-254h] +
test edi edi +
jnz loc_401257  +
lea eax [ebp-26Ch] +
mov ecx esi +
push eax  +
push ebx  +
call ds:off_415148  +
call esi  +
test eax eax +
mov eax [ebp-39Ch] +
jnz loc_401220  +
mov ebx [ebp-3A0h] +
push ebx  +
call ds:FreeLibrary  +
mov edi [ebp-388h] +
mov ebx [ebp-384h] +
cmp dword ptr [ebp-3A4h] 0 +
mov esi [ebp-254h] +
jnz loc_401308  +
push 38h  +
lea eax [ebp-3Ch] +
push 0  +
push eax  +
call sub_404CB0  +
mov eax [ebp-390h] +
mov [ebp-34h] eax +
mov eax [ebp-38Ch] +
mov dword ptr [ebp-40h] 1003Ch +
mov [ebp-3Ch] esi +
mov [ebp-38h] edi +
mov dword ptr [ebp-24h] 0 +
mov [ebp-30h] eax +
mov [ebp-28h] ebx +
call sub_4074A9  +
mov eax [eax] +
push dword ptr [eax+14h]  +
call sub_4077A9  +
dec eax  +
neg eax  +
sbb eax eax +
neg eax  +
mov [ebp-2Ch] eax +
lea eax [ebp-40h] +
push eax  +
call sub_4016A0  +
add esp 14h +
push ebx  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-38Ch]  +
push esi  +
push dword ptr [ebp-390h]  +
push edi  +
test eax eax +
jnz loc_4012FB  +
push offset aNvapi_sys_sets  +
jmp loc_401300  +
push offset aNvapi_sys_se_0  +
call sub_401010  +
add esp 1Ch +
mov ecx [ebp-4] +
xor eax eax +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
lea eax [esi+4] +
mov dword ptr [esi] offset off_415294 +
push eax  +
call ds:DeleteCriticalSection  +
test [esp+arg_0] 1 +
jz loc_401345  +
push 1Ch  +
push esi  +
call sub_403FAA  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_41F4B8 +
cmp eax [ecx+4] +
jg loc_401372  +
mov eax offset dword_41F49C +
retn   +
push offset dword_41F4B8  +
call sub_40439B  +
add esp 4 +
cmp dword_41F4B8 0FFFFFFFFh +
jnz loc_40136C  +
push offset CriticalSection  +
mov dword_41F49C offset off_415294 +
call ds:InitializeCriticalSection  +
push offset loc_414130  +
call sub_40423B  +
push offset dword_41F4B8  +
call sub_40435C  +
add esp 8 +
jmp loc_40136C  +
***
mov eax ebp +
push edi  +
sub eax 0 +
jz loc_4013E1  +
sub eax 1 +
jz loc_4013DA  +
pop edi  +
mov eax 0FFFFFFFDh +
pop ebp  +
retn   +
mov edi 1 +
jmp loc_4013E3  +
xor edi edi +
push ebx  +
push esi  +
mov esi [esp+0Ch+arg_0] +
cmp dword_41D830[esi*4] 0 +
jnz loc_401468  +
mov ecx offset aNvpowerapi_dll +
test esi esi +
mov eax offset aNvapi_dll +
cmovnz eax ecx +
push 800h  +
push eax  +
call sub_403C70  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_40141E  +
pop esi  +
lea eax [ebx-2] +
pop ebx  +
pop edi  +
pop ebp  +
retn   +
push ebp  +
push esi  +
push ebx  +
call sub_401470  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jz loc_40143D  +
push ebx  +
call ds:FreeLibrary  +
pop esi  +
pop ebx  +
pop edi  +
mov eax ebp +
pop ebp  +
retn   +
lea eax [edi+edi*2] +
mov dword_41D830[esi*4] ebx +
mov dword_41D854[esi*4] 1 +
mov dword_41D808[eax*4] 1 +
mov dword_41D800[eax*4] 1 +
pop esi  +
pop ebx  +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
push esi  +
test eax eax +
jnz loc_40156A  +
push offset ProcName  +
push [esp+8+hModule]  +
call ds:GetProcAddress  +
mov dword_41D820 eax +
test eax eax +
jnz loc_40149A  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push 0AD298D3Fh  +
call eax  +
mov esi eax +
add esp 4 +
mov eax dword_41D820 +
mov dword_41D818 esi +
test eax eax +
jz loc_4014C9  +
push 150E828h  +
call eax  +
mov esi dword_41D818 +
add esp 4 +
mov ecx eax +
jmp loc_4014CB  +
xor ecx ecx +
mov edx [esp+4+arg_8] +
or eax 0FFFFFFFFh +
mov dword_41D81C ecx +
sub edx 0 +
jz loc_4014FA  +
sub edx 1 +
jnz loc_4015A1  +
test esi esi +
jz loc_4014F3  +
push 1  +
call esi  +
add esp 4 +
jmp loc_401500  +
mov eax 0FFFFFFFDh +
pop esi  +
retn   +
test ecx ecx +
jz loc_401495  +
call ecx  +
test eax eax +
jnz loc_4015A1  +
mov eax dword_41D820 +
test eax eax +
jz loc_40153D  +
push 33C7358Ch  +
call eax  +
mov ecx dword_41D820 +
add esp 4 +
mov dword_41D828 eax +
test ecx ecx +
jz loc_401544  +
push 593E8644h  +
call ecx  +
mov ecx eax +
add esp 4 +
mov eax dword_41D828 +
jmp loc_401546  +
xor eax eax +
mov dword_41D828 eax +
xor ecx ecx +
mov dword_41D82C ecx +
test eax eax +
jz loc_401554  +
test ecx ecx +
jz loc_40158B  +
mov dword_41D828 0 +
mov dword_41D82C 0 +
jmp loc_40158B  +
cmp eax 1 +
jnz loc_40158B  +
push offset aNvapi_pepquery  +
push [esp+8+hModule]  +
call ds:GetProcAddress  +
mov dword_41D824 eax +
test eax eax +
jz loc_401495  +
push 1C34h  +
push 0  +
push offset unk_41D868  +
call sub_404CB0  +
add esp 0Ch +
xor eax eax +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+arg_0] +
xor esi esi +
cmp byte_41D840[edi] 0 +
jz loc_4015DB  +
mov ebx ds:Sleep +
push 64h  +
call ebx  +
inc esi  +
cmp esi 0Ah +
jnb loc_4015F6  +
cmp byte_41D840[edi] 0 +
jnz loc_4015C8  +
cmp dword_41D830[edi*4] 0 +
jnz loc_4015FD  +
push [esp+arg_4]  +
push edi  +
call sub_4013C0  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
call sub_401350  +
add eax 4 +
push eax  +
call ds:EnterCriticalSection  +
inc dword_41D804  +
mov edi dword_41D854 +
mov ebx dword_41D800 +
push 0  +
push 0  +
call sub_4015B0  +
mov esi eax +
add esp 8 +
test esi esi +
jnz loc_40167B  +
cmp dword_41D808 1 +
jz loc_40166B  +
mov eax dword_41D81C +
test eax eax +
jz loc_401697  +
call eax  +
mov esi eax +
test esi esi +
jnz loc_40167B  +
mov dword_41D808 1 +
lea eax [edi+1] +
mov dword_41D854 eax +
lea eax [ebx+1] +
mov dword_41D800 eax +
dec dword_41D804  +
call sub_401350  +
add eax 4 +
push eax  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
or esi 0FFFFFFFFh +
jmp loc_40167B  +
***
sub esp 8 +
inc dword_41D804  +
push 0  +
push 0  +
call sub_4015B0  +
add esp 8 +
test eax eax +
jz loc_4016C5  +
dec dword_41D804  +
add esp 8 +
retn   +
push esi  +
mov esi dword_41F3AC +
test esi esi +
jnz loc_401700  +
mov eax dword_41D820 +
test eax eax +
jz loc_4016EF  +
push 0B43C2E0Dh  +
call eax  +
mov esi eax +
add esp 4 +
mov dword_41F3AC esi +
test esi esi +
jnz loc_401700  +
dec dword_41D804  +
mov eax 0FFFFFFFDh +
pop esi  +
add esp 8 +
retn   +
mov eax dword_41D828 +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+4] xmm0 +
test eax eax +
jz loc_401721  +
lea ecx [esp+0Ch+var_8] +
push ecx  +
push 0B43C2E0Dh  +
call eax  +
add esp 8 +
push [esp+0Ch+arg_0]  +
call esi  +
mov esi eax +
add esp 4 +
mov eax dword_41D82C +
test eax eax +
jz loc_401748  +
push esi  +
push [esp+10h+var_4]  +
push [esp+14h+var_8]  +
push 0B43C2E0Dh  +
call eax  +
add esp 10h +
dec dword_41D804  +
mov eax esi +
pop esi  +
add esp 8 +
retn   +
***
test edi edi +
jnz loc_40176D  +
xor eax eax +
pop edi  +
retn   +
push esi  +
mov esi edi +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_401773  +
sub esi ecx +
push edi  +
sar esi 1 +
call loc_402220  +
add esp 4 +
lea edx [eax+2] +
nop   +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_401790  +
sub eax edx +
sar eax 1 +
sub eax 0 +
jz loc_4017C9  +
sub eax 1 +
jz loc_4017B7  +
push edi  +
call sub_402F30  +
add esp 4 +
mov esi eax +
pop esi  +
pop edi  +
retn   +
lea eax [esi-1] +
push eax  +
push edi  +
call loc_402F90  +
add esp 8 +
mov esi eax +
pop esi  +
pop edi  +
retn   +
push ebx  +
lea ebx ds:0Ah[esi*2] +
push ebx  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_401805  +
push edi  +
push ebx  +
push esi  +
call sub_403090  +
test eax eax +
js loc_4017FC  +
push offset a_dll  +
push ebx  +
push esi  +
call sub_403000  +
test eax eax +
jns loc_401805  +
push esi  +
call ds:LocalFree  +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
test esi esi +
jnz loc_40181D  +
xor eax eax +
pop esi  +
retn   +
movzx eax word ptr [esi] +
cmp eax 5Ch +
jz loc_40184C  +
cmp eax 2Fh +
jz loc_40184C  +
push eax  +
call sub_407846  +
add esp 4 +
test eax eax +
jz loc_401819  +
cmp word ptr [esi+2] 3Ah +
jnz loc_401819  +
movzx eax word ptr [esi+4] +
cmp eax 5Ch +
jz loc_40184C  +
cmp eax 2Fh +
jnz loc_401819  +
mov eax 1 +
pop esi  +
retn   +
***
push edi  +
test esi esi +
jz loc_4018A9  +
mov ecx esi +
xor edx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_401871  +
sub ecx edi +
sar ecx 1 +
jz loc_4018A9  +
movzx eax word ptr [esi+edx*2] +
cmp eax 5Ch +
jz loc_4018AE  +
cmp eax 2Fh +
jz loc_4018AE  +
mov eax esi +
inc edx  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_401896  +
sub eax edi +
sar eax 1 +
cmp edx eax +
jb loc_401882  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
pop edi  +
mov eax 1 +
pop esi  +
retn   +
***
sub esp 210h +
mov eax dword_41D020 +
xor eax esp +
mov [esp+20Ch] eax +
push ebp  +
mov ebp [esp+21Ch] +
push esi  +
xor esi esi +
push edi  +
test ebp ebp +
jz loc_4019EA  +
push 20Ah  +
lea eax [esp+10h] +
push esi  +
push eax  +
call sub_404CB0  +
add esp 0Ch +
cmp dword_41F834 esi +
jnz loc_401949  +
push ebx  +
push offset aShell32_dll  +
xor edi edi +
call loc_401A10  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_401924  +
push edi  +
push edi  +
push ebx  +
call ds:LoadLibraryExW  +
mov edi eax +
push ebx  +
call ds:LocalFree  +
mov dword_41F834 edi +
pop ebx  +
test edi edi +
jz loc_401949  +
push offset aShgetfolderpat  +
push edi  +
call ds:GetProcAddress  +
mov dword_41F838 eax +
jmp loc_40194E  +
mov eax dword_41F838 +
test eax eax +
jnz loc_40196C  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
mov ecx [esp+20Ch] +
xor ecx esp +
call sub_403D40  +
add esp 210h +
retn   +
***
lea ecx [esp+0Ch] +
push ecx  +
push 0  +
push 0  +
push dword ptr [esp+22Ch]  +
push 0  +
call eax  +
test eax eax +
jnz loc_4019EA  +
lea ecx [esp+0Ch] +
lea edx [ecx+2] +
mov esi eax +
test esi esi +
jz loc_401952  +
lea eax [esp+0Ch] +
push eax  +
push edi  +
push esi  +
call sub_403210  +
push offset asc_415374  +
push edi  +
push esi  +
call loc_403110  +
push ebp  +
push edi  +
push esi  +
call loc_403110  +
mov ecx [esp+218h] +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_403D40  +
add esp 210h +
retn   +
***
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi [esp+14h] +
xor ebp ebp +
test edi edi +
jz loc_401AC4  +
mov esi ds:GetSystemDirectoryW +
push ebp  +
push ebp  +
call esi  +
mov ecx edi +
mov ebx eax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_401A33  +
sub ecx edx +
sar ecx 1 +
lea eax [ecx+ebx] +
lea eax ds:2[eax*2] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebp eax +
test ebp ebp +
jnz loc_401A60  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push ebx  +
push ebp  +
call esi  +
mov esi eax +
cmp word ptr [ebp+esi*2-2] 5Ch +
jz loc_401A79  +
mov eax 5Ch +
mov [ebp+esi*2+0] ax +
inc esi  +
mov ecx edi +
xor edx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_401A80  +
sub ecx ebx +
sar ecx 1 +
jz loc_401AC4  +
lea esi ds:0[esi*2] +
add esi ebp +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
pop ebx  +
retn   +
***
push [esp+4+arg_4]  +
call sub_402E50  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_401B17  +
push esi  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_401AFB  +
test al 50h +
jnz loc_401AFB  +
mov eax esi +
pop esi  +
retn   +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_401B0E  +
push 0  +
call ds:SetLastError  +
push esi  +
call ds:LocalFree  +
xor eax eax +
pop esi  +
retn   +
***
sub esp 8 +
push ebx  +
push ebp  +
push esi  +
mov esi hModule +
xor ebx ebx +
push edi  +
xor edi edi +
mov [esp+18h+var_4] ebx +
test esi esi +
jnz loc_401B68  +
push offset aAdvapi32_dll  +
call loc_401A10  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jz loc_401B57  +
push esi  +
push esi  +
push ebp  +
call ds:LoadLibraryExW  +
mov esi eax +
push ebp  +
call ds:LocalFree  +
mov hModule esi +
test esi esi +
jz loc_401BE4  +
mov ebp ds:GetProcAddress +
cmp dword_41F884 ebx +
jnz loc_401B8D  +
push offset aOpenscmanagerw  +
push esi  +
call ebp  +
mov dword_41F884 eax +
test eax eax +
jz loc_401BE4  +
mov esi hModule +
cmp dword_41F888 ebx +
jnz loc_401BAC  +
push offset aOpenservicew  +
push esi  +
call ebp  +
mov dword_41F888 eax +
test eax eax +
jz loc_401BE4  +
mov esi hModule +
cmp dword_41F88C ebx +
jnz loc_401BCB  +
push offset aQueryserviceco  +
push esi  +
call ebp  +
mov dword_41F88C eax +
test eax eax +
jz loc_401BE4  +
mov esi hModule +
cmp dword_41F894 ebx +
jnz loc_401BEE  +
push offset aCloseserviceha  +
push esi  +
call ebp  +
mov dword_41F894 eax +
test eax eax +
jnz loc_401BEE  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 8 +
retn   +
push 80000000h  +
push 0  +
push 0  +
mov [esp+24h+uBytes] ebx +
call dword_41F884  +
mov esi eax +
test esi esi +
jz loc_401C80  +
push 80000000h  +
push dword ptr [esp+24h]  +
push esi  +
call dword_41F888  +
mov ebx eax +
test ebx ebx +
jz loc_401C80  +
lea eax [esp+18h+uBytes] +
push eax  +
push 0  +
push 0  +
push ebx  +
call dword_41F88C  +
mov eax [esp+18h+uBytes] +
test eax eax +
jz loc_401C80  +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jz loc_401C80  +
lea eax [esp+18h+uBytes] +
push eax  +
push [esp+1Ch+uBytes]  +
push edi  +
push ebx  +
call dword_41F88C  +
test eax eax +
jz loc_401C80  +
cmp dword ptr [edi] 1 +
jnz loc_401C80  +
push dword ptr [esp+1Ch]  +
push dword ptr [edi+0Ch]  +
call sub_402760  +
add esp 8 +
test eax eax +
jz loc_401C80  +
push dword ptr [edi+0Ch]  +
call sub_402F30  +
add esp 4 +
mov [esp+18h+var_4] eax +
push edi  +
call ds:LocalFree  +
test ebx ebx +
jz loc_401C92  +
push ebx  +
call dword_41F894  +
test esi esi +
jz loc_401C9D  +
push esi  +
call dword_41F894  +
mov eax [esp+18h+var_4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
sub esp 40h +
mov eax dword_41D020 +
xor eax esp +
mov [esp+3Ch] eax +
mov eax [esp+44h] +
xorps xmm0 xmm0 +
push ebx  +
push ebp  +
mov ebp [esp+50h] +
xor ebx ebx +
push esi  +
mov esi dword_41F4EC +
mov [esp+18h] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+20h] 1Ch +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+38h] 0 +
push edi  +
movups oword ptr [esp+2Ch] xmm0 +
test esi esi +
jnz loc_401D31  +
push offset aSetupapi_dll  +
call loc_401A10  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_401D20  +
push esi  +
push esi  +
push edi  +
call ds:LoadLibraryExW  +
mov esi eax +
push edi  +
call ds:LocalFree  +
mov dword_41F4EC esi +
test esi esi +
jz loc_401D6F  +
mov edi ds:GetProcAddress +
cmp dword_41F708 ebx +
jnz loc_401D56  +
push offset aSetupdigetdevi  +
push esi  +
call edi  +
mov dword_41F708 eax +
test eax eax +
jz loc_401D6F  +
mov esi dword_41F4EC +
cmp dword_41F710 ebx +
jnz loc_401D84  +
push offset aSetupdidestroy  +
push esi  +
call edi  +
mov dword_41F710 eax +
test eax eax +
jnz loc_401D84  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+3Ch] +
xor ecx esp +
call sub_403D40  +
add esp 40h +
retn   +
***
lea eax [esp+24h] +
push eax  +
lea eax [esp+14h] +
push eax  +
push ebp  +
call loc_402280  +
add esp 0Ch +
test eax eax +
jz loc_401EE0  +
mov edi [esp+10h] +
xor eax eax +
mov dword ptr [esp+40h] 4 +
mov dword ptr [esp+44h] 11h +
mov dword ptr [esp+48h] 12h +
mov [esp+20h] eax +
cmp eax 3 +
jnb loc_401ED9  +
mov ebp [esp+eax*4+40h] +
xor esi esi +
lea eax [esp+18h] +
mov dword ptr [esp+14h] 0 +
push eax  +
push esi  +
push esi  +
lea eax [esp+20h] +
mov dword ptr [esp+24h] 0 +
push eax  +
push ebp  +
lea eax [esp+38h] +
push eax  +
push edi  +
call dword_41F708  +
mov ecx [esp+18h] +
test ecx ecx +
jz loc_401EC8  +
mov eax [esp+14h] +
test eax eax +
jz loc_401E21  +
cmp eax 2 +
jbe loc_401E1C  +
cmp eax 7 +
jnz loc_401E21  +
lea esi [eax-3] +
jmp loc_401E21  +
mov esi 2 +
lea eax [esi+ecx] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jz loc_401EC4  +
push 0  +
push dword ptr [esp+1Ch]  +
lea eax [esp+1Ch] +
push edi  +
push eax  +
push ebp  +
lea eax [esp+38h] +
push eax  +
push dword ptr [esp+28h]  +
call dword_41F708  +
test eax eax +
jz loc_401EBD  +
mov eax [esp+14h] +
mov esi edi +
sub eax 1 +
jz loc_401EAE  +
sub eax 6 +
jnz loc_401EBD  +
cmp ax [edi] +
jz loc_401EBD  +
jmp loc_401EBD  +
push edi  +
push dword ptr [esp+20h]  +
call sub_401B20  +
add esp 8 +
mov ebx eax +
push edi  +
call ds:LocalFree  +
mov edi [esp+10h] +
mov eax [esp+20h] +
inc eax  +
mov [esp+20h] eax +
test ebx ebx +
jz loc_401DC1  +
push edi  +
call dword_41F710  +
mov ecx [esp+4Ch] +
mov eax ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_403D40  +
add esp 40h +
retn   +
***
sub esp 8 +
push ebx  +
push ebp  +
mov ebp ds:LocalFree +
xor ebx ebx +
push esi  +
mov esi hModule +
mov dword ptr [esp+0Ch] 0 +
push edi  +
test esi esi +
jnz loc_401F4E  +
push offset aAdvapi32_dll  +
xor esi esi +
call loc_401A10  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_401F41  +
push esi  +
push esi  +
push edi  +
call ds:LoadLibraryExW  +
mov esi eax +
push edi  +
call ebp  +
mov hModule esi +
test esi esi +
jz loc_401FAB  +
mov edi ds:GetProcAddress +
cmp dword_41F874 ebx +
jnz loc_401F73  +
push offset aRegopenkeyexw  +
push esi  +
call edi  +
mov dword_41F874 eax +
test eax eax +
jz loc_401FAB  +
mov esi hModule +
cmp dword_41F878 ebx +
jnz loc_401F92  +
push offset aRegenumvaluew  +
push esi  +
call edi  +
mov dword_41F878 eax +
test eax eax +
jz loc_401FAB  +
mov esi hModule +
cmp dword_41F880 ebx +
jnz loc_401FB5  +
push offset aRegclosekey  +
push esi  +
call edi  +
mov dword_41F880 eax +
test eax eax +
jnz loc_401FB5  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 8 +
retn   +
***
mov edi [esp+24h] +
sub esp 0Ch +
push ebp  +
push esi  +
mov esi hModule +
xor ebp ebp +
mov [esp+14h+var_C] 0 +
push edi  +
test esi esi +
jnz loc_4020D9  +
push offset aAdvapi32_dll  +
call loc_401A10  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_4020C8  +
push esi  +
push esi  +
push edi  +
call ds:LoadLibraryExW  +
mov esi eax +
push edi  +
call ds:LocalFree  +
mov hModule esi +
test esi esi +
jz loc_402134  +
mov eax dword_41F874 +
mov edi ds:GetProcAddress +
test eax eax +
jnz loc_4020FF  +
push offset aRegopenkeyexw  +
push esi  +
call edi  +
mov dword_41F874 eax +
test eax eax +
jz loc_402134  +
mov esi hModule +
cmp dword_41F880 ebp +
jnz loc_40211D  +
push offset aRegclosekey  +
push esi  +
call edi  +
mov dword_41F880 eax +
test eax eax +
jz loc_402134  +
mov eax dword_41F874 +
lea ecx [esp+18h+var_C] +
push ecx  +
push 1  +
push 0  +
push [esp+24h+arg_8]  +
push [esp+28h+arg_4]  +
call eax  +
test eax eax +
jz loc_40213D  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
add esp 0Ch +
retn   +
mov eax [esp+1Ch+arg_8] +
push ebx  +
mov ebx [esp+20h] +
mov eax [eax] +
test eax eax +
jz loc_40220C  +
lea ecx [esp+20h+var_C] +
mov [esp+20h+var_C] 0 +
push ecx  +
lea ecx [esp+1Ch] +
mov dword ptr [esp+1Ch] 0 +
push ecx  +
push eax  +
push [esp+2Ch+var_10]  +
call sub_402D40  +
mov edi [esp+30h+var_C] +
add esp 10h +
test eax eax +
jnz loc_4021F2  +
mov eax [esp+18h] +
mov esi edi +
sub eax 1 +
jz loc_4021D9  +
sub eax 6 +
jz loc_402199  +
push 0Dh  +
call ds:SetLastError  +
jmp loc_4021F2  +
xor eax eax +
cmp ax [edi] +
jz loc_4021CF  +
push ebx  +
push esi  +
call sub_402760  +
add esp 8 +
test eax eax +
jnz loc_4021CF  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4021B3  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2] +
xor eax eax +
add esi 2 +
cmp ax [esi] +
jnz loc_4021A0  +
xor eax eax +
cmp ax [esi] +
jz loc_4021F2  +
push esi  +
jmp loc_4021E8  +
push ebx  +
push edi  +
call sub_402760  +
add esp 8 +
test eax eax +
jz loc_4021F2  +
push edi  +
call sub_402F30  +
mov ebp eax +
add esp 4 +
push edi  +
call ds:LocalFree  +
mov eax [esp+20h+arg_8] +
add eax 4 +
mov [esp+20h+arg_8] eax +
test ebp ebp +
jz loc_402146  +
push [esp+20h+var_10]  +
call dword_41F880  +
pop ebx  +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
add esp 0Ch +
retn   +
***
mov edx [esp+4] +
mov ecx edx +
push esi  +
push edi  +
lea esi [ecx+2] +
sub esp 4Ch +
mov eax dword_41D020 +
xor eax esp +
mov [esp+48h] eax +
mov eax [esp+50h] +
xorps xmm0 xmm0 +
push ebx  +
push ebp  +
push esi  +
xor ebp ebp +
mov [esp+10h] eax +
mov eax [esp+60h] +
xor esi esi +
push edi  +
mov edi dword_41F4EC +
mov [esp+18h] eax +
mov eax [esp+68h] +
mov [esp+1Ch] eax +
mov dword ptr [esp+3Ch] 1Ch +
mov [esp+40h] ebp +
mov [esp+54h] ebp +
mov dword ptr [esp+20h] 1Ch +
mov [esp+24h] ebp +
mov [esp+38h] ebp +
movups oword ptr [esp+44h] xmm0 +
movups oword ptr [esp+28h] xmm0 +
test edi edi +
jnz loc_402318  +
push offset aSetupapi_dll  +
call loc_401A10  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_402303  +
push edi  +
push edi  +
push ebx  +
call ds:LoadLibraryExW  +
mov edi eax +
push ebx  +
call ds:LocalFree  +
mov dword_41F4EC edi +
test edi edi +
jz loc_4023AC  +
mov ebx ds:GetProcAddress +
cmp dword_41F6FC esi +
jnz loc_40233D  +
push offset aSetupdigetclas  +
push edi  +
call ebx  +
mov dword_41F6FC eax +
test eax eax +
jz loc_4023AC  +
mov edi dword_41F4EC +
cmp dword_41F700 esi +
jnz loc_40235C  +
push offset aSetupdienumdev  +
push edi  +
call ebx  +
mov dword_41F700 eax +
test eax eax +
jz loc_4023AC  +
mov edi dword_41F4EC +
cmp dword_41F704 esi +
jnz loc_40237B  +
push offset aSetupdigetde_0  +
push edi  +
call ebx  +
mov dword_41F704 eax +
test eax eax +
jz loc_4023AC  +
mov edi dword_41F4EC +
cmp dword_41F710 esi +
jnz loc_402394  +
push offset aSetupdidestroy  +
push edi  +
call ebx  +
mov dword_41F710 eax +
test eax eax +
jz loc_4023AC  +
mov edi [esp+14h] +
push 12h  +
push 0  +
push 0  +
push edi  +
call dword_41F6FC  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_4023C1  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+48h] +
xor ecx esp +
call sub_403D40  +
add esp 4Ch +
retn   +
***
xorps xmm0 xmm0 +
mov [esp+54h] esi +
movups oword ptr [esp+3Ch] xmm0 +
mov dword ptr [esp+3Ch] 1Ch +
movq qword ptr [esp+4Ch] xmm0 +
adc eax offset dword_41F710 +
mov ecx [esp+58h] +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_403D40  +
add esp 4Ch +
retn   +
***
call loc_404E0A  +
add esp 8 +
test eax eax +
jz loc_402516  +
add eax 2 +
retn   +
mov eax [esp+arg_0] +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF0h +
sub esp 268h +
mov eax dword_41D020 +
xor eax esp +
mov [esp+264h] eax +
cmp word_41F4F0 0 +
push esi  +
push edi  +
jnz loc_40269C  +
mov esi dword_41F4DC +
test esi esi +
jnz loc_402587  +
push offset aGdi32_dll  +
call loc_401A10  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_402572  +
push esi  +
push esi  +
push edi  +
call ds:LoadLibraryExW  +
mov esi eax +
push edi  +
call ds:LocalFree  +
mov dword_41F4DC esi +
test esi esi +
jz loc_40274D  +
mov eax dword_41F4E0 +
mov edi ds:GetProcAddress +
test eax eax +
jnz loc_4025B1  +
push offset aD3dkmtenumadap  +
push esi  +
call edi  +
mov dword_41F4E0 eax +
test eax eax +
jz loc_40274D  +
mov esi dword_41F4DC +
cmp dword_41F4E4 0 +
jnz loc_4025D4  +
push offset aD3dkmtqueryada  +
push esi  +
call edi  +
mov dword_41F4E4 eax +
test eax eax +
jz loc_40274D  +
mov eax dword_41F4E0 +
lea ecx [esp+18h] +
xorps xmm0 xmm0 +
push ecx  +
movq qword ptr [esp+1Ch] xmm0 +
call eax  +
test eax eax +
jnz loc_40274D  +
mov eax [esp+18h] +
lea eax [eax+eax*4] +
shl eax 2 +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
mov [esp+14h] edi +
test edi edi +
jz loc_402695  +
lea eax [esp+18h] +
mov [esp+1Ch] edi +
push eax  +
call dword_41F4E0  +
test eax eax +
jnz loc_402695  +
xor esi esi +
cmp [esp+18h] esi +
jbe loc_402695  +
xor edi edi +
push edi  +
call ds:LocalFree  +
mov ecx [esp+26Ch] +
mov eax offset word_41F4F0 +
pop edi  +
pop esi  +
xor ecx esp +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn   +
***
xor edi edi +
jmp loc_402695  +
***
push esi  +
mov esi [esp+0Ch+arg_0] +
push 5Ch  +
push esi  +
call loc_404E0A  +
add esp 8 +
test eax eax +
jz loc_402779  +
lea esi [eax+2] +
mov ebx [esp+0Ch+arg_4] +
push ebx  +
push esi  +
call sub_4078A2  +
add esp 8 +
test eax eax +
jnz loc_402794  +
pop esi  +
mov eax 1 +
pop ebx  +
pop ecx  +
retn   +
push ebp  +
push edi  +
push esi  +
call loc_402220  +
push ebx  +
mov [esp+1Ch+var_4] eax +
call loc_402220  +
mov ecx [esp+1Ch+var_4] +
mov edi eax +
mov ebp edi +
sub ecx esi +
sub ebp ebx +
sar ecx 1 +
sar ebp 1 +
add esp 8 +
cmp ecx ebp +
jnz loc_402853  +
mov ecx offset unk_415320 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4027EC  +
test dx dx +
jz loc_4027E8  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4027EC  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_4027C6  +
xor eax eax +
jmp loc_4027F1  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_402807  +
push offset a_dll  +
push edi  +
call sub_4078A2  +
add esp 8 +
test eax eax +
jnz loc_402853  +
mov edi [esp+14h+var_4] +
mov ecx offset unk_415320 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_402838  +
test dx dx +
jz loc_402834  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_402838  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_402812  +
xor eax eax +
jmp loc_40283D  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_40285B  +
push offset a_dll  +
push edi  +
call sub_4078A2  +
add esp 8 +
test eax eax +
jz loc_40285B  +
pop edi  +
pop ebp  +
pop esi  +
xor eax eax +
pop ebx  +
pop ecx  +
retn   +
push ebp  +
push ebx  +
push esi  +
call sub_407A17  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
sub esp 18h +
mov eax dword_41D020 +
xor eax esp +
mov [esp+14h] eax +
mov ecx [esp+1Ch] +
push ebx  +
push esi  +
xor ebx ebx +
mov [esp+0Ch] ecx +
xor esi esi +
mov dword ptr [esp+8] 0 +
push edi  +
mov dword ptr [esp+14h] 24h +
mov dword ptr [esp+18h] 26h +
mov dword ptr [esp+1Ch] 2Ah +
cmp dword_41F718 ebx +
jnz loc_402929  +
mov edi ds:VerSetConditionMask +
push 3  +
push 20h  +
push 3  +
push 1  +
push 3  +
push 2  +
push ebx  +
push ebx  +
call edi  +
push edx  +
push eax  +
call edi  +
push edx  +
push eax  +
call edi  +
push edx  +
push eax  +
push 23h  +
xor ecx ecx +
mov dword_41F718 11Ch +
push offset dword_41F718  +
mov dword_41F71C 6 +
mov dword_41F720 1 +
mov word_41F82C cx +
call ds:VerifyVersionInfoW  +
mov ecx [esp+10h] +
neg eax  +
sbb eax eax +
inc eax  +
mov dword_41D004 eax +
jmp loc_40292E  +
mov eax dword_41D004 +
test eax eax +
jz loc_402949  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
mov ecx [esp+14h] +
xor ecx esp +
call sub_403D40  +
add esp 18h +
retn   +
***
push ebp  +
mov ebp ds:LocalFree +
test ecx ecx +
jz loc_402A9D  +
push 0  +
push 0  +
push 0  +
push ecx  +
call ds:GetFullPathNameW  +
mov edi eax +
test edi edi +
jz loc_402A9D  +
lea eax [edi+edi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [esp+10h] eax +
test eax eax +
jz loc_402A9D  +
push 0  +
push eax  +
push edi  +
push dword ptr [esp+20h]  +
call ds:GetFullPathNameW  +
cmp edi eax +
jbe loc_402A9D  +
mov edi ds:LocalFree +
xor ebp ebp +
mov eax [esp+ebp*4+18h] +
cmp eax 26h +
jnz loc_402ABB  +
push 0  +
push 0  +
push offset aProgramw6432  +
call ds:ExpandEnvironmentStringsW  +
mov edi eax +
xor esi esi +
test edi edi +
jz loc_402A97  +
lea ecx ds:2[edi*2] +
push ecx  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_402A97  +
push edi  +
push esi  +
push offset aProgramw6432  +
call ds:ExpandEnvironmentStringsW  +
cmp edi eax +
jnz loc_402A97  +
push esi  +
push offset aProgramw6432  +
call ds:lstrcmpW  +
test eax eax +
jnz loc_402A37  +
mov edi ds:LocalFree +
push esi  +
call edi  +
push offset unk_415320  +
push 26h  +
call loc_4018C0  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_402A97  +
jmp loc_402A54  +
cmp word ptr [esi+edi*2-4] 5Ch +
jz loc_402A4E  +
push offset asc_415374  +
lea eax [edi+1] +
push eax  +
push esi  +
call loc_403110  +
mov edi ds:LocalFree +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402A60  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
push dword ptr [esp+18h]  +
call sub_407A17  +
add esp 0Ch +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
add ebx 1 +
jnz loc_402A97  +
push esi  +
call edi  +
inc ebp  +
xor esi esi +
cmp ebp 3 +
jl loc_4029B0  +
mov ebp ds:LocalFree +
push esi  +
call ebp  +
push dword ptr [esp+10h]  +
call ebp  +
mov ecx [esp+24h] +
mov eax ebx +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_403D40  +
add esp 18h +
retn   +
***
push offset unk_415320  +
push eax  +
jmp loc_402A27  +
***
sub esp 128h +
mov eax dword_41D020 +
xor eax esp +
mov [esp+124h] eax +
mov eax dword_41F860 +
push ebp  +
mov ebp [esp+130h] +
push esi  +
push edi  +
test eax eax +
jnz loc_402BFD  +
push 3  +
push 4  +
push 0  +
push 0  +
call ds:VerSetConditionMask  +
push 11Ch  +
mov edi eax +
mov esi edx +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_404CB0  +
add esp 0Ch +
mov [esp+20h] ebp +
lea eax [esp+14h] +
push esi  +
push edi  +
push 4  +
push eax  +
call ds:VerifyVersionInfoW  +
test eax eax +
jz loc_402B55  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebp  +
mov ecx [esp+124h] +
xor ecx esp +
call sub_403D40  +
add esp 128h +
retn   +
***
lea eax [esp+0Ch] +
mov dword ptr [esp+10h] 0 +
push eax  +
lea eax [esp+14h] +
mov dword ptr [esp+10h] 0 +
push eax  +
push offset aCurrentbuildnu  +
push offset aSoftwareMicros  +
push 80000002h  +
call sub_402C60  +
mov edi [esp+20h] +
add esp 14h +
test eax eax +
jnz loc_402BF1  +
cmp dword ptr [esp+10h] 1 +
jnz loc_402BF1  +
mov ecx edi +
mov esi edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402BA0  +
sub ecx edx +
sar ecx 1 +
push ebx  +
lea ebx [edi+ecx*2] +
cmp edi ebx +
jnb loc_402BF0  +
movzx eax word ptr [esi] +
push eax  +
call sub_407875  +
add esp 4 +
test eax eax +
jz loc_402BE6  +
mov eax dword_41F860 +
lea ecx [eax+eax*4] +
movzx eax word ptr [esi] +
add esi 2 +
lea eax [eax+ecx*2] +
add eax 0FFFFFFD0h +
mov dword_41F860 eax +
cmp esi ebx +
jb loc_402BB7  +
jmp loc_402BF0  +
mov dword_41F860 0 +
pop ebx  +
push edi  +
call ds:LocalFree  +
mov eax dword_41F860 +
mov ecx [esp+130h] +
cmp eax ebp +
pop edi  +
pop esi  +
sbb eax eax +
pop ebp  +
xor ecx esp +
inc eax  +
call sub_403D40  +
add esp 128h +
retn   +
***
push [esp+arg_0]  +
xor ebx ebx +
call loc_401A10  +
add esp 4 +
mov edi eax +
cmp [esp+arg_0] ebx +
jz loc_402C3C  +
test edi edi +
jz loc_402C51  +
mov eax [esp+arg_4] +
and eax 0FFFFE0F7h +
push eax  +
push 0  +
push edi  +
call ds:LoadLibraryExW  +
mov ebx eax +
push edi  +
call ds:LocalFree  +
pop edi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov esi hModule +
mov [esp+8+var_4] 0 +
push edi  +
test esi esi +
jnz loc_402CA4  +
push offset aAdvapi32_dll  +
call loc_401A10  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_402C93  +
push esi  +
push esi  +
push edi  +
call ds:LoadLibraryExW  +
mov esi eax +
push edi  +
call ds:LocalFree  +
mov hModule esi +
test esi esi +
jz loc_402CE4  +
mov eax dword_41F874 +
mov edi ds:GetProcAddress +
test eax eax +
jnz loc_402CCA  +
push offset aRegopenkeyexw  +
push esi  +
call edi  +
mov dword_41F874 eax +
test eax eax +
jz loc_402CE4  +
mov esi hModule +
cmp dword_41F880 0 +
jnz loc_402CF3  +
push offset aRegclosekey  +
push esi  +
call edi  +
mov dword_41F880 eax +
test eax eax +
jnz loc_402CEE  +
call ds:GetLastError  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
mov eax dword_41F874 +
lea ecx [esp+0Ch+var_4] +
push ecx  +
push 1  +
push 0  +
push [esp+18h+arg_4]  +
push [esp+1Ch+arg_0]  +
call eax  +
mov esi eax +
test esi esi +
jnz loc_402D30  +
push dword ptr [esp+20h]  +
push dword ptr [esp+20h]  +
push dword ptr [esp+20h]  +
push [esp+18h+var_4]  +
call sub_402D40  +
add esp 10h +
mov esi eax +
push [esp+0Ch+var_4]  +
call dword_41F880  +
pop edi  +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
***
sub esp 8 +
push ebx  +
push esi  +
mov esi hModule +
xor ebx ebx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_8] 0 +
push edi  +
test esi esi +
jnz loc_402D91  +
push offset aAdvapi32_dll  +
call loc_401A10  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_402D80  +
push esi  +
push esi  +
push edi  +
call ds:LoadLibraryExW  +
mov esi eax +
push edi  +
call ds:LocalFree  +
mov hModule esi +
test esi esi +
jz loc_402E06  +
mov eax dword_41F87C +
test eax eax +
jnz loc_402DAF  +
push offset aRegqueryvaluee  +
push esi  +
call ds:GetProcAddress  +
mov dword_41F87C eax +
test eax eax +
jz loc_402E06  +
mov edi [esp+14h+arg_4] +
lea ecx [esp+14h+var_8] +
push ecx  +
push 0  +
lea ecx [esp+1Ch+var_4] +
push ecx  +
push 0  +
push edi  +
push [esp+28h+arg_0]  +
call eax  +
test eax eax +
jnz loc_402E40  +
mov ecx [esp+14h+var_8] +
test ecx ecx +
jz loc_402E40  +
mov eax [esp+14h+var_4] +
test eax eax +
jz loc_402DF0  +
cmp eax 2 +
jbe loc_402DEB  +
cmp eax 7 +
jnz loc_402DF0  +
lea ebx [eax-3] +
jmp loc_402DF0  +
mov ebx 2 +
lea eax [ebx+ecx] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov esi [esp+24h] +
mov [esi] eax +
test eax eax +
jnz loc_402E13  +
call ds:GetLastError  +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
lea ecx [esp+14h+var_8] +
push ecx  +
push eax  +
push dword ptr [esp+28h]  +
push 0  +
push edi  +
push [esp+28h+arg_0]  +
call dword_41F87C  +
mov edi eax +
test edi edi +
jz loc_402E3E  +
push dword ptr [esi]  +
call ds:LocalFree  +
mov dword ptr [esi] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
test edi edi +
jnz loc_402E67  +
push [esp+arg_4]  +
call sub_402F30  +
add esp 4 +
pop edi  +
retn   +
push ebp  +
mov ebp [esp+4+arg_4] +
test ebp ebp +
jnz loc_402E7C  +
push edi  +
call sub_402F30  +
add esp 4 +
pop ebp  +
pop edi  +
retn   +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402E81  +
sub ecx edx +
mov edx ebp +
push ebx  +
push esi  +
sar ecx 1 +
lea esi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_402E97  +
sub edx esi +
sar edx 1 +
test ecx ecx +
jz loc_402EC4  +
cmp word ptr [edi+ecx*2-2] 5Ch +
jz loc_402EC4  +
test edx edx +
jz loc_402EC4  +
cmp word ptr [ebp+0] 5Ch +
jz loc_402EC4  +
mov eax 1 +
jmp loc_402EC6  +
xor eax eax +
mov [esp+0Ch+arg_0] eax +
add eax edx +
add eax ecx +
lea ebx ds:2[eax*2] +
push ebx  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_402F1C  +
push edi  +
push ebx  +
push esi  +
call sub_403090  +
test eax eax +
js loc_402F13  +
cmp [esp+0Ch+arg_0] 0 +
jz loc_402F07  +
push offset asc_415374  +
push ebx  +
push esi  +
call sub_403000  +
test eax eax +
js loc_402F13  +
push ebp  +
push ebx  +
push esi  +
call sub_403000  +
test eax eax +
jns loc_402F1C  +
push esi  +
call ds:LocalFree  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
pop edi  +
retn   +
***
test edi edi +
jnz loc_402F3D  +
xor eax eax +
pop edi  +
retn   +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_402F42  +
sub eax edx +
sar eax 1 +
push ebx  +
push esi  +
lea ebx [eax+1] +
lea eax [ebx+ebx] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jnz loc_402F6C  +
pop esi  +
pop ebx  +
pop edi  +
retn   +
push edi  +
push ebx  +
push esi  +
call sub_403210  +
test eax eax +
jns loc_402F81  +
push esi  +
call ds:LocalFree  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+8] +
push ebp  +
test ebx ebx +
jz loc_402FFA  +
mov ebp [esp+10h] +
test ebp ebp +
js loc_402FFA  +
push esi  +
mov esi ebx +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_402FB0  +
sub esi ecx +
sar esi 1 +
cmp ebp esi +
push edi  +
cmovb esi ebp +
inc esi  +
lea eax [esi+esi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jnz loc_402FDD  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push ebp  +
push ebx  +
push esi  +
push edi  +
call sub_4031B0  +
test eax eax +
jns loc_402FF3  +
push edi  +
call ds:LocalFree  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
mov eax 0 +
push esi  +
mov esi [esp+4+arg_4] +
mov ecx 80070057h +
shr esi 1 +
push edi  +
cmovz eax ecx +
test eax eax +
js loc_403030  +
lea eax [esp+8+arg_4] +
push eax  +
push esi  +
push ebx  +
call sub_403300  +
mov edi [esp+8+arg_4] +
jmp loc_403032  +
xor edi edi +
test eax eax +
js loc_403084  +
mov edx esi +
lea ecx [ebx+edi*2] +
mov ebx 0 +
sub edx edi +
jz loc_403075  +
mov eax edx +
add edi 7FFFFFFEh +
sub eax esi +
add eax edi +
mov edi [esp+8+arg_8] +
sub edi ecx +
test eax eax +
jz loc_403071  +
movzx esi word ptr [edi+ecx] +
test si si +
jz loc_403071  +
mov [ecx] si +
dec eax  +
add ecx 2 +
sub edx 1 +
jnz loc_403056  +
jmp loc_403075  +
test edx edx +
jnz loc_40307D  +
sub ecx 2 +
mov ebx 8007007Ah +
xor eax eax +
mov [ecx] ax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
retn 0Ch  +
***
mov edx [esp+arg_4] +
mov eax 0 +
shr edx 1 +
mov ecx 80070057h +
cmovz eax ecx +
test eax eax +
js loc_4030F7  +
mov ecx [esp+arg_0] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
test edx edx +
jz loc_4030E2  +
mov edi [esp+0Ch+arg_8] +
mov esi 7FFFFFFEh +
sub esi edx +
sub edi ecx +
lea eax [esi+edx] +
test eax eax +
jz loc_4030DE  +
movzx eax word ptr [edi+ecx] +
test ax ax +
jz loc_4030DE  +
mov [ecx] ax +
add ecx 2 +
sub edx 1 +
jnz loc_4030C1  +
jmp loc_4030E2  +
test edx edx +
jnz loc_4030EA  +
sub ecx 2 +
mov ebx 8007007Ah +
xor eax eax +
pop edi  +
mov [ecx] ax +
mov eax ebx +
pop esi  +
pop ebx  +
retn 0Ch  +
test edx edx +
jz locret_403104  +
mov ecx [esp+arg_0] +
xor edx edx +
mov [ecx] dx +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [esp+10h] +
xor eax eax +
push edi  +
test esi esi +
jz loc_403125  +
cmp esi 7FFFFFFFh +
jbe loc_40312A  +
mov eax 80070057h +
mov ebx [esp+10h] +
test eax eax +
js loc_403144  +
lea eax [esp+14h] +
push eax  +
push esi  +
push ebx  +
call sub_403300  +
mov edi [esp+14h] +
jmp loc_403146  +
xor edi edi +
test eax eax +
js loc_40319E  +
mov edx esi +
lea ecx [ebx+edi*2] +
mov ebx 0 +
sub edx edi +
jz loc_40318F  +
mov eax edx +
add edi 7FFFFFFEh +
sub eax esi +
add eax edi +
mov edi [esp+18h] +
sub edi ecx +
sal byte ptr [ebp+8] cl +
sub ecx 2 +
mov ebx 8007007Ah +
xor eax eax +
mov [ecx] ax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
retn 0Ch  +
***
mov ecx [esp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_4031C2  +
cmp ecx 7FFFFFFFh +
jbe loc_4031C7  +
mov eax 80070057h +
test eax eax +
js loc_4031FB  +
mov eax [esp+arg_C] +
cmp eax 7FFFFFFEh +
jbe loc_4031E7  +
mov eax [esp+arg_0] +
xor ecx ecx +
mov [eax] cx +
mov eax 80070057h +
retn 10h  +
push eax  +
push [esp+4+arg_8]  +
push 0  +
push ecx  +
push [esp+10h+arg_0]  +
call sub_403290  +
retn 10h  +
test ecx ecx +
jz locret_403208  +
mov ecx [esp+arg_0] +
xor edx edx +
mov [ecx] dx +
retn 10h  +
***
mov edx [esp+arg_4] +
xor eax eax +
test edx edx +
jz loc_403222  +
cmp edx 7FFFFFFFh +
jbe loc_403227  +
mov eax 80070057h +
test eax eax +
js loc_40327B  +
mov ecx [esp+arg_0] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
test edx edx +
jz loc_403266  +
mov edi [esp+0Ch+arg_8] +
mov esi 7FFFFFFEh +
sub esi edx +
sub edi ecx +
lea eax [esi+edx] +
test eax eax +
jz loc_403262  +
movzx eax word ptr [edi+ecx] +
test ax ax +
jz loc_403262  +
mov [ecx] ax +
add ecx 2 +
sub edx 1 +
jnz loc_403245  +
jmp loc_403266  +
test edx edx +
jnz loc_40326E  +
sub ecx 2 +
mov ebx 8007007Ah +
xor eax eax +
pop edi  +
mov [ecx] ax +
mov eax ebx +
pop esi  +
pop ebx  +
retn 0Ch  +
test edx edx +
jz locret_403288  +
mov ecx [esp+arg_0] +
xor edx edx +
mov [ecx] dx +
retn 0Ch  +
***
mov ecx [esp+arg_4] +
xor edx edx +
mov eax [esp+arg_0] +
push ebx  +
push ebp  +
push esi  +
xor ebp ebp +
push edi  +
test ecx ecx +
jz loc_4032D0  +
mov ebx [esp+10h+arg_C] +
mov esi [esp+10h+arg_10] +
sub ebx eax +
nop   +
test esi esi +
jz loc_4032CC  +
movzx edi word ptr [ebx+eax] +
test di di +
jz loc_4032CC  +
mov [eax] di +
dec esi  +
add eax 2 +
inc edx  +
sub ecx 1 +
jnz loc_4032B0  +
jmp loc_4032D0  +
test ecx ecx +
jnz loc_4032D9  +
sub eax 2 +
mov ebp 8007007Ah +
dec edx  +
xor ecx ecx +
mov [eax] cx +
mov eax [esp+10h+arg_8] +
test eax eax +
jz loc_4032E8  +
mov [eax] edx +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
pop ebx  +
retn 14h  +
***
mov ecx [esp+arg_4] +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_40331E  +
mov eax [esp+4+arg_0] +
nop   +
cmp word ptr [eax] 0 +
jz loc_40331E  +
add eax 2 +
sub ecx 1 +
jnz loc_403310  +
xor edx edx +
mov eax 80070057h +
test ecx ecx +
cmovnz eax edx +
mov edx [esp+4+arg_8] +
test edx edx +
jz loc_403344  +
test ecx ecx +
jz loc_40333E  +
sub esi ecx +
mov [edx] esi +
pop esi  +
retn 0Ch  +
mov dword ptr [edx] 0 +
pop esi  +
retn 0Ch  +
***
sub esp 8 +
push ebp  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebp ebp +
push ebp  +
call edi  +
mov esi [esp+14h+arg_0] +
test esi esi +
jz loc_4034EF  +
push esi  +
call sub_401860  +
add esp 4 +
test eax eax +
jnz loc_4034EF  +
push ebx  +
push esi  +
call sub_403500  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_40345E  +
call sub_403BA0  +
mov [esp+18h+arg_0] eax +
test eax eax +
jz loc_403455  +
push ebx  +
call sub_401860  +
add esp 4 +
test eax eax +
jz loc_40343E  +
mov [esp+18h+var_8] offset aSystem32 +
lea edi [esp+18h+var_8] +
mov [esp+18h+var_4] offset aSystemrootSyst +
mov ecx [edi] +
mov esi ecx +
lea edx [esi+2] +
nop   +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_4033D0  +
sub esi edx +
sar esi 1 +
push esi  +
push ecx  +
push ebx  +
call sub_407A17  +
add esp 0Ch +
test eax eax +
jz loc_4033FF  +
add edi 4 +
lea eax [esp+18h] +
cmp edi eax +
jb loc_4033C8  +
mov esi [esp+18h+arg_0] +
jmp loc_403412  +
lea eax [ebx+esi*2] +
mov esi [esp+18h+arg_0] +
push eax  +
push esi  +
call sub_402E50  +
add esp 8 +
mov ebp eax +
lea eax [esp+18h] +
cmp edi eax +
jnz loc_40344E  +
push ebx  +
call sub_401810  +
add esp 4 +
test eax eax +
jz loc_40344E  +
mov ebp ebx +
xor ebx ebx +
push esi  +
call ds:LocalFree  +
push ebx  +
call ds:LocalFree  +
jmp loc_4034BB  +
mov esi [esp+18h+arg_0] +
push ebx  +
push esi  +
call sub_402E50  +
add esp 8 +
mov ebp eax +
push esi  +
call ds:LocalFree  +
push ebx  +
call ds:LocalFree  +
jmp loc_4034BB  +
call ds:GetLastError  +
cmp eax 7Eh +
jnz loc_4034D7  +
push esi  +
call sub_401760  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_4034D1  +
push 37E4h  +
call loc_402AD0  +
add esp 4 +
test eax eax +
jz loc_403498  +
push offset unk_4152FC  +
call sub_403960  +
add esp 4 +
jmp loc_40349D  +
call sub_403BA0  +
mov ebx ds:LocalFree +
mov esi eax +
test esi esi +
jz loc_4034B8  +
push esi  +
push edi  +
call sub_401AD0  +
add esp 8 +
mov ebp eax +
push esi  +
call ebx  +
push edi  +
call ebx  +
test ebp ebp +
jz loc_4034D1  +
push 0  +
call ds:SetLastError  +
pop ebx  +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
add esp 8 +
retn   +
mov edi ds:SetLastError +
call ds:GetLastError  +
test eax eax +
jnz loc_4034E5  +
push 7Eh  +
call edi  +
pop ebx  +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
add esp 8 +
retn   +
push 0A0h  +
call edi  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
add esp 8 +
retn   +
***
sub esp 2Ch +
mov eax dword_41D020 +
xor eax esp +
mov [esp+2Ch+var_4] eax +
push ebx  +
mov ebx ds:SetLastError +
push ebp  +
mov ebp [esp+34h+arg_0] +
push esi  +
push edi  +
xor esi esi +
mov [esp+3Ch+var_2C] 0 +
push esi  +
xor edi edi +
call ebx  +
test ebp ebp +
jz loc_403792  +
push ebp  +
call sub_401860  +
add esp 4 +
test eax eax +
jnz loc_403792  +
cmp dword_41F840 esi +
jnz loc_40359A  +
push offset ModuleName  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_403743  +
cmp dword_41F840 esi +
jnz loc_403580  +
push offset aIswow64process  +
push eax  +
call ds:GetProcAddress  +
mov dword_41F840 eax +
test eax eax +
jz loc_403743  +
push offset dword_41F83C  +
call ds:GetCurrentProcess  +
push eax  +
call dword_41F840  +
test eax eax +
jz loc_403743  +
mov eax dword_41F83C +
push 42EAh  +
mov [esp+48h+var_30] eax +
call loc_402AD0  +
add esp 4 +
test eax eax +
jz loc_4035E0  +
call loc_402520  +
push ebp  +
push eax  +
call sub_402E50  +
add esp 8 +
mov esi eax +
push esi  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_4035D9  +
test al 50h +
jz loc_403743  +
push esi  +
call ds:LocalFree  +
push offset unk_4152FC  +
call sub_4037B0  +
xor esi esi +
mov [esp+48h+hMem] eax +
add esp 4 +
cmp eax esi +
jz loc_403743  +
push ebp  +
call sub_401760  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_403743  +
push edi  +
call loc_402220  +
push offset a_dll  +
push eax  +
mov [esp+50h+var_1C] eax +
call sub_4078A2  +
mov ebp ds:GetLastError +
add esp 0Ch +
test eax eax +
jz loc_403646  +
call ebp  +
test eax eax +
jnz loc_403646  +
push offset unk_4152FC  +
push edi  +
call loc_401CB0  +
add esp 8 +
mov esi eax +
push offset a_sys  +
push [esp+48h+var_1C]  +
call sub_4078A2  +
add esp 8 +
test eax eax +
jz loc_4036FC  +
test esi esi +
jnz loc_403743  +
call ebp  +
test eax eax +
jnz loc_4036CD  +
cmp [esp+44h+var_30] esi +
lea ecx [esp+44h+var_1C] +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_10] eax +
lea eax [esp+44h+var_2C] +
cmovz eax ecx +
mov [esp+44h+var_2C] offset aUsermodedriver +
push eax  +
push [esp+48h+hMem]  +
mov [esp+4Ch+var_28] offset aOpengldriverna +
push 80000002h  +
push edi  +
mov [esp+54h+var_24] offset aUsermodedlistd +
mov [esp+54h+var_1C] offset aUsermodedriv_0 +
mov [esp+54h+var_18] offset aOpengldriver_0 +
mov [esp+54h+var_14] offset aUsermodedlis_0 +
call sub_402090  +
mov esi eax +
add esp 10h +
test esi esi +
jnz loc_403743  +
call ebp  +
test eax eax +
jnz loc_403700  +
mov [esp+44h+var_24] eax +
lea eax [esp+44h+var_2C] +
push eax  +
push 80000002h  +
push edi  +
mov [esp+50h+var_2C] offset aSoftwareKhrono +
mov [esp+50h+var_28] offset aSoftwareKhro_0 +
call loc_401F00  +
add esp 0Ch +
mov esi eax +
test esi esi +
jnz loc_403743  +
call ebp  +
test eax eax +
jnz loc_403743  +
cmp [esp+44h+var_30] 0 +
lea ecx [esp+44h+var_2C] +
mov [esp+44h+var_18] eax +
mov [esp+44h+var_28] eax +
lea eax [esp+44h+var_1C] +
cmovz eax ecx +
mov [esp+44h+var_1C] offset aDriversupportm +
push eax  +
push [esp+48h+hMem]  +
mov [esp+4Ch+var_2C] offset aDriversuppor_0 +
push 80000002h  +
push edi  +
call sub_402090  +
add esp 10h +
mov esi eax +
push [esp+44h+hMem]  +
mov ebp ds:LocalFree +
call ebp  +
push edi  +
call ebp  +
test esi esi +
jz loc_40376F  +
push 0  +
call ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+34h+var_C] +
xor ecx esp +
call sub_403D40  +
add esp 2Ch +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_40377D  +
push 7Eh  +
call ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+34h+var_C] +
xor ecx esp +
call sub_403D40  +
add esp 2Ch +
retn   +
push 0A0h  +
call ebx  +
mov ecx [esp+3Ch+var_4] +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_403D40  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax dword_41D020 +
xor eax esp +
mov [esp+2Ch+var_4] eax +
push ebx  +
push ebp  +
mov ebp ds:SetLastError +
xorps xmm0 xmm0 +
push esi  +
mov esi [esp+38h+arg_0] +
xor ebx ebx +
push edi  +
push ebx  +
mov [esp+40h+var_24] esi +
xor edi edi +
mov [esp+40h+var_28] 0 +
mov [esp+40h+var_20] 1Ch +
mov [esp+40h+var_1C] 0 +
movups oword ptr [esp+40h+var_18] xmm0 +
mov [esp+40h+var_8] 0 +
call ebp  +
test esi esi +
jnz loc_40381F  +
push 0A0h  +
call ebp  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+2Ch+var_4] +
xor ecx esp +
call sub_403D40  +
add esp 2Ch +
retn   +
mov esi dword_41F4EC +
test esi esi +
jnz loc_40385E  +
push offset aSetupapi_dll  +
call loc_401A10  +
add esp 4 +
mov [esp+3Ch+uBytes] eax +
test eax eax +
jz loc_40384D  +
push esi  +
push esi  +
push eax  +
call ds:LoadLibraryExW  +
mov esi eax +
mov eax [esp+3Ch+uBytes] +
push eax  +
call ds:LocalFree  +
mov dword_41F4EC esi +
test esi esi +
jz loc_40380A  +
mov eax ds:GetProcAddress +
cmp dword_41F708 ebx +
jnz loc_403887  +
push offset aSetupdigetdevi  +
push esi  +
call eax  +
mov dword_41F708 eax +
test eax eax +
jz loc_40380A  +
mov esi dword_41F4EC +
mov eax ds:GetProcAddress +
cmp dword_41F710 ebx +
jnz loc_4038A4  +
push offset aSetupdidestroy  +
push esi  +
call eax  +
mov dword_41F710 eax +
test eax eax +
jz loc_40380A  +
lea eax [esp+3Ch+var_20] +
push eax  +
lea eax [esp+40h+var_28] +
push eax  +
push [esp+44h+var_24]  +
call loc_402280  +
add esp 0Ch +
test eax eax +
jz loc_40380A  +
mov esi [esp+3Ch+var_28] +
lea eax [esp+3Ch+uBytes] +
push eax  +
push 0  +
push 0  +
push 0  +
push 9  +
lea eax [esp+50h+var_20] +
mov [esp+50h+uBytes] ebx +
push eax  +
push esi  +
call dword_41F708  +
mov eax [esp+3Ch+uBytes] +
test eax eax +
jz loc_403925  +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jz loc_403925  +
push 0  +
push [esp+40h+uBytes]  +
lea eax [esp+44h+var_20] +
push edi  +
push 0  +
push 9  +
push eax  +
push esi  +
call dword_41F708  +
test eax eax +
jz loc_403925  +
push edi  +
push offset aSystemCurrentc  +
call sub_402E50  +
add esp 8 +
mov ebx eax +
push edi  +
call ds:LocalFree  +
test esi esi +
jz loc_403937  +
push esi  +
call dword_41F710  +
test ebx ebx +
jz loc_40393F  +
push 0  +
call ebp  +
mov ecx [esp+3Ch+var_4] +
mov eax ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_403D40  +
add esp 2Ch +
retn   +
***
sub esp 30h +
mov eax dword_41D020 +
xor eax esp +
mov [esp+30h+var_4] eax +
push ebx  +
mov ebx [esp+34h+arg_0] +
xorps xmm0 xmm0 +
push ebp  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor esi esi +
push esi  +
mov [esp+44h+var_2C] ebx +
xor ebp ebp +
mov [esp+44h+var_28] 0 +
mov [esp+44h+var_20] 1Ch +
mov [esp+44h+var_1C] 0 +
movups oword ptr [esp+44h+var_18] xmm0 +
mov [esp+44h+var_8] 0 +
mov [esp+44h+var_24] esi +
call edi  +
push 1770h  +
call loc_402AD0  +
add esp 4 +
test eax eax +
jnz loc_4039DD  +
push 78h  +
call edi  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+30h+var_4] +
xor ecx esp +
call sub_403D40  +
add esp 30h +
retn   +
test ebx ebx +
jnz loc_4039FD  +
push 0A0h  +
call edi  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+30h+var_4] +
xor ecx esp +
call sub_403D40  +
add esp 30h +
retn   +
mov eax dword_41F4EC +
test eax eax +
jnz loc_403A1D  +
push eax  +
push offset aSetupapi_dll  +
call sub_402C20  +
add esp 8 +
mov dword_41F4EC eax +
test eax eax +
jz loc_4039C8  +
mov ebx ds:GetProcAddress +
cmp dword_41F70C esi +
jnz loc_403A41  +
push offset aSetupdigetde_1  +
push eax  +
call ebx  +
mov dword_41F70C eax +
test eax eax +
jz loc_4039C8  +
mov eax dword_41F4EC +
cmp dword_41F714 esi +
jnz loc_403A63  +
push offset aSetupgetinfdri  +
push eax  +
call ebx  +
mov dword_41F714 eax +
test eax eax +
jz loc_4039C8  +
mov eax dword_41F4EC +
cmp dword_41F710 esi +
jnz loc_403A80  +
push offset aSetupdidestroy  +
push eax  +
call ebx  +
mov dword_41F710 eax +
test eax eax +
jz loc_4039C8  +
lea eax [esp+40h+var_20] +
push eax  +
lea eax [esp+44h+var_28] +
push eax  +
push [esp+48h+var_2C]  +
call loc_402280  +
add esp 0Ch +
test eax eax +
jz loc_4039C8  +
mov ebx [esp+40h+var_28] +
lea eax [esp+40h+var_30] +
push 0  +
push eax  +
push 0  +
push 0  +
lea eax [esp+50h+var_2C] +
mov [esp+50h+var_30] esi +
push eax  +
push offset unk_41530C  +
lea eax [esp+58h+var_20] +
mov [esp+58h+var_2C] esi +
push eax  +
push ebx  +
call dword_41F70C  +
mov eax [esp+40h+var_30] +
test eax eax +
jz loc_403B67  +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebp eax +
test ebp ebp +
jz loc_403B67  +
push 0  +
push 0  +
push [esp+48h+var_30]  +
lea eax [esp+4Ch+var_2C] +
push ebp  +
push eax  +
push offset unk_41530C  +
lea eax [esp+58h+var_20] +
push eax  +
push ebx  +
call dword_41F70C  +
test eax eax +
jz loc_403B67  +
lea eax [esp+40h+var_30] +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push ebp  +
call dword_41F714  +
mov eax [esp+40h+var_30] +
test eax eax +
jz loc_403B67  +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_403B67  +
push 0  +
push [esp+44h+var_30]  +
push esi  +
push 0  +
push 0  +
push ebp  +
call dword_41F714  +
test eax eax +
jz loc_403B67  +
push esi  +
call sub_402500  +
sub eax esi +
sar eax 1 +
dec eax  +
push eax  +
push esi  +
call loc_402F90  +
add esp 0Ch +
mov [esp+40h+var_24] eax +
push esi  +
mov esi ds:LocalFree +
call esi  +
push ebp  +
call esi  +
test ebx ebx +
jz loc_403B7E  +
push ebx  +
call dword_41F710  +
mov esi [esp+40h+var_24] +
test esi esi +
jz loc_403B8A  +
push 0  +
call edi  +
mov ecx [esp+40h+var_4] +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_403D40  +
add esp 30h +
retn   +
***
push 0  +
call ds:SetLastError  +
push 0  +
push 0  +
call ds:GetSystemDirectoryW  +
mov edi eax +
lea ecx [edi+edi] +
push ecx  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_403BE6  +
push edi  +
push esi  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_403BDD  +
cmp edi eax +
jb loc_403BDD  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
push esi  +
call ds:LocalFree  +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
mov edi ds:SetLastError +
push 0  +
call edi  +
mov esi [esp+arg_0] +
test esi esi +
jz loc_403C62  +
movzx eax word ptr [esi] +
cmp eax 5Ch +
jz loc_403C33  +
cmp eax 2Fh +
jz loc_403C33  +
push eax  +
call sub_407846  +
add esp 4 +
test eax eax +
jz loc_403C62  +
cmp word ptr [esi+2] 3Ah +
jnz loc_403C62  +
movzx eax word ptr [esi+4] +
cmp eax 5Ch +
jz loc_403C33  +
cmp eax 2Fh +
jnz loc_403C62  +
push esi  +
call loc_402880  +
add esp 4 +
test eax eax +
jnz loc_403C4C  +
push 0A1h  +
call edi  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov eax [esp+arg_4] +
and eax 0FFFFE0F7h +
push eax  +
push 0  +
push esi  +
call ds:LoadLibraryExW  +
pop edi  +
pop esi  +
retn   +
push 0A0h  +
call edi  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
cmp ecx dword_41D020 +
jnz loc_403D4B  +
retn   +
jmp sub_4044EB  +
***
push esi  +
push 2  +
call sub_407F9F  +
call sub_4047AA  +
push eax  +
call sub_408940  +
call sub_408AB0  +
mov esi eax +
call sub_404970  +
push 1  +
mov [esi] eax +
call sub_404087  +
add esp 0Ch +
pop esi  +
test al al +
jz loc_403DFC  +
fnclex   +
call sub_404A19  +
push offset sub_404A50  +
call sub_40423B  +
call sub_4047A6  +
push eax  +
call sub_408358  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_403DFC  +
call sub_4047B0  +
call sub_404800  +
test eax eax +
jz loc_403DCB  +
push offset sub_404970  +
call sub_408049  +
pop ecx  +
call nullsub_1  +
call nullsub_1  +
call sub_4047BC  +
call sub_404970  +
push eax  +
call sub_408A19  +
pop ecx  +
call sub_4074A0  +
test al al +
jz loc_403DF4  +
call sub_408572  +
call sub_404970  +
xor eax eax +
retn   +
***
push 7  +
call sub_404818  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_404973  +
test al al +
jnz loc_403F7F  +
push dword ptr [ebp-20h]  +
call sub_4088DC  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_403F8A  +
call sub_4088BE  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_404AD6  +
retn   +
***
call sub_404753  +
push [ebp+arg_0]  +
mov eax dword_41D020 +
mov eax [ebp+arg_0] +
call sub_404C8F  +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
call sub_404A90  +
call sub_404C8F  +
cmp byte_41F8C5 0 +
mov eax dword_41D020 +
push [ebp+arg_0]  +
call loc_404277  +
push 0  +
call sub_404087  +
pop ecx  +
test al al +
jz loc_40426F  +
push offset loc_404340  +
call sub_40423B  +
pop ecx  +
xor eax eax +
retn   +
push 7  +
call sub_404818  +
int 3  +
***
push ebx  +
push esi  +
push edi  +
push 0  +
push 0FA0h  +
push offset stru_41F8C8  +
call sub_405A95  +
add esp 0Ch +
push offset aApiMsWinCoreSy  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jnz loc_4042B0  +
push offset aKernel32_dll_0  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jz loc_40432F  +
push offset aInitializecond  +
push esi  +
call ds:GetProcAddress  +
push offset aSleepcondition  +
push esi  +
mov ebx eax +
call ds:GetProcAddress  +
push offset aWakeallconditi  +
push esi  +
mov edi eax +
call ds:GetProcAddress  +
mov esi eax +
test ebx ebx +
jz loc_404315  +
test edi edi +
jz loc_404315  +
test esi esi +
jz loc_404315  +
and hEvent 0 +
mov ecx ebx +
push offset unk_41F8E0  +
call j_nullsub_1  +
call ebx  +
push edi  +
call sub_403FB8  +
push esi  +
mov dword_41F8E8 eax +
call sub_403FB8  +
pop ecx  +
pop ecx  +
mov dword_41F8EC eax +
jmp loc_40432B  +
xor eax eax +
push eax  +
push eax  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov hEvent eax +
test eax eax +
jz loc_40432F  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 7  +
call sub_404818  +
call sub_4043E1  +
push esi  +
retn   +
***
retn   +
***
cmp hEvent 0 +
push esi  +
jnz loc_404477  +
mov esi dword_41D020 +
mov ecx esi +
push [ebp+dwMilliseconds]  +
xor esi dword_41F8E8 +
and ecx 1Fh +
ror esi cl +
push offset stru_41F8C8  +
push offset unk_41F8E0  +
mov ecx esi +
call j_nullsub_1  +
call esi  +
test eax eax +
setnz al  +
jmp loc_404499  +
call sub_40442E  +
push 0  +
push [ebp+dwMilliseconds]  +
push hEvent  +
call ds:WaitForSingleObjectEx  +
mov esi eax +
call sub_4043E1  +
test esi esi +
setz al  +
pop esi  +
pop ebp  +
retn   +
***
test [ebp+arg_0] 1 +
push 0  +
sub esp 324h +
push 17h  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_404504  +
push 2  +
pop ecx  +
int 29h  +
mov dword_41F9F8 eax +
mov dword_41F9F4 ecx +
mov dword_41F9F0 edx +
mov dword_41F9EC ebx +
mov dword_41F9E8 esi +
mov dword_41F9E4 edi +
mov word_41FA10 ss +
mov word_41FA04 cs +
mov word_41F9E0 ds +
mov word_41F9DC es +
mov word_41F9D8 fs +
mov word_41F9D4 gs +
pushf   +
pop dword_41FA08  +
mov eax [ebp+0] +
mov dword_41F9FC eax +
mov eax [ebp+4] +
mov dword_41FA00 eax +
lea eax [ebp+arg_0] +
mov dword_41FA0C eax +
mov eax [ebp+var_324] +
mov dword_41F948 10001h +
mov eax dword_41FA00 +
mov dword_41F904 eax +
mov dword_41F8F8 0C0000409h +
mov dword_41F8FC 1 +
mov dword_41F908 1 +
push 4  +
pop eax  +
imul eax eax +
mov dword_41F90C[eax] 2 +
push 4  +
pop eax  +
imul eax eax +
mov ecx dword_41D020 +
mov [ebp+eax+var_8] ecx +
push 4  +
pop eax  +
shl eax 0 +
mov ecx dword_41D024 +
mov [ebp+eax+var_8] ecx +
push offset ExceptionInfo  +
call sub_4044C3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 31Ch +
push 17h  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_40460B  +
mov ecx [ebp+arg_0] +
int 29h  +
mov dword_41F9F8 eax +
mov dword_41F9F4 ecx +
mov dword_41F9F0 edx +
mov dword_41F9EC ebx +
mov dword_41F9E8 esi +
mov dword_41F9E4 edi +
mov word_41FA10 ss +
mov word_41FA04 cs +
mov word_41F9E0 ds +
mov word_41F9DC es +
mov word_41F9D8 fs +
mov word_41F9D4 gs +
pushf   +
pop dword_41FA08  +
mov eax [ebp+0] +
mov dword_41F9FC eax +
mov eax [ebp+4] +
mov dword_41FA00 eax +
lea eax [ebp+arg_0] +
mov dword_41FA0C eax +
mov eax [ebp+var_31C] +
mov eax dword_41FA00 +
mov dword_41F904 eax +
mov dword_41F8F8 0C0000409h +
mov dword_41F8FC 1 +
mov dword_41F908 1 +
push 4  +
pop eax  +
imul eax eax +
mov ecx [ebp+arg_0] +
mov dword_41F90C[eax] ecx +
push offset ExceptionInfo  +
call sub_4044C3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
sub esp 14h +
mov eax dword_41D020 +
retn   +
***
push 0  +
call sub_408FC6  +
add esp 0Ch +
test eax eax +
jnz loc_4047D5  +
retn   +
push 7  +
call sub_404818  +
int 3  +
mov eax offset unk_41FC20 +
retn   +
***
xor eax eax +
sub esp 324h +
sub esp 44h +
push 44h  +
lea eax [ebp+StartupInfo] +
push 0  +
push eax  +
call sub_404CB0  +
add esp 0Ch +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_404960  +
movzx eax [ebp+StartupInfo.wShowWindow] +
jmp loc_404963  +
push 0Ah  +
pop eax  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx eax +
test ecx ecx +
jnz loc_404984  +
xor al al +
retn   +
mov eax 5A4Dh +
cmp [ecx] ax +
jnz loc_404981  +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_404981  +
mov ecx 10Bh +
cmp [eax+18h] cx +
jnz loc_404981  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_404981  +
cmp dword ptr [eax+0E8h] 0 +
setnz al  +
retn   +
***
push offset sub_4049D0  +
call ds:SetUnhandledExceptionFilter  +
retn   +
***
mov eax [ebp+arg_0] +
and dword_41FC28 0 +
mov esi offset unk_41B580 +
mov ebx offset unk_41B580 +
cmp esi ebx +
jnb loc_404A41  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_404A39  +
mov ecx edi +
call j_nullsub_1  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_404A2A  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov esi offset unk_41B588 +
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
push ebp  +
mov ebp esp +
and dword_41FC2C 0 +
sub esp 24h +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_41D030 ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_404C88  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
or dword_41D030 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_41FC2C ebx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-20h] +
mov [ebp-0Ch] eax +
xor edi 756E6547h +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-1Ch] +
xor eax 6C65746Eh +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
or eax [ebp-8] +
or eax edi +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_404BCC  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_404BBB  +
cmp eax 20660h +
jz loc_404BBB  +
cmp eax 20670h +
jz loc_404BBB  +
cmp eax 30650h +
jz loc_404BBB  +
cmp eax 30660h +
jz loc_404BBB  +
cmp eax 30670h +
jnz loc_404BCC  +
mov edi dword_41FC30 +
or edi 1 +
mov dword_41FC30 edi +
jmp loc_404BD2  +
mov edi dword_41FC30 +
cmp dword ptr [ebp-0Ch] 7 +
mov eax [ebp-1Ch] +
mov [ebp-4] eax +
jl loc_404C10  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_404C13  +
or edi 2 +
mov dword_41FC30 edi +
jmp loc_404C13  +
mov ebx [ebp-10h] +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_404C88  +
or dword_41D030 4 +
mov dword_41FC2C 2 +
test eax 8000000h +
jz loc_404C88  +
test eax 10000000h +
jz loc_404C88  +
xor ecx ecx +
xor eax eax +
cmp dword_4202E0 eax +
setnz al  +
retn   +
***
mov ecx [esp+arg_8] +
movzx eax [esp+arg_4] +
mov edx edi +
mov edi [esp+arg_0] +
test ecx ecx +
jz loc_404E03  +
imul eax eax +
cmp ecx 20h +
jle loc_404DB5  +
cmp ecx 80h +
jl loc_404D6D  +
bt dword_41FC30 1 +
jnb loc_404CF5  +
stos   +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
bt dword_41D030 1 +
jnb loc_404DB5  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
add ecx edi +
movups oword ptr [edi] xmm0 +
add edi 10h +
and edi 0FFFFFFF0h +
sub ecx edi +
cmp ecx 80h +
jle loc_404D6D  +
lea esp [esp+0] +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
sub ecx 80h +
test ecx 0FFFFFF00h +
jnz loc_404D30  +
jmp loc_404D80  +
bt dword_41D030 1 +
jnb loc_404DB5  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
cmp ecx 20h +
jb loc_404DA1  +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
add edi 20h +
sub ecx 20h +
cmp ecx 20h +
jnb loc_404D85  +
test ecx 1Fh +
jz loc_404E03  +
lea edi [ecx+edi-20h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
test ecx 3 +
jz loc_404DCB  +
mov [edi] al +
inc edi  +
sub ecx 1 +
test ecx 3 +
jnz loc_404DBD  +
test ecx 4 +
jz loc_404DDB  +
mov [edi] eax +
add edi 4 +
sub ecx 4 +
test ecx 0FFFFFFF8h +
jz loc_404E03  +
lea esp [esp+0] +
lea ebx [ebx+0] +
mov [edi] eax +
mov [edi+4] eax +
add edi 8 +
sub ecx 8 +
test ecx 0FFFFFFF8h +
jnz loc_404DF0  +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword_41FC2C 2 +
jge loc_404E46  +
mov ecx [ebp+8] +
mov edx ecx +
movzx eax word ptr [ecx] +
add ecx 2 +
test ax ax +
jnz loc_404E1E  +
mov ax [ebp+0Ch] +
sub ecx 2 +
cmp ecx edx +
jz loc_404E39  +
cmp [ecx] ax +
jnz loc_404E2D  +
cmp [ecx] ax +
jnz loc_404E42  +
mov eax ecx +
jmp loc_404EA8  +
xor eax eax +
jmp loc_404EA8  +
mov edx [ebp+8] +
mov cx [ebp+0Ch] +
jmp loc_404E61  +
movzx eax word ptr [edx] +
cmp ax cx +
jnz loc_404E59  +
mov esi edx +
test ax ax +
jz loc_404EA6  +
add edx 2 +
lea eax [edx+1] +
test al 0Eh +
jnz loc_404E4F  +
xor eax eax +
cmp ax cx +
jnz loc_404E8D  +
mov eax 0FFFF0001h +
movd xmm1 eax +
jmp loc_404E7D  +
add edx 10h +
movups xmm0 oword ptr [edx] +
movzx eax cx +
movd xmm0 eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi [ebx+0Ch] +
xor eax eax +
movzx ecx word ptr [edi] +
mov [ebp-8] ecx +
cmp ax cx +
jnz loc_404EDD  +
mov eax [ebx+8] +
jmp loc_405125  +
mov eax dword_41FC2C +
cmp eax 1 +
jle loc_404FD5  +
mov eax edi +
and eax 0FFFh +
push 2  +
pop esi  +
cmp eax 0FF0h +
ja loc_404F01  +
movups xmm0 oword ptr [edi] +
jmp loc_404F2C  +
push 8  +
pxor xmm0 xmm0 +
movzx ecx cx +
pop edx  +
movzx eax cx +
psrldq xmm0 2 +
pinsrw xmm0 eax +
xor eax eax +
cmp ax cx +
jz loc_404F24  +
add edi esi +
movzx ecx word ptr [edi] +
sub edx 1 +
jnz loc_404F0B  +
mov ecx [ebp-8] +
mov edx [ebx+8] +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_404F98  +
mov ecx [ebp-8] +
jmp loc_404F2F  +
***
mov ecx [ebx+0Ch] +
mov edi edx +
mov eax edi +
mov [ebp-4] ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_404FAF  +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_404FAF  +
movups xmm1 oword ptr [ecx] +
movzx eax word ptr [edx] +
xor edi edi +
cmp di ax +
jz loc_405123  +
cmp ax cx +
jz loc_404F5C  +
add edx esi +
jmp loc_404F2F  +
***
movzx eax word ptr [ecx] +
and dword ptr [ebp-4] 0 +
cmp [ebp-4] ax +
jz loc_404FCE  +
cmp [edi] ax +
jnz loc_404FC7  +
add edi esi +
add ecx esi +
jmp loc_404F61  +
***
add edx esi +
jmp loc_404F48  +
***
mov eax edx +
jmp loc_405125  +
jnz loc_4050BE  +
movzx eax cx +
pxor xmm3 xmm3 +
mov ecx [ebx+8] +
push 2  +
pop esi  +
movd xmm0 eax +
pshuflw xmm0 xmm0 +
pshufd xmm4 xmm0 +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_40502E  +
movups xmm1 oword ptr [ecx] +
movaps xmm0 xmm3 +
pcmpeqw xmm0 xmm1 +
pcmpeqw xmm1 xmm4 +
por xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_405023  +
add ecx 10h +
jmp loc_404FF6  +
***
bsf eax eax +
mov [ebp-8] eax +
shr eax 1 +
lea ecx [ecx+eax*2] +
movzx eax word ptr [ecx] +
xor edx edx +
cmp dx ax +
jz loc_405123  +
movzx edx word ptr [edi] +
cmp dx ax +
jnz loc_4050B3  +
mov edx ecx +
mov eax edi +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_405098  +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_405098  +
movups xmm2 oword ptr [edi] +
movups xmm1 oword ptr [edx] +
movaps xmm0 xmm3 +
pcmpeqw xmm1 xmm2 +
pcmpeqw xmm0 xmm2 +
pcmpeqw xmm1 xmm3 +
por xmm1 xmm0 +
pmovmskb eax xmm1 +
test eax eax +
jnz loc_40508B  +
add edx 10h +
add edi 10h +
jmp loc_405046  +
***
bsf eax eax +
mov [ebp-8] eax +
and eax 0FFFFFFFEh +
add edx eax +
add edi eax +
movzx eax word ptr [edi] +
and dword ptr [ebp-8] 0 +
cmp [ebp-8] ax +
jz loc_4050BA  +
cmp [edx] ax +
jnz loc_4050B0  +
add edx esi +
add edi esi +
jmp loc_405046  +
***
mov edi [ebx+0Ch] +
add ecx esi +
jmp loc_404FF6  +
***
mov eax ecx +
jmp loc_405125  +
mov edx [ebx+8] +
movzx eax word ptr [edx] +
test ax ax +
jz loc_405123  +
and dword ptr [ebp-8] 0 +
mov ecx eax +
mov eax edx +
sub eax edi +
mov [ebp-4] eax +
push 2  +
pop esi  +
test cx cx +
jz loc_405105  +
movzx ecx word ptr [edi] +
test cx cx +
jz loc_404FCE  +
movzx ecx word ptr [eax+edi] +
movzx eax word ptr [edi] +
sub ecx eax +
mov eax [ebp-4] +
mov ecx [ebp-8] +
jnz loc_405108  +
add edi esi +
cmp [eax+edi] cx +
jnz loc_4050DE  +
jmp loc_405108  +
mov ecx [ebp-8] +
cmp [edi] cx +
jz loc_404FCE  +
mov edi [ebx+0Ch] +
add edx esi +
add eax esi +
mov [ebp-4] eax +
movzx ecx word ptr [edx] +
test cx cx +
jnz loc_4050DE  +
xor eax eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_405150  +
cmp edi eax +
jb loc_4053E4  +
cmp ecx 20h +
jb loc_40562B  +
cmp ecx 80h +
jnb loc_405174  +
bt dword_41D030 1 +
jb loc_4055FD  +
jmp loc_405357  +
bt dword_41FC30 1 +
jnb loc_405187  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_4051A0  +
bt dword_41D030 1 +
jb loc_405580  +
bt dword_41FC30 0 +
jnb loc_405357  +
test edi 3 +
jnz loc_405357  +
test esi 3 +
jnz loc_405372  +
bt edi 2 +
jnb loc_4051D9  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_4051F0  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_40525D  +
bt esi 3 +
jnb loc_4052B6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_40530C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_405324  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_40530C  +
***
bt ecx 2 +
jnb loc_405337  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_40534E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_405394[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_405372  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_40535F  +
mov edx ecx +
cmp ecx 20h +
jb loc_40562B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_405394[edx*4]  +
jmp dword ptr ds:loc_4053A4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_405544  +
bt dword_41D030 1 +
jb loc_405495  +
test edi 3 +
jz loc_40541D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_405410  +
cmp ecx 20h +
jb loc_405544  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_405440[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_4054AC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_40549D  +
cmp ecx 80h +
jb loc_40551C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_4054AC  +
cmp ecx 20h +
jb loc_405544  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_405521  +
test ecx 0FFFFFFFCh +
jz loc_405561  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_40554C  +
test ecx ecx +
jz loc_405574  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_405565  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_405580  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_405670  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_4055FD  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_4055A0  +
test ecx ecx +
jz loc_405660  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_40562B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_405610  +
and ecx 1Fh +
jz loc_405660  +
mov eax ecx +
shr ecx 2 +
jz loc_405646  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_405637  +
mov ecx eax +
and ecx 3 +
jz loc_405660  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_40564D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_40568C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_405683  +
shr eax 2 +
jz loc_40569E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_405691  +
pop ecx  +
jmp loc_40558D  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_4056CF  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_403D40  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_403D40  +
***
sub esp 1Ch +
call sub_405DF5  +
cmp [ebp+arg_0] 0 +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax dword_41D020 +
cmp [ebp+arg_0] 0 +
jnz loc_405B45  +
push esi  +
mov esi offset unk_41FC34 +
cmp dword ptr [esi] 0 +
jz loc_405B39  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_405B36  +
push dword ptr [esi]  +
call ds:FreeLibrary  +
and dword ptr [esi] 0 +
add esi 4 +
cmp esi offset unk_41FC40 +
jnz loc_405B24  +
pop esi  +
pop ebp  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_405C25  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_403D40  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_405B50  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
push ebx  +
mov ebp edx +
xor eax eax +
xor ebx ebx +
xor edx edx +
xor esi esi +
xor edi edi +
call ecx  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov ebp edx +
mov esi ecx +
mov eax ecx +
push 1  +
call sub_405F3C  +
xor eax eax +
xor ebx ebx +
xor ecx ecx +
xor edx edx +
xor edi edi +
jmp esi  +
***
push ebx  +
push esi  +
push edi  +
push 0  +
push edx  +
push offset loc_405C99  +
push ecx  +
call ds:RtlUnwind  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edx  +
mov eax ds:off_415148 +
mov eax ds:off_415148 +
cmp eax offset nullsub_1 +
jz loc_405D12  +
mov ecx large fs:18h +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
cmp eax [ecx+8] +
jb loc_405D0D  +
cmp eax [ecx+4] +
jbe loc_405D12  +
push 0Dh  +
pop ecx  +
int 29h  +
pop ebp  +
retn   +
***
mov eax [ebp+lpMem] +
mov dword_41D040 eax +
mov eax dword_41D040 +
mov edi offset stru_41FC7C +
test esi esi +
mov eax dword_41D020 +
and eax 1Fh +
push 20h  +
pop ecx  +
sub ecx eax +
xor eax eax +
ror eax cl +
xor eax dword_41D020 +
mov dword_41FC98 eax +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_405E39  +
push dword ptr [ebp+8]  +
call ds:RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_405E41  +
push large dword ptr fs:0  +
mov eax dword_41D020 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_405EF8  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_405ECB  +
cmp esi [esp+18h+arg_4] +
jbe loc_405EF8  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_405EF6  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_405F3C  +
mov eax [ebx+esi*4+8] +
call sub_405F5B  +
jmp loc_405EAF  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_405E41 +
jnz locret_405F2C  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_405F2C  +
mov eax 1 +
retn   +
***
push ebx  +
push ecx  +
mov ebx offset unk_41D050 +
jmp loc_405F47  +
***
mov ebx offset unk_41D050 +
retn   +
***
mov eax dword_41FCD8 +
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset unk_41D060 +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_404A90  +
mov eax [ebp+10h] +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_4071B6  +
test al al +
jnz loc_4066A5  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_40676C  +
call sub_4094BD  +
mov dword ptr [eax] 16h +
call sub_409400  +
or eax 0FFFFFFFFh +
jmp loc_406782  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_406759  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_40676C  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_406586  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_4066B1  +
cmp eax 7 +
ja loc_4066C1  +
jmp ds:off_406788[eax*4]  +
mov ecx esi +
call sub_4067E5  +
jmp loc_406751  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_406759  +
mov ecx esi +
call sub_4067A8  +
jmp loc_406751  +
mov ecx esi +
call sub_406C72  +
jmp loc_406751  +
mov [esi+28h] ebx +
jmp loc_406759  +
mov ecx esi +
call sub_4068B1  +
jmp loc_406751  +
mov ecx esi +
call sub_4068D9  +
jmp loc_406751  +
mov ecx esi +
call sub_406A42  +
test al al +
jz loc_4066C1  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_4066D4  +
inc dword ptr [esi+10h]  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_4066C9  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
movsx eax byte ptr [ecx+31h] +
call sub_406804  +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
mov al [ecx+31h] +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_406CC3  +
jmp ds:off_406CC9[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_406CB3  +
push 8  +
jmp loc_406CB3  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov eax [ecx] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax [ebp+arg_14] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_C] +
mov [ebp+var_14] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_10] edx +
mov [ebp+var_8] ecx +
mov [ebp+var_20] eax +
test ecx ecx +
jnz loc_40743D  +
call sub_4094BD  +
mov dword ptr [eax] 16h +
call sub_409400  +
or eax 0FFFFFFFFh +
jmp loc_407479  +
test edx edx +
jz loc_407428  +
lea eax [ebp+var_8] +
mov [ebp+var_18] ecx +
mov [ebp+var_38] eax +
lea eax [ebp+var_C] +
mov [ebp+var_34] eax +
lea eax [ebp+var_24] +
mov [ebp+var_30] eax +
lea eax [ebp+var_10] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_14] +
mov [ebp+var_28] eax +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_38] +
mov [ebp+var_1C] ecx +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp-1] +
call sub_4060B4  +
mov esp ebp +
pop ebp  +
retn   +
***
call ds:GetCommandLineA  +
mov dword_41FCF0 eax +
call ds:GetCommandLineW  +
mov dword_41FCF4 eax +
mov al 1 +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_407D81  +
sub eax 8 +
cmp dword ptr [eax] 0DDDDh +
jnz loc_407D81  +
push eax  +
call sub_4090B8  +
pop ecx  +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
test eax eax +
jnz loc_407DAC  +
call sub_4094BD  +
mov dword ptr [eax] 16h +
call sub_409400  +
xor eax eax +
pop ebp  +
retn   +
***
push edi  +
xor edi edi +
mov edx eax +
cmp [eax] di +
jz loc_407DD6  +
push esi  +
movzx ecx word ptr [edx] +
push 61h  +
pop esi  +
cmp si cx +
ja loc_407DCD  +
cmp ecx 7Ah +
ja loc_407DCD  +
add ecx 0FFFFFFE0h +
mov [edx] cx +
add edx 2 +
cmp [edx] di +
jnz loc_407DB7  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_41D020 +
mov ecx eax +
xor eax dword_41FD00 +
and ecx 1Fh +
ror eax cl +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
mov ecx offset dword_41FD00 +
call sub_40C079  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_407FAE  +
pop ecx  +
mov dword_41FD00 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword_41FE10 0 +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
jmp loc_4084E6  +
mov ecx [ebp+arg_0] +
push esi  +
call ds:off_415148  +
call [ebp+arg_0]  +
pop ecx  +
add esi 4 +
cmp esi edi +
jnz loc_4084D5  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp eax dword_41FE1C +
jz loc_408519  +
push eax  +
call sub_40848D  +
pop ecx  +
pop ebp  +
retn   +
***
call sub_4084BC  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
mov eax [ebp+10h] +
call sub_4136D0  +
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_408892  +
push esi  +
push offset aCorexitprocess  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_408891  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_415148  +
call esi  +
pop esi  +
cmp [ebp+hLibModule] 0 +
jz loc_4088A1  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
mov eax [ebp+10h] +
xor eax eax +
mov ecx offset dword_41FE30 +
inc eax  +
xchg eax [ecx] +
retn   +
***
mov edi edi +
mov edi edi +
retn   +
***
call sub_4094BD  +
mov dword ptr [eax] 16h +
call sub_409400  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
call sub_404A90  +
mov eax [ebp+10h] +
call sub_404A90  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
lea eax [ebp+arg_0] +
mov [ebp+var_14] eax +
lea ecx [ebp-1] +
push 2  +
lea eax [ebp+arg_4] +
mov [ebp+var_10] eax +
pop eax  +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_408B07  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_40C079  +
mov al 1 +
retn   +
***
mov [esp+4+var_4] offset unk_41FE48 +
call sub_408DFC  +
pop ecx  +
mov al 1 +
retn   +
***
call sub_40853B  +
mov al 1 +
retn   +
***
mov edi edi +
mov edi edi +
call sub_40D39A  +
call sub_40D41D  +
mov edi edi +
call sub_4136D0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40D5D8  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0FFFFFFFFh +
push edi  +
jz loc_409260  +
push [ebp+arg_0]  +
call sub_404A11  +
pop ecx  +
push 50h  +
lea eax [ebp+var_320] +
push 0  +
push eax  +
call sub_404CB0  +
push 2CCh  +
lea eax [ebp+var_2D0] +
push 0  +
push eax  +
call sub_404CB0  +
lea eax [ebp+var_320] +
add esp 18h +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_20C] eax +
mov [ebp+var_2D0] 10001h +
mov eax [eax-4] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_320] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_31C] eax +
mov eax [ebp+4] +
mov [ebp+var_314] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov edi eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_409367  +
test edi edi +
jnz loc_409367  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_409367  +
push [ebp+arg_0]  +
call sub_404A11  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
xor eax eax +
test eax eax +
mov edi edi +
mov edi edi +
call sub_40AAA9  +
call sub_40AAA9  +
push offset aLcmapstringex  +
push offset aLocalenametolc  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
call sub_4094EA  +
mov esi eax +
test esi esi +
jz loc_409904  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call ds:off_415148  +
call esi  +
jmp loc_40990D  +
push [ebp+arg_0]  +
call sub_40DE27  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax dword_41D020 +
mov edx offset dword_41FF30 +
push esi  +
and eax 1Fh +
xor esi esi +
push 20h  +
pop ecx  +
sub ecx eax +
mov eax offset unk_41FEA8 +
ror esi cl +
xor ecx ecx +
xor esi dword_41D020 +
cmp edx eax +
sbb edx edx +
and edx 0FFFFFFDEh +
add edx 22h +
inc ecx  +
mov [eax] esi +
lea eax [eax+4] +
cmp ecx edx +
jnz loc_40994E  +
mov al 1 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_409992  +
push esi  +
mov esi offset unk_41FE58 +
cmp dword ptr [esi] 0 +
jz loc_409986  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_409983  +
push dword ptr [esi]  +
call ds:FreeLibrary  +
and dword ptr [esi] 0 +
add esi 4 +
cmp esi offset unk_41FEA8 +
jnz loc_409971  +
pop esi  +
mov al 1 +
pop ebp  +
retn   +
***
mov eax dword_41FCDC +
mov eax [eax+esi*4] +
test eax eax +
jz loc_409A15  +
mov eax [eax+0Ch] +
shr eax 0Dh +
test al 1 +
jz loc_4099EC  +
mov eax dword_41FCDC +
push dword ptr [eax+esi*4]  +
call sub_40DEC9  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_4099EC  +
inc dword ptr [ebp-1Ch]  +
mov eax dword_41FCDC +
mov eax [eax+esi*4] +
add eax 20h +
push eax  +
call ds:DeleteCriticalSection  +
mov eax dword_41FCDC +
push dword ptr [eax+esi*4]  +
call sub_4090B8  +
pop ecx  +
mov eax dword_41FCDC +
and dword ptr [eax+esi*4] 0 +
inc esi  +
jmp loc_4099B5  +
***
pop ecx  +
call sub_404A90  +
mov eax [ebp+10h] +
call sub_404A90  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_409CA5  +
push esi  +
call sub_409B88  +
pop ecx  +
jmp loc_409CD3  +
push esi  +
call sub_409C2C  +
pop ecx  +
test eax eax +
jz loc_409CB5  +
or eax 0FFFFFFFFh +
jmp loc_409CD3  +
mov eax [esi+0Ch] +
shr eax 0Bh +
test al 1 +
jz loc_409CD1  +
push esi  +
call sub_40B622  +
push eax  +
call sub_40DFDC  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409CB0  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_41FF30[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_409E00  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_409E00  +
or byte ptr [esi+28h] 80h +
jmp loc_409E79  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_409E1B  +
sub eax 1 +
jz loc_409E17  +
sub eax 1 +
push 0FFFFFFF4h  +
jmp loc_409E1D  +
push 0FFFFFFF5h  +
jmp loc_409E1D  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_409E39  +
test ebx ebx +
jz loc_409E39  +
push ebx  +
call ds:GetFileType  +
jmp loc_409E3B  +
xor eax eax +
test eax eax +
jz loc_409E5B  +
movzx eax al +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_409E50  +
or byte ptr [esi+28h] 40h +
jmp loc_409E79  +
cmp eax 3 +
jnz loc_409E79  +
or byte ptr [esi+28h] 8 +
jmp loc_409E79  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax dword_41FCDC +
test eax eax +
jz loc_409E79  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_409DDA  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call sub_404A90  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push dword ptr [ebp+WideCharStr]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_40A228  +
add esp 14h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_41FC2C +
push esi  +
push edi  +
cmp eax 5 +
jl loc_40A3F1  +
mov esi [ebp+8] +
mov edx esi +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_40A393  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_40A3A6  +
cmp byte ptr [ecx] 0 +
jz loc_40A3A6  +
inc ecx  +
cmp ecx edi +
jnz loc_40A39C  +
sub ecx esi +
cmp ecx edx +
jnz loc_40A482  +
mov edi eax +
add ecx esi +
sub edi edx +
and edi 0FFFFFFE0h +
add edi ecx +
cmp eax 1 +
jl loc_40A468  +
mov esi [ebp+8] +
mov edx esi +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_40A412  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_40A425  +
cmp byte ptr [ecx] 0 +
jz loc_40A425  +
inc ecx  +
cmp ecx edi +
jnz loc_40A41B  +
sub ecx esi +
cmp ecx edx +
jnz loc_40A482  +
mov edi eax +
add ecx esi +
sub edi edx +
xorps xmm1 xmm1 +
and edi 0FFFFFFF0h +
add edi ecx +
cmp ecx edi +
jz loc_40A456  +
movaps xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_40A453  +
add ecx 10h +
cmp ecx edi +
jnz loc_40A43D  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_40A460  +
cmp byte ptr [ecx] 0 +
jz loc_40A464  +
inc ecx  +
cmp ecx eax +
jnz loc_40A45A  +
sub ecx esi +
jmp loc_40A482  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_40A480  +
cmp byte ptr [ecx] 0 +
jz loc_40A480  +
inc ecx  +
cmp ecx eax +
jnz loc_40A476  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_41FC2C +
push esi  +
push edi  +
cmp eax 5 +
jl loc_40A54F  +
mov ecx [ebp+8] +
test cl 1 +
jz loc_40A4C7  +
mov edx ecx +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
shr edx 1 +
cmp eax edx +
jnb loc_40A4E2  +
mov edx eax +
lea esi [ecx+edx*2] +
xor edi edi +
mov [ebp-4] esi +
mov esi [ebp+8] +
cmp esi [ebp-4] +
jz loc_40A4FF  +
cmp [ecx] di +
jz loc_40A4FF  +
add ecx 2 +
cmp ecx [ebp-4] +
jnz loc_40A4F2  +
sub ecx esi +
sar ecx 1 +
cmp ecx edx +
jnz loc_40A62B  +
sub eax edx +
lea ecx [esi+ecx*2] +
and eax 0FFFFFFE0h +
mov eax [ebp+0Ch] +
mov esi ecx +
lea eax [ecx+eax*2] +
cmp esi eax +
jz loc_40A4C0  +
xor edi edi +
cmp [ecx] di +
jz loc_40A4C0  +
add ecx 2 +
cmp ecx eax +
jnz loc_40A572  +
jmp loc_40A4C0  +
***
sub eax edx +
lea ecx [esi+ecx*2] +
and eax 0FFFFFFF0h +
xorps xmm1 xmm1 +
lea edx [ecx+eax*2] +
jmp loc_40A5E9  +
movaps xmm0 oword ptr [ecx] +
pcmpeqw xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_40A5ED  +
add ecx 10h +
cmp ecx edx +
jnz loc_40A5D7  +
mov eax [ebp+0Ch] +
lea eax [esi+eax*2] +
jmp loc_40A601  +
cmp [ecx] di +
jz loc_40A4C0  +
add ecx 2 +
cmp ecx eax +
jnz loc_40A5F5  +
jmp loc_40A4C0  +
***
call sub_404A90  +
mov eax [ebp+10h] +
call sub_404A90  +
mov eax [ebp+10h] +
call sub_404A90  +
mov eax [ebp+10h] +
call sub_404A90  +
mov eax [ebp+10h] +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
push 43h  +
mov [eax+18h] ecx +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset unk_416278 +
mov eax [ebp+arg_0] +
mov [eax+350h] ecx +
mov eax [ebp+arg_0] +
pop ecx  +
push 5  +
mov dword ptr [eax+48h] offset unk_41D218 +
mov eax [ebp+arg_0] +
mov [eax+6Ch] cx +
mov eax [ebp+arg_0] +
mov [eax+172h] cx +
lea ecx [ebp-1] +
mov eax [ebp+arg_0] +
and dword ptr [eax+34Ch] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_10] eax +
pop eax  +
mov [ebp+var_8] eax +
mov [ebp+var_14] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_40A633  +
lea eax [ebp+arg_0] +
mov [ebp+var_C] eax +
lea ecx [ebp-1] +
push 4  +
lea eax [ebp+arg_4] +
mov [ebp+var_8] eax +
pop eax  +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_40A727  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dwTlsIndex +
mov edi edi +
push ebx  +
push esi  +
push edi  +
call ds:GetLastError  +
mov esi eax +
xor ebx ebx +
mov eax dwTlsIndex +
cmp eax 0FFFFFFFFh +
jz loc_40AAE7  +
push eax  +
call sub_409751  +
mov edi eax +
test edi edi +
jz loc_40AAE2  +
cmp edi 0FFFFFFFFh +
jnz loc_40AB4F  +
push esi  +
call ds:SetLastError  +
mov edi ebx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov eax dwTlsIndex +
push 0FFFFFFFFh  +
push eax  +
call sub_4097A7  +
test eax eax +
jz loc_40AAD3  +
push 364h  +
push 1  +
call sub_4091DE  +
pop ecx  +
pop ecx  +
mov edi eax +
test edi edi +
jnz loc_40AB1C  +
push ebx  +
push dwTlsIndex  +
call sub_4097A7  +
push ebx  +
call sub_4090B8  +
pop ecx  +
jmp loc_40AAD3  +
push edi  +
push dwTlsIndex  +
call sub_4097A7  +
test eax eax +
jnz loc_40AB3B  +
push ebx  +
push dwTlsIndex  +
call sub_4097A7  +
push edi  +
jmp loc_40AB14  +
push offset dword_420140  +
push edi  +
call sub_40A777  +
push ebx  +
call sub_4090B8  +
add esp 0Ch +
test edi edi +
jz loc_40AAD3  +
push esi  +
call ds:SetLastError  +
jmp loc_40AADC  +
***
mov dwTlsIndex eax +
cmp eax 0FFFFFFFFh +
jnz loc_40AB77  +
xor al al +
retn   +
call sub_40AAA9  +
test eax eax +
jnz loc_40AB89  +
push eax  +
call sub_40AB90  +
pop ecx  +
jmp loc_40AB74  +
mov al 1 +
retn   +
***
mov eax dwTlsIndex +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_41D020 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jle loc_40BA19  +
push esi  +
push [ebp+lpSrcStr]  +
call loc_40A488  +
pop ecx  +
cmp eax esi +
pop ecx  +
lea esi [eax+1] +
jl loc_40BA19  +
mov esi eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push esi  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+arg_0]  +
call sub_409862  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax [ebp+8] +
jbe loc_40BA52  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
mov eax [ebp+10h] +
mov edi edi +
push esi  +
mov esi ecx +
mov ecx 101h +
push ecx  +
mov eax [esi] +
mov eax [eax] +
mov eax [eax+48h] +
add eax 18h +
push eax  +
push ecx  +
push dword_420148  +
call sub_40C6B2  +
mov eax [esi] +
mov ecx 100h +
push ecx  +
mov eax [eax] +
mov eax [eax+48h] +
add eax 119h +
push eax  +
push ecx  +
push dword_42014C  +
call sub_40C6B2  +
mov eax [esi+4] +
add esp 20h +
or ecx 0FFFFFFFFh +
mov eax [eax] +
mov eax [eax] +
xadd [eax] ecx +
jnz loc_40BFAD  +
mov eax [esi+4] +
mov eax [eax] +
cmp dword ptr [eax] offset unk_41D218 +
jz loc_40BFAD  +
push dword ptr [eax]  +
call sub_4090B8  +
pop ecx  +
mov eax [esi] +
mov edx [eax] +
mov eax [esi+4] +
mov ecx [eax] +
mov eax [edx+48h] +
mov [ecx] eax +
mov eax [esi] +
mov eax [eax] +
mov eax [eax+48h] +
inc dword ptr [eax]  +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
pop ecx  +
retn   +
***
mov eax esi +
call sub_404AD6  +
retn   +
***
cmp byte_420154 0 +
push eax  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
xor edi edi +
test esi esi +
jz loc_40C848  +
push esi  +
call sub_40C7A4  +
pop ecx  +
push edi  +
push edi  +
push edi  +
mov ebx eax +
push edi  +
sub ebx esi +
sar ebx 1 +
push ebx  +
push esi  +
push edi  +
push edi  +
call ds:WideCharToMultiByte  +
mov [ebp+cchMultiByte] eax +
test eax eax +
jz loc_40C848  +
push eax  +
call sub_4090F2  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_40C83D  +
xor eax eax +
push eax  +
push eax  +
push [ebp+cchMultiByte]  +
push edi  +
push ebx  +
push esi  +
push eax  +
push eax  +
call ds:WideCharToMultiByte  +
test eax eax +
jz loc_40C83D  +
mov ebx edi +
xor edi edi +
jmp loc_40C83F  +
xor ebx ebx +
push edi  +
call sub_4090B8  +
pop ecx  +
jmp loc_40C84A  +
mov ebx edi +
test esi esi +
jz loc_40C855  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset stru_420158 +
push eax  +
call ds:EnterCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
push 30h  +
push 40h  +
call sub_4091DE  +
mov edi eax +
xor ebx ebx +
mov [ebp+var_8] edi +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_40C95E  +
mov edi ebx +
jmp loc_40C9A6  +
lea eax [edi+0C00h] +
cmp edi eax +
jz loc_40C9A6  +
push esi  +
lea esi [edi+20h] +
mov edi eax +
push ebx  +
push 0FA0h  +
lea eax [esi-20h] +
push eax  +
call sub_409800  +
or dword ptr [esi-8] 0FFFFFFFFh +
mov [esi] ebx +
lea esi [esi+30h] +
mov [esi-2Ch] ebx +
lea eax [esi-20h] +
mov dword ptr [esi-28h] 0A0A0000h +
mov byte ptr [esi-24h] 0Ah +
and byte ptr [esi-23h] 0F8h +
mov [esi-22h] bl +
cmp eax edi +
jnz loc_40C96E  +
mov edi [ebp+var_8] +
pop esi  +
push ebx  +
call sub_4090B8  +
pop ecx  +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_404A90  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp $+5  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_40D323  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  esi +
cmp eax [ebp+arg_8] +
jnb loc_40D323  +
call sub_4094BD  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_40D365  +
push ebx  +
mov ebx [ebp+lpMem] +
push edi  +
test ebx ebx +
jz loc_40D337  +
push ebx  +
call sub_410D4F  +
pop ecx  +
mov edi eax +
jmp loc_40D339  +
xor edi edi +
imul esi [ebp+arg_8] +
push esi  +
push ebx  +
call sub_410D8D  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_40D361  +
cmp edi esi +
jnb loc_40D361  +
sub esi edi +
lea eax [ebx+edi] +
push esi  +
push 0  +
push eax  +
call sub_404CB0  +
add esp 0Ch +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
call ds:GetProcessHeap  +
test eax eax +
mov hHeap eax +
setnz al  +
retn   +
***
and hHeap 0 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+arg_0] esi +
jz loc_40D459  +
add esi 0FFFFFFFCh +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_40D44D  +
push 0  +
mov ecx edi +
call ds:off_415148  +
call edi  +
pop ecx  +
sub esi 8 +
lea eax [esi+4] +
cmp eax [ebp+arg_0] +
jnz loc_40D43A  +
pop edi  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
call sub_404A90  +
pop ecx  +
call sub_404A90  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push 3  +
pop eax  +
mov [ebp+var_8] eax +
lea ecx [ebp-1] +
mov [ebp+var_C] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp-1] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_40D514  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_40A95B  +
call sub_4136D0  +
mov esi [ebp+8] +
cmp byte ptr [ebp-1Dh] 0 +
jz locret_40D80C  +
push 3  +
call sub_40C8F1  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
pop ecx  +
call sub_404A90  +
mov ecx [ebp+10h] +
push dword ptr [ecx]  +
call sub_40CAA1  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
test edx edx +
jnz loc_40EBAF  +
call sub_4094BD  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_409400  +
mov eax esi +
jmp loc_40EC45  +
cmp [ebp+arg_4] 0 +
jbe loc_40EB99  +
mov ecx [ebp+arg_8] +
mov byte ptr [edx] 0 +
test ecx ecx +
jle loc_40EBC3  +
mov eax ecx +
jmp loc_40EBC5  +
xor eax eax +
inc eax  +
cmp [ebp+arg_4] eax +
ja loc_40EBD4  +
call sub_4094BD  +
push 22h  +
jmp loc_40EBA0  +
mov esi [ebp+arg_C] +
test esi esi +
jz loc_40EB99  +
push ebx  +
lea ebx [edx+1] +
mov eax ebx +
push edi  +
mov edi [esi+8] +
mov byte ptr [edx] 30h +
test ecx ecx +
jle loc_40EC02  +
mov bl [edi] +
test bl bl +
jz loc_40EBF5  +
inc edi  +
jmp loc_40EBF7  +
mov bl 30h +
mov [eax] bl +
inc eax  +
dec ecx  +
test ecx ecx +
jg loc_40EBEC  +
lea ebx [edx+1] +
mov byte ptr [eax] 0 +
test ecx ecx +
js loc_40EC1B  +
cmp byte ptr [edi] 35h +
jl loc_40EC1B  +
jmp loc_40EC13  +
mov byte ptr [eax] 30h +
dec eax  +
cmp byte ptr [eax] 39h +
jz loc_40EC10  +
inc byte ptr [eax]  +
cmp byte ptr [edx] 31h +
jnz loc_40EC25  +
inc dword ptr [esi+4]  +
jmp loc_40EC41  +
mov ecx ebx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40EC2A  +
sub ecx esi +
lea eax [ecx+1] +
push eax  +
push ebx  +
push edx  +
call loc_413940  +
add esp 0Ch +
pop edi  +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
cmp ecx 0FFFFFFFEh +
jnz loc_4106D9  +
call sub_4094BD  +
mov dword ptr [eax] 9 +
jmp loc_410711  +
test ecx ecx +
js loc_410701  +
cmp ecx dword_420130 +
jnb loc_410701  +
mov eax ecx +
and ecx 3Fh +
sar eax 6 +
imul ecx ecx +
mov eax dword_41FF30[eax*4] +
movzx eax byte ptr [eax+ecx+28h] +
and eax 40h +
pop ebp  +
retn   +
call sub_4094BD  +
mov dword ptr [eax] 9 +
call sub_409400  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jbe loc_4107A7  +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
lea edx [ecx+eax] +
mov esi edx +
mov edi ecx +
cmp esi ebx +
ja loc_410773  +
jmp loc_410750  +
mov ecx [ebp+arg_C] +
push edi  +
push esi  +
call ds:off_415148  +
call [ebp+arg_C]  +
add esp 8 +
test eax eax +
jle loc_410767  +
mov edi esi +
mov eax [ebp+arg_8] +
add esi eax +
cmp esi ebx +
jbe loc_410750  +
mov ecx [ebp+arg_0] +
mov esi eax +
mov edx ebx +
cmp edi ebx +
jz loc_41079C  +
test eax eax +
jz loc_41079C  +
sub edi ebx +
mov al [edx] +
lea edx [edx+1] +
mov cl [edi+edx-1] +
mov [edi+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_410781  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
sub ebx eax +
lea edx [ecx+eax] +
cmp ebx ecx +
ja loc_410743  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_4107F6  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_4107F5  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_4107E0  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov [ebp+var_100] ecx +
push ebx  +
mov ebx [ebp+arg_C] +
mov [ebp+var_108] ebx +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_FC] esi +
push edi  +
mov edi [ebp+arg_4] +
test ecx ecx +
jnz loc_41085F  +
test edi edi +
jz loc_41085F  +
call sub_4094BD  +
mov dword ptr [eax] 16h +
call sub_409400  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn   +
test esi esi +
jz loc_41083E  +
test ebx ebx +
jz loc_41083E  +
mov [ebp+var_10C] 0 +
cmp edi 2 +
jb loc_41084E  +
dec edi  +
imul edi esi +
add edi ecx +
mov [ebp+var_F8] edi +
mov eax edi +
xor edx edx +
sub eax ecx +
div  esi +
lea edi [eax+1] +
cmp edi 8 +
ja loc_4108A8  +
push ebx  +
push esi  +
push [ebp+var_F8]  +
push ecx  +
call sub_410720  +
add esp 10h +
jmp loc_410B67  +
shr edi 1 +
imul edi esi +
add edi ecx +
push edi  +
push ecx  +
mov ecx ebx +
call ds:off_415148  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_4108D2  +
push esi  +
push edi  +
push [ebp+var_100]  +
call sub_4107C0  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx ebx +
push [ebp+var_100]  +
call ds:off_415148  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_410904  +
push esi  +
push [ebp+var_F8]  +
push [ebp+var_100]  +
call sub_4107C0  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx ebx +
push edi  +
call ds:off_415148  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_41092C  +
push esi  +
push [ebp+var_F8]  +
push edi  +
call sub_4107C0  +
add esp 0Ch +
mov ecx [ebp+var_F8] +
mov ebx ecx +
mov esi [ebp+var_100] +
mov [ebp+var_104] ecx +
cmp edi esi +
jbe loc_410A59  +
jmp loc_410950  +
mov eax [ebp+var_FC] +
add esi eax +
mov [ebp+var_110] esi +
cmp esi edi +
jnb loc_410987  +
mov ecx [ebp+var_108] +
push edi  +
push esi  +
call ds:off_415148  +
call [ebp+var_108]  +
add esp 8 +
test eax eax +
jle loc_410950  +
cmp edi esi +
ja loc_4109C4  +
mov eax [ebp+var_FC] +
mov ecx [ebp+var_F8] +
mov ebx [ebp+var_108] +
add esi eax +
cmp esi ecx +
ja loc_4109B8  +
push edi  +
push esi  +
mov ecx ebx +
call ds:off_415148  +
call ebx  +
mov ecx [ebp+var_F8] +
add esp 8 +
test eax eax +
mov eax [ebp+var_FC] +
jle loc_410993  +
mov ebx [ebp+var_104] +
mov [ebp+var_110] esi +
mov esi [ebp+var_108] +
lea ebx [ebx+0] +
mov eax [ebp+var_FC] +
mov edx ebx +
sub ebx eax +
mov [ebp+var_104] edx +
cmp ebx edi +
jbe loc_410A03  +
push edi  +
push ebx  +
mov ecx esi +
call ds:off_415148  +
call esi  +
add esp 8 +
test eax eax +
jg loc_4109D0  +
mov edx [ebp+var_104] +
mov eax [ebp+var_FC] +
mov esi [ebp+var_110] +
mov [ebp+var_104] ebx +
cmp ebx esi +
jb loc_410A64  +
mov [ebp+var_118] eax +
mov edx ebx +
cmp esi ebx +
jz loc_410A44  +
sub esi ebx +
mov ebx eax +
mov al [edx] +
lea edx [edx+1] +
mov cl [esi+edx-1] +
mov [esi+edx-1] al +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_410A23  +
mov esi [ebp+var_110] +
mov ebx [ebp+var_104] +
mov ecx [ebp+var_F8] +
cmp edi ebx +
jnz loc_410940  +
mov edi esi +
jmp loc_410940  +
mov eax [ebp+var_FC] +
jmp loc_41098D  +
cmp edi edx +
jnb loc_410A9F  +
mov ebx [ebp+var_108] +
mov edi edi +
sub edx eax +
mov [ebp+var_104] edx +
cmp edx edi +
jbe loc_410A9F  +
push edi  +
push edx  +
mov ecx ebx +
call ds:off_415148  +
call ebx  +
mov edx [ebp+var_104] +
add esp 8 +
test eax eax +
mov eax [ebp+var_FC] +
jz loc_410A70  +
cmp edi edx +
jb loc_410ADF  +
mov ebx [ebp+var_108] +
mov esi [ebp+var_FC] +
jmp loc_410AB0  +
sub edx esi +
mov [ebp+var_104] edx +
cmp edx [ebp+var_100] +
jbe loc_410AD9  +
push edi  +
push edx  +
mov ecx ebx +
call ds:off_415148  +
call ebx  +
mov edx [ebp+var_104] +
add esp 8 +
test eax eax +
jz loc_410AB0  +
mov esi [ebp+var_110] +
mov edi [ebp+var_F8] +
mov eax edx +
sub eax [ebp+var_100] +
mov ecx edi +
sub ecx esi +
cmp eax ecx +
jl loc_410B2E  +
mov eax [ebp+var_100] +
cmp eax edx +
jnb loc_410B17  +
mov ecx [ebp+var_10C] +
mov [ebp+ecx*4+var_7C] eax +
mov [ebp+ecx*4+var_F4] edx +
inc ecx  +
mov [ebp+var_10C] ecx +
cmp esi edi +
jnb loc_410B61  +
mov ecx esi +
mov esi [ebp+var_FC] +
mov [ebp+var_100] ecx +
jmp loc_410882  +
cmp esi edi +
jnb loc_410B4A  +
mov eax [ebp+var_10C] +
mov [ebp+eax*4+var_7C] esi +
mov [ebp+eax*4+var_F4] edi +
inc eax  +
mov [ebp+var_10C] eax +
mov ecx [ebp+var_100] +
mov esi [ebp+var_FC] +
cmp ecx edx +
jnb loc_410B67  +
mov edi edx +
jmp loc_41087C  +
mov esi [ebp+var_FC] +
mov eax [ebp+var_10C] +
sub eax 1 +
mov [ebp+var_10C] eax +
js loc_41084E  +
mov ecx [ebp+eax*4+var_7C] +
mov edi [ebp+eax*4+var_F4] +
mov [ebp+var_100] ecx +
jmp loc_41087C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_410B92  +
***
push esi  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_0] 0 +
jnz loc_410CC9  +
call sub_4094BD  +
mov dword ptr [eax] 16h +
call sub_409400  +
xor eax eax +
jmp loc_410D30  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_410CE3  +
call sub_4094BD  +
mov dword ptr [eax] 16h +
call sub_409400  +
jmp loc_410CE8  +
cmp [ebp+arg_0] esi +
jb loc_410CEC  +
xor eax eax +
jmp loc_410D2F  +
push [ebp+arg_8]  +
lea ecx [ebp+var_10] +
call sub_4063AD  +
mov edx [ebp+var_8] +
cmp dword ptr [edx+8] 0 +
jz loc_410D1C  +
lea ecx [esi-1] +
dec ecx  +
cmp [ebp+arg_0] ecx +
ja loc_410D13  +
movzx eax byte ptr [ecx] +
test byte ptr [eax+edx+19h] 4 +
jnz loc_410D03  +
mov eax esi +
sub eax ecx +
and eax 1 +
sub esi eax +
dec esi  +
cmp [ebp+var_4] 0 +
jz loc_410D2D  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_40C460  +
mov edi edi +
mov edi edi +
call sub_404A90  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_404A90  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_411306  +
pop ecx  +
test eax eax +
jz loc_411392  +
xor eax eax +
inc eax  +
jmp loc_4113BB  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_411323  +
pop ecx  +
test eax eax +
jnz loc_41138D  +
call sub_40D8ED  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_4202F4 0 +
jz loc_41144F  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_4113F4  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_41144F  +
jmp loc_411D78  +
***
cmp dword_4202F4 0 +
jz loc_41143B  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_411430  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_41143B  +
jmp sub_411D60  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_412478  +
call sub_411458  +
add esp 0Ch +
retn   +
***
jz loc_4114AB  +
cmp dword_4202F4 0 +
mov edi edi +
xor eax eax +
mov ecx hObject +
cmp ecx 0FFFFFFFEh +
jnz loc_4116BF  +
call sub_41168A  +
mov ecx hObject +
xor eax eax +
cmp ecx 0FFFFFFFFh +
setnz al  +
retn   +
***
mov eax hObject +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_0] +
mov edx ebx +
push esi  +
shr edx 10h +
and edx 3Fh +
push edi  +
mov eax edx +
xor edi edi +
shr eax 1 +
inc edi  +
movzx esi al +
mov ecx edx +
and esi edi +
mov eax edx +
shr eax 2 +
and ecx edi +
movzx eax al +
and eax edi +
shl esi 4 +
shl eax 3 +
shl ecx 5 +
or esi ecx +
or esi eax +
mov eax edx +
shr eax 3 +
movzx eax al +
and eax edi +
shl eax 2 +
or esi eax +
mov eax edx +
shr eax 4 +
movzx eax al +
and eax edi +
shr edx 5 +
or esi eax +
movzx eax dl +
and eax edi +
lea edi [ebp+var_20] +
add eax eax +
push 7  +
or esi eax +
xor eax eax +
pop ecx  +
stos   +
fnstenv  byte ptr [ebp+var_20] +
mov ecx [ebp+var_1C] +
mov eax ecx +
xor eax esi +
and eax 3Fh +
xor ecx eax +
mov [ebp+var_1C] ecx +
fldenv  byte ptr [ebp+var_20] +
shr ebx 18h +
xor esi esi +
and ebx 3Fh +
inc esi  +
mov eax ebx +
mov ecx ebx +
shr eax 1 +
and ecx esi +
movzx edx al +
mov eax ebx +
shr eax 2 +
and edx esi +
movzx eax al +
and eax esi +
shl edx 4 +
shl eax 3 +
shl ecx 5 +
or edx ecx +
or edx eax +
mov eax ebx +
shr eax 3 +
movzx eax al +
and eax esi +
shl eax 2 +
or edx eax +
mov eax ebx +
shr eax 4 +
movzx eax al +
and eax esi +
shr ebx 5 +
or edx eax +
movzx eax bl +
and eax esi +
add eax eax +
pop edi  +
or edx eax +
cmp dword_41FC2C esi +
pop esi  +
pop ebx  +
jl loc_411D42  +
stmxcsr [ebp+var_4]  +
mov eax [ebp+var_4] +
and edx 3Fh +
and eax 0FFFFFFC0h +
or eax edx +
mov [ebp+var_4] eax +
ldmxcsr [ebp+var_4]  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword_4202F4 eax +
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_411D7E  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_41A250 +
movapd xmm2 oword ptr ds:oword_41A260 +
movapd xmm3 oword ptr ds:oword_41A2C0 +
movapd xmm4 oword ptr ds:oword_41A270 +
movapd xmm6 oword ptr ds:oword_41A280 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_41A880[eax] +
movapd xmm7 oword ptr ds:oword_41A470[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_411ED6  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_41A310 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_41A320 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_41A330 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_41A290 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_41A2A0[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_41A340 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_41A2D0 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_411F3B  +
cmp ecx 0FFFFFFFFh +
jz loc_411F56  +
cmp ecx 7FEh +
ja loc_411F6C  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_41A250 +
movapd xmm2 oword ptr ds:oword_41A2C0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_411F34  +
fld  ds:dbl_41A2F8 +
retn   +
mov edx 3E9h +
jmp loc_411F8A  +
movlpd xmm2 oword ptr ds:oword_41A2C0 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_41A2F0 +
mov edx 8 +
jmp loc_411F8A  +
movlpd xmm1 oword ptr ds:oword_41A2E0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_411D83  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_411FB7  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_4125D3  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_411F7D  +
mov edx 3E9h +
jmp loc_411F8A  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_41213E  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_412024  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_41202B  +
fscale   +
or ch ch +
jz loc_412031  +
fchs   +
jmp loc_4122E8  +
***
call sub_412181  +
or eax eax +
jz loc_412053  +
xor ch ch +
cmp eax 2 +
jz loc_412048  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_411FFD  +
***
jmp loc_412308  +
***
jmp loc_4123A3  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_41A350 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_412053  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_41A35A +
retn   +
***
or cl cl +
jnz loc_4120EB  +
retn   +
***
fldlg2   +
jmp loc_41209F  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_412053  +
fyl2x   +
retn   +
***
jmp loc_412308  +
***
call sub_412181  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_4120C8  +
fldz   +
cmp eax 1 +
jnz locret_4120C7  +
or ch ch +
jz locret_4120C7  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_41A350 +
cmp eax 1 +
jnz locret_4120C7  +
or ch ch +
jz locret_4120C7  +
fchs   +
jmp locret_4120C7  +
***
fstp  st +
***
jmp loc_4122F6  +
***
fstp  st +
jmp loc_4123A5  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_412113  +
fstp  st +
fld  ds:tbyte_41A350 +
or ch ch +
jz locret_412112  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_4122F6  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_4121A7  +
fld  st +
fmul  ds:dbl_41A382 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_4121AE  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_4121A6  +
mov eax 2 +
jmp locret_4121A6  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_41297B  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_4121E6  +
jmp sub_4123B6  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_412207  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_41220B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_41A3DE +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_41226E  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_412272  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_41A3DE +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
call sub_4123B6  +
***
fxch  st(1) +
fstp  st +
retn   +
***
call sub_4123B6  +
jmp loc_4122EA  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_412307  +
fchs   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_41232C  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_41A3CE +
retn   +
***
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_41235A  +
mov byte ptr [ebp-90h] 0 +
jmp loc_412361  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_412399  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_412399  +
mov byte ptr [ebp-90h] 0 +
jmp loc_4123A0  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_41A3C4 +
or ch ch +
jz loc_4123D0  +
fchs   +
or cl cl +
jz locret_4123DC  +
fld  ds:dbl_41A3D6 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_4123E3  +
fchs   +
retn   +
***
fld  st +
frndint   +
fsubr st(1) st +
fxch  st(1) +
fchs   +
f2xm1   +
fld1   +
faddp st(1) st +
fscale   +
fstp  st(1) +
retn   +
***
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_412489  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_412499  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_4124C3  +
and ax 20h +
jz loc_4124C0  +
fstsw  ax +
and ax 20h +
jz loc_4124C0  +
mov eax 8 +
call sub_412597  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jmp loc_4124ED  +
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_41252A  +
cmp eax 7FF00000h +
jz loc_412553  +
mov ax [esp] +
cmp ax 27Fh +
jz loc_412528  +
and ax 20h +
jnz loc_412525  +
fstsw  ax +
and ax 20h +
jz loc_412525  +
mov eax 8 +
cmp edx 1Dh +
jz loc_41251E  +
call sub_412597  +
pop edx  +
retn   +
***
call sub_412580  +
pop edx  +
retn   +
***
fldcw  word ptr [esp] +
pop edx  +
retn   +
***
fld  ds:dbl_41A41C +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_41A40C +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_412512  +
fmul  ds:dbl_41A42C +
jmp loc_412512  +
***
fld  ds:dbl_41A414 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_41A404 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_412512  +
fmul  ds:dbl_41A424 +
jmp loc_412512  +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_41D020 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_4202D4 0 +
push esi  +
push edi  +
jz loc_412600  +
push dword_4202F0  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_412605  +
mov edi offset sub_408000 +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_412732  +
jz loc_412726  +
cmp eax 0Eh +
jg loc_4126C7  +
jz loc_4126B4  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_4126A5  +
sub eax 1 +
jz loc_41269C  +
sub eax 5 +
jz loc_41268D  +
sub eax 1 +
jnz loc_4127DB  +
mov [ebp+var_20] offset aLog10_0 +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_415148  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_4127D6  +
call sub_4094BD  +
mov dword ptr [eax] 21h +
jmp loc_4127D6  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset aLog10_0 +
jmp loc_4127A0  +
mov [ebp+var_20] offset unk_41A434 +
jmp loc_412647  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset unk_41A434 +
jmp loc_4127A0  +
mov [ebp+var_24] 3 +
mov [ebp+var_20] offset aExp +
jmp loc_4127A0  +
sub eax 0Fh +
jz loc_41271D  +
sub eax 9 +
jz loc_412714  +
sub eax 1 +
jnz loc_4127DB  +
mov [ebp+var_20] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_415148  +
call edi  +
pop ecx  +
jmp loc_4127D6  +
mov [ebp+var_24] 3 +
jmp loc_412799  +
mov [ebp+var_20] offset aExp +
jmp loc_4126E1  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_4127DB  +
sub eax 1Bh +
jz loc_412792  +
sub eax 1 +
jz loc_412786  +
sub eax 15h +
jz loc_41277A  +
sub eax 9 +
jz loc_41276E  +
sub eax 3 +
jz loc_412762  +
sub eax 3ABh +
jz loc_41275B  +
sub eax 1 +
jnz loc_4127DB  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_412728  +
mov [ebp+var_20] offset aAsin +
jmp loc_412647  +
mov [ebp+var_20] offset aAcos +
jmp loc_412647  +
mov [ebp+var_20] offset aSqrt +
jmp loc_412647  +
mov [ebp+var_20] offset aPow +
jmp loc_412647  +
mov [ebp+var_24] 2 +
mov [ebp+var_20] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_415148  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_4127D6  +
call sub_4094BD  +
mov dword ptr [eax] 22h +
fld  [ebp+var_C] +
fstp  qword ptr [esi] +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_403D40  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi 0FFFFh +
push esi  +
push 1B3Fh  +
call sub_410E7F  +
fld  qword ptr [ebp+8] +
mov ebx eax +
pop ecx  +
pop ecx  +
movzx ecx word ptr [ebp+0Eh] +
mov eax 7FF0h +
and ecx eax +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
cmp cx ax +
jnz loc_412857  +
call sub_41339E  +
dec eax  +
pop ecx  +
pop ecx  +
cmp eax 2 +
ja loc_41283B  +
push esi  +
push ebx  +
call sub_410E7F  +
fld  qword ptr [ebp+8] +
pop ecx  +
pop ecx  +
jmp loc_41289E  +
fld  qword ptr [ebp+8] +
fld  ds:dbl_41A460 +
push ebx  +
sub esp 10h +
fadd st st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 0Ch  +
push 8  +
jmp loc_412896  +
call sub_412BB1  +
fst  qword ptr [ebp-8] +
fld  qword ptr [ebp+8] +
add esp 8 +
fucom  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_412880  +
push esi  +
fstp  st(1) +
push ebx  +
fstp  st +
call sub_410E7F  +
fld  qword ptr [ebp-8] +
pop ecx  +
pop ecx  +
jmp loc_41289E  +
test bl 20h +
jnz loc_41286E  +
push ebx  +
sub esp 10h +
fxch  st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 0Ch  +
push 10h  +
call sub_412BFB  +
add esp 1Ch +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_4134EC  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_4134E4  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_4134EE  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_4134D4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_41B958  +
push offset sub_4056F0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_41D020 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_4135C0  +
add esp 4 +
test eax eax +
jz loc_41359F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_4134B0  +
add esp 8 +
test eax eax +
jz loc_41359F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx 5A4Dh +
cmp [eax] cx +
jz loc_4135D4  +
xor eax eax +
pop ebp  +
retn   +
mov ecx [eax+3Ch] +
add ecx eax +
xor eax eax +
cmp dword ptr [ecx] 4550h +
jnz loc_4135EF  +
mov edx 10Bh +
cmp [ecx+18h] dx +
setz al  +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_413631  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_413678  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_41363F  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_41366D  +
cmp edx [esp+arg_4] +
ja loc_41366D  +
jb loc_413676  +
cmp eax [esp+arg_0] +
jbe loc_413676  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_413830  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_413830  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_403D40  +
jmp sub_404AD6  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_413754  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_413770  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_41379C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_4137E3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_4137AA  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_4137D8  +
cmp edx [esp+arg_4] +
ja loc_4137D8  +
jb loc_4137E1  +
cmp eax [esp+arg_0] +
jbe loc_4137E1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_4137F5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_413809  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
jnb loc_41382A  +
cmp cl 20h +
jnb loc_413820  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_413854  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_413844  +
***
cmp cl 40h +
jnb loc_41387A  +
cmp cl 20h +
jnb loc_413870  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp dword_41FC2C 0 +
jz loc_4138C0  +
push ebp  +
mov ebp esp +
sub esp 8 +
and esp 0FFFFFFF8h +
fstp  [esp+0Ch+var_C] +
cvttsd2si eax [esp+0Ch+var_C] +
leave   +
retn   +
cmp dword_41FC2C 0 +
jz loc_4138C0  +
sub esp 4 +
fnstcw  word ptr [esp] +
pop eax  +
and ax 7Fh +
cmp ax 7Fh +
jz loc_413889  +
lea esp [esp+0] +
lea ecx [ecx+0] +
push ebp  +
mov ebp esp +
sub esp 20h +
and esp 0FFFFFFF0h +
fld  st +
fst  dword ptr [esp+24h+var_C] +
fistp  [esp+24h+var_14] +
fild  [esp+24h+var_14] +
mov edx dword ptr [esp+24h+var_C] +
mov eax dword ptr [esp+24h+var_14] +
test eax eax +
jz loc_41391F  +
fsubp st(1) st +
test edx edx +
jns loc_413907  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
xor ecx 80000000h +
add ecx 7FFFFFFFh +
adc eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
adc edx 0 +
jmp locret_413933  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
add ecx 7FFFFFFFh +
sbb eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
sbb edx 0 +
jmp locret_413933  +
mov edx dword ptr [esp+24h+var_14+4] +
test edx 7FFFFFFFh +
jnz loc_4138E3  +
fstp  dword ptr [esp+24h+var_C] +
fstp  dword ptr [esp+24h+var_C] +
leave   +
retn   +
***
bt dword_41D030 1 +
jb loc_413E0D  +
jmp loc_413B67  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_413B1C  +
cmp ecx 10h +
jl loc_413B34  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_413B1C  +
***
bt ecx 2 +
jnb loc_413B47  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_413B5E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_413BA4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_413B82  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_413B6F  +
mov edx ecx +
cmp ecx 20h +
jb loc_413E3B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_413BA4[edx*4]  +
jmp dword ptr ds:loc_413BB4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_413D54  +
bt dword_41D030 1 +
jb loc_413CA5  +
test edi 3 +
jz loc_413C2D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_413C20  +
cmp ecx 20h +
jb loc_413D54  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_413C50[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_413CBC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_413CAD  +
cmp ecx 80h +
jb loc_413D2C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_413CBC  +
cmp ecx 20h +
jb loc_413D54  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_413D31  +
test ecx 0FFFFFFFCh +
jz loc_413D71  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_413D5C  +
test ecx ecx +
jz loc_413D84  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_413D75  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_413D90  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_413E80  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_413E0D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_413DB0  +
test ecx ecx +
jz loc_413E70  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_413E3B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_413E20  +
and ecx 1Fh +
jz loc_413E70  +
mov eax ecx +
shr ecx 2 +
jz loc_413E56  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_413E47  +
mov ecx eax +
and ecx 3 +
jz loc_413E70  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_413E5D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_413E9C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_413E93  +
shr eax 2 +
jz loc_413EAE  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_413EA1  +
pop ecx  +
jmp loc_413D9D  +
***
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_413F2D  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_413EFD  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_413FC7  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_413FB3  +
bsf edx edi +
add eax edx +
jmp loc_413F8B  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_413FF1  +
xor eax eax +
jmp loc_413FF3  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
cmp dword_41FC2C 1 +
jb loc_414068  +
movzx eax byte ptr [esp+8] +
mov edx eax +
shl eax 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov edx [esp+4] +
mov ecx 0Fh +
or eax 0FFFFFFFFh +
and ecx edx +
shl eax cl +
sub edx ecx +
movdqu xmm1 qword ptr [edx] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
por xmm2 xmm1 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_414057  +
or eax 0FFFFFFFFh +
add edx 10h +
jmp loc_414033  +
***
bsf eax ecx +
add eax edx +
movd edx xmm3 +
xor ecx ecx +
cmp dl [eax] +
cmovnz eax ecx +
retn   +
***
xor eax eax +
mov al [esp+8] +
push ebx  +
mov ebx eax +
shl eax 8 +
mov edx [esp+8] +
test edx 3 +
jz loc_414095  +
mov cl [edx] +
add edx 1 +
cmp cl bl +
jz loc_4140E2  +
test cl cl +
jz loc_4140DE  +
test edx 3 +
jnz loc_414080  +
or ebx eax +
push edi  +
mov eax ebx +
shl ebx 10h +
push esi  +
or ebx eax +
mov ecx [edx] +
mov edi 7EFEFEFFh +
mov eax ecx +
mov esi edi +
xor ecx ebx +
add esi eax +
add edi ecx +
xor ecx 0FFFFFFFFh +
xor eax 0FFFFFFFFh +
xor ecx edi +
xor eax esi +
add edx 4 +
and ecx 81010100h +
jnz loc_4140E7  +
and eax 81010100h +
jz loc_4140A0  +
and eax 1010100h +
jnz loc_4140DC  +
and esi 80000000h +
jnz loc_4140A0  +
pop esi  +
pop edi  +
pop ebx  +
xor eax eax +
retn   +
***
lea eax [edx-1] +
pop ebx  +
retn   +
***
mov eax [edx-4] +
cmp al bl +
jz loc_414124  +
test al al +
jz loc_4140DC  +
cmp ah bl +
jz loc_41411D  +
test ah ah +
jz loc_4140DC  +
shr eax 10h +
cmp al bl +
jz loc_414116  +
test al al +
jz loc_4140DC  +
cmp ah bl +
jz loc_41410F  +
test ah ah +
jz loc_4140DC  +
jmp loc_4140A0  +
***
pop esi  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-4] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
push offset CriticalSection  +
mov dword_41F49C offset off_415294 +
call ds:DeleteCriticalSection  +
retn   +
***
