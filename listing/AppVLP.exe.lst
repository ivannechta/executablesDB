retf 0  +
***
retn   +
***
retf   +
***
retn 0  +
***
sbb eax 20000000h +
retn   +
***
inc ecx  +
add ds:30000000h al +
retn   +
***
inc ecx  +
add ds:3C000000h dl +
retn   +
***
add al al +
retf   +
***
add al al +
retf   +
***
add [ecx] ah +
jmp near ptr word_41CD52  +
inc eax  +
jmp loc_4218C1  +
***
jmp loc_41E64A  +
add [eax+3FF714E6h] al +
or [ebx+4] ah +
add [ebx-1FFFFB9Dh] ch +
add al 0 +
xor [esi-66AEFFFCh] al +
add al 0 +
sub al cl +
add al 0 +
pop esi  +
rol dword ptr [eax+eax] 79h +
rol dword ptr [eax+eax] 0A4h +
rol dword ptr [eax+eax] 13h +
retn 4  +
***
add al 0F7h +
jmp loc_420752  +
imul ebp [esi+64h] +
inc ecx  +
jo near ptr dword_4207CC  +
dec ebp  +
popa   +
outs   +
inc ecx  +
jo loc_4207D3  +
push esi  +
add [ebx] dl +
add [ecx] al +
sbb dh [ebx+50h] +
dec edi  +
iret   +
***
add [eax+14h] dl +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ecx] +
push edi  +
xor edi edi +
test edx edx +
jz loc_420DCD  +
mov ecx edx +
push esi  +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax di +
jnz loc_420DB4  +
sub ecx esi +
sar ecx 1 +
pop esi  +
lea ecx ds:2[ecx*2] +
jmp loc_420DD5  +
push 2  +
mov edx offset dword_41BCA0 +
pop ecx  +
mov eax [ebp+arg_0] +
mov [eax+4] edi +
mov [eax+0Ch] edi +
mov [eax] edx +
mov [eax+8] ecx +
pop edi  +
pop ebp  +
retn 4  +
***
push 4  +
push offset a?  +
mov ecx offset dword_452780 +
call sub_4219E8  +
push offset loc_44D9A0  +
call sub_4452EA  +
pop ecx  +
retn   +
***
push 8  +
push offset a?Unc  +
mov ecx offset dword_452760 +
call sub_4219E8  +
push offset loc_44D9B0  +
call sub_4452EA  +
pop ecx  +
retn   +
***
call sub_421300  +
push offset loc_44D9C0  +
call sub_4452EA  +
pop ecx  +
retn   +
***
mov eax ds:CreateProcessW +
mov dword_453450 eax +
retn   +
***
mov eax ds:CreateProcessAsUserW +
mov dword_45344C eax +
retn   +
***
push offset loc_44D9D0  +
call sub_4452EA  +
pop ecx  +
retn   +
***
mov ecx offset unk_453454 +
call sub_42BF38  +
push offset dword_44DA00  +
call sub_4452EA  +
pop ecx  +
retn   +
***
push offset loc_44DA10  +
call sub_4452EA  +
pop ecx  +
retn   +
***
push offset loc_44DA70  +
call sub_4452EA  +
pop ecx  +
retn   +
***
mov ecx offset unk_453456 +
call sub_42BF38  +
push offset dword_44DA80  +
call sub_4452EA  +
pop ecx  +
retn   +
***
push offset loc_44DA90  +
call sub_4452EA  +
pop ecx  +
retn   +
***
call sub_42CFB6  +
push offset loc_44DAE0  +
call sub_4452EA  +
pop ecx  +
retn   +
***
push offset unk_453704  +
call ds:InitializeCriticalSection  +
and dword_45371C 0 +
and dword_453720 0 +
push offset loc_44DB10  +
call sub_4452EA  +
pop ecx  +
retn   +
***
push 0  +
mov eax offset loc_44D295 +
call sub_445D35  +
push 0Ch  +
push offset aProgramw6432  +
mov ecx offset unk_4527A0 +
call sub_4219E8  +
push 7  +
pop esi  +
xor edi edi +
xor eax eax +
mov [ebp-4] edi +
mov ecx offset word_4527B8 +
push 12h  +
push offset aCommonprogramw  +
mov dword_4527C8 edi +
mov dword_4527CC esi +
mov word_4527B8 ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 1 +
xor eax eax +
push 16h  +
push offset aProcessor_arch  +
mov ecx offset word_4527D0 +
mov dword_4527E0 edi +
mov dword_4527E4 esi +
mov word_4527D0 ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 2 +
xor eax eax +
push 11h  +
push offset aProgramfilesX8  +
mov ecx offset word_4527E8 +
mov dword_4527F8 edi +
mov dword_4527FC esi +
mov word_4527E8 ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 3 +
xor eax eax +
push 17h  +
push offset aCommonprogramf  +
mov ecx offset word_452800 +
mov dword_452810 edi +
mov dword_452814 esi +
mov word_452800 ax +
call sub_4219E8  +
push offset loc_44DB20  +
call sub_4452EA  +
pop ecx  +
call sub_445D0F  +
retn   +
***
push 0C4h  +
mov eax offset loc_44D7BA +
call sub_445D35  +
push 7  +
pop edi  +
xor esi esi +
mov [ebp-0B8h] edi +
xor eax eax +
mov [ebp-0D0h] esi +
push offset aUnknownLogLeve  +
lea ecx [ebp-0CCh] +
mov [ebp-0BCh] esi +
mov [ebp-0CCh] ax +
call sub_4219BF  +
mov [ebp-4] esi +
lea ecx [ebp-0B0h] +
xor eax eax +
mov dword ptr [ebp-0B4h] 1 +
push offset aError  +
mov [ebp-0A0h] esi +
mov [ebp-9Ch] edi +
mov [ebp-0B0h] ax +
call sub_4219BF  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-94h] +
xor eax eax +
mov dword ptr [ebp-98h] 2 +
push offset off_41C9AC  +
mov [ebp-84h] esi +
mov [ebp-80h] edi +
mov [ebp-94h] ax +
call sub_4219BF  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-78h] +
xor eax eax +
mov dword ptr [ebp-7Ch] 4 +
push offset aInfo  +
mov [ebp-68h] esi +
mov [ebp-64h] edi +
mov [ebp-78h] ax +
call sub_4219BF  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-5Ch] +
xor eax eax +
mov dword ptr [ebp-60h] 8 +
push offset off_41C9C8  +
mov [ebp-4Ch] esi +
mov [ebp-48h] edi +
mov [ebp-5Ch] ax +
call sub_4219BF  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-40h] +
xor eax eax +
mov dword ptr [ebp-44h] 20h +
push offset off_41C9D4  +
mov [ebp-30h] esi +
mov [ebp-2Ch] edi +
mov [ebp-40h] ax +
call sub_4219BF  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-24h] +
xor eax eax +
mov dword ptr [ebp-28h] 10h +
push offset off_41C9E0  +
mov [ebp-14h] esi +
mov [ebp-10h] edi +
mov [ebp-24h] ax +
call sub_4219BF  +
lea eax [ebp-0Ch] +
mov dword ptr [ebp-4] 6 +
lea ecx [ebp-0D0h] +
push eax  +
push ecx  +
call sub_4311AC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push offset loc_430DC0  +
push edi  +
push 1Ch  +
lea eax [ebp-0D0h] +
push eax  +
call sub_44B080  +
push offset loc_44DB40  +
call sub_4452EA  +
pop ecx  +
call sub_445D0F  +
retn   +
***
push 3Ch  +
mov eax offset loc_44D7F8 +
call sub_445D69  +
push 7  +
pop esi  +
xor eax eax +
mov [ebp-34h] esi +
xor edi edi +
mov [ebp-48h] ax +
push offset aDefault  +
lea ecx [ebp-48h] +
mov [ebp-38h] edi +
call sub_4219BF  +
mov dword ptr [ebp-30h] (offset dword_41BB5C+4) +
mov [ebp-4] edi +
lea ecx [ebp-2Ch] +
xor eax eax +
mov [ebp-1Ch] edi +
push offset aClient  +
mov [ebp-18h] esi +
mov [ebp-2Ch] ax +
call sub_4219BF  +
mov dword ptr [ebp-14h] (offset dword_41BBAC+4) +
push 2Ch  +
mov dword ptr [ebp-4] 1 +
pop ecx  +
mov dword_45347C edi +
mov dword_453480 edi +
call sub_421D35  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov dword_45347C eax +
lea eax [ebp-10h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea eax [ebp-48h] +
push eax  +
call sub_431264  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-48h] +
push offset loc_421520  +
push 2  +
push 1Ch  +
push eax  +
call sub_44B080  +
push offset loc_44DB50  +
call sub_4452EA  +
pop ecx  +
call sub_445D24  +
retn   +
***
call ds:GetProcessHeap  +
push offset loc_44DB60  +
mov dword_45348C offset off_402B0C +
mov dword_453490 eax +
mov byte_453494 0 +
call sub_4452EA  +
pop ecx  +
retn   +
***
push offset loc_44DB70  +
call sub_4452EA  +
pop ecx  +
retn   +
***
mov edi edi +
call sub_445D35  +
push 18h  +
xor ebx ebx +
mov esi offset dword_453648 +
pop ecx  +
mov dword_453648 ebx +
mov dword_45364C ebx +
call sub_421D35  +
mov edi eax +
mov [edi] edi +
mov [edi+4] edi +
mov [edi+8] edi +
mov word ptr [edi+0Ch] 101h +
mov dword_453648 edi +
mov [ebp-4] ebx +
and [ebp-10h] ebx +
mov [ebp-14h] esi +
mov esi ds:off_402B20[ebx*4] +
push 18h  +
pop ecx  +
mov byte ptr [ebp-4] 1 +
call sub_421D35  +
xor ecx ecx +
push eax  +
mov [ebp-10h] ecx +
mov [eax+10h] esi +
mov [eax+14h] ebx +
mov [eax] edi +
mov [eax+4] edi +
mov [eax+8] edi +
mov [eax+0Ch] cx +
add eax 10h +
push eax  +
push ecx  +
lea eax [ebp-1Ch] +
mov [ebp-4] cl +
push eax  +
call sub_421FDB  +
inc ebx  +
cmp ebx 0B44h +
jnb loc_421393  +
mov edi dword_453648 +
jmp loc_421346  +
mov eax offset dword_453648 +
call sub_445D0F  +
retn   +
***
jmp loc_42186D  +
***
mov eax dword_451168 +
mov ecx dword_451168 +
mov eax ecx +
mov edx dword_45116C +
or eax edx +
jnz loc_4214FC  +
retn   +
push edx  +
push ecx  +
call ds:EventUnregister  +
and dword_451168 0 +
and dword_45116C 0 +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_42186B  +
mov edx [esi+8] +
sub edx ecx +
and edx 0FFFFFFFEh +
call sub_421D72  +
xor eax eax +
mov [esi] eax +
mov [esi+4] eax +
mov [esi+8] eax +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D35  +
mov edi edi +
mov edi edi +
mov edi edi +
cmp ecx 1000h +
cmp edx 1000h +
mov ecx offset aStringTooLong +
mov edi edi +
mov edi edi +
mov ecx offset aVectorTTooLong +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445DA0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [ebp+var_8] eax +
lea eax [ebp+var_8] +
mov [ebp+var_4] 1 +
lea edx [esi+4] +
mov dword ptr [esi] offset off_402610 +
and dword ptr [edx] 0 +
and dword ptr [edx+4] 0 +
push edx  +
push eax  +
call sub_4465D5  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+4] +
mov dword ptr [esi] offset off_402610 +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
push eax  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_4465D5  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx+4] +
test eax eax +
jnz locret_4223DC  +
mov eax offset aUnknownExcepti +
retn   +
***
mov edi edi +
and dword ptr [ecx+4] 0 +
mov eax ecx +
and dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] offset aBadCast +
mov dword ptr [ecx] offset off_4027E0 +
retn   +
***
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_402610 +
push eax  +
call sub_44663A  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov [eax] edx +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
push dword ptr [ebp+8]  +
mov edi ecx +
lea ecx [ebp-8] +
push ecx  +
mov eax [edi] +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_454218  +
mov ecx edi +
call esi  +
mov esi [ebp+0Ch] +
mov ecx [eax+4] +
mov edx [esi+4] +
mov ecx [ecx+4] +
cmp ecx [edx+4] +
jnz loc_4224DE  +
mov eax [eax] +
cmp eax [esi] +
jnz loc_4224DE  +
mov al 1 +
jmp loc_4224E0  +
xor al al +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
call sub_445D69  +
mov edi ecx +
mov [ebp-48h] edi +
mov eax [ebp+8] +
lea ecx [ebp-64h] +
push eax  +
mov [ebp-48h] edi +
call sub_42530D  +
mov esi [ebp+0Ch] +
mov ebx [ebp+10h] +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp-54h] 0 +
jz loc_42257C  +
push 2  +
push offset asc_41BC10  +
lea ecx [ebp-64h] +
call sub_426BDE  +
mov eax [ebx] +
lea ecx [ebp-2Ch] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_454218  +
mov ecx ebx +
call esi  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-2Ch] +
cmp dword ptr [ebp-18h] 10h +
jb loc_4225A2  +
mov eax [ebp-2Ch] +
push dword ptr [ebp-1Ch]  +
lea ecx [ebp-64h] +
push eax  +
call sub_426BDE  +
lea ecx [ebp-2Ch] +
call sub_425231  +
lea eax [ebp-64h] +
push eax  +
lea ecx [ebp-44h] +
call sub_4252A3  +
lea ecx [ebp-64h] +
call sub_425231  +
cmp dword ptr [ebp-30h] 10h +
lea eax [ebp-44h] +
jb loc_4225D6  +
mov eax [ebp-44h] +
push eax  +
mov ecx edi +
call sub_422361  +
lea ecx [ebp-44h] +
mov dword ptr [edi] offset off_402888 +
call sub_425231  +
mov ecx [ebp+0Ch] +
mov eax edi +
mov [edi+0Ch] ecx +
mov ecx [ebp+10h] +
mov dword ptr [edi] offset off_402894 +
mov [edi+10h] ecx +
call sub_445D24  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov eax offset dword_405830 +
cmp [eax] ecx +
jz loc_422661  +
add eax 8 +
cmp eax offset dword_405AA0 +
jnz loc_42264C  +
mov eax offset aUnknownError +
jmp loc_422664  +
mov eax [eax+4] +
mov ecx [ebp+arg_0] +
push eax  +
call sub_4252D6  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov eax offset aIostream +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_4226AA  +
mov ecx [ebp+8] +
push offset aIostreamStream  +
call sub_4252D6  +
jmp loc_4226B5  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_42263F  +
mov eax [ebp+8] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
jz loc_4226D8  +
push 8  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_445D35  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_422896  +
and [ebp+var_4] 0 +
call sub_4354F8  +
cmp dword ptr [esi] 0 +
jnz loc_42288E  +
mov eax dword_4535F0 +
inc eax  +
mov dword_4535F0 eax +
mov [esi] eax +
lea ecx [ebp+var_4] +
call sub_42BF93  +
mov eax [esi] +
pop esi  +
leave   +
retn   +
***
mov edi edi +
mov ecx [ecx+4] +
mov edi edi +
mov edi edi +
call sub_445D35  +
call sub_445D35  +
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+10h] +
mov dword ptr [esi] offset off_4027FC +
test eax eax +
jle loc_422AAA  +
push dword ptr [esi+0Ch]  +
call sub_4350A9  +
jmp loc_422AB4  +
jns loc_422AB5  +
push dword ptr [esi+0Ch]  +
call sub_445316  +
pop ecx  +
push dword ptr [esi+14h]  +
call sub_4350A9  +
pop ecx  +
mov dword ptr [esi] offset off_4029B8 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea edx [ecx+8] +
movzx ecx byte ptr [ebp+8] +
call sub_42C412  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
sub eax esi +
cmp [ebp+0Ch] esi +
push edi  +
sbb edi edi +
not edi  +
and edi eax +
jz loc_422B29  +
lea eax [ecx+8] +
mov [ebp-4] eax +
movzx ecx byte ptr [esi] +
mov edx eax +
call sub_42C412  +
mov [esi] al +
inc esi  +
mov eax [ebp-4] +
inc ebx  +
cmp ebx edi +
jnz loc_422B14  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea edx [ecx+8] +
movzx ecx byte ptr [ebp+8] +
call sub_42C5D8  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
sub eax esi +
cmp [ebp+0Ch] esi +
push edi  +
sbb edi edi +
not edi  +
and edi eax +
jz loc_422B99  +
lea eax [ecx+8] +
mov [ebp-4] eax +
movzx ecx byte ptr [esi] +
mov edx eax +
call sub_42C5D8  +
mov [esi] al +
inc esi  +
mov eax [ebp-4] +
inc ebx  +
cmp ebx edi +
jnz loc_422B84  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov al [ebp+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
sub ecx [ebp+8] +
push ecx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+10h]  +
call loc_446B00  +
mov eax [ebp+0Ch] +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov al [ebp+8] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
sub ecx [ebp+8] +
push ecx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+14h]  +
call loc_446B00  +
mov eax [ebp+0Ch] +
add esp 0Ch +
pop ebp  +
retn 10h  +
***
call sub_445D35  +
call sub_445D35  +
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_4028B4 +
jz loc_422D1E  +
push dword ptr [esi+0Ch]  +
call sub_4350A9  +
pop ecx  +
push dword ptr [esi+14h]  +
call sub_4350A9  +
pop ecx  +
mov dword ptr [esi] offset off_4029B8 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ax [ebp+0Ch] +
mov [ebp-4] ax +
lea eax [ebp-8] +
push eax  +
push 1  +
lea eax [ebp-4] +
push eax  +
push 1  +
call ds:GetStringTypeW  +
neg eax  +
sbb eax eax +
and ax [ebp-8] +
test [ebp+8] ax +
setnz al  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov ecx [ebp+0Ch] +
sub ecx [ebp+8] +
sar ecx 1 +
push ecx  +
push dword ptr [ebp+8]  +
push 1  +
call ds:GetStringTypeW  +
mov eax [ebp+0Ch] +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+0Ch] +
mov ebx ecx +
cmp edi [ebp+10h] +
jz loc_422DD7  +
push esi  +
mov ecx [ebx] +
movzx eax word ptr [edi] +
push eax  +
push dword ptr [ebp+8]  +
mov esi [ecx+10h] +
mov ecx esi +
call ds:off_454218  +
mov ecx ebx +
call esi  +
test al al +
jnz loc_422DD6  +
add edi 2 +
cmp edi [ebp+10h] +
jnz loc_422DB2  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+0Ch] +
mov ebx ecx +
cmp edi [ebp+10h] +
jz loc_422E17  +
push esi  +
mov ecx [ebx] +
movzx eax word ptr [edi] +
push eax  +
push dword ptr [ebp+8]  +
mov esi [ecx+10h] +
mov ecx esi +
call ds:off_454218  +
mov ecx ebx +
call esi  +
test al al +
jz loc_422E16  +
add edi 2 +
cmp edi [ebp+10h] +
jnz loc_422DF2  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea edx [ecx+8] +
mov ecx [ebp+8] +
call sub_42C3B0  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
sub eax esi +
inc eax  +
shr eax 1 +
cmp [ebp+0Ch] esi +
push edi  +
sbb edi edi +
not edi  +
and edi eax +
jz loc_422E7F  +
lea eax [ecx+8] +
mov [ebp-4] eax +
mov cx [esi] +
mov edx eax +
call sub_42C3B0  +
mov [esi] ax +
add esi 2 +
mov eax [ebp-4] +
inc ebx  +
cmp ebx edi +
jnz loc_422E67  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea edx [ecx+8] +
mov ecx [ebp+8] +
call sub_42C6CD  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
sub eax esi +
inc eax  +
shr eax 1 +
cmp [ebp+0Ch] esi +
push edi  +
sbb edi edi +
not edi  +
and edi eax +
jz loc_422EEF  +
lea eax [ecx+8] +
mov [ebp-4] eax +
mov cx [esi] +
mov edx eax +
call sub_42C6CD  +
mov [esi] ax +
add esi 2 +
mov eax [ebp-4] +
inc ebx  +
cmp ebx edi +
jnz loc_422ED7  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov al [ebp+8] +
lea edx [ebp-4] +
mov [ebp-4] al +
lea eax [ecx+18h] +
push eax  +
push 1  +
lea ecx [ebp-8] +
call sub_42BE14  +
pop ecx  +
test eax eax +
mov eax 0FFFFh +
pop ecx  +
js locret_422F2D  +
movzx eax word ptr [ebp-8] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+0Ch] +
and dword ptr [ebp-0Ch] 0 +
push esi  +
mov esi [ebp+8] +
sub eax esi +
cmp [ebp+0Ch] esi +
push edi  +
sbb edi edi +
not edi  +
and edi eax +
jz loc_422FA3  +
add ecx 18h +
push ebx  +
mov ebx [ebp+10h] +
mov [ebp-10h] ecx +
mov al [esi] +
lea edx [ebp-4] +
push ecx  +
push 1  +
lea ecx [ebp-8] +
mov [ebp-4] al +
call sub_42BE14  +
pop ecx  +
test eax eax +
mov eax 0FFFFh +
pop ecx  +
js loc_422F8D  +
movzx eax word ptr [ebp-8] +
mov ecx [ebp-10h] +
mov [ebx] ax +
add ebx 2 +
mov eax [ebp-0Ch] +
inc esi  +
inc eax  +
mov [ebp-0Ch] eax +
cmp eax edi +
jnz loc_422F6B  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_452720 +
xor eax ebp +
mov [ebp-4] eax +
mov edx [ebp+8] +
lea eax [ecx+18h] +
push eax  +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_42C507  +
pop ecx  +
cmp eax 1 +
mov al [ebp+0Ch] +
pop ecx  +
jnz loc_422FDF  +
mov al [ebp-0Ch] +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44503A  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_452720 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
and dword ptr [ebp-10h] 0 +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
mov esi [ebp+8] +
sub eax esi +
inc eax  +
shr eax 1 +
cmp [ebp+0Ch] esi +
push edi  +
sbb edi edi +
not edi  +
and edi eax +
jz loc_423056  +
lea eax [ecx+18h] +
mov [ebp-14h] eax +
movzx edx word ptr [esi] +
push eax  +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_42C507  +
pop ecx  +
cmp eax 1 +
mov al [ebp+10h] +
pop ecx  +
jnz loc_423042  +
mov al [ebp-0Ch] +
mov [ebx] al +
add esi 2 +
mov eax [ebp-10h] +
inc ebx  +
inc eax  +
mov [ebp-10h] eax +
cmp eax edi +
mov eax [ebp-14h] +
jnz loc_423028  +
mov ecx [ebp-4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44503A  +
leave   +
retn 10h  +
***
call sub_445D69  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D35  +
mov edi ecx +
xor ebx ebx +
mov dword ptr [edi+14h] 201h +
push 8  +
mov [edi+30h] ebx +
mov [edi+8] ebx +
mov [edi+10h] ebx +
mov dword ptr [edi+18h] 6 +
mov [edi+1Ch] ebx +
mov [edi+20h] ebx +
mov [edi+24h] ebx +
mov [edi+28h] ebx +
mov [edi+2Ch] ebx +
mov [edi+0Ch] ebx +
call sub_44504B  +
pop ecx  +
mov esi eax +
mov [ebp-4] ebx +
call sub_42C1B0  +
mov [esi+4] eax +
mov [edi+30h] esi +
call sub_445D0F  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_423240  +
mov dword ptr [esi] offset off_402A08 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_423240  +
mov dword ptr [esi] offset off_4029F4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
call sub_4223A0  +
mov dword ptr [edi] offset off_402894 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_4223A0  +
mov dword ptr [esi] offset off_402888 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_445D69  +
call sub_445D35  +
call sub_445D69  +
cmp dword ptr [edx+14h] 8 +
cmp dword ptr [edx+14h] 8 +
jb loc_4234CC  +
mov edx [edx] +
cmp dword ptr [ecx+14h] 8 +
jb loc_4234D4  +
mov ecx [ecx] +
push edx  +
push ecx  +
call sub_432648  +
neg eax  +
pop ecx  +
sbb al al +
pop ecx  +
inc al  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
xor eax eax +
push edi  +
mov edi [ecx+8] +
mov ebx edx +
mov [esi+4] eax +
test edi edi +
jnz loc_423682  +
mov [esi] eax +
mov edx eax +
mov edi eax +
jmp loc_42368A  +
push 2  +
mov [esi] edi +
movzx edi word ptr [edi] +
pop edx  +
push esi  +
push [ebp+arg_4]  +
mov [esi+8] edi +
push eax  +
push eax  +
push ebx  +
mov [esi+0Ch] edx +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
call ds:EventWriteTransfer  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_452720 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_402794 +
test byte_4535C0 1 +
jz loc_4237BA  +
lea eax [ebp+var_14] +
mov edx offset dword_41BBA0 +
push eax  +
push 1  +
push ecx  +
mov ecx offset dword_451168 +
call sub_423661  +
lea ecx [esi+74h] +
call sub_421992  +
lea ecx [esi+50h] +
call sub_421992  +
lea ecx [esi+34h] +
call sub_425231  +
lea ecx [esi+1Ch] +
call sub_421992  +
mov ecx [ebp+var_4] +
mov dword ptr [esi] offset off_4027C0 +
xor ecx ebp +
pop esi  +
call sub_44503A  +
leave   +
retn   +
***
retn   +
***
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_423780  +
test [ebp+arg_0] 1 +
jz loc_4238C0  +
push 8Ch  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_445D69  +
call sub_445D69  +
mov edi [ebp+8] +
mov ebx [ebp+0Ch] +
mov [ebp-98h] edi +
mov [ebp-9Ch] edi +
xor ecx ecx +
mov eax ebx +
mov [ebp-4] ecx +
cmp dword ptr [ebx+14h] 8 +
jb loc_423982  +
mov eax [ebx] +
push ecx  +
push 80h  +
push 3  +
push ecx  +
push 1  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov esi eax +
mov [ebp-0A8h] esi +
cmp esi 0FFFFFFFFh +
jnz loc_423ACE  +
cmp dword ptr [ebx+14h] 8 +
mov eax ebx +
jb loc_4239B4  +
mov eax [ebx] +
push 0  +
push 2000010h  +
push 3  +
push 0  +
push 1  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov esi eax +
mov [ebp-0A8h] esi +
cmp esi 0FFFFFFFFh +
jnz loc_423ACE  +
call ds:GetLastError  +
and dword ptr [ebp-30h] 0 +
lea ecx [ebp-40h] +
mov [ebp-98h] eax +
xor eax eax +
push 30h  +
push offset aVfsMappingFail  +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-28h] +
and dword ptr [ebp-18h] 0 +
xor eax eax +
push 4  +
push offset off_41BD1C  +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 2 +
call sub_424B17  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-94h] +
push eax  +
call sub_4302E1  +
mov esi eax +
push offset aCreateprocessc  +
lea ecx [ebp-74h] +
mov byte ptr [ebp-4] 3 +
call sub_4252D6  +
mov dword ptr [ebp-5Ch] 6Eh +
push ebx  +
mov ecx esi +
mov byte ptr [ebp-4] 4 +
call sub_429B5C  +
lea eax [ebp-98h] +
mov ecx esi +
push eax  +
call sub_429C5B  +
push esi  +
lea eax [ebp-28h] +
push eax  +
push 1  +
lea ecx [ebp-74h] +
call sub_4303F4  +
lea ecx [ebp-74h] +
call sub_425231  +
lea ecx [ebp-8Ch] +
mov dword ptr [ebp-94h] offset off_402AF0 +
call sub_421992  +
lea ecx [ebp-28h] +
call sub_421992  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 0 +
call sub_421992  +
push offset dword_41BCA0  +
mov ecx edi +
call sub_42196B  +
push 0FFFFFFFFh  +
jmp loc_423CF0  +
and dword ptr [ebp-48h] 0 +
xor eax eax +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
push ecx  +
lea edx [ebp-58h] +
mov byte ptr [ebp-4] 5 +
mov ecx esi +
call sub_431B0D  +
mov [ebp-0A0h] eax +
xor ecx ecx +
mov eax edx +
mov edi eax +
mov [ebp-9Ch] eax +
and edi 80h +
or ecx edi +
jnz loc_423C08  +
and [ebp-18h] ecx +
xor eax eax +
push 7  +
pop edi  +
push 32h  +
push offset aVfsMappingFa_0  +
lea ecx [ebp-28h] +
mov [ebp-14h] edi +
mov [ebp-28h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-40h] +
and dword ptr [ebp-30h] 0 +
xor eax eax +
push 4  +
push offset off_41BD1C  +
mov [ebp-2Ch] edi +
mov [ebp-40h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 7 +
call sub_424B17  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-94h] +
push eax  +
call sub_4302E1  +
mov edi eax +
push offset aCreateprocessc  +
lea ecx [ebp-74h] +
mov byte ptr [ebp-4] 8 +
call sub_4252D6  +
mov dword ptr [ebp-5Ch] 79h +
mov byte ptr [ebp-4] 9 +
mov ecx edi +
mov eax [ebp-0A0h] +
mov [ebp-0A4h] eax +
mov eax [ebp-9Ch] +
push ebx  +
mov [ebp-0A0h] eax +
call sub_429B5C  +
lea eax [ebp-0A4h] +
mov ecx edi +
push eax  +
call sub_430532  +
push eax  +
lea eax [ebp-40h] +
push eax  +
push 1  +
lea ecx [ebp-74h] +
call sub_4303F4  +
lea ecx [ebp-74h] +
call sub_425231  +
lea ecx [ebp-8Ch] +
mov dword ptr [ebp-94h] offset off_402AF0 +
call sub_421992  +
lea ecx [ebp-40h] +
call sub_421992  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 5 +
call sub_421992  +
mov edi [ebp-98h] +
mov ecx edi +
push offset dword_41BCA0  +
call sub_42196B  +
jmp loc_423CE3  +
lea ecx [ebp-58h] +
call sub_423528  +
and dword ptr [ebp-18h] 0 +
lea ecx [ebp-28h] +
push 7  +
pop ebx  +
push 6  +
xor eax eax +
mov [ebp-14h] ebx +
mov edi offset aRoot +
mov [ebp-28h] ax +
push edi  +
call sub_4219E8  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-40h] +
and dword ptr [ebp-30h] 0 +
xor eax eax +
push 0Eh  +
push offset a_privateRoot  +
mov [ebp-2Ch] ebx +
mov [ebp-40h] ax +
call sub_4219E8  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 0Bh +
push eax  +
lea edx [ebp-40h] +
lea ecx [ebp-58h] +
call sub_42339F  +
lea ecx [ebp-40h] +
call sub_421992  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 5 +
call sub_421992  +
and dword ptr [ebp-18h] 0 +
lea ecx [ebp-28h] +
push 6  +
xor eax eax +
mov [ebp-14h] ebx +
push edi  +
mov [ebp-28h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-40h] +
and dword ptr [ebp-30h] 0 +
xor eax eax +
push 0Ch  +
push offset a_stageRoot  +
mov [ebp-2Ch] ebx +
mov [ebp-40h] ax +
call sub_4219E8  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 0Dh +
push eax  +
lea edx [ebp-40h] +
lea ecx [ebp-58h] +
call sub_42339F  +
lea ecx [ebp-40h] +
call sub_421992  +
lea ecx [ebp-28h] +
call sub_421992  +
mov edi [ebp-98h] +
lea eax [ebp-58h] +
push eax  +
mov ecx edi +
call sub_421936  +
lea ecx [ebp-58h] +
call sub_421992  +
test esi esi +
jz loc_423CF6  +
push esi  +
call ds:CloseHandle  +
mov eax edi +
call sub_445D24  +
retn 8  +
***
call sub_445D69  +
call sub_445D69  +
call sub_445D69  +
call sub_445D69  +
mov esi ecx +
mov [ebp-2Ch] esi +
push dword ptr [ebp+1Ch]  +
mov [ebp-30h] esi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
call sub_4236D5  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+10h] +
mov ecx [esi+70h] +
mov [esi+8Ch] eax +
mov eax [ebp+14h] +
mov [esi+90h] eax +
mov eax [ebp+18h] +
mov [esi+94h] eax +
mov eax [ebp+28h] +
mov [esi+9Ch] eax +
mov eax [ebp+2Ch] +
mov [esi+0A0h] eax +
mov eax [ebp+8] +
mov [esi+0A4h] eax +
mov dword ptr [esi] offset off_40286C +
mov eax [ecx] +
mov [esi+98h] eax +
mov eax [ecx] +
shr eax 2 +
and al 1 +
mov [esi+4] al +
or dword ptr [ecx] 4 +
lea ecx [ebp-28h] +
mov eax [esi+6Ch] +
mov edx [esi+0A4h] +
push dword ptr [eax]  +
mov edx [edx] +
call sub_42F209  +
push eax  +
lea ecx [esi+74h] +
mov byte ptr [ebp-4] 1 +
call sub_425163  +
lea ecx [ebp-28h] +
call sub_421992  +
mov eax esi +
call sub_445D24  +
retn 28h  +
***
mov edi edi +
push ebx  +
mov ebx ecx +
push edi  +
mov eax [ebx+0A0h] +
mov dword ptr [ebx] offset off_40286C +
mov edi [eax] +
test edi edi +
jz loc_4243DA  +
push esi  +
lea esi [ebx+8] +
movs   +
movs   +
movs   +
movs   +
pop esi  +
jmp loc_4243EC  +
push dword ptr [ebx+8]  +
call ds:CloseHandle  +
push dword ptr [ebx+0Ch]  +
call ds:CloseHandle  +
pop edi  +
mov ecx ebx +
pop ebx  +
jmp sub_423780  +
***
call sub_445D69  +
mov ebx ecx +
cmp byte ptr [ebp+0Ch] 0 +
mov eax [ebp+8] +
mov [ebp-0E0h] eax +
jz loc_42442B  +
mov ecx [ebx+70h] +
mov eax [ebx+98h] +
mov [ecx] eax +
push 7  +
xor edi edi +
xor eax eax +
pop ecx  +
mov [ebp-90h] edi +
mov [ebp-8Ch] ecx +
mov [ebp-0A0h] ax +
mov [ebp-4] edi +
mov [ebp-78h] edi +
mov [ebp-74h] ecx +
mov [ebp-88h] ax +
mov [ebp-30h] edi +
mov [ebp-2Ch] ecx +
mov [ebp-40h] ax +
mov [ebp-60h] edi +
mov [ebp-5Ch] ecx +
mov [ebp-70h] ax +
mov byte ptr [ebp-4] 3 +
mov eax [ebx+0A4h] +
mov ecx [eax] +
test ecx ecx +
jz loc_4244BF  +
call sub_42387F  +
test al al +
jz loc_4244BF  +
mov eax [ebx+0A4h] +
lea ecx [ebp-28h] +
push dword ptr [eax]  +
call sub_42196B  +
push eax  +
lea ecx [ebp-0A0h] +
mov byte ptr [ebp-4] 4 +
call sub_425163  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 3 +
call sub_421992  +
push edi  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-0A0h] +
push eax  +
call sub_423D05  +
mov eax [ebx+6Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_42450A  +
call sub_42387F  +
test al al +
jz loc_42450A  +
mov eax [ebx+6Ch] +
lea ecx [ebp-28h] +
push dword ptr [eax]  +
call sub_42196B  +
push eax  +
lea ecx [ebp-88h] +
mov byte ptr [ebp-4] 5 +
call sub_425163  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 3 +
call sub_421992  +
lea eax [ebp-70h] +
push eax  +
lea eax [ebp-88h] +
push eax  +
call sub_423E6A  +
cmp dword ptr [ebp-30h] 0 +
jnz loc_424514  +
mov esi edi +
jmp loc_424520  +
cmp dword ptr [ebp-2Ch] 8 +
lea esi [ebp-40h] +
jb loc_424520  +
mov esi [ebp-40h] +
cmp dword ptr [ebp-60h] 0 +
jnz loc_42452E  +
mov [ebp-0E4h] edi +
jmp loc_424546  +
cmp dword ptr [ebp-5Ch] 8 +
lea eax [ebp-70h] +
mov [ebp-0E4h] eax +
jb loc_424546  +
mov eax [ebp-70h] +
mov [ebp-0E4h] eax +
push edi  +
call ds:SetLastError  +
mov ecx [ebp-0E4h] +
test esi esi +
jz loc_42455B  +
mov eax esi +
jmp loc_424574  +
mov eax [ebx+0A4h] +
mov eax [eax] +
test eax eax +
jnz loc_424574  +
test ecx ecx +
jz loc_42456F  +
mov eax ecx +
jmp loc_424574  +
mov eax [ebx+6Ch] +
mov eax [eax] +
push ecx  +
mov edx esi +
mov [ebp-0E8h] eax +
lea ecx [ebp-28h] +
call sub_42F209  +
mov ecx [ebp-0E0h] +
push eax  +
call sub_4218FD  +
lea ecx [ebp-28h] +
call sub_421992  +
mov eax [ebp-0E0h] +
cmp [eax+10h] edi +
jnz loc_424610  +
lea eax [ebp-88h] +
push eax  +
lea edx [ebp-0A0h] +
lea ecx [ebp-28h] +
call sub_42F2F5  +
mov ecx [ebp-0E0h] +
push eax  +
call sub_4218FD  +
lea ecx [ebp-28h] +
call sub_421992  +
mov eax [ebp-0E0h] +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_4245DD  +
mov ecx [eax] +
test ecx ecx +
jz loc_424610  +
call sub_42387F  +
test al al +
jz loc_424610  +
push edi  +
lea eax [ebp-40h] +
push eax  +
push dword ptr [ebp-0E0h]  +
call sub_423D05  +
cmp dword ptr [ebp-30h] 0 +
jnz loc_424604  +
mov esi edi +
jmp loc_424610  +
cmp dword ptr [ebp-2Ch] 8 +
lea esi [ebp-40h] +
jb loc_424610  +
mov esi [ebp-40h] +
push dword ptr [ebp-0E4h]  +
mov ecx ebx +
push esi  +
call sub_424810  +
test eax eax +
jnz loc_424710  +
call ds:GetLastError  +
push 7  +
pop ebx  +
mov [ebp-0E0h] eax +
lea ecx [ebp-28h] +
push 28h  +
xor eax eax +
mov [ebp-18h] edi +
push offset aCreateProcess1  +
mov [ebp-14h] ebx +
mov [ebp-28h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-58h] +
push 4  +
xor eax eax +
mov [ebp-48h] edi +
push offset off_41BD1C  +
mov [ebp-44h] ebx +
mov [ebp-58h] ax +
call sub_4219E8  +
mov [ebp-4] bl +
call sub_424B17  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-0DCh] +
push eax  +
call sub_4302E1  +
mov esi eax +
push offset aCreateprocessw  +
lea ecx [ebp-0BCh] +
mov byte ptr [ebp-4] 8 +
call sub_4252D6  +
mov dword ptr [ebp-0A4h] 1DFh +
lea eax [ebp-0E8h] +
mov byte ptr [ebp-4] 9 +
push eax  +
mov ecx esi +
call sub_428704  +
mov esi eax +
lea eax [ebp-0E0h] +
push eax  +
mov ecx esi +
call sub_429C5B  +
push esi  +
lea eax [ebp-58h] +
push eax  +
push 1  +
lea ecx [ebp-0BCh] +
call sub_4303F4  +
lea ecx [ebp-0BCh] +
call sub_425231  +
lea ecx [ebp-0D4h] +
mov dword ptr [ebp-0DCh] offset off_402AF0 +
call sub_421992  +
lea ecx [ebp-58h] +
call sub_421992  +
lea ecx [ebp-28h] +
call sub_421992  +
jmp loc_4247DD  +
push 7  +
pop ebx  +
push 24h  +
xor eax eax +
mov [ebp-48h] edi +
push offset aCreateVirtualP  +
lea ecx [ebp-58h] +
mov [ebp-44h] ebx +
mov [ebp-58h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-28h] +
push 4  +
xor eax eax +
mov [ebp-18h] edi +
push offset off_41BD1C  +
mov [ebp-14h] ebx +
mov [ebp-28h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 0Bh +
call sub_424B17  +
lea eax [ebp-58h] +
push eax  +
lea eax [ebp-0DCh] +
push eax  +
call sub_4302E1  +
mov esi eax +
push offset aCreateprocessw  +
lea ecx [ebp-0BCh] +
mov byte ptr [ebp-4] 0Ch +
call sub_4252D6  +
mov dword ptr [ebp-0A4h] 1E5h +
lea eax [ebp-0E8h] +
mov byte ptr [ebp-4] 0Dh +
push eax  +
mov ecx esi +
call sub_428704  +
push eax  +
lea eax [ebp-28h] +
push eax  +
push 4  +
lea ecx [ebp-0BCh] +
call sub_4303F4  +
lea ecx [ebp-0BCh] +
call sub_425231  +
lea ecx [ebp-0D4h] +
mov dword ptr [ebp-0DCh] offset off_402AF0 +
call sub_421992  +
lea ecx [ebp-28h] +
call sub_421992  +
lea ecx [ebp-58h] +
call sub_421992  +
xor edi edi +
inc edi  +
lea ecx [ebp-70h] +
call sub_421992  +
lea ecx [ebp-40h] +
call sub_421992  +
lea ecx [ebp-88h] +
call sub_421992  +
lea ecx [ebp-0A0h] +
call sub_421992  +
mov eax edi +
call sub_445D24  +
retn 8  +
***
mov edi edi +
call sub_445D69  +
mov edi ecx +
xor esi esi +
mov dword ptr [ebp-44h] 7 +
xor eax eax +
mov [ebp-48h] esi +
mov [ebp-58h] ax +
push esi  +
lea eax [ebp-58h] +
mov [ebp-4] esi +
push eax  +
call sub_424400  +
mov ebx eax +
test ebx ebx +
jz loc_4249D6  +
mov edx [edi+8] +
lea ecx [edi+74h] +
call sub_42EF7E  +
mov edx [edi+10h] +
cmp eax 3 +
setz byte ptr [ebp-98h]  +
push dword ptr [ebp-98h]  +
call sub_42B87E  +
mov [ebp-0A0h] eax +
mov eax esi +
mov [ebp-9Ch] edx +
and edx 80h +
or eax edx +
jnz loc_4249C5  +
push 45h  +
push offset aInjectingVirtu  +
lea ecx [ebp-40h] +
mov [ebp-30h] esi +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-28h] +
push 4  +
xor eax eax +
mov [ebp-18h] esi +
push offset off_41BD1C  +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 2 +
call sub_424B17  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-94h] +
push eax  +
call sub_4302E1  +
mov esi eax +
push offset aGenericcreatep  +
lea ecx [ebp-74h] +
mov byte ptr [ebp-4] 3 +
call sub_4252D6  +
mov dword ptr [ebp-5Ch] 2E5h +
lea eax [ebp-58h] +
mov byte ptr [ebp-4] 4 +
push eax  +
mov ecx esi +
call sub_429B5C  +
lea eax [ebp-0A0h] +
mov ecx esi +
push eax  +
call sub_428752  +
push eax  +
lea eax [ebp-28h] +
push eax  +
push 1  +
lea ecx [ebp-74h] +
call sub_4303F4  +
lea ecx [ebp-74h] +
call sub_425231  +
lea ecx [ebp-8Ch] +
mov dword ptr [ebp-94h] offset off_402AF0 +
call sub_421992  +
lea ecx [ebp-28h] +
call sub_421992  +
lea ecx [ebp-40h] +
call sub_421992  +
cmp byte ptr [edi+4] 0 +
jnz loc_4249D4  +
push dword ptr [edi+0Ch]  +
call ds:ResumeThread  +
mov esi ebx +
lea ecx [ebp-58h] +
call sub_421992  +
mov eax esi +
call sub_445D24  +
retn   +
***
call sub_445D35  +
mov edi ecx +
mov ecx [edi] +
test ecx ecx +
jz loc_424A6F  +
xor ebx ebx +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
mov [ebp-10h] ebx +
lea edx [ebp-18h] +
mov [ebp-4] ebx +
call sub_4287AB  +
mov ecx [ebp+8] +
lea eax [ebp-18h] +
push eax  +
call sub_424D40  +
mov esi [ebp-18h] +
add edi 8 +
jmp loc_424A58  +
push esi  +
call sub_4218DE  +
push ebx  +
push 1  +
mov ecx edi +
call sub_4250CA  +
add esi 18h +
mov ecx edi +
cmp esi [ebp-14h] +
jnz loc_424A45  +
push ebx  +
push 1  +
call sub_4250CA  +
lea ecx [ebp-18h] +
call sub_424DF8  +
call sub_445D0F  +
retn 4  +
***
call sub_445D35  +
call sub_445DA0  +
mov eax dword_453658 +
test eax eax +
jnz loc_424B98  +
jmp loc_424B35  +
dec dword_4535D4  +
xor eax eax +
inc eax  +
xadd dword_4535D4 eax +
inc eax  +
cmp eax 1 +
jnz loc_424B2E  +
xor esi esi +
mov [ebp-4] esi +
cmp dword_453658 esi +
jnz loc_424B8C  +
push 0Ch  +
call sub_44504B  +
mov edi eax +
pop ecx  +
mov [ebp-14h] edi +
mov byte ptr [ebp-4] 1 +
push 4  +
mov dword ptr [edi] offset off_402AE0 +
call sub_44504B  +
pop ecx  +
push dword ptr [ebp-18h]  +
lea ecx [edi+4] +
or dword ptr [eax] 0FFFFFFFFh +
push eax  +
mov [ecx] esi +
mov [ecx+4] esi +
call sub_430436  +
push edi  +
call sub_42614A  +
dec dword_4535D4  +
mov eax dword_453658 +
call sub_445D0F  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
mov dword ptr [esi] offset off_40271C +
call sub_425231  +
mov dword ptr [esi] offset off_4027B4 +
pop esi  +
retn   +
***
call sub_445D69  +
mov esi ecx +
mov edi [ebp+8] +
xor ebx ebx +
push ecx  +
push ecx  +
lea ecx [ebp-0DCh] +
mov [ebp-2Ch] ebx +
call sub_426DCA  +
mov edx offset aMav_reset_curr +
mov [ebp-4] ebx +
lea ecx [ebp-0CCh] +
call sub_4288E8  +
mov edx offset asc_41BAF8 +
mov ecx eax +
call sub_4288E8  +
lea edx [esi+4] +
cmp dword ptr [edx+14h] 10h +
mov eax [edx+10h] +
jb loc_424C33  +
mov edx [edx] +
push eax  +
lea ecx [ebp-0CCh] +
call sub_429EC7  +
mov byte ptr [ebp-4] 1 +
test byte ptr [ebp-88h] 2 +
push 2  +
pop esi  +
mov [ebp-18h] ebx +
mov dword ptr [ebp-14h] 0Fh +
mov [ebp-28h] bl +
mov [ebp-2Ch] esi +
jnz loc_424C85  +
mov eax [ebp-0A4h] +
mov ecx [eax] +
test ecx ecx +
jz loc_424C85  +
mov eax [ebp-0B4h] +
mov edx [eax] +
mov eax [ebp-8Ch] +
cmp ecx eax +
jb loc_424C7F  +
mov eax ecx +
sub eax edx +
push eax  +
push edx  +
jmp loc_424CB0  +
test byte ptr [ebp-88h] 4 +
jnz loc_424CB8  +
mov eax [ebp-0A8h] +
mov edx [eax] +
test edx edx +
jz loc_424CB8  +
mov eax [ebp-0B8h] +
mov ecx [eax] +
mov eax [ebp-98h] +
mov eax [eax] +
sub eax ecx +
add eax edx +
push eax  +
push ecx  +
lea ecx [ebp-28h] +
call sub_426B34  +
mov [ebp-4] esi +
lea ecx [ebp-28h] +
mov eax [edi+4] +
push ecx  +
cmp [edi+8] eax +
jz loc_424CD4  +
mov ecx eax +
call sub_42530D  +
add dword ptr [edi+4] 18h +
jmp loc_424CDC  +
push eax  +
mov ecx edi +
call sub_42901A  +
push dword ptr [ebp-2Ch]  +
mov eax [edi+4] +
push eax  +
push dword ptr [edi]  +
call sub_428A61  +
lea ecx [ebp-28h] +
call sub_425231  +
lea ecx [ebp-74h] +
call sub_426D99  +
lea ecx [ebp-74h] +
mov dword ptr [ebp-74h] offset off_4027D8 +
call sub_423164  +
call sub_445D24  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
mov dword ptr [esi] offset off_40296C +
call sub_421992  +
mov dword ptr [esi] offset off_4028A8 +
pop esi  +
retn   +
***
call sub_445D69  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx ecx +
push esi  +
mov [ebp+var_C] ebx +
mov esi [ebx] +
mov [ebp+var_8] esi +
test esi esi +
jz loc_424E54  +
mov eax [ebx+4] +
push edi  +
mov edi esi +
push 18h  +
pop ecx  +
cmp esi eax +
jz loc_424E37  +
push ecx  +
mov ebx eax +
pop esi  +
mov ecx edi +
call sub_421992  +
add edi esi +
cmp edi ebx +
jnz loc_424E21  +
mov esi [ebp+var_8] +
mov ebx [ebp+var_C] +
push 18h  +
pop ecx  +
mov eax [ebx+8] +
sub eax esi +
cdq   +
idiv  ecx +
mov ecx esi +
imul edx eax +
call sub_421D72  +
xor eax eax +
mov [ebx] eax +
mov [ebx+4] eax +
mov [ebx+8] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ecx +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebx] eax +
mov [ebx+4] eax +
mov [ebx+8] eax +
test esi esi +
jz loc_424EBE  +
push edi  +
push esi  +
call sub_42992E  +
mov edi [ebx] +
add esi esi +
push esi  +
push 0  +
push edi  +
call sub_4469A0  +
and [ebp+var_4] 0 +
lea eax [esi+edi] +
add esp 0Ch +
mov [ebx+4] eax +
lea ecx [ebp+var_4] +
call sub_429906  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D35  +
mov ebx ecx +
mov [ebp-14h] ebx +
xor edx edx +
lea esi [ebx+10h] +
mov [ebp-10h] edx +
mov dword ptr [ebx] offset dword_41BFF0 +
mov dword ptr [esi] offset dword_41BFF8 +
mov dword ptr [ebx+68h] offset off_402714 +
mov [ebp-4] edx +
lea edi [ebx+18h] +
mov eax [ebx] +
mov dword ptr [ebp-10h] 1 +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_402768 +
mov eax [ebx] +
mov ecx [eax+4] +
push ecx  +
push edi  +
lea eax [ecx-18h] +
mov [ecx+ebx-4] eax +
mov eax [ebx] +
mov [ebx+8] edx +
mov [ebx+0Ch] edx +
mov ecx [eax+4] +
add ecx ebx +
call sub_4280B0  +
mov [ebp-18h] esi +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4027EC +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-4] eax +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_4027AC +
mov eax [ebx] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+ebx-4] eax +
mov dword ptr [ebp-4] 5 +
mov ecx edi +
mov eax [ebx] +
push 3  +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_402A00 +
mov eax [ebx] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+ebx-4] eax +
call sub_426CC0  +
mov eax ebx +
call sub_445D0F  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
mov esi ecx +
add edi [ebp+arg_4] +
adc eax [ebp+arg_8] +
mov [ebp+var_4] eax +
mov eax [esi+1Ch] +
mov eax [eax] +
mov [ebp+var_8] eax +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_4254B5  +
cmp [esi+38h] ecx +
jnb loc_4254B5  +
mov [esi+38h] ecx +
mov eax [esi+0Ch] +
mov ebx [esi+38h] +
mov edx [eax] +
mov eax ebx +
sub eax edx +
mov [ebp+var_C] edx +
sar eax 1 +
cdq   +
cmp [ebp+var_4] edx +
ja loc_425552  +
jb loc_4254D6  +
cmp edi eax +
ja loc_425552  +
mov edx [ebp+arg_1C] +
mov eax edi +
or eax [ebp+var_4] +
jz loc_4254F4  +
test dl 1 +
jz loc_4254EB  +
cmp [ebp+var_8] 0 +
jz loc_425552  +
test dl 2 +
jz loc_4254F4  +
test ecx ecx +
jz loc_425552  +
mov eax [ebp+var_C] +
lea eax [eax+edi*2] +
test dl 1 +
jz loc_425516  +
cmp [ebp+var_8] 0 +
jz loc_425516  +
mov edx [esi+1Ch] +
sub ebx eax +
sar ebx 1 +
mov [edx] eax +
mov eax [esi+2Ch] +
mov edx [ebp+arg_1C] +
mov [eax] ebx +
test dl 2 +
jz loc_425545  +
test ecx ecx +
jz loc_425545  +
mov eax [esi+30h] +
mov ebx [ebp+var_C] +
mov ecx [eax] +
mov eax [esi+20h] +
lea edx [ebx+edi*2] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+10h] +
sub ecx edx +
sar ecx 1 +
mov [eax] ebx +
mov eax [esi+20h] +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax] edi +
mov [eax+4] ecx +
jmp loc_42555C  +
mov eax [ebp+arg_0] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [eax+4] 0FFFFFFFFh +
xor ecx ecx +
pop edi  +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
pop esi  +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+1Ch] +
mov eax [eax] +
mov [esp+28h+var_18] eax +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_4255AA  +
cmp [esi+38h] ecx +
jnb loc_4255AA  +
mov [esi+38h] ecx +
mov eax [esi+0Ch] +
mov ebx [ebp+arg_10] +
mov edx [eax] +
mov eax [esi+38h] +
mov edi eax +
mov [esp+28h+var_14] eax +
sub edi edx +
mov eax [ebp+arg_C] +
sar edi 1 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_8] edi +
sub eax 0 +
jz loc_425627  +
sub eax 1 +
jz loc_4255E6  +
sub eax 1 +
jnz loc_4256DD  +
mov eax edi +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_42562B  +
mov eax ebx +
and eax 3 +
cmp al 3 +
jz loc_4256DD  +
test bl 1 +
jz loc_42560E  +
mov eax [esp+28h+var_18] +
test eax eax +
jnz loc_425608  +
test edx edx +
jnz loc_4256DD  +
sub eax edx +
sar eax 1 +
jmp loc_4255DF  +
test bl 2 +
jz loc_4256DD  +
test ecx ecx +
jnz loc_425623  +
test edx edx +
jnz loc_4256DD  +
mov eax ecx +
jmp loc_425608  +
xor edi edi +
xor eax eax +
add edi [ebp+arg_4] +
adc eax [ebp+arg_8] +
mov [esp+28h+var_10] eax +
mov eax [esp+28h+var_8] +
cdq   +
cmp [esp+28h+var_10] edx +
ja loc_4256DD  +
jb loc_42564E  +
cmp edi eax +
ja loc_4256DD  +
mov eax edi +
or eax [esp+28h+var_10] +
jz loc_42566B  +
test bl 1 +
jz loc_425662  +
cmp [esp+28h+var_18] 0 +
jz loc_4256DD  +
test bl 2 +
jz loc_42566B  +
test ecx ecx +
jz loc_4256DD  +
mov edx [esp+28h+var_C] +
lea eax [edx+edi*2] +
mov [esp+28h+var_8] eax +
test bl 1 +
jz loc_4256A2  +
cmp [esp+28h+var_18] 0 +
jz loc_4256A2  +
mov edx [esi+1Ch] +
mov [edx] eax +
mov eax [esp+28h+var_14] +
sub eax [esp+28h+var_8] +
sar eax 1 +
mov [esp+28h+var_14] eax +
mov eax [esi+2Ch] +
mov edx [esp+28h+var_14] +
mov [eax] edx +
mov edx [esp+28h+var_C] +
test bl 2 +
jz loc_4256CF  +
test ecx ecx +
jz loc_4256CF  +
mov eax [esi+30h] +
mov ecx [eax] +
mov eax [esi+20h] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+10h] +
mov [eax] edx +
mov eax [esi+20h] +
mov edx [esp+28h+var_8] +
sub ecx edx +
sar ecx 1 +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [ebp+arg_0] +
mov ecx [esp+28h+var_10] +
mov [eax] edi +
mov [eax+4] ecx +
jmp loc_4256E7  +
mov eax [ebp+arg_0] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [eax+4] 0FFFFFFFFh +
xor ecx ecx +
pop edi  +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
pop esi  +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov ebx [esi+1Ch] +
mov edi [ebx] +
test edi edi +
jz loc_425758  +
mov ecx [esi+2Ch] +
mov ecx [ecx] +
lea ecx [edi+ecx*2] +
cmp edi ecx +
jnb loc_425721  +
mov ax [edi] +
jmp loc_42575D  +
mov eax [esi+20h] +
mov edx [eax] +
test edx edx +
jz loc_425758  +
test byte ptr [esi+3Ch] 4 +
jnz loc_425758  +
cmp [esi+38h] edx +
jb loc_425738  +
mov edx [esi+38h] +
cmp edx edi +
jbe loc_425758  +
mov [esi+38h] edx +
mov eax ebx +
mov ecx [ebx] +
sub edx ecx +
sar edx 1 +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
mov eax [esi+1Ch] +
mov eax [eax] +
mov ax [eax] +
jmp loc_42575D  +
mov eax 0FFFFh +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+1Ch] +
push esi  +
push edi  +
mov edi 0FFFFh +
mov esi [eax] +
test esi esi +
jz loc_4257C2  +
mov eax [ecx+0Ch] +
cmp esi [eax] +
jbe loc_4257C2  +
mov dx [ebp+arg_0] +
cmp di dx +
jz loc_4257A1  +
cmp dx [esi-2] +
jz loc_4257A1  +
test byte ptr [ecx+3Ch] 2 +
jnz loc_4257C2  +
mov eax [ecx+2Ch] +
inc dword ptr [eax]  +
mov eax [ecx+1Ch] +
add dword ptr [eax] 0FFFFFFFEh +
cmp di dx +
jz loc_4257BE  +
mov eax [ecx+1Ch] +
mov eax [eax] +
mov [eax] dx +
movzx eax dx +
jmp loc_4257C5  +
xor eax eax +
jmp loc_4257C5  +
mov ax di +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445DA0  +
call sub_445DA0  +
mov edi ecx +
mov [ebp-14h] edi +
xor ebx ebx +
lea ecx [ebp-24h] +
push edi  +
mov esi ebx +
call sub_4261C8  +
mov [ebp-4] ebx +
cmp [ebp-20h] bl +
jz loc_425B76  +
lea eax [ebp-2Ch] +
push eax  +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
call sub_423136  +
mov ecx eax +
mov byte ptr [ebp-4] 1 +
call sub_428EC0  +
mov esi eax +
lea ecx [ebp-2Ch] +
mov [ebp-18h] esi +
call sub_4228C9  +
push dword ptr [ebp+8]  +
mov byte ptr [ebp-4] 2 +
mov ecx [edi] +
mov esi [esi] +
mov ecx [ecx+4] +
add ecx edi +
mov [ebp-34h] bl +
movzx eax word ptr [ecx+40h] +
push eax  +
push ecx  +
push dword ptr [ecx+38h]  +
mov ecx [esi+20h] +
lea eax [ebp-34h] +
push dword ptr [ebp-34h]  +
push eax  +
call ds:off_454218  +
mov ecx [ebp-18h] +
call dword ptr [esi+20h]  +
cmp [ebp-34h] bl +
jz loc_425B71  +
push 4  +
pop esi  +
jmp loc_425B73  +
mov edx [ebp-14h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_426D6B  +
mov eax offset loc_425B6C +
retn   +
mov edi [ebp-14h] +
xor ebx ebx +
mov esi ebx +
mov [ebp-4] ebx +
mov eax [edi] +
push ebx  +
push esi  +
mov ecx [eax+4] +
add ecx edi +
call sub_426D6B  +
lea ecx [ebp-24h] +
call sub_42617B  +
mov eax edi +
call sub_445D0F  +
retn 4  +
***
mov eax [ecx-8] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_4027EC +
mov eax [ecx-8] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
retn   +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_402768 +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
retn   +
***
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [eax+4] 0FFFFFFFFh +
xor ecx ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [eax+4] 0FFFFFFFFh +
xor ecx ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ebx +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_4] edx +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov eax edi +
mov [esp+20h+var_8] eax +
test ebx ebx +
jl loc_425D4A  +
jg loc_425C96  +
test edi edi +
jz loc_425D4A  +
mov eax [ecx+20h] +
mov eax [eax] +
mov [esp+20h+var_C] eax +
test eax eax +
jz loc_425CAA  +
mov eax [ecx+30h] +
mov eax [eax] +
jmp loc_425CAC  +
xor eax eax +
cdq   +
mov esi eax +
mov eax edx +
mov [esp+20h+var_10] eax +
test eax eax +
jl loc_425CFC  +
jg loc_425CBF  +
test esi esi +
jz loc_425CFC  +
cmp ebx eax +
jg loc_425CCF  +
jl loc_425CC9  +
cmp edi esi +
jnb loc_425CCF  +
mov esi edi +
mov [esp+20h+var_10] ebx +
lea eax [esi+esi] +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
push [esp+28h+var_C]  +
call loc_446B00  +
mov ecx [esp+2Ch+var_14] +
lea edx [esi+esi] +
add esp 0Ch +
sub edi esi +
sbb ebx [esp+20h+var_10] +
mov eax [ecx+30h] +
sub [eax] esi +
mov eax [ecx+20h] +
add [eax] edx +
jmp loc_425D2D  +
mov ecx [ecx] +
mov eax [ebp+arg_0] +
mov esi [ecx+0Ch] +
mov ecx esi +
movzx eax word ptr [eax] +
push eax  +
call ds:off_454218  +
mov ecx [esp+24h+var_14] +
call esi  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_425D42  +
mov ecx [esp+24h+var_18] +
add edi 0FFFFFFFFh +
push 2  +
adc ebx 0FFFFFFFFh +
pop edx  +
add [ebp+arg_0] edx +
test ebx ebx +
jg loc_425C96  +
jl loc_425D42  +
test edi edi +
jnz loc_425C96  +
mov eax [esp+24h+var_C] +
mov edx [esp+24h+var_8] +
sub eax edi +
pop edi  +
pop esi  +
sbb edx ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ebx +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_4] edx +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov eax edi +
mov [esp+20h+var_8] eax +
test ebx ebx +
jl loc_425E50  +
jg loc_425D96  +
test edi edi +
jz loc_425E50  +
mov eax [ecx+1Ch] +
mov eax [eax] +
mov [esp+20h+var_C] eax +
test eax eax +
jz loc_425DAA  +
mov eax [ecx+2Ch] +
mov eax [eax] +
jmp loc_425DAC  +
xor eax eax +
cdq   +
mov esi eax +
mov eax edx +
mov [esp+20h+var_10] eax +
test eax eax +
jl loc_425DFE  +
jg loc_425DBF  +
test esi esi +
jz loc_425DFE  +
cmp ebx eax +
jg loc_425DCF  +
jl loc_425DC9  +
cmp edi esi +
jnb loc_425DCF  +
mov esi edi +
mov [esp+20h+var_10] ebx +
lea eax [esi+esi] +
push eax  +
push [esp+24h+var_C]  +
push [ebp+arg_0]  +
call loc_446B00  +
mov ecx [esp+2Ch+var_14] +
lea edx [esi+esi] +
add esp 0Ch +
sub edi esi +
sbb ebx [esp+20h+var_10] +
mov eax [ecx+2Ch] +
sub [eax] esi +
mov eax [ecx+1Ch] +
add [eax] edx +
mov eax [ebp+arg_0] +
jmp loc_425E31  +
mov eax [ecx] +
mov esi [eax+1Ch] +
mov ecx esi +
call ds:off_454218  +
mov ecx [esp+20h+var_14] +
call esi  +
movzx ecx ax +
mov eax 0FFFFh +
cmp ax cx +
jz loc_425E48  +
mov eax [ebp+arg_0] +
add edi 0FFFFFFFFh +
push 2  +
adc ebx 0FFFFFFFFh +
pop edx  +
mov [eax] cx +
mov ecx [esp+20h+var_14] +
add eax edx +
mov [ebp+arg_0] eax +
test ebx ebx +
jg loc_425D96  +
jl loc_425E48  +
test edi edi +
jnz loc_425D96  +
mov eax [esp+20h+var_8] +
mov edx [esp+20h+var_4] +
sub eax edi +
pop edi  +
pop esi  +
sbb edx ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_454218  +
mov ecx edi +
call esi  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_425E93  +
mov eax [edi+2Ch] +
dec dword ptr [eax]  +
mov ecx [edi+1Ch] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx ecx word ptr [edx] +
pop edi  +
mov ax cx +
pop esi  +
retn   +
***
retn   +
***
xor edx edx +
retn   +
***
mov eax 0FFFFh +
retn 4  +
***
mov edi edi +
push esi  +
mov esi [ecx+34h] +
mov dword ptr [ecx] offset off_402978 +
test esi esi +
jz loc_425EF4  +
mov ecx esi +
call sub_4228C9  +
push 8  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
pop esi  +
retn   +
***
mov dword ptr [ecx] offset off_402714 +
jmp sub_423164  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4027B4 +
jz loc_425F2E  +
push 4  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_424BBC  +
test [ebp+arg_0] 1 +
jz loc_425F5D  +
push 1Ch  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
lea esi [ecx+68h] +
mov ecx esi +
call sub_426D99  +
mov dword ptr [esi] offset off_4027D8 +
mov ecx esi +
pop esi  +
jmp sub_423164  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4028A8 +
jz loc_425F9E  +
push 4  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_424D18  +
test [ebp+arg_0] 1 +
jz loc_425FCD  +
push 1Ch  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx-68h] +
mov ecx esi +
call sub_42350D  +
test byte ptr [ebp+8] 1 +
jz loc_425FF7  +
push 0B0h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_42592A  +
test byte ptr [ebp+8] 1 +
jz loc_42601D  +
push 44h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi-20h] +
call sub_425999  +
mov ecx esi +
mov dword ptr [esi] offset off_402714 +
call sub_423164  +
test byte ptr [ebp+8] 1 +
jz loc_426052  +
push 68h  +
push edi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx-8] +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_4027EC +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
mov dword ptr [ecx] offset off_402714 +
call sub_423164  +
test byte ptr [ebp+8] 1 +
jz loc_426097  +
push 50h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx-18h] +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_402768 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
mov dword ptr [ecx] offset off_402714 +
call sub_423164  +
test byte ptr [ebp+8] 1 +
jz loc_4260DB  +
push 60h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_425ED3  +
test byte ptr [ebp+8] 1 +
jz loc_42610D  +
push 38h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
call sub_445D35  +
mov ebx ecx +
mov [ebp-14h] ebx +
mov edi [ebp+8] +
mov [ebx] edi +
mov edx [edi] +
mov eax [edx+4] +
mov eax [eax+edi+38h] +
mov [ebp-10h] eax +
test eax eax +
jz loc_426202  +
mov eax [eax] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_454218  +
mov ecx [ebp-10h] +
call esi  +
mov edx [edi] +
xor esi esi +
mov eax edx +
mov [ebp-4] esi +
mov ecx [edx+4] +
cmp [ecx+edi+0Ch] esi +
jnz loc_426225  +
mov ecx [ecx+edi+3Ch] +
test ecx ecx +
jz loc_426225  +
cmp ecx edi +
jz loc_426225  +
call sub_427FE9  +
mov eax [edi] +
mov eax [eax+4] +
cmp [eax+edi+0Ch] esi +
setz al  +
mov [ebx+4] al +
mov eax ebx +
call sub_445D0F  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 48h +
mov eax dword_452720 +
xor eax esp +
mov [esp+44h] eax +
mov eax [ebp+1Ch] +
push esi  +
mov esi [ebp+14h] +
push edi  +
push dword ptr [ebp+10h]  +
mov edi [ebp+8] +
push dword ptr [ebp+0Ch]  +
push eax  +
push offset aP  +
lea eax [esp+18h] +
push 40h  +
push eax  +
call sub_422343  +
add esp 10h +
mov edx edi +
push eax  +
lea eax [esp+14h] +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call sub_427903  +
mov ecx [esp+64h] +
add esp 18h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_44503A  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 30h  +
mov eax offset loc_44C8A2 +
call sub_445D69  +
mov eax [ebp+8] +
mov esi [ebp+14h] +
mov [ebp-3Ch] eax +
xor eax eax +
mov [ebp-20h] eax +
mov dword ptr [ebp-1Ch] 0Fh +
mov [ebp-30h] al +
mov [ebp-4] eax +
mov edx 2000h +
mov ecx [esi+14h] +
mov edi [esi+18h] +
and ecx 3000h +
cmp [esi+1Ch] eax +
jg loc_4262FC  +
jl loc_4262F3  +
cmp edi eax +
ja loc_4262FC  +
cmp ecx edx +
jz loc_4262FC  +
push 6  +
pop edi  +
jmp loc_4262FF  +
mov eax [esi+1Ch] +
fld  qword ptr [ebp+1Ch] +
mov ebx edi +
mov [ebp-34h] eax +
cmp ecx edx +
jnz loc_426345  +
fld  st +
fabs   +
fcomp  qword ptr ds:unk_41CB10 +
fnstsw  ax +
test ah 41h +
jnz loc_426345  +
lea eax [ebp-34h] +
push eax  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
call sub_4350C4  +
mov eax [ebp-34h] +
mov ecx 186A0h +
cdq   +
add esp 0Ch +
xor eax edx +
sub eax edx +
imul eax eax +
cdq   +
idiv  ecx +
add ebx eax +
push ecx  +
lea eax [ebx+32h] +
fstp  st +
push eax  +
lea ecx [ebp-30h] +
call sub_425204  +
cmp dword ptr [ebp-1Ch] 10h +
lea ebx [ebp-30h] +
mov eax [ebp-20h] +
mov [ebp-34h] eax +
jb loc_426366  +
mov ebx [ebp-30h] +
fld  qword ptr [ebp+1Ch] +
lea edx [ebp-18h] +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
push edi  +
push dword ptr [esi+14h]  +
push 4Ch  +
call sub_427F1F  +
pop ecx  +
pop ecx  +
push eax  +
push dword ptr [ebp-34h]  +
push ebx  +
call sub_422343  +
add esp 18h +
lea ecx [ebp-30h] +
cmp dword ptr [ebp-1Ch] 10h +
jb loc_426397  +
mov ecx [ebp-30h] +
mov edx [ebp-3Ch] +
push eax  +
push ecx  +
push dword ptr [ebp+18h]  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_427C13  +
add esp 18h +
lea ecx [ebp-30h] +
call sub_425231  +
mov eax [ebp-3Ch] +
call sub_445D24  +
retn 1Ch  +
***
push 30h  +
mov eax offset loc_44C8A2 +
call sub_445D69  +
mov eax [ebp+8] +
xor edx edx +
mov esi [ebp+14h] +
mov [ebp-3Ch] eax +
mov [ebp-20h] edx +
mov dword ptr [ebp-1Ch] 0Fh +
mov [ebp-30h] dl +
mov [ebp-4] edx +
mov eax [esi+14h] +
mov ecx [esi+1Ch] +
and eax 3000h +
mov edi [esi+18h] +
cmp ecx edx +
jg loc_42641B  +
jl loc_42640F  +
cmp edi edx +
ja loc_42641B  +
cmp eax 2000h +
jz loc_42641B  +
push 6  +
pop edi  +
mov ecx edx +
fld  qword ptr [ebp+1Ch] +
mov ebx edi +
mov [ebp-34h] ecx +
cmp eax 2000h +
jnz loc_426464  +
fld  st +
fabs   +
fcomp  qword ptr ds:unk_41CB10 +
fnstsw  ax +
test ah 41h +
jnz loc_426464  +
lea eax [ebp-34h] +
push eax  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
call sub_4350C4  +
mov eax [ebp-34h] +
mov ecx 186A0h +
cdq   +
add esp 0Ch +
xor eax edx +
sub eax edx +
imul eax eax +
cdq   +
idiv  ecx +
add ebx eax +
push ecx  +
lea eax [ebx+32h] +
fstp  st +
push eax  +
lea ecx [ebp-30h] +
call sub_425204  +
cmp dword ptr [ebp-1Ch] 10h +
lea ebx [ebp-30h] +
mov eax [ebp-20h] +
mov [ebp-34h] eax +
jb loc_426485  +
mov ebx [ebp-30h] +
fld  qword ptr [ebp+1Ch] +
lea edx [ebp-18h] +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
push edi  +
push dword ptr [esi+14h]  +
push 0  +
call sub_427F1F  +
pop ecx  +
pop ecx  +
push eax  +
push dword ptr [ebp-34h]  +
push ebx  +
call sub_422343  +
add esp 18h +
lea ecx [ebp-30h] +
cmp dword ptr [ebp-1Ch] 10h +
jb loc_4264B6  +
mov ecx [ebp-30h] +
mov edx [ebp-3Ch] +
push eax  +
push ecx  +
push dword ptr [ebp+18h]  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_427C13  +
add esp 18h +
lea ecx [ebp-30h] +
call sub_425231  +
mov eax [ebp-3Ch] +
call sub_445D24  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 50h +
mov eax dword_452720 +
xor eax esp +
mov [esp+4Ch] eax +
push esi  +
mov esi [ebp+14h] +
lea edx [esp+4] +
push edi  +
push dword ptr [ebp+10h]  +
mov edi [ebp+8] +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [esi+14h]  +
push offset aLu  +
call sub_427B9D  +
pop ecx  +
pop ecx  +
push eax  +
lea eax [esp+24h] +
push 40h  +
push eax  +
call sub_422343  +
add esp 14h +
mov edx edi +
push eax  +
lea eax [esp+1Ch] +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call sub_427903  +
mov ecx [esp+6Ch] +
add esp 18h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_44503A  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 50h +
mov eax dword_452720 +
xor eax esp +
mov [esp+4Ch] eax +
push esi  +
mov esi [ebp+14h] +
lea edx [esp+4] +
push edi  +
push dword ptr [ebp+10h]  +
mov edi [ebp+8] +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [esi+14h]  +
push offset aLd  +
call sub_427B9D  +
pop ecx  +
pop ecx  +
push eax  +
lea eax [esp+24h] +
push 40h  +
push eax  +
call sub_422343  +
add esp 14h +
mov edx edi +
push eax  +
lea eax [esp+1Ch] +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call sub_427903  +
mov ecx [esp+6Ch] +
add esp 18h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_44503A  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 50h +
mov eax dword_452720 +
xor eax esp +
mov [esp+4Ch] eax +
push esi  +
mov esi [ebp+14h] +
lea edx [esp+4] +
push edi  +
push dword ptr [ebp+10h]  +
mov edi [ebp+8] +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [esi+14h]  +
push offset aLu_0  +
call sub_427B9D  +
pop ecx  +
pop ecx  +
push eax  +
lea eax [esp+20h] +
push 40h  +
push eax  +
call sub_422343  +
add esp 10h +
mov edx edi +
push eax  +
lea eax [esp+1Ch] +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call sub_427903  +
mov ecx [esp+6Ch] +
add esp 18h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_44503A  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 50h +
mov eax dword_452720 +
xor eax esp +
mov [esp+4Ch] eax +
push esi  +
mov esi [ebp+14h] +
lea edx [esp+4] +
push edi  +
push dword ptr [ebp+10h]  +
mov edi [ebp+8] +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [esi+14h]  +
push offset aLd_0  +
call sub_427B9D  +
pop ecx  +
pop ecx  +
push eax  +
lea eax [esp+20h] +
push 40h  +
push eax  +
call sub_422343  +
add esp 10h +
mov edx edi +
push eax  +
lea eax [esp+1Ch] +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call sub_427903  +
mov ecx [esp+6Ch] +
add esp 18h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_44503A  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D35  +
call sub_445D35  +
mov edi edi +
mov edi edi +
call sub_445D35  +
mov ebx ecx +
mov [ebp-14h] ebx +
and dword ptr [ebp-10h] 0 +
lea esi [ebx+10h] +
mov dword ptr [ebx] offset dword_41BFF0 +
mov dword ptr [esi] offset dword_41BFF8 +
mov dword ptr [ebx+68h] offset off_4027D8 +
and dword ptr [ebp-4] 0 +
lea edi [ebx+18h] +
push ecx  +
push ecx  +
push edi  +
mov dword ptr [ebp-10h] 1 +
call sub_42826B  +
mov [ebp-18h] esi +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4029C8 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-4] eax +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_4027F4 +
mov eax [ebx] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+ebx-4] eax +
mov dword ptr [ebp-4] 4 +
mov eax [ebx] +
push ecx  +
mov ecx edi +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_4028A0 +
mov eax [ebx] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+ebx-4] eax +
call sub_428124  +
mov eax ebx +
call sub_445D0F  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_C] +
add edi [ebp+arg_4] +
mov eax [esi+1Ch] +
adc ebx [ebp+arg_8] +
mov eax [eax] +
mov [ebp+var_8] eax +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_426EA2  +
cmp [esi+38h] ecx +
jnb loc_426EA2  +
mov [esi+38h] ecx +
mov eax [esi+0Ch] +
mov edx [eax] +
mov eax [esi+38h] +
mov [ebp+var_10] eax +
sub eax edx +
mov [ebp+var_4] edx +
cdq   +
cmp ebx edx +
ja loc_426F2F  +
jb loc_426EBD  +
cmp edi eax +
ja loc_426F2F  +
mov edx [ebp+arg_1C] +
mov eax edi +
or eax ebx +
jz loc_426EDA  +
test dl 1 +
jz loc_426ED1  +
cmp [ebp+var_8] 0 +
jz loc_426F2F  +
test dl 2 +
jz loc_426EDA  +
test ecx ecx +
jz loc_426F2F  +
mov eax [ebp+var_4] +
add eax edi +
test dl 1 +
jz loc_426EFC  +
cmp [ebp+var_8] 0 +
jz loc_426EFC  +
mov edx [esi+1Ch] +
mov [edx] eax +
mov edx [ebp+var_10] +
sub edx eax +
mov eax [esi+2Ch] +
mov [eax] edx +
mov edx [ebp+arg_1C] +
test dl 2 +
jz loc_426F25  +
test ecx ecx +
jz loc_426F25  +
mov eax [esi+20h] +
mov ecx [esi+30h] +
mov edx [eax] +
mov eax [esi+10h] +
add edx [ecx] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
add ecx edi +
mov eax [esi+20h] +
sub edx ecx +
mov [eax] ecx +
mov eax [esi+30h] +
mov [eax] edx +
mov eax [ebp+arg_0] +
mov [eax] edi +
mov [eax+4] ebx +
jmp loc_426F39  +
mov eax [ebp+arg_0] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [eax+4] 0FFFFFFFFh +
xor ecx ecx +
pop edi  +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
pop esi  +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+1Ch] +
mov ecx [edi] +
test ecx ecx +
jz loc_427102  +
mov eax [edx+2Ch] +
mov eax [eax] +
add eax ecx +
cmp ecx eax +
jnb loc_4270CD  +
movzx eax byte ptr [ecx] +
jmp loc_427105  +
mov eax [edx+20h] +
mov esi [eax] +
test esi esi +
jz loc_427102  +
test byte ptr [edx+3Ch] 4 +
jnz loc_427102  +
cmp [edx+38h] esi +
jb loc_4270E4  +
mov esi [edx+38h] +
cmp esi ecx +
jbe loc_427102  +
mov [edx+38h] esi +
mov eax edi +
mov ecx [edi] +
sub esi ecx +
mov [eax] ecx +
mov eax [edx+2Ch] +
mov [eax] esi +
mov eax [edx+1Ch] +
mov eax [eax] +
movzx eax byte ptr [eax] +
jmp loc_427105  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx ecx +
push esi  +
mov eax [edx+1Ch] +
mov esi [eax] +
test esi esi +
jz loc_42715C  +
mov eax [edx+0Ch] +
cmp esi [eax] +
jbe loc_42715C  +
mov ecx [ebp+arg_0] +
cmp ecx 0FFFFFFFFh +
jz loc_42713B  +
cmp cl [esi-1] +
jz loc_42713B  +
test byte ptr [edx+3Ch] 2 +
jnz loc_42715C  +
mov eax [edx+2Ch] +
inc dword ptr [eax]  +
mov eax [edx+1Ch] +
dec dword ptr [eax]  +
cmp ecx 0FFFFFFFFh +
jz loc_427151  +
mov eax [edx+1Ch] +
mov eax [eax] +
mov [eax] cl +
lea eax [ecx+1] +
neg eax  +
sbb eax eax +
and eax ecx +
jmp loc_42715F  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi-20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-20h] offset off_4027F4 +
mov eax [esi-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+esi-24h] eax +
mov eax [esi-10h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-10h] offset off_4029C8 +
mov eax [esi-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-14h] eax +
mov eax [esi-20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-20h] offset off_4028F4 +
mov eax [esi-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-24h] eax +
pop esi  +
retn   +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_4028F4 +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov eax esi +
push edi  +
mov edi [ebp+arg_8] +
mov edx edi +
mov [esp+20h+var_10] ecx +
mov [esp+20h+var_8] eax +
mov [esp+20h+var_4] edx +
test edi edi +
jl loc_427545  +
jg loc_4274A6  +
test esi esi +
jz loc_427545  +
mov eax [ecx+1Ch] +
mov eax [eax] +
mov [esp+20h+var_C] eax +
test eax eax +
jz loc_4274BA  +
mov eax [ecx+2Ch] +
mov eax [eax] +
jmp loc_4274BC  +
xor eax eax +
cdq   +
mov ebx eax +
mov eax edx +
mov [esp+20h+var_14] eax +
test eax eax +
jl loc_427508  +
jg loc_4274CF  +
test ebx ebx +
jz loc_427508  +
cmp edi eax +
jg loc_4274DF  +
jl loc_4274D9  +
cmp esi ebx +
jnb loc_4274DF  +
mov ebx esi +
mov [esp+20h+var_14] edi +
push ebx  +
push [esp+24h+var_C]  +
push [ebp+arg_0]  +
call loc_446B00  +
mov ecx [esp+2Ch+var_10] +
add esp 0Ch +
sub esi ebx +
sbb edi [esp+20h+var_14] +
mov eax [ecx+2Ch] +
sub [eax] ebx +
mov eax [ecx+1Ch] +
add [eax] ebx +
mov eax [ebp+arg_0] +
jmp loc_427526  +
call sub_427560  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_42753D  +
mov eax [ebp+arg_0] +
add esi 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
xor ebx ebx +
inc ebx  +
mov [eax] cl +
mov ecx [esp+20h+var_10] +
add eax ebx +
mov [ebp+arg_0] eax +
test edi edi +
jg loc_4274A6  +
jl loc_42753D  +
test esi esi +
jnz loc_4274A6  +
mov eax [esp+20h+var_8] +
mov edx [esp+20h+var_4] +
sub eax esi +
sbb edx edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_454218  +
mov ecx edi +
call esi  +
or edx 0FFFFFFFFh +
cmp eax edx +
jz loc_427590  +
mov eax [edi+2Ch] +
dec dword ptr [eax]  +
mov ecx [edi+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx edx byte ptr [edx] +
pop edi  +
mov eax edx +
pop esi  +
retn   +
***
retn   +
***
mov edi edi +
push esi  +
mov esi [ecx+34h] +
mov dword ptr [ecx] offset off_402728 +
test esi esi +
jz loc_4275D7  +
mov ecx esi +
call sub_4228C9  +
push 8  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
pop esi  +
retn   +
***
mov dword ptr [ecx] offset off_4027D8 +
jmp sub_423164  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4029B8 +
jz loc_42760E  +
push 8  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi-68h] +
call sub_426D99  +
mov ecx esi +
mov dword ptr [esi] offset off_4027D8 +
call sub_423164  +
test byte ptr [ebp+8] 1 +
jz loc_427646  +
push 0B0h  +
push edi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_4272A1  +
test byte ptr [ebp+8] 1 +
jz loc_42766D  +
push 44h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi-20h] +
call sub_427309  +
mov ecx esi +
mov dword ptr [esi] offset off_4027D8 +
call sub_423164  +
test byte ptr [ebp+8] 1 +
jz loc_4276A2  +
push 68h  +
push edi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx-8] +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_4029C8 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
mov dword ptr [ecx] offset off_4027D8 +
call sub_423164  +
test byte ptr [ebp+8] 1 +
jz loc_4276E7  +
push 50h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx-18h] +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_4028F4 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
mov dword ptr [ecx] offset off_4027D8 +
call sub_423164  +
test byte ptr [ebp+8] 1 +
jz loc_42772B  +
push 60h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_4275B6  +
test byte ptr [ebp+8] 1 +
jz loc_42775D  +
push 38h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4027D8 +
call sub_423164  +
test byte ptr [ebp+8] 1 +
jz loc_427793  +
push 48h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ecx+14h]  +
mov ecx [ebp+8] +
call sub_42196B  +
mov eax [ebp+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ecx+10h]  +
mov ecx [ebp+8] +
call sub_42196B  +
mov eax [ebp+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ecx+8]  +
mov ecx [ebp+8] +
call sub_4252D6  +
mov eax [ebp+8] +
pop ebp  +
retn 4  +
***
mov ax [ecx+0Eh] +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D69  +
mov edi edi +
call sub_445D69  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D35  +
call sub_445DA0  +
call sub_445D35  +
call sub_445D35  +
mov edi ecx +
mov [ebp-10h] edi +
push 8  +
mov dword ptr [edi] offset off_402728 +
call sub_44504B  +
pop ecx  +
mov esi eax +
xor ebx ebx +
mov [ebp-4] ebx +
call sub_42C1B0  +
mov [esi+4] eax +
lea ecx [edi+8] +
lea eax [edi+4] +
mov [edi+34h] esi +
mov [edi+0Ch] eax +
lea eax [edi+14h] +
mov [edi+1Ch] eax +
lea eax [edi+18h] +
mov [edi+20h] eax +
lea eax [edi+24h] +
mov [edi+2Ch] eax +
lea eax [edi+28h] +
mov [edi+30h] eax +
mov [edi+10h] ecx +
mov [ecx] ebx +
mov eax [edi+20h] +
mov [eax] ebx +
mov eax [edi+30h] +
mov [eax] ebx +
mov eax [edi+0Ch] +
mov [eax] ebx +
mov eax [edi+1Ch] +
mov [eax] ebx +
mov eax [edi+2Ch] +
mov [eax] ebx +
mov eax edi +
mov dword ptr [edi] offset off_40282C +
mov [edi+38h] ebx +
mov [edi+3Ch] ebx +
call sub_445D0F  +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D35  +
mov edi edi +
call sub_445D35  +
call sub_445D35  +
call sub_445D35  +
mov edi edi +
call sub_445DA0  +
call sub_445D35  +
call sub_445D35  +
call sub_445D69  +
call sub_445D69  +
call sub_445DA0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D35  +
call sub_445D35  +
call sub_445DA0  +
call sub_445DA0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D35  +
mov ebx edx +
mov edi ecx +
and dword ptr [ebp-10h] 0 +
cmp dword ptr [edi] 0 +
jnz loc_4296B7  +
push 18h  +
call sub_44504B  +
mov esi eax +
pop ecx  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx ebx +
call sub_422900  +
push eax  +
lea ecx [ebp-48h] +
call sub_422705  +
and dword ptr [esi+4] 0 +
mov dword ptr [ebp-10h] 1 +
push ecx  +
push ecx  +
mov dword ptr [ebp-4] 2 +
mov ecx esi +
mov dword ptr [esi] offset off_4029D0 +
call sub_4299E9  +
lea ecx [ebp-48h] +
mov [edi] esi +
call sub_42276C  +
push 4  +
pop eax  +
call sub_445D0F  +
retn   +
***
call sub_445D35  +
call sub_445D35  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D69  +
mov ebx ecx +
call sub_434EB8  +
lea eax [ebp-78h] +
push eax  +
call sub_42C563  +
pop ecx  +
push 0Bh  +
pop ecx  +
mov esi eax +
mov [ebp-48h] ebx +
lea edi [ebp-3Ch] +
movs   +
xor esi esi +
mov [ebx+8] esi +
mov [ebx+10h] esi +
mov [ebx+14h] esi +
lea eax [ebp-78h] +
mov [ebp-4] esi +
push eax  +
call sub_42C563  +
mov ecx offset byte_41BC13 +
call sub_42A514  +
mov [ebx+8] eax +
lea eax [ebp-3Ch] +
pop ecx  +
push eax  +
mov ecx offset aFalse +
call sub_422955  +
mov [ebx+10h] eax +
lea eax [ebp-3Ch] +
pop ecx  +
push eax  +
mov ecx offset aTrue +
call sub_422955  +
mov [ebx+14h] eax +
lea edx [ebp-40h] +
xor eax eax +
mov [ebp-48h] esi +
pop ecx  +
mov [ebp-44h] ax +
lea ecx [ebp-44h] +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-40h] 2Eh +
push eax  +
push 1  +
call sub_42BE14  +
mov ax [ebp-44h] +
lea edx [ebp-40h] +
mov [ebx+0Ch] ax +
lea ecx [ebp-44h] +
xor eax eax +
mov byte ptr [ebp-40h] 2Ch +
mov [ebp-44h] ax +
lea eax [ebp-3Ch] +
push eax  +
push 1  +
call sub_42BE14  +
mov ax [ebp-44h] +
add esp 10h +
mov [ebx+0Eh] ax +
call sub_445D24  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_429B25  +
mov eax [ebp+arg_0] +
cmp eax edx +
jnb loc_429B25  +
lea ecx [edi+edx*2] +
lea eax [edi+eax*2] +
mov [ebp+var_4] ecx +
cmp eax ecx +
jnb loc_429B25  +
mov edx esi +
mov ecx offset asc_41BE28 +
test esi esi +
jz loc_429B17  +
movzx ebx word ptr [eax] +
cmp [ecx] bx +
jz loc_429B19  +
add ecx 2 +
sub edx 1 +
jnz loc_429B0A  +
xor ecx ecx +
test ecx ecx +
jnz loc_429B2F  +
add eax 2 +
cmp eax [ebp+var_4] +
jb loc_429AFC  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
sub eax edi +
sar eax 1 +
jmp loc_429B28  +
***
call sub_445D35  +
call sub_445D69  +
call sub_445D35  +
call sub_445D69  +
call sub_445D69  +
call sub_445D69  +
call sub_445DA0  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445DA0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax [ecx] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
sub esp 18h +
cmp eax edx +
jz locret_42B728  +
push esi  +
push edi  +
sub edx 18h +
cmp eax edx +
jz loc_42B726  +
push 6  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_18] +
movs   +
push 6  +
pop ecx  +
mov edi eax +
mov esi edx +
movs   +
push 6  +
add eax 18h +
lea esi [ebp+var_18] +
mov edi edx +
pop ecx  +
movs   +
cmp eax edx +
jnz loc_42B6FB  +
pop edi  +
pop esi  +
leave   +
retn   +
***
sub ecx [ecx-4] +
jmp loc_425FD4  +
***
sub ecx [ecx-4] +
jmp loc_427615  +
***
sub ecx [ecx-4] +
jmp loc_426024  +
***
sub ecx [ecx-4] +
jmp loc_427674  +
***
mov edi edi +
mov edi edi +
mov dword ptr [ecx] 1 +
mov edi edi +
call sub_445D69  +
mov ebx edx +
push 7  +
xor ecx ecx +
xor eax eax +
pop edx  +
mov [ebp-30h] ecx +
mov [ebp-2Ch] edx +
mov [ebp-40h] ax +
mov [ebp-4] ecx +
push 0Ah  +
mov [ebp-18h] ecx +
lea ecx [ebp-28h] +
push offset aAppvlp_exe  +
mov [ebp-14h] edx +
mov [ebp-28h] ax +
call sub_4219E8  +
cmp byte ptr [ebp+8] 0 +
mov eax offset aAppvisvsubsyst +
mov byte ptr [ebp-4] 1 +
jnz loc_42B8D0  +
mov eax offset ModuleName +
push 17h  +
push eax  +
lea ecx [ebp-40h] +
call sub_4219E8  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 0 +
call sub_421992  +
push offset dword_41BCA0  +
lea ecx [ebp-80h] +
mov dword ptr [ebp-88h] offset off_402A14 +
mov byte ptr [ebp-84h] 0 +
call sub_42196B  +
and dword ptr [ebp-68h] 0 +
lea eax [ebp-64h] +
push eax  +
call ds:InitializeCriticalSection  +
and dword ptr [ebp-4Ch] 0 +
and dword ptr [ebp-48h] 0 +
mov byte ptr [ebp-4] 2 +
cmp byte ptr [ebp-84h] 0 +
jnz loc_42B933  +
lea ecx [ebp-88h] +
call sub_42EB97  +
lea eax [ebp-80h] +
push eax  +
lea ecx [ebp-0B8h] +
call sub_42518E  +
push offset aAppvVirtmanNot  +
lea ecx [ebp-0B8h] +
mov byte ptr [ebp-4] 3 +
call sub_421A39  +
push eax  +
lea ecx [ebp-0A0h] +
call sub_421936  +
mov byte ptr [ebp-4] 4 +
cmp byte ptr [ebp-84h] 0 +
jnz loc_42B97A  +
lea ecx [ebp-88h] +
call sub_42EB97  +
push dword ptr [ebp-68h]  +
lea eax [ebp-0A0h] +
push eax  +
lea ecx [ebp-0ECh] +
call sub_42D7A6  +
lea ecx [ebp-0A0h] +
call sub_421992  +
lea ecx [ebp-0B8h] +
mov byte ptr [ebp-4] 7 +
call sub_421992  +
lea ecx [ebp-40h] +
call sub_42BACB  +
mov esi eax +
lea ecx [ebp-0ECh] +
lea eax [ebp-0C0h] +
mov edi edx +
push eax  +
call sub_42D817  +
mov ecx eax +
xor edx edx +
mov dword ptr [ebp-28h] offset loc_4212A0 +
mov [ebp-18h] edx +
mov [ebp-14h] edx +
mov [ebp-24h] esi +
mov [ebp-20h] edi +
mov [ebp-1Ch] ebx +
mov eax [ecx] +
mov [ebp-18h] eax +
mov eax [ecx+4] +
mov [ebp-14h] eax +
mov [ecx] edx +
mov [ecx+4] edx +
mov byte ptr [ebp-4] 9 +
call sub_42DDE7  +
fld  ds:flt_41CB04 +
push ecx  +
lea ecx [ebp-28h] +
mov edx [eax] +
fstp  [esp+8+var_8] +
call sub_42BB13  +
mov ecx [ebp-14h] +
mov ebx eax +
test ecx ecx +
jz loc_42BA1C  +
call sub_42B816  +
mov ecx [ebp-0BCh] +
test ecx ecx +
jz loc_42BA2B  +
call sub_42B816  +
test ebx ebx +
jns loc_42BA63  +
push 5Ch  +
mov esi offset aAdminAppmanApp +
push esi  +
call loc_446850  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42BA45  +
inc eax  +
jmp loc_42BA47  +
mov eax esi +
push eax  +
mov ecx offset dword_453648 +
call sub_42B7B2  +
mov esi eax +
xor edi edi +
shl esi 14h +
or edi ebx +
or esi 52Ah +
jmp loc_42BA6A  +
xor edi edi +
mov esi 80h +
lea ecx [ebp-0ECh] +
call sub_42D784  +
lea eax [ebp-64h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [ebp-80h] +
call sub_421992  +
lea ecx [ebp-40h] +
call sub_421992  +
mov eax edi +
mov edx esi +
call sub_445D24  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+24h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+8] +
pop esi  +
jmp sub_421992  +
***
mov ecx [ecx+4] +
test ecx ecx +
jnz sub_42B816  +
retn   +
***
mov edx ecx +
call sub_445910  +
and dword ptr [ecx+4] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push offset aBadLocaleName  +
mov esi ecx +
call sub_422361  +
mov dword ptr [esi] offset off_402888 +
mov eax esi +
pop esi  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea ecx [ebp-0Ch] +
call sub_42BC5D  +
push offset dword_450134  +
lea eax [ebp-0Ch] +
push eax  +
call sub_448983  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_4223A0  +
mov dword ptr [esi] offset off_40261C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_4223A0  +
mov dword ptr [esi] offset off_402A34 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_42BC75  +
push offset dword_450124  +
lea eax [ebp-0Ch] +
push eax  +
call sub_448983  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_4223A0  +
mov dword ptr [esi] offset off_402A1C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_42BC92  +
push offset dword_4500DC  +
lea eax [ebp-0Ch] +
push eax  +
call sub_448983  +
mov edi edi +
test dl dl +
mov edi edi +
xor eax eax +
push edi  +
mov edi ecx +
inc eax  +
xadd dword_452754 eax +
jnz loc_42BF68  +
push esi  +
mov esi offset unk_453498 +
push 0  +
push 0FA0h  +
push esi  +
call ds:InitializeCriticalSectionEx  +
add esi 18h +
cmp esi offset unk_453558 +
jl loc_42BF4E  +
pop esi  +
mov eax edi +
pop edi  +
retn   +
***
mov edi edi +
push offset loc_429B40  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44CDCE  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_452720 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
and [ebp+var_14] 0 +
mov dword ptr [edi] offset off_402A40 +
call sub_4354F8  +
mov ebx [edi+0Ch] +
jmp loc_42C09D  +
mov eax [edi+8] +
dec ebx  +
mov eax [eax+ebx*4] +
mov [ebp+var_10] eax +
test eax eax +
jz loc_42C09D  +
mov eax [eax] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_454218  +
mov ecx [ebp+var_10] +
call esi  +
mov [ebp+var_10] eax +
test eax eax +
jz loc_42C09D  +
mov ecx [eax] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_454218  +
mov ecx [ebp+var_10] +
call esi  +
test ebx ebx +
jnz loc_42C063  +
push dword ptr [edi+8]  +
call sub_4350A9  +
pop ecx  +
lea ecx [ebp+var_14] +
call sub_42BF93  +
cmp [edi+18h] ebx +
jz loc_42C0C0  +
push dword ptr [edi+18h]  +
call sub_4350A9  +
pop ecx  +
and dword ptr [edi+18h] 0 +
mov dword ptr [edi] offset off_4029B8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_42C024  +
test byte ptr [ebp+8] 1 +
jz loc_42C0FD  +
push 20h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp byte_4535F4 0 +
call sub_445D35  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi edx +
test esi esi +
jnz loc_42CA7E  +
xor eax eax +
jmp loc_42CAE4  +
test ecx ecx +
jnz loc_42CA95  +
call sub_435431  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_43228E  +
mov eax esi +
jmp loc_42CAE4  +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_42CAB0  +
cmp edi esi +
jb loc_42CAB0  +
push esi  +
push ebx  +
push ecx  +
call loc_446B00  +
add esp 0Ch +
xor eax eax +
jmp loc_42CAE3  +
push edi  +
push 0  +
push ecx  +
call sub_4469A0  +
add esp 0Ch +
test ebx ebx +
jnz loc_42CAC9  +
call sub_435431  +
push 16h  +
jmp loc_42CAD4  +
cmp edi esi +
jnb loc_42CAE0  +
call sub_435431  +
push 22h  +
pop esi  +
mov [eax] esi +
call sub_43228E  +
mov eax esi +
jmp loc_42CAE3  +
push 16h  +
pop eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
xor eax eax +
retn 4  +
***
mov edi edi +
mov eax offset loc_42CBAD +
call sub_44BF70  +
mov edi edi +
mov edi edi +
call ds:GetLastError  +
call ds:GetLastError  +
or eax 0FFFFFFFFh +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+50h] +
mov dword ptr [esi] offset off_402A58 +
mov byte ptr [esi+48h] 0 +
mov dword ptr [esi+4Ch] 7 +
call sub_42D185  +
lea ecx [esi+54h] +
call sub_42D185  +
lea ecx [esi+58h] +
call sub_42D185  +
lea ecx [esi+5Ch] +
call sub_42D185  +
mov eax esi +
pop esi  +
retn   +
***
call sub_445D69  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp byte ptr [esi+48h] 0 +
jz loc_42CE1D  +
lea eax [esi+4] +
cmp eax [ebp+arg_0] +
jz loc_42CE59  +
lea ecx [esi+50h] +
mov dword ptr [esi+4Ch] 7 +
call sub_42D1AA  +
lea ecx [esi+54h] +
call sub_42D1AA  +
lea ecx [esi+58h] +
call sub_42D1AA  +
lea ecx [esi+5Ch] +
call sub_42D1AA  +
push [ebp+arg_0]  +
mov ecx esi +
mov byte ptr [esi+48h] 0 +
call loc_42CE60  +
mov dword ptr [esi+4Ch] 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call ds:IsValidSid  +
test eax eax +
jz loc_42CE9B  +
push dword ptr [ebp+8]  +
call ds:GetLengthSid  +
cmp eax 44h +
ja loc_42CE9B  +
push dword ptr [ebp+8]  +
lea ecx [esi+4] +
mov byte ptr [esi+48h] 1 +
push ecx  +
push eax  +
call ds:CopySid  +
test eax eax +
jz loc_42CEA7  +
jmp loc_42CEA2  +
mov ecx 80070057h +
jmp loc_42CEB2  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_42CC68  +
mov byte ptr [esi+48h] 0 +
mov ecx eax +
call sub_42CC32  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_402A6C +
call sub_42CF70  +
test byte ptr [ebp+8] 1 +
jz loc_42CEE3  +
push 10h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
call ds:GetCurrentThread  +
lea ecx [ebp+TokenHandle] +
push ecx  +
push 1  +
push 8  +
push eax  +
call ds:OpenThreadToken  +
test eax eax +
jnz loc_42CF53  +
xor al al +
jmp loc_42CF62  +
mov ecx esi +
call sub_42CF70  +
mov ecx [ebp+TokenHandle] +
mov al 1 +
mov [esi+4] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
call sub_445D35  +
mov eax large fs:2Ch +
xor ebx ebx +
mov esi [eax] +
mov eax dword_4536FC +
cmp eax [esi+4] +
jle loc_42D00C  +
mov edi offset dword_4536FC +
push edi  +
call sub_44AF88  +
cmp dword_4536FC 0FFFFFFFFh +
pop ecx  +
jnz loc_42D00C  +
push offset loc_44DB00  +
mov dword_4536D4 ebx +
mov dword_4536D8 ebx +
call sub_4452EA  +
push edi  +
call sub_44AF3C  +
pop ecx  +
pop ecx  +
mov eax dword_453700 +
mov edi offset unk_4536DC +
cmp eax [esi+4] +
jle loc_42D058  +
mov esi offset dword_453700 +
push esi  +
call sub_44AF88  +
cmp dword_453700 0FFFFFFFFh +
pop ecx  +
jnz loc_42D058  +
push edi  +
call ds:InitializeCriticalSection  +
push offset loc_44DAF0  +
mov dword_4536F4 ebx +
mov dword_4536F8 ebx +
call sub_4452EA  +
push esi  +
call sub_44AF3C  +
pop ecx  +
pop ecx  +
cmp dword_4536D4 ebx +
jnz loc_42D0FF  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-24h] offset off_402A50 +
mov [ebp-20h] bl +
mov [ebp-1Ch] edi +
call sub_42D2EC  +
mov [ebp-4] ebx +
cmp dword_4536D4 0 +
jnz loc_42D0F7  +
push 28h  +
call sub_44504B  +
mov edi eax +
pop ecx  +
mov [ebp-10h] edi +
push 24h  +
mov byte ptr [ebp-4] 1 +
pop ecx  +
mov [edi] ebx +
mov [edi+4] ebx +
call sub_421D35  +
lea esi [edi+8] +
push esi  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [edi] eax +
call ds:InitializeCriticalSection  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
mov [ebp-14h] ebx +
push dword ptr [ebp-14h]  +
mov [esi+18h] ebx +
push edi  +
mov [esi+1Ch] ebx +
mov [ebp-18h] ebx +
call sub_42D4E0  +
mov eax [ebp-18h] +
mov ecx dword_4536D8 +
mov dword_4536D4 eax +
mov eax [ebp-14h] +
mov dword_4536D8 eax +
test ecx ecx +
jz loc_42D0F7  +
call sub_42B816  +
lea ecx [ebp-24h] +
call sub_42D293  +
mov edx dword_4536D8 +
mov dword_453474 ebx +
mov dword_453478 ebx +
test edx edx +
jz loc_42D11F  +
inc dword ptr [edx+4]  +
mov edx dword_4536D8 +
mov ecx dword_4536D4 +
mov eax offset dword_453474 +
mov dword_453474 ecx +
mov dword_453478 edx +
call sub_445D0F  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov eax off_4511C8 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+8] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [esi+18h]  +
cmp dword ptr [esi+18h] 1 +
jnz loc_42D30E  +
call ds:GetCurrentThreadId  +
mov [esi+1Ch] eax +
mov byte ptr [edi+4] 1 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov ecx 8007000Eh +
call sub_445D69  +
mov edi edi +
call sub_445DA0  +
mov ecx [ebp+8] +
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+8] +
push eax  +
call ds:DeleteCriticalSection  +
mov ecx esi +
call loc_42D259  +
push 28h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
retn 4  +
***
mov edi edi +
push edi  +
mov edi ecx +
test edi edi +
jz loc_42D57E  +
mov eax [edi] +
push esi  +
push 1  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_454218  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
***
mov edi edi +
push esi  +
mov esi [ecx+0Ch] +
test esi esi +
jz loc_42D5A5  +
lea eax [esi+8] +
push eax  +
call ds:DeleteCriticalSection  +
mov ecx esi +
call loc_42D259  +
push 28h  +
push esi  +
call sub_445301  +
pop ecx  +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
lea eax [ecx+4] +
push eax  +
call sub_448945  +
neg eax  +
pop ecx  +
sbb al al +
pop ecx  +
inc al  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
call sub_445DA0  +
mov edi edi +
mov edi edi +
call sub_445D35  +
mov edi edi +
call sub_445D69  +
call sub_445D35  +
call sub_445D69  +
mov edi edi +
call sub_445D69  +
mov eax ecx +
mov edi edi +
call sub_445DA0  +
call sub_448983  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi edx +
push edi  +
mov edi ecx +
mov [ebp+var_4] edi +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_42E053  +
sub esi ecx +
sar esi 1 +
push esi  +
push edx  +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_426A81  +
push eax  +
mov ecx edi +
call sub_421936  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
push dword ptr [ecx+8]  +
mov esi [ecx+4] +
mov ecx esi +
call ds:off_454218  +
call esi  +
pop esi  +
retn   +
***
call sub_445DA0  +
mov esi ecx +
and dword ptr [ebp-4] 0 +
push 14h  +
call sub_44504B  +
mov edx eax +
xor eax eax +
inc eax  +
pop ecx  +
mov [edx+4] eax +
mov [edx+8] eax +
mov eax [ebp+0Ch] +
mov dword ptr [edx] offset off_402A98 +
mov [edx+0Ch] eax +
mov eax [ebp+8] +
mov [edx+10h] eax +
mov [esi] eax +
mov [esi+4] edx +
call sub_445D0F  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44CEE6  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_452720 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push dword ptr [ecx+10h]  +
mov esi [ecx+0Ch] +
mov ecx esi +
call ds:off_454218  +
call esi  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push offset off_451CF0  +
call sub_42D5FE  +
test al al +
jz loc_42E19E  +
lea eax [esi+0Ch] +
jmp loc_42E1A0  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push 5Ch  +
mov esi offset aAdminAppmanA_1 +
push esi  +
call loc_446850  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E1E8  +
inc eax  +
jmp loc_42E1EA  +
mov eax esi +
push eax  +
mov ecx offset dword_453648 +
call sub_42B7B2  +
mov edx eax +
xor eax eax +
shl edx 14h +
pop esi  +
retn   +
***
mov edi edi +
call sub_445D69  +
mov eax [ecx+10h] +
mov edi edi +
mov edi edi +
call sub_445D69  +
mov esi [ebp+10h] +
lea ecx [ebp-5Ch] +
mov edx [ebp+8] +
mov edi [ebp+0Ch] +
mov [ebp-74h] esi +
call sub_423360  +
xor ebx ebx +
mov [ebp-4] ebx +
cmp [ebp-4Ch] ebx +
jnz loc_42E4A7  +
push 9  +
push offset aAppvIsv  +
mov ecx edi +
call sub_4219E8  +
mov dword ptr [esi] 3 +
mov edi 80h +
jmp loc_42E6FE  +
push 7  +
pop esi  +
push 1  +
xor eax eax +
mov [ebp-1Ch] ebx +
push offset asc_41BAAC  +
lea ecx [ebp-2Ch] +
mov [ebp-18h] esi +
mov [ebp-2Ch] ax +
call sub_4219E8  +
lea edx [ebp-2Ch] +
lea ecx [ebp-5Ch] +
call sub_42E388  +
lea ecx [ebp-2Ch] +
mov bl al +
call sub_421992  +
test bl bl +
jz loc_42E541  +
xor ebx ebx +
mov [ebp-30h] esi +
push ebx  +
xor eax eax +
mov [ebp-34h] ebx +
push offset dword_41BCA0  +
lea ecx [ebp-44h] +
mov [ebp-44h] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-2Ch] +
push 1  +
xor eax eax +
mov [ebp-1Ch] ebx +
push offset asc_41BAAC  +
mov [ebp-18h] esi +
mov [ebp-2Ch] ax +
call sub_4219E8  +
lea eax [ebp-44h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea edx [ebp-2Ch] +
lea ecx [ebp-5Ch] +
call sub_42E287  +
lea ecx [ebp-2Ch] +
call sub_421992  +
lea ecx [ebp-44h] +
mov [ebp-4] bl +
call sub_421992  +
jmp loc_42E543  +
xor ebx ebx +
push 5  +
xor eax eax +
mov [ebp-34h] ebx +
push offset aRoot_0  +
lea ecx [ebp-44h] +
mov [ebp-30h] esi +
mov [ebp-44h] ax +
call sub_4219E8  +
lea edx [ebp-44h] +
lea ecx [ebp-5Ch] +
call sub_42E388  +
lea ecx [ebp-44h] +
mov bl al +
call sub_421992  +
test bl bl +
jz loc_42E5DA  +
xor ebx ebx +
mov [ebp-18h] esi +
push ebx  +
xor eax eax +
mov [ebp-1Ch] ebx +
push offset dword_41BCA0  +
lea ecx [ebp-2Ch] +
mov [ebp-2Ch] ax +
call sub_4219E8  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-44h] +
push 5  +
xor eax eax +
mov [ebp-34h] ebx +
push offset aRoot_0  +
mov [ebp-30h] esi +
mov [ebp-44h] ax +
call sub_4219E8  +
lea eax [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea edx [ebp-44h] +
lea ecx [ebp-5Ch] +
call sub_42E287  +
lea ecx [ebp-44h] +
call sub_421992  +
lea ecx [ebp-2Ch] +
mov [ebp-4] bl +
call sub_421992  +
jmp loc_42E5DC  +
xor ebx ebx +
push 9  +
push offset aAppvIsv  +
mov ecx edi +
call sub_4219E8  +
push ecx  +
push 104h  +
lea ecx [ebp-70h] +
call sub_424E79  +
mov esi ebx +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-6Ch] +
sub eax [ebp-70h] +
sar eax 1 +
mov [ebp-64h] eax +
lea eax [ebp-60h] +
push eax  +
push 20119h  +
push ebx  +
push offset SubKey  +
push 80000002h  +
mov [ebp-60h] ebx +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_42E65A  +
cmp dword ptr [ebp-48h] 8 +
lea eax [ebp-5Ch] +
mov esi [ebp-60h] +
mov [ebp-20h] esi +
jb loc_42E642  +
mov eax [ebp-5Ch] +
lea ecx [ebp-64h] +
push ecx  +
push dword ptr [ebp-70h]  +
lea ecx [ebp-20h] +
push eax  +
call sub_42E215  +
test eax eax +
jnz loc_42E65A  +
push 3  +
jmp loc_42E6BF  +
mov eax [ebp-6Ch] +
sub eax [ebp-70h] +
sar eax 1 +
mov [ebp-64h] eax +
lea eax [ebp-60h] +
push eax  +
push 20119h  +
push ebx  +
push offset SubKey  +
push 80000001h  +
mov [ebp-60h] ebx +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_42E6D6  +
mov eax ebx +
test esi esi +
jz loc_42E693  +
push esi  +
call ds:RegCloseKey  +
mov esi [ebp-60h] +
mov [ebp-20h] esi +
test eax eax +
jnz loc_42E6D6  +
cmp dword ptr [ebp-48h] 8 +
lea eax [ebp-5Ch] +
jb loc_42E6A9  +
mov eax [ebp-5Ch] +
lea ecx [ebp-64h] +
push ecx  +
push dword ptr [ebp-70h]  +
lea ecx [ebp-20h] +
push eax  +
call sub_42E215  +
test eax eax +
jnz loc_42E6D6  +
push 2  +
mov ecx [ebp-74h] +
pop eax  +
mov [ecx] eax +
mov ecx edi +
push dword ptr [ebp-70h]  +
call sub_421A39  +
mov edi 80h +
jmp loc_42E6EB  +
call sub_42E1CF  +
mov ebx eax +
mov edi edx +
or ebx 60004h +
or edi 0E05h +
test esi esi +
jz loc_42E6F6  +
push esi  +
call ds:RegCloseKey  +
lea ecx [ebp-70h] +
call sub_421849  +
lea ecx [ebp-5Ch] +
call sub_421992  +
mov eax ebx +
mov edx edi +
call sub_445D24  +
retn 0Ch  +
***
call sub_42E1CF  +
or eax 60006h +
or edx 1005h +
jmp loc_42E967  +
call sub_42E1CF  +
mov esi eax +
mov edi edx +
or esi 60001h +
or edi 1205h +
jmp loc_42E94D  +
jle loc_42E815  +
movzx ebx bx +
or ebx 80070000h +
call sub_42E1CF  +
mov esi eax +
mov edi edx +
xor eax eax +
or esi ebx +
or edi eax +
or esi eax +
or edi 1225h +
jmp loc_42E94D  +
call sub_42E1CF  +
mov esi eax +
mov edi edx +
or esi 60002h +
or edi 1305h +
jmp loc_42E945  +
call sub_42E1CF  +
mov esi eax +
mov edi edx +
or esi 60003h +
or edi 1405h +
jmp loc_42E93D  +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-54h] +
jnz loc_42E8E4  +
sub ecx ebx +
sar ecx 1 +
lea eax ds:2[ecx*2] +
push eax  +
push edx  +
push 1  +
xor eax eax +
push eax  +
push edi  +
push esi  +
call ds:RegSetValueExW  +
mov ebx eax +
test ebx ebx +
jz loc_42E934  +
jle loc_42E91B  +
movzx ebx bx +
or ebx 80070000h +
call sub_42E1CF  +
mov esi eax +
mov edi edx +
xor eax eax +
or esi ebx +
or edi eax +
or esi eax +
or edi 1425h +
jmp loc_42E93D  +
xor eax eax +
mov edi 80h +
mov esi eax +
lea ecx [ebp-28h] +
call sub_421992  +
lea ecx [ebp-64h] +
call sub_421849  +
mov eax [ebp-50h] +
test eax eax +
jz loc_42E95B  +
push eax  +
call ds:RegCloseKey  +
lea ecx [ebp-40h] +
call sub_421992  +
mov eax esi +
mov edx edi +
call sub_445D24  +
retn 8  +
***
call sub_445D69  +
call sub_445D69  +
call sub_445D69  +
mov edi edi +
mov edi edi +
call sub_445D69  +
mov edi edi +
mov edi edi +
call sub_445D35  +
mov edi edi +
call sub_445910  +
call sub_445D69  +
mov edi edi +
call sub_445D69  +
call sub_445D69  +
call sub_445D69  +
call sub_445D35  +
call sub_445D35  +
call sub_445D35  +
call sub_445D69  +
call sub_445D69  +
cmp dword ptr [ecx+14h] 8 +
call sub_445D69  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+14h] 8 +
mov edi edi +
call sub_445D69  +
call sub_445D69  +
call sub_445DA0  +
call sub_445D35  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx ecx +
mov ecx 7FFFFFFFh +
push edi  +
cmp esi ecx +
ja loc_4301F8  +
mov eax [ebx+4] +
sub eax [ebx] +
sar eax 1 +
mov [ebp+var_8] eax +
mov eax [ebx+8] +
sub eax [ebx] +
sar eax 1 +
mov edx eax +
shr edx 1 +
sub ecx edx +
cmp eax ecx +
ja loc_4301A7  +
lea edi [edx+eax] +
cmp edi esi +
jnb loc_4301A9  +
mov edi esi +
push edi  +
call sub_421AC3  +
mov ecx [ebp+var_8] +
mov edx esi +
sub edx ecx +
mov [ebp+var_4] eax +
lea ecx [eax+ecx*2] +
jz loc_4301D2  +
mov esi [ebp+arg_4] +
mov ax [esi] +
mov [ecx] ax +
lea ecx [ecx+2] +
sub edx 1 +
jnz loc_4301C1  +
mov esi [ebp+arg_0] +
mov eax [ebx+4] +
sub eax [ebx] +
push eax  +
push dword ptr [ebx]  +
push [ebp+var_4]  +
call loc_448020  +
add esp 0Ch +
mov ecx ebx +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_421FA4  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
call sub_421E4E  +
int 3  +
mov edi edi +
push esi  +
mov esi [ecx] +
push edi  +
mov edi [ecx+4] +
jmp loc_430213  +
mov ecx esi +
call sub_421992  +
add esi 18h +
cmp esi edi +
jnz loc_430209  +
pop edi  +
pop esi  +
retn   +
***
mov dword ptr [ecx] offset off_402AE0 +
call sub_445DA0  +
mov eax [ebp-14h] +
mov edi edi +
call sub_445D69  +
call sub_445D35  +
call sub_445DA0  +
mov esi ecx +
and dword ptr [ebp-4] 0 +
push 10h  +
call sub_44504B  +
pop ecx  +
xor ecx ecx +
inc ecx  +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov ecx [ebp+8] +
mov dword ptr [eax] offset off_402ACC +
mov [eax+0Ch] ecx +
mov [esi] ecx +
mov [esi+4] eax +
call sub_445D0F  +
retn 8  +
***
push 4  +
push dword ptr [ecx+0Ch]  +
call sub_445301  +
pop ecx  +
pop ecx  +
retn   +
***
mov ecx [ecx] +
test ecx ecx +
jnz sub_421992  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+14h] +
and ecx 0FFFFF9FFh +
or ecx 800h +
mov [eax+14h] ecx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
or dword ptr [eax+14h] 4 +
pop ebp  +
retn   +
***
push esi  +
lea esi [ecx+50h] +
mov ecx esi +
call sub_43089A  +
mov dword ptr [esi] offset off_402714 +
mov ecx esi +
pop esi  +
jmp sub_423164  +
***
mov dword ptr [ecx] offset off_402AF0 +
call sub_445D69  +
call sub_445D69  +
mov edi edi +
call sub_445D35  +
call sub_445DA0  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
test esi esi +
jnz loc_430A47  +
xor eax eax +
jmp loc_430A4E  +
mov eax [esi] +
mov eax [eax+4] +
add eax esi +
mov ecx [ebp+arg_0] +
push eax  +
call ds:off_454218  +
call [ebp+arg_0]  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_445DA0  +
mov edi ecx +
mov [ebp-20h] edi +
xor esi esi +
lea ecx [ebp-28h] +
mov ebx esi +
push edi  +
mov [ebp-1Ch] ebx +
call sub_4261C8  +
mov [ebp-4] esi +
cmp byte ptr [ebp-24h] 0 +
jz loc_430BEB  +
mov eax [edi] +
mov eax [eax+4] +
mov edx [eax+edi+24h] +
mov ecx [eax+edi+20h] +
cmp edx esi +
jg loc_430AEB  +
jl loc_430AE2  +
cmp ecx 1 +
ja loc_430AEB  +
mov ecx esi +
mov [ebp-18h] esi +
mov edx esi +
jmp loc_430AF3  +
sub ecx 1 +
sbb edx esi +
mov [ebp-18h] edx +
mov byte ptr [ebp-4] 1 +
mov eax [eax+edi+14h] +
and eax 1C0h +
mov [ebp-14h] ecx +
cmp eax 40h +
jz loc_430B55  +
test ebx ebx +
jnz loc_430BE8  +
mov eax [edi] +
cmp edx esi +
jl loc_430B57  +
jg loc_430B1C  +
cmp ecx esi +
jbe loc_430B57  +
mov ecx [eax+4] +
movzx eax word ptr [ecx+edi+40h] +
mov ecx [ecx+edi+38h] +
push eax  +
call sub_428314  +
movzx ecx ax +
mov eax 0FFFFh +
cmp ax cx +
jnz loc_430B41  +
push 4  +
pop ebx  +
mov [ebp-1Ch] ebx +
mov ecx [ebp-14h] +
mov edx [ebp-18h] +
add ecx 0FFFFFFFFh +
mov [ebp-14h] ecx +
adc edx 0FFFFFFFFh +
mov [ebp-18h] edx +
jmp loc_430B08  +
mov eax [edi] +
mov eax [eax+4] +
push 2Dh  +
mov ecx [eax+edi+38h] +
call sub_428314  +
mov cx ax +
mov eax 0FFFFh +
cmp ax cx +
jnz loc_430B78  +
push 4  +
pop ebx  +
mov [ebp-1Ch] ebx +
mov eax [ebp-14h] +
mov ecx [ebp-18h] +
test ebx ebx +
jnz loc_430BE8  +
cmp ecx esi +
jl loc_430BE8  +
jg loc_430B8C  +
cmp eax esi +
jbe loc_430BE8  +
mov eax [edi] +
mov ecx [eax+4] +
movzx eax word ptr [ecx+edi+40h] +
mov ecx [ecx+edi+38h] +
push eax  +
call sub_428314  +
movzx ecx ax +
mov eax 0FFFFh +
cmp ax cx +
jnz loc_430BB3  +
push 4  +
pop ebx  +
mov [ebp-1Ch] ebx +
mov eax [ebp-14h] +
mov ecx [ebp-18h] +
add eax 0FFFFFFFFh +
mov [ebp-14h] eax +
adc ecx 0FFFFFFFFh +
mov [ebp-18h] ecx +
jmp loc_430B7E  +
mov edx [ebp-20h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_426D6B  +
mov eax offset loc_430BE0 +
retn   +
mov edi [ebp-20h] +
xor esi esi +
mov ebx [ebp-1Ch] +
mov [ebp-4] esi +
mov eax [edi] +
push esi  +
push ebx  +
mov eax [eax+4] +
mov [eax+edi+20h] esi +
mov [eax+edi+24h] esi +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
call sub_426D6B  +
lea ecx [ebp-28h] +
call sub_42617B  +
mov eax edi +
call sub_445D0F  +
retn   +
***
mov ecx [ecx+4] +
test ecx ecx +
jz locret_430C25  +
push 10h  +
pop edx  +
jmp sub_421D72  +
***
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov eax dword_452720 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi edx +
xor eax eax +
mov edx [ebp+arg_0] +
mov ebx ecx +
mov [ebp+var_4C] edi +
mov [ebp+var_48] eax +
push 0Ah  +
pop esi  +
test edx edx +
jz loc_430D34  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax word ptr [ebp+var_48] +
jnz loc_430D16  +
sub ecx edi +
mov edi [ebp+var_4C] +
sar ecx 1 +
xor eax eax +
lea ecx ds:2[ecx*2] +
jmp loc_430D36  +
mov ecx esi +
test edx edx +
jnz loc_430D3F  +
mov edx offset aNull_0 +
mov [ebp+var_34] edx +
mov edx [ebp+arg_4] +
mov [ebp+var_30] eax +
mov [ebp+var_2C] ecx +
mov [ebp+var_28] eax +
test edx edx +
jz loc_430D74  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax word ptr [ebp+var_48] +
jnz loc_430D57  +
sub ecx esi +
xor eax eax +
sar ecx 1 +
lea esi ds:2[ecx*2] +
test edx edx +
jnz loc_430D79  +
mov edx offset aNull_0 +
mov [ebp+var_20] eax +
mov [ebp+var_18] eax +
lea eax [ebp+arg_8] +
mov [ebp+var_14] eax +
xor eax eax +
push 4  +
pop ecx  +
mov [ebp+var_10] eax +
mov [ebp+var_8] eax +
lea eax [ebp+var_44] +
push eax  +
push ecx  +
mov [ebp+var_24] edx +
mov edx edi +
mov [ebp+var_C] ecx +
push ecx  +
mov ecx ebx +
mov [ebp+var_1C] esi +
call sub_423661  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44503A  +
leave   +
retn 0Ch  +
***
mov edi edi +
retn   +
***
call sub_445D69  +
mov eax [ebp+0Ch] +
mov [ebp-3Ch] eax +
mov eax [ebp+8] +
test [ecx] eax +
jz loc_430FB3  +
mov ebx dword_45347C +
mov esi ebx +
mov edi [esi+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_430E31  +
mov ebx [ebp-3Ch] +
push ebx  +
lea eax [edi+10h] +
push eax  +
call sub_42EC73  +
test al al +
jz loc_430E0C  +
mov edi [edi+8] +
jmp loc_430E10  +
mov esi edi +
mov edi [edi] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_430DF9  +
mov ebx dword_45347C +
cmp esi ebx +
jz loc_430E31  +
lea eax [esi+10h] +
push eax  +
mov eax [ebp-3Ch] +
push eax  +
call sub_42EC73  +
test al al +
jz loc_430E33  +
mov esi ebx +
cmp esi ebx +
jz loc_430E3C  +
mov esi [esi+28h] +
jmp loc_430E41  +
mov esi (offset dword_41BB5C+4) +
cmp dword_451154 0 +
lea edi [ebp-20h] +
movs   +
movs   +
movs   +
movs   +
jz loc_430FB3  +
mov al byte_451158 +
cmp [ebp-1Ch] al +
jbe loc_430E67  +
test al al +
jnz loc_430FB3  +
mov esi [ebp-18h] +
mov eax esi +
mov edx [ebp-14h] +
or eax edx +
jz loc_430EAD  +
mov ecx esi +
mov eax edx +
and ecx dword_451140 +
and eax dword_451144 +
or ecx eax +
jz loc_430FB3  +
and esi dword_451148 +
mov ecx dword_45114C +
and edx ecx +
cmp esi dword_451148 +
jnz loc_430FB3  +
cmp edx ecx +
jnz loc_430FB3  +
mov ebx [ebp+8] +
mov eax ebx +
push 0  +
pop ecx  +
sub eax 1 +
jz loc_430EE1  +
sub eax 1 +
jz loc_430EDB  +
dec eax  +
sub eax 1 +
jz loc_430ED5  +
sub eax 4 +
jz loc_430ECF  +
mov [ebp-1Ch] cl +
jmp loc_430EE5  +
mov byte ptr [ebp-1Ch] 5 +
jmp loc_430EE5  +
mov byte ptr [ebp-1Ch] 4 +
jmp loc_430EE5  +
mov byte ptr [ebp-1Ch] 3 +
jmp loc_430EE5  +
mov byte ptr [ebp-1Ch] 2 +
xor eax eax +
mov [ebp-28h] ecx +
mov dword ptr [ebp-24h] 7 +
mov [ebp-38h] ax +
mov [ebp-4] ecx +
mov eax [ebp-3Ch] +
mov ecx eax +
push 8  +
pop esi  +
cmp [eax+14h] esi +
jb loc_430F07  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-38h] +
call sub_421A62  +
push offset asc_41C954  +
lea ecx [ebp-38h] +
call sub_421A39  +
push offset aAnInvalidForma  +
lea ecx [ebp-38h] +
call sub_421A39  +
cmp ebx esi +
jz loc_430F92  +
cmp ebx 20h +
jz loc_430F92  +
cmp dword_4511A0 5 +
jbe loc_430F92  +
push 2000h  +
push 0  +
call sub_420CD4  +
test al al +
jz loc_430F92  +
and dword ptr [ebp-40h] 0 +
lea eax [ebp-38h] +
mov dword ptr [ebp-3Ch] 1 +
mov dword ptr [ebp-44h] offset dword_41BCA0 +
cmp [ebp-24h] esi +
jb loc_430F6C  +
mov eax [ebp-38h] +
mov [ebp-48h] eax +
mov edx offset byte_4206D9 +
lea eax [ebp-3Ch] +
mov [ebp-4Ch] ebx +
push eax  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-44h] +
push eax  +
lea eax [ebp-48h] +
push eax  +
lea eax [ebp-4Ch] +
push eax  +
push ecx  +
push ecx  +
call sub_420D19  +
lea eax [ebp-38h] +
cmp [ebp-24h] esi +
jb loc_430F9D  +
mov eax [ebp-38h] +
push eax  +
lea edx [ebp-20h] +
mov ecx offset unk_451130 +
call sub_430C68  +
lea ecx [ebp-38h] +
call sub_421992  +
call sub_445D24  +
retn 0Ch  +
***
call sub_445D69  +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov [ebp-40h] eax +
mov eax [ebp+10h] +
mov [ebp-44h] eax +
mov eax [ebp+14h] +
mov [ebp-3Ch] eax +
test [ecx] ebx +
jz loc_431162  +
cmp dword_451154 0 +
lea edi [ebp-20h] +
mov esi offset dword_41BBE0 +
movs   +
movs   +
movs   +
movs   +
jz loc_431162  +
mov al byte_451158 +
cmp [ebp-1Ch] al +
jbe loc_431011  +
test al al +
jnz loc_431162  +
mov esi [ebp-18h] +
mov eax esi +
mov edx [ebp-14h] +
or eax edx +
jz loc_431057  +
mov ecx esi +
mov eax edx +
and ecx dword_451140 +
and eax dword_451144 +
or ecx eax +
jz loc_431162  +
and esi dword_451148 +
mov ecx dword_45114C +
and edx ecx +
cmp esi dword_451148 +
jnz loc_431162  +
cmp edx ecx +
jnz loc_431162  +
mov eax ebx +
push 0  +
pop ecx  +
sub eax 1 +
jz loc_431088  +
sub eax 1 +
jz loc_431082  +
dec eax  +
sub eax 1 +
jz loc_43107C  +
sub eax 4 +
jz loc_431076  +
mov [ebp-1Ch] cl +
jmp loc_43108C  +
mov byte ptr [ebp-1Ch] 5 +
jmp loc_43108C  +
mov byte ptr [ebp-1Ch] 4 +
jmp loc_43108C  +
mov byte ptr [ebp-1Ch] 3 +
jmp loc_43108C  +
mov byte ptr [ebp-1Ch] 2 +
xor eax eax +
mov [ebp-28h] ecx +
mov dword ptr [ebp-24h] 7 +
mov [ebp-38h] ax +
mov [ebp-4] ecx +
mov eax [ebp-40h] +
mov ecx eax +
push 8  +
pop esi  +
cmp [eax+14h] esi +
jb loc_4310AE  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-38h] +
call sub_421A62  +
push offset asc_41C954  +
lea ecx [ebp-38h] +
call sub_421A39  +
push dword ptr [ebp-44h]  +
lea ecx [ebp-38h] +
call sub_421A39  +
cmp ebx esi +
jz loc_43113A  +
cmp ebx 20h +
jz loc_43113A  +
cmp dword_4511A0 5 +
jbe loc_43115A  +
push 2000h  +
push 0  +
call sub_420CD4  +
test al al +
jz loc_43115A  +
mov eax [ebp+18h] +
mov ecx [ebp-3Ch] +
mov [ebp-40h] eax +
lea eax [ebp-38h] +
mov dword ptr [ebp-44h] 1 +
mov [ebp-3Ch] ecx +
cmp [ebp-24h] esi +
jb loc_431112  +
mov eax [ebp-38h] +
mov [ebp-48h] eax +
mov edx offset byte_4206D9 +
lea eax [ebp-44h] +
mov [ebp-4Ch] ebx +
push eax  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-48h] +
push eax  +
lea eax [ebp-4Ch] +
push eax  +
push ecx  +
push ecx  +
call sub_420D19  +
jmp loc_43115A  +
lea eax [ebp-38h] +
cmp [ebp-24h] esi +
jb loc_431145  +
mov eax [ebp-38h] +
push dword ptr [ebp+18h]  +
mov ecx [ebp-3Ch] +
lea edx [ebp-20h] +
push ecx  +
push eax  +
mov ecx offset unk_451130 +
call sub_430CE6  +
lea ecx [ebp-38h] +
call sub_421992  +
call sub_445D24  +
retn 14h  +
***
mov eax dword_45347C +
mov ecx offset dword_45347C +
push dword ptr [eax+4]  +
push ecx  +
call sub_4312EB  +
mov ecx dword_45347C +
push 2Ch  +
pop edx  +
jmp sub_421D72  +
***
call sub_445D69  +
call sub_445D69  +
mov edi edi +
mov edi edi +
call sub_445DA0  +
push 0  +
call sub_445DA0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
push 0  +
mov edi edi +
push 0  +
mov edi edi +
call sub_445D35  +
mov edi edi +
mov edi edi +
push esi  +
mov esi edx +
test ecx ecx +
jz loc_431C81  +
movzx eax byte ptr [ecx+0Fh] +
push eax  +
movzx eax byte ptr [ecx+0Eh] +
push eax  +
movzx eax byte ptr [ecx+0Dh] +
push eax  +
movzx eax byte ptr [ecx+0Ch] +
push eax  +
movzx eax byte ptr [ecx+0Bh] +
push eax  +
movzx eax byte ptr [ecx+0Ah] +
push eax  +
movzx eax byte ptr [ecx+9] +
push eax  +
movzx eax byte ptr [ecx+8] +
push eax  +
movzx eax word ptr [ecx+6] +
push eax  +
movzx eax word ptr [ecx+4] +
push eax  +
push dword ptr [ecx]  +
push offset a08x04x04x02x02  +
push 25h  +
push esi  +
call sub_430C38  +
add esp 38h +
mov eax esi +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
test edx edx +
js loc_431CF7  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_431CF7  +
inc edx  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_431CF7  +
mov eax esi +
mul  dword ptr [ebp+0Ch] +
test edx edx +
ja loc_431CF7  +
jb loc_431CC7  +
cmp eax 0FFFFFFFFh +
ja loc_431CF7  +
cmp eax 0FFFFFFEFh +
ja loc_431CF7  +
mov ecx [edi+4] +
add eax 10h +
push eax  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
test eax eax +
jz loc_431CF7  +
and dword ptr [eax+4] 0 +
lea ecx [esi-1] +
mov [eax] edi +
mov dword ptr [eax+0Ch] 1 +
mov [eax+8] ecx +
jmp loc_431CF9  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_431D1C  +
push dword ptr [ebp+8]  +
mov eax [ecx+4] +
push 0  +
push dword ptr [eax+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
push esi  +
test edx edx +
js loc_431D74  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_431D74  +
inc edx  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_431D74  +
mov eax esi +
mul  dword ptr [ebp+10h] +
test edx edx +
ja loc_431D74  +
jb loc_431D54  +
cmp eax 0FFFFFFFFh +
ja loc_431D74  +
cmp eax 0FFFFFFEFh +
ja loc_431D74  +
mov ecx [ecx+4] +
add eax 10h +
push eax  +
push dword ptr [ebp+8]  +
call sub_431E20  +
test eax eax +
jz loc_431D74  +
lea ecx [esi-1] +
mov [eax+8] ecx +
jmp loc_431D76  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax ecx +
retn   +
***
cmp byte ptr [ecx+8] 0 +
mov dword ptr [ecx] offset off_402B0C +
jz locret_431DDD  +
cmp dword ptr [ecx+4] 0 +
jz locret_431DDD  +
push dword ptr [ecx+4]  +
call ds:HeapDestroy  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_431E19  +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+dwFlags] +
test eax eax +
jnz loc_431E3B  +
push [ebp+dwBytes]  +
push eax  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
jmp loc_431E5F  +
cmp [ebp+dwBytes] 0 +
mov ecx [ecx+4] +
jnz loc_431E52  +
push eax  +
push 0  +
push ecx  +
call ds:HeapFree  +
xor eax eax +
jmp loc_431E5F  +
push [ebp+dwBytes]  +
push eax  +
push 0  +
push ecx  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpMem]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [ecx+20h] eax +
mov eax [ebp+arg_8] +
mov [ecx+24h] eax +
pop ebp  +
retn   +
***
call sub_42230E  +
mov ecx [eax+4] +
or dword ptr [eax] 20h +
mov [eax+4] ecx +
xor eax eax +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_0] +
mov byte ptr [edi+0Ch] 0 +
lea ebx [edi+4] +
test ecx ecx +
jz loc_431F5F  +
mov eax [ecx] +
mov [ebx] eax +
mov eax [ecx+4] +
jmp loc_431F74  +
cmp dword_4529AC 0 +
jnz loc_431F79  +
mov eax off_451118 +
mov [ebx] eax +
mov eax off_45111C +
mov [ebx+4] eax +
jmp loc_431FBA  +
push esi  +
call sub_436909  +
mov [edi] eax +
lea esi [edi+8] +
push ebx  +
push eax  +
mov ecx [eax+4Ch] +
mov [ebx] ecx +
mov ecx [eax+48h] +
mov [esi] ecx +
call sub_436B6A  +
push esi  +
push dword ptr [edi]  +
call sub_436B97  +
mov ecx [edi] +
add esp 10h +
mov eax [ecx+350h] +
pop esi  +
test al 2 +
jnz loc_431FBA  +
or eax 2 +
mov [ecx+350h] eax +
mov byte ptr [edi+0Ch] 1 +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
cmp byte ptr [ecx+0Ch] 0 +
jz locret_431FD1  +
mov eax [ecx] +
and dword ptr [eax+350h] 0FFFFFFFDh +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov edi edi +
test eax eax +
jz loc_4322CC  +
push 5  +
pop ecx  +
int 29h  +
push esi  +
push 1  +
mov esi 0C0000417h +
push esi  +
push 2  +
call sub_4320E2  +
add esp 0Ch +
push esi  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_45314C +
push esi  +
push edi  +
cmp eax 5 +
jl loc_43237A  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_43231C  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_43232F  +
cmp byte ptr [eax] 0 +
jz loc_43232F  +
inc eax  +
cmp eax ecx +
jnz loc_432325  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_43240B  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFE0h +
add edi eax +
cmp eax 1 +
jl loc_4323F1  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_43239B  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_4323AE  +
cmp byte ptr [eax] 0 +
jz loc_4323AE  +
inc eax  +
cmp eax ecx +
jnz loc_4323A4  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_43240B  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFF0h +
xorps xmm1 xmm1 +
add edi eax +
cmp eax edi +
jz loc_4323DC  +
movups xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_4323DC  +
add ecx 10h +
cmp ecx edi +
jnz loc_4323C6  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_4323E9  +
cmp byte ptr [ecx] 0 +
jz loc_4323ED  +
inc ecx  +
cmp ecx eax +
jnz loc_4323E3  +
sub ecx esi +
jmp loc_43240B  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_432409  +
cmp byte ptr [ecx] 0 +
jz loc_432409  +
inc ecx  +
cmp ecx eax +
jnz loc_4323FF  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_45314C +
push esi  +
push edi  +
cmp eax 5 +
jl loc_4324DD  +
mov ecx [ebp+8] +
test cl 1 +
jz loc_43244F  +
mov edx ecx +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
shr edx 1 +
cmp eax edx +
jnb loc_43246A  +
mov edx eax +
mov esi [ebp+8] +
lea edi [ecx+edx*2] +
xor eax eax +
cmp esi edi +
jz loc_432482  +
cmp [ecx] ax +
jz loc_432482  +
add ecx 2 +
cmp ecx edi +
jnz loc_432476  +
sub ecx esi +
sar ecx 1 +
cmp ecx edx +
jnz loc_4325BB  +
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
and eax 0FFFFFFE0h +
add eax ecx +
mov eax [ebp+0Ch] +
mov esi ecx +
lea edx [ecx+eax*2] +
cmp esi edx +
jz loc_432448  +
xor eax eax +
cmp [ecx] ax +
jz loc_432448  +
add ecx 2 +
cmp ecx edx +
jnz loc_432500  +
jmp loc_432448  +
***
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
xorps xmm1 xmm1 +
and eax 0FFFFFFF0h +
add eax ecx +
lea ecx [esi+eax*2] +
jmp loc_432577  +
movups xmm0 oword ptr [edi] +
pcmpeqw xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_43257B  +
add edi 10h +
cmp edi ecx +
jnz loc_432565  +
mov eax [ebp+0Ch] +
lea ecx [esi+eax*2] +
cmp edi ecx +
jz loc_432593  +
xor eax eax +
cmp [edi] ax +
jz loc_432593  +
add edi 2 +
cmp edi ecx +
jnz loc_432587  +
mov ecx edi +
jmp loc_432448  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_4] +
mov [ebp+var_28] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_20] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_14] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_20] +
mov byte ptr [ebp+var_4] 0 +
push [ebp+var_4]  +
mov [ebp+var_C] eax +
lea eax [ebp+var_28] +
mov byte ptr [ebp+var_8] 0 +
push [ebp+var_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_432749  +
add esp 10h +
leave   +
retn   +
***
push esi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call sub_436566  +
mov edx [ebp+arg_0] +
and dword ptr [esi] 0 +
pop ecx  +
mov eax [edx] +
mov [esi] eax +
mov eax esi +
and dword ptr [edx] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
lea eax [ecx-20h] +
cmp ax 5Ah +
ja loc_433488  +
lea eax [ecx-20h] +
and eax 7Fh +
mov eax ds:dword_4075B4[eax*8] +
jmp loc_43348A  +
xor eax eax +
imul eax eax +
add eax [ebp+arg_4] +
and eax 7Fh +
mov eax ds:dword_4075B0[eax*8] +
pop ebp  +
retn 8  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_434B44  +
test al al +
jz loc_43361F  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_4336D7  +
call sub_435431  +
mov dword ptr [eax] 16h +
call sub_43228E  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_4336B5  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_4336C8  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_433431  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_43360F  +
cmp eax 7 +
ja loc_43361F  +
jmp ds:off_4336F3[eax*4]  +
mov ecx esi +
call sub_4338B5  +
jmp loc_4336AD  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_4336B5  +
mov ecx esi +
call sub_43383B  +
jmp loc_4336AD  +
mov ecx esi +
call sub_43413E  +
jmp loc_4336AD  +
mov [esi+28h] ebx +
jmp loc_4336B5  +
mov ecx esi +
call sub_43399C  +
jmp loc_4336AD  +
mov ecx esi +
call sub_4339E9  +
jmp loc_4336AD  +
mov ecx esi +
call sub_433CAF  +
test al al +
jz loc_43361F  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_433630  +
inc dword ptr [esi+10h]  +
mov ecx esi +
call sub_434B5F  +
test al al +
jz loc_43361F  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_433625  +
mov eax [esi+18h] +
jmp loc_433622  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_434B44  +
test al al +
jz loc_433743  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_433800  +
call sub_435431  +
mov dword ptr [eax] 16h +
call sub_43228E  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_4337DA  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_4337F1  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_433468  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_433733  +
cmp eax 7 +
ja loc_433743  +
jmp ds:off_43381B[eax*4]  +
mov ecx esi +
call sub_4338D4  +
jmp loc_4337D2  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_4337DA  +
mov ecx esi +
call sub_433878  +
jmp loc_4337D2  +
mov ecx esi +
call sub_434169  +
jmp loc_4337D2  +
mov [esi+28h] ebx +
jmp loc_4337DA  +
mov ecx esi +
call sub_4339C2  +
jmp loc_4337D2  +
mov ecx esi +
call sub_433B37  +
jmp loc_4337D2  +
mov ecx esi +
call sub_433EE1  +
test al al +
jz loc_433743  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_433754  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_434B5F  +
test al al +
jz loc_433743  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_433749  +
mov eax [esi+18h] +
jmp loc_433746  +
***
movsx eax byte ptr [ecx+31h] +
movzx eax word ptr [ecx+32h] +
call sub_4338F3  +
call sub_43391D  +
mov edi edi +
lea edx [ecx+18h] +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov al [ecx+31h] +
movzx edx word ptr [ecx+32h] +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
lea edx [ecx+24h] +
jz loc_43417A  +
push edx  +
call sub_433579  +
retn   +
add dword ptr [ecx+14h] 4 +
mov eax [ecx+14h] +
mov eax [eax-4] +
mov [edx] eax +
test eax eax +
jns loc_434192  +
or dword ptr [ecx+20h] 4 +
neg eax  +
mov [edx] eax +
mov al 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_4341D7  +
movzx eax ds:byte_4341F0[eax] +
jmp ds:off_4341DC[eax*4]  +
mov eax 1 +
pop ebp  +
retn   +
mov eax 2 +
pop ebp  +
retn   +
mov eax 4 +
pop ebp  +
retn   +
mov eax 8 +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_436909  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_436A60  +
call sub_436A60  +
test eax eax +
jnz loc_435440  +
mov eax offset unk_451EA8 +
retn   +
add eax 10h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset unk_452858 +
push eax  +
call ds:EnterCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_43B023  +
pop ecx  +
call sub_445910  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_43581F  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  esi +
cmp eax [ebp+arg_4] +
jb loc_435853  +
imul esi [ebp+arg_4] +
test esi esi +
jnz loc_43583E  +
inc esi  +
jmp loc_43583E  +
call sub_43B767  +
test eax eax +
jz loc_435853  +
push esi  +
call sub_43B6DE  +
pop ecx  +
test eax eax +
jz loc_435853  +
push esi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_43582A  +
jmp loc_435860  +
call sub_435431  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword_4529AC 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [esi+1] +
jnz loc_4358A1  +
cmp edi 100h +
ja loc_4358EC  +
mov eax off_451060 +
pop edi  +
movzx eax word ptr [eax+esi*2] +
and eax 2 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
call sub_436909  +
mov ecx [eax+4Ch] +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_436B6A  +
mov eax [ebp+var_4] +
add esp 8 +
cmp edi 100h +
ja loc_4358D3  +
mov eax [eax] +
pop edi  +
movzx eax word ptr [eax+esi*2] +
and eax 2 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp dword ptr [eax+4] 1 +
jle loc_4358EC  +
push 0  +
push 2  +
push esi  +
call sub_43B7CA  +
add esp 0Ch +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
call sub_436909  +
mov ecx [eax+4Ch] +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_436B6A  +
mov eax [ebp+var_4] +
pop ecx  +
pop ecx  +
mov eax [eax+4] +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_4] +
mov [eax] edx +
mov [eax+4] ecx +
test ecx ecx +
jz loc_435F04  +
mov [ecx] edx +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_43C338  +
mov edi edi +
mov edi edi +
call sub_445910  +
mov eax [ebp+10h] +
call sub_445910  +
mov eax [ebp+10h] +
call sub_445910  +
mov eax [ebp+10h] +
call sub_445910  +
mov eax [ebp+10h] +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
push 43h  +
mov [eax+18h] ecx +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset dword_409958 +
mov eax [ebp+arg_0] +
mov [eax+350h] ecx +
mov eax [ebp+arg_0] +
pop ecx  +
push 5  +
mov dword ptr [eax+48h] offset unk_4520F0 +
mov eax [ebp+arg_0] +
mov [eax+6Ch] cx +
mov eax [ebp+arg_0] +
mov [eax+172h] cx +
lea ecx [ebp-1] +
mov eax [ebp+arg_0] +
and dword ptr [eax+34Ch] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_10] eax +
pop eax  +
mov [ebp+var_8] eax +
mov [ebp+var_14] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_4365BC  +
lea eax [ebp+arg_0] +
mov [ebp+var_C] eax +
lea ecx [ebp-1] +
push 4  +
lea eax [ebp+arg_4] +
mov [ebp+var_8] eax +
pop eax  +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_4366CE  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
push edi  +
call ds:GetLastError  +
mov esi eax +
mov eax dword_451EB4 +
cmp eax 0FFFFFFFFh +
jz loc_436A93  +
push eax  +
call sub_43AD91  +
mov edi eax +
test edi edi +
jz loc_436A8E  +
cmp edi 0FFFFFFFFh +
jnz loc_436B00  +
xor ebx ebx +
mov edi ebx +
jmp loc_436B02  +
mov eax dword_451EB4 +
push 0FFFFFFFFh  +
push eax  +
call sub_43ADD0  +
test eax eax +
jz loc_436A88  +
push 364h  +
push 1  +
call sub_435806  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_436ACA  +
xor ebx ebx +
push ebx  +
push dword_451EB4  +
call sub_43ADD0  +
push ebx  +
call sub_436566  +
pop ecx  +
jmp loc_436A8A  +
push edi  +
push dword_451EB4  +
call sub_43ADD0  +
test eax eax +
jnz loc_436AEB  +
xor ebx ebx +
push ebx  +
push dword_451EB4  +
call sub_43ADD0  +
push edi  +
jmp loc_436AC2  +
push offset dword_4529B0  +
push edi  +
call sub_436728  +
push 0  +
call sub_436566  +
add esp 0Ch +
mov ebx edi +
push esi  +
call ds:SetLastError  +
neg edi  +
sbb edi edi +
and edi ebx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push offset loc_4367D0  +
call sub_43AD13  +
mov dword_451EB4 eax +
cmp eax 0FFFFFFFFh +
jnz loc_436B37  +
xor al al +
retn   +
***
call sub_436A60  +
test eax eax +
jnz loc_436B49  +
push eax  +
call sub_436B50  +
pop ecx  +
jmp loc_436B34  +
***
mov al 1 +
retn   +
***
mov eax dword_451EB4 +
mov edi edi +
mov edi edi +
call sub_445910  +
mov eax [ebp+10h] +
call sub_445910  +
mov eax [ebp+10h] +
call sub_445910  +
mov eax [ebp+10h] +
mov edi edi +
cmp byte ptr [ecx+0Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov ecx offset dword_4529AC +
inc eax  +
xchg eax [ecx] +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 0FFFFh +
sub esp 14h +
cmp [ebp+SrcStr] ax +
jz locret_438392  +
push [ebp+arg_4]  +
lea ecx [ebp+var_14] +
call sub_431F3F  +
mov cx [ebp+SrcStr] +
mov edx 100h +
cmp cx dx +
jnb loc_438346  +
movzx edx cl +
test ds:byte_408142[edx*2] 1 +
jz loc_43833E  +
mov eax [ebp+var_10] +
mov eax [eax+94h] +
movzx eax byte ptr [eax+edx] +
jmp loc_438341  +
movzx eax cl +
movzx eax ax +
jmp loc_438356  +
mov eax [ebp+var_10] +
mov eax [eax+0A8h] +
test eax eax +
jnz loc_43835B  +
movzx eax cx +
movzx eax ax +
jmp loc_438379  +
push 1  +
lea ecx [ebp+DestStr] +
push ecx  +
push 1  +
lea ecx [ebp+SrcStr] +
push ecx  +
push edx  +
push eax  +
call sub_439F90  +
add esp 18h +
test eax eax +
jnz loc_43837E  +
movzx eax [ebp+SrcStr] +
movzx eax ax +
jmp loc_438382  +
movzx eax [ebp+DestStr] +
cmp [ebp+var_8] 0 +
jz locret_438392  +
mov ecx [ebp+var_14] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_438394  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_439BBC  +
call sub_435431  +
mov dword ptr [eax] 16h +
call sub_43228E  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
mov eax [eax+10h] +
nop   +
pop ebp  +
retn   +
***
mov eax dword_4529BC +
push esi  +
push 3  +
pop esi  +
test eax eax +
jnz loc_439BE4  +
mov eax 200h +
jmp loc_439BEA  +
cmp eax esi +
jge loc_439BEF  +
mov eax esi +
mov dword_4529BC eax +
push 4  +
push eax  +
call sub_435806  +
push 0  +
mov lpMem eax +
call sub_436566  +
add esp 0Ch +
cmp lpMem 0 +
jnz loc_439C3A  +
push 4  +
push esi  +
mov dword_4529BC esi +
call sub_435806  +
push 0  +
mov lpMem eax +
call sub_436566  +
add esp 0Ch +
cmp lpMem 0 +
jnz loc_439C3A  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
push edi  +
xor edi edi +
mov esi offset unk_451EC0 +
push 0  +
push 0FA0h  +
lea eax [esi+20h] +
push eax  +
call sub_43AE8D  +
mov eax lpMem +
mov edx edi +
sar edx 6 +
mov [eax+edi*4] esi +
mov eax edi +
and eax 3Fh +
imul ecx eax +
mov eax dword_4529D0[edx*4] +
mov eax [eax+ecx+18h] +
cmp eax 0FFFFFFFFh +
jz loc_439C80  +
cmp eax 0FFFFFFFEh +
jz loc_439C80  +
test eax eax +
jnz loc_439C87  +
mov dword ptr [esi+10h] 0FFFFFFFEh +
add esi 38h +
inc edi  +
cmp esi offset dword_451F68 +
jnz loc_439C42  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_452720 +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_4529D0[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_439E0C  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_439E0C  +
or byte ptr [esi+28h] 80h +
jmp loc_439E85  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_439E27  +
sub eax 1 +
jz loc_439E23  +
sub eax 1 +
push 0FFFFFFF4h  +
jmp loc_439E29  +
push 0FFFFFFF5h  +
jmp loc_439E29  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_439E45  +
test ebx ebx +
jz loc_439E45  +
push ebx  +
call ds:GetFileType  +
jmp loc_439E47  +
xor eax eax +
test eax eax +
jz loc_439E67  +
movzx eax al +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_439E5C  +
or byte ptr [esi+28h] 40h +
jmp loc_439E85  +
cmp eax 3 +
jnz loc_439E85  +
or byte ptr [esi+28h] 8 +
jmp loc_439E85  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax lpMem +
test eax eax +
jz loc_439E85  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_439DE6  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0Ch  +
push offset dword_44FA98  +
call sub_445910  +
push 7  +
call sub_435491  +
pop ecx  +
xor ebx ebx +
mov [ebp-19h] bl +
mov [ebp-4] ebx +
push ebx  +
call sub_44114D  +
pop ecx  +
test eax eax +
jnz loc_439ED6  +
call sub_439D29  +
call sub_439DDF  +
mov bl 1 +
mov [ebp-19h] bl +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_439EF7  +
mov al bl +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
fstsw  [ebp+var_4] +
movsx eax [ebp+var_4] +
leave   +
retn   +
***
mov edi edi +
call sub_445910  +
mov ecx [ebp+10h] +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_452720 +
and eax 1Fh +
push 20h  +
pop ecx  +
sub ecx eax +
mov eax [ebp+arg_0] +
ror eax cl +
xor eax dword_452720 +
pop ebp  +
retn   +
***
push offset aArefileapisans  +
push offset aComparestringe  +
push offset aEnumsystemloca  +
push offset aGetdateformate  +
push offset aGetlocaleinfoe  +
push offset aGettimeformate  +
push offset aGetuserdefault  +
push offset aIsvalidlocalen  +
push offset aLcidtolocalena  +
push offset aLcmapstringex  +
push offset aLocalenametolc  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_43AA31  +
call sub_43AA17  +
call sub_43AA31  +
call sub_43AA4B  +
call sub_43AA65  +
call sub_43AA7F  +
call sub_43AA99  +
call sub_43AAB3  +
call sub_43AACD  +
call sub_43AB01  +
call sub_43AAE7  +
jmp sub_43AB1B  +
***
mov ecx offset dword_452CB0 +
mov eax offset unk_452C28 +
xor edx edx +
cmp ecx eax +
push esi  +
mov esi dword_452720 +
sbb ecx ecx +
and ecx 0FFFFFFDEh +
add ecx 22h +
inc edx  +
mov [eax] esi +
lea eax [eax+4] +
cmp edx ecx +
jnz loc_43B07D  +
mov al 1 +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445D69  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
pop ecx  +
mov eax dword_452CB8 +
nop   +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_43B794  +
cmp eax 1 +
jz loc_43B794  +
call sub_435431  +
mov dword ptr [eax] 16h +
call sub_43228E  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
mov ecx offset dword_452CB8 +
xchg eax [ecx] +
pop ebp  +
retn   +
***
call ds:GetProcessHeap  +
test eax eax +
mov hHeap eax +
setnz al  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_44193F  +
mov edi edi +
call sub_445910  +
mov eax [ebp+10h] +
push dword ptr [eax]  +
call sub_4354E1  +
pop ecx  +
retn   +
***
call sub_445910  +
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
test eax eax +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_452CC4 eax +
pop ebp  +
retn   +
***
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
mov esi [ebp+8] +
cmp byte ptr [ebp-19h] 0 +
jz locret_43C517  +
push 3  +
call sub_4354E1  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_452CDC 7080h +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
pop ecx  +
retn   +
***
mov edi edi +
call sub_445910  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
pop ecx  +
retn   +
***
mov eax esi +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
call sub_436522  +
***
cmp byte_452DB4 0 +
push eax  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_452720 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push [ebp+arg_0]  +
call sub_43CC50  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jz loc_43D296  +
xor edi edi +
mov ecx edi +
mov eax edi +
mov [ebp+var_1C] ecx +
cmp dword_452520[eax] ebx +
jz loc_43D1EE  +
inc ecx  +
add eax 30h +
mov [ebp+var_1C] ecx +
cmp eax 0F0h +
jb loc_43D0EF  +
cmp ebx 0FDE8h +
jz loc_43D1E6  +
movzx eax bx +
push eax  +
call ds:IsValidCodePage  +
test eax eax +
jz loc_43D1E6  +
mov eax 0FDE9h +
cmp ebx eax +
jnz loc_43D156  +
mov [esi+4] eax +
mov [esi+21Ch] edi +
mov [esi+18h] edi +
mov [esi+1Ch] di +
mov [esi+8] edi +
xor eax eax +
lea edi [esi+0Ch] +
stos   +
stos   +
stos   +
push esi  +
call sub_43CD26  +
jmp loc_43D29C  +
lea eax [ebp+CPInfo] +
push eax  +
push ebx  +
call ds:GetCPInfo  +
test eax eax +
jz loc_43D1DA  +
push 101h  +
lea eax [esi+18h] +
push edi  +
push eax  +
call sub_4469A0  +
add esp 0Ch +
mov [esi+4] ebx +
cmp [ebp+CPInfo.MaxCharSize] 2 +
mov [esi+21Ch] edi +
jnz loc_43D140  +
cmp [ebp+CPInfo.LeadByte] 0 +
lea eax [ebp+CPInfo.LeadByte] +
jz loc_43D1B0  +
mov cl [eax+1] +
test cl cl +
jz loc_43D1B0  +
movzx edx cl +
movzx ecx byte ptr [eax] +
jmp loc_43D1A4  +
or byte ptr [esi+ecx+19h] 4 +
inc ecx  +
cmp ecx edx +
jbe loc_43D19E  +
add eax 2 +
cmp byte ptr [eax] 0 +
jnz loc_43D18F  +
lea eax [esi+1Ah] +
mov ecx 0FEh +
or byte ptr [eax] 8 +
inc eax  +
sub ecx 1 +
jnz loc_43D1B8  +
push dword ptr [esi+4]  +
call sub_43CC12  +
xor edi edi +
mov [esi+21Ch] eax +
add esp 4 +
inc edi  +
jmp loc_43D140  +
cmp dword_452DB0 edi +
jnz loc_43D296  +
or eax 0FFFFFFFFh +
jmp loc_43D29F  +
push 101h  +
lea eax [esi+18h] +
push edi  +
push eax  +
call sub_4469A0  +
add esp 0Ch +
imul eax [ebp+var_1C] +
mov [ebp+var_20] eax +
lea eax dword_452530[eax] +
mov [ebp+var_1C] eax +
cmp byte ptr [eax] 0 +
mov ecx eax +
jz loc_43D24C  +
mov al [ecx+1] +
test al al +
jz loc_43D249  +
movzx edx byte ptr [ecx] +
movzx eax al +
jmp loc_43D23D  +
cmp edx 100h +
jnb loc_43D241  +
mov al byte_452518[edi] +
or [esi+edx+19h] al +
inc edx  +
movzx eax byte ptr [ecx+1] +
cmp edx eax +
jbe loc_43D226  +
add ecx 2 +
cmp byte ptr [ecx] 0 +
jnz loc_43D217  +
mov eax [ebp+var_1C] +
inc edi  +
add eax 8 +
mov [ebp+var_1C] eax +
cmp edi 4 +
jb loc_43D210  +
push ebx  +
mov [esi+4] ebx +
mov dword ptr [esi+8] 1 +
call sub_43CC12  +
add esp 4 +
mov [esi+21Ch] eax +
mov eax [ebp+var_20] +
lea ecx [esi+0Ch] +
push 6  +
lea edx dword_452524[eax] +
pop edi  +
mov ax [edx] +
lea edx [edx+2] +
mov [ecx] ax +
lea ecx [ecx+2] +
sub edi 1 +
jnz loc_43D280  +
jmp loc_43D14B  +
push esi  +
call sub_43CCC1  +
xor eax eax +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44503A  +
leave   +
retn   +
***
mov eax [esi+4] +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
mov [esi+4] eax +
cmp dword ptr [ecx+4] 8 +
jnz loc_43D3E3  +
lea eax [edx+24h] +
lea edx [eax+6Ch] +
jmp loc_43D33A  +
mov [eax+8] ebx +
add eax 0Ch +
cmp eax edx +
jnz loc_43D334  +
mov ebx [esi+8] +
mov eax 0C0000091h +
cmp [ecx] eax +
ja loc_43D391  +
jz loc_43D38A  +
cmp dword ptr [ecx] 0C000008Dh +
jz loc_43D383  +
cmp dword ptr [ecx] 0C000008Eh +
jz loc_43D37C  +
cmp dword ptr [ecx] 0C000008Fh +
jz loc_43D375  +
cmp dword ptr [ecx] 0C0000090h +
mov eax ebx +
jnz loc_43D3D0  +
mov eax 81h +
jmp loc_43D3CD  +
mov eax 86h +
jmp loc_43D3CD  +
mov eax 83h +
jmp loc_43D3CD  +
mov eax 82h +
jmp loc_43D3CD  +
mov eax 84h +
jmp loc_43D3CD  +
cmp dword ptr [ecx] 0C0000092h +
jz loc_43D3C8  +
cmp dword ptr [ecx] 0C0000093h +
jz loc_43D3C1  +
cmp dword ptr [ecx] 0C00002B4h +
jz loc_43D3BA  +
cmp dword ptr [ecx] 0C00002B5h +
mov eax ebx +
jnz loc_43D3D0  +
mov eax 8Dh +
jmp loc_43D3CD  +
mov eax 8Eh +
jmp loc_43D3CD  +
mov eax 85h +
jmp loc_43D3CD  +
mov eax 8Ah +
mov [esi+8] eax +
push eax  +
push 8  +
mov ecx edi +
call ds:off_454218  +
call edi  +
pop ecx  +
mov [esi+8] ebx +
jmp loc_43D3F3  +
push dword ptr [ecx+4]  +
mov [ecx+8] ebx +
mov ecx edi +
call ds:off_454218  +
call edi  +
mov eax [ebp-4] +
pop ecx  +
mov [esi+4] eax +
jmp loc_43D30E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_43D501  +
mov eax [esi+0Ch] +
cmp eax off_45100C +
jz loc_43D429  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+10h] +
cmp eax off_451010 +
jz loc_43D43B  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+14h] +
cmp eax off_451014 +
jz loc_43D44D  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+18h] +
cmp eax off_451018 +
jz loc_43D45F  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+1Ch] +
cmp eax off_45101C +
jz loc_43D471  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+20h] +
cmp eax off_451020 +
jz loc_43D483  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+24h] +
cmp eax off_451024 +
jz loc_43D495  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+38h] +
cmp eax off_451038 +
jz loc_43D4A7  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+3Ch] +
cmp eax off_45103C +
jz loc_43D4B9  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+40h] +
cmp eax off_451040 +
jz loc_43D4CB  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+44h] +
cmp eax off_451044 +
jz loc_43D4DD  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+48h] +
cmp eax off_451048 +
jz loc_43D4EF  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+4Ch] +
cmp eax off_45104C +
jz loc_43D501  +
push eax  +
call sub_436566  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
call sub_436566  +
pop ecx  +
jmp loc_43D564  +
***
push esi  +
call sub_436566  +
mov eax [ebp-8] +
push eax  +
call sub_436566  +
pop ecx  +
jmp loc_43D58E  +
***
mov ebx [ebp-4] +
push ebx  +
call sub_43D406  +
push ebx  +
call sub_436566  +
mov eax [ebp-8] +
push eax  +
call sub_436566  +
mov eax [ebp-0Ch] +
push eax  +
call sub_436566  +
add esp 10h +
jmp loc_43D564  +
***
cmp al 3Bh +
jnz loc_43D803  +
mov esi edx +
mov cl [esi+1] +
mov [esi] cl +
lea esi [esi+1] +
test cl cl +
jnz loc_43D812  +
jmp loc_43D804  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_43D92C  +
mov eax [esi] +
cmp eax off_451000 +
jz loc_43D8E4  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+4] +
cmp eax off_451004 +
jz loc_43D8F6  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+8] +
cmp eax off_451008 +
jz loc_43D908  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+30h] +
cmp eax off_451030 +
jz loc_43D91A  +
push eax  +
call sub_436566  +
pop ecx  +
mov eax [esi+34h] +
cmp eax off_451034 +
jz loc_43D92C  +
push eax  +
call sub_436566  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
mov edi eax +
mov [ebp-4] eax +
mov ebx offset off_451000 +
jmp loc_43DAB3  +
mov eax edi +
jmp loc_43DAF9  +
push ebx  +
call sub_436566  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_43DAF9  +
push 4  +
call sub_4364D4  +
mov edi eax +
push 0  +
mov [ebp-8] edi +
call sub_436566  +
pop ecx  +
pop ecx  +
push ebx  +
test edi edi +
jnz loc_43D9EE  +
call sub_436566  +
pop ecx  +
jmp loc_43DA7A  +
and dword ptr [edi] 0 +
lea eax [ebp-14h] +
mov edi [esi+0B0h] +
push 0Eh  +
push edi  +
push 1  +
push eax  +
call sub_43B974  +
lea ecx [ebx+4] +
mov esi eax +
push ecx  +
push 0Fh  +
push edi  +
lea eax [ebp-14h] +
push 1  +
push eax  +
call sub_43B974  +
or esi eax +
lea eax [ebx+8] +
push eax  +
push 10h  +
push edi  +
lea eax [ebp-14h] +
push 1  +
push eax  +
call sub_43B974  +
or esi eax +
lea eax [ebx+30h] +
push eax  +
push 0Eh  +
push edi  +
lea eax [ebp-14h] +
push 2  +
push eax  +
call sub_43B974  +
add esp 50h +
or esi eax +
lea eax [ebx+34h] +
push eax  +
push 0Fh  +
push edi  +
lea eax [ebp-14h] +
push 2  +
push eax  +
call sub_43B974  +
add esp 14h +
or eax esi +
jz loc_43DA89  +
push ebx  +
call sub_43D8C6  +
push ebx  +
call sub_436566  +
push dword ptr [ebp-8]  +
call sub_436566  +
add esp 0Ch +
or dword ptr [ebp-0Ch] 0FFFFFFFFh +
mov ecx [ebp-4] +
push ecx  +
call sub_436566  +
mov eax [ebp-0Ch] +
pop ecx  +
jmp loc_43DAF9  +
mov edx [ebx+8] +
jmp loc_43DA99  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_43DAFE  +
mov [edx] cl +
inc edx  +
mov al [edx] +
test al al +
jnz loc_43DA8E  +
mov edi [ebp-8] +
mov esi [ebp+8] +
mov ecx [ebp-4] +
xor eax eax +
inc eax  +
mov [ecx] eax +
test edi edi +
jz loc_43DAB3  +
mov [edi] eax +
mov eax [esi+80h] +
test eax eax +
jz loc_43DAC0  +
dec dword ptr [eax]  +
mov ecx [esi+7Ch] +
test ecx ecx +
jz loc_43DAE5  +
or eax 0FFFFFFFFh +
xadd [ecx] eax +
jnz loc_43DAE5  +
push dword ptr [esi+7Ch]  +
call sub_436566  +
push dword ptr [esi+88h]  +
call sub_436566  +
pop ecx  +
pop ecx  +
mov eax [ebp-4] +
mov [esi+7Ch] eax +
xor eax eax +
mov [esi+80h] edi +
mov [esi+88h] ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
cmp al 3Bh +
jnz loc_43DA98  +
mov esi edx +
mov cl [esi+1] +
mov [esi] cl +
lea esi [esi+1] +
test cl cl +
jnz loc_43DB04  +
jmp loc_43DA99  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_43DED3  +
push 7  +
push esi  +
call sub_43DB3E  +
lea eax [esi+1Ch] +
push 7  +
push eax  +
call sub_43DB3E  +
lea eax [esi+38h] +
push 0Ch  +
push eax  +
call sub_43DB3E  +
lea eax [esi+68h] +
push 0Ch  +
push eax  +
call sub_43DB3E  +
lea eax [esi+98h] +
push 2  +
push eax  +
call sub_43DB3E  +
push dword ptr [esi+0A0h]  +
call sub_436566  +
push dword ptr [esi+0A4h]  +
call sub_436566  +
push dword ptr [esi+0A8h]  +
call sub_436566  +
lea eax [esi+0B4h] +
push 7  +
push eax  +
call sub_43DB3E  +
lea eax [esi+0D0h] +
push 7  +
push eax  +
call sub_43DB3E  +
add esp 44h +
lea eax [esi+0ECh] +
push 0Ch  +
push eax  +
call sub_43DB3E  +
lea eax [esi+11Ch] +
push 0Ch  +
push eax  +
call sub_43DB3E  +
lea eax [esi+14Ch] +
push 2  +
push eax  +
call sub_43DB3E  +
push dword ptr [esi+154h]  +
call sub_436566  +
push dword ptr [esi+158h]  +
call sub_436566  +
push dword ptr [esi+15Ch]  +
call sub_436566  +
push dword ptr [esi+160h]  +
call sub_436566  +
add esp 28h +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_43DF7D  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_43DF7D  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jnz loc_43DF93  +
xor eax eax +
mov [edi] ax +
call sub_435431  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_43228E  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov edx edi +
xor esi esi +
cmp [edx] si +
jz loc_43DFA4  +
add edx 2 +
sub ecx 1 +
jnz loc_43DF97  +
test ecx ecx +
jz loc_43DF78  +
sub ebx edx +
movzx eax word ptr [ebx+edx] +
mov [edx] ax +
lea edx [edx+2] +
test ax ax +
jz loc_43DFBE  +
sub ecx 1 +
jnz loc_43DFAA  +
test ecx ecx +
jnz loc_43DF8C  +
xor eax eax +
mov [edi] ax +
call sub_435431  +
push 22h  +
jmp loc_43DF84  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
xor edx edx +
push edi  +
inc edx  +
xor edi edi +
test esi esi +
js loc_43E894  +
push ebx  +
test edx edx +
jz loc_43E893  +
lea eax [edi+esi] +
cdq   +
sub eax edx +
mov ebx eax +
mov eax [ebp+arg_0] +
sar ebx 1 +
imul ecx ebx +
mov [ebp+var_4] ecx +
push dword ptr [ecx+eax]  +
mov eax [ebp+arg_8] +
push dword ptr [eax]  +
call sub_432648  +
mov edx eax +
pop ecx  +
pop ecx  +
test edx edx +
jnz loc_43E885  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
add eax 4 +
add ecx eax +
mov eax [ebp+arg_8] +
mov [eax] ecx +
jmp loc_43E88F  +
jns loc_43E88C  +
lea esi [ebx-1] +
jmp loc_43E88F  +
lea edi [ebx+1] +
cmp edi esi +
jle loc_43E847  +
pop ebx  +
xor eax eax +
test edx edx +
pop edi  +
setz al  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
call sub_436909  +
xor ecx ecx +
xor edx edx +
mov [ebp-8] edx +
lea esi [eax+50h] +
lea eax [esi+250h] +
mov [esi+8] edx +
mov [eax] cx +
lea edi [esi+4] +
mov [ebp-4] eax +
mov ecx ebx +
lea eax [ebx+80h] +
mov [esi] ebx +
mov [edi] eax +
cmp [eax] dx +
jz loc_43E8F2  +
push edi  +
push 16h  +
push offset off_401648  +
call sub_43E832  +
mov ecx [esi] +
add esp 0Ch +
xor edx edx +
push esi  +
cmp [ecx] dx +
jz loc_43E93F  +
mov eax [edi] +
cmp [eax] dx +
jz loc_43E906  +
call sub_43E22A  +
jmp loc_43E90B  +
call sub_43E2C3  +
xor eax eax +
pop ecx  +
cmp [esi+8] eax +
jnz loc_43E945  +
push esi  +
push 40h  +
push offset off_401338  +
call sub_43E832  +
add esp 0Ch +
test eax eax +
jz loc_43E945  +
mov eax [edi] +
xor ecx ecx +
push esi  +
cmp [eax] cx +
jz loc_43E938  +
call sub_43E22A  +
jmp loc_43E944  +
call sub_43E2C3  +
jmp loc_43E944  +
call sub_43E1A3  +
pop ecx  +
xor edi edi +
cmp [esi+8] edi +
jz loc_43EA86  +
lea eax [ebx+100h] +
cmp [ebx] di +
jnz loc_43E968  +
cmp [eax] di +
jnz loc_43E968  +
call ds:GetACP  +
jmp loc_43E971  +
push esi  +
push eax  +
call sub_43E6EF  +
pop ecx  +
pop ecx  +
mov esi eax +
test esi esi +
jz loc_43EA86  +
cmp esi 0FDE8h +
jz loc_43EA86  +
movzx eax si +
push eax  +
call ds:IsValidCodePage  +
test eax eax +
jz loc_43EA86  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_43E9A2  +
mov [eax] esi +
mov edi [ebp+10h] +
test edi edi +
jz loc_43EA81  +
mov ecx [ebp-4] +
lea ebx [edi+120h] +
xor eax eax +
mov [ebx] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-8] +
jnz loc_43E9BE  +
sub ecx edx +
sar ecx 1 +
lea eax [ecx+1] +
push eax  +
push dword ptr [ebp-4]  +
push 55h  +
push ebx  +
call sub_43845F  +
add esp 10h +
test eax eax +
jnz loc_43EA8D  +
push 40h  +
push edi  +
push 1001h  +
push ebx  +
call sub_43AE12  +
test eax eax +
jz loc_43EA86  +
push 40h  +
lea ebx [edi+80h] +
push ebx  +
push 1002h  +
lea eax [edi+120h] +
push eax  +
call sub_43AE12  +
test eax eax +
jz loc_43EA86  +
push 5Fh  +
push ebx  +
call sub_448707  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_43EA38  +
push 2Eh  +
push ebx  +
call sub_448707  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_43EA4D  +
push 40h  +
push ebx  +
push 7  +
lea eax [edi+120h] +
push eax  +
call sub_43AE12  +
test eax eax +
jz loc_43EA86  +
add edi 100h +
cmp esi 0FDE9h +
jnz loc_43EA73  +
push 5  +
push offset aUtf8  +
push 10h  +
push edi  +
call sub_43845F  +
add esp 10h +
test eax eax +
jnz loc_43EA8D  +
jmp loc_43EA81  +
push 0Ah  +
push 10h  +
push edi  +
push esi  +
call sub_4420E4  +
add esp 10h +
xor eax eax +
inc eax  +
jmp loc_43EA88  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_4322BB  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor edx edx +
movzx eax word ptr [ecx] +
add ecx 2 +
cmp ax 41h +
jb loc_43ECA8  +
cmp ax 5Ah +
jbe loc_43ECB1  +
add eax 0FFFFFF9Fh +
cmp ax 19h +
ja loc_43ECB4  +
inc edx  +
jmp loc_43EC96  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0FCh +
mov eax dword_452720 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
call sub_436909  +
mov ebx eax +
call sub_436909  +
push esi  +
mov edi [eax+34Ch] +
call sub_43EFF5  +
pop ecx  +
mov ecx [ebx+64h] +
mov esi eax +
neg ecx  +
lea eax [ebp+LCData] +
push 78h  +
sbb ecx ecx +
and ecx 0FFFFF005h +
push eax  +
add ecx 1002h +
push ecx  +
push esi  +
call ds:GetLocaleInfoW  +
and [ebp+var_F8] 0 +
test eax eax +
jz loc_43EEFD  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+54h]  +
call sub_432648  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_43EDF7  +
push 78h  +
lea eax [ebp+LCData] +
push eax  +
mov eax [ebx+60h] +
neg eax  +
sbb eax eax +
and eax 0FFFFF002h +
add eax 1001h +
push eax  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_43EEFD  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_432648  +
pop ecx  +
pop ecx  +
mov ecx [edi] +
test eax eax +
jnz loc_43ED90  +
or ecx 304h +
mov [edi+4] esi +
mov [edi] ecx +
jmp loc_43EDF4  +
test cl 2 +
jnz loc_43EDF7  +
cmp dword ptr [ebx+5Ch] 0 +
jz loc_43EDDD  +
push dword ptr [ebx+5Ch]  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_43520D  +
add esp 0Ch +
test eax eax +
jnz loc_43EDDD  +
or dword ptr [edi] 2 +
mov [edi+8] esi +
mov ecx [ebx+50h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax word ptr [ebp+var_F8] +
jnz loc_43EDC0  +
sub ecx edx +
sar ecx 1 +
cmp ecx [ebx+5Ch] +
jnz loc_43EDF7  +
mov [edi+4] esi +
jmp loc_43EDF7  +
mov edx [edi] +
test dl 1 +
jnz loc_43EDF7  +
push esi  +
call sub_43F127  +
pop ecx  +
test eax eax +
jz loc_43EDF7  +
or edx 1 +
mov [edi] edx +
mov [edi+8] esi +
mov eax [edi] +
mov ecx 300h +
and eax ecx +
cmp eax ecx +
jz loc_43EEF1  +
push 78h  +
lea eax [ebp+LCData] +
push eax  +
mov eax [ebx+60h] +
neg eax  +
sbb eax eax +
and eax 0FFFFF002h +
add eax 1001h +
push eax  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_43EEFD  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_432648  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_43EEB1  +
mov ecx [edi] +
or ecx 200h +
mov [edi] ecx +
cmp [ebx+60h] eax +
jz loc_43EE66  +
or ecx 100h +
mov [edi] ecx +
cmp [edi+4] eax +
jmp loc_43EEEC  +
cmp [ebx+5Ch] eax +
jz loc_43EE56  +
mov edx [ebx+50h] +
lea eax [edx+2] +
mov [ebp+var_FC] eax +
mov ax [edx] +
add edx 2 +
cmp ax word ptr [ebp+var_F8] +
jnz loc_43EE77  +
sub edx [ebp+var_FC] +
sar edx 1 +
cmp edx [ebx+5Ch] +
jnz loc_43EEAD  +
push edi  +
push 1  +
push esi  +
call sub_43F14C  +
add esp 0Ch +
test eax eax +
jz loc_43EEF1  +
or dword ptr [edi] 100h +
xor eax eax +
jmp loc_43EE5E  +
xor eax eax +
jmp loc_43EE56  +
xor eax eax +
cmp [ebx+60h] eax +
jnz loc_43EEF1  +
cmp [ebx+5Ch] eax +
jz loc_43EEF1  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_432648  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_43EEF1  +
push edi  +
xor ebx ebx +
push ebx  +
push esi  +
call sub_43F14C  +
add esp 0Ch +
test eax eax +
jz loc_43EEF1  +
or dword ptr [edi] 100h +
cmp [edi+4] ebx +
jnz loc_43EEF1  +
mov [edi+4] esi +
mov eax [edi] +
shr eax 2 +
not eax  +
and eax 1 +
jmp loc_43EF02  +
xor eax eax +
mov [edi] eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44503A  +
leave   +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
call sub_445910  +
mov eax [ebp+10h] +
call sub_445910  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_452720 +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_452DB8 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
mov eax [ebp+10h] +
call sub_445910  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
lea eax [ebp+arg_0] +
mov [ebp+var_14] eax +
lea ecx [ebp-1] +
push 2  +
lea eax [ebp+arg_4] +
mov [ebp+var_10] eax +
pop eax  +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_441CA4  +
leave   +
retn   +
***
call sub_43D060  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_442340  +
pop ecx  +
test eax eax +
jnz loc_4423F0  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_44235D  +
pop ecx  +
test eax eax +
jnz loc_4423F0  +
call sub_44371E  +
xor eax eax +
leave   +
retn   +
xor eax eax +
inc eax  +
leave   +
retn   +
***
cmp dword_453728 0 +
jz loc_44243B  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_442430  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_44243B  +
jmp sub_443BB0  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_444338  +
call sub_442458  +
add esp 0Ch +
retn   +
***
jz loc_4424AB  +
cmp dword_453728 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
pop ecx  +
call sub_445910  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword_452DEC 0 +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
jmp loc_4435EA  +
mov ecx [ebp+arg_0] +
push esi  +
call ds:off_454218  +
call [ebp+arg_0]  +
pop ecx  +
add esi 4 +
cmp esi edi +
jnz loc_4435D9  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp eax dword_452DF4 +
jz loc_443619  +
push eax  +
call sub_44359C  +
pop ecx  +
pop ebp  +
retn   +
***
call sub_4435CB  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov edx ecx +
shr edx 4 +
and edx 1 +
mov eax edx +
test cl 8 +
jz loc_443B1A  +
or edx 4 +
movzx eax dx +
test cl 4 +
jz loc_443B22  +
or eax 8 +
test cl 2 +
jz loc_443B2A  +
or eax 10h +
test cl 1 +
jz loc_443B32  +
or eax 20h +
test ecx 80000h +
jz loc_443B3D  +
or eax 2 +
push esi  +
mov edx ecx +
mov esi 300h +
push edi  +
mov edi 200h +
and edx esi +
jz loc_443B72  +
cmp edx 100h +
jz loc_443B6D  +
cmp edx edi +
jz loc_443B66  +
cmp edx esi +
jnz loc_443B72  +
or eax 0C00h +
jmp loc_443B72  +
or eax 800h +
jmp loc_443B72  +
or eax 400h +
mov edx ecx +
and edx 30000h +
jz loc_443B88  +
cmp edx 10000h +
jnz loc_443B8A  +
or eax edi +
jmp loc_443B8A  +
or eax esi +
pop edi  +
pop esi  +
test ecx 40000h +
jz loc_443B99  +
or eax 1000h +
pop ebp  +
retn   +
***
mov dword_453728 eax +
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_443BCE  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_40B660 +
movapd xmm2 oword ptr ds:oword_40B670 +
movapd xmm3 oword ptr ds:oword_40B6D0 +
movapd xmm4 oword ptr ds:oword_40B680 +
movapd xmm6 oword ptr ds:oword_40B690 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_40BC00[eax] +
movapd xmm7 oword ptr ds:oword_40B7F0[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_443D26  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_40B720 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_40B730 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_40B740 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_40B6A0 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_40B6B0[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_40B750 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_40B6E0 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_443D8B  +
cmp ecx 0FFFFFFFFh +
jz loc_443DA6  +
cmp ecx 7FEh +
ja loc_443DBC  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_40B660 +
movapd xmm2 oword ptr ds:oword_40B6D0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_443D84  +
fld  ds:dbl_40B708 +
retn   +
mov edx 3E9h +
jmp loc_443DDA  +
movlpd xmm2 oword ptr ds:oword_40B6D0 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:byte_40B700 +
mov edx 8 +
jmp loc_443DDA  +
movlpd xmm1 oword ptr ds:oword_40B6F0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_443BD3  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_443E07  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_444493  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_443DCD  +
mov edx 3E9h +
jmp loc_443DDA  +
***
lea esp [esp+0] +
jmp loc_443E40  +
mov byte ptr [ebp-90h] 0FEh +
or ch ch +
jnz loc_443E95  +
fxch  st(1) +
fyl2x   +
jmp loc_443E6D  +
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_443F9D  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_443E83  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_443E8A  +
fscale   +
or ch ch +
jz loc_443E90  +
fchs   +
jmp loc_444164  +
***
call sub_443FE0  +
or eax eax +
jz loc_443EB2  +
xor ch ch +
cmp eax 2 +
jz loc_443EA7  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_443E4D  +
***
jmp loc_44419D  +
***
jmp loc_444260  +
***
fstp  st +
fstp  st +
fld  tbyte ptr ds:dword_40259C+4 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_443EB2  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_4025AA +
retn   +
***
or cl cl +
jnz loc_443F4A  +
retn   +
***
fldlg2   +
jmp loc_443EFE  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_443EB2  +
fyl2x   +
retn   +
***
jmp loc_44419D  +
***
call sub_443FE0  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_443F27  +
fldz   +
cmp eax 1 +
jnz locret_443F26  +
or ch ch +
jz locret_443F26  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  tbyte ptr ds:dword_40259C+4 +
cmp eax 1 +
jnz locret_443F26  +
or ch ch +
jz locret_443F26  +
fchs   +
jmp locret_443F26  +
***
fstp  st +
jmp loc_44418A  +
***
fstp  st +
jmp loc_444262  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_443F72  +
fstp  st +
fld  tbyte ptr ds:dword_40259C+4 +
or ch ch +
jz locret_443F71  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_44418A  +
***
fstp  st +
fstp  st +
fld  tbyte ptr ds:dword_40259C+4 +
mov byte ptr [ebp-90h] 3 +
retn   +
***
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_444006  +
fld  st +
fmul  qword ptr ds:dword_4025C4+0Eh +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_44400D  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_444005  +
mov eax 2 +
jmp locret_444005  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_444A80  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_444045  +
jmp sub_444273  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_444067  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_44406B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx (offset dword_40B78C+2) +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_454218  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_4440DC  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_4440E0  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx (offset dword_40B78C+2) +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_454218  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
call sub_444273  +
fxch  st(1) +
lea esp [esp+0] +
lea ecx [ecx+0] +
fstp  st +
lea esp [esp+0] +
lea esp [esp+0] +
retn   +
***
call sub_444273  +
jmp loc_444170  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_44419C  +
fchs   +
retn   +
***
fstp  st +
nop   +
fstp  st +
fld1   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4441CD  +
mov byte ptr [ebp-90h] 0 +
retn   +
***
mov byte ptr [ebp-90h] 0 +
fadd  qword ptr ds:dword_40B76C+12h +
retn   +
***
jmp loc_4441E0  +
fxch  st(1) +
lea esp [esp+0] +
lea esp [esp+0] +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_44420E  +
mov byte ptr [ebp-90h] 0 +
jmp loc_444215  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_444255  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_444255  +
mov byte ptr [ebp-90h] 0 +
jmp loc_44425C  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  tbyte ptr ds:dword_40B76C+8 +
or ch ch +
jz loc_444290  +
fchs   +
or cl cl +
jz locret_44429C  +
fld  qword ptr ds:dword_40B784+2 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_4442A3  +
fchs   +
retn   +
***
fld  st +
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_444349  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_444359  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_444383  +
and ax 20h +
jz loc_444380  +
fstsw  ax +
and ax 20h +
jz loc_444380  +
mov eax 8 +
call sub_444457  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  [esp+8+var_8] +
mov eax dword ptr [esp+8+var_8+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_4443EA  +
cmp eax 7FF00000h +
jz loc_444413  +
mov ax [esp+0] +
cmp ax 27Fh +
jz loc_4443E8  +
and ax 20h +
jnz loc_4443E5  +
fstsw  ax +
and ax 20h +
jz loc_4443E5  +
mov eax 8 +
cmp edx 1Dh +
jz loc_4443DE  +
call sub_444457  +
pop edx  +
retn   +
call sub_444440  +
pop edx  +
retn   +
fldcw  word ptr [esp+0] +
pop edx  +
retn   +
fld  qword ptr ds:dword_40B7C8+4 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  qword ptr ds:dword_40B7AC+10h +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_4443D2  +
fmul  qword ptr ds:dword_40B7D8+4 +
jmp loc_4443D2  +
fld  qword ptr ds:dword_40B7C0+4 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  qword ptr ds:dword_40B7AC+8 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_4443D2  +
fmul  qword ptr ds:dword_40B7D0+4 +
jmp loc_4443D2  +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
cmp dword_452DFC 0 +
push esi  +
push edi  +
jz loc_4444B6  +
push dword_453724  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_4444BB  +
mov edi offset sub_441360 +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_4445A5  +
jz loc_444599  +
cmp eax 0Eh +
jg loc_444537  +
jz loc_444524  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_444515  +
sub eax 1 +
jz loc_444509  +
sub eax 5 +
jz loc_4444FA  +
sub eax 1 +
jnz loc_444683  +
mov [ebp+var_1C] offset aLog10_0 +
jmp loc_4445FB  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] offset aLog10_0 +
jmp loc_444648  +
mov [ebp+var_1C] offset aLog +
jmp loc_4445FB  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] offset aLog +
jmp loc_444648  +
mov [ebp+var_20] 3 +
mov [ebp+var_1C] offset aExp +
jmp loc_444648  +
sub eax 0Fh +
jz loc_444590  +
sub eax 9 +
jz loc_444584  +
sub eax 1 +
jnz loc_444683  +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_20] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_454218  +
call edi  +
pop ecx  +
jmp loc_44467E  +
mov [ebp+var_20] 3 +
jmp loc_444641  +
mov [ebp+var_1C] offset aExp +
jmp loc_444551  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_444683  +
sub eax 1Bh +
jz loc_44463A  +
sub eax 1 +
jz loc_4445F4  +
sub eax 15h +
jz loc_4445EB  +
sub eax 9 +
jz loc_4445E2  +
sub eax 3 +
jz loc_4445D9  +
sub eax 3ABh +
jz loc_4445D2  +
sub eax 1 +
jnz loc_444683  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_44459B  +
mov [ebp+var_1C] offset aAsin +
jmp loc_4445FB  +
mov [ebp+var_1C] offset aAcos +
jmp loc_4445FB  +
mov [ebp+var_1C] offset aSqrt +
jmp loc_4445FB  +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_20] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_454218  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_44467E  +
call sub_435431  +
mov dword ptr [eax] 21h +
jmp loc_44467E  +
mov [ebp+var_20] 2 +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_454218  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_44467E  +
call sub_435431  +
mov dword ptr [eax] 22h +
fld  [ebp+var_8] +
fstp  qword ptr [esi] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
call sub_445910  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov ecx hObject +
cmp ecx 0FFFFFFFEh +
jnz loc_444CFE  +
call sub_444CC9  +
mov ecx hObject +
xor eax eax +
cmp ecx 0FFFFFFFFh +
setnz al  +
retn   +
***
mov eax hObject +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+lpNumberOfCharsWritten]  +
push [ebp+nNumberOfCharsToWrite]  +
push [ebp+lpBuffer]  +
push hObject  +
call ds:WriteConsoleW  +
mov esi eax +
test esi esi +
jnz loc_444D77  +
call ds:GetLastError  +
cmp eax 6 +
jnz loc_444D77  +
call sub_444D10  +
call sub_444CC9  +
push esi  +
push [ebp+lpNumberOfCharsWritten]  +
push [ebp+nNumberOfCharsToWrite]  +
push [ebp+lpBuffer]  +
push hObject  +
call ds:WriteConsoleW  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
mov ecx [ebp+10h] +
or ecx ecx +
jz loc_444DDA  +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
mov bh 41h +
mov bl 5Ah +
mov dh 20h +
lea ecx [ecx+0] +
mov ah [esi] +
or ah ah +
mov al [edi] +
jz loc_444DCB  +
or al al +
jz loc_444DCB  +
add esi 1 +
add edi 1 +
cmp ah bh +
jb loc_444DB8  +
cmp ah bl +
ja loc_444DB8  +
add ah dh +
cmp al bh +
jb loc_444DC2  +
cmp al bl +
ja loc_444DC2  +
add al dh +
cmp ah al +
jnz loc_444DD1  +
sub ecx 1 +
jnz loc_444D9C  +
xor ecx ecx +
cmp ah al +
jz loc_444DDA  +
mov ecx 0FFFFFFFFh +
jb loc_444DDA  +
neg ecx  +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push 2  +
call sub_44332B  +
call sub_445F8C  +
push eax  +
call sub_449E90  +
call sub_425BE0  +
mov esi eax +
call sub_449ECD  +
push 1  +
mov [eax] esi +
call sub_445132  +
add esp 0Ch +
pop esi  +
test al al +
jz loc_444E81  +
fnclex   +
call sub_445FCC  +
push offset loc_446000  +
call sub_4452EA  +
call sub_445F88  +
push eax  +
call sub_449E3B  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_444E81  +
call sub_445F92  +
call nullsub_1  +
call nullsub_1  +
call sub_445ECD  +
call sub_425BE0  +
push eax  +
call loc_437177  +
pop ecx  +
call sub_445FA0  +
test al al +
jz loc_444E72  +
call sub_443672  +
call sub_425BE0  +
call sub_44570B  +
test eax eax +
jnz loc_444E81  +
retn   +
***
push 7  +
call sub_4455BB  +
call sub_445FA3  +
xor eax eax +
retn   +
***
pop ecx  +
retn   +
***
push 14h  +
push offset dword_44FD60  +
call sub_445910  +
push 1  +
call sub_4450F7  +
pop ecx  +
test al al +
jz loc_445018  +
xor bl bl +
mov [ebp-19h] bl +
and dword ptr [ebp-4] 0 +
call sub_4450C3  +
mov [ebp-24h] al +
mov eax dword_452E00 +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_445018  +
test eax eax +
jnz loc_444F3C  +
mov dword_452E00 ecx +
push offset dword_407038  +
push offset dword_407008  +
call sub_441C1B  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_444F1F  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_445008  +
push offset dword_407004  +
push offset dword_406FB4  +
call sub_441BD6  +
pop ecx  +
pop ecx  +
mov dword_452E00 2 +
jmp loc_444F41  +
mov bl cl +
mov [ebp-19h] bl +
push dword ptr [ebp-24h]  +
call sub_445264  +
pop ecx  +
call sub_445FC0  +
mov esi eax +
xor edi edi +
cmp [esi] edi +
jz loc_444F72  +
push esi  +
call sub_4451D0  +
pop ecx  +
test al al +
jz loc_444F72  +
mov esi [esi] +
push edi  +
push 2  +
push edi  +
mov ecx esi +
call ds:off_454218  +
call esi  +
call sub_445FC6  +
mov esi eax +
cmp [esi] edi +
jz loc_444F90  +
push esi  +
call sub_4451D0  +
pop ecx  +
test al al +
jz loc_444F90  +
push dword ptr [esi]  +
call sub_43C22E  +
pop ecx  +
call sub_4456D8  +
movzx esi ax +
call sub_449E46  +
push esi  +
push eax  +
push edi  +
push 400000h  +
call sub_421525  +
mov esi eax +
call sub_43C155  +
test al al +
jz loc_44501F  +
test bl bl +
jnz loc_444FBE  +
call sub_43C209  +
push edi  +
push 1  +
call sub_445283  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax esi +
jmp loc_445008  +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push 7  +
call sub_4455BB  +
push esi  +
call sub_43C254  +
push dword ptr [ebp-20h]  +
call sub_43C218  +
***
call sub_445F3D  +
cmp ecx dword_452720 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445910  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44D965  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_452720 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_44504B  +
pop ecx  +
jmp loc_44535D  +
mov eax offset loc_44535B +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:IsDebuggerPresent  +
push 1  +
mov dword_453144 eax +
call sub_445763  +
pop ecx  +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push [ebp+ExceptionInfo]  +
call ds:UnhandledExceptionFilter  +
cmp dword_453144 0 +
jnz loc_4453CC  +
push 1  +
call sub_445763  +
pop ecx  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:SetUnhandledExceptionFilter  +
retn   +
***
xor eax eax +
pop ebp  +
retn 4  +
***
and dword_453148 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
and dword_45314C 0 +
sub esp 24h +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_452728 ebx +
push 0Ah  +
call ds:IsProcessorFeaturePresent  +
test eax eax +
jz loc_445903  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
or dword_452728 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_45314C ebx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
nop   +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-20h] +
mov [ebp-0Ch] eax +
xor edi 756E6547h +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-1Ch] +
xor eax 6C65746Eh +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
nop   +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
or eax [ebp-8] +
or eax edi +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_44584C  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_44583B  +
cmp eax 20660h +
jz loc_44583B  +
cmp eax 20670h +
jz loc_44583B  +
cmp eax 30650h +
jz loc_44583B  +
cmp eax 30660h +
jz loc_44583B  +
cmp eax 30670h +
jnz loc_44584C  +
mov edi dword_453150 +
or edi 1 +
mov dword_453150 edi +
jmp loc_445852  +
mov edi dword_453150 +
cmp dword ptr [ebp-0Ch] 7 +
mov eax [ebp-1Ch] +
mov [ebp-4] eax +
jl loc_445891  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
nop   +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_445894  +
or edi 2 +
mov dword_453150 edi +
jmp loc_445894  +
mov ebx [ebp-10h] +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_445903  +
or dword_452728 4 +
mov dword_45314C 2 +
test eax 8000000h +
jz loc_445903  +
test eax 10000000h +
jz loc_445903  +
xor ecx ecx +
mov eax cs:dword_452728 +
or eax 8 +
mov dword_45314C 3 +
mov dword_452728 eax +
test bl 20h +
jz loc_445903  +
or eax 20h +
mov dword_45314C 5 +
mov dword_452728 eax +
xor eax eax +
pop ebx  +
leave   +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_452720 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
or eax eax +
jnz loc_4459A1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_4459E8  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_4459AF  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_4459DD  +
cmp edx [esp+arg_4] +
ja loc_4459DD  +
jb loc_4459E6  +
cmp eax [esp+arg_0] +
jbe loc_4459E6  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_445EA0  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_445EA0  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_445A61  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_445A7D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_445A99  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_445ADA  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_445AA7  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_445AD5  +
cmp edx [esp+arg_4] +
ja loc_445AD5  +
jb loc_445AD6  +
cmp eax [esp+arg_0] +
jbe loc_445AD6  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_445AE4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_445B14  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_445B30  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_445B5C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_445BA3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_445B6A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_445B98  +
cmp edx [esp+arg_4] +
ja loc_445B98  +
jb loc_445BA1  +
cmp eax [esp+arg_0] +
jbe loc_445BA1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_445BB5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_445BC9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
push ebx  +
push edi  +
xor edi edi +
mov eax [esp+10h] +
or eax eax +
jge loc_445BF0  +
inc edi  +
mov edx [esp+0Ch] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+10h] eax +
mov [esp+0Ch] edx +
mov eax [esp+18h] +
or eax eax +
jge loc_445C0B  +
mov edx [esp+14h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+18h] eax +
mov [esp+14h] edx +
or eax eax +
jnz loc_445C2A  +
mov ecx [esp+14h] +
mov eax [esp+10h] +
xor edx edx +
div  ecx +
mov eax [esp+0Ch] +
div  ecx +
mov eax edx +
xor edx edx +
dec edi  +
jns loc_445C76  +
jmp loc_445C7D  +
mov ebx eax +
mov ecx [esp+14h] +
mov edx [esp+10h] +
mov eax [esp+0Ch] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_445C38  +
div  ecx +
mov ecx eax +
mul  dword ptr [esp+18h] +
xchg eax ecx +
mul  dword ptr [esp+14h] +
add edx ecx +
jb loc_445C63  +
cmp edx [esp+10h] +
ja loc_445C63  +
jb loc_445C6B  +
cmp eax [esp+0Ch] +
jbe loc_445C6B  +
sub eax [esp+14h] +
sbb edx [esp+18h] +
sub eax [esp+0Ch] +
sbb edx [esp+10h] +
dec edi  +
jns loc_445C7D  +
neg edx  +
neg eax  +
sbb edx 0 +
pop edi  +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_445CA9  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
cmp cl 40h +
jnb loc_445CEA  +
cmp cl 20h +
jnb loc_445CE0  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
mov ecx [ebp-0Ch] +
mov ecx [ebp-10h] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_452720 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
cmp dword_45314C 0 +
jz loc_445E20  +
push ebp  +
mov ebp esp +
sub esp 8 +
and esp 0FFFFFFF8h +
fstp  [esp+0Ch+var_C] +
cvttsd2si eax [esp+0Ch+var_C] +
leave   +
retn   +
cmp dword_45314C 0 +
jz loc_445E20  +
sub esp 4 +
fnstcw  word ptr [esp] +
pop eax  +
and ax 7Fh +
cmp ax 7Fh +
jz loc_445DE9  +
lea esp [esp+0] +
lea ecx [ecx+0] +
push ebp  +
mov ebp esp +
sub esp 20h +
and esp 0FFFFFFF0h +
fld  st +
fst  [esp+24h+var_C] +
fistp  [esp+24h+var_14] +
fild  [esp+24h+var_14] +
mov edx dword ptr [esp+24h+var_C+4] +
mov eax dword ptr [esp+24h+var_14] +
test eax eax +
jz loc_445E7F  +
fsubp st(1) st +
test edx edx +
jns loc_445E67  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
xor ecx 80000000h +
add ecx 7FFFFFFFh +
adc eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
adc edx 0 +
jmp locret_445E93  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
add ecx 7FFFFFFFh +
sbb eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
sbb edx 0 +
jmp locret_445E93  +
mov edx dword ptr [esp+24h+var_14+4] +
test edx 7FFFFFFFh +
jnz loc_445E43  +
fstp  dword ptr [esp+24h+var_C] +
fstp  dword ptr [esp+24h+var_C] +
leave   +
retn   +
***
sub ecx eax +
push 0  +
mov edi edi +
mov ecx dword_452720 +
retn   +
***
call sub_42230E  +
mov edi edi +
push ebx  +
push esi  +
mov esi (offset dword_420BFC+28h) +
mov ebx (offset dword_420BFC+28h) +
cmp esi ebx +
jnb loc_445FF7  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_445FEF  +
mov ecx edi +
call ds:off_454218  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_445FDF  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi (offset dword_420BFC+30h) +
mov ebx (offset dword_420BFC+30h) +
cmp esi ebx +
jnb loc_44602B  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_446023  +
mov ecx edi +
call ds:off_454218  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_446013  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
and dword ptr [ecx+4] 0 +
mov eax ecx +
and dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] offset aBadArrayNewLen +
mov dword ptr [ecx] offset off_402628 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+4] +
mov dword ptr [esi] offset off_402610 +
push eax  +
call sub_44663A  +
test byte ptr [ebp+8] 1 +
pop ecx  +
jz loc_446095  +
push esi  +
call sub_445311  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
call sub_448A1E  +
mov esi [ebp+arg_0] +
cmp esi [eax+24h] +
jnz loc_446382  +
mov esi [esi+4] +
call sub_448A1E  +
mov [eax+24h] esi +
pop esi  +
pop ebp  +
retn   +
call sub_448A1E  +
mov ecx [eax+24h] +
add ecx 4 +
jmp loc_446396  +
cmp esi eax +
jz loc_44639E  +
lea ecx [eax+4] +
mov eax [ecx] +
test eax eax +
jz loc_4463A5  +
jmp loc_44638F  +
mov eax [esi+4] +
mov [ecx] eax +
jmp loc_44637F  +
call sub_434E7C  +
int 3  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
cld   +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
xor ecx [ebp+arg_4] +
call sub_44503A  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 66h +
jz loc_4463DD  +
mov eax [ebp+arg_4] +
mov dword ptr [eax+24h] 1 +
xor eax eax +
inc eax  +
jmp loc_446447  +
jmp loc_446447  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+18h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+14h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push [ebp+arg_0]  +
call sub_449301  +
add esp 20h +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+24h] 0 +
jnz loc_44641B  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_4462B3  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 123h  +
call sub_446199  +
add esp 1Ch +
mov eax [ebp+var_4] +
mov ebx [ebp+arg_4] +
mov esp [ebx+1Ch] +
mov ebp [ebx+20h] +
jmp eax  +
xor eax eax +
inc eax  +
pop ebx  +
leave   +
retn   +
***
call sub_445910  +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push esi  +
mov eax [ecx] +
mov esi [ecx+4] +
add eax edx +
test esi esi +
js loc_44657B  +
mov ecx [ecx+8] +
mov edx [esi+edx] +
mov ecx [edx+ecx] +
add ecx esi +
add eax ecx +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E0434352h +
jz loc_4465AE  +
cmp dword ptr [eax] 0E0434F4Dh +
jz loc_4465AE  +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_4465C1  +
call sub_448A1E  +
and dword ptr [eax+18h] 0 +
jmp sub_434E7C  +
***
call sub_448A1E  +
cmp dword ptr [eax+18h] 0 +
jle loc_4465C1  +
call sub_448A1E  +
dec dword ptr [eax+18h]  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+4] 0 +
jz loc_446651  +
push dword ptr [esi]  +
call sub_4350A9  +
pop ecx  +
and dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
pop esi  +
pop ebp  +
retn   +
***
mov edx dword_45318C +
nop   +
mov eax dword_452720 +
mov ecx eax +
and ecx 1Fh +
xor eax edx +
ror eax cl +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_4466C1  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_44503A  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_44503A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov byte ptr [ebp-1] 0 +
push dword ptr [ebx]  +
mov dword ptr [ebp-0Ch] 1 +
call sub_44B17E  +
mov [ebx] eax +
mov ebx [ebp+0Ch] +
mov eax [ebx+8] +
lea esi [ebx+10h] +
xor eax dword_452720 +
push esi  +
push eax  +
mov [ebp-10h] esi +
mov [ebp-8] eax +
call sub_4466A0  +
push dword ptr [ebp+10h]  +
call sub_4498BC  +
mov eax [ebp+8] +
add esp 10h +
mov edi [ebx+0Ch] +
test byte ptr [eax+4] 66h +
jnz loc_446796  +
mov [ebp-1Ch] eax +
mov eax [ebp+10h] +
mov [ebp-18h] eax +
lea eax [ebp-1Ch] +
mov [ebx-4] eax +
cmp edi 0FFFFFFFEh +
jz loc_4467B9  +
lea esp [esp+0] +
mov ecx [ebp-8] +
lea eax [edi+2] +
lea eax [edi+eax*2] +
mov ebx [ecx+eax*4] +
lea eax [ecx+eax*4] +
mov ecx [eax+4] +
mov [ebp-14h] eax +
test ecx ecx +
jz loc_44677D  +
mov edx esi +
call sub_4486A0  +
mov cl 1 +
mov [ebp-1] cl +
test eax eax +
js loc_44678D  +
jg loc_4467C3  +
jmp loc_446780  +
mov cl [ebp-1] +
mov edi ebx +
cmp ebx 0FFFFFFFEh +
jnz loc_446750  +
test cl cl +
jz loc_4467B9  +
jmp loc_4467AD  +
mov dword ptr [ebp-0Ch] 0 +
jmp loc_4467AD  +
cmp edi 0FFFFFFFEh +
jz loc_4467B9  +
push offset dword_452720  +
push esi  +
mov edx 0FFFFFFFEh +
mov ecx ebx +
call sub_4486F0  +
push esi  +
push dword ptr [ebp-8]  +
call sub_4466A0  +
add esp 8 +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_446806  +
cmp ds:off_402630 0 +
jz loc_446806  +
push offset off_402630  +
call sub_44AD00  +
add esp 4 +
test eax eax +
jz loc_446803  +
mov esi ds:off_402630 +
mov ecx esi +
push 1  +
push dword ptr [ebp+8]  +
call ds:off_454218  +
call esi  +
mov esi [ebp-10h] +
add esp 8 +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov edx eax +
call sub_4486D4  +
mov eax [ebp+0Ch] +
cmp [eax+0Ch] edi +
jz loc_44682A  +
push offset dword_452720  +
push esi  +
mov edx edi +
mov ecx eax +
call sub_4486F0  +
mov eax [ebp+0Ch] +
push esi  +
push dword ptr [ebp-8]  +
mov [eax+0Ch] ebx +
call sub_4466A0  +
mov ecx [ebp-14h] +
add esp 8 +
mov edx esi +
mov ecx [ecx+8] +
call sub_4486B8  +
push ebp  +
mov ebp esp +
push edi  +
cmp dword_45314C 1 +
jb loc_44695E  +
mov edi [ebp+8] +
ja loc_4468DD  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_4468BD  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_44688D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_44691E  +
xor eax eax +
test edi 0Fh +
jz loc_446904  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_44691B  +
inc edi  +
test edi 0Fh +
jnz loc_4468EF  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_446957  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_446943  +
bsf edx edi +
add eax edx +
jmp loc_44691B  +
***
call sub_448ABB  +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz locret_44699A  +
cmp [ecx+18h] eax +
setnle al  +
retn   +
***
mov ecx [esp+arg_8] +
movzx eax [esp+arg_4] +
mov edx edi +
mov edi [esp+arg_0] +
test ecx ecx +
jz loc_446AF3  +
imul eax eax +
cmp ecx 20h +
jbe loc_446AA5  +
cmp ecx 80h +
jb loc_446A5D  +
bt dword_453150 1 +
jnb loc_4469E5  +
stos   +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
bt dword_452728 1 +
jnb loc_446AA5  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
add ecx edi +
movups oword ptr [edi] xmm0 +
add edi 10h +
and edi 0FFFFFFF0h +
sub ecx edi +
cmp ecx 80h +
jbe loc_446A5D  +
lea esp [esp+0] +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
sub ecx 80h +
test ecx 0FFFFFF00h +
jnz loc_446A20  +
jmp loc_446A70  +
bt dword_452728 1 +
jnb loc_446AA5  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
cmp ecx 20h +
jb loc_446A91  +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
add edi 20h +
sub ecx 20h +
cmp ecx 20h +
jnb loc_446A75  +
test ecx 1Fh +
jz loc_446AF3  +
lea edi [edi+ecx-20h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
test ecx 3 +
jz loc_446ABB  +
mov [edi] al +
inc edi  +
sub ecx 1 +
test ecx 3 +
jnz loc_446AAD  +
test ecx 4 +
jz loc_446ACB  +
mov [edi] eax +
add edi 4 +
sub ecx 4 +
test ecx 0FFFFFFF8h +
jz loc_446AF3  +
lea esp [esp+0] +
lea ebx [ebx+0] +
mov [edi] eax +
mov [edi+4] eax +
add edi 8 +
sub ecx 8 +
test ecx 0FFFFFFF8h +
jnz loc_446AE0  +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_446B20  +
cmp edi eax +
jb loc_446DB4  +
cmp ecx 20h +
jb loc_446FFB  +
cmp ecx 80h +
jnb loc_446B44  +
bt dword_452728 1 +
jb loc_446FCD  +
jmp loc_446D27  +
bt dword_453150 1 +
jnb loc_446B57  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_446B70  +
bt dword_452728 1 +
jb loc_446F50  +
bt dword_453150 0 +
jnb loc_446D27  +
test edi 3 +
jnz loc_446D27  +
test esi 3 +
jnz loc_446D42  +
bt edi 2 +
jnb loc_446BA9  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_446BC0  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_446C2D  +
bt esi 3 +
jnb loc_446C86  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_446CDC  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_446CF4  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_446CDC  +
***
bt ecx 2 +
jnb loc_446D07  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_446D1E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_446D64[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_446D42  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_446D2F  +
mov edx ecx +
cmp ecx 20h +
jb loc_446FFB  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_446D64[edx*4]  +
jmp dword ptr ds:loc_446D74[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_446F14  +
bt dword_452728 1 +
jb loc_446E65  +
test edi 3 +
jz loc_446DED  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_446DE0  +
cmp ecx 20h +
jb loc_446F14  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_446E10[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_446E7C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_446E6D  +
cmp ecx 80h +
jb loc_446EEC  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_446E7C  +
cmp ecx 20h +
jb loc_446F14  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_446EF1  +
test ecx 0FFFFFFFCh +
jz loc_446F31  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_446F1C  +
test ecx ecx +
jz loc_446F44  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_446F35  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_446FCD  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_446F70  +
test ecx ecx +
jz loc_447030  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_446FFB  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_446FE0  +
and ecx 1Fh +
jz loc_447030  +
mov eax ecx +
shr ecx 2 +
jz loc_447016  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_447007  +
mov ecx eax +
and ecx 3 +
jz loc_447030  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_44701D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_447F93  +
sub eax 1 +
jz loc_447F85  +
sub eax 1 +
jz loc_447F6B  +
sub eax 1 +
jz loc_447F3F  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_447EEC  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_4473D4  +
mov eax [esi] +
cmp eax [edx] +
jz loc_447111  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jnz loc_4470E5  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jnz loc_4470E5  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_4470F5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447113  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_447113  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447113  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_447172  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jnz loc_447146  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jnz loc_447146  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_447156  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447174  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_447174  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447174  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_4471D3  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jnz loc_4471A7  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jnz loc_4471A7  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_4471B7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4471D5  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_4471D5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4471D5  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_447234  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jnz loc_447208  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jnz loc_447208  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_447218  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447236  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_447236  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447236  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_447296  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jnz loc_44726A  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jnz loc_44726A  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_44727A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447298  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_447298  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447298  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_4472F7  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jnz loc_4472CB  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jnz loc_4472CB  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_4472DB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4472F9  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_4472F9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4472F9  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_447358  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jnz loc_44732C  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jnz loc_44732C  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_44733C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_44735A  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_44735A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44735A  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_4473B9  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jnz loc_44738D  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jnz loc_44738D  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_44739D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4473BB  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_4473BB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4473BB  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_4470BD  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_447688  +
jmp ds:off_447F9C[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_44743F  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_447413  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_447413  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_447423  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447441  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_447441  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447441  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_4474A0  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_447474  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_447474  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_447484  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4474A2  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_4474A2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4474A2  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_447501  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_4474D5  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_4474D5  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_4474E5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447503  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_447503  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447503  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_447562  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_447536  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jnz loc_447536  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_447546  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447564  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_447564  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447564  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_4475C4  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jnz loc_447598  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_447598  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_4475A8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4475C6  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_4475C6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4475C6  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_447625  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_4475F9  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_4475F9  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_447609  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447627  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_447627  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447627  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_447682  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_447656  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_447656  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_447666  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447684  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_447684  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447684  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_447F95  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_4476E9  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_4476BD  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_4476BD  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_4476CD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4476EB  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_4476EB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4476EB  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_447746  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_44771A  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_44771A  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_44772A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447748  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_447748  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447748  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_4477A7  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_44777B  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_44777B  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_44778B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4477A9  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_4477A9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4477A9  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_447808  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_4477DC  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_4477DC  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_4477EC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_44780A  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_44780A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44780A  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_447869  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_44783D  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jnz loc_44783D  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_44784D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_44786B  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_44786B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44786B  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_4478CB  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_44789F  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_44789F  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_4478AF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4478CD  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_4478CD  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4478CD  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_44792C  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_447900  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_447900  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_447910  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_44792E  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_44792E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44792E  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_44768A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44768A  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_4479B0  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_447984  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_447984  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_447994  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4479B2  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_4479B2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4479B2  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_447A11  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_4479E5  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_4479E5  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_4479F5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447A13  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_447A13  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447A13  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_447A72  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_447A46  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_447A46  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_447A56  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447A74  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_447A74  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447A74  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_447AD3  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_447AA7  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_447AA7  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_447AB7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447AD5  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_447AD5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447AD5  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_447B34  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_447B08  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_447B08  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_447B18  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447B36  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_447B36  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447B36  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_447B96  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jnz loc_447B6A  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_447B6A  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_447B7A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447B98  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_447B98  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447B98  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_447BF7  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_447BCB  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_447BCB  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_447BDB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447BF9  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_447BF9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447BF9  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_447688  +
jmp loc_447EC9  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_447C6C  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jnz loc_447C40  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_447C40  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_447C50  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447C6E  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_447C6E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447C6E  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_447CCD  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_447CA1  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_447CA1  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_447CB1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447CCF  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_447CCF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447CCF  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_447D2E  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_447D02  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_447D02  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_447D12  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447D30  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_447D30  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447D30  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_447D8F  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_447D63  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_447D63  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_447D73  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447D91  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_447D91  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447D91  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_447DF1  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jnz loc_447DC5  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_447DC5  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_447DD5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447DF3  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_447DF3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447DF3  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_447E52  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_447E26  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jnz loc_447E26  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_447E36  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447E54  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_447E54  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447E54  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_447EB3  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_447E87  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_447E87  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_447E97  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447EB5  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_447EB5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_447EB5  +
xor ecx ecx +
test ecx ecx +
jnz loc_44768A  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_447ED9  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_447936  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_44768A  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jnz loc_447F11  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jnz loc_447F11  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_447F21  +
xor ecx ecx +
test esi esi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_447F3B  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_447F3B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_447F95  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_447F5B  +
movzx edx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
sub edx eax +
jz loc_447F61  +
xor ecx ecx +
test edx edx +
jmp loc_447F15  +
movzx ecx byte ptr [ecx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_447F29  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_447F5B  +
movzx ecx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_447F29  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_447F29  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_448040  +
cmp edi eax +
jb loc_4482D4  +
cmp ecx 20h +
jb loc_44851B  +
cmp ecx 80h +
jnb loc_448064  +
bt dword_452728 1 +
jb loc_4484ED  +
jmp loc_448247  +
bt dword_453150 1 +
jnb loc_448077  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_448090  +
bt dword_452728 1 +
jb loc_448470  +
bt dword_453150 0 +
jnb loc_448247  +
test edi 3 +
jnz loc_448247  +
test esi 3 +
jnz loc_448262  +
bt edi 2 +
jnb loc_4480C9  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_4480E0  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_44814D  +
bt esi 3 +
jnb loc_4481A6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_4481FC  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_448214  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_4481FC  +
***
bt ecx 2 +
jnb loc_448227  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_44823E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_448284[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_448262  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_44824F  +
mov edx ecx +
cmp ecx 20h +
jb loc_44851B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_448284[edx*4]  +
jmp dword ptr ds:loc_448294[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_448434  +
bt dword_452728 1 +
jb loc_448385  +
test edi 3 +
jz loc_44830D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_448300  +
cmp ecx 20h +
jb loc_448434  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_448330[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_44839C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_44838D  +
cmp ecx 80h +
jb loc_44840C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_44839C  +
cmp ecx 20h +
jb loc_448434  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_448411  +
test ecx 0FFFFFFFCh +
jz loc_448451  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_44843C  +
test ecx ecx +
jz loc_448464  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_448455  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_448470  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_448560  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_4484ED  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_448490  +
test ecx ecx +
jz loc_448550  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_44851B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_448500  +
and ecx 1Fh +
jz loc_448550  +
mov eax ecx +
shr ecx 2 +
jz loc_448536  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_448527  +
mov ecx eax +
and ecx 3 +
jz loc_448550  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_44853D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_44857C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_448573  +
shr eax 2 +
jz loc_44858E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_448581  +
pop ecx  +
jmp loc_44847D  +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_448675  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_44503A  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_4485A0  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
push ebx  +
mov ebp edx +
xor eax eax +
xor ebx ebx +
xor edx edx +
xor esi esi +
xor edi edi +
call ecx  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov ebp edx +
mov esi ecx +
mov eax ecx +
push 1  +
call sub_449A4C  +
xor eax eax +
xor ebx ebx +
xor ecx ecx +
xor edx edx +
xor edi edi +
jmp esi  +
***
push ebx  +
push esi  +
push edi  +
push 0  +
push edx  +
push offset loc_4486E9  +
push ecx  +
call ds:RtlUnwind  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edx  +
mov edi edi +
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
mov ecx [ebx+8] +
sub esp 1Ch +
cmp dword_45314C 1 +
push esi  +
jge loc_448760  +
movzx eax word ptr [ecx] +
mov edx eax +
test ax ax +
jz loc_448752  +
mov esi eax +
movzx edx si +
cmp si [ebx+0Ch] +
jz loc_448752  +
add ecx 2 +
movzx eax word ptr [ecx] +
mov esi eax +
mov edx eax +
test ax ax +
jnz loc_44873A  +
xor eax eax +
cmp dx [ebx+0Ch] +
setnz al  +
dec eax  +
and eax ecx +
jmp loc_4487C8  +
mov dx [ebx+0Ch] +
movzx eax dx +
movd xmm0 eax +
pshuflw xmm0 xmm0 +
pshufd xmm2 xmm0 +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_4487A2  +
movups xmm0 oword ptr [ecx] +
pxor xmm1 xmm1 +
pcmpeqw xmm1 xmm0 +
pcmpeqw xmm0 xmm2 +
por xmm1 xmm0 +
pmovmskb eax xmm1 +
test eax eax +
jnz loc_4487B6  +
push 10h  +
jmp loc_4487B1  +
movzx eax word ptr [ecx] +
cmp ax dx +
jz loc_4487C6  +
test ax ax +
jz loc_4487C2  +
push 2  +
pop eax  +
add ecx eax +
jmp loc_448775  +
bsf eax eax +
add ecx eax +
xor eax eax +
cmp [ecx] dx +
jmp loc_448758  +
xor eax eax +
jmp loc_4487C8  +
mov eax ecx +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
movzx eax byte ptr [esp+8] +
mov edx eax +
shl eax 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov edx [esp+4] +
mov ecx 0Fh +
or eax 0FFFFFFFFh +
and ecx edx +
shl eax cl +
sub edx ecx +
movdqu xmm1 qword ptr [edx] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
por xmm2 xmm1 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_448827  +
or eax 0FFFFFFFFh +
add edx 10h +
jmp loc_448803  +
***
bsf eax ecx +
add eax edx +
movd edx xmm3 +
xor ecx ecx +
cmp dl [eax] +
cmovnz eax ecx +
retn   +
***
and eax 81010100h +
jz loc_448870  +
and eax 1010100h +
jnz loc_4488AC  +
and esi 80000000h +
jnz loc_448870  +
pop esi  +
pop edi  +
pop ebx  +
xor eax eax +
retn   +
***
lea eax [edx-1] +
pop ebx  +
retn   +
***
test al al +
jz loc_4488AC  +
cmp ah bl +
jz loc_4488ED  +
test ah ah +
jz loc_4488AC  +
shr eax 10h +
cmp al bl +
jz loc_4488E6  +
test al al +
jz loc_4488AC  +
cmp ah bl +
jz loc_4488DF  +
test ah ah +
jz loc_4488AC  +
jmp loc_448870  +
***
pop esi  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
call sub_44991D  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 8  +
pop ecx  +
mov esi offset dword_40C040 +
lea edi [ebp+dwExceptionCode] +
movs   +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_4489C2  +
test byte ptr [edi] 10h +
jz loc_4489C2  +
mov ecx [ebx] +
sub ecx 4 +
push ecx  +
mov eax [ecx] +
mov esi [eax+20h] +
mov ecx esi +
mov edi [eax+18h] +
call ds:off_454218  +
call esi  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] edi +
test edi edi +
jz loc_4489D8  +
test byte ptr [edi] 8 +
jz loc_4489D8  +
mov [ebp+Arguments] 1994000h +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+nNumberOfArguments]  +
push [ebp+dwExceptionFlags]  +
push [ebp+dwExceptionCode]  +
call ds:RaiseException  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call sub_448A2C  +
cmp dword_452730 0FFFFFFFFh +
cmp dword_452730 0FFFFFFFFh +
mov dword_452730 eax +
mov eax dword_452730 +
call sub_445910  +
call sub_445910  +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_8]  +
call sub_4498BC  +
pop ecx  +
call sub_448A1E  +
mov ecx [ebp+arg_10] +
xor esi esi +
mov edx [ebp+arg_0] +
mov ebx 1FFFFFFFh +
mov edi 19930522h +
cmp [eax+20h] esi +
jnz loc_449350  +
cmp dword ptr [edx] 0E06D7363h +
jz loc_449350  +
cmp dword ptr [edx] 80000026h +
jz loc_449350  +
mov eax [ecx] +
and eax ebx +
cmp eax edi +
jb loc_449350  +
test byte ptr [ecx+20h] 1 +
jnz loc_4493FD  +
test byte ptr [edx+4] 66h +
jz loc_44937C  +
cmp [ecx+4] esi +
jz loc_4493FD  +
cmp [ebp+arg_14] esi +
jnz loc_4493FD  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
call sub_44968F  +
add esp 0Ch +
jmp loc_4493FD  +
cmp [ecx+0Ch] esi +
jnz loc_44939F  +
mov eax [ecx] +
and eax ebx +
cmp eax 19930521h +
jb loc_449391  +
cmp [ecx+1Ch] esi +
jnz loc_44939F  +
cmp eax edi +
jb loc_4493FD  +
mov eax [ecx+20h] +
shr eax 2 +
test al 1 +
jz loc_4493FD  +
cmp dword ptr [edx] 0E06D7363h +
jnz loc_4493E1  +
cmp dword ptr [edx+10h] 3 +
jb loc_4493E1  +
cmp [edx+14h] edi +
jbe loc_4493E1  +
mov eax [edx+1Ch] +
mov esi [eax+8] +
test esi esi +
jz loc_4493E1  +
movzx eax [ebp+arg_1C] +
push eax  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push ecx  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call ds:off_454218  +
call esi  +
add esp 20h +
jmp loc_449400  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push dword ptr [ebp+arg_1C]  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call sub_448D98  +
add esp 20h +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
and dword ptr [ecx+4] 0 +
call sub_445910  +
mov eax [ebp-30h] +
call sub_445DA0  +
mov edi edi +
call sub_445910  +
call sub_448A1E  +
cmp dword ptr [eax+18h] 0 +
jle locret_44978A  +
call sub_448A1E  +
dec dword ptr [eax+18h]  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+1Ch] +
pop ebp  +
retn   +
***
sub esp 4 +
mov edi edi +
mov edi edi +
mov eax dword_452720 +
mov dword_45318C eax +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_449949  +
push dword ptr [ebp+8]  +
call ds:RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_449951  +
push large dword ptr fs:0  +
mov eax dword_452720 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_449A08  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_4499DB  +
cmp esi [esp+18h+arg_4] +
jbe loc_449A08  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_449A06  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_449A4C  +
mov eax [ebx+esi*4+8] +
call sub_449A6B  +
jmp loc_4499BF  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_449951 +
jnz locret_449A3C  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_449A3C  +
mov eax 1 +
retn   +
***
mov ebx offset unk_452740 +
jmp loc_449A57  +
***
mov ebx offset unk_452740 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_453410 +
mov edi edi +
retn   +
***
mov dword_4529B0 offset off_451060 +
mov al 1 +
retn   +
***
push offset unk_452DBC  +
call sub_441F45  +
mov dword ptr [esp] offset unk_452DC8 +
call sub_441F45  +
pop ecx  +
mov al 1 +
retn   +
***
call sub_44363B  +
mov al 1 +
retn   +
***
mov edi edi +
push esi  +
mov esi dword_452720 +
push esi  +
call sub_43221B  +
push esi  +
call sub_43B6CF  +
push esi  +
call sub_43C35F  +
push esi  +
call sub_441344  +
push esi  +
call sub_43C1EB  +
add esp 14h +
mov al 1 +
pop esi  +
retn   +
***
push 0  +
call sub_448924  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push offset dword_452DAC  +
lea ecx [ebp-1] +
call sub_449FD0  +
mov al 1 +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
or ecx 0FFFFFFFFh +
mov eax [esi] +
xadd [eax] ecx +
jnz loc_449FF9  +
push edi  +
mov edi offset unk_4520F0 +
cmp [esi] edi +
jz loc_449FF8  +
push dword ptr [esi]  +
call sub_436566  +
pop ecx  +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_44A6E6  +
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_44A02E  +
cmp lpMem 0 +
jz loc_44A02A  +
call sub_440FFE  +
mov al 1 +
pop ebp  +
retn   +
push offset off_4026C0  +
push offset off_402640  +
call sub_44A74E  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
test eax eax +
jz loc_44A0B6  +
inc edx  +
sub ebx 1 +
jbe loc_44A0B6  +
test dl 3 +
jnz loc_44A070  +
lea eax [ecx+edx] +
and eax 0FFFh +
cmp eax 0FFCh +
ja loc_44A070  +
mov eax [ecx+edx] +
cmp eax [edx] +
jnz loc_44A070  +
sub ebx 4 +
jbe loc_44A0B6  +
lea esi [eax-1010101h] +
add edx 4 +
not eax  +
and eax esi +
test eax 80808080h +
jz loc_44A087  +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_452720 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 4  +
pop eax  +
call sub_445EA0  +
mov eax esp +
lea ecx [ebp+Buffer] +
push 1Ch  +
push ecx  +
push eax  +
mov [ebp+var_C] eax +
call ds:VirtualQuery  +
test eax eax +
jz loc_44A179  +
mov eax [ebp+Buffer.AllocationBase] +
mov [ebp+var_10] eax +
lea eax [ebp+SystemInfo] +
push eax  +
call ds:GetSystemInfo  +
mov ebx [ebp+SystemInfo.dwPageSize] +
lea eax [ebp+var_8] +
xor esi esi +
push eax  +
mov [ebp+var_8] esi +
call sub_43AFDD  +
test eax eax +
jz loc_44A128  +
cmp [ebp+var_8] esi +
jbe loc_44A128  +
mov esi [ebp+var_8] +
dec esi  +
mov edi ebx +
neg edi  +
add esi ebx +
and esi edi +
jz loc_44A135  +
add esi ebx +
lea eax [ebx+ebx] +
cmp esi eax +
jnb loc_44A13E  +
mov esi eax +
and edi [ebp+var_C] +
mov eax [ebp+var_10] +
sub edi esi +
add eax ebx +
cmp edi eax +
jb loc_44A179  +
push 4  +
push 1000h  +
push esi  +
push edi  +
call ds:VirtualAlloc  +
test eax eax +
jz loc_44A179  +
lea eax [ebp+flOldProtect] +
push eax  +
push 104h  +
push esi  +
push edi  +
call ds:VirtualProtect  +
test eax eax +
jz loc_44A179  +
xor eax eax +
inc eax  +
jmp loc_44A17B  +
xor eax eax +
lea esp [ebp-60h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44503A  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax [ebp+8] +
jbe loc_44A1A2  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_44A1A8  +
***
call ds:GetCommandLineA  +
mov dword_45340C eax +
call ds:GetCommandLineW  +
mov dword_453410 eax +
mov al 1 +
retn   +
***
cmp dword_453414 0 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+arg_0] esi +
jz loc_44A77A  +
push edi  +
mov edi [esi-4] +
test edi edi +
jz loc_44A771  +
push 0  +
mov ecx edi +
call ds:off_454218  +
call edi  +
pop ecx  +
sub esi 8 +
cmp esi [ebp+arg_0] +
jnz loc_44A75D  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_452720 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_104] esi +
mov [ebp+var_108] ebx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_100] edi +
test esi esi +
jnz loc_44A7DF  +
test ecx ecx +
jz loc_44A7DF  +
call sub_435431  +
mov dword ptr [eax] 16h +
call sub_43228E  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44503A  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_44A7BE  +
test ebx ebx +
jz loc_44A7BE  +
mov [ebp+var_118] 0 +
cmp ecx 2 +
jb loc_44A7CE  +
dec ecx  +
imul ecx edi +
add ecx esi +
mov [ebp+var_F8] ecx +
mov eax ecx +
xor edx edx +
sub eax esi +
div  edi +
inc eax  +
cmp eax 8 +
ja loc_44A8CA  +
cmp ecx esi +
jbe loc_44AC43  +
lea edx [edi+esi] +
mov [ebp+var_110] edx +
mov eax esi +
mov esi edx +
mov [ebp+var_FC] eax +
cmp esi ecx +
ja loc_44A862  +
push eax  +
push esi  +
mov ecx ebx +
call ds:off_454218  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_44A850  +
mov eax esi +
mov [ebp+var_FC] eax +
jmp loc_44A856  +
mov eax [ebp+var_FC] +
mov ecx [ebp+var_F8] +
add esi edi +
cmp esi ecx +
jbe loc_44A833  +
mov [ebp+var_10C] edi +
mov edx ecx +
cmp eax ecx +
jz loc_44A8A9  +
sub eax ecx +
mov ebx edi +
mov [ebp+var_FC] eax +
jmp loc_44A880  +
mov cl [eax+edx] +
lea edx [edx+1] +
mov esi [ebp+var_FC] +
mov al [edx-1] +
mov [esi+edx-1] al +
mov eax esi +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_44A880  +
mov ebx [ebp+var_108] +
mov ecx [ebp+var_F8] +
mov esi [ebp+var_104] +
sub ecx edi +
mov edx [ebp+var_110] +
mov [ebp+var_F8] ecx +
cmp ecx esi +
ja loc_44A825  +
jmp loc_44AC43  +
shr eax 1 +
mov ecx ebx +
imul eax edi +
mov [ebp+var_FC] eax +
lea edi [eax+esi] +
push edi  +
push esi  +
mov [ebp+var_114] edi +
call ds:off_454218  +
call ebx  +
mov esi [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_104] +
jle loc_44A94A  +
mov [ebp+var_10C] esi +
mov [ebp+var_110] edi +
cmp eax edi +
jz loc_44A94A  +
mov ebx [ebp+var_10C] +
mov esi edi +
mov edi [ebp+var_FC] +
jmp loc_44A920  +
mov al [esi] +
mov edx esi +
sub edx edi +
mov cl [edx] +
mov [edx] al +
mov [esi] cl +
inc esi  +
sub ebx 1 +
jnz loc_44A920  +
mov edi [ebp+var_114] +
mov ebx [ebp+var_108] +
mov esi [ebp+var_100] +
mov eax [ebp+var_104] +
push [ebp+var_F8]  +
mov ecx ebx +
push eax  +
call ds:off_454218  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
jle loc_44A9B1  +
mov eax [ebp+var_104] +
mov [ebp+var_114] esi +
mov esi edx +
cmp eax edx +
jz loc_44A9B1  +
mov ebx [ebp+var_114] +
sub eax edx +
mov [ebp+var_110] eax +
mov edx eax +
lea ebx [ebx+0] +
mov al [esi] +
lea esi [esi+1] +
mov cl [edx+esi-1] +
mov [edx+esi-1] al +
mov [esi-1] cl +
sub ebx 1 +
jnz loc_44A990  +
mov ebx [ebp+var_108] +
mov edx [ebp+var_F8] +
push edx  +
push edi  +
mov ecx ebx +
call ds:off_454218  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_44AA05  +
mov ebx eax +
mov esi edx +
cmp edi edx +
jz loc_44AA05  +
mov eax edi +
sub eax edx +
mov [ebp+var_114] eax +
mov edx eax +
mov al [esi] +
lea esi [esi+1] +
mov cl [edx+esi-1] +
mov [edx+esi-1] al +
mov [esi-1] cl +
sub ebx 1 +
jnz loc_44A9E4  +
mov eax [ebp+var_100] +
mov edx [ebp+var_F8] +
mov esi [ebp+var_104] +
mov ebx edx +
mov [ebp+var_FC] edx +
cmp edi esi +
jbe loc_44AA55  +
jmp loc_44AA20  +
add esi eax +
mov [ebp+var_10C] esi +
cmp esi edi +
jnb loc_44AA4F  +
mov ecx [ebp+var_108] +
push edi  +
push esi  +
call ds:off_454218  +
call [ebp+var_108]  +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_44AA20  +
jmp loc_44AA91  +
mov edx [ebp+var_F8] +
mov ebx [ebp+var_108] +
jmp loc_44AA60  +
add esi eax +
cmp esi edx +
ja loc_44AA85  +
push edi  +
push esi  +
mov ecx ebx +
call ds:off_454218  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_44AA60  +
mov ebx [ebp+var_FC] +
mov [ebp+var_10C] esi +
mov esi [ebp+var_108] +
jmp loc_44AAA0  +
mov eax [ebp+var_100] +
mov ecx ebx +
sub ebx eax +
mov [ebp+var_FC] ecx +
cmp ebx edi +
jbe loc_44AAD3  +
push edi  +
push ebx  +
mov ecx esi +
call ds:off_454218  +
call esi  +
add esp 8 +
test eax eax +
jg loc_44AAA0  +
mov eax [ebp+var_100] +
mov ecx [ebp+var_FC] +
mov esi [ebp+var_10C] +
mov [ebp+var_FC] ebx +
cmp ebx esi +
jb loc_44AB2D  +
mov [ebp+var_110] eax +
mov edx ebx +
jz loc_44AB18  +
sub esi ebx +
mov ebx eax +
mov al [edx] +
lea edx [edx+1] +
mov cl [esi+edx-1] +
mov [esi+edx-1] al +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_44AAF1  +
mov esi [ebp+var_10C] +
mov ebx [ebp+var_FC] +
mov eax [ebp+var_100] +
mov edx [ebp+var_F8] +
cmp edi ebx +
jnz loc_44AA13  +
mov edi esi +
jmp loc_44AA13  +
cmp edi ecx +
jnb loc_44AB6D  +
mov ebx [ebp+var_108] +
jmp loc_44AB40  +
sub ecx eax +
mov [ebp+var_FC] ecx +
cmp ecx edi +
jbe loc_44AB6D  +
push edi  +
push ecx  +
mov ecx ebx +
call ds:off_454218  +
call ebx  +
mov ecx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jz loc_44AB40  +
jmp loc_44ABB1  +
mov ebx [ebp+var_108] +
mov esi [ebp+var_104] +
lea esp [esp+0] +
sub ecx eax +
mov [ebp+var_FC] ecx +
cmp ecx esi +
jbe loc_44ABAB  +
push edi  +
push ecx  +
mov ecx ebx +
call ds:off_454218  +
call ebx  +
mov ecx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jz loc_44AB80  +
mov esi [ebp+var_10C] +
mov edx [ebp+var_F8] +
mov ecx edx +
mov edi [ebp+var_FC] +
sub ecx esi +
mov eax edi +
sub eax [ebp+var_104] +
cmp eax ecx +
jl loc_44AC0A  +
mov eax [ebp+var_104] +
cmp eax edi +
jnb loc_44ABEF  +
mov ecx [ebp+var_118] +
mov [ebp+ecx*4+var_7C] eax +
mov [ebp+ecx*4+var_F4] edi +
inc ecx  +
mov [ebp+var_118] ecx +
mov ecx [ebp+var_F8] +
mov edi [ebp+var_100] +
cmp esi ecx +
jnb loc_44AC43  +
mov [ebp+var_104] esi +
jmp loc_44A802  +
cmp esi edx +
jnb loc_44AC26  +
mov eax [ebp+var_118] +
mov [ebp+eax*4+var_7C] esi +
mov [ebp+eax*4+var_F4] edx +
inc eax  +
mov [ebp+var_118] eax +
mov esi [ebp+var_104] +
cmp esi edi +
jnb loc_44AC3D  +
mov ecx edi +
mov edi [ebp+var_100] +
jmp loc_44A7FC  +
mov edi [ebp+var_100] +
mov eax [ebp+var_118] +
sub eax 1 +
mov [ebp+var_118] eax +
js loc_44A7CE  +
mov esi [ebp+eax*4+var_7C] +
mov ecx [ebp+eax*4+var_F4] +
mov [ebp+var_104] esi +
jmp loc_44A7FC  +
***
add edx 1 +
bts [esp] eax +
jmp loc_44AC84  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_44ACEE  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_44ACE6  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_44ACF0  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_44ACD6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFEh  +
push offset dword_44FF70  +
push offset loc_4466E0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_452720 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_44ADC0  +
add esp 4 +
test eax eax +
jz loc_44ADA1  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_44ACB0  +
add esp 8 +
test eax eax +
jz loc_44ADA1  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jnz loc_44ADF1  +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_44ADF1  +
mov ecx 10Bh +
cmp [eax+18h] cx +
jnz loc_44ADF1  +
mov eax 1 +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
call loc_44AE27  +
push 0  +
call sub_445132  +
pop ecx  +
test al al +
jz loc_44AE1F  +
push offset loc_44AF20  +
call sub_4452EA  +
pop ecx  +
xor eax eax +
retn   +
push 7  +
call sub_4455BB  +
int 3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44CE0C  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_452720 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 0FA0h  +
push offset CriticalSection  +
call ds:InitializeCriticalSectionAndSpinCount  +
push offset aApiMsWinCoreSy  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jnz loc_44AE84  +
push offset aKernel32_dll  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jz loc_44AF0E  +
push offset aInitializecond  +
push esi  +
call ds:GetProcAddress  +
push offset aSleepcondition  +
push esi  +
mov ebx eax +
call ds:GetProcAddress  +
push offset aWakeallconditi  +
push esi  +
mov edi eax +
call ds:GetProcAddress  +
mov esi eax +
test ebx ebx +
jz loc_44AEF8  +
test edi edi +
jz loc_44AEF8  +
test esi esi +
jz loc_44AEF8  +
and hHandle 0 +
mov ecx ebx +
push offset unk_453430  +
call ds:off_454218  +
call ebx  +
push edi  +
call sub_43A9C9  +
push esi  +
mov dword_453438 eax +
call sub_43A9C9  +
pop ecx  +
pop ecx  +
mov dword_45343C eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov hHandle eax +
test eax eax +
jnz loc_44AEE8  +
push 7  +
call sub_4455BB  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jnz loc_44AFB2  +
or dword ptr [esi] 0FFFFFFFFh +
jmp loc_44AFD1  +
push 64h  +
call sub_44B01E  +
pop ecx  +
jmp loc_44AF9E  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_44AFA8  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_452750 +
mov [ecx+4] eax +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
call sub_445910  +
mov edi [ebp+10h] +
test al al +
call sub_445910  +
xor esi esi +
mov [ebp-4] esi +
mov edi [ebp+8] +
mov [ebp-1Ch] esi +
cmp esi [ebp+10h] +
jz loc_44B15F  +
sub edi [ebp+0Ch] +
mov [ebp+8] edi +
mov ecx [ebp+14h] +
call ds:off_454218  +
mov ecx edi +
call dword ptr [ebp+14h]  +
inc esi  +
jmp loc_44B119  +
mov eax [ebp-14h] +
mov [ebp-20h] eax +
mov eax [ebp-20h] +
mov eax [eax] +
mov [ebp-24h] eax +
mov eax [ebp-24h] +
cmp dword ptr [eax] 0E06D7363h +
jz loc_44B178  +
mov dword ptr [ebp-28h] 0 +
mov eax [ebp-28h] +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword_45314C 1 +
jl loc_44B1F3  +
cmp [ebp+arg_0] 0C00002B4h +
jz loc_44B19F  +
cmp [ebp+arg_0] 0C00002B5h +
jnz loc_44B1F3  +
stmxcsr [ebp+var_4]  +
mov eax [ebp+var_4] +
xor eax 3Fh +
test al 81h +
jz loc_44B1EC  +
test eax 204h +
jnz loc_44B1BB  +
mov eax 0C000008Eh +
leave   +
retn   +
test eax 102h +
jz loc_44B1EC  +
test eax 408h +
jnz loc_44B1D0  +
mov eax 0C0000091h +
leave   +
retn   +
test eax 810h +
jnz loc_44B1DE  +
mov eax 0C0000093h +
leave   +
retn   +
test eax 1020h +
jnz loc_44B1F3  +
mov eax 0C000008Fh +
leave   +
retn   +
mov eax 0C0000090h +
leave   +
retn   +
mov eax [ebp+arg_0] +
leave   +
retn   +
***
cmp dword_453728 0 +
jz loc_44B23B  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_44B230  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_44B23B  +
jmp loc_44B450  +
***
sub esp 14h +
fxch  st(1) +
fstp  qword ptr [esp] +
fst  qword ptr [esp+8] +
mov eax [esp+0Ch] +
call sub_44B25D  +
add esp 14h +
retn   +
***
mov ecx eax +
fld  st +
frndint   +
fcomp  st(1) +
mov cl 0 +
fstsw  ax +
sahf   +
jnz loc_44B446  +
fmul  qword ptr ds:dword_41CB20+4 +
inc cl  +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jnz locret_44B445  +
inc cl  +
retn   +
fstp  st +
retn   +
***
movlpd xmm0 oword ptr [esp+arg_0] +
movlpd xmm7 oword ptr ds:oword_41CB40 +
movlpd xmm2 oword ptr ds:oword_41CB50 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_41CBF0[eax*4] +
movlpd xmm5 oword ptr ds:oword_41CBF0[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_41D000[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_44B7B7  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_41CB90+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_41CB40 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_41D810[eax*4] +
mulsd xmm5 ds:qword_41D810[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_41DC20[eax*4] +
orpd xmm4 oword ptr ds:oword_41CB50 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_41CB90+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_41CBA0 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_41E430[eax*4] +
mulsd xmm2 ds:qword_41E430[eax*4] +
addpd xmm6 oword ptr ds:oword_41EC40[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_41CB90+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_44BB28  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_44BEEA  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_41CB90+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_41FC50 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_41FC60 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_44BC6E  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_41CB30 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_41CB30 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_41FC70[eax] +
movapd xmm6 oword ptr ds:oword_41CB70 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_41CB90 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_41CB80 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
sub esp 10h +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
movlpd oword ptr [esp+4] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm3 oword ptr ds:oword_41CB60 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_44B8C0  +
or eax ecx +
cmp eax 0 +
jz loc_44BBE5  +
cmp edx 0 +
jge loc_44B8FF  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_44B9E8  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_44BAE1  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_41CB60 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_41CBC0 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_44B904  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_41CB40 +
movlpd xmm2 oword ptr ds:oword_41CB50 +
jmp loc_44B4E6  +
movlpd xmm7 oword ptr [esp+arg_0] +
movlpd xmm4 oword ptr [esp+arg_0] +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_44BB5D  +
ja loc_44BACF  +
cmp edx 0 +
ja loc_44BACF  +
jmp loc_44BB5D  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_41CB40 +
movlpd xmm2 oword ptr ds:oword_41CB50 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_44B98A  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_41CB60 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_41CBF0[eax*4] +
movlpd xmm5 oword ptr ds:oword_41CBF0[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_41D000[eax*4] +
mov edx 43E7Fh +
jmp loc_44B4E6  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_44B938  +
mov edx dword ptr [esp+arg_0+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_44B9D7  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_41CB50 +
movlpd xmm2 oword ptr [esp+arg_0] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_44BC3E  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_44BA89  +
fldz   +
retn   +
movlpd xmm3 oword ptr ds:oword_41CB40 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_44BACF  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_44BAB3  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_44BA97  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_41CB60 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_44BA97  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_44BA90  +
fld  qword ptr ds:oword_41CBC0 +
retn   +
fld  ds:dbl_41CBB8 +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_44BBCF  +
fldz   +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_44BBCF  +
fldz   +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_44BC3E  +
movlpd xmm2 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_44B98A  +
movlpd xmm1 oword ptr ds:oword_41CBA0+8 +
movlpd xmm0 oword ptr ds:oword_41CBE0 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_44BC3E  +
movlpd xmm4 oword ptr [esp+arg_0] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_44BB5D  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_44BC3B  +
cmp edx 0BFF00000h +
jnz loc_44BB5D  +
fld1   +
retn   +
movlpd xmm3 oword ptr ds:oword_41CB40 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_44BBD6  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+arg_0] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_44BC3B  +
cmp eax 0 +
jz loc_44BBBB  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_44BBCF  +
fldz   +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_44BBCF  +
fldz   +
retn   +
fld  ds:dbl_41CBB0 +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_44BC3E  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_41CB50 +
mov edx 1Ah +
cmp eax 0 +
jz loc_44BC3E  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_44BC3E  +
jb loc_44BC2A  +
cmp ecx 0 +
ja loc_44BC3E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
fld1   +
retn   +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 18h +
mov [esp+1Ch+var_18] edx +
sub edx 8 +
mov [esp+1Ch+var_1C] edx +
call sub_444493  +
fld  qword ptr [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
cmp eax 0 +
jle loc_44BC9B  +
cmp eax 40000h +
jnb loc_44BEBA  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_44BCC1  +
cmp eax 0FFFC0200h +
jle loc_44BE97  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_41CB30 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_41CB30 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_41FC70[eax] +
movapd xmm6 oword ptr ds:oword_41CB70 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_41CB90 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+8+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_41CB80 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_44BE4D  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_44BC3E  +
mov edx 19h +
cmp eax 0 +
jz loc_44BC3E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_44BC3E  +
mov edx 19h +
cmp eax 0 +
jz loc_44BC3E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_41CBD0+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_44BC3E  +
mov edx 18h +
cmp ecx 0 +
jz loc_44BED9  +
movlpd xmm0 oword ptr ds:oword_41CBC0+8 +
mulsd xmm0 qword ptr ds:oword_41CBD0 +
jmp loc_44BC3E  +
movlpd xmm0 oword ptr ds:oword_41CBD0 +
mulsd xmm0 xmm0 +
jmp loc_44BC3E  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_44B638  +
cmp eax 80000000h +
jb loc_44BF3E  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+arg_0] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_44BE97  +
jmp loc_44BEBA  +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_452720 +
xor [ebp-4] eax +
xor eax ebp +
mov [ebp-1Ch] eax +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
cmp cl 40h +
jnb loc_44BFEB  +
cmp cl 20h +
jnb loc_44BFE0  +
shrd eax edx +
sar edx cl +
retn   +
mov eax edx +
sar edx 1Fh +
and cl 1Fh +
sar eax cl +
retn   +
sar edx 1Fh +
mov eax edx +
retn   +
***
push ebx  +
push esi  +
mov eax [esp+18h] +
or eax eax +
jnz loc_44C022  +
mov ecx [esp+14h] +
mov eax [esp+10h] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+0Ch] +
div  ecx +
mov edx ebx +
jmp loc_44C063  +
mov ecx eax +
mov ebx [esp+14h] +
mov edx [esp+10h] +
mov eax [esp+0Ch] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_44C030  +
div  ebx +
mov esi eax +
mul  dword ptr [esp+18h] +
mov ecx eax +
mov eax [esp+14h] +
mul  esi +
add edx ecx +
jb loc_44C05E  +
cmp edx [esp+10h] +
ja loc_44C05E  +
jb loc_44C05F  +
cmp eax [esp+0Ch] +
jbe loc_44C05F  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
mov eax [esp+0Ch] +
push ebx  +
test eax eax +
jz loc_44C0CB  +
mov edx [esp+8] +
xor ebx ebx +
mov bl [esp+0Ch] +
test edx 3 +
jz loc_44C0A1  +
mov cl [edx] +
add edx 1 +
xor cl bl +
jz loc_44C106  +
sub eax 1 +
jz loc_44C0CB  +
test edx 3 +
jnz loc_44C08B  +
sub eax 4 +
jb loc_44C0B8  +
push edi  +
mov edi ebx +
shl ebx 8 +
add ebx edi +
mov edi ebx +
shl ebx 10h +
add ebx edi +
jmp loc_44C0D2  +
pop edi  +
add eax 4 +
jz loc_44C0CB  +
mov cl [edx] +
add edx 1 +
xor cl bl +
jz loc_44C106  +
sub eax 1 +
jnz loc_44C0BD  +
pop ebx  +
retn   +
***
sub eax 4 +
jb loc_44C0B7  +
mov ecx [edx] +
xor ecx ebx +
mov edi 7EFEFEFFh +
add edi ecx +
xor ecx 0FFFFFFFFh +
xor ecx edi +
add edx 4 +
and ecx 81010100h +
jz loc_44C0CD  +
mov ecx [edx-4] +
xor cl bl +
jz loc_44C117  +
xor ch bl +
jz loc_44C111  +
shr ecx 10h +
xor cl bl +
jz loc_44C10B  +
xor ch bl +
jz loc_44C105  +
jmp loc_44C0CD  +
***
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-4] +
pop edi  +
pop ebx  +
retn   +
***
jmp loc_42139E  +
***
lea ecx [ebp-14h] +
jmp loc_422270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DB88 +
jmp loc_44644A  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44C15D  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp loc_421520  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DBBC +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DBE8 +
jmp loc_44644A  +
***
lea ecx [ebp-64h] +
jmp sub_425231  +
***
lea ecx [ebp-2Ch] +
jmp sub_425231  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DC40 +
jmp loc_44644A  +
***
mov ecx [ebp-10h] +
jmp sub_42BF93  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DC74 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DCD0 +
jmp loc_44644A  +
***
push 18h  +
push dword ptr [ebp-14h]  +
call sub_445301  +
pop ecx  +
pop ecx  +
retn   +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44C276  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
lea ecx [ebp-48h] +
jmp sub_42276C  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DCFC +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DD38 +
jmp loc_44644A  +
***
push 44h  +
push dword ptr [ebp-14h]  +
call sub_445301  +
pop ecx  +
pop ecx  +
retn   +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44C2DA  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
lea ecx [ebp-48h] +
jmp sub_42276C  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DD64 +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp sub_425231  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DDA0 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DDCC +
jmp loc_44644A  +
***
lea ecx [ebp-34h] +
jmp sub_421849  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DDF8 +
jmp loc_44644A  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44C383  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp loc_421520  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DE24 +
jmp loc_44644A  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-0A0h] +
jmp loc_421520  +
***
lea ecx [ebp-88h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DE50 +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DE9C +
jmp loc_44644A  +
***
lea ecx [ebp-0A8h] +
jmp loc_4238C7  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-94h] +
jmp sub_430524  +
***
lea ecx [ebp-74h] +
jmp loc_423D00  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-94h] +
jmp sub_430524  +
***
lea ecx [ebp-74h] +
jmp loc_423D00  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ACh] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DEC8 +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DF60 +
jmp loc_44644A  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-70h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DF8C +
jmp loc_44644A  +
***
lea ecx [ebp-30h] +
jmp loc_424A77  +
***
lea ecx [ebp-70h] +
jmp loc_424E58  +
***
lea ecx [ebp-4Ch] +
jmp loc_424BB5  +
***
lea ecx [ebp-4Ch] +
jmp sub_424BBC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DFC8 +
jmp loc_44644A  +
***
mov ecx [ebp-30h] +
jmp sub_423780  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E024 +
jmp loc_44644A  +
***
lea ecx [ebp-0A0h] +
jmp loc_421520  +
***
lea ecx [ebp-88h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-70h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
lea ecx [ebp-0DCh] +
jmp sub_430524  +
***
lea ecx [ebp-0BCh] +
jmp loc_423D00  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-0DCh] +
jmp sub_430524  +
***
lea ecx [ebp-0BCh] +
jmp loc_423D00  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ECh] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E058 +
jmp loc_44644A  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-94h] +
jmp sub_430524  +
***
lea ecx [ebp-74h] +
jmp loc_423D00  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A4h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E0F0 +
jmp loc_44644A  +
***
lea ecx [ebp-18h] +
jmp sub_424DF8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E13C +
jmp loc_44644A  +
***
lea ecx [ebp-18h] +
jmp sub_426844  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E168 +
jmp loc_44644A  +
***
push 0Ch  +
push dword ptr [ebp-14h]  +
call sub_445301  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E194 +
jmp loc_44644A  +
***
lea ecx [ebp-0DCh] +
jmp loc_425F64  +
***
mov eax [ebp-2Ch] +
and eax 2 +
jz locret_44C74D  +
and dword ptr [ebp-2Ch] 0FFFFFFFDh +
lea ecx [ebp-28h] +
jmp sub_425231  +
***
retn   +
***
lea ecx [ebp-28h] +
jmp sub_425231  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0E0h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E1F4 +
jmp loc_44644A  +
***
lea ecx [ebp-0DCh] +
jmp sub_42350D  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0E0h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E230 +
jmp loc_44644A  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44C7D4  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
add ecx 68h +
jmp loc_425EF6  +
***
retn   +
***
mov ecx [ebp-14h] +
add ecx 18h +
jmp loc_425BB2  +
***
mov ecx [ebp-14h] +
add ecx 20h +
jmp sub_425999  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E264 +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp sub_42617B  +
***
lea ecx [ebp-30h] +
jmp sub_4228C9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E2B8 +
jmp loc_44644A  +
***
lea ecx [ebp-24h] +
jmp sub_42617B  +
***
lea ecx [ebp-2Ch] +
jmp sub_4228C9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E320 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E388 +
jmp loc_44644A  +
***
mov ecx [ebp-14h] +
jmp sub_427843  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E3AC +
jmp loc_44644A  +
***
lea ecx [ebp-30h] +
jmp sub_425231  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E3D8 +
jmp loc_44644A  +
***
lea ecx [ebp-50h] +
jmp sub_4228C9  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E404 +
jmp loc_44644A  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44C914  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp loc_421520  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E438 +
jmp loc_44644A  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44C94B  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
add ecx 68h +
jmp loc_4275D9  +
***
retn   +
***
mov ecx [ebp-14h] +
add ecx 18h +
jmp loc_427361  +
***
mov ecx [ebp-14h] +
add ecx 20h +
jmp sub_427309  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E464 +
jmp loc_44644A  +
***
lea ecx [ebp-5Ch] +
jmp sub_4228C9  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
lea ecx [ebp-54h] +
jmp sub_4228C9  +
***
lea ecx [ebp-44h] +
jmp sub_425231  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E4B0 +
jmp loc_44644A  +
***
lea ecx [ebp-58h] +
jmp sub_4228C9  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-64h] +
jmp sub_4228C9  +
***
lea ecx [ebp-40h] +
jmp sub_425231  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E4F4 +
jmp loc_44644A  +
***
lea ecx [ebp-14h] +
jmp sub_42617B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E538 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E564 +
jmp loc_44644A  +
***
lea ecx [ebp-18h] +
jmp sub_4228C9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E5BC +
jmp loc_44644A  +
***
lea ecx [ebp-20h] +
jmp sub_4228C9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E5E8 +
jmp loc_44644A  +
***
lea ecx [ebp-18h] +
jmp sub_42BF93  +
***
lea ecx [ebp-14h] +
jmp sub_429633  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E61C +
jmp loc_44644A  +
***
lea ecx [ebp-30h] +
jmp sub_42617B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E650 +
jmp loc_44644A  +
***
lea ecx [ebp-10h] +
jmp sub_42A584  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E6B0 +
jmp loc_44644A  +
***
lea ecx [ebp-14h] +
jmp sub_42A584  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E6DC +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp sub_425231  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E708 +
jmp loc_44644A  +
***
jmp loc_4296C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E734 +
jmp loc_44644A  +
***
lea ecx [ebp-1008h] +
jmp loc_429621  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1010h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E79C +
jmp loc_44644A  +
***
lea ecx [ebp-18h] +
jmp sub_42BF93  +
***
lea ecx [ebp-14h] +
jmp sub_429633  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E7C8 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E7FC +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E854 +
jmp loc_44644A  +
***
push 18h  +
push dword ptr [ebp-14h]  +
call sub_445301  +
pop ecx  +
pop ecx  +
retn   +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44CC25  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
lea ecx [ebp-48h] +
jmp sub_42276C  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E8AC +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E388 +
jmp loc_44644A  +
***
jmp loc_4296C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E8F0 +
jmp loc_44644A  +
***
push 8  +
push dword ptr [ebp-10h]  +
call sub_445301  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E924 +
jmp loc_44644A  +
***
lea ecx [ebp-48h] +
jmp loc_429AB0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-7Ch] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E950 +
jmp loc_44644A  +
***
lea ecx [ebp-0DCh] +
jmp sub_42350D  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0E0h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E97C +
jmp loc_44644A  +
***
jmp loc_4296C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E9B0 +
jmp loc_44644A  +
***
lea ecx [ebp-2Ch] +
jmp sub_42617B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EA18 +
jmp loc_44644A  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-88h] +
jmp loc_42BA9B  +
***
lea ecx [ebp-0B8h] +
jmp loc_421520  +
***
lea ecx [ebp-0A0h] +
jmp loc_421520  +
***
lea ecx [ebp-0ECh] +
jmp sub_42D784  +
***
lea ecx [ebp-0C0h] +
jmp loc_42BAB3  +
***
lea ecx [ebp-28h] +
jmp loc_42BABF  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0F0h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EA78 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E388 +
jmp loc_44644A  +
***
lea ecx [ebp-10h] +
jmp sub_42BF93  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EB18 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E388 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44DDCC +
jmp loc_44644A  +
***
mov ecx [ebp-14h] +
jmp sub_429633  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EB44 +
jmp loc_44644A  +
***
mov ecx [ebp-60h] +
add ecx 50h +
jmp loc_42D17B  +
***
mov ecx [ebp-60h] +
add ecx 54h +
jmp loc_42D17B  +
***
mov ecx [ebp-60h] +
add ecx 58h +
jmp loc_42D17B  +
***
mov ecx [ebp-60h] +
add ecx 5Ch +
jmp loc_42D17B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EBC4 +
jmp loc_44644A  +
***
lea ecx [ebp-24h] +
jmp sub_42D293  +
***
push 28h  +
push dword ptr [ebp-10h]  +
call sub_445301  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EC08 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44E388 +
jmp loc_44644A  +
***
lea ecx [ebp-18h] +
jmp loc_42D1FF  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EC3C +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EC68 +
jmp loc_44644A  +
***
lea ecx [ebp-20h] +
jmp loc_42CEEA  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44ECC0 +
jmp loc_44644A  +
***
mov ecx [ebp-10h] +
add ecx 4 +
jmp loc_42BAB3  +
***
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp loc_42B7A8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44ED20 +
jmp loc_44644A  +
***
lea ecx [ebp-5Ch] +
jmp loc_421520  +
***
lea ecx [ebp-44h] +
jmp loc_421520  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44ED54 +
jmp loc_44644A  +
***
lea ecx [ebp-2Ch] +
jmp sub_42CB25  +
***
lea ecx [ebp-44h] +
jmp sub_42D293  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44ED90 +
jmp loc_44644A  +
***
lea ecx [ebp-80h] +
jmp sub_421849  +
***
lea ecx [ebp-74h] +
jmp sub_421849  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EDC4 +
jmp loc_44644A  +
***
lea ecx [ebp-70h] +
jmp sub_42CDCF  +
***
lea ecx [ebp-0D0h] +
jmp sub_42CDCF  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D4h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EE08 +
jmp loc_44644A  +
***
lea ecx [ebp-20h] +
jmp sub_42D293  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EE3C +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EE9C +
jmp loc_44644A  +
***
lea ecx [ebp-5Ch] +
jmp loc_421520  +
***
lea ecx [ebp-44h] +
jmp loc_421520  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
lea ecx [ebp-44h] +
jmp loc_421520  +
***
lea ecx [ebp-70h] +
jmp sub_421849  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EEF4 +
jmp loc_44644A  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
dec ebp  +
mov al 0E9h +
retf   +
***
adc dh bh +
dec dword ptr [ebp+0EE99C4Dh]  +
inc edi  +
std   +
dec dword ptr [ebp-221627B3h]  +
inc ebx  +
std   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
dec edx  +
nop   +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EF50 +
jmp loc_44644A  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EF94 +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44EFE0 +
jmp loc_44644A  +
***
lea ecx [ebp-38h] +
jmp sub_42D293  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F00C +
jmp loc_44644A  +
***
lea ecx [ebp-70h] +
jmp loc_421520  +
***
lea ecx [ebp-58h] +
jmp loc_421520  +
***
lea ecx [ebp-0B8h] +
jmp loc_421520  +
***
lea ecx [ebp-0A0h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C4h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F040 +
jmp loc_44644A  +
***
mov ecx offset unk_4527A0 +
jmp loc_421520  +
***
mov ecx offset word_4527B8 +
jmp loc_421520  +
***
mov ecx offset word_4527D0 +
jmp loc_421520  +
***
mov ecx offset word_4527E8 +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F0C0 +
jmp loc_44644A  +
***
lea ecx [ebp-48h] +
jmp sub_42CB25  +
***
lea ecx [ebp-44h] +
jmp sub_42CB25  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F124 +
jmp loc_44644A  +
***
mov eax [ebp-74h] +
and eax 1 +
jz locret_44D2FD  +
and dword ptr [ebp-74h] 0FFFFFFFEh +
lea ecx [ebp-70h] +
jmp loc_421520  +
***
retn   +
***
mov eax [ebp-74h] +
and eax 2 +
jz locret_44D316  +
and dword ptr [ebp-74h] 0FFFFFFFDh +
lea ecx [ebp-40h] +
jmp loc_421520  +
***
retn   +
***
mov eax [ebp-74h] +
and eax 4 +
jz locret_44D32F  +
and dword ptr [ebp-74h] 0FFFFFFFBh +
lea ecx [ebp-58h] +
jmp loc_421520  +
***
retn   +
***
mov eax [ebp-74h] +
and eax 8 +
jz locret_44D348  +
and dword ptr [ebp-74h] 0FFFFFFF7h +
lea ecx [ebp-28h] +
jmp loc_421520  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F158 +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F19C +
jmp loc_44644A  +
***
lea ecx [ebp-44h] +
jmp loc_421520  +
***
lea ecx [ebp-74h] +
jmp loc_421520  +
***
lea ecx [ebp-0B4h] +
jmp sub_424DF8  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
lea ecx [ebp-5Ch] +
jmp loc_421520  +
***
lea ecx [ebp-74h] +
jmp loc_421520  +
***
lea ecx [ebp-5Ch] +
jmp loc_421520  +
***
lea ecx [ebp-8Ch] +
jmp loc_421520  +
***
lea ecx [ebp-5Ch] +
jmp loc_421520  +
***
lea ecx [ebp-0A4h] +
jmp loc_421520  +
***
lea ecx [ebp-74h] +
jmp loc_421520  +
***
lea ecx [ebp-8Ch] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0BCh] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F1C8 +
jmp loc_44644A  +
***
lea ecx [ebp-1Ch] +
jmp sub_421849  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F250 +
jmp loc_44644A  +
***
lea ecx [ebp-24h] +
jmp sub_421849  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F27C +
jmp loc_44644A  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F2A8 +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2ACh] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F2DC +
jmp loc_44644A  +
***
lea ecx [ebp-4Ch] +
jmp sub_424DF8  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F318 +
jmp loc_44644A  +
***
lea ecx [ebp-40h] +
jmp loc_421520  +
***
lea ecx [ebp-28h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F374 +
jmp loc_44644A  +
***
lea ecx [ebp-3Ch] +
jmp loc_4301FE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F3A8 +
jmp loc_44644A  +
***
lea ecx [ebp-18h] +
jmp loc_4301FE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F408 +
jmp loc_44644A  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F434 +
jmp loc_44644A  +
***
lea ecx [ebp-44h] +
jmp loc_43049D  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
lea ecx [ebp-64h] +
jmp sub_430524  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F494 +
jmp loc_44644A  +
***
lea ecx [ebp-24h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F4D0 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F4FC +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C8h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F554 +
jmp loc_44644A  +
***
lea ecx [ebp-14h] +
jmp sub_42A584  +
***
lea ecx [ebp-2Ch] +
jmp loc_421520  +
***
lea ecx [ebp-4Ch] +
jmp loc_430C16  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F588 +
jmp loc_44644A  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_44D6F6  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
add ecx 50h +
jmp loc_425EF6  +
***
retn   +
***
mov ecx [ebp-14h] +
add ecx 8 +
jmp loc_425B96  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F5C4 +
jmp loc_44644A  +
***
lea ecx [ebp-24h] +
jmp sub_42617B  +
***
lea ecx [ebp-2Ch] +
jmp sub_4228C9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F600 +
jmp loc_44644A  +
***
lea ecx [ebp-28h] +
jmp sub_42617B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F668 +
jmp loc_44644A  +
***
lea ecx [ebp-0D0h] +
jmp loc_430DC0  +
***
lea ecx [ebp-0B4h] +
jmp loc_430DC0  +
***
lea ecx [ebp-98h] +
jmp loc_430DC0  +
***
lea ecx [ebp-7Ch] +
jmp loc_430DC0  +
***
lea ecx [ebp-60h] +
jmp loc_430DC0  +
***
lea ecx [ebp-44h] +
jmp loc_430DC0  +
***
push offset loc_430DC0  +
push 7  +
push 1Ch  +
lea eax [ebp-0D0h] +
push eax  +
call sub_44B080  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D4h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F6C8 +
jmp loc_44644A  +
***
lea ecx [ebp-48h] +
jmp loc_421520  +
***
push offset loc_421520  +
push 2  +
push 1Ch  +
lea eax [ebp-48h] +
push eax  +
call sub_44B080  +
retn   +
***
jmp loc_43116A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F724 +
jmp loc_44644A  +
***
lea ecx [ebp-38h] +
jmp loc_421520  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F760 +
jmp loc_44644A  +
***
jmp loc_43118B  +
***
lea ecx [ebp-1Ch] +
jmp loc_431ACE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F78C +
jmp loc_44644A  +
***
lea ecx [ebp-1Ch] +
jmp loc_431ACE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F7C0 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F7EC +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F844 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F89C +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F8F4 +
jmp loc_44644A  +
***
lea ecx [ebp-18h] +
jmp sub_421849  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44F94C +
jmp loc_44644A  +
***
lea ecx [ebp-3Ch] +
jmp loc_431FC2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44503A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44FAFC +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44FDD0 +
jmp loc_44644A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44503A  +
mov eax offset dword_44FED4 +
jmp loc_44644A  +
***
mov ecx offset dword_452780 +
jmp sub_421992  +
***
mov ecx offset dword_452760 +
jmp sub_421992  +
***
jmp loc_42186D  +
***
mov edi edi +
push esi  +
mov esi dword_453658 +
test esi esi +
jz loc_44D9F1  +
mov eax [esi] +
push edi  +
push 1  +
mov edi [eax] +
mov ecx edi +
call ds:off_454218  +
mov ecx esi +
call edi  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
mov ebx dword_4535FC +
test ebx ebx +
jz loc_44DA68  +
push esi  +
push edi  +
mov edi [ebx+4] +
mov eax [ebx] +
mov dword_4535FC eax +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_454218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_44DA52  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_454218  +
mov ecx edi +
call esi  +
push 8  +
push ebx  +
call sub_445301  +
mov ebx dword_4535FC +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_44DA1F  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ecx offset unk_45346C +
jmp sub_4228C9  +
***
push 0  +
mov eax offset loc_44CE27 +
call sub_445D35  +
and dword ptr [ebp-4] 0 +
jmp loc_44DAC7  +
mov eax dword_453610[ecx*4] +
inc ecx  +
push eax  +
mov dword_452758 ecx +
call ds:DecodePointer  +
mov esi eax +
test esi esi +
jz loc_44DAC7  +
mov ecx esi +
call ds:off_454218  +
call esi  +
mov ecx dword_452758 +
cmp ecx 0Ah +
jb loc_44DAA2  +
call sub_445D0F  +
retn   +
***
mov ecx dword_453478 +
test ecx ecx +
jnz sub_42B816  +
retn   +
***
push offset unk_4536DC  +
call ds:DeleteCriticalSection  +
retn   +
***
mov ecx dword_4536D8 +
test ecx ecx +
jnz sub_42B816  +
retn   +
***
push offset unk_453704  +
call ds:DeleteCriticalSection  +
retn   +
***
push offset loc_421520  +
push 5  +
push 18h  +
push offset unk_4527A0  +
call sub_44B080  +
retn   +
***
jmp loc_43118B  +
***
jmp loc_43116A  +
***
mov ecx offset dword_45348C +
jmp sub_431DC2  +
***
mov off_4511C8 offset off_402AF4 +
retn   +
***
add eax 8000000h +
retn 44h  +
***
