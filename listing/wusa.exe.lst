mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_102151E  +
test [ebp+arg_0] 1 +
jz loc_101BCDF  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call ds:GetLastError  +
test eax eax +
jle locret_101BCFF  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_101BD1E  +
push eax  +
call ds:CloseHandle  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_101BD41  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_101BD64  +
push eax  +
call ds:RegCloseKey  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
cmp dword ptr [ebp+0Ch] 11h +
jz loc_101BE68  +
cmp dword ptr [ebp+0Ch] 16h +
jz loc_101BD9D  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
jmp locret_101BE84  +
push esi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push offset aWm_endsessionR  +
push 75h  +
push offset aBlockshutdownw  +
call sub_102399F  +
xor esi esi +
add esp 14h +
cmp [ebp+10h] esi +
jz loc_101BE27  +
push edi  +
cmp dword_103416C esi +
jz loc_101BDF2  +
mov edi dword_1034120 +
cmp dword_10340E0 esi +
jz loc_101BDE5  +
call ds:GetCommandLineW  +
push eax  +
push edi  +
call sub_1023653  +
jmp loc_101BDF2  +
call ds:GetCommandLineW  +
push eax  +
push edi  +
call sub_10233E2  +
push ebx  +
mov ebx 4FFh +
push ebx  +
push 0FFFFFFFFh  +
push esi  +
mov esi ds:MsgWaitForMultipleObjects +
mov edi offset unk_10340BC +
jmp loc_101BE5D  +
cmp eax 1 +
jz loc_101BE44  +
push offset aFailed_Unexpec  +
push 0A8h  +
push offset aBlockshutdownw  +
call sub_102399F  +
add esp 0Ch +
pop ebx  +
pop edi  +
pop esi  +
jmp loc_101BE82  +
cmp dword ptr [ebp-18h] 16h +
jz loc_101BE44  +
lea eax [ebp-1Ch] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp-1Ch] +
push eax  +
call ds:DispatchMessageW  +
push 1  +
xor eax eax +
push eax  +
push eax  +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call ds:PeekMessageW  +
test eax eax +
jnz loc_101BE2A  +
push ebx  +
push 0FFFFFFFFh  +
push eax  +
push edi  +
push 1  +
call esi  +
test eax eax +
jnz loc_101BE09  +
jmp loc_101BE25  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push offset aWm_queryendses  +
push 70h  +
push offset aBlockshutdownw  +
call sub_102399F  +
add esp 14h +
xor eax eax +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push esi  +
push edi  +
xor esi esi +
push 2Ch  +
lea eax [ebp+var_50.style] +
push esi  +
push eax  +
mov [ebp+dwMessageId] esi +
call memset  +
mov eax hInstance +
mov [ebp+var_50.hInstance] eax +
add esp 0Ch +
lea eax [ebp+var_50] +
mov edi offset aWusahidden +
push eax  +
mov [ebp+var_50.cbSize] 30h +
mov [ebp+var_50.style] 3 +
mov [ebp+var_50.lpfnWndProc] offset loc_101BD6E +
mov [ebp+var_50.lpszClassName] edi +
call ds:RegisterClassExW  +
test ax ax +
jnz loc_101BF0E  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+dwMessageId] eax +
jl loc_101BEF2  +
mov [ebp+dwMessageId] 80004005h +
push offset aFailedToRegist  +
push 0CEh  +
push offset aBlockshutdownt  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101BFFB  +
push esi  +
push hInstance  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 80000000h  +
push lpWindowName  +
push edi  +
push esi  +
call ds:CreateWindowExW  +
mov hWnd eax +
cmp eax esi +
jnz loc_101BF56  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+dwMessageId] eax +
jl loc_101BF4A  +
mov [ebp+dwMessageId] 80004005h +
push offset aFailedToCreate  +
push 0DAh  +
jmp loc_101BEFC  +
push offset dword_10016B8  +
push eax  +
call ds:ShutdownBlockReasonCreate  +
test eax eax +
jnz loc_101BF88  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+dwMessageId] eax +
jl loc_101BF79  +
mov [ebp+dwMessageId] 80004005h +
push offset aFailed_Shutdow  +
push 0DEh  +
jmp loc_101BEFC  +
mov edi ds:MsgWaitForMultipleObjects +
push ebx  +
mov ebx offset unk_10340BC +
jmp loc_101C096  +
cmp eax 1 +
jz loc_101C083  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+dwMessageId] eax +
jl loc_101BFB5  +
mov [ebp+dwMessageId] 80004005h +
push offset aFailed_Unexpec  +
push 0FDh  +
push offset aBlockshutdownt  +
call sub_102399F  +
add esp 0Ch +
push hWnd  +
call ds:ShutdownBlockReasonDestroy  +
pop ebx  +
test eax eax +
jnz loc_101BFFB  +
call ds:GetLastError  +
push eax  +
push offset aFailed_Shutd_0  +
push 10Ah  +
push offset aBlockshutdownt  +
call sub_102399F  +
add esp 10h +
mov eax hWnd +
cmp eax esi +
jz loc_101C033  +
push eax  +
call ds:DestroyWindow  +
test eax eax +
jnz loc_101C02D  +
call ds:GetLastError  +
push eax  +
push offset aWarning_Failur  +
push 113h  +
push offset aBlockshutdownt  +
call sub_102399F  +
add esp 10h +
mov hWnd esi +
mov edi [ebp+dwMessageId] +
cmp edi esi +
jge loc_101C062  +
lea eax [ebp+dwMessageId] +
push eax  +
push edi  +
mov [ebp+dwMessageId] esi +
call sub_101F148  +
push [ebp+dwMessageId]  +
push edi  +
push offset aExitWithErrorC  +
push 119h  +
push offset aBlockshutdownt  +
call sub_102399F  +
add esp 14h +
mov eax edi +
pop edi  +
and eax 0FFFFh +
pop esi  +
leave   +
retn 4  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push 1  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+Msg] +
push eax  +
call ds:PeekMessageW  +
test eax eax +
jnz loc_101C06F  +
push 4FFh  +
push 0FFFFFFFFh  +
push esi  +
push ebx  +
push 1  +
call edi  +
cmp eax esi +
jnz loc_101BF99  +
jmp loc_101BFCC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
push ebx  +
push offset StartAddress  +
push ebx  +
push ebx  +
xor edi edi +
call ds:CreateThread  +
mov dword_10340C0 eax +
cmp eax ebx +
jnz loc_101C12C  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101C0EA  +
mov edi 80004005h +
push esi  +
push offset ThreadId  +
push 130h  +
mov esi offset aBlockshutdown +
push esi  +
call sub_102399F  +
add esp 0Ch +
cmp edi ebx +
jge loc_101C12B  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
mov [ebp+var_4] ebx +
call sub_101F148  +
push [ebp+var_4]  +
push edi  +
push offset aExitWithErrorC  +
push 134h  +
push esi  +
call sub_102399F  +
add esp 14h +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 2  +
push ebx  +
xor edi edi +
mov dword ptr [ebp+lpPathName] ebx +
mov [ebp+pv] ebx +
call ds:CoInitializeEx  +
cmp eax ebx +
mov [ebp+var_C] eax +
mov esi offset aExpandworker +
jge loc_101C179  +
push offset aFailedToInitia  +
push 1F1h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101C2CE  +
push offset aStartOfExtract  +
push 1F4h  +
push esi  +
mov [ebp+var_C] ebx +
call sub_102399F  +
add esp 0Ch +
push ebx  +
push ebx  +
push 402h  +
call sub_101F75A  +
push dword_103411C  +
lea eax [ebp+lpPathName] +
push eax  +
call sub_1025256  +
mov edi eax +
cmp edi ebx +
jge loc_101C1BC  +
push offset aFailedToAlloca  +
push 1F9h  +
jmp loc_101C16B  +
mov eax dword ptr [ebp+lpPathName] +
cmp [eax] bx +
jnz loc_101C24E  +
push 104h  +
lea eax [ebp+lpPathName] +
push eax  +
call sub_1024E08  +
mov edi eax +
cmp edi ebx +
jge loc_101C1E8  +
push offset aFailedToReallo  +
push 200h  +
jmp loc_101C16B  +
push 8  +
xor eax eax +
pop ecx  +
lea edi [ebp+bi] +
stos   +
mov eax dword ptr [ebp+lpPathName] +
mov [ebp+bi.pszDisplayName] eax +
lea eax [ebp+bi] +
push eax  +
mov [ebp+bi.ulFlags] 140h +
call ds:SHBrowseForFolderW  +
mov [ebp+pv] eax +
cmp eax ebx +
jnz loc_101C224  +
push offset aFailedUserCanc  +
mov edi 800704C7h +
push 20Ah  +
jmp loc_101C2B7  +
push dword ptr [ebp+lpPathName]  +
push eax  +
call ds:SHGetPathFromIDListW  +
test eax eax +
jnz loc_101C24E  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101C242  +
mov edi 80004005h +
push offset aFailedToGetFol  +
push 20Eh  +
jmp loc_101C2B7  +
push dword ptr [ebp+lpPathName]  +
call sub_102308C  +
mov edi eax +
cmp edi ebx +
jge loc_101C268  +
push offset aFailedToCrea_1  +
push 212h  +
jmp loc_101C2B7  +
push dword ptr [ebp+lpPathName]  +
push offset aCreatedExtract  +
push 214h  +
push esi  +
call sub_102399F  +
add esp 10h +
push dword_1034114  +
push dword ptr [ebp+lpPathName]  +
call sub_101F456  +
mov edi eax +
cmp edi ebx +
jge loc_101C2AD  +
push dword_1034114  +
push offset aFailedToExtrac  +
push 217h  +
push esi  +
call sub_102399F  +
add esp 10h +
jmp loc_101C2C0  +
push offset aEndOfExtract  +
push 219h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
cmp [ebp+pv] ebx +
jz loc_101C2CE  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
cmp dword ptr [ebp+lpPathName] ebx +
jz loc_101C2DE  +
push dword ptr [ebp+lpPathName]  +
call sub_1024DEB  +
mov dword ptr [ebp+lpPathName] ebx +
cmp [ebp+var_C] ebx +
jnz loc_101C2E9  +
call ds:CoUninitialize  +
cmp edi ebx +
jge loc_101C311  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
mov [ebp+var_C] ebx +
call sub_101F148  +
push [ebp+var_C]  +
push edi  +
push offset aExitWithErrorC  +
push 225h  +
push esi  +
call sub_102399F  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_103416C +
mov ecx dword_10340F4 +
push esi  +
xor esi esi +
push edi  +
mov dword ptr [ebp+dwMessageId] esi +
mov [ebp+var_8] esi +
mov edi ecx +
cmp eax esi +
jz loc_101C35A  +
xor edx edx +
cmp dword_1034168 esi +
setl dl  +
dec edx  +
and edx 0FFFFFFF9h +
add edx 0BC9h +
mov [ebp+var_8] edx +
mov edx dword_1034148 +
cmp edx esi +
jnz loc_101C4D7  +
cmp eax esi +
jz loc_101C4D7  +
cmp edi 1 +
jz loc_101C4D7  +
push offset aSeshutdownpriv  +
call sub_101F553  +
cmp eax esi +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_101C396  +
push offset aFailedToSetPri  +
push 5ABh  +
jmp loc_101C3EB  +
cmp edi esi +
jnz loc_101C3A5  +
cmp dword_10340E8 esi +
jnz loc_101C3A5  +
push 4  +
pop edi  +
mov eax edi +
dec eax  +
dec eax  +
push 80020011h  +
jz loc_101C478  +
dec eax  +
jz loc_101C441  +
dec eax  +
jz loc_101C3FD  +
push 1  +
push esi  +
push esi  +
push esi  +
push esi  +
call ds:InitiateSystemShutdownExW  +
test eax eax +
jnz loc_101C407  +
call sub_101BCEB  +
cmp eax esi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_101C3E1  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedToInit_0  +
push 5E4h  +
push offset aRebootifreques  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101C4F1  +
push 2  +
push esi  +
push esi  +
call ds:SHELL32_730  +
push dword_1034120  +
push offset aSucceeded_Rebo  +
push 5E9h  +
push offset aRebootifreques  +
call sub_102399F  +
mov edi dword_1034120 +
add esp 10h +
cmp dword_10340E0 esi +
jz loc_101C4AF  +
call ds:GetCommandLineW  +
push eax  +
push edi  +
call sub_1023653  +
jmp loc_101C4BC  +
push 1  +
push esi  +
push dword_1034138  +
push esi  +
push esi  +
call ds:InitiateSystemShutdownExW  +
test eax eax +
jnz loc_101C407  +
call sub_101BCEB  +
cmp eax esi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_101C469  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedToInit_0  +
push 5CDh  +
jmp loc_101C3EB  +
push 1  +
push 1  +
push esi  +
push esi  +
push esi  +
call ds:InitiateSystemShutdownExW  +
test eax eax +
jnz loc_101C407  +
call sub_101BCEB  +
cmp eax esi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_101C4A0  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedToInit_0  +
push 5BFh  +
jmp loc_101C3EB  +
call ds:GetCommandLineW  +
push eax  +
push edi  +
call sub_10233E2  +
xor eax eax +
cmp dword_1034168 esi +
setl al  +
dec eax  +
and eax 0FFFFFA9Fh +
add eax 0BCAh +
mov [ebp+var_8] eax +
jmp loc_101C4F1  +
push ecx  +
push eax  +
push edx  +
push offset aRebootIsNotSch  +
push 5A6h  +
push offset aRebootifreques  +
call sub_102399F  +
add esp 18h +
cmp dword ptr [ebp+dwMessageId] esi +
jge loc_101C522  +
lea eax [ebp+var_C] +
push eax  +
push dword ptr [ebp+dwMessageId]  +
mov [ebp+var_C] esi +
call sub_101F148  +
push [ebp+var_C]  +
push dword ptr [ebp+dwMessageId]  +
push offset aExitWithErrorC  +
push 5FFh  +
push offset aRebootifreques  +
call sub_102399F  +
add esp 14h +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
push 104h  +
lea eax [ebp+var_20C] +
xor ebx ebx +
push eax  +
mov dword ptr [ebp+lpLibFileName] ebx +
mov [ebp+hLibModule] ebx +
call ds:GetSystemWindowsDirectoryW  +
test eax eax +
jnz loc_101C585  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101C579  +
mov edi 80004005h +
push offset aFailedToGetWin  +
push 622h  +
jmp loc_101C5FD  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+lpLibFileName] +
push eax  +
call sub_1025256  +
mov edi eax +
cmp edi ebx +
jge loc_101C5B3  +
push dword ptr [ebp+lpLibFileName]  +
push offset aFailedToAllo_0  +
push 626h  +
jmp loc_101C645  +
lea eax [ebp+lpLibFileName] +
push eax  +
call sub_10252E0  +
mov edi eax +
cmp edi ebx +
jge loc_101C5D7  +
push dword ptr [ebp+lpLibFileName]  +
push offset aFailedToEnsure  +
push 629h  +
jmp loc_101C645  +
push offset aMsi_dll  +
push offset aSystem32  +
lea eax [ebp+lpLibFileName] +
push eax  +
call sub_102506C  +
mov edi eax +
cmp edi ebx +
jge loc_101C60F  +
push offset aFailedToAllo_1  +
push 62Ch  +
push offset aMsiload  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101C6C6  +
push dword ptr [ebp+lpLibFileName]  +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
cmp eax ebx +
jnz loc_101C654  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101C635  +
mov edi 80004005h +
push dword ptr [ebp+lpLibFileName]  +
push offset aFailedToLoadMs  +
push 62Fh  +
push offset aMsiload  +
call sub_102399F  +
add esp 10h +
jmp loc_101C6C6  +
push esi  +
mov esi ds:GetProcAddress +
push offset ProcName  +
push eax  +
call esi  +
mov dword_10340AC eax +
cmp eax ebx +
jnz loc_101C688  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101C67C  +
mov edi 80004005h +
push offset aFailedToGetPro  +
push 632h  +
jmp loc_101C6B8  +
push offset aMsiconfigurepr  +
push [ebp+hLibModule]  +
call esi  +
mov dword_10340A8 eax +
cmp eax ebx +
jnz loc_101C6C5  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101C6AE  +
mov edi 80004005h +
push offset aFailedToGetP_0  +
push 635h  +
push offset aMsiload  +
call sub_102399F  +
add esp 0Ch +
pop esi  +
cmp edi ebx +
jge loc_101C6EA  +
mov dword_10340AC ebx +
mov dword_10340A8 ebx +
cmp [ebp+hLibModule] ebx +
jz loc_101C6EA  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
cmp dword ptr [ebp+lpLibFileName] ebx +
jz loc_101C6FD  +
push dword ptr [ebp+lpLibFileName]  +
call sub_1024DEB  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 0D60000h  +
push offset unk_1034010  +
call WinSqmStartSession  +
mov esi eax +
mov eax dword_1034114 +
test eax eax +
jnz loc_101C73D  +
mov eax dword_103412C +
test eax eax +
jz loc_101C749  +
push eax  +
push 10BEh  +
push esi  +
call WinSqmSetString  +
push [ebp+arg_0]  +
push 10BFh  +
push esi  +
call WinSqmSetDWORD  +
push dword_10340F8  +
push 10BDh  +
push esi  +
call WinSqmSetDWORD  +
push esi  +
call WinSqmEndSession  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101C78E  +
cmp ecx 7FFFFFFFh +
jbe loc_101C793  +
mov eax 80070057h +
test eax eax +
jl loc_101C7D0  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101C7C0  +
cmp eax esi +
ja loc_101C7C0  +
jnz loc_101C7CB  +
jmp loc_101C7C5  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test ecx ecx +
jz loc_101C823  +
mov eax [ebp+arg_4] +
cmp eax 7FFFFFFFh +
ja loc_101C823  +
push edi  +
xor edi edi +
mov edx eax +
test eax eax +
jz loc_101C808  +
cmp [ecx] di +
jz loc_101C804  +
inc ecx  +
inc ecx  +
dec edx  +
jnz loc_101C7FA  +
test edx edx +
jnz loc_101C80D  +
mov edi 80070057h +
test esi esi +
jz loc_101C81E  +
test edi edi +
jl loc_101C81B  +
sub eax edx +
mov [esi] eax +
jmp loc_101C81E  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
jmp loc_101C828  +
mov eax 80070057h +
test eax eax +
jge loc_101C833  +
test esi esi +
jz loc_101C833  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [ebp+10h] +
test ebx ebx +
jnz loc_101C86C  +
push offset aInvalidArgumen  +
push 31h  +
push offset aWuacallbackimp  +
mov dword ptr [ebp-4] 80070057h +
call sub_102399F  +
add esp 0Ch +
jmp loc_101C8A9  +
and dword ptr [ebx] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1001BA4 +
xor eax eax +
cmps   +
jz loc_101C893  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_1001B94 +
xor eax eax +
cmps   +
jnz loc_101C8A0  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov [ebx] esi +
jmp loc_101C8A7  +
mov dword ptr [ebp-4] 80004002h +
pop edi  +
pop esi  +
mov eax [ebp-4] +
pop ebx  +
leave   +
retn 0Ch  +
***
xor eax eax +
inc eax  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push esi  +
xor esi esi +
push edi  +
lea edx [ebp+var_244] +
push edx  +
push eax  +
mov [ebp+var_248] eax +
mov [ebp+var_244] esi +
mov [ebp+var_210] esi +
mov [ebp+var_224] esi +
mov [ebp+var_218] esi +
mov [ebp+ppv] esi +
mov [ebp+var_21C] esi +
mov [ebp+var_220] esi +
mov dword ptr [ebp+var_23C] esi +
mov dword ptr [ebp+var_228] esi +
mov [ebp+var_238] esi +
call dword ptr [ecx+28h]  +
mov edi eax +
cmp edi esi +
mov ebx offset aCopytocache +
jge loc_101C947  +
push offset aFailedToGetCou  +
push 155h  +
jmp loc_101CDA2  +
cmp [ebp+var_244] esi +
mov [ebp+var_230] esi +
jle loc_101CDC1  +
mov eax [ebp+var_248] +
mov ecx [eax] +
lea edx [ebp+var_210] +
push edx  +
push [ebp+var_230]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi esi +
jl loc_101CCDD  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+var_23C] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi esi +
jl loc_101CCEC  +
cmp dword_10340E8 esi +
jz loc_101C9BA  +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0BCh]  +
mov edi eax +
cmp edi esi +
jl loc_101CCFB  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+var_218] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
cmp edi esi +
jl loc_101CD0A  +
mov eax [ebp+var_218] +
lea edx [ebp+var_22C] +
push edx  +
mov [ebp+var_22C] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
cmp [ebp+var_22C] esi +
jle loc_101CA35  +
push dword ptr [ebp+var_23C]  +
push offset aFoundABundleOf  +
push 175h  +
push ebx  +
call sub_102399F  +
add esp 10h +
push [ebp+var_218]  +
call sub_101C8C1  +
mov edi eax +
cmp edi esi +
jge loc_101CC88  +
push offset aFailedToRecurs  +
push 179h  +
jmp loc_101CDA2  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+var_224] +
push edx  +
push offset dword_1001F10  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi esi +
jl loc_101CD19  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push esi  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi esi +
jl loc_101CD25  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+var_21C] +
push edx  +
push eax  +
call dword ptr [ecx+0CCh]  +
mov edi eax +
cmp edi esi +
jl loc_101CD31  +
mov eax [ebp+var_21C] +
lea edx [ebp+var_240] +
push edx  +
mov [ebp+var_240] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
cmp edi esi +
jl loc_101CD3D  +
cmp [ebp+var_240] esi +
mov [ebp+var_234] esi +
jle loc_101CC1B  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
lea edx [ebp+var_220] +
push edx  +
push [ebp+var_234]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi esi +
jl loc_101CD49  +
mov eax [ebp+var_220] +
mov ecx [eax] +
lea edx [ebp+var_228] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi esi +
jl loc_101CD55  +
push dword ptr [ebp+var_228]  +
push offset aDownloadUrlS  +
push 195h  +
push ebx  +
call sub_102399F  +
push 2Fh  +
push dword ptr [ebp+var_228]  +
call ds:wcsrchr  +
mov edi eax +
add esp 18h +
cmp edi esi +
jz loc_101CD61  +
inc edi  +
inc edi  +
push edi  +
push offset aDownloadFileS  +
push 1A1h  +
push ebx  +
call sub_102399F  +
push edi  +
push dword_1034118  +
lea eax [ebp+var_20C] +
push offset aLsLs  +
push 104h  +
push eax  +
call sub_101C778  +
mov edi eax +
add esp 24h +
cmp edi esi +
jl loc_101CD72  +
lea eax [ebp+var_20C] +
push eax  +
push offset aReadyToCopySTo  +
push 1A8h  +
push ebx  +
call sub_102399F  +
add esp 10h +
lea eax [ebp+var_20C] +
push eax  +
call ds:SysAllocString  +
mov [ebp+var_238] eax +
cmp eax esi +
jz loc_101CD7E  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_24C] +
push edx  +
push [ebp+var_238]  +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
cmp edi esi +
jl loc_101CD98  +
mov eax [ebp+var_220] +
cmp eax esi +
jz loc_101CBEB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_220] esi +
lea eax [ebp+var_228] +
push eax  +
call sub_101BD28  +
lea eax [ebp+var_238] +
push eax  +
call sub_101BD28  +
inc [ebp+var_234]  +
mov eax [ebp+var_234] +
cmp eax [ebp+var_240] +
jl loc_101CACF  +
push esi  +
push esi  +
push 401h  +
call sub_101F75A  +
mov eax [ebp+var_224] +
push [ebp+ppv]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0DCh]  +
mov edi eax +
cmp edi esi +
jl loc_101CDAD  +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_101CC5C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] esi +
mov eax [ebp+var_224] +
cmp eax esi +
jz loc_101CC72  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_224] esi +
mov eax [ebp+var_21C] +
cmp eax esi +
jz loc_101CC88  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_21C] esi +
lea eax [ebp+var_23C] +
push eax  +
call sub_101BD28  +
mov eax [ebp+var_210] +
cmp eax esi +
jz loc_101CCAA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_210] esi +
mov eax [ebp+var_218] +
cmp eax esi +
jz loc_101CCC0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_218] esi +
inc [ebp+var_230]  +
mov eax [ebp+var_230] +
cmp eax [ebp+var_244] +
jl loc_101C959  +
jmp loc_101CDC1  +
push offset aFailedToGetUpd  +
push 15Bh  +
jmp loc_101CDA2  +
push offset aFailedToGetU_0  +
push 15Eh  +
jmp loc_101CDA2  +
push offset aFailedToAccept  +
push 163h  +
jmp loc_101CDA2  +
push offset aFailedToGetU_1  +
push 16Dh  +
jmp loc_101CDA2  +
push offset aFailedToGetIup  +
push 180h  +
jmp loc_101CDA2  +
push offset aFailedToGetIst  +
push 184h  +
jmp loc_101CDA2  +
push offset aFailedToGetDow  +
push 187h  +
jmp loc_101CDA2  +
push offset aFailedToGetD_0  +
push 18Ch  +
jmp loc_101CDA2  +
push offset aFailedToGetD_1  +
push 191h  +
jmp loc_101CDA2  +
push offset aFailedToGetD_2  +
push 194h  +
jmp loc_101CDA2  +
push offset aCanTFindFileNa  +
mov edi 80004005h +
push 19Ch  +
jmp loc_101CDA2  +
push offset aFailedToBuildU  +
push 1A6h  +
jmp loc_101CDA2  +
push offset aFailedToAllo_2  +
push 1ABh  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov edi 8007000Eh +
jmp loc_101CDC1  +
push offset aFailedToAddFil  +
push 1AFh  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101CDC1  +
push edi  +
push offset aFailedToCopyTo  +
push 1BEh  +
push ebx  +
call sub_102399F  +
add esp 10h +
lea eax [ebp+var_23C] +
push eax  +
call sub_101BD28  +
lea eax [ebp+var_238] +
push eax  +
call sub_101BD28  +
lea eax [ebp+var_228] +
push eax  +
call sub_101BD28  +
mov eax [ebp+var_21C] +
cmp eax esi +
jz loc_101CDFB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_21C] esi +
mov eax [ebp+var_220] +
cmp eax esi +
jz loc_101CE11  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_220] esi +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_101CE27  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] esi +
mov eax [ebp+var_210] +
cmp eax esi +
jz loc_101CE3D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_210] esi +
mov eax [ebp+var_224] +
cmp eax esi +
jz loc_101CE53  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_224] esi +
mov eax [ebp+var_218] +
cmp eax esi +
jz loc_101CE69  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_218] esi +
cmp edi esi +
jge loc_101CE9A  +
lea eax [ebp+var_22C] +
push eax  +
push edi  +
mov [ebp+var_22C] esi +
call sub_101F148  +
push [ebp+var_22C]  +
push edi  +
push offset aExitWithErrorC  +
push 1D8h  +
push ebx  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 47Ch +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+hFindFile] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
xor eax eax +
push 206h  +
xor ebx ebx +
mov word ptr [ebp+lParam] ax +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
xor edi edi +
call memset  +
push 24Ch  +
lea eax [ebp+FindFileData.ftCreationTime] +
push ebx  +
push eax  +
mov [ebp+FindFileData.dwFileAttributes] ebx +
call memset  +
add esp 18h +
push ebx  +
push ebx  +
mov [ebp+var_464] ebx +
mov [ebp+var_470] ebx +
call ds:CoInitializeEx  +
cmp eax ebx +
mov [ebp+var_468] eax +
jge loc_101CF46  +
push offset aFailedToInitia  +
push 24Bh  +
mov esi offset aUninstallworke +
push esi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101D565  +
push 218h  +
mov [ebp+var_468] ebx +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax ebx +
jz loc_101CF70  +
push dword_1034118  +
mov ecx eax +
call sub_10218F0  +
mov [ebp+var_460] eax +
jmp loc_101CF76  +
mov [ebp+var_460] ebx +
cmp [ebp+var_460] ebx +
jnz loc_101CFA0  +
push offset aFailedToCrea_2  +
push 24Fh  +
mov esi offset aUninstallworke +
push esi  +
call sub_102399F  +
add esp 0Ch +
mov edi 8007000Eh +
jmp loc_101D56D  +
push ebx  +
push ebx  +
cmp dword_1034114 ebx +
jz loc_101D1B3  +
push 404h  +
call sub_101F75A  +
push dword_1034114  +
push dword_1034118  +
call sub_101F456  +
mov edi eax +
cmp edi ebx +
jge loc_101CFE9  +
push dword_1034114  +
mov esi offset aUninstallworke +
push offset aFailedToExtrac  +
push 25Ah  +
jmp loc_101D297  +
push ebx  +
push ebx  +
push 400h  +
call sub_101F75A  +
push dword_1034118  +
lea eax [ebp+lParam] +
push offset aS_cab  +
push 104h  +
push eax  +
call sub_101C778  +
mov edi eax +
add esp 10h +
cmp edi ebx +
mov esi offset aUninstallworke +
jge loc_101D034  +
push dword_1034118  +
push offset aFailedToBuildA  +
push 263h  +
jmp loc_101D297  +
push offset aStartOfSearch  +
push 265h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+lParam] +
push eax  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_101D08C  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101D076  +
mov edi 80004005h +
lea eax [ebp+lParam] +
push eax  +
push offset aFailedFindfirs  +
push 268h  +
jmp loc_101D297  +
push offset String2  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_101D0E4  +
cmp [ebp+var_464] ebx +
jnz loc_101D13C  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword_1034118  +
lea eax [ebp+lParam] +
push offset aSS  +
push 104h  +
push eax  +
call sub_101C778  +
mov edi eax +
add esp 14h +
cmp edi ebx +
jl loc_101D150  +
mov [ebp+var_464] 1 +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_101D08C  +
push offset aEndOfSearch  +
push 27Eh  +
push esi  +
call sub_102399F  +
add esp 0Ch +
call ds:GetLastError  +
cmp eax 12h +
jz loc_101D165  +
cmp eax ebx +
jle loc_101D127  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
cmp edi ebx +
jge loc_101D165  +
push offset aFailedFindnext  +
push 284h  +
jmp loc_101D42F  +
push offset aFailed_MoreTha  +
mov edi 8000FFFFh +
push 274h  +
jmp loc_101D53A  +
push dword_1034118  +
push offset aFailedToBuil_0  +
push 278h  +
jmp loc_101D297  +
cmp [ebp+var_464] ebx +
jnz loc_101D181  +
push offset aFailed_NoPacka  +
mov edi 8000FFFFh +
push 28Ah  +
jmp loc_101D53A  +
mov ecx [ebp+var_460] +
lea eax [ebp+lParam] +
push eax  +
call sub_1021553  +
mov edi eax +
cmp edi ebx +
jge loc_101D266  +
lea eax [ebp+lParam] +
push eax  +
push offset aFailedCreatepa  +
push 292h  +
jmp loc_101D297  +
push 400h  +
call sub_101F75A  +
push offset aStartOfSearch  +
push 298h  +
mov esi offset aUninstallworke +
push esi  +
call sub_102399F  +
mov ecx [ebp+var_460] +
add esp 0Ch +
push dword_103412C  +
call sub_102163B  +
mov edi eax +
cmp edi ebx +
jge loc_101D201  +
push dword_103412C  +
push offset aFailedOpenpack  +
push 29Bh  +
jmp loc_101D297  +
push offset aEndOfSearch  +
push 29Dh  +
push esi  +
call sub_102399F  +
add esp 0Ch +
cmp edi 240007h +
jnz loc_101D266  +
push offset aUpdateIsNotIns  +
push 2A1h  +
push esi  +
call sub_102399F  +
push dword_103412C  +
push ebx  +
push ebx  +
push 0EA60h  +
push 0EA68h  +
call sub_101F975  +
add esp 20h +
test eax eax +
jge loc_101D558  +
push offset aFailedToDispla  +
push 2A5h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101D558  +
mov ecx [ebp+var_460] +
push ebx  +
lea eax [ebp+var_470] +
push eax  +
lea eax [ebp+var_478] +
push eax  +
call sub_1020FE6  +
mov edi eax +
cmp edi ebx +
jge loc_101D2A5  +
lea eax [ebp+lParam] +
push eax  +
push offset aFailedGetstate  +
push 2B1h  +
push esi  +
call sub_102399F  +
add esp 10h +
jmp loc_101D4FA  +
cmp [ebp+var_478] 6 +
jge loc_101D2FF  +
push offset aUpdateIsNotIns  +
push 2B5h  +
push esi  +
call sub_102399F  +
mov eax [ebp+var_460] +
push dword ptr [eax+214h]  +
push ebx  +
push ebx  +
push 0EA60h  +
push 0EA6Fh  +
call sub_101F975  +
add esp 20h +
test eax eax +
jge loc_101D2F5  +
push offset aFailedToDispla  +
push 2B9h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
mov edi 240007h +
jmp loc_101D543  +
cmp [ebp+var_478] 7 +
jg loc_101D4AE  +
cmp [ebp+var_470] ebx +
jnz loc_101D4AE  +
mov eax [ebp+var_460] +
mov eax [eax+214h] +
push offset dword_1034120  +
push eax  +
mov ecx offset hInstance +
call sub_102011F  +
mov edi eax +
cmp edi ebx +
jge loc_101D349  +
push offset aFailedToSetUpd  +
push 2D1h  +
jmp loc_101D42F  +
mov eax [ebp+var_460] +
mov [ebp+var_474] 6 +
push dword ptr [eax+214h]  +
lea eax [ebp+var_474] +
push eax  +
push 4  +
push 0EA60h  +
push 0EA71h  +
call sub_101F975  +
mov edi eax +
add esp 14h +
cmp edi ebx +
jge loc_101D38F  +
push offset aFailedToDisp_0  +
push 2D6h  +
jmp loc_101D42F  +
cmp [ebp+var_474] 7 +
jnz loc_101D3AC  +
push offset aFailedUserCa_0  +
mov edi 800704C7h +
push 2DBh  +
jmp loc_101D53A  +
push offset aStartOfUninsta  +
push 2E4h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
push ebx  +
push ebx  +
push 405h  +
call sub_101F75A  +
call sub_101C0B5  +
mov edi eax +
cmp edi ebx +
jge loc_101D3E2  +
push offset aFailedToBlockO  +
push 2E9h  +
jmp loc_101D42F  +
mov ecx [ebp+var_460] +
lea eax [ebp+var_47C] +
push eax  +
push ebx  +
call sub_10219D1  +
mov edi eax +
cmp edi 800F0820h +
jnz loc_101D41B  +
cmp dword_1034104 ebx +
jz loc_101D41B  +
push offset aFailedUserCa_0  +
mov edi 800704C7h +
push 2EFh  +
jmp loc_101D53A  +
cmp edi ebx +
mov dword_1034168 edi +
jge loc_101D43D  +
push offset aFailedToUninst  +
push 2F4h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101D4FA  +
push offset aEndOfUninstall  +
push 2F7h  +
push esi  +
call sub_102399F  +
xor eax eax +
inc eax  +
add esp 0Ch +
cmp [ebp+var_47C] eax +
jnz loc_101D49E  +
mov dword_103416C eax +
mov eax [ebp+var_460] +
push dword ptr [eax+210h]  +
push offset aRebootWasRequi  +
push 2FCh  +
push esi  +
call sub_102399F  +
mov eax dword_1034120 +
add esp 10h +
mov [ebp+var_464] eax +
call ds:GetCommandLineW  +
push eax  +
push [ebp+var_464]  +
call sub_10235C5  +
jmp loc_101D4FA  +
cmp dword_10340F4 2 +
jnz loc_101D4FA  +
mov dword_103416C eax +
jmp loc_101D4FA  +
push offset aUpdateDoesNotS  +
push 2C1h  +
push esi  +
call sub_102399F  +
mov eax [ebp+var_460] +
push dword ptr [eax+214h]  +
push ebx  +
push ebx  +
push 0EA60h  +
push 0EA70h  +
call sub_101F975  +
add esp 20h +
test eax eax +
jge loc_101D4F5  +
push offset aFailedToDisp_1  +
push 2C5h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
mov edi 80242004h +
cmp edi 80240037h +
jnz loc_101D543  +
push offset aPackageTypeIsN  +
push 308h  +
push esi  +
call sub_102399F  +
push dword_103412C  +
push ebx  +
push ebx  +
push 0EA60h  +
push 0EA7Dh  +
call sub_101F975  +
add esp 20h +
test eax eax +
jge loc_101D543  +
push offset aFailedToDisp_2  +
push 30Ch  +
push esi  +
call sub_102399F  +
add esp 0Ch +
cmp [ebp+hFindFile] 0FFFFFFFFh +
jz loc_101D558  +
push [ebp+hFindFile]  +
call ds:FindClose  +
mov ecx [ebp+var_460] +
push 1  +
call sub_101BCC5  +
cmp [ebp+var_468] ebx +
jnz loc_101D573  +
call ds:CoUninitialize  +
cmp edi ebx +
jge loc_101D5A4  +
lea eax [ebp+var_468] +
push eax  +
push edi  +
mov [ebp+var_468] ebx +
call sub_101F148  +
push [ebp+var_468]  +
push edi  +
push offset aExitWithErrorC  +
push 31Fh  +
push esi  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
xor esi esi +
mov [ebp+ppv] edi +
mov dword ptr [ebp+var_1E0] edi +
mov [ebp+var_1B4] edi +
mov dword ptr [ebp+var_1A4] edi +
mov dword ptr [ebp+var_1B0] edi +
mov [ebp+var_1B8] edi +
mov [ebp+var_1A0] edi +
mov dword ptr [ebp+var_1CC] edi +
mov dword ptr [ebp+var_1A8] edi +
mov dword ptr [ebp+var_1D8] edi +
mov [ebp+var_1D0] edi +
mov [ebp+var_1BC] edi +
mov [ebp+var_1F0] edi +
mov dword ptr [ebp+var_1AC] edi +
mov [ebp+var_1EC] edi +
mov dword ptr [ebp+var_19C] edi +
mov [ebp+hKey] edi +
mov [ebp+var_1F4] edi +
call ds:CoInitializeEx  +
cmp eax edi +
mov [ebp+var_1D4] eax +
jge loc_101D673  +
push offset aFailedToInitia  +
push 355h  +
mov ebx offset aInstallworker +
push ebx  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101E11D  +
push edi  +
push edi  +
push 403h  +
mov [ebp+var_1D4] edi +
call sub_101F75A  +
push dword_1034114  +
push dword_1034118  +
call sub_101F456  +
mov esi eax +
cmp esi edi +
jge loc_101D6B6  +
push dword_1034114  +
mov ebx offset aInstallworker +
push offset aFailedToExtrac  +
push 35Fh  +
jmp loc_101E114  +
mov ebx ds:CoCreateInstance +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1002C9C  +
push 1  +
push edi  +
push offset stru_1002C8C  +
call ebx  +
mov esi eax +
cmp esi edi +
jge loc_101D6E7  +
push offset aFailedToGetI_0  +
push 36Ah  +
jmp loc_101D660  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_1E0] +
push edx  +
push edi  +
push dword_103410C  +
push lpWindowName  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
cmp esi edi +
jge loc_101D71C  +
push offset aFailedToAddSca  +
push 371h  +
jmp loc_101D660  +
mov eax dword ptr [ebp+var_1E0] +
mov ecx [eax] +
lea edx [ebp+var_1AC] +
push edx  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov esi eax +
cmp esi edi +
jge loc_101D744  +
push offset aFailedToGetSer  +
push 374h  +
jmp loc_101D660  +
lea eax [ebp+var_1B4] +
push eax  +
push offset stru_1002BF4  +
push 1  +
push edi  +
push offset stru_1002BE4  +
call ebx  +
mov esi eax +
cmp esi edi +
jge loc_101D76F  +
push offset aFailedToGetI_1  +
push 37Ah  +
jmp loc_101D660  +
mov ebx ds:SysAllocString +
push offset aWusa  +
call ebx  +
mov [ebp+var_1F0] eax +
cmp eax edi +
jnz loc_101D7A8  +
push offset aFailedToAllo_3  +
push 37Dh  +
mov ebx offset aInstallworker +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov esi 8007000Eh +
jmp loc_101E11D  +
mov eax [ebp+var_1B4] +
push [ebp+var_1F0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_101D7CF  +
push offset aFailedToSetCli  +
push 380h  +
jmp loc_101D660  +
mov eax [ebp+var_1B4] +
mov ecx [eax] +
lea edx [ebp+var_1A4] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
cmp esi edi +
jge loc_101D7F7  +
push offset aFailedToCrea_3  +
push 38Eh  +
jmp loc_101D660  +
mov eax dword ptr [ebp+var_1A4] +
mov ecx [eax] +
push 3  +
push eax  +
call dword ptr [ecx+38h]  +
mov esi eax +
cmp esi edi +
jge loc_101D81A  +
push offset aFailedToSetOff  +
push 392h  +
jmp loc_101D660  +
mov eax dword ptr [ebp+var_1A4] +
push dword ptr [ebp+var_1AC]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+60h]  +
mov esi eax +
cmp esi edi +
jge loc_101D841  +
push offset aFailedToSetThe  +
push 398h  +
jmp loc_101D660  +
mov eax offset aIsassigned1And +
cmp dword ptr [ebp+var_1AC] edi +
jz loc_101D853  +
mov eax offset dword_10016B8 +
push eax  +
push offset aLsdeploymentac  +
lea eax [ebp+var_194] +
push 0C8h  +
push eax  +
call sub_101C778  +
mov esi eax +
add esp 10h +
cmp esi edi +
jge loc_101D882  +
push offset aFailedToBuildS  +
push 39Eh  +
jmp loc_101D660  +
lea eax [ebp+var_194] +
push eax  +
call ebx  +
mov [ebp+var_1EC] eax +
mov ebx offset aInstallworker +
cmp eax edi +
jnz loc_101D8A9  +
push offset aFailedToAllo_4  +
push 3A1h  +
jmp loc_101D795  +
push offset aStartOfSearch  +
push 3A3h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
and [ebp+var_1FC] edi +
mov eax dword ptr [ebp+var_1A4] +
mov ecx [eax] +
lea edx [ebp+var_1FC] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
push offset off_1034020  +
push [ebp+var_1EC]  +
movs   +
push eax  +
movs   +
call dword ptr [ecx+3Ch]  +
mov esi eax +
test esi esi +
jge loc_101D911  +
push offset aFailedToBeginS  +
push 3AEh  +
jmp loc_101D665  +
mov eax [ebp+var_1FC] +
xor edi edi +
push edi  +
push edi  +
push 400h  +
mov dword_1034170 eax +
call sub_101F75A  +
mov eax dword ptr [ebp+var_1A4] +
mov ecx [eax] +
lea edx [ebp+var_1B8] +
push edx  +
push [ebp+var_1FC]  +
push eax  +
call dword ptr [ecx+40h]  +
mov esi eax +
cmp esi edi +
jge loc_101D958  +
push offset aFailedToEndSea  +
push 3B6h  +
jmp loc_101D665  +
push offset aEndOfSearch  +
push 3B8h  +
push ebx  +
call sub_102399F  +
mov eax [ebp+var_1B8] +
add esp 0Ch +
lea edx [ebp+var_1E8] +
push edx  +
mov [ebp+var_1E8] 4 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi edi +
jge loc_101D99D  +
push offset aFailedToGetSea  +
push 3BEh  +
jmp loc_101D665  +
mov eax [ebp+var_1E8] +
dec eax  +
dec eax  +
jz loc_101DA92  +
dec eax  +
jz loc_101D9C0  +
dec eax  +
dec eax  +
jnz loc_101DA8D  +
mov esi 800704C7h +
jmp loc_101DA96  +
mov eax [ebp+var_1B8] +
mov ecx [eax] +
lea edx [ebp+var_1D0] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi edi +
jge loc_101D9E8  +
push offset aFailedToGetS_0  +
push 3D4h  +
jmp loc_101D665  +
mov eax [ebp+var_1D0] +
mov ecx [eax] +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi edi +
jge loc_101DA10  +
push offset aFailedToGetWar  +
push 3D7h  +
jmp loc_101D665  +
cmp [ebp+var_20C] edi +
mov [ebp+var_198] edi +
jle loc_101DA8D  +
mov eax [ebp+var_1BC] +
cmp eax edi +
jz loc_101DA34  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1BC] edi +
mov eax [ebp+var_1D0] +
mov ecx [eax] +
lea edx [ebp+var_1BC] +
push edx  +
push [ebp+var_198]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi edi +
jl loc_101DAAB  +
mov eax [ebp+var_1BC] +
mov ecx [eax] +
lea edx [ebp+var_208] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jl loc_101DABA  +
mov esi 80242017h +
cmp [ebp+var_208] esi +
jz loc_101DAC9  +
inc [ebp+var_198]  +
mov eax [ebp+var_198] +
cmp eax [ebp+var_20C] +
jl loc_101DA1E  +
mov esi 80004005h +
cmp esi edi +
jge loc_101DAD8  +
push [ebp+var_1E8]  +
push offset aFailed_SearchR  +
push 3F4h  +
jmp loc_101E114  +
push offset aFailedToGetW_0  +
push 3E0h  +
jmp loc_101D665  +
push offset aFailedToGetW_1  +
push 3E3h  +
jmp loc_101D665  +
push offset aUpdateRequires  +
push 3EAh  +
jmp loc_101D665  +
mov eax [ebp+var_1B8] +
mov ecx [eax] +
lea edx [ebp+var_1A8] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi edi +
jge loc_101DB00  +
push offset aFailedToGetU_2  +
push 3F7h  +
jmp loc_101D665  +
mov eax dword ptr [ebp+var_1A8] +
mov ecx [eax] +
lea edx [ebp+var_1F4] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi edi +
jge loc_101DB28  +
push offset aFailedToGetC_0  +
push 3FAh  +
jmp loc_101D665  +
cmp [ebp+var_1F4] 1 +
jle loc_101DB45  +
push offset aThereShouldBeO  +
mov esi 80004005h +
push 3FFh  +
jmp loc_101D665  +
cmp [ebp+var_1F4] edi +
jg loc_101DB92  +
push offset aThereIsNoUpdat  +
push 404h  +
push ebx  +
call sub_102399F  +
push edi  +
push edi  +
push 0EA60h  +
push 0EA64h  +
call sub_101F975  +
add esp 1Ch +
test eax eax +
jge loc_101DB88  +
push offset aFailedToDisp_3  +
push 408h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov esi 80240017h +
jmp loc_101E11D  +
mov eax dword ptr [ebp+var_1A8] +
mov ecx [eax] +
lea edx [ebp+var_1D8] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi edi +
jge loc_101DBBB  +
push offset aFailedToGetUpd  +
push 410h  +
jmp loc_101D665  +
mov eax dword ptr [ebp+var_1D8] +
mov ecx [eax] +
lea edx [ebp+var_19C] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi edi +
jge loc_101DBE3  +
push offset aFailedToGetU_0  +
push 413h  +
jmp loc_101D665  +
mov eax dword ptr [ebp+var_1D8] +
mov ecx [eax] +
lea edx [ebp+var_200] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jge loc_101DC0B  +
push offset aFailedToQueryW  +
push 417h  +
jmp loc_101D665  +
cmp word ptr [ebp+var_200] 0FFFFh +
jnz loc_101DC60  +
push offset aUpdateIsAlread  +
push 41Bh  +
push ebx  +
call sub_102399F  +
push dword ptr [ebp+var_19C]  +
push edi  +
push edi  +
push 0EA60h  +
push 0EA6Eh  +
call sub_101F975  +
add esp 20h +
test eax eax +
jge loc_101DC56  +
push offset aFailedToDisp_4  +
push 41Fh  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov esi 240006h +
jmp loc_101E11D  +
push offset dword_1034120  +
push dword ptr [ebp+var_19C]  +
mov edi offset hInstance +
mov ecx edi +
call sub_102011F  +
mov esi eax +
test esi esi +
jge loc_101DC8C  +
push offset aFailedToSetUpd  +
push 42Bh  +
jmp loc_101D665  +
push dword ptr [ebp+var_19C]  +
lea eax [ebp+var_210] +
push eax  +
push 4  +
push 0EA60h  +
push 0EA66h  +
mov [ebp+var_210] 6 +
call sub_101F975  +
mov esi eax +
add esp 14h +
test esi esi +
jge loc_101DCCC  +
push offset aFailedToDisp_0  +
push 430h  +
jmp loc_101D665  +
cmp [ebp+var_210] 7 +
jnz loc_101DCE9  +
push offset aFailedUserCa_1  +
mov esi 800704C7h +
push 435h  +
jmp loc_101D665  +
push offset aStartingToCopy  +
push 43Ch  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
push dword ptr [ebp+var_1A8]  +
call sub_101C8C1  +
mov esi eax +
test esi esi +
jge loc_101DD1C  +
push offset aFailedToCopyTh  +
push 43Fh  +
jmp loc_101D665  +
mov ecx edi +
call sub_101FBDF  +
push offset aEndOfCopyingPa  +
push 452h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
lea eax [ebp+var_208] +
push eax  +
push 7FFFFFFFh  +
push lpData  +
call sub_101C7D7  +
mov esi eax +
test esi esi +
jge loc_101DD62  +
push offset aFailedToGetThe  +
push 45Dh  +
jmp loc_101D665  +
xor eax eax +
push eax  +
lea ecx [ebp+hKey] +
push ecx  +
push eax  +
push 2  +
push eax  +
push eax  +
push eax  +
push offset SubKey  +
push 80000002h  +
call ds:RegCreateKeyExW  +
mov esi eax +
test esi esi +
jz loc_101DDB4  +
push offset aFailedToCrea_4  +
push 460h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
test esi esi +
jle loc_101E11D  +
and esi 0FFFFh +
or esi 80070000h +
jmp loc_101E11D  +
mov eax [ebp+var_208] +
lea eax [eax+eax+2] +
push eax  +
push lpData  +
push 1  +
push 0  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
mov esi eax +
test esi esi +
jz loc_101DDEC  +
push offset aFailedToSetCom  +
push 463h  +
jmp loc_101DD92  +
mov eax [ebp+var_1B4] +
mov ecx [eax] +
lea edx [ebp+var_1B0] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
mov esi eax +
test esi esi +
jge loc_101DE14  +
push offset aFailedToCrea_5  +
push 466h  +
jmp loc_101D665  +
mov eax dword ptr [ebp+var_1B0] +
push dword ptr [ebp+var_1A8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
mov esi eax +
test esi esi +
jge loc_101DE3B  +
push offset aFailedToTellIn  +
push 469h  +
jmp loc_101D665  +
push offset aStartOfInstall  +
push 46Bh  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
call sub_101C0B5  +
mov esi eax +
test esi esi +
jge loc_101DE68  +
push offset aFailedToBlockO  +
push 46Eh  +
jmp loc_101D665  +
cmp dword_10340E8 0 +
jz loc_101DE99  +
mov eax dword ptr [ebp+var_1B0] +
mov ecx [eax] +
lea edx [ebp+var_1A0] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
test esi esi +
jge loc_101DED6  +
push offset aFailedToInstal  +
push 473h  +
jmp loc_101D665  +
push 0  +
mov ecx edi +
call sub_102006B  +
mov eax dword ptr [ebp+var_1B0] +
mov ecx [eax] +
lea edx [ebp+var_1A0] +
push edx  +
push 0  +
push eax  +
call dword ptr [ecx+58h]  +
mov esi eax +
test esi esi +
jge loc_101DECC  +
push offset aFailedToRunWiz  +
push 47Ch  +
jmp loc_101D665  +
mov dword_1034148 1 +
push offset aEndOfInstall  +
push 482h  +
push ebx  +
call sub_102399F  +
and [ebp+var_198] 0 +
add esp 0Ch +
push 4  +
pop eax  +
mov dword ptr [ebp+var_1DC] eax +
mov [ebp+var_1E4] eax +
mov eax [ebp+var_1A0] +
lea edx [ebp+var_1DC] +
mov edi 80004005h +
push edx  +
mov [ebp+var_204] edi +
mov [ebp+var_1C8] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jge loc_101DF38  +
push offset aFailedToGetIns  +
push 496h  +
jmp loc_101D665  +
mov eax [ebp+var_1A0] +
mov ecx [eax] +
lea edx [ebp+var_204] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jge loc_101DF60  +
push offset aFailedToGetI_2  +
push 499h  +
jmp loc_101D665  +
mov eax [ebp+var_1A0] +
mov ecx [eax] +
lea edx [ebp+var_1CC] +
push edx  +
push 0  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
test esi esi +
jge loc_101DF8A  +
push offset aFailedToGetI_3  +
push 49Dh  +
jmp loc_101D665  +
mov eax dword ptr [ebp+var_1CC] +
mov ecx [eax] +
lea edx [ebp+var_1C8] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jge loc_101DFB2  +
push offset aFailedToGetU_3  +
push 4A1h  +
jmp loc_101D665  +
mov eax dword ptr [ebp+var_1CC] +
mov ecx [eax] +
lea edx [ebp+var_1E4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jge loc_101DFDA  +
push offset aFailedToGetU_4  +
push 4A4h  +
jmp loc_101D665  +
push [ebp+var_1C8]  +
push [ebp+var_1E4]  +
push [ebp+var_204]  +
push dword ptr [ebp+var_1DC]  +
push offset aOperationresul  +
push 4AAh  +
push ebx  +
call sub_102399F  +
add esp 1Ch +
cmp dword ptr [ebp+var_1DC] 2 +
jnz loc_101E017  +
cmp [ebp+var_1E4] 2 +
jz loc_101E078  +
cmp dword ptr [ebp+var_1DC] 5 +
jz loc_101E06E  +
cmp [ebp+var_1E4] 5 +
jz loc_101E06E  +
mov eax [ebp+var_204] +
test eax eax +
jl loc_101E057  +
cmp [ebp+var_1C8] 0 +
jl loc_101E060  +
push offset aWarning_WuaErr  +
push 4BAh  +
push ebx  +
mov [ebp+var_198] edi +
call sub_102399F  +
add esp 0Ch +
jmp loc_101E078  +
cmp [ebp+var_1C8] 0 +
jge loc_101E066  +
mov eax [ebp+var_1C8] +
mov [ebp+var_198] eax +
jmp loc_101E078  +
mov [ebp+var_198] 800704C7h +
mov eax [ebp+var_1A0] +
mov ecx [eax] +
lea edx [ebp+var_1F8] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
test esi esi +
jge loc_101E0A0  +
push offset aFailedToGetReb  +
push 4CCh  +
jmp loc_101D665  +
cmp word ptr [ebp+var_1F8] 0FFFFh +
jnz loc_101E0E1  +
push dword ptr [ebp+var_19C]  +
mov dword_103416C 1 +
push offset aRebootWasReq_0  +
push 4D1h  +
push ebx  +
call sub_102399F  +
add esp 10h +
call ds:GetCommandLineW  +
push eax  +
push dword ptr [ebp+var_19C]  +
call sub_1023354  +
jmp loc_101E0F4  +
cmp dword_10340F4 2 +
jnz loc_101E0F4  +
mov dword_103416C 1 +
mov esi [ebp+var_198] +
mov dword_1034168 esi +
test esi esi +
jge loc_101E11D  +
push dword ptr [ebp+var_19C]  +
push offset aFailedInstallU  +
push 4DBh  +
push ebx  +
call sub_102399F  +
add esp 10h +
xor edi edi +
cmp dword ptr [ebp+var_1AC] edi +
jz loc_101E156  +
mov eax [ebp+ppv] +
push dword ptr [ebp+var_1AC]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jge loc_101E156  +
push dword ptr [ebp+var_1AC]  +
push offset aFailedToRemove  +
push 4E4h  +
push ebx  +
call sub_102399F  +
add esp 10h +
lea eax [ebp+var_1EC] +
push eax  +
call sub_101BD28  +
lea eax [ebp+var_1AC] +
push eax  +
call sub_101BD28  +
lea eax [ebp+var_1F0] +
push eax  +
call sub_101BD28  +
lea eax [ebp+var_19C] +
push eax  +
call sub_101BD28  +
mov ecx offset hInstance +
call sub_101FFE8  +
mov eax [ebp+var_1BC] +
cmp eax edi +
jz loc_101E1A6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1BC] edi +
mov eax [ebp+var_1D0] +
cmp eax edi +
jz loc_101E1BC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1D0] edi +
mov eax dword ptr [ebp+var_1A8] +
cmp eax edi +
jz loc_101E1D2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [ebp+var_1A8] edi +
mov eax dword ptr [ebp+var_1D8] +
cmp eax edi +
jz loc_101E1E8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [ebp+var_1D8] edi +
mov eax dword ptr [ebp+var_1B0] +
cmp eax edi +
jz loc_101E1FE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [ebp+var_1B0] edi +
mov eax dword ptr [ebp+var_1CC] +
cmp eax edi +
jz loc_101E214  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [ebp+var_1CC] edi +
mov eax [ebp+var_1A0] +
cmp eax edi +
jz loc_101E22A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1A0] edi +
mov eax [ebp+var_1B8] +
cmp eax edi +
jz loc_101E240  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1B8] edi +
mov eax dword ptr [ebp+var_1A4] +
cmp eax edi +
jz loc_101E256  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [ebp+var_1A4] edi +
mov eax [ebp+var_1B4] +
cmp eax edi +
jz loc_101E26C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1B4] edi +
mov eax dword ptr [ebp+var_1E0] +
cmp eax edi +
jz loc_101E282  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [ebp+var_1E0] edi +
mov eax [ebp+ppv] +
cmp eax edi +
jz loc_101E298  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] edi +
cmp [ebp+hKey] edi +
jz loc_101E2B2  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] edi +
cmp [ebp+var_1D4] edi +
jnz loc_101E2C0  +
call ds:CoUninitialize  +
cmp esi edi +
jge loc_101E2F1  +
lea eax [ebp+var_1D4] +
push eax  +
push esi  +
mov [ebp+var_1D4] edi +
call sub_101F148  +
push [ebp+var_1D4]  +
push esi  +
push offset aExitWithErrorC  +
push 507h  +
push ebx  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
push edi  +
push 1Bh  +
pop eax  +
push 2  +
mov [ebp+var_16] ax +
pop eax  +
mov [ebp+var_14] ax +
push 1  +
lea eax [ebp-18h] +
xor esi esi +
push eax  +
mov [ebp+hThread] esi +
mov [ebp+var_18] 1 +
call ds:CreateAcceleratorTableW  +
mov [ebp+hAccTable] eax +
cmp eax esi +
jnz loc_101E35F  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+var_4] eax +
jl loc_101E350  +
mov [ebp+var_4] 80004005h +
push offset aFailureToCreat  +
push 519h  +
jmp loc_101E42D  +
push offset dword_10340B4  +
call sub_1024156  +
cmp eax esi +
mov [ebp+var_4] eax +
jge loc_101E37F  +
push offset aFailureIsRetur  +
push 51Dh  +
jmp loc_101E42D  +
push esi  +
push esi  +
push esi  +
cmp dword_10340E4 esi +
jz loc_101E3C1  +
push offset sub_101C137  +
push esi  +
push esi  +
call ds:CreateThread  +
mov [ebp+hThread] eax +
cmp eax esi +
jnz loc_101E43C  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+var_4] eax +
jl loc_101E3B5  +
mov [ebp+var_4] 80004005h +
push offset ThreadId  +
push 523h  +
jmp loc_101E42D  +
cmp dword_10340E0 esi +
jz loc_101E3FC  +
push offset sub_101CEB2  +
push esi  +
push esi  +
call ds:CreateThread  +
mov [ebp+hThread] eax +
cmp eax esi +
jnz loc_101E43C  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+var_4] eax +
jl loc_101E3F0  +
mov [ebp+var_4] 80004005h +
push offset ThreadId  +
push 528h  +
jmp loc_101E42D  +
push offset sub_101D5BC  +
push esi  +
push esi  +
call ds:CreateThread  +
mov [ebp+hThread] eax +
cmp eax esi +
jnz loc_101E43C  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+var_4] eax +
jl loc_101E423  +
mov [ebp+var_4] 80004005h +
push offset ThreadId  +
push 52Dh  +
push offset aDoinstall  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101E481  +
mov edi ds:MsgWaitForMultipleObjects +
push ebx  +
mov ebx 4FFh +
jmp loc_101E535  +
cmp eax 1 +
jz loc_101E522  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp+var_4] eax +
jl loc_101E469  +
mov [ebp+var_4] 80004005h +
push offset aFailed_Unexpec  +
push 54Eh  +
push offset aDoinstall  +
call sub_102399F  +
add esp 0Ch +
pop ebx  +
mov eax dword_10340B4 +
mov edi ds:GetLastError +
cmp eax esi +
jz loc_101E4BB  +
push eax  +
call ds:DestroyWindow  +
test eax eax +
jnz loc_101E4B5  +
call edi  +
push eax  +
push offset aWarning_Failur  +
push 564h  +
push offset aDoinstall  +
call sub_102399F  +
add esp 10h +
mov dword_10340B4 esi +
lea eax [ebp+hThread] +
push eax  +
call sub_101BD05  +
cmp [ebp+hAccTable] esi +
jz loc_101E4F0  +
push [ebp+hAccTable]  +
call ds:DestroyAcceleratorTable  +
test eax eax +
jnz loc_101E4F0  +
call edi  +
push eax  +
push offset aWarning_Fail_0  +
push 571h  +
push offset aDoinstall  +
call sub_102399F  +
add esp 10h +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn   +
lea eax [ebp+Msg] +
push eax  +
push [ebp+hAccTable]  +
push dword_10340B4  +
call ds:TranslateAcceleratorW  +
test eax eax +
jnz loc_101E522  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push 1  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+Msg] +
push eax  +
call ds:PeekMessageW  +
test eax eax +
jnz loc_101E4F7  +
push ebx  +
push 0FFFFFFFFh  +
push esi  +
lea eax [ebp+hThread] +
push eax  +
push 1  +
call edi  +
cmp eax esi +
jnz loc_101E44D  +
cmp [ebp+hThread] esi +
jz loc_101E480  +
lea eax [ebp+ExitCode] +
push eax  +
push [ebp+hThread]  +
mov [ebp+ExitCode] esi +
call ds:GetExitCodeThread  +
test eax eax +
jz loc_101E480  +
mov eax [ebp+ExitCode] +
mov [ebp+var_4] eax +
jmp loc_101E480  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 268h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+hToken] eax +
xor eax eax +
push 206h  +
mov word ptr [ebp+CommandLine] ax +
xor ebx ebx +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
call memset  +
mov [ebp+hProcess] ebx +
xor eax eax +
lea edi [ebp-220h] +
stos   +
stos   +
add esp 0Ch +
stos   +
call sub_101C52E  +
mov esi eax +
cmp esi ebx +
jge loc_101E5EC  +
push esi  +
push offset aFailedToLoad_0  +
push 655h  +
mov edi offset aUninstallwrapp +
jmp loc_101E7CE  +
push ebx  +
push 2  +
call dword_10340AC  +
mov edi offset aUninstallwrapp +
test eax eax +
jnz loc_101E611  +
push offset aFailedToSetMsi  +
push 65Ah  +
push edi  +
call sub_102399F  +
add esp 0Ch +
cmp [ebp+hToken] ebx +
jnz loc_101E655  +
push 2  +
push ebx  +
push lpValueName  +
call dword_10340A8  +
cmp eax ebx +
jle loc_101E636  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jge loc_101E7BE  +
push lpValueName  +
push offset aFailedToUnin_0  +
push 665h  +
jmp loc_101E7CE  +
mov esi 104h +
push esi  +
lea eax [ebp+CommandLine] +
push eax  +
call ds:GetSystemDirectoryW  +
cmp eax ebx +
jz loc_101E7D9  +
cmp eax esi +
jnb loc_101E7D9  +
lea eax [ebp+CommandLine] +
push eax  +
call sub_101F0DB  +
push lpValueName  +
lea eax [ebp+CommandLine] +
push eax  +
push offset aLsMsiexec_exeQ  +
push esi  +
push eax  +
call sub_101C778  +
mov esi eax +
add esp 14h +
cmp esi ebx +
jge loc_101E6B5  +
push offset aFailedToBuildM  +
push 673h  +
jmp loc_101E7F3  +
push 40h  +
lea eax [ebp+StartupInfo.lpReserved] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+hProcess] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push ebx  +
push ebx  +
push 400h  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+CommandLine] +
push eax  +
push ebx  +
push [ebp+hToken]  +
mov [ebp+StartupInfo.cb] 44h +
mov [ebp+StartupInfo.lpDesktop] offset aWinsta0Default +
call ds:CreateProcessAsUserW  +
test eax eax +
jnz loc_101E72A  +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101E71B  +
mov esi 80004005h +
push offset aFailedCreatepr  +
push 686h  +
jmp loc_101E7F3  +
push 0FFFFFFFFh  +
push [ebp+hProcess]  +
call ds:WaitForSingleObject  +
cmp eax 0FFFFFFFFh +
jnz loc_101E75C  +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101E74D  +
mov esi 80004005h +
push offset aFailedToWaitOn  +
push 68Ch  +
jmp loc_101E7F3  +
lea eax [ebp+ExitCode] +
push eax  +
push [ebp+hProcess]  +
mov [ebp+ExitCode] ebx +
call ds:GetExitCodeProcess  +
test eax eax +
jnz loc_101E795  +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101E789  +
mov esi 80004005h +
push offset aFailedToGetExi  +
push 693h  +
jmp loc_101E7F3  +
mov eax [ebp+ExitCode] +
cmp eax ebx +
mov esi eax +
jle loc_101E7AD  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jge loc_101E7BE  +
push eax  +
push offset aFailedMsiexec_  +
push 697h  +
jmp loc_101E7CE  +
push lpValueName  +
push offset aSucceededToUni  +
push 69Ah  +
push edi  +
call sub_102399F  +
add esp 10h +
jmp loc_101E7FC  +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101E7E9  +
mov esi 80004005h +
push offset aFailedToGetSys  +
push 66Dh  +
push edi  +
call sub_102399F  +
add esp 0Ch +
lea eax [ebp+hProcess] +
push eax  +
call sub_101BD05  +
lea eax [ebp-220h] +
push eax  +
call sub_101BD05  +
cmp esi ebx +
jge loc_101E845  +
lea eax [ebp+ExitCode] +
push eax  +
push esi  +
mov [ebp+ExitCode] ebx +
call sub_101F148  +
push [ebp+ExitCode]  +
push esi  +
push offset aExitWithErrorC  +
push 6A1h  +
push edi  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 874h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor eax eax +
mov esi 3FEh +
push esi  +
mov [ebp+SubKey] ax +
lea eax [ebp-44Ah] +
push edi  +
push eax  +
mov [ebp+phkResult] edi +
mov [ebp+var_860] edi +
mov [ebp+hKey] edi +
call memset  +
xor eax eax +
push esi  +
mov [ebp+Data] ax +
lea eax [ebp-84Ah] +
push edi  +
push eax  +
call memset  +
add esp 18h +
mov [ebp+cbData] edi +
mov [ebp+dwIndex] edi +
mov [ebp+Type] edi +
mov dword ptr [ebp+hMem] edi +
mov [ebp+TokenHandle] edi +
cmp dword_10340F0 edi +
jz loc_101E932  +
lea eax [ebp+phkResult] +
push eax  +
push 0F003Fh  +
push edi  +
mov ebx offset aSoftwareMicros +
push ebx  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jle loc_101E915  +
and eax edi +
or eax esi +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_101EADE  +
push offset aFailedToOpenMa  +
push 6C0h  +
jmp loc_101EAC7  +
push offset aSetcbprivilege  +
mov [ebp+var_86C] edi +
call sub_101F553  +
cmp eax edi +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_101E95B  +
push offset aFailedToSetP_0  +
push 6C7h  +
jmp loc_101EAC7  +
lea eax [ebp+var_86C] +
push eax  +
call ds:GetCurrentProcessId  +
push eax  +
call ds:ProcessIdToSessionId  +
test eax eax +
jnz loc_101E99B  +
call sub_101BCEB  +
cmp eax edi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_101E98C  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedProcessi  +
push 6CAh  +
jmp loc_101EAC7  +
lea eax [ebp+TokenHandle] +
push eax  +
push [ebp+var_86C]  +
call WTSQueryUserToken  +
test eax eax +
jnz loc_101E9DF  +
call sub_101BCEB  +
cmp eax edi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_101E9CA  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push [ebp+var_86C]  +
push offset aFailedWtsquery  +
push 6CDh  +
jmp loc_101ECEF  +
push 47h  +
lea eax [ebp-4Bh] +
push edi  +
push eax  +
mov [ebp+var_4C] 0 +
call memset  +
add esp 0Ch +
push 48h  +
lea eax [ebp+var_4C] +
push eax  +
push [ebp+TokenHandle]  +
call sub_101F692  +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+var_4C] +
push eax  +
call ConvertSidToStringSidW  +
test eax eax +
jnz loc_101EA3F  +
call sub_101BCEB  +
cmp eax edi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_101EA30  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedConverts  +
push 6D3h  +
jmp loc_101EAC7  +
lea eax [ebp+hKey] +
push eax  +
mov ebx 0F003Fh +
push ebx  +
push 0  +
push dword ptr [ebp+hMem]  +
push 80000003h  +
call ds:RegOpenKeyExW  +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jle loc_101EA71  +
and eax edi +
or eax esi +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_101EA90  +
push dword ptr [ebp+hMem]  +
push offset aFailedToOpenKe  +
push 6D7h  +
jmp loc_101ECEF  +
lea eax [ebp+phkResult] +
push eax  +
push ebx  +
push 0  +
push offset aSoftwareMicros  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jle loc_101EAB3  +
and eax edi +
or eax esi +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_101EAD9  +
push offset aFailedToOpenCu  +
push 6DBh  +
push offset aGpmodecleanup  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101ED30  +
mov ebx offset aSoftwareMicros +
push lpValueName  +
push [ebp+phkResult]  +
call ds:RegDeleteValueW  +
xor ecx ecx +
cmp eax ecx +
jnz loc_101EC65  +
mov eax offset aHklm +
cmp dword_10340F0 ecx +
jnz loc_101EB0D  +
mov eax dword ptr [ebp+hMem] +
push lpValueName  +
push ebx  +
push eax  +
push offset aDeletedRegistr  +
push 6E2h  +
push offset aGpmodecleanup  +
call sub_102399F  +
add esp 18h +
push 200h  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+dwIndex]  +
push [ebp+phkResult]  +
call ds:RegEnumKeyW  +
cmp eax 103h +
jz loc_101ED30  +
test eax eax +
jle loc_101EB5D  +
and eax edi +
or eax esi +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_101ECC0  +
lea eax [ebp+var_860] +
push eax  +
push 20019h  +
push 0  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+phkResult]  +
call ds:RegOpenKeyExW  +
test eax eax +
jle loc_101EB94  +
and eax edi +
or eax esi +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_101ECCD  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aProductId  +
push [ebp+var_860]  +
mov [ebp+cbData] 400h +
call ds:RegQueryValueExW  +
mov ebx eax +
lea eax [ebp+var_860] +
push eax  +
call sub_101BD4B  +
test ebx ebx +
jnz loc_101ECAB  +
push lpValueName  +
lea eax [ebp+Data] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101ECB0  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+phkResult]  +
call ds:RegDeleteKeyW  +
xor ecx ecx +
cmp eax ecx +
jle loc_101EC24  +
and eax edi +
or eax esi +
mov dword ptr [ebp+dwMessageId] eax +
cmp dword ptr [ebp+dwMessageId] ecx +
mov eax offset aHklm +
jge loc_101ECFE  +
cmp dword_10340F0 ecx +
jnz loc_101EC49  +
mov eax dword ptr [ebp+hMem] +
lea ecx [ebp+SubKey] +
push ecx  +
push offset aSoftwareMicros  +
push eax  +
push offset aFailedToDelete  +
push 71Bh  +
jmp loc_101ED23  +
cmp eax 2 +
jz loc_101ED30  +
cmp eax ecx +
jle loc_101EC76  +
and eax edi +
or eax esi +
cmp eax ecx +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_101ED75  +
mov eax offset aHklm +
cmp dword_10340F0 ecx +
jnz loc_101EC97  +
mov eax dword ptr [ebp+hMem] +
push lpValueName  +
push ebx  +
push eax  +
push offset aFailedToDele_0  +
push 6E7h  +
jmp loc_101ED23  +
cmp ebx 2 +
jnz loc_101ECE0  +
inc [ebp+dwIndex]  +
mov ebx offset aSoftwareMicros +
jmp loc_101EB2C  +
push ebx  +
push offset aFailedRegeumke  +
push 6F5h  +
jmp loc_101ECEF  +
lea eax [ebp+SubKey] +
push eax  +
push offset aFailedToOpenSu  +
push 6FAh  +
jmp loc_101ECEF  +
push offset aProductId  +
push offset aFailedToQueryS  +
push 710h  +
push offset aGpmodecleanup  +
call sub_102399F  +
add esp 10h +
jmp loc_101ED30  +
cmp dword_10340F0 ecx +
jnz loc_101ED0C  +
mov eax dword ptr [ebp+hMem] +
lea ecx [ebp+SubKey] +
push ecx  +
push offset aSoftwareMicros  +
push eax  +
push offset aDeletedKeyLsLs  +
push 71Ch  +
push offset aGpmodecleanup  +
call sub_102399F  +
add esp 18h +
cmp dword ptr [ebp+dwMessageId] 0 +
jge loc_101ED75  +
and [ebp+dwIndex] 0 +
lea eax [ebp+dwIndex] +
push eax  +
push dword ptr [ebp+dwMessageId]  +
call sub_101F148  +
push [ebp+dwIndex]  +
push dword ptr [ebp+dwMessageId]  +
push offset aExitWithErrorC  +
push 721h  +
push offset aGpmodecleanup  +
call sub_102399F  +
add esp 14h +
push [ebp+TokenHandle]  +
call sub_101E57A  +
lea eax [ebp+TokenHandle] +
push eax  +
call sub_101BD05  +
cmp dword ptr [ebp+hMem] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_101EDAB  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
and dword ptr [ebp+hMem] 0 +
lea eax [ebp+hKey] +
push eax  +
call sub_101BD4B  +
lea eax [ebp+var_860] +
push eax  +
call sub_101BD4B  +
lea eax [ebp+phkResult] +
push eax  +
call sub_101BD4B  +
mov ecx [ebp+var_4] +
mov eax dword ptr [ebp+dwMessageId] +
xor ecx ebp +
call sub_10247EF  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+hMem] +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi ds:GetCommandLineW +
push edi  +
mov hInstance eax +
call esi  +
push eax  +
mov ecx offset hInstance +
call sub_1020BE5  +
mov ebx eax +
mov edi offset aWwinmain +
test ebx ebx +
jge loc_101EE2B  +
push offset aFailedToInit_1  +
push 75Ah  +
jmp loc_101EE4F  +
cmp ebx 1 +
jz loc_101EE70  +
mov eax dword_1034130 +
test eax eax +
jz loc_101EE61  +
push eax  +
call sub_1021EBA  +
mov ebx eax +
test ebx ebx +
jge loc_101EE5A  +
push offset aFailedToInit_2  +
push 765h  +
push edi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101EE70  +
mov [ebp+var_4] 1 +
call sub_101E309  +
mov ebx eax +
call sub_101C31F  +
mov [ebp+var_8] eax +
push ebx  +
call sub_101C712  +
xor eax eax +
cmp dword_10340E4 eax +
jnz loc_101F06D  +
cmp ebx eax +
jnz loc_101EEE8  +
cmp dword_10340E0 eax +
mov eax dword_1034120 +
mov [ebp+hMem] eax +
jz loc_101EEC0  +
call esi  +
push eax  +
push [ebp+hMem]  +
call sub_1023470  +
mov eax dword_1034120 +
mov [ebp+hMem] eax +
call esi  +
push eax  +
push [ebp+hMem]  +
push offset aSucceededToU_0  +
push 783h  +
jmp loc_101F08D  +
call esi  +
push eax  +
push [ebp+hMem]  +
call sub_10231FF  +
mov eax dword_1034120 +
mov [ebp+hMem] eax +
call esi  +
push eax  +
push [ebp+hMem]  +
push offset aSucceededToIns  +
push 788h  +
jmp loc_101F08D  +
cmp ebx 1 +
jz loc_101F06D  +
cmp ebx 80242017h +
jnz loc_101EF22  +
call esi  +
push eax  +
call sub_10236E1  +
call esi  +
push eax  +
push ebx  +
push offset aFailedToInst_0  +
push 79Ch  +
push edi  +
call sub_102399F  +
add esp 14h +
call sub_10243FD  +
jmp loc_101F05F  +
mov [ebp+hMem] eax +
lea eax [ebp+hMem] +
push eax  +
push ebx  +
call sub_101F148  +
test eax eax +
mov eax dword_1034120 +
mov dword ptr [ebp+var_C] eax +
jl loc_101EFDB  +
cmp dword_10340E0 0 +
jz loc_101EF75  +
call esi  +
push eax  +
push [ebp+hMem]  +
push ebx  +
push dword ptr [ebp+var_C]  +
call sub_10234FE  +
mov eax dword_1034120 +
mov dword ptr [ebp+var_C] eax +
call esi  +
push eax  +
push [ebp+hMem]  +
push ebx  +
push dword ptr [ebp+var_C]  +
push offset aFailedToUnin_1  +
push 7AAh  +
jmp loc_101EFA0  +
call esi  +
push eax  +
push [ebp+hMem]  +
push ebx  +
push dword ptr [ebp+var_C]  +
call sub_102328D  +
mov eax dword_1034120 +
mov dword ptr [ebp+var_C] eax +
call esi  +
push eax  +
push [ebp+hMem]  +
push ebx  +
push dword ptr [ebp+var_C]  +
push offset aFailedToInst_1  +
push 7AFh  +
push edi  +
call sub_102399F  +
add esp 1Ch +
push [ebp+hMem]  +
push ebx  +
push 0  +
push 10h  +
push 0EA60h  +
push 0EA62h  +
call sub_101F975  +
add esp 18h +
cmp [ebp+hMem] 0 +
jz loc_101F05F  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_101F05F  +
cmp dword_10340E0 0 +
jz loc_101F010  +
call esi  +
push eax  +
push offset dword_10016B8  +
push ebx  +
push dword ptr [ebp+var_C]  +
call sub_10234FE  +
mov eax dword_1034120 +
mov dword ptr [ebp+var_C] eax +
call esi  +
push eax  +
push ebx  +
push dword ptr [ebp+var_C]  +
push offset aFailedToUnin_2  +
push 7B9h  +
jmp loc_101F03A  +
call esi  +
push eax  +
push offset dword_10016B8  +
push ebx  +
push dword ptr [ebp+var_C]  +
call sub_102328D  +
mov eax dword_1034120 +
mov dword ptr [ebp+var_C] eax +
call esi  +
push eax  +
push ebx  +
push dword ptr [ebp+var_C]  +
push offset aFailedToInst_2  +
push 7BEh  +
push edi  +
call sub_102399F  +
add esp 18h +
push offset dword_10016B8  +
push ebx  +
push 0  +
push 10h  +
push 0EA60h  +
push 0EA62h  +
call sub_101F975  +
add esp 18h +
cmp dword_10340EC 0 +
jz loc_101F06D  +
call sub_101E85D  +
test ebx ebx +
jge loc_101F096  +
and [ebp+hMem] 0 +
lea eax [ebp+hMem] +
push eax  +
push ebx  +
call sub_101F148  +
push [ebp+hMem]  +
push ebx  +
push offset aExitWithErrorC  +
push 7CEh  +
push edi  +
call sub_102399F  +
add esp 14h +
cmp [ebp+var_4] 0 +
jz loc_101F0A1  +
call sub_1021BD5  +
mov ecx offset hInstance +
call sub_101FD04  +
mov eax ebx +
and eax 1FFF0000h +
cmp eax 70000h +
jnz loc_101F0BC  +
movzx ebx bx +
mov eax [ebp+var_8] +
test eax eax +
jnz loc_101F0C5  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
xor eax eax +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 5Ch  +
push [ebp+arg_0]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101F0FD  +
cmp word ptr [eax+2] 0 +
jnz loc_101F0FD  +
xor ecx ecx +
mov [eax] cx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_101F120  +
push eax  +
call ds:CloseHandle  +
or dword ptr [esi] 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
cmp [ecx+38h] eax +
jnz locret_101F142  +
cmp [ecx+94h] eax +
jnz locret_101F142  +
cmp [ecx+98h] eax +
jnz locret_101F142  +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor esi esi +
push esi  +
push esi  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
push dword ptr [ebp+dwMessageId]  +
xor ebx ebx +
push esi  +
push 1300h  +
mov [ebp+hMem] esi +
mov [edi] esi +
call ds:FormatMessageW  +
test eax eax +
jnz loc_101F1A3  +
call sub_101BCEB  +
mov ebx eax +
cmp ebx esi +
jl loc_101F187  +
mov ebx 80004005h +
push dword ptr [ebp+dwMessageId]  +
push offset aFailedToGetMes  +
push 12Dh  +
push offset aWusageterrorme  +
call sub_102399F  +
add esp 10h +
jmp loc_101F1C1  +
push 0Dh  +
push [ebp+hMem]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax esi +
jz loc_101F1B9  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+hMem] +
mov [edi] eax +
mov [ebp+hMem] esi +
cmp [ebp+hMem] esi +
jz loc_101F1CF  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+var_210] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 104h  +
lea eax [ebp+var_20C] +
xor ebx ebx +
push eax  +
mov dword ptr [ebp+lpFileName] ebx +
call ds:GetSystemWindowsDirectoryW  +
test eax eax +
jnz loc_101F239  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101F22D  +
mov edi 80004005h +
push offset aFailedToGetWin  +
push 160h  +
jmp loc_101F275  +
lea eax [ebp+var_20C] +
push eax  +
call sub_101F0DB  +
push offset aWusa_lock  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+lpFileName] +
push offset aSS  +
push eax  +
call sub_102534C  +
mov edi eax +
add esp 10h +
cmp edi ebx +
jge loc_101F284  +
push offset aFailedToAllo_5  +
push 166h  +
push offset aWusacreatelock  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101F2E2  +
push ebx  +
push 4000102h  +
push 2  +
push ebx  +
push ebx  +
push 10000000h  +
push dword ptr [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [ebp+var_210] eax +
cmp eax 0FFFFFFFFh +
jnz loc_101F2D9  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_101F2BA  +
mov edi 80004005h +
push dword ptr [ebp+lpFileName]  +
push offset aFailedToCrea_6  +
push 175h  +
push offset aWusacreatelock  +
call sub_102399F  +
add esp 10h +
jmp loc_101F2E2  +
or [ebp+var_210] 0FFFFFFFFh +
mov [esi] eax +
lea eax [ebp+var_210] +
push eax  +
call sub_101F106  +
cmp dword ptr [ebp+lpFileName] ebx +
jz loc_101F307  +
push dword ptr [ebp+lpFileName]  +
call sub_1024DEB  +
mov dword ptr [ebp+lpFileName] ebx +
cmp edi ebx +
jge loc_101F33C  +
lea eax [ebp+var_210] +
push eax  +
push edi  +
mov [ebp+var_210] ebx +
call sub_101F148  +
push [ebp+var_210]  +
push edi  +
push offset aExitWithErrorC  +
push 180h  +
push offset aWusacreatelock  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetFullPathNameW +
push edi  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+lpFileName]  +
mov [ebp+lpBuffer] eax +
call esi  +
mov ebx eax +
mov edi offset aWusagetfullpat +
test ebx ebx +
jnz loc_101F39E  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_101F38F  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push [ebp+lpFileName]  +
push offset aFailedGetfullp  +
push 19Fh  +
jmp loc_101F3F4  +
push ebx  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_1024E08  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_101F3C4  +
push offset aFailedToAllo_6  +
push 1A3h  +
push edi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101F40B  +
push [ebp+lpFilePart]  +
push [ebp+lpBuffer]  +
push ebx  +
push [ebp+lpFileName]  +
call esi  +
test eax eax +
jnz loc_101F3FF  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_101F3E7  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push [ebp+lpFileName]  +
push offset aFailedGetfullp  +
push 1A8h  +
push edi  +
call sub_102399F  +
add esp 10h +
jmp loc_101F40B  +
mov eax [ebp+lpBuffer] +
mov ecx [ebp+arg_4] +
and [ebp+lpBuffer] 0 +
mov [ecx] eax +
xor ebx ebx +
cmp [ebp+lpBuffer] ebx +
jz loc_101F41D  +
push [ebp+lpBuffer]  +
call sub_1024DEB  +
mov [ebp+lpBuffer] ebx +
mov esi dword ptr [ebp+dwMessageId] +
cmp esi ebx +
jge loc_101F448  +
lea eax [ebp+lpFileName] +
push eax  +
push esi  +
mov [ebp+lpFileName] ebx +
call sub_101F148  +
push [ebp+lpFileName]  +
push esi  +
push offset aExitWithErrorC  +
push 1B2h  +
push edi  +
call sub_102399F  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
xor ebx ebx +
mov [ebp+var_4] ebx +
mov dword ptr [ebp+var_8] ebx +
call DpxNewJob  +
mov esi eax +
cmp esi ebx +
mov edi offset aWusaextractall +
jge loc_101F48E  +
push [ebp+arg_0]  +
push offset aFailedToCrea_7  +
push 1C7h  +
jmp loc_101F4F4  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_101F4B3  +
push [ebp+arg_4]  +
push offset aFailedToAddCon  +
push 1CAh  +
jmp loc_101F4F4  +
mov eax dword ptr [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_101F4D7  +
push offset aFailedExtracta  +
push 1CDh  +
push edi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101F4FD  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi ebx +
jge loc_101F4FD  +
push [ebp+arg_4]  +
push offset aFailedToExtr_0  +
push 1D0h  +
push edi  +
call sub_102399F  +
add esp 10h +
mov eax dword ptr [ebp+var_8] +
cmp eax ebx +
jz loc_101F50D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [ebp+var_8] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_101F51D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
cmp esi ebx +
jge loc_101F545  +
lea eax [ebp+arg_4] +
push eax  +
push esi  +
mov [ebp+arg_4] ebx +
call sub_101F148  +
push [ebp+arg_4]  +
push esi  +
push offset aExitWithErrorC  +
push 1D6h  +
push edi  +
call sub_102399F  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor eax eax +
mov [ebp+NewState.PrivilegeCount] ebx +
lea edi [ebp+NewState.Privileges] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+Luid.LowPart] ebx +
lea edi [ebp+Luid.HighPart] +
stos   +
lea eax [ebp+Luid] +
push eax  +
push [ebp+lpName]  +
xor esi esi +
push ebx  +
mov [ebp+TokenHandle] ebx +
call ds:LookupPrivilegeValueW  +
mov edi offset aEnableprivileg +
test eax eax +
jnz loc_101F5AF  +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101F5A0  +
mov esi 80004005h +
push offset aFailedLookuppr  +
push 1EAh  +
jmp loc_101F64A  +
mov eax [ebp+Luid.LowPart] +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
lea eax [ebp+TokenHandle] +
push eax  +
push 28h  +
mov [ebp+NewState.PrivilegeCount] 1 +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_101F5FC  +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101F5F0  +
mov esi 80004005h +
push offset aFailedOpenproc  +
push 1F6h  +
jmp loc_101F64A  +
push ebx  +
push ebx  +
push 10h  +
lea eax [ebp+NewState] +
push eax  +
push ebx  +
push [ebp+TokenHandle]  +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_101F62E  +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101F622  +
mov esi 80004005h +
push offset aFailedAdjustto  +
push 201h  +
jmp loc_101F64A  +
call ds:GetLastError  +
cmp eax 514h +
jnz loc_101F653  +
push offset aFailedAdjust_0  +
mov esi 80070514h +
push 206h  +
push edi  +
call sub_102399F  +
add esp 0Ch +
lea eax [ebp+TokenHandle] +
push eax  +
call sub_101BD05  +
cmp esi ebx +
jge loc_101F684  +
lea eax [ebp+lpName] +
push eax  +
push esi  +
mov [ebp+lpName] ebx +
call sub_101F148  +
push [ebp+lpName]  +
push esi  +
push offset aExitWithErrorC  +
push 20Dh  +
push edi  +
call sub_102399F  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+TokenHandle] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [ebp+ReturnLength] +
push ecx  +
push 50h  +
lea ecx [ebp+pSourceSid] +
push ecx  +
push 1  +
push eax  +
xor esi esi +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_101F6E1  +
call sub_101BCEB  +
mov esi eax +
test esi esi +
jl loc_101F6D5  +
mov esi 80004005h +
push offset aFailedGettoken  +
push 21Eh  +
jmp loc_101F70C  +
push [ebp+pSourceSid]  +
push edi  +
push [ebp+nDestinationSidLength]  +
call ds:CopySid  +
test eax eax +
jnz loc_101F743  +
call sub_101BCEB  +
mov esi eax +
test esi esi +
jl loc_101F702  +
mov esi 80004005h +
push offset aFailedCopysid  +
push 222h  +
mov edi offset aWusagetusersid +
push edi  +
call sub_102399F  +
add esp 0Ch +
test esi esi +
jge loc_101F743  +
and [ebp+var_58] 0 +
lea eax [ebp+var_58] +
push eax  +
push esi  +
call sub_101F148  +
push [ebp+var_58]  +
push esi  +
push offset aExitWithErrorC  +
push 226h  +
push edi  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_10247EF  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10340E8 0 +
jnz loc_101F79F  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push dword_10340B4  +
call ds:PostMessageW  +
test eax eax +
jnz loc_101F79F  +
call ds:GetLastError  +
push eax  +
push offset aFailedToPostme  +
push 236h  +
push offset aWusapostmessag  +
call sub_102399F  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov edi [ebp+arg_0] +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
xor esi esi +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+pSid] ebx +
mov [ebp+var_14] ebx +
call ds:AllocateAndInitializeSid  +
test eax eax +
jnz loc_101F81A  +
mov [ebp+pSid] ebx +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101F811  +
mov esi 80004005h +
push offset aFailedToAllo_7  +
push 3Dh  +
jmp loc_101F843  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+pSid]  +
push ebx  +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_101F852  +
call sub_101BCEB  +
mov esi eax +
cmp esi ebx +
jl loc_101F83C  +
mov esi 80004005h +
push offset aFailedToCheckT  +
push 42h  +
push offset aWusaisuseradmi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101F857  +
mov eax [ebp+var_14] +
mov [edi] eax +
cmp [ebp+pSid] ebx +
jz loc_101F865  +
push [ebp+pSid]  +
call ds:FreeSid  +
cmp esi ebx +
jge loc_101F88E  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
mov [ebp+var_18] ebx +
call sub_101F148  +
push [ebp+var_18]  +
push esi  +
push offset aExitWithErrorC  +
push 4Eh  +
push offset aWusaisuseradmi  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+arg_8] +
mov [ebp+Arguments] eax +
xor esi esi +
lea eax [ebp+Arguments] +
push eax  +
push esi  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
push dword ptr [ebp+dwMessageId]  +
xor ebx ebx +
push esi  +
mov [ebp+hMem] esi +
call ds:GetModuleHandleW  +
push eax  +
push 900h  +
call ds:FormatMessageW  +
mov [ebp+Arguments] esi +
mov edi offset aWusaloadmessag +
cmp eax esi +
jnz loc_101F90F  +
call sub_101BCEB  +
mov ebx eax +
cmp ebx esi +
jl loc_101F8FA  +
mov ebx 80004005h +
push dword ptr [ebp+dwMessageId]  +
push offset aFailedToGetM_0  +
push 76h  +
push edi  +
call sub_102399F  +
add esp 10h +
jmp loc_101F930  +
push 0Dh  +
push [ebp+hMem]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax esi +
jz loc_101F925  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+hMem] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov [ebp+hMem] esi +
cmp [ebp+hMem] esi +
jz loc_101F941  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov [ebp+hMem] esi +
cmp ebx esi +
jge loc_101F969  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
mov [ebp+var_C] esi +
call sub_101F148  +
push [ebp+var_C]  +
push ebx  +
push offset aExitWithErrorC  +
push 89h  +
push edi  +
call sub_102399F  +
add esp 14h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
xor esi esi +
mov ecx offset hInstance +
mov dword ptr [ebp+var_4] esi +
mov [ebp+lpText] esi +
mov [ebp+hMem] esi +
call sub_101F12A  +
test eax eax +
jz loc_101FB15  +
push ebx  +
push edi  +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
push esi  +
lea eax [ebp+lpText] +
push eax  +
push esi  +
push [ebp+dwMessageId]  +
push esi  +
mov esi ds:GetModuleHandleW +
call esi  +
mov edi ds:FormatMessageW +
push eax  +
mov ebx 900h +
push ebx  +
call edi  +
xor ecx ecx +
mov [ebp+Arguments] ecx +
cmp eax ecx +
jnz loc_101F9F3  +
call sub_101BCEB  +
mov dword ptr [ebp+var_4] eax +
test eax eax +
jl loc_101F9E4  +
mov dword ptr [ebp+var_4] 80004005h +
push [ebp+dwMessageId]  +
push offset aFailedToGetM_0  +
push 0BDh  +
jmp loc_101FA28  +
push ecx  +
push ecx  +
lea eax [ebp+hMem] +
push eax  +
push ecx  +
push dword ptr [ebp+arg_4]  +
push ecx  +
call esi  +
push eax  +
push ebx  +
call edi  +
test eax eax +
jnz loc_101FA3A  +
call sub_101BCEB  +
mov dword ptr [ebp+var_4] eax +
test eax eax +
jl loc_101FA1B  +
mov dword ptr [ebp+var_4] 80004005h +
push dword ptr [ebp+arg_4]  +
push offset aFailedToGetM_0  +
push 0CBh  +
push offset aWusamessagebox  +
call sub_102399F  +
add esp 10h +
jmp loc_101FAC0  +
push 0Dh  +
push [ebp+hMem]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101FA50  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+arg_8] +
or eax 10000h +
push eax  +
push [ebp+hMem]  +
push [ebp+lpText]  +
push dword_10340B4  +
call ds:MessageBoxW  +
test eax eax +
jnz loc_101FA9B  +
call sub_101BCEB  +
mov dword ptr [ebp+var_4] eax +
test eax eax +
jl loc_101FA82  +
mov dword ptr [ebp+var_4] 80004005h +
push offset aFailedMessageb  +
push 0DBh  +
push offset aWusamessagebox  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101FAC0  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_101FAA4  +
mov [ecx] eax +
cmp [ebp+dwMessageId] 0EA66h +
jz loc_101FAC0  +
cmp [ebp+dwMessageId] 0EA71h +
jz loc_101FAC0  +
mov dword_1034144 1 +
mov esi ds:LocalFree +
xor edi edi +
cmp [ebp+hMem] edi +
jz loc_101FAD5  +
push [ebp+hMem]  +
call esi  +
mov [ebp+hMem] edi +
cmp [ebp+lpText] edi +
jz loc_101FAE2  +
push [ebp+lpText]  +
call esi  +
mov [ebp+lpText] edi +
cmp dword ptr [ebp+var_4] edi +
jge loc_101FB13  +
lea eax [ebp+var_14] +
push eax  +
push dword ptr [ebp+var_4]  +
mov [ebp+var_14] edi +
call sub_101F148  +
push [ebp+var_14]  +
push dword ptr [ebp+var_4]  +
push offset aExitWithErrorC  +
push 0EEh  +
push offset aWusamessagebox  +
call sub_102399F  +
add esp 14h +
pop edi  +
pop ebx  +
mov eax dword ptr [ebp+var_4] +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+68h] +
test eax eax +
jz loc_101FC37  +
push edi  +
push eax  +
push offset aDeletingSandbo  +
push 128h  +
mov edi offset aAppmoduleDelet +
push edi  +
call sub_102399F  +
add esp 10h +
push dword ptr [esi+68h]  +
call sub_1022BA8  +
test eax eax +
jge loc_101FC24  +
push offset aFailedToDele_1  +
push 12Dh  +
push edi  +
call sub_102399F  +
add esp 0Ch +
mov eax [esi+68h] +
pop edi  +
test eax eax +
jz loc_101FC37  +
push eax  +
call ??3@YAXPAX@Z  +
and dword ptr [esi+68h] 0 +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_101FC59  +
cmp [esi] ax +
jz loc_101FC55  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_101FC4B  +
test edx edx +
jnz loc_101FC5E  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_101FC6F  +
test eax eax +
jl loc_101FC6C  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_101FCAA  +
cmp [ebp+arg_4] eax +
jz loc_101FCA6  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_101FCA6  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_101FC89  +
test esi esi +
jnz loc_101FCB2  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101FCC0  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
cmp dword ptr [ecx+0B4h] 0 +
jz locret_101FCE2  +
add ecx 9Ch +
push ecx  +
call ds:EnterCriticalSection  +
retn   +
***
cmp dword ptr [ecx+0B4h] 0 +
jz locret_101FCFE  +
add ecx 9Ch +
push ecx  +
call ds:LeaveCriticalSection  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
cmp [esi+38h] ebx +
jnz loc_101FD59  +
mov eax [esi+14h] +
mov edi ds:LocalFree +
cmp eax ebx +
jz loc_101FD25  +
push eax  +
call edi  +
mov [esi+14h] ebx +
mov eax [esi+18h] +
cmp eax ebx +
jz loc_101FD32  +
push eax  +
call edi  +
mov [esi+18h] ebx +
mov eax [esi+1Ch] +
cmp eax ebx +
jz loc_101FD3F  +
push eax  +
call edi  +
mov [esi+1Ch] ebx +
mov eax [esi+20h] +
cmp eax ebx +
jz loc_101FD4C  +
push eax  +
call edi  +
mov [esi+20h] ebx +
mov eax [esi+24h] +
cmp eax ebx +
jz loc_101FD59  +
push eax  +
call edi  +
mov [esi+24h] ebx +
cmp [esi+0B4h] ebx +
jz loc_101FD6E  +
lea eax [esi+9Ch] +
push eax  +
call ds:DeleteCriticalSection  +
lea edi [esi+8Ch] +
cmp [edi] ebx +
jnz loc_101FD84  +
call ds:CoUninitialize  +
mov dword ptr [edi] 1 +
lea eax [esi+5Ch] +
push eax  +
call sub_101BD28  +
mov eax [esi+78h] +
cmp eax ebx +
jz loc_101FD9E  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [esi+78h] ebx +
mov eax [esi+70h] +
lea ecx [esi+74h] +
cmp eax ecx +
jz loc_101FDB6  +
cmp eax ebx +
jz loc_101FDB6  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [esi+70h] ebx +
mov ecx esi +
call sub_101FBDF  +
push offset aWusacommandl_0  +
push offset aSoftwareMicr_1  +
push 80000002h  +
call ds:RegDeleteKeyValueW  +
lea edi [esi+0Ch] +
mov eax [edi] +
cmp eax ebx +
jz loc_101FDE6  +
push eax  +
call ds:SetEvent  +
cmp eax ebx +
jz loc_101FE01  +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_101FDF6  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
lea eax [esi+60h] +
push eax  +
call sub_101BD28  +
jmp loc_101FE18  +
push offset aFailedToSetDon  +
push 118h  +
push offset aAppmoduleUnini  +
call sub_102399F  +
add esp 0Ch +
push edi  +
call sub_101BD05  +
call sub_102318F  +
add esi 90h +
push esi  +
call sub_101F106  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
push ebx  +
lea eax [ebp+pvParam] +
push eax  +
push 5Ch  +
push 1Fh  +
mov esi ecx +
mov [ebp+var_64] ebx +
call ds:SystemParametersInfoW  +
test eax eax +
jnz loc_101FE95  +
call sub_101BCEB  +
cmp eax ebx +
mov [ebp+var_64] eax +
jl loc_101FE79  +
mov [ebp+var_64] 80004005h +
push offset aFailureReturne  +
push 2D7h  +
push offset aAppmoduleCreat  +
call sub_102399F  +
add esp 0Ch +
jmp loc_101FFD2  +
push edi  +
lea eax [ebp+pvParam] +
push eax  +
call ds:CreateFontIndirectW  +
mov edi eax +
cmp edi ebx +
jnz loc_101FEC8  +
call sub_101BCEB  +
cmp eax ebx +
mov [ebp+var_64] eax +
jl loc_101FEB9  +
mov [ebp+var_64] 80004005h +
push offset aFailureRetur_0  +
push 2DDh  +
jmp loc_101FFC4  +
mov eax [esi+4Ch] +
cmp eax ebx +
jz loc_101FEFC  +
push eax  +
call ds:DeleteObject  +
test eax eax +
jnz loc_101FEFC  +
call sub_101BCEB  +
cmp eax ebx +
mov [ebp+var_64] eax +
jl loc_101FEED  +
mov [ebp+var_64] 80004005h +
push offset aFailureRetur_1  +
push 2E3h  +
jmp loc_101FFC4  +
push ebx  +
mov [esi+4Ch] edi +
mov dword ptr [esi+50h] 0Ch +
call ds:CreateCompatibleDC  +
mov [ebp+var_68] eax +
cmp eax ebx +
jz loc_101FFD1  +
push dword ptr [esi+4Ch]  +
mov edi ds:SelectObject +
push eax  +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_101FFA7  +
cmp ebx 0FFFFFFFFh +
jz loc_101FFA7  +
lea eax [ebp+var_70] +
push eax  +
push 1  +
push offset asc_1003B18  +
push [ebp+var_68]  +
call ds:GetTextExtentPoint32W  +
test eax eax +
jz loc_101FF4D  +
mov eax [ebp+var_70.cy] +
mov [esi+50h] eax +
push ebx  +
push [ebp+var_68]  +
call edi  +
test eax eax +
jz loc_101FF88  +
cmp eax 0FFFFFFFFh +
jz loc_101FF88  +
push [ebp+var_68]  +
call ds:DeleteDC  +
test eax eax +
jnz loc_101FFD1  +
call sub_101BCEB  +
mov [ebp+var_64] eax +
test eax eax +
jl loc_101FF7C  +
mov [ebp+var_64] 80004005h +
push offset aFailureRetur_2  +
push 2FEh  +
jmp loc_101FFC4  +
call sub_101BCEB  +
mov [ebp+var_64] eax +
test eax eax +
jl loc_101FF9B  +
mov [ebp+var_64] 80004005h +
push offset aFailureRetur_3  +
push 2FAh  +
jmp loc_101FFC4  +
call sub_101BCEB  +
mov [ebp+var_64] eax +
test eax eax +
jl loc_101FFBA  +
mov [ebp+var_64] 80004005h +
push offset aFailureRetur_3  +
push 2EEh  +
push offset aAppmoduleCreat  +
call sub_102399F  +
add esp 0Ch +
pop edi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_64] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call sub_101FCCC  +
lea esi [edi+0C0h] +
mov eax [esi] +
test eax eax +
jz loc_1020008  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
mov ecx edi +
pop edi  +
pop esi  +
jmp loc_101FCE8  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call sub_101FCCC  +
mov eax [esi+0C0h] +
xor edi edi +
inc edi  +
test eax eax +
jz loc_102005A  +
cmp dword ptr [esi+58h] 0 +
jnz loc_102005A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jge loc_1020057  +
push offset aFailedToReques  +
push 318h  +
push offset aAppmoduleReque  +
call sub_102399F  +
add esp 0Ch +
jmp loc_102005A  +
mov [esi+58h] edi +
mov [esi+54h] edi +
pop edi  +
mov ecx esi +
pop esi  +
jmp loc_101FCE8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+38h] 0 +
jnz loc_1020082  +
push [ebp+nCmdShow]  +
push dword ptr [ecx+4]  +
call ds:ShowWindow  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10200A1  +
cmp edx 7FFFFFFFh +
jbe loc_10200A6  +
mov eax 80070057h +
test eax eax +
jl loc_10200BC  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_101FC75  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_10200DE  +
cmp edx esi +
jbe loc_10200E3  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_10200FB  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_101FC3E  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_10200FD  +
xor ecx ecx +
test eax eax +
jl loc_1020114  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_101FC75  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFEh  +
push dword ptr [ebp+arg_0]  +
call sub_101C7D7  +
mov edi eax +
test edi edi +
jge loc_102015D  +
push offset aFailedToGetSou  +
push 2BBh  +
push offset aAppmoduleCopys  +
call sub_102399F  +
add esp 0Ch +
jmp loc_10201E3  +
mov edi [ebp+var_4] +
push esi  +
add edi 3 +
xor ecx ecx +
push 2  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_102019F  +
push offset aFailedToAllo_8  +
push 2BEh  +
push offset aAppmoduleCopys  +
call sub_102399F  +
add esp 0Ch +
mov edi 8007000Eh +
jmp loc_10201D7  +
push dword ptr [ebp+arg_0]  +
push offset aS  +
push edi  +
push esi  +
call sub_101C778  +
mov edi eax +
add esp 10h +
test edi edi +
jge loc_10201D0  +
push offset aFailedToCopySt  +
push 2C1h  +
push offset aAppmoduleCopys  +
call sub_102399F  +
add esp 0Ch +
jmp loc_10201D7  +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor esi esi +
test esi esi +
jz loc_10201E2  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop esi  +
mov eax edi +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
xor eax eax +
push 206h  +
push eax  +
mov [ebp+var_20C] ax +
lea eax [ebp-20Ah] +
push eax  +
mov esi ecx +
call memset  +
push offset aWsusscan_cab_0  +
push dword ptr [esi+68h]  +
lea eax [ebp+var_20C] +
push offset aSS  +
push 104h  +
push eax  +
call sub_101C778  +
mov edi eax +
add esp 20h +
test edi edi +
jge loc_1020260  +
push offset aFailedToBuildT  +
push 337h  +
push offset aAppmoduleSetsc  +
call sub_102399F  +
jmp loc_102028D  +
lea eax [ebp+var_20C] +
push eax  +
call ds:SysAllocString  +
mov [esi+5Ch] eax +
test eax eax +
jnz loc_1020290  +
push offset aFailedToAllo_9  +
push 33Ah  +
push offset aAppmoduleSetsc  +
call sub_102399F  +
mov edi 8007000Eh +
add esp 0Ch +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10247EF  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov esi 200h +
push esi  +
push dword ptr [ebp+arg_0]  +
call sub_101C7D7  +
mov edi [ebp+arg_C] +
mov ebx eax +
test ebx ebx +
jge loc_10202E8  +
push dword ptr [ebp+arg_0]  +
push offset aFailed_Paramet  +
push 34Fh  +
push offset aAppmoduleGetar  +
call sub_102399F  +
add esp 10h +
jmp loc_1020395  +
and dword ptr [edi] 0 +
push esi  +
push edi  +
call sub_1024E08  +
mov ebx eax +
test ebx ebx +
jge loc_1020314  +
push offset aFailedToAll_10  +
push 353h  +
push offset aAppmoduleGetar  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1020395  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea eax [ecx+eax*2] +
cmp word ptr [eax] 3Ah +
jz loc_1020363  +
cmp [ebp+arg_8] 0 +
jz loc_102034C  +
push [ebp+arg_8]  +
push esi  +
push dword ptr [edi]  +
call sub_102008B  +
mov ebx eax +
test ebx ebx +
jge loc_10203A4  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_0]  +
push offset aFailedToSetSVa  +
push 35Bh  +
jmp loc_1020388  +
push dword ptr [ebp+arg_0]  +
mov ebx 80070057h +
push offset aFailed_SHasInv  +
push 360h  +
jmp loc_10202D6  +
add eax 2 +
push eax  +
push esi  +
push dword ptr [edi]  +
mov [ebp+arg_8] eax +
call sub_102008B  +
mov ebx eax +
test ebx ebx +
jge loc_10203A4  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_0]  +
push offset aFailedToSetSVa  +
push 366h  +
push offset aAppmoduleGetar  +
call sub_102399F  +
add esp 14h +
mov eax [edi] +
test eax eax +
jz loc_10203A4  +
push eax  +
call sub_1024DEB  +
and dword ptr [edi] 0 +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pNumArgs] +
xor edi edi +
push eax  +
push [ebp+lpCmdLine]  +
mov esi ecx +
mov [ebp+var_10] edi +
mov [ebp+var_20] edi +
mov [ebp+var_24] edi +
mov [ebp+pszString] edi +
mov [ebp+var_14] edi +
call ds:CommandLineToArgvW  +
mov [ebp+hMem] eax +
mov ebx offset aAppmoduleParse +
cmp eax edi +
jnz loc_102040B  +
call sub_101BCEB  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_10203FC  +
mov [ebp+var_4] 80004005h +
push offset aCommandlinetoa  +
push 16Eh  +
jmp loc_1020B63  +
cmp [ebp+pNumArgs] 2 +
jge loc_1020427  +
push offset aErrorTooFewArg  +
mov [ebp+var_4] 80070057h +
push 173h  +
jmp loc_1020B63  +
lea eax [ebp+var_14] +
push eax  +
push 7FFFFFFFh  +
push [ebp+lpCmdLine]  +
call sub_101C7D7  +
cmp eax edi +
mov [ebp+var_4] eax +
jge loc_102044E  +
push offset aFailedToGetCom  +
push 177h  +
jmp loc_1020B63  +
push [ebp+var_14]  +
lea eax [esi+84h] +
push eax  +
call sub_1024E08  +
cmp eax edi +
mov [ebp+var_4] eax +
jge loc_1020473  +
push offset aFailedToAll_11  +
push 17Ah  +
jmp loc_1020B63  +
xor eax eax +
inc eax  +
cmp [ebp+pNumArgs] eax +
mov [ebp+var_C] eax +
jle loc_10208BE  +
mov eax [ebp+hMem] +
mov ecx [ebp+var_C] +
lea edi [eax+ecx*4] +
push offset a?  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10208A6  +
push offset asc_10041D4  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10208A6  +
push offset aHelp  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10208A6  +
push offset aUninstall  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10204F3  +
or dword ptr [esi+48h] 40h +
mov dword ptr [esi+30h] 1 +
jmp loc_10208AF  +
push offset aQuiet  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1020516  +
or dword ptr [esi+48h] 2 +
mov dword ptr [esi+38h] 1 +
jmp loc_10208AF  +
push offset aNorestart  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1020542  +
cmp [esi+44h] eax +
jnz loc_1020958  +
or dword ptr [esi+48h] 4 +
mov dword ptr [esi+44h] 1 +
jmp loc_10208AF  +
push offset aPromptrestart  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102056E  +
cmp [esi+44h] eax +
jnz loc_102096E  +
or dword ptr [esi+48h] 20h +
mov dword ptr [esi+44h] 4 +
jmp loc_10208AF  +
push offset aForcerestart  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102059A  +
cmp [esi+44h] eax +
jnz loc_1020984  +
or dword ptr [esi+48h] 8 +
mov dword ptr [esi+44h] 2 +
jmp loc_10208AF  +
push 0Ch  +
push offset aWarnrestart  +
push dword ptr [edi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1020616  +
cmp [esi+44h] eax +
jnz loc_102099A  +
lea eax [ebp+pszString] +
push eax  +
push offset a30  +
push dword ptr [edi]  +
mov ecx esi +
push offset aWarnrestart  +
call sub_10202A5  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020A94  +
lea eax [esi+88h] +
push eax  +
xor edi edi +
push edi  +
push [ebp+pszString]  +
call ds:StrToIntExW  +
test eax eax +
jz loc_10209B0  +
cmp [ebp+pszString] edi +
jz loc_1020606  +
push [ebp+pszString]  +
call sub_1024DEB  +
mov [ebp+pszString] edi +
or dword ptr [esi+48h] 10h +
mov dword ptr [esi+44h] 3 +
jmp loc_10208AF  +
push 3  +
push offset aKb  +
push dword ptr [edi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10206B6  +
lea ebx [esi+7Ch] +
cmp [ebx] eax +
jnz loc_10209C6  +
push ebx  +
push eax  +
push dword ptr [edi]  +
mov ecx esi +
push offset aKb  +
call sub_10202A5  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020AA3  +
mov eax [ebx] +
xor edi edi +
inc edi  +
cmp word ptr [eax+2] 0 +
jz loc_1020688  +
push 2  +
pop eax  +
mov ecx [ebx] +
movzx eax word ptr [eax+ecx] +
push eax  +
call ds:iswdigit  +
pop ecx  +
test eax eax +
jz loc_10209EB  +
mov ecx [ebx] +
inc edi  +
lea eax [edi+edi] +
cmp word ptr [eax+ecx] 0 +
jnz loc_1020665  +
push offset String  +
push ebx  +
call sub_1024E83  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020AB2  +
or dword ptr [esi+48h] 200h +
mov [ebp+var_20] 1 +
mov ebx offset aAppmoduleParse +
jmp loc_10208AF  +
push 8  +
push offset aExtract  +
push dword ptr [edi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_102070A  +
lea eax [esi+6Ch] +
cmp dword ptr [eax] 0 +
jnz loc_10209FE  +
push eax  +
push offset dword_10016B8  +
push dword ptr [edi]  +
mov ecx esi +
push offset aExtract  +
call sub_10202A5  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020AC1  +
or dword ptr [esi+48h] 100h +
mov dword ptr [esi+34h] 1 +
jmp loc_10208AF  +
push 4  +
push offset aLog  +
push dword ptr [edi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_102075A  +
lea eax [esi+80h] +
cmp dword ptr [eax] 0 +
jnz loc_1020A14  +
push eax  +
push offset aWusa_etl  +
push dword ptr [edi]  +
mov ecx esi +
push offset aLog  +
call sub_10202A5  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020AD0  +
or dword ptr [esi+48h] 80h +
jmp loc_10208AF  +
push 7  +
push offset aGpmode  +
push dword ptr [edi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_102082C  +
cmp [esi+3Ch] eax +
jnz loc_1020A2A  +
lea eax [ebp+pszString] +
push eax  +
push 0  +
push dword ptr [edi]  +
mov ecx esi +
push offset aGpmode  +
call sub_10202A5  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020ADF  +
mov eax [ebp+pszString] +
add eax 2 +
push 3Ah  +
push eax  +
call ds:wcschr  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_1020A40  +
xor eax eax +
push 4Eh  +
mov [edi] ax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [esi+78h] eax +
test eax eax +
jz loc_1020AEB  +
push [ebp+pszString]  +
push 27h  +
push eax  +
call sub_102008B  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020B04  +
movzx eax word ptr [edi+2] +
test ax ax +
jnz loc_10207F4  +
and dword ptr [esi+40h] 0 +
jmp loc_1020805  +
cmp ax 31h +
jnz loc_1020A56  +
mov dword ptr [esi+40h] 1 +
cmp [ebp+pszString] 0 +
jz loc_1020817  +
push [ebp+pszString]  +
call sub_1024DEB  +
and [ebp+pszString] 0 +
xor eax eax +
inc eax  +
or dword ptr [esi+48h] 402h +
mov [esi+3Ch] eax +
mov [esi+38h] eax +
jmp loc_10208AF  +
mov edi [edi] +
movzx eax word ptr [edi] +
cmp ax 2Fh +
jz loc_1020867  +
cmp ax 2Dh +
jz loc_1020867  +
cmp [ebp+var_10] 0 +
jnz loc_1020A6C  +
push 0  +
lea eax [esi+64h] +
push eax  +
push edi  +
call sub_101F354  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020B16  +
mov [ebp+var_10] 1 +
jmp loc_10208AF  +
push edi  +
push [ebp+var_14]  +
lea edi [esi+84h] +
push dword ptr [edi]  +
call sub_10200C5  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020B22  +
push offset asc_10040E4  +
push [ebp+var_14]  +
push dword ptr [edi]  +
call sub_10200C5  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1020B2E  +
mov [ebp+var_24] 1 +
jmp loc_10208AF  +
xor eax eax +
inc eax  +
or [esi+48h] eax +
mov [esi+2Ch] eax +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
cmp eax [ebp+pNumArgs] +
jl loc_1020482  +
mov eax [esi+30h] +
xor edi edi +
cmp eax edi +
jnz loc_10208DE  +
cmp [ebp+var_10] edi +
jz loc_1020942  +
cmp eax edi +
jnz loc_10208DE  +
cmp [esi+44h] edi +
jz loc_10208DA  +
cmp [esi+38h] edi +
jz loc_1020942  +
cmp eax edi +
jz loc_1020908  +
cmp [esi+34h] edi +
jnz loc_1020942  +
cmp eax edi +
jz loc_1020908  +
cmp [ebp+var_10] edi +
jnz loc_10208F1  +
cmp [ebp+var_20] edi +
jz loc_1020942  +
cmp eax edi +
jz loc_1020908  +
cmp [ebp+var_10] edi +
jz loc_10208FF  +
cmp [ebp+var_20] edi +
jnz loc_1020942  +
cmp eax edi +
jz loc_1020908  +
cmp [ebp+var_24] edi +
jnz loc_1020942  +
mov eax [esi+34h] +
cmp eax edi +
jz loc_1020B3A  +
cmp [ebp+var_24] edi +
jnz loc_1020942  +
cmp eax edi +
jz loc_1020B3A  +
cmp [esi+44h] edi +
jnz loc_1020942  +
cmp eax edi +
jz loc_1020B3A  +
mov eax [esi+6Ch] +
cmp [eax] di +
jnz loc_1020B3A  +
cmp [esi+38h] edi +
jz loc_1020B6C  +
push offset aFailedToGetMsu  +
mov [ebp+var_4] 80070057h +
push 282h  +
jmp loc_1020B63  +
push offset aFailed_Restart  +
mov [ebp+var_4] 80070057h +
push 1A4h  +
jmp loc_1020B63  +
push offset aFailed_Restart  +
mov [ebp+var_4] 80070057h +
push 1B3h  +
jmp loc_1020B63  +
push offset aFailed_Restart  +
mov [ebp+var_4] 80070057h +
push 1C2h  +
jmp loc_1020B63  +
push offset aFailed_Restart  +
mov [ebp+var_4] 80070057h +
push 1D1h  +
jmp loc_1020B63  +
push offset aFailed_Warnres  +
mov [ebp+var_4] 80070057h +
push 1DAh  +
jmp loc_1020B63  +
push offset aFailed_KbWasSu  +
mov [ebp+var_4] 80070057h +
push 1EAh  +
push offset aAppmoduleParse  +
call sub_102399F  +
mov ebx offset aAppmoduleParse +
jmp loc_1020B69  +
push offset aFailed_KbHasIn  +
mov [ebp+var_4] 80070057h +
push 1F5h  +
jmp loc_10209D7  +
push offset aFailed_Extract  +
mov [ebp+var_4] 80070057h +
push 208h  +
jmp loc_1020B63  +
push offset aFailed_LogWasS  +
mov [ebp+var_4] 80070057h +
push 21Ah  +
jmp loc_1020B63  +
push offset aFailed_GpmodeW  +
mov [ebp+var_4] 80070057h +
push 22Bh  +
jmp loc_1020B63  +
push offset aFailed_GpmodeH  +
mov [ebp+var_4] 80070057h +
push 235h  +
jmp loc_1020B63  +
push offset aFailed_GpmodeH  +
mov [ebp+var_4] 80070057h +
push 24Bh  +
jmp loc_1020B63  +
mov eax [ebp+hMem] +
mov ecx [ebp+var_C] +
push dword ptr [eax+ecx*4]  +
mov [ebp+var_4] 80070057h +
push offset aUnrecognizedAr  +
push 265h  +
push ebx  +
call sub_102399F  +
add esp 10h +
jmp loc_1020B6C  +
push offset aFailedToParseS  +
push 1D5h  +
jmp loc_1020B63  +
push offset aFailedToParseS  +
push 1EEh  +
jmp loc_10209D7  +
push offset aFailedToPrefix  +
push 1FAh  +
jmp loc_10209D7  +
push offset aFailedToParseS  +
push 20Ch  +
jmp loc_1020B63  +
push offset aFailedToParseS  +
push 21Eh  +
jmp loc_1020B63  +
push offset aFailedToParseS  +
push 22Fh  +
jmp loc_1020B63  +
push offset aFailedToAll_12  +
push 23Bh  +
push ebx  +
call sub_102399F  +
mov [ebp+var_4] 8007000Eh +
jmp loc_1020B69  +
push [ebp+pszString]  +
push offset aFailedToSetPro  +
push 23Eh  +
jmp loc_1020A86  +
push offset aFailedToGetM_1  +
push 26Ah  +
jmp loc_1020B63  +
push offset aFailedToAddAnA  +
push 259h  +
jmp loc_1020B63  +
push offset aFailedToAddABl  +
push 25Ch  +
jmp loc_1020B63  +
cmp [esi+38h] edi +
jz loc_1020B6C  +
push offset aQuiet  +
push [ebp+var_14]  +
push dword ptr [esi+84h]  +
call sub_10200C5  +
cmp eax edi +
mov [ebp+var_4] eax +
jge loc_1020B6C  +
push offset aFailedToAddAnA  +
push 28Bh  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
xor edi edi +
cmp [esi+2Ch] edi +
jz loc_1020B78  +
xor esi esi +
inc esi  +
jmp loc_1020B7B  +
mov esi [ebp+var_4] +
cmp [ebp+pszString] edi +
jz loc_1020B8B  +
push [ebp+pszString]  +
call sub_1024DEB  +
mov [ebp+pszString] edi +
cmp [ebp+hMem] edi +
jz loc_1020B99  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp esi edi +
jge loc_1020BD7  +
push [ebp+lpCmdLine]  +
push offset aCommandLineIsL  +
push 2A6h  +
push ebx  +
call sub_102399F  +
add esp 10h +
lea eax [ebp+lpCmdLine] +
push eax  +
push esi  +
mov [ebp+lpCmdLine] edi +
call sub_101F148  +
push [ebp+lpCmdLine]  +
push esi  +
push offset aExitWithErrorC  +
push 2A8h  +
push ebx  +
call sub_102399F  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor ecx ecx +
xor eax eax +
mov [ebp+var_10.dwSize] ecx +
lea edi [ebp+var_10.dwICC] +
mov [ebp+var_8] ecx +
stos   +
mov [ebp+hMem] ecx +
call sub_1023163  +
mov edi eax +
xor eax eax +
cmp edi eax +
mov ebx offset aAppmoduleInit +
jl loc_1020F9C  +
push eax  +
push eax  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_1020C47  +
call sub_101BCEB  +
mov edi eax +
test edi edi +
jl loc_1020C3B  +
mov edi 80004005h +
push offset aFailedToCrea_8  +
push 5Ch  +
jmp loc_1020F93  +
push 2  +
push 0  +
call ds:CoInitializeEx  +
xor edx edx +
cmp eax edx +
lea ecx [esi+8Ch] +
mov [ecx] eax +
jge loc_1020C6B  +
push offset aFailedToInitia  +
push 5Fh  +
jmp loc_1020F93  +
push edx  +
push edx  +
push edx  +
push 3  +
push 3  +
push edx  +
push edx  +
push 0FFFFFFFFh  +
push edx  +
mov [ecx] edx +
call ds:CoInitializeSecurity  +
test eax eax +
jge loc_1020C93  +
push offset aFailedToInit_3  +
push 65h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
push 64h  +
lea eax [esi+9Ch] +
push eax  +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_1020CC2  +
call sub_101BCEB  +
mov edi eax +
test edi edi +
jl loc_1020CB6  +
mov edi 80004005h +
push offset aFailedToInit_4  +
push 6Bh  +
jmp loc_1020F93  +
push [ebp+lpCmdLine]  +
mov ecx esi +
mov dword ptr [esi+0B4h] 1 +
call sub_10203B2  +
mov edi eax +
test edi edi +
jl loc_1020F72  +
cmp dword ptr [esi+2Ch] 0 +
jnz loc_1020F72  +
lea eax [ebp+var_8] +
push eax  +
call sub_101F7A8  +
test eax eax +
jl loc_1020CFD  +
cmp [ebp+var_8] 0 +
jnz loc_1020D3E  +
push 0  +
push 10h  +
push 0EA60h  +
push 0EA65h  +
call sub_101F975  +
add esp 10h +
test eax eax +
jge loc_1020D2A  +
push offset aFailedToShowNo  +
push 81h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
push offset aUserIsNotAMemb  +
mov edi 80070005h +
push 85h  +
jmp loc_1020F93  +
lea eax [esi+90h] +
push eax  +
call sub_101F1DD  +
test eax eax +
jge loc_1020D8F  +
push 0  +
push 40h  +
push 0EA60h  +
push 0EA63h  +
call sub_101F975  +
add esp 10h +
test eax eax +
jge loc_1020D7B  +
push offset aFailedToShowMu  +
push 92h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
push offset aErrorAnotherIn  +
mov edi 80070652h +
push 96h  +
jmp loc_1020F93  +
lea eax [esi+68h] +
push eax  +
call sub_1022A6B  +
mov edi eax +
test edi edi +
jge loc_1020DAD  +
push offset aFailedToCrea_1  +
push 9Dh  +
jmp loc_1020F93  +
push dword ptr [esi+68h]  +
push offset aCreatedSandbox  +
push 9Fh  +
push ebx  +
call sub_102399F  +
add esp 10h +
mov ecx esi +
call sub_10201EF  +
mov edi eax +
test edi edi +
jge loc_1020DDF  +
push offset aFailedAppmodul  +
push 0A2h  +
jmp loc_1020F93  +
lea eax [ebp+hMem] +
push eax  +
push 0EA60h  +
call sub_101F8A6  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jge loc_1020E12  +
push 0EA60h  +
push offset aFailedToGetApp  +
push 0A8h  +
push ebx  +
call sub_102399F  +
add esp 10h +
jmp loc_1020F9C  +
push [ebp+hMem]  +
call ds:SysAllocString  +
mov [esi+60h] eax +
test eax eax +
jnz loc_1020E3C  +
push offset aFailedToAll_13  +
push 0ABh  +
push ebx  +
call sub_102399F  +
mov edi 8007000Eh +
jmp loc_1020F99  +
cmp dword ptr [esi+38h] 0 +
jnz loc_1020F9C  +
lea eax [ebp+var_10] +
push eax  +
mov [ebp+var_10.dwSize] 8 +
mov [ebp+var_10.dwICC] 20h +
call ds:InitCommonControlsEx  +
test eax eax +
jnz loc_1020E81  +
call sub_101BCEB  +
mov edi eax +
test edi edi +
jl loc_1020E72  +
mov edi 80004005h +
push offset aFailureRetur_4  +
push 0B7h  +
jmp loc_1020F93  +
mov ecx esi +
call sub_101FE38  +
mov edi eax +
test edi edi +
jge loc_1020E9D  +
push offset aFailureRetur_5  +
push 0BCh  +
jmp loc_1020F93  +
lea eax [esi+14h] +
push eax  +
push 0EA6Ah  +
call sub_101F8A6  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jge loc_1020EC2  +
push offset aFailedToGetStr  +
push 0BFh  +
jmp loc_1020F93  +
lea eax [esi+18h] +
push eax  +
push 0EA6Ch  +
call sub_101F8A6  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jge loc_1020EE7  +
push offset aFailedToGetStr  +
push 0C2h  +
jmp loc_1020F93  +
lea eax [esi+1Ch] +
push eax  +
push 0EA6Dh  +
call sub_101F8A6  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jge loc_1020F0C  +
push offset aFailedToGetS_1  +
push 0C5h  +
jmp loc_1020F93  +
lea eax [esi+20h] +
push eax  +
push 0EA67h  +
call sub_101F8A6  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jge loc_1020F2E  +
push offset aFailedToGetS_2  +
push 0C8h  +
jmp loc_1020F93  +
lea eax [esi+24h] +
push eax  +
push 0EA69h  +
call sub_101F8A6  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jge loc_1020F50  +
push offset aFailedToGetS_3  +
push 0CBh  +
jmp loc_1020F93  +
add esi 28h +
push esi  +
push 0EA72h  +
call sub_101F8A6  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jge loc_1020F9C  +
push offset aFailedToGetS_4  +
push 0CEh  +
jmp loc_1020F93  +
push 0  +
push 40h  +
push 0EA60h  +
push 0EA61h  +
call sub_101F975  +
add esp 10h +
test eax eax +
jge loc_1020F9C  +
push offset aFailedToShowWe  +
push 75h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
cmp [ebp+hMem] 0 +
jz loc_1020FAF  +
push [ebp+hMem]  +
call ds:LocalFree  +
and [ebp+hMem] 0 +
test edi edi +
jge loc_1020FD8  +
and [ebp+lpCmdLine] 0 +
lea eax [ebp+lpCmdLine] +
push eax  +
push edi  +
call sub_101F148  +
push [ebp+lpCmdLine]  +
push edi  +
push offset aExitWithErrorC  +
push 0D5h  +
push ebx  +
call sub_102399F  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor ebx ebx +
mov esi ecx +
push edi  +
mov [ebp+pv] ebx +
mov edi offset aCbsclientGetst +
cmp [esi] ebx +
jz loc_1021006  +
cmp [esi+4] ebx +
jnz loc_1021019  +
push offset aCbsSessionIsNo  +
mov dword ptr [ebp+dwMessageId] 8000FFFFh +
push 0D1h  +
jmp loc_102107A  +
mov eax [esi+4] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
cmp eax ebx +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_102103D  +
push offset aFailedToQuer_0  +
push 0D5h  +
jmp loc_102107A  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_1021049  +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov eax [ebp+arg_8] +
cmp eax ebx +
jz loc_1021055  +
mov ecx [ebp+var_10] +
mov [eax] ecx +
cmp [ebp+arg_4] ebx +
jz loc_10210C4  +
mov esi [esi+4] +
mov eax [esi] +
lea ecx [ebp+pv] +
push ecx  +
push 0Bh  +
push esi  +
call dword ptr [eax+10h]  +
cmp eax ebx +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_1021085  +
push offset aFailedToQueryP  +
push 0E4h  +
push edi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_10210C4  +
mov eax [ebp+pv] +
mov ecx offset a1 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10210B3  +
cmp dx bx +
jz loc_10210AF  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10210B3  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_102108D  +
xor eax eax +
jmp loc_10210B8  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
xor ecx ecx +
cmp eax ebx +
mov eax [ebp+arg_4] +
setz cl  +
mov [eax] ecx +
cmp [ebp+pv] ebx +
jz loc_10210D5  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
mov esi dword ptr [ebp+dwMessageId] +
cmp esi ebx +
jge loc_1021100  +
lea eax [ebp+arg_4] +
push eax  +
push esi  +
mov [ebp+arg_4] ebx +
call sub_101F148  +
push [ebp+arg_4]  +
push esi  +
push offset aExitWithErrorC  +
push 0F4h  +
push edi  +
call sub_102399F  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
test byte ptr dword_10341C0 1 +
push ebx  +
push esi  +
mov esi ecx +
jnz loc_10211E2  +
or dword_10341C0 1 +
mov dword_1034178 offset aCriticalUpdate +
mov dword_103417C 0EA74h +
mov dword_1034180 offset aHotfix +
mov dword_1034184 0EA75h +
mov dword_1034188 offset aSecurityUpdate +
mov dword_103418C 0EA76h +
mov dword_1034190 offset aServicePack +
mov dword_1034194 0EA77h +
mov dword_1034198 offset aSoftwareUpdate +
mov dword_103419C 0EA78h +
mov dword_10341A0 offset aUpdate +
mov dword_10341A4 0EA79h +
mov dword_10341A8 offset aUpdateRollup +
mov dword_10341AC 0EA7Ah +
mov dword_10341B0 offset aDriver +
mov dword_10341B4 0EA7Bh +
mov dword_10341B8 offset aFeaturePack +
mov dword_10341BC 0EA7Ch +
mov eax [esi+4] +
xor ebx ebx +
lea edx [esi+210h] +
push edx  +
push 1  +
mov [ebp+pv] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_10] ebx +
mov dword ptr [ebp+var_8] ebx +
mov [ebp+hMem] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
mov [ebp+dwMessageId] eax +
jge loc_1021218  +
push offset aFailedToSavePa  +
push 192h  +
jmp loc_1021238  +
mov eax [esi+4] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push 8  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
mov [ebp+dwMessageId] eax +
jge loc_102124A  +
push offset aFailedToSave_0  +
push 195h  +
push offset aCbsclientQuery  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1021390  +
push edi  +
xor edi edi +
push dword_1034178[edi*8]  +
push [ebp+var_18]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102127A  +
inc edi  +
cmp edi 9 +
jb loc_102124D  +
cmp [ebp+var_10] ebx +
jnz loc_10212A6  +
mov [ebp+dwMessageId] 80240037h +
jmp loc_102138F  +
lea eax [ebp+var_10] +
push eax  +
lea edi dword_103417C[edi*8] +
push dword ptr [edi]  +
call sub_101F8A6  +
cmp eax ebx +
pop ecx  +
pop ecx  +
mov [ebp+dwMessageId] eax +
jge loc_1021269  +
push dword ptr [edi]  +
push offset aFailedToGetRel  +
push 19Ch  +
jmp loc_1021382  +
mov eax [esi+4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push 2  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
mov [ebp+dwMessageId] eax +
jge loc_10212C8  +
push offset aFailedToSave_1  +
push 1A9h  +
jmp loc_102132C  +
mov eax dword ptr [ebp+var_8] +
cmp [eax] bx +
jz loc_10212E2  +
push offset aDefault  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102133B  +
mov eax [esi+4] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push 7  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
mov [ebp+dwMessageId] eax +
jge loc_1021304  +
push offset aFailedToSave_2  +
push 1AFh  +
jmp loc_102132C  +
push [ebp+pv]  +
lea eax [ebp+hMem] +
push [ebp+var_10]  +
push eax  +
push 0EA73h  +
call sub_101F8A6  +
add esp 10h +
cmp eax ebx +
mov [ebp+dwMessageId] eax +
jge loc_102133B  +
push offset aFailedToGetS_5  +
push 1B2h  +
push offset aCbsclientQuery  +
call sub_102399F  +
add esp 0Ch +
jmp loc_102138F  +
add esi 214h +
cmp [ebp+hMem] ebx +
jz loc_1021365  +
push [ebp+hMem]  +
push esi  +
call sub_1025256  +
cmp eax ebx +
mov [ebp+dwMessageId] eax +
jge loc_102138F  +
push [ebp+hMem]  +
push offset aFailedToAll_14  +
push 1B8h  +
jmp loc_1021382  +
push dword ptr [ebp+var_8]  +
push esi  +
call sub_1025256  +
cmp eax ebx +
mov [ebp+dwMessageId] eax +
jge loc_102138F  +
push dword ptr [ebp+var_8]  +
push offset aFailedToAll_14  +
push 1BDh  +
push offset aCbsclientQuery  +
call sub_102399F  +
add esp 10h +
pop edi  +
mov esi ds:CoTaskMemFree +
cmp [ebp+pv] ebx +
jz loc_10213A3  +
push [ebp+pv]  +
call esi  +
mov [ebp+pv] ebx +
cmp dword ptr [ebp+var_8] ebx +
jz loc_10213B0  +
push dword ptr [ebp+var_8]  +
call esi  +
mov dword ptr [ebp+var_8] ebx +
cmp [ebp+var_18] ebx +
jz loc_10213BD  +
push [ebp+var_18]  +
call esi  +
mov [ebp+var_18] ebx +
mov esi ds:LocalFree +
cmp [ebp+hMem] ebx +
jz loc_10213D0  +
push [ebp+hMem]  +
call esi  +
mov [ebp+hMem] ebx +
cmp [ebp+var_10] ebx +
jz loc_10213DD  +
push [ebp+var_10]  +
call esi  +
mov [ebp+var_10] ebx +
mov esi [ebp+dwMessageId] +
cmp esi ebx +
jge loc_102140C  +
lea eax [ebp+dwMessageId] +
push eax  +
push esi  +
mov [ebp+dwMessageId] ebx +
call sub_101F148  +
push [ebp+dwMessageId]  +
push esi  +
push offset aExitWithErrorC  +
push 1C8h  +
push offset aCbsclientQuery  +
call sub_102399F  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+210h] +
mov eax [edi] +
test eax eax +
jz loc_1021433  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [edi] 0 +
lea edi [esi+214h] +
mov eax [edi] +
test eax eax +
jz loc_1021448  +
push eax  +
call sub_1024DEB  +
and dword ptr [edi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_1021459  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+4] 0 +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
test eax eax +
jnz loc_1021474  +
mov eax 80070057h +
jmp loc_10214B1  +
and dword ptr [eax] 0 +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
push 4  +
pop ecx  +
mov esi offset dword_10048A0 +
xor edx edx +
cmps   +
jz loc_102149B  +
mov edi [ebp+0Ch] +
push 4  +
pop ecx  +
mov esi offset dword_1001BA4 +
xor edx edx +
cmps   +
jnz loc_10214AA  +
mov ecx [ebp+8] +
mov [eax] ecx +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_10214AF  +
mov eax 80004002h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
mov dword ptr [eax] 1 +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
mov ecx [ebp+0Ch] +
mov dword ptr [eax] 1 +
mov eax [ebp+8] +
mov [eax+8] ecx +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+18h] +
and dword ptr [eax] 0 +
mov eax [ebp+1Ch] +
mov dword ptr [eax] 1 +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
call sub_1021417  +
mov eax [esi] +
test eax eax +
jz loc_102154B  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [esi] +
test eax eax +
jz loc_102154B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov dword ptr [ebp+var_4] edi +
mov ebx offset aCbsclientCreat +
cmp [esi] edi +
jnz loc_102157D  +
push offset aCbsSessionIsNo  +
mov edi 8000FFFFh +
push 0A1h  +
jmp loc_10215E3  +
call sub_1021417  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [esi+8] +
push edx  +
push [ebp+arg_0]  +
push edi  +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
test edi edi +
jge loc_10215A9  +
push offset aFailedToCrea_9  +
push 0A7h  +
jmp loc_10215E3  +
mov eax dword ptr [ebp+var_4] +
mov ecx [eax] +
lea edx [esi+4] +
push edx  +
push offset dword_10048EC  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jge loc_10215CC  +
push offset aFailedToQiOnAC  +
push 0AAh  +
jmp loc_10215E3  +
mov ecx esi +
call sub_102110E  +
mov edi eax +
test edi edi +
jge loc_10215EC  +
push offset aFailedToQuer_1  +
push 0ADh  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov eax dword ptr [ebp+var_4] +
test eax eax +
jz loc_10215FD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp+var_4] 0 +
test edi edi +
jge loc_102162D  +
mov ecx esi +
call sub_1021417  +
and [ebp+arg_0] 0 +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call sub_101F148  +
push [ebp+arg_0]  +
push edi  +
push offset aExitWithErrorC  +
push 0B8h  +
push ebx  +
call sub_102399F  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
push edi  +
mov [ebp+var_14] esi +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov [ebp+pv] ebx +
cmp [esi] ebx +
jnz loc_1021671  +
push offset aCbsSessionIsNo  +
mov edi 8000FFFFh +
push 10Ch  +
jmp loc_102182D  +
call sub_1021417  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push 10h  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_102176D  +
push offset aFailedToEnumer  +
push 112h  +
jmp loc_102182D  +
cmp [ebp+var_18] 1 +
jnz loc_1021788  +
mov esi [ebp+var_14] +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
lea edx [esi+8] +
push edx  +
push [ebp+var_8]  +
push ebx  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi ebx +
jl loc_102180B  +
mov eax [ebp+var_C] +
mov ecx [eax] +
add esi 4 +
push esi  +
push offset dword_10048EC  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi ebx +
jl loc_1021817  +
mov esi [esi] +
mov eax [esi] +
lea ecx [ebp+pv] +
push ecx  +
push 7  +
push esi  +
call dword ptr [eax+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_1021823  +
mov ecx [ebp+arg_0] +
mov eax [ebp+pv] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1021727  +
cmp dx bx +
jz loc_1021723  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1021727  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_1021701  +
xor eax eax +
jmp loc_102172C  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
mov ecx [ebp+var_14] +
cmp eax ebx +
jz loc_102183F  +
call sub_1021417  +
cmp [ebp+pv] ebx +
jz loc_102174D  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_102175D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_102176D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_102169D  +
mov edi 240007h +
cmp [ebp+pv] ebx +
jz loc_102179E  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_10217AE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_10217BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_10217CE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
cmp edi ebx +
jge loc_1021802  +
mov ecx [ebp+var_14] +
call sub_1021417  +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
mov [ebp+arg_0] ebx +
call sub_101F148  +
push [ebp+arg_0]  +
push edi  +
push offset aExitWithErrorC  +
push 140h  +
push offset aCbsclientOpenp  +
call sub_102399F  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
push offset aFailedToOpenAC  +
push 120h  +
jmp loc_102182D  +
push offset aFailedToQiOnAC  +
push 123h  +
jmp loc_102182D  +
push offset aFailedToQueryK  +
push 126h  +
push offset aCbsclientOpenp  +
call sub_102399F  +
add esp 0Ch +
jmp loc_102178D  +
call sub_102110E  +
mov edi eax +
jmp loc_102178D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 4 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
test eax eax +
jg loc_102188B  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+18h] +
fild  dword ptr [ebp+10h] +
xor eax eax +
cmp dword_1034104 eax +
push 0  +
setnz al  +
inc eax  +
mov [ecx] eax +
mov eax [ebp+10h] +
test eax eax +
jge loc_10218BD  +
fadd  ds:dbl_1004A00 +
mov eax [ebp+14h] +
fild  dword ptr [ebp+14h] +
test eax eax +
jge loc_10218CD  +
fadd  ds:dbl_1004A00 +
fdivp st(1) st +
fmul  ds:dbl_10049F8 +
call _ftol2  +
push eax  +
push 406h  +
call sub_101F75A  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
push esi  +
push offset stru_1004AB4  +
xor edi edi +
push 15h  +
push edi  +
push offset stru_1004AA4  +
mov [esi] edi +
mov [esi+4] edi +
mov [esi+210h] edi +
mov [esi+214h] edi +
call ds:CoCreateInstance  +
cmp eax edi +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_1021931  +
push offset aFailedToCre_10  +
push 6Eh  +
jmp loc_1021970  +
mov eax [esi] +
mov ecx [eax] +
push edi  +
push edi  +
push offset aWusa_0  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_1021951  +
push offset aFailedToInit_5  +
push 71h  +
jmp loc_1021970  +
push [ebp+arg_0]  +
lea eax [esi+8] +
push 104h  +
push eax  +
call sub_102008B  +
cmp eax edi +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_10219C4  +
push offset aFailedToCopySa  +
push 74h  +
push offset aCbsclientCbscl  +
call sub_102399F  +
mov eax [esi] +
add esp 0Ch +
cmp eax edi +
jz loc_102199B  +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [esi] +
cmp eax edi +
jz loc_102199B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] edi +
lea eax [ebp+arg_0] +
push eax  +
push dword ptr [ebp+dwMessageId]  +
mov [ebp+arg_0] edi +
call sub_101F148  +
push [ebp+arg_0]  +
push dword ptr [ebp+dwMessageId]  +
push offset aExitWithErrorC  +
push 7Fh  +
push offset aCbsclientCbscl  +
call sub_102399F  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi] edi +
jz loc_10219E7  +
cmp [esi+4] edi +
jnz loc_1021A09  +
push offset aCbsSessionIsNo  +
push 156h  +
mov ebx offset aCbsclientChang +
push ebx  +
mov edi 8000FFFFh +
call sub_102399F  +
add esp 0Ch +
jmp loc_1021ACF  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax edi +
jz loc_1021A2A  +
mov dword ptr [eax] offset off_1004AC4 +
mov dword ptr [eax+4] 1 +
mov [eax+8] edi +
mov [ebp+var_4] eax +
jmp loc_1021A2D  +
mov [ebp+var_4] edi +
cmp [ebp+var_4] edi +
jnz loc_1021A51  +
push offset aFailedToCre_11  +
push 15Ah  +
mov ebx offset aCbsclientChang +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov edi 8007000Eh +
jmp loc_1021ACF  +
push [ebp+var_4]  +
mov eax [esi+4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push 5  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
mov ebx offset aCbsclientChang +
test edi edi +
jge loc_1021A79  +
push offset aFailedToInit_6  +
push 15Dh  +
jmp loc_1021AB9  +
mov eax [esi] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
mov eax [esi] +
test eax eax +
jz loc_1021A95  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
test edi edi +
jge loc_1021AA5  +
push offset aFailedToFinali  +
push 161h  +
jmp loc_1021AB9  +
mov eax [ebp+var_4] +
mov edi [eax+8] +
test edi edi +
jge loc_1021AC2  +
push offset aFailedToChange  +
push 164h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jge loc_1021AF4  +
and [ebp+arg_0] 0 +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call sub_101F148  +
push [ebp+arg_0]  +
push edi  +
push offset aExitWithErrorC  +
push 16Ah  +
push ebx  +
call sub_102399F  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi 1078h +
push edi  +
xor ebx ebx +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
cmp esi ebx +
jnz loc_1021B40  +
push offset aFailedToAll_15  +
push 8Bh  +
push offset aEndtracing  +
call sub_102399F  +
add esp 0Ch +
mov edi 8007000Eh +
jmp loc_1021BC7  +
push edi  +
push ebx  +
push esi  +
call memset  +
add esp 0Ch +
push [ebp+arg_4]  +
mov [esi] edi +
push [ebp+arg_0]  +
mov dword ptr [esi+70h] 78h +
push [ebp+arg_8]  +
mov dword ptr [esi+6Ch] 878h +
push ebx  +
push ebx  +
push ebx  +
call ds:EnableTrace  +
mov edi eax +
cmp edi ebx +
jz loc_1021B9C  +
push offset aDisableCbsTrac  +
push 93h  +
push offset aEndtracing  +
call sub_102399F  +
add esp 0Ch +
cmp edi ebx +
jle loc_1021BC0  +
and edi 0FFFFh +
or edi 80070000h +
jmp loc_1021BC0  +
push 1  +
push esi  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:ControlTraceW  +
mov edi eax +
cmp edi ebx +
jz loc_1021BBE  +
push offset aStopTraceFaile  +
push 96h  +
jmp loc_1021B7D  +
mov edi ebx +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
push 2  +
mov esi offset unk_1034030 +
pop edi  +
mov eax [esi] +
mov ecx [esi+4] +
mov edx eax +
or edx ecx +
jz loc_1021BFE  +
lea edx [esi+0Ch] +
push edx  +
push ecx  +
push eax  +
call sub_1021B02  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
add esi 28h +
dec edi  +
jnz loc_1021BE1  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 418h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_414] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_410] eax +
xor eax eax +
xor ebx ebx +
push 3FEh  +
mov [ebp+var_404] ax +
lea eax [ebp-402h] +
push ebx  +
push eax  +
mov [ebp+var_418] esi +
mov dword ptr [ebp+var_40C] ebx +
mov [ebp+var_408] ebx +
call memset  +
add esp 0Ch +
call ds:GetCurrentProcessId  +
push eax  +
push edi  +
push offset aSLd  +
lea eax [ebp+var_404] +
push 200h  +
push eax  +
call sub_101C778  +
mov edi eax +
add esp 14h +
test edi edi +
jge loc_1021CAE  +
push offset aFailedCreating  +
push 3Bh  +
push offset aBegintracing  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1021E6E  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1021CB3  +
sub eax edx +
sar eax 1 +
mov ecx eax +
lea eax [ebp+var_404] +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1021CCC  +
sub eax edx +
sar eax 1 +
lea edi [eax+ecx] +
lea edi [edi+edi+7Ch] +
push edi  +
call ??2@YAPAXI@Z  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_1021D0C  +
push offset aFailedToAll_15  +
push 42h  +
push offset aBegintracing  +
call sub_102399F  +
add esp 0Ch +
mov edi 8007000Eh +
jmp loc_1021E61  +
push edi  +
push 0  +
push ebx  +
call memset  +
mov esi [ebp+var_414] +
mov [ebx] edi +
mov dword ptr [ebx+2Ch] 20000h +
mov dword ptr [ebx+28h] 1 +
lea edi [ebx+18h] +
movs   +
movs   +
movs   +
movs   +
lea eax [ebp+var_404] +
add esp 0Ch +
mov dword ptr [ebx+40h] 1000004h +
mov dword ptr [ebx+70h] 78h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1021D4C  +
sub eax ecx +
sar eax 1 +
lea ecx [eax+eax+7Ah] +
mov eax [ebp+var_418] +
mov [ebx+6Ch] ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1021D6A  +
push [ebp+var_418]  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
add ecx ebx +
push ecx  +
call sub_102008B  +
mov edi eax +
test edi edi +
jge loc_1021DA7  +
push offset aFailedToCopyLo  +
push 4Dh  +
push offset aBegintracing  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1021E61  +
push ebx  +
lea eax [ebp+var_404] +
push eax  +
lea eax [ebp+var_40C] +
push eax  +
call ds:StartTraceW  +
mov esi eax +
cmp esi 0B7h +
jz loc_1021E54  +
cmp esi 20h +
jz loc_1021E54  +
test esi esi +
jz loc_1021DFF  +
push offset aStartTraceFail  +
push 57h  +
push offset aBegintracing  +
call sub_102399F  +
add esp 0Ch +
test esi esi +
jle loc_1021DFB  +
and esi 0FFFFh +
or esi 80070000h +
mov edi esi +
jmp loc_1021E61  +
push [ebp+var_408]  +
push dword ptr [ebp+var_40C]  +
push [ebp+var_414]  +
push [ebp+arg_C]  +
push 0  +
push 1  +
call ds:EnableTrace  +
mov esi eax +
test esi esi +
jz loc_1021E2D  +
push offset aEnableTraceFai  +
push 5Ah  +
jmp loc_1021DDE  +
mov ecx dword ptr [ebp+var_40C] +
mov eax [ebp+var_410] +
and dword ptr [ebp+var_40C] 0 +
mov [eax] ecx +
mov ecx [ebp+var_408] +
and [ebp+var_408] 0 +
mov [eax+4] ecx +
jmp loc_1021E61  +
mov eax [ebp+var_410] +
xor edi edi +
mov [eax] edi +
mov [eax+4] edi +
test ebx ebx +
jz loc_1021E6E  +
push ebx  +
call ??3@YAXPAX@Z  +
pop ecx  +
xor ebx ebx +
mov eax dword ptr [ebp+var_40C] +
or eax [ebp+var_408] +
jz loc_1021EA2  +
push 1  +
push ebx  +
lea eax [ebp+var_404] +
push eax  +
push 0  +
push 0  +
call ds:ControlTraceW  +
push [ebp+var_408]  +
push dword ptr [ebp+var_40C]  +
call ds:CloseTrace  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov dword ptr [ebp+var_4] ebx +
mov esi offset dword_1034038 +
mov [ebp+var_8] ebx +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_1025256  +
mov edi eax +
test edi edi +
jl loc_1021F25  +
mov eax [esi] +
test eax eax +
jz loc_1021EF9  +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_1024F96  +
mov edi eax +
test edi edi +
jl loc_1021F34  +
lea eax [esi-8] +
push eax  +
push dword ptr [esi+14h]  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi-10h]  +
push dword ptr [ebp+var_4]  +
call sub_1021C0C  +
mov edi eax +
test edi edi +
jl loc_1021F49  +
add [ebp+var_8] 28h +
inc ebx  +
add esi 28h +
cmp [ebp+var_8] 50h +
jb loc_1021ED1  +
jmp loc_1021F63  +
push [ebp+arg_0]  +
push offset aFailedAllocati  +
push 0B6h  +
jmp loc_1021F56  +
imul ebx ebx +
push dword_1034038[ebx]  +
push offset aFailedAddingLo  +
push 0BBh  +
jmp loc_1021F56  +
push dword ptr [ebp+var_4]  +
push offset aFailedEnabling  +
push 0BFh  +
push offset aStartlogs  +
call sub_102399F  +
add esp 10h +
cmp dword ptr [ebp+var_4] 0 +
jz loc_1021F71  +
push dword ptr [ebp+var_4]  +
call sub_1024DEB  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
xor edi edi +
cmp eax edi +
jnz loc_1021FA7  +
push edi  +
push offset aSecurityAttrib  +
push 14Ch  +
push offset aCsecurityatt_3  +
call sub_102399F  +
add esp 10h +
jmp loc_1022000  +
push eax  +
call ??3@YAXPAX@Z  +
mov eax [esi+14h] +
pop ecx  +
mov [esi] edi +
cmp eax edi +
jz loc_1021FC1  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [esi+14h] edi +
mov eax [esi+10h] +
cmp eax edi +
jz loc_1021FD2  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [esi+10h] edi +
mov eax [esi+8] +
cmp eax edi +
jz loc_1021FE3  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [esi+8] edi +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_1021FF4  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [esi+0Ch] edi +
push dword ptr [esi+4]  +
call ds:FreeSid  +
mov [esi+4] edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
add esi 4 +
mov dword ptr [ebp+dwMessageId] ebx +
cmp [esi] ebx +
jz loc_1022031  +
xor eax eax +
jmp loc_10220C3  +
push esi  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
call ds:AllocateAndInitializeSid  +
test eax eax +
jnz loc_10220C0  +
call sub_101BCEB  +
cmp eax ebx +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_1022075  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push edi  +
push offset aFailedToGetAdm  +
push 71h  +
mov edi offset aCsecurityattri +
push edi  +
call sub_102399F  +
add esp 0Ch +
cmp dword ptr [ebp+dwMessageId] ebx +
jge loc_10220BF  +
push dword ptr [esi]  +
call ds:FreeSid  +
lea eax [ebp+var_14] +
push eax  +
push dword ptr [ebp+dwMessageId]  +
mov [esi] ebx +
mov [ebp+var_14] ebx +
call sub_101F148  +
push [ebp+var_14]  +
push dword ptr [ebp+dwMessageId]  +
push offset aExitWithErrorC  +
push 7Ch  +
push edi  +
call sub_102399F  +
add esp 14h +
pop edi  +
mov eax dword ptr [ebp+dwMessageId] +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
xor esi esi +
mov [ebp+var_10] ecx +
mov dword ptr [ebp+dwMessageId] esi +
mov [ebp+ReturnLength] esi +
cmp [ecx+0Ch] esi +
jz loc_10220F6  +
xor eax eax +
jmp loc_10222C5  +
push ebx  +
push edi  +
lea eax [ebp+TokenHandle] +
push eax  +
push 28h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_102213F  +
call sub_101BCEB  +
cmp eax esi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_1022122  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedOpenproc  +
push 92h  +
mov ebx offset aCsecurityatt_0 +
push ebx  +
call sub_102399F  +
add esp 0Ch +
jmp loc_102227F  +
mov edi ds:GetTokenInformation +
lea eax [ebp+ReturnLength] +
push eax  +
push esi  +
push esi  +
push 1  +
push [ebp+TokenHandle]  +
call edi  +
call ds:GetLastError  +
mov [ebp+ReturnLength] eax +
cmp eax 7Ah +
jz loc_102217F  +
call sub_101BCEB  +
cmp eax esi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_1022173  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedToGetT_0  +
push 99h  +
jmp loc_102212C  +
push 7Ah  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
mov ebx offset aCsecurityatt_0 +
test esi esi +
jnz loc_10221A1  +
push offset aFailedToAll_16  +
push 9Dh  +
jmp loc_1022245  +
lea eax [ebp+ReturnLength] +
push eax  +
push [ebp+ReturnLength]  +
push esi  +
push 1  +
push [ebp+TokenHandle]  +
call edi  +
test eax eax +
jnz loc_10221D3  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_10221C7  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedToGetUse  +
push 0A0h  +
jmp loc_1022214  +
mov eax [esi] +
test eax eax +
jnz loc_10221EC  +
push offset aFailedNullOwne  +
mov dword ptr [ebp+dwMessageId] 8007000Bh +
push 0A4h  +
jmp loc_1022214  +
push eax  +
call ds:IsValidSid  +
test eax eax +
jnz loc_102221F  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_102220A  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aErrorTheUserSi  +
push 0A8h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1022272  +
push dword ptr [esi]  +
call ds:GetLengthSid  +
push eax  +
mov [ebp+ReturnLength] eax +
call ??2@YAPAXI@Z  +
mov edi [ebp+var_10] +
pop ecx  +
mov [edi+0Ch] eax +
test eax eax +
jnz loc_1022257  +
push offset aFailedToAll_17  +
push 0AEh  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov dword ptr [ebp+dwMessageId] 8007000Eh +
jmp loc_1022272  +
push [ebp+ReturnLength]  +
push 0  +
push eax  +
call memset  +
push [ebp+ReturnLength]  +
push dword ptr [esi]  +
push dword ptr [edi+0Ch]  +
call memcpy  +
add esp 18h +
test esi esi +
jz loc_102227D  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
xor esi esi +
cmp dword ptr [ebp+dwMessageId] esi +
jge loc_10222C0  +
mov edi [ebp+var_10] +
mov eax [edi+0Ch] +
cmp eax esi +
jz loc_1022298  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [edi+0Ch] esi +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [ebp+dwMessageId]  +
mov [ebp+var_10] esi +
call sub_101F148  +
push [ebp+var_10]  +
push dword ptr [ebp+dwMessageId]  +
push offset aExitWithErrorC  +
push 0BAh  +
push ebx  +
call sub_102399F  +
add esp 14h +
mov eax dword ptr [ebp+dwMessageId] +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
xor esi esi +
mov [ebp+var_10] ecx +
mov dword ptr [ebp+dwMessageId] esi +
mov [ebp+ReturnLength] esi +
cmp [ecx+8] esi +
jz loc_10222ED  +
xor eax eax +
jmp loc_10224BC  +
push ebx  +
push edi  +
lea eax [ebp+TokenHandle] +
push eax  +
push 28h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1022336  +
call sub_101BCEB  +
cmp eax esi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_1022319  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedOpenproc  +
push 0CEh  +
mov ebx offset aCsecurityatt_1 +
push ebx  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1022476  +
mov edi ds:GetTokenInformation +
lea eax [ebp+ReturnLength] +
push eax  +
push esi  +
push esi  +
push 4  +
push [ebp+TokenHandle]  +
call edi  +
call ds:GetLastError  +
mov [ebp+ReturnLength] eax +
cmp eax 7Ah +
jz loc_1022376  +
call sub_101BCEB  +
cmp eax esi +
mov dword ptr [ebp+dwMessageId] eax +
jl loc_102236A  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedToGetT_0  +
push 0D4h  +
jmp loc_1022323  +
push 7Ah  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
mov ebx offset aCsecurityatt_1 +
test esi esi +
jnz loc_1022398  +
push offset aFailedToAll_18  +
push 0D8h  +
jmp loc_102243C  +
lea eax [ebp+ReturnLength] +
push eax  +
push [ebp+ReturnLength]  +
push esi  +
push 4  +
push [ebp+TokenHandle]  +
call edi  +
test eax eax +
jnz loc_10223CA  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_10223BE  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aFailedToGetOwn  +
push 0DBh  +
jmp loc_102240B  +
mov eax [esi] +
test eax eax +
jnz loc_10223E3  +
push offset aFailedNullOwne  +
mov dword ptr [ebp+dwMessageId] 8007000Bh +
push 0DFh  +
jmp loc_102240B  +
push eax  +
call ds:IsValidSid  +
test eax eax +
jnz loc_1022416  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_1022401  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push offset aErrorTheOwnerS  +
push 0EBh  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1022469  +
push dword ptr [esi]  +
call ds:GetLengthSid  +
push eax  +
mov [ebp+ReturnLength] eax +
call ??2@YAPAXI@Z  +
mov edi [ebp+var_10] +
pop ecx  +
mov [edi+8] eax +
test eax eax +
jnz loc_102244E  +
push offset aFailedToAll_19  +
push 0F0h  +
push ebx  +
call sub_102399F  +
add esp 0Ch +
mov dword ptr [ebp+dwMessageId] 8007000Eh +
jmp loc_1022469  +
push [ebp+ReturnLength]  +
push 0  +
push eax  +
call memset  +
push [ebp+ReturnLength]  +
push dword ptr [esi]  +
push dword ptr [edi+8]  +
call memcpy  +
add esp 18h +
test esi esi +
jz loc_1022474  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
xor esi esi +
cmp dword ptr [ebp+dwMessageId] esi +
jge loc_10224B7  +
mov edi [ebp+var_10] +
mov eax [edi+8] +
cmp eax esi +
jz loc_102248F  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [edi+8] esi +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [ebp+dwMessageId]  +
mov [ebp+var_10] esi +
call sub_101F148  +
push [ebp+var_10]  +
push dword ptr [ebp+dwMessageId]  +
push offset aExitWithErrorC  +
push 0FCh  +
push ebx  +
call sub_102399F  +
add esp 14h +
mov eax dword ptr [ebp+dwMessageId] +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push dword ptr [esi+18h]  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [esi+10h] eax +
test eax eax +
jnz loc_1022503  +
push offset aFailedToAll_20  +
push 10Dh  +
push offset aCsecurityatt_2  +
call sub_102399F  +
add esp 0Ch +
mov dword ptr [ebp+dwMessageId] 8007000Eh +
jmp loc_1022667  +
push dword ptr [esi+18h]  +
push 0  +
push eax  +
call memset  +
push 14h  +
call ??2@YAPAXI@Z  +
mov edi eax +
add esp 10h +
mov [esi+14h] edi +
test edi edi +
jnz loc_102252D  +
push offset aFailedToAll_21  +
push 111h  +
jmp loc_10224EA  +
xor eax eax +
stos   +
stos   +
stos   +
push 0Ch  +
stos   +
pop ebx  +
push ebx  +
stos   +
call ??2@YAPAXI@Z  +
mov edi eax +
pop ecx  +
mov [esi] edi +
test edi edi +
jnz loc_1022552  +
push offset aFailedToAll_22  +
push 115h  +
jmp loc_10224EA  +
xor eax eax +
stos   +
stos   +
stos   +
mov eax [esi] +
mov [eax] ebx +
mov eax [esi] +
mov ecx [esi+14h] +
mov [eax+4] ecx +
mov eax [esi] +
and dword ptr [eax+8] 0 +
mov ecx esi +
call sub_1022008  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_1022583  +
push offset aFailedToGetA_0  +
push 121h  +
jmp loc_10225B5  +
mov ecx esi +
call sub_10222CD  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_102259D  +
push offset aFailedToGetO_0  +
push 124h  +
jmp loc_10225B5  +
mov ecx esi +
call sub_10220D6  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_10225C7  +
push offset aFailedToGetU_5  +
push 127h  +
push offset aCsecurityatt_2  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1022661  +
push 1  +
push dword ptr [esi+14h]  +
call ds:InitializeSecurityDescriptor  +
test eax eax +
jz loc_1022634  +
push 2  +
push dword ptr [esi+18h]  +
push dword ptr [esi+10h]  +
call ds:InitializeAcl  +
test eax eax +
jz loc_1022634  +
push dword ptr [esi+4]  +
mov edi ds:AddAccessAllowedAce +
mov ebx 10000000h +
push ebx  +
push 2  +
push dword ptr [esi+10h]  +
call edi  +
test eax eax +
jz loc_1022634  +
push dword ptr [esi+8]  +
push ebx  +
push 2  +
push dword ptr [esi+10h]  +
call edi  +
test eax eax +
jz loc_1022634  +
push dword ptr [esi+0Ch]  +
push ebx  +
push 2  +
push dword ptr [esi+10h]  +
call edi  +
test eax eax +
jz loc_1022634  +
push 0  +
push dword ptr [esi+10h]  +
push 1  +
push dword ptr [esi+14h]  +
call ds:SetSecurityDescriptorDacl  +
test eax eax +
jnz loc_1022661  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_1022647  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push dword ptr [ebp+dwMessageId]  +
push offset aFailedToBuil_1  +
push 133h  +
push offset aCsecurityatt_2  +
call sub_102399F  +
add esp 10h +
cmp dword ptr [ebp+dwMessageId] 0 +
jge loc_102269B  +
mov ecx esi +
call sub_1021F7F  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
push eax  +
push dword ptr [ebp+dwMessageId]  +
call sub_101F148  +
push [ebp+var_8]  +
push dword ptr [ebp+dwMessageId]  +
push offset aExitWithErrorC  +
push 13Dh  +
push offset aCsecurityatt_2  +
call sub_102399F  +
add esp 14h +
mov eax dword ptr [ebp+dwMessageId] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10226BE  +
cmp ecx 7FFFFFFFh +
jbe loc_10226C3  +
mov eax 80070057h +
test eax eax +
jl loc_1022700  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_10226F3  +
cmp eax esi +
ja loc_10226F3  +
jnz loc_10226FB  +
mov [esi+edi] bl +
jmp loc_10226FB  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
mov ebx offset aCsecurityatt_4 +
cmp [esi] edi +
jnz loc_102273A  +
call sub_10224C4  +
mov edi eax +
test edi edi +
jge loc_102273A  +
push edi  +
push offset aFailedToBuil_1  +
push 3Fh  +
push ebx  +
call sub_102399F  +
add esp 10h +
jmp loc_1022741  +
mov eax [esi] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
test edi edi +
jge loc_1022767  +
and [ebp+arg_0] 0 +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call sub_101F148  +
push [ebp+arg_0]  +
push edi  +
push offset aExitWithErrorC  +
push 45h  +
push ebx  +
call sub_102399F  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push edi  +
push [ebp+cchWideChar]  +
mov dword ptr [ebp+var_64] eax +
mov eax [ebp+arg_4] +
mov [ebp+lpWideCharStr] eax +
mov [ebp+hProv] ebx +
mov [ebp+lpSecurityAttributes] ebx +
mov [ebp+var_4C] ebx +
mov [ebp+var_84] ebx +
mov [ebp+var_80] ebx +
mov [ebp+var_7C] ebx +
mov [ebp+var_78] ebx +
mov [ebp+var_74] ebx +
mov [ebp+var_70] ebx +
mov [ebp+var_6C] 100h +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_54] eax +
cmp eax ebx +
jnz loc_10227F0  +
push offset aFailedToAll_23  +
push 17Ch  +
push offset aCreatesandboxw  +
call sub_102399F  +
add esp 0Ch +
mov edi 8007000Eh +
jmp loc_1022A21  +
push [ebp+cchWideChar]  +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+lpSecurityAttributes] +
push eax  +
lea ecx [ebp+var_84] +
call sub_1022707  +
mov edi eax +
cmp edi ebx +
jge loc_102282E  +
push offset aFailedToBuil_2  +
push 180h  +
push offset aCreatesandboxw  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1022A05  +
push esi  +
push 0F0000000h  +
xor esi esi +
inc esi  +
push esi  +
push ebx  +
push ebx  +
lea eax [ebp+hProv] +
push eax  +
call ds:CryptAcquireContextW  +
test eax eax +
jnz loc_1022867  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_1022858  +
mov edi 80004005h +
push offset aFailedToAcquir  +
push 187h  +
jmp loc_1022915  +
lea eax [ebp+pbBuffer] +
push eax  +
push 10h  +
push [ebp+hProv]  +
mov [ebp+var_4C] esi +
call ds:CryptGenRandom  +
test eax eax +
jnz loc_1022899  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_102288D  +
mov edi 80004005h +
push offset aFailedToGenera  +
push 18Ch  +
jmp loc_1022915  +
movzx esi [ebp+pbBuffer] +
and esi 7 +
push 8  +
add esi 9 +
xor eax eax +
cmp esi ebx +
pop ecx  +
lea edi [ebp+var_28+1] +
mov byte ptr [ebp+var_28] bl +
stos   +
mov [ebp+var_50] ebx +
jle loc_10228EA  +
lea eax [ebp+var_28] +
mov [ebp+var_5C] eax +
mov eax [ebp+var_50] +
movzx eax [ebp+eax+pbBuffer] +
push eax  +
push offset a02x  +
push 3  +
push [ebp+var_5C]  +
call sub_10226A8  +
mov edi eax +
add esp 10h +
cmp edi ebx +
jl loc_1022927  +
inc [ebp+var_50]  +
add [ebp+var_5C] 2 +
cmp [ebp+var_50] esi +
jl loc_10228BD  +
mov esi [ebp+var_54] +
lea eax [ebp+var_28] +
push eax  +
push dword ptr [ebp+var_64]  +
push offset aSS_0  +
push [ebp+cchWideChar]  +
push esi  +
call sub_10226A8  +
mov edi eax +
add esp 14h +
cmp edi ebx +
jge loc_1022933  +
push offset aFailedToBuil_3  +
push 19Dh  +
push offset aCreatesandboxw  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1022A04  +
push offset aFailedToBuil_4  +
push 195h  +
jmp loc_1022915  +
push [ebp+lpSecurityAttributes]  +
push esi  +
call ds:CreateDirectoryA  +
test eax eax +
jnz loc_102295F  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_1022951  +
mov edi 80004005h +
push edi  +
push esi  +
push offset aFailedToCre_12  +
push 1A0h  +
jmp loc_10229B8  +
push esi  +
call ds:GetFileAttributesA  +
cmp eax 0FFFFFFFFh +
jnz loc_1022989  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_102297B  +
mov edi 80004005h +
push edi  +
push esi  +
push offset aFailedToGetDir  +
push 1A3h  +
jmp loc_10229B8  +
test eax 4000h +
jz loc_10229C7  +
push ebx  +
push esi  +
call ds:DecryptFileA  +
test eax eax +
jnz loc_10229C7  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_10229AC  +
mov edi 80004005h +
push edi  +
push esi  +
push offset aFailedToDecryp  +
push 1A8h  +
push offset aCreatesandboxw  +
call sub_102399F  +
add esp 14h +
jmp loc_1022A04  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push 0FFFFFFFFh  +
push esi  +
push ebx  +
push ebx  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_1022A04  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_10229EC  +
mov edi 80004005h +
push esi  +
push offset aFailedToConver  +
push 1AEh  +
push offset aCreatesandboxw  +
call sub_102399F  +
add esp 10h +
pop esi  +
push [ebp+var_54]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp [ebp+var_4C] ebx +
jz loc_1022A1D  +
push ebx  +
push [ebp+hProv]  +
call ds:CryptReleaseContext  +
cmp edi ebx +
jge loc_1022A49  +
lea eax [ebp+var_4C] +
push eax  +
push edi  +
mov [ebp+var_4C] ebx +
call sub_101F148  +
push [ebp+var_4C]  +
push edi  +
push offset aExitWithErrorC  +
push 1B9h  +
push offset aCreatesandboxw  +
call sub_102399F  +
add esp 14h +
lea ecx [ebp+var_84] +
call sub_1021F7F  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 110h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
and dword ptr [edi] 0 +
xor ecx ecx +
push 2  +
mov esi 104h +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
mov [ebp+var_110] 5C3A63h +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_1022AD6  +
push offset aCanTAllocateMe  +
push 1D2h  +
push offset aWusasandboxcre  +
call sub_102399F  +
add esp 0Ch +
mov esi 8007000Eh +
jmp loc_1022B5E  +
push 208h  +
push 0  +
push ebx  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetSystemDirectoryA  +
test eax eax +
jz loc_1022B2C  +
cmp eax esi +
jnb loc_1022B2C  +
mov al [ebp+Buffer] +
push esi  +
mov byte ptr [ebp+var_110] al +
push ebx  +
lea eax [ebp+var_110] +
push eax  +
call sub_1022775  +
mov esi eax +
test esi esi +
jge loc_1022B28  +
push offset aFailedToCrea_1  +
push 1E8h  +
jmp loc_1022B46  +
mov [edi] ebx +
jmp loc_1022B5A  +
call sub_101BCEB  +
mov esi eax +
test esi esi +
jl loc_1022B3C  +
mov esi 80004005h +
push offset aFailedToGetS_6  +
push 1E2h  +
push offset aWusasandboxcre  +
call sub_102399F  +
add esp 0Ch +
push ebx  +
call ??3@YAXPAX@Z  +
pop ecx  +
test esi esi +
jge loc_1022B90  +
and [ebp+var_10C] 0 +
lea eax [ebp+var_10C] +
push eax  +
push esi  +
call sub_101F148  +
push [ebp+var_10C]  +
push esi  +
push offset aExitWithErrorC  +
push 1F1h  +
push offset aWusasandboxcre  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 268h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
push 24Ch  +
lea eax [ebp+FindFileData.ftCreationTime] +
push edi  +
push eax  +
mov [ebp+lpPathName] ebx +
mov [ebp+FindFileData.dwFileAttributes] edi +
call memset  +
add esp 0Ch +
lea eax [ebp+lpFileName] +
push eax  +
push 7FFFFFFFh  +
push ebx  +
mov [ebp+lpFileName] edi +
mov dword ptr [ebp+lpExistingFileName] edi +
call sub_101C7D7  +
cmp eax edi +
mov dword ptr [ebp+dwMessageId] eax +
jge loc_1022C2C  +
push ebx  +
push offset aFailedToGetInp  +
push 20Fh  +
mov esi offset aWusasandboxcle +
push esi  +
call sub_102399F  +
add esp 10h +
jmp loc_102302F  +
cmp [ebp+lpFileName] 3 +
ja loc_1022C5D  +
push ebx  +
push offset aErrorRecursive  +
push 214h  +
mov esi offset aWusasandboxcle +
push esi  +
mov dword ptr [ebp+dwMessageId] 80070057h +
call sub_102399F  +
add esp 10h +
jmp loc_1023039  +
xor ecx ecx +
push 2  +
mov edi 104h +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+lpFileName] eax +
test eax eax +
jnz loc_1022CAA  +
push offset aFailedToAll_24  +
push 21Ch  +
mov esi offset aWusasandboxcle +
push esi  +
call sub_102399F  +
add esp 0Ch +
mov dword ptr [ebp+dwMessageId] 8007000Eh +
jmp loc_1023005  +
mov esi 208h +
push esi  +
push 0  +
push eax  +
call memset  +
xor ecx ecx +
push 2  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
add esp 10h +
mov dword ptr [ebp+lpExistingFileName] eax +
test eax eax +
jnz loc_1022CE7  +
push offset aFailedToAll_25  +
push 220h  +
jmp loc_1022C8D  +
push esi  +
push 0  +
push eax  +
call memset  +
push ebx  +
push offset aS_  +
push edi  +
push [ebp+lpFileName]  +
call sub_101C778  +
add esp 1Ch +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_1022D2D  +
push ebx  +
push offset aFailedToBuildA  +
push 224h  +
mov esi offset aWusasandboxcle +
push esi  +
call sub_102399F  +
add esp 10h +
jmp loc_1023005  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpFileName]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1022D76  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_1022D64  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push [ebp+lpFileName]  +
push offset aFailedFindfirs  +
push 227h  +
jmp loc_1022D1A  +
mov esi offset aWusasandboxcle +
mov ebx ds:lstrcmpW +
push offset a_  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
call ebx  +
test eax eax +
jz loc_1022E67  +
push offset a__  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
call ebx  +
test eax eax +
jz loc_1022E67  +
mov ebx dword ptr [ebp+lpExistingFileName] +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push [ebp+lpPathName]  +
push offset aSS  +
push edi  +
push ebx  +
call sub_101C778  +
add esp 14h +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_1022EC3  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
push ebx  +
jz loc_1022E06  +
call sub_1022BA8  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_1022E67  +
push ebx  +
push offset aFailedToRecu_0  +
push 23Dh  +
jmp loc_1022FC4  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_1022E67  +
call ds:GetLastError  +
mov ebx eax +
push ebx  +
push dword ptr [ebp+lpExistingFileName]  +
push offset aWarningFailedT  +
push 244h  +
push esi  +
call sub_102399F  +
add esp 14h +
cmp ebx 2 +
jz loc_1022E67  +
cmp ebx 3 +
jz loc_1022E67  +
push offset aWarningDelayin  +
push 247h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
push 4  +
push 0  +
push dword ptr [ebp+lpExistingFileName]  +
call ds:MoveFileExW  +
test eax eax +
jz loc_1022EE8  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1022D7B  +
mov edi ds:GetLastError +
call edi  +
cmp eax 12h +
jz loc_1022F16  +
test eax eax +
jle loc_1022EA1  +
and eax 0FFFFh +
or eax 80070000h +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jge loc_1022F16  +
push offset aFailedFindnext  +
push 253h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1022FCD  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push [ebp+lpPathName]  +
push offset aFailedToBuil_5  +
push 236h  +
push esi  +
call sub_102399F  +
add esp 14h +
jmp loc_1022FCD  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_1022F01  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push dword ptr [ebp+lpExistingFileName]  +
push offset aFailedToDelayD  +
push 249h  +
jmp loc_1022FC4  +
push [ebp+hFindFile]  +
call ds:FindClose  +
test eax eax +
jnz loc_1022F43  +
call edi  +
push eax  +
push offset aFindclose  +
push offset aFailedSErrorCo  +
push 25Fh  +
push esi  +
call sub_102399F  +
add esp 14h +
jmp loc_1022F4A  +
or [ebp+hFindFile] 0FFFFFFFFh +
mov ebx [ebp+lpPathName] +
push ebx  +
call ds:RemoveDirectoryW  +
test eax eax +
jnz loc_1022FCD  +
call edi  +
mov edi eax +
push edi  +
push ebx  +
push offset aWarningFaile_0  +
push 271h  +
push esi  +
call sub_102399F  +
add esp 14h +
cmp edi 3 +
jz loc_1022FCD  +
cmp edi 2 +
jz loc_1022FCD  +
push offset aWarningDelayin  +
push 275h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
push 4  +
push 0  +
push ebx  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_1022FCD  +
call sub_101BCEB  +
mov dword ptr [ebp+dwMessageId] eax +
test eax eax +
jl loc_1022FB9  +
mov dword ptr [ebp+dwMessageId] 80004005h +
push ebx  +
push offset aFailedToDelayD  +
push 277h  +
push esi  +
call sub_102399F  +
add esp 10h +
cmp [ebp+hFindFile] 0FFFFFFFFh +
jz loc_1023005  +
push [ebp+hFindFile]  +
call ds:FindClose  +
test eax eax +
jnz loc_1023005  +
call ds:GetLastError  +
push eax  +
push offset aFindclose  +
push offset aFailedSErrorCo  +
push 282h  +
push esi  +
call sub_102399F  +
add esp 14h +
cmp [ebp+lpFileName] 0 +
jz loc_102301A  +
push [ebp+lpFileName]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp dword ptr [ebp+lpExistingFileName] 0 +
jz loc_102302F  +
push dword ptr [ebp+lpExistingFileName]  +
call ??3@YAXPAX@Z  +
pop ecx  +
xor edi edi +
cmp dword ptr [ebp+dwMessageId] edi +
jge loc_1023070  +
lea eax [ebp+lpPathName] +
push eax  +
push dword ptr [ebp+dwMessageId]  +
mov [ebp+lpPathName] edi +
call sub_101F148  +
push [ebp+lpPathName]  +
push dword ptr [ebp+dwMessageId]  +
push offset aExitWithErrorC  +
push 289h  +
push esi  +
call sub_102399F  +
add esp 14h +
mov ecx [ebp+var_4] +
mov eax dword ptr [ebp+dwMessageId] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
lea eax [ebp+lpSecurityAttributes] +
push eax  +
lea ecx [ebp+var_20] +
mov [ebp+lpSecurityAttributes] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] 100h +
call sub_1022707  +
mov edi eax +
cmp edi ebx +
mov esi offset aWusaextractfol +
jge loc_10230E1  +
push offset aFailedToBuil_2  +
push 2A3h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1023125  +
push [ebp+lpSecurityAttributes]  +
push [ebp+lpPathName]  +
call ds:CreateDirectoryW  +
cmp eax ebx +
jnz loc_1023125  +
call ds:GetLastError  +
cmp eax 0B7h +
jz loc_1023125  +
call sub_101BCEB  +
mov edi eax +
cmp edi ebx +
jl loc_102310E  +
mov edi 80004005h +
push edi  +
push [ebp+lpPathName]  +
push offset aFailedToCre_12  +
push 2AAh  +
push esi  +
call sub_102399F  +
add esp 14h +
cmp edi ebx +
jge loc_102314D  +
lea eax [ebp+lpPathName] +
push eax  +
push edi  +
mov [ebp+lpPathName] ebx +
call sub_101F148  +
push [ebp+lpPathName]  +
push edi  +
push offset aExitWithErrorC  +
push 2AEh  +
push esi  +
call sub_102399F  +
add esp 14h +
lea ecx [ebp+var_20] +
call sub_1021F7F  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
push 0  +
push offset dword_1001394  +
call ds:EventRegister  +
test eax eax +
jge locret_1023189  +
and dword_10341C8 0 +
and dword_10341CC 0 +
retn   +
***
mov ecx dword_10341C8 +
mov edx dword_10341CC +
push esi  +
mov esi ecx +
xor eax eax +
or esi edx +
pop esi  +
jz locret_10231AD  +
push edx  +
push ecx  +
call ds:EventUnregister  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10231DC  +
cmp eax esi +
ja loc_10231DC  +
jz loc_10231E1  +
jmp loc_10231E9  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10231F2  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 20h +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1023210  +
mov edx [ebp+arg_4] +
and [ebp+var_1C] 0 +
sub eax edi +
sar eax 1 +
and [ebp+var_14] 0 +
lea eax [eax+eax+2] +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_20] ecx +
lea ecx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1023238  +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push offset dword_10013B8  +
push dword_10341CC  +
mov [ebp+var_10] edx +
push dword_10341C8  +
call ds:EventWrite  +
pop edi  +
test eax eax +
jle locret_1023284  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 40h +
push ebx  +
push esi  +
mov eax ecx +
push edi  +
lea edi [eax+2] +
xor esi esi +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_10232A2  +
mov edx [ebp+arg_8] +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_38] eax +
lea eax [ebp+arg_4] +
push 4  +
mov [ebp+var_30] eax +
pop edi  +
mov eax edx +
mov [ebp+var_40] ecx +
mov [ebp+var_3C] esi +
mov [ebp+var_34] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_28] edi +
mov [ebp+var_24] esi +
lea ecx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx si +
jnz loc_10232DA  +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_20] edx +
mov edx [ebp+arg_C] +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_1C] esi +
mov [ebp+var_14] esi +
lea ecx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx si +
jnz loc_1023300  +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_40] +
push eax  +
push edi  +
push offset dword_10013C8  +
push dword_10341CC  +
mov [ebp+var_10] edx +
push dword_10341C8  +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
call ds:EventWrite  +
pop edi  +
cmp eax esi +
pop esi  +
pop ebx  +
jle locret_102334B  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 20h +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1023365  +
mov edx [ebp+arg_4] +
and [ebp+var_1C] 0 +
sub eax edi +
sar eax 1 +
and [ebp+var_14] 0 +
lea eax [eax+eax+2] +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_20] ecx +
lea ecx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_102338D  +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push offset dword_10013D8  +
push dword_10341CC  +
mov [ebp+var_10] edx +
push dword_10341C8  +
call ds:EventWrite  +
pop edi  +
test eax eax +
jle locret_10233D9  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 20h +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10233F3  +
mov edx [ebp+arg_4] +
and [ebp+var_1C] 0 +
sub eax edi +
sar eax 1 +
and [ebp+var_14] 0 +
lea eax [eax+eax+2] +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_20] ecx +
lea ecx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_102341B  +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push offset dword_10013E8  +
push dword_10341CC  +
mov [ebp+var_10] edx +
push dword_10341C8  +
call ds:EventWrite  +
pop edi  +
test eax eax +
jle locret_1023467  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 20h +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1023481  +
mov edx [ebp+arg_4] +
and [ebp+var_1C] 0 +
sub eax edi +
sar eax 1 +
and [ebp+var_14] 0 +
lea eax [eax+eax+2] +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_20] ecx +
lea ecx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_10234A9  +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push offset dword_1001408  +
push dword_10341CC  +
mov [ebp+var_10] edx +
push dword_10341C8  +
call ds:EventWrite  +
pop edi  +
test eax eax +
jle locret_10234F5  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 40h +
push ebx  +
push esi  +
mov eax ecx +
push edi  +
lea edi [eax+2] +
xor esi esi +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_1023513  +
mov edx [ebp+arg_8] +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_38] eax +
lea eax [ebp+arg_4] +
push 4  +
mov [ebp+var_30] eax +
pop edi  +
mov eax edx +
mov [ebp+var_40] ecx +
mov [ebp+var_3C] esi +
mov [ebp+var_34] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_28] edi +
mov [ebp+var_24] esi +
lea ecx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx si +
jnz loc_102354B  +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_20] edx +
mov edx [ebp+arg_C] +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_1C] esi +
mov [ebp+var_14] esi +
lea ecx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx si +
jnz loc_1023571  +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_40] +
push eax  +
push edi  +
push offset dword_1001418  +
push dword_10341CC  +
mov [ebp+var_10] edx +
push dword_10341C8  +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
call ds:EventWrite  +
pop edi  +
cmp eax esi +
pop esi  +
pop ebx  +
jle locret_10235BC  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 20h +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10235D6  +
mov edx [ebp+arg_4] +
and [ebp+var_1C] 0 +
sub eax edi +
sar eax 1 +
and [ebp+var_14] 0 +
lea eax [eax+eax+2] +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_20] ecx +
lea ecx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_10235FE  +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push offset dword_1001428  +
push dword_10341CC  +
mov [ebp+var_10] edx +
push dword_10341C8  +
call ds:EventWrite  +
pop edi  +
test eax eax +
jle locret_102364A  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 20h +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1023664  +
mov edx [ebp+arg_4] +
and [ebp+var_1C] 0 +
sub eax edi +
sar eax 1 +
and [ebp+var_14] 0 +
lea eax [eax+eax+2] +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_20] ecx +
lea ecx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_102368C  +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push offset dword_1001438  +
push dword_10341CC  +
mov [ebp+var_10] edx +
push dword_10341C8  +
call ds:EventWrite  +
pop edi  +
test eax eax +
jle locret_10236D8  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 10h +
mov eax ecx +
push esi  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10236F2  +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push offset dword_10013F8  +
push dword_10341CC  +
mov [ebp+var_10] ecx +
push dword_10341C8  +
call ds:EventWrite  +
pop esi  +
test eax eax +
jle locret_102373E  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_102375D  +
cmp ecx 7FFFFFFFh +
jbe loc_1023762  +
mov eax 80070057h +
test eax eax +
jl loc_102379E  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_1023791  +
cmp eax esi +
ja loc_1023791  +
jnz loc_1023799  +
mov [esi+edi] bl +
jmp loc_1023799  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10237BC  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10237C1  +
mov eax 80070057h +
test eax eax +
jl loc_10237DA  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_10231B3  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
and [ebp+arg_4] 0 +
shr edx 1 +
test eax eax +
jz loc_102380C  +
cmp edx 7FFFFFFFh +
ja loc_102380C  +
push edi  +
lea edi [ebp+arg_4] +
call sub_101FC3E  +
pop edi  +
jmp loc_1023811  +
mov eax 80070057h +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1023828  +
test eax eax +
jl loc_1023825  +
mov edx [ebp+arg_4] +
add edx edx +
mov [ecx] edx +
jmp loc_1023828  +
and dword ptr [ecx] 0 +
pop ebp  +
retn 0Ch  +
***
call __SEH_prolog4_GS  +
call __SEH_prolog4_GS  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp-4] eax +
mov edx [ebp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
xor esi esi +
mov eax 401h +
mov [ebp-58h] edi +
mov [ebp-4Ch] esi +
cmp edx eax +
ja loc_1023F49  +
jz loc_1023F10  +
mov eax edx +
dec eax  +
jz loc_1023BB2  +
sub eax 6 +
jz loc_1023BA6  +
sub eax 8 +
jz loc_1023B6B  +
sub eax 102h +
jz loc_1023B51  +
sub eax 2EFh +
jnz loc_1023F6C  +
push dword_10340D0  +
push 65h  +
push edi  +
call ds:SetDlgItemTextW  +
test eax eax +
jnz loc_1023B0B  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023AFC  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_6  +
push 10Dh  +
jmp loc_1024100  +
push 2  +
push edi  +
call ds:GetDlgItem  +
mov edi eax +
cmp edi esi +
jnz loc_1023B3C  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023B2D  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_7  +
push 110h  +
jmp loc_1024100  +
push 1  +
push edi  +
call ds:EnableWindow  +
push edi  +
call ds:SetFocus  +
jmp loc_102413D  +
cmp word ptr [ebp+10h] 2 +
jnz loc_102413D  +
mov ecx offset hInstance +
call sub_1020016  +
jmp loc_102413D  +
lea eax [ebp-44h] +
push eax  +
push edi  +
call ds:BeginPaint  +
mov esi eax +
lea eax [ebp-94h] +
push eax  +
push edi  +
call ds:GetClientRect  +
push 10h  +
lea eax [ebp-94h] +
push eax  +
push esi  +
call ds:FillRect  +
lea eax [ebp-44h] +
push eax  +
push edi  +
call ds:EndPaint  +
jmp loc_102413D  +
push 2  +
push edi  +
call ds:GetDlgItem  +
push eax  +
jmp loc_1023B46  +
***
lea eax [ebp-94h] +
push eax  +
push edi  +
call ds:GetClientRect  +
test eax eax +
jnz loc_1023BE7  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023BDB  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_8  +
push 2Eh  +
jmp loc_1024100  +
mov eax dword_1034100 +
mov ebx ds:SetRect +
add eax 8 +
push eax  +
mov eax [ebp-8Ch] +
add eax 0FFFFFFF6h +
push eax  +
push 8  +
push 0Ah  +
lea eax [ebp-6Ch] +
push eax  +
call ebx  +
test eax eax +
jnz loc_1023C31  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023C25  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_8  +
push 36h  +
jmp loc_1024100  +
mov eax [ebp-60h] +
lea ecx [eax+eax+8] +
sub ecx [ebp-68h] +
add eax 8 +
push ecx  +
push dword ptr [ebp-64h]  +
push eax  +
push dword ptr [ebp-6Ch]  +
lea eax [ebp-84h] +
push eax  +
call ebx  +
test eax eax +
jnz loc_1023C76  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023C6A  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_8  +
push 3Fh  +
jmp loc_1024100  +
mov eax [ebp-60h] +
sub eax [ebp-68h] +
push esi  +
push hInstance  +
mov ebx ds:CreateWindowExW +
push 65h  +
push edi  +
push eax  +
mov eax [ebp-64h] +
sub eax [ebp-6Ch] +
push eax  +
push dword ptr [ebp-68h]  +
push dword ptr [ebp-6Ch]  +
push 50000080h  +
push esi  +
push offset aStatic  +
push esi  +
call ebx  +
cmp eax esi +
jnz loc_1023CCF  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023CC3  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_9  +
push 54h  +
jmp loc_1024100  +
mov esi ds:SendMessageW +
push 1  +
push dword_10340FC  +
push 30h  +
push eax  +
call esi  +
mov ecx [ebp-78h] +
sub ecx [ebp-80h] +
xor eax eax +
push eax  +
push hInstance  +
push 66h  +
push edi  +
push ecx  +
mov ecx [ebp-7Ch] +
sub ecx [ebp-84h] +
push ecx  +
push dword ptr [ebp-80h]  +
push dword ptr [ebp-84h]  +
push 50000008h  +
push eax  +
push offset aMsctls_progres  +
push eax  +
call ebx  +
test eax eax +
jnz loc_1023D3D  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
call sub_101BCEB  +
mov [ebp-48h] eax +
test eax eax +
jl loc_1023D31  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetu_10  +
push 6Dh  +
jmp loc_1024100  +
push 64h  +
push 0  +
push 406h  +
push eax  +
call esi  +
push 64h  +
push 1  +
push 40Ah  +
push 66h  +
push edi  +
call ds:SendDlgItemMessageW  +
test eax eax +
jnz loc_1023D7E  +
call sub_101BCEB  +
mov [ebp-48h] eax +
test eax eax +
jl loc_1023D72  +
mov dword ptr [ebp-48h] 80004005h +
push offset aStartProgressB  +
push 75h  +
jmp loc_1024100  +
xor esi esi +
xor eax eax +
mov [ebp-74h] esi +
lea edi [ebp-70h] +
stos   +
lea eax [ebp-50h] +
push eax  +
push 0EA6Bh  +
mov [ebp-50h] esi +
mov [ebp-5Ch] esi +
mov [ebp-54h] esi +
call sub_101F8A6  +
cmp eax esi +
pop ecx  +
pop ecx  +
mov [ebp-48h] eax +
jge loc_1023DBD  +
push offset aFailedToGetS_7  +
push 83h  +
mov esi offset aProgresswindow +
jmp loc_1023E8A  +
push dword ptr [ebp-58h]  +
call ds:GetDC  +
mov edi eax +
mov [ebp-5Ch] edi +
mov esi offset aProgresswindow +
test edi edi +
jnz loc_1023DEB  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
push offset aFailureRetu_11  +
push 8Bh  +
push esi  +
call sub_102399F  +
add esp 0Ch +
push dword_10340FC  +
push edi  +
call ds:SelectObject  +
mov [ebp-54h] eax +
test eax eax +
jnz loc_1023E0B  +
push offset aFailureRetur_3  +
push 92h  +
jmp loc_1023E8A  +
lea eax [ebp-74h] +
push eax  +
push dword ptr [ebp-50h]  +
call ds:lstrlenW  +
push eax  +
push dword ptr [ebp-50h]  +
push edi  +
call ds:GetTextExtentPoint32W  +
test eax eax +
jnz loc_1023E33  +
push offset aFailureRetu_12  +
push 9Ah  +
jmp loc_1023E8A  +
mov eax [ebp-70h] +
push 5  +
imul eax eax +
pop ecx  +
cdq   +
idiv  ecx +
mov edi [ebp-74h] +
mov edx [ebp-88h] +
mov ecx [ebp-8Ch] +
push 0  +
push hInstance  +
add edi edi +
push 2  +
push dword ptr [ebp-58h]  +
sub ecx edi +
sub ecx 0Ah +
push eax  +
push edi  +
sub edx eax +
sub edx 8 +
push edx  +
push ecx  +
push 58010001h  +
push dword ptr [ebp-50h]  +
push offset aButton  +
push 0  +
call ebx  +
test eax eax +
jnz loc_1023E99  +
push offset aFailureRetu_13  +
push 0B2h  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
push esi  +
call sub_102399F  +
add esp 0Ch +
jmp loc_1023EAA  +
push 0  +
push dword_10340FC  +
push 30h  +
push eax  +
call ds:SendMessageW  +
push dword ptr [ebp-54h]  +
push dword ptr [ebp-5Ch]  +
call ds:SelectObject  +
test eax eax +
jnz loc_1023ED1  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
push offset aFailureRetur_3  +
push 0BFh  +
push esi  +
call sub_102399F  +
add esp 0Ch +
push dword ptr [ebp-5Ch]  +
push dword ptr [ebp-58h]  +
call ds:ReleaseDC  +
test eax eax +
jnz loc_1023EF8  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
push offset aWarning_Ignore  +
push 0C6h  +
push esi  +
call sub_102399F  +
add esp 0Ch +
cmp dword ptr [ebp-50h] 0 +
jz loc_102410E  +
push dword ptr [ebp-50h]  +
call ds:LocalFree  +
jmp loc_102410E  +
push dword_10340D4  +
push 65h  +
push edi  +
call ds:SetDlgItemTextW  +
test eax eax +
jnz loc_102413D  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023F3A  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_6  +
push 11Ah  +
jmp loc_1024100  +
mov ecx edx +
mov eax 402h +
sub ecx eax +
jz loc_10240D0  +
dec ecx  +
jz loc_102409A  +
dec ecx  +
jz loc_1024064  +
dec ecx  +
jz loc_1023F92  +
dec ecx  +
jz loc_1023F7F  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edx  +
push edi  +
call ds:DefWindowProcW  +
jmp loc_1024140  +
push esi  +
push dword ptr [ebp+10h]  +
push eax  +
push 66h  +
push edi  +
call ds:SendDlgItemMessageW  +
jmp loc_102413D  +
push dword_10340D8  +
push 65h  +
push edi  +
call ds:SetDlgItemTextW  +
test eax eax +
jnz loc_1023FC7  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023FB8  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_6  +
push 123h  +
jmp loc_1024100  +
push 66h  +
push edi  +
call ds:GetDlgItem  +
mov edi eax +
cmp edi esi +
jnz loc_1023FF8  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1023FE9  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetu_14  +
push 127h  +
jmp loc_1024100  +
push esi  +
push esi  +
push 40Ah  +
push edi  +
call ds:SendMessageW  +
test eax eax +
jnz loc_102402C  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_102401D  +
mov dword ptr [ebp-48h] 80004005h +
push offset aEndProgressBar  +
push 12Ah  +
jmp loc_1024100  +
push 50000000h  +
push 0FFFFFFF0h  +
push edi  +
call ds:SetWindowLongW  +
test eax eax +
jnz loc_102413D  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_1024055  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetu_15  +
push 12Dh  +
jmp loc_1024100  +
push dword_10340CC  +
push 65h  +
push edi  +
call ds:SetDlgItemTextW  +
test eax eax +
jnz loc_102413D  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_102408E  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_6  +
push 104h  +
jmp loc_1024100  +
push dword_10340C8  +
push 65h  +
push edi  +
call ds:SetDlgItemTextW  +
test eax eax +
jnz loc_102413D  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_10240C4  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_6  +
push 0FDh  +
jmp loc_1024100  +
push dword_10340C4  +
push 65h  +
push edi  +
call ds:SetDlgItemTextW  +
test eax eax +
jnz loc_102413D  +
call sub_101BCEB  +
cmp eax esi +
mov [ebp-48h] eax +
jl loc_10240F6  +
mov dword ptr [ebp-48h] 80004005h +
push offset aFailureRetur_6  +
push 0F6h  +
mov esi offset aProgresswindow +
push esi  +
call sub_102399F  +
add esp 0Ch +
cmp dword ptr [ebp-48h] 0 +
jge loc_102413D  +
and dword ptr [ebp-54h] 0 +
lea eax [ebp-54h] +
push eax  +
push dword ptr [ebp-48h]  +
call sub_101F148  +
push dword ptr [ebp-54h]  +
push dword ptr [ebp-48h]  +
push offset aExitWithErrorC  +
push 141h  +
push esi  +
call sub_102399F  +
add esp 14h +
mov eax [ebp-4Ch] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp dword_10340E8 edi +
jz loc_1024173  +
xor eax eax +
jmp loc_1024303  +
push ebx  +
push 2Ch  +
lea eax [ebp+var_4C.style] +
push edi  +
push eax  +
call memset  +
mov eax hInstance +
add esp 0Ch +
push 65h  +
push eax  +
mov [ebp+var_4C.cbSize] 30h +
mov [ebp+var_4C.lpfnWndProc] offset loc_1023A6C +
mov [ebp+var_4C.hInstance] eax +
call ds:LoadIconW  +
push 7F00h  +
push edi  +
mov [ebp+var_4C.hIcon] eax +
call ds:LoadCursorW  +
push 5  +
mov [ebp+var_4C.hCursor] eax +
call ds:GetStockObject  +
mov [ebp+var_4C.hbrBackground] eax +
lea eax [ebp+var_4C] +
mov ebx offset aWusaprogress +
push eax  +
mov [ebp+var_4C.lpszClassName] ebx +
call ds:RegisterClassExW  +
test ax ax +
jnz loc_1024205  +
call sub_101BCEB  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_10241E9  +
mov [ebp+var_4] 80004005h +
push offset aFailedToRegist  +
push 161h  +
push offset aCreateprogress  +
call sub_102399F  +
add esp 0Ch +
jmp loc_10242FF  +
push esi  +
push edi  +
call ds:GetDC  +
mov esi ds:GetDeviceCaps +
push 58h  +
push eax  +
mov [ebp+var_C] eax +
call esi  +
push 5Ah  +
push [ebp+var_C]  +
shl eax 2 +
mov [ebp+nWidth] eax +
call esi  +
imul eax eax +
cdq   +
sub eax edx +
mov esi eax +
push edi  +
lea eax [ebp+pvParam] +
push eax  +
push edi  +
push 30h  +
sar esi 1 +
call ds:SystemParametersInfoW  +
mov eax [ebp+pvParam] +
sub eax [ebp+nWidth] +
push edi  +
add eax [ebp+var_14] +
push hInstance  +
cdq   +
sub eax edx +
mov ecx eax +
mov eax [ebp+var_10] +
push edi  +
sub eax esi +
add eax [ebp+var_18] +
push edi  +
push esi  +
push [ebp+nWidth]  +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
sar ecx 1 +
push ecx  +
push 90C00000h  +
push lpWindowName  +
push ebx  +
push edi  +
call ds:CreateWindowExW  +
mov esi eax +
cmp esi edi +
jnz loc_10242A4  +
call sub_101BCEB  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_1024298  +
mov [ebp+var_4] 80004005h +
push offset aFailedToCreate  +
push 179h  +
jmp loc_10242EA  +
push esi  +
call ds:UpdateWindow  +
test eax eax +
jnz loc_10242CE  +
call sub_101BCEB  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_10242C2  +
mov [ebp+var_4] 80004005h +
push offset aFailedToUpdate  +
push 17Ch  +
jmp loc_10242EA  +
push edi  +
push edi  +
push 402h  +
push esi  +
call ds:SendMessageW  +
test eax eax +
jz loc_10242F9  +
push offset aFailedToSendMe  +
push 181h  +
push offset aCreateprogress  +
call sub_102399F  +
add esp 0Ch +
jmp loc_10242FE  +
mov eax [ebp+arg_0] +
mov [eax] esi +
pop esi  +
mov eax [ebp+var_4] +
pop ebx  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
sub eax 10h +
mov [ebp+lpFileName] edi +
jz loc_1024335  +
sub eax 3Eh +
jz loc_102437B  +
sub eax 0C2h +
jz loc_1024357  +
dec eax  +
jnz loc_102434F  +
push edi  +
push [ebp+hDlg]  +
call ds:EndDialog  +
xor esi esi +
inc esi  +
cmp [ebp+lpFileName] edi +
jz loc_102434F  +
push [ebp+lpFileName]  +
call sub_1024DEB  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
push 7F01h  +
push edi  +
call ds:LoadIconW  +
cmp eax edi +
jz loc_102433F  +
push edi  +
push eax  +
push 170h  +
push 68h  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
jmp loc_102433F  +
cmp [ebp+arg_8] 69h +
jnz loc_102434F  +
mov eax [ebp+arg_C] +
cmp dword ptr [eax+8] 0FFFFFFFEh +
jnz loc_102434F  +
push offset aStackupdate_ur  +
push dword_1034118  +
lea eax [ebp+lpFileName] +
push offset aSS  +
push eax  +
call sub_102534C  +
xor esi esi +
add esp 10h +
inc esi  +
test eax eax +
jl loc_1024342  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push edi  +
push eax  +
call memset  +
mov eax [ebp+hDlg] +
add esp 0Ch +
push [ebp+lpFileName]  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.hwnd] eax +
mov [ebp+ExecInfo.nShow] esi +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_10243E3  +
mov [ebp+ExecInfo.lpFile] offset aHttpGo_microso +
jmp loc_10243E9  +
mov eax [ebp+lpFileName] +
mov [ebp+ExecInfo.lpFile] eax +
lea eax [ebp+ExecInfo] +
push eax  +
call ds:ShellExecuteExW  +
jmp loc_1024342  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
and [ebp+var_8.dwSize] esi +
push edi  +
xor eax eax +
lea edi [ebp+var_8.dwICC] +
stos   +
cmp dword_10340E8 eax +
jnz loc_10244A8  +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_8.dwSize] 8 +
mov [ebp+var_8.dwICC] 8000h +
call ds:InitCommonControlsEx  +
test eax eax +
jnz loc_1024455  +
call sub_101BCEB  +
mov esi eax +
test esi esi +
jl loc_1024449  +
mov esi 80004005h +
push offset aInitcommoncont  +
push 1E4h  +
jmp loc_102448F  +
push 0  +
push offset DialogFunc  +
push dword_10340B4  +
push 67h  +
push hInstance  +
call ds:DialogBoxParamW  +
cmp eax 0FFFFFFFFh +
jnz loc_102449E  +
call sub_101BCEB  +
mov esi eax +
test esi esi +
jl loc_1024485  +
mov esi 80004005h +
push offset aFailedToShowSt  +
push 1EAh  +
push offset aShowstackupdat  +
call sub_102399F  +
add esp 0Ch +
jmp loc_10244A8  +
mov dword_1034144 1 +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10244DB  +
test eax eax +
jnz loc_10244E0  +
mov ecx [esi] +
test ecx ecx +
jz loc_10244D8  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10244CC  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_10341F4 +
push offset dword_10341E4  +
push dword_10341F0  +
mov dword_10341E4 eax +
push offset unk_10341D4  +
push offset unk_10341D8  +
push offset unk_10341D0  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_10341E0 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_20] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1024583  +
cmp eax esi +
jnz loc_1024576  +
xor esi esi +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_1024586  +
push 3E8h  +
call ds:Sleep  +
jmp loc_102455D  +
xor esi esi +
inc esi  +
mov eax dword_103466C +
cmp eax esi +
jnz loc_1024599  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10245C8  +
mov eax dword_103466C +
test eax eax +
jnz loc_10245C2  +
mov dword_103466C esi +
push offset dword_1001350  +
push offset dword_1001344  +
call sub_10244BF  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10245C8  +
jmp loc_10246EC  +
mov dword_10341EC esi +
mov eax dword_103466C +
cmp eax esi +
jnz loc_10245EC  +
push offset dword_1001340  +
push offset dword_1001334  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_103466C 2 +
cmp [ebp+var_20] ebx +
jnz loc_10245F9  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_103467C ebx +
jz loc_102461A  +
push offset dword_103467C  +
call sub_1024A49  +
pop ecx  +
test eax eax +
jz loc_102461A  +
push ebx  +
push 2  +
push ebx  +
call dword_103467C  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_10246EC  +
mov eax [eax] +
mov [ebp+var_24] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
ja $LN58  +
cmp cx bx +
jz loc_102463F  +
cmp [ebp+var_1C] ebx +
jnz $LN58  +
movzx ecx word ptr [eax] +
cmp cx bx +
jz loc_1024654  +
cmp cx 20h +
ja loc_1024654  +
inc eax  +
inc eax  +
mov [ebp+var_24] eax +
jmp loc_102463F  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_1024660  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_1024663  +
push 0Ah  +
pop ecx  +
push ecx  +
push eax  +
push ebx  +
push 1000000h  +
call _wWinMain@16  +
mov dword_10341E8 eax +
cmp dword_10341DC ebx +
jnz $LN59  +
push eax  +
call ds:exit  +
cmp cx 22h +
jnz loc_1024695  +
xor ecx ecx +
cmp [ebp+var_1C] ebx +
setz cl  +
mov [ebp+var_1C] ecx +
inc eax  +
inc eax  +
jmp loc_1024629  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-28h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_10341E8 eax +
xor ebx ebx +
cmp dword_10341DC ebx +
jnz $LN59  +
push eax  +
call ds:_exit  +
cmp dword_10341EC ebx +
jnz loc_10246D7  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_10341E8 +
jmp loc_10246F8  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1024715  +
xor eax eax +
jmp loc_1024762  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1024711  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_102474F  +
cmp ecx 20Bh +
jnz loc_1024711  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1024711  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_102475D  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1024711  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_10341DC eax +
call sub_1024BB8  +
push eax  +
call ds:__set_app_type  +
or dword_1034674 0FFFFFFFFh +
or dword_1034678 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10341FC +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10341F8 +
mov [eax] ecx +
call sub_1024B4A  +
cmp dword_1034088 0 +
jnz loc_10247BB  +
push offset sub_1024B4A  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1024B32  +
xor eax eax +
retn   +
***
call sub_1024BF7  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_1034078 +
jnz loc_10247FA  +
retn 0  +
jmp loc_1024C8D  +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_102480F  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_10247EF  +
jmp __SEH_epilog4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10247EF  +
push offset dword_1034078  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1024993  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1024993  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_102498D  +
cmp eax 19930521h +
jz loc_102498D  +
cmp eax 19930522h +
jz loc_102498D  +
cmp eax 1994000h +
jnz loc_1024993  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push offset unk_1024956  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10249D6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10249D2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1024A3D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1024A35  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1024A3F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1024A25  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_10249C0  +
pop ecx  +
test eax eax +
jz loc_1024AA6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1024A00  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1024AA6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1024AAF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1024BAB  +
cmp ecx 0FFFFFFFFh +
jz loc_1024BAB  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1024BA4  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1024BA4  +
cmp edx 10000000h +
jnb loc_1024BA4  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1024BA4  +
jmp loc_1024B9F  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1024BED  +
push eax  +
call sub_1024B52  +
test eax eax +
jz loc_1024BED  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1024BE2  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1024BED  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1034078 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1024C29  +
test eax ebx +
jz loc_1024C29  +
not eax  +
mov dword_103407C eax +
jmp loc_1024C84  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1024C70  +
test dword_1034078 ebx +
jnz loc_1024C75  +
mov esi 0BB40E64Fh +
mov dword_1034078 esi +
not esi  +
mov dword_103407C esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1034300 eax +
mov dword_10342FC ecx +
mov dword_10342F8 edx +
mov dword_10342F4 ebx +
mov dword_10342F0 esi +
mov dword_10342EC edi +
mov word_1034318 ss +
mov word_103430C cs +
mov word_10342E8 ds +
mov word_10342E4 es +
mov word_10342E0 fs +
mov word_10342DC gs +
pushf   +
pop dword_1034310  +
mov eax [ebp+0] +
mov dword_1034304 eax +
mov eax [ebp+4] +
mov dword_1034308 eax +
lea eax [ebp+8] +
mov dword_1034314 eax +
mov eax [ebp-320h] +
mov dword_1034250 10001h +
mov eax dword_1034308 +
mov dword_103420C eax +
mov dword_1034200 0C0000409h +
mov dword_1034204 1 +
mov eax dword_1034078 +
mov [ebp-328h] eax +
mov eax dword_103407C +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 0FFFFFFFCh +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
cmp eax ebx +
jz loc_1024E3C  +
mov ecx [eax-4] +
cmp ecx edi +
jnb loc_1024E2F  +
push eax  +
call sub_1024DEB  +
and [esi] ebx +
jmp loc_1024E3C  +
cmp ecx ebx +
jbe loc_1024E38  +
xor ecx ecx +
mov [eax] cx +
cmp [esi] ebx +
jnz loc_1024E75  +
lea eax [edi+edi+4] +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_1024E69  +
push offset aFailedToAll_26  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov ebx eax +
call sub_10254AC  +
add esp 10h +
jmp loc_1024E75  +
mov [eax] edi +
add eax 4 +
xor ecx ecx +
mov [esi] eax +
mov [eax] cx +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx ds:lstrlenW +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ecx ecx +
push edi  +
xor edi edi +
mov [ebp+var_4] ecx +
mov [ebp+var_8] ecx +
mov [ebp+var_C] ecx +
cmp eax ecx +
jz loc_1024EB6  +
mov edi [eax-4] +
push eax  +
mov [ebp+var_4] ecx +
call ebx  +
mov [ebp+var_8] eax +
push [ebp+lpString]  +
call ebx  +
mov edx [ebp+var_8] +
lea ecx [eax+edx+1] +
mov [ebp+arg_0] eax +
cmp ecx edx +
jb loc_1024F5C  +
cmp ecx eax +
jb loc_1024F5C  +
cmp edi ecx +
jnb loc_1024F37  +
mov edi ecx +
lea eax [edi+edi+4] +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_1024F09  +
push offset aFailedToAll_26  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov [ebp+var_4] eax +
call sub_10254AC  +
add esp 10h +
jmp loc_1024F87  +
mov [eax] edi +
lea ebx [eax+4] +
mov eax [esi] +
test eax eax +
jz loc_1024F28  +
mov ecx [ebp+var_8] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
add esp 0Ch +
jmp loc_1024F2D  +
xor eax eax +
mov [ebx] ax +
mov eax [esi] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_0] +
mov [esi] ebx +
lea ebx [eax+eax] +
mov eax [esi] +
lea ecx [edi+edi] +
sub ecx ebx +
push ecx  +
push eax  +
add eax ebx +
push eax  +
call ds:memmove  +
push ebx  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call memcpy  +
add esp 18h +
jmp loc_1024F79  +
push offset aInsufficientBu  +
mov eax 8007007Ah +
push 1  +
push eax  +
push 4000000h  +
mov [ebp+var_4] eax +
call sub_10254AC  +
add esp 10h +
cmp [ebp+var_C] 0 +
jz loc_1024F87  +
push [ebp+var_C]  +
call sub_1024DEB  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:lstrlenW +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
cmp eax edi +
jz loc_1024FC0  +
mov edi [eax-4] +
push eax  +
call ebx  +
mov [ebp+var_4] eax +
push [ebp+lpString]  +
call ebx  +
mov ecx [ebp+var_4] +
lea eax [eax+ecx+1] +
cmp edi eax +
jnb loc_102502A  +
mov edi eax +
lea eax [edi+edi+4] +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_1024FFF  +
push offset aFailedToAll_26  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov esi eax +
call sub_10254AC  +
add esp 10h +
jmp loc_102505E  +
mov [eax] edi +
lea ebx [eax+4] +
mov eax [esi] +
test eax eax +
jz loc_102501E  +
mov ecx [ebp+var_4] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
add esp 0Ch +
jmp loc_1025023  +
xor eax eax +
mov [ebx] ax +
mov eax [esi] +
mov [esi] ebx +
mov [ebp+var_8] eax +
push [ebp+lpString]  +
push edi  +
push dword ptr [esi]  +
call sub_10200C5  +
mov esi eax +
test esi esi +
jge loc_1025050  +
push offset aFailedToConcat  +
push 1  +
push esi  +
push 4000000h  +
call sub_10254AC  +
add esp 10h +
cmp [ebp+var_8] 0 +
jz loc_102505E  +
push [ebp+var_8]  +
call sub_1024DEB  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ecx ecx +
push edi  +
mov edi ds:lstrlenW +
mov [ebp+var_4] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
cmp eax ecx +
jz loc_102509D  +
mov ecx [eax-4] +
push eax  +
mov [ebp+var_4] ecx +
call edi  +
mov [ebp+var_C] eax +
push [ebp+lpString]  +
call edi  +
push [ebp+arg_8]  +
mov ebx eax +
call edi  +
mov edi [ebp+var_C] +
add ebx eax +
lea ebx [ebx+edi+1] +
cmp [ebp+var_4] ebx +
jnb loc_102510D  +
lea eax [ebx+ebx+4] +
push eax  +
mov [ebp+var_4] ebx +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_10250E5  +
push offset aFailedToAll_26  +
push 1  +
mov edi 8007000Eh +
push edi  +
push 4000000h  +
call sub_10254AC  +
add esp 10h +
jmp loc_102515D  +
mov [eax] ebx +
lea ebx [eax+4] +
mov eax [esi] +
test eax eax +
jz loc_1025101  +
lea ecx [edi+edi+2] +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
add esp 0Ch +
jmp loc_1025106  +
xor eax eax +
mov [ebx] ax +
mov eax [esi] +
mov [esi] ebx +
mov [ebp+var_8] eax +
push [ebp+lpString]  +
push [ebp+var_4]  +
push dword ptr [esi]  +
call sub_10200C5  +
mov edi eax +
test edi edi +
jge loc_1025127  +
push offset aFailedToConcat  +
jmp loc_102513F  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push dword ptr [esi]  +
call sub_10200C5  +
mov edi eax +
test edi edi +
jge loc_102514F  +
push offset aFailedToConc_0  +
push 1  +
push edi  +
push 4000000h  +
call sub_10254AC  +
add esp 10h +
cmp [ebp+var_8] 0 +
jz loc_102515D  +
push [ebp+var_8]  +
call sub_1024DEB  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
test eax eax +
jz loc_1025197  +
mov ebx [eax-4] +
push eax  +
call ds:lstrlenW  +
mov [ebp+var_8] eax +
test ebx ebx +
jnz loc_10251C1  +
push 40h  +
pop ebx  +
push ebx  +
push esi  +
call sub_1024E08  +
mov edi eax +
test edi edi +
jge loc_10251C1  +
push dword ptr [ebp+arg_4]  +
push offset aFailedToAll_27  +
push 1  +
push edi  +
push 4000000h  +
call sub_10254AC  +
add esp 14h +
jmp loc_102522E  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_4]  +
push ebx  +
push dword ptr [esi]  +
call sub_10237A7  +
mov edi eax +
cmp edi 8007007Ah +
jnz loc_1025202  +
cmp [ebp+var_4] 0 +
jnz loc_10251F0  +
mov eax [esi] +
and dword ptr [esi] 0 +
mov edx [ebp+var_8] +
xor ecx ecx +
mov [ebp+var_4] eax +
mov [eax+edx*2] cx +
add ebx ebx +
push ebx  +
push esi  +
call sub_1024E08  +
mov edi eax +
test edi edi +
jl loc_1025237  +
xor edi edi +
inc edi  +
cmp edi 1 +
jz loc_10251C1  +
test edi edi +
jge loc_1025220  +
push offset aFailedToFormat  +
push 1  +
push edi  +
push 4000000h  +
call sub_10254AC  +
add esp 10h +
cmp [ebp+var_4] 0 +
jz loc_102522E  +
push [ebp+var_4]  +
call sub_1024DEB  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push dword ptr [ebp+arg_4]  +
push offset aFailedToAll_28  +
push 1  +
push edi  +
push 4000000h  +
call sub_10254AC  +
add esp 14h +
jmp loc_1025220  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_4]  +
call sub_101C7D7  +
mov esi eax +
test esi esi +
jge loc_102528F  +
push offset aFailedToGetLen  +
push 1  +
push esi  +
push 4000000h  +
call sub_10254AC  +
add esp 10h +
jmp loc_10252D4  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi [ebp+var_4] +
inc edi  +
push edi  +
push ebx  +
call sub_1024E08  +
mov esi eax +
test esi esi +
jge loc_10252AC  +
push offset aFailedToAll_29  +
jmp loc_10252C2  +
push [ebp+arg_4]  +
push edi  +
push dword ptr [ebx]  +
call sub_102008B  +
mov esi eax +
test esi esi +
jge loc_10252D2  +
push offset aFailedToCopySo  +
push 1  +
push esi  +
push 4000000h  +
call sub_10254AC  +
add esp 10h +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebx] +
mov eax [esi-4] +
push edi  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push esi  +
call sub_101C7D7  +
mov edi eax +
test edi edi +
jge loc_102530D  +
push offset aFailedToGetL_0  +
jmp loc_102532E  +
mov eax [ebp+var_4] +
cmp word ptr [esi+eax*2-2] 5Ch +
jz loc_102533E  +
push offset dword_100138C  +
push ebx  +
call sub_1024F96  +
mov edi eax +
test edi edi +
jge loc_102533E  +
push offset aFailedToConc_1  +
push 1  +
push edi  +
push 4000000h  +
call sub_10254AC  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push dword ptr [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102516B  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call sub_10255AF  +
mov ebx offset aUnknownError +
push 0Eh  +
mov edi ebx +
mov esi eax +
pop ecx  +
xor edx edx +
cmps   +
jz loc_102538E  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_10253F5  +
mov ecx [ebp+arg_0] +
mov eax ecx +
sar eax 10h +
and eax 1FFFh +
push ecx  +
cmp eax 7 +
jnz loc_10253AC  +
call sub_1026604  +
jmp loc_10253F5  +
cmp eax 0Fh +
jnz loc_10253B8  +
call sub_1025C7D  +
jmp loc_10253F5  +
cmp eax 0E5Eh +
jnz loc_10253C6  +
call sub_1030841  +
jmp loc_10253F5  +
call sub_102FA07  +
push 0Eh  +
mov edi ebx +
mov esi eax +
pop ecx  +
xor edx edx +
cmps   +
jz loc_10253DD  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_10253F5  +
mov eax [ebp+arg_0] +
or eax 10000000h +
cmp [ebp+arg_0] eax +
mov eax offset aNtstatusError +
jz loc_10253F5  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword_1034534  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_8] +
push esi  +
push ecx  +
push eax  +
mov esi 400h +
push esi  +
lea eax [ebp+OutputString] +
push eax  +
call sub_1023747  +
test eax eax +
jl loc_1025498  +
cmp [ebp+arg_4] 0 +
jz loc_102548B  +
push [ebp+arg_0]  +
call sub_1025367  +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+OutputString] +
push eax  +
push offset aSHresult0x08xS  +
lea eax [ebp+var_804] +
push esi  +
push eax  +
call sub_10226A8  +
add esp 18h +
test eax eax +
jl loc_1025498  +
lea eax [ebp+var_804] +
jmp loc_1025491  +
lea eax [ebp+OutputString] +
push eax  +
call ds:OutputDebugStringA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_10247EF  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_1034078 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
cmp dword_1034530 ebx +
jz loc_102558A  +
mov eax dword_1034534 +
cmp eax ebx +
jz loc_102558A  +
cmp dword_1034538 ebx +
jz loc_102558A  +
cmp [ebp+arg_8] bl +
jz loc_102554F  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call sub_1023747  +
test eax eax +
jl loc_102559C  +
push [ebp+arg_4]  +
call sub_1025367  +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+var_404] +
push eax  +
push offset aSHresult0x08xS  +
push [ebp+arg_0]  +
call sub_1025401  +
add esp 14h +
push ebx  +
push ebx  +
push ebx  +
mov esi eax +
call dword_1034538  +
push eax  +
push offset aCbswdslog  +
push offset aDW7rtmBaseCbsU  +
push 39Eh  +
jmp loc_1025576  +
lea ecx [ebp+arg_10] +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
call eax  +
push ebx  +
push ebx  +
push ebx  +
mov esi eax +
call dword_1034538  +
push eax  +
push offset aCbswdslog  +
push offset aDW7rtmBaseCbsU  +
push 3A4h  +
push ebx  +
push offset aD  +
push 20000h  +
push esi  +
call dword_1034530  +
jmp loc_102559C  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_C]  +
push dword ptr [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_102541D  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10247EF  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 80092024h +
cmp eax ecx +
jg loc_1025876  +
jz loc_102586C  +
mov ecx 80091011h +
cmp eax ecx +
jg loc_1025767  +
jz loc_102575D  +
add ecx 0FFFFFFF3h +
cmp eax ecx +
jg loc_10256D0  +
jz loc_10256C6  +
mov ecx 80070006h +
cmp eax ecx +
jg loc_102566D  +
jz loc_1025663  +
cmp eax 80004001h +
jz loc_1025659  +
cmp eax 80004002h +
jz loc_102564F  +
cmp eax 80004003h +
jz loc_1025645  +
cmp eax 80004004h +
jz loc_102563B  +
cmp eax 80004005h +
jz loc_1025631  +
cmp eax 80070005h +
jnz loc_1025B53  +
mov eax offset aE_accessdenied +
jmp loc_1025B5F  +
mov eax offset aE_fail +
jmp loc_1025B5F  +
mov eax offset aE_abort +
jmp loc_1025B5F  +
mov eax offset aE_pointer +
jmp loc_1025B5F  +
mov eax offset aE_nointerface +
jmp loc_1025B5F  +
mov eax offset aE_notimpl +
jmp loc_1025B5F  +
mov eax offset aE_handle +
jmp loc_1025B5F  +
cmp eax 8007000Eh +
jz loc_10256BC  +
cmp eax 80070057h +
jz loc_10256B2  +
cmp eax 80091001h +
jz loc_10256A8  +
cmp eax 80091002h +
jz loc_102569E  +
cmp eax 80091003h +
jnz loc_1025B53  +
mov eax offset aCrypt_e_oid_fo +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_unknow +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_msg_er +
jmp loc_1025B5F  +
mov eax offset aE_invalidarg +
jmp loc_1025B5F  +
mov eax offset aE_outofmemory +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_invali +
jmp loc_1025B5F  +
add eax 7FF6EFFBh +
cmp eax 0Bh +
ja loc_1025B53  +
jmp ds:off_1025B63[eax*4]  +
mov eax offset aCrypt_e_unexpe +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_auth_a +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_hash_v +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_inva_0 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_alread +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_not_de +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_recipi +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_contro +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_issuer +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_signer +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_attrib +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_stream +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_stre_0 +
jmp loc_1025B5F  +
add eax 7FF6DFFFh +
cmp eax 22h +
ja loc_1025B53  +
jmp ds:off_1025B93[eax*4]  +
mov eax offset aCrypt_e_bad_le +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_bad_en +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_file_e +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_not_fo +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_exists +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_pro +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_self_s +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_delete +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_mat +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_unex_0 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_key +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_dec +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_bad_ms +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_sig +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_pendin +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_revoke +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_rev +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_r_0 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_revoca +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_not_in +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_inva_1 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_inva_2 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_inva_3 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_inva_4 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_not_ch +
jmp loc_1025B5F  +
mov ecx 80093133h +
cmp eax ecx +
jg loc_1025A09  +
jz loc_10259FF  +
add ecx 0FFFFFFD0h +
cmp eax ecx +
jg loc_102597C  +
jz loc_1025972  +
mov ecx 8009202Bh +
cmp eax ecx +
jg loc_1025919  +
jz loc_102590F  +
cmp eax 80092025h +
jz loc_1025905  +
cmp eax 80092026h +
jz loc_10258FB  +
cmp eax 80092027h +
jz loc_10258F1  +
cmp eax 80092028h +
jz loc_10258E7  +
cmp eax 80092029h +
jz loc_10258DD  +
cmp eax 8009202Ah +
jnz loc_1025B53  +
mov eax offset aCrypt_e_not__0 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_verify +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_ver +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_v_0 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_securi +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_filere +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_no_tru +
jmp loc_1025B5F  +
cmp eax 8009202Ch +
jz loc_1025968  +
cmp eax 80093000h +
jz loc_102595E  +
cmp eax 80093100h +
jz loc_1025954  +
cmp eax 80093101h +
jz loc_102594A  +
cmp eax 80093102h +
jnz loc_1025B53  +
mov eax offset aCrypt_e_asn1_e +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_i +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_0 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_oss_er +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_missin +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_c +
jmp loc_1025B5F  +
add eax 7FF6CEFCh +
cmp eax 0Ah +
ja loc_1025B53  +
jmp ds:off_1025C1F[eax*4]  +
mov eax offset aCrypt_e_asn1_l +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_1 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_m +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_o +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_b +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_2 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_3 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_4 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_5 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_r +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_u +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_p +
jmp loc_1025B5F  +
mov ecx 800B0109h +
cmp eax ecx +
jg loc_1025AF3  +
jz loc_1025AEC  +
add ecx 0FFFFFFFAh +
cmp eax ecx +
jg loc_1025A99  +
jz loc_1025A8F  +
cmp eax 80093134h +
jz loc_1025A85  +
cmp eax 80093201h +
jz loc_1025A7B  +
cmp eax 80093202h +
jz loc_1025A71  +
cmp eax 800B0100h +
jz loc_1025A67  +
cmp eax 800B0101h +
jz loc_1025A5D  +
cmp eax 800B0102h +
jnz loc_1025B53  +
mov eax offset aCert_e_validit +
jmp loc_1025B5F  +
mov eax offset aCert_e_expired +
jmp loc_1025B5F  +
mov eax offset aTrust_e_nosign +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_n +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_6 +
jmp loc_1025B5F  +
mov eax offset aCrypt_e_asn1_7 +
jmp loc_1025B5F  +
mov eax offset aCert_e_role +
jmp loc_1025B5F  +
cmp eax 800B0104h +
jz loc_1025AE5  +
cmp eax 800B0105h +
jz loc_1025ADE  +
cmp eax 800B0106h +
jz loc_1025AD4  +
cmp eax 800B0107h +
jz loc_1025ACA  +
cmp eax 800B0108h +
jnz loc_1025B53  +
mov eax offset aCert_e_malform +
jmp loc_1025B5F  +
mov eax offset aCert_e_issuerc +
jmp loc_1025B5F  +
mov eax offset aCert_e_purpose +
jmp loc_1025B5F  +
mov eax offset aCert_e_critica +
jmp loc_1025B5F  +
mov eax offset aCert_e_pathlen +
jmp loc_1025B5F  +
mov eax offset aCert_e_untrust +
jmp loc_1025B5F  +
test eax eax +
jg loc_1025B50  +
jz loc_1025B49  +
add eax 7FF4FEF6h +
cmp eax 0Ah +
ja loc_1025B53  +
jmp ds:off_1025C4B[eax*4]  +
mov eax offset aCert_e_chainin +
jmp loc_1025B5F  +
mov eax offset aCert_e_revoked +
jmp loc_1025B5F  +
mov eax offset aCert_e_untru_0 +
jmp loc_1025B5F  +
mov eax offset aCert_e_revocat +
jmp loc_1025B5F  +
mov eax offset aCert_e_cn_no_m +
jmp loc_1025B5F  +
mov eax offset aCert_e_wrong_u +
jmp loc_1025B5F  +
mov eax offset aCert_e_untru_1 +
jmp loc_1025B5F  +
mov eax offset aCert_e_invalid +
jmp loc_1025B5F  +
mov eax offset aCert_e_inval_0 +
jmp loc_1025B5F  +
mov eax offset aS_ok +
jmp loc_1025B5F  +
dec eax  +
jz loc_1025B5A  +
mov eax offset aUnknownError +
jmp loc_1025B5F  +
mov eax offset aS_false +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 800F0243h +
cmp eax ecx +
jg loc_102604F  +
jz loc_1026045  +
add ecx 0FFFFFFDAh +
cmp eax ecx +
jg loc_1025EBE  +
jz loc_1025EB4  +
mov ecx 800F020Ah +
cmp eax ecx +
jg loc_1025DEB  +
jz loc_1025DE1  +
add ecx 0FFFFFFF7h +
cmp eax ecx +
jg loc_1025D7C  +
jz loc_1025D72  +
mov ecx 800F0100h +
cmp eax ecx +
jg loc_1025D2A  +
jz loc_1025D20  +
cmp eax 800F0000h +
jz loc_1025D16  +
cmp eax 800F0001h +
jz loc_1025D0C  +
cmp eax 800F0002h +
jz loc_1025D02  +
cmp eax 800F0003h +
jnz loc_1026395  +
mov eax offset aSpapi_e_genera +
jmp loc_10263B6  +
mov eax offset aSpapi_e_sectio +
jmp loc_10263B6  +
mov eax offset aSpapi_e_bad_se +
jmp loc_10263B6  +
mov eax offset aSpapi_e_expect +
jmp loc_10263B6  +
mov eax offset aSpapi_e_wrong_ +
jmp loc_10263B6  +
cmp eax 800F0101h +
jz loc_1025D68  +
cmp eax 800F0102h +
jz loc_1025D5E  +
cmp eax 800F0103h +
jz loc_1025D54  +
cmp eax 800F0200h +
jnz loc_1026395  +
mov eax offset aSpapi_e_no_ass +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_bac +
jmp loc_10263B6  +
mov eax offset aSpapi_e_line_n +
jmp loc_10263B6  +
mov eax offset aSpapi_e_sect_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_class_ +
jmp loc_10263B6  +
add eax 7FF0FDFEh +
cmp eax 7 +
ja loc_1026395  +
jmp ds:off_10263BD[eax*4]  +
mov eax offset aSpapi_e_duplic +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_dri +
jmp loc_10263B6  +
mov eax offset aSpapi_e_key_do +
jmp loc_10263B6  +
mov eax offset aSpapi_e_invali +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_devins +
jmp loc_10263B6  +
mov eax offset aSpapi_e_devinf +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_1 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_inf +
jmp loc_10263B6  +
add eax 7FF0FDF5h +
cmp eax 11h +
ja loc_1026395  +
jmp ds:off_10263DD[eax*4]  +
mov eax offset aSpapi_e_no_suc +
jmp loc_10263B6  +
mov eax offset aSpapi_e_cant_l +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_2 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_di_do_ +
jmp loc_10263B6  +
mov eax offset aSpapi_e_di_nof +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_3 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_dev +
jmp loc_10263B6  +
mov eax offset aSpapi_e_devi_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_devi_1 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_di_bad +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_cla +
jmp loc_10263B6  +
mov eax offset aSpapi_e_filequ +
jmp loc_10263B6  +
mov eax offset aSpapi_e_bad__0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_c_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_a_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_def +
jmp loc_10263B6  +
mov eax offset aSpapi_e_device +
jmp loc_10263B6  +
mov eax offset aSpapi_e_devi_2 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_bad_in +
jmp loc_10263B6  +
add eax 7FF0FDE2h +
cmp eax 24h +
ja loc_1026395  +
jmp ds:off_1026425[eax*4]  +
mov eax offset aSpapi_e_no_s_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_4 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_5 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_remote +
jmp loc_10263B6  +
mov eax offset aSpapi_e_machin +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_con +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_6 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_s_1 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_di_pos +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_7 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_com +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_d_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_8 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_di_don +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inva_9 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_non_wi +
jmp loc_10263B6  +
mov eax offset aSpapi_e_non__0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_cat +
jmp loc_10263B6  +
mov eax offset aSpapi_e_devi_3 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_not_di +
jmp loc_10263B6  +
mov eax offset aSpapi_e_cant_r +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inv_10 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_driver +
jmp loc_10263B6  +
mov eax offset aSpapi_e_in_wow +
jmp loc_10263B6  +
mov eax offset aSpapi_e_set_sy +
jmp loc_10263B6  +
mov eax offset aSpapi_e_incorr +
jmp loc_10263B6  +
mov eax offset aSpapi_e_sce_di +
jmp loc_10263B6  +
mov eax offset aSpapi_e_unknow +
jmp loc_10263B6  +
mov eax offset aSpapi_e_pnp_re +
jmp loc_10263B6  +
mov eax offset aSpapi_e_remo_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_not_an +
jmp loc_10263B6  +
mov eax offset aSpapi_e_inf_in +
jmp loc_10263B6  +
mov eax offset aSpapi_e_di_fun +
jmp loc_10263B6  +
mov eax offset aSpapi_e_no_aut +
jmp loc_10263B6  +
mov eax offset aSpapi_e_authen +
jmp loc_10263B6  +
mov eax offset aSpapi_e_auth_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_auth_1 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_auth_2 +
jmp loc_10263B6  +
mov ecx 800F0300h +
cmp eax ecx +
jg loc_10260D3  +
jz loc_10260C9  +
add eax 7FF0FDBCh +
cmp eax 8 +
ja loc_1026395  +
jmp ds:off_10264B9[eax*4]  +
mov eax offset aSpapi_e_signat +
jmp loc_10263B6  +
mov eax offset aSpapi_e_only_v +
jmp loc_10263B6  +
mov eax offset aSpapi_e_devi_4 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_driv_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_devi_5 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_driv_1 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_wron_0 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_file_h +
jmp loc_10263B6  +
mov eax offset aSpapi_e_driv_2 +
jmp loc_10263B6  +
mov eax offset aSpapi_e_unreco +
jmp loc_10263B6  +
mov ecx 800F084Fh +
cmp eax ecx +
jg loc_1026321  +
jz loc_1026317  +
add eax 7FF0F800h +
cmp eax 43h +
ja loc_1026395  +
jmp ds:off_10264DD[eax*4]  +
mov eax offset aCbs_e_internal +
jmp loc_10263B6  +
mov eax offset aCbs_e_not_init +
jmp loc_10263B6  +
mov eax offset aCbs_e_already_ +
jmp loc_10263B6  +
mov eax offset aCbs_e_invalid_ +
jmp loc_10263B6  +
mov eax offset aCbs_e_open_fai +
jmp loc_10263B6  +
mov eax offset aCbs_e_invali_0 +
jmp loc_10263B6  +
mov eax offset aCbs_e_pending +
jmp loc_10263B6  +
mov eax offset aCbs_e_not_inst +
jmp loc_10263B6  +
mov eax offset aCbs_e_image_no +
jmp loc_10263B6  +
mov eax offset aCbs_e_array_el +
jmp loc_10263B6  +
mov eax offset aCbs_e_reestabl +
jmp loc_10263B6  +
mov eax offset aCbs_e_property +
jmp loc_10263B6  +
mov eax offset aCbs_e_unknown_ +
jmp loc_10263B6  +
mov eax offset aCbs_e_manifest +
jmp loc_10263B6  +
mov eax offset aCbs_e_manife_0 +
jmp loc_10263B6  +
mov eax offset aCbs_e_manife_1 +
jmp loc_10263B6  +
mov eax offset aCbs_e_manife_2 +
jmp loc_10263B6  +
mov eax offset aCbs_e_manife_3 +
jmp loc_10263B6  +
mov eax offset aCbs_e_manife_4 +
jmp loc_10263B6  +
mov eax offset aCbs_e_invali_1 +
jmp loc_10263B6  +
mov eax offset aCbs_e_invali_2 +
jmp loc_10263B6  +
mov eax offset aCbs_e_invali_3 +
jmp loc_10263B6  +
mov eax offset aCbs_e_dpx_job_ +
jmp loc_10263B6  +
mov eax offset aCbs_e_package_ +
jmp loc_10263B6  +
mov eax offset aCbs_e_identity +
jmp loc_10263B6  +
mov eax offset aCbs_e_duplicat +
jmp loc_10263B6  +
mov eax offset aCbs_e_invali_4 +
jmp loc_10263B6  +
mov eax offset aCbs_e_unexpect +
jmp loc_10263B6  +
mov eax offset aCbs_e_excessiv +
jmp loc_10263B6  +
mov eax offset aCbs_e_cycle_ev +
jmp loc_10263B6  +
mov eax offset aCbs_e_not_appl +
jmp loc_10263B6  +
mov eax offset aCbs_e_source_m +
jmp loc_10263B6  +
mov eax offset aCbs_e_cancel +
jmp loc_10263B6  +
mov eax offset aCbs_e_abort +
jmp loc_10263B6  +
mov eax offset aCbs_e_illegal_ +
jmp loc_10263B6  +
mov eax offset aCbs_e_new_serv +
jmp loc_10263B6  +
mov eax offset aCbs_e_source_n +
jmp loc_10263B6  +
mov eax offset aCbs_e_cannot_u +
jmp loc_10263B6  +
mov eax offset aCbs_e_pending_ +
jmp loc_10263B6  +
mov eax offset aCbs_e_stack_sh +
jmp loc_10263B6  +
mov eax offset aCbs_e_insuffic +
jmp loc_10263B6  +
mov eax offset aCbs_e_ac_power +
jmp loc_10263B6  +
mov eax offset aCbs_e_stack_up +
jmp loc_10263B6  +
mov eax offset aCbs_e_sqm_repo +
jmp loc_10263B6  +
mov eax offset aCbs_e_dependen +
jmp loc_10263B6  +
mov eax offset aCbs_e_pac_init +
jmp loc_10263B6  +
mov eax offset aCbs_e_not_allo +
jmp loc_10263B6  +
mov eax offset aCbs_e_exclusiv +
jmp loc_10263B6  +
mov eax offset aCbs_e_image_un +
jmp loc_10263B6  +
mov eax offset aCbs_e_session_ +
jmp loc_10263B6  +
mov eax offset aCbs_e_sessio_0 +
jmp loc_10263B6  +
mov eax offset aCbs_e_sessio_1 +
jmp loc_10263B6  +
mov eax offset aCbs_e_sessio_2 +
jmp loc_10263B6  +
mov eax offset aCbs_e_unexpe_0 +
jmp loc_10263B6  +
mov eax offset aCbs_e_resolve_ +
jmp loc_10263B6  +
mov ecx 800F0905h +
cmp eax ecx +
jg loc_1026379  +
jz loc_1026372  +
cmp eax 800F0900h +
jz loc_102636B  +
cmp eax 800F0901h +
jz loc_1026364  +
cmp eax 800F0902h +
jz loc_102635D  +
cmp eax 800F0903h +
jz loc_1026356  +
cmp eax 800F0904h +
jnz loc_1026395  +
mov eax offset aCbs_e_more_tha +
jmp loc_10263B6  +
mov eax offset aCbs_e_invali_5 +
jmp loc_10263B6  +
mov eax offset aCbs_e_busy +
jmp loc_10263B6  +
mov eax offset aCbs_e_manife_5 +
jmp loc_10263B6  +
mov eax offset aCbs_e_xml_pars +
jmp loc_10263B6  +
mov eax offset aCbs_e_no_activ +
jmp loc_10263B6  +
cmp eax 800F1000h +
jz loc_10263B1  +
cmp eax 0F0801h +
jz loc_10263AA  +
cmp eax 0F0802h +
jz loc_10263A3  +
cmp eax 0F0803h +
jz loc_102639C  +
mov eax offset aUnknownError +
jmp loc_10263B6  +
mov eax offset aCbs_s_stack_sh +
jmp loc_10263B6  +
mov eax offset aCbs_s_already_ +
jmp loc_10263B6  +
mov eax offset aCbs_s_busy +
jmp loc_10263B6  +
mov eax offset aSpapi_e_error_ +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 800700F0h +
cmp eax ecx +
jg loc_1026D48  +
jz loc_1026D3E  +
add eax 7FF8FFFFh +
cmp eax 0E9h +
ja loc_102C283  +
jmp ds:off_102C2A8[eax*4]  +
mov eax offset aError_invalid_ +
jmp loc_102C2A4  +
mov eax offset aError_file_not +
jmp loc_102C2A4  +
mov eax offset aError_path_not +
jmp loc_102C2A4  +
mov eax offset aError_too_many +
jmp loc_102C2A4  +
mov eax offset aError_invali_0 +
jmp loc_102C2A4  +
mov eax offset aError_arena_tr +
jmp loc_102C2A4  +
mov eax offset aError_not_enou +
jmp loc_102C2A4  +
mov eax offset aError_invali_1 +
jmp loc_102C2A4  +
mov eax offset aError_bad_envi +
jmp loc_102C2A4  +
mov eax offset aError_bad_form +
jmp loc_102C2A4  +
mov eax offset aError_invali_2 +
jmp loc_102C2A4  +
mov eax offset aError_invali_3 +
jmp loc_102C2A4  +
mov eax offset aError_outofmem +
jmp loc_102C2A4  +
mov eax offset aError_invali_4 +
jmp loc_102C2A4  +
mov eax offset aError_current_ +
jmp loc_102C2A4  +
mov eax offset aError_not_same +
jmp loc_102C2A4  +
mov eax offset aError_no_more_ +
jmp loc_102C2A4  +
mov eax offset aError_write_pr +
jmp loc_102C2A4  +
mov eax offset aError_bad_unit +
jmp loc_102C2A4  +
mov eax offset aError_not_read +
jmp loc_102C2A4  +
mov eax offset aError_bad_comm +
jmp loc_102C2A4  +
mov eax offset aError_crc +
jmp loc_102C2A4  +
mov eax offset aError_bad_leng +
jmp loc_102C2A4  +
mov eax offset aError_seek +
jmp loc_102C2A4  +
mov eax offset aError_not_dos_ +
jmp loc_102C2A4  +
mov eax offset aError_sector_n +
jmp loc_102C2A4  +
mov eax offset aError_out_of_p +
jmp loc_102C2A4  +
mov eax offset aError_write_fa +
jmp loc_102C2A4  +
mov eax offset aError_read_fau +
jmp loc_102C2A4  +
mov eax offset aError_gen_fail +
jmp loc_102C2A4  +
mov eax offset aError_sharing_ +
jmp loc_102C2A4  +
mov eax offset aError_lock_vio +
jmp loc_102C2A4  +
mov eax offset aError_wrong_di +
jmp loc_102C2A4  +
mov eax offset aError_sharin_0 +
jmp loc_102C2A4  +
mov eax offset aError_handle_e +
jmp loc_102C2A4  +
mov eax offset aError_handle_d +
jmp loc_102C2A4  +
mov eax offset aError_not_supp +
jmp loc_102C2A4  +
mov eax offset aError_rem_not_ +
jmp loc_102C2A4  +
mov eax offset aError_dup_name +
jmp loc_102C2A4  +
mov eax offset aError_bad_netp +
jmp loc_102C2A4  +
mov eax offset aError_network_ +
jmp loc_102C2A4  +
mov eax offset aError_dev_not_ +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_0 +
jmp loc_102C2A4  +
mov eax offset aError_adap_hdw +
jmp loc_102C2A4  +
mov eax offset aError_bad_net_ +
jmp loc_102C2A4  +
mov eax offset aError_unexp_ne +
jmp loc_102C2A4  +
mov eax offset aError_bad_rem_ +
jmp loc_102C2A4  +
mov eax offset aError_printq_f +
jmp loc_102C2A4  +
mov eax offset aError_no_spool +
jmp loc_102C2A4  +
mov eax offset aError_print_ca +
jmp loc_102C2A4  +
mov eax offset aError_netname_ +
jmp loc_102C2A4  +
mov eax offset aError_networ_0 +
jmp loc_102C2A4  +
mov eax offset aError_bad_dev_ +
jmp loc_102C2A4  +
mov eax offset aError_bad_ne_0 +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_1 +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_2 +
jmp loc_102C2A4  +
mov eax offset aError_sharin_1 +
jmp loc_102C2A4  +
mov eax offset aError_req_not_ +
jmp loc_102C2A4  +
mov eax offset aError_redir_pa +
jmp loc_102C2A4  +
mov eax offset aError_file_exi +
jmp loc_102C2A4  +
mov eax offset aError_cannot_m +
jmp loc_102C2A4  +
mov eax offset aError_fail_i24 +
jmp loc_102C2A4  +
mov eax offset aError_out_of_s +
jmp loc_102C2A4  +
mov eax offset aError_already_ +
jmp loc_102C2A4  +
mov eax offset aError_invali_5 +
jmp loc_102C2A4  +
mov eax offset aError_invali_6 +
jmp loc_102C2A4  +
mov eax offset aError_net_writ +
jmp loc_102C2A4  +
mov eax offset aError_no_proc_ +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_3 +
jmp loc_102C2A4  +
mov eax offset aError_excl_sem +
jmp loc_102C2A4  +
mov eax offset aError_sem_is_s +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_4 +
jmp loc_102C2A4  +
mov eax offset aError_invali_7 +
jmp loc_102C2A4  +
mov eax offset aError_sem_owne +
jmp loc_102C2A4  +
mov eax offset aError_sem_user +
jmp loc_102C2A4  +
mov eax offset aError_disk_cha +
jmp loc_102C2A4  +
mov eax offset aError_drive_lo +
jmp loc_102C2A4  +
mov eax offset aError_broken_p +
jmp loc_102C2A4  +
mov eax offset aError_open_fai +
jmp loc_102C2A4  +
mov eax offset aError_buffer_o +
jmp loc_102C2A4  +
mov eax offset aError_disk_ful +
jmp loc_102C2A4  +
mov eax offset aError_no_mor_0 +
jmp loc_102C2A4  +
mov eax offset aError_invali_8 +
jmp loc_102C2A4  +
mov eax offset aError_invali_9 +
jmp loc_102C2A4  +
mov eax offset aError_inval_10 +
jmp loc_102C2A4  +
mov eax offset aError_bad_driv +
jmp loc_102C2A4  +
mov eax offset aError_call_not +
jmp loc_102C2A4  +
mov eax offset aError_sem_time +
jmp loc_102C2A4  +
mov eax offset aError_insuffic +
jmp loc_102C2A4  +
mov eax offset aError_inval_11 +
jmp loc_102C2A4  +
mov eax offset aError_inval_12 +
jmp loc_102C2A4  +
mov eax offset aError_no_volum +
jmp loc_102C2A4  +
mov eax offset aError_mod_not_ +
jmp loc_102C2A4  +
mov eax offset aError_proc_not +
jmp loc_102C2A4  +
mov eax offset aError_wait_no_ +
jmp loc_102C2A4  +
mov eax offset aError_child_no +
jmp loc_102C2A4  +
mov eax offset aError_direct_a +
jmp loc_102C2A4  +
mov eax offset aError_negative +
jmp loc_102C2A4  +
mov eax offset aError_seek_on_ +
jmp loc_102C2A4  +
mov eax offset aError_is_join_ +
jmp loc_102C2A4  +
mov eax offset aError_is_joine +
jmp loc_102C2A4  +
mov eax offset aError_is_subst +
jmp loc_102C2A4  +
mov eax offset aError_not_join +
jmp loc_102C2A4  +
mov eax offset aError_not_subs +
jmp loc_102C2A4  +
mov eax offset aError_join_to_ +
jmp loc_102C2A4  +
mov eax offset aError_subst_to +
jmp loc_102C2A4  +
mov eax offset aError_join_t_0 +
jmp loc_102C2A4  +
mov eax offset aError_subst__0 +
jmp loc_102C2A4  +
mov eax offset aError_busy_dri +
jmp loc_102C2A4  +
mov eax offset aError_same_dri +
jmp loc_102C2A4  +
mov eax offset aError_dir_not_ +
jmp loc_102C2A4  +
mov eax offset aError_dir_no_0 +
jmp loc_102C2A4  +
mov eax offset aError_is_sub_0 +
jmp loc_102C2A4  +
mov eax offset aError_is_joi_0 +
jmp loc_102C2A4  +
mov eax offset aError_path_bus +
jmp loc_102C2A4  +
mov eax offset aError_is_sub_1 +
jmp loc_102C2A4  +
mov eax offset aError_system_t +
jmp loc_102C2A4  +
mov eax offset aError_inval_13 +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_5 +
jmp loc_102C2A4  +
mov eax offset aError_inval_14 +
jmp loc_102C2A4  +
mov eax offset aError_label_to +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_6 +
jmp loc_102C2A4  +
mov eax offset aError_signal_r +
jmp loc_102C2A4  +
mov eax offset aError_discarde +
jmp loc_102C2A4  +
mov eax offset aError_not_lock +
jmp loc_102C2A4  +
mov eax offset aError_bad_thre +
jmp loc_102C2A4  +
mov eax offset aError_bad_argu +
jmp loc_102C2A4  +
mov eax offset aError_bad_path +
jmp loc_102C2A4  +
mov eax offset aError_signal_p +
jmp loc_102C2A4  +
mov eax offset aError_max_thrd +
jmp loc_102C2A4  +
mov eax offset aError_lock_fai +
jmp loc_102C2A4  +
mov eax offset aError_busy +
jmp loc_102C2A4  +
mov eax offset aError_cancel_v +
jmp loc_102C2A4  +
mov eax offset aError_atomic_l +
jmp loc_102C2A4  +
mov eax offset aError_inval_15 +
jmp loc_102C2A4  +
mov eax offset aError_inval_16 +
jmp loc_102C2A4  +
mov eax offset aError_alread_0 +
jmp loc_102C2A4  +
mov eax offset aError_inval_17 +
jmp loc_102C2A4  +
mov eax offset aError_sem_not_ +
jmp loc_102C2A4  +
mov eax offset aError_inval_18 +
jmp loc_102C2A4  +
mov eax offset aError_inval_19 +
jmp loc_102C2A4  +
mov eax offset aError_inval_20 +
jmp loc_102C2A4  +
mov eax offset aError_inval_21 +
jmp loc_102C2A4  +
mov eax offset aError_exe_mark +
jmp loc_102C2A4  +
mov eax offset aError_bad_exe_ +
jmp loc_102C2A4  +
mov eax offset aError_iterated +
jmp loc_102C2A4  +
mov eax offset aError_inval_22 +
jmp loc_102C2A4  +
mov eax offset aError_dynlink_ +
jmp loc_102C2A4  +
mov eax offset aError_iopl_not +
jmp loc_102C2A4  +
mov eax offset aError_inval_23 +
jmp loc_102C2A4  +
mov eax offset aError_autodata +
jmp loc_102C2A4  +
mov eax offset aError_ring2seg +
jmp loc_102C2A4  +
mov eax offset aError_reloc_ch +
jmp loc_102C2A4  +
mov eax offset aError_infloop_ +
jmp loc_102C2A4  +
mov eax offset aError_envvar_n +
jmp loc_102C2A4  +
mov eax offset aError_no_signa +
jmp loc_102C2A4  +
mov eax offset aError_filename +
jmp loc_102C2A4  +
mov eax offset aError_ring2_st +
jmp loc_102C2A4  +
mov eax offset aError_meta_exp +
jmp loc_102C2A4  +
mov eax offset aError_inval_24 +
jmp loc_102C2A4  +
mov eax offset aError_thread_1 +
jmp loc_102C2A4  +
mov eax offset aError_locked +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_7 +
jmp loc_102C2A4  +
mov eax offset aError_nesting_ +
jmp loc_102C2A4  +
mov eax offset aError_exe_mach +
jmp loc_102C2A4  +
mov eax offset aError_exe_cann +
jmp loc_102C2A4  +
mov eax offset aError_exe_ca_0 +
jmp loc_102C2A4  +
mov eax offset aError_file_che +
jmp loc_102C2A4  +
mov eax offset aError_checkout +
jmp loc_102C2A4  +
mov eax offset aError_bad_file +
jmp loc_102C2A4  +
mov eax offset aError_file_too +
jmp loc_102C2A4  +
mov eax offset aError_forms_au +
jmp loc_102C2A4  +
mov eax offset aError_virus_in +
jmp loc_102C2A4  +
mov eax offset aError_virus_de +
jmp loc_102C2A4  +
mov eax offset aError_pipe_loc +
jmp loc_102C2A4  +
mov eax offset aError_bad_pipe +
jmp loc_102C2A4  +
mov eax offset aError_pipe_bus +
jmp loc_102C2A4  +
mov eax offset aError_no_data +
jmp loc_102C2A4  +
mov eax offset aError_pipe_not +
jmp loc_102C2A4  +
mov eax offset aError_more_dat +
jmp loc_102C2A4  +
mov eax offset aError_vc_disco +
jmp loc_102C2A4  +
mov ecx 80071396h +
cmp eax ecx +
jg loc_10298AE  +
jz loc_10298A4  +
mov ecx 80070525h +
cmp eax ecx +
jg loc_10281C1  +
jz loc_10281B7  +
add eax 7FF8FF02h +
cmp eax 426h +
ja loc_102C283  +
jmp ds:off_102C650[eax*4]  +
mov eax offset aError_inval_25 +
jmp loc_102C2A4  +
mov eax offset aError_ea_list_ +
jmp loc_102C2A4  +
mov eax offset aError_no_mor_1 +
jmp loc_102C2A4  +
mov eax offset aError_cannot_c +
jmp loc_102C2A4  +
mov eax offset aError_director +
jmp loc_102C2A4  +
mov eax offset aError_eas_didn +
jmp loc_102C2A4  +
mov eax offset aError_ea_file_ +
jmp loc_102C2A4  +
mov eax offset aError_ea_table +
jmp loc_102C2A4  +
mov eax offset aError_inval_26 +
jmp loc_102C2A4  +
mov eax offset aError_eas_not_ +
jmp loc_102C2A4  +
mov eax offset aError_not_owne +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_8 +
jmp loc_102C2A4  +
mov eax offset aError_partial_ +
jmp loc_102C2A4  +
mov eax offset aError_oplock_n +
jmp loc_102C2A4  +
mov eax offset aError_inval_27 +
jmp loc_102C2A4  +
mov eax offset aError_disk_too +
jmp loc_102C2A4  +
mov eax offset aError_delete_p +
jmp loc_102C2A4  +
mov eax offset aError_mr_mid_n +
jmp loc_102C2A4  +
mov eax offset aError_scope_no +
jmp loc_102C2A4  +
mov eax offset aError_fail_noa +
jmp loc_102C2A4  +
mov eax offset aError_fail_shu +
jmp loc_102C2A4  +
mov eax offset aError_fail_res +
jmp loc_102C2A4  +
mov eax offset aError_max_sess +
jmp loc_102C2A4  +
mov eax offset aError_thread_m +
jmp loc_102C2A4  +
mov eax offset aError_thread_0 +
jmp loc_102C2A4  +
mov eax offset aError_process_ +
jmp loc_102C2A4  +
mov eax offset aError_proces_0 +
jmp loc_102C2A4  +
mov eax offset aError_inval_28 +
jmp loc_102C2A4  +
mov eax offset aError_user_pro +
jmp loc_102C2A4  +
mov eax offset aError_arithmet +
jmp loc_102C2A4  +
mov eax offset aError_pipe_con +
jmp loc_102C2A4  +
mov eax offset aError_pipe_lis +
jmp loc_102C2A4  +
mov eax offset aError_verifier +
jmp loc_102C2A4  +
mov eax offset aError_abios_er +
jmp loc_102C2A4  +
mov eax offset aError_wx86_war +
jmp loc_102C2A4  +
mov eax offset aError_wx86_err +
jmp loc_102C2A4  +
mov eax offset aError_timer_no +
jmp loc_102C2A4  +
mov eax offset aError_unwind +
jmp loc_102C2A4  +
mov eax offset aError_bad_stac +
jmp loc_102C2A4  +
mov eax offset aError_inval_29 +
jmp loc_102C2A4  +
mov eax offset aError_inval_30 +
jmp loc_102C2A4  +
mov eax offset aError_port_mes +
jmp loc_102C2A4  +
mov eax offset aError_inval_31 +
jmp loc_102C2A4  +
mov eax offset aError_device_a +
jmp loc_102C2A4  +
mov eax offset aError_instruct +
jmp loc_102C2A4  +
mov eax offset aError_profilin +
jmp loc_102C2A4  +
mov eax offset aError_profil_0 +
jmp loc_102C2A4  +
mov eax offset aError_could_no +
jmp loc_102C2A4  +
mov eax offset aError_profil_1 +
jmp loc_102C2A4  +
mov eax offset aError_cant_wai +
jmp loc_102C2A4  +
mov eax offset aError_cant_ter +
jmp loc_102C2A4  +
mov eax offset aError_unexpect +
jmp loc_102C2A4  +
mov eax offset aError_unexpe_0 +
jmp loc_102C2A4  +
mov eax offset aError_unexpe_1 +
jmp loc_102C2A4  +
mov eax offset aError_bad_func +
jmp loc_102C2A4  +
mov eax offset aError_no_guid_ +
jmp loc_102C2A4  +
mov eax offset aError_inval_32 +
jmp loc_102C2A4  +
mov eax offset aError_inval_33 +
jmp loc_102C2A4  +
mov eax offset aError_inval_34 +
jmp loc_102C2A4  +
mov eax offset aError_too_ma_9 +
jmp loc_102C2A4  +
mov eax offset aError_thread_n +
jmp loc_102C2A4  +
mov eax offset aError_pagefile +
jmp loc_102C2A4  +
mov eax offset aError_logon_se +
jmp loc_102C2A4  +
mov eax offset aError_synchron +
jmp loc_102C2A4  +
mov eax offset aError_net_open +
jmp loc_102C2A4  +
mov eax offset aError_io_privi +
jmp loc_102C2A4  +
mov eax offset aError_control_ +
jmp loc_102C2A4  +
mov eax offset aError_missing_ +
jmp loc_102C2A4  +
mov eax offset aError_unhandle +
jmp loc_102C2A4  +
mov eax offset aError_app_init +
jmp loc_102C2A4  +
mov eax offset aError_pagefi_0 +
jmp loc_102C2A4  +
mov eax offset aError_inval_35 +
jmp loc_102C2A4  +
mov eax offset aError_no_pagef +
jmp loc_102C2A4  +
mov eax offset aError_illegal_ +
jmp loc_102C2A4  +
mov eax offset aError_no_event +
jmp loc_102C2A4  +
mov eax offset aError_domain_c +
jmp loc_102C2A4  +
mov eax offset aError_illega_0 +
jmp loc_102C2A4  +
mov eax offset aError_undefine +
jmp loc_102C2A4  +
mov eax offset aError_floppy_v +
jmp loc_102C2A4  +
mov eax offset aError_bios_fai +
jmp loc_102C2A4  +
mov eax offset aError_backup_c +
jmp loc_102C2A4  +
mov eax offset aError_mutant_l +
jmp loc_102C2A4  +
mov eax offset aError_fs_drive +
jmp loc_102C2A4  +
mov eax offset aError_cannot_l +
jmp loc_102C2A4  +
mov eax offset aError_debug_at +
jmp loc_102C2A4  +
mov eax offset aError_system_p +
jmp loc_102C2A4  +
mov eax offset aError_data_not +
jmp loc_102C2A4  +
mov eax offset aError_vdm_hard +
jmp loc_102C2A4  +
mov eax offset aError_driver_c +
jmp loc_102C2A4  +
mov eax offset aError_reply_me +
jmp loc_102C2A4  +
mov eax offset aError_lost_wri +
jmp loc_102C2A4  +
mov eax offset aError_client_s +
jmp loc_102C2A4  +
mov eax offset aError_not_tiny +
jmp loc_102C2A4  +
mov eax offset aError_stack_ov +
jmp loc_102C2A4  +
mov eax offset aError_convert_ +
jmp loc_102C2A4  +
mov eax offset aError_found_ou +
jmp loc_102C2A4  +
mov eax offset aError_allocate +
jmp loc_102C2A4  +
mov eax offset aError_marshall +
jmp loc_102C2A4  +
mov eax offset aError_inval_36 +
jmp loc_102C2A4  +
mov eax offset aError_bad_comp +
jmp loc_102C2A4  +
mov eax offset aError_audit_fa +
jmp loc_102C2A4  +
mov eax offset aError_timer_re +
jmp loc_102C2A4  +
mov eax offset aError_insuff_0 +
jmp loc_102C2A4  +
mov eax offset aError_bad_dll_ +
jmp loc_102C2A4  +
mov eax offset aError_bad_serv +
jmp loc_102C2A4  +
mov eax offset aError_ip_addre +
jmp loc_102C2A4  +
mov eax offset aError_ip_add_0 +
jmp loc_102C2A4  +
mov eax offset aError_registry +
jmp loc_102C2A4  +
mov eax offset aError_no_callb +
jmp loc_102C2A4  +
mov eax offset aError_pwd_too_ +
jmp loc_102C2A4  +
mov eax offset aError_pwd_to_0 +
jmp loc_102C2A4  +
mov eax offset aError_pwd_hist +
jmp loc_102C2A4  +
mov eax offset aError_unsuppor +
jmp loc_102C2A4  +
mov eax offset aError_inval_37 +
jmp loc_102C2A4  +
mov eax offset aError_inval_38 +
jmp loc_102C2A4  +
mov eax offset aError_quota_li +
jmp loc_102C2A4  +
mov eax offset aError_evaluati +
jmp loc_102C2A4  +
mov eax offset aError_illega_1 +
jmp loc_102C2A4  +
mov eax offset aError_dll_init +
jmp loc_102C2A4  +
mov eax offset aError_validate +
jmp loc_102C2A4  +
mov eax offset aError_no_mor_2 +
jmp loc_102C2A4  +
mov eax offset aError_range_li +
jmp loc_102C2A4  +
mov eax offset aError_server_s +
jmp loc_102C2A4  +
mov eax offset aError_cant_ena +
jmp loc_102C2A4  +
mov eax offset aError_float_mu +
jmp loc_102C2A4  +
mov eax offset aError_float__0 +
jmp loc_102C2A4  +
mov eax offset aError_nointerf +
jmp loc_102C2A4  +
mov eax offset aError_driver_f +
jmp loc_102C2A4  +
mov eax offset aError_corrupt_ +
jmp loc_102C2A4  +
mov eax offset aError_commitme +
jmp loc_102C2A4  +
mov eax offset aError_pnp_rest +
jmp loc_102C2A4  +
mov eax offset aError_system_i +
jmp loc_102C2A4  +
mov eax offset aError_pnp_rebo +
jmp loc_102C2A4  +
mov eax offset aError_insuff_1 +
jmp loc_102C2A4  +
mov eax offset aError_multiple +
jmp loc_102C2A4  +
mov eax offset aError_system_s +
jmp loc_102C2A4  +
mov eax offset aError_port_not +
jmp loc_102C2A4  +
mov eax offset aError_ds_versi +
jmp loc_102C2A4  +
mov eax offset aError_range_no +
jmp loc_102C2A4  +
mov eax offset aError_not_safe +
jmp loc_102C2A4  +
mov eax offset aError_failed_d +
jmp loc_102C2A4  +
mov eax offset aError_device_e +
jmp loc_102C2A4  +
mov eax offset aError_mount_po +
jmp loc_102C2A4  +
mov eax offset aError_inval_39 +
jmp loc_102C2A4  +
mov eax offset aError_mca_occu +
jmp loc_102C2A4  +
mov eax offset aError_driver_d +
jmp loc_102C2A4  +
mov eax offset aError_system_h +
jmp loc_102C2A4  +
mov eax offset aError_driver_0 +
jmp loc_102C2A4  +
mov eax offset aError_volsnap_ +
jmp loc_102C2A4  +
mov eax offset aError_hibernat +
jmp loc_102C2A4  +
mov eax offset aError_file_sys +
jmp loc_102C2A4  +
mov eax offset aError_assertio +
jmp loc_102C2A4  +
mov eax offset aError_acpi_err +
jmp loc_102C2A4  +
mov eax offset aError_wow_asse +
jmp loc_102C2A4  +
mov eax offset aError_pnp_bad_ +
jmp loc_102C2A4  +
mov eax offset aError_pnp_tran +
jmp loc_102C2A4  +
mov eax offset aError_pnp_irq_ +
jmp loc_102C2A4  +
mov eax offset aError_pnp_inva +
jmp loc_102C2A4  +
mov eax offset aError_wake_sys +
jmp loc_102C2A4  +
mov eax offset aError_handles_ +
jmp loc_102C2A4  +
mov eax offset aError_extraneo +
jmp loc_102C2A4  +
mov eax offset aError_rxact_co +
jmp loc_102C2A4  +
mov eax offset aError_media_ch +
jmp loc_102C2A4  +
mov eax offset aError_guid_sub +
jmp loc_102C2A4  +
mov eax offset aError_stopped_ +
jmp loc_102C2A4  +
mov eax offset aError_longjump +
jmp loc_102C2A4  +
mov eax offset aError_plugplay +
jmp loc_102C2A4  +
mov eax offset aError_unwind_c +
jmp loc_102C2A4  +
mov eax offset aError_regist_0 +
jmp loc_102C2A4  +
mov eax offset aError_dll_migh +
jmp loc_102C2A4  +
mov eax offset aError_dll_mi_0 +
jmp loc_102C2A4  +
mov eax offset aError_dbg_exce +
jmp loc_102C2A4  +
mov eax offset aError_dbg_repl +
jmp loc_102C2A4  +
mov eax offset aError_dbg_unab +
jmp loc_102C2A4  +
mov eax offset aError_dbg_term +
jmp loc_102C2A4  +
mov eax offset aError_dbg_te_0 +
jmp loc_102C2A4  +
mov eax offset aError_dbg_cont +
jmp loc_102C2A4  +
mov eax offset aError_dbg_prin +
jmp loc_102C2A4  +
mov eax offset aError_dbg_ripe +
jmp loc_102C2A4  +
mov eax offset aError_dbg_co_0 +
jmp loc_102C2A4  +
mov eax offset aError_dbg_comm +
jmp loc_102C2A4  +
mov eax offset aError_object_n +
jmp loc_102C2A4  +
mov eax offset aError_thread_w +
jmp loc_102C2A4  +
mov eax offset aError_image_no +
jmp loc_102C2A4  +
mov eax offset aError_rxact_st +
jmp loc_102C2A4  +
mov eax offset aError_segment_ +
jmp loc_102C2A4  +
mov eax offset aError_bad_curr +
jmp loc_102C2A4  +
mov eax offset aError_ft_read_ +
jmp loc_102C2A4  +
mov eax offset aError_ft_write +
jmp loc_102C2A4  +
mov eax offset aError_image_ma +
jmp loc_102C2A4  +
mov eax offset aError_receive_ +
jmp loc_102C2A4  +
mov eax offset aError_receiv_0 +
jmp loc_102C2A4  +
mov eax offset aError_receiv_1 +
jmp loc_102C2A4  +
mov eax offset aError_event_do +
jmp loc_102C2A4  +
mov eax offset aError_event_pe +
jmp loc_102C2A4  +
mov eax offset aError_checking +
jmp loc_102C2A4  +
mov eax offset aError_fatal_ap +
jmp loc_102C2A4  +
mov eax offset aError_predefin +
jmp loc_102C2A4  +
mov eax offset aError_was_unlo +
jmp loc_102C2A4  +
mov eax offset aError_service_ +
jmp loc_102C2A4  +
mov eax offset aError_was_lock +
jmp loc_102C2A4  +
mov eax offset aError_log_hard +
jmp loc_102C2A4  +
mov eax offset aError_alread_1 +
jmp loc_102C2A4  +
mov eax offset aError_image__0 +
jmp loc_102C2A4  +
mov eax offset aError_no_yield +
jmp loc_102C2A4  +
mov eax offset aError_timer__0 +
jmp loc_102C2A4  +
mov eax offset aError_arbitrat +
jmp loc_102C2A4  +
mov eax offset aError_cardbus_ +
jmp loc_102C2A4  +
mov eax offset aError_mp_proce +
jmp loc_102C2A4  +
mov eax offset aError_hibern_0 +
jmp loc_102C2A4  +
mov eax offset aError_resume_h +
jmp loc_102C2A4  +
mov eax offset aError_firmware +
jmp loc_102C2A4  +
mov eax offset aError_drivers_ +
jmp loc_102C2A4  +
mov eax offset aError_wake_s_0 +
jmp loc_102C2A4  +
mov eax offset aError_wait_1 +
jmp loc_102C2A4  +
mov eax offset aError_wait_2 +
jmp loc_102C2A4  +
mov eax offset aError_wait_3 +
jmp loc_102C2A4  +
mov eax offset aError_wait_63 +
jmp loc_102C2A4  +
mov eax offset aError_abandone +
jmp loc_102C2A4  +
mov eax offset aError_abando_0 +
jmp loc_102C2A4  +
mov eax offset aError_user_apc +
jmp loc_102C2A4  +
mov eax offset aError_kernel_a +
jmp loc_102C2A4  +
mov eax offset aError_alerted +
jmp loc_102C2A4  +
mov eax offset aError_elevatio +
jmp loc_102C2A4  +
mov eax offset aError_reparse +
jmp loc_102C2A4  +
mov eax offset aError_oplock_b +
jmp loc_102C2A4  +
mov eax offset aError_volume_m +
jmp loc_102C2A4  +
mov eax offset aError_rxact__0 +
jmp loc_102C2A4  +
mov eax offset aError_notify_c +
jmp loc_102C2A4  +
mov eax offset aError_primary_ +
jmp loc_102C2A4  +
mov eax offset aError_page_fau +
jmp loc_102C2A4  +
mov eax offset aError_page_f_0 +
jmp loc_102C2A4  +
mov eax offset aError_page_f_1 +
jmp loc_102C2A4  +
mov eax offset aError_page_f_2 +
jmp loc_102C2A4  +
mov eax offset aError_page_f_3 +
jmp loc_102C2A4  +
mov eax offset aError_cache_pa +
jmp loc_102C2A4  +
mov eax offset aError_crash_du +
jmp loc_102C2A4  +
mov eax offset aError_buffer_a +
jmp loc_102C2A4  +
mov eax offset aError_reparse_ +
jmp loc_102C2A4  +
mov eax offset aError_resource +
jmp loc_102C2A4  +
mov eax offset aError_translat +
jmp loc_102C2A4  +
mov eax offset aError_nothing_ +
jmp loc_102C2A4  +
mov eax offset aError_proces_1 +
jmp loc_102C2A4  +
mov eax offset aError_proces_2 +
jmp loc_102C2A4  +
mov eax offset aError_volsna_0 +
jmp loc_102C2A4  +
mov eax offset aError_fsfilter +
jmp loc_102C2A4  +
mov eax offset aError_interrup +
jmp loc_102C2A4  +
mov eax offset aError_interr_0 +
jmp loc_102C2A4  +
mov eax offset aError_wait_for +
jmp loc_102C2A4  +
mov eax offset aError_dbg_ex_0 +
jmp loc_102C2A4  +
mov eax offset aError_dbg_co_1 +
jmp loc_102C2A4  +
mov eax offset aError_callback +
jmp loc_102C2A4  +
mov eax offset aError_compress +
jmp loc_102C2A4  +
mov eax offset aError_cantfetc +
jmp loc_102C2A4  +
mov eax offset aError_cantscro +
jmp loc_102C2A4  +
mov eax offset aError_rowsnotr +
jmp loc_102C2A4  +
mov eax offset aError_bad_acce +
jmp loc_102C2A4  +
mov eax offset aError_errors_e +
jmp loc_102C2A4  +
mov eax offset aError_not_capa +
jmp loc_102C2A4  +
mov eax offset aError_request_ +
jmp loc_102C2A4  +
mov eax offset aError_version_ +
jmp loc_102C2A4  +
mov eax offset aError_badstart +
jmp loc_102C2A4  +
mov eax offset aError_memory_h +
jmp loc_102C2A4  +
mov eax offset aError_disk_rep +
jmp loc_102C2A4  +
mov eax offset aError_insuff_2 +
jmp loc_102C2A4  +
mov eax offset aError_system_0 +
jmp loc_102C2A4  +
mov eax offset aError_system_1 +
jmp loc_102C2A4  +
mov eax offset aError_mca_exce +
jmp loc_102C2A4  +
mov eax offset aError_access_a +
jmp loc_102C2A4  +
mov eax offset aError_access_d +
jmp loc_102C2A4  +
mov eax offset aError_abandon_ +
jmp loc_102C2A4  +
mov eax offset aError_lost_w_0 +
jmp loc_102C2A4  +
mov eax offset aError_lost_w_1 +
jmp loc_102C2A4  +
mov eax offset aError_lost_w_2 +
jmp loc_102C2A4  +
mov eax offset aError_bad_mcfg +
jmp loc_102C2A4  +
mov eax offset aError_ea_acces +
jmp loc_102C2A4  +
mov eax offset aError_operatio +
jmp loc_102C2A4  +
mov eax offset aError_io_incom +
jmp loc_102C2A4  +
mov eax offset aError_io_pendi +
jmp loc_102C2A4  +
mov eax offset aError_noaccess +
jmp loc_102C2A4  +
mov eax offset aError_swaperro +
jmp loc_102C2A4  +
mov eax offset aError_stack__0 +
jmp loc_102C2A4  +
mov eax offset aError_inval_40 +
jmp loc_102C2A4  +
mov eax offset aError_can_not_ +
jmp loc_102C2A4  +
mov eax offset aError_inval_41 +
jmp loc_102C2A4  +
mov eax offset aError_unrecogn +
jmp loc_102C2A4  +
mov eax offset aError_file_inv +
jmp loc_102C2A4  +
mov eax offset aError_fullscre +
jmp loc_102C2A4  +
mov eax offset aError_no_token +
jmp loc_102C2A4  +
mov eax offset aError_baddb +
jmp loc_102C2A4  +
mov eax offset aError_badkey +
jmp loc_102C2A4  +
mov eax offset aError_cantopen +
jmp loc_102C2A4  +
mov eax offset aError_cantread +
jmp loc_102C2A4  +
mov eax offset aError_cantwrit +
jmp loc_102C2A4  +
mov eax offset aError_regist_1 +
jmp loc_102C2A4  +
mov eax offset aError_regist_2 +
jmp loc_102C2A4  +
mov eax offset aError_regist_3 +
jmp loc_102C2A4  +
mov eax offset aError_not_regi +
jmp loc_102C2A4  +
mov eax offset aError_key_dele +
jmp loc_102C2A4  +
mov eax offset aError_no_log_s +
jmp loc_102C2A4  +
mov eax offset aError_key_has_ +
jmp loc_102C2A4  +
mov eax offset aError_child_mu +
jmp loc_102C2A4  +
mov eax offset aError_notify_e +
jmp loc_102C2A4  +
mov eax offset aError_dependen +
jmp loc_102C2A4  +
mov eax offset aError_inval_42 +
jmp loc_102C2A4  +
mov eax offset aError_servic_0 +
jmp loc_102C2A4  +
mov eax offset aError_servic_1 +
jmp loc_102C2A4  +
mov eax offset aError_servic_2 +
jmp loc_102C2A4  +
mov eax offset aError_servic_3 +
jmp loc_102C2A4  +
mov eax offset aError_inval_43 +
jmp loc_102C2A4  +
mov eax offset aError_servic_4 +
jmp loc_102C2A4  +
mov eax offset aError_circular +
jmp loc_102C2A4  +
mov eax offset aError_servic_5 +
jmp loc_102C2A4  +
mov eax offset aError_servic_6 +
jmp loc_102C2A4  +
mov eax offset aError_servic_7 +
jmp loc_102C2A4  +
mov eax offset aError_failed_s +
jmp loc_102C2A4  +
mov eax offset aError_exceptio +
jmp loc_102C2A4  +
mov eax offset aError_database +
jmp loc_102C2A4  +
mov eax offset aError_servic_8 +
jmp loc_102C2A4  +
mov eax offset aError_proces_3 +
jmp loc_102C2A4  +
mov eax offset aError_servic_9 +
jmp loc_102C2A4  +
mov eax offset aError_servi_10 +
jmp loc_102C2A4  +
mov eax offset aError_servi_11 +
jmp loc_102C2A4  +
mov eax offset aError_inval_44 +
jmp loc_102C2A4  +
mov eax offset aError_servi_12 +
jmp loc_102C2A4  +
mov eax offset aError_servi_13 +
jmp loc_102C2A4  +
mov eax offset aError_alread_2 +
jmp loc_102C2A4  +
mov eax offset aError_servi_14 +
jmp loc_102C2A4  +
mov eax offset aError_boot_alr +
jmp loc_102C2A4  +
mov eax offset aError_servi_15 +
jmp loc_102C2A4  +
mov eax offset aError_duplicat +
jmp loc_102C2A4  +
mov eax offset aError_differen +
jmp loc_102C2A4  +
mov eax offset aError_cannot_d +
jmp loc_102C2A4  +
mov eax offset aError_cannot_0 +
jmp loc_102C2A4  +
mov eax offset aError_no_recov +
jmp loc_102C2A4  +
mov eax offset aError_servi_16 +
jmp loc_102C2A4  +
mov eax offset aError_not_sa_0 +
jmp loc_102C2A4  +
mov eax offset aError_end_of_m +
jmp loc_102C2A4  +
mov eax offset aError_filemark +
jmp loc_102C2A4  +
mov eax offset aError_beginnin +
jmp loc_102C2A4  +
mov eax offset aError_setmark_ +
jmp loc_102C2A4  +
mov eax offset aError_no_data_ +
jmp loc_102C2A4  +
mov eax offset aError_partitio +
jmp loc_102C2A4  +
mov eax offset aError_inval_45 +
jmp loc_102C2A4  +
mov eax offset aError_device_n +
jmp loc_102C2A4  +
mov eax offset aError_unable_t +
jmp loc_102C2A4  +
mov eax offset aError_unable_0 +
jmp loc_102C2A4  +
mov eax offset aError_media__0 +
jmp loc_102C2A4  +
mov eax offset aError_bus_rese +
jmp loc_102C2A4  +
mov eax offset aError_no_media +
jmp loc_102C2A4  +
mov eax offset aError_no_unico +
jmp loc_102C2A4  +
mov eax offset aError_dll_in_0 +
jmp loc_102C2A4  +
mov eax offset aError_shutdown +
jmp loc_102C2A4  +
mov eax offset aError_no_shutd +
jmp loc_102C2A4  +
mov eax offset aError_io_devic +
jmp loc_102C2A4  +
mov eax offset aError_serial_n +
jmp loc_102C2A4  +
mov eax offset aError_irq_busy +
jmp loc_102C2A4  +
mov eax offset aError_more_wri +
jmp loc_102C2A4  +
mov eax offset aError_counter_ +
jmp loc_102C2A4  +
mov eax offset aError_floppy_i +
jmp loc_102C2A4  +
mov eax offset aError_floppy_w +
jmp loc_102C2A4  +
mov eax offset aError_floppy_u +
jmp loc_102C2A4  +
mov eax offset aError_floppy_b +
jmp loc_102C2A4  +
mov eax offset aError_disk_rec +
jmp loc_102C2A4  +
mov eax offset aError_disk_ope +
jmp loc_102C2A4  +
mov eax offset aError_disk_res +
jmp loc_102C2A4  +
mov eax offset aError_eom_over +
jmp loc_102C2A4  +
mov eax offset aError_not_en_0 +
jmp loc_102C2A4  +
mov eax offset aError_possible +
jmp loc_102C2A4  +
mov eax offset aError_mapped_a +
jmp loc_102C2A4  +
mov eax offset aError_set_powe +
jmp loc_102C2A4  +
mov eax offset aError_set_po_0 +
jmp loc_102C2A4  +
mov eax offset aError_too_m_10 +
jmp loc_102C2A4  +
mov eax offset aError_old_win_ +
jmp loc_102C2A4  +
mov eax offset aError_app_wron +
jmp loc_102C2A4  +
mov eax offset aError_single_i +
jmp loc_102C2A4  +
mov eax offset aError_rmode_ap +
jmp loc_102C2A4  +
mov eax offset aError_inval_46 +
jmp loc_102C2A4  +
mov eax offset aError_no_assoc +
jmp loc_102C2A4  +
mov eax offset aError_dde_fail +
jmp loc_102C2A4  +
mov eax offset aError_dll_not_ +
jmp loc_102C2A4  +
mov eax offset aError_no_mor_3 +
jmp loc_102C2A4  +
mov eax offset aError_message_ +
jmp loc_102C2A4  +
mov eax offset aError_source_e +
jmp loc_102C2A4  +
mov eax offset aError_destinat +
jmp loc_102C2A4  +
mov eax offset aError_illega_2 +
jmp loc_102C2A4  +
mov eax offset aError_magazine +
jmp loc_102C2A4  +
mov eax offset aError_device_r +
jmp loc_102C2A4  +
mov eax offset aError_device_0 +
jmp loc_102C2A4  +
mov eax offset aError_device_d +
jmp loc_102C2A4  +
mov eax offset aError_device_1 +
jmp loc_102C2A4  +
mov eax offset aError_not_foun +
jmp loc_102C2A4  +
mov eax offset aError_no_match +
jmp loc_102C2A4  +
mov eax offset aError_set_not_ +
jmp loc_102C2A4  +
mov eax offset aError_point_no +
jmp loc_102C2A4  +
mov eax offset aError_no_track +
jmp loc_102C2A4  +
mov eax offset aError_no_vol_0 +
jmp loc_102C2A4  +
mov eax offset aError_unable_1 +
jmp loc_102C2A4  +
mov eax offset aError_unable_2 +
jmp loc_102C2A4  +
mov eax offset aError_unable_3 +
jmp loc_102C2A4  +
mov eax offset aError_journal_ +
jmp loc_102C2A4  +
mov eax offset aError_journa_0 +
jmp loc_102C2A4  +
mov eax offset aError_potentia +
jmp loc_102C2A4  +
mov eax offset aError_journa_1 +
jmp loc_102C2A4  +
mov eax offset aError_shutdo_0 +
jmp loc_102C2A4  +
mov eax offset aError_shutdo_1 +
jmp loc_102C2A4  +
mov eax offset aError_bad_devi +
jmp loc_102C2A4  +
mov eax offset aError_connecti +
jmp loc_102C2A4  +
mov eax offset aError_device_2 +
jmp loc_102C2A4  +
mov eax offset aError_no_net_o +
jmp loc_102C2A4  +
mov eax offset aError_bad_prov +
jmp loc_102C2A4  +
mov eax offset aError_cannot_o +
jmp loc_102C2A4  +
mov eax offset aError_bad_prof +
jmp loc_102C2A4  +
mov eax offset aError_not_cont +
jmp loc_102C2A4  +
mov eax offset aError_extended +
jmp loc_102C2A4  +
mov eax offset aError_inval_47 +
jmp loc_102C2A4  +
mov eax offset aError_inval_48 +
jmp loc_102C2A4  +
mov eax offset aError_inval_49 +
jmp loc_102C2A4  +
mov eax offset aError_inval_50 +
jmp loc_102C2A4  +
mov eax offset aError_inval_51 +
jmp loc_102C2A4  +
mov eax offset aError_inval_52 +
jmp loc_102C2A4  +
mov eax offset aError_inval_53 +
jmp loc_102C2A4  +
mov eax offset aError_inval_54 +
jmp loc_102C2A4  +
mov eax offset aError_inval_55 +
jmp loc_102C2A4  +
mov eax offset aError_inval_56 +
jmp loc_102C2A4  +
mov eax offset aError_session_ +
jmp loc_102C2A4  +
mov eax offset aError_remote_s +
jmp loc_102C2A4  +
mov eax offset aError_dup_doma +
jmp loc_102C2A4  +
mov eax offset aError_no_netwo +
jmp loc_102C2A4  +
mov eax offset aError_cancelle +
jmp loc_102C2A4  +
mov eax offset aError_user_map +
jmp loc_102C2A4  +
mov eax offset aError_connec_0 +
jmp loc_102C2A4  +
mov eax offset aError_graceful +
jmp loc_102C2A4  +
mov eax offset aError_address_ +
jmp loc_102C2A4  +
mov eax offset aError_addres_0 +
jmp loc_102C2A4  +
mov eax offset aError_connec_1 +
jmp loc_102C2A4  +
mov eax offset aError_connec_2 +
jmp loc_102C2A4  +
mov eax offset aError_networ_1 +
jmp loc_102C2A4  +
mov eax offset aError_host_unr +
jmp loc_102C2A4  +
mov eax offset aError_protocol +
jmp loc_102C2A4  +
mov eax offset aError_port_unr +
jmp loc_102C2A4  +
mov eax offset aError_reques_0 +
jmp loc_102C2A4  +
mov eax offset aError_connec_3 +
jmp loc_102C2A4  +
mov eax offset aError_retry +
jmp loc_102C2A4  +
mov eax offset aError_connec_4 +
jmp loc_102C2A4  +
mov eax offset aError_login_ti +
jmp loc_102C2A4  +
mov eax offset aError_login_wk +
jmp loc_102C2A4  +
mov eax offset aError_incorrec +
jmp loc_102C2A4  +
mov eax offset aError_alread_3 +
jmp loc_102C2A4  +
mov eax offset aError_servi_17 +
jmp loc_102C2A4  +
mov eax offset aError_not_auth +
jmp loc_102C2A4  +
mov eax offset aError_not_logg +
jmp loc_102C2A4  +
mov eax offset aError_continue +
jmp loc_102C2A4  +
mov eax offset aError_alread_4 +
jmp loc_102C2A4  +
mov eax offset aError_no_mor_4 +
jmp loc_102C2A4  +
mov eax offset aError_no_such_ +
jmp loc_102C2A4  +
mov eax offset aError_domain_0 +
jmp loc_102C2A4  +
mov eax offset aError_only_if_ +
jmp loc_102C2A4  +
mov eax offset aError_override +
jmp loc_102C2A4  +
mov eax offset aError_bad_user +
jmp loc_102C2A4  +
mov eax offset aError_not_su_0 +
jmp loc_102C2A4  +
mov eax offset aError_server_0 +
jmp loc_102C2A4  +
mov eax offset aError_host_dow +
jmp loc_102C2A4  +
mov eax offset aError_non_acco +
jmp loc_102C2A4  +
mov eax offset aError_non_doma +
jmp loc_102C2A4  +
mov eax offset aError_apphelp_ +
jmp loc_102C2A4  +
mov eax offset aError_access_0 +
jmp loc_102C2A4  +
mov eax offset aError_reg_nat_ +
jmp loc_102C2A4  +
mov eax offset aError_cscshare +
jmp loc_102C2A4  +
mov eax offset aError_pkinit_f +
jmp loc_102C2A4  +
mov eax offset aError_smartcar +
jmp loc_102C2A4  +
mov eax offset aError_downgrad +
jmp loc_102C2A4  +
mov eax offset aError_machine_ +
jmp loc_102C2A4  +
mov eax offset aError_callba_0 +
jmp loc_102C2A4  +
mov eax offset aError_sync_for +
jmp loc_102C2A4  +
mov eax offset aError_driver_b +
jmp loc_102C2A4  +
mov eax offset aError_inval_57 +
jmp loc_102C2A4  +
mov eax offset aError_access_1 +
jmp loc_102C2A4  +
mov eax offset aError_access_2 +
jmp loc_102C2A4  +
mov eax offset aError_recovery +
jmp loc_102C2A4  +
mov eax offset aError_alread_5 +
jmp loc_102C2A4  +
mov eax offset aError_alread_6 +
jmp loc_102C2A4  +
mov eax offset aError_stack_bu +
jmp loc_102C2A4  +
mov eax offset aError_paramete +
jmp loc_102C2A4  +
mov eax offset aError_debugger +
jmp loc_102C2A4  +
mov eax offset aError_delay_lo +
jmp loc_102C2A4  +
mov eax offset aError_vdm_disa +
jmp loc_102C2A4  +
mov eax offset aError_unidenti +
jmp loc_102C2A4  +
mov eax offset aError_inval_58 +
jmp loc_102C2A4  +
mov eax offset aError_beyond_v +
jmp loc_102C2A4  +
mov eax offset aError_incompat +
jmp loc_102C2A4  +
mov eax offset aError_driver_p +
jmp loc_102C2A4  +
mov eax offset aError_implemen +
jmp loc_102C2A4  +
mov eax offset aError_proces_4 +
jmp loc_102C2A4  +
mov eax offset aError_servi_18 +
jmp loc_102C2A4  +
mov eax offset aError_disk_quo +
jmp loc_102C2A4  +
mov eax offset aError_content_ +
jmp loc_102C2A4  +
mov eax offset aError_incomp_0 +
jmp loc_102C2A4  +
mov eax offset aError_app_hang +
jmp loc_102C2A4  +
mov eax offset aError_inval_59 +
jmp loc_102C2A4  +
mov eax offset aError_not_all_ +
jmp loc_102C2A4  +
mov eax offset aError_some_not +
jmp loc_102C2A4  +
mov eax offset aError_no_quota +
jmp loc_102C2A4  +
mov eax offset aError_local_us +
jmp loc_102C2A4  +
mov eax offset aError_null_lm_ +
jmp loc_102C2A4  +
mov eax offset aError_unknown_ +
jmp loc_102C2A4  +
mov eax offset aError_revision +
jmp loc_102C2A4  +
mov eax offset aError_inval_60 +
jmp loc_102C2A4  +
mov eax offset aError_inval_61 +
jmp loc_102C2A4  +
mov eax offset aError_no_imper +
jmp loc_102C2A4  +
mov eax offset aError_cant_dis +
jmp loc_102C2A4  +
mov eax offset aError_no_logon +
jmp loc_102C2A4  +
mov eax offset aError_no_suc_0 +
jmp loc_102C2A4  +
mov eax offset aError_no_suc_1 +
jmp loc_102C2A4  +
mov eax offset aError_privileg +
jmp loc_102C2A4  +
mov eax offset aError_inval_62 +
jmp loc_102C2A4  +
mov eax offset aError_user_exi +
jmp loc_102C2A4  +
mov eax offset aError_no_suc_2 +
jmp loc_102C2A4  +
mov ecx 800708CAh +
cmp eax ecx +
jg loc_1029177  +
jz loc_102916D  +
add eax 7FF8FADAh +
cmp eax 374h +
ja loc_102C283  +
jmp ds:off_102D6EC[eax*4]  +
mov eax offset aError_group_ex +
jmp loc_102C2A4  +
mov eax offset aError_no_suc_3 +
jmp loc_102C2A4  +
mov eax offset aError_member_i +
jmp loc_102C2A4  +
mov eax offset aError_member_n +
jmp loc_102C2A4  +
mov eax offset aError_last_adm +
jmp loc_102C2A4  +
mov eax offset aError_wrong_pa +
jmp loc_102C2A4  +
mov eax offset aError_ill_form +
jmp loc_102C2A4  +
mov eax offset aError_password +
jmp loc_102C2A4  +
mov eax offset aError_logon_fa +
jmp loc_102C2A4  +
mov eax offset aError_account_ +
jmp loc_102C2A4  +
mov eax offset aError_inval_63 +
jmp loc_102C2A4  +
mov eax offset aError_inval_64 +
jmp loc_102C2A4  +
mov eax offset aError_passwo_0 +
jmp loc_102C2A4  +
mov eax offset aError_accoun_0 +
jmp loc_102C2A4  +
mov eax offset aError_none_map +
jmp loc_102C2A4  +
mov eax offset aError_too_m_11 +
jmp loc_102C2A4  +
mov eax offset aError_luids_ex +
jmp loc_102C2A4  +
mov eax offset aError_inval_65 +
jmp loc_102C2A4  +
mov eax offset aError_inval_66 +
jmp loc_102C2A4  +
mov eax offset aError_inval_67 +
jmp loc_102C2A4  +
mov eax offset aError_inval_68 +
jmp loc_102C2A4  +
mov eax offset aError_bad_inhe +
jmp loc_102C2A4  +
mov eax offset aError_server_d +
jmp loc_102C2A4  +
mov eax offset aError_server_n +
jmp loc_102C2A4  +
mov eax offset aError_inval_69 +
jmp loc_102C2A4  +
mov eax offset aError_allotted +
jmp loc_102C2A4  +
mov eax offset aError_inval_70 +
jmp loc_102C2A4  +
mov eax offset aError_bad_impe +
jmp loc_102C2A4  +
mov eax offset aError_cant_ope +
jmp loc_102C2A4  +
mov eax offset aError_bad_vali +
jmp loc_102C2A4  +
mov eax offset aError_bad_toke +
jmp loc_102C2A4  +
mov eax offset aError_no_secur +
jmp loc_102C2A4  +
mov eax offset aError_cant_acc +
jmp loc_102C2A4  +
mov eax offset aError_inval_71 +
jmp loc_102C2A4  +
mov eax offset aError_inval_72 +
jmp loc_102C2A4  +
mov eax offset aError_inval_73 +
jmp loc_102C2A4  +
mov eax offset aError_no_suc_4 +
jmp loc_102C2A4  +
mov eax offset aError_domain_e +
jmp loc_102C2A4  +
mov eax offset aError_domain_l +
jmp loc_102C2A4  +
mov eax offset aError_internal +
jmp loc_102C2A4  +
mov eax offset aError_intern_0 +
jmp loc_102C2A4  +
mov eax offset aError_generic_ +
jmp loc_102C2A4  +
mov eax offset aError_bad_desc +
jmp loc_102C2A4  +
mov eax offset aError_not_logo +
jmp loc_102C2A4  +
mov eax offset aError_logon__0 +
jmp loc_102C2A4  +
mov eax offset aError_no_suc_5 +
jmp loc_102C2A4  +
mov eax offset aError_bad_logo +
jmp loc_102C2A4  +
mov eax offset aError_logon__1 +
jmp loc_102C2A4  +
mov eax offset aError_inval_74 +
jmp loc_102C2A4  +
mov eax offset aError_cannot_i +
jmp loc_102C2A4  +
mov eax offset aError_rxact_in +
jmp loc_102C2A4  +
mov eax offset aError_rxact__1 +
jmp loc_102C2A4  +
mov eax offset aError_special_ +
jmp loc_102C2A4  +
mov eax offset aError_specia_0 +
jmp loc_102C2A4  +
mov eax offset aError_specia_1 +
jmp loc_102C2A4  +
mov eax offset aError_members_ +
jmp loc_102C2A4  +
mov eax offset aError_token_al +
jmp loc_102C2A4  +
mov eax offset aError_no_suc_6 +
jmp loc_102C2A4  +
mov eax offset aError_member_0 +
jmp loc_102C2A4  +
mov eax offset aError_member_1 +
jmp loc_102C2A4  +
mov eax offset aError_alias_ex +
jmp loc_102C2A4  +
mov eax offset aError_logon_no +
jmp loc_102C2A4  +
mov eax offset aError_too_m_12 +
jmp loc_102C2A4  +
mov eax offset aError_secret_t +
jmp loc_102C2A4  +
mov eax offset aError_intern_1 +
jmp loc_102C2A4  +
mov eax offset aError_too_m_13 +
jmp loc_102C2A4  +
mov eax offset aError_logon_ty +
jmp loc_102C2A4  +
mov eax offset aError_nt_cross +
jmp loc_102C2A4  +
mov eax offset aError_no_suc_7 +
jmp loc_102C2A4  +
mov eax offset aError_inval_75 +
jmp loc_102C2A4  +
mov eax offset aError_too_m_14 +
jmp loc_102C2A4  +
mov eax offset aError_lm_cross +
jmp loc_102C2A4  +
mov eax offset aError_no_inher +
jmp loc_102C2A4  +
mov eax offset aError_file_cor +
jmp loc_102C2A4  +
mov eax offset aError_disk_cor +
jmp loc_102C2A4  +
mov eax offset aError_no_user_ +
jmp loc_102C2A4  +
mov eax offset aError_license_ +
jmp loc_102C2A4  +
mov eax offset aError_wrong_ta +
jmp loc_102C2A4  +
mov eax offset aError_mutual_a +
jmp loc_102C2A4  +
mov eax offset aError_time_ske +
jmp loc_102C2A4  +
mov eax offset aError_curren_0 +
jmp loc_102C2A4  +
mov eax offset aError_inval_76 +
jmp loc_102C2A4  +
mov eax offset aError_inval_77 +
jmp loc_102C2A4  +
mov eax offset aError_inval_78 +
jmp loc_102C2A4  +
mov eax offset aError_inval_79 +
jmp loc_102C2A4  +
mov eax offset aError_inval_80 +
jmp loc_102C2A4  +
mov eax offset aError_inval_81 +
jmp loc_102C2A4  +
mov eax offset aError_tlw_with +
jmp loc_102C2A4  +
mov eax offset aError_cannot_f +
jmp loc_102C2A4  +
mov eax offset aError_window_o +
jmp loc_102C2A4  +
mov eax offset aError_hotkey_a +
jmp loc_102C2A4  +
mov eax offset aError_class_al +
jmp loc_102C2A4  +
mov eax offset aError_class_do +
jmp loc_102C2A4  +
mov eax offset aError_class_ha +
jmp loc_102C2A4  +
mov eax offset aError_inval_82 +
jmp loc_102C2A4  +
mov eax offset aError_inval_83 +
jmp loc_102C2A4  +
mov eax offset aError_private_ +
jmp loc_102C2A4  +
mov eax offset aError_listbox_ +
jmp loc_102C2A4  +
mov eax offset aError_no_wildc +
jmp loc_102C2A4  +
mov eax offset aError_clipboar +
jmp loc_102C2A4  +
mov eax offset aError_hotkey_n +
jmp loc_102C2A4  +
mov eax offset aError_window_n +
jmp loc_102C2A4  +
mov eax offset aError_contro_0 +
jmp loc_102C2A4  +
mov eax offset aError_inval_84 +
jmp loc_102C2A4  +
mov eax offset aError_window_0 +
jmp loc_102C2A4  +
mov eax offset aError_inval_85 +
jmp loc_102C2A4  +
mov eax offset aError_dc_not_f +
jmp loc_102C2A4  +
mov eax offset aError_inval_86 +
jmp loc_102C2A4  +
mov eax offset aError_inval_87 +
jmp loc_102C2A4  +
mov eax offset aError_hook_nee +
jmp loc_102C2A4  +
mov eax offset aError_global_o +
jmp loc_102C2A4  +
mov eax offset aError_journa_2 +
jmp loc_102C2A4  +
mov eax offset aError_hook_not +
jmp loc_102C2A4  +
mov eax offset aError_inval_88 +
jmp loc_102C2A4  +
mov eax offset aError_setcount +
jmp loc_102C2A4  +
mov eax offset aError_lb_witho +
jmp loc_102C2A4  +
mov eax offset aError_destroy_ +
jmp loc_102C2A4  +
mov eax offset aError_child_wi +
jmp loc_102C2A4  +
mov eax offset aError_no_syste +
jmp loc_102C2A4  +
mov eax offset aError_inval_89 +
jmp loc_102C2A4  +
mov eax offset aError_inval_90 +
jmp loc_102C2A4  +
mov eax offset aError_screen_a +
jmp loc_102C2A4  +
mov eax offset aError_hwnds_ha +
jmp loc_102C2A4  +
mov eax offset aError_not_chil +
jmp loc_102C2A4  +
mov eax offset aError_inval_91 +
jmp loc_102C2A4  +
mov eax offset aError_inval_92 +
jmp loc_102C2A4  +
mov eax offset aError_non_mdic +
jmp loc_102C2A4  +
mov eax offset aError_popup_al +
jmp loc_102C2A4  +
mov eax offset aError_no_scrol +
jmp loc_102C2A4  +
mov eax offset aError_inval_93 +
jmp loc_102C2A4  +
mov eax offset aError_inval_94 +
jmp loc_102C2A4  +
mov eax offset aError_no_sys_0 +
jmp loc_102C2A4  +
mov eax offset aError_nonpaged +
jmp loc_102C2A4  +
mov eax offset aError_paged_sy +
jmp loc_102C2A4  +
mov eax offset aError_working_ +
jmp loc_102C2A4  +
mov eax offset aError_pagefi_1 +
jmp loc_102C2A4  +
mov eax offset aError_commit_0 +
jmp loc_102C2A4  +
mov eax offset aError_menu_ite +
jmp loc_102C2A4  +
mov eax offset aError_inval_95 +
jmp loc_102C2A4  +
mov eax offset aError_hook_typ +
jmp loc_102C2A4  +
mov eax offset aError_requires +
jmp loc_102C2A4  +
mov eax offset aError_timeout +
jmp loc_102C2A4  +
mov eax offset aError_inval_96 +
jmp loc_102C2A4  +
mov eax offset aError_incorr_0 +
jmp loc_102C2A4  +
mov eax offset aError_symlink_ +
jmp loc_102C2A4  +
mov eax offset aError_symlin_0 +
jmp loc_102C2A4  +
mov eax offset aError_xml_pars +
jmp loc_102C2A4  +
mov eax offset aError_xmldsig_ +
jmp loc_102C2A4  +
mov eax offset aError_restart_ +
jmp loc_102C2A4  +
mov eax offset aError_wrong_co +
jmp loc_102C2A4  +
mov eax offset aError_authip_f +
jmp loc_102C2A4  +
mov eax offset aError_eventlog +
jmp loc_102C2A4  +
mov eax offset aError_eventl_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_file +
jmp loc_102C2A4  +
mov eax offset aError_eventl_1 +
jmp loc_102C2A4  +
mov eax offset aError_inval_97 +
jmp loc_102C2A4  +
mov eax offset aError_inval_98 +
jmp loc_102C2A4  +
mov eax offset aError_thread_a +
jmp loc_102C2A4  +
mov eax offset aError_install_ +
jmp loc_102C2A4  +
mov eax offset aError_instal_0 +
jmp loc_102C2A4  +
mov eax offset aError_instal_1 +
jmp loc_102C2A4  +
mov eax offset aError_instal_2 +
jmp loc_102C2A4  +
mov eax offset aError_unknow_0 +
jmp loc_102C2A4  +
mov eax offset aError_unknow_1 +
jmp loc_102C2A4  +
mov eax offset aError_unknow_2 +
jmp loc_102C2A4  +
mov eax offset aError_unknow_3 +
jmp loc_102C2A4  +
mov eax offset asc_10121CC +
jmp loc_102C2A4  +
mov eax offset aError_bad_conf +
jmp loc_102C2A4  +
mov eax offset aError_index_ab +
jmp loc_102C2A4  +
mov eax offset aError_instal_3 +
jmp loc_102C2A4  +
mov eax offset aError_instal_4 +
jmp loc_102C2A4  +
mov eax offset aError_product_ +
jmp loc_102C2A4  +
mov eax offset aError_bad_quer +
jmp loc_102C2A4  +
mov eax offset asc_101211C +
jmp loc_102C2A4  +
mov eax offset aError_device_3 +
jmp loc_102C2A4  +
mov eax offset aError_instal_5 +
jmp loc_102C2A4  +
mov eax offset aError_instal_6 +
jmp loc_102C2A4  +
mov eax offset aError_instal_7 +
jmp loc_102C2A4  +
mov eax offset aError_instal_8 +
jmp loc_102C2A4  +
mov eax offset aError_instal_9 +
jmp loc_102C2A4  +
mov eax offset aError_insta_10 +
jmp loc_102C2A4  +
mov eax offset aError_insta_11 +
jmp loc_102C2A4  +
mov eax offset aError_insta_12 +
jmp loc_102C2A4  +
mov eax offset aError_function +
jmp loc_102C2A4  +
mov eax offset aError_functi_0 +
jmp loc_102C2A4  +
mov eax offset asc_1011FBC +
jmp loc_102C2A4  +
mov eax offset aError_datatype +
jmp loc_102C2A4  +
mov eax offset aError_unsupp_0 +
jmp loc_102C2A4  +
mov eax offset aError_create_f +
jmp loc_102C2A4  +
mov eax offset aError_insta_13 +
jmp loc_102C2A4  +
mov eax offset aError_insta_14 +
jmp loc_102C2A4  +
mov eax offset aError_insta_15 +
jmp loc_102C2A4  +
mov eax offset aError_patch_pa +
jmp loc_102C2A4  +
mov eax offset aError_patch__0 +
jmp loc_102C2A4  +
mov eax offset aError_patch__1 +
jmp loc_102C2A4  +
mov eax offset aError_produc_0 +
jmp loc_102C2A4  +
mov eax offset asc_1011E8C +
jmp loc_102C2A4  +
mov eax offset aError_insta_16 +
jmp loc_102C2A4  +
mov eax offset aError_success_ +
jmp loc_102C2A4  +
mov eax offset aError_patch_ta +
jmp loc_102C2A4  +
mov eax offset aError_patch__2 +
jmp loc_102C2A4  +
mov eax offset aError_insta_17 +
jmp loc_102C2A4  +
mov eax offset aError_insta_18 +
jmp loc_102C2A4  +
mov eax offset aError_patch_re +
jmp loc_102C2A4  +
mov eax offset aError_unknow_4 +
jmp loc_102C2A4  +
mov eax offset aError_patch_no +
jmp loc_102C2A4  +
mov eax offset aError_patch__3 +
jmp loc_102C2A4  +
mov eax offset asc_1011D44 +
jmp loc_102C2A4  +
mov eax offset aError_patch_ma +
jmp loc_102C2A4  +
mov eax offset aError_insta_19 +
jmp loc_102C2A4  +
mov eax offset asc_1011CE0 +
jmp loc_102C2A4  +
mov eax offset aError_unreco_0 +
jmp loc_102C2A4  +
mov eax offset aError_no_trust +
jmp loc_102C2A4  +
mov eax offset aError_no_tru_0 +
jmp loc_102C2A4  +
mov eax offset aError_trusted_ +
jmp loc_102C2A4  +
mov eax offset aError_truste_0 +
jmp loc_102C2A4  +
mov eax offset aError_trust_fa +
jmp loc_102C2A4  +
mov eax offset aError_netlogon +
jmp loc_102C2A4  +
mov eax offset aError_accoun_1 +
jmp loc_102C2A4  +
mov eax offset aError_redirect +
jmp loc_102C2A4  +
mov eax offset aError_printer_ +
jmp loc_102C2A4  +
mov eax offset aError_unknow_5 +
jmp loc_102C2A4  +
mov eax offset aError_unknow_6 +
jmp loc_102C2A4  +
mov eax offset aError_unknow_7 +
jmp loc_102C2A4  +
mov eax offset asc_1011B40 +
jmp loc_102C2A4  +
mov eax offset asc_1011B28 +
jmp loc_102C2A4  +
mov eax offset asc_1011B0C +
jmp loc_102C2A4  +
mov eax offset aError_printe_0 +
jmp loc_102C2A4  +
mov eax offset asc_1011ACC +
jmp loc_102C2A4  +
mov eax offset asc_1011AB4 +
jmp loc_102C2A4  +
mov eax offset asc_1011A98 +
jmp loc_102C2A4  +
mov eax offset aError_nologon_ +
jmp loc_102C2A4  +
mov eax offset aError_nologo_0 +
jmp loc_102C2A4  +
mov eax offset aError_nologo_1 +
jmp loc_102C2A4  +
mov eax offset aError_domain_t +
jmp loc_102C2A4  +
mov eax offset aError_server_h +
jmp loc_102C2A4  +
mov eax offset aError_resour_0 +
jmp loc_102C2A4  +
mov eax offset aError_resour_1 +
jmp loc_102C2A4  +
mov eax offset aError_resour_2 +
jmp loc_102C2A4  +
mov eax offset aError_resour_3 +
jmp loc_102C2A4  +
mov eax offset aError_not_en_1 +
jmp loc_102C2A4  +
mov eax offset asc_1011938 +
jmp loc_102C2A4  +
mov eax offset asc_1011920 +
jmp loc_102C2A4  +
mov eax offset asc_1011908 +
jmp loc_102C2A4  +
mov eax offset aError_alread_7 +
jmp loc_102C2A4  +
mov eax offset aError_printe_1 +
jmp loc_102C2A4  +
mov eax offset asc_10118BC +
jmp loc_102C2A4  +
mov eax offset aError_passwo_1 +
jmp loc_102C2A4  +
mov eax offset aError_domain_1 +
jmp loc_102C2A4  +
mov eax offset aError_accoun_2 +
jmp loc_102C2A4  +
mov eax offset aError_no_siten +
jmp loc_102C2A4  +
mov eax offset aError_cant_a_0 +
jmp loc_102C2A4  +
mov eax offset aError_cant_res +
jmp loc_102C2A4  +
mov eax offset aError_km_drive +
jmp loc_102C2A4  +
mov eax offset aError_context_ +
jmp loc_102C2A4  +
mov eax offset aError_per_user +
jmp loc_102C2A4  +
mov eax offset aError_all_user +
jmp loc_102C2A4  +
mov eax offset aError_user_del +
jmp loc_102C2A4  +
mov eax offset aError_authenti +
jmp loc_102C2A4  +
mov eax offset aError_remote_p +
jmp loc_102C2A4  +
mov eax offset aError_ntlm_blo +
jmp loc_102C2A4  +
mov eax offset asc_10116F8 +
jmp loc_102C2A4  +
mov eax offset aError_bad_dr_0 +
jmp loc_102C2A4  +
mov eax offset asc_10116C8 +
jmp loc_102C2A4  +
mov eax offset aError_metafile +
jmp loc_102C2A4  +
mov eax offset aError_transfor +
jmp loc_102C2A4  +
mov eax offset aError_clipping +
jmp loc_102C2A4  +
mov eax offset asc_1011654 +
jmp loc_102C2A4  +
mov eax offset asc_101163C +
jmp loc_102C2A4  +
mov eax offset aError_tag_not_ +
jmp loc_102C2A4  +
mov eax offset aError_tag_no_0 +
jmp loc_102C2A4  +
mov eax offset aError_duplic_0 +
jmp loc_102C2A4  +
mov eax offset aError_profile_ +
jmp loc_102C2A4  +
mov eax offset aError_profil_2 +
jmp loc_102C2A4  +
mov eax offset asc_101159C +
jmp loc_102C2A4  +
mov eax offset aError_icm_not_ +
jmp loc_102C2A4  +
mov eax offset aError_deleting +
jmp loc_102C2A4  +
mov eax offset asc_1011550 +
jmp loc_102C2A4  +
mov eax offset aError_colorspa +
jmp loc_102C2A4  +
mov eax offset asc_1011518 +
jmp loc_102C2A4  +
mov eax offset aError_profil_3 +
jmp loc_102C2A4  +
mov eax offset aError_connecte +
jmp loc_102C2A4  +
mov eax offset aError_connec_5 +
jmp loc_102C2A4  +
mov eax offset aError_bad_us_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invalid_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_wrong_ki +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_protseq_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_1 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_2 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_3 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_4 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_endpo +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_5 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_object_n +
jmp loc_102C2A4  +
mov eax offset aRpc_s_already_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_type_alr +
jmp loc_102C2A4  +
mov eax offset aRpc_s_alread_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_prots +
jmp loc_102C2A4  +
mov eax offset aRpc_s_not_list +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unknown_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unknow_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_bindi +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_pro_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_cant_cre +
jmp loc_102C2A4  +
mov eax offset aRpc_s_out_of_r +
jmp loc_102C2A4  +
mov eax offset aRpc_s_server_u +
jmp loc_102C2A4  +
mov eax offset aRpc_s_server_t +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_6 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_call_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_call_fai +
jmp loc_102C2A4  +
mov eax offset aRpc_s_call_f_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_protocol +
jmp loc_102C2A4  +
mov eax offset aRpc_s_proxy_ac +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unsuppor +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unsupp_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_7 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_8 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_entry +
jmp loc_102C2A4  +
mov eax offset aRpc_s_invali_9 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unsupp_1 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_uuid_no_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_duplicat +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unknow_1 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_max_call +
jmp loc_102C2A4  +
mov eax offset aRpc_s_string_t +
jmp loc_102C2A4  +
mov eax offset aRpc_s_protse_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_procnum_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_binding_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unknow_2 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unknow_3 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_inval_10 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unknow_4 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_nothing_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_incomple +
jmp loc_102C2A4  +
mov eax offset aRpc_s_inval_11 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_more_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_not_all_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_interfac +
jmp loc_102C2A4  +
mov eax offset aRpc_s_entry_al +
jmp loc_102C2A4  +
mov eax offset aRpc_s_entry_no +
jmp loc_102C2A4  +
mov eax offset aRpc_s_name_ser +
jmp loc_102C2A4  +
mov eax offset aRpc_s_inval_12 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_cannot_s +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_conte +
jmp loc_102C2A4  +
mov eax offset aRpc_s_internal +
jmp loc_102C2A4  +
mov eax offset aRpc_s_zero_div +
jmp loc_102C2A4  +
mov eax offset aRpc_s_address_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_fp_div_z +
jmp loc_102C2A4  +
mov eax offset aRpc_s_fp_under +
jmp loc_102C2A4  +
mov eax offset aRpc_s_fp_overf +
jmp loc_102C2A4  +
mov eax offset aRpc_x_no_more_ +
jmp loc_102C2A4  +
mov eax offset aRpc_x_ss_char_ +
jmp loc_102C2A4  +
mov eax offset aRpc_x_ss_cha_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_x_ss_in_nu +
jmp loc_102C2A4  +
mov eax offset aRpc_x_ss_conte +
jmp loc_102C2A4  +
mov eax offset aRpc_x_ss_handl +
jmp loc_102C2A4  +
mov eax offset aRpc_x_ss_canno +
jmp loc_102C2A4  +
mov eax offset aRpc_x_null_ref +
jmp loc_102C2A4  +
mov eax offset aRpc_x_enum_val +
jmp loc_102C2A4  +
mov eax offset aRpc_x_byte_cou +
jmp loc_102C2A4  +
mov eax offset aRpc_x_bad_stub +
jmp loc_102C2A4  +
mov eax offset aRpc_s_call_in_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_mor_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_inter +
jmp loc_102C2A4  +
mov eax offset aRpc_s_call_can +
jmp loc_102C2A4  +
mov eax offset aRpc_s_bindin_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_comm_fai +
jmp loc_102C2A4  +
mov eax offset aRpc_s_unsupp_2 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_no_princ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_not_rpc_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_uuid_loc +
jmp loc_102C2A4  +
mov eax offset aRpc_s_sec_pkg_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_not_canc +
jmp loc_102C2A4  +
mov eax offset aRpc_x_invalid_ +
jmp loc_102C2A4  +
mov eax offset aRpc_x_wrong_es +
jmp loc_102C2A4  +
mov eax offset aRpc_x_wrong_st +
jmp loc_102C2A4  +
mov eax offset aRpc_x_invali_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_x_wrong_pi +
jmp loc_102C2A4  +
mov eax offset aRpc_x_wrong__0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_cookie_a +
jmp loc_102C2A4  +
mov eax offset aRpc_s_group_me +
jmp loc_102C2A4  +
mov eax offset aRpc_s_inval_13 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_send_inc +
jmp loc_102C2A4  +
mov eax offset aRpc_s_inval_14 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_inval_15 +
jmp loc_102C2A4  +
mov eax offset aRpc_x_pipe_clo +
jmp loc_102C2A4  +
mov eax offset aRpc_x_pipe_dis +
jmp loc_102C2A4  +
mov eax offset aRpc_x_pipe_emp +
jmp loc_102C2A4  +
mov eax offset aRpc_s_entry_ty +
jmp loc_102C2A4  +
mov eax offset aRpc_s_not_al_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_interf_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_profile_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_prf_elt_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_prf_el_0 +
jmp loc_102C2A4  +
mov eax offset aRpc_s_grp_elt_ +
jmp loc_102C2A4  +
mov eax offset aRpc_s_grp_el_0 +
jmp loc_102C2A4  +
mov eax offset aError_not_conn +
jmp loc_102C2A4  +
mov ecx 800710D7h +
cmp eax ecx +
jg loc_10295AD  +
jz loc_10295A3  +
mov ecx 80070FA4h +
cmp eax ecx +
jg loc_102938C  +
jz loc_1029382  +
mov ecx 80070BC3h +
cmp eax ecx +
jg loc_10292B6  +
jz loc_10292AC  +
add ecx 0FFFFFFF9h +
cmp eax ecx +
jg loc_1029242  +
jz loc_1029238  +
cmp eax 80070961h +
jz loc_102922E  +
cmp eax 80070962h +
jz loc_1029224  +
cmp eax 80070964h +
jz loc_102921A  +
cmp eax 80070BB8h +
jz loc_1029210  +
cmp eax 80070BB9h +
jz loc_1029206  +
cmp eax 80070BBAh +
jz loc_10291FC  +
cmp eax 80070BBBh +
jnz loc_102C283  +
mov eax offset aError_spl_no_s +
jmp loc_102C2A4  +
mov eax offset aError_spool_fi +
jmp loc_102C2A4  +
mov eax offset aError_printe_2 +
jmp loc_102C2A4  +
mov eax offset aError_unknow_8 +
jmp loc_102C2A4  +
mov eax offset aError_device_i +
jmp loc_102C2A4  +
mov eax offset aError_active_c +
jmp loc_102C2A4  +
mov eax offset aError_open_fil +
jmp loc_102C2A4  +
mov eax offset aError_spl_no_a +
jmp loc_102C2A4  +
cmp eax 80070BBDh +
jz loc_10292A2  +
cmp eax 80070BBEh +
jz loc_1029298  +
cmp eax 80070BBFh +
jz loc_102928E  +
cmp eax 80070BC0h +
jz loc_1029284  +
cmp eax 80070BC1h +
jz loc_102927A  +
cmp eax 80070BC2h +
jnz loc_102C283  +
mov eax offset aError_succes_0 +
jmp loc_102C2A4  +
mov eax offset aError_printe_3 +
jmp loc_102C2A4  +
mov eax offset aError_print_mo +
jmp loc_102C2A4  +
mov eax offset asc_10107F4 +
jmp loc_102C2A4  +
mov eax offset aError_print__0 +
jmp loc_102C2A4  +
mov eax offset aError_print_pr +
jmp loc_102C2A4  +
mov eax offset aError_succes_1 +
jmp loc_102C2A4  +
mov ecx 80070F6Eh +
cmp eax ecx +
jg loc_102933A  +
jz loc_1029330  +
add eax 7FF8F43Ch +
cmp eax 8 +
ja loc_102C283  +
jmp ds:off_102E4C0[eax*4]  +
mov eax offset aError_printe_4 +
jmp loc_102C2A4  +
mov eax offset aError_printe_5 +
jmp loc_102C2A4  +
mov eax offset aError_printe_6 +
jmp loc_102C2A4  +
mov eax offset aError_printe_7 +
jmp loc_102C2A4  +
mov eax offset aError_core_dri +
jmp loc_102C2A4  +
mov eax offset aError_fail_reb +
jmp loc_102C2A4  +
mov eax offset aError_fail_r_0 +
jmp loc_102C2A4  +
mov eax offset aError_printe_8 +
jmp loc_102C2A4  +
mov eax offset aError_print_jo +
jmp loc_102C2A4  +
mov eax offset aError_io_reiss +
jmp loc_102C2A4  +
cmp eax 80070FA0h +
jz loc_1029378  +
cmp eax 80070FA1h +
jz loc_102936E  +
cmp eax 80070FA2h +
jz loc_1029364  +
cmp eax 80070FA3h +
jnz loc_102C283  +
mov eax offset aError_inc_back +
jmp loc_102C2A4  +
mov eax offset aError_static_i +
jmp loc_102C2A4  +
mov eax offset aError_can_no_0 +
jmp loc_102C2A4  +
mov eax offset aError_wins_int +
jmp loc_102C2A4  +
mov eax offset aError_full_bac +
jmp loc_102C2A4  +
mov ecx 80071073h +
cmp eax ecx +
jg loc_10294A5  +
jz loc_102949B  +
add ecx 0FFFFFFF9h +
cmp eax ecx +
jg loc_1029431  +
jz loc_1029427  +
cmp eax 80070FA5h +
jz loc_102941D  +
cmp eax 80070FA6h +
jz loc_1029413  +
cmp eax 80071004h +
jz loc_1029409  +
cmp eax 80071068h +
jz loc_10293FF  +
cmp eax 80071069h +
jz loc_10293F5  +
cmp eax 8007106Ah +
jz loc_10293EB  +
cmp eax 8007106Bh +
jnz loc_102C283  +
mov eax offset aError_wmi_try_ +
jmp loc_102C2A4  +
mov eax offset aError_wmi_item +
jmp loc_102C2A4  +
mov eax offset aError_wmi_inst +
jmp loc_102C2A4  +
mov eax offset aError_wmi_guid +
jmp loc_102C2A4  +
mov eax offset aError_dhcp_add +
jmp loc_102C2A4  +
mov eax offset aError_rpl_not_ +
jmp loc_102C2A4  +
mov eax offset aError_rec_non_ +
jmp loc_102C2A4  +
mov eax offset aError_wmi_dp_n +
jmp loc_102C2A4  +
cmp eax 8007106Dh +
jz loc_1029491  +
cmp eax 8007106Eh +
jz loc_1029487  +
cmp eax 8007106Fh +
jz loc_102947D  +
cmp eax 80071070h +
jz loc_1029473  +
cmp eax 80071071h +
jz loc_1029469  +
cmp eax 80071072h +
jnz loc_102C283  +
mov eax offset aError_wmi_inva +
jmp loc_102C2A4  +
mov eax offset aError_wmi_dp_f +
jmp loc_102C2A4  +
mov eax offset aError_wmi_serv +
jmp loc_102C2A4  +
mov eax offset aError_wmi_gu_0 +
jmp loc_102C2A4  +
mov eax offset aError_wmi_alre +
jmp loc_102C2A4  +
mov eax offset aError_wmi_unre +
jmp loc_102C2A4  +
mov eax offset aError_wmi_in_0 +
jmp loc_102C2A4  +
mov ecx 800710D0h +
cmp eax ecx +
jg loc_1029539  +
jz loc_102952F  +
cmp eax 80071074h +
jz loc_1029525  +
cmp eax 80071075h +
jz loc_102951B  +
cmp eax 80071076h +
jz loc_1029511  +
cmp eax 800710CCh +
jz loc_1029507  +
cmp eax 800710CDh +
jz loc_10294FD  +
cmp eax 800710CEh +
jz loc_10294F3  +
cmp eax 800710CFh +
jnz loc_102C283  +
mov eax offset aError_drive_me +
jmp loc_102C2A4  +
mov eax offset asc_101040C +
jmp loc_102C2A4  +
mov eax offset asc_10103F4 +
jmp loc_102C2A4  +
mov eax offset asc_10103E0 +
jmp loc_102C2A4  +
mov eax offset aError_wmi_set_ +
jmp loc_102C2A4  +
mov eax offset aError_wmi_read +
jmp loc_102C2A4  +
mov eax offset aError_wmi_al_0 +
jmp loc_102C2A4  +
mov eax offset aError_media_of +
jmp loc_102C2A4  +
cmp eax 800710D1h +
jz loc_1029599  +
cmp eax 800710D2h +
jz loc_102958F  +
cmp eax 800710D3h +
jz loc_1029585  +
cmp eax 800710D4h +
jz loc_102957B  +
cmp eax 800710D5h +
jz loc_1029571  +
cmp eax 800710D6h +
jnz loc_102C283  +
mov eax offset asc_101036C +
jmp loc_102C2A4  +
mov eax offset aError_resour_4 +
jmp loc_102C2A4  +
mov eax offset aError_media_un +
jmp loc_102C2A4  +
mov eax offset aError_not_empt +
jmp loc_102C2A4  +
mov eax offset aError_empty +
jmp loc_102C2A4  +
mov eax offset aError_library_ +
jmp loc_102C2A4  +
mov eax offset aError_unable_4 +
jmp loc_102C2A4  +
mov ecx 80071194h +
cmp eax ecx +
jg loc_1029762  +
jz loc_1029758  +
add eax 7FF8EF28h +
cmp eax 52h +
ja loc_102C283  +
movzx eax ds:byte_102E580[eax] +
jmp ds:off_102E4E4[eax*4]  +
mov eax offset aError_object_0 +
jmp loc_102C2A4  +
mov eax offset aError_databa_0 +
jmp loc_102C2A4  +
mov eax offset aError_databa_1 +
jmp loc_102C2A4  +
mov eax offset aError_media_in +
jmp loc_102C2A4  +
mov eax offset aError_resour_5 +
jmp loc_102C2A4  +
mov eax offset asc_101025C +
jmp loc_102C2A4  +
mov eax offset aError_media_no +
jmp loc_102C2A4  +
mov eax offset aError_device_4 +
jmp loc_102C2A4  +
mov eax offset aError_reques_1 +
jmp loc_102C2A4  +
mov eax offset asc_10101F0 +
jmp loc_102C2A4  +
mov eax offset aError_librar_0 +
jmp loc_102C2A4  +
mov eax offset aError_medium_n +
jmp loc_102C2A4  +
mov eax offset aError_unable_5 +
jmp loc_102C2A4  +
mov eax offset aError_unable_6 +
jmp loc_102C2A4  +
mov eax offset aError_unable_7 +
jmp loc_102C2A4  +
mov eax offset aError_unable_8 +
jmp loc_102C2A4  +
mov eax offset aError_transpor +
jmp loc_102C2A4  +
mov eax offset aError_controll +
jmp loc_102C2A4  +
mov eax offset aError_unable_9 +
jmp loc_102C2A4  +
mov eax offset aError_cleaner_ +
jmp loc_102C2A4  +
mov eax offset aError_cleane_0 +
jmp loc_102C2A4  +
mov eax offset aError_cleane_1 +
jmp loc_102C2A4  +
mov eax offset aError_unexpe_2 +
jmp loc_102C2A4  +
mov eax offset aError_cant_del +
jmp loc_102C2A4  +
mov eax offset aError_messag_0 +
jmp loc_102C2A4  +
mov eax offset aError_volume_c +
jmp loc_102C2A4  +
mov eax offset aError_indigeno +
jmp loc_102C2A4  +
mov eax offset aError_no_suppo +
jmp loc_102C2A4  +
mov eax offset aError_cleane_2 +
jmp loc_102C2A4  +
mov eax offset aError_ieport_f +
jmp loc_102C2A4  +
mov eax offset aError_file_off +
jmp loc_102C2A4  +
mov eax offset aError_remote_0 +
jmp loc_102C2A4  +
mov eax offset aError_remote_1 +
jmp loc_102C2A4  +
mov eax offset aError_not_a_re +
jmp loc_102C2A4  +
mov eax offset aError_repars_0 +
jmp loc_102C2A4  +
mov eax offset asc_100FF00 +
jmp loc_102C2A4  +
mov eax offset aError_repars_1 +
jmp loc_102C2A4  +
mov eax offset aError_repars_2 +
jmp loc_102C2A4  +
mov eax offset aError_volume_n +
jmp loc_102C2A4  +
mov ecx 8007138Ch +
cmp eax ecx +
jg loc_1029835  +
jz loc_102982B  +
mov ecx 800711CBh +
cmp eax ecx +
jg loc_10297E3  +
jz loc_10297D9  +
cmp eax 800711C6h +
jz loc_10297CF  +
cmp eax 800711C7h +
jz loc_10297C5  +
cmp eax 800711C8h +
jz loc_10297BB  +
cmp eax 800711C9h +
jz loc_10297B1  +
cmp eax 800711CAh +
jnz loc_102C283  +
mov eax offset asc_100FE88 +
jmp loc_102C2A4  +
mov eax offset aError_file_ver +
jmp loc_102C2A4  +
mov eax offset aError_file_v_0 +
jmp loc_102C2A4  +
mov eax offset aError_file_v_1 +
jmp loc_102C2A4  +
mov eax offset aError_file_v_2 +
jmp loc_102C2A4  +
mov eax offset asc_100FDD0 +
jmp loc_102C2A4  +
cmp eax 800711CCh +
jz loc_1029821  +
cmp eax 80071389h +
jz loc_1029817  +
cmp eax 8007138Ah +
jz loc_102980D  +
cmp eax 8007138Bh +
jnz loc_102C283  +
mov eax offset aError_depend_0 +
jmp loc_102C2A4  +
mov eax offset aError_depend_1 +
jmp loc_102C2A4  +
mov eax offset aError_depend_2 +
jmp loc_102C2A4  +
mov eax offset aError_file_v_3 +
jmp loc_102C2A4  +
mov eax offset aError_resour_6 +
jmp loc_102C2A4  +
add eax 7FF8EC73h +
cmp eax 8 +
ja loc_102C283  +
jmp ds:off_102E5D4[eax*4]  +
mov eax offset aError_host_nod +
jmp loc_102C2A4  +
mov eax offset aError_resour_7 +
jmp loc_102C2A4  +
mov eax offset aError_resour_8 +
jmp loc_102C2A4  +
mov eax offset aError_shutdo_2 +
jmp loc_102C2A4  +
mov eax offset aError_cant_evi +
jmp loc_102C2A4  +
mov eax offset aError_object_a +
jmp loc_102C2A4  +
mov eax offset aError_object_i +
jmp loc_102C2A4  +
mov eax offset aError_group_no +
jmp loc_102C2A4  +
mov eax offset aError_group__0 +
jmp loc_102C2A4  +
mov eax offset aError_group__1 +
jmp loc_102C2A4  +
mov ecx 80071702h +
cmp eax ecx +
jg loc_1029BC4  +
jz loc_1029BBA  +
add eax 7FF8EC69h +
cmp eax 4Ah +
ja loc_102C283  +
jmp ds:off_102E5F8[eax*4]  +
mov eax offset aError_host_n_0 +
jmp loc_102C2A4  +
mov eax offset aError_host_n_1 +
jmp loc_102C2A4  +
mov eax offset aError_resmon_c +
jmp loc_102C2A4  +
mov eax offset aError_resmon_o +
jmp loc_102C2A4  +
mov eax offset aError_resour_9 +
jmp loc_102C2A4  +
mov eax offset aError_quorum_r +
jmp loc_102C2A4  +
mov eax offset aError_not_quor +
jmp loc_102C2A4  +
mov eax offset aError_cluster_ +
jmp loc_102C2A4  +
mov eax offset asc_100FB24 +
jmp loc_102C2A4  +
mov eax offset aError_resou_10 +
jmp loc_102C2A4  +
mov eax offset aError_not_qu_0 +
jmp loc_102C2A4  +
mov eax offset aError_core_res +
jmp loc_102C2A4  +
mov eax offset aError_quorum_0 +
jmp loc_102C2A4  +
mov eax offset aError_quorumlo +
jmp loc_102C2A4  +
mov eax offset aError_clusterl +
jmp loc_102C2A4  +
mov eax offset aError_cluste_0 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_1 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_2 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_3 +
jmp loc_102C2A4  +
mov eax offset aError_quorum_o +
jmp loc_102C2A4  +
mov eax offset aError_networ_2 +
jmp loc_102C2A4  +
mov eax offset aError_node_not +
jmp loc_102C2A4  +
mov eax offset aError_all_node +
jmp loc_102C2A4  +
mov eax offset aError_resou_11 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_4 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_5 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_6 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_7 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_8 +
jmp loc_102C2A4  +
mov eax offset aError_cluste_9 +
jmp loc_102C2A4  +
mov eax offset aError_clust_10 +
jmp loc_102C2A4  +
mov eax offset aError_clust_11 +
jmp loc_102C2A4  +
mov eax offset aError_clust_12 +
jmp loc_102C2A4  +
mov eax offset aError_clust_13 +
jmp loc_102C2A4  +
mov eax offset aError_clust_14 +
jmp loc_102C2A4  +
mov eax offset aError_clust_15 +
jmp loc_102C2A4  +
mov eax offset aError_clust_16 +
jmp loc_102C2A4  +
mov eax offset aError_clust_17 +
jmp loc_102C2A4  +
mov eax offset aError_clust_18 +
jmp loc_102C2A4  +
mov eax offset aError_clust_19 +
jmp loc_102C2A4  +
mov eax offset aError_clust_20 +
jmp loc_102C2A4  +
mov eax offset aError_clust_21 +
jmp loc_102C2A4  +
mov eax offset aError_clust_22 +
jmp loc_102C2A4  +
mov eax offset aError_clust_23 +
jmp loc_102C2A4  +
mov eax offset aError_clust_24 +
jmp loc_102C2A4  +
mov eax offset aError_clust_25 +
jmp loc_102C2A4  +
mov eax offset aError_clust_26 +
jmp loc_102C2A4  +
mov eax offset aError_clust_27 +
jmp loc_102C2A4  +
mov eax offset aError_clust_28 +
jmp loc_102C2A4  +
mov eax offset aError_clust_29 +
jmp loc_102C2A4  +
mov eax offset aError_clust_30 +
jmp loc_102C2A4  +
mov eax offset aError_clust_31 +
jmp loc_102C2A4  +
mov eax offset asc_100F58C +
jmp loc_102C2A4  +
mov eax offset aError_depend_3 +
jmp loc_102C2A4  +
mov eax offset aError_clust_32 +
jmp loc_102C2A4  +
mov eax offset aError_node_can +
jmp loc_102C2A4  +
mov eax offset aError_clust_33 +
jmp loc_102C2A4  +
mov eax offset aError_clust_34 +
jmp loc_102C2A4  +
mov eax offset aError_clust_35 +
jmp loc_102C2A4  +
mov eax offset aError_clust_36 +
jmp loc_102C2A4  +
mov eax offset aError_clust_37 +
jmp loc_102C2A4  +
mov eax offset aError_clust_38 +
jmp loc_102C2A4  +
mov eax offset aError_clust_39 +
jmp loc_102C2A4  +
mov eax offset aError_clust_40 +
jmp loc_102C2A4  +
mov eax offset aError_clust_41 +
jmp loc_102C2A4  +
mov eax offset aError_clust_42 +
jmp loc_102C2A4  +
mov eax offset aError_clust_43 +
jmp loc_102C2A4  +
mov eax offset aError_clust_44 +
jmp loc_102C2A4  +
mov eax offset aError_resmon_i +
jmp loc_102C2A4  +
mov eax offset aError_clust_45 +
jmp loc_102C2A4  +
mov eax offset aError_quorum_d +
jmp loc_102C2A4  +
mov eax offset aError_databa_2 +
jmp loc_102C2A4  +
mov eax offset aError_clust_46 +
jmp loc_102C2A4  +
mov eax offset aError_resou_12 +
jmp loc_102C2A4  +
mov eax offset aError_clust_47 +
jmp loc_102C2A4  +
mov ecx 800717E6h +
cmp eax ecx +
jg loc_1029EED  +
jz loc_1029EE3  +
add eax 7FF8E8FDh +
cmp eax 82h +
ja loc_102C283  +
movzx eax ds:byte_102E854[eax] +
jmp ds:off_102E724[eax*4]  +
mov eax offset aError_clust_48 +
jmp loc_102C2A4  +
mov eax offset aError_clust_49 +
jmp loc_102C2A4  +
mov eax offset aError_clust_50 +
jmp loc_102C2A4  +
mov eax offset aError_clust_51 +
jmp loc_102C2A4  +
mov eax offset aError_clust_52 +
jmp loc_102C2A4  +
mov eax offset aError_clust_53 +
jmp loc_102C2A4  +
mov eax offset aError_clust_54 +
jmp loc_102C2A4  +
mov eax offset aError_node_c_0 +
jmp loc_102C2A4  +
mov eax offset aError_clust_55 +
jmp loc_102C2A4  +
mov eax offset aError_clust_56 +
jmp loc_102C2A4  +
mov eax offset aError_cluscfg_ +
jmp loc_102C2A4  +
mov eax offset aError_cluscf_0 +
jmp loc_102C2A4  +
mov eax offset aError_cluscf_1 +
jmp loc_102C2A4  +
mov eax offset aError_clust_57 +
jmp loc_102C2A4  +
mov eax offset aError_clust_58 +
jmp loc_102C2A4  +
mov eax offset aError_clust_59 +
jmp loc_102C2A4  +
mov eax offset aError_clust_60 +
jmp loc_102C2A4  +
mov eax offset aError_clust_61 +
jmp loc_102C2A4  +
mov eax offset aError_clust_62 +
jmp loc_102C2A4  +
mov eax offset aError_resou_13 +
jmp loc_102C2A4  +
mov eax offset asc_100EFA8 +
jmp loc_102C2A4  +
mov eax offset aError_clust_63 +
jmp loc_102C2A4  +
mov eax offset aError_clust_64 +
jmp loc_102C2A4  +
mov eax offset aError_clust_65 +
jmp loc_102C2A4  +
mov eax offset aError_clust_66 +
jmp loc_102C2A4  +
mov eax offset aError_clust_67 +
jmp loc_102C2A4  +
mov eax offset aError_clust_68 +
jmp loc_102C2A4  +
mov eax offset aError_clust_69 +
jmp loc_102C2A4  +
mov eax offset aError_clust_70 +
jmp loc_102C2A4  +
mov eax offset aError_clust_71 +
jmp loc_102C2A4  +
mov eax offset aError_clust_72 +
jmp loc_102C2A4  +
mov eax offset aError_clust_73 +
jmp loc_102C2A4  +
mov eax offset aError_clust_74 +
jmp loc_102C2A4  +
mov eax offset aError_depend_4 +
jmp loc_102C2A4  +
mov eax offset aError_clust_75 +
jmp loc_102C2A4  +
mov eax offset aError_clust_76 +
jmp loc_102C2A4  +
mov eax offset aError_clust_77 +
jmp loc_102C2A4  +
mov eax offset aError_quorum_n +
jmp loc_102C2A4  +
mov eax offset aError_depend_5 +
jmp loc_102C2A4  +
mov eax offset aError_except_0 +
jmp loc_102C2A4  +
mov eax offset aError_clust_78 +
jmp loc_102C2A4  +
mov eax offset aError_clust_79 +
jmp loc_102C2A4  +
mov eax offset aError_clust_80 +
jmp loc_102C2A4  +
mov eax offset aError_clust_81 +
jmp loc_102C2A4  +
mov eax offset aError_clust_82 +
jmp loc_102C2A4  +
mov eax offset aError_clust_83 +
jmp loc_102C2A4  +
mov eax offset aError_noncore_ +
jmp loc_102C2A4  +
mov eax offset aError_file_sha +
jmp loc_102C2A4  +
mov eax offset aError_clust_84 +
jmp loc_102C2A4  +
mov eax offset aError_clust_85 +
jmp loc_102C2A4  +
mov eax offset aError_clust_86 +
jmp loc_102C2A4  +
mov eax offset aError_clust_87 +
jmp loc_102C2A4  +
mov eax offset aError_clust_88 +
jmp loc_102C2A4  +
mov eax offset aError_encrypti +
jmp loc_102C2A4  +
mov eax offset aError_decrypti +
jmp loc_102C2A4  +
mov eax offset aError_file_enc +
jmp loc_102C2A4  +
mov eax offset aError_no_rec_0 +
jmp loc_102C2A4  +
mov eax offset aError_no_efs +
jmp loc_102C2A4  +
mov eax offset aError_wrong_ef +
jmp loc_102C2A4  +
mov eax offset aError_no_use_0 +
jmp loc_102C2A4  +
mov eax offset aError_file_n_0 +
jmp loc_102C2A4  +
mov eax offset aError_not_expo +
jmp loc_102C2A4  +
mov eax offset aError_file_rea +
jmp loc_102C2A4  +
mov eax offset aError_dir_efs_ +
jmp loc_102C2A4  +
mov eax offset aError_efs_serv +
jmp loc_102C2A4  +
mov eax offset aError_bad_reco +
jmp loc_102C2A4  +
mov eax offset aError_efs_alg_ +
jmp loc_102C2A4  +
mov eax offset aError_volume_0 +
jmp loc_102C2A4  +
mov eax offset aError_efs_disa +
jmp loc_102C2A4  +
mov eax offset aError_efs_vers +
jmp loc_102C2A4  +
mov eax offset aError_cs_encry +
jmp loc_102C2A4  +
mov eax offset aError_cs_enc_0 +
jmp loc_102C2A4  +
mov eax offset aError_cs_enc_1 +
jmp loc_102C2A4  +
mov eax offset aError_cs_enc_2 +
jmp loc_102C2A4  +
mov eax offset aError_cs_enc_3 +
jmp loc_102C2A4  +
mov eax offset aError_no_brows +
jmp loc_102C2A4  +
mov ecx 80071B59h +
cmp eax ecx +
jg loc_102A45A  +
jz loc_102A450  +
add eax 7FF8E638h +
cmp eax 0FEh +
ja loc_102C283  +
movzx eax ds:byte_102EAF0[eax] +
jmp ds:off_102E8D8[eax*4]  +
mov eax offset aError_log_sect +
jmp loc_102C2A4  +
mov eax offset aError_log_se_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_se_1 +
jmp loc_102C2A4  +
mov eax offset aError_log_bloc +
jmp loc_102C2A4  +
mov eax offset aError_log_inva +
jmp loc_102C2A4  +
mov eax offset aError_log_bl_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_read +
jmp loc_102C2A4  +
mov eax offset aError_log_rest +
jmp loc_102C2A4  +
mov eax offset aError_log_bl_1 +
jmp loc_102C2A4  +
mov eax offset aError_log_bl_2 +
jmp loc_102C2A4  +
mov eax offset aError_log_re_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_no_r +
jmp loc_102C2A4  +
mov eax offset aError_log_meta +
jmp loc_102C2A4  +
mov eax offset aError_log_me_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_me_1 +
jmp loc_102C2A4  +
mov eax offset aError_log_rese +
jmp loc_102C2A4  +
mov eax offset aError_log_cant +
jmp loc_102C2A4  +
mov eax offset aError_log_cont +
jmp loc_102C2A4  +
mov eax offset aError_log_star +
jmp loc_102C2A4  +
mov eax offset aError_log_poli +
jmp loc_102C2A4  +
mov eax offset aError_log_po_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_po_1 +
jmp loc_102C2A4  +
mov eax offset aError_log_po_2 +
jmp loc_102C2A4  +
mov eax offset aError_log_pinn +
jmp loc_102C2A4  +
mov eax offset aError_log_reco +
jmp loc_102C2A4  +
mov eax offset aError_log_re_1 +
jmp loc_102C2A4  +
mov eax offset aError_log_spac +
jmp loc_102C2A4  +
mov eax offset aError_log_tail +
jmp loc_102C2A4  +
mov eax offset aError_log_full +
jmp loc_102C2A4  +
mov eax offset aError_could__0 +
jmp loc_102C2A4  +
mov eax offset aError_log_mult +
jmp loc_102C2A4  +
mov eax offset aError_log_dedi +
jmp loc_102C2A4  +
mov eax offset aError_log_arch +
jmp loc_102C2A4  +
mov eax offset aError_log_ar_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_ephe +
jmp loc_102C2A4  +
mov eax offset aError_log_not_ +
jmp loc_102C2A4  +
mov eax offset aError_log_clie +
jmp loc_102C2A4  +
mov eax offset aError_log_cl_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_fu_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_co_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_co_1 +
jmp loc_102C2A4  +
mov eax offset aError_log_co_2 +
jmp loc_102C2A4  +
mov eax offset aError_log_co_3 +
jmp loc_102C2A4  +
mov eax offset aError_log_stat +
jmp loc_102C2A4  +
mov eax offset aError_log_pi_0 +
jmp loc_102C2A4  +
mov eax offset aError_log_me_2 +
jmp loc_102C2A4  +
mov eax offset aError_log_inco +
jmp loc_102C2A4  +
mov eax offset aError_log_appe +
jmp loc_102C2A4  +
mov eax offset aError_log_pi_1 +
jmp loc_102C2A4  +
mov eax offset asc_100E2B0 +
jmp loc_102C2A4  +
mov eax offset aError_transact +
jmp loc_102C2A4  +
mov eax offset aError_transa_0 +
jmp loc_102C2A4  +
mov eax offset aError_transa_1 +
jmp loc_102C2A4  +
mov eax offset aError_transa_2 +
jmp loc_102C2A4  +
mov eax offset aError_transa_3 +
jmp loc_102C2A4  +
mov eax offset aError_tm_initi +
jmp loc_102C2A4  +
mov eax offset aError_resou_14 +
jmp loc_102C2A4  +
mov eax offset aError_transa_4 +
jmp loc_102C2A4  +
mov eax offset aError_transa_5 +
jmp loc_102C2A4  +
mov eax offset aError_crm_prot +
jmp loc_102C2A4  +
mov eax offset aError_transa_6 +
jmp loc_102C2A4  +
mov eax offset aError_crm_pr_0 +
jmp loc_102C2A4  +
mov eax offset aError_transa_7 +
jmp loc_102C2A4  +
mov eax offset aError_curren_1 +
jmp loc_102C2A4  +
mov eax offset aError_transa_8 +
jmp loc_102C2A4  +
mov eax offset aError_resou_15 +
jmp loc_102C2A4  +
mov eax offset aError_enlistme +
jmp loc_102C2A4  +
mov eax offset aError_transa_9 +
jmp loc_102C2A4  +
mov eax offset aError_trans_10 +
jmp loc_102C2A4  +
mov eax offset aError_trans_11 +
jmp loc_102C2A4  +
mov eax offset aError_trans_12 +
jmp loc_102C2A4  +
mov eax offset aError_trans_13 +
jmp loc_102C2A4  +
mov eax offset aError_trans_14 +
jmp loc_102C2A4  +
mov eax offset aError_trans_15 +
jmp loc_102C2A4  +
mov eax offset aError_implicit +
jmp loc_102C2A4  +
mov eax offset aError_trans_16 +
jmp loc_102C2A4  +
mov eax offset aError_trans_17 +
jmp loc_102C2A4  +
mov eax offset aError_rm_canno +
jmp loc_102C2A4  +
mov eax offset aError_trans_18 +
jmp loc_102C2A4  +
mov eax offset aError_trans_19 +
jmp loc_102C2A4  +
mov eax offset aError_trans_20 +
jmp loc_102C2A4  +
mov eax offset aError_rm_not_a +
jmp loc_102C2A4  +
mov eax offset aError_rm_metad +
jmp loc_102C2A4  +
mov eax offset aError_direct_0 +
jmp loc_102C2A4  +
mov eax offset aError_trans_21 +
jmp loc_102C2A4  +
mov eax offset aError_log_resi +
jmp loc_102C2A4  +
mov eax offset aError_object_1 +
jmp loc_102C2A4  +
mov eax offset aError_stream_m +
jmp loc_102C2A4  +
mov eax offset aError_stream_0 +
jmp loc_102C2A4  +
mov eax offset aError_minivers +
jmp loc_102C2A4  +
mov eax offset aError_cant_o_0 +
jmp loc_102C2A4  +
mov eax offset aError_cant_cre +
jmp loc_102C2A4  +
mov eax offset aError_remote_f +
jmp loc_102C2A4  +
mov eax offset aError_handle_n +
jmp loc_102C2A4  +
mov eax offset aError_no_txf_m +
jmp loc_102C2A4  +
mov eax offset aError_log_corr +
jmp loc_102C2A4  +
mov eax offset aError_cant_rec +
jmp loc_102C2A4  +
mov eax offset aError_rm_disco +
jmp loc_102C2A4  +
mov eax offset aError_enlist_0 +
jmp loc_102C2A4  +
mov eax offset aError_recove_0 +
jmp loc_102C2A4  +
mov eax offset aError_rm_alrea +
jmp loc_102C2A4  +
mov eax offset aError_file_ide +
jmp loc_102C2A4  +
mov eax offset aError_cant_bre +
jmp loc_102C2A4  +
mov eax offset aError_cant_cro +
jmp loc_102C2A4  +
mov eax offset aError_txf_dir_ +
jmp loc_102C2A4  +
mov eax offset aError_indoubt_ +
jmp loc_102C2A4  +
mov eax offset aError_tm_volat +
jmp loc_102C2A4  +
mov eax offset aError_rollback +
jmp loc_102C2A4  +
mov eax offset aError_txf_attr +
jmp loc_102C2A4  +
mov eax offset aError_efs_not_ +
jmp loc_102C2A4  +
mov eax offset aError_trans_22 +
jmp loc_102C2A4  +
mov eax offset aError_log_grow +
jmp loc_102C2A4  +
mov eax offset aError_trans_23 +
jmp loc_102C2A4  +
mov eax offset aError_txf_meta +
jmp loc_102C2A4  +
mov eax offset aError_trans_24 +
jmp loc_102C2A4  +
mov eax offset aError_trans_25 +
jmp loc_102C2A4  +
mov eax offset aError_cannot_e +
jmp loc_102C2A4  +
mov eax offset aError_trans_26 +
jmp loc_102C2A4  +
mov eax offset aError_trans_27 +
jmp loc_102C2A4  +
mov eax offset aError_not_snap +
jmp loc_102C2A4  +
mov eax offset aError_no_savep +
jmp loc_102C2A4  +
mov eax offset aError_data_los +
jmp loc_102C2A4  +
mov eax offset aError_sparse_n +
jmp loc_102C2A4  +
mov eax offset aError_tm_ident +
jmp loc_102C2A4  +
mov eax offset aError_floated_ +
jmp loc_102C2A4  +
mov eax offset aError_cannot_a +
jmp loc_102C2A4  +
mov eax offset aError_cannot_1 +
jmp loc_102C2A4  +
mov eax offset aError_bad_clus +
jmp loc_102C2A4  +
mov eax offset aError_compre_0 +
jmp loc_102C2A4  +
mov eax offset aError_volume_d +
jmp loc_102C2A4  +
mov eax offset aError_no_link_ +
jmp loc_102C2A4  +
mov eax offset aError_operat_0 +
jmp loc_102C2A4  +
mov eax offset aError_expired_ +
jmp loc_102C2A4  +
mov eax offset aError_ctx_wins +
jmp loc_102C2A4  +
mov ecx 80072008h +
cmp eax ecx +
jg loc_102A676  +
jz loc_102A66C  +
add eax 7FF8E4A6h +
cmp eax 43h +
ja loc_102C283  +
jmp ds:off_102EBF0[eax*4]  +
mov eax offset aError_ctx_inva +
jmp loc_102C2A4  +
mov eax offset aError_ctx_pd_n +
jmp loc_102C2A4  +
mov eax offset aError_ctx_wd_n +
jmp loc_102C2A4  +
mov eax offset aError_ctx_cann +
jmp loc_102C2A4  +
mov eax offset aError_ctx_serv +
jmp loc_102C2A4  +
mov eax offset aError_ctx_clos +
jmp loc_102C2A4  +
mov eax offset aError_ctx_no_o +
jmp loc_102C2A4  +
mov eax offset aError_ctx_mode +
jmp loc_102C2A4  +
mov eax offset aError_ctx_in_0 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_mo_0 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_mo_1 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_mo_2 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_mo_3 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_mo_4 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_mo_5 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_td_e +
jmp loc_102C2A4  +
mov eax offset aError_ctx_wi_0 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_wi_1 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_wi_2 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_bad_ +
jmp loc_102C2A4  +
mov eax offset aError_ctx_grap +
jmp loc_102C2A4  +
mov eax offset aError_ctx_logo +
jmp loc_102C2A4  +
mov eax offset aError_ctx_not_ +
jmp loc_102C2A4  +
mov eax offset aError_ctx_clie +
jmp loc_102C2A4  +
mov eax offset aError_ctx_cons +
jmp loc_102C2A4  +
mov eax offset aError_ctx_co_0 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_shad +
jmp loc_102C2A4  +
mov eax offset aError_ctx_wi_3 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_in_1 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_sh_0 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_sh_1 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_cl_0 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_cl_1 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_lice +
jmp loc_102C2A4  +
mov eax offset aError_ctx_li_0 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_li_1 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_sh_2 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_sh_3 +
jmp loc_102C2A4  +
mov eax offset aError_activati +
jmp loc_102C2A4  +
mov eax offset aError_ctx_wi_4 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_encr +
jmp loc_102C2A4  +
mov eax offset aError_ctx_sess +
jmp loc_102C2A4  +
mov eax offset aError_ctx_no_f +
jmp loc_102C2A4  +
mov eax offset aError_ctx_acco +
jmp loc_102C2A4  +
mov eax offset aError_rdp_prot +
jmp loc_102C2A4  +
mov eax offset aError_ctx_cdm_ +
jmp loc_102C2A4  +
mov eax offset aError_ctx_cd_0 +
jmp loc_102C2A4  +
mov eax offset aError_ctx_secu +
jmp loc_102C2A4  +
mov eax offset aError_ts_incom +
jmp loc_102C2A4  +
mov eax offset aError_ds_not_i +
jmp loc_102C2A4  +
mov ecx 800732C8h +
cmp eax ecx +
jg loc_102B604  +
jz loc_102B5FA  +
add eax 7FF8DFF7h +
cmp eax 1B0h +
ja loc_102C283  +
jmp ds:off_102ED00[eax*4]  +
mov eax offset aError_ds_membe +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_at +
jmp loc_102C2A4  +
mov eax offset aError_ds_inval +
jmp loc_102C2A4  +
mov eax offset aError_ds_attri +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_busy +
jmp loc_102C2A4  +
mov eax offset aError_ds_unava +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_ri +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_mo +
jmp loc_102C2A4  +
mov eax offset aError_ds_incor +
jmp loc_102C2A4  +
mov eax offset aError_ds_ridmg +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_c +
jmp loc_102C2A4  +
mov eax offset aError_ds_cant_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_cross +
jmp loc_102C2A4  +
mov eax offset aError_ds_gc_no +
jmp loc_102C2A4  +
mov eax offset aError_shared_p +
jmp loc_102C2A4  +
mov eax offset aError_policy_o +
jmp loc_102C2A4  +
mov eax offset aError_policy_0 +
jmp loc_102C2A4  +
mov eax offset aError_promotio +
jmp loc_102C2A4  +
mov eax offset aError_no_promo +
jmp loc_102C2A4  +
mov eax offset aError_ds_opera +
jmp loc_102C2A4  +
mov eax offset aError_ds_proto +
jmp loc_102C2A4  +
mov eax offset aError_ds_timel +
jmp loc_102C2A4  +
mov eax offset aError_ds_sizel +
jmp loc_102C2A4  +
mov eax offset aError_ds_admin +
jmp loc_102C2A4  +
mov eax offset aError_ds_compa +
jmp loc_102C2A4  +
mov eax offset aError_ds_com_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_auth_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_stron +
jmp loc_102C2A4  +
mov eax offset aError_ds_inapp +
jmp loc_102C2A4  +
mov eax offset aError_ds_aut_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_refer +
jmp loc_102C2A4  +
mov eax offset aError_ds_una_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_confi +
jmp loc_102C2A4  +
mov eax offset aError_ds_ina_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_const +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_su +
jmp loc_102C2A4  +
mov eax offset aError_ds_alias +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_is_le +
jmp loc_102C2A4  +
mov eax offset aError_ds_ali_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_unwil +
jmp loc_102C2A4  +
mov eax offset aError_ds_loop_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_namin +
jmp loc_102C2A4  +
mov eax offset aError_ds_objec +
jmp loc_102C2A4  +
mov eax offset aError_ds_affec +
jmp loc_102C2A4  +
mov eax offset aError_ds_serve +
jmp loc_102C2A4  +
mov eax offset aError_ds_local +
jmp loc_102C2A4  +
mov eax offset aError_ds_encod +
jmp loc_102C2A4  +
mov eax offset aError_ds_decod +
jmp loc_102C2A4  +
mov eax offset aError_ds_filte +
jmp loc_102C2A4  +
mov eax offset aError_ds_param +
jmp loc_102C2A4  +
mov eax offset aError_ds_not_s +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_re +
jmp loc_102C2A4  +
mov eax offset aError_ds_contr +
jmp loc_102C2A4  +
mov eax offset aError_ds_clien +
jmp loc_102C2A4  +
mov eax offset aError_ds_ref_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_sort_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_offse +
jmp loc_102C2A4  +
mov eax offset aError_ds_root_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_add_r +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_n +
jmp loc_102C2A4  +
mov eax offset aError_ds_max_o +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_s +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_rd +
jmp loc_102C2A4  +
mov eax offset aError_ds_rdn_d +
jmp loc_102C2A4  +
mov eax offset aError_ds_no__0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_user_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_i +
jmp loc_102C2A4  +
mov eax offset aError_ds_illeg +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_t +
jmp loc_102C2A4  +
mov eax offset aError_ds_bad_i +
jmp loc_102C2A4  +
mov eax offset aError_ds_maste +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_missi +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_a +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_singl +
jmp loc_102C2A4  +
mov eax offset aError_ds_range +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_v +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_4 +
jmp loc_102C2A4  +
mov eax offset aError_ds_roo_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_ch +
jmp loc_102C2A4  +
mov eax offset aError_ds_no__1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_pa +
jmp loc_102C2A4  +
mov eax offset aError_ds_paren +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_5 +
jmp loc_102C2A4  +
mov eax offset aError_ds_child +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_n +
jmp loc_102C2A4  +
mov eax offset aError_ds_ali_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_bad_n +
jmp loc_102C2A4  +
mov eax offset aError_ds_ali_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_6 +
jmp loc_102C2A4  +
mov eax offset aError_ds_out_o +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_7 +
jmp loc_102C2A4  +
mov eax offset aError_ds_gener +
jmp loc_102C2A4  +
mov eax offset aError_ds_dsa_m +
jmp loc_102C2A4  +
mov eax offset aError_ds_class +
jmp loc_102C2A4  +
mov eax offset aError_ds_insuf +
jmp loc_102C2A4  +
mov eax offset aError_ds_ill_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_name_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_not_a +
jmp loc_102C2A4  +
mov eax offset aError_ds_sec_d +
jmp loc_102C2A4  +
mov eax offset aError_ds_sec_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_de +
jmp loc_102C2A4  +
mov eax offset aError_ds_subre +
jmp loc_102C2A4  +
mov eax offset aError_ds_ncnam +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_8 +
jmp loc_102C2A4  +
mov eax offset aError_ds_cla_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_g +
jmp loc_102C2A4  +
mov eax offset aError_ds_not_o +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_cr +
jmp loc_102C2A4  +
mov eax offset aError_ds_shutt +
jmp loc_102C2A4  +
mov eax offset aError_ds_unkno +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_could +
jmp loc_102C2A4  +
mov eax offset aError_ds_cro_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_can_9 +
jmp loc_102C2A4  +
mov eax offset aError_ds_repli +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_obj_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_4 +
jmp loc_102C2A4  +
mov eax offset aError_ds_cro_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_10 +
jmp loc_102C2A4  +
mov eax offset aError_ds_subtr +
jmp loc_102C2A4  +
mov eax offset aError_ds_notif +
jmp loc_102C2A4  +
mov eax offset aError_ds_dup_r +
jmp loc_102C2A4  +
mov eax offset aError_ds_dup_o +
jmp loc_102C2A4  +
mov eax offset aError_ds_dup_m +
jmp loc_102C2A4  +
mov eax offset aError_ds_dup_s +
jmp loc_102C2A4  +
mov eax offset aError_ds_dup_l +
jmp loc_102C2A4  +
mov eax offset aError_ds_seman +
jmp loc_102C2A4  +
mov eax offset aError_ds_synta +
jmp loc_102C2A4  +
mov eax offset aError_ds_exist +
jmp loc_102C2A4  +
mov eax offset aError_ds_exi_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nonex +
jmp loc_102C2A4  +
mov eax offset aError_ds_non_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_aux_c +
jmp loc_102C2A4  +
mov eax offset aError_ds_non_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_sub_c +
jmp loc_102C2A4  +
mov eax offset aError_ds_bad_r +
jmp loc_102C2A4  +
mov eax offset aError_ds_exi_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_exi_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_exi_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_recal +
jmp loc_102C2A4  +
mov eax offset aError_ds_tree_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_11 +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_s +
jmp loc_102C2A4  +
mov eax offset aError_ds_bad_a +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_12 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_13 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_14 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_15 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_16 +
jmp loc_102C2A4  +
mov eax offset aError_ds_mis_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_17 +
jmp loc_102C2A4  +
mov eax offset aError_ds_code_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_datab +
jmp loc_102C2A4  +
mov eax offset aError_ds_gover +
jmp loc_102C2A4  +
mov eax offset aError_ds_mis_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ncn_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_secur +
jmp loc_102C2A4  +
mov eax offset aError_ds_schem +
jmp loc_102C2A4  +
mov eax offset aError_ds_sch_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_att_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_gcver +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_s +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_18 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_19 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_20 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_21 +
jmp loc_102C2A4  +
mov eax offset aError_ds_sec_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_22 +
jmp loc_102C2A4  +
mov eax offset aError_ds_bad_h +
jmp loc_102C2A4  +
mov eax offset aError_ds_build +
jmp loc_102C2A4  +
mov eax offset aError_ds_con_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_count +
jmp loc_102C2A4  +
mov eax offset aError_ds_hiera +
jmp loc_102C2A4  +
mov eax offset aError_ds_inter +
jmp loc_102C2A4  +
mov eax offset aError_ds_unk_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_roo_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_refus +
jmp loc_102C2A4  +
mov eax offset aError_ds_mis_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_unabl +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_g +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_i +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_b +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_d +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_c +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_4 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_o +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_m +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_r +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_5 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_6 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_7 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_n +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_a +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_8 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_9 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_10 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_11 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_12 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_13 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_14 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_p +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_15 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_16 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_17 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_18 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dra_e +
jmp loc_102C2A4  +
mov eax offset aError_ds_insta +
jmp loc_102C2A4  +
mov eax offset aError_ds_dup_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_5 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_6 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_7 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_8 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nam_9 +
jmp loc_102C2A4  +
mov eax offset aError_ds_na_10 +
jmp loc_102C2A4  +
mov eax offset aError_ds_con_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_wrong +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_19 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ds_re +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_non_b +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_23 +
jmp loc_102C2A4  +
mov eax offset aError_ds_backl +
jmp loc_102C2A4  +
mov eax offset aError_ds_epoch +
jmp loc_102C2A4  +
mov eax offset aError_ds_src_n +
jmp loc_102C2A4  +
mov eax offset aError_ds_src_a +
jmp loc_102C2A4  +
mov eax offset aError_ds_dst_n +
jmp loc_102C2A4  +
mov eax offset aError_ds_not_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_src_g +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_24 +
jmp loc_102C2A4  +
mov eax offset aError_ds_pdc_o +
jmp loc_102C2A4  +
mov eax offset aError_ds_cro_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ill_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_25 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nc_mu +
jmp loc_102C2A4  +
mov eax offset aError_ds_cr_im +
jmp loc_102C2A4  +
mov eax offset aError_ds_dst_d +
jmp loc_102C2A4  +
mov eax offset aError_ds_mis_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_26 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_27 +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_4 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_tr +
jmp loc_102C2A4  +
mov eax offset aError_ds_cou_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_cou_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_sam_i +
jmp loc_102C2A4  +
mov eax offset aError_ds_sensi +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_28 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ill_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nonsa +
jmp loc_102C2A4  +
mov eax offset aError_ds_sch_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_29 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ins_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ins_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_5 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_ne +
jmp loc_102C2A4  +
mov eax offset aError_ds_no__2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_globa +
jmp loc_102C2A4  +
mov eax offset aError_ds_glo_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_unive +
jmp loc_102C2A4  +
mov eax offset aError_ds_glo_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_loc_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_have_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_strin +
jmp loc_102C2A4  +
mov eax offset aError_ds_na_11 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dns_l +
jmp loc_102C2A4  +
mov eax offset aError_ds_cou_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_30 +
jmp loc_102C2A4  +
mov eax offset aError_ds_key_n +
jmp loc_102C2A4  +
mov eax offset aError_ds_wro_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_sam_n +
jmp loc_102C2A4  +
mov eax offset aError_ds_sam_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_31 +
jmp loc_102C2A4  +
mov eax offset aError_ds_init_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_pk +
jmp loc_102C2A4  +
mov eax offset aError_ds_sourc +
jmp loc_102C2A4  +
mov eax offset aError_ds_desti +
jmp loc_102C2A4  +
mov eax offset aError_ds_des_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_32 +
jmp loc_102C2A4  +
mov eax offset aError_ds_src_o +
jmp loc_102C2A4  +
mov eax offset aError_ds_src_s +
jmp loc_102C2A4  +
mov eax offset aError_ds_src_0 +
jmp loc_102C2A4  +
mov eax offset aError_sam_init +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_20 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_21 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_22 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_23 +
jmp loc_102C2A4  +
mov eax offset aError_ds_nc_st +
jmp loc_102C2A4  +
mov eax offset aError_ds_gc_re +
jmp loc_102C2A4  +
mov eax offset aError_ds_loc_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_fp +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_33 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no__3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_sou_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_34 +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_6 +
jmp loc_102C2A4  +
mov eax offset aError_ds_fil_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_unico +
jmp loc_102C2A4  +
mov eax offset aError_ds_machi +
jmp loc_102C2A4  +
mov eax offset aError_ds_must_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_src_d +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_35 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ini_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_sam_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_fores +
jmp loc_102C2A4  +
mov eax offset aError_ds_domai +
jmp loc_102C2A4  +
mov eax offset aError_ds_for_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dom_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_incom +
jmp loc_102C2A4  +
mov eax offset aError_ds_low_d +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_be +
jmp loc_102C2A4  +
mov eax offset aError_ds_not_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_na_12 +
jmp loc_102C2A4  +
mov eax offset aError_ds_mac_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_out_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_inc_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no__4 +
jmp loc_102C2A4  +
mov eax offset aError_ds_reser +
jmp loc_102C2A4  +
mov eax offset aError_ds_link_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_ag_ca +
jmp loc_102C2A4  +
mov eax offset aError_ds_modif +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_ob +
jmp loc_102C2A4  +
mov eax offset aError_ds_mod_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_mod_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_na_13 +
jmp loc_102C2A4  +
mov eax offset aError_not_su_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_36 +
jmp loc_102C2A4  +
mov eax offset aError_ds_cr__0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_threa +
jmp loc_102C2A4  +
mov eax offset aError_ds_not_c +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_37 +
jmp loc_102C2A4  +
mov eax offset aError_ds_sin_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ntdsc +
jmp loc_102C2A4  +
mov eax offset aError_ds_ntd_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_diffe +
jmp loc_102C2A4  +
mov eax offset aError_ds_drs_e +
jmp loc_102C2A4  +
mov eax offset aError_ds_rep_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_ms +
jmp loc_102C2A4  +
mov eax offset aError_ds_dup_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_exi_4 +
jmp loc_102C2A4  +
mov eax offset aError_ds_autho +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_7 +
jmp loc_102C2A4  +
mov eax offset aError_ds_remot +
jmp loc_102C2A4  +
mov eax offset aError_ds_cro_3 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_38 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_39 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dupli +
jmp loc_102C2A4  +
mov eax offset aError_ds_ins_2 +
jmp loc_102C2A4  +
mov eax offset aError_ds_group +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_40 +
jmp loc_102C2A4  +
mov eax offset aError_ds_ca_41 +
jmp loc_102C2A4  +
mov eax offset aError_ds_role_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_wko_c +
jmp loc_102C2A4  +
mov eax offset aError_ds_dom_1 +
jmp loc_102C2A4  +
mov eax offset aError_ds_exi_5 +
jmp loc_102C2A4  +
mov eax offset aError_ds_repl_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_disal +
jmp loc_102C2A4  +
mov eax offset aError_ds_ldap_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_24 +
jmp loc_102C2A4  +
mov eax offset aError_ds_polic +
jmp loc_102C2A4  +
mov eax offset aError_no_site_ +
jmp loc_102C2A4  +
mov eax offset aError_no_secre +
jmp loc_102C2A4  +
mov eax offset aError_no_writa +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_se +
jmp loc_102C2A4  +
mov eax offset aError_ds_no_nt +
jmp loc_102C2A4  +
mov eax offset aError_ds_non_a +
jmp loc_102C2A4  +
mov eax offset aError_ds_audit +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_8 +
jmp loc_102C2A4  +
mov eax offset aError_ds_inv_9 +
jmp loc_102C2A4  +
mov eax offset aError_ds_hie_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_25 +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_26 +
jmp loc_102C2A4  +
mov eax offset aError_ds_res_0 +
jmp loc_102C2A4  +
mov eax offset aError_ds_mapi_ +
jmp loc_102C2A4  +
mov eax offset aError_ds_dr_27 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_qm +
jmp loc_102C2A4  +
mov ecx 800735E8h +
cmp eax ecx +
jg loc_102B71C  +
jz loc_102B712  +
add eax 7FF8CD37h +
cmp eax 16h +
ja loc_102C283  +
jmp ds:off_102F3C4[eax*4]  +
mov eax offset aError_ipsec__0 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__1 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_mm +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__2 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__3 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__4 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__5 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_tr +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__6 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__7 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__8 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec__9 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_de +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_10 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_11 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_tu +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_12 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_13 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_14 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_15 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_16 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_17 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_18 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_ik +
jmp loc_102C2A4  +
mov ecx 80073A98h +
cmp eax ecx +
jg loc_102BFD1  +
jz loc_102BFC7  +
add eax 7FF8CA17h +
cmp eax 135h +
ja loc_102C283  +
movzx eax ds:byte_102F788[eax] +
jmp ds:off_102F420[eax*4]  +
mov eax offset aError_ipsec_19 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_20 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_21 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_22 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_23 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_24 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_25 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_26 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_27 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_28 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_29 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_30 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_31 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_32 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_33 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_34 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_35 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_36 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_37 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_38 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_39 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_40 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_41 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_42 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_43 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_44 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_45 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_46 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_47 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_48 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_49 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_50 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_51 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_52 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_53 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_54 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_55 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_56 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_57 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_58 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_59 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_60 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_61 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_62 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_63 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_64 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_65 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_66 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_67 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_68 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_69 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_70 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_71 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_72 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_73 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_74 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_75 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_76 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_77 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_78 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_79 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_80 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_81 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_82 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_83 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_84 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_85 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_86 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_87 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_88 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_89 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_90 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_91 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_92 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_93 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_94 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_95 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_96 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_97 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_98 +
jmp loc_102C2A4  +
mov eax offset asc_100934C +
jmp loc_102C2A4  +
mov eax offset asc_1009330 +
jmp loc_102C2A4  +
mov eax offset asc_1009308 +
jmp loc_102C2A4  +
mov eax offset asc_10092EC +
jmp loc_102C2A4  +
mov eax offset asc_10092D0 +
jmp loc_102C2A4  +
mov eax offset asc_10092A8 +
jmp loc_102C2A4  +
mov eax offset asc_100927C +
jmp loc_102C2A4  +
mov eax offset asc_1009254 +
jmp loc_102C2A4  +
mov eax offset asc_100922C +
jmp loc_102C2A4  +
mov eax offset asc_100920C +
jmp loc_102C2A4  +
mov eax offset asc_10091EC +
jmp loc_102C2A4  +
mov eax offset asc_10091CC +
jmp loc_102C2A4  +
mov eax offset asc_10091A8 +
jmp loc_102C2A4  +
mov eax offset asc_1009184 +
jmp loc_102C2A4  +
mov eax offset asc_1009168 +
jmp loc_102C2A4  +
mov eax offset asc_1009144 +
jmp loc_102C2A4  +
mov eax offset asc_1009124 +
jmp loc_102C2A4  +
mov eax offset asc_10090FC +
jmp loc_102C2A4  +
mov eax offset asc_10090D4 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_ba +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_sa +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_wr +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_re +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_in +
jmp loc_102C2A4  +
mov eax offset asc_1009028 +
jmp loc_102C2A4  +
mov eax offset aError_ipsec_cl +
jmp loc_102C2A4  +
mov eax offset aError_sxs_sect +
jmp loc_102C2A4  +
mov eax offset aError_sxs_cant +
jmp loc_102C2A4  +
mov eax offset aError_sxs_inva +
jmp loc_102C2A4  +
mov eax offset aError_sxs_asse +
jmp loc_102C2A4  +
mov eax offset aError_sxs_mani +
jmp loc_102C2A4  +
mov eax offset aError_sxs_ma_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_acti +
jmp loc_102C2A4  +
mov eax offset aError_sxs_key_ +
jmp loc_102C2A4  +
mov eax offset aError_sxs_vers +
jmp loc_102C2A4  +
mov eax offset aError_sxs_wron +
jmp loc_102C2A4  +
mov eax offset aError_sxs_thre +
jmp loc_102C2A4  +
mov eax offset aError_sxs_proc +
jmp loc_102C2A4  +
mov eax offset aError_sxs_unkn +
jmp loc_102C2A4  +
mov eax offset aError_sxs_un_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_in_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_root +
jmp loc_102C2A4  +
mov eax offset aError_sxs_leaf +
jmp loc_102C2A4  +
mov eax offset aError_sxs_in_1 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_ma_1 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_ma_2 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_priv +
jmp loc_102C2A4  +
mov eax offset aError_sxs_dupl +
jmp loc_102C2A4  +
mov eax offset aError_sxs_du_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_du_1 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_du_2 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_du_3 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_du_4 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_du_5 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_file +
jmp loc_102C2A4  +
mov eax offset aError_sxs_poli +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xml_ +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_1 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_2 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_3 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_4 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_5 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_6 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_7 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_8 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_xm_9 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_10 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_11 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_12 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_13 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_14 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_15 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_16 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_17 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_18 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_19 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_20 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_21 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_22 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_23 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_24 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_25 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_26 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_27 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_28 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_29 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_30 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_31 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_32 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_33 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_34 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_35 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_36 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_37 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_38 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_39 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_40 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_41 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_x_42 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_prot +
jmp loc_102C2A4  +
mov eax offset aError_sxs_pr_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_pr_1 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_untr +
jmp loc_102C2A4  +
mov eax offset aError_sxs_pr_2 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_miss +
jmp loc_102C2A4  +
mov eax offset aError_sxs_in_2 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_as_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_corr +
jmp loc_102C2A4  +
mov eax offset aError_sxs_co_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_earl +
jmp loc_102C2A4  +
mov eax offset aError_sxs_in_3 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_mult +
jmp loc_102C2A4  +
mov eax offset aError_sxs_pr_3 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_rele +
jmp loc_102C2A4  +
mov eax offset aError_sxs_syst +
jmp loc_102C2A4  +
mov eax offset aError_sxs_in_4 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_in_5 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_iden +
jmp loc_102C2A4  +
mov eax offset aError_sxs_id_0 +
jmp loc_102C2A4  +
mov eax offset aError_malforme +
jmp loc_102C2A4  +
mov eax offset aError_sxs_inco +
jmp loc_102C2A4  +
mov eax offset aError_unmapped +
jmp loc_102C2A4  +
mov eax offset aError_sxs_as_1 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_comp +
jmp loc_102C2A4  +
mov eax offset aError_advanced +
jmp loc_102C2A4  +
mov eax offset aError_xml_enco +
jmp loc_102C2A4  +
mov eax offset aError_sxs_ma_3 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_id_1 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_as_2 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_fi_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_ma_4 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_sett +
jmp loc_102C2A4  +
mov eax offset aError_sxs_tran +
jmp loc_102C2A4  +
mov eax offset aError_smi_prim +
jmp loc_102C2A4  +
mov eax offset aError_generi_0 +
jmp loc_102C2A4  +
mov eax offset aError_sxs_fi_1 +
jmp loc_102C2A4  +
mov eax offset aError_evt_inva +
jmp loc_102C2A4  +
mov ecx 80073B60h +
cmp eax ecx +
jg loc_102C212  +
jz loc_102C208  +
add eax 7FF8C567h +
cmp eax 6Bh +
ja loc_102C283  +
movzx eax ds:byte_102F994[eax] +
jmp ds:off_102F8C0[eax*4]  +
mov eax offset aError_evt_in_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_publ +
jmp loc_102C2A4  +
mov eax offset aError_evt_even +
jmp loc_102C2A4  +
mov eax offset aError_evt_in_1 +
jmp loc_102C2A4  +
mov eax offset aError_evt_in_2 +
jmp loc_102C2A4  +
mov eax offset aError_evt_chan +
jmp loc_102C2A4  +
mov eax offset aError_evt_malf +
jmp loc_102C2A4  +
mov eax offset aError_evt_subs +
jmp loc_102C2A4  +
mov eax offset aError_evt_conf +
jmp loc_102C2A4  +
mov eax offset aError_evt_quer +
jmp loc_102C2A4  +
mov eax offset aError_evt_qu_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_non_ +
jmp loc_102C2A4  +
mov eax offset aError_evt_filt +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_1 +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_2 +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_3 +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_4 +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_5 +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_6 +
jmp loc_102C2A4  +
mov eax offset aError_evt_in_3 +
jmp loc_102C2A4  +
mov eax offset aError_evt_in_4 +
jmp loc_102C2A4  +
mov eax offset aError_evt_in_5 +
jmp loc_102C2A4  +
mov eax offset aError_evt_ch_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_7 +
jmp loc_102C2A4  +
mov eax offset aError_evt_mess +
jmp loc_102C2A4  +
mov eax offset aError_evt_me_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_unre +
jmp loc_102C2A4  +
mov eax offset aError_evt_un_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_max_ +
jmp loc_102C2A4  +
mov eax offset aError_evt_ev_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_me_1 +
jmp loc_102C2A4  +
mov eax offset aError_evt_vers +
jmp loc_102C2A4  +
mov eax offset aError_evt_ve_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_cann +
jmp loc_102C2A4  +
mov eax offset aError_evt_pu_0 +
jmp loc_102C2A4  +
mov eax offset aError_evt_fi_8 +
jmp loc_102C2A4  +
mov eax offset aError_ec_subsc +
jmp loc_102C2A4  +
mov eax offset aError_ec_log_d +
jmp loc_102C2A4  +
mov eax offset aError_ec_circu +
jmp loc_102C2A4  +
mov eax offset aError_ec_creds +
jmp loc_102C2A4  +
mov eax offset aError_ec_cred_ +
jmp loc_102C2A4  +
mov eax offset aError_ec_no_ac +
jmp loc_102C2A4  +
mov eax offset aError_mui_file +
jmp loc_102C2A4  +
mov eax offset aError_mui_inva +
jmp loc_102C2A4  +
mov eax offset aError_mui_in_0 +
jmp loc_102C2A4  +
mov eax offset aError_mui_in_1 +
jmp loc_102C2A4  +
mov eax offset aError_mui_in_2 +
jmp loc_102C2A4  +
mov eax offset aError_mui_fi_0 +
jmp loc_102C2A4  +
mov eax offset aError_resou_16 +
jmp loc_102C2A4  +
mov eax offset aError_mui_intl +
jmp loc_102C2A4  +
mov eax offset aError_mui_in_3 +
jmp loc_102C2A4  +
mov eax offset aError_mca_inva +
jmp loc_102C2A4  +
mov ecx 80073B66h +
cmp eax ecx +
jg loc_102C26A  +
jz loc_102C263  +
cmp eax 80073B61h +
jz loc_102C25C  +
cmp eax 80073B62h +
jz loc_102C255  +
cmp eax 80073B63h +
jz loc_102C24E  +
cmp eax 80073B64h +
jz loc_102C247  +
cmp eax 80073B65h +
jnz loc_102C283  +
mov eax offset aError_mca_inte +
jmp loc_102C2A4  +
mov eax offset aError_mca_unsu +
jmp loc_102C2A4  +
mov eax offset aError_mca_mccs +
jmp loc_102C2A4  +
mov eax offset aError_mca_moni +
jmp loc_102C2A4  +
mov eax offset aError_mca_in_0 +
jmp loc_102C2A4  +
mov eax offset aError_mca_in_1 +
jmp loc_102C2A4  +
cmp eax 80073B67h +
jz loc_102C29F  +
cmp eax 80073B92h +
jz loc_102C298  +
cmp eax 80073BC3h +
jz loc_102C291  +
test eax eax +
jz loc_102C28A  +
mov eax offset aUnknownError +
jmp loc_102C2A4  +
mov eax offset aError_success +
jmp loc_102C2A4  +
mov eax offset aError_system_d +
jmp loc_102C2A4  +
mov eax offset aError_ambiguou +
jmp loc_102C2A4  +
mov eax offset aError_mca_un_0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 0C004B001h +
cmp eax ecx +
jg loc_102FAAF  +
jz loc_102FAA5  +
add eax 7FFB1EFFh +
cmp eax 0Ah +
ja loc_1030585  +
jmp ds:off_103058F[eax*4]  +
mov eax offset aSl_e_sfs_inval +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_inv_0 +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_inv_1 +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_bad_t +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_bad_0 +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_dupli +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_token +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_inv_2 +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_file_ +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_fil_0 +
jmp loc_103058A  +
mov eax offset aSl_e_sfs_inv_3 +
jmp loc_103058A  +
mov eax offset aSl_e_srv_inval +
jmp loc_103058A  +
mov ecx 0C004E01Ch +
cmp eax ecx +
jg loc_10300B3  +
jz loc_10300A9  +
mov ecx 0C004C756h +
cmp eax ecx +
jg loc_102FDD5  +
jz loc_102FDCB  +
mov ecx 0C004C00Fh +
cmp eax ecx +
jg loc_102FC68  +
jz loc_102FC5E  +
add ecx 0FFFFFFF4h +
cmp eax ecx +
jg loc_102FBDB  +
jz loc_102FBD1  +
mov ecx 0C004B008h +
cmp eax ecx +
jg loc_102FB78  +
jz loc_102FB6E  +
cmp eax 0C004B002h +
jz loc_102FB64  +
cmp eax 0C004B003h +
jz loc_102FB5A  +
cmp eax 0C004B004h +
jz loc_102FB50  +
cmp eax 0C004B005h +
jz loc_102FB46  +
cmp eax 0C004B006h +
jz loc_102FB3C  +
cmp eax 0C004B007h +
jnz loc_1030585  +
mov eax offset aSl_e_srv_serve +
jmp loc_103058A  +
mov eax offset aSl_e_srv_inv_0 +
jmp loc_103058A  +
mov eax offset aSl_e_srv_autho +
jmp loc_103058A  +
mov eax offset aSl_e_srv_inv_1 +
jmp loc_103058A  +
mov eax offset aSl_e_srv_inv_2 +
jmp loc_103058A  +
mov eax offset aSl_e_srv_inv_3 +
jmp loc_103058A  +
mov eax offset aSl_e_srv_inv_4 +
jmp loc_103058A  +
cmp eax 0C004B009h +
jz loc_102FBC7  +
cmp eax 0C004B011h +
jz loc_102FBBD  +
cmp eax 0C004B100h +
jz loc_102FBB3  +
cmp eax 0C004C001h +
jz loc_102FBA9  +
cmp eax 0C004C002h +
jnz loc_1030585  +
mov eax offset aSl_e_chpa_inva +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_prod +
jmp loc_103058A  +
mov eax offset aSl_e_srv_gener +
jmp loc_103058A  +
mov eax offset aSl_e_srv_clien +
jmp loc_103058A  +
mov eax offset aSl_e_srv_inv_5 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_pr_0 +
jmp loc_103058A  +
add eax 3FFB3FFCh +
cmp eax 0Ah +
ja loc_1030585  +
jmp ds:off_10305BB[eax*4]  +
mov eax offset aSl_e_chpa_in_0 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_bind +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_bi_0 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_unsu +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_maxi +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_actc +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_in_1 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_in_2 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_syst +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_in_3 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_in_4 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_in_5 +
jmp loc_103058A  +
mov ecx 0C004C04Fh +
cmp eax ecx +
jg loc_102FD37  +
jz loc_102FD2D  +
add eax 3FFB3FF0h +
cmp eax 23h +
ja loc_1030585  +
movzx eax ds:byte_1030627[eax] +
jmp ds:off_10305E7[eax*4]  +
mov eax offset aSl_e_chpa_in_6 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_in_7 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_netw +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_data +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_in_8 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_dmak +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_dm_0 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_reis +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_over +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_oem_ +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_resp +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_time +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_ti_0 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_ti_1 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_ti_2 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_no_r +
jmp loc_103058A  +
mov ecx 0C004C750h +
cmp eax ecx +
jg loc_102FD94  +
jz loc_102FD8A  +
cmp eax 0C004C050h +
jz loc_102FD80  +
cmp eax 0C004C401h +
jz loc_102FD76  +
cmp eax 0C004C600h +
jz loc_102FD6C  +
cmp eax 0C004C700h +
jnz loc_1030585  +
mov eax offset aSl_e_chpa_busi +
jmp loc_103058A  +
mov eax offset aSl_e_vga_non_g +
jmp loc_103058A  +
mov eax offset aSl_e_vga_non_0 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_gene +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_null +
jmp loc_103058A  +
cmp eax 0C004C751h +
jz loc_102FDC1  +
cmp eax 0C004C752h +
jz loc_102FDB7  +
cmp eax 0C004C755h +
jnz loc_1030585  +
mov eax offset aSl_e_chpa_fail +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_unkn +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_un_0 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_fa_0 +
jmp loc_103058A  +
mov ecx 0C004E004h +
cmp eax ecx +
jg loc_102FFAE  +
jz loc_102FFA4  +
mov ecx 0C004C804h +
cmp eax ecx +
jg loc_102FEDD  +
jz loc_102FED3  +
mov ecx 0C004C770h +
cmp eax ecx +
jg loc_102FE7A  +
jz loc_102FE70  +
cmp eax 0C004C757h +
jz loc_102FE66  +
cmp eax 0C004C758h +
jz loc_102FE5C  +
cmp eax 0C004C75Ah +
jz loc_102FE52  +
cmp eax 0C004C75Bh +
jz loc_102FE48  +
cmp eax 0C004C75Ch +
jz loc_102FE3E  +
cmp eax 0C004C764h +
jnz loc_1030585  +
mov eax offset aSl_e_chpa_un_1 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_fa_1 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_fa_2 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_fa_3 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_fa_4 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_fa_5 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_pr_1 +
jmp loc_103058A  +
cmp eax 0C004C780h +
jz loc_102FEC9  +
cmp eax 0C004C781h +
jz loc_102FEBF  +
cmp eax 0C004C801h +
jz loc_102FEB5  +
cmp eax 0C004C802h +
jz loc_102FEAB  +
cmp eax 0C004C803h +
jnz loc_1030585  +
mov eax offset aSl_e_chref_pro +
jmp loc_103058A  +
mov eax offset aSl_e_chref_exc +
jmp loc_103058A  +
mov eax offset aSl_e_chref_inv +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_fa_6 +
jmp loc_103058A  +
mov eax offset aSl_e_chpa_fa_7 +
jmp loc_103058A  +
mov eax offset aSl_e_chref_i_0 +
jmp loc_103058A  +
mov ecx 0C004C814h +
cmp eax ecx +
jg loc_102FF4B  +
jz loc_102FF41  +
cmp eax 0C004C805h +
jz loc_102FF37  +
cmp eax 0C004C810h +
jz loc_102FF2D  +
cmp eax 0C004C811h +
jz loc_102FF23  +
cmp eax 0C004C812h +
jz loc_102FF19  +
cmp eax 0C004C813h +
jnz loc_1030585  +
mov eax offset aSl_e_chref_p_0 +
jmp loc_103058A  +
mov eax offset aSl_e_chref_bin +
jmp loc_103058A  +
mov eax offset aSl_e_chref_can +
jmp loc_103058A  +
mov eax offset aSl_e_chref_i_1 +
jmp loc_103058A  +
mov eax offset aSl_e_chref_i_2 +
jmp loc_103058A  +
mov eax offset aSl_e_chref_p_1 +
jmp loc_103058A  +
cmp eax 0C004C815h +
jz loc_102FF9A  +
cmp eax 0C004C816h +
jz loc_102FF90  +
cmp eax 0C004E001h +
jz loc_102FF86  +
cmp eax 0C004E002h +
jz loc_102FF7C  +
cmp eax 0C004E003h +
jnz loc_1030585  +
mov eax offset aSl_e_evaluatio +
jmp loc_103058A  +
mov eax offset aSl_e_token_sto +
jmp loc_103058A  +
mov eax offset aSl_e_invalid_c +
jmp loc_103058A  +
mov eax offset aSl_e_chref_oem +
jmp loc_103058A  +
mov eax offset aSl_e_chref_p_2 +
jmp loc_103058A  +
mov eax offset aSl_e_not_evalu +
jmp loc_103058A  +
add eax 3FFB1FFBh +
cmp eax 16h +
ja loc_1030585  +
jmp ds:off_103064B[eax*4]  +
mov eax offset aSl_e_not_activ +
jmp loc_103058A  +
mov eax offset aSl_e_invalid_g +
jmp loc_103058A  +
mov eax offset aSl_e_toksto_to +
jmp loc_103058A  +
mov eax offset aSl_e_toksto_no +
jmp loc_103058A  +
mov eax offset aSl_e_toksto__0 +
jmp loc_103058A  +
mov eax offset aSl_e_toksto_al +
jmp loc_103058A  +
mov eax offset aSl_e_toksto__1 +
jmp loc_103058A  +
mov eax offset aSl_e_toksto_ca +
jmp loc_103058A  +
mov eax offset aSl_e_toksto__2 +
jmp loc_103058A  +
mov eax offset aSl_e_toksto__3 +
jmp loc_103058A  +
mov eax offset aSl_e_toksto__4 +
jmp loc_103058A  +
mov eax offset aSl_e_toksto_pr +
jmp loc_103058A  +
mov eax offset aSl_e_toksto_in +
jmp loc_103058A  +
mov eax offset aSl_e_toksto__5 +
jmp loc_103058A  +
mov eax offset aSl_e_toksto__6 +
jmp loc_103058A  +
mov eax offset aSl_e_toksto__7 +
jmp loc_103058A  +
mov eax offset aSl_e_eul_consu +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_inva +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_in_0 +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_in_1 +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_inte +
jmp loc_103058A  +
mov eax offset aSl_e_license_i +
jmp loc_103058A  +
mov eax offset aSl_e_hwid_erro +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_in_2 +
jmp loc_103058A  +
mov ecx 0C004F031h +
cmp eax ecx +
jg loc_103035C  +
jz loc_1030352  +
add ecx 0FFFFFFE7h +
cmp eax ecx +
jg loc_1030257  +
jz loc_103024D  +
mov ecx 0C004F00Ah +
cmp eax ecx +
jg loc_10301CA  +
jz loc_10301C0  +
add ecx 0FFFFFFFAh +
cmp eax ecx +
jg loc_1030167  +
jz loc_103015D  +
cmp eax 0C004E01Dh +
jz loc_1030153  +
cmp eax 0C004E01Eh +
jz loc_1030149  +
cmp eax 0C004E01Fh +
jz loc_103013F  +
cmp eax 0C004F001h +
jz loc_1030135  +
cmp eax 0C004F002h +
jz loc_103012B  +
cmp eax 0C004F003h +
jnz loc_1030585  +
mov eax offset aSl_e_use_licen +
jmp loc_103058A  +
mov eax offset aSl_e_right_not +
jmp loc_103058A  +
mov eax offset aSl_e_internal_ +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_in_3 +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_in_4 +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_in_5 +
jmp loc_103058A  +
mov eax offset aSl_e_mismatche +
jmp loc_103058A  +
cmp eax 0C004F005h +
jz loc_10301B6  +
cmp eax 0C004F006h +
jz loc_10301AC  +
cmp eax 0C004F007h +
jz loc_10301A2  +
cmp eax 0C004F008h +
jz loc_1030198  +
cmp eax 0C004F009h +
jnz loc_1030585  +
mov eax offset aSl_e_grace_tim +
jmp loc_103058A  +
mov eax offset aSl_e_spc_not_a +
jmp loc_103058A  +
mov eax offset aSl_e_rac_not_a +
jmp loc_103058A  +
mov eax offset aSl_e_external_ +
jmp loc_103058A  +
mov eax offset aSl_e_mismatc_0 +
jmp loc_103058A  +
mov eax offset aSl_e_mismatc_1 +
jmp loc_103058A  +
add eax 3FFB0FF5h +
cmp eax 0Ch +
ja loc_1030585  +
jmp ds:off_10306A7[eax*4]  +
mov eax offset aSl_e_no_pid_co +
jmp loc_103058A  +
mov eax offset aSl_e_mismatc_2 +
jmp loc_103058A  +
mov eax offset aSl_e_out_of_to +
jmp loc_103058A  +
mov eax offset aSl_e_invalid_p +
jmp loc_103058A  +
mov eax offset aSl_e_license_f +
jmp loc_103058A  +
mov eax offset aSl_e_value_not +
jmp loc_103058A  +
mov eax offset aSl_e_right_n_0 +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_not_ +
jmp loc_103058A  +
mov eax offset aSl_e_product_s +
jmp loc_103058A  +
mov eax offset aSl_e_not_suppo +
jmp loc_103058A  +
mov eax offset aSl_e_publishin +
jmp loc_103058A  +
mov eax offset aSl_e_license_s +
jmp loc_103058A  +
add eax 3FFB0FE7h +
cmp eax 17h +
ja loc_1030585  +
jmp ds:off_10306DB[eax*4]  +
mov eax offset aSl_e_invalid_e +
jmp loc_103058A  +
mov eax offset aSl_e_event_not +
jmp loc_103058A  +
mov eax offset aSl_e_event_alr +
jmp loc_103058A  +
mov eax offset aSl_e_decryptio +
jmp loc_103058A  +
mov eax offset aSl_e_license_0 +
jmp loc_103058A  +
mov eax offset aSl_e_datatype_ +
jmp loc_103058A  +
mov eax offset aSl_e_invalid_l +
jmp loc_103058A  +
mov eax offset aSl_e_invalid_0 +
jmp loc_103058A  +
mov eax offset aSl_e_validity_ +
jmp loc_103058A  +
mov eax offset aSl_e_license_a +
jmp loc_103058A  +
mov eax offset aSl_e_license_d +
jmp loc_103058A  +
mov eax offset aSl_e_windows_i +
jmp loc_103058A  +
mov eax offset aSl_e_lua_acces +
jmp loc_103058A  +
mov eax offset aSl_e_proxy_key +
jmp loc_103058A  +
mov eax offset aSl_e_tamper_de +
jmp loc_103058A  +
mov eax offset aSl_e_policy_ca +
jmp loc_103058A  +
mov eax offset aSl_e_invalid_r +
jmp loc_103058A  +
mov eax offset aSl_e_slp_not_s +
jmp loc_103058A  +
mov eax offset aSl_e_cidiid_in +
jmp loc_103058A  +
mov eax offset aSl_e_cidiid__0 +
jmp loc_103058A  +
mov eax offset aSl_e_cidiid_ve +
jmp loc_103058A  +
mov eax offset aSl_e_cidiid__1 +
jmp loc_103058A  +
mov eax offset aSl_e_cidiid_no +
jmp loc_103058A  +
mov eax offset aSl_e_cidiid_mi +
jmp loc_103058A  +
mov ecx 0C004F063h +
cmp eax ecx +
jg loc_1030485  +
jz loc_103047B  +
add eax 3FFB0FCEh +
cmp eax 30h +
ja loc_1030585  +
movzx eax ds:byte_103079F[eax] +
jmp ds:off_103073B[eax*4]  +
mov eax offset aSl_e_invalid_b +
jmp loc_103058A  +
mov eax offset aSl_e_product_k +
jmp loc_103058A  +
mov eax offset aSl_e_eul_not_a +
jmp loc_103058A  +
mov eax offset aSl_e_vl_not_wi +
jmp loc_103058A  +
mov eax offset aSl_e_vl_not_en +
jmp loc_103058A  +
mov eax offset aSl_e_vl_bindin +
jmp loc_103058A  +
mov eax offset aSl_e_vl_key_ma +
jmp loc_103058A  +
mov eax offset aSl_e_vl_key__0 +
jmp loc_103058A  +
mov eax offset aSl_e_proxy_pol +
jmp loc_103058A  +
mov eax offset aSl_e_cidiid__2 +
jmp loc_103058A  +
mov eax offset aSl_e_license_m +
jmp loc_103058A  +
mov eax offset aSl_e_invalid_1 +
jmp loc_103058A  +
mov eax offset aSl_e_blocked_p +
jmp loc_103058A  +
mov eax offset aSl_e_duplicate +
jmp loc_103058A  +
mov eax offset aSl_e_missing_o +
jmp loc_103058A  +
mov eax offset aSl_e_license_1 +
jmp loc_103058A  +
mov eax offset aSl_e_base_sku_ +
jmp loc_103058A  +
mov eax offset aSl_e_vl_machin +
jmp loc_103058A  +
mov eax offset aSl_e_slp_missi +
jmp loc_103058A  +
mov eax offset aSl_e_slp_mis_0 +
jmp loc_103058A  +
mov eax offset aSl_e_slp_bad_f +
jmp loc_103058A  +
mov eax offset aSl_e_invalid_2 +
jmp loc_103058A  +
mov eax offset aSl_e_pkey_in_6 +
jmp loc_103058A  +
mov eax offset aSl_e_issuance_ +
jmp loc_103058A  +
mov eax offset aSl_e_slp_oem_c +
jmp loc_103058A  +
mov ecx 0C004FC05h +
cmp eax ecx +
jg loc_1030523  +
jz loc_103051C  +
add eax 3FFB0F9Ch +
cmp eax 10h +
ja loc_1030585  +
jmp ds:off_10307D3[eax*4]  +
mov eax offset aSl_e_nongenuin +
jmp loc_103058A  +
mov eax offset aSl_e_dependent +
jmp loc_103058A  +
mov eax offset aSl_e_nongenu_0 +
jmp loc_103058A  +
mov eax offset aSl_e_mismatc_3 +
jmp loc_103058A  +
mov eax offset aSl_e_operation +
jmp loc_103058A  +
mov eax offset aSl_e_vl_key__1 +
jmp loc_103058A  +
mov eax offset aSl_e_vl_invali +
jmp loc_103058A  +
mov eax offset aSl_e_plugin_al +
jmp loc_103058A  +
mov eax offset aSl_e_plugin_in +
jmp loc_103058A  +
mov eax offset aSl_e_applicati +
jmp loc_103058A  +
mov eax offset aSl_e_applica_0 +
jmp loc_103058A  +
mov eax offset aSl_e_vl_bind_0 +
jmp loc_103058A  +
mov eax offset aSl_e_validit_0 +
jmp loc_103058A  +
mov ecx 4004F040h +
cmp eax ecx +
jg loc_1030585  +
jz loc_103057E  +
add eax 3FFB02FFh +
cmp eax 8 +
ja loc_1030585  +
jmp ds:off_1030817[eax*4]  +
mov eax offset aSl_e_cal_not_f +
jmp loc_103058A  +
mov eax offset aSl_e_free_cal_ +
jmp loc_103058A  +
mov eax offset aSl_e_cal_class +
jmp loc_103058A  +
mov eax offset aSl_e_cal_princ +
jmp loc_103058A  +
mov eax offset aSl_e_cal_pri_0 +
jmp loc_103058A  +
mov eax offset aSl_e_cal_store +
jmp loc_103058A  +
mov eax offset aSl_e_cal_sto_0 +
jmp loc_103058A  +
mov eax offset aSl_e_cal_pri_1 +
jmp loc_103058A  +
mov eax offset aSl_e_tamper_re +
jmp loc_103058A  +
mov eax offset aSl_e_vl_info_p +
jmp loc_103058A  +
mov eax offset aUnknownError +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 8E5E045Ah +
cmp eax ecx +
jg loc_1031153  +
jz loc_1031149  +
mov ecx 8E5E0244h +
cmp eax ecx +
jg loc_1030CE5  +
jz loc_1030CDB  +
add ecx 0FFFFFFCBh +
cmp eax ecx +
jg loc_1030B04  +
jz loc_1030AFA  +
mov ecx 8E5E0198h +
cmp eax ecx +
jg loc_1030A09  +
jz loc_10309FF  +
add ecx 0FFFFFFABh +
cmp eax ecx +
jg loc_1030975  +
jz loc_103096B  +
mov ecx 8E5E0067h +
cmp eax ecx +
jg loc_1030912  +
jz loc_1030908  +
cmp eax 8007000Eh +
jz loc_10308FE  +
cmp eax 8E5E0001h +
jz loc_10308F4  +
cmp eax 8E5E0064h +
jz loc_10308EA  +
cmp eax 8E5E0065h +
jz loc_10308E0  +
cmp eax 8E5E0066h +
jnz loc_1031B13  +
mov eax offset aJet_errfileclo +
jmp loc_1031B34  +
mov eax offset aJet_errrfsnota +
jmp loc_1031B34  +
mov eax offset aJet_errrfsfail +
jmp loc_1031B34  +
mov eax offset aJet_wrnnyi +
jmp loc_1031B34  +
mov eax offset aJet_erroutofme +
jmp loc_1031B34  +
mov eax offset aJet_erroutofth +
jmp loc_1031B34  +
cmp eax 8E5E0069h +
jz loc_1030961  +
cmp eax 8E5E006Ah +
jz loc_1030957  +
cmp eax 8E5E006Bh +
jz loc_103094D  +
cmp eax 8E5E00FFh +
jz loc_1030943  +
cmp eax 8E5E0142h +
jnz loc_1031B13  +
mov eax offset aJet_errpreviou +
jmp loc_1031B34  +
mov eax offset aJet_errdatabas +
jmp loc_1031B34  +
mov eax offset aJet_errinterna +
jmp loc_1031B34  +
mov eax offset aJet_errtaskdro +
jmp loc_1031B34  +
mov eax offset aJet_errtoomany +
jmp loc_1031B34  +
mov eax offset aJet_errpagebou +
jmp loc_1031B34  +
add eax 71A1FEBCh +
cmp eax 16h +
ja loc_1031B13  +
movzx eax ds:byte_1031B69[eax] +
jmp ds:off_1031B39[eax*4]  +
mov eax offset aJet_errkeyboun +
jmp loc_1031B34  +
mov eax offset aJet_errbadpage +
jmp loc_1031B34  +
mov eax offset aJet_errbadbook +
jmp loc_1031B34  +
mov eax offset aJet_errntsyste +
jmp loc_1031B34  +
mov eax offset aJet_errbadpare +
jmp loc_1031B34  +
mov eax offset aJet_errspavail +
jmp loc_1031B34  +
mov eax offset aJet_errspava_0 +
jmp loc_1031B34  +
mov eax offset aJet_errspava_1 +
jmp loc_1031B34  +
mov eax offset aJet_errspownex +
jmp loc_1031B34  +
mov eax offset aJet_errdbtimec +
jmp loc_1031B34  +
mov eax offset aJet_errkeytrun +
jmp loc_1031B34  +
mov eax offset aJet_errkeytoob +
jmp loc_1031B34  +
add eax 71A1FE0Ch +
cmp eax 1Ah +
ja loc_1031B13  +
jmp ds:off_1031B81[eax*4]  +
mov eax offset aJet_errinvalid +
jmp loc_1031B34  +
mov eax offset aJet_errlogfile +
jmp loc_1031B34  +
mov eax offset aJet_errnobacku +
jmp loc_1031B34  +
mov eax offset aJet_errbackupd +
jmp loc_1031B34  +
mov eax offset aJet_errbackupi +
jmp loc_1031B34  +
mov eax offset aJet_errrestore +
jmp loc_1031B34  +
mov eax offset aJet_errmissing +
jmp loc_1031B34  +
mov eax offset aJet_errlogwrit +
jmp loc_1031B34  +
mov eax offset aJet_errlogdisa +
jmp loc_1031B34  +
mov eax offset aJet_errcannotl +
jmp loc_1031B34  +
mov eax offset aJet_errloggene +
jmp loc_1031B34  +
mov eax offset aJet_errbadlogv +
jmp loc_1031B34  +
mov eax offset aJet_errinval_0 +
jmp loc_1031B34  +
mov eax offset aJet_errlogging +
jmp loc_1031B34  +
mov eax offset aJet_errlogbuff +
jmp loc_1031B34  +
mov eax offset aJet_errlogsequ +
jmp loc_1031B34  +
mov eax offset aJet_errnobac_0 +
jmp loc_1031B34  +
mov eax offset aJet_errinval_1 +
jmp loc_1031B34  +
mov eax offset aJet_errbackupn +
jmp loc_1031B34  +
mov eax offset aJet_errdeleteb +
jmp loc_1031B34  +
mov eax offset aJet_errmakebac +
jmp loc_1031B34  +
mov eax offset aJet_errinval_2 +
jmp loc_1031B34  +
mov eax offset aJet_errrecover +
jmp loc_1031B34  +
add eax 71A1FDF0h +
cmp eax 33h +
ja loc_1031B13  +
jmp ds:off_1031BED[eax*4]  +
mov eax offset aJet_errmissi_0 +
jmp loc_1031B34  +
mov eax offset aJet_errlogdisk +
jmp loc_1031B34  +
mov eax offset aJet_errbadlogs +
jmp loc_1031B34  +
mov eax offset aJet_errbaddbsi +
jmp loc_1031B34  +
mov eax offset aJet_errbadchec +
jmp loc_1031B34  +
mov eax offset aJet_errcheckpo +
jmp loc_1031B34  +
mov eax offset aJet_errmissi_1 +
jmp loc_1031B34  +
mov eax offset aJet_errbadpatc +
jmp loc_1031B34  +
mov eax offset aJet_errredoabr +
jmp loc_1031B34  +
mov eax offset aJet_errbadslvs +
jmp loc_1031B34  +
mov eax offset aJet_errpatchfi +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_0 +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_1 +
jmp loc_1031B34  +
mov eax offset aJet_errlogfi_0 +
jmp loc_1031B34  +
mov eax offset aJet_errcheck_0 +
jmp loc_1031B34  +
mov eax offset aJet_errrequire +
jmp loc_1031B34  +
mov eax offset aJet_errsoftrec +
jmp loc_1031B34  +
mov eax offset aJet_errlogfi_1 +
jmp loc_1031B34  +
mov eax offset aJet_errlogsect +
jmp loc_1031B34  +
mov eax offset aJet_errlogse_0 +
jmp loc_1031B34  +
mov eax offset aJet_errlogse_1 +
jmp loc_1031B34  +
mov eax offset aJet_errstreami +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_2 +
jmp loc_1031B34  +
mov eax offset aJet_errconsist +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_3 +
jmp loc_1031B34  +
mov eax offset aJet_errendingr +
jmp loc_1031B34  +
mov eax offset aJet_errstartin +
jmp loc_1031B34  +
mov eax offset aJet_errgivenlo +
jmp loc_1031B34  +
mov eax offset aJet_errgiven_0 +
jmp loc_1031B34  +
mov eax offset aJet_errmissi_2 +
jmp loc_1031B34  +
mov eax offset aJet_errmissi_3 +
jmp loc_1031B34  +
mov eax offset aJet_errbadback +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_4 +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_5 +
jmp loc_1031B34  +
mov eax offset aJet_errmissi_4 +
jmp loc_1031B34  +
mov eax offset aJet_errdbtimet +
jmp loc_1031B34  +
mov eax offset aJet_errdbtim_0 +
jmp loc_1031B34  +
mov eax offset aJet_errmissi_5 +
jmp loc_1031B34  +
mov eax offset aJet_errlogtorn +
jmp loc_1031B34  +
mov eax offset aJet_errlogto_0 +
jmp loc_1031B34  +
mov eax offset aJet_errlogcorr +
jmp loc_1031B34  +
mov eax offset aJet_errlogco_0 +
jmp loc_1031B34  +
mov eax offset aJet_errmustdis +
jmp loc_1031B34  +
mov eax offset aJet_errbadrest +
jmp loc_1031B34  +
mov eax offset aJet_errrecov_0 +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_6 +
jmp loc_1031B34  +
mov ecx 8E5E0414h +
cmp eax ecx +
jg loc_1030F6B  +
jz loc_1030F61  +
add ecx 0FFFFFFE0h +
cmp eax ecx +
jg loc_1030E70  +
jz loc_1030E66  +
mov ecx 8E5E0265h +
cmp eax ecx +
jg loc_1030DB0  +
jz loc_1030DA6  +
add eax 71A1FDBBh +
cmp eax 1Fh +
ja loc_1031B13  +
movzx eax ds:byte_1031CED[eax] +
jmp ds:off_1031CBD[eax*4]  +
mov eax offset aJet_errsoftr_0 +
jmp loc_1031B34  +
mov eax offset aJet_errcommitt +
jmp loc_1031B34  +
mov eax offset aJet_errsectors +
jmp loc_1031B34  +
mov eax offset aJet_errrecov_1 +
jmp loc_1031B34  +
mov eax offset aJet_errcommi_0 +
jmp loc_1031B34  +
mov eax offset aJet_errunicode +
jmp loc_1031B34  +
mov eax offset aJet_errunico_0 +
jmp loc_1031B34  +
mov eax offset aJet_errunico_1 +
jmp loc_1031B34  +
mov eax offset aJet_errexistin +
jmp loc_1031B34  +
mov eax offset aJet_errexist_0 +
jmp loc_1031B34  +
mov eax offset aJet_errlogread +
jmp loc_1031B34  +
mov eax offset aJet_errslvread +
jmp loc_1031B34  +
mov ecx 8E5E03E9h +
cmp eax ecx +
jg loc_1030E1E  +
jz loc_1030E14  +
cmp eax 8E5E0266h +
jz loc_1030E0A  +
cmp eax 8E5E0267h +
jz loc_1030E00  +
cmp eax 8E5E0268h +
jz loc_1030DF6  +
cmp eax 8E5E0384h +
jz loc_1030DEC  +
cmp eax 8E5E03E8h +
jnz loc_1031B13  +
mov eax offset aJet_errterminp +
jmp loc_1031B34  +
mov eax offset aJet_errinval_3 +
jmp loc_1031B34  +
mov eax offset aJet_errlogfi_2 +
jmp loc_1031B34  +
mov eax offset aJet_errresto_0 +
jmp loc_1031B34  +
mov eax offset aJet_errcheck_1 +
jmp loc_1031B34  +
mov eax offset aJet_errfeature +
jmp loc_1031B34  +
cmp eax 8E5E03EAh +
jz loc_1030E5C  +
cmp eax 8E5E03EBh +
jz loc_1030E52  +
cmp eax 8E5E03F0h +
jz loc_1030E48  +
cmp eax 8E5E03F2h +
jnz loc_1031B13  +
mov eax offset aJet_errinval_4 +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_7 +
jmp loc_1031B34  +
mov eax offset aJet_errinval_5 +
jmp loc_1031B34  +
mov eax offset aJet_errinval_6 +
jmp loc_1031B34  +
mov eax offset aJet_erroutofda +
jmp loc_1031B34  +
add eax 71A1FC0Bh +
cmp eax 1Eh +
ja loc_1031B13  +
jmp ds:off_1031D0D[eax*4]  +
mov eax offset aJet_erroutofcu +
jmp loc_1031B34  +
mov eax offset aJet_erroutofbu +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_0 +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_1 +
jmp loc_1031B34  +
mov eax offset aJet_errrecordd +
jmp loc_1031B34  +
mov eax offset aJet_errreadver +
jmp loc_1031B34  +
mov eax offset aJet_errpagenot +
jmp loc_1031B34  +
mov eax offset aJet_erroutoffi +
jmp loc_1031B34  +
mov eax offset aJet_errdiskio +
jmp loc_1031B34  +
mov eax offset aJet_errinval_7 +
jmp loc_1031B34  +
mov eax offset aJet_errinval_8 +
jmp loc_1031B34  +
mov eax offset aJet_errinval_9 +
jmp loc_1031B34  +
mov eax offset aJet_errrecordt +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_2 +
jmp loc_1031B34  +
mov eax offset aJet_errinva_10 +
jmp loc_1031B34  +
mov eax offset aJet_errnotinit +
jmp loc_1031B34  +
mov eax offset aJet_erralready +
jmp loc_1031B34  +
mov eax offset aJet_errinitinp +
jmp loc_1031B34  +
mov eax offset aJet_errfileacc +
jmp loc_1031B34  +
mov eax offset aJet_errbuffert +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_3 +
jmp loc_1031B34  +
mov eax offset aJet_errcontain +
jmp loc_1031B34  +
mov eax offset aJet_errinva_11 +
jmp loc_1031B34  +
add eax 71A1FBEBh +
cmp eax 44h +
ja loc_1031B13  +
movzx eax ds:byte_1031E41[eax] +
jmp ds:off_1031D89[eax*4]  +
mov eax offset aJet_errinva_12 +
jmp loc_1031B34  +
mov eax offset aJet_errcolumni +
jmp loc_1031B34  +
mov eax offset aJet_errinva_13 +
jmp loc_1031B34  +
mov eax offset aJet_errcolumnn +
jmp loc_1031B34  +
mov eax offset aJet_errindexin +
jmp loc_1031B34  +
mov eax offset aJet_errlinknot +
jmp loc_1031B34  +
mov eax offset aJet_errnullkey +
jmp loc_1031B34  +
mov eax offset aJet_errnotintr +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_4 +
jmp loc_1031B34  +
mov eax offset aJet_errinva_14 +
jmp loc_1031B34  +
mov eax offset aJet_errinva_15 +
jmp loc_1031B34  +
mov eax offset aJet_errinva_16 +
jmp loc_1031B34  +
mov eax offset aJet_errinva_17 +
jmp loc_1031B34  +
mov eax offset aJet_errversion +
jmp loc_1031B34  +
mov eax offset aJet_errversi_0 +
jmp loc_1031B34  +
mov eax offset aJet_errversi_1 +
jmp loc_1031B34  +
mov eax offset aJet_errcannoti +
jmp loc_1031B34  +
mov eax offset aJet_errrecordn +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_5 +
jmp loc_1031B34  +
mov eax offset aJet_erroutofob +
jmp loc_1031B34  +
mov eax offset aJet_erroutoflo +
jmp loc_1031B34  +
mov eax offset aJet_erroutofau +
jmp loc_1031B34  +
mov eax offset aJet_erroutofdb +
jmp loc_1031B34  +
mov eax offset aJet_erroutofse +
jmp loc_1031B34  +
mov eax offset aJet_errrunning +
jmp loc_1031B34  +
mov eax offset aJet_errrunni_0 +
jmp loc_1031B34  +
mov eax offset aJet_errsystemp +
jmp loc_1031B34  +
mov eax offset aJet_errsyste_0 +
jmp loc_1031B34  +
mov eax offset aJet_errlogfi_3 +
jmp loc_1031B34  +
mov eax offset aJet_errtemppat +
jmp loc_1031B34  +
mov eax offset aJet_errinstanc +
jmp loc_1031B34  +
mov eax offset aJet_errinsta_0 +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_8 +
jmp loc_1031B34  +
mov eax offset aJet_errinsta_1 +
jmp loc_1031B34  +
mov eax offset aJet_erroutof_0 +
jmp loc_1031B34  +
mov eax offset aJet_errwriteco +
jmp loc_1031B34  +
mov eax offset aJet_errtransto +
jmp loc_1031B34  +
mov eax offset aJet_errinva_18 +
jmp loc_1031B34  +
mov eax offset aJet_errwrite_0 +
jmp loc_1031B34  +
mov eax offset aJet_errintrans +
jmp loc_1031B34  +
mov eax offset aJet_errrollbac +
jmp loc_1031B34  +
mov eax offset aJet_errtransre +
jmp loc_1031B34  +
mov eax offset aJet_errsession +
jmp loc_1031B34  +
mov eax offset aJet_errrecor_0 +
jmp loc_1031B34  +
mov eax offset aJet_errcannotm +
jmp loc_1031B34  +
mov eax offset aJet_errsesidta +
jmp loc_1031B34  +
mov ecx 8E5E05F8h +
cmp eax ecx +
jg loc_103151C  +
jz loc_1031512  +
add eax 71A1FBA5h +
cmp eax 19Bh +
ja loc_1031B13  +
movzx eax ds:byte_1031FF9[eax] +
jmp ds:off_1031E89[eax*4]  +
mov eax offset aJet_errinva_19 +
jmp loc_1031B34  +
mov eax offset aJet_errdirtysh +
jmp loc_1031B34  +
mov eax offset aJet_errdatab_9 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_10 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_11 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_12 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_13 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_14 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_15 +
jmp loc_1031B34  +
mov eax offset aJet_errcannotd +
jmp loc_1031B34  +
mov eax offset aJet_errinva_20 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_16 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_17 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_18 +
jmp loc_1031B34  +
mov eax offset aJet_errpagesiz +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_6 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_19 +
jmp loc_1031B34  +
mov eax offset aJet_errattache +
jmp loc_1031B34  +
mov eax offset aJet_errdata_20 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_21 +
jmp loc_1031B34  +
mov eax offset aJet_errforcede +
jmp loc_1031B34  +
mov eax offset aJet_errcatalog +
jmp loc_1031B34  +
mov eax offset aJet_errpartial +
jmp loc_1031B34  +
mov eax offset aJet_errdata_22 +
jmp loc_1031B34  +
mov eax offset aJet_errdata_23 +
jmp loc_1031B34  +
mov eax offset aJet_errinva_21 +
jmp loc_1031B34  +
mov eax offset aJet_errtablelo +
jmp loc_1031B34  +
mov eax offset aJet_errtabledu +
jmp loc_1031B34  +
mov eax offset aJet_errtablein +
jmp loc_1031B34  +
mov eax offset aJet_errobjectn +
jmp loc_1031B34  +
mov eax offset aJet_errdensity +
jmp loc_1031B34  +
mov eax offset aJet_errtableno +
jmp loc_1031B34  +
mov eax offset aJet_errinva_22 +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_7 +
jmp loc_1031B34  +
mov eax offset aJet_errillegal +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_8 +
jmp loc_1031B34  +
mov eax offset aJet_errobjectd +
jmp loc_1031B34  +
mov eax offset aJet_errinva_23 +
jmp loc_1031B34  +
mov eax offset aJet_errcanno_0 +
jmp loc_1031B34  +
mov eax offset aJet_errcanno_1 +
jmp loc_1031B34  +
mov eax offset aJet_errcanno_2 +
jmp loc_1031B34  +
mov eax offset aJet_errexclusi +
jmp loc_1031B34  +
mov eax offset aJet_errfixeddd +
jmp loc_1031B34  +
mov eax offset aJet_errfixedin +
jmp loc_1031B34  +
mov eax offset aJet_errcannotn +
jmp loc_1031B34  +
mov eax offset aJet_errddlnoti +
jmp loc_1031B34  +
mov eax offset aJet_errinva_24 +
jmp loc_1031B34  +
mov eax offset aJet_errclientr +
jmp loc_1031B34  +
mov eax offset aJet_errcannota +
jmp loc_1031B34  +
mov eax offset aJet_errindexca +
jmp loc_1031B34  +
mov eax offset aJet_errindexha +
jmp loc_1031B34  +
mov eax offset aJet_errindexdu +
jmp loc_1031B34  +
mov eax offset aJet_errindexno +
jmp loc_1031B34  +
mov eax offset aJet_errindexmu +
jmp loc_1031B34  +
mov eax offset aJet_errindex_0 +
jmp loc_1031B34  +
mov eax offset aJet_errinva_25 +
jmp loc_1031B34  +
mov eax offset aJet_errtooma_9 +
jmp loc_1031B34  +
mov eax offset aJet_errmultiva +
jmp loc_1031B34  +
mov eax offset aJet_errindexbu +
jmp loc_1031B34  +
mov eax offset aJet_errprimary +
jmp loc_1031B34  +
mov eax offset aJet_errseconda +
jmp loc_1031B34  +
mov eax offset aJet_errinva_26 +
jmp loc_1031B34  +
mov eax offset aJet_errindextu +
jmp loc_1031B34  +
mov eax offset aJet_errindex_1 +
jmp loc_1031B34  +
mov eax offset aJet_errindex_2 +
jmp loc_1031B34  +
mov eax offset aJet_errindex_3 +
jmp loc_1031B34  +
mov eax offset aJet_errindex_4 +
jmp loc_1031B34  +
mov eax offset aJet_errindex_5 +
jmp loc_1031B34  +
mov eax offset aJet_errindex_6 +
jmp loc_1031B34  +
mov eax offset aJet_errindex_7 +
jmp loc_1031B34  +
mov eax offset aJet_errcolumnl +
jmp loc_1031B34  +
mov eax offset aJet_errcolum_0 +
jmp loc_1031B34  +
mov eax offset aJet_errcolumnd +
jmp loc_1031B34  +
mov eax offset aJet_errnullinv +
jmp loc_1031B34  +
mov eax offset aJet_errcolum_1 +
jmp loc_1031B34  +
mov eax offset aJet_errcolumnt +
jmp loc_1031B34  +
mov eax offset aJet_errcolum_2 +
jmp loc_1031B34  +
mov eax offset aJet_errcolum_3 +
jmp loc_1031B34  +
mov eax offset aJet_errmulti_0 +
jmp loc_1031B34  +
mov eax offset aJet_errcolumnr +
jmp loc_1031B34  +
mov eax offset aJet_errinva_27 +
jmp loc_1031B34  +
mov eax offset aJet_errtaggedn +
jmp loc_1031B34  +
mov eax offset aJet_errnocurre +
jmp loc_1031B34  +
mov eax offset aJet_errkeyisma +
jmp loc_1031B34  +
mov eax offset aJet_errbadcolu +
jmp loc_1031B34  +
mov eax offset aJet_errbaditag +
jmp loc_1031B34  +
mov eax offset aJet_errcolum_4 +
jmp loc_1031B34  +
mov eax offset aJet_errcannotb +
jmp loc_1031B34  +
mov eax offset aJet_errdefault +
jmp loc_1031B34  +
mov eax offset aJet_errmulti_1 +
jmp loc_1031B34  +
mov eax offset aJet_errlvcorru +
jmp loc_1031B34  +
mov eax offset aJet_errmulti_2 +
jmp loc_1031B34  +
mov ecx 8E5E0FA2h +
cmp eax ecx +
jg loc_1031847  +
jz loc_103183D  +
mov ecx 8E5E0772h +
cmp eax ecx +
jg loc_10316E4  +
jz loc_10316DA  +
mov ecx 8E5E0653h +
cmp eax ecx +
jg loc_1031624  +
jz loc_103161A  +
add ecx 0FFFFFFF1h +
cmp eax ecx +
jg loc_10315C1  +
jz loc_10315B7  +
cmp eax 8E5E05F9h +
jz loc_10315AD  +
cmp eax 8E5E05FAh +
jz loc_10315A3  +
cmp eax 8E5E0641h +
jz loc_1031599  +
cmp eax 8E5E0642h +
jz loc_103158F  +
cmp eax 8E5E0643h +
jnz loc_1031B13  +
mov eax offset aJet_errnocur_0 +
jmp loc_1031B34  +
mov eax offset aJet_errrecor_1 +
jmp loc_1031B34  +
mov eax offset aJet_errrecor_2 +
jmp loc_1031B34  +
mov eax offset aJet_errinva_28 +
jmp loc_1031B34  +
mov eax offset aJet_errderived +
jmp loc_1031B34  +
mov eax offset aJet_errrecordp +
jmp loc_1031B34  +
cmp eax 8E5E0645h +
jz loc_1031610  +
cmp eax 8E5E0647h +
jz loc_1031606  +
cmp eax 8E5E0648h +
jz loc_10315FC  +
cmp eax 8E5E0649h +
jz loc_10315F2  +
cmp eax 8E5E064Bh +
jnz loc_1031B13  +
mov eax offset aJet_errdatahas +
jmp loc_1031B34  +
mov eax offset aJet_errupdaten +
jmp loc_1031B34  +
mov eax offset aJet_errkeynotm +
jmp loc_1031B34  +
mov eax offset aJet_erralrea_0 +
jmp loc_1031B34  +
mov eax offset aJet_errkeydupl +
jmp loc_1031B34  +
mov eax offset aJet_errlanguag +
jmp loc_1031B34  +
mov ecx 8E5E0711h +
cmp eax ecx +
jg loc_1031692  +
jz loc_1031688  +
cmp eax 8E5E06A5h +
jz loc_103167E  +
cmp eax 8E5E06A6h +
jz loc_1031674  +
cmp eax 8E5E070Bh +
jz loc_103166A  +
cmp eax 8E5E070Dh +
jz loc_1031660  +
cmp eax 8E5E0710h +
jnz loc_1031B13  +
mov eax offset aJet_errdiskful +
jmp loc_1031B34  +
mov eax offset aJet_errtoom_10 +
jmp loc_1031B34  +
mov eax offset aJet_errtempfil +
jmp loc_1031B34  +
mov eax offset aJet_errinva_29 +
jmp loc_1031B34  +
mov eax offset aJet_errtoom_11 +
jmp loc_1031B34  +
mov eax offset aJet_errpermiss +
jmp loc_1031B34  +
cmp eax 8E5E0713h +
jz loc_10316D0  +
cmp eax 8E5E0714h +
jz loc_10316C6  +
cmp eax 8E5E073Ah +
jz loc_10316BC  +
cmp eax 8E5E073Ch +
jnz loc_1031B13  +
mov eax offset aJet_errlogco_1 +
jmp loc_1031B34  +
mov eax offset aJet_errafterin +
jmp loc_1031B34  +
mov eax offset aJet_errfileinv +
jmp loc_1031B34  +
mov eax offset aJet_errfilenot +
jmp loc_1031B34  +
mov eax offset aJet_errinva_30 +
jmp loc_1031B34  +
mov ecx 8E5E0835h +
cmp eax ecx +
jg loc_1031776  +
jz loc_103176C  +
add eax 71A1F88Dh +
cmp eax 0Ah +
ja loc_1031B13  +
jmp ds:off_1032195[eax*4]  +
mov eax offset aJet_erraccessd +
jmp loc_1031B34  +
mov eax offset aJet_errtoom_12 +
jmp loc_1031B34  +
mov eax offset aJet_errsessi_0 +
jmp loc_1031B34  +
mov eax offset aJet_errentrypo +
jmp loc_1031B34  +
mov eax offset aJet_errsessi_1 +
jmp loc_1031B34  +
mov eax offset aJet_errsessi_2 +
jmp loc_1031B34  +
mov eax offset aJet_errsessi_3 +
jmp loc_1031B34  +
mov eax offset aJet_errrecordf +
jmp loc_1031B34  +
mov eax offset aJet_erronedata +
jmp loc_1031B34  +
mov eax offset aJet_errrollb_0 +
jmp loc_1031B34  +
mov eax offset aJet_errcallbac +
jmp loc_1031B34  +
mov ecx 8E5E0964h +
cmp eax ecx +
jg loc_10317E4  +
jz loc_10317DA  +
cmp eax 8E5E0836h +
jz loc_10317D0  +
cmp eax 8E5E0837h +
jz loc_10317C6  +
cmp eax 8E5E0961h +
jz loc_10317BC  +
cmp eax 8E5E0962h +
jz loc_10317B2  +
cmp eax 8E5E0963h +
jnz loc_1031B13  +
mov eax offset aJet_errossnaps +
jmp loc_1031B34  +
mov eax offset aJet_errossna_0 +
jmp loc_1031B34  +
mov eax offset aJet_errossna_1 +
jmp loc_1031B34  +
mov eax offset aJet_errspacehi +
jmp loc_1031B34  +
mov eax offset aJet_errcallb_0 +
jmp loc_1031B34  +
mov eax offset aJet_errossna_2 +
jmp loc_1031B34  +
cmp eax 8E5E0BB8h +
jz loc_1031833  +
cmp eax 8E5E0BB9h +
jz loc_1031829  +
cmp eax 8E5E0BBAh +
jz loc_103181F  +
cmp eax 8E5E0FA0h +
jz loc_1031815  +
cmp eax 8E5E0FA1h +
jnz loc_1031B13  +
mov eax offset aJet_errfileiob +
jmp loc_1031B34  +
mov eax offset aJet_errfileios +
jmp loc_1031B34  +
mov eax offset aJet_errlsnotse +
jmp loc_1031B34  +
mov eax offset aJet_errlsalrea +
jmp loc_1031B34  +
mov eax offset aJet_errlscallb +
jmp loc_1031B34  +
mov eax offset aJet_errfileioa +
jmp loc_1031B34  +
mov ecx 0E5E041Fh +
cmp eax ecx +
jg loc_10319E5  +
jz loc_10319DB  +
mov ecx 0E5E022Fh +
cmp eax ecx +
jg loc_1031937  +
jz loc_103192D  +
mov ecx 0E5E005Ah +
cmp eax ecx +
jg loc_10318D8  +
jz loc_10318CE  +
cmp eax 8E5E0FA3h +
jz loc_10318C4  +
cmp eax 8E5E0FA4h +
jz loc_10318BA  +
cmp eax 8E5E0FA5h +
jz loc_10318B0  +
test eax eax +
jz loc_10318A6  +
cmp eax 0E5E0051h +
jnz loc_1031B13  +
mov eax offset aJet_errdata_24 +
jmp loc_1031B34  +
mov eax offset aJet_errsuccess +
jmp loc_1031B34  +
mov eax offset aJet_errfilecom +
jmp loc_1031B34  +
mov eax offset aJet_errfileiof +
jmp loc_1031B34  +
mov eax offset aJet_errfileior +
jmp loc_1031B34  +
mov eax offset aJet_errindex_8 +
jmp loc_1031B34  +
sub eax 0E5E0063h +
jz loc_1031923  +
sub eax 0DEh +
jz loc_1031919  +
sub eax 18h +
jz loc_103190F  +
sub eax 3Dh +
jz loc_1031905  +
sub eax 98h +
jnz loc_1031B13  +
mov eax offset aJet_wrnexistin +
jmp loc_1031B34  +
mov eax offset aJet_wrnseparat +
jmp loc_1031B34  +
mov eax offset aJet_wrnuniquek +
jmp loc_1031B34  +
mov eax offset aJet_wrnremaini +
jmp loc_1031B34  +
mov eax offset aJet_errindex_9 +
jmp loc_1031B34  +
mov eax offset aJet_wrnexist_0 +
jmp loc_1031B34  +
mov ecx 0E5E03ECh +
cmp eax ecx +
jg loc_103199C  +
jz loc_1031992  +
sub eax 0E5E0234h +
jz loc_1031988  +
sub eax 0Eh +
jz loc_103197E  +
sub eax 7 +
jz loc_1031974  +
dec eax  +
dec eax  +
jz loc_103196A  +
sub eax 8 +
jnz loc_1031B13  +
mov eax offset aJet_wrndatabas +
jmp loc_1031B34  +
mov eax offset aJet_wrncommitt +
jmp loc_1031B34  +
mov eax offset aJet_wrncommi_0 +
jmp loc_1031B34  +
mov eax offset aJet_wrntargeti +
jmp loc_1031B34  +
mov eax offset aJet_wrnskipthi +
jmp loc_1031B34  +
mov eax offset aJet_wrncolumnn +
jmp loc_1031B34  +
sub eax 0E5E03EEh +
jz loc_10319D1  +
dec eax  +
jz loc_10319C7  +
dec eax  +
dec eax  +
jz loc_10319BD  +
sub eax 1Eh +
jnz loc_1031B13  +
mov eax offset aJet_wrnseeknot +
jmp loc_1031B34  +
mov eax offset aJet_wrnsortove +
jmp loc_1031B34  +
mov eax offset aJet_wrndatab_0 +
jmp loc_1031B34  +
mov eax offset aJet_wrnbuffert +
jmp loc_1031B34  +
mov eax offset aJet_wrnnoerror +
jmp loc_1031B34  +
mov ecx 0E5E05FEh +
cmp eax ecx +
jg loc_1031AB3  +
jz loc_1031AA9  +
add ecx 0FFFFFF89h +
cmp eax ecx +
jg loc_1031A5C  +
jz loc_1031A52  +
sub eax 0E5E0422h +
jz loc_1031A48  +
sub eax 9 +
jz loc_1031A3E  +
dec eax  +
jz loc_1031A34  +
sub eax 0E9h +
jz loc_1031A2A  +
sub eax 1Ah +
jnz loc_1031B13  +
mov eax offset aJet_wrntablein +
jmp loc_1031B34  +
mov eax offset aJet_wrntableem +
jmp loc_1031B34  +
mov eax offset aJet_wrncolumns +
jmp loc_1031B34  +
mov eax offset aJet_wrnnowrite +
jmp loc_1031B34  +
mov eax offset aJet_wrnnoidlea +
jmp loc_1031B34  +
mov eax offset aJet_wrncorrupt +
jmp loc_1031B34  +
sub eax 0E5E05E8h +
jz loc_1031A9F  +
sub eax 8 +
jz loc_1031A95  +
sub eax 0Bh +
jz loc_1031A8B  +
dec eax  +
jz loc_1031A81  +
dec eax  +
jnz loc_1031B13  +
mov eax offset aJet_wrncolumnm +
jmp loc_1031B34  +
mov eax offset aJet_wrncolum_0 +
jmp loc_1031B34  +
mov eax offset aJet_wrncolum_1 +
jmp loc_1031B34  +
mov eax offset aJet_wrncopylon +
jmp loc_1031B34  +
mov eax offset aJet_wrncolum_2 +
jmp loc_1031B34  +
mov eax offset aJet_wrncolumnt +
jmp loc_1031B34  +
mov ecx 0E5E0715h +
cmp eax ecx +
jg loc_1031AFF  +
jz loc_1031AF8  +
sub eax 0E5E05FFh +
jz loc_1031AF1  +
dec eax  +
jz loc_1031AEA  +
dec eax  +
jz loc_1031AE3  +
sub eax 49h +
jz loc_1031ADC  +
sub eax 8 +
jnz loc_1031B13  +
mov eax offset aJet_wrnkeychan +
jmp loc_1031B34  +
mov eax offset aJet_wrndatahas +
jmp loc_1031B34  +
mov eax offset aJet_wrncolumnd +
jmp loc_1031B34  +
mov eax offset aJet_wrncolum_3 +
jmp loc_1031B34  +
mov eax offset aJet_wrncolumnp +
jmp loc_1031B34  +
mov eax offset aJet_wrnfileope +
jmp loc_1031B34  +
sub eax 0E5E0774h +
jz loc_1031B2F  +
sub eax 5Ch +
jz loc_1031B28  +
dec eax  +
jz loc_1031B21  +
sub eax 63h +
jz loc_1031B1A  +
mov eax offset aUnknownError +
jmp loc_1031B34  +
mov eax offset aJet_wrncallbac +
jmp loc_1031B34  +
mov eax offset aJet_wrndefragn +
jmp loc_1031B34  +
mov eax offset aJet_wrndefraga +
jmp loc_1031B34  +
mov eax offset aJet_wrnidleful +
pop ebp  +
retn 4  +
***
cmp cl 40h +
jnb loc_10321EA  +
cmp cl 20h +
jnb loc_10321E0  +
shld edx eax +
shl eax cl +
retn   +
***
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
***
xor eax eax +
xor edx edx +
retn   +
***
retf   +
***
retf   +
***
outs   +
imul esi fs:[edx+65h] +
retf   +
***
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 75717D01h  +
***
