mov edx [ebp+arg_20] +
push ecx  +
sub esp 10h +
push offset unk_479F60  +
pop ecx  +
call ds:_Mtx_init_in_situ  +
push offset loc_453B8B  +
call sub_44F154  +
add esp 0Ch +
retn   +
***
push offset sub_453B98  +
call sub_44F154  +
pop ecx  +
retn   +
***
push offset sub_453BA2  +
call sub_44F154  +
pop ecx  +
retn   +
***
push offset sub_453BAC  +
call sub_44F154  +
pop ecx  +
retn   +
***
mov eax dword_479798 +
push offset loc_453BC0  +
mov dword_4776C4 eax +
mov dword_479798 offset dword_4776C4 +
call sub_44F154  +
pop ecx  +
retn   +
***
call ds:_Mtx_init_in_situ  +
retn   +
***
call ds:_Mtx_init_in_situ  +
push offset sub_453BF5  +
call sub_44F154  +
add esp 0Ch +
retn   +
***
push offset sub_453C02  +
call sub_44F154  +
pop ecx  +
retn   +
***
mov eax dword_479798 +
mov eax dword_479798 +
mov eax dword_479798 +
call ds:_Mtx_init_in_situ  +
mov eax dword_479798 +
call ds:_Mtx_init_in_situ  +
push offset sub_453C23  +
call sub_44F154  +
add esp 0Ch +
retn   +
***
mov eax dword_479798 +
mov dword_47A290 eax +
mov dword_47A298 eax +
mov dword_47A29C eax +
retn   +
***
call sub_44F154  +
pop ecx  +
retn   +
***
push offset sub_453C52  +
call sub_44F154  +
pop ecx  +
retn   +
***
mov eax dword_479798 +
mov eax dword_479798 +
call ds:_Mtx_init_in_situ  +
mov eax dword_479798 +
mov eax dword_479798 +
mov eax dword_479798 +
mov eax dword_479798 +
mov eax dword_479798 +
pop ecx  +
mov eax dword_479798 +
mov eax dword_479798 +
call ds:_Mtx_init_in_situ  +
call ds:_Mtx_init_in_situ  +
mov eax dword_479798 +
mov dword_477A1C eax +
mov dword_479798 offset dword_477A1C +
retn   +
***
push offset sub_453CF0  +
call sub_44F154  +
pop ecx  +
retn   +
***
push offset loc_42E7E2  +
push offset sub_417886  +
push 2B3h  +
push 0Ch  +
push offset dword_47A360  +
call sub_44F3B2  +
push offset sub_453CFA  +
call sub_44F154  +
pop ecx  +
retn   +
***
call ds:_Mtx_init_in_situ  +
call ds:_Mtx_init_in_situ  +
call ds:_Mtx_init_in_situ  +
mov eax dword_479798 +
mov eax dword_479798 +
call ds:_Mtx_init_in_situ  +
call loc_43B647  +
call ds:_Mtx_init_in_situ  +
call loc_43CEA0  +
call sub_43DE0A  +
call ds:_Mtx_init_in_situ  +
mov eax dword_479798 +
mov dword_477AB8 eax +
mov dword_479798 offset dword_477AB8 +
retn   +
***
and dword_477AD0 0C0000000h +
xor eax eax +
push edi  +
push 8  +
pop ecx  +
mov edi offset unk_477AD4 +
stos   +
push offset nullsub_3  +
call sub_44F154  +
pop ecx  +
pop edi  +
retn   +
***
mov eax dword_477AF8 +
push edi  +
and eax 0C0000020h +
mov edi offset unk_477AFC +
or eax 20h +
mov dword_477AF8 eax +
xor eax eax +
push 8  +
pop ecx  +
stos   +
push offset nullsub_4  +
call sub_44F154  +
pop ecx  +
pop edi  +
retn   +
***
mov ecx offset unk_47918C +
call sub_44E9CF  +
push offset sub_453DC3  +
call sub_44F154  +
pop ecx  +
retn   +
***
push offset sub_453DCD  +
call sub_44F154  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_40178F  +
nop   +
push 1  +
mov eax [ebp+arg_0] +
push [ebp+arg_0]  +
lea ecx [ebp+arg_0] +
call sub_4017A3  +
push offset unk_473708  +
mov eax ecx +
push eax  +
call j__CxxThrowException  +
int 3  +
***
cmp ecx 50h +
ja loc_4017E3  +
movzx eax ds:byte_401814[ecx] +
jmp ds:off_401804[eax*4]  +
mov eax ecx +
retn   +
***
push 80004005h  +
call sub_4017B1  +
push 8007000Eh  +
call sub_4017B1  +
push 80070057h  +
call sub_4017B1  +
nop   +
nop   +
nop   +
push ecx  +
call ds:GetLastError  +
test ecx ecx +
retn   +
***
push ecx  +
call VariantClear  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset sub_450A5A  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
cmp dword ptr [ebx+4] 0 +
jz loc_401946  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_401928  +
mov edi [ebx+0Ch] +
test edi edi +
jz loc_40191A  +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov ecx [ebx+28h] +
test ecx ecx +
jz loc_401935  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea eax [ebx+10h] +
push eax  +
call ds:DeleteCriticalSection  +
mov dword ptr [ebx+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_401987  +
mov eax 80004003h +
pop ebx  +
pop ebp  +
retn 4  +
push esi  +
push edi  +
xor edi edi +
lea esi [ecx+28h] +
cmp [esi] edi +
jnz loc_4019AA  +
push esi  +
push offset riid  +
push 1  +
mov ecx offset rclsid +
call sub_4164DF  +
mov edi eax +
test edi edi +
js loc_4019B6  +
mov ecx [esi] +
mov [ebx] ecx +
mov ecx [esi] +
push ecx  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
xor eax eax +
push esi  +
push edi  +
lea edi [eax+27h] +
mov eax 80004005h +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_454E90 +
call loc_4018BE  +
test [ebp+arg_0] 1 +
jz loc_401A60  +
push esi  +
call ds:free  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_450A75  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [edi+8] +
test esi esi +
jz loc_401B21  +
cmp dword ptr [esi] 0 +
mov edi [edi] +
jz loc_401AFA  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_401B09  +
push offset aRegdeletekeytr  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_401B09  +
push 0  +
push dword ptr [esi]  +
push 0  +
push 0  +
push [ebp+lpSubKey]  +
push edi  +
call eax  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [esi+4] 0 +
jz loc_401B09  +
push [ebp+lpSubKey]  +
push edi  +
jmp loc_401B8E  +
mov eax 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp byte_4795A4 0 +
jnz loc_401B61  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_401B53  +
push offset aRegdeletekeyex  +
push eax  +
call ds:GetProcAddress  +
mov dword_4795A0 eax +
mov byte_4795A4 1 +
jmp loc_401B66  +
mov eax dword_4795A0 +
mov byte_4795A4 1 +
jmp loc_401B66  +
mov eax dword_4795A0 +
test eax eax +
jz loc_401B89  +
push 0  +
push dword ptr [edi+4]  +
push [ebp+lpSubKey]  +
push dword ptr [edi]  +
call eax  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push [ebp+lpSubKey]  +
push dword ptr [edi]  +
call RegDeleteKeyW  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset sub_450A90  +
mov eax large fs:0 +
push eax  +
sub esp 228h +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp-22Ch] eax +
mov ebx [eax+4] +
mov ecx [ebp+8] +
or ebx 2001Fh +
mov [ebp-228h] ecx +
mov dword ptr [ebp-21Ch] 0 +
mov dword ptr [ebp-218h] 0 +
mov dword ptr [ebp-214h] 0 +
lea edx [ebp-224h] +
mov dword ptr [ebp-224h] 0 +
push edx  +
push ebx  +
push 0  +
push ecx  +
push dword ptr [eax]  +
call RegOpenKeyExW  +
mov edi RegCloseKey +
mov esi eax +
mov eax [ebp-21Ch] +
test esi esi +
jnz loc_401D2E  +
xor esi esi +
test eax eax +
jz loc_401C4B  +
push eax  +
call edi  +
mov esi eax +
mov eax [ebp-224h] +
and ebx 300h +
mov [ebp-21Ch] eax +
mov [ebp-218h] ebx +
test esi esi +
jnz loc_401D2E  +
mov ebx RegEnumKeyExW +
lea ecx [ebp-234h] +
push ecx  +
push esi  +
push esi  +
push esi  +
lea ecx [ebp-220h] +
mov dword ptr [ebp-220h] 100h +
push ecx  +
lea ecx [ebp-210h] +
push ecx  +
push esi  +
push eax  +
call ebx  +
test eax eax +
jnz loc_401CE7  +
push 0FFFFFFFFh  +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
mov edx [edi+8] +
test edx edx +
jle loc_401F5A  +
test esi esi +
js loc_401F8D  +
cmp esi edx +
jge loc_401F8D  +
mov eax [edi] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_401F3B  +
push eax  +
call ebx  +
add esp 4 +
mov edx [edi+8] +
cmp esi edx +
jge loc_401F8D  +
mov eax [edi+4] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_401F55  +
push eax  +
call ebx  +
mov edx [edi+8] +
add esp 4 +
inc esi  +
cmp esi edx +
jl loc_401F24  +
mov eax [edi] +
test eax eax +
jz loc_401F6C  +
push eax  +
call ebx  +
add esp 4 +
mov dword ptr [edi] 0 +
mov eax [edi+4] +
test eax eax +
jz loc_401F80  +
push eax  +
call ebx  +
add esp 4 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov ecx 0C000008Ch +
call sub_401795  +
int 3  +
push dword ptr [ecx+8]  +
call CoTaskMemFree  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi ecx +
mov ecx [esi] +
lea edx [edi+1] +
add edx ecx +
cmp edx ecx +
jle loc_4020E6  +
cmp edx edi +
jle loc_4020E6  +
mov eax [esi+4] +
cmp edx eax +
jl loc_402015  +
lea edx [eax+eax] +
mov eax [esi+8] +
mov [ebp-4] edx +
lea eax [eax+ecx*2] +
add edi edi +
jnz loc_402048  +
xor ecx ecx +
jmp loc_4020A8  +
test eax eax +
jnz loc_402065  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
mov ecx 16h +
jmp loc_4020A8  +
push ebx  +
mov ebx [ebp+8] +
test ebx ebx +
jz loc_402080  +
cmp edx edi +
jb loc_402080  +
push edi  +
push ebx  +
push eax  +
call j_memcpy  +
add esp 0Ch +
xor ecx ecx +
jmp loc_4020A7  +
push edx  +
push 0  +
push eax  +
call j_memset  +
add esp 0Ch +
test ebx ebx +
jnz loc_4020C8  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
mov ecx 16h +
pop ebx  +
call loc_4017CD  +
mov eax [ebp+0Ch] +
add [esi] eax +
xor edx edx +
mov eax [esi+8] +
mov ecx [esi] +
pop edi  +
pop esi  +
mov [eax+ecx*2] dx +
lea eax [edx+1] +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp [ebp-4] edi +
jnb loc_4020A2  +
call ds:_errno  +
mov dword ptr [eax] 22h +
call ds:_invalid_parameter_noinfo  +
mov ecx 22h +
jmp loc_4020A7  +
***
mov eax 80004001h +
mov eax 1 +
mov dword ptr [ecx] offset off_454E74 +
push ebx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov edx [esi] +
movzx eax word ptr [edx] +
add eax 0FFFFFFF7h +
cmp eax 17h +
ja loc_402486  +
movzx eax ds:byte_402490[eax] +
jmp ds:off_402488[eax*4]  +
push edx  +
call CharNextW  +
mov [esi] eax +
jmp loc_402460  +
pop esi  +
retn   +
***
add [ecx] eax +
add [ecx] al +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [eax] eax +
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp-4] edi +
call sub_40245D  +
mov ebx [edi] +
xor edx edx +
movzx eax word ptr [ebx] +
cmp dx ax +
jz loc_40263C  +
mov esi [ebp+8] +
mov edx 27h +
mov [ebp+8] esi +
cmp dx ax +
jnz loc_4025BD  +
mov edi CharNextW +
push ebx  +
call edi  +
mov ebx [ebp-4] +
mov edx eax +
mov dword ptr [ebp-8] 0 +
mov [ebx] edx +
movzx ecx word ptr [edx] +
mov eax ecx +
cmp [ebp-8] cx +
jz loc_40259A  +
mov eax [ebx] +
xor ecx ecx +
cmp cx [eax] +
jz loc_40263C  +
xor eax eax +
mov [esi] ax +
push dword ptr [ebx]  +
call edi  +
pop edi  +
mov [ebx] eax +
xor eax eax +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ebp+8] +
mov [edi] eax +
add ecx 2000h +
mov edi eax +
mov [ebp-8] eax +
sub edi ebx +
sar edi 1 +
lea edx [edi+1] +
lea edx [esi+edx*2] +
cmp edx ecx +
jnb loc_40263C  +
test edi edi +
jle loc_40261A  +
sub ebx esi +
mov ax [ebx+esi] +
mov [esi] ax +
add esi 2 +
sub edi 1 +
jnz loc_402601  +
mov edi [ebp-4] +
mov eax [edi] +
mov [ebp-8] eax +
jmp loc_40261D  +
mov edi [ebp-4] +
movzx eax word ptr [eax] +
xor edx edx +
mov ebx [ebp-8] +
mov ecx eax +
cmp dx ax +
jz loc_40262E  +
jmp loc_4025BD  +
xor eax eax +
pop edi  +
mov [esi] ax +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
pop edi  +
pop esi  +
mov eax 80020009h +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
add [ecx] eax +
add [ecx] al +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [eax] eax +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450B5E  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax 2128h +
call sub_4508D6  +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov [ebp-211Ch] ecx +
mov eax [ebp+10h] +
mov edi [ebp+8] +
mov ebx [ebp+0Ch] +
mov [ebp-2138h] eax +
lea eax [ebp-2014h] +
push eax  +
mov [ebp-2128h] ecx +
mov [ebp-2124h] edi +
mov [ebp-2120h] ebx +
call loc_4024A8  +
test eax eax +
js loc_402B17  +
mov esi ds:lstrcmpiW +
lea eax [ebp-2014h] +
push offset aS  +
push eax  +
call esi  +
test eax eax +
jnz loc_4026FE  +
lea esi [eax+8] +
jmp loc_402747  +
push offset aM  +
lea eax [ebp-2014h] +
push eax  +
call esi  +
test eax eax +
jnz loc_402717  +
mov esi 4008h +
jmp loc_402747  +
push offset aD  +
lea eax [ebp-2014h] +
push eax  +
call esi  +
test eax eax +
jnz loc_40272E  +
lea esi [eax+13h] +
jmp loc_402747  +
push offset aB  +
lea eax [ebp-2014h] +
push eax  +
call esi  +
test eax eax +
jnz loc_402B12  +
lea esi [eax+11h] +
mov ecx [ebp-211Ch] +
call sub_40245D  +
mov ecx [ebp-211Ch] +
lea eax [ebp-2014h] +
push eax  +
call loc_4024A8  +
test eax eax +
js loc_402B17  +
cmp esi 13h +
ja loc_40298D  +
jz loc_402944  +
cmp esi 8 +
jz loc_402909  +
cmp esi 11h +
jnz loc_402AF6  +
lea ebx [ebp-2014h] +
lea ecx [ebx+2] +
mov ax [ebx] +
add ebx 2 +
test ax ax +
jnz loc_402796  +
sub ebx ecx +
sar ebx 1 +
mov [ebp-2134h] ebx +
mov [ebp-2130h] ebx +
test bl 1 +
jnz loc_402847  +
mov eax ebx +
mov dword ptr [ebp-2118h] 0 +
cdq   +
sub eax edx +
mov ecx eax +
sar ecx 1 +
mov [ebp-212Ch] ecx +
mov dword ptr [ebp-4] 3 +
mov byte ptr [ebp-4] 4 +
cmp ecx 100h +
jbe loc_40282C  +
push ecx  +
lea ecx [ebp-2118h] +
call sub_408AA7  +
mov eax [ebp-2118h] +
mov ecx [ebp-212Ch] +
jmp loc_402838  +
mov eax offset loc_402806 +
retn   +
***
mov ebx [ebp-2130h] +
mov edx [ebp-2128h] +
mov ecx [ebp-212Ch] +
mov eax [ebp-2118h] +
mov [ebp-2134h] ebx +
mov [ebp-211Ch] edx +
jmp loc_402838  +
lea eax [ebp-2114h] +
mov [ebp-2118h] eax +
test eax eax +
jnz loc_402851  +
lea ecx [ebp-2118h] +
call sub_408A9D  +
mov eax 80004005h +
jmp loc_402B17  +
push ecx  +
push 0  +
push eax  +
call j_memset  +
add esp 0Ch +
xor edi edi +
test ebx ebx +
jle loc_4028C1  +
mov esi [ebp-2134h] +
movzx ebx word ptr [ebp+edi*2-2014h] +
lea eax [ebx-30h] +
cmp eax 36h +
ja loc_40289D  +
movzx eax ds:byte_402B50[eax] +
jmp dword ptr ds:loc_402B40[eax*4]  +
sub bl 30h +
jmp loc_40289F  +
sub bl 37h +
jmp loc_40289F  +
sub bl 57h +
jmp loc_40289F  +
xor bl bl +
mov eax edi +
mov edx edi +
and eax 1 +
shr edx 1 +
add edx [ebp-2118h] +
mov ecx 4 +
shl eax 2 +
inc edi  +
sub ecx eax +
shl bl cl +
or [edx] bl +
cmp edi esi +
jl loc_402870  +
push dword ptr [ebp-212Ch]  +
mov eax [ebp-2124h] +
push dword ptr [ebp-2118h]  +
push 3  +
push 0  +
push dword ptr [ebp-2120h]  +
push dword ptr [eax]  +
call RegSetValueExW  +
mov edi eax +
lea eax [ebp-2114h] +
cmp [ebp-2118h] eax +
jz loc_402AE9  +
lea ecx [ebp-2118h] +
call sub_408A9D  +
jmp loc_402AE9  +
lea ecx [ebp-2014h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402912  +
sub ecx edx +
sar ecx 1 +
lea eax ds:2[ecx*2] +
push eax  +
lea eax [ebp-2014h] +
push eax  +
push 1  +
push 0  +
push ebx  +
push dword ptr [edi]  +
call RegSetValueExW  +
mov edi eax +
jmp loc_402AE9  +
lea eax [ebp-2130h] +
push eax  +
push 0  +
push 0  +
lea eax [ebp-2014h] +
push eax  +
call VarUI4FromStr  +
test eax eax +
js loc_402B17  +
mov eax [ebp-2130h] +
push 4  +
mov [ebp-2128h] eax +
lea eax [ebp-2128h] +
push eax  +
push 4  +
push 0  +
push ebx  +
push dword ptr [edi]  +
call RegSetValueExW  +
mov edi eax +
jmp loc_402AE9  +
cmp esi 4008h +
jnz loc_402AF6  +
lea ecx [ebp-2014h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4029A2  +
sub ecx edx +
mov dword ptr [ebp-2118h] 0 +
sar ecx 1 +
lea eax [ecx+2] +
mov ecx 2 +
mov dword ptr [ebp-4] 0 +
mul  ecx +
mov byte ptr [ebp-4] 1 +
test edx edx +
jnz loc_402B35  +
cmp eax 0FFFFFFFFh +
ja loc_402B35  +
cmp eax 100h +
jbe loc_4029F6  +
push eax  +
lea ecx [ebp-2118h] +
call sub_408AA7  +
jmp loc_402A16  +
lea esi [ebp-2114h] +
mov [ebp-2118h] esi +
jmp loc_402A1C  +
mov eax offset loc_402A0A +
retn   +
***
mov eax [ebp-2128h] +
mov [ebp-211Ch] eax +
mov esi [ebp-2118h] +
test esi esi +
jz loc_402ACF  +
cmp word ptr [ebp-2014h] 0 +
lea edi [ebp-2014h] +
jz loc_402A6C  +
mov ebx CharNextW +
xor eax eax +
mov [esi] eax +
mov esi [ebp-2118h] +
test esi esi +
jnz loc_402A7F  +
lea edi [eax+0Dh] +
jmp loc_402AD4  +
xor edi edi +
mov edx esi +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402A90  +
sub ecx ebx +
sar ecx 1 +
inc ecx  +
lea edx [edx+ecx*2] +
lea edi [edi+ecx*2] +
cmp ecx 1 +
jnz loc_402A83  +
mov eax [ebp-2124h] +
push edi  +
push esi  +
push 7  +
push 0  +
push dword ptr [ebp-2120h]  +
push dword ptr [eax]  +
call RegSetValueExW  +
mov esi [ebp-2118h] +
mov edi eax +
jmp loc_402AD4  +
mov edi 0Eh +
lea eax [ebp-2114h] +
cmp esi eax +
jz loc_402AE9  +
lea ecx [ebp-2118h] +
call sub_408A9D  +
test edi edi +
jz loc_402AF6  +
mov ecx edi +
call sub_40189D  +
jmp loc_402B17  +
push dword ptr [ebp-2138h]  +
mov ecx [ebp-211Ch] +
call loc_4024A8  +
xor ecx ecx +
test eax eax +
cmovs ecx eax +
mov eax ecx +
jmp loc_402B17  +
mov eax 80020009h +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 80070216h  +
call sub_4017B1  +
nop   +
mov gs [eax+0] +
inc eax  +
add [ebx-67FFBFD8h] dl +
sub [eax+0] al +
popf   +
sub [eax+0] al +
mov eax 2004h +
call sub_4508D6  +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp word ptr [edi] 3Dh +
jnz loc_402BDA  +
push edi  +
call loc_4024A8  +
test eax eax +
js loc_402BDC  +
mov ecx esi +
call sub_40245D  +
lea eax [ebp+var_2004] +
mov ecx esi +
push eax  +
call loc_4024A8  +
test eax eax +
js loc_402BDC  +
push edi  +
mov ecx esi +
call loc_4024A8  +
test eax eax +
js loc_402BDC  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450BA6  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebp+8] +
mov eax [ebp+0Ch] +
mov [ebp-70h] eax +
test esi esi +
jz loc_402F8E  +
test eax eax +
jz loc_402F8E  +
mov ecx esi +
mov dword ptr [eax] 0 +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402C3F  +
sub ecx edx +
mov dword ptr [ebp-64h] 0 +
sar ecx 1 +
lea eax [ecx+ecx] +
mov ecx 3E8h +
cmp eax 64h +
cmovl eax ecx +
mov ecx 2 +
mov [ebp-60h] eax +
mul  ecx +
test edx edx +
jnz loc_402C8B  +
cmp eax 0FFFFFFFFh +
ja loc_402C8B  +
push eax  +
call CoTaskMemAlloc  +
mov [ebp-5Ch] eax +
test eax eax +
jz loc_402C90  +
xor ecx ecx +
mov [eax] cx +
jmp loc_402C90  +
xor eax eax +
mov [ebp-5Ch] eax +
mov dword ptr [ebp-4] 0 +
test eax eax +
jnz loc_402CB0  +
push dword ptr [ebp-5Ch]  +
mov ebx 8007000Eh +
call CoTaskMemFree  +
mov eax ebx +
jmp loc_402F93  +
xor eax eax +
mov [ebx] esi +
mov ch byte_4795BC +
xor cl cl +
mov [ebp-53h] ch +
mov [ebp-68h] eax +
mov [ebp-52h] al +
mov [ebp-51h] cl +
cmp [esi] ax +
jz loc_402F70  +
mov edi CharNextW +
mov [ebp-58h] eax +
cmp ch 1 +
jnz loc_402DE3  +
test eax eax +
jnz loc_402D4A  +
push offset aHkcr  +
push esi  +
call ds:wcsstr  +
add esp 8 +
test eax eax +
jz loc_402D47  +
mov ecx [ebx] +
cmp eax ecx +
jnz loc_402D47  +
push ecx  +
call edi  +
push eax  +
mov [ebx] eax +
call edi  +
push eax  +
mov [ebx] eax +
call edi  +
push eax  +
mov [ebx] eax +
call edi  +
mov [ebx] eax +
mov dword ptr [ebp-6Ch] 0 +
push 1Fh  +
push offset aHkcuSoftwareCl  +
lea ecx [ebp-64h] +
mov byte ptr [ebp-4] 1 +
call loc_401FA2  +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_402C9B  +
mov byte ptr [ebp-52h] 1 +
mov cl [ebp-51h] +
mov eax [ebx] +
mov esi 27h +
cmp si [eax] +
jnz loc_402D8E  +
test cl cl +
jnz loc_402D63  +
mov byte ptr [ebp-51h] 1 +
jmp loc_402DE3  +
push eax  +
call edi  +
cmp si [eax] +
jz loc_402D72  +
xor al al +
mov [ebp-51h] al +
jmp loc_402D92  +
push dword ptr [ebx]  +
call edi  +
push 1  +
push eax  +
lea ecx [ebp-64h] +
mov [ebx] eax +
call loc_401FA2  +
test eax eax +
jz loc_402C9B  +
mov cl [ebp-51h] +
test cl cl +
jnz loc_402DE3  +
mov eax [ebx] +
mov ecx [ebp-58h] +
movzx eax word ptr [eax] +
cmp eax 7Bh +
lea edx [ecx+1] +
cmovnz edx ecx +
mov [ebp-68h] edx +
cmp eax 7Dh +
jnz loc_402DE3  +
add edx 0FFFFFFFFh +
mov [ebp-68h] edx +
jnz loc_402DE3  +
cmp byte ptr [ebp-52h] 1 +
jnz loc_402DE3  +
mov dword ptr [ebp-6Ch] 0 +
push 9  +
push offset asc_454AC8  +
lea ecx [ebp-64h] +
mov byte ptr [ebp-4] 2 +
call loc_401FA2  +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_402C9B  +
mov byte ptr [ebp-52h] 0 +
mov eax [ebx] +
cmp word ptr [eax] 25h +
jnz loc_402F46  +
push eax  +
call edi  +
mov edi eax +
mov [ebx] edi +
movzx eax word ptr [edi] +
cmp eax 25h +
jnz loc_402E37  +
push 1  +
push edi  +
lea ecx [ebp-64h] +
call loc_401FA2  +
test eax eax +
jz loc_402C9B  +
mov edi CharNextW +
push dword ptr [ebx]  +
call edi  +
mov esi eax +
mov [ebx] esi +
cmp word ptr [esi] 0 +
jz loc_402F70  +
mov eax [ebp-68h] +
mov cl [ebp-51h] +
mov ch [ebp-53h] +
jmp loc_402CE0  +
***
test edi edi +
jz loc_402E5B  +
test ax ax +
jz loc_402E5B  +
mov esi CharNextW +
cmp ax 25h +
jz loc_402E70  +
push edi  +
call esi  +
mov edi eax +
movzx ecx word ptr [edi] +
mov eax ecx +
test cx cx +
jnz loc_402E46  +
push dword ptr [ebp-5Ch]  +
mov ebx 80020009h +
call CoTaskMemFree  +
mov eax ebx +
jmp loc_402F93  +
test edi edi +
jz loc_402E5B  +
mov ecx [ebx] +
mov eax edi +
sub eax ecx +
sar eax 1 +
cmp eax 1Fh +
jg loc_402F5E  +
push eax  +
push ecx  +
lea eax [ebp-50h] +
push 20h  +
push eax  +
call ds:wcsncpy_s  +
add esp 10h +
mov ecx eax +
call loc_4017CD  +
mov eax [ebx+4] +
xor esi esi +
mov [ebp-58h] eax +
cmp [eax+0Ch] esi +
jle loc_402E5B  +
pop ds  +
add al 0 +
nop   +
mov eax [eax+4] +
lea ecx [ebp-50h] +
push ecx  +
push dword ptr [eax+esi*4]  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_402ECF  +
mov eax [ebp-58h] +
inc esi  +
cmp esi [eax+0Ch] +
jl loc_402EB0  +
jmp loc_402E5B  +
***
cmp esi 0FFFFFFFFh +
jz loc_402E5B  +
test esi esi +
js loc_402FB1  +
mov eax [ebp-58h] +
cmp esi [eax+0Ch] +
jge loc_402FB1  +
mov eax [eax+8] +
mov edx [eax+esi*4] +
test edx edx +
jz loc_402E5B  +
mov dword ptr [ebp-6Ch] 0 +
mov ecx edx +
mov byte ptr [ebp-4] 3 +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402F06  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-64h] +
call loc_401FA2  +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_402C9B  +
cmp [ebx] edi +
jz loc_402E11  +
push dword ptr [ebx]  +
call CharNextW  +
mov [ebx] eax +
cmp eax edi +
jnz loc_402F33  +
jmp loc_402E11  +
***
push 1  +
push eax  +
lea ecx [ebp-64h] +
call loc_401FA2  +
test eax eax +
jz loc_402C9B  +
jmp loc_402E17  +
***
push dword ptr [ebp-5Ch]  +
mov ebx 80004005h +
call CoTaskMemFree  +
mov eax ebx +
jmp loc_402F93  +
mov ecx [ebp-5Ch] +
xor ebx ebx +
mov eax [ebp-70h] +
mov dword ptr [ebp-5Ch] 0 +
push dword ptr [ebp-5Ch]  +
mov [eax] ecx +
call CoTaskMemFree  +
mov eax ebx +
jmp loc_402F93  +
mov eax 80004003h +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx 0C000008Ch +
call sub_401795  +
int 3  +
push ebp  +
mov ebp esp +
mov eax 200Ch +
call sub_4508D6  +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
mov ebx ecx +
mov dword ptr [ebp-2008h] 0 +
push esi  +
lea ecx [ebp-2008h] +
push ecx  +
push eax  +
mov ecx ebx +
call loc_402BEE  +
mov esi eax +
test esi esi +
js loc_403064  +
mov eax [ebp-2008h] +
xor ecx ecx +
mov [ebx] eax +
cmp cx [eax] +
jz loc_403056  +
push edi  +
push ds:off_454DD0[esi]  +
lea eax [ebp-2004h] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_403076  +
add esi 8 +
inc edi  +
cmp esi 70h +
jb loc_403030  +
mov esi 80020009h +
pop edi  +
push dword ptr [ebp-2008h]  +
call CoTaskMemFree  +
mov eax esi +
mov ecx [ebp-4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi ds:dword_454DD4[edi*8] +
test edi edi +
jz loc_403050  +
lea eax [ebp-2004h] +
mov ecx ebx +
push eax  +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403055  +
mov eax 7Bh +
cmp ax [ebp-2004h] +
jnz loc_403050  +
mov ecx [ebp+0Ch] +
push 0  +
test ecx ecx +
jz loc_4030EA  +
mov eax [ebx] +
push ecx  +
mov [ebp-200Ch] eax +
mov ecx ebx +
push edi  +
lea eax [ebp-2004h] +
push eax  +
call loc_40315C  +
mov esi eax +
test esi esi +
jns loc_403105  +
mov eax [ebp-200Ch] +
mov ecx ebx +
push 0  +
push 0  +
mov [ebx] eax +
lea eax [ebp-2004h] +
push edi  +
push eax  +
call loc_40315C  +
jmp loc_403055  +
***
push 0  +
push edi  +
lea eax [ebp-2004h] +
mov ecx ebx +
push eax  +
call loc_40315C  +
mov esi eax +
test esi esi +
js loc_403055  +
mov ecx [ebx] +
movzx edx word ptr [ecx] +
lea eax [edx-9] +
cmp eax 17h +
ja loc_40312B  +
movzx eax ds:byte_403144[eax] +
jmp ds:off_40313C[eax*4]  +
push ecx  +
call CharNextW  +
mov [ebx] eax +
jmp loc_403105  +
***
xor eax eax +
cmp ax dx +
jnz near ptr dword_403010  +
jmp loc_403055  +
***
add [ecx] eax +
add [ecx] al +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [ecx] eax +
add [eax] eax +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450BE1  +
mov eax large fs:0 +
push eax  +
mov eax 2244h +
call sub_4508D6  +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-2224h] ecx +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov [ebp-2220h] eax +
mov dword ptr [ebp-2230h] 0 +
mov dword ptr [ebp-222Ch] 0 +
mov dword ptr [ebp-2228h] 0 +
push ebx  +
mov dword ptr [ebp-4] 0 +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B3A  +
cmp word ptr [ebx] 7Dh +
jz loc_403B27  +
nop   +
push offset aDelete  +
push ebx  +
mov dword ptr [ebp-2234h] 1 +
call ds:lstrcmpiW  +
neg eax  +
push offset aForceremove  +
sbb edi edi +
push ebx  +
inc edi  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_403213  +
test edi edi +
jz loc_403315  +
mov ecx [ebp-2224h] +
push ebx  +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B27  +
cmp dword ptr [ebp+10h] 0 +
jz loc_403315  +
movzx ecx word ptr [ebx] +
mov eax ebx +
mov dword ptr [ebp-2244h] 0 +
mov dword ptr [ebp-223Ch] 0 +
test cx cx +
jz loc_403274  +
mov edx ecx +
cmp dx 5Ch +
jz loc_40326C  +
push eax  +
call CharNextW  +
movzx ecx word ptr [eax] +
mov edx ecx +
test cx cx +
jnz loc_403253  +
jmp loc_403274  +
test eax eax +
jnz loc_403B17  +
mov esi offset off_454E40 +
push dword ptr [esi]  +
push ebx  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_4032CE  +
add esi 4 +
cmp esi offset off_454E70 +
jl loc_403280  +
mov eax [ebp-2220h] +
lea ecx [ebp-2244h] +
push ebx  +
mov [ebp-2244h] eax +
mov dword ptr [ebp-2240h] 0 +
call loc_401BA7  +
mov dword ptr [ebp-2244h] 0 +
mov dword ptr [ebp-223Ch] 0 +
test edi edi +
jz loc_40330B  +
mov edi [ebp-2224h] +
mov ecx edi +
push ebx  +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B27  +
push ebx  +
mov ecx edi +
call sub_402B87  +
mov esi eax +
test esi esi +
js loc_403B27  +
mov dword ptr [ebp-2240h] 0 +
jmp loc_40375B  +
mov dword ptr [ebp-2240h] 0 +
push offset aNoremove  +
push ebx  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_403345  +
mov ecx [ebp-2224h] +
xor edi edi +
push ebx  +
mov [ebp-2234h] edi +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B27  +
jmp loc_40334B  +
mov edi [ebp-2234h] +
push offset aVal  +
push ebx  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_40349F  +
mov ecx [ebp-2224h] +
lea eax [ebp-2218h] +
push eax  +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B27  +
mov ecx [ebp-2224h] +
push ebx  +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B27  +
cmp word ptr [ebx] 3Dh +
jnz loc_403B17  +
cmp dword ptr [ebp+10h] 0 +
jz loc_40341C  +
mov eax [ebp-2220h] +
mov edi [ebp-2224h] +
mov ecx edi +
mov byte ptr [ebp-4] 1 +
mov [ebp-2250h] eax +
lea eax [ebp-2218h] +
push ebx  +
push eax  +
lea eax [ebp-2250h] +
mov dword ptr [ebp-224Ch] 0 +
push eax  +
mov dword ptr [ebp-2248h] 0 +
call loc_402670  +
mov esi eax +
mov dword ptr [ebp-2250h] 0 +
mov dword ptr [ebp-224Ch] 0 +
mov dword ptr [ebp-2248h] 0 +
test esi esi +
js loc_403B27  +
mov byte ptr [ebp-4] 0 +
mov dword ptr [ebp-224Ch] 0 +
jmp loc_40375B  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_403484  +
test edi edi +
jz loc_403484  +
xor edi edi +
lea eax [ebp-2234h] +
mov [ebp-2234h] edi +
push eax  +
push 20006h  +
push edi  +
push edi  +
push dword ptr [ebp-2220h]  +
call RegOpenKeyExW  +
test eax eax +
jnz loc_403452  +
mov edi [ebp-2234h] +
mov byte ptr [ebp-4] 0 +
test eax eax +
jnz loc_403B01  +
lea eax [ebp-2218h] +
push eax  +
push edi  +
call RegDeleteValueW  +
test eax eax +
jz loc_403479  +
cmp eax 2 +
jnz loc_403B01  +
test edi edi +
jz loc_403484  +
push edi  +
call RegCloseKey  +
mov ecx [ebp-2224h] +
push ebx  +
call sub_402B87  +
mov esi eax +
test esi esi +
js loc_403B27  +
jmp loc_403AF5  +
movzx ecx word ptr [ebx] +
mov eax ebx +
test cx cx +
jz loc_4034D1  +
mov edx ecx +
cmp dx 5Ch +
jz loc_4034C9  +
push eax  +
call CharNextW  +
movzx ecx word ptr [eax] +
mov edx ecx +
test cx cx +
jnz loc_4034B0  +
jmp loc_4034D1  +
test eax eax +
jnz loc_403B17  +
cmp dword ptr [ebp+10h] 0 +
jz loc_4037BC  +
mov byte ptr [ebp-4] 3 +
mov esi [ebp-2228h] +
mov dword ptr [ebp-221Ch] 0 +
test esi esi +
jz loc_403548  +
cmp dword ptr [esi] 0 +
jz loc_40353B  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jnz loc_40350E  +
mov eax 1 +
jmp loc_403563  +
push offset aRegopenkeytran  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_403541  +
push 0  +
push dword ptr [esi]  +
lea ecx [ebp-221Ch] +
push ecx  +
push 2001Fh  +
push 0  +
push ebx  +
push dword ptr [ebp-2220h]  +
call eax  +
jmp loc_403563  +
cmp dword ptr [esi+4] 0 +
jnz loc_403548  +
mov eax 1 +
jmp loc_403563  +
lea eax [ebp-221Ch] +
push eax  +
push 2001Fh  +
push 0  +
push ebx  +
push dword ptr [ebp-2220h]  +
call RegOpenKeyExW  +
test eax eax +
jnz loc_403590  +
mov ecx [ebp-2230h] +
test ecx ecx +
jz loc_403578  +
push ecx  +
call RegCloseKey  +
mov edi [ebp-221Ch] +
mov [ebp-2230h] edi +
mov dword ptr [ebp-222Ch] 0 +
jmp loc_403596  +
mov edi [ebp-2230h] +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_403722  +
mov byte ptr [ebp-4] 4 +
mov dword ptr [ebp-221Ch] 0 +
test esi esi +
jz loc_403609  +
cmp dword ptr [esi] 0 +
jz loc_4035FC  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jnz loc_4035CF  +
mov eax 1 +
jmp loc_403624  +
push offset aRegopenkeytran  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_403602  +
push 0  +
push dword ptr [esi]  +
lea ecx [ebp-221Ch] +
push ecx  +
push 20019h  +
push 0  +
push ebx  +
push dword ptr [ebp-2220h]  +
call eax  +
jmp loc_403624  +
cmp dword ptr [esi+4] 0 +
jnz loc_403609  +
mov eax 1 +
jmp loc_403624  +
lea eax [ebp-221Ch] +
push eax  +
push 20019h  +
push 0  +
push ebx  +
push dword ptr [ebp-2220h]  +
call RegOpenKeyExW  +
test eax eax +
jnz loc_403649  +
test edi edi +
jz loc_403633  +
push edi  +
call RegCloseKey  +
mov edi [ebp-221Ch] +
mov [ebp-2230h] edi +
mov dword ptr [ebp-222Ch] 0 +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_403722  +
mov byte ptr [ebp-4] 5 +
mov dword ptr [ebp-221Ch] 0 +
test esi esi +
jz loc_4036C9  +
cmp dword ptr [esi] 0 +
jz loc_4036BC  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jnz loc_403682  +
mov eax 1 +
jmp loc_4036F1  +
push offset aRegcreatekeytr  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_4036C2  +
push 0  +
push dword ptr [esi]  +
lea ecx [ebp-2238h] +
push ecx  +
lea ecx [ebp-221Ch] +
push ecx  +
push 0  +
push 2001Fh  +
push 0  +
push 0  +
push 0  +
push ebx  +
push dword ptr [ebp-2220h]  +
call eax  +
jmp loc_4036F1  +
cmp dword ptr [esi+4] 0 +
jnz loc_4036C9  +
mov eax 1 +
jmp loc_4036F1  +
lea eax [ebp-2238h] +
push eax  +
lea eax [ebp-221Ch] +
push eax  +
push 0  +
push 2001Fh  +
push 0  +
push 0  +
push 0  +
push ebx  +
push dword ptr [ebp-2220h]  +
call RegCreateKeyExW  +
test eax eax +
jnz loc_403716  +
test edi edi +
jz loc_403700  +
push edi  +
call RegCloseKey  +
mov ecx [ebp-221Ch] +
mov [ebp-2230h] ecx +
mov dword ptr [ebp-222Ch] 0 +
mov byte ptr [ebp-4] 0 +
test eax eax +
jnz loc_403B1E  +
mov edi [ebp-2224h] +
mov ecx edi +
push ebx  +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B27  +
cmp word ptr [ebx] 3Dh +
jnz loc_40375B  +
push ebx  +
push 0  +
lea eax [ebp-2230h] +
mov ecx edi +
push eax  +
call loc_402670  +
mov esi eax +
test esi esi +
js loc_403B27  +
cmp word ptr [ebx] 7Bh +
jnz loc_403AF5  +
mov ecx ebx +
lea edx [ecx+2] +
cmp dword ptr [ebp+14h] 0 +
jnz loc_403881  +
mov byte ptr [ebp-4] 6 +
mov esi [ebp-2228h] +
mov dword ptr [ebp-221Ch] 0 +
test esi esi +
jz loc_403831  +
cmp dword ptr [esi] 0 +
jz loc_403824  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jnz loc_4037F7  +
lea edi [eax+1] +
jmp loc_40384E  +
push offset aRegopenkeytran  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_40382A  +
push 0  +
push dword ptr [esi]  +
lea ecx [ebp-221Ch] +
push ecx  +
push 20019h  +
push 0  +
push ebx  +
push dword ptr [ebp-2220h]  +
call eax  +
jmp loc_40384C  +
cmp dword ptr [esi+4] 0 +
jnz loc_403831  +
mov edi 1 +
jmp loc_40384E  +
lea eax [ebp-221Ch] +
push eax  +
push 20019h  +
push 0  +
push ebx  +
push dword ptr [ebp-2220h]  +
call RegOpenKeyExW  +
mov edi eax +
test edi edi +
jnz loc_40387B  +
mov eax [ebp-2230h] +
test eax eax +
jz loc_403865  +
push eax  +
call RegCloseKey  +
mov edi eax +
mov eax [ebp-221Ch] +
mov [ebp-2230h] eax +
mov dword ptr [ebp-222Ch] 0 +
mov byte ptr [ebp-4] 0 +
jmp loc_403886  +
mov edi 2 +
test edi edi +
mov eax 1 +
push 0FFFFFFFFh  +
cmovz eax [ebp+14h] +
push ebx  +
mov [ebp-221Ch] eax +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call ds:wcsncpy_s  +
add esp 10h +
mov ecx eax +
call loc_4017CD  +
mov ecx [ebp-2224h] +
push ebx  +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B27  +
mov ecx [ebp-2224h] +
push ebx  +
call sub_402B87  +
mov esi eax +
test esi esi +
js loc_403B27  +
cmp word ptr [ebx] 7Bh +
jnz loc_403947  +
mov ecx ebx +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4038F0  +
sub ecx edx +
sar ecx 1 +
cmp ecx 1 +
jnz loc_403947  +
push dword ptr [ebp-221Ch]  +
mov ecx [ebp-2224h] +
push 0  +
push dword ptr [ebp-2230h]  +
push ebx  +
call loc_40315C  +
mov esi eax +
test esi esi +
jns loc_403931  +
cmp dword ptr [ebp-221Ch] 0 +
jz loc_403B27  +
mov ecx [ebp-2224h] +
push ebx  +
call loc_4024A8  +
mov esi eax +
test esi esi +
js loc_403B27  +
cmp edi 2 +
jz loc_403AF5  +
test edi edi +
jz loc_403965  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_403AF5  +
mov ecx edi +
jmp loc_403B20  +
cmp dword ptr [ebp+14h] 0 +
jz loc_4039F7  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp-221Ch] +
mov dword ptr [ebp-221Ch] 0 +
push eax  +
push 0  +
push 0  +
push 0  +
push dword ptr [ebp-2230h]  +
call RegQueryInfoKeyW  +
test eax eax +
jnz loc_4039F7  +
cmp [ebp-221Ch] eax +
jbe loc_4039F7  +
mov edi offset off_454E40 +
push dword ptr [edi]  +
lea eax [ebp-218h] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_403AF5  +
add edi 4 +
cmp edi offset off_454E70 +
jl loc_4039B1  +
cmp dword ptr [ebp-2234h] 0 +
jz loc_403AF5  +
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-2230h] +
call loc_401BA7  +
jmp loc_403AF5  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp-221Ch] +
mov dword ptr [ebp-221Ch] 0 +
push eax  +
push 0  +
push 0  +
push 0  +
push dword ptr [ebp-2230h]  +
call RegQueryInfoKeyW  +
test eax eax +
jz loc_403A30  +
xor edi edi +
jmp loc_403A3C  +
xor eax eax +
cmp eax [ebp-221Ch] +
sbb edi edi +
neg edi  +
mov ecx [ebp-2230h] +
xor eax eax +
test ecx ecx +
jz loc_403A57  +
push ecx  +
call RegCloseKey  +
xor ecx ecx +
mov [ebp-2230h] ecx +
mov dword ptr [ebp-222Ch] 0 +
test eax eax +
jnz loc_403B1E  +
cmp [ebp-2234h] eax +
jz loc_403AF5  +
test edi edi +
jnz loc_403AF5  +
mov byte ptr [ebp-4] 7 +
cmp byte_4795A4 al +
jnz loc_403ABC  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_403AAE  +
push offset aRegdeletekeyex  +
push eax  +
call ds:GetProcAddress  +
mov dword_4795A0 eax +
mov byte_4795A4 1 +
jmp loc_403AC1  +
mov eax dword_4795A0 +
mov byte_4795A4 1 +
jmp loc_403AC1  +
mov eax dword_4795A0 +
test eax eax +
jz loc_403ADA  +
push 0  +
push 0  +
lea ecx [ebp-218h] +
push ecx  +
push dword ptr [ebp-2220h]  +
call eax  +
jmp loc_403AED  +
lea eax [ebp-218h] +
push eax  +
push dword ptr [ebp-2220h]  +
call RegDeleteKeyW  +
mov byte ptr [ebp-4] 0 +
test eax eax +
jnz loc_403B1E  +
cmp word ptr [ebx] 7Dh +
jnz loc_4031E0  +
jmp loc_403B27  +
mov ecx eax +
call sub_40189D  +
mov esi eax +
test edi edi +
jz loc_403B27  +
push edi  +
call RegCloseKey  +
jmp loc_403B27  +
mov esi 80020009h +
jmp loc_403B27  +
mov ecx eax +
call sub_40189D  +
mov esi eax +
mov eax [ebp-2230h] +
test eax eax +
jz loc_403B38  +
push eax  +
call RegCloseKey  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450C09  +
mov eax large fs:0 +
push eax  +
sub esp 0A48h +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov ebx ecx +
mov esi [ebp+0Ch] +
mov dword ptr [ebp-0A54h] offset off_454E74 +
mov dword ptr [ebp-0A50h] 0 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test esi esi +
jz loc_403BEA  +
mov eax [esi] +
test eax eax +
jz loc_403BEA  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_403BE0  +
push ecx  +
push eax  +
lea ecx [ebp-0A50h] +
call sub_401D55  +
mov eax [esi+8] +
add esi 8 +
test eax eax +
jnz loc_403BBF  +
mov eax [ebx] +
lea ecx [ebp-0A54h] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+14h]  +
mov ebx eax +
test ebx ebx +
jns loc_403D35  +
mov edx [ebp-0A48h] +
xor esi esi +
mov edi ds:free +
mov ecx [ebp-0A50h] +
mov dword ptr [ebp-0A54h] offset off_454E74 +
test edx edx +
jle loc_403C79  +
test esi esi +
js loc_40409C  +
cmp esi edx +
jge loc_40409C  +
mov eax [ecx+esi*4] +
test eax eax +
jz loc_403C4D  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
cmp esi edx +
jge loc_40409C  +
mov eax [ebp-0A4Ch] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_403C74  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
inc esi  +
cmp esi edx +
jl loc_403C24  +
test ecx ecx +
jz loc_403C8B  +
push ecx  +
call edi  +
add esp 4 +
xor ecx ecx +
mov [ebp-0A50h] ecx +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_403CAB  +
push eax  +
call edi  +
mov ecx [ebp-0A50h] +
add esp 4 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test ecx ecx +
jz loc_403CC7  +
push ecx  +
call edi  +
add esp 4 +
xor ecx ecx +
mov [ebp-0A50h] ecx +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_403CE7  +
push eax  +
call edi  +
mov ecx [ebp-0A50h] +
add esp 4 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test ecx ecx +
jz loc_403D05  +
push ecx  +
call edi  +
add esp 4 +
mov dword ptr [ebp-0A50h] 0 +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_403D15  +
push eax  +
call edi  +
add esp 4 +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov esi hModule +
lea eax [ebp-218h] +
push 104h  +
push eax  +
push esi  +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_403DDD  +
call sub_40188A  +
mov edx [ebp-0A48h] +
xor esi esi +
mov edi ds:free +
mov ebx eax +
mov ecx [ebp-0A50h] +
mov dword ptr [ebp-0A54h] offset off_454E74 +
test edx edx +
jle loc_403C79  +
test esi esi +
js loc_40409C  +
cmp esi edx +
jge loc_40409C  +
mov eax [ecx+esi*4] +
test eax eax +
jz loc_403DAC  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
cmp esi edx +
jge loc_40409C  +
mov eax [ebp-0A4Ch] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_403DD3  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
inc esi  +
cmp esi edx +
jl loc_403D83  +
jmp loc_403C79  +
***
cmp eax 104h +
jnz loc_403F0B  +
mov edx [ebp-0A48h] +
xor esi esi +
mov edi ds:free +
mov ecx [ebp-0A50h] +
mov dword ptr [ebp-0A54h] offset off_454E74 +
test edx edx +
jle loc_403E65  +
pop ds  +
add al 0 +
nop   +
test esi esi +
js loc_40409C  +
cmp esi edx +
jge loc_40409C  +
mov eax [ecx+esi*4] +
test eax eax +
jz loc_403E39  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
cmp esi edx +
jge loc_40409C  +
mov eax [ebp-0A4Ch] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_403E60  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
inc esi  +
cmp esi edx +
jl loc_403E10  +
test ecx ecx +
jz loc_403E77  +
push ecx  +
call edi  +
add esp 4 +
xor ecx ecx +
mov [ebp-0A50h] ecx +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_403E97  +
push eax  +
call edi  +
mov ecx [ebp-0A50h] +
add esp 4 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test ecx ecx +
jz loc_403EB3  +
push ecx  +
call edi  +
add esp 4 +
xor ecx ecx +
mov [ebp-0A50h] ecx +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_403ED3  +
push eax  +
call edi  +
mov ecx [ebp-0A50h] +
add esp 4 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test ecx ecx +
jz loc_403EF1  +
push ecx  +
call edi  +
add esp 4 +
mov dword ptr [ebp-0A50h] 0 +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_403F01  +
push eax  +
call edi  +
add esp 4 +
mov eax 8007007Ah +
jmp loc_403D17  +
***
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-0A40h] +
call loc_4019BF  +
test esi esi +
jz loc_403F38  +
push 0  +
call ds:GetModuleHandleW  +
cmp esi eax +
jz loc_403F38  +
lea eax [ebp-0A40h] +
jmp loc_403FD0  +
mov esi 22h +
lea ecx [ebp-0A40h] +
mov [ebp-630h] si +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_403F50  +
sub ecx edx +
sar ecx 1 +
lea ecx ds:2[ecx*2] +
test ecx ecx +
jz loc_403F8D  +
cmp ecx 416h +
ja loc_40402B  +
push ecx  +
lea eax [ebp-0A40h] +
push eax  +
lea eax [ebp-62Eh] +
push eax  +
call j_memcpy  +
add esp 0Ch +
lea ecx [ebp-630h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_403F96  +
sub ecx edx +
sar ecx 1 +
mov [ebp+ecx*2-630h] si +
lea ecx ds:2[ecx*2] +
cmp ecx 418h +
jnb loc_404097  +
xor eax eax +
mov [ebp+ecx-630h] ax +
lea eax [ebp-630h] +
push eax  +
push offset aModule  +
lea ecx [ebp-0A50h] +
call sub_401D55  +
neg eax  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
test esi esi +
js loc_404085  +
lea eax [ebp-0A40h] +
push eax  +
push offset aModule_raw  +
lea ecx [ebp-0A50h] +
call sub_401D55  +
xor ecx ecx +
mov esi 8007000Eh +
test eax eax +
cmovnz esi ecx +
jz loc_404085  +
cmp [ebp+8] ecx +
jz loc_40404E  +
test edi edi +
jz loc_404080  +
push 1  +
jmp loc_404054  +
call ds:_errno  +
mov [eax] esi +
call ds:_invalid_parameter_noinfo  +
lea ecx [ebp-0A54h] +
call sub_402105  +
mov eax 80004005h +
jmp loc_403D17  +
***
test edi edi +
jz loc_404080  +
push 0  +
push offset aRegistry  +
push edi  +
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-0A54h] +
call sub_40223C  +
lea ecx [ebp-0A54h] +
mov esi eax +
call sub_402105  +
mov eax esi +
jmp loc_403D17  +
***
mov esi 80070057h +
lea ecx [ebp-0A54h] +
call sub_402105  +
mov eax esi +
jmp loc_403D17  +
***
call sub_44F2D9  +
mov ecx 0C000008Ch +
call sub_401795  +
int 3  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450C31  +
mov eax large fs:0 +
push eax  +
sub esp 0A4Ch +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-0A58h] edx +
mov edi ecx +
mov esi [ebp+0Ch] +
mov dword ptr [ebp-0A54h] offset off_454E74 +
mov dword ptr [ebp-0A50h] 0 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test esi esi +
jz loc_40413E  +
mov eax [esi] +
test eax eax +
jz loc_40413E  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_404134  +
push ecx  +
push eax  +
lea ecx [ebp-0A50h] +
call sub_401D55  +
mov eax [esi+8] +
add esi 8 +
test eax eax +
jnz loc_404120  +
mov eax [edi] +
lea ecx [ebp-0A54h] +
push ecx  +
mov ecx edi +
call dword ptr [eax+14h]  +
mov ebx eax +
test ebx ebx +
jns loc_404289  +
mov edx [ebp-0A48h] +
xor esi esi +
mov edi ds:free +
mov ecx [ebp-0A50h] +
mov dword ptr [ebp-0A54h] offset off_454E74 +
test edx edx +
jle loc_4041CD  +
test esi esi +
js loc_4045D0  +
cmp esi edx +
jge loc_4045D0  +
mov eax [ecx+esi*4] +
test eax eax +
jz loc_4041A1  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
cmp esi edx +
jge loc_4045D0  +
mov eax [ebp-0A4Ch] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_4041C8  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
inc esi  +
cmp esi edx +
jl loc_404178  +
test ecx ecx +
jz loc_4041DF  +
push ecx  +
call edi  +
add esp 4 +
xor ecx ecx +
mov [ebp-0A50h] ecx +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_4041FF  +
push eax  +
call edi  +
mov ecx [ebp-0A50h] +
add esp 4 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test ecx ecx +
jz loc_40421B  +
push ecx  +
call edi  +
add esp 4 +
xor ecx ecx +
mov [ebp-0A50h] ecx +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_40423B  +
push eax  +
call edi  +
mov ecx [ebp-0A50h] +
add esp 4 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test ecx ecx +
jz loc_404259  +
push ecx  +
call edi  +
add esp 4 +
mov dword ptr [ebp-0A50h] 0 +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_404269  +
push eax  +
call edi  +
add esp 4 +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov esi hModule +
lea eax [ebp-218h] +
push 104h  +
push eax  +
push esi  +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_404331  +
call sub_40188A  +
mov edx [ebp-0A48h] +
xor esi esi +
mov edi ds:free +
mov ebx eax +
mov ecx [ebp-0A50h] +
mov dword ptr [ebp-0A54h] offset off_454E74 +
test edx edx +
jle loc_4041CD  +
test esi esi +
js loc_4045D0  +
cmp esi edx +
jge loc_4045D0  +
mov eax [ecx+esi*4] +
test eax eax +
jz loc_404300  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
cmp esi edx +
jge loc_4045D0  +
mov eax [ebp-0A4Ch] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_404327  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
inc esi  +
cmp esi edx +
jl loc_4042D7  +
jmp loc_4041CD  +
***
cmp eax 104h +
jnz loc_40445B  +
mov edx [ebp-0A48h] +
xor esi esi +
mov edi ds:free +
mov ecx [ebp-0A50h] +
mov dword ptr [ebp-0A54h] offset off_454E74 +
test edx edx +
jle loc_4043B5  +
nop   +
test esi esi +
js loc_4045D0  +
cmp esi edx +
jge loc_4045D0  +
mov eax [ecx+esi*4] +
test eax eax +
jz loc_404389  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
cmp esi edx +
jge loc_4045D0  +
mov eax [ebp-0A4Ch] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_4043B0  +
push eax  +
call edi  +
mov edx [ebp-0A48h] +
add esp 4 +
mov ecx [ebp-0A50h] +
inc esi  +
cmp esi edx +
jl loc_404360  +
test ecx ecx +
jz loc_4043C7  +
push ecx  +
call edi  +
add esp 4 +
xor ecx ecx +
mov [ebp-0A50h] ecx +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_4043E7  +
push eax  +
call edi  +
mov ecx [ebp-0A50h] +
add esp 4 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test ecx ecx +
jz loc_404403  +
push ecx  +
call edi  +
add esp 4 +
xor ecx ecx +
mov [ebp-0A50h] ecx +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_404423  +
push eax  +
call edi  +
mov ecx [ebp-0A50h] +
add esp 4 +
mov dword ptr [ebp-0A4Ch] 0 +
mov dword ptr [ebp-0A48h] 0 +
test ecx ecx +
jz loc_404441  +
push ecx  +
call edi  +
add esp 4 +
mov dword ptr [ebp-0A50h] 0 +
mov eax [ebp-0A4Ch] +
test eax eax +
jz loc_404451  +
push eax  +
call edi  +
add esp 4 +
mov eax 8007007Ah +
jmp loc_40426B  +
***
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-0A40h] +
call loc_4019BF  +
test esi esi +
jz loc_404488  +
push 0  +
call ds:GetModuleHandleW  +
cmp esi eax +
jz loc_404488  +
lea eax [ebp-0A40h] +
jmp loc_404520  +
mov esi 22h +
lea ecx [ebp-0A40h] +
mov [ebp-630h] si +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4044A0  +
sub ecx edx +
sar ecx 1 +
lea ecx ds:2[ecx*2] +
test ecx ecx +
jz loc_4044DD  +
cmp ecx 416h +
ja loc_4045A8  +
push ecx  +
lea eax [ebp-0A40h] +
push eax  +
lea eax [ebp-62Eh] +
push eax  +
call j_memcpy  +
add esp 0Ch +
lea ecx [ebp-630h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4044E6  +
sub ecx edx +
sar ecx 1 +
mov [ebp+ecx*2-630h] si +
lea ecx ds:2[ecx*2] +
cmp ecx 418h +
jnb loc_4045CB  +
xor eax eax +
mov [ebp+ecx-630h] ax +
lea eax [ebp-630h] +
push eax  +
push offset aModule  +
lea ecx [ebp-0A50h] +
call sub_401D55  +
neg eax  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
test esi esi +
js loc_404596  +
lea eax [ebp-0A40h] +
push eax  +
push offset aModule_raw  +
lea ecx [ebp-0A50h] +
call sub_401D55  +
xor ecx ecx +
mov esi 8007000Eh +
test eax eax +
cmovnz esi ecx +
lea ecx [ebp-0A54h] +
jz loc_40459C  +
xor eax eax +
cmp [ebp+8] eax +
setnz al  +
push eax  +
mov eax [ebp-0A58h] +
push offset aRegistry  +
movzx eax ax +
push eax  +
lea eax [ebp-218h] +
push eax  +
call sub_40223C  +
mov esi eax +
lea ecx [ebp-0A54h] +
call sub_402105  +
mov eax esi +
jmp loc_40426B  +
***
call ds:_errno  +
mov [eax] esi +
call ds:_invalid_parameter_noinfo  +
lea ecx [ebp-0A54h] +
call sub_402105  +
mov eax 80004005h +
jmp loc_40426B  +
***
call sub_44F2D9  +
mov ecx 0C000008Ch +
call sub_401795  +
int 3  +
***
mov ecx [ecx] +
test ecx ecx +
jz locret_4045E7  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
sub esp 8 +
push 0FFFFFFFFh  +
push offset loc_450D08  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov [ebp+var_14] edi +
mov dword ptr [edi] offset off_477678 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
push 0  +
push 2  +
mov [ebp+var_4] 0 +
mov eax off_477678 +
push edi  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [edi+4] +
xor ecx ecx +
mov [eax] cx +
lea esi [edi+0Ch] +
mov [ebp+var_4] 1 +
mov [ebp+var_14] esi +
mov dword ptr [esi] offset off_477678 +
mov [esi+4] ecx +
mov [esi+8] ecx +
push ecx  +
push 2  +
mov byte ptr [ebp+var_4] 2 +
mov eax off_477678 +
push esi  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [esi+4] +
xor ecx ecx +
mov [eax] cx +
lea esi [edi+18h] +
mov [ebp+var_14] esi +
mov dword ptr [esi] offset off_477678 +
mov [esi+4] ecx +
mov [esi+8] ecx +
push ecx  +
push 2  +
mov byte ptr [ebp+var_4] 4 +
mov eax off_477678 +
push esi  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [esi+4] +
xor ecx ecx +
mov [eax] cx +
mov eax edi +
mov byte ptr [edi+24h] 1 +
mov dword ptr [edi+2Ch] 0Ch +
mov dword ptr [edi+30h] 7 +
mov dword ptr [edi+34h] 0FFFFFFFFh +
mov [edi+38h] ecx +
mov [edi+3Ch] ecx +
mov dword ptr [edi+28h] offset off_4590A8 +
mov [edi+40h] ecx +
mov [edi+44h] ecx +
mov dword ptr [edi+48h] 80000000h +
mov [edi+4Ch] ecx +
mov [edi+50h] ecx +
mov dword ptr [edi+54h] 80000000h +
mov [edi+58h] ecx +
mov [edi+5Ch] ecx +
mov dword ptr [edi+60h] 100h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450D64  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-14h] edi +
mov [ebp-10h] edi +
mov dword ptr [edi] offset off_477678 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
push 0  +
push 2  +
mov dword ptr [ebp-4] 0 +
mov eax off_477678 +
push edi  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [edi+4] +
xor ecx ecx +
mov [eax] cx +
lea esi [edi+0Ch] +
mov dword ptr [ebp-4] 1 +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_477678 +
mov [esi+4] ecx +
mov [esi+8] ecx +
push ecx  +
push 2  +
mov byte ptr [ebp-4] 2 +
mov eax off_477678 +
push esi  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [esi+4] +
xor ecx ecx +
mov [eax] cx +
lea ebx [edi+18h] +
mov [ebp-10h] ebx +
mov dword ptr [ebx] offset off_477678 +
mov [ebx+4] ecx +
mov [ebx+8] ecx +
push ecx  +
push 2  +
mov byte ptr [ebp-4] 4 +
mov eax off_477678 +
push ebx  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [ebx+4] +
xor ecx ecx +
mov [eax] cx +
mov byte ptr [edi+24h] 1 +
mov dword ptr [edi+2Ch] 0Ch +
mov dword ptr [edi+30h] 7 +
mov dword ptr [edi+34h] 0FFFFFFFFh +
mov [edi+38h] ecx +
mov [edi+3Ch] ecx +
mov dword ptr [edi+28h] offset off_4590A8 +
mov [edi+40h] ecx +
mov [edi+44h] ecx +
mov dword ptr [edi+48h] 80000000h +
mov [edi+4Ch] ecx +
mov [edi+50h] ecx +
mov dword ptr [edi+54h] 80000000h +
mov [edi+58h] ecx +
mov [edi+5Ch] ecx +
mov dword ptr [edi+60h] 100h +
push 24h  +
mov edx offset aC585900655d24d +
mov byte ptr [ebp-4] 6 +
mov ecx edi +
call sub_44BEDD  +
push 0  +
mov edx offset WindowName +
mov ecx esi +
call sub_44BEDD  +
push 26h  +
mov edx offset a14bed0b94da548 +
mov ecx ebx +
call sub_44BEDD  +
mov eax [edi+4] +
test eax eax +
jz loc_404F4A  +
mov esi eax +
lea ecx [esi+2] +
mov byte ptr [edi+24h] 1 +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450D7F  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ebp-4] 0 +
cmp dword_479FC8 2 +
jz loc_4053A4  +
push offset unk_479FCC  +
call ds:_Mtx_lock  +
add esp 4 +
test eax eax +
jz loc_404FB9  +
push eax  +
call ds:?_Throw_C_error@std@@YAXH@Z  +
cmp dword_479FC8 2 +
jz loc_405396  +
xorps xmm0 xmm0 +
mov dword_479FC8 1 +
movups oword ptr [ebp-4Ch] xmm0 +
mov dword ptr [ebp-3Ch] 0 +
mov dword ptr [ebp-38h] offset aOffice +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 2 +
mov dword ptr [ebp-2Ch] 0FFFFFFFEh +
mov byte ptr [ebp-4] 1 +
mov edi dword_47979C +
test edi edi +
jnz loc_4052E2  +
mov ebx ds:malloc +
push 8  +
call ebx  +
mov edi eax +
add esp 4 +
mov [ebp-10h] edi +
test edi edi +
jz loc_4053B6  +
push 18h  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
call ebx  +
add esp 4 +
test eax eax +
jnz loc_405044  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [edi] eax +
mov eax dword_479798 +
mov dword_47979C edi +
mov [ebp-14h] eax +
test eax eax +
jz loc_4052E2  +
lea esi [eax+4] +
mov ecx edi +
push esi  +
lea eax [ebp-28h] +
push eax  +
call sub_4142D4  +
mov ebx [ebp-20h] +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_40508D  +
mov eax [esi] +
cmp eax [ebx+10h] +
jnb loc_4052CF  +
cmp dword ptr [edi+4] 0AAAAAAAh +
jz loc_4053C7  +
mov edi [edi] +
push 18h  +
call ds:malloc  +
mov ebx eax +
add esp 4 +
mov [ebp-18h] ebx +
test ebx ebx +
jz loc_40503E  +
mov ecx [esi] +
mov eax [ebp-10h] +
mov [ebx+10h] ecx +
mov dword ptr [ebx+14h] 0 +
mov [ebx] edi +
mov [ebx+4] edi +
mov [ebx+8] edi +
mov word ptr [ebx+0Ch] 0 +
mov ecx [eax] +
inc dword ptr [eax+4]  +
mov eax [ebp-28h] +
mov [ebp-1Ch] ecx +
mov [ebx+4] eax +
cmp eax ecx +
jnz loc_4050F0  +
mov [ecx] ebx +
mov [ecx+4] ebx +
mov [ecx+8] ebx +
mov byte ptr [ebx+0Ch] 1 +
jmp loc_4052C6  +
cmp dword ptr [ebp-24h] 0 +
jnz loc_405103  +
mov [eax+8] ebx +
cmp eax [ecx+8] +
jnz loc_40510B  +
mov [ecx+8] ebx +
jmp loc_40510B  +
mov [eax] ebx +
cmp eax [ecx] +
jnz loc_40510B  +
mov [ecx] ebx +
mov eax [ebx+4] +
mov edx ebx +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_4052BF  +
mov eax [edx+4] +
lea esi [edx+4] +
mov ebx [eax+4] +
lea edi [eax+4] +
mov ecx [ebx] +
cmp eax ecx +
jnz loc_4051EA  +
mov ecx [ebx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_4051F0  +
mov ecx [eax+8] +
cmp edx ecx +
jnz loc_40518B  +
mov edx eax +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_405156  +
mov [eax+4] edx +
mov ebx [ebp-10h] +
mov eax [edi] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_405170  +
mov [eax+4] ecx +
mov esi edi +
mov [ecx] edx +
mov [edi] ecx +
jmp loc_405190  +
mov eax [edi] +
cmp edx [eax] +
jnz loc_405180  +
mov [eax] ecx +
mov esi edi +
mov [ecx] edx +
mov [edi] ecx +
jmp loc_405190  +
mov [eax+8] ecx +
mov esi edi +
mov [ecx] edx +
mov [edi] ecx +
jmp loc_405190  +
mov ebx [ebp-10h] +
mov ecx eax +
mov byte ptr [ecx+0Ch] 1 +
mov eax [esi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [esi] +
mov ecx [eax+4] +
mov esi [ecx] +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4051B5  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebx] +
cmp ecx [eax+4] +
jnz loc_4051CD  +
mov [eax+4] esi +
mov [esi+8] ecx +
jmp loc_4052A9  +
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_4051E0  +
mov [eax+8] esi +
mov [esi+8] ecx +
jmp loc_4052A9  +
mov [eax] esi +
mov [esi+8] ecx +
jmp loc_4052A9  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_40520B  +
mov byte ptr [eax+0Ch] 1 +
mov byte ptr [ecx+0Ch] 1 +
mov eax [esi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [esi] +
mov edx [eax+4] +
jmp loc_4052AC  +
mov ecx [eax] +
cmp edx ecx +
jnz loc_40525F  +
mov edx eax +
mov eax ecx +
mov ecx [eax+8] +
mov [edx] ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_405226  +
mov [ecx+4] edx +
mov ebx [ebp-10h] +
mov ecx [edi] +
mov [eax+4] ecx +
mov ecx [ebx] +
cmp edx [ecx+4] +
jnz loc_405241  +
mov [ecx+4] eax +
mov esi edi +
mov [eax+8] edx +
mov [edi] eax +
jmp loc_405262  +
mov ecx [edi] +
cmp edx [ecx+8] +
jnz loc_405254  +
mov [ecx+8] eax +
mov esi edi +
mov [eax+8] edx +
mov [edi] eax +
jmp loc_405262  +
mov [ecx] eax +
mov esi edi +
mov [eax+8] edx +
mov [edi] eax +
jmp loc_405262  +
mov ebx [ebp-10h] +
mov byte ptr [eax+0Ch] 1 +
mov eax [esi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [esi] +
mov ecx [eax+4] +
mov esi [ecx+8] +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_405287  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebx] +
cmp ecx [eax+4] +
jnz loc_405299  +
mov [eax+4] esi +
jmp loc_4052A7  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_4052A4  +
mov [eax] esi +
jmp loc_4052A7  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov eax [edx+4] +
cmp byte ptr [eax+0Ch] 0 +
jz loc_40511A  +
mov ebx [ebp-18h] +
mov ecx [ebp-1Ch] +
mov eax [ecx+4] +
mov byte ptr [eax+0Ch] 1 +
mov edi dword_47979C +
mov [ebp-10h] edi +
mov eax [ebp-14h] +
mov [ebx+14h] eax +
mov eax [eax] +
mov [ebp-14h] eax +
test eax eax +
jnz loc_40506A  +
cmp dword_479794 0 +
jnz loc_4053BB  +
mov esi [edi] +
lea eax [ebp-4Ch] +
mov dword_479794 eax +
mov esi [esi] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_405382  +
mov dword_479794 0 +
mov dword_479FC8 2 +
push offset unk_479FCC  +
call ds:_Mtx_unlock  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41435D  +
push 0  +
push 148F8C4h  +
call sub_40D3A8  +
call sub_409051  +
int 3  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450D9A  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ebp-4] 0 +
cmp dword_479FC8 0 +
jz loc_40561C  +
push offset unk_479FCC  +
call ds:_Mtx_lock  +
add esp 4 +
test eax eax +
jz loc_405422  +
push eax  +
call ds:?_Throw_C_error@std@@YAXH@Z  +
cmp dword_479FC8 0 +
jz loc_40560E  +
cmp dword_47979C 0 +
mov dword_479FC8 3 +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 0 +
jz loc_405604  +
cmp dword_479790 0 +
jz loc_405470  +
mov ecx 148F8C6h +
call sub_414B4C  +
jmp loc_405604  +
lea eax [ebp-30h] +
mov dword_479790 eax +
call ds:_Thrd_id  +
mov edi dword_47979C +
lea edx [ebp-20h] +
mov dword_479FC4 eax +
mov bl 1 +
mov eax [ebp-28h] +
test eax eax +
mov dword ptr [ebp-20h] 0 +
mov esi [edi] +
cmovnz edx eax +
mov [ebp-18h] edx +
mov [ebp-1Ch] esi +
cmp esi [esi] +
jz loc_405554  +
lea ecx [ebp-14h] +
mov [ebp-0Dh] bl +
mov [ebp-14h] esi +
call sub_414240  +
mov eax [ebp-14h] +
cmp dword ptr [eax+10h] 3FFFFh +
ja loc_40553F  +
lea ecx [ebp-14h] +
mov [ebp-14h] esi +
call sub_414240  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov [ebp-24h] eax +
mov eax [ebp-14h] +
mov [ebp-14h] esi +
mov eax [eax+10h] +
mov [ecx] eax +
lea ecx [ebp-14h] +
call sub_414240  +
mov eax [ebp-14h] +
mov ebx [eax+14h] +
mov eax [ebx+10h] +
test eax eax +
jz loc_405517  +
add eax 0FFFFFFFFh +
mov [ebx+10h] eax +
jnz loc_405517  +
mov ecx [ebx+8] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov edi dword_47979C +
mov dword ptr [ebx+0Ch] 0 +
lea ecx [ebp-14h] +
mov [ebp-14h] esi +
call sub_414240  +
mov eax [ebp-14h] +
xor ebx ebx +
mov edx [ebp-18h] +
mov eax [eax+14h] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
mov eax [ebp-24h] +
mov [edx] eax +
movzx eax byte ptr [ebp-0Dh] +
cmovnz ebx eax +
lea ecx [ebp-1Ch] +
call sub_414240  +
mov eax [edi] +
mov esi [ebp-1Ch] +
cmp esi [eax] +
jnz loc_4054AD  +
mov dword_479790 0 +
mov dword_479FC4 0 +
test bl bl +
jz loc_405604  +
mov ebx ds:free +
mov eax edi +
mov [ebp-1Ch] eax +
mov ecx [eax] +
mov [ebp-24h] ecx +
mov esi [ecx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4055B5  +
push dword ptr [esi+8]  +
mov ecx eax +
push eax  +
call sub_4142A5  +
push esi  +
mov esi [esi] +
call ebx  +
mov eax [ebp-1Ch] +
add esp 4 +
cmp byte ptr [esi+0Dh] 0 +
jz loc_405590  +
mov edi dword_47979C +
mov ecx [ebp-24h] +
mov [ecx+4] ecx +
mov [ecx] ecx +
mov [ecx+8] ecx +
mov dword ptr [eax+4] 0 +
test edi edi +
jz loc_4055FA  +
mov eax [edi] +
mov esi [eax+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4055EE  +
push dword ptr [esi+8]  +
mov ecx edi +
push edi  +
call sub_4142A5  +
push esi  +
mov esi [esi] +
call ebx  +
add esp 4 +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4055D3  +
mov eax [edi] +
push eax  +
call ebx  +
add esp 4 +
push edi  +
call ebx  +
add esp 4 +
mov dword_47979C 0 +
mov dword_479FC8 0 +
push offset unk_479FCC  +
call ds:_Mtx_unlock  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450DBD  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-14h] ebx +
push 2  +
push 400h  +
push 400h  +
push 0  +
lea eax [ebp-44h] +
push eax  +
call PeekMessageW  +
mov edi ds:Sleep +
mov esi 14h +
mov ecx ebx +
dec esi  +
call loc_4058DE  +
mov eax [ebx+4] +
test eax eax +
jnz loc_4056A3  +
push 1F4h  +
call edi  +
test esi esi +
jg loc_40567E  +
mov eax [ebx+4] +
test eax eax +
jz loc_405880  +
push 0  +
call CoInitialize  +
lea ecx [ebp-20h] +
call sub_408B1B  +
mov dword ptr [ebp-4] 0 +
mov esi [ebp-20h] +
test esi esi +
jz loc_4056C7  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [ebx+4] +
mov [ebp-28h] esi +
test eax eax +
jz loc_405870  +
push 4  +
push 100h  +
push 0FFFFFFFFh  +
push dword ptr [ebx]  +
mov dword ptr [ebp-10h] 0 +
push eax  +
call MsgWaitForMultipleObjectsEx  +
cmp eax [ebx+4] +
jnb loc_405838  +
mov ecx [ebx] +
mov eax [ecx+eax*4] +
mov [ebp-10h] eax +
test eax eax +
jz loc_405838  +
push eax  +
call ds:CloseHandle  +
mov edi [ebx+4] +
mov ecx offset off_454CE0 +
mov [ebp-18h] ecx +
test edi edi +
jz loc_4057CF  +
xor eax eax +
add edi 0FFFFFFFFh +
mov [ebp-1Ch] eax +
js loc_4057CF  +
mov esi [ebp-10h] +
add eax edi +
cdq   +
sub eax edx +
mov ebx eax +
mov eax [ecx+8] +
sar ebx 1 +
lea edx ds:0[ebx*4] +
mov [ebp-24h] edx +
mov edx [ebp-14h] +
mov edx [edx] +
add edx [ebp-24h] +
cmp eax offset sub_4080A6 +
jnz loc_405766  +
mov edx [edx] +
cmp edx esi +
jb loc_40577A  +
xor eax eax +
cmp edx esi +
setnz al  +
jmp loc_405776  +
lea ecx [ebp-10h] +
push ecx  +
push edx  +
lea ecx [ebp-18h] +
call eax  +
mov esi [ebp-10h] +
mov ecx [ebp-18h] +
test eax eax +
jns loc_405782  +
lea eax [ebx+1] +
mov [ebp-1Ch] eax +
jmp loc_4057C4  +
mov eax [ebp-14h] +
lea edi ds:0[ebx*4] +
mov edx [ecx+8] +
mov eax [eax] +
add eax edi +
cmp edx offset sub_4080A6 +
jnz loc_4057AA  +
mov edx [eax] +
cmp esi edx +
jb loc_4057BE  +
xor eax eax +
cmp esi edx +
setnz al  +
jmp loc_4057BA  +
push eax  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-18h] +
call edx  +
mov esi [ebp-10h] +
mov ecx [ebp-18h] +
test eax eax +
jns loc_4057ED  +
mov eax [ebp-1Ch] +
lea edi [ebx-1] +
cmp eax edi +
jle loc_405732  +
mov ebx [ebp-14h] +
mov ecx 2C7108h +
call sub_414B4C  +
mov edx [ebx+20h] +
xor ecx ecx +
test edx edx +
jz loc_4057FE  +
mov eax [ebx+14h] +
lea eax [eax+eax*2] +
lea esi [edx+eax*4] +
jmp loc_405800  +
sub esp 0Ch +
push ebx  +
mov ebx [ebp-14h] +
push ecx  +
mov ecx ebx +
call sub_417710  +
jmp loc_4057D9  +
***
xor esi esi +
mov eax edx +
cmp edx esi +
jz loc_405892  +
mov ecx edx +
cmp dword ptr [ecx+8] 0 +
lea eax [ecx+0Ch] +
jnz loc_405892  +
mov ecx eax +
cmp ecx esi +
jnz loc_405810  +
xor edx edx +
push ecx  +
push edx  +
lea ecx [ebx+0Ch] +
call sub_4179E1  +
cmp dword ptr [ebx+4] 0 +
ja loc_405838  +
mov ecx ebx +
call loc_4058DE  +
push 1  +
push 0  +
push 0  +
push 0  +
lea eax [ebp-44h] +
push eax  +
call PeekMessageW  +
test eax eax +
jz loc_405862  +
lea eax [ebp-44h] +
push eax  +
call TranslateMessage  +
lea eax [ebp-44h] +
push eax  +
call DispatchMessageW  +
mov eax [ebx+4] +
test eax eax +
jnz loc_4056D5  +
mov esi [ebp-20h] +
test esi esi +
jz loc_40587A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
call CoUninitialize  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
test ecx ecx +
jz loc_40581F  +
lea edx [ecx+4] +
mov edi ecx +
mov ecx [ecx+8] +
mov [ebp-24h] edx +
cmp ecx 0FFFFFFFFh +
jz loc_4058B1  +
mov edx [ebx+20h] +
lea ecx [ecx+ecx*2] +
lea ecx [edx+ecx*4] +
jmp loc_4058CA  +
xor ecx ecx +
cmp eax esi +
jz loc_4058CA  +
cmp [eax+8] ecx +
jnz loc_4058C5  +
add eax 0Ch +
cmp eax esi +
jnz loc_4058B7  +
jmp loc_4058CA  +
mov ecx eax +
add eax 0Ch +
mov edx [edi] +
mov edi [ebp-24h] +
mov ebx [ebp-10h] +
cmp [edi] ebx +
mov ebx [ebp-14h] +
jnz loc_405892  +
jmp loc_405821  +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
push 0  +
push ds:off_454CEC  +
mov ebx ecx +
push 0  +
push 0  +
mov [ebp-8] ebx +
call FindWindowExW  +
mov [ebp-18h] eax +
test eax eax +
jz loc_405A72  +
adc eax offset OpenProcess +
mov esi [ebp-8] +
xor edi edi +
mov [ebp-1Ch] eax +
mov [ebp-4] eax +
mov dword ptr [ebp-0Ch] offset off_454CE0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_405A31  +
mov eax [esi] +
lea ebx [ecx-1] +
lea ecx [ebp-0Ch] +
lea eax [eax+ebx*4] +
push eax  +
lea eax [ebp-4] +
push eax  +
call sub_4080C9  +
test eax eax +
jns loc_405A2B  +
test ebx ebx +
jz loc_405A2E  +
mov ecx [ebp-8] +
lea esi [ebx+edi] +
mov eax [ebp-0Ch] +
shr esi 1 +
mov ecx [ecx] +
mov edx [eax] +
lea ecx [ecx+esi*4] +
push ecx  +
cmp edx offset sub_4080D2 +
jnz loc_405A0A  +
lea ecx [ebp-4] +
push ecx  +
lea ecx [ebp-0Ch] +
call dword ptr [eax+4]  +
jmp loc_405A13  +
push dword ptr [eax+ecx*4-75h]  +
inc ebx  +
adc al 8Dh +
or al 76h +
mov eax [eax+ecx*4+4] +
mov [ebp-4] eax +
jmp loc_405A51  +
lea eax [ebp-4] +
push eax  +
lea ecx [ebp-0Ch] +
call edx  +
mov ecx eax +
lea eax [esi+1] +
test ecx ecx +
cmovs eax edi +
cmovs ebx esi +
mov edi eax +
cmp edi ebx +
jb loc_4059CF  +
mov esi [ebp-8] +
jmp loc_405A2E  +
mov edi [esi+4] +
mov ebx [ebp-14h] +
sub esp 0Ch +
push edi  +
push ecx  +
mov ecx esi +
call sub_4175DC  +
mov ecx [ebp-1Ch] +
mov [eax] ecx +
mov ecx ebx +
push dword ptr [ebp-10h]  +
mov esi [ebp-4] +
call sub_417903  +
mov [eax] esi +
mov ebx [ebp-8] +
push 0  +
push ds:off_454CEC  +
push dword ptr [ebp-18h]  +
push 0  +
call FindWindowExW  +
mov [ebp-18h] eax +
test eax eax +
jnz near ptr dword_40590C+4  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov ebx ecx +
mov [ebp-0Ch] edx +
push edi  +
mov [ebp-10h] ebx +
mov esi offset oword_479590 +
mov edi offset unk_454CCC +
mov ecx 0Ch +
mov eax [esi] +
cmp eax [edi] +
jnz loc_405B55  +
add esi 4 +
add edi 4 +
sub ecx 4 +
jnb loc_405A99  +
lea eax [ebp-8] +
mov dword ptr [ebp-4] 0 +
push eax  +
lea eax [ebp-4] +
mov dword ptr [ebp-8] 0 +
push eax  +
call ds:GdipGetImageEncodersSize  +
mov ecx [ebp-8] +
test ecx ecx +
jz loc_405B25  +
call sub_4183EC  +
mov ebx eax +
test ebx ebx +
jz loc_405B25  +
push ebx  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
call ds:GdipGetImageEncoders  +
xor esi esi +
cmp [ebp-4] esi +
jbe loc_405B1B  +
lea edi [ebx+30h] +
inc esi  +
add edi 4Ch +
cmp esi [ebp-4] +
jb loc_405B00  +
push ebx  +
call ds:free  +
add esp 4 +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
cmp dword_47CC60 1 +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
sub esp 20Ch +
push ecx  +
sub esp 64h +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450F25  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-2Ch] edx +
lea eax [ebp-18h] +
mov dword ptr [ebp-4] 0 +
push eax  +
push offset stru_454BB4  +
push 17h  +
mov ecx offset stru_454540 +
mov dword ptr [ebp-18h] 0 +
call sub_4164DF  +
mov edi eax +
test edi edi +
js loc_4071E1  +
lea eax [ebp-48h] +
xorps xmm0 xmm0 +
push eax  +
movups oword ptr [ebp-48h] xmm0 +
call VariantInit  +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-4] 2 +
lea edx [ebp-1Ch] +
mov eax [ebp-18h] +
mov dword ptr [ebp-1Ch] 0 +
push edx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+1Ch]  +
mov edi eax +
test edi edi +
jns loc_407098  +
mov eax [ebp-14h] +
test eax eax +
jz loc_407089  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp-48h] +
push eax  +
call VariantClear  +
jmp loc_4071E1  +
cmp word ptr [ebp-48h] 3 +
mov edi 80004005h +
mov esi VariantClear +
jz loc_4070C1  +
lea eax [ebp-48h] +
push eax  +
call esi  +
test eax eax +
js loc_407206  +
mov eax 3 +
mov [ebp-48h] ax +
cmp dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-40h] 0 +
jle loc_4071CE  +
mov eax [ebp-18h] +
movups xmm0 oword ptr [ebp-48h] +
mov ecx [eax] +
mov edx [ecx+20h] +
lea ecx [ebp-14h] +
push ecx  +
sub esp 10h +
mov ecx esp +
push eax  +
movups oword ptr [ecx] xmm0 +
call edx  +
test eax eax +
jnz loc_4071A9  +
mov eax [ebp-14h] +
xor esi esi +
mov [ebp-20h] esi +
test eax eax +
jz loc_407112  +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push offset unk_454B94  +
push eax  +
call dword ptr [ecx]  +
mov esi [ebp-20h] +
mov [ebp-34h] esi +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebp-14h] 0 +
test esi esi +
jz loc_40719B  +
mov dword ptr [ebp-24h] 0 +
lea ecx [ebp-24h] +
mov eax [esi] +
push ecx  +
push esi  +
call dword ptr [eax+0A0h]  +
cmp word ptr [ebp-24h] 0 +
jnz loc_407145  +
mov byte ptr [ebp-4] 2 +
jmp loc_4071A3  +
mov dword ptr [ebp-28h] 0 +
lea ecx [ebp-28h] +
mov eax [esi] +
push ecx  +
push esi  +
call dword ptr [eax+4Ch]  +
cmp word ptr [ebp-28h] 0 +
jnz loc_407163  +
mov byte ptr [ebp-4] 2 +
jmp loc_4071A3  +
mov eax [esi] +
lea ecx [ebp-30h] +
push ecx  +
push esi  +
call dword ptr [eax+94h]  +
test eax eax +
jns loc_40717A  +
mov byte ptr [ebp-4] 2 +
jmp loc_4071A3  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
call sub_406EEA  +
test al al +
jnz loc_40718F  +
mov byte ptr [ebp-4] 2 +
jmp loc_4071A3  +
push 0  +
push esi  +
call sub_406EFA  +
test al al +
jnz loc_4071BB  +
mov byte ptr [ebp-4] 2 +
test esi esi +
jz loc_4071A9  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp-40h] +
inc eax  +
mov [ebp-40h] eax +
cmp eax [ebp-1Ch] +
jl loc_4070D2  +
jmp loc_4071C8  +
mov eax [ebx+10h] +
xor edi edi +
push esi  +
mov [eax] esi +
mov eax [esi] +
call dword ptr [eax+8]  +
mov esi VariantClear +
mov eax [ebp-14h] +
test eax eax +
jz loc_4071DB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp-48h] +
push eax  +
call esi  +
mov eax [ebp-18h] +
test eax eax +
jz loc_4071EE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 0Ch  +
push eax  +
call sub_4017B1  +
int 3  +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
mov edi [ebp+8] +
push edi  +
call IsWindowVisible  +
test eax eax +
jz loc_407280  +
cmp byte ptr [ebx+4] 0 +
jz loc_407245  +
push edi  +
call IsIconic  +
test eax eax +
jnz loc_407280  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push edi  +
call GetClassNameW  +
xor esi esi +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [ebp-4] +
xor eax eax +
mov [ebx] edi +
xor ecx ebp +
pop edi  +
pop esi  +
pop ebx  +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450FDA  +
mov eax large fs:0 +
push eax  +
sub esp 1A4h +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-1A8h] edx +
mov [ebp-198h] ecx +
lea eax [ebp-164h] +
mov dword ptr [ebp-168h] offset off_454D5C +
mov [ebp-16Ch] eax +
mov dword ptr [ebp-164h] offset off_477678 +
mov dword ptr [ebp-160h] 0 +
mov dword ptr [ebp-15Ch] 0 +
push 0  +
push 2  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-164h] +
mov eax off_477678 +
push ecx  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [ebp-160h] +
xor ecx ecx +
mov [eax] cx +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-158h] +
mov [ebp-16Ch] eax +
mov dword ptr [ebp-158h] offset off_477678 +
mov [ebp-154h] ecx +
mov [ebp-150h] ecx +
push ecx  +
push 2  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-158h] +
mov eax off_477678 +
push ecx  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [ebp-154h] +
xor ecx ecx +
mov [eax] cx +
mov [ebp-14Ch] ecx +
mov [ebp-148h] ecx +
mov dword ptr [ebp-144h] 80000000h +
lea eax [ebp-118h] +
mov dword ptr [ebp-13Ch] 0Ch +
mov [ebp-124h] eax +
xor eax eax +
mov dword ptr [ebp-138h] 7 +
mov dword ptr [ebp-134h] 0FFFFFFFFh +
mov [ebp-130h] ecx +
mov [ebp-12Ch] ecx +
mov dword ptr [ebp-140h] offset off_454C40 +
mov dword ptr [ebp-11Ch] 102h +
mov dword ptr [ebp-128h] offset off_47767C +
mov dword ptr [ebp-120h] 102h +
mov [ebp-118h] ax +
mov dword ptr [ebp-4] 4 +
mov [ebp-1A4h] eax +
mov [ebp-1A0h] eax +
mov dword ptr [ebp-19Ch] 80000000h +
mov dword ptr [ebp-194h] offset off_46DF30 +
mov [ebp-190h] eax +
mov [ebp-18Ch] eax +
mov [ebp-188h] eax +
mov dword ptr [ebp-184h] 80000000h +
mov [ebp-180h] eax +
mov [ebp-17Ch] eax +
mov dword ptr [ebp-178h] 80000000h +
mov dword ptr [ebp-174h] 1 +
mov dword ptr [ebp-170h] 0FFFFFFFFh +
mov [ebp-1ACh] eax +
push 1D4h  +
mov byte ptr [ebp-4] 8 +
call ds:malloc  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_407A36  +
mov eax [ebp-178h] +
and eax 80000009h +
or eax 9 +
mov [ebp-178h] eax +
imul eax [ebp-17Ch] +
push eax  +
push dword ptr [ebp-180h]  +
push ebx  +
call j_memcpy  +
mov eax [ebp-180h] +
add esp 0Ch +
mov byte ptr [ebp-4] 7 +
mov edi ds:free +
mov [ebp-180h] ebx +
test eax eax +
jz loc_4074F1  +
push eax  +
call edi  +
mov ebx [ebp-180h] +
add esp 4 +
imul esi [ebp-17Ch] +
push 34h  +
push 0  +
add esi ebx +
push esi  +
call j_memset  +
inc dword ptr [ebp-17Ch]  +
lea eax [ebp-16Ch] +
add esp 0Ch +
mov dword ptr [esi+28h] 0FFFFFFFFh +
mov dword ptr [esi] 0FFFFFFFFh +
lea ecx [ebp-194h] +
mov dword ptr [esi+4] 0FFFFFFFFh +
mov dword ptr [esi+10h] 1 +
push eax  +
push offset a09aFaF809aFaF4  +
mov dword ptr [esi+14h] 1 +
mov dword ptr [esi+18h] 1 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+8] 7FFFFFFFh +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+24h] 0FFFFFFFFh +
mov byte ptr [esi+2Ch] 1 +
mov dword ptr [esi+28h] 0 +
push 0  +
mov dword ptr [ebp-16Ch] 0 +
call sub_440B55  +
cmp dword ptr [ebp-17Ch] 0 +
jbe loc_407A40  +
mov ecx [ebp-180h] +
xor esi esi +
mov [ecx+24h] eax +
mov ebx [ebp-17Ch] +
or edx 0FFFFFFFFh +
cmp esi ebx +
jnb loc_407A40  +
imul ecx esi +
add ecx [ebp-180h] +
mov eax [ecx+10h] +
cmp eax [ecx+14h] +
jnz loc_407600  +
mov eax [ecx+20h] +
sub eax 0 +
jz loc_407658  +
sub eax 1 +
jz loc_407653  +
sub eax 1 +
jnz loc_40767D  +
mov ecx [ecx+24h] +
cmp ecx 0Bh +
jz loc_407600  +
mov eax [ebp-170h] +
cmp ecx 2 +
cmovnz eax esi +
mov [ebp-170h] eax +
lea eax [ebp-1A4h] +
mov byte ptr [ebp-4] 9 +
push eax  +
push offset aC585900655d24d  +
lea ecx [ebp-194h] +
call sub_4405A6  +
mov byte ptr [ebp-4] 5 +
mov bl al +
mov ecx [ebp-180h] +
test ecx ecx +
jz loc_407631  +
push ecx  +
call edi  +
add esp 4 +
mov eax [ebp-18Ch] +
test eax eax +
jz loc_407641  +
push eax  +
call edi  +
add esp 4 +
test bl bl +
jnz loc_40768D  +
push ecx  +
lea ecx [ebp-164h] +
call sub_4088D3  +
jmp loc_40769F  +
mov edx [ecx+24h] +
jmp loc_40767D  +
imul eax edx +
add eax [ebp-180h] +
cmp dword ptr [eax+4] 0FFFFFFFFh +
jnz loc_407600  +
mov esi edx +
cmp edx 0FFFFFFFFh +
jnz loc_4075B0  +
jmp loc_407600  +
***
push 24h  +
mov edx offset aC585900655d24d +
lea ecx [ebp-164h] +
call sub_44BEDD  +
mov eax [ebp-1A4h] +
test eax eax +
jz loc_4076AF  +
push eax  +
call edi  +
add esp 4 +
xor esi esi +
mov dword ptr [ebp-19Ch] 80000000h +
mov [ebp-1A4h] esi +
mov [ebp-1A0h] esi +
mov eax [ebp-198h] +
test eax eax +
jz loc_4076E0  +
push offset unk_458F6C  +
push eax  +
call ds:wcsstr  +
add esp 8 +
test eax eax +
jnz loc_407933  +
mov dword ptr [ebp-194h] offset off_46DF30 +
mov [ebp-190h] eax +
mov [ebp-18Ch] eax +
mov [ebp-188h] eax +
mov dword ptr [ebp-184h] 80000000h +
mov [ebp-180h] eax +
mov [ebp-17Ch] eax +
mov dword ptr [ebp-178h] 80000000h +
mov dword ptr [ebp-174h] 1 +
mov dword ptr [ebp-170h] 0FFFFFFFFh +
mov [ebp-1ACh] eax +
push 1D4h  +
mov byte ptr [ebp-4] 0Dh +
call ds:malloc  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_407A3B  +
mov eax [ebp-178h] +
and eax 80000009h +
or eax 9 +
mov [ebp-178h] eax +
imul eax [ebp-17Ch] +
push eax  +
push dword ptr [ebp-180h]  +
push ebx  +
call j_memcpy  +
mov eax [ebp-180h] +
add esp 0Ch +
mov [ebp-180h] ebx +
mov byte ptr [ebp-4] 0Ch +
test eax eax +
jz loc_4077A5  +
push eax  +
call edi  +
mov ebx [ebp-180h] +
add esp 4 +
imul esi [ebp-17Ch] +
push 34h  +
push 0  +
add esi ebx +
push esi  +
call j_memset  +
inc dword ptr [ebp-17Ch]  +
lea eax [ebp-16Ch] +
add esp 0Ch +
mov dword ptr [esi+28h] 0FFFFFFFFh +
mov dword ptr [esi] 0FFFFFFFFh +
lea ecx [ebp-194h] +
mov dword ptr [esi+4] 0FFFFFFFFh +
mov dword ptr [esi+10h] 1 +
push eax  +
push offset aAZaZAZaZ09_?_  +
mov dword ptr [esi+14h] 1 +
mov dword ptr [esi+18h] 1 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+8] 7FFFFFFFh +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+24h] 0FFFFFFFFh +
mov byte ptr [esi+2Ch] 1 +
mov dword ptr [esi+28h] 0 +
push 0  +
mov dword ptr [ebp-16Ch] 0 +
call sub_440B55  +
cmp dword ptr [ebp-17Ch] 0 +
jbe loc_407A40  +
mov ecx [ebp-180h] +
xor esi esi +
mov [ecx+24h] eax +
mov ebx [ebp-17Ch] +
sub eax 1 +
jz loc_4078F9  +
sub eax 1 +
jnz loc_407923  +
mov ecx [ecx+24h] +
cmp ecx 0Bh +
jz loc_4078AC  +
mov eax [ebp-170h] +
cmp ecx 2 +
cmovnz eax esi +
mov [ebp-170h] eax +
mov ecx [ebp-198h] +
lea eax [ebp-1A4h] +
push eax  +
push ecx  +
lea ecx [ebp-194h] +
mov byte ptr [ebp-4] 0Eh +
call sub_4405A6  +
mov ecx [ebp-180h] +
mov bl al +
test ecx ecx +
jz loc_4078DB  +
push ecx  +
call edi  +
add esp 4 +
mov eax [ebp-18Ch] +
test eax eax +
jz loc_4078EB  +
push eax  +
call edi  +
add esp 4 +
mov esi [ebp-1A4h] +
test bl bl +
jz loc_407933  +
mov bl 1 +
jmp loc_407935  +
mov edx [ecx+24h] +
jmp loc_407923  +
imul eax edx +
add eax [ebp-180h] +
cmp dword ptr [eax+4] 0FFFFFFFFh +
jnz loc_4078AC  +
mov esi edx +
cmp edx 0FFFFFFFFh +
jnz loc_407860  +
jmp loc_4078AC  +
***
xor bl bl +
mov byte ptr [ebp-4] 4 +
test esi esi +
jz loc_407943  +
push esi  +
call edi  +
add esp 4 +
test bl bl +
jz loc_407987  +
mov ebx [ebp-198h] +
test ebx ebx +
jz loc_407975  +
mov ecx ebx +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_407956  +
sub ecx edx +
mov edx ebx +
sar ecx 1 +
push ecx  +
lea ecx [ebp-158h] +
call sub_44BEDD  +
jmp loc_407993  +
xor ecx ecx +
mov edx ebx +
push ecx  +
lea ecx [ebp-158h] +
call sub_44BEDD  +
jmp loc_407993  +
push ecx  +
lea ecx [ebp-158h] +
call sub_4088D3  +
push dword ptr [ebp-1A8h]  +
lea ecx [ebp-168h] +
call sub_44CC38  +
push ecx  +
mov edx offset sub_408896 +
mov dword ptr [ebp-168h] offset off_454D5C +
lea ecx [ebp-140h] +
mov dword ptr [ebp-140h] offset off_454C40 +
call sub_417CB6  +
mov eax [ebp-124h] +
lea ecx [ebp-118h] +
cmp eax ecx +
jz loc_4079DF  +
push eax  +
call edi  +
add esp 4 +
mov eax [ebp-12Ch] +
mov dword ptr [ebp-140h] offset off_454C20 +
test eax eax +
jz loc_4079F9  +
push eax  +
call edi  +
add esp 4 +
lea ecx [ebp-14Ch] +
call sub_4083E1  +
push dword ptr [ebp-154h]  +
call edi  +
add esp 4 +
push dword ptr [ebp-160h]  +
call edi  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
mov eax [ecx] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+4]  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset sub_450A5A  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_408216  +
mov edx [ebp+10h] +
test edx edx +
jnz loc_40812B  +
mov eax 80004003h +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov ebx [ebp+0Ch] +
cmp dword ptr [ebx] 0 +
jnz loc_40816F  +
cmp dword ptr [ebx+4] 0 +
jnz loc_40816F  +
cmp dword ptr [ebx+8] 0C0h +
jnz loc_40816F  +
cmp dword ptr [ebx+0Ch] 46000000h +
jnz loc_40816F  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
mov ecx [ebp+10h] +
mov eax [ebp+8] +
mov [ecx] eax +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi offset unk_454D68 +
mov esi [edi-8] +
test esi esi +
jz loc_4081A5  +
mov eax [esi] +
cmp eax [ebx] +
jnz loc_4081C6  +
mov eax [esi+4] +
cmp eax [ebx+4] +
jnz loc_4081C6  +
mov eax [esi+8] +
cmp eax [ebx+8] +
jnz loc_4081C6  +
mov eax [esi+0Ch] +
cmp eax [ebx+0Ch] +
jnz loc_4081C6  +
mov eax [edi] +
cmp eax 1 +
jz loc_4081F0  +
push dword ptr [edi-4]  +
push edx  +
push ebx  +
push ecx  +
call eax  +
test eax eax +
jz loc_408159  +
test esi esi +
jz loc_4081C0  +
test eax eax +
js loc_4081D3  +
mov edx [ebp+10h] +
mov ecx [ebp+8] +
add edi 0Ch +
cmp dword ptr [edi] 0 +
jnz loc_408180  +
mov eax 80004002h +
mov ecx [ebp+10h] +
mov dword ptr [ecx] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov esi [edi-4] +
add esi ecx +
push esi  +
mov eax [esi] +
call dword ptr [eax+4]  +
mov ecx [ebp+10h] +
xor eax eax +
mov [ecx] esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov ecx [ebp+arg_0] +
push esi  +
push 0FFFFFFFFh  +
mov edx offset sub_408896 +
push 0FFFFFFFFh  +
push ecx  +
mov ecx dword_4771DC +
xor eax eax +
test ecx ecx +
jz loc_40843E  +
cmp dword_4771E4 eax +
jnz loc_40844C  +
push [ebp+lcid]  +
call sub_404842  +
mov ecx dword_4771DC +
test ecx ecx +
jz loc_40846B  +
push [ebp+arg_20]  +
mov eax [ecx] +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push ecx  +
call dword ptr [eax+2Ch]  +
pop ebp  +
retn 24h  +
***
push ebp  +
mov ebp esp +
mov edx dword_4771DC +
sub esp 8 +
xor eax eax +
test edx edx +
jz loc_40848B  +
mov ecx dword_4771E4 +
test ecx ecx +
jnz loc_40849F  +
push dword ptr [ebp+18h]  +
call sub_404842  +
mov ecx dword_4771E4 +
mov edx dword_4771DC +
test edx edx +
jz loc_408591  +
push esi  +
push edi  +
test ecx ecx +
jz loc_40857A  +
cmp dword ptr [ebp+14h] 1 +
jnz loc_40857A  +
mov eax [ebp+10h] +
mov edx [eax] +
mov [ebp-4] edx +
test edx edx +
jnz loc_4084CB  +
xor edi edi +
jmp loc_4084E5  +
mov edi edx +
lea ecx [edi+2] +
mov ax [edi] +
add edi 2 +
test ax ax +
jnz loc_4084D0  +
sub edi ecx +
mov ecx dword_4771E4 +
sar edi 1 +
mov eax dword_4771E8 +
add eax 0FFFFFFFFh +
mov [ebp+18h] eax +
js loc_40857A  +
lea eax [eax+eax*2] +
lea eax [eax+1] +
lea esi [ecx+eax*4] +
mov eax [ebp+18h] +
mov [ebp-8] esi +
mov esi [esi] +
cmp edi esi +
jnz loc_408569  +
mov ecx [ebp-8] +
add esi esi +
mov ecx [ecx-4] +
sub esi 4 +
jb loc_408531  +
mov edx [ebp-4] +
mov eax [ebp+18h] +
mov esi [ebp-8] +
dec eax  +
sub esi 0Ch +
mov [ebp+18h] eax +
mov [ebp-8] esi +
test eax eax +
jns loc_408505  +
push dword ptr [ebp+1Ch]  +
mov ecx dword_4771DC +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+28h]  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
cmp [ebp+arg_4] 0 +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
lea eax [ecx+4] +
cmp [ecx] eax +
jnz sub_408A9D  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4510C9  +
mov eax large fs:0 +
push eax  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_0] +
push offset WindowName  +
push offset aAppid  +
push ecx  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_8] +
shl eax 2 +
push eax  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call j_memcpy  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push esi  +
push edi  +
mov edi [ebp+8] +
lea eax [eax+eax*2] +
lea esi [edi+eax*4] +
cmp esi edi +
jbe loc_408890  +
push ebx  +
mov ebx ds:free +
push esi  +
mov edi ecx +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
pop ecx  +
push esi  +
mov eax 2 +
push 0FFFFFFFFh  +
push offset loc_45116E  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_1C] edi +
test edi edi +
jnz loc_408B66  +
mov eax 80004003h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push 24h  +
mov dword ptr [edi] 0 +
mov [ebp+var_14] 8007000Eh +
mov [ebp+var_18] 0 +
mov [ebp+var_4] 0 +
call ds:malloc  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_408CB6  +
mov [ebp+var_30] esi +
mov dword ptr [esi+4] 0 +
lea eax [esi+8] +
mov dword ptr [esi] offset off_454C94 +
mov [ebp+var_34] eax +
mov dword ptr [eax] offset off_454C18 +
mov dword ptr [eax+4] 0 +
lea ebx [eax+8] +
mov [ebp+var_38] ebx +
mov dword ptr [ebx] offset off_477678 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
push 0  +
push 2  +
mov byte ptr [ebp+var_4] 3 +
mov eax off_477678 +
push ebx  +
push offset off_477678  +
call dword ptr [eax]  +
mov eax [ebx+4] +
xor ecx ecx +
mov [eax] cx +
mov byte ptr [ebp+var_4] 4 +
mov edx offset WindowName +
mov [esi+1Ch] ecx +
push ecx  +
mov ecx ebx +
call sub_44BEDD  +
mov ecx dword_4795B8 +
lea ebx [esi+20h] +
mov dword ptr [ebx] 0 +
mov dword ptr [esi] offset off_454C60 +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0FFFFFFFFh +
inc dword ptr [esi+4]  +
mov eax [esi] +
push esi  +
mov eax [eax+28h] +
cmp eax offset sub_406DEC +
jnz loc_408C3C  +
call sub_406DEC  +
jmp loc_408C3E  +
call eax  +
test eax eax +
js loc_408C76  +
lea eax [ebp+var_3C] +
mov [ebp+var_2C] 1 +
push eax  +
lea eax [ebp+var_2C] +
mov [ebp+var_28] 0 +
push eax  +
push ebx  +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call ds:GdiplusStartup  +
neg eax  +
sbb eax eax +
and eax 80004005h +
xor ebx ebx +
test eax eax +
cmovs ebx eax +
dec dword ptr [esi+4]  +
test ebx ebx +
jz loc_408CA0  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+2Ch]  +
xor esi esi +
jmp loc_408CA0  +
mov eax offset loc_408C97 +
retn   +
mov ebx [ebp-14h] +
mov esi [ebp-18h] +
mov edi [ebp-1Ch] +
mov [edi] esi +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_41435D  +
int 3  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+4]  +
mov dword ptr [esi] offset off_454CC4 +
call ds:GdipDisposeImage  +
test [ebp+arg_0] 1 +
jz loc_408CDE  +
push esi  +
call ds:GdipFree  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
call ds:free  +
pop ecx  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+14h] +
mov dword ptr [esi] offset off_454C20 +
test eax eax +
jz loc_408D1D  +
push eax  +
call ds:free  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_408D2D  +
push esi  +
call ds:free  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax 2 +
mov ecx 5 +
sub esp 164h +
mov eax [ecx] +
cmp byte ptr [ecx+0Ch] 0 +
mov edx [ecx+8] +
jz loc_408F22  +
push 0  +
jmp loc_408F28  +
test edx edx +
jz locret_408F2F  +
push 1  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+14h]  +
retn   +
***
mov eax [ebp+arg_0] +
push ecx  +
mov eax [ebp+arg_4] +
push esi  +
push ebx  +
int 3  +
***
and dword ptr [ecx+4] 0 +
lea eax [ecx+4] +
push esi  +
push esi  +
sub esp 0Ch +
push ecx  +
mov edx [ebp+arg_0] +
sub esp 0Ch +
push esi  +
push esi  +
push ecx  +
push esi  +
mov eax [ebp+arg_0] +
int 3  +
***
or ecx 7 +
push ecx  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
push esi  +
cmp edx 1000h +
mov edx [esi+14h] +
cmp ecx 1000h +
and dword ptr [ecx+4] 0 +
sub esp 0Ch +
mov ecx [ebp+arg_0] +
push esi  +
push ebx  +
mov edx [esi+14h] +
cmp edx 10h +
jb loc_4096FB  +
mov ecx [esi] +
inc edx  +
call sub_409590  +
and dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
jmp sub_4096E8  +
***
mov esi ecx +
push ecx  +
cmp [ebp+arg_0] 0 +
test edx edx +
mov eax edx +
sub esp 14h +
push ecx  +
push 0FFFFFFFFh  +
sub esp 14h +
mov eax [ebp+arg_0] +
push esi  +
push 0FFFFFFFFh  +
push esi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
mov eax [ebp+arg_0] +
mov eax 80004005h +
test [ebp+arg_0] 1 +
push esi  +
push esi  +
test [ebp+arg_0] 1 +
mov esi ecx +
cmp byte ptr [esi+14h] 0 +
push esi  +
sub esp 614h +
mov ecx [ecx] +
sub esp 0Ch +
cmp byte ptr [esi+14h] 0 +
push esi  +
push ecx  +
mov eax [ebp+arg_4] +
sub esp 10h +
mov eax [edx] +
push ecx  +
push ecx  +
call sub_45052F  +
call sub_45052F  +
push esi  +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ecx] +
and dword ptr [ecx+204h] 0 +
sub esp 38Ch +
call sub_45052F  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_0] +
push ebx  +
push ebx  +
mov edx [ebp+arg_0] +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push esi  +
and esp 0FFFFFFF8h +
int 3  +
int 3  +
***
push esi  +
cmp ecx 3FFFFFFEh +
cmp dword ptr [ecx] 0 +
push ecx  +
test edx edx +
mov eax [ebp+arg_0] +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ebx  +
sub esp 0Ch +
sub esp 18h +
sub esp 0Ch +
sub esp 10Ch +
mov eax [ebp+arg_0] +
push ecx  +
push ebx  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov ecx esi +
sub esp 10h +
and esp 0FFFFFFF8h +
mov edx ecx +
push ebx  +
sub esp 0Ch +
test byte ptr [esi+3Ch] 1 +
mov eax [esi-68h] +
call sub_4504FC  +
push esi  +
push esi  +
call sub_4504FC  +
push 0FFFFFFFFh  +
call sub_4504FC  +
push 0FFFFFFFFh  +
sub ecx [ecx-4] +
push 0FFFFFFFFh  +
pop edx  +
push ecx  +
and esp 0FFFFFFF8h +
sub esp 10h +
lea eax [ebp+arg_10] +
push ecx  +
movzx eax cx +
cmp cx 30h +
cmp cx 7Fh +
movzx ecx cx +
mov eax [ebp+arg_4] +
test edx edx +
test edx edx +
call sub_450565  +
lea eax [ebp+arg_C] +
push 0FFFFFFFFh  +
push ebx  +
push esi  +
push 0FFFFFFFEh  +
call sub_40D3A8  +
mov eax dword_4795E0 +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
test [ebp+arg_0] 1 +
push ecx  +
cmp dword ptr [edx+14h] 8 +
push esi  +
push ecx  +
sub esp 90h +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword ptr [edx+14h] 8 +
push esi  +
mov esi ecx +
mov ecx edx +
jb loc_40D5DD  +
mov ecx [edx] +
mov eax [edx+10h] +
movzx eax word ptr [ecx+eax*2-2] +
cmp eax 53h +
jz loc_40D627  +
cmp eax 73h +
jz loc_40D627  +
cmp dword ptr [edx+14h] 8 +
jb loc_40D5F7  +
mov edx [edx] +
push [ebp+arg_4]  +
lea eax [ebp+var_90] +
push [ebp+arg_0]  +
push edx  +
push 41h  +
push eax  +
call sub_40D185  +
add esp 14h +
test eax eax +
jns loc_40D61F  +
push offset aErrorFailedToF  +
mov ecx esi +
call sub_4091CB  +
lea eax [ebp+var_90] +
jmp loc_40D639  +
mov eax [ebp+arg_0] +
or eax [ebp+arg_4] +
mov eax offset aNull +
jz loc_40D639  +
mov eax offset aErrorWrongFo_0 +
push eax  +
mov ecx esi +
call sub_4091CB  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_44EDCF  +
leave   +
retn 8  +
***
call ds:FlsFree  +
retn   +
***
sub esp 0Ch +
or edi 0FFFFFFFFh +
mov ecx [ecx+4] +
mov ecx [ecx+4] +
mov eax [ebp+arg_0] +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
pop ebp  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
mov ecx [ebp+arg_8] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax large fs:2Ch +
push 0FFFFFFFFh  +
push edi  +
push 0FFFFFFFFh  +
push 64h  +
push 0FFFFFFFFh  +
push esi  +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
mov ecx dword_479FC0 +
push ecx  +
cmp dword ptr [esi] 0 +
push esi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_450565  +
mov eax [edx+10h] +
push ecx  +
call sub_4504FC  +
push ecx  +
call sub_450565  +
call sub_450565  +
push 0FFFFFFFFh  +
cmp byte ptr [esi+30h] 0 +
push ecx  +
push ecx  +
cmp [ebp+arg_4] 0 +
call sub_40FE71  +
mov edx [ebp+arg_4] +
push ecx  +
and esp 0FFFFFFF8h +
push esi  +
test esi esi +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
mov esi ecx +
mov ecx [esi] +
push ebx  +
test esi esi +
push esi  +
push esi  +
mov edx [ebp+arg_0] +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_41069C  +
mov ecx eax +
call sub_40AE73  +
mov eax [esi+4] +
lea ecx [eax+18h] +
mov [esi+4] ecx +
jmp loc_4106A2  +
push eax  +
call sub_41079C  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
or eax 0FFFFFFFFh +
xadd [esi+4] eax +
dec eax  +
jnz loc_4106CA  +
mov eax [esi] +
push 0  +
call dword ptr [eax+8]  +
push esi  +
call ds:free  +
pop ecx  +
pop esi  +
leave   +
retn   +
***
push ecx  +
push esi  +
imul edx [ebp+arg_4] +
sub esp 0Ch +
call sub_450565  +
push ecx  +
mov eax [ecx+8] +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
push ecx  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+5Ch]  +
pop ebp  +
retn 4  +
***
cmp dword_4795EC 0 +
push ecx  +
and esp 0FFFFFFF8h +
call sub_4504FC  +
push edi  +
push 0FFFFFFFFh  +
push ecx  +
push ecx  +
xor eax eax +
mov edx [ebp+arg_4] +
call sub_4504FC  +
push ecx  +
push esi  +
mov eax [ecx+18h] +
call sub_4504FC  +
mov edi ecx +
mov ebx [ebp+0Ch] +
push ebx  +
call sub_410E26  +
push eax  +
mov [ebp+0Ch] eax +
mov ecx edi +
push ebx  +
lea eax [ebp-18h] +
push eax  +
call sub_410E4D  +
mov ecx [ebp-14h] +
test ecx ecx +
jz loc_410EDA  +
mov eax [ebp+8] +
mov [eax] ecx +
mov byte ptr [eax+4] 0 +
jmp loc_410FD3  +
cmp dword ptr [edi+8] 0FFFFFFFh +
jnz loc_410EEE  +
push offset aUnordered_mapS  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
lea eax [edi+4] +
mov [ebp-20h] eax +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-1Ch] 0 +
push 10h  +
call ds:malloc  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_410F11  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
mov eax [ebx] +
mov [esi+8] eax +
and dword ptr [esi+0Ch] 0 +
mov [ebp-1Ch] esi +
mov dword ptr [ebp-4] 1 +
mov eax [edi+8] +
inc eax  +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
addsd xmm0 ds:qword_46EF60[eax*8] +
mov eax [edi+1Ch] +
cvtpd2ps xmm1 xmm0 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
addsd xmm0 ds:qword_46EF60[eax*8] +
cvtpd2ps xmm0 xmm0 +
divss xmm1 xmm0 +
comiss xmm1 dword ptr [edi] +
jbe loc_410F82  +
mov ecx edi +
call sub_410FEC  +
mov ebx [ebp+0Ch] +
lea eax [esi+8] +
push ebx  +
push eax  +
lea eax [ebp-20h] +
mov ecx edi +
push eax  +
call sub_410E4D  +
mov edx [eax] +
jmp loc_410F88  +
mov edx [ebp-18h] +
mov ebx [ebp+0Ch] +
mov eax [edi+8] +
mov ecx [edx+4] +
inc eax  +
mov [edi+8] eax +
mov [esi] edx +
mov [esi+4] ecx +
mov [ecx] esi +
mov [edx+4] esi +
mov eax [edi+18h] +
mov [ebp+0Ch] ecx +
and eax ebx +
mov ecx [edi+0Ch] +
mov ebx [ecx+eax*8] +
cmp ebx [edi+4] +
jnz loc_410FB4  +
mov [ecx+eax*8] esi +
jmp loc_410FC6  +
cmp ebx edx +
jnz loc_410FBD  +
mov [ecx+eax*8] esi +
jmp loc_410FCA  +
mov edx [ebp+0Ch] +
cmp [ecx+eax*8+4] edx +
jnz loc_410FCA  +
mov [ecx+eax*8+4] esi +
mov eax [ebp+8] +
mov [eax] esi +
mov byte ptr [eax+4] 1 +
call sub_4504D0  +
retn 8  +
***
push ecx  +
sub esp 14h +
mov eax [ebp+arg_0] +
push ecx  +
push ecx  +
movzx eax word ptr [ecx+6] +
xor dl dl +
cmp dword_4795F0 0 +
push 0FFFFFFFFh  +
cmp dword ptr [ecx+14h] 8 +
push 0FFFFFFFFh  +
call sub_4504FC  +
mov edi ecx +
xor eax eax +
mov [edi] eax +
mov [edi+4] eax +
mov [edi+8] eax +
mov eax dword_47CD34 +
mov ebx dword_47CD30 +
mov [ebp-10h] eax +
cmp ebx eax +
jz loc_4114E9  +
sub eax ebx +
push 18h  +
pop ecx  +
cdq   +
idiv  ecx +
mov esi eax +
push esi  +
call sub_41094D  +
imul ecx esi +
mov [edi] eax +
mov [edi+4] eax +
mov [ebp-14h] edi +
add ecx eax +
mov [edi+8] ecx +
and dword ptr [ebp-4] 0 +
mov ecx edi +
push eax  +
push dword ptr [ebp-10h]  +
push ebx  +
call sub_4114FE  +
mov [edi+4] eax +
mov eax edi +
call sub_4504D0  +
retn 4  +
***
call sub_4504FC  +
push 0FFFFFFFFh  +
mov eax [ecx+1Ch] +
test eax eax +
jz loc_4116DE  +
retn   +
push 0  +
push 312119Fh  +
call sub_40D3A8  +
int 3  +
push esi  +
mov esi [ecx] +
test esi esi +
jz loc_411701  +
mov ecx esi +
call sub_411724  +
push esi  +
call ds:free  +
pop ecx  +
pop esi  +
retn   +
***
lea eax [esi+28h] +
push eax  +
call ds:_Mtx_destroy_in_situ  +
pop ecx  +
lea ecx [esi+20h] +
call sub_4117A5  +
lea ecx [esi+0Ch] +
call sub_411759  +
lea ecx [esi+4] +
pop esi  +
jmp sub_411777  +
***
mov edx [esi+4] +
mov edx [ebx] +
push ecx  +
call sub_4504FC  +
call sub_4504FC  +
push ebx  +
push ecx  +
sub esp 44h +
push esi  +
mov ecx [esi+24h] +
call sub_450565  +
test esi esi +
cmp [ebp+arg_0] 0 +
call sub_4504FC  +
mov eax [ebp+arg_0] +
push ecx  +
movzx eax dl +
cmp ecx 3F2h +
and eax 1Fh +
sub esp 2Ch +
cmp ecx 8 +
jz loc_411FB2  +
cmp ecx 9 +
jz loc_411FB2  +
cmp ecx 0Eh +
jnz loc_411FA1  +
push 0Fh  +
pop eax  +
retn   +
cmp ecx 14h +
jz loc_411FAE  +
cmp ecx 13h +
jz loc_411FAE  +
xor eax eax +
retn   +
push 0Ah  +
pop eax  +
retn   +
push 0Bh  +
pop eax  +
retn   +
***
push 0FFFFFFFFh  +
push ecx  +
mov eax dword_47978C +
test cl cl +
sub esp 34h +
mov esi edx +
push 0FFFFFFFFh  +
sub esp 34h +
sub esp 2Ch +
and esp 0FFFFFFF8h +
push ecx  +
mov eax [ebp+arg_0] +
and esp 0FFFFFFF8h +
sub esp 2Ch +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
push edi  +
mov eax [ebp+arg_0] +
push esi  +
sub esp 0Ch +
mov ecx [ebp+arg_0] +
sub esp 18h +
sub esp 10h +
sub esp 20h +
push ecx  +
sub esp 20h +
push esi  +
sub esp 18h +
push ecx  +
push ecx  +
mov eax dword_479798 +
mov eax dword_479794 +
push ecx  +
push esi  +
mov eax [ecx] +
mov eax [ebp+arg_0] +
and dword ptr [ecx+4] 0 +
sub esp 0Ch +
mov esi ecx +
cmp word_4797A0 0 +
xor eax eax +
call sub_414543  +
sub esp 108h +
push ebx  +
push 10h  +
sub esp 128h +
mov eax large fs:2Ch +
movzx eax byte_4797E0 +
push ecx  +
push ecx  +
push esi  +
cmp byte ptr [ecx+0Ch] 0 +
mov eax large fs:2Ch +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
cmp dword ptr [esi] 0 +
test esi esi +
mov eax [ebp+arg_0] +
cmp [ebp+arg_0] 2Fh +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
sub esp 2Ch +
push ecx  +
push ecx  +
push [ebp+arg_4]  +
sub esp 60h +
push dword ptr [ecx]  +
mov edx [ebp+arg_4] +
push esi  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
call sub_45052F  +
call sub_4103E9  +
push ebx  +
push edi  +
sub esp 20h +
sub esp 0Ch +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_4] +
call sub_45052F  +
sub esp 398h +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax large fs:2Ch +
sub esp 10h +
push ecx  +
push ecx  +
test esi esi +
mov ecx [esi] +
mov eax [ebp+arg_0] +
push ecx  +
push ecx  +
mov eax dword_479A20 +
call sub_44FB05  +
cmp dword_4795C0 0 +
call sub_4505D4  +
mov edx [ebp-230h] +
mov eax dword_4795C4 +
mov eax dword_479A2C +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
test eax eax +
jnz loc_415F10  +
push offset aKernel32_dll_0  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_415F1A  +
mov dword_479A2C eax +
push edi  +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov eax off_4778F0 +
xor edx edx +
call sub_415F2D  +
push esi  +
sub esp 10h +
call sub_45052F  +
push ecx  +
push 0FFFFFFFFh  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
sub esp 14h +
and esp 0FFFFFFF8h +
mov edi [ecx+1Ch] +
mov edx ecx +
push ecx  +
mov dword ptr [esi] offset off_458F30 +
mov eax [esi-68h] +
call sub_4504FC  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
call sub_4504FC  +
test byte ptr [esi+3Ch] 1 +
call sub_4504FC  +
call sub_450565  +
sub ecx [ecx-4] +
push ecx  +
push ebx  +
push 0FFFFFFFFh  +
call sub_45052F  +
call sub_45052F  +
pop ecx  +
push ecx  +
push eax  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
cmp dword ptr [ecx] 0 +
push esi  +
call sub_4504FC  +
call sub_4504FC  +
push 0FFFFFFFFh  +
cmp dword ptr [ecx] 0 +
push esi  +
mov eax [ecx+8] +
call sub_450565  +
mov ecx [ebp-18h] +
push 0FFFFFFFFh  +
push ebx  +
mov ecx 2271754Dh +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
call sub_417893  +
test [ebp+arg_0] 1 +
jz loc_41787D  +
test esi esi +
jz loc_41787D  +
push esi  +
call ds:free  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
cmp dword ptr [ecx+14h] 0 +
call sub_450565  +
mov ecx [ebp-18h] +
sub esp 10h +
sub esp 0Ch +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_0] +
push edi  +
mov eax [ebp+arg_0] +
mov edx [ecx] +
mov eax [ecx] +
mov eax [edx+14h] +
push 0FFFFFFFFh  +
call sub_4504FC  +
push ecx  +
cmp dword ptr [esi+14h] 0 +
push 0FFFFFFFFh  +
xor edx edx +
push ecx  +
mov dword ptr [ecx] offset off_459078 +
mov edx [ebp+arg_0] +
mov dword ptr [ecx] offset off_459060 +
and dword ptr [ecx+4] 0 +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
push 0FFFFFFFFh  +
call sub_450565  +
mov esi ecx +
mov [ebp-14h] esi +
push dword_47A29C  +
call ds:DecodePointer  +
test eax eax +
jz loc_418243  +
and dword ptr [ebp-4] 0 +
push dword_47A29C  +
call ds:DecodePointer  +
push esi  +
call eax  +
jmp loc_41823F  +
mov ecx 1390323h +
call sub_414B4C  +
mov eax offset loc_41823C +
retn   +
mov esi [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
call sub_4504D0  +
retn   +
***
push esi  +
sub esp 14h +
push esi  +
mov dword ptr [ecx] offset off_459030 +
mov edx ecx +
call sub_4504FC  +
push esi  +
sub esp 14h +
push esi  +
mov dword ptr [ecx] offset off_459048 +
mov edx ecx +
call sub_4504FC  +
push 0FFFFFFFFh  +
cmp dword_479A44 0 +
xor edx edx +
push 0FFFFFFFFh  +
cmp dword ptr [ecx+4] 0 +
push 0FFFFFFFFh  +
mov eax ecx +
mov eax [ecx] +
sub esp 10h +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
test edx edx +
push esi  +
jz loc_418A6A  +
mov eax edx +
test ecx ecx +
mov esi ecx +
sub esp 34h +
sub esp 18h +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_C] ecx +
call ds:_Query_perf_frequency  +
mov ebx eax +
mov edi edx +
mov [ebp+var_4] ebx +
call ds:_Query_perf_counter  +
push ebx  +
push edi  +
push ebx  +
push edx  +
push eax  +
call sub_4506C6  +
mov esi ebx +
pop ebx  +
push 0  +
mov [ebp+var_8] eax +
mov ebx edx +
mov eax 3B9ACA00h +
push eax  +
push esi  +
push ecx  +
call sub_4507A5  +
push edi  +
push [ebp+var_4]  +
push edx  +
push eax  +
call sub_45061C  +
mov esi eax +
mov edi edx +
mov eax ebx +
mov ebx 3B9ACA00h +
mul  ebx +
mov ecx eax +
mov eax [ebp+var_8] +
mul  ebx +
add ecx edx +
add esi eax +
mov eax [ebp+var_C] +
adc edi ecx +
mov [eax+4] edi +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edx [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
call sub_4504FC  +
mov eax [ebp+arg_4] +
push ecx  +
push ecx  +
mov eax dword_47A2A4 +
test ecx ecx +
push ecx  +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push esi  +
and dword ptr [esi+10h] 0 +
cmp dword ptr [esi+8] 0 +
mov dword ptr [esi] offset off_459160 +
jz loc_419253  +
push dword ptr [esi+4]  +
push dword ptr [esi+8]  +
call sub_40D4C6  +
mov dword ptr [esi] offset off_454FA8 +
pop esi  +
retn   +
***
cmp ecx 1001h +
ja loc_4192A5  +
dec ecx  +
cmp ecx 0Ah +
ja loc_4192B3  +
movzx eax ds:byte_4192C6[ecx] +
jmp ds:off_4192BE[eax*4]  +
sub ecx 1002h +
jz loc_4192BB  +
dec ecx  +
sub ecx 1 +
jz loc_4192B7  +
push 3  +
pop eax  +
retn   +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
sub esp 0Ch +
push 0FFFFFFFFh  +
sub esp 0CCh +
push edi  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
push ecx  +
mov edx [ebp+arg_4] +
push esi  +
sub esp 0Ch +
call sub_450565  +
sub esp 10h +
cmp word_479C58 0 +
push edi  +
mov edi edx +
test esi esi +
jz loc_419CBC  +
test edi edi +
jz loc_419CBC  +
push 55h  +
mov ecx offset aXNone +
call sub_409794  +
mov edx offset aKoKr +
mov ecx esi +
call sub_40CAD8  +
test al al +
jnz loc_419CAA  +
mov edx offset aJaJp +
mov ecx esi +
call sub_40CAD8  +
test al al +
jnz loc_419CAA  +
mov ecx esi +
call sub_41930D  +
test eax eax +
jz loc_419CB8  +
push 55h  +
mov edx edi +
mov ecx offset aEnUs +
call sub_409794  +
xor eax eax +
jmp loc_419CC1  +
mov eax 80070057h +
pop edi  +
pop esi  +
retn 4  +
***
push ebx  +
push ecx  +
sub esp 0Ch +
mov edx [ebp+arg_4] +
push ecx  +
call sub_4504FC  +
call sub_45052F  +
sub esp 0Ch +
push ebx  +
sub esp 0Ch +
push ecx  +
push 0FFFFFFFFh  +
call sub_4504FC  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax large fs:2Ch +
mov edx [eax] +
mov eax dword_47CD3C +
cmp eax [edx+8] +
jg loc_41B19A  +
push offset unk_47CD40  +
mov ecx esi +
call sub_40AE73  +
mov eax esi +
call sub_4504D0  +
retn   +
mov edi offset dword_47CD3C +
push edi  +
call sub_44F553  +
cmp dword_47CD3C 0FFFFFFFFh +
pop ecx  +
jnz loc_41B186  +
and dword ptr [ebp-4] 0 +
push ecx  +
call sub_41B1D5  +
push offset loc_453C7D  +
call sub_44F154  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
push edi  +
call sub_44F50F  +
pop ecx  +
jmp loc_41B186  +
***
call sub_45059B  +
push offset aEnUs  +
push 0FFFFFFFFh  +
push offset aXNone  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_45052F  +
mov [ebp-1A2h] dl +
mov esi ecx +
and dword ptr [ebp-40h] 0 +
xor eax eax +
and dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
and [ebp-4] eax +
and [ebp-28h] eax +
and [ebp-18h] eax +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
lea edx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
mov ecx offset off_458600 +
call sub_411326  +
test al al +
jz loc_41D73B  +
lea edx [ebp-40h] +
mov ecx offset off_4587B0 +
call sub_411326  +
test al al +
jz loc_41D73B  +
lea edx [ebp-28h] +
mov ecx esi +
call sub_419649  +
push 4  +
pop esi  +
mov [ebp-1A1h] al +
lea ecx [ebp-1A0h] +
push esi  +
lea eax [ebp-40h] +
push eax  +
push offset aCorrelationgui  +
call sub_42081F  +
mov ebx eax +
lea ecx [ebp-138h] +
push esi  +
lea eax [ebp-28h] +
push eax  +
push offset aLangtag  +
call sub_42081F  +
mov edi eax +
mov [ebp-42h] si +
mov al [ebp-1A1h] +
mov esi ds:strncpy_s +
push 0FFFFFFFFh  +
push offset aSuccess  +
mov [ebp-43h] al +
lea eax [ebp-84h] +
push 41h  +
push eax  +
mov dword ptr [ebp-88h] offset off_459548 +
call esi  +
mov al [ebp-1A2h] +
push 4  +
mov [ebp-8Bh] al +
pop eax  +
push 0FFFFFFFFh  +
push offset aNolangsinstall  +
mov [ebp-8Ah] ax +
lea eax [ebp-0CCh] +
push 41h  +
push eax  +
mov dword ptr [ebp-0D0h] offset off_459548 +
call esi  +
add esp 20h +
lea ecx [ebp-1C0h] +
push 2  +
call sub_419D3E  +
mov esi eax +
mov dword ptr [ebp-1A8h] offset aVerifyuserrequ +
lea eax [ebp-1A8h] +
push eax  +
push offset off_459360  +
lea ecx [ebp-1B4h] +
call sub_419D7D  +
push ebx  +
push edi  +
lea eax [ebp-88h] +
mov edx esi +
push eax  +
lea eax [ebp-0D0h] +
push eax  +
lea ecx [ebp-1B4h] +
call sub_4209F0  +
lea ecx [ebp-0F0h] +
call sub_4095B6  +
lea ecx [ebp-158h] +
call sub_4095B6  +
cmp byte ptr [ebp-1A1h] 0 +
jz loc_41D73B  +
mov ecx offset off_458600 +
call sub_4138F6  +
mov ecx offset off_4587B0 +
call sub_4138F6  +
mov eax [ebp-14h] +
mov edi 1000h +
mov esi ds:free +
cmp eax 8 +
jb loc_41D76F  +
mov ecx [ebp-28h] +
lea eax ds:2[eax*2] +
mov edx ecx +
cmp eax edi +
jb loc_41D76B  +
mov ecx [ecx-4] +
sub edx ecx +
lea eax [edx-4] +
cmp eax 1Fh +
ja loc_41D7A5  +
push ecx  +
call esi  +
pop ecx  +
and dword ptr [ebp-18h] 0 +
xor eax eax +
mov [ebp-28h] ax +
mov eax [ebp-2Ch] +
mov dword ptr [ebp-14h] 7 +
cmp eax 8 +
jb loc_41D7AF  +
mov ecx [ebp-40h] +
lea eax ds:2[eax*2] +
mov edx ecx +
cmp eax edi +
jb loc_41D7AB  +
mov ecx [ecx-4] +
sub edx ecx +
lea eax [edx-4] +
cmp eax 1Fh +
jbe loc_41D7AB  +
call ds:_invalid_parameter_noinfo_noreturn  +
push ecx  +
call esi  +
pop ecx  +
call sub_4504E4  +
retn   +
***
call sub_45052F  +
call sub_45052F  +
push 0FFFFFFFFh  +
sub esp 5Ch +
sub esp 0F0h +
sub esp 20h +
sub esp 18Ch +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
sub esp 2C8h +
push ecx  +
call sub_45052F  +
mov edx [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
push esi  +
push 0FFFFFFFFh  +
cmp [ebp+arg_0] 0 +
push ecx  +
call sub_4504FC  +
sub esp 40h +
sub esp 38h +
sub esp 0Ch +
sub esp 44h +
push 0FFFFFFFFh  +
mov edx ecx +
push ecx  +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
mov byte_479C52 0 +
call sub_414229  +
sub esp 14h +
mov edx [ebp+arg_0] +
sub esp 10h +
push ebx  +
cmp dword ptr [ecx+4] 0 +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
call sub_4504FC  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_421741  +
push ecx  +
push edi  +
mov eax [esi] +
push ecx  +
mov eax off_477998 +
sub esp 10h +
mov eax [ecx+0Ch] +
push 0FFFFFFFFh  +
push ecx  +
push 0FFFFFFFFh  +
test esi esi +
sub esp 108h +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
mov dword ptr [ecx] offset off_459690 +
mov edx [ebp+arg_0] +
push ecx  +
push ebx  +
push ecx  +
sub esp 28h +
push ecx  +
mov eax [ebp+arg_4] +
push edi  +
test dl 80h +
sub esp 50h +
push ecx  +
push ebx  +
cmp [ebp+arg_8] 0 +
mov edx ecx +
push esi  +
push ecx  +
movzx edx byte ptr [ecx+31h] +
push esi  +
mov dword ptr [ecx] offset off_459624 +
push ebx  +
sub esp 14h +
push ecx  +
sub esp 10h +
sub esp 14h +
or dword ptr [ecx] 0FFFFFFFFh +
cmp dword ptr [esi] 0FFFFFFFFh +
sub esp 1Ch +
push esi  +
push ecx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ebx  +
test [ebp+arg_0] 1 +
call sub_4504FC  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
pop ebp  +
push [ebp+arg_8]  +
pop ebp  +
pop ebp  +
push 0FFFFFFFFh  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
push [ebp+arg_C]  +
push esi  +
mov ecx [esi+20h] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ecx  +
push ebx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
pop ebp  +
pop ebp  +
pop ebp  +
pop ebp  +
mov eax [ebp+arg_4] +
mov esi 80004001h +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov ecx [ebp+arg_4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
test [ebp+arg_0] 1 +
push ecx  +
mov eax [esi+20h] +
call sub_4504FC  +
push ecx  +
mov eax [esi+1Ch] +
push ecx  +
sub esp 14h +
sub esp 10h +
call sub_4504FC  +
push esi  +
push esi  +
push esi  +
push esi  +
push ecx  +
sub esp 28h +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 18h +
sub [esp+arg_0] 4 +
mov eax dword_47CD98 +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
sub esp 0C0h +
push 0FFFFFFFFh  +
sub esp 18h +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax [esi] +
push esi  +
push ecx  +
sub esp 20h +
mov eax [ebp+arg_0] +
sub esp 20h +
sub esp 20h +
sub esp 20h +
mov edx [ebp+arg_0] +
sub esp 18h +
sub esp 18h +
sub esp 18h +
push ecx  +
push ebx  +
call sub_450565  +
sub esp 2Ch +
sub esp 28h +
mov eax ecx +
push ecx  +
sub esp 0B0h +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
push ecx  +
cmp [ebp+arg_8] 4 +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
push 0FFFFFFFFh  +
call sub_428BB7  +
push esi  +
push edi  +
test esi esi +
push ecx  +
sub esp 0Ch +
call sub_428E80  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push [ebp+arg_8]  +
sub esp 20h +
mov eax 3400h +
call sub_4504FC  +
mov eax [edx] +
call sub_45052F  +
sub esp 18h +
sub esp 0Ch +
and esp 0FFFFFFF8h +
cmp [ebp+arg_4] 0 +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
sub esp 84h +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
test esi esi +
sub esp 1Ch +
lea eax [ecx-30h] +
xor eax eax +
cmp ecx 100000h +
cmp ecx 200000h +
mov edx dword_47CB94 +
push ecx  +
push 0FFFFFFFFh  +
test esi esi +
push 0FFFFFFFFh  +
push esi  +
sub esp 18h +
mov eax [ebp+arg_0] +
mov eax dword_47CBC4 +
push esi  +
sub esp 38h +
sub esp 1Ch +
push 0FFFFFFFFh  +
sub esp 1Ch +
test esi esi +
push 0FFFFFFFFh  +
mov eax dword_47A358 +
push edi  +
sub esp 0Ch +
sub esp 25Ch +
sub esp 14h +
sub esp 0Ch +
push 0FFFFFFFFh  +
sub esp 34h +
sub esp 2Ch +
and esp 0FFFFFFF8h +
sub esp 20h +
sub esp 3Ch +
sub esp 0Ch +
sub esp 15Ch +
sub esp 54h +
sub esp 0Ch +
sub esp 44h +
sub esp 0Ch +
cmp dword_47CC38 0 +
xor esi esi +
and esp 0FFFFFFF8h +
push ecx  +
sub esp 1Ch +
and esp 0FFFFFFF8h +
sub esp 0C8h +
sub esp 1Ch +
sub esp 12Ch +
sub esp 1Ch +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
push ecx  +
cmp dword_47CC38 0 +
push ebx  +
push esi  +
push edi  +
mov edi edx +
mov [esp+10h+var_4] ecx +
jnz loc_42E736  +
mov esi 8FF000FFh +
jmp loc_42E7AD  +
cmp [ebp+arg_0] 0 +
jz loc_42E7A8  +
cmp edi 5 +
ja loc_42E7A8  +
xor esi esi +
cmp dword_47CB94 esi +
jnz loc_42E756  +
call sub_42BAE5  +
mov ecx [esp+10h+var_4] +
mov esi eax +
test esi esi +
js loc_42E7AD  +
call sub_42EAE4  +
test al al +
jz loc_42E7A8  +
call sub_42A5A8  +
mov ebx eax +
mov eax ds:dword_461C50[edi*4] +
test [ebx+20h] eax +
jnz loc_42E78D  +
mov edx edi +
mov ecx ebx +
call sub_42C63B  +
mov esi eax +
cmp esi 8007000Eh +
jz loc_42E7AD  +
mov ecx [esp+10h+var_4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_42E7A8  +
cmp byte ptr [ebx+1Ch] 0 +
jz loc_42E7A8  +
mov eax [eax+edi*4] +
cmp ecx eax +
jz loc_42E7A8  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
jmp loc_42E7AD  +
mov esi 80004005h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_42E7E0  +
mov eax [esi+8] +
push edi  +
sub eax ecx +
push 5Ch  +
cdq   +
pop edi  +
idiv  edi +
imul edx eax +
call sub_409590  +
xor eax eax +
mov [esi] eax +
mov [esi+4] eax +
mov [esi+8] eax +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_42E80A  +
mov eax [esi+8] +
push edi  +
sub eax ecx +
push 14h  +
cdq   +
pop edi  +
idiv  edi +
imul edx eax +
call sub_409590  +
xor eax eax +
mov [esi] eax +
mov [esi+4] eax +
mov [esi+8] eax +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
push ecx  +
sub esp 10h +
sub esp 0Ch +
sub esp 24h +
cmp ecx dword_47CB90 +
cmp cx 61h +
mov edi ecx +
call sub_42A58C  +
push edi  +
and esp 0FFFFFFF8h +
sub esp 24h +
sub esp 0Ch +
sub esp 0Ch +
and esp 0FFFFFFF8h +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0B0h +
call ds:LocaleNameToLCID  +
call sub_45052F  +
sub esp 39Ch +
call sub_45052F  +
call sub_4504FC  +
call sub_45052F  +
call sub_45052F  +
sub esp 39Ch +
sub esp 20h +
call sub_45052F  +
sub esp 48h +
call sub_45052F  +
call sub_45052F  +
sub esp 390h +
call sub_45052F  +
mov eax 13E8h +
mov eax 1050h +
call sub_45052F  +
push edi  +
call sub_45052F  +
sub esp 228h +
call sub_45052F  +
call sub_45052F  +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax offset loc_43157D +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_4528CE  +
mov eax large fs:0 +
push eax  +
sub esp 2ACh +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
xor ebx ebx +
mov [ebp+var_2B8] ebx +
mov [ebp+var_2B4] ebx +
mov [ebp+var_2B0] ebx +
call sub_41596E  +
test al al +
jz loc_4317FB  +
push edi  +
lea ecx [ebp+rguid] +
call sub_42FDA4  +
lea eax [ebp+var_230] +
push eax  +
lea ecx [ebp+rguid] +
call sub_42FE0F  +
cmp dword ptr [eax+14h] 8 +
jb loc_431780  +
mov eax [eax] +
lea ecx [ebp+var_2B8] +
mov edx eax +
push ecx  +
call sub_426D6D  +
lea ecx [ebp+var_230] +
mov bl al +
call sub_4095B6  +
test bl bl +
jz loc_4317BE  +
mov ecx [ebp+var_2B8] +
mov [esi] ecx +
mov ecx [ebp+var_2B4] +
mov [esi+4] ecx +
mov ecx [ebp+var_2B0] +
mov [esi+8] ecx +
jmp loc_4318FD  +
xor eax eax +
mov [ebp+var_224] offset off_458C40 +
mov word ptr [ebp+var_21C+2] ax +
xor ebx ebx +
lea eax [ebp+var_224] +
mov [ebp+var_220] offset aIsmrtsuccessfu +
push eax  +
push offset aEnumcomponentq  +
push 32h  +
mov ecx 1462480h +
mov byte ptr [ebp+var_21C] bl +
call sub_4159B0  +
push ecx  +
lea edx [ebp+var_27E] +
mov [ebp+var_288] edi +
mov ecx edi +
mov [ebp+var_284] ebx +
mov [ebp+var_280] bl +
call sub_430FAE  +
jmp loc_4318C8  +
lea ecx [ebp+QualifierBuf] +
mov [ebp+var_230] ebx +
mov [ebp+var_220] ebx +
lea edx [ecx+2] +
mov [ebp+var_21C] 7 +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_43183F  +
sub ecx edx +
lea eax [ebp+QualifierBuf] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp+var_230] +
call sub_4094F8  +
mov eax [ebp+var_2B4] +
lea ecx [ebp+var_230] +
push ecx  +
cmp eax [ebp+var_2B0] +
jz loc_431886  +
mov ecx eax +
call sub_409410  +
add [ebp+var_2B4] 18h +
jmp loc_431892  +
push eax  +
lea ecx [ebp+var_2B8] +
call sub_415422  +
mov eax [ebp+var_21C] +
cmp eax 8 +
jb loc_4318C8  +
mov ecx [ebp+var_230] +
lea eax ds:2[eax*2] +
mov edx ecx +
cmp eax 1000h +
jb loc_4318C0  +
mov ecx [ecx-4] +
sub edx ecx +
lea eax [edx-4] +
cmp eax 1Fh +
ja loc_431919  +
push ecx  +
call ds:free  +
pop ecx  +
push ecx  +
lea eax [ebp+QualifierBuf] +
push eax  +
lea ecx [ebp+var_288] +
call sub_431618  +
test al al +
jnz loc_431820  +
mov eax [ebp+var_2B8] +
mov [esi] eax +
mov eax [ebp+var_2B4] +
mov [esi+4] eax +
mov eax [ebp+var_2B0] +
mov [esi+8] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44EDCF  +
leave   +
retn   +
call ds:_invalid_parameter_noinfo_noreturn  +
int 3  +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp+var_4] edi +
mov esi [edi] +
test esi esi +
jz loc_43196E  +
push ebx  +
mov ebx [edi+4] +
cmp esi ebx +
jz loc_43194E  +
push 64h  +
pop edi  +
mov ecx esi +
call sub_4095B6  +
add esi edi +
cmp esi ebx +
jnz loc_43193C  +
mov edi [ebp+var_4] +
mov esi [edi] +
mov eax [edi+8] +
sub eax esi +
push 64h  +
pop ecx  +
cdq   +
idiv  ecx +
mov ecx esi +
imul edx eax +
call sub_409590  +
xor eax eax +
mov [edi] eax +
mov [edi+4] eax +
mov [edi+8] eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
push esi  +
imul edx [ebp+arg_4] +
push esi  +
push ecx  +
push ecx  +
sub esp 1Ch +
sub esp 20h +
call sub_450565  +
push ecx  +
call sub_4504FC  +
sub esp 0Ch +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax dword_4771C0 +
xor eax esp +
mov [esp+1Ch+var_4] eax +
mov eax [ebp+arg_0] +
mov edx offset aInvalidGimmeEn +
push esi  +
mov esi ecx +
lea ecx [esp+20h+var_1C] +
push 13h  +
and dword ptr [esi+204h] 0 +
mov [esi+388h] eax +
xor eax eax +
mov dword ptr [esi] 3Ah +
mov [esi+308h] ax +
mov [esi+208h] ax +
call sub_40A7FC  +
cmp [esp+20h+var_8] 8 +
lea ecx [esp+20h+var_1C] +
push 0FFFFFFFFh  +
cmovnb ecx [esp+24h+var_1C] +
push ecx  +
lea ecx [esi+4] +
push 100h  +
push ecx  +
call ds:wcsncpy_s  +
add esp 10h +
lea ecx [esp+20h+var_1C] +
call sub_4095B6  +
mov ecx [esp+20h+var_4] +
mov eax esi +
pop esi  +
xor ecx esp +
call sub_44EDCF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
push [ebp+arg_10]  +
mov edx [ebp+arg_4] +
push [ebp+arg_14]  +
push [ebp+arg_8]  +
mov edx [ebp+arg_4] +
mov edx [ebp+arg_4] +
sub esp 20Ch +
call sub_40D3A8  +
push esi  +
push ecx  +
push ecx  +
push edi  +
call sub_4504FC  +
push ebx  +
sub esp 398h +
push ecx  +
sub esp 24h +
push 55h  +
push 55h  +
sub esp 0Ch +
lea ecx [esi+20h] +
call sub_432ABD  +
lea ecx [esi+18h] +
call sub_432AD6  +
mov ecx esi +
pop esi  +
jmp sub_4096E8  +
***
mov eax [esi] +
mov eax [esi] +
push ecx  +
push esi  +
push ecx  +
push esi  +
sub esp 10h +
push ecx  +
mov ecx [ebp+arg_0] +
push ebx  +
push ecx  +
push ecx  +
push esi  +
push esi  +
push ecx  +
push ebx  +
test [ebp+arg_0] 1 +
push ecx  +
push ecx  +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
sub esp 1Ch +
sub esp 0Ch +
push ecx  +
sub esp 0Ch +
push ecx  +
push ecx  +
xor eax eax +
mov edi ecx +
sub esp 0Ch +
push ecx  +
push ecx  +
push 3E8h  +
push esi  +
sub esp 0Ch +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0FFFFFFFFh  +
push ecx  +
push esi  +
mov edi ecx +
sub esp 0Ch +
push edi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ecx  +
mov eax [ebp+arg_0] +
push ecx  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ecx  +
push esi  +
push ecx  +
push 0FFFFFFFFh  +
mov ecx [ecx] +
push ecx  +
push ecx  +
add ecx 4 +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push 0  +
add ecx 0Ch +
push esi  +
cmp [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ebx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
test ecx ecx +
push esi  +
push 0FFFFFFFFh  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
sub esp 18h +
sub esp 18h +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
sub esp 14h +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ecx  +
push 0FFFFFFFFh  +
push esi  +
push esi  +
push ecx  +
lea ecx [esi+18h] +
call sub_4096E8  +
lea ecx [esi+0Ch] +
call sub_415A59  +
mov ecx esi +
pop esi  +
jmp sub_432B41  +
***
mov ecx [esi+28h] +
push 0FFFFFFFFh  +
lea eax [esi+4] +
push esi  +
push esi  +
lea ecx [edi+0B4h] +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
mov eax [ebp+arg_0] +
mov dl 1 +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
add ecx 0FFFFFFFCh +
push esi  +
test esi esi +
test esi esi +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_8] +
sub esp 0Ch +
push esi  +
mov eax [ebp+arg_0] +
push esi  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
sub esp 5FCh +
mov edx [ebp+arg_0] +
push esi  +
push edi  +
push ebx  +
push esi  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
sub esp 10h +
sub esp 10h +
push ecx  +
cmp byte ptr [ecx+60h] 0 +
sub esp 130h +
sub esp 130h +
cmp byte ptr [ecx+50h] 0 +
sub esp 100h +
sub esp 0F4h +
cmp byte ptr [ecx+54h] 0 +
sub esp 108h +
cmp byte ptr [ecx+68h] 0 +
sub esp 148h +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
push esi  +
sub esp 0Ch +
add ecx 18h +
test [ebp+arg_0] 1 +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_0] +
and esp 0FFFFFFF8h +
push esi  +
push 0FFFFFFFFh  +
push esi  +
sub esp 10h +
sub esp 10h +
push 0FFFFFFFFh  +
mov ecx [esi+5Ch] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_452AAB  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_4] +
lea ecx [ebp+var_34] +
mov esi [ebp+arg_0] +
mov [ebp+var_44] eax +
xor eax eax +
mov [ebp+var_29] al +
mov [ebp+var_34] eax +
mov [ebp+var_30] eax +
call sub_43891F  +
mov ecx [edi+58h] +
lea edx [ebp+var_40] +
push edx  +
mov eax [ecx] +
call dword ptr [eax]  +
mov ecx [edi+54h] +
cmp ecx [eax+4] +
jg loc_4381E5  +
jl loc_43813D  +
mov ecx [edi+50h] +
cmp ecx [eax] +
jnb loc_4381E5  +
push ecx  +
lea ebx [edi+18h] +
push ebx  +
lea ecx [ebp+var_58] +
call sub_410B45  +
push esi  +
push offset aPerftrackingda  +
call ds:_stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4381CA  +
lea eax [ebp+var_40] +
mov ecx edi +
push eax  +
call sub_438380  +
lea ecx [ebp+var_34] +
mov [ebp+var_48] eax +
cmp ecx eax +
jz loc_4381A4  +
mov esi [ebp+var_34] +
mov eax ecx +
push dword ptr [esi+4]  +
push eax  +
call sub_4287C7  +
mov edx [ebp+var_48] +
mov [esi+4] esi +
mov [esi] esi +
mov [esi+8] esi +
and [ebp+var_30] 0 +
mov ecx [ebp+var_34] +
mov eax [edx] +
mov [ebp+var_34] eax +
mov eax [edx+4] +
mov [edx] ecx +
mov ecx [ebp+var_30] +
mov [ebp+var_30] eax +
mov [edx+4] ecx +
mov eax [ebp+var_40] +
push dword ptr [eax+4]  +
lea eax [ebp+var_40] +
push eax  +
mov ecx eax +
call sub_4287C7  +
push [ebp+var_40]  +
call ds:free  +
pop ecx  +
mov ecx edi +
mov [ebp+var_29] 1 +
call sub_438312  +
lea ecx [ebp+var_58] +
call sub_410B1C  +
cmp [ebp+var_29] 0 +
jz loc_4381E8  +
mov eax [edi] +
lea ecx [ebp+var_34] +
push ecx  +
mov ecx edi +
call dword ptr [eax+4]  +
jmp loc_4381E8  +
lea ebx [edi+18h] +
push ecx  +
push ebx  +
lea ecx [ebp+var_64] +
call sub_410B45  +
push [ebp+var_44]  +
xor ebx ebx +
mov [ebp+var_14] 7 +
lea ecx [ebp+var_28] +
mov [ebp+var_28] ebx +
mov [ebp+var_18] ebx +
call sub_409546  +
lea eax [ebp+var_28] +
add edi 10h +
push eax  +
lea eax [ebp+var_40] +
mov ecx edi +
push eax  +
call sub_438B0F  +
mov ecx edi +
mov eax [eax] +
inc dword ptr [eax+44h]  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
call sub_438B0F  +
mov esi [ebp+arg_C] +
mov eax [eax] +
cmp [eax+4Ch] esi +
jg loc_43824C  +
mov edx [ebp+arg_8] +
jl loc_438246  +
cmp [eax+48h] edx +
jnb loc_43824C  +
mov [eax+48h] edx +
mov [eax+4Ch] esi +
lea eax [ebp+var_28] +
mov ecx edi +
push eax  +
lea eax [ebp+var_4C] +
push eax  +
call sub_438B0F  +
mov esi [ebp+arg_C] +
mov ecx ebx +
mov edi [ebp+arg_8] +
mov edx [eax] +
mov eax ebx +
cmp ds:dword_46D164[eax] esi +
jg loc_438284  +
jl loc_438279  +
cmp ds:dword_46D160[eax] edi +
jnb loc_438284  +
add eax 8 +
inc ecx  +
cmp eax 38h +
jb loc_438267  +
jmp loc_438288  +
inc dword ptr [edx+ecx*4+28h]  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_4382BE  +
mov ecx [ebp+var_28] +
lea eax ds:2[eax*2] +
mov edx ecx +
cmp eax 1000h +
jb loc_4382B6  +
mov ecx [ecx-4] +
sub edx ecx +
lea eax [edx-4] +
cmp eax 1Fh +
jbe loc_4382B6  +
call ds:_invalid_parameter_noinfo_noreturn  +
push ecx  +
call ds:free  +
pop ecx  +
xor eax eax +
mov [ebp+var_18] ebx +
lea ecx [ebp+var_64] +
mov [ebp+var_14] 7 +
mov word ptr [ebp+var_28] ax +
call sub_410B1C  +
mov eax [ebp+var_34] +
push dword ptr [eax+4]  +
lea eax [ebp+var_34] +
push eax  +
mov ecx eax +
call sub_4287C7  +
push [ebp+var_34]  +
call ds:free  +
pop ecx  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44EDCF  +
leave   +
retn 10h  +
***
sub esp 0Ch +
call sub_4504FC  +
mov edi ecx +
mov [ebp-34h] edi +
xor eax eax +
mov [ebp-4] eax +
mov [ebp-20h] eax +
mov ebx [ebp+8] +
mov ecx ebx +
mov [ebx] eax +
mov [ebx+4] eax +
call sub_43891F  +
and dword ptr [ebp-4] 0 +
lea eax [edi+10h] +
mov [ebp-24h] eax +
mov eax [eax] +
mov dword ptr [ebp-20h] 1 +
mov eax [eax] +
mov [ebp-10h] eax +
jmp loc_43855F  +
mov ecx [edi+58h] +
lea esi [eax+10h] +
mov eax [edi+8] +
lea edx [ebp-48h] +
mov [ebp-84h] eax +
push edx  +
mov eax [ecx] +
mov [ebp-14h] esi +
call dword ptr [eax]  +
push 0  +
push 989680h  +
mov ecx [eax] +
sub ecx [edi+48h] +
mov eax [eax+4] +
sbb eax [edi+4Ch] +
push eax  +
push ecx  +
call sub_45061C  +
mov ecx [ebp-24h] +
mov [ebp-80h] eax +
lea eax [ebp-50h] +
push esi  +
push eax  +
mov [ebp-2Ch] edx +
call sub_438B0F  +
mov ecx [ebp-24h] +
push esi  +
mov eax [eax] +
mov eax [eax+44h] +
mov [ebp-7Ch] eax +
lea eax [ebp-58h] +
push eax  +
call sub_438B0F  +
and dword ptr [ebp-18h] 0 +
lea edi [ebp-74h] +
push 7  +
add esi 18h +
mov eax [eax] +
pop ecx  +
mov eax [eax+48h] +
mov [ebp-78h] eax +
movs   +
mov ecx [ebx] +
mov edi ecx +
mov [ebp-2Ch] ecx +
mov eax [ecx+4] +
mov [ebp-1Ch] eax +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_43847D  +
mov ebx [ebp-14h] +
mov esi eax +
lea eax [esi+10h] +
mov [ebp-1Ch] esi +
push ebx  +
push eax  +
call sub_408FAC  +
test al al +
jz loc_438469  +
and dword ptr [ebp-18h] 0 +
mov esi [esi+8] +
jmp loc_438474  +
mov edi esi +
mov dword ptr [ebp-18h] 1 +
mov esi [esi] +
cmp byte ptr [esi+0Dh] 0 +
jz loc_43844F  +
mov ebx [ebp+8] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_438493  +
lea eax [edi+10h] +
push eax  +
push dword ptr [ebp-14h]  +
call sub_408FAC  +
test al al +
jz loc_43850D  +
cmp dword ptr [ebx+4] 30C30C3h +
jz loc_438579  +
mov [ebp-3Ch] ebx +
mov dword ptr [ebp-4] 1 +
and dword ptr [ebp-38h] 0 +
push 54h  +
call ds:malloc  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_438573  +
mov [ebp-38h] edi +
push dword ptr [ebp-14h]  +
lea ecx [edi+10h] +
mov dword ptr [ebp-4] 2 +
call sub_40AE73  +
push 2Ch  +
lea eax [edi+28h] +
push 0  +
push eax  +
call j_memset  +
mov eax [ebp-2Ch] +
add esp 0Ch +
mov [edi] eax +
mov ecx ebx +
mov [edi+4] eax +
mov [edi+8] eax +
xor eax eax +
push edi  +
push dword ptr [ebp-18h]  +
mov [ebp-4] al +
push dword ptr [ebp-1Ch]  +
mov [edi+0Ch] ax +
mov [ebp-38h] eax +
call sub_438C59  +
mov edi eax +
mov eax [ebp-10h] +
lea esi [ebp-84h] +
push 0Bh  +
add edi 28h +
pop ecx  +
movs   +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_438543  +
mov ecx [eax+4] +
jmp loc_438536  +
cmp eax [ecx+8] +
jnz loc_43853C  +
mov eax ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_43852C  +
mov eax ecx +
mov [ebp-10h] eax +
jmp loc_43855C  +
mov eax ecx +
mov edx [eax] +
cmp byte ptr [edx+0Dh] 0 +
jmp loc_438557  +
mov ecx [edx] +
mov eax edx +
mov edx ecx +
cmp byte ptr [ecx+0Dh] 0 +
mov [ebp-10h] eax +
jz loc_43854D  +
mov edi [ebp-34h] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4383C5  +
mov eax ebx +
call sub_4504D0  +
retn 4  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
call sub_409051  +
int 3  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452B13  +
mov eax large fs:0 +
push eax  +
sub esp 204h +
mov eax dword_4771C0 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+8] +
mov esi [eax] +
mov esi [esi] +
mov [ebp-1BCh] esi +
jmp loc_4388E0  +
and dword ptr [ebp-1C8h] 0 +
add esi 38h +
and dword ptr [ebp-1C4h] 0 +
mov ebx offset off_46D144 +
and dword ptr [ebp-1C0h] 0 +
mov dword ptr [ebp-1CCh] 7 +
lea eax [ebp-1D0h] +
mov dword ptr [ebp-1D0h] 4 +
push eax  +
push esi  +
mov edx ebx +
lea ecx [ebp-1F0h] +
call sub_438988  +
mov edi [ebp-1ECh] +
test edi edi +
jz loc_438613  +
inc dword ptr [edi+4]  +
mov eax [ebp-1C4h] +
mov ecx [ebp-1F0h] +
mov [ebp-1E4h] ecx +
mov [ebp-1E0h] edi +
cmp eax [ebp-1C0h] +
jz loc_43864F  +
xor edx edx +
mov [eax] ecx +
mov [eax+4] edi +
add dword ptr [ebp-1C4h] 8 +
mov [ebp-1E4h] edx +
mov [ebp-1E0h] edx +
jmp loc_438671  +
lea ecx [ebp-1E4h] +
push ecx  +
push eax  +
lea ecx [ebp-1C8h] +
call sub_438A38  +
mov ecx [ebp-1E0h] +
test ecx ecx +
jz loc_438671  +
call sub_40D683  +
test edi edi +
jz loc_43867C  +
mov ecx edi +
call sub_40D683  +
add esi 4 +
add ebx 4 +
sub dword ptr [ebp-1CCh] 1 +
jnz loc_4385E6  +
mov ecx [ebp-1C8h] +
xor eax eax +
mov esi [ebp-1BCh] +
xor edx edx +
mov [ebp-1CCh] eax +
xor ebx ebx +
mov [ebp-1D4h] eax +
mov eax [ebp-1C4h] +
sub eax ecx +
mov [ebp-1DCh] edx +
sar eax 3 +
mov [ebp-1D8h] ebx +
test eax eax +
jz loc_4386F3  +
push ecx  +
push eax  +
lea ecx [ebp-1DCh] +
call sub_438E92  +
mov eax [ebp-1D4h] +
mov ecx [ebp-1C8h] +
mov ebx [ebp-1D8h] +
mov edx [ebp-1DCh] +
mov [ebp-1CCh] eax +
mov eax [ebp-1C4h] +
mov edi edx +
cmp ecx eax +
jz loc_438715  +
mov edx eax +
mov eax [ecx] +
add ecx 8 +
mov [edi] eax +
lea edi [edi+4] +
cmp ecx edx +
jnz loc_438701  +
mov edx [ebp-1DCh] +
sub ebx edx +
mov dword ptr [ebp-1FCh] offset off_459590 +
sar ebx 2 +
lea edi [esi+10h] +
push 4  +
lea ecx [ebp-74h] +
mov [ebp-1F8h] edx +
lea eax [edx+ebx*4] +
pop ebx  +
push ebx  +
push edi  +
push offset aEventsink  +
mov [ebp-1F4h] eax +
call sub_42081F  +
push ebx  +
lea ecx [edi+24h] +
mov [ebp-1D0h] eax +
push ecx  +
push offset aHighesteventdu  +
lea ecx [ebp-0C4h] +
call sub_435754  +
push ebx  +
lea ecx [edi+20h] +
mov [ebp-1BCh] eax +
push ecx  +
push offset aTotalevents  +
lea ecx [ebp-114h] +
call sub_435754  +
push ebx  +
lea ecx [edi+1Ch] +
mov [ebp-1E8h] eax +
push ecx  +
push offset aTimewindowactu  +
lea ecx [ebp-164h] +
call sub_435754  +
push 4  +
lea ecx [edi+18h] +
mov ebx eax +
push ecx  +
push offset aTimewindowsett  +
lea ecx [ebp-1B4h] +
call sub_435754  +
push 4  +
lea ecx [ebp-210h] +
mov byte ptr [ebp-1B5h] 0 +
mov edi eax +
call sub_419D3E  +
lea ecx [ebp-1FCh] +
mov dword ptr [ebp-208h] offset off_45958C +
push ecx  +
push dword ptr [ebp-1D0h]  +
lea ecx [ebp-1B5h] +
mov dword ptr [ebp-204h] offset off_46D2BC +
push dword ptr [ebp-1BCh]  +
mov edx eax +
mov dword ptr [ebp-200h] offset aPerftrackingda +
push dword ptr [ebp-1E8h]  +
push ebx  +
push edi  +
push ecx  +
lea ecx [ebp-208h] +
call sub_4389E3  +
lea ecx [ebp-2Ch] +
call sub_4095B6  +
mov ecx [ebp-1DCh] +
test ecx ecx +
jz loc_43884B  +
mov edx [ebp-1CCh] +
sub edx ecx +
and edx 0FFFFFFFCh +
call sub_409590  +
and dword ptr [ebp-1DCh] 0 +
and dword ptr [ebp-1D8h] 0 +
and dword ptr [ebp-1D4h] 0 +
mov edi [ebp-1C8h] +
test edi edi +
jz loc_43889F  +
mov ebx [ebp-1C4h] +
cmp edi ebx +
jz loc_438878  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_43886B  +
call sub_40D683  +
add edi 8 +
cmp edi ebx +
jnz loc_43885F  +
mov edi [ebp-1C8h] +
mov edx [ebp-1C0h] +
mov ecx edi +
sub edx edi +
and edx 0FFFFFFF8h +
call sub_409590  +
and dword ptr [ebp-1C8h] 0 +
and dword ptr [ebp-1C4h] 0 +
and dword ptr [ebp-1C0h] 0 +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4388C4  +
mov eax [esi+4] +
jmp loc_4388B7  +
cmp esi [eax+8] +
jnz loc_4388BD  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4388AD  +
mov esi eax +
jmp loc_4385B4  +
mov esi eax +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jmp loc_4388D8  +
mov eax [ecx] +
mov esi ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
mov [ebp-1BCh] esi +
jz loc_4388CE  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4385BF  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44EDCF  +
leave   +
retn 4  +
***
mov esi ecx +
push ecx  +
push ecx  +
and esp 0FFFFFFF8h +
sub esp 0Ch +
sub esp 14h +
mov eax [esi+4] +
add ecx 0Ch +
push esi  +
inc dword ptr [ecx+4]  +
test [ebp+arg_0] 1 +
mov edx [ebp+arg_0] +
mov edx [ebp+arg_0] +
sub esp 44h +
push ecx  +
call sub_4504FC  +
sub esp 0Ch +
mov ecx [esi+18h] +
push edi  +
mov ecx offset dword_47C4D8 +
push 0FFFFFFFFh  +
push offset loc_4512EA  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+arg_0]  +
mov ecx [esi+4] +
call sub_43CD0D  +
mov ecx [ebp+arg_0] +
push 1  +
push offset unk_46D264  +
call sub_416F7B  +
mov ecx [esi+8] +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4390B7  +
sub ecx edx +
push ecx  +
push dword ptr [esi+8]  +
mov ecx [ebp+arg_0] +
call sub_416F7B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn 4  +
***
lea ecx [esi+0Ch] +
sub esp 1Ch +
push 0FFFFFFFFh  +
mov ecx esi +
push ecx  +
push ecx  +
mov eax [esi-50h] +
call sub_4504FC  +
call sub_4504FC  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [esi] 0 +
xor edi edi +
push 24h  +
mov [esi+4] edi +
mov [esi+8] edi +
call ds:malloc  +
pop ecx  +
test eax eax +
jnz loc_4395D4  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
mov [eax] eax +
mov [eax+4] eax +
mov [esi+4] eax +
lea ecx [esi+0Ch] +
mov [ebp-4] edi +
mov [ecx] edi +
mov [ecx+4] edi +
mov [ecx+8] edi +
mov byte ptr [ebp-4] 1 +
mov dword ptr [esi+18h] 7 +
mov dword ptr [esi+1Ch] 8 +
mov dword ptr [esi] 3F800000h +
push dword ptr [esi+4]  +
push 10h  +
call sub_4111B4  +
mov eax esi +
call sub_4504D0  +
retn   +
***
mov ecx [esi] +
call sub_4504FC  +
call sub_4504FC  +
call sub_450565  +
mov eax offset loc_4397EB +
push ecx  +
call sub_4504FC  +
sub esp 34h +
mov eax [edx+4] +
push edi  +
and dword ptr [eax] 0 +
mov edi [edx] +
test edi edi +
jz loc_439A2E  +
push esi  +
mov esi [edi] +
lea ecx [edi+8] +
call sub_4096E8  +
push edi  +
call ds:free  +
mov edi esi +
pop ecx  +
test esi esi +
jnz loc_439A15  +
pop esi  +
pop edi  +
retn   +
***
push ecx  +
sub esp 18h +
mov eax [ecx+18h] +
push ecx  +
test [ebp+arg_0] 1 +
cmp dword ptr [edx+14h] 10h +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset off_46D230 +
pop ebp  +
retn 4  +
***
sub ecx [ecx-4] +
push edi  +
mov eax [ebp+arg_0] +
push esi  +
lea ecx [esi+0E0h] +
push 0FFFFFFFFh  +
sub esp 18h +
sub esp 24h +
push 0FFFFFFFFh  +
push esi  +
push esi  +
push ebx  +
push edi  +
sub esp 0Ch +
push edi  +
push ebx  +
add ecx 4 +
add ecx 4 +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
test esi esi +
mov edi ecx +
call sub_43AA7F  +
push edi  +
call sub_4504FC  +
push ebx  +
sub esp 10h +
sub esp 14h +
int 3  +
***
mov esi ecx +
push 0FFFFFFFFh  +
push esi  +
mov ecx [esi+24h] +
push ecx  +
mov edx [ebp+arg_4] +
push ecx  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
call sub_45052F  +
push ebx  +
call sub_45052F  +
mov dword ptr [ecx] offset off_46D6AC +
push esi  +
lea ecx [esi+0D8h] +
mov eax [ecx+8] +
push ebx  +
push ebx  +
call sub_450565  +
lea ecx [esi+60h] +
push esi  +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
call sub_436288  +
test [ebp+arg_0] 1 +
jz loc_43B8E3  +
push esi  +
call ds:free  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push ecx  +
mov al byte_47C5C4 +
test esi esi +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push 0FFFFFFFFh  +
call sub_4504FC  +
push ecx  +
push esi  +
mov ecx [esi+60h] +
push 0FFFFFFFFh  +
push ecx  +
push esi  +
lea ecx [esi+34h] +
push esi  +
test esi esi +
mov eax [edx+10h] +
call sub_450565  +
push ecx  +
and esp 0FFFFFFF8h +
call sub_450565  +
mov ecx offset dword_47C4D8 +
mov eax dword_47C4DC +
mov eax [ebp+arg_0] +
push esi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
mov eax large fs:2Ch +
mov eax large fs:2Ch +
mov eax [ebp+arg_0] +
sub esp 0Ch +
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
sub esp 0Ch +
mov eax [ebp+arg_4] +
mov eax [ecx] +
push esi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
call sub_45052F  +
call sub_4504FC  +
mov edi ecx +
mov ebx [ebp+0Ch] +
mov edx ebx +
cmp dword ptr [ebx+14h] 10h +
jb loc_43DC59  +
mov edx [ebx] +
push dword ptr [ebx+10h]  +
call sub_411289  +
push eax  +
mov [ebp+0Ch] eax +
mov ecx edi +
push ebx  +
lea eax [ebp-18h] +
push eax  +
call sub_439C34  +
mov ecx [ebp-14h] +
test ecx ecx +
jz loc_43DC86  +
mov eax [ebp+8] +
mov [eax] ecx +
mov byte ptr [eax+4] 0 +
jmp loc_43DD83  +
cmp dword ptr [edi+8] 71C71C7h +
jnz loc_43DC9A  +
push offset aUnordered_mapS  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
lea eax [edi+4] +
mov [ebp-20h] eax +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-1Ch] 0 +
push 24h  +
call ds:malloc  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_43DCBD  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
lea ecx [esi+8] +
mov [ebp-1Ch] esi +
push ebx  +
call sub_40D2F0  +
and dword ptr [esi+20h] 0 +
mov dword ptr [ebp-4] 1 +
mov eax [edi+8] +
inc eax  +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
addsd xmm0 ds:qword_46EF60[eax*8] +
mov eax [edi+1Ch] +
cvtpd2ps xmm1 xmm0 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
addsd xmm0 ds:qword_46EF60[eax*8] +
cvtpd2ps xmm0 xmm0 +
divss xmm1 xmm0 +
comiss xmm1 dword ptr [edi] +
jbe loc_43DD32  +
mov ecx edi +
call sub_439A53  +
mov ebx [ebp+0Ch] +
lea eax [esi+8] +
push ebx  +
push eax  +
lea eax [ebp-20h] +
mov ecx edi +
push eax  +
call sub_439C34  +
mov edx [eax] +
jmp loc_43DD38  +
mov edx [ebp-18h] +
mov ebx [ebp+0Ch] +
mov eax [edi+8] +
mov ecx [edx+4] +
inc eax  +
mov [edi+8] eax +
mov [esi] edx +
mov [esi+4] ecx +
mov [ecx] esi +
mov [edx+4] esi +
mov eax [edi+18h] +
mov [ebp+0Ch] ecx +
and eax ebx +
mov ecx [edi+0Ch] +
mov ebx [ecx+eax*8] +
cmp ebx [edi+4] +
jnz loc_43DD64  +
mov [ecx+eax*8] esi +
jmp loc_43DD76  +
cmp ebx edx +
jnz loc_43DD6D  +
mov [ecx+eax*8] esi +
jmp loc_43DD7A  +
mov edx [ebp+0Ch] +
cmp [ecx+eax*8+4] edx +
jnz loc_43DD7A  +
mov [ecx+eax*8+4] esi +
mov eax [ebp+8] +
mov [eax] esi +
mov byte ptr [eax+4] 1 +
call sub_4504D0  +
retn 8  +
***
push esi  +
mov eax [ebp+arg_0] +
push ecx  +
push esi  +
mov eax [esi] +
push ebx  +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
sub esp 14h +
mov eax [esi+4] +
call sub_4504FC  +
push 0FFFFFFFFh  +
mov ecx 655691h +
push 0FFFFFFFFh  +
mov ecx 655692h +
push 0FFFFFFFFh  +
mov ecx 655693h +
push 0FFFFFFFFh  +
mov ecx 655694h +
push 0FFFFFFFFh  +
mov ecx 655695h +
push 0FFFFFFFFh  +
mov ecx 6DC48Fh +
push 0FFFFFFFFh  +
mov ecx 78E1C1h +
push 0FFFFFFFFh  +
mov ecx 106325Ch +
push 0FFFFFFFFh  +
mov ecx 106325Dh +
push 0FFFFFFFFh  +
mov ecx 10D2044h +
push 0FFFFFFFFh  +
mov ecx 10D7785h +
push 0FFFFFFFFh  +
mov ecx 655696h +
push 0FFFFFFFFh  +
mov ecx 68665Fh +
push 0FFFFFFFFh  +
mov ecx 686660h +
push 0FFFFFFFFh  +
mov ecx 8953C1h +
push 0FFFFFFFFh  +
mov ecx 114B0C7h +
push 0FFFFFFFFh  +
mov ecx 114B0C8h +
push 0FFFFFFFFh  +
mov ecx 114B0C9h +
push 0FFFFFFFFh  +
mov ecx 114B0CAh +
push 0FFFFFFFFh  +
mov ecx 23D0316h +
push 0FFFFFFFFh  +
mov ecx 23D0317h +
lea ecx [esi+34h] +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
push 0FFFFFFFFh  +
call sub_45052F  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov dl 1 +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
push 0FFFFFFFFh  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
push esi  +
call sub_4504FC  +
push esi  +
lea ecx [esi+8] +
mov ecx [esi] +
push ebx  +
mov ecx [esi] +
push ecx  +
test esi esi +
test esi esi +
push ecx  +
push ecx  +
push esi  +
sub esp 10h +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov ecx [ecx+4] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov ecx [ecx+4] +
mov eax [ebp+arg_0] +
mov ecx [ecx+4] +
mov eax [ebp+arg_0] +
add ecx 4 +
mov eax [ebp+arg_0] +
push esi  +
add ecx 4 +
push esi  +
mov eax [ebp+arg_0] +
push ecx  +
mov eax [ebp+arg_0] +
mov eax off_477A70 +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ecx+4] +
mov eax [ebp+arg_0] +
mov eax [ecx+4] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push esi  +
lea eax [ecx+4] +
call sub_4504FC  +
mov edx [ecx+8] +
mov eax [ebp+arg_0] +
sub esp 10h +
mov eax [ebp+arg_0] +
push esi  +
add ecx 4 +
call sub_4504FC  +
mov eax [ebp+arg_0] +
sub esp 10h +
mov eax [ebp+arg_0] +
add ecx 4 +
call sub_4504FC  +
call sub_4504FC  +
call sub_4504FC  +
push esi  +
movzx esi word ptr [ecx+edx*2] +
mov eax esi +
cmp eax 2Eh +
ja loc_43FA15  +
jz loc_43FA0B  +
sub eax 0 +
jz loc_43FA01  +
sub eax 24h +
jz loc_43F9F7  +
sub eax 4 +
jz loc_43F9ED  +
sub eax 1 +
jz loc_43F9E3  +
sub eax 1 +
jz loc_43F9D9  +
sub eax 1 +
jnz loc_43FA3C  +
mov ecx 0FFEEh +
jmp loc_43FB3C  +
mov ecx 0FFEFh +
jmp loc_43FB3C  +
mov ecx 0FFF4h +
jmp loc_43FB3C  +
mov ecx 0FFF5h +
jmp loc_43FB3C  +
mov ecx 0FFEBh +
jmp loc_43FB3C  +
mov ecx 0FFFFh +
jmp loc_43FB3C  +
mov ecx 0FFFEh +
jmp loc_43FB3C  +
sub eax 3Fh +
jz loc_43FB37  +
sub eax 1Ch +
jz loc_43FB30  +
sub eax 1 +
jz loc_43FA61  +
dec eax  +
sub eax 1 +
jz loc_43FA57  +
sub eax 1Dh +
jz loc_43FA4D  +
sub eax 1 +
jz loc_43FA43  +
mov ecx esi +
jmp loc_43FB3C  +
mov ecx 0FFEAh +
jmp loc_43FB3C  +
mov ecx 0FFF3h +
jmp loc_43FB3C  +
mov ecx 0FFECh +
jmp loc_43FB3C  +
movzx eax word ptr [ecx+edx*2+2] +
mov ecx [ebp+arg_0] +
mov [ecx] ax +
cmp eax 44h +
ja loc_43FAD5  +
jz loc_43FACE  +
sub eax 31h +
cmp eax 8 +
ja loc_43FB2B  +
jmp ds:off_43FB4A[eax*4]  +
mov eax 0FFE1h +
jmp loc_43FB28  +
mov eax 0FFE2h +
jmp loc_43FB28  +
mov eax 0FFE3h +
jmp loc_43FB28  +
mov eax 0FFE4h +
jmp loc_43FB28  +
mov eax 0FFE5h +
jmp loc_43FB28  +
mov eax 0FFE6h +
jmp loc_43FB28  +
mov eax 0FFE7h +
jmp loc_43FB28  +
mov eax 0FFE8h +
jmp loc_43FB28  +
mov eax 0FFE9h +
jmp loc_43FB28  +
mov eax 0FFF8h +
jmp loc_43FB28  +
sub eax 53h +
jz loc_43FB23  +
sub eax 4 +
jz loc_43FB1C  +
sub eax 0Bh +
jz loc_43FB15  +
dec eax  +
sub eax 1 +
jz loc_43FB0E  +
sub eax 0Ah +
jz loc_43FB07  +
sub eax 5 +
jz loc_43FB00  +
sub eax 4 +
jnz loc_43FB2B  +
mov eax 0FFF7h +
jmp loc_43FB28  +
mov eax 0FFFDh +
jmp loc_43FB28  +
mov eax 0FFE0h +
jmp loc_43FB28  +
mov eax 0FFF9h +
jmp loc_43FB28  +
mov eax 0FFDFh +
jmp loc_43FB28  +
mov eax 0FFF6h +
jmp loc_43FB28  +
mov eax 0FFFCh +
mov [ecx] ax +
lea eax [edx+2] +
jmp loc_43FB45  +
mov ecx 0FFF1h +
jmp loc_43FB3C  +
mov ecx 0FFEDh +
mov eax [ebp+arg_0] +
mov [eax] cx +
lea eax [edx+1] +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_4504FC  +
mov ebx ecx +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_43FDAE  +
mov dword ptr [ebp-10h] offset unk_459094 +
and dword ptr [ebp-4] 0 +
lea edx [ebp-10h] +
mov eax [ecx] +
push edx  +
mov eax [eax] +
call eax  +
test al al +
jz loc_43FDA3  +
cmp dword ptr [ebx+4] 0 +
jbe loc_43FD77  +
mov esi [ebp-10h] +
mov ecx offset unk_458F6C +
cmp esi ecx +
ja loc_43FBCD  +
mov eax [esi-4] +
cdq   +
sub eax edx +
sar eax 1 +
lea eax [esi+eax*2] +
cmp eax ecx +
ja loc_43FD7A  +
mov eax [esi-4] +
xor ecx ecx +
cdq   +
sub eax edx +
sar eax 1 +
test eax eax +
mov [ebp-1Ch] eax +
mov edi eax +
cmovg edi ecx +
test edi edi +
cmovs edi ecx +
sub eax edi +
test eax eax +
cmovg eax ecx +
test eax eax +
cmovs eax ecx +
mov ecx offset unk_458F6C +
mov [ebp-14h] eax +
call sub_418A09  +
mov edx eax +
mov eax [ebp-1Ch] +
sub eax [ebp-14h] +
mov [ebp-1Ch] eax +
add eax edx +
mov [ebp-20h] edx +
mov [ebp-18h] eax +
cmp [ebp-14h] edx +
jge loc_43FD0C  +
mov eax [esi-8] +
add esi 0FFFFFFF4h +
test eax eax +
mov ecx 4FFFFFh +
cmovle eax ecx +
dec eax  +
cmp eax [ebp-18h] +
cmovge eax [ebp-18h] +
mov edx eax +
mov [ebp-18h] eax +
sub edx edi +
mov ecx eax +
cmp [ebp-20h] edx +
push eax  +
cmovl edx [ebp-20h] +
sub ecx edx +
mov [ebp-1Ch] edx +
sub ecx edi +
mov [ebp-20h] ecx +
mov ecx esi +
call sub_418457  +
test al al +
jz loc_43FCBA  +
mov ecx [ebp-18h] +
call sub_418477  +
mov ecx [ebp-18h] +
xor edx edx +
mov [eax+ecx*2+0Ch] dx +
add ecx ecx +
mov [eax+8] ecx +
lea ecx [eax+0Ch] +
lea eax [edi+edi] +
mov [ebp-10h] ecx +
push eax  +
lea eax [esi+0Ch] +
push eax  +
push ecx  +
call j_memcpy  +
mov eax [ebp-20h] +
add esp 0Ch +
test eax eax +
jle loc_43FCB1  +
mov edx [ebp-1Ch] +
add eax eax +
push eax  +
mov eax [ebp-14h] +
add edx edi +
add eax 6 +
add eax edi +
lea eax [esi+eax*2] +
push eax  +
mov eax [ebp-10h] +
lea eax [eax+edx*2] +
push eax  +
call j_memcpy  +
add esp 0Ch +
mov ecx esi +
call sub_4184E5  +
jmp loc_43FCF0  +
mov eax [ebp-18h] +
xor ecx ecx +
mov [esi+eax*2+0Ch] cx +
add eax eax +
mov [esi+8] eax +
mov eax [ebp-20h] +
test eax eax +
jle loc_43FCF0  +
mov ecx [ebp-14h] +
add eax eax +
push eax  +
mov eax [ebp-10h] +
add ecx edi +
lea ecx [eax+ecx*2] +
push ecx  +
mov ecx [ebp-1Ch] +
add ecx edi +
lea eax [eax+ecx*2] +
push eax  +
call j_memmove  +
add esp 0Ch +
mov eax [ebp-1Ch] +
add eax eax +
push eax  +
mov eax [ebp-10h] +
push offset unk_458F6C  +
lea eax [eax+edi*2] +
push eax  +
call j_memcpy  +
add esp 0Ch +
jmp loc_43FD77  +
lea ecx [ebp-10h] +
test eax eax +
jle loc_43FD72  +
call sub_418502  +
mov esi [ebp-20h] +
mov [ebp-24h] eax +
lea ecx [esi+esi] +
push ecx  +
mov ecx [ebp-10h] +
push offset unk_458F6C  +
lea ecx [ecx+edi*2] +
push ecx  +
call j_memcpy  +
mov ecx [ebp-14h] +
add esp 0Ch +
cmp esi ecx +
jge loc_43FD77  +
mov eax [ebp-1Ch] +
add ecx edi +
sub eax edi +
add eax eax +
push eax  +
mov eax [ebp-10h] +
lea ecx [eax+ecx*2] +
push ecx  +
lea ecx [esi+edi] +
lea eax [eax+ecx*2] +
push eax  +
call j_memmove  +
mov ecx [ebp-18h] +
add esp 0Ch +
mov edx [ebp-24h] +
xor eax eax +
mov [edx+ecx*2+0Ch] ax +
lea eax [ecx+ecx] +
mov [edx+8] eax +
jmp loc_43FD77  +
call sub_41859F  +
mov esi [ebp-10h] +
inc dword ptr [ebx+4]  +
lea ecx [ebx+8] +
mov eax [esi-4] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
call sub_4185F7  +
mov ecx [ebp-10h] +
mov eax [ebx+8] +
mov [ebx] eax +
lea ecx [ecx-0Ch] +
call sub_4184E5  +
mov al 1 +
jmp loc_43FDB0  +
mov eax [ebp-10h] +
lea ecx [eax-0Ch] +
call sub_4184E5  +
xor al al +
call sub_4504D0  +
retn   +
***
mov eax [ebp+arg_0] +
xor eax eax +
cmp dword ptr [ecx+0Ch] 0 +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_4] +
mov ecx edi +
push offset nullsub_1  +
push offset sub_4415C9  +
push offset sub_4415E5  +
push esi  +
push 8  +
call sub_417520  +
mov eax esi +
shl eax 3 +
push eax  +
push dword ptr [ebx+0Ch]  +
push dword ptr [edi]  +
call j_memcpy  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ebx  +
push 0FFFFFFFFh  +
push offset loc_4512EA  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset sub_43FE40  +
lea esi [ecx-4] +
push dword ptr [esi]  +
push 10h  +
push ecx  +
call sub_44EDFF  +
test esi esi +
jz loc_440084  +
push esi  +
call ds:free  +
pop ecx  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn 4  +
***
call sub_4504FC  +
push edi  +
push ecx  +
sub esp 10h +
mov edx [ebp+arg_0] +
call sub_4504FC  +
mov esi ecx +
mov eax [ebp+8] +
xor ebx ebx +
inc ebx  +
mov [ebp-38h] eax +
xor edx edx +
mov [ebp-34h] ebx +
mov dword ptr [ebp-30h] offset unk_459094 +
mov [ebp-2Ch] edx +
mov edi [ebp+0Ch] +
mov [ebp-4] edx +
mov eax [esi+24h] +
mov [ebp+8] edi +
cmp eax 0FFFFFFFFh +
jz loc_4404CF  +
lea ecx [ebp+8] +
imul eax eax +
push ecx  +
lea ecx [ebp-38h] +
push ecx  +
push edx  +
add eax [esi+14h] +
mov ecx esi +
push eax  +
call sub_4408E5  +
test al al +
jz loc_440584  +
xor edx edx +
mov [ebp-28h] edx +
mov [ebp-24h] edx +
mov [ebp-20h] edx +
mov [ebp-1Ch] edx +
mov [ebp-18h] edx +
mov [ebp-14h] edx +
mov [ebp-10h] edx +
push edi  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea eax [ebp-18h] +
mov ecx esi +
push eax  +
lea eax [ebp-28h] +
push eax  +
call sub_4401C8  +
test al al +
jz loc_44054A  +
push dword ptr [ebp+10h]  +
lea ecx [ebp-28h] +
push dword ptr [esi+20h]  +
call sub_43FEE6  +
mov [ebp-4] bl +
mov eax [ebp-10h] +
mov edi ds:free +
test eax eax +
jz loc_44053C  +
push offset sub_43FE40  +
lea esi [eax-4] +
mov byte ptr [ebp-4] 3 +
push dword ptr [esi]  +
push 10h  +
push eax  +
call sub_44EDFF  +
test esi esi +
jz loc_44053C  +
push esi  +
call edi  +
pop ecx  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_440586  +
push dword ptr [ebp-1Ch]  +
call edi  +
pop ecx  +
jmp loc_440586  +
mov [ebp-4] bl +
mov eax [ebp-10h] +
mov edi ds:free +
test eax eax +
jz loc_440578  +
push offset sub_43FE40  +
lea esi [eax-4] +
mov byte ptr [ebp-4] 4 +
push dword ptr [esi]  +
push 10h  +
push eax  +
call sub_44EDFF  +
test esi esi +
jz loc_440578  +
push esi  +
call edi  +
pop ecx  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_440584  +
push dword ptr [ebp-1Ch]  +
call edi  +
pop ecx  +
xor bl bl +
mov ecx [ebp-30h] +
add ecx 0FFFFFFF4h +
call sub_4184E5  +
mov al bl +
call sub_4504D0  +
retn 0Ch  +
***
call sub_4504FC  +
call sub_4504FC  +
pop edx  +
sub esp 10h +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
xor ebx ebx +
mov eax [eax] +
mov [ebp+var_8] eax +
mov [ebp+var_4] ecx +
mov edx [esi] +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_C] edx +
lea eax [eax+edx*2] +
movzx ecx word ptr [eax] +
cmp si cx +
mov [ebp+var_10] eax +
mov esi [ebp+arg_C] +
jnz loc_44096E  +
mov ecx [edi+24h] +
cmp ecx 6 +
jnz loc_440928  +
test edx edx +
jmp loc_4409ED  +
cmp ecx 9 +
jnz loc_440946  +
mov ecx [ebp+arg_8] +
call sub_43FB6E  +
mov bl al +
test bl bl +
jz loc_440B20  +
inc dword ptr [esi]  +
jmp loc_440B20  +
cmp ecx 8 +
jnz loc_440969  +
test edx edx +
jz loc_440B20  +
mov cx [eax-2] +
call sub_4408BB  +
test al al +
jnz loc_440B1E  +
jmp loc_440B20  +
cmp ecx 7 +
jmp loc_4409ED  +
mov esi [edi+24h] +
dec esi  +
mov [ebp+arg_8] esi +
cmp esi 0Ah +
mov esi [ebp+arg_C] +
ja loc_440B20  +
mov edx [ebp+arg_8] +
jmp ds:off_440B29[edx*4]  +
mov edx [ebp+var_C] +
push 0Ah  +
pop eax  +
cmp ax cx +
jz loc_440B20  +
lea eax [edx+1] +
mov [esi] eax +
jmp loc_440B1E  +
call sub_40CF0A  +
test eax eax +
setnz al  +
cmp al [edi+19h] +
jz loc_440B20  +
inc dword ptr [esi]  +
jmp loc_440B1E  +
call sub_40CEBB  +
jmp loc_4409A9  +
call sub_4408BB  +
jmp loc_4409AE  +
cmp [esi] ebx +
jz loc_440B1E  +
push 0Ah  +
pop ecx  +
cmp cx [eax-2] +
jnz loc_440B20  +
jmp loc_440B1E  +
push 0Ah  +
pop ecx  +
cmp cx [eax+2] +
setz bl  +
jmp loc_440B20  +
call sub_4408BB  +
mov bl al +
mov eax [esi] +
test eax eax +
jz loc_440B20  +
mov edx [ebp+var_8] +
mov cx [edx+eax*2-2] +
call sub_4408BB  +
cmp bl al +
setnz bl  +
jmp loc_440B20  +
mov edx [esi] +
push 0Ah  +
pop eax  +
cmp ax cx +
jnz loc_440B20  +
jmp loc_44099A  +
mov ecx [ebp+arg_4] +
mov edx [esi] +
test ecx ecx +
jz loc_440B20  +
mov eax [ebp+var_4] +
mov edi [edi+30h] +
cmp edi [eax+20h] +
jnb loc_440B20  +
mov eax [ecx+edi*8] +
mov ecx [ecx+edi*8+4] +
mov [ebp+arg_0] eax +
cmp eax ecx +
jge loc_440A81  +
mov edi [ebp+var_10] +
mov esi eax +
mov edx [ebp+var_8] +
mov ax [edx+esi*2] +
cmp ax [edi] +
jnz loc_440A73  +
inc esi  +
add edi 2 +
cmp esi ecx +
jl loc_440A62  +
mov edx [ebp+var_C] +
mov [ebp+arg_8] esi +
mov eax [ebp+arg_8] +
cmp eax ecx +
mov esi [ebp+arg_C] +
jnz loc_440B20  +
sub ecx [ebp+arg_0] +
jmp loc_440B1A  +
mov edx [edi+2Ch] +
mov al bl +
cmp [edi+28h] edx +
mov edx [esi] +
jnb loc_440ACA  +
mov eax [ebp+var_4] +
mov esi [edi+28h] +
mov eax [eax+8] +
lea eax [eax+esi*2] +
mov esi [ebp+arg_C] +
mov [ebp+arg_0] eax +
mov eax [edi+28h] +
mov edx [ebp+arg_0] +
cmp [edx] cx +
mov edx [esi] +
jz loc_440AC8  +
add [ebp+arg_0] 2 +
inc eax  +
cmp eax [edi+2Ch] +
jb loc_440AB0  +
mov al bl +
jmp loc_440ACA  +
mov al 1 +
cmp al [edi+19h] +
jmp loc_440994  +
mov eax [edi+28h] +
mov ecx [edi+2Ch] +
mov edi eax +
mov edx [esi] +
mov [ebp+arg_8] eax +
cmp edi ecx +
jnb loc_440B16  +
mov eax [ebp+var_4] +
mov eax [eax+8] +
lea esi [eax+edi*2] +
mov eax edx +
mov edx [ebp+var_8] +
sub eax edi +
add eax edi +
lea edx [edx+eax*2] +
mov ax [esi] +
cmp ax [edx] +
jnz loc_440B0B  +
inc edi  +
add esi 2 +
add edx 2 +
cmp edi ecx +
jb loc_440AF8  +
mov esi [ebp+arg_C] +
cmp edi ecx +
mov edx [ebp+var_C] +
mov eax [ebp+arg_8] +
jnz loc_440B20  +
sub ecx eax +
add ecx edx +
mov [esi] ecx +
mov bl 1 +
pop edi  +
pop esi  +
mov al bl +
pop ebx  +
leave   +
retn 10h  +
***
sub esp 10h +
push ebx  +
mov eax ecx +
push esi  +
push edi  +
or edi 0FFFFFFFFh +
mov [ebp+var_10] eax +
or ebx edi +
mov [ebp+var_8] edi +
lea esi [eax+14h] +
mov [ebp+var_C] ebx +
mov ebx [eax+18h] +
mov ecx esi +
call sub_44159E  +
mov ecx [ebp+arg_0] +
xor edx edx +
inc edx  +
or [eax+4] edi +
mov [eax] ecx +
xor ecx ecx +
mov [eax+19h] cx +
mov [eax+1Bh] cl +
mov [eax+1Ch] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov ecx [ebp+var_10] +
mov [eax+10h] edx +
mov [eax+14h] edx +
mov [eax+18h] dl +
mov [eax+20h] edx +
jmp loc_440CBE  +
imul edi ebx +
add edi [esi] +
mov [edi+24h] edx +
cmp edx 0FFFFFFFFh +
jz loc_440BF3  +
cmp edx [esi+4] +
jnb loc_440CE3  +
mov eax [esi] +
imul ecx edx +
mov al [ecx+eax+1Ah] +
mov [edi+1Ah] al +
cmp edx [esi+4] +
jnb loc_440CE3  +
mov ecx [esi] +
imul eax edx +
cmp dword ptr [eax+ecx+4] 0FFFFFFFFh +
jz loc_440BE9  +
mov edx [eax+ecx+4] +
jmp loc_440BCE  +
imul eax edx +
mov al [eax+ecx+1Bh] +
mov [edi+1Bh] al +
mov eax [ebp+arg_0] +
cmp eax [esi+4] +
jnb loc_440CE3  +
mov edx [ebp+var_8] +
imul ecx eax +
mov al [edi+1Ah] +
add ecx [esi] +
cmp edx 0FFFFFFFFh +
jnz loc_440C1A  +
mov [ecx+1Ah] al +
mov al [edi+1Bh] +
mov [ecx+1Bh] al +
jmp loc_440C23  +
and [ecx+1Ah] al +
mov al [edi+1Bh] +
and [ecx+1Bh] al +
cmp byte ptr [ecx+2Ch] 0 +
jz loc_440C3F  +
mov eax [edi+8] +
cmp eax [ecx+8] +
jge loc_440C34  +
mov [ecx+8] eax +
mov eax [edi+0Ch] +
cmp [ecx+0Ch] eax +
jge loc_440C3F  +
mov [ecx+0Ch] eax +
mov eax [ebp+var_C] +
cmp edx 0FFFFFFFFh +
mov edi ebx +
cmovnz edi edx +
mov [ebp+var_8] edi +
cmp eax 0FFFFFFFFh +
jz loc_440C64  +
cmp eax [esi+4] +
jnb loc_440CE3  +
imul ecx eax +
mov eax [esi] +
mov [ecx+eax+4] ebx +
mov ecx [ebp+arg_4] +
lea eax [ebp+var_4] +
mov [ebp+var_C] ebx +
mov ebx [ebp+arg_8] +
push eax  +
mov edx [ebx] +
call sub_43F9A0  +
mov ecx 0FFEAh +
cmp cx word ptr [ebp+var_4] +
jnz loc_440CDA  +
mov edi [ebp+var_10] +
mov ecx esi +
mov [ebx] eax +
mov ebx [edi+18h] +
call sub_44159E  +
mov ecx [ebp+arg_0] +
xor edx edx +
inc edx  +
mov [eax] ecx +
or dword ptr [eax+4] 0FFFFFFFFh +
xor ecx ecx +
mov [eax+10h] edx +
mov [eax+14h] edx +
mov [eax+18h] dl +
mov [eax+19h] cx +
mov [eax+1Bh] cl +
mov [eax+1Ch] ecx +
mov [eax+20h] edx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov ecx edi +
push [ebp+arg_8]  +
or dword ptr [eax+24h] 0FFFFFFFFh +
push [ebp+arg_4]  +
push ebx  +
call loc_440CF0  +
mov edx eax +
cmp ebx [esi+4] +
jnb loc_440CE3  +
jmp loc_440BAC  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push 0  +
push 237C47E3h  +
call sub_40D3A8  +
int 3  +
***
push ebp  +
mov ebp esp +
sub esp 30h +
or dword ptr [ebp-20h] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-24h] eax +
push edi  +
mov edi [ebp+10h] +
mov [ebp-10h] esi +
mov dword ptr [ebp-2Ch] 5Dh +
mov dword ptr [ebp-30h] 2Dh +
mov eax [esi+18h] +
mov ecx [ebp+0Ch] +
mov edx [edi] +
mov [ebp-18h] eax +
lea eax [ebp-0Ch] +
push eax  +
call sub_43F9A0  +
mov edi [ebp-0Ch] +
mov edx eax +
movzx ebx di +
mov eax ebx +
sub eax 0FFEAh +
jz loc_44127A  +
sub eax 0Ah +
jz loc_44127A  +
sub eax 1 +
jz loc_441140  +
sub eax 0Ah +
jz loc_44127A  +
mov eax [ebp+10h] +
mov [eax] edx +
lea eax [esi+14h] +
mov ecx eax +
mov [ebp-14h] eax +
call sub_44159E  +
mov esi eax +
xor ecx ecx +
mov eax [ebp+8] +
xor edx edx +
inc edx  +
or dword ptr [esi+4] 0FFFFFFFFh +
mov [esi+19h] cx +
mov [esi+1Bh] cl +
mov [esi+8] edx +
mov [esi+0Ch] edx +
or dword ptr [esi+30h] 0FFFFFFFFh +
mov [esi] eax +
lea eax [ebx-0FFDFh] +
mov [esi+10h] edx +
mov [esi+14h] edx +
mov [esi+18h] dl +
mov [esi+1Ch] ecx +
mov dword ptr [esi+20h] 2 +
mov [esi+28h] ecx +
mov [esi+2Ch] ecx +
cmp eax 1Fh +
ja loc_44104B  +
movzx eax ds:byte_4412C8[eax] +
jmp ds:off_441290[eax*4]  +
mov dword ptr [esi+24h] 2 +
mov edi [ebp+10h] +
mov esi [ebp+0Ch] +
cmp dword ptr [ebp-20h] 0FFFFFFFFh +
mov edx [ebp-18h] +
mov eax edx +
cmovnz eax [ebp-20h] +
mov ebx [ebp-14h] +
mov [ebp-20h] eax +
mov eax [ebp-24h] +
cmp eax 0FFFFFFFFh +
jz loc_440E00  +
cmp eax [ebx+4] +
jnb loc_441284  +
imul ecx eax +
mov eax [ebx] +
mov [ecx+eax+4] edx +
mov ecx [ebp-10h] +
push edi  +
push esi  +
push edx  +
mov [ebp-24h] edx +
call sub_4412E8  +
mov eax [ebp+8] +
cmp eax [ebx+4] +
jnb loc_441284  +
imul ecx eax +
mov eax [ebp-18h] +
add ecx [ebx] +
cmp eax [ebx+4] +
jnb loc_441284  +
mov esi [ecx+0Ch] +
imul edx eax +
add edx [ebx] +
mov ebx 7FFFFFFFh +
mov eax [edx+8] +
add [ecx+8] eax +
cmp esi ebx +
jge loc_441272  +
mov eax [edx+0Ch] +
cmp eax ebx +
jge loc_44126F  +
add eax esi +
mov [ecx+0Ch] eax +
jmp loc_441272  +
mov dword ptr [esi+24h] 3 +
jmp loc_440DCD  +
***
mov dword ptr [esi+24h] 4 +
jmp loc_440DCD  +
***
mov dword ptr [esi+24h] 5 +
jmp loc_440DCD  +
***
mov dword ptr [esi+24h] 6 +
mov [esi+8] ecx +
mov [esi+0Ch] ecx +
mov [esi+1Ah] dl +
jmp loc_440DCD  +
***
mov dword ptr [esi+24h] 7 +
mov [esi+8] ecx +
mov [esi+0Ch] ecx +
mov [esi+1Bh] dl +
jmp loc_440DCD  +
***
mov dword ptr [esi+24h] 8 +
jmp loc_440DCD  +
***
mov dword ptr [esi+24h] 9 +
jmp loc_440DCD  +
***
mov dword ptr [esi+24h] 3 +
mov al 1 +
mov [esi+19h] al +
jmp loc_440DCD  +
***
mov dword ptr [esi+24h] 4 +
jmp loc_440EC8  +
***
mov dword ptr [esi+24h] 5 +
jmp loc_440EC8  +
***
mov [esi+8] ecx +
lea eax [ebx-0FFE0h] +
mov dword ptr [esi+0Ch] 7FFFFFFFh +
mov dword ptr [esi+24h] 0Bh +
mov [esi+30h] eax +
jmp loc_440DCD  +
***
mov eax [ebp-10h] +
mov edi [ebp+10h] +
mov ebx [ebp+0Ch] +
mov ecx ebx +
mov dword ptr [esi+24h] 0Ah +
mov eax [eax+0Ch] +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
lea eax [ebp-0Ch] +
mov edx [edi] +
push eax  +
call sub_43F9A0  +
mov ecx 0FFECh +
cmp cx [ebp-0Ch] +
jnz loc_440F40  +
mov [edi] eax +
cmp byte ptr [esi+19h] 0 +
setz al  +
mov [esi+19h] al +
mov byte ptr [ebp-1] 0 +
mov ecx [edi] +
push 5Dh  +
movzx edx word ptr [ebx+ecx*2] +
mov eax edx +
mov ebx edx +
mov [ebp-28h] eax +
pop eax  +
mov [ebp-1Ch] ebx +
mov [ebp-0Ch] ebx +
cmp ax dx +
jnz loc_440F6B  +
mov eax [esi+28h] +
cmp eax [esi+2Ch] +
jb loc_441041  +
xor eax eax +
cmp ax dx +
jz loc_440DD0  +
lea eax [ecx+1] +
push 2Dh  +
mov [edi] eax +
pop eax  +
cmp ax bx +
jnz loc_440F94  +
mov eax [esi+28h] +
cmp eax [esi+2Ch] +
jnb loc_440F94  +
mov byte ptr [ebp-1] 1 +
jmp loc_441039  +
push 5Ch  +
pop edx  +
cmp dx [ebp-28h] +
jnz loc_440FC0  +
mov eax [ebp+0Ch] +
movzx eax word ptr [eax+ecx*2+2] +
cmp [ebp-2Ch] ax +
jz loc_440FB6  +
cmp [ebp-30h] ax +
jz loc_440FB6  +
cmp dx ax +
jnz loc_440FC0  +
mov ebx eax +
lea eax [ecx+2] +
mov [ebp-1Ch] ebx +
mov [edi] eax +
cmp byte ptr [ebp-1] 0 +
mov edi [ebp-10h] +
jz loc_44100D  +
mov ecx [esi+2Ch] +
dec ecx  +
cmp ecx [edi+0Ch] +
jnb loc_441284  +
mov eax [edi+8] +
movzx ebx word ptr [eax+ecx*2] +
jmp loc_441005  +
push offset sub_441605  +
push 2  +
lea ecx [edi+8] +
inc ebx  +
call sub_4175B6  +
mov ecx [edi+0Ch] +
xor edx edx +
mov eax [edi+8] +
mov [eax+ecx*2] dx +
inc dword ptr [edi+0Ch]  +
mov [eax+ecx*2] bx +
inc dword ptr [esi+2Ch]  +
cmp bx [ebp-1Ch] +
jb loc_440FDF  +
jmp loc_441032  +
push offset sub_441605  +
push 2  +
lea ecx [edi+8] +
call sub_4175B6  +
mov ecx [edi+0Ch] +
xor edx edx +
mov eax [edi+8] +
mov [eax+ecx*2] dx +
inc dword ptr [edi+0Ch]  +
mov [eax+ecx*2] bx +
inc dword ptr [esi+2Ch]  +
mov edi [ebp+10h] +
mov byte ptr [ebp-1] 0 +
mov ebx [ebp+0Ch] +
jmp loc_440F44  +
***
lea eax [ecx+1] +
mov [edi] eax +
jmp loc_440DD0  +
***
mov eax 0FFEEh +
cmp ax di +
jnz loc_44105A  +
push 2Bh  +
pop edi  +
jmp loc_441076  +
mov eax 0FFEFh +
cmp ax di +
jnz loc_441068  +
push 2Ah  +
jmp loc_441057  +
***
mov ecx 0FFEDh +
push 3Fh  +
cmp cx di +
pop eax  +
cmovz edi eax +
mov ecx [ebp-10h] +
mov [esi+24h] edx +
push offset sub_441605  +
push 2  +
mov eax [ecx+0Ch] +
lea ebx [ecx+8] +
mov ecx ebx +
mov [ebp-0Ch] edi +
mov [esi+28h] eax +
call sub_4175B6  +
mov ecx [ebx+4] +
xor edx edx +
mov eax [ebx] +
mov [eax+ecx*2] dx +
inc dword ptr [ebx+4]  +
mov [eax+ecx*2] di +
mov eax [esi+28h] +
mov edi [ebp+10h] +
inc eax  +
mov [esi+2Ch] eax +
mov edx [edi] +
jmp loc_441115  +
lea ecx [ebp-8] +
mov edx eax +
push ecx  +
mov ecx [ebp+0Ch] +
call sub_43F9A0  +
mov ax [ebp-8] +
mov ecx 0FFEFh +
cmp cx ax +
jz loc_44112F  +
dec ecx  +
cmp cx ax +
jz loc_44112F  +
mov ecx 0FFEDh +
cmp cx ax +
jz loc_44112F  +
add ecx 6 +
cmp cx ax +
jz loc_44112F  +
push offset sub_441605  +
push 2  +
mov ecx ebx +
call sub_4175B6  +
mov ecx [ebx+4] +
xor edx edx +
mov eax [ebx] +
mov [eax+ecx*2] dx +
inc dword ptr [ebx+4]  +
mov edx [ebp-0Ch] +
mov [eax+ecx*2] dx +
inc dword ptr [esi+2Ch]  +
mov edx [ebp-1Ch] +
mov [edi] edx +
mov ecx [ebp+0Ch] +
lea eax [ebp-0Ch] +
push eax  +
call sub_43F9A0  +
mov ecx 0FFDFh +
mov [ebp-1Ch] eax +
cmp cx [ebp-0Ch] +
ja loc_4410B6  +
mov eax [esi+2Ch] +
sub eax [esi+28h] +
mov [esi+8] eax +
mov [esi+0Ch] eax +
jmp loc_440DD0  +
***
mov edi [ebp+10h] +
lea eax [ebp-0Ch] +
mov ecx [ebp+0Ch] +
push eax  +
mov [edi] edx +
call sub_43F9A0  +
mov [ebp-28h] eax +
mov bl 1 +
lea eax [esi+14h] +
mov ecx eax +
mov [ebp-14h] eax +
call sub_44159E  +
mov esi eax +
mov eax [ebp+8] +
push eax  +
mov ecx esi +
call sub_43FDF0  +
mov eax 0FFEDh +
cmp ax [ebp-0Ch] +
jnz loc_4411AD  +
mov ecx [ebp+0Ch] +
lea eax [ebp-0Ch] +
mov edx [ebp-28h] +
push eax  +
call sub_43F9A0  +
push 3Ah  +
pop ecx  +
cmp cx [ebp-0Ch] +
jz loc_4411A4  +
push 21h  +
pop ecx  +
cmp cx [ebp-0Ch] +
jnz loc_4411AD  +
and dword ptr [esi+8] 0 +
mov byte ptr [esi+2Ch] 0 +
mov ecx [ebp-10h] +
xor bl bl +
mov [edi] eax +
jmp loc_4411B9  +
mov ecx [ebp-10h] +
mov eax [ecx+20h] +
mov [esi+28h] eax +
inc dword ptr [ecx+20h]  +
push edi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-18h]  +
call sub_440B55  +
mov ecx [ebp-14h] +
mov esi eax +
mov eax [ebp-18h] +
cmp eax [ecx+4] +
jnb loc_441284  +
mov edx [ecx] +
imul eax eax +
add edx eax +
mov [edx+24h] esi +
test bl bl +
jnz loc_44124D  +
cmp [edx+2Ch] bl +
jz loc_44124D  +
mov ecx [ecx] +
cmp dword ptr [ecx+eax+20h] 0 +
jnz loc_44124D  +
mov eax [ecx+eax+24h] +
cmp eax 0FFFFFFFFh +
jz loc_44124D  +
imul eax eax +
cmp dword ptr [eax+ecx+4] 0FFFFFFFFh +
jnz loc_44124D  +
mov ebx [ebp-10h] +
cmp esi [ebx+18h] +
jnb loc_441284  +
imul eax esi +
mov eax [ecx+eax+24h] +
cmp eax 0FFFFFFFFh +
jz loc_44124D  +
cmp eax [ebx+18h] +
jnb loc_441284  +
imul esi eax +
push 2  +
pop eax  +
add esi ecx +
cmp [esi+20h] eax +
jnz loc_44124D  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jnz loc_44124D  +
cmp dword ptr [esi+10h] 1 +
jnz loc_44124D  +
cmp dword ptr [esi+14h] 1 +
jnz loc_44124D  +
add esi 24h +
mov [edx+20h] eax +
lea edi [edx+24h] +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+10h] +
mov esi [ebp+0Ch] +
lea eax [ebp-0Ch] +
mov edx [edi] +
mov ecx esi +
push eax  +
call sub_43F9A0  +
mov ecx 0FFF4h +
cmp cx [ebp-0Ch] +
jnz loc_44127A  +
mov [edi] eax +
jmp loc_440DD3  +
***
mov [ecx+0Ch] ebx +
mov esi [ebp-10h] +
jmp loc_440D19  +
***
mov eax [ebp-20h] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push 0  +
push 237C47E3h  +
call sub_40D3A8  +
push ecx  +
call sub_4504FC  +
call sub_4504FC  +
mov esi ecx +
push edx  +
lea ecx [ebp-34h] +
call sub_4400AA  +
push dword ptr [ebp+8]  +
and dword ptr [ebp-4] 0 +
mov ecx eax +
push esi  +
call sub_4405A6  +
lea ecx [ebp-20h] +
mov bl al +
call sub_417353  +
lea ecx [ebp-2Ch] +
call sub_417353  +
mov al bl +
call sub_4504D0  +
retn 4  +
***
push offset sub_441620  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_8] +
imul eax [ebp+arg_8] +
push [ebp+arg_0]  +
cmp [ebp+arg_0] 0 +
jz loc_441661  +
pop ebp  +
jmp ds:free  +
pop ebp  +
retn   +
***
sub esp 204h +
sub esp 204h +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
cmp dword ptr [ecx+244h] 0FFFFFFFFh +
mov eax ecx +
mov edx ecx +
mov eax [ecx+288h] +
xor eax eax +
lea eax [esi-61h] +
sub esp 0Ch +
sub esp 18h +
push esi  +
push ebx  +
push 0FFFFFFFFh  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ebx  +
and esp 0FFFFFFF8h +
cmp edx 28h +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
sub esp 20Ch +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push 0FFFFFFFFh  +
push edi  +
push esi  +
push 0FFFFFFFFh  +
sub esp 30h +
push esi  +
mov esi ecx +
mov ecx 80h +
push edi  +
movzx eax word ptr [esi] +
cmp ax cx +
jnb loc_444F7E  +
push 20h  +
pop edi  +
cmp ax di +
jbe loc_445056  +
cmp eax 7Fh +
jz loc_445056  +
cmp eax 25h +
jnz loc_444F86  +
mov eax [ebp+arg_0] +
and eax 40h +
or eax 0 +
jnz loc_445056  +
cmp edx 2 +
jle loc_444F20  +
mov cx [esi+2] +
call sub_40CEE2  +
test eax eax +
jz loc_444F20  +
mov cx [esi+4] +
call sub_40CEE2  +
test eax eax +
jnz loc_444F7E  +
cmp edx 5 +
jle loc_445056  +
mov ax [esi+2] +
or ax di +
cmp ax 75h +
jnz loc_445056  +
mov cx [esi+4] +
call sub_40CEE2  +
test eax eax +
jz loc_445056  +
mov cx [esi+6] +
call sub_40CEE2  +
test eax eax +
jz loc_445056  +
mov cx [esi+8] +
call sub_40CEE2  +
test eax eax +
jz loc_445056  +
mov cx [esi+0Ah] +
call sub_40CEE2  +
test eax eax +
jz loc_445056  +
xor al al +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
cmp eax 5Bh +
ja loc_445017  +
jz loc_445035  +
cmp eax 2Bh +
ja loc_444FD3  +
jz loc_444FEE  +
sub eax 21h +
cmp eax 9 +
ja loc_444F7E  +
movzx eax ds:byte_445071[eax] +
jmp ds:off_44505D[eax*4]  +
mov eax [ebp+arg_0] +
and eax 100020h +
xor ecx ecx +
or eax ecx +
jz loc_44504F  +
jmp loc_44504D  +
mov eax [ebp+arg_0] +
and eax 500000h +
jmp loc_444FBA  +
cmp eax 3Ch +
ja loc_444FFE  +
jz loc_445056  +
sub eax 2Ch +
jz loc_444FEE  +
sub eax 3 +
jz loc_444FEE  +
sub eax 0Bh +
jz loc_444FEE  +
sub eax 1 +
jnz loc_444F7E  +
cmp [ebp+arg_8] 0 +
jnz loc_444F7E  +
mov eax [ebp+arg_0] +
and eax 100000h +
jmp loc_444FBA  +
sub eax 3Dh +
jz loc_444FEE  +
sub eax 1 +
jz loc_445056  +
sub eax 1 +
jnz loc_444FE9  +
mov eax [ebp+arg_0] +
and eax 140000h +
jmp loc_444FBA  +
sub eax 5Dh +
jz loc_445035  +
sub eax 1 +
jz loc_445056  +
dec eax  +
sub eax 1 +
jz loc_445056  +
sub eax 1Bh +
jz loc_445056  +
dec eax  +
sub eax 1 +
jmp loc_444F78  +
cmp [ebp+arg_8] 0 +
jnz loc_444F7E  +
mov eax [ebp+arg_0] +
xor ecx ecx +
and eax 20000000h +
or eax ecx +
jnz loc_44504F  +
mov cl 1 +
mov al cl +
jmp loc_444F80  +
mov al 1 +
jmp loc_444F80  +
***
sub esp 1Ch +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
push ebx  +
push esi  +
push edi  +
push 2  +
pop ebx  +
mov esi ecx +
cmp edx ebx +
jnz loc_445A5B  +
push ebx  +
mov edx offset aMk +
call sub_4459EE  +
test eax eax +
jz loc_445A3F  +
push 0Ch  +
jmp loc_446030  +
push ebx  +
mov edx offset aIm +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 29h  +
jmp loc_446030  +
push 3  +
pop edi  +
cmp edx edi +
jnz loc_445B70  +
push edi  +
mov edx offset aFtp_0 +
call sub_4459EE  +
test eax eax +
jz loc_445A7C  +
mov eax ebx +
jmp loc_446031  +
push edi  +
mov edx offset aCid +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445A94  +
push 4  +
jmp loc_446030  +
push edi  +
mov edx offset aRes +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445AAC  +
push 0Bh  +
jmp loc_446030  +
push edi  +
mov edx offset aMsn +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445AC4  +
push 12h  +
jmp loc_446030  +
push edi  +
mov edx offset aPnm +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445ADC  +
push 1Ah  +
jmp loc_446030  +
push edi  +
mov edx offset aMms +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445AF4  +
push 1Bh  +
jmp loc_446030  +
push edi  +
mov edx offset aMid +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445B0C  +
push 15h  +
jmp loc_446030  +
push edi  +
mov edx offset aOms +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445B24  +
push 26h  +
jmp loc_446030  +
push edi  +
mov edx offset aTel +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445B3C  +
push 27h  +
jmp loc_446030  +
push edi  +
mov edx offset aSip +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445B54  +
push 2Ah  +
jmp loc_446030  +
push edi  +
mov edx offset aOba +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 2Dh  +
jmp loc_446030  +
push 4  +
pop ebx  +
cmp edx ebx +
jnz loc_445C3D  +
push ebx  +
mov edx offset aHttp_0 +
call sub_4459EE  +
test eax eax +
jz loc_445B91  +
xor eax eax +
jmp loc_446031  +
push ebx  +
mov edx offset aFile_3 +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445BA9  +
mov eax edi +
jmp loc_446031  +
push ebx  +
mov edx offset aWais +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445BC1  +
push 11h  +
jmp loc_446030  +
push ebx  +
mov edx offset aNews +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445BD9  +
push 13h  +
jmp loc_446030  +
push ebx  +
mov edx offset aNntp +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445BF1  +
push 14h  +
jmp loc_446030  +
push ebx  +
mov edx offset aFeed +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445C09  +
push 20h  +
jmp loc_446030  +
push ebx  +
mov edx offset aConf +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445C21  +
push 2Bh  +
jmp loc_446030  +
push ebx  +
mov edx offset aMeet +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 2Ch  +
jmp loc_446030  +
push 5  +
pop ebx  +
cmp edx ebx +
jnz loc_445CA7  +
push ebx  +
mov edx offset aHttps +
call sub_4459EE  +
test eax eax +
jz loc_445C5B  +
xor eax eax +
inc eax  +
jmp loc_446031  +
push ebx  +
mov edx offset aSocks +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445C73  +
push 10h  +
jmp loc_446030  +
push ebx  +
mov edx offset aNotes +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445C8B  +
push 1Eh  +
jmp loc_446030  +
push ebx  +
mov edx offset aFeeds +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 23h  +
jmp loc_446030  +
push 6  +
pop edi  +
cmp edx edi +
jnz loc_445DB3  +
push edi  +
mov edx offset aMailto +
call sub_4459EE  +
test eax eax +
jnz loc_445A75  +
push edi  +
mov edx offset aMsIts +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445CDD  +
push 0Dh  +
jmp loc_446030  +
push edi  +
mov edx offset aGopher +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445CF5  +
push 0Fh  +
jmp loc_446030  +
push edi  +
mov edx offset aTelnet +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445D0D  +
push 17h  +
jmp loc_446030  +
push edi  +
mov edx offset aRlogin +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445D25  +
push 18h  +
jmp loc_446030  +
push edi  +
mov edx offset aTn3270 +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445D3D  +
push 19h  +
jmp loc_446030  +
push edi  +
mov edx offset aWebcal +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445D55  +
push 1Fh  +
jmp loc_446030  +
push edi  +
mov edx offset aCallto +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445D6D  +
push 28h  +
jmp loc_446030  +
push edi  +
mov edx offset aGroove +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jnz loc_445FFC  +
push edi  +
mov edx offset aSpwdoc +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jnz loc_445FFC  +
push edi  +
mov edx offset aOdopen +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 3Ah  +
jmp loc_446030  +
push 7  +
pop ebx  +
cmp edx ebx +
jnz loc_445E7D  +
push ebx  +
mov edx offset aOutlook +
call sub_4459EE  +
test eax eax +
jnz loc_445A75  +
push ebx  +
mov edx offset aStssync +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445DE9  +
push 1Ch  +
jmp loc_446030  +
push ebx  +
mov edx offset aOnenote +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445E01  +
push 21h  +
jmp loc_446030  +
push ebx  +
mov edx offset aWebcals +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445E19  +
push 22h  +
jmp loc_446030  +
push ebx  +
mov edx offset aMsWord +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445E31  +
push 2Fh  +
jmp loc_446030  +
push ebx  +
mov edx offset aGrvopen +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445E49  +
push 3Bh  +
jmp loc_446030  +
push ebx  +
mov edx offset aMsSway +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445E61  +
push 3Eh  +
jmp loc_446030  +
push ebx  +
mov edx offset aMsteams +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 40h  +
jmp loc_446030  +
push 8  +
pop ebx  +
cmp edx ebx +
jnz loc_445EE6  +
push ebx  +
mov edx offset aProspero +
call sub_4459EE  +
test eax eax +
jz loc_445E9A  +
push 16h  +
jmp loc_446030  +
push ebx  +
mov edx offset aBingmaps +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445EB2  +
push 38h  +
jmp loc_446030  +
push ebx  +
mov edx offset aMsExcel +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445ECA  +
push 31h  +
jmp loc_446030  +
push ebx  +
mov edx offset aMsVisio +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 32h  +
jmp loc_446030  +
cmp edx 9 +
jnz loc_445F05  +
push edx  +
mov edx offset aMsAccess +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 33h  +
jmp loc_446030  +
push 0Ah  +
pop ebx  +
cmp edx ebx +
jnz loc_445F3B  +
push ebx  +
mov edx offset aJavascript +
call sub_4459EE  +
test eax eax +
jnz loc_445BA2  +
push ebx  +
mov edx offset aMsProject +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 34h  +
jmp loc_446030  +
push 0Bh  +
pop edi  +
cmp edx edi +
jnz loc_445F89  +
push edi  +
mov edx offset aThismessage +
call sub_4459EE  +
test eax eax +
jnz loc_445A75  +
push edi  +
mov edx offset aOutlookfeed +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445F6D  +
push 24h  +
jmp loc_446030  +
push edi  +
mov edx offset aMsAppxWeb +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 39h  +
jmp loc_446030  +
push 0Ch  +
pop edi  +
cmp edx edi +
jnz loc_445FD0  +
push edi  +
mov edx offset aOutlookfeeds +
call sub_4459EE  +
test eax eax +
jz loc_445FA6  +
push 25h  +
jmp loc_446030  +
push edi  +
mov edx offset aMsPublisher +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_445FBB  +
push 35h  +
jmp loc_446030  +
push edi  +
mov edx offset aMsOfficeapp +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 3Dh  +
jmp loc_446030  +
cmp edx 0Dh +
jnz loc_445FE8  +
push edx  +
mov edx offset aMsPowerpoint +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 30h  +
jmp loc_446030  +
cmp edx 0Fh +
jnz loc_446016  +
push edx  +
mov edx offset aGroovetelespac +
call sub_4459EE  +
test eax eax +
jz loc_446000  +
push 2Eh  +
jmp loc_446030  +
push 0Fh  +
mov edx offset aMsOfficemobile +
mov ecx esi +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 3Fh  +
jmp loc_446030  +
cmp edx 10h +
jnz loc_44602E  +
push edx  +
mov edx offset aMsWindowsStore +
call sub_4459EE  +
test eax eax +
jz loc_44602E  +
push 3Ch  +
jmp loc_446030  +
push 1Dh  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov [esp+20h] esi +
test byte ptr [esi+280h] 2 +
jnz loc_446821  +
mov ecx [esi+0A0h] +
or eax 0FFFFFFFFh +
mov edi [esi+9Ch] +
mov ebx ecx +
mov [esi+228h] eax +
mov edx edi +
mov [esi+27Ch] eax +
mov [esi+274h] eax +
mov [esi+26Ch] eax +
mov [esi+264h] eax +
mov [esi+25Ch] eax +
mov [esi+254h] eax +
mov [esi+24Ch] eax +
mov [esi+244h] eax +
mov [esi+23Ch] eax +
mov [esi+234h] eax +
mov [esi+22Ch] eax +
xor eax eax +
push ecx  +
push ecx  +
mov [esi+278h] eax +
mov [esi+270h] eax +
mov [esi+268h] eax +
mov [esi+260h] eax +
mov [esi+258h] eax +
mov [esi+250h] eax +
mov [esi+248h] eax +
mov [esi+240h] eax +
mov [esi+238h] eax +
mov [esi+230h] eax +
mov [esp+18h] ecx +
mov [esp+20h] ebx +
call sub_443461  +
test eax eax +
jz loc_446126  +
and dword ptr [esi+254h] 0 +
mov dword ptr [esi+228h] 0Eh +
mov dword ptr [esi+27Ch] 3 +
mov [esi+258h] edi +
jmp loc_44681A  +
push 3Ah  +
pop eax  +
mov [esp+24h] eax +
cmp edi 7 +
jle loc_44618E  +
cmp [ecx] ax +
jnz loc_44618E  +
cmp [ecx+2] ax +
jnz loc_44618E  +
cmp word ptr [ecx+0Ch] 5Ch +
jnz loc_44618E  +
push 4  +
add ecx 4 +
mov edx offset aOdma +
call sub_4459EE  +
test eax eax +
jz loc_44618C  +
and dword ptr [esi+27Ch] 0 +
and dword ptr [esi+22Ch] 0 +
push 7  +
pop eax  +
mov [esi+230h] eax +
mov [esi+254h] eax +
lea eax [edi-7] +
mov dword ptr [esi+228h] 8 +
mov [esi+258h] eax +
jmp loc_44681A  +
mov ecx ebx +
mov eax [esi+288h] +
and eax 1 +
or eax 0 +
jnz loc_4461FF  +
push 23h  +
mov edx edi +
call sub_40CF97  +
mov ecx eax +
test ecx ecx +
jz loc_4461FF  +
sub ecx ebx +
add ecx 2 +
sar ecx 1 +
js loc_446834  +
cmp ecx 7FFFFFFFh +
ja loc_446834  +
and dword ptr [esp+14h] 0 +
mov eax edi +
cdq   +
sub eax ecx +
mov [esi+274h] ecx +
lea ecx [esp+14h] +
sbb edx 0 +
push edx  +
push eax  +
call sub_40C30A  +
mov ecx [esp+14h] +
cmp ecx 7FFFFFFFh +
ja loc_446834  +
or eax 0FFFFFFFFh +
mov [esi+278h] ecx +
sub eax ecx +
add edi eax +
xor edx edx +
test edi edi +
js loc_4462E6  +
mov eax ebx +
movzx ecx word ptr [eax+edx*2] +
call sub_441B8A  +
test eax eax +
jz loc_446222  +
inc edx  +
cmp edx edi +
jle loc_446209  +
jmp loc_4462E6  +
push 3Ah  +
pop eax  +
cmp cx ax +
jnz loc_446286  +
test edx edx +
jle loc_446286  +
and dword ptr [esi+22Ch] 0 +
mov ecx ebx +
or eax 0FFFFFFFFh +
mov [esi+230h] edx +
sub eax edx +
add edi eax +
lea ebx [ecx+2] +
lea ebx [ebx+edx*2] +
mov [esp+18h] ebx +
call sub_445A1D  +
mov [esi+228h] eax +
cmp eax 1Dh +
jz loc_446279  +
cmp eax 40h +
ja loc_446828  +
movzx eax ds:byte_446849[eax] +
jmp ds:off_446839[eax*4]  +
xor eax eax +
jmp loc_4462E0  +
push 2Fh  +
xor eax eax +
pop ecx  +
cmp [ebx] cx +
setz al  +
jmp loc_4462E0  +
mov eax [esi+288h] +
and eax 80000000h +
mov byte ptr [esp+0Fh] 1 +
or eax 0 +
jnz loc_4462A0  +
mov byte ptr [esp+0Fh] 0 +
mov eax ebx +
movzx eax word ptr [eax] +
push eax  +
call sub_414D21  +
cmp byte ptr [esp+0Fh] 0 +
jz loc_4462BB  +
neg eax  +
sbb eax eax +
add eax 3 +
jmp loc_4462E0  +
test eax eax +
jnz loc_4462C3  +
push 3  +
jmp loc_4462DF  +
cmp edi 2 +
jle loc_4462DD  +
mov eax ebx +
movzx eax word ptr [eax+2] +
push eax  +
call sub_414D21  +
test eax eax +
jz loc_4462DD  +
xor eax eax +
inc eax  +
jmp loc_4462E0  +
push 2  +
pop eax  +
mov [esi+27Ch] eax +
cmp dword ptr [esi+27Ch] 1 +
jnz loc_4466A7  +
movzx eax word ptr [ebx] +
push eax  +
call sub_414D21  +
test eax eax +
jz loc_446315  +
add ebx 2 +
dec edi  +
movzx eax word ptr [ebx] +
push eax  +
call sub_414D21  +
test eax eax +
jnz loc_446300  +
mov [esp+18h] ebx +
mov [esp+1Ch] ebx +
mov eax edi +
mov [esp+14h] eax +
test edi edi +
js loc_446354  +
mov esi edi +
mov eax esi +
dec esi  +
test eax eax +
jz loc_44633C  +
movzx eax word ptr [ebx] +
add ebx 2 +
push eax  +
call sub_414D21  +
test eax eax +
jz loc_446325  +
xor eax eax +
lea ecx [ebx-2] +
mov ebx [esp+18h] +
test esi esi +
mov esi [esp+20h] +
cmovs ecx eax +
mov eax [esp+14h] +
jmp loc_446356  +
xor ecx ecx +
test ecx ecx +
jz loc_446375  +
mov eax ecx +
sub eax ebx +
sar eax 1 +
mov [esp+14h] eax +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
mov ecx [esi+228h] +
cmp ecx 3 +
jz loc_44667C  +
cmp ecx 0Bh +
jnz loc_4463A9  +
push 2Fh  +
pop eax  +
push eax  +
mov edx edi +
mov [esp+24h] edi +
mov ecx ebx +
call sub_40CF97  +
test eax eax +
jnz loc_446661  +
mov eax edi +
jmp loc_44667C  +
cmp ecx 0Ch +
jz loc_44664C  +
cmp ecx 0Dh +
jz loc_44664C  +
push 40h  +
mov edx eax +
mov ecx ebx +
call sub_40CF97  +
mov [esp+1Ch] eax +
test eax eax +
jz loc_4464E4  +
sub eax ebx +
sar eax 1 +
mov [esp+20h] eax +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
push 3Ah  +
pop ecx  +
push ecx  +
mov edx eax +
mov ecx ebx +
call sub_40CF97  +
mov ecx ebx +
sub ecx [esp+10h] +
sar ecx 1 +
test eax eax +
jnz loc_44644A  +
test ecx ecx +
js loc_446834  +
cmp ecx 7FFFFFFFh +
ja loc_446834  +
or edx 0FFFFFFFFh +
mov [esi+234h] ecx +
mov ecx [esp+20h] +
mov eax edx +
sub eax ecx +
mov [esi+238h] ecx +
add edi eax +
mov eax edx +
lea ebx [ebx+ecx*2] +
add ebx 2 +
sub eax ecx +
mov ecx [esp+14h] +
add ecx eax +
mov [esp+14h] ecx +
jmp loc_4464E8  +
test ecx ecx +
js loc_446834  +
cmp ecx 7FFFFFFFh +
ja loc_446834  +
mov edx eax +
mov [esi+234h] ecx +
sub edx ebx +
sar edx 1 +
js loc_446834  +
mov ecx 7FFFFFFFh +
cmp edx ecx +
ja loc_446834  +
add eax 2 +
mov [esi+238h] edx +
mov [esp+20h] eax +
sub eax [esp+10h] +
sar eax 1 +
js loc_446834  +
cmp eax ecx +
ja loc_446834  +
mov ecx [esp+1Ch] +
sub ecx [esp+20h] +
sar ecx 1 +
mov [esi+23Ch] eax +
js loc_446834  +
cmp ecx 7FFFFFFFh +
ja loc_446834  +
lea eax [edx+ecx] +
mov [esi+240h] ecx +
lea ebx [ebx+eax*2] +
push 0FFFFFFFEh  +
pop eax  +
sub eax ecx +
add ebx 4 +
sub eax edx +
add edi eax +
push 0FFFFFFFEh  +
pop eax  +
sub eax ecx +
sub eax edx +
jmp loc_44643B  +
***
mov ecx [esp+14h] +
cmp word ptr [ebx] 5Bh +
mov edx ebx +
mov eax ecx +
mov [esp+18h] ecx +
jnz loc_446551  +
mov edx ecx +
mov ecx ebx +
push 5Dh  +
call sub_40CF97  +
mov ecx eax +
mov eax [esp+14h] +
mov [esp+1Ch] ecx +
test ecx ecx +
jnz loc_446516  +
lea ecx [ebx+eax*2] +
mov [esp+1Ch] ecx +
sub ecx ebx +
sar ecx 1 +
js loc_446834  +
and dword ptr [esp+18h] 0 +
cdq   +
sub eax ecx +
lea ecx [esp+18h] +
sbb edx 0 +
push edx  +
push eax  +
call sub_40C30A  +
mov eax [esp+18h] +
mov [esp+18h] eax +
cmp eax 7FFFFFFFh +
ja loc_446834  +
mov ecx [esp+14h] +
mov edx [esp+1Ch] +
test eax eax +
js loc_446581  +
test edx edx +
jz loc_446581  +
mov ecx [esp+18h] +
mov eax ecx +
dec ecx  +
test eax eax +
jz loc_446571  +
movzx eax word ptr [edx] +
add edx 2 +
cmp ax [esp+24h] +
jnz loc_44655D  +
add edx 0FFFFFFFEh +
xor eax eax +
test ecx ecx +
mov ecx [esp+14h] +
cmovs edx eax +
jmp loc_446583  +
xor edx edx +
mov eax ebx +
sub eax [esp+10h] +
sar eax 1 +
test edx edx +
jz loc_446607  +
test eax eax +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
sub edx ebx +
mov [esi+244h] eax +
sar edx 1 +
js loc_446834  +
cmp edx 7FFFFFFFh +
ja loc_446834  +
or eax 0FFFFFFFFh +
mov [esi+248h] edx +
sub eax edx +
lea ebx [ebx+edx*2] +
add ebx 2 +
add ecx eax +
mov eax ebx +
sub eax [esp+10h] +
sar eax 1 +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
mov [esi+24Ch] eax +
lea ebx [ebx+ecx*2] +
or eax 0FFFFFFFFh +
mov [esi+250h] ecx +
sub eax edx +
sub eax ecx +
add edi eax +
jmp loc_4466A7  +
test eax eax +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
mov edx ecx +
mov [esi+244h] eax +
push 3Fh  +
mov ecx ebx +
call sub_40CF97  +
test eax eax +
jz loc_446646  +
sub eax ebx +
sar eax 1 +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
jmp loc_44669C  +
mov eax [esp+14h] +
jmp loc_44669C  +
push 2Fh  +
pop eax  +
push eax  +
mov edx edi +
mov [esp+28h] edi +
mov ecx ebx +
call sub_40CF97  +
test eax eax +
jz loc_446678  +
sub eax ebx +
sar eax 1 +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
jmp loc_44667C  +
mov eax [esp+24h] +
mov ecx ebx +
sub ecx [esp+10h] +
sar ecx 1 +
js loc_446834  +
cmp ecx 7FFFFFFFh +
ja loc_446834  +
mov [esi+244h] ecx +
sub edi eax +
mov [esi+248h] eax +
lea ebx [ebx+eax*2] +
push 3Fh  +
mov edx edi +
mov ecx ebx +
call sub_40CF97  +
mov edx [esp+10h] +
test eax eax +
jz loc_4466FC  +
add eax 2 +
mov ecx eax +
sub ecx edx +
sar ecx 1 +
js loc_446834  +
cmp ecx 7FFFFFFFh +
ja loc_446834  +
sub eax ebx +
mov [esi+26Ch] ecx +
sar eax 1 +
sub edi eax +
js loc_446834  +
cmp edi 7FFFFFFFh +
ja loc_446834  +
mov [esi+270h] edi +
lea edi [eax-1] +
mov eax ebx +
sub eax edx +
sar eax 1 +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
mov [esi+254h] eax +
mov [esi+258h] edi +
test edi edi +
jle loc_44681A  +
cmp dword ptr [esi+27Ch] 0 +
jz loc_44681A  +
mov ecx edi +
test ebx ebx +
jz loc_446776  +
mov eax ecx +
dec ecx  +
mov [esp+1Ch] ecx +
test eax eax +
jz loc_446764  +
lea eax [ecx+ecx] +
mov [esp+24h] eax +
movzx eax word ptr [eax+ebx] +
push eax  +
call sub_414D21  +
mov ecx [esp+1Ch] +
test eax eax +
jz loc_44673A  +
mov eax [esp+24h] +
jmp loc_446767  +
push 0FFFFFFFEh  +
pop eax  +
xor edx edx +
add eax ebx +
test ecx ecx +
cmovs eax edx +
mov edx [esp+10h] +
jmp loc_446778  +
xor eax eax +
test eax eax +
lea ecx [eax+2] +
lea eax [ebx+edi*2] +
cmovz ecx ebx +
mov [esp+24h] ecx +
cmp ecx eax +
jnb loc_44681A  +
mov eax ecx +
sub eax edx +
sar eax 1 +
js loc_446834  +
cmp eax 7FFFFFFFh +
ja loc_446834  +
mov [esi+25Ch] eax +
mov eax ecx +
sub eax ebx +
sar eax 1 +
sub edi eax +
js loc_446834  +
mov ebx 7FFFFFFFh +
cmp edi ebx +
ja loc_446834  +
mov [esi+258h] eax +
mov eax [esi+288h] +
and eax 800000h +
mov [esi+260h] edi +
or eax 0 +
jnz loc_44681A  +
push 2Eh  +
mov edx edi +
call sub_40CFC6  +
test eax eax +
jz loc_44681A  +
add eax 2 +
mov ecx eax +
sub ecx [esp+10h] +
sar ecx 1 +
js loc_446834  +
cmp ecx ebx +
ja loc_446834  +
sub eax [esp+24h] +
sar eax 1 +
sub edi eax +
mov [esi+264h] ecx +
js loc_446834  +
cmp edi ebx +
ja loc_446834  +
dec eax  +
mov [esi+268h] edi +
mov [esi+260h] eax +
or dword ptr [esi+280h] 2 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push 1523C8h  +
call sub_40D3A8  +
call sub_408DB2  +
push ecx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push edi  +
push esi  +
push esi  +
push esi  +
push esi  +
push edi  +
push esi  +
push edi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
mov ecx [esi+264h] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
cmp dword ptr [esi+19Ch] 0 +
cmp dword ptr [esi+19Ch] 0 +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax 1058h +
push esi  +
push esi  +
push 0FFFFFFFFh  +
mov eax [ecx] +
sub esp 10h +
mov eax [edi+4] +
call sub_4504FC  +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 4 +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
sub esp 1Ch +
push ebx  +
push ebx  +
push ecx  +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
sub esp 14h +
push ecx  +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
push esi  +
mov eax [ebp+arg_0] +
lea eax [esi+8] +
mov ecx [ebp+arg_0] +
push esi  +
and dword ptr [ecx+74h] 0 +
push edi  +
push 0FFFFFFFFh  +
push esi  +
mov eax [ebp+arg_0] +
push esi  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
mov edx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ax word ptr [ebp+arg_4] +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
mov edx [ebp+arg_0] +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
mov edx [ebp+arg_4] +
push ebx  +
mov edx [ebp+arg_4] +
cmp [ebp+arg_4] 0 +
mov edx [ebp+arg_C] +
push ecx  +
and esp 0FFFFFFF8h +
mov ax word ptr [ebp+arg_4] +
push ebx  +
mov edx [ebp+arg_10] +
push esi  +
push [ebp+arg_4]  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
push esi  +
push esi  +
mov edx [ebp+arg_0] +
sub esp 0D4h +
and esp 0FFFFFFF8h +
push esi  +
lea eax [ebp+arg_8] +
push ecx  +
call sub_450565  +
mov edx [ebp+arg_4] +
push esi  +
push esi  +
push esi  +
push ecx  +
push ebx  +
mov ecx [ecx] +
mov ecx [esi] +
call sub_4504FC  +
push esi  +
test ecx ecx +
push edi  +
push ecx  +
call sub_45052F  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov eax [esi] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
pop ecx  +
sub esp 214h +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_4504FC  +
and dword ptr [ecx+8] 0 +
push 2  +
pop eax  +
mov [ecx+4] eax +
mov [ecx+0Ch] eax +
mov eax ecx +
mov dword ptr [ecx+10h] 30303030h +
mov dword ptr [ecx] offset off_46ED04 +
retn 4  +
***
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
call sub_45052F  +
mov ebx edx +
push dword ptr [ecx]  +
lea ecx [ebp-128h] +
call sub_4189E8  +
push ecx  +
push offset asc_462074  +
xor edi edi +
lea ecx [ebp-128h] +
push offset unk_458C80  +
mov [ebp-12Ch] edi +
mov [ebp-4] edi +
call sub_418753  +
mov ecx 102h +
mov dword ptr [ebp-124h] offset off_47767C +
lea eax [ebp-114h] +
mov [ebp-118h] ecx +
mov [ebp-120h] eax +
mov [ebp-11Ch] ecx +
push ecx  +
lea ecx [ebp-124h] +
mov byte ptr [ebp-4] 1 +
call sub_4088D3  +
mov byte ptr [ebp-4] 2 +
mov esi [ebp-128h] +
mov ecx esi +
call sub_44BE71  +
push eax  +
mov edx esi +
lea ecx [ebp-124h] +
call sub_44BEDD  +
mov edx [ebp-120h] +
test edx edx +
jz loc_44DCFD  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-12Ch] +
jnz loc_44DCE6  +
sub ecx edi +
sar ecx 1 +
xor edi edi +
jmp loc_44DCFF  +
mov ecx edi +
push 100000h  +
lea eax [ebp-130h] +
mov [ebp-130h] ecx +
push eax  +
push edi  +
push edx  +
call UrlUnescapeW  +
mov ecx [ebp-120h] +
call sub_44BE71  +
mov edx [ebp-120h] +
mov ecx ebx +
push eax  +
call sub_44BEDD  +
lea eax [ebp-114h] +
cmp [ebp-120h] eax +
jz loc_44DD4D  +
push dword ptr [ebp-120h]  +
call ds:free  +
pop ecx  +
lea ecx [esi-0Ch] +
call sub_4184E5  +
call sub_4504E4  +
retn   +
***
push esi  +
sub esp 14h +
push esi  +
sub esp 14h +
test ecx ecx +
call sub_4504FC  +
push 0FFFFFFFFh  +
call sub_4504FC  +
imul eax [ebp+arg_8] +
sub esp 3Ch +
mov esi ecx +
call sub_45052F  +
push edi  +
sub esp 3Ch +
call sub_45052F  +
mov dword ptr [esi] offset off_46EF24 +
call sub_4504FC  +
push esi  +
push ecx  +
push esi  +
push 0FFFFFFFFh  +
push offset loc_4516CD  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4771C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov edi ecx +
and [ebp+pprot] 0 +
lea eax [ebp+pprot] +
push eax  +
push 0  +
call GetRunningObjectTable  +
mov esi eax +
test esi esi +
js loc_44E75C  +
and [ebp+ppmk] 0 +
lea eax [ebp+ppmk] +
push eax  +
push edi  +
push offset szDelim  +
call CreateItemMoniker  +
mov esi eax +
test esi esi +
js loc_44E74F  +
mov eax [ebp+pprot] +
push ebx  +
push [ebp+ppmk]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+ppmk] +
test eax eax +
jz loc_44E75C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+pprot] +
test eax eax +
jz loc_44E769  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov eax offset RegOpenKeyExW +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset ADVAPI32_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset RegCreateKeyExW +
jmp loc_44E782  +
***
mov eax offset RegDeleteKeyW +
jmp loc_44E782  +
***
mov eax offset RegDeleteValueW +
jmp loc_44E782  +
***
mov eax offset RegCloseKey +
jmp loc_44E782  +
***
mov eax offset RegEnumKeyExW +
jmp loc_44E782  +
***
mov eax offset RegSetValueExW +
jmp loc_44E782  +
***
mov eax offset RegQueryInfoKeyW +
jmp loc_44E782  +
***
mov eax offset RegEnumValueW +
jmp loc_44E782  +
***
mov eax offset RegGetValueW +
jmp loc_44E782  +
***
mov eax offset RegQueryValueExW +
jmp loc_44E782  +
***
mov eax offset EventUnregister +
jmp loc_44E782  +
***
mov eax offset EventRegister +
jmp loc_44E782  +
***
mov eax offset EventWriteTransfer +
jmp loc_44E782  +
***
mov eax offset ReportEventW +
jmp loc_44E782  +
***
mov eax offset RegisterEventSourceW +
jmp loc_44E782  +
***
mov eax offset DeregisterEventSource +
jmp loc_44E782  +
***
mov eax offset RegEnumValueA +
jmp loc_44E782  +
***
mov eax offset RegDeleteValueA +
jmp loc_44E782  +
***
mov eax offset CreateCompatibleDC +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset GDI32_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset CreateCompatibleBitmap +
jmp loc_44E821  +
***
mov eax offset SelectObject +
jmp loc_44E821  +
***
mov eax offset DeleteDC +
jmp loc_44E821  +
***
mov eax offset DeleteObject +
jmp loc_44E821  +
***
mov eax offset CoTaskMemAlloc +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset ole32_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset CoTaskMemRealloc +
jmp loc_44E855  +
***
mov eax offset StringFromGUID2 +
jmp loc_44E855  +
***
mov eax offset CoTaskMemFree +
jmp loc_44E855  +
***
mov eax offset CoInitialize +
jmp loc_44E855  +
***
mov eax offset CoUninitialize +
jmp loc_44E855  +
***
mov eax offset CreateStreamOnHGlobal +
jmp loc_44E855  +
***
mov eax offset CoInitializeEx +
jmp loc_44E855  +
***
mov eax offset CoCreateGuid +
jmp loc_44E855  +
***
mov eax offset CoCreateInstance +
jmp loc_44E855  +
***
mov eax offset CoCreateFreeThreadedMarshaler +
jmp loc_44E855  +
***
mov eax offset SysFreeString +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset OLEAUT32_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset SysAllocString +
jmp loc_44E8B3  +
***
mov eax offset SysStringLen +
jmp loc_44E8B3  +
***
mov eax offset VariantInit +
jmp loc_44E8B3  +
***
mov eax offset VariantClear +
jmp loc_44E8B3  +
***
mov eax offset VarUI4FromStr +
jmp loc_44E8B3  +
***
mov eax offset LoadTypeLib +
jmp loc_44E8B3  +
***
mov eax offset LoadRegTypeLib +
jmp loc_44E8B3  +
***
mov eax offset SafeArrayAccessData +
jmp loc_44E8B3  +
***
mov eax offset SafeArrayUnaccessData +
jmp loc_44E8B3  +
***
mov eax offset CommandLineToArgvW +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset SHELL32_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset ShellExecuteExW +
jmp loc_44E90A  +
***
mov eax offset SHGetSettings +
jmp loc_44E90A  +
***
mov eax offset SHGetDesktopFolder +
jmp loc_44E90A  +
***
mov eax offset CharNextW +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset USER32_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset DispatchMessageW +
jmp loc_44E937  +
***
mov eax offset MsgWaitForMultipleObjectsEx +
jmp loc_44E937  +
***
mov eax offset PeekMessageW +
jmp loc_44E937  +
***
mov eax offset TranslateMessage +
jmp loc_44E937  +
***
mov eax offset IsWindowVisible +
jmp loc_44E937  +
***
mov eax offset ShowWindow +
jmp loc_44E937  +
***
mov eax offset FindWindowExW +
jmp loc_44E937  +
***
mov eax offset GetWindowThreadProcessId +
jmp loc_44E937  +
***
mov eax offset GetClientRect +
jmp loc_44E937  +
***
mov eax offset GetDC +
jmp loc_44E937  +
***
mov eax offset PrintWindow +
jmp loc_44E937  +
***
mov eax offset ReleaseDC +
jmp loc_44E937  +
***
mov eax offset EnumWindows +
jmp loc_44E937  +
***
mov eax offset IsIconic +
jmp loc_44E937  +
***
mov eax offset GetClassNameW +
jmp loc_44E937  +
***
mov eax offset CreateWindowExW +
jmp loc_44E937  +
***
mov eax offset DestroyWindow +
jmp loc_44E937  +
***
call sub_44EA22  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call j_memset  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+2Ch] +
pop esi  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_44EA69  +
push dword ptr [esi]  +
call j_free  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov eax offset UrlIsW +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset SHLWAPI_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset PathStripPathW +
jmp loc_44EA7A  +
***
mov eax offset StrRetToBufW +
jmp loc_44EA7A  +
***
mov eax offset MsiGetComponentPathW +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset msi_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset MsiProvideQualifiedComponentExW +
jmp loc_44EAA0  +
***
mov eax offset MsiEnumProductsW +
jmp loc_44EAA0  +
***
mov eax offset MsiEnumComponentQualifiersW +
jmp loc_44EAA0  +
***
mov eax offset IdnToAscii +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset Normaliz_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset IdnToUnicode +
jmp loc_44EACD  +
***
mov eax offset InternetCanonicalizeUrlW +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset WININET_dll_import_table  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset WindowsCreateStringReference +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset dword_473A60  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset RoGetActivationFactory +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset dword_473A80  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset RoOriginateError +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset dword_473AA0  +
call sub_4501AD  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset WindowsCreateString +
jmp loc_44EB04  +
***
mov eax offset WindowsDuplicateString +
jmp loc_44EB04  +
***
mov eax offset WindowsDeleteString +
jmp loc_44EB04  +
***
mov eax offset WindowsCompareStringOrdinal +
jmp loc_44EB04  +
***
mov eax offset RoInitialize +
jmp loc_44EB1C  +
***
mov eax offset RoUninitialize +
jmp loc_44EB1C  +
***
mov eax offset WindowsGetStringLen +
jmp loc_44EB04  +
***
mov eax offset WindowsGetStringRawBuffer +
jmp loc_44EB04  +
***
call j__set_app_type  +
call sub_44FA43  +
call sub_40D5AA  +
push eax  +
call j__set_new_mode  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_44FA00  +
test al al +
jz loc_44EDBC  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_44ED95  +
call j__c_exit  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push 7  +
call sub_44F8B5  +
push esi  +
call j_exit  +
***
push dword ptr [ebp-20h]  +
call j__exit  +
***
call sub_44F7FE  +
cmp ecx dword_4771C0 +
test [ebp+arg_0] 1 +
call sub_44FB05  +
mov edi [ebp+10h] +
test al al +
call sub_44FB05  +
xor esi esi +
mov [ebp-4] esi +
mov edi [ebp+8] +
mov [ebp-24h] esi +
cmp esi [ebp+10h] +
jz loc_44EEDE  +
sub edi [ebp+0Ch] +
mov [ebp+8] edi +
mov ecx [ebp+14h] +
call ds:off_454410  +
mov ecx edi +
call dword ptr [ebp+14h]  +
inc esi  +
jmp loc_44EE98  +
mov eax [ebp-14h] +
mov [ebp-20h] eax +
mov eax [ebp-20h] +
mov eax [eax] +
mov [ebp-1Ch] eax +
mov eax [ebp-1Ch] +
cmp dword ptr [eax] 0E06D7363h +
jz loc_44EEF7  +
mov dword ptr [ebp-28h] 0 +
mov eax [ebp-28h] +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov eax [ebp+arg_0] +
test eax eax +
cmp [ebp+arg_0] 0 +
jnz loc_44EF9A  +
mov byte_4791E8 1 +
call loc_44FB58  +
call sub_433538  +
test al al +
jnz loc_44EFAC  +
xor al al +
pop ebp  +
retn   +
call sub_433538  +
test al al +
jnz loc_44EFBF  +
push 0  +
call sub_433538  +
pop ecx  +
jmp loc_44EFA8  +
mov al 1 +
pop ebp  +
retn   +
***
cmp byte_4791E9 0 +
call sub_44FB05  +
call sub_44FD29  +
cmp byte_4791E8 0 +
cmp dword_4791EC 0FFFFFFFFh +
push [ebp+arg_0]  +
pop eax  +
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
call sub_44FB05  +
test al al +
call sub_44F44D  +
push 0FA0h  +
push esi  +
push esi  +
push esi  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jnz loc_44F57B  +
or dword ptr [esi] 0FFFFFFFFh +
jmp loc_44F597  +
push 64h  +
call sub_44F5D8  +
pop ecx  +
jmp loc_44F567  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_44F571  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4771B4 +
mov [ecx+8] eax +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
push ecx  +
cmp [ebp+arg_4] 3 +
jz loc_44F6EB  +
cmp [ebp+arg_4] 0 +
jnz locret_44F74D  +
mov ecx TlsIndex +
mov eax large fs:2Ch +
push ebx  +
push esi  +
mov ebx [eax+ecx*4] +
mov [ebp+var_8] ebx +
mov esi [ebx+10h] +
test esi esi +
jz loc_44F74B  +
push edi  +
mov edi [esi] +
sub edi 1 +
js loc_44F733  +
lea ebx [edi+2] +
lea ebx [esi+ebx*4] +
mov eax [ebx] +
mov [ebp+var_4] eax +
test eax eax +
jz loc_44F728  +
mov ecx eax +
call ds:off_454410  +
call [ebp+var_4]  +
sub ebx 4 +
sub edi 1 +
jns loc_44F714  +
mov ebx [ebp+var_8] +
mov edi [esi+4] +
test edi edi +
jz loc_44F741  +
push esi  +
call j_free  +
pop ecx  +
mov [ebx+10h] edi +
mov esi edi +
test edi edi +
jnz loc_44F707  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
sub esp 14h +
mov ecx dword_4771C0 +
retn   +
***
push 0  +
call sub_40CE5A  +
xor eax eax +
sub esp 324h +
sub esp 44h +
push 44h  +
lea eax [ebp+StartupInfo] +
push 0  +
push eax  +
call j_memset  +
add esp 0Ch +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_44F9F6  +
movzx eax [ebp+StartupInfo.wShowWindow] +
leave   +
retn   +
push 0Ah  +
pop eax  +
leave   +
retn   +
***
test eax eax +
retn   +
***
push esi  +
and dword_479558 0 +
mov esi offset unk_4700E0 +
mov esi offset unk_4700E8 +
mov eax [esp+8+arg_4] +
push [ebp+arg_0]  +
call sub_441651  +
pop ecx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
and dword_47955C 0 +
sub esp 24h +
or dword_4771C4 1 +
push 0Ah  +
call ds:IsProcessorFeaturePresent  +
test eax eax +
jz loc_44FD25  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
push ebx  +
push esi  +
push edi  +
xor ecx ecx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-1Ch] +
mov [ebp-0Ch] eax +
xor edi 6C65746Eh +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-20h] +
xor eax 756E6547h +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
or eax edi +
or eax [ebp-8] +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_44FC26  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_44FC15  +
cmp eax 20660h +
jz loc_44FC15  +
cmp eax 20670h +
jz loc_44FC15  +
cmp eax 30650h +
jz loc_44FC15  +
cmp eax 30660h +
jz loc_44FC15  +
cmp eax 30670h +
jnz loc_44FC26  +
mov edi dword_479560 +
or edi 1 +
mov dword_479560 edi +
jmp loc_44FC2C  +
mov edi dword_479560 +
mov ecx [ebp-1Ch] +
push 7  +
pop eax  +
mov [ebp-4] ecx +
cmp [ebp-0Ch] eax +
jl loc_44FC69  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov ecx [ebp-4] +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_44FC6C  +
or edi 2 +
mov dword_479560 edi +
jmp loc_44FC6C  +
mov ebx [ebp-10h] +
mov eax dword_4771C4 +
or eax 2 +
mov dword_47955C 1 +
mov dword_4771C4 eax +
test ecx 100000h +
jz loc_44FD22  +
or eax 4 +
mov dword_47955C 2 +
mov dword_4771C4 eax +
test ecx 8000000h +
jz loc_44FD22  +
test ecx 10000000h +
jz loc_44FD22  +
xor ecx ecx +
xor eax eax +
cmp dword_4771C8 eax +
setnz al  +
retn   +
***
call sub_40CE5A  +
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_454410  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_44FDE8  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_454410  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
test ds:dword_454738 1000h +
mov eax dword_479570 +
call sub_44FF41  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_44FF41  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
call sub_44FF0A  +
mov ecx [ebp+arg_0] +
mov edi offset __ImageBase +
mov [ebp+var_34] 24h +
mov [ebp+var_30] ecx +
mov eax [ecx+4] +
mov ebx [ecx+8] +
add eax edi +
mov edx [ecx+0Ch] +
add ebx edi +
mov esi [ecx+10h] +
add edx edi +
add esi edi +
mov [ebp+Arguments] ebx +
mov edi [ecx+14h] +
add edi offset __ImageBase +
mov [ebp+lpLibFileName] eax +
mov [ebp+var_10] edi +
mov edi [ecx+1Ch] +
mov [ebp+var_8] edi +
mov edi [ebp+arg_4] +
mov [ebp+var_2C] edi +
xor edi edi +
test dword ptr [ecx] 1 +
mov [ebp+var_24] edi +
mov [ebp+lpProcName] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
jnz loc_45023E  +
lea eax [ebp+var_34] +
mov [ebp+Arguments] eax +
call sub_45014B  +
lea eax [ebp+Arguments] +
push eax  +
push 1  +
push edi  +
push 0C06D0057h  +
call ds:RaiseException  +
xor eax eax +
jmp loc_450415  +
mov eax [ebp+arg_4] +
mov edi [ebx] +
sub eax edx +
sar eax 2 +
mov [ebp+var_C] eax +
mov ecx [esi+eax*4] +
mov eax ecx +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_24] eax +
lea eax (__ImageBase+2)[ecx] +
jnz loc_450266  +
movzx eax cx +
mov ebx ds:dword_4546D8 +
xor esi esi +
mov [ebp+lpProcName] eax +
test ebx ebx +
jz loc_450294  +
lea eax [ebp+var_34] +
mov ecx ebx +
push eax  +
push esi  +
call ds:off_454410  +
call ebx  +
mov esi eax +
test esi esi +
jnz loc_4503EA  +
mov ebx ds:dword_4546D8 +
test edi edi +
jnz loc_45032F  +
test ebx ebx +
jz loc_4502B6  +
lea eax [ebp+var_34] +
mov ecx ebx +
push eax  +
push 1  +
call ds:off_454410  +
call ebx  +
mov edi eax +
test edi edi +
jnz loc_450317  +
xor ebx ebx +
push ebx  +
push ebx  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExA  +
mov edi eax +
test edi edi +
jnz loc_450317  +
call ds:GetLastError  +
mov edi ds:dword_4546DC +
mov [ebp+var_14] eax +
test edi edi +
jz loc_4502F2  +
lea eax [ebp+var_34] +
mov ecx edi +
push eax  +
push 3  +
call ds:off_454410  +
call edi  +
mov edi eax +
test edi edi +
jnz loc_450317  +
lea eax [ebp+var_34] +
mov [ebp+Arguments] eax +
call sub_45014B  +
lea eax [ebp+Arguments] +
push eax  +
push 1  +
push ebx  +
push 0C06D007Eh  +
call ds:RaiseException  +
mov eax [ebp+var_18] +
jmp loc_450415  +
mov ecx [ebp+Arguments] +
mov eax edi +
xchg eax [ecx] +
cmp eax edi +
jnz loc_450329  +
push edi  +
call ds:FreeLibrary  +
mov ebx ds:dword_4546D8 +
mov [ebp+var_1C] edi +
test ebx ebx +
jz loc_450348  +
lea eax [ebp+var_34] +
mov ecx ebx +
push eax  +
push 2  +
call ds:off_454410  +
call ebx  +
mov esi eax +
test esi esi +
jnz loc_4503E5  +
mov eax [ebp+arg_0] +
xor ebx ebx +
cmp [eax+14h] ebx +
jz loc_450387  +
cmp [eax+1Ch] ebx +
jz loc_450387  +
mov eax [edi+3Ch] +
cmp dword ptr [eax+edi] 4550h +
jnz loc_450387  +
mov ecx [ebp+var_8] +
cmp [eax+edi+8] ecx +
jnz loc_450387  +
cmp edi [eax+edi+34h] +
jnz loc_450387  +
mov esi [ebp+var_C] +
mov eax [ebp+var_10] +
mov esi [eax+esi*4] +
test esi esi +
jnz loc_4503E5  +
push [ebp+lpProcName]  +
push edi  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_4503E5  +
call ds:GetLastError  +
mov esi ds:dword_4546DC +
mov [ebp+var_14] eax +
test esi esi +
jz loc_4503C0  +
lea eax [ebp+var_34] +
mov ecx esi +
push eax  +
push 4  +
call ds:off_454410  +
call esi  +
mov esi eax +
test esi esi +
jnz loc_4503E5  +
lea eax [ebp+var_34] +
mov [ebp+var_10] eax +
call sub_45014B  +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push ebx  +
push 0C06D007Fh  +
call ds:RaiseException  +
call sub_44FF0A  +
mov esi [ebp+var_18] +
mov eax [ebp+arg_4] +
mov [eax] esi +
mov ebx ds:dword_4546D8 +
test ebx ebx +
jz loc_45040E  +
and [ebp+var_14] 0 +
lea eax [ebp+var_34] +
push eax  +
push 5  +
mov ecx ebx +
mov [ebp+var_1C] edi +
mov [ebp+var_18] esi +
call ds:off_454410  +
call ebx  +
call sub_45014B  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov eax offset RegOpenKeyExA +
jmp loc_44E782  +
***
mov eax offset GetRunningObjectTable +
jmp loc_44E855  +
***
mov eax offset CreateItemMoniker +
jmp loc_44E855  +
***
mov eax offset SafeArrayCreateVector +
jmp loc_44E8B3  +
***
mov eax offset AllowSetForegroundWindow +
jmp loc_44E937  +
***
push ecx  +
mov ecx [ebp-0Ch] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
mov eax [esp+8+arg_4] +
push ebx  +
push ebp  +
mov eax [esp+arg_4] +
mov eax [esp+arg_C] +
or eax eax +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_4508F8  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_4508EA  +
***
cmp dword_47955C 6 +
jl loc_450911  +
retn   +
***
movd eax xmm0 +
shl eax 1 +
jb loc_450934  +
cmp eax 9E000000h +
jnb loc_450925  +
cvttss2si eax xmm0 +
retn   +
***
cmp eax 9F000000h +
jnb loc_45093B  +
shl eax 7 +
bts eax 1Fh +
retn   +
***
cmp eax 7F000000h +
jb loc_450920  +
cvttss2si ecx ds:dword_46EF70 +
cmc   +
sbb eax eax +
retn   +
***
cmp dword_47955C 6 +
jl loc_450957  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
movsd qword ptr [esp] xmm0 +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
btr edx 1Fh +
jb loc_4509A0  +
cmp edx 41E00000h +
jnb loc_450980  +
cvttsd2si eax xmm0 +
retn   +
***
cmp edx 41F00000h +
jnb loc_4509AF  +
test eax 1FFFFFh +
jz loc_450997  +
cvttss2si ecx ds:dword_46EF74 +
shrd eax edx +
bts eax 1Fh +
retn   +
***
cmp edx 3FF00000h +
jnb loc_4509AF  +
cvttsd2si eax xmm0 +
xor eax eax +
retn   +
***
cvttss2si ecx ds:dword_46EF70 +
xor eax eax +
dec eax  +
retn   +
***
cmp dword_47955C 6 +
jl loc_4509D5  +
retn   +
***
push esi  +
mov edx [esp+arg_4] +
mov edx [esp+arg_4] +
mov edx [esp+arg_4] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
jmp loc_408664  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4701E4 +
jmp loc_44FD35  +
***
mov eax offset unk_470218 +
jmp loc_44FD35  +
***
lea ecx [ebp-2118h] +
lea ecx [ebp-2118h] +
jmp loc_408658  +
***
lea ecx [ebp-64h] +
jmp loc_401F98  +
***
lea ecx [ebp-2230h] +
lea ecx [ebp-2250h] +
jmp loc_401A67  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2254h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470390 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A58h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov ecx [ebp+8] +
lea ecx [ebp+8] +
jmp sub_4018AD  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4703F8 +
jmp loc_44FD35  +
***
lea ecx [ebp-244h] +
lea ecx [ebp-22Ch] +
jmp loc_4045DB  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
jmp loc_404BCC  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 28h +
jmp loc_418D51  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4704D8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470534 +
jmp loc_44FD35  +
***
lea ecx [ebp-28h] +
jmp loc_4045DB  +
***
lea ecx [ebp-12B8h] +
lea ecx [ebp-12A4h] +
lea ecx [ebp-12A0h] +
lea ecx [ebp-128h] +
lea ecx [ebp-128h] +
lea ecx [ebp-12A8h] +
lea ecx [ebp-12ACh] +
lea ecx [ebp-12B0h] +
lea ecx [ebp-12B4h] +
lea ecx [ebp-1298h] +
lea ecx [ebp-1298h] +
lea ecx [ebp-23Ch] +
lea ecx [ebp-23Ch] +
lea ecx [ebp-129Ch] +
lea ecx [ebp-12B4h] +
lea ecx [ebp-12B4h] +
jmp loc_408D34  +
***
lea ecx [ebp-10h] +
jmp loc_408D34  +
***
lea ecx [ebp-18h] +
lea ecx [ebp+8] +
jmp loc_4045DB  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-48h] +
lea ecx [ebp-14h] +
lea ecx [ebp-34h] +
jmp loc_4045DB  +
***
mov ecx [ebp-16Ch] +
lea ecx [ebp-164h] +
mov ecx [ebp-16Ch] +
lea ecx [ebp-168h] +
lea ecx [ebp-1A4h] +
lea ecx [ebp-18Ch] +
lea ecx [ebp-180h] +
lea ecx [ebp-1ACh] +
lea ecx [ebp-194h] +
lea ecx [ebp-1A4h] +
lea ecx [ebp-18Ch] +
lea ecx [ebp-180h] +
lea ecx [ebp-1ACh] +
lea ecx [ebp-194h] +
jmp loc_440096  +
***
lea ecx [ebp-128h] +
lea ecx [ebp-128h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-358h] +
lea ecx [ebp-358h] +
mov ecx [ebp-374h] +
lea ecx [ebp-36Ch] +
lea ecx [ebp-360h] +
lea ecx [ebp-36Ch] +
lea ecx [ebp-378h] +
lea ecx [ebp-35Ch] +
jmp sub_4018AD  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-384h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4707B8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_47042C +
jmp loc_44FD35  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
jmp loc_406B37  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470840 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4701B8 +
jmp loc_44FD35  +
***
mov eax [ebp-30h] +
mov ecx [ebp-34h] +
mov ecx [ebp-38h] +
mov ecx [ebp-34h] +
add ecx 8 +
jmp loc_404BCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_47087C +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4701B8 +
jmp loc_44FD35  +
***
lea ecx [ebp-28h] +
jmp sub_4095B6  +
***
lea ecx [ebp-28h] +
jmp sub_4095B6  +
***
mov eax [ebp-3A4h] +
and eax 1 +
jz locret_451251  +
and dword ptr [ebp-3A4h] 0FFFFFFFEh +
mov ecx [ebp-3ACh] +
jmp sub_4095B6  +
retn   +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
add ecx 20h +
jmp ds:??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4512CE  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_4095B6  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4709E8 +
jmp loc_44FD35  +
***
mov ecx [ebp-10h] +
jmp sub_40CA8D  +
***
lea ecx [ebp-30h] +
jmp sub_40C9DA  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470A40 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470ABC +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_47042C +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ECh] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0F4h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
lea ecx [ebp-2Ch] +
jmp sub_40EB6D  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-120h] +
lea ecx [ebp-118h] +
jmp sub_40C334  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-124h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470B50 +
jmp loc_44FD35  +
***
lea ecx [ebp-38h] +
lea ecx [ebp-40h] +
jmp sub_40D6AB  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
jmp loc_40FBAE  +
***
lea ecx [ebp-24h] +
jmp sub_40C9DA  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470CA4 +
jmp loc_44FD35  +
***
mov eax offset unk_470D04 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
lea ecx [ebp-1Ch] +
jmp sub_410B1C  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470DB4 +
jmp loc_44FD35  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-1Ch] +
jmp loc_410FDB  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
jmp loc_410FDB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470E14 +
jmp loc_44FD35  +
***
lea ecx [ebp-14h] +
jmp loc_4114F3  +
***
lea ecx [ebp-18h] +
jmp loc_41096C  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470E74 +
jmp loc_44FD35  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
jmp loc_411748  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp sub_411759  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470EDC +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470F10 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-924h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470F68 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D0h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
lea ecx [ebp-2Ch] +
jmp sub_4095B6  +
***
lea ecx [ebp-2Ch] +
jmp sub_4095B6  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470FC8 +
jmp loc_44FD35  +
***
lea ecx [ebp-6E4h] +
jmp loc_415F1F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6F0h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471034 +
jmp loc_44FD35  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
add ecx 20h +
jmp ds:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_45195E  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_4096E8  +
retn   +
***
lea ecx [ebp-30h] +
jmp sub_416BB4  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4710C0 +
jmp loc_44FD35  +
***
lea ecx [ebp-2Ch] +
jmp sub_4095B6  +
***
lea ecx [ebp-2Ch] +
jmp sub_4095B6  +
***
lea ecx [ebp+0Ch] +
jmp loc_408CEE  +
***
lea ecx [ebp-10h] +
jmp loc_408CEE  +
***
lea ecx [ebp-18h] +
jmp loc_408CEE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4711D0 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471230 +
jmp loc_44FD35  +
***
lea ecx [ebp-34h] +
jmp sub_417893  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4712E0 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_47130C +
jmp loc_44FD35  +
***
mov edx [esp+arg_4] +
lea ecx [ebp-20h] +
jmp sub_4182D5  +
***
lea ecx [ebp-20h] +
jmp sub_4183A3  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471440 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_47146C +
jmp loc_44FD35  +
***
lea ecx [ebp-1Ch] +
jmp sub_417353  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4714C4 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4714F0 +
jmp loc_44FD35  +
***
lea ecx [ebp-28h] +
jmp sub_4095B6  +
***
lea ecx [ebp-28h] +
jmp sub_4095B6  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471574 +
jmp loc_44FD35  +
***
pop ecx  +
retn   +
***
mov eax [ebp-0CCh] +
and eax 1 +
jz locret_451CDC  +
and dword ptr [ebp-0CCh] 0FFFFFFFEh +
mov ecx [ebp-0C8h] +
jmp sub_4106D2  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D0h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471624 +
jmp loc_44FD35  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-244h] +
lea ecx [ebp-294h] +
lea ecx [ebp-25Ch] +
lea ecx [ebp-2B0h] +
jmp sub_4106D2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2C0h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_47167C +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D4h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
jmp sub_4095B6  +
***
lea ecx [ebp-390h] +
lea ecx [ebp-1D0h] +
lea ecx [ebp-39Ch] +
lea ecx [ebp-1A0h] +
lea ecx [ebp-1A0h] +
lea ecx [ebp-378h] +
lea ecx [ebp-3A8h] +
lea ecx [ebp-350h] +
lea ecx [ebp-188h] +
lea ecx [ebp-188h] +
mov eax [ebp-360h] +
lea ecx [ebp-188h] +
lea ecx [ebp-1A0h] +
lea ecx [ebp-1B8h] +
lea ecx [ebp-340h] +
jmp loc_41D7B5  +
***
lea ecx [ebp-2B0h] +
lea ecx [ebp-340h] +
lea ecx [ebp-308h] +
lea ecx [ebp-298h] +
lea ecx [ebp-2C8h] +
lea ecx [ebp-278h] +
jmp sub_4095B6  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-344h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4717D0 +
jmp loc_44FD35  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-1B0h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-28h] +
lea ecx [ebp-19Ch] +
lea ecx [ebp-88h] +
lea ecx [ebp-180h] +
lea ecx [ebp-28h] +
lea ecx [ebp-174h] +
lea ecx [ebp-28h] +
lea ecx [ebp-70h] +
lea ecx [ebp-28h] +
lea ecx [ebp-180h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-58h] +
lea ecx [ebp-0B8h] +
jmp sub_4095B6  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4520C8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_4095B6  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4718D0 +
jmp loc_44FD35  +
***
mov ecx [ebp-10h] +
jmp loc_408F30  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4718FC +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471928 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471980 +
jmp loc_44FD35  +
***
mov eax offset unk_4719D8 +
jmp loc_44FD35  +
***
lea ecx [ebp-28h] +
mov eax [ebp-38h] +
and eax 1 +
jz locret_4521C1  +
and dword ptr [ebp-38h] 0FFFFFFFEh +
mov ecx [ebp-34h] +
jmp sub_4095B6  +
retn   +
***
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471A58 +
jmp loc_44FD35  +
***
lea ecx [ebp+8] +
lea ecx [ebp-30h] +
lea ecx [ebp-28h] +
jmp sub_4096E8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471A8C +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-11Ch] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3F0h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A4h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-444h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2E4h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471AC8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-184h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471BA8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-630h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
lea ecx [ebp-20h] +
jmp sub_410B1C  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471BF4 +
jmp loc_44FD35  +
***
lea ecx [ebp-2Ch] +
jmp sub_410B1C  +
***
lea ecx [ebp-60h] +
lea ecx [ebp-40h] +
mov eax [ebp-64h] +
lea ecx [ebp-58h] +
jmp sub_4095B6  +
***
lea ecx [ebp-8Ch] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
jmp sub_4095B6  +
***
lea ecx [ebp-28h] +
jmp sub_4095B6  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
jmp sub_4095B6  +
***
lea ecx [ebp-28h] +
jmp sub_4096E8  +
***
mov eax [ebp-58h] +
lea ecx [ebp-44h] +
jmp sub_4096E8  +
***
mov eax [ebp-0FCh] +
lea ecx [ebp-0F8h] +
lea ecx [ebp-0E0h] +
lea ecx [ebp-0B0h] +
jmp sub_4095B6  +
***
lea ecx [ebp-7Ch] +
jmp sub_4095B6  +
***
lea ecx [ebp-0A0h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-94h] +
jmp sub_4095B6  +
***
lea ecx [ebp-24Ch] +
lea ecx [ebp-234h] +
lea ecx [ebp-264h] +
lea ecx [ebp-2CCh] +
jmp sub_4095B6  +
***
lea ecx [ebp-280h] +
lea ecx [ebp-250h] +
lea ecx [ebp-268h] +
lea ecx [ebp-2B0h] +
lea ecx [ebp-298h] +
lea ecx [ebp-238h] +
jmp sub_4095B6  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
jmp sub_4095B6  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_471FFC +
jmp loc_44FD35  +
***
lea ecx [ebp-234h] +
lea ecx [ebp-27Ch] +
lea ecx [ebp-264h] +
lea ecx [ebp-27Ch] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-27Ch] +
lea ecx [ebp-264h] +
lea ecx [ebp-27Ch] +
jmp sub_4095B6  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2B8h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4720C8 +
jmp loc_44FD35  +
***
lea ecx [ebp-2Ch] +
jmp sub_4095B6  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4721B8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472218 +
jmp loc_44FD35  +
***
lea ecx [ebp-38h] +
jmp loc_43203A  +
***
lea ecx [ebp-18h] +
jmp loc_43203A  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-44h] +
jmp loc_410FDB  +
***
mov ecx [ebp-10h] +
jmp sub_4095B6  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472330 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4701B8 +
jmp loc_44FD35  +
***
mov eax [ebp-20h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
jmp loc_410FDB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-88h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_47235C +
jmp loc_44FD35  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
jmp loc_410FDB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472398 +
jmp loc_44FD35  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
add ecx 8 +
jmp ds:??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp sub_411759  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472400 +
jmp loc_44FD35  +
***
lea ecx [ebp-30h] +
jmp sub_4390E1  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-1Ch] +
jmp loc_439A30  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472494 +
jmp loc_44FD35  +
***
mov ecx [ebp-10h] +
jmp loc_408CE5  +
***
lea ecx [ebp-0A0h] +
jmp sub_432B41  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-8Ch] +
jmp sub_4360D5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472528 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_47255C +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4725B4 +
jmp loc_44FD35  +
***
lea ecx [ebp-90h] +
mov eax [ebp-10h] +
mov eax [ebp-10h] +
lea ecx [ebp-58h] +
mov eax [ebp-10h] +
mov eax [ebp-10h] +
and eax 8 +
jz locret_452DF2  +
and dword ptr [ebp-10h] 0FFFFFFF7h +
lea ecx [ebp-3Ch] +
jmp loc_40B1D1  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4725F0 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-15Ch] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
lea ecx [ebp-30h] +
jmp sub_416BB4  +
***
lea ecx [ebp-24h] +
jmp sub_416BB4  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4726A4 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0E8h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D0h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4701B8 +
jmp loc_44FD35  +
***
lea ecx [ebp-38h] +
jmp sub_411C55  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
jmp loc_439A30  +
***
mov ecx [ebp-10h] +
jmp loc_410FDB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472764 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472790 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4727E8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472840 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472898 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4728F0 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472948 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4729A0 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4729F8 +
jmp loc_44FD35  +
***
mov eax offset unk_472A50 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472AA8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472B00 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472B58 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472BB0 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472C08 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472C60 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472CB8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472D10 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472D68 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472DC0 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_472E18 +
jmp loc_44FD35  +
***
mov ecx [ebp-50h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-38h] +
lea ecx [ebp-38h] +
jmp sub_411C55  +
***
lea ecx [ebp-38h] +
jmp sub_411C55  +
***
lea ecx [ebp-38h] +
jmp sub_411C55  +
***
lea ecx [ebp-18h] +
jmp sub_410B1C  +
***
lea ecx [ebp-10h] +
jmp sub_417353  +
***
lea ecx [ebp-10h] +
mov ecx [ebp-14h] +
jmp loc_43F15D  +
***
lea ecx [ebp-10h] +
jmp loc_417221  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 14h +
jmp sub_417353  +
***
lea ecx [ebp-38h] +
lea ecx [ebp-28h] +
lea ecx [ebp-18h] +
jmp loc_43FF27  +
***
lea ecx [ebp-38h] +
lea ecx [ebp-28h] +
lea ecx [ebp-48h] +
jmp loc_44059B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-38h] +
lea ecx [ebp-18h] +
jmp loc_43FF27  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-40h] +
jmp loc_440096  +
***
lea ecx [ebp-34h] +
jmp loc_440096  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_473168 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1534h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4701B8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4701B8 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-360h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4725B4 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-784h] +
xor ecx eax +
call sub_44EDCF  +
nop   +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470F68 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1BCh] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4725B4 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4725B4 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470F68 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1084h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-21C4h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_470194 +
jmp loc_44FD35  +
***
lea ecx [ebp-10h] +
jmp sub_44BDA6  +
***
lea ecx [ebp-124h] +
lea ecx [ebp-124h] +
jmp loc_406B37  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 28h +
jmp sub_408326  +
***
lea ecx [ebp-358h] +
lea ecx [ebp-358h] +
lea ecx [ebp-128h] +
lea ecx [ebp-128h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
jmp loc_406B37  +
***
lea ecx [ebp-128h] +
lea ecx [ebp-128h] +
jmp loc_406B37  +
***
lea ecx [ebp-12Ch] +
lea ecx [ebp-12Ch] +
lea ecx [ebp-35Ch] +
lea ecx [ebp-35Ch] +
lea ecx [ebp-244h] +
lea ecx [ebp-244h] +
jmp loc_406B37  +
***
lea ecx [ebp-574h] +
lea ecx [ebp-574h] +
lea ecx [ebp-58Ch] +
lea ecx [ebp-124h] +
lea ecx [ebp-124h] +
lea ecx [ebp-238h] +
lea ecx [ebp-238h] +
lea ecx [ebp-460h] +
lea ecx [ebp-460h] +
lea ecx [ebp-34Ch] +
lea ecx [ebp-34Ch] +
jmp loc_406B37  +
***
lea ecx [ebp-238h] +
lea ecx [ebp-238h] +
lea ecx [ebp-124h] +
lea ecx [ebp-124h] +
jmp loc_406B37  +
***
lea ecx [ebp-124h] +
lea ecx [ebp-124h] +
lea ecx [ebp-360h] +
lea ecx [ebp-34Ch] +
lea ecx [ebp-34Ch] +
lea ecx [ebp-238h] +
lea ecx [ebp-238h] +
jmp loc_406B37  +
***
lea ecx [ebp-128h] +
lea ecx [ebp-128h] +
lea ecx [ebp-12Ch] +
jmp loc_417221  +
***
lea ecx [ebp-128h] +
lea ecx [ebp-124h] +
lea ecx [ebp-124h] +
jmp loc_406B37  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-134h] +
xor ecx eax +
call sub_44EDCF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_4734DC +
jmp loc_44FD35  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-18h] +
jmp loc_404BCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_473518 +
jmp loc_44FD35  +
***
mov ecx [ebp-10h] +
jmp loc_404BCC  +
***
lea ecx [ebp-128h] +
lea ecx [ebp-128h] +
lea ecx [ebp-390h] +
lea ecx [ebp-358h] +
lea ecx [ebp-358h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
jmp loc_406B37  +
***
lea ecx [ebp-128h] +
lea ecx [ebp-128h] +
jmp loc_406B37  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 10h +
jmp loc_4045DB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44EDCF  +
mov eax offset unk_473608 +
jmp loc_44FD35  +
***
mov dword_479F50 offset off_454E90 +
mov ecx offset dword_479F50 +
jmp loc_4018BE  +
***
mov eax dword_479F80 +
mov ecx offset dword_479F80 +
push dword ptr [eax+4]  +
push ecx  +
call sub_408F5E  +
push dword_479F80  +
call ds:free  +
pop ecx  +
retn   +
***
mov ecx offset dword_479FC0 +
mov ecx offset dword_479FBC +
mov ecx offset unk_479FB8 +
jmp sub_409BEC  +
***
mov ecx offset dword_4776B8 +
jmp loc_40D650  +
***
push 18h  +
pop ecx  +
pop ecx  +
mov ecx offset dword_477840 +
mov ecx offset dword_477860 +
pop ecx  +
pop ecx  +
mov eax hObject +
test eax eax +
jz locret_453C47  +
and hObject 0 +
push eax  +
call ds:CloseHandle  +
retn   +
***
mov ecx offset dword_47A2A0 +
mov ecx offset dword_47A2AC +
jmp loc_419046  +
***
mov ecx offset dword_47CD30 +
jmp sub_4106D2  +
***
push offset unk_47A2B8  +
call ds:_Mtx_destroy_in_situ  +
pop ecx  +
retn   +
***
mov ecx offset unk_47CD40 +
jmp sub_4095B6  +
***
mov ecx offset dword_47CD8C +
call sub_421A3B  +
push offset unk_47CD5C  +
call ds:_Mtx_destroy_in_situ  +
pop ecx  +
retn   +
***
mov ecx offset dword_47CDD4 +
jmp sub_4106D2  +
***
push offset unk_47CDA0  +
call ds:_Mtx_destroy_in_situ  +
pop ecx  +
retn   +
***
mov eax dword_47A2E8 +
mov ecx offset dword_47A2E8 +
push dword ptr [eax+4]  +
push ecx  +
call sub_4287C7  +
push dword_47A2E8  +
call ds:free  +
pop ecx  +
retn   +
***
push offset unk_47A2F0  +
call ds:_Mtx_destroy_in_situ  +
pop ecx  +
retn   +
***
mov ecx offset dword_47A354 +
push 0Ch  +
mov ecx offset unk_47C3C4 +
pop ecx  +
pop ecx  +
pop ecx  +
mov ecx offset dword_477A48 +
pop ecx  +
mov ecx offset dword_47C4C0 +
pop ecx  +
retn   +
***
mov ecx offset unk_47CDE4 +
jmp sub_415A59  +
***
push offset unk_47CDF4  +
call ds:_Mtx_destroy_in_situ  +
pop ecx  +
retn   +
***
mov ecx offset unk_47C730 +
jmp sub_432A9D  +
***
mov ecx offset dword_47C4AC +
jmp sub_43DEAC  +
***
test esi esi +
mov ecx offset unk_47918C +
mov ecx offset unk_47956C +
jmp loc_44FDEB  +
***
