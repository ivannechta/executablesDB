add [edx+50h] bl +
rcr byte ptr [ebp+4Eh] 24h +
push 0F36C696Bh  +
aam  8Ah +
pop ds  +
rcl byte ptr [edi+17h] 2Ch +
pop ss  +
push ss  +
push ds  +
sahf   +
retf 8CCEh  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 18h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
test edx edx +
jz loc_1002D3C  +
cmp word ptr [edx] 0 +
jnz loc_1002D21  +
push 0Eh  +
jmp loc_1002D3E  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1002D27  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_1002D3F  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_1002D50  +
cmp word ptr [edx] 0 +
jnz loc_1002D55  +
mov edx offset aNull +
jmp loc_1002D55  +
mov edx offset aNull_0 +
push 0  +
push 4  +
lea ecx [ebp+arg_18] +
push ecx  +
push eax  +
push edx  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 30h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
mov [eax+10h] ecx +
mov [eax] ecx +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ah] dx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor edx edx +
push ebx  +
mov [eax] edx +
mov eax [ebp+8] +
sub eax 4 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi esi +
jz loc_1002DDB  +
dec eax  +
jz loc_1002DD2  +
push 57h  +
pop eax  +
jmp loc_1002E49  +
xor ebx ebx +
xor eax eax +
mov [ebp+0Fh] al +
jmp loc_1002E01  +
push dword ptr [ebp+14h]  +
call ds:GetTraceLoggerHandle  +
mov ebx eax +
push edx  +
push ebx  +
mov [ebp-4] edx +
call ds:GetTraceEnableLevel  +
push dword ptr [ebp-4]  +
mov [ebp+0Fh] al +
push ebx  +
call ds:GetTraceEnableFlags  +
mov edx [ebp-4] +
movzx ecx word ptr [esi+1Ah] +
test cl 1 +
jz loc_1002E2A  +
cmp dword ptr [esi+10h] 0 +
jz loc_1002E2A  +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov [ecx+4] edx +
movzx ecx byte ptr [ebp+0Fh] +
mov edx [esi+10h] +
mov [edx+0Ch] ecx +
mov ecx [esi+10h] +
mov [ecx+8] eax +
jmp loc_1002E47  +
test cl 2 +
jz loc_1002E38  +
mov esi [esi+10h] +
test esi esi +
jz loc_1002E38  +
mov edi esi +
mov cl [ebp+0Fh] +
mov [edi+10h] ebx +
mov [edi+14h] edx +
mov [edi+19h] cl +
mov [edi+1Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi AuthIdentity +
push edi  +
mov edi offset dword_1012560 +
jmp loc_1002E94  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [esi+8] +
push ecx  +
push 0  +
push 0  +
lea ecx [ebp+var_8] +
push ecx  +
push 1  +
push eax  +
push esi  +
push offset loc_1002DAC  +
add edi 4 +
mov [ebp+var_8] eax +
call ds:RegisterTraceGuidsW  +
mov esi [esi] +
test esi esi +
jnz loc_1002E6B  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi AuthIdentity +
push edi  +
mov edi offset AuthIdentity +
cmp esi edi +
jz loc_1002EE0  +
jmp loc_1002ED6  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
mov edx eax +
or edx ecx +
jz loc_1002ED4  +
push ecx  +
push eax  +
call ds:UnregisterTraceGuids  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
mov esi [esi] +
test esi esi +
jnz loc_1002EB8  +
mov AuthIdentity edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
xor ebx ebx +
mov esi offset AuthIdentity +
inc ebx  +
mov edi offset dword_1001680 +
cmp eax esi +
jz loc_1002F24  +
cmp byte ptr [eax+19h] 4 +
jb loc_1002F24  +
test [eax+1Ch] bl +
jz loc_1002F24  +
push edi  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 0  +
push 2  +
push [ebp+arg_0]  +
push offset unk_10120A0  +
call sub_10095EE  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1002F67  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1002FC6  +
cmp [eax+19h] bl +
jb loc_1002FA6  +
test [eax+1Ch] bl +
jz loc_1002FA6  +
push [ebp+arg_0]  +
push edi  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1002FA1  +
mov eax [ebp+arg_10] +
push [ebp+var_4]  +
mov [eax] ebx +
call sub_100995D  +
mov ecx [ebp+arg_4] +
mov eax [ebp+var_4] +
test ecx ecx +
jz loc_1002F83  +
mov edx [eax+18h] +
mov [ecx] edx +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1002F8F  +
mov edx [eax+1Ch] +
mov [ecx] edx +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_1002F9B  +
mov edx [eax+20h] +
mov [ecx] edx +
push eax  +
call sub_10099CD  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1002FC6  +
cmp byte ptr [eax+19h] 4 +
jb loc_1002FC6  +
test [eax+1Ch] bl +
jz loc_1002FC6  +
push [ebp+arg_0]  +
push edi  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001680 +
cmp eax esi +
jz loc_1003011  +
cmp byte ptr [eax+19h] 4 +
jb loc_1003011  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003011  +
push edi  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jz loc_100305D  +
cmp [ebp+arg_4] ecx +
jz loc_100305D  +
push [ebp+arg_4]  +
push ecx  +
push [ebp+arg_0]  +
push offset unk_10120A0  +
call sub_100974A  +
mov ebx eax +
test ebx ebx +
jz loc_1003058  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100307C  +
cmp byte ptr [eax+19h] 1 +
jb loc_100305D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100305D  +
push ebx  +
push edi  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100307C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100307C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100307C  +
push ebx  +
push edi  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_10] edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_10030D2  +
cmp byte ptr [eax+19h] 4 +
jb loc_10030D2  +
test byte ptr [eax+1Ch] 1 +
jz loc_10030D2  +
mov esi offset dword_1001680 +
push esi  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
jmp loc_10030D7  +
mov esi offset dword_1001680 +
cmp [ebp+arg_8] edi +
jnz loc_1003108  +
mov [ebp+var_C] 57h +
cmp eax ebx +
jz loc_100319E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100319E  +
push esi  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100319E  +
lea eax [ebp+var_4] +
push eax  +
push 1  +
push edi  +
push 2  +
push [ebp+arg_0]  +
push offset unk_10120A0  +
call sub_10095EE  +
mov [ebp+var_C] eax +
cmp eax edi +
jnz loc_100319E  +
push [ebp+var_4]  +
call sub_100995D  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
mov [ebp+var_10] 1 +
cmp eax [ecx+24h] +
jz loc_100316B  +
push 6  +
pop ecx  +
mov [ebp+var_C] ecx +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100319E  +
cmp byte ptr [eax+19h] 1 +
jb loc_100319E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100319E  +
push ecx  +
push esi  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100319E  +
lea eax [ebp+var_8] +
push eax  +
push 14h  +
call sub_100A309  +
mov [ebp+var_C] eax +
cmp eax edi +
jnz loc_100319E  +
mov eax [ebp+var_4] +
mov esi [eax+24h] +
mov edi [ebp+var_8] +
push 5  +
pop ecx  +
movs   +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_8] +
and [ebp+var_8] 0 +
mov [ecx] eax +
xor edi edi +
mov esi offset dword_1001680 +
push [ebp+var_8]  +
call sub_100A3D2  +
cmp [ebp+var_10] edi +
jz loc_10031B3  +
push [ebp+var_4]  +
call sub_10099CD  +
cmp [ebp+var_4] edi +
jz loc_10031EC  +
push 1  +
push edi  +
push [ebp+arg_0]  +
push offset unk_10120A0  +
call sub_100974A  +
test eax eax +
jz loc_10031EC  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_10031EC  +
test byte ptr [eax+1Ch] 1 +
jz loc_10031EC  +
push [ebp+var_C]  +
push esi  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_1003239  +
cmp byte ptr [eax+19h] 4 +
jb loc_1003239  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003239  +
push offset dword_1001680  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
mov esi [ebp+arg_4] +
mov ebx offset unk_10120A0 +
test esi esi +
jz loc_1003278  +
cmp [ebp+arg_8] 0 +
jnz loc_1003278  +
mov [ebp+arg_4] 57h +
cmp eax edi +
jz loc_10032E8  +
test byte ptr [eax+1Ch] 1 +
jz loc_10032E8  +
push offset dword_1001680  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_10032E8  +
lea eax [ebp+var_4] +
push eax  +
push 1  +
push 0  +
push 2  +
push [ebp+arg_0]  +
push ebx  +
call sub_10095EE  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_10032E8  +
push [ebp+var_4]  +
call sub_100987D  +
mov eax [ebp+var_4] +
push dword ptr [eax+24h]  +
call sub_100A3D2  +
mov eax [ebp+var_4] +
and dword ptr [eax+24h] 0 +
test esi esi +
jz loc_10032E0  +
mov eax [ebp+var_4] +
add eax 24h +
push eax  +
push 14h  +
call sub_100A309  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_10032E0  +
mov eax [ebp+var_4] +
mov edi [eax+24h] +
push 5  +
pop ecx  +
movs   +
mov eax [ebp+var_4] +
mov eax [eax+24h] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov edi offset AuthIdentity +
push [ebp+var_4]  +
call sub_10098ED  +
cmp [ebp+var_4] 0 +
jz loc_1003323  +
push 1  +
push 0  +
push [ebp+arg_0]  +
push ebx  +
call sub_100974A  +
test eax eax +
jz loc_1003323  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003323  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003323  +
push [ebp+arg_4]  +
push offset dword_1001680  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100336B  +
cmp byte ptr [eax+19h] 4 +
jb loc_100336B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100336B  +
push offset dword_1001680  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov ebx offset unk_10120A0 +
test esi esi +
jz loc_1003404  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_1003404  +
lea eax [ebp+var_4] +
push eax  +
push 1  +
push 0  +
push 2  +
push [ebp+arg_0]  +
push ebx  +
call sub_10095EE  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_10033BC  +
push [ebp+var_4]  +
call sub_100995D  +
mov eax [ebp+var_4] +
mov ecx [eax+28h] +
mov [esi] ecx +
lea esi [eax+2Ch] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call sub_10099CD  +
cmp [ebp+var_4] 0 +
jz loc_10033FA  +
push 1  +
push 0  +
push [ebp+arg_0]  +
push ebx  +
call sub_100974A  +
test eax eax +
jz loc_10033FA  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_10033FA  +
test byte ptr [eax+1Ch] 1 +
jz loc_10033FA  +
push [ebp+arg_4]  +
push offset dword_1001680  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov [ebp+arg_4] 57h +
cmp eax offset AuthIdentity +
jz loc_10033BC  +
test byte ptr [eax+1Ch] 1 +
jz loc_10033BC  +
push offset dword_1001680  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_10033BC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+Type] ebx +
mov [ebp+hKey] ebx +
mov dword ptr [ebp+Data] ebx +
mov [ebp+cbData] 4 +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001680 +
cmp eax esi +
jz loc_100347B  +
cmp byte ptr [eax+19h] 4 +
jb loc_100347B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100347B  +
push edi  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push ebx  +
push offset SubKey  +
push 80000002h  +
mov dword_1012008 0EA60h +
call ds:RegOpenKeyExW  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_10034DD  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1003590  +
cmp byte ptr [eax+19h] 4 +
jb loc_100356F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100356F  +
push [ebp+var_4]  +
push edi  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100356A  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1003527  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1003561  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003561  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003561  +
push [ebp+var_4]  +
push edi  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1003561  +
cmp [ebp+Type] 4 +
jnz loc_100353D  +
cmp [ebp+cbData] 4 +
jnz loc_100353D  +
mov eax dword ptr [ebp+Data] +
mov dword_1012008 eax +
jmp loc_1003561  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1003561  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003561  +
push edi  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1003590  +
cmp byte ptr [eax+19h] 4 +
jb loc_1003590  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003590  +
push [ebp+var_4]  +
push edi  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
mov [ebp+hObject] esi +
mov [ebp+var_10] esi +
mov [ebp+NewState] esi +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_10035D9  +
cmp byte ptr [eax+19h] 4 +
jb loc_10035D9  +
test byte ptr [eax+1Ch] 1 +
jz loc_10035D9  +
push offset dword_1001680  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+NewState] +
push eax  +
mov ebx 100h +
push ebx  +
call sub_100A309  +
mov [ebp+var_4] eax +
cmp eax esi +
jnz loc_1003732  +
push edi  +
push ebx  +
push esi  +
push [ebp+NewState]  +
call memset  +
mov eax [ebp+NewState] +
add esp 0Ch +
mov dword ptr [eax] 15h +
xor edi edi +
mov eax [ebp+NewState] +
mov dword ptr [esi+eax+0Ch] 4 +
mov eax [ebp+NewState] +
lea eax [esi+eax+4] +
push eax  +
push lpName[edi*4]  +
push 0  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jnz loc_100363F  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100369F  +
inc edi  +
add esi 0Ch +
cmp edi 15h +
jb loc_100360C  +
lea eax [ebp+hObject] +
push eax  +
push 28h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_10036DA  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10036DA  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003731  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003731  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003731  +
push [ebp+var_4]  +
push offset dword_1001680  +
push 21h  +
jmp loc_1003726  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003731  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003731  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003731  +
push [ebp+var_4]  +
push lpName[edi*4]  +
push edi  +
push offset dword_1001680  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002D0B  +
jmp loc_1003731  +
xor eax eax +
push eax  +
push eax  +
push ebx  +
push [ebp+NewState]  +
mov [ebp+var_10] 1 +
push eax  +
push [ebp+hObject]  +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_1003731  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1003731  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003731  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003731  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003731  +
push [ebp+var_4]  +
push offset dword_1001680  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
push [ebp+NewState]  +
call sub_100A3D2  +
cmp [ebp+var_10] 0 +
pop esi  +
pop ebx  +
jz loc_100374B  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003778  +
cmp byte ptr [eax+19h] 4 +
jb loc_1003778  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003778  +
push [ebp+var_4]  +
push offset dword_1001680  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
mov eax AuthIdentity +
mov edi offset dword_1001680 +
cmp eax offset AuthIdentity +
jz loc_10037B9  +
cmp byte ptr [eax+19h] 4 +
jb loc_10037B9  +
test byte ptr [eax+1Ch] 1 +
jz loc_10037B9  +
push edi  +
push 38h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor ebx ebx +
inc ebx  +
push ebx  +
push offset Target  +
call ds:InterlockedExchange  +
test eax eax +
jnz loc_1003BF8  +
push esi  +
push offset unk_10120A0  +
call sub_1009364  +
mov esi eax +
test esi esi +
jz loc_1003817  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003B72  +
cmp [eax+19h] bl +
jb loc_1003B72  +
test [eax+1Ch] bl +
jz loc_1003B72  +
push esi  +
push edi  +
push 39h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1003B6D  +
mov [ebp+var_4] ebx +
mov ebx offset unk_10120B0 +
push ebx  +
call sub_1009364  +
mov esi eax +
test esi esi +
jz loc_1003855  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 3Ah  +
jmp loc_1003807  +
call sub_1004356  +
mov [ebp+var_4] 3 +
call sub_10082A4  +
mov esi eax +
test esi esi +
jz loc_1003899  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 3Bh  +
jmp loc_1003807  +
push ebx  +
mov [ebp+var_4] 4 +
call sub_100A1A1  +
mov esi eax +
test esi esi +
jz loc_10038D9  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 3Ch  +
jmp loc_1003807  +
mov [ebp+var_4] 5 +
call sub_100A997  +
mov esi eax +
test esi esi +
jz loc_1003918  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 3Dh  +
jmp loc_1003807  +
mov ebx offset unk_10120A0 +
push ebx  +
mov [ebp+var_4] 6 +
call sub_100A1A1  +
mov esi eax +
test esi esi +
jz loc_100395D  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 3Eh  +
jmp loc_1003807  +
mov [ebp+var_4] 7 +
call sub_100428C  +
mov esi eax +
cmp esi 139Fh +
jnz loc_10039A9  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003999  +
cmp byte ptr [eax+19h] 3 +
jb loc_1003999  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003999  +
push edi  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push [ebp+dwMilliseconds]  +
call ds:Sleep  +
call sub_100428C  +
mov esi eax +
test esi esi +
jz loc_10039DA  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 40h  +
jmp loc_1003807  +
push ebx  +
mov [ebp+var_4] 8 +
call sub_1009CBC  +
mov esi eax +
mov ebx 10D3h +
cmp esi ebx +
jnz loc_1003A2D  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003A18  +
cmp byte ptr [eax+19h] 3 +
jb loc_1003A18  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003A18  +
push edi  +
push 41h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push [ebp+arg_4]  +
call ds:Sleep  +
push offset unk_10120A0  +
call sub_1009CBC  +
mov esi eax +
test esi esi +
jz loc_1003A5E  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 42h  +
jmp loc_1003807  +
push offset unk_10120B0  +
mov [ebp+var_4] 9 +
call sub_1009CBC  +
mov esi eax +
cmp esi ebx +
jnz loc_1003AB4  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_1003A9D  +
cmp byte ptr [eax+19h] 3 +
jb loc_1003A9D  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003A9D  +
push edi  +
push 43h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push [ebp+arg_8]  +
call ds:Sleep  +
push offset unk_10120B0  +
call sub_1009CBC  +
mov esi eax +
jmp loc_1003AB9  +
mov ebx offset AuthIdentity +
test esi esi +
jz loc_1003AE7  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 44h  +
jmp loc_1003807  +
push [ebp+arg_C]  +
mov [ebp+var_4] 0Ah +
call sub_10065AD  +
mov esi eax +
test esi esi +
jz loc_1003B1A  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 45h  +
jmp loc_1003807  +
mov [ebp+var_4] 0Bh +
call sub_1005D57  +
mov esi eax +
test esi esi +
jz loc_1003B4A  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1003B72  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003B72  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B72  +
push esi  +
push edi  +
push 46h  +
jmp loc_1003807  +
mov [ebp+var_4] 0Ch +
call sub_100CD49  +
mov eax hObject +
test eax eax +
jz loc_1003BBC  +
push eax  +
call ds:CloseHandle  +
and hObject 0 +
mov eax AuthIdentity +
test esi esi +
jz loc_1003BC1  +
cmp eax offset AuthIdentity +
jz loc_1003B94  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003B94  +
push [ebp+var_4]  +
push edi  +
push 47h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
cmp dword_10120D0 0 +
jz loc_1003BA2  +
call sub_1002EA3  +
mov esi 2C9h +
push esi  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
push esi  +
call ds:ExitProcess  +
mov eax AuthIdentity +
cmp dword_10120D0 0 +
pop esi  +
jz loc_1003BD5  +
call sub_1002EA3  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003BF8  +
cmp byte ptr [eax+19h] 4 +
jb loc_1003BF8  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003BF8  +
push 0  +
push edi  +
push 48h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003C2F  +
cmp byte ptr [eax+19h] 3 +
jb loc_1003C2F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003C2F  +
push offset dword_1001680  +
push 36h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax 1388h +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_1003782  +
xor eax eax +
retn 4  +
***
push 10h  +
push 0  +
push offset sub_1003C03  +
call ds:QueueUserWorkItem  +
test eax eax +
jnz locret_1003CAF  +
call ds:GetLastError  +
mov ecx AuthIdentity +
cmp ecx offset AuthIdentity +
jz loc_1003C87  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1003C87  +
push eax  +
push offset dword_1001680  +
push 37h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
cmp dword_10120D0 0 +
jz loc_1003C95  +
call sub_1002EA3  +
mov esi 2C9h +
push esi  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
push esi  +
call ds:ExitProcess  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
mov ebx offset dword_1001680 +
cmp eax edi +
jz loc_1003CEC  +
cmp byte ptr [eax+19h] 4 +
jb loc_1003CEC  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003CEC  +
push ebx  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor eax eax +
push eax  +
push eax  +
push 1  +
push eax  +
call ds:HeapSetInformation  +
test eax eax +
jnz loc_1003D35  +
call ds:GetLastError  +
mov esi eax +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
jmp loc_1003F8F  +
push 43h  +
call ds:GetSystemMetrics  +
test eax eax +
jz loc_1003D6D  +
mov esi 139Fh +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push ebx  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1003D2B  +
call sub_100359A  +
mov esi eax +
test esi esi +
jnz loc_1003D2B  +
push [ebp+arg_0]  +
call ds:_wtol  +
pop ecx  +
mov dword_10120D4 eax +
call sub_1003431  +
push esi  +
push esi  +
push 1  +
push esi  +
call ds:CreateEventW  +
mov hObject eax +
cmp eax esi +
jnz loc_1003DC8  +
call ds:GetLastError  +
mov esi eax +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 27h  +
jmp loc_1003D20  +
push 1  +
push offset unk_10120A0  +
call sub_100A08D  +
mov esi eax +
test esi esi +
jz loc_1003E04  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 28h  +
jmp loc_1003D20  +
push 2  +
push offset unk_10120B0  +
call sub_100A08D  +
mov esi eax +
test esi esi +
jz loc_1003E40  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 29h  +
jmp loc_1003D20  +
call sub_100A721  +
mov esi eax +
test esi esi +
jz loc_1003E75  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 2Ah  +
jmp loc_1003D20  +
call sub_1005CCE  +
mov esi eax +
test esi esi +
jz loc_1003EAA  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 2Bh  +
jmp loc_1003D20  +
call sub_100CCD3  +
mov esi eax +
test esi esi +
jz loc_1003EDF  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 2Ch  +
jmp loc_1003D20  +
push 0  +
call sub_10041B9  +
mov esi eax +
test esi esi +
jz loc_1003F16  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 2Dh  +
jmp loc_1003D20  +
push offset Uuid  +
call ds:UuidCreate  +
mov esi eax +
test esi esi +
jz loc_1003F45  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8F  +
push esi  +
push ebx  +
push 2Eh  +
jmp loc_1003D20  +
sub esp 10h +
mov edi esp +
mov esi offset Uuid +
movs   +
movs   +
movs   +
movs   +
call sub_10088EE  +
mov esi eax +
test esi esi +
jz loc_1003FB7  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8A  +
push esi  +
push ebx  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 4 +
jb loc_1003FAE  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003FAE  +
push esi  +
push ebx  +
push 35h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
sub esp 10h +
mov edi esp +
push dword_10120D4  +
mov esi offset Uuid +
movs   +
movs   +
movs   +
movs   +
call sub_1004524  +
mov esi eax +
test esi esi +
jz loc_1003FF4  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8A  +
push esi  +
push ebx  +
push 30h  +
jmp loc_1003F7A  +
push 1D4C0h  +
push hObject  +
mov dword_10120D0 1 +
call ds:WaitForSingleObject  +
mov esi eax +
test esi esi +
jz loc_1004042  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004036  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004036  +
push esi  +
push ebx  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push 0  +
call sub_1003C03  +
jmp loc_1003F85  +
call sub_1008188  +
mov esi eax +
test esi esi +
jz loc_100407A  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8A  +
push esi  +
push ebx  +
push 32h  +
jmp loc_1003F7A  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_10040A0  +
cmp byte ptr [eax+19h] 3 +
jb loc_10040A0  +
test byte ptr [eax+1Ch] 1 +
jz loc_10040A0  +
push ebx  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
call sub_1008395  +
mov esi eax +
test esi esi +
jz loc_10040D8  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1003FAE  +
cmp byte ptr [eax+19h] 1 +
jb loc_1003F8A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003F8A  +
push esi  +
push ebx  +
push 34h  +
jmp loc_1003F7A  +
mov edi offset AuthIdentity +
jmp loc_1003D2B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi offset unk_1012540 +
push esi  +
call sub_1002D84  +
push offset dword_1001728  +
mov dword_1012560 offset dword_1001670 +
mov AuthIdentity esi +
call sub_1002E55  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001680 +
cmp eax esi +
jz loc_1004146  +
cmp byte ptr [eax+19h] 4 +
jb loc_1004146  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004146  +
push edi  +
push 49h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp [ebp+arg_0] 2 +
jz loc_1004169  +
push 57h  +
pop ebx  +
cmp eax esi +
jz loc_100419A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100417B  +
push edi  +
push 4Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1004176  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1003CB7  +
mov ebx eax +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100419A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100419A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100419A  +
push ebx  +
push edi  +
push 4Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
cmp dword_10120D0 0 +
jnz loc_10041A8  +
call sub_1002EA3  +
pop edi  +
xor eax eax +
test ebx ebx +
pop esi  +
setnz al  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_10041F2  +
cmp byte ptr [eax+19h] 4 +
jb loc_10041F2  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041F2  +
push offset dword_100172C  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp dword_10120E4 1 +
mov esi offset CriticalSection +
jz loc_1004219  +
push offset dword_10120E4  +
push offset dword_10120E0  +
push esi  +
call sub_100B282  +
mov edi eax +
mov eax AuthIdentity +
jmp loc_100421B  +
xor edi edi +
test edi edi +
jnz loc_100425B  +
push esi  +
call ds:EnterCriticalSection  +
push offset Binding  +
push off_101208C  +
push [ebp+arg_0]  +
call sub_100AFB0  +
mov edi eax +
test edi edi +
jnz loc_100424F  +
and dword_10120EC eax +
mov dword_10120F0 1 +
push esi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100427E  +
cmp byte ptr [eax+19h] 4 +
jb loc_100427E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100427E  +
push edi  +
push offset dword_100172C  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx offset dword_100172C +
cmp eax esi +
jz loc_10042C5  +
cmp byte ptr [eax+19h] 4 +
jb loc_10042C5  +
test byte ptr [eax+1Ch] 1 +
jz loc_10042C5  +
push ebx  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
cmp dword_10120EC 0 +
jz loc_1004301  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100431C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100431C  +
push ebx  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100431C  +
push offset Binding  +
call sub_100AF1E  +
xor eax eax +
mov Binding eax +
mov dword_10120EC eax +
mov dword_10120F0 eax +
push edi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop edi  +
cmp eax esi +
jz loc_100434A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100434A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100434A  +
push [ebp+var_4]  +
push ebx  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
mov ebx offset dword_100172C +
cmp eax edi +
jz loc_1004387  +
cmp byte ptr [eax+19h] 4 +
jb loc_1004387  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004387  +
push ebx  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push esi  +
mov esi offset CriticalSection +
push esi  +
call ds:EnterCriticalSection  +
and dword_10120F0 0 +
push esi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop esi  +
cmp eax edi +
jz loc_10043C8  +
cmp byte ptr [eax+19h] 4 +
jb loc_10043C8  +
test byte ptr [eax+1Ch] 1 +
jz loc_10043C8  +
push 0  +
push ebx  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx offset dword_100172C +
cmp eax esi +
jz loc_1004409  +
cmp byte ptr [eax+19h] 4 +
jb loc_1004409  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004409  +
push ebx  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
cmp dword_10120F0 0 +
jnz loc_1004445  +
mov [ebp+var_4] 5 +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1004456  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004456  +
push ebx  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1004456  +
mov eax [ebp+arg_0] +
mov ecx Binding +
inc dword_10120EC  +
mov [eax] ecx +
push edi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop edi  +
cmp eax esi +
jz loc_1004484  +
cmp byte ptr [eax+19h] 4 +
jb loc_1004484  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004484  +
push [ebp+var_4]  +
push ebx  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_10044CA  +
cmp byte ptr [eax+19h] 4 +
jb loc_10044CA  +
test byte ptr [eax+1Ch] 1 +
jz loc_10044CA  +
push offset dword_100172C  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
mov edi [ebp+arg_0] +
cmp dword ptr [edi] 0 +
jz loc_10044F5  +
push esi  +
mov esi offset CriticalSection +
push esi  +
call ds:EnterCriticalSection  +
dec dword_10120EC  +
and dword ptr [edi] 0 +
push esi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop esi  +
pop edi  +
cmp eax ebx +
pop ebx  +
jz loc_100451B  +
cmp byte ptr [eax+19h] 4 +
jb loc_100451B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100451B  +
push 0  +
push offset dword_100172C  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4_GS  +
mov eax [ebp+arg_0] +
mov [ebp+var_3C] eax +
lea esi [ebp+arg_4] +
lea edi [ebp+var_2C] +
movs   +
movs   +
movs   +
movs   +
and [ebp+var_30] 0 +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_1004570  +
cmp byte ptr [eax+19h] 4 +
jb loc_1004570  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004570  +
push offset dword_100172C  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+var_30] +
push eax  +
call sub_10043D0  +
mov esi eax +
test esi esi +
jnz loc_1004604  +
and [ebp+ms_exc.disabled] eax +
call ds:GetCurrentProcessId  +
push eax  +
sub esp 10h +
lea esi [ebp+var_2C] +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
push [ebp+var_3C]  +
push [ebp+var_30]  +
call sub_100CA15  +
mov esi eax +
mov [ebp+var_38] esi +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10045D8  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-34h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
mov esp [ebp-18h] +
mov esi [ebp-34h] +
mov [ebp-38h] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov ebx offset AuthIdentity +
test esi esi +
jz loc_1004604  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1004604  +
cmp byte ptr [eax+19h] 1 +
jb loc_1004604  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004604  +
push esi  +
push offset dword_100172C  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
lea eax [ebp+var_30] +
push eax  +
call sub_1004492  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1004635  +
cmp byte ptr [eax+19h] 4 +
jb loc_1004635  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004635  +
push esi  +
push offset dword_100172C  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax esi +
call __SEH_epilog4_GS  +
retn 14h  +
***
push 1Ch  +
push offset dword_1010510  +
call __SEH_prolog4  +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-1Ch] edi +
mov [ebp-24h] edi +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+14h]  +
push offset aPreassociateco  +
push 5  +
call sub_1005EBD  +
cmp [ebp+14h] edi +
jz loc_10046AB  +
cmp [ebp+10h] edi +
jnz loc_10046AB  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100474D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100474D  +
push offset dword_100172C  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100474D  +
lea eax [ebp-24h] +
push eax  +
push edi  +
push edi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_100474D  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi edi +
jnz loc_100474D  +
mov [ebp-4] edi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CA41  +
mov esi eax +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_100471E  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
cmp esi edi +
jz loc_100474D  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100474D  +
cmp byte ptr [eax+19h] 1 +
jb loc_100474D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100474D  +
push esi  +
push offset dword_100172C  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push edi  +
push esi  +
push offset aPreassociateco  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 10h  +
***
call __SEH_prolog4  +
xor esi esi +
mov [ebp+var_20] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_24] esi +
push [ebp+arg_C]  +
mov ebx [ebp+arg_10] +
push ebx  +
push offset aPostassociatec  +
push 5  +
call sub_1005EBD  +
mov edi [ebp+arg_4] +
cmp edi esi +
jnz loc_10047E3  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_10048F4  +
test byte ptr [eax+1Ch] 1 +
jz loc_10048F4  +
push offset dword_100172C  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_10048F4  +
cmp ebx esi +
jz loc_1004812  +
cmp [ebp+arg_C] esi +
jnz loc_1004812  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_10048F4  +
test byte ptr [eax+1Ch] 1 +
jz loc_10048F4  +
push offset dword_100172C  +
push 1Ch  +
jmp loc_10047D3  +
mov eax [edi+8] +
mov [ebp+arg_10] eax +
lea eax [ebp+var_24] +
push eax  +
push esi  +
push esi  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+arg_0]  +
call sub_1002EE8  +
mov esi eax +
test esi esi +
jnz loc_10048F4  +
cmp [ebp+arg_C] eax +
jnz loc_1004879  +
test ebx ebx +
jnz loc_1004879  +
push edi  +
push [ebp+arg_0]  +
call sub_100E054  +
mov esi eax +
test esi esi +
jz loc_1004879  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004870  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004870  +
push offset dword_100172C  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov ebx esi +
mov [ebp+arg_C] 10001h +
lea eax [ebp+var_1C] +
push eax  +
call sub_10043D0  +
mov esi eax +
test esi esi +
jnz loc_10048F4  +
and [ebp+ms_exc.disabled] eax +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_10]  +
push [ebp+var_20]  +
push [ebp+var_1C]  +
call sub_100CA6C  +
mov esi eax +
jmp loc_10048BB  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp+var_2C] esi +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
test esi esi +
jz loc_10048F4  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_10048F4  +
cmp byte ptr [eax+19h] 1 +
jb loc_10048F4  +
test byte ptr [eax+1Ch] 1 +
jz loc_10048F4  +
push esi  +
push offset dword_100172C  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push [ebp+var_24]  +
push [ebp+arg_0]  +
call sub_1002FD5  +
lea eax [ebp+var_1C] +
push eax  +
call sub_1004492  +
push 0  +
push esi  +
push offset aPostassociatec  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 14h  +
***
push 1Ch  +
push offset dword_1010550  +
call __SEH_prolog4  +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-1Ch] edi +
mov [ebp-24h] edi +
push edi  +
push edi  +
push offset aSenduirequest  +
push 4  +
call sub_1005EBD  +
cmp [ebp+0Ch] edi +
jnz loc_1004984  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004A20  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004A20  +
push offset dword_100172C  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1004A20  +
lea eax [ebp-24h] +
push eax  +
push edi  +
push edi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_1004A20  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi edi +
jnz loc_1004A20  +
mov [ebp-4] edi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CA97  +
mov esi eax +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10049F1  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
cmp esi edi +
jz loc_1004A20  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004A20  +
cmp byte ptr [eax+19h] 1 +
jb loc_1004A20  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004A20  +
push esi  +
push offset dword_100172C  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push edi  +
push esi  +
push offset aSenduirequest  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 8  +
***
push 1Ch  +
push offset dword_1010570  +
call __SEH_prolog4  +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-1Ch] edi +
mov [ebp-24h] edi +
push edi  +
push edi  +
push offset aSendnotificati  +
push 4  +
call sub_1005EBD  +
cmp [ebp+0Ch] edi +
jnz loc_1004AAF  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004B4B  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B4B  +
push offset dword_100172C  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1004B4B  +
lea eax [ebp-24h] +
push eax  +
push edi  +
push edi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_1004B4B  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi edi +
jnz loc_1004B4B  +
mov [ebp-4] edi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CAC2  +
mov esi eax +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1004B1C  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
cmp esi edi +
jz loc_1004B4B  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004B4B  +
cmp byte ptr [eax+19h] 1 +
jb loc_1004B4B  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B4B  +
push esi  +
push offset dword_100172C  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push edi  +
push esi  +
push offset aSendnotificati  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 8  +
***
push 1Ch  +
push offset dword_1010590  +
call __SEH_prolog4  +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-1Ch] edi +
mov [ebp-24h] edi +
push edi  +
push edi  +
push offset aGetprofilecust  +
push 4  +
call sub_1005EBD  +
cmp [ebp+14h] edi +
jz loc_1004C5E  +
cmp [ebp+18h] edi +
jz loc_1004C5E  +
lea eax [ebp-24h] +
push eax  +
push edi  +
push edi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_1004C85  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi edi +
jnz loc_1004C85  +
mov [ebp-4] edi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CAED  +
mov esi eax +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1004C2D  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
cmp esi edi +
jz loc_1004C85  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004C85  +
cmp byte ptr [eax+19h] 1 +
jb loc_1004C85  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004C85  +
push esi  +
push offset dword_100172C  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1004C85  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004C85  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004C85  +
push offset dword_100172C  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push edi  +
push esi  +
push offset aGetprofilecust  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 14h  +
***
push 1Ch  +
push offset dword_10105B0  +
call __SEH_prolog4  +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-1Ch] edi +
mov [ebp-24h] edi +
push edi  +
push edi  +
push offset aSetprofilecust  +
push 4  +
call sub_1005EBD  +
cmp [ebp+18h] edi +
jnz loc_1004D14  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004DB9  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004DB9  +
push offset dword_100172C  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1004DB9  +
lea eax [ebp-24h] +
push eax  +
push edi  +
push edi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_1004DB9  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi edi +
jnz loc_1004DB9  +
mov [ebp-4] edi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CB18  +
mov esi eax +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1004D8A  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
cmp esi edi +
jz loc_1004DB9  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004DB9  +
cmp byte ptr [eax+19h] 1 +
jb loc_1004DB9  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004DB9  +
push esi  +
push offset dword_100172C  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push edi  +
push esi  +
push offset aSetprofilecust  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 14h  +
***
push 1Ch  +
push offset dword_10105D0  +
call __SEH_prolog4  +
xor esi esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-24h] esi +
push esi  +
push esi  +
push offset aSetcurrentprof  +
push 4  +
call sub_1005EBD  +
lea eax [ebp-24h] +
push eax  +
push esi  +
push esi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_1004EB1  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov edi eax +
cmp edi esi +
jnz loc_1004EB1  +
mov [ebp-4] esi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CB6E  +
mov edi eax +
mov [ebp-2Ch] edi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1004E82  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov edi [ebp-28h] +
mov [ebp-2Ch] edi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor esi esi +
cmp edi esi +
jz loc_1004EB1  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1004EB1  +
cmp byte ptr [eax+19h] 1 +
jb loc_1004EB1  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004EB1  +
push edi  +
push offset dword_100172C  +
push 27h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push esi  +
push edi  +
push offset aSetcurrentprof  +
push 6  +
call sub_1005EBD  +
mov eax edi +
call __SEH_epilog4  +
retn 10h  +
***
call __SEH_prolog4  +
xor edi edi +
mov [ebp+var_24] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_28] edi +
mov [ebp+var_20] edi +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_1004F28  +
cmp byte ptr [eax+19h] 4 +
jb loc_1004F28  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004F28  +
push offset dword_100172C  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+var_28] +
push eax  +
push edi  +
push edi  +
lea eax [ebp+var_24] +
push eax  +
push [ebp+arg_0]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_100500D  +
cmp [ebp+arg_4] 1 +
jnz loc_1004F6B  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_100E002  +
mov esi eax +
cmp esi edi +
jnz loc_100500D  +
push [ebp+arg_10]  +
push [ebp+var_20]  +
jmp loc_1004F73  +
cmp [ebp+arg_4] 2 +
jnz loc_1004F85  +
push edi  +
push edi  +
push [ebp+arg_0]  +
call sub_10031FB  +
mov esi eax +
cmp esi edi +
jnz loc_100500D  +
lea eax [ebp+var_1C] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi edi +
jnz loc_100500D  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_24]  +
push [ebp+var_1C]  +
call sub_100CB43  +
mov esi eax +
mov [ebp+var_30] esi +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1004FE1  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-2Ch] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
mov esp [ebp-18h] +
mov esi [ebp-2Ch] +
mov [ebp-30h] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
mov ebx offset AuthIdentity +
cmp esi edi +
jz loc_100500D  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100500D  +
cmp byte ptr [eax+19h] 1 +
jb loc_100500D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100500D  +
push esi  +
push offset dword_100172C  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push [ebp+var_28]  +
push [ebp+arg_0]  +
call sub_1002FD5  +
lea eax [ebp+var_1C] +
push eax  +
call sub_1004492  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1005049  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005049  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005049  +
push esi  +
push offset dword_100172C  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax esi +
call __SEH_epilog4  +
retn 14h  +
***
push 1Ch  +
push offset dword_1010610  +
call __SEH_prolog4  +
xor esi esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-24h] esi +
push esi  +
push esi  +
push offset aStartonex  +
push 4  +
call sub_1005EBD  +
lea eax [ebp-24h] +
push eax  +
push esi  +
push esi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_1005119  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov edi eax +
cmp edi esi +
jnz loc_1005119  +
mov [ebp-4] esi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CB99  +
mov edi eax +
mov [ebp-2Ch] edi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10050EA  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov edi [ebp-28h] +
mov [ebp-2Ch] edi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor esi esi +
cmp edi esi +
jz loc_1005119  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1005119  +
cmp byte ptr [eax+19h] 1 +
jb loc_1005119  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005119  +
push edi  +
push offset dword_100172C  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push esi  +
push edi  +
push offset aStartonex  +
push 6  +
call sub_1005EBD  +
mov eax edi +
call __SEH_epilog4  +
retn 8  +
***
push 1Ch  +
push offset dword_1010630  +
call __SEH_prolog4  +
xor esi esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-24h] esi +
push esi  +
push esi  +
push offset aStoponex  +
push 4  +
call sub_1005EBD  +
lea eax [ebp-24h] +
push eax  +
push esi  +
push esi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_1005204  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov edi eax +
cmp edi esi +
jnz loc_1005204  +
mov [ebp-4] esi +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CBC4  +
mov edi eax +
mov [ebp-2Ch] edi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10051D5  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov edi [ebp-28h] +
mov [ebp-2Ch] edi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor esi esi +
cmp edi esi +
jz loc_1005204  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1005204  +
cmp byte ptr [eax+19h] 1 +
jb loc_1005204  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005204  +
push edi  +
push offset dword_100172C  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push esi  +
push edi  +
push offset aStoponex  +
push 6  +
call sub_1005EBD  +
mov eax edi +
call __SEH_epilog4  +
retn 4  +
***
push 1Ch  +
push offset dword_1010650  +
call __SEH_prolog4  +
xor esi esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-24h] esi +
push esi  +
push esi  +
push offset aProcesssecurit  +
push 4  +
call sub_1005EBD  +
lea eax [ebp-24h] +
push eax  +
push esi  +
push esi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_10052F9  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov edi eax +
cmp edi esi +
jnz loc_10052F9  +
mov [ebp-4] esi +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CBEF  +
mov edi eax +
mov [ebp-2Ch] edi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10052CA  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov edi [ebp-28h] +
mov [ebp-2Ch] edi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor esi esi +
cmp edi esi +
jz loc_10052F9  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_10052F9  +
cmp byte ptr [eax+19h] 1 +
jb loc_10052F9  +
test byte ptr [eax+1Ch] 1 +
jz loc_10052F9  +
push edi  +
push offset dword_100172C  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push esi  +
push edi  +
push offset aProcesssecurit  +
push 6  +
call sub_1005EBD  +
mov eax edi +
call __SEH_epilog4  +
retn 0Ch  +
***
push 1Ch  +
push offset dword_1010670  +
call __SEH_prolog4  +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-1Ch] edi +
mov [ebp-24h] edi +
push edi  +
push edi  +
push offset aRequestvirtual  +
push 4  +
call sub_1005EBD  +
cmp [ebp+0Ch] edi +
jz loc_1005388  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100541D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100541D  +
push offset dword_100172C  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100541D  +
lea eax [ebp-24h] +
push eax  +
push edi  +
push edi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_100541D  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi edi +
jnz loc_100541D  +
mov [ebp-4] edi +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CC1A  +
mov esi eax +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10053EE  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
cmp esi edi +
jz loc_100541D  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100541D  +
cmp byte ptr [eax+19h] 1 +
jb loc_100541D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100541D  +
push esi  +
push offset dword_100172C  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push edi  +
push esi  +
push offset aRequestvirtual  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 8  +
***
push 1Ch  +
push offset dword_1010690  +
call __SEH_prolog4  +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-1Ch] edi +
mov [ebp-24h] edi +
push edi  +
push edi  +
push offset aReleasevirtual  +
push 4  +
call sub_1005EBD  +
cmp [ebp+0Ch] edi +
jz loc_10054AC  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1005541  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005541  +
push offset dword_100172C  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1005541  +
lea eax [ebp-24h] +
push eax  +
push edi  +
push edi  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_1005541  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi edi +
jnz loc_1005541  +
mov [ebp-4] edi +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CC45  +
mov esi eax +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1005512  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
cmp esi edi +
jz loc_1005541  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1005541  +
cmp byte ptr [eax+19h] 1 +
jb loc_1005541  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005541  +
push esi  +
push offset dword_100172C  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push edi  +
push esi  +
push offset aReleasevirtual  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
mov edi offset aQueryvirtualst +
push edi  +
push 4  +
call sub_1005EBD  +
cmp [ebp+14h] ebx +
jnz loc_10055DB  +
cmp [ebp+0Ch] ebx +
jz loc_10055DB  +
cmp [ebp+10h] ebx +
jz loc_10055DB  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1003332  +
mov esi eax +
cmp esi ebx +
jz loc_1005602  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1005602  +
cmp byte ptr [eax+19h] 1 +
jb loc_1005602  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005602  +
push esi  +
push offset dword_100172C  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1005602  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1005602  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005602  +
push offset dword_100172C  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push ebx  +
push esi  +
push edi  +
push 6  +
call sub_1005EBD  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push 24h  +
push offset dword_10106B0  +
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-24h] ebx +
mov [ebp-34h] ebx +
xor eax eax +
lea edi [ebp-30h] +
stos   +
push ebx  +
push ebx  +
push offset aSetvirtualstat  +
push 4  +
call sub_1005EBD  +
cmp [ebp+18h] ebx +
jnz loc_1005714  +
cmp [ebp+10h] ebx +
jz loc_1005714  +
mov edi [ebp+14h] +
cmp edi ebx +
jz loc_1005714  +
lea eax [ebp-24h] +
push eax  +
push ebx  +
push ebx  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi ebx +
jnz loc_100573B  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10043D0  +
mov esi eax +
cmp esi ebx +
jnz loc_100573B  +
mov eax [ebp+10h] +
mov [ebp-34h] eax +
mov [ebp-30h] edi +
mov [ebp-4] ebx +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_100CC70  +
mov esi eax +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10056E3  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
***
mov esp [ebp-18h] +
mov esi [ebp-28h] +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor ebx ebx +
cmp esi ebx +
jz loc_100573B  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100573B  +
cmp byte ptr [eax+19h] 1 +
jb loc_100573B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100573B  +
push esi  +
push offset dword_100172C  +
push 35h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100573B  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100573B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100573B  +
push offset dword_100172C  +
push 34h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1004492  +
push ebx  +
push esi  +
push offset aSetvirtualstat  +
push 6  +
call sub_1005EBD  +
mov eax esi +
call __SEH_epilog4  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_100579D  +
cmp word ptr [edx] 0 +
jnz loc_1005782  +
push 0Eh  +
jmp loc_100579F  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1005788  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_10057A0  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_10057B1  +
cmp word ptr [edx] 0 +
jnz loc_10057B6  +
mov edx offset aNull +
jmp loc_10057B6  +
mov edx offset aNull_0 +
push 0  +
push 4  +
lea ecx [ebp+arg_14] +
push ecx  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
test esi esi +
jz loc_10057FD  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10057F1  +
sub eax edx +
inc eax  +
jmp loc_1005800  +
push 5  +
pop eax  +
mov ecx esi +
test esi esi +
jnz loc_100580B  +
mov ecx offset aNull_1 +
push 0  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
test esi esi +
jz loc_100584D  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1005841  +
sub eax edx +
inc eax  +
jmp loc_1005850  +
push 5  +
pop eax  +
mov ecx esi +
test esi esi +
jnz loc_100585B  +
mov ecx offset aNull_1 +
push 0  +
push 4  +
lea edx [ebp+arg_14] +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
test esi esi +
jz loc_10058A3  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1005897  +
sub eax edx +
inc eax  +
jmp loc_10058A6  +
push 5  +
pop eax  +
mov ecx esi +
test esi esi +
jnz loc_10058B1  +
mov ecx offset aNull_1 +
push 0  +
push 4  +
lea edx [ebp+arg_18] +
push edx  +
push 4  +
lea edx [ebp+arg_14] +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 30h +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx offset dword_100187C +
cmp eax esi +
jz loc_1005915  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005915  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005915  +
push ebx  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
mov edi offset stru_1012500 +
push edi  +
call ds:EnterCriticalSection  +
cmp hLibModule 0 +
jz loc_100594E  +
cmp dword_1012104 0 +
jz loc_100594E  +
cmp dword_1012100 200h +
jge loc_100594E  +
cmp dword_1012064 3 +
jnz loc_100594E  +
xor eax eax +
inc eax  +
jmp loc_1005950  +
xor eax eax +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
test eax eax +
jz loc_100596C  +
mov eax [ebp+arg_4] +
mov ecx dword_1012104 +
mov [eax] ecx +
inc dword_1012100  +
jmp loc_1005989  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1005989  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005989  +
push ebx  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop edi  +
cmp eax esi +
jz loc_10059B6  +
cmp byte ptr [eax+19h] 4 +
jb loc_10059B6  +
test byte ptr [eax+1Ch] 1 +
jz loc_10059B6  +
push 0  +
push ebx  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
mov ebx offset dword_100187C +
cmp eax edi +
jz loc_10059FA  +
cmp byte ptr [eax+19h] 4 +
jb loc_10059FA  +
test byte ptr [eax+1Ch] 1 +
jz loc_10059FA  +
push ebx  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0 +
jz loc_1005A22  +
push esi  +
mov esi offset stru_1012500 +
push esi  +
call ds:EnterCriticalSection  +
dec dword_1012100  +
push esi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop esi  +
cmp eax edi +
jz loc_1005A42  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005A42  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005A42  +
push 0  +
push ebx  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset sub_100A309 +
mov dword ptr [eax+4] offset sub_100A3D2 +
mov dword ptr [eax+8] offset loc_1004CB6 +
mov dword ptr [eax+0Ch] offset loc_1004B7C +
mov dword ptr [eax+10h] offset loc_1004DEA +
mov dword ptr [eax+14h] offset loc_1004926 +
mov dword ptr [eax+18h] offset loc_1004644 +
mov dword ptr [eax+1Ch] offset sub_100477E +
mov dword ptr [eax+20h] offset loc_1004A51 +
mov dword ptr [eax+24h] offset loc_100D1A5 +
mov dword ptr [eax+28h] offset loc_100CF0E +
mov dword ptr [eax+2Ch] offset loc_100D2BD +
mov dword ptr [eax+30h] offset loc_100D3B4 +
mov dword ptr [eax+34h] offset loc_100D4AB +
mov dword ptr [eax+38h] offset loc_100D5A2 +
mov dword ptr [eax+3Ch] offset loc_100D8BD +
mov dword ptr [eax+40h] offset loc_100D6FF +
mov dword ptr [eax+44h] offset loc_100D098 +
mov dword ptr [eax+48h] offset loc_100D7F4 +
mov dword ptr [eax+4Ch] offset loc_1005058 +
mov dword ptr [eax+50h] offset loc_100514A +
mov dword ptr [eax+54h] offset loc_1005235 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset loc_100532A +
mov dword ptr [eax+4] offset loc_100544E +
mov dword ptr [eax+8] offset loc_1005572 +
mov dword ptr [eax+0Ch] offset loc_100561A +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1005B4F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005B4F  +
push [ebp+arg_0]  +
push offset dword_100187C  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10057DF  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
inc ebx  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_100187C +
cmp eax esi +
jz loc_1005B8F  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005B8F  +
test [eax+1Ch] bl +
jz loc_1005B8F  +
push edi  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_0] +
xor ecx ecx +
cmp [eax] ecx +
jnz loc_1005BA7  +
push offset aDot11extihvdei  +
call sub_1005B23  +
jmp loc_1005C9C  +
cmp [eax+4] ecx +
jnz loc_1005BB3  +
push offset aDot11extihvini  +
jmp loc_1005B9D  +
cmp [eax+8] ecx +
jnz loc_1005BBF  +
push offset aDot11extihvd_0  +
jmp loc_1005B9D  +
cmp [eax+0Ch] ecx +
jnz loc_1005BCB  +
push offset aDot11extihvper  +
jmp loc_1005B9D  +
cmp [eax+10h] ecx +
jnz loc_1005BD7  +
push offset aDot11extihvada  +
jmp loc_1005B9D  +
cmp [eax+14h] ecx +
jnz loc_1005BE3  +
push offset aDot11extihvp_0  +
jmp loc_1005B9D  +
cmp [eax+18h] ecx +
jnz loc_1005BEF  +
push offset aDot11extihvsto  +
jmp loc_1005B9D  +
cmp [eax+1Ch] ecx +
jnz loc_1005BFB  +
push offset aDot11extihvval  +
jmp loc_1005B9D  +
cmp [eax+20h] ecx +
jnz loc_1005C07  +
push offset aDot11extihvp_1  +
jmp loc_1005B9D  +
cmp [eax+24h] ecx +
jnz loc_1005C13  +
push offset aDot11extihvcre  +
jmp loc_1005B9D  +
cmp [eax+28h] ecx +
jnz loc_1005C22  +
push offset aDot11extihvpro  +
jmp loc_1005B9D  +
cmp [eax+2Ch] ecx +
jnz loc_1005C31  +
push offset aDot11extihvrec  +
jmp loc_1005B9D  +
cmp [eax+30h] ecx +
jnz loc_1005C40  +
push offset aDot11extihvr_0  +
jmp loc_1005B9D  +
cmp [eax+34h] ecx +
jnz loc_1005C4F  +
push offset aDot11extihvsen  +
jmp loc_1005B9D  +
cmp [eax+38h] ecx +
jnz loc_1005C5E  +
push offset aDot11extihvisu  +
jmp loc_1005B9D  +
cmp [eax+3Ch] ecx +
jnz loc_1005C6D  +
push offset aDot11extihvp_2  +
jmp loc_1005B9D  +
cmp [eax+40h] ecx +
jnz loc_1005C7C  +
push offset aDot11extihvque  +
jmp loc_1005B9D  +
cmp [eax+44h] ecx +
jnz loc_1005C8B  +
push offset aDot11extihvone  +
jmp loc_1005B9D  +
cmp [eax+48h] ecx +
jnz loc_1005C9A  +
push offset aDot11extihvcon  +
jmp loc_1005B9D  +
xor ebx ebx +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1005CC0  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005CC0  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005CC0  +
push ebx  +
push edi  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_100187C +
cmp eax esi +
jz loc_1005D05  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005D05  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005D05  +
push edi  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp dword_10120F8 1 +
jz loc_1005D2B  +
push offset dword_10120F8  +
push offset dword_10120F4  +
push offset stru_1012500  +
call sub_100B282  +
mov ebx eax +
mov eax AuthIdentity +
jmp loc_1005D2D  +
xor ebx ebx +
cmp eax esi +
jz loc_1005D4C  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005D4C  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005D4C  +
push ebx  +
push edi  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_100187C +
cmp eax esi +
jz loc_1005D91  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005D91  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005D91  +
push edi  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov ebx offset stru_1012500 +
push ebx  +
call ds:EnterCriticalSection  +
mov ecx dword_1012064 +
cmp ecx 1 +
jz loc_1005E83  +
cmp ecx 4 +
jz loc_1005DE3  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1005E83  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005E83  +
push ecx  +
push edi  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1005E83  +
mov ecx dword_1012100 +
test ecx ecx +
jz loc_1005E0D  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1005E83  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005E83  +
push ecx  +
push edi  +
push 1Fh  +
jmp loc_1005DD3  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1005E30  +
cmp byte ptr [eax+19h] 3 +
jb loc_1005E30  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005E30  +
push edi  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push hLibModule  +
call ds:FreeLibrary  +
push dword_1012108  +
and hLibModule 0 +
call sub_100A3D2  +
push dword_101210C  +
and dword_1012108 0 +
call sub_100A3D2  +
push dword_1012104  +
and dword_101210C 0 +
call sub_100A3D2  +
and dword_1012104 0 +
mov dword_1012064 1 +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1005EB0  +
cmp byte ptr [eax+19h] 4 +
jb loc_1005EB0  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005EB0  +
push [ebp+var_4]  +
push edi  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Ah +
ja loc_100610A  +
jmp ds:off_1006111[eax*4]  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 29h  +
jmp loc_10060CD  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 2Ah  +
jmp loc_10060CD  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 2Bh  +
jmp loc_10060FF  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 2Ch  +
jmp loc_100600E  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 2Dh  +
jmp loc_10060CD  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1005885  +
jmp loc_100610A  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 2Fh  +
jmp loc_10060FF  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 30h  +
jmp loc_10060CD  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 31h  +
jmp loc_10060FF  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10057DF  +
jmp loc_100610A  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100610A  +
cmp byte ptr [eax+19h] 3 +
jb loc_100610A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100610A  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_100187C  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100582F  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
xor eax eax +
lea edi [ebp+var_1C] +
mov [ebp+var_20] esi +
mov [ebp+var_8] esi +
stos   +
mov [ebp+var_4] esi +
mov [ebp+var_C] esi +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100618D  +
cmp byte ptr [eax+19h] 4 +
jb loc_100618D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100618D  +
push offset dword_100187C  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov edi offset stru_1012500 +
push edi  +
call ds:EnterCriticalSection  +
mov ecx dword_1012064 +
cmp ecx 1 +
jz loc_10061D8  +
mov edi 139Fh +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_10064CA  +
test byte ptr [eax+1Ch] 1 +
jz loc_10064CA  +
push ecx  +
push offset dword_100187C  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_10064CA  +
push edi  +
mov dword_1012064 2 +
call ds:LeaveCriticalSection  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
cmp eax esi +
jnz loc_1006233  +
call ds:GetLastError  +
mov edi eax +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1006482  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006482  +
push edi  +
push [ebp+lpLibFileName]  +
push offset dword_100187C  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100576C  +
jmp loc_100647D  +
mov edi ds:GetProcAddress +
mov ebx offset ProcName +
push ebx  +
push [ebp+hLibModule]  +
call edi  +
mov [ebp+var_14] eax +
cmp eax esi +
jnz loc_1006286  +
call ds:GetLastError  +
mov edi eax +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1006482  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006482  +
push edi  +
push ebx  +
push offset dword_100187C  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100582F  +
jmp loc_100647D  +
push offset aDot11extihvi_0  +
push [ebp+hLibModule]  +
call edi  +
mov [ebp+var_18] eax +
cmp eax esi +
jnz loc_10062C8  +
call ds:GetLastError  +
mov edi eax +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1006482  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006482  +
push edi  +
push offset aDot11extihvi_0  +
push offset dword_100187C  +
push 18h  +
jmp loc_1006276  +
push offset aDot11extihvi_1  +
push [ebp+hLibModule]  +
call edi  +
mov [ebp+lpLibFileName] eax +
cmp eax esi +
jnz loc_1006303  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1006303  +
cmp byte ptr [eax+19h] 3 +
jb loc_1006303  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006303  +
push offset dword_100187C  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push esi  +
push esi  +
push ebx  +
push esi  +
call sub_1005EBD  +
lea eax [ebp+var_20] +
push eax  +
call [ebp+var_14]  +
push esi  +
mov edi eax +
push edi  +
push ebx  +
push 2  +
call sub_1005EBD  +
cmp edi esi +
jnz loc_100647D  +
cmp [ebp+var_20] esi +
ja loc_1006453  +
lea eax [ebp+var_C] +
push eax  +
push 4Ch  +
call sub_100A309  +
mov edi eax +
cmp edi esi +
jnz loc_100647D  +
push 4Ch  +
push esi  +
push [ebp+var_C]  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_4] +
push eax  +
push 58h  +
call sub_100A309  +
mov edi eax +
cmp edi esi +
jnz loc_100647D  +
push 58h  +
push esi  +
push [ebp+var_4]  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_8] +
push eax  +
push 10h  +
call sub_100A309  +
mov edi eax +
cmp edi esi +
jnz loc_100647D  +
mov edi [ebp+var_8] +
xor eax eax +
stos   +
stos   +
stos   +
stos   +
push [ebp+var_4]  +
call sub_1005A4D  +
push [ebp+var_8]  +
call sub_1005AF7  +
push esi  +
push esi  +
mov ebx offset aDot11extihvi_0 +
push ebx  +
push esi  +
call sub_1005EBD  +
push [ebp+var_C]  +
push esi  +
push [ebp+var_4]  +
push esi  +
call [ebp+var_18]  +
push esi  +
mov edi eax +
push edi  +
push ebx  +
push 2  +
call sub_1005EBD  +
cmp edi esi +
jnz loc_100647D  +
push [ebp+var_C]  +
call sub_1005B58  +
mov edi eax +
cmp edi esi +
jnz loc_100647D  +
cmp [ebp+lpLibFileName] esi +
jz loc_100640D  +
push esi  +
push esi  +
mov ebx offset aDot11extihvi_1 +
push ebx  +
push esi  +
call sub_1005EBD  +
push esi  +
push [ebp+var_8]  +
call [ebp+lpLibFileName]  +
push esi  +
mov edi eax +
push edi  +
push ebx  +
push 2  +
call sub_1005EBD  +
cmp edi esi +
jnz loc_100647D  +
push offset stru_1012500  +
call ds:EnterCriticalSection  +
mov eax [ebp+hLibModule] +
mov hLibModule eax +
mov eax [ebp+var_C] +
mov dword_1012104 eax +
mov eax [ebp+var_4] +
mov dword_1012108 eax +
mov eax [ebp+var_8] +
mov dword_1012064 3 +
mov dword_1012100 esi +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
mov dword_101210C eax +
mov [ebp+var_8] esi +
jmp loc_10064CA  +
mov edi 65Eh +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1006482  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006482  +
push edi  +
push offset dword_100187C  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
cmp [ebp+hLibModule] esi +
jz loc_10064B5  +
cmp eax offset AuthIdentity +
jz loc_10064AC  +
cmp byte ptr [eax+19h] 3 +
jb loc_10064AC  +
test byte ptr [eax+1Ch] 1 +
jz loc_10064AC  +
push offset dword_100187C  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
push offset stru_1012500  +
call ds:EnterCriticalSection  +
mov dword_1012064 1 +
push offset stru_1012500  +
call ds:LeaveCriticalSection  +
push [ebp+var_4]  +
call sub_100A3D2  +
push [ebp+var_8]  +
call sub_100A3D2  +
push [ebp+var_C]  +
call sub_100A3D2  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1006518  +
cmp byte ptr [eax+19h] 4 +
jb loc_1006518  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006518  +
push edi  +
push offset dword_100187C  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_100655A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100655A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100655A  +
push offset dword_100187C  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor ebx ebx +
push ebx  +
push ebx  +
mov esi offset aDeinitservice +
push esi  +
push ebx  +
call sub_1005EBD  +
call [ebp+arg_0]  +
push ebx  +
push ebx  +
push esi  +
push 1  +
call sub_1005EBD  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100659F  +
cmp byte ptr [eax+19h] 4 +
jb loc_100659F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100659F  +
push ebx  +
push offset dword_100187C  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
mov [ebp+var_4] esi +
mov [ebp+hObject] esi +
mov [ebp+var_C] esi +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_10065EE  +
cmp byte ptr [eax+19h] 4 +
jb loc_10065EE  +
test byte ptr [eax+1Ch] 1 +
jz loc_10065EE  +
push offset dword_100187C  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
mov edi offset stru_1012500 +
push edi  +
call ds:EnterCriticalSection  +
mov ecx dword_1012064 +
xor edx edx +
inc edx  +
mov [ebp+var_10] edx +
cmp ecx edx +
jz loc_1006750  +
cmp hLibModule esi +
jz loc_10066C1  +
mov eax dword_1012104 +
cmp eax esi +
jz loc_10066C1  +
cmp dword_1012100 200h +
jge loc_10066C1  +
cmp ecx 3 +
jnz loc_10066C1  +
mov dword_1012064 4 +
mov esi [eax] +
inc dword_1012100  +
push edi  +
mov [ebp+var_C] edx +
call ds:LeaveCriticalSection  +
and [ebp+var_10] 0 +
test esi esi +
jz loc_1006750  +
xor eax eax +
push eax  +
push eax  +
push esi  +
push offset StartAddress  +
push eax  +
push eax  +
call ds:CreateThread  +
mov esi ds:GetLastError +
mov [ebp+hObject] eax +
test eax eax +
jnz loc_10066EE  +
call esi  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10066EE  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1006750  +
cmp byte ptr [eax+19h] 1 +
jb loc_1006750  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006750  +
push [ebp+var_4]  +
push offset dword_100187C  +
push 26h  +
jmp loc_1006745  +
and [ebp+var_C] esi +
mov [ebp+var_4] 5 +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1006750  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006750  +
push offset dword_100187C  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1006750  +
push [ebp+dwMilliseconds]  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1006706  +
and [ebp+var_4] eax +
jmp loc_1006750  +
cmp eax 0FFFFFFFFh +
jnz loc_1006712  +
call esi  +
mov [ebp+var_4] eax +
jmp loc_1006720  +
cmp eax 102h +
jz loc_1006720  +
mov [ebp+var_4] 139Fh +
cmp [ebp+var_4] 0 +
jz loc_1006750  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1006750  +
cmp byte ptr [eax+19h] 1 +
jb loc_1006750  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006750  +
push [ebp+var_4]  +
push offset dword_100187C  +
push 27h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
lea eax [ebp+var_C] +
push eax  +
call sub_10059C1  +
cmp [ebp+var_10] 0 +
jz loc_1006766  +
push edi  +
call ds:LeaveCriticalSection  +
cmp [ebp+hObject] 0 +
pop edi  +
jz loc_1006776  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax AuthIdentity +
pop esi  +
cmp eax ebx +
pop ebx  +
jz loc_10067A2  +
cmp byte ptr [eax+19h] 4 +
jb loc_10067A2  +
test byte ptr [eax+1Ch] 1 +
jz loc_10067A2  +
push [ebp+var_4]  +
push offset dword_100187C  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor esi esi +
push esi  +
push esi  +
push offset aInitservice  +
push 7  +
mov [ebp-4] esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-8] esi +
mov [ebp-10h] esi +
mov [ebp-14h] esi +
mov dword ptr [ebp-0Ch] 1 +
mov [ebp-18h] esi +
call sub_1005EBD  +
lea eax [ebp-18h] +
push eax  +
call sub_100B8D2  +
mov ebx eax +
cmp ebx esi +
jnz loc_10068D6  +
mov eax [ebp+14h] +
mov [eax] esi +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
call sub_100BF49  +
mov ebx eax +
cmp ebx esi +
jnz loc_10068D6  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+8]  +
mov [ebp-14h] esi +
push esi  +
push esi  +
push dword_1012008  +
call sub_1008A3E  +
mov ebx eax +
cmp ebx esi +
jnz loc_10068D6  +
push edi  +
push dword ptr [ebp-4]  +
mov [ebp-0Ch] esi +
call sub_1006142  +
mov [ebp-8] eax +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_1006878  +
cmp byte ptr [eax+19h] 3 +
jb loc_1006878  +
test byte ptr [eax+1Ch] 1 +
jz loc_1006878  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
push offset dword_1001B30  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100576C  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-10h]  +
call sub_10086A1  +
mov ebx eax +
cmp ebx esi +
jnz loc_10068D5  +
mov eax [ebp+14h] +
mov dword ptr [eax] offset unk_10120B0 +
push hObject  +
mov dword ptr [ebp-0Ch] 1 +
call ds:SetEvent  +
test eax eax +
jnz loc_10068D5  +
call ds:GetLastError  +
mov ecx AuthIdentity +
cmp ecx edi +
jz loc_10068D5  +
test byte ptr [ecx+1Ch] 1 +
jz loc_10068D5  +
push eax  +
push offset dword_1001B30  +
push 0Bh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
pop edi  +
push dword ptr [ebp-4]  +
call sub_100A3D2  +
lea eax [ebp-14h] +
push eax  +
call sub_10059C1  +
cmp [ebp-0Ch] esi +
jz loc_10068FE  +
cmp ebx esi +
jz loc_10068F3  +
mov [ebp-8] ebx +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-18h]  +
call sub_100B9E0  +
push esi  +
push ebx  +
push offset aInitservice  +
push 8  +
call sub_1005EBD  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov esi offset aDeinitservice +
push esi  +
push 7  +
mov [ebp-4] edi +
call sub_1005EBD  +
lea eax [ebp-4] +
push eax  +
call sub_100B8D2  +
mov ebx eax +
cmp ebx edi +
jnz loc_100695C  +
push edi  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push edi  +
mov ebx eax +
call sub_1003C03  +
push dword ptr [ebp-4]  +
call sub_100B9E0  +
push edi  +
push ebx  +
push esi  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
mov eax dword_101206C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
lea esi [ebp+1Ch] +
lea edi [ebp-30h] +
movs   +
movs   +
xor ebx ebx +
movs   +
mov [ebp-5Ch] eax +
mov eax [ebp+10h] +
push 6  +
pop ecx  +
mov [ebp-64h] eax +
mov eax [ebp+2Ch] +
movs   +
push ebx  +
mov [ebp-70h] eax +
xor eax eax +
mov [ebp-20h] ebx +
lea edi [ebp-1Ch] +
stos   +
push ebx  +
xor edi edi +
push offset aInitadapter  +
inc edi  +
push 7  +
mov [ebp-3Ch] ebx +
mov [ebp-54h] ebx +
mov [ebp-44h] ebx +
mov [ebp-34h] ebx +
mov [ebp-40h] ebx +
mov [ebp-6Ch] ebx +
mov [ebp-68h] ebx +
mov [ebp-38h] ebx +
mov [ebp-4Ch] ebx +
mov [ebp-58h] ebx +
mov [ebp-48h] edi +
mov [ebp-50h] ebx +
mov [ebp-60h] ebx +
call sub_1005EBD  +
lea eax [ebp-50h] +
push eax  +
call sub_100B8D2  +
mov esi eax +
cmp esi ebx +
jnz loc_1006B6B  +
push ebx  +
lea eax [ebp-3Ch] +
push eax  +
push 2  +
push offset unk_10120A0  +
call sub_1009ED2  +
mov esi eax +
cmp esi ebx +
jnz loc_1006B6B  +
lea eax [ebp-34h] +
push eax  +
push edi  +
push ebx  +
push 2  +
mov [ebp-40h] edi +
pop edi  +
push edi  +
push dword ptr [ebp-3Ch]  +
push offset unk_10120A0  +
call sub_10095EE  +
mov esi eax +
cmp esi ebx +
jnz loc_1006B6B  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [ebp-3Ch]  +
mov [ebp-40h] edi +
push dword ptr [ebp-64h]  +
call sub_100E181  +
mov esi eax +
cmp esi ebx +
jnz loc_1006B6B  +
push dword ptr [ebp-34h]  +
call sub_100987D  +
mov eax [ebp-34h] +
mov ecx [ebp+14h] +
mov [eax+18h] ecx +
mov ecx [ebp-44h] +
mov eax [ebp-34h] +
mov [eax+20h] ecx +
mov eax [ebp-34h] +
mov ecx [ebp+18h] +
mov [eax+28h] ecx +
mov edi [ebp-34h] +
add edi 2Ch +
lea esi [ebp-30h] +
movs   +
movs   +
movs   +
movs   +
push dword ptr [ebp-34h]  +
mov [ebp-44h] ebx +
call sub_10098ED  +
mov eax [ebp-64h] +
push 7  +
pop ecx  +
mov esi eax +
lea edi [ebp-20h] +
movs   +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [eax+10h]  +
mov [ebp-10h] ebx +
call sub_100BF49  +
mov esi eax +
cmp esi ebx +
jnz loc_1006B6B  +
lea eax [ebp-6Ch] +
push eax  +
lea eax [ebp-4Ch] +
push eax  +
push dword ptr [ebp-5Ch]  +
lea eax [ebp-60h] +
push eax  +
lea eax [ebp-58h] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov esi eax +
cmp esi ebx +
jnz loc_1006B6B  +
push ebx  +
push ebx  +
mov esi offset aInitadapter +
push esi  +
push ebx  +
mov [ebp-48h] ebx +
call sub_1005EBD  +
mov eax [ebp-60h] +
cmp [eax+4] ebx +
jz loc_1006B15  +
lea ecx [ebp-54h] +
push ecx  +
push dword ptr [ebp-3Ch]  +
lea ecx [ebp-20h] +
push ecx  +
call dword ptr [eax+4]  +
mov [ebp-38h] eax +
jmp loc_1006B1C  +
mov dword ptr [ebp-38h] 78h +
push ebx  +
push dword ptr [ebp-38h]  +
push esi  +
push 2  +
call sub_1005EBD  +
push dword ptr [ebp-68h]  +
push dword ptr [ebp-6Ch]  +
push dword ptr [ebp-4Ch]  +
call sub_10086A1  +
mov esi eax +
cmp esi ebx +
jnz loc_1006B6B  +
xor edi edi +
inc edi  +
mov [ebp-48h] edi +
cmp [ebp-38h] ebx +
jnz loc_1006B6B  +
push dword ptr [ebp-34h]  +
call sub_100987D  +
mov eax [ebp-34h] +
mov ecx [ebp-54h] +
mov [eax+1Ch] ecx +
push dword ptr [ebp-34h]  +
call sub_10098ED  +
mov eax [ebp-3Ch] +
mov ecx [ebp-70h] +
mov [ecx] eax +
mov [ebp-40h] edi +
push dword ptr [ebp-10h]  +
call sub_100A3D2  +
cmp [ebp-40h] ebx +
jz loc_1006B89  +
push dword ptr [ebp-40h]  +
push ebx  +
push dword ptr [ebp-3Ch]  +
push offset unk_10120A0  +
call sub_100974A  +
push dword ptr [ebp-44h]  +
call sub_100CE71  +
lea eax [ebp-58h] +
push eax  +
call sub_10059C1  +
cmp [ebp-48h] ebx +
jz loc_1006BB1  +
cmp esi ebx +
jz loc_1006BA6  +
mov [ebp-38h] esi +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-5Ch]  +
call sub_1008493  +
push dword ptr [ebp-50h]  +
call sub_100B9E0  +
push ebx  +
push esi  +
push offset aInitadapter  +
push 8  +
call sub_1005EBD  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008F22  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov edi offset aDeinitadapter +
push edi  +
push 7  +
mov [ebp-4] esi +
mov [ebp-24h] esi +
mov [ebp-20h] esi +
mov [ebp-18h] esi +
mov [ebp-10h] esi +
mov [ebp-14h] esi +
mov dword ptr [ebp-8] 1 +
mov [ebp-1Ch] esi +
mov [ebp-0Ch] esi +
call sub_1005EBD  +
lea eax [ebp-1Ch] +
push eax  +
call sub_100B8D2  +
mov ebx eax +
cmp ebx esi +
jnz loc_1006CDC  +
lea eax [ebp-4] +
push eax  +
push 1  +
push 1  +
push 2  +
push dword ptr [ebp+10h]  +
push offset unk_10120A0  +
call sub_10095EE  +
mov ebx eax +
cmp ebx esi +
jnz loc_1006CDC  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov ebx eax +
cmp ebx esi +
jnz loc_1006CCC  +
push dword ptr [ebp-4]  +
mov [ebp-8] esi +
call sub_100987D  +
mov eax [ebp-4] +
mov [eax+18h] esi +
mov eax [ebp-4] +
mov ebx [eax+1Ch] +
mov [eax+1Ch] esi +
push dword ptr [ebp-4]  +
call sub_10098ED  +
push esi  +
push esi  +
push edi  +
push esi  +
call sub_1005EBD  +
mov eax [ebp-0Ch] +
cmp [eax+8] esi +
jz loc_1006CA7  +
push ebx  +
call dword ptr [eax+8]  +
push esi  +
push esi  +
push edi  +
push 1  +
call sub_1005EBD  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-10h]  +
call sub_10086A1  +
mov ebx eax +
cmp ebx esi +
jnz loc_1006CCC  +
mov dword ptr [ebp-8] 1 +
push 2  +
push esi  +
push dword ptr [ebp+10h]  +
push offset unk_10120A0  +
call sub_100974A  +
lea eax [ebp-14h] +
push eax  +
call sub_10059C1  +
cmp [ebp-8] esi +
jz loc_1006CFC  +
cmp ebx esi +
jz loc_1006CF1  +
mov [ebp-18h] ebx +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-1Ch]  +
call sub_100B9E0  +
push esi  +
push ebx  +
push edi  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov edi offset aProcesssession +
push edi  +
push 7  +
mov [ebp-8] esi +
mov [ebp-24h] esi +
mov [ebp-20h] esi +
mov [ebp-4] esi +
mov [ebp-14h] esi +
mov [ebp-18h] esi +
mov dword ptr [ebp-0Ch] 1 +
mov [ebp-1Ch] esi +
mov [ebp-10h] esi +
call sub_1005EBD  +
lea eax [ebp-1Ch] +
push eax  +
call sub_100B8D2  +
mov ebx eax +
cmp ebx esi +
jnz loc_1006DF0  +
lea eax [ebp-8] +
push eax  +
push 8  +
push dword ptr [ebp+14h]  +
call sub_100BEAA  +
mov ebx eax +
cmp ebx esi +
jnz loc_1006DF0  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov ebx eax +
cmp ebx esi +
jnz loc_1006DF0  +
push esi  +
push esi  +
push edi  +
push esi  +
mov [ebp-0Ch] esi +
call sub_1005EBD  +
mov eax [ebp-10h] +
cmp [eax+28h] esi +
jz loc_1006DC2  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+10h]  +
call dword ptr [eax+28h]  +
mov [ebp-4] eax +
jmp loc_1006DC9  +
mov dword ptr [ebp-4] 78h +
push esi  +
push dword ptr [ebp-4]  +
push edi  +
push 2  +
call sub_1005EBD  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-14h]  +
call sub_10086A1  +
mov ebx eax +
cmp ebx esi +
jnz loc_1006DF0  +
mov dword ptr [ebp-0Ch] 1 +
push dword ptr [ebp-8]  +
call sub_100A3D2  +
lea eax [ebp-18h] +
push eax  +
call sub_10059C1  +
cmp [ebp-0Ch] esi +
jz loc_1006E18  +
cmp ebx esi +
jz loc_1006E0D  +
mov [ebp-4] ebx +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-1Ch]  +
call sub_100B9E0  +
push esi  +
push ebx  +
push edi  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_101206C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
lea esi [ebp+10h] +
lea edi [ebp-14h] +
movs   +
movs   +
xor ebx ebx +
movs   +
push ebx  +
movs   +
push ebx  +
mov esi offset aIsuirequestpen +
mov [ebp-30h] eax +
mov eax [ebp+20h] +
push esi  +
push 7  +
mov [ebp-40h] eax +
mov [ebp-28h] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-38h] ebx +
mov [ebp-18h] ebx +
mov [ebp-34h] ebx +
mov [ebp-20h] ebx +
mov dword ptr [ebp-1Ch] 1 +
mov [ebp-24h] ebx +
mov [ebp-2Ch] ebx +
call sub_1005EBD  +
lea eax [ebp-24h] +
push eax  +
call sub_100B8D2  +
mov edi eax +
cmp edi ebx +
jnz loc_1006F34  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebp-30h]  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov edi eax +
cmp edi ebx +
jnz loc_1006F34  +
push ebx  +
push ebx  +
push esi  +
push ebx  +
mov [ebp-1Ch] ebx +
call sub_1005EBD  +
mov eax [ebp-2Ch] +
cmp [eax+38h] ebx +
jz loc_1006EF9  +
lea ecx [ebp-28h] +
push ecx  +
sub esp 10h +
mov edi esp +
lea esi [ebp-14h] +
movs   +
movs   +
movs   +
movs   +
call dword ptr [eax+38h]  +
mov [ebp-18h] eax +
mov esi offset aIsuirequestpen +
jmp loc_1006F00  +
mov dword ptr [ebp-18h] 78h +
push ebx  +
push dword ptr [ebp-18h]  +
push esi  +
push 2  +
call sub_1005EBD  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-3Ch]  +
push dword ptr [ebp-34h]  +
call sub_10086A1  +
mov edi eax +
cmp edi ebx +
jnz loc_1006F34  +
mov dword ptr [ebp-1Ch] 1 +
cmp [ebp-18h] ebx +
jnz loc_1006F34  +
mov eax [ebp-28h] +
mov ecx [ebp-40h] +
mov [ecx] eax +
lea eax [ebp-20h] +
push eax  +
call sub_10059C1  +
cmp [ebp-1Ch] ebx +
jz loc_1006F54  +
cmp edi ebx +
jz loc_1006F49  +
mov [ebp-18h] edi +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-30h]  +
call sub_1008493  +
push dword ptr [ebp-24h]  +
call sub_100B9E0  +
push ebx  +
push edi  +
push esi  +
push 8  +
call sub_1005EBD  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008F22  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov ebx offset aPerformcapabil +
push ebx  +
xor eax eax +
mov [ebp-40h] esi +
lea edi [ebp-3Ch] +
push 7  +
mov [ebp-20h] esi +
mov [ebp-14h] esi +
stos   +
mov dword ptr [ebp-8] 10001h +
mov [ebp-10h] esi +
mov [ebp-0Ch] esi +
mov [ebp-38h] esi +
mov [ebp-34h] esi +
mov [ebp-4] esi +
mov [ebp-24h] esi +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-18h] 1 +
mov [ebp-30h] esi +
mov [ebp-28h] esi +
mov [ebp-1Ch] esi +
call sub_1005EBD  +
lea eax [ebp-30h] +
push eax  +
call sub_100B8D2  +
mov edi eax +
cmp edi esi +
jnz loc_10070EF  +
mov eax [ebp-8] +
mov ecx [ebp+24h] +
mov [ecx] eax +
lea eax [ebp-28h] +
push eax  +
push esi  +
lea eax [ebp-20h] +
push eax  +
push esi  +
push dword ptr [ebp+10h]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_10070EF  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+14h]  +
call sub_100C626  +
mov edi eax +
cmp edi esi +
jnz loc_10070EF  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+18h]  +
call sub_100C33D  +
mov edi eax +
cmp edi esi +
jnz loc_10070EF  +
lea eax [ebp-40h] +
push eax  +
push dword ptr [ebp+1Ch]  +
call sub_100C3C6  +
mov edi eax +
cmp edi esi +
jnz loc_10070EF  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp+20h]  +
call sub_100C0EA  +
mov edi eax +
cmp edi esi +
jnz loc_10070EF  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov edi eax +
cmp edi esi +
jnz loc_10070EF  +
push esi  +
push esi  +
push ebx  +
push esi  +
mov [ebp-18h] esi +
call sub_1005EBD  +
mov eax [ebp-1Ch] +
cmp [eax+20h] esi +
jz loc_10070B7  +
lea ecx [ebp-8] +
push ecx  +
push dword ptr [ebp-0Ch]  +
lea ecx [ebp-40h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-20h]  +
call dword ptr [eax+20h]  +
mov [ebp-4] eax +
jmp loc_10070BE  +
mov dword ptr [ebp-4] 78h +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
push ebx  +
push 3  +
call sub_1005EBD  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-24h]  +
call sub_10086A1  +
mov edi eax +
cmp edi esi +
jnz loc_10070EF  +
mov eax [ebp-8] +
mov ecx [ebp+24h] +
mov dword ptr [ebp-18h] 1 +
mov [ecx] eax +
push dword ptr [ebp-10h]  +
call sub_100C0BE  +
mov eax [ebp-0Ch] +
cmp eax esi +
jz loc_100710E  +
push dword ptr [eax+4]  +
call sub_100A3D2  +
push dword ptr [ebp-0Ch]  +
call sub_100A3D2  +
lea eax [ebp-14h] +
push eax  +
call sub_100C19F  +
lea eax [ebp-40h] +
push eax  +
call sub_100C21B  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+10h]  +
call sub_1002FD5  +
lea eax [ebp-2Ch] +
push eax  +
call sub_10059C1  +
cmp [ebp-18h] esi +
jz loc_100714B  +
cmp edi esi +
jz loc_1007140  +
mov [ebp-4] edi +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-30h]  +
call sub_100B9E0  +
push esi  +
push edi  +
push ebx  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov ebx offset aValidateprofil +
push ebx  +
xor eax eax +
mov [ebp-3Ch] esi +
lea edi [ebp-38h] +
push 7  +
mov [ebp-1Ch] esi +
mov [ebp-0Ch] esi +
stos   +
mov [ebp-10h] esi +
mov dword ptr [ebp-8] 10001h +
mov [ebp-34h] esi +
mov [ebp-30h] esi +
mov [ebp-4] esi +
mov [ebp-20h] esi +
mov [ebp-28h] esi +
mov dword ptr [ebp-14h] 1 +
mov [ebp-2Ch] esi +
mov [ebp-24h] esi +
mov [ebp-18h] esi +
call sub_1005EBD  +
lea eax [ebp-2Ch] +
push eax  +
call sub_100B8D2  +
mov edi eax +
cmp edi esi +
jnz loc_10072C0  +
mov eax [ebp-8] +
mov ecx [ebp+20h] +
mov [ecx] eax +
lea eax [ebp-24h] +
push eax  +
push esi  +
lea eax [ebp-1Ch] +
push eax  +
push esi  +
push dword ptr [ebp+10h]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_10072C0  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+14h]  +
call sub_100C626  +
mov edi eax +
cmp edi esi +
jnz loc_10072C0  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp+18h]  +
call sub_100C33D  +
mov edi eax +
cmp edi esi +
jnz loc_10072C0  +
lea eax [ebp-3Ch] +
push eax  +
push dword ptr [ebp+1Ch]  +
call sub_100C3C6  +
mov edi eax +
cmp edi esi +
jnz loc_10072C0  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-28h] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov edi eax +
cmp edi esi +
jnz loc_10072C0  +
push esi  +
push esi  +
push ebx  +
push esi  +
mov [ebp-14h] esi +
call sub_1005EBD  +
mov eax [ebp-18h] +
cmp [eax+1Ch] esi +
jz loc_1007288  +
lea ecx [ebp-8] +
push ecx  +
lea ecx [ebp-3Ch] +
push ecx  +
lea ecx [ebp-0Ch] +
push ecx  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-1Ch]  +
call dword ptr [eax+1Ch]  +
mov [ebp-4] eax +
jmp loc_100728F  +
mov dword ptr [ebp-4] 78h +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
push ebx  +
push 3  +
call sub_1005EBD  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-20h]  +
call sub_10086A1  +
mov edi eax +
cmp edi esi +
jnz loc_10072C0  +
mov eax [ebp-8] +
mov ecx [ebp+20h] +
mov dword ptr [ebp-14h] 1 +
mov [ecx] eax +
lea eax [ebp-0Ch] +
push eax  +
call sub_100C19F  +
lea eax [ebp-3Ch] +
push eax  +
call sub_100C21B  +
push dword ptr [ebp-10h]  +
call sub_100C0BE  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+10h]  +
call sub_1002FD5  +
lea eax [ebp-28h] +
push eax  +
call sub_10059C1  +
cmp [ebp-14h] esi +
jz loc_1007305  +
cmp edi esi +
jz loc_10072FA  +
mov [ebp-4] edi +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-2Ch]  +
call sub_100B9E0  +
push esi  +
push edi  +
push ebx  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov ebx offset aPerformpreasso +
push ebx  +
xor eax eax +
mov [ebp-40h] esi +
lea edi [ebp-3Ch] +
push 7  +
mov [ebp-20h] esi +
mov [ebp-14h] esi +
stos   +
mov dword ptr [ebp-8] 10001h +
mov [ebp-10h] esi +
mov [ebp-0Ch] esi +
mov [ebp-38h] esi +
mov [ebp-34h] esi +
mov [ebp-4] esi +
mov [ebp-24h] esi +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-18h] 1 +
mov [ebp-30h] esi +
mov [ebp-28h] esi +
mov [ebp-1Ch] esi +
call sub_1005EBD  +
lea eax [ebp-30h] +
push eax  +
call sub_100B8D2  +
mov edi eax +
cmp edi esi +
jnz loc_1007499  +
mov eax [ebp-8] +
mov ecx [ebp+28h] +
mov [ecx] eax +
lea eax [ebp-28h] +
push eax  +
push esi  +
lea eax [ebp-20h] +
push eax  +
push esi  +
push dword ptr [ebp+10h]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_1007499  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+18h]  +
call sub_100C626  +
mov edi eax +
cmp edi esi +
jnz loc_1007499  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+1Ch]  +
call sub_100C33D  +
mov edi eax +
cmp edi esi +
jnz loc_1007499  +
lea eax [ebp-40h] +
push eax  +
push dword ptr [ebp+20h]  +
call sub_100C3C6  +
mov edi eax +
cmp edi esi +
jnz loc_1007499  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp+24h]  +
call sub_100C0EA  +
mov edi eax +
cmp edi esi +
jnz loc_1007499  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov edi eax +
cmp edi esi +
jnz loc_1007499  +
push esi  +
push esi  +
push ebx  +
push esi  +
mov [ebp-18h] esi +
call sub_1005EBD  +
mov eax [ebp-1Ch] +
cmp [eax+0Ch] esi +
jz loc_1007461  +
lea ecx [ebp-8] +
push ecx  +
push dword ptr [ebp-0Ch]  +
lea ecx [ebp-40h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-20h]  +
call dword ptr [eax+0Ch]  +
mov [ebp-4] eax +
jmp loc_1007468  +
mov dword ptr [ebp-4] 78h +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
push ebx  +
push 3  +
call sub_1005EBD  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-24h]  +
call sub_10086A1  +
mov edi eax +
cmp edi esi +
jnz loc_1007499  +
mov eax [ebp-8] +
mov ecx [ebp+28h] +
mov dword ptr [ebp-18h] 1 +
mov [ecx] eax +
push dword ptr [ebp-10h]  +
call sub_100C0BE  +
mov eax [ebp-0Ch] +
cmp eax esi +
jz loc_10074B8  +
push dword ptr [eax+4]  +
call sub_100A3D2  +
push dword ptr [ebp-0Ch]  +
call sub_100A3D2  +
lea eax [ebp-14h] +
push eax  +
call sub_100C19F  +
lea eax [ebp-40h] +
push eax  +
call sub_100C21B  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+10h]  +
call sub_1002FD5  +
lea eax [ebp-2Ch] +
push eax  +
call sub_10059C1  +
cmp [ebp-18h] esi +
jz loc_10074F5  +
cmp edi esi +
jz loc_10074EA  +
mov [ebp-4] edi +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-30h]  +
call sub_100B9E0  +
push esi  +
push edi  +
push ebx  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov edi offset aAdapterreset +
push edi  +
push 7  +
mov [ebp-10h] esi +
mov [ebp-28h] esi +
mov [ebp-24h] esi +
mov [ebp-4] esi +
mov [ebp-14h] esi +
mov [ebp-1Ch] esi +
mov dword ptr [ebp-8] 1 +
mov [ebp-20h] esi +
mov [ebp-18h] esi +
mov [ebp-0Ch] esi +
call sub_1005EBD  +
lea eax [ebp-20h] +
push eax  +
call sub_100B8D2  +
mov ebx eax +
cmp ebx esi +
jnz loc_10075ED  +
lea eax [ebp-18h] +
push eax  +
push esi  +
lea eax [ebp-10h] +
push eax  +
push esi  +
push dword ptr [ebp+10h]  +
call sub_1002EE8  +
mov ebx eax +
cmp ebx esi +
jnz loc_10075ED  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov ebx eax +
cmp ebx esi +
jnz loc_10075ED  +
push esi  +
push esi  +
push edi  +
push esi  +
mov [ebp-8] esi +
call sub_1005EBD  +
mov eax [ebp-0Ch] +
cmp [eax+10h] esi +
jz loc_10075BF  +
push dword ptr [ebp-10h]  +
call dword ptr [eax+10h]  +
mov [ebp-4] eax +
jmp loc_10075C6  +
mov dword ptr [ebp-4] 78h +
push esi  +
push dword ptr [ebp-4]  +
push edi  +
push 2  +
call sub_1005EBD  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-14h]  +
call sub_10086A1  +
mov ebx eax +
cmp ebx esi +
jnz loc_10075ED  +
mov dword ptr [ebp-8] 1 +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+10h]  +
call sub_1002FD5  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10059C1  +
cmp [ebp-8] esi +
jz loc_1007618  +
cmp ebx esi +
jz loc_100760D  +
mov [ebp-4] ebx +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-20h]  +
call sub_100B9E0  +
push esi  +
push ebx  +
push edi  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
push ebx  +
push ebx  +
mov esi offset aCreatediscover +
push esi  +
xor eax eax +
mov [ebp-38h] ebx +
lea edi [ebp-34h] +
push 7  +
mov [ebp-20h] ebx +
mov [ebp-14h] ebx +
mov [ebp-10h] ebx +
stos   +
mov dword ptr [ebp-0Ch] 10001h +
mov [ebp-40h] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-8] ebx +
mov [ebp-24h] ebx +
mov [ebp-2Ch] ebx +
mov dword ptr [ebp-18h] 1 +
mov [ebp-30h] ebx +
mov [ebp-28h] ebx +
mov [ebp-1Ch] ebx +
call sub_1005EBD  +
lea eax [ebp-30h] +
push eax  +
call sub_100B8D2  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_10077A6  +
mov eax [ebp-0Ch] +
mov edi [ebp+24h] +
push 8  +
mov [edi] eax +
mov eax [ebp+20h] +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10076AC  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
lea eax [ebp-20h] +
push eax  +
push ebx  +
push dword ptr [ebp+10h]  +
call sub_1002EE8  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_10077A6  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+18h]  +
call sub_100C626  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_10077A6  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+1Ch]  +
call sub_100C0EA  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_10077A6  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_10077A6  +
push ebx  +
push ebx  +
push esi  +
push ebx  +
mov [ebp-18h] ebx +
call sub_1005EBD  +
mov eax [ebp-1Ch] +
cmp [eax+24h] ebx +
jz loc_1007756  +
lea ecx [ebp-0Ch] +
push ecx  +
lea ecx [ebp-38h] +
push ecx  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-20h]  +
call dword ptr [eax+24h]  +
mov [ebp-8] eax +
jmp loc_100775D  +
mov dword ptr [ebp-8] 78h +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-8]  +
push esi  +
push 3  +
call sub_1005EBD  +
push dword ptr [ebp-3Ch]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp-24h]  +
call sub_10086A1  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_10077A6  +
mov eax [ebp-0Ch] +
mov dword ptr [ebp-18h] 1 +
mov [edi] eax +
cmp [ebp-8] ebx +
jnz loc_10077A6  +
mov ecx [ebp-38h] +
mov eax [ebp+20h] +
mov [eax] ecx +
mov ecx [ebp-34h] +
mov [eax+4] ecx +
xor eax eax +
lea edi [ebp-38h] +
stos   +
stos   +
lea eax [ebp-38h] +
push eax  +
call sub_100C297  +
push dword ptr [ebp-14h]  +
call sub_100C0BE  +
mov eax [ebp-10h] +
cmp eax ebx +
jz loc_10077CE  +
push dword ptr [eax+4]  +
call sub_100A3D2  +
push dword ptr [ebp-10h]  +
call sub_100A3D2  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+10h]  +
call sub_1002FD5  +
lea eax [ebp-2Ch] +
push eax  +
call sub_10059C1  +
cmp [ebp-18h] ebx +
jz loc_10077FC  +
mov eax [ebp-4] +
cmp eax ebx +
jz loc_10077F1  +
mov [ebp-8] eax +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-30h]  +
call sub_100B9E0  +
push ebx  +
push dword ptr [ebp-4]  +
push esi  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_101206C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
lea esi [ebp+10h] +
lea edi [ebp-14h] +
movs   +
movs   +
xor ebx ebx +
movs   +
push ebx  +
movs   +
push ebx  +
mov esi offset aProcessuirespo +
mov [ebp-30h] eax +
mov eax [ebp+24h] +
push esi  +
push 7  +
mov [ebp-40h] eax +
mov [ebp-1Ch] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-38h] ebx +
mov [ebp-18h] ebx +
mov [ebp-34h] ebx +
mov [ebp-24h] ebx +
mov dword ptr [ebp-20h] 1 +
mov [ebp-28h] ebx +
mov [ebp-2Ch] ebx +
call sub_1005EBD  +
lea eax [ebp-28h] +
push eax  +
call sub_100B8D2  +
mov edi eax +
cmp edi ebx +
jnz loc_1007928  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp-40h]  +
call sub_100BEAA  +
mov edi eax +
cmp edi ebx +
jnz loc_1007928  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebp-30h]  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov edi eax +
cmp edi ebx +
jnz loc_1007928  +
push ebx  +
push ebx  +
push esi  +
push ebx  +
mov [ebp-20h] ebx +
call sub_1005EBD  +
mov eax [ebp-2Ch] +
cmp [eax+3Ch] ebx +
jz loc_10078FA  +
push dword ptr [ebp-1Ch]  +
lea esi [ebp-14h] +
push dword ptr [ebp+20h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call dword ptr [eax+3Ch]  +
mov [ebp-18h] eax +
mov esi offset aProcessuirespo +
jmp loc_1007901  +
mov dword ptr [ebp-18h] 78h +
push ebx  +
push dword ptr [ebp-18h]  +
push esi  +
push 2  +
call sub_1005EBD  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-3Ch]  +
push dword ptr [ebp-34h]  +
call sub_10086A1  +
mov edi eax +
cmp edi ebx +
jnz loc_1007928  +
mov dword ptr [ebp-20h] 1 +
push dword ptr [ebp-1Ch]  +
call sub_100A3D2  +
lea eax [ebp-24h] +
push eax  +
call sub_10059C1  +
cmp [ebp-20h] ebx +
jz loc_1007950  +
cmp edi ebx +
jz loc_1007945  +
mov [ebp-18h] edi +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-30h]  +
call sub_1008493  +
push dword ptr [ebp-28h]  +
call sub_100B9E0  +
push ebx  +
push edi  +
push esi  +
push 8  +
call sub_1005EBD  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008F22  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov edi offset aQueryuirequest +
push edi  +
push 7  +
mov [ebp-14h] esi +
mov [ebp-8] esi +
mov [ebp-2Ch] esi +
mov [ebp-28h] esi +
mov [ebp-4] esi +
mov [ebp-18h] esi +
mov [ebp-20h] esi +
mov dword ptr [ebp-0Ch] 1 +
mov [ebp-24h] esi +
mov [ebp-1Ch] esi +
mov [ebp-10h] esi +
call sub_1005EBD  +
lea eax [ebp-24h] +
push eax  +
call sub_100B8D2  +
mov ebx eax +
cmp ebx esi +
jnz loc_1007A70  +
lea eax [ebp-1Ch] +
push eax  +
push esi  +
lea eax [ebp-14h] +
push eax  +
push esi  +
push dword ptr [ebp+10h]  +
call sub_1002EE8  +
mov ebx eax +
cmp ebx esi +
jnz loc_1007A70  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov ebx eax +
cmp ebx esi +
jnz loc_1007A70  +
push esi  +
push esi  +
push edi  +
push esi  +
mov [ebp-0Ch] esi +
call sub_1005EBD  +
mov eax [ebp-10h] +
cmp [eax+40h] esi +
jz loc_1007A32  +
lea ecx [ebp-8] +
push ecx  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-14h]  +
call dword ptr [eax+40h]  +
mov [ebp-4] eax +
jmp loc_1007A39  +
mov dword ptr [ebp-4] 78h +
push esi  +
push dword ptr [ebp-4]  +
push edi  +
push 2  +
call sub_1005EBD  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-18h]  +
call sub_10086A1  +
mov ebx eax +
cmp ebx esi +
jnz loc_1007A70  +
mov dword ptr [ebp-0Ch] 1 +
cmp [ebp-4] esi +
jnz loc_1007A70  +
mov eax [ebp-8] +
mov ecx [ebp+18h] +
mov [ecx] eax +
mov [ebp-8] esi +
mov eax [ebp-8] +
cmp eax esi +
jz loc_1007A87  +
push dword ptr [eax+28h]  +
call sub_100A3D2  +
push dword ptr [ebp-8]  +
call sub_100A3D2  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp+10h]  +
call sub_1002FD5  +
lea eax [ebp-20h] +
push eax  +
call sub_10059C1  +
cmp [ebp-0Ch] esi +
jz loc_1007AB2  +
cmp ebx esi +
jz loc_1007AA7  +
mov [ebp-4] ebx +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-24h]  +
call sub_100B9E0  +
push esi  +
push ebx  +
push edi  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
xor eax eax +
mov [ebp-44h] ebx +
lea edi [ebp-40h] +
stos   +
mov [ebp-34h] ebx +
lea edi [ebp-30h] +
stos   +
push 6  +
mov [ebp-4Ch] ebx +
lea edi [ebp-48h] +
stos   +
pop ecx  +
mov [ebp-3Ch] ebx +
lea edi [ebp-38h] +
stos   +
push ebx  +
mov [ebp-54h] ebx +
lea edi [ebp-50h] +
stos   +
push ebx  +
mov [ebp-5Ch] ebx +
lea edi [ebp-58h] +
stos   +
xor esi esi +
push offset aOnexindicatere  +
mov [ebp-80h] ebx +
lea edi [ebp-7Ch] +
inc esi  +
push 7  +
mov [ebp-20h] ebx +
stos   +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
mov [ebp-64h] ebx +
mov [ebp-60h] ebx +
mov [ebp-8] ebx +
mov [ebp-24h] ebx +
mov [ebp-2Ch] ebx +
mov [ebp-18h] esi +
mov [ebp-0Ch] ebx +
mov [ebp-28h] ebx +
mov [ebp-1Ch] ebx +
call sub_1005EBD  +
lea eax [ebp-0Ch] +
push eax  +
call sub_100B8D2  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_1007E68  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
lea eax [ebp-20h] +
push eax  +
push ebx  +
push dword ptr [ebp+10h]  +
call sub_1002EE8  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_1007E68  +
mov ecx [ebp+18h] +
cmp ecx ebx +
jz loc_1007D74  +
mov eax [ecx+14h] +
cmp eax ebx +
jbe loc_1007B97  +
cmp [ecx+10h] ebx +
jz loc_1007B97  +
mov [ebp-10h] esi +
cmp [ecx+0Ch] ebx +
jbe loc_1007BA4  +
cmp [ecx+8] ebx +
jz loc_1007BA4  +
mov [ebp-14h] esi +
mov edi ds:GetLastError +
mov esi ds:CryptUnprotectData +
cmp [ebp-10h] ebx +
jz loc_1007C1B  +
mov [ebp-44h] eax +
mov eax ecx +
mov eax [eax+10h] +
mov [ebp-40h] eax +
lea eax [ebp-34h] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp-44h] +
push eax  +
call esi  +
test eax eax +
jnz loc_1007C1B  +
call edi  +
mov [ebp-4] eax +
cmp eax ebx +
jz loc_1007C1B  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1007E68  +
cmp byte ptr [eax+19h] 1 +
jb loc_1007E68  +
test byte ptr [eax+1Ch] 1 +
jz loc_1007E68  +
push dword ptr [ebp-4]  +
push offset dword_1001B30  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1007E68  +
cmp [ebp-14h] ebx +
jz loc_1007C7C  +
mov eax [ebp+18h] +
mov ecx [eax+0Ch] +
mov eax [eax+8] +
mov [ebp-48h] eax +
lea eax [ebp-3Ch] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp-4Ch] +
push eax  +
mov [ebp-4Ch] ecx +
call esi  +
test eax eax +
jnz loc_1007C7C  +
call edi  +
mov [ebp-4] eax +
cmp eax ebx +
jz loc_1007C7C  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1007E68  +
cmp byte ptr [eax+19h] 1 +
jb loc_1007E68  +
test byte ptr [eax+1Ch] 1 +
jz loc_1007E68  +
push dword ptr [ebp-4]  +
push offset dword_1001B30  +
push 0Dh  +
jmp loc_1007C0B  +
***
push dword ptr [ebp-0Ch]  +
call sub_100B9E0  +
mov esi ds:CryptProtectData +
mov [ebp-0Ch] ebx +
cmp [ebp-10h] ebx +
jz loc_1007CEE  +
lea eax [ebp-54h] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp-34h] +
push eax  +
call esi  +
test eax eax +
jnz loc_1007CE2  +
call edi  +
mov [ebp-4] eax +
cmp eax ebx +
jz loc_1007CE2  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1007E68  +
cmp byte ptr [eax+19h] 1 +
jb loc_1007E68  +
test byte ptr [eax+1Ch] 1 +
jz loc_1007E68  +
push dword ptr [ebp-4]  +
push offset dword_1001B30  +
push 0Eh  +
jmp loc_1007C0B  +
***
mov eax [ebp-54h] +
mov [ebp-6Ch] eax +
mov eax [ebp-50h] +
mov [ebp-70h] eax +
cmp [ebp-14h] ebx +
jz loc_1007D4F  +
lea eax [ebp-5Ch] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp-3Ch] +
push eax  +
call esi  +
test eax eax +
jnz loc_1007D43  +
call edi  +
mov [ebp-4] eax +
cmp eax ebx +
jz loc_1007D43  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1007E68  +
cmp byte ptr [eax+19h] 1 +
jb loc_1007E68  +
test byte ptr [eax+1Ch] 1 +
jz loc_1007E68  +
push dword ptr [ebp-4]  +
push offset dword_1001B30  +
push 0Fh  +
jmp loc_1007C0B  +
***
mov eax [ebp-5Ch] +
mov [ebp-74h] eax +
mov eax [ebp-58h] +
mov [ebp-78h] eax +
mov eax [ebp+18h] +
mov ecx [eax] +
mov [ebp-80h] ecx +
mov ecx [eax+4] +
mov [ebp-7Ch] ecx +
lea ecx [ebp-68h] +
push ecx  +
push dword ptr [eax+18h]  +
call sub_100C953  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_1007E68  +
lea eax [ebp-64h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_1007E68  +
push ebx  +
push ebx  +
push offset aOnexindicatere  +
push ebx  +
mov [ebp-18h] ebx +
call sub_1005EBD  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001B30 +
cmp eax esi +
jz loc_1007DDD  +
cmp byte ptr [eax+19h] 3 +
jb loc_1007DDD  +
test byte ptr [eax+1Ch] 1 +
jz loc_1007DDD  +
push dword ptr [ebp+14h]  +
push edi  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp-1Ch] +
cmp [eax+44h] ebx +
jz loc_1007E00  +
mov ecx [ebp+18h] +
neg ecx  +
sbb ecx ecx +
lea edx [ebp-80h] +
and ecx edx +
push ecx  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-20h]  +
call dword ptr [eax+44h]  +
mov [ebp-8] eax +
jmp loc_1007E07  +
mov dword ptr [ebp-8] 78h +
push ebx  +
push dword ptr [ebp-8]  +
push offset aOnexindicatere  +
push 2  +
call sub_1005EBD  +
push dword ptr [ebp-60h]  +
push dword ptr [ebp-64h]  +
push dword ptr [ebp-24h]  +
call sub_10086A1  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_1007E68  +
push ebx  +
mov dword ptr [ebp-18h] 1 +
call ds:RpcImpersonateClient  +
mov [ebp-4] eax +
cmp eax ebx +
jz loc_1007E61  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1007E68  +
cmp byte ptr [eax+19h] 1 +
jb loc_1007E68  +
test byte ptr [eax+1Ch] 1 +
jz loc_1007E68  +
push dword ptr [ebp-4]  +
push edi  +
push 11h  +
jmp loc_1007C0B  +
***
mov dword ptr [ebp-0Ch] 1 +
cmp [ebp+18h] ebx +
jz loc_1007EB9  +
mov eax [ebp-78h] +
cmp eax ebx +
jz loc_1007E8C  +
mov ecx [ebp-74h] +
cmp ecx ebx +
jz loc_1007E81  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1007E7B  +
push dword ptr [ebp-78h]  +
call sub_100A3D2  +
mov [ebp-78h] ebx +
mov eax [ebp-70h] +
cmp eax ebx +
jz loc_1007EAB  +
mov ecx [ebp-6Ch] +
cmp ecx ebx +
jz loc_1007EA0  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1007E9A  +
push dword ptr [ebp-70h]  +
call sub_100A3D2  +
mov [ebp-70h] ebx +
cmp [ebp-68h] ebx +
jz loc_1007EB9  +
lea eax [ebp-68h] +
push eax  +
call sub_100C701  +
mov eax [ebp-30h] +
mov esi ds:LocalFree +
cmp eax ebx +
jz loc_1007ED8  +
mov ecx [ebp-34h] +
cmp ecx ebx +
jz loc_1007ED3  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1007ECD  +
push dword ptr [ebp-30h]  +
call esi  +
mov eax [ebp-38h] +
cmp eax ebx +
jz loc_1007EF1  +
mov ecx [ebp-3Ch] +
cmp ecx ebx +
jz loc_1007EEC  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1007EE6  +
push dword ptr [ebp-38h]  +
call esi  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+10h]  +
call sub_1002FD5  +
lea eax [ebp-2Ch] +
push eax  +
call sub_10059C1  +
cmp [ebp-18h] ebx +
jz loc_1007F1F  +
mov eax [ebp-4] +
cmp eax ebx +
jz loc_1007F14  +
mov [ebp-8] eax +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-0Ch]  +
call sub_100B9E0  +
push ebx  +
push dword ptr [ebp-4]  +
push offset aOnexindicatere  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov ebx offset aControl +
push ebx  +
push 7  +
mov [ebp-18h] esi +
mov [ebp-0Ch] esi +
mov [ebp-4] esi +
mov [ebp-20h] esi +
mov [ebp-34h] esi +
mov [ebp-30h] esi +
mov [ebp-8] esi +
mov [ebp-1Ch] esi +
mov [ebp-28h] esi +
mov dword ptr [ebp-10h] 1 +
mov [ebp-2Ch] esi +
mov [ebp-24h] esi +
mov [ebp-14h] esi +
call sub_1005EBD  +
lea eax [ebp-2Ch] +
push eax  +
call sub_100B8D2  +
mov edi eax +
cmp edi esi +
jnz loc_100809B  +
mov eax [ebp+24h] +
mov [eax] esi +
lea eax [ebp-24h] +
push eax  +
push esi  +
lea eax [ebp-18h] +
push eax  +
push esi  +
push dword ptr [ebp+10h]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_100809B  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100BEAA  +
mov edi eax +
cmp edi esi +
jnz loc_100809B  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+20h]  +
call sub_100BEAA  +
mov edi eax +
cmp edi esi +
jnz loc_100809B  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-28h] +
push eax  +
push dword_1012008  +
call sub_1008A3E  +
mov edi eax +
cmp edi esi +
jnz loc_100809B  +
push esi  +
push esi  +
push ebx  +
push esi  +
mov [ebp-10h] esi +
call sub_1005EBD  +
mov eax [ebp-14h] +
cmp [eax+48h] esi +
jz loc_1008047  +
lea ecx [ebp-20h] +
push ecx  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-18h]  +
call dword ptr [eax+48h]  +
mov [ebp-8] eax +
jmp loc_100804E  +
mov dword ptr [ebp-8] 78h +
push esi  +
push dword ptr [ebp-8]  +
push ebx  +
push 2  +
call sub_1005EBD  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-1Ch]  +
call sub_10086A1  +
mov edi eax +
cmp edi esi +
jnz loc_100809B  +
mov eax [ebp-20h] +
mov ecx [ebp+24h] +
mov dword ptr [ebp-10h] 1 +
mov [ecx] eax +
cmp [ebp-4] esi +
jz loc_100809B  +
cmp [ebp+20h] esi +
jz loc_100809B  +
cmp eax [ebp+1Ch] +
ja loc_100809B  +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+20h]  +
call memcpy  +
add esp 0Ch +
push dword ptr [ebp-0Ch]  +
call sub_100A3D2  +
push dword ptr [ebp-4]  +
call sub_100A3D2  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+10h]  +
call sub_1002FD5  +
lea eax [ebp-28h] +
push eax  +
call sub_10059C1  +
cmp [ebp-10h] esi +
jz loc_10080D6  +
cmp edi esi +
jz loc_10080CB  +
mov [ebp-8] edi +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1008493  +
push dword ptr [ebp-2Ch]  +
call sub_100B9E0  +
push esi  +
push edi  +
push ebx  +
push 8  +
call sub_1005EBD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1008128  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008128  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008128  +
push offset dword_1001C38  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_1008156  +
cmp [esi] ebx +
jbe loc_100814B  +
push edi  +
lea edi [esi+4] +
push dword ptr [edi]  +
call sub_100A3D2  +
inc ebx  +
add edi 4 +
cmp ebx [esi] +
jb loc_100813B  +
pop edi  +
push esi  +
call sub_100A3D2  +
mov eax AuthIdentity +
pop esi  +
pop ebx  +
cmp eax offset AuthIdentity +
jz loc_100817F  +
cmp byte ptr [eax+19h] 4 +
jb loc_100817F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100817F  +
push 0  +
push offset dword_1001C38  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_10081BD  +
cmp byte ptr [eax+19h] 4 +
jb loc_10081BD  +
test byte ptr [eax+1Ch] 1 +
jz loc_10081BD  +
push offset dword_1001C38  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov edi ds:EnterCriticalSection +
mov esi offset stru_10124E0 +
push esi  +
call edi  +
push esi  +
mov dword_1012068 3 +
call ds:LeaveCriticalSection  +
call ds:RpcMgmtWaitServerListen  +
push esi  +
mov [ebp+var_4] eax +
call edi  +
xor edi edi +
cmp [ebp+var_4] edi +
jz loc_100821B  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100825B  +
cmp byte ptr [eax+19h] 1 +
jb loc_100825B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100825B  +
push [ebp+var_4]  +
push offset dword_1001C38  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100825B  +
mov ecx dword_1012068 +
cmp ecx 4 +
jz loc_1008251  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1008260  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008260  +
push ecx  +
push offset dword_1001C38  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1008260  +
mov dword_1012068 5 +
cmp [ebp+var_4] edi +
jz loc_1008266  +
mov dword_1012068 edi +
push esi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop edi  +
pop esi  +
cmp eax ebx +
pop ebx  +
jz loc_100829A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100829A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100829A  +
push [ebp+var_4]  +
push offset dword_1001C38  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
mov ebx offset dword_1001C38 +
cmp eax edi +
jz loc_10082DA  +
cmp byte ptr [eax+19h] 4 +
jb loc_10082DA  +
test byte ptr [eax+1Ch] 1 +
jz loc_10082DA  +
push ebx  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov esi offset stru_10124E0 +
push esi  +
call ds:EnterCriticalSection  +
mov ecx dword_1012068 +
cmp ecx 3 +
jz loc_100834B  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1008316  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008316  +
push ecx  +
push ebx  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push esi  +
call ds:LeaveCriticalSection  +
mov esi [ebp+var_4] +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1008344  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008344  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008344  +
push esi  +
push ebx  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
push esi  +
mov dword_1012068 4 +
call ds:LeaveCriticalSection  +
push 0  +
call ds:RpcMgmtStopServerListening  +
mov esi eax +
test esi esi +
jz loc_1008320  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1008344  +
cmp byte ptr [eax+19h] 1 +
jb loc_1008325  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008325  +
push esi  +
push ebx  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1008320  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C38 +
cmp eax esi +
jz loc_10083CB  +
cmp byte ptr [eax+19h] 4 +
jb loc_10083CB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10083CB  +
push edi  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov ebx offset stru_10124E0 +
push ebx  +
call ds:EnterCriticalSection  +
mov ecx dword_1012068 +
cmp ecx 5 +
jz loc_1008409  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1008459  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008459  +
push ecx  +
push edi  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1008459  +
push UuidVector  +
push IfSpec  +
call sub_100B425  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1008459  +
push UuidVector  +
call sub_10080F4  +
mov dword_1012068 1 +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1008459  +
cmp byte ptr [eax+19h] 3 +
jb loc_1008459  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008459  +
push edi  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1008486  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008486  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008486  +
push [ebp+var_4]  +
push edi  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C38 +
cmp eax esi +
jz loc_10084C8  +
cmp byte ptr [eax+19h] 4 +
jb loc_10084C8  +
test byte ptr [eax+1Ch] 1 +
jz loc_10084C8  +
push edi  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+Reply] +
push eax  +
push [ebp+pAsync]  +
call ds:RpcAsyncCompleteCall  +
mov ebx eax +
test ebx ebx +
jz loc_10084FF  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1008523  +
cmp byte ptr [eax+19h] 1 +
jb loc_1008504  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008504  +
push ebx  +
push edi  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1008523  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008523  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008523  +
push ebx  +
push edi  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_1008567  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008567  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008567  +
push offset dword_1001C38  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov esi offset stru_10124E0 +
push esi  +
call ds:EnterCriticalSection  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [edx+4] +
mov [ebp+var_8] eax +
add eax 1 +
mov ebx ecx +
adc ecx 0 +
push esi  +
mov [edx] eax +
mov [edx+4] ecx +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_10085BB  +
cmp byte ptr [eax+19h] 4 +
jb loc_10085BB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10085BB  +
push 0  +
push offset dword_1001C38  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
mov edx ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100860B  +
cmp byte ptr [eax+19h] 4 +
jb loc_100860B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100860B  +
push offset dword_1001C38  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+var_4] +
push eax  +
push 1  +
push edi  +
push edi  +
push [ebp+arg_0]  +
mov esi offset unk_10120B0 +
push esi  +
call sub_10095EE  +
mov [ebp+var_C] eax +
cmp eax edi +
jnz loc_100864E  +
push [ebp+var_4]  +
call sub_100987D  +
mov eax [ebp+var_4] +
mov [eax+28h] edi +
mov eax [ebp+var_4] +
push dword ptr [eax+1Ch]  +
mov [ebp+var_8] 2 +
push dword ptr [eax+18h]  +
call sub_1008493  +
mov [ebp+var_C] eax +
push [ebp+var_4]  +
call sub_10098ED  +
cmp [ebp+var_8] edi +
jz loc_1008668  +
push [ebp+var_8]  +
push edi  +
push [ebp+arg_0]  +
push esi  +
call sub_100974A  +
mov eax AuthIdentity +
pop edi  +
pop esi  +
cmp eax ebx +
pop ebx  +
jz loc_1008695  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008695  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008695  +
push [ebp+var_C]  +
push offset dword_1001C38  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_C] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov [ebp+var_8] ebx +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C38 +
cmp eax esi +
jz loc_10086DE  +
cmp byte ptr [eax+19h] 4 +
jb loc_10086DE  +
test byte ptr [eax+1Ch] 1 +
jz loc_10086DE  +
push edi  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+var_8] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
mov ebx offset unk_10120B0 +
push ebx  +
call sub_10095EE  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_10087AB  +
push [ebp+var_8]  +
mov [ebp+var_C] 1 +
call sub_100987D  +
mov ecx [ebp+arg_4] +
mov eax [ebp+var_8] +
cmp ecx [eax+20h] +
jnz loc_1008721  +
mov ecx [ebp+arg_8] +
cmp ecx [eax+24h] +
jz loc_1008749  +
mov ecx 21Dh +
mov [ebp+var_4] ecx +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1008789  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008789  +
push ecx  +
push edi  +
push 27h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1008789  +
cmp dword ptr [eax+28h] 0 +
jnz loc_100876C  +
mov ecx 21Dh +
mov [ebp+var_4] ecx +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1008789  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008789  +
push ecx  +
push edi  +
push 28h  +
jmp loc_100873C  +
push dword ptr [eax+28h]  +
call sub_100ADC4  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1008789  +
mov eax [ebp+var_8] +
and dword ptr [eax+28h] 0 +
mov [ebp+var_C] 2 +
push [ebp+var_8]  +
call sub_10098ED  +
cmp [ebp+var_C] 0 +
jz loc_10087A5  +
push [ebp+var_C]  +
push 0  +
push [ebp+arg_0]  +
push ebx  +
call sub_100974A  +
cmp [ebp+var_4] 0 +
jz loc_10087C8  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_10087EE  +
test byte ptr [eax+1Ch] 1 +
jz loc_10087CD  +
push edi  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_10087EE  +
cmp byte ptr [eax+19h] 4 +
jb loc_10087EE  +
test byte ptr [eax+1Ch] 1 +
jz loc_10087EE  +
push [ebp+var_4]  +
push edi  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_101206C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
and [ebp+var_20] 0 +
and [ebp+var_18] 0 +
push ebx  +
push esi  +
push edi  +
lea esi [ebp+arg_0] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov [ebp+var_24] eax +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_1008856  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008856  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008856  +
push offset dword_1001C38  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+var_18] +
push eax  +
push 8  +
call sub_100A309  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_10088AB  +
mov eax [ebp+var_18] +
push 8  +
pop ecx  +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100886E  +
mov eax [ebp+var_18] +
mov dword ptr [eax] 1 +
lea eax [ebp+var_20] +
push eax  +
push 10h  +
call sub_100A309  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_10088AB  +
mov edi [ebp+var_20] +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+var_18] +
mov ecx [ebp+var_20] +
mov [eax+4] ecx +
mov eax [ebp+var_18] +
mov ecx [ebp+var_24] +
mov [ecx] eax +
mov eax AuthIdentity +
pop edi  +
pop esi  +
cmp eax ebx +
pop ebx  +
jz loc_10088D8  +
cmp byte ptr [eax+19h] 4 +
jb loc_10088D8  +
test byte ptr [eax+1Ch] 1 +
jz loc_10088D8  +
push [ebp+var_1C]  +
push offset dword_1001C38  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1C] +
xor ecx ebp +
call sub_1008F22  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_101206C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
lea esi [ebp+arg_0] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100893C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100893C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100893C  +
push offset dword_1001C38  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp dword_1012114 1 +
mov ebx offset stru_10124E0 +
jz loc_1008963  +
push offset dword_1012114  +
push offset dword_1012110  +
push ebx  +
call sub_100B282  +
mov esi eax +
mov eax AuthIdentity +
jmp loc_1008965  +
xor esi esi +
test esi esi +
jnz loc_1008A00  +
push ebx  +
call ds:EnterCriticalSection  +
push offset UuidVector  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
call sub_10087FD  +
mov esi eax +
test esi esi +
jnz loc_10089F4  +
push eax  +
push UuidVector  +
push IfSpec  +
call sub_100BC8E  +
mov esi eax +
test esi esi +
jnz loc_10089F4  +
push 1  +
push 4D2h  +
push 1  +
call ds:RpcServerListen  +
mov esi eax +
test esi esi +
jz loc_10089EA  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_10089F4  +
cmp byte ptr [eax+19h] 1 +
jb loc_10089F4  +
test byte ptr [eax+1Ch] 1 +
jz loc_10089F4  +
push esi  +
push offset dword_1001C38  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_10089F4  +
mov dword_1012068 2 +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1008A26  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008A26  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008A26  +
push esi  +
push offset dword_1001C38  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008F22  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1008A7D  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008A7D  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008A7D  +
push offset dword_1001C38  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov edi [ebp+arg_4] +
cmp edi esi +
jz loc_1008A9D  +
push [ebp+arg_8]  +
push edi  +
call sub_10058E1  +
cmp [edi] esi +
jnz loc_1008A9D  +
mov [ebp+arg_4] 5 +
jmp loc_1008B46  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
mov ebx offset unk_10120B0 +
push ebx  +
call sub_1009ED2  +
mov [ebp+arg_4] eax +
cmp eax esi +
jnz loc_1008B45  +
push [ebp+var_4]  +
xor edi edi +
inc edi  +
call sub_100987D  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_8]  +
push offset sub_10085CC  +
push [ebp+arg_0]  +
call sub_100ABB1  +
mov [ebp+arg_4] eax +
cmp eax esi +
mov eax [ebp+var_4] +
jnz loc_1008B30  +
mov ecx [ebp+arg_C] +
mov [eax+18h] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax+1Ch] 102h +
mov eax [ebp+var_4] +
mov ecx [ebp+var_C] +
push offset unk_1012118  +
xor edi edi +
mov [eax+28h] ecx +
call sub_1008531  +
mov ecx [ebp+var_4] +
mov [ecx+20h] eax +
mov eax [ebp+var_4] +
mov [eax+24h] edx +
mov eax [ebp+arg_10] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+var_4] +
mov edx [eax+20h] +
mov ecx [ebp+arg_14] +
mov [ecx] edx +
mov edx [eax+24h] +
mov [ecx+4] edx +
push eax  +
call sub_10098ED  +
cmp edi esi +
jz loc_1008B45  +
push edi  +
push esi  +
push [ebp+var_8]  +
push ebx  +
call sub_100974A  +
pop ebx  +
mov eax AuthIdentity +
pop edi  +
pop esi  +
cmp eax offset AuthIdentity +
jz loc_1008B75  +
cmp byte ptr [eax+19h] 4 +
jb loc_1008B75  +
test byte ptr [eax+1Ch] 1 +
jz loc_1008B75  +
push [ebp+arg_4]  +
push offset dword_1001C38  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+arg_4] +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1008BA9  +
test eax eax +
jnz loc_1008BAE  +
mov ecx [esi] +
test ecx ecx +
jz loc_1008BA6  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1008B9A  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1012148 +
push offset dword_1012138  +
push dword_1012144  +
mov dword_1012138 eax +
push offset dword_1012128  +
push offset dword_101212C  +
push offset dword_1012124  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1012134 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1008C36  +
cmp eax esi +
jnz loc_1008C29  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1008C39  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1008C10  +
xor esi esi +
inc esi  +
mov eax dword_1012570 +
cmp eax esi +
jnz loc_1008C4C  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1008C87  +
mov eax dword_1012570 +
test eax eax +
jnz loc_1008C81  +
mov dword_1012570 esi +
push offset dword_1001224  +
push offset dword_1001218  +
call sub_1008B8D  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1008C87  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1008D51  +
mov dword_1012140 esi +
mov eax dword_1012570 +
cmp eax esi +
jnz loc_1008CAB  +
push offset dword_1001214  +
push offset dword_100120C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1012570 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1008CB8  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1012578 ebx +
jz loc_1008CD9  +
push offset dword_1012578  +
call sub_1009039  +
pop ecx  +
test eax eax +
jz loc_1008CD9  +
push ebx  +
push 2  +
push ebx  +
call dword_1012578  +
push dword_1012128  +
push dword_101212C  +
push dword_1012124  +
call sub_10040E7  +
add esp 0Ch +
mov dword_101213C eax +
cmp dword_1012130 ebx +
jnz loc_1008D37  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_101213C eax +
xor ebx ebx +
cmp dword_1012130 ebx +
jnz loc_1008D37  +
push eax  +
call ds:_exit  +
cmp dword_1012140 ebx +
jnz loc_1008D45  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_101213C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1008D6E  +
xor eax eax +
jmp loc_1008DBB  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1008D6A  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1008DA8  +
cmp ecx 20Bh +
jnz loc_1008D6A  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1008D6A  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1008DB6  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1008D6A  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1012130 eax +
call sub_1009147  +
push eax  +
call ds:__set_app_type  +
or dword_1012568 0FFFFFFFFh +
or dword_101256C 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1012150 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_101214C +
mov [eax] ecx +
call sub_10090D9  +
cmp dword_101207C 0 +
jnz loc_1008E14  +
push offset sub_10090D9  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10090C1  +
xor eax eax +
retn   +
***
call sub_1009186  +
jmp sub_1008BEE  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_1008F22  +
jmp __SEH_epilog4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1008F22  +
push offset dword_101206C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
cmp ecx dword_101206C +
jnz loc_1008F2D  +
retn 0  +
jmp loc_1009227  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1008F80  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1008F80  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1008F7A  +
cmp eax 19930521h +
jz loc_1008F7A  +
cmp eax 19930522h +
jz loc_1008F7A  +
cmp eax 1994000h +
jnz loc_1008F80  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1008F40+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1008FC6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1008FC2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100902D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1009025  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100902F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1009015  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1008FB0  +
pop ecx  +
test eax eax +
jz loc_1009096  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1008FF0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009096  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100909F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100913A  +
cmp ecx 0FFFFFFFFh +
jz loc_100913A  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1009133  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1009133  +
cmp edx 10000000h +
jnb loc_1009133  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1009133  +
jmp loc_100912E  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_100917C  +
push eax  +
call sub_10090E1  +
test eax eax +
jz loc_100917C  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1009171  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_100917C  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_101206C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10091B8  +
test eax ebx +
jz loc_10091B8  +
not eax  +
mov dword_1012070 eax +
jmp loc_1009213  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_10091FF  +
test dword_101206C ebx +
jnz loc_1009204  +
mov esi 0BB40E64Fh +
mov dword_101206C esi +
not esi  +
mov dword_1012070 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1012258 eax +
mov dword_1012254 ecx +
mov dword_1012250 edx +
mov dword_101224C ebx +
mov dword_1012248 esi +
mov dword_1012244 edi +
mov word_1012270 ss +
mov word_1012264 cs +
mov word_1012240 ds +
mov word_101223C es +
mov word_1012238 fs +
mov word_1012234 gs +
pushf   +
pop dword_1012268  +
mov eax [ebp+0] +
mov dword_101225C eax +
mov eax [ebp+4] +
mov dword_1012260 eax +
lea eax [ebp+8] +
mov dword_101226C eax +
mov eax [ebp-320h] +
mov dword_10121A8 10001h +
mov eax dword_1012260 +
mov dword_1012164 eax +
mov dword_1012158 0C0000409h +
mov dword_101215C 1 +
mov eax dword_101206C +
mov [ebp-328h] eax +
mov eax dword_1012070 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jle loc_100932C  +
cmp [ebp+arg_0] 2 +
jle loc_1009358  +
mov esi 139Fh +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1009358  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009358  +
push [ebp+arg_0]  +
push offset dword_1001C50  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_1009398  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009398  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009398  +
push offset dword_1001C50  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov esi offset stru_1012620 +
push esi  +
call ds:EnterCriticalSection  +
mov ebx [ebp+arg_0] +
push dword ptr [ebx+0Ch]  +
call sub_1009319  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_10093BD  +
mov dword ptr [ebx+0Ch] 1 +
push esi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_10093F1  +
cmp byte ptr [eax+19h] 4 +
jb loc_10093F1  +
test byte ptr [eax+1Ch] 1 +
jz loc_10093F1  +
push [ebp+arg_0]  +
push offset dword_1001C50  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100943E  +
cmp byte ptr [eax+19h] 4 +
jb loc_100943E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100943E  +
mov edi offset dword_1001C50 +
push edi  +
push 27h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
jmp loc_1009443  +
mov edi offset dword_1001C50 +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1009513  +
cmp dword ptr [esi+10h] 1 +
jnz loc_100948C  +
cmp eax ebx +
jz loc_1009472  +
cmp byte ptr [eax+19h] 3 +
jb loc_1009472  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009472  +
push edi  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push dword ptr [esi+20h]  +
call sub_100CE71  +
mov eax [esi+24h] +
test eax eax +
jz loc_1009487  +
push eax  +
call sub_100A3D2  +
mov eax AuthIdentity +
cmp dword ptr [esi+4] 0 +
jnz loc_10094B7  +
mov [ebp+var_4] 139Fh +
cmp eax ebx +
jz loc_1009534  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009513  +
push edi  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100950E  +
mov edi offset stru_1012620 +
push edi  +
call ds:EnterCriticalSection  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
test eax eax +
jz loc_10094D2  +
mov [eax+0Ch] ecx +
jmp loc_10094D8  +
mov eax [esi+4] +
mov [eax+4] ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10094E5  +
mov ecx [esi+8] +
mov [eax+8] ecx +
push edi  +
call ds:LeaveCriticalSection  +
lea edi [esi+84h] +
cmp dword ptr [edi] 0 +
jz loc_1009503  +
lea eax [esi+40h] +
push eax  +
call sub_100E291  +
and dword ptr [edi] 0 +
push esi  +
call sub_100A3D2  +
mov edi offset dword_1001C50 +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_1009534  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009534  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009534  +
push [ebp+var_4]  +
push edi  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C50 +
cmp eax esi +
jz loc_100957A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100957A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100957A  +
push edi  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push 10h  +
push dword ptr [ebp+8]  +
push offset sub_10093FD  +
call ds:QueueUserWorkItem  +
test eax eax +
jnz loc_10095BE  +
call ds:GetLastError  +
mov ebx eax +
test ebx ebx +
jz loc_10095BE  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_10095E2  +
cmp byte ptr [eax+19h] 1 +
jb loc_10095C3  +
test byte ptr [eax+1Ch] 1 +
jz loc_10095C3  +
push ebx  +
push edi  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_10095E2  +
cmp byte ptr [eax+19h] 4 +
jb loc_10095E2  +
test byte ptr [eax+1Ch] 1 +
jz loc_10095E2  +
push ebx  +
push edi  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_100962B  +
cmp byte ptr [eax+19h] 4 +
jb loc_100962B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100962B  +
push offset dword_1001C50  +
push 36h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp [ebp+arg_4] 0 +
jnz loc_100965D  +
push 57h  +
pop ebx  +
cmp eax edi +
jz loc_100973D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100971A  +
push offset dword_1001C50  +
push 37h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1009715  +
push esi  +
push offset stru_1012620  +
call ds:EnterCriticalSection  +
mov esi [ebp+arg_0] +
push dword ptr [esi+0Ch]  +
call sub_1009319  +
mov ebx eax +
test ebx ebx +
jnz loc_1009709  +
mov esi [esi] +
test esi esi +
jnz loc_10096AC  +
mov ebx 139Fh +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1009709  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009709  +
push offset dword_1001C50  +
push 38h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1009709  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_100E57F  +
mov ebx eax +
test ebx ebx +
jz loc_10096F2  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_1009709  +
cmp byte ptr [eax+19h] 1 +
jb loc_1009709  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009709  +
push ebx  +
push offset dword_1001C50  +
push 39h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1009709  +
mov ecx [ebp+var_4] +
test ecx ecx +
jnz loc_1009700  +
mov ebx 139Fh +
jmp loc_1009709  +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_1009709  +
mov [eax] ecx +
push offset stru_1012620  +
call ds:LeaveCriticalSection  +
pop esi  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100973D  +
cmp byte ptr [eax+19h] 4 +
jb loc_100973D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100973D  +
push ebx  +
push offset dword_1001C50  +
push 3Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_1009782  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009782  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009782  +
push offset dword_1001C50  +
push 3Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp [ebp+arg_4] 0 +
jnz loc_10097B4  +
push 57h  +
pop ebx  +
cmp eax esi +
jz loc_1009870  +
test byte ptr [eax+1Ch] 1 +
jz loc_100984D  +
push offset dword_1001C50  +
push 3Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1009848  +
push edi  +
push offset stru_1012620  +
call ds:EnterCriticalSection  +
mov edi [ebp+arg_0] +
push dword ptr [edi+0Ch]  +
call sub_1009319  +
mov ebx eax +
test ebx ebx +
jnz loc_100983C  +
mov edi [edi] +
test edi edi +
jnz loc_10097FF  +
mov ebx 139Fh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100983C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100983C  +
push offset dword_1001C50  +
push 3Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100983C  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edi  +
call sub_100EAA8  +
mov ebx eax +
test ebx ebx +
jz loc_100983C  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100983C  +
cmp byte ptr [eax+19h] 1 +
jb loc_100983C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100983C  +
push ebx  +
push offset dword_1001C50  +
push 3Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push offset stru_1012620  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009870  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009870  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009870  +
push ebx  +
push offset dword_1001C50  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C50 +
cmp eax esi +
jz loc_10098B1  +
cmp byte ptr [eax+19h] 4 +
jb loc_10098B1  +
test byte ptr [eax+1Ch] 1 +
jz loc_10098B1  +
push edi  +
push 40h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_0] +
add eax 40h +
push eax  +
call sub_100E32C  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_10098E2  +
cmp byte ptr [eax+19h] 4 +
jb loc_10098E2  +
test byte ptr [eax+1Ch] 1 +
jz loc_10098E2  +
push 0  +
push edi  +
push 41h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C50 +
cmp eax esi +
jz loc_1009921  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009921  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009921  +
push edi  +
push 42h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_0] +
add eax 40h +
push eax  +
call sub_100E38E  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009952  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009952  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009952  +
push 0  +
push edi  +
push 43h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C50 +
cmp eax esi +
jz loc_1009991  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009991  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009991  +
push edi  +
push 44h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_0] +
add eax 40h +
push eax  +
call sub_100E2E4  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_10099C2  +
cmp byte ptr [eax+19h] 4 +
jb loc_10099C2  +
test byte ptr [eax+1Ch] 1 +
jz loc_10099C2  +
push 0  +
push edi  +
push 45h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C50 +
cmp eax esi +
jz loc_1009A01  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009A01  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009A01  +
push edi  +
push 46h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_0] +
add eax 40h +
push eax  +
call sub_100E35A  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009A32  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009A32  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009A32  +
push 0  +
push edi  +
push 47h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx offset dword_1001C50 +
cmp eax esi +
jz loc_1009A7C  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009A7C  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009A7C  +
push ebx  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+4] 0 +
jz loc_1009AAA  +
mov [ebp+var_4] 139Fh +
cmp eax esi +
jz loc_1009B17  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009AF6  +
push ebx  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1009AF1  +
mov eax [edi] +
test eax eax +
jz loc_1009AE5  +
push eax  +
call sub_100E499  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1009AE5  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009B17  +
cmp byte ptr [eax+19h] 1 +
jb loc_1009AF6  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009AF6  +
push [ebp+var_4]  +
push ebx  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1009AF1  +
push 10h  +
pop ecx  +
mov eax edi +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1009AEA  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009B17  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009B17  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009B17  +
push [ebp+var_4]  +
push ebx  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp-0Ch] ebx +
mov [ebp-14h] ebx +
mov [ebp-8] ebx +
mov [ebp-4] ebx +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_1009B8E  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009B6C  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009B6C  +
push offset dword_1001C50  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009B8E  +
cmp byte ptr [eax+19h] 3 +
jb loc_1009B8E  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009B8E  +
push offset dword_1001C50  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+8] +
mov esi [eax] +
mov ecx [eax+4] +
push edi  +
push eax  +
mov [ebp-18h] esi +
mov [ebp-10h] ecx +
call sub_100A3D2  +
lea eax [ebp-14h] +
push eax  +
xor edi edi +
inc edi  +
push edi  +
push ebx  +
push ebx  +
push dword ptr [ebp-10h]  +
push esi  +
call sub_10095EE  +
mov [ebp+8] eax +
cmp eax ebx +
jnz loc_1009C63  +
mov esi [ebp-14h] +
mov ecx [esi+10h] +
mov [ebp-0Ch] edi +
cmp ecx edi +
jnz loc_1009C25  +
lea eax [ebp-4] +
push eax  +
lea eax [ebp-8] +
push eax  +
call sub_10058E1  +
cmp [ebp-8] ebx +
jnz loc_1009BE9  +
mov dword ptr [ebp+8] 5 +
jmp loc_1009C63  +
push esi  +
call sub_100987D  +
mov eax [ebp-4] +
cmp [eax+8] ebx +
jz loc_1009C1D  +
cmp [esi+1Ch] ebx +
jz loc_1009C1D  +
push ebx  +
push ebx  +
mov edi offset aDeinitadapter +
push edi  +
push ebx  +
call sub_1005EBD  +
push dword ptr [esi+1Ch]  +
mov eax [ebp-4] +
call dword ptr [eax+8]  +
push ebx  +
push ebx  +
push edi  +
push 1  +
call sub_1005EBD  +
push esi  +
call sub_10098ED  +
jmp loc_1009C63  +
cmp ecx 2 +
jnz loc_1009C37  +
push dword ptr [ebp-10h]  +
call sub_10085CC  +
mov [ebp+8] eax +
jmp loc_1009C63  +
mov dword ptr [ebp+8] 139Fh +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1009C63  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009C63  +
push ecx  +
push offset dword_1001C50  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
lea eax [ebp-8] +
push eax  +
call sub_10059C1  +
pop edi  +
cmp [ebp-0Ch] ebx +
jz loc_1009C81  +
push dword ptr [ebp-0Ch]  +
push ebx  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-18h]  +
call sub_100974A  +
mov eax AuthIdentity +
pop esi  +
pop ebx  +
cmp eax offset AuthIdentity +
jz loc_1009CB0  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009CB0  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009CB0  +
push dword ptr [ebp+8]  +
push offset dword_1001C50  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+8] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C50 +
cmp eax esi +
jz loc_1009CF6  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009CF6  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009CF6  +
push edi  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov ebx offset stru_1012620 +
push ebx  +
call ds:EnterCriticalSection  +
mov eax [ebp+arg_0] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_1009D34  +
mov [ebp+var_4] 5 +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009D66  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009D66  +
push ecx  +
push edi  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1009D66  +
cmp dword ptr [eax+4] 0 +
jz loc_1009D60  +
mov [ebp+var_4] 10D3h +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009D66  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009D66  +
push edi  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_1009D66  +
push eax  +
call sub_1009A3D  +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_1009D93  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009D93  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009D93  +
push [ebp+var_4]  +
push edi  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1009DD6  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009DD6  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009DD6  +
push offset dword_1001C50  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
and dword ptr [edi] 0 +
lea eax [ebp+var_4] +
push eax  +
mov esi 88h +
push esi  +
call sub_100A309  +
mov ebx eax +
test ebx ebx +
jnz loc_1009E8E  +
mov eax [ebp+var_4] +
mov byte ptr [eax] 0 +
inc eax  +
dec esi  +
jnz loc_1009DFB  +
mov eax [ebp+var_4] +
add eax 40h +
push eax  +
call sub_100E3AA  +
mov ebx eax +
test ebx ebx +
jz loc_1009E41  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1009E8A  +
cmp byte ptr [eax+19h] 1 +
jb loc_1009E8A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009E8A  +
push ebx  +
push offset dword_1001C50  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_1009E85  +
mov eax [ebp+var_4] +
mov dword ptr [eax+84h] 1 +
mov ecx [ebp+var_4] +
mov eax [ebp+arg_0] +
mov [ecx+4] eax +
mov ecx [ebp+var_4] +
and dword ptr [ecx+8] 0 +
mov ecx [eax+4] +
mov edx [ebp+var_4] +
mov [edx+0Ch] ecx +
mov ecx [eax+4] +
test ecx ecx +
jz loc_1009E74  +
mov edx [ebp+var_4] +
mov [ecx+8] edx +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
mov eax [eax+8] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
mov [edi] eax +
mov eax AuthIdentity +
test ebx ebx +
jz loc_1009E9E  +
push [ebp+var_4]  +
call sub_10093FD  +
and dword ptr [edi] 0 +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_1009EC4  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009EC4  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009EC4  +
push ebx  +
push offset dword_1001C50  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_1009F10  +
cmp byte ptr [eax+19h] 4 +
jb loc_1009F10  +
test byte ptr [eax+1Ch] 1 +
jz loc_1009F10  +
push offset dword_1001C50  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push offset stru_1012620  +
call ds:EnterCriticalSection  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+0Ch] 2 +
jz loc_1009F59  +
push 5  +
pop ecx  +
mov [ebp+arg_0] ecx +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100A049  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A049  +
push ecx  +
push offset dword_1001C50  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100A049  +
cmp [esi] ebx +
jnz loc_1009F92  +
mov [ebp+arg_0] 139Fh +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100A049  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A049  +
push offset dword_1001C50  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100A049  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call sub_1009DA2  +
cmp eax ebx +
mov ebx [ebp+var_4] +
mov [ebp+arg_0] eax +
jnz loc_100A03A  +
lea eax [ebp+var_8] +
push eax  +
push 1  +
push offset loc_1009543  +
push [ebp+arg_4]  +
push ebx  +
push dword ptr [esi]  +
call sub_100E91B  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1009FF3  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100A034  +
cmp byte ptr [eax+19h] 1 +
jb loc_100A034  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A034  +
push [ebp+arg_0]  +
push offset dword_1001C50  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100A034  +
mov eax [ebp+var_8] +
test eax eax +
jnz loc_100A024  +
mov [ebp+arg_0] 139Fh +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100A03A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A03A  +
push offset dword_1001C50  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100A03A  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov [ebx] eax +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_100A049  +
mov [eax] ebx +
cmp [ebp+arg_0] 0 +
jz loc_100A049  +
test ebx ebx +
jz loc_100A049  +
cmp dword ptr [ebx] 0 +
jnz loc_100A049  +
push ebx  +
call sub_10093FD  +
push offset stru_1012620  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_100A081  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A081  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A081  +
push [ebp+arg_0]  +
push offset dword_1001C50  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+arg_0] +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100A0C1  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A0C1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A0C1  +
push offset dword_1001C50  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
cmp dword_1012478 1 +
push ebx  +
push esi  +
push edi  +
mov esi offset stru_1012620 +
jz loc_100A0E6  +
push offset dword_1012478  +
push offset dword_1012474  +
push esi  +
call sub_100B282  +
mov edi eax +
jmp loc_100A0E8  +
xor edi edi +
mov ebx [ebp+arg_0] +
test edi edi +
jnz loc_100A155  +
push esi  +
call ds:EnterCriticalSection  +
push 10h  +
mov [ebp+var_4] 1 +
pop ecx  +
mov eax ebx +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100A102  +
push ebx  +
push ecx  +
push ecx  +
call sub_100E814  +
mov edi eax +
test edi edi +
jz loc_100A144  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100A151  +
cmp byte ptr [eax+19h] 1 +
jb loc_100A151  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A151  +
push edi  +
push offset dword_1001C50  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100A151  +
mov eax [ebp+arg_4] +
mov [ebx+8] eax +
mov dword ptr [ebx+0Ch] 2 +
test edi edi +
jz loc_100A161  +
push ebx  +
call sub_1009A3D  +
cmp [ebp+var_4] 0 +
jz loc_100A168  +
push esi  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100A193  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A193  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A193  +
push edi  +
push offset dword_1001C50  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
mov [ebp+var_8] offset loc_1001C73 +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100A1E1  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A1E1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A1E1  +
push offset dword_1001C50  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push offset stru_1012620  +
call ds:EnterCriticalSection  +
mov edi [ebp+arg_0] +
push dword ptr [edi+0Ch]  +
call sub_1009319  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_100A2C6  +
mov eax [edi+8] +
dec eax  +
jz loc_100A214  +
dec eax  +
jnz loc_100A21B  +
mov [ebp+var_8] offset aCallTable +
jmp loc_100A21B  +
mov [ebp+var_8] offset aAdapter +
push esi  +
mov esi [edi+4] +
jmp loc_100A292  +
lea eax [ebp+var_4] +
push eax  +
push 8  +
call sub_100A309  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_100A2C5  +
mov eax [ebp+var_4] +
mov [eax] edi +
mov eax [esi] +
mov ecx [ebp+var_4] +
push 10h  +
mov [ecx+4] eax +
push [ebp+var_4]  +
push offset loc_1009B23  +
call ds:QueueUserWorkItem  +
test eax eax +
jnz loc_100A265  +
call ds:GetLastError  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_100A298  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100A28F  +
cmp byte ptr [eax+19h] 3 +
jb loc_100A28F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A28F  +
push [ebp+var_8]  +
push offset dword_1001C50  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10057DF  +
mov esi [esi+0Ch] +
test esi esi +
jnz loc_100A221  +
jmp loc_100A2C5  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100A2C5  +
cmp byte ptr [eax+19h] 1 +
jb loc_100A2C5  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A2C5  +
push [ebp+arg_0]  +
push [ebp+var_8]  +
push offset dword_1001C50  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100582F  +
pop esi  +
push offset stru_1012620  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop edi  +
cmp eax ebx +
pop ebx  +
jz loc_100A2FD  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A2FD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A2FD  +
push [ebp+arg_0]  +
push offset dword_1001C50  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+arg_0] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx (offset loc_1001C73+1) +
cmp eax esi +
jz loc_100A348  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A348  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A348  +
push ebx  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_100A37E  +
cmp [ebp+arg_0] 0 +
jbe loc_100A37E  +
push [ebp+arg_0]  +
call sub_100EDF9  +
mov [edi] eax +
test eax eax +
jnz loc_100A39D  +
mov [ebp+var_4] 0Eh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100A3C3  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A3A2  +
push ebx  +
push 0Ch  +
jmp loc_100A392  +
mov [ebp+var_4] 57h +
cmp eax esi +
jz loc_100A3C3  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A3A2  +
push ebx  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100A3C3  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A3C3  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A3C3  +
push [ebp+var_4]  +
push ebx  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi (offset loc_1001C73+1) +
cmp eax esi +
jz loc_100A40B  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A40B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A40B  +
push edi  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp [ebp+arg_0] 0 +
jz loc_100A41E  +
push [ebp+arg_0]  +
call sub_100EE09  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100A43E  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A43E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A43E  +
push 0  +
push edi  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx [esi+0Ch] +
push edi  +
mov edi [edx+0Ch] +
lea ecx [eax+edi] +
cmp ecx eax +
mov ecx [esi+8] +
sbb eax eax +
mov [ebp+arg_0] ebx +
add ebx ecx +
neg eax  +
cmp ebx ecx +
sbb ecx ecx +
neg ecx  +
test eax eax +
jz loc_100A483  +
test ecx ecx +
jnz loc_100A487  +
xor eax eax +
jmp loc_100A49D  +
test ecx ecx +
jnz loc_100A49A  +
mov eax [esi+8] +
add eax [ebp+arg_0] +
mov ecx [edx+8] +
add ecx edi +
cmp ecx eax +
sbb eax eax +
neg eax  +
jmp loc_100A49D  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx eax +
push edi  +
cmp ecx eax +
sbb edi edi +
neg edi  +
call ds:GetTickCount  +
mov ecx [esi+8] +
test edi edi +
jz loc_100A4E4  +
cmp eax ecx +
ja loc_100A4F1  +
mov edx [esi+0Ch] +
add edx ecx +
cmp eax edx +
jbe loc_100A4F1  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp eax ecx +
jb loc_100A4DB  +
mov edx [esi+0Ch] +
add edx ecx +
cmp eax edx +
jnb loc_100A4DB  +
xor eax eax +
jmp loc_100A4DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx (offset loc_1001C82+2) +
cmp eax esi +
jz loc_100A551  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A533  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A533  +
push ebx  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100A551  +
cmp byte ptr [eax+19h] 3 +
jb loc_100A551  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A551  +
push ebx  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
mov edi [ebp+8] +
mov eax [edi] +
test eax eax +
jz loc_100A560  +
push dword ptr [edi+4]  +
call eax  +
push edi  +
call sub_100A3D2  +
mov eax AuthIdentity +
pop edi  +
cmp eax esi +
jz loc_100A58C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A58C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A58C  +
push 0  +
push ebx  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi offset stru_1012600 +
push edi  +
call ds:EnterCriticalSection  +
cmp dword_1012488 0 +
jz loc_100A5C0  +
mov eax [ebp+8] +
cmp eax dword_1012494 +
jz loc_100A623  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100A5E4  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A5E4  +
push (offset loc_1001C82+2)  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov dword_1012498 32h +
call sub_100A4A9  +
test eax eax +
jz loc_100A63B  +
mov eax [esi+10h] +
push 10h  +
push esi  +
push offset loc_100A4FA  +
mov dword_1012484 eax +
call ds:QueueUserWorkItem  +
test eax eax +
jz loc_100A6E4  +
mov esi dword_1012484 +
test esi esi +
jnz loc_100A5F1  +
cmp dword_1012498 esi +
jz loc_100A644  +
dec dword_1012498  +
cmp dword_1012498 0 +
jnz loc_100A5E4  +
push 64h  +
mov esi 7FFFFFFFh +
push esi  +
push dword_1012490  +
push dword_101248C  +
call ds:ChangeTimerQueueTimer  +
test eax eax +
jnz loc_100A6AE  +
call ds:GetLastError  +
test eax eax +
jz loc_100A5E4  +
mov ecx AuthIdentity +
cmp ecx offset AuthIdentity +
jz loc_100A5E4  +
cmp byte ptr [ecx+19h] 3 +
jb loc_100A5E4  +
test byte ptr [ecx+1Ch] 1 +
jz loc_100A5E4  +
push eax  +
push (offset loc_1001C82+2)  +
push 0Fh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
jmp loc_100A5E4  +
***
mov dword_1012080 esi +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100A5E4  +
cmp byte ptr [eax+19h] 3 +
jb loc_100A5E4  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A5E4  +
push (offset loc_1001C82+2)  +
push 10h  +
jmp loc_100A5D9  +
***
call ds:GetLastError  +
mov ecx AuthIdentity +
cmp ecx offset AuthIdentity +
jz loc_100A711  +
test byte ptr [ecx+1Ch] 1 +
jz loc_100A711  +
push eax  +
push (offset loc_1001C82+2)  +
push 0Eh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
mov dword_1012484 esi +
jmp loc_100A5E4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_100A75A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A75A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A75A  +
push (offset loc_1001C82+2)  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp dword_1012480 1 +
jz loc_100A783  +
push offset dword_1012480  +
push offset dword_101247C  +
push offset stru_1012600  +
call sub_100B282  +
mov [ebp+var_4] eax +
mov eax AuthIdentity +
xor esi esi +
jmp loc_100A788  +
xor esi esi +
mov [ebp+var_4] esi +
cmp [ebp+var_4] esi +
jnz loc_100A8F5  +
push ebx  +
push offset stru_1012600  +
call ds:EnterCriticalSection  +
mov ebx ds:GetLastError +
cmp dword_1012484 esi +
jnz loc_100A95D  +
cmp dword_1012488 esi +
jnz loc_100A95D  +
cmp dword_101248C esi +
jnz loc_100A95D  +
cmp dword_1012490 esi +
jnz loc_100A95D  +
call ds:CreateTimerQueue  +
mov dword_101248C eax +
cmp eax esi +
jnz loc_100A81F  +
call ebx  +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_100A81F  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100A886  +
cmp byte ptr [eax+19h] 1 +
jb loc_100A886  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A886  +
push [ebp+var_4]  +
push (offset loc_1001C82+2)  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100A886  +
push 10h  +
push 64h  +
mov esi 7FFFFFFFh +
push esi  +
push dword_1012494  +
push offset loc_100A599  +
push dword_101248C  +
push offset dword_1012490  +
call ds:CreateTimerQueueTimer  +
test eax eax +
jnz loc_100A921  +
call ebx  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100A921  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100A884  +
cmp byte ptr [eax+19h] 1 +
jb loc_100A884  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A884  +
push [ebp+var_4]  +
push (offset loc_1001C82+2)  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
xor esi esi +
cmp [ebp+var_4] esi +
jz loc_100A8E4  +
mov eax dword_101248C +
cmp eax esi +
jz loc_100A8CC  +
push 0FFFFFFFFh  +
push eax  +
call ds:DeleteTimerQueueEx  +
test eax eax +
jnz loc_100A8CC  +
call ebx  +
mov ecx AuthIdentity +
cmp ecx edi +
jz loc_100A8CC  +
cmp byte ptr [ecx+19h] 3 +
jb loc_100A8CC  +
test byte ptr [ecx+1Ch] 1 +
jz loc_100A8CC  +
push eax  +
push (offset loc_1001C82+2)  +
push 16h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
mov dword_1012484 esi +
mov dword_1012488 esi +
mov dword_101248C esi +
mov dword_1012490 esi +
push offset stru_1012600  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop ebx  +
cmp eax edi +
pop edi  +
pop esi  +
jz loc_100A91C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A91C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A91C  +
push [ebp+var_4]  +
push (offset loc_1001C82+2)  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
leave   +
retn   +
mov dword_1012080 esi +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100A94E  +
cmp byte ptr [eax+19h] 3 +
jb loc_100A94E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A94E  +
push (offset loc_1001C82+2)  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov dword_1012488 1 +
jmp loc_100A884  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100A88B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A88B  +
push (offset loc_1001C82+2)  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100A886  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_8] esi +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100A9D3  +
cmp byte ptr [eax+19h] 4 +
jb loc_100A9D3  +
test byte ptr [eax+1Ch] 1 +
jz loc_100A9D3  +
push (offset loc_1001C82+2)  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov edi offset stru_1012600 +
push edi  +
call ds:EnterCriticalSection  +
cmp dword_1012488 esi +
jnz loc_100AA49  +
mov [ebp+var_8] 139Fh +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100AA0F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AA0F  +
push (offset loc_1001C82+2)  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
call ds:LeaveCriticalSection  +
mov ecx AuthIdentity +
cmp ecx ebx +
jz loc_100AA41  +
cmp byte ptr [ecx+19h] 4 +
jb loc_100AA41  +
test byte ptr [ecx+1Ch] 1 +
jz loc_100AA41  +
push [ebp+var_8]  +
push (offset loc_1001C82+2)  +
push 1Eh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov ecx dword_1012490 +
xor eax eax +
inc dword_1012494  +
mov dword_1012488 esi +
mov esi dword_1012484 +
mov [ebp+var_C] ecx +
mov ecx dword_101248C +
mov dword_1012484 eax +
mov dword_1012490 eax +
mov [ebp+var_4] ecx +
mov dword_101248C eax +
cmp esi eax +
jz loc_100AA91  +
mov eax esi +
mov esi [esi+10h] +
push eax  +
call sub_100A3D2  +
test esi esi +
jnz loc_100AA82  +
push edi  +
call ds:LeaveCriticalSection  +
push 0  +
mov esi 7FFFFFFFh +
push esi  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call ds:ChangeTimerQueueTimer  +
mov edi ds:GetLastError +
test eax eax +
jnz loc_100AAE7  +
call edi  +
test eax eax +
jz loc_100AB14  +
mov ecx AuthIdentity +
cmp ecx ebx +
jz loc_100AB14  +
cmp byte ptr [ecx+19h] 3 +
jb loc_100AB14  +
test byte ptr [ecx+1Ch] 1 +
jz loc_100AB14  +
push eax  +
push (offset loc_1001C82+2)  +
push 1Ah  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
jmp loc_100AB14  +
mov dword_1012080 esi +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100AB14  +
cmp byte ptr [eax+19h] 3 +
jb loc_100AB14  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AB14  +
push (offset loc_1001C82+2)  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push 0FFFFFFFFh  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call ds:DeleteTimerQueueTimer  +
test eax eax +
jnz loc_100AB55  +
call edi  +
test eax eax +
jz loc_100AB55  +
mov ecx AuthIdentity +
cmp ecx ebx +
jz loc_100AB55  +
cmp byte ptr [ecx+19h] 3 +
jb loc_100AB55  +
test byte ptr [ecx+1Ch] 1 +
jz loc_100AB55  +
push eax  +
push (offset loc_1001C82+2)  +
push 1Ch  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
push 0FFFFFFFFh  +
push [ebp+var_4]  +
call ds:DeleteTimerQueueEx  +
test eax eax +
jnz loc_100AA16  +
call edi  +
test eax eax +
jz loc_100AA16  +
mov ecx AuthIdentity +
cmp ecx ebx +
jz loc_100AA41  +
cmp byte ptr [ecx+19h] 3 +
jb loc_100AA1C  +
test byte ptr [ecx+1Ch] 1 +
jz loc_100AA1C  +
push eax  +
push (offset loc_1001C82+2)  +
push 1Dh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
jmp loc_100AA16  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100ABEB  +
cmp byte ptr [eax+19h] 4 +
jb loc_100ABEB  +
test byte ptr [eax+1Ch] 1 +
jz loc_100ABEB  +
push (offset loc_1001C82+2)  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push offset stru_1012600  +
call ds:EnterCriticalSection  +
cmp dword_1012488 edi +
jnz loc_100AC33  +
mov [ebp+var_8] 5 +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100AD6F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AD6F  +
push (offset loc_1001C82+2)  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100AD6F  +
push esi  +
cmp dword_1012484 edi +
jnz loc_100ACD8  +
push 64h  +
pop esi  +
push esi  +
push esi  +
push dword_1012490  +
push dword_101248C  +
call ds:ChangeTimerQueueTimer  +
test eax eax +
jnz loc_100ACA3  +
call ds:GetLastError  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_100ACA3  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100AD6E  +
cmp byte ptr [eax+19h] 1 +
jb loc_100AD6E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AD6E  +
push [ebp+var_8]  +
push (offset loc_1001C82+2)  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100AD6E  +
cmp dword_1012080 esi +
jz loc_100ACD2  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100ACD2  +
cmp byte ptr [eax+19h] 3 +
jb loc_100ACD2  +
test byte ptr [eax+1Ch] 1 +
jz loc_100ACD2  +
push (offset loc_1001C82+2)  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov dword_1012080 esi +
lea eax [ebp+var_4] +
push eax  +
push 14h  +
call sub_100A309  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_100AD6E  +
mov eax [ebp+var_4] +
push 14h  +
pop ecx  +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100ACF4  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+0Ch] ecx +
call ds:GetTickCount  +
mov ecx [ebp+var_4] +
mov [ecx+8] eax +
mov esi dword_1012484 +
cmp esi edi +
jz loc_100AD41  +
mov edi [ebp+var_4] +
push esi  +
push edi  +
call sub_100A449  +
test eax eax +
jz loc_100AD4B  +
mov [edi+10h] esi +
mov eax [ebp+var_4] +
mov dword_1012484 eax +
jmp loc_100AD6E  +
cmp dword ptr [esi+10h] 0 +
jz loc_100AD6B  +
mov ebx [esi+10h] +
push ebx  +
push edi  +
call sub_100A449  +
test eax eax +
jnz loc_100ADAD  +
mov esi ebx +
cmp [esi+10h] eax +
jnz loc_100AD51  +
mov ebx offset AuthIdentity +
mov [esi+10h] edi +
pop esi  +
push offset stru_1012600  +
call ds:LeaveCriticalSection  +
mov eax AuthIdentity +
pop edi  +
cmp eax ebx +
pop ebx  +
jz loc_100ADA6  +
cmp byte ptr [eax+19h] 4 +
jb loc_100ADA6  +
test byte ptr [eax+1Ch] 1 +
jz loc_100ADA6  +
push [ebp+var_8]  +
push (offset loc_1001C82+2)  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_8] +
leave   +
retn 10h  +
mov eax ebx +
mov [edi+10h] eax +
mov eax [ebp+var_4] +
mov [esi+10h] eax +
mov ebx offset AuthIdentity +
jmp loc_100AD6E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_100AE06  +
cmp byte ptr [eax+19h] 4 +
jb loc_100AE06  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AE06  +
push (offset loc_1001C82+2)  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_100AE3D  +
mov [ebp+var_4] 57h +
cmp eax esi +
jz loc_100AF10  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AEEB  +
push (offset loc_1001C82+2)  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100AEE6  +
push ebx  +
mov ebx offset stru_1012600 +
push ebx  +
call ds:EnterCriticalSection  +
mov eax dword_1012484 +
test eax eax +
jnz loc_100AE83  +
mov [ebp+var_4] 21Dh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100AED2  +
cmp byte ptr [eax+19h] 3 +
jb loc_100AED2  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AED2  +
push (offset loc_1001C82+2)  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100AED2  +
cmp edi eax +
jnz loc_100AE9A  +
mov eax [eax+10h] +
mov dword_1012484 eax +
jmp loc_100AECB  +
mov ecx [eax+10h] +
cmp edi ecx +
jz loc_100AEC5  +
mov eax ecx +
cmp dword ptr [eax+10h] 0 +
jnz loc_100AE91  +
mov [ebp+var_4] 21Dh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100AED2  +
cmp byte ptr [eax+19h] 3 +
jb loc_100AED2  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AED2  +
push (offset loc_1001C82+2)  +
push 27h  +
jmp loc_100AE76  +
mov ecx [edi+10h] +
mov [eax+10h] ecx +
mov [ebp+var_8] 1 +
push ebx  +
call ds:LeaveCriticalSection  +
cmp [ebp+var_8] 0 +
pop ebx  +
jz loc_100AEE6  +
push edi  +
call sub_100A3D2  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100AF10  +
cmp byte ptr [eax+19h] 4 +
jb loc_100AF10  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AF10  +
push [ebp+var_4]  +
push (offset loc_1001C82+2)  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001C94 +
cmp eax esi +
jz loc_100AF53  +
cmp byte ptr [eax+19h] 4 +
jb loc_100AF53  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AF53  +
push edi  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push [ebp+Binding]  +
call ds:RpcBindingFree  +
mov ebx eax +
test ebx ebx +
jz loc_100AF80  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100AFA4  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AF85  +
push ebx  +
push edi  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100AFA4  +
cmp byte ptr [eax+19h] 4 +
jb loc_100AFA4  +
test byte ptr [eax+1Ch] 1 +
jz loc_100AFA4  +
push ebx  +
push edi  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
xor eax eax +
push 6  +
pop ecx  +
lea edi [ebp+SecurityQOS.Capabilities] +
mov [ebp+SecurityQOS.Version] eax +
mov [ebp+ObjUuid] eax +
mov [ebp+String] eax +
mov [ebp+ServerPrincName] eax +
mov [ebp+Binding] eax +
mov [ebp+var_14] eax +
stos   +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
mov esi offset dword_1001C94 +
cmp eax ebx +
jz loc_100B004  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B004  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B004  +
push esi  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+ObjUuid] +
push eax  +
push [ebp+arg_0]  +
call sub_100BF49  +
mov edi eax +
test edi edi +
jnz loc_100B210  +
lea eax [ebp+String] +
push eax  +
push offset Options  +
push edi  +
push edi  +
push offset Protseq  +
push [ebp+ObjUuid]  +
call ds:RpcStringBindingComposeW  +
mov edi eax +
test edi edi +
jz loc_100B06E  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100B210  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B210  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B210  +
push edi  +
push esi  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100B210  +
lea eax [ebp+Binding] +
push eax  +
push [ebp+String]  +
call ds:RpcBindingFromStringBindingW  +
mov edi eax +
test edi edi +
jz loc_100B0A8  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100B210  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B210  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B210  +
push edi  +
push esi  +
push 0Fh  +
jmp loc_100B05E  +
push [ebp+IfSpec]  +
push [ebp+Binding]  +
call ds:RpcEpResolveBinding  +
mov edi eax +
test edi edi +
jz loc_100B0E4  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100B210  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B210  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B210  +
push edi  +
push esi  +
push 10h  +
jmp loc_100B05E  +
push 1  +
push 0Bh  +
push [ebp+Binding]  +
call ds:RpcBindingSetOption  +
mov edi eax +
test edi edi +
jz loc_100B121  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100B210  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B210  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B210  +
push edi  +
push esi  +
push 11h  +
jmp loc_100B05E  +
lea eax [ebp+ServerPrincName] +
push eax  +
push 0Ah  +
push [ebp+Binding]  +
call ds:RpcMgmtInqServerPrincNameW  +
mov edi eax +
test edi edi +
jz loc_100B160  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100B210  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B210  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B210  +
push edi  +
push esi  +
push 12h  +
jmp loc_100B05E  +
lea eax [ebp+var_14] +
push eax  +
call sub_100B74E  +
mov edi eax +
test edi edi +
jnz loc_100B210  +
push 3  +
pop ecx  +
mov [ebp+SecurityQOS.Version] ecx +
mov [ebp+SecurityQOS.ImpersonationType] ecx +
mov ecx [ebp+var_14] +
mov [ebp+SecurityQOS.Capabilities] 11h +
mov [ebp+SecurityQOS.IdentityTracking] eax +
mov [ebp+var_18] ecx +
cmp dword_1012084 eax +
jz loc_100B1CE  +
lea ecx [ebp+SecurityQOS] +
push ecx  +
push eax  +
push eax  +
push 0Ah  +
push 6  +
push [ebp+ServerPrincName]  +
push [ebp+Binding]  +
call ds:RpcBindingSetAuthInfoExW  +
mov edi eax +
test edi edi +
jz loc_100B204  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100B210  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B210  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B210  +
push edi  +
push esi  +
push 13h  +
jmp loc_100B05E  +
push eax  +
push eax  +
push 0Ah  +
push 6  +
push [ebp+ServerPrincName]  +
push [ebp+Binding]  +
call ds:RpcBindingSetAuthInfoW  +
mov edi eax +
test edi edi +
jz loc_100B204  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100B210  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B210  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B210  +
push edi  +
push esi  +
push 14h  +
jmp loc_100B05E  +
mov eax [ebp+Binding] +
mov ecx [ebp+arg_8] +
and [ebp+Binding] 0 +
mov [ecx] eax +
cmp [ebp+String] 0 +
mov ebx ds:RpcStringFreeW +
jz loc_100B222  +
lea eax [ebp+String] +
push eax  +
call ebx  +
cmp [ebp+ServerPrincName] 0 +
jz loc_100B22E  +
lea eax [ebp+ServerPrincName] +
push eax  +
call ebx  +
cmp [ebp+Binding] 0 +
jz loc_100B23D  +
lea eax [ebp+Binding] +
push eax  +
call sub_100AF1E  +
push [ebp+ObjUuid]  +
call sub_100A3D2  +
push [ebp+var_14]  +
call sub_100A3D2  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100B274  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B274  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B274  +
push edi  +
push esi  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
call __SEH_prolog4  +
xor edi edi +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_100B2BC  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B2BC  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B2BC  +
push offset dword_1001D04  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+Target]  +
call ds:InterlockedExchange  +
test eax eax +
jz loc_100B2FF  +
mov edi 139Fh +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B3A9  +
test [eax+1Ch] bl +
jz loc_100B386  +
push offset dword_1001D04  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100B381  +
and [ebp+ms_exc.disabled] edi +
push [ebp+lpCriticalSection]  +
call ds:InitializeCriticalSection  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100B381  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov edi [ebp-1Ch] +
mov eax [ebp+10h] +
mov dword ptr [eax] 2 +
test edi edi +
jz loc_100B375  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_100B36C  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B36C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B36C  +
push edi  +
push offset dword_1001D04  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100B386  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov esi offset AuthIdentity +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B3A9  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B3A9  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B3A9  +
push edi  +
push offset dword_1001D04  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax edi +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_100B3E9  +
cmp word ptr [edx] 0 +
jnz loc_100B3CE  +
push 0Eh  +
jmp loc_100B3EB  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100B3D4  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_100B3EC  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_100B3FD  +
cmp word ptr [edx] 0 +
jnz loc_100B402  +
mov edx offset aNull +
jmp loc_100B402  +
mov edx offset aNull_0 +
push 0  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001D14 +
cmp eax esi +
jz loc_100B45A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B45A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B45A  +
push edi  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push [ebp+UuidVector]  +
push BindingVector  +
push [ebp+IfSpec]  +
call ds:RpcEpUnregister  +
test eax eax +
jz loc_100B48F  +
mov ecx AuthIdentity +
cmp ecx esi +
jz loc_100B48F  +
test byte ptr [ecx+1Ch] 1 +
jz loc_100B48F  +
push eax  +
push edi  +
push 19h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100F8F1  +
push 0  +
push 0  +
push [ebp+IfSpec]  +
call ds:RpcServerUnregisterIfEx  +
mov ebx eax +
test ebx ebx +
jz loc_100B4C6  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B4CB  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B4CB  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B4CB  +
push ebx  +
push edi  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
cmp BindingVector 0 +
jz loc_100B4EB  +
push offset BindingVector  +
call ds:RpcBindingVectorFree  +
and BindingVector 0 +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B50A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B50A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B50A  +
push ebx  +
push edi  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+nDestinationSidLength] esi +
mov [ebp+TokenInformation] esi +
mov [ebp+pDestinationSid] esi +
mov [ebp+hMem] esi +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_100B55D  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B55D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B55D  +
push offset dword_1001D14  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov ebx ds:GetTokenInformation +
lea eax [ebp+nDestinationSidLength] +
push eax  +
push esi  +
push esi  +
push 1  +
push [ebp+TokenHandle]  +
call ebx  +
mov esi ds:GetLastError +
call esi  +
mov [ebp+var_4] eax +
cmp eax 7Ah +
jnz loc_100B584  +
and [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jz loc_100B5C5  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100B6F6  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B6F6  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B6F6  +
push [ebp+var_4]  +
push offset dword_1001D14  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100B6F6  +
lea eax [ebp+TokenInformation] +
push eax  +
push [ebp+nDestinationSidLength]  +
call sub_100A309  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100B6F6  +
lea eax [ebp+nDestinationSidLength] +
push eax  +
push [ebp+nDestinationSidLength]  +
push [ebp+TokenInformation]  +
push 1  +
push [ebp+TokenHandle]  +
call ebx  +
test eax eax +
jnz loc_100B619  +
call esi  +
mov [ebp+var_4] eax +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100B6F6  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B6F6  +
push [ebp+var_4]  +
push offset dword_1001D14  +
push 1Eh  +
jmp loc_100B5B5  +
mov eax [ebp+TokenInformation] +
push dword ptr [eax]  +
call ds:IsValidSid  +
test eax eax +
jnz loc_100B65D  +
mov [ebp+var_4] 139Fh +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100B6F6  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B6F6  +
push offset dword_1001D14  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100B6F6  +
mov eax [ebp+TokenInformation] +
push dword ptr [eax]  +
call ds:GetLengthSid  +
lea ecx [ebp+pDestinationSid] +
push ecx  +
push eax  +
mov [ebp+nDestinationSidLength] eax +
call sub_100A309  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100B6F6  +
mov eax [ebp+TokenInformation] +
push dword ptr [eax]  +
push [ebp+pDestinationSid]  +
push [ebp+nDestinationSidLength]  +
call ds:CopySid  +
test eax eax +
jnz loc_100B6B4  +
call esi  +
mov [ebp+var_4] eax +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100B6F6  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B6F6  +
push [ebp+var_4]  +
push offset dword_1001D14  +
push 20h  +
jmp loc_100B5B5  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+pDestinationSid]  +
call ConvertSidToStringSidW  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100B6EA  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B6EA  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B6EA  +
push [ebp+hMem]  +
push offset dword_1001D14  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100B3B8  +
mov eax [ebp+pDestinationSid] +
mov ecx [ebp+arg_4] +
and [ebp+pDestinationSid] 0 +
mov [ecx] eax +
cmp [ebp+hMem] 0 +
jz loc_100B705  +
push [ebp+hMem]  +
call ds:LocalFree  +
push [ebp+pDestinationSid]  +
call sub_100A3D2  +
push [ebp+TokenInformation]  +
call sub_100A3D2  +
mov eax AuthIdentity +
cmp eax edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_100B742  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B742  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B742  +
push [ebp+var_4]  +
push offset dword_1001D14  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+TokenHandle] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001D14 +
cmp eax esi +
jz loc_100B788  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B788  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B788  +
push edi  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+TokenHandle] +
push eax  +
push 8  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_100B7C7  +
call ds:GetLastError  +
mov ebx eax +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B801  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B7E2  +
push ebx  +
push edi  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100B7DD  +
push [ebp+arg_0]  +
push [ebp+TokenHandle]  +
call sub_100B518  +
push [ebp+TokenHandle]  +
mov ebx eax +
call ds:CloseHandle  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B801  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B801  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B801  +
push ebx  +
push edi  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+TokenHandle] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001D14 +
cmp eax esi +
jz loc_100B849  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B849  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B849  +
push edi  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+TokenHandle] +
push eax  +
push 1  +
push 8  +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
test eax eax +
jnz loc_100B88A  +
call ds:GetLastError  +
mov ebx eax +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B8C4  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B8A5  +
push ebx  +
push edi  +
push 27h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100B8A0  +
push [ebp+arg_0]  +
push [ebp+TokenHandle]  +
call sub_100B518  +
push [ebp+TokenHandle]  +
mov ebx eax +
call ds:CloseHandle  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B8C4  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B8C4  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B8C4  +
push ebx  +
push edi  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+pSid2] ebx +
mov [ebp+pSid1] ebx +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_100B90F  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B90F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B90F  +
push offset dword_1001D14  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+pSid2] +
push eax  +
mov [edi] ebx +
call sub_100B74E  +
mov ebx eax +
test ebx ebx +
jnz loc_100B99A  +
push eax  +
call ds:RpcImpersonateClient  +
mov ebx eax +
test ebx ebx +
jz loc_100B950  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B99A  +
cmp byte ptr [eax+19h] 1 +
jb loc_100B99A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B99A  +
push ebx  +
push offset dword_1001D14  +
push 2Ah  +
jmp loc_100B98F  +
lea eax [ebp+pSid1] +
push eax  +
mov dword ptr [edi] 1 +
call sub_100B80F  +
mov ebx eax +
test ebx ebx +
jnz loc_100B99A  +
push [ebp+pSid2]  +
push [ebp+pSid1]  +
call ds:EqualSid  +
test eax eax +
jnz loc_100B99A  +
push 5  +
pop ebx  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100B99A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B99A  +
push ebx  +
push offset dword_1001D14  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push [ebp+pSid2]  +
call sub_100A3D2  +
push [ebp+pSid1]  +
call sub_100A3D2  +
mov eax AuthIdentity +
pop edi  +
cmp eax esi +
jz loc_100B9D3  +
cmp byte ptr [eax+19h] 4 +
jb loc_100B9D3  +
test byte ptr [eax+1Ch] 1 +
jz loc_100B9D3  +
push ebx  +
push offset dword_1001D14  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001D14 +
cmp eax esi +
jz loc_100BA1C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BA1C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BA1C  +
push edi  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp [ebp+arg_0] ebx +
jz loc_100BA50  +
call ds:RpcRevertToSelf  +
mov ebx eax +
test ebx ebx +
jz loc_100BA4B  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BA6F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BA50  +
push ebx  +
push edi  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BA6F  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BA6F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BA6F  +
push ebx  +
push edi  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+String] edi +
mov [ebp+Protseq] edi +
mov [ebp+AuthnLevel] edi +
mov [ebp+AuthnSvc] edi +
mov [ebp+Privs] edi +
mov [ebp+var_18] edi +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx offset dword_1001D14 +
cmp eax esi +
jz loc_100BAC7  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BAC7  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BAC7  +
push ebx  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+String] +
push eax  +
push [ebp+ClientBinding]  +
call ds:RpcBindingToStringBindingW  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_100BB12  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BC34  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BC34  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BC34  +
push [ebp+var_4]  +
push ebx  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100BC34  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+Protseq] +
push eax  +
push edi  +
push [ebp+String]  +
call ds:RpcStringBindingParseW  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_100BB53  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BC34  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BC34  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BC34  +
push [ebp+var_4]  +
push ebx  +
push 0Ch  +
jmp loc_100BB02  +
mov eax [ebp+Protseq] +
mov ecx offset Protseq +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100BB81  +
cmp dx di +
jz loc_100BB7D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100BB81  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_100BB5B  +
xor eax eax +
jmp loc_100BB86  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jz loc_100BBBA  +
push 5  +
pop ecx  +
mov [ebp+var_4] ecx +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BC34  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BC34  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BC34  +
push ecx  +
push ebx  +
push 0Dh  +
jmp loc_100BB02  +
push edi  +
lea eax [ebp+AuthnSvc] +
push eax  +
lea eax [ebp+AuthnLevel] +
push eax  +
push edi  +
lea eax [ebp+Privs] +
push eax  +
push [ebp+ClientBinding]  +
call ds:RpcBindingInqAuthClientW  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_100BBF8  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BC34  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BC34  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BC34  +
push [ebp+var_4]  +
push ebx  +
push 0Eh  +
jmp loc_100BB02  +
cmp [ebp+AuthnLevel] 6 +
jnz loc_100BC04  +
cmp [ebp+AuthnSvc] 0Ah +
jz loc_100BC28  +
push 5  +
pop ecx  +
mov [ebp+var_4] ecx +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BC34  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BC34  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BC34  +
push ecx  +
push ebx  +
push 0Fh  +
jmp loc_100BB02  +
lea eax [ebp+var_18] +
push eax  +
call sub_100B8D2  +
mov [ebp+var_4] eax +
push [ebp+var_18]  +
call sub_100B9E0  +
cmp [ebp+String] edi +
mov edi ds:RpcStringFreeW +
jz loc_100BC4D  +
lea eax [ebp+String] +
push eax  +
call edi  +
cmp [ebp+Protseq] 0 +
jz loc_100BC59  +
lea eax [ebp+Protseq] +
push eax  +
call edi  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BC7F  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BC7F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BC7F  +
push [ebp+var_4]  +
push ebx  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_C] ebx +
mov [ebp+var_1] bl +
mov [ebp+BindingVector] ebx +
mov eax AuthIdentity +
mov esi offset dword_1001D14 +
cmp eax offset AuthIdentity +
jz loc_100BCCF  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BCCF  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BCCF  +
push esi  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push ebx  +
push 0Ah  +
push offset Protseq  +
call ds:RpcServerUseProtseqW  +
mov edi eax +
cmp edi ebx +
jz loc_100BD1B  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100BE36  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BE36  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BE36  +
push edi  +
push esi  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100BE31  +
lea eax [ebp+BindingVector] +
push eax  +
call ds:RpcServerInqBindings  +
mov edi eax +
cmp edi ebx +
jz loc_100BD55  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100BE36  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BE36  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BE36  +
push edi  +
push esi  +
push 13h  +
jmp loc_100BD0B  +
push offset Annotation  +
push [ebp+UuidVector]  +
push [ebp+BindingVector]  +
push [ebp+IfSpec]  +
call ds:RpcEpRegisterW  +
mov edi eax +
cmp edi ebx +
jz loc_100BD9C  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100BE36  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BE36  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BE36  +
push edi  +
push esi  +
push 14h  +
jmp loc_100BD0B  +
cmp [ebp+arg_8] 1 +
mov [ebp+var_1] 1 +
jnz loc_100BDAF  +
push 29h  +
mov ecx 4D2h +
jmp loc_100BDB3  +
push 28h  +
xor ecx ecx +
pop eax  +
push offset IfCallback  +
push ecx  +
push eax  +
push ebx  +
push ebx  +
push [ebp+IfSpec]  +
call ds:RpcServerRegisterIfEx  +
mov edi eax +
cmp edi ebx +
jz loc_100BDED  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100BE36  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BE36  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BE36  +
push edi  +
push esi  +
push 15h  +
jmp loc_100BD0B  +
push ebx  +
push ebx  +
push 0Ah  +
push ebx  +
mov [ebp+var_C] 1 +
call ds:RpcServerRegisterAuthInfoW  +
mov edi eax +
cmp edi ebx +
jz loc_100BE26  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100BE36  +
cmp byte ptr [eax+19h] 1 +
jb loc_100BE36  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BE36  +
push edi  +
push esi  +
push 16h  +
jmp loc_100BD0B  +
mov eax [ebp+BindingVector] +
mov BindingVector eax +
mov [ebp+BindingVector] ebx +
mov eax AuthIdentity +
cmp edi ebx +
jz loc_100BE66  +
cmp [ebp+var_1] bl +
jz loc_100BE51  +
push ebx  +
push [ebp+BindingVector]  +
push [ebp+IfSpec]  +
call ds:RpcEpUnregister  +
mov eax AuthIdentity +
cmp [ebp+var_C] ebx +
jz loc_100BE66  +
push ebx  +
push ebx  +
push [ebp+IfSpec]  +
call ds:RpcServerUnregisterIfEx  +
mov eax AuthIdentity +
cmp [ebp+BindingVector] ebx +
jz loc_100BE7A  +
lea eax [ebp+BindingVector] +
push eax  +
call ds:RpcBindingVectorFree  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100BE9C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BE9C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BE9C  +
push edi  +
push esi  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_100BEDF  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BEDF  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BEDF  +
push offset dword_1001D44  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
cmp [ebp+arg_0] ebx +
jz loc_100BF0E  +
cmp [ebp+arg_4] ebx +
jz loc_100BF0E  +
mov edi [ebp+arg_8] +
push edi  +
push [ebp+arg_4]  +
call sub_100A309  +
mov ebx eax +
test ebx ebx +
jnz loc_100BF13  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [edi]  +
call memcpy  +
add esp 0Ch +
jmp loc_100BF13  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
mov eax AuthIdentity +
pop edi  +
cmp eax esi +
jz loc_100BF3C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BF3C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BF3C  +
push ebx  +
push offset dword_1001D44  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx offset dword_1001D44 +
cmp eax esi +
jz loc_100BF80  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BF80  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BF80  +
push ebx  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_100BF8E  +
mov eax [ebp+arg_4] +
and [eax] edi +
jmp loc_100BFB1  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100BF91  +
push [ebp+arg_4]  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push [ebp+arg_0]  +
call sub_100BEAA  +
mov edi eax +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100BFD5  +
cmp byte ptr [eax+19h] 4 +
jb loc_100BFD5  +
test byte ptr [eax+1Ch] 1 +
jz loc_100BFD5  +
push edi  +
push ebx  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100C01B  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C01B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C01B  +
push offset dword_1001D44  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_100C029  +
mov eax [ebp+arg_4] +
and [eax] esi +
jmp loc_100C061  +
push edi  +
mov edi [ebp+arg_4] +
push edi  +
push 24h  +
push esi  +
call sub_100BEAA  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100C056  +
mov ecx [edi] +
mov eax [esi+1Ch] +
add ecx 20h +
push ecx  +
push eax  +
push dword ptr [esi+20h]  +
call sub_100BEAA  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100C060  +
push dword ptr [edi]  +
call sub_100A3D2  +
and dword ptr [edi] 0 +
pop edi  +
mov eax AuthIdentity +
pop esi  +
cmp eax ebx +
pop ebx  +
jz loc_100C08D  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C08D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C08D  +
push [ebp+var_4]  +
push offset dword_1001D44  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100C0B4  +
push dword ptr [esi+20h]  +
call sub_100A3D2  +
push esi  +
call sub_100A3D2  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100C0E0  +
push dword ptr [esi+8]  +
call sub_100C099  +
push dword ptr [esi]  +
call sub_100A3D2  +
push esi  +
call sub_100A3D2  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100C122  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C122  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C122  +
push offset dword_1001D44  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_100C130  +
mov eax [ebp+arg_4] +
and [eax] esi +
jmp loc_100C167  +
push edi  +
mov edi [ebp+arg_4] +
push edi  +
push 8  +
push esi  +
call sub_100BEAA  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100C15C  +
mov ecx [edi] +
mov eax [esi] +
add ecx 4 +
push ecx  +
push eax  +
push dword ptr [esi+4]  +
call sub_100BEAA  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100C166  +
push dword ptr [edi]  +
call sub_100A3D2  +
and dword ptr [edi] 0 +
pop edi  +
mov eax AuthIdentity +
pop esi  +
cmp eax ebx +
pop ebx  +
jz loc_100C193  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C193  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C193  +
push [ebp+var_4]  +
push offset dword_1001D44  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001D44 +
cmp eax esi +
jz loc_100C1D8  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C1D8  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C1D8  +
push edi  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100C1F0  +
mov ecx [ecx] +
test ecx ecx +
jz loc_100C1F0  +
push ecx  +
call sub_100A3D2  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100C210  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C210  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C210  +
push 0  +
push edi  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1001D44 +
cmp eax esi +
jz loc_100C254  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C254  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C254  +
push edi  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100C26C  +
mov ecx [ecx] +
test ecx ecx +
jz loc_100C26C  +
push ecx  +
call sub_100A3D2  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100C28C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C28C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C28C  +
push 0  +
push edi  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100C2CB  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C2CB  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C2CB  +
push offset dword_1001D44  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp [edi+4] ebx +
jz loc_100C30B  +
cmp [edi] ebx +
jbe loc_100C2FE  +
mov [ebp+arg_0] ebx +
push esi  +
mov esi [edi+4] +
add esi [ebp+arg_0] +
push esi  +
call sub_100C19F  +
add esi 4 +
push esi  +
call sub_100C21B  +
add [ebp+arg_0] 0Ch +
inc ebx  +
cmp ebx [edi] +
jb loc_100C2DF  +
pop esi  +
push dword ptr [edi+4]  +
call sub_100A3D2  +
mov eax AuthIdentity +
pop edi  +
pop ebx  +
cmp eax offset AuthIdentity +
jz loc_100C334  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C334  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C334  +
push 0  +
push offset dword_1001D44  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov ebx offset dword_1001D44 +
cmp eax esi +
jz loc_100C376  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C376  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C376  +
push ebx  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
stos   +
mov eax [ebp+arg_0] +
pop edi  +
test eax eax +
jz loc_100C392  +
push [ebp+arg_4]  +
push dword ptr [eax]  +
call sub_100BF49  +
mov [ebp+var_4] eax +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100C3B8  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C3B8  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C3B8  +
push [ebp+var_4]  +
push ebx  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100C3FE  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C3FE  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C3FE  +
push offset dword_1001D44  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
stos   +
stos   +
pop edi  +
test esi esi +
jz loc_100C428  +
push [ebp+arg_4]  +
push dword ptr [esi]  +
call sub_100BF49  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100C428  +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
mov [ecx+4] eax +
mov eax AuthIdentity +
pop esi  +
cmp eax ebx +
pop ebx  +
jz loc_100C454  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C454  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C454  +
push [ebp+var_4]  +
push offset dword_1001D44  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_100C499  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C499  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C499  +
push offset dword_1001D44  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov edi [ebp+arg_4] +
mov eax [ebp+arg_0] +
and dword ptr [edi] 0 +
test eax eax +
jz loc_100C537  +
mov ecx [eax] +
test ecx ecx +
jz loc_100C537  +
imul ecx ecx +
xor edx edx +
push 24h  +
mov eax ecx +
pop ebx  +
div  ebx +
mov edx [ebp+arg_0] +
cmp eax [edx] +
jz loc_100C4F5  +
mov [ebp+var_4] 216h +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100C561  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C53C  +
push offset dword_1001D44  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100C537  +
lea ebx [ecx+4] +
cmp ebx ecx +
jnb loc_100C51B  +
mov [ebp+var_4] 216h +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100C561  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C53C  +
push offset dword_1001D44  +
push 22h  +
jmp loc_100C4E8  +
push edi  +
push ebx  +
call sub_100A309  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100C537  +
push ebx  +
push [ebp+arg_0]  +
push dword ptr [edi]  +
call memcpy  +
add esp 0Ch +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100C561  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C561  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C561  +
push [ebp+var_4]  +
push offset dword_1001D44  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100C5A3  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C5A3  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C5A3  +
push offset dword_1001D44  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100C61C  +
push esi  +
mov esi [eax] +
test esi esi +
jz loc_100C5EF  +
mov eax [esi] +
test eax eax +
jbe loc_100C5DA  +
push edi  +
xor edi edi +
mov [ebp+var_4] eax +
mov eax [esi+4] +
push dword ptr [edi+eax+8]  +
call sub_100A3D2  +
mov eax [esi+4] +
and dword ptr [edi+eax+8] 0 +
add edi 0Ch +
dec [ebp+var_4]  +
jnz loc_100C5BD  +
pop edi  +
push dword ptr [esi+4]  +
call sub_100A3D2  +
and dword ptr [esi+4] 0 +
push esi  +
call sub_100A3D2  +
mov eax [ebp+arg_0] +
and dword ptr [eax] 0 +
mov eax AuthIdentity +
pop esi  +
cmp eax ebx +
jz loc_100C61C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C61C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C61C  +
push 0  +
push offset dword_1001D44  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_100C65F  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C65F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C65F  +
push offset dword_1001D44  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_4] +
and [eax] ebx +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100C6C3  +
lea eax [ebp+var_4] +
push eax  +
push 0Ch  +
call sub_100A309  +
mov ebx eax +
test ebx ebx +
jnz loc_100C6C3  +
mov eax [ebp+var_4] +
push 0Ch  +
pop ecx  +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100C683  +
mov eax [esi+4] +
mov ecx [ebp+var_4] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
add eax 8 +
push eax  +
push dword ptr [esi+8]  +
call sub_100BFE3  +
mov ebx eax +
test ebx ebx +
jnz loc_100C6C3  +
push [ebp+var_4]  +
push dword ptr [esi]  +
call sub_100C460  +
mov ebx eax +
test ebx ebx +
jnz loc_100C6C3  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
and [ebp+var_4] ebx +
mov [ecx] eax +
push [ebp+var_4]  +
call sub_100C0BE  +
mov eax AuthIdentity +
pop esi  +
cmp eax edi +
jz loc_100C6F4  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C6F4  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C6F4  +
push ebx  +
push offset dword_1001D44  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100C734  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C734  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C734  +
push offset dword_1001D44  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_100C77A  +
push esi  +
mov esi [edi] +
lea eax [esi+4] +
push eax  +
call sub_100C570  +
push esi  +
call sub_100A3D2  +
and dword ptr [edi] 0 +
mov eax AuthIdentity +
pop esi  +
cmp eax ebx +
jz loc_100C77A  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C77A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C77A  +
push 0  +
push offset dword_1001D44  +
push 27h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100C7C1  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C7C1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C7C1  +
push offset dword_1001D44  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov edi [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [eax] ebx +
cmp edi ebx +
jz loc_100C81A  +
push esi  +
mov esi [edi] +
mov [ebp+var_C] esi +
cmp esi ebx +
jbe loc_100C7DE  +
cmp [edi+4] ebx +
jz loc_100C7E5  +
cmp esi ebx +
jnz loc_100C850  +
cmp [edi+4] ebx +
jz loc_100C850  +
mov [ebp+var_8] 57h +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100C810  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C810  +
push offset dword_1001D44  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+var_4] +
push eax  +
call sub_100C570  +
pop esi  +
mov eax AuthIdentity +
pop edi  +
pop ebx  +
cmp eax offset AuthIdentity +
jz loc_100C849  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C849  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C849  +
push [ebp+var_8]  +
push offset dword_1001D44  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_8] +
leave   +
retn 8  +
lea eax [ebp+var_4] +
push eax  +
push 8  +
call sub_100A309  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_100C810  +
mov eax [edi] +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov eax [ebp+var_4] +
mov [eax+4] ebx +
cmp [edi+4] ebx +
jz loc_100C914  +
mov eax [ebp+var_4] +
add eax 4 +
push eax  +
mov eax esi +
imul eax eax +
push eax  +
call sub_100A309  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_100C810  +
mov [ebp+arg_0] ebx +
cmp esi ebx +
jbe loc_100C914  +
xor esi esi +
mov eax [edi+4] +
mov ecx [ebp+var_4] +
mov eax [eax+esi+4] +
mov ecx [ecx+4] +
mov [ecx+esi+4] eax +
mov eax [edi+4] +
mov ecx [ebp+var_4] +
mov eax [esi+eax] +
mov ecx [ecx+4] +
mov [esi+ecx] eax +
mov eax [edi+4] +
cmp [eax+esi+4] ebx +
jbe loc_100C921  +
mov eax [ebp+var_4] +
mov eax [eax+4] +
lea eax [eax+esi+8] +
push eax  +
mov eax [edi+4] +
push dword ptr [eax+esi+4]  +
call sub_100A309  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_100C810  +
mov eax [ebp+var_4] +
mov eax [eax+4] +
mov ecx [edi+4] +
add eax esi +
push dword ptr [eax+4]  +
push dword ptr [ecx+esi+8]  +
push dword ptr [eax+8]  +
call memcpy  +
add esp 0Ch +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add esi 0Ch +
cmp eax [ebp+var_C] +
jb loc_100C89E  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_100C819  +
mov [ebp+var_8] 57h +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100C810  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C810  +
push offset dword_1001D44  +
push 2Ah  +
jmp loc_100C805  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
cmp eax edi +
jz loc_100C98C  +
cmp byte ptr [eax+19h] 4 +
jb loc_100C98C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100C98C  +
push offset dword_1001D44  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [ebp+arg_4] +
and [eax] ebx +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100C9DF  +
lea eax [ebp+var_4] +
push eax  +
push 8  +
call sub_100A309  +
mov ebx eax +
test ebx ebx +
jnz loc_100C9D0  +
mov eax [esi] +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov eax [ebp+var_4] +
add eax 4 +
push eax  +
push dword ptr [esi+4]  +
call sub_100C785  +
mov ebx eax +
test ebx ebx +
jnz loc_100C9D0  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_100C9DF  +
cmp [ebp+var_4] 0 +
jz loc_100C9DF  +
lea eax [ebp+var_4] +
push eax  +
call sub_100C701  +
mov eax AuthIdentity +
pop esi  +
cmp eax edi +
jz loc_100CA08  +
cmp byte ptr [eax+19h] 4 +
jb loc_100CA08  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CA08  +
push ebx  +
push offset dword_1001D44  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset pFormat  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset word_1002556  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset byte_1002590  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_10025D0  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset word_10025FE  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_100262C  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_100266C  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset byte_10026AC  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset word_10026E6  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_1002720  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset word_100274E  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset word_1002776  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset word_10027AA  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset word_10027D2  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset word_10027FA  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_18] +
push eax  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 30h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1002A48 +
cmp eax esi +
jz loc_100CD05  +
cmp byte ptr [eax+19h] 4 +
jb loc_100CD05  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CD05  +
push edi  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
call sub_100EE19  +
mov ebx eax +
test ebx ebx +
jnz loc_100CD1A  +
mov dword_10124A4 1 +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100CD3E  +
cmp byte ptr [eax+19h] 4 +
jb loc_100CD3E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CD3E  +
push ebx  +
push edi  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1002A48 +
cmp eax esi +
jz loc_100CD7F  +
cmp byte ptr [eax+19h] 4 +
jb loc_100CD7F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CD7F  +
push edi  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp dword_10124A4 0 +
jz loc_100CD92  +
call sub_100EE46  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100CDB2  +
cmp byte ptr [eax+19h] 4 +
jb loc_100CDB2  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CDB2  +
push 0  +
push edi  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax AuthIdentity +
mov edi offset AuthIdentity +
mov ebx offset dword_1002A48 +
cmp eax edi +
jz loc_100CDF0  +
cmp byte ptr [eax+19h] 4 +
jb loc_100CDF0  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CDF0  +
push ebx  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push 3  +
push esi  +
push 1  +
push esi  +
push [ebp+arg_0]  +
call sub_100F7BA  +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_100CE28  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100CE62  +
cmp byte ptr [eax+19h] 1 +
jb loc_100CE62  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CE62  +
push [ebp+var_4]  +
push ebx  +
push 12h  +
jmp loc_100CE57  +
push 8  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100F132  +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_100CE62  +
mov eax AuthIdentity +
cmp eax edi +
jz loc_100CE62  +
cmp byte ptr [eax+19h] 1 +
jb loc_100CE62  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CE62  +
push [ebp+var_4]  +
push ebx  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
mov edi offset dword_1002A48 +
cmp eax esi +
jz loc_100CEAD  +
cmp byte ptr [eax+19h] 4 +
jb loc_100CEAD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CEAD  +
push edi  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax AuthIdentity +
cmp [ebp+arg_0] ebx +
jz loc_100CEE3  +
push [ebp+arg_0]  +
call sub_100F4C6  +
mov ebx eax +
test ebx ebx +
jz loc_100CEDE  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100CF02  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CEE3  +
push ebx  +
push edi  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100CF02  +
cmp byte ptr [eax+19h] 4 +
jb loc_100CF02  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CF02  +
push ebx  +
push edi  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
mov ebx offset aSetethertypeha +
push ebx  +
push 4  +
mov [ebp-8] esi +
mov [ebp-4] esi +
call sub_1005EBD  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push esi  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_100CFC1  +
cmp [ebp-4] esi +
jnz loc_100CF75  +
push 15h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100CFC1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CFC1  +
push offset dword_1002A48  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100CFC1  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
push 1  +
push esi  +
push dword ptr [ebp-4]  +
call sub_100F7BA  +
mov edi eax +
cmp edi esi +
jz loc_100CFC1  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100CFC1  +
cmp byte ptr [eax+19h] 1 +
jb loc_100CFC1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100CFC1  +
push edi  +
push offset dword_1002A48  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
push esi  +
push edi  +
push ebx  +
push 6  +
call sub_1005EBD  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov esi offset aSendpacketcomp +
push esi  +
push 9  +
mov [ebp-0Ch] edi +
mov [ebp-4] edi +
mov [ebp-8] edi +
call sub_1005EBD  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
call sub_10058E1  +
cmp [ebp-4] edi +
jnz loc_100D023  +
mov dword ptr [ebp-0Ch] 5 +
jmp loc_100D076  +
cmp [ebp+8] edi +
jz loc_100D04F  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D04F  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D04F  +
push dword ptr [ebp+8]  +
push offset dword_1002A48  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+10h] +
push ebx  +
mov ebx [eax+20h] +
push edi  +
push edi  +
push esi  +
push edi  +
call sub_1005EBD  +
mov eax [ebp-8] +
cmp [eax+34h] edi +
jz loc_100D06B  +
push ebx  +
call dword ptr [eax+34h]  +
push edi  +
push edi  +
push esi  +
push 1  +
call sub_1005EBD  +
pop ebx  +
lea eax [ebp-4] +
push eax  +
call sub_10059C1  +
push edi  +
push dword ptr [ebp-0Ch]  +
push esi  +
push 0Ah  +
call sub_1005EBD  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov ebx offset aNicspecificext +
push ebx  +
push 4  +
mov [ebp-8] edi +
mov [ebp-4] edi +
call sub_1005EBD  +
cmp [ebp+0Ch] edi +
jz loc_100D15B  +
cmp [ebp+10h] edi +
jz loc_100D15B  +
cmp [ebp+14h] edi +
jz loc_100D15B  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push edi  +
push edi  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_100D182  +
cmp [ebp-4] edi +
jnz loc_100D113  +
push 15h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D182  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D182  +
push offset dword_1002A48  +
push 1Bh  +
jmp loc_100D177  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edi  +
push dword ptr [ebp-4]  +
call sub_100F732  +
mov esi eax +
cmp esi edi +
jz loc_100D182  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D182  +
cmp byte ptr [eax+19h] 1 +
jb loc_100D182  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D182  +
push esi  +
push offset dword_1002A48  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100D182  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D182  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D182  +
push offset dword_1002A48  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
push edi  +
push esi  +
push ebx  +
push 6  +
call sub_1005EBD  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov ebx offset aSendpacket +
push ebx  +
push 4  +
mov [ebp-8] edi +
mov [ebp-4] edi +
call sub_1005EBD  +
cmp [ebp+0Ch] edi +
jz loc_100D273  +
cmp [ebp+10h] edi +
jz loc_100D273  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push edi  +
push edi  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_100D29A  +
cmp [ebp-4] edi +
jnz loc_100D21F  +
push 15h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D29A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D29A  +
push offset dword_1002A48  +
push 1Eh  +
jmp loc_100D28F  +
push dword ptr [ebp+14h]  +
push offset loc_100CFE4  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-4]  +
call sub_100F82D  +
mov esi eax +
cmp esi 3E5h +
jz loc_100D29A  +
cmp esi edi +
jz loc_100D29A  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D29A  +
cmp byte ptr [eax+19h] 1 +
jb loc_100D29A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D29A  +
push esi  +
push offset dword_1002A48  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100D29A  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D29A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D29A  +
push offset dword_1002A48  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
push edi  +
push esi  +
push ebx  +
push 6  +
call sub_1005EBD  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
mov [ebp-1Ch] esi +
push esi  +
lea edi [ebp-18h] +
stos   +
push esi  +
stos   +
push offset aSetauthalgorit  +
xor eax eax +
mov [ebp-10h] esi +
lea edi [ebp-0Ch] +
push 4  +
mov [ebp-8] esi +
mov [ebp-4] esi +
stos   +
call sub_1005EBD  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push esi  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_100D38E  +
cmp [ebp-4] esi +
jnz loc_100D33A  +
push 15h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D38E  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D38E  +
push offset dword_1002A48  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100D38E  +
mov eax [ebp+0Ch] +
push ebx  +
mov [ebp-18h] eax +
lea eax [ebp-1Ch] +
push esi  +
mov [ebp-0Ch] eax +
lea eax [ebp-10h] +
push eax  +
push esi  +
push dword ptr [ebp-4]  +
xor ebx ebx +
inc ebx  +
mov [ebp-14h] ebx +
mov [ebp-10h] ebx +
call sub_100F5D4  +
mov edi eax +
cmp edi esi +
jz loc_100D38D  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D38D  +
cmp [eax+19h] bl +
jb loc_100D38D  +
test [eax+1Ch] bl +
jz loc_100D38D  +
push edi  +
push offset dword_1002A48  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop ebx  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
push esi  +
push edi  +
push offset aSetauthalgorit  +
push 6  +
call sub_1005EBD  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
mov [ebp-1Ch] esi +
push esi  +
lea edi [ebp-18h] +
stos   +
push esi  +
stos   +
push offset aSetunicastciph  +
xor eax eax +
mov [ebp-10h] esi +
lea edi [ebp-0Ch] +
push 4  +
mov [ebp-8] esi +
mov [ebp-4] esi +
stos   +
call sub_1005EBD  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push esi  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_100D485  +
cmp [ebp-4] esi +
jnz loc_100D431  +
push 15h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D485  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D485  +
push offset dword_1002A48  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100D485  +
mov eax [ebp+0Ch] +
push ebx  +
mov [ebp-18h] eax +
lea eax [ebp-1Ch] +
push esi  +
mov [ebp-0Ch] eax +
lea eax [ebp-10h] +
push eax  +
push esi  +
push dword ptr [ebp-4]  +
xor ebx ebx +
inc ebx  +
mov [ebp-14h] ebx +
mov [ebp-10h] ebx +
call sub_100F6A2  +
mov edi eax +
cmp edi esi +
jz loc_100D484  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D484  +
cmp [eax+19h] bl +
jb loc_100D484  +
test [eax+1Ch] bl +
jz loc_100D484  +
push edi  +
push offset dword_1002A48  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop ebx  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
push esi  +
push edi  +
push offset aSetunicastciph  +
push 6  +
call sub_1005EBD  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
mov [ebp-1Ch] esi +
push esi  +
lea edi [ebp-18h] +
stos   +
push esi  +
stos   +
push offset aSetmulticastci  +
xor eax eax +
mov [ebp-10h] esi +
lea edi [ebp-0Ch] +
push 4  +
mov [ebp-8] esi +
mov [ebp-4] esi +
stos   +
call sub_1005EBD  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push esi  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_100D57C  +
cmp [ebp-4] esi +
jnz loc_100D528  +
push 15h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D57C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D57C  +
push offset dword_1002A48  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100D57C  +
mov eax [ebp+0Ch] +
push ebx  +
mov [ebp-18h] eax +
lea eax [ebp-1Ch] +
push esi  +
mov [ebp-0Ch] eax +
lea eax [ebp-10h] +
push eax  +
push esi  +
push dword ptr [ebp-4]  +
xor ebx ebx +
inc ebx  +
mov [ebp-14h] ebx +
mov [ebp-10h] ebx +
call sub_100F6EA  +
mov edi eax +
cmp edi esi +
jz loc_100D57B  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D57B  +
cmp [eax+19h] bl +
jb loc_100D57B  +
test [eax+1Ch] bl +
jz loc_100D57B  +
push edi  +
push offset dword_1002A48  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop ebx  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
push esi  +
push edi  +
push offset aSetmulticastci  +
push 6  +
call sub_1005EBD  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_101206C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 6  +
xor ebx ebx +
pop ecx  +
push ebx  +
mov [ebp-28h] eax +
xor eax eax +
push ebx  +
mov [ebp-20h] ebx +
lea edi [ebp-1Ch] +
stos   +
push offset aSetdefaultkey  +
mov [ebp-34h] ebx +
lea edi [ebp-30h] +
push 4  +
mov [ebp-2Ch] ebx +
mov [ebp-24h] ebx +
stos   +
call sub_1005EBD  +
cmp esi ebx +
jnz loc_100D622  +
push 57h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D6CE  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D6CE  +
push offset dword_1002A48  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100D6CE  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push ebx  +
push ebx  +
push dword ptr [ebp-28h]  +
call sub_1002EE8  +
mov edi eax +
cmp edi ebx +
jnz loc_100D6CE  +
cmp [ebp-24h] ebx +
jnz loc_100D661  +
push 15h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D6CE  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D6CE  +
push offset dword_1002A48  +
push 27h  +
jmp loc_100D612  +
***
lea eax [esi+16h] +
mov [ebp-30h] eax +
movzx eax word ptr [esi+14h] +
mov [ebp-34h] eax +
movzx eax byte ptr [esi+13h] +
mov [ebp-20h] eax +
mov eax [esi+8] +
mov [ebp-18h] eax +
lea eax [ebp-34h] +
mov [ebp-8] eax +
mov eax [esi+4] +
inc eax  +
push ebx  +
mov [ebp-1Ch] eax +
lea eax [ebp-20h] +
push eax  +
push ebx  +
push dword ptr [ebp-24h]  +
mov dword ptr [ebp-0Ch] 1 +
call sub_100F61C  +
mov edi eax +
cmp edi ebx +
jz loc_100D6CE  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D6CE  +
cmp byte ptr [eax+19h] 1 +
jb loc_100D6CE  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D6CE  +
push edi  +
push offset dword_1002A48  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-28h]  +
call sub_1002FD5  +
push ebx  +
push edi  +
push offset aSetdefaultkey  +
push 6  +
call sub_1005EBD  +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008F22  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov ebx offset aSetdefaultkeyi +
push ebx  +
push 4  +
mov [ebp-8] edi +
mov [ebp-4] edi +
call sub_1005EBD  +
cmp dword ptr [ebp+0Ch] 3 +
jbe loc_100D757  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D7D1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D7D1  +
push offset dword_1002A48  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100D7D1  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push edi  +
push edi  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov esi eax +
cmp esi edi +
jnz loc_100D7D1  +
cmp [ebp-4] edi +
jnz loc_100D792  +
push 15h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D7D1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D7D1  +
push offset dword_1002A48  +
push 2Ah  +
jmp loc_100D74A  +
***
push edi  +
lea eax [ebp+0Ch] +
push eax  +
push edi  +
push dword ptr [ebp-4]  +
call sub_100F544  +
mov esi eax +
cmp esi edi +
jz loc_100D7D1  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D7D1  +
cmp byte ptr [eax+19h] 1 +
jb loc_100D7D1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D7D1  +
push esi  +
push offset dword_1002A48  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
push edi  +
push esi  +
push ebx  +
push 6  +
call sub_1005EBD  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
mov ebx offset aSetexcludeunen +
push ebx  +
push 4  +
mov [ebp-8] esi +
mov [ebp-4] esi +
call sub_1005EBD  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push esi  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_100D89A  +
cmp [ebp-4] esi +
jnz loc_100D85B  +
push 15h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D89A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D89A  +
push offset dword_1002A48  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100D89A  +
push esi  +
lea eax [ebp+0Ch] +
push eax  +
push esi  +
push dword ptr [ebp-4]  +
call sub_100F58C  +
mov edi eax +
cmp edi esi +
jz loc_100D89A  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D89A  +
cmp byte ptr [eax+19h] 1 +
jb loc_100D89A  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D89A  +
push edi  +
push offset dword_1002A48  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call sub_1002FD5  +
push esi  +
push edi  +
push ebx  +
push 6  +
call sub_1005EBD  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_101206C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
push 7  +
xor esi esi +
pop ecx  +
push esi  +
mov [ebp-2Ch] eax +
xor eax eax +
push esi  +
mov [ebp-24h] esi +
lea edi [ebp-20h] +
stos   +
push offset aSetkeymappingk  +
mov [ebp-38h] esi +
lea edi [ebp-34h] +
push 4  +
mov [ebp-30h] esi +
mov [ebp-28h] esi +
stos   +
call sub_1005EBD  +
cmp ebx esi +
jnz loc_100D93D  +
push 57h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D9FC  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D9FC  +
push offset dword_1002A48  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100D9FC  +
lea eax [ebp-30h] +
push eax  +
lea eax [ebp-28h] +
push eax  +
push esi  +
push esi  +
push dword ptr [ebp-2Ch]  +
call sub_1002EE8  +
mov edi eax +
cmp edi esi +
jnz loc_100D9FC  +
cmp [ebp-28h] esi +
jnz loc_100D984  +
push 15h  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D9FC  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D9FC  +
push offset dword_1002A48  +
push 2Fh  +
jmp loc_100D92D  +
***
lea eax [ebx+14h] +
mov [ebp-34h] eax +
movzx eax word ptr [ebx+12h] +
mov [ebp-38h] eax +
mov eax [ebx+8] +
mov esi ebx +
lea edi [ebp-20h] +
movs   +
movs   +
mov [ebp-18h] eax +
movzx eax byte ptr [ebx+11h] +
mov [ebp-10h] eax +
lea eax [ebp-38h] +
mov [ebp-8] eax +
mov eax [ebx+0Ch] +
push 0  +
mov [ebp-14h] eax +
lea eax [ebp-24h] +
push eax  +
push 0  +
push dword ptr [ebp-28h]  +
mov dword ptr [ebp-0Ch] 1 +
call sub_100F664  +
mov edi eax +
test edi edi +
jz loc_100D9FA  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100D9FA  +
cmp byte ptr [eax+19h] 1 +
jb loc_100D9FA  +
test byte ptr [eax+1Ch] 1 +
jz loc_100D9FA  +
push edi  +
push offset dword_1002A48  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
xor esi esi +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-2Ch]  +
call sub_1002FD5  +
push esi  +
push edi  +
push offset aSetkeymappingk  +
push 6  +
call sub_1005EBD  +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008F22  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
push offset aDriverupcall  +
push 9  +
mov [ebp+var_8] esi +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
mov [ebp+var_10] esi +
mov [ebp+var_4] esi +
call sub_1005EBD  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_10058E1  +
cmp [ebp+var_10] esi +
jnz loc_100DA70  +
push 5  +
pop edi  +
jmp loc_100DFAE  +
mov esi [ebp+arg_4] +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
push 0  +
push [ebp+arg_0]  +
lea ebx [esi+8] +
call sub_1002EE8  +
mov edi eax +
test edi edi +
jnz loc_100DFAD  +
mov ecx [esi] +
cmp ecx 8 +
ja loc_100DF85  +
jmp ds:off_100DFD9[ecx*4]  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DAD1  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DAD1  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DAD1  +
push offset dword_1002A48  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor eax eax +
push eax  +
push eax  +
mov edi offset aAdapterreset +
push edi  +
push eax  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+10h] 0 +
jz loc_100DAF2  +
push [ebp+var_8]  +
call dword ptr [eax+10h]  +
jmp loc_100DAF5  +
push 78h  +
pop eax  +
push 0  +
push eax  +
push edi  +
push 2  +
call sub_1005EBD  +
push 0  +
push ebx  +
push dword ptr [esi+4]  +
push 3  +
push [ebp+arg_0]  +
call sub_1004EE2  +
jmp loc_100DC0F  +
mov ecx [esi+4] +
cmp ecx 6Ch +
jnb loc_100DB47  +
push 0Dh  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DFAD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DFAD  +
push ecx  +
push offset dword_1002A48  +
push 32h  +
jmp loc_100DFA2  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DB71  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DB71  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DB71  +
push offset dword_1002A48  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax [esi+4] +
lea ecx [ebp+var_C] +
push ecx  +
push ebx  +
push eax  +
push 1  +
push [ebp+arg_0]  +
lea esi [eax-14h] +
call sub_1004EE2  +
mov edi eax +
test edi edi +
jnz loc_100DFAD  +
push edi  +
push edi  +
push offset aPerformpostass  +
push edi  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp [eax+14h] edi +
jz loc_100DBB9  +
lea ecx [ebx+14h] +
push ecx  +
push esi  +
push ebx  +
push [ebp+var_C]  +
push [ebp+var_8]  +
call dword ptr [eax+14h]  +
mov edi eax +
jmp loc_100DBBC  +
push 78h  +
pop edi  +
push 0  +
push edi  +
push offset aPerformpostass  +
push 2  +
call sub_1005EBD  +
test edi edi +
jz loc_100DFAD  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DBFD  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DBFD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DBFD  +
push offset dword_1002A48  +
push 34h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
push edi  +
push 10001h  +
push ebx  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call sub_100477E  +
mov edi eax +
jmp loc_100DFAD  +
mov ecx [esi+4] +
cmp ecx 14h +
jnb loc_100DC48  +
push 0Dh  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DFAD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DFAD  +
push ecx  +
push offset dword_1002A48  +
push 35h  +
jmp loc_100DFA2  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DC72  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DC72  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DC72  +
push offset dword_1002A48  +
push 36h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor edi edi +
push edi  +
push ebx  +
push dword ptr [esi+4]  +
push 2  +
push [ebp+arg_0]  +
call sub_1004EE2  +
push edi  +
push edi  +
mov esi offset aStoppostassoci +
push esi  +
push edi  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp [eax+18h] edi +
jz loc_100DCA7  +
push dword ptr [ebx+0Ch]  +
push ebx  +
push [ebp+var_8]  +
call dword ptr [eax+18h]  +
mov edi eax +
jmp loc_100DCAA  +
push 78h  +
pop edi  +
push 0  +
push edi  +
push esi  +
jmp loc_100DF7C  +
xor edi edi +
push edi  +
push edi  +
push offset aReceivepacket  +
push edi  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp [eax+30h] edi +
jz loc_100DCD8  +
push ebx  +
push dword ptr [esi+4]  +
push [ebp+var_8]  +
call dword ptr [eax+30h]  +
mov edi eax +
jmp loc_100DCDB  +
push 78h  +
pop edi  +
push 0  +
push edi  +
push offset aReceivepacket  +
jmp loc_100DF7C  +
mov ecx [esi+4] +
cmp ecx 0Ch +
jnb loc_100DD1A  +
push 0Dh  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DFAD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DFAD  +
push ecx  +
push offset dword_1002A48  +
push 37h  +
jmp loc_100DFA2  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DD44  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DD44  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DD44  +
push offset dword_1002A48  +
push 38h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor edi edi +
push edi  +
push edi  +
mov ebx offset aReceiveindicat +
push ebx  +
push edi  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp [eax+2Ch] edi +
jz loc_100DF75  +
lea ecx [esi+8] +
push ecx  +
push dword ptr [esi+4]  +
push 1  +
jmp loc_100DF6B  +
mov ecx [esi+4] +
cmp ecx 14h +
jnb loc_100DDA0  +
push 0Dh  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DFAD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DFAD  +
push ecx  +
push offset dword_1002A48  +
push 39h  +
jmp loc_100DFA2  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DDCA  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DDCA  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DDCA  +
push offset dword_1002A48  +
push 3Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor edi edi +
push edi  +
push edi  +
mov ebx offset aReceiveindicat +
push ebx  +
push edi  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp [eax+2Ch] edi +
jz loc_100DF75  +
lea ecx [esi+8] +
push ecx  +
push dword ptr [esi+4]  +
push 2  +
jmp loc_100DF6B  +
mov ecx [esi+4] +
cmp ecx 0Ch +
jnb loc_100DE26  +
push 0Dh  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DFAD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DFAD  +
push ecx  +
push offset dword_1002A48  +
push 3Bh  +
jmp loc_100DFA2  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DE50  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DE50  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DE50  +
push offset dword_1002A48  +
push 3Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor edi edi +
push edi  +
push edi  +
mov ebx offset aReceiveindicat +
push ebx  +
push edi  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp [eax+2Ch] edi +
jz loc_100DF75  +
lea ecx [esi+8] +
push ecx  +
push dword ptr [esi+4]  +
push 3  +
jmp loc_100DF6B  +
mov ecx [esi+4] +
cmp ecx 0Ch +
jb loc_100DEE6  +
mov eax [ebx+8] +
cmp ecx eax +
jb loc_100DEE6  +
mov edx [ebx+4] +
add edx eax +
cmp ecx edx +
jb loc_100DEE6  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DEBC  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DEBC  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DEBC  +
push offset dword_1002A48  +
push 3Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor edi edi +
push edi  +
push edi  +
mov ebx offset aReceiveindicat +
push ebx  +
push edi  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp [eax+2Ch] edi +
jz loc_100DF75  +
lea ecx [esi+8] +
push ecx  +
push dword ptr [esi+4]  +
push 4  +
jmp loc_100DF6B  +
push 0Dh  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DFAD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DFAD  +
push dword ptr [ebx+4]  +
push dword ptr [ebx+8]  +
push ecx  +
push offset dword_1002A48  +
push 3Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CC9B  +
jmp loc_100DFAD  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DF4B  +
cmp byte ptr [eax+19h] 3 +
jb loc_100DF4B  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DF4B  +
push offset dword_1002A48  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor edi edi +
push edi  +
push edi  +
mov ebx offset aReceiveindicat +
push ebx  +
push edi  +
call sub_1005EBD  +
mov eax [ebp+var_4] +
cmp [eax+2Ch] edi +
jz loc_100DF75  +
lea ecx [esi+8] +
push ecx  +
push dword ptr [esi+4]  +
push edi  +
push [ebp+var_8]  +
call dword ptr [eax+2Ch]  +
mov edi eax +
jmp loc_100DF78  +
push 78h  +
pop edi  +
push 0  +
push edi  +
push ebx  +
push 2  +
call sub_1005EBD  +
jmp loc_100DFAD  +
push 0Bh  +
pop edi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100DFAD  +
test byte ptr [eax+1Ch] 1 +
jz loc_100DFAD  +
push ecx  +
push offset dword_1002A48  +
push 40h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop ebx  +
lea eax [ebp+var_10] +
push eax  +
call sub_10059C1  +
push [ebp+var_14]  +
push [ebp+arg_0]  +
call sub_1002FD5  +
push 0  +
push edi  +
push offset aDriverupcall  +
push 0Ah  +
call sub_1005EBD  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jz loc_100E021  +
mov ecx [ebp+arg_4] +
cmp ecx esi +
jz loc_100E021  +
mov eax [ebp+arg_8] +
cmp eax esi +
jz loc_100E021  +
mov [eax] ecx +
jmp loc_100E048  +
push 57h  +
pop esi  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100E048  +
test byte ptr [eax+1Ch] 1 +
jz loc_100E048  +
push offset dword_1002A48  +
push 41h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+hObject] edi +
mov eax AuthIdentity +
mov esi offset AuthIdentity +
cmp eax esi +
jz loc_100E096  +
cmp byte ptr [eax+19h] 4 +
jb loc_100E096  +
test byte ptr [eax+1Ch] 1 +
jz loc_100E096  +
push offset dword_1002A48  +
push 42h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push edi  +
push [ebp+arg_0]  +
call sub_1002EE8  +
mov ebx eax +
cmp ebx edi +
jnz loc_100E138  +
cmp [ebp+var_8] edi +
jnz loc_100E0DD  +
push 15h  +
pop ebx  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100E138  +
test byte ptr [eax+1Ch] 1 +
jz loc_100E138  +
push offset dword_1002A48  +
push 43h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
jmp loc_100E138  +
lea eax [ebp+hObject] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1003088  +
mov ebx eax +
cmp ebx edi +
jnz loc_100E138  +
mov eax [ebp+hObject] +
push edi  +
push edi  +
mov dword ptr [eax+10h] 1 +
push [ebp+hObject]  +
push edi  +
push [ebp+var_8]  +
call sub_100F779  +
mov ebx eax +
cmp ebx edi +
jz loc_100E138  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100E138  +
cmp byte ptr [eax+19h] 1 +
jb loc_100E138  +
test byte ptr [eax+1Ch] 1 +
jz loc_100E138  +
push ebx  +
push offset dword_1002A48  +
push 44h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
push [ebp+hObject]  +
call sub_100A3D2  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call sub_1002FD5  +
mov eax AuthIdentity +
cmp eax esi +
jz loc_100E173  +
cmp byte ptr [eax+19h] 4 +
jb loc_100E173  +
test byte ptr [eax+1Ch] 1 +
jz loc_100E173  +
push ebx  +
push offset dword_1002A48  +
push 45h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
xor edx edx +
push ebx  +
mov [ebp+var_4] edx +
mov [ebp+var_8] edx +
mov eax AuthIdentity +
mov ebx offset AuthIdentity +
cmp eax ebx +
jz loc_100E1BF  +
cmp byte ptr [eax+19h] 4 +
jb loc_100E1BF  +
test byte ptr [eax+1Ch] 1 +
jz loc_100E1BF  +
push offset dword_1002A48  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1002CE5  +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 4  +
pop ecx  +
mov edi offset unk_10124A8 +
xor eax eax +
cmps   +
pop edi  +
pop esi  +
jnz loc_100E1DB  +
mov eax [ebp+arg_8] +
mov [eax] edx +
jmp loc_100E237  +
lea eax [ebp+var_8] +
push eax  +
push edx  +
push [ebp+arg_0]  +
push edx  +
push edx  +
call sub_100F0AB  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100E21D  +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100E261  +
cmp byte ptr [eax+19h] 1 +
jb loc_100E23C  +
test byte ptr [eax+1Ch] 1 +
jz loc_100E23C  +
push [ebp+var_4]  +
push offset dword_1002A48  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
jmp loc_100E237  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
call sub_100CDBA  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100E237  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax AuthIdentity +
cmp eax ebx +
jz loc_100E261  +
cmp byte ptr [eax+19h] 4 +
jb loc_100E261  +
test byte ptr [eax+1Ch] 1 +
jz loc_100E261  +
push [ebp+var_4]  +
push offset dword_1002A48  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 0Ch  +
***
jmp ds:NdrAsyncServerCall  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+3Ch] +
push edi  +
test eax eax +
jz loc_100E2A9  +
push eax  +
call ds:CloseHandle  +
cmp dword ptr [esi+34h] 1 +
mov edi ds:DeleteCriticalSection +
jnz loc_100E2BF  +
lea eax [esi+1Ch] +
push eax  +
call edi  +
and dword ptr [esi+34h] 0 +
cmp dword ptr [esi+18h] 1 +
jnz loc_100E2CC  +
push esi  +
call edi  +
and dword ptr [esi+18h] 0 +
push 44h  +
push 0  +
push esi  +
call memset  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+lpCriticalSection] +
push edi  +
mov edi ds:EnterCriticalSection +
push esi  +
call edi  +
lea ebx [esi+1Ch] +
push ebx  +
call edi  +
mov eax [esi+38h] +
lea ecx [eax+1] +
mov [esi+38h] ecx +
test eax eax +
jnz loc_100E314  +
push dword ptr [esi+3Ch]  +
call ds:ResetEvent  +
mov edi ds:LeaveCriticalSection +
push ebx  +
call edi  +
push esi  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpCriticalSection] +
push esi  +
call ds:EnterCriticalSection  +
call ds:GetCurrentThreadId  +
push 0FFFFFFFFh  +
push dword ptr [esi+3Ch]  +
mov [esi+40h] eax +
call ds:WaitForSingleObject  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [esi+1Ch] +
push edi  +
call ds:EnterCriticalSection  +
dec dword ptr [esi+38h]  +
jnz loc_100E37C  +
push dword ptr [esi+3Ch]  +
call ds:SetEvent  +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpCriticalSection] +
and dword ptr [eax+40h] 0 +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
push 44h  +
push 0  +
mov edi [ebp+arg_0] +
push edi  +
call memset  +
add esp 0Ch +
and [ebp+ms_exc.disabled] 0 +
push edi  +
call ds:InitializeCriticalSection  +
xor esi esi +
inc esi  +
mov [edi+18h] esi +
push 0FFFFFFFEh  +
pop edi  +
mov [ebp+ms_exc.disabled] edi +
jmp loc_100E409  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov esi [ebp-1Ch] +
test esi esi +
jz loc_100E400  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_100E477  +
push 0FFFFFFFEh  +
pop edi  +
mov [ebp-4] edi +
xor esi esi +
inc esi  +
mov [ebp+ms_exc.disabled] esi +
mov ebx [ebp+arg_0] +
lea eax [ebx+1Ch] +
push eax  +
call ds:InitializeCriticalSection  +
mov [ebx+34h] esi +
mov [ebp+ms_exc.disabled] edi +
jmp loc_100E441  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-20h] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov esi [ebp-20h] +
test esi esi +
jnz loc_100E3F7  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
inc esi  +
xor eax eax +
lea edi [ebp+EventAttributes] +
stos   +
stos   +
stos   +
mov [ebp+EventAttributes.nLength] 0Ch +
xor edi edi +
mov [ebp+EventAttributes.lpSecurityDescriptor] edi +
mov [ebp+EventAttributes.bInheritHandle] esi +
push edi  +
push edi  +
push esi  +
lea eax [ebp+EventAttributes] +
push eax  +
call ds:CreateEventW  +
mov ecx [ebp+arg_0] +
mov [ecx+3Ch] eax +
cmp eax edi +
jnz loc_100E483  +
call ds:GetLastError  +
mov esi eax +
push [ebp+arg_0]  +
call sub_100E291  +
mov eax esi +
jmp loc_100E48C  +
push eax  +
call ds:SetEvent  +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
mov edi 0FFFFFFFh +
mov ecx edi +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_100E571  +
cmp dword ptr [eax] 7448324Ch +
jnz loc_100E571  +
mov dword ptr [eax] 7878324Ch +
mov eax [ebp+arg_0] +
mov edx [eax+40h] +
add edx [eax+34h] +
cmp [eax+28h] edx +
jbe loc_100E539  +
mov ecx [eax+50h] +
mov [eax+50h] edi +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
cmp [eax+28h] esi +
jbe loc_100E519  +
mov edx [eax+24h] +
add edx esi +
cmp dword ptr [edx] 0 +
jz loc_100E510  +
and dword ptr [edx] 0 +
mov eax [ebp+arg_0] +
mov eax [eax+24h] +
lea eax [eax+esi+10h] +
mov edx [eax] +
shl ecx 4 +
and edx 0Fh +
or edx ecx +
mov [eax] edx +
mov eax [ebp+arg_0] +
mov ecx ebx +
inc ebx  +
add esi 14h +
cmp ebx [eax+28h] +
jb loc_100E4E8  +
pop ebx  +
jmp loc_100E539  +
imul ecx ecx +
add ecx [eax+24h] +
mov esi ecx +
mov ecx [esi+8] +
test ecx ecx +
jz loc_100E533  +
push dword ptr [esi+4]  +
call ecx  +
mov eax [ebp+arg_0] +
mov ecx [esi+10h] +
shr ecx 4 +
cmp ecx edi +
jnz loc_100E51C  +
push 183h  +
mov esi offset aHtdestroyhandl +
push esi  +
add eax 24h +
push eax  +
call sub_100ED03  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call ds:DeleteCriticalSection  +
push 185h  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100ED03  +
xor eax eax +
jmp loc_100E574  +
push 57h  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+lpCriticalSection] +
mov eax [edi+1Ch] +
push 6  +
pop ebx  +
cmp esi eax +
jb loc_100E59E  +
sub esi eax +
shr esi 4 +
jmp loc_100E5A1  +
or esi 0FFFFFFFFh +
lea eax [edi+4] +
push eax  +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
cmp esi [edi+28h] +
jnb loc_100E601  +
mov eax [ebp+arg_4] +
imul esi esi +
add esi [edi+24h] +
cmp [esi] eax +
jnz loc_100E601  +
mov eax [esi+10h] +
mov ecx [ebp+arg_10] +
add ecx eax +
cmp ecx eax +
jb loc_100E5F3  +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_100E5D8  +
cmp edx [esi+0Ch] +
jnz loc_100E5F1  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_100E5E2  +
mov [esi+0Ch] eax +
mov eax [esi+4] +
mov [esi+10h] ecx +
mov ecx [ebp+arg_14] +
mov [ecx] eax +
xor ebx ebx +
jmp loc_100E601  +
cmp ecx eax +
sbb ebx ebx +
and ebx 0FFFFECB8h +
add ebx 139Fh +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov ecx [eax+2Ch] +
mov [eax+28h] edx +
cmp edx ecx +
jnz loc_100E628  +
and dword ptr [eax+3Ch] 0 +
jmp loc_100E646  +
push esi  +
mov esi ecx +
shl esi 3 +
cmp edx esi +
jb loc_100E642  +
mov esi ecx +
shl esi 4 +
cmp edx esi +
jnb loc_100E63F  +
add ecx ecx +
jmp loc_100E642  +
shl ecx 2 +
mov [eax+3Ch] ecx +
pop esi  +
sub edx [eax+3Ch] +
mov [eax+30h] edx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [esi+2Ch] +
mov ecx [esi+28h] +
or edx 0FFFFFFFFh +
sub edx eax +
sub esp 10h +
cmp ecx edx +
jb loc_100E66D  +
xor eax eax +
leave   +
retn   +
add eax ecx +
mov [ebp+var_10] eax +
cmp eax [esi+20h] +
ja loc_100E669  +
push ebx  +
imul eax eax +
push 2BEh  +
mov ebx offset aHtgrowtable +
push ebx  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_100EC30  +
cmp [ebp+var_4] 0 +
jnz loc_100E69D  +
xor eax eax +
jmp loc_100E73D  +
mov eax [esi+28h] +
imul eax eax +
push edi  +
push eax  +
lea edi [esi+24h] +
push dword ptr [edi]  +
push [ebp+var_4]  +
call memcpy  +
add esp 0Ch +
push 2C7h  +
push ebx  +
push edi  +
call sub_100ED03  +
mov eax [ebp+var_4] +
mov ecx [esi+28h] +
mov ebx [ebp+var_10] +
mov [edi] eax +
xor eax eax +
test ecx ecx +
setnz al  +
imul eax eax +
lea edx [eax+esi] +
mov [edx+38h] ecx +
mov eax [esi+28h] +
cmp eax ebx +
jnb loc_100E71B  +
mov edi eax +
imul edi edi +
lea ecx [eax+1] +
sub ebx eax +
shl ecx 4 +
mov [ebp+var_8] edi +
mov [ebp+var_C] ebx +
add eax ebx +
mov ebx [ebp+var_4] +
lea edi [edi+ebx+10h] +
mov ebx [edi] +
xor ebx ecx +
and ebx 0Fh +
xor ebx ecx +
mov [edi] ebx +
mov edi [ebp+var_8] +
add edi 14h +
add ecx 10h +
dec [ebp+var_C]  +
mov [ebp+var_8] edi +
jnz loc_100E6F8  +
mov ecx [ebp+var_4] +
dec eax  +
imul eax eax +
lea eax [eax+ecx+10h] +
or dword ptr [eax] 0FFFFFFF0h +
mov eax [esi+2Ch] +
mov [edx+34h] eax +
mov edx [ebp+var_10] +
mov eax esi +
call sub_100E618  +
xor eax eax +
inc eax  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [esi+30h] +
mov [ebp+var_8] ebx +
imul ebx ebx +
push 37Ah  +
push offset aHtshrinktable  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_100EC30  +
cmp [ebp+var_4] 0 +
jz loc_100E80C  +
push edi  +
push ebx  +
lea edi [esi+24h] +
push dword ptr [edi]  +
push [ebp+var_4]  +
call memcpy  +
mov edx [esi+30h] +
add esp 0Ch +
mov eax esi +
call sub_100E618  +
mov edx [esi+38h] +
and dword ptr [esi+40h] 0 +
and dword ptr [esi+34h] 0 +
mov eax 0FFFFFFFh +
mov [esi+44h] eax +
mov [esi+38h] eax +
cmp edx eax +
jz loc_100E7F6  +
cmp edx [ebp+var_8] +
jnb loc_100E7F6  +
cmp edx [esi+30h] +
mov edi [ebp+var_4] +
sbb eax eax +
inc eax  +
mov ecx edx +
imul eax eax +
imul ecx ecx +
lea edi [ecx+edi+10h] +
add eax esi +
mov ebx [eax+38h] +
mov [ebp+var_C] edi +
mov edi [edi] +
and edi 0Fh +
shl ebx 4 +
or edi ebx +
mov ebx [ebp+var_C] +
mov [ebx] edi +
inc dword ptr [eax+34h]  +
mov [eax+38h] edx +
lea edi [esi+24h] +
mov eax [edi] +
mov edx [eax+ecx+10h] +
shr edx 4 +
cmp edx 0FFFFFFFh +
jnz loc_100E7AB  +
push 3ADh  +
push offset aHtshrinktable  +
push edi  +
call sub_100ED03  +
mov eax [ebp+var_4] +
mov [edi] eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 0Eh +
test eax eax +
jnz loc_100E830  +
push 57h  +
pop eax  +
jmp locret_100E912  +
and dword ptr [eax] 0 +
or eax 0FFFFFFFFh +
sub eax [ebp+arg_0] +
push esi  +
shr eax 4 +
mov esi 0FFFFFFFh +
cmp eax esi +
jbe loc_100E848  +
mov eax esi +
mov ecx [ebp+arg_4] +
and eax 0FFFFFFE0h +
cmp ecx eax +
jbe loc_100E85A  +
push 57h  +
pop eax  +
jmp loc_100E911  +
push ebx  +
push edi  +
test ecx ecx +
jnz loc_100E864  +
mov edi eax +
jmp loc_100E86A  +
lea edi [ecx+1Fh] +
and edi 0FFFFFFE0h +
push 106h  +
mov ebx offset aHtcreatehandle +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
push 54h  +
call sub_100EC30  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_100E90C  +
push 80001000h  +
add eax 4 +
push eax  +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jz loc_100E8FD  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] 7448324Ch +
mov eax [ebp+arg_4] +
mov [eax+1Ch] ecx +
mov eax [ebp+arg_4] +
mov dword ptr [eax+2Ch] 20h +
mov eax [ebp+arg_4] +
mov [eax+20h] edi +
mov eax [ebp+arg_4] +
mov [eax+50h] esi +
mov eax [ebp+arg_4] +
mov [eax+44h] esi +
mov eax [ebp+arg_4] +
mov [eax+38h] esi +
mov esi [ebp+arg_4] +
call sub_100E652  +
test eax eax +
mov eax [ebp+arg_4] +
jz loc_100E8EC  +
mov ecx [ebp+arg_8] +
and [ebp+var_4] 0 +
mov [ecx] eax +
jmp loc_100E90C  +
add eax 4 +
push eax  +
call ds:DeleteCriticalSection  +
push 11Bh  +
jmp loc_100E902  +
push 120h  +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
call sub_100ED03  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpCriticalSection] +
push edi  +
lea edi [esi+4] +
push edi  +
mov [ebp+lpCriticalSection] edi +
call ds:EnterCriticalSection  +
xor eax eax +
cmp [esi+34h] eax +
jnz loc_100E956  +
cmp [esi+40h] eax +
jnz loc_100E953  +
call sub_100E652  +
test eax eax +
jnz loc_100E953  +
push edi  +
call ds:LeaveCriticalSection  +
push 8  +
pop eax  +
jmp loc_100E9BF  +
xor eax eax +
inc eax  +
imul eax eax +
add eax esi +
mov edi [eax+38h] +
imul edi edi +
add edi [esi+24h] +
push ebx  +
mov ecx [edi+10h] +
shr ecx 4 +
dec dword ptr [eax+34h]  +
mov [eax+38h] ecx +
mov eax [ebp+arg_4] +
mov ecx [edi+10h] +
mov [edi+4] eax +
mov eax [ebp+arg_8] +
mov [edi+0Ch] eax +
mov eax [ebp+arg_C] +
mov [edi+8] eax +
mov eax [ebp+arg_10] +
and ecx 0Fh +
mov [edi+10h] eax +
mov eax edi +
sub eax [esi+24h] +
push 14h  +
cdq   +
pop ebx  +
idiv  ebx +
mov edx [esi+1Ch] +
inc ecx  +
and ecx 0Fh +
shl eax 4 +
add eax ecx +
add eax edx +
mov [edi] eax +
jz loc_100E98F  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
mov eax [edi] +
mov ecx [ebp+arg_14] +
mov [ecx] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi eax +
call ds:GetCurrentThreadId  +
cmp dword ptr [esi+48h] 0 +
mov [ebp+var_8] eax +
jz loc_100E9ED  +
cmp [esi+4Ch] eax +
jz loc_100EAA0  +
push edi  +
mov edi [esi+50h] +
cmp edi 0FFFFFFFh +
jz loc_100EA9F  +
mov dword ptr [esi+48h] 1 +
mov [esi+4Ch] eax +
push ebx  +
mov ecx [esi+24h] +
imul edi edi +
add edi ecx +
mov eax [edi+10h] +
shr eax 4 +
mov [esi+50h] eax +
mov eax [edi+4] +
mov [ebp+var_C] eax +
mov eax [edi+8] +
mov [ebp+var_4] eax +
mov eax edi +
sub eax ecx +
push 14h  +
cdq   +
pop ecx  +
idiv  ecx +
mov ebx [edi+10h] +
cmp eax [esi+30h] +
sbb ecx ecx +
inc ecx  +
imul ecx ecx +
add ecx esi +
mov edx [ecx+38h] +
shl edx 4 +
and ebx 0Fh +
or edx ebx +
mov [edi+10h] edx +
inc dword ptr [ecx+34h]  +
cmp [ebp+var_4] 0 +
mov [ecx+38h] eax +
jz loc_100EA76  +
lea edi [esi+4] +
push edi  +
call ds:LeaveCriticalSection  +
push [ebp+var_C]  +
call [ebp+var_4]  +
push edi  +
call ds:EnterCriticalSection  +
mov eax [esi+4Ch] +
cmp eax [ebp+var_8] +
jnz loc_100EA81  +
mov edi [esi+50h] +
cmp edi 0FFFFFFFh +
jnz loc_100EA08  +
mov eax [ebp+var_8] +
pop ebx  +
cmp [esi+4Ch] eax +
jnz loc_100EA8E  +
and dword ptr [esi+48h] 0 +
mov eax [esi+3Ch] +
test eax eax +
jz loc_100EA9F  +
cmp eax [esi+40h] +
jnz loc_100EA9F  +
call sub_100E745  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+lpCriticalSection] +
mov eax [esi+1Ch] +
push edi  +
mov edi [ebp+arg_4] +
push 6  +
pop ebx  +
cmp edi eax +
jb loc_100EAC7  +
sub edi eax +
shr edi 4 +
jmp loc_100EACA  +
or edi 0FFFFFFFFh +
lea eax [esi+4] +
push eax  +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
cmp edi [esi+28h] +
jnb loc_100EB2F  +
mov eax edi +
imul eax eax +
add eax [esi+24h] +
mov ecx [eax] +
cmp ecx [ebp+arg_4] +
jnz loc_100EB2F  +
mov edx [eax+10h] +
cmp [ebp+arg_C] edx +
ja loc_100EB2C  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jz loc_100EAFF  +
cmp ebx [eax+0Ch] +
jnz loc_100EB2C  +
sub edx [ebp+arg_C] +
mov [eax+10h] edx +
jnz loc_100EB28  +
and dword ptr [eax] 0 +
and ecx 0Fh +
mov [eax+10h] ecx +
mov edx [esi+50h] +
and ecx 0Fh +
shl edx 4 +
or ecx edx +
mov [eax+10h] ecx +
mov eax esi +
mov [esi+50h] edi +
call sub_100E9CA  +
xor ebx ebx +
jmp loc_100EB2F  +
push 57h  +
pop ebx  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
test esi esi +
jz loc_100EB90  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_100EB84  +
sub eax edx +
inc eax  +
jmp loc_100EB93  +
push 5  +
pop eax  +
mov ecx esi +
test esi esi +
jnz loc_100EB9E  +
mov ecx offset aNull_1 +
push 0  +
push 4  +
lea edx [ebp+arg_18] +
push edx  +
push 4  +
lea edx [ebp+arg_14] +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 30h +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
test esi esi +
jz loc_100EBEC  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_100EBE0  +
sub eax edx +
inc eax  +
jmp loc_100EBEF  +
push 5  +
pop eax  +
mov ecx esi +
test esi esi +
jnz loc_100EBFA  +
mov ecx offset aNull_1 +
push 0  +
push 4  +
lea edx [ebp+arg_1C] +
push edx  +
push 4  +
lea edx [ebp+arg_18] +
push edx  +
push 4  +
lea edx [ebp+arg_14] +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 38h +
pop esi  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor ebx ebx +
call ds:GetProcessHeap  +
mov esi eax +
test esi esi +
jnz loc_100EC89  +
call ds:GetLastError  +
mov ebx eax +
test ebx ebx +
jz loc_100EC89  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100ECF0  +
test byte ptr [eax+1Ch] 4 +
jz loc_100ECF0  +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push offset dword_1002BEC  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100EB72  +
jmp loc_100ECF0  +
push [ebp+dwBytes]  +
push 8  +
push esi  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_100ECC2  +
push 0Eh  +
pop ebx  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100ECF0  +
test byte ptr [eax+1Ch] 4 +
jz loc_100ECF0  +
push [ebp+dwBytes]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push offset dword_1002BEC  +
push 0Bh  +
jmp loc_100EC7C  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100ECF0  +
test byte ptr [eax+1Ch] 2 +
jz loc_100ECF0  +
push [ebp+dwBytes]  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push offset dword_1002BEC  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100EBCE  +
mov eax [ebp+arg_4] +
mov [eax] edi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
mov [ebp+var_4] 1 +
jz loc_100EDEC  +
push ebx  +
push edi  +
call ds:GetProcessHeap  +
mov edi ds:GetLastError +
mov ebx eax +
test ebx ebx +
jnz loc_100ED72  +
and [ebp+var_4] 0 +
call edi  +
test eax eax +
jz loc_100ED72  +
mov ecx AuthIdentity +
cmp ecx offset AuthIdentity +
jz loc_100EDEA  +
test byte ptr [ecx+1Ch] 4 +
jz loc_100EDEA  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_1002BEC  +
push 0Dh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100EB72  +
jmp loc_100EDEA  +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100EDB5  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100EDB0  +
test byte ptr [eax+1Ch] 2 +
jz loc_100EDB0  +
push dword ptr [esi]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_1002BEC  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100EB72  +
and dword ptr [esi] 0 +
jmp loc_100EDEA  +
call edi  +
test eax eax +
jz loc_100EDEA  +
mov ecx AuthIdentity +
cmp ecx offset AuthIdentity +
jz loc_100EDEA  +
test byte ptr [ecx+1Ch] 4 +
jz loc_100EDEA  +
push eax  +
push dword ptr [esi]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset dword_1002BEC  +
push 0Fh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100EBCE  +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1010411  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_10104A2  +
***
and dword_10124C0 0 +
mov eax offset unk_10125A0 +
push eax  +
mov lpCriticalSection eax +
call sub_100E3AA  +
test eax eax +
jnz locret_100EE40  +
and dword_10124C8 eax +
and Addend eax +
retn   +
***
push lpCriticalSection  +
mov dword_10124C8 1 +
call sub_100E38E  +
cmp dword_10124C0 0 +
jz loc_100EE8A  +
call sub_100F504  +
and dword_10124C0 0 +
jmp loc_100EE8A  +
call sub_100E38E  +
push 32h  +
call ds:Sleep  +
push lpCriticalSection  +
call sub_100E32C  +
cmp Addend 0 +
push lpCriticalSection  +
jnz loc_100EE7D  +
call sub_100E38E  +
push lpCriticalSection  +
call sub_100E291  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 8  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 8  +
lea eax [ebp+arg_18] +
push eax  +
push 8  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100EF2E  +
add eax 10h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push 28h  +
call sub_1010471  +
test eax eax +
jz loc_100EF58  +
mov ecx [ebp+arg_0] +
and dword ptr [ecx] 0 +
jmp locret_100EF6E  +
push edi  +
mov edi [ebp+var_4] +
push 0Ah  +
xor eax eax +
pop ecx  +
stos   +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor eax eax +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
mov eax [ebp+arg_4] +
add eax 4 +
push eax  +
push 0C0000000h  +
call sub_100FA9E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100EFAA  +
pop ebp  +
jmp loc_10104A2  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 6  +
pop esi  +
push lpCriticalSection  +
call sub_100E2E4  +
mov edx [ebp+arg_4] +
and dword ptr [edx] 0 +
mov eax dword_10124C0 +
mov ecx offset dword_10124C0 +
test eax eax +
jz loc_100EFFE  +
cmp eax [ebp+arg_0] +
jz loc_100EFE8  +
mov ecx eax +
mov eax [ecx] +
test eax eax +
jnz loc_100EFDB  +
mov eax [ecx] +
test eax eax +
jz loc_100EFFE  +
cmp dword ptr [eax+14h] 0 +
jnz loc_100EFFE  +
push eax  +
mov [edx] eax +
call sub_100EF18  +
xor esi esi +
push lpCriticalSection  +
call sub_100E35A  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push dword ptr [esi+4]  +
call ds:CloseHandle  +
and dword ptr [esi+4] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10124C0 0 +
mov eax offset dword_10124C0 +
jz loc_100F061  +
mov edx [ebp+arg_0] +
mov ecx [eax] +
cmp ecx edx +
jz loc_100F058  +
mov eax ecx +
cmp dword ptr [eax] 0 +
jnz loc_100F04B  +
cmp dword ptr [eax] 0 +
jz loc_100F061  +
mov ecx [edx] +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push lpCriticalSection  +
call sub_100E2E4  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100F096  +
lea eax [esi+10h] +
push eax  +
call ds:InterlockedDecrement  +
test eax eax +
jnz loc_100F096  +
push esi  +
call sub_100EF99  +
push lpCriticalSection  +
call sub_100E35A  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
call sub_100EF37  +
mov esi [ebp+var_4] +
mov edi eax +
test edi edi +
jnz loc_100F0EE  +
push lpCriticalSection  +
call sub_100E32C  +
push esi  +
push [ebp+arg_8]  +
call sub_100EF77  +
mov edi eax +
test edi edi +
jz loc_100F102  +
push lpCriticalSection  +
call sub_100E38E  +
test esi esi +
jz loc_100F0F8  +
push esi  +
call sub_100EF99  +
mov eax [ebp+arg_10] +
and dword ptr [eax] 0 +
mov eax edi +
jmp loc_100F127  +
mov eax dword_10124C0 +
mov [esi] eax +
push esi  +
mov dword_10124C0 esi +
call sub_100EF18  +
mov eax [ebp+arg_10] +
mov [eax] esi +
push lpCriticalSection  +
call sub_100E38E  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
lea eax [ebp+lpBuffer] +
push eax  +
push [ebp+nNumberOfBytesToRead]  +
xor ebx ebx +
push [ebp+arg_4]  +
lea eax [ebp+lpOverlapped] +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_C] ebx +
push offset loc_100F229  +
push eax  +
mov [ebp+lpOverlapped] ebx +
mov [ebp+lpBuffer] ebx +
call sub_100F94F  +
mov edi eax +
cmp edi ebx +
jnz loc_100F20E  +
mov eax [ebp+lpOverlapped] +
mov ecx [ebp+lpBuffer] +
mov [eax+1Ch] ecx +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov edi eax +
cmp edi ebx +
jnz loc_100F20E  +
push esi  +
push lpCriticalSection  +
call sub_100E2E4  +
mov esi [ebp+var_C] +
cmp dword_10124C8 ebx +
jz loc_100F1AA  +
mov edi 12Fh +
jmp loc_100F1F8  +
mov eax [ebp+nNumberOfBytesToRead] +
mov [esi+0Ch] eax +
push [ebp+lpOverlapped]  +
push ebx  +
push eax  +
push [ebp+lpBuffer]  +
push dword ptr [esi+4]  +
call ds:ReadFile  +
test eax eax +
jnz loc_100F1DF  +
call ds:GetLastError  +
mov edi eax +
cmp edi 3E5h +
jz loc_100F1DD  +
cmp edi 0EAh +
jnz loc_100F1DF  +
xor edi edi +
xor eax eax +
cmp edi ebx +
setz al  +
mov [esi+8] eax +
cmp edi ebx +
jnz loc_100F1F8  +
push offset Addend  +
call ds:InterlockedIncrement  +
push lpCriticalSection  +
call sub_100E35A  +
push esi  +
call sub_100F06A  +
pop esi  +
cmp edi ebx +
jz loc_100F21C  +
cmp [ebp+lpOverlapped] ebx +
jz loc_100F21C  +
lea eax [ebp+lpOverlapped] +
push eax  +
call sub_100F9EA  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+10h] +
mov esi [edi+1Ch] +
mov ecx [edi+20h] +
mov eax [edi+18h] +
xor ebx ebx +
cmp dword ptr [ebp+8] 0C0000240h +
mov [ebp-4] ebx +
mov [ebp-10h] esi +
mov [ebp-14h] ecx +
mov [ebp-0Ch] ebx +
jnz loc_100F25E  +
xor eax eax +
jmp loc_100F4BA  +
cmp dword ptr [ebp+8] 80000005h +
jnz loc_100F277  +
mov edx [esi+4] +
add edx 8 +
push edx  +
push ecx  +
push eax  +
call sub_100F132  +
jmp loc_100F257  +
***
cmp [ebp+8] ebx +
jnz loc_100F4B7  +
lea ecx [ebp-4] +
push ecx  +
push eax  +
call sub_100EFB3  +
cmp eax ebx +
jnz loc_100F4B7  +
mov eax [esi] +
cmp eax 2 +
jnz loc_100F2FD  +
lea eax [esi+8] +
push eax  +
push dword ptr [esi+4]  +
call sub_10104BC  +
mov ebx [ebp-4] +
mov [ebx+18h] eax +
test eax eax +
jz loc_100F43C  +
call ds:GetTickCount64  +
mov [ebx+20h] eax +
mov [ebx+24h] edx +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100F43C  +
cmp byte ptr [eax+59h] 3 +
jb loc_100F43C  +
test dword ptr [eax+5Ch] 100h +
jz loc_100F43C  +
push offset dword_1002BFC  +
push 0Ah  +
push dword ptr [eax+54h]  +
push dword ptr [eax+50h]  +
call sub_1002CE5  +
jmp loc_100F43C  +
mov ebx [ebp-4] +
cmp eax 1 +
jnz loc_100F405  +
cmp dword ptr [ebx+18h] 0 +
jz loc_100F43C  +
call ds:GetTickCount64  +
mov ecx [ebx+20h] +
mov esi eax +
mov eax edx +
mov edx [ebx+24h] +
mov [ebp-8] esi +
mov [ebp-1Ch] ecx +
cmp eax edx +
jb loc_100F33B  +
ja loc_100F333  +
cmp esi ecx +
jb loc_100F33B  +
sub esi ecx +
mov edi eax +
sbb edi edx +
jmp loc_100F347  +
sub esi ecx +
mov edi eax +
sbb edi edx +
add esi 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
cmp dword ptr [ebx+18h] 0 +
jz loc_100F384  +
mov ecx AuthIdentity +
cmp ecx offset AuthIdentity +
jz loc_100F38A  +
cmp byte ptr [ecx+59h] 3 +
jb loc_100F38A  +
test dword ptr [ecx+5Ch] 100h +
jz loc_100F38A  +
push eax  +
push dword ptr [ebp-8]  +
push edx  +
push dword ptr [ebp-1Ch]  +
push offset dword_1002BFC  +
push 0Bh  +
push dword ptr [ecx+54h]  +
push dword ptr [ecx+50h]  +
call sub_100EEE6  +
mov ecx AuthIdentity +
test edi edi +
ja loc_100F3D2  +
jb loc_100F395  +
cmp esi 64h +
jnb loc_100F3D2  +
cmp ecx offset AuthIdentity +
jz loc_100F3C4  +
cmp byte ptr [ecx+59h] 3 +
jb loc_100F3C4  +
test dword ptr [ecx+5Ch] 100h +
jz loc_100F3C4  +
push 64h  +
pop eax  +
sub eax esi +
push eax  +
push offset dword_1002BFC  +
push 0Ch  +
push dword ptr [ecx+54h]  +
push dword ptr [ecx+50h]  +
call sub_100EB46  +
push 64h  +
pop eax  +
sub eax esi +
push eax  +
call ds:Sleep  +
jmp loc_100F3FD  +
cmp ecx offset AuthIdentity +
jz loc_100F3FD  +
cmp byte ptr [ecx+59h] 3 +
jb loc_100F3FD  +
test dword ptr [ecx+5Ch] 100h +
jz loc_100F3FD  +
push edi  +
push esi  +
push offset dword_1002BFC  +
push 0Dh  +
push dword ptr [ecx+54h]  +
push dword ptr [ecx+50h]  +
call sub_100EEBA  +
mov esi [ebp-10h] +
mov edi [ebp+10h] +
jmp loc_100F438  +
cmp dword ptr [ebx+18h] 0 +
jz loc_100F438  +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100F438  +
cmp byte ptr [eax+59h] 3 +
jb loc_100F438  +
test dword ptr [eax+5Ch] 100h +
jz loc_100F438  +
push offset dword_1002BFC  +
push 0Eh  +
push dword ptr [eax+54h]  +
push dword ptr [eax+50h]  +
call sub_1002CE5  +
and dword ptr [ebx+18h] 0 +
push esi  +
push dword ptr [ebp-14h]  +
call sub_100DA2D  +
push lpCriticalSection  +
call sub_100E2E4  +
cmp dword_10124C8 0 +
jnz loc_100F4A6  +
mov eax [ebx+4] +
test eax eax +
jz loc_100F4A6  +
cmp eax 0FFFFFFFFh +
jz loc_100F4A6  +
push edi  +
push 0  +
push dword ptr [ebx+0Ch]  +
push esi  +
push eax  +
call ds:ReadFile  +
mov [ebp-0Ch] eax +
test eax eax +
jnz loc_100F49B  +
call ds:GetLastError  +
cmp eax 3E5h +
jz loc_100F48E  +
cmp eax 0EAh +
jnz loc_100F497  +
xor eax eax +
mov dword ptr [ebp-0Ch] 1 +
test eax eax +
jnz loc_100F4A6  +
push offset Addend  +
call ds:InterlockedIncrement  +
push lpCriticalSection  +
call sub_100E35A  +
push ebx  +
call sub_100F06A  +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push lpCriticalSection  +
call sub_100E32C  +
push [ebp+arg_0]  +
call sub_100F015  +
push [ebp+arg_0]  +
call sub_100F035  +
push lpCriticalSection  +
call sub_100E38E  +
push [ebp+arg_0]  +
call sub_100F06A  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push lpCriticalSection  +
call sub_100E32C  +
mov esi dword_10124C0 +
test esi esi +
jz loc_100F532  +
push edi  +
mov edi esi +
mov esi [esi] +
push edi  +
call sub_100F015  +
push edi  +
call sub_100F06A  +
test esi esi +
jnz loc_100F51D  +
pop edi  +
push lpCriticalSection  +
call sub_100E38E  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F578  +
push [ebp+hObject]  +
push [ebp+var_4]  +
push 12C140h  +
push 0C0000000h  +
call sub_100FBAF  +
mov esi eax +
push [ebp+var_4]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F5C0  +
push [ebp+hObject]  +
push [ebp+var_4]  +
push 12C148h  +
push 0C0000000h  +
call sub_100FBAF  +
mov esi eax +
push [ebp+var_4]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hObject] 0 +
push esi  +
lea eax [ebp+hObject] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F608  +
push [ebp+dwBytes]  +
push [ebp+hObject]  +
push 12C130h  +
push 0C0000000h  +
call sub_100FCA0  +
mov esi eax +
push [ebp+hObject]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F650  +
push [ebp+lpMem]  +
push [ebp+var_4]  +
push 12C134h  +
push 0C0000000h  +
call sub_100FDE4  +
mov esi eax +
push [ebp+var_4]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F68E  +
push [ebp+hObject]  +
push [ebp+var_4]  +
call sub_100FF3F  +
mov esi eax +
push [ebp+var_4]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hObject] 0 +
push esi  +
lea eax [ebp+hObject] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F6D6  +
push [ebp+dwBytes]  +
push [ebp+hObject]  +
push 12C1DCh  +
push 0C0000000h  +
call sub_100FCA0  +
mov esi eax +
push [ebp+hObject]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hObject] 0 +
push esi  +
lea eax [ebp+hObject] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F71E  +
push [ebp+dwBytes]  +
push [ebp+hObject]  +
push 12C1E0h  +
push 0C0000000h  +
call sub_100FCA0  +
mov esi eax +
push [ebp+hObject]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hObject] 0 +
push esi  +
lea eax [ebp+hObject] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F765  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+hObject]  +
call sub_1010096  +
mov esi eax +
push [ebp+hObject]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F7A6  +
push [ebp+arg_C]  +
push [ebp+hObject]  +
push [ebp+var_4]  +
call sub_101014C  +
mov esi eax +
push [ebp+var_4]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+hObject] 0FFFFh +
ja loc_100F821  +
cmp [ebp+arg_1C] 10000h +
ja loc_100F821  +
cmp [ebp+hObject] 0 +
jz loc_100F7E2  +
cmp [ebp+arg_18] 0 +
jz loc_100F821  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov esi eax +
test esi esi +
jnz loc_100F814  +
push [ebp+arg_20]  +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+hObject]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
call sub_1010276  +
mov esi eax +
push [ebp+var_4]  +
call sub_100F06A  +
mov eax esi +
pop esi  +
jmp locret_100F824  +
push 57h  +
pop eax  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push [ebp+arg_14]  +
lea eax [ebp+lpOverlapped] +
push [ebp+arg_4]  +
mov [ebp+var_8] esi +
push [ebp+arg_0]  +
mov [ebp+lpOverlapped] esi +
push [ebp+arg_10]  +
push eax  +
call sub_100F94F  +
mov edi eax +
cmp edi esi +
jnz loc_100F8D6  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_100EFB3  +
mov edi eax +
cmp edi esi +
jnz loc_100F8D6  +
push ebx  +
push lpCriticalSection  +
call sub_100E2E4  +
mov ebx [ebp+var_8] +
cmp dword_10124C8 esi +
jz loc_100F88B  +
mov edi 12Fh +
jmp loc_100F8C4  +
push [ebp+lpOverlapped]  +
push esi  +
push [ebp+nNumberOfBytesToWrite]  +
push [ebp+lpBuffer]  +
push dword ptr [ebx+4]  +
call ds:WriteFile  +
test eax eax +
jnz loc_100F8B6  +
call ds:GetLastError  +
mov edi eax +
cmp edi 3E5h +
jz loc_100F8B6  +
cmp edi esi +
jnz loc_100F8C4  +
push offset Addend  +
call ds:InterlockedIncrement  +
mov [ebp+lpOverlapped] esi +
push lpCriticalSection  +
call sub_100E35A  +
push ebx  +
call sub_100F06A  +
pop ebx  +
cmp [ebp+lpOverlapped] esi +
jz loc_100F8E4  +
lea eax [ebp+lpOverlapped] +
push eax  +
call sub_100F9EA  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
lea edi [ebx+28h] +
push edi  +
call sub_1010411  +
mov esi eax +
test esi esi +
jnz loc_100F977  +
mov [ebp+var_4] 0Eh +
jmp loc_100F9AB  +
push edi  +
push 0  +
push esi  +
call memset  +
mov eax [ebp+arg_4] +
mov [esi+14h] eax +
mov eax [ebp+arg_8] +
mov [esi+18h] eax +
mov eax [ebp+arg_C] +
mov [esi+1Ch] eax +
mov eax [ebp+arg_10] +
mov [esi+20h] eax +
mov eax [ebp+arg_18] +
add esp 0Ch +
test eax eax +
jz loc_100F9AB  +
test ebx ebx +
jbe loc_100F9AB  +
lea ecx [esi+28h] +
mov [eax] ecx +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100F9DB  +
cmp byte ptr [eax+59h] 3 +
jb loc_100F9DB  +
test byte ptr [eax+5Ch] 80h +
jz loc_100F9DB  +
push esi  +
push offset dword_1002C0C  +
push 0Ah  +
push dword ptr [eax+54h]  +
push dword ptr [eax+50h]  +
call sub_100F8F1  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov eax AuthIdentity +
mov esi [ebp+arg_0] +
cmp eax offset AuthIdentity +
jz loc_100FA1F  +
cmp byte ptr [eax+59h] 3 +
jb loc_100FA1F  +
test byte ptr [eax+5Ch] 80h +
jz loc_100FA1F  +
push dword ptr [esi]  +
push offset dword_1002C0C  +
push 0Bh  +
push dword ptr [eax+54h]  +
push dword ptr [eax+50h]  +
call sub_100F8F1  +
mov eax [esi] +
test eax eax +
jz loc_100FA2E  +
push eax  +
call sub_1010449  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+10h] +
mov [ebp+10h] esi +
mov eax AuthIdentity +
cmp eax offset AuthIdentity +
jz loc_100FA72  +
cmp byte ptr [eax+59h] 3 +
jb loc_100FA72  +
test byte ptr [eax+5Ch] 80h +
jz loc_100FA72  +
push dword ptr [ebp+0Ch]  +
push esi  +
push offset dword_1002C0C  +
push 0Ch  +
push dword ptr [eax+54h]  +
push dword ptr [eax+50h]  +
call sub_100F91D  +
push esi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call dword ptr [esi+14h]  +
pop esi  +
test eax eax +
jnz loc_100FA8A  +
lea eax [ebp+10h] +
push eax  +
call sub_100F9EA  +
push offset Addend  +
call ds:InterlockedDecrement  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+arg_8] esi +
jz loc_100FB39  +
xor eax eax +
mov word ptr [ebp+var_C] ax +
lea edi [ebp+var_C+2] +
stos   +
stos   +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_8]  +
call ds:RtlStringFromGUID  +
push eax  +
call ds:RtlNtStatusToDosError  +
mov [ebp+var_4] eax +
cmp eax esi +
jnz loc_100FB73  +
movzx eax word ptr [ebp+var_C] +
add eax 22h +
push eax  +
call sub_1010411  +
mov ebx eax +
cmp ebx esi +
jnz loc_100FAFE  +
mov [ebp+var_4] 0Eh +
jmp loc_100FB73  +
push 8  +
pop ecx  +
mov esi offset a_Nativewifip +
mov edi ebx +
movs   +
movzx eax word ptr [ebp+var_C] +
push eax  +
push [ebp+var_8]  +
lea eax [ebx+20h] +
push eax  +
call memcpy  +
movzx eax word ptr [ebp+var_C] +
shr eax 1 +
xor ecx ecx +
mov [ebx+eax*2+20h] cx +
add esp 0Ch +
lea eax [ebp+var_C] +
push eax  +
call ds:RtlFreeUnicodeString  +
xor esi esi +
jmp loc_100FB3E  +
mov ebx offset FileName +
push esi  +
push 40000000h  +
push 3  +
push esi  +
push esi  +
push [ebp+dwDesiredAccess]  +
push ebx  +
call ds:CreateFileW  +
mov edi eax +
cmp [ebp+arg_8] esi +
jz loc_100FB5F  +
push ebx  +
call sub_1010449  +
mov esi ds:GetLastError +
cmp edi 0FFFFFFFFh +
jnz loc_100FB7B  +
call esi  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100FB7B  +
mov eax [ebp+arg_4] +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_100FBA0  +
push 0  +
push offset loc_100FA38  +
push edi  +
call ds:BindIoCompletionCallback  +
test eax eax +
jnz loc_100FB9B  +
call esi  +
push edi  +
mov [ebp+var_4] eax +
call ds:CloseHandle  +
xor edi edi +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push 8  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call sub_1010411  +
mov ebx eax +
cmp ebx esi +
jnz loc_100FBD7  +
push 0Eh  +
pop edi  +
jmp loc_100FC92  +
xor eax eax +
mov edi ebx +
stos   +
stos   +
mov eax [ebp+hObject] +
push esi  +
mov dword ptr [ebx] 1 +
mov eax [eax] +
push esi  +
mov [ebx+4] eax +
mov eax [ebp+arg_8] +
mov edi [eax+4] +
push esi  +
push esi  +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
cmp eax esi +
jz loc_100FC70  +
push 4  +
lea ecx [ebp+var_8] +
push ecx  +
push 8  +
push ebx  +
push [ebp+arg_4]  +
lea ecx [ebp+var_10] +
push ecx  +
push esi  +
push esi  +
push eax  +
push edi  +
call ds:NtDeviceIoControlFile  +
mov edi eax +
cmp edi 103h +
jnz loc_100FC3A  +
push esi  +
push esi  +
push [ebp+hObject]  +
call ds:NtWaitForSingleObject  +
mov edi eax +
cmp edi esi +
jl loc_100FC3A  +
mov edi [ebp+var_10] +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp edi esi +
jl loc_100FC4F  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
jmp loc_100FC7C  +
mov eax 0C0000000h +
mov ecx edi +
and ecx eax +
cmp ecx eax +
jz loc_100FC62  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
push edi  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
mov edi eax +
cmp edi esi +
jnz loc_100FC8C  +
mov edi [ebp+var_8] +
cmp edi esi +
jz loc_100FC8C  +
push edi  +
call ds:RtlNtStatusToDosError  +
mov edi eax +
push ebx  +
call sub_1010449  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+dwBytes] +
mov eax [esi] +
lea ecx [eax-1] +
mov eax ecx +
imul eax eax +
push edi  +
lea edx [eax+18h] +
mov [ebp+dwBytes] edx +
push 0Ch  +
xor edx edx +
pop ebx  +
div  ebx +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
cmp eax ecx +
jb loc_100FCD7  +
cmp [ebp+dwBytes] 4 +
jnb loc_100FCE1  +
mov esi 216h +
jmp loc_100FDD6  +
push [ebp+dwBytes]  +
call sub_1010411  +
mov ebx eax +
cmp ebx edi +
jnz loc_100FCF7  +
push 0Eh  +
pop esi  +
jmp loc_100FDCC  +
push [ebp+dwBytes]  +
push edi  +
push ebx  +
call memset  +
mov dword ptr [ebx] 1 +
mov ecx [esi] +
lea eax [ebx+4] +
mov [eax] ecx +
mov ecx [esi] +
add eax 4 +
mov [eax] ecx +
mov ecx [esi] +
imul ecx ecx +
push ecx  +
push dword ptr [esi+4]  +
add eax 4 +
push eax  +
call memcpy  +
mov eax [ebp+hObject] +
mov esi [eax+4] +
add esp 18h +
push edi  +
push edi  +
push edi  +
push edi  +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
cmp eax edi +
jz loc_100FDB0  +
push 4  +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+dwBytes]  +
lea ecx [ebp+var_10] +
push ebx  +
push [ebp+arg_4]  +
push ecx  +
push edi  +
push edi  +
push eax  +
push esi  +
call ds:NtDeviceIoControlFile  +
mov esi eax +
cmp esi 103h +
jnz loc_100FD7A  +
push edi  +
push edi  +
push [ebp+hObject]  +
call ds:NtWaitForSingleObject  +
mov esi eax +
cmp esi edi +
jl loc_100FD7A  +
mov esi [ebp+var_10] +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp esi edi +
jl loc_100FD8F  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
jmp loc_100FDBC  +
mov eax 0C0000000h +
mov ecx esi +
and ecx eax +
cmp ecx eax +
jz loc_100FDA2  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
push esi  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
mov esi eax +
cmp esi edi +
jnz loc_100FDCC  +
mov esi [ebp+var_8] +
cmp esi edi +
jz loc_100FDCC  +
push esi  +
call ds:RtlNtStatusToDosError  +
mov esi eax +
cmp ebx edi +
jz loc_100FDD6  +
push ebx  +
call sub_1010449  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+lpMem] +
mov eax [ebx+18h] +
xor ecx ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
mov [ebp+var_10] eax +
mov eax [eax] +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
cmp eax ecx +
jz loc_100FE0C  +
mov [ebp+var_4] eax +
mov edi [ebp+var_4] +
add edi 24h +
push edi  +
mov [ebp+var_18] edi +
call sub_1010411  +
mov esi eax +
mov [ebp+lpMem] esi +
test esi esi +
jnz loc_100FE2C  +
push 0Eh  +
pop esi  +
jmp loc_100FF31  +
push edi  +
push 0  +
push esi  +
call memset  +
mov dword ptr [esi] 1 +
mov ecx [ebx] +
lea eax [esi+4] +
mov [eax] ecx +
mov edx [ebx+4] +
add esp 0Ch +
push 4  +
pop ecx  +
add eax ecx +
mov [eax] edx +
mov edx [ebx+8] +
add eax ecx +
mov [eax] edx +
add eax ecx +
mov edi eax +
lea esi [ebx+0Ch] +
movs   +
movs   +
mov edx [ebx+14h] +
add eax 8 +
mov [eax] edx +
add eax ecx +
mov ecx [ebp+var_10] +
mov edx [ecx] +
xor edi edi +
mov [eax] edx +
cmp [ebp+var_4] edi +
jz loc_100FE8A  +
push [ebp+var_4]  +
add eax 4 +
push dword ptr [ecx+4]  +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_8] +
mov esi [eax+4] +
push edi  +
push edi  +
push edi  +
push edi  +
call ds:CreateEventW  +
mov ebx eax +
cmp ebx edi +
jz loc_100FF0D  +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_18]  +
lea eax [ebp+var_14] +
push [ebp+lpMem]  +
push [ebp+arg_4]  +
push eax  +
push edi  +
push edi  +
push ebx  +
push esi  +
call ds:NtDeviceIoControlFile  +
mov esi eax +
cmp esi 103h +
jnz loc_100FED9  +
push edi  +
push edi  +
push ebx  +
call ds:NtWaitForSingleObject  +
mov esi eax +
cmp esi edi +
jl loc_100FED9  +
mov esi [ebp+var_14] +
push ebx  +
call ds:CloseHandle  +
cmp esi edi +
jl loc_100FEEC  +
mov eax [ebp+var_10] +
mov [ebp+var_8] eax +
jmp loc_100FF19  +
mov eax 0C0000000h +
mov ecx esi +
and ecx eax +
cmp ecx eax +
jz loc_100FEFF  +
mov eax [ebp+var_10] +
mov [ebp+var_8] eax +
push esi  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
mov esi eax +
cmp esi edi +
jnz loc_100FF29  +
mov esi [ebp+var_C] +
cmp esi edi +
jz loc_100FF29  +
push esi  +
call ds:RtlNtStatusToDosError  +
mov esi eax +
push [ebp+lpMem]  +
call sub_1010449  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi [ebp+hObject] +
mov eax [esi+1Ch] +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov [ebp+var_C] eax +
mov eax [eax] +
cmp eax edi +
jz loc_100FF64  +
lea edi [eax-1] +
add edi 30h +
push edi  +
mov [ebp+var_14] edi +
call sub_1010411  +
mov ebx eax +
test ebx ebx +
jnz loc_100FF7E  +
push 0Eh  +
pop esi  +
jmp loc_1010088  +
push edi  +
push 0  +
push ebx  +
call memset  +
xor eax eax +
inc eax  +
mov [ebx] eax +
mov [ebx+4] eax +
mov [ebx+8] eax +
mov eax [esi] +
mov [ebx+0Ch] eax +
mov eax [ebp+hObject] +
add esi 4 +
lea edi [ebx+10h] +
movs   +
movs   +
mov ecx [eax+0Ch] +
mov [ebx+18h] ecx +
mov ecx [eax+10h] +
mov [ebx+1Ch] ecx +
mov ecx [eax+14h] +
mov [ebx+20h] ecx +
mov eax [eax+18h] +
mov [ebx+24h] eax +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov [ebx+28h] ecx +
mov ecx [eax] +
xor edi edi +
add esp 0Ch +
cmp ecx edi +
jz loc_100FFDE  +
push ecx  +
push dword ptr [eax+4]  +
lea eax [ebx+2Ch] +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_0] +
mov esi [eax+4] +
push edi  +
push edi  +
push edi  +
push edi  +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
cmp eax edi +
jz loc_1010066  +
push 4  +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+var_14]  +
lea ecx [ebp+var_10] +
push ebx  +
push 12C138h  +
push ecx  +
push edi  +
push edi  +
push eax  +
push esi  +
call ds:NtDeviceIoControlFile  +
mov esi eax +
cmp esi 103h +
jnz loc_1010030  +
push edi  +
push edi  +
push [ebp+hObject]  +
call ds:NtWaitForSingleObject  +
mov esi eax +
cmp esi edi +
jl loc_1010030  +
mov esi [ebp+var_10] +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp esi edi +
jl loc_1010045  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
jmp loc_1010072  +
mov eax 0C0000000h +
mov ecx esi +
and ecx eax +
cmp ecx eax +
jz loc_1010058  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
push esi  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
mov esi eax +
cmp esi edi +
jnz loc_1010082  +
mov esi [ebp+var_8] +
cmp esi edi +
jz loc_1010082  +
push esi  +
call ds:RtlNtStatusToDosError  +
mov esi eax +
push ebx  +
call sub_1010449  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
push edi  +
mov edi [eax] +
mov eax [ebp+hObject] +
mov ebx [eax+4] +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
mov [ebp+var_4] esi +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
cmp eax esi +
jz loc_101013C  +
push edi  +
push [ebp+arg_10]  +
lea ecx [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push 12C194h  +
push ecx  +
push esi  +
push esi  +
push eax  +
push ebx  +
call ds:NtDeviceIoControlFile  +
mov edi eax +
cmp edi 103h +
jnz loc_10100FD  +
push esi  +
push esi  +
push [ebp+hObject]  +
call ds:NtWaitForSingleObject  +
mov edi eax +
cmp edi esi +
jl loc_10100FD  +
mov edi [ebp+var_C] +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp edi esi +
jl loc_101011B  +
mov ecx [ebp+var_8] +
xor eax eax +
mov edx [ebp+arg_C] +
pop edi  +
pop esi  +
mov [edx] ecx +
pop ebx  +
leave   +
retn 14h  +
mov eax 0C0000000h +
mov ecx edi +
and ecx eax +
cmp ecx eax +
jz loc_101012E  +
mov eax [ebp+var_8] +
mov [ebp+var_4] eax +
push edi  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
mov ecx [ebp+var_4] +
jmp loc_101010F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
push 1Ch  +
call sub_1010411  +
mov ebx eax +
test ebx ebx +
jnz loc_1010173  +
push 0Eh  +
pop edi  +
jmp loc_1010269  +
push esi  +
push 7  +
pop ecx  +
xor eax eax +
mov edi ebx +
stos   +
mov ecx [ebp+hObject] +
inc eax  +
mov [ebx] eax +
mov [ebx+4] eax +
mov [ebx+8] eax +
mov esi ecx +
lea edi [ebx+0Ch] +
movs   +
movs   +
mov edx [ecx+8] +
mov esi [ebp+arg_8] +
mov [ebx+14h] edx +
mov edx [ecx+0Ch] +
xor edx [ebx+18h] +
and esi eax +
and edx eax +
xor [ebx+18h] edx +
mov ecx [ecx+10h] +
mov edx [ebx+18h] +
and ecx eax +
mov eax [ebp+arg_0] +
add esi esi +
or ecx esi +
xor esi esi +
push esi  +
push esi  +
add ecx ecx +
and edx 0FFFFFFF9h +
or ecx edx +
push esi  +
mov [ebx+18h] ecx +
mov edi [eax+4] +
push esi  +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
cmp eax esi +
jz loc_1010246  +
push 4  +
lea ecx [ebp+var_8] +
push ecx  +
push 1Ch  +
push ebx  +
push 12C32Ch  +
lea ecx [ebp+var_10] +
push ecx  +
push esi  +
push esi  +
push eax  +
push edi  +
call ds:NtDeviceIoControlFile  +
mov edi eax +
cmp edi 103h +
jnz loc_1010210  +
push esi  +
push esi  +
push [ebp+hObject]  +
call ds:NtWaitForSingleObject  +
mov edi eax +
cmp edi esi +
jl loc_1010210  +
mov edi [ebp+var_10] +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp edi esi +
jl loc_1010225  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
jmp loc_1010252  +
mov eax 0C0000000h +
mov ecx edi +
and ecx eax +
cmp ecx eax +
jz loc_1010238  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
push edi  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
mov edi eax +
cmp edi esi +
jnz loc_1010262  +
mov edi [ebp+var_8] +
cmp edi esi +
jz loc_1010262  +
push edi  +
call ds:RtlNtStatusToDosError  +
mov edi eax +
push ebx  +
call sub_1010449  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+hObject] +
cmp ebx 2AAAAAAAh +
jnb loc_101029C  +
mov eax [ebp+arg_18] +
cmp eax 7FFFFFFFh +
jb loc_10102A6  +
mov ebx 216h +
jmp loc_10103F9  +
imul ebx ebx +
push edi  +
add eax eax +
lea edi [ebx+7] +
and edi 0FFFFFFF8h +
lea ecx [edi+eax] +
mov [ebp+var_C] eax +
cmp ecx eax +
jb loc_10102C7  +
add ecx 1Ch +
mov [ebp+var_14] ecx +
cmp ecx 1Ch +
jnb loc_10102D1  +
mov ebx 216h +
jmp loc_10103F8  +
push esi  +
push ecx  +
call sub_1010411  +
mov esi eax +
test esi esi +
jnz loc_10102E6  +
push 0Eh  +
pop ebx  +
jmp loc_10103ED  +
mov ecx [ebp+arg_8] +
xor eax eax +
inc eax  +
mov [esi] eax +
mov edx [esi+4] +
and ecx eax +
and edx 0FFFFFFFCh +
add ecx ecx +
or ecx edx +
mov edx [ebp+arg_4] +
and edx eax +
mov eax [ebp+arg_C] +
mov [esi+8] eax +
mov eax [ebp+hObject] +
push ebx  +
push [ebp+arg_14]  +
mov [esi+0Ch] eax +
lea eax [esi+1Ch] +
or ecx edx +
push eax  +
mov [esi+4] ecx +
mov dword ptr [esi+10h] 18h +
call memcpy  +
mov eax [esi+10h] +
push [ebp+var_C]  +
mov ecx [ebp+arg_18] +
push [ebp+arg_1C]  +
add eax edi +
mov [esi+18h] eax +
lea eax [eax+esi+4] +
push eax  +
mov [esi+14h] ecx +
call memcpy  +
mov eax [ebp+arg_0] +
mov ebx [eax+4] +
add esp 18h +
xor edi edi +
push edi  +
push edi  +
push edi  +
push edi  +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
cmp eax edi +
jz loc_10103CF  +
push 4  +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+var_14]  +
lea ecx [ebp+var_10] +
push esi  +
push 12C320h  +
push ecx  +
push edi  +
push edi  +
push eax  +
push ebx  +
call ds:NtDeviceIoControlFile  +
mov ebx eax +
cmp ebx 103h +
jnz loc_1010399  +
push edi  +
push edi  +
push [ebp+hObject]  +
call ds:NtWaitForSingleObject  +
mov ebx eax +
cmp ebx edi +
jl loc_1010399  +
mov ebx [ebp+var_10] +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp ebx edi +
jl loc_10103AE  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
jmp loc_10103DD  +
mov eax 0C0000000h +
mov ecx ebx +
and ecx eax +
cmp ecx eax +
jz loc_10103C1  +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
push ebx  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx edi +
jnz loc_10103ED  +
xor edi edi +
mov ebx [ebp+var_8] +
cmp ebx edi +
jz loc_10103ED  +
push ebx  +
call ds:RtlNtStatusToDosError  +
mov ebx eax +
test esi esi +
jz loc_10103F7  +
push esi  +
call sub_1010449  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
call ds:GetProcessHeap  +
test eax eax +
jz loc_101043D  +
push [ebp+dwBytes]  +
push 8  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_101043D  +
push 8  +
call ds:SetLastError  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1010466  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapFree  +
jmp loc_1010468  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+dwBytes]  +
xor edi edi +
call sub_1010411  +
mov esi eax +
test esi esi +
jnz loc_1010490  +
call ds:GetLastError  +
mov edi eax +
mov eax [ebp+arg_4] +
mov [eax] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10104B3  +
pop ebp  +
jmp sub_1010449  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0Ch +
mov eax [ebp+arg_4] +
jb loc_10104E6  +
cmp byte ptr [eax+9] 0 +
jnz loc_10104E6  +
cmp byte ptr [eax+0Ch] 4 +
jnz loc_10104E6  +
mov ecx 8E88h +
cmp [eax+6] cx +
jnz loc_10104E6  +
xor eax eax +
inc eax  +
jmp loc_10104E8  +
xor eax eax +
pop ebp  +
retn 8  +
***
retn   +
***
retf   +
***
