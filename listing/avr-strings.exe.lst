sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_49A498 1 +
mov ds:dword_49A494 1 +
mov ds:dword_49A490 1 +
mov ds:dword_49A4A0 1 +
jz loc_4010B0  +
mov ds:dword_496008 eax +
mov eax ds:dword_49A4A4 +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_46EEC0  +
mov edx ds:dword_49A4A8 +
mov ds:dword_49A85C eax +
mov ds:dword_49A860 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_46F100  +
cmp dword_4738B0 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_46F170 +
call sub_46F160  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_49A4AC +
mov dword ptr [esp+10h] offset dword_496000 +
mov dword ptr [esp+8] offset dword_496014 +
mov dword ptr [esp+4] offset dword_496018 +
mov ds:dword_496000 eax +
mov eax ds:dword_49A4B0 +
mov dword ptr [esp] offset dword_49601C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_496010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_46FEC0  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_49A4A4 +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_49A864 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_49A868 +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_49A868 +
test eax eax +
jz loc_401481  +
mov ds:dword_496004 1 +
mov eax ds:dword_49A868 +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_494730 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_46F470  +
mov [esp+88h+var_88] offset sub_46EFB0 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_49A4B4 eax +
mov [esp+88h+var_88] offset dword_401000 +
call loc_4738B8  +
call sub_46F740  +
mov eax ds:_acmdln +
mov ds:dword_49A84C 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_49A848 eax +
mov ebx ds:dword_49A4A4 +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_473000 eax +
mov eax ds:dword_49601C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_496018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_496018 esi +
call sub_46F7D0  +
mov edx ds:dword_496014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_49601C +
mov ecx ds:dword_496014 +
mov edx ds:dword_496018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_471610  +
mov ecx ds:dword_496008 +
test ecx ecx +
mov ds:dword_49600C eax +
jz loc_4014AB  +
mov edx ds:dword_496004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_49600C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_49A868 +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_49A868 +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_49C008 +
mov [esp+88h+var_88] offset unk_49C000 +
call _initterm  +
test ebx ebx +
mov ds:dword_49A868 2 +
jnz loc_401261  +
xchg ebx ds:dword_49A864 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_49A868 1 +
mov [esp+88h+var_84] offset unk_49C018 +
mov [esp+88h+var_88] offset unk_49C00C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_49A4A4 1 +
call sub_46F7F0  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_49A4A4 0 +
call sub_46F7F0  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_4738C4 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_4738C4 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx ds:dword_496024 +
test ebx ebx +
jle loc_4015E5  +
mov [esp+1Ch+var_14] edx +
xor ebx ebx +
xor esi esi +
mov edx eax +
mov ebp ecx +
jmp loc_4015B8  +
sub eax 1 +
mov edi [esp+1Ch+arg_0] +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
lea ecx [eax+1] +
mov [edi] ecx +
movsx eax byte ptr [eax] +
mov edi [esp+1Ch+var_14] +
mov ecx ebx +
movzx ebx al +
add dword ptr [edi] 1 +
adc dword ptr [edi+4] 0 +
add esi 1 +
shl ecx 8 +
or ebx ecx +
cmp ds:dword_496024 esi +
jle loc_4015E7  +
mov eax [ebp+0] +
test eax eax +
jnz loc_401580  +
test edx edx +
jz loc_4015D8  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_10] edx +
call getc  +
mov edx [esp+1Ch+var_10] +
cmp eax 0FFFFFFFFh +
jnz loc_401598  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
movzx edx ds:byte_496028 +
mov eax ebx +
bswap eax  +
cmp dl 4Ch +
jz loc_4015DD  +
cmp dl 6Ch +
mov eax ebx +
jnz loc_4015DD  +
mov edx ebx +
add esp 1Ch +
shl edx 8 +
movzx eax bh +
movzx edx dx +
pop ebx  +
or eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax ds:dword_49A850 +
mov [esp+18h+var_14] offset aUsageSOptionSF +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call fprintf  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDisplayPrintab +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 12h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheOptionsAre +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 9Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aAAllScanTheEnt +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 375h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFPrintFileName +
call fwrite  +
mov eax ds:dword_49A850 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_401D40  +
test esi esi +
jz loc_4016DF  +
mov [esp+18h+var_18] esi +
call exit  +
mov [esp+18h+var_10] offset aHttpWww_source +
mov [esp+18h+var_14] offset aReportBugsToS +
mov [esp+18h+var_18] ebx +
call fprintf  +
jmp loc_4016D7  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
mov [esp+44h+var_20] eax +
mov eax [esp+44h+arg_0] +
lea ebp [esp+44h+arg_C] +
mov [esp+44h+var_1C] eax +
mov eax [esp+44h+arg_4] +
mov [esp+44h+var_18] eax +
mov eax ds:dword_496044 +
add eax 1 +
mov [esp+44h+var_44] eax +
call sub_4586C0  +
mov esi eax +
mov ecx ds:dword_496044 +
xor ebx ebx +
mov eax [esp+44h+var_1C] +
mov edx [esp+44h+var_18] +
test ecx ecx +
mov [esp+44h+var_2C] eax +
mov [esp+44h+var_28] edx +
jg loc_40176D  +
jmp loc_4017C0  +
cmp ds:dword_496040 1 +
jnz loc_401733  +
and edx 40h +
jz loc_401733  +
mov [esi+ebx] al +
add ebx 1 +
cmp ebx ds:dword_496044 +
jge loc_4017C0  +
mov [esp+44h+var_44] ebp +
lea ecx [esp+44h+arg_8] +
mov eax edi +
lea edx [esp+44h+var_1C] +
call sub_401560  +
cmp eax 0FFFFFFFFh +
jz loc_401873  +
cmp eax 0FFh +
ja loc_401733  +
cmp eax 9 +
jz loc_40175F  +
movzx edx ds:word_490F00[eax+eax] +
test dl 10h +
jnz loc_40175F  +
cmp ds:byte_496028 53h +
jnz loc_401751  +
cmp eax 7Fh +
jle loc_401751  +
mov [esi+ebx] al +
add ebx 1 +
cmp ebx ds:dword_496044 +
jl loc_40176D  +
lea esi [esi+0] +
mov edx ds:dword_496038 +
test edx edx +
jnz loc_4018BC  +
mov eax ds:dword_49603C +
test eax eax +
jnz loc_401883  +
mov eax ds:_iob +
mov [esp+44h+var_44] esi +
mov byte ptr [esi+ebx] 0 +
add eax 20h +
mov [esp+44h+var_40] eax +
call fputs  +
jmp loc_40180B  +
cmp ds:dword_496040 1 +
jnz loc_401850  +
and edx 40h +
jz loc_401850  +
mov [esp+44h+var_44] eax +
call putchar  +
mov [esp+44h+var_44] ebp +
lea ecx [esp+44h+arg_8] +
mov eax edi +
lea edx [esp+44h+var_1C] +
call sub_401560  +
cmp eax 0FFh +
ja loc_401850  +
cmp eax 9 +
jz loc_401803  +
movzx edx ds:word_490F00[eax+eax] +
test dl 10h +
jnz loc_401803  +
cmp ds:byte_496028 53h +
jnz loc_4017F5  +
cmp eax 7Fh +
jg loc_401803  +
cmp ds:dword_496040 1 +
jz loc_4017FE  +
lea esi [esi+0] +
mov eax ds:dword_496020 +
test eax eax +
jz loc_4018D5  +
mov ebx ds:_iob +
mov [esp+44h+var_44] eax +
lea edx [ebx+20h] +
mov [esp+44h+var_40] edx +
call fputs  +
jmp loc_401733  +
mov [esp+44h+var_44] esi +
call free  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_496048 +
cmp eax 0Ah +
jz loc_401907  +
cmp eax 10h +
jz loc_4018E6  +
cmp eax 8 +
jnz loc_4017DB  +
mov eax [esp+44h+var_2C] +
mov edx [esp+44h+var_28] +
mov [esp+44h+var_44] offset a7i64o +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_3C] edx +
call printf  +
jmp loc_4017DB  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] offset aS_3 +
mov [esp+44h+var_40] eax +
call printf  +
jmp loc_4017CE  +
mov [esp+44h+var_44] 0Ah +
call putchar  +
jmp loc_401733  +
mov eax [esp+44h+var_2C] +
mov edx [esp+44h+var_28] +
mov [esp+44h+var_44] offset a7i64x +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_3C] edx +
call printf  +
jmp loc_4017DB  +
mov eax [esp+44h+var_2C] +
mov edx [esp+44h+var_28] +
mov [esp+44h+var_44] offset a7i64d +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_3C] edx +
call printf  +
jmp loc_4017DB  +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov ebx [esp+6Ch+arg_4] +
mov edi [esp+6Ch+arg_0] +
mov esi [esp+6Ch+arg_8] +
mov eax [ebx+14h] +
and eax 103h +
cmp eax 103h +
jz loc_401963  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+24h] +
test ebp ebp +
jz loc_40195B  +
mov eax [esi+4] +
test eax eax +
jz loc_4019C0  +
cmp ebp eax +
jnb loc_40195B  +
mov [esp+6Ch+var_6C] ebp +
call sub_4586C0  +
mov [esp+6Ch+var_58] ebp +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_68] ebx +
mov [esp+6Ch+var_6C] edi +
mov [esp+6Ch+var_64] eax +
mov [esp+6Ch+var_4C] eax +
call sub_4034C0  +
mov ecx [esp+6Ch+var_4C] +
test eax eax +
jnz loc_4019E0  +
mov [esp+6Ch+arg_0] ecx +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
lea eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] edi +
call sub_403BA0  +
test eax eax +
jnz loc_40195B  +
mov eax [esp+6Ch+var_24] +
mov [esi+4] eax +
jmp loc_401971  +
mov eax [ebx+50h] +
mov edx [ebx+54h] +
mov [esp+6Ch+var_40] ecx +
mov ds:dword_496030 1 +
mov [esp+6Ch+var_4C] eax +
mov eax [esi] +
mov [esp+6Ch+var_48] edx +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_60] ecx +
mov ecx [esp+6Ch+var_48] +
mov [esp+6Ch+var_64] ebp +
mov [esp+6Ch+var_6C] edx +
xor edx edx +
mov [esp+6Ch+var_68] ecx +
call sub_401700  +
mov ecx [esp+6Ch+var_40] +
jmp loc_4019AD  +
***
mov esi eax +
push ebx  +
sub esp 10h +
mov [esp+14h+var_10] 2Fh +
mov [esp+14h+var_14] eax +
call strrchr  +
mov [esp+14h+var_10] 5Ch +
mov [esp+14h+var_14] esi +
mov edi eax +
call strrchr  +
test edi edi +
jz loc_401AB4  +
cmp eax edi +
ja loc_401AB0  +
sub edi esi +
lea eax [edi+0Bh] +
mov [esp+14h+var_14] eax +
call sub_4586C0  +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
mov ebx eax +
call memcpy  +
cmp edi 2 +
lea eax [edi+1] +
jz loc_401AD7  +
mov byte ptr [ebx+edi] 2Fh +
add eax ebx +
mov dword ptr [eax] 58587473h +
mov dword ptr [eax+4] 58585858h +
mov byte ptr [eax+8] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_401A62  +
test eax eax +
mov edi eax +
jnz loc_401A62  +
cmp byte ptr [esi] 0 +
jz loc_401AC5  +
cmp byte ptr [esi+1] 3Ah +
jz loc_401AF0  +
mov [esp+14h+var_14] 9 +
call sub_4586C0  +
mov ebx eax +
xor eax eax +
jmp loc_401A8D  +
cmp byte ptr [ebx+1] 3Ah +
mov eax 3 +
jnz loc_401A89  +
mov byte ptr [ebx+2] 2Eh +
mov al 4 +
mov edi 3 +
jmp loc_401A89  +
mov edi esi +
add edi 1 +
jz loc_401AC5  +
jmp loc_401A62  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
call sub_403EA0  +
mov [esp+24h+var_24] eax +
call sub_403EB0  +
mov esi eax +
mov eax ds:_iob +
lea edx [eax+20h] +
mov [esp+24h+var_24] edx +
call fflush  +
test ebx ebx +
jz loc_401B60  +
mov eax ds:dword_49A850 +
mov [esp+24h+var_14] esi +
mov [esp+24h+var_18] ebx +
mov [esp+24h+var_20] offset aSSS +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax ds:dword_49A850 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_20] offset aSS_1 +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax ds:_iob +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
add eax 20h +
mov [esp+14h+var_14] eax +
call fflush  +
mov eax ds:dword_49A850 +
mov [esp+14h+var_10] offset aS_1 +
mov [esp+14h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14h+var_14] eax +
call fprintf  +
mov eax ds:_iob +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
add eax 40h +
mov [esp+14h+var_14] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+14h+arg_0] 0Ah +
add eax 40h +
mov [esp+14h+arg_4] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp putc  +
***
sub esp 1Ch +
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_401BB0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] offset aAvrUnknownNone +
call sub_407320  +
test eax eax +
jz loc_401C97  +
add esp 1Ch +
retn   +
call sub_403EA0  +
mov [esp+1Ch+var_1C] eax +
call sub_403EB0  +
mov [esp+1Ch+var_18] offset aAvrUnknownNone +
mov [esp+1Ch+var_1C] offset aCanTSetBfdDefa +
mov [esp+1Ch+var_14] eax +
call sub_401C30  +
lea esi [esi+0] +
push ebx  +
sub esp 18h +
mov eax ds:_iob +
mov ebx [esp+38h+var_18] +
add eax 20h +
mov [esp+38h+var_38] eax +
call fflush  +
mov eax ds:dword_49A850 +
mov [esp+38h+var_34] offset aSMatchingForma +
mov [esp+38h+var_30] eax +
jmp loc_401CFF  +
add ebx 4 +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] offset aS_2 +
mov eax ds:_iob +
add eax 40h +
mov [esp+38h+var_38] eax +
call fprintf  +
mov eax [ebx] +
test eax eax +
jnz loc_401CF0  +
mov eax ds:_iob +
mov [esp+38h+var_38] 0Ah +
add eax 40h +
mov [esp+38h+var_34] eax +
call fputc  +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
test eax eax +
jz loc_401DB3  +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset aSSupportedTarg +
mov [esp+10h+var_10] esi +
call fprintf  +
call sub_407540  +
mov edx [eax] +
mov edi eax +
lea ebx [eax+4] +
test edx edx +
jz loc_401D94  +
mov [esp+10h+var_8] edx +
add ebx 4 +
mov [esp+10h+var_C] offset aS_2 +
mov [esp+10h+var_10] esi +
call fprintf  +
mov edx [ebx-4] +
test edx edx +
jnz loc_401D76  +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] 0Ah +
call fputc  +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
mov [esp+10h+var_4] esi +
mov [esp+10h+var_8] 12h +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset aSupportedTarge +
call fwrite  +
jmp loc_401D66  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
test eax eax +
jz loc_401E51  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aSSupportedArch +
mov [esp] esi +
call fprintf  +
call sub_407BF0  +
mov edx [eax] +
mov edi eax +
mov ebx eax +
test edx edx +
jz loc_401E32  +
mov [esp+8] edx +
add ebx 4 +
mov dword ptr [esp+4] offset aS_2 +
mov [esp] esi +
call fprintf  +
mov edx [ebx] +
test edx edx +
jnz loc_401E15  +
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
mov [esp+20h] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
***
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aSupportedArchi +
call fwrite  +
jmp loc_401E06  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov dword ptr [esp+4] offset aGnuBinutils2_1 +
mov dword ptr [esp] offset aBfdHeaderFileV +
call printf  +
mov dword ptr [esp] 0 +
call sub_458FA0  +
mov edi eax +
mov eax off_4733B4 +
mov esi [eax] +
test esi esi +
jz loc_402014  +
mov dword ptr [esp+20h] 4 +
mov dword ptr [esp+1Ch] 1 +
mov eax [esi] +
mov [esp] edi +
mov [esp+4] eax +
call sub_405E90  +
mov edx offset aBigEndian +
mov ebx eax +
mov eax [esi+8] +
test eax eax +
jz loc_401EF4  +
cmp eax 1 +
mov edx offset aEndiannessUnkn +
mov eax offset aLittleEndian +
cmovz edx eax +
mov ecx [esi+0Ch] +
mov eax offset aBigEndian +
test ecx ecx +
jz loc_401F10  +
cmp ecx 1 +
mov eax offset aEndiannessUnkn +
mov ecx offset aLittleEndian +
cmovz eax ecx +
mov ecx [esi] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov dword ptr [esp] offset aSHeaderSDataS +
mov [esp+4] ecx +
call printf  +
test ebx ebx +
jz loc_402002  +
mov dword ptr [esp+4] 1 +
mov ebp 2 +
mov [esp] ebx +
call sub_407140  +
test eax eax +
jnz loc_401F58  +
jmp loc_401FE4  +
add ebp 1 +
cmp ebp 5Ch +
jz loc_401F9E  +
mov eax [ebx+4] +
mov eax [eax+150h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_401F50  +
mov [esp] ebp +
add ebp 1 +
mov dword ptr [esp+4] 0 +
call sub_407DE0  +
mov dword ptr [esp] offset aS_5 +
mov [esp+4] eax +
call printf  +
cmp ebp 5Ch +
jnz loc_401F58  +
mov [esp] ebx +
call sub_405FF0  +
mov ecx [esp+20h] +
mov eax off_4733B4 +
add dword ptr [esp+20h] 4 +
mov esi [eax+ecx] +
test esi esi +
jnz loc_401EC8  +
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov ebx [esp+1Ch] +
mov eax 1 +
test ebx ebx +
jnz loc_402024  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
call sub_403EA0  +
cmp eax 5 +
jz loc_401F9E  +
mov eax [esi] +
mov [esp] eax +
call sub_401B00  +
mov dword ptr [esp+1Ch] 0 +
jmp loc_401F9E  +
***
mov [esp] edi +
call sub_401B00  +
mov dword ptr [esp+1Ch] 0 +
jmp loc_401FA6  +
***
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov dword ptr [esp] offset aColumns +
call getenv  +
test eax eax +
jz loc_402378  +
mov [esp] eax +
call atoi  +
test eax eax +
mov [esp+3Ch] eax +
jz loc_402378  +
mov dword ptr [esp+38h] 1 +
mov dword ptr [esp+28h] 0 +
mov eax [esp+28h] +
mov esi off_4733B4 +
lea ecx ds:0[eax*4] +
mov eax [esi+eax*4] +
mov [esp+2Ch] ecx +
test eax eax +
jz loc_402365  +
mov eax [eax] +
mov [esp] eax +
call strlen  +
mov ebp [esp+3Ch] +
lea ebx [eax+10h] +
mov eax [esp+28h] +
add eax 1 +
cmp ebx ebp +
mov edi eax +
mov [esp+20h] eax +
jge loc_4020D0  +
mov eax [esp+2Ch] +
mov eax [esi+eax+4] +
test eax eax +
jnz loc_4020BA  +
jmp loc_4020D0  +
add edi 1 +
mov eax [esi+edi*4] +
test eax eax +
jz loc_4020CC  +
mov eax [eax] +
mov [esp] eax +
call strlen  +
lea ebx [ebx+eax+1] +
cmp ebx ebp +
jl loc_4020B0  +
mov [esp+20h] edi +
mov dword ptr [esp+8] offset asc_47486C +
mov dword ptr [esp+4] 0Fh +
mov dword ptr [esp] offset aS_6 +
call printf  +
mov eax [esp+28h] +
cmp [esp+20h] eax +
jle loc_402355  +
mov eax off_4733B4 +
mov ecx [esp+2Ch] +
mov eax [eax+ecx] +
test eax eax +
jz loc_402347  +
mov ecx [esp+2Ch] +
mov ebx [esp+28h] +
mov edi [esp+20h] +
add ecx 4 +
mov [esp+34h] ecx +
mov esi ecx +
jmp loc_402134  +
mov eax off_4733B4 +
mov eax [eax+esi] +
add esi 4 +
test eax eax +
jz loc_40214D  +
mov eax [eax] +
add ebx 1 +
mov dword ptr [esp] offset aS_7 +
mov [esp+4] eax +
call printf  +
cmp ebx edi +
jnz loc_402125  +
mov dword ptr [esp] 0Ah +
call putchar  +
mov dword ptr [esp] 0 +
call sub_458FA0  +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+1Ch] 2 +
mov [esp+24h] eax +
jmp loc_402190  +
add dword ptr [esp+1Ch] 1 +
cmp dword ptr [esp+1Ch] 5Ch +
jz loc_402312  +
mov eax [esp+1Ch] +
mov edi offset aUnknown_0 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_407DE0  +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_402180  +
mov eax [esp+1Ch] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_407DE0  +
mov dword ptr [esp+4] 0Eh +
mov dword ptr [esp] offset aS_8 +
mov [esp+8] eax +
call printf  +
mov edi [esp+28h] +
cmp [esp+20h] edi +
jle loc_4022F6  +
mov eax off_4733B4 +
mov ecx [esp+2Ch] +
mov ebx [eax+ecx] +
test ebx ebx +
jz loc_4022F6  +
mov ebp [esp+34h] +
jmp loc_402268  +
mov eax [esi+4] +
mov edx [esp+1Ch] +
mov eax [eax+150h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_4022B4  +
mov eax [ebx] +
mov dword ptr [esp] offset aS_7 +
mov [esp+4] eax +
call printf  +
mov [esp] esi +
add edi 1 +
call sub_405FF0  +
cmp edi [esp+20h] +
jz loc_4022F6  +
mov eax off_4733B4 +
mov ebx [eax+ebp] +
add ebp 4 +
test ebx ebx +
jz loc_4022F6  +
mov eax [ebx] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_405E90  +
test eax eax +
mov esi eax +
jz loc_4022A2  +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call sub_407140  +
test eax eax +
jnz loc_402208  +
call sub_403EA0  +
cmp eax 5 +
jz loc_4022B4  +
mov eax [ebx] +
mov [esp] eax +
call sub_401B00  +
mov dword ptr [esp+30h] 0 +
mov eax [ebx] +
mov [esp] eax +
call strlen  +
test eax eax +
jz loc_4022D5  +
mov ebx eax +
mov dword ptr [esp] 2Dh +
call putchar  +
sub ebx 1 +
jnz loc_4022C4  +
mov dword ptr [esp] 20h +
call putchar  +
test esi esi +
jnz loc_402240  +
add edi 1 +
cmp edi [esp+20h] +
jnz loc_402255  +
mov dword ptr [esp] 0Ah +
call putchar  +
add dword ptr [esp+1Ch] 1 +
cmp dword ptr [esp+1Ch] 5Ch +
jnz loc_402190  +
mov edi [esp+24h] +
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov ecx [esp+30h] +
mov eax 0 +
test ecx ecx +
cmovnz eax [esp+38h] +
mov [esp+38h] eax +
mov eax [esp+20h] +
mov [esp+28h] eax +
jmp loc_40205C  +
***
mov eax ecx +
add eax 4 +
mov [esp+34h] eax +
jmp loc_40214D  +
***
mov eax [esp+2Ch] +
add eax 4 +
mov [esp+34h] eax +
jmp loc_40214D  +
***
mov edx [esp+38h] +
xor eax eax +
test edx edx +
setz al  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+3Ch] 50h +
jmp loc_40204C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 90h +
mov eax [esp+0A8h] +
mov esi [esp+0A0h] +
mov ebx [esp+0A4h] +
test eax eax +
jnz loc_4023D2  +
mov eax [ebx] +
mov [esp] esi +
mov dword ptr [esp+4] offset aS_9 +
mov [esp+8] eax +
call fprintf  +
add esp 90h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+4] +
lea edx [esp+60h] +
mov eax [eax+0FCh] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_4023B2  +
mov eax [esp+84h] +
mov [esp+28h] eax +
lea eax [esp+28h] +
mov [esp] eax +
call ctime  +
test eax eax +
jz loc_402480  +
lea edx [eax+14h] +
add eax 4 +
lea edi [esp+38h] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a_12s_4s +
mov [esp] edi +
call sprintf  +
lea eax [esp+2Dh] +
mov [esp+4] eax +
movzx eax word ptr [esp+66h] +
mov [esp] eax +
call loc_4029D0  +
mov eax [esp+78h] +
mov [esp+18h] edi +
mov dword ptr [esp+4] offset aSLdLd6luS +
mov [esp] esi +
mov [esp+14h] eax +
movsx eax word ptr [esp+6Ch] +
mov byte ptr [esp+37h] 0 +
mov [esp+10h] eax +
movsx eax word ptr [esp+6Ah] +
mov [esp+0Ch] eax +
lea eax [esp+2Eh] +
mov [esp+8] eax +
call fprintf  +
jmp loc_4023B2  +
***
mov dword ptr [esp+38h] 6D69743Ch +
lea edi [esp+38h] +
mov dword ptr [esp+3Ch] 61642065h +
mov dword ptr [esp+40h] 63206174h +
mov dword ptr [esp+44h] 7572726Fh +
mov dword ptr [esp+48h] 3E7470h +
jmp loc_402429  +
***
jmp loc_4024C0  +
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
call sub_401A30  +
mov [esp] eax +
call _mktemp  +
test eax eax +
mov ebx eax +
jz loc_402507  +
mov dword ptr [esp+8] 180h +
mov dword ptr [esp+4] 502h +
mov [esp] eax +
call _open  +
cmp eax 0FFFFFFFFh +
jz loc_402510  +
mov [esp] eax +
call _close  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_402502  +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_402502  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
call sub_401A30  +
mov [esp] eax +
call _mktemp  +
test eax eax +
mov ebx eax +
jz loc_402550  +
mov [esp] eax +
call _mkdir  +
test eax eax +
jnz loc_402550  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
lea eax [esp+1Ch] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ebx +
call j_strtoul  +
mov edx [esp+1Ch] +
cmp byte ptr [edx] 0 +
jnz loc_40258E  +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp] offset aSBadNumberS +
mov [esp+4] eax +
call sub_401C30  +
lea esi [esi+0] +
lea edi [edi+0] +
push esi  +
push ebx  +
sub esp 44h +
mov ebx [esp+50h] +
lea eax [esp+10h] +
mov [esp+4] eax +
mov [esp] ebx +
call ds:_stati64  +
test eax eax +
js loc_4025F3  +
movzx eax word ptr [esp+16h] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_402650  +
mov edx [esp+2Ch] +
mov eax [esp+28h] +
test edx edx +
js loc_40266F  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
mov esi ds:__imp__errno +
call esi  +
cmp dword ptr [eax] 2 +
jz loc_402630  +
call esi  +
mov eax [eax] +
mov [esp] eax +
call strerror  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aWarningCould_0 +
mov [esp+8] eax +
call sub_401C60  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4025ED  +
***
mov [esp+4] ebx +
mov dword ptr [esp] offset aSNoSuchFile_0 +
call sub_401C60  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4025ED  +
***
mov [esp+4] ebx +
mov dword ptr [esp] offset aWarningSIsNotA +
call sub_401C60  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4025ED  +
***
mov [esp+4] ebx +
mov dword ptr [esp] offset aWarningSHasNeg +
call sub_401C60  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4025ED  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_402754  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_40274A  +
mov esi [eax] +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebp [ebx] +
mov [esp+1Ch+var_1C] ebp +
mov edi eax +
call strlen  +
lea edi [edi+eax+3] +
mov eax ds:dword_496050 +
cmp edi eax +
jbe loc_402724  +
test eax eax +
jnz loc_402730  +
mov eax edi +
shr eax 1 +
add edi eax +
mov [esp+1Ch+var_1C] edi +
mov ds:dword_496050 edi +
call sub_408000  +
test eax eax +
mov ds:dword_49604C eax +
jz loc_402740  +
mov edx [ebx+8Ch] +
mov ebp [ebx] +
mov esi [edx] +
mov [esp+1Ch+var_10] ebp +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] offset aSS_2 +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
mov eax ds:dword_49604C +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_49604C +
jmp loc_4026FF  +
mov eax ds:dword_49604C +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_4026D8  +
mov ds:dword_496050 0 +
mov eax [ebx] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] 25Eh +
mov [esp+1Ch+var_18] offset a____BinutilsBi +
mov [esp+1Ch+var_1C] offset aAbfdNull +
call loc_4705B0  +
jmp loc_4026A3  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov edi [esp+38h] +
mov esi [esp+3Ch] +
call sub_403EA0  +
mov [esp] eax +
call sub_403EB0  +
mov ebp eax +
mov eax ds:_iob +
add eax 20h +
mov [esp] eax +
call fflush  +
mov eax ds:_iob +
add eax 40h +
mov [esp+4] eax +
mov eax ds:dword_49A850 +
mov [esp] eax +
call fputs  +
mov eax [esp+34h] +
test eax eax +
jz loc_402880  +
test ebx ebx +
jz loc_4028A1  +
test edi edi +
jz loc_402880  +
mov eax [edi] +
test eax eax +
jz loc_402880  +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aSS_3 +
add eax 40h +
mov [esp] eax +
call fprintf  +
test esi esi +
jz loc_402859  +
mov eax ds:_iob +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_4749A1 +
add eax 40h +
mov [esp+0Ch] eax +
call fwrite  +
lea eax [esp+40h] +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+4] esi +
add eax 40h +
mov [esp] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aS_10 +
add eax 40h +
mov [esp] eax +
call fprintf  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aS_11 +
add eax 40h +
mov [esp] eax +
call fprintf  +
jmp loc_402811  +
***
mov eax [esp+34h] +
mov [esp] eax +
call sub_402690  +
mov ebx eax +
jmp loc_4027DF  +
***
mov eax [esp+4] +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_402916  +
cmp dl 2Fh +
jz loc_402916  +
test dl dl +
jnz loc_402910  +
test dl dl +
jz loc_402906  +
cmp dl 2Eh +
lea esi [esi+0] +
jz loc_402937  +
cmp dl 2Fh +
jz loc_402919  +
cmp dl 5Ch +
jnz loc_4028FC  +
lea esi [esi+0] +
jmp loc_402919  +
cmp dl 5Ch +
jz loc_402920  +
cmp dl 2Fh +
jz loc_402920  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_4028F2  +
mov eax 1 +
retn   +
***
cmp byte ptr [eax+1] 3Ah +
jnz loc_4028D5  +
xor eax eax +
retn   +
***
movzx edx byte ptr [eax] +
lea esi [esi+0] +
cmp dl 2Fh +
jnz loc_402969  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_402925  +
cmp dl 2Fh +
jz loc_402925  +
jmp loc_4028D5  +
***
movzx edx byte ptr [eax+1] +
cmp dl 2Eh +
jz loc_40294D  +
add eax 1 +
test dl dl +
jnz loc_4028E2  +
mov eax 1 +
retn   +
***
movzx edx byte ptr [eax+2] +
lea ecx [eax+2] +
test dl dl +
jz loc_402916  +
cmp dl 2Fh +
jz loc_402916  +
cmp dl 5Ch +
jz loc_402916  +
mov eax ecx +
jmp loc_4028E2  +
***
cmp dl 5Ch +
jz loc_402925  +
nop   +
jmp loc_4028D5  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset aGnuBinutils2_0 +
mov [esp+1Ch+var_1C] offset aGnuSS +
mov [esp+1Ch+var_18] eax +
call printf  +
mov [esp+1Ch+var_1C] offset aCopyrightC2015 +
call puts  +
mov [esp+1Ch+var_1C] offset aThisProgramIsF +
call puts  +
mov [esp+1Ch+var_1C] 0 +
call exit  +
push ebx  +
mov edx [esp+8] +
mov ecx 64h +
mov eax [esp+0Ch] +
mov ebx edx +
and ebx 0F000h +
cmp ebx 4000h +
jz loc_402A1B  +
cmp ebx 3000h +
mov ecx 62h +
jz loc_402A1B  +
cmp ebx 2000h +
mov ecx 63h +
jz loc_402A1B  +
cmp ebx 1000h +
mov ecx 70h +
mov ebx 2Dh +
cmovnz ecx ebx +
mov [eax] cl +
mov ecx edx +
and ecx 100h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+1] cl +
mov ecx edx +
and ecx 80h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB6h +
add ecx 77h +
mov [eax+2] cl +
mov ecx edx +
and ecx 40h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB5h +
add ecx 78h +
mov [eax+3] cl +
mov ecx edx +
and ecx 20h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+4] cl +
mov ecx edx +
and ecx 10h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB6h +
add ecx 77h +
mov [eax+5] cl +
mov ecx edx +
and ecx 8 +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB5h +
add ecx 78h +
mov [eax+6] cl +
mov ecx edx +
and ecx 4 +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+7] cl +
mov ecx edx +
and ecx 2 +
cmp ecx 1 +
sbb ecx ecx +
and edx 1 +
and ecx 0FFFFFFB6h +
add ecx 77h +
cmp edx 1 +
sbb edx edx +
and edx 0FFFFFFB5h +
add edx 78h +
mov [eax+8] cl +
mov [eax+9] dl +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax dword_4730E0 +
mov [edx+4] eax +
mov eax [esi+6Ch] +
mov [edx+94h] esi +
mov [edx+8] eax +
mov eax [esi+4] +
mov eax [eax+9Ch] +
mov [esp+0Ch+var_8] edx +
mov [esp+0Ch+var_C] esi +
call eax  +
test eax eax +
jz loc_402B40  +
mov eax [esi+68h] +
add dword ptr [esi+6Ch] 1 +
add dword_4730E0 1 +
test eax eax +
mov dword ptr [ebx+0Ch] 0 +
jz loc_402B30  +
mov [ebx+10h] eax +
mov [eax+0Ch] ebx +
mov [esi+68h] ebx +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ebx+10h] 0 +
mov [esi+64h] ebx +
jmp loc_402B22  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
test eax eax +
jz loc_402BC5  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_C] edx +
call sub_409320  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_402BAA  +
lea edi [edx+10h] +
mov ebx 0A8h +
test edi 1 +
jnz loc_402BE0  +
test edi 2 +
jnz loc_402BF0  +
mov ecx ebx +
xor eax eax +
shr ecx 2 +
test bl 2 +
stos   +
jnz loc_402BB5  +
and ebx 1 +
jnz loc_402BB0  +
mov eax edx +
add esp 14h +
pop ebx  +
pop edi  +
retn   +
mov byte ptr [edi] 0 +
jmp loc_402BA8  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and ebx 1 +
jz loc_402BA8  +
jmp loc_402BB0  +
mov [esp+14h+var_10] 0B8h +
mov [esp+14h+var_14] ebx +
call sub_409270  +
test eax eax +
jnz loc_402B61  +
xor eax eax +
jmp loc_402BAA  +
mov byte ptr [edx+10h] 0 +
lea edi [edx+11h] +
mov bl 0A7h +
jmp loc_402B8D  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub ebx 2 +
jmp loc_402B95  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov ebx [esp+24h] +
mov edx [eax+4] +
mov edx [edx+10Ch] +
mov [esp] eax +
call edx  +
test eax eax +
mov [ebx+98h] eax +
jz loc_402C50  +
mov edx [ebx] +
mov dword ptr [eax+8] 0 +
mov [eax+10h] ebx +
mov dword ptr [eax+0Ch] 100h +
mov [eax+4] edx +
lea eax [ebx+98h] +
mov [ebx+9Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+54h] +
mov eax [ebx+48h] +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
lea edx ds:0[ecx*4] +
mov dword ptr [ebx+6Ch] 0 +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call memset  +
mov dword ptr [ebx+58h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_409000  +
test eax eax +
jz loc_402CE5  +
add eax 10h +
add esp 1Ch +
retn   +
xor eax eax +
jmp loc_402CE1  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
mov ebx [eax-10h] +
mov ebp [eax-8] +
mov edi [eax] +
test ebx ebx +
jnz loc_402D16  +
jmp loc_402D40  +
mov ebx [ebx] +
test ebx ebx +
jz loc_402D40  +
cmp [ebx+8] ebp +
jnz loc_402D10  +
mov [esp+1Ch+var_18] edi +
mov eax [ebx+4] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_402D10  +
add esp 1Ch +
lea eax [ebx+10h] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jz loc_402D80  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_402D80  +
lea eax [esi+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_409000  +
test eax eax +
jz loc_402D44  +
add esp 1Ch +
add eax 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_409000  +
test eax eax +
mov edx eax +
jz loc_402DEA  +
test byte ptr [edx+26h] 10h +
lea eax [eax+10h] +
jz loc_402DD6  +
jmp loc_402DEC  +
test byte ptr [eax+16h] 10h +
jnz loc_402DEC  +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_402CF0  +
test eax eax +
jnz loc_402DD0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov esi [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
add eax 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_409000  +
test eax eax +
mov ebx eax +
jz loc_402E78  +
mov edi [eax+8] +
mov eax edi +
jmp loc_402E39  +
mov ebx [ebx] +
test ebx ebx +
jz loc_402E78  +
mov eax [ebx+8] +
cmp eax edi +
jnz loc_402E30  +
mov [esp+4] esi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_402E30  +
mov eax [esp+3Ch] +
lea ebp [ebx+10h] +
mov [esp+4] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
test eax eax +
jz loc_402E30  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor ebp ebp +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
mov [esp+8] edx +
lea ebp [edx+1] +
mov dword ptr [esp+4] offset a_D +
mov [esp] edi +
call sprintf  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] esi +
call sub_409000  +
test eax eax +
jnz loc_402EF0  +
mov eax [esp+38h] +
test eax eax +
jz loc_402F50  +
mov eax [esp+38h] +
mov [eax] ebp +
mov eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 1 +
jmp loc_402EE0  +
***
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
jmp loc_402F41  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
test byte ptr [ebx+2Bh] 10h +
jnz loc_403070  +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_403000  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_402FE2  +
mov edi offset off_473100 +
mov eax [ebx+4] +
mov eax [eax+9Ch] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_403066  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_403007  +
mov edi offset off_4731A8 +
jmp loc_402FBE  +
mov edi offset off_473250 +
jmp loc_402FBE  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebp +
cmps   +
mov edi offset off_4732F8 +
setnbe dl  +
setb al  +
cmp dl al +
jz loc_402FBE  +
lea eax [ebx+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call sub_409000  +
test eax eax +
mov ecx eax +
jz loc_403066  +
mov esi [ecx+10h] +
lea edx [eax+10h] +
mov eax edx +
test esi esi +
jnz loc_402FDA  +
mov [ecx+10h] ebp +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_402AD0  +
xor eax eax +
jmp loc_402FDA  +
mov [esp+1Ch+var_1C] 5 +
call sub_4040F0  +
xor eax eax +
jmp loc_402FDA  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
test byte ptr [esi+2Bh] 10h +
jnz loc_403125  +
lea edx [esi+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] edx +
call sub_409000  +
test eax eax +
mov ebx eax +
jz loc_403131  +
mov eax [eax+10h] +
mov edx [esp+2Ch+var_10] +
test eax eax +
jz loc_403120  +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] 0 +
call sub_402B50  +
test eax eax +
jz loc_403131  +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
lea edx [eax+10h] +
mov [ebx] eax +
mov [edx+14h] edi +
mov eax esi +
mov [edx] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_402AD0  +
lea edx [ebx+10h] +
jmp loc_40310A  +
mov [esp+2Ch+var_2C] 5 +
call sub_4040F0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_403090  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_8] +
test byte ptr [ebp+2Bh] 10h +
jnz loc_403227  +
mov [esp+2Ch+var_10] edx +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_4031FF  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_4031FF  +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_4031FF  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_4031FF  +
lea eax [ebp+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call sub_409000  +
test eax eax +
jz loc_4031FF  +
mov edx [eax+10h] +
test edx edx +
mov edx [esp+2Ch+var_10] +
jz loc_403210  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [eax+24h] edx +
lea edx [eax+10h] +
mov [eax+10h] ebx +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_402AD0  +
mov [esp+2Ch+var_2C] 5 +
call sub_4040F0  +
jmp loc_4031FF  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_403170  +
add esp 1Ch +
retn   +
***
mov eax dword_4730E0 +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
mov [eax+14h] edx +
mov eax 1 +
retn   +
***
jmp sub_4032A0  +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov [edx] eax +
sub edx 10h +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov [esp+arg_8] edx +
add eax 48h +
mov [esp+arg_0] eax +
jmp sub_409150  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_8] +
mov edi [esi+64h] +
test edi edi +
jz loc_403301  +
mov [esp+1Ch+var_18] edi +
add ebx 1 +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] esi +
call [esp+1Ch+arg_4]  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_4032E8  +
cmp [esi+6Ch] ebx +
jnz loc_40330E  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aBfd_map_over_s +
mov [esp+1Ch+var_18] 573h +
mov [esp+1Ch+var_1C] offset a____Binutils_3 +
call sub_404070  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+48h+var_18] +
mov ebp [esp+48h+var_14] +
mov edi [esp+48h+var_10] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_403357  +
jmp loc_403372  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_403372  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] esi +
call ebp  +
test eax eax +
jz loc_403350  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
test byte ptr [eax+2Bh] 10h +
jnz loc_4033A1  +
mov eax [esp+1Ch+arg_4] +
mov edx [esp+1Ch+arg_8] +
mov [eax+24h] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_C] +
mov edi [esp+2Ch+arg_10] +
mov ebx [esp+2Ch+arg_14] +
test byte ptr [ebp+15h] 1 +
jz loc_403492  +
mov ecx [ebp+24h] +
cmp ecx esi +
jb loc_403400  +
cmp ecx ebx +
jb loc_403400  +
mov eax ebx +
xor edx edx +
add eax esi +
adc edx edi +
cmp edx 0 +
jl loc_403416  +
jg loc_403400  +
cmp eax ecx +
jbe loc_403416  +
nop   +
mov [esp+2Ch+var_2C] 11h +
call sub_4040F0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
test byte ptr [eax+28h] 10h +
jz loc_4034A8  +
mov eax [ebp+6Ch] +
test eax eax +
jz loc_403447  +
add eax esi +
cmp eax [esp+2Ch+arg_8] +
jz loc_403447  +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx [esp+2Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+154h] +
mov [esp+2Ch+var_1C] edi +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_18] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40340E  +
mov eax [esp+2Ch+arg_0] +
or byte ptr [eax+2Bh] 10h +
add esp 2Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0Eh +
call sub_4040F0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 5 +
call sub_4040F0  +
xor eax eax +
jmp loc_40340E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_4] +
mov eax [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_C] +
mov ebx [edx+14h] +
mov [esp+2Ch+var_20] eax +
mov ebp [esp+2Ch+arg_10] +
mov ecx [esp+2Ch+arg_14] +
test bl 80h +
jnz loc_403592  +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 10h +
jz loc_403556  +
mov eax [edx+28h] +
test eax eax +
jz loc_403556  +
cmp eax edi +
jb loc_403540  +
cmp eax ecx +
jb loc_403540  +
mov [esp+2Ch+var_1C] ecx +
add [esp+2Ch+var_1C] edi +
mov [esp+2Ch+var_18] 0 +
adc [esp+2Ch+var_18] ebp +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] 0 +
jl loc_403560  +
jg loc_403540  +
mov eax [esp+2Ch+var_14] +
cmp [esp+2Ch+var_1C] eax +
jbe loc_403560  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] 11h +
call sub_4040F0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+24h] +
jmp loc_403501  +
test ecx ecx +
jz loc_4035B7  +
test bh 1 +
jz loc_403592  +
test bh 40h +
jz loc_4035C0  +
mov eax [edx+6Ch] +
test eax eax +
jz loc_4035F0  +
add eax edi +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] eax +
call memmove  +
mov eax 1 +
jmp loc_40354E  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
jmp loc_40354E  +
mov eax [esi+4] +
mov eax [eax+0A0h] +
mov [esp+2Ch+arg_C] edi +
mov edi [esp+2Ch+var_20] +
mov [esp+2Ch+arg_10] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_14] ecx +
mov [esp+2Ch+arg_8] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
and bh 0BFh +
mov [edx+14h] ebx +
mov [esp+2Ch+var_2C] 5 +
call sub_4040F0  +
xor eax eax +
jmp loc_40354E  +
***
mov eax [esp+arg_8] +
mov dword ptr [eax] 0 +
jmp sub_409760  +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
retn   +
***
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov esi [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [eax+8] +
jnz loc_4036C6  +
test edi 2 +
jnz loc_4036D6  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_4036AC  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_4036B4  +
mov byte ptr [edi] 0 +
mov eax [ebx] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_403695  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_403695  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+8] +
mov eax [esi+4] +
test eax eax +
jz loc_40370B  +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+var_14] esi +
call free  +
xor eax eax +
mov dword ptr [ebx+8] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_C] +
mov ecx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
test esi esi +
mov ebx [ecx+8] +
jz loc_403753  +
add eax [ecx+18h] +
adc edx [ecx+1Ch] +
test edx edx +
js loc_4037DD  +
mov edi [ebx] +
mov esi eax +
cmp eax edi +
jbe loc_40377B  +
test byte ptr [ecx+28h] 10h +
jz loc_4037B4  +
add edi 7Fh +
add esi 7Fh +
and edi 0FFFFFF80h +
and esi 0FFFFFF80h +
cmp edi esi +
mov [ebx] eax +
jb loc_403784  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call sub_408150  +
test eax eax +
mov [ebx+4] eax +
jz loc_403801  +
sub esi edi +
add edi eax +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
call memset  +
jmp loc_40377B  +
mov [ecx+18h] edi +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov [esp+10h+var_10] 12h +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
jmp loc_40377D  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_40377D  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
mov dword ptr [ebx] 0 +
jmp loc_40377D  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ecx [esp+38h+arg_8] +
mov edi [eax+18h] +
mov ebp [eax+1Ch] +
mov ebx [eax+8] +
mov eax ecx +
add eax edi +
adc edx ebp +
cmp edx 0 +
mov esi [ebx] +
ja loc_40392B  +
cmp eax esi +
jbe loc_403990  +
cmp esi edi +
jb loc_403977  +
sub esi edi +
mov [esp+38h+var_20] esi +
mov [esp+38h+var_1C] 0 +
mov [esp+38h+var_38] 12h +
call sub_4040F0  +
mov eax [esp+38h+arg_0] +
mov eax [eax+18h] +
add eax [ebx+4] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_38] eax +
call memcpy  +
mov eax [esp+38h+var_20] +
mov edx [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_20] 0 +
xor esi esi +
mov [esp+38h+var_1C] 0 +
jmp loc_40393D  +
mov esi ecx +
mov eax edi +
mov [esp+38h+var_20] ecx +
mov [esp+38h+var_1C] 0 +
jmp loc_403950  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+88h] +
test eax eax +
jz loc_403A28  +
mov ecx [esi+18h] +
xor edx edx +
mov ebx [esi+1Ch] +
mov ebp [eax+4] +
mov eax edi +
add eax ecx +
adc edx ebx +
cmp edx 0 +
jbe loc_403A70  +
cmp ebx 0 +
jbe loc_403A20  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx ebp +
jnb loc_403A14  +
mov edi ebp +
sub edi ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_403A80  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_403A16  +
mov ecx edx +
xor ebx ebx +
add [esi+18h] ecx +
mov eax edx +
adc [esi+1Ch] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax ebp +
ja loc_403A0F  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_403A2F  +
nop   +
lea esi [esi+0] +
xor ecx ecx +
xor ebx ebx +
xor edx edx +
jmp loc_403A5A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_403B00  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_403AD3  +
mov ecx eax +
xor ebx ebx +
add [esi+18h] ecx +
adc [esi+1Ch] ebx +
cmp ebp edi +
jz loc_403AEF  +
call ds:__imp__errno  +
mov dword ptr [eax] 1Ch +
mov [esp+1Ch+var_1C] 1 +
call sub_4040F0  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor ebx ebx +
xor ebp ebp +
jmp loc_403ACD  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_403B60  +
mov eax [eax+8] +
mov edi esi +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esi+8Ch] +
test ecx ecx +
jnz loc_403B3B  +
jmp loc_403B4B  +
mov edi ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
sub eax [edi+38h] +
sbb edx [edi+3Ch] +
test ebx ebx +
jnz loc_403B37  +
mov ebx edx +
mov ecx eax +
mov [esi+18h] ecx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor ebx ebx +
xor ecx ecx +
mov [esi+18h] ecx +
xor eax eax +
xor edx edx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_403B90  +
mov edx [edx+14h] +
jmp edx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_403BC6  +
mov ecx [esp+1Ch+arg_4] +
mov edx [edx+18h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] ecx +
call edx  +
test eax eax +
js loc_403BD0  +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
nop   +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_4040F0  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_C] 1 +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
jbe loc_403C1A  +
mov [esp+1Ch+var_18] 11Fh +
mov [esp+1Ch+var_1C] offset a____Binutils_1 +
call sub_404040  +
cmp [esp+1Ch+arg_C] 1 +
jz loc_403D10  +
mov eax [esp+1Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 2 +
jz loc_403C46  +
mov eax [esp+1Ch+arg_0] +
mov ebp [eax+8Ch] +
test ebp ebp +
jz loc_403D34  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jnz loc_403CC3  +
mov eax [esp+1Ch+arg_0] +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_403CC3  +
mov ebp [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
jmp loc_403C6A  +
mov ebp ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
add eax [ebp+38h] +
adc edx [ebp+3Ch] +
test ebx ebx +
jnz loc_403C66  +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_403CD2  +
mov ecx [ecx+0Ch] +
mov ebx [esp+1Ch+arg_C] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_10] ebx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
test eax eax +
mov ebx eax +
jnz loc_403CD7  +
mov edx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_403D24  +
mov [eax+18h] esi +
mov [eax+1Ch] edi +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
mov ecx [ebx+0Ch] +
test ecx ecx +
jnz loc_403C85  +
mov ebx 0FFFFFFFFh +
mov ebp ds:__imp__errno +
call ebp  +
mov edi [eax] +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_403B10  +
cmp edi 16h +
jz loc_403D60  +
mov [esp+1Ch+var_1C] 1 +
call sub_4040F0  +
call ebp  +
mov [eax] edi +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
xor eax eax +
or edx edi +
jnz loc_403C25  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [eax+18h] esi +
adc [eax+1Ch] edi +
add esp 1Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_C] +
mov eax esi +
test ebx ebx +
jnz loc_403D55  +
mov edx [esp+1Ch+arg_0] +
xor eax [edx+18h] +
or eax [edx+1Ch] +
jnz loc_403CC3  +
xor eax eax +
jmp loc_403CBB  +
mov edx edi +
jmp loc_403C7A  +
mov [esp+1Ch+var_1C] 12h +
call sub_4040F0  +
mov eax ebx +
jmp loc_403CBB  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 4 +
jnz loc_403DC0  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_403DB5  +
mov eax [eax+18h] +
lea edx [esp+10h] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_403DB5  +
mov eax [esp+34h] +
mov [ebx+20h] eax +
add esp 48h +
pop ebx  +
retn   +
***
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+20h] +
add esp 48h +
pop ebx  +
retn   +
***
sub esp 4Ch +
mov eax [esp+50h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_403E00  +
mov edx [edx+18h] +
lea ecx [esp+10h] +
mov [esp+4] ecx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_403E00  +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
add esp 4Ch +
retn   +
***
xor eax eax +
xor edx edx +
add esp 4Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 18h +
mov eax [esp+2Ch] +
mov ecx [esp+30h] +
mov edi [esp+40h] +
mov ebp [esp+44h] +
mov edx [eax+0Ch] +
mov [esp] ecx +
mov [esp+4] edi +
mov [esp+8] ebp +
test edx edx +
jz loc_403E45  +
mov edx [edx+1Ch] +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
add esp 18h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax off_4733A4 +
jmp eax  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
retn   +
***
mov eax [esp+28h+arg_0] +
cmp eax 14h +
jz loc_403EE0  +
cmp eax 1 +
jz loc_403F21  +
cmp eax 15h +
mov edx 15h +
cmovbe edx eax +
mov eax ds:off_474FC0[edx*4] +
add esp 28h +
pop ebx  +
retn   +
mov eax ds:dword_496058 +
mov [esp+28h+var_28] eax +
call sub_403EB0  +
mov ebx eax +
mov eax ds:dword_49605C +
mov eax [eax] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] offset aErrorReadingSS +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_470C30  +
cmp eax 0FFFFFFFFh +
mov eax ebx +
cmovnz eax [esp+28h+var_C] +
add esp 28h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call sub_459090  +
jmp loc_403ED4  +
***
mov eax ds:_iob +
mov ebx [esp+18h+arg_0] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
test ebx ebx +
mov eax ds:dword_496060 +
jz loc_403F66  +
cmp byte ptr [ebx] 0 +
jnz loc_403FA0  +
mov [esp+18h+var_18] eax +
call sub_403EB0  +
mov [esp+18h+var_14] offset aS_12 +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
mov [esp+18h+var_18] eax +
call sub_403EB0  +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aSS_4 +
mov [esp+18h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
jmp loc_403F8A  +
***
mov eax [esp+arg_0] +
mov ds:dword_496054 eax +
retn   +
***
mov eax off_4733A4 +
retn   +
***
mov edx [esp+4] +
mov eax off_4733A0 +
mov off_4733A0 edx +
retn   +
***
mov eax off_4733A0 +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [eax+48h] edx +
mov edx [esp+10h] +
mov [eax+4Ch] edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] offset aGnuBinutils2_2 +
mov [esp+1Ch+var_1C] offset aBfdSAssertionF +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] eax +
call off_4733A0  +
add esp 1Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_4040BD  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternalEr +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_4733A4  +
mov [esp+2Ch+var_2C] offset aPleaseReportTh +
call off_4733A4  +
mov [esp+2Ch+var_2C] 1 +
call _exit  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternal_0 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_4733A4  +
jmp loc_4040A4  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax 14h +
mov ds:dword_496060 eax +
jz loc_404105  +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov ds:dword_49605C eax +
mov eax [esp+1Ch+arg_8] +
cmp eax 13h +
mov ds:dword_496058 eax +
jbe loc_404101  +
mov [esp+1Ch+var_14] offset aBfd_set_error +
mov [esp+1Ch+var_18] 203h +
mov [esp+1Ch+var_1C] offset a____BinutilsBf +
call sub_404070  +
nop   +
lea esi [esi+0] +
sub esp 1Ch +
mov edx [esp+38h+var_18] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_404160  +
mov eax [edx+4] +
mov eax [eax+140h] +
add esp 1Ch +
jmp eax  +
mov [esp+38h+var_38] 5 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov edx [esp+14h+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_4041A4  +
mov eax [edx+4] +
mov eax [eax+144h] +
add esp 14h +
pop ebx  +
pop esi  +
jmp eax  +
mov [esp+14h+var_14] 5 +
call sub_4040F0  +
add esp 14h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov ecx [esp+24h] +
movzx edx byte ptr [eax+28h] +
mov ebx edx +
and ebx 7 +
cmp bl 1 +
jnz loc_404217  +
and edx 8 +
jnz loc_404204  +
mov edx [eax+28h] +
mov ebx ecx +
and ebx 3FFFFh +
shl ebx 5 +
and edx 0FF80001Fh +
or edx ebx +
mov [eax+28h] edx +
mov eax [eax+4] +
mov edx [eax+10h] +
and edx ecx +
cmp edx ecx +
jz loc_404230  +
mov dword ptr [esp] 5 +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 41Ch +
mov eax ds:_iob +
mov edi [esp+41Ch+arg_0] +
add eax 20h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
mov eax ds:dword_496054 +
test eax eax +
jz loc_40452C  +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
mov [esp+41Ch+var_418] offset aS +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fprintf  +
lea eax [esp+41Ch+arg_4] +
mov ebp 3E7h +
mov [esp+41Ch+var_41C] edi +
mov [esp+41Ch+var_400] eax +
call strlen  +
sub ebp eax +
cmp ebp 3E8h +
ja loc_404599  +
lea eax [esp+41Ch+var_3F4] +
mov ecx edi +
mov esi edi +
mov [esp+41Ch+var_408] eax +
lea esi [esi+0] +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] ecx +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_40440A  +
movzx eax byte ptr [eax+1] +
test al al +
jz loc_40440A  +
sub eax 41h +
cmp al 1 +
lea ecx [ebx+2] +
ja loc_4042C0  +
mov esi ebx +
sub esi edi +
mov [esp+41Ch+var_418] edi +
mov edi [esp+41Ch+var_408] +
mov [esp+41Ch+var_414] esi +
mov [esp+41Ch+var_404] ecx +
mov [esp+41Ch+var_41C] edi +
call memcpy  +
mov ecx [esp+41Ch+var_404] +
test ebp ebp +
lea edx [edi+esi] +
mov edi ecx +
jnz loc_404331  +
lea eax [edx+2] +
mov byte ptr [edx] 2Ah +
lea esi [esp+41Ch+var_3F4] +
mov [esp+41Ch+var_408] eax +
mov byte ptr [edx+1] 2Ah +
mov byte ptr [edx+2] 0 +
jmp loc_4042C0  +
mov eax [esp+41Ch+var_400] +
cmp byte ptr [ebx+1] 42h +
lea ebx [eax+4] +
mov eax [eax] +
jz loc_40448E  +
test eax eax +
jz loc_4045A5  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_40436E  +
mov ecx [ecx+4] +
mov ecx [ecx+4] +
cmp ecx 5 +
jz loc_4044D5  +
cmp ecx 2 +
jz loc_4044F5  +
mov eax [eax] +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_414] offset aS_4 +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_408] edx +
call sub_403E70  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
mov [esp+41Ch+var_41C] edx +
add ebp 2 +
xor esi esi +
mov [esp+41Ch+var_408] edx +
call strlen  +
mov edx [esp+41Ch+var_408] +
sub ebp eax +
lea ebx [edx+eax] +
mov eax edx +
jmp loc_4043B8  +
add eax 1 +
add esi 1 +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] eax +
call strchr  +
test eax eax +
jnz loc_4043B2  +
lea eax [ebx+esi] +
cmp ebp esi +
mov [esp+41Ch+var_408] eax +
jb loc_404465  +
sub ebp esi +
test esi esi +
jnz loc_4043E6  +
jmp loc_4043FF  +
sub ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 25h +
mov [ebx+esi] al +
jnz loc_4043E3  +
sub esi 1 +
sub ebx 1 +
mov byte ptr [ebx+esi+1] 25h +
test esi esi +
jnz loc_4043E6  +
mov ecx edi +
lea esi [esp+41Ch+var_3F4] +
jmp loc_4042C0  +
lea eax [esp+41Ch+var_3F4] +
cmp esi eax +
jz loc_404559  +
mov eax [esp+41Ch+var_400] +
mov [esp+41Ch+var_418] esi +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+41Ch+var_41C] 0Ah +
add eax 40h +
mov [esp+41Ch+var_418] eax +
call fputc  +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
add esp 41Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
sub eax ebp +
mov edx eax +
neg edx  +
add [esp+41Ch+var_408] edx +
add ebx edx +
xor edx edx +
cmp byte ptr [ebx+eax-1] 25h +
setz dl  +
sub esi edx +
sub eax 1 +
jnz loc_404473  +
mov byte ptr [ebx] 0 +
xor ebp ebp +
jmp loc_4043DD  +
test eax eax +
jz loc_40457D  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_40436E  +
mov esi [eax] +
mov eax [ecx] +
mov [esp+41Ch+var_414] offset aSS +
mov [esp+41Ch+var_40C] esi +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_408] edx +
call sub_403E70  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
jmp loc_404394  +
mov ecx [eax+8Ch] +
mov esi [ecx+7Ch] +
test esi esi +
jz loc_40436E  +
test byte ptr [eax+17h] 2 +
jnz loc_40436E  +
mov ecx [ecx+74h] +
jmp loc_404510  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_40436E  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jz loc_40436E  +
mov ecx [ecx] +
test ecx ecx +
jz loc_40436E  +
mov eax [eax] +
mov [esp+41Ch+var_40C] ecx +
mov [esp+41Ch+var_414] offset aSS_0 +
mov [esp+41Ch+var_410] eax +
jmp loc_4044B8  +
mov eax ds:_iob +
mov [esp+41Ch+var_414] 5 +
mov [esp+41Ch+var_418] 1 +
mov [esp+41Ch+var_41C] offset aBfd +
add eax 40h +
mov [esp+41Ch+var_410] eax +
call fwrite  +
jmp loc_40428A  +
mov [esp+41Ch+var_41C] edi +
call strlen  +
mov [esp+41Ch+var_418] edi +
add eax 1 +
mov [esp+41Ch+var_414] eax +
mov eax [esp+41Ch+var_408] +
mov [esp+41Ch+var_41C] eax +
call memcpy  +
jmp loc_404416  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2BAh +
mov [esp+41Ch+var_41C] offset a____BinutilsBf +
call sub_404070  +
mov [esp+41Ch+var_41C] 1 +
call _exit  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2CAh +
mov [esp+41Ch+var_41C] offset a____BinutilsBf +
call sub_404070  +
jmp loc_4045D0  +
sub esp 1Ch +
mov eax [esp+438h+var_418] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_4045F7  +
mov [esp+438h+var_438] eax +
call sub_407D20  +
cmp eax 21h +
sbb eax eax +
add esp 1Ch +
and eax 0FFFFFFE0h +
add eax 40h +
retn   +
mov eax [edx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4046F7  +
mov edx [eax] +
mov ecx 9 +
mov edi offset aCoffGo32 +
mov eax 1 +
mov esi edx +
cmps   +
setnbe bl  +
setb cl  +
cmp bl cl +
jz loc_4046F0  +
mov edi offset aPeI386 +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_4046F0  +
mov edi offset aPeiI386 +
mov ecx 9 +
mov esi edx +
cmps   +
jz loc_4046F0  +
mov edi offset aPeX8664 +
mov ecx 0Ah +
mov esi edx +
cmps   +
jz loc_4046F0  +
mov edi offset aPeiX8664 +
mov ecx 0Bh +
mov esi edx +
cmps   +
jz loc_4046F0  +
mov edi offset aPeArmWinceLitt +
mov ecx 14h +
mov esi edx +
cmps   +
jz loc_4046F0  +
mov edi offset aPeiArmWinceLit +
mov ecx 15h +
mov esi edx +
cmps   +
jz loc_4046F0  +
mov edi offset aAixcoffRs6000 +
mov ecx 0Fh +
mov esi edx +
cmps   +
jz loc_4046F0  +
mov esi edx +
mov edi offset aMachO +
mov ecx 6 +
cmps   +
setnbe al  +
setb dl  +
sub eax edx +
movsx eax al +
test eax eax +
jz loc_4046F0  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
or eax 0FFFFFFFFh +
nop   +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
shr al 7 +
movzx eax al +
retn   +
***
jmp sub_404720  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov [eax+74h] edx +
mov eax 1 +
retn   +
***
jmp loc_404740  +
mov ecx [esp+4] +
xor eax eax +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 1 +
jz loc_404754  +
retn   +
***
mov edx [ecx+4] +
mov edx [edx+4] +
cmp edx 3 +
jz loc_404771  +
cmp edx 5 +
jnz locret_404752  +
mov eax [ecx+0A0h] +
mov eax [eax+210h] +
retn   +
***
mov eax [ecx+0A0h] +
mov eax [eax+1Ch] +
retn   +
***
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jz loc_404830  +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+4] +
cmp eax 3 +
jz loc_404854  +
cmp eax 5 +
jnz loc_404826  +
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+20Ch] ecx +
add esp 1Ch +
retn   +
***
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+18h] ecx +
jmp loc_404826  +
***
push esi  +
push ebx  +
mov ecx [esp+arg_8] +
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
mov esi [esp+arg_C] +
cmp dword ptr [ecx+4] 1 +
mov edi [esp+arg_10] +
mov eax edx +
mov ebp [esp+arg_14] +
jnz loc_4048C2  +
mov eax [ecx+10h] +
mov eax [eax+94h] +
test eax eax +
cmovz eax edx +
mov eax [eax+4] +
mov eax [eax+15Ch] +
mov [esp+arg_14] ebp +
mov [esp+arg_10] edi +
mov [esp+arg_C] esi +
mov [esp+arg_8] ecx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_404910  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+40h] +
mov [esp] ebx +
lea edi ds:0FFFFFFFCh[eax*4] +
lea eax [edi+2Ch] +
mov [esp+4] eax +
call sub_406370  +
test eax eax +
mov esi eax +
jz loc_4049E0  +
mov eax [esp+24h] +
movzx edx byte ptr [esi+20h] +
movzx ecx byte ptr [esp+28h] +
mov [esi+4] eax +
mov eax [esp+2Ch] +
and edx 0FFFFFFFCh +
and ecx 1 +
or edx ecx +
movzx ecx byte ptr [esp+38h] +
mov [esi+8] eax +
mov eax [esp+34h] +
and ecx 1 +
mov [esi+0Ch] eax +
movzx eax byte ptr [esp+30h] +
shl ecx 4 +
and eax 1 +
add eax eax +
or edx eax +
movzx eax byte ptr [esp+3Ch] +
and edx 0FFFFFFCFh +
or edx ecx +
and eax 1 +
shl eax 5 +
or edx eax +
mov eax [esp+40h] +
mov [esi+20h] dl +
test eax eax +
mov [esi+24h] eax +
jnz loc_4049C0  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov ecx [eax] +
test ecx ecx +
jnz loc_4049A7  +
jmp loc_4049E7  +
mov ecx edx +
mov edx [ecx] +
test edx edx +
jnz loc_4049A5  +
mov [ecx] esi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+44h] +
lea eax [esi+28h] +
add edi 4 +
mov [esp+8] edi +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
jmp loc_404991  +
***
xor eax eax +
jmp loc_404908  +
***
mov ecx eax +
lea esi [esi+0] +
jmp loc_4049AD  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx +
mov [esp+arg_0] eax +
jmp sprintf  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx +
mov [esp+arg_0] eax +
jmp fprintf  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_407370  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_404ADE  +
cmp dword ptr [edx+4] 5 +
jnz loc_404ADE  +
mov eax [edx+1B0h] +
mov eax [eax+10h] +
add esp 1Ch +
retn   +
***
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_407370  +
test eax eax +
mov edx eax +
jnz loc_404B22  +
jmp loc_404B40  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_404B40  +
cmp edx eax +
jz loc_404B40  +
cmp dword ptr [edx+4] 5 +
jnz loc_404B14  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+10h] ebx +
test edx edx +
jnz loc_404B1E  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_407370  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_404B7E  +
cmp dword ptr [edx+4] 5 +
jnz loc_404B7E  +
mov eax [edx+1B0h] +
mov eax [eax+18h] +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov ebx [esp+24h] +
mov [esp] eax +
call sub_407370  +
test eax eax +
mov edx eax +
jnz loc_404BC2  +
jmp loc_404BE0  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_404BE0  +
cmp edx eax +
jz loc_404BE0  +
cmp dword ptr [edx+4] 5 +
jnz loc_404BB4  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+18h] ebx +
test edx edx +
jnz loc_404BBE  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
test eax eax +
jz loc_404DE3  +
mov ecx [esp+44h] +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_404D63  +
mov eax [eax+4] +
cmp dl [eax+18h] +
jz loc_404DF7  +
mov dword ptr [esp+18h] 0 +
cmp dl 2Eh +
jnz loc_404E1A  +
mov ebp [esp+44h] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
cmp al 24h +
jz loc_404C33  +
cmp al 2Eh +
jz loc_404C33  +
mov eax ebp +
mov edi ebp +
sub eax [esp+44h] +
mov [esp+14h] eax +
mov dword ptr [esp+4] 40h +
mov [esp] ebp +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_404D80  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov esi eax +
jz loc_404E13  +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp] eax +
call memcpy  +
mov eax [esp+48h] +
mov byte ptr [esi+edi] 0 +
mov [esp] esi +
mov [esp+4] eax +
call sub_45A200  +
mov [esp] esi +
mov edi eax +
call free  +
test edi edi +
jz loc_404DA0  +
test ebx ebx +
jnz loc_404CC9  +
mov edx [esp+14h] +
mov eax edi +
test edx edx +
jz loc_404D5B  +
mov [esp] edi +
call strlen  +
mov esi eax +
add eax edi +
test ebx ebx +
cmovz ebx eax +
mov [esp] ebx +
call strlen  +
mov ecx [esp+14h] +
mov [esp+1Ch] esi +
add ecx esi +
mov esi ecx +
add eax 1 +
mov [esp+18h] eax +
add eax ecx +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_404D51  +
mov edx [esp+14h] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [esp+44h] +
mov [esp+4] edx +
call memcpy  +
mov edx [esp+14h] +
mov [esp+4] edi +
lea eax [ebp+edx+0] +
mov edx [esp+1Ch] +
mov [esp] eax +
mov [esp+8] edx +
call memcpy  +
mov ecx [esp+18h] +
mov eax esi +
add eax ebp +
mov [esp+4] ebx +
mov [esp] eax +
mov [esp+8] ecx +
call memcpy  +
mov [esp] edi +
call free  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+18h] 0 +
mov edi [esp+44h] +
mov dword ptr [esp+14h] 0 +
mov ebp edi +
jmp loc_404C4E  +
***
mov eax [esp+48h] +
mov [esp] ebp +
mov [esp+4] eax +
call sub_45A200  +
mov edi eax +
test edi edi +
jnz loc_404CB7  +
lea esi [esi+0] +
mov ecx [esp+18h] +
test ecx ecx +
jz loc_404E13  +
mov eax [esp+44h] +
mov [esp] eax +
call strlen  +
lea ebx [eax+1] +
mov [esp] ebx +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_404E13  +
mov eax [esp+44h] +
mov [esp+8] ebx +
mov [esp] ebp +
mov [esp+4] eax +
call memcpy  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
movzx edx byte ptr [eax] +
jmp loc_404C26  +
***
mov eax [esp+44h] +
mov dword ptr [esp+18h] 1 +
movzx edx byte ptr [eax+1] +
add eax 1 +
mov [esp+44h] eax +
jmp loc_404C26  +
***
xor eax eax +
jmp loc_404D5B  +
***
cmp dl 24h +
jz loc_404C2F  +
jmp loc_404D6B  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
test ah 40h +
jz loc_404F75  +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_404E66  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax 20000h +
jz loc_404F40  +
mov ecx [edx+1B0h] +
mov eax [edi+8Ch] +
or dword ptr [eax+8] 800h +
mov eax [ecx+174h] +
cmp byte ptr [eax+0Ch] 1 +
mov eax [edx+30h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] 1 +
jz loc_404F00  +
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
mov eax [eax+30h] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] 0 +
call eax  +
mov eax [ebx+4] +
lea edx [esi+8] +
add esi 10h +
mov eax [eax+24h] +
mov [esp+10h+var_8] edx +
mov ecx [edi+24h] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] ecx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+24h] +
mov eax 1 +
mov [esp+10h+arg_8] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+10h+arg_0] eax +
sar eax 1Fh +
mov [esp+10h+arg_4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
call eax  +
mov eax [ebx+4] +
lea ecx [esi+4] +
mov edx [edi+24h] +
add esi 8 +
mov eax [eax+30h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+30h] +
mov eax 1 +
mov [esp+10h+arg_4] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
mov eax [edi+8Ch] +
add esi 4 +
and dword ptr [eax+8] 0FFFFF7FFh +
mov dword ptr [esi-4] 42494C5Ah +
mov [esp+10h+arg_8] esi +
mov eax [edi+24h] +
mov [esp+10h+arg_4] 0 +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_408670  +
mov [esp+10h+var_8] offset aBfd_update_com +
mov [esp+10h+var_C] 7E8h +
mov [esp+10h+var_10] offset a____BinutilsBf +
call sub_404070  +
jmp sub_404FA0  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_404FC0  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [esp+10h+arg_8] +
mov edx [ecx+8Ch] +
test byte ptr [edx+9] 8 +
jz loc_404FB3  +
mov edx [eax+1B0h] +
mov eax [eax+28h] +
mov edx [edx+174h] +
cmp byte ptr [edx+0Ch] 1 +
jz loc_405035  +
mov edi [esp+10h+arg_4] +
mov [esp+10h+var_10] edi +
call eax  +
mov edi [esp+10h+arg_4] +
lea edx [edi+8] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov edi eax +
mov eax [ebx+4] +
mov edx [eax+1Ch] +
mov eax [esp+10h+arg_4] +
add eax 10h +
mov [esp+10h+var_10] eax +
call edx  +
cmp esi 1 +
jnz loc_404FB3  +
mov ecx [esp+10h+arg_8] +
mov ecx [ecx+40h] +
shl esi cl +
cmp eax esi +
jnz loc_404FB3  +
mov eax [esp+10h+arg_C] +
mov [eax] edi +
mov eax 1 +
jmp loc_404FB5  +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esp+10h+arg_4] +
lea edx [ecx+4] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+10h+var_10] edx +
call eax  +
mov ecx [esp+10h+arg_4] +
lea edx [ecx+8] +
mov edi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+10h+var_10] edx +
call eax  +
jmp loc_405016  +
***
mov ecx [esp+arg_0] +
xor eax eax +
mov edx [ecx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_405081  +
retn   +
cmp [esp+arg_4] 0 +
jz loc_4050B6  +
mov ecx [esp+arg_4] +
mov ecx [ecx+8Ch] +
test byte ptr [ecx+9] 8 +
jz locret_40507F  +
mov eax [edx+1B0h] +
mov edx [eax+174h] +
mov eax 0Ch +
cmp byte ptr [edx+0Ch] 1 +
mov edx 18h +
cmovnz eax edx +
retn   +
test byte ptr [ecx+2Ah] 40h +
jnz loc_405098  +
retn   +
***
push esi  +
push ebx  +
sub esp 8 +
mov edx [esp+14h] +
mov ebx [esp+20h] +
test byte ptr [edx+2Ah] 10h +
jnz loc_4050DC  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4050E4  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+1Ch] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_4050DC  +
mov eax [eax+1B0h] +
mov esi [eax+174h] +
mov eax [ecx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [esi+0Ch] al +
jz loc_4050DC  +
mov eax [esp+18h] +
mov [esp] edx +
mov [esp+4] eax +
call sub_405070  +
test eax eax +
jz loc_4050DC  +
lea edx [ebx+0Ch] +
sub ebx 0Ch +
cmp eax 0Ch +
cmovz ebx edx +
jmp loc_4050DC  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
test byte ptr [ebx+2Ah] 10h +
jnz loc_40515F  +
mov ebp [ebx+4] +
cmp dword ptr [ebp+4] 5 +
jz loc_405170  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_40515F  +
mov eax [eax+1B0h] +
mov edx [ebp+1B0h] +
mov eax [eax+174h] +
mov edx [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+0Ch] al +
jz loc_40515F  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_405070  +
test eax eax +
mov edi eax +
jz loc_40515F  +
mov eax [esp+4Ch] +
cmp edi 0Ch +
mov esi [eax] +
mov eax [ebp+28h] +
mov [esp] esi +
jz loc_405274  +
call eax  +
mov eax [ebx+4] +
lea ebp [esi+8] +
mov eax [eax+1Ch] +
mov [esp] ebp +
call eax  +
lea edx [esi+10h] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp] edx +
call eax  +
mov ecx [esp+44h] +
mov ebx [ecx+24h] +
mov [esp+18h] eax +
sub ebx edi +
lea ecx [ebx+0Ch] +
mov [esp+14h] ecx +
mov ecx [esp+48h] +
mov eax [ecx+4] +
mov eax [eax+30h] +
mov [esp+4] esi +
mov dword ptr [esp] 1 +
call eax  +
mov ecx [esp+48h] +
lea edx [esi+4] +
add esi 0Ch +
mov eax [ecx+4] +
mov ecx [esp+1Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov ecx [esp+48h] +
mov eax [ecx+4] +
mov ecx [esp+18h] +
mov eax [eax+30h] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
mov eax [esp+4Ch] +
mov [esp+8] ebx +
add edi [eax] +
mov [esp] esi +
mov [esp+4] edi +
call memmove  +
mov eax [esp+50h] +
mov esi 1 +
mov ecx [esp+14h] +
mov [eax] ecx +
jmp loc_40515F  +
***
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
add esi 8 +
mov eax [eax+28h] +
mov [esp] edx +
call eax  +
mov ebp eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov edi eax +
mov eax [esp+44h] +
mov eax [eax+24h] +
lea esi [eax-0Ch] +
add eax 0Ch +
mov [esp] eax +
mov [esp+14h] eax +
call sub_408000  +
test eax eax +
mov ebx eax +
jz loc_40535F  +
mov eax [esp+48h] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+4] ebx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+8] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+10h] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] edi +
mov dword ptr [esp+4] 0 +
call eax  +
mov edi [esp+4Ch] +
lea eax [ebx+18h] +
mov edi [edi] +
mov [esp+8] esi +
mov [esp] eax +
lea edx [edi+0Ch] +
mov [esp+4] edx +
mov [esp+18h] edi +
call memcpy  +
mov eax [esp+4Ch] +
mov eax [eax] +
mov [esp] eax +
call free  +
mov eax [esp+4Ch] +
mov [eax] ebx +
jmp loc_405260  +
***
xor esi esi +
jmp loc_40515F  +
***
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov edx [eax+14h] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_C] +
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx [esp+arg_8] +
cmp edx 1 +
mov esi [eax+8] +
jz loc_4053D0  +
cmp edx 2 +
mov eax 0FFFFFFFFh +
jz loc_4053BA  +
xor eax eax +
test edx edx +
jz loc_4053C0  +
pop ebx  +
pop esi  +
retn   +
mov [esi+10h] ecx +
xor eax eax +
mov [esi+14h] ebx +
pop ebx  +
pop esi  +
retn   +
add [esi+10h] ecx +
adc [esi+14h] ebx +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 20h +
mov ecx [esp+20h+arg_0] +
mov ebx [ecx+8] +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov esi [ebx+4] +
mov edi [ebx] +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_8] +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_C] +
mov [esp+20h+var_20] ecx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] eax +
mov eax [esp+20h+arg_4] +
mov [esp+20h+var_10] edx +
mov [esp+20h+var_18] eax +
call esi  +
test edx edx +
js loc_40542B  +
add [ebx+10h] eax +
adc [ebx+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
retn   +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+8] +
mov edx [ecx+8] +
test edx edx +
jz loc_40546F  +
mov eax [ecx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call edx  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_4] +
mov ebp [esp+28h+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [ebp+8] +
jnz loc_405508  +
test edi 2 +
jnz loc_405518  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_4054E0  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_4054E8  +
mov byte ptr [edi] 0 +
mov edx [ebx+0Ch] +
xor eax eax +
test edx edx +
jz loc_405500  +
mov eax [ebx] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_4054C9  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_4054C9  +
***
sub esp 18h +
mov eax [eax+0A8h] +
test eax eax +
jz loc_405559  +
lea eax [ebx+48h] +
mov [esp+18h+var_18] eax +
call sub_408DD0  +
mov eax [ebx+0A8h] +
mov [esp+18h+var_18] eax +
call sub_45EEC0  +
mov eax [ebx] +
test eax eax +
jz loc_405567  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+88h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_405650  +
test edi edi +
jz loc_405630  +
mov [esp+2Ch+var_28] offset a_gnu_debuglink +
mov [esp+2Ch+var_2C] ebx +
call sub_402CB0  +
test eax eax +
mov esi eax +
jz loc_4055ED  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_403610  +
test eax eax +
jnz loc_4055F7  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_4055ED  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebp [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebp +
call sub_470CB0  +
add eax 4 +
and eax 0FFFFFFFCh +
cmp eax [esi+24h] +
jnb loc_4055ED  +
mov edx [ebx+4] +
add eax [esp+2Ch+var_10] +
mov edx [edx+28h] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov [edi] eax +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 49Fh +
mov [esp+2Ch+var_2C] offset a____Binutils_7 +
call sub_404040  +
jmp loc_4055AF  +
mov [esp+2Ch+var_28] 49Eh +
mov [esp+2Ch+var_2C] offset a____Binutils_7 +
call sub_404040  +
jmp loc_4055A7  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_4056A6  +
mov [esp+18h+var_14] offset aRb_1 +
mov [esp+18h+var_18] ebx +
call j_j_fopen  +
xor edx edx +
test eax eax +
jz loc_40569F  +
mov [esp+18h+var_18] eax +
call fclose  +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [esp+18h+var_14] 529h +
mov [esp+18h+var_18] offset a____Binutils_7 +
call sub_404040  +
jmp loc_40567C  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_40576E  +
mov [esp+14h+var_10] offset aRb_1 +
mov [esp+14h+var_14] ebx +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_405766  +
xor ebx ebx +
lea esi [esi+0] +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_C] 2000h +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] offset unk_4980A0 +
call fread  +
test eax eax +
jz loc_40574F  +
add eax offset unk_4980A0 +
mov edx ebx +
cmp eax offset unk_4980A0 +
not edx  +
jbe loc_405749  +
mov ecx offset unk_4980A0 +
lea esi [esi+0] +
mov ebx edx +
add ecx 1 +
xor bl [ecx-1] +
shr edx 8 +
movzx ebx bl +
xor edx ds:dword_475080[ebx*4] +
cmp ecx eax +
jnz loc_405730  +
not edx  +
mov ebx edx +
jmp loc_4056F0  +
mov [esp+14h+var_14] esi +
call fclose  +
xor eax eax +
cmp ebx [esp+14h+arg_4] +
setz al  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 508h +
mov [esp+14h+var_14] offset a____Binutils_7 +
call sub_404040  +
jmp loc_4056D1  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
test eax eax +
mov [esp+48h+var_34] edx +
jz loc_405A13  +
mov esi [esp+48h+var_34] +
mov eax offset a__2 +
mov edx [ebp+0] +
test esi esi +
cmovnz eax esi +
test edx edx +
mov [esp+48h+var_34] eax +
jz loc_405A75  +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebp +
call ecx  +
test eax eax +
mov esi eax +
jz loc_405A6E  +
cmp byte ptr [eax] 0 +
jz loc_405A3B  +
mov edi [ebp+0] +
mov [esp+48h+var_48] edi +
call strlen  +
test eax eax +
jz loc_405A34  +
movzx edx byte ptr [edi+eax-1] +
lea ebx [eax-1] +
cmp dl 5Ch +
jz loc_405A5D  +
cmp dl 2Fh +
jnz loc_40582A  +
jmp loc_405A5D  +
movzx eax byte ptr [edi+ebx-1] +
lea edx [ebx-1] +
cmp al 5Ch +
jz loc_405944  +
cmp al 2Fh +
jz loc_405944  +
mov ebx edx +
test ebx ebx +
jnz loc_405810  +
mov edx 1 +
mov [esp+48h+var_48] edx +
call sub_408000  +
test eax eax +
mov [esp+48h+var_30] eax +
jz loc_405A88  +
mov eax [ebp+0] +
mov edi [esp+48h+var_30] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] edi +
call memcpy  +
mov byte ptr [edi+ebx] 0 +
mov eax [ebp+0] +
mov [esp+48h+var_48] eax +
call sub_45F030  +
mov [esp+48h+var_48] eax +
mov edi eax +
call strlen  +
test eax eax +
jz loc_405A56  +
movzx ecx byte ptr [edi+eax-1] +
lea ebp [eax-1] +
cmp cl 2Fh +
jz loc_405A67  +
cmp cl 5Ch +
jnz loc_4058B2  +
jmp loc_405A67  +
movzx eax byte ptr [edi+ebp-1] +
lea edx [ebp-1] +
cmp al 5Ch +
jz loc_4058B6  +
cmp al 2Fh +
jz loc_4058B6  +
mov ebp edx +
test ebp ebp +
jnz loc_4058A0  +
mov eax [esp+48h+var_34] +
mov byte ptr [edi+ebp] 0 +
mov [esp+48h+var_48] eax +
call strlen  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_2C] eax +
call strlen  +
mov ecx [esp+48h+var_2C] +
cmp ebp ebx +
cmovnb ebx ebp +
lea eax [ecx+eax+9] +
add ebx eax +
mov [esp+48h+var_48] ebx +
call sub_408000  +
test eax eax +
mov ebx eax +
jz loc_40591E  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45F0A0  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jz loc_405950  +
mov [esp+48h+var_48] esi +
call free  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] edi +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [ebx+1] +
jmp loc_405833  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45F0A0  +
mov dword ptr [eax] 6265642Eh +
add eax 7 +
mov dword ptr [eax-3] 2F6775h +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_40591E  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45F0A0  +
mov ebp eax +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] eax +
call strlen  +
cmp eax 1 +
jz loc_4059CB  +
mov ecx [esp+48h+var_34] +
cmp byte ptr [ecx+eax-1] 2Fh +
jz loc_4059CB  +
cmp byte ptr [edi] 2Fh +
jz loc_4059CB  +
mov eax 2Fh +
mov [ebp+0] ax +
mov [esp+48h+var_48] ebx +
call strlen  +
mov [esp+48h+var_44] edi +
add eax ebx +
mov [esp+48h+var_48] eax +
call sub_45F0A0  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_40591E  +
mov [esp+48h+var_48] ebx +
xor ebx ebx +
call free  +
jmp loc_40591E  +
mov [esp+48h+var_44] 559h +
mov [esp+48h+var_48] offset a____Binutils_7 +
mov [esp+48h+var_30] ecx +
call sub_404040  +
mov ecx [esp+48h+var_30] +
jmp loc_4057A5  +
xor ebx ebx +
jmp loc_40582E  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] 10h +
call sub_4040F0  +
xor eax eax +
jmp loc_40593C  +
xor ebp ebp +
jmp loc_4058B6  +
lea edx [eax+1] +
mov ebx eax +
jmp loc_405833  +
mov ebp eax +
jmp loc_4058B6  +
xor eax eax +
jmp loc_40593C  +
mov [esp+48h+var_48] 5 +
call sub_4040F0  +
xor eax eax +
jmp loc_40593C  +
mov [esp+48h+var_48] esi +
call free  +
xor eax eax +
jmp loc_40593C  +
***
mov [esp+18h+var_18] 0B0h +
call sub_408190  +
test eax eax +
mov ebx eax +
jz loc_405B50  +
mov eax ds:dword_496080 +
test eax eax +
jnz loc_405B20  +
mov eax ds:dword_49A0A4 +
lea edx [eax+1] +
mov ds:dword_49A0A4 edx +
mov [ebx+24h] eax +
call sub_45ED50  +
test eax eax +
mov [ebx+0A8h] eax +
jz loc_405B54  +
lea eax [ebx+48h] +
mov dword ptr [ebx+84h] offset asc_4756C0 +
mov [esp+18h+var_C] 0Dh +
mov [esp+18h+var_10] 0B8h +
mov [esp+18h+var_14] offset sub_402B50 +
mov [esp+18h+var_18] eax +
call sub_408CC0  +
test eax eax +
jz loc_405B40  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov ecx ds:dword_49A0A0 +
sub eax 1 +
mov ds:dword_496080 eax +
lea edx [ecx-1] +
mov ds:dword_49A0A0 edx +
mov [ebx+24h] edx +
jmp loc_405AD4  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_405B14  +
xor ebx ebx +
jmp loc_405B14  +
mov [esp+18h+var_18] 6 +
call sub_4040F0  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_405B14  +
***
sub esp 4 +
mov ebx [esp+4+arg_0] +
call sub_405AA0  +
test eax eax +
jz loc_405BF0  +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
cmp dword ptr [ebx+0Ch] offset off_475480 +
jz loc_405BE5  +
movzx edx byte ptr [eax+28h] +
mov [eax+8Ch] ebx +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFE7h +
or edx 8 +
and ecx 1 +
mov [eax+28h] dl +
movzx edx byte ptr [eax+2Bh] +
and edx 0FFFFFFFEh +
or edx ecx +
movzx ecx byte ptr [eax+2Ch] +
mov [eax+2Bh] dl +
movzx esi byte ptr [ebx+2Ch] +
and edx 0FFFFFFF7h +
and ecx 0FFFFFFEFh +
and esi 10h +
or ecx esi +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+8] +
mov [eax+8] edx +
jmp loc_405B97  +
xor eax eax +
jmp loc_405BDF  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_405C5E  +
lea eax [ebx+48h] +
mov [esp] eax +
call sub_408DD0  +
mov eax [ebx+0A8h] +
mov [esp] eax +
call sub_45EEC0  +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+0A8h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov esi [esp+10h+arg_C] +
call sub_405AA0  +
test eax eax +
mov ebx eax +
jz loc_405D40  +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call sub_407370  +
test eax eax +
jz loc_405D90  +
cmp esi 0FFFFFFFFh +
mov [esp+10h+var_C] edi +
jz loc_405D56  +
mov [esp+10h+var_10] esi +
call _fdopen  +
mov [ebx+8] eax +
test eax eax +
jz loc_405DAE  +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_45F0E0  +
mov [ebx] eax +
movzx eax byte ptr [edi] +
cmp al 72h +
setz dl  +
cmp al 77h +
jz loc_405D20  +
test dl dl +
jnz loc_405D20  +
cmp al 61h +
jz loc_405D7D  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+10h+var_10] ebx +
call sub_40A1B0  +
test eax eax +
jz loc_405DA0  +
or byte ptr [ebx+2Bh] 2 +
cmp esi 0FFFFFFFFh +
jz loc_405D70  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jz loc_405D87  +
test dl dl +
jz loc_405CEB  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
jmp loc_405CF8  +
cmp esi 0FFFFFFFFh +
jz loc_405D11  +
mov [esp+10h+var_10] esi +
call _close  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_405CBD  +
or byte ptr [ebx+2Ah] 80h +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jnz loc_405CEB  +
or byte ptr [ebx+28h] 18h +
jmp loc_405CF8  +
cmp esi 0FFFFFFFFh +
jz loc_405DA0  +
mov [esp+10h+var_10] esi +
call _close  +
lea esi [esi+0] +
mov eax ebx +
xor ebx ebx +
call sub_405530  +
jmp loc_405D11  +
mov [esp+10h+var_10] 1 +
call sub_4040F0  +
jmp loc_405DA0  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0FFFFFFFFh +
mov [esp+1Ch+var_14] offset aRb_1 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_405C70  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
mov dword ptr [esp+8] offset aRB_0 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_405C70  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
call sub_405AA0  +
test eax eax +
mov ebx eax +
jz loc_405E83  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_407370  +
test eax eax +
jz loc_405E78  +
mov eax [esp+28h] +
mov [ebx+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F0E0  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov [esp] ebx +
call sub_40A1B0  +
test eax eax +
jz loc_405E78  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax ebx +
xor ebx ebx +
call sub_405530  +
jmp loc_405E71  +
***
xor ebx ebx +
jmp loc_405E71  +
***
call sub_405AA0  +
test eax eax +
mov ebx eax +
jz loc_405EF4  +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_407370  +
test eax eax +
jz loc_405EED  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_45F0E0  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+18h+var_18] ebx +
call sub_40A2E0  +
test eax eax +
jz loc_405EE1  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 1 +
call sub_4040F0  +
mov eax ebx +
call sub_405530  +
xor eax eax +
jmp loc_405EDC  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 10h +
jz loc_405F28  +
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jz loc_405F3A  +
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jnz loc_405F43  +
add esp 40h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+0Ch] +
mov eax [eax+10h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
setz al  +
movzx eax al +
mov esi eax +
jz loc_405F70  +
mov eax ebx +
call sub_405530  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_405F5A  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_405F5A  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_405F5A  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_405F5A  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_405F5A  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
mov [esp+40h+var_40] ebx +
call sub_40A270  +
test eax eax +
mov esi eax +
jnz loc_406018  +
mov eax ebx +
call sub_405530  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_406008  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_406008  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_406008  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_406008  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_406008  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
call sub_405AA0  +
test eax eax +
mov ebx eax +
jz loc_4060D8  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F0E0  +
test esi esi +
mov [ebx] eax +
jz loc_4060BC  +
mov eax [esi+4] +
mov [ebx+4] eax +
and byte ptr [ebx+28h] 0E7h +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_407140  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_4060D2  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
test byte ptr [ebx+28h] 18h +
jnz loc_406150  +
mov dword ptr [esp] 8 +
call sub_408000  +
test eax eax +
jz loc_406163  +
mov [ebx+8] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+0Ch] offset off_474BE0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov eax 1 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_40614A  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov edx eax +
and edx 18h +
cmp dl 10h +
jnz loc_40618C  +
test byte ptr [ebx+2Ah] 1 +
jnz loc_4061A0  +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_4061C0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_4061B6  +
and byte ptr [ebx+28h] 0F8h +
and byte ptr [ebx+2Bh] 0EDh +
and byte ptr [ebx+2Ah] 7Fh +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+2Bh] +
mov dword ptr [ebx+84h] offset asc_4756C0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
and eax 0FFFFFFFBh +
or eax 1 +
mov [ebx+2Bh] al +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+8Ch] 0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+7Ch] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov [esp] ebx +
call sub_402C60  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_407110  +
mov eax 1 +
jmp loc_40619A  +
***
jmp sub_406290  +
***
mov ecx [esp+18h+arg_4] +
test ecx ecx +
js loc_4062F6  +
mov eax [esp+18h+arg_0] +
mov edx [eax+0A8h] +
jz loc_4062C5  +
add ecx 7 +
and ecx 0FFFFFFF8h +
jnz loc_4062CA  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call sub_45EDB0  +
test eax eax +
jz loc_4062E0  +
add esp 18h +
pop ebx  +
retn   +
mov ecx 8 +
mov ebx [edx+4] +
cmp ebx ecx +
jb loc_4062B0  +
mov eax [edx] +
sub ebx ecx +
mov [edx+4] ebx +
add eax ecx +
mov [edx] eax +
sub eax ecx +
jmp loc_4062BC  +
mov [esp+18h+var_18] 6 +
mov [esp+18h+var_C] eax +
call sub_4040F0  +
mov eax [esp+18h+var_C] +
jmp loc_4062C0  +
mov [esp+18h+var_18] 6 +
call sub_4040F0  +
xor eax eax +
jmp loc_4062C0  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov esi [esp+14h+arg_0] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_40633D  +
test ecx ecx +
jz loc_40633D  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_406352  +
imul ecx ebx +
mov [esp+14h+arg_0] esi +
mov [esp+14h+arg_4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_406290  +
mov [esp+14h+var_14] 6 +
call sub_4040F0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_4063A3  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
call sub_405AA0  +
test eax eax +
mov ebx eax +
jz loc_406441  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_407370  +
test eax eax +
jz loc_406445  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F0E0  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+4] eax +
call dword ptr [esp+28h]  +
test eax eax +
mov esi eax +
jz loc_406445  +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_406370  +
mov edx [esp+30h] +
mov [eax+4] edx +
mov edx [esp+34h] +
mov [eax] esi +
mov [eax+8] edx +
mov edx [esp+38h] +
mov [eax+0Ch] edx +
mov [ebx+8] eax +
mov eax ebx +
mov dword ptr [ebx+0Ch] offset off_475480 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_40643B  +
***
mov eax ebx +
call sub_405530  +
xor eax eax +
nop   +
jmp loc_40643B  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_40647C  +
test ecx ecx +
jnz loc_4064B5  +
mov esi ebx +
mov eax [esp+14h+arg_0] +
imul esi ecx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] esi +
call sub_406290  +
mov ebx eax +
xor eax eax +
test ebx ebx +
jz loc_4064AF  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] ebx +
call memset  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
jbe loc_40647C  +
mov [esp+14h+var_14] 6 +
call sub_4040F0  +
xor eax eax +
jmp loc_4064AF  +
***
mov eax [esp+arg_0] +
mov eax [eax+0A8h] +
mov [esp+arg_0] eax +
jmp sub_45EEF0  +
***
push ebx  +
mov edx [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [esp+8] +
add ebx edx +
cmp edx ebx +
not eax  +
jnb loc_40652E  +
mov ecx eax +
add edx 1 +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_475080[ecx*4] +
cmp edx ebx +
jnz loc_406515  +
not eax  +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_406620  +
test edi edi +
jz loc_406640  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_406604  +
mov [esp+2Ch+var_28] offset a_gnu_debugaltl +
mov [esp+2Ch+var_2C] ebx +
call sub_402CB0  +
test eax eax +
mov esi eax +
jz loc_4065A9  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_403610  +
test eax eax +
jnz loc_4065B3  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_4065A9  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_470CB0  +
lea ebp [eax+1] +
mov eax [esi+24h] +
cmp ebp eax +
jnb loc_4065A9  +
sub eax ebp +
mov [edi] eax +
mov [esp+2Ch+var_2C] eax +
call sub_408000  +
mov ecx [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_10] +
add edx ebp +
mov [ecx] eax +
mov ecx [edi] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] ecx +
call memcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 4D8h +
mov [esp+2Ch+var_2C] offset a____Binutils_7 +
call sub_404040  +
jmp loc_40656B  +
mov [esp+2Ch+var_28] 4D6h +
mov [esp+2Ch+var_2C] offset a____Binutils_7 +
call sub_404040  +
jmp loc_406557  +
mov [esp+2Ch+var_28] 4D7h +
mov [esp+2Ch+var_2C] offset a____Binutils_7 +
call sub_404040  +
jmp loc_40655F  +
***
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_C] 0 +
mov [esp+28h+var_28] eax +
call sub_406540  +
mov ebx eax +
mov eax [esp+28h+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call free  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx offset sub_405590 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_4056C0 +
jmp sub_405790  +
***
mov eax [esp+arg_0] +
mov ecx offset sub_406660 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_405670 +
jmp sub_405790  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [esp+24h] +
test ebx ebx +
jz loc_406770  +
test eax eax +
jz loc_406770  +
mov [esp] eax +
call sub_45F1A0  +
mov dword ptr [esp+4] offset a_gnu_debuglink +
mov [esp] ebx +
mov edi eax +
call sub_402CB0  +
test eax eax +
jnz loc_406770  +
mov dword ptr [esp+8] 2108h +
mov dword ptr [esp+4] offset a_gnu_debuglink +
mov [esp] ebx +
call sub_403170  +
test eax eax +
mov esi eax +
jz loc_406785  +
mov [esp] edi +
call strlen  +
mov [esp+4] esi +
mov [esp] ebx +
add eax 4 +
and eax 0FFFFFFFCh +
add eax 4 +
mov [esp+8] eax +
call sub_403380  +
test eax eax +
jz loc_406785  +
mov eax esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4040F0  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
jmp loc_406769  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov edi [esp+48h] +
test edx edx +
jz loc_4068F5  +
mov eax [esp+44h] +
test eax eax +
jz loc_4068F5  +
test edi edi +
jz loc_4068F5  +
mov dword ptr [esp+4] offset aRb_1 +
mov [esp] edi +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_40691D  +
xor ebx ebx +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 2000h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_4960A0 +
call fread  +
test eax eax +
jz loc_40682D  +
add eax offset unk_4960A0 +
not ebx  +
cmp eax offset unk_4960A0 +
jbe loc_406829  +
mov edx offset unk_4960A0 +
nop   +
mov ecx ebx +
add edx 1 +
xor cl [edx-1] +
shr ebx 8 +
movzx ecx cl +
xor ebx ds:dword_475080[ecx*4] +
cmp edx eax +
jnz loc_406810  +
not ebx  +
jmp loc_4067D7  +
***
mov [esp] esi +
call fclose  +
mov [esp] edi +
call sub_45F1A0  +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
lea edi [eax+4] +
mov ebp eax +
and edi 0FFFFFFFCh +
lea eax [edi+4] +
mov [esp] eax +
mov [esp+18h] eax +
call sub_408000  +
mov esi eax +
xor eax eax +
test esi esi +
jz loc_4068ED  +
mov ecx [esp+1Ch] +
mov [esp+8] ebp +
mov [esp] esi +
mov [esp+4] ecx +
call memcpy  +
mov edx edi +
add edi esi +
sub edx ebp +
mov eax edx +
lea edx [esi+ebp] +
mov [esp] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] 0 +
call memset  +
mov edx [esp+40h] +
mov eax [edx+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
mov eax [esp+18h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+8] esi +
mov [esp+14h] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_4033C0  +
mov edx eax +
mov eax 1 +
test edx edx +
jz loc_40690B  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4040F0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4040F0  +
xor eax eax +
jmp loc_4068ED  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+8Ch+arg_8] +
mov ebx [esp+8Ch+arg_0] +
test eax eax +
jz loc_406959  +
mov eax [esp+8Ch+arg_8] +
mov dword ptr [eax] 0 +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_406D50  +
and eax 7 +
cmp al 3 +
ja loc_406D50  +
test al al +
jnz loc_406EB0  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_406EDB  +
mov eax ds:dword_475650 +
shl eax 3 +
mov [esp+8Ch+var_8C] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_406E43  +
movzx eax byte ptr [ebx+28h] +
movzx edx byte ptr [esp+8Ch+arg_4] +
mov [esp+8Ch+var_44] 0 +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
mov [ebx+28h] al +
mov eax [ebx+4] +
test byte ptr [ebx+2Bh] 1 +
mov [esp+8Ch+var_70] eax +
jz loc_406D69  +
mov eax ds:dword_475650 +
mov edi off_4733B4 +
mov [esp+8Ch+var_50] eax +
mov eax [edi] +
test eax eax +
jz loc_4070C8  +
xor esi esi +
mov ecx 100h +
lea edx [ebx+48h] +
mov [esp+8Ch+var_60] esi +
mov esi ecx +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_6C] 0 +
mov [esp+8Ch+var_5C] 0 +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_58] edx +
mov [esp+8Ch+var_68] ebp +
jmp loc_406A31  +
add edi 4 +
mov eax [edi] +
test eax eax +
jz loc_406BDF  +
cmp eax offset off_475B40 +
jz loc_406A24  +
test byte ptr [ebx+2Bh] 1 +
jnz loc_406A44  +
cmp [esp+8Ch+var_70] eax +
jz loc_406A24  +
movzx eax byte ptr [eax+1Bh] +
cmp eax esi +
jg loc_406A24  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_4756C0 +
mov [esp+8Ch+var_8C] ebx +
call sub_402C60  +
mov eax [edi] +
mov [ebx+4] eax +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_406EA1  +
mov [esp+8Ch+var_8C] 3 +
call sub_4040F0  +
movzx eax byte ptr [ebx+28h] +
mov ecx [ebx+4] +
and eax 7 +
mov eax [ecx+eax*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_406E93  +
mov eax [esp+8Ch+var_44] +
test eax eax +
jz loc_406AE1  +
lea eax [esp+8Ch+var_28] +
mov [esp+8Ch+var_8C] eax +
call sub_408DD0  +
mov [esp+8Ch+var_44] 0 +
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 2 +
jz loc_406E60  +
cmp off_4733AC ebp +
jz loc_4070A5  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jz loc_406B0B  +
mov ecx [esp+8Ch+var_6C] +
mov [eax+ecx*4] ebp +
movzx eax byte ptr [ebp+1Bh] +
add [esp+8Ch+var_6C] 1 +
cmp eax esi +
jl loc_406E50  +
add [esp+8Ch+var_64] 1 +
mov [esp+8Ch+var_60] ebp +
mov eax [ebx+0A0h] +
mov [esp+8Ch+var_40] eax +
mov eax [ebx+84h] +
mov [esp+8Ch+var_38] eax +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
mov [esp+8Ch+var_3C] eax +
mov eax [ebx+64h] +
mov [esp+8Ch+var_34] eax +
mov eax [ebx+68h] +
mov [esp+8Ch+var_30] eax +
mov eax [ebx+6Ch] +
mov [esp+8Ch+var_2C] eax +
mov eax [ebx+48h] +
mov [esp+8Ch+var_28] eax +
mov eax [ebx+4Ch] +
mov [esp+8Ch+var_24] eax +
mov eax [ebx+50h] +
mov [esp+8Ch+var_20] eax +
mov eax [ebx+54h] +
mov [esp+8Ch+var_1C] eax +
mov eax [ebx+58h] +
mov [esp+8Ch+var_18] eax +
mov eax [ebx+5Ch] +
mov [esp+8Ch+var_14] eax +
mov eax [ebx+60h] +
mov [esp+8Ch+var_88] 1 +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_10] eax +
call sub_406290  +
test eax eax +
mov [esp+8Ch+var_44] eax +
jz loc_406EA1  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_84] 0B8h +
mov [esp+8Ch+var_88] offset sub_402B50 +
mov [esp+8Ch+var_8C] eax +
call sub_408DA0  +
test eax eax +
jz loc_406EA1  +
add edi 4 +
mov eax [edi] +
mov [esp+8Ch+var_5C] ebp +
test eax eax +
jnz loc_406A31  +
cmp [esp+8Ch+var_64] 1 +
mov ebp [esp+8Ch+var_68] +
mov [esp+8Ch+var_68] esi +
mov esi [esp+8Ch+var_60] +
jz loc_406F29  +
mov eax [esp+8Ch+var_6C] +
test eax eax +
jnz loc_407060  +
mov eax [esp+8Ch+var_54] +
cmp eax off_4733AC +
jz loc_4070B7  +
mov eax [esp+8Ch+var_50] +
sub eax ds:dword_475650 +
cmp eax 1 +
mov [esp+8Ch+var_6C] eax +
jg loc_406F36  +
cmp [esp+8Ch+var_6C] 1 +
jle loc_407106  +
mov [esp+8Ch+arg_0] ebx +
mov ecx off_4733A8 +
mov edi [esp+8Ch+var_6C] +
mov ebx [esp+8Ch+var_68] +
lea esi [esi+0] +
add ecx 4 +
mov esi [ecx-4] +
test esi esi +
jz loc_406EF1  +
mov eax edi +
sub eax 1 +
js loc_406C50  +
cmp [ebp+eax*4+0] esi +
jnz loc_406C60  +
movzx edx byte ptr [esi+1Bh] +
cmp ebx edx +
jl loc_406C60  +
mov ebx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_6C] 1 +
mov edi [esp+8Ch+var_44] +
test edi edi +
jz loc_406D25  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_408DD0  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_4064E0  +
mov [esp+8Ch+var_44] 0 +
cmp [esp+8Ch+var_6C] 1 +
jz loc_406F63  +
mov ecx [esp+8Ch+var_6C] +
test ecx ecx +
jnz loc_407003  +
mov [esp+8Ch+var_8C] 0Ch +
call sub_4040F0  +
jmp loc_406D91  +
mov [esp+8Ch+var_8C] 5 +
call sub_4040F0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_403BF0  +
test eax eax +
jz loc_407069  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
test ebp ebp +
mov [ebx+4] eax +
jz loc_406DA8  +
mov [esp+8Ch+var_8C] ebp +
call free  +
mov edx [esp+8Ch+var_44] +
test edx edx +
jz loc_406E43  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_408DD0  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_4064E0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi eax +
mov [esp+8Ch+var_64] 1 +
jmp loc_406B21  +
test byte ptr [ebx+2Bh] 20h +
jnz loc_406ECB  +
mov eax [esp+8Ch+var_54] +
cmp off_4733AC eax +
jz loc_406E78  +
mov eax [edi] +
mov [esp+8Ch+var_54] eax +
mov edx [esp+8Ch+var_68] +
test edx edx +
jz loc_406E89  +
mov eax [edi] +
mov ecx [esp+8Ch+var_50] +
mov [edx+ecx*4] eax +
add [esp+8Ch+var_50] 1 +
jmp loc_406B25  +
call sub_403EA0  +
cmp eax 3 +
jz loc_406A24  +
mov ebp [esp+8Ch+var_68] +
jmp loc_406D91  +
movzx eax al +
cmp eax [esp+8Ch+arg_4] +
setz al  +
add esp 8Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_403EA0  +
cmp eax 4 +
jnz loc_406AF0  +
jmp loc_406E66  +
mov eax off_4733A8 +
mov eax [eax] +
test eax eax +
jnz loc_406987  +
xor ebp ebp +
jmp loc_4069A1  +
test ebp ebp +
mov ebx [esp+8Ch+arg_0] +
jz loc_406C82  +
mov eax [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_6C] +
cmp edi eax +
jz loc_406C82  +
mov ecx [esp+8Ch+var_68] +
xor eax eax +
mov esi [ebp+eax*4+0] +
movzx edx byte ptr [esi+1Bh] +
cmp ecx edx +
jge loc_406F29  +
add eax 1 +
cmp eax edi +
jl loc_406F16  +
mov [esp+8Ch+var_6C] 1 +
jmp loc_406C82  +
test ebp ebp +
jz loc_406C29  +
lea edx ds:0[eax*4] +
mov eax ds:dword_475650 +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] ebp +
lea eax [ebp+eax*4+0] +
mov [esp+8Ch+var_88] eax +
call memcpy  +
jmp loc_406C34  +
cmp [esp+8Ch+var_5C] esi +
mov [ebx+4] esi +
jz loc_406FD2  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_4756C0 +
mov [esp+8Ch+var_8C] ebx +
call sub_402C60  +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_406D91  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jz loc_4070ED  +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 18h +
jz loc_4070AE  +
test ebp ebp +
mov eax 1 +
jz loc_406D5E  +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_70] eax +
call free  +
mov eax [esp+8Ch+var_70] +
jmp loc_406D5E  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
mov [ebx+4] eax +
mov [esp+8Ch+var_8C] 0Dh +
call sub_4040F0  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_406E43  +
mov eax [esp+8Ch+arg_8] +
mov [eax] ebp +
mov eax [esp+8Ch+var_6C] +
mov dword ptr [ebp+eax*4+0] 0 +
sub eax 1 +
js loc_406E43  +
mov edx [ebp+eax*4+0] +
mov edx [edx] +
mov [ebp+eax*4+0] edx +
sub eax 1 +
cmp eax 0FFFFFFFFh +
jnz loc_407047  +
xor eax eax +
jmp loc_406E45  +
mov [esp+8Ch+var_54] esi +
jmp loc_406C29  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jnz loc_406FD2  +
cmp [esp+8Ch+arg_4] 2 +
jnz loc_4069D1  +
cmp [esp+8Ch+var_70] offset off_475B40 +
jnz loc_4069D1  +
jmp loc_406D3C  +
mov ebp [esp+8Ch+var_68] +
jmp loc_406FD2  +
or byte ptr [ebx+2Bh] 10h +
jmp loc_406FE1  +
mov esi [esp+8Ch+var_54] +
mov [esp+8Ch+var_6C] 1 +
jmp loc_406C82  +
mov [esp+8Ch+var_68] 100h +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_5C] 0 +
jmp loc_406C02  +
mov [esp+8Ch+var_88] 1B5h +
mov [esp+8Ch+var_8C] offset a____Binutils_2 +
call sub_404040  +
jmp loc_406FD2  +
mov esi [esp+8Ch+var_54] +
jmp loc_406C82  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_406930  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jnz loc_407170  +
mov edx eax +
and edx 7 +
cmp dl 3 +
ja loc_407170  +
test dl dl +
jz loc_407183  +
xor eax eax +
movzx edx dl +
cmp edx [esp+18h+arg_4] +
setz al  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 5 +
call sub_4040F0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
movzx edx byte ptr [esp+18h+arg_4] +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
movzx edx dl +
mov [ebx+28h] al +
mov eax [ebx+4] +
mov eax [eax+edx*4+74h] +
mov [esp+18h+var_18] ebx +
call eax  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_40717E  +
and byte ptr [ebx+28h] 0F8h +
add esp 18h +
xor al al +
pop ebx  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi off_4733B4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_40728F  +
jmp loc_4072B0  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_4072B0  +
mov eax [ebx] +
mov [esp+18h+var_18] edi +
mov [esp+18h+var_14] eax +
call strcmp  +
test eax eax +
jnz loc_407286  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi offset off_475640 +
mov eax offset aAvr +
jmp loc_4072C9  +
add esi 8 +
mov eax [esi] +
test eax eax +
jz loc_407300  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call sub_45F1B0  +
test eax eax +
jnz loc_4072C0  +
mov ebx [esi+4] +
test ebx ebx +
jnz loc_4072A1  +
add esi 8 +
mov ebx [esi+4] +
test ebx ebx +
jz loc_4072E8  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_18] 2 +
xor ebx ebx +
call sub_4040F0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx off_4733AC +
mov ebx [esp+18h+arg_0] +
test edx edx +
jz loc_407349  +
mov eax [edx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_40735E  +
mov eax ebx +
call sub_407270  +
test eax eax +
jz loc_407365  +
mov off_4733AC eax +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
xor edx edx +
jmp loc_40735E  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
test eax eax +
jz loc_4073F0  +
mov edi offset aDefault +
mov ecx 8 +
mov esi eax +
cmps   +
jnz loc_4073B0  +
mov eax off_4733AC +
test eax eax +
jz loc_4073E0  +
test ebx ebx +
jz loc_4073A6  +
or byte ptr [ebx+2Bh] 1 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test ebx ebx +
jz loc_4073D0  +
and byte ptr [ebx+2Bh] 0FEh +
call sub_407270  +
test eax eax +
jz loc_4073D9  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_407270  +
test eax eax +
jnz loc_4073A6  +
xor eax eax +
jmp loc_4073A6  +
mov eax off_4733B4 +
mov eax [eax] +
jmp loc_40739B  +
mov [esp+10h+var_10] offset aGnutarget +
call getenv  +
test eax eax +
jz loc_407392  +
jmp loc_407382  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+78h] +
mov edi [esp+7Ch] +
mov esi [esp+80h] +
test ebp ebp +
jz loc_407431  +
mov dword ptr [ebp+0] 0 +
test edi edi +
jz loc_40743B  +
mov dword ptr [edi] 0FFFFFFFFh +
test esi esi +
jz loc_407445  +
mov dword ptr [esi] 0 +
mov eax [esp+74h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_407370  +
test eax eax +
mov ebx eax +
jz loc_407530  +
test ebp ebp +
jz loc_407474  +
mov edx [ebx+8] +
xor eax eax +
test edx edx +
setz al  +
mov [ebp+0] eax +
test edi edi +
jz loc_40747E  +
movzx eax byte ptr [ebx+18h] +
mov [edi] eax +
test esi esi +
mov eax ebx +
jz loc_407493  +
mov ebp [ebx] +
call sub_407BF0  +
mov edi eax +
mov eax ebx +
test edi edi +
jnz loc_4074A0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test ebp ebp +
jz loc_4074CA  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_407520  +
lea ebp [eax+1] +
mov ecx esi +
mov edx edi +
mov eax ebp +
call near ptr dword_4071C0+30h  +
test eax eax +
jz loc_4074E0  +
mov [esp] edi +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] ebp +
lea ebp [esp+1Eh] +
mov [esp] ebp +
call strcpy  +
jmp loc_407504  +
mov byte ptr [eax] 0 +
mov ecx esi +
mov edx edi +
mov eax ebp +
call near ptr dword_4071C0+30h  +
test eax eax +
jnz loc_4074CA  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strrchr  +
test eax eax +
jnz loc_4074F2  +
jmp loc_4074CA  +
***
mov ecx esi +
mov edx edi +
mov eax ebp +
call near ptr dword_4071C0+30h  +
jmp loc_4074CA  +
***
xor eax eax +
jmp loc_407493  +
***
sub esp 14h +
mov edx off_4733B4 +
mov ebx [edx] +
test ebx ebx +
jz loc_4075AD  +
xor eax eax +
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_407553  +
lea eax ds:4[eax*4] +
mov [esp+14h+var_14] eax +
call sub_408000  +
test eax eax +
jz loc_4075B8  +
mov edx off_4733B4 +
mov ecx [edx] +
test ecx ecx +
jz loc_4075B4  +
mov ebx edx +
mov esi eax +
jmp loc_407588  +
mov ebx off_4733B4 +
cmp edx ebx +
jz loc_407590  +
cmp ecx [ebx] +
jz loc_407598  +
mov ecx [ecx] +
add esi 4 +
mov [esi-4] ecx +
add edx 4 +
mov ecx [edx] +
test ecx ecx +
jnz loc_407582  +
mov dword ptr [esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax 4 +
jmp loc_407564  +
mov esi eax +
jmp loc_4075A1  +
xor eax eax +
jmp loc_4075A7  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx off_4733B4 +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jnz loc_4075E9  +
jmp loc_407600  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jz loc_407600  +
mov [esp+4] esi +
mov [esp] eax +
call edi  +
test eax eax +
jz loc_4075E0  +
mov eax [ebx] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax offset aA_out +
mov eax offset aUnknownFileFor +
jmp loc_407630  +
***
mov eax offset aSym +
mov eax offset aPef_xlib +
jmp loc_407630  +
***
mov eax offset off_47559E +
mov eax offset aMach_o +
jmp loc_407630  +
***
mov eax offset aMmo +
mov eax offset aEvax +
jmp loc_407630  +
***
mov eax offset aOvax +
mov eax offset aMsdos +
jmp loc_407630  +
***
mov eax offset aVersados +
mov eax offset aOs9k +
jmp loc_407630  +
***
mov eax offset aSom +
mov eax offset aIhex +
jmp loc_407630  +
***
mov eax offset aVerilog +
mov eax offset aSrec +
jmp loc_407630  +
***
mov eax offset aTekhex +
jmp loc_407630  +
***
mov eax offset aOasys +
jmp loc_407630  +
***
mov eax offset aNlm +
jmp loc_407630  +
***
mov eax offset aIeee +
jmp loc_407630  +
***
mov eax offset off_475545 +
jmp loc_407630  +
***
mov eax offset aXcoff +
jmp loc_407630  +
***
mov eax offset aEcoff +
jmp loc_407630  +
***
mov eax offset aCoff +
jmp loc_407630  +
***
mov dword ptr [esp+8] offset aBfd_flavour_na +
mov dword ptr [esp+4] 75Ah +
mov dword ptr [esp] offset a____Binutils_8 +
call sub_404070  +
nop   +
nop   +
nop   +
nop   +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov [esp] esi +
call sub_408000  +
test eax eax +
mov ebx eax +
jz loc_40777B  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov edx [esp+0Ch] +
xor eax eax +
mov ecx [esp+8] +
mov ebx [edx+0Ch] +
cmp [ecx+0Ch] ebx +
jnz loc_4077B9  +
mov ebx [edx] +
cmp [ecx] ebx +
jnz loc_4077B9  +
mov ebx [edx+10h] +
mov eax ecx +
cmp [ecx+10h] ebx +
mov ecx edx +
cmovnb ecx eax +
cmovbe eax ecx +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:_stricmp +
mov esi [esp+30h] +
mov ebx [esp+34h] +
mov eax [esi+14h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jnz loc_4077F0  +
mov eax [esi+20h] +
test eax eax +
jnz loc_407958  +
mov eax [esi+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jz loc_407958  +
mov ebp [esi+18h] +
mov dword ptr [esp+4] 3Ah +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_40790C  +
sub eax ebp +
mov [esp+8] eax +
mov [esp+0Ch] eax +
mov [esp+4] ebp +
mov [esp] ebx +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jz loc_4079C4  +
movzx eax byte ptr [ebx] +
mov edx [esi+14h] +
test al al +
jnz loc_407866  +
jmp loc_407971  +
cmp al cl +
jnz loc_40786D  +
add ebx 1 +
movzx eax byte ptr [ebx] +
add edx 1 +
test al al +
jz loc_407971  +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_407851  +
cmp al 3Ah +
jz loc_407965  +
movsx edx byte ptr [ebx] +
test dl dl +
jz loc_407971  +
movzx ecx dl +
xor eax eax +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jz loc_40795D  +
add ebx 1 +
lea eax [eax+eax*4] +
lea eax [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx ecx dl +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jnz loc_407893  +
cmp eax 1CF2h +
mov edx eax +
jz loc_407AD3  +
jbe loc_407980  +
cmp eax 109AAh +
jz loc_407AEC  +
nop   +
lea esi [esi+0] +
ja loc_4079E3  +
cmp eax 1E46h +
jz loc_407A42  +
ja loc_407AB2  +
cmp eax 1E1Ch +
jz loc_407B28  +
cmp eax 1E31h +
jnz loc_407B79  +
mov ecx 25h +
mov edx 3Dh +
jmp loc_407A12  +
mov ebp [esi+14h] +
mov [esp] ebp +
call strlen  +
mov [esp+4] ebp +
mov [esp] ebx +
mov [esp+8] eax +
mov [esp+0Ch] eax +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jnz loc_407842  +
lea eax [ebx+edx] +
cmp byte ptr [eax] 3Ah +
jz loc_407B5C  +
mov edx [esi+18h] +
mov [esp] eax +
mov [esp+4] edx +
call edi  +
test eax eax +
jnz loc_407842  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movsx edx byte ptr [ebx+1] +
add ebx 1 +
jmp loc_407878  +
***
mov eax [esi+20h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 1450h +
jz loc_407B0A  +
jbe loc_407A4E  +
cmp eax 14BBh +
jz loc_407A2A  +
lea esi [esi+0] +
ja loc_407A92  +
cmp eax 1456h +
jz loc_407A2A  +
cmp eax 14A2h +
jnz loc_407B79  +
mov ecx 2 +
mov edx 10h +
jmp loc_407A12  +
mov eax [esi+18h] +
lea eax [eax+edx+1] +
add edx ebx +
mov [esp+4] eax +
mov [esp] edx +
call edi  +
test eax eax +
jnz loc_407842  +
jmp loc_407958  +
***
cmp eax 109C8h +
jz loc_407A36  +
lea esi [esi+0] +
ja loc_407A70  +
cmp eax 109B4h +
jz loc_407AFB  +
cmp eax 109BEh +
jnz loc_407B79  +
mov ecx 2 +
mov edx 5 +
xor eax eax +
cmp [esi+0Ch] ecx +
jnz loc_40795D  +
xor eax eax +
cmp [esi+10h] edx +
setz al  +
jmp loc_40795D  +
***
mov ecx 2 +
mov edx 0Ch +
jmp loc_407A12  +
***
mov ecx 2 +
mov edx 6 +
jmp loc_407A12  +
***
mov ecx 25h +
mov edx 40h +
jmp loc_407A12  +
***
cmp eax 8 +
jbe loc_407B46  +
cmp eax 0BB8h +
jz loc_407A69  +
cmp eax 0FA0h +
jnz loc_407B79  +
mov ecx 8 +
jmp loc_407A12  +
***
cmp eax 109DCh +
jz loc_407B19  +
cmp eax 10AECh +
jnz loc_407B79  +
mov ecx 2 +
mov edx 8 +
jmp loc_407A12  +
***
cmp eax 151Fh +
jz loc_407B37  +
cmp eax 1770h +
jnz loc_407B79  +
mov ecx 1Ah +
jmp loc_407A12  +
***
cmp eax 7D00h +
jz loc_407AE2  +
cmp eax 109A0h +
jnz loc_407B79  +
mov ecx 2 +
mov edx 1 +
jmp loc_407A12  +
***
mov ecx 25h +
mov edx 2Dh +
jmp loc_407A12  +
***
mov ecx 0Dh +
jmp loc_407A12  +
***
mov ecx 2 +
mov edx 3 +
jmp loc_407A12  +
***
mov ecx 2 +
mov edx 4 +
jmp loc_407A12  +
***
mov ecx 2 +
mov edx 0Ah +
jmp loc_407A12  +
***
mov ecx 2 +
mov edx 7 +
jmp loc_407A12  +
***
mov ecx 25h +
mov edx 30h +
jmp loc_407A12  +
***
mov ecx 2 +
mov edx 12h +
jmp loc_407A12  +
***
cmp eax 3 +
jnb loc_407B50  +
cmp eax 1 +
jnz loc_407B79  +
mov edx eax +
mov ecx 2 +
jmp loc_407A12  +
***
mov eax [esi+18h] +
mov [esp+4] eax +
lea eax [ebx+edx+1] +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_407842  +
jmp loc_407958  +
***
xor eax eax +
nop   +
lea esi [esi+0] +
jmp loc_40795D  +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+18h] +
retn   +
***
push edi  +
mov edi offset off_4756F4 +
push esi  +
push ebx  +
mov ebx offset unk_478760 +
sub esp 10h +
mov esi [esp+20h] +
mov eax [ebx+28h] +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_407BD8  +
mov ebx [ebx+30h] +
test ebx ebx +
jnz loc_407BB4  +
add edi 4 +
mov ebx [edi] +
test ebx ebx +
jnz loc_407BB4  +
xor eax eax +
jmp loc_407BDA  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_407BF0  +
***
push ebx  +
xor edx edx +
sub esp 14h +
mov eax [eax+30h] +
mov ebx offset off_4756F4 +
lea ecx [edx+1] +
test eax eax +
jz loc_407C1C  +
nop   +
lea esi [esi+0] +
mov eax [eax+30h] +
mov edx ecx +
lea ecx [edx+1] +
test eax eax +
jnz loc_407C10  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_407C10  +
lea eax ds:8[edx*4] +
mov [esp+14h+var_14] eax +
call sub_408000  +
test eax eax +
jz loc_407C69  +
mov ecx eax +
mov ebx offset off_4756F4 +
mov edx offset unk_478760 +
mov esi [edx+18h] +
add ecx 4 +
mov [ecx-4] esi +
mov edx [edx+30h] +
test edx edx +
jnz loc_407C44  +
add ebx 4 +
mov edx [ebx] +
test edx edx +
jnz loc_407C44  +
mov dword ptr [ecx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_407C63  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [esp+18h] +
mov ecx [eax+84h] +
mov edi [ecx+0Ch] +
test edi edi +
jz loc_407C9F  +
mov edi [edx+84h] +
mov esi [edi+0Ch] +
test esi esi +
jnz loc_407CC7  +
mov ecx eax +
mov eax edx +
mov edx ecx +
test ebx ebx +
jz loc_407CB0  +
mov eax [edx+84h] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4] +
mov edi offset aBinary_0 +
mov ecx 7 +
mov esi [eax] +
cmps   +
jz loc_407CA3  +
xor eax eax +
jmp loc_407CA9  +
***
mov eax [ecx+24h] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+84h] edx +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+8] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
retn   +
***
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx offset off_4756F4 +
jmp loc_407D5C  +
mov eax [eax+30h] +
test eax eax +
jz loc_407D74  +
cmp [eax+0Ch] edx +
jnz loc_407D55  +
cmp [eax+10h] ecx +
jz loc_407D72  +
test ecx ecx +
jnz loc_407D55  +
cmp dword ptr [eax+20h] 0 +
nop   +
jz loc_407D55  +
pop ebx  +
retn   +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_407D5C  +
xor eax eax +
pop ebx  +
retn   +
***
jmp sub_407D90  +
***
mov eax [esp+18h+arg_8] +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_407D40  +
mov edx eax +
test edx edx +
mov [ebx+84h] eax +
mov eax 1 +
jz loc_407DC2  +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [ebx+84h] offset asc_4756C0 +
mov [esp+18h+var_18] 11h +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_4] +
mov [esp+8+var_4] eax +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] eax +
call sub_407D40  +
test eax eax +
jz loc_407E02  +
mov eax [eax+18h] +
add esp 8 +
retn   +
mov eax offset aUnknown_1 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_0] +
mov eax [eax+84h] +
mov edx [eax+10h] +
mov [esp+8+var_4] edx +
mov eax [eax+0Ch] +
mov [esp+8+var_8] eax +
call sub_407D40  +
test eax eax +
jz loc_407E45  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
mov eax 1 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_407D40  +
test eax eax +
jz loc_407E80  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
***
mov eax 1 +
add esp 8 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax 4 +
retn   +
***
mov eax [esp+0Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 3 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
js loc_408024  +
mov [esp+18h+var_18] ebx +
call malloc  +
test eax eax +
jz loc_408020  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_408018  +
mov [esp+18h+var_18] 6 +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_4] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_408068  +
test ecx ecx +
jz loc_408068  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_408075  +
imul ecx ebx +
mov [esp+18h+arg_0] ecx +
add esp 18h +
pop ebx  +
jmp sub_408000  +
mov [esp+18h+var_18] 6 +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_4080D7  +
test ebx ebx +
js loc_4080C4  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_4080C0  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_4080B4  +
mov [esp+18h+var_18] 6 +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_408000  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov ecx [esp+28h] +
mov esi [esp+20h] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_40811D  +
test ecx ecx +
jz loc_40811D  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_408132  +
imul ecx ebx +
mov [esp+20h] esi +
mov [esp+24h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_408090  +
***
mov dword ptr [esp] 6 +
call sub_4040F0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_408090  +
test eax eax +
jz loc_408171  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_40816C  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call free  +
mov eax [esp+18h+var_C] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] esi +
call sub_408000  +
test eax eax +
mov ebx eax +
jnz loc_4081B0  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_4081A7  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
mov [esp+4] esi +
call sub_408040  +
test eax eax +
mov ebx eax +
jz loc_40820B  +
imul esi edi +
test esi esi +
jz loc_40820B  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] 4 +
mov edx eax +
shr edx 18h +
mov [esp+2Ch+var_10] dl +
mov edx eax +
shr edx 10h +
mov [esp+1Dh] dl +
mov edx eax +
mov [esp+2Ch+var_D] al +
mov eax [esp+2Ch+arg_0] +
shr edx 8 +
mov [esp+2Ch+var_E] dl +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call sub_403A90  +
cmp eax 4 +
setz al  +
add esp 2Ch +
movzx eax al +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_408290  +
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_4082B0  +
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax] cl +
mov [eax+1] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov [eax] dl +
shr edx 8 +
mov [eax+1] dl +
retn   +
***
jmp sub_408330  +
***
mov edx [esp+arg_0] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
push ebx  +
mov edx [esp+8] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ecx [esp+8+arg_0] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
movzx ecx byte ptr [ecx+7] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
movzx ecx byte ptr [ecx] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx+7] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 18h +
mov [eax] cl +
mov ecx edx +
shr ecx 10h +
mov [eax+1] cl +
mov ecx edx +
shr ecx 8 +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax+1] cl +
mov ecx edx +
mov [eax] dl +
shr ecx 10h +
shr edx 18h +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
jmp loc_408670  +
***
push esi  +
push ebx  +
mov edx [esp-4+arg_4] +
mov esi [esp-4+arg_8] +
mov eax [esp-4+arg_0] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+1] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+2] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+4] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+5] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+3] dl +
mov [esi+6] cl +
mov [esi+7] al +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
mov esi [esp+14h] +
mov eax [esp+0Ch] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi+7] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+6] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+5] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+3] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+2] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+4] dl +
mov [esi+1] cl +
mov [esi] al +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+3Ch] +
mov eax [esp+30h] +
mov edx [esp+34h] +
mov ebp [esp+38h] +
test cl 7 +
mov esi [esp+40h] +
jnz loc_40876D  +
test ecx ecx +
lea edi [ecx+7] +
cmovns edi ecx +
xor ecx ecx +
sar edi 3 +
lea ebx [edi-1] +
test edi edi +
mov [esp+0Ch] ebx +
jle loc_408765  +
mov ebx [esp+0Ch] +
sub ebx ecx +
test esi esi +
cmovz ebx ecx +
add ecx 1 +
mov [ebp+ebx+0] al +
shrd eax edx +
shr edx 8 +
cmp ecx edi +
jnz loc_408748  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aBfd_put_bits +
mov dword ptr [esp+4] 2E2h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_404070  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov ebp [esp+48h] +
test al 7 +
jnz loc_408810  +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
mov [esp+18h] eax +
sar dword ptr [esp+18h] 3 +
mov ebx [esp+18h] +
test ebx ebx +
jle loc_40880A  +
sub ebx 1 +
xor esi esi +
xor eax eax +
xor edx edx +
mov [esp+1Ch] ebx +
mov [esp+48h] ebp +
lea esi [esi+0] +
mov ecx [esp+48h] +
mov ebx edx +
mov edi [esp+1Ch] +
mov ebp [esp+40h] +
sub edi esi +
test ecx ecx +
cmovnz edi esi +
mov ecx eax +
movzx edi byte ptr [ebp+edi+0] +
shl ecx 8 +
add esi 1 +
shld ebx eax +
mov edx ebx +
or edi ecx +
cmp esi [esp+18h] +
mov eax edi +
jnz loc_4087D0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor edx edx +
jmp loc_408802  +
***
mov dword ptr [esp+8] offset aBfd_get_bits +
mov dword ptr [esp+4] 2F7h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_404070  +
lea esi [esi+0] +
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+44h] +
mov ecx [esp+3Ch] +
mov ebx [esp+40h] +
test edx edx +
jz loc_4088F5  +
mov eax [esp+34h] +
test byte ptr [eax+18h] 30h +
jnz loc_408930  +
mov eax [esp+30h] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_408900  +
mov eax [esp+34h] +
mov ebp [eax+28h] +
test ebp ebp +
jz loc_408900  +
mov eax [esp+44h] +
xor edx edx +
mov edi edx +
mov esi eax +
add esi ecx +
adc edi ebx +
cmp edx edi +
jg loc_408916  +
jge loc_408960  +
cmp edi 0 +
jge loc_408910  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+30h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_403BF0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4088F5  +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_4039E0  +
cmp [esp+44h] eax +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebp [eax+24h] +
jmp loc_408880  +
***
jg loc_408916  +
cmp esi ebp +
jbe loc_4088A1  +
mov dword ptr [esp] 5 +
call sub_4040F0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+30h] +
mov dword ptr [esp] offset aBUnableToGetDe +
mov [esp+4] eax +
call off_4733A4  +
mov dword ptr [esp] 5 +
call sub_4040F0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp [esp+44h] esi +
ja loc_408916  +
jmp loc_40889C  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_generic_g +
mov dword ptr [esp+4] 362h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_404070  +
nop   +
push esi  +
mov eax 1 +
push ebx  +
sub esp 14h +
mov esi [esp+34h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test esi esi +
jnz loc_4089B0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+20h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_403BF0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4089AA  +
mov eax [esp+20h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_403A90  +
cmp esi eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
add eax 1 +
shr edx 1 +
jnz loc_408A20  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax 4Ch +
cmp byte ptr [edx+18h] 5Fh +
mov edx 2Eh +
cmovnz eax edx +
mov edx [esp+8] +
cmp al [edx] +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov ecx [esp+20h] +
mov edx [esp+24h] +
mov eax [ecx+4] +
mov edx [edx+4] +
mov eax [eax+8] +
mov edx [edx+8] +
cmp eax edx +
jz loc_408AC3  +
cmp eax 2 +
jz loc_408AC3  +
cmp edx 2 +
jz loc_408AC3  +
test eax eax +
mov edx offset aBCompiledForAB +
mov eax offset aBCompiledForAL +
cmovnz edx eax +
mov [esp+4] ecx +
mov [esp] edx +
call off_4733A4  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_49A0C4 +
mov ebx [esp+3Ch] +
or eax ebx +
cmp eax 0FFFFFFFFh +
jz loc_408B44  +
mov eax ds:_iob +
add eax 20h +
mov [esp] eax +
call fflush  +
test ebx ebx +
jz loc_408B50  +
mov eax [esp+38h] +
mov [esp+14h] ebx +
mov dword ptr [esp+4] offset aDeprecatedSCal +
mov [esp+10h] eax +
mov eax [esp+34h] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
mov eax ds:_iob +
not ebx  +
add eax 40h +
mov [esp] eax +
call fflush  +
or ds:dword_49A0C4 ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aDeprecatedSC_0 +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
jmp loc_408B2C  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_408B90  +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov edi [esp+arg_4] +
mov ebp [esp+arg_10] +
cmp edi ebp +
jnb loc_408C3F  +
movzx eax byte ptr [edi] +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_408C4E  +
sub ebp edi +
mov ecx 7 +
mov edx 1 +
jmp loc_408C07  +
movzx eax byte ptr [edi+edx] +
add edx 1 +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or esi ebx +
test al al +
jns loc_408C0B  +
cmp edx ebp +
jnz loc_408BF0  +
cmp ecx 1Fh +
setbe bl  +
mov edi [esp+arg_8] +
test edi edi +
jz loc_408C1F  +
mov edi [esp+arg_8] +
mov [edi] edx +
mov edx [esp+arg_C] +
test edx edx +
jz loc_408C38  +
test bl bl +
jz loc_408C38  +
test al 40h +
jz loc_408C38  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 1 +
xor eax eax +
xor ecx ecx +
xor edx edx +
xor esi esi +
jmp loc_408C11  +
mov ebx 1 +
mov ecx 7 +
mov edx 1 +
jmp loc_408C11  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_408C70  +
cmp ecx 1Fh +
ja loc_408C99  +
test al 40h +
jz loc_408C99  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_0] +
lea esi ds:0[eax*4] +
mov edi esi +
shr edi 2 +
cmp edi eax +
jz loc_408CF5  +
mov [esp+1Ch+var_1C] 6 +
call sub_4040F0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_45ED50  +
test eax eax +
mov [ebx+8] eax +
jz loc_408CDF  +
test esi esi +
jnz loc_408D63  +
mov edx 8 +
mov ecx [eax+4] +
cmp ecx edx +
jb loc_408D6B  +
mov ebp [eax] +
sub ecx edx +
mov [eax+4] ecx +
add ebp edx +
mov [eax] ebp +
mov eax ebp +
sub eax edx +
test eax eax +
mov [ebx] eax +
jz loc_408D80  +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [esp+1Ch+arg_8] +
mov [ebx+0Ch] edi +
mov dword ptr [ebx+10h] 0 +
and byte ptr [ebx+18h] 0FEh +
mov [ebx+14h] eax +
mov eax [esp+1Ch+arg_4] +
mov [ebx+4] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esi+7] +
and edx 0FFFFFFF8h +
jnz loc_408D0A  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call sub_45EDB0  +
jmp loc_408D20  +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_45EEC0  +
mov dword ptr [ebx+8] 0 +
jmp loc_408CDF  +
***
sub esp 1Ch +
mov eax dword_4733B8 +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_408CC0  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_45EEC0  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_8] +
mov eax [edi+4] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] 0 +
call eax  +
test eax eax +
mov ebp eax +
jz loc_408FF2  +
mov ecx [edi+0Ch] +
xor edx edx +
mov [eax+4] esi +
mov [eax+8] ebx +
mov eax ebx +
div  ecx +
mov eax [edi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebp+0] edx +
mov [eax] ebp +
mov eax [edi+10h] +
test byte ptr [edi+18h] 1 +
lea edx [eax+1] +
mov eax ebp +
mov [edi+10h] edx +
jnz loc_408FA0  +
lea ebx [ecx+ecx*2] +
shr ebx 2 +
cmp edx ebx +
jbe loc_408FA0  +
mov esi offset unk_475970 +
mov edx offset unk_475900 +
mov eax esi +
sub eax edx +
sar eax 2 +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
lea ebx [edx+eax*4] +
cmp ecx [ebx] +
jb loc_408EA2  +
jmp loc_408FB6  +
mov eax ebx +
sub eax edx +
sar eax 2 +
mov esi eax +
shr esi 1Fh +
add eax esi +
sar eax 1 +
lea eax [edx+eax*4] +
cmp ecx [eax] +
jnb loc_408FBA  +
mov ebx eax +
cmp edx ebx +
jnz loc_408E85  +
mov eax [edx] +
cmp ecx eax +
jnb loc_408FA8  +
test eax eax +
lea ebx ds:0[eax*4] +
jz loc_408FA8  +
mov esi ebx +
shr esi 2 +
cmp esi eax +
mov [esp+2Ch+var_1C] esi +
jnz loc_408FA8  +
test ebx ebx +
mov edx [edi+8] +
jz loc_408FCC  +
lea eax [ebx+7] +
and eax 0FFFFFFF8h +
jnz loc_408FD1  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call sub_45EDB0  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_408FA8  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov eax [edi+0Ch] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_408F90  +
mov eax [edi] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_10] ebp +
mov esi [esp+2Ch+var_18] +
lea ebp ds:0[esi*4] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jz loc_408F7D  +
mov eax [esi+8] +
mov ebx esi +
jmp loc_408F57  +
cmp [ecx+8] eax +
jnz loc_408F5D  +
mov ebx ecx +
mov ecx [ebx] +
test ecx ecx +
jnz loc_408F50  +
mov [edx] ecx +
xor edx edx +
div  [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_20] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebx] edx +
mov [eax] esi +
mov eax [edi] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jnz loc_408F48  +
add [esp+2Ch+var_18] 1 +
mov esi [esp+2Ch+var_14] +
cmp [esp+2Ch+var_18] esi +
jnz loc_408F34  +
mov ebp [esp+2Ch+var_10] +
mov eax [esp+2Ch+var_20] +
mov [edi] eax +
mov eax [esp+2Ch+var_1C] +
mov [edi+0Ch] eax +
mov eax ebp +
nop   +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or byte ptr [edi+18h] 1 +
add esp 2Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx esi +
lea edx [eax+4] +
cmp edx ebx +
jz loc_408EA6  +
mov esi ebx +
jmp loc_408E69  +
mov eax 8 +
mov ecx [edx+4] +
cmp ecx eax +
jb loc_408EE7  +
mov esi [edx] +
sub ecx eax +
mov [edx+4] ecx +
add esi eax +
mov [edx] esi +
sub esi eax +
mov [esp+2Ch+var_20] esi +
jmp loc_408EF7  +
xor eax eax +
jmp loc_408FA0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ebx [esp+38h+arg_4] +
mov [esp+38h+var_24] eax +
mov eax [esp+38h+arg_8] +
lea ebp [ebx+1] +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_C] +
mov [esp+38h+var_1C] eax +
movzx eax byte ptr [ebx] +
test eax eax +
jz loc_40904B  +
nop   +
mov ecx eax +
add ebp 1 +
shl ecx 11h +
add eax ecx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ebp-1] +
test eax eax +
jnz loc_409030  +
sub ebp ebx +
mov ecx [esp+38h+var_24] +
sub ebp 1 +
mov eax ebp +
add edx ebp +
shl eax 11h +
add edx eax +
mov esi edx +
shr esi 2 +
xor esi edx +
xor edx edx +
mov eax esi +
div  dword ptr [ecx+0Ch] +
mov eax [ecx] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_40907C  +
jmp loc_4090A0  +
mov edi [edi] +
test edi edi +
jz loc_4090A0  +
cmp [edi+8] esi +
nop   +
jnz loc_409076  +
mov [esp+38h+var_34] ebx +
mov eax [edi+4] +
mov [esp+38h+var_38] eax +
call strcmp  +
test eax eax +
jnz loc_409076  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+38h+var_20] +
test edx edx +
jz loc_409134  +
mov eax [esp+38h+var_1C] +
test eax eax +
jz loc_409130  +
mov eax [esp+38h+var_24] +
mov edi ebp +
add edi 1 +
mov eax [eax+8] +
jnz loc_409110  +
mov edx [eax+4] +
mov ebp 8 +
cmp edx ebp +
jnb loc_40911F  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] eax +
call sub_45EDB0  +
mov ebp eax +
test ebp ebp +
jz loc_40913B  +
mov [esp+38h+var_30] edi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ebp +
call memcpy  +
mov eax [esp+38h+var_24] +
mov [esp+38h+arg_8] esi +
mov [esp+38h+arg_4] ebp +
mov [esp+38h+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_408DF0  +
add ebp 8 +
and ebp 0FFFFFFF8h +
jz loc_4090CE  +
mov edx [eax+4] +
cmp edx ebp +
jb loc_4090CE  +
mov ecx [eax] +
sub edx ebp +
mov [eax+4] edx +
add ecx ebp +
mov [eax] ecx +
sub ecx ebp +
mov ebp ecx +
jmp loc_4090DC  +
mov ebp ebx +
jmp loc_4090F0  +
xor eax eax +
jmp loc_409097  +
mov [esp+38h+var_38] 6 +
call sub_4040F0  +
xor eax eax +
jmp loc_409097  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov ecx [esp+28h+arg_8] +
mov ebx [esi+0Ch] +
mov eax [ecx+8] +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
test edx edx +
jz loc_40918C  +
cmp ecx edx +
jnz loc_409186  +
jmp loc_4091AA  +
cmp ecx eax +
jz loc_4091A8  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_409180  +
mov [esp+28h+var_20] offset aBfd_hash_renam +
mov [esp+28h+var_24] 243h +
mov [esp+28h+var_28] offset a____Binutils_5 +
call sub_404070  +
mov eax edx +
mov edx [ecx] +
mov [eax] edx +
mov eax [esp+28h+arg_4] +
mov [ecx+4] eax +
movzx edx byte ptr [eax] +
lea edi [eax+1] +
xor eax eax +
test edx edx +
jz loc_4091DC  +
mov ebp edx +
add edi 1 +
shl ebp 11h +
add edx ebp +
add edx eax +
mov eax edx +
shr eax 2 +
xor eax edx +
movzx edx byte ptr [edi-1] +
test edx edx +
jnz loc_4091C1  +
sub edi [esp+28h+arg_4] +
sub edi 1 +
add eax edi +
shl edi 11h +
lea edx [eax+edi] +
mov eax edx +
shr eax 2 +
xor eax edx +
xor edx edx +
mov [ecx+8] eax +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ecx] edx +
mov [eax] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
test ebx ebx +
mov edx [eax+8] +
jz loc_4092A2  +
lea ecx [ebx+7] +
and ecx 0FFFFFFF8h +
jnz loc_4092A7  +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] edx +
call sub_45EDB0  +
test eax eax +
jz loc_4092BF  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx 8 +
mov esi [edx+4] +
cmp esi ecx +
jb loc_40928C  +
mov eax [edx] +
sub esi ecx +
mov [edx+4] esi +
add eax ecx +
mov [edx] eax +
sub eax ecx +
test eax eax +
jnz loc_40929C  +
test ebx ebx +
jz loc_40929C  +
mov [esp+14h+var_14] 6 +
mov [esp+14h+var_8] eax +
call sub_4040F0  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
test edx edx +
jz loc_409300  +
mov dword ptr [edx+0Ch] 0FFFFFFFFh +
mov eax edx +
mov dword ptr [edx+10h] 0 +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] eax +
call sub_409270  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4092EB  +
jmp loc_4092FB  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test eax eax +
jz loc_409330  +
retn   +
mov [esp+arg_4] 0Ch +
mov [esp+arg_0] edx +
jmp sub_409270  +
***
jmp sub_409350  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi+18h] +
mov edx [edi+0Ch] +
or eax 1 +
test edx edx +
mov [edi+18h] al +
jz loc_4093A8  +
mov eax [edi] +
mov edx [esp+1Ch+var_10] +
mov ebp [eax+edx*4] +
test ebp ebp +
jnz loc_409397  +
jmp loc_4093B6  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_4093B6  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call esi  +
test eax eax +
jnz loc_409390  +
movzx eax byte ptr [edi+18h] +
and eax 0FFFFFFFEh +
mov [edi+18h] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [esp+1Ch+var_10] 1 +
mov eax [esp+1Ch+var_10] +
cmp [edi+0Ch] eax +
ja loc_40937C  +
jmp loc_4093A4  +
***
mov ecx [esp+4] +
xor edx edx +
mov eax ds:dword_4758A0[edx*4] +
cmp eax ecx +
jnb loc_4093EE  +
add edx 1 +
cmp edx 0Bh +
jnz loc_4093D6  +
mov eax 10001h +
mov dword_4733B8 eax +
retn   +
***
mov [esp+18h+var_18] 2Ch +
call sub_408000  +
test eax eax +
mov ebx eax +
jz loc_409460  +
mov eax dword_4733B8 +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] offset sub_4092E0 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_408CC0  +
test eax eax +
jz loc_409464  +
mov dword ptr [ebx+1Ch] 0 +
mov eax ebx +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_409459  +
mov [esp+18h+var_18] ebx +
call free  +
xor eax eax +
jmp loc_409459  +
***
sub esp 0Ch +
call sub_409400  +
test eax eax +
jz loc_409483  +
mov dword ptr [eax+28h] 1 +
add esp 0Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_45EEC0  +
mov dword ptr [ebx+8] 0 +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov esi [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_409510  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
call sub_409000  +
test eax eax +
mov ebx eax +
jz loc_409580  +
mov eax [eax+0Ch] +
cmp eax 0FFFFFFFFh +
jz loc_409543  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] esi +
call sub_409270  +
test eax eax +
mov ebx eax +
jz loc_409580  +
mov ecx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_4] +
test ecx ecx +
jnz loc_4095A0  +
mov [ebx+4] eax +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
mov dword ptr [ebx+10h] 0 +
mov ebp [esi+1Ch] +
mov eax [esp+1Ch+arg_4] +
mov [ebx+0Ch] ebp +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add eax ebp +
lea edx [eax+1] +
mov [esi+1Ch] edx +
mov edx [esi+28h] +
test edx edx +
jnz loc_409590  +
mov eax [esi+20h] +
test eax eax +
jz loc_4095E0  +
mov eax [esi+24h] +
mov [eax+10h] ebx +
mov [esi+24h] ebx +
mov eax [ebx+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebp 2 +
add eax 3 +
mov [ebx+0Ch] ebp +
mov [esi+1Ch] eax +
jmp loc_409564  +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov [esp+1Ch+var_1C] esi +
lea edi [eax+1] +
mov [esp+1Ch+var_18] edi +
call sub_409270  +
test eax eax +
mov ebp eax +
jz loc_409580  +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov [ebx+4] ebp +
jmp loc_409535  +
mov [esi+20h] ebx +
jmp loc_409571  +
***
mov eax [esp+arg_0] +
mov eax [eax+1Ch] +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [eax+20h] +
mov ecx [eax+28h] +
test ebx ebx +
mov [esp+2Ch+var_20] ecx +
jnz loc_409627  +
jmp loc_409690  +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_409690  +
mov esi [ebx+4] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_40966D  +
mov eax [edi+4] +
lea edx [esp+2Ch+var_E] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] ebp +
call eax  +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_403A90  +
cmp eax 2 +
jnz loc_409681  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_403A90  +
cmp eax ebp +
jz loc_409620  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov ecx 0Eh +
push esi  +
push ebx  +
sub esp 5Ch +
lea ebx [esp+68h+var_50] +
mov esi [esp+68h+arg_0] +
mov [esp+68h+var_5C] eax +
mov edi ebx +
xor eax eax +
stos   +
mov eax [esp+68h+var_5C] +
mov [esp+68h+var_60] 38h +
mov [esp+68h+var_64] offset a1_2_7 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_4C] edx +
mov [esp+68h+var_50] eax +
mov [esp+68h+var_40] esi +
call sub_44F430  +
mov ecx [esp+68h+var_4C] +
test ecx ecx +
mov edi eax +
jnz loc_40972D  +
jmp loc_409735  +
test edi edi +
jnz loc_409735  +
mov ecx esi +
sub ecx eax +
mov eax ecx +
add eax ebp +
mov [esp+68h+var_64] 4 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_44] eax +
call sub_44F4D0  +
cmp eax 1 +
mov edi eax +
jnz loc_409735  +
mov [esp+68h+var_68] ebx +
call sub_44F250  +
mov edx [esp+68h+var_4C] +
test edx edx +
mov edi eax +
jz loc_409735  +
mov eax [esp+68h+var_40] +
test eax eax +
jnz loc_4096F4  +
mov [esp+68h+var_68] ebx +
call sub_4512E0  +
xor edx edx +
or eax edi +
jnz loc_40974E  +
mov eax [esp+68h+var_40] +
xor edx edx +
test eax eax +
setz dl  +
add esp 5Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov ebx [esp+3Ch+arg_4] +
movzx eax byte ptr [eax+28h] +
mov edi [esi] +
and eax 18h +
cmp al 10h +
jz loc_4097C0  +
mov ebp [ebx+28h] +
test ebp ebp +
jz loc_4097C0  +
movzx eax byte ptr [ebx+18h] +
shr al 4 +
and eax 3 +
cmp eax 1 +
jz loc_4097E0  +
cmp eax 2 +
jz loc_409860  +
test eax eax +
jz loc_409810  +
mov [esp+3Ch+var_34] offset aBfd_get_full_s +
mov [esp+3Ch+var_38] 145h +
mov [esp+3Ch+var_3C] offset a____Binutils_6 +
call sub_404070  +
nop   +
mov ebp [ebx+24h] +
test ebp ebp +
jnz loc_409787  +
mov dword ptr [esi] 0 +
mov ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_409972  +
test edi edi +
jz loc_409979  +
cmp edi eax +
mov ebx 1 +
jz loc_4097D2  +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call memcpy  +
jmp loc_4097D2  +
test edi edi +
jz loc_409960  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_4034C0  +
test eax eax +
jnz loc_40994D  +
cmp [esi] edi +
jz loc_409972  +
mov [esp+3Ch+var_3C] edi +
xor ebx ebx +
call free  +
jmp loc_4097D2  +
mov eax [ebx+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_408000  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_18] eax +
jz loc_409972  +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+3Ch+var_10] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+28h] 0 +
mov [ebx+24h] eax +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] ebx +
call sub_4034C0  +
mov edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
mov [ebx+28h] edx +
movzx edx byte ptr [ebx+18h] +
mov [ebx+24h] ecx +
and edx 0FFFFFFCFh +
or edx 20h +
test eax eax +
mov [ebx+18h] dl +
jz loc_40992E  +
test edi edi +
jz loc_409991  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_405070  +
mov edx 0Ch +
mov ecx edi +
test eax eax +
cmovz eax edx +
mov edx [ebx+2Ch] +
add eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_4096A0  +
test eax eax +
jnz loc_409941  +
mov [esp+3Ch+var_3C] 11h +
call sub_4040F0  +
cmp [esi] edi +
jz loc_40992E  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov eax [esp+3Ch+var_18] +
xor ebx ebx +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_4097D2  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov [esi] edi +
mov ebx 1 +
jmp loc_4097D2  +
mov [esp+3Ch+var_3C] ebp +
call sub_408000  +
test eax eax +
mov edi eax +
jnz loc_409818  +
xor ebx ebx +
jmp loc_4097D2  +
mov [esp+3Ch+var_3C] ebp +
call sub_408000  +
test eax eax +
mov edi eax +
jz loc_409972  +
mov [esi] eax +
mov eax [ebx+6Ch] +
jmp loc_4097F3  +
mov [esp+3Ch+var_3C] ebp +
call sub_408000  +
test eax eax +
mov edi eax +
jz loc_40992E  +
jmp loc_4098E7  +
***
mov eax [esp+4] +
movzx edx byte ptr [eax+18h] +
mov ecx edx +
and ecx 30h +
cmp cl 20h +
jnz loc_4099CB  +
and edx 0FFFFFFCFh +
or edx 10h +
mov [eax+18h] dl +
mov edx [esp+8] +
or dword ptr [eax+14h] 4000h +
mov [eax+6Ch] edx +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_0] +
movzx ebp byte ptr [ebx+18h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
mov eax ebp +
shr al 4 +
mov ebp eax +
call sub_405070  +
and ebp 3 +
cmp eax 18h +
mov [esp+4Ch+var_30] eax +
jg loc_409B56  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_409A85  +
and byte ptr [ebx+18h] 0CFh +
lea esi [esp+4Ch+var_24] +
mov [esp+4Ch+var_38] 0Ch +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call sub_4034C0  +
test eax eax +
jnz loc_409AF2  +
mov eax [ebx+24h] +
mov esi [esp+4Ch+arg_C] +
mov [esi] eax +
xor eax eax +
movzx edx byte ptr [ebx+18h] +
and ebp 3 +
shl ebp 4 +
mov ecx [esp+4Ch+var_30] +
and edx 0FFFFFFCFh +
or edx ebp +
mov [ebx+18h] dl +
mov edx [esp+4Ch+arg_8] +
mov [edx] ecx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_30] +
lea esi [esp+4Ch+var_24] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_38] eax +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call sub_4034C0  +
test eax eax +
jz loc_409A56  +
mov eax [ebx+24h] +
mov ecx [esp+4Ch+arg_C] +
mov [ecx] eax +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] edi +
call sub_404FA0  +
mov edx eax +
mov eax 1 +
test edx edx +
mov edx 0FFFFFFFFh +
cmovnz edx [esp+4Ch+var_30] +
mov [esp+4Ch+var_30] edx +
jmp loc_409A61  +
mov ecx 4 +
mov edi offset aZlib +
cmps   +
mov ecx [ebx+24h] +
mov esi [esp+4Ch+arg_C] +
mov [esi] ecx +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_409A5F  +
mov esi [ebx] +
mov edi offset a_debug_str +
mov ecx 0Bh +
cmps   +
jnz loc_409B3A  +
movzx edx byte ptr [esp+4Ch+var_20] +
xor eax eax +
test byte ptr ds:word_490F00[edx+edx] 10h +
jnz loc_409A61  +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] eax +
call sub_4083F0  +
mov esi [esp+4Ch+arg_C] +
mov [esi] eax +
mov eax 1 +
jmp loc_409A61  +
mov [esp+4Ch+var_44] offset aBfd_is_section +
mov [esp+4Ch+var_48] 17Eh +
mov [esp+4Ch+var_4C] offset a____Binutils_6 +
call sub_404070  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_84] ecx +
call sub_405070  +
mov [esp+98h+var_94] ebx +
mov [esp+98h+var_98] esi +
mov ebp eax +
lea eax [esp+98h+var_6C] +
mov [esp+98h+var_8C] eax +
lea eax [esp+98h+var_70] +
mov [esp+98h+var_90] eax +
call sub_4099E0  +
test ebp ebp +
mov edx 0Ch +
cmovz ebp edx +
test eax eax +
jz loc_409C70  +
mov eax [esp+98h+var_70] +
test eax eax +
js loc_409DD3  +
mov edx [esp+98h+var_48] +
sub edx eax +
test eax eax +
jnz loc_409BF4  +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_70] 0Ch +
lea edx [eax-0Ch] +
mov ecx [esp+98h+var_6C] +
lea eax [edx+ebp] +
mov [esp+98h+var_74] eax +
cmp eax ecx +
jbe loc_409D52  +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] esi +
mov [esp+98h+var_7C] edx +
mov [esp+98h+var_80] ecx +
call sub_406290  +
test eax eax +
mov edi eax +
jz loc_409D48  +
mov eax [esp+98h+var_6C] +
mov ecx [esp+98h+var_80] +
mov edx [esp+98h+var_7C] +
mov [ebx+24h] eax +
mov eax [esp+98h+var_84] +
add eax [esp+98h+var_70] +
mov [esp+98h+var_98] ecx +
mov ecx edi +
call sub_4096A0  +
test eax eax +
jnz loc_409DAB  +
mov [esp+98h+var_98] 11h +
call sub_4040F0  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_4064E0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_98] eax +
call sub_451950  +
mov [esp+98h+var_98] esi +
add eax ebp +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_74] eax +
call sub_406290  +
test eax eax +
mov edi eax +
jz loc_409D48  +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_74] +
mov [esp+98h+var_94] eax +
lea eax [edi+ebp] +
mov [esp+98h+var_98] eax +
call sub_451910  +
test eax eax +
jnz loc_409D30  +
mov ecx [esp+98h+var_74] +
add ecx ebp +
cmp [esp+98h+var_48] ecx +
mov [esp+98h+var_74] ecx +
jbe loc_409D10  +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_404E30  +
nop   +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_98] eax +
call free  +
mov eax [esp+98h+var_74] +
mov [ebx+6Ch] edi +
mov [ebx+24h] eax +
movzx eax byte ptr [ebx+18h] +
and eax 0FFFFFFCFh +
or eax 10h +
mov [ebx+18h] al +
mov eax [esp+98h+var_48] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_4064E0  +
mov eax [esp+98h+var_84] +
and byte ptr [ebx+18h] 0CFh +
mov [ebx+6Ch] eax +
mov eax [esp+98h+var_48] +
jmp loc_409D07  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_4064E0  +
mov [esp+98h+var_98] 11h +
call sub_4040F0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] esi +
mov [esp+98h+var_80] edx +
call sub_406290  +
mov edx [esp+98h+var_80] +
test eax eax +
mov edi eax +
jz loc_409D48  +
mov eax [esp+98h+var_6C] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
mov [ebx+24h] eax +
mov [esp+98h+var_80] edx +
call sub_404E30  +
mov edx [esp+98h+var_80] +
lea ecx [edi+ebp] +
mov eax [esp+98h+var_84] +
add eax [esp+98h+var_70] +
mov [esp+98h+var_98] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] eax +
call memmove  +
jmp loc_409CE0  +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_98] eax +
call free  +
movzx eax byte ptr [ebx+18h] +
mov [ebx+6Ch] edi +
and eax 0FFFFFFCFh +
or eax 10h +
mov [ebx+18h] al +
mov eax [esp+98h+var_6C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_90] offset aBfd_compress_s +
mov [esp+98h+var_94] 66h +
mov [esp+98h+var_98] offset a____Binutils_6 +
call sub_404070  +
nop   +
sub esp 2Ch +
lea eax [esp+0C4h+var_A8] +
mov [esp+0C4h+var_B8] eax +
lea eax [esp+0C4h+var_AC] +
mov [esp+0C4h+var_BC] eax +
mov eax [esp+0C4h+var_90] +
mov [esp+0C4h+var_C0] eax +
mov eax [esp+0C4h+var_94] +
mov [esp+0C4h+var_C4] eax +
call sub_4099E0  +
xor edx edx +
test eax eax +
jz loc_409E30  +
mov ecx [esp+0C4h+var_AC] +
test ecx ecx +
js loc_409E30  +
mov eax [esp+0C4h+var_A8] +
xor edx edx +
test eax eax +
setnz dl  +
mov eax edx +
add esp 2Ch +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx ecx byte ptr [esi+28h] +
and ecx 18h +
cmp cl 8 +
jnz loc_409F90  +
mov edi [ebx+24h] +
test edi edi +
jz loc_409F90  +
mov edx [ebx+28h] +
test edx edx +
jnz loc_409F90  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_409FA6  +
mov [esp+2Ch+var_2C] 5 +
call sub_4040F0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+18h] 30h +
jnz loc_409F90  +
mov [esp+2Ch+var_2C] edi +
call sub_408000  +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov ebp eax +
call sub_4034C0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_409F9E  +
mov [esp+2Ch+var_2C] edi +
mov ecx ebp +
mov edx ebx +
mov eax esi +
call loc_409B80  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_409F9E  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
movzx ecx byte ptr [eax+28h] +
mov ebx [edx+24h] +
and ecx 18h +
cmp cl 10h +
jnz loc_40A02E  +
test ebx ebx +
jz loc_40A02E  +
mov ecx [esp+18h+arg_8] +
test ecx ecx +
jz loc_40A02E  +
mov ecx [edx+6Ch] +
test ecx ecx +
jz loc_40A041  +
mov [esp+18h+var_18] 5 +
call sub_4040F0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx+2Ch] +
test ecx ecx +
jnz loc_40A02E  +
test byte ptr [edx+18h] 30h +
jnz loc_40A02E  +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ebx +
call loc_409B80  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_40A03C  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax+8] +
mov [esp+18h+var_18] eax +
call fclose  +
test eax eax +
jnz loc_40A0B8  +
mov edx [ebx+10h] +
mov eax [ebx+14h] +
cmp ebx ds:dword_49A0C8 +
mov [edx+14h] eax +
mov ecx [ebx+14h] +
mov [ecx+10h] edx +
jz loc_40A0D0  +
mov dword ptr [ebx+8] 0 +
mov eax esi +
sub ds:dword_49A0CC 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] 1 +
xor si si +
call sub_4040F0  +
jmp loc_40A08B  +
***
xor eax eax +
cmp ebx ecx +
cmovnz eax ecx +
mov ds:dword_49A0C8 eax +
jmp loc_40A0A2  +
***
mov eax ds:dword_49A0C8 +
test eax eax +
jz loc_40A130  +
push ebx  +
sub esp 18h +
mov ebx [eax+10h] +
cmp byte ptr [ebx+2Ah] 0 +
jns loc_40A101  +
jmp loc_40A110  +
mov ebx [ebx+10h] +
cmp byte ptr [ebx+2Ah] 0 +
js loc_40A110  +
cmp eax ebx +
jnz loc_40A0F8  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_4039B0  +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx+1Ch] edx +
add esp 18h +
pop ebx  +
jmp sub_40A070  +
mov eax 1 +
retn   +
***
sub esp 1Ch +
sub esp 0Ch +
xor eax eax +
mov edx [esp+0Ch+arg_0] +
cmp dword ptr [edx+0Ch] offset off_475AE0 +
jz loc_40A196  +
add esp 0Ch +
retn   +
mov ecx [edx+8] +
test ecx ecx +
jz loc_40A192  +
mov eax edx +
call sub_40A070  +
sub eax 1 +
jmp loc_40A192  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_40A248  +
mov eax ds:dword_49A0D0 +
test eax eax +
jnz loc_40A1D8  +
mov ds:dword_49A0D0 0Ah +
mov al 0Ah +
cmp ds:dword_49A0CC eax +
jge loc_40A220  +
mov eax ds:dword_49A0C8 +
mov dword ptr [ebx+0Ch] offset off_475AE0 +
test eax eax +
jz loc_40A240  +
mov [ebx+14h] eax +
mov eax [eax+10h] +
mov [ebx+10h] eax +
mov [eax+14h] ebx +
mov eax [ebx+14h] +
mov [eax+10h] ebx +
add ds:dword_49A0CC 1 +
mov eax 1 +
mov ds:dword_49A0C8 ebx +
add esp 18h +
pop ebx  +
retn   +
call sub_40A0E0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40A214  +
mov eax ds:dword_49A0C8 +
mov dword ptr [ebx+0Ch] offset off_475AE0 +
test eax eax +
jnz loc_40A1F0  +
lea esi [esi+0] +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_40A202  +
mov [esp+18h+var_14] 1FFh +
mov [esp+18h+var_18] offset a____Binutils_0 +
call sub_404040  +
jmp loc_40A1C3  +
***
jmp sub_40A270  +
***
mov eax [esp+arg_0] +
cmp dword ptr [eax+0Ch] offset off_475AE0 +
jz loc_40A283  +
mov eax 1 +
retn   +
mov edx [eax+8] +
test edx edx +
jz loc_40A27D  +
jmp sub_40A070  +
***
push ebx  +
mov ebx 1 +
sub esp 8 +
mov edx ds:dword_49A0C8 +
test edx edx +
jz loc_40A2B7  +
cmp dword ptr [edx+0Ch] offset off_475AE0 +
mov eax 1 +
jz loc_40A2C0  +
and ebx eax +
test edx edx +
jnz loc_40A2A3  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
mov ecx [edx+8] +
test ecx ecx +
jz loc_40A2B1  +
mov eax edx +
call sub_40A070  +
mov edx ds:dword_49A0C8 +
jmp loc_40A2B1  +
***
mov ebx [esp+48h+arg_0] +
or byte ptr [ebx+2Ah] 80h +
mov eax ds:dword_49A0D0 +
test eax eax +
jnz loc_40A301  +
mov ds:dword_49A0D0 0Ah +
mov al 0Ah +
cmp ds:dword_49A0CC eax +
jge loc_40A3C0  +
movzx eax byte ptr [ebx+28h] +
shr al 3 +
and eax 3 +
sub eax 2 +
cmp eax 1 +
ja loc_40A3D4  +
test byte ptr [ebx+2Bh] 2 +
mov eax [ebx] +
jz loc_40A360  +
mov [esp+48h+var_44] offset aRB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
test eax eax +
mov [ebx+8] eax +
jz loc_40A3F0  +
mov [esp+48h+var_48] ebx +
call sub_40A1B0  +
test eax eax +
jz loc_40A3CD  +
mov eax [ebx+8] +
add esp 48h +
pop ebx  +
retn   +
lea edx [esp+48h+var_38] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call ds:_stati64  +
test eax eax +
jnz loc_40A390  +
mov eax [esp+48h+var_1C] +
or eax [esp+48h+var_20] +
jz loc_40A390  +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_45F630  +
lea esi [esi+0] +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
or byte ptr [ebx+2Bh] 2 +
mov [ebx+8] eax +
test eax eax +
jnz loc_40A346  +
mov [esp+48h+var_48] 1 +
call sub_4040F0  +
jmp loc_40A352  +
call sub_40A0E0  +
test eax eax +
jnz loc_40A30D  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx] +
mov [esp+48h+var_44] offset aRb +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_40A3A9  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_40A3A9  +
***
push ebx  +
sub esp 24h +
test byte ptr [eax+2Ah] 1 +
jnz loc_40A509  +
mov ebx eax +
jmp loc_40A427  +
mov ebx ecx +
mov ecx [ebx+8Ch] +
test ecx ecx +
jnz loc_40A425  +
mov eax [ebx+8] +
test eax eax +
jz loc_40A473  +
mov edx ds:dword_49A0C8 +
cmp ebx edx +
jz loc_40A46D  +
mov esi [ebx+14h] +
test edx edx +
mov ecx [ebx+10h] +
mov [ecx+14h] esi +
mov esi [ebx+14h] +
mov [esi+10h] ecx +
jz loc_40A49C  +
mov [ebx+14h] edx +
mov edx [edx+10h] +
mov [ebx+10h] edx +
mov [edx+14h] ebx +
mov edx [ebx+14h] +
mov [edx+10h] ebx +
mov ds:dword_49A0C8 ebx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
test dl 1 +
mov [esp+28h+var_C] edx +
jnz loc_40A46D  +
mov [esp+28h+var_28] ebx +
call sub_40A2E0  +
test eax eax +
jz loc_40A4DE  +
mov edx [esp+28h+var_C] +
and edx 2 +
jz loc_40A4A4  +
mov eax [ebx+8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_40A467  +
mov eax [ebx+8] +
mov [esp+28h+var_1C] 0 +
mov edx [ebx+18h] +
mov ecx [ebx+1Ch] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_20] ecx +
call sub_4039C0  +
test eax eax +
jz loc_40A493  +
mov edx [esp+28h+var_C] +
and edx 4 +
jnz loc_40A493  +
mov [esp+28h+var_28] 1 +
call sub_4040F0  +
mov ebx off_4733A4 +
call sub_403EA0  +
mov [esp+28h+var_28] eax +
call sub_403EB0  +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] offset aReopeningBS +
mov [esp+28h+var_20] eax +
call ebx  +
xor eax eax +
jmp loc_40A46D  +
mov [esp+28h+var_20] offset aBfd_cache_look +
mov [esp+28h+var_24] 0F2h +
mov [esp+28h+var_28] offset a____Binutils_0 +
call sub_404070  +
lea esi [esi+0] +
lea edi [edi+0] +
sub esp 1Ch +
mov eax [esp+44h+var_24] +
cmp eax ds:dword_49A0C8 +
jz loc_40A570  +
mov edx 4 +
call sub_40A410  +
test eax eax +
jz loc_40A590  +
mov [esp+44h+var_44] eax +
call _fileno_0  +
mov edx [esp+44h+var_20] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_44] eax +
call ds:_fstati64  +
test eax eax +
js loc_40A575  +
add esp 1Ch +
retn   +
mov eax [eax+8] +
jmp loc_40A549  +
mov [esp+44h+var_44] 1 +
mov [esp+44h+var_38] eax +
call sub_4040F0  +
mov eax [esp+44h+var_38] +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_40A56A  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ds:dword_49A0C8 +
jz loc_40A5D1  +
mov edx 1 +
call sub_40A410  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40A5CD  +
mov [esp+1Ch+var_1C] edx +
call fflush  +
test eax eax +
js loc_40A5D6  +
add esp 1Ch +
retn   +
mov edx [eax+8] +
jmp loc_40A5BB  +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_4040F0  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push ebx  +
mov eax [esp+arg_0] +
cmp eax ds:dword_49A0C8 +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov ebx [esp+arg_C] +
jz loc_40A636  +
xor edx edx +
cmp ebx 1 +
setnz dl  +
add edx edx +
call sub_40A410  +
test eax eax +
jz loc_40A640  +
mov [esp+arg_C] ebx +
mov [esp+arg_4] esi +
mov [esp+arg_8] edi +
mov [esp+arg_0] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4039C0  +
mov eax [eax+8] +
jmp loc_40A61A  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
mov ebx [esp+8+arg_0] +
cmp ebx ds:dword_49A0C8 +
jz loc_40A680  +
mov edx 1 +
mov eax ebx +
call sub_40A410  +
test eax eax +
jz loc_40A687  +
mov [esp+8+arg_0] eax +
add esp 8 +
pop ebx  +
jmp sub_4039B0  +
mov eax [ebx+8] +
test eax eax +
jnz loc_40A670  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+arg_C] +
cmp eax ds:dword_49A0C8 +
mov ebx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] ecx +
jz loc_40A730  +
xor edx edx +
call sub_40A410  +
mov ebp eax +
xor eax eax +
xor edx edx +
test ebp ebp +
jz loc_40A6FB  +
mov eax [esp+2Ch+arg_4] +
xor edi edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
cmp [esp+2Ch+var_10] 0 +
mov esi eax +
jge loc_40A703  +
mov eax esi +
mov edx edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jle loc_40A735  +
mov [esp+2Ch+var_2C] ebp +
call ferror  +
test eax eax +
nop   +
jz loc_40A6F7  +
mov [esp+2Ch+var_2C] 1 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40A6FB  +
mov ebp [eax+8] +
jmp loc_40A6C8  +
cmp ebx eax +
jbe loc_40A6F7  +
jmp loc_40A705  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+3Ch+arg_C] +
mov eax [esp+3Ch+arg_8] +
cmp edx 0 +
mov [esp+3Ch+var_1C] eax +
mov [esp+3Ch+var_18] edx +
jl loc_40A93B  +
jle loc_40A930  +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_20] 0 +
mov ecx [esp+3Ch+var_1C] +
mov ebx [esp+3Ch+var_18] +
sub ecx [esp+3Ch+var_24] +
sbb ebx [esp+3Ch+var_20] +
cmp ebx 0 +
jle loc_40A8D3  +
mov esi [esp+3Ch+var_24] +
xor ebx ebx +
mov ecx 800000h +
mov eax ds:dword_49A0C8 +
add esi [esp+3Ch+arg_4] +
cmp [esp+3Ch+arg_0] eax +
jz loc_40A906  +
mov eax [esp+3Ch+arg_0] +
xor edx edx +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call sub_40A410  +
mov ecx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
mov ebp eax +
test ebp ebp +
jz loc_40A915  +
mov [esp+3Ch+var_34] ecx +
xor edi edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call fread  +
mov ebx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
cmp edi ebx +
mov esi eax +
jge loc_40A8B4  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call ferror  +
mov ecx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
test eax eax +
jnz loc_40A920  +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
mov [esp+3Ch+var_3C] 12h +
call sub_4040F0  +
mov eax esi +
mov edx edi +
neg eax  +
mov ecx [esp+3Ch+var_14] +
adc edx 0 +
mov ebx [esp+3Ch+var_10] +
neg edx  +
mov eax edx +
shr eax 1Fh +
test al al +
jnz loc_40A864  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
mov ebp eax +
or ebp edx +
jnz loc_40A86C  +
add [esp+3Ch+var_24] esi +
adc [esp+3Ch+var_20] edi +
cmp edi ebx +
jge loc_40A880  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jg loc_40A886  +
cmp esi ecx +
jb loc_40A870  +
mov eax [esp+3Ch+var_18] +
cmp [esp+3Ch+var_20] eax +
jg loc_40A870  +
jl loc_40A776  +
mov eax [esp+3Ch+var_1C] +
cmp [esp+3Ch+var_24] eax +
jb loc_40A776  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jg loc_40A8BE  +
cmp eax ecx +
jb loc_40A806  +
mov eax esi +
mov edx edi +
neg eax  +
adc edx 0 +
neg edx  +
mov eax edx +
shr eax 1Fh +
jmp loc_40A852  +
jl loc_40A8E1  +
cmp ecx 800000h +
ja loc_40A78F  +
mov eax ebx +
xor esi esi +
xor edi edi +
or eax ecx +
jz loc_40A856  +
mov esi [esp+3Ch+var_24] +
mov eax ds:dword_49A0C8 +
add esi [esp+3Ch+arg_4] +
cmp [esp+3Ch+arg_0] eax +
jnz loc_40A7AD  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+8] +
test ebp ebp +
jnz loc_40A7D2  +
xor esi esi +
xor edi edi +
jmp loc_40A856  +
mov [esp+3Ch+var_3C] 1 +
jmp loc_40A835  +
cmp [esp+3Ch+var_1C] 0 +
ja loc_40A766  +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_20] 0 +
jmp loc_40A870  +
***
mov eax 1 +
retn   +
***
mov eax 10h +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_4137C0  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call strlen  +
mov [esp+18h+var_18] edi +
mov ebx eax +
call strlen  +
mov [esp+18h+var_18] esi +
lea eax [ebx+eax+0Ah] +
mov [esp+18h+var_14] eax +
call sub_406290  +
mov ebx eax +
mov eax offset unk_475B00 +
test ebx ebx +
jz loc_40AA19  +
mov eax [esi] +
mov [esp+18h+var_C] edi +
mov [esp+18h+var_14] offset a_binary_S_S +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sprintf  +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_40AA17  +
mov edx ebx +
lea esi [esi+0] +
test byte ptr ds:word_490F00[ecx+ecx] 8Ch +
jnz loc_40AA0D  +
mov byte ptr [edx] 5Fh +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_40AA00  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebp [esi+0A0h] +
mov dword ptr [esp+4] 48h +
mov [esp] esi +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_40AAF0  +
mov [eax] esi +
mov edx offset aStart +
mov eax esi +
call sub_40A9A0  +
mov edx offset aEnd +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 2 +
mov [ebx+10h] ebp +
mov dword ptr [ebx+14h] 0 +
mov [ebx+18h] esi +
mov [ebx+4] eax +
mov eax esi +
call sub_40A9A0  +
mov edx offset aSize +
mov [ebx+1Ch] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+24h] 2 +
mov [ebx+28h] ebp +
mov dword ptr [ebx+2Ch] 0 +
mov [ebx+20h] eax +
mov eax esi +
mov [ebx+30h] esi +
call sub_40A9A0  +
mov [ebx+34h] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+3Ch] 2 +
mov dword ptr [ebx+40h] offset off_473250 +
mov dword ptr [ebx+44h] 0 +
mov [ebx+38h] eax +
lea eax [ebx+18h] +
mov [edi] ebx +
add ebx 30h +
mov [edi+4] eax +
mov eax 3 +
mov [edi+8] ebx +
mov dword ptr [edi+0Ch] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_40AAE8  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 1 +
jnz loc_40AB70  +
lea eax [esp+10h] +
mov dword ptr [ebx+7Ch] 3 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_403BA0  +
test eax eax +
js loc_40AB83  +
mov dword ptr [esp+8] 123h +
mov dword ptr [esp+4] offset a_data +
mov [esp] ebx +
call sub_403170  +
test eax eax +
jz loc_40AB93  +
mov edx [esp+28h] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+50h] 0 +
mov dword ptr [eax+54h] 0 +
mov [eax+24h] edx +
mov [ebx+0A0h] eax +
mov eax [ebx+4] +
add esp 48h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4040F0  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4040F0  +
xor eax eax +
jmp loc_40AB6A  +
***
xor eax eax +
jmp loc_40AB6A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+38h] +
mov edi [esp+44h] +
mov edx [esp+40h] +
mov esi [esp+30h] +
mov [esp+4] eax +
mov eax [esp+3Ch] +
test edi edi +
mov ebp [esp+34h] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
jz loc_40AC4D  +
test byte ptr [esi+2Bh] 10h +
jnz loc_40AC41  +
mov eax [esi+64h] +
xor ebx ebx +
mov dword ptr [esp] 0 +
test eax eax +
mov edx eax +
jnz loc_40ABF7  +
jmp loc_40AC3D  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_40AC27  +
mov ecx [edx+14h] +
and ecx 303h +
cmp ecx 103h +
jnz loc_40ABF0  +
mov ecx [edx+24h] +
test ecx ecx +
jz loc_40ABF0  +
mov ecx [esp] +
test ecx ecx +
jnz loc_40AC60  +
mov ebx [edx+20h] +
mov edx [edx+0Ch] +
mov dword ptr [esp] 1 +
test edx edx +
jnz loc_40ABF7  +
mov edx [eax+20h] +
mov dword ptr [eax+54h] 0 +
sub edx ebx +
mov [eax+50h] edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_40AC27  +
or byte ptr [esi+2Bh] 10h +
mov eax [ebp+14h] +
test al 3 +
jz loc_40AC4D  +
test ah 2 +
jz loc_40AC72  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [edx+20h] +
mov dword ptr [esp] 1 +
cmp ecx ebx +
jnb loc_40ABF0  +
mov ebx ecx +
jmp loc_40AC19  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+44h] edi +
mov [esp+34h] ebp +
mov [esp+3Ch] eax +
mov eax [esp+4] +
mov [esp+30h] esi +
mov [esp+40h] edx +
mov [esp+38h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_408990  +
***
push ebx  +
sub esp 18h +
mov edx [esp+30h] +
mov ebx [esp+20h] +
mov eax [esp+2Ch] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_403BF0  +
xor edx edx +
test eax eax +
jnz loc_40ACFF  +
mov eax [esp+34h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_4039E0  +
xor edx edx +
cmp [esp+34h] eax +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
mov edx [esp+8] +
xor eax eax +
jmp loc_40AD20  +
add eax 1 +
cmp eax 25h +
jz loc_40AD37  +
cmp ds:dword_4767A0[eax*8] edx +
jnz loc_40AD18  +
imul eax ds:dword_4767A4[eax*8] +
add eax offset dword_476AE0 +
retn   +
***
xor al al +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
movzx eax byte ptr [eax+4] +
cmp eax 24h +
jbe loc_40AD6B  +
mov [esp+8] eax +
mov eax [esp+20h] +
mov dword ptr [esp] offset aBInvalidAvrRel +
mov [esp+4] eax +
call off_4733A4  +
xor eax eax +
imul eax eax +
mov edx [esp+24h] +
add eax offset dword_476AE0 +
mov [edx+0Ch] eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov ecx [edx+120h] +
mov ebx [ecx+3Ch] +
mov ebp [ecx+38h] +
mov edi [ebx+1Ch] +
mov ebx [edx+13Ch] +
mov [esp+4+var_4] edi +
test ebx ebx +
jz loc_40ADC4  +
mov esi [edx+144h] +
xor ecx ecx +
cmp [esi] eax +
jnz loc_40ADBD  +
jmp loc_40ADD1  +
cmp [esi+ecx*4] eax +
lea edi ds:0[ecx*4] +
jz loc_40ADD3  +
add ecx 1 +
cmp ecx ebx +
jnz loc_40ADB1  +
add esp 4 +
mov eax 20000h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov eax [esp+4+var_4] +
mov edx [edx+140h] +
add eax ebp +
add eax [edx+edi] +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+14h] 0 +
mov eax 1 +
retn   +
***
jmp loc_40AE20  +
mov eax [esp+4] +
mov edx [esp+8] +
cmp dword ptr [eax+14h] 1 +
mov edx [edx+120h] +
sbb eax eax +
not eax  +
and eax 4 +
add [edx+24h] eax +
mov eax 1 +
retn   +
***
mov ebx [eax+0A0h] +
mov ecx [ebx+68h] +
mov edx [ebx+78h] +
test ecx ecx +
jnz loc_40AE77  +
test edx edx +
jz loc_40AE70  +
cmp [ebx+78h] edx +
jz loc_40AE70  +
mov [ebx+78h] edx +
add esp 28h +
mov eax edx +
pop ebx  +
retn   +
test edx edx +
jnz loc_40AE64  +
lea edx [ebx+48h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_28] eax +
call sub_421030  +
mov edx eax +
jmp loc_40AE64  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_407D00  +
mov edx 2 +
lea ecx [eax-1] +
cmp ecx 6Ah +
ja loc_40AEE4  +
movzx edx ds:byte_47653F[eax] +
mov eax [ebx+0A0h] +
mov ecx 53h +
mov [eax+26h] cx +
mov eax [ebx+0A0h] +
and dword ptr [eax+20h] 0FFFFFF80h +
mov eax [ebx+0A0h] +
or [eax+20h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+0A0h] +
movzx ecx word ptr [edx+26h] +
cmp cx 1057h +
jnz loc_40AF60  +
mov edx [edx+20h] +
mov ebx 2 +
and edx 7Fh +
lea ecx [edx-1] +
cmp ecx 6Ah +
ja loc_40AF43  +
movzx ebx ds:byte_4764BF[edx] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 44h +
mov [esp] eax +
call sub_407D90  +
add esp 18h +
pop ebx  +
retn   +
***
cmp cx 53h +
mov ebx 2 +
jz loc_40AF29  +
jmp loc_40AF43  +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 148h +
call sub_408190  +
test eax eax +
mov ebx eax +
jz loc_40AFF0  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_40B0C0 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43BD70  +
test eax eax +
jz loc_40AFE2  +
lea eax [ebx+0FCh] +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] offset sub_40B060 +
mov [esp] eax +
call sub_408DA0  +
test eax eax +
jz loc_40AFF4  +
mov dword ptr [ebx+24h] offset loc_40B010 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_40AFDD  +
***
xor eax eax +
jmp loc_40AFDD  +
***
mov eax [esp+30h] +
mov [esp] eax +
call sub_42F580  +
xor eax eax +
jmp loc_40AFDD  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esi+9Ch] +
mov eax [ebx+140h] +
test eax eax +
jz loc_40B031  +
mov [esp] eax +
call free  +
mov eax [ebx+144h] +
test eax eax +
jz loc_40B043  +
mov [esp] eax +
call free  +
add ebx 0FCh +
mov [esp] ebx +
call sub_408DD0  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_42F580  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_40B0A0  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_409320  +
test eax eax +
jz loc_40B0B4  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_409270  +
test eax eax +
jnz loc_40B070  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
jmp loc_42F4B0  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 6Ch +
mov edi [eax+0A0h] +
mov [esp+70h+var_40] ecx +
mov ecx eax +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
mov [esp+70h+var_50] edx +
mov [esp+70h+var_48] eax +
call sub_424FB0  +
mov [esp+70h+var_2C] eax +
mov eax [esi+8Ch] +
mov ecx [eax+30h] +
lea edx [eax+90h] +
mov [esp+70h+var_54] ecx +
xor ecx ecx +
cmp esi [esi+3Ch] +
mov esi [esi+24h] +
cmovnz ecx edx +
mov edx [ecx] +
mov [esp+70h+var_4C] esi +
test edx edx +
jz loc_40B615  +
mov eax [esp+70h+arg_0] +
xor ebx ebx +
mov esi [esp+70h+var_40] +
lea ebp [eax+esi] +
mov eax ebp +
mov ebp edi +
mov edi eax +
nop   +
mov eax [ecx+8] +
lea esi [ebx+ebx*2] +
lea esi [eax+esi*8] +
mov eax [esi+4] +
cmp eax [esp+70h+var_40] +
jbe loc_40B5F2  +
cmp eax edi +
jb loc_40B620  +
mov [esp+70h+var_3C] eax +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov eax [eax+8Ch] +
mov eax [eax+68h] +
xor ebx ebx +
mov ecx [esp+70h+var_40] +
mov [esp+70h+var_4C] eax +
mov eax [esp+70h+var_50] +
mov ebp [eax+4Ch] +
mov eax [esp+70h+var_3C] +
sub eax ecx +
cmp eax [esp+70h+arg_0] +
jz loc_40B1C0  +
sub eax [esp+70h+arg_0] +
mov ebx [esp+70h+var_54] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+arg_0] +
add eax ecx +
add eax ebx +
mov [esp+70h+var_6C] eax +
mov eax ebx +
mov ebx 1 +
add eax ecx +
mov [esp+70h+var_70] eax +
call memmove  +
test esi esi +
jz loc_40B96B  +
mov eax [esi+8] +
cmp eax 2 +
jz loc_40B835  +
cmp eax 3 +
jz loc_40B63E  +
cmp eax 1 +
jz loc_40B82D  +
xor eax eax +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_3C] +
mov [esp+70h+var_68] esi +
sub eax esi +
add eax [esp+70h+var_54] +
mov [esp+70h+var_70] eax +
call memset  +
test ebx ebx +
mov [esp+70h+var_30] 1 +
jz loc_40B740  +
mov esi [esp+70h+var_4C] +
lea eax [ebp+ebp*2+0] +
lea esi [esi+eax*4] +
mov eax [esp+70h+var_50] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
cmp esi ebx +
jbe loc_40B27B  +
mov [esp+70h+var_4C] edi +
mov ebp [esp+70h+var_40] +
mov edi [esp+70h+var_50] +
mov eax [edi+3Ch] +
mov ecx [ebx] +
mov edx [edi+38h] +
mov eax [eax+1Ch] +
cmp ebp ecx +
mov [esp+70h+var_54] eax +
jnb loc_40B270  +
cmp [esp+70h+var_3C] ecx +
jbe loc_40B270  +
mov eax ds:dword_49A0E0 +
test eax eax +
jnz loc_40B7AD  +
sub ecx [esp+70h+arg_0] +
mov [ebx] ecx +
add ebx 0Ch +
cmp esi ebx +
ja loc_40B241  +
mov edi [esp+70h+var_4C] +
mov eax [esp+70h+var_48] +
xor ecx ecx +
lea esi [edi+48h] +
mov [esp+70h+var_28] esi +
mov eax [eax+64h] +
test eax eax +
mov [esp+70h+var_4C] eax +
jz loc_40B415  +
mov ebp edi +
mov edi ecx +
nop   +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_40B400  +
mov ecx [esp+70h+var_50] +
mov esi [esp+70h+var_40] +
mov ebx [esp+70h+arg_4] +
mov edx [ecx+3Ch] +
add esi [ecx+38h] +
mov ecx [edx+1Ch] +
mov [esp+70h+var_44] esi +
add [esp+70h+var_44] ecx +
mov ecx [esp+70h+var_44] +
mov edx ecx +
sub edx [esp+70h+arg_0] +
test ebx ebx +
cmovz edx ecx +
mov ecx [esp+70h+var_4C] +
mov [esp+70h+var_44] edx +
mov edx [ecx+8Ch] +
mov ebx [edx+68h] +
test ebx ebx +
jz loc_40B7EB  +
lea eax [eax+eax*2] +
lea ecx [ebx+eax*4] +
cmp ebx ecx +
jnb loc_40B400  +
mov esi ecx +
jmp loc_40B31B  +
add ebx 0Ch +
cmp esi ebx +
jbe loc_40B400  +
test edi edi +
mov edx [ebp+68h] +
jz loc_40B650  +
mov eax [ebx+4] +
shr eax 8 +
cmp eax edx +
jnb loc_40B310  +
lea eax [eax+eax*4] +
lea edx [edi+eax*4] +
mov eax [edx+10h] +
mov [esp+70h+var_54] edx +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_70] eax +
call sub_423A90  +
mov edx [esp+70h+var_54] +
cmp eax [esp+70h+var_50] +
mov ecx [edx] +
jnz loc_40B310  +
mov edx [esp+70h+var_50] +
mov eax [edx+3Ch] +
mov edx [edx+38h] +
mov eax [eax+1Ch] +
mov [esp+70h+var_38] eax +
add ecx [esp+70h+var_38] +
lea eax [ecx+edx] +
mov [esp+70h+var_54] eax +
mov eax ds:dword_49A0E0 +
test eax eax +
jnz loc_40B6B0  +
movzx eax byte ptr [ebx+4] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
jbe loc_40B6ED  +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
add ecx eax +
mov [esp+70h+var_34] ecx +
mov ecx [esp+70h+var_54] +
cmp [esp+70h+var_44] ecx +
jb loc_40B310  +
mov ecx [esp+70h+var_34] +
cmp [esp+70h+var_44] ecx +
jnb loc_40B310  +
add edx [esp+70h+var_38] +
add edx [esp+70h+var_3C] +
cmp edx ecx +
jb loc_40B310  +
mov ecx ds:dword_49A0E0 +
sub eax [esp+70h+arg_0] +
test ecx ecx +
mov [ebx+8] eax +
jz loc_40B310  +
mov [esp+70h+var_70] offset aRelocationSAdd +
add ebx 0Ch +
call puts  +
cmp esi ebx +
ja loc_40B31B  +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+70h+var_4C] eax +
jnz loc_40B2A0  +
mov edi ebp +
mov esi [edi+78h] +
test esi esi +
jz loc_40B4F5  +
mov eax [edi+68h] +
lea edx [eax+eax*4] +
lea ebp [esi+edx*4] +
cmp esi ebp +
jnb loc_40B4F8  +
movzx eax byte ptr [esp+70h+var_30] +
mov [esp+70h+var_4C] edi +
mov edi [esp+70h+var_2C] +
and eax 1 +
mov byte ptr [esp+70h+var_44] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_38] eax +
jmp loc_40B461  +
add esi 14h +
cmp ebp esi +
jbe loc_40B4F1  +
cmp [esi+10h] edi +
jnz loc_40B456  +
mov eax [esi+4] +
mov ebx [esi] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_54] eax +
add eax ebx +
test edx edx +
jz loc_40B7DD  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnbe dl  +
cmp [esp+70h+var_40] ebx +
jb loc_40B750  +
cmp [esp+70h+var_40] eax +
jnb loc_40B750  +
test edx edx +
jz loc_40B750  +
cmp eax [esp+70h+var_38] +
jb loc_40B845  +
mov ecx [esp+70h+var_54] +
sub ecx [esp+70h+arg_0] +
xor edx edx +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jz loc_40B79F  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnbe al  +
test eax eax +
jz loc_40B456  +
test dl dl +
jz loc_40B456  +
mov eax [esp+70h+arg_0] +
sub [esi] eax +
add esi 14h +
cmp ebp esi +
ja loc_40B461  +
mov edi [esp+70h+var_4C] +
mov eax [edi+68h] +
mov esi [esp+70h+var_48] +
mov edx [esi+0A0h] +
mov ebp [edx+218h] +
mov edx [edi+60h] +
shr edx 4 +
sub edx eax +
lea eax [ebp+edx*4+0] +
cmp ebp eax +
mov esi eax +
jnb loc_40B740  +
movzx eax byte ptr [esp+70h+var_30] +
mov ecx [esp+70h+var_50] +
and eax 1 +
mov byte ptr [esp+70h+var_4C] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_48] eax +
jmp loc_40B54B  +
add ebp 4 +
cmp esi ebp +
jbe loc_40B740  +
mov ebx [ebp+0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_40B540  +
cmp [ebx+14h] ecx +
jnz loc_40B540  +
mov eax [ebx+2Ch] +
mov edi [ebx+18h] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_50] eax +
add eax edi +
test edx edx +
mov [esp+70h+var_54] eax +
jz loc_40B9E2  +
cmp [esp+70h+var_3C] eax +
setnbe al  +
movzx eax al +
cmp [esp+70h+var_40] edi +
jb loc_40B598  +
mov edx [esp+70h+var_54] +
cmp [esp+70h+var_40] edx +
jb loc_40B861  +
mov eax [esp+70h+var_30] +
test eax eax +
jz loc_40BA47  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnbe al  +
mov edx eax +
cmp [esp+70h+var_40] edi +
setb al  +
and dl al +
jnz loc_40BA2F  +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_40B9D4  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnbe dl  +
test edx edx +
jz loc_40B540  +
test al al +
jz loc_40B540  +
mov eax [esp+70h+arg_0] +
sub [ebx+18h] eax +
jmp loc_40B540  +
cmp eax edi +
jnb loc_40B15E  +
add ebx 1 +
cmp [ecx] ebx +
ja loc_40B140  +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov esi [esp+70h+var_4C] +
mov eax [eax+8Ch] +
mov [esp+70h+var_3C] esi +
xor esi esi +
jmp loc_40B16E  +
mov [esp+70h+var_6C] 7A2h +
mov [esp+70h+var_70] offset a____Binutil_12 +
mov [esp+70h+var_44] ecx +
call sub_404040  +
mov ecx [esp+70h+var_44] +
jmp loc_40B5FA  +
mov eax [esi+10h] +
mov ecx [esp+70h+arg_0] +
add [esi+14h] ecx +
jmp loc_40B1E8  +
test edx edx +
jz loc_40B310  +
mov edi [ebp+78h] +
test edi edi +
jnz loc_40B326  +
mov eax [esp+70h+var_28] +
mov [esp+70h+var_58] 0 +
mov [esp+70h+var_5C] 0 +
mov [esp+70h+var_60] 0 +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] edx +
mov [esp+70h+var_70] eax +
call sub_421030  +
test eax eax +
mov edi eax +
jnz loc_40B986  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+70h+var_44] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_34] edx +
mov [esp+70h+var_64] eax +
mov eax [ebx+8] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] offset aCheckingIfTheR +
add eax ecx +
mov [esp+70h+var_68] eax +
call printf  +
movzx eax byte ptr [ebx+4] +
mov edx [esp+70h+var_34] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
ja loc_40B392  +
mov ecx [esp+70h+var_4C] +
mov edx [ecx+8Ch] +
mov edx [edx+30h] +
test edx edx +
mov [esp+70h+var_14] edx +
jz loc_40B9F5  +
add edx [ebx] +
cmp eax 1Fh +
mov [esp+70h+var_34] edx +
jz loc_40B94F  +
cmp eax 20h +
jz loc_40B933  +
cmp eax 1Eh +
jz loc_40B88C  +
mov [esp+70h+var_6C] 6F0h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_404040  +
jmp loc_40B310  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_40B81F  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnbe cl  +
cmp [esp+70h+var_40] ebx +
setb dl  +
and cl dl +
jz loc_40B4BC  +
cmp [esp+70h+var_3C] eax +
setbe dl  +
and dl byte ptr [esp+70h+var_44] +
jz loc_40B83C  +
mov ecx [esp+70h+var_54] +
add ecx [esp+70h+arg_0] +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jnz loc_40B4C8  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnb al  +
jmp loc_40B4D1  +
mov eax ecx +
sub eax [esp+70h+arg_0] +
mov [esp+70h+var_68] ecx +
mov [esp+70h+var_70] offset aRelocationAtAd +
mov [esp+70h+var_64] eax +
mov eax [esp+70h+var_54] +
add eax edx +
add eax ecx +
mov [esp+70h+var_6C] eax +
call printf  +
mov ecx [ebx] +
jmp loc_40B267  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnb dl  +
jmp loc_40B486  +
mov eax [esp+70h+var_48] +
mov esi ecx +
mov [esp+70h+var_60] 1 +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] 0 +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_435230  +
mov ebx eax +
mov eax [esi+4Ch] +
jmp loc_40B2FA  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnb cl  +
jmp loc_40B765  +
mov eax [esi+0Ch] +
jmp loc_40B1E8  +
xor eax eax +
jmp loc_40B641  +
mov edx ecx +
nop   +
jmp loc_40B4BC  +
mov [esp+70h+var_6C] 864h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_404040  +
mov ecx [esi+4] +
jmp loc_40B4B0  +
test eax eax +
jz loc_40B598  +
mov eax [esp+70h+var_48] +
cmp [esp+70h+var_54] eax +
jb loc_40BA57  +
mov eax [esp+70h+var_50] +
sub eax [esp+70h+arg_0] +
mov [ebx+2Ch] eax +
xor eax eax +
jmp loc_40B5BE  +
movzx eax byte ptr [edx] +
add eax 0FFFFFF80h +
movzx eax al +
add eax 0FFFFFF80h +
mov [esp+70h+var_38] eax +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_24] eax +
add ecx eax +
mov edx ecx +
mov eax ecx +
sub edx [esp+70h+var_38] +
cmp edx ecx +
cmovnb ecx edx +
cmp [esp+70h+var_44] ecx +
jnb loc_40B310  +
cmp edx eax +
cmova edx eax +
cmp [esp+70h+var_44] edx +
jb loc_40B310  +
mov edx [esp+70h+var_38] +
mov ecx [esp+70h+arg_0] +
add ecx edx +
sub edx [esp+70h+arg_0] +
cmp [esp+70h+var_38] 0 +
cmovns ecx edx +
cmp [esp+70h+var_44] eax +
jnb loc_40B8FF  +
mov eax [esp+70h+var_24] +
sub eax [esp+70h+arg_0] +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+4] +
cmp eax 1Fh +
jz loc_40B9B5  +
cmp eax 20h +
jz loc_40B999  +
cmp eax 1Eh +
jz loc_40B98E  +
mov [esp+70h+var_6C] 723h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_404040  +
jmp loc_40B310  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_40B89C  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+38h] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_40B89C  +
mov eax [esp+70h+var_50] +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_30] 0 +
sub [eax+24h] esi +
jmp loc_40B219  +
mov edx [ebp+68h] +
jmp loc_40B326  +
mov eax [esp+70h+var_34] +
mov [eax] cl +
jmp loc_40B310  +
mov eax [esp+70h+var_48] +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_40B310  +
mov eax [esp+70h+var_48] +
movzx ecx cx +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_40B310  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnb dl  +
jmp loc_40B5D3  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setnb al  +
movzx eax al +
jmp loc_40B584  +
lea eax [esp+70h+var_14] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_403610  +
test eax eax +
jz loc_40B310  +
mov eax [esp+70h+var_4C] +
mov edx [esp+70h+var_14] +
mov eax [eax+8Ch] +
mov [eax+30h] edx +
movzx eax byte ptr [ebx+4] +
jmp loc_40B706  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setbe al  +
and al byte ptr [esp+70h+var_4C] +
jnz loc_40BA7B  +
mov eax edx +
jmp loc_40B5BE  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnb al  +
mov edx eax +
jmp loc_40B5AF  +
mov [esp+70h+var_6C] 886h +
mov [esp+70h+var_70] offset a____Binutil_12 +
mov [esp+70h+var_54] ecx +
call sub_404040  +
mov eax [ebx+2Ch] +
mov ecx [esp+70h+var_54] +
jmp loc_40B87B  +
mov edx [esp+70h+var_50] +
add edx [esp+70h+arg_0] +
mov [ebx+2Ch] edx +
jmp loc_40B5BE  +
***
push ebp  +
push edi  +
push esi  +
mov esi offset off_476B00 +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov edi ds:_stricmp +
mov ebp [esp+34h] +
jmp loc_40BABB  +
add ebx 1 +
add esi 34h +
cmp ebx 25h +
jz loc_40BAE0  +
mov eax [esi] +
test eax eax +
jz loc_40BAB0  +
mov [esp+4] ebp +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_40BAB0  +
imul eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax offset dword_476AE0 +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_40BB20  +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_423C30  +
***
mov dword ptr [esp+4] 0A0h +
mov [esp] esi +
call sub_406370  +
test eax eax +
jz loc_40BB40  +
mov [ebx+8Ch] eax +
jmp loc_40BB07  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jz loc_40BB67  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_40BB77  +
mov eax [eax+1Ch] +
sub eax [edx+1Ch] +
pop ebx  +
retn   +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_40BB95  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jnz loc_40BB91  +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov edx [eax+4] +
test edx edx +
jz loc_40BBC0  +
pop ebx  +
retn   +
mov edx [esp+arg_4] +
test byte ptr [edx+14h] 11h +
jz loc_40BBBC  +
mov ecx [esp+arg_4] +
mov edx [eax] +
mov ecx [ecx+1Ch] +
cmp edx ecx +
jb loc_40BBBC  +
mov ebx [esp+arg_4] +
add ecx [ebx+24h] +
cmp edx ecx +
jnb loc_40BBBC  +
mov [eax+4] ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edx [esi+14h] +
test edx edx +
jz loc_40BC16  +
mov eax [esp+1Ch+arg_4] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_40BC20  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_0] +
mov esi [eax+10h] +
mov eax [ebx+120h] +
mov edx [eax+24h] +
mov edi [eax+6Ch] +
mov ebp [eax+94h] +
mov eax ds:dword_49A0DC +
mov [ecx+0Ch] edx +
add edi edx +
mov [esp+1Ch+var_10] edi +
test eax eax +
jz loc_40BC63  +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset aBuildingOneStu +
call printf  +
test esi 1 +
jnz loc_40BC14  +
mov eax [ebp+4] +
mov edi esi +
shr edi 1 +
mov ecx edi +
and ecx 10000h +
mov edx [eax+3Ch] +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] eax +
lea eax ds:0[edi*8] +
movzx edi di +
and eax 1F00000h +
or eax ecx +
shr eax 10h +
or eax 940Ch +
mov [esp+1Ch+var_1C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax+3Ch] +
lea edx [ecx+2] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edi +
call eax  +
mov eax [ebx+120h] +
mov edx [ebx+138h] +
add dword ptr [eax+24h] 4 +
mov eax 1 +
lea ecx [edx+1] +
cmp ecx [ebx+13Ch] +
ja loc_40BC16  +
mov edi [esp+1Ch+arg_0] +
add edx 40000000h +
mov [ebx+138h] ecx +
mov ecx [ebx+140h] +
mov edi [edi+0Ch] +
mov [ecx+edx*4] edi +
mov ecx [ebx+144h] +
mov [ecx+edx*4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov edi [esp+6Ch+arg_4] +
mov ebp [esp+6Ch+arg_14] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+2Ch] 4 +
mov [esp+6Ch+var_2C] eax +
jz loc_40BD3C  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+6Ch+arg_8] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_40] eax +
mov eax [eax+218h] +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_C] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebp+eax*4+0] +
cmp ebp eax +
mov [esp+6Ch+var_34] eax +
jnb loc_40BF4D  +
***
mov edx [ebp+4] +
mov [esp+arg_58] 0 +
movzx esi dl +
mov eax edx +
imul esi esi +
shr eax 8 +
lea ecx dword_476AE0[esi] +
mov [esp+arg_30] ecx +
mov ecx [esp+arg_28] +
mov edx [ecx+68h] +
cmp eax edx +
jb loc_40C7E0  +
mov ecx [esp+arg_38] +
test ecx ecx +
jz loc_40BD32  +
sub eax edx +
mov ebx [ecx+eax*4] +
mov eax [edi+28h] +
test eax eax +
jz loc_40BDD3  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_40BDD3  +
jmp loc_40C876  +
***
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-6] +
cmp dl 1 +
jbe loc_40BDD0  +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_40C856  +
cmp al 2 +
jz loc_40BE65  +
movzx edx byte ptr [edi+2] +
and edx 6 +
cmp dl 2 +
jz loc_40C894  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_40BE65  +
cmp dl 6 +
mov eax 1 +
jz loc_40BE22  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
setnz al  +
movzx eax al +
mov edx [edi+18h] +
mov ecx [edx+18h] +
mov edx [ebx+4] +
mov [esp+arg_24] ecx +
mov ecx [ebp+0] +
mov [esp+arg_10] eax +
mov eax [esp+arg_88] +
mov [esp+arg_0] edx +
mov [esp+0] edi +
mov [esp+arg_C] ecx +
mov [esp+arg_8] eax +
mov eax [esp+arg_84] +
mov [esp+arg_4] eax +
mov eax [esp+arg_24] +
call eax  +
test eax eax +
jz loc_40BD32  +
mov eax [esp+arg_58] +
xor edx edx +
mov ecx [ebx+4] +
mov [esp+arg_2C] ecx +
test eax eax +
jz loc_40BE86  +
cmp eax offset off_473250 +
jz loc_40BE86  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jz loc_40BEE0  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz sub_40BF40  +
mov eax [ebp+0] +
mov [esp+arg_24] eax +
mov eax [esp+arg_3C] +
mov eax [eax+124h] +
mov [esp+arg_40] eax +
mov eax [esp+arg_88] +
mov ecx [eax+3Ch] +
mov eax [eax+38h] +
add eax [ecx+1Ch] +
mov ecx [esp+arg_24] +
add ecx eax +
cmp ds:dword_476AE0[esi] 23h +
ja sub_40C061  +
mov esi ds:dword_476AE0[esi] +
jmp ds:off_475F88[esi*4]  +
***
add ebp 0Ch +
add edx [ebp+8] +
mov eax 2 +
mov esi [esp+arg_24] +
movzx ecx dx +
cmp ecx 1Fh +
mov [esp+arg_40] edx +
jbe loc_40C957  +
***
mov edx offset aInternalErrorO +
mov eax [edi+18h] +
mov edx offset aInternalErrorD +
mov eax [edi+18h] +
mov edx offset aInternalErrorU +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov ecx [ebp+8] +
mov eax [esp+arg_24] +
mov eax [esp+arg_24] +
mov ebx [ebp+8] +
mov ebx [ebp+8] +
mov esi [ebp+8] +
mov esi [ebp+8] +
add esi edx +
movzx eax si +
cmp eax 3Fh +
jg loc_40C7D0  +
test esi esi +
js loc_40C7D0  +
mov eax [esp+arg_84] +
add ebp 0Ch +
mov ebx [esp+arg_24] +
add ebx [esp+arg_8C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov edx esi +
and edx 20h +
shl edx 8 +
mov ecx eax +
mov eax [esp+arg_84] +
and ecx 0D3F8h +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+arg_24] eax +
mov eax esi +
and esi 7 +
and eax 18h +
shl eax 7 +
or eax edx +
or eax esi +
or ecx eax +
mov eax [esp+arg_24] +
mov [esp+0] ecx +
call eax  +
cmp [esp+arg_34] ebp +
ja loc_40BD74  +
jmp loc_40BF4D  +
***
mov esi [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_24] +
add edx [ebp+8] +
add edx [ebp+8] +
mov ebx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_3C] +
mov esi [esp-7Ch+arg_A0] +
mov esi [esp+arg_24] +
sub edx esi +
add edx [ebp+8] +
lea ecx [edx-2] +
sub ecx eax +
mov eax 2 +
test cl 1 +
jnz loc_40BF76  +
lea edx [ecx+80h] +
mov al 1 +
cmp edx 0FFh +
ja loc_40BF76  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov [esp+arg_2C] ecx +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_2C] +
mov edx [esi+4] +
shl ecx 2 +
and eax 0FC07h +
and ecx 3F8h +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_40BF40  +
***
jz loc_40C3CC  +
mov eax esi +
neg eax  +
movzx eax ax +
add eax 0FFFFFF80h +
jle loc_40C3CC  +
***
mov esi [esp+28h] +
mov eax 1 +
jmp loc_40BF76  +
***
mov ecx [esp-7Ch+arg_110] +
lea edx [eax+eax*4] +
lea ebx [ecx+edx*4] +
mov ecx [esp-7Ch+arg_114] +
mov eax [ecx+eax*4] +
mov [esp-7Ch+arg_84] ebp +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_D4] eax +
lea eax [esp-7Ch+arg_D4] +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_F8] +
mov [esp-7Ch+arg_78] eax +
call sub_42E520  +
mov ecx [esp-7Ch+arg_A4] +
mov ecx [ecx+64h] +
mov [esp-7Ch+arg_A0] eax +
mov eax [ebx+8] +
mov [esp-7Ch+arg_7C] ecx +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_100] +
mov [esp-7Ch+arg_78] eax +
call sub_420E30  +
mov edx [esp-7Ch+arg_A0] +
test eax eax +
mov [esp-7Ch+arg_A8] eax +
mov eax [esp-7Ch+arg_D4] +
jz loc_40C8B5  +
xor ebx ebx +
jmp loc_40BE72  +
mov eax [ebx+14h] +
test eax eax +
mov [esp+arg_58] eax +
jz loc_40C8C2  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_40C8CB  +
mov edx [edx+1Ch] +
add edx [ebx+18h] +
add edx [eax+38h] +
jmp loc_40BE6B  +
mov eax [esp+arg_84] +
mov [esp+arg_4] ebx +
mov [esp+0] edi +
mov [esp+arg_0] eax +
call sub_419DC0  +
mov ebx eax +
jmp loc_40BDD3  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_40BE65  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jnz loc_40BE1A  +
jmp loc_40BE65  +
mov ecx [eax] +
xor ebx ebx +
mov [esp-7Ch+arg_A8] ecx +
jmp loc_40BE76  +
xor eax eax +
xor edx edx +
jmp loc_40BE6B  +
xor edx edx +
jmp loc_40BE6B  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_40BF32  +
mov eax [eax+3Ch] +
mov [esp+0] eax +
call sub_424220  +
mov ecx [eax+18h] +
mov edx [eax+28h] +
cmp ecx edx +
jbe loc_40BF32  +
sub ecx edx +
mov [eax+18h] ecx +
mov eax [esp+arg_88] +
mov [esp+0] eax +
call sub_424220  +
mov edx [eax+28h] +
sub [eax+18h] edx +
mov eax [esp+arg_34] +
mov [esp+0] ebp +
sub eax ebp +
sar eax 2 +
imul eax eax +
lea eax [eax+eax*2-3] +
shl eax 2 +
mov [esp+arg_4] eax +
lea eax [ebp+0Ch] +
sub ebp 0Ch +
mov [esp+arg_0] eax +
call memmove  +
mov eax [esp+arg_88] +
sub [esp+arg_34] 0Ch +
sub dword ptr [eax+4Ch] 1 +
jmp sub_40BF40  +
***
mov edx 1 +
shl edx cl +
test ds:dword_49A0D8 edx +
jnz loc_40BF76  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_40] +
mov edx [esi+4] +
shl ecx 3 +
and eax 0FF07h +
movzx ecx cl +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_40BF40  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_40AD80  +
mov ecx [esp+4Ch] +
mov esi eax +
mov eax ds:dword_49A0DC +
test eax eax +
jz loc_40C9EB  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_40C1EA  +
jmp loc_40C22E  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_40AD80  +
mov ecx ds:dword_49A0DC +
test ecx ecx +
mov ecx [esp+4Ch] +
mov esi eax +
jz loc_40CA3C  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_40C1EA  +
jmp loc_40C1DE  +
***
mov eax [esp-7Ch+arg_100] +
and esi 0FFFh +
mov ebx [esp-7Ch+arg_A0] +
add ebx [esp-7Ch+arg_108] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp-7Ch+arg_78] ebx +
call eax  +
mov ecx [esp-7Ch+arg_100] +
mov edx [ecx+4] +
and eax 0F000h +
or eax esi +
mov edx [edx+3Ch] +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_78] eax +
call edx  +
jmp sub_40BF40  +
***
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
jmp loc_40C677  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov edx [esp+70h] +
mov esi [esp+6Ch] +
mov edi [esp+74h] +
mov [esp+20h] eax +
mov eax [esp+64h] +
test edx edx +
mov [esp+24h] eax +
mov eax [esp+68h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
jnz loc_40CB35  +
mov ecx [ebx+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_40CB35  +
mov eax [ebp+0A0h] +
mov [esp+28h] eax +
mov eax [ebx+24h] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+8] eax +
call memcpy  +
test byte ptr [ebx+14h] 4 +
jz loc_40CB2B  +
mov eax [ebx+4Ch] +
test eax eax +
jnz loc_40CB61  +
mov eax esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+68h] eax +
mov eax [esp+24h] +
mov [esp+74h] edi +
mov [esp+6Ch] esi +
mov [esp+70h] edx +
mov [esp+64h] eax +
mov eax [esp+20h] +
mov [esp+60h] eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_418EF0  +
***
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_435230  +
test eax eax +
mov [esp+30h] eax +
jz loc_40CD88  +
mov eax [esp+28h] +
mov edi [eax+68h] +
test edi edi +
jz loc_40CC10  +
mov eax [eax+78h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_40CD39  +
shl edi 2 +
mov [esp] edi +
call sub_408000  +
test edi edi +
mov [esp+34h] eax +
jz loc_40CC28  +
test eax eax +
jnz loc_40CC28  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_40CBDB  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_40CBDB  +
mov [esp] eax +
call free  +
mov esi [esp+30h] +
test esi esi +
jz loc_40CD88  +
mov edx [ebx+8Ch] +
xor eax eax +
cmp [edx+68h] esi +
jz loc_40CB2D  +
mov [esp] esi +
mov [esp+20h] eax +
call free  +
mov eax [esp+20h] +
jmp loc_40CB2D  +
***
mov dword ptr [esp] 0 +
call sub_408000  +
mov dword ptr [esp+2Ch] 0 +
mov [esp+34h] eax +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
mov eax [eax+68h] +
mov edi edx +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
mov ecx eax +
mov eax edx +
mov edx [esp+34h] +
cmp ecx eax +
jbe loc_40CC95  +
mov [esp+38h] ebx +
mov ebx edx +
mov [esp+3Ch] esi +
mov esi ecx +
mov ecx [edi+10h] +
mov eax offset off_4731A8 +
test ecx ecx +
jz loc_40CC80  +
cmp ecx 0FFFFFFF1h +
mov eax offset off_473250 +
jz loc_40CC80  +
cmp ecx 0FFFFFFF2h +
mov eax offset off_473100 +
jz loc_40CC80  +
mov [esp+4] ecx +
mov [esp] ebp +
call sub_423A90  +
nop   +
add edi 14h +
add ebx 4 +
mov [ebx-4] eax +
cmp esi edi +
ja loc_40CC53  +
mov ebx [esp+38h] +
mov esi [esp+3Ch] +
mov eax [esp+34h] +
mov [esp+10h] esi +
mov [esp+0Ch] ebx +
mov [esp+8] ebp +
mov [esp+1Ch] eax +
mov eax [esp+2Ch] +
mov [esp+18h] eax +
mov eax [esp+30h] +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_40BD10  +
test eax eax +
jz loc_40CD20  +
mov eax [esp+34h] +
test eax eax +
jz loc_40CCE1  +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_40CCFA  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_40CCFA  +
mov [esp] eax +
call free  +
mov eax [ebx+8Ch] +
mov edx [esp+30h] +
cmp [eax+68h] edx +
jz loc_40CB2B  +
mov [esp] edx +
call free  +
jmp loc_40CB2B  +
***
mov eax [esp+34h] +
test eax eax +
jz loc_40CBC2  +
mov [esp] eax +
call free  +
jmp loc_40CBC2  +
***
mov eax [esp+28h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
add eax 48h +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_421030  +
test eax eax +
mov [esp+2Ch] eax +
jz loc_40CBDB  +
mov eax [esp+28h] +
mov edi [eax+68h] +
jmp loc_40CBAB  +
***
xor eax eax +
jmp loc_40CB2D  +
***
mov dword ptr [edx] offset off_473250 +
sub edx 4 +
cmp edx ecx +
jnz loc_40CE90  +
mov esi [esp+20h] +
mov edx [esi+64h] +
test edx edx +
jz loc_40CEBF  +
test byte ptr [edx+14h] 10h +
jz loc_40CEB8  +
mov ecx [edx+8] +
mov dword ptr [eax+ecx*4] 0 +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_40CEA8  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov [esp] esi +
call sub_435230  +
test eax eax +
mov ebx eax +
mov [esp+4Ch] eax +
jz loc_40D3B7  +
mov eax [edi+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+20h] eax +
jnb loc_40D30B  +
mov [esp+44h] edi +
mov edi esi +
jmp loc_40D22B  +
mov esi [esp+38h] +
lea eax [eax+eax*4] +
xor ecx ecx +
lea edx [esi+eax*4] +
movzx eax byte ptr [edx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_40D159  +
mov ecx [edx] +
mov eax [edx+10h] +
mov edx [edi+0A0h] +
cmp eax [edx+214h] +
jnb loc_40D2C0  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov edx [eax+2Ch] +
mov eax [edx+3Ch] +
mov esi [eax+1Ch] +
add esi [edx+38h] +
add esi [ebx+8] +
add esi ecx +
mov ebp [esp+24h] +
mov eax esi +
sub eax [ebp+124h] +
cmp eax 1FFFFh +
ja loc_40D1A0  +
mov eax [esp+78h] +
test eax eax +
jz loc_40D21E  +
mov dword ptr [esp] 13h +
mov [esp+30h] ecx +
mov [esp+2Ch] edx +
call sub_408000  +
mov edx [esp+2Ch] +
mov ecx [esp+30h] +
add ecx [ebx+8] +
mov ebp eax +
mov eax [edx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a08x08x +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
test ebp ebp +
jz loc_40D3F4  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_409000  +
test eax eax +
jz loc_40D330  +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
mov [esp] ebp +
call free  +
add ebx 0Ch +
cmp [esp+20h] ebx +
jbe loc_40D307  +
mov eax [ebx+4] +
movzx edx al +
lea ecx [edx-18h] +
cmp ecx 1 +
jbe loc_40D23E  +
cmp edx 5 +
jnz loc_40D21E  +
mov esi [esp+28h] +
shr eax 8 +
mov edx [esi+68h] +
cmp eax edx +
jb loc_40D140  +
mov ecx [edi+0A0h] +
sub eax edx +
mov edx [ecx+218h] +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_40D27F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_40D270  +
lea ecx [edx-3] +
cmp cl 1 +
jbe loc_40D2D0  +
cmp dl 2 +
jz loc_40D2F1  +
cmp dl 1 +
jnz loc_40D420  +
mov esi [esp+74h] +
movzx edx byte ptr [esi+2] +
and edx 6 +
cmp dl 2 +
jnz loc_40D21E  +
test byte ptr [eax+31h] 3 +
jnz loc_40D21E  +
xor esi esi +
xor ecx ecx +
xor edx edx +
jmp loc_40D185  +
***
xor esi esi +
xor edx edx +
jmp loc_40D185  +
***
mov edx [eax+14h] +
mov ecx [eax+18h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_40D380  +
mov esi [edx+38h] +
add esi ecx +
add esi [eax+1Ch] +
add esi [ebx+8] +
jmp loc_40D185  +
***
mov eax [esp+74h] +
test byte ptr [eax] 1 +
jnz loc_40D2B3  +
add ebx 0Ch +
cmp [esp+20h] ebx +
ja loc_40D22B  +
mov edi [esp+44h] +
mov eax [edi+8Ch] +
mov edx [eax+68h] +
test edx edx +
jnz near ptr dword_40CECC+144h  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
jmp near ptr dword_40CECC+144h  +
***
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_409000  +
test eax eax +
jz loc_40D432  +
mov ebp ds:dword_49A0DC +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
test ebp ebp +
jnz loc_40D387  +
mov dword ptr [esp+48h] 1 +
jmp loc_40D21E  +
***
xor esi esi +
jmp loc_40D185  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aAddingStubWith +
call printf  +
mov ecx ds:dword_49A0DC +
test ecx ecx +
jz loc_40D373  +
mov eax [esp+78h] +
mov dword ptr [esp] offset aPreAllocRunI +
mov [esp+4] eax +
call printf  +
jmp loc_40D373  +
***
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_40CECC+204h  +
***
mov ebp [esp+44h] +
mov eax [ebp+8Ch] +
mov eax [eax+68h] +
test eax eax +
jnz loc_40D3B7  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_40CECC+204h  +
***
mov dword ptr [esp] 11h +
mov ebp [esp+44h] +
call sub_4040F0  +
jmp loc_40D3F8  +
***
mov esi ebp +
mov ebp [esp+44h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset aBCannotCreateS +
call off_4733A4  +
mov [esp] esi +
call free  +
jmp loc_40D3F8  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [eax+1Ch] +
cmp dword ptr [edi+2Ch] 4 +
jz loc_40D480  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+11Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_40D588  +
xor esi esi +
jmp loc_40D4A9  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_40D4D3  +
mov eax [edi+11Ch] +
mov ebp [ebx+24h] +
mov [esp] eax +
mov [esp+4] ebp +
add esi ebp +
call sub_406370  +
test eax eax +
mov [ebx+6Ch] eax +
jnz loc_40D495  +
test ebp ebp +
jnz loc_40D474  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_40D4A3  +
shr esi 2 +
lea eax ds:0[esi*4] +
mov dword ptr [edi+138h] 0 +
mov [edi+13Ch] esi +
mov [esp] eax +
call sub_408000  +
mov [edi+140h] eax +
mov eax [edi+13Ch] +
shl eax 2 +
mov [esp] eax +
call sub_408000  +
mov edx ds:dword_49A0DC +
test edx edx +
mov [edi+144h] eax +
jnz loc_40D570  +
mov eax [esp+30h] +
mov ebx 1 +
mov dword ptr [esp+4] offset sub_40BBF0 +
mov [esp+8] eax +
lea eax [edi+0FCh] +
mov [esp] eax +
call sub_409350  +
mov eax ds:dword_49A0DC +
test eax eax +
jz loc_40D476  +
mov eax [edi+120h] +
mov eax [eax+24h] +
mov dword ptr [esp] offset aFinalStubSecti +
mov [esp+4] eax +
call printf  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+13Ch] +
mov dword ptr [esp] offset aAllocatingIEnt +
mov [esp+4] eax +
call printf  +
jmp loc_40D51C  +
***
xor eax eax +
xor esi esi +
jmp loc_40D4DD  +
***
jmp sub_40D5A0  +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_avr_prop +
mov [esp+6Ch+var_6C] eax +
call sub_402CB0  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_34] eax +
jz loc_40DB6F  +
mov ebx [eax+24h] +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] ebx +
call sub_408000  +
mov [esp+6Ch+var_58] ebx +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_40] eax +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_4034C0  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_64] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_435230  +
test eax eax +
mov ecx eax +
mov [esp+6Ch+var_38] eax +
jz loc_40D662  +
mov eax [edi+4Ch] +
mov [esp+6Ch+var_60] offset sub_40BB80 +
mov [esp+6Ch+var_64] 0Ch +
mov [esp+6Ch+var_6C] ecx +
mov [esp+6Ch+var_68] eax +
call qsort  +
cmp ebx 3 +
jbe loc_40DB00  +
mov eax [esp+6Ch+var_40] +
movzx ecx byte ptr [eax] +
lea esi [eax+4] +
movzx edx byte ptr [eax+1] +
mov [esp+6Ch+var_3C] ecx +
movzx ecx word ptr [eax+2] +
mov [esp+6Ch+var_48] edx +
movzx ebp cx +
lea eax [ebp+ebp*2+0] +
lea eax ds:10h[eax*8] +
mov [esp+6Ch+var_6C] eax +
mov word ptr [esp+6Ch+var_44] cx +
call sub_408000  +
test eax eax +
mov edi eax +
jz loc_40DB00  +
mov edx [esp+6Ch+var_48] +
sub ebx 4 +
mov ecx [esp+6Ch+var_3C] +
mov [esp+6Ch+var_48] ebx +
mov [eax+1] dl +
mov edx [esp+6Ch+var_34] +
mov [eax] cl +
cmp cl 1 +
lea eax [edi+10h] +
mov [edi+4] ebp +
mov [edi+8] edx +
mov [edi+0Ch] eax +
jnz loc_40D832  +
mov edx [edx+4Ch] +
mov ebx [esp+6Ch+var_38] +
cmp word ptr [esp+6Ch+var_44] 0 +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
jz loc_40DB18  +
cmp [esp+6Ch+var_48] 4 +
jbe loc_40D832  +
movzx edx word ptr [esp+6Ch+var_44] +
mov ebp [esp+6Ch+var_38] +
mov [esp+6Ch+var_44] edi +
sub edx 1 +
movzx edx dx +
lea edx [edx+edx*2] +
lea ecx ds:0[edx*8] +
xor edx edx +
mov [esp+6Ch+var_30] ecx +
mov ecx esi +
mov edi edx +
mov esi ebx +
mov ebx ecx +
add eax edi +
test ebp ebp +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
jz loc_40D766  +
mov eax ebx +
sub eax [esp+6Ch+var_40] +
cmp esi ebp +
ja loc_40D74C  +
jmp loc_40D752  +
add ebp 0Ch +
cmp esi ebp +
jbe loc_40D752  +
cmp eax [ebp+0] +
nop   +
ja loc_40D745  +
cmp esi ebp +
jz loc_40D952  +
cmp eax [ebp+0] +
lea esi [esi+0] +
jz loc_40D960  +
mov eax [esp+6Ch+var_44] +
mov edx [eax+0Ch] +
mov eax [ebx] +
mov [esp+6Ch+var_3C] eax +
lea eax [edx+edi] +
mov ecx [eax] +
test ecx ecx +
jz loc_40D8C8  +
movzx edx byte ptr [ebx+4] +
movzx ecx dl +
mov [eax+8] ecx +
mov ecx [esp+6Ch+var_48] +
sub ecx 5 +
cmp dl 1 +
jz loc_40D8B0  +
jb loc_40D8A0  +
cmp dl 2 +
jz loc_40D876  +
cmp dl 3 +
lea esi [esi+0] +
jnz loc_40D870  +
cmp ecx 7 +
jbe loc_40D870  +
mov edx [ebx+5] +
add ebx 0Dh +
mov ecx [esp+6Ch+var_44] +
sub [esp+6Ch+var_48] 0Dh +
mov [eax+0Ch] edx +
mov edx [ebx-4] +
mov eax [ecx+0Ch] +
mov [eax+edi+10h] edx +
mov eax [ecx+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
cmp edi [esp+6Ch+var_30] +
jz loc_40DB14  +
add edi 18h +
cmp [esp+6Ch+var_48] 4 +
jbe loc_40D870  +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
jmp loc_40D726  +
mov eax ds:_iob +
mov [esp+6Ch+var_64] 21h +
mov edi [esp+6Ch+var_44] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] offset aFailedToFindMa +
add eax 40h +
mov [esp+6Ch+var_60] eax +
call fwrite  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_40D84D  +
mov [esp+6Ch+var_6C] ebx +
call free  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov [esp+6Ch+var_6C] edi +
call free  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+6Ch+var_44] +
jmp loc_40D832  +
cmp ecx 3 +
jbe loc_40D870  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
jmp loc_40D7E6  +
add ebx 5 +
mov [esp+6Ch+var_48] ecx +
jmp loc_40D7E6  +
cmp ecx 3 +
jbe loc_40D870  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
jmp loc_40D7E6  +
mov ecx [esp+6Ch+var_10] +
test ecx ecx +
mov [esp+6Ch+var_2C] ecx +
jz loc_40D8ED  +
mov ecx [ecx+1Ch] +
cmp [esp+6Ch+var_3C] ecx +
mov [esp+6Ch+var_28] ecx +
jnb loc_40DA5F  +
mov [esp+6Ch+var_10] 0 +
mov eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] offset sub_40BBB0 +
mov [esp+6Ch+var_14] eax +
lea eax [esp+6Ch+var_14] +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_4032D0  +
mov eax [esp+6Ch+var_10] +
test eax eax +
mov [esp+6Ch+var_2C] eax +
jz loc_40D806  +
mov eax [esp+6Ch+var_44] +
mov ecx [esp+6Ch+var_2C] +
mov edx [eax+0Ch] +
mov ecx [ecx+1Ch] +
lea eax [edx+edi] +
mov [esp+6Ch+var_28] ecx +
mov ecx [esp+6Ch+var_2C] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
sub ecx [esp+6Ch+var_28] +
mov [eax+4] ecx +
lea eax [edx+edi] +
jmp loc_40D780  +
xor ebp ebp +
jmp loc_40D766  +
mov eax [ebp+4] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
shr [esp+6Ch+var_3C] 8 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_28] eax +
jb loc_40DA85  +
mov edx [esp+6Ch+var_2C] +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
mov edx [edx+218h] +
lea ecx ds:0[eax*4] +
mov [esp+6Ch+var_20] ecx +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_40D9CF  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_40D9C0  +
cmp dl 3 +
jb loc_40DB07  +
cmp dl 4 +
jbe loc_40DB76  +
cmp dl 5 +
mov [esp+6Ch+var_24] offset off_473100 +
jnz loc_40DB07  +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
shl eax 2 +
mov [esp+6Ch+var_20] eax +
mov eax [esp+6Ch+var_2C] +
mov edx [esp+6Ch+var_20] +
mov eax [eax+218h] +
mov eax [eax+edx] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_40DA2F  +
nop   +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_40DA20  +
sub edx 3 +
xor ecx ecx +
cmp dl 1 +
ja loc_40DA3C  +
mov ecx [eax+18h] +
mov eax [esp+6Ch+var_44] +
add ecx [ebp+8] +
mov edx [eax+0Ch] +
mov [esp+6Ch+var_3C] ecx +
mov ecx [esp+6Ch+var_24] +
lea eax [edx+edi] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
mov [eax+4] ecx +
jmp loc_40D76D  +
mov [esp+6Ch+var_24] edx +
mov edx [esp+6Ch+var_2C] +
mov ecx eax +
mov eax [esp+6Ch+var_28] +
add eax [edx+24h] +
cmp [esp+6Ch+var_3C] eax +
mov eax ecx +
mov edx [esp+6Ch+var_24] +
jnb loc_40D8E5  +
jmp loc_40D939  +
mov eax [esp+6Ch+arg_0] +
call sub_40AE50  +
mov ecx [esp+6Ch+var_3C] +
lea edx [ecx+ecx*4] +
mov eax [eax+edx*4+10h] +
test eax eax +
jz loc_40DB4A  +
cmp eax 0FFFFFFF1h +
jz loc_40DBBE  +
cmp eax 0FFFFFFF2h +
jnz loc_40DB82  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_473100 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_28] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_20] edx +
jnb loc_40D9F2  +
mov eax [esp+6Ch+arg_0] +
call sub_40AE50  +
mov edx [esp+6Ch+var_20] +
mov ecx [eax+edx*4] +
jmp loc_40DA3C  +
xor edi edi +
jmp loc_40D832  +
mov [esp+6Ch+var_24] offset off_4731A8 +
jmp loc_40DA01  +
mov edi [esp+6Ch+var_44] +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_40DB43  +
mov eax [esp+6Ch+var_38] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax edi +
jmp loc_40D863  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_4731A8 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_40DAD6  +
xor eax eax +
jmp loc_40D863  +
mov eax [eax+14h] +
mov [esp+6Ch+var_24] eax +
jmp loc_40DA01  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_20] edx +
mov [esp+6Ch+var_6C] eax +
call sub_423A90  +
mov edx [esp+6Ch+var_20] +
mov [esp+6Ch+var_24] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_40DAD6  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_473250 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_40DAD6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_49A0D4 +
mov dword ptr [esp+5Ch] 0 +
test eax eax +
jz loc_40DFB4  +
mov eax [esp+84h] +
mov ecx 9 +
mov edi offset a_vectors +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax] +
mov esi eax +
cmps   +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_40DC4D  +
mov esi eax +
mov edi offset a_jumptables +
mov ecx 0Ch +
cmps   +
setnz al  +
movzx eax al +
mov [esp+2Ch] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_40E4C6  +
mov eax [esp+88h] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_40DC7C  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8Ch] +
mov dword ptr [eax] 0 +
mov eax [ebx+118h] +
test eax eax +
jz loc_40DF30  +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_40DFA7  +
mov eax [esp+84h] +
mov eax [eax+14h] +
test al 4 +
jz loc_40DFA7  +
mov edi [esp+84h] +
mov edx [edi+4Ch] +
test edx edx +
jz loc_40DFA7  +
test al 10h +
jz loc_40DFA7  +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
test byte ptr [eax+20h] 80h +
mov [esp+24h] eax +
jz loc_40DFA7  +
add eax 48h +
mov [esp+44h] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax+2] +
mov [esp+4] edi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_435230  +
test eax eax +
mov edi eax +
mov [esp+40h] eax +
jz loc_40EA0D  +
mov eax [esp+84h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_40E55C  +
mov ebp [esp+40h] +
xor esi esi +
jmp loc_40DDA0  +
mov edi [esp+80h] +
sub eax edx +
mov ecx [edi+0A0h] +
mov edx [ecx+218h] +
mov ebx [edx+eax*4] +
test ebx ebx +
jz loc_40E543  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_40E254  +
add ebp 0Ch +
cmp [esp+20h] ebp +
jbe loc_40E55C  +
movzx eax byte ptr [ebp+4] +
lea edx [eax-2] +
cmp edx 1 +
jbe loc_40DDB1  +
cmp eax 12h +
jnz loc_40DD93  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_40E2F0  +
mov eax [esp+24h] +
test esi esi +
mov edx [eax+68h] +
jz loc_40E285  +
mov eax [ebp+4] +
shr eax 8 +
cmp eax edx +
jnb loc_40DD64  +
lea eax [eax+eax*4] +
lea ebx [esi+eax*4] +
mov eax [ebx+10h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_423A90  +
mov ecx [ebx] +
test eax eax +
jz loc_40DE01  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
cmp byte ptr [ebp+4] 12h +
jnz loc_40E1D1  +
mov eax [esp+84h] +
mov ebx [ebp+0] +
mov eax [eax+3Ch] +
mov [esp+30h] ebx +
mov eax [eax+1Ch] +
mov edi eax +
mov [esp+34h] eax +
mov eax [esp+84h] +
mov eax [eax+38h] +
mov [esp+38h] eax +
add eax edi +
add eax ebx +
sub ecx eax +
mov [esp+3Ch] eax +
mov eax [esp+2Ch] +
add ecx [ebp+8] +
test eax eax +
jz loc_40E4A5  +
cmp ecx 1001h +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF002h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
mov edx dword_473574 +
cmp edx 4001h +
sbb ebx ebx +
and ebx 0FFFFFDA8h +
sub ebx 8F4h +
cmp edx 4001h +
lea eax [edx-1] +
sbb edi edi +
and eax ecx +
mov ecx edx +
shr ecx 1 +
and edi 0FFFFFDA8h +
mov [esp+28h] ecx +
mov ecx eax +
add edi 708h +
sub ecx edx +
cmp eax [esp+28h] +
cmovg eax ecx +
cmp eax ebx +
jl loc_40E268  +
mov edx 0FFEh +
sub edx edi +
cmp edx eax +
jl loc_40E268  +
mov eax ds:dword_49A0E0 +
mov edx [esp+30h] +
test eax eax +
jnz loc_40E6CB  +
mov eax [esp+84h] +
mov ebx [esp+5Ch] +
mov edi [esp+40h] +
mov eax [eax+8Ch] +
lea ecx [ebx+edx] +
mov [eax+68h] edi +
mov [eax+30h] ebx +
mov eax [esp+24h] +
mov [eax+78h] esi +
movzx edx byte ptr [ebx+edx+1] +
movzx eax byte ptr [ecx] +
and edx 0FFFFFF94h +
and eax 0Eh +
cmp dl 94h +
jz loc_40E18B  +
mov dword ptr [esp+8] offset aElf32_avr_rela +
mov dword ptr [esp+4] 0AA6h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_404070  +
nop   +
mov eax [ebx+120h] +
cmp eax [esp+84h] +
jnz loc_40DC97  +
mov edi [esp+84h] +
mov esi [edi+24h] +
mov edi ds:dword_49A0E0 +
test edi edi +
jnz loc_40EAAB  +
mov eax [eax+3Ch] +
mov edi [esp+88h] +
mov eax [eax+94h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp] eax +
call near ptr dword_40CECC+14h  +
mov eax [ebx+120h] +
mov eax [eax+24h] +
cmp eax esi +
jz loc_40DF99  +
mov edi [esp+8Ch] +
mov dword ptr [edi] 1 +
mov ecx ds:dword_49A0E0 +
test ecx ecx +
jnz loc_40E69A  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+88h] +
mov ds:dword_49A0D4 1 +
mov edi [eax+34h] +
test edi edi +
jz loc_40DC0C  +
mov ecx edi +
mov eax [ecx+64h] +
test eax eax +
jnz loc_40E007  +
jmp loc_40E010  +
mov esi [eax+8Ch] +
lea edx [esi+90h] +
mov eax [eax+0Ch] +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+8] 0 +
test eax eax +
jz loc_40E010  +
cmp eax [eax+3Ch] +
jnz loc_40DFE0  +
xor edx edx +
jmp loc_40DFEC  +
***
mov ecx [ecx+9Ch] +
test ecx ecx +
jnz loc_40DFD2  +
lea esi [esi+0] +
mov [esp] edi +
call sub_40D5A0  +
test eax eax +
mov ebp eax +
jz loc_40E0F9  +
mov eax [eax+4] +
test eax eax +
jz loc_40E0F9  +
xor ecx ecx +
xor esi esi +
mov [esp+1Ch] edi +
mov edi ecx +
jmp loc_40E0A8  +
cmp eax [eax+3Ch] +
jz loc_40E0B2  +
mov ebx [eax+8Ch] +
add ebx 90h +
jz loc_40E0B2  +
mov edx [ebx] +
cmp edx [ebx+4] +
jz loc_40E0D0  +
mov eax [ebx+8] +
lea edx [edx+edx*2] +
add edi 1 +
lea eax [eax+edx*8] +
mov edx [ebp+0Ch] +
add edx esi +
add esi 18h +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov ecx [edx+0Ch] +
mov [eax+0Ch] ecx +
mov ecx [edx+10h] +
mov [eax+10h] ecx +
mov edx [edx+14h] +
mov [eax+14h] edx +
add dword ptr [ebx] 1 +
cmp edi [ebp+4] +
jnb loc_40E0F5  +
mov eax [ebp+0Ch] +
mov eax [eax+esi] +
test eax eax +
jnz loc_40E050  +
xor ebx ebx +
mov dword ptr [esp+4] 913h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_404040  +
mov edx [ebx] +
cmp edx [ebx+4] +
jnz loc_40E06A  +
nop   +
mov eax [ebx+8] +
add edx 0Ah +
mov [ebx+4] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_408090  +
mov edx [ebx] +
mov [ebx+8] eax +
jmp loc_40E06D  +
***
mov edi [esp+1Ch] +
mov [esp] ebp +
call free  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_40E020  +
mov eax [esp+88h] +
mov esi [eax+34h] +
test esi esi +
jz loc_40DC0C  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_40E137  +
jmp loc_40E17C  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_40E17C  +
cmp ebx [ebx+3Ch] +
jz loc_40E130  +
mov eax [ebx+8Ch] +
cmp eax 0FFFFFF70h +
jz loc_40E130  +
mov edx [eax+90h] +
test edx edx +
jz loc_40E130  +
mov eax [eax+98h] +
mov dword ptr [esp+0Ch] offset sub_40BB50 +
mov dword ptr [esp+8] 18h +
mov [esp+4] edx +
mov [esp] eax +
call qsort  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_40E137  +
mov esi [esi+9Ch] +
test esi esi +
jnz loc_40E121  +
jmp loc_40DC0C  +
***
cmp al 0Eh +
jnz loc_40E67E  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0D0h +
mov eax [ebp+4] +
mov edi [esp+2Ch] +
xor al al +
add eax 3 +
test edi edi +
mov [ebp+4] eax +
mov eax [ebp+0] +
jnz loc_40E6F4  +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+2] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+3] 0 +
mov eax [esp+84h] +
mov edi [ebp+0] +
mov eax [eax+3Ch] +
mov ebx [eax+1Ch] +
mov eax [esp+84h] +
mov ecx [eax+38h] +
mov edx [esp+5Ch] +
add ebx edi +
lea eax [edx+edi+1] +
mov [esp+34h] eax +
movzx eax byte ptr [eax] +
mov [esp+1Ch] al +
lea eax [edx+edi] +
mov [esp+38h] eax +
movzx eax byte ptr [eax] +
mov [esp+28h] al +
lea eax [ebx+ecx] +
movzx ecx byte ptr [esp+1Ch] +
mov [esp+30h] eax +
and ecx 0FFFFFFF0h +
cmp cl 0D0h +
jz loc_40E311  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jz loc_40E32F  +
cmp cl 0C0h +
jnz loc_40DD93  +
mov dword ptr [esp+3Ch] 2 +
mov dword ptr [esp+34h] 2 +
jmp loc_40E360  +
mov eax [ebx+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+1Ch] +
add ecx [ebx+18h] +
add ecx [eax+38h] +
jmp loc_40DE01  +
***
mov eax [esp+1Ch] +
test eax eax +
jnz loc_40DEC5  +
mov ecx [esp+38h] +
mov ebx [esp+34h] +
mov edi [esp+30h] +
jmp loc_40E1EB  +
***
test edx edx +
jz loc_40E4E1  +
mov esi [eax+78h] +
test esi esi +
jnz loc_40DDCC  +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] eax +
call sub_421030  +
test eax eax +
mov esi eax +
jz loc_40EA0D  +
mov eax [esp+24h] +
mov edx [eax+68h] +
jmp loc_40DDCC  +
***
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_40EB29  +
mov [esp+5Ch] eax +
jmp loc_40DDBD  +
***
mov ebx dword_473570 +
test ebx ebx +
jnz loc_40E4EC  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jnz loc_40DD93  +
movzx eax byte ptr [esp+28h] +
and eax 0Eh +
cmp al 0Eh +
jz loc_40E733  +
cmp cl 0C0h +
jz loc_40E23F  +
cmp al 0Ch +
jnz loc_40DD93  +
mov dword ptr [esp+3Ch] 4 +
mov dword ptr [esp+34h] 4 +
mov eax [esp+3Ch] +
mov ebx [esp+84h] +
add eax edi +
lea ecx [eax+1] +
cmp ecx [ebx+24h] +
jnb loc_40DD93  +
cmp byte ptr [edx+eax+1] 95h +
jnz loc_40DD93  +
cmp byte ptr [edx+eax] 8 +
jnz loc_40DD93  +
mov eax ds:dword_49A0E0 +
test eax eax +
jz loc_40E3AD  +
cmp dword ptr [esp+34h] 2 +
jz loc_40EB74  +
cmp dword ptr [esp+34h] 4 +
jz loc_40EB58  +
cmp edi 1 +
jbe loc_40DD93  +
mov edx [esp+5Ch] +
movzx eax byte ptr [edx+edi-1] +
movzx edx byte ptr [edx+edi-2] +
cmp al 99h +
jz loc_40EAFC  +
cmp al 9Bh +
jz loc_40EA75  +
mov ebx eax +
and ebx 0FFFFFFFEh +
cmp bl 0FCh +
jnz loc_40EA5E  +
shr dl 3 +
mov ecx edx +
and ecx 1 +
and eax 0FFFFFFFCh +
cmp al 10h +
jz loc_40EA75  +
test ecx ecx +
jz loc_40EA75  +
mov eax [esp+84h] +
add edi [esp+3Ch] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov [esp] eax +
call sub_424FB0  +
mov ecx eax +
mov eax [esp+24h] +
mov ebx [eax+78h] +
mov eax [eax+68h] +
lea edx [eax+eax*4] +
lea edx [ebx+edx*4] +
cmp ebx edx +
jnb loc_40E7AA  +
test ebx ebx +
jz loc_40E7AA  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_40E467  +
add ebx 14h +
cmp edx ebx +
jbe loc_40E7A3  +
test ebx ebx +
jz loc_40E7A3  +
mov eax [esp+1Ch] +
cmp [ebx] eax +
jnz loc_40E454  +
cmp [ebx+10h] ecx +
jnz loc_40E454  +
mov eax ds:dword_49A0E0 +
xor edi edi +
test eax eax +
jz loc_40E454  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aLocalLabelPrev +
mov [esp+48h] edx +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov edx [esp+48h] +
mov ecx [esp+38h] +
jmp loc_40E454  +
***
cmp ecx 0FFFh +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF000h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
jmp loc_40DE68  +
***
mov eax [esp+88h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRMay +
call eax  +
jmp loc_40DC62  +
***
mov eax [ebp+4] +
shr eax 8 +
jmp loc_40DD64  +
***
mov eax [esp+84h] +
lea ecx [edi+3] +
cmp ecx [eax+24h] +
jnb loc_40DD93  +
cmp byte ptr [edx+edi+2] 8 +
jnz loc_40DD93  +
cmp byte ptr [edx+edi+3] 95h +
jnz loc_40DD93  +
movzx eax byte ptr [esp+1Ch] +
mov edx ds:dword_49A0E0 +
mov edi [esp+34h] +
and eax 0FFFFFFEFh +
test edx edx +
mov [edi] al +
jnz loc_40EB03  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_40DD93  +
***
mov dword ptr [esp+4] 0A34h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_404040  +
jmp loc_40DD84  +
***
mov eax [esp+8Ch] +
mov eax [eax] +
test eax eax +
jnz loc_40E63A  +
mov eax [esp+84h] +
mov eax [eax+3Ch] +
cmp [esp+84h] eax +
jz loc_40EB90  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov [esp+1Ch] eax +
lea ebp [eax+90h] +
mov edx [ebp+0] +
test edx edx +
jz loc_40E63A  +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+1Ch] +
lea edx [eax+eax*2] +
mov eax [ebp+8] +
lea esi [eax+edx*8] +
mov eax [esi+8] +
sub eax 2 +
cmp eax 1 +
ja loc_40E628  +
mov ecx [esi+0Ch] +
mov eax 1 +
mov ebx [esi+14h] +
shl eax cl +
mov edx ebx +
mov ecx eax +
sub edx eax +
cmp eax ebx +
jbe loc_40E5E2  +
jmp loc_40E628  +
mov edx ebx +
mov ebx edx +
mov edi ecx +
sub ebx eax +
add ecx eax +
cmp edx eax +
jnb loc_40E5E0  +
test edi edi +
mov [esi+14h] edx +
jle loc_40E628  +
mov ecx [esi+4] +
mov edx [esp+84h] +
mov eax [esp+80h] +
sub ecx edi +
mov [esi+4] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call sub_40B0D0  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
add dword ptr [esp+1Ch] 1 +
mov eax [esp+1Ch] +
cmp [ebp+0] eax +
ja loc_40E5AE  +
mov edx [esp+5Ch] +
test edx edx +
jz loc_40E6BC  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp edx [eax+30h] +
jz loc_40E664  +
mov edi [esp+88h] +
test byte ptr [edi+2] 40h +
jz loc_40E6B4  +
mov [eax+30h] edx +
mov edi [esp+40h] +
cmp [eax+68h] edi +
jz loc_40DFA7  +
mov [esp] edi +
call free  +
jmp loc_40DFA7  +
***
cmp al 0Ch +
jnz loc_40DF12  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0C0h +
jmp loc_40E1A2  +
***
mov [esp+4] eax +
mov dword ptr [esp] offset aSizeOfStubSect +
call printf  +
mov eax 1 +
jmp loc_40DC74  +
***
mov [esp] edx +
call free  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
jmp loc_40E664  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aShrinkingJumpC +
mov [esp+8] eax +
mov eax [esp+3Ch] +
mov [esp+4] eax +
call printf  +
mov edx [ebp+0] +
jmp loc_40DED6  +
***
lea ecx [eax+2] +
mov edx [esp+84h] +
mov eax [esp+80h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_40B0D0  +
test eax eax +
jz loc_40E9F8  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_40E1D1  +
***
mov eax dword_473570 +
test eax eax +
jz loc_40E236  +
mov ecx [esp+84h] +
lea eax [edi+5] +
cmp eax [ecx+24h] +
jnb loc_40DD93  +
cmp byte ptr [edx+edi+4] 8 +
jnz loc_40DD93  +
cmp byte ptr [edx+edi+5] 95h +
jnz loc_40DD93  +
movzx eax byte ptr [esp+28h] +
mov edi [esp+38h] +
and eax 0FFFFFFFDh +
mov [edi] al +
mov eax ds:dword_49A0E0 +
test eax eax +
jz loc_40E531  +
mov eax [ecx] +
mov dword ptr [esp] offset aConvertedCallR +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_40E531  +
***
mov eax [esp+24h] +
mov eax [eax+68h] +
mov ecx [esp+80h] +
mov edx [ecx+0A0h] +
mov ecx [esp+24h] +
mov ebx [edx+218h] +
mov edx [ecx+60h] +
shr edx 4 +
sub edx eax +
lea ecx [ebx+edx*4] +
cmp ebx ecx +
jnb loc_40E831  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_40E7E5  +
add ebx 4 +
cmp ecx ebx +
jbe loc_40E831  +
mov eax [ebx] +
movzx edx byte ptr [eax+0Ch] +
sub edx 3 +
cmp dl 1 +
ja loc_40E7DE  +
mov edx [esp+84h] +
cmp [eax+14h] edx +
jnz loc_40E7DE  +
mov edx [esp+1Ch] +
cmp [eax+18h] edx +
jnz loc_40E7DE  +
mov eax ds:dword_49A0E0 +
xor edi edi +
test eax eax +
jz loc_40E7DE  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aGlobalLabelPre +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov ecx [esp+38h] +
jmp loc_40E7DE  +
***
mov eax [esp+80h] +
mov eax [eax+64h] +
mov ecx eax +
mov [esp+38h] eax +
mov eax edi +
test al al +
mov [esp+4Fh] al +
jz loc_40DD93  +
test ecx ecx +
jz loc_40E9AE  +
mov eax [esp+3Ch] +
add eax [esp+30h] +
mov edi [esp+24h] +
mov [esp+48h] ebp +
mov [esp+1Ch] eax +
mov eax [esp+38h] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
test ebx ebx +
jz loc_40EAC6  +
mov eax [esp+38h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea ebp [ebx+eax*4] +
cmp ebx ebp +
jb loc_40E8A7  +
jmp loc_40E997  +
cmp [esp+1Ch] ecx +
jz loc_40E902  +
add ebx 0Ch +
cmp ebp ebx +
jbe loc_40E997  +
test ebx ebx +
jz loc_40E997  +
test esi esi +
mov eax [edi+68h] +
jz loc_40E930  +
mov edx [ebx+4] +
xor ecx ecx +
shr edx 8 +
cmp edx eax +
jnb loc_40E896  +
lea eax [edx+edx*4] +
lea edx [esi+eax*4] +
mov eax [edx+10h] +
mov [esp+28h] edx +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_423A90  +
mov edx [esp+28h] +
mov ecx [edx] +
test eax eax +
jz loc_40E98F  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
add ecx [ebx+8] +
cmp [esp+1Ch] ecx +
jnz loc_40E89C  +
mov ebx ds:dword_49A0E0 +
mov ebp [esp+48h] +
test ebx ebx +
jz loc_40DD93  +
mov eax [esp+1Ch] +
mov dword ptr [esp] offset aRetFromRjmpJmp +
mov [esp+4] eax +
call printf  +
jmp loc_40DD93  +
***
test eax eax +
jz loc_40E988  +
mov esi [edi+78h] +
test esi esi +
jnz loc_40E8B6  +
mov [esp+8] eax +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
call sub_421030  +
test eax eax +
mov esi eax +
jz loc_40E997  +
mov eax [edi+68h] +
jmp loc_40E8B6  +
***
xor ecx ecx +
jmp loc_40E896  +
***
add ecx [ebx+8] +
jmp loc_40E896  +
***
mov eax [esp+38h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+38h] eax +
jnz loc_40E86B  +
mov ebp [esp+48h] +
cmp byte ptr [esp+4Fh] 0 +
jz loc_40DD93  +
mov ecx ds:dword_49A0E0 +
test ecx ecx +
jnz loc_40EB97  +
mov ecx [esp+3Ch] +
mov edx [esp+84h] +
mov eax [esp+80h] +
add ecx [ebp+0] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_40B0D0  +
test eax eax +
jnz loc_40E531  +
test esi esi +
jz loc_40EA0D  +
mov eax [esp+24h] +
cmp [eax+78h] esi +
jz loc_40EA0D  +
mov [esp] esi +
call free  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_40EA2F  +
mov edi [esp+84h] +
mov edx [edi+8Ch] +
cmp eax [edx+30h] +
jz loc_40EA2F  +
mov [esp] eax +
call free  +
mov edi [esp+40h] +
test edi edi +
jz loc_40DC72  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp [eax+68h] edi +
jz loc_40DC72  +
mov [esp] edi +
call free  +
jmp loc_40DC72  +
***
cmp bl 0FEh +
mov ecx 1 +
jnz loc_40E3EA  +
and edx 8 +
jnz loc_40E3EA  +
mov eax ds:dword_49A0E0 +
test eax eax +
jz loc_40DD93  +
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aPrecedingSkipI +
mov [esp+8] eax +
mov eax [esp+30h] +
add eax 2 +
mov [esp+4] eax +
call printf  +
jmp loc_40DD93  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aRelaxingTheStu +
call printf  +
mov eax [ebx+120h] +
jmp loc_40DF5B  +
***
mov eax [esp+38h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_435230  +
mov ebx eax +
jmp loc_40E880  +
***
xor ecx ecx +
jmp loc_40E3EA  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aConvertedRcall +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_40E531  +
***
lea eax [esp+5Ch] +
mov [esp+8] eax +
mov eax [esp+84h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_403610  +
test eax eax +
jnz loc_40DDBD  +
jmp loc_40E9F8  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundJmpRetSeq +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_40E3AD  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundRjmpRetSe +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_40E3AD  +
***
xor ebp ebp +
jmp loc_40E59B  +
***
mov eax [esp+30h] +
add eax [esp+34h] +
mov dword ptr [esp] offset aUnreachableRet +
mov [esp+4] eax +
call printf  +
jmp loc_40E9C7  +
***
mov [esp] ebx +
call sub_4032D0  +
mov edx [esp+1Ch] +
xor eax eax +
test edx edx +
jnz loc_40EC42  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_435FD0  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
test byte ptr [eax+14h] 4 +
jz loc_40EC96  +
mov eax [edx+0A0h] +
movzx eax word ptr [eax+26h] +
mov [esp+4] edx +
mov dword ptr [esp] offset aBRelocationsIn +
mov [esp+8] eax +
call off_4733A4  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
mov eax [esp+28h] +
mov dword ptr [eax] 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+4] +
mov ds:dword_49A274 eax +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 227h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+8] 20Ch +
mov dword ptr [esp+4] offset a____Binutil_17 +
jmp sub_404040  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov eax [eax+0A0h] +
mov ebx [eax] +
test ebx ebx +
js loc_40ED10  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
mov dword ptr [esp+4] 1BDh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1B3h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1ACh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1A5h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 19Eh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 197h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 18Ah +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 17Dh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_404040  +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_4137C0  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_406370  +
test eax eax +
jz loc_40EE4E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 8 +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_406290  +
mov edx [esp+28h] +
test esi esi +
mov [eax] esi +
mov [eax+4] edx +
jz loc_40EE91  +
or dword ptr [ebx+28h] 200h +
mov [ebx+0A0h] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+18h+var_18] offset aBfdPlugin +
lea ebx [esp+18h+arg_8] +
call printf  +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call vprintf  +
mov [esp+18h+var_18] 0Ah +
call putchar  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 9Ch +
mov dword ptr [ecx] 0 +
mov [esp+0A8h+var_A8] eax +
call ds:LoadLibraryA  +
sub esp 4 +
test eax eax +
jz loc_40F090  +
mov [esp+0A8h+var_A4] offset aOnload +
mov [esp+0A8h+var_A8] eax +
call ds:GetProcAddress  +
sub esp 8 +
test eax eax +
jz loc_40F083  +
lea edx [ebp+var_68] +
mov [ebp+var_68] 0Bh +
mov [ebp+var_64] offset sub_40EEA0 +
mov [ebp+var_60] 5 +
mov [ebp+var_5C] offset loc_40ECA0 +
mov [ebp+var_58] 8 +
mov [ebp+var_54] offset loc_40EE60 +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [esp+0A8h+var_A8] edx +
call eax  +
test eax eax +
jnz loc_40F083  +
mov dword ptr [esi] 1 +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 8 +
mov [ebx+2Ch] al +
mov ecx ds:dword_49A274 +
test ecx ecx +
jz loc_40F083  +
mov esi [ebx+8Ch] +
mov eax [ebx] +
mov [ebp+var_8C] 0 +
test esi esi +
mov [ebp+var_88] eax +
jz loc_40F0B0  +
mov eax [ebx+38h] +
mov edx [ebx+3Ch] +
mov [ebp+var_80] eax +
mov eax [ebx+88h] +
mov [ebp+var_7C] edx +
mov eax [eax+4] +
mov [ebp+var_74] 0 +
mov [ebp+var_78] eax +
mov eax [esi+8] +
test eax eax +
jz loc_40F077  +
mov [esp+0A8h+var_A8] eax +
call _fileno_0  +
mov edx [ebx+8Ch] +
test edx edx +
mov [ebp+var_84] eax +
jz loc_40F0E0  +
mov [esp+0A8h+var_9C] 1 +
mov [esp+0A8h+var_A4] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A8] eax +
mov [ebp+var_70] ebx +
call j__lseeki64  +
mov esi eax +
mov edi edx +
lea eax [ebp+var_8C] +
mov [esp+0A8h+var_A4] eax +
lea eax [ebp+var_88] +
mov [esp+0A8h+var_A8] eax +
call ds:dword_49A274  +
mov eax [ebp+var_84] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] esi +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_A8] eax +
call j__lseeki64  +
mov eax [ebp+var_8C] +
test eax eax +
jz loc_40F083  +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 4 +
mov [ebx+2Ch] al +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A8] esi +
call sub_40A2E0  +
test eax eax +
jnz loc_40F0D3  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A4] offset aUnableToLoadDl +
mov [esp+0A8h+var_A8] offset aS_0 +
call off_4733A4  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_80] 0 +
mov esi ebx +
mov [ebp+var_7C] 0 +
mov [ebp+var_78] 0 +
mov [ebp+var_74] 0 +
jmp loc_40EFCE  +
mov eax [esi+8] +
jmp loc_40EFD9  +
lea edx [ebp+var_48] +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call ds:_fstati64  +
test eax eax +
jnz loc_40F083  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
mov [ebp+var_78] eax +
mov eax [ebp+var_84] +
mov [ebp+var_74] edx +
jmp loc_40EFF5  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+30h] +
mov eax [ebp+0A0h] +
mov edx [eax] +
mov esi [eax+4] +
mov ds:dword_49A1C0 offset a_text +
mov ds:dword_49A114 1000h +
test edx edx +
mov [esp+0Ch] edx +
jle loc_40F1B6  +
***
mov [esp+arg_0] 18h +
mov [esp+0] ebp +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_40F220  +
mov eax [esp+arg_30] +
mov [eax+edi*4] ebx +
mov ecx [esi+8] +
mov eax [esi] +
mov [ebx] ebp +
mov dword ptr [ebx+8] 0 +
cmp ecx 4 +
mov [ebx+4] eax +
ja loc_40F1E7  +
mov edx 1 +
mov eax 2 +
shl edx cl +
test dl 15h +
jz loc_40F1E0  +
cmp ecx 4 +
mov [ebx+0Ch] eax +
ja loc_40F208  +
jmp ds:off_4776D0[ecx*4]  +
***
mov dword ptr [ebx+10h] offset off_4731A8 +
mov dword ptr [ebx+10h] offset dword_49A1C0 +
jmp loc_40F1A7  +
***
mov dword ptr [ebx+10h] offset unk_49A100 +
jmp loc_40F1A7  +
***
and edx 0Ah +
mov al 82h +
jnz loc_40F18C  +
mov [esp-2Ch+arg_2C] 1D1h +
mov [esp-2Ch+arg_28] offset a____Binutil_17 +
call sub_404040  +
mov ecx [esi+8] +
xor eax eax +
mov [ebx+0Ch] eax +
cmp ecx 4 +
jbe loc_40F194  +
mov [esp-2Ch+arg_2C] 1FDh +
mov [esp-2Ch+arg_28] offset a____Binutil_17 +
call sub_404040  +
jmp loc_40F1A7  +
***
mov [esp+arg_0] 1E8h +
mov dword ptr [esp+0] offset a____Binutil_17 +
call sub_404040  +
jmp loc_40F15E  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_49A26C +
mov ebx [esp+80h] +
test eax eax +
jz loc_40F264  +
mov [esp] ebx +
call eax  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jz loc_40F280  +
xor eax eax +
cmp dl 4 +
jnz loc_40F25C  +
mov eax [ebx+4] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx dword_473740 +
test ecx ecx +
jz loc_40F2B8  +
mov eax ds:dword_49A268 +
test eax eax +
jz loc_40F2C0  +
mov ecx offset dword_473740 +
mov edx ebx +
call sub_40EEE0  +
test eax eax +
jz loc_40F2B8  +
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jmp loc_40F26D  +
***
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_40F25C  +
***
mov edx ds:dword_49A270 +
test edx edx +
jz loc_40F2B8  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset a__LibBfdPlugin +
mov dword ptr [esp] offset aHomeJenkinsMin +
call sub_45F770  +
mov dword ptr [esp+4] offset aHomeJenkinsMin +
mov esi eax +
mov [esp+8] eax +
mov eax ds:dword_49A270 +
mov [esp] eax +
call sub_45FF60  +
mov [esp] esi +
mov edi eax +
mov [esp+1Ch] eax +
call free  +
mov [esp] edi +
call sub_470CF0  +
test eax eax +
mov ebp eax +
jz loc_40F2AC  +
mov esi [esp+1Ch] +
mov [esp+80h] ebx +
jmp loc_40F340  +
mov [esp] edi +
call free  +
test ebx ebx +
jnz loc_40F3E1  +
mov [esp] ebp +
call sub_470EB0  +
test eax eax +
jz loc_40F3BD  +
add eax 8 +
xor ebx ebx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset asc_477750 +
mov [esp] esi +
call sub_45F770  +
mov edi eax +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
call ds:_stati64  +
test eax eax +
jnz loc_40F393  +
movzx eax word ptr [esp+36h] +
and ax 0F000h +
cmp ax 8000h +
jz loc_40F3A7  +
mov eax dword_473740 +
test eax eax +
jg loc_40F330  +
mov eax [esp+2Ch] +
mov dword_473740 eax +
jmp loc_40F330  +
***
mov edx [esp+80h] +
lea ecx [esp+2Ch] +
mov eax edi +
call sub_40EEE0  +
mov ebx eax +
jmp loc_40F393  +
***
mov ebx [esp+80h] +
xor edi edi +
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call sub_470FD0  +
mov eax edi +
jmp loc_40F29F  +
***
mov edi ebx +
mov ebx [esp+80h] +
jmp loc_40F3C6  +
***
mov eax [esp+4] +
mov ds:dword_49A270 eax +
retn   +
***
mov eax [esp+4] +
test eax eax +
mov ds:dword_49A268 eax +
setnz al  +
movzx eax al +
mov dword_473740 eax +
retn   +
***
mov edx dword_473740 +
xor eax eax +
test edx edx +
setnle al  +
retn   +
***
xor eax eax +
cmp dword ptr [esp+4] offset off_477760 +
setz al  +
retn   +
***
mov eax [esp+4] +
mov ds:dword_49A26C eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [edi+7Ch] +
mov eax [edi+0A0h] +
test esi esi +
mov eax [eax+14h] +
jnz loc_40F4A0  +
mov dword ptr [ebx] 0 +
mov eax esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test eax eax +
jz loc_40F4BC  +
xor edx edx +
jmp loc_40F4AA  +
mov eax ecx +
add edx 1 +
add ebx 4 +
cmp esi edx +
lea ecx [eax+18h] +
mov [ebx-4] eax +
ja loc_40F4A8  +
jmp loc_40F48F  +
***
lea eax [esi+esi*2] +
shl eax 3 +
mov [esp+4] eax +
mov [esp] edi +
call sub_406290  +
test eax eax +
jz loc_40F513  +
mov edx [edi+0A0h] +
mov ecx [edx+0Ch] +
mov [edx+14h] eax +
test ecx ecx +
jz loc_40F4A4  +
mov edx eax +
mov ebp [ecx+4] +
add edx 18h +
mov [edx-18h] edi +
mov [edx-14h] ebp +
mov ebp [ecx+8] +
mov ecx [ecx] +
mov dword ptr [edx-0Ch] 2 +
mov dword ptr [edx-8] offset off_473250 +
mov [edx-10h] ebp +
mov dword ptr [edx-4] 0 +
test ecx ecx +
jnz loc_40F4E4  +
jmp loc_40F4A4  +
***
mov eax 0FFFFFFFFh +
jmp loc_40F497  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
mov edx [esp+60h] +
mov eax [esp+5Ch] +
mov [esp] ebx +
mov [esp+14h] edx +
mov [esp+10h] eax +
call sub_407E10  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
mov ebp eax +
call sub_406290  +
test eax eax +
mov edi eax +
jz loc_40F6B3  +
mov ecx [esp+64h] +
test ecx ecx +
jz loc_40F57C  +
mov eax [esp+54h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_40F590  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+64h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_406290  +
test eax eax +
mov ecx eax +
mov [esp+20h] eax +
jz loc_40F6B3  +
mov eax [esp+64h] +
mov [esp] ecx +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp+4] eax +
call memcpy  +
mov edx ds:dword_49A280 +
test edx edx +
jnz loc_40F6C0  +
mov eax [esp+54h] +
xor ebx ebx +
mov [esp+18h] ebp +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+20h] +
mov [esp+8] ebp +
mov ecx eax +
mov [esp+24h] eax +
mov eax ebp +
mov [esp+28h] ecx +
mov ecx [esp+64h] +
cdq   +
add ecx [esp+10h] +
adc ebx [esp+14h] +
mov [esp+0Ch] edx +
mov [esp] ecx +
mov [esp+4] ebx +
mov [esp+1Ch] edx +
call sub_46FEF0  +
add eax [esp+28h] +
adc edx [esp+2Ch] +
cmp edx 0 +
jl loc_40F6F5  +
jle loc_40F6FE  +
mov ebx [esp+24h] +
mov dword ptr [esi+8] 3 +
lea esi [esi+0] +
mov eax [esp+20h] +
mov edx [esp+1Ch] +
mov [edi+4] eax +
mov eax [esp+18h] +
mov [esp+0Ch] edx +
mov edx [esp+14h] +
mov [esp+8] eax +
mov eax [esp+10h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_46FEF0  +
add ebx eax +
mov eax [esp+64h] +
mov [edi+8] ebx +
mov [edi+0Ch] eax +
mov eax [esi+4] +
test eax eax +
jz loc_40F683  +
cmp ebx [eax+8] +
jnb loc_40F6E0  +
mov edx [esi] +
mov eax esi +
test edx edx +
jnz loc_40F698  +
jmp loc_40F69D  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_40F69D  +
cmp ebx [edx+8] +
ja loc_40F690  +
mov [edi] edx +
mov [eax] edi +
mov eax [edi] +
test eax eax +
jnz loc_40F57C  +
mov [esi+4] edi +
jmp loc_40F57C  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov [esp+18h] ebp +
sar ebp 1Fh +
mov dword ptr [esi+8] 3 +
mov [esp+1Ch] ebp +
mov ebx [eax+20h] +
jmp loc_40F640  +
***
mov [eax] edi +
mov eax 1 +
mov dword ptr [edi] 0 +
mov [esi+4] edi +
jmp loc_40F581  +
***
mov ebx [esp+24h] +
jmp loc_40F640  +
***
cmp eax 10000h +
jbe loc_40F6F5  +
cmp edx 0 +
jg loc_40F631  +
nop   +
jl loc_40F71D  +
cmp eax 1000000h +
ja loc_40F631  +
cmp dword ptr [esi+8] 2 +
ja loc_40F631  +
mov dword ptr [esi+8] 2 +
mov ebx [esp+24h] +
jmp loc_40F640  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_40F760  +
mov dword ptr [edx+84h] offset asc_4756C0 +
mov eax 1 +
retn   +
***
jmp sub_407D90  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_4137C0  +
***
push esi  +
push ebx  +
sub esp 23Ch +
cmp edx 9 +
mov [esp+23Ch+var_220] eax +
mov eax ecx +
mov edi [esp+23Ch+arg_4] +
lea ecx [edx+30h] +
mov byte ptr [esp+23Ch+var_210] 53h +
mov byte ptr [esp+23Ch+var_210+1] cl +
ja loc_40F830  +
mov ebx 1 +
mov ecx edx +
shl ebx cl +
test ebx 203h +
jz loc_40F925  +
lea ebp [esp+23Ch+var_20C] +
xor esi esi +
mov ecx eax +
movzx ebx al +
shr ecx 8 +
add ebp 4 +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
add ebx ecx +
movzx edx ds:byte_477D94[edx] +
add ebx esi +
mov [ebp-3] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_477D94[edx] +
mov [ebp-4] dl +
mov edx eax +
and edx 0Fh +
movzx edx ds:byte_477D94[edx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 4 +
and edx 0Fh +
movzx edx ds:byte_477D94[edx] +
mov [ebp-2] dl +
jmp loc_40F836  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
cmp [esp+23Ch+arg_0] edi +
jnb loc_40F891  +
mov eax [esp+23Ch+arg_0] +
mov edx ebp +
mov [esp+23Ch+var_224] ebx +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
add eax 1 +
add edx 2 +
add [esp+23Ch+var_224] ecx +
mov esi ecx +
and esi 0Fh +
movzx ebx ds:byte_477D94[esi] +
mov [edx-1] bl +
mov ebx ecx +
shr bl 4 +
movzx esi bl +
movzx ebx ds:byte_477D94[esi] +
mov [edx-2] bl +
cmp eax edi +
jnz loc_40F850  +
sub eax [esp+23Ch+arg_0] +
mov ebx [esp+23Ch+var_224] +
lea ebp [ebp+eax*2+0] +
lea eax [esp+2Eh] +
mov edi ebp +
sub edi eax +
add ebp 4 +
mov esi edi +
shr esi 1Fh +
add esi edi +
mov ecx esi +
sar ecx 1 +
mov eax ecx +
movzx ecx cl +
and eax 0Fh +
add ebx ecx +
movzx eax ds:byte_477D94[eax] +
not ebx  +
movzx ebx bl +
lea edx [esp+23Ch+var_210] +
mov byte ptr [esp+23Ch+var_210+3] al +
mov eax esi +
sar eax 5 +
and eax 0Fh +
movzx eax ds:byte_477D94[eax] +
mov byte ptr [ebp-1] 0Ah +
mov byte ptr [esp+23Ch+var_210+2] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_477D94[eax] +
shr ebx 4 +
mov byte ptr [ebp-2] 0Dh +
mov [ebp-3] al +
movzx eax ds:byte_477D94[ebx] +
mov [ebp-4] al +
mov eax [esp+23Ch+var_220] +
sub ebp edx +
mov [esp+23Ch+var_238] ebp +
mov [esp+23Ch+var_23C] edx +
mov [esp+23Ch+var_234] eax +
call sub_403A90  +
cmp eax ebp +
setz al  +
add esp 23Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx 104h +
jnz loc_40F964  +
and ebx 88h +
jz loc_40F830  +
mov ebx eax +
shr ebx 18h +
mov edx ebx +
and edx 0Fh +
movzx edx ds:byte_477D94[edx] +
lea ebp [esp+23Ch+var_20C+2] +
mov byte ptr [esp+23Ch+var_20C+1] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_477D94[edx] +
mov byte ptr [esp+23Ch+var_20C] dl +
jmp loc_40F96A  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
mov ecx eax +
add ebp 2 +
shr ecx 10h +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
movzx edx ds:byte_477D94[edx] +
lea esi [ebx+ecx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_477D94[edx] +
mov [ebp-2] dl +
jmp loc_40F7D3  +
***
mov eax ds:dword_49A284 +
mov ebx [esp+18h+arg_0] +
test eax eax +
jz loc_40FA00  +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_406290  +
test eax eax +
jz loc_40FA11  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+8] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov ds:dword_49A284 1 +
call nullsub_2  +
jmp loc_40F9B1  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+2Ch] +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test edx edx +
jz loc_40FA70  +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] eax +
call sub_413480  +
mov eax [ebx+10h] +
mov edx [ebx+4] +
mov eax [eax] +
mov [esp+20h] esi +
mov [esp+2Ch] edx +
mov dword ptr [esp+24h] offset a5sS +
mov [esp+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fprintf  +
***
mov eax [ebx+4] +
mov [esp+20h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fputs  +
***
jmp sub_40FA90  +
***
sub esp 28h +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_9] +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] eax +
call sub_4039E0  +
cmp eax 1 +
jz loc_40FAD0  +
call sub_403EA0  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 12h +
jz loc_40FACA  +
mov dword ptr [ebx] 1 +
add esp 28h +
pop ebx  +
retn   +
movzx eax byte ptr [esp+28h+var_9] +
add esp 28h +
pop ebx  +
retn   +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+74h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
test ebp ebp +
jz loc_40FB18  +
mov eax esi +
xor ebx ebx +
mov edx edi +
add eax ebp +
adc edx ebx +
cmp ebx edx +
jle loc_40FB20  +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jge loc_40FB65  +
mov ebx [esp+64h] +
cmp edx 0 +
mov ecx [ebx+24h] +
jl loc_40FB34  +
jg loc_40FB0A  +
cmp eax ecx +
ja loc_40FB0A  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_40FB70  +
add eax esi +
mov [esp+4] eax +
mov eax [esp+68h] +
mov [esp+8] ebp +
mov [esp] eax +
call memcpy  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp eax +
ja loc_40FB0A  +
jmp loc_40FB22  +
***
mov eax [esp+60h] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_406290  +
mov edx [esp+64h] +
mov ebx eax +
mov [esp+24h] eax +
mov [edx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_40FB18  +
mov eax edx +
mov edx [edx+54h] +
mov eax [eax+50h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+8] edx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_403BF0  +
test eax eax +
jnz loc_40FD42  +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp+74h] ebp +
nop   +
mov eax [esp+60h] +
lea edx [esp+3Ch] +
call sub_40FA90  +
cmp eax 0FFFFFFFFh +
jz loc_40FE82  +
cmp eax 0Ah +
jz loc_40FBF0  +
cmp eax 0Dh +
nop   +
jz loc_40FBF0  +
cmp eax 53h +
jz loc_40FC2B  +
mov dword ptr [esp+4] 2E3h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_404040  +
mov eax [esp+60h] +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
lea eax [esp+39h] +
mov [esp] eax +
call sub_4039E0  +
cmp eax 3 +
jnz loc_40FD32  +
movzx eax byte ptr [esp+3Ah] +
movzx eax ds:byte_492500[eax] +
cmp al 63h +
jz loc_40FD50  +
movzx edx byte ptr [esp+3Bh] +
movzx edx ds:byte_492500[edx] +
cmp dl 63h +
jz loc_40FD50  +
shl eax 4 +
lea ebp [eax+edx] +
lea ebx [ebp+ebp+0] +
cmp ebx [esp+20h] +
jbe loc_40FCB1  +
mov eax [esp+18h] +
test eax eax +
jz loc_40FC99  +
mov [esp] eax +
call free  +
mov [esp] ebx +
call sub_408000  +
test eax eax +
mov [esp+18h] eax +
jz loc_40FD42  +
mov [esp+20h] ebx +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp] eax +
call sub_4039E0  +
cmp ebx eax +
jnz loc_40FD32  +
movzx eax byte ptr [esp+39h] +
cmp al 32h +
jz loc_40FE6C  +
cmp al 33h +
jz loc_40FD81  +
cmp al 31h +
jz loc_40FE77  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp [eax+24h] ebx +
jz loc_40FD13  +
mov dword ptr [esp+4] 2FEh +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_404040  +
mov eax [esp+18h] +
test eax eax +
jz loc_40FD23  +
mov [esp] eax +
call free  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
jmp loc_40FB42  +
***
mov eax [esp+18h] +
test eax eax +
jz loc_40FD42  +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_40FB18  +
***
mov dword ptr [esp+4] 2E8h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_404040  +
movzx eax byte ptr [esp+3Ah] +
movzx edx byte ptr [esp+3Bh] +
movzx eax ds:byte_492500[eax] +
movzx edx ds:byte_492500[edx] +
jmp loc_40FC79  +
***
mov edi [esp+18h] +
sub ebp 1 +
movzx eax byte ptr [edi] +
lea edx [edi+2] +
movzx ecx byte ptr [edi+1] +
movzx eax ds:byte_492500[eax] +
movzx ebx ds:byte_492500[ecx] +
shl eax 4 +
add ebx eax +
shl ebx 8 +
movzx eax byte ptr [edx] +
lea ecx [edx+2] +
sub ebp 1 +
movzx edx byte ptr [edx+1] +
movzx eax ds:byte_492500[eax] +
movzx edx ds:byte_492500[edx] +
shl eax 4 +
add edx eax +
or edx ebx +
shl edx 8 +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
mov edi [esp+64h] +
movzx eax ds:byte_492500[eax] +
movzx ebx ds:byte_492500[ebx] +
shl eax 4 +
add eax ebx +
movzx ebx byte ptr [ecx+2] +
or eax edx +
lea edx [ecx+4] +
movzx ecx byte ptr [ecx+3] +
shl eax 8 +
movzx ebx ds:byte_492500[ebx] +
movzx ecx ds:byte_492500[ecx] +
shl ebx 4 +
add ecx ebx +
or eax ecx +
mov ecx [esp+1Ch] +
add ecx [edi+1Ch] +
cmp eax ecx +
jnz loc_40FEC0  +
cmp ebp 3 +
jz loc_40FBF0  +
mov eax [esp+24h] +
lea edi [ebp-3] +
xor ecx ecx +
mov esi [esp+1Ch] +
add esi eax +
movzx eax byte ptr [edx] +
add edx 2 +
movzx ebx byte ptr [edx-1] +
movzx eax ds:byte_492500[eax] +
shl eax 4 +
add al ds:byte_492500[ebx] +
mov [esi+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_40FE37  +
mov eax [esp+1Ch] +
lea eax [ebp+eax-3] +
mov [esp+1Ch] eax +
jmp loc_40FBF0  +
***
mov edx [esp+18h] +
xor ebx ebx +
jmp loc_40FDA8  +
***
mov ecx [esp+18h] +
xor edx edx +
jmp loc_40FDCD  +
***
mov eax [esp+3Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
test eax eax +
jnz loc_40FD32  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
cmp ebx [eax+24h] +
jz loc_40FD13  +
mov dword ptr [esp+4] 32Eh +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_404040  +
jmp loc_40FD13  +
***
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp ebx [eax+24h] +
jz loc_40FD13  +
mov dword ptr [esp+4] 317h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_404040  +
jmp loc_40FD13  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
test edx edx +
mov [esp+10h] eax +
mov eax [eax+0A0h] +
mov [esp+1Ch] eax +
jz loc_40FF28  +
mov eax [esp+10h] +
mov ebx [eax+7Ch] +
test ebx ebx +
jnz loc_410074  +
mov esi [esp+10h] +
mov ebx [esi] +
mov [esp] ebx +
call strlen  +
mov edx 28h +
mov [esp] ebx +
cmp eax 28h +
cmovbe edx eax +
xor ecx ecx +
add edx ebx +
mov eax esi +
mov [esp+4] edx +
xor edx edx +
call sub_40F790  +
test eax eax +
jz loc_41000A  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_410026  +
nop   +
mov eax [esp+0Ch] +
mov edi [eax+4] +
mov eax dword_473744 +
test eax eax +
jnz loc_410055  +
mov dword_473744 1 +
mov eax [esp+0Ch] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_410014  +
xor ebp ebp +
mov eax ebp +
mov ebp edi +
mov edi eax +
jmp loc_40FFB2  +
mov eax [esp+0Ch] +
add edi ebx +
mov ebx [eax+0Ch] +
cmp ebx edi +
jbe loc_410014  +
mov ebp esi +
mov eax dword_473744 +
sub ebx edi +
cmp ebx eax +
cmova ebx eax +
mov eax [esp+0Ch] +
lea esi [ebp+ebx+0] +
mov edx [eax+8] +
mov eax [esp+10h] +
mov [esp+14h] edx +
mov [esp] eax +
call sub_407E10  +
mov edx [esp+1Ch] +
mov edx [edx+8] +
mov [esp+4] esi +
mov ecx eax +
mov eax edi +
mov [esp] ebp +
mov [esp+18h] edx +
xor edx edx +
div  ecx +
mov ecx [esp+14h] +
mov edx [esp+18h] +
add ecx eax +
mov eax [esp+10h] +
call sub_40F790  +
test eax eax +
jnz loc_40FFA3  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jnz loc_40FF70  +
mov eax [esp+10h] +
mov edx 0Ah +
mov esi [esp+1Ch] +
mov ecx [eax+74h] +
sub edx [esi+8] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_40F790  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov edx 0FDh +
sub edx [esi+8] +
cmp eax edx +
jbe loc_40FF8E  +
mov dword_473744 edx +
jmp loc_40FF8E  +
***
mov esi [eax+78h] +
mov edi eax +
mov eax [eax] +
mov [esp+0Ch] esi +
mov [esp] eax +
call strlen  +
mov [esp+8] edi +
mov dword ptr [esp+4] 3 +
mov dword ptr [esp] offset asc_477943 +
mov esi eax +
call sub_403A90  +
cmp eax 3 +
jnz loc_41000A  +
mov edi [esp+10h] +
mov eax [edi] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_403A90  +
cmp esi eax +
jnz loc_41000A  +
mov eax [esp+10h] +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_477947 +
mov [esp+8] eax +
call sub_403A90  +
cmp eax 2 +
jnz loc_41000A  +
xor edi edi +
test ebx ebx +
lea ebp [esp+27h] +
jle loc_410212  +
mov [esp+14h] ebx +
jmp loc_41010E  +
add edi 1 +
cmp [esp+14h] edi +
jz loc_410212  +
mov eax [esp+0Ch] +
mov ebx [eax+edi*4] +
mov eax [esp+10h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_413400  +
test eax eax +
jnz loc_410101  +
test byte ptr [ebx+0Ch] 4 +
jnz loc_410101  +
mov eax [ebx+4] +
mov [esp] eax +
call strlen  +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_477950 +
mov esi eax +
mov eax [esp+10h] +
mov [esp+8] eax +
call sub_403A90  +
cmp eax 2 +
jnz loc_41000A  +
mov eax [ebx+4] +
mov ecx [esp+10h] +
mov [esp+4] esi +
mov [esp] eax +
mov [esp+8] ecx +
call sub_403A90  +
cmp esi eax +
jnz loc_41000A  +
mov ecx [ebx+10h] +
mov eax [ecx+3Ch] +
mov eax [eax+20h] +
add eax [ebx+8] +
add eax [ecx+38h] +
mov dword ptr [esp+4] offset a08lx_0 +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
cmp byte ptr [esp+27h] 30h +
jnz loc_41020E  +
movzx eax byte ptr [esp+28h] +
mov esi ebp +
test al al +
jnz loc_4101BF  +
jmp loc_4101C6  +
movzx eax byte ptr [esi+1] +
test al al +
jz loc_4101C6  +
add esi 1 +
cmp al 30h +
jz loc_4101B7  +
mov [esp] esi +
sub esi 2 +
call strlen  +
mov byte ptr [esi+eax+2] 0Dh +
lea edx [eax+4] +
mov byte ptr [esi+eax+3] 0Ah +
mov eax [esp+10h] +
mov byte ptr [esi+1] 24h +
mov byte ptr [esi] 20h +
mov [esp+4] edx +
mov [esp+8] eax +
mov [esp] esi +
mov [esp+18h] edx +
call sub_403A90  +
mov edx [esp+18h] +
cmp edx eax +
jz loc_410101  +
jmp loc_41000A  +
***
mov esi ebp +
jmp loc_4101C6  +
***
mov eax [esp+10h] +
mov dword ptr [esp+4] 5 +
mov dword ptr [esp] offset asc_47794A +
mov [esp+8] eax +
call sub_403A90  +
cmp eax 5 +
jnz loc_41000A  +
jmp loc_40FF28  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_40FF00  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_40FF00  +
***
sub esp 54h +
cmp ecx 0FFFFFFFFh +
jz loc_4102B1  +
mov ebx eax +
movzx eax cl +
test byte ptr ds:word_490F00[eax+eax] 10h +
jz loc_4102C7  +
mov byte ptr [esp+54h+var_2C] cl +
lea esi [esp+54h+var_2C] +
mov byte ptr [esp+54h+var_2C+1] 0 +
mov [esp+54h+var_48] esi +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] offset aBDUnexpectedCh +
call off_4733A4  +
mov [esp+54h+var_54] 11h +
call sub_4040F0  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+54h+arg_0] +
test eax eax +
jnz loc_4102AB  +
mov [esp+54h+var_54] 12h +
call sub_4040F0  +
jmp loc_4102AB  +
lea esi [esp+54h+var_2C] +
mov [esp+54h+var_4C] eax +
mov [esp+54h+var_50] offset a03o +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
jmp loc_410286  +
***
push edi  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_40FA90  +
cmp eax 0FFFFFFFFh +
jz loc_4109DE  +
cmp eax 0Dh +
jz loc_41036B  +
cmp eax 53h +
jnz loc_410490  +
cmp eax 20h +
nop   +
jz loc_4104B0  +
jle loc_410595  +
cmp eax 24h +
nop   +
jz loc_41057B  +
cmp eax 53h +
jnz loc_4105A3  +
mov [esp+0] ebp +
call sub_403B10  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 3 +
mov [esp+arg_2C] eax +
lea eax [esp+arg_41] +
mov [esp+0] eax +
mov [esp+arg_30] edx +
call sub_4039E0  +
cmp eax 3 +
jnz loc_410624  +
movzx ecx byte ptr [esp+46h] +
movzx eax ds:byte_492500[ecx] +
cmp al 63h +
jz loc_410AD1  +
movzx ecx [esp+arg_43] +
movzx edx ds:byte_492500[ecx] +
cmp dl 63h +
jz loc_410AD1  +
shl eax 4 +
lea esi [eax+edx] +
movzx eax [esp+arg_41] +
mov ebx esi +
cmp al 38h +
jz loc_410642  +
cmp al 32h +
jz loc_410642  +
and eax 0FFFFFFFBh +
cmp al 33h +
setz al  +
movzx eax al +
lea eax [eax+eax+3] +
cmp eax esi +
ja loc_410AE8  +
lea edi [esi+esi] +
cmp [esp+arg_34] edi +
jnb loc_41044E  +
mov eax [esp+arg_20] +
test eax eax +
jz loc_410436  +
mov [esp+0] eax +
call free  +
mov [esp+0] edi +
call sub_408000  +
test eax eax +
mov [esp+arg_20] eax +
jz loc_410568  +
mov [esp+arg_34] edi +
mov eax [esp+arg_20] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] edi +
mov [esp+0] eax +
call sub_4039E0  +
cmp edi eax +
jnz loc_410624  +
lea eax [esi-1] +
mov [esp+arg_18] eax +
movzx eax [esp+arg_41] +
sub eax 30h +
cmp al 9 +
ja sub_410349  +
movzx eax al +
jmp ds:off_4779E4[eax*4]  +
***
cmp eax 0Ah +
jz loc_41058B  +
cmp eax 20h +
mov [esp+arg_28] 0 +
jnz loc_410376  +
lea esi [esi+0] +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_40FA90  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_41060D  +
cmp eax 9 +
jz loc_4104B0  +
cmp eax 20h +
jz loc_4104B0  +
cmp eax 0Ah +
jz loc_410ABD  +
cmp eax 0Dh +
jz loc_410ABD  +
mov dword ptr [esp+0] 0Bh +
call sub_408000  +
test eax eax +
mov esi eax +
jz loc_410624  +
mov [eax] bl +
lea edi [eax+1] +
mov ebx 0Ah +
jmp loc_410509  +
mov [edi] dl +
add edi 1 +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_40FA90  +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_410B16  +
movzx eax al +
test byte ptr ds:word_490F00[eax+eax] 40h +
jnz loc_4105C0  +
mov ecx edi +
sub ecx esi +
cmp ebx ecx +
ja loc_410504  +
add ebx ebx +
lea eax [ebx+1] +
mov [esp+arg_0] eax +
mov [esp+0] esi +
mov [esp+arg_1C] ecx +
mov [esp+arg_18] edx +
call sub_408090  +
test eax eax +
jz loc_410B2D  +
mov ecx [esp+arg_1C] +
mov esi eax +
mov edx [esp+arg_18] +
lea edi [eax+ecx] +
jmp loc_410504  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 0FFFFFFFFh +
jz loc_41060D  +
lea edx [esp-7Ch+arg_C0] +
mov eax ebp +
call sub_40FA90  +
cmp eax 0Ah +
jnz loc_410572  +
add [esp-7Ch+arg_A0] 1 +
jmp sub_410349  +
cmp eax 0Ah +
jz loc_41058B  +
cmp eax 0Dh +
jz sub_410349  +
mov edx [esp+arg_44] +
mov ecx eax +
mov eax ebp +
mov [esp+0] edx +
mov edx [esp+arg_24] +
call sub_410260  +
jmp loc_410624  +
***
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov [esp+arg_28] 0 +
mov edi ebx +
mov edi [esp+arg_20] +
movzx eax byte ptr [edi] +
movzx edx ds:byte_492500[eax] +
movzx eax byte ptr [edi+1] +
movzx ecx ds:byte_492500[eax] +
mov eax edx +
shl eax 4 +
shl edx 4 +
lea ebx [ecx+esi] +
add ecx edx +
add ebx eax +
mov eax edi +
lea edi [esi-2] +
add eax 2 +
mov [esp+arg_18] edi +
shl ecx 8 +
jmp loc_41074B  +
***
mov eax [esp+arg_20] +
test eax eax +
jz loc_4109D4  +
mov [esp+0] eax +
call free  +
mov eax 1 +
jmp loc_41056A  +
mov eax [esp+arg_44] +
test eax eax +
jnz loc_410624  +
mov ebx [esp+arg_20] +
mov eax 1 +
test ebx ebx +
jz loc_41056A  +
mov [esp+0] ebx +
mov [esp+arg_18] eax +
call free  +
mov eax [esp+arg_18] +
jmp loc_41056A  +
***
add eax edi +
mov [ecx+24h] eax +
jmp loc_4108C4  +
***
cmp eax 20h +
jz loc_4105FD  +
cmp eax 24h +
mov ebx eax +
jz loc_410B3A  +
xor esi esi +
mov eax ebx +
jmp loc_410A59  +
***
shl esi 4 +
mov eax ebp +
add esi edx +
lea edx [esp+arg_44] +
call sub_40FA90  +
cmp eax 0FFFFFFFFh +
jz loc_41060D  +
movzx edx al +
movzx edx ds:byte_492500[edx] +
cmp dl 63h +
jnz loc_410A40  +
mov [esp+arg_0] 0Ch +
mov ebx eax +
mov [esp+0] ebp +
call sub_406290  +
test eax eax +
jz loc_410624  +
mov [eax+4] edi +
mov [eax+8] esi +
mov edx [ebp+0A0h] +
mov ecx [edx+0Ch] +
test ecx ecx +
jz loc_410B55  +
mov ecx [edx+10h] +
mov [ecx] eax +
mov [edx+10h] eax +
mov dword ptr [eax] 0 +
add dword ptr [ebp+7Ch] 1 +
cmp ebx 9 +
jz loc_4104B0  +
cmp ebx 20h +
jz loc_4104B0  +
cmp ebx 0Ah +
jz loc_41058B  +
cmp ebx 0Dh +
jz sub_410349  +
mov ecx ebx +
mov eax [esp+arg_44] +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_410260  +
jmp loc_410624  +
mov eax [esp+arg_24] +
mov [esp+arg_8] esi +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBDByteCountDTo +
mov [esp+arg_4] eax +
call off_4733A4  +
mov dword ptr [esp+0] 11h +
call sub_4040F0  +
jmp loc_410624  +
mov eax [esp+arg_44] +
mov ecx 0FFFFFFFFh +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_410260  +
mov [esp+0] esi +
call free  +
jmp loc_410624  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_40FA90  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_410A34  +
jmp loc_41060D  +
mov [edx+0Ch] eax +
jmp loc_410A9E  +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_49A284 +
mov ebx [esp+30h] +
test edx edx +
jz loc_410C35  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_410C2D  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_4039E0  +
cmp eax 4 +
jnz loc_410C2D  +
cmp byte ptr [esp+1Ch] 53h +
jnz loc_410C21  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_492500[eax] 63h +
jz loc_410C21  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_492500[eax] 63h +
jz loc_410C21  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_492500[eax] 63h +
jz loc_410C21  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_40F9A0  +
test eax eax +
jz loc_410C50  +
mov eax ebx +
call sub_4102F0  +
test eax eax +
jz loc_410C50  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_410C18  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4040F0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_49A284 1 +
call nullsub_2  +
jmp loc_410B77  +
***
mov eax [ebx+0A0h] +
cmp eax esi +
jz loc_410C6A  +
test eax eax +
jz loc_410C6A  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4064E0  +
mov [ebx+0A0h] esi +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_49A284 +
mov ebx [esp+30h] +
test edx edx +
jz loc_410D34  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_410D2C  +
lea eax [esp+1Eh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 2 +
mov [esp] eax +
call sub_4039E0  +
cmp eax 2 +
jnz loc_410D2C  +
cmp byte ptr [esp+1Eh] 24h +
jnz loc_410D20  +
cmp byte ptr [esp+1Fh] 24h +
jnz loc_410D20  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_40F9A0  +
test eax eax +
jz loc_410D48  +
mov eax ebx +
call sub_4102F0  +
test eax eax +
jz loc_410D48  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_410D11  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4040F0  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_49A284 1 +
call nullsub_2  +
jmp loc_410C97  +
***
mov eax [ebx+0A0h] +
cmp esi eax +
jz loc_410D62  +
test eax eax +
jz loc_410D62  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4064E0  +
mov [ebx+0A0h] esi +
xor eax eax +
jmp loc_410D2E  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov ebp [esp+3Ch] +
mov edi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
call sub_406290  +
test eax eax +
mov esi eax +
jz loc_410E43  +
mov edx [esp+44h] +
test edx edx +
jz loc_410DB6  +
mov eax [esp+34h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_410DC3  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_410E43  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov [esi+4] ebx +
add ebp [eax+20h] +
mov eax [esp+44h] +
mov [esi+8] ebp +
mov [esi+0Ch] eax +
mov eax [edi+4] +
test eax eax +
jz loc_410E11  +
cmp ebp [eax+8] +
jnb loc_410E50  +
mov edx [edi] +
mov eax edi +
test edx edx +
jnz loc_410E28  +
jmp loc_410E2D  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_410E2D  +
cmp ebp [edx+8] +
ja loc_410E20  +
mov [esi] edx +
mov [eax] esi +
mov eax [esi] +
test eax eax +
jnz loc_410DB6  +
mov [edi+4] esi +
jmp loc_410DB6  +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [eax] esi +
mov eax 1 +
mov dword ptr [esi] 0 +
mov [edi+4] esi +
jmp loc_410DBB  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_410E90  +
mov dword ptr [edx+84h] offset asc_4756C0 +
mov eax 1 +
retn   +
***
jmp sub_407D90  +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_49A288 +
mov ebx [esp+20h] +
test eax eax +
jz loc_410EE2  +
mov dword ptr [esp+4] 8 +
mov [esp] ebx +
call sub_406290  +
test eax eax +
jz loc_410EF3  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
mov ds:dword_49A288 1 +
call nullsub_2  +
jmp loc_410EB1  +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_4110BA  +
lea edi [esp+2Eh] +
mov ebx [esp+1Ch] +
mov eax [ebx+8] +
mov esi [ebx+4] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov edx eax +
shr edx 18h +
mov ebp esi +
and edx 0Fh +
movzx edx ds:byte_477F94[edx] +
mov byte ptr [esp+2Eh] 40h +
mov byte ptr [esp+37h] 0Dh +
mov byte ptr [esp+38h] 0Ah +
mov [esp+30h] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_477F94[edx] +
mov [esp+2Fh] dl +
mov edx eax +
shr edx 10h +
and edx 0Fh +
movzx edx ds:byte_477F94[edx] +
mov [esp+32h] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_477F94[edx] +
mov [esp+31h] dl +
mov edx eax +
shr edx 8 +
and edx 0Fh +
movzx edx ds:byte_477F94[edx] +
mov [esp+34h] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_477F94[edx] +
mov [esp+33h] dl +
mov edx eax +
shr eax 4 +
and edx 0Fh +
and eax 0Fh +
movzx edx ds:byte_477F94[edx] +
movzx eax ds:byte_477F94[eax] +
mov [esp+36h] dl +
mov [esp+35h] al +
mov eax [esp+80h] +
mov [esp+8] eax +
call sub_403A90  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_4110A8  +
mov dword ptr [esp+14h] 0 +
mov eax esi +
sub eax [esp+14h] +
mov edx 10h +
mov esi ebp +
cmp eax 10h +
cmova eax edx +
lea ebp [ebp+eax+0] +
cmp ebp esi +
mov [esp+18h] eax +
jbe loc_4110C7  +
mov edx esi +
mov eax edi +
movzx ebx byte ptr [edx] +
add edx 1 +
add eax 3 +
mov ecx ebx +
and ecx 0Fh +
movzx ecx ds:byte_477F94[ecx] +
shr bl 4 +
movzx ebx bl +
mov [eax-2] cl +
movzx ecx ds:byte_477F94[ebx] +
mov [eax-3] cl +
cmp edx ebp +
mov byte ptr [eax-1] 20h +
jnz loc_411026  +
add esi 1 +
mov eax 1 +
sub eax esi +
add eax ebp +
lea ebx [eax+eax*2] +
add ebx edi +
mov eax [esp+80h] +
add ebx 2 +
mov byte ptr [ebx-2] 0Dh +
mov byte ptr [ebx-1] 0Ah +
sub ebx edi +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_403A90  +
cmp ebx eax +
jnz loc_4110CB  +
mov eax [esp+18h] +
add [esp+14h] eax +
mov eax [esp+1Ch] +
mov eax [eax+0Ch] +
cmp eax [esp+14h] +
ja loc_411001  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_410F26  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
jmp loc_411067  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 4 +
mov eax [eax] +
mov [esp+0Ch+var_C] edx +
movzx edx byte ptr [eax] +
movzx ebx ds:byte_492500[edx] +
cmp bl 63h +
jz loc_411162  +
test ebx ebx +
mov esi 0Fh +
lea edx [eax+1] +
lea ebp [ebx-1] +
cmovnz esi ebp +
cmp edx ecx +
jnb loc_411174  +
movzx eax byte ptr [eax+1] +
movzx eax ds:byte_492500[eax] +
cmp al 63h +
jz loc_411162  +
sub esi 1 +
xor ebx ebx +
jmp loc_41113C  +
cmp edx ecx +
jz loc_411170  +
movzx eax byte ptr [edx] +
sub esi 1 +
movzx eax ds:byte_492500[eax] +
cmp al 63h +
jz loc_411162  +
shl ebx 4 +
add edx 1 +
mov ebp ebx +
movzx ebx al +
or ebx ebp +
cmp esi 0FFFFFFFFh +
jnz loc_411127  +
mov eax 1 +
mov [edi] edx +
mov edi [esp+0Ch+var_C] +
mov [edi] ebx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_411153  +
xor eax eax +
xor ebx ebx +
jmp loc_411153  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [edx] +
movzx ebx byte ptr [edi] +
movzx ebx ds:byte_492500[ebx] +
cmp bl 63h +
jz loc_4111E0  +
movzx esi bl +
mov ebx 10h +
test esi esi +
lea ebp [edi+1] +
cmovz esi ebx +
cmp ebp [esp+4+arg_0] +
jnb loc_4111EA  +
xor bl bl +
mov [esp+4+var_4] edx +
movzx edx byte ptr [edi+ebx+1] +
mov [eax+ebx] dl +
add ebx 1 +
cmp esi ebx +
ja loc_4111B3  +
mov edx [esp+4+var_4] +
mov byte ptr [eax+ebx] 0 +
add ebp ebx +
xor eax eax +
cmp ebx esi +
mov [edx] ebp +
setz al  +
mov [ecx] esi +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_4111C5  +
***
mov [ecx-4] edx +
mov edx [edx+18h] +
sub ecx 4 +
test edx edx +
jnz loc_411215  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx 8 +
sub esp 0Ch +
mov esi [eax] +
mov [esp+18h+var_18] edx +
mov edi edx +
shr edi cl +
and edi 0Fh +
jnz loc_411280  +
sub ebx 1 +
sub ecx 4 +
cmp ebx 1 +
jnz loc_411256  +
mov byte ptr [esi] 31h +
add esi 2 +
mov byte ptr [esi-1] 30h +
mov [eax] esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+18h+var_18] edx +
lea edi [ebx+30h] +
lea edx [esi+1] +
mov ebp edx +
mov [esp+18h+var_14] edx +
mov edx edi +
mov [esi] dl +
mov edx [esp+18h+var_18] +
lea edi [esi+ebx+1] +
mov [esp+18h+var_10] eax +
mov esi ebp +
mov ebp edx +
add esi 1 +
shr ebp cl +
sub ecx 4 +
and ebp 0Fh +
cmp esi edi +
movzx eax ss:byte_4782B4[ebp] +
mov [esi-1] al +
jnz loc_4112A0  +
mov eax [esp+18h+var_10] +
add ebx [esp+18h+var_14] +
mov [eax] ebx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
push ebx  +
and edx 0FFFFE000h +
sub esp 14h +
mov eax [eax+0A0h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jnz loc_41130A  +
jmp loc_411320  +
mov ebx [ebx+2104h] +
test ebx ebx +
jz loc_411320  +
cmp [ebx+2100h] edx +
jnz loc_411300  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
xor ebx ebx +
test ecx ecx +
mov [esp+18h+var_C] edx +
jz loc_411312  +
mov [esp+18h+var_14] 2108h +
mov [esp+18h+var_18] esi +
call sub_406370  +
test eax eax +
jz loc_411312  +
mov ecx [esi+0A0h] +
mov ebx eax +
mov edx [esp+18h+var_C] +
mov ecx [ecx+0Ch] +
mov [eax+2100h] edx +
mov [eax+2104h] ecx +
mov edx [esi+0A0h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 1Ch +
mov [esp] ebx +
call sub_406370  +
test eax eax +
jz loc_411395  +
mov [eax] ebx +
mov dword ptr [eax+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_407D90  +
mov edx 1 +
test eax eax +
jnz loc_4113D0  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_4137C0  +
***
push edi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 10h +
test edx edx +
mov edi [eax] +
jz loc_4115A5  +
mov [esp+14h+var_14] edx +
call strlen  +
cmp eax 0Fh +
jle loc_411590  +
lea edx [edi+1] +
mov eax 0Fh +
mov byte ptr [edi] 30h +
lea edi [eax+1] +
xor ecx ecx +
lea esi [esi+0] +
movzx eax byte ptr [ebx+ecx] +
mov [edx+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_411570  +
add ecx edx +
mov [esi] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_4115A5  +
movzx ecx ds:byte_4782B4[eax] +
lea edx [edi+1] +
sub eax 1 +
mov [edi] cl +
jmp loc_411568  +
lea edx [edi+1] +
xor eax eax +
mov byte ptr [edi] 31h +
mov ebx offset asc_477FDC +
jmp loc_411568  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_406290  +
test eax eax +
jz loc_411607  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+arg_C] +
cmp eax 33h +
jz loc_4116E0  +
cmp eax 36h +
jnz loc_4116D1  +
lea edx [esp+4Ch+var_20] +
mov ecx ebx +
lea eax [esp+4Ch+arg_8] +
call sub_4110E0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4116D6  +
mov eax [esp+4Ch+arg_8] +
movzx edx byte ptr [eax] +
mov ecx eax +
test dl dl +
jz loc_4116D1  +
lea edi [ebx-1] +
cmp eax edi +
jnb loc_4116D1  +
mov esi [esp+4Ch+var_20] +
jmp loc_411676  +
cmp eax edi +
jnb loc_4116D1  +
mov ecx eax +
movzx ecx byte ptr [ecx+1] +
movzx edx ds:byte_492500[edx] +
movzx ebx ds:byte_492500[ecx] +
shl edx 4 +
add ebx edx +
jz loc_4116B9  +
mov edx esi +
mov ecx 1 +
mov eax ebp +
and esi 1FFFh +
call sub_4112E0  +
mov [eax+esi] bl +
shr esi 5 +
mov byte ptr [eax+esi+2000h] 1 +
mov eax [esp+4Ch+arg_8] +
mov esi [esp+4Ch+var_20] +
mov edx eax +
add esi 1 +
add eax 2 +
mov [esp+4Ch+arg_8] eax +
mov [esp+4Ch+var_20] esi +
movzx edx byte ptr [edx+2] +
test dl dl +
jnz loc_411670  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebx +
lea ecx [esp+4Ch+var_28] +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_411180  +
test eax eax +
jnz loc_411702  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] ebp +
call sub_402CB0  +
test eax eax +
mov esi eax +
jz loc_411942  +
lea eax [esi+1Ch] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_38] eax +
mov edx [esp+4Ch+arg_8] +
cmp ebx edx +
jbe loc_4116D1  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_4116D1  +
sub ecx 30h +
cmp cl 8 +
ja loc_4116F8  +
mov eax 1 +
shl eax cl +
test eax 1DDh +
jnz loc_4117C0  +
test al 2 +
jz loc_4116F8  +
add edx 1 +
mov ecx ebx +
mov [esp+4Ch+arg_8] edx +
mov edx [esp+4Ch+var_38] +
lea eax [esp+4Ch+arg_8] +
call sub_4110E0  +
test eax eax +
jz loc_4116F8  +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_4110E0  +
test eax eax +
jz loc_4116F8  +
mov eax [esi+1Ch] +
mov edx [esp+4Ch+var_24] +
cmp eax edx +
jbe loc_4117B0  +
mov [esp+4Ch+var_24] eax +
mov dword ptr [esi+24h] 0 +
mov edx [esp+4Ch+arg_8] +
mov dword ptr [esi+14h] 103h +
cmp ebx edx +
ja loc_411733  +
jmp loc_4116D1  +
sub edx eax +
test edx edx +
mov [esi+24h] edx +
jns loc_41179B  +
xor eax eax +
jmp loc_4116FA  +
mov [esp+4Ch+var_48] 1Ch +
mov [esp+4Ch+var_4C] ebp +
call sub_406290  +
mov edi eax +
mov eax [esp+4Ch+arg_8] +
test edi edi +
movzx ecx byte ptr [eax] +
mov [esp+4Ch+var_31] cl +
jz loc_4116F8  +
add eax 1 +
mov [edi] ebp +
mov [esp+4Ch+arg_8] eax +
mov eax [ebp+0A0h] +
or dword ptr [ebp+28h] 200h +
add dword ptr [ebp+7Ch] 1 +
mov edx [eax+8] +
mov [edi+18h] edx +
lea edx [esp+4Ch+var_28] +
mov [eax+8] edi +
mov ecx edx +
mov [esp+4Ch+var_4C] ebx +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_411180  +
test eax eax +
jz loc_4116F8  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
lea eax [edx+1] +
mov [esp+4Ch+var_48] eax +
call sub_406290  +
test eax eax +
mov [edi+4] eax +
jz loc_4116F8  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
add edx 1 +
mov [esp+4Ch+var_44] edx +
lea edx [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] edx +
call memcpy  +
movzx ecx [esp+4Ch+var_31] +
xor eax eax +
mov [edi+10h] esi +
cmp cl 34h +
setle al  +
add eax 1 +
mov [edi+0Ch] eax +
mov eax ecx +
and eax 0FFFFFFFBh +
cmp al 32h +
jnz loc_4118B0  +
mov dword ptr [edi+10h] offset off_473250 +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_4110E0  +
test eax eax +
jz loc_4116F8  +
mov eax [esp+4Ch+var_24] +
sub eax [esi+1Ch] +
mov [edi+8] eax +
jmp loc_41172B  +
cmp al 33h +
jnz loc_4118D0  +
mov eax [esi+14h] +
test al 20h +
jz loc_4118F0  +
mov edx [esp+4Ch+var_30] +
test edx edx +
jz loc_411997  +
mov eax [esp+4Ch+var_30] +
mov [edi+10h] eax +
jmp loc_411885  +
cmp [esp+4Ch+var_31] 38h +
jz loc_4118DE  +
cmp [esp+4Ch+var_31] 34h +
jnz loc_411885  +
mov eax [esi+14h] +
test al 10h +
jnz loc_4118F8  +
or eax 20h +
mov [esi+14h] eax +
jmp loc_411885  +
or eax 10h +
mov [esi+14h] eax +
jmp loc_411885  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_4118C7  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_402CF0  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_4118C7  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 20h +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_4C] ebp +
call sub_403090  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_4118C7  +
xor eax eax +
jmp loc_4116FA  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
add eax 1 +
mov [esp+4Ch+var_48] eax +
call sub_406290  +
test eax eax +
mov esi eax +
jz loc_4116F8  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] esi +
add eax 1 +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] ebp +
call sub_403240  +
test eax eax +
mov esi eax +
jnz loc_41171C  +
xor eax eax +
jmp loc_4116FA  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_402CF0  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_4118C7  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 10h +
jmp loc_411923  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
or eax [esp+2Ch+arg_0] +
jnz loc_411AA8  +
mov eax [edx] +
mov ebx ecx +
mov edx 1 +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
xor eax eax +
sub [esp+2Ch+var_18] ecx +
test esi esi +
jnz loc_411A2A  +
jmp loc_411A94  +
test eax eax +
jz loc_411AA0  +
movzx edx byte ptr [eax+ebp] +
mov [ebx] dl +
add ebx 1 +
sub [esp+2Ch+arg_8] 1 +
jz loc_411A94  +
mov edx esi +
mov ecx [esp+2Ch+var_18] +
xor edi edi +
lea ebp [ebx+ecx] +
mov ecx [esp+2Ch+arg_C] +
mov esi ebp +
and ebp 1FFFh +
and esi 0FFFFE000h +
test ecx ecx +
jnz loc_411A53  +
xor ecx ecx +
cmp byte ptr [ebx] 0 +
setnz cl  +
mov edi ecx +
cmp esi edx +
jnz loc_411A60  +
test edi edi +
jz loc_411A6D  +
test eax eax +
jnz loc_411A6D  +
nop   +
mov eax [esp+2Ch+var_14] +
mov ecx edi +
mov edx esi +
call sub_4112E0  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jnz loc_411A10  +
test edi edi +
jz loc_411A1E  +
movzx edx byte ptr [ebx] +
add ebx 1 +
mov [eax+ebp] dl +
shr ebp 5 +
sub [esp+2Ch+arg_8] 1 +
mov byte ptr [eax+ebp+2000h] 1 +
jnz loc_411A28  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx] 0 +
jmp loc_411A1E  +
mov [esp+2Ch+var_28] 27Ah +
mov [esp+2Ch+var_2C] offset a____Binutil_19 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_18] edx +
call sub_404040  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_18] +
jmp loc_4119E9  +
***
jmp loc_411AE0  +
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_411B24  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_4119D0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_411B74  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_4119D0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edx [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test eax eax +
jz loc_411BE0  +
cmp eax 2 +
jnz loc_411BD6  +
mov eax [ebx+10h] +
mov edi [eax] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call sub_413480  +
mov eax [ebx+4] +
mov [esp+28h] edi +
mov [esp+20h] esi +
mov dword ptr [esp+24h] offset a5sS_0 +
mov [esp+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fprintf  +
***
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+4] +
mov [esp+24h] esi +
mov [esp+20h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fputs  +
***
sub esp 0Ch +
mov ds:dword_49A2A0 1 +
call nullsub_2  +
xor eax eax +
mov ds:byte_49A2F0[eax] al +
add eax 1 +
cmp eax 0Ah +
jnz loc_411C14  +
mov ds:byte_49A2F7[eax] al +
add eax 1 +
cmp eax 24h +
jnz loc_411C22  +
mov ds:byte_49A2E4 24h +
mov al 28h +
mov ds:byte_49A2E5 25h +
mov ds:byte_49A2EE 26h +
mov ds:byte_49A31F 27h +
nop   +
mov ds:byte_49A2F9[eax] al +
add eax 1 +
cmp eax 42h +
jnz loc_411C50  +
add esp 0Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax ds:dword_49A2A0 +
test eax eax +
jz loc_411F0F  +
mov eax [esp+0A0h] +
lea edi [esp+1Ch] +
mov eax [eax+0A0h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_411D52  +
xor ebp ebp +
jmp loc_411CB6  +
add ebp 20h +
cmp ebp 2000h +
jz loc_411D44  +
mov eax ebp +
sar eax 5 +
cmp byte ptr [esi+eax+2000h] 0 +
jz loc_411CA7  +
mov edx [esi+2100h] +
lea eax [esp+18h] +
mov [esp+18h] edi +
add edx ebp +
call sub_411240  +
mov edx [esp+18h] +
mov eax ebp +
lea ecx [esi+ebp+20h] +
add eax esi +
movzx ebx byte ptr [eax] +
add eax 1 +
and ebx 0Fh +
movzx ebx ds:byte_4782B4[ebx] +
mov [edx+1] bl +
movzx edx byte ptr [eax-1] +
shr dl 4 +
cmp eax ecx +
movzx edx dl +
movzx ebx ds:byte_4782B4[edx] +
mov edx [esp+18h] +
mov [edx] bl +
mov ebx [esp+18h] +
lea edx [ebx+2] +
mov [esp+18h] edx +
jnz loc_411CE6  +
mov eax [esp+0A0h] +
mov ecx edi +
add ebp 20h +
mov [esp] edx +
mov edx 36h +
call sub_411400  +
cmp ebp 2000h +
jnz loc_411CB6  +
mov esi [esi+2104h] +
test esi esi +
jnz loc_411CA3  +
mov eax [esp+0A0h] +
lea esi [esp+1Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_411DBD  +
mov [esp+18h] esi +
mov edx [ebx] +
lea eax [esp+18h] +
call sub_411540  +
mov eax [esp+18h] +
lea edx [eax+1] +
mov [esp+18h] edx +
mov byte ptr [eax] 31h +
mov edx [ebx+1Ch] +
lea eax [esp+18h] +
call sub_411240  +
mov edx [ebx+24h] +
lea eax [esp+18h] +
add edx [ebx+1Ch] +
call sub_411240  +
mov eax [esp+18h] +
mov ecx esi +
mov edx 33h +
mov [esp] eax +
mov eax [esp+0A0h] +
call sub_411400  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_411D64  +
mov eax [esp+0A0h] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_411E62  +
mov eax [ebx] +
test eax eax +
jz loc_411E62  +
lea edi [esp+1Ch] +
***
mov eax [esp+arg_14] +
mov edx [esi+4] +
mov eax [esp+arg_14] +
mov dword ptr [esp+0] 3 +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
lea edx [eax+1] +
mov [esp+arg_14] edx +
mov byte ptr [eax] 36h +
jmp sub_411E1D  +
***
call sub_411C00  +
jmp loc_411C87  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 11Ch +
mov [esp+120h+var_114] 0 +
mov [esp+120h+var_11C] 0 +
mov [esp+120h+var_118] 0 +
mov [esp+120h+var_120] eax +
call sub_403BF0  +
test eax eax +
jnz loc_412040  +
lea ebx [esp+120h+var_10F] +
jmp loc_411F88  +
***
test edx edx +
jnz loc_412050  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 1 +
mov [esp-9Ch+arg_98] ebx +
call sub_4039E0  +
xor edx edx +
cmp eax 1 +
setnz dl  +
cmp byte ptr [esp+11h] 25h +
mov eax edx +
jnz loc_411F80  +
test eax eax +
jnz loc_412050  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 5 +
mov [esp-9Ch+arg_98] ebx +
call sub_4039E0  +
cmp eax 5 +
jnz loc_412040  +
movzx eax byte ptr [esp+11h] +
movzx ebp byte ptr [esp+13h] +
movzx eax ds:byte_492500[eax] +
cmp al 63h +
jz loc_412050  +
movzx edx byte ptr [esp+12h] +
movzx edx ds:byte_492500[edx] +
cmp dl 63h +
jz loc_412050  +
shl eax 4 +
lea edi [edx+eax-5] +
cmp edi 0FEh +
ja loc_412040  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] edi +
mov [esp-9Ch+arg_98] ebx +
call sub_4039E0  +
cmp edi eax +
jnz loc_412040  +
mov eax ebp +
mov byte ptr [esp+edi+11h] 0 +
movsx ebp al +
add edi ebx +
mov [esp+0Ch] edi +
mov [esp-9Ch+arg_A0] ebx +
mov [esp-9Ch+arg_9C] ebp +
mov [esp-9Ch+arg_98] esi +
call sub_411610  +
test eax eax +
jnz loc_411F88  +
nop   +
add esp 11Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 11Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_49A2A0 +
mov ebx [esp+30h] +
test eax eax +
jz loc_412110  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_412102  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_4039E0  +
cmp eax 4 +
jnz loc_412102  +
cmp byte ptr [esp+1Ch] 25h +
jnz loc_412102  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_492500[eax] 63h +
jz loc_412102  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_492500[eax] 63h +
jz loc_412102  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_492500[eax] 63h +
jz loc_412102  +
mov [esp] ebx +
call sub_4115C0  +
mov eax ebx +
call sub_411F40  +
test eax eax +
jz loc_412102  +
mov eax [ebx+4] +
add esp 28h +
pop ebx  +
retn   +
***
add esp 28h +
xor eax eax +
pop ebx  +
retn   +
***
call sub_411C00  +
jmp loc_412075  +
***
xor eax eax +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] ebx +
call sub_406290  +
test eax eax +
jz loc_412170  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_407D90  +
mov edx 1 +
test eax eax +
jnz loc_4121B0  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 5Ch +
mov [esp+5Ch+var_40] eax +
mov eax edx +
mov esi [esp+5Ch+arg_0] +
shr eax 4 +
mov ebp [esp+5Ch+arg_4] +
and eax 0Fh +
movzx eax ds:byte_478554[eax] +
shr ebx 8 +
mov [esp+5Ch+var_39] 3Ah +
mov [esp+24h] al +
mov eax edx +
and eax 0Fh +
movzx eax ds:byte_478554[eax] +
mov [esp+25h] al +
movzx eax bl +
shr eax 4 +
movzx eax ds:byte_478554[eax] +
mov [esp+5Ch+var_36] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_478554[eax] +
mov [esp+5Ch+var_35] al +
movzx eax cl +
shr eax 4 +
movzx eax ds:byte_478554[eax] +
mov [esp+5Ch+var_34] al +
mov eax ecx +
add ecx esi +
and eax 0Fh +
add ecx edx +
movzx eax ds:byte_478554[eax] +
add ebx ecx +
mov [esp+5Ch+var_33] al +
mov eax esi +
shr eax 4 +
and eax 0Fh +
movzx eax ds:byte_478554[eax] +
mov [esp+5Ch+var_32] al +
mov eax esi +
and eax 0Fh +
test edx edx +
movzx eax ds:byte_478554[eax] +
mov [esp+5Ch+var_31] al +
jz loc_412309  +
xor eax eax +
lea esi [esp+5Ch+var_39] +
mov [esp+5Ch+var_44] edx +
lea esi [esi+0] +
movzx ecx byte ptr [ebp+eax+0] +
mov edx ecx +
add ebx ecx +
shr dl 4 +
movzx edi dl +
movzx edx ds:byte_478554[edi] +
mov edi ecx +
and edi 0Fh +
mov [esi+eax*2+9] dl +
movzx edx ds:byte_478554[edi] +
mov [esi+eax*2+0Ah] dl +
add eax 1 +
cmp eax [esp+5Ch+var_44] +
jnz loc_412280  +
mov edx [esp+5Ch+var_44] +
lea ecx [esp+edx*2+5Ch+var_30] +
neg ebx  +
movzx eax bl +
and ebx 0Fh +
shr eax 4 +
movzx eax ds:byte_478554[eax] +
mov byte ptr [ecx+2] 0Dh +
mov byte ptr [ecx+3] 0Ah +
mov [ecx] al +
movzx eax ds:byte_478554[ebx] +
lea ebx [edx+edx+0Dh] +
mov [ecx+1] al +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_54] eax +
call sub_403A90  +
cmp ebx eax +
setz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+5Ch+var_30] +
lea esi [esp+5Ch+var_39] +
jmp loc_4122BB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_412502  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov eax [esp+1Ch] +
mov esi [eax+0Ch] +
mov ebp [eax+8] +
mov edi [eax+4] +
test esi esi +
jz loc_4124F0  +
mov eax [esp+14h] +
mov edx [esp+18h] +
add eax edx +
mov [esp+10h] eax +
jmp loc_41240E  +
mov edx [esp+14h] +
test edx edx +
jnz loc_412496  +
mov eax ebp +
xor ecx ecx +
and eax 0F0000h +
mov edx 2 +
mov [esp+18h] eax +
shr eax 0Ch +
mov [esp+2Ah] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Bh] 0 +
call sub_4121C0  +
test eax eax +
jz loc_4124E1  +
mov eax [esp+14h] +
add eax [esp+18h] +
mov [esp+10h] eax +
mov ecx ebp +
sub ecx [esp+10h] +
lea eax [ecx+ebx] +
cmp eax 0FFFFh +
jbe loc_4123E4  +
mov ebx 10000h +
sub ebx ecx +
mov eax [esp+60h] +
mov edx ebx +
mov [esp+4] edi +
mov dword ptr [esp] 0 +
call sub_4121C0  +
test eax eax +
jz loc_4124E1  +
add ebp ebx +
add edi ebx +
sub esi ebx +
jz loc_4124F0  +
mov eax [esp+10h] +
cmp esi 10h +
mov ebx 10h +
cmovbe ebx esi +
add eax 0FFFFh +
cmp eax ebp +
jnb loc_4123CD  +
cmp ebp 0FFFFFh +
jbe loc_412377  +
mov eax [esp+18h] +
test eax eax +
jnz loc_4124B0  +
mov eax ebp +
xor ax ax +
mov [esp+14h] eax +
add eax 0FFFFh +
cmp eax ebp +
jb loc_412585  +
mov edx [esp+14h] +
xor ecx ecx +
mov dword ptr [esp] 4 +
mov eax edx +
shr eax 18h +
mov [esp+2Ah] al +
mov eax edx +
mov edx 2 +
shr eax 10h +
mov [esp+2Bh] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
call sub_4121C0  +
test eax eax +
jz loc_4124E1  +
mov dword ptr [esp+18h] 0 +
jmp loc_4123C1  +
***
mov dword ptr [esp+4] 319h +
mov dword ptr [esp] offset a____Binutil_20 +
call sub_404040  +
jmp loc_412383  +
***
lea eax [esp+2Ah] +
xor ecx ecx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov edx 2 +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Ah] 0 +
mov byte ptr [esp+2Bh] 0 +
call sub_4121C0  +
test eax eax +
jnz loc_41243A  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_41234F  +
mov eax [esp+60h] +
mov eax [eax+74h] +
test eax eax +
jz loc_41255C  +
cmp eax 0FFFFFh +
mov edx eax +
ja loc_4125C9  +
and edx 0F0000h +
shr edx 0Ch +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov byte ptr [esp+2Dh] 0 +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 3 +
mov eax [esp+60h] +
xor ecx ecx +
mov edx 4 +
call sub_4121C0  +
test eax eax +
jz loc_4124E1  +
mov eax [esp+60h] +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 1 +
call sub_4121C0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4124E3  +
***
lea ebx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset a08lx_1 +
mov [esp] ebx +
call sprintf  +
mov eax [esp+60h] +
mov eax [eax] +
mov [esp+8] ebx +
mov dword ptr [esp] offset aSAddress0xSOut +
mov [esp+4] eax +
call off_4733A4  +
mov dword ptr [esp] 11h +
call sub_4040F0  +
jmp loc_4124E1  +
***
shr edx 18h +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 10h +
mov [esp+2Dh] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 5 +
jmp loc_412548  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 1Ch +
mov ebx [esp+44h] +
mov edi [esp+3Ch] +
test ebx ebx +
jz loc_412627  +
mov eax [esp+34h] +
mov edx [eax+14h] +
and edx 3 +
cmp edx 3 +
jz loc_412631  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_406290  +
test eax eax +
mov ebp eax +
jz loc_4126F1  +
mov eax [esp+30h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_406290  +
test eax eax +
mov edx eax +
jz loc_4126F1  +
mov eax [esp+38h] +
mov [esp] edx +
mov [esp+8] ebx +
mov [esp+0Ch] edx +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov edx [esp+0Ch] +
add edi [eax+20h] +
mov eax [esp+30h] +
mov [ebp+4] edx +
mov [ebp+8] edi +
mov [ebp+0Ch] ebx +
mov ecx [eax+0A0h] +
mov eax [ecx+4] +
test eax eax +
jz loc_4126AB  +
cmp edi [eax+8] +
jnb loc_4126E0  +
mov edx [ecx] +
mov eax ecx +
test edx edx +
jnz loc_4126BD  +
jmp loc_4126C2  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_4126C2  +
cmp edi [edx+8] +
ja loc_4126B5  +
mov [ebp+0] edx +
mov esi 1 +
mov [eax] ebp +
mov eax [ebp+0] +
test eax eax +
jnz loc_412627  +
mov [ecx+4] ebp +
jmp loc_412627  +
***
mov [eax] ebp +
mov dword ptr [ebp+0] 0 +
mov [ecx+4] ebp +
jmp loc_412627  +
***
xor esi esi +
jmp loc_412627  +
***
sub esp 34h +
cmp ecx 0FFFFFFFFh +
jz loc_412751  +
mov ebx eax +
movzx eax cl +
test byte ptr ds:word_490F00[eax+eax] 10h +
jz loc_412767  +
mov byte ptr [esp+34h+var_E] cl +
lea esi [esp+34h+var_E] +
mov byte ptr [esp+34h+var_E+1] 0 +
mov [esp+34h+var_28] esi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset aBDUnexpected_0 +
call off_4733A4  +
mov [esp+34h+var_34] 11h +
call sub_4040F0  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+34h+arg_0] +
test eax eax +
jnz loc_41274B  +
mov [esp+34h+var_34] 12h +
call sub_4040F0  +
jmp loc_41274B  +
lea esi [esp+34h+var_E] +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] offset a03o_0 +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_18] edx +
call sprintf  +
mov edx [esp+34h+var_18] +
jmp loc_412726  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx ds:dword_49A3C0 +
mov ebp [esp+0A0h] +
test ebx ebx +
jz loc_4128D4  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_403BF0  +
test eax eax +
jnz loc_4127FE  +
lea edi [esp+63h] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 9 +
mov [esp] edi +
call sub_4039E0  +
cmp eax 9 +
jz loc_412810  +
call sub_403EA0  +
cmp eax 12h +
jz loc_4128C3  +
xor eax eax +
***
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+63h] 3Ah +
jnz loc_4128C3  +
lea eax [esp+64h] +
lea ebx [esp+6Ch] +
movzx edx byte ptr [eax] +
cmp ds:byte_492500[edx] 63h +
jz loc_4128C3  +
add eax 1 +
cmp eax ebx +
jnz loc_412823  +
movzx eax byte ptr [esp+6Ah] +
movzx edx byte ptr [esp+6Bh] +
movzx eax ds:byte_492500[eax] +
movzx edx ds:byte_492500[edx] +
shl eax 4 +
add eax edx +
cmp eax 5 +
ja loc_4128C3  +
mov eax [ebp+0A0h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
call sub_412130  +
test eax eax +
jz loc_412896  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_403BF0  +
test eax eax +
jz loc_4128E8  +
***
mov eax [ebp+0A0h] +
cmp eax [esp+arg_18] +
jz loc_4128B2  +
test eax eax +
jz loc_4128B2  +
mov [esp+arg_0] eax +
mov [esp+0] ebp +
call sub_4064E0  +
mov eax [esp+arg_18] +
mov [ebp+0A0h] eax +
xor eax eax +
jmp loc_412800  +
***
mov dword ptr [esp] 3 +
call sub_4040F0  +
jmp loc_4127FE  +
***
mov ds:dword_49A3C0 1 +
call nullsub_2  +
jmp loc_4127AF  +
***
mov dword ptr [ebp+74h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+20h] 1 +
mov dword ptr [esp+3Ch] 0 +
mov dword ptr [esp+48h] 0 +
mov dword ptr [esp+4Ch] 0 +
***
mov [esp+arg_4] ebp +
mov [esp+arg_0] 1 +
mov [esp+0] ebx +
call sub_4039E0  +
cmp eax 1 +
jz loc_412960  +
call sub_403EA0  +
cmp eax 12h +
jz loc_412EE0  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_412896  +
mov [esp+0] eax +
call free  +
jmp loc_412896  +
***
movzx ecx [esp+arg_68] +
cmp ecx 0Dh +
jz loc_41291F  +
cmp ecx 0Ah +
jz loc_412ED5  +
cmp ecx 3Ah +
jnz loc_412B78  +
mov [esp+0] ebp +
call sub_403B10  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 8 +
mov [esp+arg_3C] eax +
lea eax [esp+arg_57] +
mov [esp+0] eax +
mov [esp+arg_40] edx +
call sub_4039E0  +
cmp eax 8 +
jnz loc_412946  +
lea eax [esp+arg_57] +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
cmp ds:byte_492500[ecx] 63h +
jz loc_412B78  +
add eax 1 +
cmp eax edi +
jnz loc_4129B0  +
movzx eax byte ptr [esp+arg_57] +
movzx edx byte ptr [esp+arg_57+1] +
movzx eax ds:byte_492500[eax] +
movzx edx ds:byte_492500[edx] +
shl eax 4 +
add eax edx +
mov esi eax +
mov [esp+arg_24] eax +
movzx eax byte ptr [esp+arg_57+2] +
lea esi [esi+esi+2] +
cmp esi [esp+arg_20] +
movzx eax ds:byte_492500[eax] +
mov byte ptr [esp+arg_28] al +
movzx eax byte ptr [esp+arg_57+3] +
movzx eax ds:byte_492500[eax] +
mov byte ptr [esp+arg_2C] al +
movzx eax [esp+arg_5B] +
movzx eax ds:byte_492500[eax] +
mov byte ptr [esp+arg_30] al +
movzx eax [esp+arg_5C] +
movzx eax ds:byte_492500[eax] +
mov [esp+arg_35] al +
movzx eax [esp+arg_5D] +
movzx eax ds:byte_492500[eax] +
mov [esp+arg_36] al +
movzx eax [esp+arg_5E] +
movzx eax ds:byte_492500[eax] +
mov [esp+arg_37] al +
jnb loc_412B90  +
mov eax [esp+arg_14] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] esi +
mov [esp+0] eax +
call sub_4039E0  +
cmp esi eax +
jnz loc_412946  +
mov edx [esp+arg_14] +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
cmp ds:byte_492500[ecx] 63h +
jz loc_412B78  +
add eax 1 +
cmp esi eax +
ja loc_412A80  +
movzx edx byte ptr [esp+arg_30] +
movzx eax [esp+arg_35] +
shl edx 4 +
lea ecx [edx+eax] +
movzx eax byte ptr [esp+arg_28] +
movzx edx byte ptr [esp+arg_2C] +
shl eax 4 +
add eax edx +
movzx edx [esp+arg_37] +
shl eax 8 +
add eax ecx +
mov [esp+arg_28] eax +
movzx eax [esp+arg_36] +
shl eax 4 +
lea ecx [eax+edx] +
mov edx [esp+arg_24] +
mov eax [esp+arg_28] +
mov [esp+arg_2C] ecx +
add ecx edx +
add ecx eax +
shr eax 8 +
add ecx eax +
test edx edx +
jz loc_412F27  +
mov edx [esp+arg_14] +
sub esi 2 +
mov [esp+arg_30] esi +
mov [esp+arg_9C] ebp +
add esi edx +
mov eax edx +
mov ebp esi +
movzx edx byte ptr [eax] +
add eax 2 +
movzx esi byte ptr [eax-1] +
movzx edx ds:byte_492500[edx] +
movzx esi ds:byte_492500[esi] +
shl edx 4 +
add edx esi +
add ecx edx +
cmp eax ebp +
jnz loc_412B05  +
mov edx [esp+arg_30] +
mov ebp [esp+arg_9C] +
mov eax edx +
add eax 1 +
mov esi [esp+arg_14] +
neg ecx  +
movzx ecx cl +
movzx edx byte ptr [esi+edx] +
movzx eax byte ptr [esi+eax] +
movzx edx ds:byte_492500[edx] +
movzx eax ds:byte_492500[eax] +
shl edx 4 +
add eax edx +
cmp ecx eax +
jnz loc_412F94  +
mov eax [esp+arg_2C] +
cmp eax 5 +
ja loc_412EF5  +
jmp ds:off_4784E8[eax*4]  +
mov edx [esp+arg_1C] +
mov eax ebp +
mov dword ptr [esp+0] 0 +
call sub_412700  +
jmp loc_412946  +
***
cmp [esp+arg_24] 2 +
cmp [esp+arg_24] 4 +
cmp [esp+arg_24] 2 +
mov edx [ebp+74h] +
cmp [esp+arg_24] 4 +
mov eax [esp+arg_38] +
test eax eax +
jz loc_412E02  +
mov ecx [eax+24h] +
mov edx [eax+1Ch] +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
add edx ecx +
cmp edx eax +
jz loc_412F84  +
mov ecx [esp+arg_24] +
test ecx ecx +
jz loc_41291F  +
mov eax [ebp+6Ch] +
mov [esp+arg_0] offset a_secD_0 +
mov [esp+0] ebx +
add eax 1 +
mov [esp+arg_4] eax +
call sprintf  +
mov edx ebx +
mov eax [edx] +
add edx 4 +
lea ecx [eax-1010101h] +
not eax  +
and ecx eax +
and ecx 80808080h +
jz loc_412E2A  +
mov eax ecx +
shr eax 10h +
test ecx 8080h +
cmovz ecx eax +
lea eax [edx+2] +
cmovz edx eax +
add cl cl +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+arg_0] edx +
mov [esp+0] ebp +
call sub_406290  +
test eax eax +
mov esi eax +
jz loc_412946  +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call strcpy  +
mov [esp+arg_0] esi +
mov [esp+arg_4] 103h +
mov [esp+0] ebp +
call sub_403170  +
test eax eax +
mov esi eax +
mov [esp+arg_38] eax +
jz loc_412946  +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
mov edx [esp+arg_40] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov eax [esp+arg_24] +
mov [esi+24h] eax +
mov eax [esp+arg_3C] +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
mov [esi+50h] eax +
mov [esi+54h] edx +
jmp loc_41291F  +
add [esp+arg_1C] 1 +
jmp loc_41291F  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_412D32  +
mov eax [esp+arg_14] +
jmp loc_412D2A  +
mov eax [esp+arg_2C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUUnrecognized +
mov [esp+arg_8] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_4] eax +
call off_4733A4  +
mov dword ptr [esp+0] 11h +
call sub_4040F0  +
jmp loc_412946  +
mov eax 1 +
xor edx edx +
jmp loc_412B38  +
mov esi [esp+arg_14] +
mov [esp+arg_38] 0 +
movzx eax byte ptr [esi+2] +
movzx edx byte ptr [esi+3] +
movzx eax ds:byte_492500[eax] +
movzx ecx ds:byte_492500[edx] +
shl eax 4 +
add ecx eax +
movzx eax byte ptr [esi] +
movzx edx ds:byte_492500[eax] +
movzx eax byte ptr [esi+1] +
shl edx 4 +
movzx eax ds:byte_492500[eax] +
add eax edx +
shl eax 8 +
add eax ecx +
shl eax 10h +
add [ebp+74h] eax +
jmp loc_41291F  +
mov eax [esp+arg_38] +
add ecx [esp+arg_24] +
mov [eax+24h] ecx +
jmp loc_41291F  +
***
mov [esp+arg_C] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_8] ecx +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadChecksumI +
mov [esp+arg_4] eax +
call off_4733A4  +
mov dword ptr [esp+0] 11h +
call sub_4040F0  +
jmp loc_412946  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedA +
mov [esp+arg_4] eax +
call off_4733A4  +
mov dword ptr [esp+0] 11h +
call sub_4040F0  +
jmp loc_412946  +
***
cmp [esp+arg_24] 2 +
jz loc_412D45  +
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedL +
mov [esp+arg_4] eax +
call off_4733A4  +
mov dword ptr [esp+0] 11h +
call sub_4040F0  +
jmp loc_412946  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtende_0 +
mov [esp+arg_4] eax +
call off_4733A4  +
mov dword ptr [esp+0] 11h +
call sub_4040F0  +
jmp loc_412946  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedS +
mov [esp+arg_4] eax +
call off_4733A4  +
mov dword ptr [esp+0] 11h +
call sub_4040F0  +
jmp loc_412946  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov esi [esp+5Ch] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_4130C0  +
add esi eax +
mov eax [esp+64h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp] eax +
call memcpy  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov eax [eax+24h] +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_406290  +
mov ecx [esp+54h] +
mov ebx eax +
mov [esp+14h] eax +
mov [ecx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_4130B8  +
mov eax [ecx+50h] +
mov edx [ecx+54h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_403BF0  +
test eax eax +
jnz loc_4132BB  +
mov ebx [esp+14h] +
xor edi edi +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+50h] +
mov dword ptr [esp+4] 1 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_4039E0  +
cmp eax 1 +
jz loc_413177  +
call sub_403EA0  +
mov eax [esp+54h] +
sub ebx [esp+14h] +
cmp ebx [eax+24h] +
jb loc_4132E8  +
test edi edi +
jz loc_413168  +
mov [esp] edi +
call free  +
mov eax [esp+54h] +
mov eax [eax+8Ch] +
jmp loc_413099  +
***
movzx eax byte ptr [esp+28h] +
cmp eax 0Ah +
jz loc_413125  +
cmp eax 0Dh +
jz loc_413125  +
cmp eax 3Ah +
jz loc_41319F  +
mov dword ptr [esp+4] 236h +
mov dword ptr [esp] offset a____Binutil_20 +
call sub_404040  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_4039E0  +
cmp eax 8 +
jnz loc_4132AF  +
movzx eax byte ptr [esp+28h] +
movzx edx byte ptr [esp+29h] +
movzx eax ds:byte_492500[eax] +
movzx ebp ds:byte_492500[edx] +
movzx edx byte ptr [esp+2Fh] +
shl eax 4 +
add ebp eax +
movzx eax byte ptr [esp+2Eh] +
movzx edx ds:byte_492500[edx] +
movzx eax ds:byte_492500[eax] +
shl eax 4 +
add eax edx +
jnz loc_4132C5  +
lea edx [ebp+ebp+0] +
cmp edx [esp+1Ch] +
jbe loc_413230  +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+18h] edx +
call sub_408090  +
test eax eax +
mov edi eax +
jz loc_4132BB  +
mov edx [esp+18h] +
mov [esp+1Ch] edx +
mov eax [esp+50h] +
mov [esp+4] edx +
mov [esp] edi +
mov [esp+18h] edx +
mov [esp+8] eax +
call sub_4039E0  +
mov edx [esp+18h] +
cmp edx eax +
jnz loc_4132AF  +
test ebp ebp +
jz loc_41327B  +
xor edx edx +
movzx eax byte ptr [edi+edx*2] +
movzx ecx byte ptr [edi+edx*2+1] +
movzx eax ds:byte_492500[eax] +
shl eax 4 +
add al ds:byte_492500[ecx] +
mov [ebx+edx] al +
add edx 1 +
cmp edx ebp +
jnz loc_413256  +
add ebx edx +
mov ecx [esp+54h] +
mov eax ebx +
sub eax [esp+14h] +
cmp eax [ecx+24h] +
jnb loc_41315C  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 2 +
mov [esp] edi +
mov [esp+8] eax +
call sub_4039E0  +
cmp eax 2 +
jz loc_413125  +
test edi edi +
jz loc_4132BB  +
mov [esp] edi +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBInternalError +
mov [esp+4] eax +
call off_4733A4  +
mov dword ptr [esp] 11h +
call sub_4040F0  +
jmp loc_4132AF  +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBBadSectionLen +
mov [esp+4] eax +
call off_4733A4  +
mov dword ptr [esp] 11h +
call sub_4040F0  +
jmp loc_4132AF  +
***
push ebx  +
mov ebx [esp+0Ch] +
mov eax [esp+8] +
mov ecx [ebx+0Ch] +
cmp [eax+0Ch] ecx +
jnz loc_413370  +
mov edx [eax+10h] +
mov ecx [ebx+10h] +
cmp edx ecx +
jz loc_413352  +
cmp edx 6 +
jz loc_413370  +
cmp ecx 6 +
jz loc_413370  +
cmp edx 5 +
ja loc_413354  +
cmp ecx 5 +
ja loc_413374  +
cmp edx 3 +
jz loc_4133C2  +
cmp edx 4 +
jz loc_4133D0  +
cmp edx ecx +
nop   +
jbe loc_413387  +
pop ebx  +
retn   +
***
cmp edx 19h +
jz loc_413382  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_413390  +
cmp ecx 1Fh +
jz loc_413352  +
cmp ecx 23h +
jz loc_413352  +
lea esi [esi+0] +
xor eax eax +
pop ebx  +
retn   +
***
cmp edx 2 +
jnz loc_413359  +
cmp ecx 19h +
jz loc_413352  +
xor eax eax +
jmp loc_413372  +
***
cmp ecx 2 +
jnz loc_413370  +
mov eax ebx +
pop ebx  +
retn   +
***
cmp edx 1Fh +
jnz loc_41339E  +
cmp ecx 3 +
jz loc_413387  +
xor eax eax +
jmp loc_413372  +
***
cmp edx 23h +
jz loc_413395  +
cmp edx 5 +
jnz loc_4133B2  +
cmp ecx 33h +
jz loc_413352  +
xor eax eax +
nop   +
jmp loc_413372  +
***
cmp edx 33h +
jnz loc_413370  +
cmp ecx 5 +
jnz loc_413370  +
mov eax ebx +
nop   +
jmp loc_413389  +
***
cmp ecx 4 +
jnz loc_41334D  +
xor eax eax +
jmp loc_413372  +
***
cmp ecx 3 +
jnz loc_41334D  +
xor eax eax +
jmp loc_413372  +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
test dword ptr [eax+0Ch] 4182h +
jnz loc_413427  +
mov eax [eax+4] +
test eax eax +
jz loc_413427  +
mov ecx [edx+4] +
mov ecx [ecx+11Ch] +
mov [esp+arg_4] eax +
jmp ecx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 1 +
jnz loc_413461  +
and edx 8 +
jnz loc_413461  +
mov edx [esp+1Ch+arg_4] +
mov [eax+78h] edx +
mov edx [esp+1Ch+arg_8] +
mov [eax+7Ch] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
mov edx [eax+10h] +
mov ebx [eax+0Ch] +
test edx edx +
jz loc_4135D0  +
mov edx [edx+1Ch] +
add edx [eax+8] +
mov [esp+3Ch+var_34] edx +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_404A20  +
test bl 8 +
mov [esp+3Ch+var_10] 46h +
jnz loc_4134D5  +
test bh 40h +
mov [esp+3Ch+var_10] 66h +
jz loc_4135B0  +
test bl 4 +
mov ebp 64h +
jnz loc_4134F1  +
mov eax ebx +
and eax 8000h +
cmp eax 1 +
sbb ebp ebp +
and ebp 0FFFFFFDCh +
add ebp 44h +
test bh 20h +
mov edi 49h +
jnz loc_41350D  +
mov eax ebx +
and eax 400000h +
cmp eax 1 +
sbb edi edi +
and edi 0FFFFFFB7h +
add edi 69h +
mov eax ebx +
and eax 1000h +
cmp eax 1 +
mov eax ebx +
sbb ecx ecx +
and eax 800h +
and ecx 0FFFFFFC9h +
add ecx 57h +
cmp eax 1 +
sbb edx edx +
mov eax ebx +
and edx 0FFFFFFDDh +
and eax 80h +
add edx 43h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFA9h +
add eax 77h +
test bl 1 +
jz loc_413592  +
and ebx 2 +
cmp ebx 1 +
sbb esi esi +
and esi 4Bh +
add esi 21h +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_20] ebp +
mov [esp+3Ch+var_24] edi +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aCCCCCCC +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 2 +
mov esi 67h +
jnz loc_413556  +
and ebx 800000h +
cmp ebx 1 +
sbb esi esi +
and esi 0FFFFFFABh +
add esi 75h +
jmp loc_413556  +
mov eax ebx +
and eax 10000h +
cmp eax 1 +
sbb eax eax +
mov [esp+3Ch+var_10] eax +
and [esp+3Ch+var_10] 0FFFFFFD1h +
add [esp+3Ch+var_10] 4Fh +
jmp loc_4134D5  +
mov eax [eax+8] +
mov [esp+3Ch+var_34] eax +
jmp loc_4134A3  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_406370  +
test eax eax +
jz loc_4135FE  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov ebx [edx+10h] +
test ebx ebx +
jz loc_41364E  +
test byte ptr [ebx+15h] 10h +
mov eax 43h +
jz loc_413635  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx offset off_4731A8 +
jz loc_4136F0  +
cmp ebx offset off_4732F8 +
mov eax 49h +
jz loc_41362D  +
mov esi [edx+0Ch] +
mov eax 69h +
test esi 400000h +
jnz loc_41362D  +
test esi 80h +
jnz loc_413710  +
test esi 800000h +
mov eax 75h +
jnz loc_41362D  +
test esi 3 +
mov al 3Fh +
jz loc_41362D  +
cmp ebx offset off_473250 +
jz loc_413720  +
test ebx ebx +
jz loc_41362D  +
mov eax [ebx] +
mov edi offset off_478D20 +
mov ebp offset a_bss +
mov [esp+1Ch+var_10] eax +
mov eax 4 +
jmp loc_4136B9  +
add edi 8 +
mov ebp [edi] +
test ebp ebp +
jz loc_413727  +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call strncmp  +
test eax eax +
jnz loc_4136A8  +
movzx eax byte ptr [edi+4] +
cmp al 3Fh +
jz loc_413727  +
and esi 2 +
jz loc_4136E8  +
movzx eax al +
movzx eax ds:byte_490D00[eax] +
movsx eax al +
jmp loc_41362D  +
mov edx [edx+0Ch] +
mov al 55h +
test dl 80h +
jz loc_41362D  +
mov eax edx +
shl eax 0Fh +
sar eax 1Fh +
add eax 77h +
jmp loc_41362D  +
mov eax esi +
shl eax 0Fh +
sar eax 1Fh +
add eax 57h +
jmp loc_41362D  +
mov eax 61h +
jmp loc_4136D9  +
mov edx [ebx+14h] +
mov eax 74h +
test dl 10h +
jnz loc_4136D9  +
test dl 20h +
jz loc_413756  +
test dl 8 +
mov eax 72h +
jnz loc_4136D9  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 67h +
jmp loc_4136D9  +
test dh 1 +
jnz loc_413771  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFEFh +
add eax 73h +
jmp loc_4136D9  +
test dh 20h +
mov eax 4Eh +
jnz loc_4136D9  +
and edx 108h +
mov eax 6Eh +
cmp edx 108h +
mov edx 3Fh +
cmovnz eax edx +
jmp loc_4136D9  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov [esp] esi +
call sub_413610  +
cmp al 55h +
mov [ebx+4] al +
jz loc_413800  +
sub eax 76h +
cmp al 1 +
jbe loc_413800  +
mov eax [esi+10h] +
mov eax [eax+1Ch] +
add eax [esi+8] +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+4] +
mov dword ptr [ebx] 0 +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+24h] +
mov ebx [esp+20h] +
test esi esi +
mov eax [ebx+4] +
jz loc_413854  +
mov eax [eax+198h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
js loc_413865  +
mov eax 0 +
jnz loc_413880  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+104h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
jns loc_413846  +
mov dword ptr [esp] 7 +
call sub_4040F0  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] edx +
call sub_408000  +
test eax eax +
mov edi eax +
jz loc_413865  +
test esi esi +
mov eax [ebx+4] +
jnz loc_4138C0  +
mov eax [eax+108h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_4138D3  +
mov edx [esp+28h] +
mov [edx] edi +
mov edx [esp+2Ch] +
mov dword ptr [edx] 4 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+19Ch] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jns loc_4138A8  +
mov dword ptr [esp] 7 +
call sub_4040F0  +
mov [esp] edi +
call free  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov edi [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax] +
mov [edi] eax +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_20] +
mov eax [eax] +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_413CF2  +
mov esi [eax] +
test esi esi +
jz loc_413BA8  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+4] +
test eax eax +
jz loc_413BA8  +
mov edi [eax+28h] +
test edi edi +
mov [esp+4Ch+var_20] edi +
jz loc_413BB5  +
mov eax [esp+4Ch+arg_8] +
mov edx [esp+4Ch+arg_C] +
add edx [eax+1Ch] +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_2C] edx +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_41399D  +
cmp edx [eax+1Ch] +
jnb loc_413A10  +
mov eax [esp+4Ch+var_30] +
xor ecx ecx +
mov ebp [esp+4Ch+var_2C] +
mov eax [eax+14h] +
mov [esp+4Ch+var_34] eax +
lea edx [eax-1] +
jmp loc_4139C7  +
lea eax [eax+eax*2+3] +
cmp ebp [esi+eax*8] +
jb loc_413CE0  +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
cmp ecx edx +
jz loc_413BA8  +
mov edi [esp+4Ch+var_30] +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
mov esi [edi+10h] +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
lea ebx [eax+eax*2] +
lea ebx [esi+ebx*8] +
cmp ebp [ebx] +
jnb loc_4139B3  +
cmp ecx eax +
mov edx eax +
jz loc_413BA8  +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
jmp loc_4139E6  +
cmp edx [ebx+18h] +
jnb loc_41399D  +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+20h] +
mov eax [eax+24h] +
mov [esp+4Ch+var_28] eax +
mov eax [ebx+0Ch] +
cmp ebp [ebx+1Ch] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+8] +
mov [esp+4Ch+var_1C] eax +
jnb loc_413A98  +
mov edi [esp+4Ch+arg_0] +
xor esi esi +
mov [esp+4Ch+var_34] esi +
mov esi ebx +
mov [esp+4Ch+var_24] 0 +
lea esi [esi+0] +
movzx eax byte ptr [ebp+4] +
cmp al 46h +
jz loc_413BCD  +
jbe loc_413BC1  +
cmp al 64h +
jz loc_413C13  +
cmp al 84h +
lea esi [esi+0] +
jnz loc_413C36  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
cmp [esp+4Ch+var_2C] eax +
jnb loc_413C50  +
add ebp 0Ch +
cmp [esi+1Ch] ebp +
ja loc_413A50  +
mov ebx esi +
mov eax [esp+4Ch+arg_10] +
mov dword ptr [eax] 1 +
mov eax [esp+4Ch+var_28] +
test eax eax +
jz loc_413CC0  +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_413CC0  +
cmp al 2Fh +
jz loc_413CC0  +
test al al +
jz loc_413AD3  +
mov eax [esp+4Ch+var_28] +
cmp byte ptr [eax+1] 3Ah +
jz loc_413CC0  +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_413CC0  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov edi eax +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_413B14  +
mov esi [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] esi +
call sub_460000  +
test eax eax +
jz loc_413F7A  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
lea esi [eax+1] +
lea eax [esi+edi] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
mov edx [esp+4Ch+var_30] +
test eax eax +
mov [edx+28h] eax +
jz loc_413F70  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call memcpy  +
mov eax [esp+4Ch+var_30] +
add edi [eax+28h] +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] edi +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+arg_14] +
mov eax [eax+28h] +
mov [edi] eax +
mov esi [ebx+14h] +
test esi esi +
jz loc_413BA8  +
mov [esp+4Ch+var_48] 3Ah +
mov [esp+4Ch+var_4C] esi +
call strchr  +
test eax eax +
jz loc_413BA2  +
mov byte ptr [eax] 0 +
mov esi [ebx+14h] +
mov eax [esp+4Ch+arg_18] +
mov [eax] esi +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+24h] +
mov [esp+4Ch+var_20] eax +
jmp loc_41397E  +
cmp al 24h +
jz loc_413C13  +
cmp al 44h +
jnz loc_413A8E  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_413C45  +
mov ebx [esi] +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
add ebx eax +
cmp ebx [esp+4Ch+var_2C] +
jbe loc_413C93  +
mov edx [esp+4Ch+var_34] +
test edx edx +
jz loc_413C93  +
cmp [esp+4Ch+var_2C] ebx +
jb loc_413A96  +
mov [esp+4Ch+var_34] 1 +
jmp loc_413A8E  +
mov eax [esp+4Ch+var_34] +
or eax [esp+4Ch+var_24] +
jnz loc_413A96  +
mov [esp+4Ch+var_24] 1 +
mov [esp+4Ch+var_34] 0 +
jmp loc_413A8E  +
cmp al 48h +
jnz loc_413A8E  +
mov ecx [esi+14h] +
test ecx ecx +
jnz loc_413BD4  +
xor ebx ebx +
jmp loc_413BD6  +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov ecx [esp+4Ch+var_30] +
add eax [esp+4Ch+var_1C] +
mov edx eax +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_413CD0  +
cmp [esp+4Ch+var_1C] edx +
mov eax 0 +
cmovbe eax edx +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
jmp loc_413A8E  +
mov eax [edi+4] +
lea ecx [ebp+6] +
mov eax [eax+34h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+arg_1C] +
mov [edx] eax +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+var_28] +
mov [eax+20h] ebp +
mov [eax+1Ch] ebx +
mov [eax+24h] edx +
mov [eax+18h] esi +
jmp loc_413BFC  +
mov eax [esp+4Ch+arg_14] +
mov edi [esp+4Ch+var_28] +
mov [eax] edi +
jmp loc_413B81  +
mov [esp+4Ch+var_28] 0 +
jmp loc_413C84  +
mov eax [ebx+4] +
lea ebp [eax+0Ch] +
mov eax [ebx+10h] +
mov [esp+4Ch+var_28] eax +
jmp loc_413A23  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 2Ch +
mov [esp+4Ch+var_4C] eax +
call sub_406370  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_413F70  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stab_0 +
mov [esp+4Ch+var_4C] eax +
call sub_402CB0  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stabstr_1 +
mov [esp+4Ch+var_4C] eax +
call sub_402CB0  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_413FA0  +
test eax eax +
jz loc_413FA0  +
mov eax [edx+28h] +
test eax eax +
jnz loc_413D61  +
mov eax [edx+24h] +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
mov [esp+4Ch+var_34] eax +
mov eax [ecx+28h] +
test eax eax +
mov [esp+4Ch+var_20] eax +
jnz loc_413D87  +
mov eax [ecx+24h] +
mov [esp+4Ch+var_20] eax +
mov esi [esp+4Ch+var_34] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
mov edi [esp+4Ch+var_30] +
mov [edi+8] eax +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
mov edx [edi+8] +
test edx edx +
mov [edi+0Ch] eax +
jz loc_413F70  +
test eax eax +
jz loc_413F70  +
mov eax [edi] +
mov [esp+4Ch+var_38] esi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_4034C0  +
test eax eax +
jz loc_413F70  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+var_20] +
mov edx [eax+0Ch] +
mov eax [eax+4] +
mov [esp+4Ch+var_38] edi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_4034C0  +
test eax eax +
jz loc_413F70  +
mov eax [esp+4Ch+var_30] +
mov eax [eax] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call loc_404140  +
test eax eax +
mov ebx eax +
js loc_413F70  +
mov [esp+4Ch+var_4C] eax +
call sub_408000  +
test eax eax +
mov edi eax +
jnz loc_413E72  +
test ebx ebx +
jnz loc_413F70  +
mov eax [esp+4Ch+var_30] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_404180  +
test eax eax +
js loc_41421C  +
jz loc_413FF8  +
mov esi [edi] +
test esi esi +
jz loc_413FFC  +
mov ebp edi +
nop   +
jmp loc_413F38  +
cmp dword ptr [eax+8] 2 +
jnz loc_413F4D  +
cmp dword ptr [eax+0Ch] 20h +
jnz loc_413F4D  +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_413F4D  +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_413F4D  +
cmp edx 0FFFFFFFFh +
jnz loc_413F4D  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax [esp+4Ch+var_30] +
mov eax [eax+8] +
add eax [esi+4] +
mov [esp+4Ch+var_4C] eax +
call edx  +
mov edx [esi+0Ch] +
mov ebx [esp+4Ch+arg_0] +
and eax [edx+28h] +
mov edx [esi] +
mov ecx [edx] +
mov edx [ebx+4] +
mov ebx [edx+30h] +
mov edx [esp+4Ch+var_30] +
mov edx [edx+8] +
add edx [esi+4] +
mov [esp+4Ch+var_48] edx +
mov edx [ecx+10h] +
mov edx [edx+1Ch] +
add edx [ecx+8] +
add edx [esi+8] +
add eax edx +
mov [esp+4Ch+var_4C] eax +
call ebx  +
add ebp 4 +
mov esi [ebp+0] +
test esi esi +
jz loc_413FFC  +
mov eax [esi+0Ch] +
mov edx [eax+2Ch] +
test edx edx +
jz loc_413F2A  +
mov ebx [eax+4] +
test ebx ebx +
jz loc_413EB5  +
mov [esp+4Ch+var_4C] offset aUnsupported_st +
call off_4733A4  +
mov [esp+4Ch+var_4C] 5 +
call sub_4040F0  +
mov [esp+4Ch+var_4C] edi +
call free  +
nop   +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_30] +
mov [esp+4Ch+var_48] eax +
mov eax [esi+28h] +
add eax edi +
mov [esp+4Ch+var_4C] eax +
call sub_45FFB0  +
test eax eax +
jnz loc_413B14  +
jmp loc_413B74  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_symbols +
mov [esp+4Ch+var_4C] eax +
call sub_402CB0  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_strings +
mov [esp+4Ch+var_4C] eax +
call sub_402CB0  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_413FE1  +
test eax eax +
jnz loc_413D57  +
mov eax [esp+4Ch+arg_20] +
mov edi [esp+4Ch+var_30] +
mov [eax] edi +
mov eax 1 +
jmp loc_413BAD  +
test edi edi +
jz loc_414004  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov edi [esp+4Ch+var_30] +
xor esi esi +
mov ebp [esp+4Ch+var_34] +
mov ecx [edi+8] +
mov eax ebp +
mov dword ptr [edi+14h] 0 +
add eax ecx +
mov ebx ecx +
cmp ecx eax +
jb loc_414036  +
jmp loc_414083  +
cmp al 24h +
jz loc_4141B1  +
lea eax [ecx+ebp] +
add ebx 0Ch +
cmp eax ebx +
jbe loc_414077  +
movzx eax byte ptr [ebx+4] +
cmp al 64h +
jnz loc_414024  +
test esi esi +
jz loc_414046  +
add dword ptr [edi+14h] 1 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov ecx [edi+8] +
test eax eax +
lea eax [ecx+ebp] +
jz loc_4141CE  +
lea edx [ebx+10h] +
mov esi ebx +
cmp eax edx +
jbe loc_41402F  +
cmp byte ptr [ebx+10h] 64h +
jnz loc_41402F  +
add ebx 0Ch +
jmp loc_41402F  +
test esi esi +
jz loc_414083  +
mov eax [esp+4Ch+var_30] +
add dword ptr [eax+14h] 1 +
mov eax [esp+4Ch+var_30] +
mov eax [eax+14h] +
test eax eax +
jz loc_413BA8  +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
imul eax eax +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
test eax eax +
mov ebx eax +
mov [edi+10h] eax +
jz loc_413F70  +
mov ebp [edi+8] +
cmp dword ptr [edi+14h] 0 +
mov esi [edi+0Ch] +
mov ecx ebp +
jle loc_414398  +
mov eax [esp+4Ch+var_34] +
add eax ebp +
cmp ebp eax +
jnb loc_414398  +
xor edi edi +
xor ecx ecx +
mov edx edi +
mov ebx ecx +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 0 +
jmp loc_41416C  +
cmp al 64h +
jz loc_41422D  +
cmp al 84h +
jnz loc_414145  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_30] +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx [esp+4Ch+var_18] +
cmp ebx eax +
jnb loc_414215  +
cmp ebx esi +
mov eax 0 +
cmovb ebx eax +
mov eax [esp+4Ch+var_30] +
add ebp 0Ch +
mov ecx [esp+4Ch+var_28] +
cmp ecx [eax+14h] +
jge loc_414406  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp ebp eax +
jnb loc_414406  +
movzx eax byte ptr [ebp+4] +
cmp al 24h +
jz loc_41430F  +
ja loc_414106  +
test al al +
jnz loc_414145  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
sub eax esi +
cmp eax [esp+4Ch+var_1C] +
jb loc_414145  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov [esp+4Ch+var_18] edx +
add esi [esp+4Ch+var_1C] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_1C] eax +
jmp loc_414145  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
jz loc_4141D5  +
mov ecx [edi+8] +
add dword ptr [edi+14h] 1 +
lea eax [ecx+ebp] +
xor esi esi +
jmp loc_41402F  +
mov ecx [edi+8] +
jmp loc_41402C  +
mov eax [edi+4] +
lea ecx [ebp+0Ch] +
mov [esp+4Ch+var_24] ecx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_24] esi +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx ebp +
mov ebp ecx +
cmp ebx eax +
jnb loc_414215  +
cmp ebx esi +
jnb loc_414145  +
xor ebx ebx +
jmp loc_414145  +
test edi edi +
nop   +
jnz loc_413F66  +
xor eax eax +
jmp loc_413F72  +
test edx edx +
nop   +
jz loc_41428D  +
imul eax [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_30] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
add eax [ecx+10h] +
lea ecx [edx+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_30] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_10] +
mov eax [esp+4Ch+var_18] +
add eax [ecx+10h] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+10h] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edx +
mov edx [esp+4Ch+var_2C] +
mov [eax+0Ch] edx +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
add eax esi +
cmp eax esi +
mov edx eax +
mov [esp+4Ch+var_2C] eax +
jz loc_4142FE  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_4142F4  +
cmp edx esi +
mov eax 0 +
cmovnb eax edx +
mov [esp+4Ch+var_2C] eax +
mov ecx [esp+4Ch+var_30] +
lea edx [ebp+10h] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp edx eax +
jnb loc_4142DD  +
cmp byte ptr [ebp+10h] 64h +
jz loc_4141DD  +
mov ebx [esp+4Ch+var_2C] +
mov edx ebp +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_414145  +
mov [esp+4Ch+var_2C] 0 +
jmp loc_4142C1  +
mov [esp+4Ch+var_2C] 0 +
xor ebx ebx +
xor edx edx +
jmp loc_414145  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_18] +
lea ecx [esi+eax] +
cmp ecx esi +
jz loc_414145  +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
cmp ecx eax +
mov eax 0 +
cmovnb ecx eax +
imul eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_10] ecx +
mov [esp+4Ch+var_18] eax +
add eax [edx+10h] +
lea edx [ebp+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_10] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_18] +
add eax [edx+10h] +
mov edx [esp+4Ch+var_2C] +
mov [eax+4] ebp +
mov [eax+8] esi +
mov [eax+0Ch] edx +
xor edx edx +
mov [eax+10h] ebx +
mov [eax+14h] ecx +
jmp loc_414145  +
mov [esp+4Ch+var_28] 0 +
mov edi [esp+4Ch+var_28] +
mov edx [esp+4Ch+var_34] +
imul eax edi +
add edx ecx +
add eax ebx +
mov dword ptr [eax] 0FFFFFFFFh +
mov [eax+4] edx +
mov [eax+8] esi +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax edi +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_40] offset sub_4133E0 +
mov [esp+4Ch+var_44] 18h +
mov [esp+4Ch+var_4C] ebx +
call qsort  +
mov eax [esp+4Ch+arg_20] +
mov [eax] edi +
jmp loc_41397E  +
test edx edx +
mov edi edx +
jz loc_414468  +
mov eax [esp+4Ch+var_30] +
lea edx [edx+8] +
mov ecx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_1C] ebx +
imul ebp [esp+4Ch+var_28] +
mov ebx [eax+10h] +
mov eax [ecx+4] +
add ebx ebp +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_1C] +
add [esp+4Ch+var_28] 1 +
mov [ebx] eax +
mov ebx [edx+10h] +
lea eax [ebx+ebp] +
mov [eax+4] edi +
mov edi [esp+4Ch+var_24] +
mov [eax+10h] ecx +
mov ecx [edx+8] +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edi +
mov edi [esp+4Ch+var_2C] +
mov [eax+0Ch] edi +
jmp loc_4143A0  +
mov eax [esp+4Ch+var_30] +
mov ecx [eax+8] +
mov ebx [eax+10h] +
jmp loc_4143A0  +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+8] +
mov edx [eax] +
mov eax [eax+4] +
xor eax [ecx+4] +
xor edx [ecx] +
or edx eax +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
jmp calloc  +
***
sub esp 18h +
xor edx edx +
test byte ptr [ebx+2Bh] 1 +
jnz loc_414503  +
mov edx [ebx+4] +
mov edx [edx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_405DC0  +
test eax eax +
jz loc_414539  +
movzx edx byte ptr [ebx+2Ch] +
movzx ecx byte ptr [eax+2Ch] +
and edx 10h +
and ecx 0FFFFFFEFh +
or ecx edx +
movzx edx byte ptr [eax+2Bh] +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFF7h +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov ebp [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+0ECh] +
mov [esp+30h+var_30] esi +
call eax  +
test eax eax +
jz loc_414571  +
mov ebx [eax+4] +
mov [esp+30h+var_30] eax +
call free  +
cmp ebx 3 +
ja loc_414580  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_406370  +
test eax eax +
mov edi eax +
jz loc_414571  +
mov [esp+30h+var_28] esi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_4039E0  +
cmp eax ebx +
jz loc_4145D0  +
call sub_403EA0  +
cmp eax 1 +
nop   +
jz loc_4145BE  +
mov [esp+30h+var_30] 0Ah +
call sub_4040F0  +
mov [esp+30h+var_2C] edi +
mov [esp+30h+var_30] esi +
call sub_4064E0  +
jmp loc_414571  +
mov [esp+30h+var_20] eax +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
mov ecx [esp+30h+var_20] +
sub ecx 4 +
shr eax 3 +
lea edx ds:0[eax*8] +
cmp edx ecx +
mov [ebp+14h] eax +
ja loc_4146E3  +
shl eax 4 +
add edi 4 +
mov dword ptr [ebp+8] 0 +
lea edx [edi+edx+4] +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_18] edx +
call sub_406290  +
test eax eax +
mov ebx eax +
mov [ebp+10h] eax +
jz loc_414571  +
mov eax [ebp+14h] +
xor edx edx +
test eax eax +
jz loc_414680  +
mov [esp+30h+var_20] ebp +
mov ebp esi +
mov esi edx +
lea esi [esi+0] +
mov eax [ebp+4] +
add esi 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
lea ecx [edi+4] +
add edi 8 +
add eax [esp+30h+var_18] +
mov [ebx-10h] eax +
mov eax [ebp+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+30h+var_20] +
cmp [eax+14h] esi +
ja loc_414640  +
mov esi ebp +
mov ebp eax +
mov [esp+30h+var_30] esi +
call sub_403B10  +
mov [esp+30h+var_1C] edx +
mov edi [esp+30h+var_1C] +
mov [esp+30h+var_20] eax +
sar edi 1Fh +
mov eax edi +
sar eax 1Fh +
mov [esp+30h+var_14] eax +
mov eax [esp+30h+var_20] +
mov [esp+30h+var_18] edi +
mov edx [esp+30h+var_14] +
xor eax edi +
mov ecx eax +
mov ebx edx +
sub ecx [esp+30h+var_18] +
and ecx 1 +
mov eax ecx +
xor eax edi +
mov ecx eax +
mov eax [esp+30h+var_18] +
sub ecx eax +
mov eax 1 +
sbb ebx edx +
add ecx [esp+30h+var_20] +
adc ebx [esp+30h+var_1C] +
mov [ebp+0] ecx +
mov [ebp+4] ebx +
or byte ptr [esi+2Bh] 20h +
jmp loc_414573  +
mov [esp+30h+var_30] 3 +
call sub_4040F0  +
jmp loc_4145BE  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
mov [esp+48h+var_20] edx +
call sub_460140  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_1C] eax +
call sub_45F030  +
mov [esp+48h+var_48] edi +
test eax eax +
cmovnz ebp eax +
mov [esp+48h+var_28] eax +
call sub_45F030  +
test eax eax +
mov [esp+48h+var_24] eax +
cmovnz edi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+0] +
mov ebx ebp +
test al al +
jnz loc_41475E  +
jmp loc_414762  +
cmp al 2Fh +
jz loc_414762  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_414762  +
cmp al 5Ch +
jnz loc_414750  +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_4148AD  +
cmp cl 5Ch +
jz loc_414929  +
cmp cl 2Fh +
mov esi edi +
jnz loc_414797  +
lea esi [esi+0] +
jmp loc_414929  +
cmp dl 5Ch +
jz loc_414930  +
cmp dl 2Fh +
jz loc_414930  +
add esi 1 +
movzx edx byte ptr [esi] +
test dl dl +
jnz loc_414785  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_2C] ecx +
call strlen  +
mov ecx [esp+48h+var_2C] +
lea esi [eax+1] +
mov eax [esp+48h+var_20] +
xor edx edx +
xor ebx ebx +
add eax 1 +
nop   +
cmp cl 5Ch +
jz loc_4147CA  +
cmp cl 2Fh +
jnz loc_4147DB  +
cmp edi eax +
jbe loc_4147D8  +
cmp byte ptr [edi-1] 2Eh +
jz loc_41489B  +
add ebx 1 +
add edi 1 +
movzx ecx byte ptr [edi] +
test cl cl +
jnz loc_4147C0  +
lea eax [ebx+ebx*2] +
add esi eax +
test edx edx +
mov [esp+48h+var_2C] edx +
jz loc_414984  +
mov edi [esp+48h+var_1C] +
mov [esp+48h+var_48] edi +
call strlen  +
mov edx [esp+48h+var_2C] +
mov ecx edi +
lea edi [edi+eax-1] +
cmp ecx edi +
setb cl  +
test edx edx +
jz loc_41482F  +
test cl cl +
jz loc_41482F  +
movzx eax byte ptr [edi] +
jmp loc_414824  +
cmp al 2Fh +
jz loc_414828  +
cmp al 5Ch +
jnz loc_414820  +
sub edx 1 +
test edx edx +
jnz loc_414815  +
test edx edx +
jnz loc_41496B  +
mov [esp+48h+var_48] edi +
call strlen  +
lea esi [esi+eax+1] +
cmp esi ds:dword_49A3C8 +
jbe loc_4148C4  +
mov eax ds:dword_49A3C4 +
test eax eax +
jz loc_41485C  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] esi +
mov ds:dword_49A3C8 0 +
call sub_408000  +
test eax eax +
mov ds:dword_49A3C4 eax +
jz loc_414967  +
test ebx ebx +
mov ds:dword_49A3C8 esi +
mov esi eax +
jnz loc_4148CE  +
test edi edi +
mov eax esi +
jnz loc_4148E9  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] eax +
call strcpy  +
jmp loc_414907  +
cmp byte ptr [edi-2] 2Eh +
jnz loc_4147D8  +
add edx 1 +
jmp loc_4147DB  +
mov [esp+48h+var_48] ebp +
call strlen  +
lea esi [eax+1] +
xor ebx ebx +
xor edi edi +
cmp esi ds:dword_49A3C8 +
ja loc_41484B  +
test ebx ebx +
mov esi ds:dword_49A3C4 +
jz loc_414887  +
mov edx ebx +
mov eax esi +
mov dword ptr [eax] 2F2E2Eh +
add eax 3 +
sub edx 1 +
jnz loc_4148D2  +
lea eax [ebx+ebx*2] +
add eax esi +
test edi edi +
jz loc_41488D  +
mov [esp+48h+var_3C] ebp +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] offset aSS_5 +
mov [esp+48h+var_48] eax +
call sprintf  +
mov esi ds:dword_49A3C4 +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [esp+48h+var_24] +
mov [esp+48h+var_48] eax +
call free  +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edi +
nop   +
lea esi [esi+0] +
test al al +
jz loc_4147A1  +
mov eax ebx +
mov edx esi +
sub eax ebp +
sub edx edi +
cmp eax edx +
jnz loc_4147A1  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call sub_460000  +
test eax eax +
jnz loc_41498B  +
lea ebp [ebx+1] +
lea edi [esi+1] +
jmp loc_414740  +
xor esi esi +
jmp loc_414907  +
mov [esp+48h+var_44] 5F3h +
mov [esp+48h+var_48] offset a____Binutil_21 +
call sub_404040  +
jmp loc_414837  +
xor edi edi +
jmp loc_4148BC  +
mov [esp+48h+var_48] ebp +
nop   +
call strlen  +
movzx ecx byte ptr [edi] +
test cl cl +
lea esi [eax+1] +
jz loc_4148B8  +
jmp loc_4147B4  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov eax [eax+8] +
mov [esp+1Ch+var_1C] eax +
call sub_405FF0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_C] +
mov [esp+10h+var_C] 14h +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] offset unk_49A3E1 +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_4] eax +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
call sub_4144B0  +
mov [esp+10h+var_10] offset unk_49A3E1 +
call strlen  +
cmp eax esi +
mov ebx eax +
jb loc_414A30  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] edi +
mov [esp+10h+arg_4] offset unk_49A3E1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memcpy  +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_49A3E1 +
call memcpy  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] 20h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memset  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] offset a10lu +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_C] 15h +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_10] offset unk_49A3CC +
mov [esp+10h+var_4] eax +
call sub_4144B0  +
mov [esp+10h+var_10] offset unk_49A3CC +
call strlen  +
cmp eax esi +
mov ebx eax +
ja loc_414B10  +
jb loc_414AD6  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] offset unk_49A3CC +
call memcpy  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_49A3CC +
call memcpy  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] 20h +
call memset  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 13h +
call sub_4040F0  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_406370  +
test eax eax +
mov [ebx+0A0h] eax +
setnz al  +
add esp 18h +
movzx eax al +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
test byte ptr [eax+2Bh] 20h +
jz loc_414B92  +
mov edx [esp+24h] +
lea ecx [edx+1] +
xor edx edx +
cmp dword ptr [esp+24h] 0FFFFFFFFh +
cmovnz edx ecx +
mov ecx [eax+0A0h] +
mov eax 0FFFFFFFFh +
cmp edx [ecx+14h] +
jb loc_414BA7  +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax edx +
shl eax 4 +
add eax [ecx+10h] +
mov ecx [esp+28h] +
mov [ecx] eax +
mov eax edx +
add esp 1Ch +
retn   +
***
jmp sub_405B70  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax+94h] edx +
mov eax 1 +
retn   +
***
mov ebx [esp+28h+arg_0] +
mov edx [esp+28h+arg_8] +
mov eax [ebx+0A0h] +
mov ecx [eax+8] +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_14] edx +
test ecx ecx +
mov [esp+28h+var_18] eax +
jz loc_414C44  +
lea eax [esp+28h+var_18] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] ecx +
call sub_4609F0  +
test eax eax +
jz loc_414C44  +
mov eax [eax+8] +
movzx ecx byte ptr [ebx+2Bh] +
movzx edx byte ptr [eax+2Bh] +
and ecx 8 +
and edx 0FFFFFFF7h +
or edx ecx +
mov [eax+2Bh] dl +
add esp 28h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_414C3F  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov eax [ebx+0A0h] +
mov ebp [eax+8] +
test ebp ebp +
jz loc_414CC4  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 10h +
call sub_406370  +
mov [eax] esi +
mov ebx eax +
mov [eax+4] edi +
mov eax [esp+2Ch+arg_C] +
mov [ebx+8] eax +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_460BF0  +
mov [eax] ebx +
mov eax [esp+2Ch+arg_C] +
mov eax [eax+88h] +
mov [eax+18h] ebp +
mov [eax+20h] esi +
mov [eax+24h] edi +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_18] offset free +
mov [esp+2Ch+var_1C] offset loc_4144E0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] offset loc_414490 +
mov [esp+2Ch+var_28] offset loc_414480 +
mov [esp+2Ch+var_2C] 10h +
call sub_460630  +
test eax eax +
mov ebp eax +
jz loc_414D10  +
mov eax [ebx+0A0h] +
mov [eax+8] ebp +
jmp loc_414C70  +
xor eax eax +
jmp loc_414CBC  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+7Ch+arg_0] +
lea ebp [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] 3Ch +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] ebx +
call sub_4039E0  +
cmp eax 3Ch +
jz loc_414D86  +
call sub_403EA0  +
cmp eax 1 +
jz loc_414D7C  +
mov [esp+7Ch+var_7C] 9 +
call sub_4040F0  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ah +
call sub_4040F0  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_E] +
mov edi offset asc_478DEA +
mov ecx 2 +
mov esi eax +
cmps   +
jz loc_414DC4  +
mov esi [esp+7Ch+arg_4] +
test esi esi +
jz loc_414D70  +
mov edi [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_78] edi +
call strncmp  +
test eax eax +
jnz loc_414D70  +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+7Ch+var_50] +
movzx edi byte ptr [esp+7Ch+var_E] +
mov [esp+7Ch+var_74] eax +
lea eax [esp+7Ch+var_18] +
mov [esp+7Ch+var_78] offset aLu +
mov [esp+7Ch+var_7C] eax +
mov byte ptr [esp+7Ch+var_E] 0 +
call sscanf  +
mov ecx edi +
mov byte ptr [esp+7Ch+var_E] cl +
cmp eax 1 +
jnz loc_414D70  +
movzx edx byte ptr [esp+7Ch+var_48] +
cmp dl 2Fh +
jz loc_414FE0  +
cmp dl 20h +
jz loc_414FB2  +
cmp dl 23h +
jz loc_414F20  +
mov eax [ebx+4] +
movzx edi byte ptr [eax+1Ah] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jz loc_4150E5  +
sub eax ebp +
mov edi eax +
lea eax [edi+65h] +
xor edx edx +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_60] edx +
call sub_408190  +
test eax eax +
mov esi eax +
jz loc_414D7C  +
mov edx [esp+7Ch+var_60] +
xor ecx ecx +
lea eax [esi+28h] +
test edx edx +
mov [esi] eax +
mov eax [esp+7Ch+var_48] +
mov [esi+28h] eax +
mov eax [esp+7Ch+var_44] +
mov [esi+2Ch] eax +
mov eax [esp+7Ch+var_40] +
mov [esi+30h] eax +
mov eax [esp+7Ch+var_3C] +
mov [esi+34h] eax +
mov eax [esp+7Ch+var_38] +
mov [esi+38h] eax +
mov eax [esp+7Ch+var_34] +
mov [esi+3Ch] eax +
mov eax [esp+7Ch+var_30] +
mov [esi+40h] eax +
mov eax [esp+7Ch+var_2C] +
mov [esi+44h] eax +
mov eax [esp+7Ch+var_28] +
mov [esi+48h] eax +
mov eax [esp+7Ch+var_24] +
mov [esi+4Ch] eax +
mov eax [esp+7Ch+var_20] +
mov [esi+50h] eax +
mov eax [esp+7Ch+var_1C] +
mov [esi+54h] eax +
mov eax [esp+7Ch+var_18] +
mov [esi+58h] eax +
mov eax [esp+7Ch+var_14] +
mov [esi+5Ch] eax +
mov eax [esp+6Ch] +
mov [esi+60h] eax +
mov eax [esp+7Ch+var_50] +
mov [esi+4] eax +
mov [esi+8] ecx +
mov ecx [esp+7Ch+var_6C] +
mov ebx [esp+7Ch+var_68] +
mov [esi+10h] ecx +
mov [esi+14h] ebx +
jz loc_415090  +
mov [esi+0Ch] edx +
add esp 7Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esp+7Ch+var_48+1] 31h +
jnz loc_414E27  +
cmp byte ptr [esp+7Ch+var_48+2] 2Fh +
jnz loc_414E27  +
movzx eax byte ptr [esp+7Ch+var_48+3] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_414E27  +
lea eax [esp+7Ch+var_48+3] +
mov [esp+7Ch+var_7C] eax +
call atoi  +
sub [esp+7Ch+var_50] eax +
mov ecx eax +
lea eax [eax+65h] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_6C] ecx +
call sub_408190  +
test eax eax +
mov esi eax +
jz loc_414D7C  +
mov ecx [esp+7Ch+var_6C] +
lea edx [eax+64h] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_60] ecx +
call sub_4039E0  +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_6C] +
cmp eax ecx +
mov edi eax +
jz loc_415122  +
mov [esp+7Ch+var_7C] esi +
call free  +
jmp loc_414D4B  +
mov eax [ebx+4] +
mov [esp+7Ch+var_6C] edx +
movzx edi byte ptr [eax+1Ah] +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] edi +
call memchr  +
mov edx [esp+7Ch+var_6C] +
test eax eax +
jnz loc_414E2E  +
lea esi [esi+0] +
mov eax [ebx+0A0h] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_414E1E  +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_48+1] +
mov [esp+7Ch+var_74] 0Ah +
mov [esp+7Ch+var_7C] eax +
call strtol  +
mov edi eax +
call esi  +
mov edx [eax] +
test edx edx +
jnz loc_414D70  +
mov eax [ebx+0A0h] +
cmp edi [eax+1Ch] +
jnb loc_414D70  +
test byte ptr [ebx+2Bh] 40h +
jz loc_4150A5  +
mov edx [esp+7Ch+var_4C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
test edx edx +
jz loc_4150B5  +
cmp byte ptr [edx] 3Ah +
jnz loc_4150B5  +
add edx 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] 0Ah +
mov [esp+7Ch+var_78] 0 +
call strtol  +
mov [esp+7Ch+var_6C] eax +
sar eax 1Fh +
mov [esp+7Ch+var_68] eax +
call esi  +
mov eax [eax] +
test eax eax +
jnz loc_414D70  +
mov eax [ebx+0A0h] +
jmp loc_4150B5  +
lea eax [esi+64h] +
test edi edi +
mov [esi+0Ch] eax +
jnz loc_4150D0  +
mov byte ptr [eax+edi] 0 +
mov eax esi +
jmp loc_414D63  +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
mov edx edi +
add edx [eax+18h] +
jz loc_414D7C  +
mov eax 64h +
xor edi edi +
jmp loc_414E63  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esi+0Ch] +
jmp loc_41509A  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jnz loc_414E4A  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 20h +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jz loc_414E4E  +
jmp loc_414E4A  +
mov byte ptr [esi+eax+64h] 0 +
mov ecx eax +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
jmp loc_414E7F  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_414D20  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi] +
mov [esp+1Ch+var_1C] ebx +
call sub_45F1A0  +
mov esi [esp+1Ch+arg_4] +
cmp eax ebx +
jz loc_4151BF  +
sub eax ebx +
mov [esp+1Ch+var_1C] esi +
mov ebp eax +
call strlen  +
mov [esp+1Ch+var_1C] edi +
lea eax [ebp+eax+1] +
mov [esp+1Ch+var_18] eax +
call sub_406290  +
test eax eax +
mov edi eax +
jz loc_4151D0  +
mov [esp+1Ch+var_14] ebp +
add ebp edi +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call strncpy  +
mov [esp+1Ch+var_18] esi +
mov esi edi +
mov [esp+1Ch+var_1C] ebp +
call strcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_4151BF  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
call sub_414BF0  +
test eax eax +
mov ebx eax +
jz loc_415213  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
call sub_403BF0  +
test eax eax +
js loc_415209  +
mov eax [ebp+4] +
mov eax [eax+0ECh] +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_415209  +
test byte ptr [ebp+2Bh] 40h +
mov ebx [eax+0Ch] +
jz loc_415405  +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_415288  +
cmp al 2Fh +
jz loc_415288  +
test al al +
nop   +
jz loc_415268  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_415288  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_415160  +
test eax eax +
mov ebx eax +
jnz loc_415288  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_415209  +
mov eax [esp+2Ch+var_14] +
cmp dword ptr [eax+14h] 0 +
jl loc_41533B  +
jle loc_415331  +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_45FFB0  +
test eax eax +
jz loc_415473  +
mov esi [ebp+98h] +
test esi esi +
jnz loc_4152D0  +
jmp loc_415430  +
mov esi [esi+90h] +
test esi esi +
jz loc_415430  +
mov eax [esi] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_45FFB0  +
test eax eax +
jnz loc_4152C2  +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] esi +
call sub_407110  +
test eax eax +
jz loc_415417  +
mov eax [esp+2Ch+var_14] +
mov ebx [eax+14h] +
mov ecx [eax+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ecx +
call sub_4151E0  +
test eax eax +
mov ebx eax +
jz loc_41527A  +
mov [esp+2Ch+var_2C] ebp +
call sub_403B10  +
mov [ebx+40h] eax +
mov [ebx+44h] edx +
jmp loc_415209  +
cmp dword ptr [eax+10h] 0 +
ja loc_41529C  +
mov edx ebp +
mov eax ebx +
call sub_4144F0  +
test eax eax +
mov ecx eax +
jz loc_415473  +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_403B10  +
mov ecx [esp+2Ch+var_10] +
mov [ecx+40h] eax +
mov [ecx+44h] edx +
test byte ptr [ebp+2Bh] 40h +
jz loc_415456  +
mov dword ptr [ecx+38h] 0 +
mov dword ptr [ecx+3Ch] 0 +
mov eax [esp+2Ch+var_14] +
mov ebx [ecx+28h] +
mov [ecx+88h] eax +
mov eax [ebp+28h] +
mov edx ebx +
and ebx 0FF80001Fh +
shr edx 5 +
and edx 3FFFFh +
shr eax 5 +
and eax 2C000h +
or eax edx +
shl eax 5 +
or ebx eax +
movzx eax byte ptr [ecx+2Ch] +
mov [ecx+28h] ebx +
movzx edx byte ptr [ebp+2Ch] +
and eax 0FFFFFFFDh +
and edx 2 +
or eax edx +
mov [ecx+2Ch] al +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_414C50  +
mov ecx [esp+2Ch+var_10] +
mov ebx ecx +
test eax eax +
jnz loc_415209  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov dword ptr [ebx+88h] 0 +
xor ebx ebx +
jmp loc_415209  +
mov [esp+2Ch+var_2C] ebp +
call sub_405B70  +
test eax eax +
mov ecx eax +
jnz loc_41534E  +
mov eax [esp+2Ch+var_14] +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_415209  +
mov edx ebp +
mov eax ebx +
call sub_4144F0  +
test eax eax +
jz loc_415417  +
mov edx [ebp+98h] +
mov esi eax +
mov [eax+90h] edx +
mov [ebp+98h] eax +
jmp loc_4152E2  +
mov [ecx+38h] eax +
mov [ecx+3Ch] edx +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_45F0E0  +
mov ecx [esp+2Ch+var_10] +
mov [ecx] eax +
jmp loc_41537C  +
mov [esp+2Ch+var_2C] 0Ah +
call sub_4040F0  +
jmp loc_415417  +
***
jmp loc_415490  +
sub esp 1Ch +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [ecx+0A0h] +
shl eax 4 +
add eax [edx+10h] +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp] ecx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4151E0  +
add esp 1Ch +
retn   +
***
jmp sub_4154D0  +
***
mov eax [esp+18h+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 2 +
jnz loc_415500  +
and edx 18h +
cmp dl 10h +
jz loc_415500  +
mov edx [eax+4] +
mov edx [edx+0F4h] +
add esp 18h +
pop ebx  +
jmp edx  +
mov [esp+18h+var_18] 5 +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+34h] +
test ecx ecx +
jz loc_415593  +
mov ebx [esp+30h] +
mov eax [ecx+40h] +
mov edx [ecx+44h] +
test byte ptr [ebx+2Bh] 40h +
jnz loc_415577  +
mov ecx [ecx+88h] +
xor ebx ebx +
mov ecx [ecx+4] +
add ecx eax +
mov ebp ecx +
adc ebx edx +
and ebp 1 +
xor edi edi +
add ecx ebp +
adc ebx edi +
cmp edx ebx +
jb loc_415573  +
ja loc_415563  +
cmp eax ecx +
jb loc_415573  +
mov dword ptr [esp] 0Ah +
call sub_4040F0  +
xor eax eax +
jmp loc_41558B  +
mov eax ecx +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_4151E0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov eax [eax+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
jmp loc_415577  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
lea ebp [esp+17h] +
mov dword ptr [esp+4] 8 +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_4039E0  +
cmp eax 8 +
jz loc_4155F8  +
call sub_403EA0  +
cmp eax 1 +
jz loc_4155EE  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi offset aThin +
mov ecx 8 +
movzx eax byte ptr [ebx+2Bh] +
mov esi ebp +
cmps   +
mov edi offset aArch +
mov ecx 8 +
mov esi ebp +
setz dl  +
and eax 0FFFFFFBFh +
shl edx 6 +
or eax edx +
mov [ebx+2Bh] al +
cmps   +
jz loc_415638  +
mov edi offset aBout +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_4156A3  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_406370  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_415734  +
mov dword ptr [eax] 8 +
mov dword ptr [eax+4] 0 +
mov eax [ebx+4] +
mov eax [eax+0D8h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_4156B0  +
mov eax [ebx+4] +
mov eax [eax+0DCh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_4156B0  +
movzx eax byte ptr [ebx+2Bh] +
and eax 21h +
cmp al 21h +
jz loc_4156E5  +
mov eax [ebx+4] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 40h +
jnz loc_415638  +
jmp loc_4155EE  +
***
call sub_403EA0  +
cmp eax 1 +
jz loc_4156C6  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
mov eax [ebx+0A0h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4064E0  +
xor eax eax +
mov [ebx+0A0h] esi +
jmp loc_4155F0  +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_4154D0  +
test eax eax +
mov esi eax +
jz loc_415698  +
and byte ptr [eax+2Bh] 0FEh +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call sub_407110  +
test eax eax +
mov eax [ebx+4] +
jz loc_4155F0  +
cmp [esi+4] eax +
jz loc_4155F0  +
mov dword ptr [esp] 4 +
call sub_4040F0  +
jmp loc_415698  +
***
mov [ebx+0A0h] esi +
jmp loc_4155F0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0C0h] +
lea ebp [esp+3Eh] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_4039E0  +
mov edx 1 +
test eax eax +
jz loc_415779  +
cmp eax 10h +
jz loc_415786  +
xor edx edx +
add esp 0ACh +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_415777  +
mov edi offset a___symdef +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4158C3  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4158C3  +
mov edi offset asc_478E2E +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4158D1  +
mov edi offset aSym64 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415936  +
mov edi offset a120 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415818  +
and byte ptr [ebx+2Bh] 0DFh +
mov edx 1 +
jmp loc_415779  +
***
lea eax [esp+64h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_4039E0  +
cmp eax 3Ch +
jnz loc_415777  +
lea esi [esp+4Fh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 14h +
mov [esp] esi +
call sub_4039E0  +
cmp eax 14h +
jnz loc_415777  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFB0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_415777  +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset a___symdefSorte +
mov [esp] esi +
mov byte ptr [esp+63h] 0 +
call strncmp  +
test eax eax +
jz loc_4158C3  +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] offset a___symdef_1 +
mov [esp] esi +
call strncmp  +
test eax eax +
jnz loc_41580A  +
mov eax ebx +
call sub_414540  +
mov edx eax +
jmp loc_415779  +
***
mov eax [ebx+4] +
mov ebp [ebx+0A0h] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_415777  +
mov edi [eax+4] +
lea esi [esp+64h] +
mov [esp] eax +
call free  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] esi +
call sub_4039E0  +
cmp eax 4 +
jz loc_415947  +
call sub_403EA0  +
cmp eax 1 +
jz loc_415777  +
mov dword ptr [esp] 0Ah +
call sub_4040F0  +
xor edx edx +
jmp loc_415779  +
***
mov dword ptr [esp] 3 +
call sub_4040F0  +
jmp loc_415777  +
***
mov [esp] esi +
sub edi 4 +
call sub_408330  +
mov ecx edi +
mov dword ptr [esp+28h] offset sub_408330 +
mov [esp+18h] eax +
shl eax 2 +
sub ecx eax +
cmp ecx 0FFFFFh +
mov [esp+20h] ecx +
ja loc_415A29  +
mov eax [esp+18h] +
cmp eax 0FFFFFFFh +
ja loc_415777  +
mov edi [esp+20h] +
shl eax 4 +
mov ecx eax +
mov [esp+2Ch] eax +
lea eax [edi+eax+1] +
cmp ecx eax +
jnb loc_415777  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_406370  +
test eax eax +
mov esi eax +
mov [ebp+10h] eax +
jz loc_415777  +
mov eax [esp+18h] +
mov [esp] ebx +
lea edi ds:0[eax*4] +
mov [esp+4] edi +
call sub_406290  +
test eax eax +
mov [esp+24h] eax +
jz loc_415A13  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_4039E0  +
cmp edi eax +
jz loc_415A71  +
call sub_403EA0  +
sub eax 1 +
jz loc_415A03  +
mov dword ptr [esp] 0Ah +
call sub_4040F0  +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4064E0  +
mov eax [ebp+10h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4064E0  +
xor edx edx +
jmp loc_415779  +
***
mov [esp] ebx +
call sub_407CF0  +
cmp eax 4 +
jnz loc_415975  +
mov eax [ebx+4] +
mov dword ptr [esp+28h] offset sub_408330 +
cmp dword ptr [eax+4] 2 +
jnz loc_415975  +
mov [esp] esi +
call sub_408360  +
mov dword ptr [esp+28h] offset sub_408360 +
mov [esp+18h] eax +
shl eax 2 +
sub edi eax +
mov [esp+20h] edi +
jmp loc_415975  +
***
mov edi [esp+2Ch] +
mov eax [esp+20h] +
mov [esp+8] ebx +
add edi esi +
mov [esp+4] eax +
mov [esp] edi +
call sub_4039E0  +
cmp [esp+20h] eax +
jnz loc_4159ED  +
mov [esp+0C0h] ebx +
xor edx edx +
mov ebx [esp+20h] +
jmp loc_415AE9  +
cmp [esp+18h] edx +
jbe loc_415AED  +
mov eax [esp+24h] +
mov [esp+20h] edx +
lea eax [eax+edx*4] +
mov [esp] eax +
mov eax [esp+28h] +
call eax  +
mov [esi] edi +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov [esp+4] ebx +
mov [esp] edi +
call sub_470CB0  +
mov edx [esp+20h] +
cmp eax ebx +
adc eax 0 +
add esi 10h +
add edi eax +
sub ebx eax +
add edx 1 +
test ebx ebx +
jnz loc_415AA4  +
mov ebx [esp+0C0h] +
mov eax [esp+18h] +
mov byte ptr [edi] 0 +
mov [ebp+14h] eax +
mov [esp] ebx +
call sub_403B10  +
mov ecx eax +
and ecx 1 +
mov esi ecx +
mov ecx edx +
and ecx 80000000h +
test ecx ecx +
mov edi ecx +
jns loc_415B3D  +
add esi 0FFFFFFFFh +
mov ecx esi +
or ecx 0FFFFFFFEh +
mov [esp+18h] ecx +
mov esi [esp+18h] +
mov dword ptr [esp+1Ch] 0FFFFFFFFh +
mov edi [esp+1Ch] +
add esi 1 +
adc edi 0 +
add eax esi +
adc edx edi +
mov [ebp+0] eax +
mov [ebp+4] edx +
or byte ptr [ebx+2Bh] 20h +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4064E0  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_403BF0  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41580E  +
mov edx [eax] +
cmp byte ptr [edx] 2Fh +
jz loc_415BA8  +
mov [esp] eax +
call free  +
mov edx 1 +
jmp loc_415779  +
***
cmp byte ptr [edx+1] 20h +
jnz loc_415B96  +
mov ecx [eax+4] +
xor ebx ebx +
add ecx 3Dh +
and ecx 0FFFFFFFEh +
add [ebp+0] ecx +
adc [ebp+4] ebx +
jmp loc_415B96  +
***
jmp loc_415BD0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 4Ch +
mov eax [esp+60h] +
lea ebp [esp+2Fh] +
mov eax [eax+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+18h] eax +
mov eax [esp+60h] +
mov [esp+8] eax +
call sub_4039E0  +
test eax eax +
jz loc_415C11  +
cmp eax 10h +
jz loc_415C20  +
xor ebx ebx +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+60h] +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] eax +
call sub_403BF0  +
test eax eax +
jnz loc_415C0F  +
mov edi offset a___symdef +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415C82  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_415C82  +
mov edi offset asc_478E2E +
mov ecx 10h +
mov eax [esp+60h] +
mov esi ebp +
cmps   +
jz loc_415C90  +
and byte ptr [eax+2Bh] 0DFh +
jmp loc_415C11  +
***
mov eax [esp+60h] +
call sub_414540  +
mov ebx eax +
jmp loc_415C11  +
***
mov eax [eax+4] +
mov edx [esp+60h] +
mov eax [eax+0ECh] +
mov [esp] edx +
call eax  +
test eax eax +
jz loc_415C0F  +
mov ebx [eax+4] +
mov [esp] eax +
cmp ebx 5 +
ja loc_415CCB  +
call free  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
jmp loc_415C0F  +
***
call free  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_406370  +
test eax eax +
mov ebp eax +
jz loc_415C0F  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+8] eax +
call sub_4039E0  +
cmp ebx eax +
jz loc_415D23  +
call sub_403EA0  +
cmp eax 1 +
jz loc_415C0F  +
mov dword ptr [esp] 0Ah +
xor ebx ebx +
call sub_4040F0  +
jmp loc_415C11  +
***
mov eax [esp+60h] +
sub ebx 6 +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp] ebp +
call eax  +
mov edi [esp+18h] +
lea edx [ebp+2] +
mov dword ptr [edi+8] 0 +
mov [edi+14h] eax +
mov eax [esp+60h] +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
cmp ebx eax +
mov esi eax +
jb loc_415CBA  +
mov eax [edi+14h] +
sub ebx esi +
mov [esp+1Ch] eax +
shl eax 3 +
cmp ebx eax +
jb loc_415CBA  +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_406290  +
mov ebx eax +
mov eax [esp+18h] +
test ebx ebx +
mov [eax+10h] ebx +
jz loc_415C0F  +
cmp dword ptr [eax+14h] 0 +
jz loc_415DE7  +
add ebp 6 +
xor edi edi +
add esi ebp +
mov [esp+1Ch] ebp +
mov ebp edi +
mov edi [esp+60h] +
mov eax [edi+4] +
add ebp 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
lea ecx [esi+4] +
add esi 8 +
add eax [esp+1Ch] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+18h] +
cmp [eax+14h] ebp +
ja loc_415DAB  +
mov eax [esp+60h] +
mov [esp] eax +
call sub_403B10  +
mov edi edx +
mov esi eax +
and edi 80000000h +
and esi 1 +
test edi edi +
mov ecx esi +
mov ebx edi +
jns loc_415E19  +
add ecx 0FFFFFFFFh +
or edi 0FFFFFFFFh +
or ecx 0FFFFFFFEh +
mov ebx edi +
add ecx 1 +
adc ebx 0 +
add eax ecx +
mov ecx [esp+18h] +
adc edx ebx +
mov ebx 1 +
mov [ecx] eax +
mov eax [esp+60h] +
mov [ecx+4] edx +
or byte ptr [eax+2Bh] 20h +
jmp loc_415C11  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov eax [ebx+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_403BF0  +
test eax eax +
jz loc_415E80  +
xor ebp ebp +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+2Fh] +
mov ebp 1 +
mov [esp+8] ebx +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_4039E0  +
cmp eax 10h +
jnz loc_415E74  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_415E72  +
mov edi offset aArfilenames +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jz loc_415EEE  +
mov edi offset asc_478E8D +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jnz loc_415FA3  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
mov esi eax +
jz loc_415E72  +
mov edi [eax+4] +
cmp edi 0FFFFFFFFh +
jz loc_415F82  +
mov ebp [ebx+0A0h] +
lea eax [edi+1] +
mov [ebp+1Ch] edi +
mov [esp+4] eax +
mov [esp] ebx +
call sub_406370  +
mov [ebp+18h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
test eax eax +
jz loc_415F82  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_4039E0  +
cmp eax edi +
jz loc_415FBC  +
call sub_403EA0  +
cmp eax 1 +
jz loc_415F60  +
mov dword ptr [esp] 0Ah +
call sub_4040F0  +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4064E0  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov [esp] esi +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_415E72  +
***
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_415E74  +
***
mov eax [ebx+0A0h] +
mov ecx [esi+4] +
mov edi [eax+18h] +
add ecx edi +
mov eax edi +
cmp edi ecx +
jb loc_415FDE  +
jmp loc_416007  +
cmp dl 5Ch +
jz loc_416002  +
add eax 1 +
cmp eax ecx +
jz loc_416007  +
movzx edx byte ptr [eax] +
cmp dl 0Ah +
jnz loc_415FD2  +
cmp edi eax +
jnb loc_416071  +
xor edx edx +
cmp byte ptr [eax-1] 2Fh +
setz dl  +
neg edx  +
mov byte ptr [eax+edx] 0 +
movzx edx byte ptr [eax] +
jmp loc_415FD2  +
***
mov byte ptr [eax] 2Fh +
jmp loc_415FD7  +
***
mov byte ptr [ecx] 0 +
mov edi [ebx+0A0h] +
mov [esp] ebx +
call sub_403B10  +
mov [edi] eax +
mov [edi+4] edx +
mov ebx [ebx+0A0h] +
mov ecx [ebx+4] +
mov edi [ebx] +
sar ecx 1Fh +
xor edi ecx +
mov eax ecx +
cdq   +
mov eax edi +
mov [esp+18h] ecx +
sub eax [esp+18h] +
mov [esp+1Ch] edx +
mov ebp [esp+1Ch] +
and eax 1 +
mov edi eax +
xor edi ecx +
mov edx ebp +
mov eax edi +
mov edi [esp+18h] +
sub eax edi +
sbb edx ebp +
mov ebp 1 +
add eax [ebx] +
adc edx [ebx+4] +
mov [ebx] eax +
mov [ebx+4] edx +
mov [esp] esi +
call free  +
jmp loc_415E74  +
***
xor edx edx +
jmp loc_415FF9  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
xor esi esi +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov eax [eax+4] +
movzx eax byte ptr [eax+1Ah] +
mov [esp+20h] eax +
mov eax [esp+5Ch] +
mov dword ptr [eax] 0 +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jnz loc_416159  +
jmp loc_4161BE  +
mov eax [ebx+8Ch] +
mov ebp [ebx] +
test eax eax +
jz loc_4160D4  +
test byte ptr [eax+2Bh] 40h +
jnz loc_4160D4  +
mov ebp [eax] +
test esi esi +
jz loc_4160E8  +
mov [esp+4] ebp +
mov [esp] esi +
call sub_45FFB0  +
test eax eax +
jz loc_41614F  +
movzx eax byte ptr [ebp+0] +
cmp al 5Ch +
jz loc_4161D0  +
cmp al 2Fh +
jz loc_4161D0  +
test al al +
jz loc_416108  +
cmp byte ptr [ebp+1] 3Ah +
mov eax ebp +
jz loc_416134  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_4161D0  +
cmp al 2Fh +
jz loc_4161D0  +
test al al +
jz loc_41612D  +
cmp byte ptr [edx+1] 3Ah +
mov eax ebp +
jz loc_416134  +
mov eax ebp +
call sub_414700  +
mov [esp] eax +
call strlen  +
mov esi [esp+54h] +
add edi eax +
test esi esi +
jnz loc_4161D7  +
add edi 1 +
mov esi ebp +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_4161B6  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_4160C0  +
mov eax [ebx] +
mov [esp] eax +
call sub_45F1A0  +
test eax eax +
jz loc_416450  +
mov [esp] eax +
mov [esp+18h] eax +
call strlen  +
mov edx [esp+18h] +
cmp [esp+20h] eax +
mov ebp eax +
jnb loc_4161E5  +
mov eax [esp+50h] +
test byte ptr [eax+29h] 80h +
jnz loc_4161E1  +
mov ecx [esp+54h] +
add ebp edi +
mov ebx [ebx+90h] +
lea edi [ebp+1] +
add ebp 2 +
test ecx ecx +
cmovnz edi ebp +
test ebx ebx +
jnz loc_416159  +
test edi edi +
jnz loc_416270  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ebp +
jmp loc_416134  +
***
add edi 2 +
mov esi ebp +
jmp loc_41614F  +
***
mov ebp [esp+20h] +
mov eax [ebx+88h] +
mov [esp+18h] edx +
mov ecx [eax] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] ecx +
mov [esp+1Ch] ecx +
call sub_460000  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
test eax eax +
jnz loc_41622A  +
cmp ebp 0Fh +
ja loc_41614F  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
cmp [ecx+ebp] al +
jz loc_41614F  +
mov [esp] ecx +
mov [esp+8] ebp +
mov [esp+4] edx +
mov [esp+18h] ecx +
call memcpy  +
mov ecx [esp+18h] +
cmp [esp+20h] ebp +
jbe loc_416257  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [ecx+ebp] al +
jmp loc_41614F  +
***
cmp ebp 0Fh +
ja loc_41614F  +
cmp [esp+20h] ebp +
jnz loc_41614F  +
jmp loc_416248  +
***
mov eax [esp+50h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_406370  +
mov ebp eax +
mov eax [esp+58h] +
test ebp ebp +
mov [eax] ebp +
jz loc_416450  +
mov eax [esp+5Ch] +
mov [eax] edi +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jz loc_4161BE  +
mov eax [esp+20h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+1Ch] 0 +
sub eax 1 +
mov [esp+28h] eax +
jmp loc_416425  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_4162DE  +
test byte ptr [eax+2Bh] 40h +
jnz loc_4162DE  +
mov eax [eax] +
mov [esp+18h] eax +
mov edx [esp+1Ch] +
test edx edx +
jz loc_4162FE  +
mov eax [esp+18h] +
mov esi [esp+1Ch] +
mov [esp+4] eax +
mov [esp] esi +
call sub_45FFB0  +
test eax eax +
jz loc_416357  +
mov eax [esp+18h] +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_416460  +
cmp al 2Fh +
jz loc_416460  +
test al al +
jz loc_416325  +
mov eax [esp+18h] +
cmp byte ptr [eax+1] 3Ah +
mov esi eax +
jz loc_416357  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_416460  +
cmp al 2Fh +
jz loc_416460  +
test al al +
jz loc_41634C  +
cmp byte ptr [edx+1] 3Ah +
mov esi [esp+18h] +
jz loc_416357  +
mov eax [esp+18h] +
call sub_414700  +
mov esi eax +
mov [esp] esi +
call strlen  +
cmp [esp+20h] eax +
mov edi eax +
jb loc_416375  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_416417  +
mov eax [ebx+88h] +
cmp esi [esp+1Ch] +
mov edx [eax] +
jz loc_4163BB  +
lea eax [edi+1] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebp +
mov [esp+24h] edx +
call memcpy  +
mov eax [esp+54h] +
mov edx [esp+24h] +
test eax eax +
jnz loc_416470  +
mov byte ptr [ebp+edi+0] 0Ah +
mov ecx [esp+58h] +
mov eax ebp +
sub eax [ecx] +
mov [esp+24h] eax +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edx] al +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_4163DA  +
mov eax [ebx+3Ch] +
or eax [ebx+38h] +
jnz loc_416480  +
mov eax [esp+24h] +
add edx 1 +
mov dword ptr [esp+8] offset aLd +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
call sub_4149D0  +
cmp esi [esp+1Ch] +
jz loc_416417  +
mov eax [esp+18h] +
lea ebp [ebp+edi+1] +
cmp dword ptr [esp+54h] 1 +
mov [esp+1Ch] eax +
sbb ebp 0FFFFFFFFh +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_4161BE  +
mov eax [ebx] +
mov [esp+18h] eax +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_4162C8  +
mov eax [esp+18h] +
mov [esp] eax +
call sub_45F1A0  +
test eax eax +
mov esi eax +
jnz loc_416357  +
nop   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+18h] +
jmp loc_416357  +
***
mov byte ptr [ebp+edi+0] 2Fh +
mov byte ptr [ebp+edi+1] 0Ah +
jmp loc_4163AF  +
***
mov eax [esp+24h] +
mov dword ptr [esp+8] offset aLd_0 +
mov [esp+2Ch] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
lea eax [edx+1] +
mov [esp] eax +
call sub_4144B0  +
mov edx [ebx+38h] +
mov dword ptr [esp+8] offset aLd +
lea ecx [edx-3Ch] +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov ecx [esp+28h] +
sub ecx eax +
lea eax [edx+eax+1] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_4149D0  +
jmp loc_4163FD  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset aArfilenames_0 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] eax +
jmp loc_416080  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset asc_478EB6 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
jmp loc_416080  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov edx [eax+4] +
movzx edi byte ptr [edx+1Ah] +
mov edx [esp+48h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov dword ptr [edx] 0 +
mov edx [esp+44h] +
mov dword ptr [edx] 0 +
mov edx [esp+4Ch] +
mov dword ptr [edx] 0 +
mov ebp [eax+94h] +
test ebp ebp +
jz loc_4165C9  +
mov eax [ebp+0] +
mov [esp] eax +
call sub_45F1A0  +
test eax eax +
jz loc_416605  +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_4165BF  +
xor ecx ecx +
xor ebx ebx +
jmp loc_4165A2  +
mov ecx esi +
cmp dl 20h +
movzx edx byte ptr [eax+ecx+1] +
cmovz ebx edi +
lea esi [ecx+1] +
test dl dl +
jnz loc_4165A0  +
and ebx 1 +
jnz loc_4165D6  +
cmp [esp+1Ch] esi +
jb loc_4165D6  +
mov ebp [ebp+90h] +
test ebp ebp +
jnz loc_416583  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+88h] +
add ecx 4 +
and ecx 0FFFFFFFCh +
mov edx [eax] +
mov [eax+8] ecx +
mov eax [esp+1Ch] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset a1Lu +
mov [esp] edx +
mov [esp+4] eax +
call sub_4149D0  +
jmp loc_4165BF  +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+88h] +
mov eax [eax] +
mov [esp+8] edx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_403A90  +
cmp eax 3Ch +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov eax [esi+88h] +
mov ebx [eax] +
cmp byte ptr [ebx] 23h +
jz loc_416691  +
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_403A90  +
cmp eax 3Ch +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [ebx+1] 31h +
jnz loc_416668  +
cmp byte ptr [ebx+2] 2Fh +
jnz loc_416668  +
movzx eax byte ptr [ebx+3] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_416668  +
mov eax [esi] +
mov [esp] eax +
call sub_45F1A0  +
mov [esp] eax +
mov ebp eax +
call strlen  +
mov edx [esi+88h] +
mov edi eax +
lea eax [eax+3] +
and eax 0FFFFFFFCh +
cmp [edx+8] eax +
jz loc_4166F4  +
mov dword ptr [esp+4] 73Dh +
mov dword ptr [esp] offset a____Binutil_21 +
mov [esp+0Ch] eax +
call sub_404040  +
mov edx [esi+88h] +
mov eax [esp+0Ch] +
add eax [edx+4] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [ebx+30h] +
mov [esp] eax +
call sub_414A70  +
test eax eax +
jnz loc_416719  +
xor eax eax +
jmp loc_416689  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_403A90  +
cmp eax 3Ch +
jnz loc_416712  +
mov eax [esp+30h] +
mov [esp+4] edi +
mov [esp] ebp +
mov [esp+8] eax +
call sub_403A90  +
cmp eax edi +
jnz loc_416712  +
and edi 3 +
mov eax 1 +
jz loc_416689  +
mov eax [esp+30h] +
mov ebx 4 +
sub ebx edi +
mov [esp+4] ebx +
mov dword ptr [esp] offset unk_478FA7 +
mov [esp+8] eax +
call sub_403A90  +
cmp ebx eax +
setz al  +
movzx eax al +
jmp loc_416689  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov esi [esp+44h] +
mov eax [eax+88h] +
test eax eax +
jz loc_41686A  +
mov ebx [eax] +
test ebx ebx +
jz loc_416863  +
lea ebp [ebx+10h] +
lea edi [esp+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+24h] eax +
jz loc_416863  +
lea ebp [ebx+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ah] ax +
jz loc_416863  +
lea ebp [ebx+22h] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ch] ax +
jz loc_416863  +
add ebx 28h +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strtol  +
cmp ebx [esp+1Ch] +
mov [esi+6] ax +
jz loc_416863  +
mov eax [esp+40h] +
mov eax [eax+88h] +
mov eax [eax+4] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_41685B  +
***
mov dword ptr [esp] 5 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
jmp loc_41685B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edi [esp+38h] +
mov [esp] eax +
call sub_45F1A0  +
mov edx eax +
mov eax [ebp+4] +
mov [esp+0Ch] edx +
movzx esi byte ptr [eax+1Ah] +
mov [esp] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp esi eax +
mov ebx eax +
jb loc_4168E0  +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp esi ebx +
jbe loc_4168D8  +
mov eax [ebp+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+38h] esi +
mov [esp+30h] edi +
mov [esp+34h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov edi [esp+38h] +
mov edx [ebx+4] +
test byte ptr [ebx+29h] 80h +
movzx ebp byte ptr [edx+1Ah] +
jnz loc_416964  +
mov [esp] eax +
call sub_45F1A0  +
test eax eax +
mov edx eax +
jz loc_416986  +
mov eax ebp +
mov [esp] edx +
movzx ebp al +
mov [esp+0Ch] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp ebp eax +
mov esi eax +
jnb loc_416970  +
cmp esi 0Fh +
ja loc_41695C  +
cmp esi ebp +
jnz loc_41695C  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+esi] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_416880  +
***
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp ebp esi +
ja loc_416952  +
jmp loc_416949  +
***
mov dword ptr [esp+8] offset aBfd_dont_trunc +
mov dword ptr [esp+4] 818h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_404070  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov [esp] eax +
call sub_45F1A0  +
mov edi eax +
mov eax [ebp+4] +
movzx ebx byte ptr [eax+1Ah] +
mov [esp] edi +
call strlen  +
cmp ebx eax +
mov esi eax +
jb loc_416A10  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov ebx esi +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp ebx 0Fh +
ja loc_416A07  +
mov eax [ebp+4] +
mov edx [esp+38h] +
movzx eax byte ptr [eax+19h] +
mov [edx+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp byte ptr [edi+esi-2] 2Eh +
jnz loc_4169F4  +
cmp byte ptr [edi+esi-1] 6Fh +
jnz loc_4169F4  +
mov eax [esp+38h] +
mov byte ptr [eax+ebx-2] 2Eh +
mov byte ptr [eax+ebx-1] 6Fh +
jmp loc_4169F4  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_14] 0 +
test eax eax +
jz loc_416A74  +
mov edx eax +
and edx 1 +
lea eax [edx+eax+3Ch] +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_4C] 6000h +
call sub_408000  +
mov edi eax +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edi edi +
jz loc_416D1A  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
test eax eax +
mov [esp+4Ch+var_10] eax +
jz loc_416CF0  +
mov eax [esp+4Ch+arg_0] +
mov edx offset a___symdef_1 +
mov ebp [eax+94h] +
mov eax 0Ah +
test ebp ebp +
jnz loc_416AE8  +
jmp loc_416D54  +
mov ebp [ebp+90h] +
mov edi [esp+4Ch+arg_0] +
test ebp ebp +
mov [edi+94h] ebp +
jz loc_416D54  +
mov esi [ebp+0] +
mov edi edx +
mov ecx eax +
cmps   +
jz loc_416AD0  +
xor ebx ebx +
xor esi esi +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 400h +
jmp loc_416B1F  +
mov ebp [ebp+90h] +
test ebp ebp +
jz loc_416DC6  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] ebp +
call sub_407110  +
test eax eax +
jz loc_416B11  +
test byte ptr [ebp+29h] 2 +
jz loc_416B11  +
mov eax [ebp+4] +
mov eax [eax+104h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_18] eax +
js loc_416CE0  +
jz loc_416CCA  +
cmp eax ebx +
jle loc_416DB6  +
test ebx ebx +
jz loc_416B71  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call sub_408000  +
test eax eax +
mov [esp+4Ch+var_34] eax +
jz loc_416CE4  +
mov eax [ebp+4] +
mov ebx [esp+4Ch+var_34] +
mov eax [eax+108h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_28] eax +
js loc_416CE4  +
jz loc_416CC6  +
mov [esp+4Ch+var_20] ebp +
xor ebx ebx +
mov ebp esi +
jmp loc_416C54  +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_48] 4 +
mov edi eax +
lea eax [ebp+ebp*2+0] +
lea esi [ecx+eax*8] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
test eax eax +
mov [esi] eax +
mov [esp+4Ch+var_30] eax +
jz loc_416CE4  +
lea eax [edi+1] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
mov edx [esp+4Ch+var_30] +
mov [edx] eax +
mov eax [esi] +
mov eax [eax] +
test eax eax +
jz loc_416CE4  +
mov ecx [esp+4Ch+var_34] +
add ebp 1 +
mov edx [ecx+ebx*4] +
mov edx [edx+4] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call strcpy  +
mov eax [esp+4Ch+var_20] +
mov [esi+8] eax +
mov eax [esp+4Ch+var_2C] +
mov [esi+10h] eax +
lea eax [eax+edi+1] +
mov [esp+4Ch+var_2C] eax +
add ebx 1 +
cmp ebx [esp+4Ch+var_28] +
jz loc_416CC0  +
mov eax [esp+4Ch+var_34] +
mov edx [eax+ebx*4] +
test dword ptr [edx+0Ch] 802082h +
mov eax [edx+10h] +
jnz loc_416C6D  +
test byte ptr [eax+15h] 10h +
jz loc_416C4B  +
cmp eax offset off_4731A8 +
jz loc_416C4B  +
cmp ebp [esp+4Ch+var_1C] +
jz loc_416D22  +
mov eax [edx+4] +
mov edi offset a__gnu_lto_sl_0 +
mov ecx 0Fh +
mov esi eax +
cmps   +
jnz loc_416BC0  +
mov eax [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset aSPluginNeede_0 +
mov [esp+4Ch+var_48] eax +
call off_4733A4  +
mov eax [esp+4Ch+var_34] +
mov eax [eax+ebx*4] +
mov eax [eax+4] +
jmp loc_416BC0  +
mov esi ebp +
mov ebp [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_18] +
mov eax [ebp+4] +
mov eax [eax+98h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
jnz loc_416B11  +
test ebx ebx +
jz loc_416CF0  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_416DBF  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_4064E0  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+ebp+0] +
mov [esp+4Ch+var_1C] eax +
lea eax [eax+ebp*4] +
shl eax 3 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call sub_408090  +
test eax eax +
jz loc_416CE4  +
mov edi [esp+4Ch+var_34] +
mov [esp+4Ch+var_24] eax +
mov edx [edi+ebx*4] +
jmp loc_416C7E  +
mov eax [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+var_24] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_44] ebx +
mov ebx [esp+4Ch+var_14] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] ebx +
mov ebx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov esi eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_4064E0  +
add esp 4Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_18] ebx +
jmp loc_416B89  +
xor eax eax +
jmp loc_416D1A  +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_2C] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_3C] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] edi +
call eax  +
test ebx ebx +
mov esi eax +
jz loc_416D8C  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
jmp loc_416D8C  +
***
push ebp  +
mov eax 203Ch +
push edi  +
push esi  +
push ebx  +
call sub_46FEC0  +
sub esp eax +
mov eax [esp+2050h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+2Ch] 0 +
movzx eax byte ptr [eax+2Bh] +
mov [esp+1Bh] al +
mov eax [esp+2050h] +
shr byte ptr [esp+1Bh] 5 +
and byte ptr [esp+1Bh] 1 +
mov edi [eax+94h] +
test edi edi +
jz loc_41732A  +
test byte ptr [edi+28h] 10h +
jnz loc_4170D1  +
xor esi esi +
mov ebp [esp+2050h] +
mov ebx esi +
jmp loc_416E94  +
mov edi [edi+90h] +
test edi edi +
jz loc_416ECA  +
test byte ptr [edi+28h] 10h +
jnz loc_4170D1  +
mov eax [edi+88h] +
test eax eax +
jz loc_416F15  +
test ebx ebx +
jnz loc_416E80  +
cmp byte ptr [esp+1Bh] 0 +
jz loc_416E80  +
mov [esp] edi +
xor ebx ebx +
mov dword ptr [esp+4] 1 +
call sub_407110  +
mov edi [edi+90h] +
test eax eax +
setnz bl  +
test edi edi +
jnz loc_416E8A  +
mov esi ebx +
mov eax [esp+2050h] +
lea edx [esp+2Ch] +
mov ecx [esp+2050h] +
mov eax [eax+4] +
mov eax [eax+0E0h] +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
lea edx [esp+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
test eax eax +
jnz loc_417140  +
xor eax eax +
add esp 203Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test byte ptr [edi+2Ah] 1 +
mov eax [edi] +
jnz loc_417100  +
lea ecx [esp+30h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
jnz loc_417253  +
test byte ptr [ebp+2Ah] 4 +
jz loc_416F60  +
xor eax eax +
xor esi esi +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov dword ptr [esp+54h] 0 +
mov [esp+3Ah] si +
mov [esp+36h] ax +
mov dword ptr [esp] 64h +
call sub_408190  +
test eax eax +
mov esi eax +
jz loc_417260  +
lea edx [eax+28h] +
mov dword ptr [eax+28h] 20202020h +
mov dword ptr [eax+2Ch] 20202020h +
mov dword ptr [eax+30h] 20202020h +
mov dword ptr [eax+34h] 20202020h +
mov dword ptr [eax+38h] 20202020h +
mov dword ptr [eax+3Ch] 20202020h +
mov dword ptr [eax+40h] 20202020h +
mov dword ptr [eax+44h] 20202020h +
mov dword ptr [eax+48h] 20202020h +
mov dword ptr [eax+4Ch] 20202020h +
mov dword ptr [eax+50h] 20202020h +
mov dword ptr [eax+54h] 20202020h +
mov dword ptr [eax+58h] 20202020h +
mov dword ptr [eax+5Ch] 20202020h +
mov dword ptr [eax+60h] 20202020h +
mov eax [esp+54h] +
mov dword ptr [esp+8] offset a12ld +
mov dword ptr [esp+4] 0Ch +
mov [esp+1Ch] edx +
mov [esp+0Ch] eax +
lea eax [esi+38h] +
mov [esp] eax +
call sub_4149D0  +
movsx eax word ptr [esp+3Ah] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+44h] +
mov [esp] eax +
call sub_4149D0  +
movsx eax word ptr [esp+3Ch] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+4Ah] +
mov [esp] eax +
call sub_4149D0  +
movzx eax word ptr [esp+36h] +
mov dword ptr [esp+8] offset a8lo +
mov dword ptr [esp+4] 8 +
mov [esp+0Ch] eax +
lea eax [esi+50h] +
mov [esp] eax +
call sub_4149D0  +
mov eax [esp+48h] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [esi+58h] +
mov [esp] eax +
call sub_414A70  +
mov edx [esp+1Ch] +
test eax eax +
jz loc_41726F  +
mov ecx 0A60h +
mov [esi+62h] cx +
mov eax [esp+48h] +
mov ecx [edi] +
mov [esi] edx +
mov [esi+4] eax +
mov eax [ebp+4] +
mov [edi+88h] esi +
mov eax [eax+0E4h] +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] ebp +
call eax  +
jmp loc_416E9E  +
***
mov dword ptr [esp] 5 +
call sub_4040F0  +
call sub_403EA0  +
mov [esp+4] edi +
mov dword ptr [esp] 14h +
mov [esp+8] eax +
call sub_4040F0  +
jmp loc_416F08  +
***
lea eax [esp+54h] +
mov esi [edi+8] +
mov [esp] eax +
call time  +
xor eax eax +
mov [esp+3Ah] ax +
xor eax eax +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov [esp+36h] ax +
mov eax [esi] +
mov dword ptr [esp+4Ch] 0 +
mov [esp+48h] eax +
jmp loc_416F3A  +
***
mov eax [esp+2050h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_403BF0  +
test eax eax +
jnz loc_416F08  +
mov ecx [esp+2050h] +
mov edx offset aThin +
mov eax offset aArch +
test byte ptr [ecx+2Bh] 40h +
mov [esp+8] ecx +
mov dword ptr [esp+4] 8 +
cmovnz eax edx +
mov [esp] eax +
call sub_403A90  +
cmp eax 8 +
jnz loc_416F08  +
mov eax esi +
and al [esp+1Bh] +
mov [esp+1Bh] al +
jnz loc_417370  +
mov esi [esp+28h] +
test esi esi +
jnz loc_417394  +
mov eax [esp+2050h] +
mov edi [eax+94h] +
test edi edi +
jz loc_417212  +
mov eax [edi+88h] +
mov ecx [esp+2050h] +
mov ebx [eax+4] +
mov eax [edi+4] +
mov eax [eax+0F0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_416F08  +
mov eax [esp+2050h] +
test byte ptr [eax+2Bh] 40h +
jz loc_417279  +
mov edi [edi+90h] +
test edi edi +
jnz loc_4171D1  +
cmp byte ptr [esp+1Bh] 0 +
mov esi 5 +
mov ebx [esp+2050h] +
jz loc_417249  +
mov eax [ebx+4] +
mov eax [eax+100h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_417249  +
mov dword ptr [esp] offset aWarningWriting +
call off_4733A4  +
sub esi 1 +
jnz loc_417225  +
mov eax 1 +
jmp loc_416F0A  +
***
mov dword ptr [esp] 1 +
call sub_4040F0  +
nop   +
mov dword ptr [edi+88h] 0 +
jmp loc_4170DD  +
***
mov [esp] esi +
call free  +
jmp loc_417260  +
***
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] edi +
call sub_403BF0  +
test eax eax +
jnz loc_4170DD  +
test ebx ebx +
jnz loc_4172D7  +
jmp loc_417331  +
mov eax [esp+2050h] +
mov [esp+4] ebp +
mov [esp+8] eax +
lea eax [esp+30h] +
mov [esp] eax +
call sub_403A90  +
cmp ebp eax +
jnz loc_416F08  +
sub ebx ebp +
jz loc_417331  +
cmp ebx 2000h +
mov esi 2000h +
cmovb esi ebx +
call ds:__imp__errno  +
mov dword ptr [eax] 0 +
lea eax [esp+30h] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_4039E0  +
cmp eax esi +
mov ebp eax +
jz loc_4172B0  +
call sub_403EA0  +
cmp eax 1 +
jz loc_4170DD  +
mov dword ptr [esp] 12h +
call sub_4040F0  +
jmp loc_4170DD  +
***
xor esi esi +
jmp loc_416ECC  +
***
mov eax [edi+88h] +
test byte ptr [eax+4] 1 +
jz loc_417208  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 478DEBh +
mov [esp+8] eax +
call sub_403A90  +
cmp eax 1 +
jz loc_417208  +
jmp loc_416F08  +
***
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+2050h] +
mov [esp] eax +
call sub_416A50  +
test eax eax +
jnz loc_4171B4  +
jmp loc_416F08  +
***
mov ebp [esp+2Ch] +
lea edi [esp+30h] +
add esi 1 +
mov dword ptr [esp+30h] 20202020h +
and esi 0FFFFFFFEh +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
mov [esp] ebp +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
call strlen  +
mov [esp+4] ebp +
mov [esp] edi +
mov [esp+8] eax +
call memcpy  +
lea eax [esp+60h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_414A70  +
test eax eax +
jz loc_416F08  +
mov eax 0A60h +
mov [esp+6Ah] ax +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+8] eax +
call sub_403A90  +
cmp eax 3Ch +
jnz loc_416F08  +
mov eax [esp+2050h] +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_403A90  +
cmp eax [esp+28h] +
jnz loc_416F08  +
test al 1 +
jz loc_4171C0  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 478DEBh +
mov [esp+8] eax +
call sub_403A90  +
cmp eax 1 +
jnz loc_416F08  +
jmp loc_4171C0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+0B0h] +
mov ecx [esp+0ACh] +
mov ebx [esp+0A0h] +
mov edi eax +
and edi 1 +
add eax edi +
mov ebp [ebx+94h] +
lea esi ds:0[ecx*8] +
mov [esp+24h] edi +
lea edi [esi+eax+8] +
mov [esp+20h] eax +
mov eax [ebx+0A0h] +
test byte ptr [ebx+2Ah] 4 +
mov dword ptr [eax+20h] 0 +
jz loc_417870  +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov dword ptr [esp+70h] 20202020h +
mov dword ptr [esp+74h] 20202020h +
mov dword ptr [esp+78h] 20202020h +
mov dword ptr [esp+40h] 532E5F5Fh +
mov dword ptr [esp+44h] 45444D59h +
mov byte ptr [esp+48h] 46h +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov eax [eax+20h] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
mov [esp+0Ch] eax +
lea eax [esp+50h] +
mov [esp] eax +
call sub_4149D0  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_4149D0  +
lea eax [esp+62h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_4149D0  +
lea eax [esp+70h] +
mov [esp+8] edi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_414A70  +
test eax eax +
jnz loc_417660  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+40h] +
mov ecx 0A60h +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
mov [esp+7Ah] cx +
call sub_403A90  +
cmp eax 3Ch +
jnz loc_41764C  +
mov eax [ebx+4] +
lea ecx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] esi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_403A90  +
cmp eax 4 +
jnz loc_41764C  +
mov edx [esp+0ACh] +
test edx edx +
jz loc_4178F0  +
mov eax [esp+0A4h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+0A0h] ebx +
lea eax [edi+eax+44h] +
mov [esp+18h] eax +
mov eax [esp+0A8h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
mov ecx [esp+18h] +
mov ebx [esp+1Ch] +
mov eax [eax+8] +
cmp eax ebp +
mov [esp+10h] eax +
jz loc_417740  +
nop   +
mov edx [ebp+88h] +
mov ebp [ebp+90h] +
mov eax [edx+4] +
add eax [edx+8] +
xor edx edx +
add eax 3Ch +
add eax ecx +
adc edx ebx +
mov ebx eax +
and ebx 1 +
xor edi edi +
add eax ebx +
adc edx edi +
mov ecx eax +
cmp [esp+10h] ebp +
mov ebx edx +
jnz loc_417710  +
mov [esp+18h] ecx +
mov eax ebx +
xor ecx ecx +
or eax ecx +
mov dword ptr [esp+1Ch] 0 +
jnz loc_4178A0  +
mov eax [esp+0A0h] +
lea ecx [esp+38h] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+28h] +
mov edx [ecx+10h] +
mov [esp] edx +
call eax  +
mov eax [esp+0A0h] +
lea ecx [esp+3Ch] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp] ecx +
call eax  +
mov eax [esp+0A0h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+38h] +
mov [esp] eax +
call sub_403A90  +
cmp eax 8 +
jnz loc_41764C  +
add dword ptr [esp+2Ch] 1 +
mov eax [esp+2Ch] +
add dword ptr [esp+28h] 18h +
cmp eax [esp+0ACh] +
jnz loc_4176F7  +
mov ebx [esp+0A0h] +
lea edi [esp+34h] +
mov eax [ebx+4] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_403A90  +
cmp eax 4 +
jnz loc_41764C  +
xor edx edx +
mov ebp [esp+0A8h] +
mov [esp+0A0h] ebx +
mov ebx edx +
jmp loc_41783F  +
add ebx 1 +
add ebp 18h +
cmp ebx [esp+0ACh] +
jz loc_4178B1  +
mov eax [ebp+0] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea esi [eax+1] +
mov eax [esp+0A0h] +
mov [esp+4] esi +
mov [esp+8] eax +
call sub_403A90  +
cmp eax esi +
jz loc_417830  +
jmp loc_41764C  +
***
mov eax [ebx] +
lea ecx [esp+40h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
mov eax [ebx+0A0h] +
jnz loc_417536  +
mov ecx [esp+64h] +
lea edx [ecx+3Ch] +
mov [eax+20h] edx +
jmp loc_417536  +
***
mov dword ptr [esp] 12h +
call sub_4040F0  +
jmp loc_41764C  +
***
mov ebx [esp+0A0h] +
mov eax [esp+24h] +
test eax eax +
jnz loc_4178CA  +
mov eax 1 +
jmp loc_41764E  +
***
mov [esp+8] ebx +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_478F40 +
call sub_403A90  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_41764E  +
***
mov eax [ebx+4] +
lea edi [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_403A90  +
cmp eax 4 +
jnz loc_41764C  +
jmp loc_4178B8  +
***
push esi  +
push ebx  +
sub esp 84h +
mov ebx [esp+90h] +
test byte ptr [ebx+2Ah] 4 +
jz loc_417953  +
mov eax 1 +
add esp 84h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] ebx +
call sub_403B80  +
lea eax [esp+10h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_403BA0  +
cmp eax 0FFFFFFFFh +
jz loc_417A30  +
mov eax [ebx+0A0h] +
mov edx [esp+34h] +
cmp edx [eax+20h] +
jle loc_417945  +
add edx 3Ch +
lea esi [esp+54h] +
mov [eax+20h] edx +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
call sub_4149D0  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 18h +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_417A12  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
call sub_403A90  +
cmp eax 0Ch +
jz loc_417A41  +
mov dword ptr [esp] offset aWritingUpdated +
call sub_403F40  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] offset aReadingArchive +
call sub_403F40  +
jmp loc_417945  +
***
xor al al +
jmp loc_41794A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebp [esp+9Ch] +
mov dword ptr [esp+4] 0Ah +
mov esi [esp+90h] +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
lea ebx ds:4[ebp*4] +
add ebx [esp+0A0h] +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov eax ebx +
and eax 1 +
cmp eax 1 +
sbb ebx 0FFFFFFFFh +
mov [esp+20h] eax +
lea eax [esp+64h] +
mov [esp+8] ebx +
mov [esp] eax +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov byte ptr [esp+34h] 2Fh +
call sub_414A70  +
test eax eax +
jz loc_417BE2  +
xor eax eax +
test byte ptr [esi+2Ah] 4 +
jz loc_417BF0  +
mov [esp+0Ch] eax +
lea eax [esp+44h] +
mov [esp] eax +
lea edi [esp+34h] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
call sub_4149D0  +
lea eax [esp+50h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_4149D0  +
lea eax [esp+56h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_4149D0  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset a7lo +
mov dword ptr [esp+4] 8 +
call sub_4149D0  +
mov edx 0A60h +
mov [esp+8] esi +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+6Eh] dx +
call sub_403A90  +
cmp eax 3Ch +
jz loc_417C01  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 0 +
call time  +
jmp loc_417B2B  +
***
mov [esp+4] ebp +
mov [esp] esi +
call sub_408220  +
test eax eax +
jz loc_417BE2  +
mov eax [esi+94h] +
test ebp ebp +
mov edx eax +
mov [esp+24h] eax +
jz loc_417D8A  +
mov eax [esp+94h] +
mov dword ptr [esp+1Ch] 0 +
lea eax [ebx+eax+44h] +
xor ebx ebx +
test edx edx +
mov [esp+18h] eax +
jz loc_417CDA  +
cmp ebp ebx +
jbe loc_417CB0  +
mov edx [esp+98h] +
lea eax [ebx+ebx*2] +
lea edx [edx+eax*8] +
mov eax [edx+8] +
cmp eax [esp+24h] +
mov [esp+10h] eax +
jnz loc_417CB0  +
mov ecx [esp+1Ch] +
mov eax [esp+18h] +
test ecx ecx +
mov [esp+14h] eax +
jnz loc_417D72  +
mov edi edx +
add ebx 1 +
jmp loc_417C99  +
cmp ebx ebp +
jz loc_417CB0  +
mov eax [edi+20h] +
add edi 18h +
cmp eax [esp+10h] +
lea ecx [ebx+1] +
jnz loc_417CB0  +
mov eax [esp+14h] +
mov ebx ecx +
mov [esp+4] eax +
mov [esp] esi +
call sub_408220  +
test eax eax +
jnz loc_417C80  +
jmp loc_417BE2  +
***
add dword ptr [esp+18h] 3Ch +
adc dword ptr [esp+1Ch] 0 +
test byte ptr [esi+2Bh] 40h +
jz loc_417D35  +
mov eax [esp+24h] +
cmp ebp ebx +
mov eax [eax+90h] +
mov [esp+24h] eax +
jbe loc_417CDA  +
test eax eax +
jnz loc_417C46  +
mov ecx [esp+98h] +
xor edx edx +
mov [esp+90h] esi +
mov [esp+9Ch] ebp +
mov ebp edx +
mov esi ecx +
jmp loc_417D06  +
add ebp 1 +
add esi 18h +
cmp [esp+9Ch] ebp +
jbe loc_417D83  +
mov eax [esi] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea ebx [eax+1] +
mov eax [esp+90h] +
mov [esp+4] ebx +
mov [esp+8] eax +
call sub_403A90  +
cmp eax ebx +
jz loc_417CF7  +
jmp loc_417BE2  +
***
mov eax [esp+24h] +
xor edx edx +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+88h] +
mov eax [eax+4] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
mov ecx eax +
and ecx 1 +
mov [esp+28h] ecx +
add eax [esp+28h] +
adc edx [esp+2Ch] +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
jmp loc_417CC0  +
***
mov dword ptr [esp] 12h +
call sub_4040F0  +
jmp loc_417BE2  +
***
mov esi [esp+90h] +
mov eax [esp+20h] +
test eax eax +
jnz loc_417D9C  +
mov eax 1 +
jmp loc_417BE4  +
***
mov [esp+8] esi +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_478F40 +
call sub_403A90  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_417BE4  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_417DED  +
and eax 7 +
cmp al 2 +
jz loc_417E71  +
mov eax [ebx+88h] +
test eax eax +
jz loc_417E51  +
mov esi [eax+18h] +
test esi esi +
jz loc_417E51  +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov dword ptr [esp+8] 0 +
mov [esp] esi +
mov [esp+14h] edx +
mov [esp+10h] eax +
lea eax [esp+10h] +
mov [esp+4] eax +
call sub_460BF0  +
test eax eax +
mov edi eax +
jz loc_417E51  +
mov eax [eax] +
cmp [eax+8] ebx +
jz loc_417E45  +
mov dword ptr [esp+4] 0AEDh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_404040  +
mov [esp+4] edi +
mov [esp] esi +
call sub_460CB0  +
test byte ptr [ebx+2Ch] 1 +
jz loc_417E65  +
mov eax [ebx+9Ch] +
mov eax [eax+24h] +
mov [esp] ebx +
call eax  +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+98h] +
test eax eax +
jnz loc_417E82  +
jmp loc_417E94  +
mov eax esi +
mov esi [eax+90h] +
mov [esp] eax +
call sub_405F00  +
test esi esi +
jnz loc_417E80  +
mov eax [ebx+0A0h] +
mov esi [eax+8] +
test esi esi +
jz loc_417DED  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_4149B0 +
mov [esp] esi +
call sub_460D00  +
mov [esp] esi +
call sub_460740  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+8] 0 +
jmp loc_417DED  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
add eax 2 +
cmp eax 0Ah +
ja loc_417F50  +
jmp ds:off_478FDC[eax*4]  +
mov eax 2 +
add esp 1Ch +
retn   +
mov eax 4 +
add esp 1Ch +
retn   +
mov eax 1 +
add esp 1Ch +
retn   +
mov eax 8 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
mov eax 10h +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aBfd_get_reloc_ +
mov [esp+1Ch+var_18] 1BAh +
mov [esp+1Ch+var_1C] offset a____Binutil_13 +
call sub_404070  +
lea esi [esi+0] +
push ebp  +
mov edx 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+48h+var_14] +
mov ebx [esp+48h+var_C] +
mov esi [esp+48h+var_10] +
mov edi [esp+48h+var_18] +
lea ecx [eax-1] +
mov eax edx +
shl eax cl +
lea eax [eax+eax-2] +
lea ecx [ebx-1] +
or eax 1 +
shl edx cl +
mov ebx eax +
mov ecx esi +
mov ebp eax +
lea edx [edx+edx-2] +
not ebp  +
shl ebx cl +
or edx 1 +
or edx ebx +
mov ebx [esp+48h+var_8] +
mov ecx esi +
and ebx edx +
shr ebx cl +
cmp edi 1 +
jz loc_417FE7  +
jb loc_418020  +
cmp edi 2 +
jz loc_417FE1  +
cmp edi 3 +
nop   +
lea esi [esi+0] +
jnz loc_418002  +
xor eax eax +
test ebp ebx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shr eax 1 +
mov ebp eax +
not ebp  +
xor eax eax +
and ebx ebp +
jz loc_417FD9  +
mov ecx esi +
xor eax eax +
shr edx cl +
and edx ebp +
cmp ebx edx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_40] offset aBfd_check_over +
mov [esp+48h+var_44] 217h +
mov [esp+48h+var_48] offset a____Binutil_13 +
call sub_404070  +
nop   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
mov eax [esi+10h] +
cmp eax offset off_473250 +
jz loc_418215  +
test ebp ebp +
jz loc_4181D0  +
cmp eax offset off_4731A8 +
mov [esp+3Ch+var_1C] 0 +
jz loc_418235  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_4180B0  +
mov edx [esp+3Ch+arg_14] +
mov edi [esp+3Ch+arg_10] +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] edi +
call eax  +
cmp eax 3 +
jz loc_4180B0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov edi [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_407E10  +
mov [esp+3Ch+var_3C] ebp +
mov edx eax +
imul edx edi +
mov [esp+3Ch+var_18] edx +
call sub_417EE0  +
mov edx [esp+3Ch+var_18] +
lea edi [edx+eax] +
mov eax [esp+3Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_4181E0  +
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+28h] +
test ecx ecx +
jz loc_4181E0  +
cmp ecx edi +
mov eax 2 +
jb loc_4180A8  +
mov eax [esi+10h] +
xor ecx ecx +
test byte ptr [eax+15h] 10h +
jnz loc_418110  +
mov ecx [esi+8] +
mov esi [esp+3Ch+arg_10] +
mov edi [eax+3Ch] +
test esi esi +
jz loc_418200  +
xor esi esi +
cmp dword ptr [ebp+24h] 0 +
jnz loc_418200  +
mov edi [ebx+8] +
mov [esp+3Ch+var_14] edi +
add edi [eax+38h] +
add ecx edi +
lea eax [ecx+esi] +
mov [esp+3Ch+var_18] eax +
mov eax [ebp+10h] +
test eax eax +
jz loc_418169  +
mov eax [esp+3Ch+arg_C] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+3Ch] +
mov ecx [ecx+38h] +
sub [esp+3Ch+var_18] ecx +
mov eax [eax+1Ch] +
sub [esp+3Ch+var_18] eax +
mov eax [ebp+30h] +
test eax eax +
jnz loc_4182A4  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_41819E  +
mov esi [ebp+24h] +
test esi esi +
jz loc_418440  +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+arg_0] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_4182B0  +
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov ecx [ebp+18h] +
test ecx ecx +
jnz loc_418254  +
mov ecx [ebp+4] +
mov ebx [esp+3Ch+var_18] +
mov eax [ebp+8] +
shr ebx cl +
mov ecx [ebp+14h] +
add eax 2 +
shl ebx cl +
cmp eax 6 +
ja loc_41845A  +
jmp ds:off_47902C[eax*4]  +
add esp 3Ch +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_4180A8  +
jmp loc_418102  +
test edi edi +
jz loc_418300  +
mov esi [edi+1Ch] +
nop   +
lea esi [esi+0] +
jmp loc_41812B  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_418464  +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
add esp 3Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+0Ch] 80h +
jnz loc_41806B  +
cmp [esp+3Ch+arg_10] 1 +
sbb eax eax +
mov [esp+3Ch+var_1C] eax +
and [esp+3Ch+var_1C] 6 +
jmp loc_41806B  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
jnz loc_4181A9  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_3C] eax +
call sub_407D20  +
mov ebx [ebp+4] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_30] eax +
mov eax [ebp+0Ch] +
mov [esp+3Ch+var_38] eax +
mov eax [ebp+18h] +
mov [esp+3Ch+var_3C] eax +
call loc_417F70  +
mov ecx ebx +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_1C] eax +
jmp loc_4181AC  +
mov eax [ebx+4] +
sub [esp+3Ch+var_18] eax +
jmp loc_418169  +
mov eax [eax] +
mov ecx 12h +
mov edi offset aCoffIntelLittl +
mov esi eax +
cmps   +
mov [esp+3Ch+var_10] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_418197  +
mov esi [esp+3Ch+var_10] +
mov edi offset aCoffIntelBig +
mov ecx 0Fh +
cmps   +
jz loc_418197  +
mov eax [esp+3Ch+var_14] +
sub [esp+3Ch+var_18] eax +
mov dword ptr [ebx+8] 0 +
jmp loc_41819E  +
xor esi esi +
jmp loc_41812B  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+3Ch+var_38] esi +
mov esi [ebp+28h] +
and esi eax +
sub esi ebx +
and esi edx +
not edx  +
and edx eax +
or esi edx +
mov [esp+3Ch+var_3C] esi +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_4180A8  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+3Ch+var_38] esi +
mov esi [ebp+28h] +
and esi eax +
add ebx esi +
and ebx edx +
not edx  +
and edx eax +
or ebx edx +
mov [esp+3Ch+var_3C] ebx +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_4180A8  +
mov [esp+3Ch+var_34] offset aBfd_perform_re +
mov [esp+3Ch+var_38] 3A6h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_404070  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+3Ch+var_38] esi +
mov esi eax +
and si [ebp+28h] +
add ebx esi +
and ebx edx +
not edx  +
and edx eax +
or ebx edx +
movsx ebx bx +
mov [esp+3Ch+var_3C] ebx +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_4180A8  +
add edx [esp+3Ch+arg_8] +
movzx esi byte ptr [ebp+28h] +
mov ecx [ebp+2Ch] +
movzx eax byte ptr [edx] +
and esi eax +
add ebx esi +
and ebx ecx +
not ecx  +
and ecx eax +
mov eax [esp+3Ch+var_1C] +
or ebx ecx +
mov [edx] bl +
jmp loc_4180A8  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
jmp loc_418329  +
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+var_1C] +
jmp loc_4180A8  +
mov eax 5 +
jmp loc_4180A8  +
test ebp ebp +
jz loc_4181D0  +
mov [esp+3Ch+var_1C] 0 +
jmp loc_41806B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+54h] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
cmp dword ptr [esi+10h] offset off_473250 +
jz loc_418620  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_4184E4  +
mov edx [esp+64h] +
mov edi [esp+50h] +
mov ecx [esp+60h] +
mov [esp+8] esi +
mov [esp+18h] edx +
mov edx [esp+58h] +
sub edx [esp+5Ch] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
cmp eax 3 +
jz loc_4184E4  +
***
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test esi esi +
jz loc_418634  +
mov ecx [ebx+4] +
add eax ecx +
mov [ebx+4] eax +
mov eax [esp+50h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_4187D2  +
mov eax [esp+24h] +
mov [ebx+8] eax +
mov eax [ebp+18h] +
test eax eax +
jnz loc_418790  +
mov ecx [ebp+4] +
xor ebx ebx +
mov edi [esp+24h] +
mov eax [ebp+8] +
mov esi [esp+58h] +
sub edx [esp+5Ch] +
shr edi cl +
mov ecx [ebp+14h] +
add eax 2 +
add esi edx +
shl edi cl +
cmp eax 6 +
ja sub_418780  +
jmp ds:off_479054[eax*4]  +
***
mov eax [esp+60h] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_4184DC  +
jmp loc_418536  +
***
mov eax [esp+60h] +
mov eax [eax+38h] +
add [ebx+4] eax +
add esp 3Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+24h] +
add [ebx+4] eax +
xor eax eax +
mov [ebx+8] esi +
jmp loc_4184DC  +
***
mov eax ebx +
jmp loc_4184DC  +
***
mov eax [esp+arg_4C] +
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_4184DC  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+arg_0] esi +
mov esi eax +
and si [ebp+28h] +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
movsx edi di +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_4184DC  +
***
movzx eax byte ptr [esi] +
mov ecx [ebp+2Ch] +
mov edx eax +
and dl [ebp+28h] +
add edx edi +
and edx ecx +
not ecx  +
and ecx eax +
mov eax ebx +
or edx ecx +
mov [esi] dl +
jmp loc_4184DC  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
sub esi edi +
and esi edx +
not edx  +
and edx eax +
or esi edx +
mov [esp+0] esi +
call ecx  +
mov eax ebx +
jmp loc_4184DC  +
***
mov eax 5 +
jmp loc_4184DC  +
***
mov eax [esp+50h] +
mov [esp+28h] edx +
mov [esp] eax +
call sub_407D20  +
mov esi [ebp+4] +
mov ebx [esp+24h] +
mov [esp+8] esi +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
mov eax [ebp+18h] +
mov [esp] eax +
call loc_417F70  +
mov ecx esi +
mov edx [esp+28h] +
mov ebx eax +
jmp loc_4185D6  +
***
mov eax [eax] +
mov ecx 12h +
mov edi offset aCoffIntelLittl +
mov esi eax +
cmps   +
mov [esp+2Ch] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4185BF  +
mov esi [esp+2Ch] +
mov edi offset aCoffIntelBig +
mov ecx 0Fh +
cmps   +
jz loc_4185BF  +
mov eax [esp+28h] +
mov edi offset aCoffZ8k +
mov ecx 9 +
sub [esp+24h] eax +
mov esi [esp+2Ch] +
cmps   +
jz loc_4185C6  +
mov dword ptr [ebx+8] 0 +
jmp loc_4185C6  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
mov edx [ebx+8] +
mov [esp+3Ch+var_30] eax +
mov eax [ebx+14h] +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_2C] eax +
mov eax esi +
neg eax  +
test edx edx +
cmovs esi eax +
call sub_417EE0  +
cmp eax 8 +
mov edi eax +
ja loc_418A30  +
jmp ds:off_479070[eax*4]  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_C] +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_28] eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_418934  +
mov ebp [esp+3Ch+var_28] +
and ebp [ebx+28h] +
mov [esp+3Ch+var_24] 0 +
movzx ecx byte ptr [esp+3Ch+var_30] +
mov edx [ebx+2Ch] +
shr esi cl +
movzx ecx byte ptr [esp+3Ch+var_2C] +
mov eax edx +
not eax  +
and eax [esp+3Ch+var_28] +
shl esi cl +
lea ecx [esi+ebp] +
and ecx edx +
or ecx eax +
cmp edi 2 +
jz loc_418B23  +
jle loc_418AD0  +
cmp edi 4 +
jz loc_418AE4  +
cmp edi 8 +
jnz loc_418B07  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 60Bh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_404070  +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp+3Ch+var_28] eax +
mov eax [ebx+18h] +
test eax eax +
jz loc_4188A6  +
mov eax [ebx+0Ch] +
mov ebp 1 +
lea ecx [eax-1] +
mov eax ebp +
shl eax cl +
mov ecx [esp+3Ch+arg_4] +
lea eax [eax+eax-2] +
mov [esp+3Ch+var_24] eax +
or [esp+3Ch+var_24] 1 +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] ecx +
not eax  +
mov [esp+3Ch+var_1C] eax +
call sub_407D20  +
movzx ecx byte ptr [esp+3Ch+var_30] +
mov edx [esp+3Ch+var_24] +
shl edx cl +
lea ecx [eax-1] +
or edx 1 +
shl ebp cl +
lea eax [ebp+ebp-2] +
mov ebp [esp+3Ch+var_28] +
or edx eax +
mov eax [esp+3Ch+var_30] +
mov ecx edx +
and ecx esi +
mov [esp+3Ch+var_20] ecx +
mov ecx eax +
shr [esp+3Ch+var_20] cl +
mov ecx [ebx+28h] +
and ebp ecx +
mov [esp+3Ch+var_10] ecx +
mov ecx edx +
and ecx ebp +
mov [esp+3Ch+var_18] ecx +
movzx ecx byte ptr [esp+3Ch+var_2C] +
shr [esp+3Ch+var_18] cl +
mov ecx eax +
mov eax [ebx+18h] +
shr edx cl +
mov [esp+3Ch+var_14] edx +
cmp eax 2 +
jz loc_418A50  +
cmp eax 3 +
jz loc_418B30  +
cmp eax 1 +
jz loc_418A5E  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 5EDh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_404070  +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp+3Ch+var_28] eax +
jmp loc_41889B  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 58Dh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_404070  +
lea esi [esi+0] +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 57Dh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_404070  +
lea esi [esi+0] +
mov eax [esp+3Ch+var_24] +
shr eax 1 +
mov [esp+3Ch+var_1C] eax +
not [esp+3Ch+var_1C]  +
mov eax [esp+3Ch+var_1C] +
and eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_24] 0 +
jz loc_418A84  +
mov edx [esp+3Ch+var_1C] +
and edx [esp+3Ch+var_14] +
cmp eax edx +
setnz al  +
movzx eax al +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_10] +
movzx ecx byte ptr [esp+3Ch+var_2C] +
mov eax edx +
not eax  +
shr eax 1 +
and eax edx +
mov edx [esp+3Ch+var_18] +
shr eax cl +
mov ecx [esp+3Ch+var_20] +
xor edx eax +
sub edx eax +
mov eax ecx +
xor eax edx +
add edx ecx +
xor edx ecx +
not eax  +
and eax edx +
and eax [esp+3Ch+var_14] +
test [esp+3Ch+var_1C] eax +
mov eax 1 +
cmovz eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_24] eax +
jmp loc_4188B5  +
cmp edi 1 +
jnz loc_418B07  +
mov eax [esp+3Ch+arg_C] +
mov [eax] cl +
mov eax [esp+3Ch+var_24] +
jmp loc_418885  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov edi [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] edi +
call eax  +
mov eax [esp+3Ch+var_24] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 5FDh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_404070  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
jmp loc_418AEE  +
mov edx [esp+3Ch+var_18] +
mov ecx [esp+3Ch+var_20] +
mov eax edx +
add edx ecx +
or eax ecx +
and edx [esp+3Ch+var_14] +
or eax edx +
test [esp+3Ch+var_1C] eax +
setnz al  +
movzx eax al +
mov [esp+3Ch+var_24] eax +
jmp loc_4188B5  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
mov [esp+2Ch+var_2C] edx +
mov edi [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] ecx +
mov ebp [esp+2Ch+arg_14] +
mov [esp+2Ch+var_1C] edx +
mov [esp+2Ch+var_10] eax +
call sub_407E10  +
mov [esp+2Ch+var_2C] esi +
mov ebx eax +
call sub_417EE0  +
imul ebx edi +
mov edx [esp+2Ch+var_1C] +
mov ecx [esp+2Ch+var_18] +
add ebx eax +
movzx eax byte ptr [edx+28h] +
and eax 18h +
cmp al 10h +
jz loc_418BD5  +
mov eax [ecx+28h] +
test eax eax +
jz loc_418BD5  +
cmp eax ebx +
jnb loc_418BDC  +
add esp 2Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+24h] +
cmp eax ebx +
jb loc_418BC8  +
mov ebx [esi+10h] +
add ebp [esp+2Ch+var_10] +
test ebx ebx +
jz loc_418BFC  +
mov eax [ecx+3Ch] +
sub ebp [eax+1Ch] +
sub ebp [ecx+38h] +
mov ecx [esi+30h] +
mov eax ebp +
sub eax edi +
test ecx ecx +
cmovnz ebp eax +
add edi [esp+2Ch+var_14] +
mov [esp+2Ch+arg_8] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_C] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_418840  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_14] eax +
call sub_417EE0  +
cmp eax 8 +
mov ebx eax +
ja loc_418D12  +
jmp ds:off_4790A4[eax*4]  +
cmp ebx 1 +
jnz loc_418D50  +
mov eax [esp+2Ch+var_14] +
mov [eax] dl +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 636h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_404070  +
lea esi [esi+0] +
mov eax [esp+2Ch+var_14] +
movzx eax byte ptr [eax] +
mov edx [edi+2Ch] +
mov ecx 0Eh +
mov edi offset a_debug_ranges +
mov esi [esi] +
mov [esp+2Ch+var_10] edx +
not edx  +
and edx eax +
cmps   +
jnz loc_418CBF  +
mov eax edx +
or eax 1 +
test byte ptr [esp+2Ch+var_10] 1 +
cmovnz edx eax +
cmp ebx 2 +
jz loc_418D30  +
jle loc_418C55  +
cmp ebx 4 +
jz loc_418D70  +
cmp ebx 8 +
jnz loc_418D50  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 658h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_404070  +
mov eax [ebp+4] +
mov ecx [esp+2Ch+var_14] +
mov eax [eax+34h] +
mov [esp+2Ch+var_2C] ecx +
call eax  +
jmp loc_418C97  +
mov eax [ebp+4] +
mov ecx [esp+2Ch+var_14] +
mov eax [eax+28h] +
mov [esp+2Ch+var_2C] ecx +
call eax  +
jmp loc_418C97  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 626h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_404070  +
nop   +
mov eax [ebp+4] +
mov eax [eax+3Ch] +
mov ecx [esp+2Ch+var_14] +
mov [esp+2Ch+arg_0] edx +
mov [esp+2Ch+arg_4] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 64Ah +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_404070  +
lea esi [esi+0] +
mov eax [ebp+4] +
mov eax [eax+30h] +
jmp loc_418D36  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov edx [edx+148h] +
jmp edx  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+14Ch] +
jmp edx  +
***
sub esp 1Ch +
cmp dword ptr [esp+24h] 225h +
jnz loc_418DF7  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_407D20  +
mov edx eax +
mov eax offset unk_4792C0 +
cmp edx 20h +
jz loc_418E0D  +
cmp edx 40h +
jz loc_418E11  +
cmp edx 10h +
jnz loc_418DE3  +
mov dword ptr [esp+4] 1E30h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_404040  +
mov dword ptr [esp+4] 1E32h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_404040  +
mov dword ptr [esp+4] 1E35h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_404040  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+4] 1E2Ch +
mov dword ptr [esp] offset a____Binutil_13 +
mov [esp+0Ch] eax +
call sub_404040  +
mov eax [esp+0Ch] +
add esp 1Ch +
retn   +
***
jmp loc_418E40  +
mov eax [esp+4] +
cmp eax 87Ah +
ja loc_418E53  +
mov eax ds:off_486D40[eax*4] +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov edx [esp+28h] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_418E84  +
mov eax [esp+2Ch] +
mov dword ptr [eax] 0 +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [edx+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRM_0 +
call eax  +
jmp loc_418E71  +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov eax 1 +
mov edx [esp+24h] +
test edx edx +
jz loc_418ECF  +
mov dword ptr [esp] offset aInput_section_ +
call off_4733A4  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+68h] +
mov edi [esp+70h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
mov [esp+4] ebx +
mov [esp] ebp +
call loc_404140  +
test eax eax +
mov esi eax +
js loc_4190B1  +
lea eax [esp+6Ch] +
mov [esp+8] eax +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_409760  +
test eax eax +
jz loc_4190B1  +
test esi esi +
jnz loc_418F50  +
***
mov eax [esp+arg_68] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call sub_408000  +
test eax eax +
mov esi eax +
mov [esp+2Ch] eax +
jz loc_4190B1  +
mov eax [esp+74h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_404180  +
test eax eax +
js loc_4190A5  +
jz loc_41906D  +
mov eax [esi] +
test eax eax +
jz loc_41906D  +
mov [esp+28h] ebp +
mov [esp+70h] edi +
nop   +
***
mov dword ptr [esp+3Ch] 0 +
mov edx [esi] +
mov eax [edx] +
mov eax [eax] +
mov eax [eax+10h] +
test eax eax +
jz loc_418FC9  +
cmp eax offset off_473250 +
jz loc_418FC9  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jz loc_419210  +
mov ecx [esp+70h] +
xor eax eax +
mov [esp-5Ch+arg_64] ebx +
mov [esp-5Ch+arg_5C] edx +
test ecx ecx +
cmovnz eax [esp+60h] +
lea ecx [esp+3Ch] +
mov [esp-5Ch+arg_6C] ecx +
mov [esp-5Ch+arg_68] eax +
mov eax [esp-5Ch+arg_C4] +
mov [esp-5Ch+arg_60] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_418030  +
mov edx [esp+70h] +
test edx edx +
jz loc_41901B  +
mov edx [ebx+3Ch] +
mov edi [esi] +
mov ecx [edx+4Ch] +
mov ebp [edx+48h] +
mov [ebp+ecx*4+0] edi +
add ecx 1 +
mov [edx+4Ch] ecx +
test eax eax +
jz loc_419060  +
cmp eax 7 +
ja sub_419030  +
jmp ds:off_4791C4[eax*4]  +
***
mov edi [esp+64h] +
mov ecx [esi] +
mov edx [edi+18h] +
mov edx [edx+2Ch] +
mov [esp-5Ch+arg_68] eax +
mov eax [esp+60h] +
mov [esp-5Ch+arg_64] ecx +
mov [esp-5Ch+arg_60] ebx +
mov [esp-5Ch+arg_58] offset aXPBARelocation +
mov [esp-5Ch+arg_5C] eax +
call edx  +
lea esi [esi+0] +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_418FA0  +
mov eax [esp+2Ch] +
mov [esp-5Ch+arg_58] eax +
call free  +
jmp loc_418F3E  +
***
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_0 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_38] +
test eax eax +
jz loc_419286  +
mov edi [esp+arg_60] +
mov ecx [esi] +
mov edx [edi+18h] +
mov ecx [ecx+4] +
mov edi [esp+arg_24] +
mov edx [edx+20h] +
mov [esp+arg_0] eax +
mov eax [esp+arg_60] +
mov [esp+arg_C] ecx +
mov [esp+arg_8] ebx +
mov [esp+arg_4] edi +
mov [esp+0] eax +
call edx  +
test eax eax +
jz loc_4190A5  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_418FA0  +
jmp loc_41906D  +
***
mov eax [esp+arg_60] +
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_1 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
jmp loc_4190B1  +
***
mov eax [esp+arg_60] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov edi eax +
mov eax [esi] +
mov edx [eax+8] +
mov ecx [eax+4] +
mov ebp edx +
mov edx [eax+0Ch] +
mov eax [eax] +
mov edx [edx+20h] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp+arg_18] ecx +
mov ecx [esp+arg_24] +
mov [esp+arg_14] ebx +
mov [esp+arg_C] ebp +
mov [esp+arg_4] eax +
mov eax [esp+arg_60] +
mov [esp+arg_10] ecx +
mov [esp+arg_8] edx +
mov [esp+arg_0] 0 +
mov [esp+0] eax +
call edi  +
test eax eax +
jz loc_4190A5  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_418FA0  +
jmp loc_41906D  +
***
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_418FC9  +
cmp ax 200h +
jz loc_418FC9  +
mov eax [esp-5Ch+arg_C4] +
mov edi eax +
mov eax [edx+4] +
mov ebp eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_407E10  +
mov edx [esi] +
mov edx [edx+0Ch] +
mov [esp-5Ch+arg_60] ebx +
imul eax ebp +
mov [esp-5Ch+arg_58] edx +
add eax edi +
mov [esp-5Ch+arg_64] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_5C] eax +
call sub_418C20  +
mov eax [esi] +
mov edx off_4732EC +
mov [eax] edx +
mov eax [esi] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] offset unk_479200 +
xor eax eax +
jmp loc_418FFE  +
***
mov [esp+arg_0] 1F1Ch +
mov dword ptr [esp+0] offset a____Binutil_13 +
call sub_404040  +
mov eax [esp+arg_38] +
jmp loc_4190CC  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 10h +
mov [esp+1Ch+var_1C] eax +
call sub_409270  +
test eax eax +
jz loc_4192D2  +
mov dword ptr [eax+0Ch] 0 +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test byte ptr [ebx+2Ch] 1 +
jz loc_419320  +
mov esi [ebx+9Ch] +
test esi esi +
jz loc_419320  +
mov [esp+14h+var_14] esi +
call sub_408DD0  +
mov [esp+14h+var_14] esi +
call free  +
mov dword ptr [ebx+9Ch] 0 +
and byte ptr [ebx+2Ch] 0FEh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+14h+var_10] 30Ch +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_404040  +
mov esi [ebx+9Ch] +
jmp loc_4192F9  +
***
sub esp 1Ch +
mov edx [edx+18h] +
retn   +
***
or dword ptr [eax+0Ch] 80h +
***
mov ecx [edx+14h] +
mov dword ptr [eax+10h] offset off_4731A8 +
mov edx [eax+10h] +
test edx edx +
jz loc_419421  +
test byte ptr [eax+0Dh] 8 +
jnz sub_419396  +
mov dword ptr [esp+4] 8E9h +
mov dword ptr [esp+0] offset a____Binutil_11 +
call sub_404040  +
jmp sub_419396  +
mov dword ptr [eax+10h] offset off_4731A8 +
mov dword ptr [eax+8] 0 +
add esp 1Ch +
retn   +
mov dword ptr [esp+8] offset aSet_symbol_fro +
mov [esp-1Ch+arg_1C] 8E2h +
mov [esp-1Ch+arg_18] offset a____Binutil_11 +
call sub_404070  +
or dword ptr [eax+0Ch] 800h +
mov dword ptr [eax+10h] offset off_473250 +
mov dword ptr [eax+8] 0 +
jmp sub_419396  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [edx] +
mov eax [ecx] +
mov edi [esp+28h+arg_0] +
cmp ebx eax +
jnb loc_419473  +
mov eax [ebp+0] +
test edi edi +
mov [eax+ebx*4] edi +
jz loc_4194B0  +
add ebx 1 +
mov eax 1 +
mov [esi] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax eax +
jz loc_4194A0  +
lea edx [eax+eax] +
mov [ecx] edx +
shl eax 3 +
mov edx [ebp+0] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_408090  +
test eax eax +
jz loc_4194B7  +
mov [ebp+0] eax +
mov ebx [esi] +
jmp loc_41945A  +
mov dword ptr [ecx] 7Ch +
mov ax 1F0h +
jmp loc_41947F  +
mov eax 1 +
jmp loc_41946B  +
xor eax eax +
jmp loc_41946B  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
mov esi [esp+24h+arg_4] +
mov eax [edx+1Ch] +
test eax eax +
jnz loc_419516  +
mov ecx [esi] +
mov dword ptr [edx+1Ch] 1 +
movzx eax byte ptr [ecx+1] +
and eax 18h +
cmp al 18h +
jz loc_419516  +
cmp al 10h +
jz loc_419550  +
mov ebx [edx+20h] +
test ebx ebx +
jz loc_419521  +
mov eax ebx +
call sub_419340  +
mov eax [esi+4] +
or dword ptr [ebx+0Ch] 2 +
mov ecx [esi+8] +
mov [esp+24h+var_24] ebx +
lea edx [eax+7Ch] +
add eax 78h +
call sub_419440  +
test eax eax +
jz loc_419584  +
mov eax 1 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+4] +
mov [esp+24h+var_8] edx +
mov ecx [eax+4] +
mov ecx [ecx+10Ch] +
mov [esp+24h+var_24] eax +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_4195A0  +
mov edx [esp+24h+var_8] +
mov eax [edx+4] +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+4] eax +
jmp loc_4194F3  +
mov ebx [edx+4] +
mov eax [ecx+20h] +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_8] edx +
call sub_409000  +
mov edx [esp+24h+var_8] +
test eax eax +
jnz loc_4194EC  +
jmp loc_419516  +
mov [esp+24h+var_1C] offset a_bfd_generic_1 +
mov [esp+24h+var_20] 93Fh +
mov [esp+24h+var_24] offset a____Binutil_11 +
call sub_404070  +
xor eax eax +
jmp loc_41951B  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
mov eax [eax+104h] +
mov [esp+14h+var_14] ebx +
call eax  +
test eax eax +
mov esi eax +
js loc_419606  +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call sub_406290  +
test eax eax +
mov [ebx+78h] eax +
jz loc_419602  +
mov edx [ebx+4] +
mov edx [edx+108h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call edx  +
test eax eax +
js loc_419606  +
mov [ebx+7Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_4195DE  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_419660  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_409320  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41965A  +
mov dword ptr [edx+0Ch] 0 +
mov eax edx +
mov dword ptr [edx+10h] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 1Ch +
mov [esp+18h+var_18] ebx +
call sub_409270  +
test eax eax +
jnz loc_419620  +
xor eax eax +
jmp loc_41965A  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_4196C0  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_419610  +
test eax eax +
jz loc_4196D4  +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+20h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 24h +
mov [esp+18h+var_18] ebx +
call sub_409270  +
test eax eax +
jnz loc_419690  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
test byte ptr [esi+2Ch] 1 +
jnz loc_4196FD  +
mov eax [esi+9Ch] +
test eax eax +
jz loc_419711  +
mov [esp+14h+var_10] 1DEh +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_404040  +
mov eax [esp+14h+arg_C] +
mov dword ptr [ebx+1Ch] 0 +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+28h] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_408DA0  +
test eax eax +
jz loc_419753  +
mov dword ptr [ebx+24h] offset sub_4192E0 +
or byte ptr [esi+2Ch] 1 +
mov [esi+9Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_409000  +
test eax eax +
jz loc_419793  +
mov edx [esp+1Ch+arg_10] +
test edx edx +
jnz loc_41979A  +
add esp 1Ch +
retn   +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_419797  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_C] +
mov ebx [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_10] +
mov edi [ebx+28h] +
mov [esp+3Ch+var_10] eax +
mov eax [esp+3Ch+arg_14] +
test edi edi +
mov [esp+3Ch+var_18] eax +
jz loc_4198CE  +
mov ecx [ecx+4] +
movzx eax byte ptr [edx] +
cmp al [ecx+18h] +
mov [esp+3Ch+var_1D] al +
jz loc_4198C0  +
cmp al [ebx+8] +
jz loc_4198C0  +
mov ebp edx +
mov [esp+3Ch+var_1D] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_14] edx +
call sub_409000  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_4198C8  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 9 +
mov [esp+3Ch+var_3C] eax +
call sub_408000  +
test eax eax +
mov esi eax +
jz loc_419990  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea edx [esi+eax] +
lea eax [esi+eax+7] +
mov dword ptr [edx] 72775F5Fh +
mov dword ptr [edx+4] 5F7061h +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_419760  +
mov [esp+3Ch+var_3C] esi +
mov ebx eax +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [edx+1] +
jmp loc_419809  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_419900  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+arg_4] edx +
mov [esp+3Ch+arg_10] edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+arg_0] eax +
mov [esp+3Ch+arg_C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+arg_8] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_419760  +
mov edi offset a__real_ +
mov ecx 7 +
mov esi ebp +
cmps   +
jnz loc_4198CE  +
mov eax [ebx+28h] +
add ebp 7 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call sub_409000  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_4198CE  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 2 +
mov [esp+3Ch+var_3C] eax +
call sub_408000  +
test eax eax +
mov esi eax +
jz loc_419990  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
call strcat  +
mov ecx [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] ecx +
jmp loc_4198A0  +
xor eax eax +
jmp loc_4198B8  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
test byte ptr [ecx+15h] 1 +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_24] edx +
jz loc_419C10  +
mov eax [esp+44h+arg_0] +
mov ebp [eax+10h] +
mov eax [ebp+94h] +
mov [esp+44h+var_1C] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_419C00  +
cmp [ebp+3Ch] edi +
jz loc_4199F0  +
mov [esp+44h+var_40] 0A32h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_404040  +
mov eax [esp+44h+arg_0] +
mov eax [eax+8] +
cmp [ebp+38h] eax +
jz loc_419A10  +
mov [esp+44h+var_40] 0A33h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_404040  +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
cmp [ebp+24h] eax +
jz loc_419A30  +
mov [esp+44h+var_40] 0A34h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_404040  +
mov eax [esp+44h+var_24] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_419C72  +
mov ecx [esp+44h+arg_4] +
test ecx ecx +
jnz loc_419AB7  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_419D83  +
mov eax [esp+44h+var_1C] +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
jbe loc_419AB7  +
mov [esp+44h+var_18] edi +
mov edi ebx +
mov ebx eax +
jmp loc_419A8F  +
mov eax [esi+10h] +
cmp eax offset off_4731A8 +
jz loc_419A9A  +
test byte ptr [eax+15h] 10h +
jnz loc_419A9A  +
cmp eax offset off_4732F8 +
jz loc_419A9A  +
add edi 4 +
cmp ebx edi +
jbe loc_419AB3  +
mov esi [edi] +
test dword ptr [esi+0Ch] 3882h +
jz loc_419A71  +
mov edx [esi+14h] +
test edx edx +
jz loc_419CD0  +
mov eax esi +
add edi 4 +
call sub_419340  +
cmp ebx edi +
ja loc_419A8F  +
mov edi [esp+44h+var_18] +
mov eax [edi+14h] +
and eax 2100000h +
cmp eax 2000000h +
jnz loc_419B40  +
mov edx [ebp+24h] +
test edx edx +
jz loc_419CC2  +
mov eax [esp+44h+var_20] +
test byte ptr [eax+2Bh] 10h +
jz loc_419C30  +
mov ebx [edi+6Ch] +
test ebx ebx +
jz loc_419DA0  +
mov eax [ebp+38h] +
xor esi esi +
test eax eax +
jnz loc_419D67  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_407E10  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_30] edx +
imul esi eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_44] eax +
call sub_4033C0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_419C05  +
mov esi [ebp+24h] +
mov eax [ebp+28h] +
cmp esi eax +
cmovb esi eax +
mov [esp+44h+var_44] esi +
call sub_408000  +
test esi esi +
mov ebx eax +
jz loc_419B61  +
test eax eax +
jz loc_419C68  +
mov eax [esp+44h+var_1C] +
mov ecx [esp+44h+var_24] +
mov eax [eax+78h] +
mov [esp+44h+var_30] eax +
movzx eax byte ptr [ecx] +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_40] ecx +
and eax 3 +
cmp al 2 +
setz al  +
movzx eax al +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+arg_0] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_404890  +
test eax eax +
mov esi eax +
jz loc_419D16  +
mov eax [esp+44h+var_20] +
mov ecx [ebp+38h] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_24] ecx +
call sub_407E10  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] esi +
imul eax [esp+44h+var_24] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_4033C0  +
test eax eax +
jz loc_419D16  +
test ebx ebx +
jz loc_419C00  +
mov [esp+44h+var_44] ebx +
call free  +
nop   +
lea esi [esi+0] +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_40] 0A2Bh +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_404040  +
jmp loc_4199BB  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] offset unk_488FBF +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_4033C0  +
test eax eax +
jnz loc_419ADF  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4Ch] +
test esi esi +
jz loc_419A42  +
mov ebx [edi+48h] +
test ebx ebx +
jnz loc_419A42  +
mov eax [esp+44h+var_20] +
mov eax [eax+4] +
mov edx [eax] +
mov eax [esp+44h+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
mov [esp+44h+var_3C] edx +
mov [esp+44h+var_44] offset aAttemptToDoRel +
mov [esp+44h+var_40] eax +
call off_4733A4  +
mov [esp+44h+var_44] 3 +
call sub_4040F0  +
xor eax eax +
jmp loc_419C05  +
xor esi esi +
jmp loc_419B43  +
cmp dword ptr [esi+10h] offset off_4731A8 +
jz loc_419D30  +
mov eax [esp+44h+var_24] +
mov edx [esi+4] +
mov eax [eax+1Ch] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_44] eax +
call sub_419760  +
mov edx eax +
test edx edx +
jz loc_419A88  +
jmp loc_419AA5  +
test ebx ebx +
jz loc_419C68  +
mov [esp+44h+var_44] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_4197B0  +
mov edx eax +
jmp loc_419D09  +
mov [esp+44h+var_40] 0A87h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_404040  +
mov esi [ebp+38h] +
jmp loc_419AF7  +
call sub_4195B0  +
test eax eax +
jz loc_419C68  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
jmp loc_419A59  +
mov [esp+44h+var_40] 0A86h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_404040  +
jmp loc_419AEA  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_0] +
mov ebx [ebp+4] +
mov ecx [ecx+4] +
movzx eax byte ptr [ebx] +
cmp al [ecx+18h] +
jz loc_419E00  +
cmp al [edx+8] +
jz loc_419E00  +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_419E13  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_419DF6  +
mov eax [edx+28h] +
lea esi [ebx+7] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] edx +
call sub_409000  +
test eax eax +
jz loc_419DF6  +
mov eax [ebp+4] +
mov edx [esp+2Ch+var_10] +
cmp ebx eax +
jz loc_419E95  +
movzx eax byte ptr [eax] +
movzx esi byte ptr [ebx+6] +
mov [ebx+6] al +
mov eax [edx+1Ch] +
lea edx [ebx+6] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_419760  +
mov ebp eax +
mov eax esi +
test al al +
jz loc_419DF6  +
mov [ebx+6] al +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+1Ch] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_419760  +
mov ebp eax +
jmp loc_419DF6  +
***
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
mov edx [esi+10h] +
test edx edx +
jz loc_419F88  +
mov [esp+14h+var_10] 2A3h +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_404040  +
mov eax [ebx+20h] +
test eax eax +
jz loc_419F92  +
mov [eax+10h] esi +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_419FA2  +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+1Ch] esi +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+arg_0] +
lea esi [ebx+1Ch] +
mov edx esi +
nop   +
lea esi [esi+0] +
mov eax [edx] +
test eax eax +
jz loc_419FE7  +
test byte ptr [eax+0Ch] 0FDh +
jnz loc_419FF0  +
mov ecx [eax+10h] +
mov [edx] ecx +
mov dword ptr [eax+10h] 0 +
cmp eax [ebx+20h] +
jnz loc_419FC0  +
cmp edx esi +
jz loc_419FF5  +
sub edx 10h +
mov [ebx+20h] edx +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+10h] +
jmp loc_419FC0  +
mov dword ptr [ebx+20h] 0 +
jmp loc_419FE7  +
***
mov [esp+18h+var_18] 2Ch +
call sub_408000  +
test eax eax +
jz loc_41A041  +
mov ebx eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_C] 24h +
mov [esp+18h+var_10] offset sub_419680 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_4196E0  +
test eax eax +
jz loc_41A045  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_41A03A  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_41A03A  +
***
jmp sub_41A060  +
***
mov eax [esp+arg_0] +
mov edx [eax+78h] +
test edx edx +
jz loc_41A071  +
mov eax 1 +
retn   +
jmp sub_4195B0  +
***
mov eax [esp+4] +
movzx edx word ptr [eax+18h] +
mov dword ptr [eax+3Ch] offset off_473250 +
and dx 0FC7Fh +
or dh 2 +
mov [eax+18h] dx +
mov edx [eax+1Ch] +
mov [eax+38h] edx +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+3Ch+arg_10] +
mov ebp [esp+3Ch+arg_0] +
test edx edx +
jz loc_41AD14  +
cmp [esp+3Ch+arg_10] offset off_4732F8 +
jz loc_41A470  +
test [esp+3Ch+arg_C] 2000h +
jnz loc_41A470  +
test [esp+3Ch+arg_C] 1000h +
jnz loc_41ABD0  +
test [esp+3Ch+arg_C] 800h +
jnz loc_41AC00  +
cmp [esp+3Ch+arg_10] offset off_4731A8 +
jz loc_41AD8A  +
test byte ptr [esp+3Ch+arg_C] 80h +
jnz loc_41AD2D  +
mov eax [esp+3Ch+arg_10] +
test byte ptr [eax+15h] 10h +
jz loc_41AD40  +
mov esi [esp+3Ch+arg_8] +
mov edi offset a__gnu_lto_slim +
mov ecx 0Fh +
cmps   +
mov esi 4 +
setnbe dl  +
setb al  +
xor edi edi +
cmp dl al +
jnz loc_41A4AF  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov [esp+3Ch+var_3C] offset aSPluginNeededT +
mov [esp+3Ch+var_38] eax +
call off_4733A4  +
jmp loc_41A4AF  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_4197B0  +
test eax eax +
mov edi eax +
jz loc_41A6A0  +
mov esi 5 +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_41AB70  +
mov eax [esp+3Ch+arg_24] +
mov ebx [eax] +
test ebx ebx +
jz loc_41AB70  +
cmp byte ptr [ebp+0] 0 +
js loc_41A4FA  +
mov eax [ebp+24h] +
test eax eax +
jz loc_41A535  +
mov ecx [esp+3Ch+arg_8] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_409000  +
test eax eax +
jz loc_41A535  +
mov eax [ebp+18h] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+28h] +
mov [esp+3Ch+var_24] ecx +
mov ecx [esp+3Ch+arg_14] +
mov [esp+8] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+0Ch] ecx +
call eax  +
test eax eax +
jz loc_41A6A0  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_41A543  +
mov eax [esp+3Ch+arg_24] +
mov [eax] ebx +
movzx edx byte ptr [ebx+0Ch] +
movzx eax dl +
lea eax [eax+esi*8] +
mov eax ds:dword_4892C0[eax*4] +
cmp eax 14h +
ja loc_41A7B0  +
jmp ds:off_489044[eax*4]  +
cmp dl 5 +
jz loc_41A57D  +
mov [esp+3Ch+var_38] 609h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404040  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+0Ch] 3 +
mov [esp+8] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_41A6A0  +
movzx edx byte ptr [ebx+0Ch] +
mov byte ptr [ebx+0Ch] 3 +
mov eax [esp+3Ch+arg_10] +
mov [ebx+14h] eax +
mov eax [esp+3Ch+arg_14] +
and byte ptr [ebx+0Dh] 0FDh +
mov [ebx+18h] eax +
mov eax [esp+3Ch+arg_20] +
test eax eax +
jz loc_41A7B0  +
mov eax [esp+3Ch+arg_8] +
cmp byte ptr [eax] 5Fh +
jnz loc_41A7B0  +
add eax 1 +
mov esi eax +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_8] +
movzx ecx byte ptr [eax+1] +
cmp cl 5Fh +
jnz loc_41A606  +
mov eax esi +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 5Fh +
jz loc_41A5F7  +
mov [esp+3Ch+var_20] eax +
cmp cl 47h +
jnz loc_41A7B0  +
mov esi [esp+3Ch+var_20] +
mov ecx 7 +
mov edi offset aGlobal_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_41A7B0  +
mov eax [esp+3Ch+var_20] +
cmp byte ptr [eax+8] 49h +
setz cl  +
cmp byte ptr [eax+8] 44h +
jnz loc_41AD4C  +
mov edi [esp+3Ch+var_20] +
movzx eax byte ptr [edi+9] +
cmp [edi+7] al +
jnz loc_41A7B0  +
cmp dl 4 +
jz loc_41AD9B  +
mov eax [ebp+18h] +
movzx esi cl +
mov edi [esp+3Ch+arg_14] +
mov edx [ebx+4] +
mov eax [eax+10h] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+8] edx +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+0Ch] edi +
call eax  +
test eax eax +
jnz loc_41A7B0  +
lea esi [esi+0] +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+10h] +
test eax eax +
jnz loc_41A6C2  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_41A6C2  +
mov [ebx+10h] ebx +
mov ebx [ebx+14h] +
jmp loc_41A543  +
cmp dl 5 +
jz loc_41A6E9  +
mov [esp+3Ch+var_38] 6C9h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404040  +
mov eax [ebp+18h] +
mov esi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+0Ch] 6 +
mov [esp+8] esi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_41A6A0  +
movzx eax byte ptr [edi+0Ch] +
cmp al 6 +
jz loc_41ACB8  +
test al al +
jnz loc_41A73E  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [edi+0Ch] 1 +
mov [edi+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call sub_419F60  +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_41AB60  +
mov byte ptr [ebx+0Ch] 6 +
mov edx 6 +
xor esi esi +
mov [ebx+14h] edi +
jmp loc_41A547  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_38] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jz loc_41A7B0  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+0Ch] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] edi +
call eax  +
test eax eax +
jz loc_41A6A0  +
lea esi [esi+0] +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov ecx [ebx+4] +
mov edx [eax+4] +
mov [esp+8] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
call edx  +
test eax eax +
mov esi eax +
jz loc_41A6A0  +
mov eax [ebx] +
mov edx [esp+3Ch+arg_1C] +
mov [esi] eax +
mov eax [ebx+4] +
test edx edx +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+0Ch] +
mov [esi+0Ch] eax +
mov eax [ebx+10h] +
mov [esi+10h] eax +
mov eax [ebx+14h] +
mov [esi+14h] eax +
mov eax [ebx+18h] +
mov byte ptr [esi+0Ch] 7 +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov eax [esp+3Ch+arg_18] +
jz loc_41AD60  +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [eax+1] +
mov [esp+3Ch+var_38] edx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_20] edx +
mov [esp+3Ch+var_3C] eax +
call sub_409270  +
test eax eax +
mov edi eax +
jz loc_41A6A0  +
mov edx [esp+3Ch+var_20] +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] edi +
mov [esp+8] edx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov [esi+18h] edi +
mov [esp+8] esi +
mov [esp+3Ch+var_38] ebx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_409210  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_41A7B0  +
mov eax [esp+3Ch+arg_24] +
mov [eax] esi +
jmp loc_41A7B0  +
test byte ptr [ebp+1] 1 +
mov eax ebx +
jz loc_41ABE0  +
test byte ptr [ebx+0Dh] 1 +
jz loc_41A7C0  +
mov ecx [ebp+18h] +
cmp dl 7 +
mov ecx [ecx+14h] +
jnz loc_41A8BD  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
cmp dl 7 +
jz loc_41A8B1  +
cmp dl 5 +
ja loc_41AD39  +
jmp ds:off_489098[edx*4]  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov dword ptr [esp+0Ch] 5 +
jmp loc_41A790  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_41A7B0  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_41A7B0  +
mov [ebx+10h] ebx +
jmp loc_41A7B0  +
test dl dl +
jz loc_41AD00  +
mov byte ptr [ebx+0Ch] 5 +
mov [esp+3Ch+var_38] 8 +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_409270  +
test eax eax +
mov [ebx+14h] eax +
jz loc_41A6A0  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_408A10  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_473100 +
mov [esi] edx +
jz loc_41AD68  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_41AC10  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_402F80  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
and byte ptr [ebx+0Dh] 0FDh +
jmp loc_41A7B0  +
cmp eax 4 +
jnz loc_41A5B0  +
mov byte ptr [ebx+0Ch] 4 +
jmp loc_41A5B4  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 2 +
mov [ebx+14h] eax +
jmp loc_41A7B0  +
mov dword ptr [esp+8] offset a_bfd_generic_l +
mov [esp+3Ch+var_38] 5F3h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404070  +
nop   +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_419F60  +
jmp loc_41A7B0  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+0Ch] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov dword ptr [esp+8] 225h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+0Ch] edi +
call eax  +
test eax eax +
jnz loc_41A7B0  +
jmp loc_41A6A0  +
mov eax [ebx+18h] +
test eax eax +
jz loc_41A6C2  +
mov ecx [esp+3Ch+arg_4] +
test byte ptr [ecx+2Ah] 20h +
jnz loc_41A6C2  +
mov ecx [ebx+4] +
mov edx [ebp+18h] +
mov [esp+3Ch+var_20] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [edx+14h] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+0Ch] ecx +
mov ecx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] ecx +
call edx  +
test eax eax +
jz loc_41A6A0  +
mov dword ptr [ebx+18h] 0 +
jmp loc_41A6C2  +
cmp dl 5 +
jz loc_41AABC  +
mov [esp+3Ch+var_38] 68Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404040  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov dword ptr [esp+0Ch] 5 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] edi +
call eax  +
test eax eax +
jz loc_41A6A0  +
mov eax [ebx+18h] +
cmp [esp+3Ch+arg_14] eax +
jbe loc_41A7B0  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_408A10  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_473100 +
mov [esi] edx +
jz loc_41AD79  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_41AC20  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_402F80  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
jmp loc_41A7B0  +
mov byte ptr [ebx+0Ch] 6 +
mov [ebx+14h] edi +
jmp loc_41A7B0  +
cmp esi 1 +
jbe loc_41AC30  +
mov ecx [esp+3Ch+arg_1C] +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] ecx +
mov ecx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_419760  +
mov ebx eax +
test ebx ebx +
jnz loc_41A4C9  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_41A6A0  +
mov eax [esp+3Ch+arg_24] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_41A6A2  +
xor edi edi +
mov esi 6 +
jmp loc_41A4AF  +
mov ecx [ebx+10h] +
test ecx ecx +
jnz loc_41A8A6  +
mov ecx [ebp+1Ch] +
cmp [ecx+20h] ebx +
jnz loc_41A89C  +
jmp loc_41A8A6  +
xor edi edi +
mov esi 7 +
jmp loc_41A4AF  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_41A998  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_41A7B0  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_4197B0  +
mov ebx eax +
jmp loc_41ABA6  +
mov edx [ebx+14h] +
mov edx [edx+4] +
mov edx [edx+94h] +
mov eax [eax+4] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_38] eax +
call ecx  +
test eax eax +
jnz loc_41A7B0  +
jmp loc_41A6A0  +
mov edx [ebx+14h] +
mov edx [edx+94h] +
jmp loc_41AC73  +
mov edx [ebx+14h] +
jmp loc_41AC73  +
cmp [edi+14h] ebx +
jnz loc_41A73E  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] offset aBIndirectSymbo +
mov [esp+0Ch] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call off_4733A4  +
mov [esp+3Ch+var_3C] 5 +
call sub_4040F0  +
xor eax eax +
jmp loc_41A6A2  +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_419F60  +
jmp loc_41A918  +
mov [esp+3Ch+var_38] 5A8h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404040  +
jmp loc_41A3E5  +
xor edi edi +
mov esi 3 +
jmp loc_41A4AF  +
xor edx edx +
jmp loc_41AC73  +
xor edi edi +
mov esi 2 +
jmp loc_41A4AF  +
test cl cl +
jnz loc_41A646  +
jmp loc_41A7B0  +
mov [esi+18h] eax +
jmp loc_41A866  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_41A983  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_41AB41  +
mov esi [esp+3Ch+arg_C] +
xor edi edi +
shr esi 7 +
and esi 1 +
jmp loc_41A4AF  +
mov dword ptr [esp+8] offset a_bfd_generic_l +
mov [esp+3Ch+var_38] 643h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404070  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [eax+78h] +
mov [esp+0A8h+var_74] eax +
mov [esp+0A8h+var_6C] ecx +
test esi esi +
jz loc_41AF70  +
mov eax [esp+0A8h+var_74] +
mov eax [eax+7Ch] +
lea eax [esi+eax*4] +
cmp eax esi +
mov [esp+0A8h+var_78] eax +
jbe loc_41AEED  +
mov [esp+0A8h+var_70] ebp +
jmp loc_41AE23  +
cmp edx offset off_4731A8 +
jz loc_41AFAA  +
test byte ptr [edx+15h] 10h +
jnz loc_41AE32  +
cmp edx offset off_4732F8 +
jz loc_41AF1B  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
jbe loc_41AEED  +
mov ebx [esi] +
mov eax [ebx+0Ch] +
mov edx [ebx+10h] +
test eax 3882h +
jz loc_41ADF8  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_41AF22  +
cmp edx offset off_4732F8 +
jz loc_41AF22  +
test ah 10h +
mov edi [esp+0A8h+var_7C] +
jz loc_41AE70  +
lea edi [esi+4] +
mov ecx edi +
mov edi [esp+0A8h+var_7C] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_41AE70  +
mov esi [esi+4] +
mov edi [esi+4] +
mov esi ecx +
nop   +
lea ecx [esp+0A8h+var_5C] +
mov ebp [ebx+8] +
mov [esp+0A8h+var_84] ecx +
mov ecx [esp+0A8h+var_6C] +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+var_74] +
mov [esp+0A8h+var_8C] 0 +
mov [esp+0A8h+var_94] ebp +
mov [esp+0A8h+var_88] ecx +
mov ecx [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] eax +
mov eax [esp+0A8h+var_70] +
mov [esp+0A8h+var_98] edx +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_90] ecx +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_5C] 0 +
call sub_41A3C0  +
test eax eax +
jz loc_41AEF2  +
mov edx [ebx+0Ch] +
mov eax [esp+0A8h+var_5C] +
test dh 8 +
jz loc_41AF00  +
test eax eax +
jz loc_41AED9  +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_41AF00  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
mov dword ptr [ebx+14h] 0 +
ja loc_41AE23  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0A8h+var_70] +
mov ecx [edi+30h] +
mov edi [esp+0A8h+var_74] +
mov edi [edi+4] +
cmp [ecx+4] edi +
jz loc_41AF44  +
mov [ebx+14h] eax +
jmp loc_41AE16  +
mov edi [ebx+4] +
mov [esp+0A8h+var_7C] edi +
lea ecx [esi+4] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_41AE4E  +
mov esi [esi+4] +
mov edi [esp+0A8h+var_7C] +
mov esi [esi+4] +
mov [esp+0A8h+var_7C] esi +
mov esi ecx +
jmp loc_41AE70  +
mov edi [eax+20h] +
mov ecx [ebx+10h] +
test edi edi +
jz loc_41AF90  +
cmp ecx offset off_4731A8 +
jz loc_41AF13  +
test byte ptr [ecx+15h] 10h +
jnz loc_41AF61  +
mov [eax+20h] ebx +
jmp loc_41AF13  +
cmp dword ptr [edi+10h] offset off_4731A8 +
jnz loc_41AF13  +
mov [eax+20h] ebx +
jmp loc_41AF9F  +
call sub_4195B0  +
test eax eax +
jz loc_41AEF2  +
mov eax [esp+0A8h+var_74] +
mov esi [eax+78h] +
jmp loc_41ADDC  +
mov ecx [ecx+14h] +
mov [eax+20h] ebx +
and ch 10h +
jz loc_41AF13  +
or dh 2 +
mov [ebx+0Ch] edx +
jmp loc_41AF13  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_41AF22  +
jmp loc_41AE4E  +
push ebx  +
sub esp 18h +
movzx ebx byte ptr [eax+28h] +
and ebx 7 +
cmp ebx 1 +
jz loc_41B010  +
cmp ebx 2 +
jz loc_41AFE8  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ecx ecx +
mov ebx offset loc_41B250 +
mov ecx offset loc_41B230 +
cmovz ebx ecx +
mov [esp+8] ebx +
mov [esp+4] edx +
mov [esp] eax +
call sub_41A0C0  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
pop ebx  +
jmp loc_41ADC0  +
mov edx [esp+8] +
xor ecx ecx +
mov eax [esp+4] +
jmp loc_41AFC0  +
mov edx [esp+8] +
mov ecx 1 +
mov eax [esp+4] +
jmp loc_41AFC0  +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+2Ch] eax +
mov eax ebx +
mov ebx [ebx+78h] +
mov [esp+28h] ecx +
mov dword ptr [ecx] 0 +
test ebx ebx +
jz loc_41B1AD  +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
mov edi eax +
ja loc_41B090  +
jmp loc_41B1A0  +
mov eax [esi+8] +
add eax [ecx+1Ch] +
cmp eax [edx+18h] +
jbe loc_41B085  +
mov [edx+18h] eax +
add ebx 4 +
cmp edi ebx +
jbe loc_41B1A0  +
mov esi [ebx] +
mov eax [esi+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_41B0A4  +
test dword ptr [esi+0Ch] 2082h +
jz loc_41B085  +
mov edx [esi+4] +
mov eax [ebp+1Ch] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_419760  +
test eax eax +
mov edx eax +
jz loc_41B085  +
movzx eax byte ptr [eax+0Ch] +
mov ecx eax +
and ecx 0FFFFFFFBh +
cmp cl 1 +
jnz loc_41B085  +
mov ecx [esi+10h] +
test byte ptr [ecx+15h] 10h +
jz loc_41B1C0  +
cmp al 1 +
jnz loc_41B077  +
mov ecx [edx+14h] +
test ecx ecx +
jz loc_41B1C0  +
mov byte ptr [edx+0Ch] 5 +
mov dword ptr [esp+4] 8 +
mov eax [ebp+1Ch] +
mov [esp+20h] edx +
mov [esp+24h] ecx +
mov [esp] eax +
call sub_409270  +
mov edx [esp+20h] +
test eax eax +
mov [edx+14h] eax +
jz loc_41B1B6  +
mov ecx [esi+10h] +
mov eax [esi+8] +
add eax [ecx+1Ch] +
mov [edx+18h] eax +
mov [esp] eax +
call near ptr dword_408A10  +
mov edx [esp+20h] +
mov ecx [edx+14h] +
cmp eax 4 +
mov [esp+20h] ecx +
mov ecx 4 +
cmova eax ecx +
mov ecx [esp+20h] +
mov [ecx] eax +
mov eax [esi+10h] +
mov ecx [esp+24h] +
mov [esp+24h] edx +
cmp eax offset off_473100 +
jz loc_41B200  +
mov eax [eax] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_402F80  +
mov esi [esp+20h] +
mov edx [esp+24h] +
mov [esi+4] eax +
mov eax [edx+14h] +
add ebx 4 +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
cmp edi ebx +
ja loc_41B090  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4195B0  +
test eax eax +
jnz loc_41B220  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+28h] +
lea ecx [esp+2Ch] +
mov edx [esi+4] +
mov dword ptr [eax] 1 +
mov eax [ebp+18h] +
mov eax [eax] +
mov [esp+8] edx +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
test eax eax +
jz loc_41B1B6  +
mov ecx [esp+50h] +
mov edx ebp +
mov eax [esp+2Ch] +
call loc_41ADC0  +
jmp loc_41B1A5  +
mov [esp+0A8h+var_A4] offset aCommon +
mov [esp] ecx +
call sub_402F80  +
mov edx [esp+20h] +
mov [edx+4] eax +
mov edx [esp+24h] +
jmp loc_41B18B  +
mov eax [esp+2Ch] +
mov ebx [eax+78h] +
jmp loc_41B066  +
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp loc_41B040  +
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 1 +
jmp loc_41B040  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebp [esp+58h] +
mov eax [eax+78h] +
test eax eax +
jz loc_41B690  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_41B2A0  +
mov edi [esp+54h] +
mov ebx [edi+64h] +
test ebx ebx +
jnz loc_41B3D0  +
mov eax [esp+54h] +
mov edi [eax+78h] +
mov eax [eax+7Ch] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_41B680  +
mov eax [esp+50h] +
add eax 7Ch +
mov [esp+24h] eax +
mov eax [esp+50h] +
add eax 78h +
mov [esp+28h] eax +
jmp loc_41B382  +
mov edx [ebx+10h] +
cmp edx offset off_4731A8 +
jz loc_41B392  +
test byte ptr [edx+15h] 10h +
jnz loc_41B392  +
xor esi esi +
cmp edx offset off_4732F8 +
jz loc_41B392  +
movzx eax byte ptr [ebp+1] +
and eax 18h +
cmp al 18h +
jz loc_41B326  +
cmp al 10h +
jz loc_41B5F8  +
mov edx [ebx+0Ch] +
test dl 82h +
jz loc_41B4D0  +
mov eax [esp+54h] +
cmp [ebx] eax +
jz loc_41B670  +
mov eax [ebx+10h] +
xor ecx ecx +
cmp eax offset off_473250 +
jz loc_41B34A  +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_41B5D5  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_41B375  +
test ecx ecx +
jz loc_41B375  +
mov ecx [esp+0A8h+var_4C] +
mov edx [esp+0A8h+var_84] +
mov eax [esp+0A8h+var_80] +
mov [esp+0A8h+var_A8] ebx +
call sub_419440  +
test eax eax +
jz loc_41B429  +
test esi esi +
jz loc_41B375  +
mov dword ptr [esi+1Ch] 1 +
add edi 4 +
cmp [esp+0A8h+var_88] edi +
jbe loc_41B680  +
mov ebx [edi] +
mov eax [ebx+0Ch] +
test eax 3882h +
jz loc_41B2D4  +
mov esi [ebx+14h] +
test esi esi +
jz loc_41B586  +
mov ecx [esp+54h] +
mov eax [ebp+30h] +
mov ecx [ecx+4] +
cmp [eax+4] ecx +
jz loc_41B5E4  +
cmp byte ptr [esi+0Ch] 6 +
ja loc_41B4B0  +
movzx eax byte ptr [esi+0Ch] +
jmp ds:off_4890B0[eax*4]  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_41B2A0  +
cmp eax [ebx+3Ch] +
jnz loc_41B3C5  +
mov eax [esp+54h] +
mov edi [esp+54h] +
mov eax [eax+4] +
mov eax [eax+10Ch] +
mov [esp] edi +
call eax  +
test eax eax +
mov ecx eax +
jz loc_41B429  +
mov eax [esp+54h] +
mov eax [eax] +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 4001h +
mov [ecx+10h] ebx +
mov [ecx+4] eax +
mov eax [esp+50h] +
mov [esp] ecx +
mov ecx [esp+5Ch] +
lea edx [eax+7Ch] +
add eax 78h +
call sub_419440  +
test eax eax +
jnz loc_41B2A0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esi+14h] +
mov eax [ebx+0Ch] +
and eax 0FFFFF77Fh +
or eax 2 +
mov [ebx+0Ch] eax +
mov eax [esi+18h] +
mov [ebx+8] eax +
mov eax [esi+14h] +
mov [ebx+10h] eax +
jmp loc_41B2FB  +
or dword ptr [ebx+0Ch] 80h +
jmp loc_41B2FB  +
mov eax [esi+18h] +
or dword ptr [ebx+0Ch] 2 +
mov [ebx+8] eax +
mov eax [ebx+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_41B2FB  +
cmp eax offset off_4731A8 +
jz loc_41B493  +
mov [esp+3Ch+var_38] 86Ah +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404040  +
mov dword ptr [ebx+10h] offset off_473100 +
jmp loc_41B2FB  +
mov eax [ebx+0Ch] +
and ah 0F7h +
or al 80h +
jmp loc_41B441  +
mov dword ptr [esp+8] offset a_bfd_generic_0 +
mov [esp+3Ch+var_38] 850h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404070  +
lea esi [esi+0] +
mov eax [ebx+10h] +
cmp eax offset off_4732F8 +
jz loc_41B650  +
test dl 4 +
jz loc_41B4F1  +
xor ecx ecx +
test byte ptr [ebp+1] 18h +
setz cl  +
jmp loc_41B32B  +
cmp eax offset off_4731A8 +
jz loc_41B650  +
mov ecx [eax+14h] +
mov [esp+3Ch+var_10] ecx +
and ch 10h +
jnz loc_41B646  +
test dl 1 +
jz loc_41B657  +
xor ecx ecx +
and dh 10h +
jnz loc_41B32B  +
movzx edx byte ptr [ebp+1] +
mov cl 1 +
shr dl 5 +
and edx 3 +
cmp edx 1 +
jz loc_41B32B  +
cmp edx 2 +
jz loc_41B567  +
xor cl cl +
test edx edx +
jnz loc_41B32B  +
movzx edx byte ptr [ebp+0] +
mov ecx 1 +
and edx 3 +
cmp dl 2 +
jz loc_41B32B  +
test [esp+3Ch+var_10] 800000h +
jz loc_41B32B  +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_413400  +
xor ecx ecx +
test eax eax +
mov eax [ebx+10h] +
setz cl  +
jmp loc_41B32B  +
test ah 8 +
jnz loc_41B2FB  +
cmp dword ptr [ebx+10h] offset off_4731A8 +
mov eax [ebx+4] +
jz loc_41B6A6  +
mov [esp+0A8h+var_98] 1 +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A4] eax +
mov eax [ebp+1Ch] +
mov [esp+0A8h+var_A8] eax +
call sub_419760  +
mov esi eax +
test esi esi +
jz loc_41B2FB  +
jmp loc_41B39D  +
mov edx [esp+0A8h+var_58] +
cmp eax [edx+68h] +
setnz al  +
jmp loc_41B346  +
mov eax [esi+20h] +
test eax eax +
jz loc_41B3B0  +
mov [edi] eax +
mov ebx eax +
jmp loc_41B3B0  +
mov edx [ebx+4] +
mov eax [ebp+20h] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call sub_409000  +
test eax eax +
jnz loc_41B30E  +
jmp loc_41B326  +
test edx edx +
lea esi [esi+0] +
jnz loc_41B6D9  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_41B6D9  +
xor ecx ecx +
jmp loc_41B32B  +
xor ecx ecx +
jmp loc_41B332  +
test dh 8 +
jz loc_41B627  +
movzx edx byte ptr [ebp+1] +
xor ecx ecx +
and edx 18h +
cmp dl 18h +
setnz cl  +
jmp loc_41B32B  +
mov ecx edx +
mov eax [ebx+10h] +
shr ecx 0Ah +
and ecx 1 +
jmp loc_41B32B  +
mov eax 1 +
jmp loc_41B42B  +
mov eax [esp+54h] +
call sub_4195B0  +
test eax eax +
jz loc_41B429  +
jmp loc_41B28A  +
mov [esp+0A8h+var_A0] eax +
mov eax [esp+0A8h+var_58] +
mov [esp+0A8h+var_94] 1 +
mov [esp+0A8h+var_98] 0 +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] ebp +
mov [esp+0A8h+var_A8] eax +
call sub_4197B0  +
mov esi eax +
jmp loc_41B5C8  +
mov [esp+0A8h+var_A0] offset a_bfd_generic_0 +
mov [esp+0A8h+var_A4] 8C3h +
mov [esp+0A8h+var_A8] offset a____Binutil_11 +
call sub_404070  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+0F4h+var_A0] +
mov esi [esp+0F4h+var_9C] +
mov ebx [esp+0F4h+var_98] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jnz loc_41B9D4  +
mov edi [esi+48h] +
test edi edi +
jz loc_41B9B8  +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F0] 10h +
mov [esp+0F4h+var_F4] eax +
call sub_406290  +
test eax eax +
mov edi eax +
jz loc_41B7FC  +
mov eax [ebx+8] +
mov [edi+4] eax +
mov eax [ebx+10h] +
mov eax [eax] +
mov [esp+0F4h+var_F0] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_418D80  +
test eax eax +
mov [edi+0Ch] eax +
jz loc_41B8C0  +
cmp dword ptr [ebx+4] 3 +
jz loc_41B806  +
mov eax [ebx+10h] +
mov eax [eax+4] +
mov [esp+0F4h+var_E0] 1 +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_E8] 0 +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A0] +
mov [esp+0F4h+var_F0] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_4197B0  +
test eax eax +
jz loc_41B7BF  +
mov ecx [eax+1Ch] +
test ecx ecx +
jnz loc_41B840  +
mov eax [esp+0F4h+var_A0] +
mov edx [ebx+10h] +
mov ecx [esp+0F4h+var_A0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_E8] 0 +
mov [esp+0F4h+var_EC] 0 +
mov [esp+0F4h+var_F0] edx +
mov [esp+0F4h+var_F4] ecx +
call eax  +
test eax eax +
jnz loc_41B8C0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+10h] +
mov edx [eax+24h] +
mov ebp [ebp+4] +
test edx edx +
mov ebp [ebp+9Ch] +
mov [edi] ebp +
jnz loc_41B84F  +
mov eax [ebx+10h] +
mov eax [eax+8] +
mov [edi+8] eax +
mov eax [esi+4Ch] +
mov ecx [esi+48h] +
mov [ecx+eax*4] edi +
add eax 1 +
mov [esi+4Ch] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 20h +
mov [edi] eax +
mov eax [edi+0Ch] +
mov edx [eax+24h] +
test edx edx +
jz loc_41B81B  +
mov [esp+0F4h+var_F4] eax +
call sub_417EE0  +
mov [esp+0F4h+var_F4] eax +
mov ebp eax +
call sub_408190  +
test ebp ebp +
mov edx eax +
jz loc_41B86B  +
test eax eax +
jz loc_41B7FC  +
mov eax [ebx+10h] +
mov ecx [edi+0Ch] +
mov [esp+0F4h+var_D0] edx +
mov eax [eax+8] +
mov [esp+0F4h+var_E8] edx +
mov [esp+0F4h+var_F4] ecx +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F0] eax +
call sub_418840  +
mov edx [esp+0F4h+var_D0] +
test eax eax +
jz loc_41B8D1  +
cmp eax 1 +
jz loc_41B931  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 990h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_404070  +
lea esi [esi+0] +
mov [esp+0F4h+var_F4] 11h +
call sub_4040F0  +
jmp loc_41B7FC  +
mov eax [esp+0F4h+var_A4] +
mov ebx [ebx+8] +
mov [esp+0F4h+var_D0] edx +
mov [esp+0F4h+var_F4] eax +
call sub_407E10  +
mov edx [esp+0F4h+var_D0] +
mov [esp+0F4h+var_E0] ebp +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_F0] esi +
mov [esp+0F4h+var_EC] edx +
imul eax ebx +
mov [esp+0F4h+var_E8] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_4033C0  +
mov edx [esp+0F4h+var_D0] +
mov [esp+0F4h+var_F4] edx +
mov ebx eax +
call free  +
test ebx ebx +
jz loc_41B7FC  +
mov dword ptr [edi+8] 0 +
jmp loc_41B824  +
mov eax [esp+0F4h+var_A0] +
cmp dword ptr [ebx+4] 3 +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+0F4h+var_D0] eax +
mov eax [ebx+10h] +
mov ecx [eax+8] +
mov [esp+0F4h+var_CC] ecx +
mov ecx [edi+0Ch] +
mov eax [eax+4] +
mov ecx [ecx+20h] +
jz loc_41B9B4  +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A0] +
mov [esp+0F4h+var_C8] edx +
mov edx [esp+0F4h+var_CC] +
mov [esp+0F4h+var_D8] 0 +
mov [esp+0F4h+var_DC] 0 +
mov [esp+0F4h+var_F4] eax +
mov eax [esp+0F4h+var_D0] +
mov [esp+0F4h+var_E4] edx +
mov [esp+0F4h+var_E0] 0 +
mov [esp+0F4h+var_E8] ecx +
mov [esp+0F4h+var_F0] 0 +
call eax  +
mov edx [esp+0F4h+var_C8] +
test eax eax +
jnz loc_41B8D1  +
mov [esp+0F4h+var_F4] edx +
call free  +
xor eax eax +
jmp loc_41B7FE  +
mov eax [eax] +
jmp loc_41B958  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 952h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_404070  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 950h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_404070  +
push ebx  +
sub esp 18h +
mov eax [esp+110h+var_F0] +
mov [esp+110h+var_10C] 18h +
mov ebx [esp+110h+var_EC] +
mov [esp+110h+var_110] eax +
call sub_406370  +
test eax eax +
jz loc_41BA38  +
mov dword ptr [eax+4] 0 +
mov edx [ebx+0A4h] +
test edx edx +
jz loc_41BA30  +
mov [edx] eax +
mov [ebx+0A4h] eax +
add esp 18h +
pop ebx  +
retn   +
mov [ebx+0A0h] eax +
jmp loc_41BA23  +
xor eax eax +
jmp loc_41BA29  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_C] +
mov esi [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_4] +
mov edi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
cmp eax 1 +
jz loc_41BB10  +
cmp eax 2 +
jnz loc_41BAF3  +
test byte ptr [edi+15h] 1 +
jz loc_41BB78  +
mov edx [ebx+0Ch] +
mov eax 1 +
test edx edx +
jz loc_41BAEB  +
mov ebp [ebx+10h] +
mov eax [ebx+14h] +
test ebp ebp +
mov [esp+3Ch+var_1C] eax +
jz loc_41BB30  +
cmp edx ebp +
ja loc_41BB91  +
mov ebp [ebx+8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_18] edx +
call sub_407E10  +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_28] edx +
imul eax ebp +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] ebp +
call sub_4033C0  +
cmp ebp [ebx+14h] +
jz loc_41BAEB  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_1C] eax +
call free  +
mov eax [esp+3Ch+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_default_l +
mov [esp+3Ch+var_38] 9D5h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404070  +
nop   +
mov [esp+3Ch+arg_0] ebx +
mov ecx edi +
mov eax esi +
mov [esp+3Ch+arg_4] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4199A0  +
mov eax [esi+84h] +
mov [esp+3Ch+var_18] edx +
mov ecx [eax+2Ch] +
mov eax [edi+14h] +
shr eax 4 +
and eax 1 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+4] +
mov eax [eax+8] +
mov [esp+3Ch+var_3C] edx +
test eax eax +
setz al  +
movzx eax al +
mov [esp+3Ch+var_38] eax +
call ecx  +
mov edx [esp+3Ch+var_18] +
test eax eax +
mov [esp+3Ch+var_1C] eax +
jnz loc_41BA9C  +
xor eax eax +
jmp loc_41BAEB  +
mov [esp+3Ch+var_38] 9ECh +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_404040  +
jmp loc_41BA76  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_18] edx +
call sub_408000  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
jz loc_41BB71  +
mov edx [esp+3Ch+var_18] +
mov eax edx +
sub eax ebp +
cmp ebp 1 +
mov [esp+3Ch+var_18] eax +
jz loc_41BC26  +
mov [esp+3Ch+var_14] esi +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] edi +
mov edi ebx +
mov ebx ecx +
jmp loc_41BBD2  +
mov esi eax +
mov eax [edi+14h] +
mov [esp+3Ch+var_3C] ebx +
add ebx ebp +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax esi +
sub eax ebp +
cmp ebp esi +
jbe loc_41BBD0  +
mov eax esi +
mov ecx ebx +
test eax eax +
mov ebx edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+var_18] esi +
mov esi [esp+3Ch+var_14] +
jnz loc_41BC0D  +
mov edx [ebx+0Ch] +
jmp loc_41BA9C  +
mov eax [ebx+14h] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call memcpy  +
jmp loc_41BC05  +
mov [esp+3Ch+var_34] edx +
mov eax [ebx+14h] +
mov [esp+3Ch+var_18] edx +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
call memset  +
mov edx [esp+3Ch+var_18] +
jmp loc_41BA9C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+50h] +
mov ebp [esp+54h] +
mov dword ptr [esp+20h] 0 +
mov ecx [esi+64h] +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 0 +
test ecx ecx +
jz loc_41BCB0  +
lea esi [esi+0] +
mov eax [ecx+0A0h] +
test eax eax +
jnz loc_41BC96  +
jmp loc_41BCA9  +
mov eax [eax] +
test eax eax +
jz loc_41BCA9  +
cmp dword ptr [eax+4] 1 +
jnz loc_41BC90  +
mov edx [eax+10h] +
mov eax [eax] +
or byte ptr [edx+18h] 2 +
test eax eax +
jnz loc_41BC96  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jnz loc_41BC80  +
mov ebx [ebp+34h] +
lea edi [esp+20h] +
test ebx ebx +
jnz loc_41BCCA  +
jmp loc_41BCEC  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_41BCEC  +
mov [esp+0Ch] edi +
mov [esp+8] ebp +
mov [esp+4] ebx +
mov [esp] esi +
call loc_41B270  +
test eax eax +
jnz loc_41BCC0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+24h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_4194C0 +
mov eax [ebp+1Ch] +
mov [esp+24h] ebp +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp] eax +
call sub_419ED0  +
lea edx [esi+7Ch] +
mov ecx edi +
lea eax [esi+78h] +
mov dword ptr [esp] 0 +
call sub_419440  +
test eax eax +
jz loc_41BCE2  +
movzx eax byte ptr [ebp+0] +
and eax 3 +
cmp al 2 +
jz loc_41BDCE  +
mov edi [esi+64h] +
test edi edi +
jz loc_41BDAF  +
mov ebx [edi+0A0h] +
test ebx ebx +
jnz loc_41BD7C  +
jmp loc_41BDA8  +
mov [esp+0Ch] ebx +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp] esi +
jb loc_41BDC0  +
sub eax 3 +
cmp eax 1 +
ja loc_41BDC0  +
call loc_41B700  +
test eax eax +
jz loc_41BCE2  +
mov ebx [ebx] +
test ebx ebx +
jz loc_41BDA8  +
mov eax [ebx+4] +
cmp eax 1 +
jnz loc_41BD50  +
mov dword ptr [esp+4] 1 +
mov ecx edi +
mov edx ebp +
mov [esp] ebx +
mov eax esi +
call sub_4199A0  +
test eax eax +
jz loc_41BCE2  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_41BD7C  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_41BD41  +
mov eax 1 +
jmp loc_41BCE4  +
***
call sub_41BA40  +
test eax eax +
jnz loc_41BD76  +
jmp loc_41BCE2  +
***
mov edi [esi+64h] +
test edi edi +
jz loc_41BDAF  +
mov [esp+50h] esi +
mov [esp+54h] ebp +
mov ebx [edi+0A0h] +
mov dword ptr [edi+4Ch] 0 +
test ebx ebx +
jnz loc_41BDFB  +
jmp loc_41BE40  +
cmp eax 1 +
jz loc_41BE54  +
mov ebx [ebx] +
test ebx ebx +
jz loc_41BE10  +
mov eax [ebx+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_41BDF0  +
mov ebx [ebx] +
add dword ptr [edi+4Ch] 1 +
test ebx ebx +
jnz loc_41BDFB  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_41BE40  +
shl eax 2 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_406290  +
test eax eax +
mov [edi+48h] eax +
jz loc_41BCE2  +
or dword ptr [edi+14h] 4 +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_41BDDD  +
mov esi [esp+50h] +
mov ebp [esp+54h] +
jmp loc_41BD3A  +
***
mov esi [ebx+10h] +
mov edx [esi+94h] +
mov [esp+4] esi +
mov [esp] edx +
mov [esp+1Ch] edx +
call loc_404140  +
test eax eax +
js loc_41BCE2  +
mov [esp] eax +
mov [esp+18h] eax +
call sub_408000  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
test eax eax +
mov ebp eax +
jz loc_41BEE3  +
mov eax [edx+78h] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp+0Ch] eax +
call sub_404180  +
mov [esp] ebp +
mov [esp+18h] eax +
call free  +
mov eax [esp+18h] +
test eax eax +
js loc_41BCE2  +
cmp eax [esi+4Ch] +
jz loc_41BEDB  +
mov dword ptr [esp+4] 79Bh +
mov dword ptr [esp] offset a____Binutil_11 +
call sub_404040  +
mov eax [esp+18h] +
add [edi+4Ch] eax +
jmp loc_41BDF5  +
***
test ecx ecx +
jz loc_41BE8F  +
jmp loc_41BCE2  +
***
mov ecx [edx+4] +
mov edx [edx] +
sub ecx 3 +
cmp ecx 2 +
adc eax 0 +
test edx edx +
jnz loc_41BF00  +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov dword ptr [esp] offset unk_49A3F8 +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] eax +
call sub_409350  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] offset unk_49A3F8 +
mov [esp+1Ch+var_18] eax +
call sub_409000  +
add esp 1Ch +
retn   +
***
mov [esp+18h+var_14] 8 +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] offset unk_49A3F8 +
call sub_409270  +
test eax eax +
jz loc_41BFD0  +
mov edx [esp+18h+arg_4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax] edx +
mov [ebx+0Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+0Ch] 2Ah +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset sub_4192B0 +
mov dword ptr [esp] offset unk_49A3F8 +
call sub_408CC0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] offset unk_49A3F8 +
call sub_408DD0  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+14h] +
and eax 0C0000h +
cmp eax 40000h +
jz loc_41C131  +
jbe loc_41C0E0  +
cmp eax 80000h +
jz loc_41C095  +
cmp eax 0C0000h +
jnz loc_41C115  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_41C160  +
nop   +
lea esi [esi+0] +
mov [ebx+7Ch] eax +
mov eax 1 +
mov dword ptr [ebx+3Ch] offset off_473250 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jnz loc_41C080  +
mov esi [eax+24h] +
cmp [ebx+24h] esi +
jz loc_41C080  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBDuplicateSect +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_41C080  +
test eax eax +
jnz loc_41C115  +
mov eax [ebx+94h] +
test byte ptr [eax+2Ch] 10h +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jz loc_41C080  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_41C080  +
mov eax [esp+24h+arg_4] +
mov [eax+4] ebx +
xor eax eax +
jmp loc_41C08F  +
mov [esp+24h+var_1C] offset a_bfd_handle_al +
mov [esp+24h+var_20] 0B4Ah +
mov [esp+24h+var_24] offset a____Binutil_11 +
call sub_404070  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBIgnoringDupli +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_41C080  +
mov edx [ebx+24h] +
cmp edx [eax+24h] +
jnz loc_41C0B0  +
test edx edx +
jz loc_41C080  +
mov eax [ebx+94h] +
lea edx [esp+24h+var_C] +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_8] 0 +
mov [esp+24h+var_24] eax +
call sub_403610  +
test eax eax +
jnz loc_41C1E7  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBCouldNotReadC +
call eax  +
mov edx [esp+24h+var_C] +
test edx edx +
jz loc_41C1CB  +
mov [esp+24h+var_24] edx +
call free  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_41C1DB  +
mov [esp+24h+var_24] eax +
call free  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_41C080  +
mov eax [esp+24h+arg_4] +
lea ecx [esp+24h+var_8] +
mov eax [eax+4] +
mov edx [eax+94h] +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] edx +
call sub_403610  +
test eax eax +
jz loc_41C257  +
mov eax [ebx+24h] +
mov esi [esp+24h+var_C] +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+var_8] +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcmp  +
mov edx esi +
test eax eax +
jz loc_41C1BF  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBDuplicateSe_0 +
call eax  +
mov edx [esp+24h+var_C] +
jmp loc_41C1BF  +
mov eax [esp+24h+arg_8] +
mov eax [eax+18h] +
mov edx [eax+2Ch] +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov ecx [eax+94h] +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] offset aBCouldNotReadC +
mov [esp+24h+var_20] ecx +
call edx  +
mov edx [esp+24h+var_C] +
jmp loc_41C1BF  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
test eax 20000h +
jz loc_41C2AF  +
test eax 2000000h +
jz loc_41C2B8  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp] offset unk_49A3F8 +
mov [esp+4] eax +
call sub_409000  +
mov edx [eax+0Ch] +
mov edi eax +
test edx edx +
jz loc_41C300  +
mov [esp+28h] esi +
mov [esp+20h] ebx +
mov [esp+24h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_41C030  +
***
mov dword ptr [esp+4] 8 +
mov dword ptr [esp] offset unk_49A3F8 +
call sub_409270  +
test eax eax +
jz loc_41C325  +
mov edx [edi+0Ch] +
mov [eax+4] ebx +
mov [eax] edx +
mov [edi+0Ch] eax +
jmp loc_41C2AF  +
***
mov eax [esi+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_link +
call eax  +
jmp loc_41C2AF  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_41C44F  +
mov eax ecx +
jmp loc_41C371  +
cmp [edx+10h] eax +
setz dl  +
test dl dl +
jnz loc_41C388  +
mov eax [eax+10h] +
test eax eax +
jz loc_41C388  +
test byte ptr [eax+15h] 80h +
jnz loc_41C36A  +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_41C360  +
cmp [esi+68h] eax +
setz dl  +
test dl dl +
jz loc_41C36A  +
mov edx [ecx+0Ch] +
nop   +
lea esi [esi+0] +
test edx edx +
jz loc_41C3A3  +
mov ecx [edx+14h] +
test ch 80h +
jz loc_41C3B0  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_41C394  +
test eax eax +
mov edx offset off_473250 +
cmovz eax edx +
jmp loc_41C42A  +
mov ebx [edx+0Ch] +
test ebx ebx +
mov [esp+4+var_4] ebx +
jz loc_41C3D0  +
mov ebx [esp+4+var_4] +
cmp [ebx+10h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jnz loc_41C3E0  +
mov edx [esp+4+var_4] +
jmp loc_41C390  +
cmp [esi+68h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jz loc_41C3CB  +
nop   +
test eax eax +
jz loc_41C428  +
mov esi [eax+14h] +
mov ebx ecx +
xor ebx esi +
test ebx 403h +
jz loc_41C413  +
mov ebx [edi+14h] +
xor ebx ecx +
and ebx 401h +
jnz loc_41C42A  +
and esi 2 +
jz loc_41C428  +
and ecx 2 +
cmovnz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 8 +
jnz loc_41C432  +
and ebx 10h +
jz loc_41C443  +
xor ecx [edi+14h] +
and ecx 10h +
cmovz eax edx +
jmp loc_41C42A  +
mov eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx [edi+14h] +
and ecx 8 +
cmovz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+4+arg_8] +
cmp [edx+1Ch] edi +
cmovbe eax edx +
jmp loc_41C42A  +
mov eax [edi+94h] +
mov edx [eax+64h] +
xor eax eax +
jmp loc_41C390  +
***
sub esp 0Ch +
mov ebx [esp+0Ch+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_41C480  +
add esp 0Ch +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+14h] +
test edx edx +
jz loc_41C474  +
mov eax [edx+3Ch] +
test eax eax +
jz loc_41C474  +
test byte ptr [eax+15h] 80h +
jz loc_41C474  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_41C4D0  +
cmp eax [ecx+10h] +
setnz cl  +
test cl cl +
jz loc_41C474  +
mov esi [edx+38h] +
add esi [ebx+18h] +
add esi [eax+1Ch] +
mov [ebx+18h] esi +
mov [esp+0Ch+var_8] eax +
mov eax [esp+0Ch+arg_4] +
mov [esp+0Ch+var_4] esi +
mov [esp+0Ch+var_C] eax +
call sub_41C340  +
sub esi [eax+1Ch] +
mov [ebx+14h] eax +
mov [ebx+18h] esi +
jmp loc_41C474  +
mov esi [esp+0Ch+arg_4] +
cmp eax [esi+68h] +
setnz cl  +
jmp loc_41C4A1  +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_41C460 +
mov [esp] eax +
call sub_419ED0  +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+38h] +
test esi esi +
jz loc_41C525  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_41C539  +
mov dword ptr [esp+4] 0C49h +
mov dword ptr [esp] offset a____Binutil_11 +
call sub_404040  +
mov eax [esi+18h] +
mov [esp+8] eax +
mov eax [esi+14h] +
mov ebp [eax] +
mov ebx [eax+4] +
mov eax [esp+30h] +
mov [esp] eax +
call sub_407E10  +
mov ecx ebp +
mov edi eax +
shl edi cl +
test edi edi +
jz loc_41C5C6  +
mov edx edi +
neg edx  +
mov eax edx +
and eax edi +
cmp eax edi +
jz loc_41C586  +
mov dword ptr [esp+4] 0C52h +
mov dword ptr [esp] offset a____Binutil_11 +
mov [esp+0Ch] edx +
call sub_404040  +
mov edx [esp+0Ch] +
mov eax [ebx+24h] +
lea eax [edi+eax-1] +
and eax edx +
cmp ebp [ebx+40h] +
mov [ebx+24h] eax +
jbe loc_41C59A  +
mov [ebx+40h] ebp +
mov ebp [esp+8] +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov byte ptr [esi+0Ch] 3 +
add ebp eax +
mov eax [ebx+14h] +
mov [ebx+24h] ebp +
and ah 0EFh +
or eax 1 +
mov [ebx+14h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edx edx +
jmp loc_41C56A  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
test ebp ebp +
jz loc_41C77F  +
mov [esp+3Ch+var_1C] 0 +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_14] 0 +
nop   +
lea esi [esi+0] +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_41C6A4  +
lea ebx [ebp+0Ch] +
xor eax eax +
mov [esp+3Ch+var_18] ebx +
jmp loc_41C679  +
mov esi [eax+4] +
mov edi offset asc_4891A8 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_1C] +
setb cl  +
setnbe bl  +
sub ebx ecx +
movsx ecx bl +
mov ebx [esp+3Ch+var_24] +
test ecx ecx +
cmovz edi ebp +
mov [esp+3Ch+var_1C] edi +
cmovnz ebx ebp +
mov [esp+3Ch+var_24] ebx +
and edx 2 +
mov ebx [esp+3Ch+var_20] +
movzx edx byte ptr [eax+8] +
cmovnz ebx ebp +
or edx 4 +
mov [eax+8] dl +
and edx 1 +
mov [esp+3Ch+var_20] ebx +
jnz loc_41C753  +
mov edx [ebp+38h] +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
test eax eax +
jz loc_41C6A4  +
movzx edx byte ptr [eax+8] +
test dl 1 +
jz loc_41C626  +
mov [esp+3Ch+var_24] ebp +
jmp loc_41C658  +
mov ecx [ebp+1Ch] +
xor eax eax +
lea ebx [ebp+1Ch] +
test ecx ecx +
jz loc_41C748  +
mov esi [esp+3Ch+arg_4] +
mov edx [ebp+38h] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] esi +
call edx  +
test eax eax +
jz loc_41C748  +
test byte ptr [eax+8] 1 +
jnz loc_41C706  +
mov esi [eax+4] +
mov edi offset asc_4891A8 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_10] +
setb cl  +
setnbe dl  +
sub edx ecx +
mov ecx [esp+3Ch+var_14] +
movsx edx dl +
test edx edx +
cmovz edi ebp +
cmovnz ecx ebp +
mov [esp+3Ch+var_10] edi +
mov [esp+3Ch+var_14] ecx +
jmp loc_41C6B4  +
test ebp ebp +
mov eax 1 +
mov [esp+3Ch+var_1C] 0 +
setz dl  +
mov [esp+3Ch+var_24] 0 +
jz loc_41C767  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_41C783  +
mov ebx [esp+3Ch+var_24] +
cmp [esp+3Ch+var_20] ebx +
mov esi [esp+3Ch+arg_8] +
setz al  +
movzx eax al +
mov [esi] eax +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_41C610  +
mov edx [esp+3Ch+var_24] +
mov ebp [esp+3Ch+var_14] +
test edx edx +
setz al  +
test ebp ebp +
setz dl  +
jnz loc_41C722  +
test al al +
jz loc_41C722  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
mov [esp+3Ch+var_24] eax +
jnz loc_41C72A  +
mov ebp [esp+3Ch+var_10] +
test ebp ebp +
jnz loc_41C787  +
xor eax eax +
jmp loc_41C740  +
test dl dl +
jnz loc_41C777  +
mov eax [esp+3Ch+arg_8] +
mov dword ptr [eax] 1 +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41C5D0  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+2Ch] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp] esi +
shr dl 7 +
mov [esp+0Ch] edx +
call eax  +
mov edx [esp+0Ch] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jz loc_41C870  +
mov eax [eax+50h] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
lea edx [esi+8] +
add esi 0Eh +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [ebx+4] eax +
movzx eax byte ptr [esi-2] +
mov [ebx+0Ch] al +
movzx eax byte ptr [esi-1] +
mov [ebx+0Dh] al +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp] esi +
call eax  +
cmp eax 0FFFFh +
mov [ebx+10h] eax +
jz loc_41C890  +
cmp eax 0FEFFh +
ja loc_41C880  +
mov byte ptr [ebx+0Eh] 0 +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4Ch] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
jmp loc_41C81C  +
***
sub eax 10000h +
mov [ebx+10h] eax +
jmp loc_41C85A  +
***
mov edx [esp+28h] +
xor ax ax +
test edx edx +
jz loc_41C863  +
mov eax [edi+4] +
mov ecx [esp+28h] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov [ebx+10h] eax +
jmp loc_41C85A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
add esi 8 +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+4] +
mov edx [esi+4] +
add ebx 8 +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+4] ebx +
add ebx 4 +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+24h] ebx +
mov [esp+20h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [esp+38h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] esi +
call eax  +
mov eax [edi+4] +
lea ecx [esi+4] +
mov edx [ebx] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
lea ecx [esi+8] +
mov edx [ebx+4] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] ecx +
call eax  +
movzx eax byte ptr [ebx+0Ch] +
mov [esi+0Ch] al +
movzx eax byte ptr [ebx+0Dh] +
mov [esi+0Dh] al +
mov eax [ebx+10h] +
lea edx [eax-0FF00h] +
cmp edx 0FFFEFFFFh +
ja loc_41CAE9  +
test ebp ebp +
jz loc_41CB03  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp] eax +
mov [esp+4] ebp +
call edx  +
mov eax 0FFFFh +
mov edx [edi+4] +
add esi 0Eh +
mov edx [edx+60h] +
mov [esp+34h] esi +
mov [esp+30h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
mov dword ptr [esp+8] offset aBfd_elf32_swap +
mov dword ptr [esp+4] 0E0h +
mov dword ptr [esp] offset a____Binutil_22 +
call sub_404070  +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edx [esp+78h] +
mov ebp [esp+70h] +
test edx edx +
mov eax [ebp+0A0h] +
jnz loc_41CC10  +
add eax 48h +
xor ebx ebx +
mov [esp+24h] eax +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+18h] +
mov [esp+28h] eax +
shr dword ptr [esp+28h] 4 +
mov esi [esp+28h] +
test esi esi +
jnz loc_41CC90  +
xor ebx ebx +
xor edi edi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
***
mov eax [esp+arg_28] +
mov eax [eax+38h] +
test eax eax +
jz loc_41CB9F  +
mov edx [esp+arg_24] +
mov [esp+arg_0] edi +
mov [esp+0] ebp +
mov [esp+arg_4] edx +
call eax  +
mov eax [esp+arg_70] +
test eax eax +
jz loc_41CBD8  +
test ebx ebx +
lea eax [ebx-1] +
jle loc_41CBCE  +
mov edx [esp+arg_70] +
add edx 4 +
sub eax 1 +
mov [edx-4] edi +
add edi 34h +
cmp eax 0FFFFFFFFh +
jnz loc_41CBB2  +
mov eax [esp+arg_70] +
lea eax [eax+ebx*4] +
mov [esp+arg_70] eax +
mov eax [esp+arg_70] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_34] +
test eax eax +
jz loc_41CBE8  +
mov [esp+0] eax +
call free  +
mov eax [esp+arg_2C] +
test eax eax +
jz loc_41CC01  +
mov edx [esp+arg_20] +
cmp [edx+30h] eax +
jz loc_41CC01  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [eax+914h] +
xor ebx ebx +
mov edi [eax+918h] +
lea ecx [eax+160h] +
lea edx [eax+0F0h] +
mov [esp+24h] edx +
test esi esi +
cmovnz ebx ecx +
test edi edi +
jnz loc_41CC80  +
mov edx [eax+91Ch] +
test edx edx +
jz loc_41CB46  +
mov edi [eax+244h] +
test edi edi +
jnz loc_41CB46  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_42A7B0  +
test eax eax +
jnz loc_41CB46  +
nop   +
lea esi [esi+0] +
***
mov ebx 0FFFFFFFFh +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+240h] +
test ecx ecx +
jnz loc_41CC37  +
jmp loc_41CC53  +
***
mov esi [esp+28h] +
mov eax [esp+24h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_421030  +
test eax eax +
mov [esp+30h] eax +
jz loc_41CC70  +
imul eax esi +
mov [esp] ebp +
mov [esp+4] eax +
call sub_406370  +
test eax eax +
mov edi eax +
jz loc_41CE5C  +
test ebx ebx +
jz loc_41CD16  +
mov eax [ebx+18h] +
shr eax 1 +
cmp eax esi +
jz loc_41CDF5  +
mov ecx [ebp+0] +
mov [esp+0Ch] esi +
mov [esp+8] eax +
mov dword ptr [esp] offset aSVersionCountL +
mov [esp+4] ecx +
call off_4733A4  +
mov dword ptr [esp+38h] 0 +
xor ecx ecx +
mov eax [esp+28h] +
mov edx [esp+30h] +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
lea esi [edx+14h] +
cmp eax esi +
mov [esp+34h] eax +
jbe loc_41D071  +
mov ebx edi +
mov [esp+3Ch] edi +
mov edi ecx +
***
mov ecx [esi] +
mov eax [esp+24h] +
mov [ebx+18h] ecx +
mov ecx [esi+4] +
mov [ebx+1Ch] ecx +
mov ecx [esi+8] +
mov [ebx+20h] ecx +
mov ecx [esi+0Ch] +
mov [ebx+24h] ecx +
mov ecx [esi+10h] +
mov [ebx] ebp +
mov [ebx+28h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_421380  +
mov [ebx+4] eax +
mov eax [esi] +
mov [ebx+8] eax +
mov eax [esi+10h] +
test eax eax +
jnz loc_41CF60  +
mov dword ptr [ebx+10h] offset off_4731A8 +
mov eax [ebp+28h] +
shr eax 5 +
test al 42h +
jz loc_41CDAD  +
mov eax [ebx+10h] +
mov eax [eax+1Ch] +
sub [ebx+8] eax +
movzx eax byte ptr [esi+0Ch] +
mov ecx eax +
shr cl 4 +
cmp cl 1 +
jz loc_41CF82  +
jb loc_41CFB3  +
cmp cl 2 +
jz loc_41CFA3  +
cmp cl 0Ah +
jnz loc_41CDE0  +
or dword ptr [ebx+0Ch] 800000h +
movzx eax byte ptr [esi+0Ch] +
nop   +
and eax 0Fh +
cmp al 0Ah +
ja sub_41CE87  +
movzx eax al +
jmp ds:off_489424[eax*4]  +
***
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_403BF0  +
test eax eax +
jnz loc_41CE5C  +
mov eax [ebx+18h] +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov edx eax +
mov [esp+38h] eax +
jz loc_41D01A  +
mov eax [ebx+18h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call sub_4039E0  +
cmp eax [ebx+18h] +
jz loc_41D00C  +
***
mov eax [esp+38h] +
test eax eax +
jz loc_41CE5C  +
mov [esp-0D8h+arg_D4] eax +
call free  +
mov edx [esp+24h] +
mov eax [esp+30h] +
cmp [edx+30h] eax +
jz loc_41CC70  +
mov [esp-0D8h+arg_D4] eax +
mov ebx 0FFFFFFFFh +
call free  +
jmp loc_41CC75  +
***
or dword ptr [ebx+0Ch] 400000h +
***
mov edx [esp+78h] +
or dword ptr [ebx+0Ch] 100000h +
jmp sub_41CE87  +
***
or dword ptr [ebx+0Ch] 80000h +
jmp sub_41CE87  +
***
or dword ptr [ebx+0Ch] 10000h +
jmp sub_41CE87  +
***
or dword ptr [ebx+0Ch] 40000h +
jmp sub_41CE87  +
***
or dword ptr [ebx+0Ch] 4004h +
jmp sub_41CE87  +
***
or dword ptr [ebx+0Ch] 104h +
jmp sub_41CE87  +
***
or dword ptr [ebx+0Ch] 8 +
jmp sub_41CE87  +
***
cmp eax 0FFFFFFF1h +
jz loc_41CFE0  +
cmp eax 0FFFFFFF2h +
jnz loc_41CFC0  +
mov dword ptr [ebx+10h] offset off_473100 +
test byte ptr [ebp+2Ah] 20h +
jnz loc_41CFF0  +
mov eax [esi+4] +
mov [ebx+8] eax +
jmp loc_41CD9A  +
mov ecx [esi+10h] +
cmp ecx 0FFFFFFF2h +
jz loc_41CDE0  +
test ecx ecx +
jz loc_41CDE0  +
or dword ptr [ebx+0Ch] 2 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41CDE0  +
or dword ptr [ebx+0Ch] 80h +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41CDE0  +
or dword ptr [ebx+0Ch] 1 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41CDE0  +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_423A90  +
mov edx offset off_473250 +
test eax eax +
cmovz eax edx +
mov [ebx+10h] eax +
jmp loc_41CD9A  +
***
mov dword ptr [ebx+10h] offset off_473250 +
jmp loc_41CD9A  +
***
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_402CB0  +
test eax eax +
jz loc_41D050  +
mov [ebx+10h] eax +
jmp loc_41CF77  +
***
mov eax [esp+38h] +
add eax 2 +
mov ecx eax +
jmp loc_41CD20  +
***
mov ecx [ebx+18h] +
test ecx ecx +
jnz loc_41CE5C  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_4039E0  +
xor ecx ecx +
cmp eax [ebx+18h] +
jnz loc_41CE5C  +
jmp loc_41CD20  +
***
mov dword ptr [esp+8] 209001h +
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_403170  +
test eax eax +
jnz loc_41D004  +
jmp loc_41CE4C  +
***
xor ebx ebx +
jmp loc_41CB83  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+18h+var_18] esi +
shr dl 7 +
mov [esp+18h+var_C] edx +
call eax  +
lea ecx [esi+4] +
mov [ebx] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+8] +
mov [ebx+4] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi] +
jnz loc_41D164  +
mov eax [eax+4Ch] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
mov eax [edi] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+14h] +
mov dword ptr [ebx+14h] 0 +
mov [ebx+10h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+18h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
add esi 24h +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+24h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] esi +
call eax  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
jmp loc_41D0E8  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+4] +
mov edx [edi+4] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+8] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+0Ch] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea edx [ebx+10h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] edx +
mov edx [edi+10h] +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+18h] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+1Ch] +
mov edx [edi+20h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+20h] +
mov edx [edi+24h] +
add ebx 24h +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
mov edx [edi+28h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov eax [eax+1B0h] +
movzx edx byte ptr [eax+1ACh] +
mov eax [esi] +
shr dl 7 +
mov [ecx] eax +
mov eax [esi+4] +
mov [esp+18h+var_C] edx +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [edi] +
lea ecx [esi+10h] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+12h] +
mov [ebx+24h] ax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+14h] +
mov [ebx+26h] ax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+1Ch] eax +
mov eax [edi] +
jnz loc_41D380  +
mov eax [eax+4Ch] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi] +
lea edx [esi+1Ch] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
mov [ebx+14h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+24h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+28h] +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ah] +
mov [ebx+28h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Eh] +
mov [ebx+30h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+30h] +
add esi 32h +
mov [ebx+34h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+38h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] esi +
call eax  +
mov [ebx+3Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_41D2E6  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov eax [eax] +
mov edx [edx] +
lea ecx [ecx+10h] +
lea ebp [ebx+14h] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov [ecx-10h] edx +
mov edx [esi+4] +
shr al 7 +
mov [ecx-0Ch] edx +
mov edx [esi+8] +
mov [esp+24h+var_18] eax +
mov [ecx-8] edx +
mov edx [esi+0Ch] +
mov [ecx-4] edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+24h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
lea ecx [ebx+12h] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+26h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
mov ecx [esi+1Ch] +
mov edx [edx+54h] +
mov [esp+24h+var_20] ebp +
mov ebp 0FFFFh +
mov [esp+24h+var_24] ecx +
call edx  +
mov eax [edi] +
lea ecx [ebx+18h] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+1Ch] +
mov edx [esi+14h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+20h] +
mov edx [esi+18h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+24h] +
mov edx [esi+20h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+28h] +
mov edx [esi+28h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+2Ah] +
mov edx [esi+2Ch] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+30h] +
lea ecx [ebx+2Ch] +
mov edx [edi] +
cmp eax 0FFFFh +
cmova eax ebp +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [edi] +
lea ecx [ebx+2Eh] +
mov edx [esi+34h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+38h] +
mov edx 0 +
lea ecx [ebx+30h] +
cmp eax 0FF00h +
cmovnb eax edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [esi+3Ch] +
mov edx [edi] +
cmp eax 0FF00h +
cmovnb eax ebp +
mov edx [edx+60h] +
add ebx 32h +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
lea ecx [esp+2Ch] +
mov esi [eax+0A0h] +
add eax 4 +
mov [esp+14h] eax +
mov edx esi +
mov ebp [esi+40h] +
call sub_41D3A0  +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_403BF0  +
test eax eax +
jz loc_41D570  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+80h] +
mov dword ptr [esp+4] 34h +
mov [esp+8] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
call sub_403A90  +
cmp eax 34h +
jnz loc_41D564  +
mov eax [esi+30h] +
cmp eax 0FFFEh +
jbe loc_41D5A4  +
mov edx [ebp+0] +
mov [edx+20h] eax +
mov eax [esi+38h] +
cmp eax 0FEFFh +
jbe loc_41D5B4  +
mov edx [ebp+0] +
mov [edx+18h] eax +
mov edx [esi+3Ch] +
cmp edx 0FEFFh +
jbe loc_41D5C5  +
mov ecx [ebp+0] +
mov [ecx+1Ch] edx +
lea eax [eax+eax*4] +
shl eax 3 +
mov [esp+1Ch] eax +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_406290  +
test eax eax +
mov [esp+18h] eax +
jz loc_41D564  +
mov edi eax +
mov eax [esi+38h] +
xor ebx ebx +
test eax eax +
jz loc_41D61A  +
lea esi [esi+0] +
mov edx [ebp+ebx*4+0] +
mov ecx edi +
add ebx 1 +
mov eax [esp+14h] +
add edi 28h +
call sub_41D180  +
cmp [esi+38h] ebx +
ja loc_41D600  +
mov dword ptr [esp+0Ch] 0 +
mov eax [esi+18h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_403BF0  +
test eax eax +
jnz loc_41D564  +
mov eax [esp+80h] +
mov edi [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_403A90  +
cmp edi eax +
setz al  +
movzx eax al +
jmp loc_41D566  +
***
mov dword ptr [esp+28h] 8 +
mov dword ptr [esp+24h] offset sub_41C940 +
mov eax [edi+28h] +
mov dword ptr [esp+20h] 0 +
shr eax 5 +
test al 42h +
jz loc_41D72E  +
mov eax [ebp+1Ch] +
mov [esp+20h] eax +
mov ebx [ebp+4Ch] +
test ebx ebx +
jz loc_41D830  +
mov dword ptr [esp+2Ch] 0 +
xor esi esi +
mov dword ptr [esp+18h] 0 +
jmp loc_41D7EA  +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
mov [esp+18h] edx +
call sub_4285F0  +
test eax eax +
mov ecx eax +
js loc_41D820  +
mov eax [ebx] +
mov [esp+2Ch] ecx +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_41D7A0  +
mov edx [edi+4] +
cmp [eax+4] edx +
jz loc_41D7A0  +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+1Ch] ecx +
call sub_42C0A0  +
mov ecx [esp+1Ch] +
test eax eax +
jz loc_41D820  +
mov eax [esp+20h] +
shl ecx 8 +
add esi 1 +
add eax [ebx+4] +
mov [esp+34h] eax +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
add ecx eax +
mov eax [ebx+8] +
mov [esp+38h] ecx +
mov [esp] edi +
mov [esp+3Ch] eax +
mov eax [esp+14h] +
mov [esp+8] eax +
lea eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+24h] +
call eax  +
mov eax [esp+28h] +
add [esp+14h] eax +
cmp esi [ebp+4Ch] +
jnb loc_41D830  +
mov eax [ebp+48h] +
mov ebx [eax+esi*4] +
mov eax [ebx] +
mov edx [eax] +
cmp edx [esp+18h] +
mov [esp+30h] edx +
jz loc_41D838  +
cmp dword ptr [edx+10h] offset off_473250 +
jnz loc_41D750  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_41D750  +
xor ecx ecx +
jmp loc_41D774  +
***
mov eax [esp+68h] +
mov dword ptr [eax] 1 +
lea esi [esi+0] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+2Ch] +
jmp loc_41D774  +
***
mov dword ptr [esp+28h] 0Ch +
mov dword ptr [esp+24h] offset sub_41C980 +
jmp loc_41D715  +
***
mov ebx [edx+3Ch] +
jmp loc_41D6CE  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [eax+4] +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_28] edx +
mov esi [esp+4Ch+arg_8] +
mov [esp+4Ch+var_2C] ecx +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_30] eax +
mov eax [edi+18h] +
mov [esp+4Ch+var_4C] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_41D8E1  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] edx +
call sub_403BF0  +
test eax eax +
jz loc_41D8F0  +
mov [esp+4Ch+var_4C] ebp +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+18h] +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call sub_4039E0  +
cmp eax [edi+18h] +
jnz loc_41D8D9  +
mov eax [edi+28h] +
mov [esp+4Ch+var_34] eax +
and eax 0FFFFFFFBh +
cmp eax 8 +
jnz loc_41DAA6  +
mov ecx [esp+4Ch+arg_10] +
mov edi ebp +
mov eax [ebx+80h] +
mov edx [esp+4Ch+arg_4] +
test ecx ecx +
cmovz eax [ebx+7Ch] +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edx edx +
jz loc_41DA94  +
mov [esp+4Ch+var_20] ebp +
mov ebp eax +
jmp loc_41D9A1  +
cmp eax [esp+4Ch+var_24] +
ja loc_41DA60  +
mov edx [esp+4Ch+arg_C] +
cmp [esp+4Ch+var_34] 0Ch +
lea eax [edx+eax*4-4] +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jz loc_41DA19  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_41DA50  +
lea edx [esp+4Ch+var_18] +
add ebp 1 +
mov [esp+4Ch+var_48] esi +
add esi 10h +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] ebx +
call eax  +
add edi [esp+4Ch+var_34] +
cmp ebp [esp+4Ch+arg_4] +
jz loc_41DA90  +
cmp [esp+4Ch+var_34] 0Ch +
jz loc_41DA30  +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] edi +
call eax  +
lea ecx [edi+4] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] eax +
mov ecx [ebx+28h] +
shr ecx 5 +
and ecx 42h +
mov ecx [esp+4Ch+var_18] +
jz loc_41D9F2  +
mov edx [esp+4Ch+arg_10] +
test edx edx +
jnz loc_41D9F2  +
mov edx [esp+4Ch+var_2C] +
sub ecx [edx] +
shr eax 8 +
test eax eax +
mov [esi+4] ecx +
jnz loc_41D947  +
mov eax off_4732EC +
cmp [esp+4Ch+var_34] 0Ch +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jnz loc_41D96D  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
test eax eax +
jnz loc_41D97C  +
jmp loc_41D96D  +
lea eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] ebx +
call sub_41C8F0  +
mov eax [esp+4Ch+var_14] +
jmp loc_41D9D5  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
jmp loc_41D97C  +
mov edx [esp+4Ch+var_28] +
mov ecx [edx] +
mov [esp+4Ch+var_3C] eax +
mov eax [ebx] +
mov [esp+4Ch+var_40] ebp +
mov [esp+4Ch+var_4C] offset aSSRelocationDH +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] eax +
call off_4733A4  +
jmp loc_41DA00  +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax 1 +
jmp loc_41D8E3  +
mov [esp+4Ch+var_48] 582h +
mov [esp+4Ch+var_4C] offset a____Binutil_22 +
call sub_404040  +
jmp loc_41D91B  +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov edi [ebx+44h] +
mov esi [ebx+8Ch] +
test edi edi +
jz loc_41DAE5  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4Ch] +
test ecx ecx +
jnz loc_41DB60  +
test byte ptr [ebx+14h] 4 +
jz loc_41DADD  +
mov edi [ebx+4Ch] +
test edi edi +
jz loc_41DADD  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_41DC9C  +
mov eax [ecx+28h] +
xor ebp ebp +
test eax eax +
mov [esp+18h] eax +
jz loc_41DB1D  +
mov eax [ecx+18h] +
xor edx edx +
div  dword ptr [esp+18h] +
mov ebp eax +
mov esi [esi+4Ch] +
test esi esi +
jz loc_41DC8F  +
mov eax [esi+28h] +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov [esp+1Ch] eax +
jz loc_41DB48  +
mov eax [esi+18h] +
xor edx edx +
div  dword ptr [esp+1Ch] +
mov [esp+18h] eax +
mov eax [esp+18h] +
add eax ebp +
cmp edi eax +
jz loc_41DC41  +
xor eax eax +
jmp loc_41DADD  +
***
mov edx [ebx+24h] +
test edx edx +
jz loc_41DADD  +
mov ecx esi +
mov esi [esi+28h] +
test esi esi +
jnz loc_41DC26  +
xor eax eax +
xor ebp ebp +
mov dword ptr [esp+18h] 0 +
xor esi esi +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_406290  +
test eax eax +
mov edi eax +
jz loc_41DB56  +
mov ecx [esp+1Ch] +
test ecx ecx +
jz loc_41DBDB  +
mov edx [esp+4Ch] +
lea eax [ebx+1Ch] +
mov [esp] ecx +
mov ecx eax +
mov eax [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp+10h] edx +
mov edx [esp+48h] +
mov [esp+0Ch] edx +
mov edx ebx +
call sub_41D880  +
test eax eax +
jz loc_41DB56  +
test esi esi +
jz loc_41DC19  +
mov eax [esp+4Ch] +
shl ebp 4 +
mov edx ebx +
add ebp edi +
lea ecx [ebx+1Ch] +
mov [esp+8] ebp +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp] esi +
mov [esp+0Ch] eax +
mov eax [esp+18h] +
mov [esp+4] eax +
mov eax [esp+40h] +
call sub_41D880  +
test eax eax +
jz loc_41DB56  +
mov [ebx+44h] edi +
mov eax 1 +
jmp loc_41DADD  +
***
mov eax [ecx+18h] +
xor edx edx +
mov dword ptr [esp+18h] 0 +
div  esi +
xor esi esi +
mov ebp eax +
shl eax 4 +
jmp loc_41DB86  +
***
test ecx ecx +
jz loc_41DC55  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [ecx+14h] +
xor eax [ecx+10h] +
or edx eax +
jz loc_41DCAD  +
test esi esi +
jz loc_41DC69  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [esi+14h] +
xor eax [esi+10h] +
or edx eax +
jz loc_41DCA3  +
mov dword ptr [esp+4] 5E6h +
mov dword ptr [esp] offset a____Binutil_22 +
mov [esp+1Ch] ecx +
call sub_404040  +
mov eax edi +
mov ecx [esp+1Ch] +
shl eax 4 +
jmp loc_41DB86  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_41DB48  +
***
xor ebp ebp +
jmp loc_41DB1D  +
***
mov eax edi +
shl eax 4 +
jmp loc_41DB86  +
***
mov eax edi +
shl eax 4 +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_406290  +
mov ecx [esp+1Ch] +
test eax eax +
mov edi eax +
jnz loc_41DBA8  +
xor eax eax +
jmp loc_41DADD  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+10h+var_10] esi +
shr dl 7 +
mov [esp+10h+var_4] edx +
call eax  +
lea ecx [esi+18h] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
lea ecx [esi+4] +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
mov edx [esp+10h+var_4] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jnz loc_41DDA0  +
lea edx [esi+8] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi+4] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+14h] +
add esi 1Ch +
mov [ebx+14h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+18h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+1Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [esi+8] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_41DD5F  +
***
jmp sub_41DDD0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [esi+4] +
mov edx [eax+1B0h] +
test byte ptr [edx+1AEh] 10h +
jnz loc_41DDFA  +
mov ebp [edi+10h] +
mov edx [edi] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+4] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+8] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] ebp +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+10h] +
mov edx [edi+14h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+18h] +
mov edx [edi+4] +
add ebx 1Ch +
mov eax [eax+54h] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ecx +
call eax  +
mov eax [esi+4] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+28h+arg_4] ebx +
mov [esp+28h+arg_0] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+58h] +
lea edi [esp+10h] +
mov ebp [esp+50h] +
mov esi [esp+54h] +
test ebx ebx +
jnz loc_41DEC8  +
jmp loc_41DF00  +
add esi 20h +
sub ebx 1 +
jz loc_41DF00  +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebp +
call sub_41DDD0  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_403A90  +
cmp eax 20h +
jz loc_41DEC0  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C0h] +
lea esi [esp+60h] +
mov edi [esp+0C4h] +
mov edx esi +
mov ebp [esp+0C8h] +
mov ebx [eax+0A0h] +
mov eax [ebx+40h] +
mov [esp+10h] eax +
mov eax [ebx+44h] +
mov [esp+1Ch] eax +
mov eax [ebx] +
mov [esp+60h] eax +
mov eax [ebx+4] +
mov [esp+64h] eax +
mov eax [ebx+8] +
mov [esp+68h] eax +
mov eax [ebx+0Ch] +
mov [esp+6Ch] eax +
mov eax [ebx+10h] +
mov [esp+70h] eax +
mov eax [ebx+14h] +
mov [esp+74h] eax +
mov eax [ebx+18h] +
mov [esp+78h] eax +
mov eax [ebx+1Ch] +
mov [esp+7Ch] eax +
mov eax [ebx+20h] +
mov [esp+80h] eax +
mov eax [ebx+24h] +
mov [esp+84h] eax +
mov eax [ebx+28h] +
mov [esp+88h] eax +
mov eax [ebx+2Ch] +
mov ecx [esp+0C0h] +
mov [esp+8Ch] eax +
mov eax [ebx+30h] +
mov [esp+90h] eax +
mov eax [ebx+34h] +
mov [esp+94h] eax +
mov eax [ebx+38h] +
mov [esp+98h] eax +
mov eax [ebx+3Ch] +
mov dword ptr [esp+78h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+9Ch] eax +
lea eax [ecx+4] +
lea ecx [esp+2Ch] +
mov [esp+14h] eax +
call sub_41D3A0  +
lea ecx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 34h +
mov [esp] ecx +
call edi  +
mov eax [ebx+30h] +
xor ebx ebx +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_41E070  +
mov [esp+0C4h] edi +
mov edi edx +
lea esi [esi+0] +
mov eax [esp+0C0h] +
add ebx 1 +
mov [esp+4] edi +
add edi 20h +
mov [esp+8] esi +
mov [esp] eax +
call sub_41DDD0  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] esi +
call dword ptr [esp+0C4h]  +
cmp ebx [esp+18h] +
jnz loc_41E030  +
mov edi [esp+0C4h] +
mov eax [esp+0C0h] +
xor ebx ebx +
mov eax [eax+0A0h] +
mov eax [eax+214h] +
test eax eax +
mov [esp+18h] eax +
jz loc_41E187  +
mov eax [esp+10h] +
lea ecx [esp+2Ch] +
mov eax [eax+ebx*4] +
mov edx [eax] +
mov [esp+60h] edx +
mov edx [eax+4] +
mov [esp+64h] edx +
mov edx [eax+8] +
mov [esp+68h] edx +
mov edx [eax+0Ch] +
mov [esp+6Ch] edx +
mov edx [eax+10h] +
mov [esp+70h] edx +
mov edx [eax+14h] +
mov [esp+74h] edx +
mov edx [eax+18h] +
mov [esp+78h] edx +
mov edx [eax+1Ch] +
mov [esp+7Ch] edx +
mov edx [eax+20h] +
mov [esp+80h] edx +
mov edx [eax+24h] +
mov [esp+84h] edx +
mov edx [eax+28h] +
mov [esp+88h] edx +
mov edx [eax+2Ch] +
mov [esp+8Ch] edx +
mov edx [eax+30h] +
mov [esp+90h] edx +
mov eax [eax+34h] +
mov edx esi +
mov dword ptr [esp+70h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+94h] eax +
mov eax [esp+14h] +
call sub_41D180  +
lea eax [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 28h +
mov [esp] eax +
call edi  +
cmp dword ptr [esp+64h] 8 +
jz loc_41E17A  +
mov edx [esp+90h] +
mov dword ptr [esp+28h] 0 +
test edx edx +
jz loc_41E197  +
mov eax [esp+78h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call edi  +
mov eax [esp+28h] +
test eax eax +
jz loc_41E17A  +
mov [esp] eax +
call free  +
add ebx 1 +
cmp ebx [esp+18h] +
jnz loc_41E091  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_423A90  +
test eax eax +
jz loc_41E17A  +
mov edx [eax+6Ch] +
test edx edx +
jnz loc_41E159  +
and dword ptr [eax+14h] 0FFFFBFFFh +
lea ecx [esp+28h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ecx +
mov [esp] eax +
call sub_403610  +
test eax eax +
jz loc_41E17A  +
mov edx [esp+28h] +
test edx edx +
jz loc_41E17A  +
jmp loc_41E159  +
***
mov dword ptr [esp+0] 3 +
call sub_4040F0  +
xor eax eax +
add esp 0FCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+84h] 7Fh +
jnz sub_41E22B  +
cmp byte ptr [esp+85h] 45h +
jnz sub_41E22B  +
cmp byte ptr [esp+86h] 4Ch +
jnz sub_41E22B  +
cmp byte ptr [esp+87h] 46h +
jnz sub_41E22B  +
cmp byte ptr [esp+8Ah] 1 +
jnz sub_41E22B  +
cmp byte ptr [esp+88h] 1 +
jnz sub_41E22B  +
movzx eax byte ptr [esp+89h] +
cmp al 1 +
jz loc_41E695  +
cmp al 2 +
jnz sub_41E22B  +
mov eax [ebx+4] +
mov edi [eax+0Ch] +
mov [esp+24h] eax +
test edi edi +
jnz sub_41E22B  +
***
mov eax [esp+arg_20] +
mov eax [eax+78h] +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz loc_41E237  +
mov ebp [ebx+0A0h] +
lea eax [ebx+4] +
mov edx esi +
mov [esp+arg_1C] eax +
mov ecx ebp +
call sub_41D260  +
movzx eax word ptr [ebp+24h] +
cmp ax 4 +
jz sub_41E22B  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_41E2E7  +
cmp ax 1 +
jz sub_41E22B  +
cmp dword ptr [ebp+34h] 28h +
jz loc_41E2F8  +
mov ecx [ebp+38h] +
test ecx ecx +
jnz sub_41E22B  +
test edx edx +
jnz loc_41E307  +
mov edi [ebp+38h] +
test edi edi +
jnz sub_41E22B  +
mov edx [ebx+4] +
mov ecx [edx+1B0h] +
mov edx [ecx+174h] +
mov edi ecx +
mov [esp+arg_24] ecx +
cmp byte ptr [edx+0Ah] 20h +
jnz sub_41E22B  +
mov ecx [ecx+8] +
movzx edx word ptr [ebp+26h] +
cmp ecx edx +
jz loc_41E359  +
mov esi [edi+16Ch] +
test esi esi +
jz loc_41E33F  +
cmp edx esi +
jz loc_41E359  +
mov edi [esp+arg_24] +
mov esi [edi+170h] +
test esi esi +
jz loc_41E351  +
cmp edx esi +
jz loc_41E359  +
test ecx ecx +
jnz sub_41E22B  +
cmp ax 2 +
lea esi [esi+0] +
jz loc_41E6EB  +
cmp ax 3 +
jz loc_41E8B9  +
mov esi [ebp+30h] +
test esi esi +
jz loc_41E37E  +
or dword ptr [ebx+28h] 2000h +
mov eax [esp+arg_24] +
mov eax [eax] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_407D90  +
test eax eax +
mov eax [esp+arg_24] +
jnz loc_41E6B0  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_41E237  +
mov esi [ebp+18h] +
test esi esi +
jnz loc_41E6F5  +
mov eax [ebp+38h] +
test eax eax +
jz loc_41E6D7  +
cmp eax 4924924h +
ja sub_41E22B  +
imul eax eax +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_406290  +
test eax eax +
mov esi eax +
jz loc_41E237  +
mov eax [ebp+38h] +
mov ecx eax +
mov [esp+arg_18] eax +
mov eax [ebx+0A0h] +
mov [eax+214h] ecx +
mov eax ecx +
mov edi [ebx+0A0h] +
shl eax 2 +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_406290  +
mov [edi+40h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+40h] +
test eax eax +
jz loc_41E237  +
mov eax [esp+arg_B4] +
xor edx edx +
mov ecx esi +
mov edi [esp+arg_18] +
mov [esi] eax +
mov eax [esp+arg_B8] +
test edi edi +
mov [esi+4] eax +
mov eax [esp+arg_BC] +
mov [esi+8] eax +
mov eax [esp+arg_C0] +
mov [esi+0Ch] eax +
mov eax [esp+arg_C4] +
mov [esi+10h] eax +
mov eax [esp+arg_C8] +
mov [esi+14h] eax +
mov eax [esp+arg_CC] +
mov [esi+18h] eax +
mov eax [esp+arg_D0] +
mov [esi+1Ch] eax +
mov eax [esp+arg_D4] +
mov [esi+20h] eax +
mov eax [esp+arg_D8] +
mov [esi+24h] eax +
mov eax [esp+arg_DC] +
mov [esi+28h] eax +
mov eax [esp+arg_E0] +
mov [esi+2Ch] eax +
mov eax [esp+arg_E4] +
mov [esi+30h] eax +
mov eax [esp+arg_E8] +
mov [esi+34h] eax +
jz loc_41E4EC  +
mov [esp+arg_28] ebp +
mov ebp [esp+arg_18] +
jmp loc_41E4D2  +
***
sub eax 0FF00h +
cmp eax 1 +
ja sub_41E22B  +
mov eax [esi+8] +
test al 40h +
jnz loc_41E680  +
mov edx [esi+4] +
cmp edx 4 +
jz loc_41E680  +
cmp edx 9 +
jz loc_41E680  +
mov edx [esi+18h] +
test edx edx +
jz loc_41E5D8  +
test al 2 +
jz loc_41E5D8  +
cmp dword ptr [esi+4] 8 +
jz loc_41E5D8  +
mov eax [esi+0Ch] +
xor edx edx +
mov ecx [ebp+14h] +
sub eax [esi+10h] +
sbb edx [esi+14h] +
mov [esp+arg_8] 0 +
mov [esp+arg_4] ecx +
mov [esp+0] eax +
mov [esp+arg_0] edx +
call sub_470050  +
or edx eax +
jz loc_41E5D8  +
mov eax [esp+arg_10C] +
and dword ptr [eax+28h] 0FFFFDFFFh +
mov eax [esp+arg_28] +
add edi 1 +
add esi 38h +
cmp [eax+38h] edi +
ja loc_41E513  +
mov ebx [esp+arg_10C] +
mov ebp eax +
mov ecx [ebp+38h] +
test ecx ecx +
jz loc_41E6D7  +
mov eax [ebx+0A0h] +
mov eax [eax+214h] +
cmp [ebp+3Ch] eax +
jnb loc_41E97D  +
mov eax [ebp+30h] +
test eax eax +
jnz loc_41E8C5  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+44h] 0 +
mov edx [ebp+3Ch] +
test edx edx +
jz loc_41E83D  +
mov eax [ebp+18h] +
test eax eax +
jz loc_41E83D  +
mov eax [ebx+0A0h] +
mov edi 1 +
mov esi [eax+214h] +
cmp esi 1 +
ja loc_41E66B  +
jmp loc_41E827  +
add edi 1 +
cmp edi esi +
jz loc_41E827  +
mov [esp+arg_0] edi +
mov [esp+0] ebx +
call sub_421B90  +
test eax eax +
jnz loc_41E660  +
jmp loc_41E237  +
mov ecx [esp+arg_18] +
cmp ecx [esi+20h] +
ja loc_41E58F  +
lea esi [esi+0] +
jmp sub_41E22B  +
mov eax [ebx+4] +
cmp dword ptr [eax+0Ch] 1 +
mov [esp+arg_20] eax +
jz loc_41E2A2  +
jmp sub_41E22B  +
mov edx [eax+8] +
test edx edx +
jz loc_41E3AF  +
mov eax [eax+0Ch] +
movzx edx byte ptr [ebp+7] +
cmp edx eax +
jz loc_41E3AF  +
test eax eax +
jz loc_41E3AF  +
jmp sub_41E22B  +
mov edi [ebp+3Ch] +
test edi edi +
lea esi [esi+0] +
jz loc_41E614  +
jmp sub_41E22B  +
or dword ptr [ebx+28h] 40h +
nop   +
jmp loc_41E370  +
xor edi edi +
mov [esp+arg_8] 0 +
mov [esp+arg_0] esi +
mov [esp+arg_4] edi +
mov [esp+0] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_41E237  +
lea eax [esp+arg_58] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
mov [esp+arg_18] eax +
call sub_4039E0  +
cmp eax 28h +
jnz loc_41E237  +
mov eax [esp+arg_1C] +
lea ecx [esp+arg_B4] +
mov edx [esp+arg_18] +
call sub_41D080  +
mov eax [ebp+38h] +
test eax eax +
jnz loc_41E770  +
mov eax [esp+arg_CC] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
mov [ebp+38h] eax +
ja sub_41E22B  +
cmp dword ptr [ebp+3Ch] 0FFFFh +
jz loc_41E9B3  +
cmp dword ptr [ebp+30h] 0FFFFh +
jz loc_41E99C  +
cmp eax 1 +
jz loc_41E3D0  +
cmp eax 4924924h +
ja sub_41E22B  +
lea eax [eax+eax*4] +
xor edx edx +
lea eax ds:0FFFFFFD8h[eax*8] +
add eax esi +
adc edx edi +
cmp [ebp+18h] eax +
jnb sub_41E22B  +
mov [esp+arg_8] 0 +
mov [esp+arg_0] eax +
mov [esp+arg_4] edx +
mov [esp+0] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_41E237  +
mov eax [esp+arg_18] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
call sub_4039E0  +
cmp eax 28h +
jnz loc_41E237  +
mov [esp+arg_8] 0 +
mov eax [ebp+18h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
add eax 28h +
mov [esp+arg_0] eax +
call sub_403BF0  +
test eax eax +
jz loc_41E3BA  +
jmp loc_41E237  +
mov [esp+0] ebx +
lea esi [esi+0] +
call sub_421400  +
test eax eax +
jz sub_41E22B  +
mov eax [esp+arg_24] +
mov eax [eax+30h] +
test eax eax +
jz loc_41E855  +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz sub_41E22B  +
mov eax [ebp+10h] +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_404720  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_41E877  +
jmp loc_41E8B0  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_41E8B0  +
mov eax [esi+8Ch] +
mov edx [eax+4] +
cmp edx 4 +
jz loc_41E88A  +
cmp edx 9 +
jnz loc_41E870  +
mov eax [eax+20h] +
test eax eax +
jz loc_41E870  +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_423A90  +
test eax eax +
jz loc_41E870  +
test byte ptr [eax+15h] 20h +
jz loc_41E870  +
or dword ptr [esi+14h] 2000h +
jmp loc_41E870  +
mov eax [esp+arg_20] +
jmp loc_41E239  +
or dword ptr [ebx+28h] 800h +
jmp loc_41E370  +
cmp eax 7FFFFFFh +
ja sub_41E22B  +
shl eax 5 +
mov esi [ebx+0A0h] +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_406290  +
mov [esi+44h] eax +
mov eax [ebx+0A0h] +
mov esi [eax+44h] +
test esi esi +
jz loc_41E237  +
mov [esp+arg_8] 0 +
mov eax [ebp+14h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_403BF0  +
test eax eax +
jnz loc_41E237  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov edi [eax+44h] +
jz loc_41E62C  +
xor esi esi +
jmp loc_41E95B  +
lea eax [esp+arg_38] +
add esi 1 +
mov [esp+arg_4] edi +
add edi 20h +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_41DCE0  +
cmp [ebp+30h] esi +
jbe loc_41E62C  +
lea eax [esp+arg_38] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 20h +
mov [esp+0] eax +
call sub_4039E0  +
cmp eax 20h +
jz loc_41E938  +
jmp loc_41E237  +
mov eax [ebx] +
mov dword ptr [ebp+3Ch] 0 +
mov dword ptr [esp+0] offset aWarningSHasACo +
mov [esp+arg_0] eax +
call off_4733A4  +
jmp loc_41E614  +
***
mov edx [esp+arg_D4] +
test edx edx +
jz loc_41E78A  +
mov [ebp+30h] edx +
jmp loc_41E78A  +
mov edx [esp+arg_D0] +
mov [ebp+3Ch] edx +
jmp loc_41E77D  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [esp+0D4h] +
lea ebx [esp+3Ch] +
mov edi [esp+0D0h] +
mov dword ptr [esp+8] 34h +
mov [esp+4] ebx +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov esi eax +
jnz loc_41EE10  +
cmp byte ptr [esp+3Ch] 7Fh +
jz loc_41EA30  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
xor eax eax +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+3Dh] 45h +
jnz loc_41EA13  +
cmp byte ptr [esp+3Eh] 4Ch +
jnz loc_41EA13  +
cmp byte ptr [esp+3Fh] 46h +
jnz loc_41EA13  +
cmp byte ptr [esp+42h] 1 +
jnz loc_41EA13  +
cmp byte ptr [esp+40h] 1 +
jnz loc_41EA13  +
movzx eax byte ptr [esp+41h] +
cmp al 1 +
jz loc_41ECA6  +
cmp al 2 +
jnz loc_41EA13  +
mov eax [edi+4] +
mov ecx [eax+0Ch] +
test ecx ecx +
jnz loc_41EA13  +
lea eax [edi+4] +
mov edx ebx +
lea ecx [esp+70h] +
call sub_41D260  +
cmp dword ptr [esp+9Ch] 20h +
jnz loc_41EA13  +
mov eax [esp+0A0h] +
test eax eax +
jz loc_41EA13  +
shl eax 6 +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov ecx eax +
mov [esp+24h] eax +
jz loc_41EA1F  +
mov eax [esp+0A0h] +
mov [esp+4] ecx +
shl eax 5 +
mov [esp+8] eax +
mov eax [esp+0D4h] +
add eax [esp+84h] +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov ebx eax +
jnz loc_41EE43  +
mov eax [esp+0A0h] +
mov ebx eax +
shl ebx 5 +
add ebx [esp+24h] +
test eax eax +
mov [esp+28h] ebx +
jz loc_41EE32  +
mov ebp [esp+24h] +
xor esi esi +
mov ebx [esp+28h] +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
jmp loc_41EB38  +
add esi 1 +
add ebp 20h +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_41EB93  +
mov [esp+8] ebx +
mov [esp+4] ebp +
mov [esp] edi +
call sub_41DCE0  +
cmp dword ptr [ebx] 1 +
jnz loc_41EB26  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
add edx eax +
cmp edx [esp+14h] +
jbe loc_41EB63  +
mov [esp+14h] edx +
mov [esp+1Ch] ebx +
mov edx [esp+18h] +
test edx edx +
jnz loc_41EB26  +
mov ecx [ebx+1Ch] +
mov edx [ebx+0Ch] +
cmp ecx 1 +
jbe loc_41EB7C  +
neg ecx  +
and eax ecx +
and edx ecx +
test eax eax +
jnz loc_41EB26  +
mov eax [esp+0D4h] +
mov [esp+18h] ebx +
sub eax edx +
mov [esp+20h] eax +
jmp loc_41EB26  +
***
mov eax [esp+14h] +
test eax eax +
jz loc_41EE32  +
mov eax [esp+88h] +
mov dword ptr [esp+2Ch] 0 +
test eax eax +
jz loc_41EBE1  +
mov edx [esp+0A8h] +
test edx edx +
jz loc_41EBE1  +
mov ecx [esp+0A4h] +
test ecx ecx +
jz loc_41EBE1  +
imul edx ecx +
mov ecx [esp+1Ch] +
add eax edx +
mov [esp+2Ch] eax +
mov eax [ecx+14h] +
cmp eax [ecx+18h] +
jz loc_41EE6A  +
mov eax [esp+14h] +
mov [esp] eax +
call sub_408190  +
test eax eax +
mov ebp eax +
jz loc_41EEE0  +
mov eax [esp+0A0h] +
xor esi esi +
mov ebx [esp+28h] +
test eax eax +
jz loc_41ECBF  +
mov [esp+0D0h] edi +
mov edi [esp+0E0h] +
jmp loc_41EC33  +
add esi 1 +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_41ECB8  +
cmp dword ptr [ebx] 1 +
jnz loc_41EC20  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
mov ecx [ebx+0Ch] +
add edx eax +
cmp ebx [esp+18h] +
jz loc_41EDE0  +
cmp [esp+1Ch] ebx +
cmovz edx [esp+14h] +
add ecx [esp+20h] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] ecx +
call edi  +
test eax eax +
jz loc_41EC20  +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call free  +
mov dword ptr [esp] 1 +
call sub_4040F0  +
call ds:__imp__errno  +
mov edx [esp+14h] +
mov [eax] edx +
xor eax eax +
jmp loc_41EA21  +
***
mov eax [edi+4] +
cmp dword ptr [eax+0Ch] 1 +
jz loc_41EA6E  +
jmp loc_41EA13  +
***
mov edi [esp+0D0h] +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
cmp [esp+14h] eax +
jb loc_41EDF0  +
mov eax [esp+3Ch] +
mov [ebp+0] eax +
mov eax [esp+40h] +
mov [ebp+4] eax +
mov eax [esp+44h] +
mov [ebp+8] eax +
mov eax [esp+48h] +
mov [ebp+0Ch] eax +
mov eax [esp+4Ch] +
mov [ebp+10h] eax +
mov eax [esp+50h] +
mov [ebp+14h] eax +
mov eax [esp+54h] +
mov [ebp+18h] eax +
mov eax [esp+58h] +
mov [ebp+1Ch] eax +
mov eax [esp+5Ch] +
mov [ebp+20h] eax +
mov eax [esp+60h] +
mov [ebp+24h] eax +
mov eax [esp+64h] +
mov [ebp+28h] eax +
mov eax [esp+68h] +
mov [ebp+2Ch] eax +
mov eax [esp+6Ch] +
mov [ebp+30h] eax +
mov dword ptr [esp] 8 +
call sub_408000  +
test eax eax +
mov esi eax +
jz loc_41EEC3  +
call sub_405AA0  +
test eax eax +
mov ebx eax +
jz loc_41EEBB  +
mov dword ptr [esp] offset aInMemory +
call sub_45F0E0  +
mov [ebx] eax +
mov eax [edi+4] +
mov [ebx+4] eax +
mov eax [esp+14h] +
mov [esi+4] ebp +
mov [esi] eax +
mov eax [ebx+28h] +
mov [ebx+8] esi +
mov dword ptr [ebx+0Ch] offset off_474BE0 +
mov dword ptr [ebx+38h] 0 +
and eax 0FF80001Fh +
or eax 10000h +
mov [ebx+28h] eax +
and eax 7 +
or eax 8 +
mov dword ptr [ebx+3Ch] 0 +
mov [ebx+28h] al +
mov dword ptr [esp] 0 +
call time  +
or byte ptr [ebx+2Bh] 4 +
mov [ebx+20h] eax +
mov eax [esp+0DCh] +
test eax eax +
jz loc_41EE2B  +
mov eax [esp+0DCh] +
mov ecx [esp+20h] +
mov [eax] ecx +
add esp 0BCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub ecx eax +
xor eax eax +
jmp loc_41EC4D  +
***
xor edx edx +
xor ecx ecx +
mov dword ptr [esp+5Ch] 0 +
mov [esp+6Ch] dx +
mov [esp+6Eh] cx +
jmp loc_41ECD9  +
***
mov dword ptr [esp] 1 +
call sub_4040F0  +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_41EA21  +
***
mov eax ebx +
jmp loc_41EA21  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_41EA13  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov dword ptr [esp] 1 +
call sub_4040F0  +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_41EA21  +
***
mov ecx [esp+2Ch] +
cmp ecx [esp+0D8h] +
jbe loc_41EED0  +
mov edx [edi+4] +
mov ecx [esp+1Ch] +
mov edx [edx+1B0h] +
add eax [ecx+8] +
cmp [esp+2Ch] eax +
mov edx [edx+14h] +
jbe loc_41EBE1  +
cmp edx 1 +
jbe loc_41EBE1  +
mov ecx [esp+2Ch] +
lea eax [edx+eax-1] +
neg edx  +
and eax edx +
cmp ecx eax +
mov eax [esp+14h] +
cmovbe eax ecx +
mov [esp+14h] eax +
jmp loc_41EBE1  +
***
mov [esp] esi +
call free  +
mov [esp] ebp +
call free  +
jmp loc_41EA1F  +
***
mov eax [esp+0D8h] +
mov [esp+14h] eax +
jmp loc_41EBE1  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_41EA21  +
***
mov eax [esp+4] +
movzx edx byte ptr [esp+8] +
shl eax 8 +
add eax edx +
retn   +
***
mov eax [esp+4] +
shr eax 8 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+4] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+24h] +
mov eax [esp+20h] +
mov ecx [edx+4] +
cmp [eax+4] ecx +
jz loc_41EFB0  +
mov dword ptr [esp] 1 +
call sub_4040F0  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_41EFF7  +
mov ebx [edx] +
mov dword ptr [esp+4] 2Fh +
mov [esp] ebx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call strcmp  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
jmp loc_41EFA3  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0CCh +
mov ebx [esp+0E0h] +
lea esi [esp+54h] +
mov dword ptr [esp+4] 34h +
mov [esp] esi +
mov [esp+8] ebx +
call sub_4039E0  +
cmp eax 34h +
jz loc_41F051  +
call sub_403EA0  +
cmp eax 1 +
jz loc_41F044  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
xor eax eax +
add esp 0CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+54h] 7Fh +
jnz loc_41F038  +
cmp byte ptr [esp+55h] 45h +
jnz loc_41F038  +
cmp byte ptr [esp+56h] 4Ch +
jnz loc_41F038  +
cmp byte ptr [esp+57h] 46h +
jnz loc_41F038  +
cmp byte ptr [esp+58h] 1 +
jnz loc_41F038  +
movzx eax byte ptr [esp+59h] +
cmp al 1 +
jz loc_41F2A0  +
cmp al 2 +
jnz loc_41F038  +
mov eax [ebx+4] +
mov edi [eax+8] +
test edi edi +
jnz loc_41F038  +
mov eax [eax+80h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41F044  +
mov ebp [ebx+0A0h] +
lea edi [ebx+4] +
mov edx esi +
mov eax edi +
mov ecx ebp +
call sub_41D260  +
mov eax [ebx+4] +
movzx esi word ptr [ebp+26h] +
mov eax [eax+1B0h] +
mov ecx eax +
mov [esp+18h] eax +
mov eax [eax+8] +
cmp eax esi +
jz loc_41F154  +
mov edx [ecx+16Ch] +
test edx edx +
jz loc_41F0DE  +
cmp esi edx +
jz loc_41F154  +
mov ecx [esp+18h] +
mov edx [ecx+170h] +
test edx edx +
jz loc_41F0F0  +
cmp esi edx +
jz loc_41F154  +
test eax eax +
jnz loc_41F038  +
mov eax off_4733B4 +
mov edx [eax] +
test edx edx +
jnz loc_41F10E  +
jmp loc_41F154  +
add eax 4 +
mov edx [eax] +
test edx edx +
jz loc_41F154  +
cmp dword ptr [edx+4] 5 +
jnz loc_41F105  +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
cmp byte ptr [ecx+0Ah] 20h +
jnz loc_41F105  +
cmp esi [edx+8] +
jz loc_41F038  +
mov ecx [edx+16Ch] +
test ecx ecx +
jz loc_41F141  +
cmp esi ecx +
jz loc_41F038  +
mov edx [edx+170h] +
test edx edx +
jz loc_41F105  +
cmp esi edx +
jnz loc_41F105  +
jmp loc_41F038  +
***
mov esi [ebp+14h] +
test esi esi +
jz loc_41F038  +
cmp word ptr [ebp+24h] 4 +
jnz loc_41F038  +
cmp dword ptr [ebp+2Ch] 20h +
jnz loc_41F038  +
mov edx [ebp+18h] +
mov eax [ebp+30h] +
test edx edx +
jz loc_41F189  +
cmp eax 0FFFFh +
jz loc_41F3AF  +
cmp eax 1 +
jbe loc_41F1F5  +
cmp eax 7FFFFFFh +
ja loc_41F038  +
mov ecx [ebp+14h] +
add eax 7FFFFFFh +
xor edx edx +
shl eax 5 +
lea esi [eax+ecx] +
cmp ecx esi +
jnb loc_41F038  +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edx +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_41F044  +
lea eax [esp+88h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call sub_4039E0  +
cmp eax 20h +
jnz loc_41F044  +
mov dword ptr [esp+0Ch] 0 +
mov eax [ebp+14h] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_403BF0  +
test eax eax +
jnz loc_41F038  +
mov eax [ebp+30h] +
mov [esp] ebx +
shl eax 5 +
mov [esp+4] eax +
call sub_406290  +
test eax eax +
mov edi eax +
mov [esp+1Ch] eax +
jz loc_41F044  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov [eax+44h] edi +
jz loc_41F2B7  +
lea eax [esp+88h] +
xor esi esi +
mov [esp+14h] ebp +
mov ebp eax +
jmp loc_41F27F  +
mov [esp+8] edi +
add esi 1 +
add edi 20h +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_41DCE0  +
mov eax [esp+14h] +
cmp [eax+30h] esi +
jbe loc_41F2B5  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] ebp +
call sub_4039E0  +
cmp eax 20h +
jz loc_41F260  +
jmp loc_41F044  +
***
mov eax [ebx+4] +
cmp dword ptr [eax+8] 1 +
jz loc_41F08F  +
lea esi [esi+0] +
jmp loc_41F038  +
***
mov ebp eax +
mov eax [esp+18h] +
mov eax [eax] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_407D90  +
test eax eax +
jnz loc_41F2E4  +
mov eax [esp+18h] +
mov edx [eax+8] +
test edx edx +
jnz loc_41F044  +
mov eax [esp+18h] +
mov eax [eax+30h] +
test eax eax +
jz loc_41F2FC  +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41F038  +
mov eax [ebp+30h] +
xor esi esi +
mov edi [esp+1Ch] +
test eax eax +
jnz loc_41F31D  +
jmp loc_41F421  +
mov eax [ebp+30h] +
add esi 1 +
add edi 20h +
cmp eax esi +
jbe loc_41F336  +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call sub_424010  +
test eax eax +
jnz loc_41F310  +
jmp loc_41F044  +
***
test eax eax +
jz loc_41F421  +
mov edi [esp+1Ch] +
shl eax 5 +
xor esi esi +
lea ecx [edi+eax] +
mov eax edi +
lea esi [esi+0] +
mov edx [eax+14h] +
test edx edx +
jz loc_41F35F  +
add edx [eax+8] +
cmp esi edx +
cmovb esi edx +
add eax 20h +
cmp eax ecx +
jnz loc_41F350  +
lea eax [esp+88h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_403BA0  +
test eax eax +
jnz loc_41F3A1  +
mov eax [esp+0A0h] +
cmp eax esi +
jnb loc_41F3A1  +
mov [esp+0Ch] eax +
mov [esp+8] esi +
mov [esp+4] ebx +
mov dword ptr [esp] offset aWarningBIsTrun +
call off_4733A4  +
mov eax [ebp+10h] +
mov [ebx+74h] eax +
mov eax [ebx+4] +
jmp loc_41F046  +
***
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jnz loc_41F044  +
lea esi [esp+2Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 28h +
mov [esp] esi +
call sub_4039E0  +
cmp eax 28h +
jnz loc_41F044  +
lea eax [esp+88h] +
mov edx esi +
mov ecx eax +
mov eax edi +
call sub_41D080  +
mov eax [esp+0A8h] +
test eax eax +
jnz loc_41F419  +
mov eax [ebp+30h] +
jmp loc_41F189  +
***
mov [ebp+30h] eax +
jmp loc_41F189  +
***
xor esi esi +
jmp loc_41F366  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
mov ebx esi +
sub ebx ecx +
lea edx ds:28h[ebx*4] +
mov [esp+28h+var_24] edx +
call sub_406370  +
test eax eax +
jz loc_41F5EA  +
xor edx edx +
cmp esi edi +
mov dword ptr [eax] 0 +
lea ecx [ebp+edi*4+0] +
mov dword ptr [eax+4] 1 +
jbe loc_41F5CF  +
mov esi [ecx+edx*4] +
mov [eax+edx*4+28h] esi +
add edx 1 +
cmp edx ebx +
jnz loc_41F5C1  +
test edi edi +
mov [eax+24h] ebx +
jnz loc_41F5E2  +
mov edx [esp+28h+arg_4] +
test edx edx +
jz loc_41F5E2  +
or byte ptr [eax+20h] 30h +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_41F5E2  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] edi +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_41F670  +
mov eax [esi+0Ch] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov byte ptr [ebx+edi-1] 0 +
mov [esp+1Ch+var_14] 100h +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call sub_403090  +
test eax eax +
jz loc_41F670  +
mov edx [esi+4] +
mov ecx [esi+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 1 +
mov [eax+24h] edx +
mov [eax+50h] ecx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
mov edi eax +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_41F6C2  +
mov byte ptr [eax] 2Eh +
sub edi 1 +
add esi 2 +
lea eax [eax+1] +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov [esp+18h+var_18] ebx +
mov esi eax +
lea eax [eax+2] +
mov [esp+18h+var_14] eax +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_41F716  +
mov byte ptr [eax] 2Eh +
add edi 1 +
mov byte ptr [eax+1] 7Ah +
lea eax [eax+2] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_28] offset a_interp_0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_14] edx +
call sub_402CB0  +
test eax eax +
jz loc_41F74D  +
test byte ptr [eax+14h] 2 +
jnz loc_41F898  +
mov [esp+2Ch+var_1C] 2 +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] offset a_dynamic_1 +
mov [esp+2Ch+var_2C] eax +
call sub_402CB0  +
cmp eax 1 +
mov eax [esp+2Ch+var_14] +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test eax eax +
jz loc_41F787  +
movzx eax byte ptr [eax+3] +
and eax 1 +
cmp al 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
mov edi [esp+2Ch+var_18] +
mov eax [edi+0A0h] +
mov ebp [edi+64h] +
mov eax [eax+934h] +
cmp dword ptr [eax+0Ch] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
cmp dword ptr [eax+34h] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test ebp ebp +
jz loc_41F812  +
mov eax [ebp+14h] +
mov ebx ebp +
mov [esp+2Ch+var_10] eax +
mov edx eax +
jmp loc_41F7C3  +
mov edx [ebx+14h] +
and edx 2 +
jz loc_41F7E7  +
mov esi [ebx] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_41F7E7  +
add [esp+2Ch+var_1C] 1 +
cmp dword ptr [ebx+40h] 2 +
jz loc_41F88C  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_41F7C0  +
test [esp+2Ch+var_10] 400h +
jz loc_41F80A  +
jmp loc_41F8A5  +
test byte ptr [ebp+15h] 4 +
jnz loc_41F8A5  +
mov ebp [ebp+0Ch] +
test ebp ebp +
nop   +
jnz loc_41F800  +
mov edi [esp+2Ch+var_18] +
mov eax [edi+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_41F83F  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] edx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_41F8AF  +
add [esp+10h] eax +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+1] +
imul eax [esp+10h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+40h] 2 +
jnz loc_41F7C0  +
mov edx [ebx+14h] +
test dl 2 +
jz loc_41F7C3  +
mov esi [ebx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_41F7C3  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_41F856  +
jmp loc_41F7EE  +
mov [esp+2Ch+var_1C] 4 +
jmp loc_41F755  +
add [esp+2Ch+var_1C] 1 +
jmp loc_41F812  +
mov dword ptr [esp+8] offset aGet_program_he +
mov dword ptr [esp+4] 0FD2h +
mov dword ptr [esp+0] offset a____Binutil_10 +
call sub_404070  +
nop   +
lea esi [esi+0] +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_41F8F1  +
sub esp 1Ch +
mov [esp+4] edx +
mov [esp+0] eax +
call ecx  +
add esp 1Ch +
retn   +
test dword ptr [edx+0Ch] 800082h +
mov eax 1 +
jnz locret_41F8EF  +
mov edx [edx+10h] +
cmp edx offset off_4731A8 +
jz locret_41F8EF  +
mov eax [edx+14h] +
shr eax 0Ch +
and eax 1 +
retn   +
***
mov ebx [ecx+4] +
cmp dword ptr [ebx+4] 5 +
jz loc_41F960  +
mov edx [edx+10h] +
cmp [edx+94h] eax +
jz loc_41F958  +
mov ecx [edx+3Ch] +
cmp eax [ecx+94h] +
jz loc_41F951  +
cmp edx offset off_473250 +
jz loc_41F958  +
mov eax 1 +
pop ebx  +
retn   +
mov ebx [edx+38h] +
test ebx ebx +
jnz loc_41F942  +
xor eax eax +
pop ebx  +
retn   +
mov ecx [ecx+0A0h] +
test ecx ecx +
jz loc_41F92C  +
mov ecx [edx+28h] +
test ecx ecx +
jz loc_41F92C  +
mov edx [edx+10h] +
cmp edx offset off_473250 +
jnz loc_41F92F  +
jmp loc_41F94A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_8] +
mov eax [ebp+14h] +
and eax 2100000h +
cmp eax 2000000h +
jz loc_41F9B0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
test eax eax +
jnz loc_41F9A2  +
mov ecx [ebp+8Ch] +
mov eax [ecx+20h] +
test eax eax +
jz loc_41FA44  +
cmp eax 0FFFFFFFEh +
jz loc_41FAB8  +
mov eax [ebp+6Ch] +
mov edx 1 +
test eax eax +
jz loc_41FB17  +
mov ecx [ecx+7Ch] +
mov esi [ebp+24h] +
mov [esp+2Ch+var_14] ecx +
add esi eax +
test ecx ecx +
jz loc_41FA6B  +
mov [esp+2Ch+var_10] ebp +
mov ebx ecx +
mov ebp edi +
mov edi esi +
mov esi edx +
jmp loc_41FA3C  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_41FA29  +
cmp eax offset off_473250 +
jz loc_41FA29  +
mov edx [ebp+4] +
sub edi 4 +
mov edx [edx+54h] +
mov [esp+2Ch+var_28] edi +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp [esp+2Ch+var_14] ebx +
jz loc_41FA60  +
test ebx ebx +
jz loc_41FA60  +
test esi esi +
jz loc_41FA00  +
mov eax ebx +
jmp loc_41FA07  +
mov eax [ecx+74h] +
test eax eax +
jz loc_41FA96  +
mov eax [eax+14h] +
test eax eax +
jz loc_41FA96  +
mov [ecx+20h] eax +
jmp loc_41F9D0  +
mov esi edi +
mov edi ebp +
mov ebp [esp+2Ch+var_10] +
mov eax [ebp+6Ch] +
sub esi 4 +
cmp esi eax +
jnz loc_41FB75  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp+2Ch+arg_4] eax +
mov eax [ebp+14h] +
shr eax 11h +
and eax 1 +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+8] +
test eax eax +
jz loc_41FB47  +
mov esi [ebp+8] +
mov eax [eax+esi*4] +
mov eax [eax+14h] +
jmp loc_41FA52  +
mov eax [ecx+7Ch] +
xor edx edx +
mov eax [eax+8Ch] +
mov eax [eax+78h] +
mov esi [eax+8Ch] +
mov eax [eax+94h] +
mov esi [esi+20h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+928h] 0 +
jnz loc_41FAE7  +
mov edx [eax+68h] +
mov eax [eax+218h] +
sub esi edx +
mov eax [eax+esi*4] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
ja loc_41FB0F  +
nop   +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
jbe loc_41FB00  +
mov eax [eax+1Ch] +
jmp loc_41FA52  +
mov eax [ebp+24h] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
call sub_406290  +
mov ecx [ebp+8Ch] +
xor edx edx +
test eax eax +
mov [ebp+6Ch] eax +
mov [ecx+30h] eax +
jnz loc_41F9E0  +
mov dword ptr [ebx] 1 +
jmp loc_41F9A2  +
mov [esp+2Ch+var_28] 0C8Bh +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_404040  +
mov eax [edi+0A0h] +
mov ecx [ebp+8Ch] +
mov eax [eax+934h] +
mov eax [eax+8] +
jmp loc_41FAAD  +
mov [esp+2Ch+var_24] offset aBfd_elf_set_gr +
mov [esp+2Ch+var_28] 0CDAh +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_404070  +
jmp sub_41FBA0  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_402CB0  +
test eax eax +
jz loc_41FF08  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edi+14h] +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_403170  +
test eax eax +
jz loc_41FF40  +
mov edx [edi+24h] +
mov ecx [edi+50h] +
mov ebx [edi+54h] +
mov [eax+24h] edx +
mov edx [edi+40h] +
mov [eax+50h] ecx +
mov [eax+54h] ebx +
mov [eax+40h] edx +
mov eax 1 +
jmp loc_41FF01  +
xor eax eax +
jmp loc_41FF01  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 9Ch +
mov eax [esp+0A8h+arg_0] +
lea edi [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] offset aSLd +
mov [esp+0A8h+var_A8] edi +
mov [esp+0A8h+var_8C] ecx +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+arg_4] +
mov [esp+0A8h+var_A0] eax +
call sprintf  +
mov eax edi +
mov edx [eax] +
add eax 4 +
lea ebx [edx-1010101h] +
not edx  +
and ebx edx +
and ebx 80808080h +
jz loc_41FF8E  +
mov ecx ebx +
shr ecx 10h +
test ebx 8080h +
cmovz ebx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add bl bl +
sbb eax 3 +
sub eax edi +
add eax 1 +
mov [esp+0A8h+var_A4] eax +
mov [esp+0A8h+var_A8] esi +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_420040  +
mov [esp+0A8h+var_A4] edi +
mov [esp+0A8h+var_A8] eax +
call strcpy  +
mov [esp+0A8h+var_A0] 100h +
mov [esp+0A8h+var_A4] ebx +
mov [esp+0A8h+var_A8] esi +
call sub_403090  +
test eax eax +
mov ecx eax +
jz loc_420040  +
mov eax [ebp+0] +
mov [ecx+24h] eax +
mov eax [esp+0A8h+var_8C] +
mov eax [eax] +
mov dword ptr [ecx+54h] 0 +
mov dword ptr [ecx+40h] 2 +
mov [ecx+50h] eax +
mov eax [esi+0A0h] +
mov edx [eax+930h] +
mov eax 1 +
mov edi [edx+8] +
cmp [esp+0A8h+arg_0] edi +
jz loc_420050  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+0A8h+arg_4] +
mov eax esi +
call sub_41FEE0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_1C] ecx +
call strlen  +
mov [esp+38h+var_38] edi +
add eax 6 +
mov [esp+38h+var_34] eax +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_420102  +
mov eax [esp+38h+arg_0] +
mov esi offset a_rela +
mov ecx [esp+38h+var_1C] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aSS_6 +
test eax eax +
mov eax offset a_rel +
cmovz esi eax +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_30] esi +
call sprintf  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
mov [ebp+0] eax +
setnz al  +
add esp 2Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+4] +
mov [esp+28h+var_1C] ecx +
mov ecx [edx] +
mov edi [eax+1B0h] +
test ecx ecx +
jz loc_420142  +
mov [esp+28h+var_24] 0B19h +
mov [esp+28h+var_28] offset a____Binutil_10 +
call sub_404040  +
mov [esp+28h+var_24] 38h +
mov [esp+28h+var_28] esi +
call sub_406370  +
mov edx [esp+28h+arg_4] +
test edx edx +
mov ebx eax +
mov [ebp+0] eax +
jz loc_4201D3  +
mov dword ptr [eax] 0FFFFFFFFh +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_4201C0  +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 4 +
movzx edx byte ptr [eax+4] +
mov [ebx+28h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+18h] 0 +
shl eax cl +
mov [ebx+24h] eax +
mov eax 1 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 9 +
movzx edx byte ptr [eax+3] +
jmp loc_42017E  +
mov eax [esp+28h+arg_0] +
mov edx ebx +
mov ecx [esp+28h+var_1C] +
mov [esp+28h+var_28] eax +
mov eax esi +
call sub_420070  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_420165  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [edi+4] +
mov ebx [esi+8Ch] +
mov ebp [esi] +
mov eax [eax+1B0h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+4] +
test edx edx +
jnz loc_4204D0  +
mov eax [eax] +
test eax eax +
jz loc_420640  +
test byte ptr [eax+0Ch] 1 +
jz loc_420255  +
mov edx [esi+14h] +
test dh 20h +
jz loc_420255  +
cmp byte ptr [ebp+1] 64h +
jz loc_4206F0  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
mov [ebx] eax +
jz loc_4205F7  +
mov edx [esi+14h] +
mov [esp+2Ch+var_10] 0 +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
jnz loc_4202A3  +
test byte ptr [esi+18h] 1 +
jz loc_420582  +
mov eax [esi+1Ch] +
mov [ebx+0Ch] eax +
mov ecx [esi+40h] +
mov eax [esi+24h] +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp ecx 1Eh +
mov [ebx+18h] eax +
mov dword ptr [ebx+1Ch] 0 +
ja loc_420613  +
mov eax 1 +
shl eax cl +
mov ecx edx +
and ecx 2000000h +
mov [ebx+24h] eax +
mov eax 11h +
mov [ebx+2Ch] esi +
mov dword ptr [ebx+30h] 0 +
mov [esp+2Ch+var_14] ecx +
jnz loc_42030C  +
mov ecx edx +
mov al 8 +
and ecx 103h +
cmp ecx 1 +
mov ecx 1 +
cmovnz eax ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_4204D8  +
mov [ebx+4] eax +
mov ecx eax +
cmp ecx 0Bh +
jz loc_420756  +
jbe loc_420530  +
cmp ecx 6FFFFFFDh +
jz loc_420730  +
ja loc_420680  +
cmp ecx 11h +
jz loc_4206C6  +
cmp ecx 6FFFFFF6h +
jnz loc_420368  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 40h +
setnz al  +
movzx eax al +
shl eax 2 +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_420374  +
or dword ptr [ebx+8] 2 +
test dl 8 +
jnz loc_42037D  +
or dword ptr [ebx+8] 1 +
test dl 10h +
jz loc_420386  +
or dword ptr [ebx+8] 4 +
test edx 800000h +
jz loc_4203AD  +
mov eax [ebx+8] +
mov ecx eax +
or ecx 10h +
test edx 1000000h +
mov [ebx+8] ecx +
mov ecx [esi+78h] +
mov [ebx+28h] ecx +
jz loc_4203AD  +
or eax 30h +
mov [ebx+8] eax +
mov eax [esp+2Ch+var_14] +
test eax eax +
jnz loc_4203C9  +
mov eax [esi+8Ch] +
mov eax [eax+74h] +
test eax eax +
jz loc_4203C9  +
or dword ptr [ebx+8] 200h +
test dh 4 +
jz loc_420406  +
mov eax [esi+24h] +
or dword ptr [ebx+8] 400h +
test eax eax +
jnz loc_420406  +
test dh 1 +
jnz loc_420406  +
mov ecx [esi+0A4h] +
mov dword ptr [ebx+18h] 0 +
test ecx ecx +
jz loc_420406  +
mov eax [ecx+0Ch] +
add eax [ecx+8] +
test eax eax +
mov [ebx+18h] eax +
jz loc_420406  +
mov dword ptr [ebx+4] 8 +
mov eax edx +
and eax 2008000h +
cmp eax 8000h +
jz loc_420607  +
and edx 4 +
jz loc_420490  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
jz loc_420450  +
mov ecx [ebx+40h] +
mov edx [ebx+50h] +
mov [esp+2Ch+var_18] ecx +
add ecx edx +
test ecx ecx +
jz loc_420450  +
movzx ecx byte ptr [eax] +
and ecx 3 +
cmp cl 2 +
jz loc_420590  +
cmp byte ptr [eax+2] 0 +
js loc_420590  +
movzx ecx byte ptr [esi+19h] +
lea eax [ebx+3Ch] +
lea edx [ebx+4Ch] +
shr cl 2 +
and ecx 1 +
test byte ptr [esi+19h] 4 +
mov [esp+2Ch+var_2C] ecx +
mov ecx ebp +
cmovz edx eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_420110  +
test eax eax +
jnz loc_420490  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
lea esi [esi+0] +
mov eax [esp+2Ch+var_1C] +
mov ebp [ebx+4] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_4204BA  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] edi +
call eax  +
test eax eax +
jnz loc_4204BA  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
cmp ebp 8 +
jnz loc_4204D0  +
mov eax [esi+24h] +
test eax eax +
jz loc_4204D0  +
mov dword ptr [ebx+4] 8 +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 8 +
jnz loc_42031C  +
cmp eax 1 +
jnz loc_420368  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_420374  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] offset aWarningSection +
call off_4733A4  +
mov dword ptr [ebx+4] 1 +
mov edx [esi+14h] +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax edx +
and eax 2000000h +
mov [esp+2Ch+var_14] eax +
jmp loc_420368  +
cmp ecx 5 +
jz loc_420716  +
jbe loc_420770  +
cmp ecx 6 +
jz loc_4206B0  +
cmp ecx 9 +
nop   +
lea esi [esi+0] +
jnz loc_420368  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 4 +
jz loc_420368  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+3] +
mov [ebx+28h] eax +
jmp loc_420368  +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_4202A9  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_4205C1  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jnz loc_4205C1  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+3Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_420110  +
test eax eax +
jz loc_4205F7  +
mov edx [ebx+50h] +
test edx edx +
jz loc_420490  +
mov edx [ebx+4Ch] +
test edx edx +
jnz loc_420490  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+4Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 1 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_420110  +
test eax eax +
jnz loc_420490  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
jmp loc_4204D0  +
or dword ptr [ebx+8] 80000000h +
jmp loc_420418  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] offset aBErrorAlignmen +
call off_4733A4  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+17h] 10h +
jz loc_420255  +
mov eax [edi+28h] +
shr eax 5 +
test eax 28000h +
jz loc_4207A5  +
cmp byte ptr [ebp+1] 7Ah +
jnz loc_420255  +
mov edx ebp +
mov eax edi +
call sub_41F680  +
test eax eax +
mov ebp eax +
jnz loc_420255  +
jmp loc_4205F7  +
cmp ecx 6FFFFFFEh +
jnz loc_4206D2  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_4207D5  +
mov eax [edi+0A0h] +
mov eax [eax+23Ch] +
mov [ebx+20h] eax +
jmp loc_420368  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+6] +
mov [ebx+28h] eax +
jmp loc_420368  +
mov dword ptr [ebx+28h] 4 +
jmp loc_420368  +
cmp ecx 6FFFFFFFh +
jnz loc_420368  +
mov dword ptr [ebx+28h] 2 +
jmp loc_420368  +
cmp byte ptr [ebp+6] 5Fh +
jnz loc_420255  +
or edx 8000000h +
mov [esi+14h] edx +
mov [esp+2Ch+var_10] 1 +
mov dword ptr [ebx] 0FFFFFFFFh +
jmp loc_42028E  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
mov [ebx+28h] eax +
jmp loc_420368  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_420810  +
mov eax [edi+0A0h] +
mov eax [eax+238h] +
mov [ebx+20h] eax +
jmp loc_420368  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [ebx+28h] eax +
jmp loc_420368  +
cmp ecx 4 +
jnz loc_420368  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 8 +
jz loc_420368  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+4] +
mov [ebx+28h] eax +
jmp loc_420368  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jnz loc_420255  +
mov edx ebp +
mov eax edi +
call sub_41F6D0  +
test eax eax +
jz loc_4205F7  +
cmp byte ptr [ebp+1] 7Ah +
jz loc_420836  +
mov ebp eax +
lea esi [esi+0] +
jmp loc_420255  +
mov ecx [edi+0A0h] +
mov ecx [ecx+23Ch] +
test ecx ecx +
jz loc_420368  +
cmp eax ecx +
jz loc_420368  +
mov [esp+2Ch+var_28] 0C08h +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_404040  +
jmp loc_42050E  +
mov ecx [edi+0A0h] +
mov ecx [ecx+238h] +
test ecx ecx +
jz loc_420368  +
cmp eax ecx +
jz loc_420368  +
mov [esp+2Ch+var_28] 0BFCh +
jmp loc_4207F9  +
mov [esp+2Ch+var_28] 0B87h +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
mov [esp+2Ch+var_18] eax +
call sub_404040  +
mov eax [esp+2Ch+var_18] +
mov ebp eax +
jmp loc_420255  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset a8_8x +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] ebx +
movzx edx word ptr [esi] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+2] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+2] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+4] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+6] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+6] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+8] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+0Ch] +
mov edx [esi+0Ch] +
add ebx 10h +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+2] +
mov [ebx] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+4] +
mov [ebx+2] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+6] +
mov [ebx+4] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+6] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edx [esp+1Ch+arg_8] +
mov [edx] ax +
add esp 1Ch +
retn   +
***
jmp sub_420C60  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov eax [eax+4] +
mov eax [eax+60h] +
mov [esp+arg_4] ecx +
movzx edx word ptr [edx] +
mov [esp+arg_0] edx +
jmp eax  +
***
xor eax eax +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test cl cl +
jz locret_420CB2  +
shl eax 4 +
add eax ecx +
mov ecx eax +
and ecx 0F0000000h +
jz loc_420C86  +
xor eax ecx +
add edx 1 +
shr ecx 18h +
xor eax ecx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jnz loc_420C91  +
retn   +
***
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
mov eax 1505h +
test dl dl +
jz loc_420CE8  +
mov ebx eax +
add ecx 1 +
shl ebx 5 +
add edx ebx +
add eax edx +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_420CD4  +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
cmp esi 937h +
jbe loc_420D71  +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
call sub_406370  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_420D90  +
mov edx [esp+14h+arg_8] +
mov esi 1 +
mov [eax+920h] edx +
movzx edx byte ptr [ebx+28h] +
and edx 18h +
cmp dl 8 +
jz loc_420D69  +
mov [esp+14h+var_10] 40h +
mov [esp+14h+var_14] ebx +
call sub_406370  +
test eax eax +
jz loc_420D90  +
mov edx [ebx+0A0h] +
mov [edx+934h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+1Ch] 0FFFFFFFFh +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0F0h +
mov [esp+14h+var_14] offset a____Binutil_10 +
call sub_404040  +
jmp loc_420D05  +
xor esi esi +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+4] +
mov dword ptr [esp+4] 938h +
mov [esp] eax +
mov [esp+8] edx +
call sub_420CF0  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov eax [ebx+4] +
mov eax [eax+78h] +
mov [esp] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_420E19  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 14h +
mov [esp] ebx +
call sub_406370  +
xor edx edx +
mov [esi+930h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+930h] +
test eax eax +
setnz dl  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_420E30  +
***
mov ecx [esp+arg_8] +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test ecx ecx +
jz loc_420E42  +
jmp loc_420E50  +
mov eax offset unk_489712 +
retn   +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov eax [eax+0A0h] +
mov ebx [eax+40h] +
test ebx ebx +
jz loc_420F87  +
cmp [eax+214h] edx +
jbe loc_420F87  +
lea edi [ebx+edx*4] +
mov ebx [edi] +
mov eax [ebx+30h] +
test eax eax +
jz loc_420EA0  +
mov eax [ebx+18h] +
cmp eax ecx +
jbe loc_420F91  +
mov eax [ebx+30h] +
add eax ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
cmp eax 5FFFFFFFh +
jbe loc_420FF2  +
mov ebp [ebx+18h] +
mov [esp+4Ch+var_28] ecx +
mov eax [ebx+10h] +
mov [esp+4Ch+var_2C] edx +
mov edx [ebx+14h] +
lea ecx [ebp+1] +
cmp ecx 1 +
mov [esp+4Ch+var_24] ecx +
jbe loc_420F80  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_403BF0  +
mov edx [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+var_28] +
test eax eax +
jnz loc_420FEE  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_20] ecx +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_48] eax +
call sub_406290  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_20] +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_420FEE  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_24] ecx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
call sub_4039E0  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_24] +
cmp ebp eax +
jz loc_421017  +
call sub_403EA0  +
sub eax 1 +
jz loc_420F65  +
mov [esp+4Ch+var_4C] 12h +
call sub_4040F0  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call sub_4064E0  +
mov ebx [edi] +
mov dword ptr [ebx+18h] 0 +
nop   +
mov dword ptr [ebx+30h] 0 +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov ebp [edi+3Ch] +
mov edi off_4733A4 +
cmp edx ebp +
mov edx [ebx] +
jz loc_420FE1  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_2C] ecx +
call sub_420E30  +
mov edx [ebx+18h] +
mov ecx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBInvalidString +
call edi  +
xor eax eax +
jmp loc_420E92  +
cmp ecx edx +
jnz loc_420FA6  +
mov edx eax +
mov eax offset a_shstrtab +
jmp loc_420FC1  +
mov ebx [edi] +
jmp loc_420F80  +
cmp eax 3 +
jz loc_420EAE  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBAttemptToLoad +
call off_4733A4  +
xor eax eax +
jmp loc_420E92  +
mov eax [esp+4Ch+var_2C] +
mov byte ptr [eax+ebp] 0 +
mov eax [edi] +
mov edi [esp+4Ch+var_2C] +
mov [eax+30h] edi +
jmp loc_420E82  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov esi [eax+4] +
cmp dword ptr [esi+4] 5 +
jnz loc_421350  +
mov ebx [esp+3Ch+arg_8] +
test ebx ebx +
jz loc_421109  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+0A0h] +
mov edi [ebp+208h] +
test edi edi +
jz loc_4211B0  +
mov ebx [ebp+40h] +
mov eax edi +
mov edx [eax+1Ch] +
cmp [ebx+edx*4] ecx +
jz loc_42108C  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_421075  +
add ebp 48h +
cmp ecx ebp +
cmovz eax edi +
mov [esp+3Ch+var_24] eax +
mov ebp [esi+1B0h] +
xor ebx ebx +
mov edx [esp+3Ch+arg_14] +
mov esi [ecx+10h] +
mov edi [ecx+14h] +
mov eax [ebp+174h] +
test edx edx +
movzx eax byte ptr [eax+5] +
mov [esp+3Ch+var_1C] eax +
jz loc_4211BD  +
mov eax [esp+3Ch+var_1C] +
xor edx edx +
imul eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
add eax esi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
adc edx edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_403BF0  +
test eax eax +
jz loc_421115  +
xor esi esi +
mov [esp+3Ch+arg_10] 0 +
test ebx ebx +
jz loc_4210FD  +
mov [esp+3Ch+var_3C] ebx +
call free  +
test esi esi +
jz loc_421109  +
mov [esp+3Ch+var_3C] esi +
call free  +
mov eax [esp+3Ch+arg_10] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+var_1C] +
imul esi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_4039E0  +
cmp eax esi +
jnz loc_4210E7  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_4211E6  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_4211E6  +
mov edx [eax+14h] +
xor esi esi +
mov eax [eax+10h] +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_24] eax +
test edx edx +
jz loc_421323  +
mov eax [esp+3Ch+arg_C] +
xor edx edx +
mov [esp+3Ch+var_30] 0 +
shl eax 2 +
add eax [esp+3Ch+var_24] +
adc edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_403BF0  +
test eax eax +
jz loc_4212CA  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_4210F1  +
mov [esp+3Ch+var_24] 0 +
jmp loc_421090  +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
call sub_408040  +
test eax eax +
mov [esp+3Ch+arg_14] eax +
jnz loc_42136C  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_421109  +
xor esi esi +
mov [esp+3Ch+arg_18] 0 +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_18] 0 +
test eax eax +
jz loc_4212FA  +
mov eax [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*4] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+3Ch+var_24] eax +
jnb loc_4210F1  +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_14] esi +
mov esi ebp +
mov [esp+3Ch+var_10] ebx +
mov ebx [esp+3Ch+arg_18] +
mov ebp edx +
jmp loc_421249  +
add edi 14h +
add ebp [esp+3Ch+var_1C] +
test ebx ebx +
lea eax [ebx+4] +
cmovnz ebx eax +
cmp [esp+3Ch+var_24] edi +
jbe loc_4212BD  +
mov eax [esi+174h] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+20h] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jnz loc_421234  +
mov eax ebp +
xor edx edx +
mov esi [esp+3Ch+var_14] +
sub eax [esp+3Ch+arg_14] +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] offset aBSymbolNumberL +
div  [esp+3Ch+var_1C] +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] eax +
call off_4733A4  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+arg_10] 0 +
test eax eax +
jz loc_4210F1  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_4210F1  +
mov esi [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
jmp loc_4210F1  +
mov eax [esp+3Ch+arg_8] +
lea edi ds:0[eax*4] +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] eax +
call sub_4039E0  +
cmp eax edi +
jnz loc_4211A2  +
jmp loc_4211F0  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] eax +
call sub_408040  +
test eax eax +
mov [esp+3Ch+arg_10] eax +
jz loc_4210F1  +
mov [esp+3Ch+var_18] eax +
jmp loc_421204  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call sub_408040  +
test eax eax +
mov esi eax +
jz loc_4211A2  +
mov [esp+3Ch+arg_18] eax +
jmp loc_42116D  +
mov [esp+3Ch+var_34] offset aBfd_elf_get_el +
mov [esp+3Ch+var_38] 18Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_10 +
call sub_404070  +
mov ebx eax +
jmp loc_4210B8  +
***
sub esp 4 +
mov ebx [esp+4+arg_8] +
mov eax [esp+4+arg_4] +
mov esi [esp+4+arg_C] +
mov ecx [ebx+8] +
mov edx [eax+1Ch] +
test ecx ecx +
jz loc_4213C0  +
mov eax [esp+4+arg_0] +
call loc_420E50  +
test eax eax +
jz loc_4213F7  +
test esi esi +
jz loc_4213B4  +
cmp byte ptr [eax] 0 +
nop   +
jnz loc_4213B4  +
mov eax [esi] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
movzx edx byte ptr [ebx+0Ch] +
mov eax offset unk_489712 +
and edx 0Fh +
cmp dl 3 +
jnz loc_4213A8  +
mov ecx [ebx+10h] +
mov ebx [esp+4+arg_0] +
mov edx [ebx+0A0h] +
cmp ecx [edx+214h] +
jnb loc_4213A8  +
mov ebx [edx+40h] +
mov edx [edx+3Ch] +
mov ecx [ebx+ecx*4] +
mov ecx [ecx] +
test ecx ecx +
jz loc_4213A8  +
jmp loc_42139B  +
mov eax offset aNull_0 +
jmp loc_4213B4  +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+44h+arg_0] +
mov eax [ebp+0A0h] +
mov ebx [ebp+64h] +
mov eax [eax+908h] +
test ebx ebx +
mov [esp+44h+var_24] eax +
jnz loc_42145B  +
jmp loc_4214B7  +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_421454  +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBWarningSh_lin +
call eax  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4214B7  +
mov eax [ebx+8Ch] +
test byte ptr [eax+8] 80h +
jz loc_421454  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_421430  +
mov ecx [ebp+0A0h] +
cmp edx [ecx+214h] +
jb loc_421540  +
mov eax [ebx+94h] +
xor edi edi +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_44] offset aBSh_linkDInSec +
mov [esp+44h+var_40] eax +
call off_4733A4  +
mov eax [ebx+8Ch] +
xor ecx ecx +
mov [eax+64h] ecx +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_42145B  +
mov eax [esp+44h+var_24] +
cmp eax 0FFFFFFFFh +
jz loc_421590  +
test eax eax +
jz loc_421590  +
mov [esp+44h+var_28] 0 +
mov edx edi +
mov eax [ebp+0A0h] +
mov edi [esp+44h+var_28] +
mov eax [eax+904h] +
mov ebx [eax+edi*4] +
test ebx ebx +
jz loc_421560  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_421560  +
mov eax [ebx+30h] +
test eax eax +
jz loc_421560  +
mov edi [ebx+18h] +
lea esi [eax+4] +
shr edi 2 +
jmp loc_421515  +
mov eax [eax+8Ch] +
mov ecx [ebx+2Ch] +
mov [eax+78h] ecx +
add esi 4 +
sub edi 1 +
jz loc_42157B  +
mov ecx [esi] +
mov eax [ecx+2Ch] +
test eax eax +
jnz loc_421506  +
mov eax [ecx+4] +
cmp eax 9 +
jz loc_421530  +
cmp eax 4 +
jnz loc_4215A0  +
mov eax [ebx+2Ch] +
sub dword ptr [eax+24h] 4 +
jmp loc_421512  +
mov ecx [ecx+40h] +
mov ecx [ecx+edx*4] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_421480  +
mov [eax+64h] ecx +
jmp loc_4214B0  +
mov eax [esp+44h+var_28] +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBSectionGroupE +
mov [esp+44h+var_3C] eax +
call off_4733A4  +
xor edx edx +
add [esp+44h+var_28] 1 +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_24] eax +
jnz loc_4214D6  +
mov edi edx +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx off_4733A4 +
mov ecx [ecx] +
mov [esp+44h+var_20] edx +
mov edx [ebx+2Ch] +
test ecx ecx +
mov edx [edx] +
mov [esp+44h+var_1C] edx +
mov edx [ebp+0A0h] +
mov edx [edx+3Ch] +
mov [esp+44h+var_18] edx +
mov edx offset unk_489712 +
jnz loc_4215F3  +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_44] offset aBUnknownDSecti +
call eax  +
xor edx edx +
jmp loc_421512  +
mov edx [esp+44h+var_18] +
mov eax ebp +
call loc_420E50  +
mov edx eax +
mov eax [esi] +
mov eax [eax+4] +
jmp loc_4215CB  +
***
mov eax [esp+8] +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
setnz al  +
movzx eax al +
retn   +
***
mov ecx [esp+8] +
mov edx [ecx+0Ch] +
mov edx [edx+24h] +
test edx edx +
jnz loc_421670  +
mov eax [esp+14h] +
mov ecx [esp+8] +
mov eax [eax+38h] +
add [ecx+4] eax +
xor eax eax +
retn   +
***
mov edx [ecx+8] +
test edx edx +
jz loc_42165E  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4216A5  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_421698  +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_4216E0  +
mov edx [ebx+0A0h] +
mov edx [edx+20h] +
mov [eax+20h] edx +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov dword ptr [edx+3Ch] 1 +
mov edx [ebx+0A0h] +
mov edx [edx+20Ch] +
mov [eax+20Ch] edx +
mov edx [ebx+0A0h] +
mov eax [esi+0A0h] +
movzx edx byte ptr [edx+7] +
mov [eax+7] dl +
mov [esp+4] esi +
mov [esp] ebx +
call sub_44BF00  +
mov eax [ebx+0A0h] +
mov [esp+10h] eax +
mov ebp [eax+40h] +
mov eax [esi+0A0h] +
mov edx [eax+40h] +
test edx edx +
jz loc_421698  +
test ebp ebp +
jz loc_421698  +
mov eax [eax+214h] +
test eax eax +
jz loc_421698  +
lea eax [edx+eax*4] +
mov edi edx +
mov [esp+8] eax +
jmp loc_42175D  +
add edi 4 +
cmp edi [esp+8] +
jz loc_421698  +
mov ecx [edi] +
test ecx ecx +
jz loc_421750  +
cmp dword ptr [ecx+4] 8 +
jnz loc_421750  +
mov eax [ecx+18h] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_421750  +
mov eax [ecx+20h] +
test eax eax +
mov [esp+18h] eax +
jz loc_421786  +
mov eax [ecx+1Ch] +
test eax eax +
jnz loc_421750  +
mov eax [esp+10h] +
mov ebx [eax+214h] +
test ebx ebx +
jz loc_421750  +
mov esi [ecx+8] +
xor eax eax +
mov [esp+14h] edi +
jmp loc_4217A7  +
add eax 1 +
cmp eax ebx +
jz loc_421815  +
mov edx [ebp+eax*4+0] +
cmp [edx+8] esi +
jnz loc_4217A0  +
mov edi [ecx+24h] +
cmp [edx+24h] edi +
jnz loc_4217A0  +
mov edi [ecx+28h] +
cmp [edx+28h] edi +
jnz loc_4217A0  +
mov edi [esp+0Ch] +
cmp edi [edx+18h] +
jnz loc_4217A0  +
mov edi [ecx+0Ch] +
cmp [edx+0Ch] edi +
jnz loc_4217A0  +
mov edi [edx+20h] +
cmp [esp+18h] edi +
mov [esp+1Ch] edi +
jnz loc_42181E  +
mov edi [ecx+1Ch] +
cmp [edx+1Ch] edi +
jz loc_4217A0  +
mov eax [esp+18h] +
mov edi [esp+14h] +
mov [esp+1Ch] eax +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_4217FE  +
mov eax [edx+1Ch] +
mov [ecx+1Ch] eax +
cmp dword ptr [esp+18h] 0 +
jnz loc_421750  +
mov eax [esp+1Ch] +
mov [ecx+20h] eax +
jmp loc_421750  +
***
mov edi [esp+14h] +
jmp loc_421750  +
***
mov edi [esp+14h] +
jmp loc_4217F2  +
***
mov edx [esp+arg_0] +
mov eax [edx+0A0h] +
mov ecx [eax+914h] +
test ecx ecx +
jz loc_4218CA  +
mov esi [eax+918h] +
test esi esi +
jz loc_4218C0  +
mov eax [esp+arg_4] +
mov ecx [esp+arg_8] +
movzx ebx word ptr [eax+30h] +
movsx eax bx +
shr eax 1Fh +
and ebx 7FFFh +
mov [ecx] eax +
mov eax offset unk_489712 +
jz loc_4218B9  +
cmp ebx 1 +
jz loc_4218CF  +
mov edx [edx+0A0h] +
cmp ebx [edx+238h] +
jbe loc_4218D7  +
mov esi [edx+244h] +
test esi esi +
jz loc_4218B9  +
mov edx [esi+18h] +
test edx edx +
jnz loc_4218A7  +
jmp loc_4218B2  +
mov edx [edx+14h] +
test edx edx +
jz loc_4218B2  +
movzx ecx word ptr [edx+6] +
cmp ecx ebx +
jnz loc_4218A0  +
mov eax [edx+10h] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_421892  +
pop ebx  +
pop esi  +
retn   +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_421854  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax offset aBase +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+240h] +
lea eax [ebx+ebx*4] +
pop ebx  +
pop esi  +
lea eax [ecx+eax*8] +
mov eax [eax-10h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+4Ch] +
mov ebx [esp+44h] +
mov edi [esp+48h] +
cmp eax 1 +
jz loc_421A50  +
jb loc_421A36  +
cmp eax 2 +
jnz loc_421A2E  +
mov eax [edi+10h] +
test eax eax +
jz loc_421B80  +
mov esi [eax] +
mov eax [esp+40h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0CCh] +
test eax eax +
jz loc_421AA6  +
mov edx [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_421AA6  +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aS_14 +
mov [esp] ebx +
call fprintf  +
mov eax [edi+10h] +
test eax eax +
jz loc_421AC2  +
test byte ptr [eax+15h] 10h +
jz loc_421AC2  +
mov eax [edi+18h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_404A20  +
lea eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_421830  +
test eax eax +
mov esi eax +
jz loc_4219DC  +
mov eax [esp+1Ch] +
mov [esp+8] esi +
test eax eax +
jnz loc_421AD0  +
mov dword ptr [esp+4] offset a11s +
mov [esp] ebx +
call fprintf  +
movzx eax byte ptr [edi+25h] +
cmp al 1 +
jz loc_421B55  +
jb loc_421A1A  +
cmp al 2 +
jz loc_421B30  +
cmp al 3 +
jnz loc_421B11  +
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_protected +
call fwrite  +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aS_16 +
mov [esp] ebx +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call fputs  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aElf +
call fwrite  +
mov eax [edi+8] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_404A20  +
mov eax [edi+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+4] offset aLx +
mov [esp+8] eax +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov ebp [edi+4] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_413480  +
jmp loc_42195E  +
***
mov eax [edi+1Ch] +
jmp loc_42198A  +
***
mov dword ptr [esp+4] offset aS_15 +
mov [esp] ebx +
call fprintf  +
mov [esp] esi +
mov esi 0Ah +
call strlen  +
sub esi eax +
test esi esi +
jle loc_4219DC  +
mov [esp+4] ebx +
mov dword ptr [esp] 20h +
call putc  +
sub esi 1 +
jnz loc_421AF7  +
jmp loc_4219DC  +
***
mov [esp+8] eax +
mov dword ptr [esp+4] offset a0x02x +
mov [esp] ebx +
call fprintf  +
jmp loc_421A1A  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 8 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_hidden +
call fwrite  +
jmp loc_421A1A  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Ah +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_internal +
call fwrite  +
jmp loc_421A1A  +
***
mov esi offset aNone_0 +
jmp loc_421928  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+48h+arg_0] +
mov esi [ebx+0A0h] +
mov edx [esi+214h] +
cmp edx [esp+48h+arg_4] +
jbe loc_421D3B  +
mov eax ds:dword_49A41C +
add eax 1 +
cmp eax 3 +
mov ds:dword_49A41C eax +
ja loc_421D43  +
mov eax [esp+48h+arg_4] +
shl eax 2 +
mov [esp+48h+var_30] eax +
mov eax [esi+40h] +
mov edx offset unk_489712 +
mov edi [esp+48h+var_30] +
mov ebp [eax+edi] +
mov eax [esi+3Ch] +
mov ecx [ebp+0] +
test ecx ecx +
jnz loc_421F94  +
mov eax [ebx+4] +
mov ecx [eax+1B0h] +
mov eax [ebp+4] +
cmp eax 0Ah +
jz loc_422064  +
jbe loc_421DA0  +
cmp eax 12h +
jz loc_422623  +
jbe loc_421F10  +
cmp eax 6FFFFFFDh +
jz loc_422588  +
jbe loc_4224E2  +
cmp eax 6FFFFFFEh +
jz loc_422208  +
cmp eax 6FFFFFFFh +
jnz loc_4224F0  +
cmp dword ptr [ebp+28h] 2 +
jnz loc_421D00  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+914h] edi +
mov eax [ebx+0A0h] +
mov [eax+160h] ecx +
mov ecx [ebp+4] +
mov [eax+164h] ecx +
mov ecx [ebp+8] +
mov [eax+168h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+16Ch] ecx +
mov ecx [ebp+10h] +
mov [eax+170h] ecx +
mov ecx [ebp+14h] +
mov [eax+174h] ecx +
mov ecx [ebp+18h] +
mov [eax+178h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+17Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+180h] ecx +
mov ecx [ebp+24h] +
mov [eax+184h] ecx +
mov ecx [ebp+28h] +
mov [eax+188h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+18Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+190h] ecx +
mov ecx [ebp+34h] +
mov [eax+194h] ecx +
mov eax edi +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_422BB0  +
jmp loc_421D02  +
mov ebx ebp +
lea esi [esi+0] +
xor eax eax +
mov edx ds:dword_49A414 +
test edx edx +
jz loc_421D18  +
cmp ds:dword_49A418 ebx +
jz loc_422070  +
mov edi ds:dword_49A41C +
lea edx [edi-1] +
test edx edx +
mov ds:dword_49A41C edx +
jnz loc_421D3B  +
mov ds:dword_49A414 0 +
mov ds:dword_49A418 ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ds:dword_49A418 ebx +
jz loc_4224D0  +
mov ds:dword_49A414 0 +
shl edx 2 +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
call sub_406370  +
mov ds:dword_49A418 ebx +
mov ds:dword_49A414 eax +
mov esi [esp+48h+arg_4] +
lea edi ds:0[esi*4] +
add eax edi +
mov ebp [eax] +
mov [esp+48h+var_30] edi +
test ebp ebp +
jnz loc_422080  +
mov dword ptr [eax] 1 +
mov esi [ebx+0A0h] +
jmp loc_421BD4  +
cmp eax 4 +
jz loc_4222A3  +
ja loc_421FB0  +
cmp eax 1 +
jz loc_4224C0  +
nop   +
lea esi [esi+0] +
jb loc_422064  +
cmp eax 2 +
jz loc_422098  +
cmp eax 3 +
jnz loc_4224F0  +
mov edi [ebp+2Ch] +
test edi edi +
jnz loc_422064  +
mov eax [esp+48h+arg_4] +
cmp [esi+3Ch] eax +
jz loc_4229B2  +
mov edi [ebx+0A0h] +
mov ecx [esp+48h+arg_4] +
mov esi [edi+90Ch] +
mov eax [edi+40h] +
mov [esp+48h+var_2C] esi +
mov esi [eax+esi*4] +
cmp [esi+1Ch] ecx +
jz loc_422A5B  +
mov esi [edi+910h] +
mov ecx [eax+esi*4] +
mov [esp+48h+var_28] esi +
mov esi [esp+48h+arg_4] +
cmp [ecx+1Ch] esi +
jz loc_421EC8  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_421E41  +
mov ecx [esp+48h+var_28] +
test ecx ecx +
jnz loc_4224C0  +
mov ecx [edi+214h] +
cmp ecx 1 +
jbe loc_4224C0  +
mov [esp+48h+var_28] edx +
mov edx edi +
mov esi 1 +
mov [esp+48h+var_2C] ebp +
mov edi ecx +
mov ebp ebx +
mov ecx edx +
mov ebx [esp+48h+arg_4] +
jmp loc_421E7E  +
add esi 1 +
cmp esi edi +
jz loc_4224B6  +
mov eax [ecx+40h] +
mov eax [eax+esi*4] +
cmp [eax+1Ch] ebx +
jnz loc_421E70  +
cmp esi ebx +
jz loc_421CF8  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebp +
call sub_421B90  +
test eax eax +
jz loc_421CF8  +
mov ecx [ebp+0A0h] +
cmp [ecx+90Ch] esi +
jz loc_422A53  +
cmp [ecx+910h] esi +
jnz loc_421E70  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov edi ecx +
mov ebp [esp+48h+var_2C] +
add edi 128h +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov ecx [ebx+0A0h] +
lea eax [ecx+128h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
mov edi [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] edi +
call sub_422BB0  +
jmp loc_421D02  +
cmp eax 10h +
ja loc_422735  +
cmp eax 0Eh +
lea esi [esi+0] +
jnb loc_4224C0  +
cmp eax 0Bh +
jnz loc_4224F0  +
mov esi [ebx+0A0h] +
mov eax [esi+910h] +
cmp eax [esp+48h+arg_4] +
jz loc_422064  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_421D00  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_4227D8  +
test eax eax +
mov eax [esp+48h+arg_4] +
jz loc_4228E6  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMultip +
call off_4733A4  +
mov eax 1 +
jmp loc_421D02  +
mov edx eax +
mov eax ebx +
call loc_420E50  +
test eax eax +
mov edx eax +
jz loc_421D00  +
jmp loc_421BF1  +
cmp eax 8 +
ja loc_4222A3  +
cmp eax 7 +
lea esi [esi+0] +
jnb loc_4224C0  +
cmp eax 5 +
jz loc_4224C0  +
cmp eax 6 +
jnz loc_4224F0  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_422BB0  +
test eax eax +
jz loc_421D00  +
mov eax [ebx+0A0h] +
mov edx [ebp+1Ch] +
mov ecx [eax+214h] +
cmp edx ecx +
ja loc_4227F1  +
mov esi [eax+40h] +
mov edx [esi+edx*4] +
test edx edx +
jz loc_421D00  +
cmp dword ptr [edx+4] 3 +
jz loc_422064  +
mov eax [eax+910h] +
test eax eax +
jnz loc_42281D  +
cmp ecx 1 +
jbe loc_422064  +
mov edx [esi+4] +
mov eax 1 +
cmp dword ptr [edx+4] 0Bh +
jnz loc_42205D  +
jmp loc_4228D6  +
mov edx [esi+eax*4] +
cmp dword ptr [edx+4] 0Bh +
jz loc_4228D6  +
add eax 1 +
cmp eax ecx +
jnz loc_422050  +
mov eax 1 +
jmp loc_421D02  +
mov edi [esp+48h+var_30] +
mov dword ptr [edx+edi] 0 +
jmp loc_421D18  +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningLoopIn +
call off_4733A4  +
xor eax eax +
jmp loc_421D3B  +
mov esi [ebx+0A0h] +
mov eax [esi+90Ch] +
cmp eax [esp+48h+arg_4] +
jz loc_422064  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_421D00  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_4227D8  +
test eax eax +
mov eax [esp+48h+arg_4] +
jnz loc_422B18  +
mov [esi+90Ch] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+48h] ecx +
mov ecx [ebp+4] +
mov [eax+4Ch] ecx +
mov ecx [ebp+8] +
mov [eax+50h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+54h] ecx +
mov ecx [ebp+10h] +
mov [eax+58h] ecx +
mov ecx [ebp+14h] +
mov [eax+5Ch] ecx +
mov ecx [ebp+18h] +
mov [eax+60h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+64h] ecx +
mov ecx [ebp+20h] +
mov [eax+68h] ecx +
mov ecx [ebp+24h] +
mov [eax+6Ch] ecx +
mov ecx [ebp+28h] +
mov [eax+70h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+74h] ecx +
mov ecx [ebp+30h] +
mov [eax+78h] ecx +
mov ecx [ebp+34h] +
mov [eax+7Ch] ecx +
mov ecx [ebx+0A0h] +
mov eax [ecx+40h] +
lea ebp [ecx+48h] +
mov [eax+edi] ebp +
mov esi [ebx+28h] +
mov eax esi +
and esi 0FF80001Fh +
shr eax 5 +
and eax 3FFFFh +
mov edi eax +
or edi 10h +
shl edi 5 +
or esi edi +
mov [ebx+28h] esi +
test byte ptr [ecx+50h] 2 +
jz loc_42217B  +
test al 40h +
jnz loc_422B7E  +
mov esi [ebx+0A0h] +
mov eax [esi+208h] +
test eax eax +
jz loc_4221B2  +
mov edi [esp+48h+arg_4] +
cmp [eax+1Ch] edi +
mov edx [esp+48h+arg_4] +
jnz loc_4221A9  +
jmp loc_422064  +
cmp [eax+1Ch] edx +
jz loc_422064  +
mov eax [eax+3Ch] +
test eax eax +
nop   +
jnz loc_4221A0  +
mov eax [esp+48h+arg_4] +
mov ecx [esi+214h] +
add eax 1 +
cmp ecx eax +
jbe loc_4221E5  +
mov edi [esi+40h] +
mov ebp [esp+48h+arg_4] +
jmp loc_4221D7  +
add eax 1 +
cmp ecx eax +
jbe loc_4221E5  +
mov edx [edi+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_4221D0  +
cmp [edx+1Ch] ebp +
jnz loc_4221D0  +
cmp eax ecx +
jz loc_422B44  +
cmp eax [esp+48h+arg_4] +
jz loc_422064  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_421B90  +
jmp loc_421D02  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+91Ch] edi +
mov eax [ebx+0A0h] +
mov [eax+198h] ecx +
mov ecx [ebp+4] +
mov [eax+19Ch] ecx +
mov ecx [ebp+8] +
mov [eax+1A0h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1A4h] ecx +
mov ecx [ebp+10h] +
mov [eax+1A8h] ecx +
mov ecx [ebp+14h] +
mov [eax+1ACh] ecx +
mov ecx [ebp+18h] +
mov [eax+1B0h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1B4h] ecx +
mov ecx [ebp+20h] +
mov [eax+1B8h] ecx +
mov ecx [ebp+24h] +
mov [eax+1BCh] ecx +
mov ecx [ebp+28h] +
mov [eax+1C0h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1C4h] ecx +
mov ecx [ebp+30h] +
mov [eax+1C8h] ecx +
mov ecx [ebp+34h] +
mov [eax+1CCh] ecx +
mov eax edi +
jmp loc_421CE2  +
mov edi [ebx+0A0h] +
cmp eax 9 +
mov eax [ecx+174h] +
mov esi [edi+214h] +
mov [esp+48h+var_2C] esi +
mov esi [ebp+28h] +
jz loc_42272C  +
movzx eax byte ptr [eax+4] +
cmp esi eax +
jnz loc_421D00  +
mov eax [ebp+1Ch] +
cmp [esp+48h+var_2C] eax +
mov [esp+48h+var_28] eax +
jbe loc_422830  +
mov eax [ebx+28h] +
mov esi [edi+40h] +
shr eax 5 +
test al 42h +
jnz loc_422366  +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 2 +
jz loc_42287A  +
cmp eax 0Bh +
jz loc_42287A  +
mov ecx [esp+48h+var_2C] +
cmp ecx 1 +
jbe loc_422382  +
mov [esp+48h+var_24] ebp +
mov eax 1 +
mov ebp ecx +
mov [esp+48h+var_20] edi +
xor edi edi +
mov [esp+48h+var_1C] 0 +
lea esi [esi+0] +
mov ecx [esi+eax*4] +
mov ecx [ecx+4] +
cmp ecx 0Bh +
jz loc_422340  +
cmp ecx 2 +
jnz loc_42234A  +
test edi edi +
jnz loc_422B37  +
mov edi eax +
add eax 1 +
cmp eax ebp +
jnz loc_422330  +
mov eax edi +
mov ebp [esp+48h+var_24] +
test eax eax +
mov edi [esp+48h+var_20] +
jz loc_422382  +
mov [ebp+1Ch] eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 0Bh +
jz loc_42287A  +
cmp eax 2 +
jz loc_42287A  +
mov eax [esp+48h+var_28] +
cmp [edi+90Ch] eax +
jnz loc_4224C0  +
test eax eax +
jz loc_4224C0  +
mov eax [ebp+20h] +
test eax eax +
jz loc_4224C0  +
cmp [esp+48h+var_2C] eax +
jbe loc_4224C0  +
mov ecx [edi+40h] +
mov ecx [ecx+eax*4] +
mov ecx [ecx+4] +
cmp ecx 9 +
jz loc_4224C0  +
cmp ecx 4 +
jz loc_4224C0  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_421B90  +
test eax eax +
jz loc_421D00  +
mov edx [ebx+0A0h] +
mov eax [ebp+20h] +
cmp eax [edx+214h] +
jnb loc_421D00  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
test eax eax +
mov [esp+48h+var_2C] eax +
jz loc_421D00  +
mov eax [eax+8Ch] +
lea edx [eax+4Ch] +
add eax 3Ch +
cmp dword ptr [ebp+4] 4 +
cmovnz edx eax +
cmp dword ptr [edx] 0 +
jnz loc_421D00  +
mov [esp+48h+var_44] 38h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_28] edx +
call sub_406290  +
test eax eax +
jz loc_421D00  +
mov edx [esp+48h+var_28] +
mov edi eax +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov [edx] eax +
mov edx [ebx+0A0h] +
mov ecx [ebp+28h] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax [esp+48h+var_2C] +
mov esi [eax+4Ch] +
xor eax eax +
test ecx ecx +
jz loc_422478  +
mov eax [ebp+18h] +
xor edx edx +
div  ecx +
mov edi [esp+48h+var_2C] +
add eax esi +
mov edx [ebp+14h] +
mov [edi+4Ch] eax +
mov eax [ebp+10h] +
or dword ptr [edi+14h] 4 +
cmp dword ptr [ebp+18h] 0 +
mov dword ptr [edi+44h] 0 +
mov [edi+58h] eax +
mov [edi+5Ch] edx +
jz loc_4224A8  +
cmp dword ptr [ebp+4] 4 +
jnz loc_4224A8  +
or byte ptr [edi+19h] 4 +
or dword ptr [ebx+28h] 20h +
mov eax 1 +
jmp loc_421D02  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov ebp [esp+48h+var_2C] +
mov eax [esp+48h+arg_4] +
jmp loc_421CE2  +
mov eax ds:dword_49A414 +
test eax eax +
jnz loc_421D73  +
jmp loc_421D59  +
lea esi [eax-6FFFFFF6h] +
cmp esi 1 +
jbe loc_4224C0  +
lea esi [esi+0] +
cmp eax 6FFFFFF5h +
jz loc_4226F6  +
cmp eax [ecx+190h] +
jz loc_4226F6  +
mov edi [esp+48h+arg_4] +
mov eax [ecx+4Ch] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call eax  +
mov edx [esp+48h+var_2C] +
test eax eax +
jnz loc_422064  +
mov eax [ebp+4] +
test eax eax +
js loc_4228AC  +
lea ecx [eax-70000000h] +
cmp ecx 0FFFFFFFh +
jbe loc_422992  +
lea ecx [eax-60000000h] +
cmp ecx 0FFFFFFFh +
ja loc_422AF8  +
test byte ptr [ebp+9] 1 +
jz loc_4224C0  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHowTo +
call off_4733A4  +
xor eax eax +
jmp loc_421D02  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+918h] edi +
mov eax [ebx+0A0h] +
mov [eax+1D0h] ecx +
mov ecx [ebp+4] +
mov [eax+1D4h] ecx +
mov ecx [ebp+8] +
mov [eax+1D8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1DCh] ecx +
mov ecx [ebp+10h] +
mov [eax+1E0h] ecx +
mov ecx [ebp+14h] +
mov [eax+1E4h] ecx +
mov ecx [ebp+18h] +
mov [eax+1E8h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1ECh] ecx +
mov ecx [ebp+20h] +
mov [eax+1F0h] ecx +
mov ecx [ebp+24h] +
mov [eax+1F4h] ecx +
mov ecx [ebp+28h] +
mov [eax+1F8h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1FCh] ecx +
mov ecx [ebp+30h] +
mov [eax+200h] ecx +
mov ecx [ebp+34h] +
mov [eax+204h] ecx +
mov eax edi +
jmp loc_421CE2  +
mov eax [ebx+0A0h] +
mov eax [eax+208h] +
test eax eax +
jz loc_422655  +
mov edi [esp+48h+arg_4] +
cmp [eax+38h] edi +
mov edx [esp+48h+arg_4] +
jnz loc_42264E  +
jmp loc_422064  +
cmp [eax+38h] edx +
jz loc_422064  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_422645  +
mov [esp+48h+var_44] 40h +
mov [esp+48h+var_48] ebx +
call sub_406290  +
test eax eax +
jz loc_421D00  +
mov edx [ebp+0] +
mov edi [esp+48h+arg_4] +
mov [eax] edx +
mov edx [ebp+4] +
mov [eax+38h] edi +
mov [eax+4] edx +
mov edx [ebp+8] +
mov [eax+8] edx +
mov edx [ebp+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebp+10h] +
mov [eax+10h] edx +
mov edx [ebp+14h] +
mov [eax+14h] edx +
mov edx [ebp+18h] +
mov [eax+18h] edx +
mov edx [ebp+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebp+20h] +
mov [eax+20h] edx +
mov edx [ebp+24h] +
mov [eax+24h] edx +
mov edx [ebp+28h] +
mov [eax+28h] edx +
mov edx [ebp+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebp+30h] +
mov [eax+30h] edx +
mov edx [ebp+34h] +
mov [eax+34h] edx +
mov edx [ebx+0A0h] +
mov ecx [edx+208h] +
mov [eax+3Ch] ecx +
mov [edx+208h] eax +
mov edx [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_421D02  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_422BB0  +
test eax eax +
jz loc_421D00  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_44C070  +
mov eax 1 +
jmp loc_421D02  +
movzx eax byte ptr [eax+3] +
jmp loc_4222C9  +
mov eax [ebp+18h] +
cmp eax 3 +
jbe loc_421D00  +
cmp dword ptr [ebp+28h] 4 +
jnz loc_421D00  +
test al 3 +
jnz loc_421D00  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_422BB0  +
test eax eax +
jz loc_421D00  +
mov edx [ebp+30h] +
test edx edx +
jz loc_422064  +
mov eax [ebp+18h] +
shr eax 2 +
test eax eax +
jz loc_421D00  +
test byte ptr [edx] 1 +
jz loc_42279B  +
mov ecx [ebp+2Ch] +
or dword ptr [ecx+14h] 20000h +
lea esi [edx-4] +
sub eax 1 +
jz loc_422064  +
mov edx [esi+eax*4+4] +
test edx edx +
jz loc_42279E  +
mov edx [edx+2Ch] +
test edx edx +
jz loc_42279E  +
mov ecx [edx+8Ch] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_42279E  +
mov eax [ebp+2Ch] +
mov eax [eax+8Ch] +
mov [eax+7Ch] edx +
mov eax 1 +
jmp loc_421D02  +
test ecx ecx +
jnz loc_421D00  +
mov dword ptr [ebp+20h] 0 +
mov eax 1 +
jmp loc_421D02  +
mov [esp+48h+var_48] ebx +
call sub_407CF0  +
cmp eax 6 +
jz loc_422807  +
cmp eax 9 +
jnz loc_421D00  +
mov eax [ebp+1Ch] +
sub eax 0FF00h +
cmp eax 1 +
setbe al  +
movzx eax al +
jmp loc_421D02  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_421D02  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_38] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] offset aBInvalidLinkLu +
mov [esp+48h+var_40] eax +
call off_4733A4  +
mov eax [esp+48h+arg_4] +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
call sub_422BB0  +
jmp loc_421D02  +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_24] edx +
mov [esp+48h+var_44] eax +
call sub_421B90  +
mov edx [esp+48h+var_24] +
test eax eax +
jz loc_421D00  +
mov eax [ebp+1Ch] +
mov edi [ebx+0A0h] +
mov [esp+48h+var_28] eax +
jmp loc_422382  +
test byte ptr [ebp+8] 2 +
jz loc_4224C0  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_0 +
call off_4733A4  +
xor eax eax +
jmp loc_421D02  +
mov eax [edx+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_421D02  +
mov [esi+910h] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+0F0h] ecx +
mov ecx [ebp+4] +
mov [eax+0F4h] ecx +
mov ecx [ebp+8] +
mov [eax+0F8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+0FCh] ecx +
mov ecx [ebp+10h] +
mov [eax+100h] ecx +
mov ecx [ebp+14h] +
mov [eax+104h] ecx +
mov ecx [ebp+18h] +
mov [eax+108h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+10Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+110h] ecx +
mov ecx [ebp+24h] +
mov [eax+114h] ecx +
mov ecx [ebp+28h] +
mov [eax+118h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+11Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+120h] ecx +
mov ecx [ebp+34h] +
mov [eax+124h] ecx +
mov ecx [ebx+0A0h] +
lea eax [ecx+0F0h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
or dword ptr [ebx+28h] 200h +
jmp loc_421EED  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_1 +
call off_4733A4  +
xor eax eax +
jmp loc_421D02  +
mov eax [ebx+0A0h] +
mov edx [ebp+0] +
mov edi [esp+48h+var_30] +
mov [eax+80h] edx +
mov edx [ebp+4] +
mov [eax+84h] edx +
mov edx [ebp+8] +
mov [eax+88h] edx +
mov edx [ebp+0Ch] +
mov [eax+8Ch] edx +
mov edx [ebp+10h] +
mov [eax+90h] edx +
mov edx [ebp+14h] +
mov [eax+94h] edx +
mov edx [ebp+18h] +
mov [eax+98h] edx +
mov edx [ebp+1Ch] +
mov [eax+9Ch] edx +
mov edx [ebp+20h] +
mov [eax+0A0h] edx +
mov edx [ebp+24h] +
mov [eax+0A4h] edx +
mov edx [ebp+28h] +
mov [eax+0A8h] edx +
mov edx [ebp+2Ch] +
mov [eax+0ACh] edx +
mov edx [ebp+30h] +
mov [eax+0B0h] edx +
mov edx [ebp+34h] +
mov [eax+0B4h] edx +
mov eax [ebx+0A0h] +
mov edx [eax+40h] +
sub eax 0FFFFFF80h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_421D02  +
mov ebx ebp +
mov ebp [esp+48h+var_2C] +
mov edi ecx +
mov eax [ebp+0] +
mov [edi+0B8h] eax +
mov eax [ebp+4] +
mov [edi+0BCh] eax +
mov eax [ebp+8] +
mov [edi+0C0h] eax +
mov eax [ebp+0Ch] +
mov [edi+0C4h] eax +
mov eax [ebp+10h] +
mov [edi+0C8h] eax +
mov eax [ebp+14h] +
mov [edi+0CCh] eax +
mov eax [ebp+18h] +
mov [edi+0D0h] eax +
mov eax [ebp+1Ch] +
mov [edi+0D4h] eax +
mov eax [ebp+20h] +
mov [edi+0D8h] eax +
mov eax [ebp+24h] +
mov [edi+0DCh] eax +
mov eax [ebp+28h] +
mov [edi+0E0h] eax +
mov eax [ebp+2Ch] +
mov [edi+0E4h] eax +
mov eax [ebp+30h] +
mov [edi+0E8h] eax +
mov eax [ebp+34h] +
mov [edi+0ECh] eax +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [eax+40h] +
add eax 0B8h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_421D02  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_2 +
call off_4733A4  +
xor eax eax +
jmp loc_421D02  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMult_0 +
call off_4733A4  +
mov eax 1 +
jmp loc_421D02  +
mov ebp [esp+48h+var_24] +
mov edi [esp+48h+var_20] +
jmp loc_422382  +
cmp [esp+48h+arg_4] 1 +
jbe loc_422BA3  +
mov ecx [esi+40h] +
mov eax 1 +
mov esi [esp+48h+arg_4] +
jmp loc_422B6B  +
add eax 1 +
cmp eax esi +
jz loc_422064  +
mov edx [ecx+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_422B60  +
cmp [edx+1Ch] esi +
jnz loc_422B60  +
jmp loc_4221ED  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_422BB0  +
test eax eax +
jz loc_421D00  +
jmp loc_42217B  +
mov eax 1 +
jmp loc_4221ED  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [esp+8Ch+arg_4] +
mov edx [ebx+2Ch] +
test edx edx +
jz loc_422BD8  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_403140  +
test eax eax +
mov ebp eax +
jz loc_422CA8  +
mov [ebx+2Ch] eax +
mov edx [ebx] +
mov eax [eax+8Ch] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [ebx+14h] +
mov [eax+14h] edx +
mov edx [ebx+18h] +
mov [eax+18h] edx +
mov edx [ebx+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebx+20h] +
mov [eax+20h] edx +
mov edx [ebx+24h] +
mov [eax+24h] edx +
mov edx [ebx+28h] +
mov [eax+28h] edx +
mov edx [ebx+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebx+30h] +
mov [eax+30h] edx +
mov edx [ebx+34h] +
mov [eax+34h] edx +
mov edx [esp+8Ch+arg_C] +
mov [eax+5Ch] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov [ebp+50h] eax +
mov eax [ebx+0Ch] +
mov [ebp+54h] edx +
or byte ptr [ebp+18h] 1 +
mov [ebp+20h] eax +
mov [ebp+1Ch] eax +
mov eax [ebx+18h] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_403380  +
test eax eax +
jnz loc_422CB0  +
xor eax eax +
jmp loc_422BCD  +
mov eax [ebx+24h] +
mov [esp+8Ch+var_8C] eax +
call near ptr dword_408A10  +
mov [esp+8Ch+var_40] 0 +
mov [ebp+40h] eax +
mov eax [ebx+4] +
cmp eax 8 +
jz loc_423841  +
cmp eax 11h +
jz loc_422EEE  +
mov [esp+8Ch+var_40] 100h +
mov edx 100h +
mov eax [ebx+8] +
test al 2 +
jz loc_422CF6  +
or edx 3 +
mov [esp+8Ch+var_40] edx +
test al 1 +
jnz loc_422D01  +
or edx 8 +
mov [esp+8Ch+var_40] edx +
test al 4 +
jz loc_422E56  +
or edx 10h +
mov [esp+8Ch+var_40] edx +
test al 10h +
jz loc_422D38  +
mov edx [esp+8Ch+var_40] +
mov ecx edx +
or ecx 800000h +
test al 20h +
mov [esp+8Ch+var_40] ecx +
mov ecx [ebx+28h] +
mov [ebp+78h] ecx +
jz loc_422D38  +
or edx 1800000h +
mov [esp+8Ch+var_40] edx +
test ah 2 +
jnz loc_422E7D  +
test ah 4 +
jnz loc_422E6B  +
mov esi [esp+8Ch+var_40] +
test eax eax +
js loc_4230B6  +
test esi 1 +
jnz loc_422D6E  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax] 2Eh +
jz loc_42327F  +
mov esi [esp+8Ch+arg_8] +
mov edi offset a_gnu_linkonce +
mov ecx 0Dh +
cmps   +
jnz loc_422D94  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_4232E5  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+50h] +
test eax eax +
jz loc_422DC0  +
lea edx [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_8C] edx +
call eax  +
test eax eax +
jz loc_422CA8  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_403280  +
test eax eax +
jz loc_422CA8  +
cmp dword ptr [ebx+4] 7 +
jz loc_4232F2  +
mov eax [esp+8Ch+var_40] +
test al 1 +
mov [esp+8Ch+var_60] eax +
jz loc_42307A  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+30h] +
mov esi [eax+44h] +
test edi edi +
jz loc_42307A  +
mov eax [esi+10h] +
test eax eax +
jnz loc_422F11  +
mov eax esi +
xor edx edx +
xor ecx ecx +
jmp loc_422E48  +
add edx 1 +
add eax 20h +
cmp edx edi +
jz loc_422F00  +
cmp dword ptr [eax+10h] 0 +
jnz loc_422F11  +
cmp dword ptr [eax] 1 +
jnz loc_422E30  +
cmp dword ptr [eax+18h] 1 +
sbb ecx 0FFFFFFFFh +
jmp loc_422E30  +
test dl 2 +
jz loc_422D10  +
or edx 20h +
mov [esp+8Ch+var_40] edx +
jmp loc_422D10  +
mov edx [esp+8Ch+var_40] +
or dh 4 +
mov [esp+8Ch+var_40] edx +
mov esi edx +
jmp loc_422D4E  +
mov eax [esp+8Ch+arg_0] +
mov edi [eax+0A0h] +
mov eax [edi+908h] +
test eax eax +
mov [esp+8Ch+var_64] eax +
jnz loc_4230C6  +
mov eax [edi+214h] +
test eax eax +
mov ecx eax +
mov [esp+8Ch+var_60] eax +
jz loc_423270  +
mov eax [edi+40h] +
mov [esp+8Ch+var_68] 0 +
lea ecx [eax+ecx*4] +
jmp loc_422ECB  +
add eax 4 +
cmp eax ecx +
jz loc_423264  +
mov edx [eax] +
cmp dword ptr [edx+4] 11h +
jnz loc_422EC0  +
mov esi [edx+18h] +
cmp esi 7 +
jbe loc_422EC0  +
cmp dword ptr [edx+28h] 4 +
jnz loc_422EC0  +
and esi 3 +
cmp esi 1 +
adc [esp+8Ch+var_68] 0 +
jmp loc_422EC0  +
mov [esp+8Ch+var_40] 2008100h +
mov edx 2008100h +
jmp loc_422CE8  +
cmp ecx 1 +
ja loc_4230AC  +
test edi edi +
jz loc_42307A  +
mov eax [esp+8Ch+var_60] +
xor edx edx +
mov [esp+8Ch+arg_4] ebx +
mov ebx edx +
mov [esp+8Ch+var_54] ebp +
mov [esp+8Ch+var_68] edi +
and eax 2 +
mov [esp+8Ch+var_50] eax +
jmp loc_422F4A  +
cmp ecx 7 +
jz loc_423820  +
add ebx 1 +
add esi 20h +
cmp ebx [esp+8Ch+var_68] +
jnb loc_423076  +
mov ecx [esi] +
cmp ecx 1 +
jnz loc_422F31  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_422F3A  +
and eax 2 +
mov [esp+8Ch+var_5C] eax +
jnz loc_422F85  +
lea eax [ecx-6474E550h] +
cmp eax 2 +
jbe loc_422F3A  +
lea eax [ecx-1] +
cmp eax 1 +
jbe loc_422F3A  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+4] +
cmp eax 8 +
mov [esp+8Ch+var_58] eax +
jz loc_422FE0  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
ja loc_422F3A  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+8Ch+arg_4] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
mov edi [edi+18h] +
add eax edi +
mov edi [esi+14h] +
adc edx ebp +
cmp edx 0 +
jg loc_422F3A  +
jl loc_422FE0  +
cmp eax edi +
ja loc_422F3A  +
mov ebp [esp+8Ch+var_5C] +
test ebp ebp +
jz loc_423029  +
mov eax [esp+8Ch+arg_4] +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
cmp eax edx +
jb loc_422F3A  +
mov edi [esp+8Ch+var_64] +
sub eax edx +
mov edx eax +
test edi edi +
jz loc_423014  +
cmp [esp+8Ch+var_58] 8 +
jz loc_423810  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+18h] +
add eax edx +
cmp eax [esi+18h] +
ja loc_422F3A  +
cmp ecx 2 +
mov eax [esp+8Ch+arg_4] +
jz loc_42371A  +
mov eax [eax+0Ch] +
mov edx [esi+0Ch] +
mov ecx [esp+8Ch+var_50] +
test ecx ecx +
jnz loc_4235A7  +
mov ecx [esi+10h] +
mov edi [esp+8Ch+var_54] +
add ecx eax +
sub ecx edx +
mov [edi+20h] ecx +
cmp edx eax +
ja loc_422F3A  +
mov edi [esp+8Ch+arg_4] +
add edx [esi+18h] +
add eax [edi+18h] +
cmp eax edx +
ja loc_422F3A  +
mov ebp [esp+8Ch+var_54] +
test [esp+8Ch+var_60] 2000h +
jz loc_4230AC  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_423348  +
cmp al 7Ah +
jnz loc_4230AC  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+7] 5Fh +
jz loc_423359  +
mov eax 1 +
jmp loc_422BCD  +
mov eax esi +
or ah 80h +
mov [esp+8Ch+var_40] eax +
mov esi eax +
jmp loc_422D56  +
mov eax [esp+8Ch+var_64] +
xor edi edi +
sub eax 1 +
cmp eax 0FFFFFFFDh +
mov [esp+8Ch+var_5C] eax +
ja loc_423129  +
mov [esp+8Ch+var_60] ebp +
lea esi [esi+0] +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
mov eax [eax+904h] +
mov ebp [eax+edi*4] +
mov ecx [ebp+18h] +
mov esi [ebp+30h] +
shr ecx 2 +
mov eax ecx +
mov edx esi +
jmp loc_423117  +
add edx 4 +
cmp ebx [edx] +
jz loc_423142  +
sub eax 1 +
jnz loc_423110  +
add edi 1 +
cmp [esp+8Ch+var_64] edi +
ja loc_4230E0  +
mov ebp [esp+8Ch+var_60] +
mov eax [ebp+8Ch] +
mov ecx [eax+74h] +
test ecx ecx +
jz loc_4236F7  +
mov eax [ebx+8] +
jmp loc_422D41  +
sub ecx 1 +
jz loc_423190  +
add esi 4 +
mov eax [esi] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_423142  +
mov eax [eax+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_423142  +
mov edi [esp+8Ch+var_60] +
mov esi [eax+74h] +
mov ecx [edi+8Ch] +
mov [ecx+74h] esi +
mov [ecx+7Ch] edx +
mov [eax+7Ch] edi +
mov eax [ebp+2Ch] +
test eax eax +
jz loc_42318A  +
mov eax [eax+8Ch] +
mov edi [esp+8Ch+var_60] +
mov [eax+7Ch] edi +
mov edi [esp+8Ch+var_5C] +
jmp loc_42311C  +
mov edi [esp+8Ch+var_68] +
mov eax [ebp+1Ch] +
cmp eax [edi+214h] +
jnb loc_422CA8  +
mov edi [esp+8Ch+var_68] +
mov edx [edi+40h] +
mov edx [edx+eax*4] +
cmp dword ptr [edx+4] 2 +
jnz loc_422CA8  +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_421B90  +
test eax eax +
jz loc_422CA8  +
mov eax [esp+8Ch+arg_0] +
lea edi [esp+8Ch+var_3C] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
lea esi [eax+48h] +
mov eax [ebp+20h] +
mov [esp+8Ch+var_74] edi +
lea edi [esp+8Ch+var_24] +
mov [esp+8Ch+var_78] edi +
lea edi [esp+8Ch+var_38] +
mov [esp+8Ch+var_7C] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_421030  +
test eax eax +
jz loc_422CA8  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_421380  +
test eax eax +
jz loc_422CA8  +
mov edi [esp+8Ch+var_60] +
mov edx [edi+8Ch] +
mov [edx+74h] eax +
mov [edx+7Ch] edi +
jmp loc_423176  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jnz loc_423426  +
mov dword ptr [edi+908h] 0FFFFFFFFh +
jmp loc_423129  +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_4235C3  +
cmp al 67h +
jz loc_423652  +
cmp al 6Ch +
jz loc_4237A1  +
cmp al 73h +
lea esi [esi+0] +
jz loc_4237B0  +
cmp al 7Ah +
jnz loc_422D6E  +
mov edx 7 +
mov eax offset a_zdebug +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call strncmp  +
test eax eax +
jnz loc_422D6E  +
mov eax esi +
or ah 20h +
mov [esp+8Ch+var_40] eax +
jmp loc_422D6E  +
or [esp+8Ch+var_40] 20000h +
jmp loc_422D94  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_403610  +
test eax eax +
jz loc_422BCD  +
mov ecx [ebx+18h] +
mov edx [esp+8Ch+var_24] +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] 0FFFFFFFFh +
mov [esp+8Ch+var_88] 0FFFFFFFFh +
call sub_41FBA0  +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
call free  +
jmp loc_422DED  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+6] 5Fh +
jnz loc_4230AC  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_80] eax +
lea eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_4099E0  +
test eax eax +
mov ecx eax +
jz loc_42367C  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 10h +
jz loc_42367C  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_409E40  +
test eax eax +
jz loc_4237E6  +
mov eax 2 +
mov edi [esp+8Ch+arg_0] +
test byte ptr [edi+2Ch] 2 +
jz loc_4237CB  +
mov edi [esp+8Ch+arg_8] +
cmp byte ptr [edi+1] 7Ah +
jnz loc_4230AC  +
cmp eax 2 +
jz loc_4233EF  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 40h +
jz loc_4230AC  +
mov edx [esp+8Ch+arg_8] +
mov eax [esp+8Ch+arg_0] +
call sub_41F680  +
test eax eax +
jz loc_422CA8  +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_4032A0  +
jmp loc_4230AC  +
mov eax [esp+8Ch+var_68] +
mov [edi+908h] eax +
mov edi [esp+8Ch+arg_0] +
mov esi [edi+0A0h] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
call sub_406310  +
mov [esi+904h] eax +
mov eax [esp+8Ch+arg_0] +
xor esi esi +
mov edx [eax+0A0h] +
mov edi [edx+904h] +
test edi edi +
jz loc_422CA8  +
mov [esp+8Ch+arg_4] ebx +
mov ebx [esp+8Ch+var_60] +
mov [esp+8Ch+var_5C] ebp +
jmp loc_423490  +
add esi 1 +
cmp esi ebx +
jz loc_4235D2  +
mov eax [edx+40h] +
mov edi [eax+esi*4] +
cmp dword ptr [edi+4] 11h +
jnz loc_423485  +
mov eax [edi+18h] +
cmp eax 7 +
jbe loc_423485  +
cmp dword ptr [edi+28h] 4 +
jnz loc_423485  +
test al 3 +
jnz loc_423485  +
mov edx [edx+904h] +
mov ebp eax +
mov ecx [esp+8Ch+var_64] +
and ebp 3FFFFFFFh +
mov [edx+ecx*4] edi +
add ecx 1 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_68] ecx +
mov [esp+8Ch+var_8C] eax +
call sub_406310  +
test eax eax +
mov [edi+30h] eax +
jz loc_42388A  +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call sub_403BF0  +
test eax eax +
jnz loc_423553  +
mov eax [edi+18h] +
mov edx [edi+30h] +
mov ecx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] edx +
mov [esp+8Ch+var_84] ecx +
call sub_4039E0  +
cmp eax [edi+18h] +
jz loc_4238C7  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBInvalidSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_4733A4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4040F0  +
mov eax [edi+30h] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_423485  +
mov edi [esp+8Ch+arg_4] +
mov ecx [esi+10h] +
add ecx [edi+10h] +
mov edi [esp+8Ch+var_54] +
sub ecx [esi+8] +
mov [edi+20h] ecx +
jmp loc_423059  +
mov edx 6 +
mov eax offset a_debug +
jmp loc_4232B8  +
mov eax [esp+8Ch+var_64] +
cmp [edx+908h] eax +
mov ebp [esp+8Ch+var_5C] +
mov ebx [esp+8Ch+arg_4] +
jz loc_4230C6  +
test eax eax +
mov [edx+908h] eax +
jnz loc_4230C6  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+904h] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+908h] 0FFFFFFFFh +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBNoValidGroupS +
mov [esp+8Ch+var_88] eax +
call off_4733A4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4040F0  +
jmp loc_423129  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+2] +
cmp al 6Eh +
jz loc_4237D7  +
cmp al 64h +
jnz loc_422D6E  +
mov edx 0Bh +
mov eax offset a_gdb_index +
jmp loc_4232B8  +
cmp dword ptr [ebp+24h] 0 +
jz loc_4230AC  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax 1 +
shr edx 5 +
and edx 3FFFFh +
test dh 40h +
jz loc_422BCD  +
mov ebx [esp+8Ch+var_38] +
test ebx ebx +
js loc_422BCD  +
cmp [esp+8Ch+var_24] 0 +
jz loc_422BCD  +
test ecx ecx +
jz loc_4236D2  +
shr edx 11h +
test ebx ebx +
setnle cl  +
cmp dl cl +
jz loc_422BCD  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_409F60  +
test eax eax +
jz loc_423860  +
mov eax 1 +
jmp loc_4233B7  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_8C] offset aBNoGroupInfoFo +
mov [esp+8Ch+var_88] eax +
call off_4733A4  +
xor eax eax +
jmp loc_422BCD  +
cmp dword ptr [eax+18h] 0 +
jnz loc_423039  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_4237BF  +
cmp [esp+8Ch+var_58] 8 +
jz loc_423770  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
jnb loc_422F3A  +
xor edx edx +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edi [esi+14h] +
cmp ebp 0 +
jg loc_422F3A  +
jl loc_423770  +
cmp eax edi +
jnb loc_422F3A  +
mov eax [esp+8Ch+arg_4] +
cmp [esp+8Ch+var_5C] 0 +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
jz loc_42303F  +
cmp eax edx +
jbe loc_422F3A  +
mov edi eax +
sub edi edx +
cmp ecx edi +
jbe loc_422F3A  +
jmp loc_42303F  +
mov edx 5 +
mov eax offset a_line +
jmp loc_4232B8  +
mov edx 5 +
mov eax offset a_stab_1 +
jmp loc_4232B8  +
mov eax [esp+8Ch+arg_4] +
jmp loc_423039  +
or dword ptr [ebp+14h] 10000000h +
jmp loc_4230AC  +
mov edx 11h +
mov eax offset a_gnu_linkonce_ +
jmp loc_4232B8  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIniti +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_4733A4  +
xor eax eax +
jmp loc_422BCD  +
xor eax eax +
cmp ecx 7 +
jnz loc_42301E  +
jmp loc_423014  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_422F69  +
jmp loc_422F3A  +
mov eax [ebx+8] +
xor edx edx +
test al 2 +
jz loc_422CF6  +
mov [esp+8Ch+var_40] 1 +
mov edx 1 +
jmp loc_422CF6  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIni_0 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_4733A4  +
xor eax eax +
jmp loc_422BCD  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBCorruptSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_4733A4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4040F0  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_423485  +
mov ecx [edi+30h] +
mov [esp+8Ch+var_64] esi +
mov esi ebx +
lea edx [ecx+eax] +
add ebp ecx +
mov ebx edx +
jmp loc_4238F3  +
cmp esi eax +
jbe loc_423945  +
mov ecx [esp+8Ch+arg_0] +
mov ecx [ecx+0A0h] +
mov ecx [ecx+40h] +
mov eax [ecx+eax*4] +
mov [ebp+0] eax +
mov eax [esp+8Ch+arg_0] +
sub ebx 4 +
sub ebp 4 +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
cmp ebx [edi+30h] +
jnz loc_4238D9  +
mov [ebp+0] eax +
mov edx [edi+2Ch] +
mov ebx esi +
mov esi [esp+8Ch+var_64] +
test edx edx +
jz loc_42392B  +
test al 1 +
jz loc_42392B  +
or dword ptr [edx+14h] 20000h +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
mov eax [esp+8Ch+var_68] +
mov [esp+8Ch+var_64] eax +
jmp loc_423485  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBInvalidSht_gr +
mov [esp+8Ch+var_88] eax +
call off_4733A4  +
xor eax eax +
jmp loc_4238DD  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov ebp [esp+68h] +
mov esi [esp+64h] +
and ebp 1Fh +
cmp [ebx] esi +
jz loc_423A43  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [esp+24h] +
mov [esp+18h] eax +
lea eax [esp+28h] +
mov [esp+14h] eax +
mov eax [esp+68h] +
mov [esp+10h] ecx +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
mov eax [esi+0A0h] +
mov [esp] esi +
add eax 48h +
mov [esp+4] eax +
call sub_421030  +
test eax eax +
jz loc_423A84  +
cmp [ebx] esi +
jz loc_423A14  +
lea edi [ebx+4] +
mov edx 80h +
test edi 1 +
jnz loc_423A62  +
test edi 2 +
jnz loc_423A70  +
mov ecx edx +
mov eax 0FFFFFFFFh +
shr ecx 2 +
test dl 2 +
stos   +
jnz loc_423A30  +
and edx 1 +
jnz loc_423A28  +
mov [ebx] esi +
mov eax [esp+68h] +
mov [ebx+ebp*4+4] eax +
mov eax [esp+1Ch] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov byte ptr [edi] 0FFh +
jmp loc_423A12  +
***
mov eax 0FFFFFFFFh +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_423A12  +
jmp loc_423A28  +
***
mov eax [esp+68h] +
cmp [ebx+ebp*4+4] eax +
jnz loc_42398E  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov [esp+1Ch] eax +
jmp loc_423A1C  +
***
mov byte ptr [ebx+4] 0FFh +
lea edi [ebx+5] +
mov dl 7Fh +
jmp loc_4239F4  +
***
mov ecx 0FFFFFFFFh +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_4239FC  +
***
mov dword ptr [esp+1Ch] 0 +
jmp loc_423A1C  +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx+0A0h] +
cmp [edx+214h] eax +
jbe loc_423AB0  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov edx [ebx] +
test edx edx +
jz loc_423B82  +
mov ebp eax +
mov edi edx +
lea esi [ebx+14h] +
jmp loc_423B22  +
lea edx [ecx+eax] +
cmp ebp edx +
jl loc_423B17  +
mov edx ebp +
add ecx edi +
sub edx eax +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] ecx +
add eax edx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
test eax eax +
jz loc_423B78  +
mov ebx esi +
mov edi [esi] +
lea esi [esi+14h] +
test edi edi +
jz loc_423B82  +
mov ecx [ebx+4] +
cmp ebp ecx +
jl loc_423B17  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
jnz loc_423B17  +
mov eax [ebx+8] +
test eax eax +
jg loc_423AF0  +
mov edx [esp+1Ch+arg_0] +
movzx edx byte ptr [edx+ecx] +
test dl dl +
jz loc_423B78  +
test eax eax +
jz loc_423B17  +
cmp dl 2Eh +
jz loc_423B78  +
cmp eax 0FFFFFFFEh +
jz loc_423B17  +
mov eax [esp+1Ch+arg_8] +
test eax eax +
jz loc_423B78  +
cmp dword ptr [ebx+0Ch] 9 +
jz loc_423B17  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov ebx [esi] +
test ebx ebx +
jz loc_423C20  +
mov eax [esp+20h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov edx [eax+178h] +
test edx edx +
jz loc_423BE0  +
movzx eax byte ptr [esi+19h] +
mov [esp+4] edx +
mov [esp] ebx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_423AC0  +
test eax eax +
jz loc_423BE0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
cmp byte ptr [ebx] 2Eh +
jnz loc_423BD8  +
movsx edx byte ptr [ebx+1] +
sub edx 62h +
cmp edx 18h +
ja loc_423BD8  +
mov edx ds:off_48AA20[edx*4] +
test edx edx +
jz loc_423BD8  +
movzx eax byte ptr [esi+19h] +
mov [esp] ebx +
mov [esp+4] edx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_423AC0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_423BD8  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_423CD2  +
mov eax [esi+4] +
mov ecx [eax+1B0h] +
movzx eax byte ptr [ebx+19h] +
movzx edx byte ptr [ecx+1ACh] +
and eax 0FFFFFFFBh +
shr dl 2 +
and edx 4 +
or eax edx +
mov [ebx+19h] al +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 8 +
jz loc_423CC5  +
mov eax [ecx+54h] +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_423CA1  +
mov edx [ebx+14h] +
mov ecx [eax+0Ch] +
test edx edx +
jnz loc_423CB3  +
mov edx [ebx+8Ch] +
mov eax [eax+10h] +
mov [edx+4] ecx +
mov [edx+8] eax +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_402C00  +
***
and edx 100000h +
jnz loc_423C92  +
lea edx [ecx-0Eh] +
cmp edx 1 +
ja loc_423CA1  +
jmp loc_423C92  +
***
test byte ptr [ebx+16h] 10h +
jz loc_423CA1  +
nop   +
lea esi [esi+0] +
jmp loc_423C78  +
***
mov dword ptr [esp+4] 90h +
mov [esp] esi +
call sub_406370  +
test eax eax +
jz loc_423CF1  +
mov [ebx+8Ch] eax +
jmp loc_423C4B  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov ebx [esp+6Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_423D30  +
cmp dword ptr [ebx+14h] 0 +
jnz loc_423FFA  +
nop   +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+14h] +
lea esi [esp+6Ch+var_4C] +
test edx edx +
jnz loc_423E51  +
mov eax offset unk_489712 +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_8] +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_423D70  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
lea edi [edx+1] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_406290  +
test eax eax +
mov ebp eax +
jz loc_423F78  +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_64] edi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] ebp +
mov [esp+6Ch+var_6C] eax +
call sub_403240  +
test eax eax +
mov esi eax +
jz loc_423F78  +
mov edx [ebx+14h] +
mov ecx [ebx+10h] +
mov eax [ebx+0Ch] +
add ecx edx +
mov [esi+20h] ecx +
mov ecx [ebx+18h] +
add eax edx +
mov [esi+1Ch] eax +
sub ecx edx +
add edx [ebx+8] +
mov [esi+24h] ecx +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] edx +
mov edx eax +
neg edx  +
and eax edx +
jz loc_423F82  +
mov edx [ebx+1Ch] +
cmp eax edx +
cmova eax edx +
mov [esp+6Ch+var_6C] eax +
call near ptr dword_408A10  +
cmp dword ptr [ebx] 1 +
mov [esi+40h] eax +
jz loc_423F96  +
mov eax [ebx+4] +
test al 2 +
jnz loc_423D20  +
or dword ptr [esi+14h] 8 +
jmp loc_423D20  +
xor ecx ecx +
cmp edx eax +
setb cl  +
cmp eax edx +
mov ebp ecx +
mov eax offset unk_489712 +
mov ecx offset aA +
cmovbe ecx eax +
mov eax [esp+6Ch+arg_8] +
lea esi [esp+6Ch+var_4C] +
mov [esp+6Ch+var_5C] ecx +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_423E99  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
add edx 1 +
mov [esp+6Ch+var_68] edx +
mov [esp+6Ch+var_6C] eax +
mov [esp+6Ch+var_50] edx +
call sub_406290  +
mov edx [esp+6Ch+var_50] +
test eax eax +
mov edi eax +
jz loc_423F78  +
mov [esp+6Ch+var_64] edx +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_403240  +
test eax eax +
mov edi eax +
jz loc_423F78  +
mov eax [ebx+0Ch] +
mov [edi+1Ch] eax +
mov eax [ebx+10h] +
mov [edi+20h] eax +
mov eax [ebx+14h] +
mov [edi+24h] eax +
mov eax [ebx+8] +
or dword ptr [edi+14h] 100h +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov eax [ebx+1Ch] +
mov [esp+6Ch+var_6C] eax +
call near ptr dword_408A10  +
cmp dword ptr [ebx] 1 +
mov [edi+40h] eax +
jz loc_423FD0  +
mov eax [ebx+4] +
test al 2 +
jz loc_423F90  +
mov eax [ebx+14h] +
cmp [ebx+18h] eax +
jbe loc_423D20  +
test ebp ebp +
mov eax offset aB +
jnz loc_423D44  +
jmp loc_423D3F  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+1Ch] +
jmp loc_423E29  +
or dword ptr [edi+14h] 8 +
jmp loc_423F5A  +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_423FF1  +
mov edx [esi+14h] +
mov eax edx +
or eax 1 +
mov [esi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_423E40  +
or edx 11h +
mov [esi+14h] edx +
jmp loc_423E40  +
mov ecx [edi+14h] +
mov eax ecx +
or eax 3 +
mov [edi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_423F56  +
or ecx 13h +
mov [edi+14h] ecx +
jmp loc_423F56  +
mov dword ptr [esi+24h] 0 +
jmp loc_423FA8  +
xor ebp ebp +
mov ecx offset unk_489712 +
jmp loc_423E69  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov edx [esi] +
cmp edx 4 +
jz loc_424130  +
jbe loc_424056  +
cmp edx 6474E550h +
jz loc_424120  +
ja loc_4240A0  +
cmp edx 5 +
jz loc_4240E0  +
cmp edx 6 +
jnz loc_4240F0  +
mov [esp+2Ch+var_20] offset aPhdr +
jmp loc_424080  +
cmp edx 1 +
jz loc_424180  +
jb loc_424170  +
cmp edx 2 +
jz loc_4240C0  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_4240F0  +
mov [esp+2Ch+var_20] offset aInterp +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_423D00  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 6474E551h +
jz loc_4240D0  +
cmp edx 6474E552h +
jnz loc_4240F0  +
mov [esp+2Ch+var_20] offset aRelro +
jmp loc_424080  +
mov [esp+2Ch+var_20] offset aDynamic +
jmp loc_424080  +
mov [esp+2Ch+var_20] offset aStack +
jmp loc_424080  +
mov [esp+2Ch+var_20] offset aShlib +
jmp loc_424080  +
mov eax [ebx+4] +
mov edi [esp+2Ch+arg_8] +
mov eax [eax+1B0h] +
mov eax [eax+58h] +
mov [esp+2Ch+var_20] offset aProc +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call eax  +
jmp loc_424094  +
mov [esp+2Ch+var_20] offset aEh_frame_hdr +
jmp loc_424080  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_20] offset aNote +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_423D00  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_424094  +
mov ebp [esi+14h] +
mov esi [esi+8] +
test ebp ebp +
jnz loc_42418D  +
mov eax 1 +
jmp loc_424094  +
mov [esp+2Ch+var_20] offset aNull_1 +
jmp loc_424080  +
mov [esp+2Ch+var_20] offset aLoad +
jmp loc_424080  +
xor edi edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_403BF0  +
test eax eax +
jz loc_4241B2  +
xor eax eax +
jmp loc_424094  +
lea eax [ebp+1] +
mov [esp+2Ch+var_2C] eax +
call sub_408000  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_4241AB  +
mov byte ptr [eax+ebp] 0 +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_4039E0  +
cmp ebp eax +
jz loc_4241F0  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
xor eax eax +
jmp loc_424094  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_41FBA0  +
test eax eax +
jz loc_4241DD  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_424162  +
***
mov ebx [esp+18h+arg_0] +
mov edx [ebx+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_424260  +
mov edx [edx+4Ch] +
test edx edx +
jz loc_424259  +
mov [esp+18h+var_14] 0AECh +
mov [esp+18h+var_18] offset a____Binutil_10 +
call sub_404040  +
mov eax [ebx+8Ch] +
mov eax [eax+3Ch] +
add esp 18h +
pop ebx  +
retn   +
mov eax [edx+4Ch] +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+4] +
mov eax 8 +
and edx 103h +
cmp edx 1 +
mov edx 1 +
cmovnz eax edx +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
test eax eax +
jz loc_424315  +
mov edx [eax+8Ch] +
mov ecx [edx+4] +
cmp ecx 4 +
jnz loc_424310  +
mov ebx [eax] +
lea edx [ebx+4] +
add ebx 5 +
cmp ecx 9 +
cmovnz edx ebx +
mov ebx [eax+94h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ADh] 1 +
jz loc_4242E2  +
mov edi offset a_plt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_4242F5  +
mov [esp+4] edx +
mov [esp] ebx +
call sub_402CB0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+4] offset a_got_plt +
mov [esp] ebx +
call sub_402CB0  +
test eax eax +
jnz loc_4242EE  +
mov edx offset a_got +
jmp loc_4242E2  +
***
cmp ecx 9 +
jz loc_4242AC  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+arg_C] +
mov ecx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
test ebx ebx +
jz loc_424350  +
mov ebx [ecx+24h] +
cmp ebx 1 +
jbe loc_424350  +
mov esi eax +
xor edx edx +
lea edi [ebx+eax-1] +
mov eax 0FFFFFFFFh +
cmp esi edi +
jbe loc_424376  +
mov ebx [ecx+2Ch] +
mov [ecx+10h] eax +
mov [ecx+14h] edx +
test ebx ebx +
jz loc_424363  +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
cmp dword ptr [ecx+4] 8 +
jz loc_424372  +
mov ecx [ecx+18h] +
xor ebx ebx +
add eax ecx +
adc edx ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ebx +
xor edx edx +
neg eax  +
and eax edi +
jmp loc_424350  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov eax [eax+44h] +
mov ecx [edx] +
test ecx ecx +
jz loc_4243C8  +
mov esi [ecx+24h] +
mov edx esi +
sub edx 1 +
js loc_4243BF  +
cmp [ecx+esi*4+24h] ebx +
jnz loc_4243B7  +
jmp loc_4243D0  +
cmp [ecx+edx*4+28h] ebx +
jz loc_4243D0  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jnz loc_4243B1  +
mov ecx [ecx] +
add eax 20h +
test ecx ecx +
jnz loc_42439F  +
xor eax eax +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] 2Ch +
mov [esp+1Ch+var_1C] eax +
call sub_406370  +
test eax eax +
jz loc_424416  +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 2 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
setz dl  +
movzx eax dl +
mov [esp+6Ch+var_58] eax +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_424487  +
mov eax [esp+6Ch+arg_4] +
xor edx 1 +
mov edi [esp+6Ch+arg_4] +
shl edx 6 +
movzx eax byte ptr [eax+5] +
and eax 0FFFFFFBFh +
or eax edx +
mov [edi+5] al +
mov eax [esp+6Ch+var_58] +
test eax eax +
jz loc_4244A1  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_4245B1  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+934h] +
mov eax [edi] +
test eax eax +
jz loc_424515  +
lea esi [esi+0] +
mov edx [eax+24h] +
xor esi esi +
test edx edx +
jz loc_4244F8  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov ebx [eax+edx*4+28h] +
mov ecx [ebx+14h] +
test ch 80h +
jnz loc_4244EE  +
and ecx 1 +
jnz loc_4244E7  +
cmp dword ptr [eax+4] 1 +
jz loc_4244EE  +
mov [eax+esi*4+28h] ebx +
add esi 1 +
mov eax [edi] +
add edx 1 +
cmp edx [eax+24h] +
jb loc_4244D0  +
mov ecx [esp+6Ch+var_58] +
mov [eax+24h] esi +
test ecx ecx +
jz loc_42450D  +
cmp dword ptr [eax+4] 1 +
jz loc_4245A0  +
mov edi eax +
mov eax [eax] +
test eax eax +
jnz loc_4244C0  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0ACh] +
test eax eax +
jz loc_42454E  +
mov edi [esp+6Ch+arg_4] +
mov esi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] esi +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_424592  +
mov eax [esp+6Ch+arg_0] +
xor edx edx +
mov eax [eax+0A0h] +
mov ecx [eax+934h] +
mov eax [ecx] +
test eax eax +
jz loc_424579  +
lea esi [esi+0] +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_424570  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+1] +
imul edx eax +
mov eax 1 +
mov [ecx+1Ch] edx +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_42450D  +
mov eax [eax] +
mov [edi] eax +
jmp loc_4244B6  +
mov [esp+6Ch+var_68] 4 +
mov [esp+6Ch+var_6C] eax +
call sub_408040  +
mov ebp eax +
mov [esp+6Ch+var_4C] eax +
xor eax eax +
test ebp ebp +
jz loc_424592  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] eax +
call sub_407D20  +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea esi [eax+eax-1] +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+64h] +
test eax eax +
jz loc_424F99  +
xor ecx ecx +
test byte ptr [eax+14h] 1 +
jz loc_42461E  +
mov edi [eax+20h] +
mov edx [eax+24h] +
mov [ebp+ecx*4+0] eax +
add ecx 1 +
add edx edi +
and edi esi +
and edx esi +
cmp edx edi +
cmovb ebx edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_424600  +
mov edi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_40] ecx +
cmp [edi+6Ch] ecx +
jb loc_424F66  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_60] 41F4D0h +
mov [esp+6Ch+var_64] 4 +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call qsort  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_interp_0 +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] eax +
call sub_402CB0  +
mov ebp eax +
test ebp ebp +
lea eax [esp+6Ch+var_10] +
mov [esp+6Ch+var_48] eax +
jz loc_424694  +
test byte ptr [ebp+14h] 2 +
jnz loc_424EE8  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+10h] +
mov [esp+6Ch+var_68] offset a_dynamic_1 +
test eax eax +
mov edi eax +
mov eax 1 +
cmovnz eax edi +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_402CB0  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_28] eax +
jz loc_4246DC  +
test byte ptr [eax+14h] 2 +
mov eax 0 +
cmovnz eax edi +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_40] +
test eax eax +
jz loc_4248E1  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov edx [eax+1Ch] +
cmp edx 0FFFFFFFFh +
jz loc_424F7F  +
mov eax [esp+6Ch+var_3C] +
mov edi [esp+6Ch+arg_0] +
mov eax [eax+174h] +
test byte ptr [edi+29h] 20h +
movzx eax byte ptr [eax] +
jnz loc_424CFA  +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
mov [esp+6Ch+var_34] 0 +
mov eax [esp+6Ch+var_30] +
mov ebx ecx +
xor esi esi +
xor edi edi +
xor edx edx +
mov [esp+6Ch+var_38] 0 +
mov ebp esi +
mov [esp+6Ch+var_54] 0 +
lea ecx [eax-1] +
neg eax  +
mov [esp+6Ch+var_20] ecx +
mov [esp+6Ch+var_2C] eax +
mov [esp+6Ch+var_50] edi +
jmp loc_4247A2  +
mov eax [ebx+14h] +
mov edx 1 +
mov [esp+6Ch+var_50] 0 +
test al 8 +
cmovz ebp edx +
and eax 402h +
cmp eax 400h +
jz loc_42478C  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_50] eax +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
jz loc_42488A  +
mov eax [esp+6Ch+var_4C] +
mov edx ebx +
mov ebx [eax+esi*4] +
test edx edx +
jz loc_424764  +
mov eax [ebx+20h] +
mov ecx [edx+20h] +
mov [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_44] eax +
mov edi ecx +
sub eax [ebx+1Ch] +
sub edi [edx+1Ch] +
cmp edi eax +
jz loc_424DD4  +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_42480F  +
mov eax [esp+6Ch+arg_4] +
mov ecx [eax+18h] +
mov ecx [ecx+38h] +
test ecx ecx +
jz loc_42480F  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_60] edx +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_4] +
mov [esp+6Ch+var_6C] eax +
call ecx  +
mov [esp+6Ch+var_54] eax +
mov eax [esp+6Ch+var_54] +
test eax eax +
jz loc_424764  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
call sub_41F580  +
test eax eax +
jz loc_424C3C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [ebx+14h] +
mov ebp eax +
and eax 402h +
shr ebp 3 +
xor ebp 1 +
and ebp 1 +
cmp eax 400h +
jz loc_424E90  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_38] esi +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] eax +
jnz loc_424799  +
test ebx ebx +
mov eax esi +
mov [esp+6Ch+var_54] esi +
jz loc_4248E1  +
sub eax [esp+6Ch+var_38] +
cmp eax 1 +
jnz loc_4248AC  +
mov eax [ebx+14h] +
and eax 402h +
cmp eax 400h +
jz loc_4248E1  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_6C] eax +
mov eax [esp+6Ch+arg_0] +
call sub_41F580  +
test eax eax +
jz loc_424C3C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+var_28] +
test eax eax +
jz loc_42490E  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_4243E0  +
test eax eax +
jz loc_424C3C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_424AE7  +
mov [esp+6Ch+var_50] 0 +
mov [esp+6Ch+var_54] 0 +
mov eax [ebp+14h] +
test al 2 +
jz loc_4249F8  +
mov esi [ebp+0] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_4249F8  +
cmp dword ptr [ebp+40h] 2 +
mov eax 2Ch +
mov ebx 1 +
jz loc_424C52  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_406370  +
test eax eax +
mov edi eax +
jz loc_424C3C  +
cmp ebx 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 4 +
mov [eax+24h] ebx +
mov eax ebx +
ja loc_4249AA  +
jmp loc_4249DA  +
cmp esi 1 +
mov ebp [ebp+0Ch] +
jz loc_4249DA  +
mov ebx esi +
mov edx eax +
sub edx ebx +
test byte ptr [ebp+15h] 4 +
lea esi [ebx-1] +
mov [edi+edx*4+28h] ebp +
jz loc_4249A0  +
mov [esp+6Ch+var_68] 11A6h +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_404040  +
cmp esi 1 +
mov eax [edi+24h] +
mov ebp [ebp+0Ch] +
jnz loc_4249A8  +
mov [edi+eax*4+24h] ebp +
mov eax [ebp+14h] +
and eax 400h +
jnz loc_424CD9  +
mov esi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] edi +
mov [esi] edi +
jmp loc_4249FD  +
and eax 400h +
test eax eax +
jz loc_424A17  +
mov edi [esp+6Ch+var_54] +
mov eax [esp+6Ch+var_50] +
test edi edi +
cmovz eax ebp +
add [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_50] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_424930  +
mov ebx [esp+6Ch+var_54] +
test ebx ebx +
jz loc_424AE7  +
lea eax ds:28h[ebx*4] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_406370  +
test eax eax +
jz loc_424C3C  +
mov dword ptr [eax] 0 +
mov ecx [esp+6Ch+var_50] +
xor edx edx +
mov dword ptr [eax+4] 7 +
mov [eax+24h] ebx +
mov dword ptr [eax+8] 4 +
or byte ptr [eax+20h] 1 +
jmp loc_424A81  +
mov [eax+edx*4+28h] ecx +
add edx 1 +
mov ecx [ecx+0Ch] +
cmp ebx edx +
jz loc_424ADD  +
test byte ptr [ecx+15h] 4 +
jnz loc_424A73  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] offset aBTlsSectionsAr +
mov [esp+6Ch+var_68] eax +
call off_4733A4  +
mov esi [esp+6Ch+var_50] +
jmp loc_424AC4  +
mov [esp+6Ch+var_6C] offset aTlsA +
add ebx 1 +
call off_4733A4  +
cmp ebx [esp+6Ch+var_54] +
mov esi [esi+0Ch] +
jnb loc_424C30  +
test byte ptr [esi+15h] 4 +
mov [esp+6Ch+var_68] esi +
jnz loc_424AA7  +
mov [esp+6Ch+var_6C] offset aNonTlsA +
call off_4733A4  +
jmp loc_424AB7  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_424B60  +
mov edx [ebx+3Ch] +
test byte ptr [edx+14h] 2 +
jz loc_424B60  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_406370  +
test eax eax +
jz loc_424C3C  +
mov edx [ebx+3Ch] +
mov edi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E550h +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov esi [eax+34h] +
test esi esi +
jnz loc_424D45  +
mov ebx [esp+6Ch+arg_4] +
test ebx ebx +
jz loc_424C06  +
mov eax [esp+6Ch+arg_4] +
test byte ptr [eax+3] 1 +
jz loc_424C06  +
mov eax [esp+6Ch+var_10] +
test eax eax +
jz loc_424C06  +
mov ebx [esp+6Ch+arg_4] +
jmp loc_424B9E  +
mov eax [eax] +
test eax eax +
jz loc_424C06  +
cmp dword ptr [eax+4] 1 +
jnz loc_424B98  +
mov edx [eax+24h] +
test edx edx +
jz loc_424B98  +
mov ecx [eax+28h] +
mov ecx [ecx+1Ch] +
cmp ecx [ebx+70h] +
jb loc_424B98  +
cmp ecx [ebx+74h] +
jnb loc_424B98  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_424B98  +
mov ecx [eax+edx*4+28h] +
mov ecx [ecx+14h] +
and ecx 102h +
cmp ecx 102h +
jnz loc_424BBB  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_406370  +
test eax eax +
jz loc_424C3C  +
mov esi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E552h +
mov [esi] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+arg_0] +
mov ecx [esp+6Ch+var_10] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov [edx] ecx +
jmp loc_4244AE  +
mov [esp+6Ch+var_6C] 11h +
call sub_4040F0  +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_424964  +
cmp dword ptr [edx+40h] 2 +
jnz loc_424964  +
test byte ptr [edx+14h] 2 +
jz loc_424964  +
mov eax ebp +
mov [esp+6Ch+var_44] ebx +
jmp loc_424CAD  +
mov ecx [eax+20h] +
add ecx [eax+24h] +
lea eax [ecx+3] +
and eax 0FFFFFFFCh +
cmp eax [edx+20h] +
jnz loc_424CC9  +
mov ecx [edx+0Ch] +
add [esp+6Ch+var_44] 1 +
test ecx ecx +
jz loc_424CC9  +
cmp dword ptr [ecx+40h] 2 +
jnz loc_424CC9  +
test byte ptr [ecx+14h] 2 +
jz loc_424CC9  +
mov eax edx +
mov edx ecx +
mov esi [edx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
jz loc_424C80  +
mov ebx [esp+6Ch+var_44] +
lea eax ds:28h[ebx*4] +
jmp loc_424964  +
mov [esp+6Ch+var_68] 11AAh +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_404040  +
mov eax [ebp+14h] +
and eax 400h +
jmp loc_4249EC  +
lea edi [edx+eax] +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
and esi [ecx+20h] +
cmp edi esi +
ja loc_42472B  +
xor edx edx +
mov eax esi +
div  [esp+6Ch+var_30] +
mov eax edi +
mov ebp edx +
xor edx edx +
div  [esp+6Ch+var_30] +
cmp ebp edx +
jb loc_42472B  +
mov eax [esp+6Ch+var_30] +
mov [esp+6Ch+var_34] 1 +
neg eax  +
and eax esi +
cmp ebx eax +
jbe loc_424733  +
jmp loc_42472B  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_406370  +
test eax eax +
jz loc_424C3C  +
mov esi [esp+6Ch+arg_0] +
mov dword ptr [eax] 0 +
mov edi [esp+6Ch+var_3C] +
mov dword ptr [eax+4] 6474E551h +
mov edx [esi+0A0h] +
mov ecx [edi+1A8h] +
mov esi [esp+6Ch+arg_4] +
mov edx [edx+934h] +
mov edx [edx+34h] +
mov [eax+14h] ecx +
mov [eax+8] edx +
movzx edx byte ptr [eax+20h] +
or edx 1 +
test ecx ecx +
setnz cl  +
and edx 0FFFFFFFBh +
shl ecx 2 +
or edx ecx +
mov ecx [esi+10h] +
mov [eax+20h] dl +
test ecx ecx +
jle loc_424DC5  +
or edx 8 +
mov [eax+18h] ecx +
mov [eax+20h] dl +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_424B7A  +
mov eax [esp+6Ch+var_50] +
add eax ecx +
cmp [esp+6Ch+var_44] eax +
mov [esp+6Ch+var_50] eax +
jb loc_4247C8  +
cmp ecx eax +
ja loc_4247C8  +
mov edi [esp+6Ch+var_30] +
sub eax 1 +
mov [esp+6Ch+var_24] eax +
add edi eax +
cmp [esp+6Ch+var_50] edi +
mov eax edi +
jbe loc_424EA9  +
mov eax [esp+6Ch+var_20] +
cmp eax ecx +
mov edi eax +
jbe loc_424E25  +
cmp [esp+6Ch+var_44] edi +
mov [esp+6Ch+var_54] 1 +
jnb loc_4247C8  +
test dword ptr [edx+14h] 402h +
jnz loc_424EC0  +
test dword ptr [ebx+14h] 402h +
jz loc_424EC0  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 1 +
test byte ptr [eax+29h] 20h +
jz loc_4247C8  +
mov ecx [esp+6Ch+var_24] +
xor ecx [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] ecx +
jnz loc_4247C8  +
test ebp ebp +
jnz loc_424EDB  +
test byte ptr [ebx+14h] 8 +
jnz loc_424EDB  +
mov eax [esp+6Ch+var_24] +
xor eax [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] eax +
jz loc_424EDB  +
mov [esp+6Ch+var_54] 1 +
jmp loc_4247C8  +
mov [esp+6Ch+var_38] esi +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] 0 +
jmp loc_42478C  +
mov edi [esp+6Ch+var_30] +
and eax [esp+6Ch+var_2C] +
add edi eax +
cmp edi ecx +
jbe loc_424E25  +
jmp loc_424E13  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 0 +
test byte ptr [eax+29h] 20h +
jz loc_4247C8  +
jmp loc_424E6A  +
mov [esp+6Ch+var_54] 0 +
jmp loc_4247C8  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_406370  +
test eax eax +
mov edi eax +
jz loc_424C3C  +
mov dword ptr [eax] 0 +
or byte ptr [eax+20h] 21h +
mov dword ptr [eax+4] 6 +
mov dword ptr [eax+8] 5 +
mov [esp+6Ch+var_10] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_406370  +
test eax eax +
jz loc_424C3C  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 3 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] ebp +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_424694  +
mov [esp+6Ch+var_68] 1092h +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_404040  +
jmp loc_424639  +
mov edx [esp+6Ch+arg_4] +
mov eax [esp+6Ch+arg_0] +
call sub_41F720  +
mov edx eax +
jmp loc_424707  +
mov [esp+6Ch+var_40] 0 +
jmp loc_424639  +
***
sub esp 24h +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_0] +
mov eax [edx+8Ch] +
test eax eax +
jz loc_424FCE  +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_42501D  +
cmp edx offset off_473250 +
jz loc_425062  +
mov esi [edx+14h] +
mov ebx 0FFFFFFF2h +
and esi 1000h +
jz loc_425023  +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jz loc_425013  +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] ebx +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] ecx +
call eax  +
test eax eax +
jnz loc_425058  +
cmp ebx 0FFFFFEFFh +
mov eax ebx +
jz loc_425042  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
cmp edx offset off_4731A8 +
mov bx 0FEFFh +
cmovz ebx esi +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_424FFA  +
jmp loc_425013  +
mov [esp+24h+var_24] 0Fh +
mov [esp+24h+var_18] ebx +
call sub_4040F0  +
mov eax [esp+24h+var_18] +
jmp loc_42501D  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
mov ebx 0FFFFFFF1h +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_424FFA  +
jmp loc_425013  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebp [esp+0ACh+arg_0] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov esi [eax+1B0h] +
jnz loc_425292  +
mov eax [esi+0A0h] +
mov edx esi +
test eax eax +
jz loc_4250C9  +
mov edi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] edi +
call eax  +
mov eax [ebp+4] +
mov edx [eax+1B0h] +
mov [esp+0ACh+var_94] edx +
mov ebx [ebp+0A0h] +
call sub_44B170  +
test eax eax +
mov edi eax +
jz loc_42526E  +
mov eax [ebp+0A0h] +
mov edx [esp+0ACh+var_94] +
mov eax [eax+934h] +
mov [eax+4] edi +
mov byte ptr [ebx] 7Fh +
mov byte ptr [ebx+1] 45h +
mov byte ptr [ebx+2] 4Ch +
mov byte ptr [ebx+3] 46h +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
mov [ebx+4] al +
mov eax [ebp+4] +
cmp dword ptr [eax+8] 1 +
sbb eax eax +
not eax  +
add eax 2 +
mov [ebx+5] al +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Dh] +
mov [ebx+6] al +
mov eax [ebp+28h] +
shr eax 5 +
and eax 3FFFFh +
test al 40h +
jz loc_425280  +
mov eax 3 +
mov [ebx+24h] ax +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_94] edx +
call sub_407CF0  +
mov edx [esp+0ACh+var_94] +
test eax eax +
jnz loc_4252A2  +
xor eax eax +
mov [ebx+26h] ax +
mov eax [edx+174h] +
movzx edx byte ptr [eax+0Dh] +
mov [ebx+1Ch] edx +
movzx edx byte ptr [eax] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] edx +
mov edx [ebp+74h] +
mov [ebx+10h] edx +
movzx eax byte ptr [eax+2] +
mov [ebx+34h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab +
mov [esp+0ACh+var_AC] edi +
call sub_44B220  +
mov [ebx+48h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_strtab +
mov [esp+0ACh+var_AC] edi +
call sub_44B220  +
mov [ebx+0B8h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_shstrtab +
mov [esp+0ACh+var_AC] edi +
call sub_44B220  +
mov [ebx+80h] eax +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+48h] 0FFFFFFFFh +
jz loc_42526E  +
cmp dword ptr [eax+0B8h] 0FFFFFFFFh +
jz loc_42526E  +
cmp dword ptr [eax+80h] 0FFFFFFFFh +
jz loc_42526E  +
mov eax [esi+0C8h] +
mov esi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] offset sub_420200 +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_34] eax +
lea eax [esp+0ACh+var_34] +
mov [esp+0ACh+var_A4] eax +
call sub_4032D0  +
mov ecx [esp+0ACh+var_30] +
test ecx ecx +
jz loc_4252D0  +
***
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 2 +
jz loc_4252B0  +
mov eax 2 +
mov [ebx+24h] ax +
jmp loc_42514B  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+8] +
mov [ebx+26h] ax +
jmp loc_425169  +
***
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
setz al  +
movzx eax al +
lea eax [eax+eax*2+1] +
mov [ebx+24h] ax +
jmp loc_42514B  +
***
mov eax [ebp+0A0h] +
mov [esp+0ACh+var_8C] eax +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_AC] eax +
call sub_44B430  +
mov esi [esp+0ACh+arg_4] +
test esi esi +
jz loc_425BF0  +
mov eax [esp+0ACh+arg_4] +
mov edi 2 +
mov esi 1 +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_425BF0  +
mov eax [ebp+64h] +
test eax eax +
jz loc_425419  +
mov ecx esi +
mov edx ebp +
mov esi eax +
jmp loc_4253AA  +
***
mov eax [eax] +
lea ebp [edi+1] +
mov [ebx+44h] edi +
cmp eax 0FFFFFFFFh +
jz loc_425360  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_44B300  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_425407  +
mov eax [eax] +
lea ecx [ebp+1] +
mov [ebx+54h] ebp +
cmp eax 0FFFFFFFFh +
jz loc_4253A3  +
mov ebx [edx+0A0h] +
mov [esp+0ACh+var_84] ecx +
mov [esp+0ACh+var_94] edx +
mov ebx [ebx+934h] +
mov ebx [ebx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ebx +
call sub_44B300  +
mov edx [esp+0ACh+var_94] +
mov ecx [esp+0ACh+var_84] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_425412  +
mov ebx [esi+8Ch] +
mov edi ecx +
cmp dword ptr [ebx+4] 11h +
jz loc_4253BE  +
add edi 1 +
mov [ebx+5Ch] ecx +
mov eax [ebx] +
cmp eax 0FFFFFFFFh +
jz loc_4253E8  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_44B300  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+3Ch] +
test eax eax +
jnz loc_425330  +
mov eax [ebx+4Ch] +
mov ebp edi +
mov dword ptr [ebx+44h] 0 +
test eax eax +
jnz loc_42536B  +
mov dword ptr [ebx+54h] 0 +
mov ecx ebp +
jmp loc_4253A3  +
mov esi ecx +
mov ebp edx +
lea edi [ecx+1] +
mov eax [ebp+0A0h] +
mov ecx [esp+0ACh+var_8C] +
mov eax [eax+934h] +
mov edx [ecx+80h] +
mov [eax+2Ch] esi +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_44B300  +
mov eax [ebp+0A0h] +
mov ebx [ebp+7Ch] +
mov edx [eax+934h] +
test ebx ebx +
mov edx [edx+2Ch] +
mov [eax+3Ch] edx +
jz loc_4257E2  +
mov eax [ebp+0A0h] +
lea ebx [esi+2] +
mov [eax+90Ch] edi +
mov eax [esp+0ACh+var_8C] +
mov edx [eax+48h] +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_44B300  +
cmp ebx 0FEFEh +
jbe loc_426D04  +
mov eax [ebp+0A0h] +
mov edx [eax+208h] +
test edx edx +
jz loc_4254BF  +
mov [esp+0ACh+var_A8] 0D5Ch +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
call sub_404040  +
mov [esp+0ACh+var_A8] 40h +
add esi 3 +
mov [esp+0ACh+var_AC] ebp +
call sub_406370  +
mov [eax+38h] ebx +
mov edi eax +
mov eax [ebp+0A0h] +
mov [eax+208h] edi +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab_shndx +
mov [esp+0ACh+var_AC] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
mov [edi] eax +
jz loc_42526E  +
mov eax [ebp+0A0h] +
lea edi [esi+1] +
mov ebx 1 +
mov eax [eax+934h] +
mov [eax+30h] esi +
mov esi [esp+0ACh+var_8C] +
mov eax [eax+4] +
mov edx [esi+0B8h] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
call sub_44B300  +
cmp edi 0FFFFFEFFh +
ja loc_425C50  +
mov eax [ebp+0A0h] +
mov [eax+214h] edi +
mov eax [ebp+0A0h] +
mov [eax+38h] edi +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] edi +
mov [esp+0ACh+var_AC] ebp +
call sub_406460  +
test eax eax +
mov esi eax +
mov [esp+0ACh+var_94] eax +
jz loc_42526E  +
mov [esp+0ACh+var_A8] 38h +
mov [esp+0ACh+var_AC] ebp +
call sub_406370  +
test eax eax +
mov [esi] eax +
jz loc_42768B  +
mov eax [ebp+0A0h] +
test ebx ebx +
mov esi [esp+0ACh+var_94] +
mov edi [esp+0ACh+var_8C] +
mov [eax+40h] esi +
mov eax [ebp+0A0h] +
lea edx [edi+80h] +
mov eax [eax+934h] +
mov eax [eax+2Ch] +
mov [esi+eax*4] edx +
jz loc_42564A  +
mov eax [ebp+0A0h] +
lea edx [edi+48h] +
mov esi [esp+0ACh+var_94] +
mov eax [eax+90Ch] +
mov [esi+eax*4] edx +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+214h] 0FF00h +
jbe loc_42561E  +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_428093  +
mov eax [ebx+38h] +
mov esi [esp+0ACh+var_94] +
mov [esi+eax*4] ebx +
mov eax [ebp+0A0h] +
mov edx [eax+90Ch] +
mov [ebx+1Ch] edx +
mov eax [eax+934h] +
mov esi [esp+0ACh+var_8C] +
mov edi [esp+0ACh+var_94] +
mov eax [eax+30h] +
lea edx [esi+0B8h] +
mov [edi+eax*4] edx +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+30h] +
mov [esi+64h] eax +
mov edx [ebp+64h] +
test edx edx +
jz loc_425A6C  +
mov [esp+0ACh+arg_0] ebp +
jmp loc_4256CB  +
***
cmp eax 5 +
jz loc_4258E5  +
ja loc_425811  +
cmp eax 3 +
jnz loc_425910  +
mov esi [edx] +
mov edi offset a_stab_1 +
mov ecx 5 +
mov ebp esi +
cmps   +
jnz loc_4256C0  +
mov [esp+0ACh+var_AC] ebp +
mov edi ebp +
mov [esp+0ACh+var_84] edx +
mov esi edi +
mov edi offset aStr +
call strlen  +
mov ecx 4 +
mov edx [esp+0ACh+var_84] +
mov ebp eax +
sub eax 3 +
mov [esp+0ACh+var_8C] eax +
add esi eax +
cmps   +
jz loc_425C70  +
nop   +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jz loc_425A65  +
mov ebx [edx+8Ch] +
mov eax [esp+0ACh+var_94] +
mov ecx [ebx+44h] +
mov esi [ebx+5Ch] +
test ecx ecx +
mov [eax+esi*4] ebx +
jz loc_4256EC  +
mov eax [ebx+3Ch] +
mov edi [esp+0ACh+var_94] +
mov [edi+ecx*4] eax +
mov eax [ebx+54h] +
test eax eax +
jz loc_4256FE  +
mov edi [ebx+4Ch] +
mov ebp [esp+0ACh+var_94] +
mov [ebp+eax*4+0] edi +
test ecx ecx +
jz loc_425722  +
mov edi [esp+0ACh+arg_0] +
mov ecx [ebx+3Ch] +
mov edi [edi+0A0h] +
mov edi [edi+90Ch] +
or dword ptr [ecx+8] 40h +
mov [ecx+20h] esi +
mov [ecx+1Ch] edi +
test eax eax +
jz loc_425746  +
mov edi [esp+0ACh+arg_0] +
mov eax [ebx+4Ch] +
mov ecx [edi+0A0h] +
mov ecx [ecx+90Ch] +
or dword ptr [eax+8] 40h +
mov [eax+20h] esi +
mov [eax+1Ch] ecx +
test byte ptr [ebx+8] 80h +
jz loc_42579B  +
mov eax [edx+8Ch] +
mov edi [eax+64h] +
test edi edi +
jz loc_425930  +
mov eax [esp+0ACh+arg_4] +
test eax eax +
jz loc_425973  +
cmp edi offset off_473250 +
jz loc_4259C0  +
mov esi [edi+3Ch] +
cmp esi offset off_473250 +
jz loc_4259D0  +
test esi esi +
jz loc_425A44  +
mov eax [esi+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [ebx+4] +
cmp eax 0Bh +
jz loc_425890  +
jbe loc_425660  +
cmp eax 6FFFFFF7h +
jz loc_4258F3  +
ja loc_4258C8  +
cmp eax 11h +
jnz loc_425920  +
mov eax [esp+0ACh+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+90Ch] +
mov [ebx+1Ch] eax +
jmp loc_4256C0  +
mov ecx [esp+0ACh+arg_4] +
xor ebx ebx +
test ecx ecx +
jnz loc_425545  +
mov eax [ebp+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_42545E  +
mov ebx [esp+0ACh+arg_4] +
jmp loc_425545  +
cmp eax 6 +
jz loc_425890  +
cmp eax 9 +
jnz loc_4256C0  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_dynsym_0 +
mov [esp+28h] edx +
mov [esp] eax +
call sub_402CB0  +
mov edx [esp+28h] +
test eax eax +
jz loc_42584E  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [esp+0C0h] +
mov [esp+28h] edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+160h] +
mov [esp] edx +
call eax  +
mov edx [esp+28h] +
test eax eax +
jz loc_4256C0  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
or dword ptr [ebx+8] 40h +
mov [ebx+20h] eax +
jmp loc_4256C0  +
***
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynstr_0 +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call sub_402CB0  +
mov edx [esp+0ACh+var_84] +
test eax eax +
jz loc_4256C0  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
jmp loc_4256C0  +
cmp eax 6FFFFFFDh +
jb loc_4256C0  +
cmp eax 6FFFFFFEh +
jbe loc_425890  +
cmp eax 6FFFFFFFh +
jnz loc_4256C0  +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynsym_0 +
jmp loc_42589C  +
test byte ptr [edx+14h] 1 +
mov eax offset a_dynstr_0 +
mov esi offset a_gnu_libstr +
mov [esp+0ACh+var_84] edx +
cmovz eax esi +
mov [esp+0ACh+var_A8] eax +
jmp loc_42589C  +
***
cmp eax 4 +
jz loc_42581F  +
jmp loc_4256C0  +
***
cmp eax 6FFFFFF6h +
jz loc_4258E5  +
jmp loc_4256C0  +
***
mov eax [esp+0ACh+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_42579B  +
mov esi [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_AC] offset aBWarningSh_lin +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov edx [esp+0ACh+var_84] +
jmp loc_42579B  +
mov esi [edi+3Ch] +
test esi esi +
jnz loc_42578F  +
mov edx [edi+94h] +
mov eax [ebx+2Ch] +
mov ebp [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_9C] edx +
mov [esp+0ACh+var_A4] eax +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSect +
call off_4733A4  +
mov [esp+0ACh+var_AC] 11h +
call sub_4040F0  +
jmp loc_42526E  +
***
mov esi off_47328C +
jmp loc_425787  +
***
movzx eax word ptr [edi+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42578F  +
cmp ax 200h +
jz loc_42578F  +
mov eax [ebx+2Ch] +
mov ecx [edi+94h] +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_9C] ecx +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSe_0 +
mov [esp+0ACh+var_A8] eax +
call off_4733A4  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A8] eax +
call sub_43C460  +
test eax eax +
jz loc_4276E5  +
mov esi [eax+3Ch] +
mov edx [esp+0ACh+var_84] +
jmp loc_425787  +
mov [esp+0ACh+var_A8] 0DD0h +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
mov [esp+0ACh+var_84] edx +
call sub_404040  +
mov edx [esp+0ACh+var_84] +
jmp loc_42578F  +
mov ebp [esp+0ACh+arg_0] +
mov edx [esp+0ACh+arg_4] +
test edx edx +
jz loc_426E5E  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
mov eax [ebp+4] +
mov esi [ebp+0A0h] +
mov eax [eax+1B0h] +
mov [esp-0BCh+arg_114] esi +
mov dword ptr [esi+84h] 3 +
mov dword ptr [esi+88h] 0 +
mov [esp-0BCh+arg_104] eax +
mov eax [ebp+28h] +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+0A8h] 0 +
mov dword ptr [esi+9Ch] 0 +
shr eax 5 +
test al 42h +
mov dword ptr [esi+0A0h] 0 +
mov dword ptr [esi+0A4h] 1 +
jnz loc_425D18  +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
jz loc_425D18  +
mov eax esi +
xor edx edx +
mov esi [esi+40h] +
mov edi [eax+214h] +
mov eax [eax+28h] +
cmp edi 1 +
mov [esp-0BCh+arg_D0] edi +
jbe loc_427637  +
mov edi [esp-0BCh+arg_114] +
mov ebx 1 +
mov [esp-0BCh+arg_178] ebp +
mov ecx [edi+934h] +
mov ebp edi +
mov [esp-0BCh+arg_E0] ecx +
jmp loc_425BAD  +
cmp [ebp+90Ch] ebx +
jz loc_425BCE  +
mov edi [ebp+208h] +
test edi edi +
jz loc_425B62  +
mov edi [edi+38h] +
cmp ecx [esi+edi*4] +
jz loc_425BCE  +
mov edi [esp-0BCh+arg_E0] +
cmp ebx [edi+30h] +
jz loc_425BCE  +
cmp ebx [edi+2Ch] +
jz loc_425BCE  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_424320  +
mov edi [esp-0BCh+arg_178] +
mov ebp [edi+0A0h] +
mov edi [ebp+934h] +
mov [esp-0BCh+arg_E0] edi +
nop   +
add ebx 1 +
cmp ebx [esp-0BCh+arg_D0] +
jz loc_426C69  +
mov ecx [esi+ebx*4] +
mov edi [ecx+4] +
cmp edi 4 +
jz loc_425BBD  +
cmp edi 9 +
jnz loc_425BE0  +
mov edi [ecx+2Ch] +
test edi edi +
jz loc_425BCE  +
test byte ptr [edi+17h] 8 +
jz loc_425B48  +
mov dword ptr [ecx+10h] 0FFFFFFFFh +
mov dword ptr [ecx+14h] 0FFFFFFFFh +
jmp loc_425BA0  +
***
mov edi [ecx+2Ch] +
test edi edi +
jnz loc_425BC4  +
jmp loc_425B48  +
***
mov eax [ebp+64h] +
test eax eax +
jz loc_427569  +
mov esi 1 +
jmp loc_425C0F  +
mov edx [eax+0Ch] +
test edx edx +
mov eax edx +
jz loc_425D10  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 11h +
jnz loc_425C02  +
test byte ptr [eax+16h] 10h +
jz loc_425C48  +
mov ecx [eax+10h] +
mov edx [eax+0Ch] +
test ecx ecx +
mov ebx edx +
jz loc_427396  +
mov [ecx+0Ch] edx +
mov edx [eax+0Ch] +
test ebx ebx +
jz loc_42738E  +
mov [ebx+10h] ecx +
sub dword ptr [ebp+6Ch] 1 +
jmp loc_425C05  +
mov [edx+5Ch] esi +
add esi 1 +
jmp loc_425C02  +
mov [esp+0ACh+var_A4] edi +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBTooManySectio +
call off_4733A4  +
jmp loc_42526E  +
***
lea eax [ebp-2] +
mov [esp+0ACh+var_AC] eax +
call sub_408000  +
test eax eax +
mov esi eax +
jz loc_42526E  +
mov edx [esp+0ACh+var_84] +
mov ecx [esp+0ACh+var_8C] +
mov eax [edx] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_AC] esi +
mov [esp+0ACh+var_A8] eax +
call memcpy  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [esi+ebp-3] 0 +
mov [esp+0ACh+var_A8] esi +
mov [esp+0ACh+var_AC] eax +
call sub_402CB0  +
mov [esp+0ACh+var_AC] esi +
mov edi eax +
call free  +
test edi edi +
mov edx [esp+0ACh+var_84] +
jz loc_4256C0  +
mov esi [edi+8Ch] +
mov eax [ebx+5Ch] +
mov [esi+1Ch] eax +
mov eax [esi+28h] +
test eax eax +
jnz loc_4256C0  +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call loc_4045D0  +
mov edx [esp+0ACh+var_84] +
test eax eax +
lea ecx [eax+3] +
cmovs eax ecx +
sar eax 2 +
add eax 4 +
mov [esi+28h] eax +
jmp loc_4256C0  +
***
lea edi [esi+1] +
jmp loc_425319  +
***
mov edi [esp-0BCh+arg_17C] +
mov esi [esp-0BCh+arg_114] +
test edi edi +
jz loc_4276AA  +
mov eax [esi+934h] +
xor edi edi +
mov eax [eax] +
test eax eax +
jz loc_426D18  +
xor ecx ecx +
nop   +
mov edx [eax+1Ch] +
add ecx 1 +
mov eax [eax] +
test edx edx +
cmovnz edi edx +
test eax eax +
jnz loc_425D40  +
test ecx ecx +
mov [esp-0BCh+arg_108] ecx +
jz loc_426D18  +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
movzx eax byte ptr [ecx] +
mov [esi+14h] eax +
mov eax [ebp+0A0h] +
movzx edx byte ptr [ecx+1] +
mov [eax+2Ch] edx +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_108] +
mov [eax+30h] esi +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [edx+1Ch] +
cmp esi 0FFFFFFFFh +
jz loc_4273C5  +
movzx ebx byte ptr [ecx+1] +
imul ebx [esp-0BCh+arg_108] +
cmp esi ebx +
jb loc_427504  +
mov ebx [esp-0BCh+arg_108] +
test ebx ebx +
jz loc_426E46  +
mov esi [edx+1Ch] +
xor edx edx +
movzx ecx byte ptr [ecx+1] +
mov eax esi +
div  ecx +
mov eax esi +
test edx edx +
jnz loc_427533  +
xor edx edx +
div  ecx +
mov [esp-0BCh+arg_C0] 20h +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_406460  +
mov ebx eax +
mov eax [ebp+0A0h] +
test ebx ebx +
mov [eax+44h] ebx +
jz loc_42526E  +
test byte ptr [ebp+29h] 20h +
mov [esp-0BCh+arg_11C] 1 +
jz loc_425E17  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+10h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov [esp-0BCh+arg_D4] 0 +
mov eax [eax+174h] +
movzx esi byte ptr [eax] +
movzx eax byte ptr [eax+1] +
imul eax [esp-0BCh+arg_108] +
mov [esp-0BCh+arg_D0] esi +
add [esp-0BCh+arg_D0] eax +
mov eax [esp-0BCh+arg_D0] +
adc [esp-0BCh+arg_D4] edx +
cmp eax edi +
ja loc_4273D6  +
sub edi eax +
xor edx edx +
mov [esp-0BCh+arg_120] edi +
mov eax edi +
add eax [esp-0BCh+arg_D0] +
adc edx [esp-0BCh+arg_D4] +
mov [esp-0BCh+arg_E8] eax +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_EC] edx +
mov edx [eax+934h] +
mov esi [edx] +
test esi esi +
mov [esp-0BCh+arg_E0] esi +
jz loc_426448  +
mov [esp-0BCh+arg_178] ebp +
mov ebp ebx +
mov [esp-0BCh+arg_100] 0 +
mov eax [esp-0BCh+arg_E0] +
mov ebx [eax+24h] +
cmp ebx 1 +
jbe loc_426797  +
mov eax [esp-0BCh+arg_178] +
mov eax [eax+0A0h] +
cmp word ptr [eax+24h] 4 +
jnz loc_425ECC  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+4] +
cmp eax 4 +
mov [esp-0BCh+arg_D0] eax +
jz loc_4265D0  +
mov esi [esp-0BCh+arg_E0] +
mov [esp-0BCh+arg_BC] ebx +
mov [esp-0BCh+arg_C4] 41F4D0h +
mov [esp-0BCh+arg_C0] 4 +
lea eax [esi+28h] +
mov [esp-0BCh+arg_B8] eax +
call qsort  +
mov eax esi +
mov esi [esi+4] +
mov ebx [eax+24h] +
mov [esp-0BCh+arg_D0] esi +
mov eax [esp-0BCh+arg_D0] +
test ebx ebx +
mov esi [esp-0BCh+arg_E0] +
mov [ebp+0] eax +
mov eax [esi+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
jnz loc_4265E5  +
movzx eax byte ptr [esi+20h] +
mov dword ptr [ebp+0Ch] 0 +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_4265C1  +
mov dword ptr [ebp+10h] 0 +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_426670  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_426615  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [ebp+1Ch] eax +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_42669A  +
cmp [esp-0BCh+arg_D0] 2 +
jz loc_426B32  +
xor esi esi +
cmp [esp-0BCh+arg_D0] 4 +
mov [esp-0BCh+arg_F8] 0 +
jz loc_426760  +
movzx eax byte ptr [esp-0BCh+arg_D8] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+14h] 0 +
mov dword ptr [ebp+18h] 0 +
and eax 10h +
jz loc_425FF0  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_425FB6  +
mov edx [esp-0BCh+arg_F0] +
or edx 4 +
mov [ebp+4] edx +
mov edi [esp-0BCh+arg_104] +
test ebx ebx +
mov edx [edi+174h] +
movzx ecx byte ptr [edx] +
mov [ebp+14h] ecx +
movzx edx byte ptr [edx] +
mov [ebp+18h] edx +
jz loc_425FF0  +
mov ecx [ebp+0Ch] +
mov edx [esp-0BCh+arg_E8] +
cmp ecx edx +
jb loc_4276CD  +
sub ecx edx +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
mov [ebp+0Ch] ecx +
jnz loc_425FF0  +
sub [ebp+10h] edx +
nop   +
test byte ptr [esp-0BCh+arg_D8] 20h +
jz loc_42605C  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_426002  +
or dword ptr [ebp+4] 4 +
test al al +
mov eax [esp-0BCh+arg_104] +
mov edx [eax+174h] +
jnz loc_426B07  +
movzx eax byte ptr [edx] +
test ebx ebx +
mov [ebp+8] eax +
jz loc_426CE7  +
sub eax [esp-0BCh+arg_E8] +
add [ebp+0Ch] eax +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
jnz loc_426033  +
add [ebp+10h] eax +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
mov edi [esp-0BCh+arg_120] +
add eax edi +
add edx edi +
mov [ebp+14h] eax +
mov [ebp+18h] edx +
mov eax [esp-0BCh+arg_D0] +
cmp eax 1 +
jz loc_426656  +
cmp eax 4 +
jz loc_426640  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+24h] +
lea esi [eax+28h] +
mov [esp-0BCh+arg_F0] esi +
test ecx ecx +
jz loc_4274F8  +
mov edi [ebp+0] +
mov esi ebp +
mov [esp-0BCh+arg_D0] 0 +
mov [esp-0BCh+arg_E4] edi +
jmp loc_426129  +
***
cmp edi 1 +
jz loc_426230  +
cmp dword ptr [ebp+4] 8 +
jz loc_426260  +
mov ecx [ebp+18h] +
add [esi+14h] ecx +
test byte ptr [ebp+8] 2 +
jz loc_4260C2  +
add [esi+18h] ecx +
mov eax [esp-0BCh+arg_D8] +
cmp eax [esi+1Ch] +
mov eax [esp-0BCh+arg_E0] +
movzx eax byte ptr [eax+20h] +
jbe loc_4260E9  +
test al 4 +
jnz loc_4260E9  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_4263B0  +
mov ecx [esp-0BCh+arg_D8] +
mov [esi+1Ch] ecx +
test al 1 +
jnz loc_42610F  +
mov eax [esi+4] +
mov edx eax +
or edx 4 +
mov [esi+4] edx +
mov edx [ebp+8] +
test dl 4 +
jz loc_426106  +
or eax 5 +
mov [esi+4] eax +
and edx 1 +
jz loc_42610F  +
or dword ptr [esi+4] 2 +
mov [esp-0BCh+arg_E4] edi +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_D0] 1 +
mov ecx [eax+24h] +
cmp [esp-0BCh+arg_D0] ecx +
jnb loc_426406  +
mov eax [esp-0BCh+arg_F0] +
mov ecx [esp-0BCh+arg_D0] +
mov ebx [eax+ecx*4] +
mov eax 1 +
mov ecx [ebx+40h] +
mov ebp [ebx+8Ch] +
shl eax cl +
cmp edi 7 +
mov [esp-0BCh+arg_D8] eax +
setz dl  +
jz loc_426155  +
cmp edi 1 +
jnz loc_4261BF  +
mov eax [ebp+4] +
cmp eax 8 +
jz loc_4262F3  +
mov edi [esi+18h] +
mov edx [esi+10h] +
mov ecx [ebx+20h] +
mov [esp-0BCh+arg_E4] edi +
mov [esp-0BCh+arg_F4] edx +
add edx edi +
mov edi ecx +
sub edi edx +
jz loc_42618C  +
cmp [esp-0BCh+arg_F4] edx +
ja loc_4263C6  +
cmp edx ecx +
ja loc_4263C6  +
mov edx [esp-0BCh+arg_E4] +
add edx edi +
cmp eax 8 +
mov [esi+18h] edx +
jz loc_4261B9  +
mov eax [esi+14h] +
lea ecx [edi+eax] +
cmp edx ecx +
mov [esp-0BCh+arg_E4] eax +
ja loc_426315  +
xor edx edx +
add [esp-0BCh+arg_E8] edi +
adc [esp-0BCh+arg_EC] edx +
mov [esi+14h] ecx +
mov edi [esi] +
mov [esp-0BCh+arg_E4] edi +
cmp edi 4 +
jnz loc_4260A0  +
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_4260A9  +
mov eax [esp-0BCh+arg_D0] +
test eax eax +
jnz loc_4265A0  +
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
mov ecx [ebp+18h] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax [esp-0BCh+arg_E0] +
mov [ebp+14h] edx +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
movzx eax byte ptr [eax+20h] +
mov [esi+14h] ecx +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 1 +
jmp loc_4260E9  +
***
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
cmp dword ptr [ebp+4] 8 +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov [ebp+14h] edx +
jz loc_4263A5  +
mov ecx [ebp+18h] +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
jmp loc_4260B6  +
mov ecx [ebp+8] +
test ch 4 +
mov eax ecx +
jz loc_4262D0  +
mov edx [ebp+14h] +
or edx [ebp+10h] +
jnz loc_4262D0  +
mov eax [ebp+0Ch] +
xor edx edx +
mov [esp-0BCh+arg_F4] eax +
xor eax eax +
cmp [esp-0BCh+arg_D8] 0 +
jz loc_4262B8  +
mov edi [esp-0BCh+arg_D8] +
xor edx edx +
mov eax [esp-0BCh+arg_F4] +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] edi +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
mov [esp-0BCh+arg_110] ecx +
call sub_4701F0  +
mov edi [esi] +
mov ecx [esp-0BCh+arg_110] +
add eax [esp-0BCh+arg_E8] +
adc edx [esp-0BCh+arg_EC] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax ecx +
mov [ebp+14h] edx +
nop   +
test al 2 +
jz loc_4260C2  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_4262E8  +
test ah 4 +
jnz loc_4260C2  +
mov eax [ebp+18h] +
add [esi+18h] eax +
jmp loc_4260C2  +
mov ecx [ebp+8] +
test cl 2 +
jz loc_4261BF  +
and ch 4 +
jz loc_426161  +
test dl dl +
jz loc_4261BF  +
jmp loc_426161  +
mov eax [esp-0BCh+arg_E8] +
mov [esp-0BCh+arg_F4] edx +
mov edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_403BF0  +
mov edx [esp-0BCh+arg_F4] +
test eax eax +
jnz loc_42526E  +
mov edi edx +
sub edi [esp-0BCh+arg_E4] +
mov [esp-0BCh+arg_B8] edi +
call sub_408190  +
test eax eax +
mov edx eax +
jz loc_42526E  +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_F4] edx +
mov [esp-0BCh+arg_C0] eax +
call sub_403A90  +
mov edx [esp-0BCh+arg_F4] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_E4] eax +
call free  +
mov eax [esp-0BCh+arg_E4] +
cmp edi eax +
jnz loc_42526E  +
mov ecx [esi+14h] +
add ecx edi +
jmp loc_4261AC  +
mov eax [ebp+8] +
jmp loc_4262D0  +
***
mov ecx [esp-0BCh+arg_178] +
test byte ptr [ecx+29h] 20h +
jnz loc_4260E9  +
jmp loc_4260E2  +
mov eax [esp-0BCh+arg_178] +
xor edi edi +
mov [esp-0BCh+arg_C8] edx +
mov [esp-0BCh+arg_E4] edx +
mov [esp-0BCh+arg_C4] ecx +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] ebx +
mov [esp-0BCh+arg_B8] offset aBSectionALmaLx +
call off_4733A4  +
mov edx [esp-0BCh+arg_E4] +
mov eax [esi+18h] +
mov [ebx+20h] edx +
mov [esp-0BCh+arg_E4] eax +
mov eax [ebp+4] +
jmp loc_42618C  +
mov ebp esi +
mov eax [esp-0BCh+arg_F8] +
xor edx edx +
sub [esp-0BCh+arg_E8] eax +
sbb [esp-0BCh+arg_EC] edx +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_4267A3  +
mov eax [esp-0BCh+arg_E0] +
add ebp 20h +
add [esp-0BCh+arg_100] 1 +
mov eax [eax] +
test eax eax +
mov [esp-0BCh+arg_E0] eax +
jnz loc_425E94  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_E8] +
mov edi [esp-0BCh+arg_EC] +
mov [edx+20h] esi +
mov [edx+24h] edi +
mov [esp-0BCh+arg_D8] esi +
mov [esp-0BCh+arg_DC] edi +
mov ecx [ebp+4] +
mov esi [ecx+1B0h] +
mov ecx [eax+214h] +
mov [esp-0BCh+arg_E0] esi +
mov esi [eax+40h] +
lea edi [esi+ecx*4] +
mov [esp-0BCh+arg_D0] esi +
add esi 4 +
cmp edi esi +
jbe loc_426D66  +
mov [esp-0BCh+arg_178] ebp +
jmp loc_426562  +
cmp dword ptr [ebx+4] 8 +
jz loc_426D43  +
test byte ptr [ebx+8] 2 +
jz loc_426B80  +
mov edx [ebx+18h] +
test edx edx +
jz loc_4264DB  +
test eax eax +
mov edx off_4733A4 +
jz loc_4276A0  +
mov eax [eax] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningAlloca +
mov [esp-0BCh+arg_BC] eax +
call edx  +
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_426CDF  +
mov ebp [ebx+18h] +
test ebp ebp +
jz loc_426CDF  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+10h] +
mov eax [ebx+0Ch] +
xor edx edx +
mov ebp eax +
xor eax eax +
test ecx ecx +
jz loc_42652F  +
xor edx edx +
mov eax ebp +
sub eax [esp-0BCh+arg_D8] +
sbb edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_4701F0  +
add eax [esp-0BCh+arg_D8] +
adc edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ebx +
call sub_424320  +
mov [esp-0BCh+arg_D8] eax +
mov [esp-0BCh+arg_DC] edx +
add esi 4 +
cmp edi esi +
jbe loc_426D53  +
mov ebx [esi] +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_4264A2  +
mov ecx [eax+54h] +
mov edx [eax+50h] +
mov ebp ecx +
or ebp edx +
jz loc_426498  +
xor ecx [ebx+14h] +
xor edx [ebx+10h] +
or ecx edx +
jz loc_426557  +
mov [esp-0BCh+arg_BC] 14BEh +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_404040  +
jmp loc_426557  +
***
mov dword ptr [ebx+50h] 0 +
mov dword ptr [ebx+54h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_426113  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+0Ch] +
mov [ebp+10h] eax +
jmp loc_425F3B  +
mov eax [esp-0BCh+arg_E0] +
mov dword ptr [ebp+0] 4 +
mov eax [eax+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
mov edi [esp-0BCh+arg_E0] +
mov ecx [edi+28h] +
mov edx [edi+10h] +
mov eax [ecx+1Ch] +
sub eax edx +
mov [ebp+0Ch] eax +
movzx eax byte ptr [edi+20h] +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_4265C1  +
mov eax [ecx+20h] +
sub eax edx +
mov [ebp+10h] eax +
jmp loc_425F3B  +
test ebx ebx +
jnz loc_426C10  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
mov [ebp+1Ch] eax +
jmp loc_425F5B  +
***
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_426072  +
test byte ptr [esp-0BCh+arg_D8] 30h +
jnz loc_426CB0  +
mov eax [esp-0BCh+arg_E8] +
mov [ebp+8] eax +
jmp loc_426072  +
***
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_425F46  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_426693  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_11C] +
mov [ebp+1Ch] eax +
test ebx ebx +
jz loc_426788  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_42733B  +
mov ecx [ebp+1Ch] +
mov esi [esp-0BCh+arg_E0] +
xor eax eax +
mov edx [esi+eax*4+28h] +
test dword ptr [edx+14h] 102h +
jnz loc_4266D0  +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 8 +
add eax 1 +
cmp eax ebx +
jnz loc_4266B6  +
mov esi [esp-0BCh+arg_E0] +
mov eax [esi+28h] +
mov eax [eax+8Ch] +
cmp dword ptr [eax+4] 8 +
jnz loc_42736F  +
xor eax eax +
jmp loc_426706  +
mov edx [esi+eax*4+28h] +
mov edx [edx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_42736F  +
add eax 1 +
cmp eax ebx +
jnz loc_4266F2  +
mov esi 1 +
test ecx ecx +
mov eax [ebp+0Ch] +
jz loc_426ED2  +
xor edx edx +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_4701F0  +
mov edi edx +
mov edx eax +
mov ecx edi +
mov [esp-0BCh+arg_F8] eax +
add [esp-0BCh+arg_E8] edx +
adc [esp-0BCh+arg_EC] ecx +
test esi esi +
jz loc_42678A  +
mov esi 1 +
jmp loc_425F86  +
***
test ebx ebx +
jz loc_42762C  +
mov ecx [esp-0BCh+arg_E0] +
xor eax eax +
nop   +
mov edx [ecx+eax*4+28h] +
add eax 1 +
cmp eax ebx +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 7 +
jnz loc_426770  +
xor esi esi +
mov [esp-0BCh+arg_F8] 0 +
jmp loc_425F86  +
mov eax [eax+4] +
mov [esp-0BCh+arg_D0] eax +
jmp loc_425EFB  +
mov eax [esp+0C0h] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_426421  +
cmp ecx 1 +
jbe loc_426CD2  +
mov eax 1 +
mov esi [esp+28h] +
jmp loc_4267DB  +
***
add eax 1 +
cmp eax ecx +
jz loc_426CD2  +
mov ebx [esi+eax*4+24h] +
mov edx [esi+eax*4+28h] +
mov edi [ebx+1Ch] +
cmp [edx+1Ch] edi +
jnz loc_4267D0  +
mov edx [edx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_4267FD  +
cmp dword ptr [edx+4] 8 +
jz loc_4267D0  +
mov edi [edx+18h] +
test edi edi +
jz loc_4267D0  +
mov edx [ebx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_426816  +
cmp dword ptr [edx+4] 8 +
jz loc_4267D0  +
mov ebx [edx+18h] +
test ebx ebx +
jz loc_4267D0  +
mov dword ptr [esp+58h] 0 +
***
mov esi [esp-0BCh+arg_E0] +
mov edx [esi+24h] +
test edx edx +
jz loc_426421  +
xor edi edi +
mov [esp-0BCh+arg_D8] ebp +
mov ebp edi +
jmp loc_426946  +
mov ecx [esp-0BCh+arg_E4] +
lea edx [ecx-6] +
cmp edx 1 +
jbe loc_426997  +
and eax 2 +
mov [esp-0BCh+arg_F4] eax +
jnz loc_42687C  +
mov eax [esp-0BCh+arg_E4] +
sub eax 1 +
cmp eax 1 +
jbe loc_426AE6  +
mov eax [esp-0BCh+arg_E4] +
sub eax 6474E550h +
cmp eax 2 +
jbe loc_426AE6  +
mov eax [edi+4] +
cmp eax 8 +
mov [esp-0BCh+arg_F8] eax +
jz loc_4268D0  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov ecx [ecx+8] +
cmp ecx eax +
ja loc_426AE6  +
xor ebx ebx +
sub eax ecx +
mov ecx eax +
mov eax [edi+18h] +
sbb edx ebx +
mov ebx edx +
xor edx edx +
add ecx eax +
mov eax [esp-0BCh+arg_D8] +
adc ebx edx +
cmp ebx 0 +
mov eax [eax+14h] +
jg loc_426AE6  +
jl loc_4268D0  +
cmp ecx eax +
ja loc_426AE6  +
lea esi [esi+0] +
mov eax [esp-0BCh+arg_110] +
test eax eax +
jz loc_426920  +
mov eax [esp-0BCh+arg_F4] +
test eax eax +
jz loc_426920  +
mov eax [esp-0BCh+arg_D8] +
mov edx [edi+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_426AE6  +
sub edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_426907  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_4280F2  +
mov eax [edi+18h] +
mov ecx [esp-0BCh+arg_D8] +
add eax edx +
cmp eax [ecx+18h] +
ja loc_426AE6  +
lea esi [esi+0] +
cmp [esp-0BCh+arg_E4] 2 +
jz loc_426A5F  +
nop   +
lea esi [esi+0] +
add ebp 1 +
cmp ebp [esi+24h] +
jnb loc_426C94  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax] +
mov [esp-0BCh+arg_E4] eax +
mov eax [esi+ebp*4+28h] +
mov edi [eax+8Ch] +
mov [esp-0BCh+arg_D0] eax +
mov eax [edi+8] +
mov ecx eax +
and ecx 400h +
mov [esp-0BCh+arg_F0] ecx +
jz loc_426841  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_426851  +
cmp [esp-0BCh+arg_E4] 6474E552h +
jz loc_426851  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_426851  +
cmp dword ptr [edi+4] 8 +
jz loc_426AF7  +
mov eax [esp-0BCh+arg_100] +
mov [esp-0BCh+arg_B8] offset aBSectionACanTB +
mov [esp-0BCh+arg_C4] eax +
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_BC] eax +
call off_4733A4  +
mov edi [esi+4] +
mov eax edi +
call near ptr dword_41F430  +
test eax eax +
mov ebx eax +
jz loc_426C20  +
mov eax ds:_iob +
add eax 20h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
mov eax ds:_iob +
mov [esp-0BCh+arg_C0] ebx +
xor ebx ebx +
mov [esp-0BCh+arg_BC] offset aS_17 +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
mov eax [esi+24h] +
test eax eax +
jz loc_426A32  +
mov eax [esi+ebx*4+28h] +
add ebx 1 +
mov eax [eax] +
mov [esp-0BCh+arg_BC] offset aS_16 +
mov [esp-0BCh+arg_C0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
cmp ebx [esi+24h] +
jb loc_426A08  +
mov eax ds:_iob +
mov [esp-0BCh+arg_B8] 0Ah +
add eax 40h +
mov [esp-0BCh+arg_BC] eax +
call putc  +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
jmp loc_426930  +
mov eax [edi+18h] +
test eax eax +
jnz loc_426930  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax+18h] +
test eax eax +
mov [esp-0BCh+arg_124] eax +
jz loc_426930  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_426AC1  +
mov eax [edi+10h] +
mov ecx [esp-0BCh+arg_D8] +
mov edx [edi+14h] +
mov [esp-0BCh+arg_F8] eax +
mov eax [ecx+8] +
cmp eax [esp-0BCh+arg_F8] +
mov [esp-0BCh+arg_FC] edx +
jnb loc_426AE6  +
mov ecx [esp-0BCh+arg_F8] +
xor edx edx +
mov ebx [esp-0BCh+arg_FC] +
sub ecx eax +
mov eax ecx +
mov ecx [esp-0BCh+arg_D8] +
sbb ebx edx +
cmp ebx 0 +
mov ecx [ecx+14h] +
jg loc_426AE6  +
jl loc_426AC1  +
cmp eax ecx +
jnb loc_426AE6  +
cmp [esp-0BCh+arg_F4] 0 +
jz loc_426930  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+0Ch] +
mov edx [ecx+0Ch] +
cmp eax edx +
jbe loc_426AE6  +
sub eax edx +
cmp [esp-0BCh+arg_124] eax +
ja loc_426930  +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jnz loc_42698D  +
jmp loc_426997  +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_426930  +
jmp loc_426997  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
test ebx ebx +
mov [ebp+18h] edx +
jnz loc_42604E  +
jmp loc_42605C  +
cmp ebx 1 +
jbe loc_426788  +
mov eax [esp-0BCh+arg_E0] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
mov eax [eax+28h] +
mov esi [eax] +
cmps   +
jz loc_426788  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBTheFirstSecti +
mov [esp-0BCh+arg_BC] ebp +
call off_4733A4  +
mov [esp-0BCh+arg_B8] 11h +
call sub_4040F0  +
jmp loc_42526E  +
***
mov edx [ebx+4] +
cmp edx 4 +
jz loc_426B91  +
cmp edx 9 +
jnz loc_426D0B  +
test eax eax +
jz loc_426C9D  +
test byte ptr [eax+17h] 8 +
jnz loc_426C9D  +
mov eax [esp-0BCh+arg_178] +
mov ecx [esp-0BCh+arg_D0] +
mov eax [eax+0A0h] +
mov edx [eax+90Ch] +
cmp ebx [ecx+edx*4] +
jz loc_426C9D  +
mov edx [eax+208h] +
test edx edx +
jz loc_426BD9  +
mov edx [edx+38h] +
cmp ebx [ecx+edx*4] +
jz loc_426C9D  +
mov eax [eax+934h] +
mov ecx [esp-0BCh+arg_D0] +
mov edx [eax+30h] +
cmp ebx [ecx+edx*4] +
jz loc_426C9D  +
mov eax [eax+2Ch] +
cmp ebx [ecx+eax*4] +
jz loc_426C9D  +
mov [esp-0BCh+arg_C4] 1 +
mov eax [esp-0BCh+arg_D8] +
mov edx [esp-0BCh+arg_DC] +
jmp loc_42653F  +
mov dword ptr [ebp+1Ch] 0 +
jmp loc_425F5B  +
***
lea eax [edi-70000000h] +
cmp eax 0FFFFFFFh +
jbe loc_42739E  +
lea eax [edi-60000000h] +
cmp eax 0FFFFFFFh +
ja loc_426E17  +
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoos7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_4269D3  +
mov ebp [esp-0BCh+arg_178] +
mov esi [esp-0BCh+arg_E0] +
mov [esi+20h] eax +
mov [esi+24h] edx +
mov eax [esp-0BCh+arg_118] +
test eax eax +
jnz loc_42726E  +
or byte ptr [ebp+2Bh] 10h +
mov eax 1 +
jmp loc_425270  +
mov ebp [esp-0BCh+arg_D8] +
jmp loc_426421  +
mov dword ptr [ebx+10h] 0FFFFFFFFh +
mov dword ptr [ebx+14h] 0FFFFFFFFh +
jmp loc_426557  +
mov edi [ebp+14h] +
mov eax [ebp+8] +
mov ecx [esp-0BCh+arg_E8] +
add eax edi +
sub ecx eax +
test esi esi +
mov eax ecx +
jnz loc_426CCA  +
lea ecx [edi+ecx] +
mov [ebp+14h] ecx +
add [ebp+18h] eax +
jmp loc_426072  +
mov [esp-0BCh+arg_110] 1 +
jmp loc_426825  +
mov ecx [ebx+24h] +
jmp loc_4264FE  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add [ebp+14h] eax +
movzx eax byte ptr [edx+1] +
imul eax edi +
add [ebp+18h] eax +
jmp loc_42605C  +
***
mov esi ebx +
jmp loc_425515  +
***
test eax eax +
jnz loc_426B99  +
jmp loc_426BA3  +
mov dword ptr [esi+14h] 0 +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_108] 0 +
mov dword ptr [eax+2Ch] 0 +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
jmp loc_425D7A  +
mov ebp [ebx+30h] +
test ebp ebp +
jnz loc_4264A2  +
jmp loc_42657F  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov edi [esp-0BCh+arg_E0] +
mov eax [eax+44h] +
mov ecx [edi+174h] +
mov [esp-0BCh+arg_E4] eax +
movzx esi byte ptr [ecx] +
mov [esp-0BCh+arg_F8] esi +
add esi [edi+10h] +
mov edi [edx] +
mov [esp-0BCh+arg_F0] esi +
test edi edi +
jz loc_4280C9  +
mov edx edi +
xor esi esi +
mov [esp-0BCh+arg_100] 0 +
mov [esp-0BCh+arg_F4] 0 +
mov [esp-0BCh+arg_E8] 0 +
mov [esp-0BCh+arg_E0] 0 +
mov [esp-0BCh+arg_D0] edi +
jmp loc_426DCD  +
***
mov edx [edx] +
add eax 20h +
test edx edx +
jz loc_426EE3  +
add esi 1 +
cmp dword ptr [eax] 1 +
jnz loc_426DC0  +
movzx ecx byte ptr [edx+20h] +
mov ebx ecx +
and ebx 10h +
jz loc_426DEE  +
mov edi [eax+0Ch] +
mov [esp-0BCh+arg_E8] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_F4] edi +
and ecx 20h +
jz loc_426DC0  +
mov edi [eax+0Ch] +
test bl bl +
mov [esp-0BCh+arg_F0] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_100] edi +
jz loc_426DC0  +
mov ecx [esp-0BCh+arg_F8] +
add [esp-0BCh+arg_F0] ecx +
add [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_E0] edx +
jmp loc_426DC0  +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C4] edi +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C0] offset a8_8x +
mov [esp-0BCh+arg_BC] 20h +
mov [esp-0BCh+arg_B8] eax +
call sub_420860  +
jmp loc_4269D3  +
movzx ecx byte ptr [ecx] +
xor ebx ebx +
mov [edx+24h] ebx +
mov [esp-0BCh+arg_DC] ebx +
mov [edx+20h] ecx +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_426464  +
***
mov eax [ebp+7Ch] +
mov [esp+0ACh+var_94] eax +
test eax eax +
mov eax [ebp+28h] +
mov [esp+0ACh+var_64] eax +
jnz loc_4273E7  +
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [esp+0ACh+var_64] +
and eax 43h +
cmp eax 1 +
jz loc_4273F4  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
lea eax [esp+74h] +
mov [esp-0BCh+arg_C0] eax +
mov [esp-0BCh+arg_BC] offset sub_41F980 +
mov [esp-0BCh+arg_B8] ebp +
call sub_4032D0  +
mov eax [esp+74h] +
test eax eax +
jz loc_425A93  +
jmp loc_42526E  +
mov dword ptr [esp+40h] 0 +
xor edx edx +
xor ecx ecx +
jmp loc_426749  +
mov ecx [esp-0BCh+arg_17C] +
mov ebx [esp-0BCh+arg_E0] +
mov edi [esp-0BCh+arg_D0] +
test ecx ecx +
setnz cl  +
test ebx ebx +
setnz al  +
mov ebx edi +
and al cl +
mov byte ptr [esp-0BCh+arg_D0] cl +
mov edi eax +
jnz loc_427578  +
mov eax [esp-0BCh+arg_E4] +
shl esi 5 +
mov edi [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_178] ebp +
add esi eax +
mov [esp-0BCh+arg_E0] esi +
mov esi eax +
lea esi [esi+0] +
mov edx [esi] +
cmp edx 6474E552h +
jz loc_427085  +
cmp edx 6474E551h +
jz loc_427180  +
mov eax [ebx+24h] +
test eax eax +
jz loc_427138  +
cmp edx 1 +
jz loc_426FA0  +
cmp edx 4 +
jz loc_42721C  +
test byte ptr [ebx+20h] 30h +
jnz loc_428026  +
mov edx [ebx+28h] +
mov dword ptr [esi+14h] 0 +
mov ebp [edx+50h] +
mov [esi+8] ebp +
lea esi [esi+0] +
mov ecx [ebx+eax*4+24h] +
mov edx [ecx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_42720C  +
sub eax 1 +
jnz loc_426F80  +
lea esi [esi+0] +
mov ebx [ebx] +
add esi 20h +
test ebx ebx +
jnz loc_426F30  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_D8] +
mov edi [esp-0BCh+arg_DC] +
mov [edx+20h] esi +
mov esi [esp-0BCh+arg_104] +
mov [edx+24h] edi +
mov edx [esi+0B0h] +
test edx edx +
jz loc_426FF6  +
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call edx  +
test eax eax +
jz loc_42526E  +
mov eax [ebp+0A0h] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_427013  +
mov esi [esp-0BCh+arg_17C] +
movzx edx byte ptr [esi] +
and edx 3 +
cmp dl 1 +
jz loc_428043  +
mov eax [eax+934h] +
mov esi [eax+1Ch] +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+1] +
mov [esp-0BCh+arg_C4] 0 +
movzx eax byte ptr [eax] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_403BF0  +
test eax eax +
jnz loc_42526E  +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov eax [eax+174h] +
mov ecx [eax+10h] +
mov eax [esp-0BCh+arg_114] +
mov edi [eax+44h] +
mov eax esi +
div  ebx +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_C0] eax +
call ecx  +
test eax eax +
jnz loc_42526E  +
jmp loc_426C7A  +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_427238  +
mov eax [esp-0BCh+arg_178] +
mov ebp [esp-0BCh+arg_E4] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jnz loc_4270BF  +
jmp loc_427160  +
mov eax [eax] +
add ebp 20h +
test eax eax +
jz loc_427160  +
cmp dword ptr [ebp+0] 1 +
jnz loc_4270B2  +
mov ecx [edi+74h] +
cmp [ebp+0Ch] ecx +
jnb loc_4270B2  +
mov edx [eax+24h] +
test edx edx +
jz loc_4270B2  +
mov edx [eax+28h] +
mov ecx [edi+70h] +
cmp [edx+1Ch] ecx +
jb loc_4270B2  +
nop   +
cmp ebp [esp-0BCh+arg_E0] +
jnb loc_4271B8  +
mov eax [ebp+0Ch] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
mov [esi+0Ch] eax +
mov eax [ebp+10h] +
mov [esi+10h] eax +
mov eax [ebp+8] +
mov [esi+8] eax +
jz loc_427376  +
mov eax [edi+74h] +
sub eax [ebp+0Ch] +
movzx edx byte ptr [ebx+20h] +
mov [esi+14h] eax +
test dl 4 +
mov [esi+18h] eax +
jnz loc_427123  +
mov dword ptr [esi+1Ch] 1 +
and edx 1 +
jnz loc_426FA0  +
mov dword ptr [esi+4] 4 +
jmp loc_426FA0  +
movzx eax byte ptr [ebx+20h] +
test al 10h +
jz loc_427195  +
mov ecx [esp-0BCh+arg_E8] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_426FA0  +
mov eax [esp-0BCh+arg_F4] +
mov [esi+10h] eax +
jmp loc_426FA0  +
***
mov [esp-0BCh+arg_BC] 1546h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_404040  +
jmp loc_4270E0  +
***
test byte ptr [ebx+20h] 8 +
jz loc_426FA0  +
mov eax [ebx+18h] +
mov [esi+18h] eax +
jmp loc_426FA0  +
test al 20h +
jz loc_426FA0  +
mov ecx [esp-0BCh+arg_F0] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_426FA0  +
mov eax [esp-0BCh+arg_100] +
mov [esi+10h] eax +
jmp loc_426FA0  +
test esi 1 +
mov edx esi +
mov ecx 20h +
jnz loc_42767E  +
test dl 2 +
jnz loc_42766D  +
mov ebp ecx +
xor eax eax +
and ebp 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax ebp +
jb loc_4271DB  +
add edx eax +
test cl 2 +
jz loc_4271F9  +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
and ecx 1 +
jz loc_427201  +
mov byte ptr [edx] 0 +
mov dword ptr [esi] 0 +
jmp loc_426FA0  +
mov eax [ecx+50h] +
add eax [edx+18h] +
sub eax ebp +
mov [esi+14h] eax +
jmp loc_426FA0  +
mov ecx [esp-0BCh+arg_178] +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 3 +
jnz loc_426F63  +
jmp loc_426FA0  +
mov eax [esp-0BCh+arg_E4] +
mov ecx [esp-0BCh+arg_E0] +
mov ebp eax +
cmp eax ecx +
jnb loc_4271B8  +
mov eax [esp-0BCh+arg_E0] +
jmp loc_42725B  +
add ebp 20h +
cmp ebp eax +
jnb loc_4271B8  +
cmp dword ptr [ebp+0] 1 +
jnz loc_427250  +
mov ecx [esi+10h] +
cmp [ebp+10h] ecx +
jnz loc_427250  +
jmp loc_4270E0  +
mov ecx [ebp+0A0h] +
mov eax [ecx+934h] +
add ecx 48h +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp-0BCh+arg_B8] ecx +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_BC] eax +
call sub_424320  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+208h] +
test ecx ecx +
jz loc_4272B6  +
mov esi [ecx+18h] +
test esi esi +
jnz loc_42764A  +
mov [esp-0BCh+arg_BC] eax +
lea eax [ebx+0B8h] +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_424320  +
mov ecx [ebp+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [ebx+0C8h] +
mov [ecx+24h] edx +
mov edx [ebx+0CCh] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
call sub_403BF0  +
test eax eax +
jnz loc_42526E  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_44B590  +
test eax eax +
jz loc_42526E  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B1F0  +
jmp loc_426C86  +
mov eax [esp-0BCh+arg_E0] +
xor ecx ecx +
lea esi [eax+28h] +
xor eax eax +
mov edx [esi+eax*4] +
mov edx [edx+40h] +
cmp ecx edx +
cmovb ecx edx +
add eax 1 +
cmp eax ebx +
jnz loc_427346  +
mov esi [esp-0BCh+arg_11C] +
mov eax 1 +
shl eax cl +
cmp eax esi +
cmovb eax esi +
mov ecx eax +
jmp loc_4266B0  +
xor esi esi +
jmp loc_426712  +
movzx edx byte ptr [ebx+20h] +
test dl 8 +
jz loc_42810F  +
mov eax [ebx+18h] +
mov [esi+14h] eax +
jmp loc_427114  +
***
mov [ebp+68h] ecx +
jmp loc_425C42  +
mov [ebp+64h] edx +
jmp loc_425C37  +
***
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoproc7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_4269D3  +
movzx esi byte ptr [ecx+1] +
imul esi [esp-0BCh+arg_108] +
mov [edx+1Ch] esi +
jmp loc_425DB0  +
xor eax eax +
xor edx edx +
mov [esp-0BCh+arg_120] 0 +
jmp loc_425E59  +
***
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [ebp+64h] +
xor edx edx +
mov esi [ebp+78h] +
test eax eax +
jz loc_42740F  +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
cmp edx ecx +
cmovb edx ecx +
test eax eax +
jnz loc_427400  +
lea ebx [edx+1] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] ebx +
mov [esp+0ACh+var_AC] ebp +
call sub_406460  +
test eax eax +
mov edi eax +
mov [esp+0ACh+var_74] eax +
jz loc_42526E  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov [eax+8] edi +
mov [eax+28h] ebx +
mov eax [esp+0ACh+var_94] +
test eax eax +
jz loc_4276F6  +
lea eax [esi+eax*4] +
mov edi esi +
mov [esp+0ACh+var_84] eax +
mov ebx [edi] +
test byte ptr [ebx+0Dh] 1 +
jnz loc_4274C0  +
add edi 4 +
cmp edi [esp+0ACh+var_84] +
jnz loc_42745B  +
xor ebx ebx +
xor edi edi +
mov eax ebx +
mov ebx esi +
mov [esp+0ACh+var_8C] 0 +
mov esi eax +
jmp loc_427490  +
add esi 1 +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_428136  +
mov edx [ebx+edi*4] +
mov eax ebp +
call loc_41F8D0  +
test eax eax +
jnz loc_427480  +
mov edx [ebx+edi*4] +
test byte ptr [edx+0Dh] 1 +
jz loc_4274B2  +
mov eax ebp +
call sub_41F920  +
test eax eax +
jnz loc_427483  +
add [esp+0ACh+var_8C] 1 +
jmp loc_427483  +
***
mov eax [ebx+8] +
test eax eax +
jnz loc_427463  +
mov edx ebx +
mov eax ebp +
call sub_41F920  +
test eax eax +
jnz loc_427463  +
mov eax [ebx+10h] +
cmp eax offset off_473250 +
jz loc_427463  +
cmp ebp [eax+94h] +
jz loc_4274E9  +
mov eax [eax+3Ch] +
mov eax [eax+8] +
mov ecx [esp+0ACh+var_74] +
mov [ecx+eax*4] ebx +
jmp loc_427463  +
***
mov eax [ebp+0] +
mov [esp-0BCh+arg_E4] eax +
jmp loc_426408  +
mov [esp-0BCh+arg_BC] 12F7h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_404040  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov edx [eax+934h] +
mov ecx [esi+174h] +
jmp loc_425DB0  +
mov [esp-0BCh+arg_BC] 1309h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_404040  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov eax [eax+934h] +
mov edx [esi+174h] +
mov eax [eax+1Ch] +
movzx ecx byte ptr [edx+1] +
jmp loc_425DD3  +
***
mov edi 2 +
mov esi 1 +
jmp loc_425419  +
***
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_C8] 1 +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] offset a__ehdr_start +
mov eax [eax+1Ch] +
mov [esp-0BCh+arg_B8] eax +
call sub_419760  +
test eax eax +
mov ecx eax +
jz loc_42760B  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_4275BC  +
cmp al 2 +
ja loc_42760B  +
mov eax [esp-0BCh+arg_E0] +
mov edx [eax+24h] +
test edx edx +
jnz loc_4280AC  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
jmp loc_4275EB  +
***
mov ebx [eax+24h] +
test ebx ebx +
jnz loc_4280AC  +
mov eax [eax] +
test eax eax +
jnz loc_4275E0  +
mov eax [esp-0BCh+arg_E8] +
mov dword ptr [ecx+14h] offset off_473250 +
mov [ecx+18h] eax +
or byte ptr [ecx+33h] 2 +
and byte ptr [ecx+34h] 0FEh +
mov byte ptr [ecx+0Ch] 3 +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ebx [edx] +
test ebx ebx +
jz loc_42812B  +
mov eax edi +
mov byte ptr [esp-0BCh+arg_D0] al +
jmp loc_426F0C  +
mov esi ebx +
mov [esp-0BCh+arg_F8] ebx +
jmp loc_425F86  +
mov esi [esp-0BCh+arg_114] +
mov esi [esi+934h] +
mov [esp-0BCh+arg_E0] esi +
jmp loc_426C70  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_424320  +
mov ebx [ebp+0A0h] +
jmp loc_4272B6  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_4271D4  +
mov byte ptr [esi] 0 +
lea edx [esi+1] +
mov cl 1Fh +
jmp loc_4271CB  +
***
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] eax +
call sub_4064E0  +
jmp loc_42526E  +
***
mov eax offset aUnknown_4 +
jmp loc_4264C3  +
mov [esp-0BCh+arg_BC] 0 +
mov [esp-0BCh+arg_B8] ebp +
call sub_424420  +
test eax eax +
jz loc_42526E  +
mov esi [ebp+0A0h] +
jmp loc_425D2B  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBNotEnoughRoom +
mov [esp-0BCh+arg_BC] ebp +
call off_4733A4  +
mov [esp-0BCh+arg_B8] 11h +
call sub_4040F0  +
jmp loc_42526E  +
***
mov [esp+0ACh+var_8C] 0 +
xor ebx ebx +
mov edi [ebp+64h] +
test edi edi +
jz loc_42772C  +
mov [esp+0ACh+var_84] esi +
mov esi ebx +
mov ebx [esp+0ACh+var_74] +
mov eax [edi+8] +
mov eax [ebx+eax*4] +
test eax eax +
jz loc_427D7C  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_427711  +
mov ebx esi +
mov esi [esp+0ACh+var_84] +
mov eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_AC] ebp +
add eax ebx +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_70] eax +
call sub_406310  +
test eax eax +
mov [esp+0ACh+var_80] eax +
jz loc_42526E  +
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_7C] 0 +
test eax eax +
jz loc_427F98  +
xor eax eax +
xor edi edi +
mov [esp+0ACh+var_84] esi +
mov esi eax +
jmp loc_427795  +
mov eax [esp+0ACh+var_8C] +
add eax esi +
add esi 1 +
lea edx [eax+1] +
mov ecx [esp+0ACh+var_80] +
mov [ecx+eax*4] ebx +
mov [ebx+14h] edx +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_4277CD  +
mov eax [esp+0ACh+var_84] +
mov ebx [eax+edi*4] +
mov eax ebp +
mov edx ebx +
call loc_41F8D0  +
test eax eax +
jnz loc_427776  +
test byte ptr [ebx+0Dh] 1 +
jz loc_4277C0  +
mov edx ebx +
mov eax ebp +
call sub_41F920  +
test eax eax +
jnz loc_42778C  +
lea esi [esi+0] +
mov eax [esp+0ACh+var_7C] +
lea edx [eax+1] +
mov [esp+0ACh+var_7C] edx +
jmp loc_427782  +
mov [esp+18h] esi +
mov ebx [ebp+64h] +
mov esi [esp+38h] +
test ebx ebx +
jz loc_4277F7  +
lea esi [esi+0] +
mov edx [ebx+8] +
lea ecx [esi+edx*4] +
mov eax [ecx] +
test eax eax +
jz loc_427D9B  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4277E0  +
mov eax [esp+3Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+2Ch] +
mov [esp+4] eax +
call sub_413430  +
call sub_44B170  +
test eax eax +
mov [esp+54h] eax +
jz loc_42526E  +
mov eax [ebp+4] +
mov esi [ebp+7Ch] +
mov eax [eax+1B0h] +
mov edi esi +
mov [esp+5Ch] esi +
mov esi [ebp+0A0h] +
add edi 1 +
mov [esp+40h] edi +
mov [esp+3Ch] eax +
mov eax [eax+174h] +
mov dword ptr [esi+4Ch] 2 +
mov [esp+68h] esi +
movzx edx byte ptr [eax+5] +
mov [esi+70h] edx +
imul edx edi +
mov [esi+60h] edx +
mov edx [esp+20h] +
add edx 1 +
mov [esi+68h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [esi+0BCh] 3 +
shl eax cl +
mov [esi+6Ch] eax +
mov eax edi +
shl eax 5 +
lea esi ds:0[edi*4] +
sub eax esi +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov [esp+64h] eax +
jz loc_4280E1  +
mov eax [esp+3Ch] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] eax +
call sub_406310  +
test eax eax +
mov [esp+60h] eax +
jz loc_427F7B  +
mov eax [esp+68h] +
mov edi [esp+60h] +
mov [eax+78h] edi +
mov eax [ebp+0A0h] +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_4278F8  +
mov edi [ebx] +
test edi edi +
jnz loc_427FA5  +
mov eax [esp+64h] +
mov dword ptr [esp+4Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
mov eax [esp+3Ch] +
mov dword ptr [esp+50h] 0 +
mov eax [eax+44h] +
test eax eax +
jz loc_427965  +
mov [esp] ebp +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+50h] eax +
mov ecx [esp+5Ch] +
mov eax [ebp+78h] +
test ecx ecx +
jle loc_427EB5  +
mov edi eax +
mov eax [esp+64h] +
mov dword ptr [esp+28h] 1 +
mov [esp+0C0h] ebp +
lea esi [eax+1Ch] +
mov eax [esp+48h] +
and eax 42h +
mov [esp+58h] eax +
***
mov eax [edi] +
mov edx [esp-0BCh+arg_108] +
mov ecx [eax+8] +
test edx edx +
mov ebp [eax+0Ch] +
mov [esp-0BCh+arg_D0] ecx +
jnz loc_4279BF  +
mov edx ebp +
and edx 102h +
cmp edx 100h +
jz loc_427CBC  +
mov eax [eax+4] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
mov [esp-0BCh+arg_E8] eax +
jz loc_427F7B  +
mov eax [edi] +
mov edx [eax] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_427BC4  +
xor ebx ebx +
mov ecx ebp +
mov eax [eax+10h] +
and ecx 100h +
mov [esp-0BCh+arg_F0] ecx +
jnz loc_427BE0  +
test byte ptr [eax+15h] 10h +
jz loc_427BE0  +
test ebx ebx +
jz loc_427A28  +
mov ecx [ebx+18h] +
test ecx ecx +
mov [esp-0BCh+arg_D8] ecx +
jnz loc_427A3B  +
cmp [esp-0BCh+arg_D0] 0Fh +
mov [esp-0BCh+arg_D8] 10h +
jbe loc_427E78  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_424FB0  +
mov ecx eax +
mov eax [edi] +
mov eax [eax+10h] +
test ebp 40000h +
mov edx 6 +
jnz loc_427A95  +
test ebp 400000h +
mov dl 0Ah +
jnz loc_427A95  +
test ebp 8 +
mov dl 2 +
jnz loc_427A95  +
test ebp 10000h +
mov dl 1 +
jnz loc_427A95  +
test ebp 80000h +
mov dl 8 +
jnz loc_427A95  +
mov edx ebp +
shl edx 0Bh +
sar edx 1Fh +
and edx 9 +
test byte ptr [eax+15h] 4 +
mov eax 6 +
cmovnz edx eax +
test ebx ebx +
jz loc_427AC6  +
mov eax [esp-0BCh+arg_F4] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_427AC6  +
mov [esp-0BCh+arg_BC] edx +
lea edx [ebx+18h] +
mov [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_B8] edx +
call eax  +
mov ecx [esp-0BCh+arg_100] +
mov edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_427C52  +
and ebp 2 +
cmp ebp 1 +
sbb eax eax +
and eax 0FFFFFFF0h +
add eax 13h +
test ebx ebx +
jz loc_427D73  +
movzx edx byte ptr [ebx+25h] +
movzx ebx byte ptr [ebx+26h] +
mov ebp [esp-0BCh+arg_D8] +
mov [esi+0Ch] al +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_E0] 1 +
cmp [esp-0BCh+arg_104] 1 +
mov [esi] ebp +
mov ebp [esp-0BCh+arg_D0] +
mov [esi+14h] eax +
mov eax [esp-0BCh+arg_E4] +
mov [esi+0Dh] dl +
sbb [esp-0BCh+arg_E4] 0FFFFFFFFh +
add edi 4 +
add esi 1Ch +
mov [esi-18h] ebp +
mov ebp [esp-0BCh+arg_E8] +
mov [esi-4] eax +
mov eax [esp-0BCh+arg_E0] +
mov [esi-0Eh] bl +
mov [esi-0Ch] ecx +
mov [esi-14h] ebp +
cmp eax [esp-0BCh+arg_F8] +
jnz loc_427997  +
mov eax [esp-0BCh+arg_10C] +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B660  +
mov ebx [esp-0BCh+arg_11C] +
xor esi esi +
mov edi [esp-0BCh+arg_104] +
jmp loc_427BA7  +
mov dword ptr [ebx+8] 0 +
mov eax [esp-0BCh+arg_F4] +
add esi 1 +
mov ecx [ebx+18h] +
mov eax [eax+174h] +
lea ecx [edi+ecx*4] +
mov edx [eax+24h] +
mov [esp-0BCh+arg_C4] ecx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
add eax [esp-0BCh+arg_118] +
mov [esp-0BCh+arg_BC] ebx +
add ebx 1Ch +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_C0] eax +
call edx  +
cmp [esp-0BCh+arg_114] esi +
jl loc_427ECC  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_427B60  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B4F0  +
mov [ebx+8] eax +
jmp loc_427B67  +
mov ebx [edx+0A0h] +
test ebx ebx +
jz loc_4279F8  +
mov ebx eax +
jmp loc_4279FA  +
***
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov edx [esp-0BCh+arg_178] +
mov edx [edx+0A0h] +
mov edx [edx+208h] +
test edx edx +
jz loc_427A55  +
mov ecx [edx+38h] +
jmp loc_427A55  +
***
xor ebx ebx +
xor edx edx +
jmp loc_427AF0  +
***
mov edx [edi+98h] +
mov eax ebp +
call loc_41F8D0  +
test eax eax +
jnz loc_427E57  +
add [esp+0ACh+var_8C] 1 +
jmp loc_42771F  +
***
mov edi [ebx+98h] +
mov eax ebp +
mov [ecx] edi +
mov edx edi +
call loc_41F8D0  +
test eax eax +
jnz loc_427E5F  +
mov edx [esp+30h] +
mov eax edx +
add eax 1 +
mov [esp+30h] eax +
mov ecx [esp+2Ch] +
mov [ecx+edx*4] edi +
mov [edi+14h] eax +
jmp loc_4277F0  +
***
mov [esp-0BCh+arg_D0] 0 +
jmp loc_427C20  +
mov ecx [esp-0BCh+arg_D0] +
mov edx eax +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_427BF6  +
mov eax [edx] +
mov [esp-0BCh+arg_100] edx +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_402CB0  +
mov edx [esp-0BCh+arg_100] +
test eax eax +
jz loc_427F49  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
mov ecx eax +
jnz loc_427C48  +
mov [esp-0BCh+arg_BC] 1D04h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
mov [esp-0BCh+arg_100] eax +
call sub_404040  +
mov eax [edi] +
mov ecx [esp-0BCh+arg_100] +
mov eax [eax+10h] +
jmp loc_427A55  +
***
add esi 1 +
jmp loc_42771F  +
***
mov ecx [esp+18h] +
mov edx [esp+20h] +
add edx ecx +
add ecx 1 +
lea eax [edx+1] +
mov [esp+18h] ecx +
jmp loc_427DC1  +
***
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_B8] eax +
call near ptr dword_408A10  +
mov edx 1 +
mov ecx eax +
mov eax [edi] +
shl edx cl +
mov [esp-0BCh+arg_D8] edx +
mov eax [eax+10h] +
jmp loc_427A3B  +
and ebp 80h +
cmp ebp 1 +
sbb eax eax +
and edx 0Fh +
and eax 0FFFFFFF0h +
lea eax [eax+edx+20h] +
jmp loc_427AE0  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_44B660  +
cmp dword ptr [esp+5Ch] 0 +
jz loc_427B54  +
***
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B4E0  +
mov esi [esp-0BCh+arg_120] +
mov dword ptr [esp+74h] 0 +
mov [esp-0BCh+arg_118] 1 +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov [esi+0D0h] eax +
mov dword ptr [esi+0C4h] 0 +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
jmp loc_426EA9  +
mov eax [edi] +
mov ecx [edx] +
mov edx [eax+4] +
mov eax offset aLocalSym +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_B8] offset aUnableToFindEq +
test edx edx +
cmovnz eax edx +
mov [esp-0BCh+arg_BC] eax +
call off_4733A4  +
mov [esp-0BCh+arg_B8] 5 +
call sub_4040F0  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44B1F0  +
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
jmp loc_42526E  +
***
mov [esp+0ACh+var_94] 0 +
jmp loc_4277D1  +
***
mov eax [esp+40h] +
mov dword ptr [esp+8] 4 +
mov [esp] ebp +
mov [esp+4] eax +
call sub_406460  +
test eax eax +
mov [esp+4Ch] eax +
jz loc_427F7B  +
mov [ebx+30h] eax +
mov eax [esp+64h] +
mov dword ptr [ebx+4] 12h +
mov [ebx+18h] esi +
mov dword ptr [ebx+24h] 4 +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [esp+2Ch] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
jmp loc_427941  +
***
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningNonLoa +
mov [esp-0BCh+arg_BC] ebp +
call off_4733A4  +
jmp loc_42526E  +
mov ecx [eax+30h] +
mov edx [eax+44h] +
shl ecx 5 +
lea ebx [edx+ecx] +
cmp edx ebx +
jnb loc_42807E  +
mov esi 0FFFFFFFFh +
jmp loc_428067  +
***
add edx 20h +
cmp ebx edx +
jbe loc_428076  +
cmp dword ptr [edx] 1 +
jnz loc_428060  +
mov ecx [edx+0Ch] +
cmp esi ecx +
cmova esi ecx +
jmp loc_428060  +
test esi esi +
jz loc_427013  +
mov eax [esp-0BCh+arg_114] +
mov word ptr [eax+24h] 2 +
mov eax [ebp+0A0h] +
jmp loc_427013  +
***
mov [esp+0ACh+var_A8] 0D8Dh +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
call sub_404040  +
jmp loc_425605  +
***
mov eax [eax+28h] +
test eax eax +
jz loc_4275F1  +
mov edx [esp-0BCh+arg_E8] +
sub edx [eax+1Ch] +
mov [ecx+14h] eax +
mov [ecx+18h] edx +
jmp loc_4275FF  +
cmp [esp-0BCh+arg_17C] 0 +
mov eax [ebp+0A0h] +
setnz byte ptr [esp-0BCh+arg_D0]  +
jmp loc_426FB6  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_44B1F0  +
jmp loc_42526E  +
***
xor eax eax +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_42690A  +
nop   +
jmp loc_426907  +
mov ecx 0FFFFFFF1h +
jmp loc_427A55  +
mov dword ptr [esp+8] offset aAssign_file_po +
mov dword ptr [esp+4] 155Eh +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_404070  +
mov ecx edi +
mov [esp+18h] cl +
jmp loc_426FB6  +
***
mov eax esi +
mov esi ebx +
mov ebx eax +
jmp loc_427700  +
***
jmp loc_428150  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov eax [eax+1B0h] +
mov [esp+20h] eax +
jnz loc_428182  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_425080  +
test eax eax +
jz loc_4281C0  +
mov eax [ebp+0A0h] +
lea edx [esp+3Ch] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+40h] +
mov [esp+2Ch] eax +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov [esp] ebp +
mov [esp+4] eax +
call sub_4032D0  +
mov ecx [esp+3Ch] +
test ecx ecx +
jz loc_4281D0  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ecx [edx+20h] +
mov ebx [edx+24h] +
mov [esp+18h] ecx +
mov ecx [eax+40h] +
mov eax [eax+214h] +
mov [esp+1Ch] ebx +
lea edi [ecx+4] +
lea eax [ecx+eax*4] +
cmp eax edi +
jbe loc_428361  +
mov [esp+60h] ebp +
mov ebp eax +
jmp loc_42821B  +
add edi 4 +
cmp ebp edi +
jbe loc_428351  +
mov ebx [edi] +
mov eax [ebx+10h] +
and eax [ebx+14h] +
cmp eax 0FFFFFFFFh +
jnz loc_428210  +
mov eax [ebx+4] +
mov esi [ebx+2Ch] +
cmp eax 4 +
jz loc_42831E  +
cmp eax 9 +
jz loc_42831E  +
test esi esi +
jz loc_428210  +
test byte ptr [esi+17h] 8 +
jz loc_428210  +
mov eax [esi] +
mov [esp+24h] eax +
mov eax [ebx+30h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_40A000  +
test eax eax +
jz loc_4281C0  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jz loc_428590  +
cmp dword ptr [ebx] 0FFFFFFFFh +
jnz loc_4285B8  +
mov eax [esp+60h] +
mov ecx [esp+24h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44B220  +
mov [ebx] eax +
mov eax [esi+8Ch] +
mov edx [eax+3Ch] +
mov [esp+28h] eax +
test edx edx +
jz loc_4282E1  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 0 +
call sub_420070  +
test eax eax +
jz loc_4281C0  +
mov eax [esp+28h] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_428308  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 1 +
call sub_420070  +
test eax eax +
jz loc_4281C0  +
mov eax [esi+24h] +
mov [ebx+18h] eax +
mov eax [esi+6Ch] +
mov [ebx+30h] eax +
mov eax [ebx+2Ch] +
mov dword ptr [eax+6Ch] 0 +
mov eax [esp+18h] +
add edi 4 +
mov edx [esp+1Ch] +
mov dword ptr [esp+0Ch] 1 +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_424320  +
cmp ebp edi +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
ja loc_42821B  +
mov ebp [esp+60h] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov eax [edx+4] +
mov esi 1 +
mov [esp] eax +
call sub_44B660  +
mov ebx [ebp+0A0h] +
mov eax [ebx+934h] +
sub ebx 0FFFFFF80h +
mov eax [eax+4] +
mov [esp] eax +
call sub_44B4E0  +
mov edx [esp+1Ch] +
mov [ebx+18h] eax +
mov eax [esp+18h] +
mov [esp] ebx +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_424320  +
mov ecx [ebp+4] +
mov edi [ebp+0A0h] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
shl esi cl +
mov ebx esi +
sar ebx 1Fh +
add eax esi +
adc edx ebx +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
neg esi  +
mov ebx esi +
and esi eax +
sar ebx 1Fh +
mov eax edx +
and eax ebx +
xor edx edx +
mov [edi+18h] esi +
mov ebx [ebp+0A0h] +
mov [esp+18h] esi +
mov [esp+1Ch] eax +
mov eax [edi+34h] +
imul eax [edi+38h] +
mov esi [ebx+214h] +
mov ecx [ebx+934h] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
cmp esi 1 +
mov [ecx+20h] eax +
mov [ecx+24h] edx +
jbe loc_4284D4  +
mov edi 1 +
mov ebx [esp+2Ch] +
mov [esp+18h] esi +
jmp loc_42843D  +
mov eax [ebp+0A0h] +
mov ecx [eax+934h] +
mov esi [ebx+edi*4] +
mov eax [ecx+4] +
mov ecx [esi] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_44B4F0  +
mov [esi] eax +
mov eax [esp+20h] +
mov eax [eax+48h] +
test eax eax +
jz loc_42846A  +
mov ecx [ebx+edi*4] +
mov [esp] ebp +
mov [esp+4] ecx +
call eax  +
mov eax [ebx+edi*4] +
mov edx [eax+30h] +
test edx edx +
jz loc_4284BB  +
mov esi [eax+18h] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_403BF0  +
test eax eax +
jnz loc_4281C0  +
mov eax [ebx+edi*4] +
mov eax [eax+30h] +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp] eax +
call sub_403A90  +
cmp eax esi +
jnz loc_4281C0  +
add edi 1 +
cmp edi [esp+18h] +
jnz loc_428431  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+934h] +
mov eax [ecx+4] +
test eax eax +
jz loc_42852A  +
mov eax [ebx+90h] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_403BF0  +
test eax eax +
jnz loc_4281C0  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp] ebp +
mov [esp+4] eax +
call sub_44B590  +
test eax eax +
jz loc_4281C0  +
mov eax [esp+20h] +
mov eax [eax+0A4h] +
test eax eax +
jz loc_428550  +
mov edx [ebp+0A0h] +
mov edx [edx+934h] +
mov edx [edx+38h] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+14h] +
mov [esp] ebp +
call eax  +
test eax eax +
jz loc_4281C0  +
mov eax [ebx+934h] +
mov edx [eax+10h] +
mov eax 1 +
test edx edx +
jz loc_4281C2  +
mov [esp] ebp +
call edx  +
jmp loc_4281C2  +
***
mov eax [esp+60h] +
test byte ptr [eax+2Ah] 40h +
jnz loc_42827E  +
mov edx [esp+24h] +
call sub_41F6D0  +
test eax eax +
mov [esp+24h] eax +
jnz loc_42827E  +
jmp loc_4281C0  +
***
mov dword ptr [esp+8] offset a_bfd_elf_assig +
mov dword ptr [esp+4] 16A7h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_404070  +
lea esi [esi+0] +
lea edi [edi+0] +
jmp loc_428150  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov edx [eax] +
mov eax [edx+14h] +
mov ecx [edx+0Ch] +
test eax eax +
jnz loc_428687  +
and ch 1 +
jz loc_428632  +
mov eax [edx+10h] +
test eax eax +
jz loc_428632  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_428663  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_428632  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_428663  +
mov eax [edx+4] +
mov [esp+1Ch+var_1C] offset aBSymbolSRequir +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call off_4733A4  +
mov [esp+1Ch+var_1C] 7 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
mov ecx [ecx+0A0h] +
mov eax [eax+8] +
mov ecx [ecx+934h] +
cmp eax [ecx+28h] +
jge loc_428632  +
mov ecx [ecx+8] +
mov eax [ecx+eax*4] +
test eax eax +
jz loc_428632  +
mov eax [eax+14h] +
mov [edx+14h] eax +
test eax eax +
jz loc_428632  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_10] +
mov ebx [esp+14h+arg_0] +
test eax eax +
jz loc_428750  +
movzx eax byte ptr [eax] +
xor edx edx +
and eax 3 +
cmp al 2 +
setnz dl  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4286C6  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+14h+arg_8] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_4286BB  +
mov eax [esp+14h+arg_C] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_428815  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_428757  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
test edx edx +
mov [eax+8] ecx +
jz loc_42878A  +
mov edx [esi+8] +
and edx 80h +
jz loc_428725  +
mov edx [esi+64h] +
or dword ptr [eax+8] 80h +
mov [eax+64h] edx +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_C] +
movzx edx byte ptr [eax+19h] +
mov eax [esp+14h+arg_C] +
and edx 4 +
movzx eax byte ptr [eax+19h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+19h] al +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
jmp loc_4286B2  +
mov ecx [esp+14h+arg_C] +
mov esi [esp+14h+arg_4] +
mov ecx [ecx+14h] +
mov esi [esi+14h] +
cmp ecx esi +
jz loc_428800  +
test edx edx +
jnz loc_4287D5  +
mov esi [esp+14h+arg_4] +
mov esi [esi+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
mov [eax+8] ecx +
mov edx [esi+78h] +
test edx edx +
jz loc_428797  +
test byte ptr [edx+16h] 10h +
jnz loc_4287D0  +
mov edx [esi+8] +
test dh 2 +
jz loc_4287A8  +
or ch 2 +
mov [eax+8] ecx +
mov edx [esi+8] +
mov ecx [esi+7Ch] +
mov [eax+7Ch] ecx +
mov ecx [esi+74h] +
mov [eax+74h] ecx +
test byte ptr [ebx+2Ah] 10h +
jnz loc_428710  +
and edx 800h +
or [eax+8] edx +
jmp loc_42870D  +
mov edx [esi+8] +
jmp loc_4287B4  +
xor ecx esi +
and ecx 0FFF1FFFBh +
jz loc_428800  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov edx [esi+8] +
and edx 0FFF00000h +
or [eax+8] edx +
mov edx [esi+8] +
jmp loc_428710  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+4] +
mov [eax+4] ecx +
jmp loc_4286F6  +
mov [esp+14h+var_10] 1B41h +
mov [esp+14h+var_14] offset a____Binutil_10 +
mov [esp+14h+var_8] edx +
call sub_404040  +
mov eax [esp+14h+arg_C] +
mov edx [esp+14h+var_8] +
mov eax [eax+8Ch] +
jmp loc_4286E5  +
***
push ebx  +
mov eax 1 +
sub esp 28h +
mov edx [esp+30h] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_428860  +
add esp 28h +
pop ebx  +
retn   +
***
mov ebx [esp+38h] +
mov ecx [ebx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_428856  +
mov eax [esp+34h] +
mov ebx [esp+3Ch] +
mov eax [eax+8Ch] +
mov ebx [ebx+8Ch] +
mov ecx [eax+28h] +
mov [ebx+28h] ecx +
mov ecx [eax+4] +
cmp ecx 2 +
jz loc_428894  +
cmp ecx 0Bh +
jnz loc_4288C7  +
mov eax [eax+20h] +
mov [ebx+20h] eax +
mov eax [esp+3Ch] +
mov dword ptr [esp+10h] 0 +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
call sub_428690  +
add esp 28h +
pop ebx  +
retn   +
***
sub ecx 6FFFFFFDh +
cmp ecx 1 +
ja loc_42889A  +
jmp loc_428894  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ebx [esp+arg_4] +
mov edx [eax+64h] +
test edx edx +
jnz loc_4288FB  +
jmp loc_428968  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_428968  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 11h +
jnz loc_4288F4  +
mov esi [eax+7Ch] +
test esi esi +
jz loc_4288F4  +
mov eax esi +
xor edi edi +
jmp loc_42892A  +
cmp [edx+3Ch] ebx +
jz loc_428971  +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax esi +
jz loc_428947  +
test eax eax +
jz loc_428947  +
mov ecx [eax+3Ch] +
cmp ecx ebx +
jnz loc_428914  +
mov eax [eax+8Ch] +
lea ecx [edi+4] +
cmp [edx+3Ch] ebx +
mov eax [eax+7Ch] +
cmovnz edi ecx +
cmp eax esi +
jnz loc_428926  +
test edi edi +
jz loc_4288F4  +
test ebx ebx +
jz loc_428987  +
mov eax [edx+28h] +
test eax eax +
jnz loc_42895C  +
mov eax [edx+24h] +
mov [edx+28h] eax +
sub eax edi +
mov [edx+24h] eax +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_4288FB  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
mov ecx [ecx+8Ch] +
and dword ptr [ecx+8] 0FFFFFDFFh +
mov dword ptr [ecx+74h] 0 +
jmp loc_428919  +
mov eax [edx+3Ch] +
sub [eax+24h] edi +
jmp loc_4288F4  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax 1 +
cmp dword ptr [edx+4] 5 +
jz loc_4289D0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+0B4h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
mov ecx edi +
jnz loc_4289BF  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jz loc_428A16  +
mov eax [esp+0B0h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_4288E0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0B0h] +
mov eax [eax+0A0h] +
mov ebp [eax+44h] +
mov [esp+48h] eax +
test ebp ebp +
jz loc_4289F4  +
cmp edx edi +
jz loc_4298C8  +
mov eax [edx+1B0h] +
mov dword ptr [esp+8Ch] 0 +
mov [esp+68h] eax +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+58h] eax +
mov eax [ecx+1B0h] +
mov eax [eax+10h] +
mov [esp+3Ch] eax +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+34h] eax +
jz loc_428A80  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_428A75  +
mov eax [esp+48h] +
mov ebp [eax+44h] +
mov eax [esp+58h] +
test eax eax +
jz loc_429CC2  +
mov eax [ebp+10h] +
test eax eax +
jnz loc_42981A  +
mov edx ebp +
xor eax eax +
mov ecx [esp+58h] +
jmp loc_428AB3  +
mov edi [edx+10h] +
test edi edi +
jnz loc_42981A  +
add eax 1 +
add edx 20h +
cmp eax ecx +
jnz loc_428AA8  +
mov dword ptr [esp+64h] 0 +
xor esi esi +
mov edi ebp +
mov [esp+30h] ebp +
mov ebp esi +
jmp loc_428AF3  +
cmp eax 1 +
jz loc_428B54  +
cmp eax 6474E552h +
jnz loc_428AE3  +
mov dword ptr [edi] 0 +
add ebp 1 +
add edi 20h +
cmp [esp+58h] ebp +
jbe loc_428C09  +
mov eax [edi] +
cmp eax 3 +
jnz loc_428AD1  +
mov eax [esp+34h] +
test eax eax +
jz loc_428AE3  +
mov edx [edi+0Ch] +
jmp loc_428B0E  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_428AE3  +
test edx edx +
jnz loc_428B07  +
mov esi [edi+10h] +
test esi esi +
jnz loc_428B07  +
mov ebx [edi+18h] +
test ebx ebx +
jnz loc_428B07  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_428B07  +
test byte ptr [eax+15h] 1 +
jz loc_428B07  +
mov esi [eax+24h] +
test esi esi +
mov [esp+10h] esi +
jz loc_428B07  +
mov esi [eax+50h] +
mov ebx [edi+8] +
cmp esi ebx +
jb loc_428B07  +
add esi [esp+10h] +
add ecx ebx +
cmp esi ecx +
ja loc_428B07  +
mov eax [eax+1Ch] +
mov [edi+0Ch] eax +
jmp loc_428AE3  +
***
test ebp ebp +
jz loc_428AE3  +
mov ebx [esp+30h] +
xor edx edx +
jmp loc_428B6E  +
add edx 1 +
add ebx 20h +
cmp edx ebp +
jz loc_428AE3  +
cmp dword ptr [ebx] 1 +
jnz loc_428B60  +
mov eax [edi+0Ch] +
mov esi [ebx+18h] +
mov ecx [ebx+14h] +
mov [esp+10h] eax +
mov eax [ebx+0Ch] +
cmp esi ecx +
cmovnb ecx esi +
mov [esp+14h] ecx +
add ecx eax +
cmp [esp+10h] ecx +
mov [esp+18h] ecx +
jnb loc_428B60  +
mov ecx [edi+18h] +
cmp ecx [edi+14h] +
mov [esp+28h] ecx +
cmovb ecx [edi+14h] +
mov [esp+1Ch] ecx +
add ecx [esp+10h] +
cmp eax ecx +
mov [esp+20h] ecx +
jnb loc_428B60  +
mov ecx [edi+10h] +
mov [esp+24h] ecx +
mov ecx [ebx+10h] +
mov [esp+2Ch] ecx +
add ecx [esp+14h] +
cmp [esp+24h] ecx +
jnb loc_428B60  +
mov ecx [esp+1Ch] +
add ecx [esp+24h] +
cmp [esp+2Ch] ecx +
jnb loc_428B60  +
cmp [esp+10h] eax +
ja loc_429CE0  +
mov eax [esp+18h] +
sub eax [esp+20h] +
test eax eax +
jle loc_428BFE  +
mov ecx [esp+28h] +
add [edi+14h] eax +
add ecx eax +
mov [edi+18h] ecx +
mov dword ptr [ebx] 0 +
jmp loc_428B60  +
***
lea eax [esp+8Ch] +
mov ebp [esp+30h] +
mov [esp+4Ch] eax +
movzx eax byte ptr [esp+64h] +
mov dword ptr [esp+74h] 0 +
mov dword ptr [esp+6Ch] 0 +
mov dword ptr [esp+50h] 0 +
add eax eax +
mov dword ptr [esp+60h] 0 +
mov [esp+5Ch] al +
mov eax [ebp+0] +
test eax eax +
mov [esp+10h] eax +
jz loc_428EA0  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
jz loc_429789  +
mov edx [ebp+10h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_428D17  +
mov ebx [eax+20h] +
cmp ebx edx +
jb loc_428D60  +
mov ecx [eax+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_428F13  +
mov esi [eax+24h] +
add ebx esi +
mov esi [ebp+14h] +
cmp [ebp+18h] esi +
cmovnb esi [ebp+18h] +
add esi edx +
cmp ebx esi +
ja loc_428D60  +
test cl 1 +
jz loc_428D60  +
mov esi [esp+10h] +
cmp esi 6474E551h +
jz loc_428D10  +
cmp esi 7 +
jz loc_428F39  +
cmp dword ptr [esp+10h] 1 +
jz loc_428CE5  +
test ch 4 +
jnz loc_428D10  +
cmp dword ptr [esp+10h] 2 +
jz loc_428F47  +
test byte ptr [eax+18h] 40h +
jnz loc_428D10  +
mov edi [esp+18h] +
test edi edi +
cmovz edi eax +
cmp dword ptr [eax+3Ch] 1 +
sbb dword ptr [esp+1Ch] 0FFFFFFFFh +
mov [esp+18h] edi +
lea esi [esi+0] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_428D8F  +
test edx edx +
jnz loc_428C80  +
mov esi [eax+1Ch] +
mov ebx [ebp+0Ch] +
cmp esi ebx +
jb loc_428D60  +
mov ecx [eax+14h] +
mov edi ecx +
and edi 500h +
cmp edi 400h +
jz loc_428F26  +
mov edi [eax+24h] +
add esi edi +
mov edi [ebp+14h] +
cmp [ebp+18h] edi +
cmovnb edi [ebp+18h] +
add edi ebx +
cmp esi edi +
jbe loc_428CBB  +
lea esi [esi+0] +
cmp dword ptr [esp+10h] 4 +
jnz loc_428D10  +
mov ecx [eax+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_428D10  +
mov ebx [eax+50h] +
mov ecx [ebp+8] +
cmp ebx ecx +
jb loc_428D10  +
add ebx [eax+24h] +
add ecx [ebp+14h] +
cmp ebx ecx +
ja loc_428D10  +
mov ecx [eax+14h] +
jmp loc_428CE0  +
***
mov eax [esp+1Ch] +
lea eax ds:28h[eax*4] +
mov [esp+54h] eax +
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_406370  +
test eax eax +
mov [esp+10h] eax +
jz loc_4297B2  +
mov edi [esp+10h] +
mov eax [ebp+4] +
mov edx [ebp+0] +
or byte ptr [edi+20h] 1 +
mov [edi+8] eax +
mov eax [esp+18h] +
mov dword ptr [edi] 0 +
mov [edi+4] edx +
test eax eax +
jz loc_428DEA  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_428E02  +
mov eax [ebp+10h] +
mov esi [esp+10h] +
mov [esi+0Ch] eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFFDh +
or al [esp+5Ch] +
mov [esi+20h] al +
mov ecx [ebp+8] +
xor eax eax +
test ecx ecx +
jnz loc_428E18  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [ebp+14h] eax +
setnb al  +
mov edi [esp+10h] +
shl eax 4 +
mov ebx eax +
movzx eax byte ptr [edi+20h] +
and eax 0FFFFFFCFh +
or eax ebx +
mov [edi+20h] al +
mov eax [esp+60h] +
test eax eax +
jz loc_428E3E  +
cmp edx 1 +
jz loc_4293A1  +
mov eax [esp+48h] +
mov ebx [eax+14h] +
xor eax eax +
cmp ecx ebx +
ja loc_428E60  +
mov esi [esp+48h] +
add ecx [ebp+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax ebx +
cmp ecx eax +
setnb al  +
mov esi [esp+10h] +
shl eax 5 +
mov ecx eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFDFh +
or eax ecx +
cmp edx 1 +
mov [esi+20h] al +
jz loc_429396  +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_428F8A  +
mov eax [esp+10h] +
mov ebx [esp+4Ch] +
mov dword ptr [eax+24h] 0 +
mov [esp+4Ch] eax +
mov [ebx] eax +
nop   +
add dword ptr [esp+50h] 1 +
add ebp 20h +
mov eax [esp+58h] +
cmp [esp+50h] eax +
jnz loc_428C43  +
mov edi [esp+0B4h] +
mov eax [esp+8Ch] +
mov edx [edi+0A0h] +
mov edx [edx+934h] +
mov [edx] eax +
mov edx [esp+6Ch] +
test edx edx +
jz loc_4289F4  +
test eax eax +
jz loc_4289F4  +
xor edx edx +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_428EE8  +
mov eax [esp+74h] +
cmp eax edx +
jnb loc_4289F4  +
sub edx eax +
mov eax [esp+48h] +
imul edx [eax+2Ch] +
mov eax [esp+6Ch] +
sub [eax+0Ch] edx +
jmp loc_4289F4  +
***
xor si si +
cmp dword ptr [esp+10h] 7 +
jnz loc_428CA5  +
jmp loc_428CA2  +
***
xor di di +
cmp dword ptr [esp+10h] 7 +
jnz loc_428D43  +
jmp loc_428D40  +
***
and ch 4 +
jnz loc_428CF0  +
jmp loc_428D10  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_428F60  +
mov ecx [eax+24h] +
test ecx ecx +
jnz loc_428CF0  +
test edx edx +
jz loc_429778  +
cmp [eax+20h] edx +
jnz loc_428CF0  +
mov esi [eax] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_428D10  +
jmp loc_428CF0  +
***
mov eax [esp+1Ch] +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_408040  +
test eax eax +
mov [esp+14h] eax +
jz loc_4297B2  +
mov eax [esp+0B0h] +
mov edx [eax+64h] +
test edx edx +
jz loc_428FD6  +
cmp [esp+18h] edx +
mov eax [esp+18h] +
jnz loc_428FCF  +
jmp loc_4293C9  +
cmp eax edx +
jz loc_4293C9  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_428FC7  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+4] 192Dh +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_404040  +
mov eax [esp+24h] +
cmp [esp+1Ch] eax +
jz loc_4297B9  +
mov ebx [esp+30h] +
mov eax [esp+10h] +
mov edx [esp+28h] +
test ebx ebx +
cmovnz edx [esp+34h] +
mov [eax+0Ch] edx +
movzx eax byte ptr [eax+20h] +
test al 10h +
jz loc_42904E  +
mov edi [esp+48h] +
mov ecx [edi+28h] +
cmp edx ecx +
jb loc_429895  +
mov edi [esp+10h] +
sub edx ecx +
mov [edi+0Ch] edx +
test al 20h +
jz loc_42907F  +
mov eax [esp+10h] +
mov edi [esp+48h] +
mov ecx [eax+0Ch] +
mov edx [edi+2Ch] +
mov eax [edi+30h] +
imul edx eax +
cmp ecx edx +
jb loc_4298A4  +
mov edi [esp+10h] +
sub ecx edx +
mov [esp+74h] eax +
mov [edi+0Ch] ecx +
mov [esp+6Ch] edi +
mov dword ptr [esp+38h] 0 +
mov eax [esp+10h] +
xor ecx ecx +
mov dword ptr [esp+24h] 0 +
mov ebx ecx +
mov dword ptr [esp+18h] 1 +
mov dword ptr [eax+24h] 0 +
mov eax [esp+3Ch] +
lea esi [eax-1] +
neg eax  +
mov [esp+40h] esi +
mov [esp+34h] eax +
jmp loc_429184  +
mov ecx [esi+14h] +
and ecx 500h +
cmp ecx 400h +
jz loc_429280  +
mov ecx [esi+24h] +
add ecx eax +
mov [esp+20h] ecx +
mov ecx [ebp+14h] +
cmp [ebp+18h] ecx +
cmovnb ecx [ebp+18h] +
add ecx edx +
cmp [esp+20h] ecx +
ja loc_4291AC  +
mov ecx [esp+10h] +
mov ecx [ecx+24h] +
test ecx ecx +
mov [esp+20h] ecx +
mov ecx [esp+10h] +
jnz loc_429295  +
movzx ecx byte ptr [ecx+20h] +
mov dword ptr [esp+28h] 0 +
mov [esp+2Ch] cl +
and ecx 10h +
jz loc_42912B  +
mov ecx [esp+48h] +
mov ecx [ecx+28h] +
mov [esp+28h] ecx +
add edx [esp+28h] +
mov [esp+28h] edx +
xor edx edx +
test byte ptr [esp+2Ch] 20h +
jz loc_429147  +
mov ecx [esp+48h] +
mov edx [ecx+2Ch] +
imul edx [ecx+30h] +
add edx [esp+28h] +
cmp eax edx +
jnz loc_429CA6  +
mov ecx [esp+20h] +
mov edx [esp+10h] +
add dword ptr [esp+38h] 1 +
mov eax ecx +
add eax 1 +
mov [edx+24h] eax +
mov eax [esp+14h] +
mov [edx+ecx*4+28h] esi +
mov dword ptr [eax+ebx*4] 0 +
or byte ptr [edi+18h] 40h +
add ebx 1 +
cmp [esp+1Ch] ebx +
jbe loc_4291CF  +
mov eax [esp+14h] +
mov edi [eax+ebx*4] +
test edi edi +
jz loc_42917B  +
mov esi [edi+3Ch] +
test esi esi +
jz loc_429300  +
mov edx [esp+10h] +
mov eax [esi+20h] +
mov edx [edx+0Ch] +
cmp eax edx +
jnb loc_4290C0  +
cmp dword ptr [ebp+0] 4 +
jz loc_429210  +
mov esi [esp+18h] +
test esi esi +
jz loc_42917B  +
add ebx 1 +
cmp [esp+1Ch] ebx +
mov [esp+24h] eax +
mov dword ptr [esp+18h] 0 +
ja loc_429184  +
mov eax [esp+10h] +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_429320  +
mov eax [esp+10h] +
mov edi [esp+4Ch] +
mov [esp+4Ch] eax +
mov [edi] eax +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
ja loc_429340  +
mov eax [esp+14h] +
mov [esp] eax +
call free  +
jmp loc_428EA0  +
***
mov ecx [edi+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_4291B2  +
mov ecx [edi+50h] +
mov [esp+20h] ecx +
mov ecx [ebp+8] +
cmp [esp+20h] ecx +
mov [esp+28h] ecx +
jb loc_4291B2  +
mov ecx [esp+20h] +
add ecx [edi+24h] +
mov [esp+20h] ecx +
mov ecx [esp+28h] +
add ecx [ebp+14h] +
cmp [esp+20h] ecx +
ja loc_4291B2  +
mov ecx [esp+0B0h] +
movzx ecx byte ptr [ecx+28h] +
and ecx 7 +
cmp cl 3 +
jnz loc_4291B2  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_4291B2  +
mov ecx [edi+20h] +
test ecx ecx +
jnz loc_4291B2  +
jmp loc_4290F4  +
***
xor cx cx +
cmp dword ptr [ebp+0] 7 +
jnz loc_4290D8  +
lea esi [esi+0] +
jmp loc_4290D5  +
***
mov edx [esp+20h] +
mov dword ptr [esp+2Ch] 0FFFFFFFFh +
mov edx [ecx+edx*4+24h] +
mov ecx [edx+24h] +
mov edx [edx+20h] +
mov [esp+28h] ecx +
add [esp+28h] edx +
mov edx [esp+40h] +
add edx [esp+28h] +
jb loc_4292C5  +
and edx [esp+34h] +
mov [esp+2Ch] edx +
mov edx [esp+3Ch] +
mov ecx [esp+34h] +
lea edx [edx+eax-1] +
and ecx edx +
mov [esp+30h] edx +
mov edx 0FFFFFFFFh +
cmp eax [esp+30h] +
cmovbe edx ecx +
cmp [esp+2Ch] edx +
jb loc_4291B2  +
cmp eax [esp+28h] +
jnb loc_429153  +
jmp loc_4291B2  +
***
mov dword ptr [esp+4] 1991h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_404040  +
jmp loc_42919A  +
***
mov dword ptr [esp+4] 19C8h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_404040  +
jmp loc_4291DE  +
***
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_406370  +
test eax eax +
mov [esp+10h] eax +
jz loc_4297A6  +
mov ebx [esp+10h] +
mov eax [ebp+0] +
mov edi [esp+24h] +
mov dword ptr [ebx] 0 +
mov [ebx+4] eax +
mov eax [ebp+4] +
mov [ebx+0Ch] edi +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+20h] +
or eax 1 +
and eax 0FFFFFFCDh +
or al [esp+5Ch] +
mov [ebx+20h] al +
jmp loc_429087  +
***
test al 20h +
cmovz edx [esp+60h] +
mov [esp+60h] edx +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_428F8A  +
mov eax [esp+0B0h] +
mov dword ptr [esp] offset aBWarningEmptyL +
mov [esp+4] eax +
call off_4733A4  +
jmp loc_428E89  +
***
mov eax [ebp+10h] +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+70h] 1 +
mov dword ptr [esp+28h] 0 +
mov [esp+18h] eax +
mov eax [ebp+0] +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+20h] eax +
mov eax [esp+18h] +
test eax eax +
jz loc_429650  +
mov eax [edx+20h] +
cmp [esp+18h] eax +
ja loc_429688  +
mov ecx [edx+14h] +
mov ebx ecx +
and ebx 500h +
cmp ebx 400h +
jz loc_4296CB  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx [esp+18h] +
cmp esi ebx +
ja loc_429688  +
test cl 1 +
jz loc_429688  +
mov esi [esp+20h] +
cmp esi 6474E551h +
jz loc_4295E0  +
cmp esi 7 +
jz loc_4296E9  +
cmp dword ptr [esp+20h] 1 +
jz loc_429491  +
test ch 4 +
jnz loc_4295E0  +
cmp dword ptr [esp+20h] 2 +
jz loc_429600  +
xor edi edi +
test byte ptr [edx+18h] 40h +
jnz loc_4295E0  +
mov ecx [edx+3Ch] +
test ecx ecx +
jz loc_4295E0  +
mov ebx [esp+2Ch] +
lea esi [ebx+1] +
mov [esp+38h] esi +
mov esi [esp+14h] +
mov [esi+ebx*4] edx +
mov ebx [esp+64h] +
test ebx ebx +
jnz loc_429536  +
mov ebx [ebp+0Ch] +
test ebx ebx +
mov [esp+2Ch] ebx +
jz loc_429536  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jnz loc_429536  +
mov esi [esp+24h] +
test esi esi +
jnz loc_429536  +
mov ebx [ecx+20h] +
test ebx ebx +
jz loc_429536  +
mov ebx [esp+10h] +
mov esi [ecx+1Ch] +
movzx ebx byte ptr [ebx+20h] +
mov [esp+78h] esi +
mov [esp+40h] bl +
xor ebx ebx +
test byte ptr [esp+40h] 10h +
jz loc_42950C  +
mov esi [esp+48h] +
mov ebx [esi+28h] +
add ebx [esp+2Ch] +
mov [esp+7Ch] ebx +
xor ebx ebx +
test byte ptr [esp+40h] 20h +
jz loc_429528  +
mov esi [esp+48h] +
mov ebx [esi+2Ch] +
imul ebx [esi+30h] +
add ebx [esp+7Ch] +
cmp [esp+78h] ebx +
jz loc_429D06  +
mov esi [ecx+20h] +
mov ebx esi +
mov [esp+2Ch] esi +
mov esi [esp+10h] +
mov esi [esi+0Ch] +
cmp ebx esi +
jb loc_4296FC  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_4298B1  +
mov ebx [ecx+24h] +
mov [esp+40h] ebx +
mov ebx [esp+40h] +
add ebx [esp+2Ch] +
cmp [ebp+18h] eax +
mov [esp+40h] ebx +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx esi +
cmp [esp+40h] ebx +
ja loc_4296FC  +
mov eax [esp+30h] +
test eax eax +
jnz loc_4295A4  +
mov edi [esp+2Ch] +
mov eax [esp+28h] +
cmp edi eax +
cmovbe eax edi +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov edi [esp+10h] +
mov dword ptr [esp+30h] 0 +
mov [edi+eax*4+28h] ecx +
mov edi [esp+2Ch] +
add eax 1 +
mov [esp+24h] eax +
mov [esp+28h] edi +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
jz loc_42900A  +
mov [esp+2Ch] eax +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_429407  +
mov eax [esp+2Ch] +
cmp [esp+1Ch] eax +
jz loc_42900A  +
jmp loc_428FF6  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_429619  +
mov edi [edx+24h] +
test edi edi +
jnz loc_429491  +
mov esi [esp+18h] +
xor edi edi +
test esi esi +
jz loc_429827  +
mov esi [esp+18h] +
cmp esi [edx+20h] +
jnz loc_429493  +
mov esi [edx] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_4295E0  +
jmp loc_429491  +
***
mov eax [edx+1Ch] +
mov ebx [ebp+0Ch] +
cmp eax ebx +
jb loc_429688  +
mov ecx [edx+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_4296DD  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov edi eax +
cmovnb edi [ebp+18h] +
add ebx edi +
cmp esi ebx +
jbe loc_429454  +
cmp dword ptr [esp+20h] 4 +
jnz loc_4295E0  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 7 +
jnz loc_4295E0  +
mov eax [edx+50h] +
mov ecx [ebp+8] +
cmp eax ecx +
jb loc_4295E0  +
add eax [edx+24h] +
mov ebx eax +
mov eax [ebp+14h] +
add ecx eax +
cmp ebx ecx +
ja loc_4295E0  +
mov ecx [edx+14h] +
jmp loc_42947D  +
***
xor esi esi +
cmp dword ptr [esp+20h] 7 +
jnz loc_42943A  +
jmp loc_429437  +
***
xor si si +
cmp dword ptr [esp+20h] 7 +
jnz loc_429670  +
jmp loc_42966D  +
***
and ch 4 +
jz loc_4295E0  +
mov edi 1 +
jmp loc_429493  +
***
cmp dword ptr [esp+20h] 4 +
jz loc_429838  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jz loc_429757  +
mov ebx [ebp+0Ch] +
mov esi [ecx+1Ch] +
mov [esp+78h] ebx +
cmp esi ebx +
jb loc_429757  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_429BF1  +
mov edi [ecx+24h] +
mov [esp+40h] edi +
mov ebx [esp+40h] +
add ebx esi +
cmp [ebp+18h] eax +
cmovnb eax [ebp+18h] +
add eax [esp+78h] +
cmp ebx eax +
jbe loc_42958B  +
mov edi [esp+70h] +
test edi edi +
jz loc_4295C7  +
mov eax [esp+2Ch] +
mov dword ptr [esp+70h] 0 +
mov [esp+34h] eax +
jmp loc_4295C7  +
***
mov edi [eax+1Ch] +
cmp [ebp+0Ch] edi +
jnz loc_428CF0  +
jmp loc_428F71  +
***
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+54h] 28h +
mov dword ptr [esp+1Ch] 0 +
jmp loc_428D9E  +
***
mov eax [esp+14h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_4289BF  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov esi [esp+64h] +
mov [eax+24h] edi +
mov edi [esp+4Ch] +
test esi esi +
mov [esp+4Ch] eax +
mov [edi] eax +
jz loc_4291FA  +
mov eax [esp+68h] +
test byte ptr [eax+1AEh] 10h +
jnz loc_4291FA  +
mov edi [esp+4Ch] +
mov eax [edi+0Ch] +
cmp eax [esp+28h] +
jz loc_4291FA  +
test byte ptr [edi+20h] 30h +
jnz loc_4291FA  +
mov edi [esp+28h] +
sub edi eax +
mov eax edi +
mov edi [esp+4Ch] +
mov [edi+10h] eax +
jmp loc_4291FA  +
***
mov dword ptr [esp+64h] 1 +
jmp loc_428AC5  +
***
mov esi [edx+1Ch] +
cmp [ebp+0Ch] esi +
jnz loc_429493  +
jmp loc_429634  +
***
mov ebx [edx+8Ch] +
cmp dword ptr [ebx+4] 7 +
jnz loc_429707  +
mov esi [edx+50h] +
mov ebx [ebp+8] +
cmp esi ebx +
jb loc_429707  +
add esi [edx+24h] +
add ebx eax +
cmp esi ebx +
ja loc_429707  +
mov ebx [esp+0B0h] +
movzx ebx byte ptr [ebx+28h] +
and ebx 7 +
cmp bl 3 +
jnz loc_429707  +
cmp dword ptr [edx+1Ch] 0 +
jnz loc_429707  +
cmp dword ptr [edx+20h] 0 +
jz loc_42958B  +
nop   +
jmp loc_429707  +
***
mov edi [esp+10h] +
and eax 0FFFFFFCFh +
mov [edi+20h] al +
jmp loc_42904E  +
***
mov eax [esp+10h] +
and byte ptr [eax+20h] 0DFh +
jmp loc_42907F  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_42956A  +
jmp loc_429563  +
***
mov eax [edi+1B0h] +
test byte ptr [eax+1AEh] 10h +
jz loc_42991F  +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+20h] eax +
cmp dword ptr [esp+20h] 0 +
jz loc_429D3C  +
xor esi esi +
xor ebx ebx +
jmp loc_429903  +
add esi 1 +
add ebp 20h +
cmp esi [esp+20h] +
jz loc_429C08  +
cmp dword ptr [ebp+0] 1 +
jnz loc_4298F3  +
mov eax [ebp+1Ch] +
cmp eax ebx +
jbe loc_4298F3  +
cmp eax 40000000h +
ja loc_429C38  +
mov ebx eax +
jmp loc_4298F3  +
***
mov eax [esp+0B4h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+30h] eax +
jz loc_42993C  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_429931  +
mov eax [esp+48h] +
mov dword ptr [esp+34h] 0 +
mov eax [eax+30h] +
test eax eax +
mov [esp+20h] eax +
jz loc_429BCD  +
mov [esp+18h] edi +
mov edi ebp +
mov [esp+14h] ebp +
mov eax [edi+10h] +
test eax eax +
jnz loc_42997C  +
cmp dword ptr [edi+18h] 0 +
jnz loc_42997C  +
mov eax [edi] +
sub eax 2 +
cmp eax 1 +
jbe loc_429D43  +
mov eax [esp+0B0h] +
mov esi [eax+64h] +
test esi esi +
jz loc_429BAF  +
mov eax [edi] +
mov [esp+10h] edi +
lea ebx [eax-6474E550h] +
mov [esp+24h] eax +
mov [esp+3Ch] ebx +
lea ebx [eax-1] +
sub eax 6 +
mov [esp+40h] ebx +
mov [esp+38h] eax +
jmp loc_429AD6  +
cmp dword ptr [esp+38h] 1 +
jbe loc_429ACB  +
and eax 2 +
mov [esp+28h] eax +
jnz loc_4299DF  +
cmp dword ptr [esp+3Ch] 2 +
jbe loc_429ACB  +
cmp dword ptr [esp+40h] 1 +
jbe loc_429ACB  +
mov eax [ebx+4] +
cmp eax 8 +
mov [esp+2Ch] eax +
jz loc_429A31  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
ja loc_429ACB  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [ebx+18h] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
add eax edi +
mov edi [esp+10h] +
adc edx ebp +
cmp edx 0 +
mov edi [edi+14h] +
jg loc_429ACB  +
jl loc_429A31  +
cmp eax edi +
ja loc_429ACB  +
mov ebp [esp+28h] +
test ebp ebp +
jz loc_429A6E  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_429ACB  +
mov edi [esp+1Ch] +
sub edx eax +
test edi edi +
jz loc_429A60  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_429C92  +
mov eax [ebx+18h] +
mov edi [esp+10h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_429ACB  +
mov eax [esp+10h] +
cmp dword ptr [eax] 2 +
jz loc_429B21  +
test ecx ecx +
jz loc_429D43  +
mov eax [ecx+14h] +
cmp [esi+14h] eax +
jnz loc_429D43  +
mov eax [ecx+20h] +
cmp [esi+20h] eax +
jnz loc_429D43  +
mov eax [ecx+1Ch] +
cmp [esi+1Ch] eax +
jnz loc_429D43  +
mov eax [ecx+24h] +
cmp [esi+24h] eax +
jnz loc_429D43  +
mov eax [ecx+28h] +
cmp [esi+28h] eax +
jnz loc_429D43  +
mov eax [ecx+40h] +
cmp [esi+40h] eax +
jnz loc_429D43  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_429BAB  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_429AE1  +
or byte ptr [ecx+18h] 40h +
mov ebx [esi+8Ch] +
mov eax [ebx+8] +
mov ebp eax +
and ebp 400h +
mov [esp+1Ch] ebp +
jz loc_4299B5  +
cmp dword ptr [esp+24h] 7 +
jz loc_4299C0  +
cmp dword ptr [esp+24h] 6474E552h +
jz loc_4299C0  +
cmp dword ptr [esp+24h] 1 +
jnz loc_429ACB  +
jmp loc_4299C0  +
***
mov edx [ebx+18h] +
test edx edx +
jnz loc_429A7B  +
mov eax [eax+18h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_429A7B  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_429B7D  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
jnb loc_429ACB  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+10h] +
sbb ebp edx +
cmp ebp 0 +
mov edi [edi+14h] +
jg loc_429ACB  +
jl loc_429B7D  +
cmp eax edi +
jnb loc_429ACB  +
cmp dword ptr [esp+28h] 0 +
jz loc_429A7B  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_429ACB  +
sub edx eax +
cmp [esp+1Ch] edx +
jbe loc_429ACB  +
jmp loc_429A7B  +
***
mov edi [esp+10h] +
add dword ptr [esp+34h] 1 +
add edi 20h +
mov eax [esp+20h] +
cmp [esp+34h] eax +
jnz loc_429961  +
mov ebp [esp+14h] +
mov edi [esp+18h] +
mov eax [esp+30h] +
test eax eax +
jz loc_429D16  +
movzx edx byte ptr [eax+18h] +
test dl 40h +
jz loc_4298E2  +
and edx 0FFFFFFBFh +
mov [eax+18h] dl +
mov eax [eax+0Ch] +
jmp loc_429BD1  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_42973E  +
jmp loc_429737  +
***
mov eax [esp+0B4h] +
mov edi [eax+4] +
mov eax [edi+1B0h] +
mov ecx edi +
cmp ebx [eax+10h] +
jnz loc_429C61  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
jmp loc_428A36  +
***
mov [esp+8] eax +
mov eax [esp+0B0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp] offset aBWarningSegmen +
mov [esp+4] eax +
call off_4733A4  +
jmp loc_4298F3  +
***
mov eax [edi] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_404AF0  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
mov eax [esp+0B4h] +
mov ecx [eax+4] +
jmp loc_428A36  +
***
mov edi [esp+10h] +
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_429A63  +
jmp loc_429A60  +
***
mov dword ptr [esp+8] offset aRewrite_elf_pr +
mov dword ptr [esp+4] 19A1h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_404070  +
mov eax [esp+0B4h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax] 0 +
jmp loc_4289F4  +
***
mov eax [esp+20h] +
sub eax [esp+18h] +
test eax eax +
jle loc_429CF5  +
add [ebx+14h] eax +
lea edx [eax+esi] +
mov [ebx+18h] edx +
mov dword ptr [edi] 0 +
xor ebp ebp +
mov edi [esp+30h] +
jmp loc_428AE3  +
***
mov esi [esp+10h] +
mov ebx [esp+2Ch] +
mov [esi+0Ch] ebx +
jmp loc_429536  +
***
mov dword ptr [esp+8Ch] 0 +
cmp eax [esp+20h] +
jz loc_42A26D  +
mov edx eax +
shl edx 5 +
cmp dword ptr [ebp+edx+10h] 0 +
jnz loc_429D50  +
add eax 1 +
jmp loc_429D21  +
***
xor ebx ebx +
jmp loc_429C12  +
***
mov ebp [esp+14h] +
mov edi [esp+18h] +
jmp loc_4298E2  +
***
mov eax 1 +
lea edi [esp+8Ch] +
add eax eax +
mov [esp+38h] edi +
mov edi ebp +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+60h] al +
mov eax [esp+20h] +
cmp [esp+3Ch] eax +
jz loc_42A24C  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+14h] eax +
jz loc_429F31  +
mov ebp [edi] +
mov [esp+10h] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+14h] 0 +
lea eax [ebp-6474E550h] +
mov [esp+30h] eax +
lea eax [ebp-1] +
mov [esp+34h] eax +
lea eax [ebp-6] +
mov [esp+40h] eax +
jmp loc_429DF1  +
cmp ebp 7 +
jz loc_429E13  +
cmp ebp 6474E552h +
jz loc_429E13  +
cmp ebp 1 +
jz loc_429E13  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+10h] eax +
jz loc_42A274  +
mov eax [esp+10h] +
mov esi [eax+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+2Ch] ebx +
jnz loc_429DCC  +
cmp dword ptr [esp+40h] 1 +
jbe loc_429DDE  +
and eax 2 +
mov [esp+18h] eax +
jnz loc_429E2A  +
cmp dword ptr [esp+30h] 2 +
jbe loc_429DDE  +
cmp dword ptr [esp+34h] 1 +
jbe loc_429DDE  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+24h] eax +
jz loc_429E68  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
ja loc_429DDE  +
xor edx edx +
sub ecx eax +
mov eax ecx +
mov ecx [esi+18h] +
sbb ebx edx +
mov edx ebx +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_429DDE  +
jl loc_429E68  +
cmp eax ecx +
ja loc_429DDE  +
cmp dword ptr [esp+18h] 0 +
lea esi [esi+0] +
jz loc_429E9E  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_429DDE  +
sub edx eax +
cmp dword ptr [esp+2Ch] 0 +
jz loc_429E90  +
cmp dword ptr [esp+24h] 8 +
jz loc_429EBC  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_429DDE  +
cmp dword ptr [edi] 2 +
jz loc_429EC5  +
mov eax [esp+14h] +
test eax eax +
cmovz eax [esp+10h] +
add dword ptr [esp+28h] 1 +
mov [esp+14h] eax +
jmp loc_429DDE  +
***
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_429E93  +
jmp loc_429E90  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_429EA3  +
mov eax [edi+18h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_429EA3  +
cmp dword ptr [esp+24h] 8 +
jz loc_429F0A  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
jnb loc_429DDE  +
xor edx edx +
sub ecx eax +
mov eax [edi+14h] +
sbb ebx edx +
cmp ebx 0 +
jg loc_429DDE  +
jl loc_429F0A  +
cmp ecx eax +
jnb loc_429DDE  +
cmp dword ptr [esp+18h] 0 +
nop   +
jz loc_429EA3  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_429DDE  +
sub edx eax +
cmp [esp+2Ch] edx +
jbe loc_429DDE  +
jmp loc_429EA3  +
***
mov dword ptr [esp+24h] 0 +
mov eax 2Ch +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_406370  +
test eax eax +
mov ebp eax +
jz loc_4297B2  +
mov ebx [edi] +
mov dword ptr [eax] 0 +
mov edx [edi+1Ch] +
mov esi [edi+10h] +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [ebp+14h] edx +
mov [esp+2Ch] esi +
mov [ebp+0Ch] esi +
mov [ebp+8] eax +
movzx eax byte ptr [ebp+20h] +
mov dword ptr [ebp+10h] 0 +
or eax 1 +
and eax 0FFFFFFFDh +
or eax [esp+60h] +
mov edx eax +
or edx 4 +
mov [ebp+20h] dl +
lea edx [ebx-6474E551h] +
cmp edx 1 +
ja loc_429FB0  +
mov edx [edi+18h] +
or eax 0Ch +
mov [ebp+20h] al +
mov [ebp+18h] edx +
mov eax [edi+8] +
mov esi eax +
mov [esp+10h] eax +
xor eax eax +
test esi esi +
jnz loc_429FCF  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [edi+14h] eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 4 +
and eax 0FFFFFFCFh +
or eax edx +
cmp dword ptr [esp+1Ch] 0 +
mov [ebp+20h] al +
jz loc_429FF0  +
cmp ebx 1 +
jz loc_42A294  +
mov eax [esp+48h] +
mov edx [eax+14h] +
xor eax eax +
cmp [esp+10h] edx +
ja loc_42A01B  +
mov esi [esp+48h] +
mov ecx [esp+10h] +
add ecx [edi+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax edx +
cmp ecx eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 5 +
and eax 0FFFFFFDFh +
or eax edx +
cmp ebx 1 +
mov [ebp+20h] al +
jnz loc_42A03E  +
test al 20h +
mov eax [esp+1Ch] +
cmovnz eax ebx +
mov [esp+1Ch] eax +
cmp dword ptr [esp+24h] 0 +
jz loc_42A2A1  +
mov eax [esp+14h] +
test eax eax +
jz loc_42A2A1  +
mov esi [esp+10h] +
xor ecx ecx +
mov [esp+28h] ebp +
mov ebp eax +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+44h] 0 +
mov [esp+40h] esi +
lea esi [ebx-6474E550h] +
mov [esp+54h] esi +
lea esi [ebx-1] +
mov [esp+58h] esi +
lea esi [ebx-6] +
mov [esp+5Ch] esi +
mov [esp+18h] ebx +
mov [esp+4Ch] ecx +
jmp loc_42A0BA  +
cmp dword ptr [esp+18h] 7 +
jz loc_42A0D8  +
cmp dword ptr [esp+18h] 6474E552h +
jz loc_42A0D8  +
cmp dword ptr [esp+18h] 1 +
jz loc_42A0D8  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_42A2CA  +
mov esi [ebp+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+50h] ebx +
jnz loc_42A097  +
cmp dword ptr [esp+5Ch] 1 +
jbe loc_42A0AF  +
and eax 2 +
mov [esp+30h] eax +
jnz loc_42A0EF  +
cmp dword ptr [esp+54h] 2 +
jbe loc_42A0AF  +
cmp dword ptr [esp+58h] 1 +
jbe loc_42A0AF  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+34h] eax +
jz loc_42A126  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
ja loc_42A0AF  +
mov ecx [esi+18h] +
sub eax [esp+40h] +
sbb edx [esp+44h] +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_42A0AF  +
jl loc_42A126  +
cmp eax ecx +
ja loc_42A0AF  +
cmp dword ptr [esp+30h] 0 +
jz loc_42A15D  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_42A0AF  +
sub edx eax +
cmp dword ptr [esp+50h] 0 +
jz loc_42A14F  +
cmp dword ptr [esp+34h] 8 +
jz loc_42A23A  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_42A0AF  +
cmp dword ptr [esp+18h] 2 +
jz loc_42A1CA  +
mov ebx [esp+4Ch] +
mov edx [esp+28h] +
mov eax [ebp+3Ch] +
lea ecx [ebx+1] +
mov [edx+ebx*4+28h] eax +
mov edx [ebp+14h] +
test dl 1 +
jz loc_42A1B7  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_42A324  +
mov eax [ebp+20h] +
cmp eax [ebx+20h] +
cmovb ebx ebp +
mov [esp+14h] ebx +
and dl 2 +
jz loc_42A319  +
mov edx [esi+10h] +
sub edx [esp+10h] +
sub eax [esp+2Ch] +
cmp eax edx +
jz loc_42A1B7  +
mov eax [esp+28h] +
and byte ptr [eax+20h] 0FDh +
cmp [esp+24h] ecx +
jz loc_42A2CA  +
mov [esp+4Ch] ecx +
jmp loc_42A0AF  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_42A164  +
mov eax [edi+18h] +
test eax eax +
mov [esp+50h] eax +
jz loc_42A164  +
cmp dword ptr [esp+34h] 8 +
jz loc_42A210  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
jnb loc_42A0AF  +
sub eax [esp+40h] +
sbb edx [esp+44h] +
mov ecx [edi+14h] +
cmp edx 0 +
jg loc_42A0AF  +
jl loc_42A210  +
cmp eax ecx +
jnb loc_42A0AF  +
cmp dword ptr [esp+30h] 0 +
jz loc_42A164  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_42A0AF  +
sub edx eax +
cmp [esp+50h] edx +
jbe loc_42A0AF  +
jmp loc_42A164  +
***
xor eax eax +
cmp dword ptr [esp+18h] 7 +
jnz loc_42A152  +
jmp loc_42A14F  +
***
mov eax [esp+0B4h] +
mov edx [esp+8Ch] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax] edx +
jmp loc_4289F4  +
***
xor eax eax +
jmp loc_429D55  +
***
mov eax [esp+28h] +
mov esi eax +
mov [esp+24h] eax +
test esi esi +
mov eax 2Ch +
lea edx ds:28h[esi*4] +
cmovnz eax edx +
jmp loc_429F3E  +
***
mov dword ptr [esp+1Ch] 1 +
jmp loc_42A03E  +
***
movzx eax byte ptr [ebp+20h] +
and eax 32h +
cmp al 2 +
jz loc_42A305  +
mov eax [esp+24h] +
add edi 20h +
add dword ptr [esp+3Ch] 1 +
mov [ebp+24h] eax +
mov eax [esp+38h] +
mov [esp+38h] ebp +
mov [eax] ebp +
jmp loc_429D78  +
***
mov ebp [esp+28h] +
movzx eax byte ptr [ebp+20h] +
test al 10h +
jz loc_42A309  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_42A2FE  +
mov edx [ebx+1Ch] +
and eax 32h +
sub edx [edi+0Ch] +
cmp al 2 +
mov [ebp+1Ch] edx +
jnz loc_42A2AC  +
mov eax [esp+14h] +
mov eax [eax+20h] +
sub eax [esp+2Ch] +
mov [ebp+10h] eax +
jmp loc_42A2AC  +
***
and eax 32h +
cmp al 2 +
jnz loc_42A2AC  +
xor eax eax +
jmp loc_42A2F5  +
***
and eax 32h +
cmp al 2 +
jnz loc_42A2AC  +
cmp dword ptr [esp+14h] 0 +
jnz loc_42A2EE  +
jmp loc_42A305  +
***
mov edx [esi+0Ch] +
sub edx [edi+0Ch] +
jmp loc_42A1A7  +
***
mov [esp+14h] ebp +
mov eax [ebp+20h] +
jmp loc_42A197  +
***
mov eax [esp+4] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_42A343  +
mov eax 1 +
retn   +
***
mov edx [esp+0Ch] +
mov edx [edx+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_42A33D  +
mov ecx [esp+8] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_42A403  +
mov dword ptr [esp+8] 0 +
mov ecx [esp+10h] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_42A3F4  +
mov dword ptr [esp+10h] 0 +
mov edx [esp+8] +
test edx edx +
jz loc_42A33D  +
mov ecx [esp+8] +
mov edx [ecx+28h] +
test edx edx +
jz loc_42A33D  +
cmp dword ptr [esp+10h] 0 +
jz loc_42A33D  +
cmp dword ptr [ecx+10h] offset off_473250 +
jnz loc_42A33D  +
mov eax [eax+0A0h] +
cmp edx [eax+90Ch] +
jz loc_42A416  +
cmp edx [eax+910h] +
jz loc_42A41D  +
mov ecx [eax+934h] +
cmp edx [ecx+30h] +
jz loc_42A424  +
cmp edx [ecx+2Ch] +
jz loc_42A42B  +
mov eax [eax+208h] +
test eax eax +
jnz loc_42A3DE  +
jmp loc_42A3E8  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_42A3E8  +
cmp edx [eax+38h] +
jnz loc_42A3D7  +
mov edx 0FFFFFF44h +
mov eax [esp+10h] +
mov [eax+28h] edx +
jmp loc_42A33D  +
***
mov ecx [edx+0A0h] +
test ecx ecx +
jnz loc_42A382  +
jmp loc_42A37A  +
***
mov edx [edx+0A0h] +
test edx edx +
jnz loc_42A36B  +
jmp loc_42A363  +
***
mov edx 0FFFFFF40h +
jmp loc_42A3E8  +
***
mov edx 0FFFFFF41h +
jmp loc_42A3E8  +
***
mov edx 0FFFFFF42h +
jmp loc_42A3E8  +
***
mov edx 0FFFFFF43h +
jmp loc_42A3E8  +
***
mov eax [esp+4] +
mov edx [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [edx+60h] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
mov eax edx +
cmovg eax ecx +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov eax [edx+0A0h] +
mov ecx [eax+910h] +
test ecx ecx +
jz loc_42A4D0  +
mov edx [edx+4] +
mov eax [eax+108h] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+5] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
cmovle ecx edx +
mov eax ecx +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4040F0  +
mov ecx 0FFFFFFFFh +
jmp loc_42A4C3  +
***
mov eax [esp+8] +
mov eax [eax+4Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ecx [esp+2Ch] +
mov edi [esp+28h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
mov edx [edx+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] ecx +
mov [esp+4] esi +
mov [esp] eax +
call edx  +
test eax eax +
jz loc_42A573  +
mov eax [esi+4Ch] +
mov ebx [esi+44h] +
test eax eax +
jz loc_42A566  +
mov ecx edi +
xor edx edx +
jmp loc_42A553  +
mov ebx esi +
add edx 1 +
add ecx 4 +
cmp edx eax +
lea esi [ebx+10h] +
mov [ecx-4] ebx +
jnz loc_42A551  +
lea edi [edi+eax*4] +
mov dword ptr [edi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_42A56C  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_42A5B6  +
mov [ebx+7Ch] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_42A5F9  +
mov [ebx+80h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edx [eax+0A0h] +
mov ebx [edx+910h] +
test ebx ebx +
jz loc_42A672  +
mov ecx [eax+64h] +
test ecx ecx +
jz loc_42A66B  +
mov edi 4 +
jmp loc_42A637  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_42A661  +
mov ebp [ecx+8Ch] +
cmp ebx [ebp+1Ch] +
jnz loc_42A630  +
mov esi [ebp+4] +
cmp esi 4 +
jz loc_42A64F  +
cmp esi 9 +
jnz loc_42A630  +
mov eax [ecx+24h] +
xor edx edx +
mov ecx [ecx+0Ch] +
div  dword ptr [ebp+28h] +
test ecx ecx +
lea edi [edi+eax*4] +
jnz loc_42A637  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 4 +
jmp loc_42A663  +
***
mov dword ptr [esp] 5 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
jmp loc_42A663  +
***
mov eax [edi+4] +
mov ebx [edi+64h] +
mov dword ptr [esp+18h] 0 +
mov eax [eax+1B0h] +
test ebx ebx +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov [esp+1Ch] eax +
jnz loc_42A6F7  +
jmp loc_42A780  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_42A780  +
mov eax [edi+0A0h] +
mov edx [eax+910h] +
mov eax [ebx+8Ch] +
cmp [eax+1Ch] edx +
jnz loc_42A6E0  +
mov eax [eax+4] +
cmp eax 4 +
jz loc_42A70F  +
cmp eax 9 +
jnz loc_42A6E0  +
mov eax [esp+48h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+8] eax +
mov eax [esp+1Ch] +
call eax  +
test eax eax +
jz loc_42A796  +
mov ecx [ebx+8Ch] +
xor edx edx +
mov eax [ebx+24h] +
mov ebp [ebx+44h] +
div  dword ptr [ecx+28h] +
test eax eax +
jle loc_42A76D  +
mov esi [esp+44h] +
xor ecx ecx +
jmp loc_42A752  +
mov ebp edx +
add ecx 1 +
add esi 4 +
cmp eax ecx +
lea edx [ebp+10h] +
mov [esi-4] ebp +
jnz loc_42A750  +
mov ecx [esp+44h] +
lea esi [ecx+eax*4] +
mov [esp+44h] esi +
mov ebx [ebx+0Ch] +
add [esp+18h] eax +
test ebx ebx +
jnz loc_42A6EB  +
lea esi [esi+0] +
mov eax [esp+44h] +
mov dword ptr [eax] 0 +
mov eax [esp+18h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_42A78E  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_0] +
mov ebx [edi+0A0h] +
mov esi [ebx+91Ch] +
test esi esi +
jz loc_42A840  +
mov ecx [ebx+1B8h] +
test ecx ecx +
jz loc_42A7E7  +
mov eax [ebx+1B0h] +
cmp eax 0Fh +
ja loc_42A972  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_version_ +
call off_4733A4  +
mov [esp+7Ch+var_7C] 11h +
call sub_4040F0  +
mov eax [edi+0A0h] +
mov dword ptr [eax+244h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+23Ch] 0 +
test ebp ebp +
jz loc_42A832  +
mov [esp+7Ch+var_7C] ebp +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
mov eax [ebx+918h] +
test eax eax +
jz loc_42A8A6  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42A865  +
mov eax [ebx+1E8h] +
cmp eax 13h +
ja loc_42AB80  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_versio_0 +
call off_4733A4  +
mov [esp+7Ch+var_7C] 11h +
call sub_4040F0  +
mov eax [edi+0A0h] +
mov dword ptr [eax+240h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+238h] 0 +
jmp loc_42A826  +
mov ebp [esp+7Ch+arg_4] +
test ebp ebp +
jz loc_42A965  +
cmp esi 3 +
mov eax 3 +
lea edx [esi+1] +
cmovnb eax edx +
mov [esp+7Ch+var_74] 28h +
mov esi eax +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_406460  +
mov [ebx+240h] eax +
mov eax [edi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_42A832  +
mov [eax+238h] esi +
mov eax [edi+0A0h] +
lea edx [esi+esi*4] +
mov ecx 1 +
mov eax [eax+240h] +
lea ebx [eax+edx*8-28h] +
xor edx edx +
mov eax 1 +
mov [ebx] ax +
mov [ebx+2] dx +
mov [ebx+4] si +
mov [ebx+6] cx +
mov [ebx+14h] edi +
mov [esp+7Ch+var_7C] edi +
call sub_43BF10  +
test eax eax +
mov [ebx+18h] eax +
jz loc_42AC80  +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] edi +
call sub_406370  +
test eax eax +
mov [ebx+20h] eax +
jz loc_42AC80  +
mov edx [ebx+18h] +
mov [eax+8] edx +
add esp 7Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_42A806  +
mov eax [ebx+1A8h] +
mov edx [ebx+1ACh] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_403BF0  +
test eax eax +
jnz loc_42A806  +
mov eax [ebx+1B0h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_4039E0  +
cmp eax [ebx+1B0h] +
jnz loc_42A806  +
mov eax [ebx+1B8h] +
mov esi [edi+0A0h] +
mov [esp+7Ch+var_74] 20h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
call sub_406460  +
mov [esi+244h] eax +
mov eax [edi+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
mov [esp+7Ch+var_68] ecx +
jz loc_42A80C  +
mov edx [ebx+1B0h] +
lea edx [ebp+edx-10h] +
mov [esp+7Ch+var_60] edx +
mov edx [ebx+1B8h] +
test edx edx +
jz loc_42B043  +
mov [esp+7Ch+var_5C] ebp +
xor esi esi +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_64] ebx +
mov [esp+7Ch+arg_0] edi +
mov eax [esp+7Ch+var_5C] +
mov edi [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] eax +
call sub_420A50  +
mov ecx [esp+7Ch+arg_0] +
mov eax [esp+7Ch+var_64] +
mov [edi+10h] ecx +
mov ecx [edi+4] +
mov edx [eax+1B4h] +
test ecx ecx +
jnz loc_42AD13  +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+14h] offset unk_489712 +
mov ecx [esp+7Ch+var_68] +
movzx eax word ptr [ecx+2] +
test ax ax +
jnz loc_42AD33  +
mov dword ptr [ecx+18h] 0 +
mov eax [esp+7Ch+var_68] +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_5C] +
mov ebp [eax+8] +
sub ecx edx +
mov [esp+7Ch+var_50] ecx +
cmp ebp ecx +
ja loc_42AB6D  +
add ebp edx +
mov ebx [eax+18h] +
cmp word ptr [eax+2] 0 +
jz loc_42AC95  +
xor edi edi +
jmp loc_42AB2E  +
mov dword ptr [ebx+10h] offset unk_489712 +
movzx eax word ptr [ebx+6] +
mov dword ptr [ebx+14h] 0 +
cmp esi eax +
cmovb esi eax +
mov eax [ebx+0Ch] +
add edi 1 +
test eax eax +
jz loc_42AC8D  +
mov ecx [esp+7Ch+var_68] +
movzx edx word ptr [ecx+2] +
cmp edi edx +
jnb loc_42AB17  +
lea ecx [ebx+18h] +
mov [ebx+14h] ecx +
mov ecx [esp+7Ch+var_60] +
sub ecx ebp +
cmp eax ecx +
ja loc_42AB6D  +
add ebp eax +
add ebx 18h +
cmp edi edx +
jnb loc_42AC95  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_420B40  +
mov ecx [ebx+8] +
mov eax [esp+7Ch+var_64] +
test ecx ecx +
mov edx [eax+1B4h] +
jz loc_42AAE0  +
mov eax [esp+7Ch+arg_0] +
call loc_420E50  +
test eax eax +
mov [ebx+10h] eax +
jnz loc_42AAE7  +
mov ebp [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
jmp loc_42A7E9  +
mov [esp+7Ch+var_7C] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_42AC80  +
mov eax [ebx+1E0h] +
mov edx [ebx+1E4h] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_403BF0  +
test eax eax +
jnz loc_42A884  +
mov eax [ebx+1E8h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_4039E0  +
cmp eax [ebx+1E8h] +
mov [esp+7Ch+var_5C] eax +
jnz loc_42A884  +
mov eax [esp+7Ch+var_5C] +
lea eax [ebp+eax-14h] +
mov [esp+7Ch+var_60] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42B036  +
xor edx edx +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_50] esi +
mov esi ebp +
xor ebp ebp +
mov [esp+7Ch+var_64] ebx +
mov ebx edx +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_68] eax +
jmp loc_42AC57  +
movzx eax ax +
cmp ebp eax +
cmovb ebp eax +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_42AFEF  +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp eax ecx +
ja loc_42AC76  +
add esi eax +
mov eax [esp+7Ch+var_64] +
add ebx 1 +
cmp [eax+1F0h] ebx +
jbe loc_42AD73  +
mov eax [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] eax +
call sub_420890  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jnz loc_42AC24  +
mov ebp [esp+7Ch+var_54] +
jmp loc_42A867  +
xor ebp ebp +
mov eax [edi+0A0h] +
jmp loc_42A88A  +
mov eax [esp+7Ch+var_68] +
mov [eax+2] di +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+1Ch] 0 +
mov eax [eax+0Ch] +
test eax eax +
jz loc_42ACE5  +
mov ecx [esp+7Ch+var_64] +
add [esp+7Ch+var_58] 1 +
mov edx [ecx+1B8h] +
cmp [esp+7Ch+var_58] edx +
jnb loc_42ACC8  +
mov edi [esp+7Ch+var_68] +
mov ecx edi +
add ecx 20h +
mov [edi+1Ch] ecx +
cmp [esp+7Ch+var_50] eax +
jb loc_42AB6D  +
add [esp+7Ch+var_5C] eax +
add [esp+7Ch+var_68] 20h +
cmp [esp+7Ch+var_58] edx +
jb loc_42AA49  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
mov edx [esp+7Ch+var_58] +
mov [eax+23Ch] edx +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebx [edi+0A0h] +
jmp loc_42A842  +
mov eax [esp+7Ch+arg_0] +
call loc_420E50  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+14h] eax +
jnz loc_42AA92  +
jmp loc_42AB6D  +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 18h +
mov [esp+7Ch+var_7C] eax +
call sub_406310  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+18h] eax +
jnz loc_42AAAA  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_42A80C  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx eax +
mov ebp [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_4] +
test ecx ecx +
jz loc_42AD9D  +
cmp esi [esp+7Ch+var_58] +
ja loc_42AD96  +
mov esi [esp+7Ch+var_58] +
add esi 1 +
mov [esp+7Ch+var_58] esi +
mov eax [esp+7Ch+var_58] +
mov edx [edi+0A0h] +
mov [esp+7Ch+var_74] 28h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_68] edx +
call sub_406460  +
mov edx [esp+7Ch+var_68] +
mov [edx+240h] eax +
mov eax [edi+0A0h] +
mov edx [eax+240h] +
test edx edx +
jz loc_42A88A  +
mov ecx [esp+7Ch+var_58] +
mov [eax+238h] ecx +
mov eax [edi+0A0h] +
mov eax [eax+240h] +
mov [esp+7Ch+var_4C] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42AFD4  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_68] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_50] ebp +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_54] ebp +
lea eax [ebp+eax-8] +
mov [esp+7Ch+var_60] eax +
mov [esp+7Ch+var_40] esi +
mov [esp+7Ch+var_5C] ebx +
mov eax [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_68] +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] esi +
call sub_420890  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jz loc_42AC76  +
mov edx [esp+7Ch+var_4C] +
movzx eax ax +
lea eax [eax+eax*4] +
lea eax [edx+eax*8-28h] +
mov ecx eax +
mov [esp+7Ch+var_64] eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [esi+10h] +
mov [ecx+14h] edi +
mov [ecx+10h] eax +
movzx eax word ptr [ecx+6] +
test ax ax +
jnz loc_42B004  +
mov dword ptr [ecx+20h] 0 +
mov ecx [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_50] +
mov esi [ecx+0Ch] +
sub eax edx +
cmp esi eax +
ja loc_42AC76  +
mov eax ecx +
mov ecx [ecx+20h] +
add esi edx +
xor ebp ebp +
cmp word ptr [eax+6] 0 +
mov [esp+7Ch+var_48] ecx +
lea ebx [ecx+10h] +
jnz loc_42AF0F  +
jmp loc_42AF5E  +
mov dword ptr [ebx-8] offset unk_489712 +
add ebp 1 +
test eax eax +
mov dword ptr [ebx-4] 0 +
jz loc_42AF56  +
mov ecx [esp+7Ch+var_64] +
movzx edx word ptr [ecx+6] +
cmp ebp edx +
jnb loc_42AEF8  +
mov [ebx-4] ebx +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp ecx eax +
jb loc_42AC76  +
add esi eax +
add ebx 10h +
cmp ebp edx +
jnb loc_42AF5E  +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] esi +
call eax  +
lea edx [esi+4] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [ebx-10h] +
mov edx [esp+7Ch+var_5C] +
test ecx ecx +
mov edx [edx+1ECh] +
mov [ebx-0Ch] eax +
jz loc_42AED4  +
mov eax edi +
call loc_420E50  +
test eax eax +
mov [ebx-8] eax +
jz loc_42AC76  +
mov eax [ebx-0Ch] +
jmp loc_42AEDB  +
mov eax [esp+7Ch+var_64] +
mov [eax+6] bp +
mov eax [esp+7Ch+var_64] +
cmp word ptr [eax+6] 0 +
mov dword ptr [eax+18h] 0 +
jz loc_42AF7B  +
mov ecx eax +
mov eax [eax+20h] +
mov eax [eax+8] +
mov [ecx+18h] eax +
mov eax [esp+7Ch+var_64] +
mov edx [eax+10h] +
mov dword ptr [eax+1Ch] 0 +
test edx edx +
jz loc_42AFCC  +
sub eax [esp+7Ch+var_4C] +
sar eax 3 +
imul eax eax +
add eax 1 +
cmp [esp+7Ch+var_58] eax +
jbe loc_42AFAF  +
mov ecx [esp+7Ch+var_64] +
mov eax ecx +
add eax 28h +
mov [ecx+1Ch] eax +
mov eax [esp+7Ch+var_5C] +
add [esp+7Ch+var_44] 1 +
mov ecx [esp+7Ch+var_44] +
add [esp+7Ch+var_50] edx +
cmp [eax+1F0h] ecx +
ja loc_42AE31  +
mov ebp [esp+7Ch+var_54] +
mov esi [esp+7Ch+var_40] +
mov [esp+7Ch+var_7C] ebp +
call free  +
cmp [esp+7Ch+arg_4] 0 +
jz loc_42A965  +
jmp loc_42A8F9  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_64] +
mov ebp [esp+7Ch+var_54] +
jmp loc_42AD81  +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_406310  +
mov edx [esp+7Ch+var_64] +
test eax eax +
mov [edx+20h] eax +
jnz loc_42AE9F  +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_42A88A  +
mov [esp+7Ch+var_58] 0 +
jmp loc_42AD81  +
mov [esp+7Ch+var_58] 0 +
xor esi esi +
jmp loc_42ACF6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov ebp [esp+74h] +
mov dword ptr [esp+30h] 0 +
mov eax [esi+0A0h] +
mov ebx [eax+44h] +
test ebx ebx +
jz loc_42B278  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 11h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aProgramHeader +
call fwrite  +
mov eax [esi+0A0h] +
mov eax [eax+30h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_42B278  +
xor edi edi +
jmp loc_42B0E1  +
mov [esp+4] ebp +
add edi 1 +
add ebx 20h +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp edi [esp+1Ch] +
jz loc_42B278  +
mov eax [ebx] +
mov [esp+20h] eax +
call near ptr dword_41F430  +
test eax eax +
jz loc_42B3D6  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a8sOff0x +
mov [esp] ebp +
call fprintf  +
mov eax [ebx+8] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_404A20  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVaddr0x +
call fwrite  +
mov eax [ebx+0Ch] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_404A20  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aPaddr0x +
call fwrite  +
mov eax [ebx+10h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_404A20  +
mov eax [ebx+1Ch] +
mov [esp] eax +
call near ptr dword_408A10  +
mov dword ptr [esp+4] offset aAlign2U +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aFilesz0x +
call fwrite  +
mov eax [ebx+14h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_404A20  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMemsz0x +
call fwrite  +
mov eax [ebx+18h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_404A20  +
mov eax [ebx+4] +
mov dword ptr [esp+4] offset aFlagsCCC +
mov [esp] ebp +
mov edx eax +
and edx 1 +
cmp edx 1 +
mov edx eax +
sbb ecx ecx +
and edx 2 +
and ecx 0FFFFFFB5h +
add ecx 78h +
cmp edx 1 +
sbb edx edx +
and eax 4 +
and edx 0FFFFFFB6h +
add edx 77h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFBBh +
add eax 72h +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+4] +
and eax 0FFFFFFF8h +
jz loc_42B0C1  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aLx +
mov [esp] ebp +
call fprintf  +
jmp loc_42B0C1  +
***
mov dword ptr [esp+4] offset a_dynamic_1 +
mov [esp] esi +
call sub_402CB0  +
test eax eax +
mov edi eax +
jz loc_42B410  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aDynamicSection +
call fwrite  +
lea eax [esp+30h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] esi +
call sub_403610  +
mov ebx [esp+30h] +
test eax eax +
jnz loc_42B2E4  +
test ebx ebx +
jz loc_42B2DA  +
mov [esp] ebx +
call free  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] edi +
mov [esp] esi +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
jz loc_42B49A  +
mov edx [esi+0A0h] +
mov ebx [esp+30h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+2Ch] eax +
mov eax [esi+4] +
mov edx [eax+1B0h] +
mov eax [edx+174h] +
movzx ecx byte ptr [eax+6] +
mov eax [eax+30h] +
mov [esp+1Ch] ecx +
mov [esp+24h] eax +
mov eax [edi+24h] +
cmp ecx eax +
ja loc_42B2CE  +
add eax ebx +
mov [esp+20h] eax +
sub [esp+20h] ecx +
cmp ebx [esp+20h] +
ja loc_42B3FF  +
mov [esp+28h] edx +
lea edi [esp+34h] +
mov eax [esp+24h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
mov edx [esp+34h] +
test edx edx +
jz loc_42B3FB  +
cmp edx 1Dh +
jz loc_42BA28  +
ja loc_42B4A3  +
cmp edx 0Eh +
jz loc_42BA1E  +
nop   +
lea esi [esi+0] +
ja loc_42B500  +
cmp edx 7 +
jz loc_42BA64  +
nop   +
ja loc_42B71E  +
cmp edx 3 +
jz loc_42BA5A  +
nop   +
jbe loc_42B9C8  +
cmp edx 5 +
mov eax offset aStrtab +
jz loc_42B744  +
mov eax offset aHash +
mov edx offset aSymtab +
cmova eax edx +
jmp loc_42B744  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_42B0F4  +
***
mov ebx [esp+30h] +
mov [esp] ebx +
call free  +
mov dword ptr [esp+30h] 0 +
nop   +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
test edx edx +
jz loc_42B42A  +
mov edi [eax+240h] +
test edi edi +
jz loc_42B461  +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_42B457  +
test edx edx +
jnz loc_42B635  +
mov eax [eax+91Ch] +
test eax eax +
jnz loc_42B58D  +
add esp 5Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+244h] +
test ecx ecx +
jnz loc_42B434  +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_42A7B0  +
test eax eax +
jz loc_42B2DA  +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
jmp loc_42B434  +
***
mov edx [esp+2Ch] +
mov eax esi +
call loc_420E50  +
test eax eax +
jnz loc_42B949  +
mov ebx [esp+30h] +
jmp loc_42B2CE  +
***
cmp edx 6FFFFEFCh +
jz loc_42BA32  +
ja loc_42B546  +
cmp edx 6FFFFDFBh +
jz loc_42BA50  +
jbe loc_42B800  +
cmp edx 6FFFFDFFh +
jz loc_42BA46  +
ja loc_42B896  +
cmp edx 6FFFFDFDh +
mov eax offset aPosflag_1 +
jz loc_42B744  +
mov eax offset aFeature +
mov edx offset aSyminsz +
cmova eax edx +
jmp loc_42B744  +
cmp edx 15h +
jz loc_42BA78  +
jbe loc_42B845  +
cmp edx 19h +
jz loc_42BA6E  +
nop   +
lea esi [esi+0] +
ja loc_42B876  +
cmp edx 17h +
mov eax offset aJmprel +
jz loc_42B744  +
mov eax offset aTextrel +
mov edx offset aBind_now +
cmova eax edx +
jmp loc_42B744  +
cmp edx 6FFFFFFBh +
jz loc_42BAA0  +
jbe loc_42B7BC  +
cmp edx 6FFFFFFFh +
jz loc_42BA96  +
ja loc_42B8FF  +
cmp edx 6FFFFFFDh +
mov eax offset aVerdefnum +
jz loc_42B744  +
mov eax offset aVerdef +
mov ecx offset aVerneed +
cmova eax ecx +
jmp loc_42B744  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 15h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionReferen +
call fwrite  +
mov eax [esi+0A0h] +
mov edi [eax+244h] +
test edi edi +
jz loc_42B44A  +
mov esi offset aCorrupt +
mov eax [edi+14h] +
mov dword ptr [esp+4] offset aRequiredFromS +
mov [esp] ebp +
test eax eax +
cmovz eax esi +
mov [esp+8] eax +
call fprintf  +
mov ebx [edi+18h] +
test ebx ebx +
jz loc_42B629  +
lea esi [esi+0] +
mov eax [ebx+10h] +
mov edx [ebx] +
test eax eax +
cmovz eax esi +
mov [esp+14h] eax +
movzx eax word ptr [ebx+6] +
mov [esp+10h] eax +
movzx eax word ptr [ebx+4] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset a0x8_8lx0x2_2x2 +
mov [esp] ebp +
mov [esp+0Ch] eax +
call fprintf  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_42B5F0  +
mov edi [edi+1Ch] +
test edi edi +
jnz loc_42B5C6  +
jmp loc_42B44A  +
***
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 16h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionDefinit +
call fwrite  +
mov eax [esi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_42B43C  +
lea esi [esi+0] +
mov eax [ebx+18h] +
mov ecx offset aCorrupt +
mov edx [ebx+8] +
test eax eax +
cmovz eax ecx +
mov [esp+14h] eax +
mov [esp+10h] edx +
movzx eax word ptr [ebx+2] +
mov [esp+0Ch] eax +
movzx eax word ptr [ebx+4] +
mov dword ptr [esp+4] offset aD0x2_2x0x8_8lx +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+20h] +
test eax eax +
jz loc_42B708  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_42B708  +
mov [esp+4] ebp +
mov dword ptr [esp] 9 +
call fputc  +
mov eax [ebx+20h] +
mov edi [eax+0Ch] +
test edi edi +
jz loc_42B6F8  +
mov eax [edi+8] +
mov ecx offset aCorrupt +
mov dword ptr [esp+4] offset aS_18 +
mov [esp] ebp +
test eax eax +
cmovz eax ecx +
mov [esp+8] eax +
call fprintf  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_42B6D0  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_42B670  +
mov eax [esi+0A0h] +
jmp loc_42B43C  +
***
cmp edx 0Ah +
jz loc_42BA8C  +
jbe loc_42B9A7  +
cmp edx 0Ch +
mov eax offset aInit_0 +
jz loc_42B744  +
mov eax offset aSyment +
mov edx offset aFini +
cmova eax edx +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a0x +
call fwrite  +
mov eax [esp+38h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_404A20  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
add ebx [esp+1Ch] +
cmp ebx [esp+20h] +
ja loc_42B3FB  +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov [esp+28h] eax +
jmp loc_42B353  +
***
cmp edx 6FFFFEFFh +
jz loc_42BA14  +
jbe loc_42B980  +
cmp edx 6FFFFFF9h +
mov eax offset aRelacount +
jz loc_42B744  +
mov eax offset aRelcount +
ja loc_42B744  +
cmp edx 6FFFFFF0h +
mov eax offset aVersym +
jz loc_42B744  +
jmp loc_42B8B9  +
cmp edx 21h +
jz loc_42BA0A  +
lea esi [esi+0] +
jbe loc_42B95A  +
cmp edx 6FFFFDF9h +
mov eax offset aPltpadsz +
jz loc_42B744  +
mov eax offset aMoveent +
ja loc_42B744  +
cmp edx 6FFFFDF8h +
mov eax offset aChecksum +
jz loc_42B744  +
jmp loc_42B8B9  +
cmp edx 11h +
jz loc_42BA3C  +
nop   +
jbe loc_42B9E4  +
cmp edx 13h +
mov eax offset aRelent +
jz loc_42B744  +
mov eax offset aRelsz +
mov edx offset aPltrel +
cmova eax edx +
jmp loc_42B744  +
***
cmp edx 1Bh +
mov eax offset aInit_arraysz +
jz loc_42B744  +
mov eax offset aFini_array +
mov edx offset aFini_arraysz +
cmova eax edx +
jmp loc_42B744  +
***
cmp edx 6FFFFEFAh +
jz loc_42BA00  +
ja loc_42BA82  +
cmp edx 6FFFFEF5h +
mov eax offset aGnu_hash +
jz loc_42B744  +
mov eax [esp+28h] +
mov ecx [eax+0E8h] +
mov eax offset unk_489712 +
test ecx ecx +
jz loc_42B8D1  +
mov [esp] edx +
call ecx  +
cmp byte ptr [eax] 0 +
jnz loc_42B744  +
mov eax [esp+34h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_42B744  +
***
cmp edx 7FFFFFFEh +
jz loc_42BAB4  +
cmp edx 7FFFFFFFh +
jz loc_42BAAA  +
cmp edx 7FFFFFFDh +
jnz loc_42B8B9  +
mov eax offset aAuxiliary +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov ecx [esp+38h] +
mov eax offset unk_489712 +
test ecx ecx +
jnz loc_42B487  +
mov [esp+4] ebp +
mov [esp] eax +
call fputs  +
jmp loc_42B78C  +
***
cmp edx 1Eh +
mov eax offset aFlags +
jz loc_42B744  +
cmp edx 20h +
mov eax offset aPreinit_array +
jz loc_42B744  +
jmp loc_42B8B9  +
***
cmp edx 6FFFFEFDh +
mov eax offset aPltpad +
jz loc_42B744  +
cmp edx 6FFFFEFEh +
mov eax offset aMovetab +
jz loc_42B744  +
jmp loc_42B8B9  +
***
cmp edx 8 +
mov eax offset aRelasz +
jz loc_42B744  +
cmp edx 9 +
mov eax offset aRelaent +
jz loc_42B744  +
jmp loc_42B8B9  +
***
cmp edx 1 +
jz loc_42BABE  +
cmp edx 2 +
mov eax offset aPltrelsz +
jz loc_42B744  +
jmp loc_42B8B9  +
***
cmp edx 0Fh +
jz loc_42BAC8  +
cmp edx 10h +
mov eax offset aSymbolic +
jz loc_42B744  +
jmp loc_42B8B9  +
***
mov eax offset aConfig +
jmp loc_42B924  +
***
mov eax offset aPreinit_arrays +
jmp loc_42B744  +
***
mov eax offset aSyminfo +
jmp loc_42B744  +
***
mov eax offset aSoname +
jmp loc_42B924  +
***
mov eax offset aRunpath +
jmp loc_42B924  +
***
mov eax offset aAudit +
jmp loc_42B924  +
***
mov eax offset aRel +
jmp loc_42B744  +
***
mov eax offset aSyminent +
jmp loc_42B744  +
***
mov eax offset aMovesz +
jmp loc_42B744  +
***
mov eax offset aPltgot +
jmp loc_42B744  +
***
mov eax offset aRela +
jmp loc_42B744  +
***
mov eax offset aInit_array +
jmp loc_42B744  +
***
mov eax offset aDebug +
jmp loc_42B744  +
***
mov eax offset aDepaudit +
jmp loc_42B924  +
***
mov eax offset aStrsz +
jmp loc_42B744  +
***
mov eax offset aVerneednum +
jmp loc_42B744  +
***
mov eax offset aFlags_1 +
jmp loc_42B744  +
***
mov eax offset aFilter +
jmp loc_42B924  +
***
mov eax offset aUsed +
jmp loc_42B744  +
***
mov eax offset aNeeded +
jmp loc_42B924  +
***
mov eax offset aRpath +
jmp loc_42B924  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 34h +
mov [esp] ebx +
call sub_406370  +
test eax eax +
jz loc_42BAFE  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_4137C0  +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_42BBA3  +
cmp cl 5Fh +
jz loc_42BB98  +
xor eax eax +
cmp cl 4Ch +
jnz loc_42BBA0  +
movzx ecx byte ptr [edx+1] +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jz loc_42BBA0  +
lea esi [edx+2] +
movzx edx byte ptr [edx+2] +
test dl dl +
jz loc_42BBA0  +
mov ecx esi +
jmp loc_42BB7B  +
test byte ptr ds:word_490F00[edx+edx] 4 +
jz loc_42BB9E  +
add ecx 1 +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_42BBA0  +
lea ebx [edx-1] +
cmp bl 1 +
ja loc_42BB67  +
cmp dl 1 +
mov eax 1 +
jnz loc_42BB67  +
cmp ecx esi +
jnz loc_42BB67  +
mov eax 1 +
jmp loc_42BBA0  +
cmp byte ptr [edx+1] 2Eh +
jz loc_42BBB6  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
movzx eax byte ptr [edx+1] +
cmp al 4Ch +
jz loc_42BB91  +
cmp al 2Eh +
setz al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
cmp byte ptr [edx+2] 4Ch +
jnz loc_42BB9E  +
cmp byte ptr [edx+3] 5Fh +
jnz loc_42BB9E  +
jmp loc_42BB91  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_elf_get_l +
mov dword ptr [esp+4] 1FE5h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_404070  +
nop   +
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx] +
cmp ecx eax +
jz loc_42BC14  +
test eax eax +
jz loc_42BC14  +
test ecx ecx +
jnz loc_42BC26  +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov [esp+8] edx +
pop ebx  +
jmp sub_407D90  +
***
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov edi [esp+64h] +
mov esi [esp+70h] +
mov ebx [esp+74h] +
mov eax [ebp+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_48D0C0 +
mov [esp+18h] ebx +
add eax 230h +
mov [esp+2Ch] eax +
mov eax [esp+7Ch] +
mov [esp+14h] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
mov eax [esp+6Ch] +
mov [esp+10h] eax +
mov eax [esp+68h] +
mov [esp+0Ch] eax +
call sub_449FE0  +
test eax eax +
jz loc_42BCC0  +
mov ecx [ebx] +
test ecx ecx +
jz loc_42BD82  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+78h] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+18h] eax +
mov eax [esp+6Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_44CBA0  +
test eax eax +
jnz loc_42BCA6  +
mov eax [ebp+0A0h] +
mov [esp+18h] ebx +
mov [esp+14h] esi +
mov [esp+4] edi +
add eax 228h +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
lea eax [esp+3Ch] +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_413910  +
test eax eax +
jz loc_42BDE0  +
mov ecx [esp+3Ch] +
test ecx ecx +
jnz loc_42BDC0  +
test edi edi +
jz loc_42BDE0  +
mov eax [esp+6Ch] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp] ebp +
mov [esp+8] eax +
call sub_449DD0  +
test eax eax +
jz loc_42BDE0  +
mov eax [esp+78h] +
mov dword ptr [eax] 0 +
jmp loc_42BCB0  +
***
mov edx [esi] +
xor eax eax +
mov [esp+14h] ebx +
mov [esp+4] edi +
mov [esp] ebp +
test edx edx +
cmovz eax esi +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_449DD0  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
test edx edx +
jnz loc_42BCB0  +
mov eax [esp+78h] +
mov eax [eax] +
test eax eax +
jz loc_42BD43  +
jmp loc_42BCB0  +
***
xor eax eax +
jmp loc_42BCB5  +
***
sub esp 3Ch +
mov eax [esp+40h] +
mov ecx [eax+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_48D0C0 +
mov dword ptr [esp+20h] 0 +
lea edx [ecx+230h] +
mov [esp+2Ch] edx +
mov edx [esp+50h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+1Ch] edx +
mov edx [esp+4Ch] +
mov [esp] eax +
mov [esp+14h] edx +
mov edx [esp+48h] +
mov [esp+8] edx +
mov edx [esp+44h] +
mov [esp+4] edx +
call sub_449FE0  +
add esp 3Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+30h] +
mov ecx [eax+0A0h] +
mov [esp] eax +
lea edx [ecx+230h] +
mov [esp+10h] edx +
mov edx [esp+3Ch] +
mov [esp+0Ch] edx +
mov edx [esp+38h] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+4] edx +
call sub_449540  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
movzx ecx byte ptr [edx] +
mov eax [eax+1B0h] +
and ecx 3 +
cmp cl 2 +
mov edi [eax+174h] +
movzx esi byte ptr [edi] +
mov eax esi +
movzx eax al +
jz loc_42BEFF  +
mov eax [ebx+0A0h] +
mov ebp [eax+934h] +
mov eax [ebp+1Ch] +
cmp eax 0FFFFFFFFh +
jz loc_42BF07  +
mov edx esi +
movzx esi dl +
mov [ebp+1Ch] eax +
add eax esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [ebp+0] +
test ecx ecx +
jz loc_42BF20  +
movzx edi byte ptr [edi+1] +
xor eax eax +
mov ecx [ecx] +
add eax edi +
test ecx ecx +
jnz loc_42BF14  +
test eax eax +
jnz loc_42BEF5  +
mov eax ebx +
call sub_41F720  +
mov edx [ebx+0A0h] +
mov ebp [edx+934h] +
jmp loc_42BEF5  +
***
add esi eax +
adc edi edx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] ebx +
call sub_403BF0  +
test eax eax +
jz loc_42C032  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
add esi ebp +
mov [esp] esi +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_425080  +
test eax eax +
jnz loc_42BF5D  +
jmp loc_42BFA6  +
***
mov eax [esp+44h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_403A90  +
cmp [esp+44h] eax +
setz al  +
add esp 1Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov eax [ebx] +
mov ecx [esi+4] +
mov eax [eax] +
mov eax [eax] +
cmp [eax+4] ecx +
jz loc_42C218  +
mov eax [ebx+0Ch] +
mov edx [eax+10h] +
mov ecx [eax+0Ch] +
test edx edx +
lea edx [ecx-8] +
jz loc_42C0E0  +
cmp edx 38h +
ja loc_42C108  +
jmp ds:off_48A4EC[edx*4]  +
cmp edx 38h +
ja loc_42C108  +
jmp ds:off_48A5D0[edx*4]  +
mov eax 6 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_418D80  +
test eax eax +
jnz loc_42C165  +
mov eax [ebx+0Ch] +
mov eax [eax+20h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] offset aBUnsupportedRe +
mov [esp+14h+var_C] eax +
call off_4733A4  +
mov [esp+14h+var_14] 11h +
call sub_4040F0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax 0Ch +
lea esi [esi+0] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_418D80  +
mov ecx [ebx+0Ch] +
mov edx [eax+30h] +
cmp [ecx+30h] edx +
jz loc_42C165  +
test edx edx +
mov edx [ebx+4] +
jz loc_42C210  +
add [ebx+8] edx +
mov [ebx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax 0Dh +
jmp loc_42C140  +
mov eax 1 +
jmp loc_42C0F5  +
mov eax 2 +
jmp loc_42C0F5  +
mov eax 3 +
jmp loc_42C0F5  +
mov eax 5 +
jmp loc_42C0F5  +
mov eax 7 +
jmp loc_42C0F5  +
mov eax 8 +
jmp loc_42C140  +
mov eax 9 +
jmp loc_42C140  +
mov eax 0Ah +
jmp loc_42C140  +
mov eax 0Bh +
jmp loc_42C140  +
sub [ebx+8] edx +
jmp loc_42C165  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov esi [ebx+0A0h] +
and eax 7 +
cmp al 1 +
jz loc_42C258  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_417DD0  +
***
test esi esi +
jz loc_42C24A  +
mov eax [esi+934h] +
test eax eax +
jz loc_42C275  +
mov eax [eax+4] +
test eax eax +
jz loc_42C275  +
mov [esp] eax +
call sub_44B1F0  +
add esi 230h +
mov [esp+4] esi +
mov [esp] ebx +
call sub_449590  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_417DD0  +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_0] +
mov esi [esp+9Ch+arg_C] +
mov edi [esp+9Ch+arg_10] +
mov eax [ebx+0A0h] +
mov edx [eax+930h] +
mov eax [edx+8] +
test eax eax +
jnz loc_42C2E5  +
mov eax [edx+4] +
mov [esp+9Ch+var_90] eax +
mov eax [esp+9Ch+arg_4] +
lea ebp [esp+9Ch+var_70] +
mov [esp+9Ch+var_98] offset aSD +
mov [esp+9Ch+var_9C] ebp +
mov [esp+9Ch+var_94] eax +
call sprintf  +
mov eax ebp +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_42C30A  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
sub eax ebp +
lea ecx [eax+1] +
mov [esp+9Ch+var_98] ecx +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_80] ecx +
call sub_406290  +
mov ecx [esp+9Ch+var_80] +
test eax eax +
jz loc_42C3C0  +
mov [esp+9Ch+var_94] ecx +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] eax +
mov [esp+9Ch+var_80] eax +
call memcpy  +
mov edx [esp+9Ch+var_80] +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_98] edx +
call sub_403090  +
test eax eax +
jz loc_42C3C0  +
mov edx [esp+9Ch+arg_8] +
mov ecx eax +
mov [eax+50h] esi +
mov [eax+54h] edi +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx [esp+9Ch+arg_4] +
mov eax ebx +
call sub_41FEE0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_4] +
mov esi [esp+9Ch+arg_0] +
mov eax [ebx+8] +
cmp eax 8 +
jz loc_42C4A0  +
jbe loc_42C458  +
cmp eax 9 +
jz loc_42C430  +
cmp eax 0Ah +
nop   +
jnz loc_42C490  +
mov eax dword_473760 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg2 +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_41FF50  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_473760 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_41FF50  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 7 +
jnz loc_42C490  +
mov edi [ebx+14h] +
mov eax [ebx+4] +
mov [esp+9Ch+var_9C] esi +
mov [esp+9Ch+var_8C] 0 +
mov [esp+9Ch+var_90] edi +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_info +
call sub_42C2B0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+0A0h] +
mov edi [ebx+10h] +
mov ebp [eax+930h] +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
lea edx [edi+4] +
mov [ebp+4] eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
lea edx [edi+8] +
add edi 0Eh +
mov dword_473760 eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
mov ebp eax +
mov eax [esi+4] +
mov eax [eax+34h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
test ax ax +
jle loc_42C5E0  +
mov edx [esi+0A0h] +
cwde   +
mov edx [edx+930h] +
mov [edx] eax +
mov eax dword_473760 +
mov [edx+8] eax +
and ebp 80h +
jz loc_42C525  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
lea edi [esp+9Ch+var_70] +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_stat +
mov [esp+9Ch+var_9C] edi +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_42C53F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx edi +
add edx 1 +
mov [esp+9Ch+var_98] edx +
mov [esp+9Ch+var_9C] esi +
call sub_406290  +
test eax eax +
mov ebp eax +
jz loc_42C5F0  +
mov [esp+9Ch+var_98] edi +
mov [esp+9Ch+var_9C] eax +
call strcpy  +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] esi +
call sub_403090  +
test eax eax +
jz loc_42C5F0  +
mov edx [ebx+4] +
mov ecx eax +
mov edi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx offset a_qnx_core_st_0 +
mov [eax+50h] edi +
mov eax esi +
call sub_41FEE0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_473760 +
jmp loc_42C50E  +
xor eax eax +
jmp loc_42C423  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov eax [esp+4Ch+arg_0] +
mov edx [ebx+8] +
mov eax [eax+4] +
cmp edx 304h +
mov ecx [eax+1B0h] +
jz loc_42CF00  +
jbe loc_42C6C8  +
cmp edx 400h +
jz loc_42CA21  +
ja loc_42C752  +
cmp edx 307h +
jz loc_42CC25  +
nop   +
lea esi [esi+0] +
jbe loc_42C8D0  +
cmp edx 309h +
jz loc_42CE00  +
jb loc_42CD28  +
cmp edx 30Ah +
jnz loc_42C7E1  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsHi +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp edx 100h +
jz loc_42CF54  +
jbe loc_42C7B7  +
cmp edx 300h +
jz loc_42CC80  +
jbe loc_42C858  +
cmp edx 302h +
jz loc_42CE54  +
ja loc_42CAF4  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Timer +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp edx 403h +
jz loc_42CCD4  +
nop   +
jbe loc_42C7F0  +
cmp edx 46E62B7Fh +
jz loc_42CEA8  +
cmp edx 53494749h +
jz loc_42CBF4  +
cmp edx 46494C45h +
jnz loc_42C7E1  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxcor +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp edx 3 +
jz loc_42CDE1  +
jbe loc_42C935  +
cmp edx 0Dh +
jz loc_42CDE1  +
cmp edx 12h +
jz loc_42C980  +
cmp edx 6 +
jz loc_42CD80  +
mov ebp 1 +
jmp loc_42C973  +
cmp edx 401h +
jz loc_42CAA0  +
cmp edx 402h +
jnz loc_42C7E1  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwBre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp edx 102h +
jz loc_42CBA0  +
cmp edx 202h +
jnz loc_42C7E1  +
mov eax [ebx] +
cmp eax 6 +
jz loc_42CFA8  +
cmp eax 8 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aFreebsd +
mov ecx 8 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXstate +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp edx 305h +
jz loc_42CB48  +
cmp edx 306h +
jnz loc_42C7E1  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390LastBr +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp edx 1 +
jz loc_42CA75  +
cmp edx 2 +
jnz loc_42C7E1  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_reg2 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+4] 2D7h +
jbe loc_42C7E1  +
mov esi [ebx+0Ch] +
mov edi offset aWin32 +
mov ecx 5 +
cmps   +
jnz loc_42C7E1  +
mov edx [ebx+10h] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
cmp eax 2 +
jz loc_42D075  +
cmp eax 3 +
jz loc_42CFCF  +
cmp eax 1 +
jnz loc_42C7E1  +
mov eax [esp+4Ch+arg_0] +
mov ebp 1 +
mov edi [ebx+10h] +
mov eax [eax+0A0h] +
lea edx [edi+8] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [ebx+10h] +
add edx 0Ch +
mov [esi+4] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+0A0h] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esi] eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regArmVfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
mov eax [ecx+0FCh] +
mov ebp 1 +
test eax eax +
jz loc_42C973  +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call eax  +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchTls +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todpre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Prefix +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVsx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxc_0 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390System +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390HighGp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov esi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwWat +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Tdb +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
mov eax [esp+4Ch+arg_0] +
xor ebp ebp +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] offset a_auxv +
mov [esp+4Ch+var_4C] eax +
call sub_403090  +
test eax eax +
mov esi eax +
jz loc_42C973  +
mov eax [ebx+4] +
mov bp 1 +
mov [esi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call loc_4045D0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [esi+40h] eax +
jmp loc_42C973  +
mov eax [ecx+100h] +
mov ebp 1 +
test eax eax +
jnz loc_42CA88  +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsLo +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todcmp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Ctrs +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42C973  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVmx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42C2B0  +
mov ebp eax +
jmp loc_42C973  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
mov ebp 1 +
cmps   +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_42C973  +
jmp loc_42C89E  +
mov eax [esp+4Ch+arg_0] +
lea esi [esp+4Ch+var_2A] +
mov edi [ebx+10h] +
mov eax [eax+4] +
lea edx [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_module08lx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
test eax eax +
mov edi eax +
jz loc_42D14F  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_403090  +
test eax eax +
jz loc_42D14F  +
mov edx [ebx+4] +
mov ebp 1 +
mov esi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov [eax+50h] esi +
jmp loc_42C973  +
mov eax [esp+4Ch+arg_0] +
mov esi [ebx+10h] +
mov eax [eax+4] +
lea edx [esi+8] +
lea esi [esp+4Ch+var_2A] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_regLd +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_406290  +
test eax eax +
mov edi eax +
jz loc_42D14F  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_403090  +
test eax eax +
mov esi eax +
jz loc_42D14F  +
mov dword ptr [eax+24h] 2CCh +
mov eax [ebx+14h] +
mov edx [ebx+10h] +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+40h] 2 +
add eax 0Ch +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
add edx 8 +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
test eax eax +
jz loc_42C7E1  +
mov eax [esp+4Ch+arg_0] +
mov ecx esi +
mov edx offset a_reg +
call sub_41FEE0  +
test eax eax +
setnz al  +
movzx eax al +
mov ebp eax +
jmp loc_42C973  +
xor ebp ebp +
jmp loc_42C973  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_8] ebx +
call memchr  +
mov edx eax +
sub edx edi +
test eax eax +
cmovnz ebx edx +
lea eax [ebx+1] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_406290  +
test eax eax +
mov esi eax +
jz loc_42D1B8  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call memcpy  +
mov byte ptr [esi+ebx] 0 +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_42D1D0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov edx [ebx+8] +
cmp edx 0Ah +
jz loc_42D2C8  +
cmp edx 14h +
jz loc_42D340  +
cmp edx 15h +
jz loc_42D370  +
cmp edx 16h +
jz loc_42D3A0  +
cmp edx 0Bh +
jz loc_42D270  +
cmp edx 17h +
mov edi 1 +
jz loc_42D220  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_wcookie +
mov [esp+2Ch+var_2C] esi +
call sub_403090  +
test eax eax +
mov ebp eax +
jz loc_42D3D0  +
mov eax [ebx+4] +
mov [ebp+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [ebp+54h] 0 +
mov [ebp+50h] eax +
mov [esp+2Ch+var_2C] esi +
call loc_4045D0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [ebp+40h] eax +
jmp loc_42D215  +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_auxv +
mov [esp+2Ch+var_2C] esi +
call sub_403090  +
test eax eax +
mov edi eax +
jz loc_42D3D0  +
mov eax [ebx+4] +
mov [edi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov [esp+2Ch+var_2C] esi +
call loc_4045D0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [edi+40h] eax +
mov edi 1 +
jmp loc_42D215  +
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+20h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov [esp+2Ch+var_24] 1Fh +
mov eax [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
add eax 48h +
mov [esp+2Ch+var_28] eax +
call sub_42D160  +
mov [edi+10h] eax +
mov edi 1 +
jmp loc_42D215  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42C2B0  +
mov edi eax +
jmp loc_42D215  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42C2B0  +
mov edi eax +
jmp loc_42D215  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_regXfp +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42C2B0  +
mov edi eax +
jmp loc_42D215  +
xor edi edi +
jmp loc_42D215  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov dword ptr [esp+4] 40h +
mov esi [esp+30h] +
mov eax [ebx+0Ch] +
mov [esp] eax +
call strchr  +
test eax eax +
jz loc_42D41F  +
add eax 1 +
mov [esp] eax +
call atoi  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
mov edx [ebx+8] +
cmp edx 1 +
jz loc_42D4D5  +
cmp edx 1Fh +
mov edi 1 +
ja loc_42D440  +
add esp 20h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] esi +
call sub_407CF0  +
cmp eax 6 +
jz loc_42D490  +
cmp eax 26h +
jz loc_42D490  +
mov eax [ebx+8] +
cmp eax 21h +
jz loc_42D4A4  +
cmp eax 23h +
jnz loc_42D435  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg2 +
call sub_42C2B0  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [ebx+8] +
cmp eax 20h +
jz loc_42D4A4  +
cmp eax 22h +
jz loc_42D45F  +
mov edi 1 +
jmp loc_42D435  +
***
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg +
call sub_42C2B0  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+50h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov dword ptr [esp+8] 1Fh +
mov eax [ebx+10h] +
mov [esp] esi +
add eax 7Ch +
mov [esp+4] eax +
call sub_42D160  +
mov ecx [ebx+14h] +
mov [edi+10h] eax +
mov eax [ebx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+4] offset a_note_netbsdco +
mov [esp+8] eax +
mov [esp] esi +
call sub_42C2B0  +
mov edi eax +
jmp loc_42D435  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_18] +
test edx edx +
jz loc_42D696  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea esi [eax+1] +
add eax 4 +
and eax 0FFFFFFFCh +
lea edx [ebx+3] +
and edx 0FFFFFFFCh +
lea ecx [eax+edx+0Ch] +
mov edx [esp+1Ch+arg_8] +
mov eax ecx +
mov [esp+1Ch+var_10] ecx +
add eax [edx] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call realloc  +
test eax eax +
mov ebp eax +
jz loc_42D68C  +
mov eax [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax] +
lea edi [ebp+eax+0] +
add ecx eax +
mov eax [esp+1Ch+arg_8] +
mov [eax] ecx +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+4] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+8] +
add edi 0Ch +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov ecx [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] ecx +
call eax  +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_42D661  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] eax +
call memcpy  +
lea ecx [edi+esi] +
test esi 3 +
mov edi ecx +
jz loc_42D661  +
add edi 1 +
lea eax [edi+esi] +
sub eax ecx +
test al 3 +
mov byte ptr [edi-1] 0 +
jnz loc_42D651  +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] edi +
add edi ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test bl 3 +
jz loc_42D68C  +
sub edi ebx +
nop   +
mov byte ptr [edi+ebx] 0 +
add ebx 1 +
test bl 3 +
jnz loc_42D680  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor esi esi +
jmp loc_42D59C  +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_42D6F1  +
mov ecx [esp+40h] +
mov dword ptr [esp+0Ch] 3 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_42D6F1  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_42D6EC  +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 1Fh +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0CCh] +
lea ebp [esp+24h] +
mov edi ebp +
mov esi [esp+0C0h] +
stos   +
lea ecx [esp+28h] +
movzx eax byte ptr [ebx] +
mov edx [ebx+4] +
mov [esp+24h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+25h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+26h] al +
movzx eax byte ptr [ebx+3] +
mov [esp+27h] al +
mov eax [esi+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Ch] +
mov edx [ebx+8] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Eh] +
mov edx [ebx+0Ch] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+30h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+38h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+3Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+40h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0C8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 7Ch +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_42D570  +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 22h +
push esi  +
push ebx  +
sub esp 0BCh +
mov ebx [esp+0DCh] +
lea ebp [esp+28h] +
mov edi ebp +
mov esi [esp+0D0h] +
stos   +
lea edx [esp+2Ch] +
movzx eax byte ptr [ebx] +
mov [esp+28h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+29h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+2Ah] al +
movzx eax byte ptr [ebx+3] +
mov [esp+2Bh] al +
mov eax [esi+4] +
mov eax [eax+48h] +
mov [esp+8] edx +
mov edi [ebx+4] +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call eax  +
mov eax [esi+4] +
lea ecx [esp+38h] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+3Ch] +
mov edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+40h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+44h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+48h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+4Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+50h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+60h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0D8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 88h +
mov [esp+8] eax +
mov eax [esp+0D4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_42D570  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_42DA30  +
mov ecx [esp+44h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+18h] ecx +
mov ecx [esp+40h] +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_42DA30  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_42DA24  +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 46E62B7Fh +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov edx [esp+30h] +
mov eax [edx+4] +
mov ecx [eax+1B0h] +
mov eax offset aFreebsd +
cmp dword ptr [ecx+0Ch] 9 +
mov ecx offset aLinux +
mov dword ptr [esp+10h] 202h +
mov [esp] edx +
cmovnz eax ecx +
mov ecx [esp+40h] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+18h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+14h] ecx +
mov [esp+4] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 100h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 102h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 301h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 302h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 303h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 304h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 305h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 306h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 307h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 308h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 309h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 30Ah +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 400h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 401h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 402h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 403h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D570  +
add esp 2Ch +
retn   +
***
push ebp  +
mov ecx 6 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov edi [esp+64h] +
mov ebp [esp+58h] +
mov ebx [esp+60h] +
mov [esp+24h] eax +
mov eax [esp+54h] +
mov [esp+2Ch] edi +
mov edi offset a_reg2 +
mov [esp+28h] eax +
mov eax [esp+5Ch] +
mov esi eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_42E227  +
mov edi offset a_regXfp +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_42E2B0  +
mov edi offset a_regXstate +
mov ecx 0Ch +
mov esi eax +
cmps   +
jz loc_42E263  +
mov edi offset a_regPpcVmx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_42E2C6  +
mov edi offset a_regPpcVsx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_42E2E0  +
mov edi offset a_regS390HighGp +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_42E2F6  +
mov edi offset a_regS390Timer +
mov ecx 10h +
mov esi eax +
cmps   +
jz loc_42E290  +
mov edi offset a_regS390Todcmp +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_42E330  +
mov edi offset a_regS390Todpre +
mov ecx 12h +
mov esi eax +
cmps   +
jz loc_42E350  +
mov edi offset a_regS390Ctrs +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_42E370  +
mov edi offset a_regS390Prefix +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_42E390  +
mov edi offset a_regS390LastBr +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_42E3B0  +
mov edi offset a_regS390System +
mov ecx 16h +
mov esi eax +
cmps   +
jz loc_42E310  +
mov edi offset a_regS390Tdb +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_42E3D0  +
mov edi offset a_regS390VxrsLo +
mov ecx 13h +
mov esi eax +
cmps   +
jz loc_42E3E9  +
mov edi offset a_regS390VxrsHi +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_42E402  +
mov edi offset a_regArmVfp +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_42E41B  +
mov edi offset a_regAarchTls +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_42E434  +
mov edi offset a_regAarchHwBre +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_42E44D  +
mov esi eax +
mov ecx 14h +
mov edi offset a_regAarchHwWat +
cmps   +
setnbe al  +
setb cl  +
mov esi eax +
xor eax eax +
mov edx esi +
cmp dl cl +
jnz loc_42E25B  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 403h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+28h] +
mov [esp+8] ebp +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_42D570  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+2Ch] +
mov [esp+5Ch] ebx +
mov [esp+58h] ebp +
mov [esp+60h] eax +
mov eax [esp+28h] +
mov [esp+54h] eax +
mov eax [esp+24h] +
mov [esp+50h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_42DAE0  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 301h +
mov [esp+18h] eax +
mov dword ptr [esp+0Ch] offset aLinux +
jmp loc_42E243  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 46E62B7Fh +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 100h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 102h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 300h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 307h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 302h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 303h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 304h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 305h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 306h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 308h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 309h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 30Ah +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 400h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 401h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 402h +
mov [esp+18h] eax +
jmp loc_42E2A4  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_42E490  +
mov eax [eax+0A0h] +
mov eax [eax+30h] +
shl eax 5 +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
jmp loc_42E48C  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_42E4F0  +
mov eax [eax+0A0h] +
mov ebx [eax+30h] +
mov eax [eax+44h] +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+24h] +
shl edx 5 +
mov [esp+8] edx +
mov [esp] eax +
call memcpy  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4040F0  +
mov eax 0FFFFFFFFh +
jmp loc_42E4E8  +
***
xor eax eax +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov eax [esp+10h+arg_4] +
mov ebx [edi] +
mov edx [eax] +
mov ecx [ebx+3Ch] +
mov esi [ebx+38h] +
add esi edx +
add esi [ecx+1Ch] +
test byte ptr [ebx+16h] 80h +
jz loc_42E54E  +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_42E557  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jnz loc_42E54E  +
mov eax [ebx+8Ch] +
mov ecx [esp+10h+arg_C] +
mov eax [eax+88h] +
add edx [ecx+8] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] edx +
mov [esp+10h+var_10] eax +
call sub_44DB80  +
mov edx [edi] +
mov ecx [esp+10h+arg_C] +
cmp edx ebx +
mov [ecx+8] eax +
jz loc_42E5A8  +
test byte ptr [ebx+15h] 80h +
jz loc_42E5C0  +
mov [ebx+7Ch] edx +
mov ebx [edi] +
mov ecx [ebx+3Ch] +
mov edx [ebx+38h] +
mov edi [esp+10h+arg_C] +
add edx [ecx+1Ch] +
sub edx esi +
add eax edx +
mov [edi+8] eax +
jmp loc_42E54E  +
mov ebx edx +
jmp loc_42E5A8  +
***
push ebx  +
mov ecx [esp+arg_8] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
mov ebx [ecx] +
movzx edx word ptr [ebx+18h] +
and dx 380h +
cmp dx 100h +
jz loc_42E5F7  +
add eax [esi] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+8Ch] +
add eax [esi] +
mov edx [edx+88h] +
mov [esp+arg_C] eax +
mov [esp+arg_4] ecx +
mov [esp+arg_8] edx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_44DB80  +
***
mov ecx [esp+arg_8] +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
movzx edx word ptr [ecx+18h] +
shr dx 7 +
and edx 7 +
cmp edx 1 +
jz loc_42E690  +
cmp edx 3 +
jnz loc_42E660  +
mov [esp+arg_C] eax +
mov [esp+arg_8] ecx +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
jmp sub_4447B0  +
test byte ptr [ecx+17h] 4 +
jz loc_42E688  +
mov edx [ecx+24h] +
sub edx eax +
mov eax edx +
mov edx [ebx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx edx byte ptr [edx+0Ah] +
shr dl 3 +
movzx edx dl +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
mov edx [ecx+8Ch] +
mov edx [edx+88h] +
mov [esp+arg_8] eax +
mov [esp+arg_0] ecx +
mov [esp+arg_4] edx +
pop ebx  +
pop esi  +
jmp loc_44EBE0  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+13Ch] +
jmp edx  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov eax [esi+4] +
mov edi [eax+1B0h] +
mov eax [esp+84h] +
mov dword ptr [eax] 0 +
mov eax [esi+28h] +
shr eax 5 +
test al 42h +
jz loc_42E744  +
mov ebx [esp+7Ch] +
test ebx ebx +
jle loc_42E744  +
mov ecx [edi+140h] +
test ecx ecx +
jz loc_42E744  +
mov eax [edi+168h] +
test eax eax +
jz loc_42E9D0  +
mov [esp+4] eax +
mov [esp] esi +
call sub_402CB0  +
test eax eax +
mov ebp eax +
jz loc_42E744  +
mov ebx [eax+8Ch] +
mov eax [esi+0A0h] +
mov eax [eax+910h] +
cmp [ebx+1Ch] eax +
jz loc_42E750  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+4] +
cmp eax 4 +
jz loc_42E75D  +
cmp eax 9 +
jnz loc_42E744  +
mov dword ptr [esp+4] offset a_plt +
mov [esp] esi +
call sub_402CB0  +
test eax eax +
mov [esp+24h] eax +
jz loc_42E744  +
mov eax [esi+4] +
mov edx [esp+80h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] ebp +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_42EA02  +
mov eax [ebp+24h] +
xor edx edx +
div  dword ptr [ebx+28h] +
mov edx [ebp+44h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [eax+eax*2] +
shl eax 3 +
test ecx ecx +
mov ebx eax +
mov [esp+18h] eax +
jle loc_42E9F9  +
mov eax [edi+174h] +
xor ecx ecx +
mov [esp+20h] edi +
mov [esp+28h] ebp +
mov ebp edx +
mov [esp+70h] esi +
mov esi ecx +
movzx eax byte ptr [eax+9] +
shl eax 4 +
mov edi eax +
mov eax [ebp+0] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp] eax +
call strlen  +
mov edx [ebp+8] +
add eax ebx +
lea ebx [eax+5] +
add eax 10h +
test edx edx +
cmovnz ebx eax +
add esi 1 +
add ebp edi +
cmp [esp+1Ch] esi +
jnz loc_42E7F1  +
mov edi [esp+20h] +
mov ebp [esp+28h] +
mov esi [esp+70h] +
mov [esp] ebx +
call sub_408000  +
mov ebx eax +
mov eax [esp+84h] +
test ebx ebx +
mov [eax] ebx +
jz loc_42EA02  +
mov eax [esp+18h] +
mov ecx [ebp+44h] +
mov ebp [esp+1Ch] +
add eax ebx +
test ebp ebp +
jle loc_42E744  +
mov [esp+20h] edi +
mov edi eax +
mov [esp+70h] esi +
mov esi ecx +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_42E8B2  +
add dword ptr [esp+2Ch] 1 +
add edi 5 +
add ebx 18h +
mov dword ptr [edi-5] 746C7040h +
mov byte ptr [edi-1] 0 +
mov eax [esp+20h] +
add dword ptr [esp+18h] 1 +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
shl eax 4 +
add esi eax +
mov eax [esp+18h] +
cmp [esp+1Ch] eax +
jz loc_42E9F0  +
mov ecx [esp+24h] +
mov eax [esp+20h] +
mov eax [eax+140h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp+8] esi +
mov [esp] ecx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_42E88C  +
mov ecx [esi] +
mov edx [ecx] +
mov [esp+28h] ecx +
mov ebp [edx] +
mov [ebx] ebp +
mov ebp [edx+4] +
mov [ebx+4] ebp +
mov ebp [edx+8] +
mov [ebx+8] ebp +
mov ebp [edx+0Ch] +
mov [ebx+0Ch] ebp +
mov ecx [edx+10h] +
test ebp 1 +
mov [ebx+10h] ecx +
mov edx [edx+14h] +
mov [ebx+14h] edx +
jnz loc_42E90B  +
or ebp 2 +
mov edx [esp+24h] +
or ebp 200000h +
mov [ebx+0Ch] ebp +
sub eax [edx+1Ch] +
mov [ebx+10h] edx +
mov [ebx+4] edi +
mov [ebx+8] eax +
mov eax [esp+28h] +
mov dword ptr [ebx+14h] 0 +
mov eax [eax] +
mov edx [eax+4] +
mov [esp] edx +
mov [esp+28h] edx +
call strlen  +
mov edx [esp+28h] +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov edx [esi+8] +
add edi ebp +
test edx edx +
jz loc_42E876  +
mov eax 302Bh +
mov [edi] ax +
lea eax [edi+3] +
mov byte ptr [edi+2] 78h +
lea edi [esp+32h] +
mov [esp+28h] eax +
mov eax [esi+8] +
mov [esp+8] eax +
lea eax [esp+32h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_404A00  +
cmp byte ptr [esp+32h] 30h +
jnz loc_42E9A8  +
lea esi [esi+0] +
add edi 1 +
cmp byte ptr [edi] 30h +
jz loc_42E9A0  +
mov [esp] edi +
call strlen  +
mov [esp+4] edi +
mov edi [esp+28h] +
mov [esp] edi +
mov ebp eax +
mov [esp+8] eax +
lea edi [edi+ebp] +
call memcpy  +
jmp loc_42E876  +
***
test byte ptr [edi+1ACh] 20h +
mov eax offset a_rela_plt +
mov edx offset a_rel_plt +
cmovz eax edx +
jmp loc_42E71B  +
***
mov eax [esp+2Ch] +
jmp loc_42E746  +
***
mov ebx [esp+18h] +
jmp loc_42E828  +
***
mov eax 0FFFFFFFFh +
jmp loc_42E746  +
***
mov eax [esp+4] +
and eax 0FFFFFFF7h +
cmp eax 2 +
setz al  +
movzx eax al +
retn   +
***
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [eax+78h] +
test byte ptr [edx+34h] 10h +
jnz loc_42EAEE  +
movzx ebx byte ptr [eax] +
and ebx 3 +
cmp bl 2 +
jz loc_42EAEE  +
test byte ptr [eax+1] 4 +
jz loc_42EAE4  +
cmp byte ptr [edx+30h] 1 +
jz loc_42EB17  +
test ecx ecx +
jz loc_42EAE4  +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 1 +
jz loc_42EB17  +
test esi esi +
jz loc_42EAEE  +
cmp byte ptr [edx+0Ch] 0 +
jz loc_42EAF4  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+4] +
mov eax [esi+10h] +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_14] esi +
call eax  +
mov edx [esp+14h+var_8] +
test eax eax +
jz loc_42EAEE  +
or byte ptr [edx+34h] 10h +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_42EB30  +
***
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+18h] +
sub eax [edx+18h] +
cmp eax 0 +
jz loc_42EB56  +
mov eax 0FFFFFFFFh +
jle loc_42EB54  +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ecx+14h] +
mov ebx [edx+14h] +
mov eax [eax+4] +
sub eax [ebx+4] +
cmp eax 0 +
jz loc_42EB70  +
jg loc_42EB4F  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
mov ecx [ecx+2Ch] +
xor eax eax +
sub ecx [edx+2Ch] +
cmp ecx 0 +
jz loc_42EB54  +
jg loc_42EB4F  +
jmp loc_42EB69  +
***
jmp loc_42EB90  +
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+10h] +
sub eax [edx+10h] +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
or eax ecx +
shl edx 18h +
or eax edx +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
mov eax [esp+arg_0] +
movzx ecx byte ptr [eax+1] +
movzx edx byte ptr [eax+2] +
shl ecx 8 +
shl edx 10h +
or edx ecx +
movzx ecx byte ptr [eax] +
movzx eax byte ptr [eax+3] +
or edx ecx +
shl eax 18h +
or eax edx +
retn   +
***
mov ecx [esp+arg_0] +
movzx eax byte ptr [ecx+4] +
movzx edx byte ptr [ecx+7] +
shl eax 18h +
or eax edx +
movzx edx byte ptr [ecx+5] +
shl edx 10h +
or edx eax +
movzx eax byte ptr [ecx+6] +
shl eax 8 +
or eax edx +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+44h] +
test eax eax +
jz loc_42ED08  +
mov edx [eax+8] +
test edx edx +
jz loc_42ED08  +
cmp edx 0FFFFFFFFh +
jz loc_42ED08  +
mov eax [eax+4] +
test eax eax +
jz loc_42EC9F  +
mov ebx [eax-4] +
test ebx ebx +
jnz loc_42ED08  +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
call sub_42EC70  +
mov eax [edi+44h] +
mov esi [eax+4] +
test esi esi +
jz loc_42ED14  +
mov eax [eax+8] +
mov dword ptr [esi-4] 1 +
mov eax [eax+44h] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_42ED08  +
mov edx [edi+14h] +
mov edx [edx+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+0Bh] +
mov edx [eax] +
shr edx cl +
test edx edx +
jz loc_42ED08  +
xor eax eax +
mov ecx [ebx+eax*4] +
test ecx ecx +
jz loc_42ED01  +
mov dword ptr [esi+eax*4] 1 +
add eax 1 +
cmp eax edx +
jnz loc_42ECF3  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [eax+8] +
mov edx [edx+44h] +
mov ecx [edx+4] +
mov edx [edx] +
mov [eax+4] ecx +
mov [eax] edx +
jmp loc_42ED08  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_4] +
mov edx [esp+20h+arg_0] +
mov eax [ebx+4] +
mov ecx [eax+30h] +
mov edi [ecx+4] +
mov esi [edi+1B0h] +
mov edi [edx+24h] +
test edi edi +
jg loc_42ED67  +
mov dword ptr [edx+24h] 0FFFFFFFFh +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi [ebx] +
mov [edx+24h] edi +
mov esi [esi+180h] +
mov [esp+20h+var_10] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ecx +
call esi  +
add edi eax +
mov eax 1 +
mov [ebx] edi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov ebx [esp+10h+arg_0] +
mov esi [edx+24h] +
mov ecx [edx] +
mov eax [edx+4] +
test esi esi +
jz loc_42EDBF  +
mov [edx+4] ecx +
mov eax ecx +
mov edi [edx+8] +
cmp eax edi +
jnb loc_42EDE0  +
test esi esi +
mov ecx [eax] +
jnz loc_42EDD0  +
cmp ecx ebx +
ja loc_42EDE0  +
cmp ebx ecx +
jz loc_42EDF0  +
add eax 0Ch +
cmp eax edi +
mov [edx+4] eax +
jb loc_42EDC6  +
nop   +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jz loc_42EE3B  +
cmp eax [edx+14h] +
jb loc_42EE47  +
mov ecx [edx+1Ch] +
sub eax [edx+18h] +
mov eax [ecx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
ja loc_42EE25  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
jbe loc_42EE16  +
sub ecx 3 +
cmp cl 1 +
ja loc_42EDE0  +
mov eax [eax+14h] +
mov edi [edx+10h] +
cmp [eax+94h] edi +
jz loc_42EE75  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+0Ch] +
lea ebx [eax+eax*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_42EE01  +
mov ecx [ebx+10h] +
mov eax [edx+10h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_423A90  +
test eax eax +
jz loc_42EDE0  +
mov edx [eax+7Ch] +
test edx edx +
jnz loc_42EE3B  +
cmp eax offset off_473250 +
jz loc_42EDE0  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jnz loc_42EDE0  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42EDE0  +
cmp ax 200h +
setnz al  +
movzx eax al +
jmp loc_42EE40  +
***
push edi  +
push ebx  +
mov ebx eax +
sub esp 14h +
mov ecx [eax] +
test ecx ecx +
jz loc_42EFD2  +
mov eax [edx+8Ch] +
cmp ecx [eax+68h] +
jz loc_42EFD2  +
mov [esp+18h+var_18] ecx +
call free  +
mov eax [ebx+0Ch] +
mov edx [esi+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_42EFF2  +
cmp eax [edx+78h] +
jz loc_42EFF2  +
mov [esp+18h+var_18] eax +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_4] +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42F02A  +
mov [esp+18h+var_14] 1AA1h +
mov [esp+18h+var_18] offset a____Binutils_4 +
call sub_404040  +
and word ptr [ebx+18h] 0FC7Fh +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
test byte ptr [eax+5] 8 +
mov [esp+4Ch+var_24] edx +
mov [esp+4Ch+var_30] ecx +
jz loc_42F220  +
mov eax [eax+1Ch] +
mov ebx [eax+4Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_20] eax +
mov eax ecx +
shr eax 2 +
test eax eax +
mov edi eax +
jnz loc_42F1EB  +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+arg_0] +
add eax eax +
test edx edx +
mov [esp+4Ch+var_14] eax +
jnz loc_42F279  +
mov [esp+4Ch+var_34] eax +
mov edi 1 +
lea esi [esi+0] +
mov esi [esp+4Ch+var_34] +
mov eax esi +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_42F288  +
cmp edi esi +
jnb loc_42F1D7  +
lea edx ds:0[edi*4] +
mov esi [esp+4Ch+var_30] +
add ebx 2 +
mov [esp+4Ch+var_3C] edx +
mov edx [esp+4Ch+var_24] +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_10] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0FFFFFFFFh +
lea edx [edx+esi*4] +
mov esi edi +
mov [esp+4Ch+var_18] edx +
mov [esp+4Ch+var_1C] ebx +
nop   +
mov edi [esp+4Ch+arg_0] +
test edi edi +
jz loc_42F114  +
test esi 1Fh +
jz loc_42F1C5  +
mov eax [esp+4Ch+var_3C] +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_44] eax +
call memset  +
mov ebx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
test ebx ebx +
jz loc_42F152  +
mov ebx [esp+4Ch+var_18] +
lea esi [esi+0] +
mov eax [ecx] +
xor edx edx +
add ecx 4 +
div  esi +
add dword ptr [ebp+edx*4+0] 1 +
cmp ecx ebx +
jnz loc_42F140  +
mov eax [esp+4Ch+var_20] +
xor ebx ebx +
xor edi edi +
mov ecx [esp+4Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
imul ecx eax +
mov [esp+4Ch+var_38] eax +
nop   +
mov eax [ebp+edi*4+0] +
xor edx edx +
imul eax eax +
add ecx eax +
adc ebx edx +
add edi 1 +
cmp edi esi +
jb loc_42F170  +
mov eax 1000h +
cdq   +
idiv  [esp+4Ch+var_38] +
xor edx edx +
mov edi eax +
mov eax esi +
div  edi +
add eax 1 +
imul eax eax +
imul ebx eax +
mul  ecx +
add edx ebx +
cmp edx [esp+4Ch+var_28] +
jb loc_42F260  +
ja loc_42F1B9  +
cmp eax [esp+4Ch+var_10] +
jb loc_42F260  +
add [esp+4Ch+var_2C] 1 +
cmp [esp+4Ch+var_2C] 64h +
jz loc_42F1D7  +
add esi 1 +
add [esp+4Ch+var_3C] 4 +
cmp [esp+4Ch+var_34] esi +
ja loc_42F100  +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax [esp+4Ch+var_14] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+4Ch+arg_0] +
mov eax ecx +
add eax eax +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_34] eax +
test ebp ebp +
jz loc_42F0A0  +
cmp edi 1 +
jz loc_42F279  +
mov eax [esp+4Ch+var_14] +
and eax 1Fh +
cmp eax 1 +
adc [esp+4Ch+var_14] 0 +
jmp loc_42F0A0  +
mov eax 1 +
xor ecx ecx +
mov ebx [esp+4Ch+var_30] +
jmp loc_42F232  +
mov eax edx +
add ecx 1 +
mov edx ds:dword_48C2A0[ecx*4] +
cmp ebx edx +
jb loc_42F244  +
test edx edx +
jnz loc_42F230  +
cmp eax 1 +
ja loc_42F1E3  +
mov ecx [esp+4Ch+arg_0] +
test ecx ecx +
jz loc_42F1E3  +
add esp 4Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_10] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_14] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_42F1C5  +
mov eax [esp+4Ch+var_14] +
mov edi 2 +
mov [esp+4Ch+var_34] eax +
jmp loc_42F208  +
xor eax eax +
jmp loc_42F1E3  +
***
mov eax [esp+8] +
mov eax [eax+4] +
mov [esp+8] eax +
mov eax [esp+4] +
mov eax [eax+4] +
mov [esp+4] eax +
jmp strcmp  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
test byte ptr [edx] 1 +
mov [esp+34h+var_18] 0 +
jnz loc_42F2D4  +
mov eax [edx+1Ch] +
xor edx edx +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_42F34F  +
mov ebx [edi+64h] +
mov eax [edi+4] +
test ebx ebx +
mov ebp [eax+1B0h] +
jnz loc_42F304  +
jmp loc_42F3C2  +
mov eax [ebx+8Ch] +
mov ebx [ebx+0Ch] +
mov dword ptr [eax+60h] 0 +
test ebx ebx +
jz loc_42F348  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_42F2F0  +
mov eax [ebp+70h] +
mov [esp+34h+var_28] ecx +
mov [esp+34h+var_2C] ebx +
mov [esp+34h+var_30] esi +
mov [esp+34h+var_34] edi +
call eax  +
mov ecx [esp+34h+var_28] +
test eax eax +
jnz loc_42F2F0  +
mov edx [ebx+8Ch] +
mov eax [esp+34h+var_18] +
mov ebx [ebx+0Ch] +
add eax 1 +
test ebx ebx +
mov [esp+34h+var_18] eax +
mov [edx+60h] eax +
jnz loc_42F304  +
mov edx [esp+34h+var_18] +
mov eax [esi+1Ch] +
lea edi [esp+34h+var_18] +
mov [ecx] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] offset loc_42FD40 +
call sub_419ED0  +
mov ebx [esi+1Ch] +
mov eax [ebx+0C0h] +
test eax eax +
jz loc_42F392  +
mov ecx [esp+34h+var_18] +
lea edx [ecx+1] +
jmp loc_42F382  +
mov edx ecx +
mov [eax+0Ch] edx +
mov eax [eax] +
lea ecx [edx+1] +
test eax eax +
jnz loc_42F380  +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_30] offset sub_42FD10 +
call sub_419ED0  +
mov edx [esp+34h+var_18] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
mov edx [esi+1Ch] +
cmovnz eax ecx +
mov [edx+4Ch] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
xor edx edx +
jmp loc_42F34F  +
***
mov eax [esp+34h] +
mov dword ptr [eax+4] 1 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and ebx 1 +
jnz loc_42F570  +
or byte ptr [edx+34h] 1 +
mov eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+4] 48h +
mov [esp] ebx +
call sub_409270  +
test eax eax +
jnz loc_42F4C1  +
xor eax eax +
jmp loc_42F530  +
***
mov byte ptr [edx+2Ch] 0 +
lea ecx [edx+2Dh] +
mov bl 1Bh +
jmp loc_42F504  +
***
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_42F509  +
***
mov byte ptr [ecx] 0 +
jmp loc_42F52A  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+9Ch] +
mov eax [esi+50h] +
test eax eax +
jz loc_42F59E  +
mov [esp+14h+var_14] eax +
call sub_44B1F0  +
mov eax [esi+7Ch] +
mov [esp+14h+var_14] eax +
call sub_44DD60  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_4192E0  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [eax+94h] +
mov esi [edx+94h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
jz loc_42F5E6  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+4] +
cmp dword ptr [edi+4] 5 +
jnz loc_42F5DC  +
mov edi [edx+8Ch] +
mov ebp [eax+8Ch] +
mov edi [edi+4] +
cmp [ebp+4] edi +
jnz loc_42F5DC  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_30] ecx +
mov [esp+5Ch+var_34] edx +
call sub_424FB0  +
mov edx [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] edx +
mov edi eax +
mov [esp+5Ch+var_2C] eax +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
mov [esp+5Ch+var_28] eax +
jz loc_42F5DC  +
cmp edi 0FFFFFEFFh +
jz loc_42F5DC  +
mov eax [ebx+0A0h] +
xor edx edx +
mov ecx eax +
mov [esp+5Ch+var_34] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
mov ecx [esi+0A0h] +
div  edi +
xor edx edx +
mov [esp+5Ch+var_18] ecx +
mov [esp+5Ch+var_20] eax +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
div  edi +
test eax eax +
mov ebp eax +
jz loc_42F5DC  +
mov eax [esp+5Ch+var_20] +
test eax eax +
jz loc_42F5DC  +
mov eax [esp+5Ch+var_34] +
lea edx [ecx+48h] +
mov [esp+5Ch+var_14] edx +
mov [esp+5Ch+var_1C] 0 +
mov edi [eax+24Ch] +
mov eax [ecx+24Ch] +
mov ecx [esp+5Ch+var_30] +
test edi edi +
mov [esp+5Ch+var_24] eax +
jz loc_42F878  +
test edi edi +
jz loc_42F7FC  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_30] 0 +
test eax eax +
jz loc_42F7FC  +
mov ecx [esp+5Ch+var_24] +
test ecx ecx +
jz loc_42F90D  +
test edi edi +
jz loc_42F90D  +
mov [esp+5Ch+var_20] ebx +
mov ebp [edi+4] +
lea eax [edi+0Ch] +
mov ebx [esp+5Ch+var_2C] +
xor edx edx +
mov [esp+5Ch+var_14] esi +
mov esi eax +
mov [esp+5Ch+var_10] eax +
lea esi [esi+0] +
cmp edx ebp +
jnb loc_42F75B  +
lea eax [ebp+edx+0] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_42F74E  +
cmp edx eax +
mov ebp eax +
jnb loc_42F75B  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_42F737  +
cmp ebx ecx +
jbe loc_42F969  +
lea edx [eax+1] +
jmp loc_42F720  +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_2C] 0 +
mov eax [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_24] ebx +
mov ebx [esp+5Ch+var_28] +
mov [esp+5Ch+var_20] esi +
mov ebp [eax+4] +
add eax 0Ch +
mov esi eax +
cmp ebp edx +
jbe loc_42F7C7  +
lea eax [edx+ebp] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_42F7B2  +
cmp edx eax +
mov ebp eax +
jnb loc_42F7C7  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_42F79B  +
cmp ebx ecx +
jbe loc_42F981  +
lea edx [eax+1] +
jmp loc_42F785  +
mov [esp+5Ch+var_30] 0 +
xor edi edi +
mov eax [esp+5Ch+var_1C] +
test eax eax +
jz loc_42F7D9  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov esi [esp+5Ch+var_30] +
mov eax edi +
test esi esi +
jz loc_42F5DE  +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_34] edi +
call free  +
mov eax [esp+5Ch+var_34] +
jmp loc_42F5DE  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_10] ecx +
call sub_421030  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_42F7C7  +
test edi edi +
jz loc_42F90D  +
mov ecx [esp+5Ch+var_10] +
cmp byte ptr [ecx+3] 0 +
js loc_42F6EF  +
mov ecx [esi+0A0h] +
mov edx eax +
mov eax ebp +
mov [esp+5Ch+var_14] ecx +
call loc_471BC0  +
mov ecx [esp+5Ch+var_14] +
mov [esp+5Ch+var_24] eax +
mov [ecx+24Ch] eax +
jmp loc_42F6EF  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebx +
add eax 48h +
mov [esp+5Ch+var_58] eax +
call sub_421030  +
test eax eax +
mov [esp+5Ch+var_1C] eax +
jz loc_42F7BF  +
mov ecx [esp+5Ch+var_30] +
cmp byte ptr [ecx+3] 0 +
jns loc_42FCD5  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call sub_421030  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_42F7C7  +
mov eax [esp+5Ch+var_20] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
call sub_408000  +
mov [esp+5Ch+var_24] eax +
lea eax ds:0[ebp*8] +
mov [esp+5Ch+var_5C] eax +
call sub_408000  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jnz loc_42FB13  +
xor edi edi +
cmp [esp+5Ch+var_24] 0 +
jz loc_42F950  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_14] +
test eax eax +
jz loc_42F7C9  +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_42F7C9  +
mov eax [edi+4] +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_10] edi +
mov [esp+5Ch+var_2C] eax +
jmp loc_42F76B  +
mov edx [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov esi [esp+5Ch+var_20] +
mov eax [edi+4] +
test edx edx +
jz loc_42F7C7  +
test eax eax +
jz loc_42F7C7  +
cmp [esp+5Ch+var_2C] eax +
jnz loc_42F7C7  +
mov eax [esp+5Ch+var_2C] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
mov ebp eax +
mov [esp+5Ch+var_28] eax +
call sub_408000  +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_24] eax +
call sub_408000  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jz loc_42F93B  +
cmp [esp+5Ch+var_24] 0 +
jz loc_42F93B  +
mov eax [esp+5Ch+var_10] +
mov edx [esp+5Ch+var_24] +
mov ebp [eax] +
mov eax [esp+5Ch+var_28] +
add eax ebp +
cmp ebp eax +
mov [esp+5Ch+var_20] eax +
jnb loc_42FA32  +
mov [esp+5Ch+var_10] esi +
mov esi ebx +
mov ebx edx +
mov eax [esp+5Ch+var_34] +
add ebx 8 +
mov [ebx-8] ebp +
mov ecx [ebp+0] +
add ebp 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_420E30  +
mov [ebx-4] eax +
cmp [esp+5Ch+var_20] ebp +
ja loc_42FA02  +
mov esi [esp+5Ch+var_10] +
mov ebx [edi] +
mov ebp [esp+5Ch+var_28] +
mov edi [esp+5Ch+var_14] +
add ebp ebx +
cmp ebx ebp +
jnb loc_42FA6B  +
mov eax [esp+5Ch+var_18] +
add edi 8 +
mov [edi-8] ebx +
mov edx [ebx] +
add ebx 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_420E30  +
mov [edi-4] eax +
cmp ebp ebx +
ja loc_42FA42  +
mov esi [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_42F290 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov [esp+5Ch+var_58] esi +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_42F290 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov eax [esi] +
mov edx [ebx] +
movzx eax word ptr [eax+4] +
cmp [edx+4] ax +
jnz loc_42FB0C  +
mov ebx [esp+5Ch+var_14] +
xor ebp ebp +
mov eax [esp+5Ch+var_24] +
lea edi [ebx+8] +
mov edx ebx +
lea esi [eax+8] +
jmp loc_42FAF6  +
add ebp 1 +
cmp ebp [esp+5Ch+var_2C] +
jz loc_42FCCA  +
mov edx edi +
mov eax esi +
mov ecx [edx] +
add esi 8 +
add edi 8 +
mov ebx [eax] +
movzx ecx word ptr [ecx+4] +
cmp [ebx+4] cx +
jnz loc_42FB0C  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_42FAD1  +
xor edi edi +
jmp loc_42F944  +
mov eax [esp+5Ch+var_24] +
test eax eax +
jz loc_42F93B  +
mov eax [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_1C] +
lea eax [eax+eax*4] +
lea edx [ecx+eax*4] +
cmp edx ecx +
jbe loc_42FD05  +
mov eax ecx +
mov edi ebx +
mov ebx [esp+5Ch+var_2C] +
xor ecx ecx +
mov [esp+5Ch+var_20] esi +
jmp loc_42FB4C  +
add eax 14h +
cmp edx eax +
jbe loc_42FB5D  +
cmp [eax+10h] ebx +
jnz loc_42FB45  +
mov esi [esp+5Ch+var_24] +
mov [esi+ecx*8] eax +
add ecx 1 +
jmp loc_42FB45  +
mov esi [esp+5Ch+var_20] +
mov ebx edi +
mov edi [esp+5Ch+var_30] +
lea eax [ebp+ebp*4+0] +
lea edx [edi+eax*4] +
cmp edx edi +
jbe loc_42FB0C  +
mov eax edi +
xor ebp ebp +
mov edi ecx +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_2C] ebx +
jmp loc_42FB89  +
add eax 14h +
cmp edx eax +
jbe loc_42FB9A  +
cmp [eax+10h] ecx +
jnz loc_42FB82  +
mov ebx [esp+5Ch+var_14] +
mov [ebx+ebp*8] eax +
add ebp 1 +
jmp loc_42FB82  +
mov ecx edi +
xor edi edi +
mov ebx [esp+5Ch+var_2C] +
test ecx ecx +
jz loc_42F944  +
test ebp ebp +
jz loc_42F944  +
cmp ebp ecx +
jnz loc_42F944  +
mov edi [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_2C] esi +
mov esi ebx +
mov ebx edx +
mov eax [edi] +
add ebx 1 +
add edi 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_34] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_420E30  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_42FBC8  +
mov esi [esp+5Ch+var_2C] +
xor edi edi +
mov ebx [esp+5Ch+var_14] +
mov eax [ebx] +
add edi 1 +
add ebx 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_18] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_420E30  +
mov [ebx-4] eax +
cmp edi ebp +
jnz loc_42FBFB  +
mov esi [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_42F290 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov ebx [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_42F290 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov eax [ebx] +
mov edx [esi] +
movzx eax word ptr [eax+0Ch] +
cmp [edx+0Ch] ax +
jnz loc_42FB0C  +
mov eax esi +
mov edx ebx +
lea edi [ebx+8] +
xor ebx ebx +
lea esi [esi+8] +
mov [esp+5Ch+var_34] ebp +
jmp loc_42FCAD  +
add ebx 1 +
cmp ebx [esp+5Ch+var_34] +
jz loc_42FCCA  +
mov edx edi +
mov eax esi +
mov ebp [edx] +
add esi 8 +
add edi 8 +
mov ecx [eax] +
movzx ebp word ptr [ebp+0Ch] +
cmp [ecx+0Ch] bp +
jnz loc_42FB0C  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_42FC88  +
xor edi edi +
jmp loc_42F944  +
mov edi 1 +
nop   +
jmp loc_42F944  +
mov eax [ebx+0A0h] +
mov edx [esp+5Ch+var_1C] +
mov [esp+5Ch+var_10] ecx +
mov [esp+5Ch+var_30] eax +
mov eax [esp+5Ch+var_20] +
call loc_471BC0  +
mov ecx [esp+5Ch+var_10] +
mov edi eax +
mov eax [esp+5Ch+var_30] +
mov [eax+24Ch] edi +
jmp loc_42F6D3  +
xor ecx ecx +
jmp loc_42FB63  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test byte ptr [eax+34h] 8 +
jnz loc_42FD2E  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_42FD2E  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
test byte ptr [eax+34h] 8 +
jz loc_42FD5E  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_42FD5E  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1B0h] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [eax+0E4h] +
test eax eax +
jz loc_42FDA4  +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
test ebx ebx +
jnz loc_42FDD5  +
movzx eax byte ptr [ebp+0Dh] +
movzx edx byte ptr [esi+31h] +
and eax 3 +
mov ecx edx +
movzx ebx al +
and ecx 3 +
sub ebx 1 +
sub ecx 1 +
cmp ebx ecx +
jnb loc_42FDCD  +
and edx 0FFFFFFFCh +
or edx eax +
mov [esi+31h] dl +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_42FDCD  +
test byte ptr [ebp+0Dh] 3 +
jz loc_42FDCD  +
mov eax [esp+28h+arg_0] +
test byte ptr [eax] 8 +
jnz loc_42FDCD  +
or byte ptr [esi+35h] 8 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_42FE3B  +
mov eax [ebx+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] esi +
call eax  +
test eax eax +
jnz loc_42FE48  +
mov eax [ebx+28h] +
cmp [esi+20h] eax +
jl loc_42FE3B  +
mov eax [ebx+34h] +
lea edx [eax+1] +
mov [ebx+34h] edx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+14h] +
xor edx edx +
mov eax [esi+20h] +
mov ecx [ebx+38h] +
mov ebp [edi+eax*4] +
mov eax ebp +
div  dword ptr [ebx+2Ch] +
mov eax ebp +
shr eax cl +
mov [esp+1Ch+var_10] edx +
mov edx [ebx+0Ch] +
shr edx cl +
mov ecx [ebx+40h] +
sub edx 1 +
and eax edx +
mov edx [ebx+20h] +
and ecx ebp +
mov ebp 1 +
shl ebp cl +
lea eax [edx+eax*4] +
or ebp [eax] +
mov [esp+1Ch+var_14] eax +
mov [eax] ebp +
mov edx [esi+20h] +
mov eax 1 +
mov ecx [ebx+3Ch] +
mov edx [edi+edx*4] +
shr edx cl +
and edx [ebx+40h] +
mov ecx edx +
shl eax cl +
mov ecx [ebx+1Ch] +
mov edx eax +
mov eax [esp+1Ch+var_14] +
or edx ebp +
mov ebp [esp+1Ch+var_10] +
mov [eax] edx +
mov eax [esi+20h] +
mov eax [edi+eax*4] +
lea edi ds:0[ebp*4] +
and eax 0FFFFFFFEh +
mov edx eax +
or edx 1 +
cmp dword ptr [ecx+ebp*4] 1 +
cmovz eax edx +
mov edx [ebx] +
mov edx [edx+4] +
mov ecx [edx+30h] +
mov edx [ebx+18h] +
mov edx [edx+ebp*4] +
mov ebp [ebx+24h] +
sub edx [ebx+30h] +
mov [esp+1Ch+var_1C] eax +
lea edx [ebp+edx*4+0] +
mov [esp+1Ch+var_18] edx +
call ecx  +
mov eax [ebx+1Ch] +
add eax edi +
add edi [ebx+18h] +
sub dword ptr [eax] 1 +
mov eax [edi] +
lea ecx [eax+1] +
mov [edi] ecx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ecx [esp+4+arg_0] +
mov edx [esp+4+arg_4] +
cmp dword ptr [ecx+4] 1 +
setz al  +
xor ebx ebx +
cmp dword ptr [edx+4] 1 +
mov esi eax +
mov eax 1 +
setz bl  +
cmp esi ebx +
jl loc_42FF5C  +
jg loc_42FF60  +
mov esi [ecx] +
mov ebx [edx] +
and esi [ecx+0Ch] +
and ebx [edx+0Ch] +
cmp esi ebx +
jb loc_42FF60  +
ja loc_42FF5C  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_42FF5C  +
***
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
jb loc_42FFA7  +
mov eax 1 +
ja loc_42FFA5  +
mov ebx [edx] +
cmp [ecx] ebx +
jb loc_42FFA7  +
nop   +
ja loc_42FFA5  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
test byte ptr [ebx+34h] 20h +
jnz loc_42FFD6  +
movzx eax byte ptr [ebx+0Ch] +
lea ecx [eax-3] +
cmp cl 1 +
jbe loc_42FFE0  +
cmp al 1 +
jz loc_42FFF2  +
cmp al 2 +
jz loc_42FFF2  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
movzx ecx byte ptr [ebx+33h] +
test cl 2 +
jnz loc_430016  +
and ecx 0Ah +
jnz loc_42FFF2  +
cmp al 3 +
jz loc_430016  +
mov eax [edx+4] +
mov edx [edx] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_18] edx +
call eax  +
mov eax 1 +
and byte ptr [ebx+33h] 0ECh +
add esp 18h +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+18h] 8 +
jz loc_42FFF2  +
jmp loc_42FFD6  +
***
jmp sub_430030  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ecx+18h] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_40] ebp +
mov esi [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_4039E0  +
mov ecx eax +
xor eax eax +
cmp ecx [edi+18h] +
jz loc_430070  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0A0h] +
mov [esp+48h+var_1C] 0 +
mov edx [eax+70h] +
test edx edx +
mov [esp+48h+var_30] edx +
jnz loc_430180  +
mov eax [ebp+4] +
mov edx [edi+28h] +
mov eax [eax+1B0h] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_30] eax +
mov eax [eax+174h] +
movzx edx byte ptr [eax+3] +
cmp [esp+48h+var_2C] edx +
jz loc_4301B5  +
movzx edx byte ptr [eax+4] +
cmp [esp+48h+var_2C] edx +
jnz loc_430192  +
mov eax [eax+40h] +
mov [esp+48h+var_2C] eax +
lea eax [ebx+ecx] +
cmp ebx eax +
mov [esp+48h+var_28] eax +
jnb loc_4301A8  +
mov [esp+48h+var_24] edi +
mov edi ebx +
mov ebx [esp+48h+var_1C] +
jmp loc_430108  +
cmp eax ebx +
jnb loc_4301C1  +
movzx eax byte ptr [ecx+9] +
lea eax [eax+eax*2] +
lea esi [esi+eax*4] +
mov eax [esp+48h+var_24] +
add edi [eax+28h] +
cmp [esp+48h+var_28] edi +
jbe loc_4301A8  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call eax  +
mov edx [esp+48h+var_30] +
mov eax [esi+4] +
mov ecx [edx+174h] +
shr eax 8 +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_4301FF  +
test ebx ebx +
jnz loc_4300E5  +
test eax eax +
jz loc_4300ED  +
mov edx [esi] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBNonZeroSymbol +
call off_4733A4  +
mov [esp+48h+var_48] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_430063  +
mov eax [eax+60h] +
xor edx edx +
div  [esp+48h+var_30] +
mov [esp+48h+var_1C] eax +
jmp loc_43008D  +
mov [esp+48h+var_48] 3 +
call sub_4040F0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+38h] +
mov [esp+48h+var_2C] eax +
jmp loc_4300CA  +
mov edx [esi] +
mov ebx [esp+48h+var_1C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBBadRelocSymbo +
call off_4733A4  +
mov [esp+48h+var_48] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_430063  +
test ebx ebx +
jz loc_4300ED  +
xor eax eax +
jmp loc_4300E5  +
***
sub esp 1Ch +
mov edx [eax+6Ch] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_10] 0FF00h +
mov [esp+1Ch+var_1C] offset aBTooManySect_0 +
mov [esp+1Ch+var_14] edx +
call off_4733A4  +
mov [esp+1Ch+var_1C] 0Fh +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov ebx [esp+20h+arg_8] +
mov eax [esi+4] +
mov edx [eax+0A0h] +
mov edx [edx+90Ch] +
test edx edx +
jz loc_430343  +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+68h] +
test eax eax +
jz loc_4302B4  +
mov ecx [esp+20h+arg_10] +
mov edx [esi] +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_10] ecx +
mov ecx [esp+20h+arg_C] +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_14] ecx +
call eax  +
cmp eax 1 +
jz loc_4302B4  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_4302CB  +
cmp byte ptr [edi] 0 +
jz loc_4302CB  +
mov eax [esp+20h+arg_C] +
test byte ptr [eax+15h] 80h +
jz loc_430360  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov eax [esi] +
mov edi [eax+1Ch] +
mov eax [edi+58h] +
mov edx [edi+54h] +
cmp eax edx +
jbe loc_430390  +
mov eax [edi+5Ch] +
imul edx edx +
add eax edx +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [edi+54h] +
mov ecx [esi+34h] +
imul eax edx +
add eax [edi+5Ch] +
test ecx ecx +
mov ecx [esi+4] +
mov [eax+14h] edx +
jz loc_4303B7  +
mov ebx [ecx+7Ch] +
mov esi ebx +
mov [eax+18h] ebx +
add edx 1 +
lea eax [esi+1] +
mov [ecx+7Ch] eax +
mov eax 1 +
mov [edi+54h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+var_1C] 2213h +
mov [esp+20h+var_20] offset a____Binutils_4 +
call sub_404040  +
mov eax [esi+4] +
jmp loc_430279  +
mov eax [esi+8] +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
mov [ebx+8] eax +
jnz loc_4302D2  +
xor eax eax +
jmp loc_4302AD  +
lea edx [eax+eax] +
mov [edi+58h] edx +
imul eax eax +
mov edx [edi+5Ch] +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] edx +
call sub_408090  +
test eax eax +
mov [edi+5Ch] eax +
jz loc_430383  +
mov edx [edi+54h] +
jmp loc_4302E8  +
mov esi [ecx+7Ch] +
xor ebx ebx +
jmp loc_430328  +
***
jmp sub_4303D0  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+94h] +
mov edx [eax+0A0h] +
mov esi [edx+40h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call sub_424FB0  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_430436  +
mov ecx [ebx+94h] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov edx [eax+164h] +
xor eax eax +
test edx edx +
jz loc_430430  +
mov [esp+14h+var_8] eax +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] offset aBWarningSh_l_0 +
call edx  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+eax*4] +
mov eax [eax+2Ch] +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
add eax [edx+1Ch] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+8+arg_0] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_4303D0  +
mov ebx eax +
mov eax [esp+8+arg_4] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_4303D0  +
xor ecx ecx +
mov edx 0FFFFFFFFh +
cmp ebx eax +
setnbe cl  +
cmovnb edx ecx +
add esp 8 +
mov eax edx +
pop ebx  +
retn   +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
movzx edx byte ptr [esi+33h] +
and edx 0Ah +
cmp dl 8 +
jz loc_4304B2  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_4304AB  +
mov ecx [esi+40h] +
test ecx ecx +
jz loc_4304AB  +
mov edx [ecx+14h] +
mov ebx [edx+0A0h] +
test byte ptr [ebx+924h] 0Bh +
jnz loc_4304AB  +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov ebx [eax+244h] +
test ebx ebx +
jnz loc_4304FB  +
jmp loc_430580  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_430580  +
cmp edx [ebx+10h] +
nop   +
jnz loc_4304F0  +
mov edx [ebx+18h] +
test edx edx +
jz loc_430522  +
mov eax [ecx+18h] +
cmp [edx+10h] eax +
jnz loc_430518  +
jmp loc_430575  +
cmp [edx+10h] eax +
jz loc_430575  +
mov edx [edx+14h] +
test edx edx +
lea esi [esi+0] +
jnz loc_430513  +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_406370  +
test eax eax +
jz loc_4305C2  +
mov ecx [esi+40h] +
mov edi [esp+24h] +
mov edx [ecx+18h] +
mov [eax+10h] edx +
movzx edx word ptr [ecx+2] +
mov [eax+4] dx +
mov edx [ebx+18h] +
mov [eax+14h] edx +
mov edx [edi+4] +
mov [ecx+24h] edx +
lea ecx [edx+1] +
add edx 1 +
mov [edi+4] ecx +
mov [eax+6] dx +
mov [ebx+18h] eax +
mov eax 1 +
jmp loc_4304AB  +
***
mov eax 1 +
jmp loc_4304AB  +
***
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_406370  +
test eax eax +
mov ebx eax +
jz loc_4305C2  +
mov eax [esi+40h] +
mov eax [eax+14h] +
mov [ebx+10h] eax +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov edx [eax+244h] +
mov [ebx+1Ch] edx +
mov [eax+244h] ebx +
jmp loc_430522  +
***
mov eax [esp+24h] +
mov dword ptr [eax+8] 1 +
xor eax eax +
jmp loc_4304AB  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov [esp+5Ch+var_30] edx +
movzx edx byte ptr [ecx+0Ch] +
mov [esp+5Ch+var_24] ecx +
cmp dl 6 +
jnz loc_430608  +
mov ecx [ecx+14h] +
movzx edx byte ptr [ecx+0Ch] +
cmp dl 6 +
jz loc_4305F8  +
mov [esp+5Ch+var_24] ecx +
cmp dl 5 +
ja loc_4308E3  +
jmp ds:off_48B370[edx*4]  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov edx [edx+4] +
mov esi [edx+94h] +
mov [esp+5Ch+var_3C] esi +
mov edi [esp+5Ch+var_3C] +
test edi edi +
jz loc_4308E3  +
mov eax [eax] +
mov edi [eax+0D0h] +
test edi edi +
jnz loc_43065A  +
jmp loc_4308B8  +
mov edi [edi] +
test edi edi +
jz loc_4308B8  +
mov ebp [edi+4] +
cmp [esp+5Ch+var_3C] ebp +
jz loc_430650  +
test byte ptr [ebp+29h] 8 +
jz loc_430650  +
mov ecx [ebp+0A0h] +
mov esi [ecx+914h] +
test esi esi +
jz loc_430650  +
mov eax [esp+5Ch+var_30] +
xor edx edx +
xor esi esi +
mov eax [eax] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+108h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
mov [esp+5Ch+var_38] eax +
jnz loc_4306A7  +
mov esi [ecx+110h] +
sub [esp+5Ch+var_38] esi +
mov edx [esp+5Ch+var_38] +
test edx edx +
jz loc_430650  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
lea eax [ecx+0F0h] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_34] ecx +
call sub_421030  +
test eax eax +
mov [esp+5Ch+var_28] eax +
jz loc_4308B8  +
mov edx [ebp+0A0h] +
mov eax [edx+178h] +
mov [esp+5Ch+var_20] edx +
mov [esp+5Ch+var_5C] eax +
call sub_408000  +
test eax eax +
mov [esp+5Ch+var_2C] eax +
jz loc_430918  +
mov edx [esp+5Ch+var_20] +
mov ecx [edx+170h] +
mov ebx [edx+174h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_54] ebx +
call sub_403BF0  +
mov edx [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_34] +
test eax eax +
jnz loc_43090C  +
mov eax [edx+178h] +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_20] ecx +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call sub_4039E0  +
mov edx [esp+5Ch+var_34] +
mov ecx [esp+5Ch+var_20] +
cmp eax [edx+178h] +
jnz loc_43090C  +
mov eax [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_28] +
lea esi [eax+esi*2] +
mov eax [esp+5Ch+var_38] +
lea eax [eax+eax*4] +
lea edx [ebx+eax*4] +
cmp ebx edx +
jnb loc_4308C6  +
mov [esp+5Ch+var_38] ebp +
mov ebp esi +
mov esi edx +
mov [esp+5Ch+var_20] edi +
mov edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_34] ecx +
jmp loc_4307CE  +
add ebx 14h +
add ebp 2 +
cmp esi ebx +
jbe loc_4308C2  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_4307C0  +
mov eax [ebx+10h] +
test eax eax +
jz loc_4307C0  +
mov eax [esp+5Ch+var_34] +
mov edx [ebx+8] +
mov eax [eax+10Ch] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_5C] eax +
call sub_420E30  +
mov edx [edi+4] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jnz loc_4307C0  +
lea eax [esp+5Ch+var_E] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_420C30  +
movzx eax word ptr [esp+5Ch+var_E] +
test ax ax +
js loc_43084A  +
test byte ptr [edi+33h] 2 +
jz loc_430926  +
test byte ptr [edi+34h] 8 +
jz loc_430926  +
and ax 7FFFh +
sub eax 1 +
cmp ax 1 +
ja loc_4307C0  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax 1 +
jmp loc_4308BA  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov ecx [edx+94h] +
mov [esp+5Ch+var_3C] ecx +
jmp loc_43062C  +
mov ecx [esp+5Ch+var_24] +
mov esi [ecx+14h] +
test byte ptr [esi+29h] 8 +
mov [esp+5Ch+var_3C] esi +
jz loc_4308B8  +
mov ecx [esp+5Ch+var_3C] +
mov edx [ecx+0A0h] +
test byte ptr [edx+924h] 2 +
jnz loc_430638  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+5Ch+var_20] +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_430650  +
mov [esp+5Ch+var_58] 22D0h +
mov [esp+5Ch+var_5C] offset a____Binutils_4 +
mov [esp+5Ch+var_38] eax +
call sub_404040  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_3C] 0 +
jmp loc_430638  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_4308B8  +
mov [esp+5Ch+var_54] offset aElf_link_check +
mov [esp+5Ch+var_58] 232Ch +
mov [esp+5Ch+var_5C] offset a____Binutils_4 +
call sub_404070  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+0E8h+var_58] +
mov ebp [esp+0E8h+var_54] +
movzx eax byte ptr [ebx+34h] +
mov esi [ebp+0Ch] +
test al 8 +
jnz loc_43098A  +
mov edx [esi] +
movzx edx byte ptr [edx] +
mov ecx edx +
and ecx 3 +
cmp cl 1 +
jbe loc_430BB0  +
xor edi edi +
cmp byte ptr [ebx+0Ch] 7 +
jz loc_430AB5  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_430A50  +
test edi edi +
jnz loc_430A58  +
mov eax [esi+4] +
cmp byte ptr [ebx+0Ch] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_C4] eax +
jz loc_430AE4  +
mov eax [esi] +
movzx edx byte ptr [eax] +
and edx 3 +
cmp dl 1 +
jbe loc_431130  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jz loc_431120  +
movzx eax byte ptr [ebx+33h] +
test al 0Ch +
jz loc_430A65  +
test al 3 +
jnz loc_430A6F  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
movzx ecx byte ptr [ebx+30h] +
jz loc_4310C0  +
movzx eax byte ptr [ebx+0Ch] +
mov [esp+0E8h+var_BC] 1 +
mov edx [ebx+2Ch] +
and ecx 0Fh +
test edi edi +
mov [esp+0E8h+var_A0] 0 +
mov [esp+0E8h+var_9C] edx +
movzx edx byte ptr [ebx+31h] +
mov [esp+0E8h+var_93] dl +
jz loc_430AC4  +
and edx 0FFFFFFFCh +
mov [esp+0E8h+var_94] cl +
mov [esp+0E8h+var_93] dl +
movzx edx byte ptr [ebx+32h] +
cmp al 6 +
mov [esp+0E8h+var_92] dl +
ja loc_4310D8  +
jmp ds:off_48B510[eax*4]  +
test edi edi +
jnz loc_4309A7  +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_4309E8  +
mov edx [esi] +
movzx eax byte ptr [edx+1] +
and eax 18h +
cmp al 18h +
jz loc_4309F0  +
cmp al 10h +
jz loc_431300  +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_431290  +
lea edx [eax-1] +
cmp dl 1 +
jbe loc_4312D7  +
movzx ecx byte ptr [ebx+30h] +
mov [esp+0E8h+var_BC] 0 +
jmp loc_430A0A  +
mov ebx [ebx+14h] +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_430994  +
jmp loc_430A58  +
test byte ptr [ebx+35h] 4 +
jz loc_430BE0  +
test byte ptr [ebx+33h] 2 +
jz loc_430BE0  +
sub ecx 60h +
mov [esp+0E8h+var_94] cl +
jmp loc_430A37  +
mov eax [eax+0ECh] +
test eax eax +
jz loc_430AFB  +
mov [esp+0E8h+var_E8] ebx +
call eax  +
test eax eax +
jnz loc_4309C1  +
movzx eax byte ptr [ebx+33h] +
test al 4 +
jz loc_4309C1  +
test al 1 +
mov eax [esi] +
jz loc_430B19  +
movzx edx byte ptr [eax] +
test dl 40h +
jz loc_4309C6  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_431475  +
movzx edx byte ptr [eax+2] +
and edx 18h +
cmp dl 8 +
jz loc_4309C3  +
mov ecx [eax+18h] +
mov ecx [ecx+18h] +
mov [esp+0E8h+var_C0] ecx +
xor ecx ecx +
cmp dl 18h +
setz cl  +
xor edx edx +
test byte ptr [ebx+33h] 1 +
mov [esp+0E8h+var_BC] ecx +
jnz loc_430B57  +
mov edx [ebx+14h] +
mov ecx [ebx+4] +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_C0] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_B8] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ecx +
mov ecx [esp+0E8h+var_B8] +
mov [esp+0E8h+var_E4] ecx +
call eax  +
test eax eax +
jnz loc_4309C1  +
mov [esp+0E8h+var_E8] 11h +
call sub_4040F0  +
nop   +
mov dword ptr [ebp+0] 1 +
xor eax eax +
jmp loc_430A5D  +
or edx eax +
and edx 10h +
jnz loc_430988  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 2 +
jnz loc_430988  +
and eax 6 +
cmp al 6 +
jz loc_43098A  +
xor edi edi +
jmp loc_43098A  +
cmp al 4 +
jz loc_4310F4  +
cmp al 2 +
jz loc_4310F4  +
add ecx 10h +
mov [esp+0E8h+var_94] cl +
jmp loc_430A37  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+94h] +
test eax eax +
jz loc_430C28  +
test byte ptr [eax+29h] 8 +
jnz loc_430C28  +
mov [esp+0E8h+var_E4] 2429h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404040  +
mov eax [esi] +
mov [esp+0E8h+var_90] 0 +
movzx ecx byte ptr [eax] +
mov [esp+0E8h+var_B8] offset off_4731A8 +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [ebx+30h] +
and edx 20000FFh +
cmp edx 200000Ah +
jz loc_4311D1  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4311E7  +
test byte ptr [esp+0E8h+var_C0] 1 +
jz loc_431100  +
test byte ptr [ebx+31h] 3 +
jz loc_430C7B  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_431100  +
mov edx [eax+1Ch] +
mov edx [edx+30h] +
test edx edx +
jz loc_430CC0  +
mov ecx [esp+0E8h+var_C4] +
mov edx [ecx+98h] +
mov ecx [esi+4] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_C0] ecx +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_C0] +
mov [esp+0E8h+var_E8] ecx +
call edx  +
test eax eax +
jz loc_430BA0  +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [esp+0E8h+var_90] +
test edx edx +
mov [esp+0E8h+var_B4] edx +
jnz loc_430CFC  +
movzx edx byte ptr [ebx+33h] +
test dl 1 +
jz loc_430CF0  +
mov ecx eax +
movzx eax [esp+0E8h+var_94] +
mov byte ptr [esp+0E8h+var_B0] al +
shr al 4 +
sub eax 1 +
cmp al 1 +
mov eax ecx +
jbe loc_43124A  +
and edx 0Ah +
cmp dl 8 +
jz loc_4312F1  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
and ecx 3 +
cmp cl 2 +
mov byte ptr [esp+0E8h+var_C0] cl +
jz loc_430D30  +
movzx ecx [esp+0E8h+var_93] +
and ecx 3 +
mov edx ecx +
jz loc_430D30  +
movzx ecx [esp+0E8h+var_94] +
shr cl 4 +
cmp cl 2 +
jz loc_430D30  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_4311F6  +
mov eax [eax+1Ch] +
mov ecx [eax+0F8h] +
test ecx ecx +
jz loc_430F00  +
mov edx [ebx+20h] +
cmp edx 0FFFFFFFFh +
mov [esp+0E8h+var_B0] edx +
jz loc_430F00  +
mov eax [eax+30h] +
test eax eax +
jz loc_430F00  +
mov eax [ebx+40h] +
test eax eax +
jz loc_431357  +
mov eax [ebx+38h] +
mov edi [esp+0E8h+var_B4] +
mov [esp+0E8h+var_98] eax +
mov eax [ecx+6Ch] +
sub edi 0FF00h +
cmp edi 0FFFEFFFFh +
mov [esp+0E8h+var_C0] eax +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
movzx ecx byte ptr [edx+5] +
jbe loc_431330  +
movzx edi cl +
mov edx [edx+24h] +
imul edi [esp+0E8h+var_B0] +
add edi [esp+0E8h+var_C0] +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_430E88  +
mov eax [esi] +
xor edx edx +
mov eax [eax+1Ch] +
mov eax [eax+60h] +
mov edi eax +
mov [esp+0E8h+var_C0] eax +
mov eax [ecx+8Ch] +
mov eax [eax+28h] +
mov [esp+0E8h+var_C4] eax +
mov eax [ebx+3Ch] +
div  edi +
mov eax [esp+0E8h+var_C4] +
lea edi [edx+2] +
imul edi eax +
shl eax 3 +
add edi [ecx+6Ch] +
cmp eax 8 +
jz loc_4313F1  +
cmp eax 10h +
jz loc_4314BC  +
cmp eax 20h +
jz loc_431514  +
cmp eax 40h +
nop   +
jnz loc_43159B  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E0] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
sar edx 1Fh +
mov [esp+0E8h+var_E4] edx +
call eax  +
mov eax [esi+4] +
mov edx [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [eax+4] +
lea edx [edi+edx+2] +
mov edi [esp+0E8h+var_B4] +
imul edx [esp+0E8h+var_C4] +
add edx [ecx+6Ch] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
call eax  +
mov eax [esi+10h] +
test eax eax +
jz loc_430F00  +
mov eax [eax+6Ch] +
test eax eax +
jz loc_430F00  +
movzx edi byte ptr [ebx+33h] +
mov edx [ebx+40h] +
test edi 2 +
jnz loc_4313C0  +
test edx edx +
jz loc_431454  +
mov ecx [edx+14h] +
mov ecx [ecx+0A0h] +
test byte ptr [ecx+924h] 0Bh +
jnz loc_431454  +
mov edx [edx+24h] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
movzx edx byte ptr [ebx+34h] +
and edx 6 +
cmp dl 6 +
jz loc_431460  +
mov ecx [ebx+20h] +
mov edx [esi+4] +
lea eax [eax+ecx*2] +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_8C] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_420C60  +
nop   +
mov eax [esp+0E8h+var_BC] +
test eax eax +
jnz loc_430A58  +
mov eax [esp+0E8h+var_B8] +
test byte ptr [eax+15h] 80h +
jnz loc_430A58  +
mov edi [ebp+4] +
test edi edi +
jz loc_430F96  +
mov ecx [ebp+8] +
test ecx ecx +
jnz loc_430F96  +
mov eax [ebp+0Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_430F96  +
lea edx [esp+0E8h+var_8C] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_4731A8 +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_80] 0 +
mov [esp+0E8h+var_8C] 0 +
mov [esp+0E8h+var_88] 0 +
mov [esp+0E8h+var_84] 0 +
mov byte ptr [esp+0E8h+var_80] 4 +
mov [esp+0E8h+var_7C] 0FFFFFFF1h +
call sub_430250  +
test eax eax +
jz loc_430A5D  +
mov dword ptr [ebp+8] 1 +
mov eax [esi+4] +
lea edx [esp+0E8h+var_A0] +
mov ecx [esp+0E8h+var_B8] +
mov edi [eax+7Ch] +
mov eax [ebx+4] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] esi +
call sub_430250  +
test eax eax +
jz loc_431110  +
cmp eax 1 +
jz loc_4313E9  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jnz loc_430A58  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 251Bh +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404070  +
mov eax [ebx+14h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+3Ch] +
test eax eax +
jz loc_430C00  +
mov edx [esi+4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_90] eax +
jz loc_431417  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+38h] +
mov ecx eax +
mov eax [ebx+18h] +
add ecx eax +
mov eax [esi] +
mov [esp+0E8h+var_A0] ecx +
movzx edx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] dl +
and edx 3 +
cmp dl 2 +
jz loc_430C41  +
mov edx [esp+0E8h+var_B8] +
mov edx [edx+3Ch] +
add ecx [edx+1Ch] +
cmp byte ptr [ebx+30h] 6 +
mov [esp+0E8h+var_A0] ecx +
jnz loc_430C41  +
mov edx [eax+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_430C41  +
sub ecx [edx+1Ch] +
mov [esp+0E8h+var_A0] ecx +
jmp loc_430C41  +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov ecx eax +
mov [esp+0E8h+var_B8] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+148h] +
mov [esp+0E8h+var_E8] ecx +
call eax  +
mov [esp+0E8h+var_90] eax +
mov eax [ebx+14h] +
mov ecx [eax] +
mov eax 1 +
shl eax cl +
mov [esp+0E8h+var_A0] eax +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
jmp loc_430C41  +
cmp cl 0Ah +
jz loc_4309FE  +
test byte ptr [ebx+34h] 8 +
jnz loc_4309FE  +
jmp loc_430A58  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 23FBh +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404070  +
add ecx 20h +
mov [esp+0E8h+var_94] cl +
jmp loc_430A37  +
test byte ptr [ebx+34h] 8 +
jnz loc_430CC0  +
jmp loc_430C7B  +
mov dword ptr [ebp+0] 1 +
jmp loc_430A5D  +
movzx eax byte ptr [ebx+0Ch] +
jmp loc_430AA4  +
test byte ptr [ebx+34h] 8 +
jz loc_4309D2  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 6 +
jnz loc_4309D2  +
movzx edx word ptr [ebx+34h] +
and dx 180h +
cmp dx 100h +
jnz loc_4309D2  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_431573  +
cmp byte ptr [ebx+0Ch] 6 +
mov eax ebx +
jnz loc_43117C  +
mov eax [eax+14h] +
cmp byte ptr [eax+0Ch] 6 +
jz loc_431173  +
movzx ecx byte ptr [ebx+31h] +
mov edx offset aBInternalSymbo +
and ecx 3 +
cmp cl 1 +
jz loc_43119D  +
cmp cl 2 +
mov edx offset aBHiddenSymbolS +
mov ecx offset aBLocalSymbolSI +
cmovnz edx ecx +
mov eax [eax+14h] +
mov ecx [esi+4] +
cmp eax offset off_473250 +
jz loc_431594  +
mov eax [eax+94h] +
mov ebx [ebx+4] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_DC] ebx +
call off_4733A4  +
jmp loc_430B93  +
movzx edx byte ptr [esp+0E8h+var_C0] +
and edx 3 +
cmp dl 2 +
jnz loc_430C85  +
jmp loc_430C56  +
test byte ptr [ebx+34h] 8 +
jz loc_430CC0  +
jmp loc_430C60  +
test byte ptr [ebx+33h] 2 +
jnz loc_430D30  +
cmp dl 3 +
jz loc_431546  +
cmp dl 1 +
mov eax offset aBInternalSym_0 +
mov edx offset aBHiddenSymbo_0 +
cmovnz eax edx +
mov ecx [ebx+4] +
mov edx [esi+4] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
call off_4733A4  +
mov [esp+0E8h+var_E8] 11h +
call sub_4040F0  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_430A5D  +
movzx eax byte ptr [esp+0E8h+var_B0] +
mov [esp+0E8h+var_AC] ecx +
mov ecx edx +
and eax 0Fh +
movzx edx al +
cmp edx 0Ah +
mov edx 2 +
cmovz eax edx +
mov byte ptr [esp+0E8h+var_B0] al +
mov eax ecx +
and eax 10h +
cmp al 1 +
sbb eax eax +
mov edx eax +
movzx eax byte ptr [esp+0E8h+var_B0] +
and edx 10h +
lea eax [eax+edx+10h] +
mov edx ecx +
mov [esp+0E8h+var_94] al +
mov eax [esp+0E8h+var_AC] +
jmp loc_430CF0  +
mov edx [esi] +
test byte ptr [edx+1] 2 +
mov edx [ebx+14h] +
jz loc_4312B0  +
cmp edx offset off_473250 +
jz loc_4312B0  +
cmp dword ptr [edx+3Ch] offset off_473250 +
jz loc_431498  +
test byte ptr [edx+16h] 10h +
jnz loc_430A98  +
mov edx [edx+94h] +
test edx edx +
jz loc_430A98  +
test byte ptr [edx+2Ah] 20h +
jnz loc_4309F0  +
jmp loc_430A98  +
mov edx [ebx+14h] +
test edx edx +
jz loc_430AA4  +
test byte ptr [edx+2Ah] 20h +
jnz loc_4309F0  +
jmp loc_430AA4  +
mov [esp+0E8h+var_9C] 0 +
jmp loc_430CFC  +
mov ecx [ebx+4] +
mov eax [edx+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_409000  +
test eax eax +
jnz loc_430A88  +
jmp loc_4309F0  +
mov [esp+0E8h+var_B4] ecx +
call sub_430210  +
mov ecx [esp+0E8h+var_B4] +
test eax eax +
jz loc_431110  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
jmp loc_430D9C  +
test edi edi +
jnz loc_430D67  +
cmp byte ptr [esp+0E8h+var_C0] 1 +
jbe loc_431550  +
mov edi [ebx+4] +
mov [esp+0E8h+var_E4] 40h +
mov [esp+0E8h+var_C0] ecx +
mov [esp+0E8h+var_E8] edi +
call strrchr  +
mov ecx [esp+0E8h+var_C0] +
test eax eax +
jz loc_430D67  +
cmp byte ptr [eax+1] 0 +
jz loc_430D67  +
mov eax [esi+4] +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] offset aBNoSymbolVersi +
mov [esp+0E8h+var_E4] eax +
call off_4733A4  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_430A5D  +
test edx edx +
jz loc_431564  +
mov edx [edx+8] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
mov edx [esi] +
test byte ptr [edx] 20h +
jz loc_430ED2  +
add word ptr [esp+0E8h+var_8C] 1 +
jmp loc_430ED2  +
mov [ebx+1Ch] edi +
jmp loc_430A5D  +
mov eax [ebx+20h] +
movzx edx byte ptr [edi] +
mov [edi] al +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [ebx+20h] +
mov ecx [ecx+6Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
mov [ecx+eax] dl +
jmp loc_430E88  +
mov edi [esp+0E8h+var_B8] +
mov eax [esi+4] +
mov edx [edi+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_DC] edi +
mov [esp+0E8h+var_E8] offset aBCouldNotFindO +
mov [esp+0E8h+var_E0] edx +
call off_4733A4  +
mov [esp+0E8h+var_E8] 0Fh +
call sub_4040F0  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_430A5D  +
xor ecx ecx +
mov word ptr [esp+0E8h+var_8C] cx +
jmp loc_430ED2  +
and edi 2 +
jz loc_430EE2  +
or word ptr [esp+0E8h+var_8C] 8000h +
jmp loc_430EE2  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_4305E0  +
test eax eax +
mov eax [esi] +
jnz loc_4309C3  +
jmp loc_430B26  +
movzx ecx word ptr [edx+18h] +
and cx 380h +
cmp cx 100h +
jz loc_4312B0  +
cmp cx 200h +
jnz loc_4309F0  +
jmp loc_4312B0  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+3Ch] +
mov eax [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
add eax [ecx+6Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E8] eax +
call edx  +
jmp loc_430E88  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+30h] +
jmp loc_4314EC  +
mov eax offset aBProtectedSymb +
jmp loc_431219  +
movzx eax byte ptr [ebx+33h] +
and eax 6 +
cmp al 2 +
jnz loc_43136A  +
jmp loc_430D67  +
mov edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
jmp loc_4313D3  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_4305E0  +
test eax eax +
jnz loc_4309D2  +
jmp loc_43116B  +
mov eax ecx +
jmp loc_4311B4  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 24C9h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404070  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
mov [esp+124h+var_108] ecx +
jz loc_43164F  +
mov ebp eax +
mov esi edx +
jmp loc_4315DE  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_431606  +
mov [esp+124h+var_120] ebp +
mov eax [esi] +
mov [esp+124h+var_124] eax +
call strcmp  +
test eax eax +
jnz loc_4315D7  +
mov eax [esi+1Ch] +
mov edx [esp+124h+var_108] +
mov [edx] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+124h+var_124] ebp +
call strlen  +
mov [esp+124h+var_10C] eax +
mov esi [ebx] +
mov [esp+124h+var_124] esi +
call strlen  +
cmp eax [esp+124h+var_10C] +
mov edi eax +
ja loc_431648  +
mov [esp+124h+var_11C] eax +
mov [esp+124h+var_120] ebp +
mov [esp+124h+var_124] esi +
call strncmp  +
test eax eax +
jnz loc_431648  +
add edi ebp +
mov esi offset a_end +
mov ecx 4 +
cmps   +
jz loc_431659  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_431612  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
mov ecx [esp+124h+var_108] +
add eax [ebx+1Ch] +
mov [ecx] eax +
mov eax 1 +
jmp loc_4315FE  +
***
push ebx  +
mov ebx edx +
sub esp 10h +
mov esi [edx] +
mov ecx [edx+4] +
imul ecx [esi+28h] +
mov [esi+18h] ecx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_406370  +
test eax eax +
mov [esi+30h] eax +
jz loc_4316D0  +
mov eax [ebx+0Ch] +
mov edi 1 +
test eax eax +
jz loc_4316B0  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_4316A3  +
shl eax 2 +
mov [esp+10h+var_10] eax +
call sub_408190  +
test eax eax +
jz loc_4316DB  +
mov [ebx+0Ch] eax +
jmp loc_4316A3  +
mov edx [esi+18h] +
xor edi edi +
test edx edx +
jz loc_431697  +
jmp loc_4316A3  +
xor edi edi +
jmp loc_4316A3  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4317C5  +
mov eax [esi+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_4317C5  +
movzx eax byte ptr [ebx+34h] +
mov ebp [ebx+4] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_4317D2  +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
jz loc_4317D2  +
sub eax ebp +
mov [esp+1Ch+var_10] eax +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_408000  +
test eax eax +
mov edi eax +
jz loc_4317D6  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov ebp edi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] eax +
call memcpy  +
mov eax [esp+1Ch+var_10] +
mov byte ptr [edi+eax] 0 +
mov [esp+1Ch+var_1C] ebp +
call sub_420CC0  +
mov ecx [esi+8] +
mov edx [esi+10h] +
mov [edx+ecx*4] eax +
mov edx [esi+14h] +
mov ecx [ebx+20h] +
mov [edx+ecx*4] eax +
mov eax [esi+28h] +
add dword ptr [esi+8] 1 +
mov edx [ebx+20h] +
test eax eax +
js loc_4317A1  +
cmp eax edx +
jle loc_4317A4  +
mov [esi+28h] edx +
test edi edi +
mov eax 1 +
jz loc_4317CA  +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_431775  +
mov dword ptr [esi+44h] 1 +
xor eax eax +
jmp loc_4317CA  +
***
jmp sub_4317F0  +
***
mov ebx [esp+18h+arg_0] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_431814  +
mov eax [ebx+38h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_44B4F0  +
mov [ebx+38h] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax [edx+8] +
test eax eax +
jz loc_431838  +
mov [esp+18h+var_18] eax +
call sub_44B1F0  +
mov eax [ebx+14h] +
test eax eax +
jz loc_431847  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_431856  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_431865  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+20h] +
test eax eax +
jz loc_431874  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+24h] +
test eax eax +
jz loc_431883  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+28h] +
test eax eax +
jz loc_431892  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_4318A1  +
mov [esp+18h+var_18] eax +
call free  +
mov edx [ebx+30h] +
test edx edx +
jz loc_4318B0  +
mov [esp+18h+var_18] edx +
call free  +
mov edx [ebx+34h] +
test edx edx +
jz loc_4318BF  +
mov [esp+18h+var_18] edx +
call free  +
mov ebx [esi] +
test ebx ebx +
jz loc_4318FC  +
test byte ptr [ebx+14h] 4 +
mov esi [ebx+8Ch] +
jz loc_4318F5  +
mov eax [esi+48h] +
test eax eax +
jz loc_4318E6  +
mov [esp+18h+var_18] eax +
call free  +
test byte ptr [ebx+14h] 4 +
jz loc_4318F5  +
mov eax [esi+58h] +
test eax eax +
jz loc_4318F5  +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4318C5  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_431930  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+16h] 80h +
jz loc_431923  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jnz loc_431923  +
mov eax [eax+8Ch] +
mov edx [ebx+18h] +
mov eax [eax+88h] +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_10] eax +
lea eax [ebx+14h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_44DB80  +
mov [ebx+18h] eax +
jmp loc_431923  +
***
push esi  +
mov esi edx +
push ebx  +
mov edx offset a_rel_0 +
sub esp 1Ch +
mov ebx offset a_rela_0 +
test ecx ecx +
cmovz ebx edx +
test esi esi +
jz loc_4319E4  +
mov [esp+20h+var_20] ebx +
mov edi eax +
call strlen  +
mov [esp+20h+var_20] esi +
mov ebp eax +
call strlen  +
mov [esp+20h+var_20] edi +
lea eax [ebp+eax+1] +
mov [esp+20h+var_1C] eax +
call sub_406290  +
mov [esp+20h+var_14] esi +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] offset aSS_8 +
mov edi eax +
mov [esp+20h+var_20] eax +
call sprintf  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_4319DC  +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+44h+arg_C] +
mov [esp+44h+var_30] eax +
mov eax [edx+0A0h] +
mov [esp+44h+var_28] ecx +
mov ebp [esp+44h+arg_8] +
test ebx ebx +
mov [esp+44h+var_2C] eax +
jz loc_431AC1  +
mov esi ebp +
mov ebp edi +
mov edi edx +
jmp loc_431A31  +
add ebp 1 +
add esi 14h +
cmp ebp ebx +
jz loc_431AC1  +
movzx eax byte ptr [esi+0Ch] +
shr al 4 +
test al al +
jnz loc_431A23  +
mov eax [esp+44h+var_2C] +
mov ecx [esi+8] +
mov eax [eax+64h] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_420E30  +
test eax eax +
jz loc_431A23  +
mov edx [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_40] edx +
call strcmp  +
test eax eax +
jnz loc_431A23  +
mov eax edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
mov eax [eax+edi*4] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_18] eax +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_3C] eax +
call sub_42E5D0  +
mov edx [esp+44h+var_18] +
mov edi [esp+44h+arg_4] +
mov ecx [edx+3Ch] +
mov [edi] eax +
add eax [ecx+1Ch] +
add eax [edx+38h] +
mov [edi] eax +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_28] +
mov edi [esp+44h+var_30] +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_419760  +
test eax eax +
mov edx eax +
jz loc_431B28  +
movzx eax byte ptr [eax+0Ch] +
lea ecx [eax-3] +
xor eax eax +
cmp cl 1 +
ja loc_431AB9  +
mov ecx [edx+14h] +
mov edi [esp+44h+arg_4] +
mov eax [ecx+3Ch] +
mov eax [eax+1Ch] +
add eax [edx+18h] +
add eax [ecx+38h] +
mov [edi] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_431AB9  +
***
push esi  +
push ebx  +
push eax  +
mov eax 1048h +
call sub_46FEC0  +
sub esp eax +
mov ebx [edx] +
mov ebp edx +
mov eax [esp+14h+arg_1030] +
mov [esp+14h+arg_C] ecx +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_8] eax +
call strlen  +
mov ecx eax +
lea eax [eax-1] +
cmp eax 0FFFh +
ja loc_431BC7  +
movzx edx byte ptr [ebx] +
cmp dl 2Eh +
jz loc_431D50  +
jle loc_431BE0  +
cmp dl 53h +
jz loc_431D73  +
cmp dl 73h +
mov [esp+14h+arg_14] 0 +
jnz loc_431CC5  +
lea eax [ebx+1] +
mov [esp+14h+var_C] 0Ah +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] eax +
mov [esp+14h+arg_10] ecx +
call strtol  +
mov ecx [esp+14h+arg_10] +
add ebx ecx +
mov esi eax +
mov eax [ebp+0] +
lea edi [eax+1] +
cmp edi ebx +
ja loc_431BC7  +
lea eax [esi+1] +
cmp eax 1000h +
jbe loc_431C16  +
mov [esp+14h+var_14] 5 +
call sub_4040F0  +
xor eax eax +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dl 23h +
jnz loc_431CC5  +
add ebx 1 +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_C] 10h +
call strtoul  +
mov esi [esp+14h+arg_8] +
mov [esi] eax +
add esp 104Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [esp+14h+arg_28] +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] ebx +
call memcpy  +
mov byte ptr [esp+esi+14h+arg_28] 0 +
add esi edi +
mov [ebp+0] esi +
mov esi [esp+14h+arg_14] +
test esi esi +
jz loc_431E80  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_4315C0  +
test eax eax +
jnz loc_431EC5  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_4319F0  +
test eax eax +
jnz loc_431EC5  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSection +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_4733A4  +
xor eax eax +
jmp loc_431BD5  +
mov edi offset a0_0 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_431D80  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
neg eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
mov eax [esp+14h+arg_8] +
add ebx 1 +
mov edi [esp+14h+arg_104C] +
mov [eax] edi +
mov eax 1 +
mov [ebp+0] ebx +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+14h+arg_14] 1 +
jmp loc_431B90  +
mov edi offset asc_48B583 +
mov ecx 2 +
mov esi ebx +
cmps   +
jz loc_431ED0  +
mov edi offset asc_48B586 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_431F98  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov edx [esp+14h+arg_1058] +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
test edx edx +
jz loc_432364  +
mov edi [esp+14h+arg_8] +
sar eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_4319F0  +
test eax eax +
jz loc_432073  +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
shl eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
mov edi offset asc_48B589 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_4320B3  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setz al  +
movzx eax al +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
jmp loc_431EC5  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_4315C0  +
test eax eax +
jnz loc_431EC5  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSymbol +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_4733A4  +
xor eax eax +
jmp loc_431BD5  +
mov edi offset asc_48B58C +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_432188  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setnz al  +
movzx eax al +
jmp loc_432068  +
mov edi offset asc_48B58F +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_432276  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43253A  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
mov edi offset asc_48B592 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_432376  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43269B  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
mov edi [esp+14h+arg_8] +
shr eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
mov edi offset asc_48B595 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43244F  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
xor eax eax +
cmp [esp+14h+arg_24] 0 +
jz loc_432068  +
cmp [esp+14h+arg_28] 0 +
jmp loc_43217D  +
mov [esp+14h+var_C] 2 +
mov [esp+14h+var_10] offset asc_48B598 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_10] edx +
call strncmp  +
mov edx [esp+14h+arg_10] +
test eax eax +
jnz loc_432554  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_24] 0 +
mov eax 1 +
jz loc_432445  +
jmp loc_432068  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp dl 7Eh +
jz loc_43271C  +
cmp dl 21h +
jz loc_4326B5  +
cmp dl 2Ah +
jz loc_432873  +
cmp dl 2Fh +
jz loc_4327A9  +
cmp dl 25h +
jz loc_432E6A  +
cmp dl 5Eh +
jz loc_432DA4  +
cmp dl 7Ch +
jz loc_432CDE  +
cmp dl 26h +
jz loc_432C18  +
cmp dl 2Bh +
nop   +
jz loc_432B21  +
cmp dl 2Dh +
jz loc_432A5B  +
cmp dl 3Ch +
jz loc_432981  +
cmp dl 3Eh +
jnz loc_432968  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43278F  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_24] 0 +
jmp loc_432062  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
not eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_432939  +
cdq   +
idiv  [esp+14h+arg_28] +
jmp loc_432068  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_1058] 0 +
jz loc_43294F  +
mov eax [esp+14h+arg_24] +
imul eax [esp+14h+arg_28] +
jmp loc_432068  +
xor edx edx +
mov edi [esp+14h+arg_8] +
div  [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
mov eax [esp+14h+arg_28] +
imul eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
movsx edx dl +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] offset aUnknownOperato +
call off_4733A4  +
jmp loc_431BC7  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_432BE6  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
sub eax [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_1058] 0 +
jz loc_432C00  +
mov eax [esp+14h+arg_24] +
add eax [esp+14h+arg_28] +
jmp loc_432068  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
add eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
and eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
or eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
xor eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_431BD5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_431B30  +
test eax eax +
jz loc_431BD3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_432F36  +
cdq   +
idiv  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
jmp loc_431EC5  +
xor edx edx +
div  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_431BD5  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
cmp [eax+14h] edx +
jbe loc_432F75  +
mov ecx [eax+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jz loc_432FD8  +
sub edx [eax+18h] +
mov eax [eax+1Ch] +
mov eax [eax+edx*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_432F9F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_432F90  +
sub edx 3 +
cmp dl 1 +
ja loc_432FD1  +
mov eax [eax+14h] +
cmp eax offset off_473250 +
jz loc_432FD1  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jnz loc_432FD1  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_432FD1  +
cmp dx 200h +
jnz loc_432FD3  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov edx [ebx+10h] +
mov eax [eax+10h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_423A90  +
test eax eax +
jz loc_432FD3  +
mov edx [esp+18h+arg_8] +
test edx edx +
jz loc_432FD3  +
cmp eax offset off_473250 +
jnz loc_432FB1  +
jmp loc_432FD1  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_4] +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_3C] 0 +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] ebx +
mov eax [esi+1Ch] +
mov [esp+4Ch+var_4C] eax +
call sub_419760  +
test eax eax +
jz loc_433042  +
mov byte ptr [eax+0Ch] 0 +
mov [esp+4Ch+var_10] eax +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_28] eax +
movzx eax byte ptr [ebp+1ACh] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_38] 0 +
and eax 1 +
mov [esp+4Ch+var_2C] eax +
mov eax [esp+4Ch+arg_8] +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_4C] esi +
call sub_41A3C0  +
test eax eax +
jz loc_4330F0  +
mov ebx [esp+4Ch+var_10] +
movzx eax byte ptr [ebx+31h] +
or byte ptr [ebx+33h] 2 +
and byte ptr [ebx+34h] 0FEh +
or byte ptr [ebx+0Dh] 2 +
mov edx eax +
and edx 3 +
cmp dl 1 +
mov byte ptr [ebx+30h] 1 +
jz loc_4330CC  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+31h] al +
mov eax [ebp+0DCh] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] 1 +
call eax  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esi+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_433260  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+30h] +
mov eax 1 +
test ecx ecx +
jnz loc_433256  +
mov edx [ebx+38h] +
test edx edx +
jz loc_433428  +
mov eax [ebx+50h] +
test eax eax +
jz loc_433435  +
mov ebp [ebx+38h] +
mov eax [ebp+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+1Ch] +
mov edi eax +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [esi] +
or edi 8 +
and eax 3 +
cmp al 1 +
ja loc_4332B5  +
mov edi [esp+2Ch+var_10] +
or edi 8 +
test byte ptr [esi+6] 1 +
jz loc_433407  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_d +
mov [esp+2Ch+var_2C] ebp +
call sub_403090  +
test eax eax +
jz loc_433254  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version +
mov [esp+2Ch+var_2C] ebp +
call sub_403090  +
test eax eax +
jz loc_433254  +
mov dword ptr [eax+40h] 1 +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_r +
mov [esp+2Ch+var_2C] ebp +
call sub_403090  +
test eax eax +
jz loc_433254  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynsym +
mov [esp+2Ch+var_2C] ebp +
call sub_403090  +
test eax eax +
jz loc_433254  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov ecx [esi+1Ch] +
mov [ecx+0F8h] eax +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynstr +
mov [esp+2Ch+var_2C] ebp +
call sub_403090  +
test eax eax +
jz loc_433254  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] eax +
call sub_403090  +
test eax eax +
jz loc_433254  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_20] offset a_dynamic_0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call sub_433000  +
mov ecx [esi+1Ch] +
test eax eax +
mov [ecx+78h] eax +
jz loc_433254  +
movzx eax byte ptr [esi+3] +
test al 20h +
jnz loc_43344D  +
test al 40h +
jnz loc_43348C  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_433254  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
jz loc_433254  +
mov eax [esi+1Ch] +
mov dword ptr [eax+30h] 1 +
mov eax 1 +
jmp loc_433256  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_interp +
mov [esp+2Ch+var_2C] ebp +
call sub_403090  +
test eax eax +
jnz loc_4332B5  +
jmp loc_433254  +
mov eax [esp+2Ch+arg_0] +
mov [ebx+38h] eax +
nop   +
jmp loc_433277  +
call sub_44B170  +
test eax eax +
mov [ebx+50h] eax +
jz loc_433254  +
mov ebx [esi+1Ch] +
jmp loc_433282  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_hash +
mov [esp+2Ch+var_2C] ebp +
call sub_403090  +
test eax eax +
jz loc_433254  +
mov ecx [ebx+174h] +
movzx edx byte ptr [ecx+0Bh] +
mov [eax+40h] edx +
mov eax [eax+8Ch] +
movzx ecx byte ptr [ecx+8] +
mov [eax+28h] ecx +
movzx eax byte ptr [esi+3] +
jmp loc_4333CF  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_hash +
mov [esp+2Ch+var_2C] ebp +
call sub_403090  +
test eax eax +
jz loc_433254  +
mov ecx [ebx+174h] +
movzx edi byte ptr [ecx+0Bh] +
mov [eax+40h] edi +
mov eax [eax+8Ch] +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_4334CD  +
mov dword ptr [eax+28h] 4 +
jmp loc_4333D7  +
mov dword ptr [eax+28h] 0 +
jmp loc_4333D7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [ebx+4] +
mov esi [eax+1B0h] +
mov eax [esp+34h] +
mov ebp [esi+1Ch] +
movzx edx byte ptr [esi+1ADh] +
mov edi [eax+1Ch] +
mov dword ptr [esp+4] offset a_plt_0 +
mov eax ebp +
mov ecx ebp +
or ecx 13h +
and eax 0FFFFFEEDh +
test dl 8 +
cmovz eax ecx +
mov ecx eax +
or ecx 8 +
and edx 2 +
cmovnz eax ecx +
mov [esp+8] eax +
mov [esp] ebx +
call sub_403090  +
test eax eax +
jz loc_4335F3  +
movzx ecx byte ptr [esi+1ADh] +
shr cl 4 +
movzx ecx cl +
mov [eax+40h] ecx +
test byte ptr [esi+1ADh] 4 +
mov [edi+0E0h] eax +
jnz loc_4335C5  +
or ebp 8 +
mov ecx offset a_rela_plt_0 +
test byte ptr [esi+1ACh] 20h +
mov eax offset a_rel_plt_0 +
mov [esp+8] ebp +
mov [esp] ebx +
cmovnz eax ecx +
mov [esp+4] eax +
call sub_403090  +
test eax eax +
jz loc_4335F3  +
mov ecx [esi+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [edi+0E4h] eax +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_433100  +
test eax eax +
jz loc_4335F3  +
test byte ptr [esi+1AEh] 8 +
jnz loc_433600  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] offset a_procedure_lin +
mov [esp] ebx +
mov [esp+4] eax +
call sub_433000  +
mov edx [esp+34h] +
mov ecx [edx+1Ch] +
test eax eax +
mov [ecx+74h] eax +
jnz loc_43355D  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] 100001h +
mov dword ptr [esp+4] offset a_dynbss +
mov [esp] ebx +
call sub_403090  +
test eax eax +
jz loc_4335F3  +
mov eax [esp+34h] +
test byte ptr [eax] 1 +
jnz loc_4335B8  +
test byte ptr [esi+1ACh] 20h +
mov ecx offset a_rel_bss +
mov eax offset a_rela_bss +
mov [esp+8] ebp +
cmovz eax ecx +
mov [esp+4] eax +
mov [esp] ebx +
call sub_403090  +
test eax eax +
jz loc_4335F3  +
mov edx [esi+174h] +
movzx edx byte ptr [edx+0Bh] +
mov [eax+40h] edx +
jmp loc_4335B8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_433680  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_4336E5  +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+4Ch] +
mov edi [esi+50h] +
mov [ebx+20h] eax +
add eax 1 +
test edi edi +
mov [esi+4Ch] eax +
jz loc_433707  +
mov ebp [ebx+4] +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
mov esi eax +
jz loc_433720  +
mov byte ptr [eax] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44B220  +
mov byte ptr [esi] 40h +
cmp eax 0FFFFFFFFh +
jz loc_433715  +
mov [ebx+38h] eax +
jmp loc_433671  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 1 +
cmp al 1 +
jbe loc_43368E  +
or byte ptr [ebx+34h] 8 +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+34h] +
test eax eax +
jnz loc_433695  +
jmp loc_433671  +
call sub_44B170  +
test eax eax +
mov edi eax +
mov [esi+50h] eax +
jnz loc_4336A8  +
xor eax eax +
jmp loc_433676  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44B220  +
jmp loc_4336DB  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov esi [esp+94h+arg_8] +
mov edx [esp+94h+arg_10] +
mov ecx [esp+94h+arg_4] +
mov ebp [esp+94h+arg_20] +
mov [esp+94h+var_38] esi +
mov esi [esp+94h+arg_C] +
mov [esp+94h+var_64] edx +
mov edx [esp+94h+arg_14] +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+arg_0] +
mov [esp+94h+var_44] ecx +
mov ecx [ecx] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+arg_24] +
mov [esp+94h+var_5C] edx +
mov edx [esp+94h+arg_18] +
mov [esp+94h+var_58] eax +
mov [esp+94h+var_34] ebp +
mov [esp+94h+var_48] esi +
mov esi [esp+94h+arg_28] +
mov [esp+94h+var_50] edx +
mov edx [esp+94h+arg_1C] +
mov [esp+94h+var_40] esi +
mov esi [esp+94h+arg_2C] +
mov dword ptr [edx] 0 +
mov [esp+94h+var_3C] edx +
mov dword ptr [ebp+0] 0 +
mov [esp+94h+var_6C] esi +
mov [esp+94h+var_54] ecx +
movzx eax byte ptr [eax+0Ch] +
shr al 4 +
cmp ecx offset off_4731A8 +
movzx eax al +
mov [esp+94h+var_60] eax +
jz loc_434270  +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 0 +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov eax [edi+1Ch] +
mov [esp+94h+var_94] eax +
call sub_419760  +
mov ebp eax +
test ebp ebp +
jz loc_433D10  +
mov eax [esp+94h+var_74] +
xor esi esi +
mov [eax] ebp +
mov eax [esp+94h+var_70] +
movzx edx byte ptr [ebp+34h] +
mov ecx [eax+4] +
and edx 6 +
cmp dl 2 +
mov [esp+94h+var_74] edx +
mov eax [ecx+1B0h] +
mov [esp+94h+var_68] eax +
jz loc_43389A  +
mov [esp+94h+var_90] 40h +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_4C] ecx +
call strrchr  +
mov ecx [esp+94h+var_4C] +
test eax eax +
mov esi eax +
jz loc_4342D0  +
mov edx [esp+94h+var_74] +
test dl dl +
jz loc_433977  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov esi 0 +
cmovnz esi eax +
movzx eax byte ptr [ebp+0Ch] +
mov byte ptr [esp+94h+var_74] al +
sub eax 6 +
cmp al 1 +
ja loc_433A54  +
mov ebx ebp +
nop   +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea eax [edx-6] +
cmp al 1 +
jbe loc_4338B0  +
mov eax [esp+94h+var_6C] +
mov byte ptr [esp+94h+var_74] dl +
mov eax [eax] +
test eax eax +
jnz loc_433960  +
cmp ebp ebx +
jz loc_433A63  +
test dl dl +
jz loc_433A63  +
movzx eax byte ptr [ebp+34h] +
and eax 6 +
cmp al 6 +
movzx eax byte ptr [ebx+34h] +
jz loc_4338FD  +
mov edx eax +
and edx 6 +
cmp dl 6 +
jnz loc_433A63  +
shr al 1 +
and eax 3 +
mov edx eax +
xor eax eax +
cmp edx 1 +
jle loc_433929  +
mov [esp+94h+var_90] 40h +
mov eax [ebx+4] +
mov [esp+94h+var_4C] ecx +
mov [esp+94h+var_94] eax +
call strrchr  +
mov ecx [esp+94h+var_4C] +
add eax 1 +
cmp eax esi +
jz loc_434432  +
test eax eax +
jz loc_433955  +
test esi esi +
jz loc_433955  +
mov [esp+94h+var_90] esi +
mov [esp+94h+var_94] eax +
mov [esp+94h+var_4C] ecx +
call strcmp  +
mov ecx [esp+94h+var_4C] +
test eax eax +
jnz loc_433955  +
mov al 1 +
jmp loc_433957  +
xor eax eax +
mov esi [esp+94h+var_6C] +
mov [esi] eax +
lea esi [esi+0] +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
ja loc_433A80  +
movzx edx al +
jmp ds:off_48B7D0[edx*4]  +
cmp ebx eax +
jnb loc_433C21  +
cmp byte ptr [eax-1] 40h +
jz loc_433C21  +
or byte ptr [ebp+34h] 6 +
jmp loc_43388B  +
mov eax [ebx+14h] +
mov esi [eax+4] +
mov [esp+94h+var_30] esi +
mov esi [esi+94h] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+var_50] +
test esi esi +
jz loc_4339C5  +
mov eax [eax] +
mov [esi] eax +
jmp loc_4339C5  +
mov eax [ebx+14h] +
mov [esp+94h+var_30] eax +
mov eax [eax+94h] +
mov [esp+94h+var_74] eax +
mov eax [esp+94h+var_64] +
test eax eax +
jz loc_4339D7  +
mov edx [eax] +
test edx edx +
jz loc_4342B7  +
cmp [esp+94h+var_60] 2 +
setz al  +
mov byte ptr [esp+94h+var_2C] al +
movzx eax al +
mov [esp+94h+var_64] eax +
movzx eax byte ptr [ebx+0Ch] +
cmp al 2 +
setz dl  +
cmp al 4 +
mov esi edx +
mov edx [esp+94h+var_5C] +
setz al  +
or esi eax +
mov eax esi +
movzx eax al +
test edx edx +
mov [esp+94h+var_4C] eax +
jz loc_433A0F  +
mov [edx] eax +
mov edx [edi+30h] +
mov eax [esp+94h+var_68] +
mov edx [edx+4] +
mov eax [eax+74h] +
mov [esp+94h+var_94] ecx +
mov [esp+94h+var_90] edx +
call eax  +
test eax eax +
jnz loc_433A95  +
mov eax 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+14h] +
mov [esp+94h+var_30] 0 +
mov [esp+94h+var_74] eax +
jmp loc_4339C5  +
mov eax [esp+94h+var_6C] +
mov ebx ebp +
cmp dword ptr [eax] 0 +
jnz loc_433960  +
mov eax [esp+94h+var_6C] +
mov dword ptr [eax] 1 +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
jbe loc_43396D  +
lea esi [esi+0] +
mov [esp+94h+var_74] 0 +
mov [esp+94h+var_30] 0 +
jmp loc_4339C5  +
mov ecx [esp+94h+var_58] +
mov edx ebx +
mov eax edi +
call sub_42EAB0  +
mov eax [esp+94h+var_70] +
mov eax [eax+28h] +
shr eax 5 +
and eax 40h +
mov edx eax +
setnz al  +
mov byte ptr [esp+94h+var_5C] al +
movzx eax al +
test eax eax +
mov [esp+94h+var_28] eax +
jz loc_433AE3  +
cmp [esp+94h+var_54] offset off_4731A8 +
jz loc_43441A  +
mov eax [esp+94h+var_6C] +
mov eax [eax] +
test eax eax +
jz loc_433ADF  +
or byte ptr [ebx+34h] 80h +
or byte ptr [ebp+34h] 80h +
movzx eax byte ptr [ebx+0Ch] +
test al al +
jz loc_4342A3  +
mov ecx [esp+94h+var_74] +
cmp [esp+94h+var_70] ecx +
jz loc_43437A  +
mov ecx [esp+94h+var_74] +
test ecx ecx +
jz loc_4343E7  +
mov ecx [esp+94h+var_74] +
mov ecx [ecx+28h] +
shr ecx 0Bh +
and ecx 1 +
mov esi [esp+94h+var_54] +
cmp esi offset off_4731A8 +
jz loc_4343E0  +
mov esi [esi+14h] +
shr esi 0Ch +
xor esi 1 +
and esi 1 +
lea edx [eax-1] +
cmp dl 1 +
setnbe byte ptr [esp+94h+var_6C]  +
cmp al 5 +
setnz al  +
and byte ptr [esp+94h+var_6C] al +
movzx eax byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_24] 0 +
mov [esp+94h+var_60] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Ch] +
mov byte ptr [esp+94h+var_2C] al +
and eax 0Fh +
jnz loc_43430A  +
movzx eax byte ptr [ebx+30h] +
mov [esp+94h+var_2C] 0 +
test al al +
jnz loc_4342E2  +
mov edx [esp+94h+var_50] +
test edx edx +
setz byte ptr [esp+94h+var_20]  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_433C40  +
cmp byte ptr [esp+94h+var_20] 0 +
jz loc_433C40  +
mov eax ecx +
mov edx esi +
xor eax 1 +
test al dl +
jz loc_433C40  +
mov eax [esp+94h+var_60] +
test eax eax +
jz loc_433C33  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [eax+0Ch] +
movzx eax byte ptr [ebx+30h] +
and edx 0Fh +
cmp al dl +
jz loc_433BF7  +
test dl dl +
jz loc_433BF7  +
test al al +
jz loc_433BF7  +
mov [esp+94h+var_16] dl +
mov edx [esp+94h+var_24] +
mov byte ptr [esp+94h+var_1C] al +
mov eax [esp+94h+var_2C] +
xor edx 1 +
xor eax 1 +
or al dl +
movzx eax byte ptr [esp+94h+var_1C] +
movzx edx [esp+94h+var_16] +
jnz loc_433C0D  +
cmp [esp+94h+var_60] 0 +
jz loc_433C40  +
cmp dl 0Ah +
setz dl  +
cmp al 0Ah +
setz al  +
cmp dl al +
jz loc_433C40  +
mov eax [esp+94h+var_3C] +
mov dword ptr [eax] 1 +
mov eax 1 +
jmp loc_433A2E  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [ebp+34h] al +
jmp loc_43388B  +
cmp byte ptr [ebx+0Ch] 5 +
jz loc_433BB8  +
lea esi [esi+0] +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_433D20  +
test byte ptr [eax+2Ah] 20h +
jnz loc_433D20  +
mov eax [esp+94h+var_70] +
test byte ptr [eax+2Ah] 20h +
jnz loc_433D20  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [ebx+30h] +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al dl +
jz loc_433D20  +
cmp al 6 +
jz loc_43444B  +
cmp dl 6 +
jnz loc_433D20  +
mov eax [esp+94h+var_30] +
mov edi [esp+94h+var_54] +
mov [esp+94h+var_54] eax +
mov eax [esp+94h+var_60] +
mov [esp+94h+var_30] edi +
mov edi [esp+94h+var_70] +
mov [esp+94h+var_60] esi +
mov esi eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_74] edi +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+var_60] +
and eax esi +
test al 1 +
jnz loc_434485  +
mov eax [esp+94h+var_60] +
or eax esi +
mov eax [ebx+4] +
jz loc_434504  +
test esi esi +
mov [esp+94h+var_84] eax +
jz loc_4344BE  +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsDefinition +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_4733A4  +
mov [esp+94h+var_94] 11h +
call sub_4040F0  +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_433DBD  +
mov eax [esp+94h+var_58] +
test byte ptr [eax+0Dh] 3 +
jz loc_433DCA  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_433DCA  +
cmp byte ptr [ebp+0Ch] 6 +
jz loc_43446F  +
mov eax [ebx+10h] +
test eax eax +
jz loc_4344E8  +
mov eax [esp+94h+var_70] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_43443C  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov eax 1 +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
jmp loc_433A2E  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jnz loc_434335  +
mov edx esi +
and edx 1 +
jz loc_433DDC  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_433FB4  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_433DF6  +
cmp byte ptr [esp+94h+var_5C] 0 +
mov eax 0 +
cmovz eax [esp+94h+var_4C] +
mov [esp+94h+var_4C] eax +
movzx eax byte ptr [esp+94h+var_24] +
test byte ptr [esp+94h+var_2C] al +
jz loc_433E0B  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_64] +
jnz loc_434030  +
test esi esi +
jnz loc_434026  +
mov eax [esp+94h+var_48] +
mov eax [eax] +
test eax eax +
jnz loc_43403A  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_43403A  +
and dl byte ptr [esp+94h+var_5C] +
mov [esp+94h+var_1C] 0 +
mov [esp+94h+var_16] dl +
jz loc_433E85  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_433E85  +
mov eax [esp+94h+var_54] +
mov edx [esp+94h+var_64] +
mov eax [eax+14h] +
mov [esp+94h+var_1C] edx +
and eax 3 +
cmp eax 1 +
jnz loc_433E85  +
mov eax [esp+94h+var_58] +
mov edx [esp+94h+var_24] +
mov eax [eax+4] +
xor edx 1 +
test eax eax +
mov eax edx +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_1C] eax +
mov eax ecx +
and al byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_5C] 0 +
mov [esp+94h+var_15] al +
jz loc_433EA3  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_4343A5  +
mov eax [esp+94h+var_68] +
mov eax [eax+150h] +
test eax eax +
jz loc_433EF4  +
mov ecx [esp+94h+var_30] +
mov edx [esp+94h+var_58] +
mov [esp+94h+var_88] esi +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_7C] ecx +
mov ecx [esp+94h+var_74] +
mov [esp+94h+var_90] edx +
mov [esp+94h+var_80] ecx +
mov ecx [esp+94h+var_60] +
mov [esp+94h+var_84] ecx +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_8C] ecx +
call eax  +
test eax eax +
jz loc_433D10  +
mov ecx [esp+94h+var_44] +
mov eax [ecx] +
mov [esp+94h+var_54] eax +
movzx eax byte ptr [esp+94h+var_1C] +
test byte ptr [esp+94h+var_5C] al +
jz loc_433F4F  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jz loc_433F4F  +
mov edx [edi+18h] +
mov ecx [esp+94h+var_70] +
mov edx [edx+8] +
mov [esp+94h+var_84] eax +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call edx  +
test eax eax +
jz loc_433D10  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jbe loc_433F45  +
mov [ebx+2Ch] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
cmp [esp+94h+var_16] 0 +
jz loc_433FC9  +
mov eax [esp+94h+var_60] +
test eax eax +
jnz loc_433F73  +
cmp byte ptr [ebx+0Ch] 5 +
mov esi 1 +
jnz loc_433FC9  +
mov eax [esp+94h+var_24] +
or eax [esp+94h+var_64] +
jz loc_433FC9  +
mov eax [esp+94h+var_34] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_44] +
mov dword ptr [eax] offset off_4731A8 +
mov eax [esp+94h+var_40] +
cmp byte ptr [ebx+0Ch] 5 +
mov dword ptr [eax] 1 +
jz loc_434460  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_433A29  +
mov [esp+94h+var_54] offset off_4731A8 +
jmp loc_4341BA  +
test ecx ecx +
mov eax 0 +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_64] eax +
jmp loc_433DDC  +
mov eax [esp+94h+var_1C] +
test eax eax +
jz loc_434049  +
cmp byte ptr [ebx+0Ch] 5 +
jnz loc_434049  +
mov eax [esp+94h+var_34] +
mov ecx [esp+94h+var_38] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
mov [ecx] eax +
mov eax [esp+94h+var_68] +
mov ecx [esp+94h+var_30] +
mov eax [eax+14Ch] +
mov [esp+94h+var_94] ecx +
call eax  +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_54] eax +
mov [ecx] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_28] +
test eax eax +
jz loc_4341BA  +
jmp loc_433A29  +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_433E21  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
jmp loc_433E39  +
test esi 1 +
jz loc_4341A6  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_4341A6  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_434126  +
cmp [esp+94h+var_28] 0 +
jnz loc_433A29  +
cmp [esp+94h+var_15] 0 +
jz loc_434407  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_434407  +
mov edx [ebx+14h] +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov edx [edx+94h] +
mov [ebx+14h] edx +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_54] +
test byte ptr [ecx+15h] 10h +
jz loc_4340CE  +
mov ecx [esp+94h+var_2C] +
test ecx ecx +
jz loc_4340C4  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov byte ptr [ebx+30h] 0 +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
cmp byte ptr [ebp+0Ch] 6 +
jnz loc_434263  +
test ebp ebp +
jz loc_433A29  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [ebx+14h] +
mov [ebp+14h] eax +
mov eax [esp+94h+var_68] +
mov [ebp+0Ch] dl +
mov [ebx+14h] ebp +
mov byte ptr [ebx+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_433A29  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
or byte ptr [ebp+33h] 4 +
jmp loc_433A29  +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_434143  +
test byte ptr [eax+2Ah] 20h +
jz loc_434143  +
mov eax [esp+94h+var_70] +
mov esi 1 +
test byte ptr [eax+2Ah] 20h +
jz loc_43414F  +
mov eax [esp+94h+var_3C] +
xor esi esi +
mov dword ptr [eax] 1 +
mov ecx [esp+94h+var_28] +
mov eax [esp+94h+var_70] +
mov eax [eax+4] +
mov [esp+94h+var_8C] ecx +
mov ecx [esp+94h+var_54] +
mov [esp+94h+var_90] esi +
lea edx [ecx+14h] +
mov ecx [esp+94h+var_58] +
mov [esp+94h+var_94] edx +
mov edx ebx +
call sub_42FD70  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4341A6  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
ja loc_4341A6  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_433A29  +
test esi esi +
jnz loc_434077  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jz loc_433A29  +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_2C] +
jnz loc_434077  +
mov edx [esp+94h+var_5C] +
test edx edx +
jz loc_433A29  +
mov ecx [esp+94h+var_58] +
mov eax [edi+18h] +
mov edx [ecx+4] +
mov ecx [esp+94h+var_70] +
mov eax [eax+8] +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_84] edx +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
test eax eax +
jz loc_433D10  +
mov ecx [esp+94h+var_38] +
mov eax [ebx+2Ch] +
cmp eax [ecx] +
jbe loc_434221  +
mov [ecx] eax +
cmp byte ptr [esp+94h+var_20] 0 +
jnz loc_4345B1  +
mov eax [ebx+14h] +
mov ecx [esp+94h+var_50] +
mov edx [eax+40h] +
mov eax [eax+94h] +
mov [ecx] edx +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
cmp byte ptr [ebp+0Ch] 6 +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_48] +
mov dword ptr [ecx] 1 +
jz loc_43452A  +
mov dword ptr [ebx+40h] 0 +
jmp loc_433A29  +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_80] 0 +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 1 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] edi +
mov [esp+94h+var_94] eax +
call sub_4197B0  +
mov ebp eax +
jmp loc_43382C  +
and byte ptr [ebx+34h] 0FEh +
add esp 8Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+94h+var_74] +
mov [eax] ecx +
mov eax [esp+94h+var_70] +
mov ecx [eax+4] +
jmp loc_4339D7  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [ebp+34h] al +
jmp loc_43389A  +
mov [esp+94h+var_20] ecx +
mov ecx [esp+94h+var_68] +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_20] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_2C] eax +
jmp loc_433B80  +
mov [esp+94h+var_2C] ecx +
mov ecx [esp+94h+var_68] +
movzx eax al +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_2C] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_24] eax +
jmp loc_433B6C  +
cmp [esp+94h+var_54] offset off_4731A8 +
jz loc_433DCA  +
mov ecx [esp+94h+var_3C] +
mov dword ptr [ecx] 1 +
or byte ptr [ebx+33h] 4 +
or byte ptr [ebp+33h] 4 +
cmp al 3 +
jnz loc_433A29  +
mov [esp+94h+arg_4] ebx +
mov [esp+94h+arg_0] edi +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_433660  +
cmp byte ptr [esp+94h+var_2C] 0 +
jnz loc_43438B  +
mov ecx esi +
test cl cl +
jz loc_433B09  +
test edx edx +
jz loc_433A29  +
test byte ptr [ebx+33h] 2 +
jnz loc_433B09  +
lea esi [esi+0] +
jmp loc_433A29  +
test byte ptr [ebx+33h] 8 +
jz loc_433EA3  +
mov eax [ebx+14h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 1 +
jnz loc_433EA3  +
mov eax [esp+94h+var_2C] +
mov edx [ebx+2Ch] +
xor eax 1 +
test edx edx +
cmovz eax [esp+94h+var_5C] +
mov [esp+94h+var_5C] eax +
jmp loc_433EA3  +
xor esi esi +
jmp loc_433B32  +
mov ecx [esp+94h+var_30] +
test ecx ecx +
jz loc_43447E  +
mov edx [ecx+98h] +
mov ecx [edx+0Ch] +
shr ecx 0Fh +
and ecx 1 +
jmp loc_433B16  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jnz loc_4341D6  +
jmp loc_433A29  +
cmp [esp+94h+var_60] 2 +
jz loc_433AE3  +
or byte ptr [ebx+35h] 1 +
or byte ptr [ebp+35h] 1 +
jmp loc_433AE3  +
mov eax 1 +
jmp loc_433957  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_433DA2  +
cmp dl 6 +
jnz loc_433CB6  +
jmp loc_433C8C  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
jmp loc_433F9B  +
test al 1 +
jnz loc_434534  +
mov ebx ebp +
jmp loc_433D50  +
xor ecx ecx +
jmp loc_433B16  +
mov eax [ebx+4] +
mov [esp+94h+var_94] offset aSTlsDefiniti_0 +
mov [esp+94h+var_80] eax +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_84] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_4733A4  +
jmp loc_433D04  +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_94] offset aSTlsReferenceI +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_4733A4  +
jmp loc_433D04  +
mov eax [edi+1Ch] +
cmp [eax+20h] ebx +
jz loc_433D5B  +
mov byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_433D66  +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsReferenc_0 +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_4733A4  +
jmp loc_433D04  +
mov edx 1 +
jmp loc_4340E7  +
movzx eax byte ptr [ebx+0Ch] +
mov esi [esp+94h+var_68] +
mov [ebp+0Ch] al +
mov eax [esi+0D8h] +
mov byte ptr [ebx+0Ch] 6 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_58] +
mov [ebx+14h] ebp +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_4345A5  +
mov eax [esi+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
mov ebx ebp +
jmp loc_433D50  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_43458D  +
mov [esp+94h+var_90] 657h +
mov [esp+94h+var_94] offset a____Binutils_4 +
call sub_404040  +
jmp loc_43422C  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
test byte ptr [eax+34h] 1 +
movzx eax byte ptr [eax+0Ch] +
jnz loc_43467B  +
sub eax 3 +
cmp al 1 +
jbe loc_4347F0  +
mov edx [ebp+0] +
mov eax [edx+1Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [edi+0E0h] +
test eax eax +
jz loc_43461F  +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_43466A  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_434790  +
movzx edx byte ptr [ebx+33h] +
test dl dl +
js loc_434740  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
jz loc_43464A  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_43484B  +
mov esi [ebx+3Ch] +
test esi esi +
jz loc_434841  +
movzx edx byte ptr [esi+33h] +
test dl 2 +
jz loc_4346C7  +
mov dword ptr [ebx+3Ch] 0 +
mov edx 1 +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_434674  +
sub eax 3 +
cmp al 1 +
jbe loc_4347C6  +
or byte ptr [ebx+33h] 11h +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_4345F4  +
test byte ptr [ebx+33h] 0Ch +
jz loc_4345F4  +
mov eax [ebp+0] +
mov [esp-4+arg_0] ebx +
mov [esp+0] eax +
call sub_433660  +
test eax eax +
jnz loc_4345F4  +
mov dword ptr [ebp+4] 1 +
xor edx edx +
jmp loc_43466A  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_4346C4  +
sub eax 3 +
cmp al 1 +
jbe loc_4346EE  +
mov [esp-4+arg_0] 0A4Ah +
mov dword ptr [esp+0] offset a____Binutils_4 +
call sub_404040  +
movzx edx byte ptr [esi+33h] +
and edx 8 +
jz loc_434828  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_434716  +
mov [esp-4+arg_0] 0A4Dh +
mov dword ptr [esp+0] offset a____Binutils_4 +
call sub_404040  +
mov edx [ebp+0] +
mov eax [edi+0D8h] +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] esi +
mov [esp+0] edx +
call eax  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+0] +
movzx eax byte ptr [ecx] +
test al 1 +
jz loc_434635  +
mov esi [ecx+1Ch] +
cmp dword ptr [esi+28h] 1 +
jnz loc_434635  +
test byte ptr [ebx+35h] 4 +
jnz loc_43486A  +
test al 4 +
jnz loc_43477D  +
test byte ptr [ecx+5] 1 +
jz loc_43486A  +
test byte ptr [ebx+34h] 10h +
jnz loc_43486A  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jmp loc_434877  +
movzx edx byte ptr [ebx+33h] +
mov eax edx +
and eax 0Bh +
cmp al 1 +
jnz loc_43462D  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
mov eax [eax+28h] +
shr eax 5 +
test eax 10040h +
jnz loc_43462D  +
or edx 2 +
mov [ebx+33h] dl +
jmp loc_43462D  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
test eax eax +
jz loc_4347E0  +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43468A  +
or byte ptr [ebx+33h] 2 +
jmp loc_43468E  +
movzx eax byte ptr [ebx+33h] +
test al 2 +
jnz loc_4345F4  +
mov ecx [ebx+14h] +
mov edx [ecx+94h] +
test edx edx +
jz loc_4348A7  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
setnz al  +
test al al +
jz loc_4345F4  +
or byte ptr [ebx+33h] 2 +
jmp loc_4345F4  +
mov [esp-4+arg_0] 0A4Bh +
mov dword ptr [esp+0] offset a____Binutils_4 +
call sub_404040  +
jmp loc_4346F7  +
mov edx 1 +
jmp loc_43466A  +
mov edx [ebp+0] +
mov eax [edi+0DCh] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
jmp loc_43464A  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_43464A  +
and edx 2 +
jz loc_43463C  +
movzx eax al +
mov edx [edi+0DCh] +
sub eax 1 +
cmp eax 1 +
setbe al  +
movzx eax al +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] ecx +
call edx  +
jmp loc_434635  +
xor edx edx +
cmp ecx offset off_473250 +
jz loc_4348B8  +
mov eax edx +
jmp loc_434817  +
shr al 3 +
mov edx eax +
xor edx 1 +
and edx 1 +
mov eax edx +
jmp loc_434817  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
lea edx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov esi [eax] +
mov eax ebx +
mov [esp+3Ch+var_14] esi +
call sub_4345D0  +
test eax eax +
jnz loc_434A17  +
mov ecx [esp+3Ch+var_10] +
test ecx ecx +
jz loc_434A0F  +
mov ecx [esp+3Ch+arg_4] +
mov dword ptr [ecx+4] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+33h] 2 +
jz loc_434A4F  +
mov ebp [esi+30h] +
mov edi [ebx+4] +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_38] 40h +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_28] eax +
call strchr  +
test eax eax +
jz loc_434B55  +
mov edx [ebx+40h] +
test edx edx +
jz loc_434A60  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+1] +
cmp dl 40h +
jz loc_434C08  +
add eax 1 +
mov [esp+3Ch+var_24] eax +
test dl dl +
jz loc_434A4F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_434BC7  +
mov [esp+3Ch+var_20] ebp +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+arg_0] ebx +
mov ebx edx +
jmp loc_434AAA  +
mov ebx [ebx] +
test ebx ebx +
jz loc_434BBF  +
mov [esp+3Ch+var_38] ebp +
mov eax [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jnz loc_434AA0  +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+arg_0] +
sub ebp edi +
mov [esp+3Ch+var_3C] ebp +
call sub_408000  +
mov edx [esp+3Ch+var_20] +
test eax eax +
mov edi eax +
jz loc_434BF6  +
mov ecx [ebx+4] +
lea eax [ebp-1] +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] ecx +
call memcpy  +
lea eax [edi+ebp-2] +
mov edx [esp+3Ch+var_24] +
mov byte ptr [edi+ebp-1] 0 +
cmp byte ptr [eax] 40h +
jz loc_434C76  +
mov [ebx+40h] edx +
mov ebp [edx+0Ch] +
mov dword ptr [edx+34h] 1 +
test ebp ebp +
jz loc_434C18  +
mov eax [edx+38h] +
lea ecx [edx+0Ch] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] ecx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_434C18  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov edx [ebx+40h] +
test edx edx +
jnz loc_434A4F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_434A4F  +
mov edx [ebx+4] +
lea ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_41C5D0  +
test eax eax +
mov [ebx+40h] eax +
jz loc_434A4F  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_434A4F  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_434A4F  +
mov ebp [esp+3Ch+var_20] +
mov ebx [esp+3Ch+arg_0] +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 1 +
jbe loc_434C7E  +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] offset aBVersionNodeNo +
call off_4733A4  +
mov [esp+3Ch+var_3C] 11h +
call sub_4040F0  +
mov eax [esp+3Ch+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_434A0F  +
lea ecx [eax+2] +
movzx edx byte ptr [eax+2] +
mov [esp+3Ch+var_24] ecx +
jmp loc_434A74  +
mov ecx [edx+1Ch] +
test ecx ecx +
jz loc_434B4D  +
mov eax [edx+38h] +
add edx 1Ch +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_434B4D  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_434B4D  +
test byte ptr [esi] 10h +
nop   +
jnz loc_434B4D  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_434B4D  +
mov byte ptr [eax] 0 +
jmp loc_434B11  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_434A4F  +
mov [esp+3Ch+var_38] 3Ch +
mov [esp+3Ch+var_3C] ebp +
call sub_406370  +
test eax eax +
jz loc_434BF6  +
mov ecx [esp+3Ch+var_24] +
mov dword ptr [eax+30h] 0FFFFFFFFh +
mov dword ptr [eax+34h] 1 +
mov [eax+4] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [ecx] +
mov ecx [edx+7Ch] +
test ecx ecx +
jz loc_434CF2  +
cmp dword ptr [ecx+8] 0 +
setnz cl  +
movzx ecx cl +
mov esi [edx+7Ch] +
add edx 7Ch +
test esi esi +
jnz loc_434CDA  +
jmp loc_434CE5  +
mov esi edx +
mov edx [esi] +
add ecx 1 +
test edx edx +
jnz loc_434CD8  +
mov edx esi +
mov [eax+8] ecx +
mov [edx] eax +
mov [ebx+40h] eax +
jmp loc_434A4F  +
mov ecx 1 +
jmp loc_434CCC  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ch] 6 +
jz loc_434D25  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
test byte ptr [eax] 10h +
jnz loc_434D1F  +
test byte ptr [ebx+34h] 10h +
jz loc_434D25  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_434D30  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
test byte ptr [ebx+33h] 3 +
jz loc_434D25  +
mov edx [ebx+4] +
mov eax [eax+7Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_41C7A0  +
test eax eax +
jnz loc_434D25  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_433660  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_434D2A  +
mov eax [esp+18h+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_434D2A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov edi [ebx+1Ch] +
cmp dword ptr [edi+28h] 1 +
jz loc_434DA0  +
***
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+3Ch] +
xor eax eax +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp] edi +
test edx edx +
setz al  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call sub_419760  +
test eax eax +
mov esi eax +
jz loc_434F85  +
cmp byte ptr [eax+0Ch] 7 +
ja sub_434E07  +
movzx eax byte ptr [eax+0Ch] +
jmp ds:off_48B854[eax*4]  +
***
mov eax [esi+10h] +
movzx eax byte ptr [esi+33h] +
mov eax [esp+arg_2C] +
mov [esp+arg_4] offset aBfd_elf_record +
xor ecx ecx +
mov edx esi +
mov eax ebx +
call sub_42EAB0  +
and byte ptr [esi+34h] 0FEh +
jmp sub_434E07  +
***
mov eax [esp+3Ch] +
jmp loc_434D98  +
***
or byte ptr [esi+34h] 8 +
jmp loc_434E8C  +
***
mov byte ptr [esi+0Ch] 1 +
jmp loc_434E22  +
***
cmp [edi+20h] esi +
jnz sub_434E07  +
jmp loc_434DFF  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [esp+70h] +
mov ebx [esp+74h] +
mov esi [esp+78h] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_434FE6  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+0C0h] +
test eax eax +
jnz loc_434FF8  +
jmp loc_435010  +
mov eax [eax] +
test eax eax +
jz loc_435010  +
cmp [eax+4] ebx +
jnz loc_434FF2  +
cmp [eax+8] esi +
jnz loc_434FF2  +
mov eax 1 +
jmp loc_434FDE  +
***
mov dword ptr [esp+4] 24h +
mov [esp] ebx +
call sub_406290  +
test eax eax +
mov ebp eax +
jz loc_434FDC  +
lea eax [esp+34h] +
mov [esp+18h] eax +
lea eax [esp+38h] +
mov [esp+14h] eax +
lea eax [ebp+10h] +
mov [esp+10h] eax +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 1 +
mov eax [ebx+0A0h] +
mov [esp] ebx +
add eax 48h +
mov [esp+4] eax +
call sub_421030  +
test eax eax +
jz loc_435146  +
mov eax [ebp+20h] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
ja loc_435095  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_423A90  +
test eax eax +
jz loc_435130  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jz loc_435130  +
mov eax [ebx+0A0h] +
mov edx [ebp+18h] +
mov eax [eax+64h] +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_420E30  +
mov edx [edi+1Ch] +
mov ecx eax +
mov eax [edx+50h] +
test eax eax +
jz loc_43510A  +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jz loc_434FDC  +
mov [ebp+18h] eax +
mov eax [edi+1Ch] +
mov edx [eax+0C0h] +
mov [ebp+0] edx +
mov [eax+0C0h] ebp +
mov [ebp+4] ebx +
mov [ebp+8] esi +
add dword ptr [eax+4Ch] 1 +
mov eax 1 +
and byte ptr [ebp+1Ch] 0Fh +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+2Ch] edx +
mov [esp+28h] ecx +
call sub_44B170  +
mov edx [esp+2Ch] +
mov ecx [esp+28h] +
test eax eax +
mov [edx+50h] eax +
jnz loc_4350BD  +
jmp loc_434FDC  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_4064E0  +
mov eax 2 +
jmp loc_434FDE  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_4064E0  +
jmp loc_434FDC  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov ecx [esp+0Ch] +
mov eax [eax+1Ch] +
mov eax [eax+0C0h] +
test eax eax +
jnz loc_435186  +
jmp loc_435194  +
mov eax [eax] +
test eax eax +
jz loc_435194  +
cmp [eax+4] edx +
jnz loc_435180  +
cmp [eax+8] ecx +
jnz loc_435180  +
mov eax [eax+0Ch] +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ebx [esp+18h+arg_8] +
mov eax [ebx+8Ch] +
mov ecx [eax+4] +
mov eax 1 +
cmp ecx 8 +
ja loc_4351F0  +
mov edx eax +
shl edx cl +
mov ecx edx +
and ecx 103h +
jz loc_4351F0  +
mov eax [esp+18h+arg_4] +
mov eax [eax+1Ch] +
cmp ebx [eax+0C8h] +
jz loc_4351F5  +
mov edx [eax+68h] +
test edx edx +
jz loc_435200  +
cmp ebx edx +
jz loc_4351F5  +
cmp ebx [eax+6Ch] +
setnz al  +
movzx eax al +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_4351F0  +
mov eax [eax+38h] +
test eax eax +
jz loc_4351F5  +
mov edx [ebx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_402D90  +
test eax eax +
jz loc_4351F5  +
cmp ebx [eax+3Ch] +
setz al  +
movzx eax al +
jmp loc_4351F0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
mov eax [esp+2Ch+arg_4] +
mov esi [eax+8Ch] +
mov ebx [esi+68h] +
test ebx ebx +
jz loc_435260  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4Ch] +
test eax eax +
jz loc_435255  +
mov ecx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
test ecx ecx +
jz loc_4353E2  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_14] 0 +
test eax eax +
jz loc_435422  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_435301  +
mov eax [ecx+10h] +
mov edx [ecx+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_10] ecx +
call sub_403BF0  +
mov ecx [esp+2Ch+var_10] +
test eax eax +
jz loc_435387  +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_4352D4  +
mov [esp+2Ch+var_2C] eax +
call free  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
jz loc_435255  +
mov edx [esp+2Ch+arg_10] +
mov eax [esp+2Ch+var_18] +
test edx edx +
jz loc_435375  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_4064E0  +
jmp loc_435255  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] eax +
mov ebp [esi+4Ch] +
test ebp ebp +
jz loc_435356  +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
call sub_403BF0  +
test eax eax +
jnz loc_4352C4  +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_430030  +
test eax eax +
jz loc_4352C4  +
mov ebx [esp+2Ch+arg_10] +
test ebx ebx +
jz loc_435365  +
mov eax [esp+2Ch+arg_C] +
mov [esi+68h] eax +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_435255  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_430030  +
test eax eax +
jz loc_4352C4  +
mov eax [esi+3Ch] +
mov ecx [eax+28h] +
mov edx [eax+18h] +
xor eax eax +
add [esp+2Ch+arg_8] edx +
test ecx ecx +
jz loc_4353C2  +
mov eax edx +
xor edx edx +
div  ecx +
mov edx [ebp+174h] +
movzx edx byte ptr [edx+9] +
lea ebp [edx+edx*2] +
shl ebp 2 +
imul ebp eax +
add ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] ebp +
jmp loc_435309  +
mov edx [ebp+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
movzx edx byte ptr [edx+9] +
imul eax edx +
mov edx [esp+2Ch+arg_10] +
test edx edx +
jz loc_43544F  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_406290  +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
test eax eax +
jz loc_435465  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_43527B  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_435472  +
mov eax [eax+18h] +
mov edx [esi+4Ch] +
test edx edx +
jz loc_435436  +
add eax [edx+18h] +
mov [esp+2Ch+var_2C] eax +
call sub_408000  +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jz loc_43545D  +
mov [esp+2Ch+var_14] eax +
jmp loc_43528F  +
mov [esp+2Ch+var_2C] eax +
call sub_408000  +
mov [esp+2Ch+arg_C] eax +
jmp loc_43540D  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_4352D4  +
xor eax eax +
jmp loc_43542C  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov eax [esi+4Ch] +
test eax eax +
jnz loc_4354B1  +
mov dword ptr [ebx] 0 +
xor eax eax +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+4] +
mov edi [eax+1B0h] +
movzx eax byte ptr [edx+2] +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] esi +
shr al 6 +
and eax 1 +
mov [esp+20h+var_10] eax +
mov [esp+20h+var_20] ecx +
call sub_435230  +
test eax eax +
mov [ebx] eax +
jz loc_435510  +
mov ecx [edi+174h] +
mov edx [esi+4Ch] +
mov [ebx+4] eax +
movzx ecx byte ptr [ecx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
mov [ebx+8] edx +
jmp loc_4354A2  +
xor eax eax +
jmp loc_4354AA  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov ecx [ecx+94h] +
call sub_42EEC0  +
test eax eax +
jnz loc_435544  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+94h] +
mov edx edi +
mov eax esi +
mov [esp+18h+var_18] ebx +
call sub_435480  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_43553D  +
mov eax [esi+0Ch] +
mov edx [ebx+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_43553B  +
cmp eax [edx+78h] +
jz loc_43553B  +
mov [esp+18h+var_18] eax +
call free  +
jmp loc_43553B  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov eax [esi+44h] +
test eax eax +
jz loc_435677  +
mov ebx [eax+8] +
test ebx ebx +
jz loc_435677  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_4355D0  +
mov [esp+2Ch+var_28] 3125h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_404040  +
mov ebx [esi+18h] +
mov eax [esi+2Ch] +
mov edi [esi+14h] +
add eax ebx +
mov [esp+2Ch+var_14] eax +
mov eax [edi+94h] +
mov [esp+2Ch+var_1C] 1 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_435230  +
test eax eax +
jz loc_4356A2  +
mov edx [edi+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
movzx edx byte ptr [ecx+0Bh] +
movzx ecx byte ptr [ecx+9] +
mov [esp+2Ch+var_D] dl +
mov edx [edi+4Ch] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
cmp eax edx +
jnb loc_435677  +
mov ebp [eax] +
cmp ebx ebp +
ja loc_435670  +
cmp [esp+2Ch+var_14] ebp +
jbe loc_435670  +
mov ecx [esi+44h] +
mov edi [ecx+4] +
test edi edi +
jz loc_435684  +
sub ebp ebx +
cmp ebp [ecx] +
jnb loc_435684  +
movzx ecx [esp+2Ch+var_D] +
shr ebp cl +
mov ecx [edi+ebp*4] +
test ecx ecx +
jz loc_435684  +
nop   +
add eax 0Ch +
cmp edx eax +
ja loc_435644  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [eax+8] 0 +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-0Ch] 0 +
cmp edx eax +
ja loc_435644  +
jmp loc_435677  +
mov eax [esp+2Ch+arg_4] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_43567C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+50h] +
mov ecx [esp+54h] +
mov eax [ebp+4] +
mov esi [eax+1B0h] +
mov eax [ecx+3Ch] +
mov edx [eax+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_4356E8  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_435808  +
mov eax [edx+4Ch] +
test eax eax +
jz loc_4356FB  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_435730  +
mov eax [ecx+94h] +
mov [esp+0Ch] ecx +
mov [esp+4] ebp +
mov dword ptr [esp] offset aBRelocationSiz +
mov [esp+8] eax +
call off_4733A4  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+4Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+44h] +
mov [esp+1Ch] ecx +
mov ecx edi +
mov eax [eax+30h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+4] +
mov ebx eax +
xor eax eax +
test ecx ecx +
jz loc_4357F2  +
movzx eax byte ptr [edx+9] +
xor edx edx +
lea edi [eax+eax*2] +
mov eax [esp+58h] +
shl edi 2 +
mov eax [eax+18h] +
mov [esp+28h] eax +
div  ecx +
imul edi eax +
add edi [esp+5Ch] +
cmp [esp+5Ch] edi +
mov [esp+20h] edi +
jnb loc_4357EA  +
mov eax ebx +
mov edi [esp+2Ch] +
imul eax ecx +
mov ebx [esp+5Ch] +
add edi eax +
mov eax edi +
mov edi esi +
mov esi eax +
nop   +
mov eax [esp+1Ch] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
call eax  +
mov edx [edi+174h] +
mov eax [esp+58h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
mov edx [eax+28h] +
add esi edx +
cmp [esp+20h] ebx +
ja loc_4357A0  +
mov eax [esp+24h] +
test edx edx +
mov eax [eax+4] +
mov ebx eax +
jz loc_435823  +
mov eax [esp+58h] +
mov ecx edx +
mov eax [eax+18h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
xor edx edx +
div  ecx +
mov ecx [esp+24h] +
add eax ebx +
mov [ecx+4] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+3Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+3Ch] +
mov [esp+1Ch] ecx +
mov ecx edi +
jmp loc_435746  +
***
xor eax eax +
jmp loc_4357F2  +
***
mov edx [esp+4] +
mov ecx [esp+8] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 1 +
jz loc_435848  +
mov eax 1 +
retn   +
***
cmp dword ptr [ecx+20h] 0FFFFFFFFh +
jnz loc_435842  +
cmp byte ptr [ecx+0Ch] 2 +
jnz loc_435842  +
jmp sub_433660  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
mov edx [ebx+18h] +
mov ecx [eax+40h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test edx eax +
jz loc_43588D  +
shr eax 1 +
sub ecx 1 +
test eax edx +
jnz loc_435884  +
cmp [esi+40h] ecx +
jnb loc_435895  +
mov [esi+40h] ecx +
mov ecx eax +
mov edx 0FFFFFFFFh +
add ecx [esi+24h] +
jb loc_4358A7  +
not eax  +
mov edx eax +
and edx ecx +
mov [ebx+18h] edx +
add edx [ebx+2Ch] +
test byte ptr [ebx+35h] 8 +
mov [ebx+14h] esi +
mov [esi+24h] edx +
jz loc_4358C6  +
mov eax [esp+20h] +
mov eax [eax+58h] +
test eax eax +
jz loc_4358E9  +
js loc_4358D1  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
cmp byte ptr [eax+1AEh] 0 +
js loc_4358C6  +
mov eax [esp+20h] +
mov edx [ebx+4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] edx +
mov dword ptr [esp] offset aPCopyRelocAgai +
call eax  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test ebx ebx +
jnz loc_435925  +
jmp loc_4359C6  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_435922  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4359C6  +
movzx edx byte ptr [ebx+34h] +
xor eax eax +
test dl 8 +
jnz loc_4359C0  +
mov eax [esp+24h] +
mov esi 1 +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 3 +
cmp cl 1 +
jbe loc_435964  +
xor si si +
test byte ptr [ebx+35h] 4 +
jz loc_4359D0  +
movzx edx byte ptr [ebx+31h] +
and edx 3 +
jz loc_4359A0  +
xor eax eax +
cmp dl 2 +
jbe loc_4359C0  +
cmp dl 3 +
jnz loc_4359A0  +
mov ecx [esp+24h] +
mov edx [ecx+1Ch] +
cmp dword ptr [edx+28h] 1 +
jnz loc_4359C0  +
mov eax [edx+38h] +
mov edx [esp+28h] +
mov eax [eax+4] +
test edx edx +
mov eax [eax+1B0h] +
jnz loc_435A0E  +
mov esi 1 +
nop   +
movzx edx byte ptr [ebx+33h] +
test dl 2 +
jnz loc_435A00  +
and edx 0Ah +
mov eax 1 +
jnz loc_4359C0  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_435A00  +
lea esi [esi+0] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
test al 4 +
mov si 1 +
jnz loc_435964  +
mov eax [esp+24h] +
xor si si +
test byte ptr [eax+5] 1 +
jz loc_435964  +
shr dl 4 +
xor edx 1 +
mov esi edx +
and esi 1 +
jmp loc_435964  +
***
mov eax esi +
add esp 14h +
xor eax 1 +
and eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+30h] +
mov eax [eax+158h] +
mov [esp] edx +
call eax  +
test eax eax +
mov eax 1 +
cmovz esi eax +
jmp loc_4359A0  +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_0] +
test edx edx +
jz loc_435AB0  +
movzx ecx byte ptr [edx+31h] +
and ecx 3 +
movzx eax cl +
sub eax 1 +
cmp eax 1 +
jbe loc_435AB0  +
movzx ebx byte ptr [edx+33h] +
test bl 0Ah +
jnz loc_435A5F  +
cmp byte ptr [edx+0Ch] 3 +
jz loc_435A66  +
xor eax eax +
and ebx 2 +
jz loc_435AB5  +
movzx eax byte ptr [edx+34h] +
test al 8 +
jnz loc_435AB0  +
cmp dword ptr [edx+20h] 0FFFFFFFFh +
jz loc_435AB0  +
mov esi [esp+10h+arg_4] +
movzx edi byte ptr [esi] +
mov esi edi +
and esi 3 +
mov ebx esi +
cmp bl 1 +
jbe loc_435AB0  +
test byte ptr [edx+35h] 4 +
jnz loc_435A9C  +
and edi 4 +
jnz loc_435AB0  +
mov esi [esp+10h+arg_4] +
test byte ptr [esi+5] 1 +
jnz loc_435B00  +
xor eax eax +
test cl cl +
jz loc_435AB5  +
mov eax [esp+10h+arg_4] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_435AC0  +
nop   +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+38h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov eax [esp+10h+arg_4] +
mov eax [eax+58h] +
test eax eax +
jz loc_435AE6  +
mov eax [esp+10h+arg_8] +
jns loc_435AB5  +
cmp byte ptr [ecx+1AEh] 0 +
js loc_435AB5  +
movzx edx byte ptr [edx+30h] +
mov eax [ecx+158h] +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
jz loc_435AB0  +
mov eax [esp+10h+arg_8] +
jmp loc_435AB5  +
test al 10h +
jnz loc_435A9C  +
jmp loc_435AB0  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
mov eax [eax+64h] +
test eax eax +
jnz loc_435B2A  +
jmp loc_435B60  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_435B60  +
test byte ptr [eax+15h] 4 +
nop   +
jz loc_435B23  +
mov edx eax +
xor ecx ecx +
jmp loc_435B3E  +
test byte ptr [edx+15h] 4 +
jz loc_435B4D  +
mov ebx [edx+40h] +
mov edx [edx+0Ch] +
cmp ecx ebx +
cmovb ecx ebx +
test edx edx +
jnz loc_435B38  +
mov edx [esi+1Ch] +
mov [edx+0C8h] eax +
mov [eax+40h] ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+1Ch] +
mov dword ptr [eax+0C8h] 0 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_435BA0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+38h] +
mov edx [eax+4] +
mov ebp [edx+1B0h] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] eax +
call sub_402D90  +
test eax eax +
mov esi eax +
jz loc_435C30  +
mov eax [ebp+174h] +
movzx edi byte ptr [eax+6] +
mov eax [esi+6Ch] +
add edi [esi+24h] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_408090  +
test eax eax +
jz loc_435B94  +
mov edx [esp+2Ch+arg_4] +
mov ecx [ebx+38h] +
mov ebx eax +
add ebx [esi+24h] +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_14] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] edx +
mov edx [ebp+174h] +
mov edx [edx+34h] +
mov [esp+2Ch+var_24] ebx +
lea ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ecx +
call edx  +
mov eax [esp+2Ch+var_20] +
mov [esi+24h] edi +
mov [esi+6Ch] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 0C51h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_404040  +
jmp loc_435BC2  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [edx+1Ch] +
mov [esp+3Ch+var_20] edx +
mov esi [ebx+38h] +
test esi esi +
jz loc_435DC0  +
mov edx [ebx+50h] +
test edx edx +
jz loc_435DD0  +
mov eax [esp+3Ch+var_20] +
mov ebp [eax+1Ch] +
mov eax [ebp+50h] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
mov [esp+3Ch+var_24] eax +
jz loc_435DE8  +
mov eax [ebp+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_44B410  +
cmp eax 1 +
jz loc_435D52  +
mov eax [ebp+38h] +
mov edx [eax+4] +
mov esi [edx+1B0h] +
mov [esp+3Ch+var_38] offset a_dynamic +
mov [esp+3Ch+var_3C] eax +
call sub_402D90  +
test eax eax +
jz loc_435D52  +
mov ebx [eax+6Ch] +
mov edx [eax+24h] +
add edx ebx +
cmp ebx edx +
jnb loc_435D52  +
mov edi ebp +
mov ecx [esi+174h] +
mov ebp eax +
jmp loc_435D09  +
mov ecx [esi+174h] +
movzx eax byte ptr [ecx+6] +
add ebx eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp ebx eax +
jnb loc_435D50  +
mov eax [ecx+30h] +
lea edx [esp+3Ch+var_14] +
mov ecx [edi+38h] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ecx +
call eax  +
cmp [esp+3Ch+var_14] 1 +
jnz loc_435CF3  +
mov eax [esp+3Ch+var_24] +
cmp [esp+3Ch+var_10] eax +
jnz loc_435CF3  +
mov eax [edi+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_44B370  +
mov eax 1 +
jmp loc_435DB5  +
mov ebp edi +
mov eax [esp+3Ch+arg_0] +
test eax eax +
jz loc_435DA0  +
mov eax [ebp+38h] +
mov edi [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_433240  +
test eax eax +
jz loc_435DE8  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
call sub_435B80  +
test eax eax +
setz al  +
add esp 3Ch +
movzx eax al +
pop ebx  +
neg eax  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+50h] +
mov esi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] esi +
call sub_44B370  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+50h] +
mov [ebx+38h] eax +
test edx edx +
jnz loc_435C74  +
nop   +
mov [esp+3Ch+var_24] ecx +
call sub_44B170  +
mov ecx [esp+3Ch+var_24] +
test eax eax +
mov [ebx+50h] eax +
jnz loc_435C74  +
mov eax 0FFFFFFFFh +
jmp loc_435DB5  +
***
mov eax [esp+8] +
cmp [esp+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
cmp edx eax +
jz loc_435E31  +
mov ecx [edx+1B0h] +
mov edx [eax+1B0h] +
xor eax eax +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_435E23  +
pop ebx  +
retn   +
***
mov eax [edx+74h] +
cmp [ecx+74h] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
mov eax 1 +
pop ebx  +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov ecx [esp+38h] +
mov edx [eax+18h] +
mov edx [edx+28h] +
mov [esp+14h] ecx +
mov ecx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call edx  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+44h] +
mov esi [esp+48h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419760  +
test eax eax +
mov ebx eax +
jz loc_435ED6  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 40h +
mov [esp] esi +
call strchr  +
test eax eax +
jz loc_435ECC  +
cmp byte ptr [eax+1] 40h +
jnz loc_435ECC  +
mov [esp] esi +
mov ebx 0FFFFFFB8h +
mov [esp+1Ch] eax +
call strlen  +
mov ecx [esp+40h] +
mov [esp] ecx +
mov [esp+4] eax +
mov [esp+18h] eax +
call sub_406290  +
test eax eax +
mov ebp eax +
jz loc_435ECC  +
mov ecx [esp+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
sub ecx esi +
lea ebx [ecx+1] +
mov [esp+8] ebx +
mov [esp+1Ch] ecx +
call memcpy  +
mov edx [esp+18h] +
lea eax [ebp+ebx+0] +
mov ecx [esp+1Ch] +
mov [esp] eax +
sub edx ebx +
lea ecx [esi+ecx+2] +
mov [esp+8] edx +
mov [esp+4] ecx +
call memcpy  +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419760  +
test eax eax +
mov esi eax +
jz loc_435F9E  +
mov eax [esp+40h] +
mov ebx esi +
mov [esp+4] ebp +
mov [esp] eax +
call sub_4064E0  +
jmp loc_435ECC  +
***
mov byte ptr [ebp+ebx-1] 0 +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419760  +
mov esi eax +
jmp loc_435F87  +
***
push esi  +
push ebx  +
sub esp 13Ch +
mov ebp [esp+13Ch+arg_0] +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp eax 1 +
jz loc_436020  +
cmp eax 2 +
jnz loc_436065  +
test byte ptr [ebp+2Bh] 20h +
jz loc_436470  +
mov eax [ebp+0A0h] +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_436222  +
add esp 13Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+13Ch+arg_4] +
test byte ptr [ebp+29h] 8 +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_FC] eax +
mov eax [ebp+4] +
mov edi [eax+1B0h] +
mov [esp+13Ch+var_104] edi +
jz loc_436080  +
mov edi [esp+13Ch+arg_4] +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jz loc_4368D0  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jz loc_436696  +
mov [esp+13Ch+var_13C] 3 +
call sub_4040F0  +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_100] 0 +
mov edi [esp+13Ch+arg_4] +
mov eax [ebp+0A0h] +
test byte ptr [edi+5] 20h +
jz loc_4360E2  +
mov edi [esp+13Ch+var_104] +
movzx eax word ptr [eax+26h] +
mov edx [edi+8] +
cmp edx eax +
jz loc_4360E2  +
mov ecx [edi+16Ch] +
test ecx ecx +
jz loc_436430  +
cmp eax ecx +
jnz loc_436430  +
mov edi [esp+13Ch+arg_4] +
mov ecx [edi+18h] +
mov ecx [ecx+2Ch] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] offset aPAlternateElfM +
call ecx  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_4360FB  +
jmp loc_4364B9  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4364A0  +
mov eax [ebx] +
mov edi offset a_gnu_warning_ +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_4360F0  +
mov ecx [esp+13Ch+var_100] +
lea edi [eax+0Dh] +
test ecx ecx +
jz loc_43614F  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_12C] 1 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_419760  +
test eax eax +
jz loc_43614F  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_4360F0  +
mov esi [ebx+24h] +
mov [esp+13Ch+var_13C] ebp +
lea eax [esi+1] +
mov [esp+13Ch+var_138] eax +
call sub_406290  +
test eax eax +
jz loc_436460  +
mov [esp+13Ch+var_128] esi +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_108] eax +
call sub_4034C0  +
test eax eax +
jz loc_436460  +
mov edx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_104] +
mov byte ptr [edx+esi] 0 +
mov [esp+13Ch+var_118] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] edx +
mov [esp+13Ch+var_128] 0 +
and eax 1 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_12C] ebx +
mov [esp+13Ch+var_130] 1000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_41A3C0  +
test eax eax +
jz loc_436460  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 1 +
ja loc_4360F0  +
mov dword ptr [ebx+24h] 0 +
or dword ptr [ebx+14h] 8000h +
jmp loc_4360F0  +
mov [esp+13Ch+var_13C] ebx +
call sub_408190  +
mov edi eax +
mov [esp+13Ch+var_F8] eax +
xor eax eax +
test edi edi +
jz loc_436073  +
mov eax [ebp+0A0h] +
shl ebx 4 +
mov eax [eax+10h] +
mov edi eax +
mov [esp+13Ch+var_EC] eax +
mov eax [ebp+4] +
add ebx edi +
cmp edi ebx +
mov [esp+13Ch+var_108] ebx +
mov eax [eax+1B0h] +
mov eax [eax+40h] +
mov [esp+13Ch+var_100] eax +
jnb loc_43792C  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_F8] +
mov ecx [esp+13Ch+var_EC] +
xor edi edi +
mov ebx 0FFFFFFFFh +
mov eax edi +
mov esi 0FFFFFFFFh +
mov edi ebp +
mov ebp eax +
mov [esp+13Ch+var_104] ebx +
mov [esp+13Ch+var_FC] 0 +
mov ebx ecx +
jmp loc_4362B8  +
cmp al 2 +
jz loc_4362A8  +
mov byte ptr [edi+ebp] 1 +
add ebx 10h +
add ebp 1 +
cmp ebx [esp+13Ch+var_108] +
jnb loc_43791E  +
cmp byte ptr [edi+ebp] 0 +
jnz loc_4362A8  +
mov edx [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
xor eax [ebx+8] +
xor edx esi +
or edx eax +
jz loc_4362A4  +
mov eax [ebx] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_13C] eax +
mov eax [esp+13Ch+var_100] +
call eax  +
cmp eax 0FFFFFFB8h +
jz loc_43644F  +
test eax eax +
jz loc_4362A8  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_4368F8  +
cmp al 1 +
jnz loc_4362A0  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_4151E0  +
test eax eax +
mov [esp+13Ch+var_14] eax +
jz loc_43644F  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_407110  +
test eax eax +
jz loc_43644F  +
mov eax [esp+13Ch+arg_4] +
lea ecx [esp+13Ch+var_14] +
mov edx [ebx] +
mov eax [eax+1Ch] +
mov esi [eax+20h] +
mov eax [esp+13Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax] +
mov [esp+13Ch+var_130] ecx +
mov ecx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_134] edx +
mov edx [esp+13Ch+var_14] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] edx +
call eax  +
test eax eax +
jz loc_43644F  +
mov eax [esp+13Ch+var_14] +
mov ecx [esp+13Ch+arg_4] +
mov edx [eax+4] +
mov edx [edx+168h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
test eax eax +
jz loc_43644F  +
mov eax [esp+13Ch+arg_4] +
lea edx [ebx-8] +
mov [esp+13Ch+var_104] edi +
mov [esp+13Ch+var_F4] ebp +
mov eax [eax+1Ch] +
cmp esi [eax+20h] +
mov eax 1 +
cmovz eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_FC] eax +
mov eax ebp +
jmp loc_43640D  +
mov ecx [edx] +
sub eax 1 +
sub edx 10h +
mov esi [edx+14h] +
mov edi [ebx+8] +
mov ebp [ebx+0Ch] +
xor ecx edi +
xor esi ebp +
or esi ecx +
jnz loc_4368E3  +
mov edi [esp+13Ch+var_104] +
test eax eax +
mov byte ptr [edi+eax] 1 +
jnz loc_4363F0  +
mov eax [ebx+8] +
mov ebp [esp+13Ch+var_F4] +
mov esi [ebx+0Ch] +
mov [esp+13Ch+var_104] eax +
jmp loc_4362A8  +
mov edi [esp+13Ch+var_104] +
mov ecx [edi+170h] +
test ecx ecx +
jz loc_4360E2  +
cmp eax ecx +
jnz loc_4360E2  +
jmp loc_4360C0  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_138] 0 +
mov [esp+13Ch+var_13C] ebp +
call sub_4154D0  +
test eax eax +
jz loc_43600D  +
mov [esp+13Ch+var_13C] 8 +
call sub_4040F0  +
xor eax eax +
jmp loc_436073  +
mov eax [ebp+64h] +
test eax eax +
jz loc_4364B9  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jz loc_4366B6  +
mov edx [esp+13Ch+var_100] +
xor eax eax +
test edx edx +
jnz loc_4366C6  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_4364E1  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_4384A3  +
mov ecx [ebp+0A0h] +
mov [esp+13Ch+var_AC] 1 +
lea eax [ecx+48h] +
mov [esp+13Ch+var_E4] eax +
mov eax [esp+13Ch+var_104] +
xor edx edx +
mov [esp+13Ch+var_108] 0 +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+18h] +
div  ebx +
mov [esp+13Ch+var_D0] eax +
mov eax [ecx+928h] +
test eax eax +
jnz loc_436537  +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+20h] +
sub [esp+13Ch+var_D0] eax +
mov [esp+13Ch+var_108] eax +
mov eax [ecx+218h] +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_D0] +
test eax eax +
jnz loc_437C2A  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_437CB0  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
test byte ptr [ebx+924h] 1 +
jz loc_436A7A  +
mov ecx [esp+13Ch+var_FC] +
mov edi [ecx+0Ch] +
test edi edi +
mov [esp+13Ch+var_F8] edi +
jz loc_438660  +
mov esi [ecx] +
xor eax eax +
mov [esp+13Ch+arg_0] ebp +
mov ebp ecx +
lea edi [esi+edi*4] +
nop   +
mov edx [esi] +
test edx edx +
jz loc_4365C2  +
mov ecx [ebp+14h] +
lea esi [esi+0] +
add eax ecx +
cmp byte ptr [edx+0Ch] 7 +
mov edx [edx] +
lea ebx [eax+ecx] +
cmovz eax ebx +
test edx edx +
jnz loc_4365B0  +
add esi 4 +
cmp esi edi +
jnz loc_4365A0  +
mov ebp [esp+13Ch+arg_0] +
mov edi [esp+13Ch+var_F8] +
shl edi 2 +
add eax edi +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_A8] edi +
call sub_408000  +
test eax eax +
mov [esp+13Ch+var_B8] eax +
jz loc_436667  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_409270  +
test eax eax +
mov [esp+13Ch+var_A4] eax +
jz loc_43806A  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_C8] 0 +
test eax eax +
jnz loc_4384F0  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_436667  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_436677  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov ebx [esp+13Ch+var_D4] +
test ebx ebx +
jz loc_436460  +
mov eax [esp+13Ch+var_D4] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_436073  +
mov edi [esp+13Ch+arg_4] +
mov edx [edi+30h] +
cmp eax [edx+4] +
jnz loc_436065  +
mov [esp+13Ch+var_100] 1 +
jmp loc_436088  +
cmp [esp+13Ch+var_100] 0 +
mov eax 1 +
jz loc_4364E1  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jnz loc_436460  +
test eax eax +
mov [esp+13Ch+var_20] 0 +
mov [esp+13Ch+var_1C] 0 +
jnz loc_43901C  +
mov eax [ebp+0A0h] +
mov eax [eax+924h] +
mov [esp+13Ch+var_138] offset a_dynamic +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_E4] eax +
call sub_402CB0  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_108] eax +
jz loc_437EA7  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call sub_403610  +
test eax eax +
jz loc_437E10  +
mov esi [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] esi +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
jz loc_437E10  +
mov edx [ebp+0A0h] +
mov edi [esp+13Ch+var_18] +
mov ecx [esi+24h] +
mov edx [edx+40h] +
add ecx edi +
cmp edi ecx +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_F8] eax +
jnb loc_4385DF  +
mov eax [esp+13Ch+var_104] +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov eax [eax+174h] +
jmp loc_4367D3  +
cmp eax 6FFFFEFCh +
jz loc_437AD9  +
mov eax [esp+13Ch+var_104] +
mov esi [esp+13Ch+var_108] +
mov eax [eax+174h] +
mov ecx [esi+24h] +
movzx edx byte ptr [eax+6] +
add edi edx +
mov edx [esp+13Ch+var_18] +
add ecx edx +
cmp edi ecx +
jnb loc_4385F1  +
mov eax [eax+30h] +
lea ecx [esp+13Ch+var_14] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov eax [esp+13Ch+var_14] +
cmp eax 0Eh +
jz loc_437AA6  +
cmp eax 1 +
jz loc_4379F6  +
cmp eax 1Dh +
jz loc_437940  +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_4367A0  +
cmp eax 0Fh +
jnz loc_4367A0  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_406290  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420E30  +
test eax eax +
jz loc_437E10  +
test ebx ebx +
jz loc_437E10  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_406290  +
test eax eax +
mov esi eax +
jz loc_437E10  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_20] +
test edx edx +
jnz loc_4368B8  +
jmp loc_438EED  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4368B6  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_4367A0  +
mov [esp+13Ch+var_13C] 5 +
call sub_4040F0  +
xor eax eax +
jmp loc_436073  +
mov eax edi +
mov esi ebp +
mov edi [esp+13Ch+var_104] +
mov ebp [esp+13Ch+var_F4] +
mov [esp+13Ch+var_104] eax +
jmp loc_4362A8  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_4151E0  +
test eax eax +
mov ecx eax +
jz loc_4362A8  +
movzx eax byte ptr [eax+2Ch] +
and eax 0Ch +
cmp al 4 +
jz loc_4362A8  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] ecx +
call sub_407110  +
test eax eax +
jz loc_4362A8  +
mov eax [esp+13Ch+var_F4] +
test byte ptr [eax+29h] 8 +
jnz loc_437FBD  +
mov eax [eax+0A0h] +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_F0] +
add eax 48h +
mov [esp+13Ch+var_E8] eax +
mov eax [esp+13Ch+var_F4] +
xor edx edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+18h] +
div  ecx +
mov edx [esp+13Ch+var_F0] +
mov edx [edx+928h] +
mov ecx eax +
xor eax eax +
test edx edx +
jnz loc_4369AA  +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+20h] +
sub ecx eax +
test ecx ecx +
jz loc_4362A8  +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_F0] ecx +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_421030  +
test eax eax +
mov edx eax +
mov [esp+13Ch+var_E4] eax +
jz loc_4362A8  +
mov ecx [esp+13Ch+var_F0] +
lea eax [ecx+ecx*4] +
mov ecx edx +
lea edx [edx+eax*4] +
cmp ecx edx +
mov [esp+13Ch+var_F0] edx +
jnb loc_436A69  +
mov [esp+13Ch+var_E0] edi +
mov edi [esp+13Ch+var_F4] +
mov [esp+13Ch+var_DC] ebp +
mov ebp [esp+13Ch+var_E8] +
mov [esp+13Ch+var_E8] esi +
mov esi ecx +
jmp loc_436A43  +
mov edx [ebx] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
call strcmp  +
test eax eax +
jz loc_438C28  +
add esi 14h +
cmp [esp+13Ch+var_F0] esi +
jbe loc_436A5D  +
mov edx [esi+8] +
mov eax [ebp+1Ch] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] eax +
call sub_420E30  +
test eax eax +
jnz loc_436A24  +
mov edi [esp+13Ch+var_E0] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_4362A8  +
mov [esp+13Ch+var_A8] 0 +
mov [esp+13Ch+var_BC] 0 +
mov [esp+13Ch+var_D8] 0 +
mov [esp+13Ch+var_98] 0 +
mov [esp+13Ch+var_9C] 0 +
mov [esp+13Ch+var_B8] 0 +
mov [esp+13Ch+var_8C] 0 +
mov [esp+13Ch+var_90] 0 +
mov [esp+13Ch+var_94] 0 +
mov [esp+13Ch+var_A4] 0 +
mov edi [esp+13Ch+var_C0] +
mov ecx [esp+13Ch+var_108] +
mov ebx [esp+13Ch+var_D4] +
mov [esp+13Ch+var_B0] 0 +
test edi edi +
lea eax [edi+ecx*2] +
mov ecx 0 +
cmovz eax ecx +
mov [esp+13Ch+var_EC] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_C8] 0 +
mov [esp+13Ch+var_CC] 0 +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+13Ch+var_E0] eax +
jnb loc_4370E2  +
mov eax [esp+13Ch+var_100] +
xor eax 1 +
mov [esp+13Ch+var_A0] eax +
mov eax [ebx] +
mov [esp+13Ch+var_44] 0 +
mov [esp+13Ch+var_58] 0 +
mov [esp+13Ch+var_5C] 0 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_104] +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ebx +
call eax  +
mov [esp+13Ch+var_E8] eax +
movzx eax byte ptr [ebx+0Ch] +
mov byte ptr [esp+13Ch+var_F8] al +
shr byte ptr [esp+13Ch+var_F8] 4 +
movzx eax byte ptr [esp+13Ch+var_F8] +
cmp al 1 +
jz loc_437320  +
jb loc_4370BE  +
cmp al 2 +
jz loc_437308  +
cmp al 0Ah +
jnz loc_436BB5  +
mov [esp+13Ch+var_58] 800000h +
mov eax [ebx+10h] +
test eax eax +
jz loc_437257  +
cmp eax 0FFFFFFF1h +
jz loc_4373AB  +
cmp eax 0FFFFFFF2h +
jnz loc_437362  +
mov eax [ebx+4] +
mov [esp+13Ch+var_5C] offset off_473100 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_E4] +
mov edx [ebx+8] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_420E30  +
test eax eax +
mov [esp+13Ch+var_54] eax +
jz loc_437883  +
cmp dword ptr [ebx+10h] 0FFFFFFF2h +
jz loc_4372A2  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+64h] +
test eax eax +
jz loc_4372F8  +
lea edx [esp+13Ch+var_60] +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] edx +
lea edx [esp+13Ch+var_5C] +
mov [esp+13Ch+var_128] edx +
lea edx [esp+13Ch+var_58] +
mov [esp+13Ch+var_12C] edx +
lea edx [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
test eax eax +
jz loc_437883  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_54] +
test eax eax +
jz loc_4370BE  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_437E96  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jz loc_437347  +
mov eax [esp+13Ch+var_F4] +
cmp eax offset off_4731A8 +
jz loc_4378E5  +
mov eax [eax+14h] +
mov [esp+13Ch+var_108] eax +
shr [esp+13Ch+var_108] 0Ch +
xor [esp+13Ch+var_108] 1 +
and [esp+13Ch+var_108] 1 +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+var_FC] +
mov [esp+13Ch+var_50] 0 +
mov [esp+13Ch+var_48] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_38] 0 +
mov [esp+13Ch+var_40] 0 +
mov [esp+13Ch+var_3C] 0 +
shr al 1 +
and eax 1 +
cmp dword ptr [edi+28h] 1 +
mov [esp+13Ch+var_4C] eax +
mov eax [esp+13Ch+var_F4] +
jnz loc_436FD1  +
mov eax [esp+13Ch+var_EC] +
test eax eax +
jz loc_4378F2  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_420C30  +
movzx eax word ptr [esp+13Ch+var_18] +
mov esi eax +
and esi 7FFFh +
test ax ax +
js loc_436D81  +
cmp esi 1 +
jbe loc_437B1B  +
cmp [esp+13Ch+var_5C] offset off_473250 +
jz loc_437AFD  +
mov eax [ebx+10h] +
test eax eax +
jz loc_4377E0  +
mov eax [ebp+0A0h] +
mov ecx [eax+238h] +
cmp esi ecx +
ja loc_437E72  +
cmp esi 1 +
jbe loc_437E4E  +
mov edi [eax+240h] +
lea edx [esi+esi*4] +
lea edx [edi+edx*8] +
mov edx [edx-10h] +
test edx edx +
jz loc_437E72  +
mov [esp+13Ch+var_13C] edx +
mov [esp+13Ch+var_DC] edx +
call strlen  +
mov edx [esp+13Ch+var_DC] +
mov [esp+13Ch+var_B4] eax +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov eax ecx +
mov ecx [esp+13Ch+var_B4] +
not eax  +
sub eax 1 +
mov [esp+13Ch+var_DC] eax +
add ecx eax +
lea eax [ecx+3] +
add ecx 2 +
cmp word ptr [esp+13Ch+var_18] 0 +
cmovs eax ecx +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_C4] edx +
mov [esp+13Ch+var_13C] eax +
call sub_409270  +
test eax eax +
mov edi eax +
jz loc_437883  +
mov eax [esp+13Ch+var_DC] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_DC] +
mov edx [esp+13Ch+var_C4] +
lea ecx [edi+eax] +
mov byte ptr [ecx] 40h +
lea eax [ecx+1] +
cmp word ptr [esp+13Ch+var_18] 0 +
js loc_436E6D  +
cmp dword ptr [ebx+10h] 0 +
jz loc_436E6D  +
lea eax [ecx+2] +
mov byte ptr [ecx+1] 40h +
mov ecx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_13C] eax +
add ecx 1 +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_5C] +
mov ecx edi +
mov [esp+13Ch+var_54] edi +
cmp eax offset off_4731A8 +
jz loc_436EC3  +
mov eax [esp+13Ch+var_100] +
test eax eax +
jnz loc_436EC3  +
test byte ptr [ebp+2Bh] 8 +
jz loc_436EC3  +
movzx eax byte ptr [ebx+0Dh] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jz loc_436EC3  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+0Dh] al +
lea eax [esp+13Ch+var_38] +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_50] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_4C] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_44] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_40] +
mov [esp+13Ch+var_124] eax +
lea eax [esp+13Ch+var_48] +
mov [esp+13Ch+var_128] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
call sub_433740  +
test eax eax +
jz loc_437883  +
mov eax [esp+13Ch+var_14] +
test eax eax +
jnz loc_4370BE  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jz loc_436F83  +
mov eax [esp+13Ch+var_38] +
test eax eax +
mov eax 0 +
cmovz eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_108] eax +
mov eax [esp+13Ch+var_F0] +
mov eax [eax] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
ja loc_436FA4  +
mov eax [eax+14h] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
jbe loc_436F95  +
mov edx [ebp+0A0h] +
mov edx [edx+240h] +
test edx edx +
jz loc_436FCA  +
cmp esi 1 +
jbe loc_436FCA  +
test byte ptr [esp+13Ch+var_108] 1 +
jz loc_436FCA  +
lea ecx [esi+esi*4] +
lea edx [edx+ecx*8-28h] +
mov [eax+40h] edx +
mov eax [esp+13Ch+var_5C] +
mov edi [esp+13Ch+var_F0] +
mov ecx [esp+13Ch+var_104] +
mov [esp+13Ch+var_118] edi +
movzx edx byte ptr [ecx+1ACh] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_58] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] 0 +
and edx 1 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_11C] edx +
mov edx [esp+13Ch+var_60] +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_128] edx +
mov [esp+13Ch+var_13C] eax +
call sub_41A3C0  +
test eax eax +
jz loc_437883  +
mov edi [edi] +
movzx eax byte ptr [edi+0Ch] +
mov esi edi +
sub eax 6 +
cmp al 1 +
ja loc_43705E  +
lea esi [esi+0] +
mov esi [esi+14h] +
movzx eax byte ptr [esi+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_437050  +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_C4] 0 +
mov [eax] esi +
mov eax [esp+13Ch+var_58] +
shr eax 7 +
and eax 1 +
mov byte ptr [esp+13Ch+var_DC] al +
movzx eax byte ptr [esp+13Ch+var_100] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_437093  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jnz loc_437B2E  +
mov eax [esp+13Ch+var_E8] +
test eax eax +
jz loc_437267  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_437E63  +
lea esi [esi+0] +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_4373BB  +
mov edi [esp+13Ch+var_EC] +
add ebx 14h +
add [esp+13Ch+var_F0] 4 +
mov eax edi +
add eax 2 +
test edi edi +
cmovz eax edi +
cmp [esp+13Ch+var_E0] ebx +
mov [esp+13Ch+var_EC] eax +
ja loc_436B41  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_4370F2  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_D4] +
test eax eax +
jz loc_437102  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [ebp+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_4387DF  +
mov eax [esp+13Ch+var_B8] +
test eax eax +
jz loc_437169  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 2 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_436648  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43867A  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_43867A  +
mov eax [esp+13Ch+var_B0] +
xor esi esi +
test eax eax +
jz loc_43866E  +
mov [esp+13Ch+arg_0] ebp +
jmp loc_4371B4  +
add esi 1 +
cmp esi [esp+13Ch+var_B0] +
jz loc_438667  +
mov eax [esp+13Ch+var_C8] +
mov ebx [eax+esi*4] +
mov edi [ebx+4] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] edi +
call strchr  +
test eax eax +
jz loc_4371A4  +
movzx ecx byte ptr [ebx+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_4371A4  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp+13Ch+var_13C] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_439007  +
mov eax [ebx+4] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov byte ptr [ebp+edi+0] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_419760  +
test eax eax +
mov edi eax +
jz loc_43724A  +
movzx eax byte ptr [ebx+0Ch] +
cmp [edi+0Ch] al +
jz loc_438E24  +
mov [esp+13Ch+var_13C] ebp +
call free  +
jmp loc_4371A4  +
mov [esp+13Ch+var_5C] offset off_4731A8 +
jmp loc_436BE7  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 10h +
jz loc_4370B0  +
cmp byte ptr [esi+0Ch] 5 +
jnz loc_4370B0  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+40h] +
mov edx [esp+13Ch+var_40] +
cmp edx eax +
jnb loc_437DEA  +
mov edx [esi+14h] +
mov [edx] eax +
jmp loc_4370B0  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_437B80  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jnz loc_436C1A  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_436C1A  +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_402CB0  +
test eax eax +
jz loc_438EC8  +
mov [esp+13Ch+var_5C] eax +
mov [esp+13Ch+var_F4] eax +
jmp loc_436C97  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
jmp loc_436C8B  +
mov [esp+13Ch+var_58] 80h +
mov eax [ebx+10h] +
jmp loc_436BB8  +
mov eax [ebx+10h] +
test eax eax +
jz loc_437257  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jnz loc_436BC0  +
mov [esp+13Ch+var_58] 2 +
jmp loc_436BC0  +
mov eax [esp+13Ch+var_F4] +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jnz loc_436CA6  +
jmp loc_4370BE  +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_423A90  +
test eax eax +
mov [esp+13Ch+var_5C] eax +
jz loc_4373AB  +
cmp eax offset off_473250 +
jz loc_43738D  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jz loc_438093  +
mov edx [ebp+28h] +
shr edx 5 +
and edx 42h +
jz loc_436BE7  +
mov eax [eax+1Ch] +
sub [esp+13Ch+var_60] eax +
jmp loc_436BE7  +
mov [esp+13Ch+var_5C] offset off_473250 +
jmp loc_436BE7  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_4378D8  +
mov ecx [esp+13Ch+var_100] +
test ecx ecx +
jnz loc_437897  +
mov edx [esp+13Ch+var_108] +
movzx eax byte ptr [esi+33h] +
test edx edx +
jnz loc_438077  +
mov edx eax +
or edx 1 +
mov [esi+33h] dl +
cmp byte ptr [esp+13Ch+var_F8] 2 +
jz loc_4373F6  +
or eax 11h +
mov [esi+33h] al +
cmp edi esi +
jz loc_437404  +
test byte ptr [edi+34h] 8 +
jnz loc_4378D8  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 3 +
jz loc_43741F  +
test byte ptr [esi+33h] 0Ch +
jz loc_4378D8  +
mov [esp+13Ch+var_F8] 1 +
mov eax [esp+13Ch+var_108] +
test eax eax +
jnz loc_437D64  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jnz loc_437448  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_437D64  +
mov eax [esp+13Ch+var_40] +
test eax eax +
jnz loc_43745F  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jz loc_437526  +
movzx edx byte ptr [esi+0Ch] +
cmp dl 5 +
jz loc_437526  +
sub edx 3 +
cmp dl 1 +
jbe loc_43748F  +
mov [esp+13Ch+var_138] 1135h +
mov [esp+13Ch+var_13C] offset a____Binutils_4 +
call sub_404040  +
mov eax [esp+13Ch+var_40] +
bsf edx [esi+18h] +
mov ecx 0FFFFFFFFh +
cmovz edx ecx +
mov ecx [esi+14h] +
mov [esp+13Ch+var_F4] edx +
mov edx [ecx+94h] +
test edx edx +
jz loc_4374C2  +
test byte ptr [edx+29h] 8 +
jnz loc_4374C2  +
mov edi [esp+13Ch+var_F4] +
mov edx [ecx+40h] +
cmp edi edx +
cmovbe edx edi +
mov [esp+13Ch+var_F4] edx +
test eax eax +
jz loc_437F7C  +
mov ecx [esp+13Ch+var_3C] +
mov edx ebp +
mov [esp+13Ch+var_E8] ecx +
cmp [esp+13Ch+var_F4] eax +
jnb loc_437526  +
test edx edx +
jz loc_438B80  +
mov ecx eax +
mov edi 1 +
mov eax [esp+13Ch+var_54] +
shl edi cl +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_128] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_12C] eax +
mov eax 1 +
shl eax cl +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_13C] offset aWarningAlignme +
mov [esp+13Ch+var_134] eax +
call off_4733A4  +
mov eax [ebx+4] +
test eax eax +
jz loc_43754A  +
mov edi [ebx+10h] +
test edi edi +
jz loc_43754A  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_438011  +
mov edx [esi+2Ch] +
test edx edx +
jnz loc_43754A  +
mov [esi+2Ch] eax +
movzx eax byte ptr [esi+0Ch] +
cmp al 5 +
jz loc_437E2F  +
movzx ecx byte ptr [esp+13Ch+var_108] +
movzx edx byte ptr [ebx+0Ch] +
and ecx 1 +
and edx 0Fh +
mov byte ptr [esp+13Ch+var_F4] cl +
jz loc_4375BE  +
test cl cl +
jz loc_43757A  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jz loc_437E26  +
mov ecx [esp+13Ch+var_48] +
test ecx ecx +
jz loc_43758D  +
cmp al 5 +
jz loc_437E26  +
movzx eax byte ptr [esi+30h] +
test al al +
jnz loc_4375BE  +
movzx ecx dl +
cmp ecx 0Ah +
jz loc_4380D6  +
movzx edx al +
cmp edx ecx +
jz loc_4375BE  +
test al al +
jz loc_4375BB  +
mov eax [esp+13Ch+var_4C] +
test eax eax +
jz loc_438BF7  +
mov [esi+30h] cl +
mov edx [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_100] +
mov edi [esp+13Ch+var_108] +
mov eax [ebp+4] +
add edx 14h +
mov [esp+13Ch+var_134] ecx +
mov ecx ebx +
mov [esp+13Ch+var_13C] edx +
mov edx esi +
mov [esp+13Ch+var_138] edi +
call sub_42FD70  +
test edi edi +
jz loc_437615  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 20h +
jz loc_437615  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
test byte ptr [ebp+2Ah] 20h +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
mov eax [esp+13Ch+var_108] +
test eax eax +
jz loc_4376A9  +
movzx eax byte ptr [ebx+0Eh] +
mov [esi+32h] al +
mov eax [esp+13Ch+var_58] +
shr eax 17h +
and eax 1 +
lea edx ds:0[eax*4] +
movzx eax byte ptr [esi+35h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+35h] al +
movzx eax byte ptr [esp+13Ch+var_A0] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_4376A9  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] eax +
call strchr  +
test eax eax +
jz loc_4376A9  +
cmp byte ptr [eax+1] 40h +
jz loc_4376A9  +
mov edi [esp+13Ch+var_C8] +
test edi edi +
jz loc_438DF5  +
mov eax [esp+13Ch+var_B0] +
mov ecx [esp+13Ch+var_C8] +
mov [ecx+eax*4] esi +
add eax 1 +
mov [esp+13Ch+var_B0] eax +
mov ecx [esp+13Ch+var_F8] +
test ecx ecx +
jnz loc_437BC0  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_4370BE  +
cmp [esp+13Ch+var_AC] 0 +
jnz loc_4370BE  +
test byte ptr [esi+35h] 1 +
jz loc_437E3E  +
mov eax [ebp+0A0h] +
mov [esp+13Ch+var_AC] 0 +
test byte ptr [eax+924h] 1 +
jz loc_4370BE  +
mov edi [esp+13Ch+var_FC] +
mov edx [edi+64h] +
mov edi [eax+220h] +
test edx edx +
jz loc_437740  +
mov [esp+13Ch+var_108] ebx +
mov ebx edx +
mov eax [ebx+4] +
mov eax [eax+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_437736  +
mov eax [ebx+8] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call strcmp  +
test eax eax +
jz loc_437E3A  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43770D  +
mov ebx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_3C] +
mov ecx [esp+13Ch+arg_4] +
mov edx [ecx+18h] +
mov ecx [esi+4] +
mov edx [edx+34h] +
mov [esp+13Ch+var_130] ecx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] offset asc_48BAED +
call edx  +
mov ecx [esp+13Ch+var_3C] +
mov eax [ebp+0A0h] +
test ecx ecx +
mov edx [eax+924h] +
jz loc_43778C  +
test dl 8 +
jnz loc_438FDA  +
and edx 0FFFFFFFEh +
mov ecx edi +
mov [eax+924h] edx +
mov edx [esp+13Ch+arg_4] +
mov eax ebp +
mov [esp+13Ch+var_13C] 1 +
call sub_435C50  +
test eax eax +
js loc_437883  +
mov [esp+13Ch+var_AC] 1 +
jz loc_4370BE  +
mov [esp+13Ch+var_138] 11FDh +
mov [esp+13Ch+var_13C] offset a____Binutils_4 +
call sub_404040  +
jmp loc_4370BE  +
mov eax [ebp+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_437857  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_437807  +
jmp loc_437850  +
mov eax [eax+14h] +
test eax eax +
jz loc_437850  +
movzx edx word ptr [eax+6] +
cmp esi edx +
jnz loc_437800  +
mov edx [eax+10h] +
test edx edx +
jz loc_437857  +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
lea edi [ecx-1] +
or ecx 0FFFFFFFFh +
mov [esp+13Ch+var_DC] edi +
mov edi edx +
scas   +
mov edi [esp+13Ch+var_DC] +
not ecx  +
lea eax [ecx-1] +
mov [esp+13Ch+var_B4] eax +
lea eax [eax+edi+2] +
jmp loc_436E0B  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_4377F0  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBSInvalidNeede +
mov [esp+13Ch+var_134] eax +
call off_4733A4  +
mov [esp+13Ch+var_13C] 11h +
call sub_4040F0  +
mov esi [esp+13Ch+var_B8] +
test esi esi +
jnz loc_436648  +
jmp loc_436657  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_4380C9  +
or byte ptr [esi+33h] 4 +
or byte ptr [edi+33h] 4 +
cmp edi esi +
jz loc_4378B5  +
test byte ptr [edi+34h] 8 +
jnz loc_4378D8  +
test byte ptr [esi+33h] 3 +
jnz loc_43741F  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_4378D8  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_4378D8  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_43741F  +
mov [esp+13Ch+var_F8] 0 +
jmp loc_437427  +
mov [esp+13Ch+var_108] 0 +
jmp loc_436CCB  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 4 +
jz loc_437DF4  +
mov eax [ebp+0A0h] +
mov edx [eax+238h] +
mov eax edx +
mov word ptr [esp+13Ch+var_18] dx +
jmp loc_436D5A  +
mov ecx [esp+13Ch+var_FC] +
mov ebp edi +
test ecx ecx +
jnz loc_436275  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_43600D  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_406290  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420E30  +
test eax eax +
jz loc_437E10  +
test ebx ebx +
jz loc_437E10  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_406290  +
test eax eax +
mov esi eax +
jz loc_437E10  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_4379E2  +
jmp loc_4387D3  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4379E0  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_43680C  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_406290  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420E30  +
test eax eax +
jz loc_437E10  +
test ebx ebx +
jz loc_437E10  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_406290  +
test eax eax +
mov esi eax +
jz loc_437E10  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [eax+64h] +
test edx edx +
jnz loc_437A92  +
jmp loc_4387CB  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_437A90  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_436803  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420E30  +
test eax eax +
mov [esp+13Ch+var_F4] eax +
jz loc_437E10  +
mov eax [esp+13Ch+var_14] +
jmp loc_4367FA  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_420E30  +
mov [esp+13Ch+var_F0] eax +
jmp loc_4367AB  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_436D81  +
mov eax [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_54] +
jmp loc_436E97  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_437093  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_437093  +
mov eax [esi+3Ch] +
test eax eax +
jnz loc_437093  +
mov eax [esp+13Ch+var_CC] +
mov [esp+13Ch+var_C4] 1 +
mov [esp+13Ch+var_CC] esi +
mov [esi+3Ch] eax +
jmp loc_437093  +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_402CB0  +
test eax eax +
jnz loc_4372E8  +
mov [esp+13Ch+var_134] 209001h +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_403170  +
test eax eax +
jnz loc_4372E8  +
jmp loc_437883  +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_4385FE  +
movzx eax byte ptr [esi+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_437F96  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_4370BE  +
mov eax [esp+13Ch+var_AC] +
test eax eax +
jnz loc_4370BE  +
test byte ptr [esi+33h] 10h +
jz loc_4376CE  +
mov eax [esp+13Ch+var_3C] +
test eax eax +
jz loc_438CD2  +
test byte ptr [eax+2Ah] 20h +
jnz loc_4376CE  +
mov edx [ebp+0A0h] +
mov edi [edx+220h] +
jmp loc_437747  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_138] eax +
call sub_421030  +
test eax eax +
mov [esp+13Ch+var_D4] eax +
jz loc_436460  +
mov eax [esp+13Ch+var_F0] +
test eax eax +
jnz loc_436555  +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
shl eax 2 +
mov [esp+13Ch+var_138] eax +
call sub_406370  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_F0] eax +
jz loc_436683  +
mov eax [ebp+0A0h] +
mov [eax+218h] edi +
jmp loc_436555  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+4] +
mov [esp+13Ch+var_13C] ebp +
shr al 2 +
and eax 1 +
mov [esp+13Ch+var_138] eax +
call sub_42A7B0  +
test eax eax +
jz loc_436677  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
mov esi [ebx+914h] +
test esi esi +
jz loc_43656F  +
mov eax [ebx+178h] +
mov [esp+13Ch+var_13C] eax +
call sub_408000  +
test eax eax +
mov [esp+13Ch+var_C0] eax +
jz loc_436677  +
mov eax [ebx+170h] +
mov edx [ebx+174h] +
mov esi [ebx+178h] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
call sub_403BF0  +
test eax eax +
jnz loc_436667  +
mov eax [esp+13Ch+var_C0] +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_4039E0  +
cmp esi eax +
jnz loc_436667  +
mov ebx [ebp+0A0h] +
jmp loc_43656F  +
mov eax [esp+13Ch+var_5C] +
movzx edx byte ptr [esi+34h] +
mov [esp+13Ch+var_88] eax +
mov eax [esp+13Ch+var_54] +
test dl 2 +
mov [esp+13Ch+var_84] edx +
mov ecx eax +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_34] eax +
jnz loc_437448  +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] ecx +
call strchr  +
mov edx [esp+13Ch+var_84] +
and edx 6 +
mov [esp+13Ch+var_B4] eax +
jnz loc_4380E7  +
test eax eax +
jz loc_438EF9  +
mov eax [esp+13Ch+var_B4] +
cmp byte ptr [eax+1] 40h +
jz loc_438BE5  +
or byte ptr [esi+34h] 6 +
jmp loc_437448  +
mov eax [esi+14h] +
mov [eax] edx +
jmp loc_4370B0  +
xor eax eax +
mov ecx [esp+13Ch+var_54] +
xor esi esi +
mov word ptr [esp+13Ch+var_18] ax +
mov eax [esp+13Ch+var_F4] +
jmp loc_436E97  +
mov eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_436462  +
movzx eax byte ptr [esi+30h] +
jmp loc_437595  +
mov edx [esi+18h] +
mov [esi+2Ch] edx +
jmp loc_437556  +
mov ebx [esp+13Ch+var_108] +
mov [esp+13Ch+var_AC] 0 +
jmp loc_4370BE  +
mov [esp+13Ch+var_B4] 0 +
mov edx offset unk_48B8D8 +
jmp loc_436DD7  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call near ptr dword_408A10  +
jmp loc_437289  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_13C] offset aBSInvalidVersi +
call off_4733A4  +
mov [esp+13Ch+var_13C] 11h +
call sub_4040F0  +
jmp loc_437883  +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov ecx [esp+13Ch+var_1C] +
test ecx ecx +
jz loc_438BD1  +
mov [esp+13Ch+var_20] ecx +
mov eax [esp+13Ch+var_FC] +
mov edx [eax+0C4h] +
test edx edx +
jnz loc_437EE2  +
jmp loc_438EBD  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_437EE0  +
mov [edx] ecx +
mov [esp+13Ch+var_13C] ebp +
call sub_402C60  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_437FE8  +
cmp byte ptr [eax] 0 +
jz loc_437FE8  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F4] +
xor ecx ecx +
test byte ptr [esp+13Ch+var_E4] 0Bh +
mov edx [esp+13Ch+arg_4] +
setz cl  +
mov [eax+220h] edi +
mov eax ebp +
mov [esp+13Ch+var_AC] ecx +
mov [esp+13Ch+var_13C] ecx +
mov ecx edi +
call sub_435C50  +
test eax eax +
js loc_436460  +
jnz loc_43600D  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F0] +
mov [eax+224h] edi +
mov ecx [ebp+0A0h] +
mov eax [ecx+910h] +
test eax eax +
jz loc_4364F2  +
lea eax [ecx+0F0h] +
mov [esp+13Ch+var_E4] eax +
jmp loc_4364F9  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call near ptr dword_408A10  +
mov edx [esp+13Ch+var_3C] +
mov [esp+13Ch+var_E8] ebp +
jmp loc_4374D7  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] edi +
call eax  +
jmp loc_4376B5  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+0A0h] +
lea ecx [eax+0F0h] +
mov [esp+13Ch+var_E8] ecx +
mov ecx [eax+910h] +
mov [esp+13Ch+var_F0] eax +
test ecx ecx +
jnz loc_43696D  +
jmp loc_436962  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
test edi edi +
mov [esp+13Ch+var_F4] edi +
jz loc_438005  +
cmp byte ptr [edi] 0 +
jnz loc_437F0D  +
mov edi [ebp+0] +
mov [esp+13Ch+var_F4] edi +
jmp loc_437F0D  +
mov edx [esi+2Ch] +
test edx edx +
jz loc_437547  +
cmp eax edx +
jz loc_437547  +
mov edi [esp+13Ch+var_50] +
test edi edi +
jnz loc_437547  +
mov [esp+13Ch+var_128] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_13C] offset aWarningSizeOfS +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_138] eax +
call off_4733A4  +
mov eax [ebx+4] +
jmp loc_437547  +
mov [esp+13Ch+var_C8] 0 +
jmp loc_436648  +
or eax 2 +
test al 8 +
mov [esi+33h] al +
jz loc_4373F6  +
and eax 0FFFFFFF7h +
or eax 4 +
mov [esi+33h] al +
jmp loc_4373F6  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_43738D  +
cmp dx 200h +
jz loc_43738D  +
mov [esp+13Ch+var_5C] offset off_4731A8 +
mov dword ptr [ebx+10h] 0 +
jmp loc_436BE7  +
or byte ptr [esi+33h] 8 +
or byte ptr [edi+33h] 8 +
jmp loc_4378AB  +
test byte ptr [ebp+29h] 8 +
mov edx 2 +
cmovnz ecx edx +
jmp loc_4375A1  +
mov eax [esp+13Ch+var_B4] +
test eax eax +
jz loc_437448  +
mov eax [ebp+4] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_7C] eax +
movzx eax byte ptr [eax+1ACh] +
mov byte ptr [esp+13Ch+var_78] al +
mov eax [ebp+28h] +
and byte ptr [esp+13Ch+var_78] 1 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_B4] +
sub eax [esp+13Ch+var_F4] +
shr [esp+13Ch+var_80] 5 +
and [esp+13Ch+var_80] 3FFFFh +
mov [esp+13Ch+var_84] eax +
add eax 1 +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_409270  +
test eax eax +
mov edi eax +
jz loc_437883  +
mov edx [esp+13Ch+var_F4] +
mov eax [esp+13Ch+var_84] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax [esp+13Ch+var_84] +
mov ecx edi +
mov edx [esp+13Ch+arg_4] +
mov byte ptr [edi+eax] 0 +
mov eax [esp+13Ch+var_88] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_18] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
lea eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov [esp+13Ch+var_14] 1 +
call sub_433740  +
test eax eax +
jz loc_437883  +
movzx eax byte ptr [esp+13Ch+var_78] +
mov [esp+13Ch+var_78] eax +
mov eax [esp+13Ch+var_80] +
shr eax 6 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_28] +
and [esp+13Ch+var_80] 1 +
test eax eax +
jnz loc_43831A  +
mov eax [esp+13Ch+var_1C] +
test eax eax +
jz loc_438D62  +
mov eax [esp+13Ch+var_24] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
mov edi [esp+13Ch+var_F8] +
cmp dl 1 +
ja loc_4382C8  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_4382AE  +
mov [esp+13Ch+var_F8] edi +
mov [esp+13Ch+var_24] eax +
movzx edx byte ptr [esi+33h] +
mov byte ptr [esi+0Ch] 6 +
mov [esi+14h] eax +
test dl 8 +
jz loc_4382F1  +
and edx 0FFFFFFF7h +
mov [esi+33h] dl +
movzx edx byte ptr [eax+33h] +
or edx 4 +
mov [eax+33h] dl +
and dl 3 +
jnz loc_439273  +
mov [esp+13Ch+var_24] esi +
mov eax esi +
movzx edx byte ptr [eax+0Ch] +
cmp dl 7 +
jnz loc_438311  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
mov [esp+13Ch+var_24] eax +
cmp dl 6 +
jz loc_438F0B  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
call strlen  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_70] eax +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_409270  +
test eax eax +
mov edi eax +
jz loc_437883  +
mov edx [esp+13Ch+var_84] +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] ecx +
call memcpy  +
mov edx [esp+13Ch+var_84] +
mov eax edi +
mov ecx [esp+13Ch+var_70] +
mov [esp+13Ch+var_74] edi +
add eax edx +
sub ecx edx +
mov edx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_13C] eax +
add edx 1 +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov edi [esp+13Ch+var_88] +
mov eax ebp +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_18] edi +
lea edi [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] edi +
lea edi [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] edi +
lea edi [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] edi +
lea edi [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] edi +
lea edi [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] edi +
lea edi [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] edi +
lea edi [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] edi +
lea edi [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] edi +
lea edi [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] edi +
mov edi [esp+13Ch+var_74] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov ecx edi +
call sub_433740  +
test eax eax +
jz loc_437883  +
mov ecx [esp+13Ch+var_28] +
test ecx ecx +
jnz loc_437448  +
cmp [esp+13Ch+var_1C] 0 +
mov eax [esp+13Ch+var_24] +
jz loc_43913D  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_437448  +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBUnexpectedRed +
call off_4733A4  +
jmp loc_437448  +
mov eax [esp+13Ch+arg_4] +
mov edi [ebp+4] +
mov eax [eax+30h] +
cmp [eax+4] edi +
jnz loc_4364E1  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+30h] 0 +
jnz loc_4364E1  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_433240  +
test eax eax +
jnz loc_4364E1  +
xor eax eax +
jmp loc_436462  +
mov esi [esp+13Ch+var_FC] +
mov ecx [esp+13Ch+var_B8] +
mov ebx [esp+13Ch+var_A8] +
mov eax [esi] +
mov [esp+13Ch+var_13C] ecx +
mov edi ecx +
mov [esp+13Ch+var_134] ebx +
add edi ebx +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov ecx [esi+1Ch] +
mov eax [esi+50h] +
mov [esp+13Ch+var_9C] ecx +
mov ecx [esi+20h] +
mov [esp+13Ch+var_98] ecx +
mov ecx [esi] +
mov [esp+13Ch+var_94] ecx +
mov ecx [esi+0Ch] +
mov [esp+13Ch+var_90] ecx +
mov ecx [esi+10h] +
mov [esp+13Ch+var_8C] ecx +
mov ecx [esi+4Ch] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_D8] ecx +
call sub_44B4E0  +
mov ecx [esi+0Ch] +
test ecx ecx +
mov [esp+13Ch+var_BC] eax +
jz loc_436AE5  +
xor ebx ebx +
mov [esp+13Ch+arg_0] ebp +
mov ebp edi +
mov edi ebx +
mov ebx esi +
mov eax [ebx] +
mov esi [eax+edi*4] +
test esi esi +
jz loc_4385CB  +
mov eax [ebx+14h] +
jmp loc_438596  +
mov esi [esi] +
test esi esi +
jz loc_4385CB  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] esi +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
cmp byte ptr [esi+0Ch] 7 +
jnz loc_438590  +
mov edx [esi+14h] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
jmp loc_438590  +
add edi 1 +
cmp edi [ebx+0Ch] +
jb loc_43857C  +
mov ebp [esp+13Ch+arg_0] +
jmp loc_436AE5  +
mov edx edi +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov [esp+13Ch+var_13C] edx +
call free  +
jmp loc_437EB7  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_433660  +
test eax eax +
jz loc_437883  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_437BDC  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_437BDC  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_437BDC  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_433660  +
test eax eax +
jnz loc_437BDC  +
jmp loc_437883  +
xor eax eax +
jmp loc_4365D0  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_CC] +
test eax eax +
jz loc_438719  +
mov ebx [esp+13Ch+var_D0] +
shl ebx 2 +
mov [esp+13Ch+var_13C] ebx +
call sub_408000  +
test eax eax +
mov edi eax +
jz loc_436460  +
mov eax [ebp+0A0h] +
mov esi [eax+218h] +
lea eax [esi+ebx] +
cmp esi eax +
mov [esp+13Ch+var_108] eax +
jnb loc_438A0D  +
mov ecx edi +
mov [esp+13Ch+var_F4] 0 +
jmp loc_4386D3  +
add esi 4 +
cmp [esp+13Ch+var_108] esi +
jbe loc_438A15  +
mov ebx [esi] +
test ebx ebx +
jz loc_4386C6  +
cmp byte ptr [ebx+0Ch] 3 +
jnz loc_4386C6  +
mov eax [esp+13Ch+var_104] +
movzx edx byte ptr [ebx+30h] +
mov [esp+13Ch+var_F8] ecx +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
mov ecx [esp+13Ch+var_F8] +
test eax eax +
jnz loc_4386C6  +
mov [ecx] ebx +
add ecx 4 +
add [esp+13Ch+var_F4] 1 +
jmp loc_4386C6  +
mov [esp+13Ch+var_13C] edi +
mov ebp [esp+13Ch+arg_0] +
call free  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_43873C  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] edi +
call eax  +
test eax eax +
jz loc_436460  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_438D4F  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_439038  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 1 +
jnz loc_438D4F  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_43600D  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+1] 8 +
jz loc_438CE5  +
cmp [esp+13Ch+var_AC] 0 +
jz loc_43600D  +
mov [esp+13Ch+var_138] 8 +
mov [esp+13Ch+var_13C] ebp +
call sub_406290  +
test eax eax +
jz loc_436460  +
mov edi [esp+13Ch+var_FC] +
mov [eax+4] ebp +
mov edx [edi+0D0h] +
mov [eax] edx +
mov [edi+0D0h] eax +
mov eax 1 +
jmp loc_436073  +
lea edx [eax+64h] +
jmp loc_437A98  +
lea edx [esp+13Ch+var_1C] +
jmp loc_4379E8  +
mov edx [eax+218h] +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_138] 0 +
mov ebx [esp+13Ch+var_B8] +
mov esi [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] edx +
shl eax 2 +
mov [esp+13Ch+var_134] eax +
call memset  +
mov eax [esp+13Ch+var_FC] +
add esi ebx +
mov ecx [esp+13Ch+var_94] +
mov edi [esp+13Ch+var_90] +
mov edx [esp+13Ch+var_8C] +
mov [eax] ecx +
mov [eax+0Ch] edi +
mov edi eax +
mov [eax+10h] edx +
mov eax [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax edi +
mov edi [esp+13Ch+var_9C] +
mov ecx [esp+13Ch+var_BC] +
mov [eax+1Ch] edi +
mov edi [esp+13Ch+var_98] +
mov [eax+20h] edi +
mov edi eax +
mov eax [eax+50h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call sub_44B460  +
mov eax [edi+0Ch] +
mov [esp+13Ch+var_100] 0 +
test eax eax +
jz loc_438989  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_FC] +
mov eax [ebp+0] +
mov edi [esp+13Ch+var_100] +
mov ebx [eax+edi*4] +
test ebx ebx +
jnz loc_438901  +
jmp loc_438970  +
mov edi [esp+13Ch+var_D8] +
cmp [eax+20h] edi +
jl loc_4388C5  +
mov edx [eax+38h] +
cmp [esp+13Ch+var_BC] edx +
ja loc_438935  +
xor edi edi +
cmp byte ptr [eax+0Ch] 5 +
mov [esp+13Ch+var_108] 0 +
jz loc_438927  +
mov eax [ebp+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov edx [ebp+14h] +
mov ecx ebx +
movzx eax byte ptr [ebx+0Ch] +
add esi edx +
cmp al 7 +
jz loc_438951  +
cmp al 5 +
jz loc_438910  +
mov ebx [ebx] +
test ebx ebx +
jz loc_438970  +
cmp byte ptr [ebx+0Ch] 7 +
mov eax ebx +
jnz loc_4388B0  +
mov eax [ebx+14h] +
jmp loc_4388B0  +
cmp [ecx+18h] edi +
jnb loc_438918  +
mov [ecx+18h] edi +
mov eax [ecx+14h] +
mov edi [esp+13Ch+var_108] +
cmp [eax] edi +
jnb loc_4388FB  +
mov [eax] edi +
jmp loc_4388FB  +
mov edi [eax+18h] +
mov eax [eax+14h] +
mov eax [eax] +
mov [esp+13Ch+var_108] eax +
jmp loc_4388D5  +
mov ecx [ebp+50h] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_108] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_44B370  +
mov eax [esp+13Ch+var_108] +
jmp loc_4388C5  +
mov eax [ebx+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call memcpy  +
mov ecx [ebx+14h] +
add esi [ebp+14h] +
movzx eax byte ptr [ecx+0Ch] +
jmp loc_4388F7  +
add [esp+13Ch+var_100] 1 +
mov eax [esp+13Ch+var_100] +
cmp eax [ebp+0Ch] +
jb loc_438896  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_437883  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_FC] +
mov edi [esp+13Ch+var_A4] +
mov eax [eax+8] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_45EEF0  +
cmp [esp+13Ch+var_C8] 0 +
jz loc_43600D  +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax 1 +
jmp loc_436073  +
mov [esp+13Ch+var_F4] 0 +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] offset sub_42EB30 +
mov [esp+13Ch+var_134] 4 +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call qsort  +
mov [esp+13Ch+arg_0] ebp +
mov eax [esp+13Ch+var_CC] +
mov ecx [eax+3Ch] +
mov dword ptr [eax+3Ch] 0 +
movzx eax byte ptr [eax+0Ch] +
mov [esp+13Ch+var_108] ecx +
mov byte ptr [esp+13Ch+var_F8] al +
sub eax 3 +
cmp al 3 +
ja loc_438B01  +
mov eax [esp+13Ch+var_CC] +
xor ecx ecx +
mov ebp [eax+14h] +
mov esi [eax+18h] +
mov eax [esp+13Ch+var_F4] +
test eax eax +
mov edx eax +
jnz loc_438A89  +
jmp loc_438AE8  +
jz loc_438AA0  +
lea ecx [eax+1] +
cmp ecx edx +
jz loc_438AE8  +
lea eax [edx+ecx] +
shr eax 1 +
mov ebx [edi+eax*4] +
cmp esi [ebx+18h] +
jns loc_438A80  +
mov edx eax +
jmp loc_438A85  +
mov ebx [ebx+14h] +
mov ebx [ebx+4] +
cmp [ebp+4] ebx +
js loc_438A96  +
jnz loc_438A82  +
jmp loc_438ABD  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_438AC4  +
cmp esi [ebx+18h] +
jnz loc_438AC4  +
add eax 1 +
cmp eax edx +
jnz loc_438AB0  +
sub eax 1 +
sub ecx 1 +
mov edx [esp+13Ch+var_CC] +
jmp loc_438AE4  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_438AE8  +
cmp esi [ebx+18h] +
jnz loc_438AE8  +
sub eax 1 +
cmp edx ebx +
jnz loc_438B1A  +
cmp eax ecx +
jnz loc_438AD0  +
mov ebp [esp+13Ch+var_108] +
test ebp ebp +
jz loc_43870A  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_CC] eax +
jmp loc_438A3C  +
mov [esp+13Ch+var_138] 12D6h +
mov [esp+13Ch+var_13C] offset a____Binutils_4 +
call sub_404040  +
jmp loc_438A61  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
mov [eax+3Ch] ebx +
jz loc_438B44  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_438AE8  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] eax +
call sub_433660  +
test eax eax +
jz loc_438B71  +
mov eax [ebx+20h] +
cmp eax 0FFFFFFFFh +
jz loc_438AE8  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_438AE8  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_433660  +
test eax eax +
jnz loc_438AE8  +
mov [esp+13Ch+var_13C] edi +
call free  +
xor eax eax +
jmp loc_436073  +
mov edi [esi+14h] +
mov dl 1 +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] offset aWarningAlign_0 +
mov [esp+13Ch+var_B4] edi +
mov edi edx +
shl edi cl +
mov ecx [esp+13Ch+var_54] +
mov [esp+13Ch+var_128] edi +
mov edi [esp+13Ch+var_B4] +
mov [esp+13Ch+var_12C] ecx +
mov ecx eax +
mov eax [esp+13Ch+var_E8] +
shl edx cl +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] eax +
call off_4733A4  +
jmp loc_437526  +
mov ecx [esp+13Ch+var_20] +
test ecx ecx +
jz loc_437EEA  +
jmp loc_437ECD  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [esi+34h] al +
jmp loc_4380F6  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_E8] ecx +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aWarningTypeOfS +
call off_4733A4  +
mov ecx [esp+13Ch+var_E8] +
jmp loc_4375BB  +
mov ecx esi +
mov edi [esp+13Ch+var_E0] +
movzx edx byte ptr [ecx+0Ch] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax edx +
shr al 4 +
cmp al 9 +
ja loc_438C4B  +
sub al 1 +
jnz loc_436A69  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F0] ecx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_F4] eax +
mov eax [eax+158h] +
mov ecx eax +
mov eax edx +
and eax 0Fh +
mov [esp+13Ch+var_13C] eax +
call ecx  +
test eax eax +
jnz loc_436A69  +
mov ecx [esp+13Ch+var_F0] +
cmp dword ptr [ecx+10h] 0 +
jz loc_436A69  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F4] ecx +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ecx +
call eax  +
test eax eax +
jnz loc_436A69  +
mov ecx [esp+13Ch+var_F4] +
mov eax [ecx+10h] +
mov ecx [esp+13Ch+var_E4] +
add eax 100h +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] eax +
call free  +
cmp [esp+13Ch+var_F4] 0F0h +
ja loc_43630C  +
jmp loc_4362A8  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
xor eax eax +
jmp loc_437747  +
mov [esp+13Ch+var_138] offset a_stabstr +
mov [esp+13Ch+var_13C] ebp +
call sub_402CB0  +
test eax eax +
mov ebx eax +
jz loc_438D4F  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_14] 0 +
mov esi [ebp+64h] +
sub eax 0FFFFFF80h +
mov [esp+13Ch+var_108] eax +
jmp loc_438D4B  +
mov edi [esi] +
mov [esp+13Ch+var_134] 5 +
mov [esp+13Ch+var_138] offset a_stab +
mov [esp+13Ch+var_13C] edi +
call strncmp  +
test eax eax +
jnz loc_438D48  +
movzx eax byte ptr [edi+5] +
test al al +
jz loc_4392A5  +
cmp al 2Eh +
jz loc_439293  +
mov esi [esi+0Ch] +
test esi esi +
jnz loc_438D16  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_438786  +
jmp loc_43600D  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax [esp+13Ch+var_24] +
jz loc_4382FA  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_4732F8 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_41A3C0  +
test eax eax +
jz loc_437883  +
mov eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_24] eax +
jmp loc_4382FA  +
mov eax [esp+13Ch+var_E0] +
sub eax ebx +
sar eax 2 +
imul eax eax +
lea eax ds:4[eax*4] +
mov [esp+13Ch+var_13C] eax +
call sub_408000  +
test eax eax +
mov [esp+13Ch+var_C8] eax +
jnz loc_437691  +
jmp loc_437883  +
mov eax [ebx+18h] +
cmp [edi+18h] eax +
jnz loc_43724A  +
mov eax [ebx+14h] +
cmp [edi+14h] eax +
jnz loc_43724A  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
call eax  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov [edi+14h] ebx +
mov byte ptr [edi+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ecx +
call eax  +
mov eax [esp+13Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
test eax eax +
jz loc_43724A  +
xor ecx ecx +
cmp ecx [esp+13Ch+var_D0] +
jz loc_43724A  +
mov edx eax +
add eax 4 +
cmp edi [eax-4] +
jz loc_438FB4  +
add ecx 1 +
jmp loc_438EA0  +
lea edx [eax+0C4h] +
jmp loc_437EE8  +
mov [esp+13Ch+var_134] 101401h +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_403170  +
test eax eax +
jnz loc_4372E8  +
jmp loc_437883  +
lea edx [esp+13Ch+var_20] +
jmp loc_4368BE  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [esi+34h] al +
jmp loc_437448  +
mov edi [eax+14h] +
mov ecx edi +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov edi ecx +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
movzx edx byte ptr [edi+35h] +
mov eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_74] edi +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
mov edi ecx +
and edi 1 +
or edx edi +
mov edi [esp+13Ch+var_74] +
mov [edi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [edi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_438FCD  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_438FBB  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_43831A  +
test byte ptr [eax+33h] 0Ch +
setnz al  +
movzx eax al +
mov [esp+13Ch+var_F8] eax +
jmp loc_43831A  +
mov [edx] ebx +
jmp loc_43724A  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_43831A  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_43831A  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] offset aBUndefinedRefe +
mov [esp+13Ch+var_134] eax +
call off_4733A4  +
mov [esp+13Ch+var_13C] 0Bh +
call sub_4040F0  +
jmp loc_437883  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
jmp loc_436657  +
mov [esp+13Ch+var_134] offset aElf_link_add_o +
mov [esp+13Ch+var_138] 0E2Ah +
mov [esp+13Ch+var_13C] offset a____Binutils_4 +
call sub_404070  +
mov eax [esp+13Ch+var_104] +
cmp dword ptr [eax+78h] 0 +
jz loc_438756  +
mov edi [esp+13Ch+var_FC] +
mov eax [ebp+0A0h] +
mov edi [edi+2Ch] +
cmp [eax+920h] edi +
jnz loc_438756  +
mov edi [esp+13Ch+arg_4] +
mov eax [esp+13Ch+var_104] +
mov edx [edi+30h] +
mov eax [eax+74h] +
mov ecx [edx+4] +
mov edx [ebp+4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jz loc_438756  +
mov ebx [ebp+64h] +
jmp loc_4390CB  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+78h] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov edx [ebx+8Ch] +
cmp esi [edx+68h] +
mov edi eax +
jz loc_4390C0  +
mov [esp+13Ch+var_13C] esi +
call free  +
test edi edi +
jz loc_436460  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_438756  +
mov eax [ebx+14h] +
test al 4 +
jz loc_4390C8  +
cmp dword ptr [ebx+4Ch] 0 +
jz loc_4390C8  +
mov edi [esp+13Ch+arg_4] +
test byte ptr [edi+1] 8 +
jz loc_4390F2  +
test ah 20h +
jnz loc_4390C8  +
cmp dword ptr [ebx+3Ch] offset off_473250 +
jz loc_4390C8  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+2] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebx +
shr al 6 +
and eax 1 +
mov [esp+13Ch+var_12C] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_435230  +
test eax eax +
mov esi eax +
jnz loc_43908C  +
xor eax eax +
jmp loc_436462  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_4732F8 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+var_74] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_41A3C0  +
test eax eax +
jz loc_437883  +
mov eax [esp+13Ch+var_20] +
cmp byte ptr [eax+0Ch] 6 +
mov [esp+13Ch+var_24] eax +
jnz loc_437448  +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call edx  +
mov eax [esp+13Ch+var_24] +
movzx edx byte ptr [esi+35h] +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
and ecx 1 +
or edx ecx +
mov [esi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [esi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_439266  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_439254  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_437448  +
movzx eax byte ptr [eax+33h] +
shr al 2 +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_437448  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_437448  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_437448  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_433660  +
test eax eax +
jnz loc_4382F1  +
jmp loc_437883  +
movzx eax byte ptr [edi+6] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_438D48  +
test byte ptr [esi+16h] 80h +
jnz loc_438D48  +
cmp dword ptr [esi+3Ch] offset off_473250 +
jz loc_438D48  +
mov edi [esi+8Ch] +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_128] eax +
mov [esp+13Ch+var_130] ebx +
mov [esp+13Ch+var_134] esi +
lea eax [edi+88h] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_44DE00  +
test eax eax +
jz loc_436460  +
cmp dword ptr [edi+88h] 0 +
jz loc_438D48  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or al 80h +
mov [esi+18h] ax +
jmp loc_438D48  +
***
push ebx  +
mov edx [esp+8] +
xor eax eax +
test byte ptr [edx+34h] 8 +
jnz loc_439346  +
movzx ecx byte ptr [edx+0Ch] +
lea ebx [ecx-1] +
cmp bl 1 +
jbe loc_439346  +
sub ecx 3 +
cmp cl 1 +
jbe loc_439348  +
mov eax 1 +
pop ebx  +
retn   +
***
mov edx [edx+14h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_439341  +
jmp loc_439346  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_43937B  +
jmp loc_4393A0  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_4393A0  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_439371  +
mov [esp+18h+var_14] offset off_473250 +
mov [esp+18h+var_18] ebx +
call sub_4288E0  +
test eax eax +
jnz loc_439371  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 40h +
mov esi [esp+58h] +
mov ebx [esp+54h] +
test esi esi +
jz loc_439428  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [ebx+1Ch] +
mov [esp] eax +
call sub_419760  +
test eax eax +
jz loc_4393F9  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_439430  +
mov edx [ebx+10h] +
test edx edx +
jnz loc_439407  +
mov edx [esp+5Ch] +
mov [ebx+10h] edx +
test eax eax +
jz loc_439508  +
movzx eax byte ptr [eax+0Ch] +
mov edi 1 +
sub eax 1 +
cmp al 1 +
jbe loc_439481  +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [ebx+10h] +
xor eax eax +
jmp loc_4393FC  +
***
test byte ptr [eax+33h] 2 +
jz loc_4393F9  +
cmp byte ptr [eax+30h] 1 +
ja loc_4393F9  +
mov ecx [ebx+10h] +
mov byte ptr [eax+30h] 1 +
test ecx ecx +
jnz loc_43951E  +
cmp dword ptr [eax+14h] offset off_473250 +
jz loc_439547  +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBSNotAbsolute +
mov [esp+4] eax +
call off_4733A4  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_4393FC  +
***
lea eax [esp+3Ch] +
mov [esp+24h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov edx [ebx+10h] +
xor eax eax +
test edx edx +
cmovns eax [ebx+10h] +
mov dword ptr [esp+10h] offset off_473250 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+14h] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] eax +
call sub_41A3C0  +
test eax eax +
jz loc_439516  +
mov eax [esp+3Ch] +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 40h +
mov edi 1 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor di di +
jmp loc_43941F  +
***
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBStackSizeSpec +
mov [esp+4] eax +
call off_4733A4  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_4393FC  +
***
mov edx [eax+18h] +
mov [ebx+10h] edx +
jmp loc_4393FC  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0E0h] +
mov edi [esp+0DCh] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_439597  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0C0h] +
mov edx [ecx+4] +
mov esi [edx+1B0h] +
mov edx [eax+44h] +
mov [eax+3Ch] edx +
mov edx [eax+48h] +
mov [eax+40h] edx +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_439E10  +
mov eax [esi+88h] +
test eax eax +
jz loc_4395E3  +
mov ebx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_439B55  +
movzx eax byte ptr [edi+5] +
test al 2 +
jnz loc_439B62  +
test al 4 +
jz loc_439D50  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 6 +
mov eax [edi+1Ch] +
mov ebx [eax+38h] +
test ebx ebx +
mov [esp+30h] ebx +
jz loc_439B81  +
mov eax [eax+30h] +
mov ebx 0FFFFFFFFh +
test eax eax +
jnz loc_439B95  +
mov [esp] edi +
call sub_444660  +
test eax eax +
jz loc_439B55  +
mov eax [esi+8Ch] +
test eax eax +
jz loc_439665  +
mov ecx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_439B55  +
mov eax [edi+1Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_439587  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_402D90  +
test eax eax +
mov ebp eax +
jz loc_43A5D7  +
mov esi [edi+7Ch] +
test esi esi +
jz loc_43A5A0  +
mov eax [esi+8] +
test eax eax +
jnz loc_4396AD  +
mov esi [esi] +
test esi esi +
jz loc_43A5A0  +
test byte ptr [edi] 20h +
mov edx 1Ch +
mov dword ptr [esp+3Ch] 1 +
jnz loc_43A155  +
mov [esp+34h] ebx +
mov ebx [esp+3Ch] +
mov ecx esi +
lea esi [esi+0] +
mov eax [ecx+8] +
test eax eax +
jz loc_4396ED  +
mov eax [ecx+2Ch] +
add edx 1Ch +
add ebx 1 +
test eax eax +
jz loc_4396ED  +
mov eax [eax] +
add edx 8 +
test eax eax +
jnz loc_4396E4  +
mov ecx [ecx] +
test ecx ecx +
jnz loc_4396D0  +
mov [esp+3Ch] ebx +
mov ebx [esp+34h] +
mov eax [esp+0C0h] +
mov [ebp+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_406290  +
test eax eax +
mov edx eax +
mov [ebp+6Ch] eax +
jz loc_43A5B1  +
mov eax 1 +
mov ebp 1 +
test byte ptr [edi] 20h +
mov [esp+7Ah] ax +
mov eax 1 +
mov [esp+7Ch] ax +
mov eax 1 +
mov [esp+78h] bp +
mov [esp+7Eh] ax +
jz loc_43A16F  +
mov dword ptr [esp+84h] 28h +
mov dword ptr [esp+88h] 14h +
cmp ebx 0FFFFFFFFh +
mov [esp+34h] edx +
jz loc_43A211  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44B300  +
mov eax [esp+0C4h] +
mov [esp] eax +
call near ptr dword_420C80  +
mov edx [esp+34h] +
mov [esp+68h] ebx +
mov [esp+80h] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp+34h] edx +
mov dword ptr [esp+6Ch] 0 +
mov [esp] eax +
call sub_420920  +
mov edx [esp+34h] +
test byte ptr [edi] 20h +
lea ebx [edx+14h] +
jz loc_4398C9  +
mov ecx [esp+30h] +
lea eax [esp+5Ch] +
mov [esp+24h] eax +
mov dword ptr [esp+5Ch] 0 +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] offset off_473250 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+4] ecx +
mov [esp+8] eax +
mov [esp] edi +
call sub_41A3C0  +
test eax eax +
jz loc_439B55  +
mov eax [esp+5Ch] +
and byte ptr [eax+34h] 0FEh +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
mov dword ptr [eax+40h] 0 +
mov [esp+4] eax +
mov [esp] edi +
call sub_433660  +
test eax eax +
jz loc_439B55  +
xor edx edx +
cmp esi 1 +
sbb eax eax +
mov ecx 2 +
not eax  +
and eax 1Ch +
mov [esp+88h] eax +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+7Ah] dx +
mov [esp+7Ch] cx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov dword ptr [esp+84h] 14h +
mov [esp] eax +
call sub_420920  +
mov edx [esp+34h] +
lea ebx [edx+28h] +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 8 +
mov [esp] eax +
call sub_420A10  +
test esi esi +
jz loc_439E3F  +
nop   +
mov eax [esi+8] +
test eax eax +
jz loc_439E35  +
mov eax [esi+2Ch] +
xor edx edx +
test eax eax +
jz loc_43990D  +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_439904  +
mov [esp+34h] edx +
mov edx [esp+30h] +
lea ecx [esp+5Ch] +
mov eax [esi+4] +
mov [esp+24h] ecx +
mov dword ptr [esp+5Ch] 0 +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
movzx ecx byte ptr [ecx+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and ecx 1 +
mov [esp+20h] ecx +
mov dword ptr [esp+10h] offset off_473250 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call sub_41A3C0  +
test eax eax +
jz loc_439B55  +
mov ebp [esp+5Ch] +
and byte ptr [ebp+34h] 0FEh +
or byte ptr [ebp+33h] 2 +
mov byte ptr [ebp+30h] 1 +
mov [ebp+40h] esi +
mov [esp+4] ebp +
mov [esp] edi +
call sub_433660  +
test eax eax +
jz loc_439B55  +
mov eax 1 +
mov edx [esp+34h] +
mov [esp+78h] ax +
xor eax eax +
mov [esp+7Ah] ax +
mov eax [esi+0Ch] +
test eax eax +
jz loc_43A130  +
movzx eax byte ptr [edi] +
mov [esp+34h] edx +
and eax 20h +
cmp al 1 +
sbb eax eax +
add eax 2 +
add ax [esi+8] +
mov [esp+7Ch] ax +
lea eax [edx+1] +
mov [esp+7Eh] ax +
mov eax [esi+4] +
mov [esp] eax +
call near ptr dword_420C80  +
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 0 +
mov [esp+80h] eax +
mov eax [esi] +
test eax eax +
jz loc_439A54  +
mov edx [eax+8] +
test edx edx +
mov edx [esp+34h] +
jnz loc_43A104  +
mov eax [eax] +
test eax eax +
jz loc_439A54  +
mov dword ptr [esp+4] 1877h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
mov eax [esi] +
test eax eax +
jz loc_439A54  +
mov eax [eax+8] +
mov edx [esp+34h] +
test eax eax +
jnz loc_43A104  +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp] eax +
call sub_420920  +
mov ecx [edi+1Ch] +
lea edx [ebx+14h] +
mov eax [ebp+38h] +
mov [esp+34h] edx +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_44B300  +
mov ebp [esi+2Ch] +
mov dword ptr [esp+6Ch] 0 +
mov edx [esp+34h] +
test ebp ebp +
jz loc_439AAA  +
mov dword ptr [esp+6Ch] 8 +
mov eax [esp+68h] +
add ebx 1Ch +
mov [esi+30h] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_420A10  +
mov ebp [esi+2Ch] +
test ebp ebp +
jz loc_439E35  +
mov [esp+34h] esi +
mov esi ebp +
mov ebp [esp+0C0h] +
jmp loc_439B38  +
mov ecx [edi+1Ch] +
mov eax [eax+30h] +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_44B300  +
cmp dword ptr [esi] 1 +
mov [esp+8] ebx +
mov [esp] ebp +
sbb eax eax +
add ebx 8 +
not eax  +
and eax 8 +
mov [esp+6Ch] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
call sub_420A10  +
mov esi [esi] +
test esi esi +
jz loc_439E31  +
mov eax [esi+4] +
test eax eax +
jnz loc_439AF0  +
mov dword ptr [esp+68h] 0 +
jmp loc_439B09  +
***
mov dword ptr [esp] 11h +
call sub_4040F0  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 7 +
jmp loc_439611  +
***
mov [esp] edi +
call sub_444660  +
test eax eax +
jnz loc_439587  +
xor eax eax +
jmp loc_439B57  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_interp +
mov [esp] eax +
call sub_402D90  +
mov ebx [esp+0E0h] +
test eax eax +
mov [ebx] eax +
jz loc_43A1B3  +
mov eax [esp+0C4h] +
test eax eax +
jz loc_439E27  +
mov eax [edi+1Ch] +
mov ebx [esp+0C4h] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_439B55  +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Eh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
test byte ptr [edi] 4 +
jnz loc_43A18A  +
mov eax [esp+0C8h] +
test eax eax +
jz loc_439C79  +
mov eax [edi+1Ch] +
mov ecx [esp+0C8h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jz loc_439B55  +
movzx edx byte ptr [edi+4] +
mov [esp+8] eax +
mov [esp] edi +
and edx 8 +
cmp dl 1 +
sbb edx edx +
and edx 0FFFFFFF2h +
add edx 1Dh +
mov [esp+4] edx +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov eax [esp+0CCh] +
test eax eax +
jz loc_439CCA  +
mov eax [edi+1Ch] +
mov ecx [esp+0CCh] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jz loc_439B55  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFFh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov ebp [esp+0D8h] +
test ebp ebp +
jz loc_43A26F  +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jnz loc_439D25  +
jmp loc_43A26F  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFDh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
add dword ptr [esp+0D8h] 4 +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jz loc_43A26F  +
mov edx [edi+1Ch] +
mov edx [edx+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] edx +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jnz loc_439CF0  +
xor eax eax +
jmp loc_439B57  +
***
mov ebx [edi+34h] +
test ebx ebx +
jz loc_43A1E4  +
xor eax eax +
xor ecx ecx +
mov [esp+30h] esi +
mov ebp 1 +
mov esi ebx +
mov [esp+0DCh] edi +
mov ebx eax +
mov edi ecx +
jmp loc_439D81  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_439DB1  +
mov eax [esi+28h] +
shr eax 5 +
test eax 11042h +
jnz loc_439D77  +
mov dword ptr [esp+4] offset a_note_gnuStack +
mov [esp] esi +
call sub_402CB0  +
test eax eax +
jz loc_43A117  +
test byte ptr [eax+14h] 10h +
mov edi eax +
cmovnz ebx ebp +
jmp loc_439D77  +
***
mov ecx edi +
mov esi [esp+30h] +
test ecx ecx +
mov edi [esp+0DCh] +
jz loc_43A1E6  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
and ebx 1 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jz loc_439611  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jnz loc_439611  +
mov eax [ecx+3Ch] +
cmp eax offset off_473250 +
jz loc_439611  +
or dword ptr [eax+14h] 10h +
jmp loc_439611  +
***
mov [esp] edi +
call sub_439360  +
test eax eax +
jnz loc_4395C1  +
xor eax eax +
jmp loc_439B57  +
***
mov ebx 0FFFFFFFFh +
jmp loc_439C11  +
***
mov esi [esp+34h] +
mov esi [esi] +
test esi esi +
jnz loc_4398F0  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFCh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov eax [esp+3Ch] +
mov dword ptr [esp+4] 6FFFFFFDh +
mov [esp] edi +
mov [esp+8] eax +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov eax [esp+0C0h] +
mov ebx [esp+3Ch] +
mov eax [eax+0A0h] +
mov [eax+238h] ebx +
test byte ptr [edi+4] 8 +
mov eax [edi+68h] +
jz loc_43A726  +
test eax eax +
jz loc_439EC3  +
mov [esp+8] eax +
mov dword ptr [esp+4] 1Eh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov eax [edi+6Ch] +
test eax eax +
jz loc_439EF5  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
jbe loc_43A83D  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFFFBh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_402D90  +
test eax eax +
mov esi eax +
jz loc_43A85D  +
mov eax [esp+0C0h] +
mov [esp+78h] edi +
mov eax [eax+0A0h] +
mov edx [eax+238h] +
mov eax 1 +
mov dword ptr [esp+4] offset loc_430490 +
mov dword ptr [esp+80h] 0 +
test edx edx +
cmovnz eax edx +
mov [esp+7Ch] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419ED0  +
mov ebx [esp+80h] +
test ebx ebx +
jnz loc_439B55  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_43A854  +
xor ebp ebp +
xor edx edx +
mov eax [ecx+18h] +
add edx 10h +
add ebp 1 +
test eax eax +
jz loc_439FAA  +
lea esi [esi+0] +
mov eax [eax+14h] +
add edx 10h +
test eax eax +
jnz loc_439FA0  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_439F90  +
mov eax [esp+0C0h] +
mov [esi+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_406290  +
test eax eax +
mov ebx eax +
mov [esi+6Ch] eax +
jz loc_439B55  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+244h] +
test eax eax +
jz loc_43A7A7  +
mov [esp+34h] ebp +
mov esi eax +
mov eax [esi+18h] +
xor ebp ebp +
test eax eax +
jz loc_43A008  +
mov eax [eax+14h] +
add ebp 1 +
test eax eax +
jnz loc_439FFE  +
mov ecx 1 +
mov [esi] cx +
mov ecx [esi+10h] +
mov [esi+2] bp +
mov eax [ecx+0A0h] +
mov eax [eax+220h] +
test eax eax +
jz loc_43AAA9  +
mov ecx [edi+1Ch] +
mov ecx [ecx+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jz loc_439B55  +
mov edx [esi+1Ch] +
mov [esi+4] eax +
mov dword ptr [esi+8] 10h +
test edx edx +
jz loc_43A848  +
lea edx [ebp+1] +
shl edx 4 +
mov [esi+0Ch] edx +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] esi +
mov [esp] eax +
call sub_420AC0  +
mov ebp [esi+18h] +
test ebp ebp +
jz loc_43A798  +
mov [esp+3Ch] esi +
mov esi [esp+0C0h] +
jmp loc_43A0CD  +
cmp dword ptr [ebp+14h] 1 +
mov [ebp+8] eax +
sbb eax eax +
not eax  +
and eax 10h +
mov [ebp+0Ch] eax +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
call sub_420BB0  +
mov ebp [ebp+14h] +
test ebp ebp +
jz loc_43A794  +
mov eax [ebp+10h] +
mov [esp] eax +
call near ptr dword_420C80  +
mov ecx [ebp+10h] +
mov [ebp+0] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jnz loc_43A09E  +
xor eax eax +
jmp loc_439B57  +
***
lea eax ds:1Ch[edx*8] +
mov [esp+88h] eax +
jmp loc_439A54  +
***
mov eax [esp+30h] +
test byte ptr [eax+1AEh] 20h +
cmovnz ebx ebp +
jmp loc_439D77  +
***
mov eax [esi+1Ch] +
test eax eax +
jnz loc_4399C6  +
mov eax [esi+34h] +
test eax eax +
jnz loc_4399C6  +
mov ecx 2 +
mov [esp+7Ah] cx +
jmp loc_4399C6  +
***
test esi esi +
jz loc_43A5C5  +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_4396C3  +
***
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 1Ch +
jmp loc_439765  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 10h +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
or dword ptr [edi+68h] 2 +
jmp loc_439C1A  +
***
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
ja loc_439BBA  +
test byte ptr [edi+6] 1 +
jnz loc_439BBA  +
mov dword ptr [esp+4] 168Dh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
jmp loc_439BBA  +
***
xor ebx ebx +
mov eax [edi+10h] +
test eax eax +
jle loc_439611  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jmp loc_439611  +
***
mov eax [esp+0C0h] +
mov eax [eax] +
mov [esp] eax +
call sub_45F1A0  +
mov [esp] eax +
mov [esp+0C4h] eax +
call near ptr dword_420C80  +
mov ebx [esp+0C4h] +
mov [esp+80h] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jz loc_439B55  +
mov [esp+68h] eax +
mov edx [esp+34h] +
jmp loc_4397A2  +
***
mov ecx [esp+0D0h] +
test ecx ecx +
jz loc_43A2C0  +
mov eax [edi+1Ch] +
mov ecx [esp+0D0h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jz loc_439B55  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFCh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov edx [esp+0D4h] +
test edx edx +
jz loc_43A311  +
mov eax [edi+1Ch] +
mov ecx [esp+0D4h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44B220  +
cmp eax 0FFFFFFFFh +
jz loc_439B55  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFBh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
movzx eax byte ptr [edi] +
mov [esp+78h] edi +
mov dword ptr [esp+7Ch] 0 +
test al 10h +
jnz loc_43A767  +
and eax 3 +
cmp al 1 +
jbe loc_43A75D  +
mov eax [edi+7Ch] +
test eax eax +
mov [esp+3Ch] eax +
jz loc_43A4FE  +
mov [esp+48h] ebx +
mov [esp+4Ch] esi +
mov [esp+0DCh] edi +
mov eax [esp+3Ch] +
mov edi [eax+0Ch] +
test edi edi +
mov ebp edi +
jnz loc_43A36E  +
jmp loc_43A4DD  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_43A4DD  +
movzx eax byte ptr [ebp+8] +
and eax 3 +
cmp al 1 +
jnz loc_43A363  +
mov eax [esp+0C0h] +
mov edx [ebp+4] +
mov eax [eax+4] +
mov [esp+44h] edx +
movzx eax byte ptr [eax+18h] +
mov [esp] edx +
mov ebx eax +
call strlen  +
mov edi [esp+3Ch] +
xor ecx ecx +
test bl bl +
setnz cl  +
mov [esp+38h] bl +
mov edi [edi+4] +
mov [esp+40h] ecx +
lea esi [eax+ecx] +
mov [esp] edi +
mov [esp+34h] edi +
call strlen  +
mov edi eax +
lea eax [esi+eax+3] +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov ebx eax +
jz loc_439B55  +
mov ecx [esp+40h] +
mov edx [esp+44h] +
movzx eax byte ptr [esp+38h] +
add ecx ebx +
mov [ebx] al +
mov [esp] ecx +
mov [esp+8] esi +
add esi ebx +
mov [esp+4] edx +
call memcpy  +
lea edx [edi+1] +
mov edi [esp+34h] +
lea eax [esi+1] +
mov byte ptr [esi] 40h +
mov [esp+8] edx +
mov [esp+4] edi +
mov [esp] eax +
mov [esp+38h] edx +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_419760  +
mov edx [esp+38h] +
test eax eax +
mov edi eax +
jz loc_43A460  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_43A593  +
mov eax [esp+34h] +
add esi 2 +
mov byte ptr [esi-1] 40h +
mov [esp+8] edx +
mov [esp] esi +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_419760  +
mov [esp] ebx +
mov edi eax +
call free  +
test edi edi +
jz loc_43A363  +
test byte ptr [edi+33h] 8 +
jnz loc_43A363  +
movzx eax byte ptr [edi+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_43A363  +
or byte ptr [ebp+8] 2 +
jmp loc_43A363  +
***
mov eax [esp+3Ch] +
mov eax [eax] +
test eax eax +
mov [esp+3Ch] eax +
jnz loc_43A351  +
mov ebx [esp+48h] +
mov esi [esp+4Ch] +
mov edi [esp+0DCh] +
lea eax [esp+60h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_4349D0 +
mov eax [edi+1Ch] +
mov [esp+60h] edi +
mov dword ptr [esp+64h] 0 +
mov [esp] eax +
call sub_419ED0  +
cmp dword ptr [esp+64h] 0 +
jnz loc_439B55  +
cmp byte ptr [edi+4] 0 +
js loc_43A606  +
mov ecx [edi+7Ch] +
test ecx ecx +
jz loc_43A606  +
mov edx 1 +
mov ebp [ecx+0Ch] +
test ebp ebp +
jnz loc_43A561  +
jmp loc_43A5F0  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_43A5F0  +
movzx eax byte ptr [ebp+8] +
and eax 7 +
cmp al 1 +
jnz loc_43A556  +
mov edx [ecx+4] +
mov eax [ebp+4] +
mov [esp+34h] ecx +
mov dword ptr [esp] offset aSUndefinedVers +
mov [esp+8] edx +
mov [esp+4] eax +
call off_4733A4  +
xor edx edx +
mov ecx [esp+34h] +
jmp loc_43A556  +
***
mov [esp] ebx +
call free  +
jmp loc_43A4BB  +
***
test byte ptr [edi] 20h +
jnz loc_43A5C3  +
or dword ptr [ebp+14h] 8000h +
jmp loc_439E96  +
***
mov eax [ebp+24h] +
test eax eax +
jz loc_43971E  +
xor eax eax +
jmp loc_439B57  +
***
xor esi esi +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_4396FB  +
***
mov dword ptr [esp+4] 17BEh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
jmp loc_439691  +
***
mov ecx [ecx] +
test ecx ecx +
jnz loc_43A54A  +
test edx edx +
lea esi [esi+0] +
jz loc_439B49  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_4348D0 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419ED0  +
cmp dword ptr [esp+7Ch] 0 +
jnz loc_439B55  +
mov eax [edi+48h] +
test eax eax +
jz loc_43A668  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419760  +
test eax eax +
jz loc_43A668  +
test byte ptr [eax+33h] 3 +
jnz loc_43AAF2  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_43A6A4  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419760  +
test eax eax +
jz loc_43A6A4  +
test byte ptr [eax+33h] 3 +
jnz loc_43AAB8  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_preinit_array +
mov [esp] eax +
call sub_402CB0  +
test eax eax +
jz loc_43A8B6  +
test byte ptr [eax+18h] 4 +
jz loc_43A8B6  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
jbe loc_43A876  +
mov ebx [edi+34h] +
jmp loc_43A6E6  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_43AADF  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43A6E0  +
mov eax [ebx+64h] +
test eax eax +
jnz loc_43A707  +
jmp loc_43A6E0  +
***
mov eax [eax+0Ch] +
test eax eax +
jz loc_43A6E0  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 10h +
jnz loc_43A700  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aB_preinit_arra +
call off_4733A4  +
jmp loc_43A6E0  +
***
test al 10h +
jnz loc_439EA7  +
test al 8 +
jz loc_439EC3  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jnz loc_439EC3  +
xor eax eax +
jmp loc_439B57  +
***
test byte ptr [edi+5] 1 +
jz loc_43A333  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_434D00 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419ED0  +
cmp dword ptr [esp+7Ch] 0 +
jz loc_43A333  +
xor eax eax +
jmp loc_439B57  +
***
mov esi [esp+3Ch] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_439FF5  +
mov ebp [esp+34h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFEh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 6FFFFFFFh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov [eax+23Ch] ebp +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+23Ch] 0 +
jnz loc_43AB19  +
cmp dword ptr [eax+238h] 0 +
jnz loc_43AB19  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version +
mov [esp] eax +
call sub_402D90  +
or dword ptr [eax+14h] 8000h +
jmp loc_439587  +
***
and eax 0FFFFFF97h +
mov [edi+6Ch] eax +
jmp loc_439ED9  +
***
mov dword ptr [esi+0Ch] 0 +
jmp loc_43A06C  +
***
or dword ptr [esi+14h] 8000h +
jmp loc_43A7F6  +
***
mov dword ptr [esp+4] 18C5h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
jmp loc_439F13  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 21h +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_init_array +
mov [esp] eax +
call sub_402CB0  +
test eax eax +
jz loc_43A8DB  +
test byte ptr [eax+18h] 4 +
jnz loc_43AA1B  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_fini_array +
mov [esp] eax +
call sub_402CB0  +
test eax eax +
jz loc_43A900  +
test byte ptr [eax+18h] 4 +
jnz loc_43AA62  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_402D90  +
test eax eax +
jz loc_439633  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jz loc_439633  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_44B4E0  +
mov ebp eax +
movzx eax byte ptr [edi+3] +
test al 20h +
jnz loc_43A9F2  +
test al 40h +
jz loc_43A969  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFEF5h +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 5 +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6 +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0Ah +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov [esp+8] eax +
call sub_435B80  +
test eax eax +
jnz loc_439633  +
xor eax eax +
jmp loc_439B57  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
movzx eax byte ptr [edi+3] +
jmp loc_43A945  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 19h +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Bh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jnz loc_43A8DB  +
xor eax eax +
jmp loc_439B57  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ah +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jz loc_439B55  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ch +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jnz loc_43A900  +
xor eax eax +
jmp loc_439B57  +
***
mov eax [ecx] +
mov [esp] eax +
call sub_45F1A0  +
jmp loc_43A02B  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Dh +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jnz loc_43A6A4  +
xor eax eax +
jmp loc_439B57  +
***
mov dword ptr [esp] 0Fh +
call sub_4040F0  +
xor eax eax +
jmp loc_439B57  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_435B80  +
test eax eax +
jnz loc_43A668  +
xor eax eax +
jmp loc_439B57  +
***
mov ecx [esp+38h] +
mov edx edi +
mov eax [esp+0C0h] +
call sub_42F2B0  +
test eax eax +
jz loc_43A81D  +
jmp loc_439587  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43AB5E  +
jmp loc_43AB85  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43AB85  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_43AB57  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_4351A0  +
test eax eax +
jnz loc_43AB57  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43ABAE  +
jmp loc_43AC22  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43ABD5  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 1 +
jnz loc_43ABA7  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_4351A0  +
test eax eax +
jnz loc_43ABA7  +
mov eax [edi+1Ch] +
mov [eax+6Ch] ebx +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43ABE7  +
jmp loc_43AC22  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43AC22  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 9 +
jnz loc_43ABE0  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_4351A0  +
test eax eax +
jnz loc_43ABE0  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
mov edx [eax+68h] +
test edx edx +
jnz loc_43AC2C  +
mov edx [eax+6Ch] +
mov [eax+68h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [edi+1Ch] +
mov edx [eax+68h] +
test edx edx +
jz loc_43AC15  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C4h] +
mov esi [esp+0C0h] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_43AC71  +
mov eax 1 +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
mov edx [esp+0C4h] +
mov ebx [eax+1B0h] +
mov eax [ebx+90h] +
mov [esp+4] edx +
mov [esp] esi +
call eax  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+30h] +
test edi edi +
jz loc_43AC61  +
mov eax [eax+38h] +
lea ecx [esp+3Ch] +
mov edx [esp+0C4h] +
mov edi eax +
mov [esp+14h] eax +
mov eax esi +
call sub_42F2B0  +
mov [esp] edi +
mov dword ptr [esp+4] offset a_gnu_version +
mov ebp eax +
call sub_402D90  +
test eax eax +
mov edi eax +
jz loc_43B501  +
test ebp ebp +
jz loc_43AD27  +
test byte ptr [edi+15h] 80h +
jnz loc_43AD27  +
lea eax [ebp+ebp+0] +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_406370  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43B104  +
mov eax [esp+0C4h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFF0h +
mov [esp] eax +
call sub_435B80  +
test eax eax +
jz loc_43B104  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+0F8h] +
test edi edi +
jz loc_43B51A  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+5] +
imul eax ebp +
test ebp ebp +
mov [edi+24h] eax +
jnz loc_43B2DF  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov dword ptr [eax+60h] 0 +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
test al 20h +
jnz loc_43B0AD  +
test al 40h +
jz loc_43AF70  +
xor eax eax +
mov ecx 12h +
lea edi [esp+58h] +
mov [esp+1Ch] edi +
stos   +
lea eax ds:0[ebp*8] +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov [esp+68h] eax +
jz loc_43B104  +
lea eax [eax+ebp*4] +
mov edi [esp+1Ch] +
mov [esp+6Ch] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset sub_4316E0 +
mov dword ptr [esp+80h] 0FFFFFFFFh +
mov [esp+8] edi +
mov eax [eax+1Ch] +
mov [esp+58h] esi +
mov [esp+5Ch] ebx +
mov [esp] eax +
call sub_419ED0  +
mov edx [esp+9Ch] +
test edx edx +
jnz loc_43B333  +
mov ecx [esp+60h] +
mov edx [esp+68h] +
mov eax [esp+0C4h] +
mov dword ptr [esp] 1 +
call sub_42F040  +
test eax eax +
mov [esp+18h] eax +
jz loc_43B333  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_gnu_hash +
mov [esp] eax +
call sub_402D90  +
test eax eax +
mov [esp+24h] eax +
jz loc_43B983  +
mov edi [esp+60h] +
test edi edi +
jnz loc_43B533  +
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_43AE6B  +
mov dword ptr [esp+4] 1A12h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
mov eax [ebx+174h] +
mov ebp [esp+24h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
add eax 14h +
mov [ebp+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_406370  +
test eax eax +
mov edi eax +
jz loc_43B104  +
mov ecx ebp +
mov [ecx+6Ch] eax +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
cmp al 8 +
jz loc_43B95F  +
cmp al 10h +
jz loc_43B968  +
cmp al 20h +
jz loc_43BA81  +
cmp al 40h +
jnz loc_43BA2C  +
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov dword ptr [esp] 0 +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esi+4] +
mov edx [eax+30h] +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
mov dword ptr [esp] 0 +
shr al 3 +
movzx eax al +
lea eax [edi+eax+10h] +
mov [esp+4] eax +
call edx  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_402D90  +
test eax eax +
mov [esp+24h] eax +
jz loc_43B7D0  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edx [eax+50h] +
mov [esp+20h] eax +
mov eax [eax+38h] +
mov edi edx +
mov [esp] edx +
mov ebx eax +
mov [esp+14h] edx +
mov [esp+18h] eax +
call sub_44B660  +
mov [esp] edi +
call sub_44B4E0  +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov edi [eax+1B0h] +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_402D90  +
test eax eax +
mov ebp eax +
jz loc_43B7B7  +
mov ebx [ebp+6Ch] +
mov eax [ebp+24h] +
add eax ebx +
cmp ebx eax +
jnb loc_43B14D  +
lea eax [esp+58h] +
mov ecx [edi+174h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx eax +
jmp loc_43B055  +
cmp eax 0Ah +
jnz loc_43B110  +
mov eax [esp+1Ch] +
mov [esp+5Ch] eax +
mov eax [edi+174h] +
mov edx [esp+18h] +
mov eax [eax+34h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
mov ecx [edi+174h] +
movzx eax byte ptr [ecx+6] +
add esi eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp esi eax +
jnb loc_43B146  +
mov edx [esp+18h] +
mov eax [ecx+30h] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
mov eax [esp+58h] +
cmp eax 1Dh +
jz loc_43B090  +
jbe loc_43B010  +
cmp eax 7FFFFFFDh +
jz loc_43B090  +
nop   +
lea esi [esi+0] +
ja loc_43B125  +
sub eax 6FFFFEFBh +
cmp eax 1 +
ja loc_43B03B  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44B4F0  +
mov [esp+5Ch] eax +
jmp loc_43B021  +
***
lea eax ds:0[ebp*4] +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov edi eax +
jz loc_43B104  +
mov [esp+58h] eax +
lea eax [esp+58h] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset dword_42F3D0 +
mov dword ptr [esp+5Ch] 0 +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_419ED0  +
mov ecx [esp+5Ch] +
test ecx ecx +
jz loc_43B3F4  +
mov [esp] edi +
call free  +
xor eax eax +
jmp loc_43AC66  +
***
ja loc_43B135  +
cmp eax 1 +
jnz loc_43B03B  +
nop   +
lea esi [esi+0] +
jmp loc_43B090  +
***
cmp eax 7FFFFFFFh +
jnz loc_43B03B  +
jmp loc_43B090  +
***
sub eax 0Eh +
cmp eax 1 +
ja loc_43B03B  +
jmp loc_43B090  +
***
mov esi [esp+0C0h] +
mov eax [esp+20h] +
mov edi [esp+14h] +
mov ebx [eax+0C0h] +
test ebx ebx +
jz loc_43B178  +
nop   +
mov eax [ebx+18h] +
mov [esp] edi +
mov [esp+4] eax +
call sub_44B4F0  +
mov [ebx+18h] eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43B160  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset sub_4317F0 +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_419ED0  +
mov eax [esi+0A0h] +
mov ebx [eax+238h] +
test ebx ebx +
jnz loc_43B346  +
mov edx [eax+244h] +
test edx edx +
jz loc_43B283  +
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_402D90  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
lea esi [esi+0] +
mov ebp [esp+1Ch] +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] ebp +
call sub_420A50  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44B4F0  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+5Ch] eax +
call sub_420AC0  +
cmp word ptr [esp+5Ah] 0 +
jz loc_43B277  +
xor ebp ebp +
lea esi [esi+0] +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_420B40  +
mov eax [esp+48h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44B4F0  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+48h] eax +
call sub_420BB0  +
movzx eax word ptr [esp+5Ah] +
cmp ebp eax +
jb loc_43B230  +
mov eax [esp+64h] +
test eax eax +
jnz loc_43B1E0  +
mov eax [esp+0C4h] +
xor ebx ebx +
mov eax [eax+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_44B4E0  +
mov ecx [esp+24h] +
mov esi [esp+0C4h] +
mov [ecx+24h] eax +
jmp loc_43B2BC  +
add ebx 1 +
cmp [esi+64h] ebx +
jb loc_43AC61  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_435B80  +
test eax eax +
jnz loc_43B2B0  +
xor eax eax +
jmp loc_43AC66  +
***
mov [esp+4] eax +
mov [esp] esi +
call sub_406290  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43B104  +
mov edx [ebx+174h] +
mov ecx [esp+3Ch] +
movzx edx byte ptr [edx+5] +
add ecx 1 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
imul edx ecx +
mov [esp+3Ch] ecx +
mov [esp+8] edx +
call memset  +
jmp loc_43AD57  +
***
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_43AC66  +
***
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_402D90  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
jmp loc_43B378  +
mov ecx [esp+68h] +
test ecx ecx +
jz loc_43B3E9  +
mov eax [esp+1Ch] +
mov [esp+4] ebx +
add ebx 14h +
mov [esp] esi +
mov [esp+8] eax +
call sub_420890  +
cmp dword ptr [esp+64h] 14h +
jnz loc_43B370  +
cmp word ptr [esp+5Eh] 0 +
jz loc_43B370  +
xor ebp ebp +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_4209D0  +
mov eax [esp+40h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44B4F0  +
mov [esp+8] ebx +
add ebx 8 +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+40h] eax +
call sub_420A10  +
movzx eax word ptr [esp+5Eh] +
cmp ebp eax +
jb loc_43B3A0  +
jmp loc_43B370  +
***
mov eax [esi+0A0h] +
jmp loc_43B1A8  +
***
mov ecx [esp+58h] +
mov edx edi +
mov eax [esp+0C4h] +
mov dword ptr [esp] 0 +
sub ecx edi +
sar ecx 2 +
call sub_42F040  +
mov [esp] edi +
mov [esp+18h] eax +
call free  +
mov edx [esp+18h] +
test edx edx +
jz loc_43B104  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [eax+60h] edx +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_hash +
mov [esp] eax +
call sub_402D90  +
mov edx [esp+18h] +
test eax eax +
mov edi eax +
jz loc_43BA64  +
mov eax [edi+8Ch] +
mov [esp+1Ch] edx +
mov eax [eax+28h] +
mov ecx eax +
mov [esp+18h] eax +
lea eax [ebp+edx+2] +
imul eax ecx +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_406370  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43B104  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
shl ecx 3 +
cmp ecx 8 +
jz loc_43B911  +
cmp ecx 10h +
jz loc_43B9C6  +
cmp ecx 20h +
jz loc_43B99C  +
cmp ecx 40h +
jnz loc_43B9FA  +
mov ecx [esi+4] +
mov ecx [ecx+24h] +
mov [esp+8] eax +
mov [esp] edx +
mov dword ptr [esp+4] 0 +
call ecx  +
mov eax [esi+4] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
jmp loc_43AD7B  +
***
mov dword ptr [esp+4] 1989h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
jmp loc_43ACD8  +
***
mov dword ptr [esp+4] 199Dh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
jmp loc_43AD3F  +
***
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_43B9DD  +
mov eax edi +
shr eax 1 +
jz loc_43BA16  +
mov edx 1 +
jmp loc_43B554  +
mov edx ecx +
shr eax 1 +
lea ecx [edx+1] +
jnz loc_43B552  +
cmp ecx 2 +
jbe loc_43BA16  +
lea eax [edx-1] +
bt edi eax +
jnb loc_43B924  +
mov eax [ebx+174h] +
add edx 4 +
cmp byte ptr [eax+0Ah] 40h +
jz loc_43B942  +
mov dword ptr [esp+90h] 5 +
mov eax 1Fh +
mov dword ptr [esp+20h] 5 +
mov [esp+98h] eax +
mov eax 1 +
mov ecx edx +
mov edi eax +
shl edi cl +
mov ecx edx +
sub ecx [esp+20h] +
mov [esp+64h] edi +
mov [esp+94h] edx +
shl eax cl +
mov [esp+20h] eax +
lea edi ds:0[eax*4] +
mov eax [esp+18h] +
lea eax [edi+eax*8] +
mov [esp] eax +
call sub_408000  +
test eax eax +
mov [esp+78h] eax +
jz loc_43B333  +
mov edx [esp+18h] +
lea ecx [eax+edi] +
mov [esp+74h] ecx +
mov [esp+2Ch] ecx +
mov [esp+8] edi +
shl edx 2 +
mov [esp+28h] edx +
add edx ecx +
mov ecx ebp +
sub ecx [esp+60h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
mov [esp+70h] edx +
mov [esp+88h] ecx +
call memset  +
mov edx [esp+28h] +
mov ecx [esp+2Ch] +
mov dword ptr [esp+4] 0 +
mov [esp+8] edx +
mov [esp] ecx +
call memset  +
mov eax [esp+60h] +
mov edi [esp+74h] +
test eax eax +
jz loc_43B671  +
mov eax [esp+68h] +
xor ecx ecx +
mov [esp+2Ch] ebx +
mov ebx eax +
mov eax [ebx+ecx*4] +
xor edx edx +
add ecx 1 +
div  dword ptr [esp+18h] +
add dword ptr [edi+edx*4] 1 +
cmp [esp+60h] ecx +
ja loc_43B657  +
mov ebx [esp+2Ch] +
mov edx [esp+88h] +
xor eax eax +
mov ecx [esp+70h] +
cmp dword ptr [edi+eax*4] 0 +
jz loc_43B68A  +
mov [ecx+eax*4] edx +
add edx [edi+eax*4] +
add eax 1 +
cmp eax [esp+18h] +
jnz loc_43B67E  +
cmp edx ebp +
jz loc_43B6AB  +
mov dword ptr [esp+4] 1A5Bh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
mov eax [esp+80h] +
mov ecx [esp+18h] +
mov [esp+8Ch] eax +
mov eax [esp+60h] +
mov [esp+84h] ecx +
add eax ecx +
mov ecx [esp+24h] +
mov edx eax +
mov eax [esp+64h] +
shr eax 3 +
lea eax [eax+edx*4+10h] +
mov [ecx+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_406370  +
test eax eax +
mov edi eax +
jz loc_43B327  +
mov eax [esp+24h] +
mov ecx [esp+18h] +
mov [eax+6Ch] edi +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp] ecx +
mov [esp+4] edi +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+88h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov ecx [esp+20h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+94h] +
mov [esp] edx +
call eax  +
mov eax [esp+64h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx [esp+0C0h] +
shr eax 3 +
lea eax [edi+eax+10h] +
xor edi edi +
mov [esp+2Ch] eax +
mov ebp eax +
jmp loc_43B794  +
mov [esp+4] ebp +
mov dword ptr [esp] 0 +
call eax  +
add ebp 4 +
add edi 1 +
cmp edi [esp+18h] +
jz loc_43B7E9  +
mov eax [esp+74h] +
mov eax [eax+edi*4] +
test eax eax +
mov eax [ebx+4] +
mov eax [eax+30h] +
jz loc_43B77B  +
mov ecx [esp+70h] +
mov ecx [ecx+edi*4] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
jmp loc_43B788  +
***
mov dword ptr [esp+4] 0CE2h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
jmp loc_43AFE7  +
***
mov dword ptr [esp+4] 1A8Dh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
jmp loc_43AF90  +
***
mov eax [esp+2Ch] +
add eax [esp+28h] +
mov dword ptr [esp+4] offset sub_42FE00 +
mov [esp+0C0h] ebx +
mov ebx esi +
mov esi [esp+0C0h] +
mov [esp+7Ch] eax +
mov eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_419ED0  +
mov eax [esp+24h] +
mov edi [esp+20h] +
mov ebp [eax+6Ch] +
add ebp 10h +
test edi edi +
jz loc_43B8F4  +
mov eax [ebx+174h] +
xor ecx ecx +
xor edi edi +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx ecx +
mov ecx [esp+0C0h] +
movzx eax byte ptr [eax+0Ah] +
jmp loc_43B8B6  +
cmp al 10h +
jz loc_43B8C6  +
cmp al 20h +
jz loc_43B8E6  +
cmp al 40h +
jnz loc_43BA48  +
mov eax [ecx+4] +
mov edx [esp+78h] +
mov [esp+18h] ecx +
mov eax [eax+24h] +
mov [esp+8] ebp +
mov ecx [edx+edi] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
call eax  +
mov ecx [esp+18h] +
mov eax [esi+174h] +
add ebx 1 +
add edi 4 +
movzx eax byte ptr [eax+0Ah] +
mov edx eax +
shr dl 3 +
movzx edx dl +
add ebp edx +
cmp [esp+20h] ebx +
jz loc_43B8F2  +
cmp al 8 +
jnz loc_43B860  +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [ebp+0] al +
jmp loc_43B896  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+3Ch] +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [esp+4] ebp +
mov [esp] eax +
call edx  +
mov ecx [esp+18h] +
jmp loc_43B896  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+30h] +
jmp loc_43B8D0  +
***
mov esi ecx +
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
jmp loc_43AF70  +
***
mov [eax] dl +
mov ecx [esp+18h] +
mov edx ebp +
mov eax [edi+6Ch] +
mov [eax+ecx] dl +
jmp loc_43B4F1  +
***
mov eax [ebx+174h] +
add edx 3 +
cmp byte ptr [eax+0Ah] 40h +
jnz loc_43B583  +
cmp edx 5 +
mov eax 6 +
cmovz edx eax +
mov dword ptr [esp+90h] 6 +
mov eax 3Fh +
mov dword ptr [esp+20h] 6 +
jmp loc_43B59B  +
***
mov byte ptr [edi+10h] 0 +
jmp loc_43AF49  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+3Ch] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_43AF49  +
***
mov dword ptr [esp+4] 1A0Dh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
jmp loc_43AE41  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+30h] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
jmp loc_43B4F1  +
***
mov ecx [esi+4] +
mov ecx [ecx+3Ch] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+3Ch] +
jmp loc_43B9B1  +
***
mov dword ptr [esp+4] 1A2Ah +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
mov edi [esp+60h] +
jmp loc_43B541  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 19DEh +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404070  +
mov eax [ebx+174h] +
cmp byte ptr [eax+0Ah] 40h +
jz loc_43BA9C  +
mov edx 5 +
jmp loc_43B583  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A22h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404070  +
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A83h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404070  +
mov dword ptr [esp+4] 19D7h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
mov edx [esp+18h] +
jmp loc_43B459  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_43AF49  +
***
mov edx 6 +
jmp loc_43B942  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_43BAD4  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_43BAF2  +
jmp loc_43BB90  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_43BB90  +
test byte ptr [ebx+29h] 8 +
jnz loc_43BAE4  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43BAE4  +
mov eax [ebp+4] +
mov ecx [ebx+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_43BAE4  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_43BB4F  +
jmp loc_43BAE4  +
***
mov eax [edi+88h] +
test eax eax +
jz loc_43BB41  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or ah 1 +
mov [esi+18h] ax +
mov eax [esp+34h] +
mov edx [eax+1Ch] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_43BAE4  +
test byte ptr [esi+16h] 80h +
jz loc_43BB48  +
cmp dword ptr [esi+3Ch] offset off_473250 +
jz loc_43BB48  +
mov edi [esi+8Ch] +
add edx 7Ch +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebp +
lea eax [edi+88h] +
mov [esp+0Ch] eax +
call sub_44D180  +
test eax eax +
jnz loc_43BB28  +
jmp loc_43BAC8  +
***
mov eax [edx+7Ch] +
mov ebx 1 +
test eax eax +
jz loc_43BACA  +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp] ebp +
mov dword ptr [esp+0Ch] offset sub_42F000 +
mov [esp+4] eax +
call sub_44D400  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
movzx edx byte ptr [ebx+34h] +
mov eax edx +
and eax 6 +
cmp al 6 +
jz loc_43BC53  +
movzx eax byte ptr [ebx+33h] +
mov ecx eax +
and eax 0FFFFFFFBh +
or cl [esi+33h] +
and ecx 4 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFFEh +
or cl [esi+33h] +
and ecx 1 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFEFh +
or cl [esi+33h] +
and ecx 10h +
or eax ecx +
mov ecx edx +
mov [ebx+33h] al +
and edx 0FFFFFFBFh +
or cl [esi+34h] +
and ecx 40h +
or edx ecx +
mov [ebx+34h] dl +
mov edx eax +
and eax 7Fh +
or dl [esi+33h] +
and edx 0FFFFFF80h +
or eax edx +
mov [ebx+33h] al +
movzx eax byte ptr [ebx+35h] +
mov edx eax +
and eax 0FFFFFFFDh +
or dl [esi+35h] +
and edx 2 +
or eax edx +
mov [ebx+35h] al +
cmp byte ptr [esi+0Ch] 6 +
jz loc_43BC60  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+20h] +
mov ecx [esi+24h] +
mov eax [eax+1Ch] +
mov edx [eax+3Ch] +
cmp ecx edx +
jle loc_43BC80  +
mov edi [ebx+24h] +
test edi edi +
js loc_43BCF0  +
add ecx edi +
mov [ebx+24h] ecx +
mov [esi+24h] edx +
mov ecx [esi+28h] +
mov edx [eax+40h] +
cmp ecx edx +
jle loc_43BC99  +
mov edi [ebx+28h] +
test edi edi +
js loc_43BCE0  +
add ecx edi +
mov [ebx+28h] ecx +
mov [esi+28h] edx +
mov edx [esi+20h] +
cmp edx 0FFFFFFFFh +
jz loc_43BC59  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43BCBC  +
mov edx [ebx+38h] +
mov eax [eax+50h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_44B370  +
mov edx [esi+20h] +
mov eax [esi+38h] +
mov [ebx+20h] edx +
mov [ebx+38h] eax +
mov dword ptr [esi+20h] 0FFFFFFFFh +
mov dword ptr [esi+38h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [ebx+28h] 0 +
xor edi edi +
mov ecx [esi+28h] +
jmp loc_43BC91  +
***
mov dword ptr [ebx+24h] 0 +
xor edi edi +
mov ecx [esi+24h] +
jmp loc_43BC78  +
***
jmp loc_43BD10  +
push ebx  +
mov eax [esp+0Ch] +
mov edx [esp+8] +
mov ecx [esp+10h] +
cmp byte ptr [eax+30h] 0Ah +
jz loc_43BD30  +
mov ebx [edx+1Ch] +
mov ebx [ebx+48h] +
and byte ptr [eax+33h] 7Fh +
mov [eax+28h] ebx +
test ecx ecx +
jz loc_43BD60  +
or byte ptr [eax+34h] 8 +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_43BD60  +
mov dword ptr [eax+20h] 0FFFFFFFFh +
mov ecx [eax+38h] +
mov eax [edx+1Ch] +
mov eax [eax+50h] +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
pop ebx  +
jmp sub_44B370  +
***
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1AEh] +
mov dword ptr [ebx+44h] 0FFFFFFFFh +
mov dword ptr [ebx+48h] 0FFFFFFFFh +
mov dword ptr [ebx+4Ch] 1 +
shr al 1 +
and eax 1 +
sub eax 1 +
mov [ebx+3Ch] eax +
mov [ebx+40h] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] eax +
call sub_4196E0  +
mov edx [esp+18h+arg_10] +
mov dword ptr [ebx+28h] 1 +
mov [ebx+2Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 0FCh +
call sub_408190  +
test eax eax +
mov ebx eax +
jz loc_43BE30  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 23h +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_42F4B0 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43BD70  +
test eax eax +
jz loc_43BE34  +
mov dword ptr [ebx+24h] offset sub_42F580 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_43BE2B  +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_43BE2B  +
***
mov edx [esp+arg_0] +
xor eax eax +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_43BF37  +
movzx ecx byte ptr [edx+28h] +
and ecx 7 +
cmp cl 1 +
jnz locret_43BF37  +
mov eax [edx+0A0h] +
mov eax [eax+220h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebx [esp+50h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [eax] 0 +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43BF73  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_43BF66  +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_402CB0  +
test eax eax +
mov esi eax +
jz loc_43BF66  +
mov eax [eax+24h] +
test eax eax +
jz loc_43BF66  +
lea eax [esp+24h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_403610  +
test eax eax +
jnz loc_43BFCF  +
mov edx [esp+24h] +
xor eax eax +
test edx edx +
jz loc_43BF6B  +
mov [esp] edx +
mov [esp+14h] eax +
call free  +
mov eax [esp+14h] +
jmp loc_43BF6B  +
***
mov [esp+4] esi +
mov [esp] ebx +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
jz loc_43BFB3  +
mov edx [ebx+0A0h] +
mov edi [esp+24h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
mov ebp [eax+30h] +
mov eax edi +
mov [esp+14h] edx +
mov edx [esi+24h] +
add edx edi +
cmp edi edx +
jnb loc_43C0A4  +
mov esi edi +
mov edi edx +
jmp loc_43C030  +
add esi [esp+14h] +
cmp esi edi +
jnb loc_43C0A0  +
lea eax [esp+28h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call ebp  +
mov eax [esp+28h] +
test eax eax +
jz loc_43C0A0  +
cmp eax 1 +
jnz loc_43C028  +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call sub_420E30  +
test eax eax +
mov [esp+18h] eax +
jz loc_43BFB3  +
mov dword ptr [esp+4] 0Ch +
mov [esp] ebx +
call sub_406290  +
test eax eax +
jz loc_43BFB3  +
mov ecx [esp+18h] +
mov edx [esp+54h] +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jmp loc_43C028  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_43BF66  +
***
jmp loc_43C0C0  +
mov edx [esp+8] +
test edx edx +
jz loc_43C0E4  +
mov eax [esp+10h] +
test eax eax +
jz loc_43C0E4  +
mov eax [esp+4] +
mov ecx [eax+4] +
mov eax 1 +
cmp dword ptr [ecx+4] 5 +
jz loc_43C0F0  +
retn   +
***
mov eax 1 +
retn   +
***
mov ecx [esp+0Ch] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_43C0E2  +
mov eax [esp+10h] +
mov edx [edx+8Ch] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp [edx+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+5Ch] +
mov eax [eax+8] +
mov esi eax +
mov edx eax +
shr esi 6 +
mov edi eax +
mov [esp+18h] esi +
mov ebx eax +
mov esi eax +
and dword ptr [esp+18h] 3Fh +
and edx 3Fh +
shr edi 12h +
mov [esp+28h] eax +
mov eax [esp+18h] +
shr ebx 16h +
and edi 0Fh +
and ebx 0Fh +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea eax [eax+eax-2] +
mov [esp+20h] eax +
or dword ptr [esp+20h] 1 +
and esi 8000000h +
jz loc_43C335  +
lea eax [edx+1] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
mov eax [esp+5Ch] +
mov esi [esp+58h] +
add esi [eax] +
cmp edi ebx +
jb loc_43C1A7  +
lea eax [ebx-1] +
cmp eax 3 +
jbe loc_43C351  +
mov dword ptr [esp+4] 1F35h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
cmp ebx 4 +
lea ecx ds:0[ebx*8] +
jz loc_43C378  +
xor ebp ebp +
test edi edi +
jz loc_43C24A  +
mov edx edi +
xor eax eax +
sub edx ebx +
mov [esp+2Ch] edi +
cmp ebx 2 +
mov edi edx +
jz loc_43C210  +
cmp ebx 4 +
jz loc_43C313  +
cmp ebx 1 +
jz loc_43C305  +
mov dword ptr [esp+8] offset aGet_value +
mov dword ptr [esp+4] 1F56h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404070  +
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
mov edx edi +
add esi ebx +
sub edx ebx +
test edi edi +
jnz loc_43C1DB  +
mov ebp [esp+20h] +
movzx ecx byte ptr [esp+1Ch] +
mov edi [esp+2Ch] +
shl ebp cl +
not ebp  +
and ebp eax +
mov ecx [esp+28h] +
xor eax eax +
test ecx 20000000h +
jnz loc_43C28E  +
mov eax ecx +
mov ecx [esp+60h] +
shl eax 3 +
sar eax 1Fh +
lea edx ds:0[edi*8] +
add eax 3 +
mov [esp+10h] ecx +
mov ecx [esp+18h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
mov [esp+4] ecx +
call loc_417F70  +
movzx ecx byte ptr [esp+1Ch] +
mov esi [esp+20h] +
and esi [esp+60h] +
mov edx [esp+58h] +
shl esi cl +
mov ecx edi +
or esi ebp +
mov ebp [esp+5Ch] +
sub ecx ebx +
add edx [ebp+0] +
mov ebp ebx +
neg ebp  +
mov [esp+18h] ebp +
mov ebp ecx +
add edx ecx +
test edi edi +
jz loc_43C3AB  +
cmp ebx 2 +
mov edi edx +
mov [esp+20h] eax +
mov edx esi +
mov esi [esp+50h] +
jz loc_43C3CF  +
cmp ebx 4 +
jz loc_43C3F0  +
cmp ebx 1 +
jz loc_43C3B3  +
mov dword ptr [esp+8] offset aPut_value +
mov dword ptr [esp+4] 1F20h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404070  +
shl eax cl +
mov edx eax +
movzx eax byte ptr [esi] +
or eax edx +
jmp loc_43C22D  +
***
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
jmp loc_43C22D  +
***
lea eax ds:0[edi*8] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
sub [esp+1Ch] edx +
jmp loc_43C18D  +
***
xor edx edx +
mov eax edi +
div  ebx +
test edx edx +
jnz loc_43C1A7  +
mov eax [esp+50h] +
test eax eax +
jz loc_43C1A7  +
test esi esi +
jnz loc_43C1BB  +
jmp loc_43C1A7  +
***
cmp edi 4 +
nop   +
lea esi [esi+0] +
jz loc_43C3A0  +
mov dword ptr [esp+4] 1F39h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
xor ecx ecx +
jmp loc_43C1CB  +
***
xor ecx ecx +
jmp loc_43C1D1  +
***
mov eax [esp+20h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [edi] dl +
shr edx 8 +
mov ecx ebp +
add edi [esp+18h] +
sub ecx ebx +
test ebp ebp +
jz loc_43C3A7  +
cmp ebx 2 +
mov ebp ecx +
jnz loc_43C2D7  +
mov ecx [esi+4] +
mov [esp+1Ch] edx +
mov ecx [ecx+3Ch] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
mov edx [esp+1Ch] +
shr edx 10h +
jmp loc_43C3B8  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
xor edx edx +
jmp loc_43C3B8  +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [edx+14h] +
and eax 2000h +
jz loc_43C430  +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [edx] +
mov esi offset a_eh_frame_0 +
mov ecx 0Ah +
mov edi edx +
cmps   +
jz loc_43C426  +
mov edi edx +
mov esi offset a_gcc_except_ta +
mov ecx 12h +
mov edx 3 +
cmps   +
pop ebx  +
pop esi  +
pop edi  +
cmovnz eax edx +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov esi [esp+0Ch+arg_0] +
mov edi [esp+0Ch+arg_4] +
mov ebx [esi+7Ch] +
test ebx ebx +
jz loc_43C493  +
test byte ptr [ebx+17h] 2 +
jnz loc_43C4C0  +
mov edx [esi+28h] +
test edx edx +
jz loc_43C4B0  +
mov eax [ebx+28h] +
test eax eax +
jz loc_43C4A0  +
cmp edx eax +
jz loc_43C490  +
xor ebx ebx +
mov [esi+7Ch] ebx +
add esp 0Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
cmp edx eax +
jnz loc_43C48E  +
jmp loc_43C490  +
mov eax [ebx+28h] +
mov edx [esi+24h] +
test eax eax +
jnz loc_43C48A  +
jmp loc_43C4A0  +
mov eax [ebx+8Ch] +
mov ebp [eax+7Ch] +
test ebp ebp +
jz loc_43C48E  +
mov ebx ebp +
jmp loc_43C4E2  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp ebp ebx +
jz loc_43C48E  +
test ebx ebx +
jz loc_43C48E  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_42F5C0  +
test eax eax +
jz loc_43C4D1  +
test ebx ebx +
jnz loc_43C47C  +
jmp loc_43C490  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov eax [eax+4] +
test byte ptr [edx+29h] 8 +
mov [esp+0E8h+var_B0] edx +
mov [esp+0E8h+var_BC] eax +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+94h] +
mov [esp+0E8h+var_84] eax +
jnz loc_43CA3B  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
lea edi [eax+48h] +
mov [esp+0E8h+var_AC] eax +
mov [esp+0E8h+var_88] edi +
test ecx ecx +
jnz loc_43CA50  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+68h] +
mov [esp+0E8h+var_A8] eax +
mov [esp+0E8h+var_94] eax +
mov eax [esp+0E8h+var_AC] +
mov edx [esp+0E8h+var_A8] +
mov eax [eax+78h] +
test edx edx +
mov [esp+0E8h+var_A0] eax +
jnz loc_43D089  +
mov eax [esp+0E8h+var_A8] +
mov ebx [esp+0E8h+var_A0] +
mov esi [ebp+2Ch] +
mov edi [ebp+30h] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+0E8h+var_C0] eax +
jnb loc_43C8A5  +
mov [esp+0E8h+var_C4] ebp +
mov ebx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_9C] 0 +
mov ebp [esp+0E8h+var_B0] +
jmp loc_43C5DB  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_43C5F1  +
mov dword ptr [edi] 0 +
add ebx 14h +
add esi 4 +
add edi 4 +
cmp [esp+0E8h+var_C0] ebx +
jbe loc_43C8A1  +
mov dword ptr [esi] 0FFFFFFFFh +
mov eax [ebp+0A0h] +
mov eax [eax+928h] +
test eax eax +
jnz loc_43C5B7  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_43CA80  +
mov [esp+0E8h+var_3C] offset off_4731A8 +
mov edx offset off_4731A8 +
mov ecx [esp+0E8h+var_C4] +
mov [edi] edx +
cmp [ecx+30h] edi +
jz loc_43C5C8  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_43C5C8  +
mov eax [ecx] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 18h +
cmp dl 18h +
jz loc_43C5C8  +
and eax 60h +
cmp al 60h +
jz loc_43C5C8  +
mov eax [ebx+10h] +
sub eax 1 +
cmp eax 0FFFFFEFEh +
ja loc_43C669  +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_43CB70  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_43C5C8  +
mov eax [esp+0E8h+var_AC] +
mov edx [ebx+8] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] ebp +
mov [esp+0E8h+var_E4] eax +
call sub_420E30  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_43CC70  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
mov ecx eax +
and ecx 18h +
cmp cl 10h +
jz loc_43CC10  +
and eax 60h +
jnz loc_43CB35  +
mov eax [esp+0E8h+var_3C] +
test byte ptr [eax+16h] 80h +
jz loc_43C6E5  +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_43C6E5  +
mov eax [ebp+4] +
mov ecx [esp+0E8h+var_B4] +
mov eax [eax+11Ch] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_43C5C8  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jz loc_43CB4C  +
mov eax [esp+0E8h+var_9C] +
test eax eax +
jnz loc_43C78D  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_2C] 0 +
mov [esp+0E8h+var_38] 0 +
mov [esp+0E8h+var_34] 0 +
add dword ptr [eax+38h] 1 +
xor eax eax +
test byte ptr [ebp+2Ch] 10h +
mov [esp+0E8h+var_30] 0 +
mov byte ptr [esp+0E8h+var_2C] 4 +
mov [esp+0E8h+var_28] 0FFFFFFF1h +
jnz loc_43C752  +
mov eax [ebp+0] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
lea ecx [esp+0E8h+var_38] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_473250 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_430250  +
test eax eax +
jz loc_43CC70  +
mov [esp+0E8h+var_9C] 1 +
mov eax [ebx] +
mov [esp+0E8h+var_38] eax +
mov eax [ebx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ebx+8] +
mov [esp+0E8h+var_30] eax +
mov eax [ebx+0Ch] +
mov [esp+0E8h+var_2C] eax +
mov eax [ebx+10h] +
mov [esp+0E8h+var_28] eax +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43CC70  +
mov ecx [esp+0E8h+var_3C] +
mov edx [esp+0E8h+var_C4] +
mov eax [ecx+38h] +
mov edx [edx] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_A4] ecx +
mov [esp+0E8h+var_38] eax +
mov [esp+0E8h+var_98] edx +
movzx edx byte ptr [edx] +
and edx 3 +
cmp dl 2 +
jz loc_43C83C  +
mov edx [ecx+3Ch] +
add eax [edx+1Ch] +
movzx edx byte ptr [esp+0E8h+var_2C] +
mov [esp+0E8h+var_38] eax +
and edx 0Fh +
cmp dl 6 +
jz loc_43CC80  +
mov eax [esp+0E8h+var_BC] +
mov eax [eax+7Ch] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_98] eax +
mov eax [esp+0E8h+var_A4] +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_E8] eax +
call sub_430250  +
test eax eax +
jz loc_43CC70  +
cmp eax 1 +
jnz loc_43C5C8  +
mov eax [esp+0E8h+var_98] +
add ebx 14h +
add esi 4 +
add edi 4 +
mov [esi-4] eax +
cmp [esp+0E8h+var_C0] ebx +
ja loc_43C5DB  +
mov ebp [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_B8] +
mov edi 20h +
mov edx 8 +
mov esi 0FFFFFFFFh +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovnz edx edi +
mov edi [esp+0E8h+var_B0] +
setnz al  +
movzx eax al +
lea eax ds:4[eax*4] +
mov [esp+0E8h+var_98] eax +
mov eax [edi+0A0h] +
mov ebx [edi+64h] +
mov [esp+0E8h+var_C0] edx +
mov edx 0FFh +
cmovnz edx esi +
mov eax [eax+218h] +
test ebx ebx +
mov [esp+0E8h+var_74] edx +
mov [esp+0E8h+var_8C] eax +
jz loc_43CA3B  +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_C4] ebp +
mov ebp ebx +
mov [esp+0E8h+var_6C] 0 +
mov [esp+0E8h+var_70] eax +
nop   +
lea esi [esi+0] +
test byte ptr [ebp+18h] 2 +
jz loc_43CA30  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43CB80  +
mov eax [ebp+14h] +
test ah 1 +
jz loc_43CA30  +
mov edx [ebp+24h] +
test edx edx +
jnz loc_43C959  +
test al 4 +
jz loc_43CA30  +
test eax 100000h +
jnz loc_43CA30  +
mov ecx [ebp+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_43D764  +
mov edi [esp+0E8h+var_B8] +
mov [esp+0E8h+var_40] ecx +
test byte ptr [edi+1AEh] 40h +
jz loc_43C998  +
mov ebx [ebp+28h] +
test ebx ebx +
jz loc_43C998  +
cmp edx ebx +
ja loc_43D060  +
test al 4 +
jnz loc_43CCA4  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+12Ch] +
test eax eax +
jz loc_43C9D4  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esp+0E8h+var_40] +
mov edi [esp+0E8h+var_BC] +
mov edx [esi] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E4] edx +
call eax  +
test eax eax +
jnz loc_43CA30  +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
cmp eax 2 +
jz loc_43D193  +
jle loc_43D0DD  +
cmp eax 3 +
jz loc_43D02A  +
cmp eax 6 +
jnz loc_43D1C0  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_4449A0  +
test eax eax +
jz loc_43CC70  +
lea esi [esi+0] +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_43C920  +
add esp 0DCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0E8h+var_B8] +
xor edx edx +
mov [esp+0E8h+var_94] 0 +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+60h] +
div  ecx +
mov [esp+0E8h+var_A8] eax +
jmp loc_43C56A  +
cmp eax 0FFFFFFF1h +
jz loc_43CB20  +
cmp eax 0FFFFFFF2h +
jnz loc_43CAA3  +
mov [esp+0E8h+var_3C] offset off_473100 +
mov edx offset off_473100 +
jmp loc_43C60C  +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] ebp +
call sub_423A90  +
test eax eax +
mov [esp+0E8h+var_3C] eax +
jz loc_43C5C2  +
movzx ecx word ptr [eax+18h] +
mov edx eax +
and cx 380h +
cmp cx 100h +
jnz loc_43C60C  +
movzx ecx byte ptr [ebx+0Ch] +
and ecx 0Fh +
cmp cl 3 +
jz loc_43C60C  +
mov eax [eax+8Ch] +
mov edx [ebx] +
mov eax [eax+88h] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_3C] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44DB80  +
mov [ebx] eax +
mov edx [esp+0E8h+var_3C] +
jmp loc_43C60C  +
mov [esp+0E8h+var_3C] offset off_473250 +
mov edx offset off_473250 +
jmp loc_43C60C  +
cmp al 40h +
jz loc_43C6C7  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jnz loc_43C6F4  +
test byte ptr [ebp+2Ch] 10h +
jnz loc_43C5C8  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_9C] 1 +
add dword ptr [eax+38h] 1 +
jmp loc_43C78D  +
mov ecx [esp+0E8h+var_BC] +
cmp eax [ecx+68h] +
setnz al  +
jmp loc_43C661  +
mov edx [ebp+14h] +
mov ecx edx +
mov eax edx +
and ecx 2100000h +
cmp ecx 2000000h +
jnz loc_43C941  +
mov eax [ebp+8Ch] +
mov ebx [ebp+3Ch] +
mov eax [eax+20h] +
cmp [esp+0E8h+var_A8] eax +
jbe loc_43CFE2  +
mov edi [esp+0E8h+var_B0] +
mov ecx [edi+0A0h] +
lea edi ds:0[eax*4] +
mov esi [ecx+928h] +
test esi esi +
jnz loc_43CFD0  +
mov esi [esp+0E8h+var_A0] +
lea eax [eax+eax*4] +
lea ecx [esi+eax*4] +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_43D810  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+2Ch] +
mov esi [eax+edi] +
mov eax edx +
cmp esi 0FFFFFFFFh +
jz loc_43DA23  +
mov edx [ebx+8Ch] +
mov [edx+20h] esi +
jmp loc_43C941  +
mov eax [edx+20h] +
mov ecx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] ecx +
call sub_409000  +
test eax eax +
jz loc_43C5C8  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
jmp loc_43C6A7  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] offset aErrorBSizeOfSe +
mov [esp+0E8h+var_E4] eax +
call off_4733A4  +
mov [esp+0E8h+var_E8] 14h +
call sub_4040F0  +
nop   +
xor eax eax +
add esp 0DCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0E8h+var_98] +
mov edx [ecx+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_43D948  +
sub eax [edx+1Ch] +
mov [esp+0E8h+var_38] eax +
jmp loc_43C83C  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_435230  +
test eax eax +
mov [esp+0E8h+var_7C] eax +
jz loc_43D92E  +
mov edx [ebp+24h] +
cmp [esp+0E8h+var_98] edx +
jnb loc_43CD34  +
mov eax [ebp+0] +
mov edi offset a_ctors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_43D130  +
mov ecx [ebp+3Ch] +
mov edi offset a_init_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_43D130  +
movzx eax byte ptr [eax+6] +
cmp al 2Eh +
jz loc_43CD1D  +
test al al +
jnz loc_43CD34  +
mov eax [esp+0E8h+var_98] +
imul eax [ebp+4Ch] +
cmp edx eax +
jnz loc_43CC4A  +
or dword ptr [ebp+14h] 4000000h +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
lea ecx [eax-1] +
cmp ecx 5 +
ja loc_43CD60  +
mov eax 1 +
shl eax cl +
test al 25h +
jz loc_43CD60  +
mov [esp+0E8h+var_A4] 0FFFFFFFFh +
jmp loc_43CD95  +
mov eax [ebp+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+114h] +
test eax eax +
jz loc_43CD82  +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_43CD52  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+118h] +
mov [esp+0E8h+var_E8] ebp +
call eax  +
mov [esp+0E8h+var_A4] eax +
mov edi [esp+0E8h+var_B8] +
mov eax [ebp+4Ch] +
mov ecx [esp+0E8h+var_7C] +
mov esi [esp+0E8h+var_A4] +
mov edx [edi+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
mov edi ecx +
movzx edx byte ptr [edx+9] +
imul eax edx +
add eax ecx +
mov ebx eax +
mov [esp+0E8h+var_B4] eax +
mov eax esi +
and eax 1 +
mov [esp+0E8h+var_90] eax +
mov eax esi +
and eax 2 +
cmp ecx ebx +
mov [esp+0E8h+var_80] eax +
jnb loc_43D245  +
mov [esp+0E8h+var_9C] ebp +
jmp loc_43CE81  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov esi [eax+928h] +
mov eax [esp+0E8h+var_C4] +
test esi esi +
mov eax [eax+30h] +
lea esi [eax+ebx*4] +
mov eax [esi] +
jz loc_43CE0C  +
test eax eax +
jz loc_43CE9B  +
mov ecx [esp+0E8h+var_A0] +
lea edx [ebx+ebx*4] +
lea edx [ecx+edx*4] +
movzx ecx byte ptr [edx+0Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E0] edx +
mov ebp ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
and ebp 0Fh +
mov [esp+0E8h+var_E8] eax +
call sub_421380  +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
jbe loc_43CEFE  +
test esi esi +
jz loc_43CE74  +
cmp [esp+0E8h+var_A4] 0FFFFFFFFh +
jz loc_43CE74  +
mov ebx [esi] +
test ebx ebx +
jz loc_43CE74  +
cmp ebx offset off_473250 +
jz loc_43CE74  +
cmp dword ptr [ebx+3Ch] offset off_473250 +
jz loc_43D5D2  +
add edi 0Ch +
cmp [esp+0E8h+var_B4] edi +
jbe loc_43D241  +
mov edx [edi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
mov ebx edx +
shr ebx cl +
test ebx ebx +
jz loc_43CE74  +
cmp [esp+0E8h+var_A8] ebx +
ja loc_43CDE4  +
mov esi [esp+0E8h+var_8C] +
mov eax ebx +
sub eax [esp+0E8h+var_94] +
mov eax [esi+eax*4] +
test eax eax +
jnz loc_43CEB4  +
jmp loc_43D9A9  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_43CEB1  +
test byte ptr [eax+0Dh] 1 +
movzx ebp byte ptr [eax+30h] +
jz loc_43CED6  +
sub edx 3 +
cmp dl 1 +
jbe loc_43D160  +
movzx esi byte ptr [eax+0Ch] +
lea edx [eax+14h] +
lea ecx [esi-3] +
xor esi esi +
cmp cl 1 +
cmovbe esi edx +
mov eax [eax+4] +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
ja loc_43CE4E  +
mov ecx [esp+0E8h+var_C4] +
mov eax [ecx] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43CE4E  +
xor eax eax +
cmp ebp 9 +
mov esi [esp+0E8h+var_9C] +
setz al  +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
lea edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E0] eax +
mov eax [esi+3Ch] +
mov eax [eax+1Ch] +
add eax [esi+38h] +
add eax [edi] +
mov [esp+0E8h+var_E8] ecx +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E4] eax +
lea eax [esp+0E8h+var_38] +
call sub_431B30  +
test eax eax +
jz loc_43CC70  +
cmp [esp+0E8h+var_A8] ebx +
mov esi [esp+0E8h+var_38] +
jbe loc_43D833  +
mov ecx [esp+0E8h+var_A0] +
lea eax [ebx+ebx*4] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
shr dl 4 +
test dl dl +
jz loc_43DB0B  +
mov eax [esp+0E8h+var_B0] +
xor ebp ebp +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
test ecx ecx +
jnz loc_43D841  +
mov [esp+0E8h+var_E4] 1DE1h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404040  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
jmp loc_43D841  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esi+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jnz loc_43CBCE  +
mov edi [esp+0E8h+var_8C] +
sub eax [esp+0E8h+var_94] +
mov eax [edi+eax*4] +
movzx edi byte ptr [eax+0Ch] +
lea ecx [edi-6] +
cmp cl 1 +
ja loc_43D00F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea ecx [esi-6] +
cmp cl 1 +
jbe loc_43D000  +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov eax [ebx+8Ch] +
mov dword ptr [eax+20h] 0FFFFFFFEh +
mov eax edx +
jmp loc_43C941  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_444C20  +
test eax eax +
jnz loc_43CA30  +
jmp loc_43CC70  +
mov edi [esp+0E8h+var_C4] +
mov eax [edi+14h] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [edi+14h] +
mov [esp+0E8h+var_40] eax +
mov eax [ebp+14h] +
jmp loc_43C998  +
test eax eax +
jnz loc_43C581  +
mov eax [ebp+28h] +
mov ecx [ebp+24h] +
mov edx [ebp+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
mov [esp+0E8h+var_D0] ecx +
mov [esp+0E8h+var_D4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_421030  +
test eax eax +
mov [esp+0E8h+var_A0] eax +
jnz loc_43C581  +
xor eax eax +
jmp loc_43CC72  +
cmp eax 1 +
jnz loc_43D1C0  +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_D8] eax +
mov eax [ebp+8Ch] +
mov [esp+0E8h+var_E0] ebp +
add eax 88h +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov eax [eax+1Ch] +
sub eax 0FFFFFF80h +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44E940  +
test eax eax +
jnz loc_43CA30  +
jmp loc_43CC70  +
mov edi offset a_dtors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_43CD34  +
mov ecx [ebp+3Ch] +
mov edi offset a_fini_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_43CD34  +
jmp loc_43CD11  +
mov edx [eax+14h] +
test byte ptr [edx+16h] 10h +
jnz loc_43CED6  +
mov edx [edx+94h] +
test edx edx +
jz loc_43CED6  +
test byte ptr [edx+2Ah] 20h +
jz loc_43CED6  +
mov byte ptr [eax+0Ch] 1 +
xor esi esi +
mov [eax+14h] edx +
jmp loc_43CEE8  +
mov eax [ebp+8Ch] +
mov eax [eax+88h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44D900  +
test eax eax +
jnz loc_43CA30  +
jmp loc_43CC70  +
mov eax [ebp+14h] +
test ah 80h +
jnz loc_43CA30  +
xor edi edi +
test eax 4000000h +
mov esi [ebp+38h] +
mov ebx [ebp+24h] +
jz loc_43D891  +
sub ebx [esp+0E8h+var_98] +
mov eax ebp +
mov ebp ebx +
mov ebx eax +
jmp loc_43D204  +
test ebp ebp +
jz loc_43DB04  +
add esi [esp+0E8h+var_70] +
adc edi [esp+0E8h+var_6C] +
sub ebp [esp+0E8h+var_98] +
mov eax [ebx+3Ch] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_D8] edi +
mov ecx eax +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_E4] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] eax +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E8] ecx +
add eax ebp +
mov [esp+0E8h+var_E0] eax +
call sub_4033C0  +
test eax eax +
jnz loc_43D1F0  +
xor eax eax +
jmp loc_43CC72  +
mov ebp [esp+0E8h+var_9C] +
mov eax [esp+0E8h+var_C4] +
mov edi [esp+0E8h+var_A0] +
mov edx [eax+30h] +
mov eax [eax] +
mov [esp+0E8h+var_D0] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_CC] edx +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] edi +
mov edi [esp+0E8h+var_B0] +
mov [esp+0E8h+var_D8] edx +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_84] +
mov [esp+0E8h+var_E0] edi +
call eax  +
test eax eax +
jz loc_43CC70  +
cmp eax 2 +
mov eax [esp+0E8h+var_C4] +
mov ecx [eax] +
movzx edi byte ptr [ecx] +
jz loc_43D940  +
and edi 3 +
mov eax edi +
cmp al 2 +
jz loc_43D2B7  +
cmp byte ptr [ecx+2] 0 +
jns loc_43C9A0  +
mov eax [ebp+8Ch] +
mov ebx eax +
mov [esp+0E8h+var_64] eax +
mov eax [ebp+3Ch] +
mov [esp+0E8h+var_80] eax +
mov eax [eax+8Ch] +
mov esi eax +
mov [esp+0E8h+var_50] eax +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov edx eax +
mov byte ptr [esp+0E8h+var_90] al +
mov [esp+0E8h+var_B4] eax +
mov eax [ebp+4Ch] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax edx +
mov edx [esi+40h] +
add eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_A4] eax +
mov eax [esi+48h] +
mov esi [ebx+3Ch] +
lea eax [eax+edx*4] +
test esi esi +
mov [esp+0E8h+var_60] eax +
jz loc_43DB19  +
mov ebx [esi+28h] +
test ebx ebx +
jnz loc_43D87A  +
add ebx [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] ebx +
mov eax [ebp+38h] +
mov [esp+0E8h+var_B4] eax +
mov eax edi +
cmp al 2 +
jz loc_43D34E  +
mov eax [esp+0E8h+var_80] +
mov eax [eax+1Ch] +
add [esp+0E8h+var_B4] eax +
mov eax [esp+0E8h+var_A4] +
mov edi [esp+0E8h+var_7C] +
cmp edi eax +
jnb loc_43DB7C  +
mov esi [esp+0E8h+var_60] +
movzx eax byte ptr [esp+0E8h+var_90] +
mov [esp+0E8h+var_68] 0 +
mov ebx [esp+0E8h+var_C4] +
mov [esp+0E8h+var_5C] 0 +
mov [esp+0E8h+var_90] esi +
mov esi edi +
xor edi edi +
jmp loc_43D3C4  +
mov eax [esp+0E8h+var_B4] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov [esi] eax +
add esi 0Ch +
add edi 1 +
cmp [esp+0E8h+var_A4] esi +
jbe loc_43D79D  +
mov eax [esp+0E8h+var_B8] +
mov ecx [ebx] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
cmp eax edi +
jz loc_43D4F4  +
cmp esi [esp+0E8h+var_9C] +
jz loc_43DB9F  +
mov eax [esi] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_42E620  +
cmp eax 0FFFFFFFDh +
mov [esi] eax +
ja loc_43D390  +
mov edx [ebx] +
add eax [ebp+38h] +
mov [esi] eax +
movzx edx byte ptr [edx] +
mov ecx eax +
mov [esp+0E8h+var_B4] eax +
and edx 3 +
cmp dl 2 +
jz loc_43D41B  +
mov eax [ebp+3Ch] +
add ecx [eax+1Ch] +
mov [esi] ecx +
mov [esp+0E8h+var_B4] ecx +
mov eax [esi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shr eax cl +
test eax eax +
jz loc_43D3A4  +
mov ecx [esp+0E8h+var_B0] +
cmp [esp+0E8h+var_A8] eax +
mov edx [ecx+0A0h] +
jbe loc_43D500  +
cmp dword ptr [edx+928h] 0 +
lea ecx ds:0[eax*4] +
mov [esp+0E8h+var_80] ecx +
jz loc_43D463  +
mov ecx [ebx+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jz loc_43D500  +
mov edx [esp+0E8h+var_90] +
lea eax [eax+eax*4] +
mov dword ptr [edx] 0 +
mov edx [esp+0E8h+var_A0] +
lea eax [edx+eax*4] +
mov edx [eax] +
mov [esp+0E8h+var_38] edx +
mov edx [eax+4] +
mov [esp+0E8h+var_34] edx +
mov ecx [eax+8] +
mov [esp+0E8h+var_30] ecx +
mov edx [eax+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov eax [eax+10h] +
mov edx [esp+0E8h+var_80] +
mov [esp+0E8h+var_28] eax +
mov eax [ebx+30h] +
mov eax [eax+edx] +
mov [esp+0E8h+var_78] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 3 +
jz loc_43D564  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_80] +
mov eax [eax+edx] +
cmp eax 0FFFFFFFFh +
jz loc_43D627  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_74] +
and edx [esi+4] +
or edx eax +
mov [esi+4] edx +
jmp loc_43D3A4  +
add [esp+0E8h+var_90] 4 +
xor edi edi +
jmp loc_43D3CC  +
mov edx [edx+218h] +
sub eax [esp+0E8h+var_94] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_43D52F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_43D520  +
mov edx [eax+1Ch] +
test edx edx +
js loc_43D552  +
mov [esp+0E8h+var_E4] 281Ch +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
mov [esp+0E8h+var_80] eax +
call sub_404040  +
mov eax [esp+0E8h+var_80] +
mov ecx [esp+0E8h+var_90] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [ecx] eax +
jmp loc_43D3A4  +
cmp [esp+0E8h+var_78] offset off_473250 +
jz loc_43D9A2  +
mov eax [esp+0E8h+var_78] +
test eax eax +
jz loc_43DB69  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_43DB69  +
mov eax [esp+0E8h+var_78] +
mov edx [eax+3Ch] +
cmp edx offset off_473250 +
jz loc_43D982  +
mov eax [edx+88h] +
test eax eax +
jz loc_43D9F8  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_68] +
test edx edx +
jz loc_43D4E3  +
mov ecx [esp+0E8h+var_78] +
mov edx [ecx+38h] +
add [esi+8] edx +
jmp loc_43D4E3  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_43CE74  +
cmp ax 200h +
jz loc_43CE74  +
mov edx [esp+0E8h+var_90] +
test edx edx +
jnz loc_43DB26  +
mov eax [esp+0E8h+var_80] +
test eax eax +
jz loc_43CE74  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_E4] eax +
call sub_43C460  +
test eax eax +
jz loc_43CE74  +
mov [esi] eax +
jmp loc_43CE74  +
mov eax [ebx] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jz loc_43DB8C  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_420E30  +
test eax eax +
mov [esp+0E8h+var_58] eax +
jz loc_43CC70  +
mov eax [esp+0E8h+var_78] +
mov edx [esp+0E8h+var_BC] +
mov ecx [eax+3Ch] +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_54] ecx +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43CC70  +
mov eax [esp+0E8h+var_78] +
mov ecx [ebx] +
mov eax [eax+38h] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_4C] ecx +
mov [esp+0E8h+var_38] eax +
movzx edx byte ptr [ecx] +
and edx 3 +
cmp dl 2 +
jz loc_43D6FF  +
mov ecx [esp+0E8h+var_54] +
add eax [ecx+1Ch] +
mov edx eax +
mov [esp+0E8h+var_38] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 6 +
jnz loc_43D6FF  +
mov eax [esp+0E8h+var_4C] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43DBF5  +
sub edx [eax+1Ch] +
mov [esp+0E8h+var_38] edx +
mov eax [esp+0E8h+var_BC] +
mov edx [eax+7Ch] +
mov eax [esp+0E8h+var_78] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_54] edx +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_58] +
mov [esp+0E8h+var_E4] eax +
call sub_430250  +
test eax eax +
jz loc_43CC70  +
cmp eax 1 +
jnz loc_43DBD9  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_54] +
mov ecx [esp+0E8h+var_80] +
mov [eax+ecx] edx +
mov eax edx +
jmp loc_43D4DC  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+14h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_40] eax +
lea eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_409760  +
test eax eax +
jz loc_43CC70  +
mov eax [ebp+14h] +
jmp loc_43C998  +
mov eax [esp+0E8h+var_64] +
mov esi [eax+3Ch] +
test esi esi +
jz loc_43D7B6  +
mov ecx [esi+18h] +
test ecx ecx +
jnz loc_43D8C8  +
mov eax [esp+0E8h+var_64] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_43C9A0  +
mov edx [eax+18h] +
test edx edx +
jz loc_43C9A0  +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+0F0h] +
mov edi [esp+0E8h+var_5C] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_DC] edi +
call edx  +
test eax eax +
jnz loc_43C9A0  +
xor eax eax +
jmp loc_43CC72  +
mov esi [esp+0E8h+var_C4] +
mov eax [ebx+8Ch] +
mov ecx [esi+30h] +
mov ecx [ecx+edi] +
mov ecx [ecx+3Ch] +
mov ecx [ecx+88h] +
mov [eax+20h] ecx +
mov eax edx +
jmp loc_43C941  +
mov eax [esp+0E8h+var_B0] +
mov ebp [esp+0E8h+var_A8] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
sub ebx ebp +
mov eax [eax+ebx*4] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
ja loc_43D867  +
mov eax [eax+14h] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
jbe loc_43D858  +
mov byte ptr [eax+0Ch] 3 +
mov [eax+18h] esi +
mov dword ptr [eax+14h] offset off_473250 +
jmp loc_43CE74  +
mov eax [esi+18h] +
xor edx edx +
div  ebx +
imul eax [esp+0E8h+var_B4] +
lea ebx [eax+eax*2] +
shl ebx 2 +
jmp loc_43D32E  +
mov eax [ebp+3Ch] +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_D4] ebx +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] eax +
call sub_4033C0  +
test eax eax +
jnz loc_43CA30  +
jmp loc_43CC70  +
mov edi [esp+0E8h+var_60] +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+0F0h] +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E0] esi +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edi +
mov edi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] edi +
call eax  +
test eax eax +
jz loc_43CC70  +
mov ecx [esi+28h] +
xor eax eax +
test ecx ecx +
jz loc_43D90E  +
mov eax [esi+18h] +
xor edx edx +
div  ecx +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+174h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx eax +
add [esp+0E8h+var_7C] edx +
jmp loc_43D7B6  +
mov edi [ebp+4Ch] +
test edi edi +
jz loc_43CCDA  +
xor eax eax +
jmp loc_43CC72  +
and edi 3 +
jmp loc_43D2B7  +
mov [esp+0E8h+var_E4] 2656h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404040  +
mov ecx [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_38] +
mov edx [ecx] +
mov ecx [esp+0E8h+var_3C] +
mov edx [edx+1Ch] +
mov [esp+0E8h+var_A4] ecx +
mov edx [edx+0C8h] +
jmp loc_43CC95  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_43D9A2  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_43D9A2  +
mov eax [edx+1Ch] +
sub [esi+8] eax +
cmp edx offset off_473250 +
jnz loc_43D59F  +
xor eax eax +
jmp loc_43D5B4  +
lea esi [esp+0E8h+var_38] +
mov ebx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] offset a08lx_2 +
mov [esp+0E8h+var_E8] esi +
call sprintf  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] offset aErrorBContains +
mov [esp+0E8h+var_E4] eax +
call off_4733A4  +
mov [esp+0E8h+var_E8] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_43CC72  +
mov eax [edx+1Ch] +
add [esi+8] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_41C340  +
mov edx [eax+1Ch] +
sub [esi+8] edx +
mov eax [eax+88h] +
jmp loc_43D5AD  +
mov eax [ecx] +
mov esi [esp+0E8h+var_C4] +
mov [esp+0E8h+var_38] eax +
mov eax [ecx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ecx+8] +
mov [esp+0E8h+var_30] eax +
mov edx [ecx+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov edx [ecx+10h] +
mov ecx [esp+0E8h+var_AC] +
mov [esp+0E8h+var_28] edx +
mov edx [esi+30h] +
mov edx [edx+edi] +
mov esi [edx+3Ch] +
mov edx [ecx+64h] +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] ecx +
call sub_420E30  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_43CC70  +
mov [esp+0E8h+var_E4] esi +
mov esi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] esi +
call sub_424FB0  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43CC70  +
mov eax [ebp+38h] +
add [esp+0E8h+var_38] eax +
lea eax [esp+0E8h+var_38] +
mov esi [esi+7Ch] +
mov edx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_430250  +
test eax eax +
jz loc_43CC70  +
cmp eax 1 +
jnz loc_43DC20  +
mov eax [esp+0E8h+var_C4] +
add edi [eax+2Ch] +
mov eax [ebp+14h] +
mov [edi] esi +
jmp loc_43CBFC  +
mov ebp ebx +
jmp loc_43CA30  +
mov dword ptr [eax+10h] 0FFFFFFF1h +
mov [eax] esi +
jmp loc_43CE74  +
mov eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] eax +
jmp loc_43D336  +
mov eax [esp+0E8h+var_C4] +
mov edx [ebx+94h] +
mov ecx [esp+0E8h+var_B0] +
mov eax [eax] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+0E8h+var_D4] edx +
mov edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] offset aXSReferencedIn +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] ecx +
call eax  +
jmp loc_43D5FA  +
mov [esp+0E8h+var_E8] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_43CC72  +
mov [esp+0E8h+var_5C] 0 +
jmp loc_43D7A7  +
mov [esp+0E8h+var_E8] 5 +
call sub_4040F0  +
xor eax eax +
jmp loc_43CC72  +
mov eax [esp+0E8h+var_50] +
mov edx [eax+50h] +
mov eax [eax+58h] +
lea eax [eax+edx*4] +
mov edx eax +
mov [esp+0E8h+var_90] eax +
mov eax [esp+0E8h+var_B8] +
mov [esp+0E8h+var_5C] edx +
movzx eax byte ptr [eax+1ACh] +
shr al 6 +
and eax 1 +
mov [esp+0E8h+var_68] eax +
jmp loc_43D3D6  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 2893h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404070  +
mov [esp+0E8h+var_E4] 2884h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404040  +
mov eax [ebx] +
mov edx [esp+0E8h+var_38] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
jmp loc_43D6F5  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 26B6h +
mov [esp+0E8h+var_E8] offset a____Binutils_4 +
call sub_404070  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C0] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_43DC80  +
xor ebx ebx +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
test dl 1 +
jnz loc_43E689  +
mov ecx [eax+30h] +
and edx 3 +
mov eax [eax+38h] +
cmp dl 2 +
mov [esp+1F4h+var_1C4] 1 +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_198] eax +
jz loc_43DCC5  +
mov eax [esp+1F4h+var_E0] +
movsx eax byte ptr [eax+2] +
mov [esp+1F4h+var_1C4] eax +
shr [esp+1F4h+var_1C4] 1Fh +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_140] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_13C] eax +
call sub_44B170  +
test eax eax +
mov [esp+1F4h+var_138] eax +
jz loc_43DC6E  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jnz loc_43E83A  +
mov [esp+1F4h+var_134] 0 +
mov [esp+1F4h+var_130] 0 +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_12C] 0 +
mov [esp+1F4h+var_128] 0 +
mov [esp+1F4h+var_124] 0 +
mov eax [eax+4] +
mov [esp+1F4h+var_120] 0 +
mov [esp+1F4h+var_11C] 0 +
mov [esp+1F4h+var_118] 0 +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_114] 0 +
mov [esp+1F4h+var_110] 0 +
mov [esp+1F4h+var_10C] 0 +
mov ebp [eax+188h] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_108] 0 +
mov [esp+1F4h+var_1BC] 0 +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_43F3FF  +
mov [esp+1F4h+var_1A4] 0 +
lea esi [esi+0] +
test ebp ebp +
mov esi [ebx] +
jz loc_43DDD6  +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] esi +
call strcmp  +
test eax eax +
jz loc_43DDE4  +
mov edi offset a_gnu_attribute +
mov ecx 10h +
cmps   +
jnz loc_43DE2E  +
mov eax [ebx+0A0h] +
test eax eax +
jnz loc_43DDF6  +
jmp loc_43DE0C  +
mov eax [eax] +
test eax eax +
jz loc_43DE0C  +
cmp dword ptr [eax+4] 1 +
jnz loc_43DDF0  +
mov edx [eax+10h] +
mov eax [eax] +
and dword ptr [edx+14h] 0FFFFFEFFh +
test eax eax +
jnz loc_43DDF6  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44BA80  +
test eax eax +
mov [esp+1F4h+var_1BC] eax +
jnz loc_43E4F0  +
or dword ptr [ebx+14h] 8000h +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43DDC0  +
mov eax [esp+1F4h+var_E4] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_43F3FB  +
mov [esp+1F4h+var_1CC] 0 +
mov edi ebp +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1D4] 0 +
lea esi [esi+0] +
mov esi [edi+0A0h] +
mov ebp [edi+8Ch] +
mov dword ptr [edi+4Ch] 0 +
test esi esi +
jnz loc_43DEB2  +
jmp loc_43E4E0  +
cmp eax 1 +
jz loc_43E318  +
mov esi [esi] +
test esi esi +
lea esi [esi+0] +
jz loc_43DED9  +
mov eax [esi+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_43DEA0  +
add dword ptr [edi+4Ch] 1 +
mov ecx 1 +
test byte ptr [edi+19h] 4 +
jz loc_43E310  +
mov esi [esi] +
add [ebp+50h] ecx +
test esi esi +
jnz loc_43DEB2  +
mov edx [edi+4Ch] +
test edx edx +
jz loc_43E4E0  +
mov eax [edi+14h] +
or eax 4 +
mov [edi+14h] eax +
test al 1 +
jnz loc_43DEFE  +
test byte ptr [edi+18h] 1 +
jnz loc_43DEFE  +
mov dword ptr [edi+1Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_43DE80  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43DF26  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_43E6A6  +
mov eax [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_E4] +
movzx edx byte ptr [eax+1] +
mov eax 1 +
and edx 18h +
cmp dl 18h +
cmovz eax [esp+1F4h+var_1C4] +
test byte ptr [edi+2Bh] 10h +
mov [edi+7Ch] eax +
jnz loc_43E871  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_425080  +
test eax eax +
jz loc_43E65C  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+64h] +
test esi esi +
jz loc_43E02A  +
mov edi [esp+1F4h+var_E4] +
jmp loc_43DF9D  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_43E02A  +
test byte ptr [esi+14h] 4 +
mov ebx [esi+8Ch] +
jz loc_43DFDB  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_43DFC2  +
lea edx [ebx+3Ch] +
mov eax edi +
call sub_431670  +
test eax eax +
jz loc_43E65C  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_43DFDB  +
lea edx [ebx+4Ch] +
mov eax edi +
call sub_431670  +
test eax eax +
jz loc_43E65C  +
mov edx [ebx+10h] +
and edx [ebx+14h] +
mov dword ptr [ebx+40h] 0 +
mov dword ptr [ebx+50h] 0 +
cmp edx 0FFFFFFFFh +
jnz loc_43DF92  +
test byte ptr [esi+17h] 8 +
mov eax [ebx+30h] +
jz loc_43F4B6  +
test eax eax +
jnz loc_43F4B6  +
mov eax [ebx+18h] +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
test eax eax +
jz loc_43E65C  +
mov esi [esi+0Ch] +
mov [ebx+30h] eax +
test esi esi +
jnz loc_43DF9D  +
mov eax [esp+1F4h+var_E4] +
mov dword ptr [eax+7Ch] 0 +
mov eax [eax+0A0h] +
mov edi eax +
mov dword ptr [eax+4Ch] 2 +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+5] +
mov [edi+70h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
cmp [esp+1F4h+var_1B8] 13h +
mov [edi+6Ch] eax +
ja loc_43E891  +
mov eax 230h +
mov [esp+1F4h+var_1B8] 14h +
mov ecx [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_1B8] +
mov ebx [ecx+1Ch] +
mov [ebx+58h] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
mov [ebx+5Ch] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_43E65C  +
mov eax [esp+1F4h+var_E4] +
mov edx [eax+0A0h] +
cmp dword ptr [edx+214h] 0FF01h +
sbb eax eax +
not eax  +
mov [esp+1F4h+var_10C] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_43E6D0  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jnz loc_43E6D0  +
mov eax [esp+1F4h+var_1D4] +
test eax eax +
jnz loc_43ED47  +
mov ebp [esp+1F4h+var_1A8] +
test ebp ebp +
jnz loc_43ED27  +
mov edi [esp+1F4h+var_1AC] +
test edi edi +
jnz loc_43ECF2  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
imul eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
test eax eax +
mov [esp+1F4h+var_120] eax +
jz loc_43E65C  +
mov eax [esp+1F4h+var_1B8] +
lea ebx ds:0[eax*4] +
add eax ebx +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
test eax eax +
mov [esp+1F4h+var_118] eax +
jz loc_43E65C  +
mov [esp+1F4h+var_1F4] ebx +
call sub_408000  +
test eax eax +
mov [esp+1F4h+var_114] eax +
jz loc_43E65C  +
mov [esp+1F4h+var_1F4] ebx +
call sub_408000  +
test eax eax +
mov [esp+1F4h+var_110] eax +
jz loc_43E65C  +
mov esi [esp+1F4h+var_1B0] +
test esi esi +
jnz loc_43ED67  +
mov eax [esp+1F4h+var_E0] +
xor edx edx +
mov esi [eax+1Ch] +
mov ebx [esi+0C8h] +
test ebx ebx +
mov eax ebx +
jnz loc_43E1E6  +
jmp loc_43E21A  +
mov edx [eax+24h] +
test edx edx +
jnz loc_43E1DC  +
and ch 1 +
jnz loc_43E1DC  +
mov ecx [eax+0A4h] +
test ecx ecx +
jz loc_43E1DC  +
mov edx [ecx+0Ch] +
add edx [ecx+8] +
add edx [eax+1Ch] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_43E1EE  +
mov ecx [eax+14h] +
test ch 4 +
jnz loc_43E1C0  +
mov eax [esp+1F4h+var_1C0] +
mov edi [ebx+1Ch] +
cmp dword ptr [eax+1A4h] 1 +
jnz loc_43E210  +
mov ecx [ebx+40h] +
mov eax 1 +
shl eax cl +
lea edx [edx+eax-1] +
neg eax  +
and edx eax +
mov eax edx +
sub eax edi +
mov [esi+0CCh] eax +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_43E9B9  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_43E9A6  +
xor ecx ecx +
xor esi esi +
mov [esp+1F4h+var_1B8] 0 +
xor edi edi +
mov [esp+1F4h+var_1CC] ecx +
jmp loc_43E281  +
add esi 1 +
test edi edi +
jnz loc_43E2A8  +
mov ebx [ebx] +
test ebx ebx +
jz loc_43E910  +
cmp dword ptr [ebx+4] 1 +
jnz loc_43E270  +
mov ebp [ebx+10h] +
mov edx [ebp+94h] +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43E89B  +
add esi 1 +
test edi edi +
mov [esp+1F4h+var_1CC] ebp +
jz loc_43E277  +
test esi esi +
jz loc_43E277  +
mov ebx [esp+1F4h+var_1B8] +
mov ecx [esp+1F4h+var_1CC] +
test ebx ebx +
jz loc_43EC39  +
test ecx ecx +
jz loc_43EC39  +
mov edi [esp+1F4h+var_1B8] +
mov edx [ecx+94h] +
mov eax [edi+94h] +
mov [esp+1F4h+var_1E0] edx +
mov [esp+1F4h+var_1E4] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrdere +
mov [esp+1F4h+var_1F0] eax +
call off_4733A4  +
mov [esp+1F4h+var_1F4] 11h +
call sub_4040F0  +
jmp loc_43DC6E  +
add [ebp+40h] ecx +
jmp loc_43DEA9  +
mov ebx [esi+10h] +
or byte ptr [ebx+18h] 2 +
test byte ptr [ebx+16h] 80h +
cmovz eax [esp+1F4h+var_1CC] +
mov ecx [ebx+8Ch] +
mov [esp+1F4h+var_1CC] eax +
mov eax [ebp+4] +
mov [esp+1F4h+var_1C8] ecx +
cmp eax 4 +
jz loc_43E3F3  +
cmp eax 9 +
jz loc_43E3F3  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_43E4B5  +
mov ecx [ebx+4Ch] +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
cmp edx eax +
cmovnb eax edx +
mov edx [esp+1F4h+var_1D4] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_43E400  +
test ecx ecx +
jz loc_43DEA9  +
mov eax [esi+4] +
add [edi+4Ch] ecx +
cmp eax 1 +
jnz loc_43DEC6  +
mov ebx [esp+1F4h+var_1C4] +
test ebx ebx +
jz loc_43DEC6  +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+3Ch] +
test edx edx +
jz loc_43E3C7  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+40h] +
test ecx ecx +
jz loc_43E3C2  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+40h] eax +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_43DEA9  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+50h] +
test ecx ecx +
jz loc_43E3E9  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+50h] eax +
jmp loc_43DEA9  +
xor ecx ecx +
jmp loc_43E35A  +
test byte ptr [eax+29h] 8 +
jnz loc_43E381  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1B4] eax +
mov eax [eax+928h] +
test eax eax +
jz loc_43E530  +
mov eax [esp+1F4h+var_1C0] +
xor edx edx +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp+1F4h+var_1A0] eax +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+60h] +
div  [esp+1F4h+var_1A0] +
mov edx [esp+1F4h+var_1B8] +
cmp edx eax +
cmovb edx eax +
cmp eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B8] edx +
jbe loc_43E469  +
mov edx [esp+1F4h+var_1B4] +
mov edx [edx+208h] +
test edx edx +
cmovz eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B0] eax +
test byte ptr [ebx+14h] 4 +
jz loc_43E381  +
mov eax [esp+1F4h+var_1C8] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_43E88A  +
mov eax [eax+18h] +
mov edx [esp+1F4h+var_1C8] +
mov edx [edx+4Ch] +
test edx edx +
jz loc_43E493  +
add eax [edx+18h] +
mov edx [esp+1F4h+var_1A8] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1A8] eax +
mov eax [ebx+4Ch] +
mov ebx [esp+1F4h+var_1AC] +
cmp ebx eax +
cmovnb eax ebx +
mov [esp+1F4h+var_1AC] eax +
jmp loc_43E381  +
mov eax [esp+1F4h+var_1C0] +
xor ecx ecx +
mov eax [eax+0F4h] +
test eax eax +
jz loc_43E35A  +
mov ecx [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
mov ecx eax +
jmp loc_43E35A  +
mov eax [edi+14h] +
and eax 0FFFFFFFBh +
mov [edi+14h] eax +
jmp loc_43DEED  +
mov eax [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_403380  +
mov dword ptr [ebx+0A0h] 0 +
mov [esp+1F4h+var_1A4] ebx +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43DDC0  +
jmp loc_43DE35  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+68h] +
jmp loc_43E441  +
mov [esp+1F4h+var_1F4] edi +
call sub_417EE0  +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_1C8] eax +
call sub_408190  +
mov edx eax +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jz loc_43E562  +
test edx edx +
jz loc_43E65C  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] eax +
call sub_418840  +
mov edx [esp+1F4h+var_1AC] +
test eax eax +
jz loc_43E60A  +
cmp eax 1 +
jnz loc_43F32F  +
cmp dword ptr [ebp+4] 3 +
mov eax [ebp+10h] +
jz loc_43F3F1  +
mov ecx [eax+4] +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1A8] edx +
mov edx [edi+20h] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1D8] 0 +
mov [esp+1F4h+var_1DC] 0 +
mov [esp+1F4h+var_1AC] eax +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1E4] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1AC] +
call eax  +
mov edx [esp+1F4h+var_1A8] +
test eax eax +
jz loc_43F49E  +
mov eax [esp+1F4h+var_1C8] +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1E0] eax +
mov eax [ebp+8] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4033C0  +
mov edx [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1C8] eax +
call free  +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jnz loc_43EB71  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov eax [esp+1F4h+var_E4] +
xor ebx ebx +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_431820  +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E4] +
or dword ptr [ecx+28h] 800h +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
jmp loc_43DC93  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_431910 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_419ED0  +
jmp loc_43DF26  +
mov eax [edx+934h] +
lea esi [esp+1F4h+var_178] +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_1B4] +
add eax 48h +
mov [esp+1F4h+var_1F4] eax +
call sub_424320  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] offset off_4731A8 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 0 +
mov [esp+1F4h+var_16B] 0 +
mov [esp+1F4h+var_168] 0 +
mov [esp+1F4h+var_16A] 0 +
mov [esp+1F4h+var_1CC] eax +
call sub_430250  +
cmp eax 1 +
jnz loc_43E667  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 3 +
mov [esp+1F4h+var_16B] 0 +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_16A] 0 +
cmp dword ptr [eax+214h] 1 +
jbe loc_43E0F7  +
mov edi [esp+1F4h+var_E4] +
mov ebx 1 +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] edi +
call sub_423A90  +
test eax eax +
jz loc_43E824  +
mov ecx [edi+7Ch] +
mov [esp+1F4h+var_168] ebx +
mov [eax+88h] ecx +
mov ecx [esp+1F4h+var_E0] +
movzx ecx byte ptr [ecx] +
and ecx 3 +
cmp cl 2 +
jz loc_43E7FB  +
mov ecx [eax+1Ch] +
mov [esp+1F4h+var_178] ecx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call sub_430250  +
cmp eax 1 +
jnz loc_43E667  +
mov eax [edi+0A0h] +
add ebx 1 +
cmp [eax+214h] ebx +
ja loc_43E7C2  +
jmp loc_43E0F7  +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_hash +
mov [esp+1F4h+var_1F4] edi +
call sub_402D90  +
mov [esp+1F4h+var_1F0] offset a_gnu_version +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_134] eax +
call sub_402D90  +
mov [esp+1F4h+var_130] eax +
jmp loc_43DD17  +
mov [esp+1F4h+var_1F0] 2B5Fh +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_404040  +
jmp loc_43DF55  +
xor eax eax +
jmp loc_43E485  +
imul eax [esp+1F4h+var_1B8] +
jmp loc_43E082  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [edx+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_43E29D  +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1B0] edx +
call sub_424FB0  +
mov edx [esp+1F4h+var_1B0] +
test eax eax +
jz loc_43E29D  +
mov edx [edx+0A0h] +
mov ecx [edx+214h] +
cmp eax ecx +
jnb loc_43E29D  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
test byte ptr [eax+8] 80h +
jz loc_43E29D  +
cmp ecx [eax+1Ch] +
jbe loc_43E29D  +
add edi 1 +
mov [esp+1F4h+var_1B8] ebp +
jmp loc_43E273  +
test edi edi +
jz loc_43E9A6  +
shl edi 2 +
mov [esp+1F4h+var_1F4] edi +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_43DC6E  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0A0h] +
test eax eax +
jz loc_43F34B  +
nop   +
add ebx 1 +
mov [ebp+ebx*4-4] eax +
mov eax [eax] +
test eax eax +
jnz loc_43E940  +
mov [esp+1F4h+var_1E8] offset sub_430450 +
xor edi edi +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
mov edx ebp +
lea eax [ebp+ebx*4+0] +
mov [esp+1F4h+var_1CC] ebp +
mov ebx [edx] +
mov ebp 0FFFFFFFFh +
add edx 4 +
mov esi [ebx+10h] +
mov ecx [esi+40h] +
shl ebp cl +
mov ecx ebp +
and ecx edi +
mov [esi+38h] ecx +
mov [ebx+8] ecx +
add ecx [ebx+0Ch] +
cmp edx eax +
mov edi ecx +
jnz loc_43E975  +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_43E230  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
call sub_445A10  +
test eax eax +
jz loc_43DC6E  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+34h] +
test eax eax +
jz loc_43E9EC  +
and byte ptr [eax+2Bh] 0EFh +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_43E9DE  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov esi edi +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_43EDD3  +
mov eax [esp+1F4h+var_1D4] +
mov edi [eax+0A0h] +
test edi edi +
jz loc_43EDC0  +
mov ebp edi +
jmp loc_43EA65  +
sub eax 3 +
cmp eax 1 +
jbe loc_43EAC0  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_41BA40  +
test eax eax +
jz loc_43F370  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_43EDC0  +
mov eax [ebp+4] +
cmp eax 1 +
jnz loc_43EA20  +
mov eax [ebp+10h] +
mov esi [eax+94h] +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43EA2C  +
mov eax [esp+1F4h+var_1C0] +
mov edx [esi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jnz loc_43EA2C  +
test byte ptr [esi+2Bh] 10h +
jnz loc_43EA5A  +
lea eax [esp+1F4h+var_140] +
mov edx esi +
mov [esp+1F4h+var_1CC] eax +
call sub_43C500  +
test eax eax +
jz loc_43E667  +
or byte ptr [esi+2Bh] 10h +
jmp loc_43EA5A  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+8Ch] +
mov eax [ebp+10h] +
mov eax [eax] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_418D80  +
test eax eax +
mov edi eax +
jz loc_43F313  +
mov eax [ebp+10h] +
mov ecx [eax+8] +
mov [esp+1F4h+var_1CC] ecx +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_43ECDF  +
add ebx 3Ch +
mov edx [ebx+4] +
mov ecx [ebx+0Ch] +
cmp dword ptr [ebp+4] 3 +
lea ecx [ecx+edx*4] +
mov [esp+1F4h+var_1C8] ecx +
mov eax [eax+4] +
jnz loc_43EC53  +
mov eax [eax+88h] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jnz loc_43EB54  +
mov [esp+1F4h+var_1F0] 2932h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_404040  +
mov eax [esp+1F4h+var_1C8] +
mov dword ptr [eax] 0 +
mov eax [edi+24h] +
test eax eax +
jz loc_43EB71  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_43E53C  +
mov eax [ebp+8] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43EB94  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+1Ch] +
add [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1B0] +
mov ecx [eax+174h] +
movzx edx byte ptr [ecx+9] +
test dl dl +
jz loc_43EBDB  +
lea edx [edx+edx*2] +
lea eax [esp+1F4h+var_164] +
lea edx [esp+edx*4+1F4h+var_164] +
mov [esp+1F4h+var_1B0] ecx +
mov ecx [esp+1F4h+var_1C8] +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] ecx +
cmp eax edx +
jnz loc_43EBBB  +
mov ecx [esp+1F4h+var_1B0] +
cmp byte ptr [ecx+0Ah] 20h +
jz loc_43ECC7  +
mov eax [edi] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx] +
cmp dword ptr [eax+4] 9 +
mov edx [eax+30h] +
jz loc_43ECBB  +
mov eax [esp+1F4h+var_1CC] +
mov edi [ecx+44h] +
mov [esp+1F4h+var_15C] eax +
movzx eax byte ptr [ecx+4] +
imul eax [ebx+4] +
add eax edx +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edi  +
add dword ptr [ebx+4] 1 +
jmp loc_43EA5A  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrde_0 +
mov [esp+1F4h+var_1F0] eax +
call off_4733A4  +
jmp loc_43E2F9  +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 1 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4197B0  +
test eax eax +
jz loc_43F44E  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_43ED90  +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [esp+1F4h+var_1B8] 0 +
mov [ecx] eax +
jmp loc_43EB5E  +
mov edi [ecx+3Ch] +
movzx eax byte ptr [ecx+3] +
jmp loc_43EC0F  +
mov edx [esp+1F4h+var_1B8] +
movzx eax byte ptr [edi] +
shl edx 8 +
add eax edx +
mov [esp+1F4h+var_160] eax +
jmp loc_43EBEE  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_43F430  +
add ebx 4Ch +
jmp loc_43EB18  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
test eax eax +
mov [esp+1F4h+var_124] eax +
jnz loc_43E11B  +
jmp loc_43E65C  +
mov eax [esp+1F4h+var_1A8] +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
test eax eax +
mov [esp+1F4h+var_128] eax +
jnz loc_43E10F  +
jmp loc_43E65C  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
test eax eax +
mov [esp+1F4h+var_12C] eax +
jnz loc_43E103  +
jmp loc_43E65C  +
mov eax [esp+1F4h+var_1B0] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
test eax eax +
mov [esp+1F4h+var_11C] eax +
jnz loc_43E1A6  +
jmp loc_43E65C  +
mov eax [eax+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+88h] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [ecx] 0 +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
mov ecx [edx+1Ch] +
add [esp+1F4h+var_1CC] ecx +
add [esp+1F4h+var_1CC] eax +
jmp loc_43EB5E  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_43EA06  +
mov eax [esp+1F4h+var_E0] +
cmp byte ptr [eax+3] 0 +
js loc_43EE05  +
mov eax [esp+1F4h+var_E0] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_43EE05  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43F4D2  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jnz loc_43EDEE  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] offset loc_430950 +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_184] 1 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_180] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_409350  +
mov eax [esp+1F4h+var_188] +
test eax eax +
jnz loc_43DC6E  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D0h] +
test edx edx +
jz loc_43EEB1  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_43EE82  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_43EEB1  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_430250 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_43DC6E  +
mov eax [esp+1F4h+var_E4] +
mov edi [esp+1F4h+var_1B4] +
mov eax [eax+7Ch] +
mov [edi+68h] eax +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_440404  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
test eax eax +
jz loc_43F0F2  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jz loc_43F0F2  +
mov eax [eax+6Ch] +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax] 1 +
jnz loc_43EF11  +
mov ebp [ecx+34h] +
test ebp ebp +
jz loc_440413  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_160] 0 +
mov [esp+1F4h+var_15C] 0 +
mov [esp+1F4h+var_158] 3 +
mov ebp [eax+64h] +
mov [esp+1F4h+var_157] 0 +
mov [esp+1F4h+var_156] 0 +
test ebp ebp +
jz loc_43EFF3  +
mov eax [ebp+8Ch] +
mov ebx [eax+60h] +
test ebx ebx +
jle loc_43EFDE  +
mov esi [eax+5Ch] +
test esi esi +
jg loc_43EF7B  +
mov [esp+1F4h+var_1F0] 2CD3h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_404040  +
mov [esp+1F4h+var_154] esi +
sub esi 0FF00h +
cmp esi 0FFFEFFFFh +
jbe loc_43F503  +
mov eax [ebp+1Ch] +
cmp edi ebx +
cmovl edi ebx +
mov [esp+1F4h+var_164] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
mov edx [eax+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx eax byte ptr [eax+5] +
imul eax ebx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_43EF53  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov esi [ecx+0C0h] +
test esi esi +
jz loc_43F0DD  +
lea ebp [esp+1F4h+var_164] +
mov eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov eax [esi+14h] +
mov [esp+1F4h+var_160] eax +
mov eax [esi+18h] +
mov [esp+1F4h+var_15C] eax +
mov eax [esi+1Ch] +
mov dword ptr [esp+1F4h+var_158] eax +
mov eax [esi+20h] +
and [esp+1F4h+var_157] 0FCh +
mov [esp+1F4h+var_154] eax +
mov edx [esi+20h] +
mov eax [esi+4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_423A90  +
test eax eax +
mov ebx eax +
jz loc_43F08D  +
mov edx [eax+3Ch] +
mov eax [edx+8Ch] +
mov eax [eax+5Ch] +
mov [esp+1F4h+var_154] eax +
sub eax 0FF00h +
cmp eax 0FFFEFFFFh +
jbe loc_44041A  +
mov eax [ebx+38h] +
add eax [edx+1Ch] +
add eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov ecx [esp+1F4h+var_1C0] +
mov eax [esi+0Ch] +
mov edx [ecx+174h] +
cmp edi eax +
cmovl edi eax +
mov ecx [edx+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx edx byte ptr [edx+5] +
mov [esp+1F4h+var_1F0] ebp +
imul eax edx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call ecx  +
mov esi [esi] +
test esi esi +
jnz loc_43F008  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
lea edx [edi+1] +
mov eax [eax+3Ch] +
mov eax [eax+8Ch] +
mov [eax+20h] edx +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] offset loc_430950 +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov [esp+1F4h+var_184] 0 +
call sub_409350  +
mov edi [esp+1F4h+var_188] +
test edi edi +
jnz loc_43DC6E  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D4h] +
test edx edx +
jz loc_43F185  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_43F156  +
mov esi [esp+1F4h+var_1C4] +
test esi esi +
jz loc_43F185  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_430250 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_43DC6E  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B660  +
mov eax [esp+1F4h+var_140] +
mov edi [eax+1Ch] +
mov edx [edi+54h] +
test edx edx +
jz loc_43F558  +
mov eax [esp+1F4h+var_13C] +
mov ecx [eax+0A0h] +
mov ebx [ecx+90Ch] +
test ebx ebx +
jnz loc_43F1DE  +
mov [esp+1F4h+var_1F0] 2257h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_404040  +
mov eax [esp+1F4h+var_13C] +
mov edx [edi+54h] +
mov eax [eax+4] +
mov esi [eax+1B0h] +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
imul eax edx +
mov [esp+1F4h+var_1F4] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_43DC6E  +
mov ecx [esp+1F4h+var_10C] +
test ecx ecx +
jz loc_43F235  +
mov eax [esp+1F4h+var_13C] +
mov eax [eax+7Ch] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_408190  +
test eax eax +
mov [esp+1F4h+var_10C] eax +
jz loc_440451  +
mov edx [edi+54h] +
mov [esp+1F4h+var_1D4] 0 +
test edx edx +
jz loc_43F2AD  +
imul ebx [esp+1F4h+var_1D4] +
add ebx [edi+5Ch] +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jnz loc_440436  +
mov dword ptr [ebx+8] 0 +
mov eax [esi+174h] +
mov edx [esp+1F4h+var_10C] +
mov ecx [eax+24h] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [ebx+18h] +
lea edx [edx+ecx*4] +
mov [esp+1F4h+var_1E8] edx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
mov [esp+1F4h+var_1F0] ebx +
add eax ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1C8] +
call eax  +
mov edx [edi+54h] +
add [esp+1F4h+var_1D4] 1 +
cmp [esp+1F4h+var_1D4] edx +
jb loc_43F244  +
mov eax [esi+174h] +
mov esi edx +
xor edx edx +
mov ecx [esp+1F4h+var_13C] +
movzx eax byte ptr [eax+5] +
mov ebx [ecx+0A0h] +
mov [esp+1F4h+var_1E8] 0 +
imul esi eax +
mov eax [ebx+60h] +
add eax [ebx+58h] +
adc edx [ebx+5Ch] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_403BF0  +
test eax eax +
jz loc_43F51C  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
jmp loc_43DC6E  +
mov [esp+1F4h+var_1F4] 11h +
call sub_4040F0  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_43E667  +
mov [esp+1F4h+var_1EC] offset aElf_reloc_link +
mov [esp+1F4h+var_1F0] 2974h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_404070  +
mov [esp+1F4h+var_1E8] offset sub_430450 +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
jmp loc_43E99E  +
cmp dword ptr [ebp+4] 1 +
mov edi esi +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jnz loc_43E667  +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43E667  +
mov eax [esp+1F4h+var_1C0] +
mov edx [edi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jz loc_43E667  +
mov edx offset aElfclass32 +
mov ecx offset aElfclass64 +
cmp al 2 +
mov ebx ecx +
mov esi edx +
cmovnz ebx edx +
cmovnz esi ecx +
mov [esp+1F4h+var_1F4] 3 +
call sub_4040F0  +
mov [esp+1F4h+var_1E8] ebx +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov [esp+1F4h+var_1F4] offset aBFileClassSInc +
call off_4733A4  +
jmp loc_43E667  +
mov eax [eax+4] +
mov ecx [eax] +
jmp loc_43E5A6  +
mov ebx [esp+1F4h+var_1A4] +
mov [esp+1F4h+var_1A4] ebx +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1D4] 0 +
jmp loc_43DF26  +
mov [esp+1F4h+var_1F0] 292Ah +
xor ebx ebx +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_404040  +
mov eax [ebp+10h] +
jmp loc_43EB18  +
mov eax [esp+1F4h+var_E0] +
mov edx [ebp+10h] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
test eax eax +
jz loc_43E65C  +
mov [esp+1F4h+var_1B8] 0 +
jmp loc_43EB5E  +
mov [esp+1F4h+var_1F4] edx +
call free  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_43E667  +
mov [esp+1F4h+var_1EC] offset aBfd_elf_final_ +
mov [esp+1F4h+var_1F0] 2B7Eh +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_404070  +
mov eax [ebx+0A0h] +
mov eax [eax+24Ch] +
test eax eax +
jz loc_43EDFB  +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+24Ch] 0 +
jmp loc_43EDFB  +
mov eax [esp+1F4h+var_E4] +
call sub_430210  +
test eax eax +
jnz loc_43EF94  +
jmp loc_43DC6E  +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] ebp +
mov [esp+1F4h+var_1EC] eax +
call sub_403A90  +
cmp esi eax +
jnz loc_43F2F4  +
add [ebx+60h] esi +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+7Ch] +
test eax eax +
jnz loc_4400A0  +
mov eax [esp+1F4h+var_E4] +
mov edi [eax+64h] +
test edi edi +
jz loc_43F5F4  +
test byte ptr [edi+14h] 4 +
mov ebx [edi+8Ch] +
jz loc_43F5ED  +
mov eax [esp+1F4h+var_1C0] +
mov esi 1 +
mov eax [eax+0F8h] +
test eax eax +
jz loc_43F5A6  +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov esi eax +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_43F5C6  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+3Ch] +
mov ecx esi +
call sub_471D3E  +
test eax eax +
jz loc_43DC6E  +
mov ebp [ebx+4Ch] +
test ebp ebp +
jz loc_43F5E6  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+4Ch] +
mov ecx esi +
call sub_471D3E  +
test eax eax +
jz loc_43DC6E  +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_43F578  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_43F82B  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+4] 2 +
jz loc_43F6F5  +
mov esi [esp+1F4h+var_198] +
test esi esi +
jz loc_43F6F5  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov [esp+1F4h+var_1F0] offset a_rela_dyn +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_402CB0  +
mov [esp+1F4h+var_1F0] offset a_rel_dyn +
mov ebx eax +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_402CB0  +
test ebx ebx +
mov edi eax +
jz loc_43FEEB  +
mov eax [ebx+24h] +
test eax eax +
mov [esp+1F4h+var_1AC] eax +
jz loc_43FEEB  +
test edi edi +
jz loc_43FED2  +
mov eax [edi+24h] +
test eax eax +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
jnz loc_43FA23  +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+4] +
mov ecx [esp+1F4h+var_1AC] +
mov edi [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+40h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+44h] +
mov [esp+1F4h+var_1A8] eax +
test ebx ebx +
jz loc_43F6F5  +
xor edx edx +
cmp dword ptr [ebx+4] 1 +
jnz loc_43F6E7  +
mov eax [ebx+10h] +
add edx [eax+24h] +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43F6DB  +
cmp edx ecx +
jz loc_43FA67  +
xor edi edi +
xor ebp ebp +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_402D90  +
test eax eax +
mov ebx eax +
jnz loc_43F727  +
mov [esp+1F4h+var_1F0] 2D73h +
mov [esp+1F4h+var_1F4] offset a____Binutils_4 +
call sub_404040  +
mov esi [ebx+6Ch] +
mov eax [ebx+24h] +
add eax esi +
cmp esi eax +
mov [esp+1F4h+var_1C4] eax +
jnb loc_43F82B  +
mov eax [esp+1F4h+var_1C0] +
lea ecx [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] ecx +
mov [esp+1F4h+var_1B4] edi +
mov edx [eax+174h] +
mov ebx eax +
mov edi [esp+1F4h+var_1D4] +
mov eax [edx+30h] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov eax [esp+1F4h+var_164] +
cmp eax 12h +
jbe loc_43FE48  +
cmp eax 20h +
jz loc_43FE3E  +
jbe loc_43FD63  +
cmp eax 6FFFFFF0h +
jz loc_43FD59  +
ja loc_43FD04  +
cmp eax 21h +
jz loc_43FC90  +
cmp eax 6FFFFEF5h +
mov edx offset a_gnu_hash +
jnz loc_43FD1B  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1C8] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_402CB0  +
mov edx [esp+1F4h+var_1C8] +
test eax eax +
jz loc_43FD38  +
mov ecx [eax+3Ch] +
mov ecx [ecx+8Ch] +
cmp dword ptr [ecx+4] 7 +
jz loc_43FB78  +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
mov edi [esp+1F4h+var_1D4] +
mov eax [eax+34h] +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov edx [ebx+174h] +
movzx eax byte ptr [edx+6] +
add esi eax +
cmp [esp+1F4h+var_1C4] esi +
ja loc_43F756  +
mov edi [esp+1F4h+var_198] +
test edi edi +
jz loc_43F917  +
mov edi [esp+1F4h+var_E0] +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+9Ch] +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
jz loc_43E667  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+3] +
test al 8 +
jz loc_43F87B  +
mov edi [esp+1F4h+var_E0] +
test byte ptr [edi] 1 +
jnz loc_43F87F  +
test al 10h +
jz loc_43F8F2  +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_402D90  +
test eax eax +
jz loc_43F8F2  +
mov ebx [eax+6Ch] +
mov esi [eax+24h] +
add esi ebx +
cmp ebx esi +
jnb loc_43F8F2  +
mov eax [esp+1F4h+var_1C0] +
lea edi [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] edi +
mov eax [eax+174h] +
mov edi [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_198] +
mov eax [eax+30h] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
cmp [esp+1F4h+var_164] 16h +
jz loc_4402CC  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
add ebx edx +
cmp esi ebx +
ja loc_43F8B8  +
mov eax [esp+1F4h+var_198] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_43F917  +
mov ebx [esp+1F4h+var_E0] +
mov ecx [ebp+14h] +
test ch 1 +
jnz loc_4402F1  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_43F904  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44028B  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov edx [eax+0A0h] +
test edx edx +
jz loc_43F95E  +
sub eax 0FFFFFF80h +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44EB10  +
test eax eax +
jz loc_43E667  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_445B00  +
test eax eax +
jz loc_43E667  +
mov eax [esp+1F4h+var_E4] +
mov ebx 1 +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_431820  +
mov eax [esp+1F4h+var_E4] +
mov ebp [esp+1F4h+var_1A4] +
mov eax [eax+0A0h] +
test ebp ebp +
mov eax [eax+934h] +
mov dword ptr [eax+38h] 1 +
jz loc_43DC70  +
mov edi [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F4] edi +
call sub_408000  +
test eax eax +
mov esi eax +
jz loc_43DC6E  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] eax +
call sub_44BAC0  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E0] edi +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] eax +
call sub_4033C0  +
mov [esp+1F4h+var_1F4] esi +
call free  +
jmp loc_43DC70  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1C4] eax +
test eax eax +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jz loc_440216  +
mov ebx [esp+1F4h+var_1C4] +
mov ebp 1 +
xor ecx ecx +
mov [esp+1F4h+var_1A8] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_4401CD  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43FA4E  +
mov edi [esp+1F4h+var_1A8] +
jmp loc_44021D  +
mov eax [esp+1F4h+var_1B4] +
lea eax [eax+eax*2-3] +
lea eax ds:14h[eax*4] +
mov [esp+1F4h+var_1D4] eax +
mov eax edx +
xor edx edx +
div  [esp+1F4h+var_1C4] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jz loc_43F6F5  +
imul eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_408190  +
test eax eax +
mov [esp+1F4h+var_1B4] eax +
jz loc_43FC23  +
mov eax [esp+1F4h+var_1C8] +
mov ecx 0FFFFFF00h +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovz ebx ecx +
mov ecx [edi+0A0h] +
mov [esp+1F4h+var_1AC] ebx +
test ecx ecx +
jz loc_43FAE6  +
mov [esp+1F4h+var_1A0] edi +
mov ebp ecx +
cmp dword ptr [ebp+4] 1 +
jz loc_43FB9A  +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_43FAD1  +
mov edi [esp+1F4h+var_1A0] +
mov eax [esp+1F4h+var_1D4] +
xor ebp ebp +
mov ebx [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1E8] offset sub_42FF10 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] ebx +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx ebx +
cmp dword ptr [ecx+4] 1 +
jnz loc_43FD82  +
add ebp 1 +
add ecx [esp+1F4h+var_1D4] +
cmp ebp [esp+1F4h+var_1B8] +
jnz loc_43FB0E  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1E8] offset sub_42FF70 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
sub eax ebp +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx [edi+0A0h] +
test ecx ecx +
jz loc_43FB67  +
mov esi ecx +
mov ecx edi +
cmp dword ptr [esi+4] 1 +
jz loc_43FDDD  +
mov esi [esi] +
test esi esi +
jnz loc_43FB55  +
mov edi ecx +
mov eax [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_43F6F9  +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] offset aWarningSecti_0 +
call off_4733A4  +
mov [esp+1F4h+var_1F4] 0Fh +
call sub_4040F0  +
jmp loc_43E667  +
mov esi [ebp+10h] +
mov ebx [esi+6Ch] +
test ebx ebx +
jz loc_43FC70  +
mov eax [esi+38h] +
xor edx edx +
mov ecx [esi+24h] +
div  [esp+1F4h+var_1C4] +
add ecx ebx +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx ecx +
jnb loc_43FADB  +
lea edi [eax+8] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1B0] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+10Ch] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] esi +
call eax  +
mov ecx [esp+1F4h+var_19C] +
add ebx [esp+1F4h+var_1C4] +
mov [edi-4] eax +
mov eax [esp+1F4h+var_1AC] +
mov [edi-8] eax +
add edi [esp+1F4h+var_1D4] +
cmp ecx ebx +
ja loc_43FBCA  +
jmp loc_43FADB  +
mov eax [esp+1F4h+var_E0] +
xor ebp ebp +
mov edi [esp+1F4h+var_E4] +
mov eax [eax+18h] +
mov eax [eax+14h] +
mov [esp+1F4h+var_1E8] edi +
mov edi [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F4] edi +
xor edi edi +
mov [esp+1F4h+var_1F0] offset aNotEnoughMemor +
call eax  +
jmp loc_43F6F9  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_43FADB  +
mov eax [esp+1F4h+var_1B4] +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_43F6F9  +
mov ecx offset a_preinit_array +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1C8] ecx +
mov [esp+1F4h+var_1F4] eax +
call sub_402CB0  +
mov ecx [esp+1F4h+var_1C8] +
test eax eax +
mov edi eax +
jz loc_43FCE3  +
mov edx [eax+24h] +
test edx edx +
jnz loc_43FCD1  +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1F4] offset aWarningSSectio +
call off_4733A4  +
mov edx [edi+24h] +
mov [esp+1F4h+var_160] edx +
mov eax [ebx+174h] +
jmp loc_43F7FD  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_4733A4  +
jmp loc_43E667  +
cmp eax 6FFFFFFCh +
jz loc_43FD2E  +
cmp eax 6FFFFFFEh +
mov edx offset a_gnu_version_r +
jz loc_43F7B7  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
mov esi ecx +
jmp loc_43F821  +
mov edx offset a_gnu_version_d +
jmp loc_43F7B7  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_4733A4  +
jmp loc_43E667  +
mov edx offset a_gnu_version +
jmp loc_43F7B7  +
cmp eax 1Ah +
jz loc_43FDC9  +
jbe loc_43FDB6  +
cmp eax 1Bh +
lea esi [esi+0] +
jz loc_43FDD3  +
cmp eax 1Ch +
mov ecx offset a_fini_array +
jz loc_43FC95  +
jmp loc_43FD1B  +
cmp [esp+1F4h+var_1B8] ebp +
jbe loc_43FB25  +
mov esi ebp +
mov edx ecx +
mov ebx ecx +
mov eax [ebx+0Ch] +
xor eax [edx+0Ch] +
test [esp+1F4h+var_1AC] eax +
cmovnz edx ebx +
add esi 1 +
mov eax [edx+8] +
mov [ebx] eax +
add ebx [esp+1F4h+var_1D4] +
cmp esi [esp+1F4h+var_1B8] +
jnz loc_43FD92  +
jmp loc_43FB25  +
cmp eax 19h +
mov edx offset a_init_array +
jz loc_43F7B7  +
jmp loc_43FD1B  +
mov edx offset a_fini_array +
jmp loc_43F7B7  +
mov ecx offset a_init_array +
jmp loc_43FC95  +
mov eax [esi+10h] +
xor edx edx +
mov ebx [eax+6Ch] +
mov edi [eax+24h] +
mov eax [eax+38h] +
add edi ebx +
div  [esp+1F4h+var_1C4] +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx edi +
jnb loc_43FB5F  +
add eax 8 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1B8] ecx +
mov [esp+1F4h+var_1EC] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1A8] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
add ebx [esp+1F4h+var_1C4] +
add eax [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_1B8] +
cmp edi ebx +
ja loc_43FE05  +
jmp loc_43FB5F  +
mov edx offset a_preinit_array +
jmp loc_43F7B7  +
cmp eax 11h +
jnb loc_43FFFB  +
cmp eax 6 +
jz loc_43FFE8  +
ja loc_43FF4A  +
cmp eax 4 +
jz loc_43FF40  +
lea esi [esi+0] +
ja loc_43FF36  +
test eax eax +
jnz loc_43FD1B  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
test ebp ebp +
jz loc_43FD27  +
cmp [esp+1F4h+var_1C4] ecx +
jbe loc_43FD27  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp eax 4 +
jz loc_43FF29  +
cmp eax 9 +
jnz loc_43FD27  +
mov [esp+1F4h+var_164] 6FFFFFFAh +
mov [esp+1F4h+var_160] ebp +
mov eax edx +
xor ebp ebp +
jmp loc_43F7FD  +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jmp loc_43F6B7  +
test edi edi +
jz loc_43F6F7  +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_43F6F5  +
mov eax [esp+1F4h+var_1C8] +
mov ebx [edi+0A0h] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+3] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+38h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+3Ch] +
mov [esp+1F4h+var_1A8] eax +
jmp loc_43F6D5  +
mov [esp+1F4h+var_164] 6FFFFFF9h +
jmp loc_43FEC2  +
mov edx offset a_dynstr +
jmp loc_43F7B7  +
mov edx offset a_hash +
jmp loc_43F7B7  +
cmp eax 0Ch +
jz loc_44050A  +
jbe loc_43FFF2  +
cmp eax 0Dh +
lea esi [esi+0] +
jnz loc_43FD1B  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+4Ch] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E4] 1 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_419760  +
test eax eax +
jz loc_43FD1B  +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-3] +
cmp dl 1 +
ja loc_43FD1B  +
mov ecx [eax+18h] +
mov [esp+1F4h+var_160] ecx +
mov edx [eax+14h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_44006A  +
add ecx [eax+1Ch] +
mov eax [edx+38h] +
add eax ecx +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
jmp loc_43F7FD  +
mov edx offset a_dynsym +
jmp loc_43F7B7  +
cmp eax 8 +
ja loc_43FD1B  +
mov ecx [esp+1F4h+var_E4] +
lea edx [eax-11h] +
cmp edx 2 +
mov [esp+1F4h+var_160] 0 +
sbb edi edi +
and edi 5 +
mov edx [ecx+0A0h] +
add edi 4 +
mov ecx [edx+214h] +
cmp ecx 1 +
mov [esp+1F4h+var_1B8] ecx +
jbe loc_44005F  +
mov edx [edx+40h] +
lea ecx [edx+4] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [esp+1F4h+var_1B8] +
lea ecx [edx+ecx*4] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov edx [ecx] +
cmp [edx+4] edi +
jz loc_440080  +
add [esp+1F4h+var_1C8] 4 +
mov ecx [esp+1F4h+var_1B8] +
cmp [esp+1F4h+var_1C8] ecx +
jnz loc_440045  +
mov eax [ebx+174h] +
jmp loc_43F7FD  +
mov [esp+1F4h+var_160] 0 +
mov eax [ebx+174h] +
jmp loc_43F7FD  +
test byte ptr [edx+8] 2 +
jz loc_440050  +
cmp eax 8 +
jz loc_440094  +
cmp eax 12h +
jnz loc_440519  +
mov edx [edx+18h] +
add [esp+1F4h+var_160] edx +
jmp loc_440050  +
mov edi [esp+1F4h+var_1B4] +
xor ebx ebx +
mov [esp+1F4h+var_1D0] ebx +
mov ecx [edi+60h] +
mov ebx [edi+5Ch] +
mov [esp+1F4h+var_1D4] ecx +
mov ecx [edi+58h] +
mov edi [esp+1F4h+var_E4] +
add [esp+1F4h+var_1D4] ecx +
adc [esp+1F4h+var_1D0] ebx +
mov esi [edi+0A0h] +
mov ebx [esi+208h] +
test ebx ebx +
jz loc_4400E0  +
mov edx [ebx] +
test edx edx +
jnz loc_44045E  +
mov eax [esp+1F4h+var_138] +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov dword ptr [esi+0C4h] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_44B4E0  +
mov edx [esp+1F4h+var_1D0] +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
mov [esi+0D0h] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
lea eax [esi+0B8h] +
mov [esp+1F4h+var_1F4] eax +
call sub_424320  +
mov edi [esp+1F4h+var_E4] +
mov ecx [edi+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [esi+0C8h] +
mov [ecx+24h] edx +
mov edx [esi+0CCh] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_403BF0  +
test eax eax +
jnz loc_43DC6E  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B590  +
test eax eax +
jnz loc_43F56A  +
jmp loc_43DC6E  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_44053B  +
div  edi +
test edx edx +
jz loc_43FA58  +
mov eax ebp +
xor eax 1 +
test cl al +
jnz loc_44025E  +
mov ecx 1 +
mov ebp 1 +
jmp loc_43FA58  +
mov ebp 1 +
xor ecx ecx +
mov eax [edi+0A0h] +
test eax eax +
mov [esp+1F4h+var_1A8] eax +
jz loc_440245  +
mov ebx eax +
mov [esp+1F4h+var_1A0] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_440557  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_440231  +
mov edi [esp+1F4h+var_1A0] +
test ecx ecx +
jnz loc_4405AE  +
mov ebx [esp+1F4h+var_1C4] +
jmp loc_43F6B7  +
test ecx ecx +
jz loc_440600  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_4733A4  +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] 5 +
call sub_4040F0  +
jmp loc_43F6F9  +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_41F980 +
mov [esp+1F4h+var_164] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_4032D0  +
mov ecx [esp+1F4h+var_164] +
test ecx ecx +
jnz loc_43E667  +
jmp loc_43F92C  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+3] 10h +
jz loc_440390  +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPXReadOnlySegm +
call eax  +
jmp loc_43F8F2  +
mov eax [ebp+24h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_43F910  +
mov eax [ebp+3Ch] +
cmp eax offset off_473250 +
jz loc_43F910  +
and ecx 100000h +
jz loc_43F910  +
mov ecx [ebx+1Ch] +
cmp [ecx+0A0h] ebp +
jz loc_43F910  +
cmp [ecx+0A4h] ebp +
jz loc_43F910  +
mov esi [ebp+0] +
mov ecx 8 +
mov edi offset a_dynstr +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_4403AB  +
mov edi [esp+1F4h+var_1D4] +
mov ecx [ebp+6Ch] +
mov [esp+1F4h+var_1E0] edi +
mov edi [ebp+38h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1E8] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_4033C0  +
test eax eax +
jnz loc_43F910  +
jmp loc_43E667  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPWarningCreati +
call eax  +
jmp loc_43F8F2  +
mov eax [eax+8Ch] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_403BF0  +
test eax eax +
jnz loc_43E667  +
mov eax [ebx+1Ch] +
mov eax [eax+50h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B590  +
test eax eax +
jnz loc_43F910  +
jmp loc_43E667  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
jmp loc_43F0F2  +
xor edi edi +
jmp loc_43EFF3  +
mov eax [esp+1F4h+var_E4] +
call sub_430210  +
test eax eax +
jz loc_43DC6E  +
mov edx [ebx+3Ch] +
jmp loc_43F07D  +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_44B4F0  +
mov [ebx+8] eax +
jmp loc_43F25F  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
jmp loc_43DC6E  +
lea esi ds:0[eax*4] +
mov edx [esp+1F4h+var_1D0] +
mov eax [esp+1F4h+var_1D4] +
mov dword ptr [ebx+4] 12h +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [ebx+24h] 4 +
mov [ebx+18h] esi +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] ebx +
call sub_424320  +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+10h] +
mov [esp+1F4h+var_1D0] edx +
mov edx [ebx+14h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_403BF0  +
test eax eax +
jnz loc_43DC6E  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_10C] +
mov [esp+1F4h+var_1F4] eax +
call sub_403A90  +
cmp eax esi +
jnz loc_43DC6E  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+0A0h] +
jmp loc_4400E0  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+48h] +
jmp loc_43FF70  +
mov ecx [esp+1F4h+var_160] +
mov edx [edx+0Ch] +
test ecx ecx +
jz loc_44052F  +
cmp ecx edx +
jbe loc_440050  +
mov [esp+1F4h+var_160] edx +
jmp loc_440050  +
div  edi +
test edx edx +
jnz loc_440597  +
mov eax ebp +
test cl al +
jnz loc_44025E  +
mov ecx 1 +
xor ebp ebp +
jmp loc_43FA58  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_4405F2  +
div  edi +
test edx edx +
jz loc_44023B  +
test ebp ebp +
jz loc_4405C3  +
mov ecx 1 +
mov ebp 1 +
jmp loc_44023B  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSor_0 +
mov [esp+1F4h+var_1F0] eax +
jmp loc_440270  +
test ebp ebp +
jnz loc_44024D  +
mov ebx [esp+1F4h+var_1A8] +
mov ecx [esp+1F4h+var_1B0] +
jmp loc_43FF0E  +
test ecx ecx +
jz loc_440588  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_4733A4  +
mov [esp+1F4h+var_1F4] 5 +
call sub_4040F0  +
jmp loc_43F6F9  +
div  edi +
test edx edx +
jnz loc_440597  +
test ebp ebp +
jnz loc_440256  +
mov ecx 1 +
xor ebp ebp +
jmp loc_44023B  +
***
mov eax [esp+10h] +
mov edx [esp+4] +
mov ecx [esp+14h] +
test eax eax +
jz loc_440647  +
movzx edx byte ptr [eax+0Ch] +
cmp dl 3 +
jb loc_440644  +
cmp dl 4 +
jbe loc_440640  +
cmp dl 5 +
jnz loc_440644  +
mov eax [eax+14h] +
mov eax [eax+4] +
retn   +
***
mov eax [eax+14h] +
retn   +
***
xor eax eax +
retn   +
***
mov ecx [ecx+10h] +
mov eax [edx+94h] +
mov [esp+8] ecx +
mov [esp+4] eax +
jmp sub_423A90  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
mov ecx [ebp+20h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_14] eax +
mov eax [ebp+4] +
mov edx [eax+4] +
shr edx cl +
test edx edx +
jz loc_4407D1  +
cmp edx [ebp+14h] +
jb loc_440710  +
mov ecx [ebp+1Ch] +
sub edx [ebp+18h] +
mov ebx [ecx+edx*4] +
test ebx ebx +
jnz loc_4406B8  +
jmp loc_4407E7  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_4406B5  +
mov ecx [ebx+3Ch] +
or byte ptr [ebx+34h] 20h +
test ecx ecx +
jz loc_4406D3  +
or byte ptr [ecx+34h] 20h +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_4406E3  +
sub edx 1 +
cmp dl 1 +
jbe loc_440736  +
mov [esp+2Ch+arg_10] 0 +
mov [esp+2Ch+arg_C] ebx +
mov [esp+2Ch+arg_8] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+arg_4] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+arg_0] eax +
mov eax [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov ecx [ebp+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_4406A3  +
mov [esp+2Ch+arg_10] ebx +
mov [esp+2Ch+arg_C] 0 +
jmp loc_4406EF  +
mov esi [ebx+4] +
mov ecx 8 +
mov edi offset a__start_ +
mov [esp+2Ch+var_10] esi +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_4407C8  +
mov esi [esp+2Ch+var_10] +
mov ecx 7 +
mov edi offset a__stop_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_4406E3  +
mov esi [esp+2Ch+var_10] +
add esi 7 +
test esi esi +
jz loc_4406E3  +
cmp byte ptr [esi] 0 +
jz loc_4406E3  +
mov edi [esp+2Ch+var_20] +
mov edi [edi+34h] +
test edi edi +
jz loc_4406E3  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edi +
call sub_402CB0  +
test eax eax +
jz loc_4407B6  +
test byte ptr [eax+18h] 8 +
jz loc_4407DB  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_4407A0  +
mov eax [ebp+4] +
jmp loc_4406E3  +
mov esi [esp+2Ch+var_10] +
add esi 8 +
jmp loc_440780  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+var_14] +
mov dword ptr [esi] 1 +
jmp loc_4407D3  +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_1C] +
mov eax [eax+18h] +
mov edx [esi+94h] +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] offset aFPCorruptInput +
call eax  +
xor eax eax +
jmp loc_4407D3  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+8Ch] +
or byte ptr [ebx+18h] 8 +
mov eax [eax+7Ch] +
test eax eax +
jz loc_440836  +
test byte ptr [eax+18h] 8 +
jz loc_4409B0  +
mov eax [ebx+94h] +
test byte ptr [ebx+14h] 4 +
mov eax [eax+0A0h] +
mov esi [eax+248h] +
jz loc_4408F0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_4408F0  +
cmp ebx esi +
jz loc_440940  +
mov edx [esp+5Ch+arg_0] +
lea ebp [esp+5Ch+var_34] +
mov ecx ebx +
mov eax ebp +
call sub_435520  +
test eax eax +
jz loc_440A18  +
mov eax [esp+5Ch+var_30] +
cmp [esp+5Ch+var_2C] eax +
jbe loc_440A25  +
mov [esp+5Ch+var_44] esi +
mov edi [esp+5Ch+arg_8] +
mov esi [esp+5Ch+arg_0] +
jmp loc_4408B5  +
mov eax [esp+5Ch+var_30] +
add eax 0Ch +
cmp [esp+5Ch+var_2C] eax +
mov [esp+5Ch+var_30] eax +
jbe loc_440A21  +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
call sub_440A40  +
test eax eax +
jnz loc_4408A0  +
mov esi [esp+5Ch+var_44] +
xor ecx ecx +
xor edi edi +
mov byte ptr [esp+5Ch+var_44] 0 +
mov edx ebx +
mov eax ebp +
mov [esp+5Ch+var_40] ecx +
call sub_42EFB0  +
mov ecx [esp+5Ch+var_40] +
jmp loc_440901  +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
cmp byte ptr [esp+5Ch+var_44] 0 +
jnz loc_440940  +
mov eax [ebx+8Ch] +
test cl cl +
mov edx [eax+84h] +
jz loc_440933  +
test edx edx +
jz loc_440933  +
test byte ptr [edx+18h] 8 +
mov eax 1 +
jz loc_4409F0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8Ch] +
mov edx [eax+80h] +
test edx edx +
jz loc_4409E0  +
mov edx [esp+5Ch+arg_0] +
mov ecx esi +
xor edi edi +
lea eax [esp+5Ch+var_34] +
call sub_435520  +
xor ecx ecx +
test eax eax +
jz loc_440908  +
lea eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_443DA0  +
mov edx esi +
test eax eax +
setnz cl  +
lea eax [esp+5Ch+var_34] +
movzx edi cl +
mov [esp+5Ch+var_44] ecx +
call sub_42EFB0  +
mov ecx [esp+5Ch+var_44] +
jmp loc_440908  +
mov edi [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_5C] eax +
call sub_440810  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_440836  +
jmp loc_44092B  +
mov ecx 1 +
mov edi 1 +
jmp loc_44090E  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_440810  +
test eax eax +
setnz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor edi edi +
jmp loc_440908  +
mov esi [esp+5Ch+var_44] +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
jmp loc_4408DA  +
***
push ebx  +
sub esp 30h +
lea eax [esp+30h+var_4] +
mov esi [esp+30h+arg_0] +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_C] +
mov edi [esp+30h+arg_8] +
mov [esp+30h+var_4] 0 +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] eax +
call sub_440660  +
test eax eax +
mov ebx eax +
jnz loc_440AA6  +
jmp loc_440AE0  +
or byte ptr [ebx+18h] 8 +
mov eax [esp+30h+var_4] +
test eax eax +
jz loc_440AE0  +
mov eax [ebx+94h] +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_402CF0  +
test eax eax +
mov ebx eax +
jz loc_440AE0  +
test byte ptr [ebx+18h] 8 +
jnz loc_440A86  +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_440A82  +
test byte ptr [eax+29h] 8 +
jnz loc_440A82  +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_440810  +
test eax eax +
jnz loc_440A86  +
xor eax eax +
jmp loc_440AE5  +
mov eax 1 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+34h] +
test eax eax +
mov [esp+14h] eax +
jnz loc_440B26  +
jmp loc_440CB3  +
mov eax [esp+14h] +
mov eax [eax+9Ch] +
test eax eax +
mov [esp+14h] eax +
jz loc_440CB3  +
mov eax [esp+14h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_440B10  +
mov eax [esp+14h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+18h] eax +
jz loc_440B10  +
xor ebx ebx +
xor edx edx +
jmp loc_440B70  +
or byte ptr [eax+18h] 8 +
test ebx ebx +
jnz loc_440B8B  +
and ch 20h +
jz loc_440B69  +
mov esi [eax] +
mov edi offset a_debug_line_ +
mov ecx 0Ch +
cmps   +
setz bl  +
movzx ebx bl +
mov eax [eax+0Ch] +
test eax eax +
jz loc_440B97  +
mov ecx [eax+14h] +
test ecx 100000h +
jnz loc_440B48  +
test byte ptr [eax+18h] 8 +
mov esi 1 +
cmovnz edx esi +
test ebx ebx +
jz loc_440B50  +
mov eax [eax+0Ch] +
mov ebx 1 +
test eax eax +
jnz loc_440B70  +
test edx edx +
mov [esp+1Ch] ebx +
jz loc_440B10  +
mov ebp [esp+18h] +
xor esi esi +
jmp loc_440BD1  +
test ah 20h +
jnz loc_440BB9  +
test al 7 +
jnz loc_440BCA  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_440CC0  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_440C28  +
mov eax [ebp+14h] +
test eax 2000000h +
jz loc_440BB0  +
mov eax [ebp+8Ch] +
mov ebx 1 +
mov ecx 1 +
mov edi [eax+7Ch] +
mov eax edi +
mov edx [eax+14h] +
mov eax [eax+8Ch] +
test dh 20h +
mov eax [eax+7Ch] +
cmovz ebx esi +
and edx 7 +
cmovnz ecx esi +
cmp edi eax +
jnz loc_440BF0  +
or ebx ecx +
jz loc_440BCA  +
or byte ptr [eax+18h] 8 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp edi eax +
jnz loc_440C10  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_440BD1  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_440B10  +
mov ebp [esp+18h] +
test byte ptr [ebp+14h] 10h +
jz loc_440CA7  +
test byte ptr [ebp+18h] 8 +
jnz loc_440CA7  +
mov eax [ebp+0] +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
mov ebx [esp+18h] +
mov esi eax +
lea esi [esi+0] +
test byte ptr [ebx+18h] 8 +
jz loc_440CA0  +
test byte ptr [ebx+15h] 20h +
jz loc_440CA0  +
mov edi [ebx] +
mov [esp] edi +
call strlen  +
cmp esi eax +
jnb loc_440CA0  +
mov ecx [esp+1Ch] +
sub eax esi +
lea edx [edi+eax] +
mov [esp+8] esi +
mov [esp] edx +
mov [esp+4] ecx +
call strncmp  +
test eax eax +
jnz loc_440CA0  +
and byte ptr [ebx+18h] 0F7h +
nop   +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_440C60  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_440C38  +
jmp loc_440B10  +
***
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
or byte ptr [ebp+18h] 8 +
jmp loc_440BCA  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
movzx eax byte ptr [ebx+0Ch] +
mov ecx [esi+78h] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_440CF7  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+33h] +
test dl 4 +
jnz loc_440D39  +
test dl 2 +
jnz loc_440D10  +
and edx 0Ah +
jnz loc_440CEC  +
cmp al 3 +
jnz loc_440CEC  +
nop   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_440CEC  +
movzx eax byte ptr [esi] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jbe loc_440D66  +
movzx eax byte ptr [ebx+34h] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_440D4E  +
mov eax [ebx+14h] +
or dword ptr [eax+14h] 200000h +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+4] +
mov eax [esi+7Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_41C7A0  +
test eax eax +
jz loc_440D39  +
jmp loc_440CEC  +
***
test al 10h +
jnz loc_440D2B  +
test byte ptr [ebx+34h] 10h +
nop   +
jz loc_440CEC  +
test ecx ecx +
jz loc_440CEC  +
mov edx [ebx+4] +
mov eax [ecx+10h] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
mov [esp+8] edx +
call eax  +
test eax eax +
jnz loc_440D2B  +
jmp loc_440CEC  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov ebx [esi+40h] +
test ebx ebx +
jnz loc_440DB8  +
jmp loc_440E10  +
mov ebx [ebx] +
test ebx ebx +
jz loc_440E10  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esi+1Ch] +
mov [esp] eax +
call sub_419760  +
test eax eax +
jz loc_440DB2  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_440DB2  +
mov eax [eax+14h] +
cmp eax offset off_473250 +
jz loc_440DB2  +
mov ebx [ebx] +
or dword ptr [eax+14h] 200000h +
test ebx ebx +
jnz loc_440DB8  +
lea esi [esi+0] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+64h] +
mov ebp [eax+34h] +
test ebp ebp +
jnz loc_440E45  +
jmp loc_440ED2  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_440ED2  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_440E37  +
mov edx [esp+64h] +
mov ecx ebp +
lea eax [esp+18h] +
call sub_42EEC0  +
test eax eax +
jz loc_440ED7  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_440E77  +
jmp loc_440E37  +
***
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_440E37  +
mov esi [ebx] +
mov edi offset a_eh_frame_en_0 +
mov ecx 0Fh +
cmps   +
jnz loc_440E70  +
mov edx [esp+64h] +
mov ecx ebp +
mov [esp] ebx +
lea eax [esp+18h] +
call sub_435480  +
test eax eax +
jz loc_440E70  +
lea eax [esp+18h] +
mov [esp+8] eax +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4426F0  +
mov eax [esp+18h] +
test eax eax +
jz loc_440E70  +
mov edx [ebx+8Ch] +
cmp eax [edx+68h] +
jz loc_440E70  +
mov [esp] eax +
call free  +
jmp loc_440E70  +
***
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+70h] +
mov edi [esp+74h] +
mov dword ptr [esp+20h] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1AEh] 1 +
mov [esp+18h] eax +
jz loc_440F16  +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_440F30  +
mov dword ptr [esp] offset aWarningGcSecti +
call off_4733A4  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+18h] +
mov eax [eax+0B4h] +
mov [esp] edi +
call eax  +
mov eax [edi+1Ch] +
mov ebp [edi+34h] +
mov [esp+1Ch] eax +
movzx eax byte ptr [edi+3] +
and eax 6 +
cmp al 4 +
jz loc_440FFD  +
test ebp ebp +
jz loc_440FFD  +
lea esi [esp+28h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] ebp +
call sub_402CB0  +
test eax eax +
mov ebx eax +
jnz loc_440FD5  +
jmp loc_440FE4  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] ebp +
call sub_442850  +
mov eax [ebx+8Ch] +
mov eax [eax+88h] +
test eax eax +
jz loc_440FB6  +
test byte ptr [ebx+16h] 10h +
jnz loc_440FB6  +
mov eax [ebp+0A0h] +
mov [eax+248h] ebx +
mov edx ebx +
mov eax esi +
call sub_42EFB0  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call sub_402CF0  +
test eax eax +
mov ebx eax +
jz loc_440FE4  +
mov ecx ebx +
mov edx edi +
mov eax esi +
call sub_435520  +
test eax eax +
jnz loc_440F80  +
movzx eax byte ptr [edi+3] +
mov ebp [ebp+9Ch] +
and eax 6 +
cmp al 4 +
jz loc_440FFD  +
test ebp ebp +
jnz loc_440F64  +
mov eax [esp+1Ch] +
lea ebx [esp+20h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_42EC70 +
mov [esp] eax +
call sub_419ED0  +
mov eax [esp+20h] +
test eax eax +
jnz loc_44102B  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_435590 +
mov [esp] esi +
call sub_419ED0  +
mov eax [esp+20h] +
test eax eax +
jz loc_441021  +
mov eax [esi+30h] +
test eax eax +
jnz loc_4412EF  +
mov esi [edi+34h] +
mov eax [esp+18h] +
test esi esi +
mov ebx [eax+0BCh] +
jz loc_44110D  +
mov [esp+1Ch] ebx +
mov ebp esi +
mov ebx [esp+70h] +
jmp loc_441085  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_441109  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_441077  +
mov ecx [esp+18h] +
mov edx [ebx+4] +
mov ecx [ecx+74h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
test eax eax +
jz loc_441077  +
mov esi [ebp+64h] +
test esi esi +
jnz loc_4410C7  +
lea esi [esi+0] +
jmp loc_441077  +
***
mov eax [esi+8Ch] +
cmp dword ptr [eax+4] 7 +
jz loc_441100  +
nop   +
mov esi [esi+0Ch] +
test esi esi +
jz loc_441077  +
test byte ptr [esi+18h] 8 +
jnz loc_4410C0  +
mov eax [esi+14h] +
test ah 80h +
jnz loc_4410C0  +
test eax 200000h +
jz loc_4410B2  +
mov eax [esp+1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [esp+8] eax +
call sub_440810  +
test eax eax +
jnz loc_4410C0  +
xor eax eax +
jmp loc_441023  +
***
mov eax [eax+7Ch] +
test eax eax +
jnz loc_4410C0  +
jmp loc_4410DC  +
***
mov ebx [esp+1Ch] +
mov eax [esp+18h] +
mov eax [eax+0C0h] +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
mov eax [esp+70h] +
mov esi [edi+34h] +
mov eax [eax+4] +
test esi esi +
mov eax [eax+1B0h] +
mov [esp+18h] eax +
mov ebp [eax+0C4h] +
jnz loc_441151  +
jmp loc_4412A9  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_4412A9  +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_441143  +
mov ecx [esp+18h] +
mov edx [ecx+74h] +
mov ecx [esp+70h] +
mov ecx [ecx+4] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test eax eax +
jz loc_441143  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_441240  +
jmp loc_441143  +
***
test ebp ebp +
jz loc_441235  +
mov eax [ebx+14h] +
test al 4 +
nop   +
jz loc_441235  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_441235  +
test byte ptr [edi+1] 8 +
jz loc_4411B0  +
test ah 20h +
jnz loc_441235  +
cmp dword ptr [ebx+3Ch] offset off_473250 +
jz loc_441235  +
movzx eax byte ptr [edi+2] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp] edx +
mov [esp+10h] eax +
mov [esp+4] ebx +
call sub_435230  +
test eax eax +
mov edx eax +
jz loc_441021  +
mov eax [ebx+94h] +
mov [esp+1Ch] edx +
mov [esp+0Ch] edx +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call ebp  +
mov ecx [ebx+8Ch] +
mov edx [esp+1Ch] +
cmp edx [ecx+68h] +
jz loc_44122D  +
mov [esp] edx +
mov [esp+1Ch] eax +
call free  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_441021  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_441143  +
mov edx [ebx+14h] +
test edx 2000000h +
jz loc_441267  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
movzx ecx byte ptr [eax+18h] +
movzx eax byte ptr [ebx+18h] +
and ecx 8 +
and eax 0FFFFFFF7h +
or eax ecx +
mov [ebx+18h] al +
test byte ptr [ebx+18h] 8 +
jnz loc_441235  +
test dh 80h +
jnz loc_441235  +
or dh 80h +
mov [ebx+14h] edx +
test byte ptr [edi+5] 10h +
jz loc_441182  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_441182  +
mov eax [ebx] +
mov [esp+4] esi +
mov dword ptr [esp] offset aRemovingUnused +
mov [esp+8] eax +
call off_4733A4  +
jmp loc_441182  +
***
mov eax [esp+18h] +
mov [esp+28h] edi +
mov eax [eax+0DCh] +
mov dword ptr [esp+4] offset sub_42FFB0 +
mov [esp+2Ch] eax +
lea eax [esp+28h] +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_419ED0  +
mov eax [esp+70h] +
lea ecx [esp+24h] +
mov edx edi +
call sub_42F2B0  +
mov eax 1 +
jmp loc_440F28  +
***
mov eax [esp+18h] +
mov eax [eax+0B8h] +
mov [esp+8] edi +
mov [esp+4] eax +
mov eax [esp+1Ch] +
mov [esp] eax +
call sub_419ED0  +
jmp loc_441056  +
***
push ebp  +
xor edx edx +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov esi [esp+34h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov ecx [edi+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+60h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
jnz loc_441360  +
sub eax [ecx+68h] +
mov ecx [ecx+218h] +
lea edx [ecx+eax*4] +
cmp ecx edx +
jnz loc_441377  +
jmp loc_4413B0  +
add ecx 4 +
cmp edx ecx +
jz loc_4413B0  +
mov ebx [ecx] +
test ebx ebx +
jz loc_441370  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_441370  +
cmp [ebx+14h] esi +
jnz loc_441370  +
cmp [ebx+18h] ebp +
jnz loc_441370  +
mov eax [ebx+44h] +
test eax eax +
jz loc_4413DF  +
mov edx [esp+38h] +
test edx edx +
jz loc_441400  +
mov edi [esp+38h] +
mov [eax+8] edi +
mov eax 1 +
jmp loc_4413D7  +
mov [esp+0Ch] ebp +
mov [esp+8] esi +
mov [esp+4] edi +
mov dword ptr [esp] offset aBALuNoSymbolFo +
call off_4733A4  +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_406370  +
test eax eax +
mov [ebx+44h] eax +
jnz loc_441399  +
xor eax eax +
jmp loc_4413D7  +
***
mov dword ptr [eax+8] 0FFFFFFFFh +
mov eax 1 +
jmp loc_4413D7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov esi [esp+48h] +
mov ebx [esp+4Ch] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax [esi+44h] +
test eax eax +
jz loc_441502  +
cmp [eax] ebx +
ja loc_4414E5  +
mov edx 1 +
movzx edi cl +
mov eax [eax+4] +
shl edx cl +
cmp byte ptr [esi+0Ch] 1 +
mov [esp+14h] edi +
lea edi [edx+ebx] +
jz loc_44146E  +
mov edi [esi+2Ch] +
lea ebp [edx+ebx] +
cmp ebx edi +
cmovnb edi ebp +
lea edi [edi+edx-1] +
neg edx  +
and edi edx +
mov edx edi +
shr edx cl +
test eax eax +
mov [esp+18h] ecx +
lea edx ds:4[edx*4] +
jz loc_441530  +
sub eax 4 +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+1Ch] edx +
call sub_408090  +
test eax eax +
mov ebp eax +
jz loc_441525  +
mov eax [esi+44h] +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+4] 0 +
shr eax cl +
lea eax ds:4[eax*4] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp] eax +
call memset  +
mov eax [esi+44h] +
add ebp 4 +
mov ecx [esp+14h] +
mov [eax+4] ebp +
mov [eax] edi +
jmp loc_4414EB  +
mov ebp [eax+4] +
movzx ecx cl +
shr ebx cl +
mov eax 1 +
mov dword ptr [ebp+ebx*4+0] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edx +
mov [esp+14h] ecx +
call sub_406370  +
mov ecx [esp+14h] +
test eax eax +
mov [esi+44h] eax +
jnz loc_441441  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] edx +
call sub_408190  +
test eax eax +
mov ebp eax +
jnz loc_4414D4  +
xor eax eax +
jmp loc_441527  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+48h] +
mov eax [eax+8Ch] +
mov eax [eax+8] +
mov [esp+1Ch] eax +
mov eax [esp+44h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4415A0  +
mov edx [eax] +
mov ecx [esp+1Ch] +
xor eax eax +
and ecx edx +
cmp ecx edx +
jnz loc_441592  +
mov eax [esp+44h] +
mov ecx [esp+1Ch] +
test [eax+4] ecx +
setz al  +
movzx eax al +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov eax [eax+30h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [esp+44h] +
mov ebx [eax+8] +
test ebx ebx +
jz loc_4416AE  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_4415FD  +
mov edx [ebx] +
test edx edx +
jz loc_44166D  +
mov ecx [esp+14h] +
or eax ecx +
cmp edx 1 +
cmovnz eax ecx +
mov [esp+14h] eax +
mov dword ptr [ebx+8] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_44168F  +
mov eax [edi+108h] +
test eax eax +
jz loc_441613  +
mov edx [ebx+4] +
mov [esp] edx +
call eax  +
test eax eax +
jnz loc_4415D1  +
mov esi [ebx+4] +
xor ebp ebp +
mov eax ds:off_48C240[ebp*8] +
mov [esp] esi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_441660  +
add ebp 1 +
cmp ebp 0Ch +
jnz loc_441618  +
mov eax [ebx+8] +
test eax eax +
jnz loc_4415F2  +
mov eax [esp+40h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] esi +
mov dword ptr [esp] offset aUnrecognizedIn +
call eax  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx] +
test eax eax +
jnz loc_441676  +
mov eax ds:dword_48C244[ebp*8] +
or [esp+18h] eax +
jmp loc_4415EB  +
***
cmp eax 1 +
jnz loc_4415EB  +
mov eax ds:dword_48C244[ebp*8] +
or [esp+14h] eax +
jmp loc_4415EB  +
***
mov edx [esp+18h] +
mov ebp [esp+14h] +
mov eax [esp+44h] +
or edx [eax] +
mov dword ptr [eax+0Ch] 1 +
or [eax+4] ebp +
mov [eax] edx +
jmp loc_441575  +
***
xor ebp ebp +
xor edx edx +
jmp loc_441697  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_4] +
cmp [eax+30h] ecx +
jz loc_4416F9  +
mov [esp+3Ch+var_38] 32FAh +
mov [esp+3Ch+var_3C] offset a____Binutils_4 +
call sub_404040  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
xor eax eax +
cmp dword ptr [edx+28h] 1 +
jz loc_441710  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_20] +
xor ebp ebp +
test byte ptr [eax+1ADh] 1 +
jz loc_441828  +
mov eax [esp+3Ch+arg_4] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_441741  +
jmp loc_4417F7  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_4417F0  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_441733  +
mov eax [ebx+0A0h] +
mov esi [eax+21Ch] +
test esi esi +
jz loc_441733  +
mov ecx [eax+928h] +
test ecx ecx +
jz loc_4417E0  +
mov ecx [esp+3Ch+var_20] +
mov eax [eax+60h] +
mov edx [ecx+174h] +
movzx edi byte ptr [edx+5] +
xor edx edx +
div  edi +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_24] +
test edx edx +
jz loc_441733  +
xor edi edi +
jmp loc_4417CD  +
mov eax [esp+3Ch+var_20] +
mov ecx [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_0] +
mov [esi+edi*4] ebp +
mov eax [eax+180h] +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] edx +
call eax  +
add ebp eax +
add edi 1 +
cmp edi [esp+3Ch+var_24] +
jz loc_441733  +
mov eax [esi+edi*4] +
test eax eax +
jg loc_441790  +
mov dword ptr [esi+edi*4] 0FFFFFFFFh +
jmp loc_4417C0  +
mov eax [eax+68h] +
mov [esp+3Ch+var_24] eax +
jmp loc_44177D  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] offset sub_42ED30 +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] eax +
call sub_419ED0  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+17Ch] +
jmp loc_441723  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
mov [esp+4] esi +
call sub_4416C0  +
test eax eax +
jnz loc_441865  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+24h] esi +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_43DC40  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 5Ch +
mov esi [esp+74h] +
test byte ptr [esi+4] 1 +
jnz loc_44189C  +
mov eax [esi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_4418A6  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_stab +
mov [esp] eax +
call sub_402CB0  +
test eax eax +
jz loc_441977  +
mov ebx [eax+0A0h] +
mov dword ptr [esp+1Ch] 0 +
test ebx ebx +
jz loc_441980  +
mov ebp 1 +
jmp loc_4418EE  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_441980  +
mov edi [ebx+24h] +
test edi edi +
jz loc_4418E0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_4418E0  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
add ax 0FF80h +
jnz loc_4418E0  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_4418E0  +
mov ecx ebx +
mov edx esi +
lea eax [esp+28h] +
call sub_435520  +
test eax eax +
jz loc_441B10  +
mov eax [ebx+8Ch] +
lea ecx [esp+28h] +
mov eax [eax+88h] +
mov [esp+10h] ecx +
mov dword ptr [esp+0Ch] offset sub_42EDA0 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_44E670  +
mov edx ebx +
test eax eax +
mov eax [esp+1Ch] +
cmovnz eax ebp +
mov [esp+1Ch] eax +
lea eax [esp+28h] +
call sub_42EFB0  +
jmp loc_4418E0  +
***
mov dword ptr [esp+1Ch] 0 +
nop   +
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_441A40  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] eax +
call sub_402CB0  +
test eax eax +
jz loc_441A40  +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_441A40  +
lea ebp [esp+28h] +
jmp loc_4419CA  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_441A40  +
mov edx [ebx+24h] +
test edx edx +
jz loc_4419C0  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_4419C0  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_435520  +
test eax eax +
jz loc_441B10  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_442850  +
mov [esp+10h] ebp +
mov dword ptr [esp+0Ch] offset sub_42EDA0 +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_443E40  +
mov edx ebx +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax ebp +
call sub_42EFB0  +
jmp loc_4419C0  +
***
mov ebx [esi+34h] +
test ebx ebx +
jz loc_441AC6  +
lea ebp [esp+28h] +
jmp loc_441A5A  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_441AC6  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_441A50  +
mov edi [eax+1B0h] +
mov eax [edi+110h] +
test eax eax +
jz loc_441A50  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_42EEC0  +
test eax eax +
jz loc_441B10  +
mov eax [edi+110h] +
mov [esp+8] esi +
mov [esp+4] ebp +
mov [esp] ebx +
call eax  +
mov edx [ebx+0A0h] +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax [esp+34h] +
test eax eax +
jz loc_441A50  +
cmp eax [edx+78h] +
jz loc_441A50  +
mov [esp] eax +
call free  +
jmp loc_441A50  +
***
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_441B1A  +
test al al +
mov ebx [esp+1Ch] +
jz loc_44189C  +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 2 +
jz loc_44189C  +
mov eax [esp+70h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_444500  +
test eax eax +
mov eax 1 +
cmovnz ebx eax +
jmp loc_44189C  +
***
mov ebx 0FFFFFFFFh +
jmp loc_44189C  +
***
mov [esp] esi +
call sub_443BD0  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jmp loc_441AD1  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
cmp dword ptr [ebx+3Ch] offset off_473250 +
jz loc_441B5C  +
mov ebp [ebx+14h] +
test ebp 20000h +
jz loc_441B5C  +
mov eax [ebx+8Ch] +
mov esi [eax+78h] +
test esi esi +
jz loc_441B66  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
mov [esp+14h] edx +
mov edx ebp +
and edx 2000000h +
mov [esp+10h] edx +
jz loc_441C85  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_441C85  +
mov eax [eax+8Ch] +
mov edx [eax+74h] +
test edx edx +
jz loc_441C85  +
mov [esp] edx +
call sub_41BF60  +
mov edi [eax+0Ch] +
mov [esp+18h] eax +
test edi edi +
jz loc_441E85  +
mov [esp+44h] ebx +
mov esi edi +
mov ebx ebp +
mov [esp+1Ch] edi +
mov ebp [esp+14h] +
jmp loc_441BCD  +
mov esi [esi] +
test esi esi +
jz loc_441CD0  +
mov edi [esi+4] +
mov eax [edi+14h] +
xor eax ebx +
test eax 2000000h +
jnz loc_441BFE  +
mov ecx [esp+10h] +
test ecx ecx +
jnz loc_441E60  +
mov eax [edi] +
mov [esp] ebp +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_441D9B  +
mov eax [edi+94h] +
test byte ptr [eax+2Ah] 20h +
jz loc_441BC3  +
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_41C030  +
test eax eax +
jz loc_441B5C  +
mov edx [esp+10h] +
test edx edx +
jz loc_441C7B  +
mov eax [ebx+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_441C7B  +
mov ecx [esi+4] +
mov eax [edx+8Ch] +
mov dword ptr [edx+3Ch] offset off_473250 +
mov [edx+7Ch] ecx +
mov eax [eax+7Ch] +
cmp eax edx +
jnz loc_441C77  +
jmp loc_441C7B  +
mov [eax+7Ch] ecx +
mov dword ptr [eax+3Ch] offset off_473250 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax edx +
jz loc_441C7B  +
test eax eax +
jnz loc_441C60  +
mov eax 1 +
jmp loc_441B5E  +
***
mov esi [esp+14h] +
mov ecx 0Eh +
mov edi offset a_gnu_linkonc_1 +
mov edx [esp+14h] +
cmps   +
setnbe cl  +
setb al  +
cmp cl al +
jnz loc_441B9A  +
mov eax edx +
mov esi edx +
add eax 0Eh +
mov dword ptr [esp+4] 2Eh +
mov [esp] eax +
call strchr  +
lea edx [eax+1] +
test eax eax +
cmovz edx esi +
jmp loc_441B9A  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov ebx [esp+44h] +
test eax eax +
jz loc_441D27  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_441CFE  +
mov edx [eax+8Ch] +
mov esi [edx+7Ch] +
cmp esi eax +
jz loc_441E1C  +
mov eax [esp+18h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41BF90  +
test eax eax +
jz loc_441DE4  +
xor eax eax +
cmp dword ptr [ebx+3Ch] offset off_473250 +
setz al  +
jmp loc_441B5E  +
***
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jz loc_441D4A  +
mov eax [eax+8Ch] +
mov ecx [eax+7Ch] +
test ecx ecx +
jz loc_441D4A  +
mov eax [ecx+8Ch] +
mov esi [eax+7Ch] +
cmp esi ecx +
jz loc_441DC0  +
mov edi [edi] +
test edi edi +
jnz loc_441D27  +
mov esi [esp+14h] +
mov edi offset a_gnu_linkonc_2 +
mov ecx 10h +
cmps   +
jnz loc_441CFE  +
mov eax [esp+18h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_441CFE  +
mov ebp 10h +
mov [esp+44h] ebx +
mov edx [eax+4] +
test byte ptr [edx+17h] 2 +
jnz loc_441D8C  +
mov esi [edx] +
mov edi offset a_gnu_linkonc_3 +
mov ecx ebp +
cmps   +
jz loc_441DFC  +
mov eax [eax] +
test eax eax +
jnz loc_441D76  +
mov ebx [esp+44h] +
jmp loc_441CFE  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_41C030  +
test eax eax +
jnz loc_441C7B  +
jmp loc_441B5C  +
***
mov ecx [esp+48h] +
mov edx ebx +
mov eax esi +
call sub_42F5C0  +
test eax eax +
jz loc_441D4A  +
mov dword ptr [ebx+3Ch] offset off_473250 +
mov [ebx+7Ch] esi +
jmp loc_441D50  +
***
mov eax [esp+48h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_li_0 +
call eax  +
jmp loc_441D16  +
***
mov eax [esp+40h] +
cmp [edx+94h] eax +
mov ebx [esp+44h] +
jz loc_441CFE  +
mov dword ptr [ebx+3Ch] offset off_473250 +
jmp loc_441CFE  +
***
test edi edi +
jnz loc_441E2F  +
jmp loc_441CFE  +
***
mov edi [edi] +
test edi edi +
jz loc_441CFE  +
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jnz loc_441E25  +
mov ecx [esp+48h] +
mov edx esi +
call sub_42F5C0  +
test eax eax +
jz loc_441E25  +
mov eax [edi+4] +
mov dword ptr [esi+3Ch] offset off_473250 +
mov [esi+7Ch] eax +
mov dword ptr [ebx+3Ch] offset off_473250 +
jmp loc_441CFE  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_41C030  +
test eax eax +
jnz loc_441C32  +
jmp loc_441B5C  +
***
cmp dword ptr [esp+10h] 0 +
jnz loc_441CE0  +
jmp loc_441D50  +
***
mov eax [esp+4] +
cmp dword ptr [eax+10h] 0FFFFFFF2h +
setz al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFF2h +
retn   +
***
mov eax offset off_473100 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_441F10  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+28h] +
mov eax [esp+20h] +
call sub_431980  +
test eax eax +
jz loc_441F06  +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_402D90  +
test eax eax +
mov ebx eax +
jz loc_441F06  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_441F06  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_441F70  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+30h] +
mov eax [esp+2Ch] +
call sub_431980  +
test eax eax +
mov edi eax +
jz loc_441F67  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_402D90  +
test eax eax +
mov ebx eax +
jz loc_441FA6  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_441F67  +
***
mov eax [esi+14h] +
mov [esp+4] edi +
and eax 1 +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 10410Bh +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_403090  +
test eax eax +
mov ebx eax +
jz loc_441F9B  +
cmp dword ptr [esp+30h] 1 +
mov edx [eax+8Ch] +
sbb eax eax +
and eax 5 +
add eax 4 +
mov [edx+4] eax +
mov eax [esp+28h] +
mov [ebx+40h] eax +
jmp loc_441F9B  +
***
sub esp 3Ch +
mov eax [esp+48h] +
mov edx [esp+44h] +
movzx ecx byte ptr [eax+30h] +
mov [edx+30h] cl +
movzx ecx byte ptr [eax+32h] +
movzx eax byte ptr [eax+31h] +
mov [edx+32h] cl +
lea ecx [esp+1Ch] +
mov [esp+29h] al +
mov eax [esp+40h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 14h +
call sub_42FD70  +
add esp 3Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+4] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_4420B0  +
mov dword ptr [esp+4] 3519h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
mov eax [edi+174h] +
mov eax [eax+44h] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+3] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_442130  +
mov dword ptr [esp+4] 3524h +
mov dword ptr [esp] offset a____Binutils_4 +
call sub_404040  +
mov eax [edi+174h] +
mov eax [eax+3Ch] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [eax] +
mov [esp+4+var_4] ecx +
mov ebx edi +
jmp loc_44216E  +
lea esi [ebx+1] +
mov [eax] esi +
movzx ecx byte ptr [ebx] +
test cl cl +
jns loc_442180  +
mov ebx esi +
cmp edx ebx +
ja loc_442160  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4+var_4] +
movzx ebp cl +
cmp edi ebx +
mov [eax] ebp +
jb loc_442192  +
jmp loc_4421A9  +
mov ebp eax +
sub ebx 1 +
movzx eax byte ptr [ebx] +
mov edx [esp+4+var_4] +
shl ebp 7 +
and eax 7Fh +
or eax ebp +
cmp ebx edi +
mov [edx] eax +
jnz loc_442190  +
add esp 4 +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov ecx eax +
xor eax eax +
test bl 2 +
jnz loc_442206  +
mov eax [ecx+0Ch] +
cmp eax 4 +
jz loc_442206  +
test bl 1 +
jz loc_442208  +
shr bl 2 +
and ebx 1 +
test byte ptr [ecx+5] 10h +
jz loc_4421FA  +
add ebx 1 +
lea ecx [ebx+edx-1] +
add eax ebx +
add eax ecx +
neg edx  +
and eax edx +
pop ebx  +
retn   +
shr bl 2 +
and ebx 1 +
lea ecx [ebx+edx-1] +
neg edx  +
add eax ecx +
and eax edx +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax] +
cmp edx eax +
jbe loc_442270  +
lea edi [eax+1] +
mov [ebx] edi +
movzx ebp byte ptr [eax] +
mov edx ebp +
and edx 0FFFFFFC0h +
mov [esp+18h+var_15] dl +
movzx edx dl +
cmp [esp+18h+var_15] 0 +
cmovz edx ebp +
cmp edx 0C0h +
ja loc_442270  +
jmp ds:off_48C300[edx*4]  +
mov eax esi +
sub eax edi +
cmp ecx eax +
jbe loc_442398  +
mov [ebx] esi +
nop   +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
sub edx edi +
cmp edx 7 +
jbe loc_44226C  +
add eax 9 +
mov [ebx] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+18h+var_8] +
mov edx esi +
mov eax ebx +
call sub_442150  +
test eax eax +
jz loc_442270  +
mov edx [ebx] +
mov ecx esi +
mov eax [esp+18h+var_8] +
sub ecx edx +
cmp eax ecx +
ja loc_44226C  +
add eax edx +
mov [ebx] eax +
mov eax 1 +
jmp loc_442272  +
add eax 2 +
add esi 1 +
jmp loc_4422E5  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_44228E  +
cmp eax esi +
jnz loc_4422D8  +
jmp loc_442270  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_442305  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_4422A0  +
cmp eax ecx +
jnz loc_4422F8  +
jmp loc_442270  +
cmp esi edi +
jz loc_44226C  +
add eax 2 +
mov [ebx] eax +
mov eax 1 +
jmp loc_442272  +
mov edx esi +
sub edx edi +
cmp edx 1 +
jbe loc_44226C  +
add eax 3 +
mov [ebx] eax +
mov eax 1 +
jmp loc_442272  +
mov edx esi +
sub edx edi +
cmp edx 3 +
jbe loc_44226C  +
add eax 5 +
mov [ebx] eax +
mov eax 1 +
jmp loc_442272  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_442375  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_44238F  +
cmp eax ecx +
jnz loc_442368  +
jmp loc_442270  +
add edx 1 +
mov [ebx] edx +
cmp byte ptr [edx-1] 0 +
jns loc_44228E  +
cmp esi edx +
ja loc_442380  +
jmp loc_442270  +
add ecx edi +
mov eax 1 +
mov [ebx] ecx +
jmp loc_442272  +
***
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov edx [eax+3Ch] +
mov ecx [eax+38h] +
mov eax [esp+arg_4] +
add ecx [edx+1Ch] +
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov ebx [eax+3Ch] +
mov edx [eax+38h] +
mov eax 0FFFFFFFFh +
add edx [ebx+1Ch] +
xor ebx ebx +
cmp ecx edx +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [ecx+8] +
mov ebx [esp+28h+arg_4] +
lea edx [eax+eax*2] +
mov eax [ebx] +
lea eax [eax+edx*4] +
cmp eax [ebx+8] +
mov [ebx+4] eax +
jnb loc_442470  +
mov edx [ecx+0Ch] +
add edx [ecx+10h] +
cmp [eax] edx +
jb loc_442449  +
jmp loc_442470  +
mov edx [ebx+4] +
lea eax [edx+0Ch] +
cmp [ebx+8] eax +
mov [ebx+4] eax +
jbe loc_442470  +
mov eax [ebp+0Ch] +
add eax [ebp+10h] +
cmp [edx+0Ch] eax +
jnb loc_442470  +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_20] eax +
call sub_440A40  +
test eax eax +
jnz loc_442430  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov eax [ebp+4] +
cmp [ebx+4] eax +
jz loc_4424A3  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
cmp [ebx] eax +
jnz loc_442499  +
movzx eax word ptr [ebp+8] +
cmp [ebx+8] ax +
jnz loc_442499  +
lea eax [ebp+0Ah] +
lea esi [ebx+0Ah] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] esi +
call strcmp  +
test eax eax +
jnz loc_442499  +
mov edi offset unk_48C604 +
mov ecx 3 +
cmps   +
setnbe dl  +
setb al  +
sub edx eax +
movsx edi dl +
test edi edi +
jz loc_442499  +
mov eax [ebp+20h] +
xor edi edi +
cmp [ebx+20h] eax +
jnz loc_442499  +
mov eax [ebp+24h] +
cmp [ebx+24h] eax +
jnz loc_442499  +
mov eax [ebp+28h] +
cmp [ebx+28h] eax +
jnz loc_442499  +
mov eax [ebp+2Ch] +
cmp [ebx+2Ch] eax +
jnz loc_442499  +
lea eax [ebp+30h] +
mov [esp+24h+var_20] eax +
lea eax [ebx+30h] +
mov [esp+24h+var_1C] 8 +
mov [esp+24h+var_24] eax +
call memcmp  +
test eax eax +
mov edi eax +
jnz loc_44257A  +
mov eax [ebx+38h] +
mov edx [eax] +
mov eax [ebp+38h] +
mov eax [eax] +
mov eax [eax+3Ch] +
cmp [edx+3Ch] eax +
jnz loc_442499  +
mov eax [ebp+3Ch] +
cmp [ebx+3Ch] eax +
jnz loc_442499  +
movzx eax byte ptr [ebx+3Fh] +
cmp al 32h +
ja loc_442499  +
add ebp 41h +
add ebx 41h +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_20] ebp +
mov [esp+24h+var_24] ebx +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
mov edi eax +
jmp loc_442499  +
xor edi edi +
jmp loc_442499  +
***
jmp sub_442590  +
***
mov eax 1 +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
ja loc_4425B7  +
jb loc_4425C0  +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
mov edx [edx+4] +
sbb ebx ebx +
cmp [ecx+4] edx +
cmovbe eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
cmp ecx 4 +
mov ebx [esp+18h+arg_0] +
jz loc_442628  +
cmp ecx 8 +
jz loc_442615  +
cmp ecx 2 +
jz loc_442602  +
mov [esp+18h+var_14] 0C1h +
mov [esp+18h+var_18] offset a____Binutil_25 +
call sub_404040  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_442660  +
mov eax [eax+38h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
test ebx ebx +
mov eax [eax] +
jz loc_442650  +
mov eax [eax+20h] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_442640  +
mov eax [eax+2Ch] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+28h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+1Ch] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax+34h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
***
mov ebx [esp+18h+arg_0] +
cmp ebx 4 +
jz loc_4426D0  +
cmp ebx 8 +
jz loc_4426B3  +
cmp ebx 2 +
jz loc_4426A0  +
mov [esp+18h+var_14] 0D2h +
mov [esp+18h+var_18] offset a____Binutil_25 +
call sub_404040  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+3Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+24h] +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] 0 +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+30h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov edx [esp+14h+arg_8] +
mov ecx [ebx+24h] +
mov esi [eax+1Ch] +
mov eax 1 +
test ecx ecx +
jz loc_44273D  +
test word ptr [ebx+18h] 380h +
jnz loc_44273D  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_442727  +
cmp ecx offset off_473250 +
jz loc_44273D  +
mov eax [edx+4] +
cmp eax [edx+8] +
jz loc_44273B  +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jnz loc_442743  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_432F50  +
test eax eax +
jz loc_44273B  +
mov edx [eax+8Ch] +
mov [edx+84h] ebx +
mov edx [eax+3Ch] +
test edx edx +
jz loc_44277A  +
cmp edx offset off_473250 +
jz loc_442820  +
movzx edx word ptr [ebx+18h] +
and dx 0FC7Fh +
or dh 3 +
mov [ebx+18h] dx +
mov edx [ebx+8Ch] +
mov [edx+88h] eax +
mov edx [esi+0A8h] +
cmp edx [esi+0B0h] +
jz loc_4427C1  +
mov eax [esi+0B4h] +
lea ecx [edx+1] +
mov [esi+0A8h] ecx +
mov [eax+edx*4] ebx +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test edx edx +
jnz loc_4427F7  +
mov dword ptr [esi+0ACh] 1 +
mov dword ptr [esi+0B0h] 2 +
mov [esp+14h+var_14] 8 +
call sub_408000  +
mov [esi+0B4h] eax +
test eax eax +
jz loc_44282C  +
mov edx [esi+0A8h] +
jmp loc_4427AA  +
lea eax [edx+edx] +
mov [esi+0B0h] eax +
mov eax [esi+0B4h] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_408090  +
mov [esi+0B4h] eax +
jmp loc_4427EB  +
or dword ptr [ebx+14h] 8000h +
jmp loc_44277A  +
mov [esp+14h+var_10] 1F6h +
mov [esp+14h+var_14] offset a____Binutil_25 +
call sub_404040  +
mov eax [esi+0B4h] +
jmp loc_4427EF  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_4] +
mov ebp [esp+7Ch+arg_8] +
mov edi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_20] 0 +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_64] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_44288A  +
test word ptr [ebp+18h] 380h +
jz loc_442892  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+3Ch] offset off_473250 +
jz loc_44288A  +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call sub_403610  +
test eax eax +
jz loc_4429C0  +
cmp dword ptr [ebp+24h] 3 +
jbe loc_4428D4  +
mov eax [edi+4] +
mov edx [esp+7Ch+var_20] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_442A16  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
mov eax [eax+11Ch] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call eax  +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_4429C0  +
mov eax [esp+7Ch+var_20] +
mov ebx [ebp+24h] +
mov [esp+7Ch+var_1C] eax +
add ebx eax +
cmp eax ebx +
jz loc_443721  +
mov edx ebx +
sub edx eax +
cmp edx 3 +
mov [esp+7Ch+var_5C] 1 +
mov [esp+7Ch+var_60] 0 +
jbe loc_4429BC  +
mov [esp+7Ch+arg_8] ebp +
mov esi eax +
mov ebp [esp+7Ch+var_5C] +
jmp loc_442983  +
lea ecx [eax+4] +
mov [esp+7Ch+var_1C] ecx +
mov ecx [edi+4] +
mov ecx [ecx+28h] +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ecx ebx +
cmp eax 1 +
mov eax [esp+7Ch+var_1C] +
adc [esp+7Ch+var_60] 0 +
sub esi 4 +
sub ecx eax +
cmp esi ecx +
ja loc_4429B5  +
add esi eax +
cmp ebx esi +
mov [esp+7Ch+var_1C] esi +
jz loc_442A40  +
mov eax ebx +
add ebp 1 +
sub eax esi +
cmp eax 3 +
jbe loc_4429B5  +
lea eax [esi+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_442D39  +
test eax eax +
jz loc_442A40  +
mov eax [esp+7Ch+var_1C] +
mov ecx ebx +
sub ecx eax +
cmp ecx 3 +
ja loc_442940  +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] ebx +
mov eax [esp+7Ch+arg_4] +
xor esi esi +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_20] +
test eax eax +
jz loc_4429FE  +
mov [esp+7Ch+var_7C] eax +
call free  +
test esi esi +
jz loc_44288A  +
mov [esp+7Ch+var_7C] esi +
call free  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+8] +
cmp [eax+4] edx +
jnz loc_4428D4  +
mov eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_44288A  +
mov eax ebp +
mov [esp+7Ch+var_5C] ebp +
mov ebp [esp+7Ch+arg_8] +
shl eax 5 +
add eax 8 +
mov [esp+7Ch+var_7C] eax +
call sub_408190  +
test eax eax +
mov [esp+7Ch+var_4C] eax +
jz loc_4429C0  +
imul eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] eax +
call sub_408190  +
test eax eax +
mov esi eax +
jz loc_442CFC  +
mov ebx [edi+4] +
mov ecx [ebp+24h] +
mov eax [esp+7Ch+var_20] +
mov edx [ebx+1B0h] +
test ecx ecx +
mov [esp+7Ch+var_1C] eax +
mov [esp+7Ch+var_48] eax +
mov edx [edx+0BCh] +
mov [esp+7Ch+var_38] edx +
jz loc_443A3F  +
mov edx [esp+7Ch+var_4C] +
mov eax [edx] +
shl eax 5 +
lea eax [edx+eax+8] +
mov edx [esp+7Ch+var_48] +
mov [esp+7Ch+var_50] eax +
mov eax edx +
add eax ecx +
cmp ecx 3 +
jbe loc_4436AC  +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_40] 0 +
mov [esp+7Ch+var_54] esi +
mov [esp+7Ch+arg_0] edi +
mov [esp+7Ch+arg_8] ebp +
mov edx [esp+7Ch+var_44] +
mov eax edx +
add eax 4 +
mov [esp+7Ch+var_1C] eax +
mov eax [ebx+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov edx [esp+7Ch+var_1C] +
mov ebx edx +
mov esi eax +
mov eax [esp+7Ch+var_20] +
sub ebx eax +
mov ecx ebx +
mov [esp+7Ch+var_34] ebx +
mov ebx [esp+7Ch+arg_8] +
lea ecx [esi+ecx] +
mov edi [ebx+24h] +
cmp ecx edi +
ja loc_442CEA  +
mov ecx [esp+7Ch+var_48] +
lea ebp [edx+esi] +
mov ebx [esp+7Ch+arg_C] +
sub ecx eax +
mov eax ecx +
mov ecx [esp+7Ch+var_50] +
mov [ecx+10h] eax +
lea eax [esi+4] +
mov [esp+7Ch+var_3C] eax +
mov [ecx+0Ch] eax +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov [esp+7Ch+var_48] eax +
sub eax [ebx] +
sar eax 2 +
imul eax eax +
test esi esi +
mov [ecx+8] eax +
jz loc_4439C4  +
mov eax ebp +
sub eax edx +
cmp eax 3 +
jbe loc_443272  +
lea eax [edx+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jnz loc_442D45  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 1 +
mov edx [esp+7Ch+var_40] +
lea ebx [edx+1] +
mov [esp+7Ch+var_3C] ebx +
imul ebx edx +
add ebx [esp+7Ch+var_54] +
mov [ebx+38h] eax +
mov eax [esp+7Ch+var_1C] +
mov [ebx] esi +
cmp ebp eax +
mov [esp+7Ch+var_48] eax +
jbe loc_442CEA  +
lea esi [eax+1] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
lea edx [eax-3] +
cmp dl 1 +
mov [ebx+8] al +
jbe loc_442BE7  +
cmp al 1 +
jnz loc_442CEA  +
mov [esp+7Ch+var_7C] esi +
call strlen  +
cmp eax 13h +
ja loc_442CEA  +
lea edx [ebx+0Ah] +
add eax 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_40] edx +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] eax +
call strchr  +
mov edi [esp+7Ch+arg_C] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_1C] edx +
mov edx [esp+7Ch+arg_C] +
mov edx [edx+4] +
cmp ecx edx +
jbe loc_442C86  +
mov esi [esp+7Ch+var_44] +
sub esi [esp+7Ch+var_20] +
cmp esi [edx] +
jbe loc_442C86  +
mov edi [edx+4] +
test edi edi +
jnz loc_442CEA  +
add edx 0Ch +
jmp loc_442C76  +
cmp [edx] esi +
jnb loc_442C7C  +
add edx 0Ch +
cmp dword ptr [edx-8] 0 +
jnz loc_443490  +
cmp edx ecx +
mov edi edx +
jb loc_442C65  +
mov edi [esp+7Ch+arg_C] +
mov [edi+4] edx +
cmp byte ptr [eax+1] 65h +
jz loc_4436B5  +
cmp byte ptr [ebx+8] 3 +
jbe loc_442CB7  +
mov eax [esp+7Ch+var_1C] +
lea edx [eax+1] +
cmp ebp edx +
jbe loc_442CEA  +
movzx edx byte ptr [eax] +
cmp edx [esp+7Ch+var_58] +
jnz loc_442CEA  +
cmp byte ptr [eax+1] 0 +
jnz loc_442CEA  +
add eax 2 +
mov [esp+7Ch+var_1C] eax +
lea ecx [ebx+20h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_442150  +
test eax eax +
jz loc_442CEA  +
mov edi [esp+7Ch+var_1C] +
mov eax edi +
jmp loc_442CE6  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jns loc_44328F  +
mov eax edx +
cmp ebp eax +
ja loc_442CD1  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_4429EE  +
mov ebp [esp+7Ch+arg_8] +
jmp loc_4429C0  +
mov edx [esp+7Ch+var_50] +
imul ecx [esp+7Ch+var_40] +
mov ebx [esp+7Ch+var_54] +
mov edx [edx+10h] +
add ecx ebx +
mov [esp+7Ch+var_48] edx +
add edx 4 +
sub edx eax +
cmp ebx ecx +
jnb loc_443842  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jnz loc_442D7D  +
jmp loc_443842  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jz loc_442D84  +
add ebx 74h +
cmp ebx ecx +
jb loc_442D75  +
cmp ebx ecx +
jz loc_442CEA  +
mov eax [ebx+38h] +
mov edi [esp+7Ch+var_50] +
mov [edi] eax +
mov ecx [ebx+38h] +
movzx eax byte ptr [edi+1Bh] +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFF7h +
and edx 8 +
or eax edx +
mov [edi+1Bh] al +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFFBh +
and edx 4 +
or eax edx +
mov [edi+1Bh] al +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+4] +
mov esi [eax+8] +
cmp edx esi +
jnb loc_442E09  +
mov ecx [esp+7Ch+var_1C] +
sub ecx [esp+7Ch+var_20] +
cmp ecx [edx] +
jbe loc_442E09  +
mov eax [edx+4] +
test eax eax +
jnz loc_442CEA  +
lea eax [edx+0Ch] +
jmp loc_442DF9  +
cmp [eax] ecx +
jnb loc_442DFF  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_443226  +
cmp eax esi +
mov edx eax +
jb loc_442DE7  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov eax [esp+7Ch+arg_8] +
test byte ptr [eax+16h] 10h +
jz loc_442E23  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax] +
test eax eax +
jz loc_442EA0  +
cmp edx esi +
jnb loc_442CEA  +
mov eax [esp+7Ch+var_1C] +
sub eax [esp+7Ch+var_20] +
cmp [edx] eax +
jnz loc_442CEA  +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_440660  +
test eax eax +
jz loc_442EA0  +
mov edx [esp+7Ch+arg_0] +
cmp [eax+94h] edx +
jnz loc_442CEA  +
mov eax [eax+8Ch] +
mov edi [esp+7Ch+var_50] +
mov edx [eax+80h] +
mov [edi+4] edx +
mov [eax+80h] edi +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_48] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_4434C3  +
and eax 7 +
cmp al 2 +
jz loc_443867  +
jbe loc_4434B3  +
cmp al 3 +
lea esi [esi+0] +
jz loc_443835  +
cmp al 4 +
mov [esp+7Ch+var_34] 8 +
jnz loc_4434C3  +
mov eax [esp+7Ch+var_34] +
lea esi [eax+eax] +
mov [esp+7Ch+var_18] eax +
mov eax ebp +
sub eax [esp+7Ch+var_48] +
cmp esi eax +
ja loc_443272  +
mov edi [esp+7Ch+var_34] +
neg edi  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
add esi [esp+7Ch+var_48] +
mov eax [eax+4] +
mov ecx [edx+8] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_443A33  +
add edi esi +
mov edx [eax] +
mov esi edi +
sub esi [esp+7Ch+var_20] +
mov [esp+7Ch+var_30] edi +
cmp edx esi +
jnb loc_443251  +
add eax 0Ch +
jmp loc_442F52  +
add eax 0Ch +
mov edx [eax-0Ch] +
cmp edx esi +
jnb loc_443247  +
cmp eax ecx +
mov edi eax +
jb loc_442F44  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_0] +
mov ecx [esp+7Ch+var_34] +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_7C] 0 +
add eax 4 +
call sub_4425D0  +
test eax eax +
jz loc_4437C0  +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_44384B  +
mov [esp+7Ch+var_18] 0 +
cmp byte ptr [ebx+3Dh] 0FFh +
jz loc_44325E  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov edi [esp+7Ch+var_1C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_442FEF  +
mov ecx edi +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_443678  +
lea edx [eax+0Ch] +
jmp loc_442FDF  +
lea edx [edx+0Ch] +
cmp [edx-0Ch] ecx +
jnb loc_44366E  +
cmp edx esi +
mov eax edx +
jb loc_442FD3  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_50] +
mov eax edi +
sub eax [esp+7Ch+var_48] +
mov [edx+1Ah] al +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_44380E  +
mov eax ebp +
sub eax edi +
mov [esp+7Ch+var_18] eax +
add eax edi +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov ecx [esp+7Ch+var_44] +
add ecx [esp+7Ch+var_3C] +
mov edx [edx+8] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] ecx +
cmp edx eax +
jbe loc_443061  +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_443061  +
add eax 0Ch +
jmp loc_443051  +
add eax 0Ch +
cmp [eax-0Ch] ecx +
jnb loc_4434DC  +
cmp eax edx +
mov esi eax +
jb loc_443045  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
xor edi edi +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_443097  +
and eax 7 +
cmp al 2 +
jz loc_44382A  +
jbe loc_4437FB  +
cmp al 3 +
mov edi 4 +
jz loc_443097  +
cmp al 4 +
mov di 8 +
jnz loc_443807  +
mov ecx [esp+7Ch+var_34] +
xor esi esi +
mov [esp+7Ch+var_18] edi +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
cmp ebp eax +
jbe loc_4430C1  +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_443180  +
add eax 1 +
cmp ebp eax +
mov [esp+7Ch+var_10] eax +
ja loc_4430AB  +
test ecx ecx +
jz loc_442CEA  +
test esi esi +
jz loc_4430DB  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 1 +
jnz loc_442CEA  +
mov edx [esp+7Ch+var_50] +
mov eax ecx +
sub eax ebp +
add [edx+0Ch] eax +
cmp ebp ecx +
jz loc_4430F5  +
test byte ptr [edx+1Bh] 1 +
jz loc_4430F5  +
add [ebx+3Fh] al +
add [ebx] eax +
test esi esi +
jz loc_4431AA  +
movzx eax byte ptr [ebx+3Eh] +
and eax 70h +
cmp al 10h +
jz loc_443116  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 8 +
jz loc_4431AA  +
lea eax ds:4[esi*4] +
mov [esp+7Ch+var_7C] eax +
call sub_408000  +
mov edx [esp+7Ch+var_50] +
test eax eax +
mov [edx+1Ch] eax +
jz loc_442CEA  +
mov [eax] esi +
mov eax [esp+7Ch+var_34] +
xor esi esi +
mov edi edx +
mov [esp+7Ch+var_14] eax +
jmp loc_44315F  +
mov ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_14] +
call sub_442220  +
test eax eax +
jz loc_442CEA  +
mov eax [esp+7Ch+var_14] +
cmp ebp eax +
jbe loc_4431AA  +
cmp byte ptr [eax] 1 +
jnz loc_443144  +
mov edx [edi+1Ch] +
add eax 1 +
add esi 1 +
sub eax [esp+7Ch+var_48] +
mov [edx+esi*4] eax +
jmp loc_443144  +
xor eax eax +
cmp dl 1 +
setz al  +
mov ecx edi +
add esi eax +
mov edx ebp +
lea eax [esp+7Ch+var_10] +
call sub_442220  +
test eax eax +
jz loc_442CEA  +
mov ecx [esp+7Ch+var_10] +
mov eax ecx +
jmp loc_4430A7  +
mov edx [esp+7Ch+var_50] +
or byte ptr [edx+1Bh] 2 +
movzx eax byte ptr [ebx+3Eh] +
mov [edx+18h] al +
movzx eax byte ptr [ebx+3Dh] +
mov [edx+19h] al +
mov eax [esp+7Ch+var_4C] +
mov edx [eax] +
lea ecx [edx+1] +
mov [eax] ecx +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_50] edx +
mov edx [esp+7Ch+var_20] +
mov ebx eax +
mov [esp+7Ch+var_44] eax +
sub ebx edx +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_8] +
mov eax [eax+24h] +
cmp ebx eax +
jz loc_443B5D  +
add eax edx +
mov ebx [esp+7Ch+var_4C] +
mov edx eax +
sub edx [esp+7Ch+var_44] +
shl ecx 5 +
lea ebx [ebx+ecx+8] +
cmp edx 3 +
mov [esp+7Ch+var_50] ebx +
jbe loc_44369A  +
mov eax [esp+7Ch+arg_0] +
mov ebx [eax+4] +
jmp loc_442AE8  +
mov edx esi +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] edx +
jmp loc_442CFC  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edi +
cmp esi edx +
jnz loc_442F62  +
jmp loc_442F88  +
mov edi [esp+7Ch+var_1C] +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
cmp eax edx +
jbe loc_44300E  +
mov eax ebp +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_442CFC  +
xor ecx 40h +
movzx esi cl +
sub esi 40h +
cmp edi eax +
mov [ebx+24h] esi +
jb loc_4432A3  +
jmp loc_4432B8  +
mov esi ecx +
sub eax 1 +
movzx ecx byte ptr [eax] +
shl esi 7 +
and ecx 7Fh +
or ecx esi +
cmp eax edi +
mov [ebx+24h] ecx +
jnz loc_4432A1  +
cmp byte ptr [ebx+8] 1 +
jnz loc_443472  +
cmp ebp edx +
jbe loc_442CEA  +
lea eax [edx+1] +
mov [esp+7Ch+var_1C] eax +
movzx eax byte ptr [edx] +
mov [ebx+28h] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_443332  +
mov edx [esp+7Ch+var_1C] +
sub edx [esp+7Ch+var_20] +
cmp edx [eax] +
jbe loc_443332  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_442CEA  +
add eax 0Ch +
jmp loc_443322  +
cmp [eax] edx +
jnb loc_443328  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_4435B0  +
cmp eax esi +
mov ecx eax +
jb loc_443310  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Ah] +
mov byte ptr [ebx+3Dh] 0FFh +
mov byte ptr [ebx+3Eh] 0FFh +
mov byte ptr [ebx+3Ch] 0FFh +
cmp al 65h +
jz loc_44381B  +
cmp al 7Ah +
jz loc_443874  +
mov edx [esp+7Ch+var_20] +
mov [esp+7Ch+var_44] edx +
test al al +
jz loc_44338E  +
cmp al 50h +
jz loc_4434EB  +
jle loc_4435D1  +
cmp al 52h +
nop   +
jz loc_44373B  +
cmp al 53h +
jnz loc_442CEA  +
add [esp+7Ch+var_40] 1 +
mov eax [esp+7Ch+var_40] +
movzx eax byte ptr [eax] +
test al al +
jnz loc_44335E  +
mov eax [esp+7Ch+arg_4] +
test byte ptr [eax] 1 +
jnz loc_443AFA  +
cmp byte ptr [ebx+3Eh] 0FFh +
jnz loc_4433A8  +
mov byte ptr [ebx+3Eh] 0 +
mov ecx [esp+7Ch+var_1C] +
mov esi ebp +
lea edx [ebx+41h] +
sub esi ecx +
mov eax esi +
cmp esi 32h +
mov [ebx+3Fh] al +
mov eax 32h +
cmovbe eax esi +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov edx [esp+7Ch+arg_C] +
lea ecx [eax+esi] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [edx+8] +
mov [esp+7Ch+var_1C] ecx +
mov eax [eax+4] +
cmp edx eax +
jbe loc_443433  +
sub ecx [esp+7Ch+var_20] +
cmp [eax] ecx +
jnb loc_443433  +
cmp dword ptr [eax+4] 0 +
jnz loc_442CEA  +
add eax 0Ch +
jmp loc_443423  +
cmp [eax] ecx +
jnb loc_443429  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_443224  +
cmp eax edx +
mov esi eax +
jb loc_443411  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_443465  +
mov edi [esp+7Ch+var_50] +
mov [edi] ebx +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 10h +
movzx eax byte ptr [edi+5] +
setz dl  +
shl edx 3 +
and eax 0FFFFFFF7h +
or eax edx +
mov [edi+5] al +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_40] eax +
jmp loc_443061  +
lea ecx [ebx+28h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_442150  +
test eax eax +
jnz loc_4432D7  +
jmp loc_442CEA  +
mov edx [esp+7Ch+arg_C] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_442CFC  +
mov edx [esp+7Ch+var_58] +
test al al +
mov [esp+7Ch+var_34] edx +
jz loc_442EE6  +
mov [esp+7Ch+var_18] 0 +
xor edi edi +
xor esi esi +
mov [esp+7Ch+var_34] 0 +
jmp loc_442F05  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] esi +
jmp loc_443061  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_442CEA  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 60h +
cmp cl 60h +
mov [ebx+3Ch] al +
jz loc_442CEA  +
mov ecx eax +
and ecx 7 +
cmp cl 2 +
jz loc_443ADD  +
jbe loc_4439B3  +
cmp cl 3 +
jz loc_443AD3  +
cmp cl 4 +
jnz loc_442CEA  +
mov edi 8 +
and eax 70h +
cmp al 50h +
jz loc_44398D  +
mov eax [esp+7Ch+var_1C] +
mov esi [esp+7Ch+var_50] +
mov edx eax +
mov [esp+7Ch+var_34] eax +
sub eax [esp+7Ch+var_48] +
mov [esi+4] al +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [esi+8] +
cmp eax esi +
jnb loc_442CEA  +
sub edx [esp+7Ch+var_44] +
cmp [eax] edx +
jnb loc_443926  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_442CEA  +
lea ecx [eax+0Ch] +
jmp loc_4435AA  +
cmp [ecx] edx +
jnb loc_44391C  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_4438FB  +
cmp ecx esi +
mov eax ecx +
jb loc_443595  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] ecx +
jmp loc_442CFC  +
cmp al 4Ch +
jnz loc_442CEA  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_442CEA  +
lea esi [eax+1] +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
mov [ebx+3Dh] al +
mov eax [esp+7Ch+arg_C] +
mov ecx [edx+8] +
mov eax [eax+4] +
cmp ecx eax +
jbe loc_443643  +
sub esi [esp+7Ch+var_44] +
cmp [eax] esi +
jnb loc_443643  +
cmp dword ptr [eax+4] 0 +
jnz loc_442CEA  +
add eax 0Ch +
jmp loc_443633  +
cmp [eax] esi +
jnb loc_443639  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_443226  +
cmp eax ecx +
mov edx eax +
jb loc_443621  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Dh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_442CEA  +
and eax 7 +
jz loc_44337E  +
sub eax 2 +
cmp al 2 +
jbe loc_44337E  +
jmp loc_442CEA  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
cmp byte ptr [ebx+40h] 0 +
jz loc_442FEF  +
cmp [eax] ecx +
jnz loc_442FEF  +
mov eax [ebx+38h] +
or byte ptr [eax+5] 2 +
mov edi [esp+7Ch+var_1C] +
jmp loc_442FEF  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_442CFC  +
cmp byte ptr [eax+2] 68h +
jnz loc_442C90  +
mov eax ebp +
sub eax [esp+7Ch+var_44] +
cmp [esp+7Ch+var_58] eax +
ja loc_443272  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_44] +
add esi [esp+7Ch+var_58] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_442C90  +
sub esi [esp+7Ch+var_20] +
cmp [eax] esi +
jnb loc_442C90  +
add eax 0Ch +
jmp loc_44370C  +
add eax 0Ch +
cmp [eax-0Ch] esi +
jnb loc_443AC4  +
cmp eax ecx +
mov edx eax +
jb loc_443700  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
jmp loc_442C90  +
mov eax 8 +
mov [esp+7Ch+var_60] 0 +
mov [esp+7Ch+var_5C] 0 +
jmp loc_442A53  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_442CEA  +
lea edx [eax+1] +
mov edi [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov [ebx+3Eh] al +
mov eax [esp+7Ch+arg_C] +
mov esi [edi+8] +
mov eax [eax+4] +
cmp eax esi +
jnb loc_4437A5  +
sub edx [esp+7Ch+var_44] +
cmp edx [eax] +
jbe loc_4437A5  +
cmp dword ptr [eax+4] 0 +
jnz loc_442CEA  +
add eax 0Ch +
jmp loc_443795  +
cmp [eax] edx +
jnb loc_44379B  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_4435B0  +
cmp eax esi +
mov ecx eax +
jb loc_443783  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jnz loc_443655  +
jmp loc_442CEA  +
mov eax [esp+7Ch+arg_4] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+18h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] offset aDiscardingZero +
mov [esp+7Ch+var_78] edx +
call eax  +
mov eax [esp+7Ch+var_50] +
mov dword ptr [eax] 0 +
jmp loc_442F88  +
test al al +
mov edi [esp+7Ch+var_58] +
jz loc_443097  +
xor edi edi +
jmp loc_443097  +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
jmp loc_44326A  +
cmp byte ptr [ebx+0Bh] 68h +
jnz loc_443352  +
jmp loc_44338E  +
mov edi 2 +
nop   +
jmp loc_443097  +
mov [esp+7Ch+var_34] 4 +
jmp loc_442EE6  +
mov ebx [esp+7Ch+var_54] +
jmp loc_442D84  +
lea ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_442150  +
test eax eax +
jnz loc_442F9A  +
jmp loc_442CEA  +
mov [esp+7Ch+var_34] 2 +
jmp loc_442EE6  +
lea eax [ebx+0Bh] +
mov edx ebp +
mov [esp+7Ch+var_40] eax +
lea ecx [ebx+2Ch] +
lea eax [esp+7Ch+var_1C] +
call sub_442150  +
test eax eax +
jz loc_442CEA  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov ecx [edx+8] +
cmp ecx eax +
jbe loc_443B6D  +
mov edx [esp+7Ch+var_20] +
mov edi edx +
mov [esp+7Ch+var_44] edx +
mov edx [esp+7Ch+var_1C] +
sub edx edi +
cmp edx [eax] +
jbe loc_4438F2  +
cmp dword ptr [eax+4] 0 +
jnz loc_442CEA  +
add eax 0Ch +
jmp loc_4438E2  +
cmp [eax] edx +
jnb loc_4438E8  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_443224  +
cmp eax ecx +
mov esi eax +
jb loc_4438D0  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_44335A  +
mov edx [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_442CFC  +
mov esi [esp+7Ch+arg_C] +
mov [esi+4] ecx +
mov ecx [eax] +
cmp ecx edx +
jnz loc_442CEA  +
mov edx [esp+7Ch+arg_C] +
sub eax [edx] +
sar eax 2 +
imul eax eax +
mov [ebx+30h] eax +
mov eax [edx+4] +
mov edx [edx+8] +
mov [esp+7Ch+var_30] eax +
mov eax [esp+7Ch+var_30] +
jmp loc_443961  +
cmp ecx [eax] +
jnz loc_443968  +
test eax eax +
jz loc_443AE7  +
add eax 0Ch +
cmp eax edx +
jb loc_443955  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax ebp +
sub eax [esp+7Ch+var_34] +
cmp edi eax +
ja loc_443272  +
add edi [esp+7Ch+var_34] +
mov [esp+7Ch+var_1C] edi +
jmp loc_44337E  +
mov ecx [esp+7Ch+var_44] +
lea eax [edi-1] +
sub ecx edx +
and eax ecx +
mov ecx ebp +
sub ecx edx +
cmp eax ecx +
mov [esp+7Ch+var_18] eax +
ja loc_443272  +
add eax edx +
mov [esp+7Ch+var_1C] eax +
jmp loc_443548  +
test cl cl +
jnz loc_442CEA  +
mov edi [esp+7Ch+var_58] +
jmp loc_44353D  +
mov ebx [esp+7Ch+var_34] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov ecx [esp+7Ch+var_48] +
mov edi [esp+7Ch+arg_0] +
cmp ebx eax +
mov ebp [esp+7Ch+arg_8] +
jnz loc_442CFC  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+8] +
cmp eax ecx +
jbe loc_443A2A  +
cmp [ecx] ebx +
jnb loc_443A2A  +
cmp dword ptr [ecx+4] 0 +
jnz loc_442CFC  +
add ecx 0Ch +
jmp loc_443A1A  +
cmp [ecx] ebx +
jnb loc_443A20  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_443B76  +
cmp ecx eax +
mov edx ecx +
jb loc_443A09  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] ecx +
mov eax [esp+7Ch+var_4C] +
add dword ptr [eax] 1 +
jmp loc_443A47  +
lea eax [esi+edi] +
mov [esp+7Ch+var_30] eax +
jmp loc_442F62  +
mov [esp+7Ch+var_40] 0 +
mov eax [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_5C] +
cmp [eax] edx +
jz loc_443A67  +
mov [esp+7Ch+var_78] 3F8h +
mov [esp+7Ch+var_7C] offset a____Binutil_25 +
call sub_404040  +
mov eax [esp+7Ch+var_60] +
cmp [esp+7Ch+var_40] eax +
jz loc_443A85  +
mov [esp+7Ch+var_78] 3F9h +
mov [esp+7Ch+var_7C] offset a____Binutil_25 +
call sub_404040  +
mov eax [ebp+8Ch] +
mov edx [esp+7Ch+var_4C] +
mov [eax+88h] edx +
movzx eax word ptr [ebp+18h] +
and ax 0FC7Fh +
or ax 180h +
mov [ebp+18h] ax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4429EE  +
mov [edx+4] esi +
xor esi esi +
jmp loc_4429EE  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_442C90  +
mov edi 4 +
jmp loc_44353D  +
mov edi 2 +
jmp loc_44353D  +
mov eax [esp+7Ch+arg_C] +
mov dword ptr [eax+4] 0 +
jmp loc_443972  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_4] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_44339E  +
movzx eax byte ptr [ebx+3Eh] +
test al 70h +
jnz loc_443B85  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 8 +
test byte ptr [ebx+3Dh] 70h +
jnz loc_44339E  +
mov byte ptr [ebx+40h] 1 +
jmp loc_44339E  +
mov esi [esp+7Ch+var_54] +
mov ebp [esp+7Ch+arg_8] +
jmp loc_443A47  +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_443352  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_442CFC  +
add al 1 +
jnz loc_443B4A  +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 50h +
jz loc_443B4A  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_443BB2  +
mov eax [esp+7Ch+var_50] +
movzx eax byte ptr [eax+1Bh] +
mov edx [esp+7Ch+var_50] +
or eax 8 +
or byte ptr [edx+5] 10h +
mov [edx+1Bh] al +
jmp loc_443B4A  +
mov edx [esp+7Ch+var_50] +
movzx eax byte ptr [edx+1Bh] +
or eax 4 +
mov [edx+1Bh] al +
jmp loc_443BA2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
movzx edx byte ptr [eax+3] +
mov ebx [eax+1Ch] +
xor eax eax +
and edx 6 +
cmp dl 4 +
jz loc_443BF4  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+0A8h] +
test edi edi +
jz loc_443BEC  +
mov edx [ebx+0B4h] +
xor ebp ebp +
jmp loc_443C15  +
mov edi [ebx+0A8h] +
add ebp 1 +
cmp ebp edi +
jnb loc_443C75  +
mov ecx [edx+ebp*4] +
lea eax ds:0[ebp*4] +
test byte ptr [ecx+15h] 80h +
jz loc_443C08  +
lea ecx [ebp+1] +
cmp ecx edi +
jnb loc_443C55  +
mov [esp+2Ch+var_1C] ebp +
jmp loc_443C3A  +
mov edx [ebx+0B4h] +
mov eax esi +
mov ebp [edx+eax+4] +
add ecx 1 +
cmp ecx edi +
lea esi [eax+4] +
mov [edx+eax] ebp +
jnz loc_443C32  +
mov ebp [esp+2Ch+var_1C] +
mov edx [ebx+0B4h] +
sub ebp 1 +
sub edi 1 +
add ebp 1 +
cmp ebp edi +
mov [ebx+0A8h] edi +
mov dword ptr [edx+edi*4] 0 +
mov edx [ebx+0B4h] +
jb loc_443C15  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] offset sub_4423B0 +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edx +
call qsort  +
mov eax [ebx+0A8h] +
mov edi [ebx+0B4h] +
mov [esp+2Ch+var_10] ebx +
sub eax 1 +
mov [esp+2Ch+var_18] edi +
mov ebp [edi] +
xor edi edi +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
jnb loc_443D5A  +
add edi 1 +
lea eax ds:0[edi*4] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_18] +
mov edx [eax+edi*4] +
test edx edx +
jz loc_443D08  +
mov eax [ebp+8Ch] +
mov ecx [edx+8Ch] +
mov eax [eax+88h] +
mov ecx [ecx+88h] +
mov ebx [eax+3Ch] +
mov esi [eax+38h] +
add esi [ebx+1Ch] +
add esi [eax+24h] +
mov eax [ecx+3Ch] +
mov ecx [ecx+38h] +
add ecx [eax+1Ch] +
cmp esi ecx +
jz loc_443D90  +
mov edx [ebp+28h] +
test edx edx +
mov edx [ebp+24h] +
jnz loc_443D15  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_403380  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+0A8h] +
mov esi [ebx+0B4h] +
mov ebx [esp+2Ch+var_14] +
sub eax 1 +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] esi +
mov ebp [esi+ebx] +
jb loc_443CBA  +
mov eax [ebp+28h] +
mov edx [ebp+24h] +
test eax eax +
jnz loc_443D67  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_403380  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp edx +
jmp loc_443CB0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_10] +
mov eax [eax+8Ch] +
mov ebx [eax+80h] +
test ebx ebx +
jnz loc_443DD7  +
jmp loc_443E30  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_443E30  +
mov edx [esp+1Ch+arg_8] +
mov ecx ebx +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_442400  +
test eax eax +
jz loc_443E20  +
mov ecx [ebx] +
test ecx ecx +
jz loc_443DD0  +
movzx eax byte ptr [ecx+5] +
test al 1 +
jnz loc_443DD0  +
or eax 1 +
mov [ecx+5] al +
mov edx [esp+1Ch+arg_8] +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_442400  +
test eax eax +
jnz loc_443DD0  +
lea esi [esi+0] +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
movzx edx word ptr [eax+18h] +
xor eax eax +
and dx 380h +
cmp dx 180h +
jz loc_443E65  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+3Ch+arg_8] +
mov edx [edi+8Ch] +
mov ecx [edx+88h] +
test ecx ecx +
mov esi ecx +
mov [esp+3Ch+var_2C] ecx +
jz loc_443E5D  +
mov eax [edi+94h] +
lea ebx [esi+8] +
mov ebp ebx +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+11Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
mov edx [esi] +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+1Ch] +
mov [esp+3Ch+var_28] eax +
mov eax edx +
shl eax 5 +
lea eax [esi+eax+8] +
cmp ebx eax +
lea esi [edi+4] +
mov [esp+3Ch+var_1C] esi +
jnb loc_44427C  +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+var_2C] +
cmp dword ptr [ebp+0Ch] 4 +
jz loc_4442F0  +
test byte ptr [ebp+1Bh] 1 +
jnz loc_444264  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_444264  +
mov eax [esp+3Ch+arg_8] +
test byte ptr [eax+16h] 10h +
mov eax [esp+3Ch+arg_10] +
mov edx [eax] +
jz loc_443F0E  +
test edx edx +
jz loc_444340  +
mov eax [ebp+8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*2] +
lea eax [edx+eax*4] +
cmp eax [edi+8] +
mov [edi+4] eax +
jnb loc_443F2D  +
mov esi [ebp+10h] +
lea edx [esi+8] +
cmp [eax] edx +
jz loc_443F47  +
mov [esp+3Ch+var_38] 552h +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_404040  +
mov eax [ebp+10h] +
lea edx [eax+8] +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_38] eax +
call [esp+3Ch+arg_C]  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jz loc_444262  +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_443FB3  +
movzx eax byte ptr [ebp+18h] +
and eax 70h +
jnz loc_444328  +
test byte ptr [ebp+1Bh] 8 +
jnz loc_443FB3  +
mov eax [esp+3Ch+var_28] +
mov edi [esp+3Ch+arg_8] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_34] edi +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] offset aPFdeEncodingIn +
mov [esp+3Ch+var_38] edi +
call eax  +
and byte ptr [ebp+1Bh] 0FDh +
mov eax [esp+3Ch+var_28] +
add dword ptr [eax+0B4h] 1 +
mov edi [ebp+0] +
movzx eax byte ptr [edi+1Bh] +
test al 2 +
jz loc_44425F  +
test byte ptr [edi+5] 20h +
jnz loc_444335  +
and eax 0FFFFFFFDh +
mov esi [edi] +
mov [edi+1Bh] al +
mov eax [esp+3Ch+arg_8] +
test esi esi +
mov [edi] eax +
jz loc_44425F  +
cmp byte ptr [esi+3Ch] 0FFh +
jz loc_444461  +
mov eax [esi+30h] +
lea ecx [esi+30h] +
mov [esp+3Ch+var_18] ecx +
lea edx [eax+eax*2] +
mov eax [esp+3Ch+arg_10] +
mov eax [eax] +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov ecx [eax+edx*4+4] +
mov eax [esp+3Ch+arg_10] +
shr ecx 8 +
cmp ecx [eax+14h] +
jnb loc_444048  +
mov edx [esp+3Ch+arg_10] +
lea eax [ecx+ecx*4] +
mov edx [edx+0Ch] +
lea edx [edx+eax*4] +
movzx eax byte ptr [edx+0Ch] +
shr al 4 +
test al al +
jz loc_4443AF  +
mov edx [esp+3Ch+arg_10] +
mov eax ecx +
sub eax [edx+18h] +
mov edx [edx+1Ch] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_444072  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_444063  +
mov ecx [esp+3Ch+arg_4] +
mov [esi+30h] eax +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_435A30  +
test eax eax +
jnz loc_4443F6  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
call sub_460E10  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+8] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
lea edx [esi+0Ah] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_10] eax +
call strlen  +
mov ecx [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
add eax 1 +
mov [esp+3Ch+var_38] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+20h] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+24h] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+28h] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+38h] +
mov eax [eax] +
add eax 3Ch +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Dh] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Eh] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Fh] +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
movzx edx byte ptr [esi+3Fh] +
cmp edx 32h +
mov [esp+3Ch+var_34] eax +
mov eax 32h +
cmova edx eax +
lea eax [esi+41h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call sub_460E10  +
mov ecx [esp+3Ch+var_28] +
mov edx [ecx+0B0h] +
mov [esi+4] eax +
test edx edx +
jz loc_44446D  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_38] esi +
call sub_460A20  +
test eax eax +
mov edx eax +
jz loc_44425F  +
mov eax [eax] +
test eax eax +
jz loc_4444CB  +
movzx edx byte ptr [edi+5] +
or byte ptr [edi+1Bh] 2 +
or edx 20h +
mov [edi+5] dl +
mov ecx [eax+38h] +
and edx 2 +
mov [edi] ecx +
jz loc_44425C  +
mov edx [eax+38h] +
or byte ptr [edx+5] 2 +
mov edi [eax+38h] +
mov [ebp+0] edi +
mov edx [ebx] +
mov eax edx +
add ebp 20h +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_443ED7  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_2C] +
mov eax [eax+4] +
test eax eax +
jz loc_44429C  +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_2C] +
mov edx [eax] +
mov dword ptr [eax+4] 0 +
mov eax [esp+3Ch+var_2C] +
shl edx 5 +
xor edi edi +
lea esi [eax+edx+8] +
cmp ebx esi +
jnb loc_4442CC  +
mov ebp [esp+3Ch+var_24] +
test byte ptr [ebx+1Bh] 2 +
jnz loc_4442C5  +
mov [ebx+14h] edi +
mov edx ebp +
mov eax ebx +
call sub_4421D0  +
add edi eax +
add ebx 20h +
cmp ebx esi +
jb loc_4442B1  +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+24h] +
mov [esi+24h] edi +
cmp edi eax +
mov [esi+28h] eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov esi [eax+0A0h] +
movzx eax byte ptr [ebp+1Bh] +
test esi esi +
setnz dl  +
and eax 0FFFFFFFDh +
add edx edx +
add ebp 20h +
or eax edx +
mov [ebp-5] al +
mov edx [ebx] +
mov eax edx +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_443ED7  +
jmp loc_444278  +
cmp al 50h +
jnz loc_443FB3  +
jmp loc_443F82  +
mov edi [edi] +
mov [ebp+0] edi +
jmp loc_444262  +
movzx eax byte ptr [ebp+18h] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_444458  +
mov edx eax +
and edx 7 +
cmp dl 2 +
jz loc_4444AD  +
jbe loc_44444A  +
cmp dl 3 +
jz loc_4444BC  +
cmp dl 4 +
mov esi 8 +
mov ecx 8 +
jnz loc_444458  +
mov edx [ebp+10h] +
shr al 3 +
and eax 1 +
lea edx [esi+edx+8] +
mov esi [esp+3Ch+arg_8] +
add edx [esi+6Ch] +
mov [esp+3Ch+var_3C] eax +
mov eax [esp+3Ch+var_1C] +
call sub_4425D0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_443F5E  +
mov eax [edx+10h] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_423A90  +
test eax eax +
jz loc_44425F  +
mov edx [eax+7Ch] +
test edx edx +
cmovz edx eax +
mov eax [edx+3Ch] +
test eax eax +
jz loc_44425F  +
mov eax [esp+3Ch+arg_0] +
mov byte ptr [esi+9] 1 +
mov ecx [esp+3Ch+var_14] +
mov eax [eax+24h] +
mov [esi+34h] ecx +
mov [esi+30h] eax +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_444095  +
test byte ptr [esi+3Ch] 70h +
jnz loc_444095  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+3Ch+var_34] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ecx +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jz loc_444095  +
or byte ptr [edi+5] 0Ch +
jmp loc_444095  +
mov ecx [esp+3Ch+var_24] +
test dl dl +
mov esi ecx +
jz loc_444382  +
xor esi esi +
xor ecx ecx +
jmp loc_444382  +
lea eax [esi+30h] +
mov [esp+3Ch+var_18] eax +
jmp loc_444095  +
mov [esp+3Ch+var_30] offset free +
mov [esp+3Ch+var_34] offset sub_442480 +
mov [esp+3Ch+var_38] offset loc_4421C0 +
mov [esp+3Ch+var_3C] 1 +
call sub_4606F0  +
mov edx eax +
mov eax [esp+3Ch+var_28] +
test edx edx +
mov [eax+0B0h] edx +
jz loc_44425F  +
mov eax [esi+4] +
jmp loc_444215  +
mov esi 2 +
mov ecx 2 +
jmp loc_444382  +
mov esi 4 +
mov ecx 4 +
jmp loc_444382  +
mov [esp+3Ch+var_3C] 74h +
mov [esp+3Ch+var_18] edx +
call malloc  +
test eax eax +
jz loc_44425F  +
mov edx [esp+3Ch+var_18] +
mov ecx 1Dh +
mov edi eax +
movs   +
mov [edx] eax +
jmp loc_44425C  +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esi+1Ch] +
mov ecx [ebx+0ACh] +
test ecx ecx +
jnz loc_444532  +
mov eax [ebx+0B0h] +
test eax eax +
jz loc_444532  +
mov [esp+14h+var_14] eax +
call sub_460740  +
mov dword ptr [ebx+0B0h] 0 +
mov eax [ebx+0A4h] +
test eax eax +
jz loc_444590  +
movzx edx byte ptr [esi+3] +
mov dword ptr [eax+24h] 8 +
and edx 6 +
cmp dl 4 +
jz loc_444559  +
mov edx [ebx+0B8h] +
test edx edx +
jnz loc_444577  +
mov edx [esp+14h+arg_0] +
mov edx [edx+0A0h] +
mov edx [edx+934h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+0B4h] +
lea edx ds:0Ch[edx*8] +
mov [eax+24h] edx +
jmp loc_444559  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+30h] +
mov [esp+1Ch+var_18] offset a_eh_frame +
mov [esp+1Ch+var_1C] eax +
call sub_402CB0  +
test eax eax +
jz loc_4445F0  +
mov eax [eax+0A0h] +
test eax eax +
jnz loc_4445DA  +
jmp loc_4445F0  +
mov eax [eax+0A0h] +
test eax eax +
jz loc_4445E5  +
cmp dword ptr [eax+24h] 8 +
jbe loc_4445D0  +
mov eax 1 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebp [eax+34h] +
test ebp ebp +
jz loc_444647  +
mov eax [ebp+64h] +
test eax eax +
jz loc_44463D  +
mov edx offset a_eh_frame_entr +
nop   +
lea esi [esi+0] +
mov esi [eax] +
mov edi edx +
mov ecx 10h +
cmps   +
jz loc_444636  +
cmp dword ptr [eax+3Ch] offset off_473250 +
jnz loc_444650  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_444620  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jnz loc_44460F  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 40h +
mov esi [esp+40h+arg_0] +
mov [esp+40h+var_4] 0 +
mov edi [esi+1Ch] +
mov ebx [edi+0A4h] +
test ebx ebx +
jz loc_444776  +
cmp dword ptr [ebx+3Ch] offset off_473250 +
jz loc_444716  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jz loc_444716  +
cmp al 2 +
jz loc_444700  +
cmp al 4 +
jz loc_444782  +
mov eax [esi+30h] +
lea edx [esp+40h+var_4] +
mov [esp+40h+var_1C] edx +
mov [esp+40h+var_20] 0 +
mov [esp+40h+var_24] 0 +
mov [esp+40h+var_28] 0 +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_30] ebx +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_38] offset a__gnu_eh_frame +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] esi +
call sub_41A3C0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_444733  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_4445A0  +
test eax eax +
jnz loc_444794  +
mov ebx [edi+0A4h] +
or dword ptr [ebx+14h] 8000h +
mov eax 1 +
mov dword ptr [edi+0A4h] 0 +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+40h+var_4] +
or byte ptr [eax+33h] 2 +
mov edx [esi+30h] +
mov byte ptr [eax+31h] 2 +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+0DCh] +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_38] 1 +
mov [esp+40h+var_40] esi +
call edx  +
mov eax [edi+0ACh] +
test eax eax +
jnz loc_444776  +
mov dword ptr [edi+0B8h] 1 +
add esp 40h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_444600  +
test eax eax +
jnz loc_4446A5  +
jmp loc_444716  +
movzx eax byte ptr [esi+3] +
mov ebx [edi+0A4h] +
and eax 6 +
jmp loc_44469D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_C] +
movzx edx word ptr [ecx+18h] +
mov eax esi +
and dx 380h +
cmp dx 180h +
jz loc_4447E0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx+8Ch] +
mov edi [edx+88h] +
mov edx [ecx+28h] +
cmp esi edx +
jnb loc_444840  +
mov eax [edi] +
test eax eax +
jz loc_444983  +
xor edx edx +
jmp loc_44480F  +
add ebp [ecx+14h] +
cmp esi ebp +
jb loc_444850  +
lea edx [ebx+1] +
cmp edx eax +
jnb loc_444828  +
lea ebx [edx+eax] +
shr ebx 1 +
mov ecx ebx +
shl ecx 5 +
add ecx edi +
mov ebp [ecx+18h] +
cmp esi ebp +
jnb loc_444801  +
mov eax ebx +
cmp edx eax +
jb loc_44480F  +
mov [esp+2Ch+var_28] 628h +
mov [esp+2Ch+var_2C] offset a____Binutil_25 +
call sub_404040  +
jmp loc_444854  +
sub eax edx +
add eax [ecx+24h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx eax +
jnb loc_444828  +
mov edx ebx +
mov eax 0FFFFFFFFh +
shl edx 5 +
add edx edi +
movzx ecx byte ptr [edx+23h] +
test cl 2 +
jnz loc_4447D1  +
test cl 1 +
jz loc_444930  +
test byte ptr [edx+0Dh] 4 +
mov ebp [edx+18h] +
jz loc_444894  +
movzx eax byte ptr [edx+0Ch] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_4447D1  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+24h] +
test edx edx +
jz loc_444900  +
test byte ptr [eax+23h] 8 +
jz loc_444900  +
lea eax [ebp+8] +
mov [esp+2Ch+var_18] eax +
add eax [edx+4] +
cmp esi eax +
jb loc_444900  +
mov ecx [edx] +
test ecx ecx +
jz loc_444900  +
cmp esi eax +
jz loc_44498A  +
mov [esp+2Ch+var_14] edi +
mov eax 1 +
mov edi [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] ebx +
mov ebx ecx +
jmp loc_4448ED  +
mov ecx [edx+eax*4] +
add ecx edi +
cmp ecx esi +
jz loc_44498A  +
add eax 1 +
cmp eax ebx +
jbe loc_4448E0  +
mov edi [esp+2Ch+var_14] +
mov ebx [esp+2Ch+var_10] +
lea esi [esi+0] +
shl ebx 5 +
add edi ebx +
movzx eax byte ptr [edi+23h] +
add edi 8 +
add esi [edi+14h] +
sub esi ebp +
test al 1 +
jz loc_444976  +
shr al 2 +
and eax 1 +
test byte ptr [edi+5] 10h +
jz loc_444924  +
add eax 1 +
add esi eax +
add eax esi +
jmp loc_4447D1  +
and ecx 8 +
mov ebp [edx+18h] +
jz loc_444948  +
lea edx [ebp+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_4447D1  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+8] +
test byte ptr [edx+5] 2 +
jz loc_444894  +
movzx eax byte ptr [eax+22h] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jnz loc_444894  +
jmp loc_4447D1  +
shr al 2 +
and eax 1 +
add eax esi +
jmp loc_4447D1  +
xor ebx ebx +
jmp loc_444828  +
mov eax 0FFFFFFFEh +
jmp loc_4447D1  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_8] +
mov edx [ebx+28h] +
mov eax [ebx+8Ch] +
test edx edx +
mov ebp [eax+88h] +
jnz loc_4449C4  +
mov eax [ebx+24h] +
mov [ebx+28h] eax +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 300h +
jz loc_4449E6  +
mov [esp+3Ch+var_38] 66Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_404040  +
test byte ptr [ebx+15h] 80h +
jnz loc_4449F2  +
test byte ptr [ebp+15h] 80h +
jz loc_444A00  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+3Ch] +
mov [esp+3Ch+var_28] edx +
mov edx [ebx+38h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] edx +
call sub_4033C0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4449F7  +
mov eax [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_3C] edi +
call eax  +
mov ecx [ebx+28h] +
cmp ecx 8 +
mov edi eax +
jbe loc_444AB4  +
mov [esp+3Ch+var_20] ebp +
mov esi 8 +
mov ebp [esp+3Ch+arg_0] +
jmp loc_444A71  +
mov ecx [ebx+28h] +
add esi 8 +
cmp ecx esi +
jbe loc_444AB0  +
mov edi eax +
mov eax [ebp+4] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+2Ch] +
add ecx esi +
mov [esp+3Ch+var_3C] ecx +
call eax  +
add eax esi +
cmp eax edi +
ja loc_444A65  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSNotInOrder +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_4733A4  +
xor eax eax +
jmp loc_4449F7  +
mov ebp [esp+3Ch+var_20] +
mov edi [ebp+3Ch] +
mov edx [ebp+38h] +
add edx [edi+1Ch] +
mov edi [ebx+3Ch] +
add edx [ebp+24h] +
and edx 0FFFFFFFEh +
sub edx [edi+1Ch] +
sub edx [ebx+38h] +
mov ebp edx +
sub ebp ecx +
test ebp 1 +
jnz loc_444BA0  +
cmp edx eax +
jbe loc_444BD0  +
mov eax [ebx+24h] +
cmp ecx eax +
jz loc_4449F2  +
mov edx [esp+3Ch+arg_0] +
add ecx 8 +
cmp eax ecx +
mov edx [edx+4] +
mov edi [edx+1B0h] +
jz loc_444B17  +
mov [esp+3Ch+var_38] 69Eh +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_404040  +
mov eax [edi+1A0h] +
test eax eax +
jz loc_444C00  +
mov eax [esp+3Ch+arg_0] +
lea edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_20] edx +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov ebp [eax+30h] +
mov eax [edi+1A0h] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
lea ecx [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call ebp  +
mov ecx [ebx+3Ch] +
mov [esp+3Ch+var_28] 8 +
mov eax [ebx+28h] +
add eax [ebx+38h] +
mov edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4033C0  +
jmp loc_4449F7  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSInvalidInput +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_4733A4  +
mov [esp+3Ch+var_3C] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_4449F7  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSPointsPastEn +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_4733A4  +
mov [esp+3Ch+var_3C] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_4449F7  +
mov [esp+3Ch+var_38] 6A0h +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_404040  +
jmp loc_444B25  +
***
push esi  +
push esi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+5Ch+arg_4] +
mov esi [esp+5Ch+arg_0] +
mov ebx [eax+1Ch] +
movzx eax byte ptr [eax+3] +
mov edi [ebx+0A4h] +
mov byte ptr [esp+5Ch+var_34] al +
and eax 6 +
jz loc_445E01  +
test edi edi +
jz loc_445E01  +
cmp al 4 +
jz loc_445E10  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_445ED8  +
mov edx [ebx+0A8h] +
mov eax 8 +
cmp edx [ebx+0B4h] +
lea ecx ds:0Ch[edx*8] +
cmovz eax ecx +
mov [esp+5Ch+var_5C] eax +
xor ebp ebp +
call sub_408000  +
test eax eax +
mov [esp+5Ch+var_20] eax +
jz loc_445DF7  +
mov [esp+5Ch+var_58] offset a_eh_frame +
mov [esp+5Ch+var_5C] esi +
call sub_402CB0  +
test eax eax +
jz loc_445F28  +
mov ebp [esp+5Ch+var_20] +
lea ecx [esp+5Ch+var_14] +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
mov byte ptr [ebp+0] 1 +
mov edx [esi+4] +
mov edx [edx+1B0h] +
mov edx [edx+128h] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_44] ecx +
mov [esp+5Ch+var_48] 4 +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call edx  +
mov [ebp+1] al +
mov ebp [ebx+0BCh] +
test ebp ebp +
jz loc_445C01  +
mov eax [ebx+0B4h] +
cmp [ebx+0A8h] eax +
jz loc_445EB0  +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 0FFh +
mov byte ptr [eax+3] 0FFh +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
lea edx [ebp+4] +
mov eax [eax+30h] +
mov [esp-10h+arg_0] edx +
mov edx [esp+48h] +
mov [esp+0] edx +
call eax  +
cmp byte ptr [ebp+2] 0FFh +
jz loc_445DA1  +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
mov ecx [ebx+0B4h] +
mov edx ebp +
mov eax [eax+30h] +
add edx 8 +
mov [esp-10h+arg_0] edx +
mov [esp+0] ecx +
call eax  +
mov eax [ebx+0BCh] +
mov edx [ebx+0B4h] +
mov dword ptr [esp+0Ch] offset sub_442590 +
mov [esp-10h+arg_4] 0Ch +
mov [esp+0] eax +
mov [esp-10h+arg_0] edx +
call qsort  +
lea eax [ebp+10h] +
xor ebp ebp +
mov [esp+2Ch] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov [esp+30h] edi +
jmp loc_445D2D  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
lea ecx [edi-4] +
mov [esp-10h+arg_0] ecx +
mov [esp+0] eax +
call edx  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp+8] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jz loc_445EC1  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
mov [esp-10h+arg_0] edi +
mov [esp+0] eax +
call edx  +
mov ecx [esp+28h] +
test ecx ecx +
jz loc_445D1A  +
mov edx [ebx+0BCh] +
lea ecx [edx+ebp-0Ch] +
mov eax [ecx+4] +
add eax [ecx] +
cmp [edx+ebp] eax +
mov eax 1 +
cmovnb eax [esp+38h] +
mov [esp+38h] eax +
mov eax [esp+28h] +
add ebp 0Ch +
add dword ptr [esp+2Ch] 8 +
add eax 1 +
mov [esp+28h] eax +
mov eax [esp+28h] +
cmp eax [ebx+0B4h] +
jnb loc_445D77  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jnz loc_445CA1  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_445CA1  +
mov edx [esp+34h] +
mov edi [esp+30h] +
test edx edx +
jnz loc_445F10  +
mov eax [esp+38h] +
test eax eax +
jnz loc_445EF5  +
mov eax [esp+34h] +
or eax [esp+38h] +
jnz loc_445EE2  +
mov ebp 1 +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov edi [edi+38h] +
mov dword ptr [esp+10h] 0 +
mov [esp-10h+arg_0] eax +
mov [esp+0] esi +
mov [esp+0Ch] edi +
mov edi [esp+3Ch] +
mov [esp-10h+arg_4] edi +
call sub_4033C0  +
mov [esp+0] edi +
test eax eax +
mov eax 0 +
cmovz ebp eax +
call free  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_445DF7  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov ebp 1 +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [edi+24h] 8 +
jnz loc_445F58  +
lea ebx [esp+5Ch+var_14] +
mov eax ebx +
lea edx [esp+5Ch+var_C] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_445E24  +
mov eax [esi+4] +
mov byte ptr [esp+5Ch+var_14] 2 +
mov ebp [eax+1B0h] +
mov eax [ebp+19Ch] +
test eax eax +
jz loc_445F39  +
mov ecx [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ecx +
call eax  +
mov [esp+49h] al +
mov eax [esi+4] +
mov edx [eax+30h] +
lea eax [esp+4Ch] +
mov [esp-10h+arg_0] eax +
mov eax [edi+3Ch] +
mov eax [eax+24h] +
sub eax 8 +
shr eax 3 +
mov [esp+0] eax +
call edx  +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov ecx [edi+38h] +
mov [esp-10h+arg_4] ebx +
mov [esp+0] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] ecx +
mov [esp-10h+arg_0] eax +
call sub_4033C0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
mov ebp eax +
mov eax ebp +
pop ebp  +
retn   +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 3 +
mov byte ptr [eax+3] 3Bh +
jmp loc_445C0D  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_445CDF  +
mov eax 8 +
jmp loc_445B62  +
mov dword ptr [esp+0] 11h +
xor ebp ebp +
call sub_4040F0  +
jmp loc_445DA6  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_hdr +
call eax  +
jmp loc_445D93  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_h_0 +
call eax  +
jmp loc_445D87  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_445DF7  +
mov [esp+5Ch+var_58] 87Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_25 +
call sub_404040  +
mov eax [ebp+19Ch] +
jmp loc_445E4A  +
mov [esp+5Ch+var_54] offset aWrite_compact_ +
mov [esp+5Ch+var_58] 877h +
mov [esp+5Ch+var_5C] offset a____Binutil_25 +
call sub_404070  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+5Ch+var_58] +
mov eax [eax+0A0h] +
cmp byte ptr [eax+4] 2 +
setz al  +
movzx eax al +
lea eax ds:4[eax*4] +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+14h] +
mov edx [eax+3Ch] +
mov edx [edx+1Ch] +
add edx [eax+38h] +
mov eax [esp+0Ch] +
mov eax [eax+1Ch] +
sub eax edx +
mov edx [esp+1Ch] +
sub eax [esp+18h] +
add eax [esp+10h] +
mov [edx] eax +
mov eax 1Bh +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_446000  +
mov eax [edx+4] +
mov eax [eax+0C8h] +
add esp 1Ch +
jmp eax  +
mov [esp+1Ch+var_1C] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_446044  +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0CCh] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_446084  +
mov dword ptr [esp] 5 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D4h] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov ecx [esp+24h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_4460C1  +
movzx eax byte ptr [ecx+28h] +
and eax 7 +
cmp al 1 +
jz loc_4460D3  +
mov dword ptr [esp] 3 +
call sub_4040F0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D0h] +
add esp 1Ch +
jmp eax  +
***
jmp loc_4460F0  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
test ebx ebx +
jnz loc_446108  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+20h] +
test eax eax +
jz loc_4460FD  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_445FE0  +
test eax eax +
mov esi eax +
jz loc_4460FD  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4460FD  +
mov dword ptr [esp+4] 2Fh +
mov [esp] eax +
call strrchr  +
mov [esp] ebx +
mov dword ptr [esp+4] 2Fh +
lea edx [eax+1] +
test eax eax +
cmovnz esi edx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call sub_45FFB0  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [edx] +
mov eax [esp+44h+arg_8] +
mov esi [esp+44h+arg_0] +
mov ebx [esp+44h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_4461E8  +
mov edi ebx +
mov eax 1 +
or edi esi +
jz loc_4461DA  +
mov ecx [esp+44h+arg_C] +
cmp ebx 0 +
mov edx [ecx] +
jbe loc_4461E2  +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebp +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] offset aDwarfErrorOffs +
call off_4733A4  +
mov [esp+44h+var_44] 11h +
call sub_4040F0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
jb loc_4461DA  +
jmp loc_4461B3  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_402CB0  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jz loc_446260  +
mov eax [esp+44h+var_20] +
mov eax [eax+28h] +
test eax eax +
jz loc_446253  +
mov edx [esp+44h+arg_C] +
test ecx ecx +
mov [edx] eax +
jz loc_4462B1  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] eax +
call sub_44ED20  +
mov edi [esp+44h+arg_8] +
test eax eax +
mov [edi] eax +
jnz loc_44619D  +
xor eax eax +
jmp loc_4461DA  +
mov eax [esp+44h+var_20] +
mov eax [eax+24h] +
jmp loc_446217  +
mov ebp [edx+4] +
test ebp ebp +
jz loc_44628B  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_402CB0  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jnz loc_44620C  +
mov eax [edx] +
mov [esp+44h+var_44] offset aDwarfErrorCanT +
mov [esp+44h+var_40] eax +
call off_4733A4  +
mov [esp+44h+var_44] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_4461DA  +
mov [esp+44h+var_44] eax +
call sub_408000  +
mov ecx [esp+44h+arg_8] +
test eax eax +
mov [ecx] eax +
jz loc_4461D8  +
mov ecx [esp+44h+arg_C] +
mov edx [ecx] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edi +
call sub_4034C0  +
test eax eax +
jnz loc_44619D  +
xor eax eax +
jmp loc_4461DA  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov [esp+38h+var_24] edx +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
mov eax [esi] +
mov [esp+38h+var_34] 1Ch +
mov [esp+38h+var_38] eax +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_4464F2  +
mov dword ptr [eax] 0 +
mov eax [esp+38h+var_24] +
test edi edi +
mov [ebx+4] eax +
mov eax ebp +
mov [ebx+18h] al +
mov eax [esp+38h+arg_4] +
mov [ebx+0Ch] eax +
mov eax [esp+38h+arg_8] +
mov [ebx+10h] eax +
mov eax [esp+38h+arg_C] +
mov [ebx+14h] eax +
movzx eax [esp+38h+arg_10] +
mov [ebx+19h] al +
jz loc_446382  +
cmp byte ptr [edi] 0 +
jnz loc_4464C1  +
mov dword ptr [ebx+8] 0 +
mov eax [esp+38h+var_20] +
test eax eax +
jz loc_4463A9  +
mov eax [eax+8] +
mov edi [eax+4] +
cmp edi [esp+38h+var_24] +
jz loc_446500  +
movzx edx byte ptr [eax+19h] +
test dl dl +
jz loc_4463E3  +
mov [esp+38h+var_38] 0Ch +
call sub_408000  +
test eax eax +
jz loc_4464F2  +
mov edx [esi+1Ch] +
mov edi [esp+38h+var_24] +
mov [eax+8] ebx +
mov [eax+4] edx +
mov [eax] edi +
add dword ptr [esi+0Ch] 1 +
mov [esi+1Ch] eax +
mov eax 1 +
mov [esi+20h] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+4] +
cmp edi ebp +
jb loc_4464A0  +
jz loc_446493  +
mov ecx [esi+20h] +
cmp ebp [ecx+4] +
mov [esp+38h+var_1C] ecx +
ja loc_446440  +
jz loc_4465B3  +
mov ecx [esp+38h+var_1C] +
mov ecx [ecx] +
test ecx ecx +
jz loc_446594  +
cmp ebp [ecx+4] +
ja loc_446594  +
jnz loc_446440  +
movzx edx byte ptr [ecx+18h] +
cmp [ebx+18h] dl +
ja loc_446594  +
lea esi [esi+0] +
jnz loc_446440  +
movzx edx byte ptr [ecx+19h] +
cmp [ebx+19h] dl +
jb loc_446594  +
nop   +
mov edx [eax] +
test edx edx +
jnz loc_446477  +
jmp loc_4465E0  +
cmp ebp [edx+4] +
ja loc_446560  +
lea esi [esi+0] +
jz loc_446540  +
mov ecx [edx] +
test ecx ecx +
jz loc_446590  +
mov edi [edx+4] +
mov eax edx +
mov edx ecx +
cmp ebp edi +
ja loc_446466  +
jnz loc_446450  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
ja loc_446466  +
jnz loc_446450  +
movzx ecx byte ptr [eax+19h] +
cmp [ebx+19h] cl +
jb loc_446466  +
jmp loc_446450  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
jbe loc_4463F4  +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax [esi+20h] +
test eax eax +
jz loc_4465A6  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
call strlen  +
mov edx [esi] +
mov [esp+38h+var_38] edx +
add eax 1 +
mov [esp+38h+var_34] eax +
call sub_406290  +
test eax eax +
mov [ebx+8] eax +
jz loc_4464F2  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call strcpy  +
jmp loc_446389  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebp +
movzx edx byte ptr [eax+19h] +
cmp [eax+18h] cl +
jnz loc_4463A5  +
movzx ecx dl +
cmp ecx dword ptr [esp+38h+arg_10] +
jnz loc_4463A5  +
cmp eax [esi+20h] +
jz loc_4465E9  +
mov eax [eax] +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax 1 +
jmp loc_4463DB  +
movzx ecx byte ptr [edx+18h] +
cmp [ebx+18h] cl +
ja loc_446560  +
jnz loc_446466  +
movzx ecx byte ptr [edx+19h] +
cmp [ebx+19h] cl +
jnb loc_446466  +
lea esi [esi+0] +
mov ecx [eax] +
mov edx eax +
mov eax [esp+38h+var_20] +
mov [esi+20h] edx +
mov esi [esp+38h+var_24] +
mov [ebx] ecx +
mov [edx] ebx +
cmp esi [eax] +
jnb loc_4464B4  +
mov eax [esp+38h+var_20] +
mov esi [esp+38h+var_24] +
mov [eax] esi +
jmp loc_4464B4  +
xor ecx ecx +
jmp loc_446564  +
mov eax [esp+38h+var_1C] +
mov [ebx] ecx +
mov [eax] ebx +
mov eax 1 +
jmp loc_4463DB  +
mov [esi+20h] ebx +
mov eax 1 +
jmp loc_4463DB  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+18h] +
cmp [ebx+18h] cl +
ja loc_446440  +
jnz loc_446406  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+19h] +
cmp [ebx+19h] cl +
jb loc_446440  +
jmp loc_446406  +
mov edx eax +
xor ecx ecx +
jmp loc_446564  +
mov [esi+20h] ebx +
lea esi [esi+0] +
jmp loc_446525  +
***
push ebx  +
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_446694  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_409320  +
test eax eax +
jz loc_4466A8  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_409270  +
test eax eax +
jnz loc_446670  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+34h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_4466D0  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+28h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_4466F0  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_446710  +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_446750  +
mov eax 1 +
ja loc_446747  +
mov edx [edx+8] +
mov ecx [ecx+8] +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jb loc_446747  +
ja loc_446750  +
movzx edx byte ptr [edx+18h] +
cmp [ecx+18h] dl +
jb loc_446747  +
setnbe al  +
movzx eax al +
neg eax  +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
add eax 0Ch +
cmp [eax+4] edx +
ja loc_44676D  +
cmp edx [eax+8] +
jb loc_446776  +
mov eax [eax] +
test eax eax +
jnz loc_446763  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [edx+18h] +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_1C] eax +
call sub_402CB0  +
test eax eax +
jz loc_4467A6  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
test eax eax +
jz loc_4467BD  +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ebx +
call sub_402CB0  +
test eax eax +
jnz loc_44679E  +
mov eax [ebx+64h] +
mov ebp offset a_gnu_linkonc_0 +
mov ebx 11h +
test eax eax +
jz loc_44679E  +
nop   +
mov esi [eax] +
mov edi ebp +
mov ecx ebx +
cmps   +
jz loc_44679E  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4467D0  +
xor eax eax +
jmp loc_44679E  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
test ecx ecx +
jz loc_44686A  +
mov ebx [ecx+0Ch] +
test ebx ebx +
jz loc_446860  +
mov eax [edx+18h] +
mov [esp+28h+var_1C] eax +
jmp loc_44683C  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_446827  +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call strcmp  +
test eax eax +
jz loc_446852  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
jz loc_446852  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_446860  +
mov esi [ebx] +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_446810  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_446780  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
cmp ecx edi +
jz loc_4468D1  +
mov esi [edx+8] +
mov ebx edx +
test esi esi +
jnz loc_4468BE  +
mov [edx+4] ecx +
mov eax 1 +
mov [edx+8] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edi [ebx+4] +
jz loc_4468E0  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4468F0  +
mov esi [ebx+8] +
cmp ecx esi +
jnz loc_4468B0  +
mov [ebx+8] edi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+4] ecx +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax] +
mov [esp-0Ch+arg_0] 0Ch +
mov [esp-0Ch+arg_8] ecx +
mov [esp-0Ch+arg_4] edx +
mov [esp+0] eax +
call sub_406290  +
test eax eax +
jz loc_44692E  +
mov ecx [esp-0Ch+arg_8] +
mov edx [esp-0Ch+arg_4] +
mov [eax+8] edi +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
jmp loc_4468A2  +
***
push ebx  +
sub esp 10h +
mov eax [eax+4] +
mov esi [esp+10h+arg_0] +
cmp dword ptr [eax+4] 5 +
jz loc_446997  +
movzx ebx dl +
add ebx ecx +
cmp esi ebx +
jb loc_4469E0  +
cmp dl 4 +
jz loc_446A20  +
cmp dl 8 +
jz loc_446A00  +
cmp dl 2 +
jz loc_446A30  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 346h +
mov [esp+10h+var_10] offset a____Binutil_24 +
call sub_404070  +
mov ebx [eax+1B0h] +
movzx edi dl +
add edi ecx +
movzx ebx byte ptr [ebx+1ACh] +
shr bl 7 +
cmp esi edi +
jb loc_4469E0  +
test bl bl +
jz loc_446960  +
cmp dl 4 +
jz loc_446A05  +
cmp dl 8 +
jz loc_4469F0  +
cmp dl 2 +
jz loc_446A10  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 338h +
mov [esp+10h+var_10] offset a____Binutil_24 +
call sub_404070  +
nop   +
xor eax eax +
xor edx edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+20h] +
mov [esp+10h+arg_0] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [eax+1Ch] +
jmp loc_4469F3  +
mov eax [eax+2Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_4469E4  +
mov eax [eax+38h] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_4469E4  +
mov eax [eax+28h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_4469E4  +
mov eax [eax+34h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_4469E4  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_14] edx +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+50h] +
mov edi [eax+54h] +
test edi edi +
jz loc_446AFF  +
add esi edi +
jb loc_446B33  +
movzx edx byte ptr [ebx+58h] +
add edi [eax+58h] +
lea eax [ebx+8] +
mov [esp+2Ch+var_10] eax +
movzx ecx dl +
mov [esp+2Ch+var_18] edi +
jmp loc_446A8E  +
cmp ebp 0FFFFFFFFh +
jnz loc_446AD6  +
mov [esp+2Ch+var_1C] eax +
mov edi [esp+2Ch+var_18] +
lea eax [esi+ecx*2] +
cmp edi eax +
jb loc_446B33  +
mov eax [ebx+8] +
mov ecx esi +
mov [esp+2Ch+var_2C] edi +
call sub_446940  +
movzx edx byte ptr [ebx+58h] +
mov [esp+2Ch+var_2C] edi +
mov ebp eax +
movzx eax dl +
add esi eax +
mov eax [ebx+8] +
mov ecx esi +
call sub_446940  +
movzx edx byte ptr [ebx+58h] +
movzx ecx dl +
add esi ecx +
mov edi eax +
or edi ebp +
jz loc_446B40  +
cmp eax 0FFFFFFFFh +
jnz loc_446A85  +
mov edi [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_14] +
add eax edi +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
lea ecx [ebp+edi+0] +
call sub_446880  +
test eax eax +
jz loc_446B33  +
movzx edx byte ptr [ebx+58h] +
mov eax edi +
movzx ecx dl +
jmp loc_446A8A  +
mov edi [eax+8] +
lea edx [eax+58h] +
add eax 54h +
mov ecx [eax-1Ch] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+8] +
mov [esp+2Ch+var_20] edx +
add edi 58h +
mov [esp+2Ch+var_2C] 0 +
mov edx edi +
mov [esp+2Ch+var_28] 0 +
call sub_446180  +
test eax eax +
jnz loc_446B4D  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
mov edi [eax+54h] +
jmp loc_446A66  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edi [ecx+8] +
mov eax [esp+40h+arg_4] +
cmp [esp+40h+arg_0] eax +
jnb loc_446C30  +
cmp edx 0Fh +
mov [esi+4] edx +
jz loc_446CE5  +
ja loc_446BE0  +
cmp edx 8 +
jz loc_447175  +
ja loc_446C55  +
cmp edx 4 +
lea esi [esi+0] +
jz loc_447055  +
jbe loc_446D60  +
cmp edx 6 +
nop   +
jz loc_446C0C  +
ja loc_446CC3  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+2] +
cmp [esp+40h+arg_4] ebp +
jnb loc_446F57  +
mov [esi+0Ch] ebx +
mov eax ebp +
mov [esi+8] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 16h +
jz loc_4470B0  +
ja loc_446C95  +
cmp edx 12h +
jz loc_446BB8  +
jbe loc_446D24  +
cmp edx 14h +
lea esi [esi+0] +
jz loc_446CC3  +
ja loc_446CE5  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+4] +
cmp [esp+40h+arg_4] ebp +
jb loc_446BCD  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_4466D0  +
mov ecx eax +
jmp loc_446BCD  +
mov [esp+40h+var_40] offset aDwarfErrorInfo +
call off_4733A4  +
mov [esp+40h+var_40] 11h +
call sub_4040F0  +
mov eax [esp+40h+arg_0] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 0Bh +
jz loc_446C76  +
jbe loc_446F70  +
cmp edx 0Dh +
jz loc_447040  +
lea esi [esi+0] +
ja loc_446EB4  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+1] +
cmp [esp+40h+arg_4] ebp +
jb loc_446BCD  +
movzx ecx byte ptr [eax] +
xor ebx ebx +
jmp loc_446BCD  +
cmp edx 19h +
jz loc_447134  +
nop   +
jbe loc_446FC5  +
cmp edx 1F20h +
jz loc_447100  +
cmp edx 1F21h +
jz loc_446E11  +
cmp edx 20h +
jnz loc_446D36  +
mov eax [esp+40h+arg_0] +
xor edx edx +
lea ebp [eax+8] +
xor eax eax +
cmp [esp+40h+arg_4] ebp +
jnb loc_447150  +
mov [esi+8] eax +
mov eax ebp +
mov [esi+0Ch] edx +
jmp loc_446C4D  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] eax +
call sub_408BC0  +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
add eax [esp+40h+var_14] +
jmp loc_446C4D  +
cmp edx 10h +
jz loc_446DD4  +
cmp edx 11h +
jz loc_446C76  +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] offset aDwarfErrorIn_0 +
call off_4733A4  +
mov [esp+40h+var_40] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_446C4D  +
cmp edx 1 +
jz loc_446DA8  +
cmp edx 3 +
jnz loc_446D36  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_446D53  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+2] +
cmp [esp+40h+arg_4] ecx +
jnb loc_4471A4  +
mov dword ptr [ebx] 0 +
mov ebp ecx +
xor ecx ecx +
mov [ebx+4] ecx +
mov eax ebp +
mov [esi+8] ebx +
jmp loc_446C4D  +
mov edi [esp+40h+arg_4] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov ecx [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
call sub_446940  +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+58h] +
add eax ebp +
jmp loc_446C4D  +
mov eax [ecx+54h] +
sub eax 3 +
cmp eax 1 +
ja loc_446DA8  +
cmp byte ptr [ecx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_447339  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_44735D  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx eax byte ptr [ebx+59h] +
add eax [esp+40h+arg_0] +
jmp loc_446C4D  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_447270  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
jz loc_4471D5  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_44729D  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+20h] +
mov [esp+40h+var_14] ecx +
test eax eax +
jz loc_4472B8  +
mov ecx [ebp+8] +
mov eax [ebx+50h] +
lea edx [ecx+78h] +
lea ecx [ebp+28h] +
mov eax [eax+20h] +
mov [esp+40h+var_34] ecx +
lea ecx [ebp+24h] +
mov [esp+40h+var_38] ecx +
mov ecx [esp+40h+var_2C] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] ecx +
xor ecx ecx +
call sub_446180  +
test eax eax +
jz loc_446EA0  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+28h] +
ja loc_446EA0  +
cmp edi eax +
jb loc_447161  +
nop   +
mov ebp [esp+40h+var_14] +
xor edi edi +
mov eax [esp+40h+arg_0] +
mov [esi+8] edi +
add eax ebp +
jmp loc_446C4D  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_447270  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_28] edi +
jz loc_447201  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_447279  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+8] +
mov [esp+40h+var_14] ecx +
mov ecx [ebp+38h] +
mov [esp+40h+var_40] edi +
lea edx [eax+70h] +
lea eax [ebp+50h] +
mov [esp+40h+var_34] eax +
lea eax [ebp+4Ch] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_2C] +
mov [esp+40h+var_3C] eax +
mov eax [esp+40h+var_28] +
call sub_446180  +
test eax eax +
jz loc_446EA0  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+50h] +
ja loc_446EA0  +
cmp edi eax +
jnb loc_446EA0  +
add edi [ebp+4Ch] +
cmp byte ptr [edi] 0 +
jz loc_446EA0  +
mov ebp [esp+40h+var_14] +
jmp loc_446EA6  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_4466B0  +
mov ecx eax +
jmp loc_446BCD  +
cmp edx 9 +
jz loc_446FD7  +
cmp edx 0Ah +
jnz loc_446D36  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_406290  +
test eax eax +
jz loc_446D53  +
mov edi [esp+40h+arg_0] +
lea edx [edi+1] +
cmp [esp+40h+arg_4] edx +
jb loc_447195  +
movzx ebp byte ptr [edi] +
mov [eax] ebp +
add ebp edx +
cmp [esp+40h+arg_4] ebp +
jb loc_44738D  +
mov [eax+4] edx +
mov [esi+8] eax +
mov eax ebp +
jmp loc_446C4D  +
cmp edx 17h +
jz loc_447100  +
cmp edx 18h +
jnz loc_446D36  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_446D53  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_408BC0  +
mov ecx [esp+40h+arg_0] +
xor edx edx +
add ecx [esp+40h+var_14] +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
mov [ebx] eax +
mov eax ebp +
cmovnb edx ecx +
mov [ebx+4] edx +
mov [esi+8] ebx +
jmp loc_446C4D  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_30] eax +
jmp loc_446CF5  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_446D53  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+4] +
cmp [esp+40h+arg_4] ecx +
jb loc_446D91  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_4466D0  +
mov ecx [esp+40h+var_2C] +
mov [ebx] eax +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
jnb loc_446D9B  +
mov ecx ebp +
jmp loc_446D97  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_408BC0  +
mov edx [esp+40h+arg_0] +
mov ecx ebx +
mov edi [esp+40h+arg_4] +
add edx [esp+40h+var_14] +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] edx +
mov edx eax +
mov eax esi +
call sub_446B60  +
jmp loc_446C4D  +
cmp byte ptr [ebx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_4471B9  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_44725F  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+59h] +
mov eax [esp+40h+arg_0] +
add eax ebp +
jmp loc_446C4D  +
mov dword ptr [esi+8] 1 +
mov eax [esp+40h+arg_0] +
mov dword ptr [esi+0Ch] 0 +
jmp loc_446C4D  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_4466F0  +
jmp loc_446CD8  +
add edi [ebp+24h] +
cmp byte ptr [edi] 0 +
jnz loc_446F4E  +
lea esi [esi+0] +
jmp loc_446EA0  +
mov eax [esp+40h+arg_0] +
cmp byte ptr [eax] 0 +
jnz loc_447236  +
mov eax 1 +
xor edx edx +
mov [esi+8] edx +
add eax [esp+40h+arg_0] +
jmp loc_446C4D  +
mov dword ptr [eax] 0 +
mov ebp edx +
xor edx edx +
jmp loc_446FB8  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_4466B0  +
jmp loc_447090  +
add eax 4 +
xor edx edx +
xor ecx ecx +
cmp [esp+40h+arg_4] eax +
jnb loc_447324  +
mov [esi+8] edx +
mov [esi+0Ch] ecx +
jmp loc_447125  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_446E44  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_4466D0  +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov edi eax +
jmp loc_446E4E  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_446EEB  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_4466D0  +
mov edi [ebx+8] +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_28] edi +
mov edi eax +
jmp loc_446EF5  +
mov eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_4] +
add eax 1 +
jmp loc_447250  +
add eax 1 +
cmp byte ptr [eax-1] 0 +
jz loc_447317  +
cmp eax edx +
jnz loc_447243  +
sub eax [esp+40h+arg_0] +
xor edx edx +
jmp loc_447189  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_4466F0  +
jmp loc_44711F  +
xor ebp ebp +
xor edi edi +
jmp loc_446EA6  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_4466F0  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov eax [ebx+8] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_28] eax +
jmp loc_446EF5  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_4466F0  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov [esp+40h+var_2C] edx +
jmp loc_446E4E  +
mov eax [ebx+8] +
mov [esp+40h+var_3C] offset aHomeJenkinsM_0 +
mov [esp+40h+var_40] eax +
call sub_4066D0  +
test eax eax +
mov [esp+40h+var_28] eax +
jz loc_446EA0  +
mov eax [esp+40h+var_28] +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] eax +
call sub_405DC0  +
test eax eax +
jz loc_447376  +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_24] eax +
call sub_407110  +
mov edx [esp+40h+var_24] +
test eax eax +
jz loc_44736E  +
mov [ebp+20h] edx +
jmp loc_446E5D  +
sub eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_0] +
jmp loc_447189  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_4466D0  +
xor ecx ecx +
mov edx eax +
jmp loc_4471CA  +
lea ecx [eax+4] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jb loc_446DFE  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_4466D0  +
xor edx edx +
jmp loc_446DFE  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_4466F0  +
jmp loc_446DFE  +
mov [esp+40h+var_40] edx +
call sub_405F00  +
mov eax [esp+40h+var_28] +
xor edi edi +
mov [esp+40h+var_40] eax +
call free  +
mov ebp [esp+40h+var_14] +
jmp loc_446EA6  +
mov edx ebp +
jmp loc_44719B  +
***
push esi  +
push ebx  +
sub esp 2Ch +
lea ecx [edx-1] +
cmp ecx [eax+4] +
jb loc_4473D0  +
test edx edx +
jnz loc_447490  +
mov [esp+2Ch+var_2C] offset aUnknown_5 +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [eax+18h] +
mov ebx [edx] +
movzx ecx byte ptr [ebx] +
cmp cl 5Ch +
jz loc_447480  +
cmp cl 2Fh +
jz loc_447480  +
test cl cl +
jnz loc_447472  +
mov edx [edx+4] +
test edx edx +
jz loc_447407  +
cmp edx [eax+8] +
jbe loc_4474A2  +
mov edi [eax+10h] +
test edi edi +
jz loc_447480  +
xor esi esi +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov ebp eax +
call strlen  +
add ebp eax +
test esi esi +
jz loc_447528  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea eax [ebp+eax+3] +
mov [esp+2Ch+var_2C] eax +
call sub_408000  +
mov ebp eax +
xor eax eax +
test ebp ebp +
jz loc_4473C3  +
mov [esp+2Ch+var_1C] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] offset aSSS_0 +
call sprintf  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 3Ah +
jnz loc_4473F7  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] ebx +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] offset aDwarfErrorMang +
call off_4733A4  +
jmp loc_4473B7  +
mov ecx [eax+14h] +
test ecx ecx +
jz loc_447407  +
mov esi [ecx+edx*4-4] +
test esi esi +
jz loc_447407  +
movzx edx byte ptr [esi] +
cmp dl 5Ch +
jz loc_4474D5  +
cmp dl 2Fh +
jz loc_4474D5  +
test dl dl +
jnz loc_447520  +
mov edi [eax+10h] +
test edi edi +
jnz loc_447410  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call strlen  +
lea ebp [edi+eax+2] +
mov [esp+2Ch+var_2C] ebp +
call sub_408000  +
mov edi eax +
xor eax eax +
test edi edi +
jz loc_4473C3  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset aSS_7 +
mov [esp+2Ch+var_2C] edi +
call sprintf  +
mov eax edi +
jmp loc_4473C3  +
cmp byte ptr [esi+1] 3Ah +
jnz loc_4474CA  +
jmp loc_4474D5  +
add ebp 2 +
mov esi edi +
jmp loc_4474EB  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 7Ch +
mov ecx [edx+38h] +
mov [esp+80h+var_34] eax +
mov eax [eax+8] +
mov edi eax +
mov [esp+80h+var_68] eax +
mov eax [edx+8] +
lea edx [eax+28h] +
lea eax [ebx+48h] +
mov [esp+80h+var_74] eax +
lea eax [ebx+44h] +
mov [esp+80h+var_78] eax +
mov eax [esi+38h] +
mov [esp+80h+var_7C] 0 +
mov [esp+80h+var_80] eax +
mov eax edi +
call sub_446180  +
test eax eax +
jz loc_44766D  +
mov edi [esp+80h+var_68] +
mov [esp+80h+var_7C] 24h +
mov [esp+80h+var_80] edi +
call sub_406290  +
test eax eax +
mov esi eax +
mov [esp+80h+var_6C] eax +
jz loc_44766D  +
mov [eax] edi +
mov eax [esp+80h+var_34] +
mov eax [eax+28h] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+8] 0 +
mov [esi+10h] eax +
mov eax [ebx+48h] +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+1Ch] 0 +
cmp eax 0Fh +
mov dword ptr [esi+20h] 0 +
jbe loc_4481BE  +
mov esi [esp+80h+var_34] +
mov edx [ebx+44h] +
mov edi [esi+38h] +
lea ebp [edx+eax] +
mov eax [esp+80h+var_68] +
add edi edx +
lea esi [edi+4] +
add eax 4 +
cmp ebp esi +
mov [esp+80h+var_30] eax +
jnb loc_447677  +
mov eax [esp+80h+var_34] +
cmp byte ptr [eax+58h] 8 +
jz loc_447EE7  +
mov edi 4 +
xor eax eax +
lea ebp [esi+eax] +
xor eax eax +
lea ebx [esi+2] +
cmp ebp ebx +
jnb loc_4476D2  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorUnha +
call off_4733A4  +
mov [esp+80h+var_80] 11h +
call sub_4040F0  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] offset aDwarfErrorRanO +
call off_4733A4  +
mov dword ptr [esp+0] 11h +
call sub_4040F0  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+80h+var_30] +
mov edx edi +
call sub_4466D0  +
cmp eax 0FFFFFFFFh +
jnz loc_44824C  +
add edi 0Ch +
xor eax eax +
cmp ebp edi +
jnb loc_447EFE  +
mov esi edi +
mov edi 8 +
mov edx [ebx+48h] +
cmp edx eax +
jnb loc_44761D  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_78] edx +
mov [esp+80h+var_80] offset aDwarfErrorLine +
call off_4733A4  +
mov [esp+80h+var_80] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_44764C  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_4466B0  +
mov ecx eax +
lea eax [eax-2] +
cmp ax 2 +
ja loc_448244  +
xor eax eax +
cmp cx 4 +
setz al  +
lea eax [edi+eax+5] +
add eax ebx +
cmp ebp eax +
jbe loc_4481E2  +
cmp edi 4 +
jz loc_447F74  +
add esi 0Ah +
cmp ebp esi +
jnb loc_447FCF  +
add ebx edi +
lea eax [ebx+1] +
cmp ebp eax +
mov [esp+80h+var_40] 0 +
jb loc_44772F  +
movzx esi byte ptr [ebx] +
mov [esp+80h+var_40] esi +
cmp cx 4 +
jnz loc_447760  +
lea eax [ebx+2] +
cmp ebp eax +
jnb loc_447ED2  +
mov [esp+80h+var_80] offset aDwarfErrorInva +
call off_4733A4  +
mov [esp+80h+var_80] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_44764C  +
mov [esp+80h+var_49] 1 +
lea edx [eax+2] +
cmp ebp edx +
mov [esp+80h+var_38] 0 +
jb loc_447785  +
movzx esi byte ptr [eax+1] +
lea edx [esi-80h] +
movzx edx dl +
lea esi [edx-80h] +
mov [esp+80h+var_38] esi +
lea edx [eax+3] +
cmp ebp edx +
jb loc_447E75  +
movzx ecx byte ptr [eax+2] +
movzx esi cl +
mov [esp+80h+var_4A] cl +
mov [esp+80h+var_28] esi +
lea esi [eax+4] +
cmp ebp esi +
jb loc_447E5E  +
movzx eax byte ptr [eax+3] +
mov [esp+80h+var_4B] al +
mov [esp+80h+var_5C] eax +
sub eax 1 +
add eax esi +
cmp ebp eax +
jbe loc_447654  +
mov edi [esp+80h+var_5C] +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] eax +
call sub_406290  +
cmp edi 1 +
mov [esp+80h+var_2C] eax +
mov ebx eax +
mov byte ptr [eax] 1 +
jbe loc_44780E  +
add eax 1 +
add ebx edi +
mov edx esi +
lea esi [esi+0] +
add edx 1 +
xor ecx ecx +
cmp ebp edx +
jb loc_4477FD  +
movzx ecx byte ptr [edx-1] +
mov [eax] cl +
add eax 1 +
cmp eax ebx +
jnz loc_4477F0  +
mov eax [esp+80h+var_5C] +
lea esi [esi+eax-1] +
cmp esi ebp +
jnb loc_447DC0  +
movzx eax byte ptr [esi] +
test al al +
jz loc_447DE7  +
test al al +
lea ebx [esi+1] +
jnz loc_44783D  +
jmp loc_447C01  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_447C01  +
cmp ebp ebx +
nop   +
ja loc_447830  +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
cmp ebp ebx +
jbe loc_447DD8  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_447D69  +
mov edi [esp+80h+var_6C] +
lea esi [esp+80h+var_14] +
test al al +
lea edx [ebx+1] +
jnz loc_44787E  +
jmp loc_447C80  +
add edx 1 +
cmp byte ptr [edx-1] 0 +
jz loc_447C80  +
cmp ebp edx +
ja loc_447871  +
mov edi edx +
sub edi ebx +
mov [esp+80h+var_14] edi +
add edi ebx +
cmp ebp edi +
jbe loc_44809C  +
mov eax [esp+80h+var_5C] +
mov [esp+80h+var_48] 0FFh +
sub [esp+80h+var_48] eax +
mov [esp+80h+var_64] ebp +
mov eax [esp+80h+var_6C] +
mov [esp+80h+var_44] 0 +
mov edx [eax+4] +
test edx edx +
jnz loc_447FE7  +
mov [esp+80h+var_50] 0 +
xor esi esi +
mov [esp+80h+var_54] 0FFFFFFFFh +
mov [esp+80h+var_5C] 0 +
mov [esp+80h+var_3C] 0 +
mov [esp+80h+var_58] 1 +
mov byte ptr [esp+80h+var_60] 0 +
nop   +
lea ebx [edi+1] +
cmp [esp+80h+var_64] ebx +
jb loc_4479CE  +
movzx ecx byte ptr [edi] +
cmp cl [esp+80h+var_4B] +
movzx ebp cl +
jb loc_4479DC  +
sub cl [esp+80h+var_4B] +
cmp [esp+80h+var_4A] 0 +
jz loc_447B74  +
cmp [esp+80h+var_49] 1 +
jz loc_447DA8  +
movzx ecx cl +
movzx edx byte ptr [esp+80h+var_60] +
mov eax ecx +
movzx edi [esp+80h+var_49] +
div  [esp+80h+var_4A] +
movzx eax al +
add eax edx +
cdq   +
idiv  edi +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax ah +
add eax [esp+80h+var_38] +
add [esp+80h+var_58] eax +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 0 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_446310  +
test eax eax +
jz loc_447B74  +
mov eax [esp+80h+var_54] +
mov edi ebx +
lea ebx [edi+1] +
mov [esp+80h+var_5C] 0 +
cmp eax esi +
cmova eax esi +
mov [esp+80h+var_54] eax +
mov eax [esp+80h+var_50] +
cmp eax esi +
cmovb eax esi +
cmp [esp+80h+var_64] ebx +
mov [esp+80h+var_50] eax +
jnb loc_4478FD  +
xor ecx ecx +
xor ebp ebp +
cmp cl [esp+80h+var_4B] +
jnb loc_44790D  +
cmp ebp 9 +
ja loc_447DFD  +
jmp ds:off_48CBF0[ebp*4]  +
mov edi ebx +
nop   +
jmp loc_4478F0  +
add edi 3 +
xor eax eax +
cmp [esp+80h+var_64] edi +
jnb loc_447FBF  +
add esi eax +
mov byte ptr [esp+80h+var_60] 0 +
jmp loc_4478F0  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408BC0  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov [esp+80h+var_3C] eax +
jmp loc_4478F0  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408BC0  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov ebp eax +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_447A87  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov edx ebp +
call sub_4473A0  +
mov [esp+80h+var_44] eax +
jmp loc_4478F0  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 1 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408BC0  +
add [esp+80h+var_58] eax +
mov edi [esp+80h+var_14] +
add edi ebx +
jmp loc_4478F0  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
cmp [esp+80h+var_49] 1 +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
jz loc_447FAE  +
call sub_408BC0  +
movzx edx byte ptr [esp+80h+var_60] +
movzx ecx [esp+80h+var_49] +
add eax edx +
xor edx edx +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
mov esi eax +
jmp loc_447AC7  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov ecx [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] ecx +
call sub_408BC0  +
add ebx [esp+80h+var_14] +
lea edi [ebx+1] +
cmp [esp+80h+var_64] edi +
jnb loc_447E87  +
mov [esp+80h+var_80] offset aDwarfErrorMa_0 +
call off_4733A4  +
mov [esp+80h+var_80] 11h +
call sub_4040F0  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_447B84  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_447B97  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
test eax eax +
jz loc_447BAA  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+14h] +
test eax eax +
jz loc_44766D  +
mov [esp+80h+var_80] eax +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+80h+var_49] 1 +
jz loc_447F97  +
mov eax [esp+80h+var_48] +
mov edi ebx +
movzx ecx byte ptr [esp+80h+var_60] +
cdq   +
idiv  [esp+80h+var_28] +
xor edx edx +
add eax ecx +
movzx ecx [esp+80h+var_49] +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
jmp loc_4478F0  +
mov edi [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
mov ecx [edi+8] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_447C50  +
mov eax [edi+14h] +
mov edi [esp+80h+var_6C] +
lea edx [ecx+1] +
cmp ebp ebx +
mov [edi+8] edx +
mov [eax+ecx*4] esi +
jbe loc_447DC2  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_447DE9  +
mov esi ebx +
jmp loc_447821  +
mov edi [esp+80h+var_6C] +
lea edx ds:14h[ecx*4] +
mov eax [edi+14h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_408090  +
test eax eax +
jz loc_447B84  +
mov [edi+14h] eax +
mov ecx [edi+8] +
jmp loc_447C26  +
mov ecx [edi+4] +
sub edx ebx +
lea eax [ebx+edx] +
mov [esp+80h+var_60] eax +
mov eax 0CCCCCCCDh +
mov [esp+80h+var_14] edx +
mul  ecx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_447D80  +
mov eax [edi+18h] +
shl ecx 4 +
add ecx eax +
mov eax [esp+80h+var_68] +
mov [ecx] ebx +
mov ebx [esp+80h+var_60] +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_64] ecx +
call sub_408BC0  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_14] +
add edx ebx +
mov ebx [edi+4] +
mov [ecx+4] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_64] edx +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_408BC0  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [esp+80h+var_64] edx +
mov [ebx+8] eax +
mov ebx [edi+4] +
mov eax [esp+80h+var_68] +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_408BC0  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov ebx edx +
add dword ptr [edi+4] 1 +
cmp ebp edx +
jbe loc_447DD8  +
movzx eax byte ptr [edx] +
test al al +
jnz loc_447865  +
mov [esp+80h+var_14] 1 +
mov edi 1 +
jmp loc_44788A  +
mov eax [edi+18h] +
add ecx 5 +
shl ecx 4 +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_408090  +
test eax eax +
jz loc_447B84  +
mov [edi+18h] eax +
mov ecx [edi+4] +
jmp loc_447CA8  +
movzx ecx cl +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax al +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_44794D  +
mov ebx esi +
mov esi ebx +
xor ebx ebx +
add ebx esi +
cmp ebp ebx +
mov [esp+80h+var_14] 0 +
ja loc_447852  +
mov [esp+80h+var_14] 0 +
xor edi edi +
jmp loc_44788A  +
mov ebx esi +
mov esi ebx +
mov ebx 1 +
mov [esp+80h+var_14] 1 +
jmp loc_447848  +
add ebp [esp+80h+var_2C] +
mov edi ebx +
xor ebx ebx +
mov eax ebp +
cmp byte ptr [eax] 0 +
lea ebp [esp+80h+var_14] +
jz loc_4478F0  +
mov [esp+80h+var_24] esi +
mov esi edi +
mov edi ebp +
mov ebp eax +
nop   +
mov eax [esp+80h+var_64] +
add ebx 1 +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] edi +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408BC0  +
movzx eax byte ptr [ebp+0] +
add esi [esp+80h+var_14] +
cmp eax ebx +
ja loc_447E20  +
mov edi esi +
mov esi [esp+80h+var_24] +
jmp loc_4478F0  +
mov eax 0FFFFFFFFh +
mov [esp+80h+var_4B] 0 +
mov [esp+80h+var_5C] 0 +
jmp loc_4477B9  +
mov [esp+80h+var_4A] 0 +
mov [esp+80h+var_28] 0 +
jmp loc_44779F  +
movzx edx byte ptr [ebx] +
cmp dl 3 +
jz loc_447F0E  +
ja loc_447FFA  +
cmp dl 1 +
jz loc_448015  +
cmp dl 2 +
jnz loc_447B5B  +
mov ebx [esp+80h+var_34] +
mov ecx edi +
mov esi [esp+80h+var_64] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov [esp+80h+var_80] esi +
call sub_446940  +
mov byte ptr [esp+80h+var_60] 0 +
mov esi eax +
movzx eax byte ptr [ebx+58h] +
add edi eax +
jmp loc_4478F0  +
movzx ecx byte ptr [ebx+1] +
test cl cl +
mov [esp+80h+var_49] cl +
jnz loc_447765  +
jmp loc_447740  +
add edi 8 +
cmp ebp edi +
jnb loc_448202  +
mov esi edi +
mov edi 8 +
jmp loc_44761B  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_4466F0  +
jmp loc_447698  +
cmp [esp+80h+var_64] edi +
ja loc_4481A4  +
mov [esp+80h+var_14] 0 +
xor eax eax +
xor ebx ebx +
add edi eax +
mov eax [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
mov ecx [eax+4] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jnz loc_4480E5  +
mov eax [esp+80h+var_6C] +
add ecx 5 +
shl ecx 4 +
mov eax [eax+18h] +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_408090  +
test eax eax +
jz loc_447B74  +
mov ecx [esp+80h+var_6C] +
mov [ecx+18h] eax +
mov ecx [ecx+4] +
jmp loc_4480EC  +
add esi 6 +
cmp ebp esi +
jb loc_447717  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_4466D0  +
mov ecx [esp+80h+var_64] +
jmp loc_447717  +
mov eax [esp+80h+var_48] +
mov edi ebx +
cdq   +
idiv  [esp+80h+var_28] +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_4478F0  +
call sub_408BC0  +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_447AC7  +
mov eax [esp+80h+var_30] +
mov edx ebx +
call sub_4466B0  +
jmp loc_447A04  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_4466F0  +
mov ecx [esp+80h+var_64] +
jmp loc_447717  +
mov edx 1 +
call sub_4473A0  +
mov [esp+80h+var_44] eax +
jmp loc_4478BF  +
cmp dl 4 +
jz loc_4480B4  +
cmp dl 80h +
jnz loc_447B5B  +
lea edi [edi+eax-1] +
jmp loc_4478F0  +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 1 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_446310  +
test eax eax +
jz loc_447B74  +
mov eax [esp+80h+var_34] +
mov ecx [esp+80h+var_54] +
lea edx [eax+0Ch] +
lea ebx [eax+8] +
mov eax [esp+80h+var_50] +
cmp ecx esi +
cmova ecx esi +
cmp eax esi +
cmovb eax esi +
mov [esp+80h+var_80] eax +
mov eax ebx +
call sub_446880  +
test eax eax +
jz loc_447B74  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_448092  +
mov [esp+80h+var_80] eax +
call free  +
cmp [esp+80h+var_64] edi +
ja loc_4478A8  +
mov eax [esp+80h+var_6C] +
mov esi [eax+0Ch] +
test esi esi +
jnz loc_44825E  +
mov eax [esp+80h+var_6C] +
jmp loc_44764C  +
mov eax [esp+80h+var_64] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_408BC0  +
add edi [esp+80h+var_14] +
mov [esp+80h+var_5C] eax +
jmp loc_4478F0  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
shl ecx 4 +
lea edx [eax+ecx] +
mov eax [esp+80h+var_64] +
mov [edx] ebx +
mov [esp+80h+var_24] edx +
mov edx [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_78] ebp +
call sub_408BC0  +
mov edx [esp+80h+var_24] +
mov ecx [esp+80h+var_64] +
add edi [esp+80h+var_14] +
mov [edx+4] eax +
mov eax [esp+80h+var_6C] +
mov edx [esp+80h+var_68] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
call sub_408BC0  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_68] +
add edi [esp+80h+var_14] +
mov [ebx+8] eax +
mov eax [esp+80h+var_6C] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] edx +
call sub_408BC0  +
add edi [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov eax [esp+80h+var_6C] +
add dword ptr [eax+4] 1 +
jmp loc_4478F0  +
cmp byte ptr [ebx+1] 0 +
jnz loc_448212  +
mov [esp+80h+var_14] 1 +
mov eax 1 +
xor ebx ebx +
jmp loc_447F24  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorLi_0 +
call off_4733A4  +
mov [esp+80h+var_80] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_44764C  +
mov [esp+80h+var_80] offset aDwarfErrorRa_0 +
call off_4733A4  +
mov [esp+80h+var_80] 11h +
call sub_4040F0  +
xor eax eax +
jmp loc_44764C  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_4466D0  +
jmp loc_447698  +
add ebx 2 +
jmp loc_448220  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_448235  +
cmp [esp+80h+var_64] ebx +
ja loc_448217  +
mov eax ebx +
xor ebx ebx +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_447F24  +
mov eax ebx +
mov ebx edi +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_447F24  +
movzx eax cx +
jmp loc_44762D  +
test eax eax +
jz loc_447608  +
mov edi 4 +
jmp loc_44769F  +
mov edi eax +
mov eax [eax] +
lea edx [esi+esi*2] +
shl edx 2 +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_406290  +
test eax eax +
mov ebx eax +
jz loc_447B84  +
mov eax [edi+1Ch] +
mov ebp ebx +
xor edi edi +
jmp loc_4482B8  +
mov edx [eax] +
add edi 1 +
add ebp 0Ch +
mov dword ptr [ebp-8] 0 +
mov [ebp-0Ch] edx +
mov edx [eax+8] +
mov [ebp-4] edx +
mov edx [eax+4] +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_68] edx +
call free  +
cmp edi esi +
mov edx [esp+80h+var_68] +
jz loc_4482DA  +
mov eax edx +
test eax eax +
jnz loc_448287  +
mov [esp+80h+var_7C] 648h +
mov [esp+80h+var_80] offset a____Binutil_24 +
mov [esp+80h+var_68] eax +
call sub_404040  +
mov eax [esp+80h+var_68] +
jmp loc_448287  +
test edx edx +
jz loc_4482F2  +
mov [esp+80h+var_7C] 64Fh +
mov [esp+80h+var_80] offset a____Binutil_24 +
call sub_404040  +
mov [esp+80h+var_74] offset sub_446710 +
mov [esp+80h+var_78] 0Ch +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_80] ebx +
call qsort  +
mov eax [ebx+8] +
mov ecx [eax+4] +
mov eax [esp+80h+var_6C] +
mov eax [eax+0Ch] +
cmp eax 1 +
mov [esp+80h+var_64] eax +
jbe loc_448372  +
mov eax ebx +
mov edx 1 +
mov ebp 1 +
mov [esp+80h+var_68] ebx +
cmp [eax+0Ch] ecx +
mov esi [eax+14h] +
jnb loc_448344  +
cmp [esi+4] ecx +
jbe loc_448360  +
mov [eax+0Ch] ecx +
cmp edx ebp +
mov ecx [esi+4] +
jnb loc_44835D  +
mov ebx [esp+80h+var_68] +
lea edi [edx+edx*2] +
lea edi [ebx+edi*4] +
mov ebx [eax+0Ch] +
mov [edi+8] esi +
mov [edi] ebx +
add edx 1 +
add ebp 1 +
add eax 0Ch +
cmp ebp [esp+80h+var_64] +
jnz loc_448334  +
mov ebx [esp+80h+var_68] +
jmp loc_448377  +
mov edx 1 +
mov eax [esp+80h+var_6C] +
mov [eax+1Ch] ebx +
mov [eax+0Ch] edx +
jmp loc_4480AB  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [eax+8] +
mov ebp [eax+3Ch] +
mov [esp+7Ch+var_64] eax +
mov [esp+7Ch+var_50] edi +
mov edi eax +
mov eax [eax+50h] +
mov eax [eax+10h] +
mov [esp+7Ch+var_7C] 80h +
mov esi eax +
mov [esp+7Ch+var_60] eax +
call sub_408000  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_448D97  +
cmp ebp esi +
mov dword ptr [eax+4] 0 +
jnb loc_4487B8  +
mov eax edi +
add eax 8 +
mov [esp+7Ch+var_38] 20h +
mov [esp+7Ch+var_54] 1 +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_6C] eax +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call sub_408BC0  +
add ebp [esp+7Ch+var_20] +
test eax eax +
mov ecx eax +
jnz loc_4487D0  +
sub [esp+7Ch+var_54] 1 +
mov eax [esp+7Ch+var_54] +
test eax eax +
jz loc_448DD5  +
cmp ebp [esp+7Ch+var_60] +
jb loc_44876F  +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call free  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add edx eax +
mov eax ecx +
shr edx 6 +
imul edx edx +
sub eax edx +
mov edx eax +
mov eax [esp+7Ch+var_64] +
mov eax [eax+1Ch] +
mov ebx [eax+edx*4] +
test ebx ebx +
jnz loc_44880B  +
jmp loc_448BE0  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_448BE0  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_448800  +
mov eax [ebx+4] +
cmp eax 2Eh +
jz loc_4489B5  +
cmp eax 3 +
jz loc_4489B5  +
cmp eax 1Dh +
jz loc_4489B5  +
cmp eax 34h +
mov [esp+7Ch+var_5C] 0 +
jz loc_448D3B  +
mov edi [esp+7Ch+var_54] +
mov eax [esp+7Ch+var_44] +
mov dword ptr [eax+edi*4] 0 +
xor edi edi +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_448983  +
lea eax [edi+1Ch] +
xor esi esi +
mov [esp+7Ch+var_40] eax +
lea eax [edi+24h] +
mov [esp+7Ch+var_48] 0 +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_3C] eax +
jmp loc_4488BC  +
cmp eax 12h +
jz loc_448B25  +
ja loc_448A56  +
cmp eax 3 +
jz loc_448AD0  +
cmp eax 11h +
mov eax [esp+7Ch+var_58] +
cmovz eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_58] eax +
nop   +
add esi 1 +
cmp [ebx+0Ch] esi +
jbe loc_448942  +
mov eax [ebx+10h] +
mov ecx [esp+7Ch+var_64] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+7Ch+var_1C] edx +
mov edx [eax+4] +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_1C] +
call sub_446B60  +
test eax eax +
mov ebp eax +
jz loc_4487B8  +
test edi edi +
jz loc_448A11  +
mov eax [esp+7Ch+var_1C] +
cmp eax 3Bh +
jz loc_448AC0  +
jbe loc_448887  +
cmp eax 58h +
jz loc_448B73  +
lea esi [esi+0] +
jbe loc_448A80  +
cmp eax 6Eh +
jz loc_448B40  +
cmp eax 2007h +
jz loc_448B40  +
cmp eax 59h +
jnz loc_4488B0  +
mov eax [esp+7Ch+var_14] +
add esi 1 +
cmp [ebx+0Ch] esi +
mov [edi+10h] eax +
ja loc_4488BC  +
mov esi [esp+7Ch+var_48] +
test esi esi +
jz loc_448CD0  +
mov eax [esp+7Ch+var_58] +
add [esp+7Ch+var_4C] eax +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
test al al +
jz loc_448983  +
mov eax [esp+7Ch+var_4C] +
lea edx [edi+24h] +
mov ecx [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_34] +
call sub_446880  +
test eax eax +
jz loc_4487B8  +
mov edx [ebx+8] +
test edx edx +
jz loc_4487A6  +
add [esp+7Ch+var_54] 1 +
mov eax [esp+7Ch+var_38] +
cmp [esp+7Ch+var_54] eax +
jge loc_448DA1  +
mov eax [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_54] +
mov dword ptr [eax+edi*4] 0 +
jmp loc_4487A6  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] 34h +
mov [esp+7Ch+var_7C] eax +
call sub_406370  +
test eax eax +
mov edi eax +
jz loc_4487B8  +
mov ecx [esp+7Ch+var_64] +
mov eax [ebx+4] +
mov edx [ecx+48h] +
mov [edi+18h] eax +
mov [edi] edx +
mov edx [ecx+60h] +
mov [ecx+48h] edi +
test edx edx +
jnz loc_448CE5  +
cmp eax 1Dh +
jz loc_448D05  +
mov eax [esp+7Ch+var_44] +
mov ecx [esp+7Ch+var_54] +
mov [esp+7Ch+var_5C] 0 +
mov [eax+ecx*4] edi +
jmp loc_448852  +
mov eax [esp+7Ch+var_5C] +
test eax eax +
jz loc_4488B0  +
mov eax [esp+7Ch+var_1C] +
cmp eax 3Ah +
jz loc_448C02  +
ja loc_448BB0  +
cmp eax 2 +
jz loc_448C20  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_4488B0  +
mov eax [esp+7Ch+var_14] +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+10h] eax +
jmp loc_4488B0  +
cmp eax 31h +
jz loc_448B90  +
cmp eax 3Ah +
jnz loc_4488B0  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_4473A0  +
mov [edi+0Ch] eax +
jmp loc_4488B0  +
cmp eax 47h +
jz loc_448B90  +
cmp eax 55h +
jnz loc_4488B0  +
mov eax [esp+7Ch+var_14] +
mov edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+var_3C] +
call sub_446A40  +
test eax eax +
jnz loc_4488B0  +
jmp loc_4487B8  +
mov eax [esp+7Ch+var_14] +
mov [edi+14h] eax +
jmp loc_4488B0  +
mov eax [edi+20h] +
test eax eax +
jnz loc_4488B0  +
mov eax [esp+7Ch+var_18] +
cmp eax 8 +
jz loc_448AF4  +
cmp eax 0Eh +
jz loc_448AF4  +
cmp eax 1F21h +
jnz loc_4488B0  +
mov eax [esp+7Ch+var_14] +
mov [edi+20h] eax +
mov eax [esp+7Ch+var_64] +
mov eax [eax+20h] +
lea ecx [eax-1] +
cmp ecx 1Ch +
mov [esp+7Ch+var_30] eax +
ja loc_4488B0  +
mov eax 1 +
shl eax cl +
test eax 10025977h +
jnz loc_448B67  +
jmp loc_4488B0  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_4C] eax +
xor eax eax +
cmp [esp+7Ch+var_18] 1 +
setnz al  +
mov [esp+7Ch+var_48] eax +
jmp loc_4488B0  +
mov eax [esp+7Ch+var_18] +
cmp eax 8 +
jz loc_448B60  +
cmp eax 0Eh +
jz loc_448B60  +
cmp eax 1F21h +
jnz loc_4488B0  +
lea esi [esi+0] +
mov eax [esp+7Ch+var_14] +
mov [edi+20h] eax +
mov dword ptr [edi+1Ch] 1 +
jmp loc_4488B0  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_4473A0  +
mov [edi+8] eax +
jmp loc_4488B0  +
mov ecx [esp+7Ch+var_40] +
lea edx [esp+7Ch+var_1C] +
mov eax [esp+7Ch+var_64] +
call sub_448390  +
mov [edi+20h] eax +
jmp loc_4488B0  +
cmp eax 3Bh +
jz loc_448CC0  +
cmp eax 3Fh +
jnz loc_4488B0  +
mov eax [esp+7Ch+var_10] +
or eax [esp+7Ch+var_14] +
jz loc_4488B0  +
mov eax [esp+7Ch+var_5C] +
and byte ptr [eax+1Ch] 0FEh +
jmp loc_4488B0  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] offset aDwarfErrorCoul +
call off_4733A4  +
mov [esp+7Ch+var_7C] 11h +
call sub_4040F0  +
jmp loc_4487B8  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_4473A0  +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+4] eax +
jmp loc_4488B0  +
mov eax [esp+7Ch+var_18] +
lea ecx [eax-3] +
cmp ecx 15h +
ja loc_4488B0  +
mov eax 1 +
shl eax cl +
test eax 2000C3h +
jz loc_4488B0  +
mov eax [esp+7Ch+var_14] +
mov ecx [eax+4] +
cmp byte ptr [ecx] 3 +
jnz loc_4488B0  +
mov edx [esp+7Ch+var_5C] +
mov [esp+7Ch+var_30] ecx +
and byte ptr [edx+1Ch] 0FEh +
mov edx [esp+7Ch+var_64] +
movzx edx byte ptr [edx+58h] +
lea ecx [edx+1] +
cmp [eax] ecx +
mov ecx [esp+7Ch+var_30] +
jnz loc_4488B0  +
shl edx 3 +
cmp edx 8 +
jz loc_448DEB  +
cmp edx 10h +
jz loc_448DF4  +
cmp edx 20h +
jz loc_448E2A  +
cmp edx 40h +
jnz loc_448E0E  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+14h] eax +
jmp loc_4488B0  +
mov eax [esp+7Ch+var_14] +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+8] eax +
jmp loc_4488B0  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
jmp loc_448960  +
mov [esp+7Ch+var_78] 9D4h +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_404040  +
mov eax [edi+18h] +
cmp eax 1Dh +
jnz loc_4489F9  +
mov eax [esp+7Ch+var_54] +
sub eax 1 +
jz loc_4489F9  +
mov ecx [esp+7Ch+var_44] +
mov edx [ecx+eax*4] +
mov ecx [esp+7Ch+var_44] +
test edx edx +
jz loc_448D31  +
jmp loc_448DCD  +
mov edx [ecx+eax*4] +
test edx edx +
jnz loc_448DCD  +
sub eax 1 +
jnz loc_448D26  +
jmp loc_4489F9  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] 20h +
mov [esp+7Ch+var_7C] eax +
call sub_406370  +
test eax eax +
mov edi eax +
mov [esp+7Ch+var_5C] eax +
jz loc_4487B8  +
mov eax [ebx+4] +
mov ecx [esp+7Ch+var_64] +
or byte ptr [edi+1Ch] 1 +
mov [edi+0Ch] eax +
mov eax [ecx+4Ch] +
mov [edi] eax +
mov eax [ecx+60h] +
mov [ecx+4Ch] edi +
test eax eax +
jz loc_448841  +
mov [esp+7Ch+var_78] 9ECh +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_404040  +
jmp loc_448841  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl [esp+7Ch+var_38] 1 +
mov eax [esp+7Ch+var_38] +
shl eax 2 +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call sub_408090  +
test eax eax +
jz loc_4487B8  +
mov [esp+7Ch+var_44] eax +
jmp loc_4489A1  +
mov [edi+4] edx +
jmp loc_4489F9  +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax 1 +
jmp loc_4487C6  +
movzx eax byte ptr [ecx+1] +
jmp loc_448CB1  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
jmp loc_448CB1  +
mov [esp+7Ch+var_74] offset aScan_unit_for_ +
mov [esp+7Ch+var_78] 0A68h +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_404070  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
jmp loc_448CB1  +
***
sub esp 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_448E70  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_448E77  +
mov eax 1 +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx+2Ch] +
test eax eax +
jnz loc_448E90  +
mov dword ptr [ebx+24h] 1 +
xor eax eax +
jmp loc_448E69  +
mov eax ebx +
call sub_447530  +
test eax eax +
mov [ebx+44h] eax +
jz loc_448EC3  +
mov eax [ebx+40h] +
cmp [ebx+3Ch] eax +
jnb loc_448E64  +
mov eax ebx +
call sub_448710  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_448E69  +
mov dword ptr [ebx+24h] 1 +
xor al al +
jmp loc_448E69  +
mov dword ptr [ebx+24h] 1 +
jmp loc_448E69  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov [esp+30h+var_28] ecx +
call sub_448E50  +
test eax eax +
jz loc_448F67  +
test byte ptr [ebx+0Ch] 8 +
mov ecx [esp+30h+var_28] +
jnz loc_448F71  +
mov esi [esi+4Ch] +
mov edi [ebx+4] +
mov ebp [ebx+10h] +
test esi esi +
jz loc_448F67  +
mov [esp+30h+var_28] edi +
mov edi ecx +
jmp loc_448F16  +
mov esi [esi] +
test esi esi +
jz loc_448F67  +
test byte ptr [esi+1Ch] 1 +
jnz loc_448F10  +
mov ebx [esi+4] +
test ebx ebx +
jz loc_448F10  +
mov eax [esi+10h] +
test eax eax +
jz loc_448F10  +
cmp edi [esi+14h] +
jnz loc_448F10  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_448F3A  +
cmp ebp ecx +
jnz loc_448F10  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_30] eax +
call strcmp  +
test eax eax +
jnz loc_448F10  +
mov eax [esp+30h+arg_0] +
mov [esi+18h] ebp +
mov ecx [esp+30h+arg_4] +
mov [eax] ebx +
mov eax [esi+8] +
mov [ecx] eax +
mov eax 1 +
jmp loc_448F69  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+48h] +
mov eax [ebx+4] +
mov edi [ebx+10h] +
test ebp ebp +
mov [esp+30h+var_1C] eax +
jz loc_448F67  +
mov [esp+30h+var_14] 0 +
mov edx ebp +
mov [esp+30h+var_18] 0 +
lea ebx [edx+24h] +
mov esi [edx+30h] +
mov [esp+30h+var_28] edx +
jmp loc_448FAA  +
cmp edi esi +
jz loc_448FAE  +
mov ebx [ebx] +
test ebx ebx +
jz loc_449010  +
test esi esi +
jnz loc_448FA0  +
mov ebp [ebx+4] +
cmp ecx ebp +
jb loc_448FA4  +
mov edx [ebx+8] +
cmp ecx edx +
jnb loc_448FA4  +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_24] edx +
mov eax [eax+20h] +
test eax eax +
jz loc_448FA4  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] ecx +
mov [esp+30h+var_30] eax +
call strcmp  +
mov ecx [esp+30h+var_20] +
mov edx [esp+30h+var_24] +
test eax eax +
jnz loc_448FA4  +
mov eax [esp+30h+var_18] +
sub edx ebp +
test eax eax +
jz loc_448FFB  +
cmp edx [esp+30h+var_14] +
jnb loc_448FA4  +
mov ebx [ebx] +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_14] edx +
test ebx ebx +
mov [esp+30h+var_18] eax +
jnz loc_448FAA  +
lea esi [esi+0] +
mov edx [esp+30h+var_28] +
mov edx [edx] +
test edx edx +
jnz loc_448F94  +
mov edx [esp+30h+var_18] +
test edx edx +
jz loc_448F67  +
mov eax [edx+0Ch] +
mov ecx [esp+30h+arg_0] +
mov [edx+30h] edi +
mov [ecx] eax +
mov eax [edx+14h] +
mov edx [esp+30h+arg_4] +
mov [edx] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [eax+24h] +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_10] ecx +
test edi edi +
jnz loc_449132  +
mov esi [eax+44h] +
mov ebx edx +
test esi esi +
jz loc_449124  +
mov eax [esp+1Ch+arg_0] +
xor ebp ebp +
xor edi edi +
mov dword ptr [eax] 0 +
mov eax [esp+1Ch+var_14] +
mov esi [eax+48h] +
test esi esi +
jz loc_4490D0  +
lea eax [esi+24h] +
mov edx [eax+4] +
cmp ebx edx +
jb loc_4490B0  +
mov ecx [eax+8] +
cmp ebx ecx +
jnb loc_4490B0  +
sub ecx edx +
test edi edi +
jz loc_4490AB  +
cmp ecx ebp +
jnb loc_4490B0  +
mov ebp ecx +
mov edi esi +
nop   +
mov eax [eax] +
test eax eax +
jnz loc_449093  +
mov esi [esi] +
test esi esi +
jnz loc_449090  +
test edi edi +
jz loc_4490D0  +
mov eax [esp+1Ch+arg_0] +
cmp dword ptr [edi+18h] 1Dh +
mov [eax] edi +
jz loc_449190  +
mov eax [esp+1Ch+var_14] +
mov eax [eax+44h] +
mov edx [eax+0Ch] +
test edx edx +
jle loc_449110  +
mov ebp [eax+1Ch] +
xor ecx ecx +
jmp loc_4490F4  +
mov ecx [esi+8] +
cmp ebx [ecx+4] +
jb loc_449144  +
lea ecx [eax+1] +
cmp ecx edx +
jge loc_44910C  +
lea eax [ecx+edx] +
sar eax 1 +
lea esi [eax+eax*2] +
lea esi [ebp+esi*4+0] +
mov edi [esi] +
cmp ebx edi +
jnb loc_4490E5  +
mov edx eax +
cmp ecx edx +
jl loc_4490F4  +
cmp ebx edi +
jnb loc_44913C  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax] 0 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [eax+2Ch] +
test ecx ecx +
jnz loc_449155  +
mov dword ptr [eax+24h] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esi+8] +
cmp [ecx+4] ebx +
jbe loc_449110  +
mov eax ecx +
jmp loc_44914D  +
cmp ebx [eax+4] +
jnb loc_44919C  +
mov eax [eax] +
test eax eax +
jnz loc_449148  +
jmp loc_449110  +
mov edi [esp+1Ch+var_14] +
mov edx [esp+1Ch+arg_C] +
mov eax edi +
call sub_447530  +
test eax eax +
mov [edi+44h] eax +
mov eax [esp+1Ch+var_14] +
jz loc_44912B  +
mov edi [eax+40h] +
cmp [eax+3Ch] edi +
jnb loc_449077  +
call sub_448710  +
test eax eax +
jnz loc_449077  +
mov eax [esp+1Ch+var_14] +
jmp loc_44912B  +
mov eax [esp+1Ch+arg_C] +
mov [eax+5Ch] edi +
jmp loc_4490D0  +
cmp byte ptr [eax+19h] 0 +
jnz loc_449110  +
cmp ecx eax +
jz loc_449110  +
mov edx [eax+8] +
mov ebx [esp+1Ch+var_10] +
mov ecx [eax+0Ch] +
mov [ebx] edx +
mov edx [esp+1Ch+arg_4] +
mov [edx] ecx +
mov edx [esp+1Ch+arg_8] +
test edx edx +
jz loc_4491D1  +
mov eax [eax+14h] +
mov ebx [esp+1Ch+arg_8] +
mov [ebx] eax +
mov eax [esi+8] +
mov eax [eax+4] +
sub eax edi +
jmp loc_449134  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [eax] +
mov eax [eax+78h] +
cmp edx eax +
jz loc_449429  +
test eax eax +
jz loc_449421  +
mov esi [eax+4] +
test esi esi +
jz loc_44938E  +
lea esi [esi+0] +
mov eax [ebp+74h] +
cmp dword ptr [ebp+7Ch] 2 +
mov edi [ebp+70h] +
mov [esp+28h+var_1C] eax +
jz loc_4493E6  +
mov edx ebp +
mov eax esi +
call sub_448E50  +
test eax eax +
jz loc_449410  +
mov ecx [esi+60h] +
test ecx ecx +
jnz loc_4493A0  +
mov ebx [esi+48h] +
test ebx ebx +
jz loc_4493BF  +
xor edx edx +
jmp loc_4492B4  +
mov edx ebx +
mov ebx eax +
mov eax [ebx] +
mov [ebx] edx +
test eax eax +
jnz loc_4492B0  +
mov [esi+48h] ebx +
mov eax 1 +
jmp loc_4492CA  +
test ebx ebx +
jz loc_4492E0  +
mov edx [ebx+20h] +
test edx edx +
jz loc_4492DA  +
mov ecx ebx +
mov eax edi +
call sub_4491E0  +
test eax eax +
mov ebx [ebx] +
jnz loc_4492C6  +
mov edx [esi+48h] +
test edx edx +
jz loc_4492FC  +
xor ebx ebx +
jmp loc_4492F4  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_4492F0  +
test eax eax +
mov [esi+48h] edx +
jz loc_449410  +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_4493D6  +
xor ecx ecx +
jmp loc_44931A  +
mov ecx ebx +
mov ebx edx +
mov edx [ebx] +
mov [ebx] ecx +
test edx edx +
jnz loc_449316  +
mov [esi+4Ch] ebx +
mov edi [esp+28h+var_1C] +
jmp loc_449334  +
test ebx ebx +
jz loc_449357  +
test byte ptr [ebx+1Ch] 1 +
jnz loc_449351  +
mov edx [ebx+4] +
test edx edx +
jz loc_449351  +
mov edx [ebx+10h] +
test edx edx +
jz loc_449351  +
mov ecx ebx +
mov eax edi +
call sub_4491E0  +
test eax eax +
mov ebx [ebx] +
jnz loc_449330  +
mov edx [esi+4Ch] +
test edx edx +
jz loc_44936E  +
xor ebx ebx +
jmp loc_449366  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_449362  +
test eax eax +
mov [esi+4Ch] edx +
mov dword ptr [esi+60h] 1 +
jz loc_449410  +
mov esi [esi+4] +
test esi esi +
jnz loc_449270  +
mov edx [ebp+0] +
mov [ebp+78h] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 0C23h +
mov [esp+28h+var_28] offset a____Binutil_24 +
call sub_404040  +
mov ebx [esi+48h] +
test ebx ebx +
jnz loc_4492AB  +
mov ebx [esi+4Ch] +
mov eax 1 +
mov dword ptr [esi+48h] 0 +
test ebx ebx +
jnz loc_449312  +
mov dword ptr [esi+4Ch] 0 +
mov dword ptr [esi+60h] 1 +
jmp loc_449380  +
mov [esp+28h+var_24] 0C1Eh +
mov [esp+28h+var_28] offset a____Binutil_24 +
call sub_404040  +
mov edx ebp +
mov eax esi +
call sub_448E50  +
test eax eax +
jnz loc_449295  +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+7Ch] 2 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4] +
jmp loc_449261  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_4494E7  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jz loc_4494E7  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jz loc_449503  +
mov [esp+10h] esi +
nop   +
mov eax [esp+10h] +
mov edi [eax+20h] +
test edi edi +
jz loc_4494CB  +
mov eax [eax+28h] +
test eax eax +
mov [esp+14h] eax +
jz loc_4494CB  +
mov eax [esp+40h] +
mov ebx [eax] +
test ebx ebx +
jz loc_4494CB  +
mov esi eax +
test byte ptr [ebx+0Ch] 8 +
jz loc_4494C2  +
mov ebp [ebx+10h] +
test ebp ebp +
jz loc_4494C2  +
mov [esp+4] edi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jz loc_4494F1  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_4494A2  +
mov eax [esp+10h] +
mov eax [eax] +
test eax eax +
mov [esp+10h] eax +
jnz loc_449480  +
mov eax [esp+18h] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jnz loc_44946B  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+14h] +
sub eax [ebp+1Ch] +
sub eax [ebx+8] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+44h] +
test eax eax +
jz loc_449524  +
mov eax [esp+18h] +
call sub_448710  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jnz loc_44947A  +
jmp loc_4494D9  +
***
mov edi [esp+18h] +
mov edx [esp+1Ch] +
mov eax edi +
call sub_447530  +
test eax eax +
mov [edi+44h] eax +
jz loc_449513  +
jmp loc_44950A  +
***
mov edx [eax] +
test edx edx +
jz loc_449584  +
mov eax [edx+5Ch] +
test eax eax +
jz loc_449584  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_449584  +
mov ebx [eax+8] +
mov ecx [esp+arg_4] +
mov [ecx] ebx +
mov ecx [eax+4] +
mov ebx [ecx+20h] +
mov ecx [esp+arg_8] +
mov [ecx] ebx +
mov ebx [eax+10h] +
mov ecx [esp+arg_C] +
mov eax [eax+4] +
mov [ecx] ebx +
mov [edx+5Ch] eax +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
test ecx ecx +
mov [esp+1Ch+var_18] ecx +
jz loc_44976F  +
test eax eax +
jz loc_44976F  +
mov eax [ecx] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jz loc_44968E  +
mov eax [esp+1Ch+var_14] +
xor ebx ebx +
mov esi [eax+1Ch] +
mov edi [eax+48h] +
mov eax [eax+4Ch] +
mov [esp+1Ch+var_10] eax +
mov ebp [esi+ebx*4] +
test ebp ebp +
jz loc_4495F2  +
lea esi [esi+0] +
mov eax [ebp+10h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ebp [ebp+14h] +
test ebp ebp +
jnz loc_4495E0  +
add ebx 1 +
cmp ebx 79h +
jnz loc_4495D6  +
mov esi [esp+1Ch+var_14] +
mov eax [esi+44h] +
test eax eax +
jz loc_44961E  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esi+44h] +
mov eax [eax+18h] +
mov [esp+1Ch+var_1C] eax +
call free  +
test edi edi +
jz loc_449654  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_449638  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+0Ch] 0 +
mov eax [edi+8] +
test eax eax +
jz loc_44964E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+8] 0 +
mov edi [edi] +
test edi edi +
jnz loc_449622  +
mov ecx [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_44967C  +
mov eax [ebx+4] +
test eax eax +
jz loc_449676  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov ebx [ebx] +
test ebx ebx +
jnz loc_449660  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jnz loc_4495C3  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_4496A1  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+44h] +
test eax eax +
jz loc_4496B4  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_4496C7  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+54h] +
test eax eax +
jz loc_4496DA  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+34h] +
test eax eax +
jz loc_4496ED  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov edx [eax+80h] +
test edx edx +
jnz loc_449762  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+24h] +
test eax eax +
jz loc_44970E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_449721  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+60h] +
test eax eax +
jz loc_449734  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+68h] +
test eax eax +
jz loc_449747  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+20h] +
test eax eax +
jz loc_44976F  +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_405F00  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call sub_405F00  +
jmp loc_4496FB  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov ebp [eax] +
test ebp ebp +
jz loc_449B70  +
mov edi [esp+4Ch+arg_0] +
mov eax [esp+4Ch+arg_0] +
mov esi [edi+6Ch] +
mov eax [eax+64h] +
test esi esi +
jz loc_449938  +
mov edi [ebp+60h] +
xor edx edx +
jmp loc_4497CB  +
mov ecx [eax+38h] +
add ecx [ebx+1Ch] +
cmp [edi+edx*4] ecx +
jnz loc_4497E0  +
add edx 1 +
mov eax [eax+0Ch] +
cmp edx esi +
jz loc_449938  +
mov ebx [eax+3Ch] +
test ebx ebx +
jnz loc_4497B2  +
mov ecx [eax+1Ch] +
cmp [edi+edx*4] ecx +
jz loc_4497BD  +
lea esi [esi+0] +
mov eax [esp+4Ch+arg_10] +
mov edi ebp +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_449590  +
test ebp 1 +
mov edx 84h +
jnz loc_449CE8  +
test edi 2 +
jnz loc_449CF6  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_44982A  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
and edx 1 +
jz loc_449832  +
mov byte ptr [edi] 0 +
mov eax [esp+4Ch+arg_8] +
mov [ebp+8] eax +
mov eax [esp+4Ch+arg_C] +
mov [ebp+38h] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_4499B5  +
mov eax [esp+4Ch+arg_10] +
mov [eax] ebp +
mov eax [esp+4Ch+arg_4] +
test eax eax +
jz loc_449B95  +
mov eax [esp+4Ch+arg_4] +
cmp [esp+4Ch+arg_0] eax +
setz bl  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_446780  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_449945  +
mov eax [esp+4Ch+arg_4] +
mov [ebp+14h] eax +
mov eax [esp+4Ch+arg_14] +
test eax eax +
jz loc_449A20  +
mov eax [ebp+64h] +
cmp eax 0 +
mov [esp+4Ch+var_30] eax +
jnz loc_449A06  +
mov eax [ebp+8] +
mov [esp+4Ch+var_28] ebp +
mov eax [eax+18h] +
mov [esp+4Ch+var_34] eax +
mov eax [esp+4Ch+arg_0] +
mov ebp eax +
lea esi [esi+0] +
mov ebx [ebp+64h] +
test ebx ebx +
jz loc_449928  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_4498D8  +
cmp ebx eax +
jz loc_4498D8  +
test byte ptr [ebx+15h] 20h +
jz loc_449921  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_449921  +
mov esi [ebx] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_44990C  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
setz dl  +
movzx edx dl +
test byte ptr [ebx+14h] 1 +
jz loc_449918  +
cmp [esp+4Ch+arg_0] ebp +
jz loc_44991C  +
test edx edx +
jz loc_449921  +
add [esp+4Ch+var_30] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4498C7  +
cmp [esp+4Ch+arg_4] ebp +
jz loc_449BA7  +
mov ebp [esp+4Ch+arg_4] +
jmp loc_4498C0  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_449885  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aHomeJenkinsM_0 +
mov [esp+4Ch+var_4C] eax +
call sub_4066B0  +
test eax eax +
mov ebx eax +
jz loc_4499AB  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] eax +
call sub_405DC0  +
test eax eax +
mov [esp+4Ch+arg_4] eax +
jz loc_4499A3  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_407110  +
test eax eax +
jnz loc_449D81  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_405F00  +
mov [esp+4Ch+var_4C] ebx +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_408000  +
test eax eax +
mov [ebp+60h] eax +
jz loc_4499AB  +
mov edi [esp+4Ch+arg_0] +
mov edx [edi+64h] +
mov edi [edi+6Ch] +
test edi edi +
jz loc_44984F  +
xor ecx ecx +
jmp loc_4499F7  +
mov ebx [edx+38h] +
add ebx [esi+1Ch] +
mov [eax+ecx*4] ebx +
add ecx 1 +
mov edx [edx+0Ch] +
cmp ecx edi +
jz loc_44984F  +
mov esi [edx+3Ch] +
test esi esi +
jnz loc_4499E0  +
mov ebx [edx+1Ch] +
mov [eax+ecx*4] ebx +
jmp loc_4499E9  +
mov eax [ebp+68h] +
jle loc_449A20  +
mov edx [esp+4Ch+var_30] +
nop   +
mov ecx [eax] +
add eax 8 +
mov ebx [eax-4] +
sub edx 1 +
mov [ecx+1Ch] ebx +
jnz loc_449A10  +
mov ecx [esp+4Ch+var_2C] +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_4467F0  +
test eax eax +
jz loc_449AFF  +
mov ecx [esp+4Ch+var_2C] +
xor eax eax +
mov [esp+4Ch+var_10] 0 +
test ecx ecx +
jz loc_449A6D  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
add eax [ecx+24h] +
mov edx esi +
mov [esp+4Ch+var_10] eax +
mov eax ebx +
call sub_4467F0  +
mov ecx eax +
mov eax [esp+4Ch+var_10] +
test ecx ecx +
jnz loc_449A53  +
mov [esp+4Ch+var_4C] eax +
call sub_408000  +
test eax eax +
mov [ebp+34h] eax +
jz loc_4499AB  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_10] 0 +
call sub_446780  +
test eax eax +
mov ecx eax +
jz loc_449B43  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
jmp loc_449AC3  +
mov edx esi +
mov eax ebx +
call sub_4467F0  +
test eax eax +
mov ecx eax +
jz loc_449B43  +
mov edi [ecx+24h] +
test edi edi +
jz loc_449AB0  +
mov eax [esp+4Ch+arg_C] +
mov [esp+4Ch+var_34] ecx +
mov [esp+4Ch+var_40] eax +
mov eax [ebp+34h] +
add eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_44ED20  +
test eax eax +
jz loc_4499AB  +
add [esp+4Ch+var_10] edi +
mov ecx [esp+4Ch+var_34] +
jmp loc_449AB0  +
mov eax [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+arg_C] +
mov eax [eax+24h] +
mov [esp+4Ch+var_10] eax +
mov eax [ebp+8] +
mov [esp+4Ch+var_4C] 0 +
mov [esp+4Ch+var_48] 0 +
lea edx [eax+18h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] eax +
lea eax [ebp+34h] +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
call sub_446180  +
test eax eax +
jz loc_4499AB  +
mov eax [ebp+34h] +
mov edx [esp+4Ch+arg_8] +
mov [ebp+0Ch] eax +
add eax [esp+4Ch+var_10] +
mov [ebp+10h] eax +
mov eax [esp+4Ch+arg_4] +
call sub_446780  +
mov [ebp+18h] eax +
mov eax [ebp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_44993D  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 84h +
mov [esp+4Ch+var_4C] eax +
call sub_406370  +
test eax eax +
mov ebp eax +
jnz loc_449832  +
xor eax eax +
jmp loc_4499AD  +
mov eax [esp+4Ch+arg_0] +
mov ebx 1 +
mov [esp+4Ch+arg_4] eax +
jmp loc_44986C  +
cmp [esp+4Ch+var_30] 1 +
mov ebp [esp+4Ch+var_28] +
jle loc_449D07  +
mov edi [esp+4Ch+var_30] +
mov eax edi +
shl eax 3 +
mov [esp+4Ch+var_4C] eax +
call sub_408000  +
test eax eax +
jz loc_4499AB  +
mov [ebp+64h] edi +
mov edi [esp+4Ch+arg_0] +
mov ebx eax +
mov [ebp+68h] eax +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] edi +
mov [esp+4Ch+var_20] ebp +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_449C90  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_449C13  +
cmp ebp eax +
jz loc_449C13  +
test byte ptr [ebp+15h] 20h +
jz loc_449C85  +
mov eax [ebp+1Ch] +
test eax eax +
jnz loc_449C85  +
mov esi [ebp+0] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov ecx 1 +
test eax eax +
jz loc_449C45  +
mov cl 11h +
mov edi offset a_gnu_linkonc_0 +
cmps   +
setz cl  +
movzx ecx cl +
test byte ptr [ebp+14h] 1 +
jz loc_449C55  +
mov eax [esp+4Ch+var_30] +
cmp [esp+4Ch+arg_0] eax +
jz loc_449C59  +
test ecx ecx +
jz loc_449C85  +
mov esi [ebp+28h] +
test esi esi +
jnz loc_449C63  +
mov esi [ebp+24h] +
test ecx ecx +
jz loc_449CB0  +
mov edi [ebp+40h] +
test edi edi +
jnz loc_449CD2  +
mov edi [esp+4Ch+var_24] +
mov eax edi +
mov [ebp+1Ch] edi +
add edi esi +
mov [esp+4Ch+var_24] edi +
mov [ebx] ebp +
add ebx 8 +
mov [ebx-4] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_449C02  +
mov eax [esp+4Ch+var_20] +
mov eax [eax+14h] +
cmp [esp+4Ch+var_30] eax +
jz loc_449D77  +
mov [esp+4Ch+var_30] eax +
jmp loc_449BF3  +
mov ecx [ebp+40h] +
mov edi 1 +
mov eax [esp+4Ch+var_28] +
shl edi cl +
lea eax [eax+edi-1] +
neg edi  +
and eax edi +
lea edi [esi+eax] +
mov [ebp+1Ch] eax +
mov [esp+4Ch+var_28] edi +
jmp loc_449C7D  +
mov [esp+4Ch+var_48] 0D14h +
mov [esp+4Ch+var_4C] offset a____Binutil_24 +
call sub_404040  +
jmp loc_449C6E  +
mov byte ptr [ebp+0] 0 +
lea edi [ebp+1] +
mov dl 83h +
jmp loc_449807  +
xor ebx ebx +
add edi 2 +
mov [edi-2] bx +
sub edx 2 +
jmp loc_449813  +
mov eax [esp+4Ch+arg_4] +
mov dword ptr [ebp+64h] 0FFFFFFFFh +
cmp [esp+4Ch+arg_0] eax +
jz loc_449A20  +
mov ebx [eax+64h] +
mov edi [esp+4Ch+arg_0] +
test ebx ebx +
mov esi [edi+64h] +
jnz loc_449D6E  +
jmp loc_449A20  +
test byte ptr [ebx+15h] 20h +
jnz loc_449A20  +
mov eax [ebx] +
mov [esp+4Ch+var_48] eax +
mov eax [esi] +
mov [esp+4Ch+var_4C] eax +
call strcmp  +
test eax eax +
jnz loc_449D60  +
mov eax [esi+3Ch] +
mov [ebx+3Ch] eax +
mov eax [esi+38h] +
mov [ebx+38h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov ebx [ebx+0Ch] +
mov esi [esi+0Ch] +
test ebx ebx +
jz loc_449A20  +
test esi esi +
jnz loc_449D30  +
jmp loc_449A20  +
mov ebp [esp+4Ch+var_20] +
mov eax [esp+4Ch+var_30] +
jmp loc_449D12  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_446780  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_449997  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_41A060  +
test eax eax +
jz loc_449997  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+78h] +
mov dword ptr [ebp+80h] 1 +
mov [esp+4Ch+arg_C] eax +
mov [ebp+38h] eax +
jmp loc_449885  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
test esi esi +
jz loc_449F80  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_449F80  +
mov eax [ebx+0A0h] +
mov ebp [eax+234h] +
test ebp ebp +
jz loc_449F54  +
mov eax [esp+3Ch+arg_8] +
cmp [ebp+0] eax +
jz loc_449FA2  +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+4] 0 +
mov dword ptr [ebp+0Ch] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_8] +
mov [ebp+0] eax +
mov ebx [esi] +
test ebx ebx +
jz loc_449F80  +
xor edx edx +
xor edi edi +
mov [esp+3Ch+var_24] ebp +
mov ebp edx +
mov [esp+3Ch+var_20] 0 +
jmp loc_449E7A  +
cmp edi 1 +
mov eax 2 +
cmovz edi eax +
mov ebp ebx +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_449EFF  +
test byte ptr [ebx+0Dh] 40h +
jnz loc_449E60  +
mov eax [esp+3Ch+var_28] +
lea edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+15Ch] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jz loc_449EE8  +
mov ecx [esp+3Ch+var_10] +
cmp [esp+3Ch+arg_C] ecx +
jb loc_449EE8  +
cmp ecx [esp+3Ch+var_20] +
jbe loc_449F40  +
mov edx [esp+3Ch+var_24] +
test ebp ebp +
mov [edx+4] ebx +
mov [edx+0Ch] eax +
mov dword ptr [edx+8] 0 +
jz loc_449FCC  +
test byte ptr [ebx+0Ch] 1 +
jz loc_449F90  +
mov eax [ebp+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ecx +
mov [edx+8] eax +
test edi edi +
mov eax 1 +
cmovz edi eax +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_449E7A  +
mov ebp [esp+3Ch+var_24] +
mov edx [ebp+4] +
test edx edx +
jz loc_449F80  +
mov ecx [esp+3Ch+arg_10] +
test ecx ecx +
jz loc_449F1B  +
mov eax [ebp+8] +
mov edx [esp+3Ch+arg_10] +
mov [edx] eax +
mov eax [esp+3Ch+arg_14] +
test eax eax +
jz loc_449F2F  +
mov eax [ebp+4] +
mov edx [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [edx] eax +
mov eax [ebp+4] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+3Ch+var_20] ecx +
jnz loc_449EE8  +
mov edx [esp+3Ch+var_24] +
cmp eax [edx+0Ch] +
jbe loc_449EE8  +
jmp loc_449EB7  +
mov [esp+3Ch+var_38] 10h +
mov [esp+3Ch+var_3C] ebx +
call sub_406370  +
mov ebp eax +
mov eax [ebx+0A0h] +
test ebp ebp +
mov [eax+234h] ebp +
jnz loc_449E08  +
lea esi [esi+0] +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 2 +
mov [esp+3Ch+var_20] ecx +
jnz loc_449EDA  +
jmp loc_449E6D  +
mov eax [ebp+4] +
test eax eax +
jz loc_449E15  +
mov eax [eax+8] +
cmp eax [esp+3Ch+arg_C] +
ja loc_449E15  +
add eax [ebp+0Ch] +
cmp [esp+3Ch+arg_C] eax +
jnb loc_449E15  +
jmp loc_449F0A  +
mov [esp+3Ch+var_20] ecx +
jmp loc_449EE8  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov esi [esp+8Ch+arg_18] +
mov eax [esp+8Ch+arg_14] +
mov ebx [esp+8Ch+arg_2C] +
mov [esp+8Ch+var_2C] 0 +
test esi esi +
mov dword ptr [eax] 0 +
jz loc_44A01E  +
mov eax [esp+8Ch+arg_18] +
mov dword ptr [eax] 0 +
mov ecx [esp+8Ch+arg_20] +
mov eax [esp+8Ch+arg_1C] +
test ecx ecx +
mov dword ptr [eax] 0 +
jz loc_44A043  +
mov eax [esp+8Ch+arg_20] +
mov dword ptr [eax] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+28h] +
mov [esp+8Ch+var_7C] ebx +
mov [esp+8Ch+var_88] 0 +
shr eax 5 +
test al 42h +
setz al  +
movzx eax al +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_449780  +
test eax eax +
jz loc_44A222  +
mov edx [esp+8Ch+arg_8] +
xor eax eax +
mov ebp [ebx] +
test edx edx +
setnz al  +
mov [esp+8Ch+var_5C] eax +
jz loc_44A1C1  +
mov eax [esp+8Ch+arg_C] +
test eax eax +
jnz loc_44A0D0  +
mov eax [esp+8Ch+arg_10] +
test eax eax +
jnz loc_44A0D0  +
mov eax [esp+8Ch+arg_18] +
test eax eax +
jz loc_44A0E4  +
mov [esp+8Ch+var_88] 0F3Dh +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_404040  +
mov eax [esp+8Ch+arg_8] +
mov eax [eax+10h] +
mov [esp+8Ch+arg_C] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [eax+8] +
mov eax [esp+8Ch+arg_C] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_44A20F  +
mov ecx [esp+8Ch+arg_C] +
mov eax [eax+1Ch] +
add edx [ecx+38h] +
mov [esp+8Ch+var_6C] edx +
add [esp+8Ch+var_6C] eax +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_44A222  +
mov ecx [esp+8Ch+var_5C] +
mov dword ptr [ebp+5Ch] 0 +
test ecx ecx +
jz loc_44A247  +
mov eax [ebp+7Ch] +
test eax eax +
jz loc_44A4AC  +
cmp eax 1 +
jz loc_44A4FD  +
mov ebx [ebp+0] +
test ebx ebx +
jz loc_44A3C8  +
mov esi [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_1C] +
jmp loc_44A188  +
mov eax [ebx+24h] +
test eax eax +
jz loc_44A22F  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44A3C8  +
test byte ptr [esi+0Ch] 8 +
jz loc_44A195  +
mov eax [ebx+14h] +
test eax eax +
jnz loc_44A173  +
mov eax [esp+8Ch+arg_14] +
mov edx esi +
mov ecx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
call sub_448ED0  +
test eax eax +
jz loc_44A17E  +
mov [esp+8Ch+var_68] eax +
jmp loc_44A2BE  +
mov edi [esp+8Ch+arg_18] +
test edi edi +
jz loc_44A1E2  +
mov esi [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
test esi esi +
jnz loc_44A0FF  +
mov [esp+8Ch+var_88] 0F43h +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_404040  +
mov eax [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_44A111  +
mov eax [esp+8Ch+arg_C] +
add edx [eax+1Ch] +
mov [esp+8Ch+var_6C] edx +
jmp loc_44A126  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+8Ch+var_6C] +
mov eax ebx +
call sub_446760  +
test eax eax +
jnz loc_44A195  +
jmp loc_44A17E  +
mov ebx [ebp+0] +
mov [esp+8Ch+var_28] 0 +
mov [esp+8Ch+var_24] 0 +
mov [esp+8Ch+var_20] 0 +
test ebx ebx +
mov [esp+8Ch+var_1C] 0 +
jz loc_44AFC0  +
mov edi 0FFFFFFFFh +
mov [esp+8Ch+var_74] edi +
mov edi [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_1C] +
mov eax [ebx+14h] +
test eax eax +
jz loc_44A336  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_44A325  +
xor eax eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44A283  +
mov [esp+8Ch+var_68] eax +
mov eax [esp+8Ch+arg_1C] +
mov eax [eax] +
test eax eax +
jz loc_44A3D0  +
mov [esp+8Ch+var_68] 1 +
mov eax [esp+8Ch+var_2C] +
test eax eax +
jz loc_44A2DD  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_44A5C7  +
mov eax [eax+20h] +
mov edi [esp+8Ch+arg_18] +
mov [edi] eax +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax [esp+8Ch+var_68] +
shr edx 5 +
and edx 42h +
jnz loc_44A224  +
mov edx [ebp+64h] +
mov ecx [ebp+68h] +
test edx edx +
jle loc_44A224  +
mov eax [ecx] +
add ecx 8 +
sub edx 1 +
mov dword ptr [eax+1Ch] 0 +
jnz loc_44A305  +
mov eax [esp+8Ch+var_68] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx edi +
mov eax ebx +
call sub_446760  +
test eax eax +
jz loc_44A299  +
lea eax [esp+8Ch+var_20] +
mov edx edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
lea ecx [esp+8Ch+var_28] +
mov eax ebx +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] esi +
call sub_449050  +
test eax eax +
jz loc_44A299  +
cmp eax [esp+8Ch+var_74] +
ja loc_44A46D  +
mov edx [esp+8Ch+var_28] +
test edx edx +
jz loc_44A37D  +
mov ecx [esp+8Ch+arg_14] +
mov [ecx] edx +
mov edx [esp+8Ch+var_24] +
test edx edx +
jz loc_44A389  +
mov [esp+8Ch+var_2C] edx +
mov edx [esp+8Ch+arg_20] +
test edx edx +
jz loc_44A3A5  +
mov edx [esp+8Ch+var_1C] +
test edx edx +
jz loc_44A3A5  +
mov ecx [esp+8Ch+arg_20] +
mov [ecx] edx +
mov edx [esp+8Ch+var_20] +
test edx edx +
jz loc_44A469  +
mov ecx [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
mov [ecx] edx +
jmp loc_44A29B  +
mov [esp+8Ch+var_68] 0 +
mov eax [esp+8Ch+arg_28] +
test eax eax +
jnz loc_44A477  +
mov [esp+8Ch+arg_28] 4 +
lea eax [ebp+40h] +
mov ebx [ebp+0Ch] +
mov [esp+8Ch+var_3C] eax +
lea eax [ebp+3Ch] +
mov [esp+8Ch+var_38] eax +
jmp loc_44A418  +
add ebx 8 +
xor edi edi +
cmp ecx ebx +
jnb loc_44A5B5  +
test edi edi +
mov [ebp+0Ch] ebx +
jnz loc_44B079  +
mov ecx [ebp+10h] +
mov esi ebx +
cmp ecx ebx +
jbe loc_44A2BE  +
mov eax [ebp+14h] +
lea edx [esi+4] +
mov ebx esi +
add eax 4 +
cmp ecx edx +
jb loc_44A400  +
mov edx esi +
call sub_4466D0  +
cmp eax 0FFFFFFFFh +
jnz loc_44A65A  +
mov edx [ebp+0Ch] +
xor edi edi +
mov eax [ebp+14h] +
lea ebx [edx+0Ch] +
cmp [ebp+10h] ebx +
jb loc_44A40D  +
add edx 4 +
add eax 4 +
call sub_4466F0  +
mov edx [ebp+0Ch] +
lea ebx [edx+0Ch] +
mov edi eax +
jmp loc_44A40D  +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
jmp loc_44A29B  +
cmp [esp+8Ch+arg_28] 8 +
jz loc_44A3EA  +
cmp [esp+8Ch+arg_28] 4 +
jz loc_44A3EA  +
mov [esp+8Ch+var_88] 0FB3h +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_404040  +
jmp loc_44A3EA  +
mov eax [ebp+6Ch] +
lea edx [eax+1] +
cmp eax 63h +
mov [ebp+6Ch] edx +
jle loc_44A158  +
mov eax [esp+8Ch+arg_0] +
call sub_446600  +
mov [ebp+70h] eax +
mov eax [esp+8Ch+arg_0] +
call sub_446600  +
mov edx [ebp+70h] +
test edx edx +
mov [ebp+74h] eax +
jz loc_44AFCD  +
test eax eax +
jz loc_44AFCD  +
mov eax ebp +
call sub_449240  +
mov dword ptr [ebp+7Ch] 1 +
mov eax ebp +
call sub_449240  +
cmp dword ptr [ebp+7Ch] 1 +
jnz loc_44A158  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jnz loc_44AEEE  +
mov eax [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_8] +
mov eax [eax+4] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+74h] +
mov [esp+8Ch+var_8C] eax +
call sub_409000  +
test eax eax +
jz loc_44A3C8  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44A3C8  +
mov ecx [esp+8Ch+var_6C] +
jmp loc_44A57A  +
mov eax [eax] +
test eax eax +
jz loc_44A3C8  +
mov edx [eax+4] +
cmp ecx [edx+14h] +
jnz loc_44A570  +
mov esi [edx+18h] +
test esi esi +
jz loc_44A58D  +
cmp ebx esi +
jnz loc_44A570  +
mov eax [edx+4] +
mov edi [esp+8Ch+arg_14] +
mov [edx+18h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [edi] eax +
mov eax [edx+8] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_44A2BE  +
call sub_4466D0  +
mov ebx [ebp+0Ch] +
add ebx 8 +
mov edi eax +
jmp loc_44A40D  +
mov edi [esp+8Ch+arg_14] +
xor eax eax +
mov edx [edi] +
test edx edx +
cmovz eax edi +
mov edi [esp+8Ch+arg_18] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+arg_10] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_449DD0  +
mov edi [esp+8Ch+arg_C] +
mov edx [edi+3Ch] +
mov ecx [edi+1Ch] +
test edx edx +
jz loc_44A62D  +
mov ecx [edi+38h] +
add ecx [edx+1Ch] +
test eax eax +
mov edx [esp+8Ch+var_2C] +
jz loc_44A63D  +
add ecx [eax+8] +
cmp ecx [edx+28h] +
jz loc_44A64C  +
mov eax [edx+20h] +
mov dword ptr [edx+1Ch] 1 +
jmp loc_44A2D4  +
mov eax [esp+8Ch+arg_18] +
mov eax [eax] +
mov [edx+20h] eax +
jmp loc_44A640  +
test eax eax +
jz loc_44B058  +
cmp [esp+8Ch+arg_28] 8 +
mov [esp+8Ch+var_60] eax +
jz loc_44A710  +
mov eax [esp+8Ch+arg_28] +
add dword ptr [ebp+0Ch] 4 +
cmp [esp+8Ch+arg_28] 4 +
mov [esp+8Ch+var_64] eax +
setnz cl  +
mov ebx [ebp+0Ch] +
mov edi [ebp+14h] +
mov eax [esp+8Ch+var_60] +
mov [esp+8Ch+var_74] 0FFFFFFFEh +
mov [esp+8Ch+var_40] 0 +
mov [esp+8Ch+var_58] edi +
add edi 4 +
add eax ebx +
mov [esp+8Ch+var_70] edi +
lea edi [ebx+2] +
cmp eax edi +
mov [esp+8Ch+var_4C] eax +
mov [esp+8Ch+var_54] edi +
jnb loc_44AE6B  +
test cl cl +
jnz loc_44AE52  +
cmp [esp+8Ch+var_64] 4 +
jz loc_44AE8E  +
lea eax [ebx+0Ah] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jnb loc_44AEB3  +
mov eax [esp+8Ch+var_54] +
add eax [esp+8Ch+var_64] +
lea ecx [eax+1] +
cmp [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_34] ecx +
jnb loc_44A723  +
cmp [esp+8Ch+var_74] 2 +
ja loc_44B032  +
xor eax eax +
jmp loc_44A745  +
add dword ptr [ebp+0Ch] 4 +
xor ecx ecx +
mov [esp+8Ch+var_64] 4 +
jmp loc_44A68E  +
movzx eax byte ptr [eax] +
cmp [esp+8Ch+var_74] 2 +
mov [esp+8Ch+var_2D] al +
ja loc_44B032  +
cmp eax 4 +
ja loc_44AFE2  +
jz loc_44A767  +
cmp eax 2 +
jz loc_44A767  +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFoun +
call off_4733A4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4040F0  +
jmp loc_44A2BE  +
mov eax [esp+8Ch+var_3C] +
mov ecx [ebp+38h] +
mov edx [ebp+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
call sub_446180  +
test eax eax +
jz loc_44A2BE  +
cmp edi 0 +
mov eax [ebp+40h] +
ja loc_44A2BE  +
cmp ebx eax +
jnb loc_44A2BE  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 1E4h +
mov [esp+8Ch+var_8C] edi +
call sub_406370  +
test eax eax +
mov [esp+8Ch+var_48] eax +
jz loc_44A2BE  +
mov eax [ebp+3Ch] +
mov [esp+8Ch+var_58] edi +
add ebx eax +
add eax [ebp+40h] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_74] eax +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_408BC0  +
add ebx [esp+8Ch+var_1C] +
test eax eax +
mov [esp+8Ch+var_50] eax +
jz loc_44A9CF  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_54] ebp +
mov ebp ebx +
mov [esp+8Ch+var_44] esi +
mov [esp+8Ch+var_88] 18h +
mov [esp+8Ch+var_8C] edi +
call sub_406370  +
test eax eax +
mov ebx eax +
jz loc_44AFD9  +
mov eax [esp+8Ch+var_50] +
mov esi [esp+8Ch+var_74] +
mov [ebx] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_7C] esi +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_408BC0  +
mov edx [esp+8Ch+var_1C] +
add edx ebp +
lea ebp [edx+1] +
mov [ebx+4] eax +
xor eax eax +
cmp esi ebp +
jb loc_44A870  +
movzx eax byte ptr [edx] +
mov [ebx+8] eax +
jmp loc_44A886  +
mov eax [ebx+10h] +
lea eax [eax+edx*8] +
add edx 1 +
mov [eax] esi +
mov [ebx+0Ch] edx +
mov [eax+4] ecx +
mov eax [esp+8Ch+var_74] +
lea ecx [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_8C] edi +
call sub_408BC0  +
add ebp [esp+8Ch+var_1C] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] ebp +
mov esi eax +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_408BC0  +
add ebp [esp+8Ch+var_1C] +
test esi esi +
mov ecx eax +
jz loc_44A919  +
mov edx [ebx+0Ch] +
test dl 3 +
jnz loc_44A875  +
mov [esp+8Ch+var_70] eax +
mov eax [ebx+10h] +
mov ecx eax +
lea eax ds:20h[edx*8] +
mov [esp+8Ch+var_8C] ecx +
mov [esp+8Ch+var_88] eax +
call sub_408090  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jz loc_44AC69  +
mov [ebx+10h] eax +
mov edx [ebx+0Ch] +
jmp loc_44A878  +
mov ecx [esp+8Ch+var_50] +
mov eax 0ECF56BFh +
mov esi [esp+8Ch+var_48] +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov ecx [esp+8Ch+var_54] +
lea eax [esi+eax*4] +
mov edx [eax] +
mov [ebx+14h] edx +
mov [eax] ebx +
mov eax ebp +
sub eax [ecx+3Ch] +
cmp eax [ecx+40h] +
jnb loc_44A9C7  +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_408BC0  +
add ebp [esp+8Ch+var_1C] +
mov ecx eax +
mov [esp+8Ch+var_50] eax +
mov eax 0ECF56BFh +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov eax [esi+eax*4] +
test eax eax +
jz loc_44A9BB  +
cmp edx [eax] +
jz loc_44A9C7  +
mov edx [esp+8Ch+var_50] +
jmp loc_44A9B4  +
cmp edx [eax] +
jz loc_44A9C7  +
mov eax [eax+14h] +
test eax eax +
jnz loc_44A9B0  +
mov eax [esp+8Ch+var_50] +
test eax eax +
jnz loc_44A817  +
mov ebp [esp+8Ch+var_54] +
mov esi [esp+8Ch+var_44] +
mov eax [esp+8Ch+var_4C] +
mov edi [esp+8Ch+var_34] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
call sub_408BC0  +
mov ecx eax +
mov eax [esp+8Ch+var_20] +
add eax edi +
test ecx ecx +
mov edi eax +
jz loc_44B00C  +
mov eax ecx +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub edx eax +
mov eax edx +
mov edx [esp+8Ch+var_48] +
mov ebx [edx+eax*4] +
test ebx ebx +
jnz loc_44AA4B  +
jmp loc_44AC9F  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_44AC9F  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_44AA40  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 64h +
mov [esp+8Ch+var_8C] eax +
call sub_406370  +
test eax eax +
mov [esp+8Ch+var_74] eax +
jz loc_44A2BE  +
mov eax [esp+8Ch+var_74] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_4C] +
mov [eax+8] ecx +
mov ecx [esp+8Ch+var_40] +
mov [eax+54h] ecx +
mov ecx eax +
movzx eax [esp+8Ch+var_2D] +
mov [ecx+58h] al +
movzx eax byte ptr [esp+8Ch+var_64] +
mov [ecx+59h] al +
mov eax ecx +
mov ecx [esp+8Ch+var_48] +
mov [eax+30h] esi +
mov esi [ebx+0Ch] +
mov [eax+40h] edx +
mov [eax+50h] ebp +
mov [eax+1Ch] ecx +
mov ecx eax +
mov eax [ebp+1Ch] +
test esi esi +
mov [ecx+34h] eax +
jz loc_44AD04  +
mov eax ecx +
xor esi esi +
lea ecx [ecx+0Ch] +
mov [esp+8Ch+var_48] ecx +
mov ecx edi +
mov edi edx +
mov [esp+8Ch+var_50] ebp +
mov ebp eax +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_58] 0 +
mov [esp+8Ch+var_54] 0 +
jmp loc_44AB1C  +
cmp eax 10h +
jz loc_44AC12  +
ja loc_44AB6B  +
cmp eax 3 +
nop   +
jnz loc_44AB10  +
mov eax [esp+8Ch+var_14] +
mov [ebp+18h] eax +
lea esi [esi+0] +
add esi 1 +
cmp esi [ebx+0Ch] +
jnb loc_44ACC1  +
mov eax [ebx+10h] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+8Ch+var_1C] edx +
mov edx [eax+4] +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_8C] ecx +
mov ecx ebp +
mov [esp+8Ch+var_88] edi +
call sub_446B60  +
test eax eax +
mov ecx eax +
jz loc_44ABA8  +
mov eax [esp+8Ch+var_1C] +
cmp eax 12h +
jz loc_44ABF7  +
jbe loc_44AAF0  +
cmp eax 1Bh +
jz loc_44ABB1  +
cmp eax 55h +
jz loc_44AB7E  +
cmp eax 13h +
nop   +
jnz loc_44AB10  +
mov eax [esp+8Ch+var_14] +
mov [ebp+20h] eax +
jmp loc_44AB10  +
mov eax [esp+8Ch+var_14] +
cmp dword ptr [ebx+4] 11h +
mov [esp+8Ch+var_64] eax +
jnz loc_44AB10  +
mov [ebp+5Ch] eax +
jmp loc_44AB10  +
mov edx [esp+8Ch+var_10] +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] ecx +
mov [esp+8Ch+var_88] edx +
mov edx [esp+8Ch+var_48] +
mov [esp+8Ch+var_8C] eax +
mov eax ebp +
call sub_446A40  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jnz loc_44AB10  +
mov ebp [esp+8Ch+var_50] +
jmp loc_44A2BE  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] eax +
mov eax [esp+8Ch+var_18] +
cmp eax 8 +
jz loc_44AC25  +
cmp eax 0Eh +
jz loc_44AC25  +
cmp eax 1F21h +
jz loc_44AC25  +
mov [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorDw_a +
call off_4733A4  +
mov ecx [esp+8Ch+var_4C] +
mov [esp+8Ch+var_70] 0 +
mov eax [esp+8Ch+var_70] +
mov [ebp+28h] eax +
jmp loc_44AB10  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_58] eax +
xor eax eax +
cmp [esp+8Ch+var_18] 1 +
setnz al  +
mov [esp+8Ch+var_54] eax +
jmp loc_44AB10  +
mov dword ptr [ebp+2Ch] 1 +
mov eax [esp+8Ch+var_14] +
mov [ebp+38h] eax +
jmp loc_44AB10  +
mov eax [esp+8Ch+var_70] +
test eax eax +
jz loc_44ABEB  +
mov [esp+8Ch+var_88] 3Ah +
mov [esp+8Ch+var_8C] eax +
mov [esp+8Ch+var_4C] ecx +
call strchr  +
mov ecx [esp+8Ch+var_4C] +
cmp [esp+8Ch+var_70] eax +
jz loc_44ABEB  +
test eax eax +
jz loc_44ABEB  +
cmp byte ptr [eax-1] 2Eh +
jnz loc_44ABEB  +
lea edx [eax+1] +
cmp byte ptr [eax+1] 2Fh +
mov eax edx +
cmovnz eax [esp+8Ch+var_70] +
mov [esp+8Ch+var_70] eax +
jmp loc_44ABEB  +
mov ebp [esp+8Ch+var_54] +
xor ebx ebx +
mov edi [esp+8Ch+var_48] +
mov esi [edi+ebx*4] +
test esi esi +
jz loc_44AC92  +
lea esi [esi+0] +
mov eax [esi+10h] +
mov [esp+8Ch+var_8C] eax +
call free  +
mov esi [esi+14h] +
test esi esi +
jnz loc_44AC80  +
add ebx 1 +
cmp ebx 79h +
jnz loc_44AC73  +
jmp loc_44A2BE  +
mov [esp+8Ch+var_88] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorCoul +
call off_4733A4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4040F0  +
jmp loc_44A2BE  +
mov edi ecx +
mov eax [esp+8Ch+var_64] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_54] +
mov ebp [esp+8Ch+var_50] +
add eax ecx +
test edx edx +
cmovz eax ecx +
test eax eax +
mov [esp+8Ch+var_58] eax +
jz loc_44AD04  +
mov ecx [esp+8Ch+var_58] +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_8C] ecx +
mov ecx [esp+8Ch+var_64] +
lea edx [eax+0Ch] +
add eax 8 +
call sub_446880  +
test eax eax +
jz loc_44A2BE  +
mov eax [esp+8Ch+var_74] +
mov [eax+3Ch] edi +
mov eax [esp+8Ch+var_60] +
add eax [ebp+0Ch] +
jb loc_44B06C  +
mov [ebp+0Ch] eax +
mov eax [ebp+0] +
mov edi [esp+8Ch+var_74] +
test eax eax +
jz loc_44AEC9  +
mov [eax+4] edi +
mov esi [esp+8Ch+var_5C] +
mov edi [esp+8Ch+var_74] +
test esi esi +
mov [edi] eax +
mov [ebp+0] edi +
jz loc_44AD90  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jz loc_44ADCE  +
mov ebx [edi+14h] +
mov eax edi +
test ebx ebx +
jz loc_44ADCE  +
mov ecx [edi+24h] +
mov [esp+8Ch+var_68] 0 +
test ecx ecx +
jz loc_44ADC1  +
mov ecx [ebp+18h] +
mov ebx [ebp+0Ch] +
mov eax ebx +
sub eax [ebp+1Ch] +
cmp eax [ecx+24h] +
jz loc_44AED1  +
mov esi [esp+8Ch+var_68] +
test esi esi +
jz loc_44A418  +
jmp loc_44A2B6  +
mov eax [esp+8Ch+var_74] +
mov edx [eax+14h] +
test edx edx +
jz loc_44AE0C  +
mov edi [eax+24h] +
mov [esp+8Ch+var_68] 0 +
test edi edi +
jnz loc_44AD67  +
mov edx [esp+8Ch+var_6C] +
call sub_446760  +
test eax eax +
jnz loc_44AE0C  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
jmp loc_44AD67  +
mov edx [esp+8Ch+var_6C] +
call sub_446760  +
test eax eax +
jz loc_44AD67  +
mov eax [esp+8Ch+arg_1C] +
mov ecx [esp+8Ch+var_6C] +
mov edx [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_448ED0  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_44AD67  +
mov eax [esp+8Ch+arg_20] +
mov ecx [esp+8Ch+arg_14] +
mov edx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_2C] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_449050  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_44AD67  +
mov [esp+8Ch+var_88] 0ABDh +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_404040  +
jmp loc_44A6DB  +
mov eax [esp+8Ch+var_70] +
mov edx ebx +
mov [esp+8Ch+var_50] ecx +
call sub_4466B0  +
mov ecx [esp+8Ch+var_50] +
mov [esp+8Ch+var_40] eax +
sub eax 2 +
mov [esp+8Ch+var_74] eax +
jmp loc_44A6C8  +
lea eax [ebx+6] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jb loc_44A6EC  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_4466D0  +
mov ebx eax +
jmp loc_44A6EC  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_4466F0  +
mov ebx eax +
mov edi edx +
jmp loc_44A6EC  +
mov [ebp+4] edi +
jmp loc_44AD2D  +
mov eax [ebp+14h] +
mov edx [esp+8Ch+arg_24] +
call sub_4467F0  +
mov ebx [ebp+0Ch] +
mov [ebp+1Ch] ebx +
mov [ebp+18h] eax +
jmp loc_44AD7B  +
mov eax [eax+4] +
mov edi [esp+8Ch+arg_8] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+70h] +
mov [esp+8Ch+var_8C] eax +
call sub_409000  +
test eax eax +
jz loc_44A3C8  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_44A3C8  +
mov [esp+8Ch+var_74] 0 +
xor edi edi +
mov [esp+8Ch+var_68] ebp +
mov eax [esi+4] +
mov ecx eax +
mov [esp+8Ch+var_70] eax +
add eax 24h +
jz loc_44AF86  +
mov edx [ecx+30h] +
jmp loc_44AF5A  +
cmp ebx edx +
jz loc_44AF5E  +
mov eax [eax] +
test eax eax +
jz loc_44AF86  +
test edx edx +
jnz loc_44AF50  +
mov ecx [eax+4] +
cmp [esp+8Ch+var_6C] ecx +
jb loc_44AF54  +
mov ebp [eax+8] +
cmp [esp+8Ch+var_6C] ebp +
jnb loc_44AF54  +
sub ebp ecx +
test edi edi +
jz loc_44AF7C  +
cmp ebp [esp+8Ch+var_74] +
jnb loc_44AF54  +
mov [esp+8Ch+var_74] ebp +
mov edi [esp+8Ch+var_70] +
jmp loc_44AF54  +
mov esi [esi] +
test esi esi +
jnz loc_44AF3B  +
test edi edi +
mov ebp [esp+8Ch+var_68] +
jz loc_44A3C8  +
mov eax [edi+0Ch] +
mov ecx [esp+8Ch+arg_14] +
mov [edi+30h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [ecx] eax +
mov eax [edi+14h] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_44A2BE  +
mov [esp+8Ch+var_68] 0 +
jmp loc_44A2A5  +
mov dword ptr [ebp+7Ch] 2 +
jmp loc_44A158  +
mov ebp [esp+8Ch+var_54] +
jmp loc_44A2BE  +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_0 +
call off_4733A4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4040F0  +
jmp loc_44A2BE  +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] offset aDwarfErrorBadA +
call off_4733A4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4040F0  +
jmp loc_44A2BE  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_1 +
mov [esp+8Ch+var_88] eax +
call off_4733A4  +
mov [esp+8Ch+var_8C] 11h +
call sub_4040F0  +
jmp loc_44A2BE  +
mov ebx [ebp+0Ch] +
mov eax [ebp+14h] +
mov ecx [ebp+10h] +
lea edx [ebx+4] +
add eax 4 +
jmp loc_44A400  +
mov [esp+8Ch+var_68] 0 +
jmp loc_44A2BE  +
mov [esp+8Ch+var_60] edi +
xor ecx ecx +
mov [esp+8Ch+var_64] 8 +
jmp loc_44A691  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_44B0E4  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_44B0F0  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_44B0DF  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_44B0F0  +
sub edx 1 +
jnz loc_44B0D3  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_44B150  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_409320  +
test eax eax +
jz loc_44B142  +
mov dword ptr [eax+14h] 0FFFFFFFFh +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_409270  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_44B13D  +
jmp loc_44B110  +
***
mov [esp+18h+var_18] 2Ch +
call sub_408000  +
test eax eax +
mov ebx eax +
jz loc_44B1E6  +
mov [esp+18h+var_10] 18h +
mov [esp+18h+var_14] offset sub_44B100 +
mov [esp+18h+var_18] eax +
call sub_408DA0  +
test eax eax +
jz loc_44B1D7  +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+1Ch] 1 +
mov dword ptr [ebx+20h] 40h +
mov [esp+18h+var_18] 100h +
call sub_408000  +
test eax eax +
mov [ebx+28h] eax +
jz loc_44B1D7  +
mov dword ptr [eax] 0 +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
jmp loc_44B1D2  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_408DD0  +
mov eax [ebx+28h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+18h+arg_4] +
mov esi [esp+18h+arg_0] +
cmp byte ptr [edi] 0 +
jz loc_44B295  +
mov edx [esi+24h] +
test edx edx +
jnz loc_44B2A0  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_409000  +
test eax eax +
mov ebx eax +
jz loc_44B2B6  +
add dword ptr [eax+10h] 1 +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_44B292  +
mov [esp+18h+var_18] edi +
call strlen  +
add eax 1 +
test eax eax +
mov [ebx+0Ch] eax +
jle loc_44B2E6  +
mov edx [esi+1Ch] +
cmp edx [esi+20h] +
jz loc_44B2C2  +
mov eax [esi+28h] +
lea ecx [edx+1] +
mov [esi+1Ch] ecx +
mov [ebx+14h] edx +
mov [eax+edx*4] ebx +
mov eax [ebx+14h] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_14] 99h +
mov [esp+18h+var_18] offset a____Binutil_15 +
call sub_404040  +
jmp loc_44B23C  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea eax [edx+edx] +
mov [esi+20h] eax +
mov eax [esi+28h] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_408150  +
test eax eax +
mov [esi+28h] eax +
jz loc_44B2B6  +
mov edx [esi+1Ch] +
jmp loc_44B286  +
mov [esp+18h+var_14] 0A5h +
mov [esp+18h+var_18] offset a____Binutil_15 +
call sub_404040  +
jmp loc_44B27B  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_44B32B  +
mov eax [esi+24h] +
test eax eax +
jnz loc_44B347  +
cmp ebx [esi+1Ch] +
jnb loc_44B331  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
add dword ptr [eax+10h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0BCh +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_404040  +
jmp loc_44B321  +
mov [esp+14h+var_10] 0BBh +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_404040  +
cmp ebx [esi+1Ch] +
jb loc_44B321  +
jmp loc_44B331  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_44B3A4  +
mov eax [esi+24h] +
test eax eax +
jnz loc_44B3D0  +
cmp ebx [esi+1Ch] +
jnb loc_44B3E9  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jz loc_44B3B0  +
sub edx 1 +
mov [eax+10h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0C7h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_404040  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
jmp loc_44B39E  +
mov [esp+14h+var_10] 0C5h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_404040  +
cmp ebx [esi+1Ch] +
jb loc_44B391  +
mov [esp+14h+var_10] 0C6h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_404040  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jnz loc_44B39E  +
jmp loc_44B3B0  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax+28h] +
mov eax [eax+edx*4] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
cmp edx 1 +
jbe locret_44B455  +
mov ecx [eax+28h] +
lea eax [ecx+4] +
lea ecx [ecx+edx*4] +
mov edx [eax] +
add eax 4 +
cmp eax ecx +
mov dword ptr [edx+10h] 0 +
jnz loc_44B445  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [edi+24h] +
mov esi [edi+1Ch] +
test eax eax +
jnz loc_44B4A5  +
cmp esi ebx +
jb loc_44B4BD  +
cmp esi ebx +
mov [edi+1Ch] ebx +
jbe loc_44B49E  +
mov edx [edi+28h] +
mov eax [edx+ebx*4] +
add ebx 1 +
cmp ebx esi +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
jnz loc_44B486  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 0E1h +
mov [esp+10h+var_10] offset a____Binutil_15 +
call sub_404040  +
cmp esi ebx +
jnb loc_44B47C  +
mov [esp+10h+var_C] 0E2h +
mov [esp+10h+var_10] offset a____Binutil_15 +
call sub_404040  +
jmp loc_44B47C  +
***
mov edx [esp+arg_0] +
push esi  +
push esi  +
push esi  +
mov edx [eax] +
mov ecx eax +
test dl 1 +
jz loc_44B801  +
xor eax eax +
cmp dword ptr [ecx+4] 0 +
jnz locret_44B81C  +
test dl 2 +
jz loc_44B814  +
mov ecx [ecx+8] +
test ecx ecx +
jz loc_44B814  +
xor eax eax +
cmp byte ptr [ecx] 0 +
jnz locret_44B81C  +
xor eax eax +
and edx 4 +
setz al  +
retn   +
***
push ebx  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax ecx +
jmp loc_44B899  +
add ebx 1 +
or ecx 0FFFFFF80h +
mov [ebx-1] cl +
mov ecx edx +
shr edx 7 +
and ecx 7Fh +
test edx edx +
jnz loc_44B890  +
mov [ebx] cl +
mov edx [eax] +
lea esi [ebx+1] +
test dl 1 +
jz loc_44B8C9  +
mov ecx [eax+4] +
mov edx esi +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jnz loc_44B8D7  +
lea esi [edx+1] +
mov [edx] bl +
mov edx [eax] +
and edx 2 +
jnz loc_44B8F0  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
or ebx 0FFFFFF80h +
add edx 1 +
mov [edx-1] bl +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jz loc_44B8C2  +
jmp loc_44B8D7  +
mov edi [eax+8] +
mov [esp+10h+var_10] edi +
call strlen  +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] esi +
lea ebx [eax+1] +
mov [esp+10h+var_8] ebx +
add esi ebx +
call memcpy  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+1Ch+var_14] edx +
jnz loc_44BA60  +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov ecx [edx+184h] +
test ecx ecx +
mov [esp+1Ch+var_10] ecx +
jz loc_44BA6D  +
mov eax [eax+0A0h] +
mov ebx 2 +
xor edi edi +
mov ecx eax +
mov ebp eax +
imul eax [esp+1Ch+var_14] +
lea esi [ecx+eax+268h] +
nop   +
mov eax esi +
call sub_44B7F0  +
xor edx edx +
test eax eax +
jnz loc_44B9F8  +
mov edx esi +
mov eax ebx +
call sub_44B820  +
mov edx eax +
add ebx 1 +
add edi edx +
add esi 0Ch +
cmp ebx 47h +
jnz loc_44B9E0  +
mov ecx [esp+1Ch+var_14] +
mov ebx [ebp+ecx*4+8F8h] +
test ebx ebx +
jz loc_44BA3A  +
lea esi [ebx+8] +
mov ebp [ebx+4] +
mov eax esi +
call sub_44B7F0  +
xor edx edx +
test eax eax +
jnz loc_44BA32  +
mov edx esi +
mov eax ebp +
call sub_44B820  +
mov edx eax +
mov ebx [ebx] +
add edi edx +
test ebx ebx +
jnz loc_44BA14  +
test edi edi +
jnz loc_44BA48  +
mov edx [esp+1Ch+var_14] +
xor eax eax +
test edx edx +
jnz loc_44BA58  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea eax [edi+eax+0Ah] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_10] offset aGnu_0 +
jmp loc_44B9BE  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 4 +
mov ebx [esp+8+arg_0] +
mov eax ebx +
call sub_44B990  +
mov edx 1 +
mov esi eax +
mov eax ebx +
call sub_44B990  +
lea edx [eax+esi] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
cmovnz eax ecx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] 1 +
mov [esp+3Ch+var_1C] 0 +
lea edx [eax+1] +
mov [esp+3Ch+var_10] edx +
mov byte ptr [eax] 41h +
mov edx [esp+3Ch+var_1C] +
mov eax ebp +
call sub_44B990  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jnz loc_44BB30  +
mov eax [esp+3Ch+var_18] +
add [esp+3Ch+var_1C] 1 +
add [esp+3Ch+var_10] eax +
add [esp+3Ch+var_14] eax +
cmp [esp+3Ch+var_1C] 2 +
jnz loc_44BAE9  +
mov eax [esp+3Ch+var_14] +
cmp eax [esp+3Ch+arg_8] +
jnz loc_44BC6A  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_1C] +
mov edi [ebp+4] +
test eax eax +
jz loc_44BC4E  +
mov ebx 4 +
mov esi offset aGnu_0 +
mov eax [edi+30h] +
mov edi [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_38] edi +
lea edi [edi+4] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp-10h+arg_4] ebx +
mov [esp-10h+arg_0] esi +
lea esi [edi+ebx] +
mov [esp+0] edi +
call memcpy  +
mov byte ptr [esi] 1 +
mov eax [ebp+4] +
mov edx [eax+30h] +
lea eax [esi+1] +
mov [esp-10h+arg_0] eax +
mov eax [esp+24h] +
sub eax 4 +
sub eax ebx +
mov ebx 2 +
mov [esp+0] eax +
call edx  +
lea eax [esi+5] +
mov edx [ebp+0A0h] +
mov [esp+18h] eax +
imul eax [esp+20h] +
lea eax [edx+eax+250h] +
mov [esp+1Ch] eax +
mov eax [ebp+4] +
mov edi ebx +
mov eax [eax+1B0h] +
mov eax [eax+194h] +
test eax eax +
jz loc_44BBD2  +
mov [esp+0] ebx +
call eax  +
mov edi eax +
mov ecx [esp+1Ch] +
lea eax [edi+edi*2] +
lea esi [ecx+eax*4] +
mov eax esi +
call sub_44B7F0  +
test eax eax +
jnz loc_44BBF8  +
mov eax [esp+18h] +
mov ecx esi +
mov edx edi +
call sub_44B880  +
mov [esp+18h] eax +
add ebx 1 +
cmp ebx 47h +
jnz loc_44BBB6  +
mov eax [ebp+0A0h] +
mov edx [esp+20h] +
mov ebx [eax+edx*4+8F8h] +
test ebx ebx +
jz loc_44BAFC  +
mov edi [esp+18h] +
mov [esp+50h] ebp +
lea ebp [ebx+8] +
mov esi [ebx+4] +
mov eax ebp +
call sub_44B7F0  +
test eax eax +
jnz loc_44BC3F  +
mov eax edi +
mov ecx ebp +
mov edx esi +
call sub_44B880  +
mov edi eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44BC21  +
mov ebp [esp+50h] +
jmp loc_44BAFC  +
mov eax [edi+1B0h] +
mov esi [eax+184h] +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea ebx [eax+1] +
jmp loc_44BB49  +
mov [esp+3Ch+var_34] offset aBfd_elf_set_ob +
mov [esp+3Ch+var_38] 0E1h +
mov [esp+3Ch+var_3C] offset a____Binutil_23 +
call sub_404070  +
lea esi [esi+0] +
lea edi [edi+0] +
mov ecx [esp+3Ch+var_30] +
cmp ecx 46h +
jbe loc_44BCD0  +
mov eax [esp+3Ch+var_38] +
mov edx [esp+3Ch+var_34] +
mov eax [eax+0A0h] +
mov eax [eax+edx*4+8F8h] +
test eax eax +
jnz loc_44BCC2  +
jmp loc_44BCF0  +
cmp ecx edx +
jb loc_44BCF0  +
mov eax [eax] +
test eax eax +
lea esi [esi+0] +
jz locret_44BCF3  +
mov edx [eax+4] +
cmp edx ecx +
jnz loc_44BCB4  +
mov eax [eax+0Ch] +
retn   +
lea edx [ecx+ecx*2] +
mov ecx [esp+3Ch+var_38] +
imul eax [esp+3Ch+var_34] +
lea eax [eax+edx*4] +
add eax [ecx+0A0h] +
mov eax [eax+254h] +
retn   +
xor eax eax +
retn   +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_406290  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ecx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_8] +
test eax eax +
jz loc_44BD90  +
cmp eax 1 +
jnz loc_44BD70  +
cmp edx 20h +
jz loc_44BDA8  +
and edx 1 +
cmp edx 1 +
sbb eax eax +
add eax 2 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset a_bfd_elf_obj_a +
mov [esp+1Ch+var_18] 1A8h +
mov [esp+1Ch+var_1C] offset a____Binutil_23 +
call sub_404070  +
lea esi [esi+0] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+18Ch] +
mov [esp+1Ch+arg_0] edx +
add esp 1Ch +
jmp eax  +
mov eax 3 +
jmp loc_44BD68  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_44BE00  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44BD40  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esi+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_44B920  +
mov esi eax +
jmp loc_44BDDE  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_44BE70  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44BD40  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_44BD00  +
mov [esi+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_44B920  +
mov esi eax +
jmp loc_44BE3E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp esi 46h +
ja loc_44BEE2  +
imul eax ebp +
lea edx [esi+esi*2] +
lea ebx [eax+edx*4+250h] +
add ebx [edi+0A0h] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44BD40  +
mov [ebx] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebx+4] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_44BD00  +
mov [ebx+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov edx ebp +
mov eax edi +
call sub_44B920  +
mov ebx eax +
jmp loc_44BEAE  +
***
jmp sub_44BF00  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_44BF20  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44BF18  +
mov [esp+2Ch+var_10] 0 +
mov eax [esp+2Ch+arg_0] +
imul edx [esp+2Ch+var_10] +
mov ebx [eax+0A0h] +
add edx 268h +
add ebx edx +
add edx [esi+0A0h] +
lea ebp [ebx+33Ch] +
mov edi edx +
jmp loc_44BF6A  +
add ebx 0Ch +
add edi 0Ch +
cmp ebx ebp +
jz loc_44BF99  +
mov eax [ebx] +
mov [edi] eax +
mov eax [ebx+4] +
mov [edi+4] eax +
mov eax [ebx+8] +
test eax eax +
jz loc_44BF60  +
cmp byte ptr [eax] 0 +
jz loc_44BF60  +
mov [esp+2Ch+var_28] eax +
add ebx 0Ch +
add edi 0Ch +
mov [esp+2Ch+var_2C] esi +
call sub_44BD00  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_44BF6A  +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+var_10] +
mov eax [eax+0A0h] +
mov ebx [eax+ecx*4+8F8h] +
test ebx ebx +
jz loc_44C007  +
mov eax [ebx+8] +
and eax 3 +
cmp eax 2 +
jz loc_44BFE3  +
cmp eax 3 +
jz loc_44C040  +
cmp eax 1 +
jz loc_44C020  +
mov [esp+2Ch+var_24] offset a_bfd_elf_copy_ +
mov [esp+2Ch+var_28] 185h +
mov [esp+2Ch+var_2C] offset a____Binutil_23 +
call sub_404070  +
mov eax [ebx+4] +
mov edx [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44BE10  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44BFB2  +
add [esp+2Ch+var_10] 1 +
cmp [esp+2Ch+var_10] 2 +
jz loc_44BF18  +
jmp loc_44BF31  +
mov eax [ebx+4] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44BDB0  +
jmp loc_44C001  +
mov eax [ebx+4] +
mov ecx [ebx+10h] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44BE80  +
jmp loc_44C001  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_44C090  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_5C] eax +
call sub_408000  +
test eax eax +
mov ebp eax +
jz loc_44C082  +
mov eax [ebx+2Ch] +
mov edx [ebx+18h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_48] edx +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_4034C0  +
test eax eax +
jz loc_44C0F0  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [ebp+0] 41h +
mov edx [ebx+18h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov ecx [ecx+184h] +
mov [esp+5Ch+var_30] ecx +
jz loc_44C100  +
mov [esp+5Ch+var_5C] ebp +
call free  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
sub esi 1 +
mov [esp+5Ch+var_28] esi +
jz loc_44C0F0  +
add edx ebp +
lea ecx [edx-4] +
lea ebx [ebp+1] +
cmp ebx ecx +
mov [esp+5Ch+var_3C] edx +
mov [esp+5Ch+var_34] ecx +
jnb loc_44C0F0  +
mov [esp+5Ch+var_20] ebp +
mov ebp [esp+5Ch+arg_0] +
mov edi ebx +
mov eax [eax+28h] +
lea ebx [edi+4] +
mov [esp+5Ch+var_5C] edi +
call eax  +
test eax eax +
jz loc_44C3E8  +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] ebx +
cmp ecx eax +
cmovbe eax ecx +
mov [esp+5Ch+var_24] eax +
sub eax 4 +
mov [esp+5Ch+var_58] eax +
mov esi eax +
mov [esp+5Ch+var_38] eax +
call sub_470CB0  +
lea edx [eax+1] +
cmp edx esi +
jnb loc_44C3E8  +
test edx edx +
jz loc_44C3E8  +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_44C3B0  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_40] edx +
call strcmp  +
mov edx [esp+5Ch+var_40] +
test eax eax +
jnz loc_44C3B0  +
mov [esp+5Ch+var_40] 0 +
mov eax [esp+5Ch+var_38] +
lea edi [ebx+edx] +
sub eax edx +
mov [esp+5Ch+var_38] eax +
jz loc_44C2D0  +
cmp [esp+5Ch+var_3C] edi +
jbe loc_44C2D0  +
mov ebx edi +
mov eax [esp+5Ch+var_3C] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] eax +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
call sub_408BC0  +
mov edi [esp+5Ch+var_10] +
add edi ebx +
cmp edi [esp+5Ch+var_34] +
mov esi eax +
jnb loc_44C3E0  +
mov eax [ebp+4] +
mov eax [eax+28h] +
mov [esp+5Ch+var_5C] edi +
add edi 4 +
call eax  +
test eax eax +
jz loc_44C2D0  +
mov ecx [esp+5Ch+var_38] +
mov ebx 0FFFFFFFCh +
cmp eax ecx +
cmova eax ecx +
sub ebx [esp+5Ch+var_10] +
mov [esp+5Ch+var_2C] eax +
add ebx eax +
add ebx edi +
cmp esi 1 +
jnz loc_44C2B2  +
mov eax [esp+5Ch+var_3C] +
cmp ebx eax +
cmova ebx eax +
cmp ebx edi +
jbe loc_44C2B0  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_408BC0  +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
mov esi eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44BD40  +
and eax 3 +
cmp eax 2 +
jz loc_44C382  +
cmp eax 3 +
jz loc_44C331  +
cmp eax 1 +
jz loc_44C2F0  +
mov [esp+5Ch+var_54] offset a_bfd_elf_parse +
mov [esp+5Ch+var_58] 21Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_23 +
call sub_404070  +
lea esi [esi+0] +
mov ebx edi +
mov eax [esp+5Ch+var_2C] +
sub [esp+5Ch+var_38] eax +
cmp ebx [esp+5Ch+var_3C] +
jnb loc_44C2CC  +
mov eax [esp+5Ch+var_38] +
test eax eax +
jnz loc_44C1C0  +
mov edi ebx +
nop   +
mov eax [esp+5Ch+var_24] +
sub [esp+5Ch+var_28] eax +
jz loc_44C3E8  +
cmp edi [esp+5Ch+var_34] +
jnb loc_44C3E8  +
mov eax [ebp+4] +
jmp loc_44C129  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_408BC0  +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44BDB0  +
jmp loc_44C238  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_408BC0  +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44BE80  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_44C238  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_50] edi +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_44BE10  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_44C238  +
mov edi offset aGnu_0 +
mov ecx 4 +
mov esi ebx +
cmps   +
jnz loc_44C3D0  +
mov [esp+5Ch+var_40] 1 +
jmp loc_44C1A1  +
mov edi [esp+5Ch+var_38] +
add edi ebx +
jmp loc_44C2D0  +
add edi 4 +
jmp loc_44C2D0  +
mov ebp [esp+5Ch+var_20] +
jmp loc_44C0F0  +
***
jmp loc_44C400  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov dword ptr [esp+24h] 2 +
mov eax [eax+0A0h] +
lea ebx [eax+3D0h] +
mov eax [esp+54h] +
mov ebp [eax+0A0h] +
add ebp 3D0h +
mov edx [ebx+4] +
test edx edx +
jnz loc_44C461  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_44C50A  +
add ebx 354h +
add ebp 354h +
sub dword ptr [esp+24h] 1 +
jnz loc_44C42F  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [ebx+8] +
mov edi offset aGnu_0 +
mov ecx 4 +
mov [esp+28h] esi +
cmps   +
jnz loc_44C4E1  +
mov ecx [ebp+4] +
cmp edx ecx +
jnz loc_44C505  +
mov esi [ebp+8] +
mov eax [esp+28h] +
mov [esp+2Ch] edx +
mov [esp+4] esi +
mov [esp] eax +
call strcmp  +
mov edx [esp+2Ch] +
test eax eax +
jz loc_44C441  +
mov ecx edx +
mov edi [esp+28h] +
mov eax offset unk_48D1C7 +
test esi esi +
cmovz esi eax +
mov [esp+14h] esi +
mov [esp+10h] ecx +
test edi edi +
cmovnz eax edi +
mov [esp+0Ch] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov dword ptr [esp] offset aErrorBObjectTa +
mov [esp+4] eax +
call off_4733A4  +
xor eax eax +
jmp loc_44C459  +
***
mov eax [esp+28h] +
mov dword ptr [esp] offset aErrorBObjectHa +
mov [esp+8] eax +
mov eax [esp+50h] +
mov [esp+4] eax +
call off_4733A4  +
xor eax eax +
jmp loc_44C459  +
***
mov esi [ebp+8] +
jmp loc_44C4A2  +
***
mov eax [ebx+8] +
mov esi [ebp+8] +
mov [esp+28h] eax +
jmp loc_44C4A2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esp+34h] +
mov edx [esp+38h] +
mov edi [esi+0A0h] +
mov ebx [eax+0A0h] +
lea ecx [edx+edx*2] +
shl ecx 2 +
add edi 250h +
lea ebx [ebx+ecx+250h] +
add edi ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_44C562  +
mov ebp [ebx+8] +
test ebp ebp +
jz loc_44C5D2  +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+198h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
mov esi eax +
mov eax [ebx+4] +
cmp [edi+4] eax +
jz loc_44C5A0  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp [ebx+8] +
mov eax [edi+8] +
test ebp ebp +
setz cl  +
test eax eax +
mov edi ecx +
setz cl  +
mov edx edi +
cmp dl cl +
jnz loc_44C584  +
test eax eax +
jz loc_44C592  +
test ebp ebp +
jz loc_44C592  +
mov [esp+4] ebp +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_44C584  +
jmp loc_44C592  +
***
mov eax esi +
mov esi [edi+4] +
test esi esi +
jnz loc_44C562  +
mov ecx [edi+8] +
mov esi 1 +
test ecx ecx +
jnz loc_44C562  +
jmp loc_44C592  +
***
mov eax [esi+4] +
test ebx ebx +
mov edi eax +
jz loc_44C63D  +
mov edi [ebx+4] +
jmp loc_44C637  +
***
mov edi [ebx+4] +
mov ebx [ebx] +
mov eax [esp+34h] +
mov [ecx+8F8h] ebx +
jmp loc_44C643  +
***
mov eax [ebx+0Ch] +
cmp [esi+0Ch] eax +
jnz loc_44C693  +
mov edx [ebx+10h] +
mov eax [esi+10h] +
test edx edx +
setz byte ptr [esp+8]  +
test eax eax +
mov [esp+0Ch] edx +
setz dl  +
cmp [esp+8] dl +
jnz loc_44C693  +
test eax eax +
jz loc_44C6E9  +
mov edx [esp+0Ch] +
test edx edx +
jz loc_44C6E9  +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+8] ecx +
call strcmp  +
mov ecx [esp+8] +
test eax eax +
jnz loc_44C693  +
mov ebx [ebx] +
mov esi [esi] +
mov eax [esp+34h] +
jmp loc_44C643  +
***
push edi  +
mov ecx 20h +
push esi  +
mov edi eax +
push ebx  +
mov esi edx +
sub esp 1Ch +
test dl 1 +
mov eax edx +
jnz loc_44C887  +
test al 2 +
jnz loc_44C897  +
mov ebx ecx +
xor edx edx +
and ebx 0FFFFFFFCh +
mov dword ptr [eax+edx] 0 +
add edx 4 +
cmp edx ebx +
jb loc_44C72C  +
add eax edx +
test cl 2 +
jz loc_44C74A  +
xor ebx ebx +
add eax 2 +
mov [eax-2] bx +
and ecx 1 +
jz loc_44C752  +
mov byte ptr [eax] 0 +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ebp +
call eax  +
mov edx eax +
mov [esi] eax +
xor eax eax +
test edx edx +
jz loc_44C77D  +
lea ecx [ebp+edx+0] +
cmp [esp+28h+arg_0] ecx +
jbe loc_44C77D  +
cmp edx 5 +
ja loc_44C785  +
xor edx edx +
mov al 1 +
mov [esi+1Ch] dx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
lea edx [ebp+4] +
lea ebx [ebp+6] +
mov eax [eax+34h] +
mov [esp+28h+var_28] edx +
call eax  +
mov [esi+1Ch] ax +
lea esi [esi+0] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jnb loc_44C7F6  +
mov eax [edi] +
mov eax [eax+34h] +
mov [esp+28h+var_28] ebx +
call eax  +
lea ecx [ebx+2] +
mov edx eax +
and edx 0Fh +
cmp edx 8 +
ja loc_44C880  +
jmp ds:off_48D2D8[edx*4]  +
cmp ax 38h +
jz loc_44C8A8  +
mov [esp+28h+var_28] ecx +
mov [esp+28h+var_1C] ecx +
call strlen  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+1] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jb loc_44C7A8  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 0Ah +
jmp loc_44C7A0  +
add ebx 4 +
jmp loc_44C7A0  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+4] +
jmp loc_44C7A0  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+34h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+2] +
jmp loc_44C7A0  +
cmp ax 12h +
jz loc_44C8C0  +
cmp ax 106h +
jz loc_44C8D0  +
add ebx 6 +
jmp loc_44C7A0  +
cmp ax 111h +
jz loc_44C8B0  +
cmp ax 121h +
jnz loc_44C85C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+0Ch] eax +
jmp loc_44C85C  +
mov ebx ecx +
jmp loc_44C7A0  +
lea eax [edx+1] +
mov cl 1Fh +
test al 2 +
mov byte ptr [edx] 0 +
jz loc_44C725  +
xor edx edx +
add eax 2 +
mov [eax-2] dx +
sub ecx 2 +
jmp loc_44C725  +
mov [esi+14h] ecx +
jmp loc_44C7DA  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+8] eax +
jmp loc_44C85C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+4] eax +
jmp loc_44C85C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov dword ptr [esi+18h] 1 +
mov [esi+10h] eax +
jmp loc_44C85C  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
cmp [edx+8] ecx +
ja loc_44C905  +
cmp ecx [edx+0Ch] +
jb loc_44C910  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
mov eax [edx+10h] +
test eax eax +
jz loc_44C907  +
mov ecx [edx+20h] +
test ecx ecx +
jz loc_44C9A4  +
mov eax [esi+24h] +
test eax eax +
jz loc_44CAA0  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_44C959  +
mov edi [esi+20h] +
mov edx 1 +
mov eax edi +
mov ecx eax +
sub ecx edi +
cmp ebx [eax] +
jb loc_44C94D  +
cmp ebx [eax+8] +
jb loc_44C987  +
mov ecx edx +
add eax 8 +
add edx 1 +
cmp ebp ecx +
ja loc_44C940  +
xor eax eax +
mov edx [esi+24h] +
test edx edx +
jnz loc_44C96A  +
jmp loc_44C907  +
mov edx [edx] +
test edx edx +
jz loc_44C907  +
cmp ebx [edx+8] +
lea esi [esi+0] +
jb loc_44C964  +
cmp ebx [edx+0Ch] +
jnb loc_44C964  +
mov eax [esp+50h+arg_4] +
mov edx [edx+4] +
mov [eax] edx +
mov eax 1 +
jmp loc_44C907  +
mov edx [esi+4] +
mov eax [esp+50h+arg_0] +
mov [eax] edx +
mov eax [esi+20h] +
mov edx [eax+ecx+4] +
mov eax [esp+50h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_44C95B  +
mov eax [edi+14h] +
test eax eax +
jz loc_44CB40  +
add eax [esi+14h] +
cmp eax [edi+18h] +
mov ebp eax +
jnb loc_44C924  +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebp +
call eax  +
lea ecx [ebp+4] +
add eax ebp +
mov [esp+50h+var_40] eax +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ecx +
call eax  +
lea ecx [ebp+8] +
mov edx 66666667h +
mov [esp+50h+var_3C] ecx +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+var_40] +
sub eax ecx +
mov ebp eax +
imul  edx +
mov eax [edi] +
sar ebp 1Fh +
sar edx 2 +
sub edx ebp +
mov [esi+1Ch] edx +
shl edx 3 +
mov [esp+50h+var_4C] edx +
mov [esp+50h+var_50] eax +
call sub_406290  +
test eax eax +
mov [esi+20h] eax +
jz loc_44C905  +
mov edx [esi+1Ch] +
test edx edx +
jz loc_44C924  +
xor ecx ecx +
mov ebp eax +
mov [esp+50h+var_40] esi +
mov esi ecx +
mov [esp+50h+var_34] ebx +
mov ebx [esp+50h+var_3C] +
jmp loc_44CA43  +
mov ebp [eax+20h] +
mov eax [edi] +
lea edx ds:0[esi*8] +
add esi 1 +
add ebp edx +
mov [esp+50h+var_3C] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebx +
call eax  +
mov edx [esp+50h+var_3C] +
mov [ebp+4] eax +
mov eax [esp+50h+var_40] +
add edx [eax+20h] +
mov eax [edi] +
mov ebp edx +
lea edx [ebx+6] +
add ebx 0Ah +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] edx +
call eax  +
add eax [esp+50h+var_38] +
mov [ebp+0] eax +
mov eax [esp+50h+var_40] +
cmp esi [eax+1Ch] +
jb loc_44CA40  +
mov esi [esp+50h+var_40] +
mov ebx [esp+50h+var_34] +
jmp loc_44C924  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_44C92F  +
mov edx [edi+10h] +
cmp ecx edx +
jb loc_44CAE3  +
jmp loc_44C92F  +
cmp ax 14h +
jz loc_44CB07  +
cmp ax 1Dh +
jz loc_44CB07  +
cmp ax 3 +
jz loc_44CB07  +
mov ecx [esp+50h+var_2C] +
test ecx ecx +
jz loc_44C92F  +
mov edx [edi+10h] +
add ecx [edi+0Ch] +
cmp edx ecx +
jbe loc_44C92F  +
mov eax [edi] +
mov [esp+50h+var_50] edx +
lea edx [esp+50h+var_30] +
add eax 4 +
call sub_44C700  +
test eax eax +
jz loc_44C905  +
movzx eax [esp+50h+var_14] +
cmp ax 6 +
jnz loc_44CAB7  +
mov eax [edi] +
mov [esp+50h+var_4C] 10h +
mov [esp+50h+var_50] eax +
call sub_406370  +
test eax eax +
jz loc_44C905  +
mov edx [esi+24h] +
mov [eax] edx +
mov edx [esp+50h+var_1C] +
mov [esi+24h] eax +
mov [eax+4] edx +
mov edx [esp+50h+var_28] +
mov [eax+8] edx +
mov edx [esp+50h+var_24] +
mov [eax+0Ch] edx +
jmp loc_44CAC9  +
mov eax [edi] +
mov [esp+50h+var_4C] offset a_line_0 +
mov [esp+50h+var_50] eax +
call sub_402CB0  +
test eax eax +
jz loc_44C905  +
mov ebp [eax+28h] +
test ebp ebp +
jnz loc_44CB64  +
mov ebp [eax+24h] +
mov ecx [edi+4] +
mov edx [edi] +
mov [esp+50h+var_48] 0 +
mov [esp+50h+var_4C] eax +
mov [esp+50h+var_44] ecx +
mov [esp+50h+var_50] edx +
call sub_44ED20  +
test eax eax +
mov [edi+14h] eax +
jz loc_44C905  +
add ebp eax +
mov [edi+18h] ebp +
jmp loc_44C9AF  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
mov eax [esi+0A0h] +
mov ebx [eax+22Ch] +
mov eax [esp+4Ch+arg_8] +
mov ebp [eax+1Ch] +
mov eax [esp+4Ch+arg_10] +
add ebp [esp+4Ch+arg_C] +
test ebx ebx +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
jz loc_44CD48  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_44CC63  +
mov edx [ebx+8] +
test edx edx +
jz loc_44CC0A  +
cmp ebp [edx+8] +
jb loc_44CC04  +
cmp ebp [edx+0Ch] +
jb loc_44CD20  +
mov edx [edx] +
test edx edx +
jnz loc_44CBF6  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
cmp ecx edx +
jnb loc_44CC63  +
mov [esp+4Ch+var_30] ebp +
jmp loc_44CC2D  +
mov edx [ebx+10h] +
add ecx [ebx+0Ch] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
jbe loc_44CC63  +
mov eax [ebx] +
mov [esp+4Ch+var_4C] edx +
lea edx [esp+4Ch+var_2C] +
add eax 4 +
call sub_44C700  +
test eax eax +
jz loc_44CC63  +
cmp [esp+4Ch+var_10] 11h +
mov ecx [esp+4Ch+var_28] +
jz loc_44CC70  +
test ecx ecx +
jnz loc_44CC20  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
add ecx [esp+4Ch+var_2C] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
ja loc_44CC2D  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
mov [esp+4Ch+var_48] 28h +
mov [esp+4Ch+var_4C] eax +
call sub_406370  +
test eax eax +
jz loc_44CC63  +
mov edx [ebx+8] +
mov ecx [esp+4Ch+var_14] +
mov edi [esp+4Ch+var_20] +
mov [eax] edx +
mov [ebx+8] eax +
mov edx [esp+4Ch+var_18] +
mov [eax+10h] ecx +
mov ecx [esp+4Ch+var_1C] +
mov [eax+0Ch] edi +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+14h] ecx +
mov ecx [esp+4Ch+var_28] +
mov [eax+8] edx +
test ecx ecx +
jz loc_44CCC5  +
mov esi [ebx+1Ch] +
add esi [esp+4Ch+var_2C] +
cmp esi [ebx+10h] +
jb loc_44CD10  +
mov dword ptr [eax+18h] 0 +
cmp [esp+4Ch+var_30] edx +
jb loc_44CC4E  +
cmp [esp+4Ch+var_30] edi +
jnb loc_44CC4E  +
mov edi [esp+4Ch+arg_18] +
mov edx eax +
mov eax ebx +
mov ebp [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+arg_14] +
mov ecx ebp +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] edi +
call sub_44C8F0  +
jmp loc_44CC65  +
mov ebp [ebx+0Ch] +
add ebp ecx +
cmp esi ebp +
jz loc_44CCC5  +
mov [eax+18h] esi +
jmp loc_44CCCC  +
mov eax [esp+4Ch+arg_18] +
mov ecx ebp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_14] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_44C8F0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov [esp+4Ch+var_48] 20h +
mov [esp+4Ch+var_4C] esi +
call sub_406370  +
test eax eax +
mov ebx eax +
mov [edi+22Ch] eax +
jz loc_44CC63  +
mov [esp+4Ch+var_48] offset a_debug_0 +
mov [esp+4Ch+var_4C] esi +
call sub_402CB0  +
test eax eax +
jz loc_44CC63  +
mov edi [eax+28h] +
test edi edi +
jnz loc_44CD90  +
mov edi [eax+24h] +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] ecx +
call sub_44ED20  +
test eax eax +
mov [ebx+0Ch] eax +
jz loc_44CC63  +
add edi eax +
mov [ebx+1Ch] eax +
mov eax [esp+4Ch+arg_4] +
mov [ebx+10h] edi +
mov [ebx] esi +
mov [ebx+4] eax +
jmp loc_44CBEF  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_44CE24  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_44CE30  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_44CE1F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_44CE30  +
sub edx 1 +
jnz loc_44CE13  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov edx [edx] +
mov ebp [eax+0Ch] +
mov edi [edx+0Ch] +
mov ecx [edx+4] +
mov edx [eax+10h] +
mov ebx [eax+4] +
sub edx 1 +
mov eax edx +
and edx edi +
and eax ebp +
sub eax edx +
test eax eax +
jnz loc_44CEAA  +
cmp edi ebp +
mov edx ebp +
cmovbe edx edi +
test edx edx +
jz loc_44CEA6  +
lea esi [ebx+ebp-1] +
lea ebx [ecx+edi-1] +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [ebx] +
cmp al cl +
jnz loc_44CEB0  +
mov eax edx +
neg eax  +
add esi eax +
add ebx eax +
jmp loc_44CEA1  +
movzx eax byte ptr [esi+edx] +
movzx ecx byte ptr [ebx+edx] +
cmp al cl +
jnz loc_44CEB0  +
sub edx 1 +
jnz loc_44CE95  +
mov eax ebp +
sub eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
sub eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_44CF17  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_409320  +
test eax eax +
jz loc_44CF10  +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] ebx +
call sub_409270  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_44CF04  +
jmp loc_44CED0  +
***
jmp sub_44CF40  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_10] ecx +
mov ecx [eax+2Ch] +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_18] edx +
test ecx ecx +
jnz loc_44D027  +
mov esi [eax+28h] +
xor ebx ebx +
mov eax edx +
test esi esi +
lea edi [edx+esi] +
jz loc_44D102  +
add eax 1 +
movzx edx byte ptr [eax-1] +
mov ecx edx +
shl ecx 11h +
add edx ecx +
add edx ebx +
mov ebx edx +
shr ebx 2 +
xor ebx edx +
cmp eax edi +
jnz loc_44CF70  +
mov edi [esp+2Ch+var_14] +
xor edx edx +
mov eax ebx +
div  dword ptr [edi+0Ch] +
mov eax [edi] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_44CFA7  +
jmp loc_44CFF1  +
mov edi [edi] +
test edi edi +
jz loc_44CFF1  +
cmp [edi+8] ebx +
jnz loc_44CFA1  +
cmp [edi+0Ch] esi +
jnz loc_44CFA1  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] eax +
mov eax [edi+4] +
mov [esp+2Ch+var_2C] eax +
call memcmp  +
test eax eax +
jnz loc_44CFA1  +
mov edx [esp+2Ch+var_10] +
mov eax edi +
cmp [edi+10h] edx +
jnb loc_44D01F  +
mov edx [esp+2Ch+arg_0] +
xor eax eax +
test edx edx +
jz loc_44D01F  +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi+10h] 0 +
jmp loc_44CFF9  +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jz loc_44D05A  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call sub_408DF0  +
test eax eax +
jz loc_44D05A  +
mov [eax+0Ch] esi +
mov esi [esp+2Ch+var_10] +
mov [eax+10h] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_14] +
mov esi [eax+28h] +
cmp esi 1 +
jz loc_44D0BA  +
test esi esi +
jnz loc_44D064  +
xor ebp ebp +
xor edx edx +
nop   +
mov eax ebp +
add edx ebp +
shl eax 11h +
imul ebp esi +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
add esi ebp +
jmp loc_44CF8B  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
movzx edi byte ptr [eax] +
mov ebx edi +
test bl bl +
jnz loc_44D091  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ecx 1 +
cmp ecx esi +
jz loc_44D040  +
cmp byte ptr [eax+ecx] 0 +
jz loc_44D080  +
cmp esi ecx +
jz loc_44D040  +
lea ebx [eax+esi] +
mov ecx edi +
jmp loc_44D09B  +
movzx ecx byte ptr [eax] +
movzx ecx cl +
add eax 1 +
mov edi ecx +
shl edi 11h +
add ecx edi +
add ecx edx +
mov edx ecx +
shr edx 2 +
xor edx ecx +
cmp eax ebx +
jnz loc_44D098  +
add ebp 1 +
jmp loc_44D070  +
mov ecx [esp+2Ch+var_18] +
movzx eax byte ptr [ecx] +
test eax eax +
jz loc_44D109  +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
mov ebx eax +
add ebp 1 +
shl ebx 11h +
add eax ebx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ecx+ebp] +
test eax eax +
jnz loc_44D0D0  +
mov eax ebp +
add edx ebp +
shl eax 11h +
add esi ebp +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
jmp loc_44CF8B  +
mov ebx esi +
jmp loc_44CF8B  +
xor ebp ebp +
xor ebx ebx +
add esi ebp +
jmp loc_44CF8B  +
***
sub esp 18h +
mov [esp+18h+var_18] 1 +
call sub_44CF40  +
test eax eax +
mov edx eax +
jz loc_44D170  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_44D144  +
add esp 18h +
pop ebx  +
retn   +
mov eax [esp+18h+arg_0] +
add dword ptr [ebx+1Ch] 1 +
mov [edx+18h] eax +
mov eax [ebx+20h] +
test eax eax +
jz loc_44D166  +
mov eax [ebx+24h] +
mov [eax+1Ch] edx +
mov [ebx+24h] edx +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [ebx+20h] edx +
jmp loc_44D15C  +
xor eax eax +
jmp loc_44D13F  +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
test ebp ebp +
jz loc_44D6B6  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_44D6A4  +
mov edx [eax] +
mov ecx [esp+2Ch+arg_8] +
test edx edx +
mov ebp edx +
mov [ecx+4] edx +
mov dword ptr [eax] 0 +
jnz loc_44D46E  +
jmp loc_44D554  +
mov edi [esp+2Ch+arg_C] +
mov eax [ebp+8] +
test edi edi +
mov dword ptr [eax] 0 +
jz loc_44D463  +
mov eax [ebp+4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_44D554  +
mov eax [ebp+4] +
mov [esp+2Ch+var_18] eax +
mov eax [eax+14h] +
test ah 80h +
jnz loc_44D440  +
mov edi [esp+2Ch+var_18] +
test eax 1000000h +
lea ebx [ebp+14h] +
mov edx [edi+24h] +
mov ecx [edi+40h] +
lea esi [ebp+edx+14h] +
jz loc_44D657  +
cmp esi ebx +
jbe loc_44D463  +
mov eax 1 +
xor edi edi +
shl eax cl +
mov [esp+2Ch+var_10] eax +
sub eax 1 +
mov [esp+2Ch+var_14] ebp +
mov ebp ebx +
mov [esp+2Ch+var_1C] eax +
mov eax ebx +
sub eax ebp +
lea ecx [eax-1] +
xor ecx eax +
add ecx 1 +
shr ecx 1 +
cmp [esp+2Ch+var_1C] ecx +
jb loc_44D4CF  +
test ecx ecx +
jnz loc_44D4D3  +
mov ecx [esp+2Ch+var_10] +
mov eax [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_14] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] edx +
mov edx ebx +
call sub_44D120  +
test eax eax +
jz loc_44D68A  +
mov ecx [esp+2Ch+var_18] +
add ebx [eax+0Ch] +
mov edx [ecx+78h] +
cmp edx 1 +
jz loc_44D5F4  +
cmp esi ebx +
jbe loc_44D545  +
test edx edx +
jz loc_44D531  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_44D5E3  +
xor eax eax +
jmp loc_44D52A  +
cmp byte ptr [ebx+eax] 0 +
jnz loc_44D5E3  +
add eax 1 +
cmp eax edx +
jnz loc_44D520  +
test edi edi +
jnz loc_44D53F  +
mov eax ebx +
sub eax ebp +
test [esp+2Ch+var_1C] eax +
jz loc_44D5B0  +
add ebx edx +
cmp esi ebx +
ja loc_44D507  +
mov ebp [esp+2Ch+var_14] +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_44D46E  +
mov eax [esp+2Ch+arg_8] +
mov ecx [eax+8] +
mov eax [ecx+20h] +
test eax eax +
jz loc_44D6A4  +
mov esi [ecx+2Ch] +
xor edx edx +
xor ebx ebx +
test esi esi +
jz loc_44D594  +
jmp loc_44D6CA  +
mov ebx [eax+10h] +
lea edx [edx+ebx-1] +
neg ebx  +
and edx ebx +
mov ebx ecx +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44D8EB  +
mov ecx [eax+18h] +
mov esi [ecx+10h] +
test esi esi +
jnz loc_44D576  +
test ebx ebx +
jz loc_44D5A8  +
mov ebx [ebx+4] +
mov [ebx+24h] edx +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_44D576  +
mov ecx [esp+2Ch+var_14] +
mov edx ebx +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_44D120  +
test eax eax +
jz loc_44D68A  +
mov eax [esp+2Ch+var_18] +
mov di 1 +
mov edx [eax+78h] +
add ebx edx +
jmp loc_44D541  +
cmp esi ebx +
ja loc_44D4B7  +
mov ebp [esp+2Ch+var_14] +
jmp loc_44D549  +
cmp esi ebx +
jbe loc_44D545  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_44D4B7  +
mov eax edi +
mov edi [esp+2Ch+var_1C] +
jmp loc_44D624  +
add ebx 1 +
cmp ebx esi +
jz loc_44D545  +
cmp byte ptr [ebx] 0 +
jnz loc_44D6C3  +
test eax eax +
jnz loc_44D610  +
mov edx ebx +
sub edx ebp +
test edi edx +
jnz loc_44D610  +
mov ecx [esp+2Ch+var_14] +
mov edx offset unk_48D327 +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_44D120  +
test eax eax +
jz loc_44D68A  +
mov eax 1 +
jmp loc_44D610  +
cmp esi ebx +
jbe loc_44D463  +
mov edi [esp+2Ch+arg_8] +
jmp loc_44D674  +
mov eax [esp+2Ch+var_18] +
add ebx [eax+78h] +
cmp esi ebx +
jbe loc_44D463  +
mov eax [edi+8] +
mov ecx 1 +
mov edx ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_44D120  +
test eax eax +
jnz loc_44D665  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_44D6A4  +
mov edx [eax+8] +
mov dword ptr [edx] 0 +
mov eax [eax] +
test eax eax +
jnz loc_44D695  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jnz loc_44D413  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_44D4B7  +
mov eax [ecx+1Ch] +
shl eax 2 +
mov [esp+2Ch+var_2C] eax +
call sub_408000  +
test eax eax +
mov edi eax +
jz loc_44D802  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+8] +
mov eax [edx+20h] +
test eax eax +
jz loc_44D7F3  +
mov ebp edi +
xor ecx ecx +
jmp loc_44D702  +
mov ebp ebx +
mov esi [eax+10h] +
mov ebx ebp +
test esi esi +
jz loc_44D72C  +
mov edx [esp+2Ch+arg_8] +
add ebx 4 +
mov [ebp+0] eax +
mov edx [edx+8] +
mov ebp [edx+28h] +
sub [eax+0Ch] ebp +
cmp esi ecx +
jz loc_44D72C  +
test ecx ecx +
mov ecx 0FFFFFFFFh +
cmovz ecx esi +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_44D700  +
mov eax ebx +
sub eax edi +
sar eax 2 +
test eax eax +
mov [edx+1Ch] eax +
jz loc_44D7FA  +
cmp ecx 0FFFFFFFFh +
jz loc_44D754  +
cmp [edx+28h] ecx +
mov esi offset sub_44CE40 +
jb loc_44D759  +
mov esi offset sub_44CDD0 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edi +
call qsort  +
lea eax [ebx-4] +
mov ebp [ebx-4] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov eax [eax+28h] +
add [ebp+0Ch] eax +
mov [esp+2Ch+var_18] eax +
sub [esp+2Ch+var_1C] 4 +
cmp edi [esp+2Ch+var_1C] +
ja loc_44D7FA  +
mov eax [esp+2Ch+var_1C] +
mov ebx [eax] +
mov eax [esp+2Ch+var_18] +
mov esi [ebx+10h] +
add eax [ebx+0Ch] +
cmp [ebp+10h] esi +
mov [ebx+0Ch] eax +
jb loc_44D7EF  +
mov ecx [ebp+0Ch] +
sub esi 1 +
mov edx ecx +
sub edx eax +
test esi edx +
jnz loc_44D7EF  +
mov esi [ebp+4] +
cmp eax ecx +
mov [esp+2Ch+var_14] esi +
mov esi [ebx+4] +
jnb loc_44D7EF  +
add edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_44D7EF  +
mov [ebx+14h] ebp +
mov dword ptr [ebx+10h] 0 +
mov ebx ebp +
mov ebp ebx +
jmp loc_44D78C  +
mov dword ptr [edx+1Ch] 0 +
mov [esp+2Ch+var_2C] edi +
call free  +
mov eax [esp+2Ch+arg_8] +
xor edx edx +
mov ebx [eax+8] +
mov eax [ebx+20h] +
mov ecx [eax+18h] +
mov esi [eax+10h] +
test esi esi +
jz loc_44D831  +
mov ebp [ecx+10h] +
test ebp ebp +
jz loc_44D8E1  +
lea edx [edx+esi-1] +
neg esi  +
and edx esi +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44D849  +
mov esi [eax+18h] +
cmp ecx esi +
jz loc_44D845  +
mov ecx [ecx+4] +
mov [ecx+24h] edx +
mov ecx esi +
jmp loc_44D811  +
mov eax [ecx+4] +
mov ecx [eax+40h] +
mov [eax+24h] edx +
test ecx ecx +
jz loc_44D86A  +
mov edi 1 +
shl edi cl +
mov ecx edi +
lea edx [edx+edi-1] +
neg ecx  +
and edx ecx +
mov [eax+24h] edx +
mov eax [ebx+20h] +
lea esi [ebx+20h] +
test eax eax +
jnz loc_44D880  +
jmp loc_44D8B4  +
lea esi [eax+1Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44D8B4  +
mov edi [eax+10h] +
test edi edi +
jnz loc_44D876  +
mov ebx [eax+0Ch] +
mov edx [eax+1Ch] +
test ebx ebx +
mov [esi] edx +
jz loc_44D879  +
mov ecx [eax+14h] +
mov edx [ecx+18h] +
mov [eax+18h] edx +
mov edx [ecx+10h] +
mov [eax+10h] edx +
mov edx [ecx+0Ch] +
add edx [ecx+14h] +
sub edx ebx +
mov [eax+14h] edx +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_44D880  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jnz loc_44D8CE  +
jmp loc_44D6A4  +
mov eax [eax] +
test eax eax +
jz loc_44D6A4  +
mov edx [eax+10h] +
test edx edx +
jnz loc_44D8C4  +
mov edx [eax+4] +
or dword ptr [edx+14h] 208000h +
jmp loc_44D8C4  +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_44D823  +
mov eax [ecx+4] +
mov [eax+24h] edx +
jmp loc_44D8B4  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_4] +
test edi edi +
jz loc_44DA60  +
mov ebx [edi+10h] +
test ebx ebx +
jz loc_44DAB7  +
mov ecx [esi+3Ch] +
mov edx [ecx+8Ch] +
mov eax [edx+10h] +
and eax [edx+14h] +
cmp eax 0FFFFFFFFh +
jz loc_44DAC4  +
mov [esp+3Ch+var_30] 0 +
mov eax [esi+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_403BF0  +
test eax eax +
jnz loc_44DA60  +
mov ebx [edi+10h] +
mov [esp+3Ch+var_14] 0 +
mov eax [ebx+18h] +
xor edi edi +
mov esi [esi+38h] +
mov [esp+3Ch+var_18] 0 +
mov [esp+3Ch+var_1C] eax +
mov eax [eax+4] +
mov [esp+3Ch+var_10] eax +
mov eax [eax+3Ch] +
mov ecx [eax+40h] +
test ecx ecx +
jnz loc_44DB20  +
mov ebp [esp+3Ch+var_14] +
xor ecx ecx +
mov [esp+3Ch+var_24] esi +
mov esi ecx +
mov [esp+3Ch+var_20] edi +
lea esi [esi+0] +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jz loc_44DA38  +
mov ecx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
lea edx [ebp+ecx+0] +
mov [esp+3Ch+var_3C] edx +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
mov ebx [ebx+1Ch] +
add esi edi +
test ebx ebx +
jz loc_44DA70  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jnz loc_44DA70  +
mov eax [ebx+10h] +
mov edi esi +
neg edi  +
sub eax 1 +
and edi eax +
jz loc_44D9B0  +
test ebp ebp +
jz loc_44DAF5  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
add eax ebp +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
add esi edi +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jnz loc_44D9BA  +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_403A90  +
cmp edi eax +
jz loc_44D9DC  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_44DA60  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov esi [esp+3Ch+var_24] +
mov eax [esp+3Ch+var_10] +
mov eax [eax+24h] +
sub eax ecx +
mov ebx eax +
jz loc_44DAA7  +
mov eax [esp+3Ch+var_14] +
test eax eax +
jz loc_44DB4F  +
add eax esi +
mov edi eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_44DAB7  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+30h] +
test byte ptr [ecx+17h] 8 +
mov [esp+3Ch+var_14] eax +
jz loc_44DAD9  +
test eax eax +
jnz loc_44D974  +
mov [esp+3Ch+var_34] offset a_bfd_write_mer +
mov [esp+3Ch+var_38] 338h +
mov [esp+3Ch+var_3C] offset a____Binutil_14 +
call sub_404070  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_403A90  +
cmp edi eax +
jnz loc_44DA50  +
add esi edi +
jmp loc_44DA2E  +
mov eax 1 +
shl eax cl +
mov [esp+3Ch+var_3C] eax +
call sub_408190  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_44DA60  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jz loc_44D99D  +
xor ecx ecx +
jmp loc_44DA76  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_403A90  +
cmp ebx eax +
jnz loc_44DA50  +
jmp loc_44DAA7  +
***
push esi  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_44DD8C  +
lea esi [esi+0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_408DD0  +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44DD70  +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_44DDE0  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_409320  +
test eax eax +
jz loc_44DDD4  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_409270  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_44DDCF  +
jmp loc_44DDB0  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_10] 0 +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_44E070  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+24h] +
test eax eax +
jz loc_44E070  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
cmp ecx eax +
jnz loc_44E070  +
mov eax [esp+7Ch+arg_C] +
test byte ptr [eax+14h] 4 +
jnz loc_44E070  +
mov eax [esp+7Ch+arg_8] +
cmp dword ptr [eax+3Ch] offset off_473250 +
jz loc_44E070  +
mov eax [esp+7Ch+arg_C] +
cmp dword ptr [eax+3Ch] offset off_473250 +
jz loc_44E070  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_5C] 0 +
mov ebp [eax+20h] +
test ebp ebp +
jz loc_44E2B0  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov [esp+7Ch+var_64] edx +
shr [esp+7Ch+var_64] 3 +
mov eax [esp+7Ch+var_64] +
lea ebx ds:0FFFFFFFCh[eax*4] +
lea eax [ebx+0Ch] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_406290  +
mov edi eax +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_10] +
test edi edi +
mov [eax] edi +
jz loc_44DF5B  +
mov eax [esp+7Ch+arg_8] +
mov esi [esp+7Ch+arg_8] +
mov dword ptr [edi] 0 +
mov eax [eax+24h] +
mov [esi+28h] eax +
lea eax [ebx+4] +
lea ebx [edi+8] +
mov dword ptr [edi+4] 0 +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebx +
mov [esp+7Ch+var_3C] eax +
mov [esp+7Ch+var_38] ebx +
call memset  +
lea eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_403610  +
test eax eax +
jnz loc_44E080  +
mov eax [esp+7Ch+var_14] +
test eax eax +
jz loc_44DF6B  +
mov [esp+7Ch+var_7C] eax +
call free  +
mov edx [esp+7Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_44E075  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_6C] eax +
call free  +
mov eax [esp+7Ch+var_6C] +
jmp loc_44E075  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
sub eax [esp+7Ch+var_34] +
mov ebx [esp+7Ch+arg_8] +
mov [esp+7Ch+var_10] 0 +
lea eax [eax+eax*2] +
shl eax 2 +
test eax eax +
mov [ebx+24h] eax +
jnz loc_44DFD9  +
or dword ptr [ebx+14h] 208000h +
mov eax [esp+7Ch+arg_C] +
or dword ptr [eax+14h] 208000h +
mov eax [esp+7Ch+arg_4] +
mov ebx [eax+20h] +
mov eax [eax] +
mov [esp+7Ch+var_7C] eax +
call sub_4095F0  +
mov esi [esp+7Ch+var_34] +
test esi esi +
mov [ebx+24h] eax +
jz loc_44E070  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_406290  +
mov ebx [esp+7Ch+var_48] +
test eax eax +
mov [ebx+4] eax +
jz loc_44DF5B  +
mov ebx [esp+7Ch+var_64] +
xor ecx ecx +
xor edx edx +
test ebx ebx +
jz loc_44E058  +
mov esi [esp+7Ch+var_64] +
mov edi [esp+7Ch+var_38] +
mov [eax+edx*4] ecx +
lea ebx [ecx+0Ch] +
cmp dword ptr [edi+edx*4] 0FFFFFFFFh +
cmovz ecx ebx +
add edx 1 +
cmp edx esi +
jnz loc_44E040  +
test ecx ecx +
jnz loc_44E070  +
mov [esp+7Ch+var_78] 1EAh +
mov [esp+7Ch+var_7C] offset a____Binutil_16 +
call sub_404040  +
lea esi [esi+0] +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_403610  +
test eax eax +
jz loc_44DF5B  +
mov edi [esp+7Ch+arg_14] +
test edi edi +
jz loc_44E5B7  +
mov eax [esp+7Ch+arg_14] +
mov eax [eax] +
mov [esp+7Ch+var_58] eax +
mov esi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+var_14] +
mov ebx [esi+24h] +
add ebx eax +
cmp eax ebx +
mov [esp+7Ch+var_6C] ebx +
jnb loc_44E64F  +
lea ebp [eax+0Ch] +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_34] 0 +
mov [esp+7Ch+var_54] 0 +
lea esi [eax+0Ch] +
mov eax [esp+7Ch+arg_4] +
mov ebx esi +
add eax 4 +
mov [esp+7Ch+var_28] eax +
jmp loc_44E171  +
mov eax [esp+7Ch+arg_0] +
lea edx [ebp-4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+arg_14] +
add eax [esp+7Ch+var_58] +
test ecx ecx +
jz loc_44E13D  +
mov edi [esp+7Ch+arg_14] +
mov [edi] eax +
mov edx [esp+7Ch+var_5C] +
test edx edx +
jnz loc_44E291  +
mov edi [esp+7Ch+var_58] +
add [esp+7Ch+var_34] 1 +
mov dword ptr [ebx-4] 0FFFFFFFFh +
mov [esp+7Ch+var_54] edi +
mov [esp+7Ch+var_58] eax +
cmp [esp+7Ch+var_6C] ebp +
jbe loc_44DF8E  +
add ebp 0Ch +
add ebx 4 +
mov esi [ebx-4] +
lea eax [ebp-0Ch] +
mov [esp+7Ch+var_68] eax +
mov [esp+7Ch+var_60] ebx +
test esi esi +
jnz loc_44E161  +
movzx esi byte ptr [ebp-8] +
mov [esp+7Ch+var_4C] ebp +
test esi esi +
jz loc_44E110  +
mov eax [esp+7Ch+arg_0] +
mov edi [esp+7Ch+var_68] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edi +
call eax  +
mov edi [esp+7Ch+arg_C] +
add eax [esp+7Ch+var_54] +
cmp eax [edi+24h] +
jnb loc_44E577  +
add eax [esp+7Ch+var_10] +
mov edi eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_4] +
mov eax [eax] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_4094C0  +
cmp esi 82h +
mov [ebx-4] eax +
jnz loc_44E161  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_44E638  +
movzx eax byte ptr [ebp+4] +
test eax eax +
jz loc_44E638  +
xor ecx ecx +
xor edx edx +
mov esi ebp +
xor edi edi +
mov [esp+7Ch+var_24] ebx +
mov ebx edx +
mov [esp+7Ch+var_20] ebp +
mov ebp ecx +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_50] 0 +
mov [esp+7Ch+var_30] 0 +
jmp loc_44E270  +
cmp eax 82h +
jz loc_44E358  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_44E362  +
add esi 0Ch +
cmp [esp+7Ch+var_6C] esi +
jbe loc_44E42B  +
movzx eax byte ptr [esi+4] +
test eax eax +
jz loc_44E42B  +
cmp eax 0C2h +
jz loc_44E257  +
cmp eax 0A2h +
jnz loc_44E240  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_44E42B  +
sub [esp+7Ch+var_44] 1 +
jmp loc_44E257  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_5C] 0 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_54] edi +
jmp loc_44E18F  +
call sub_409400  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx] eax +
jz loc_44DF5B  +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] offset unk_48D3A4 +
mov [esp+7Ch+var_7C] eax +
call sub_4094C0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] offset sub_44DDA0 +
add eax 4 +
mov [esp+7Ch+var_7C] eax +
call sub_408DA0  +
test eax eax +
jz loc_44DF5B  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 102108h +
mov [esp+7Ch+var_78] offset a_stabstr_0 +
mov [esp+7Ch+var_7C] eax +
call sub_403090  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx+20h] eax +
jz loc_44DF5B  +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_5C] 1 +
mov ecx [eax+24h] +
jmp loc_44DEA8  +
add [esp+7Ch+var_44] 1 +
jmp loc_44E257  +
mov eax [esp+7Ch+var_10] +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_2C] eax +
mov eax [edx+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
mov edx [esp+7Ch+var_54] +
add edx eax +
add edx [esp+7Ch+var_2C] +
cmp byte ptr [edx] 0 +
jz loc_44E257  +
mov eax edi +
mov edi [esp+7Ch+var_30] +
mov [esp+7Ch+var_2C] esi +
mov esi edx +
jmp loc_44E3C4  +
movzx ecx byte ptr [esi] +
lea edx [eax+1] +
add ebx 1 +
mov [eax] cl +
movzx eax byte ptr [esi] +
movsx ecx al +
add edi ecx +
cmp al 28h +
jz loc_44E3F0  +
movzx ecx byte ptr [esi+1] +
add esi 1 +
test cl cl +
jz loc_44E41C  +
mov eax edx +
cmp ebp ebx +
ja loc_44E3A0  +
mov eax [esp+7Ch+var_50] +
add ebp 8000h +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_408150  +
test eax eax +
mov [esp+7Ch+var_50] eax +
jz loc_44DF5B  +
add eax ebx +
jmp loc_44E3A0  +
movzx ecx byte ptr [esi+1] +
lea eax [esi+1] +
movzx esi cl +
test byte ptr ds:word_490F00[esi+esi] 4 +
jz loc_44E417  +
add eax 1 +
movzx ecx byte ptr [eax] +
movzx esi cl +
test byte ptr ds:word_490F00[esi+esi] 4 +
jnz loc_44E404  +
lea esi [eax-1] +
jmp loc_44E3BB  +
mov [esp+7Ch+var_30] edi +
mov esi [esp+7Ch+var_2C] +
mov edi edx +
jmp loc_44E257  +
mov eax edi +
mov edx ebx +
mov ebp [esp+7Ch+var_20] +
sub eax [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_24] +
cmp eax edx +
jz loc_44E45B  +
mov [esp+7Ch+var_78] 167h +
mov [esp+7Ch+var_7C] offset a____Binutil_16 +
mov [esp+7Ch+var_44] edx +
call sub_404040  +
mov edx [esp+7Ch+var_44] +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_7C] eax +
call sub_409000  +
test eax eax +
mov edi eax +
jz loc_44DF5B  +
mov esi [eax+0Ch] +
mov edx [esp+7Ch+var_44] +
test esi esi +
jz loc_44E4DD  +
mov [esp+7Ch+var_44] ebx +
mov edi edx +
mov ebx [esp+7Ch+var_30] +
mov [esp+7Ch+var_40] eax +
jmp loc_44E4AE  +
mov esi [esi] +
test esi esi +
jz loc_44E4D3  +
cmp [esi+4] ebx +
jnz loc_44E4A8  +
cmp [esi+8] edi +
jnz loc_44E4A8  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] eax +
mov eax [esi+0Ch] +
mov [esp+7Ch+var_7C] eax +
call memcmp  +
test eax eax +
jnz loc_44E4A8  +
mov edx edi +
mov ebx [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_40] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_7C] eax +
call sub_406290  +
test eax eax +
jz loc_44DF5B  +
mov edx [esp+7Ch+var_30] +
mov ecx [esp+7Ch+var_68] +
sub ecx [esp+7Ch+var_14] +
test esi esi +
mov dword ptr [eax+0Ch] 82h +
mov [eax+8] edx +
mov edx [esp+7Ch+var_48] +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jnz loc_44E5C4  +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] eax +
call sub_409270  +
test eax eax +
mov esi eax +
jz loc_44DF5B  +
mov edx [esp+7Ch+var_30] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_44] +
mov [eax+8] edx +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_408150  +
mov [esi+0Ch] eax +
mov eax [edi+0Ch] +
mov [esi] eax +
mov [edi+0Ch] esi +
jmp loc_44E161  +
mov eax [esp+7Ch+var_68] +
sub eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] offset aBA0xLxStabsEnt +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] eax +
call off_4733A4  +
mov [esp+7Ch+var_7C] 11h +
call sub_4040F0  +
jmp loc_44DF5B  +
mov [esp+7Ch+var_58] 0 +
jmp loc_44E0C6  +
mov dword ptr [eax+0Ch] 0C2h +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call free  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_44DF8E  +
xor edx edx +
mov edi [esp+7Ch+var_6C] +
mov eax [esp+7Ch+var_4C] +
mov esi [esp+7Ch+var_60] +
jmp loc_44E61E  +
cmp ecx 82h +
jz loc_44E633  +
cmp ecx 0C2h +
jz loc_44E610  +
test edx edx +
jnz loc_44E610  +
add [esp+7Ch+var_34] 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add eax 0Ch +
add esi 4 +
cmp edi eax +
jbe loc_44E16B  +
movzx ecx byte ptr [eax+4] +
cmp ecx 0A2h +
jnz loc_44E5F1  +
test edx edx +
jz loc_44E65C  +
sub edx 1 +
jmp loc_44E610  +
add edx 1 +
jmp loc_44E610  +
mov [esp+7Ch+var_50] 0 +
xor edx edx +
mov [esp+7Ch+var_30] 0 +
jmp loc_44E45B  +
mov [esp+7Ch+var_34] 0 +
jmp loc_44DF92  +
mov dword ptr [esi] 0FFFFFFFFh +
add [esp+7Ch+var_34] 1 +
jmp loc_44E16B  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_44E810  +
mov eax ecx +
mov esi 0AAAAAAABh +
mul  esi +
mov esi edx +
shr esi 3 +
lea eax [esi+esi*2] +
shl eax 2 +
sub ecx eax +
mov esi ecx +
jnz loc_44E810  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_44E6BE  +
cmp eax offset off_473250 +
jz loc_44E810  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_44E810  +
mov eax [edi+28h] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_28] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_403610  +
test eax eax +
jz loc_44E800  +
mov ebx [esp+3Ch+var_10] +
mov edx [edi+28h] +
mov eax [esp+3Ch+arg_8] +
add edx ebx +
add eax 8 +
cmp ebx edx +
mov [esp+3Ch+var_20] eax +
jnb loc_44E8EE  +
xor ecx ecx +
mov esi eax +
mov [esp+3Ch+arg_4] edi +
mov ebp 0FFFFFFFFh +
mov edi ecx +
jmp loc_44E735  +
cmp ebp 0FFFFFFFFh +
jz loc_44E820  +
xor ebp ebp +
add ebx 0Ch +
add esi 4 +
cmp edx ebx +
jbe loc_44E764  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_44E72B  +
movzx eax byte ptr [ebx+4] +
cmp eax 24h +
jz loc_44E862  +
cmp ebp 1 +
jnz loc_44E720  +
add ebx 0Ch +
add edi 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add esi 4 +
cmp edx ebx +
mov ebp 1 +
ja loc_44E735  +
mov ecx edi +
mov ebx [esp+3Ch+var_10] +
mov edi [esp+3Ch+arg_4] +
lea esi [ecx+ecx*2] +
shl esi 2 +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_24] ecx +
call free  +
mov ecx [esp+3Ch+var_24] +
sub [edi+24h] esi +
mov [esp+3Ch+var_10] 0 +
jnz loc_44E798  +
or dword ptr [edi+14h] 208000h +
test ecx ecx +
jz loc_44E7ED  +
mov eax [esp+3Ch+var_28] +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [esp+3Ch+arg_8] +
mov edi [eax+4] +
shr edx 3 +
test edi edi +
jz loc_44E8F5  +
xor ebx ebx +
xor eax eax +
mov ebp [esp+3Ch+var_20] +
test edx edx +
jz loc_44E8A0  +
lea esi [esi+0] +
mov [edi+eax*4] ebx +
lea esi [ebx+0Ch] +
cmp dword ptr [ebp+eax*4+0] 0FFFFFFFFh +
cmovz ebx esi +
add eax 1 +
cmp eax edx +
jnz loc_44E7D0  +
test ebx ebx +
jz loc_44E8A0  +
xor eax eax +
test ecx ecx +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_44E810  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 28h +
jz loc_44E82E  +
cmp eax 26h +
jnz loc_44E72B  +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_44E72B  +
mov dword ptr [esi] 0FFFFFFFFh +
add edi 1 +
jmp loc_44E72B  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jnz loc_44E8C1  +
test ebp ebp +
jz loc_44E894  +
add edi 1 +
mov ebp 0FFFFFFFFh +
mov dword ptr [esi] 0FFFFFFFFh +
jmp loc_44E72B  +
mov ebp 0FFFFFFFFh +
jmp loc_44E72B  +
mov [esp+3Ch+var_38] 284h +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
mov [esp+3Ch+var_28] ecx +
call sub_404040  +
mov ecx [esp+3Ch+var_28] +
jmp loc_44E7ED  +
mov eax [esp+3Ch+arg_10] +
xor ebp ebp +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_44E72B  +
jmp loc_44E74C  +
xor ecx ecx +
jmp loc_44E774  +
lea eax ds:0[edx*4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edx +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_406290  +
mov edx [esp+3Ch+arg_8] +
test eax eax +
mov [edx+4] eax +
jz loc_44E800  +
mov edi eax +
mov ecx [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_28] +
jmp loc_44E7B9  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_44EAFA  +
mov ebx [edi] +
test ebx ebx +
jz loc_44E9BC  +
mov [esp+2Ch+var_14] edi +
mov esi [esp+2Ch+arg_8] +
jmp loc_44E997  +
add eax [esp+2Ch+arg_10] +
mov edx [ebp+4] +
mov edi eax +
mov eax [ebx+8] +
lea ecx [edi+8] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov edx [ebx+0Ch] +
mov [edi+4] dl +
mov ebx [ebx] +
test ebx ebx +
jz loc_44E9B8  +
mov eax [ebx+4] +
cmp eax [esi+28h] +
jb loc_44E970  +
mov [esp+2Ch+var_28] 2AAh +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_404040  +
mov eax [ebx+4] +
jmp loc_44E970  +
mov edi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+arg_8] +
add edi 8 +
mov esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_10] +
add eax [ecx+28h] +
mov ebx esi +
cmp esi eax +
mov [esp+2Ch+var_14] eax +
jnb loc_44EAF6  +
lea esi [esi+0] +
mov eax [edi] +
cmp eax 0FFFFFFFFh +
jz loc_44EA84  +
cmp esi ebx +
jz loc_44EA01  +
mov eax [ebx] +
mov [esi] eax +
mov eax [ebx+4] +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [edi] +
mov edx [ebp+4] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call edx  +
cmp byte ptr [ebx+4] 0 +
jnz loc_44EA81  +
cmp ebx [esp+2Ch+arg_10] +
jz loc_44EA30  +
mov [esp+2Ch+var_28] 2C4h +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_404040  +
mov eax [ebp+4] +
mov edx [eax+30h] +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] edx +
mov eax [eax] +
mov [esp+2Ch+var_2C] eax +
call sub_4095F0  +
lea ecx [esi+8] +
mov edx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [eax+3Ch] +
lea eax [esi+6] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov edx [eax+24h] +
mov eax 0AAAAAAABh +
mul  edx +
shr edx 3 +
sub edx 1 +
mov [esp+2Ch+var_2C] edx +
call ecx  +
add esi 0Ch +
add ebx 0Ch +
add edi 4 +
cmp [esp+2Ch+var_14] ebx +
ja loc_44E9E0  +
sub esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_8] +
cmp [eax+24h] esi +
jz loc_44EABC  +
mov [esp+2Ch+var_28] 2D0h +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_404040  +
mov eax [esp+2Ch+arg_8] +
mov esi [eax+24h] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] esi +
mov ecx [esp+2Ch+arg_8] +
mov ecx [ecx+38h] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] ecx +
mov ecx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_24] ecx +
call sub_4033C0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_44EA98  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+24h] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] edx +
jmp loc_44EAC7  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov edx [ebx+20h] +
cmp dword ptr [edx+3Ch] offset off_473250 +
jz loc_44EB72  +
mov eax [ebx] +
mov edi [edx+38h] +
mov [esp+10h+var_10] eax +
call sub_4095F0  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
add edi eax +
cmp edi [ecx+24h] +
ja loc_44EBB3  +
mov [esp+10h+var_4] 0 +
mov eax [edx+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_8] edx +
call sub_403BF0  +
test eax eax +
jz loc_44EB80  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_409600  +
test eax eax +
jz loc_44EB70  +
mov eax [ebx] +
add ebx 4 +
mov [esp+10h+var_10] eax +
call sub_409490  +
mov [esp+10h+var_10] ebx +
call sub_408DD0  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 2E2h +
mov [esp+10h+var_10] offset a____Binutil_16 +
call sub_404040  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
jmp loc_44EB49  +
***
push esi  +
push ebx  +
mov ebx [esp+arg_4] +
mov edx [esp+arg_0] +
mov ecx [esp+arg_8] +
test ebx ebx +
jz loc_44EC30  +
mov eax [edx+28h] +
cmp ecx eax +
jnb loc_44EC20  +
mov esi [ebx+4] +
test esi esi +
jz loc_44EC30  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov eax 0FFFFFFFFh +
shr edx 3 +
cmp dword ptr [ebx+edx*4+8] 0FFFFFFFFh +
jz loc_44EC1D  +
mov eax ecx +
sub eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
sub ecx eax +
mov eax [edx+24h] +
pop ebx  +
pop esi  +
add eax ecx +
retn   +
***
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov ebx [esp+10Ch+arg_0] +
mov esi [esp+10Ch+arg_4] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_44ED80  +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_EC] eax +
lea eax [esp+10Ch+var_EC] +
mov [esp+10Ch+var_104] eax +
call sub_409760  +
mov edx eax +
xor eax eax +
test edx edx +
cmovnz eax [esp+10Ch+var_EC] +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+14h] 4 +
jz loc_44ED46  +
lea ebp [esp+10Ch+var_8C] +
xor eax eax +
mov ecx 20h +
mov edi ebp +
stos   +
mov edi [ebx+9Ch] +
lea eax [ebx+9Ch] +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_5C] ebx +
mov [esp+10Ch+var_58] ebx +
mov [esp+10Ch+var_54] eax +
call sub_41A000  +
mov [esp+10Ch+var_B4] offset loc_44EC40 +
mov [esp+10Ch+var_B0] offset loc_44EC50 +
mov [esp+10Ch+var_AC] offset loc_44EC60 +
mov [esp+10Ch+var_A8] offset loc_44EC70 +
mov [esp+10Ch+var_A4] offset loc_44EC80 +
mov [esp+10Ch+var_70] eax +
lea eax [esp+10Ch+var_C8] +
mov [esp+10Ch+var_74] eax +
xor eax eax +
mov [esp+10Ch+var_C4] offset loc_44EC90 +
mov [esp+10Ch+var_9C] offset dword_44ECA0 +
mov [esp+eax+10Ch+var_E0] 0 +
add eax 4 +
cmp eax 18h +
jb loc_44EE17  +
mov edx [esp+10Ch+arg_8] +
mov eax [esi+24h] +
mov [esp+10Ch+var_DC] 1 +
mov [esp+10Ch+var_D0] esi +
test edx edx +
mov [esp+10Ch+var_D4] eax +
jz loc_44EF11  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
jz loc_44EFC8  +
mov [esp+10Ch+var_F0] 0 +
lea esi [esp+10Ch+var_E8] +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_108] offset dword_44ECB0 +
mov [esp+10Ch+var_10C] ebx +
call sub_4032D0  +
mov eax [esp+10Ch+arg_C] +
test eax eax +
jz loc_44EF79  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_FC] 0 +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
lea eax [esp+10Ch+var_E0] +
mov [esp+10Ch+var_104] eax +
call sub_404890  +
test eax eax +
mov [esp+10Ch+var_EC] eax +
jz loc_44EF60  +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_108] offset dword_44ECF0 +
call sub_4032D0  +
mov eax [esp+10Ch+var_E4] +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_4192E0  +
mov eax [esp+10Ch+var_EC] +
mov [ebx+9Ch] edi +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+28h] eax +
cmovnb eax [esi+28h] +
mov [esp+10Ch+var_10C] eax +
call sub_408000  +
test eax eax +
mov [esp+10Ch+arg_8] eax +
jz loc_44EFC8  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+arg_8] +
jz loc_44EFC0  +
mov [esp+10Ch+var_F0] eax +
jmp loc_44EE6F  +
mov eax [esp+10Ch+var_F0] +
test eax eax +
jz loc_44EED4  +
mov [esp+10Ch+var_10C] eax +
call free  +
jmp loc_44EED4  +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
call loc_41B020  +
mov eax [ebx+4] +
mov eax [eax+104h] +
mov [esp+10Ch+var_10C] ebx +
call eax  +
mov [esp+10Ch+var_10C] eax +
call sub_408000  +
mov [esp+10Ch+arg_C] eax +
mov eax [ebx+4] +
mov ecx [esp+10Ch+arg_C] +
mov eax [eax+108h] +
mov [esp+10Ch+var_108] ecx +
mov [esp+10Ch+var_10C] ebx +
call eax  +
jmp loc_44EE96  +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_4192E0  +
xor eax eax +
mov [ebx+9Ch] edi +
jmp loc_44ED70  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5 +
mov esi [eax] +
mov [esp+10h+var_10+1] eax +
cmp esi 3 +
setbe dl  +
test ecx ecx +
setnz al  +
xor ebx ebx +
and dl al +
mov byte ptr [esp+10h+var_10] dl +
jz loc_44F048  +
mov edi 4 +
jmp loc_44F027  +
mov eax edi +
sub eax esi +
cmp eax 3 +
mov esi eax +
setbe al  +
add ebx 1 +
test al al +
jz loc_44F048  +
cmp ecx ebx +
jbe loc_44F048  +
movzx edx byte ptr [ebp+ebx+0] +
cmp esi 2 +
sbb eax eax +
not eax  +
cmp dl al +
jz loc_44F058  +
test dl dl +
jz loc_44F010  +
movzx eax byte ptr [esp+10h+var_10] +
xor esi esi +
add ebx 1 +
test al al +
jnz loc_44F023  +
mov eax [esp+10h+var_10+1] +
mov [eax] esi +
add esp 5 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
cmp esi 3 +
setbe al  +
jmp loc_44F01C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [eax+1Ch] +
mov eax [ebx+34h] +
test eax eax +
jz loc_44F171  +
mov esi [ebx+28h] +
test esi esi +
jz loc_44F0E5  +
mov edi edx +
sub edi [ebp+10h] +
cmp edi esi +
jnb loc_44F108  +
mov edx [ebx+30h] +
sub esi edx +
cmp esi edi +
cmova esi edi +
add eax edx +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx edi +
mov [esp+28h+var_24] edx +
call memcpy  +
sub edi esi +
jnz loc_44F146  +
mov eax [ebx+30h] +
mov edx [ebx+28h] +
add eax esi +
cmp eax edx +
mov [ebx+30h] eax +
jz loc_44F134  +
mov ecx [ebx+2Ch] +
xor eax eax +
cmp edx ecx +
jbe loc_44F0DD  +
add esi ecx +
mov [ebx+2Ch] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+24h] +
mov edi edx +
mov si 1 +
sub edi [ebp+10h] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+2Ch] 0 +
shl esi cl +
cmp edi esi +
mov [ebx+28h] esi +
jb loc_44F097  +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx esi +
mov [esp+28h+var_24] edx +
call memcpy  +
mov eax [ebx+28h] +
mov dword ptr [ebx+30h] 0 +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+2Ch] +
xor eax eax +
mov dword ptr [ebx+30h] 0 +
cmp edx ecx +
ja loc_44F0D8  +
jmp loc_44F0DD  +
mov eax [ebp+0Ch] +
mov edx [ebx+34h] +
mov [esp+28h+var_20] edi +
sub eax edi +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call memcpy  +
mov eax [ebx+28h] +
mov [ebx+30h] edi +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+20h] +
mov al 1 +
mov edi [ebp+28h] +
mov [esp+28h+var_20] 1 +
mov ecx [ebx+24h] +
mov [esp+28h+var_1C] edx +
mov [esp+28h+var_28] edi +
shl eax cl +
mov [esp+28h+var_24] eax +
call esi  +
test eax eax +
mov [ebx+34h] eax +
jz loc_44F1A3  +
mov edx [esp+28h+var_1C] +
jmp loc_44F087  +
mov eax 1 +
jmp loc_44F0DD  +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_44F242  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_44F242  +
mov ecx [eax+8] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+8] 0 +
test ecx ecx +
mov dword ptr [edx+18h] 0 +
jz loc_44F1EC  +
and ecx 1 +
mov [edx+30h] ecx +
lea edx [eax+530h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 8000h +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov [eax+6Ch] edx +
mov [eax+50h] edx +
mov [eax+4Ch] edx +
mov dword ptr [eax+1BC0h] 1 +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
xor eax eax +
retn   +
mov eax 0FFFFFFFEh +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_44F280  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_44F280  +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
jmp loc_44F1B0  +
mov eax 0FFFFFFFEh +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
test edi edi +
jz loc_44F310  +
mov esi [edi+1Ch] +
test esi esi +
jz loc_44F310  +
test ebx ebx +
js loc_44F301  +
mov ebp ebx +
mov eax ebx +
sar ebp 4 +
and eax 0Fh +
add ebp 1 +
cmp ebx 2Fh +
cmovle ebx eax +
lea eax [ebx-8] +
cmp eax 7 +
ja loc_44F307  +
mov eax [esi+34h] +
test eax eax +
jz loc_44F2EB  +
cmp ebx [esi+24h] +
jz loc_44F2EB  +
mov ecx [edi+28h] +
mov edx [edi+24h] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
call edx  +
mov dword ptr [esi+34h] 0 +
mov [esi+8] ebp +
mov [esi+24h] ebx +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44F250  +
neg ebx  +
xor ebp ebp +
jmp loc_44F2C1  +
test ebx ebx +
jz loc_44F2C9  +
nop   +
lea esi [esi+0] +
add esp 1Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov ebx [esp+10h+arg_0] +
test eax eax +
jz loc_44F3E0  +
cmp byte ptr [eax] 31h +
jnz loc_44F3E0  +
cmp [esp+10h+arg_C] 38h +
jnz loc_44F3E0  +
test ebx ebx +
jz loc_44F427  +
mov eax [ebx+20h] +
mov dword ptr [ebx+18h] 0 +
test eax eax +
jz loc_44F3F0  +
mov ecx [ebx+24h] +
mov edx [ebx+28h] +
test ecx ecx +
jz loc_44F410  +
mov [esp+10h+var_8] 1BCCh +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
mov esi eax +
jz loc_44F420  +
mov [ebx+1Ch] eax +
mov dword ptr [eax+34h] 0 +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] eax +
call sub_44F290  +
mov edi eax +
xor eax eax +
test edi edi +
jnz loc_44F3C0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov eax edi +
mov dword ptr [ebx+1Ch] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 0FFFFFFFAh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+24h] +
xor edx edx +
mov eax offset loc_4519B0 +
mov dword ptr [ebx+20h] offset loc_4519B0 +
mov dword ptr [ebx+28h] 0 +
test ecx ecx +
jnz loc_44F372  +
mov dword ptr [ebx+24h] offset loc_4519D0 +
jmp loc_44F372  +
mov eax 0FFFFFFFCh +
jmp loc_44F3B3  +
mov eax 0FFFFFFFEh +
jmp loc_44F3B3  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0Fh +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_44F320  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
test eax eax +
jz loc_44F4C0  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44F4C0  +
test ecx ecx +
js loc_44F4A6  +
cmp ecx 10h +
jg loc_44F4C0  +
mov edi [eax+3Ch] +
lea esi [ecx+edi] +
cmp esi 20h +
ja loc_44F4C0  +
mov edx 1 +
shl edx cl +
mov ecx edi +
sub edx 1 +
and edx [esp+14h] +
mov [eax+3Ch] esi +
shl edx cl +
add [eax+38h] edx +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFEh +
jmp loc_44F4A3  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_0] +
test eax eax +
jz loc_450BD0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+1Ch] +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_450BD0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+7Ch+var_48] eax +
jz loc_450BD0  +
mov eax [esp+7Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_450860  +
mov eax [eax+4] +
mov [esp+7Ch+var_50] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax] +
cmp eax 0Bh +
jz loc_44F6D0  +
mov ebx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 0 +
mov ebx [ebx+10h] +
mov esi [edx+3Ch] +
mov ebp [edx+38h] +
mov ecx ebx +
mov [esp+7Ch+var_4C] ebx +
mov ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] ecx +
lea ecx [edx+70h] +
add edx 530h +
mov [esp+7Ch+var_30] ecx +
mov ecx esi +
mov esi ebp +
mov [esp+7Ch+var_2C] edx +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
cmp eax 1Eh +
ja loc_450BD0  +
jmp ds:off_48D5D0[eax*4]  +
cmp ebx 1Fh +
ja loc_44F5C0  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
nop   +
jmp loc_44F5AA  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_44F5A2  +
mov edx esi +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
mov esi [esp+7Ch+arg_0] +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov [ebx+18h] eax +
mov [esi+30h] eax +
xor esi esi +
mov dword ptr [ebx] 0Ah +
xor ebx ebx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_451028  +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_451A80  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov dword ptr [edx] 0Bh +
mov eax [esp+7Ch+arg_4] +
sub eax 5 +
cmp eax 1 +
jbe loc_44F970  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+4] +
test eax eax +
jnz loc_44F6E4  +
cmp ebx 2 +
ja loc_44F683  +
test edi edi +
jz loc_44F970  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
sub edi 1 +
add ebx 8 +
shl eax cl +
add esi eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx esi +
and eax 1 +
shr edx 1 +
mov [ecx+4] eax +
mov eax edx +
and eax 3 +
cmp eax 2 +
jz loc_450A87  +
cmp eax 3 +
jz loc_450D0E  +
cmp eax 1 +
jz loc_450CD0  +
mov dword ptr [ecx] 0Dh +
mov eax 0Dh +
mov esi edx +
sub ebx 3 +
shr esi 2 +
jmp loc_44F57E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_44F539  +
mov eax [esp+7Ch+var_58] +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
mov dword ptr [eax] 1Ah +
mov eax 1Ah +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jz loc_44F766  +
cmp ebx edx +
jnb loc_44F741  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
nop   +
lea esi [esi+0] +
jmp loc_44F72A  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_44F722  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add [ecx+44h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 18h +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_44F970  +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_54] +
mov ecx [ecx+44h] +
sub eax edx +
cmp eax ecx +
jnb loc_4508E0  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
cmp ecx [eax+2Ch] +
ja loc_4509E4  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+30h] +
cmp ecx eax +
jbe loc_450C02  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+28h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_40] edx +
sub [esp+7Ch+var_40] ecx +
add [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+40h] +
cmp ecx edx +
cmova ecx edx +
jmp loc_4508F3  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax] 13h +
jz loc_44F970  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
cmp edi 5 +
ja loc_450AD7  +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+4Ch] +
mov dword ptr [eax+1BC4h] 0 +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+54h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_44F8AB  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
mov ebx esi +
mov esi edi +
jmp loc_44F868  +
test esi esi +
jz loc_450AA2  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub esi 1 +
mov edi [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add ebx eax +
mov eax [esp+7Ch+var_34] +
and eax ebx +
lea eax [edi+eax*4] +
movzx edx byte ptr [eax] +
movzx edi word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_44F860  +
mov word ptr [esp+7Ch+var_28] di +
mov edi esi +
mov esi ebx +
mov ebx ecx +
cmp byte ptr [esp+7Ch+var_40] 0 +
jz loc_450B70  +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_450B70  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_34] eax +
mov eax 1 +
mov [esp+7Ch+var_24] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_34] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_20] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jb loc_44F968  +
jmp loc_450EDC  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub edi 1 +
shl eax cl +
movzx ecx byte ptr [esp+7Ch+var_34] +
add esi eax +
mov eax [esp+7Ch+var_20] +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
add edx eax +
cmp edx ebx +
jbe loc_450ED7  +
test edi edi +
jnz loc_44F920  +
lea esi [esi+0] +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_44FB50  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jnz loc_450956  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov [edx+1BC8h] eax +
mov dword ptr [edx] 16h +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+50h] +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+58h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_44FA3F  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
mov ebx edi +
mov edi ebp +
jmp loc_44F9FC  +
test ebx ebx +
jz loc_4507D4  +
add edi 1 +
movzx eax byte ptr [edi-1] +
sub ebx 1 +
mov edx [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_34] +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
movzx ebp word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_44F9F4  +
mov word ptr [esp+7Ch+var_28] bp +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_450A14  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_20] eax +
mov eax 1 +
mov [esp+7Ch+var_34] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_20] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_24] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_20] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jnb loc_44FB02  +
test edi edi +
jz loc_44F970  +
mov eax esi +
mov edx [esp+7Ch+var_20] +
mov esi edi +
mov edi eax +
jmp loc_44FAB9  +
test esi esi +
jz loc_450C9D  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub esi 1 +
shl eax cl +
mov ecx edx +
add edi eax +
mov eax [esp+7Ch+var_24] +
and eax edi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] cl +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov word ptr [esp+7Ch+var_28] cx +
lea ecx [eax+edx] +
cmp ecx ebx +
ja loc_44FAB1  +
mov edx edi +
mov edi esi +
mov esi edx +
mov edx [esp+7Ch+var_20] +
sub ebx [esp+7Ch+var_38] +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add edx [ecx+1BC4h] +
jmp loc_450A1E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Eh +
mov eax 0FFFFFFFCh +
lea esi [esi+0] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 1 +
mov edi ebp +
mov ebp esi +
mov esi eax +
lea esi [esi+0] +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov ecx eax +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov [ecx+4] ebx +
mov edx [esp+7Ch+var_4C] +
mov [ecx] edi +
mov ebx [eax+28h] +
mov [ecx+10h] edx +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
test ebx ebx +
jnz loc_44FBA0  +
mov ebx [esp+7Ch+var_54] +
cmp edx ebx +
jz loc_44FBB8  +
mov eax [eax] +
cmp eax 1Ch +
ja loc_44FBB8  +
cmp eax 19h +
jbe loc_44FBA0  +
cmp [esp+7Ch+arg_4] 4 +
jz loc_44FBB8  +
nop   +
lea esi [esi+0] +
mov edx [esp+7Ch+var_54] +
mov eax [esp+7Ch+arg_0] +
call sub_44F070  +
test eax eax +
jnz loc_44FB1D  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_54] +
sub esi [eax+10h] +
sub ebx [eax+4] +
add [eax+14h] esi +
add [eax+8] ebx +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+8] +
add [eax+1Ch] esi +
test ecx ecx +
jz loc_44FC20  +
test esi esi +
jz loc_44FC20  +
mov edx [eax+10h] +
test edx edx +
jz loc_4508A0  +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_451FB0  +
mov edi [esp+7Ch+var_58] +
mov [edi+18h] eax +
mov edi [esp+7Ch+arg_0] +
mov [edi+30h] eax +
mov edi [esp+7Ch+var_58] +
cmp dword ptr [edi+4] 1 +
mov edx [edi] +
sbb eax eax +
not eax  +
and eax 40h +
add eax [edi+3Ch] +
cmp edx 0Bh +
jz loc_4507E0  +
cmp edx 0Eh +
jnz loc_4507F0  +
mov edx 100h +
mov edi [esp+7Ch+arg_0] +
add eax edx +
or esi ebx +
mov [edi+2Ch] eax +
jz loc_44FC6D  +
cmp [esp+7Ch+arg_4] 4 +
mov eax [esp+7Ch+var_44] +
jnz loc_44FB30  +
mov ebx [esp+7Ch+var_44] +
mov eax 0FFFFFFFBh +
test ebx ebx +
cmovnz eax ebx +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 1Fh +
ja loc_44FCB2  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
jmp loc_44FC9C  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_44FC94  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_44FCC0  +
mov [eax+4] esi +
mov eax [esp+7Ch+var_58] +
test byte ptr [eax+11h] 2 +
jnz loc_450D57  +
mov eax [esp+7Ch+var_58] +
xor esi esi +
xor ebx ebx +
mov dword ptr [eax] 3 +
jmp loc_44FD4A  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 0Fh +
test eax eax +
jz loc_4508C8  +
mov edx [esp+7Ch+var_4C] +
cmp edi eax +
cmovbe eax edi +
cmp eax edx +
cmova eax edx +
test eax eax +
jz loc_44F970  +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
sub [esp+7Ch+var_4C] edx +
add [esp+7Ch+var_48] edx +
sub edi edx +
add ebp edx +
sub [eax+40h] edx +
mov eax [eax] +
jmp loc_44F57E  +
cmp ebx 0Fh +
ja loc_44FD74  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
jmp loc_44FD5E  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_44FD56  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_44FD8F  +
mov ebx esi +
movzx edx bl +
mov [eax+8] edx +
mov edx esi +
shr edx 8 +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 2 +
mov eax edx +
jnz loc_450C62  +
mov ebx [esp+7Ch+var_58] +
xor esi esi +
mov dword ptr [ebx] 4 +
xor ebx ebx +
test dh 4 +
jnz loc_45075A  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_450A9B  +
mov dword ptr [edx+10h] 0 +
xor edx edx +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx] 5 +
jmp loc_4504AF  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+68h] +
mov [esp+7Ch+var_38] eax +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+60h] +
mov [esp+7Ch+var_28] eax +
add eax [ecx+64h] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_34] +
cmp [esp+7Ch+var_38] eax +
mov eax [esp+7Ch+var_58] +
jnb loc_450FF3  +
mov ecx [eax+54h] +
mov edx [eax+4Ch] +
mov eax 1 +
shl eax cl +
lea eax [eax-1] +
mov [esp+7Ch+var_3C] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx ecx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax cl +
cmp ebx eax +
jnb loc_44FE8A  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
mov ebx edx +
jmp loc_44FE58  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_3C] +
and eax esi +
lea eax [ebx+eax*4] +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax dl +
cmp eax ecx +
ja loc_44FE50  +
mov ebx ecx +
mov ecx edx +
cmp word ptr [esp+7Ch+var_40] 0Fh +
jbe loc_450A60  +
cmp word ptr [esp+7Ch+var_40] 10h +
jz loc_450E63  +
cmp word ptr [esp+7Ch+var_40] 11h +
jz loc_450EEC  +
lea edx [eax+7] +
cmp ebx edx +
jnb loc_44FEE6  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_44FECD  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_44FEC5  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 7 +
mov edx esi +
and esi 7Fh +
add esi 0Bh +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 7 +
mov eax [esp+7Ch+var_40] +
add eax [esp+7Ch+var_38] +
cmp eax [esp+7Ch+var_34] +
mov edx eax +
mov [esp+7Ch+var_40] eax +
ja loc_451249  +
mov word ptr [esp+7Ch+var_3C] cx +
mov eax [esp+7Ch+var_38] +
mov ecx [esp+7Ch+var_58] +
lea eax [ecx+eax*2+70h] +
mov ecx [esp+7Ch+var_30] +
lea edx [ecx+edx*2] +
movzx ecx word ptr [esp+7Ch+var_3C] +
mov [eax] cx +
add eax 2 +
cmp eax edx +
jnz loc_44FF37  +
mov eax [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] eax +
mov [edx+68h] eax +
jmp loc_44FDFD  +
cmp ebx 0Fh +
ja loc_44FF86  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
jmp loc_44FF6E  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_44FF66  +
mov ebx ecx +
mov edx [esp+7Ch+var_58] +
mov eax esi +
cmp al 8 +
mov [edx+10h] esi +
jz loc_450DCC  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax 1Dh +
mov dword ptr [edx] 1Dh +
jmp loc_44F587  +
cmp ebx 0Dh +
ja loc_44FFE6  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
jmp loc_44FFCE  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Dh +
jbe loc_44FFC6  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
mov edx esi +
mov eax esi +
shr edx 5 +
and eax 1Fh +
and edx 1Fh +
add eax 101h +
add edx 1 +
sub ebx 0Eh +
mov [ecx+64h] edx +
mov [ecx+60h] eax +
mov ecx esi +
shr ecx 0Ah +
and ecx 0Fh +
add ecx 4 +
mov [esp+7Ch+var_40] edx +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_58] +
shr esi 0Eh +
cmp eax 11Eh +
mov [ecx+5Ch] edx +
ja loc_450BE0  +
cmp [esp+7Ch+var_40] 1Eh +
ja loc_450BE0  +
mov eax [esp+7Ch+var_58] +
xor edx edx +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 11h +
jmp loc_450072  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+5Ch] +
mov ecx edx +
mov [esp+7Ch+var_3C] edx +
mov edx [eax+68h] +
cmp ecx edx +
jbe loc_4500C8  +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
cmp ecx 2 +
ja loc_450090  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
add [esp+7Ch+var_40] 1 +
sub ecx 3 +
mov ebx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
movzx eax ds:word_48DEDE[ebx+ebx] +
mov [edx+68h] ebx +
mov ebx esi +
and ebx 7 +
shr esi 3 +
mov [edx+eax*2+70h] bx +
mov eax [esp+7Ch+var_40] +
cmp [esp+7Ch+var_3C] eax +
ja loc_450072  +
mov edx [esp+7Ch+var_40] +
mov ebx ecx +
cmp edx 12h +
mov ecx [esp+7Ch+var_58] +
lea eax dword_48DEE0[edx+edx] +
ja loc_4500F7  +
movzx edx word ptr [eax] +
add eax 2 +
cmp eax offset unk_48DF06 +
mov word ptr [ecx+edx*2+70h] 0 +
jnz loc_4500D8  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+68h] 13h +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_2C] +
mov dword ptr [eax+54h] 7 +
mov [eax+6Ch] edx +
mov [eax+4Ch] edx +
mov edx eax +
add eax 2F0h +
mov [esp+7Ch+var_68] eax +
mov eax edx +
add eax 54h +
mov [esp+7Ch+var_6C] eax +
mov eax edx +
add eax 6Ch +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_74] 13h +
mov [esp+7Ch+var_7C] 0 +
mov [esp+7Ch+var_78] eax +
call sub_4522A0  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_450FD5  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidCodeLen +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
jmp loc_44FCF1  +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 0FFFFFFFDh +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_44FB50  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
jz loc_44F970  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
sub [esp+7Ch+var_4C] 1 +
mov eax [edx+40h] +
mov [ecx] al +
lea eax [ecx+1] +
mov [esp+7Ch+var_48] eax +
mov eax 14h +
mov dword ptr [edx] 14h +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_4509C1  +
cmp ebx 1Fh +
ja loc_450212  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
nop   +
jmp loc_4501FA  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_4501F2  +
mov ebx ecx +
mov eax [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
sub eax [esp+7Ch+var_4C] +
add [ecx+14h] eax +
add [edx+1Ch] eax +
test eax eax +
jz loc_450266  +
mov ecx edx +
mov edx [edx+10h] +
test edx edx +
jz loc_450FB3  +
mov edx [ecx+18h] +
mov ecx [esp+7Ch+var_48] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] edx +
sub ecx eax +
mov [esp+7Ch+var_78] ecx +
call sub_451FB0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx [ecx+10h] +
test edx edx +
jnz loc_450295  +
mov edx esi +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov edx [esp+7Ch+var_58] +
cmp eax [edx+18h] +
jz loc_4509B2  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectDataC +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_54] eax +
mov eax 1Dh +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_450F92  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test eax eax +
jz loc_450F92  +
cmp ebx 1Fh +
ja loc_450322  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
lea esi [esi+0] +
jmp loc_45030A  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_450302  +
mov ebx ecx +
mov eax [esp+7Ch+var_58] +
cmp [eax+1Ch] esi +
jz loc_451096  +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aIncorrectLengt +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+8] +
test edx edx +
jz loc_4509D0  +
cmp ebx 0Fh +
ja loc_450392  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
nop   +
jmp loc_45037A  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_450372  +
mov ebx ecx +
test dl 2 +
jz loc_4503A3  +
cmp esi 8B1Fh +
jz loc_4510A3  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+10h] 0 +
mov eax [eax+20h] +
test eax eax +
jz loc_4503BC  +
mov dword ptr [eax+30h] 0FFFFFFFFh +
and edx 1 +
jz loc_450CAE  +
mov ecx esi +
mov eax esi +
shl ecx 8 +
mov edx 8421085h +
shr eax 8 +
movzx ecx cx +
add ecx eax +
mov eax ecx +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 4 +
mov edx eax +
shl edx 5 +
sub edx eax +
cmp ecx edx +
jnz loc_450CAE  +
mov eax esi +
and eax 0Fh +
cmp eax 8 +
jz loc_4510FF  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
cmp ebx 1Fh +
ja loc_450462  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
jmp loc_45044A  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_450442  +
mov ebx ecx +
mov edx esi +
movzx eax si +
shr edx 10h +
xor edx 0FFFFh +
cmp eax edx +
jz loc_450DFA  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidStoredB +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx eax +
and edx 400h +
test edx edx +
jz loc_450555  +
mov edx [esp+7Ch+var_58] +
mov ecx [edx+40h] +
cmp edi ecx +
mov [esp+7Ch+var_40] ecx +
cmovbe ecx edi +
mov edx ecx +
test edx edx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_40] +
jz loc_450546  +
mov ecx [esp+7Ch+var_58] +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_450529  +
mov edx [ecx+10h] +
test edx edx +
mov [esp+7Ch+var_38] edx +
jz loc_450529  +
mov edx [ecx+18h] +
mov eax [ecx+14h] +
mov ecx [esp+7Ch+var_3C] +
sub eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ebp +
add ecx eax +
mov [esp+7Ch+var_40] ecx +
mov ecx edx +
sub ecx eax +
cmp [esp+7Ch+var_40] edx +
mov edx ecx +
cmovbe edx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+10h] +
test ah 2 +
jnz loc_450D30  +
mov edx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_3C] +
mov ecx [edx+40h] +
sub edi eax +
add ebp eax +
sub ecx eax +
mov [edx+40h] ecx +
test ecx ecx +
jnz loc_44F970  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov ecx [esp+7Ch+var_58] +
test ah 8 +
mov dword ptr [ecx+40h] 0 +
mov dword ptr [ecx] 6 +
jnz loc_450592  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_450623  +
mov dword ptr [edx+1Ch] 0 +
jmp loc_450623  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test ah 8 +
jz loc_45056B  +
test edi edi +
jz loc_44F970  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_4505B8  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_4505EA  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_4505E6  +
mov edi [eax+1Ch] +
test edi edi +
jz loc_4505E6  +
mov ebx [esi+40h] +
cmp ebx [eax+20h] +
jnb loc_4505E6  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_4505B2  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_450BA5  +
mov eax [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test eax eax +
jnz loc_44F970  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx+40h] 0 +
mov dword ptr [edx] 7 +
test ah 10h +
jz loc_450880  +
test edi edi +
jz loc_44F970  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_450666  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_450698  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_450694  +
mov edi [eax+24h] +
test edi edi +
jz loc_450694  +
mov ebx [esi+40h] +
cmp ebx [eax+28h] +
jnb loc_450694  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_450660  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_450AB0  +
mov ecx [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test ecx ecx +
jnz loc_44F970  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 8 +
test ah 2 +
jz loc_450804  +
cmp ebx 0Fh +
ja loc_450715  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
jmp loc_4506FD  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx 0Fh +
jbe loc_4506F5  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
movzx edx word ptr [ecx+18h] +
cmp edx esi +
jz loc_450800  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aHeaderCrcMisma +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 4 +
mov eax edx +
jz loc_44FDB8  +
cmp ebx 0Fh +
ja loc_450780  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
jmp loc_45076A  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_450766  +
mov eax [esp+7Ch+var_58] +
mov [eax+40h] esi +
mov eax [eax+20h] +
test eax eax +
jz loc_450791  +
mov [eax+14h] esi +
test dh 2 +
jnz loc_450E1E  +
mov eax edx +
xor ebx ebx +
and edx 400h +
xor esi esi +
jmp loc_44FDD0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_450634  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_4506DB  +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi ecx +
jmp loc_44FB50  +
sub eax 0FFFFFF80h +
xor edx edx +
jmp loc_44FC4B  +
cmp edx 13h +
jz loc_44FC46  +
xor edx edx +
jmp loc_44FC4B  +
xor ebx ebx +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_45081F  +
sar eax 9 +
and eax 1 +
mov [edx+2Ch] eax +
mov dword ptr [edx+30h] 1 +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_451FB0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov eax 0Bh +
mov dword ptr [edx] 0Bh +
jmp loc_44F587  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
test eax eax +
jnz loc_450BD0  +
mov [esp+7Ch+var_50] 0 +
jmp loc_44F52A  +
mov ecx [esp+7Ch+var_58] +
mov edx [ecx+20h] +
test edx edx +
jz loc_4506D1  +
mov dword ptr [edx+24h] 0 +
jmp loc_4506D1  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_451A80  +
jmp loc_44FC0F  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_44F587  +
mov eax [esp+7Ch+var_48] +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+40h] +
mov edx ecx +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_3C] ebx +
cmp ecx eax +
cmova ecx eax +
mov eax [esp+7Ch+var_58] +
sub edx ecx +
sub [esp+7Ch+var_4C] ecx +
mov [eax+40h] edx +
mov edx [esp+7Ch+var_48] +
mov eax [esp+7Ch+var_40] +
add ecx edx +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
cmp edx ecx +
mov [edx-1] bl +
jnz loc_450917  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_48] edx +
mov ebx [esp+7Ch+var_3C] +
mov edx [eax+40h] +
test edx edx +
jz loc_450942  +
mov eax [eax] +
jmp loc_44F57E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
mov eax 14h +
jmp loc_44F587  +
cmp ebx edx +
jnb loc_450985  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
jmp loc_45096E  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_450966  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add eax [ecx+40h] +
mov [ecx+40h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
jmp loc_44F996  +
mov esi [esp+7Ch+var_4C] +
xor ebx ebx +
mov eax [edx+8] +
mov [esp+7Ch+var_54] esi +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 1Bh +
jmp loc_4502D7  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_44F587  +
mov eax [eax+1BC0h] +
test eax eax +
jz loc_44F7A0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDistanc +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+1BC4h] +
mov ecx eax +
sub ebx eax +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add eax edx +
test byte ptr [esp+7Ch+var_40] 40h +
mov [ecx+1BC4h] eax +
jz loc_450C18  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_0 +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_44F587  +
mov edx [esp+7Ch+var_38] +
shr esi cl +
sub ebx eax +
mov ecx [esp+7Ch+var_58] +
mov eax edx +
add eax 1 +
mov [ecx+68h] eax +
mov [esp+7Ch+var_38] eax +
movzx eax word ptr [esp+7Ch+var_40] +
mov [ecx+edx*2+70h] ax +
jmp loc_44FDFD  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 10h +
mov eax 10h +
jmp loc_44F6BE  +
xor edx edx +
jmp loc_44FDD0  +
mov edi ebp +
mov ebp ebx +
mov ebx esi +
mov esi ecx +
jmp loc_44FB50  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451FB0  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_4506BA  +
cmp [esp+7Ch+var_4C] 101h +
jbe loc_44F803  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov [eax] ebp +
mov [eax+0Ch] edx +
mov edx [esp+7Ch+var_4C] +
mov [eax+4] edi +
mov [eax+10h] edx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] esi +
mov esi eax +
mov [eax+3Ch] ebx +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_452800  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+10h] +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+arg_0] +
mov ebp [eax] +
mov edi [eax+4] +
mov eax esi +
mov ebx [eax+3Ch] +
mov eax [eax] +
mov esi [esi+38h] +
cmp eax 0Bh +
jnz loc_44F57E  +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx+1BC4h] 0FFFFFFFFh +
jmp loc_44F587  +
mov edx eax +
mov ecx eax +
sub ebx eax +
movzx eax word ptr [esp+7Ch+var_28] +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
cmp byte ptr [esp+7Ch+var_40] 0 +
mov [ecx+1BC4h] edx +
mov [ecx+40h] eax +
jnz loc_450C39  +
mov dword ptr [ecx] 19h +
mov eax 19h +
jmp loc_44F587  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451FB0  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_45060C  +
mov eax 0FFFFFFFEh +
jmp loc_44FB30  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aTooManyLengthO +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax+34h] +
add [esp+7Ch+var_40] eax +
jmp loc_44F7C7  +
mov edx [esp+7Ch+var_40] +
mov ecx [esp+7Ch+var_58] +
movzx eax word ptr [esp+7Ch+var_28] +
and edx 0Fh +
mov [ecx+48h] edx +
mov [ecx+44h] eax +
mov dword ptr [ecx] 17h +
jmp loc_44F709  +
test byte ptr [esp+7Ch+var_40] 20h +
jz loc_450D9F  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_44F587  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_451FB0  +
mov edx [esi+10h] +
mov [esi+18h] eax +
mov eax edx +
jmp loc_44FDA1  +
mov ecx edi +
mov eax ebx +
mov edi ebp +
mov ebx esi +
mov ebp ecx +
mov esi eax +
jmp loc_44FB50  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectHeade +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax+4Ch] offset unk_48D6E0 +
mov dword ptr [eax+54h] 9 +
mov dword ptr [eax+50h] offset unk_48D660 +
mov dword ptr [eax+58h] 5 +
mov dword ptr [eax] 13h +
jz loc_451234  +
mov eax 13h +
jmp loc_44F6BE  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBlockTy +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F6BE  +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_3C] +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_451FB0  +
mov ecx [esp+7Ch+var_58] +
mov [ecx+18h] eax +
jmp loc_450532  +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
mov eax esi +
shr eax 10h +
mov byte ptr [esp+7Ch+var_10+2] al +
mov eax esi +
shr eax 18h +
mov byte ptr [esp+7Ch+var_10+3] al +
mov eax [ebx+18h] +
lea edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451FB0  +
mov [ebx+18h] eax +
jmp loc_44FCCE  +
test byte ptr [esp+7Ch+var_40] 40h +
jz loc_450F45  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidLiteral +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
test esi 0E000h +
jz loc_450F5E  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownHeaderF +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov ebx [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov [ebx+40h] eax +
mov dword ptr [ebx] 0Eh +
jz loc_451227  +
xor ebx ebx +
xor esi esi +
jmp loc_44FCE7  +
mov ebx [esp+7Ch+var_58] +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
xor esi esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [ebx+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_451FB0  +
mov [ebx+18h] eax +
mov eax [ebx+10h] +
xor ebx ebx +
mov edx eax +
and edx 400h +
jmp loc_44FDD0  +
lea edx [eax+2] +
cmp ebx edx +
jnb loc_450EA1  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_450E88  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_450E80  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
mov eax [esp+7Ch+var_38] +
shr esi cl +
test eax eax +
jz loc_451249  +
mov eax [esp+7Ch+var_58] +
sub ebx 2 +
mov ecx [esp+7Ch+var_38] +
movzx ecx word ptr [eax+ecx*2+6Eh] +
mov eax esi +
and eax 3 +
add eax 3 +
mov [esp+7Ch+var_40] eax +
shr esi 2 +
jmp loc_44FF02  +
mov word ptr [esp+7Ch+var_28] cx +
movzx ecx byte ptr [esp+7Ch+var_34] +
sub ebx [esp+7Ch+var_38] +
shr esi cl +
jmp loc_450B72  +
lea edx [eax+3] +
cmp ebx edx +
jnb loc_450F24  +
test edi edi +
jz loc_44F970  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_450F0B  +
test edi edi +
jz loc_4507D0  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_450F03  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 3 +
mov edx esi +
and esi 7 +
add esi 3 +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 3 +
jmp loc_44FF02  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
and edx 0Fh +
mov [eax+48h] edx +
mov dword ptr [eax] 15h +
jmp loc_44F987  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_450F73  +
mov edx esi +
shr edx 8 +
and edx 1 +
mov [eax] edx +
test esi 200h +
jnz loc_451060  +
mov eax [esp+7Ch+var_58] +
xor ebx ebx +
xor esi esi +
mov dword ptr [eax] 2 +
jmp loc_44FC88  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 1 +
mov dword ptr [eax] 1Ch +
jmp loc_44FB50  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
mov edx [edx+18h] +
sub ecx eax +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
call sub_451A80  +
jmp loc_450255  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] 0 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 12h +
jmp loc_44FDEB  +
cmp dword ptr [eax] 1Dh +
jz loc_450343  +
cmp word ptr [eax+270h] 0 +
jnz loc_451174  +
mov edx [esp+7Ch+arg_0] +
mov dword ptr [edx+18h] offset aInvalidCodeMis +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov eax ebx +
mov ecx [esp+7Ch+var_48] +
mov ebx edi +
mov edx [esp+7Ch+var_4C] +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax] edi +
mov [eax+4] ebx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
mov eax 2 +
jmp loc_44FB30  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451FB0  +
mov [esi+18h] eax +
jmp loc_450F7F  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_450F9C  +
mov [esp+7Ch+var_74] 0 +
xor ebx ebx +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_451FB0  +
mov esi [esp+7Ch+var_58] +
lea edx [esp+7Ch+var_10] +
mov byte ptr [esp+7Ch+var_10] 1Fh +
mov byte ptr [esp+7Ch+var_10+1] 8Bh +
mov [esi+18h] eax +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_451FB0  +
mov dword ptr [esi] 1 +
mov [esi+18h] eax +
mov eax 1 +
xor esi esi +
jmp loc_44F587  +
mov eax [esp+7Ch+var_58] +
shr esi 4 +
mov ecx esi +
and ecx 0Fh +
add ecx 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_4511FA  +
mov eax [esp+7Ch+var_58] +
mov [eax+24h] ecx +
mov ebx [esp+7Ch+var_58] +
mov eax 1 +
shl eax cl +
mov [ebx+14h] eax +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_451A80  +
mov edx [esp+7Ch+arg_0] +
mov [ebx+18h] eax +
mov [edx+30h] eax +
mov eax esi +
and eax 200h +
cmp eax 1 +
sbb eax eax +
xor esi esi +
and eax 2 +
add eax 9 +
mov [ebx] eax +
xor ebx ebx +
jmp loc_44F57E  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_2C] +
lea edx [eax+2F0h] +
mov [eax+6Ch] ecx +
mov [eax+4Ch] ecx +
lea ecx [eax+6Ch] +
add eax 54h +
mov dword ptr [eax] 9 +
mov [esp+7Ch+var_3C] edx +
mov [esp+7Ch+var_68] edx +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_40] ecx +
mov ecx [esp+7Ch+var_28] +
mov [esp+7Ch+var_6C] eax +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_74] ecx +
call sub_4522A0  +
mov ecx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_3C] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_451266  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidLiter_0 +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
cmp ecx eax +
jbe loc_451120  +
mov eax [esp+7Ch+arg_0] +
sub ebx 4 +
mov dword ptr [eax+18h] offset aInvalidWindowS +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_44FB50  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
shr ebp 3 +
sub esi 3 +
jmp loc_44FB50  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBitLeng +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
jmp loc_450343  +
mov [esp+7Ch+var_40] ebx +
mov ebx [esp+7Ch+var_58] +
mov eax [ebx+6Ch] +
mov dword ptr [ebx+58h] 6 +
mov [ebx+50h] eax +
mov eax [ebx+64h] +
mov [esp+7Ch+var_68] edx +
mov edx ebx +
add edx 58h +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_74] eax +
mov eax [ebx+60h] +
mov [esp+7Ch+var_7C] 2 +
lea eax [ebx+eax*2+70h] +
mov [esp+7Ch+var_78] eax +
call sub_4522A0  +
mov ebx [esp+7Ch+var_40] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_44F7D8  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_1 +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_44F587  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_451330  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_451330  +
mov edx [ebx+24h] +
test edx edx +
jz loc_451330  +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_451313  +
mov eax [ebx+28h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [ebx+24h] +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ecx +
call edx  +
xor eax eax +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_451328  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
test ebx ebx +
jz loc_4513F0  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_4513F0  +
mov eax [esi+8] +
test eax eax +
jnz loc_4513A8  +
cmp dword ptr [esi] 0Ah +
jz loc_4513AD  +
mov eax [esp+34h] +
add eax [esp+38h] +
mov edx [esp+38h] +
mov ebp [ebx+0Ch] +
mov edi [ebx+10h] +
mov [ebx+0Ch] eax +
mov eax ebx +
mov dword ptr [ebx+10h] 0 +
call sub_44F070  +
mov [ebx+10h] edi +
mov [ebx+0Ch] ebp +
test eax eax +
jnz loc_4513F7  +
mov dword ptr [esi+0Ch] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [esi] 0Ah +
jnz loc_4513F0  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_451A80  +
mov ecx [esp+38h] +
mov [esp+8] ecx +
mov ecx [esp+34h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_451A80  +
cmp [esi+18h] eax +
jz loc_45136A  +
mov eax 0FFFFFFFDh +
jmp loc_4513A0  +
***
mov eax 0FFFFFFFEh +
jmp loc_4513A0  +
***
mov dword ptr [esi] 1Eh +
mov eax 0FFFFFFFCh +
jmp loc_4513A0  +
***
mov eax [esp+4] +
mov edx [esp+8] +
test eax eax +
jz loc_451436  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_451436  +
test byte ptr [eax+8] 2 +
jz loc_451436  +
mov [eax+20h] edx +
xor eax eax +
mov dword ptr [edx+30h] 0 +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+28h] +
test ebx ebx +
jz loc_451538  +
mov edi [ebx+1Ch] +
test edi edi +
jz loc_451538  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_451512  +
cmp dword ptr [edi] 1Fh +
lea esi [edi+68h] +
jz loc_4514D5  +
mov edx [edi+3Ch] +
mov eax [edi+38h] +
mov dword ptr [edi] 1Fh +
mov ecx edx +
and edx 0FFFFFFF8h +
and ecx 7 +
shl eax cl +
cmp edx 7 +
mov [edi+38h] eax +
mov ecx edx +
mov [edi+3Ch] edx +
jbe loc_451530  +
sub ecx 8 +
lea edx [esp+10h] +
shr ecx 3 +
mov esi edx +
lea ebp [esp+ecx+11h] +
mov [esi] al +
add esi 1 +
shr eax 8 +
cmp esi ebp +
jnz loc_4514A8  +
add ecx 1 +
mov [edi+38h] eax +
mov dword ptr [edi+3Ch] 0 +
lea esi [edi+68h] +
mov dword ptr [edi+68h] 0 +
mov eax esi +
call sub_44EFE0  +
mov ecx [ebx+4] +
mov edx [ebx] +
mov eax esi +
call sub_44EFE0  +
sub [ebx+4] eax +
add [ebx] eax +
add eax [ebx+8] +
cmp dword ptr [edi+68h] 4 +
mov esi eax +
mov [ebx+8] eax +
jnz loc_451523  +
mov ebp [ebx+14h] +
mov [esp] ebx +
call sub_44F250  +
xor eax eax +
mov [ebx+8] esi +
mov [ebx+14h] ebp +
mov dword ptr [edi] 0Bh +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [edi+3Ch] 7 +
ja loc_451469  +
mov eax 0FFFFFFFBh +
jmp loc_45150A  +
***
add esp 14h +
mov eax 0FFFFFFFDh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor ecx ecx +
lea edx [esp+10h] +
jmp loc_4514C1  +
***
mov eax 0FFFFFFFEh +
jmp loc_45150A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
test ebx ebx +
jz loc_4517A0  +
test esi esi +
jz loc_4517A0  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_4517A0  +
mov eax [esi+20h] +
test eax eax +
jz loc_4517A0  +
mov edx [esi+24h] +
test edx edx +
jz loc_4517A0  +
mov edx [esi+28h] +
mov dword ptr [esp+8] 1BCCh +
mov dword ptr [esp+4] 1 +
mov [esp] edx +
call eax  +
test eax eax +
mov edx eax +
jz loc_4517AA  +
mov eax [ebp+34h] +
test eax eax +
jz loc_451765  +
mov edi [esi+20h] +
mov eax 1 +
mov dword ptr [esp+8] 1 +
mov ecx [ebp+24h] +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+4] eax +
mov eax [esi+28h] +
mov [esp] eax +
call edi  +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_4517B4  +
mov eax [esi] +
test dl 1 +
mov edi edx +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+4] eax +
mov eax [esi+8] +
mov [ebx+8] eax +
mov eax [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov eax [esi+14h] +
mov [ebx+14h] eax +
mov eax [esi+18h] +
mov [ebx+18h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [esi+20h] +
mov [ebx+20h] eax +
mov eax [esi+24h] +
mov [ebx+24h] eax +
mov eax [esi+28h] +
mov [ebx+28h] eax +
mov eax [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [esi+30h] +
mov [ebx+30h] eax +
mov eax [esi+34h] +
mov esi ebp +
mov [ebx+34h] eax +
mov eax 1BCCh +
jnz loc_451772  +
test edi 2 +
jnz loc_451788  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_451750  +
test al 1 +
jnz loc_451730  +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jnb loc_451700  +
mov eax [ebp+6Ch] +
mov edi [esp+18h] +
sub eax ecx +
sar eax 2 +
test edi edi +
lea eax [edx+eax*4+530h] +
mov [edx+6Ch] eax +
jz loc_4516E5  +
mov ecx [ebp+24h] +
mov eax 1 +
mov esi [ebp+34h] +
mov [esp] edi +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+8] eax +
mov [esp+4] esi +
call memcpy  +
mov edx [esp+1Ch] +
mov eax [esp+18h] +
mov [edx+34h] eax +
xor eax eax +
mov [ebx+1Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea esi [ebp+1BBCh] +
cmp eax esi +
ja loc_4516A6  +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+4Ch] eax +
mov eax [ebp+50h] +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+50h] eax +
jmp loc_4516A6  +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jb loc_4516A6  +
jmp loc_451700  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_451699  +
jmp loc_451730  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_451612  +
***
movzx eax byte ptr [ebp+0] +
lea edi [edx+1] +
lea esi [ebp+1] +
mov [edx] al +
mov eax 1BCBh +
jmp loc_451676  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_451682  +
***
mov eax 0FFFFFFFEh +
jmp loc_4516F1  +
***
mov eax 0FFFFFFFCh +
jmp loc_4516F1  +
***
mov ecx [esi+28h] +
mov eax [esi+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax 0FFFFFFFCh +
jmp loc_4516F1  +
***
mov eax [esp+4] +
test eax eax +
jz loc_4517F0  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4517F0  +
mov dword ptr [eax+1BC0h] 1 +
mov eax 0FFFFFFFDh +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
test eax eax +
jz loc_451844  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_451844  +
mov eax [edx+1BC4h] +
mov ecx [edx] +
shl eax 10h +
cmp ecx 0Fh +
jz loc_451830  +
xor ebx ebx +
cmp ecx 18h +
jz loc_451837  +
add eax ebx +
pop ebx  +
retn   +
***
mov ebx [edx+40h] +
add eax ebx +
jmp loc_451829  +
***
mov ebx [edx+1BC8h] +
sub ebx [edx+40h] +
add eax ebx +
jmp loc_451829  +
***
mov eax 0FFFF0000h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 50h +
mov eax [esp+50h+arg_8] +
lea ebx [esp+50h+var_38] +
mov esi [esp+50h+arg_4] +
mov [esp+50h+var_18] 0 +
mov [esp+50h+var_14] 0 +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+arg_C] +
mov [esp+50h+var_10] 0 +
mov [esp+50h+var_34] eax +
mov eax [esp+50h+arg_0] +
mov [esp+50h+var_2C] eax +
mov eax [esi] +
mov [esp+50h+var_44] 38h +
mov [esp+50h+var_48] offset a1_2_7_0 +
mov [esp+50h+var_50] ebx +
mov [esp+50h+var_28] eax +
mov eax [esp+50h+arg_10] +
mov [esp+50h+var_4C] eax +
call sub_455920  +
test eax eax +
jz loc_4518C0  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+50h+var_4C] 4 +
mov [esp+50h+var_50] ebx +
call sub_4543C0  +
cmp eax 1 +
mov edi eax +
jz loc_4518F0  +
mov [esp+50h+var_50] ebx +
call sub_455540  +
test edi edi +
mov eax 0FFFFFFFBh +
cmovnz eax edi +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+50h+var_24] +
mov [esi] eax +
mov [esp+50h+var_50] ebx +
call sub_455540  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_1C] 0FFFFFFFFh +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_451850  +
add esp 2Ch +
retn   +
***
mov edx [esp+arg_0] +
mov eax edx +
shr eax 0Ch +
lea ecx [edx+eax+0Dh] +
mov eax edx +
shr eax 0Eh +
add eax ecx +
shr edx 19h +
add eax edx +
retn   +
***
mov eax offset a1_2_7_1 +
retn   +
***
mov eax 55h +
retn   +
***
mov eax 2 +
sub eax [esp+4] +
mov eax ds:off_48DFC0[eax*4] +
retn   +
***
jmp loc_4519B0  +
mov eax [esp+0Ch] +
imul eax [esp+8] +
mov [esp+4] eax +
jmp malloc  +
***
mov eax [esp+8] +
mov [esp+4] eax +
jmp free  +
***
push ebp  +
mov ebp 80078071h +
push edi  +
push esi  +
mov esi eax +
mov eax ecx +
push ebx  +
mov ebx edx +
imul  ebp +
mov eax ecx +
sar eax 1Fh +
sub esp 4 +
add edx ecx +
sar edx 0Fh +
sub edx eax +
movzx eax bx +
imul edx edx +
shr ebx 10h +
mov [esp] eax +
sub ecx edx +
mov edx ecx +
movzx ecx si +
mov edi edx +
imul edi ecx +
shr esi 10h +
add ebx esi +
sub ebx edx +
mov eax edi +
mul  ebp +
shr edx 0Fh +
imul edx edx +
sub edi edx +
mov edx 0FFF0h +
add ebx edi +
add ecx [esp] +
lea eax [ebx+0FFF1h] +
jz loc_451A54  +
lea edx [ecx-1] +
cmp edx 0FFF0h +
jbe loc_451A54  +
lea edx [ecx-0FFF2h] +
sub ebx 0FFF1h +
cmp eax 1FFE2h +
cmovnb eax ebx +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovnb eax ecx +
add esp 4 +
shl eax 10h +
pop ebx  +
or eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 38h +
mov ebp [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov eax ebp +
movzx ebp bp +
shr eax 10h +
cmp [esp+38h+arg_8] 1 +
mov [esp+38h+var_C] eax +
jz loc_451C6B  +
test edi edi +
jz loc_451E29  +
cmp [esp+38h+arg_8] 0Fh +
ja loc_451B12  +
mov edx [esp+38h+arg_8] +
test edx edx +
jz loc_451ADA  +
mov edx [esp+38h+arg_8] +
mov eax [esp+38h+var_C] +
add edx edi +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_451AC7  +
mov [esp+38h+var_C] eax +
mov eax [esp+38h+var_C] +
cmp ebp 0FFF1h +
mov edx 80078071h +
lea ecx [ebp-0FFF1h] +
cmovb ecx ebp +
mul  edx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub eax edx +
shl eax 10h +
or ecx eax +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 15AFh +
jbe loc_451CAD  +
sub [esp+38h+arg_8] 15B0h +
lea eax [edi+15B0h] +
mov [esp+38h+var_8] eax +
mov eax edi +
movzx edi byte ptr [eax] +
add eax 10h +
lea ebx [ebp+edi+0] +
movzx edi byte ptr [eax-0Fh] +
mov [esp+38h+var_38] ebx +
add edi ebx +
mov ebx edi +
movzx edi byte ptr [eax-0Eh] +
mov [esp+38h+var_34] ebx +
mov esi edi +
movzx edi byte ptr [eax-0Dh] +
add esi ebx +
mov [esp+38h+var_30] esi +
mov ecx edi +
movzx edi byte ptr [eax-0Ch] +
add ecx esi +
mov [esp+38h+var_2C] ecx +
mov edx edi +
movzx edi byte ptr [eax-0Bh] +
add edx ecx +
mov [esp+38h+var_28] edx +
mov ebp edi +
movzx edi byte ptr [eax-0Ah] +
add ebp edx +
mov [esp+38h+var_24] ebp +
add edi ebp +
movzx ebp byte ptr [eax-1] +
mov ebx edi +
movzx edi byte ptr [eax-9] +
mov [esp+38h+var_20] ebx +
add edi ebx +
movzx ebx byte ptr [eax-4] +
mov esi edi +
movzx edi byte ptr [eax-8] +
mov [esp+38h+var_1C] esi +
mov ecx edi +
movzx edi byte ptr [eax-7] +
add ecx esi +
movzx esi byte ptr [eax-5] +
mov [esp+38h+var_18] ecx +
mov edx edi +
movzx edi byte ptr [eax-6] +
add edx ecx +
movzx ecx byte ptr [eax-3] +
mov [esp+38h+var_14] edx +
add edi edx +
movzx edx byte ptr [eax-2] +
add esi edi +
mov [esp+38h+var_10] edi +
mov edi [esp+38h+var_34] +
add ebx esi +
add edi [esp+38h+var_38] +
add ecx ebx +
add edi [esp+38h+var_30] +
add edx ecx +
add edi [esp+38h+var_2C] +
add ebp edx +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add edi [esp+38h+var_18] +
add edi [esp+38h+var_14] +
add edi [esp+38h+var_10] +
add edi esi +
add edi ebx +
add ecx edi +
add edx ecx +
add edx ebp +
add [esp+38h+var_C] edx +
cmp eax [esp+38h+var_8] +
jnz loc_451B34  +
mov edi eax +
mov eax 80078071h +
mul  ebp +
mov eax 80078071h +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
cmp [esp+38h+arg_8] 15AFh +
ja loc_451B20  +
mov eax [esp+38h+arg_8] +
test eax eax +
jnz loc_451CA2  +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi] +
add ebp eax +
cmp ebp 0FFF1h +
lea eax [ebp-0FFF1h] +
cmovnb ebp eax +
mov eax [esp+38h+var_C] +
add eax ebp +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovb ecx eax +
add esp 38h +
shl ecx 10h +
or ecx ebp +
pop ebx  +
mov eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 0Fh +
jbe loc_451E33  +
mov eax [esp+38h+arg_8] +
mov edx edi +
mov [esp+38h+arg_4] edi +
sub eax 10h +
mov [esp+38h+var_4] eax +
shr [esp+38h+var_4] 4 +
mov eax [esp+38h+var_4] +
shl eax 4 +
lea eax [edi+eax+10h] +
mov [esp+38h+var_8] eax +
movzx eax byte ptr [edx] +
add edx 10h +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-0Fh] +
mov [esp+38h+var_38] esi +
add eax esi +
mov edi eax +
movzx eax byte ptr [edx-0Eh] +
mov [esp+38h+var_34] edi +
add eax edi +
movzx edi byte ptr [edx-4] +
mov esi eax +
movzx eax byte ptr [edx-0Dh] +
mov [esp+38h+var_30] esi +
add eax esi +
mov ebx eax +
movzx eax byte ptr [edx-0Ch] +
mov [esp+38h+var_2C] ebx +
mov ecx eax +
movzx eax byte ptr [edx-0Bh] +
add ecx ebx +
movzx ebx byte ptr [edx-7] +
mov [esp+38h+var_28] ecx +
mov ebp eax +
movzx eax byte ptr [edx-0Ah] +
add ebp ecx +
movzx ecx byte ptr [edx-6] +
mov [esp+38h+var_24] ebp +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-9] +
mov [esp+38h+var_20] esi +
add eax esi +
movzx esi byte ptr [edx-8] +
mov [esp+38h+var_1C] eax +
add esi eax +
movzx eax byte ptr [edx-5] +
add ebx esi +
add ecx ebx +
add eax ecx +
lea ebp [eax+edi] +
movzx edi byte ptr [edx-3] +
mov [esp+38h+var_18] ebp +
add edi ebp +
mov ebp edi +
movzx edi byte ptr [edx-2] +
mov [esp+38h+var_14] ebp +
add edi ebp +
movzx ebp byte ptr [edx-1] +
mov [esp+38h+var_10] edi +
add ebp edi +
mov edi [esp+38h+var_34] +
add edi [esp+38h+var_38] +
add edi [esp+38h+var_30] +
add edi [esp+38h+var_2C] +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add esi edi +
add ebx esi +
add ecx ebx +
add eax ecx +
add eax [esp+38h+var_18] +
add eax [esp+38h+var_14] +
add eax [esp+38h+var_10] +
add eax ebp +
add [esp+38h+var_C] eax +
cmp edx [esp+38h+var_8] +
jnz loc_451CD2  +
mov esi [esp+38h+var_4] +
mov edi [esp+38h+arg_4] +
mov eax esi +
add eax 1 +
shl eax 4 +
add edi eax +
mov eax esi +
mov esi [esp+38h+arg_8] +
shl eax 4 +
neg eax  +
lea eax [esi+eax-11h] +
and esi 0Fh +
jz loc_451DF4  +
lea edx [edi+eax+1] +
mov eax [esp+38h+var_C] +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_451DE1  +
mov [esp+38h+var_C] eax +
mov ecx 80078071h +
mov eax ebp +
mul  ecx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  ecx +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
jmp loc_451C61  +
mov ecx 1 +
jmp loc_451B08  +
mov eax [esp+38h+arg_8] +
sub eax 1 +
jmp loc_451DD9  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_451E55  +
jmp loc_4519E0  +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_451E75  +
jmp loc_4519E0  +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov ecx [edx+edi*4] +
test ecx ecx +
jz loc_451EAD  +
mov ebx edx +
xor esi esi +
test cl 1 +
jz loc_451E97  +
xor esi [ebx] +
add ebx 4 +
shr ecx 1 +
jnz loc_451E90  +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_451E85  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor esi esi +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_451E85  +
jmp loc_451EA9  +
***
push ebp  +
mov ebp ecx +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 100h +
test ecx ecx +
jle loc_451F8D  +
mov edi edx +
mov edx 1 +
mov dword ptr [esp+80h] 0EDB88320h +
lea eax [esp+84h] +
lea ecx [esp+100h] +
mov [eax] edx +
add eax 4 +
add edx edx +
cmp eax ecx +
jnz loc_451EF6  +
lea edx [esp+80h] +
mov eax esp +
call sub_451E80  +
mov edx esp +
lea eax [esp+80h] +
call sub_451E80  +
lea esi [esi+0] +
lea edx [esp+80h] +
mov eax esp +
call sub_451E80  +
test ebp 1 +
jz loc_451F4E  +
test esi esi +
jz loc_451F4E  +
mov ebx esi +
mov eax esp +
xor esi esi +
test bl 1 +
jz loc_451F47  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_451F40  +
sar ebp 1 +
jz loc_451F89  +
mov edx esp +
lea eax [esp+80h] +
call sub_451E80  +
test ebp 1 +
jz loc_451F85  +
test esi esi +
jz loc_451F85  +
mov ebx esi +
xor esi esi +
lea eax [esp+80h] +
test bl 1 +
jz loc_451F7E  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_451F77  +
sar ebp 1 +
jnz loc_451F20  +
mov eax esi +
xor eax edi +
add esp 100h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax offset dword_48E000 +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov ebp [esp+4+arg_8] +
test edx edx +
jz loc_452253  +
mov eax [esp+4+arg_0] +
test ebp ebp +
not eax  +
jnz loc_451FF4  +
jmp loc_452249  +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_48E000[ecx*4] +
sub ebp 1 +
jz loc_452249  +
test dl 3 +
jnz loc_451FD6  +
cmp ebp 1Fh +
jbe loc_4521C4  +
lea edi [ebp-20h] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 5 +
mov ecx [esp+4+var_4] +
mov [esp+4+arg_4] edx +
shl ecx 5 +
lea edi [edx+ecx+20h] +
lea esi [esi+0] +
xor eax [ebx] +
mov edx eax +
movzx ecx al +
shr edx 10h +
movzx esi ah +
mov ecx ds:dword_48EC00[ecx*4] +
shr eax 18h +
movzx edx dl +
xor ecx ds:dword_48E000[eax*4] +
xor ecx [ebx+4] +
xor ecx ds:dword_48E800[esi*4] +
xor ecx ds:dword_48E400[edx*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_48EC00[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_48E000[ecx*4] +
xor esi [ebx+8] +
xor esi ds:dword_48E800[edx*4] +
xor esi ds:dword_48E400[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_48EC00[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_48E000[esi*4] +
xor ecx [ebx+0Ch] +
xor ecx ds:dword_48E800[edx*4] +
xor ecx ds:dword_48E400[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_48EC00[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_48E000[ecx*4] +
xor esi [ebx+10h] +
xor esi ds:dword_48E800[edx*4] +
xor esi ds:dword_48E400[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_48EC00[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_48E000[esi*4] +
xor ecx [ebx+14h] +
xor ecx ds:dword_48E800[edx*4] +
xor ecx ds:dword_48E400[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_48EC00[esi*4] +
movzx eax al +
shr ecx 18h +
xor esi ds:dword_48E000[ecx*4] +
add ebx 20h +
xor esi [ebx-8] +
xor esi ds:dword_48E800[edx*4] +
xor esi ds:dword_48E400[eax*4] +
mov eax esi +
mov edx esi +
movzx ecx ah +
movzx edx dl +
shr eax 10h +
mov edx ds:dword_48EC00[edx*4] +
shr esi 18h +
movzx eax al +
xor edx ds:dword_48E000[esi*4] +
xor edx [ebx-4] +
xor edx ds:dword_48E800[ecx*4] +
xor edx ds:dword_48E400[eax*4] +
mov ecx edx +
mov eax edx +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_48E000[eax*4] +
movzx edx dh +
xor eax ds:dword_48EC00[esi*4] +
xor eax ds:dword_48E800[edx*4] +
xor eax ds:dword_48E400[ecx*4] +
cmp ebx edi +
jnz loc_452020  +
mov ecx [esp+4+var_4] +
and ebp 1Fh +
mov edx [esp+4+arg_4] +
add ecx 1 +
shl ecx 5 +
add edx ecx +
cmp ebp 3 +
jbe loc_452226  +
lea edi [ebp-4] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 2 +
mov edi [esp+4+var_4] +
mov [esp+4+arg_4] edx +
lea edi [edx+edi*4+4] +
xor eax [ebx] +
add ebx 4 +
mov ecx eax +
mov edx eax +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_48E000[eax*4] +
movzx edx dh +
xor eax ds:dword_48EC00[esi*4] +
xor eax ds:dword_48E800[edx*4] +
xor eax ds:dword_48E400[ecx*4] +
cmp ebx edi +
jnz loc_4521E0  +
mov edx [esp+4+arg_4] +
and ebp 3 +
mov edi [esp+4+var_4] +
lea edx [edx+edi*4+4] +
test ebp ebp +
jz loc_452249  +
lea ebx [edx+ebp] +
lea esi [esi+0] +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_48E000[ecx*4] +
cmp edx ebx +
jnz loc_452230  +
add esp 4 +
not eax  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_451EC0  +
***
jmp loc_452280  +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_451EC0  +
***
push esi  +
push ebx  +
sub esp 84h +
mov edi [esp+84h+arg_8] +
lea edx [esp+84h+var_40] +
lea eax [esp+84h+var_20] +
lea esi [esi+0] +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
cmp edx eax +
jnz loc_4522C0  +
mov edx [esp+84h+arg_4] +
test edi edi +
lea ebx [edx+edi*2] +
jz loc_4522F0  +
nop   +
lea esi [esi+0] +
movzx ecx word ptr [edx] +
add edx 2 +
add word ptr [esp+ecx*2+84h+var_40] 1 +
cmp edx ebx +
jnz loc_4522E0  +
mov esi [esp+84h+arg_10] +
mov ecx 0Fh +
mov edx [esi] +
nop   +
cmp word ptr [esp+ecx*2+84h+var_40] 0 +
jnz loc_45235D  +
sub ecx 1 +
jnz loc_452300  +
mov eax [esp+84h+arg_C] +
xor ebx ebx +
xor esi esi +
mov edi [esp+84h+arg_C] +
mov eax [eax] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] bx +
mov eax [edi] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] si +
mov eax [esp+84h+arg_10] +
mov dword ptr [eax] 1 +
xor eax eax +
add esp 84h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx edx +
cmovbe edx ecx +
test ecx ecx +
mov [esp+84h+var_64] ecx +
mov [esp+84h+var_84] edx +
jz loc_45230D  +
cmp ecx 1 +
movzx esi word ptr [esp+84h+var_40+2] +
mov ebp 1 +
jbe loc_452396  +
test si si +
jnz loc_452396  +
mov edx [esp+84h+var_64] +
jmp loc_45238F  +
cmp word ptr [esp+ebp*2+84h+var_40] 0 +
jnz loc_452396  +
add ebp 1 +
cmp ebp edx +
jnz loc_452387  +
lea edx [esp+84h+var_3C] +
movzx ecx si +
mov ebx 1 +
jmp loc_4523AA  +
movzx ecx word ptr [edx] +
add edx 2 +
add ebx ebx +
sub ebx ecx +
js loc_45271E  +
cmp eax edx +
jnz loc_4523A4  +
test ebx ebx +
jz loc_4523D6  +
cmp [esp+84h+var_64] 1 +
jnz loc_45271E  +
mov ecx [esp+84h+arg_0] +
test ecx ecx +
jz loc_45271E  +
xor edx edx +
xor ecx ecx +
mov word ptr [esp+84h+var_20+2] dx +
mov edx 1 +
jmp loc_4523EB  +
movzx esi word ptr [esp+edx*2+84h+var_40] +
add edx 1 +
add ecx esi +
cmp edx 0Fh +
mov [eax+edx*2] cx +
jnz loc_4523E6  +
xor eax eax +
test edi edi +
jz loc_452437  +
mov [esp+84h+var_80] ebp +
mov esi [esp+84h+arg_4] +
mov ebp [esp+84h+arg_14] +
movzx ecx word ptr [esi+eax*2] +
test cx cx +
jz loc_45242C  +
movzx edx word ptr [esp+ecx*2+84h+var_20] +
lea ebx [edx+1] +
mov word ptr [esp+ecx*2+84h+var_20] bx +
mov [ebp+edx*2+0] ax +
add eax 1 +
cmp eax edi +
jnz loc_452411  +
mov ebp [esp+84h+var_80] +
mov ebx [esp+84h+arg_0] +
test ebx ebx +
jz loc_452779  +
cmp [esp+84h+arg_0] 1 +
mov edi 0FFFFFFFFh +
mov eax 100h +
mov ebx offset unk_490000 +
cmovnz eax edi +
mov edi offset unk_490040 +
mov [esp+84h+var_58] eax +
mov eax offset unk_48FE7E +
cmovnz eax ebx +
mov [esp+84h+var_48] eax +
mov eax offset unk_48FEBE +
cmovnz eax edi +
mov [esp+84h+var_4C] eax +
mov eax [esp+84h+var_84] +
cmp ebp eax +
cmovnb eax ebp +
mov edi eax +
mov [esp+84h+var_68] eax +
mov eax [esp+84h+arg_C] +
mov ecx edi +
mov eax [eax] +
mov [esp+84h+var_6C] eax +
mov eax 1 +
shl eax cl +
cmp [esp+84h+arg_0] 1 +
setz [esp+84h+var_42]  +
cmp eax 353h +
ja loc_45276C  +
cmp [esp+84h+arg_0] 2 +
setz [esp+84h+var_41]  +
cmp eax 24Fh +
ja loc_45272E  +
mov ebx [esp+84h+arg_14] +
mov edi [esp+84h+var_68] +
mov [esp+84h+var_5C] eax +
sub eax 1 +
mov [esp+84h+var_84] ebp +
mov [esp+84h+var_70] ebx +
mov [esp+84h+var_54] 0FFFFFFFFh +
mov ebp edi +
mov [esp+84h+var_80] 0 +
mov [esp+84h+var_7C] 0 +
mov [esp+84h+var_50] eax +
lea esi [esi+0] +
mov eax [esp+84h+var_70] +
movzx edx byte ptr [esp+84h+var_84] +
sub dl byte ptr [esp+84h+var_7C] +
mov byte ptr [esp+84h+var_74] 0 +
movzx esi word ptr [eax] +
movzx eax si +
cmp [esp+84h+var_58] eax +
jg loc_452547  +
jge loc_452760  +
mov edi [esp+84h+var_48] +
movzx ebx byte ptr [edi+eax*2] +
mov byte ptr [esp+84h+var_74] bl +
mov ebx [esp+84h+var_4C] +
movzx esi word ptr [ebx+eax*2] +
mov ecx [esp+84h+var_84] +
mov edi 1 +
mov eax 1 +
sub ecx [esp+84h+var_7C] +
shl edi cl +
mov ecx ebp +
shl eax cl +
movzx ecx byte ptr [esp+84h+var_7C] +
mov ebx eax +
mov [esp+84h+var_60] eax +
lea eax ds:0[edi*4] +
mov [esp+84h+var_78] eax +
mov eax [esp+84h+var_80] +
neg [esp+84h+var_78]  +
shr eax cl +
mov ecx ebx +
add eax ebx +
mov ebx [esp+84h+var_6C] +
sub eax edi +
lea eax [ebx+eax*4+1] +
movzx ebx byte ptr [esp+84h+var_74] +
mov [esp+84h+var_74] ebp +
mov ebp [esp+84h+var_78] +
lea esi [esi+0] +
mov [eax-1] bl +
mov [eax] dl +
mov [eax+1] si +
add eax ebp +
sub ecx edi +
jnz loc_4525A0  +
mov eax [esp+84h+var_84] +
mov ebp [esp+84h+var_74] +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+84h+var_80] +
test ecx eax +
jz loc_4525D6  +
lea esi [esi+0] +
shr ecx 1 +
test ecx eax +
jnz loc_4525D0  +
test ecx ecx +
jz loc_452750  +
lea eax [ecx-1] +
and eax [esp+84h+var_80] +
add eax ecx +
mov [esp+84h+var_80] eax +
mov esi [esp+84h+var_84] +
movzx eax word ptr [esp+esi*2+84h+var_40] +
mov word ptr [esp+84h+var_78] ax +
sub eax 1 +
test ax ax +
mov word ptr [esp+esi*2+84h+var_40] ax +
jnz loc_452627  +
mov eax [esp+84h+var_64] +
cmp esi eax +
jz loc_452795  +
mov eax [esp+84h+var_70] +
mov ebx [esp+84h+arg_4] +
movzx eax word ptr [eax+2] +
movzx eax word ptr [ebx+eax*2] +
mov [esp+84h+var_84] eax +
mov eax [esp+84h+var_84] +
cmp [esp+84h+var_68] eax +
jnb loc_452714  +
mov ebx [esp+84h+var_80] +
and ebx [esp+84h+var_50] +
cmp ebx [esp+84h+var_54] +
jz loc_452714  +
mov edi [esp+84h+var_6C] +
mov edx 1 +
mov esi [esp+84h+var_60] +
mov eax [esp+84h+var_7C] +
lea edi [edi+esi*4] +
mov [esp+84h+var_6C] edi +
mov edi [esp+84h+var_84] +
test eax eax +
cmovz eax [esp+84h+var_68] +
mov ebp edi +
mov esi eax +
sub ebp eax +
mov ecx ebp +
shl edx cl +
mov ecx [esp+84h+var_64] +
mov [esp+84h+var_7C] eax +
cmp edi ecx +
jnb loc_4526A9  +
movzx eax word ptr [esp+edi*2+84h+var_40] +
sub edx eax +
test edx edx +
jle loc_4526A9  +
lea ecx [esp+esi*2+84h+var_40] +
mov edi [esp+84h+var_64] +
jmp loc_45269D  +
movzx eax word ptr [ecx+ebp*2] +
sub edx eax +
test edx edx +
jle loc_4526A9  +
add ebp 1 +
add edx edx +
lea eax [esi+ebp] +
cmp eax edi +
jb loc_452693  +
mov eax 1 +
mov ecx ebp +
shl eax cl +
add [esp+84h+var_5C] eax +
cmp [esp+84h+var_5C] 353h +
ja loc_4527D8  +
cmp [esp+84h+var_5C] 24Fh +
ja loc_4527E8  +
mov eax [esp+84h+arg_C] +
mov ecx ebp +
lea edx ds:0[ebx*4] +
mov [esp+84h+var_54] ebx +
mov eax [eax] +
mov [eax+ebx*4] cl +
mov eax [esp+84h+arg_C] +
movzx ecx byte ptr [esp+84h+var_68] +
mov eax [eax] +
mov [eax+edx+1] cl +
mov eax [esp+84h+arg_C] +
mov ecx [eax] +
mov eax [esp+84h+var_6C] +
sub eax ecx +
sar eax 2 +
mov [ecx+edx+2] ax +
add [esp+84h+var_70] 2 +
jmp loc_452510  +
add esp 84h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+84h+var_41] 0 +
jz loc_4524D5  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+84h+var_80] 0 +
jmp loc_4525EB  +
xor esi esi +
mov byte ptr [esp+84h+var_74] 60h +
jmp loc_452547  +
cmp [esp+84h+var_42] 0 +
jz loc_4524BD  +
jmp loc_452739  +
mov eax [esp+84h+arg_14] +
mov [esp+84h+var_58] 13h +
mov [esp+84h+var_48] eax +
mov [esp+84h+var_4C] eax +
jmp loc_452481  +
mov ecx [esp+84h+var_80] +
test ecx ecx +
jz loc_4527B4  +
mov eax [esp+84h+var_6C] +
mov ebx [esp+84h+var_80] +
lea eax [eax+ebx*4] +
mov [eax+1] dl +
xor edx edx +
mov byte ptr [eax] 40h +
mov [eax+2] dx +
mov eax [esp+84h+var_5C] +
mov esi [esp+84h+arg_C] +
mov ebx [esp+84h+var_68] +
shl eax 2 +
add [esi] eax +
mov eax [esp+84h+arg_10] +
mov [eax] ebx +
xor eax eax +
jmp loc_452352  +
cmp [esp+84h+var_42] 0 +
jz loc_4526C4  +
jmp loc_452739  +
cmp [esp+84h+var_41] 0 +
jz loc_4526D2  +
jmp loc_452739  +
***
push esi  +
push ebx  +
sub esp 44h +
mov eax [esp+44h+arg_0] +
mov eax [eax+1Ch] +
mov esi eax +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
sub eax 1 +
mov edi eax +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+4] +
lea eax [edi+eax-5] +
mov [esp+44h+var_2C] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
lea edi [eax-1] +
mov eax [esp+44h+arg_0] +
mov eax [eax+10h] +
mov edx eax +
sub edx [esp+44h+arg_4] +
lea eax [edi+eax-101h] +
mov [esp+44h+var_34] eax +
mov eax esi +
lea ecx [edi+edx] +
mov edx 1 +
mov [esp+44h+var_14] ecx +
mov ecx [esi+28h] +
mov esi [esi+2Ch] +
mov [esp+44h+var_20] ecx +
mov [esp+44h+var_C] esi +
mov esi [eax+30h] +
mov [esp+44h+var_28] esi +
mov esi [eax+34h] +
mov [esp+44h+var_1C] esi +
mov esi eax +
mov eax [eax+38h] +
mov ebx [esi+4Ch] +
mov ebp [esi+3Ch] +
mov [esp+44h+var_40] ebx +
mov ebx [esi+50h] +
mov [esp+44h+var_24] ebx +
mov ecx [esi+54h] +
mov ebx edx +
shl ebx cl +
mov ecx [esi+58h] +
mov esi [esp+44h+var_1C] +
lea ebx [ebx-1] +
mov [esp+44h+var_30] ebx +
shl edx cl +
lea ebx [edx-1] +
mov [esp+44h+var_18] ebx +
lea ebx [esi-1] +
mov esi [esp+44h+var_28] +
add esi [esp+44h+var_20] +
mov [esp+44h+var_8] ebx +
mov [esp+44h+var_4] esi +
cmp ebp 0Eh +
ja loc_4528E9  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
lea esi [esi+2] +
movzx edx byte ptr [esi] +
mov [esp+44h+var_44] esi +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
add edx ebx +
add eax edx +
mov edx [esp+44h+var_30] +
mov esi [esp+44h+var_40] +
and edx eax +
lea ebx [esi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jz loc_452969  +
test dl 10h +
jnz loc_4529E4  +
test dl 40h +
jnz loc_452BB5  +
mov [esp+44h+var_3C] edi +
mov edi [esp+44h+var_40] +
jmp loc_45293A  +
test dl 10h +
jnz loc_4529E0  +
test dl 40h +
jnz loc_452BB1  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jnz loc_452928  +
mov edi [esp+44h+var_3C] +
mov [edi+1] bl +
add edi 1 +
cmp edi [esp+44h+var_34] +
jnb loc_452982  +
mov ecx [esp+44h+var_2C] +
cmp [esp+44h+var_44] ecx +
jb loc_4528C4  +
mov edx [esp+44h+var_44] +
mov ecx ebp +
mov ebx 1 +
shr ecx 3 +
mov esi [esp+44h+arg_0] +
sub edx ecx +
shl ecx 3 +
sub ebp ecx +
mov ecx ebp +
shl ebx cl +
sub ebx 1 +
and ebx eax +
lea eax [edx+1] +
mov [esi] eax +
lea eax [edi+1] +
mov [esi+0Ch] eax +
mov eax [esp+44h+var_2C] +
sub eax edx +
add eax 5 +
mov [esi+4] eax +
mov eax [esp+44h+var_34] +
sub eax edi +
add eax 101h +
mov [esi+10h] eax +
mov eax [esp+44h+var_38] +
mov [eax+38h] ebx +
mov [eax+3Ch] ebp +
add esp 44h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+44h+var_3C] +
and edx 0Fh +
movzx ecx bx +
movzx ebx dl +
test ebx ebx +
mov [esp+44h+var_3C] ecx +
jz loc_452A28  +
cmp ebx ebp +
jbe loc_452A12  +
mov ecx [esp+44h+var_44] +
movzx esi byte ptr [ecx+1] +
mov ecx ebp +
add ebp 8 +
shl esi cl +
mov ecx [esp+44h+var_44] +
add eax esi +
lea esi [ecx+1] +
mov [esp+44h+var_44] esi +
mov ecx edx +
mov esi 1 +
shl esi cl +
sub ebp ebx +
sub esi 1 +
and esi eax +
add [esp+44h+var_3C] esi +
shr eax cl +
cmp ebp 0Eh +
jbe loc_452BD0  +
mov edx [esp+44h+var_18] +
mov ecx [esp+44h+var_24] +
and edx eax +
lea ebx [ecx+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jnz loc_452AA1  +
test dl 40h +
jnz loc_452C16  +
mov [esp+44h+var_10] edi +
mov edi [esp+44h+var_24] +
jmp loc_452A71  +
test dl 40h +
jnz loc_452C12  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jz loc_452A68  +
mov edi [esp+44h+var_10] +
movzx ecx bx +
mov ebx edx +
and ebx 0Fh +
movzx esi bl +
cmp esi ebp +
mov [esp+44h+var_10] ecx +
jbe loc_452AD2  +
mov ecx [esp+44h+var_44] +
movzx edx byte ptr [ecx+1] +
mov ecx ebp +
shl edx cl +
lea ecx [ebp+8] +
add eax edx +
cmp esi ecx +
ja loc_452D11  +
add [esp+44h+var_44] 1 +
mov ebp ecx +
mov ecx ebx +
mov edx 1 +
shl edx cl +
sub ebp esi +
sub edx 1 +
and edx eax +
add edx [esp+44h+var_10] +
shr eax cl +
mov ecx edi +
sub ecx [esp+44h+var_14] +
mov [esp+44h+var_10] edx +
cmp [esp+44h+var_10] ecx +
mov edx ecx +
jbe loc_452C30  +
mov ecx [esp+44h+var_10] +
sub ecx edx +
cmp [esp+44h+var_C] ecx +
jnb loc_452B1C  +
mov esi [esp+44h+var_38] +
mov esi [esi+1BC0h] +
test esi esi +
jnz loc_452D75  +
mov ebx [esp+44h+var_28] +
test ebx ebx +
jnz loc_452C95  +
mov edx [esp+44h+var_20] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_452B55  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_452B40  +
mov edx edi +
sub edx [esp+44h+var_10] +
cmp [esp+44h+var_3C] 2 +
mov ecx [esp+44h+var_3C] +
jbe loc_452B85  +
movzx ebx byte ptr [edx+1] +
add edx 3 +
sub ecx 3 +
add edi 3 +
mov [edi-2] bl +
movzx ebx byte ptr [edx-1] +
mov [edi-1] bl +
movzx ebx byte ptr [edx] +
cmp ecx 2 +
mov [edi] bl +
ja loc_452B60  +
mov [esp+44h+var_3C] ecx +
mov ecx [esp+44h+var_3C] +
test ecx ecx +
jz loc_45296F  +
movzx ecx byte ptr [edx+1] +
cmp [esp+44h+var_3C] 2 +
mov [edi+1] cl +
jnz loc_452D64  +
movzx edx byte ptr [edx+2] +
add edi 2 +
mov [edi] dl +
jmp loc_45296F  +
mov edi [esp+44h+var_3C] +
and edx 20h +
jz loc_452BF8  +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 0Bh +
jmp loc_452982  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
movzx edx byte ptr [esi+2] +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
mov ecx esi +
add edx ebx +
add ecx 2 +
add eax edx +
mov [esp+44h+var_44] ecx +
jmp loc_452A31  +
mov ecx [esp+44h+arg_0] +
mov esi [esp+44h+var_38] +
mov dword ptr [ecx+18h] offset aInvalidLiter_1 +
mov dword ptr [esi] 1Dh +
jmp loc_452982  +
mov edi [esp+44h+var_10] +
mov ecx [esp+44h+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidDista_2 +
mov ecx [esp+44h+var_38] +
mov dword ptr [ecx] 1Dh +
jmp loc_452982  +
mov edx edi +
mov ebx [esp+44h+var_3C] +
sub edx [esp+44h+var_10] +
mov [esp+44h+var_10] eax +
jmp loc_452C44  +
mov edi ecx +
mov edx esi +
movzx ecx byte ptr [edx+1] +
sub ebx 3 +
cmp ebx 2 +
lea esi [edx+3] +
mov [edi+1] cl +
movzx ecx byte ptr [edx+2] +
mov [edi+2] cl +
movzx eax byte ptr [edx+3] +
lea ecx [edi+3] +
mov [edi+3] al +
ja loc_452C40  +
test ebx ebx +
mov eax [esp+44h+var_10] +
mov [esp+44h+var_3C] ebx +
jz loc_452D2D  +
movzx ecx byte ptr [edx+4] +
cmp ebx 2 +
mov [edi+4] cl +
jnz loc_452D6C  +
movzx edx byte ptr [edx+5] +
add edi 5 +
mov [edi] dl +
jmp loc_45296F  +
cmp [esp+44h+var_28] ecx +
jnb loc_452D34  +
mov edx [esp+44h+var_4] +
sub edx ecx +
sub ecx [esp+44h+var_28] +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_452B55  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_452CC0  +
mov esi [esp+44h+var_3C] +
cmp [esp+44h+var_28] esi +
mov edx [esp+44h+var_8] +
jnb loc_452B55  +
mov edi [esp+44h+var_28] +
xor edx edx +
sub [esp+44h+var_3C] edi +
mov esi edi +
mov edi [esp+44h+var_1C] +
movzx ebx byte ptr [edi+edx] +
mov [ecx+edx+1] bl +
add edx 1 +
cmp edx esi +
jnz loc_452CF1  +
mov edi [esp+44h+var_28] +
add edi ecx +
mov edx edi +
sub edx [esp+44h+var_10] +
jmp loc_452B55  +
mov edx [esp+44h+var_44] +
add ebp 10h +
movzx edx byte ptr [edx+2] +
shl edx cl +
add eax edx +
mov edx [esp+44h+var_44] +
lea ecx [edx+2] +
mov [esp+44h+var_44] ecx +
jmp loc_452AD2  +
mov edi ecx +
jmp loc_45296F  +
mov edx [esp+44h+var_28] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_452B55  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_452D50  +
jmp loc_452B4F  +
add edi 1 +
jmp loc_45296F  +
add edi 4 +
nop   +
jmp loc_45296F  +
mov esi [esp+44h+arg_0] +
mov dword ptr [esi+18h] offset aInvalidDista_3 +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 1Dh +
jmp loc_452982  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 28h +
mov ebx [eax+6Ch] +
mov [esp+2Ch+var_2C] edx +
mov edx [esi+90h] +
mov esi [esi+2Ch] +
mov ebp [eax+38h] +
mov [esp+2Ch+var_10] eax +
mov edi [eax+7Ch] +
mov eax [eax+78h] +
mov [esp+2Ch+var_14] edx +
lea edx [esi-106h] +
lea ecx [ebp+ebx+0] +
cmp ebx edx +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_28] 0 +
mov ecx eax +
jbe loc_452DE3  +
lea edx [ebx+106h] +
mov [esp+2Ch+var_28] edx +
sub [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+var_10] +
lea ebx [ebp+ebx+102h] +
mov [esp+2Ch+var_8] ebx +
mov edx [esi+40h] +
mov [esp+2Ch+var_24] edx +
mov edx [esi+34h] +
mov [esp+2Ch+var_20] edx +
mov edx [esp+2Ch+var_18] +
movzx ebx byte ptr [edx+eax-1] +
mov [esp+2Ch+var_1A] bl +
movzx ebx byte ptr [edx+eax] +
mov edx [esp+2Ch+var_2C] +
mov [esp+2Ch+var_1C] bl +
mov ebx edi +
shr ebx 2 +
cmp eax [esi+8Ch] +
mov eax [esi+74h] +
cmovnb edi ebx +
mov ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_C] eax +
cmp ebx eax +
cmova ebx eax +
mov [esp+2Ch+var_14] ebx +
jmp loc_452E5F  +
mov eax [esp+2Ch+var_24] +
and edx [esp+2Ch+var_20] +
movzx edx word ptr [eax+edx*2] +
cmp [esp+2Ch+var_28] edx +
jnb loc_452F80  +
sub edi 1 +
jz loc_452F80  +
lea eax [ebp+edx+0] +
mov esi ecx +
movzx ebx byte ptr [eax+ecx] +
mov [esp+2Ch+var_2C] eax +
movzx eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_1B] bl +
cmp bl al +
jnz loc_452E40  +
mov eax [esp+2Ch+var_2C] +
movzx ebx byte ptr [eax+ecx-1] +
cmp bl [esp+2Ch+var_1A] +
mov [esp+2Ch+var_19] bl +
jnz loc_452E40  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx] +
cmp [eax] bl +
jnz loc_452E40  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx+1] +
cmp [eax+1] bl +
jnz loc_452E40  +
mov esi [esp+2Ch+var_18] +
add eax 2 +
movzx ebx [esp+2Ch+var_1B] +
mov [esp+2Ch+var_2C] edx +
add esi 2 +
jmp loc_452F20  +
movzx edx byte ptr [eax+2] +
cmp [esi+2] dl +
jnz loc_452FFE  +
movzx edx byte ptr [eax+3] +
cmp [esi+3] dl +
jnz loc_452FEF  +
movzx edx byte ptr [eax+4] +
cmp [esi+4] dl +
jnz loc_452FE0  +
movzx edx byte ptr [eax+5] +
cmp [esi+5] dl +
jnz loc_452FD1  +
movzx edx byte ptr [eax+6] +
cmp [esi+6] dl +
jnz loc_452FC2  +
movzx edx byte ptr [eax+7] +
cmp [esi+7] dl +
jnz loc_452FB3  +
add eax 8 +
add esi 8 +
movzx edx byte ptr [eax] +
cmp [esi] dl +
jnz loc_452FAA  +
cmp [esp+2Ch+var_8] esi +
jbe loc_452FAA  +
movzx edx byte ptr [eax+1] +
cmp [esi+1] dl +
jz loc_452EB7  +
mov edx [esp+2Ch+var_2C] +
add esi 1 +
mov [esp+2Ch+var_1B] bl +
mov eax [esp+2Ch+var_8] +
sub esi eax +
sub eax 102h +
add esi 102h +
cmp ecx esi +
mov [esp+2Ch+var_18] eax +
jge loc_452F91  +
mov eax [esp+2Ch+var_10] +
cmp [esp+2Ch+var_14] esi +
mov [eax+70h] edx +
jle loc_452F80  +
mov eax [esp+2Ch+var_18] +
mov ecx esi +
movzx eax byte ptr [eax+esi-1] +
mov [esp+2Ch+var_1A] al +
mov eax [esp+2Ch+var_8] +
movzx eax byte ptr [eax+esi-102h] +
mov [esp+2Ch+var_1C] al +
jmp loc_452E40  +
mov eax [esp+2Ch+var_C] +
cmp esi eax +
cmovbe eax esi +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax [esp+2Ch+var_1B] +
mov esi ecx +
mov [esp+2Ch+var_1C] al +
movzx eax [esp+2Ch+var_19] +
mov [esp+2Ch+var_1A] al +
jmp loc_452E40  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
jmp loc_452F33  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 7 +
jmp loc_452F33  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 6 +
jmp loc_452F33  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 5 +
jmp loc_452F33  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 4 +
jmp loc_452F33  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 3 +
jmp loc_452F33  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 2 +
jmp loc_452F33  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edi [ebp+74h] +
lea ecx [eax+eax] +
mov edx eax +
mov [esp+48h+var_20] eax +
sub eax 106h +
mov [esp+48h+var_1C] ecx +
mov [esp+48h+var_24] eax +
mov ebx [ebp+3Ch] +
mov eax [ebp+6Ch] +
add edx [esp+48h+var_24] +
sub ebx edi +
sub ebx eax +
cmp eax edx +
jnb loc_453190  +
mov esi [ebp+0] +
mov edi [esi+4] +
test edi edi +
jz loc_453220  +
cmp ebx edi +
mov edx [ebp+38h] +
mov ecx [ebp+6Ch] +
mov eax [ebp+74h] +
jnb loc_453145  +
test ebx ebx +
jnz loc_4532E4  +
xor edi edi +
mov esi [ebp+16B4h] +
add edi eax +
mov [ebp+74h] edi +
lea eax [edi+esi] +
cmp eax 2 +
jbe loc_453123  +
mov ecx [ebp+58h] +
mov edx [ebp+6Ch] +
mov eax [ebp+38h] +
mov [esp+48h+var_34] ecx +
mov ecx [ebp+54h] +
sub edx esi +
movzx ebx byte ptr [eax+edx] +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_28] ecx +
movzx ecx byte ptr [esp+48h+var_34] +
mov [ebp+48h] ebx +
movzx eax byte ptr [eax+edx+1] +
shl ebx cl +
xor eax ebx +
and eax [esp+48h+var_30] +
mov [esp+48h+var_30] edi +
mov [ebp+48h] eax +
jmp loc_45311B  +
mov eax [esp+48h+var_2C] +
sub esi 1 +
mov ebx [ebp+48h] +
movzx ecx byte ptr [esp+48h+var_34] +
movzx eax byte ptr [eax+edx+2] +
shl ebx cl +
mov ecx [ebp+40h] +
xor eax ebx +
mov ebx [ebp+44h] +
and eax [esp+48h+var_28] +
mov [ebp+48h] eax +
lea eax [ebx+eax*2] +
mov ebx [ebp+34h] +
movzx edi word ptr [eax] +
and ebx edx +
mov [ecx+ebx*2] di +
mov [eax] dx +
mov eax [esp+48h+var_30] +
add edx 1 +
mov [ebp+16B4h] esi +
add eax esi +
cmp eax 2 +
jbe loc_45311F  +
test esi esi +
jnz loc_4530D0  +
mov edi [esp+48h+var_30] +
cmp edi 105h +
ja loc_453220  +
mov eax [ebp+0] +
mov eax [eax+4] +
test eax eax +
jz loc_453220  +
mov edx [ebp+2Ch] +
jmp loc_453035  +
mov [esp+48h+var_34] 0 +
add eax ecx +
lea ebx [edx+eax] +
mov eax [esp+48h+var_34] +
mov [esi+4] eax +
mov eax [esi] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call memcpy  +
mov eax [esi+1Ch] +
mov eax [eax+18h] +
cmp eax 1 +
jz loc_453270  +
cmp eax 2 +
jz loc_45328B  +
add [esi] edi +
add [esi+8] edi +
mov eax [ebp+74h] +
jmp loc_453074  +
mov esi [esp+48h+var_20] +
mov eax [ebp+38h] +
mov [esp+48h+var_40] esi +
lea edx [eax+esi] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call memcpy  +
mov ecx esi +
mov eax [ebp+44h] +
sub [ebp+70h] esi +
sub [ebp+6Ch] esi +
sub [ebp+5Ch] esi +
mov esi [ebp+4Ch] +
mov [esp+48h+var_34] ebx +
mov ebx ecx +
lea edx [eax+esi*2] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_4531C4  +
mov eax [esp+48h+var_20] +
mov edx [esp+48h+var_1C] +
add edx [ebp+40h] +
mov esi eax +
mov ebx eax +
lea esi [esi+0] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_4531F0  +
mov esi [ebp+0] +
mov ebx [esp+48h+var_34] +
add ebx [esp+48h+var_20] +
mov edi [esi+4] +
test edi edi +
jnz loc_453059  +
nop   +
mov eax [ebp+16C0h] +
mov edx [ebp+3Ch] +
cmp eax edx +
jnb loc_453268  +
mov ebx [ebp+74h] +
add ebx [ebp+6Ch] +
cmp eax ebx +
jnb loc_4532A6  +
mov eax [ebp+38h] +
sub edx ebx +
mov esi 102h +
cmp edx 102h +
cmovbe esi edx +
mov [esp+48h+var_40] esi +
add eax ebx +
add ebx esi +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
mov [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_451A80  +
mov [esi+30h] eax +
jmp loc_453183  +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_451FB0  +
mov [esi+30h] eax +
jmp loc_453183  +
lea ecx [ebx+102h] +
cmp eax ecx +
jnb loc_453268  +
sub ebx eax +
sub edx eax +
add ebx 102h +
cmp ebx edx +
cmova ebx edx +
add eax [ebp+38h] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
add [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edi ebx +
mov [esp+48h+var_34] edi +
mov edi ebx +
jmp loc_45314D  +
***
jmp sub_453300  +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov esi [eax+1Ch] +
mov [esp+10h+var_10] esi +
call sub_457030  +
mov eax [esi+14h] +
mov edi [ebx+10h] +
cmp edi eax +
cmova edi eax +
test edi edi +
jnz loc_453330  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+10h] +
mov eax [ebx+0Ch] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
add [ebx+0Ch] edi +
add [esi+10h] edi +
add [ebx+14h] edi +
sub [ebx+10h] edi +
sub [esi+14h] edi +
jnz loc_453322  +
mov eax [esi+8] +
mov [esi+10h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+50h] +
mov ebp [edi+74h] +
nop   +
cmp ebp 105h +
jbe loc_4535EE  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
mov [ecx+esi*2] dx +
mov ecx [edi+70h] +
test edx edx +
mov [eax] bx +
mov eax [edi+60h] +
mov dword ptr [edi+60h] 2 +
mov [edi+64h] ecx +
mov [edi+78h] eax +
jz loc_4533F3  +
cmp eax [edi+80h] +
jnb loc_4533F3  +
mov ecx [edi+2Ch] +
mov esi ebx +
sub esi edx +
sub ecx 106h +
cmp esi ecx +
jbe loc_4536B0  +
cmp eax 2 +
jbe loc_453577  +
cmp [edi+60h] eax +
ja loc_453577  +
mov edx [edi+74h] +
sub eax 3 +
mov ecx [edi+16A4h] +
lea ebp [ebx+edx-3] +
mov edx [edi+16A0h] +
sub bx [edi+64h] +
lea esi [ebx-1] +
sub ebx 2 +
mov [ecx+edx*2] si +
mov ecx [edi+1698h] +
lea esi [edx+1] +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_490380[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_453660  +
movzx ebx bx +
movzx eax ds:byte_490480[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+16A0h] +
mov esi [edi+74h] +
mov [esp+18h] ebp +
mov [esp+20h] eax +
mov eax [edi+169Ch] +
add esi 1 +
mov [esp+1Ch] esi +
sub eax 1 +
mov [esp+24h] eax +
mov eax [edi+78h] +
sub [esp+1Ch] eax +
mov esi [esp+1Ch] +
lea ebx [eax-2] +
mov [esp+28h] eax +
mov eax [edi+6Ch] +
mov [edi+74h] esi +
mov [edi+78h] ebx +
mov [esp+2Ch] eax +
mov edx eax +
jmp loc_4534B6  +
mov edx eax +
lea eax [edx+1] +
cmp [esp+18h] eax +
mov [edi+6Ch] eax +
jb loc_4534F2  +
mov ecx [edi+38h] +
mov esi [edi+48h] +
movzx edx byte ptr [ecx+edx+3] +
mov ecx [edi+58h] +
shl esi cl +
mov ecx [edi+44h] +
xor edx esi +
mov esi [edi+34h] +
and edx [edi+54h] +
mov [edi+48h] edx +
lea edx [ecx+edx*2] +
mov ecx [edi+40h] +
movzx ebp word ptr [edx] +
and esi eax +
mov [ecx+esi*2] bp +
mov [edx] ax +
sub ebx 1 +
test ebx ebx +
mov [edi+78h] ebx +
jnz loc_4534B4  +
mov esi [esp+2Ch] +
mov eax [esp+28h] +
mov dword ptr [edi+68h] 0 +
mov ebp [esp+1Ch] +
mov dword ptr [edi+60h] 2 +
lea eax [eax+esi-1] +
mov esi [esp+24h] +
cmp [esp+20h] esi +
mov [edi+6Ch] eax +
jnz loc_453380  +
mov edx [edi+5Ch] +
xor ecx ecx +
sub eax edx +
test edx edx +
js loc_45353B  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_457130  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_453300  +
mov eax [edi] +
mov ebp [eax+10h] +
test ebp ebp +
jnz loc_45337B  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [edi+68h] +
test esi esi +
jz loc_453640  +
mov eax [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx-1] +
xor ebx ebx +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
jz loc_453673  +
mov eax [edi+74h] +
add dword ptr [edi+6Ch] 1 +
lea ebp [eax-1] +
mov eax [edi] +
mov [edi+74h] ebp +
mov eax [eax+10h] +
test eax eax +
jz loc_45356D  +
cmp ebp 105h +
ja loc_45338C  +
mov eax edi +
call sub_453010  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_45338C  +
mov edx [esp+54h] +
test edx edx +
jz loc_45356D  +
test eax eax +
jz loc_4536F5  +
cmp eax 2 +
ja loc_45338C  +
mov eax [edi+60h] +
mov edx [edi+70h] +
mov dword ptr [edi+60h] 2 +
mov ebx [edi+6Ch] +
mov [edi+78h] eax +
mov [edi+64h] edx +
jmp loc_4533F3  +
***
mov eax [edi+74h] +
add ebx 1 +
mov dword ptr [edi+68h] 1 +
mov [edi+6Ch] ebx +
lea ebp [eax-1] +
mov [edi+74h] ebp +
jmp loc_453380  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_490580[ebx] +
jmp loc_453463  +
***
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_453686  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ecx +
mov [esp] edi +
call sub_457130  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_453300  +
jmp loc_4535CC  +
***
mov eax edi +
call sub_452D90  +
cmp eax 5 +
mov [edi+60h] eax +
ja loc_4536CD  +
cmp dword ptr [edi+88h] 1 +
jz loc_4536D8  +
cmp eax 3 +
jz loc_4536E4  +
mov ebx [edi+6Ch] +
mov eax [edi+78h] +
jmp loc_4533F3  +
***
mov ebx [edi+6Ch] +
mov dword ptr [edi+60h] 2 +
jmp loc_4536D0  +
***
mov ebx [edi+6Ch] +
mov eax ebx +
sub eax [edi+70h] +
cmp eax 1000h +
jbe loc_4536D0  +
jmp loc_4536DB  +
***
mov esi [edi+68h] +
test esi esi +
jnz loc_453778  +
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+54h] 4 +
mov [edi+16B4h] eax +
jz loc_4537BC  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_45356F  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45373E  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 0 +
call sub_457130  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_453300  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+6Ch] +
xor ebx ebx +
mov edx [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [edx+eax-1] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov dword ptr [edi+68h] 0 +
jmp loc_4536FC  +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_4537CC  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_457130  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_453300  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 3Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [esp+60h] +
nop   +
lea esi [esi+0] +
cmp dword ptr [edi+74h] 105h +
jbe loc_453AB0  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
test edx edx +
mov [ecx+esi*2] dx +
mov [eax] bx +
jz loc_453878  +
mov eax [edi+2Ch] +
mov ecx ebx +
sub ecx edx +
sub eax 106h +
cmp ecx eax +
jbe loc_453B00  +
mov eax [edi+60h] +
cmp eax 2 +
jbe loc_453A20  +
mov edx [edi+16A0h] +
sub eax 3 +
mov ecx [edi+16A4h] +
sub bx [edi+70h] +
lea esi [edx+1] +
mov [ecx+edx*2] bx +
mov ecx [edi+1698h] +
sub ebx 1 +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_490380[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_453AE6  +
movzx ebx bx +
movzx eax ds:byte_490480[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+169Ch] +
mov esi [edi+60h] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
mov eax [edi+74h] +
sub eax esi +
cmp esi [edi+80h] +
mov [edi+74h] eax +
ja loc_453A80  +
cmp eax 2 +
jbe loc_453A80  +
mov ecx [edi+40h] +
lea ebx [esi-1] +
mov eax [edi+6Ch] +
mov edx [edi+54h] +
mov [edi+60h] ebx +
mov ebp [edi+48h] +
mov [esp+20h] ecx +
mov ecx [edi+34h] +
mov [esp+38h] eax +
mov [esp+30h] edx +
lea edx [eax+1] +
mov [esp+3Ch] esi +
mov [esp+24h] ecx +
mov ecx [edi+44h] +
mov [esp+18h] ebx +
mov [esp+28h] ecx +
mov ecx [edi+38h] +
mov [esp+2Ch] ecx +
mov ecx [edi+58h] +
mov [esp+34h] ecx +
jmp loc_453967  +
mov [esp+18h] ebx +
mov ebp eax +
mov eax [esp+2Ch] +
movzx ecx byte ptr [esp+34h] +
mov [edi+6Ch] edx +
mov esi [esp+28h] +
movzx eax byte ptr [eax+edx+2] +
shl ebp cl +
mov ecx [esp+20h] +
xor eax ebp +
mov ebp [esp+24h] +
and eax [esp+30h] +
lea esi [esi+eax*2] +
and ebp edx +
movzx ebx word ptr [esi] +
mov [edi+48h] eax +
mov [ecx+ebp*2] bx +
mov ebx [esp+18h] +
mov [esi] dx +
add edx 1 +
sub ebx 1 +
test ebx ebx +
mov [edi+60h] ebx +
jnz loc_453961  +
mov esi [esp+3Ch] +
mov eax [esp+38h] +
add eax esi +
mov [edi+6Ch] eax +
lea esi [esi+0] +
mov esi [esp+1Ch] +
test esi esi +
jz loc_453820  +
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_4539DF  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_457130  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_453300  +
mov eax [edi] +
mov ebx [eax+10h] +
test ebx ebx +
jnz loc_453820  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+38h] +
xor ebp ebp +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bp +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
sub dword ptr [edi+74h] 1 +
add dword ptr [edi+6Ch] 1 +
jmp loc_4539C0  +
***
mov eax [edi+6Ch] +
mov ecx [edi+38h] +
mov dword ptr [edi+60h] 0 +
add eax esi +
mov [edi+6Ch] eax +
movzx edx byte ptr [ecx+eax] +
mov [edi+48h] edx +
movzx eax byte ptr [ecx+eax+1] +
mov ecx [edi+58h] +
shl edx cl +
xor eax edx +
and eax [edi+54h] +
mov [edi+48h] eax +
jmp loc_4539C0  +
***
mov eax edi +
call sub_453010  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_45382D  +
mov edx [esp+64h] +
test edx edx +
jz loc_453A11  +
test eax eax +
jz loc_453B12  +
cmp eax 2 +
ja loc_45382D  +
mov ebx [edi+6Ch] +
jmp loc_453878  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_490580[ebx] +
jmp loc_4538D8  +
***
mov eax edi +
call sub_452D90  +
mov ebx [edi+6Ch] +
mov [edi+60h] eax +
jmp loc_45387B  +
***
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+64h] 4 +
mov [edi+16B4h] eax +
jz loc_453B86  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_453B7E  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_453B4C  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_457130  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_453300  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_453B96  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_457130  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_453300  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 4Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov edi [esp+10h+arg_4] +
mov eax [ebx+0Ch] +
lea esi [eax-5] +
mov eax 0FFFFh +
cmp esi 0FFFFh +
cmovnb esi eax +
jmp loc_453C6F  +
add edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov dword ptr [ebx+74h] 0 +
test edx edx +
mov [ebx+6Ch] edx +
lea ecx [esi+eax] +
jz loc_453C0F  +
cmp edx ecx +
jb loc_453C5C  +
sub edx ecx +
mov [ebx+74h] edx +
xor edx edx +
mov [ebx+6Ch] ecx +
sub ecx eax +
test eax eax +
js loc_453C24  +
add eax [ebx+38h] +
mov edx eax +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_457130  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_453300  +
mov eax [ebx] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_453D40  +
mov edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov ecx [ebx+2Ch] +
sub edx eax +
sub ecx 106h +
cmp edx ecx +
jnb loc_453D00  +
mov edx [ebx+74h] +
cmp edx 1 +
ja loc_453BF4  +
mov eax ebx +
call sub_453010  +
mov edx [ebx+74h] +
test edx edx +
jnz loc_453BF4  +
test edi edi +
jz loc_453D40  +
cmp edi 4 +
mov dword ptr [ebx+16B4h] 0 +
jz loc_453D49  +
mov ecx [ebx+6Ch] +
mov eax 1 +
mov edx [ebx+5Ch] +
cmp ecx edx +
jle loc_453D42  +
sub ecx edx +
xor al al +
test edx edx +
js loc_453CC8  +
mov eax [ebx+38h] +
add eax edx +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_457130  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_453300  +
mov eax [ebx] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_453D42  +
xor ecx ecx +
test eax eax +
js loc_453D0B  +
add eax [ebx+38h] +
mov ecx eax +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_457130  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_453300  +
mov eax [ebx] +
mov edx [eax+10h] +
test edx edx +
jnz loc_453C6F  +
lea esi [esi+0] +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+5Ch] +
xor ecx ecx +
mov eax [ebx+6Ch] +
sub eax edx +
test edx edx +
js loc_453D5C  +
mov ecx [ebx+38h] +
add ecx edx +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 1 +
mov [esp+10h+var_10] ebx +
call sub_457130  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_453300  +
mov eax [ebx] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add eax 3 +
jmp loc_453D42  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ecx [esp+50h] +
mov ebx [esp+54h] +
mov esi [esp+58h] +
test ecx ecx +
jz loc_453FAE  +
mov eax [esp+50h] +
mov edi [eax+1Ch] +
test edi edi +
jz loc_453FAE  +
test ebx ebx +
jz loc_453FAE  +
mov eax [edi+18h] +
cmp eax 2 +
mov [esp+24h] eax +
jz loc_453FAE  +
cmp eax 1 +
jz loc_453F23  +
mov eax [edi+74h] +
test eax eax +
jnz loc_453FAE  +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_453F10  +
mov eax [esp+50h] +
mov eax [eax+4] +
mov [esp+28h] eax +
mov eax [esp+50h] +
mov eax [eax] +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [eax+4] esi +
mov [eax] ebx +
mov eax edi +
call sub_453010  +
mov eax [edi+74h] +
cmp eax 2 +
jbe loc_453EC1  +
mov edx eax +
nop   +
lea esi [esi+0] +
mov esi [edi+58h] +
mov ebx [edi+6Ch] +
mov eax [edi+48h] +
mov ebp [edi+40h] +
mov [esp+10h] esi +
mov esi [edi+38h] +
lea ecx [ebx+edx-2] +
mov [esp+0Ch] ecx +
mov [esp+14h] esi +
mov esi [edi+54h] +
mov [esp+18h] esi +
mov esi [edi+34h] +
mov [esp+1Ch] esi +
mov esi [edi+44h] +
mov [esp+20h] esi +
jmp loc_453E68  +
mov eax edx +
mov edx [esp+14h] +
movzx ecx byte ptr [esp+10h] +
movzx edx byte ptr [edx+ebx+2] +
shl eax cl +
mov ecx [esp+1Ch] +
xor edx eax +
mov eax [esp+20h] +
and edx [esp+18h] +
and ecx ebx +
lea eax [eax+edx*2] +
movzx esi word ptr [eax] +
mov [edi+48h] edx +
mov [ebp+ecx*2+0] si +
mov [eax] bx +
add ebx 1 +
cmp ebx [esp+0Ch] +
jnz loc_453E66  +
mov [edi+6Ch] ebx +
mov eax edi +
mov dword ptr [edi+74h] 2 +
call sub_453010  +
mov edx [edi+74h] +
cmp edx 2 +
ja loc_453E30  +
mov eax edx +
mov edx [edi+6Ch] +
mov [edi+16B4h] eax +
mov esi [esp+2Ch] +
mov dword ptr [edi+74h] 0 +
mov dword ptr [edi+78h] 2 +
add edx eax +
mov eax [esp+50h] +
mov [edi+6Ch] edx +
mov [edi+5Ch] edx +
mov dword ptr [edi+60h] 2 +
mov dword ptr [edi+68h] 0 +
mov [eax] esi +
mov esi [esp+28h] +
mov [eax+4] esi +
mov eax [esp+24h] +
mov [edi+18h] eax +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+24h] +
test edx edx +
jz loc_453F65  +
sub esi eax +
add ebx esi +
mov esi eax +
jmp loc_453DF8  +
***
cmp dword ptr [edi+4] 2Ah +
jnz loc_453FAE  +
mov edx [edi+74h] +
test edx edx +
jnz loc_453FAE  +
mov eax [esp+50h] +
mov eax [eax+30h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_451A80  +
mov ecx [esp+50h] +
mov [ecx+30h] eax +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_453F18  +
jmp loc_453DF8  +
***
mov ecx [edi+4Ch] +
xor ebp ebp +
mov eax [edi+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bp +
mov [esp+8] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
mov eax [edi+2Ch] +
mov dword ptr [edi+6Ch] 0 +
mov dword ptr [edi+5Ch] 0 +
mov dword ptr [edi+16B4h] 0 +
jmp loc_453F18  +
***
mov eax 0FFFFFFFEh +
jmp loc_453F08  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_454090  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_454090  +
mov edx [ebx+20h] +
test edx edx +
jz loc_454090  +
mov eax [ebx+24h] +
test eax eax +
jz loc_454090  +
mov eax [esi+8] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+2Ch] 2 +
mov [esi+10h] eax +
mov eax [esi+18h] +
mov dword ptr [esi+14h] 0 +
test eax eax +
js loc_454061  +
jnz loc_454066  +
mov dword ptr [esi+4] 71h +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_451A80  +
mov [ebx+30h] eax +
mov dword ptr [esi+28h] 0 +
mov [esp+14h+var_14] esi +
call sub_456E30  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
neg eax  +
mov [esi+18h] eax +
cmp eax 2 +
mov dword ptr [esi+4] 2Ah +
jnz loc_45402B  +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_451FB0  +
jmp loc_454047  +
mov eax 0FFFFFFFEh +
jmp loc_45405B  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+0Ch+arg_0] +
mov [esp+0Ch+var_C] ebx +
call sub_453FC0  +
test eax eax +
mov esi eax +
jnz loc_454167  +
mov ebx [ebx+1Ch] +
mov eax [ebx+2Ch] +
mov ecx [ebx+4Ch] +
add eax eax +
mov [ebx+3Ch] eax +
mov eax [ebx+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov word ptr [eax+edx*2] 0 +
mov [esp+0Ch+var_4] ecx +
mov [esp+0Ch+var_8] 0 +
mov [esp+0Ch+var_C] eax +
call memset  +
mov eax [ebx+84h] +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+74h] 0 +
lea edx [eax+eax*2] +
shl edx 2 +
lea eax dword_4901A0[edx] +
movzx ecx word ptr [edx+4901A2h] +
movzx edx word ptr ds:dword_4901A0[edx] +
mov dword ptr [ebx+16B4h] 0 +
mov dword ptr [ebx+78h] 2 +
mov [ebx+80h] ecx +
mov [ebx+8Ch] edx +
movzx edx word ptr [eax+4] +
movzx eax word ptr [eax+6] +
mov dword ptr [ebx+60h] 2 +
mov dword ptr [ebx+68h] 0 +
mov [ebx+90h] edx +
mov [ebx+7Ch] eax +
mov dword ptr [ebx+48h] 0 +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_454190  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_454190  +
cmp dword ptr [eax+18h] 2 +
jnz loc_454190  +
mov edx [esp+8] +
mov [eax+1Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_4541D5  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4541D5  +
test ecx ecx +
jz loc_4541C1  +
mov ebx [eax+14h] +
mov [ecx] ebx +
test edx edx +
jz loc_4541D1  +
mov eax [eax+16BCh] +
mov [edx] eax +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov eax 0FFFFFFFEh +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [esp+34h] +
mov ebp [esp+38h] +
test eax eax +
jz loc_454264  +
mov esi [eax+1Ch] +
test esi esi +
jz loc_454264  +
mov eax [esi+10h] +
add eax 2 +
cmp [esi+16A4h] eax +
jb loc_45425D  +
lea esi [esi+0] +
mov edx [esi+16BCh] +
mov ebx 10h +
mov eax 1 +
sub ebx edx +
cmp edi ebx +
cmovle ebx edi +
mov ecx ebx +
shl eax cl +
mov ecx edx +
sub eax 1 +
add edx ebx +
and eax ebp +
shl eax cl +
or [esi+16B8h] ax +
mov [esi+16BCh] edx +
mov [esp] esi +
call sub_457030  +
mov ecx ebx +
sar ebp cl +
sub edi ebx +
jnz loc_454210  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFBh +
jmp loc_454255  +
***
mov eax 0FFFFFFFEh +
jmp loc_454255  +
***
mov eax [esp+4] +
test eax eax +
jz loc_4542A7  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4542A7  +
mov edx [esp+8] +
mov [eax+8Ch] edx +
mov edx [esp+0Ch] +
mov [eax+80h] edx +
mov edx [esp+10h] +
mov [eax+90h] edx +
mov edx [esp+14h] +
mov [eax+7Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov ebx [esp+14h] +
lea esi [ecx+7] +
mov edx esi +
lea eax [ecx+3Fh] +
shr edx 3 +
shr eax 6 +
add eax edx +
add eax ecx +
test ebx ebx +
jz loc_454394  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_454394  +
mov edx [ebx+18h] +
cmp edx 1 +
jz loc_454383  +
cmp edx 2 +
jz loc_454310  +
cmp edx 1 +
sbb edx edx +
not edx  +
and edx 6 +
cmp dword ptr [ebx+30h] 0Fh +
jz loc_454363  +
pop ebx  +
lea eax [edx+eax+5] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [ebx+1Ch] +
test edi edi +
jz loc_4543A0  +
mov ebp [edi+10h] +
test ebp ebp +
jz loc_4543B0  +
mov edx [edi+14h] +
add edx 14h +
mov ebp [edi+1Ch] +
test ebp ebp +
jz loc_45433F  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_454335  +
mov ebp [edi+24h] +
test ebp ebp +
jz loc_454352  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_454348  +
mov edi [edi+2Ch] +
lea ebp [edx+2] +
test edi edi +
cmovnz edx ebp +
cmp dword ptr [ebx+30h] 0Fh +
jnz loc_454302  +
cmp dword ptr [ebx+50h] 0Fh +
jnz loc_454302  +
mov eax ecx +
mov ebx ecx +
shr eax 0Ch +
add eax esi +
shr ebx 0Eh +
add eax ebx +
shr ecx 19h +
add eax ecx +
pop ebx  +
add eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [ebx+6Ch] 1 +
sbb edx edx +
and edx 0FFFFFFFCh +
add edx 0Ah +
jmp loc_4542FC  +
***
pop ebx  +
add eax 0Bh +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 12h +
jmp loc_4542FC  +
***
mov edx 12h +
jmp loc_45432C  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
test edi edi +
jz loc_454F81  +
mov eax [esp+2Ch+arg_0] +
mov ebp [eax+1Ch] +
test ebp ebp +
jz loc_454F81  +
cmp [esp+2Ch+arg_4] 5 +
ja loc_454F81  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_45458B  +
mov ebx [eax] +
test ebx ebx +
jz loc_454E18  +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_454580  +
mov edi [esp+2Ch+arg_0] +
mov edx [edi+10h] +
test edx edx +
jz loc_454FE4  +
mov edi [esp+2Ch+arg_0] +
cmp eax 2Ah +
mov [ebp+0] edi +
mov edi [ebp+28h] +
mov [esp+2Ch+var_18] edi +
mov edi [esp+2Ch+arg_4] +
mov [ebp+28h] edi +
jz loc_4546E1  +
cmp eax 45h +
jz loc_4547E9  +
cmp eax 49h +
mov edx [ebp+14h] +
jz loc_4548A0  +
cmp eax 5Bh +
jz loc_454B4B  +
cmp eax 67h +
jz loc_454ECB  +
test edx edx +
mov eax [esp+2Ch+arg_0] +
jnz loc_4545A1  +
mov edx [eax+4] +
test edx edx +
jnz loc_454A90  +
mov eax [esp+2Ch+arg_4] +
cmp eax 5 +
lea edx [eax+eax] +
setz al  +
movzx eax al +
lea eax [eax+eax*8] +
sub edx eax +
mov eax [esp+2Ch+var_18] +
cmp eax 5 +
lea ecx [eax+eax] +
setnl al  +
movzx eax al +
lea eax [eax+eax*8] +
sub ecx eax +
cmp edx ecx +
jg loc_4544B4  +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_454AA6  +
mov eax [ebp+4] +
mov ecx [ebp+74h] +
test ecx ecx +
jnz loc_4545D2  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_454629  +
cmp eax 29Ah +
jnz loc_4545D2  +
lea esi [esi+0] +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_454629  +
mov eax [ebp+18h] +
test eax eax +
jle loc_4552E0  +
cmp eax 2 +
jz loc_455030  +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea esi [eax+1] +
shr edx 18h +
mov [ebp+14h] esi +
shr ecx 10h +
mov [ebx+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov ebx edx +
shr ebx 8 +
mov [ecx+eax] bl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov eax [esp+2Ch+arg_0] +
call sub_453300  +
mov eax [ebp+18h] +
test eax eax +
jle loc_45456C  +
neg eax  +
mov [ebp+18h] eax +
mov edx [ebp+14h] +
xor eax eax +
test edx edx +
setz al  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+2Ch+arg_4] 4 +
jz loc_454410  +
mov eax ds:off_48DFD0 +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFEh +
jmp loc_45462B  +
call sub_453300  +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_4546D5  +
mov eax [esp+2Ch+arg_0] +
mov edx [eax+4] +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_454A9E  +
test edx edx +
jz loc_4544B7  +
mov eax [ebp+88h] +
cmp eax 2 +
jz loc_4548EC  +
cmp eax 3 +
jz loc_454B53  +
mov eax [ebp+84h] +
mov edi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebp +
lea eax [eax+eax*2] +
mov [esp+2Ch+var_28] edi +
call ds:off_4901A8[eax*4]  +
mov edx eax +
and edx 0FFFFFFFDh +
lea ecx [eax-2] +
cmp ecx 1 +
jbe loc_454B10  +
test edx edx +
jnz loc_454633  +
mov eax [esp+2Ch+arg_0] +
mov edi [eax+10h] +
test edi edi +
jz loc_4546D5  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_4544E0  +
cmp [esp+2Ch+arg_4] 1 +
jz loc_4552F3  +
cmp [esp+2Ch+arg_4] 5 +
jz loc_4546BD  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_456F10  +
cmp [esp+2Ch+arg_4] 3 +
jnz loc_4546BD  +
mov edi [ebp+4Ch] +
xor ebx ebx +
mov eax [ebp+44h] +
lea edx [edi+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bx +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov esi [ebp+74h] +
test esi esi +
jnz loc_4546BD  +
mov dword ptr [ebp+6Ch] 0 +
mov dword ptr [ebp+5Ch] 0 +
mov dword ptr [ebp+16B4h] 0 +
mov eax [esp+2Ch+arg_0] +
call sub_453300  +
mov eax [esp+2Ch+arg_0] +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_4544E0  +
mov dword ptr [ebp+28h] 0FFFFFFFFh +
jmp loc_454629  +
cmp dword ptr [ebp+18h] 2 +
jz loc_4550D3  +
mov eax [ebp+30h] +
shl eax 0Ch +
lea ecx [eax-7800h] +
xor eax eax +
cmp dword ptr [ebp+88h] 1 +
jle loc_454A63  +
mov edx [ebp+6Ch] +
or ecx eax +
mov eax ecx +
mov ebx [ebp+8] +
or eax 20h +
mov dword ptr [ebp+4] 71h +
test edx edx +
mov edx 8421085h +
cmovnz ecx eax +
mov eax ecx +
mul  edx +
mov eax [ebp+14h] +
sub ecx edx +
shr ecx 1 +
add ecx edx +
shr ecx 4 +
mov edx ecx +
shl edx 5 +
sub edx ecx +
add edx 1Fh +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov ecx [ebp+6Ch] +
test ecx ecx +
jz loc_4547BA  +
mov eax [esp+2Ch+arg_0] +
mov esi [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea ebx [eax+1] +
shr edx 18h +
mov [ebp+14h] ebx +
shr ecx 10h +
mov [esi+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_451A80  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
mov eax [ebp+4] +
cmp eax 45h +
jnz loc_454446  +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov edi [ecx+10h] +
test edi edi +
jz loc_454FD5  +
mov edx [ebp+14h] +
movzx ebx word ptr [ecx+14h] +
cmp ebx [ebp+20h] +
mov edi edx +
jbe loc_454876  +
mov eax edx +
mov esi ecx +
jmp loc_45483F  +
lea ebx [eax+1] +
mov esi [ebp+8] +
mov [ebp+14h] ebx +
mov ebx [ecx+10h] +
mov ecx [ebp+20h] +
movzx ecx byte ptr [ebx+ecx] +
mov [esi+eax] cl +
mov ecx [ebp+1Ch] +
mov eax [ebp+20h] +
movzx ebx word ptr [ecx+14h] +
mov esi ecx +
add eax 1 +
mov [ebp+20h] eax +
cmp ebx eax +
jbe loc_454871  +
mov eax [ebp+14h] +
cmp [ebp+0Ch] eax +
jnz loc_454810  +
mov esi [esi+2Ch] +
test esi esi +
jz loc_454853  +
cmp eax edx +
ja loc_454DF0  +
mov eax [esp+2Ch+arg_0] +
call sub_453300  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov edi edx +
jz loc_454FCD  +
mov eax edx +
mov ecx [ebp+1Ch] +
jmp loc_454810  +
mov edx [ebp+14h] +
mov eax ecx +
mov ebx [eax+2Ch] +
test ebx ebx +
jz loc_454885  +
cmp edi edx +
jb loc_454F8B  +
mov edi [eax+14h] +
cmp [ebp+20h] edi +
jz loc_4549E8  +
mov eax [ebp+4] +
cmp eax 49h +
jnz loc_454452  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
jmp loc_4549F6  +
mov eax [ebp+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_4548B8  +
add eax [ebp+38h] +
mov ecx eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_457130  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_453300  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_45461A  +
mov eax [ebp+74h] +
jmp loc_454956  +
mov eax [ebp+6Ch] +
xor ebx ebx +
mov edx [ebp+38h] +
mov dword ptr [ebp+60h] 0 +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
mov edi [ebp+6Ch] +
lea ecx [eax-1] +
mov eax [ebp+74h] +
lea edx [edi+1] +
mov [ebp+6Ch] edx +
sub eax 1 +
cmp [ebp+16A0h] ecx +
mov [ebp+74h] eax +
jz loc_4548A8  +
test eax eax +
jnz loc_4548F1  +
mov eax ebp +
call sub_453010  +
mov edi [ebp+74h] +
test edi edi +
jnz loc_4548F1  +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_45461A  +
cmp [esp+2Ch+arg_4] 4 +
mov dword ptr [ebp+16B4h] 0 +
jz loc_454ABC  +
mov eax [ebp+16A0h] +
test eax eax +
jz loc_45463C  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_4549AA  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_457130  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_453300  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
lea ecx [eax-2] +
mov edx eax +
jmp loc_45460D  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 49h +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_455002  +
mov ebx edx +
mov ecx edx +
jmp loc_454A31  +
mov esi [eax+1Ch] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_454B20  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_454A07  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_454A45  +
cmp edx ecx +
jb loc_454DC8  +
mov eax [esp+2Ch+arg_0] +
call sub_453300  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_454FB9  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_454A07  +
mov edx [ebp+84h] +
cmp edx 1 +
jle loc_454706  +
cmp edx 5 +
mov al 40h +
jle loc_454706  +
cmp edx 6 +
mov al 80h +
mov edx 0C0h +
cmovnz eax edx +
jmp loc_454706  +
mov eax [ebp+4] +
cmp eax 29Ah +
jnz loc_4545D2  +
test edx edx +
jz loc_4544B7  +
mov eax ds:off_48DFDC +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_45462B  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_454ACF  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_457130  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_453300  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
cmp ecx 1 +
sbb edx edx +
add edx 1 +
cmp ecx 1 +
sbb eax eax +
add eax 3 +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+4] 29Ah +
jmp loc_454616  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_454B37  +
cmp ebx edx +
jb loc_455276  +
test esi esi +
jz loc_454E28  +
mov eax [ebp+4] +
cmp eax 5Bh +
jnz loc_45445B  +
mov eax [ebp+1Ch] +
jmp loc_454E39  +
movzx eax ds:byte_490480 +
lea edi ds:0[eax*4] +
jmp loc_454BDA  +
mov dword ptr [ebp+60h] 0 +
mov esi [ebp+6Ch] +
mov edx [ebp+38h] +
test esi esi +
jnz loc_454C30  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_18] +
xor ebx ebx +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub dword ptr [ebp+74h] 1 +
add dword ptr [ebp+6Ch] 1 +
test eax eax +
jnz loc_454D7C  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_454B63  +
mov eax ebp +
call sub_453010  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_454B63  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_45461A  +
test eax eax +
jz loc_454974  +
cmp eax 2 +
mov dword ptr [ebp+60h] 0 +
ja loc_454B6A  +
mov eax [ebp+6Ch] +
mov edx [ebp+38h] +
mov [esp+2Ch+var_18] eax +
jmp loc_454B80  +
lea ebx [edx+esi-1] +
movzx ecx byte ptr [ebx] +
mov [esp+2Ch+var_18] esi +
mov [esp+2Ch+var_14] ecx +
movzx ecx byte ptr [ebx] +
cmp [ebx+1] cl +
jnz loc_454B80  +
movzx ecx byte ptr [ebx+2] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_454B80  +
movzx ecx byte ptr [ebx+3] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_454B80  +
lea ecx [edx+esi+102h] +
add ebx 3 +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] ecx +
jmp loc_454CE0  +
movzx ecx byte ptr [ebx+2] +
cmp eax ecx +
jnz loc_45533A  +
movzx ecx byte ptr [ebx+3] +
cmp eax ecx +
jnz loc_45536A  +
movzx ecx byte ptr [ebx+4] +
cmp eax ecx +
jnz loc_45535E  +
movzx ecx byte ptr [ebx+5] +
cmp eax ecx +
jnz loc_455352  +
movzx ecx byte ptr [ebx+6] +
cmp eax ecx +
jnz loc_455346  +
movzx ecx byte ptr [ebx+7] +
cmp eax ecx +
jnz loc_45532E  +
add ebx 8 +
movzx ecx byte ptr [ebx] +
cmp eax ecx +
jnz loc_4552EA  +
cmp ebx [esp+2Ch+var_18] +
jnb loc_4552EA  +
movzx ecx byte ptr [ebx+1] +
cmp eax ecx +
jz loc_454C80  +
mov eax [esp+2Ch+var_10] +
add ebx 1 +
sub ebx [esp+2Ch+var_18] +
lea ecx [ebx+102h] +
cmp ecx eax +
mov [ebp+60h] ecx +
jbe loc_4552CC  +
mov [ebp+60h] eax +
mov ecx eax +
mov eax [ebp+16A0h] +
lea edx [ecx-3] +
mov esi 1 +
mov ecx [ebp+16A4h] +
lea ebx [eax+1] +
mov [ecx+eax*2] si +
mov ecx [ebp+1698h] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
movzx edx dl +
movzx eax ds:byte_490380[edx] +
add word ptr [ebp+eax*4+498h] 1 +
add word ptr [ebp+edi+988h] 1 +
mov eax [ebp+169Ch] +
mov edx [ebp+60h] +
mov dword ptr [ebp+60h] 0 +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub [ebp+74h] edx +
add [ebp+6Ch] edx +
test eax eax +
jz loc_454BDA  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_454D8F  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_457130  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_453300  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
jnz loc_454BDA  +
jmp loc_45461A  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_454A45  +
mov edi [esp+2Ch+arg_0] +
sub eax edx +
mov ecx [edi+30h] +
mov [esp+2Ch+var_24] eax +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edx +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_454853  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_454402  +
jmp loc_45458B  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 5Bh +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_454FF6  +
mov ebx edx +
mov ecx edx +
jmp loc_454E76  +
mov esi [eax+24h] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_454EA4  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_454E50  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_454E86  +
cmp edx ecx +
jb loc_454EE1  +
mov eax [esp+2Ch+arg_0] +
call sub_453300  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_454FC3  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_454E50  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_454EBB  +
cmp ebx edx +
jb loc_4552A1  +
test esi esi +
jz loc_454F06  +
mov eax [ebp+4] +
cmp eax 67h +
jnz loc_454464  +
mov eax [ebp+1Ch] +
mov esi [eax+2Ch] +
test esi esi +
jnz loc_454F17  +
mov dword ptr [ebp+4] 71h +
jmp loc_454464  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_454E86  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+4] 67h +
mov esi [eax+2Ch] +
test esi esi +
jz loc_454ED5  +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_45500E  +
lea eax [edx+1] +
mov ecx [ebp+8] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
mov [ecx+edx] al +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov dword ptr [ebp+4] 71h +
jmp loc_454464  +
mov eax 0FFFFFFFEh +
jmp loc_45462B  +
mov eax [esp+2Ch+arg_0] +
sub edx edi +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add edi [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov eax [ebp+1Ch] +
jmp loc_454885  +
mov esi 1 +
jmp loc_454B25  +
mov esi 1 +
jmp loc_454EA9  +
mov eax [ebp+1Ch] +
jmp loc_454876  +
mov dword ptr [ebp+4] 49h +
mov edx [ebp+14h] +
jmp loc_4549F6  +
mov eax ds:off_48DFDC +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_45462B  +
mov dword ptr [ebp+4] 67h +
jmp loc_454F10  +
mov dword ptr [ebp+4] 5Bh +
jmp loc_454E39  +
mov eax [esp+2Ch+arg_0] +
call sub_453300  +
mov edx [ebp+14h] +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_454464  +
jmp loc_454F23  +
mov eax [ebp+14h] +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+30h] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+32h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+33h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+8] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+8] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+0Ah] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+0Bh] +
mov [edx+eax] cl +
jmp loc_454557  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+8] +
mov [edi+30h] eax +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 1Fh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8Bh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8 +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_455376  +
mov edi [eax] +
mov ebx [ebp+14h] +
mov esi [ebp+8] +
test edi edi +
setnz cl  +
cmp dword ptr [eax+2Ch] 1 +
lea edx [ebx+1] +
mov [ebp+14h] edx +
sbb edx edx +
not edx  +
and edx 2 +
add ecx edx +
cmp dword ptr [eax+10h] 1 +
sbb edx edx +
not edx  +
and edx 4 +
add ecx edx +
cmp dword ptr [eax+1Ch] 1 +
sbb edx edx +
not edx  +
and edx 8 +
add edx ecx +
cmp dword ptr [eax+24h] 1 +
sbb eax eax +
not eax  +
and eax 10h +
add eax edx +
mov [esi+ebx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+4] +
mov [edx+eax] cl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+4] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx word ptr [ecx+6] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx byte ptr [ecx+7] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_455204  +
cmp dword ptr [ebp+88h] 1 +
jle loc_455413  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+0Ch] +
mov [edx+eax] cl +
mov ecx [ebp+1Ch] +
mov esi [ecx+10h] +
test esi esi +
jz loc_455423  +
mov eax [ebp+14h] +
mov ebx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ecx+14h] +
mov [ebx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+14h] +
shr eax 8 +
mov [ecx+edx] al +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov ebx [ecx+2Ch] +
test ebx ebx +
jnz loc_455300  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 45h +
jmp loc_4547EE  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_454B37  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_454EBB  +
cmp ecx 2 +
ja loc_454D09  +
mov [esp+2Ch+var_18] esi +
jmp loc_454B80  +
mov eax 1 +
jmp loc_45462B  +
mov eax [esp+2Ch+var_10] +
jmp loc_454CEF  +
mov [esp+2Ch+var_2C] ebp +
call sub_457040  +
jmp loc_4546BD  +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+14h] +
mov edx [ebp+8] +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_451FB0  +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+1Ch] +
mov [edi+30h] eax +
mov eax ecx +
jmp loc_455263  +
mov eax [esp+2Ch+var_10] +
add ebx 7 +
jmp loc_454CEF  +
mov eax [esp+2Ch+var_10] +
add ebx 2 +
jmp loc_454CEF  +
mov eax [esp+2Ch+var_10] +
add ebx 6 +
jmp loc_454CEF  +
mov eax [esp+2Ch+var_10] +
add ebx 5 +
jmp loc_454CEF  +
mov eax [esp+2Ch+var_10] +
add ebx 4 +
jmp loc_454CEF  +
mov eax [esp+2Ch+var_10] +
add ebx 3 +
jmp loc_454CEF  +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_4553F2  +
cmp dword ptr [ebp+88h] 1 +
jle loc_45542A  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0Bh +
mov edx [ebp+14h] +
mov dword ptr [ebp+4] 71h +
jmp loc_454464  +
cmp edx 1 +
jle loc_4551FF  +
xor eax eax +
jmp loc_455204  +
mov eax ecx +
jmp loc_455258  +
cmp edx 1 +
lea esi [esi+0] +
jle loc_4553ED  +
xor eax eax +
jmp loc_4553F2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
test edx edx +
jz loc_455530  +
mov ebx [edx+1Ch] +
test ebx ebx +
jz loc_455530  +
cmp esi 0FFFFFFFFh +
jz loc_4554F1  +
cmp esi 9 +
ja loc_455530  +
cmp edi 4 +
ja loc_455530  +
mov ecx [ebx+84h] +
cmp [ebx+88h] edi +
lea eax [ecx+ecx*2] +
mov eax ds:off_4901A8[eax*4] +
jz loc_455500  +
mov ebp [edx+8] +
xor eax eax +
test ebp ebp +
jnz loc_455510  +
cmp esi ecx +
jz loc_4554E3  +
lea ecx [esi+esi*2] +
shl ecx 2 +
lea edx dword_4901A0[ecx] +
mov [ebx+84h] esi +
movzx esi word ptr [ecx+4901A2h] +
movzx ecx word ptr ds:dword_4901A0[ecx] +
mov [ebx+80h] esi +
mov [ebx+8Ch] ecx +
movzx ecx word ptr [edx+4] +
movzx edx word ptr [edx+6] +
mov [ebx+90h] ecx +
mov [ebx+7Ch] edx +
mov [ebx+88h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi 6 +
jmp loc_455478  +
***
lea ebp [esi+esi*2] +
cmp ds:off_4901A8[ebp*4] eax +
jnz loc_455499  +
xor eax eax +
jmp loc_4554A2  +
***
mov dword ptr [esp+4] 5 +
mov [esp] edx +
call sub_4543C0  +
mov ecx [ebx+84h] +
jmp loc_4554A2  +
***
mov eax 0FFFFFFFEh +
jmp loc_4554E9  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_45562D  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_45562D  +
mov esi [eax+4] +
cmp esi 2Ah +
jnz loc_4555F4  +
mov edx [eax+8] +
test edx edx +
jz loc_455581  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+44h] +
test edx edx +
jz loc_45559A  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+40h] +
test edx edx +
jz loc_4555B3  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_4555CC  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov edx [ebx+24h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ecx +
call edx  +
xor eax eax +
cmp esi 71h +
setnz al  +
mov dword ptr [ebx+1Ch] 0 +
lea eax [eax+eax*2-3] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 45h +
jz loc_455568  +
cmp esi 49h +
jz loc_455568  +
cmp esi 5Bh +
jz loc_455568  +
cmp esi 67h +
jz loc_455568  +
cmp esi 71h +
jz loc_455568  +
cmp esi 29Ah +
jz loc_455568  +
mov eax 0FFFFFFFEh +
jmp loc_4555EE  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_14] +
mov ebp [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_1C] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
test eax eax +
jz loc_4558B0  +
cmp byte ptr [eax] 31h +
jnz loc_4558B0  +
cmp edx 38h +
jnz loc_4558B0  +
test esi esi +
jz loc_4558C0  +
mov eax [esi+20h] +
mov dword ptr [esi+18h] 0 +
test eax eax +
jz loc_4558E0  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_4558D0  +
cmp edi 0FFFFFFFFh +
mov eax 6 +
cmovz edi eax +
test ebp ebp +
js loc_4558A0  +
cmp ebp 0Fh +
mov edx 1 +
jg loc_455894  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] edx +
sub eax 1 +
cmp eax 8 +
ja loc_4558C0  +
cmp ecx 8 +
jnz loc_4558C0  +
lea eax [ebp-8] +
cmp eax 7 +
ja loc_4558C0  +
cmp edi 9 +
ja loc_4558C0  +
cmp [esp+2Ch+var_14] 4 +
ja loc_4558C0  +
mov ecx [esi+28h] +
cmp ebp 8 +
mov eax 9 +
cmovz ebp eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_24] 16C4h +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ecx +
call eax  +
test eax eax +
mov ebx eax +
jz loc_455911  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov [esi+1Ch] eax +
mov [eax+30h] ebp +
mov [eax] esi +
mov [eax+18h] edx +
mov edx 1 +
shl edx cl +
mov dword ptr [eax+1Ch] 0 +
lea eax [edx-1] +
mov ebp edx +
mov [ebx+34h] eax +
mov eax [esp+2Ch+var_18] +
mov [ebx+2Ch] edx +
mov edx 1 +
lea ecx [eax+7] +
add eax 9 +
shl edx cl +
mov [ebx+50h] ecx +
mov ecx edx +
mov [ebx+4Ch] edx +
mov edx 0AAAAAAABh +
sub ecx 1 +
mul  edx +
mov eax [esi+20h] +
mov [ebx+54h] ecx +
shr edx 1 +
mov [ebx+58h] edx +
mov edx [esi+28h] +
mov [esp+2Ch+var_24] 2 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+2Ch] +
mov edx [esi+28h] +
mov [ebx+38h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov ecx [ebx+4Ch] +
mov edx [esi+28h] +
mov [ebx+40h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov edx [esi+28h] +
mov dword ptr [ebx+16C0h] 0 +
mov [ebx+44h] eax +
mov eax [esp+2Ch+var_18] +
lea ecx [eax+6] +
mov eax 1 +
shl eax cl +
mov [ebx+169Ch] eax +
mov ecx eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 4 +
call eax  +
mov edx [ebx+169Ch] +
lea ecx ds:0[edx*4] +
mov [ebx+0Ch] ecx +
mov ecx [ebx+38h] +
mov [ebx+8] eax +
test ecx ecx +
jz loc_4558F3  +
mov ebp [ebx+40h] +
test ebp ebp +
jz loc_4558F3  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_4558F3  +
test eax eax +
jz loc_4558F3  +
mov ecx edx +
and ecx 0FFFFFFFEh +
lea edx [edx+edx*2] +
add ecx eax +
add eax edx +
mov [ebx+1698h] eax +
mov eax [esp+2Ch+var_14] +
mov [ebx+16A4h] ecx +
mov [ebx+84h] edi +
mov byte ptr [ebx+24h] 8 +
mov [ebx+88h] eax +
mov [esp+2Ch+arg_0] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_4540A0  +
sub ebp 10h +
mov dl 2 +
jmp loc_4556CF  +
neg ebp  +
xor edx edx +
jmp loc_4556CF  +
mov eax 0FFFFFFFAh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi+24h] offset loc_4519D0 +
jmp loc_4556AE  +
mov dword ptr [esi+20h] offset loc_4519B0 +
mov dword ptr [esi+28h] 0 +
jmp loc_4556A3  +
mov eax ds:off_48DFD8 +
mov dword ptr [ebx+4] 29Ah +
mov [esi+18h] eax +
mov [esp+2Ch+var_2C] esi +
call sub_455540  +
mov eax 0FFFFFFFCh +
jmp loc_4558B5  +
mov eax 0FFFFFFFCh +
jmp loc_4558B5  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 8 +
mov [esp+2Ch+var_20] 0Fh +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 8 +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_455640  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
test eax eax +
jz loc_455C05  +
test ebp ebp +
jz loc_455C05  +
mov edx [eax+1Ch] +
test edx edx +
mov [esp+0Ch] edx +
jz loc_455C05  +
mov ecx [eax] +
mov [ebp+0] ecx +
mov ecx [eax+4] +
mov [ebp+4] ecx +
mov ecx [eax+8] +
mov [ebp+8] ecx +
mov ecx [eax+0Ch] +
mov [ebp+0Ch] ecx +
mov ecx [eax+10h] +
mov [ebp+10h] ecx +
mov ecx [eax+14h] +
mov [ebp+14h] ecx +
mov ecx [eax+18h] +
mov [ebp+18h] ecx +
mov ecx [eax+1Ch] +
mov [ebp+1Ch] ecx +
mov ecx [eax+20h] +
mov [ebp+20h] ecx +
mov ebx [eax+24h] +
mov [ebp+24h] ebx +
mov ebx [eax+28h] +
mov [ebp+28h] ebx +
mov esi [eax+2Ch] +
mov [ebp+2Ch] esi +
mov esi [eax+30h] +
mov [ebp+30h] esi +
mov eax [eax+34h] +
mov [ebp+34h] eax +
mov [esp] ebx +
mov dword ptr [esp+8] 16C4h +
mov dword ptr [esp+4] 1 +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_455C20  +
test bl 1 +
mov edi eax +
mov esi [esp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 16C4h +
jnz loc_455BF0  +
test edi 2 +
jnz loc_455BD5  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_455BC0  +
test al 1 +
jnz loc_455BB3  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov eax [ebp+20h] +
mov [ebx] ebp +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov [ebx+38h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+4Ch] +
mov ecx [ebp+28h] +
mov [ebx+40h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+169Ch] +
mov ecx [ebp+28h] +
mov [ebx+44h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov dword ptr [esp+8] 4 +
mov [esp] ecx +
call eax  +
mov esi eax +
mov [ebx+8] eax +
mov eax [ebx+38h] +
test eax eax +
jz loc_455C10  +
mov ecx [ebx+40h] +
test ecx ecx +
jz loc_455C10  +
mov edx [ebx+44h] +
test edx edx +
jz loc_455C10  +
test esi esi +
jz loc_455C10  +
mov edi [esp+0Ch] +
mov ecx [ebx+2Ch] +
mov edx [edi+38h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
mov ecx [ebx+2Ch] +
mov edx [edi+40h] +
mov eax [ebx+40h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+4Ch] +
mov edx [edi+44h] +
mov eax [ebx+44h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+0Ch] +
mov edx [edi+8] +
mov eax [ebx+8] +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [edi+10h] +
mov edx [ebx+8] +
add eax edx +
sub eax [edi+8] +
mov [ebx+10h] eax +
mov eax [ebx+169Ch] +
mov ecx eax +
lea eax [eax+eax*2] +
and ecx 0FFFFFFFEh +
add edx eax +
add esi ecx +
lea eax [ebx+94h] +
mov [ebx+0B18h] eax +
lea eax [ebx+988h] +
mov [ebx+0B24h] eax +
lea eax [ebx+0A7Ch] +
mov [ebx+0B30h] eax +
xor eax eax +
mov [ebx+16A4h] esi +
mov [ebx+1698h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
jmp loc_455A4A  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_455A4A  +
jmp loc_455BB3  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_455A33  +
***
movzx eax byte ptr [esi] +
lea edi [ebx+1] +
lea esi [esi+1] +
mov [ebx] al +
mov eax 16C3h +
jmp loc_455A27  +
***
mov eax 0FFFFFFFEh +
jmp loc_455BAB  +
***
mov [esp] ebp +
call sub_455540  +
mov eax 0FFFFFFFCh +
jmp loc_455BAB  +
***
mov eax 0FFFFFFFCh +
jmp loc_455BAB  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 18h +
mov edx [eax+1450h] +
lea ebp [ecx+2D4h] +
add ecx ecx +
mov ebx [eax+ebp*4+0Ch] +
cmp ecx edx +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_10] ebx +
jg loc_455CD0  +
lea edx [edi+ebx*4] +
mov [esp+20h+var_18] edx +
jmp loc_455C8A  +
mov edx [eax+ecx*4+0B5Ch] +
mov ebx ecx +
movzx esi word ptr [edi+edx*4] +
mov ecx [esp+20h+var_18] +
cmp [ecx] si +
jb loc_455CD0  +
jz loc_455CE0  +
lea ecx [ebx+ebx] +
cmp ecx [esp+20h+var_20] +
mov [eax+ebp*4+0Ch] edx +
lea ebp [ebx+2D4h] +
jg loc_455CD0  +
cmp ecx [esp+20h+var_20] +
jge loc_455C60  +
mov esi [eax+ecx*4+0B5Ch] +
lea ebx [ecx+1] +
mov edx [eax+ecx*4+0B60h] +
mov [esp+20h+var_14] esi +
movzx esi word ptr [edi+esi*4] +
mov word ptr [esp+20h+var_1C] si +
movzx esi word ptr [edi+edx*4] +
cmp si word ptr [esp+20h+var_1C] +
jb loc_455C6D  +
jz loc_455D05  +
mov ebx ecx +
mov ecx [esp+20h+var_18] +
movzx esi word ptr [esp+20h+var_1C] +
mov edx [esp+20h+var_14] +
cmp [ecx] si +
jnb loc_455C76  +
nop   +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+20h+var_10] +
movzx ecx byte ptr [eax+edx+1458h] +
cmp [eax+esi+1458h] cl +
ja loc_455C78  +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+20h+var_C] ebx +
mov ebx [esp+20h+var_14] +
mov [esp+20h+var_1C] ecx +
movzx ecx byte ptr [eax+edx+1458h] +
cmp cl [eax+ebx+1458h] +
mov ecx [esp+20h+var_1C] +
cmova edx ebx +
mov ebx [esp+20h+var_C] +
cmova ebx ecx +
jmp loc_455C6D  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [edx+8] +
mov ecx [edx] +
mov [esp+4Ch+var_44] edx +
mov ebp [eax+0Ch] +
mov edi [eax] +
mov [esp+4Ch+var_28] ecx +
mov dword ptr [ebx+1450h] 0 +
test ebp ebp +
mov dword ptr [ebx+1454h] 23Dh +
jle loc_4561AC  +
mov edx ecx +
xor eax eax +
mov ecx 0FFFFFFFFh +
jmp loc_455DAC  +
mov ecx [ebx+1450h] +
add edx 4 +
lea esi [ecx+1] +
mov [ebx+1450h] esi +
mov [ebx+ecx*4+0B60h] eax +
mov ecx eax +
mov byte ptr [ebx+eax+1458h] 0 +
add eax 1 +
cmp eax ebp +
jz loc_455DC2  +
cmp word ptr [edx] 0 +
jnz loc_455D82  +
xor esi esi +
add eax 1 +
mov [edx+2] si +
add edx 4 +
cmp eax ebp +
jnz loc_455DAC  +
mov esi ecx +
mov ecx [ebx+1450h] +
mov [esp+4Ch+var_4C] ebp +
mov ebp [esp+4Ch+var_28] +
jmp loc_455E08  +
mov [ebx+ecx*4+0B5Ch] eax +
mov ecx 1 +
mov [ebp+edx+0] cx +
mov byte ptr [ebx+eax+1458h] 0 +
sub dword ptr [ebx+16A8h] 1 +
test edi edi +
jz loc_455E02  +
movzx eax word ptr [edi+edx+2] +
sub [ebx+16ACh] eax +
mov ecx [ebx+1450h] +
cmp ecx 1 +
jg loc_455E2D  +
add ecx 1 +
xor edx edx +
xor eax eax +
cmp esi 1 +
mov [ebx+1450h] ecx +
jg loc_455DD3  +
add esi 1 +
lea edx ds:0[esi*4] +
mov eax esi +
jmp loc_455DD3  +
mov edi [esp+4Ch+var_44] +
sar ecx 1 +
mov ebp [esp+4Ch+var_4C] +
mov [esp+4Ch+var_24] esi +
mov [edi+4] esi +
mov edi [esp+4Ch+var_28] +
mov esi ecx +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_455C30  +
sub esi 1 +
jnz loc_455E43  +
mov eax [ebx+1450h] +
mov edi [esp+4Ch+var_28] +
jmp loc_455E62  +
mov ebp esi +
lea edx [eax-1] +
mov eax [ebx+eax*4+0B5Ch] +
mov ecx 1 +
mov esi [ebx+0B60h] +
mov [ebx+1450h] edx +
mov edx edi +
mov [ebx+0B60h] eax +
mov eax ebx +
call sub_455C30  +
mov edx [ebx+1454h] +
mov eax [ebx+0B60h] +
lea ecx [edx-2] +
mov [ebx+edx*4+0B58h] esi +
mov [ebx+1454h] ecx +
lea ecx [edi+esi*4] +
mov [ebx+edx*4+0B54h] eax +
mov edx ecx +
lea ecx [edi+eax*4] +
mov [esp+4Ch+var_48] ecx +
movzx ecx word ptr [ecx] +
add cx [edx] +
mov [edi+ebp*4] cx +
movzx ecx byte ptr [ebx+esi+1458h] +
mov byte ptr [esp+4Ch+var_4C] cl +
movzx ecx byte ptr [ebx+eax+1458h] +
movzx eax byte ptr [esp+4Ch+var_4C] +
lea esi [ecx+1] +
add eax 1 +
cmp byte ptr [esp+4Ch+var_4C] cl +
mov ecx 1 +
cmovb eax esi +
mov [ebx+ebp+1458h] al +
mov eax [esp+4Ch+var_48] +
lea esi [ebp+1] +
mov [eax+2] bp +
mov eax ebx +
mov [edx+2] bp +
mov edx edi +
mov [ebx+0B60h] ebp +
call sub_455C30  +
mov eax [ebx+1450h] +
cmp eax 1 +
jg loc_455E60  +
mov eax [ebx+1454h] +
mov ecx [ebx+0B60h] +
lea edx [eax-1] +
mov [ebx+1454h] edx +
xor edx edx +
mov [ebx+eax*4+0B58h] ecx +
mov eax [esp+4Ch+var_44] +
mov edi [eax] +
mov ebp [eax+4] +
mov eax [eax+8] +
mov [esp+4Ch+var_48] edi +
mov edi [eax] +
mov [esp+4Ch+var_30] edi +
mov edi [eax+4] +
mov [esp+4Ch+var_2C] edi +
mov edi [eax+8] +
mov eax [eax+10h] +
mov [esp+4Ch+var_38] edi +
xor esi esi +
mov [ebx+edx*2+0B3Ch] si +
add edx 1 +
cmp edx 10h +
jnz loc_455F66  +
mov edi [esp+4Ch+var_48] +
xor edx edx +
mov [edi+ecx*4+2] dx +
mov edx [ebx+1454h] +
lea ecx [edx+1] +
cmp ecx 23Ch +
jg loc_456139  +
mov [esp+4Ch+var_44] ebp +
mov ebp [esp+4Ch+var_48] +
lea ecx [ebx+1450h] +
lea edi [ebx+edx*4+0B60h] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_3C] ebx +
mov edx [edi] +
lea esi ds:0[edx*4] +
lea ecx [ebp+esi+0] +
movzx eax word ptr [ecx+2] +
movzx eax word ptr [ebp+eax*4+2] +
add eax 1 +
cmp [esp+4Ch+var_4C] eax +
jge loc_455FE6  +
add [esp+4Ch+var_34] 1 +
mov eax [esp+4Ch+var_4C] +
cmp [esp+4Ch+var_44] edx +
mov [ecx+2] ax +
jl loc_45603C  +
mov ebx [esp+4Ch+var_3C] +
add word ptr [ebx+eax*2+0B3Ch] 1 +
xor ebx ebx +
cmp [esp+4Ch+var_38] edx +
jg loc_456010  +
mov ebx [esp+4Ch+var_2C] +
sub edx [esp+4Ch+var_38] +
mov ebx [ebx+edx*4] +
movzx edx word ptr [ecx] +
add eax ebx +
mov ecx ebx +
mov ebx [esp+4Ch+var_3C] +
imul eax edx +
add [ebx+16A8h] eax +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_45603C  +
movzx eax word ptr [eax+esi+2] +
add eax ecx +
imul eax edx +
add [ebx+16ACh] eax +
add edi 4 +
cmp edi [esp+4Ch+var_40] +
jnz loc_455FC0  +
mov edx [esp+4Ch+var_34] +
mov ebp [esp+4Ch+var_44] +
mov eax [esp+4Ch+var_4C] +
mov ebx [esp+4Ch+var_3C] +
test edx edx +
jz loc_456139  +
lea ecx [eax-1] +
lea edi [eax+597h] +
lea esi [ebx+eax*2] +
mov [esp+4Ch+var_4C] ebp +
mov ebp edx +
mov [esp+4Ch+var_40] eax +
mov eax ecx +
mov [esp+4Ch+var_44] ecx +
movzx ecx word ptr [ebx+edi*2+0Ch] +
mov edx eax +
test cx cx +
jnz loc_456097  +
sub edx 1 +
movzx ecx word ptr [ebx+edx*2+0B3Ch] +
test cx cx +
jz loc_456087  +
sub ecx 1 +
sub ebp 2 +
add word ptr [ebx+edx*2+0B3Eh] 2 +
mov [ebx+edx*2+0B3Ch] cx +
movzx ecx word ptr [esi+0B3Ch] +
sub ecx 1 +
test ebp ebp +
mov [esi+0B3Ch] cx +
jg loc_45607B  +
mov eax [esp+4Ch+var_40] +
mov ebp [esp+4Ch+var_4C] +
test eax eax +
jz loc_456139  +
mov edx 23Dh +
movzx ecx cx +
test ecx ecx +
jz loc_45611E  +
mov [esp+4Ch+var_4C] ebp +
lea esi [esi+0] +
sub edx 1 +
mov esi [ebx+edx*4+0B5Ch] +
cmp [esp+4Ch+var_4C] esi +
jl loc_456117  +
mov edi [esp+4Ch+var_48] +
lea esi [edi+esi*4] +
movzx edi word ptr [esi+2] +
cmp edi eax +
jz loc_456114  +
mov ebp eax +
sub ebp edi +
mov edi ebp +
movzx ebp word ptr [esi] +
imul edi ebp +
add [ebx+16A8h] edi +
mov [esi+2] ax +
sub ecx 1 +
test ecx ecx +
jnz loc_4560E0  +
mov ebp [esp+4Ch+var_4C] +
mov edi [esp+4Ch+var_44] +
test edi edi +
mov eax edi +
jz loc_456139  +
movzx ecx word ptr [ebx+edi*2+0B3Ch] +
sub edi 1 +
mov [esp+4Ch+var_44] edi +
jmp loc_4560D3  +
add ebx 0B3Ch +
xor edx edx +
mov eax 1 +
add dx [ebx+eax*2-2] +
add edx edx +
mov [esp+eax*2+4Ch+var_20] dx +
add eax 1 +
cmp eax 10h +
jnz loc_456146  +
mov eax [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_28] +
cmp eax 0FFFFFFFFh +
lea edi [esi+eax*4+4] +
jz loc_4561A4  +
nop   +
lea esi [esi+0] +
movzx edx word ptr [esi+2] +
test edx edx +
jz loc_45619D  +
movzx ecx [esp+edx*2+4Ch+var_20] +
xor ebx ebx +
lea eax [ecx+1] +
mov [esp+edx*2+4Ch+var_20] ax +
mov eax ecx +
and eax 1 +
or eax ebx +
shr ecx 1 +
sub edx 1 +
lea ebx [eax+eax] +
jnz loc_456187  +
shr ebx 1 +
mov [esi] bx +
add esi 4 +
cmp esi edi +
jnz loc_456170  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebp +
xor ecx ecx +
mov esi 0FFFFFFFFh +
mov ebp [esp+4Ch+var_28] +
jmp loc_455E08  +
***
push esi  +
push ebx  +
sub esp 8 +
movzx ebx word ptr [edx+2] +
lea esi ds:4[ecx*4] +
mov word ptr [edx+esi+2] 0FFFFh +
cmp ebx 1 +
sbb ebp ebp +
add ebp 4 +
cmp ebx 1 +
sbb edi edi +
and edi 83h +
add edi 7 +
test ecx ecx +
js loc_45627C  +
add esi edx +
xor ecx ecx +
mov [esp+8+var_4] esi +
mov [esp+8+var_8] 0FFFFFFFFh +
jmp loc_456235  +
add [eax+ebx*4+0A7Ch] cx +
test esi esi +
jz loc_456267  +
cmp ebx esi +
setnz cl  +
movzx ebp cl +
movzx edi cl +
add ebp 3 +
add edi 6 +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
jz loc_45627C  +
mov [esp+8+var_8] ebx +
mov ebx esi +
add ecx 1 +
movzx esi word ptr [edx+6] +
cmp ecx edi +
jge loc_456244  +
cmp ebx esi +
jz loc_456296  +
cmp ecx ebp +
jl loc_456208  +
test ebx ebx +
jz loc_456284  +
cmp [esp+8+var_8] ebx +
nop   +
jz loc_45625B  +
add word ptr [eax+ebx*4+0A7Ch] 1 +
add word ptr [eax+0ABCh] 1 +
test esi esi +
jnz loc_456214  +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
mov ebp 3 +
mov edi 8Ah +
jnz loc_456230  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 0Ah +
jg loc_4562A0  +
add word ptr [eax+0AC0h] 1 +
jmp loc_456210  +
mov ebx [esp+8+var_8] +
jmp loc_456227  +
add word ptr [eax+0AC4h] 1 +
jmp loc_456210  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
movzx eax word ptr [edx+2] +
cmp eax 1 +
sbb esi esi +
add esi 4 +
cmp eax 1 +
sbb ebx ebx +
and ebx 83h +
add ebx 7 +
test ecx ecx +
mov [esp+20h+var_1C] eax +
js loc_4565B4  +
lea eax [edx+ecx*4+4] +
xor edi edi +
mov [esp+20h+var_14] edx +
mov edx 0FFFFFFFFh +
mov [esp+20h+var_20] edi +
mov edi ebp +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+var_14] +
movzx eax word ptr [eax+6] +
mov [esp+20h+var_18] eax +
mov eax [esp+20h+var_20] +
lea ebp [eax+1] +
cmp ebp ebx +
jge loc_45631B  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
jz loc_4566B0  +
cmp ebp esi +
jge loc_456414  +
mov eax [esp+20h+var_1C] +
mov [esp+20h+var_20] ebp +
lea edx [edi+eax*4] +
mov ebp edx +
jmp loc_456390  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [edi+14h] +
or cx [edi+16B8h] +
lea esi [ebx+1] +
mov [edi+14h] esi +
mov esi [edi+8] +
mov [edi+16B8h] cx +
mov [esi+ebx] cl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov ebx [edi+16BCh] +
mov ecx 10h +
sub ecx ebx +
sar edx cl +
sub [esp+20h+var_20] 1 +
lea eax [eax+ebx-10h] +
mov [edi+16B8h] dx +
mov [edi+16BCh] eax +
jz loc_4563C6  +
movzx eax word ptr [ebp+0A7Eh] +
mov edx 10h +
mov ecx [edi+16BCh] +
sub edx eax +
cmp ecx edx +
movzx edx word ptr [ebp+0A7Ch] +
jg loc_456331  +
shl edx cl +
add eax ecx +
or [edi+16B8h] dx +
sub [esp+20h+var_20] 1 +
mov [edi+16BCh] eax +
jnz loc_456390  +
mov eax [esp+20h+var_18] +
test eax eax +
jz loc_456590  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
mov [esp+20h+var_20] 0 +
setnz bl  +
movzx esi bl +
movzx ebx bl +
add esi 3 +
add ebx 6 +
add [esp+20h+var_14] 4 +
mov eax [esp+20h+var_10] +
cmp [esp+20h+var_14] eax +
jz loc_4565B4  +
mov eax [esp+20h+var_18] +
mov edx [esp+20h+var_1C] +
mov [esp+20h+var_1C] eax +
jmp loc_4562F7  +
mov ecx [esp+20h+var_1C] +
test ecx ecx +
jz loc_4565C0  +
cmp edx [esp+20h+var_1C] +
jz loc_456801  +
mov eax [esp+20h+var_1C] +
mov ebx 10h +
mov ecx [edi+16BCh] +
lea edx [edi+eax*4] +
movzx eax word ptr [edx+0A7Eh] +
sub ebx eax +
cmp ecx ebx +
movzx ebx word ptr [edx+0A7Ch] +
jle loc_4567E4  +
mov edx [edi+14h] +
mov esi ebx +
shl esi cl +
mov ebp [edi+8] +
mov ecx esi +
or cx [edi+16B8h] +
lea esi [edx+1] +
mov [edi+14h] esi +
mov [edi+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [edi+14h] +
mov esi [edi+8] +
lea ecx [edx+1] +
mov [edi+14h] ecx +
movzx ecx byte ptr [edi+16B9h] +
mov [esi+edx] cl +
mov edx [edi+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [eax+edx-10h] +
mov [edi+16B8h] bx +
mov [edi+16BCh] ecx +
movzx eax word ptr [edi+0ABEh] +
mov edx 10h +
sub edx eax +
cmp edx ecx +
movzx edx word ptr [edi+0ABCh] +
jge loc_4566C0  +
mov esi edx +
mov ebp [edi+8] +
shl esi cl +
mov ecx [edi+14h] +
or ebx esi +
mov [edi+16B8h] bx +
lea esi [ecx+1] +
mov [edi+14h] esi +
mov [ebp+ecx+0] bl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov esi [edi+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edx cl +
lea ecx [eax+esi-10h] +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jle loc_4566DC  +
mov ebp [esp+20h+var_20] +
mov esi [edi+14h] +
sub ebp 3 +
movzx ebp bp +
mov eax ebp +
shl eax cl +
or edx eax +
mov eax [edi+8] +
lea ecx [esi+1] +
mov [edi+16B8h] dx +
mov [edi+14h] ecx +
mov [eax+esi] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Eh +
mov [edi+16BCh] eax +
mov eax [esp+20h+var_18] +
sar ebp cl +
mov [edi+16B8h] bp +
test eax eax +
jnz loc_4563D2  +
lea esi [esi+0] +
add [esp+20h+var_14] 4 +
mov esi 3 +
mov eax [esp+20h+var_10] +
mov ebx 8Ah +
cmp [esp+20h+var_14] eax +
mov [esp+20h+var_20] 0 +
jnz loc_456403  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebp 0Ah +
jg loc_456700  +
movzx esi word ptr [edi+0AC2h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_456816  +
movzx ebx word ptr [edi+0AC0h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
cmp ecx 0Dh +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jle loc_45683E  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 2 +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_4563C6  +
mov [esp+20h+var_20] ebp +
mov [esp+20h+var_1C] edx +
jmp loc_4563F0  +
shl edx cl +
add ecx eax +
or edx ebx +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jg loc_456527  +
movzx ebp word ptr [esp+20h+var_20] +
sub ebp 3 +
movzx ebp bp +
shl ebp cl +
add ecx 2 +
or edx ebp +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jmp loc_4563C6  +
movzx esi word ptr [edi+0AC6h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_456880  +
movzx ebx word ptr [edi+0AC4h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
cmp ecx 9 +
jle loc_456860  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 0Ah +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 9 +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_4563C6  +
shl ebx cl +
add ecx eax +
or bx [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] bx +
jmp loc_4564AE  +
mov ecx [edi+16BCh] +
movzx ebx word ptr [edi+16B8h] +
mov [esp+20h+var_20] ebp +
jmp loc_4564AE  +
movzx eax word ptr [edi+0AC0h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
cmp ecx 0Dh +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jg loc_45664E  +
lea edx [ebp-3] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_4563C6  +
lea edx [ebp-0Bh] +
movzx edx dx +
shl edx cl +
add ecx 7 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_4563C6  +
movzx eax word ptr [edi+0AC4h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jmp loc_45677C  +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebp [eax+16BCh] +
mov [esp+18h+var_10] edx +
mov edx [eax+16A0h] +
mov [esp+18h+var_8] ecx +
test edx edx +
jnz loc_456921  +
movzx esi word ptr [eax+16B8h] +
mov word ptr [esp+18h+var_18] si +
mov ebx [esp+18h+var_10] +
movzx edi word ptr [ebx+402h] +
mov ebx 10h +
mov edx ebx +
sub edx edi +
cmp edx ebp +
jl loc_456CC8  +
mov ebx [esp+18h+var_10] +
mov ecx ebp +
lea edx [edi+ebp] +
movzx esi word ptr [ebx+400h] +
mov [eax+16BCh] edx +
shl esi cl +
or si word ptr [esp+18h+var_18] +
mov [eax+16B8h] si +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebx word ptr [eax+16B8h] +
xor ecx ecx +
mov edx ecx +
mov ecx ebp +
mov esi ebx +
jmp loc_4569B9  +
mov ebx [esp+18h+var_10] +
mov edi 10h +
lea ebx [ebx+edx*4] +
movzx edx word ptr [ebx+2] +
sub edi edx +
cmp edi ecx +
jge loc_456C48  +
movzx ebp word ptr [ebx] +
mov ebx ebp +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi ebp +
sub ecx edi +
sar esi cl +
lea ecx [edx+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
jnb loc_456C20  +
mov edx edi +
mov ebx [eax+16A4h] +
lea edi [edx+1] +
mov [esp+18h+var_18] edi +
mov edi [eax+1698h] +
movzx ebx word ptr [ebx+edx*2] +
movzx edx byte ptr [edi+edx] +
test ebx ebx +
jz loc_456935  +
mov [esp+18h+var_C] edx +
mov edi [esp+18h+var_10] +
movzx edx ds:byte_490380[edx] +
lea edi [edi+edx*4+404h] +
movzx ebp word ptr [edi+2] +
mov [esp+18h+var_14] edx +
mov edx 10h +
movzx edi word ptr [edi] +
sub edx ebp +
cmp edx ecx +
jge loc_456C30  +
mov edx edi +
shl edx cl +
mov ecx [eax+14h] +
mov [esp+18h+var_4] edi +
mov edi [eax+8] +
or esi edx +
mov [eax+16B8h] si +
lea edx [ecx+1] +
mov [eax+14h] edx +
mov edx esi +
mov [edi+ecx] dl +
mov ecx [eax+14h] +
mov edi [eax+8] +
lea esi [ecx+1] +
mov [eax+14h] esi +
movzx esi byte ptr [eax+16B9h] +
mov edx esi +
mov esi [esp+18h+var_4] +
mov [edi+ecx] dl +
mov edi [eax+16BCh] +
mov ecx 10h +
sub ecx [eax+16BCh] +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_14] +
mov ebp ds:dword_490C80[edi*4] +
test ebp ebp +
jz loc_456AF3  +
mov edx [esp+18h+var_14] +
mov edi [esp+18h+var_C] +
sub edi ds:dword_490300[edx*4] +
mov edx 10h +
sub edx ebp +
cmp edx ecx +
jge loc_456C95  +
movzx edi di +
mov edx edi +
shl edx cl +
or esi edx +
mov edx [eax+14h] +
mov [eax+16B8h] si +
mov ecx esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov esi [eax+8] +
mov [esi+edx] cl +
mov edx [eax+14h] +
mov esi [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx byte ptr [eax+16B9h] +
mov [esi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
mov esi edi +
sub ecx edx +
sar esi cl +
lea ecx [ebp+edx-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
lea edi [ebx-1] +
cmp edi 0FFh +
ja loc_456C80  +
movzx ebx ds:byte_490480[edi] +
mov [esp+18h+var_14] ebx +
mov edx [esp+18h+var_14] +
mov ebx [esp+18h+var_8] +
lea ebx [ebx+edx*4] +
mov edx 10h +
movzx ebp word ptr [ebx+2] +
movzx ebx word ptr [ebx] +
sub edx ebp +
cmp edx ecx +
mov [esp+18h+var_C] ebp +
jge loc_456C63  +
mov ebp [eax+14h] +
mov edx ebx +
shl ebx cl +
mov ecx [eax+8] +
or ebx esi +
mov [eax+16B8h] bx +
lea esi [ebp+1] +
mov [eax+14h] esi +
mov [ecx+ebp] bl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov ebp [eax+16BCh] +
mov ecx 10h +
mov ebx [esp+18h+var_C] +
mov esi edx +
sub ecx ebp +
sar esi cl +
lea ecx [ebx+ebp-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov ebx [esp+18h+var_14] +
mov ebp ds:dword_490C00[ebx*4] +
test ebp ebp +
jz loc_4569A8  +
sub edi ds:dword_490280[ebx*4] +
mov ebx 10h +
sub ebx ebp +
cmp ebx ecx +
movzx edx di +
jge loc_456CB0  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi edx +
sub ecx edi +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jb loc_4569B7  +
nop   +
lea esi [esi+0] +
mov ebp ecx +
mov word ptr [esp+18h+var_18] si +
jmp loc_4568DA  +
shl edi cl +
add ecx ebp +
or esi edi +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_456A6D  +
movzx ebx word ptr [ebx] +
shl ebx cl +
add ecx edx +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4569A8  +
shl ebx cl +
add ecx [esp+18h+var_C] +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_456B8A  +
mov edx edi +
shr edx 7 +
movzx ebx ds:byte_490580[edx] +
mov [esp+18h+var_14] ebx +
jmp loc_456B0D  +
movzx edx di +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_456AF3  +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4569A8  +
mov esi [esp+18h+var_10] +
mov ecx ebp +
mov ebp [eax+8] +
movzx esi word ptr [esi+400h] +
mov edx esi +
shl edx cl +
mov ecx edx +
mov edx [eax+14h] +
or cx word ptr [esp+18h+var_18] +
mov [esp+18h+var_14] esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [eax+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov ebp [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebp+edx+0] cl +
mov edx [eax+16BCh] +
mov ebp [esp+18h+var_14] +
sub ebx edx +
mov ecx ebx +
sar ebp cl +
lea edx [edi+edx-10h] +
mov [eax+16B8h] bp +
mov [eax+16BCh] edx +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 8 +
jg loc_456D80  +
test edx edx +
jle loc_456D66  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
jmp loc_456D66  +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 10h +
jz loc_456DE8  +
cmp edx 7 +
jle loc_456DE6  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
shr word ptr [eax+16B8h] 8 +
sub dword ptr [eax+16BCh] 8 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
lea eax [edx+94h] +
mov [edx+0B18h] eax +
lea eax [edx+988h] +
mov [edx+0B24h] eax +
lea eax [edx+0A7Ch] +
mov [edx+0B30h] eax +
xor eax eax +
mov [edx+16B8h] ax +
xor eax eax +
mov dword ptr [edx+0B20h] offset off_473868 +
mov dword ptr [edx+0B2Ch] offset off_473854 +
mov dword ptr [edx+0B38h] offset unk_473840 +
mov dword ptr [edx+16BCh] 0 +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+94h] cx +
add eax 1 +
cmp eax 11Eh +
jnz loc_456E90  +
xor ax ax +
xor ecx ecx +
mov [edx+eax*4+988h] cx +
add eax 1 +
cmp eax 1Eh +
jnz loc_456EA7  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_456EC0  +
mov eax 1 +
mov [edx+494h] ax +
mov dword ptr [edx+16ACh] 0 +
mov dword ptr [edx+16A8h] 0 +
mov dword ptr [edx+16B0h] 0 +
mov dword ptr [edx+16A0h] 0 +
retn   +
***
push esi  +
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
movzx eax [esp+arg_C] +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_456FC3  +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov eax ebx +
call sub_456D40  +
mov eax [ebx+14h] +
lea ebp [esi+edi] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
shr cx 8 +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
not ecx  +
mov [edx+eax] cl +
mov edx [ebx+14h] +
mov ecx [ebx+8] +
lea eax [edx+1] +
mov [ebx+14h] eax +
mov eax edi +
not eax  +
shr ax 8 +
test edi edi +
mov [ecx+edx] al +
jz loc_456FBE  +
mov eax [ebx+14h] +
add esi 1 +
mov ecx [ebx+8] +
cmp esi ebp +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [esi-1] +
mov [ecx+eax] dl +
jnz loc_456FA4  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or cx [ebx+16B8h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebx+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebp+edx+0] cl +
mov edx [ebx+16BCh] +
mov ecx 10h +
sub ecx edx +
sub edx 0Dh +
sar eax cl +
mov [ebx+16B8h] ax +
mov [ebx+16BCh] edx +
jmp loc_456F46  +
***
mov eax [esp+arg_0] +
jmp loc_456DB0  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax+16BCh] +
cmp ecx 0Dh +
jle loc_4570C5  +
mov ebx 2 +
mov edx [eax+14h] +
mov edi ebx +
mov esi [eax+8] +
shl edi cl +
mov ecx edi +
or cx [eax+16B8h] +
lea edi [edx+1] +
mov [eax+14h] edi +
mov [eax+16B8h] cx +
mov [esi+edx] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov edi [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [edi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [edx-0Dh] +
cmp ecx 9 +
mov [eax+16B8h] bx +
mov [eax+16BCh] ecx +
jg loc_4570E1  +
add ecx 7 +
mov [eax+16BCh] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_456DB0  +
mov edx 2 +
shl edx cl +
add ecx 3 +
or [eax+16B8h] dx +
cmp ecx 9 +
mov [eax+16BCh] ecx +
jle loc_4570B4  +
mov edx [eax+14h] +
movzx ecx word ptr [eax+16B8h] +
mov ebx [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
sub dword ptr [eax+16BCh] 9 +
mov [eax+16B8h] dx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_456DB0  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [esp+24h+arg_C] +
mov edi [esp+24h+arg_4] +
mov esi [esp+24h+arg_8] +
mov ebp [ebx+84h] +
mov [esp+24h+var_C] eax +
test ebp ebp +
jle loc_45758F  +
mov ecx [ebx] +
cmp dword ptr [ecx+2Ch] 2 +
jz loc_45759B  +
lea edx [ebx+0B18h] +
mov eax ebx +
call sub_455D40  +
lea edx [ebx+0B24h] +
mov eax ebx +
call sub_455D40  +
mov ecx [ebx+0B1Ch] +
lea edx [ebx+94h] +
mov eax ebx +
call sub_4561C0  +
mov ecx [ebx+0B28h] +
lea edx [ebx+988h] +
mov eax ebx +
call sub_4561C0  +
mov eax ebx +
lea edx [ebx+0B30h] +
call sub_455D40  +
mov eax 12h +
movzx edx ds:byte_490B80[eax] +
cmp word ptr [ebx+edx*4+0A7Eh] 0 +
jnz loc_457544  +
sub eax 1 +
cmp eax 2 +
jnz loc_4571B7  +
mov ecx 9 +
mov edx [ebx+16A8h] +
lea ecx [ecx+edx+0Eh] +
mov edx [ebx+16ACh] +
mov [ebx+16A8h] ecx +
add ecx 0Ah +
shr ecx 3 +
add edx 0Ah +
shr edx 3 +
cmp ecx edx +
cmova ecx edx +
lea ebp [esi+4] +
cmp ecx ebp +
jb loc_4572BA  +
test edi edi +
jz loc_4572BA  +
mov eax [esp+24h+var_C] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_456F10  +
xor eax eax +
nop   +
xor edi edi +
mov [ebx+eax*4+94h] di +
add eax 1 +
cmp eax 11Eh +
jnz loc_457230  +
xor ax ax +
xor esi esi +
mov [ebx+eax*4+988h] si +
add eax 1 +
cmp eax 1Eh +
jnz loc_457247  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [ebx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_457260  +
mov edx [esp+24h+var_C] +
mov eax 1 +
mov [ebx+494h] ax +
mov dword ptr [ebx+16ACh] 0 +
mov dword ptr [ebx+16A8h] 0 +
test edx edx +
mov dword ptr [ebx+16B0h] 0 +
mov dword ptr [ebx+16A0h] 0 +
jnz loc_457536  +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+88h] 4 +
jz loc_45754D  +
cmp edx ecx +
jz loc_45754D  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_45760B  +
movzx edi word ptr [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or dx [ebx+16B8h] +
mov [ebx+16BCh] ecx +
mov [ebx+16B8h] dx +
mov esi edx +
mov edi [ebx+0B28h] +
cmp ecx 0Bh +
lea ebp [eax+1] +
mov [esp+24h+var_8] edi +
mov edi [ebx+0B1Ch] +
mov [esp+24h+var_4] edi +
jle loc_457726  +
lea edx [edi-100h] +
movzx edi dx +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov esi edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Bh +
jle loc_457708  +
movzx edi word ptr [esp+24h+var_8] +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov edx edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Ch +
jle loc_4576E7  +
sub eax 3 +
movzx edi ax +
mov eax edi +
shl eax cl +
mov ecx [ebx+8] +
or edx eax +
mov eax [ebx+14h] +
mov [ebx+16B8h] dx +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [ecx+eax] dl +
mov eax [ebx+14h] +
mov ecx [ebx+8] +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [ebx+16B9h] +
mov [ecx+eax] dl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sar edi cl +
lea ecx [eax-0Ch] +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
xor eax eax +
mov [esp+24h+var_14] ebp +
jmp loc_4574CB  +
movzx edx word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
mov esi edx +
shl esi cl +
mov ecx [ebx+14h] +
or esi edi +
mov edi [ebx+8] +
mov [esp+24h+var_10] edx +
mov edx esi +
mov [ebx+16B8h] si +
lea ebp [ecx+1] +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov esi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_10] +
sub ecx esi +
sub esi 0Dh +
sar edx cl +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] esi +
jle loc_457500  +
mov ecx [ebx+16BCh] +
movzx edi word ptr [ebx+16B8h] +
cmp ecx 0Dh +
movzx edx ds:byte_490B80[eax] +
jg loc_457450  +
movzx esi word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
shl esi cl +
add ecx 3 +
or esi edi +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] si +
mov [ebx+16BCh] ecx +
jg loc_4574BE  +
mov ecx [esp+24h+var_4] +
lea esi [ebx+94h] +
mov eax ebx +
mov edx esi +
lea edi [ebx+988h] +
call sub_4562B0  +
mov ecx [esp+24h+var_8] +
mov edx edi +
mov eax ebx +
call sub_4562B0  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_4568B0  +
jmp loc_45722C  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_456D40  +
lea ecx [eax+eax*2+3] +
jmp loc_4571DA  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_457680  +
movzx eax word ptr [esp+24h+var_C] +
add eax 2 +
movzx eax ax +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov ecx offset unk_490680 +
mov edx offset unk_490700 +
mov eax ebx +
call sub_4568B0  +
jmp loc_45722C  +
lea ecx [esi+5] +
xor eax eax +
mov edx ecx +
jmp loc_457201  +
xor eax eax +
mov edx 0F3FFC07Fh +
test dl 1 +
jz loc_4575B6  +
cmp word ptr [ebx+eax*4+94h] 0 +
jnz loc_45774F  +
add eax 1 +
shr edx 1 +
cmp eax 20h +
jnz loc_4575A2  +
cmp word ptr [ebx+0B8h] 0 +
mov edx 1 +
jnz loc_457603  +
cmp word ptr [ebx+0BCh] 0 +
jnz loc_457603  +
cmp word ptr [ebx+0C8h] 0 +
jz loc_4575F3  +
jmp loc_457603  +
add eax 1 +
cmp eax 100h +
jz loc_45774F  +
cmp word ptr [ebx+eax*4+94h] 0 +
jz loc_4575E5  +
mov edx 1 +
mov [ecx+2Ch] edx +
jmp loc_457165  +
mov edi [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
mov edi edx +
shl edi cl +
mov ecx [ebx+14h] +
mov esi edi +
mov edi [ebx+8] +
or si [ebx+16B8h] +
mov [esp+24h+var_14] edx +
lea ebp [ecx+1] +
mov edx esi +
mov [ebx+16B8h] si +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov edi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_14] +
sub ecx edi +
sar edx cl +
lea ecx [edi-0Dh] +
mov esi edx +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_457304  +
mov eax [esp+24h+var_C] +
mov esi [ebx+8] +
lea edx [eax+2] +
movzx edx dx +
mov eax edx +
shl eax cl +
mov ecx eax +
mov eax [ebx+14h] +
or cx [ebx+16B8h] +
lea edi [eax+1] +
mov [ebx+14h] edi +
mov [ebx+16B8h] cx +
mov [esi+eax] cl +
mov eax [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
mov edi [ebx+8] +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [edi+eax] cl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar edx cl +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] eax +
jmp loc_457579  +
lea eax [ebp-4] +
movzx eax ax +
shl eax cl +
add ecx 4 +
or eax edx +
mov [ebx+16B8h] ax +
mov edi eax +
mov [ebx+16BCh] ecx +
jmp loc_457445  +
movzx edx word ptr [esp+24h+var_8] +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_4573E5  +
movzx edi word ptr [esp+24h+var_4] +
lea edx [edi-100h] +
movzx edx dx +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov esi edx +
mov [ebx+16BCh] ecx +
jmp loc_457382  +
xor edx edx +
jmp loc_457603  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+16A0h] +
mov esi [eax+16A4h] +
test ecx ecx +
mov [esi+edx*2] cx +
lea esi [edx+1] +
mov [eax+16A0h] esi +
mov esi [eax+1698h] +
mov [esi+edx] bl +
jz loc_4577F0  +
movzx edx ds:byte_490380[ebx] +
lea esi [ecx-1] +
add dword ptr [eax+16B0h] 1 +
add word ptr [eax+edx*4+498h] 1 +
cmp esi 0FFh +
jbe loc_4577E1  +
shr esi 7 +
movzx edx ds:byte_490580[esi] +
add word ptr [eax+edx*4+988h] 1 +
mov ebx [eax+169Ch] +
lea edx [ebx-1] +
cmp [eax+16A0h] edx +
pop ebx  +
pop esi  +
setz al  +
movzx eax al +
retn   +
***
movzx edx ds:byte_49047F[ecx] +
jmp loc_4577C0  +
***
add word ptr [eax+ebx*4+94h] 1 +
jmp loc_4577C9  +
***
push esi  +
push ebx  +
sub esp 14h +
mov edi dword_473884 +
mov [esp+14h+var_10] eax +
mov eax ds:dword_49A42C +
mov esi ds:dword_49A428 +
mov [esp+14h+var_4] edi +
mov [esp+14h+var_14] edi +
mov edi eax +
mov [esp+14h+var_8] eax +
lea esi [esi+0] +
cmp esi edi +
jle loc_457875  +
cmp [esp+14h+var_14] esi +
jle loc_457875  +
mov edx [esp+14h+var_14] +
mov ebp esi +
sub ebp edi +
sub edx esi +
cmp edx ebp +
jg loc_457894  +
test edx edx +
jle loc_4578CD  +
mov ebx [esp+14h+var_10] +
lea eax [ebx+edi*4] +
add edi edx +
lea edx [ebx+edi*4] +
lea esi [esi+0] +
mov ecx [eax] +
mov ebx [eax+ebp*4] +
mov [eax] ebx +
mov [eax+ebp*4] ecx +
add eax 4 +
cmp eax edx +
jnz loc_457860  +
cmp esi edi +
jg loc_457834  +
mov edi [esp+14h+var_4] +
mov eax edi +
sub eax esi +
add eax [esp+14h+var_8] +
mov ds:dword_49A428 edi +
mov ds:dword_49A42C eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jle loc_4578C5  +
mov ebx [esp+14h+var_10] +
lea edx [ebp+edi+0] +
mov [esp+14h+var_C] esi +
lea eax [ebx+edi*4] +
lea ebx [ebx+edx*4] +
mov edx [esp+14h+var_14] +
sub edx esi +
nop   +
mov ecx [eax] +
mov esi [eax+edx*4] +
mov [eax] esi +
mov [eax+edx*4] ecx +
add eax 4 +
cmp eax ebx +
jnz loc_4578B0  +
mov esi [esp+14h+var_C] +
sub [esp+14h+var_14] ebp +
jmp loc_457830  +
add edi edx +
jmp loc_457830  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax dword_473884 +
mov ds:dword_49A424 0 +
test eax eax +
jnz loc_457B40  +
mov dword_473884 1 +
mov eax 1 +
mov [esp+4Ch+var_4C] offset aPosixly_correc +
mov ds:dword_49A428 eax +
mov ds:dword_49A42C eax +
mov ds:dword_49A438 0 +
call getenv  +
mov edi [esp+4Ch+arg_8] +
movzx edx byte ptr [edi] +
mov ds:dword_49A430 eax +
cmp dl 2Dh +
jz loc_457DD3  +
cmp dl 2Bh +
jz loc_457D82  +
test eax eax +
setz al  +
movzx eax al +
mov ds:dword_49A434 eax +
mov ds:dword_49A420 1 +
mov edx ds:dword_49A438 +
test edx edx +
jz loc_457B53  +
movzx eax byte ptr [edx] +
test al al +
mov byte ptr [esp+4Ch+var_2C] al +
jz loc_457B53  +
mov [esp+4Ch+var_34] edx +
mov ecx [esp+4Ch+arg_C] +
test ecx ecx +
jz loc_457C04  +
mov eax dword_473884 +
lea edi ds:0[eax*4] +
mov [esp+4Ch+var_10] edi +
mov edi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_24] eax +
mov eax [edi+eax*4] +
mov [esp+4Ch+var_20] eax +
movzx eax byte ptr [eax+1] +
cmp al 2Dh +
mov [esp+4Ch+var_19] al +
jz loc_457A02  +
mov edx [esp+4Ch+arg_14] +
test edx edx +
jz loc_457C04  +
mov eax [esp+4Ch+var_20] +
cmp byte ptr [eax+2] 0 +
jnz loc_457A02  +
mov eax [esp+4Ch+arg_8] +
movzx ecx byte ptr [eax] +
test cl cl +
jz loc_457A02  +
movzx ebx [esp+4Ch+var_19] +
cmp bl cl +
jnz loc_4579F8  +
jmp loc_4582BA  +
cmp bl dl +
jz loc_457F73  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_4579F0  +
movzx eax byte ptr [esp+4Ch+var_2C] +
mov esi [esp+4Ch+var_34] +
test al al +
jz loc_457A23  +
cmp al 3Dh +
jnz loc_457A19  +
jmp loc_457A23  +
test al al +
jz loc_457A23  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jnz loc_457A15  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_457ED2  +
mov eax esi +
mov ebx [esp+4Ch+arg_C] +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_18] esi +
mov [esp+4Ch+var_14] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_30] 0 +
jmp loc_457A74  +
mov [esp+4Ch+var_28] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_457AB8  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_457A68  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_457EA3  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_457A60  +
mov [esp+4Ch+var_30] ebx +
add ebx 10h +
mov ebp [ebx] +
mov [esp+4Ch+var_14] edi +
add edi 1 +
test ebp ebp +
jnz loc_457A74  +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_18] +
test eax eax +
jz loc_457E40  +
mov eax dword_473880 +
mov esi [esp+4Ch+var_24] +
mov ebx [esp+4Ch+var_34] +
test eax eax +
jz loc_457B0F  +
mov eax [esp+4Ch+arg_4] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_48] offset aSOptionSIsAmbi +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_49A438 +
mov esi dword_473884 +
mov [esp+4Ch+var_4C] ebx +
add esi 1 +
call strlen  +
mov dword_473884 esi +
mov dword_47387C 0 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_49A438 ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_49A420 +
test esi esi +
jz loc_45790D  +
jmp loc_457962  +
mov eax dword_473884 +
cmp ds:dword_49A428 eax +
jle loc_457B65  +
mov ds:dword_49A428 eax +
cmp eax ds:dword_49A42C +
jge loc_457B72  +
mov ds:dword_49A42C eax +
mov ebx ds:dword_49A434 +
cmp ebx 1 +
jz loc_457CF0  +
cmp [esp+4Ch+arg_0] eax +
jz loc_457D5C  +
mov edi [esp+4Ch+arg_4] +
mov ecx 3 +
mov ebp [edi+eax*4] +
mov edi offset asc_491110 +
mov esi ebp +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_457CC0  +
mov edx ds:dword_49A42C +
add eax 1 +
mov ecx ds:dword_49A428 +
mov dword_473884 eax +
cmp edx ecx +
jz loc_457EB0  +
cmp eax ecx +
jz loc_457BE1  +
mov eax [esp+4Ch+arg_4] +
call sub_457800  +
mov edx ds:dword_49A42C +
mov eax [esp+4Ch+arg_0] +
cmp eax edx +
mov ds:dword_49A428 eax +
mov dword_473884 eax +
jnz loc_457D6F  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+arg_8] +
mov ecx [esp+4Ch+var_34] +
movzx eax byte ptr [eax] +
add ecx 1 +
mov ds:dword_49A438 ecx +
test al al +
jz loc_457C42  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp bl al +
jz loc_458131  +
mov eax [esp+4Ch+arg_8] +
jmp loc_457C38  +
cmp dl bl +
jz loc_457DE7  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_457C30  +
mov edx 1 +
xor eax eax +
mov edi [esp+4Ch+var_34] +
cmp byte ptr [edi+1] 0 +
jnz loc_457C5A  +
add dword_473884 1 +
test dl dl +
jz loc_457E11  +
mov ecx dword_473880 +
test ecx ecx +
jz loc_457E31  +
mov eax [esp+4Ch+arg_4] +
mov edx ds:dword_49A430 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
mov eax [eax] +
test edx edx +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] eax +
jz loc_4580AB  +
mov [esp+4Ch+var_48] offset aSIllegalOption +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax ebx +
mov dword_47387C eax +
add esp 4Ch +
mov eax 3Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebp+0] 2Dh +
jz loc_457D96  +
test ebx ebx +
jz loc_457BF7  +
add eax 1 +
mov dword_473884 eax +
mov eax 1 +
mov ds:dword_49A424 ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_49A42C +
mov edx ds:dword_49A428 +
cmp ecx edx +
jz loc_457F61  +
cmp eax edx +
jz loc_457D16  +
mov eax [esp+4Ch+arg_4] +
call sub_457800  +
mov eax dword_473884 +
cmp [esp+4Ch+arg_0] eax +
mov edx eax +
jle loc_457D4C  +
mov esi [esp+4Ch+arg_0] +
mov ecx [esp+4Ch+arg_4] +
jmp loc_457D39  +
add edx 1 +
cmp edx esi +
mov dword_473884 edx +
jz loc_457E00  +
mov eax [ecx+edx*4] +
cmp byte ptr [eax] 2Dh +
jnz loc_457D28  +
cmp byte ptr [eax+1] 0 +
jz loc_457D28  +
mov eax dword_473884 +
mov ds:dword_49A428 edx +
cmp [esp+4Ch+arg_0] eax +
jnz loc_457B8B  +
mov eax ds:dword_49A428 +
mov edx ds:dword_49A42C +
cmp eax edx +
jz loc_457BF7  +
mov dword_473884 edx +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_49A434 0 +
add [esp+4Ch+arg_8] 1 +
jmp loc_457958  +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jz loc_457CCA  +
mov ebx [esp+4Ch+arg_C] +
test ebx ebx +
jz loc_457F57  +
xor eax eax +
cmp cl 2Dh +
setz al  +
add eax 1 +
lea edx [ebp+eax+0] +
movzx eax byte ptr [edx] +
mov ds:dword_49A438 edx +
mov [esp+4Ch+var_34] edx +
mov byte ptr [esp+4Ch+var_2C] al +
jmp loc_457983  +
mov ds:dword_49A434 2 +
add [esp+4Ch+arg_8] 1 +
jmp loc_457958  +
test eax eax +
setz dl  +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz bl  +
or edx ebx +
jmp loc_457C49  +
mov eax [esp+4Ch+arg_0] +
mov edx eax +
mov ds:dword_49A428 edx +
jmp loc_457D52  +
cmp byte ptr [eax] 57h +
movzx edx byte ptr [eax+1] +
jz loc_457F87  +
cmp dl 3Ah +
jz loc_458072  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_457CE5  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_457CAB  +
mov ebx [esp+4Ch+var_30] +
test ebx ebx +
jz loc_457ED2  +
mov edi [esp+4Ch+var_14] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
mov dword_473884 eax +
cmp byte ptr [esi] 0 +
jnz loc_457EBC  +
cmp dword ptr [ebx+4] 1 +
jz loc_45817B  +
mov esi [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
call strlen  +
mov ebp [esp+4Ch+arg_10] +
add eax esi +
test ebp ebp +
mov ds:dword_49A438 eax +
jz loc_457E8C  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [ebx+8] +
test eax eax +
jz loc_4581CD  +
mov edx [ebx+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_457CE5  +
mov esi [esp+4Ch+var_18] +
jmp loc_457E50  +
mov ds:dword_49A42C eax +
mov edx eax +
jmp loc_457BE1  +
mov eax [ebx+4] +
test eax eax +
jz loc_4580B8  +
add esi 1 +
mov ds:dword_49A424 esi +
jmp loc_457E6B  +
mov edi [esp+4Ch+arg_14] +
test edi edi +
jnz loc_4582C4  +
mov esi dword_473880 +
mov eax [esp+4Ch+var_24] +
test esi esi +
jz loc_457F31  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_45841E  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_3C] edi +
movsx edx byte ptr [ecx] +
mov [esp+4Ch+var_48] offset aSUnrecognizedO +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
mov [esp+4Ch+var_40] edx +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_473884 +
add eax 1 +
mov dword_473884 eax +
mov eax 3Fh +
mov ds:dword_49A438 offset unk_4911FC +
mov dword_47387C 0 +
jmp loc_457CE5  +
mov eax 1 +
jmp loc_457DB9  +
cmp eax ecx +
jz loc_457D16  +
mov ds:dword_49A42C eax +
jmp loc_457D16  +
mov eax ecx +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
mov ds:dword_49A438 ecx +
jmp loc_457C1C  +
cmp dl 3Bh +
jnz loc_457E1E  +
mov eax [esp+4Ch+var_34] +
cmp byte ptr [eax+1] 0 +
jz loc_45828D  +
add dword_473884 1 +
mov ds:dword_49A424 ecx +
mov [esp+4Ch+var_34] ecx +
mov eax [esp+4Ch+var_34] +
movzx ebx byte ptr [eax] +
mov ds:dword_49A438 eax +
cmp bl 3Dh +
jz loc_458563  +
test bl bl +
jz loc_458563  +
mov esi eax +
jmp loc_457FD4  +
test bl bl +
jz loc_457FDF  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Dh +
jnz loc_457FD0  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_45854F  +
mov eax esi +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov byte ptr [esp+4Ch+var_24] bl +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_20] esi +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
jmp loc_458038  +
mov [esp+4Ch+var_2C] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_4581D5  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_458028  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_458402  +
mov ebp [esp+4Ch+var_30] +
test ebp ebp +
jnz loc_458020  +
mov [esp+4Ch+var_28] edi +
mov [esp+4Ch+var_30] ebx +
jmp loc_458028  +
cmp byte ptr [eax+2] 3Ah +
mov eax [esp+4Ch+var_34] +
jz loc_4581A7  +
cmp byte ptr [eax+1] 0 +
jz loc_45814D  +
add dword_473884 1 +
movsx eax byte ptr [esp+4Ch+var_2C] +
mov ds:dword_49A424 ecx +
mov ds:dword_49A438 0 +
jmp loc_457CE5  +
mov [esp+4Ch+var_48] offset aSInvalidOption +
jmp loc_457C99  +
mov eax dword_473880 +
test eax eax +
jz loc_457E6B  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov eax [eax+edi*4] +
cmp byte ptr [eax+1] 2Dh +
jz loc_458324  +
mov ecx [ebx] +
mov edi [esp+4Ch+arg_4] +
mov edx [edi] +
mov [esp+4Ch+var_3C] ecx +
movsx eax byte ptr [eax] +
mov [esp+4Ch+var_48] offset aSOptionCSDoesn +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_49A438 +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_49A438 esi +
mov dword_47387C eax +
mov eax 3Fh +
jmp loc_457CE5  +
mov ebx [esp+4Ch+arg_8] +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz dl  +
test ebx ebx +
setz al  +
or edx eax +
mov eax [esp+4Ch+arg_8] +
jmp loc_457C49  +
mov eax dword_473884 +
cmp eax [esp+4Ch+arg_0] +
jz loc_458351  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_473884 edx +
mov eax [ecx+eax*4] +
mov ds:dword_49A424 eax +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_45809C  +
cmp [esp+4Ch+arg_0] eax +
jle loc_45824D  +
mov eax [esp+4Ch+var_24] +
mov ecx [esp+4Ch+var_10] +
add eax 2 +
mov dword_473884 eax +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+ecx+4] +
mov ds:dword_49A424 eax +
jmp loc_457E6B  +
cmp byte ptr [eax+1] 0 +
jz loc_458315  +
add dword_473884 1 +
mov ds:dword_49A424 ecx +
mov ds:dword_49A438 0 +
jmp loc_457E27  +
mov eax [ebx+0Ch] +
jmp loc_457CE5  +
mov edi [esp+4Ch+var_2C] +
movzx ebx byte ptr [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_20] +
test edi edi +
jz loc_45837F  +
mov ecx dword_473880 +
mov ebx [esp+4Ch+var_34] +
test ecx ecx +
jz loc_45822C  +
mov eax dword_473884 +
mov ecx [esp+4Ch+arg_4] +
mov edx [ecx+eax*4] +
mov eax [ecx] +
mov [esp+4Ch+var_48] offset aSOptionWSIsAmb +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_49A438 +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
add dword_473884 1 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_49A438 ebx +
jmp loc_457CE5  +
mov eax dword_473880 +
mov esi [esp+4Ch+var_34] +
test eax eax +
jnz loc_458452  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_49A438 esi +
mov dword_47387C eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_457CB0  +
mov eax 3Ah +
jmp loc_457CE5  +
mov eax dword_473884 +
cmp eax [esp+4Ch+arg_0] +
jz loc_45848A  +
mov edi [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_473884 edx +
mov eax [edi+eax*4] +
mov ds:dword_49A424 eax +
mov [esp+4Ch+var_34] eax +
jmp loc_457FAF  +
movzx eax [esp+4Ch+var_19] +
jmp loc_457F75  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_458411  +
mov eax [esp+4Ch+arg_8] +
movzx eax byte ptr [eax] +
test al al +
jz loc_4582FF  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp al bl +
jz loc_45859F  +
mov edx [esp+4Ch+arg_8] +
jmp loc_4582F5  +
cmp cl bl +
jz loc_457F75  +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_4582ED  +
cmp dword_473880 0 +
jnz loc_457EF7  +
mov eax [esp+4Ch+var_24] +
jmp loc_457F31  +
mov ds:dword_49A424 0 +
jmp loc_4581BE  +
mov eax [esp+4Ch+arg_4] +
mov edx [ebx] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionSDoesnT +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_458109  +
mov eax dword_473880 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jnz loc_458524  +
mov eax [esp+4Ch+arg_8] +
mov dword_47387C ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_45809C  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_45854F  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+arg_C] eax +
test bl bl +
mov eax [esp+4Ch+arg_C] +
jz loc_4584DA  +
cmp dword ptr [eax+4] 0 +
jnz loc_458591  +
cmp dword_473880 0 +
jz loc_4583DE  +
mov eax [esp+4Ch+arg_C] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionWSDoesn +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_49A438 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_49A438 eax +
mov eax 3Fh +
jmp loc_457CE5  +
mov [esp+4Ch+arg_C] ebx +
mov esi [esp+4Ch+var_20] +
movzx ebx byte ptr [esp+4Ch+var_24] +
jmp loc_458393  +
cmp dword_473880 0 +
jz loc_45830C  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov eax [eax] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_48] offset aSUnrecognize_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_473884 +
jmp loc_457F31  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov edx [eax+edi*4] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_49A438 +
jmp loc_45825E  +
mov eax dword_473880 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jz loc_4584BE  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+arg_8] +
mov dword_47387C ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_457CE5  +
cmp dword ptr [eax+4] 1 +
jz loc_45856C  +
mov ebx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
mov edx [esp+4Ch+arg_10] +
add eax ebx +
test edx edx +
mov ds:dword_49A438 eax +
jz loc_458505  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+8] +
test eax eax +
jz loc_4585A9  +
mov edi [esp+4Ch+arg_C] +
mov edx [edi+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_457CE5  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_458363  +
mov ds:dword_49A438 0 +
mov eax 57h +
jmp loc_457CE5  +
mov esi [esp+4Ch+var_34] +
jmp loc_457FDF  +
mov eax dword_473884 +
cmp [esp+4Ch+arg_0] eax +
jle loc_4585B5  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_473884 edx +
mov eax [ecx+eax*4] +
mov ds:dword_49A424 eax +
jmp loc_4584E4  +
add esi 1 +
mov ds:dword_49A424 esi +
jmp loc_4584E4  +
movzx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_457F75  +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+0Ch] +
jmp loc_457CE5  +
cmp dword_473880 0 +
jz loc_4585E8  +
mov edi [esp+4Ch+arg_4] +
mov edx [edi+eax*4-4] +
mov eax [edi] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_49A438 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_49A438 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_457CB0  +
jmp loc_458283  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4578E0  +
add esp 2Ch +
retn   +
***
mov eax [esp+arg_0] +
mov off_473888 eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 18h +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
test esi esi +
jz loc_458836  +
mov ecx [esi] +
test ecx ecx +
jz loc_45882B  +
xor eax eax +
nop   +
add eax 1 +
mov edx [esi+eax*4] +
test edx edx +
jnz loc_4587B0  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_4586C0  +
mov [esp+1Ch+var_10] eax +
mov eax [esi] +
test eax eax +
jz loc_458832  +
lea ebx [esi+4] +
mov ebp esi +
xor edi edi +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add edi [esp+1Ch+var_10] +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_4586C0  +
mov [edi] eax +
mov edx [ebp+0] +
mov edi ebx +
mov ebp ebx +
add ebx 4 +
mov [esp+1Ch+var_1C] eax +
sub edi esi +
mov [esp+1Ch+var_18] edx +
call strcpy  +
mov eax [ebx-4] +
test eax eax +
jnz loc_4587E0  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax+edi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_4587C1  +
xor edi edi +
jmp loc_458818  +
xor eax eax +
jmp loc_458823  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_458874  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_458866  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_458855  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
test ebx ebx +
jz loc_458A93  +
mov [esp+2Ch+var_2C] ebx +
xor esi esi +
xor ebp ebp +
call strlen  +
xor edi edi +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_4586C0  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_14] eax +
jmp loc_4588D3  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test byte ptr ds:word_490F00[eax+eax] 40h +
jnz loc_4588D0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_458A16  +
mov eax [esp+2Ch+var_18] +
sub eax 1 +
cmp [esp+2Ch+var_1C] eax +
jge loc_458A16  +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebx] +
mov edx [esp+2Ch+var_14] +
test al al +
jnz loc_458931  +
jmp loc_458976  +
mov [edx] al +
xor esi esi +
add edx 1 +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_458976  +
movzx ecx al +
test byte ptr ds:word_490F00[ecx+ecx] 40h +
jz loc_45894A  +
mov ecx esi +
or ecx edi +
or ecx ebp +
jz loc_458A70  +
test esi esi +
jnz loc_458920  +
cmp al 5Ch +
jz loc_4589F6  +
test edi edi +
jz loc_4589E3  +
cmp al 27h +
jz loc_458A57  +
add ebx 1 +
add edx 1 +
mov [edx-1] al +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_458931  +
mov eax [esp+2Ch+var_14] +
mov byte ptr [edx] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_45F0E0  +
mov edx [esp+2Ch+var_10] +
add [esp+2Ch+var_1C] 1 +
mov [edx] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
mov dword ptr [eax+edx*4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 40h +
jz loc_4589C3  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 40h +
jnz loc_4589B0  +
test al al +
jnz loc_4588D3  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+var_20] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jz loc_458A00  +
cmp al 22h +
jnz loc_458966  +
xor ebp ebp +
jmp loc_458927  +
mov esi 1 +
jmp loc_458927  +
cmp al 27h +
jz loc_458A60  +
cmp al 22h +
jnz loc_458966  +
mov ebp 1 +
jmp loc_458927  +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_458A79  +
shl [esp+2Ch+var_18] 1 +
mov eax [esp+2Ch+var_18] +
shl eax 2 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_2C] eax +
call sub_458740  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
mov dword ptr [eax] 0 +
jmp loc_45890C  +
xor edi edi +
jmp loc_458927  +
mov edi 1 +
jmp loc_458927  +
xor esi esi +
xor ebp ebp +
jmp loc_458976  +
mov [esp+2Ch+var_2C] 20h +
call sub_4586C0  +
mov [esp+2Ch+var_18] 8 +
mov [esp+2Ch+var_20] eax +
jmp loc_458A3D  +
mov [esp+2Ch+var_20] 0 +
jmp loc_4589D7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov edi [esp+30h] +
test esi esi +
jz loc_458B0C  +
mov ebx [edi] +
test ebx ebx +
jnz loc_458ADC  +
jmp loc_458B3D  +
cmp al 27h +
jz loc_458AF7  +
cmp al 22h +
jz loc_458AF7  +
mov [esp+4] esi +
mov [esp] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_458B0C  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_458B20  +
movzx edx al +
movsx ebp al +
test byte ptr ds:word_490F00[edx+edx] 40h +
jnz loc_458AF7  +
cmp al 5Ch +
jnz loc_458AC0  +
mov [esp+4] esi +
mov dword ptr [esp] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_458AC8  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_458B0C  +
add edi 4 +
jmp loc_458AB3  +
***
xor eax eax +
nop   +
jmp loc_458B11  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+48h+arg_0] +
lea ebx [ebp+1] +
mov [esp+48h+var_30] 7D0h +
mov ecx [eax] +
cmp ebx ecx +
jge loc_458B8E  +
nop   +
mov eax [esp+48h+arg_4] +
lea edi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_458B96  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_458B70  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+48h+var_30] 1 +
jz loc_458E01  +
add eax 1 +
mov [esp+48h+var_44] offset aR +
mov [esp+48h+var_48] eax +
call fopen  +
test eax eax +
mov esi eax +
jz loc_458D88  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_458D80  +
mov [esp+48h+var_48] esi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+48h+var_2C] eax +
jz loc_458D80  +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] esi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_458D80  +
mov edx [esp+48h+var_2C] +
lea eax [edx+1] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] edx +
call sub_4586C0  +
mov edx [esp+48h+var_28] +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_2C] eax +
call fread  +
mov edx [esp+48h+var_28] +
cmp edx eax +
mov ecx eax +
jz loc_458C6A  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_28] eax +
call ferror  +
mov ecx [esp+48h+var_28] +
test eax eax +
jnz loc_458D80  +
mov eax [esp+48h+var_2C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_458CA8  +
test byte ptr ds:word_490F00[eax+eax] 40h +
jz loc_458D95  +
mov eax [esp+48h+var_2C] +
jmp loc_458C9E  +
test byte ptr ds:word_490F00[edx+edx] 40h +
jz loc_458D95  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_458C90  +
mov [esp+48h+var_48] 4 +
call sub_4586C0  +
mov dword ptr [eax] 0 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_458790  +
xor edx edx +
mov [esp+48h+var_20] 0 +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
mov ecx [esp+48h+arg_0] +
mov eax edx +
mov [esp+48h+var_1C] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+48h+var_44] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call sub_458740  +
mov ecx [esp+48h+arg_4] +
mov edx [esp+48h+var_1C] +
mov [esp+48h+var_28] edx +
mov [ecx] eax +
mov ecx [esp+48h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+48h+var_40] ecx +
lea ecx [eax+edi+4] +
lea eax [eax+ebx*4] +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] eax +
call memmove  +
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+var_24] +
add edi [eax] +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+arg_0] +
mov edx [esp+48h+var_28] +
mov edi [esp+48h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [edi] eax +
mov [esp+48h+var_48] ebx +
mov ebx ebp +
call free  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call free  +
nop   +
mov [esp+48h+var_48] esi +
call fclose  +
mov eax [esp+48h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_458B87  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call sub_458880  +
mov edx [eax] +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_458790  +
mov edx [esp+48h+var_20] +
test edx edx +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
jz loc_458E2B  +
mov eax [esp+48h+var_24] +
xor edx edx +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_1C] ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ebp ds:0[edx*4] +
jnz loc_458DE0  +
mov [esp+48h+var_20] ebp +
mov ebp [esp+48h+var_1C] +
mov [esp+48h+var_28] ecx +
jmp loc_458CE2  +
mov eax [edx] +
mov [esp+48h+var_44] offset aSErrorTooMany@ +
mov [esp+48h+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+48h+var_48] eax +
call fprintf  +
mov [esp+48h+var_48] 1 +
call sub_458EF0  +
mov [esp+48h+var_20] 0 +
jmp loc_458CE2  +
***
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_458E50  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4578E0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+14h] 1 +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4578E0  +
add esp 2Ch +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_49A854 +
test eax eax +
jz loc_458EFE  +
call eax  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call exit  +
mov eax ds:dword_49A43C +
test eax eax +
jz loc_458F20  +
retn   +
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov esi ds:GetTempPathA +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call esi  +
sub esp 8 +
test eax eax +
mov ebx eax +
jnz loc_458F58  +
mov eax ds:dword_49A43C +
test eax eax +
jz loc_458F8C  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call sub_4586C0  +
mov [esp+1Ch+var_1C] ebx +
mov ds:dword_49A43C eax +
mov [esp+1Ch+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jnz loc_458F48  +
mov eax ds:dword_49A43C +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ds:dword_49A43C 0 +
mov [esp+1Ch+var_1C] offset a_ +
call sub_45F0E0  +
mov ds:dword_49A43C eax +
jmp loc_458F51  +
***
push esi  +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_4590B0  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_49A440 +
call sprintf  +
add esp 18h +
mov eax offset unk_49A440 +
pop ebx  +
retn   +
***
push ebx  +
mov edx [eax] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test byte ptr ds:word_490F00[esi+esi] 4 +
jz loc_459125  +
lea esi [esi+0] +
lea ecx [ecx+ecx*4] +
mov [eax] edx +
lea ecx [ebx+ecx*2-30h] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test byte ptr ds:word_490F00[esi+esi] 4 +
jnz loc_459100  +
test ecx ecx +
js loc_459125  +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
movsx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_459150  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_459178  +
add edx 1 +
sub eax 30h +
mov [ebx] edx +
pop ebx  +
retn   +
lea eax [edx+1] +
mov [ebx] eax +
movzx eax byte ptr [edx+1] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_459178  +
mov eax ebx +
call sub_4590E0  +
mov edx [ebx] +
cmp byte ptr [edx] 5Fh +
jnz loc_459178  +
add edx 1 +
mov [ebx] edx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
movzx edx cl +
test byte ptr ds:word_490F00[edx+edx] 4 +
jz loc_4591F0  +
sub ecx 30h +
lea ebx [eax+1] +
mov [ebp+0] ecx +
mov [edi] ebx +
movsx edx byte ptr [eax+1] +
mov eax 1 +
movzx esi dl +
test byte ptr ds:word_490F00[esi+esi] 4 +
jz loc_4591E4  +
nop   +
lea esi [esi+0] +
add ebx 1 +
lea eax [ecx+ecx*4] +
lea ecx [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx esi dl +
test byte ptr ds:word_490F00[esi+esi] 4 +
jnz loc_4591C0  +
cmp dl 5Fh +
mov eax 1 +
jz loc_4591F7  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov [edi] ebx +
mov [ebp+0] ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx [ebx+10h] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_459239  +
mov eax [ebx+8] +
sub edx 1 +
mov [ebx+10h] edx +
lea ecx [esi-4] +
mov eax [eax+esi] +
test eax eax +
jnz loc_459296  +
mov esi ecx +
test edx edx +
jg loc_459224  +
mov edx [ebx+14h] +
mov edi [ebx+0Ch] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_459262  +
mov ecx [edi+esi] +
sub edx 1 +
mov [ebx+14h] edx +
lea eax [esi-4] +
test ecx ecx +
jnz loc_4592B0  +
mov esi eax +
test edx edx +
jg loc_459250  +
test edi edi +
jz loc_459279  +
mov [esp+10h+var_10] edi +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+8] +
test eax eax +
jz loc_45928F  +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] eax +
call free  +
mov eax [ebx+8] +
mov dword ptr [eax+esi] 0 +
jmp loc_459218  +
mov [esp+10h+var_10] ecx +
call free  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+esi] 0 +
jmp loc_45923D  +
***
sub esp 18h +
mov edx [eax+14h] +
mov eax [eax+1Ch] +
cmp edx eax +
jl loc_459331  +
test eax eax +
jz loc_459316  +
lea edx [eax+eax] +
mov [ebx+1Ch] edx +
mov edx [ebx+0Ch] +
shl eax 3 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_458740  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
mov dword ptr [eax+edx*4] 0 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov dword ptr [ebx+1Ch] 5 +
mov [esp+18h+var_18] 14h +
call sub_4586C0  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
jmp loc_459302  +
mov eax [ebx+0Ch] +
jmp loc_459302  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+18h] +
cmp [ebx+10h] eax +
jl loc_459374  +
test eax eax +
jz loc_4593B0  +
lea edx [eax+eax] +
mov [ebx+18h] edx +
mov edx [ebx+8] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_458740  +
mov [ebx+8] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_4586C0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+10h] +
mov edx [ebx+8] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+10h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+18h] 5 +
mov [esp+28h+var_28] 14h +
call sub_4586C0  +
mov [ebx+8] eax +
jmp loc_459374  +
***
cmp eax 56h +
jz loc_4593F6  +
cmp eax 75h +
jz loc_4593F0  +
cmp eax 43h +
jz loc_4593E7  +
sub esp 0Ch +
call abort  +
mov eax 1 +
retn   +
mov eax 4 +
retn   +
mov eax 2 +
retn   +
***
cmp eax 7 +
push edi  +
push ebx  +
sub esp 14h +
lea edx [eax+20h] +
lea eax [eax+4] +
call sub_459460  +
mov eax [esi+4] +
test eax eax +
jz loc_4594DF  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_459515  +
mov edx [esi+44h] +
test edx edx +
jle loc_459506  +
xor ebx ebx +
nop   +
mov eax [eax+ebx*4] +
add ebx 1 +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+40h] +
cmp [esi+44h] ebx +
jg loc_4594F0  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+40h] 0 +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_459550  +
mov eax [ebx] +
test eax eax +
jz loc_459541  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx] 0 +
mov ebx [esi+4Ch] +
mov [esp+18h+var_18] ebx +
call free  +
mov dword ptr [esi+4Ch] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
lea eax [ecx+1] +
mov [esp+28h+var_28] eax +
call sub_4586C0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov ebx eax +
call memcpy  +
mov eax [edi] +
mov edx [esp+28h+arg_0] +
mov byte ptr [ebx+esi] 0 +
mov [eax+edx*4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_4595E0  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_4595D9  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_458740  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_4586C0  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_1C] edx +
mov edx ecx +
call sub_4595A0  +
mov eax [edi+4] +
mov esi [edi] +
lea ebx [eax-1] +
cmp ebx esi +
jb loc_459672  +
movzx eax byte ptr [ebx] +
sub ebx 1 +
mov [ebx+ebp+1] al +
mov esi [edi] +
cmp ebx esi +
jnb loc_459662  +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_20] ebp +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call memcpy  +
add [edi+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_4596A0  +
***
push ebx  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_4595A0  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 44h +
lea ebx [esp+48h+var_29] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] offset unk_4913EC +
mov [esp+48h+var_48] ebx +
call sprintf  +
cmp byte ptr [esp+48h+var_29] 0 +
jz loc_45973F  +
mov edx ebx +
mov eax esi +
call sub_4596D0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax] +
movzx ecx byte ptr [eax] +
cmp cl 2Dh +
jz loc_4597D0  +
cmp cl 2Bh +
jz loc_4597C0  +
movzx edx cl +
xor eax eax +
test byte ptr ds:word_490F00[edx+edx] 4 +
jnz loc_459798  +
jmp loc_4597B5  +
mov ecx [ebx] +
lea eax [ecx+1] +
mov [ebx] eax +
movzx ecx byte ptr [ecx+1] +
movzx eax cl +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_4597B0  +
test cl cl +
mov ds:byte_49A480 cl +
jz loc_459780  +
mov edx offset byte_49A480 +
mov eax esi +
call sub_4596D0  +
jmp loc_459780  +
mov eax 1 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_459768  +
mov edx offset byte_49A480 +
mov eax esi +
mov ds:byte_49A480 2Dh +
call sub_4596D0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_459768  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [edx] +
cmp eax ecx +
jz loc_459835  +
mov esi ecx +
sub esi eax +
mov eax ebx +
mov edx esi +
call sub_4595A0  +
mov edx [edi] +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ebp +
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov esi ebx +
call sub_4594B0  +
mov eax ebp +
call sub_459210  +
test ebp 1 +
mov eax 54h +
jnz loc_459AFB  +
test edi 2 +
jnz loc_459AE6  +
mov ecx eax +
xor edx edx +
shr ecx 2 +
test al 2 +
movs   +
jz loc_459890  +
movzx edx word ptr [esi] +
mov [edi] dx +
mov edx 2 +
test al 1 +
jz loc_45989B  +
movzx eax byte ptr [esi+edx] +
mov [edi+edx] al +
mov eax [ebx+24h] +
test eax eax +
jnz loc_459A18  +
mov eax [ebx+20h] +
xor esi esi +
test eax eax +
jle loc_459901  +
nop   +
mov eax [ebx+4] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+4] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4586C0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+4] +
mov ecx [eax+esi*4] +
mov eax [ebp+4] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+20h] esi +
jg loc_4598B0  +
mov eax [ebx+18h] +
test eax eax +
jnz loc_459AD3  +
mov eax [ebx+10h] +
xor esi esi +
test eax eax +
jle loc_459966  +
mov eax [ebx+8] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+8] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4586C0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+8] +
mov ecx [eax+esi*4] +
mov eax [ebp+8] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+10h] esi +
jg loc_459915  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_459AC0  +
mov edi [ebx+14h] +
xor esi esi +
test edi edi +
jle loc_4599D1  +
lea esi [esi+0] +
mov eax [ebx+0Ch] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+0Ch] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4586C0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+0Ch] +
mov ecx [eax+esi*4] +
mov eax [ebp+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+14h] esi +
jg loc_459980  +
mov eax [ebx+44h] +
test eax eax +
jnz loc_459A30  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_459AB4  +
mov [esp+28h+var_28] 0Ch +
call sub_4586C0  +
mov [ebp+4Ch] eax +
mov edx [ebx+4Ch] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov ecx [edx+4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_459800  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4586C0  +
mov [ebp+4] eax +
jmp loc_4598A6  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4586C0  +
mov edx [ebx+44h] +
test edx edx +
mov [ebp+40h] eax +
jle loc_4599D8  +
mov [esp+28h+var_1C] eax +
xor esi esi +
jmp loc_459A57  +
mov eax [ebp+40h] +
mov [esp+28h+var_1C] eax +
mov eax [ebx+40h] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [esp+28h+var_1C] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4586C0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+40h] +
mov ecx [eax+esi*4] +
mov eax [ebp+40h] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+44h] esi +
jg loc_459A50  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jnz loc_4599E3  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4586C0  +
mov [ebp+0Ch] eax +
jmp loc_459971  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4586C0  +
mov [ebp+8] eax +
jmp loc_45990C  +
movzx edx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] dx +
jmp loc_459878  +
movzx eax byte ptr [ebx] +
lea edi [ebp+1] +
lea esi [ebx+1] +
mov [ebp+0] al +
mov eax 53h +
jmp loc_45986C  +
***
jmp sub_459B20  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+24h] +
cmp [ebx+20h] eax +
jl loc_459B4F  +
test eax eax +
jnz loc_459B87  +
mov dword ptr [ebx+24h] 3 +
mov [esp+28h+var_28] 0Ch +
call sub_4586C0  +
mov [ebx+4] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_4586C0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+20h] +
mov edx [ebx+4] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+20h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+eax] +
mov [ebx+24h] edx +
mov edx [ebx+4] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_458740  +
mov [ebx+4] eax +
jmp loc_459B4F  +
***
mov eax [esp+4] +
mov byte_47388C al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+30h] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] eax +
jmp loc_459BE8  +
add ebx 1 +
cmp ebx 4Fh +
jz loc_459C40  +
lea esi [ebx+ebx*2] +
mov ebp ds:off_492124[esi*4] +
lea edi ds:0[esi*4] +
mov [esp] ebp +
call strlen  +
cmp [esp+0Ch] eax +
jnz loc_459BE0  +
mov eax [esp+34h] +
xor eax ds:dword_492128[esi*4] +
test al 2 +
jnz loc_459BE0  +
mov eax [esp+0Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_459BE0  +
mov eax ds:off_492120[edi] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4] +
mov edx offset off_491E80 +
cmp ecx 0FFFFFFFFh +
jnz loc_459C64  +
jmp loc_459C70  +
cmp eax ecx +
jz loc_459C70  +
add edx 0Ch +
mov eax [edx+4] +
test eax eax +
jnz loc_459C60  +
retn   +
***
mov dword_473890 ecx +
mov eax ecx +
retn   +
***
push edi  +
push esi  +
mov esi 0FFFFFFFFh +
push ebx  +
mov ebx offset off_491E80 +
sub esp 10h +
mov edi [esp+20h] +
jmp loc_459CA0  +
add ebx 0Ch +
mov esi [ebx+4] +
test esi esi +
jz loc_459CB2  +
mov eax [ebx] +
mov [esp] edi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jnz loc_459C96  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi offset a_ada_ +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+38h+arg_0] +
mov eax [esp+38h+arg_0] +
cmps   +
setnbe cl  +
setb dl  +
add eax 5 +
cmp cl dl +
cmovnz eax [esp+38h+arg_0] +
mov [esp+38h+arg_0] eax +
movzx eax byte ptr [eax] +
test byte ptr ds:word_490F00[eax+eax] 8 +
jz loc_459F17  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 8 +
mov [esp+38h+var_38] eax +
call sub_4586C0  +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_1C] eax +
mov esi eax +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 8 +
jnz loc_459E64  +
cmp al 4Fh +
jnz loc_459F17  +
mov edx 4 +
mov edi offset aOabs +
mov [esp+38h+var_20] esi +
xor ebp ebp +
mov esi edx +
jmp loc_459D6D  +
add ebp 1 +
mov edi ds:off_491C80[ebp*8] +
test edi edi +
jz loc_459F17  +
mov [esp+38h+var_38] edi +
call strlen  +
mov esi eax +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_459D51  +
mov edx esi +
mov esi [esp+38h+var_20] +
add ebx edx +
mov edx ds:off_491C84[ebp*8] +
lea ebp [esi+1] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_20] edx +
call strlen  +
mov edx [esp+38h+var_20] +
mov byte ptr [esi] 22h +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] edx +
mov edi eax +
add edi ebp +
mov [esp+38h+var_30] eax +
lea esi [edi+1] +
call memcpy  +
mov byte ptr [edi] 22h +
movzx eax byte ptr [ebx] +
cmp al 54h +
jz loc_459EF3  +
cmp al 45h +
jnz loc_459E93  +
cmp byte ptr [ebx+1] 0 +
jz loc_459F17  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
mov edi ebx +
cmp byte ptr [esp+38h+var_20] 0 +
jz loc_459EBE  +
cmp byte ptr [ebx+1] 0 +
jz loc_459F17  +
cmp al 58h +
jz loc_459ECE  +
cmp al 53h +
jz loc_459F60  +
cmp al 44h +
nop   +
jz loc_45A0E0  +
cmp al 5Fh +
jnz loc_45A1EC  +
movzx eax byte ptr [edi+1] +
cmp al 5Fh +
jnz loc_45A093  +
movzx eax byte ptr [edi+2] +
lea ebx [edi+2] +
movzx ecx al +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jnz loc_45A116  +
cmp al 5Fh +
jz loc_459FC0  +
mov byte ptr [edx] 2Eh +
movzx eax byte ptr [ebx] +
lea esi [edx+1] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 8 +
jz loc_459D35  +
add esi 1 +
add ebx 1 +
mov [esi-1] al +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 0Ch +
jnz loc_459E64  +
cmp al 5Fh +
jnz loc_459DC3  +
movzx edx byte ptr [ebx+1] +
test byte ptr ds:word_490F00[edx+edx] 0Ch +
jnz loc_459E64  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
cmp al 50h +
setz cl  +
mov edi ebx +
or cl byte ptr [esp+38h+var_20] +
jz loc_459EBE  +
cmp byte ptr [ebx+1] 0 +
jz loc_45A167  +
cmp byte ptr [esp+38h+var_20] 0 +
jnz loc_459DF3  +
cmp al 53h +
jz loc_459DF3  +
cmp al 58h +
jnz loc_459E05  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
cmp al 6Eh +
jnz loc_45A077  +
lea esi [esi+0] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_459EE0  +
cmp al 6Eh +
jz loc_459EE0  +
jmp loc_459E05  +
cmp byte ptr [ebx+1] 4Bh +
jnz loc_459DDD  +
movzx eax byte ptr [ebx+2] +
cmp al 42h +
jz loc_45A085  +
cmp al 5Fh +
jnz loc_459F17  +
cmp byte ptr [ebx+3] 5Fh +
jz loc_45A057  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 3 +
mov [esp+38h+var_38] eax +
call sub_4586C0  +
mov ebx eax +
mov eax [esp+38h+arg_0] +
cmp byte ptr [eax] 3Ch +
jz loc_45A041  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aS_13 +
mov [esp+38h+var_30] eax +
call sprintf  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_459F17  +
movzx edx byte ptr [edi+2] +
test dl dl +
jz loc_459F75  +
cmp dl 5Fh +
jnz loc_459F17  +
cmp al 4Fh +
jz loc_45A146  +
lea esi [esi+0] +
jle loc_45A065  +
cmp al 52h +
jz loc_45A150  +
cmp al 57h +
jnz loc_459F17  +
mov ebp offset aWrite +
mov [esp+38h+var_34] ebp +
lea ebx [edi+2] +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebp +
call strlen  +
lea edx [esi+eax] +
movzx eax byte ptr [edi+2] +
mov edi ebx +
jmp loc_459E16  +
cmp byte ptr [edi+3] 5Fh +
jz loc_459E4A  +
mov ebp edx +
mov eax 6 +
mov edi offset a_elabb +
xor esi esi +
jmp loc_459FFA  +
add esi 1 +
mov edi ds:off_491BC0[esi*8] +
test edi edi +
jz loc_459F17  +
mov [esp+38h+var_38] edi +
call strlen  +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_459FE0  +
mov esi ds:off_491BC4[esi*8] +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] eax +
mov ebx eax +
call memcpy  +
add ebp ebx +
mov byte ptr [ebp+0] 0 +
mov eax [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] eax +
call strcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [esi] 2Eh +
add ebx 4 +
add esi 1 +
jmp loc_459D21  +
cmp al 49h +
jnz loc_459F17  +
mov ebp offset aInput +
jmp loc_459F97  +
cmp al 62h +
jz loc_459EE0  +
nop   +
jmp loc_459E05  +
cmp byte ptr [ebx+3] 0 +
jnz loc_459F17  +
mov ebp esi +
jmp loc_45A031  +
cmp al 45h +
mov ebp edx +
jnz loc_45A15A  +
movzx edx byte ptr [edi+2] +
lea eax [edi+2] +
movzx ecx dl +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jz loc_45A0C4  +
add eax 1 +
movzx edx byte ptr [eax] +
movzx ecx dl +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jnz loc_45A0B1  +
cmp dl 73h +
jnz loc_459F17  +
cmp byte ptr [eax+1] 0 +
jnz loc_459F17  +
jmp loc_45A031  +
movzx eax byte ptr [edi+1] +
cmp al 41h +
jz loc_45A1DC  +
cmp al 46h +
mov ebx offset a_finalize +
jnz loc_459F17  +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebx +
call strlen  +
add eax esi +
mov ebp eax +
jmp loc_45A031  +
mov ebp edx +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jnz loc_45A142  +
cmp al 5Fh +
jnz loc_45A175  +
movzx eax byte ptr [edi+1] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_459F17  +
mov ebx edi +
jmp loc_45A118  +
mov ebp offset aOutput +
jmp loc_459F97  +
mov ebp offset aRead +
jmp loc_459F97  +
cmp al 42h +
jnz loc_459F17  +
jmp loc_45A09D  +
mov ebp esi +
lea esi [esi+0] +
jmp loc_45A031  +
cmp al 58h +
jnz loc_45A192  +
movzx eax byte ptr [ebx+2] +
lea edi [ebx+2] +
cmp al 6Eh +
jnz loc_45A1E6  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_45A184  +
cmp al 6Eh +
jz loc_45A184  +
cmp al 2Eh +
jnz loc_45A1CF  +
movzx eax byte ptr [edi+1] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_459F17  +
movzx eax byte ptr [edi+2] +
lea edx [edi+2] +
movzx ecx al +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jz loc_45A1CF  +
add edx 1 +
movzx eax byte ptr [edx] +
movzx ecx al +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jnz loc_45A1BC  +
test al al +
jnz loc_459F17  +
jmp loc_45A031  +
mov ebx offset a_adjust +
jmp loc_45A0F9  +
cmp al 62h +
jz loc_45A184  +
jmp loc_45A192  +
mov ebp edx +
nop   +
jmp loc_45A192  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edx dword_473890 +
mov esi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_4] +
cmp edx 0FFFFFFFFh +
jz loc_45A2D0  +
lea ebx [esp+7Ch+var_60] +
xor eax eax +
mov ecx 15h +
mov edi ebx +
test ebp 1FF04h +
stos   +
jz loc_45A281  +
mov [esp+7Ch+var_60] ebp +
mov ecx ebp +
test [esp+7Ch+var_60] 4100h +
jnz loc_45A299  +
test cl 4 +
jnz loc_45A2E0  +
test ch 80h +
jnz loc_45A2F5  +
and ecx 10000h +
jnz loc_45A2B4  +
mov edx esi +
mov eax ebx +
call sub_45E680  +
mov esi eax +
mov eax ebx +
call sub_459210  +
mov eax esi +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
and edx 1FF04h +
mov ecx edx +
or ecx ebp +
mov [esp+7Ch+var_60] ecx +
test [esp+7Ch+var_60] 4100h +
jz loc_45A24B  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] esi +
call sub_46CFC0  +
test eax eax +
jnz loc_45A279  +
mov ecx [esp+7Ch+var_60] +
test ch 40h +
jz loc_45A24B  +
jmp loc_45A279  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_46ECF0  +
test eax eax +
jz loc_45A265  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_45F0E0  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_46D000  +
test eax eax +
jnz loc_45A279  +
mov ecx [esp+7Ch+var_60] +
jmp loc_45A254  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_459CC0  +
jmp loc_45A279  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov edx [edx] +
mov ecx [esp+54h+arg_0] +
movzx eax byte ptr [edx] +
cmp al 59h +
jz loc_45A400  +
cmp ecx 3 +
jz loc_45A465  +
cmp ecx 5 +
jz loc_45A368  +
cmp ecx 4 +
nop   +
jz loc_45A3C7  +
cmp ecx 6 +
jz loc_45A5B0  +
lea edx [ecx-1] +
cmp edx 1 +
jbe loc_45A508  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Dh +
jz loc_45A6A6  +
mov edx offset asc_49143A +
mov ecx 1 +
mov eax esi +
call sub_459610  +
mov eax ebx +
call sub_4590E0  +
xor edx edx +
test eax eax +
jle loc_45A3BD  +
mov byte ptr [esp+54h+var_34] al +
mov ecx 1 +
mov eax esi +
lea edx [esp+54h+var_34] +
mov byte ptr [esp+54h+var_34+1] 0 +
call sub_459610  +
mov edx offset asc_49143A +
mov ecx 1 +
mov eax esi +
call sub_459610  +
mov edx 1 +
add esp 4Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_4590E0  +
test eax eax +
mov edx eax +
jz loc_45A742  +
xor eax eax +
cmp edx 1 +
jnz loc_45A360  +
mov eax esi +
mov ecx 4 +
mov edx offset aTrue_0 +
call sub_459610  +
mov eax 1 +
jmp loc_45A360  +
add edx 1 +
mov eax ebx +
mov [ebx] edx +
call sub_459130  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_45A774  +
mov edx [edi+40h] +
test edx edx +
jz loc_45A427  +
cmp eax [edi+44h] +
jge loc_45A774  +
mov eax ebx +
call sub_459130  +
cmp eax 0FFFFFFFFh +
jz loc_45A774  +
mov eax [edi+40h] +
test eax eax +
jz loc_45A77E  +
mov edx [eax+ebp*4] +
test edx edx +
jz loc_45A35B  +
cmp byte ptr [edx] 0 +
jz loc_45A35B  +
mov eax esi +
call sub_4596D0  +
lea esi [esi+0] +
jmp loc_45A35B  +
cmp al 45h +
jz loc_45A75D  +
cmp al 4Bh +
nop   +
jz loc_45A670  +
cmp al 51h +
jz loc_45A670  +
cmp al 5Fh +
jz loc_45A720  +
cmp al 6Dh +
mov [esp+54h+var_3C] 1 +
jz loc_45A791  +
mov eax ebx +
mov edi 1 +
call sub_4590E0  +
mov ebp eax +
xor eax eax +
cmp ebp 0FFFFFFFFh +
jz loc_45A360  +
lea edx [esp+54h+var_34] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] offset aD +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
cmp byte ptr [esp+54h+var_34] 0 +
jnz loc_45A6BC  +
test edi edi +
jnz loc_45A4E7  +
cmp ebp 9 +
jle loc_45A35B  +
mov eax [esp+54h+var_3C] +
test eax eax +
jnz loc_45A35B  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45A35B  +
add eax 1 +
mov [ebx] eax +
jmp loc_45A35B  +
cmp al 51h +
jz loc_45A670  +
mov eax ebx +
mov [esp+54h+var_3C] ecx +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_45A774  +
test eax eax +
mov ecx [esp+54h+var_3C] +
jz loc_45A690  +
lea eax [eax+1] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_38] ecx +
call sub_4586C0  +
mov [esp+54h+var_4C] ebp +
mov edx eax +
mov [esp+54h+var_3C] eax +
mov eax [ebx] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call strncpy  +
mov edx [esp+54h+var_3C] +
mov byte ptr [edx+ebp] 0 +
mov eax [edi] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call sub_45A200  +
mov ecx [esp+54h+var_38] +
cmp ecx 1 +
mov edi eax +
jz loc_45A7F4  +
test edi edi +
jz loc_45A7CF  +
cmp byte ptr [edi] 0 +
jnz loc_45A7AA  +
mov [esp+54h+var_54] edi +
call free  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
add [ebx] ebp +
mov eax 1 +
jmp loc_45A360  +
cmp al 45h +
jz loc_45A7B8  +
cmp al 6Dh +
jnz loc_45A5F7  +
mov edx offset asc_491435 +
mov eax esi +
mov ecx 1 +
call sub_459610  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
jmp loc_45A5F7  +
mov ecx 1 +
mov eax esi +
call sub_459610  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jnz loc_45A5E0  +
cmp al 2Eh +
jz loc_45A6C8  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
cmp al 65h +
jnz loc_45A35B  +
mov edx offset aE +
mov eax esi +
mov ecx 1 +
call sub_459610  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_45A35B  +
mov ecx 1 +
mov eax esi +
call sub_459610  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jnz loc_45A643  +
jmp loc_45A35B  +
mov [esp+54h+var_50] 1 +
mov ecx esi +
mov edx ebx +
mov [esp+54h+var_54] 0 +
mov eax edi +
call sub_45AFE0  +
jmp loc_45A360  +
mov ecx 1 +
mov edx offset a0 +
mov eax esi +
call sub_459610  +
jmp loc_45A5A3  +
mov cl 1 +
mov edx offset asc_491435 +
mov eax esi +
call sub_459610  +
add dword ptr [ebx] 1 +
jmp loc_45A370  +
mov eax esi +
call sub_4596D0  +
jmp loc_45A4DA  +
mov ecx 1 +
mov edx offset a__0 +
mov eax esi +
call sub_459610  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
movzx ecx al +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jz loc_45A611  +
mov ecx 1 +
mov eax esi +
call sub_459610  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jnz loc_45A6F5  +
jmp loc_45A611  +
cmp byte ptr [edx+1] 6Dh +
jz loc_45A805  +
mov eax ebx +
xor edi edi +
call sub_459130  +
mov [esp+54h+var_3C] 1 +
mov ebp eax +
jmp loc_45A4A4  +
mov eax esi +
mov ecx 5 +
mov edx offset aFalse_0 +
call sub_459610  +
mov eax 1 +
jmp loc_45A360  +
mov [esp+54h+var_54] 3 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_45A830  +
jmp loc_45A360  +
mov eax 0FFFFFFFFh +
jmp loc_45A360  +
mov eax esi +
mov edx ebp +
call sub_459710  +
mov eax 1 +
jmp loc_45A360  +
mov ecx 1 +
mov edx offset asc_491435 +
mov eax esi +
call sub_459610  +
add dword ptr [ebx] 1 +
jmp loc_45A496  +
mov edx edi +
mov eax esi +
call sub_4596D0  +
jmp loc_45A58F  +
mov [esp+54h+var_54] 6 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_45A830  +
jmp loc_45A360  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_45A597  +
cmp byte ptr [eax] 0 +
nop   +
jz loc_45A597  +
mov edx eax +
mov eax esi +
call sub_4596D0  +
jmp loc_45A597  +
mov edx offset asc_49144D +
mov eax esi +
call sub_459610  +
jmp loc_45A57E  +
mov ecx 1 +
mov edx offset asc_491435 +
mov eax esi +
call sub_459610  +
add dword ptr [ebx] 2 +
mov [esp+54h+var_3C] 0 +
jmp loc_45A496  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax ecx +
mov [esp+2Ch+var_14] edx +
mov edx offset asc_49144F +
mov [esp+2Ch+var_18] ecx +
mov ecx 1 +
call sub_459610  +
mov edx [ebx] +
mov [esp+2Ch+var_20] edx +
add edx 1 +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov [ebx] edx +
mov ebx 1 +
xor edx edx +
mov eax ebx +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jz loc_45A965  +
nop   +
test cl cl +
jz loc_45A998  +
test edx edx +
jz loc_45A92C  +
mov eax [esp+2Ch+var_1C] +
mov esi offset off_492120 +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_20] eax +
jmp loc_45A8BF  +
add ebx 1 +
add esi 0Ch +
cmp ebx 4Fh +
jz loc_45A998  +
mov ebp [esi] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
cmp [esp+2Ch+var_20] eax +
mov edi eax +
jb loc_45A8B0  +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_45A8B0  +
mov eax [esp+2Ch+var_18] +
mov edx offset asc_491451 +
mov ecx 1 +
call sub_459610  +
lea eax [ebx+ebx*2] +
mov edx ds:off_492124[eax*4] +
test edx edx +
jz loc_45A913  +
cmp byte ptr [edx] 0 +
jnz loc_45A9A4  +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_491451 +
call sub_459610  +
mov eax [esp+2Ch+var_14] +
add [eax] edi +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
mov edx esi +
call sub_45A310  +
test eax eax +
jz loc_45A98B  +
mov edx [esi] +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov edx 1 +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jnz loc_45A880  +
mov ebx eax +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_491453 +
call sub_459610  +
mov eax [esp+2Ch+var_14] +
add dword ptr [eax] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax] +
cmp byte ptr [eax] 57h +
jz loc_45A967  +
add esp 2Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
call sub_4596D0  +
jmp loc_45A913  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] eax +
mov eax [edx] +
mov [esp+58h+var_4C] ecx +
mov ecx [esp+58h+arg_4] +
lea edx [eax+1] +
test ecx ecx +
mov [ebp+0] edx +
jz loc_45AB15  +
cmp byte ptr [eax+1] 7Ah +
jz loc_45AA91  +
mov eax ebp +
call sub_4590E0  +
test eax eax +
mov ebx eax +
mov [esp+58h+var_34] eax +
jle loc_45AC34  +
mov edx [ebp+0] +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_48] edx +
call strlen  +
cmp ebx eax +
jg loc_45AC34  +
mov eax [esp+58h+var_40] +
mov edx [esp+58h+var_48] +
test byte ptr [eax] 4 +
jz loc_45AA3C  +
mov edi offset aJarray1z +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_45AF1C  +
mov eax [esp+58h+var_4C] +
mov ecx ebx +
xor esi esi +
call sub_459610  +
mov eax [esp+58h+arg_0] +
mov ecx [esp+58h+var_34] +
mov edx [ebp+0] +
test eax eax +
jz loc_45AA60  +
test ecx ecx +
jnz loc_45AF2E  +
add ecx edx +
test esi esi +
mov [ebp+0] ecx +
jz loc_45AC13  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_459180  +
test eax eax +
jz loc_45AC34  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 1 +
jmp loc_45AB4E  +
add eax 3 +
mov [ebp+0] eax +
mov eax ebp +
call sub_459130  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_45AC34  +
mov eax [esp+58h+var_40] +
mov edx [eax+40h] +
test edx edx +
jz loc_45AABD  +
cmp ebx [eax+44h] +
jge loc_45AC34  +
mov eax ebp +
call sub_459130  +
cmp eax 0FFFFFFFFh +
jz loc_45AC34  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
test eax eax +
jz loc_45AFB2  +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_45AAF1  +
cmp byte ptr [edx] 0 +
jz loc_45AAF1  +
mov eax [esp+58h+var_4C] +
call sub_4596D0  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_45AB15  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_45AB15  +
cmp byte ptr [edx] 0 +
jz loc_45AB15  +
mov eax [esp+58h+arg_0] +
call sub_4596D0  +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_491464+2) +
call sub_4596D0  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_459180  +
test eax eax +
jz loc_45AC34  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45AEA0  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 0 +
test eax eax +
jle loc_45ABD0  +
mov edx [ebp+0] +
xor ebx ebx +
mov esi [esp+58h+var_40] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_45AD0F  +
cmp al 7Ah +
jz loc_45AD61  +
mov edx ebp +
mov eax esi +
lea ecx [esp+58h+var_30] +
call sub_45B440  +
mov edx [esp+58h+var_30] +
test edx edx +
mov edi eax +
jz loc_45ABA5  +
mov [esp+58h+var_58] edx +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
test edi edi +
jz loc_45ABD0  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45AC40  +
mov ecx [esp+58h+var_4C] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_58] edi +
call sub_45A310  +
mov edi eax +
test edi edi +
jnz loc_45ACE6  +
nop   +
xor edi edi +
mov ebx [esp+58h+var_3C] +
test ebx ebx +
jnz loc_45AEF0  +
mov eax [esp+58h+var_4C] +
mov eax [eax+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_45AF43  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_491464 +
call sub_4596D0  +
mov ecx [esp+58h+arg_4] +
test ecx ecx +
jnz loc_45AE55  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_491464+2) +
call sub_4596D0  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_459180  +
test eax eax +
jnz loc_45AB42  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+58h+var_58] edi +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
call sub_45A310  +
test eax eax +
mov edi eax +
jz loc_45AF03  +
mov eax [esi+40h] +
mov edx [esp+58h+var_20] +
sub edx [esp+58h+var_24] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_4586C0  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_24] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_24] +
mov ecx [esp+58h+var_20] +
call sub_459800  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45ACE6  +
mov [esp+58h+var_58] eax +
call free  +
add ebx 1 +
cmp [esp+58h+var_34] ebx +
jle loc_45ABD2  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_49145E +
call sub_4596D0  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jnz loc_45AB66  +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
lea ecx [esp+58h+var_30] +
mov edx ebp +
call sub_45B440  +
test eax eax +
mov edi eax +
jnz loc_45ADE0  +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_45ABC7  +
mov [esp+58h+var_58] eax +
call free  +
test edi edi +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
jnz loc_45ACE6  +
jmp loc_45ABD0  +
mov ecx [esp+58h+var_4C] +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
mov edx ebp +
call sub_45CC00  +
test eax eax +
mov edi eax +
jz loc_45ABD0  +
mov eax ebp +
call sub_4590E0  +
test eax eax +
mov [esp+58h+var_48] eax +
jle loc_45ACE6  +
mov eax [ebp+0] +
mov [esp+58h+var_58] eax +
call strlen  +
cmp [esp+58h+var_48] eax +
jg loc_45ACE6  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+58h+var_4C] +
mov edx [ebp+0] +
mov ecx [esp+58h+var_48] +
call sub_459610  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45AF56  +
mov eax [esp+58h+var_48] +
add [ebp+0] eax +
jmp loc_45ACE6  +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
call sub_459800  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_45AD2C  +
mov eax [esi+40h] +
mov edx [esp+58h+var_2C] +
sub edx [esp+58h+var_30] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_4586C0  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_30] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
jmp loc_45AD2C  +
mov edx [esp+58h+arg_8] +
test edx edx +
jz loc_45AC09  +
mov ebp [esp+58h+var_40] +
mov eax ebp +
call sub_4592D0  +
xor ecx ecx +
mov esi eax +
mov eax [esp+58h+var_4C] +
mov ebx [eax+4] +
mov edx [eax] +
mov [esp+58h+var_58] esi +
mov eax ebx +
sub eax edx +
cmp edx ebx +
cmovnz ecx eax +
mov eax ebp +
add eax 0Ch +
call sub_459560  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_34] +
shl eax 2 +
mov [esp+58h+var_58] eax +
call sub_4586C0  +
mov ecx [esp+58h+var_34] +
mov esi [esp+58h+var_40] +
test ecx ecx +
mov [esi+44h] ecx +
mov [esi+40h] eax +
jle loc_45AFA5  +
xor edx edx +
mov ebx esi +
jmp loc_45AED3  +
mov eax [ebx+40h] +
mov dword ptr [eax+edx*4] 0 +
add edx 1 +
cmp edx ecx +
jnz loc_45AED0  +
mov [esp+58h+var_3C] 0 +
jmp loc_45AB52  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_491461 +
call sub_4596D0  +
jmp loc_45ABFD  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45ABD0  +
mov [esp+58h+var_58] eax +
call free  +
jmp loc_45ABD0  +
cmp [esp+58h+arg_0] 0 +
mov ecx ebx +
mov esi 1 +
jz loc_45AA60  +
mov eax [esp+58h+arg_0] +
call sub_459610  +
mov edx [ebp+0] +
mov ecx [esp+58h+var_34] +
jmp loc_45AA60  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_491451 +
call sub_4596D0  +
jmp loc_45ABEF  +
mov eax [esi+40h] +
lea edx [eax+ebx*4] +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_44] edx +
add eax 1 +
mov [esp+58h+var_58] eax +
call sub_4586C0  +
mov edx [esp+58h+var_44] +
mov ecx [esp+58h+var_48] +
mov [edx] eax +
mov eax [esi+40h] +
mov edx [ebp+0] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] ecx +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov ecx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+ecx] 0 +
jmp loc_45ADD0  +
mov [esp+58h+var_3C] 0 +
jmp loc_45ABD0  +
mov eax [esp+58h+var_4C] +
mov edx ebx +
call sub_459710  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_45AB15  +
mov eax [esp+58h+arg_0] +
mov edx ebx +
call sub_459710  +
jmp loc_45AB15  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] ecx +
call sub_4592D0  +
mov ecx [esp+58h+arg_0] +
test ecx ecx +
mov [esp+58h+var_3C] eax +
jz loc_45B012  +
test byte ptr [esi+28h] 1 +
jz loc_45B2B4  +
mov [esp+58h+arg_0] 1 +
mov eax [ebp+0] +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_30] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
cmp byte ptr [eax] 4Bh +
jz loc_45B3DE  +
movzx edx byte ptr [eax+1] +
cmp dl 31h +
jl loc_45B3B4  +
cmp dl 39h +
jle loc_45B285  +
cmp dl 5Fh +
jnz loc_45B3B4  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_459130  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_45B3B4  +
mov [esp+58h+var_4C] 1 +
jmp loc_45B133  +
cmp al 74h +
jz loc_45B167  +
cmp al 4Bh +
jz loc_45B356  +
test dword ptr [esi] 2000h +
jnz loc_45B2D0  +
test ecx ecx +
jz loc_45B0D2  +
mov [esp+58h+var_58] ecx +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
call sub_45B440  +
test eax eax +
mov [esp+58h+var_4C] eax +
jz loc_45B197  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_459800  +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov edi eax +
sub edi edx +
cmp edx eax +
cmovnz ecx edi +
mov eax esi +
call sub_459340  +
test ebx ebx +
jle loc_45B133  +
test byte ptr [esi] 4 +
mov eax offset asc_491468 +
mov edx offset a__0 +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_4596D0  +
sub ebx 1 +
lea eax [ebx+1] +
test eax eax +
jle loc_45B19F  +
mov ecx [esp+58h+var_24] +
mov edx [ebp+0] +
mov [esp+58h+var_20] ecx +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_45B092  +
lea edi [edx+1] +
mov [ebp+0] edi +
movzx eax byte ptr [edx+1] +
mov edx edi +
cmp al 74h +
jnz loc_45B09A  +
lea eax [esp+58h+var_24] +
mov edx ebp +
mov [esp+58h+var_58] eax +
lea ecx [esp+58h+var_30] +
mov eax esi +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] 1 +
call sub_45A9C0  +
test eax eax +
mov [esp+58h+var_4C] eax +
jnz loc_45B0FC  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov ebx eax +
sub ebx edx +
cmp edx eax +
cmovnz ecx ebx +
mov ebx [esp+58h+var_3C] +
lea eax [esi+0Ch] +
mov [esp+58h+var_58] ebx +
call sub_459560  +
mov edx [esp+58h+arg_0] +
test edx edx +
jz loc_45B1FD  +
test byte ptr [esi] 4 +
mov eax offset asc_491468 +
mov edx offset a__0 +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_4596D0  +
test byte ptr [esi+2Ch] 1 +
jnz loc_45B42A  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_459800  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_45B3C8  +
mov eax [esp+58h+var_40] +
mov ebx [eax+4] +
cmp [eax] ebx +
jz loc_45B22D  +
test byte ptr [esi] 4 +
mov eax offset asc_491468 +
mov edx offset a__0 +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_4596D0  +
mov edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
cmp edx ecx +
jz loc_45B241  +
sub ecx edx +
jnz loc_45B41C  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45B269  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_45B279  +
mov [esp+58h+var_58] eax +
call free  +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+26h] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_32] dl +
mov [esp+58h+var_31] 0 +
call atoi  +
xor edx edx +
mov ebx eax +
mov eax [ebp+0] +
cmp byte ptr [eax+2] 5Fh +
setz dl  +
lea eax [eax+edx+2] +
mov [ebp+0] eax +
jmp loc_45B085  +
test byte ptr [esi+2Ch] 1 +
jnz loc_45B00A  +
mov [esp+58h+arg_0] 0 +
jmp loc_45B012  +
mov eax ebp +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
mov edi eax +
jz loc_45B197  +
lea eax [eax+1] +
mov [esp+58h+var_58] eax +
call sub_4586C0  +
mov ecx eax +
mov [esp+58h+var_48] eax +
mov eax [ebp+0] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] eax +
call memcpy  +
mov ecx [esp+58h+var_48] +
mov byte ptr [ecx+edi] 0 +
mov eax [esi] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_54] eax +
call sub_45A200  +
test eax eax +
mov ecx eax +
jz loc_45B3A0  +
cmp byte ptr [eax] 0 +
jz loc_45B33A  +
mov edx eax +
mov [esp+58h+var_44] eax +
lea eax [esp+58h+var_30] +
call sub_4596D0  +
mov ecx [esp+58h+var_44] +
mov [esp+58h+var_58] ecx +
call free  +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_58] eax +
call free  +
add [ebp+0] edi +
jmp loc_45B0FC  +
add edx 1 +
mov eax ebp +
mov [ebp+0] edx +
call sub_459130  +
cmp eax 0FFFFFFFFh +
jz loc_45B197  +
cmp eax [esi+10h] +
jge loc_45B197  +
mov edx [esi+8] +
mov edx [edx+eax*4] +
test edx edx +
jz loc_45B116  +
cmp byte ptr [edx] 0 +
jz loc_45B116  +
lea eax [esp+58h+var_30] +
call sub_4596D0  +
jmp loc_45B116  +
test edi edi +
mov edx [ebp+0] +
jz loc_45B342  +
mov ecx edi +
lea eax [esp+58h+var_30] +
call sub_459610  +
jmp loc_45B342  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+58h+var_2C] +
lea edx [esp+58h+var_30] +
mov eax [esp+58h+var_40] +
call sub_459800  +
jmp loc_45B241  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_459130  +
cmp eax 0FFFFFFFFh +
jz loc_45B3B4  +
cmp eax [esi+10h] +
jge loc_45B3B4  +
mov edx [esi+8] +
xor ebx ebx +
mov edx [edx+eax*4] +
test edx edx +
jz loc_45B085  +
cmp byte ptr [edx] 0 +
jz loc_45B085  +
lea eax [esp+58h+var_30] +
call sub_4596D0  +
jmp loc_45B085  +
mov eax [esp+58h+var_40] +
call sub_459640  +
jmp loc_45B241  +
mov edx offset asc_49146B +
lea eax [esp+58h+var_30] +
call sub_4596D0  +
jmp loc_45B1EC  +
***
push edi  +
mov edi 1 +
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov [esp+78h+var_68] eax +
mov [esp+78h+var_60] ecx +
mov [esp+78h+var_44] 0 +
mov [esp+78h+var_48] 0 +
mov [esp+78h+var_4C] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx] 0 +
test edi edi +
setnz dl  +
xor eax eax +
test eax eax +
jnz loc_45B6F0  +
test dl dl +
jz loc_45B6F0  +
mov ecx [ebx] +
movzx esi byte ptr [ecx] +
lea eax [esi-41h] +
cmp al 34h +
ja loc_45B6E2  +
movzx eax al +
jmp ds:off_4914E4[eax*4]  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_45B508  +
mov eax esi +
mov esi [esp+78h+var_48] +
cmp [esp+78h+var_4C] esi +
jz loc_45B4DD  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_491451 +
call sub_4596A0  +
mov ecx [ebx] +
movzx eax byte ptr [ecx] +
movsx eax al +
mov [esp+78h+var_64] ecx +
call sub_4593D0  +
call sub_459400  +
mov ecx [esp+78h+var_64] +
test eax eax +
jz loc_45B508  +
cmp byte ptr [eax] 0 +
jz loc_45B508  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_4596A0  +
mov ecx [ebx] +
add ecx 1 +
mov [ebx] ecx +
jmp loc_45B484  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_45B534  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_45B816  +
cmp al 2Ah +
jz loc_45B816  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_45D110  +
test eax eax +
jz loc_45B7A0  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_45B7E3  +
cmp al 5Fh +
jnz loc_45B484  +
add edx 1 +
mov [ebx] edx +
jmp loc_45B484  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_45B592  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_45B7F5  +
cmp al 2Ah +
jz loc_45B7F5  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49146F +
call sub_4596D0  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45B7A7  +
add eax 1 +
mov [ebx] eax +
mov edx offset asc_491471 +
lea eax [esp+78h+var_4C] +
call sub_4596D0  +
jmp loc_45B484  +
add ecx 1 +
mov eax ebx +
mov [ebx] ecx +
lea edx [esp+78h+var_58] +
call sub_459180  +
test eax eax +
jz loc_45B7A0  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+20h] eax +
jle loc_45B7A0  +
mov edx [esi+4] +
lea ebx [esp+78h+var_54] +
mov eax [edx+eax*4] +
mov [esp+78h+var_54] eax +
jmp loc_45B484  +
mov eax [esp+78h+var_68] +
add ecx 1 +
mov [ebx] ecx +
test byte ptr [eax] 4 +
jz loc_45B7D0  +
test ebp ebp +
mov eax 1 +
cmovz ebp eax +
jmp loc_45B484  +
add ecx 1 +
mov edx offset asc_491453 +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_4596D0  +
mov edx [ebx] +
mov eax 51h +
cmp byte ptr [edx] 51h +
jz loc_45B662  +
mov eax [esp+78h+var_68] +
mov edx offset a__0 +
test byte ptr [eax] 4 +
mov eax offset asc_491468 +
cmovz edx eax +
lea eax [esp+78h+var_4C] +
call sub_4596A0  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jnz loc_45B712  +
lea edx [eax-58h] +
cmp dl 1 +
jbe loc_45B8A0  +
cmp al 74h +
jz loc_45B972  +
xor edi edi +
cmp al 51h +
jnz loc_45B484  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_45AFE0  +
test eax eax +
mov edi eax +
jz loc_45B484  +
jmp loc_45B759  +
add ecx 1 +
mov edx offset asc_49144D +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_4596A0  +
test ebp ebp +
mov eax 2 +
cmovz ebp eax +
jmp loc_45B484  +
mov eax 1 +
test eax eax +
jz loc_45B493  +
nop   +
test edi edi +
jz loc_45B903  +
mov esi [ebx] +
movzx eax byte ptr [esi] +
sub eax 42h +
cmp al 17h +
ja loc_45BAA1  +
movzx eax al +
jmp ds:off_4915B8[eax*4]  +
mov eax ebx +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
mov [esp+78h+var_58] eax +
mov [esp+78h+var_64] eax +
jz loc_45B7A0  +
mov edx [ebx] +
mov [esp+78h+var_78] edx +
mov [esp+78h+var_5C] edx +
call strlen  +
mov ecx [esp+78h+var_64] +
mov edx [esp+78h+var_5C] +
cmp ecx eax +
jg loc_45B7A0  +
xor eax eax +
test ecx ecx +
jz loc_45B755  +
lea eax [esp+78h+var_4C] +
call sub_459640  +
mov edx [ebx] +
mov eax [esp+78h+var_58] +
add eax edx +
mov [ebx] eax +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49144F +
call sub_4596A0  +
mov eax esi +
cmp al 4Dh +
jnz loc_45B837  +
mov edx [ebx] +
movsx eax byte ptr [edx] +
cmp al 56h +
jz loc_45B9E1  +
cmp al 75h +
jz loc_45B9E1  +
xor esi esi +
cmp al 43h +
jz loc_45B9E1  +
lea eax [edx+1] +
mov [ebx] eax +
cmp byte ptr [edx] 46h +
jz loc_45B954  +
nop   +
xor edi edi +
jmp loc_45B484  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_78] 3 +
call sub_45A310  +
mov edi eax +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45B5B0  +
jmp loc_45B5AB  +
mov edx offset asc_49146D +
lea eax [esp+78h+var_4C] +
call sub_4596A0  +
jmp loc_45B612  +
cmp al 5Fh +
jz loc_45B558  +
xor edi edi +
lea esi [esi+0] +
jmp loc_45B484  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49144F +
call sub_4596A0  +
mov edx offset asc_491453 +
lea eax [esp+78h+var_4C] +
call sub_4596D0  +
jmp loc_45B592  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49144F +
call sub_4596A0  +
mov edx offset asc_491453 +
lea eax [esp+78h+var_4C] +
call sub_4596D0  +
jmp loc_45B534  +
xor esi esi +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45B7A0  +
add eax 1 +
mov [ebx] eax +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_45B484  +
test esi esi +
jz loc_45B484  +
mov eax [esp+78h+var_48] +
cmp [esp+78h+var_4C] eax +
jz loc_45B876  +
mov edx offset asc_491451 +
lea eax [esp+78h+var_4C] +
call sub_4596D0  +
mov eax esi +
call sub_459400  +
test eax eax +
jz loc_45B484  +
cmp byte ptr [eax] 0 +
jz loc_45B484  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_4596D0  +
jmp loc_45B484  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
call sub_45B440  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
cmp edx ecx +
jz loc_45B8C3  +
sub ecx edx +
jnz loc_45B9F8  +
test edx edx +
jz loc_45B759  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_45B759  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
call sub_459130  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45B903  +
mov eax [esp+78h+var_68] +
mov edx [eax+40h] +
test edx edx +
jz loc_45BBB0  +
cmp esi [eax+44h] +
jl loc_45BBB0  +
mov eax [esp+78h+var_60] +
mov eax [eax] +
test eax eax +
jz loc_45B92D  +
mov [esp+78h+var_78] eax +
call free  +
mov eax [esp+78h+var_60] +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov eax [esp+78h+var_4C] +
xor edi edi +
test eax eax +
jz loc_45B93F  +
mov [esp+78h+var_78] eax +
call free  +
xor eax eax +
test edi edi +
jz loc_45B94C  +
mov al 3 +
test ebp ebp +
cmovnz eax ebp +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_45D110  +
test eax eax +
jnz loc_45B839  +
xor edi edi +
jmp loc_45B484  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_45A9C0  +
test eax eax +
mov edi eax +
jz loc_45B9C8  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
sub ecx edx +
jz loc_45B8C3  +
jmp loc_45B9F8  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_45B484  +
mov [esp+78h+var_78] eax +
call free  +
jmp loc_45B484  +
mov [esp+78h+var_64] edx +
call sub_4593D0  +
mov edx [esp+78h+var_64] +
add edx 1 +
mov esi eax +
jmp loc_45B790  +
lea eax [esp+78h+var_4C] +
call sub_459640  +
mov edx [esp+78h+var_40] +
jmp loc_45B8C3  +
mov ecx [esp+78h+var_60] +
mov edx ebx +
mov eax [esp+78h+var_68] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
call sub_45AFE0  +
mov edi eax +
test edi edi +
jz loc_45B903  +
mov eax [esp+78h+var_4C] +
cmp eax [esp+78h+var_48] +
jz loc_45B933  +
mov esi [esp+78h+var_60] +
mov edx offset asc_491451 +
mov eax esi +
call sub_4596D0  +
mov ecx [esp+78h+var_48] +
mov eax esi +
lea edx [esp+78h+var_4C] +
call sub_459800  +
mov eax [esp+78h+var_4C] +
jmp loc_45B933  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
lea edx [esp+78h+var_58] +
call sub_459180  +
test eax eax +
jz loc_45B903  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+14h] eax +
jle loc_45B903  +
mov edx [esi+0Ch] +
mov edx [edx+eax*4] +
test edx edx +
jnz loc_45BBDF  +
jmp loc_45BA32  +
mov edi [esp+78h+var_60] +
mov [esp+78h+var_50] 0 +
lea esi [esi+0] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
ja loc_45BAF4  +
movzx eax al +
jmp ds:off_491618[eax*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_45BADC  +
mov edx offset asc_491451 +
mov eax edi +
call sub_4596D0  +
mov edx offset aUnsigned +
mov eax edi +
call sub_4596D0  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
jbe loc_45BABA  +
cmp dl 78h +
mov eax esi +
ja loc_45BC5B  +
jmp ds:off_4916E4[edx*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_45BB1E  +
mov edx offset asc_491451 +
mov eax edi +
call sub_4596D0  +
mov edx offset aSigned +
mov eax edi +
call sub_4596D0  +
mov esi [ebx] +
jmp loc_45BAB0  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_45BB48  +
mov edx offset asc_491451 +
mov eax edi +
call sub_4596D0  +
mov edx offset a__complex +
mov eax edi +
call sub_4596D0  +
mov esi [ebx] +
jmp loc_45BAB0  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_45BB97  +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_45BB81  +
mov edx offset asc_491451 +
mov eax edi +
call sub_4596A0  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
movsx eax dl +
call sub_4593D0  +
call sub_459400  +
test eax eax +
jz loc_45BB97  +
cmp byte ptr [eax] 0 +
jnz loc_45BBF6  +
add esi 1 +
mov [ebx] esi +
jmp loc_45BAB0  +
mov edi 3 +
test ebp ebp +
cmovz ebp edi +
jmp loc_45BA2A  +
mov eax ebx +
call sub_459130  +
cmp eax 0FFFFFFFFh +
jz loc_45B903  +
mov eax [esp+78h+var_68] +
mov eax [eax+40h] +
test eax eax +
jz loc_45C038  +
mov edx [eax+esi*4] +
mov edi 1 +
test edx edx +
jz loc_45BA32  +
cmp byte ptr [edx] 0 +
jz loc_45BA32  +
mov eax [esp+78h+var_60] +
call sub_4596D0  +
jmp loc_45BA32  +
mov edx eax +
mov eax edi +
call sub_4596A0  +
mov esi [ebx] +
jmp loc_45BB97  +
add esi 1 +
mov [ebx] esi +
movzx eax byte ptr [eax+1] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_45BC5B  +
lea edi [esi+1] +
mov [ebx] edi +
cmp byte ptr [esi+1] 5Fh +
jnz loc_45BF80  +
lea eax [esi+2] +
xor edx edx +
mov [ebx] eax +
jmp loc_45BC54  +
cmp cl 5Fh +
jz loc_45C019  +
mov byte ptr [esp+edx+78h+var_40] cl +
add edx 1 +
lea ecx [eax+1] +
cmp edx 24h +
lea esi [esp+78h+var_40] +
mov [ebx] ecx +
jz loc_45C02B  +
mov eax ecx +
movzx ecx byte ptr [eax] +
test cl cl +
jnz loc_45BC30  +
xor edi edi +
jmp loc_45BBA6  +
mov eax [esp+78h+var_68] +
lea esi [esp+78h+var_40] +
call sub_4592D0  +
mov edx ebx +
mov ecx esi +
mov [esp+78h+var_38] 0 +
xor ebx ebx +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
mov edi eax +
mov eax [esp+78h+var_68] +
call sub_45C7A0  +
test eax eax +
jz loc_45BCE5  +
mov eax [esp+78h+var_3C] +
mov edx [esp+78h+var_40] +
mov [esp+78h+var_78] edi +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax [esp+78h+var_68] +
cmovz ecx ebx +
add eax 0Ch +
call sub_459560  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_45BCD1  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov ecx [esp+78h+var_3C] +
mov edx esi +
mov ebx 1 +
mov eax [esp+78h+var_60] +
call sub_459800  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_45BCF5  +
mov [esp+78h+var_78] eax +
call free  +
cmp ebx 1 +
sbb edi edi +
not edi  +
and edi 3 +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BD1E  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aLongLong +
mov edi 3 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BD50  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aWchar_t +
mov edi 5 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BD82  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aVoid +
mov edi 3 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_45A9C0  +
mov ecx [esp+78h+var_3C] +
lea edx [esp+78h+var_40] +
mov ebx eax +
mov eax [esp+78h+var_60] +
call sub_459800  +
jmp loc_45BCE5  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BE0A  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aShort +
mov edi 3 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BE3C  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aLongDouble +
mov edi 6 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BE6E  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aLong +
mov edi 3 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BEA0  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aInt +
mov edi 3 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BED2  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aFloat +
mov edi 6 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BF04  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aDouble +
mov edi 6 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BF36  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aChar +
mov edi 5 +
call sub_4596D0  +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_45BF68  +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [esp+78h+var_60] +
mov edx offset aBool +
mov edi 4 +
call sub_4596D0  +
jmp loc_45BBA6  +
lea esi [esp+78h+var_40] +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] edi +
mov [esp+78h+var_78] esi +
call strncpy  +
mov [esp+78h+var_78] edi +
mov byte ptr [esp+78h+var_40+2] 0 +
call strlen  +
mov edx 2 +
cmp eax 2 +
cmovb edx eax +
add edx edi +
mov [ebx] edx +
lea eax [esp+78h+var_50] +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_74] offset asc_4914D6 +
mov [esp+78h+var_78] esi +
call sscanf  +
mov eax [esp+78h+var_50] +
mov [esp+78h+var_74] offset aIntU_t +
mov [esp+78h+var_78] esi +
mov [esp+78h+var_70] eax +
call sprintf  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_45BFF9  +
mov edx offset asc_491451 +
call sub_4596D0  +
cmp byte ptr [esp+78h+var_40] 0 +
mov edi 3 +
jz loc_45BBA6  +
mov eax [esp+78h+var_60] +
mov edx esi +
call sub_4596D0  +
jmp loc_45BBA6  +
mov ecx eax +
lea esi [esp+78h+var_40] +
add ecx 1 +
mov byte ptr [esp+edx+78h+var_40] 0 +
mov [ebx] ecx +
jmp loc_45BFB4  +
cmp byte ptr [eax+1] 5Fh +
jz loc_45C01F  +
xor edi edi +
jmp loc_45BBA6  +
mov eax [esp+78h+var_60] +
mov edx esi +
mov edi 1 +
call sub_459710  +
jmp loc_45BA32  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [eax] +
mov [esp+54h+var_40] edx +
mov edx [edx] +
mov [esp+54h+var_44] eax +
mov ebx [esp+54h+arg_0] +
mov [esp+54h+var_3C] ecx +
add edi edx +
test esi 1000h +
jz loc_45C080  +
cmp byte ptr [edi] 58h +
jz loc_45C1D5  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
test ebp 1800h +
jz loc_45C0DB  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_45C0DB  +
lea eax [eax+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
jz loc_45C12A  +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_38] +
add eax ecx +
cmp edi eax +
jz loc_45C52C  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
and ebp 2100h +
jz loc_45C12A  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__tm__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_45C401  +
lea eax [esi+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
jz loc_45C12A  +
mov edx [esp+54h+var_30] +
add eax edx +
cmp edi eax +
jz loc_45C1C0  +
mov eax [esp+54h+var_40] +
cmp [esp+54h+var_3C] 0Ah +
mov edx [eax] +
jg loc_45C170  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_45C488  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_45C15E  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_459610  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_40] +
add edx [esp+54h+var_3C] +
mov [eax] edx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_45C137  +
cmp byte ptr [edx+9] 4Eh +
jnz loc_45C137  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_45C137  +
mov [esp+54h+var_50] eax +
mov [esp+54h+var_54] offset byte_47388C +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_45C137  +
mov edx offset aAnonymous +
mov eax ebx +
call sub_4596D0  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_45C15E  +
cmp byte ptr [edx] 5Fh +
jnz loc_45C12A  +
add edx 1 +
mov [esp+54h+var_30] edx +
jmp loc_45C53C  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] 3Ch +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_45C460  +
sub eax edx +
cmp [esp+54h+var_3C] eax +
mov ecx eax +
jle loc_45C460  +
test eax eax +
jnz loc_45C470  +
mov eax [esp+54h+var_3C] +
mov edi [esp+54h+var_40] +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
lea eax [edx+eax+1] +
mov [edi] eax +
mov eax [esp+54h+var_44] +
mov [esp+54h+var_2C] 0 +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_45C4A2  +
mov edi [esp+54h+var_44] +
mov eax esi +
mov edx (offset asc_491464+2) +
or eax 1 +
mov [edi] eax +
mov eax ebx +
call sub_4596D0  +
mov edi [esp+54h+var_40] +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_45C282  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [edi] +
movzx ecx byte ptr [eax] +
cmp cl 53h +
jz loc_45C2A2  +
jle loc_45C321  +
cmp cl 54h +
jz loc_45C3B0  +
cmp cl 55h +
nop   +
jnz loc_45C2D0  +
cmp cl 53h +
jnz loc_45C494  +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
cmp al 4Eh +
jz loc_45C4C1  +
cmp al 50h +
jz loc_45C4D9  +
cmp al 4Dh +
jz loc_45C6C2  +
lea esi [esi+0] +
mov eax ebx +
mov edx offset asc_491464 +
call sub_4596D0  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_45C304  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [esp+54h+var_40] +
mov eax [eax] +
cmp byte ptr [eax] 5Fh +
jz loc_45C4B3  +
mov eax [esp+54h+var_44] +
mov [eax] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp cl 41h +
jnz loc_45C2D0  +
add eax 1 +
mov [edi] eax +
mov eax edi +
call sub_4590E0  +
test eax eax +
mov ebp eax +
jle loc_45C2D0  +
mov edx offset asc_49144D +
lea eax [esp+54h+var_2C] +
call sub_4596D0  +
lea eax [ebp+1] +
mov [esp+54h+var_54] eax +
call sub_4586C0  +
mov ecx eax +
mov [esp+54h+var_3C] eax +
mov eax [edi] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] eax +
call memcpy  +
mov ecx [esp+54h+var_3C] +
mov eax [esp+54h+var_44] +
mov byte ptr [ecx+ebp] 0 +
mov eax [eax] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_50] eax +
call sub_45A200  +
test eax eax +
mov ecx eax +
jz loc_45C6D8  +
cmp byte ptr [eax] 0 +
jnz loc_45C782  +
mov [esp+54h+var_54] ecx +
call free  +
mov eax [esp+54h+var_3C] +
add [edi] ebp +
mov [esp+54h+var_54] eax +
call free  +
jmp loc_45C3CC  +
add eax 1 +
mov edx edi +
mov [edi] eax +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
call sub_45B440  +
test eax eax +
jz loc_45C2D0  +
mov ecx [esp+54h+var_28] +
mov eax ebx +
lea edx [esp+54h+var_2C] +
call sub_459800  +
mov eax [edi] +
movzx eax byte ptr [eax] +
cmp al 5Fh +
jz loc_45C2D0  +
test al al +
jz loc_45C2D0  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_4596D0  +
jmp loc_45C25A  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__ps__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_45C105  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_45C105  +
mov [esp+54h+var_50] offset a__s +
mov [esp+54h+var_54] edx +
call strstr  +
test eax eax +
mov esi eax +
jz loc_45C12A  +
lea eax [eax+3] +
jmp loc_45C108  +
mov ecx [esp+54h+var_3C] +
test ecx ecx +
jz loc_45C20B  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_459610  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_44] +
mov esi [eax] +
jmp loc_45C20B  +
mov dword ptr [eax+34h] 0 +
jmp loc_45C145  +
cmp cl 55h +
jz loc_45C2AB  +
jmp loc_45C2D0  +
mov eax [ebx+4] +
mov edi [esp+54h+var_44] +
sub eax [ebx] +
mov [edi+34h] eax +
jmp loc_45C23F  +
mov ebx [esp+54h+var_40] +
add eax 1 +
mov [ebx] eax +
jmp loc_45C313  +
mov edx offset asc_491435 +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_3C] ecx +
call sub_4596D0  +
mov edx [edi] +
mov ecx [esp+54h+var_3C] +
lea eax [edx+1] +
mov [edi] eax +
movzx eax byte ptr [edx+1] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jz loc_45C2D0  +
mov ebp ecx +
jmp loc_45C513  +
mov eax [edi] +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jz loc_45C764  +
test al al +
mov ds:byte_49A480 al +
jz loc_45C4F7  +
mov edx offset byte_49A480 +
lea eax [esp+54h+var_2C] +
call sub_4596D0  +
jmp loc_45C4F7  +
cmp byte ptr [ecx] 5Fh +
jnz loc_45C0D5  +
add ecx 1 +
mov [esp+54h+var_30] ecx +
mov eax [esp+54h+var_40] +
mov ecx esi +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_2C] 0 +
mov edx [eax] +
sub ecx edx +
jz loc_45C567  +
mov eax ebx +
call sub_459610  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_45C753  +
mov ecx [esp+54h+var_44] +
mov edx 491466h +
mov eax [ecx] +
mov [esp+54h+var_38] eax +
or eax 1 +
mov [ecx] eax +
mov eax ebx +
call sub_4596D0  +
cmp edi [esp+54h+var_30] +
ja loc_45C65F  +
jmp loc_45C700  +
mov eax [esp+54h+var_44] +
add esi 1 +
mov edx ebp +
lea ecx [esp+54h+var_20] +
mov [esp+54h+var_30] esi +
call sub_45B440  +
test eax eax +
jz loc_45C700  +
mov edx offset asc_49144F +
lea eax [esp+54h+var_2C] +
call sub_4596D0  +
mov ecx [esp+54h+var_1C] +
lea eax [esp+54h+var_2C] +
lea edx [esp+54h+var_20] +
call sub_459800  +
mov eax [esp+54h+var_20] +
test eax eax +
jz loc_45C605  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_1C] 0 +
mov [esp+54h+var_18] 0 +
mov [esp+54h+var_20] 0 +
lea eax [esp+54h+var_2C] +
mov edx offset asc_491453 +
call sub_4596D0  +
mov eax [esp+54h+var_30] +
cmp byte ptr [eax] 4Ch +
jnz loc_45C700  +
add eax 1 +
mov [esp+54h+var_30] eax +
lea edx [esp+54h+var_2C] +
mov eax ebp +
call sub_459750  +
test eax eax +
jz loc_45C700  +
mov ecx [esp+54h+var_28] +
lea edx [esp+54h+var_2C] +
mov eax ebx +
call sub_459800  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_4596D0  +
cmp edi [esp+54h+var_30] +
jbe loc_45C700  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_45C687  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov esi [esp+54h+var_30] +
movzx eax byte ptr [esi] +
cmp al 4Ch +
jz loc_45C6F0  +
cmp al 58h +
jz loc_45C5A0  +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
mov edx ebp +
call sub_45B440  +
test eax eax +
jz loc_45C700  +
cmp esi [esp+54h+var_30] +
jnz loc_45C63A  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
jmp loc_45C168  +
mov edx offset a2147483648 +
lea eax [esp+54h+var_2C] +
call sub_4596D0  +
add dword ptr [edi] 1 +
jmp loc_45C3CC  +
mov edx [edi] +
mov ecx ebp +
lea eax [esp+54h+var_2C] +
call sub_459610  +
jmp loc_45C39E  +
add esi 1 +
mov [esp+54h+var_30] esi +
jmp loc_45C627  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_45C728  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
cmp edi [esp+54h+var_30] +
ja loc_45C732  +
sub dword ptr [ebx+4] 1 +
mov eax ebx +
mov edx offset asc_491464 +
call sub_4596D0  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_45C15E  +
mov eax [ebx+4] +
mov ecx [esp+54h+var_44] +
sub eax [ebx] +
mov [ecx+34h] eax +
jmp loc_45C575  +
mov ecx ebp +
cmp cl 55h +
jnz loc_45C3CC  +
mov edx offset aU +
lea eax [esp+54h+var_2C] +
call sub_4596D0  +
jmp loc_45C3CC  +
mov edx eax +
mov [esp+54h+var_38] eax +
lea eax [esp+54h+var_2C] +
call sub_4596D0  +
mov ecx [esp+54h+var_38] +
jmp loc_45C396  +
***
push edi  +
mov edi eax +
push esi  +
mov eax edx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45C7F2  +
mov eax [ebx] +
mov [esp+28h+var_28] eax +
call strlen  +
xor edx edx +
cmp esi eax +
jle loc_45C7D5  +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebp +
mov edx ebx +
mov eax edi +
mov ecx esi +
call sub_45C050  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor edx edx +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jle loc_45C8A6  +
cmp al 6Fh +
jz loc_45C950  +
cmp ebp 4 +
jle loc_45C8A6  +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] offset aType +
mov [esp] ebx +
call memcmp  +
test eax eax +
jnz loc_45C8A6  +
movsx eax byte ptr [ebx+4] +
add ebx 5 +
mov dword ptr [esp] offset byte_47388C +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_45C8A6  +
lea ecx [esp+30h] +
mov eax esi +
lea edx [esp+2Ch] +
mov [esp+2Ch] ebx +
call sub_45B440  +
test eax eax +
jnz loc_45C8D2  +
xor ebx ebx +
mov eax esi +
call sub_459210  +
add esp 9Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jg loc_45C853  +
nop   +
jmp loc_45C8A6  +
***
mov eax [esp+0B4h] +
mov ebx 1 +
mov [esp] eax +
call strlen  +
mov edx 20h +
add eax [esp+0B4h] +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov [eax+8] dx +
mov edi [esp+30h] +
mov eax [esp+34h] +
mov [esp+4] edi +
sub eax edi +
mov [esp+8] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call strncat  +
test edi edi +
jz loc_45C8A8  +
mov [esp] edi +
call free  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
jmp loc_45C8A8  +
***
cmp byte ptr [ebx+1] 70h +
jnz loc_45C853  +
movsx eax byte ptr [ebx+2] +
mov dword ptr [esp] offset byte_47388C +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_45C853  +
cmp ebp 9 +
jle loc_45CB30  +
lea eax [ebx+3] +
mov dword ptr [esp+8] 7 +
mov dword ptr [esp+4] offset aAssign_ +
mov [esp] eax +
call memcmp  +
test eax eax +
jnz loc_45CB30  +
lea eax [ebp-0Ah] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+0Ah] +
mov ebp offset off_492120 +
mov [esp+1Ch] eax +
jmp loc_45C9CF  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_45C8A6  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax [esp+18h] +
jnz loc_45C9C0  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_45C9C0  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_492124[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
mov eax [esp+0B4h] +
mov [esp] eax +
call strlen  +
mov edx [esp+0B4h] +
mov ecx 3Dh +
mov [edx+eax] cx +
jmp loc_45C8A8  +
***
lea eax [ebx+2] +
mov ebp offset off_492120 +
xor edi edi +
mov [esp+18h] eax +
jmp loc_45CABF  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_45C8A6  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax 2 +
jnz loc_45CAB0  +
mov eax [esp+18h] +
mov dword ptr [esp+8] 2 +
mov [esp] ebx +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_45CAB0  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_492124[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
jmp loc_45C8A8  +
***
lea eax [ebp-3] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+3] +
mov ebp offset off_492120 +
mov [esp+1Ch] eax +
jmp loc_45CB56  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_45C8A6  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp [esp+18h] eax +
jnz loc_45CB47  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_45CB47  +
jmp loc_45CAEB  +
***
cmp byte ptr [ebx+3] 70h +
lea esi [esi+0] +
jnz loc_45CA6C  +
add ebx 4 +
jmp loc_45C88F  +
***
push edi  +
mov edi edx +
push esi  +
mov edx offset aTemplate +
push ebx  +
mov esi 1 +
sub esp 2Ch +
mov [esp+38h+var_2C] eax +
mov eax ecx +
call sub_4596D0  +
lea edx [esp+38h+var_28] +
mov eax edi +
call sub_459180  +
test eax eax +
jz loc_45CC40  +
mov eax [esp+38h+var_28] +
xor ebx ebx +
test eax eax +
jg loc_45CCBD  +
lea esi [esi+0] +
mov eax [ebp+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_45CCF1  +
mov eax ebp +
mov edx offset aClass +
call sub_4596D0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-4+arg_8] +
lea ecx [esp-4+arg_10] +
mov edx edi +
call sub_45B440  +
test eax eax +
mov esi eax +
jnz loc_45CD02  +
mov eax [esp-4+arg_10] +
test eax eax +
jz loc_45CCA4  +
mov [esp+0] eax +
call free  +
mov [esp-4+arg_14] 0 +
mov [esp-4+arg_18] 0 +
mov [esp-4+arg_10] 0 +
test esi esi +
jz loc_45CCE2  +
add ebx 1 +
cmp [esp-4+arg_C] ebx +
jle loc_45CC40  +
mov edx offset asc_49145E +
mov eax ebp +
call sub_4596D0  +
mov edx [edi] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_45CD16  +
cmp al 7Ah +
jnz loc_45CC63  +
mov eax [esp-4+arg_8] +
add edx 1 +
mov ecx ebp +
mov [edi] edx +
mov edx edi +
call sub_45CC00  +
mov esi eax +
test esi esi +
jnz loc_45CCA8  +
mov eax [ebp+4] +
xor esi esi +
cmp byte ptr [eax-1] 3Eh +
jnz loc_45CC4D  +
mov edx offset asc_491451 +
mov eax ebp +
call sub_4596D0  +
jmp loc_45CC4D  +
mov ecx [esp-4+arg_14] +
lea edx [esp-4+arg_10] +
mov eax ebp +
call sub_459800  +
jmp loc_45CC7C  +
add edx 1 +
mov eax ebp +
mov [edi] edx +
mov edx offset aClass_0 +
call sub_4596D0  +
jmp loc_45CCA8  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov ebp [edx] +
mov eax [eax+50h] +
test eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
jg loc_45CD91  +
mov eax [ebx] +
cmp byte ptr [eax] 6Eh +
jnz loc_45CDF3  +
add eax 1 +
mov [ebx] eax +
mov eax ebx +
call sub_4590E0  +
test eax eax +
mov [edi+50h] eax +
jle loc_45CDD5  +
cmp eax 9 +
jg loc_45CDE1  +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
mov edx [edi+4Ch] +
sub eax 1 +
mov [edi+50h] eax +
test edx edx +
jz loc_45CDD5  +
mov ecx [edx+4] +
mov eax esi +
mov ebx 1 +
call sub_459800  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ch +
call sub_4586C0  +
mov [edi+4Ch] eax +
mov ecx eax +
mov edx ebx +
mov eax edi +
call sub_45B440  +
test eax eax +
jnz loc_45CE34  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx] +
cmp byte ptr [ebp+0] 5Fh +
jnz loc_45CDD5  +
add ebp 1 +
mov [ebx] ebp +
jmp loc_45CD42  +
mov ecx [edi+4Ch] +
test ecx ecx +
jz loc_45CDB7  +
mov eax [ecx] +
test eax eax +
jz loc_45CDC8  +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] ecx +
call free  +
mov ecx [esp+24h+var_18] +
mov edx ebx +
mov eax edi +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx] 0 +
mov ecx [edi+4Ch] +
call sub_45B440  +
test eax eax +
jz loc_45CDD5  +
mov edx [edi+4Ch] +
mov eax esi +
mov ecx [edx+4] +
call sub_459800  +
mov eax [edi+48h] +
mov ecx [ebx] +
mov ebx 1 +
test eax eax +
jnz loc_45CDD7  +
sub ecx ebp +
mov edx ebp +
mov eax edi +
call sub_459B20  +
jmp loc_45CDD7  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
test byte ptr [eax] 1 +
jnz loc_45D081  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
xor esi esi +
cmp al 5Fh +
jz loc_45CFA5  +
test al al +
jz loc_45CFA5  +
cmp al 65h +
jz loc_45CFA5  +
cmp al 54h +
jz loc_45CEA6  +
cmp al 4Eh +
lea esi [esi+0] +
jnz loc_45CFE4  +
lea eax [edx+1] +
mov [ebp+0] eax +
cmp byte ptr [edx] 4Eh +
jz loc_45D048  +
mov [esp+48h+var_30] 1 +
test dword ptr [ebx] 3800h +
jz loc_45CECF  +
cmp dword ptr [ebx+20h] 9 +
jg loc_45D0AC  +
lea edx [esp+48h+var_2C] +
mov eax ebp +
call sub_459180  +
test eax eax +
jz loc_45D060  +
mov eax [esp+48h+var_2C] +
test dword ptr [ebx] 3C00h +
jz loc_45CEF5  +
sub eax 1 +
mov [esp+48h+var_2C] eax +
test eax eax +
js loc_45D060  +
cmp [ebx+20h] eax +
jg loc_45CF14  +
jmp loc_45D060  +
mov eax [esp+48h+var_24] +
test eax eax +
jnz loc_45CF69  +
mov esi 1 +
mov eax [ebx+50h] +
test eax eax +
jle loc_45CF90  +
mov eax [ebx+4] +
test esi esi +
mov edx [esp+48h+var_2C] +
mov eax [eax+edx*4] +
mov [esp+48h+var_28] eax +
jz loc_45CF36  +
test byte ptr [ebx] 1 +
jnz loc_45CFD3  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_28] +
call sub_45CD30  +
test eax eax +
jz loc_45D060  +
test byte ptr [ebx] 1 +
jz loc_45CF07  +
mov ecx [esp+48h+var_20] +
mov eax edi +
lea edx [esp+48h+var_24] +
call sub_459800  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_45CF0F  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
jmp loc_45CF0F  +
sub [esp+48h+var_30] 1 +
jns loc_45CF1B  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_45CE86  +
mov ecx [ebx+50h] +
test ecx ecx +
jg loc_45CE96  +
cmp al 65h +
jz loc_45D0D2  +
test byte ptr [ebx] 1 +
jz loc_45CFC9  +
mov edx offset asc_491453 +
mov eax edi +
call sub_4596D0  +
mov eax 1 +
jmp loc_45D062  +
mov edx offset asc_49145E +
mov eax edi +
call sub_4596D0  +
jmp loc_45CF36  +
test esi esi +
jz loc_45CFF6  +
test byte ptr [ebx] 1 +
nop   +
lea esi [esi+0] +
jnz loc_45D0C1  +
lea ecx [esp+48h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_45CD30  +
test eax eax +
jz loc_45D060  +
test byte ptr [ebx] 1 +
jnz loc_45D070  +
mov eax [esp+48h+var_24] +
mov esi 1 +
test eax eax +
jz loc_45CF97  +
mov [esp+48h+var_48] eax +
call free  +
mov edx [ebp+0] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
movzx eax byte ptr [edx] +
jmp loc_45CF9D  +
lea edx [esp+48h+var_30] +
mov eax ebp +
call sub_459180  +
test eax eax +
jnz loc_45CEBD  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+48h+var_20] +
lea edx [esp+48h+var_24] +
mov eax edi +
call sub_459800  +
jmp loc_45D00C  +
mov edx offset asc_49144F +
mov eax ecx +
call sub_4596D0  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_45CE7C  +
mov edx offset aVoid +
mov eax edi +
call sub_4596D0  +
jmp loc_45CE76  +
mov eax ebp +
call sub_4590E0  +
test eax eax +
mov [esp+48h+var_2C] eax +
jg loc_45CEE6  +
jmp loc_45D060  +
mov edx offset asc_49145E +
mov eax edi +
call sub_4596D0  +
jmp loc_45CFF6  +
add edx 1 +
test byte ptr [ebx] 1 +
mov [ebp+0] edx +
jz loc_45CFC9  +
test esi esi +
jnz loc_45D0F6  +
mov edx offset a____0 +
mov eax edi +
call sub_4596D0  +
jmp loc_45CFB8  +
mov edx 4918D6h +
mov eax edi +
call sub_4596D0  +
jmp loc_45D0E5  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov ebp [eax+4Ch] +
add dword ptr [eax+48h] 1 +
mov edi [eax+50h] +
mov dword ptr [eax+4Ch] 0 +
mov dword ptr [eax+50h] 0 +
call sub_45CE60  +
mov esi [ebx+4Ch] +
test esi esi +
jz loc_45D17A  +
mov edx [esi] +
test edx edx +
jz loc_45D16A  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 0 +
mov esi [ebx+4Ch] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov [ebx+4Ch] ebp +
mov [ebx+50h] edi +
sub dword ptr [ebx+48h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edx [edx] +
mov esi [esp+48h+arg_0] +
mov ecx esi +
sub ecx edx +
jnz loc_45D390  +
mov eax ebx +
mov edx 1 +
call sub_4595A0  +
mov eax [ebx+4] +
mov byte ptr [eax] 0 +
lea eax [esi+2] +
test dword ptr [ebp+0] 1000h +
mov [edi] eax +
jz loc_45D1D7  +
cmp byte ptr [esi+2] 58h +
jz loc_45D3D8  +
test dword ptr [ebp+0] 3C00h +
mov edx [ebx] +
jz loc_45D20A  +
mov edi offset a__ct +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_45D3A0  +
mov edi offset a__dt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_45D3C4  +
mov eax [ebx+4] +
movzx edi byte ptr [edx] +
mov esi eax +
sub esi edx +
cmp esi 2 +
mov [esp+48h+var_38] eax +
jle loc_45D2C4  +
mov eax edi +
cmp al 6Fh +
jz loc_45D400  +
cmp esi 4 +
jle loc_45D2C4  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] 4 +
mov [esp+48h+var_44] offset aType +
mov [esp+48h+var_34] edx +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_45D2C4  +
movsx eax byte ptr [edx+4] +
mov [esp+48h+var_48] offset byte_47388C +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_45D2C4  +
add edx 5 +
mov [esp+48h+var_28] edx +
lea ecx [esp+48h+var_24] +
mov eax ebp +
lea edx [esp+48h+var_28] +
call sub_45B440  +
test eax eax +
jnz loc_45D4F0  +
mov eax [ebx+4] +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
nop   +
lea esi [esi+0] +
mov ecx [esp+48h+var_38] +
cmp edx ecx +
jz loc_45D3F0  +
sub ecx edx +
mov eax 1 +
cmp ecx 1 +
jz loc_45D3B4  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 5Fh +
jnz loc_45D2A0  +
cmp byte ptr [edx+1] 5Fh +
jnz loc_45D2A0  +
movzx eax byte ptr [edx+2] +
cmp al 6Fh +
jz loc_45D5CF  +
movzx ecx al +
test byte ptr ds:word_490F00[ecx+ecx] 8 +
jz loc_45D2A0  +
movzx ecx byte ptr [edx+3] +
test byte ptr ds:word_490F00[ecx+ecx] 8 +
jz loc_45D2A0  +
cmp byte ptr [edx+4] 0 +
jnz loc_45D5EE  +
lea eax [edx+2] +
mov edi offset off_492120 +
mov [esp+48h+var_30] ebx +
xor esi esi +
mov ebx eax +
mov [esp+48h+var_34] edx +
jmp loc_45D326  +
add esi 1 +
add edi 0Ch +
cmp esi 4Fh +
jz loc_45D677  +
mov ebp [edi] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 2 +
jnz loc_45D317  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] ebp +
call memcmp  +
test eax eax +
jnz loc_45D317  +
mov edx [esp+48h+var_34] +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_4596D0  +
lea eax [esi+esi*2] +
mov edx ds:off_492124[eax*4] +
test edx edx +
jz loc_45D292  +
cmp byte ptr [edx] 0 +
jz loc_45D292  +
mov eax ebx +
call sub_4596D0  +
jmp loc_45D292  +
mov eax ebx +
call sub_459610  +
jmp loc_45D1AD  +
add dword ptr [ebp+28h] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [edx] 2Eh +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [ebp+2Ch] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] ebx +
xor ecx ecx +
mov edx edi +
mov eax ebp +
call sub_45C050  +
jmp loc_45D1D7  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 70h +
jnz loc_45D22B  +
movsx eax byte ptr [edx+2] +
mov [esp+48h+var_48] offset byte_47388C +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_45D22B  +
cmp esi 9 +
jle loc_45D550  +
lea eax [edx+3] +
mov [esp+48h+var_40] 7 +
mov [esp+48h+var_44] offset aAssign_ +
mov [esp+48h+var_48] eax +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_45D550  +
lea eax [edx+0Ah] +
sub esi 0Ah +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_45D480  +
add edi 1 +
cmp edi 4Fh +
jz loc_45D5E5  +
lea eax [edi+edi*2] +
mov ebp ds:off_492120[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_45D474  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_45D474  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_4596D0  +
mov edx ds:off_492124[edi] +
test edx edx +
jz loc_45D4E1  +
cmp byte ptr [edx] 0 +
jnz loc_45D680  +
mov edx offset asc_491943 +
jmp loc_45D37F  +
mov eax [ebx] +
mov edx offset aOperator_2 +
mov [ebx+4] eax +
mov eax ebx +
call sub_4596D0  +
mov ecx [esp+48h+var_20] +
mov eax ebx +
lea edx [esp+48h+var_24] +
call sub_459800  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_45D292  +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebx+4] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
jmp loc_45D2A0  +
lea eax [edx+3] +
sub esi 3 +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_45D56E  +
add edi 1 +
cmp edi 4Fh +
jz loc_45D5E5  +
lea eax [edi+edi*2] +
mov ebp ds:off_492120[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_45D566  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_45D566  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_4596D0  +
mov edx ds:off_492124[edi] +
test edx edx +
jnz loc_45D376  +
jmp loc_45D292  +
cmp byte ptr [edx+3] 70h +
jnz loc_45D2DC  +
add edx 4 +
lea esi [esi+0] +
jmp loc_45D277  +
mov edx [esp+48h+var_30] +
jmp loc_45D2A0  +
cmp al 61h +
jnz loc_45D2A0  +
cmp byte ptr [edx+5] 0 +
jnz loc_45D2A0  +
mov esi offset off_492120 +
xor edi edi +
lea eax [edx+2] +
mov [esp+48h+var_30] ebx +
mov ebp eax +
mov ebx esi +
mov [esp+48h+var_34] edx +
jmp loc_45D623  +
add edi 1 +
add ebx 0Ch +
cmp edi 4Fh +
jz loc_45D677  +
mov esi [ebx] +
mov [esp+48h+var_48] esi +
call strlen  +
cmp eax 3 +
jnz loc_45D618  +
mov [esp+48h+var_40] 3 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] esi +
call memcmp  +
test eax eax +
jnz loc_45D618  +
mov edx [esp+48h+var_34] +
imul edi edi +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_4596D0  +
mov edx ds:off_492124[edi] +
test edx edx +
jnz loc_45D376  +
jmp loc_45D292  +
mov edx [esp+48h+var_34] +
jmp loc_45D2A0  +
mov eax ebx +
call sub_4596D0  +
jmp loc_45D4E1  +
***
push edi  +
push esi  +
mov esi 1 +
push ebx  +
mov ebx eax +
sub esp 6Ch +
lea eax [eax+20h] +
mov [esp+78h+var_54] eax +
lea eax [ebx+4] +
mov [esp+78h+var_5C] ecx +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_4C] 0 +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 0 +
mov [esp+78h+var_50] eax +
mov edi [ebp+0] +
movsx eax byte ptr [edi] +
test al al +
jz loc_45DCE5  +
lea edx [eax-30h] +
cmp dl 45h +
ja loc_45DB76  +
movzx edx dl +
jmp ds:off_491958[edx*4]  +
mov eax [esp+78h+var_60] +
lea ecx [esp+78h+var_30] +
mov edx ebp +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_34] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
lea edi [esp+78h+var_3C] +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_30] 0 +
call sub_45A9C0  +
test eax eax +
mov esi eax +
jnz loc_45DCB0  +
test byte ptr [ebx] 4 +
mov eax offset asc_491468 +
mov edx offset a__0 +
cmovz edx eax +
lea eax [esp+78h+var_30] +
call sub_4596D0  +
mov edx [esp+78h+var_30] +
mov ecx [esp+78h+var_2C] +
cmp edx ecx +
jz loc_45D78E  +
sub ecx edx +
jnz loc_45DDA0  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_45DD76  +
test byte ptr [ebx+28h] 1 +
jnz loc_45DBB0  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_45DBB0  +
mov eax [esp+78h+var_3C] +
test eax eax +
jz loc_45D7D4  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_34] 0 +
mov [esp+78h+var_3C] 0 +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_45D7FC  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
test esi esi +
setnz al  +
mov edi eax +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_45D8A9  +
test dword ptr [ebx] 300h +
jz loc_45D834  +
mov ecx [esp+78h+var_4C] +
test ecx ecx +
jnz loc_45DDB0  +
test dword ptr [ebx] 1000h +
jz loc_45D8E6  +
lea eax [edi+1] +
mov [ebp+0] eax +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_45D89A  +
add edi 2 +
test byte ptr ds:word_490F00[eax+eax] 4 +
jnz loc_45D86D  +
jmp loc_45D89A  +
add edi 1 +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_45D89A  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_45D860  +
jmp loc_45D89A  +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [ebp+0] edi +
mov [esp+78h+var_60] eax +
mov dword ptr [ebx+30h] 1 +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
mov ecx edi +
test cl cl +
jz loc_45D8DE  +
test al al +
jz loc_45D8DE  +
test dword ptr [ebx] 2C00h +
jnz loc_45DBC8  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_45CE60  +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 1 +
mov esi eax +
test esi esi +
jnz loc_45D6D2  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_45AFE0  +
test eax eax +
mov esi eax +
jz loc_45DB4E  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_45DB4E  +
sub ecx edi +
mov edx edi +
mov eax ebx +
call sub_459B20  +
jmp loc_45DB4E  +
test dword ptr [ebx] 1000h +
jz loc_45D8E6  +
add edi 1 +
jmp loc_45D947  +
test al al +
jz loc_45D956  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
mov edx edi +
add edi 1 +
cmp al 5Fh +
jnz loc_45D943  +
test al al +
jz loc_45D8E6  +
add edx 1 +
mov [ebp+0] edx +
jmp loc_45D89A  +
call sub_4593D0  +
or [ebx+38h] eax +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [esp+78h+var_60] eax +
mov [ebp+0] edi +
jmp loc_45D89A  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_45B440  +
test eax eax +
mov esi eax +
jz loc_45D7FC  +
test byte ptr [ebx] 4 +
mov eax offset asc_491468 +
mov edx offset a__0 +
cmovz edx eax +
lea eax [esp+78h+var_24] +
call sub_4596D0  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_45D9C9  +
sub ecx edx +
jnz loc_45DE68  +
test edx edx +
jz loc_45D7FC  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_45D7FC  +
mov eax [esp+78h+var_60] +
mov dword ptr [ebx+34h] 0FFFFFFFFh +
mov [esp+78h+var_1C] 0 +
mov [esp+78h+var_20] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
mov [esp+78h+var_24] 0 +
call sub_4592D0  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov edi eax +
mov eax ebx +
call sub_45C7A0  +
test eax eax +
jnz loc_45DBE0  +
mov edx [esp+78h+var_24] +
xor edi edi +
xor esi esi +
test edx edx +
jz loc_45DA3E  +
mov [esp+78h+var_78] edx +
call free  +
test esi esi +
jz loc_45DA50  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jz loc_45DE43  +
test dword ptr [ebx] 2300h +
jz loc_45DCD0  +
mov eax [ebp+0] +
cmp byte ptr [eax] 46h +
jz loc_45DCD0  +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_45D8A9  +
test dword ptr [ebx] 300h +
jz loc_45D8E6  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_45A9C0  +
test byte ptr [ebx+28h] 1 +
mov esi eax +
mov eax 1 +
cmovnz eax [esp+78h+var_4C] +
add dword ptr [ebp+0] 1 +
mov [esp+78h+var_4C] eax +
jmp loc_45D89A  +
add edi 1 +
mov [ebp+0] edi +
test dword ptr [ebx] 3C00h +
jnz loc_45DD64  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_45CE60  +
test eax eax +
mov esi eax +
jz loc_45D8E6  +
test dword ptr [ebx] 2100h +
jz loc_45DB0D  +
mov eax [ebp+0] +
cmp byte ptr [eax] 5Fh +
jz loc_45DE98  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
jmp loc_45D8AF  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_45AFE0  +
mov esi eax +
test dword ptr [ebx] 300h +
jnz loc_45D7FC  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_45D8A9  +
test dword ptr [ebx] 300h +
jz loc_45D8E6  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_45CE60  +
mov [esp+78h+var_58] 1 +
mov esi eax +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_45D8A9  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_459800  +
sub dword ptr [ebx+28h] 1 +
jmp loc_45D7AC  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_459460  +
jmp loc_45D8BF  +
test byte ptr [ebx+28h] 1 +
mov esi [esp+78h+var_20] +
jnz loc_45DBF0  +
test byte ptr [ebx+2Ch] 1 +
jz loc_45DC23  +
mov ecx [ebx+34h] +
mov edx [esp+78h+var_24] +
lea eax [ecx+1] +
cmp eax 1 +
jbe loc_45DE91  +
add ecx edx +
mov [esp+78h+var_20] ecx +
cmp edx ecx +
jz loc_45DC15  +
sub ecx edx +
jnz loc_45DE19  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_45DE7A  +
sub dword ptr [ebx+28h] 1 +
mov edx [esp+78h+var_24] +
mov ecx esi +
mov eax 0 +
mov [esp+78h+var_20] esi +
sub ecx edx +
cmp esi edx +
cmovz ecx eax +
mov eax ebx +
call sub_459340  +
mov eax [esp+78h+var_20] +
mov esi 1 +
mov edx [esp+78h+var_24] +
mov [esp+78h+var_78] edi +
mov edi 1 +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax 0 +
cmovz ecx eax +
lea eax [ebx+0Ch] +
call sub_459560  +
mov eax offset asc_491468 +
mov edx offset a__0 +
test byte ptr [ebx] 4 +
cmovz edx eax +
mov eax [esp+78h+var_5C] +
call sub_4596A0  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_45DA32  +
sub ecx edx +
jz loc_45DA32  +
mov eax [esp+78h+var_5C] +
call sub_459640  +
mov edx [esp+78h+var_24] +
jmp loc_45DA32  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_45D761  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_459B20  +
jmp loc_45D761  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
jmp loc_45D8A9  +
mov edx [esp+78h+var_58] +
test edx edx +
jnz loc_45DE36  +
test esi esi +
jz loc_45DE36  +
test dword ptr [ebx] 300h +
jnz loc_45DE27  +
test byte ptr [ebx] 1 +
jz loc_45D8E8  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_45DE55  +
mov eax [ebx+38h] +
test eax eax +
jz loc_45D8E8  +
mov ecx [esp+78h+var_5C] +
mov edi [ecx+4] +
cmp [ecx] edi +
jz loc_45DD3E  +
mov eax ecx +
mov edx offset asc_491451 +
call sub_4596D0  +
mov eax [ebx+38h] +
call sub_459400  +
test eax eax +
jz loc_45D8E8  +
cmp byte ptr [eax] 0 +
jz loc_45D8E8  +
mov edx eax +
mov eax [esp+78h+var_5C] +
call sub_4596D0  +
jmp loc_45D8E8  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_459460  +
jmp loc_45DAE2  +
mov edx offset asc_49146B +
mov eax edi +
call sub_4596A0  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_459800  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_45D798  +
mov eax [esp+78h+var_5C] +
call sub_459640  +
jmp loc_45D78E  +
add edi 1 +
mov edx ebp +
mov [ebp+0] edi +
lea ecx [esp+78h+var_24] +
mov eax ebx +
call sub_45B440  +
mov edx [esp+78h+var_24] +
cmp edx [esp+78h+var_20] +
mov esi eax +
jz loc_45DDF1  +
mov edx offset asc_491451 +
lea eax [esp+78h+var_24] +
call sub_4596D0  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_45DDF1  +
sub ecx edx +
jnz loc_45DEF9  +
test edx edx +
jz loc_45DDFD  +
mov [esp+78h+var_78] edx +
call free  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_4C] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_45D8A9  +
mov eax [esp+78h+var_5C] +
call sub_459640  +
jmp loc_45DC15  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_45CE60  +
mov esi eax +
test esi esi +
jnz loc_45DD05  +
jmp loc_45D8E8  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_459B20  +
jmp loc_45DA50  +
mov eax [esp+78h+var_5C] +
mov edx offset aStatic +
call sub_4596D0  +
jmp loc_45DD19  +
mov eax [esp+78h+var_5C] +
call sub_459640  +
mov edx [esp+78h+var_24] +
jmp loc_45D9C9  +
mov eax [esp+78h+var_5C] +
mov edx offset asc_49146B +
call sub_4596A0  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_45DC23  +
mov ecx esi +
jmp loc_45DC09  +
add eax 1 +
mov edx ebp +
mov [ebp+0] eax +
lea ecx [esp+78h+var_30] +
mov eax ebx +
call sub_45B440  +
mov esi eax +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_45DED5  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_45D8A9  +
mov eax [esp+78h+var_5C] +
call sub_459640  +
mov edx [esp+78h+var_24] +
jmp loc_45DDF1  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov ecx [edx] +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_80] eax +
mov [esp+98h+var_84] ecx +
cmp byte ptr [esi+2] 0 +
jz loc_45E09B  +
mov eax [eax] +
and eax 3C00h +
mov [esp+98h+var_7C] eax +
jnz loc_45E080  +
lea eax [esi+2] +
mov [esp+98h+var_94] offset unk_491A70 +
mov [esp+98h+var_98] eax +
call strstr  +
test eax eax +
jz loc_45E080  +
mov ecx [ebx+4] +
mov edx ebx +
lea eax [esp+98h+var_78] +
mov [esp+98h+var_70] 0 +
lea edi [esp+98h+var_6C] +
mov [esp+98h+var_74] 0 +
mov [esp+98h+var_78] 0 +
call sub_459800  +
mov eax [esp+98h+var_7C] +
mov ecx 15h +
mov edx [esp+98h+var_80] +
stos   +
lea eax [esp+98h+var_6C] +
call sub_459840  +
mov edi [esp+98h+var_80] +
cmp byte ptr [esi+2] 0 +
jz loc_45E047  +
mov [esp+98h+var_98] esi +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_45D190  +
test eax eax +
jz loc_45DFDA  +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_45D690  +
test eax eax +
jnz loc_45E0A8  +
mov eax [esp+98h+var_84] +
lea edx [esp+98h+var_78] +
mov ecx [esp+98h+var_74] +
mov [ebp+0] eax +
mov eax [ebx] +
mov [ebx+4] eax +
mov eax ebx +
call sub_459800  +
lea edx [esp+98h+var_6C] +
mov eax edi +
call sub_459840  +
movzx edx byte ptr [esi+2] +
lea eax [esi+2] +
test dl dl +
jnz loc_45E017  +
jmp loc_45E047  +
add eax 1 +
test dl dl +
jz loc_45E047  +
cmp dl 5Fh +
movzx edx byte ptr [eax+1] +
jnz loc_45E010  +
cmp dl 5Fh +
jnz loc_45E010  +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_45E034  +
jmp loc_45E03C  +
movzx edx byte ptr [eax+1] +
add eax 1 +
cmp dl 5Fh +
jz loc_45E030  +
test dl dl +
lea esi [eax-2] +
jnz loc_45DFB5  +
xor edi edi +
lea eax [esp+98h+var_6C] +
call sub_4594B0  +
lea eax [esp+98h+var_6C] +
call sub_459210  +
mov edx [esp+98h+var_78] +
mov eax edi +
test edx edx +
jz loc_45E090  +
mov [esp+98h+var_98] edx +
mov [esp+98h+var_84] edi +
call free  +
mov eax [esp+98h+var_84] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_80] +
mov ecx ebx +
mov edx ebp +
mov [esp+98h+var_98] esi +
call sub_45D190  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_45E049  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov ebp [edx] +
mov [esp+6Ch+var_5C] eax +
mov [esp+6Ch+var_58] ecx +
cmp byte ptr [ebp+0] 5Fh +
jz loc_45E160  +
mov edi offset a__thunk_ +
mov ecx 8 +
mov esi ebp +
cmps   +
jz loc_45E260  +
mov edi offset a__t +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_45E150  +
movzx eax byte ptr [ebp+3] +
cmp al 69h +
setz cl  +
cmp al 66h +
jnz loc_45E2F0  +
test cl cl +
jnz loc_45E2F8  +
mov edi offset aType_infoFunct +
lea eax [ebp+4] +
mov [ebx] eax +
movzx eax byte ptr [ebp+4] +
cmp al 51h +
jz loc_45E420  +
cmp al 74h +
jz loc_45E445  +
cmp al 4Bh +
jz loc_45E420  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
call sub_45B440  +
mov esi eax +
test esi esi +
jz loc_45E150  +
mov eax [ebx] +
cmp byte ptr [eax] 0 +
jz loc_45E520  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx esi byte ptr [ebp+1] +
mov [esp+6Ch+var_6C] offset byte_47388C +
mov eax esi +
movsx edi al +
mov [esp+6Ch+var_68] edi +
call strchr  +
test eax eax +
jz loc_45E187  +
cmp byte ptr [ebp+2] 5Fh +
jz loc_45E540  +
mov eax esi +
cmp al 5Fh +
jz loc_45E302  +
mov eax esi +
cmp al 76h +
jz loc_45E3F0  +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] offset a0123456789qt +
call strchr  +
test eax eax +
jz loc_45E0CD  +
mov [esp+6Ch+var_68] offset byte_47388C +
mov [esp+6Ch+var_6C] ebp +
call strpbrk  +
test eax eax +
mov [esp+6Ch+var_54] eax +
jz loc_45E0CD  +
lea eax [ebp+1] +
mov [ebx] eax +
movzx eax byte ptr [ebp+1] +
cmp al 51h +
jz loc_45E4F8  +
cmp al 74h +
jz loc_45E472  +
cmp al 4Bh +
jz loc_45E4F8  +
mov eax ebx +
call sub_4590E0  +
test eax eax +
mov ebp eax +
js loc_45E150  +
mov edx [ebx] +
mov [esp+6Ch+var_6C] edx +
mov [esp+6Ch+var_50] edx +
call strlen  +
mov edx [esp+6Ch+var_50] +
cmp ebp eax +
jg loc_45E150  +
cmp ebp 0Ah +
jle loc_45E610  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_45E23E  +
cmp byte ptr [edx+9] 4Eh +
jz loc_45E620  +
mov eax [esp+6Ch+var_58] +
mov ecx ebp +
call sub_459610  +
mov edx [ebx] +
lea edi [edx+ebp] +
mov [ebx] edi +
mov esi 1 +
jmp loc_45E4A4  +
lea edx [ebp+8] +
mov eax ebx +
mov [ebx] edx +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45E150  +
mov eax [ebx] +
lea edx [eax+1] +
mov eax [esp+6Ch+var_5C] +
mov [ebx] edx +
call sub_45E680  +
test eax eax +
mov edi eax +
jz loc_45E150  +
neg esi  +
mov [esp+6Ch+var_64] esi +
lea esi [esp+6Ch+var_3E] +
mov [esp+6Ch+var_68] offset aVirtualFunctio +
mov [esp+6Ch+var_6C] esi +
call sprintf  +
cmp byte ptr [esp+6Ch+var_3E] 0 +
jnz loc_45E5B7  +
cmp byte ptr [edi] 0 +
jz loc_45E2C6  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_4596D0  +
mov [esp+6Ch+var_6C] edi +
call free  +
mov esi [ebx] +
mov [esp+6Ch+var_6C] esi +
call strlen  +
add esi eax +
mov [ebx] esi +
add esp 6Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jz loc_45E150  +
mov edi offset aType_infoNode +
jmp loc_45E10F  +
cmp byte ptr [ebp+2] 76h +
jnz loc_45E0CD  +
cmp byte ptr [ebp+3] 74h +
jnz loc_45E0CD  +
cmp byte ptr [ebp+4] 5Fh +
jnz loc_45E0CD  +
add ebp 5 +
mov [ebx] ebp +
mov esi 1 +
mov edi ebp +
movzx eax byte ptr [edi] +
test al al +
jz loc_45E3D5  +
cmp al 51h +
jz loc_45E557  +
cmp al 74h +
jz loc_45E580  +
cmp al 4Bh +
jz loc_45E557  +
test byte ptr ds:word_490F00[eax+eax] 4 +
jnz loc_45E5C7  +
mov [esp+6Ch+var_68] offset byte_47388C +
mov [esp+6Ch+var_6C] edi +
call strcspn  +
mov ebp eax +
test ebp ebp +
jnz loc_45E5FC  +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_68] offset byte_47388C +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
test esi esi +
jz loc_45E150  +
test eax eax +
jz loc_45E5B0  +
cmp edi eax +
lea esi [esi+0] +
jnz loc_45E150  +
mov eax [esp+6Ch+var_5C] +
mov edx offset a__0 +
test byte ptr [eax] 4 +
mov eax offset asc_491468 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_4596D0  +
mov eax [ebx] +
lea edi [eax+1] +
mov [ebx] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_45E337  +
test esi esi +
jz loc_45E152  +
mov eax [esp+6Ch+var_58] +
mov edx offset aVirtualTable +
call sub_4596D0  +
jmp loc_45E152  +
cmp byte ptr [ebp+2] 74h +
jnz loc_45E0CD  +
movsx eax byte ptr [ebp+3] +
mov [esp+6Ch+var_6C] offset byte_47388C +
mov [esp+6Ch+var_68] eax +
call strchr  +
test eax eax +
jz loc_45E0CD  +
add ebp 4 +
mov [ebx] ebp +
jmp loc_45E325  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45AFE0  +
mov esi eax +
jmp loc_45E141  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45A9C0  +
mov esi eax +
jmp loc_45E141  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45A9C0  +
mov esi eax +
test esi esi +
jz loc_45E150  +
mov edi [ebx] +
cmp edi [esp+6Ch+var_54] +
jnz loc_45E150  +
mov eax [esp+6Ch+var_5C] +
add edi 1 +
mov edx offset a__0 +
mov [ebx] edi +
test byte ptr [eax] 4 +
mov eax offset asc_491468 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_4596D0  +
mov ebp [ebx] +
mov [esp+6Ch+var_6C] ebp +
call strlen  +
test eax eax +
mov edi eax +
jz loc_45E4EF  +
mov ecx eax +
mov eax [esp+6Ch+var_58] +
mov edx ebp +
call sub_459610  +
mov ebp [ebx] +
add edi ebp +
mov [ebx] edi +
jmp loc_45E152  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45AFE0  +
mov esi eax +
jmp loc_45E49A  +
cmp byte ptr [edi] 0 +
jz loc_45E152  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_4596D0  +
jmp loc_45E152  +
mov eax [esp+6Ch+var_5C] +
lea edx [ebp+3] +
mov esi 1 +
mov [ebx] edx +
add dword ptr [eax+2Ch] 1 +
jmp loc_45E152  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45AFE0  +
mov edi [ebx] +
mov esi eax +
jmp loc_45E37B  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45A9C0  +
mov edi [ebx] +
mov esi eax +
jmp loc_45E37B  +
mov edi [ebx] +
jmp loc_45E32C  +
mov eax [esp+6Ch+var_58] +
mov edx esi +
call sub_4596D0  +
jmp loc_45E2B6  +
mov eax ebx +
call sub_4590E0  +
mov edi [ebx] +
mov [esp+6Ch+var_6C] edi +
mov ebp eax +
call strlen  +
cmp ebp eax +
jle loc_45E36F  +
mov [esp+6Ch+var_68] offset byte_47388C +
mov esi 1 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
jmp loc_45E393  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
mov ecx ebp +
call sub_459610  +
mov edi [ebx] +
jmp loc_45E377  +
test ebp ebp +
jz loc_45E24B  +
jmp loc_45E23E  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_45E23E  +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] offset byte_47388C +
call strchr  +
mov edx [esp+6Ch+var_50] +
test eax eax +
jz loc_45E23E  +
mov eax [esp+6Ch+var_58] +
mov edx offset aAnonymous +
call sub_4596D0  +
mov edi [ebx] +
mov [esp+6Ch+var_68] offset byte_47388C +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
mov [esp+6Ch+var_54] eax +
jmp loc_45E250  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [eax+28h] +
test edx edx +
mov [esp+48h+var_2C] edx +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+48h+var_40] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+2Ch] 0 +
mov [esp+48h+var_3C] eax +
mov eax [ebx+30h] +
mov [esp+48h+var_38] eax +
mov eax [ebx+38h] +
mov dword ptr [ebx+38h] 0 +
mov [esp+48h+var_34] eax +
jz loc_45EA10  +
cmp byte ptr [edx] 0 +
jz loc_45EA10  +
test dword ptr [ebx] 300h +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
jnz loc_45E7C8  +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 6 +
jbe loc_45E860  +
mov edi offset a_imp__ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_45E8F0  +
mov edi offset a__imp_ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_45E8F0  +
cmp eax 0Ah +
jbe loc_45E860  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_45E860  +
movsx eax byte ptr [ebp+8] +
mov [esp+48h+var_48] offset byte_47388C +
mov [esp+48h+var_44] eax +
call strchr  +
test eax eax +
jz loc_45EC21  +
movzx ecx byte ptr [ebp+0Ah] +
cmp [eax] cl +
mov [esp+48h+var_30] ebp +
jnz loc_45E902  +
movzx eax byte ptr [ebp+9] +
cmp al 44h +
jz loc_45EC2A  +
cmp al 49h +
mov [esp+48h+var_30] ebp +
jnz loc_45E902  +
add ebp 0Bh +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+28h] 2 +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_45E0B0  +
test eax eax +
jnz loc_45EC9F  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_30] eax +
jmp loc_45E902  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_45E0B0  +
test eax eax +
mov esi eax +
jz loc_45E8B0  +
mov ebp [esp+48h+var_2C] +
cmp byte ptr [ebp+0] 0 +
jnz loc_45E972  +
mov eax [ebx+28h] +
cmp eax 2 +
jz loc_45E9F3  +
cmp dword ptr [ebx+2Ch] 2 +
jz loc_45EAB5  +
cmp dword ptr [ebx+3Ch] 1 +
jz loc_45EAD0  +
mov eax ebx +
call sub_4594B0  +
test esi esi +
jnz loc_45E988  +
mov edx [esp+48h+var_24] +
xor eax eax +
test edx edx +
jz loc_45E838  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
call free  +
mov eax [esp+48h+var_30] +
mov edi [esp+48h+var_40] +
mov ecx [esp+48h+var_3C] +
mov [ebx+28h] edi +
mov edi [esp+48h+var_38] +
mov [ebx+2Ch] ecx +
mov ecx [esp+48h+var_34] +
mov [ebx+30h] edi +
mov [ebx+38h] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dword ptr [ebx] 3800h +
mov [esp+48h+var_30] ebp +
jz loc_45E902  +
mov edi offset a__std__ +
mov ecx 7 +
mov esi ebp +
cmps   +
jz loc_45EAF0  +
mov esi [esp+48h+var_30] +
mov edi offset a__sti__ +
mov ecx 7 +
cmps   +
jnz loc_45E902  +
mov eax [esp+48h+var_30] +
mov dword ptr [ebx+28h] 2 +
add eax 7 +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] eax +
jmp loc_45E902  +
mov eax ebx +
call sub_4594B0  +
mov eax ebx +
call sub_459210  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_45E8E6  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov ebp [esp+48h+var_2C] +
jmp loc_45E6FC  +
add ebp 6 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+3Ch] 1 +
mov [esp+48h+var_30] ebp +
mov eax [esp+48h+var_30] +
mov edx eax +
jmp loc_45E91D  +
cmp byte ptr [eax+1] 5Fh +
lea edx [eax+1] +
jz loc_45E9A4  +
mov [esp+48h+var_44] 5Fh +
mov [esp+48h+var_48] edx +
call strchr  +
test eax eax +
jnz loc_45E910  +
cmp dword ptr [ebx+28h] 2 +
jz loc_45E943  +
xor esi esi +
cmp dword ptr [ebx+2Ch] 2 +
jnz loc_45E805  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_45E954  +
cmp byte ptr [esi] 0 +
jnz loc_45EB07  +
mov [esp+48h+var_48] esi +
call strlen  +
lea ebp [esi+eax] +
mov [esp+48h+var_2C] ebp +
cmp byte ptr [ebp+0] 0 +
mov esi 1 +
jz loc_45E7EF  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_45D690  +
mov esi eax +
jmp loc_45E7EF  +
lea eax [esp+48h+var_24] +
mov ecx 1 +
mov edx offset unk_491360 +
call sub_459610  +
mov eax [esp+48h+var_24] +
jmp loc_45E838  +
test edx edx +
mov esi eax +
jz loc_45E931  +
mov [esp+48h+var_44] offset a__1 +
mov [esp+48h+var_48] esi +
call strspn  +
cmp eax 2 +
jle loc_45E9CB  +
lea esi [esi+eax-2] +
test esi esi +
jz loc_45E931  +
mov eax [ebx+30h] +
test eax eax +
jz loc_45EA17  +
movzx eax byte ptr [esi] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jnz loc_45E9EA  +
cmp al 74h +
jnz loc_45E931  +
mov ebp [esp+48h+var_30] +
jmp loc_45E963  +
mov edx offset aGlobalConstr_0 +
lea eax [esp+48h+var_24] +
call sub_4596A0  +
mov dword ptr [ebx+28h] 0 +
jmp loc_45E80F  +
xor eax eax +
jmp loc_45E838  +
cmp [esp+48h+var_30] esi +
jz loc_45EB1B  +
mov eax [ebx] +
test ah 8 +
jz loc_45EA60  +
cmp byte ptr [esi+2] 70h +
jnz loc_45EA60  +
cmp byte ptr [esi+3] 74h +
jnz loc_45EA60  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call strlen  +
lea edx [esp+48h+var_24] +
mov [esp+48h+var_48] edx +
lea edx [esp+48h+var_2C] +
mov ecx eax +
mov eax ebx +
call sub_45C050  +
mov ebp [esp+48h+var_2C] +
jmp loc_45E963  +
test ah 20h +
jz loc_45EA80  +
movzx eax byte ptr [esi+2] +
cmp al 74h +
jz loc_45EB64  +
cmp al 70h +
jnz loc_45EA80  +
movzx eax byte ptr [esi+3] +
sub eax 73h +
cmp al 1 +
jbe loc_45EA34  +
cmp [esp+48h+var_30] esi +
jz loc_45EB75  +
cmp byte ptr [esi+2] 0 +
jz loc_45E931  +
mov [esp+48h+var_48] esi +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_45DF10  +
test eax eax +
mov esi eax +
jz loc_45E7EF  +
jmp loc_45E7E1  +
mov edx offset aGlobalDestru_0 +
lea eax [esp+48h+var_24] +
call sub_4596A0  +
mov dword ptr [ebx+2Ch] 0 +
jmp loc_45E80F  +
mov edx offset aImportStubFor +
lea eax [esp+48h+var_24] +
call sub_4596A0  +
mov dword ptr [ebx+3Ch] 0 +
jmp loc_45E80F  +
add ebp 7 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+2Ch] 2 +
mov [esp+48h+var_30] ebp +
jmp loc_45E902  +
mov edx esi +
lea eax [esp+48h+var_24] +
call sub_4596D0  +
mov esi [esp+48h+var_2C] +
jmp loc_45E954  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jz loc_45EBF0  +
mov eax [ebx] +
test ah 1Ch +
jz loc_45EC08  +
mov eax [esp+48h+var_30] +
add eax 2 +
mov [esp+48h+var_2C] eax +
lea eax [esp+48h+var_2C] +
call sub_4590E0  +
mov esi [esp+48h+var_2C] +
test esi esi +
jnz loc_45E94B  +
jmp loc_45E954  +
cmp byte ptr [esi+3] 6Dh +
jnz loc_45EA80  +
nop   +
jmp loc_45EA34  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jnz loc_45EA8A  +
cmp al 74h +
jz loc_45EA94  +
test dword ptr [ebx] 3C00h +
jnz loc_45EC3F  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 5Fh +
jnz loc_45EBBC  +
nop   +
lea esi [esi+0] +
add eax 1 +
cmp byte ptr [eax] 5Fh +
jz loc_45EBB0  +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_44] offset unk_491A70 +
mov [esp+48h+var_48] eax +
call strstr  +
test eax eax +
jz loc_45E931  +
cmp byte ptr [eax+2] 0 +
jz loc_45E931  +
mov [esp+48h+var_48] eax +
jmp loc_45EA97  +
cmp al 51h +
jz loc_45EC06  +
cmp al 74h +
jz loc_45EC06  +
cmp al 4Bh +
jz loc_45EC06  +
cmp al 48h +
nop   +
jnz loc_45EA21  +
mov eax [ebx] +
test ah 3Ch +
jnz loc_45EC11  +
add dword ptr [ebx+28h] 1 +
mov ebp [esp+48h+var_30] +
add ebp 2 +
mov [esp+48h+var_2C] ebp +
jmp loc_45E963  +
mov [esp+48h+var_30] ebp +
jmp loc_45E902  +
mov eax ebp +
add eax 0Bh +
mov [esp+48h+var_2C] eax +
mov dword ptr [ebx+2Ch] 2 +
jmp loc_45E7A4  +
mov esi [esp+48h+var_30] +
mov edi offset a__vtbl__ +
mov ecx 8 +
cmps   +
jnz loc_45EBA2  +
mov esi [esp+48h+var_30] +
movzx edx byte ptr [esi+8] +
mov eax esi +
add eax 8 +
mov [esp+48h+var_28] eax +
test dl dl +
jz loc_45ECA8  +
lea eax [esp+48h+var_28] +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
jz loc_45EBA2  +
add eax [esp+48h+var_28] +
mov [esp+48h+var_28] eax +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jnz loc_45EC66  +
cmp byte ptr [eax+1] 5Fh +
jnz loc_45EC6A  +
lea edx [eax+2] +
mov [esp+48h+var_28] edx +
movzx edx byte ptr [eax+2] +
jmp loc_45EC66  +
mov ebp [esp+48h+var_2C] +
jmp loc_45E963  +
mov eax [esp+48h+var_2C] +
lea edx [eax+8] +
movzx eax byte ptr [eax+8] +
mov [esp+48h+var_2C] edx +
test al al +
jz loc_45ED33  +
lea eax [esp+48h+var_2C] +
call sub_4590E0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45EBA2  +
mov edi [esp+48h+var_2C] +
mov [esp+48h+var_48] edi +
call strlen  +
cmp esi eax +
jg loc_45EBA2  +
test esi esi +
jnz loc_45ED20  +
add esi edi +
mov [esp+48h+var_2C] esi +
movzx eax byte ptr [esi] +
cmp al 5Fh +
jnz loc_45ECB7  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_45ECBB  +
mov edx offset asc_491468 +
lea eax [esp+48h+var_24] +
call sub_4596A0  +
mov eax [esp+48h+var_2C] +
lea edx [eax+2] +
mov [esp+48h+var_2C] edx +
movzx eax byte ptr [eax+2] +
jmp loc_45ECB7  +
mov edx edi +
mov ecx esi +
lea eax [esp+48h+var_24] +
call sub_459640  +
mov edi [esp+48h+var_2C] +
jmp loc_45ECE7  +
mov edx offset aVirtualTable +
lea eax [esp+48h+var_24] +
call sub_4596D0  +
mov ebp [esp+48h+var_2C] +
jmp loc_45E963  +
***
mov [esp+18h+var_18] 0Ch +
sub esp 14h +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
test eax eax +
jz loc_45EE1C  +
lea ebx [eax+7] +
and ebx 0FFFFFFF8h +
lea ecx [ebx+8] +
cmp eax ecx +
ja loc_45EE39  +
mov edx [esi+4] +
cmp ebx edx +
jbe loc_45EE60  +
cmp ebx 1FFh +
ja loc_45EE77  +
mov [esp+14h+var_14] 0FE0h +
call malloc  +
test eax eax +
jz loc_45EE39  +
mov edx [esi+8] +
test ebx ebx +
mov dword ptr [eax+4] 0 +
mov [eax] edx +
lea edx [eax+8] +
mov [esi] edx +
mov dword ptr [esi+4] 0FD8h +
mov [esi+8] eax +
jz loc_45EE41  +
mov eax ebx +
jnz loc_45EEAC  +
mov edx [esi+4] +
cmp edx 7 +
ja loc_45EEA0  +
mov [esp+14h+var_14] 0FE0h +
mov ebx 8 +
call malloc  +
test eax eax +
jnz loc_45EDF5  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov ebx 0FFFFFFF8h +
mov ecx 0FD0h +
mov eax 8 +
add eax edx +
mov [esi] eax +
add eax ebx +
mov [esi+4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx ebx +
neg ecx  +
mov eax [esi] +
sub edx ebx +
mov [esi+4] edx +
add eax ebx +
mov [esi] eax +
add esp 14h +
add eax ecx +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ecx +
call malloc  +
test eax eax +
jz loc_45EE39  +
mov edx [esi+8] +
mov [eax] edx +
mov edx [esi] +
mov [eax+4] edx +
mov [esi+8] eax +
add esp 14h +
add eax 8 +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFF8h +
mov ebx 8 +
jmp loc_45EE64  +
mov ecx 0FD8h +
sub ecx ebx +
neg ebx  +
jmp loc_45EE50  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [eax+8] +
test eax eax +
jz loc_45EF40  +
mov ebx eax +
xor ebp ebp +
jmp loc_45EF1D  +
lea edx [ebx+8] +
cmp esi edx +
jz loc_45EF45  +
mov ebx [ebx] +
test ebx ebx +
jz loc_45EF40  +
mov edi [ebx+4] +
test edi edi +
jnz loc_45EF10  +
cmp esi ebx +
jbe loc_45EF32  +
lea edx [ebx+0FE0h] +
cmp esi edx +
jb loc_45EF92  +
mov ebp ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_45EF1D  +
lea esi [esi+0] +
call abort  +
mov ebx [ebx] +
cmp eax ebx +
jnz loc_45EF52  +
jmp loc_45EF60  +
mov eax esi +
mov esi [eax] +
mov [esp+1Ch+var_1C] eax +
call free  +
cmp ebx esi +
jnz loc_45EF50  +
mov eax [esp+1Ch+arg_0] +
mov [eax+8] ebx +
mov edx [ebx+4] +
test edx edx +
jz loc_45EF79  +
nop   +
mov ebx [ebx] +
mov eax [ebx+4] +
test eax eax +
jnz loc_45EF70  +
mov eax [esp+1Ch+arg_0] +
add ebx 0FE0h +
sub ebx edi +
mov [eax] edi +
mov [eax+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
mov [esp+1Ch+var_10] edx +
jz loc_45EF40  +
cmp eax ebx +
jz loc_45F020  +
mov [esp+1Ch+var_14] 0 +
mov edi ebp +
jmp loc_45EFC8  +
cmp edi eax +
mov ecx 0 +
mov [esp+1Ch+var_1C] eax +
cmovz edi ecx +
call free  +
cmp ebp ebx +
jz loc_45EFE5  +
mov eax ebp +
test edi edi +
mov ebp [eax] +
jnz loc_45EFB0  +
cmp esi [eax+4] +
jb loc_45F016  +
mov ecx [esp+1Ch+var_14] +
test ecx ecx +
jnz loc_45EFC2  +
mov edi [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] eax +
jmp loc_45EFC2  +
mov eax [esp+1Ch+var_14] +
mov edi ebp +
test eax eax +
cmovnz edi eax +
mov [esp+1Ch+var_14] edi +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+var_14] +
mov [eax] esi +
mov [eax+8] ecx +
mov eax [esp+1Ch+var_10] +
mov ecx [esp+1Ch+arg_0] +
sub eax esi +
mov [ecx+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_45EFC2  +
mov [esp+1Ch+var_14] eax +
jmp loc_45EFF4  +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_45F090  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_4586C0  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_45F130  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test byte ptr ds:word_490F00[ecx+ecx] 88h +
jz loc_45F16A  +
cmp byte ptr [eax+1] 3Ah +
jz loc_45F190  +
test dl dl +
jz locret_45F187  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_45F17B  +
cmp dl 2Fh +
jnz loc_45F17D  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_45F171  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_45F16A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_0] +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
test al al +
jz loc_45F615  +
mov ebx [esp+2Ch+arg_8] +
mov edi [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+arg_4] +
and ebx 1 +
mov [esp+2Ch+var_1C] ebx +
mov ebx [esp+2Ch+arg_8] +
and edi 10h +
mov [esp+2Ch+var_18] ebp +
and ebx 4 +
mov [esp+2Ch+var_14] ebx +
mov ebx [esp+2Ch+arg_8] +
and ebx 2 +
mov [esp+2Ch+var_20] ebx +
test edi edi +
jz loc_45F204  +
movzx eax ds:byte_490E00[eax] +
cmp al 3Fh +
jz loc_45F2D5  +
jbe loc_45F270  +
cmp al 5Bh +
jz loc_45F342  +
cmp al 5Ch +
jnz loc_45F322  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jnz loc_45F485  +
test edi edi +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
jz loc_45F492  +
movzx edx ds:byte_490E00[edx] +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
movzx eax ds:byte_490E00[eax] +
cmp eax edx +
jnz loc_45F2C8  +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
add [esp+2Ch+var_18] 1 +
test al al +
jz loc_45F5E0  +
mov ecx esi +
mov esi edx +
jmp loc_45F1F9  +
cmp al 2Ah +
jnz loc_45F322  +
test byte ptr [esp+2Ch+arg_8] 4 +
mov ebp [esp+2Ch+var_18] +
jnz loc_45F455  +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
cmp dl 3Fh +
jnz loc_45F61B  +
mov eax [esp+2Ch+arg_8] +
and eax 1 +
jmp loc_45F2B3  +
add esi 1 +
movzx edx byte ptr [esi-1] +
add ebp 1 +
cmp dl 2Ah +
jnz loc_45F4D4  +
test eax eax +
jz loc_45F2BD  +
cmp byte ptr [ebp+0] 2Fh +
jz loc_45F2C8  +
cmp dl 3Fh +
jnz loc_45F2A0  +
cmp byte ptr [ebp+0] 0 +
jnz loc_45F2A0  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
test al al +
jz loc_45F2C8  +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_45F2EC  +
cmp al 2Fh +
jz loc_45F2C8  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_45F252  +
cmp al 2Eh +
jnz loc_45F252  +
mov eax [esp+2Ch+var_18] +
cmp eax [esp+2Ch+arg_4] +
jz loc_45F2C8  +
mov edx [esp+2Ch+var_1C] +
test edx edx +
jz loc_45F252  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_45F252  +
jmp loc_45F2C8  +
mov ebx [esp+2Ch+var_18] +
test edi edi +
movzx edx byte ptr [ebx] +
jz loc_45F24E  +
movzx edx ds:byte_490E00[edx] +
cmp eax edx +
jz loc_45F252  +
jmp loc_45F2C8  +
mov eax [esp+2Ch+var_18] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_45F2C8  +
mov ebx [esp+2Ch+var_14] +
test ebx ebx +
jnz loc_45F4A6  +
movzx eax byte ptr [ecx+1] +
movzx ebp dl +
cmp al 5Eh +
setz bl  +
cmp al 21h +
setz al  +
add ecx 2 +
or ebx eax +
movzx eax bl +
test eax eax +
cmovnz esi ecx +
mov [esp+2Ch+var_10] eax +
lea ecx [esi+1] +
movzx eax byte ptr [esi] +
jmp loc_45F3A8  +
cmp dl ss:byte_490E00[ebp] +
movzx ecx ss:byte_490E00[ebp] +
ja loc_45F39E  +
cmp ecx ebx +
jle loc_45F591  +
cmp al 5Dh +
jz loc_45F580  +
mov ecx esi +
mov esi [esp+2Ch+var_20] +
movzx edx al +
test esi esi +
jnz loc_45F3BB  +
cmp al 5Ch +
jz loc_45F440  +
test edi edi +
jz loc_45F3C6  +
movzx edx ds:byte_490E00[edx] +
test al al +
jz loc_45F2C8  +
test edi edi +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
jz loc_45F3DF  +
movzx eax ds:byte_490E00[eax] +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_45F3EF  +
cmp al 2Fh +
jz loc_45F2C8  +
cmp al 2Dh +
movzx ebx dl +
jz loc_45F402  +
test edi edi +
jnz loc_45F387  +
cmp edx ebp +
jg loc_45F39E  +
mov ecx ebp +
jmp loc_45F396  +
movzx ebx byte ptr [ecx+1] +
cmp bl 5Dh +
jz loc_45F450  +
mov esi [esp+2Ch+var_20] +
lea eax [ecx+2] +
test esi esi +
jnz loc_45F41F  +
cmp bl 5Ch +
jz loc_45F574  +
test bl bl +
jz loc_45F2C8  +
test edi edi +
jz loc_45F432  +
movzx ebx ds:byte_490E00[ebx] +
lea esi [eax+1] +
movzx eax byte ptr [eax] +
jmp loc_45F3F6  +
movzx edx byte ptr [ecx] +
add ecx 1 +
jmp loc_45F3BB  +
movzx ebx dl +
jmp loc_45F3F6  +
cmp byte ptr [ebp+0] 2Eh +
jnz loc_45F287  +
cmp [esp+2Ch+arg_4] ebp +
jz loc_45F2C8  +
test byte ptr [esp+2Ch+arg_8] 1 +
jz loc_45F287  +
cmp byte ptr [ebp-1] 2Fh +
jnz loc_45F287  +
nop   +
jmp loc_45F2C8  +
test edi edi +
mov edx 5Ch +
jnz loc_45F240  +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
cmp eax edx +
jz loc_45F252  +
jmp loc_45F2C8  +
cmp dl 2Eh +
jnz loc_45F35D  +
cmp eax [esp+2Ch+arg_4] +
jz loc_45F2C8  +
mov ebp [esp+2Ch+var_1C] +
test ebp ebp +
jz loc_45F35D  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_45F35D  +
jmp loc_45F2C8  +
cmp dl 3Fh +
jz loc_45F2B3  +
xor eax eax +
test dl dl +
jz loc_45F2CD  +
test byte ptr [esp+2Ch+arg_8] 2 +
movzx ebx dl +
jnz loc_45F4FA  +
cmp dl 5Ch +
jz loc_45F60B  +
test edi edi +
jz loc_45F505  +
movzx ebx ds:byte_490E00[ebx] +
movzx eax byte ptr [ebp+0] +
sub esi 1 +
test al al +
jz loc_45F2C8  +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_1C] esi +
mov esi ebx +
mov ebx edx +
and ecx 0FFFFFFFBh +
mov [esp+2Ch+var_20] ecx +
jmp loc_45F53F  +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_45F2C8  +
cmp bl 5Bh +
jz loc_45F553  +
test edi edi +
jz loc_45F54F  +
movzx eax ds:byte_490E00[eax] +
cmp eax esi +
jnz loc_45F530  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call sub_45F1B0  +
test eax eax +
jnz loc_45F530  +
jmp loc_45F2CD  +
lea eax [ecx+3] +
movzx ebx byte ptr [ecx+2] +
jmp loc_45F41F  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jnz loc_45F252  +
jmp loc_45F2C8  +
cmp al 5Dh +
jz loc_45F5C9  +
test al al +
jz loc_45F2C8  +
mov ecx [esp+2Ch+var_20] +
mov edx esi +
add esi 1 +
test ecx ecx +
movzx eax byte ptr [edx] +
jnz loc_45F5B1  +
cmp al 5Ch +
jz loc_45F5C2  +
cmp al 5Dh +
jz loc_45F5C9  +
test al al +
jz loc_45F2C8  +
mov edx esi +
nop   +
jmp loc_45F5A3  +
lea esi [edx+2] +
mov edx esi +
jmp loc_45F5A3  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_45F252  +
jmp loc_45F2C8  +
mov ebp [esp+2Ch+var_18] +
movzx edx byte ptr [ebp+0] +
xor eax eax +
test dl dl +
jz loc_45F2CD  +
test byte ptr [esp+2Ch+arg_8] 8 +
jz loc_45F2C8  +
cmp dl 2Fh +
jnz loc_45F2C8  +
jmp loc_45F2CD  +
movzx ebx byte ptr [esi] +
nop   +
jmp loc_45F4FA  +
mov ebp [esp+2Ch+arg_4] +
jmp loc_45F5E4  +
cmp dl 2Ah +
jz loc_45F297  +
jmp loc_45F4DD  +
***
mov ebx [esp+48h+arg_0] +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
mov ecx 1 +
test eax eax +
jnz loc_45F663  +
movzx edx [esp+48h+var_32] +
and dx 0F000h +
cmp dx 8000h +
jz loc_45F670  +
add esp 48h +
mov eax ecx +
pop ebx  +
retn   +
mov [esp+48h+var_48] ebx +
call _unlink  +
add esp 48h +
pop ebx  +
mov ecx eax +
mov eax ecx +
retn   +
***
push esi  +
xor esi esi +
push ebx  +
sub esp 14h +
mov edx [esp+20h] +
lea ebx [esp+24h] +
test edx edx +
jz loc_45F6B7  +
mov [esp] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_45F6A3  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_45F6FD  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_45F6D7  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_49A858 +
mov ebx [esp+30h] +
lea edi [esp+34h] +
test ebx ebx +
jz loc_45F756  +
lea esi [esi+0] +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_45F730  +
mov byte ptr [esi] 0 +
mov eax ds:dword_49A858 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
lea esi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_45F7E5  +
mov eax ebx +
xor edi edi +
mov [esp+1Ch+var_1C] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_45F787  +
add edi 1 +
mov [esp+1Ch+var_1C] edi +
lea edi [esp+1Ch+arg_4] +
call sub_4586C0  +
mov [esp+1Ch+var_10] eax +
mov esi eax +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_45F7B0  +
mov byte ptr [esi] 0 +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] 1 +
call sub_4586C0  +
mov esi eax +
mov [esp+1Ch+var_10] eax +
jmp loc_45F7D6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_45F889  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_45F817  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_4586C0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_45F840  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_45F87D  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4586C0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_45F866  +
***
push ebx  +
sub esp 14h +
test eax eax +
jz loc_45F8CE  +
mov edx [eax] +
lea ebx [eax+4] +
test edx edx +
jz loc_45F8C6  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call free  +
mov edx [ebx-4] +
test edx edx +
jnz loc_45F8B4  +
mov [esp+18h+var_18] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call malloc  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx ebx byte ptr [eax+1] +
mov [esp+28h+var_1C] edx +
xor edx edx +
cmp bl 3Ah +
jnz loc_45F956  +
jmp loc_45FA6F  +
cmp eax 5Ch +
jz loc_45F9E1  +
cmp eax 2Fh +
lea esi [esi+0] +
jz loc_45F9E1  +
movsx eax byte ptr [ecx] +
add ecx 1 +
test eax eax +
jnz loc_45F940  +
lea eax ds:8[edx*4] +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov edi eax +
jz loc_45FAB8  +
xor ebp ebp +
cmp bl 3Ah +
jz loc_45FA40  +
mov edx esi +
jmp loc_45F994  +
cmp eax 5Ch +
jz loc_45FA03  +
cmp eax 2Fh +
jz loc_45FA03  +
mov edx ebx +
lea ebx [edx+1] +
movsx eax byte ptr [ebx-1] +
test eax eax +
jnz loc_45F988  +
sub edx esi +
mov eax ebp +
test edx edx +
jle loc_45F9B6  +
lea ebx [edi+eax*4] +
mov eax esi +
call sub_45F8E0  +
add ebp 1 +
mov [ebx] eax +
mov eax [edi+ebp*4-4] +
mov dword ptr [edi+ebp*4] 0 +
test eax eax +
jz loc_45FABF  +
mov eax [esp+28h+var_1C] +
test eax eax +
jz loc_45FA8C  +
mov [eax] ebp +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax byte ptr [ecx] +
add edx 1 +
cmp al 5Ch +
jnz loc_45F9FA  +
nop   +
lea esi [esi+0] +
add ecx 1 +
movsx eax byte ptr [ecx] +
cmp al 5Ch +
jz loc_45F9F0  +
cmp al 2Fh +
jz loc_45F9F0  +
jmp loc_45F959  +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_45FA96  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_45FA10  +
cmp al 2Fh +
jz loc_45FA10  +
mov edx ebx +
mov eax esi +
sub edx esi +
add ebp 1 +
call sub_45F8E0  +
test eax eax +
mov [edi+ebp*4-4] eax +
jz loc_45FAA3  +
mov esi ebx +
jmp loc_45F984  +
movzx eax byte ptr [esi+2] +
cmp al 5Ch +
jz loc_45FA50  +
cmp al 2Fh +
jnz loc_45F984  +
mov edx 3 +
mov eax esi +
call sub_45F8E0  +
test eax eax +
mov [edi] eax +
jz loc_45FACD  +
add esi 3 +
mov ebp 1 +
jmp loc_45F984  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_45FA7F  +
cmp al 2Fh +
jnz loc_45F956  +
lea ecx [esi+3] +
mov edx 1 +
jmp loc_45F956  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 5Ch +
jz loc_45FA10  +
jmp loc_45FA1E  +
mov eax edi +
mov dword ptr [edi+ebp*4] 0 +
call sub_45F8A0  +
xor eax eax +
jmp loc_45F9D9  +
xor eax eax +
jmp loc_45F9D9  +
mov eax edi +
call sub_45F8A0  +
xor eax eax +
jmp loc_45F9D9  +
mov [esp+28h+var_28] edi +
call free  +
xor eax eax +
jmp loc_45F9D9  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 7Ch +
test eax eax +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_45FDC0  +
test edx edx +
jz loc_45FDC0  +
mov ebx [ebp+var_60] +
test ebx ebx +
jz loc_45FDC0  +
mov [esp+88h+var_88] eax +
call sub_45F1A0  +
cmp eax esi +
mov [ebp+var_64] eax +
jz loc_45FDD0  +
mov ecx [ebp+arg_0] +
mov [esp+88h+var_88] esi +
test ecx ecx +
jnz loc_45FC40  +
call _strdup  +
mov ebx eax +
test ebx ebx +
jz loc_45FDC0  +
lea edx [ebp+var_50] +
mov eax ebx +
call sub_45F920  +
mov [esp+88h+var_88] ebx +
mov esi eax +
mov [ebp+var_64] eax +
call free  +
test esi esi +
jz loc_45FDC0  +
mov eax [ebp+var_5C] +
lea edx [ebp+var_4C] +
call sub_45F920  +
test eax eax +
mov ebx eax +
jz loc_45FDB0  +
mov eax [ebp+var_50] +
lea esi [eax-1] +
cmp esi [ebp+var_4C] +
mov [ebp+var_50] esi +
jnz loc_45FBBD  +
test esi esi +
jle loc_45FDB0  +
mov [ebp+var_5C] esi +
xor edi edi +
mov esi [ebp+var_64] +
jmp loc_45FB9C  +
add edi 1 +
cmp [ebp+var_5C] edi +
jz loc_45FDB0  +
mov eax [ebx+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [esi+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_45FB90  +
mov esi [ebp+var_5C] +
cmp esi edi +
jz loc_45FDB0  +
mov eax [ebp+var_60] +
lea edx [ebp+var_48] +
call sub_45F920  +
test eax eax +
mov edx eax +
mov [ebp+var_60] eax +
jz loc_45FDB0  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_48] +
mov [ebp+var_68] eax +
cmp ecx eax +
cmovle eax ecx +
test eax eax +
mov [ebp+var_6C] ecx +
jle loc_45FF48  +
xor edi edi +
mov esi edx +
mov [ebp+var_5C] eax +
jmp loc_45FBFF  +
add edi 1 +
cmp edi [ebp+var_5C] +
jz loc_45FC50  +
mov eax [esi+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [ebx+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_45FBF7  +
xor esi esi +
test edi edi +
jnz loc_45FC50  +
mov eax [ebp+var_64] +
call sub_45F8A0  +
mov eax ebx +
call sub_45F8A0  +
mov eax [ebp+var_60] +
call sub_45F8A0  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_45F030  +
mov ebx eax +
jmp loc_45FB34  +
mov eax [ebp+var_50] +
test eax eax +
jle loc_45FF1D  +
mov edx [ebp+var_64] +
mov [ebp+var_5C] ebx +
mov [ebp+var_70] edi +
mov esi edx +
lea eax [edx+eax*4] +
xor edx edx +
mov edi esi +
mov ebx edx +
mov esi eax +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_45FC71  +
mov esi ebx +
mov edi [ebp+var_70] +
mov ebx [ebp+var_5C] +
mov eax [ebp+var_68] +
mov edx [ebp+var_6C] +
sub eax edi +
lea eax [eax+eax*2] +
add eax esi +
cmp edx edi +
jle loc_45FCCD  +
mov ecx [ebp+var_60] +
mov [ebp+var_5C] ebx +
mov ebx eax +
mov [ebp+var_68] edi +
lea esi [ecx+edi*4] +
lea edx [ecx+edx*4] +
mov edi esi +
mov esi edx +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_45FCB2  +
mov eax ebx +
mov edi [ebp+var_68] +
mov ebx [ebp+var_5C] +
mov esi eax +
add esi 1 +
mov [esp+88h+var_88] esi +
call malloc  +
test eax eax +
mov esi eax +
jz loc_45FC1B  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_50] +
xor ecx ecx +
test eax eax +
mov [ebp+var_5C] eax +
jle loc_45FD1D  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_64] +
mov [ebp+var_6C] edi +
mov edi ecx +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_45FD00  +
mov ebx [ebp+var_68] +
mov edi [ebp+var_6C] +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_45FD1F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovnz ecx edx +
add al al +
mov eax [ebp+var_4C] +
sbb ecx 3 +
cmp edi eax +
jge loc_45FF57  +
sub eax edi +
lea eax [eax+eax*2] +
add eax ecx +
nop   +
mov edx 2E2Eh +
add ecx 3 +
mov [ecx-3] dx +
mov byte ptr [ecx-1] 0 +
cmp ecx eax +
mov byte ptr [ecx-1] 2Fh +
jnz loc_45FD60  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_48] +
cmp edi eax +
mov [ebp+var_5C] eax +
jge loc_45FC1B  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_60] +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_45FD90  +
mov ebx [ebp+var_68] +
jmp loc_45FC1B  +
xor esi esi +
mov [ebp+var_60] 0 +
jmp loc_45FC1B  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+88h+var_88] offset aPath +
call getenv  +
test eax eax +
jz loc_45FB1F  +
mov [esp+88h+var_88] eax +
mov [ebp+var_68] eax +
call strlen  +
lea ebx [eax+1] +
mov eax 2 +
cmp ebx 1 +
cmovbe ebx eax +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] eax +
call strlen  +
lea eax [ebx+eax+23h] +
and eax 0FFFFFFF0h +
call sub_46FEC0  +
mov edx [ebp+var_68] +
sub esp eax +
lea edi [esp+88h+var_70+3] +
mov ebx edx +
and edi 0FFFFFFF0h +
mov [ebp+var_68] edi +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45FE40  +
cmp al 3Bh +
jz loc_45FE40  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_45FE2C  +
lea esi [esi+0] +
cmp ebx edx +
jz loc_45FF30  +
mov esi ebx +
sub esi edx +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_88] edi +
call memcpy  +
movzx eax byte ptr [ebx-1] +
cmp al 5Ch +
jz loc_45FF24  +
cmp al 2Fh +
jz loc_45FF24  +
mov byte ptr [edi+esi] 2Fh +
mov byte ptr [edi+esi+1] 0 +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] edi +
mov [esp+88h+var_84] eax +
call strcat  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jz loc_45FEEC  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_45FE9F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov dword ptr [edx] 6578652Eh +
mov byte ptr [edx+4] 0 +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jnz loc_45FF0E  +
lea eax [ebp+var_48] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edi +
call ds:_stati64  +
test eax eax +
js loc_45FF0E  +
movzx eax [ebp+var_42] +
and ax 0F000h +
cmp ax 8000h +
jz loc_45FF4F  +
cmp byte ptr [ebx] 0 +
jz loc_45FF40  +
add ebx 1 +
mov edx ebx +
jmp loc_45FE25  +
xor esi esi +
jmp loc_45FC8C  +
mov byte ptr [edi+esi] 0 +
jmp loc_45FE79  +
mov byte ptr [edi] 2Eh +
mov byte ptr [edi+1] 2Fh +
mov byte ptr [edi+2] 0 +
jmp loc_45FE79  +
mov esi [ebp+var_64] +
jmp loc_45FB1F  +
xor esi esi +
jmp loc_45FC1B  +
mov esi [ebp+var_68] +
jmp loc_45FB1F  +
mov eax ecx +
jmp loc_45FD78  +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov [esp+arg_0] 1 +
jmp sub_45FAE0  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp sub_45FAE0  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_45FFCB  +
test eax eax +
jz loc_45FFF4  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_490E00[eax] +
movzx edx ds:byte_490E00[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_45FFC1  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_460041  +
jmp loc_460072  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_460070  +
mov ecx ebp +
test cl cl +
jnz loc_460070  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_460077  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_490E00[eax] +
movzx edx ds:byte_490E00[edx] +
cmp eax 2Fh +
jnz loc_460018  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_46002E  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_4600B9  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_490E00[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_460097  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_45FFB0  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F030  +
mov ebx eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_45F030  +
mov [esp] ebx +
mov [esp+4] eax +
mov esi eax +
call sub_45FFB0  +
mov [esp] ebx +
mov edi eax +
call free  +
mov [esp] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax ds:dword_49A484 +
test eax eax +
jz loc_460150  +
retn   +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 105h +
call sub_4586C0  +
mov [esp+1Ch+var_18] 105h +
mov [esp+1Ch+var_1C] eax +
call _getcwd  +
mov ds:dword_49A484 eax +
add esp 1Ch +
retn   +
***
mov eax [esp+arg_4] +
cmp [esp+arg_0] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_46043C  +
shl edx 3 +
cmp ebx edx +
ja loc_460433  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_46045B  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_460477  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_460335  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_460412  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_460328  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_492660[eax] +
mov edx ds:dword_49266C[eax] +
mov eax ds:dword_492660[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_4603FF  +
cmp eax 1 +
jz loc_4604B1  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_4603EA  +
cmp edx 1 +
jz loc_4604B1  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_4603E1  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_460335  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_460481  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_4602DD  +
call sub_460210  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_492660[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_4602EC  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_460308  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_46042B  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+4] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_460210  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_492660[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_460583  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_460570  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_460583  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_460210  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_492660[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_46061F  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_460610  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_46061F  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_460590  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset loc_4586F0 +
mov dword ptr [esp+10h] offset loc_4586F0 +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_460590  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset calloc +
mov [esp+2Ch+var_1C] offset calloc +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_460590  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_460771  +
sub ebx 1 +
js loc_460771  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_460757  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_46075C  +
mov eax [edi+28h] +
test eax eax +
jz loc_460790  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_4607B2  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_4607FB  +
lea esi [esi+0] +
sub ebx 1 +
js loc_4607FB  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_4607E0  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_4607E5  +
cmp edi 40000h +
jbe loc_460850  +
mov eax 100h +
call sub_460210  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_492660[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_460880  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_460898  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_460867  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_460827  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_460827  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_460845  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_492660[eax] +
mov eax ds:dword_492660[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_4609D0  +
cmp edx 1 +
jz loc_4609E0  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_4609C4  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_492660[eax] +
mov eax ds:dword_492660[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_4609D0  +
cmp ebp 1 +
jz loc_460983  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_4609C2  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_460983  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_460954  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] eax +
call sub_4608B0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_460BA1  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_492660[eax] +
mov ecx ds:dword_49266C[eax] +
mov eax ds:dword_492660[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_460BCD  +
cmp eax 1 +
jz loc_460AE2  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_460B94  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_492660[edx] +
mov ecx ds:dword_49266C[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_492660[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_460B70  +
cmp ecx 1 +
jz loc_460B60  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_460B94  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_460B15  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_460B15  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_460BC9  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_460BD8  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_460A3D  +
mov eax ebx +
call sub_4602A0  +
test eax eax +
jz loc_460BC9  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_460A3D  +
xor eax eax +
jmp loc_460B8C  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_460BC9  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_460A20  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_460A20  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_460C77  +
mov edx [ebx+8] +
test edx edx +
jz loc_460C6D  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_460C30  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_460D27  +
add ebx 4 +
cmp esi ebx +
jbe loc_460D39  +
cmp dword ptr [ebx] 1 +
jbe loc_460D20  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_460D20  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_460D50  +
push edi  +
push esi  +
push ebx  +
mov ebx [esp+10h] +
mov esi [esp+14h] +
mov edi [esp+18h] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_460D74  +
cmp edx 20h +
ja loc_460D88  +
mov [esp+18h] edi +
mov [esp+14h] esi +
mov [esp+10h] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_460D00  +
***
mov eax ebx +
call sub_4602A0  +
jmp loc_460D74  +
***
jmp loc_460DA0  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_460DD1  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_460DF0  +
retn   +
***
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_4] +
test al 3 +
jz loc_460FF6  +
cmp esi 0Bh +
jbe loc_460F1E  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_460E40  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+0Ch+arg_4] +
cmp esi 0Bh +
ja loc_460F8C  +
jmp ds:off_492624[esi*4]  +
movzx esi byte ptr [eax+0Ah] +
shl esi 18h +
add ebx esi +
movzx esi byte ptr [eax+9] +
shl esi 10h +
add ebx esi +
movzx esi byte ptr [eax+8] +
shl esi 8 +
add ebx esi +
movzx esi byte ptr [eax+7] +
shl esi 18h +
add ecx esi +
movzx esi byte ptr [eax+6] +
shl esi 10h +
add ecx esi +
movzx esi byte ptr [eax+5] +
shl esi 8 +
add ecx esi +
movzx esi byte ptr [eax+4] +
add ecx esi +
movzx esi byte ptr [eax+3] +
shl esi 18h +
add edx esi +
movzx esi byte ptr [eax+2] +
shl esi 10h +
add edx esi +
movzx esi byte ptr [eax+1] +
shl esi 8 +
add edx esi +
movzx eax byte ptr [eax] +
add edx eax +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0Ch+arg_4] 0Bh +
jbe loc_460F1E  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
lea ecx [ecx+edi] +
sub edi ebx +
sub edx ecx +
mov ecx ebx +
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_461005  +
mov ebx ecx +
mov ecx edi +
jmp loc_460F1E  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [ebx+5] +
cmp edx eax +
jge loc_46133B  +
mov ecx [esp+3Ch+arg_0] +
sub eax ebx +
mov edi offset aXxxxxx +
lea ebx [ecx+eax-6] +
mov ecx 6 +
mov esi ebx +
cmps   +
jnz loc_46133B  +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] eax +
call sub_471240  +
mov eax [esp+3Ch+var_10] +
mov ebp [esp+3Ch+var_14] +
cdq   +
shld edx eax +
mov edi ebp +
shl eax 10h +
sar edi 1Fh +
xor ebp eax +
mov eax edx +
xor eax edi +
mov [esp+3Ch+var_20] eax +
call _getpid  +
xor ebp eax +
mov ecx eax +
mov eax [esp+3Ch+var_20] +
sar ecx 1Fh +
mov esi ebp +
mov ebp 7FFFh +
xor eax ecx +
mov edi eax +
add esi ds:dword_49A488 +
adc edi ds:dword_49A48C +
mov ds:dword_49A488 esi +
mov ds:dword_49A48C edi +
jmp loc_46117C  +
call ds:__imp__errno  +
cmp dword ptr [eax] 11h +
jz loc_461152  +
call ds:__imp__errno  +
cmp dword ptr [eax] 15h +
jnz loc_461327  +
mov esi ds:dword_49A488 +
mov edi ds:dword_49A48C +
add esi 1E61h +
adc edi 0 +
sub ebp 1 +
mov ds:dword_49A488 esi +
mov ds:dword_49A48C edi +
jz loc_461327  +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_4701F0  +
movzx eax ds:byte_492860[eax] +
mov [ebx] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_470340  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_4701F0  +
movzx eax ds:byte_492860[eax] +
mov [ebx+1] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_470340  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_4701F0  +
movzx eax ds:byte_492860[eax] +
mov [ebx+2] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_470340  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_4701F0  +
movzx eax ds:byte_492860[eax] +
mov [ebx+3] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_470340  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_4701F0  +
movzx eax ds:byte_492860[eax] +
mov [ebx+4] al +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
call sub_470340  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_4701F0  +
movzx eax ds:byte_492860[eax] +
mov [ebx+5] al +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] 180h +
mov [esp+3Ch+var_38] 8502h +
mov [esp+3Ch+var_3C] eax +
call _open  +
test eax eax +
js loc_461138  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov byte ptr [eax] 0 +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp edx 4Bh +
ja loc_4613A7  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_4928A0[edx*4]  +
test ecx ecx +
jz loc_4613A3  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_461392  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_461392  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_4613A3  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_461366  +
xor eax eax +
jmp loc_461392  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_4613D6  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_4613D6  +
test edx edx +
jz loc_4613D6  +
test ecx ecx +
jnz loc_4613E0  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_461455  +
test dl dl +
jnz loc_461461  +
cmp al 4Bh +
jnz loc_4614A0  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_461350  +
test eax eax +
mov [esi] eax +
jz loc_461495  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_461417  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_461480  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_461436  +
test cl cl +
jz loc_461427  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_461436  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_4614E3  +
cmp al 46h +
jnz loc_4614E3  +
cmp esi ebp +
jnz loc_4614CA  +
lea esi [esi+0] +
jmp loc_4614E3  +
cmp eax 1Bh +
jz loc_4614F0  +
cmp eax 19h +
jnz loc_4614C3  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_4614E3  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_4614B2  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_4614CA  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_4614C3  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_461540  +
test dl dl +
jnz loc_461544  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_461350  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_461539  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_461523  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_461577  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Bh +
ja loc_461577  +
mov ecx [ebx] +
jmp ds:off_4929D0[ecx*4]  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_461560  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+4] +
jmp loc_461573  +
mov ecx [ebx+4] +
cmp dword ptr [ecx] 5 +
jnz loc_461593  +
add dword ptr [edi] 1 +
mov ecx [ebx+4] +
mov edx edi +
mov eax esi +
call sub_461550  +
mov ebx [ebx+8] +
jmp loc_461573  +
add dword ptr [esi] 1 +
mov ecx [ebx+4] +
jmp loc_461593  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_4615E0  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_4615C5  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_461674  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_461683  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_461650  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_461641  +
xor eax eax +
jmp loc_461667  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_4616C5  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_4616C1  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_461630  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_4616F8  +
cmp al 6Eh +
jz loc_4616F1  +
lea eax [ebx+0Ch] +
call sub_461630  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_461702  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_4616FA  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_461721  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_4616D0  +
test eax eax +
js loc_46171C  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_46171C  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_46171C  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_461770  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_461630  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_461630  +
test eax eax +
mov esi eax +
jle loc_461844  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_461848  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_461800  +
cmp esi 9 +
jle loc_4617E7  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_461810  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_4613B0  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_4617C6  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_4617C6  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_461820  +
cmp al 5Fh +
jz loc_461820  +
cmp al 24h +
jnz loc_4617E7  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_4617E7  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_4613B0  +
jmp loc_4617F2  +
xor eax eax +
jmp loc_4617F5  +
xor eax eax +
lea esi [esi+0] +
jmp loc_4617F2  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_46189E  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_461790  +
mov ecx edi +
mov edx 4Ah +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_461350  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_461876  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_4618D0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_461920  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_4618FF  +
test cl cl +
jnz loc_4618FF  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_0 +
cmp dl [eax] +
jz loc_4619B4  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_461907  +
jmp loc_4618C1  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_461A8A  +
cmp dl 5Fh +
jz loc_4619B0  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_461973  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_4618C1  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_461988  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_461990  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_461944  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_4618C1  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_46194B  +
xor edx edx +
mov eax ecx +
jmp loc_46196B  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_4618C1  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_461993  +
mov edi [eax+14h] +
test edi edi +
mov [esp+1Ch+var_14] edi +
jz loc_461A7A  +
mov edx [ebx+14h] +
mov ebp [ebx+18h] +
mov edi [eax+18h] +
mov [esp+1Ch+var_18] 0 +
cmp edx ebp +
mov [esp+1Ch+var_10] edi +
jge loc_461A07  +
mov esi [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_461A07  +
mov esi [esp+1Ch+var_14] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_18] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_10] +
mov [edi+8] esi +
mov edi [esp+1Ch+var_18] +
mov [ebx+2Ch] edi +
test ecx ecx +
jz loc_461A82  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edx ebp +
jge loc_461A40  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_461A40  +
mov dword ptr [eax] 18h +
mov [eax+4] esi +
mov [eax+8] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_4618C3  +
mov edx eax +
mov eax ebx +
call sub_461860  +
test eax eax +
jz loc_4618C1  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_4618C3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_4618C3  +
mov ebp [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_461A0E  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_461A18  +
cmp dl 5Fh +
jz loc_461935  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_46193A  +
nop   +
jmp loc_4618E0  +
***
push ebx  +
mov ebx eax +
jnz loc_461ACE  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_461AC5  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_461B00  +
cmp edx 76h +
jnz loc_461AC0  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_461630  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_461AC0  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_461630  +
jmp loc_461B08  +
lea eax [ebx+0Ch] +
call sub_461630  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_461AC2  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_461AC2  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_461B67  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_461B60  +
cmp dword ptr [eax] 2Fh +
jnz loc_461B60  +
cmp edx 0 +
jg loc_461B4B  +
jmp loc_461B57  +
cmp dword ptr [eax] 2Fh +
jnz loc_461B60  +
test edx edx +
jz loc_461B63  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_461B42  +
retn   +
jz loc_461B63  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_461BB5  +
cmp dword ptr [ebx] 4Ah +
ja loc_461BA0  +
mov edx [ebx] +
jmp ds:off_492B20[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_461B80  +
test eax eax +
jnz loc_461BB7  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_461B8D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_461B20  +
test eax eax +
jz loc_461BB5  +
cmp dword ptr [eax] 2Fh +
jnz loc_461BB5  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_461C40  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_461C10  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi] +
mov edx [esp+10h+arg_0] +
add eax [esi+4] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_461C03  +
test ebx ebx +
jnz loc_461C52  +
cmp eax 2 +
mov bl 2 +
jbe loc_461C58  +
add ebx ebx +
cmp eax ebx +
ja loc_461C52  +
mov eax [esi] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_461C71  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_461BFC  +
mov eax [esi] +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_461C03  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_461D23  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_461CDC  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_461D23  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461CC1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_461CC4  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_492C4C +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_461DD0  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_461D82  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_461DD0  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_461D67  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_461D6A  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_80] edx +
jz loc_461EE0  +
mov eax [eax+118h] +
test eax eax +
jnz loc_461ED0  +
mov eax [ecx] +
cmp eax 4Bh +
ja loc_463383  +
jmp ds:off_492EB8[eax*4]  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_461E50  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_461E50  +
cmp esi 6 +
jbe loc_463C72  +
cmp esi 7 +
jnz loc_461E50  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_461E50  +
cmp dword ptr [edx+8] 1 +
jz loc_4640AE  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_463C27  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_464180  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_463BF0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_463DF2  +
cmp esi 8 +
jz loc_463DC7  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
lea esi [esi+0] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_464180  +
mov eax ebx +
mov edx offset aClone +
call sub_461CA0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_464180  +
mov edx 5Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_464180  +
mov eax ebx +
mov edx offset aAbi +
call sub_461CA0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_464180  +
mov edx 5Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov edx [ecx+4] +
mov eax ebx +
call sub_461B80  +
test eax eax +
jz loc_463F8B  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_4635A2  +
mov edx [eax+4] +
test edx edx +
jz loc_4635A2  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_461F78  +
mov eax [ebp+4] +
mov [esp+98h+var_78] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+98h+var_74] eax +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov [ebx+11Ch] edi +
call sub_464180  +
cmp [esp+98h+var_74] edi +
jle loc_4633C4  +
mov eax [ebx+100h] +
mov ebp offset asc_492DE6 +
jmp loc_461FF5  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_492DE6+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4633C4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_461FD2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_461FD5  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_462073  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492DD1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463477  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462050  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462053  +
mov eax ebx +
mov edx offset aUnnamedType +
call sub_461CA0  +
mov edx [ebp+4] +
mov eax ebx +
add edx 1 +
call sub_461D30  +
mov edx 7Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aLambda +
call sub_461CA0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
mov eax ebx +
mov edx offset asc_492E9A +
call sub_461CA0  +
mov edx [ebp+8] +
mov eax ebx +
add edx 1 +
call sub_461D30  +
mov edx 7Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aGlobalDestruct +
call sub_461CA0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aGlobalConstruc +
call sub_461CA0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aDecltype +
call sub_461CA0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_464180  +
mov edx 29h +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov edx [ecx+4] +
mov eax ebx +
call sub_461D30  +
jmp loc_461ED0  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_4621D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492DB6h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46349D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4621B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4621B3  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_463B4F  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_461ED0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_464180  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_464180  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aJavaResource +
call sub_461CA0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_461EE0  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_461EE0  +
mov eax [eax+4] +
mov edi offset aQu +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+98h+var_7C] eax +
mov eax [edx+4] +
mov [esp+98h+var_78] eax +
mov eax [edx+8] +
mov [esp+98h+var_74] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_463F1F  +
mov eax ebx +
mov edx offset aNew +
call sub_461CA0  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax+4] 0 +
jz loc_462309  +
mov edx [esp+98h+var_80] +
mov ecx eax +
mov eax ebx +
call sub_465410  +
mov edx 20h +
mov eax ebx +
call sub_4615B0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_78] +
mov edx edi +
call sub_464180  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_461ED0  +
mov edx edi +
mov eax ebx +
call sub_465410  +
jmp loc_461ED0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 37h +
jnz loc_461EE0  +
mov edi [ecx+4] +
mov esi [edi+4] +
mov [esp+98h+var_7C] edi +
mov edx [esi] +
cmp byte ptr [edx+1] 63h +
jz loc_463E2F  +
mov edi [esp+98h+var_7C] +
cmp dword ptr [edi] 31h +
jz loc_463392  +
mov esi edx +
mov ecx 3 +
mov edi offset aCl +
cmps   +
mov ecx [eax+4] +
jnz loc_46238E  +
cmp dword ptr [ecx] 3 +
jz loc_463F66  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_465410  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx +
mov edx [eax+4] +
mov [esp+98h+var_7C] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_463EDD  +
mov ecx 3 +
mov esi edx +
mov edi offset aCl +
cmps   +
jnz loc_463F0B  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_465410  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_461ED0  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_461ED0  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_461ED0  +
mov edx 29h +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+98h+var_78] eax +
mov eax [eax] +
mov [esp+98h+var_7C] edi +
cmp eax 31h +
jz loc_4638EE  +
cmp eax 33h +
jz loc_4639BC  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_465350  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_465410  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aOperator +
call sub_461CA0  +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_4650D0  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aOperator +
call sub_461CA0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ebp [ecx+4] +
mov eax ebx +
mov edx offset aOperator_0 +
mov edi [ebp+8] +
call sub_461CA0  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_46371A  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_461ED0  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_462501  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461ED0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4624E2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_4624E5  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_46255C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_464180  +
mov eax ebx +
mov edx 7Bh +
call sub_4615B0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx esi +
call sub_464180  +
mov edx 7Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_462598  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_464180  +
mov eax [ebp+8] +
test eax eax +
jz loc_461ED0  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_4639EB  +
mov edx offset asc_492DE6 +
mov eax ebx +
call sub_461CA0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov esi [ebx+120h] +
mov edi [ebx+100h] +
call sub_464180  +
cmp [ebx+120h] esi +
jnz loc_461ED0  +
mov eax [ebx+100h] +
cmp eax edi +
jnz loc_461ED0  +
sub eax 2 +
mov [ebx+100h] eax +
jmp loc_461ED0  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_46372E  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_4939E0 +
jz loc_462630  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_464180  +
mov edx 20h +
mov eax ebx +
call sub_4615B0  +
cmp word ptr [ebp+8] 0 +
jz loc_46366C  +
mov edx offset a_accum +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_465350  +
jmp loc_461ED0  +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ecx +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_464180  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_4626AC  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_4641C0  +
mov eax [esp+98h+var_58] +
mov [ebx+114h] eax +
jmp loc_461ED0  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov ecx eax +
mov [esp+98h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+98h+var_74] edi +
test esi esi +
mov [esp+98h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_464140  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_464140  +
mov eax esi +
mov esi 1 +
mov [esp+98h+var_70] ebp +
mov [esp+98h+var_7C] ecx +
jmp loc_46272D  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_46277E  +
mov edx [eax+8] +
test edx edx +
jnz loc_462778  +
cmp esi 3 +
ja loc_463B07  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+98h+var_58] edi +
mov edi [esp+98h+var_7C] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_462720  +
mov ebp [esp+98h+var_70] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov ecx [ebp+8] +
call sub_464180  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_461ED0  +
cmp esi 1 +
jz loc_463EA0  +
mov edi [esp+98h+var_78] +
sub esi 1 +
mov [esp+98h+var_7C] ebp +
mov ebp [esp+98h+var_80] +
mov eax esi +
shl eax 4 +
lea edi [edi+eax+4] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_4641C0  +
cmp esi 1 +
jz loc_46368A  +
sub esi 1 +
jmp loc_4627C7  +
test byte ptr [esp+98h+var_80] 20h +
jnz loc_4636E5  +
cmp dword ptr [ecx+4] 0 +
jz loc_4627FF  +
test byte ptr [esp+98h+var_80] 40h +
jz loc_463B8E  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_464DC0  +
jmp loc_461ED0  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_462853  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D01h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46342B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462830  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462833  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_4628C9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CEFh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463418  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4628A6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4628A9  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_462943  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CD9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463405  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462920  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462923  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_4629B9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CC8h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46356E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462996  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462999  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_462A33  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492CB5h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46355B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462A10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462A13  +
mov eax ebx +
mov edx offset aConstructionVt +
call sub_461CA0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
mov edx edi +
call sub_464180  +
mov eax ebx +
mov edx offset aIn +
call sub_461CA0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_464180  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aVttFor +
call sub_461CA0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aVtableFor +
call sub_461CA0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov eax ebx +
mov edx 7Eh +
call sub_4615B0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov esi [ecx+4] +
test esi esi +
jnz loc_4635B6  +
mov edx offset aThis +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
lea edx [ecx+4] +
mov eax ebx +
call sub_461B20  +
test eax eax +
jz loc_4636D6  +
cmp dword ptr [eax] 2Fh +
jz loc_4636AA  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_80] +
call sub_464180  +
mov [ebx+110h] esi +
jmp loc_461ED0  +
mov eax [ebx+140h] +
test byte ptr [esp+98h+var_80] 4 +
mov [ebx+140h] ecx +
mov [esp+98h+var_7C] eax +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+98h+var_78] eax +
jz loc_462BBD  +
mov esi [edx] +
test esi esi +
jnz loc_462BBD  +
cmp dword ptr [edx+8] 6 +
jz loc_463EA9  +
mov ecx edx +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_464180  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_463DB6  +
mov edx 3Ch +
mov eax ebx +
call sub_4615B0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_463DA5  +
mov edx 3Eh +
mov eax ebx +
call sub_4615B0  +
mov eax [esp+98h+var_78] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_7C] +
mov [ebx+140h] eax +
jmp loc_461ED0  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov esi [ecx+4] +
mov [esp+98h+var_74] eax +
test esi esi +
jz loc_463D96  +
mov eax [ebx+110h] +
xor edx edx +
xor edi edi +
mov [esp+98h+var_70] ecx +
mov [esp+98h+var_7C] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_78] eax +
mov ecx [esp+98h+var_7C] +
add edi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [esi] +
mov [ebx+114h] eax +
mov [eax+4] esi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_4633D4  +
cmp edx 4 +
mov ebp [esp+98h+var_70] +
jz loc_464034  +
cmp edx 2 +
jnz loc_462D16  +
mov ecx [esi+8] +
cmp dword ptr [ecx] 45h +
jz loc_464076  +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
ja loc_462D16  +
cmp edi 4 +
jz loc_464058  +
mov eax edi +
shl eax 4 +
mov [esp+98h+var_70] esi +
mov esi [esp+98h+var_7C] +
add eax [esp+98h+var_78] +
jmp loc_462CD8  +
add eax 10h +
cmp edi 4 +
jz loc_464058  +
mov edx [eax-0Ch] +
add edi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] esi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_462CCC  +
mov esi [esp+98h+var_70] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
cmp dword ptr [esi] 4 +
jz loc_464067  +
test edi edi +
jz loc_463E20  +
lea ebp [edi-1] +
mov edi [esp+98h+var_78] +
mov eax ebp +
shl eax 4 +
lea esi [edi+eax+8] +
jmp loc_462D55  +
sub esi 10h +
test ebp ebp +
jz loc_463E20  +
sub ebp 1 +
mov edi [esi] +
test edi edi +
jnz loc_462D47  +
mov eax ebx +
mov edx 20h +
call sub_4615B0  +
mov ecx [esi-4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4641C0  +
jmp loc_462D47  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_461ED0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_462DAF  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461ED0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_462D90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_462D93  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_462E27  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D87h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4634B0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462E04  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462E07  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_462EA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D71h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463548  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462E80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462E83  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_462F19  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D57h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4633F2  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462EF6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462EF9  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_462F93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D2Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46343E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462F70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462F73  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_463009  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D40h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463464  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462FE6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_462FE9  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_463083  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D1Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463451  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463060  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_463063  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_464180  +
and edi 4 +
jnz loc_4635DC  +
mov edx offset asc_492C56 +
mov eax ebx +
call sub_461CA0  +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 45h +
jz loc_463B16  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_464180  +
jmp loc_461ED0  +
test byte ptr [esp+98h+var_80] 4 +
jnz loc_463A31  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_461ED0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46314F  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461ED0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_463130  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_463133  +
test byte ptr [esp+98h+var_80] 4 +
mov eax [ecx+4] +
jnz loc_4635ED  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_461ED0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_4631DF  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461ED0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_4631C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_4631C3  +
mov eax [ecx+4] +
xor esi esi +
cmp dword ptr [eax] 5 +
jz loc_4637A9  +
mov edx [eax] +
cmp edx 23h +
jz loc_46367D  +
cmp edx [ebp+0] +
jz loc_46367D  +
cmp edx 24h +
jz loc_463D45  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] edi +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_464180  +
mov edi [esp+98h+var_50] +
test edi edi +
jz loc_463590  +
mov eax [esp+98h+var_58] +
test esi esi +
mov [ebx+114h] eax +
jz loc_461ED0  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
jmp loc_461ED0  +
mov edi [ebx+114h] +
xor esi esi +
jmp loc_463258  +
mov edi [ebx+114h] +
test edi edi +
jz loc_46404F  +
mov edx edi +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_4632ED  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_4632F3  +
cmp eax ecx +
jz loc_463A1E  +
mov edx [edx] +
test edx edx +
jnz loc_4632D1  +
xor esi esi +
jmp loc_463258  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_46332A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D9Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46348A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463307  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46330A  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
cmp dword ptr [esi+8] 1 +
jnz loc_462372  +
mov ecx [esi+4] +
cmp byte ptr [ecx] 3Eh +
jnz loc_462372  +
mov eax ebx +
mov edx 28h +
call sub_4615B0  +
mov eax [ebp+4] +
mov eax [eax+4] +
mov esi [eax] +
mov eax [ebp+8] +
jmp loc_462374  +
add edi 1 +
cmp edi esi +
jnz loc_461FA6  +
jmp loc_461ED0  +
mov esi [esi+4] +
test esi esi +
jz loc_463D96  +
add eax 10h +
cmp edi 4 +
jz loc_463581  +
mov edx ebp +
jmp loc_462C5C  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_80] +
call sub_464180  +
mov eax [ebx+100h] +
jmp loc_4634EF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492D8Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_463535  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4634D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4634D3  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_4641C0  +
jmp loc_463296  +
mov eax [ebp+4] +
test esi esi +
mov [esp+98h+var_78] eax +
jnz loc_461F9D  +
jmp loc_461ED0  +
mov eax ebx +
mov edx offset aParm +
call sub_461CA0  +
mov edx esi +
mov eax ebx +
call sub_461D30  +
mov edx 7Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov edx 2Eh +
mov eax ebx +
call sub_4615B0  +
jmp loc_4630EE  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_461ED0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_463624  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461ED0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_463605  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_463608  +
mov edx offset a_fract +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_463258  +
mov ebp [esp+98h+var_7C] +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_464B40  +
jmp loc_461ED0  +
mov edx [ebx+11Ch] +
jmp loc_4636C1  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_4636D6  +
cmp dword ptr [eax] 2Fh +
jnz loc_4636D6  +
cmp edx 0 +
jg loc_4636B2  +
jnz loc_4636D6  +
mov eax [eax+4] +
test eax eax +
lea esi [esi+0] +
jnz loc_462B59  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
mov esi [esp+98h+var_80] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_464DC0  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_461ED0  +
mov edx esi +
mov eax ebx +
call sub_464180  +
jmp loc_461ED0  +
mov edx 20h +
mov eax ebx +
call sub_4615B0  +
mov esi [ebp+4] +
jmp loc_4624C6  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_463763  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 492DD7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46260D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463740  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_463743  +
mov esi [ebx+12Ch] +
mov edi [ebx+128h] +
test esi esi +
mov [esp+98h+var_78] edi +
jle loc_4637E5  +
cmp eax [edi] +
jz loc_463CFB  +
lea edx [edi+8] +
xor ecx ecx +
jmp loc_4637DE  +
mov edi edx +
add edx 8 +
cmp eax [edx-8] +
jz loc_463CFF  +
add ecx 1 +
cmp ecx esi +
jnz loc_4637D0  +
cmp esi [ebx+130h] +
jge loc_46411D  +
mov edi [esp+98h+var_78] +
lea ecx [edi+esi*8] +
mov edi [ebx+110h] +
add esi 1 +
mov [ebx+12Ch] esi +
add ecx 4 +
mov [ecx-4] eax +
test edi edi +
mov [esp+98h+var_6C] edi +
jz loc_463878  +
mov edi [ebx+138h] +
mov esi [ebx+13Ch] +
lea edx ds:0[edi*8] +
cmp esi edi +
mov [esp+98h+var_70] esi +
mov [esp+98h+var_78] edx +
jle loc_46411D  +
mov [esp+98h+var_74] eax +
mov edx [esp+98h+var_6C] +
jmp loc_463851  +
add [esp+98h+var_78] 8 +
cmp edi [esp+98h+var_70] +
jz loc_464113  +
mov eax [edx+4] +
add edi 1 +
mov esi [esp+98h+var_78] +
add esi [ebx+134h] +
mov [esi+4] eax +
mov [ecx] esi +
mov edx [edx] +
mov ecx esi +
test edx edx +
jnz loc_463842  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ecx] 0 +
cmp dword ptr [ebx+118h] 0 +
jnz loc_461ED0  +
xor esi esi +
lea edx [eax+4] +
mov eax ebx +
call sub_461B20  +
test eax eax +
jz loc_4638D1  +
cmp dword ptr [eax] 2Fh +
jnz loc_463235  +
mov edx [ebx+11Ch] +
jmp loc_4638BF  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_4638D1  +
cmp dword ptr [eax] 2Fh +
jnz loc_4638D1  +
cmp edx 0 +
jg loc_4638B0  +
jnz loc_4638D1  +
mov eax [eax+4] +
test eax eax +
jnz loc_463235  +
test esi esi +
jz loc_4638DF  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
mov eax [esp+98h+var_78] +
mov edi offset aAd +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+98h+var_7C] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_463916  +
cmp eax 3 +
jz loc_463FAA  +
cmp eax 37h +
jz loc_464088  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_465350  +
test ebp ebp +
jz loc_462451  +
mov edi offset aGs +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_463C5E  +
mov edi offset aSt +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_462451  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464002  +
lea edx [eax+1] +
mov ecx [esp+98h+var_7C] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_464180  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_463FD0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_461ED0  +
mov eax ebx +
mov edx 28h +
call sub_4615B0  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
add ecx 4 +
call sub_4650D0  +
mov edx 29h +
mov eax ebx +
call sub_4615B0  +
jmp loc_462451  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_4625B4  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_463A6D  +
jmp loc_461ED0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_463AC8  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_461ED0  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_463A42  +
cmp al 5Fh +
jnz loc_463A42  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_463A42  +
cmp byte ptr [esi+2] 55h +
jnz loc_463A42  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_463A42  +
xor ecx ecx +
jmp loc_463AAA  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_46407E  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_463A94  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_463D80  +
movsx eax dl +
sub eax 37h +
jmp loc_463A9A  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+98h+var_80] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+98h+var_80] +
jmp loc_463A53  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
mov edx offset aDefaultArg +
mov eax ebx +
mov [esp+98h+var_7C] ecx +
call sub_461CA0  +
mov ecx [esp+98h+var_7C] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax ebx +
call sub_461D30  +
mov edx offset asc_492C67 +
mov eax ebx +
call sub_461CA0  +
mov ecx [esp+98h+var_7C] +
mov ecx [ecx+4] +
jmp loc_4630FA  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_462230  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_464180  +
mov ecx [esp+98h+var_50] +
mov eax [esp+98h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_461ED0  +
mov edx 20h +
mov eax ebx +
call sub_4615B0  +
jmp loc_4627FF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_461E97  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_461E64  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
jmp loc_461ED0  +
mov ecx [ecx+8] +
mov edi [ecx] +
test edi edi +
jnz loc_461E50  +
cmp eax 3Ch +
jz loc_46412C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
sub esi 2 +
call sub_464180  +
cmp esi 4 +
ja loc_461ED0  +
jmp ds:off_492FE8[esi*4]  +
mov edx offset aLl +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
mov edx offset aUl +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
mov edx 6Ch +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov edx 75h +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov edx offset aUll +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
mov edi [esp+98h+var_78] +
mov esi [ebx+124h] +
test esi esi +
jz loc_463E03  +
mov ecx [esi] +
cmp ecx eax +
jz loc_46388B  +
mov edx esi +
jmp loc_463D35  +
mov edx [edx+4] +
test edx edx +
jz loc_463E03  +
mov ecx [edx] +
cmp ecx eax +
jz loc_46388B  +
cmp ebp ecx +
jnz loc_463D20  +
cmp edx esi +
jz loc_463D20  +
lea esi [esi+0] +
jmp loc_46388B  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
test ecx ecx +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_4C] eax +
jnz loc_46327F  +
jmp loc_46327C  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_4640DE  +
movsx eax dl +
sub eax 57h +
jmp loc_463A9A  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
mov edx 20h +
mov eax ebx +
call sub_4615B0  +
jmp loc_462BFE  +
mov edx 20h +
mov eax ebx +
call sub_4615B0  +
jmp loc_462BD7  +
mov eax ebx +
mov edx 5Bh +
call sub_4615B0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_464180  +
mov edx 5Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov edx 2Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_461EB2  +
mov esi [ebx+110h] +
mov edx [edi+4] +
mov [esp+98h+var_7C] esi +
mov esi 1 +
mov [ebx+110h] edx +
jmp loc_46388D  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
jmp loc_461ED0  +
movzx edi byte ptr [edx] +
lea ecx [edi-63h] +
cmp cl 1 +
jbe loc_463E48  +
sub edi 72h +
mov ecx edi +
cmp cl 1 +
ja loc_462365  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_465350  +
mov eax ebx +
mov edx 3Ch +
call sub_4615B0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_464180  +
mov eax ebx +
mov edx offset asc_492EB5 +
call sub_461CA0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_464180  +
mov edx 29h +
mov eax ebx +
call sub_4615B0  +
jmp loc_461ED0  +
mov eax [esp+98h+var_74] +
jmp loc_463694  +
mov esi [edx+4] +
mov edi offset aJarray +
mov ecx 6 +
cmps   +
jnz loc_462BBD  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_464180  +
mov edx offset asc_492C72 +
mov eax ebx +
call sub_461CA0  +
jmp loc_462C0A  +
mov eax ebx +
mov edx 5Bh +
call sub_4615B0  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_464180  +
mov edx 5Dh +
mov eax ebx +
call sub_4615B0  +
jmp loc_4623EA  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_465350  +
jmp loc_4623D9  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_465410  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_465350  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_465410  +
mov eax ebx +
mov edx offset asc_492E0E +
call sub_461CA0  +
mov ecx [esp+98h+var_74] +
mov edx edi +
mov eax ebx +
call sub_465410  +
jmp loc_461ED0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_463F78  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_465410  +
jmp loc_462399  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_465410  +
mov edx offset a___ +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
mov eax [esp+98h+var_7C] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_46391F  +
mov edi [esp+98h+var_7C] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_7C] eax +
jmp loc_46391F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4639A3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46396F  +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] esi +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_462D16  +
xor edi edi +
xor esi esi +
jmp loc_463258  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461ED0  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_462D2D  +
mov ecx [ecx+4] +
jmp loc_462CA6  +
mov eax 5Fh +
jmp loc_463A42  +
mov eax [esp+98h+var_7C] +
mov edi [esp+98h+var_80] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_465410  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_465350  +
jmp loc_461ED0  +
cmp eax 3Bh +
jnz loc_461E50  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_464168  +
cmp al 31h +
jnz loc_461E50  +
mov edx offset aTrue +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_463A42  +
cmp dl 5Fh +
jnz loc_463A42  +
cmp ecx 0FFh +
mov eax edx +
ja loc_463A42  +
movsx edx cl +
mov eax ebx +
call sub_4615B0  +
mov esi ebp +
jmp loc_463A62  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ebx+118h] 1 +
jmp loc_46387E  +
mov edx 2Dh +
mov eax ebx +
call sub_4615B0  +
mov ecx [ebp+8] +
jmp loc_463C88  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_464180  +
mov eax [esp+98h+var_74] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_463694  +
jmp loc_461ED0  +
mov edx offset aFalse +
mov eax ebx +
call sub_461CA0  +
jmp loc_461ED0  +
***
sub esp 18h +
mov eax [eax+124h] +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_C] eax +
lea eax [esp+18h+var_10] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_461DE0  +
mov eax [esp+18h+var_C] +
mov [ebx+124h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [esp+3Ch+var_24] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_464208  +
jmp ds:off_493040[eax*4]  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46481E  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax [ebx+124h] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_461DE0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_464275  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 49303Ch +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464750  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_464250  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ebp +
mov ebp 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_464253  +
mov ecx [ecx+4] +
jmp loc_464208  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_4642F8  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 493005h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464235  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4642D5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4642D8  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_464373  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 49300Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464235  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_464350  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_464353  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_4643F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 493016h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464235  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4643D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4643D3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46485D  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_4647B0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4647E7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_493017 +
jmp loc_4644E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 493019h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464235  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4644C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4644C3  +
test byte ptr [esp+3Ch+var_24] 4 +
jnz loc_464235  +
mov edx 2Ah +
mov eax ebx +
call sub_4615B0  +
jmp loc_464235  +
mov eax [ebx+100h] +
jmp loc_464466  +
mov eax [ebx+100h] +
jmp loc_4644B6  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_4645A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 493022h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464235  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_464580  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_464583  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_464623  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 49302Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464235  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_464600  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_464603  +
cmp byte ptr [ebx+104h] 28h +
jz loc_46469E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4648CB  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov eax [ebx+124h] +
mov esi offset asc_49302E +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_461DE0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
jmp loc_464703  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 493031h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464235  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4646E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4646E3  +
mov eax [ebx+124h] +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_461DE0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464894  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_464235  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464474  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4644A5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_4641F4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_464455  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464794  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_46468D  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
test ecx ecx +
mov [esp+2Ch+var_14] edx +
mov ebp [esp+2Ch+arg_0] +
jz loc_464991  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_46493D  +
jmp loc_464991  +
mov edx [esi+118h] +
test edx edx +
jnz loc_464991  +
mov eax [ebx+8] +
test eax eax +
jnz loc_46498B  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_464955  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_46498B  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_464999  +
cmp eax 2Ah +
jz loc_4649BA  +
cmp eax 2 +
jz loc_4649DB  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_4641C0  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_464933  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_464DC0  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_464B40  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+2Ch+var_14] +
mov ecx [ecx+4] +
call sub_464180  +
mov eax [esi+100h] +
test byte ptr [esp+2Ch+var_14] 4 +
mov [esi+114h] ebp +
jnz loc_464A75  +
mov ebp offset asc_492C56 +
mov [esp+2Ch+var_10] ebx +
jmp loc_464A36  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 492C58h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_464A92  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_464A17  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_464A1A  +
cmp eax 0FFh +
jz loc_464ACB  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_464A96  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+4] +
mov ecx [eax+8] +
mov eax [ecx] +
cmp eax 45h +
jnz loc_464AAA  +
jmp loc_464AFF  +
mov ecx [ecx+4] +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_464AA5  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_464180  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_464A7F  +
mov edx offset aDefaultArg +
mov eax esi +
mov [esp+2Ch+var_10] ecx +
call sub_461CA0  +
mov ecx [esp+2Ch+var_10] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax esi +
call sub_461D30  +
mov edx offset asc_492C67 +
mov eax esi +
call sub_461CA0  +
mov ecx [esp+2Ch+var_10] +
jmp loc_464AA5  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_464B7A  +
mov edx [eax+8] +
test edx edx +
jz loc_464C00  +
mov eax [eax] +
test eax eax +
jnz loc_464B55  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_464910  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464CC0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_464D67  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_464BD5  +
mov eax ebx +
mov edx edi +
call sub_464180  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464D30  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_464DA0  +
mov eax [ebx+100h] +
mov esi offset unk_4930EC +
jmp loc_464C3F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_4930EE +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464C85  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_464C20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_464C23  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_464910  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_464CF7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_464B80  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464B8E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_464CAA  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464BE3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_464BAE  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_464910  +
mov edx [ebx+100h] +
jmp loc_464B9F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_28] ecx +
test esi esi +
jz loc_464EA0  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_464EA0  +
mov eax esi +
mov edx 1 +
jmp loc_464E0E  +
and ch 0Eh +
jnz loc_464F62  +
mov eax [eax] +
test eax eax +
jz loc_464EA0  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_464EA0  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_464DF9  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_464DF0  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_464F77  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_465094  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_464F88  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464F8B  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+34h+var_34] 0 +
call sub_464910  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_464FEF  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+34h+var_28] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_464F23  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_461DE0  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_465026  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+34h+var_34] 1 +
call sub_464910  +
mov [ebx+114h] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_464E30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_464E69  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+34h+var_34] 0 +
call sub_464910  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46505D  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_464ED4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_464ED7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464F31  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464FD2  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_464E4D  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+140h] +
test eax eax +
jz loc_4650FF  +
mov edx [ebx+110h] +
mov [esp+34h+var_20] eax +
mov [esp+34h+var_24] edx +
lea edx [esp+34h+var_24] +
mov [ebx+110h] edx +
mov ecx [esi] +
cmp dword ptr [ecx] 4 +
jz loc_465150  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_461DE0  +
mov edx [ebx+140h] +
mov eax [esp+34h+var_18] +
test edx edx +
mov [ebx+124h] eax +
jz loc_465145  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+124h] +
lea ebp [esp+34h+var_1C] +
mov edx edi +
mov ecx [ecx+4] +
mov [ebx+124h] ebp +
mov [esp+34h+var_18] eax +
mov eax ebx +
mov [esp+34h+var_1C] ecx +
call sub_461DE0  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+140h] +
test eax eax +
jz loc_465192  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_465297  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_465222  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx edi +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [esi] +
mov ecx [eax+8] +
mov eax [ebx+124h] +
mov [ebx+124h] ebp +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
mov eax ebx +
call sub_461DE0  +
mov eax [esp+34h+var_18] +
cmp byte ptr [ebx+104h] 3Eh +
mov [ebx+124h] eax +
jz loc_4652C0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_465260  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4651AF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_465209  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4652E7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_4651A5  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46531B  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_4651FF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4652A8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4652D1  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
cmp dword ptr [ecx] 31h +
jz loc_465390  +
mov eax [eax+124h] +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_10] eax +
lea eax [esp+2Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_461DE0  +
mov eax [esp+2Ch+var_10] +
mov [ebx+124h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_465387  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_4653C2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_465387  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_4653A7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_20] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_20] +
jmp loc_4653AA  +
***
mov ebx eax +
sub esp 34h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_465423  +
cmp eax 30h +
jnz loc_465452  +
mov eax [ebx+124h] +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_461DE0  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_465423  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_465504  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+124h] +
mov byte ptr [ebx+104h] 28h +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_461DE0  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4654D0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4654B5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
mov [esp+34h+var_2C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_34] ebx +
call eax  +
xor eax eax +
mov ecx [esp+34h+var_18] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+34h+var_1C] +
jmp loc_46546B  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_465584  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_465584  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_465584  +
mov eax [esp+8] +
mov dword ptr [edx] 0 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_4655C1  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_4655C1  +
test edx edx +
jz loc_4655C1  +
mov dword ptr [eax] 32h +
mov [eax+4] ecx +
mov [eax+8] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_465608  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_465608  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_46560A  +
mov eax [esp+8] +
mov dword ptr [edx] 7 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_465648  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_465648  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_46564A  +
mov eax [esp+8] +
mov dword ptr [edx] 8 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov ecx [ebx+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_4657A0  +
cmp al 56h +
jz loc_4657A0  +
cmp al 4Bh +
jz loc_4657A0  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_465793  +
movzx edx dl +
jmp ds:off_4930FC[edx*4]  +
mov eax [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
mov [esp+2Ch+var_24] eax +
movzx eax byte ptr [ecx+2] +
cmp al 4Ch +
jz loc_46638D  +
cmp al 54h +
jz loc_46637F  +
cmp al 73h +
jz loc_466105  +
cmp al 66h +
nop   +
lea esi [esi+0] +
jz loc_466142  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_466068  +
cmp al 6Fh +
jz loc_466058  +
cmp al 74h +
setz dl  +
jnz loc_466801  +
cmp byte ptr [ecx+3] 6Ch +
jz loc_46653F  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov esi eax +
jz loc_466312  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_46639B  +
cmp ecx 32h +
jz loc_466677  +
cmp ecx 33h +
jnz loc_466312  +
xor ebp ebp +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_466765  +
mov eax ebx +
call sub_46A180  +
test ebp ebp +
mov [esp+2Ch+var_2C] eax +
jz loc_46574A  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_461350  +
mov ecx eax +
mov eax [esp+2Ch+var_24] +
mov edx 41h +
mov [ebx+34h] eax +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_461350  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_465793  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_465793  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_465858  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_461400  +
test eax eax +
mov esi eax +
jz loc_465793  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_465800  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_465793  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_465810  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_465793  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_465793  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_466FA0  +
mov edx eax +
mov [esi] eax +
jmp loc_4657C7  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_4657D5  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_461790  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
lea esi [esi+0] +
test eax eax +
jz loc_465793  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_465793  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_467720  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_465E03  +
sub eax 30h +
cmp al 9 +
ja loc_465E4A  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_4658B0  +
sub ecx edx +
mov eax ebx +
call sub_4613B0  +
test eax eax +
mov esi eax +
jz loc_4658DB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_465E05  +
xor eax eax +
jmp loc_4659B9  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
mov eax ebx +
call sub_466FA0  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_465793  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_465793  +
movzx eax al +
jmp ds:off_493228[eax*4]  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
test eax eax +
mov esi eax +
jz loc_4658DB  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
test eax eax +
jz loc_4658DB  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_465A6B  +
cmp al 5Fh +
jz loc_465A6B  +
sub eax 41h +
cmp al 19h +
ja loc_465E29  +
xor edx edx +
mov eax ebx +
call sub_4618B0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_465795  +
mov eax ebx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_461790  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_465F27  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:493940h[eax*4] +
jl loc_465DD1  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_465795  +
mov eax ebx +
call sub_461710  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_465850  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_465F4C  +
test eax eax +
jz loc_465793  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_465793  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_466FF0  +
jmp loc_465A8B  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465DF6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466975  +
mov dword ptr [eax] 27h +
mov edx offset off_493BAC +
mov dword ptr [eax+4] offset off_493BAC +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_465795  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465DF6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466975  +
mov dword ptr [eax] 27h +
mov edx offset off_493B84 +
mov dword ptr [eax+4] offset off_493B84 +
jmp loc_465BA3  +
mov eax ebx +
call sub_46A730  +
jmp loc_4659B9  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465DF6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466975  +
mov dword ptr [eax] 27h +
mov edx offset off_493B98 +
mov dword ptr [eax+4] offset off_493B98 +
jmp loc_465BA3  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
jmp loc_465850  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465DF6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466975  +
mov dword ptr [eax] 27h +
mov edx offset off_493BC0 +
mov dword ptr [eax+4] offset off_493BC0 +
jmp loc_465BA3  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465DF6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466975  +
mov dword ptr [eax] 27h +
mov edx offset off_493B5C +
mov dword ptr [eax+4] offset off_493B5C +
jmp loc_465BA3  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_4613B0  +
jmp loc_465795  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_465CF4  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_4660AA  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_465793  +
lea eax [ebx+0Ch] +
call sub_461630  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_465D54  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_465795  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465DF6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466975  +
mov dword ptr [eax] 27h +
mov edx offset off_493B48 +
mov dword ptr [eax+4] offset off_493B48 +
jmp loc_465BA3  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465DF6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_466975  +
mov dword ptr [eax] 27h +
mov edx offset off_493B70 +
mov dword ptr [eax+4] offset off_493B70 +
jmp loc_465BA3  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_466980  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_465B0A  +
mov edx large ds:4 +
xor eax eax +
jmp loc_465BA3  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
jmp loc_4659B9  +
mov eax ebx +
call sub_467720  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_465793  +
cmp dword ptr [eax] 18h +
jnz loc_465858  +
jmp loc_465795  +
mov edi [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
movzx eax byte ptr [ecx+1] +
cmp al 4Ch +
jz loc_4660E4  +
cmp al 54h +
jz loc_466196  +
cmp al 73h +
jz loc_465FC8  +
cmp al 66h +
jz loc_466005  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_465FA3  +
cmp al 6Fh +
jz loc_465F93  +
cmp al 74h +
setz dl  +
jnz loc_466964  +
cmp byte ptr [ecx+2] 6Ch +
jz loc_4661A4  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov esi eax +
jz loc_4660FA  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_4662B2  +
cmp ecx 32h +
jz loc_4661D6  +
cmp ecx 33h +
jnz loc_4660FA  +
mov [esp+2Ch+var_24] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46674E  +
mov eax ebx +
call sub_46A180  +
cmp [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_465F05  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_461350  +
mov esi eax +
test esi esi +
mov [ebx+34h] edi +
jnz loc_4658CF  +
xor eax eax +
jmp loc_4659B9  +
mov eax ebx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_465AC6  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_466FF0  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_4660BB  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_465850  +
cmp byte ptr [ecx+2] 6Eh +
jnz loc_465EA1  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_466C00  +
test eax eax +
mov esi eax +
jz loc_4660FA  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jz loc_4662EB  +
mov [ebx+34h] edi +
jmp loc_4658D2  +
movzx eax byte ptr [ecx+2] +
cmp al 72h +
jz loc_466342  +
cmp al 70h +
jnz loc_465EA1  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_46A180  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_465F15  +
cmp byte ptr [ecx+2] 70h +
jnz loc_465EA1  +
lea eax [ecx+3] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+3] 54h +
jnz loc_466571  +
add ecx 4 +
xor edx edx +
mov [ebx+0Ch] ecx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_4660FA  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_4660FA  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_465FC0  +
cmp byte ptr [ecx+3] 6Eh +
jnz loc_4656EF  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_466C00  +
test eax eax +
jz loc_466312  +
mov edx [ebx+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jnz loc_46575A  +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_20] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46575A  +
lea eax [ebx+0Ch] +
call sub_461630  +
mov esi [esp+2Ch+var_10] +
jmp loc_465D1A  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_465793  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_465793  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_465A8B  +
mov eax ebx +
call sub_4681F0  +
mov esi eax +
jmp loc_465F15  +
cmp al 77h +
jz loc_46622A  +
mov [ebx+34h] edi +
xor eax eax +
nop   +
jmp loc_4659B9  +
movzx eax byte ptr [ecx+3] +
cmp al 72h +
jz loc_46663A  +
cmp al 70h +
jnz loc_4656EF  +
add ecx 4 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_46A180  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46575A  +
cmp byte ptr [ecx+3] 70h +
jnz loc_4656EF  +
lea eax [ecx+4] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+4] 54h +
jnz loc_4665CF  +
add ecx 5 +
xor esi esi +
mov [ebx+0Ch] ecx +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_466312  +
imul eax edx +
xor ecx ecx +
add eax [ebx+10h] +
add edx 1 +
mov [ebx+14h] edx +
test eax eax +
jz loc_46575A  +
mov dword ptr [eax] 6 +
mov ecx eax +
mov [eax+4] esi +
jmp loc_46575A  +
mov eax ebx +
call sub_461710  +
mov esi eax +
jmp loc_465F15  +
xor esi esi +
test dl dl +
jnz loc_466618  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_465F15  +
mov eax [eax+4] +
xor ebp ebp +
cmp eax 1 +
jz loc_4668D5  +
jle loc_466319  +
cmp eax 2 +
jz loc_4664A1  +
cmp eax 3 +
jnz loc_4660FA  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_4665F8  +
cmp byte ptr [ebp+0] 6Eh +
jnz loc_4660FA  +
movzx eax byte ptr [ebp+1] +
cmp al 61h +
jnz loc_4660F2  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_465650  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_466949  +
cmp dl 70h +
jz loc_466928  +
cmp dl 69h +
jnz loc_4660FA  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4660FA  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_24] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_465F15  +
mov eax [eax+4] +
mov [esp+2Ch+var_24] ecx +
mov ebp [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
mov ecx [esp+2Ch+var_24] +
test eax eax +
jz loc_4665E8  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_4661DB  +
mov eax ebx +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_465F15  +
cmp al 77h +
jz loc_46641D  +
xor ecx ecx +
jmp loc_46575A  +
test eax eax +
nop   +
lea esi [esi+0] +
jnz loc_4660FA  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_465F15  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
mov eax ebx +
call sub_466C00  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4665AF  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_465F15  +
mov eax ebx +
call sub_461710  +
mov ecx eax +
jmp loc_46575A  +
mov eax ebx +
call sub_4681F0  +
mov ecx eax +
jmp loc_46575A  +
mov eax [eax+4] +
mov [esp+2Ch+var_20] ecx +
mov edi [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
mov ecx [esp+2Ch+var_20] +
test eax eax +
jz loc_466862  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_466834  +
jle loc_46671B  +
cmp eax 2 +
jz loc_466681  +
cmp eax 3 +
jnz loc_466312  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4668B7  +
cmp byte ptr [edi] 6Eh +
jnz loc_466312  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_46630A  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_465650  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_4668AA  +
cmp dl 70h +
jz loc_466889  +
cmp dl 69h +
jnz loc_466312  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_466312  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_461350  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46575A  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_466588  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_466627  +
mov [esp+2Ch+var_28] offset unk_4930EF +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_4664FF  +
mov [esp+2Ch+var_28] offset unk_4930F2 +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jnz loc_466956  +
mov eax ebx +
call sub_466C00  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_466815  +
mov ecx [esp+2Ch+var_24] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_461350  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_465F15  +
xor esi esi +
test dl dl +
jnz loc_46673F  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46575A  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_466027  +
jmp loc_4660FA  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46659E  +
sub eax 72h +
cmp al 1 +
ja loc_4664B0  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_24] eax +
jmp loc_4664BB  +
mov eax ebx +
call sub_466FF0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46636A  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
mov esi eax +
jnz loc_466164  +
xor ecx ecx +
jmp loc_46575A  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_2C] eax +
jmp loc_465F05  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_24] eax +
mov eax ebx +
call sub_46A180  +
mov ebp eax +
mov eax ebx +
call sub_46A180  +
jmp loc_466276  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
jmp loc_4661AE  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ebp eax +
jmp loc_466514  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
mov eax ebx +
call sub_466C00  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46677C  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46575A  +
mov eax [eax+4] +
xor edi edi +
jmp loc_4663CF  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4667AF  +
mov eax ebx +
call sub_46A180  +
mov ebp eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46679C  +
mov [esp+2Ch+var_28] offset unk_4930EF +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4666DD  +
mov [esp+2Ch+var_28] offset unk_4930F2 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_4667D4  +
mov eax ebx +
call sub_466C00  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4667E2  +
mov ecx ebp +
mov edx 37h +
mov [esp+2Ch+var_2C] edi +
mov eax ebx +
call sub_461350  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46575A  +
test eax eax +
jnz loc_466312  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46575A  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
jmp loc_466549  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_465EEA  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_465732  +
mov eax ebx +
call sub_466FF0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
jmp loc_466662  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov edi eax +
jmp loc_4666F2  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4667C5  +
sub eax 72h +
cmp al 1 +
ja loc_466690  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov ebp eax +
jmp loc_466699  +
mov eax ebx +
call sub_46A180  +
mov edi eax +
jmp loc_4666F2  +
mov eax ebx +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edi eax +
jmp loc_4666F2  +
cmp al 69h +
jz loc_4656E5  +
lea esi [esi+0] +
jmp loc_4656EF  +
mov eax ebx +
call sub_466FF0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ebp eax +
jmp loc_466514  +
xor ebp ebp +
test edi edi +
jz loc_466848  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_466856  +
xor ebp ebp +
cmp al [edi+1] +
jz loc_466872  +
cmp ecx 33h +
jnz loc_46572B  +
jmp loc_46571F  +
cmp al 70h +
jnz loc_466848  +
lea esi [esi+0] +
jmp loc_466841  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46574A  +
mov eax [ebx+0Ch] +
mov bp 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_466848  +
add eax 1 +
xor bp bp +
mov [ebx+0Ch] eax +
jmp loc_466848  +
cmp byte ptr [eax+1] 69h +
jnz loc_466312  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_466467  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_466467  +
mov eax ebx +
call sub_46A180  +
mov edi eax +
mov eax ebx +
call sub_46A180  +
mov ebp eax +
mov eax ebx +
call sub_46A180  +
jmp loc_466467  +
test ebp ebp +
mov [esp+2Ch+var_24] 0 +
jz loc_4668ED  +
movzx eax byte ptr [ebp+0] +
cmp al 6Dh +
jz loc_4668FB  +
cmp al 70h +
jz loc_4668FB  +
cmp ecx 33h +
jnz loc_465EE3  +
jmp loc_465ED7  +
cmp al [ebp+1] +
mov [esp+2Ch+var_24] 0 +
jnz loc_4668ED  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_24] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4668ED  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_24] 0 +
jmp loc_4668ED  +
cmp byte ptr [eax+1] 69h +
jnz loc_4660FA  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_466276  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_466276  +
mov eax ebx +
call sub_46A180  +
mov ebp eax +
jmp loc_466514  +
cmp al 69h +
jz loc_465E97  +
lea esi [esi+0] +
jmp loc_465EA1  +
mov edx large ds:4 +
jmp loc_465BA3  +
mov esi large ds:4 +
jmp loc_465B0A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_466A34  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_466B24  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_466AA6  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_466A3B  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_461790  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_466A9C  +
mov esi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [esi+10h] +
mov [esi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_466A9C  +
test eax eax +
jz loc_466A9C  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_466A9E  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_466A58  +
mov ebx edi +
cmp cl bl +
jle loc_466A93  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_466A9C  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_493D60[ecx] +
lea ebp off_493D60[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_466A48  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_466AF0  +
cmp cl [esp+1Ch+var_11] +
jg loc_466A4E  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_466A58  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_466A3B  +
mov eax edi +
cmp al 63h +
jnz loc_466A3B  +
mov edi [esp+1Ch+var_10] +
mov eax [edi+34h] +
mov ebx [edi+38h] +
test eax eax +
setz al  +
movzx eax al +
mov [edi+38h] eax +
mov [esp+1Ch+var_1C] edi +
call sub_465650  +
mov edx 33h +
mov [edi+38h] ebx +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_461350  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_466A9E  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_466A9E  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_4669CC  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_466BD0  +
cmp dl 45h +
jz loc_466BD0  +
cmp dl 2Eh +
jz loc_466BD0  +
lea esi [esp+24h+var_8] +
jmp loc_466BA4  +
cmp byte ptr [eax+1] 45h +
jz loc_466BB4  +
mov [esp+24h+var_24] ebx +
call sub_465650  +
test eax eax +
jz loc_466BD0  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_461350  +
test eax eax +
mov [esi] eax +
jz loc_466BD0  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_466BB4  +
cmp dl 45h +
jz loc_466BB4  +
cmp dl 2Eh +
jz loc_466BB4  +
cmp dl 4Fh +
jz loc_466B60  +
cmp dl 52h +
jnz loc_466B66  +
cmp byte ptr [eax+1] 45h +
jnz loc_466B66  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_466BD0  +
mov edx [eax+8] +
test edx edx +
jz loc_466BD8  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+4] +
cmp dword ptr [edx] 27h +
jnz loc_466BC3  +
mov edx [edx+4] +
cmp dword ptr [edx+10h] 9 +
jnz loc_466BC3  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+4] 0 +
jmp loc_466BC3  +
***
push esi  +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_466F77  +
xor esi esi +
test edx edx +
jnz loc_466F7D  +
mov eax ebx +
call sub_466B30  +
test eax eax +
jz loc_466F90  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_461350  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_465650  +
test eax eax +
mov esi eax +
jnz loc_466F55  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_466F71  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_466FB5  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_466FC7  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_466F40  +
mov edx eax +
mov eax ebx +
call sub_461500  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_466FAE  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edx [ebp+0Ch] +
mov [esp+48h+var_34] eax +
movzx eax byte ptr [edx] +
sub eax 49h +
cmp al 1 +
ja loc_467180  +
lea eax [edx+1] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+1] 45h +
jz loc_46749A  +
mov [esp+48h+var_1C] 0 +
lea ebx [esp+48h+var_1C] +
movzx edx byte ptr [edx+1] +
jmp loc_46707F  +
sub edx 49h +
cmp dl 1 +
ja loc_4671A0  +
mov eax ebp +
call sub_466FF0  +
mov ecx eax +
test ecx ecx +
jz loc_467180  +
mov [esp+48h+var_48] 0 +
mov edx 2Fh +
mov eax ebp +
call sub_461350  +
test eax eax +
mov [ebx] eax +
jz loc_467180  +
lea ebx [eax+8] +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_467314  +
cmp dl 4Ch +
jz loc_467190  +
jle loc_467033  +
cmp dl 58h +
lea esi [esi+0] +
jnz loc_4671A0  +
lea esi [eax+1] +
mov edi [ebp+34h] +
mov [ebp+0Ch] esi +
mov dword ptr [ebp+34h] 1 +
movzx edx byte ptr [eax+1] +
mov [esp+48h+var_3C] edi +
cmp dl 4Ch +
jz loc_467330  +
cmp dl 54h +
jz loc_467341  +
cmp dl 73h +
jz loc_467280  +
cmp dl 66h +
jz loc_4672C2  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_4671C0  +
cmp dl 6Fh +
jz loc_4671B0  +
cmp dl 74h +
setz cl  +
jnz loc_4676C2  +
cmp byte ptr [eax+2] 6Ch +
jz loc_467352  +
mov eax ebp +
call sub_466990  +
test eax eax +
mov [esp+48h+var_38] eax +
jz loc_467270  +
mov eax [esp+48h+var_38] +
mov edx [eax] +
cmp edx 31h +
jz loc_4671F4  +
cmp edx 32h +
jz loc_467390  +
cmp edx 33h +
jnz loc_467270  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_4675C5  +
mov eax ebp +
call sub_46A180  +
test esi esi +
mov [esp+48h+var_48] eax +
jz loc_46715E  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_461350  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_461350  +
mov edx [ebp+0Ch] +
mov ecx eax +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jz loc_4671E9  +
nop   +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_4681F0  +
mov ecx eax +
jmp loc_467048  +
mov [esp+48h+var_48] ebp +
call sub_465650  +
mov ecx eax +
jmp loc_467048  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_4670FD  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_466C00  +
mov edx [ebp+0Ch] +
test eax eax +
jz loc_467273  +
cmp byte ptr [edx] 49h +
mov ecx eax +
jz loc_4673A4  +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jnz loc_467180  +
add edx 1 +
mov [ebp+0Ch] edx +
jmp loc_467048  +
mov eax [eax+4] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4675DC  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_4676D5  +
jle loc_4673D0  +
cmp eax 2 +
jz loc_4673F9  +
cmp eax 3 +
jnz loc_467270  +
mov esi [esp+48h+var_30] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46760E  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 6Eh +
jz loc_467511  +
nop   +
mov edx [ebp+0Ch] +
xor ecx ecx +
jmp loc_4671DD  +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_4674BA  +
cmp dl 70h +
jnz loc_4670FD  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46A180  +
mov edx 49h +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_461350  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4671DD  +
cmp byte ptr [eax+2] 70h +
jnz loc_4670FD  +
lea edx [eax+3] +
mov [ebp+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_4674FA  +
add eax 4 +
xor edx edx +
mov [ebp+0Ch] eax +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_467270  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_46759D  +
mov [ecx+4] edx +
mov edx [ebp+0Ch] +
mov dword ptr [ecx] 6 +
jmp loc_4671DD  +
add eax 1 +
mov [ebp+0Ch] eax +
mov eax [esp+48h+var_34] +
mov [ebp+2Ch] eax +
mov eax [esp+48h+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_4681F0  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4671DD  +
mov eax ebp +
call sub_461710  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4671DD  +
xor edi edi +
test cl cl +
jnz loc_4675E9  +
add esi 2 +
mov edx 45h +
mov [ebp+0Ch] esi +
mov eax ebp +
call sub_468410  +
mov ecx edi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_461350  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4671DD  +
mov eax [esp+48h+var_38] +
mov [esp+48h+var_30] 0 +
mov eax [eax+4] +
jmp loc_46722F  +
mov [esp+48h+var_38] eax +
mov eax ebp +
call sub_466FF0  +
mov ecx [esp+48h+var_38] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_461350  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4671DD  +
test eax eax +
jnz loc_467270  +
mov ecx [esp+48h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_461350  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4671DD  +
mov eax [esp+48h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46762C  +
mov eax ebp +
call sub_46A180  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_4675FB  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4930EF +
mov ecx 3 +
cmps   +
jz loc_467455  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4930F2 +
mov ecx 3 +
cmps   +
jnz loc_467653  +
mov eax ebp +
call sub_466C00  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_467682  +
mov ecx [esp+48h+var_2C] +
mov edx 37h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_461350  +
mov ecx [esp+48h+var_38] +
mov edx 36h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_461350  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4671DD  +
add edx 2 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax ebp +
mov edx 2Fh +
mov [esp+48h+var_48] 0 +
call sub_461350  +
jmp loc_467182  +
add eax 3 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_48] ebp +
call sub_465650  +
mov esi eax +
mov eax ebp +
call sub_466C00  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4675A5  +
mov [esp+48h+var_48] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_461350  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4671DD  +
mov eax ebp +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_4672E4  +
jmp loc_467270  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_467661  +
mov edx 5Fh +
mov eax ebp +
call sub_468410  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_465650  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_467675  +
xor ecx ecx +
cmp al 70h +
jz loc_4676A1  +
cmp al 69h +
jnz loc_4671DD  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_4671DD  +
mov eax ebp +
call sub_46A180  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_461350  +
mov ecx esi +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_461350  +
mov ecx [esp+48h+var_38] +
mov edx 38h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
mov edx [ebp+0Ch] +
jmp loc_4671DD  +
mov eax ebp +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_461350  +
mov [esp+48h+var_48] eax +
jmp loc_4674E2  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
jmp loc_467146  +
mov [esp+48h+var_48] ebp +
call sub_465650  +
jmp loc_46715B  +
mov [esp+48h+var_48] ebp +
call sub_465650  +
mov esi [ebp+0Ch] +
mov edi eax +
jmp loc_46735C  +
mov edx 45h +
mov eax ebp +
call sub_468410  +
mov esi eax +
jmp loc_46746A  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
mov eax ebp +
call sub_46A180  +
mov edi eax +
mov eax ebp +
call sub_46A180  +
jmp loc_467566  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_467642  +
sub eax 72h +
cmp al 1 +
ja loc_46740C  +
mov [esp+48h+var_48] ebp +
call sub_465650  +
mov [esp+48h+var_2C] eax +
jmp loc_467417  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
jmp loc_46746A  +
cmp al 77h +
jz loc_46751D  +
lea esi [esi+0] +
jmp loc_467270  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_467566  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_46746A  +
cmp byte ptr [edx+1] 69h +
jnz loc_4671DD  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_468410  +
jmp loc_467566  +
cmp dl 69h +
jz loc_4670F3  +
nop   +
lea esi [esi+0] +
jmp loc_4670FD  +
mov eax [esp+48h+var_30] +
xor esi esi +
test eax eax +
jz loc_4676EA  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_4676F8  +
cmp al 70h +
jz loc_4676F8  +
cmp edx 33h +
jnz loc_46713F  +
jmp loc_467133  +
mov edi [esp+48h+var_30] +
xor esi esi +
cmp al [edi+1] +
jnz loc_4676EA  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4676EA  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_4676EA  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_4678A4  +
jle loc_467783  +
cmp al 55h +
jz loc_467770  +
cmp al 5Ah +
nop   +
jnz loc_467850  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_467B30  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_467A10  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_466C00  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_467850  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_461400  +
test eax eax +
mov edi eax +
jz loc_467763  +
xor edx edx +
mov eax esi +
call sub_461500  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_467842  +
cmp bl 44h +
jz loc_4679A6  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_467950  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_467950  +
cmp bl 43h +
jz loc_467950  +
cmp bl 55h +
jz loc_467950  +
cmp bl 4Ch +
jz loc_467950  +
cmp bl 53h +
jz loc_4679F0  +
cmp bl 49h +
jz loc_4679D0  +
cmp bl 54h +
jz loc_467A01  +
cmp bl 45h +
nop   +
jz loc_467AED  +
cmp bl 4Dh +
jnz loc_467842  +
test ebp ebp +
lea esi [esi+0] +
jz loc_467842  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_4677C4  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_467765  +
mov eax esi +
call sub_466C00  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_467779  +
test eax eax +
jz loc_467763  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_467763  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_466FF0  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_461350  +
mov ebx eax +
jmp loc_467779  +
cmp byte ptr [edx+1] 74h +
jz loc_4678E2  +
xor edx edx +
mov eax esi +
call sub_4618B0  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_467779  +
mov eax esi +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_461350  +
mov ebx eax +
jmp loc_467779  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_466C00  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_4613B0  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_461350  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_467779  +
test edi edi +
jz loc_467763  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_467763  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_4678C3  +
mov eax esi +
call sub_466C00  +
test ebp ebp +
jz loc_4679C0  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_461350  +
mov ebp eax +
cmp bl 53h +
jz loc_46799B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_4679C4  +
test ebp ebp +
jz loc_467842  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_467842  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_4677C0  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_467950  +
mov [esp+30h+var_30] esi +
call sub_465650  +
test ebp ebp +
jnz loc_46795B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_46796E  +
mov ebx 45h +
jmp loc_4677CD  +
test ebp ebp +
jz loc_467842  +
mov eax esi +
call sub_466FF0  +
mov edx 4 +
jmp loc_467960  +
mov edx 1 +
mov eax esi +
call sub_4618B0  +
jmp loc_467957  +
mov eax esi +
call sub_461710  +
jmp loc_467957  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_467AC2  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_467A91  +
mov eax esi +
call sub_467720  +
test eax eax +
mov edi eax +
jz loc_467A44  +
mov eax [eax] +
cmp eax 44h +
jz loc_467A44  +
cmp eax 46h +
jnz loc_467AB0  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_467A74  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_467A74  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_467A74  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_461350  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_4616D0  +
test eax eax +
mov ebp eax +
jns loc_467A2B  +
xor ebx ebx +
jmp loc_467765  +
mov eax esi +
call sub_461760  +
test eax eax +
jnz loc_467A44  +
xor ebx ebx +
jmp loc_467765  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_461760  +
test eax eax +
jz loc_467763  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_4613B0  +
mov [esp+30h+var_30] eax +
jmp loc_467A77  +
test ebp ebp +
mov [edi] ebp +
jz loc_467763  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_467B0A  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_467763  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_467779  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_467C10  +
cmp cl 47h +
jz loc_467C10  +
mov eax ebx +
mov edi edx +
call sub_467720  +
test eax eax +
mov esi eax +
jnz loc_467BC2  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_467C28  +
test dl dl +
jz loc_467C28  +
cmp dl 45h +
jz loc_467C28  +
mov edx [eax] +
cmp edx 4 +
jz loc_467C30  +
jb loc_467BA0  +
sub edx 1Ch +
cmp edx 4 +
ja loc_467BA0  +
mov eax [eax+4] +
test eax eax +
jnz loc_467B81  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_466F40  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_467B60  +
test byte ptr [ebx+8] 1 +
jnz loc_467B60  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_467BE3  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_467BD6  +
cmp edx 2 +
mov eax esi +
jnz loc_467C28  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_467C04  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_467BF7  +
mov [esi+8] eax +
mov eax esi +
jmp loc_467C28  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_467C70  +
cmp dl 47h +
jz loc_467C45  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_467CA0  +
cmp dword ptr [eax] 33h +
ja loc_467CA0  +
mov edx [eax] +
jmp ds:off_493330[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_467C26  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_467C26  +
movzx edx dl +
jmp ds:off_493400[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_467C26  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_467C26  +
movzx eax al +
jmp ds:off_4934C8[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_467C37  +
nop   +
mov edx 1 +
jmp loc_467BA2  +
lea eax [ebx+0Ch] +
call sub_461630  +
cmp eax 1 +
jle loc_467C26  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_467C26  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_467C26  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_467C26  +
xor esi esi +
cmp al 24h +
jz loc_468032  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_467D09  +
cmp al 24h +
jz loc_467D09  +
add esi 1 +
cmp esi ebp +
jl loc_467CF6  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_4613B0  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_467C26  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_468080  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_461350  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_467C26  +
test ebp ebp +
jg loc_467CE1  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_461350  +
jmp loc_467C28  +
mov eax ebx +
call sub_467720  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov eax ebx +
call sub_467720  +
mov esi eax +
mov eax ebx +
call sub_461690  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
xor edx edx +
mov eax ebx +
call sub_467B30  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
cmp byte ptr [eax+2] 0 +
jz loc_468089  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_468089  +
xor edx edx +
mov eax ebx +
call sub_467B30  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov edx 76h +
mov eax ebx +
call sub_461AB0  +
test eax eax +
jz loc_467C26  +
xor edx edx +
mov eax ebx +
call sub_467B30  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov eax ebx +
call sub_467720  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_461630  +
test eax eax +
js loc_467C26  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_467C26  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov edx 68h +
mov eax ebx +
call sub_461AB0  +
test eax eax +
jz loc_467C26  +
xor edx edx +
mov eax ebx +
call sub_467B30  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
xor edx edx +
mov eax ebx +
call sub_461AB0  +
test eax eax +
jz loc_467C26  +
xor edx edx +
mov eax ebx +
call sub_461AB0  +
test eax eax +
jz loc_467C26  +
xor edx edx +
mov eax ebx +
call sub_467B30  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov eax ebx +
call sub_467720  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_4680B3  +
cmp al 5Fh +
jz loc_4680AC  +
cmp al 24h +
jnz loc_467C26  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4680BA  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_4680BA  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_467D26  +
mov [esp+1Ch+var_10] eax +
jmp loc_467D4D  +
xor edx edx +
mov eax ebx +
call sub_467B30  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
jmp loc_467C28  +
mov ecx 2Eh +
jmp loc_46804B  +
mov ecx 2Fh +
jmp loc_46804B  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_467C26  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_4681D0  +
test ebx ebx +
jnz loc_4680F6  +
cmp dl 5Ah +
jz loc_4680FF  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_467B30  +
test ebx ebx +
mov edi eax +
jz loc_4680F8  +
test byte ptr [esi+8] 1 +
jz loc_4680F8  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_4680F8  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_4681A4  +
cmp al 5Fh +
jz loc_4681A4  +
sub eax 30h +
cmp al 9 +
ja loc_46819B  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_468172  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_468172  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_46813E  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_468160  +
cmp cl 2Eh +
jz loc_468143  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_4613B0  +
mov ecx edi +
mov edx 4Bh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_461350  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_468122  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_4681BF  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_4681B2  +
cmp cl 5Fh +
jz loc_4681B2  +
jmp loc_46813E  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_4680F1  +
***
jmp sub_4681F0  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_46FEC0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_46FEC0  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_4680D0  +
mov ebx eax +
xor eax eax +
lea esi [esi+0] +
***
mov eax [ebx+4] +
lea esp [ebp-0Ch] +
mov eax [ebx+4] +
jmp loc_4683C0  +
***
jmp loc_4683C0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [eax+0Ch] +
mov [esp+58h+var_1C] 0 +
lea eax [esp+58h+var_1C] +
mov [esp+58h+var_41] dl +
mov [esp+58h+var_4C] eax +
cmp [ebx] dl +
jz loc_468C5A  +
mov eax [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
mov [esp+58h+var_48] eax +
movzx eax byte ptr [ebx] +
cmp al 4Ch +
jz loc_4686C1  +
cmp al 54h +
jz loc_4686E1  +
cmp al 73h +
jz loc_468580  +
cmp al 66h +
jz loc_4685C0  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_46850E  +
cmp al 6Fh +
jz loc_468502  +
cmp al 74h +
setz dl  +
jnz loc_469FE6  +
cmp byte ptr [ebx+1] 6Ch +
jz loc_4686F0  +
mov eax ebp +
call sub_466990  +
test eax eax +
mov ebx eax +
jz loc_4686B0  +
mov eax [eax] +
cmp eax 31h +
jz loc_468620  +
cmp eax 32h +
jz loc_468721  +
cmp eax 33h +
jnz loc_4686B0  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_468D43  +
mov eax ebp +
call sub_46A180  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_4684ED  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_461350  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 35h +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
cmp byte ptr [ebx+1] 6Eh +
jnz loc_468492  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_466C00  +
test eax eax +
jz loc_4686B0  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_468731  +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
mov [esp+58h+var_58] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_461350  +
mov edi [esp+58h+var_4C] +
test eax eax +
mov [edi] eax +
jz loc_4686B7  +
mov ebx [ebp+0Ch] +
add eax 8 +
mov [esp+58h+var_4C] eax +
movzx eax [esp+58h+var_41] +
cmp [ebx] al +
jnz loc_468438  +
add ebx 1 +
mov eax [esp+58h+var_1C] +
mov [ebp+0Ch] ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 72h +
jz loc_468844  +
cmp al 70h +
jnz loc_468492  +
add ebx 2 +
mov eax ebp +
mov [ebp+0Ch] ebx +
call sub_46A180  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
cmp byte ptr [ebx+1] 70h +
jnz loc_468492  +
lea eax [ebx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [ebx+2] 54h +
jz loc_4687E0  +
mov eax ebp +
call sub_4616D0  +
add eax 1 +
jz loc_4686B0  +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_4686B0  +
mov ecx [ebp+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [ebp+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_4686B0  +
mov dword ptr [ecx] 6 +
mov [ecx+4] eax +
jmp loc_46852B  +
mov edi [ebx+4] +
mov esi [edi] +
mov [esp+58h+var_3C] edi +
mov edi [edi+8] +
mov [esp+58h+var_40] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_468930  +
mov esi [esp+58h+var_3C] +
mov edx [esi+0Ch] +
cmp edx 1 +
jz loc_469F95  +
jle loc_468820  +
cmp edx 2 +
jz loc_468756  +
cmp edx 3 +
jnz loc_4686B0  +
mov esi [esp+58h+var_40] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_468962  +
mov eax [esp+58h+var_40] +
cmp byte ptr [eax] 6Eh +
jnz loc_4686B0  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jz loc_468881  +
cmp al 77h +
jz loc_468881  +
nop   +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_4681F0  +
mov ecx eax +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
test ecx ecx +
mov [ebp+34h] eax +
jnz loc_468532  +
jmp loc_4686B7  +
mov eax ebp +
call sub_461710  +
mov ecx eax +
jmp loc_4686D0  +
xor esi esi +
test dl dl +
jnz loc_468950  +
add ebx 2 +
mov edx 45h +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
mov edx [ebx+4] +
mov [esp+58h+var_40] 0 +
jmp loc_46865B  +
mov [esp+58h+var_40] eax +
mov eax ebp +
call sub_466FF0  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
mov eax [ebx+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_468C33  +
mov eax ebp +
call sub_46A180  +
mov [esp+58h+var_3C] eax +
mov esi [esp+58h+var_40] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_468C20  +
mov esi [esp+58h+var_40] +
mov edi offset unk_4930EF +
mov ecx 3 +
cmps   +
jz loc_4687F0  +
mov esi [esp+58h+var_40] +
mov edi offset unk_4930F2 +
mov ecx 3 +
cmps   +
jz loc_4687F0  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_461350  +
mov ecx ebx +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
add ebx 3 +
xor eax eax +
mov [ebp+0Ch] ebx +
jmp loc_4685EA  +
mov eax ebp +
call sub_466C00  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_4687B3  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_4687B3  +
test edx edx +
jnz loc_4686B0  +
mov ecx ebx +
mov edx 34h +
mov [esp+58h+var_58] 0 +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov ebx eax +
mov eax ebp +
call sub_466C00  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov esi eax +
jz loc_468C7A  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 1 +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
mov edx 5Fh +
mov eax ebp +
call sub_468410  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_3C] eax +
call sub_465650  +
mov [esp+58h+var_40] eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_468DB4  +
cmp dl 70h +
jz loc_468E5C  +
cmp dl 69h +
jnz loc_4686B0  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4686B0  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
xor ecx ecx +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
mov [esp+58h+var_58] ecx +
mov ecx [esp+58h+var_40] +
mov edx 3Ah +
mov eax ebp +
call sub_461350  +
mov ecx [esp+58h+var_3C] +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx ebx +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov ecx ebx +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4686D0  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov ebx [ebp+0Ch] +
mov esi eax +
jmp loc_4686FA  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_469022  +
cmp al 54h +
jz loc_46906A  +
cmp al 73h +
jz loc_468E7F  +
cmp al 66h +
jz loc_468D5A  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_468C9A  +
mov eax ebp +
call sub_466C00  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jz loc_4689B1  +
cmp al 49h +
jz loc_4694AC  +
cmp al 4Ch +
jz loc_469038  +
cmp al 54h +
nop   +
lea esi [esi+0] +
jz loc_469080  +
cmp al 73h +
jz loc_468EB3  +
cmp al 66h +
jz loc_468F24  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_468DD1  +
cmp al 6Fh +
jz loc_468DC1  +
cmp al 74h +
setz cl  +
jnz loc_469AF9  +
cmp byte ptr [edx+1] 6Ch +
jz loc_4693B9  +
mov eax ebp +
call sub_466990  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_468FFA  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_38] eax +
jz loc_469096  +
mov eax [esp+58h+var_38] +
cmp eax 32h +
jz loc_46944D  +
cmp eax 33h +
jnz loc_468FFA  +
mov edx [ebp+0Ch] +
movzx ecx byte ptr [edx] +
cmp [esp+58h+var_38] 33h +
mov [esp+58h+var_30] 0 +
jnz loc_468A59  +
cmp cl 5Fh +
jz loc_4697D7  +
cmp cl 4Ch +
jz loc_469C1D  +
cmp cl 54h +
jz loc_469B8A  +
cmp cl 73h +
nop   +
jz loc_4698C3  +
cmp cl 66h +
jz loc_469870  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_469832  +
cmp cl 6Fh +
jz loc_469822  +
cmp cl 74h +
setz al  +
jnz loc_469F27  +
cmp byte ptr [edx+1] 6Ch +
jz loc_469BB1  +
mov eax ebp +
call sub_466990  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_469BAA  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_469D1B  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_469C42  +
cmp eax 33h +
jnz loc_469BAA  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46A071  +
mov eax ebp +
call sub_46A180  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_468B0E  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_461350  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_461350  +
mov esi eax +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_4697EB  +
mov ecx esi +
mov edx 37h +
mov [esp+58h+var_58] esi +
mov eax ebp +
call sub_461350  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46904E  +
cmp al 54h +
jz loc_46905C  +
cmp al 73h +
jz loc_468EE7  +
cmp al 66h +
jz loc_468F82  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_468E1A  +
cmp al 6Fh +
jz loc_468E0A  +
cmp al 74h +
setz cl  +
jnz loc_469F82  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46940D  +
mov eax ebp +
call sub_466990  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_468DBA  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_46919B  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_46945B  +
cmp eax 33h +
jnz loc_468DBA  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_469C2B  +
mov eax ebp +
call sub_46A180  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_468C08  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_461350  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4688ED  +
mov edx 45h +
mov eax ebp +
call sub_468410  +
mov esi eax +
jmp loc_4687B3  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_468C49  +
sub eax 72h +
cmp al 1 +
ja loc_468765  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov [esp+58h+var_3C] eax +
jmp loc_468770  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_461350  +
jmp loc_4686B9  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov [esp+58h+var_58] eax +
jmp loc_46886C  +
cmp al 6Fh +
jz loc_46900D  +
cmp al 74h +
setz cl  +
jnz loc_469BEE  +
cmp byte ptr [edx+1] 6Ch +
jz loc_4693E2  +
mov eax ebp +
call sub_466990  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_468FDF  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_3C] eax +
jz loc_4692B0  +
mov eax [esp+58h+var_3C] +
cmp eax 32h +
jz loc_46943F  +
cmp eax 33h +
jnz loc_468FDF  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_469FF5  +
mov eax ebp +
call sub_46A180  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_4697B0  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_461350  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_4689B1  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
jmp loc_4684D5  +
cmp byte ptr [edx+1] 70h +
jnz loc_468CB7  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_4696AF  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_468FE2  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_3C] esi +
jz loc_468D3B  +
mov eax [esp+58h+var_3C] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_4689B1  +
add eax 1 +
mov [ebp+0Ch] eax +
xor ecx ecx +
jmp loc_4688ED  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_4689FF  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_466C00  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jz loc_468B5A  +
cmp al 49h +
jnz loc_468B5A  +
mov eax ebp +
call sub_466FF0  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_468B49  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_468BA3  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_466C00  +
test eax eax +
mov ecx eax +
jz loc_4688ED  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_4688ED  +
mov eax ebp +
mov [esp+58h+var_38] ecx +
call sub_466FF0  +
mov ecx [esp+58h+var_38] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4688ED  +
cmp byte ptr [eax+1] 69h +
jnz loc_4686B0  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
mov ecx eax +
jmp loc_4688ED  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_4696D0  +
cmp al 70h +
jnz loc_468CB7  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_468D2D  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_469741  +
cmp al 70h +
jnz loc_4689FF  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_468B49  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_469704  +
cmp al 70h +
jnz loc_468BA3  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4688ED  +
cmp byte ptr [edx+1] 70h +
jnz loc_4689FF  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_469790  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_468FFD  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_40] esi +
jz loc_468B57  +
mov eax [esp+58h+var_40] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_468B5A  +
cmp byte ptr [edx+1] 70h +
jnz loc_468BA3  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_469775  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
xor ecx ecx +
cmp eax [ebp+18h] +
jge loc_4688ED  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_4688ED  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_4688ED  +
cmp al 77h +
jz loc_46933F  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_3C] 0 +
jmp loc_4689B1  +
cmp al 77h +
jz loc_469121  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_40] 0 +
jmp loc_468B5A  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_468CB7  +
add edx 2 +
mov [ebp+0Ch] edx +
jmp loc_468994  +
mov eax ebp +
call sub_4681F0  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_4689B1  +
mov eax ebp +
call sub_4681F0  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_468B5A  +
mov eax ebp +
call sub_4681F0  +
mov ecx eax +
jmp loc_4688ED  +
mov eax ebp +
call sub_461710  +
mov ecx eax +
jmp loc_4688ED  +
mov eax ebp +
call sub_461710  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_4689B1  +
mov eax ebp +
call sub_461710  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_468B5A  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_34] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_30] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4697FC  +
mov eax [esp+58h+var_34] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_46A088  +
jle loc_4694C4  +
cmp ecx 2 +
jz loc_469618  +
cmp ecx 3 +
jnz loc_468FFA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_469900  +
cmp byte ptr [edx] 6Eh +
jnz loc_468FFA  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_468FF2  +
mov edx 5Fh +
mov eax ebp +
call sub_468410  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_465650  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46A112  +
cmp al 70h +
jz loc_46A0F1  +
cmp al 69h +
jnz loc_46A064  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_46A052  +
mov eax ebp +
call sub_46A180  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_461350  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_468B49  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_30] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_2C] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_469815  +
mov eax [esp+58h+var_30] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_469F35  +
jle loc_469486  +
cmp ecx 2 +
jz loc_469578  +
cmp ecx 3 +
jnz loc_468DBA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46993E  +
xor ecx ecx +
cmp byte ptr [edx] 6Eh +
jnz loc_4688ED  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_469B4F  +
mov edx 5Fh +
mov eax ebp +
call sub_468410  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_465650  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_469B7D  +
xor ecx ecx +
cmp dl 70h +
jz loc_469B5C  +
cmp dl 69h +
jnz loc_4688ED  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4688ED  +
mov eax ebp +
call sub_46A180  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_461350  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4688ED  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_38] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_34] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4697BE  +
mov eax [esp+58h+var_38] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_46A00C  +
jle loc_469469  +
cmp ecx 2 +
jz loc_4694E1  +
cmp ecx 3 +
lea esi [esi+0] +
jnz loc_468FDF  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_469ABC  +
cmp byte ptr [edx] 6Eh +
jnz loc_468FDF  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_468FD7  +
mov edx 5Fh +
mov eax ebp +
call sub_468410  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_465650  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_469B23  +
cmp al 70h +
jz loc_469B06  +
cmp al 69h +
jnz loc_469AEC  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_469ADA  +
mov eax ebp +
call sub_46A180  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_461350  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_468D2D  +
xor esi esi +
test cl cl +
jnz loc_469A5E  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_468B49  +
xor esi esi +
test cl cl +
jnz loc_46991E  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_468D2D  +
xor esi esi +
test cl cl +
jnz loc_469AAD  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4688ED  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_4692F1  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_4690D7  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_4691DC  +
test ecx ecx +
jnz loc_468FDF  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_468D2D  +
test ecx ecx +
jnz loc_468DBA  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_461350  +
mov ecx eax +
jmp loc_4688ED  +
mov eax ebp +
call sub_466FF0  +
mov ecx [esp+58h+var_3C] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_468D2D  +
test ecx ecx +
jnz loc_468FFA  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_468B49  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_469A0F  +
mov eax ebp +
mov [esp+58h+var_38] edx +
call sub_46A180  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_4699FC  +
mov edi offset unk_4930EF +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46953F  +
mov edi offset unk_4930F2 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_469930  +
mov eax ebp +
call sub_466C00  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_469B30  +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_461350  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_468D2D  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4699BF  +
mov eax ebp +
mov [esp+58h+var_30] edx +
call sub_46A180  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46999E  +
mov edi offset unk_4930EF +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_4695D6  +
mov edi offset unk_4930F2 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_4699EE  +
mov eax ebp +
call sub_466C00  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A0D2  +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_461350  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4688ED  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46996F  +
mov eax ebp +
mov [esp+58h+var_34] edx +
call sub_46A180  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46995C  +
mov edi offset unk_4930EF +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_469676  +
mov edi offset unk_4930F2 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_4699B1  +
mov eax ebp +
call sub_466C00  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_469BFB  +
mov ecx [esp+58h+var_38] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_461350  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_468B49  +
mov eax ebp +
call sub_4616D0  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_468D7C  +
jmp loc_468FE2  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov edi eax +
mov eax ebp +
call sub_466C00  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_469A3E  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_468D2D  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov esi eax +
mov eax ebp +
call sub_466C00  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_469A6D  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_461350  +
mov ecx eax +
jmp loc_4688ED  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov edi eax +
mov eax ebp +
call sub_466C00  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_469A8D  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_468B49  +
mov eax ebp +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_468FA4  +
xor ecx ecx +
jmp loc_4688ED  +
mov eax ebp +
call sub_4616D0  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_468F46  +
jmp loc_468FFD  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_468D2D  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_468D2D  +
add edx 1 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_468410  +
mov esi eax +
mov [esp+58h+var_58] esi +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_468B49  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_468B49  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
jmp loc_468C05  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_468AA9  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_466C00  +
test eax eax +
mov esi eax +
jz loc_469BAA  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_468B20  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_468B20  +
cmp byte ptr [edx+1] 70h +
jnz loc_468AA9  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_469B98  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_469BAA  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_468B20  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_468B20  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46A11F  +
cmp al 70h +
jnz loc_468AA9  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_468B20  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
mov eax ebp +
call sub_46A180  +
mov edi eax +
mov eax ebp +
call sub_46A180  +
jmp loc_469168  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov edx [ebp+0Ch] +
mov esi eax +
jmp loc_4693EC  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
jmp loc_469554  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
mov eax ebp +
call sub_46A180  +
mov edi eax +
mov eax ebp +
call sub_46A180  +
jmp loc_469274  +
mov edx 45h +
mov eax ebp +
call sub_468410  +
mov esi eax +
jmp loc_46968B  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_469985  +
sub eax 72h +
cmp al 1 +
ja loc_46962B  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_34] edx +
call sub_465650  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
jmp loc_46963E  +
mov edx 45h +
mov eax ebp +
call sub_468410  +
mov esi eax +
jmp loc_4695EB  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
jmp loc_46968B  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4699D5  +
sub eax 72h +
cmp al 1 +
ja loc_46958B  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_30] edx +
call sub_465650  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
jmp loc_46959E  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
jmp loc_4695EB  +
mov edx 45h +
mov eax ebp +
call sub_468410  +
mov esi eax +
jmp loc_469554  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_469A25  +
sub eax 72h +
cmp al 1 +
ja loc_4694F4  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_38] edx +
call sub_465650  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
jmp loc_469507  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov [esp+58h+var_58] eax +
jmp loc_4696F8  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov esi eax +
jmp loc_4693C3  +
mov eax ebp +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov [esp+58h+var_58] eax +
jmp loc_46972C  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov [esp+58h+var_58] eax +
jmp loc_469769  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov esi eax +
jmp loc_469417  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
mov eax ebp +
call sub_46A180  +
mov edi eax +
mov eax ebp +
call sub_46A180  +
jmp loc_469386  +
mov eax 69h +
mov [esp+58h+var_3C] 0 +
jmp loc_4689E2  +
mov [esp+58h+var_3C] 0 +
jmp loc_4689B1  +
cmp al 69h +
jz loc_4689F5  +
jmp loc_4689FF  +
cmp byte ptr [edx+1] 69h +
jnz loc_469ADF  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_468410  +
jmp loc_469386  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_469386  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_469554  +
cmp al 77h +
jz loc_469228  +
jmp loc_4688ED  +
cmp byte ptr [eax+1] 69h +
jnz loc_4688ED  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
jmp loc_469274  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_469274  +
mov eax ebp +
call sub_461710  +
mov esi eax +
jmp loc_468B20  +
mov eax ebp +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_469892  +
xor esi esi +
jmp loc_468B20  +
xor esi esi +
test al al +
jz loc_469BC4  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov edx [ebp+0Ch] +
mov esi eax +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_468B20  +
cmp al 69h +
jz loc_468CAD  +
jmp loc_468CB7  +
mov eax ebp +
lea esi [esi+0] +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_46968B  +
mov eax ebp +
call sub_4681F0  +
mov esi eax +
jmp loc_468B20  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
jmp loc_468BF0  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov eax [eax+4] +
cmp eax 1 +
jz loc_469EE4  +
jle loc_469EBE  +
cmp eax 2 +
jz loc_469DC2  +
cmp eax 3 +
jnz loc_469BAA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_469DA4  +
cmp byte ptr [edx] 6Eh +
jnz loc_469BAA  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_469D97  +
mov edx 5Fh +
mov eax ebp +
call sub_468410  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_465650  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_469D8A  +
cmp dl 70h +
jz loc_469D59  +
cmp dl 69h +
jnz loc_469BAA  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_469BAA  +
mov eax ebp +
call sub_46A180  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_461350  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_468B20  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_2C] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_469D7A  +
mov eax [esp+58h+var_2C] +
mov eax [eax+0Ch] +
jmp loc_469C4B  +
cmp byte ptr [eax+1] 69h +
jnz loc_469BAA  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
jmp loc_469CDF  +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov [esp+58h+var_58] eax +
jmp loc_468B0E  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_469CDF  +
cmp al 77h +
jz loc_469C95  +
jmp loc_469BAA  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
mov eax ebp +
call sub_46A180  +
mov edi eax +
mov eax ebp +
call sub_46A180  +
jmp loc_469CDF  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_469E84  +
mov eax ebp +
mov [esp+58h+var_2C] edx +
call sub_46A180  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_469E74  +
mov edi offset unk_4930EF +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_469E1C  +
mov edi offset unk_4930F2 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_469EB3  +
mov eax ebp +
call sub_466C00  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_469E47  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_461350  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_468B20  +
mov edx 45h +
mov eax ebp +
call sub_468410  +
mov esi eax +
jmp loc_469E47  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_469E9A  +
sub eax 72h +
cmp al 1 +
ja loc_469DD5  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_2C] edx +
call sub_465650  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
jmp loc_469DE8  +
mov eax ebp +
call sub_46A180  +
mov esi eax +
jmp loc_469E47  +
test eax eax +
jnz loc_469BAA  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_461350  +
mov esi eax +
jmp loc_468B20  +
test edx edx +
jz loc_469F23  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jz loc_469EF5  +
xor esi esi +
cmp al 70h +
jnz loc_469EFC  +
xor esi esi +
cmp al [edx+1] +
jz loc_469F0C  +
cmp [esp+58h+var_34] 33h +
jnz loc_468AEF  +
jmp loc_468AE3  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_469EFC  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_469EFC  +
xor esi esi +
jmp loc_469EFC  +
cmp cl 69h +
jz loc_468A9F  +
jmp loc_468AA9  +
test edx edx +
jz loc_469F7E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
nop   +
jz loc_469F60  +
xor esi esi +
cmp cl 70h +
jz loc_469F60  +
cmp [esp+58h+var_34] 33h +
jnz loc_468BE9  +
jmp loc_468BDD  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_469F49  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_469F49  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_469F49  +
xor esi esi +
jmp loc_469F49  +
cmp al 69h +
jz loc_468B99  +
lea esi [esi+0] +
jmp loc_468BA3  +
mov esi [esp+58h+var_40] +
test esi esi +
jz loc_469FE2  +
movzx edx byte ptr [esi] +
cmp dl 6Dh +
jz loc_469FC0  +
xor esi esi +
cmp dl 70h +
jz loc_469FC0  +
cmp eax 33h +
jnz loc_4684CE  +
jmp loc_4684C2  +
mov edi [esp+58h+var_40] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_469FAC  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_469FAC  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_469FAC  +
xor esi esi +
jmp loc_469FAC  +
cmp al 69h +
jz loc_468488  +
nop   +
jmp loc_468492  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
jmp loc_468D08  +
test edx edx +
jz loc_46A04E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_46A030  +
xor esi esi +
cmp cl 70h +
jz loc_46A030  +
cmp [esp+58h+var_3C] 33h +
jnz loc_468D01  +
jmp loc_468CF5  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_46A01F  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46A01F  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_46A01F  +
xor esi esi +
jmp loc_46A01F  +
mov eax 69h +
mov [esp+58h+var_40] 0 +
jmp loc_468B86  +
mov [esp+58h+var_40] 0 +
jmp loc_468B5A  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_468410  +
jmp loc_468AF6  +
test edx edx +
jz loc_468A3B  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_46A0A1  +
cmp cl 70h +
jnz loc_468A3B  +
cmp cl [edx+1] +
jnz loc_468A3B  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_30] 1 +
movzx ecx byte ptr [edx] +
cmp cl 5Fh +
jnz loc_468A59  +
lea esi [edx+1] +
mov [ebp+0Ch] esi +
movzx ecx byte ptr [edx+1] +
mov edx esi +
jmp loc_468A41  +
mov eax ebp +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_4695EB  +
cmp byte ptr [edx+1] 69h +
jnz loc_46A057  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_468410  +
jmp loc_469168  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_469168  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_465650  +
mov esi eax +
mov eax ebp +
call sub_466C00  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A158  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_461350  +
mov esi eax +
jmp loc_468B20  +
mov eax ebp +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_461350  +
mov [esp+58h+var_58] eax +
jmp loc_46A143  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46A475  +
cmp al 54h +
jz loc_46A483  +
cmp al 73h +
jz loc_46A2C7  +
cmp al 66h +
jz loc_46A270  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_46A1E0  +
mov eax ebx +
call sub_466C00  +
test eax eax +
jz loc_46A450  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_46A4A1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_46A460  +
cmp al 74h +
setz cl  +
jnz loc_46A722  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46A413  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov ebp eax +
jz loc_46A450  +
mov eax [eax] +
cmp eax 31h +
jz loc_46A304  +
cmp eax 32h +
jz loc_46A491  +
cmp eax 33h +
jnz loc_46A450  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46A5A5  +
mov eax ebx +
call sub_46A180  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_46A258  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A1D4  +
cmp byte ptr [edx+1] 70h +
jnz loc_46A1FD  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_46A598  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
jz loc_46A450  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46A450  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_46A450  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_46A1D4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46A4C0  +
cmp al 70h +
jnz loc_46A1FD  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A1D4  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_46A5E4  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_46A6D6  +
jle loc_46A5C0  +
cmp edx 2 +
jz loc_46A500  +
cmp edx 3 +
jnz loc_46A450  +
mov esi [esp+1Ch+var_14] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46A603  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_46A450  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46A447  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_465650  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46A689  +
cmp dl 70h +
jz loc_46A6B5  +
cmp dl 69h +
jnz loc_46A450  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46A450  +
mov eax ebx +
call sub_46A180  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_461350  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A1D4  +
xor esi esi +
test cl cl +
jnz loc_46A5F1  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A1D4  +
cmp al 77h +
jz loc_46A38F  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46A1FD  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_46A1B7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4681F0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_461710  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_46A33F  +
mov eax ebx +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A1D4  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov esi eax +
mov eax ebx +
call sub_466C00  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_46A65B  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A1D4  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46A634  +
mov eax ebx +
call sub_46A180  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_46A621  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4930EF +
mov ecx 3 +
cmps   +
jz loc_46A558  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4930F2 +
mov ecx 3 +
cmps   +
jnz loc_46A67B  +
mov eax ebx +
call sub_466C00  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A696  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_461350  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A1D4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46A296  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_46A240  +
test edx edx +
jnz loc_46A450  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A1D4  +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
jmp loc_46A255  +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A41D  +
mov eax ebx +
call sub_46A180  +
mov esi eax +
mov eax ebx +
call sub_46A180  +
mov edi eax +
mov eax ebx +
call sub_46A180  +
jmp loc_46A3D9  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov esi eax +
jmp loc_46A56D  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46A64A  +
sub eax 72h +
cmp al 1 +
ja loc_46A50F  +
mov [esp+1Ch+var_1C] ebx +
call sub_465650  +
mov [esp+1Ch+var_10] eax +
jmp loc_46A51A  +
mov eax ebx +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+1Ch+var_1C] eax +
jmp loc_46A4E8  +
mov eax ebx +
call sub_46A180  +
mov esi eax +
jmp loc_46A56D  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46A3D9  +
mov eax ebx +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A56D  +
cmp byte ptr [eax+1] 69h +
jnz loc_46A450  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_46A3D9  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_46A6ED  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_46A700  +
cmp dl 70h +
jz loc_46A700  +
cmp eax 33h +
jnz loc_46A239  +
jmp loc_46A22D  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_46A6ED  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46A6ED  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_46A6ED  +
cmp al 69h +
jz loc_46A1F3  +
jmp loc_46A1FD  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46A768  +
mov eax ebx +
call sub_461690  +
mov esi eax +
test esi esi +
jz loc_46AB44  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jz loc_46A800  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea esi [eax+1] +
mov ebp [ebx+34h] +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
movzx edx byte ptr [eax+1] +
cmp dl 4Ch +
jz loc_46AAE0  +
cmp dl 54h +
jz loc_46AAF0  +
cmp dl 73h +
jz loc_46A827  +
cmp dl 66h +
jz loc_46A9A0  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_46A975  +
cmp dl 6Fh +
jz loc_46A965  +
cmp dl 74h +
setz cl  +
jnz loc_46C8C7  +
cmp byte ptr [eax+2] 6Ch +
jnz loc_46A83D  +
xor edi edi +
test cl cl +
jnz loc_46AD76  +
add esi 2 +
mov edx 45h +
mov [ebx+0Ch] esi +
mov eax ebx +
call sub_468410  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A992  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_46ACE7  +
cmp dl 70h +
jz loc_46AD3D  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov [esp+2Ch+var_1C] eax +
jz loc_46AAD7  +
mov eax [eax] +
cmp eax 31h +
jz loc_46AB00  +
cmp eax 32h +
jz loc_46A9F0  +
cmp eax 33h +
jnz loc_46AAD7  +
mov edx [ebx+0Ch] +
xor esi esi +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_46B38E  +
cmp al 4Ch +
jz loc_46B372  +
cmp al 54h +
jz loc_46B380  +
cmp al 73h +
nop   +
jz loc_46B097  +
cmp al 66h +
jz loc_46B0D4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46AD98  +
cmp al 6Fh +
jz loc_46AD88  +
cmp al 74h +
setz cl  +
jnz loc_46C95A  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46B5EE  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov edi eax +
jz loc_46B199  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_46B3E7  +
cmp ecx 32h +
jz loc_46B620  +
cmp ecx 33h +
jnz loc_46B199  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C943  +
mov eax ebx +
call sub_46A180  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_46A92B  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 35h +
mov eax ebx +
call sub_461350  +
mov ecx eax +
test esi esi +
mov [esp+2Ch+var_2C] ecx +
jz loc_46A951  +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_1C] +
mov edx 35h +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A992  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_46A83D  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_466C00  +
test eax eax +
mov esi eax +
jz loc_46AAD7  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46AB4B  +
mov [ebx+34h] ebp +
jmp loc_46A74A  +
cmp byte ptr [eax+2] 70h +
jnz loc_46A83D  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_46AD24  +
add eax 4 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46AAD7  +
mov ecx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_46A992  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_46A992  +
mov edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] 0 +
mov edx [edi+4] +
cmp edx 1 +
jz loc_46C5F6  +
jle loc_46AB6A  +
cmp edx 2 +
jz loc_46AB90  +
cmp edx 3 +
jnz loc_46AAD7  +
mov esi [esp+2Ch+var_18] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46ADED  +
mov eax [esp+2Ch+var_18] +
cmp byte ptr [eax] 6Eh +
jnz loc_46AAD7  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46AACF  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_465650  +
mov esi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46B176  +
cmp dl 70h +
jz loc_46B34F  +
cmp dl 69h +
jnz loc_46AAD7  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46AAD7  +
mov eax ebx +
call sub_46A180  +
mov ecx eax +
mov [esp+2Ch+var_2C] ecx +
mov edx 3Ah +
mov ecx esi +
mov eax ebx +
call sub_461350  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_1C] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A992  +
cmp al 77h +
jz loc_46AA4F  +
xor esi esi +
jmp loc_46A992  +
mov eax ebx +
call sub_4681F0  +
mov esi eax +
jmp loc_46A992  +
mov eax ebx +
call sub_461710  +
mov esi eax +
jmp loc_46A992  +
mov edi [esp+2Ch+var_1C] +
mov edi [edi+4] +
mov esi [edi] +
mov [esp+2Ch+var_14] edi +
mov edi [edi+8] +
mov [esp+2Ch+var_18] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_46AD66  +
mov edi [esp+2Ch+var_14] +
mov edx [edi+0Ch] +
jmp loc_46A9FF  +
xor eax eax +
jmp loc_46A760  +
mov eax ebx +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A992  +
test edx edx +
jnz loc_46AAD7  +
mov ecx [esp+2Ch+var_1C] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_461350  +
mov esi eax +
jmp loc_46A992  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46B050  +
mov edx [ebx+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46B6CF  +
cmp al 54h +
jz loc_46B823  +
cmp al 73h +
jz loc_46B1A5  +
cmp al 66h +
jz loc_46B1E4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46B134  +
cmp al 6Fh +
jz loc_46B124  +
cmp al 74h +
setz cl  +
jnz loc_46C907  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46B961  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov esi eax +
jz loc_46B50F  +
mov edx [eax] +
cmp edx 31h +
jz loc_46B6DF  +
cmp edx 32h +
jz loc_46B926  +
cmp edx 33h +
jnz loc_46B50F  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C76B  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46A180  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46AC55  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_14] eax +
mov esi [esp+2Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_46ADDA  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_4930EF +
mov ecx 3 +
cmps   +
jz loc_46ACA5  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_4930F2 +
mov ecx 3 +
cmps   +
jnz loc_46B183  +
mov eax ebx +
call sub_466C00  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46B240  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
call sub_461350  +
mov ecx [esp+2Ch+var_1C] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A992  +
add eax 3 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
mov eax ebx +
call sub_466C00  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46B077  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A992  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_46A9C2  +
xor esi esi +
jmp loc_46A992  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46A180  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46A992  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46A951  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi [ebx+0Ch] +
mov edi eax +
jmp loc_46A7D1  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46A8C7  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_466C00  +
test eax eax +
mov ecx eax +
jz loc_46B199  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46A93B  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46A93B  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov esi eax +
jmp loc_46ACBA  +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 4Ch +
jz loc_46B99B  +
cmp dl 54h +
jz loc_46BA9A  +
cmp dl 73h +
jz loc_46B51C  +
cmp dl 66h +
jz loc_46B62A  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_46B310  +
cmp dl 6Fh +
jz loc_46B300  +
cmp dl 74h +
setz cl  +
jnz loc_46C5E8  +
cmp byte ptr [eax+1] 6Ch +
jz loc_46BBD5  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov esi eax +
jz loc_46BFF9  +
mov edx [eax] +
cmp edx 31h +
jz loc_46BB9C  +
cmp edx 32h +
jz loc_46BABC  +
cmp edx 33h +
jnz loc_46B957  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C7B0  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_46A180  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46AEA5  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
mov edx 35h +
mov ecx esi +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46B9AC  +
cmp al 54h +
jz loc_46BAAB  +
cmp al 73h +
jz loc_46B3A7  +
cmp al 66h +
jz loc_46B59B  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46B2C1  +
cmp al 6Fh +
jz loc_46B2B1  +
cmp al 74h +
setz cl  +
jnz loc_46C54D  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46BD36  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov esi eax +
jz loc_46B7F5  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_46BC0A  +
cmp ecx 32h +
jz loc_46BF14  +
cmp ecx 33h +
jnz loc_46B7F5  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C516  +
mov eax ebx +
call sub_46A180  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_46AF68  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov esi eax +
movzx ecx byte ptr [edx] +
cmp cl 4Ch +
jz loc_46B930  +
cmp cl 54h +
jz loc_46BD28  +
cmp cl 73h +
jz loc_46B55E  +
cmp cl 66h +
jz loc_46B67D  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_46B26F  +
cmp cl 6Fh +
jz loc_46B25F  +
cmp cl 74h +
setz al  +
jnz loc_46C670  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46BE60  +
mov eax ebx +
call sub_466990  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_46B17C  +
mov eax [eax] +
cmp eax 31h +
mov [esp+2Ch+var_10] eax +
jz loc_46BE98  +
mov eax [esp+2Ch+var_10] +
cmp eax 32h +
jz loc_46BD6B  +
cmp eax 33h +
jnz loc_46B17C  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46C915  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46A180  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46B039  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_18] +
mov edx 35h +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46AA93  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46B066  +
sub eax 72h +
cmp al 1 +
ja loc_46ABA3  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
mov eax ebx +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46AD0F  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46B8E9  +
cmp al 70h +
jnz loc_46A8C7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46A93B  +
cmp byte ptr [edx+1] 70h +
jnz loc_46A8C7  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46B93E  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46B199  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_46A93B  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_46A93B  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46ABF2  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_466C00  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_46B50F  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46AC67  +
mov eax ebx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
add eax 1 +
mov [ebx+0Ch] eax +
xor ecx ecx +
jmp loc_46AA93  +
mov eax ebx +
call sub_46A180  +
mov esi eax +
jmp loc_46ACBA  +
cmp al 77h +
jz loc_46B47B  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
jmp loc_46A93B  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46BED5  +
cmp al 70h +
jnz loc_46ABF2  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
cmp byte ptr [edx+1] 70h +
jnz loc_46ABF2  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46BA83  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46B50F  +
imul edi eax +
add eax 1 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_14] edi +
mov edi [ebx+10h] +
add [esp+2Ch+var_14] edi +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_46AC67  +
mov dword ptr [eax] 6 +
mov [eax+4] edx +
jmp loc_46AC67  +
mov eax ebx +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov esi eax +
jmp loc_46ACBA  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46AFCC  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_466C00  +
test eax eax +
mov ecx eax +
jz loc_46AA93  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46AA93  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46AA93  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46AF04  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_466C00  +
mov edx [ebx+0Ch] +
test eax eax +
mov esi eax +
jz loc_46AF7B  +
cmp byte ptr [edx] 49h +
jnz loc_46AF7B  +
mov eax ebx +
call sub_466FF0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
cmp byte ptr [eax+1] 6Eh +
jnz loc_46AE42  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_466C00  +
test eax eax +
mov edi eax +
jz loc_46BFF9  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jnz loc_46AEB8  +
mov eax ebx +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
cmp byte ptr [eax+1] 69h +
jnz loc_46AAD7  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
mov ecx eax +
jmp loc_46AA93  +
mov eax ebx +
call sub_4681F0  +
mov ecx eax +
jmp loc_46A93B  +
mov eax ebx +
call sub_461710  +
mov ecx eax +
jmp loc_46A93B  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_468410  +
mov ecx eax +
jmp loc_46A93B  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46C2F4  +
cmp al 70h +
jnz loc_46AF04  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_46BF1E  +
mov eax [edi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46C55A  +
jle loc_46B7FF  +
cmp eax 2 +
jz loc_46B833  +
cmp eax 3 +
nop   +
jnz loc_46B199  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46C383  +
cmp byte ptr [edx] 6Eh +
jnz loc_46B199  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46B191  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_465650  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46C4F8  +
cmp dl 70h +
jz loc_46C4D7  +
cmp dl 69h +
jnz loc_46B199  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46B199  +
mov eax ebx +
call sub_46A180  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx edi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46A93B  +
cmp al 77h +
jz loc_46B763  +
mov [esp+2Ch+var_14] 0 +
jmp loc_46AC67  +
movzx edx byte ptr [eax+1] +
cmp dl 72h +
jz loc_46C016  +
cmp dl 70h +
jnz loc_46AE42  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46A180  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46BF50  +
cmp al 70h +
jnz loc_46AFCC  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46A180  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46AA93  +
cmp byte ptr [edx+1] 70h +
jnz loc_46AF04  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46C334  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46B7F5  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_46B7F7  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_46AF7B  +
xor edi edi +
test cl cl +
jnz loc_46BF2E  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46A93B  +
mov eax [eax+4] +
xor edx edx +
jmp loc_46B423  +
cmp byte ptr [eax+1] 70h +
jnz loc_46AE42  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 54h +
jnz loc_46BFE7  +
add eax 3 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46BFF9  +
imul edi eax +
add eax 1 +
add edi [ebx+10h] +
mov [ebx+14h] eax +
test edi edi +
jz loc_46B959  +
mov [edi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [edi] 6 +
jmp loc_46AEB8  +
cmp byte ptr [edx+1] 70h +
jnz loc_46AFCC  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46BF91  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
xor ecx ecx +
cmp eax [ebx+18h] +
jge loc_46AA93  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_46AA93  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_46AA93  +
mov eax ebx +
call sub_4681F0  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46C373  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46C49D  +
jle loc_46BA5D  +
cmp eax 2 +
jz loc_46B9BD  +
cmp eax 3 +
nop   +
jnz loc_46B50F  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46C1FE  +
cmp byte ptr [edi] 6Eh +
jnz loc_46B50F  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_46B507  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_465650  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46C80F  +
cmp dl 70h +
jz loc_46C7EE  +
cmp dl 69h +
jnz loc_46B50F  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46B50F  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
cmp al 77h +
jz loc_46BC9C  +
xor esi esi +
mov edx [ebx+0Ch] +
jmp loc_46AF7B  +
test eax eax +
jnz loc_46B199  +
mov ecx edi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46A93B  +
mov eax ebx +
call sub_461710  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
mov eax [edi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46BFAA  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_46A180  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46C003  +
mov [esp+2Ch+var_28] offset unk_4930EF +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_46B8A9  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4930F2 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_46BFD9  +
mov eax ebx +
call sub_466C00  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C5B4  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov ecx edi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46A93B  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edi eax +
mov eax ebx +
call sub_466C00  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C34D  +
mov [esp+2Ch+var_2C] ecx +
mov ecx edi +
mov edx 1 +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46A93B  +
mov eax [eax+4] +
xor edi edi +
jmp loc_46B713  +
mov eax ebx +
call sub_4681F0  +
mov ecx eax +
jmp loc_46AA93  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_46B0F6  +
xor ecx ecx +
jmp loc_46A93B  +
xor edi edi +
mov edx [ebx+0Ch] +
jmp loc_46AEB8  +
xor esi esi +
test cl cl +
jz loc_46B971  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
mov eax ebx +
call sub_4681F0  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
mov eax ebx +
call sub_4681F0  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46C056  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46BF3D  +
mov [esp+2Ch+var_28] offset unk_4930EF +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46BA1B  +
mov [esp+2Ch+var_28] offset unk_4930F2 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_46C642  +
mov eax ebx +
call sub_466C00  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C7CF  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_461350  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
test eax eax +
jnz loc_46B50F  +
mov [esp+2Ch+var_2C] 0 +
mov ecx esi +
mov edx 34h +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_46B206  +
jmp loc_46B50F  +
mov eax ebx +
call sub_461710  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
mov eax ebx +
call sub_461710  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
mov eax [eax+4] +
xor edi edi +
cmp eax 1 +
jz loc_46CA20  +
jle loc_46C11E  +
cmp eax 2 +
jz loc_46C07D  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_46B957  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46C9D8  +
cmp byte ptr [edi] 6Eh +
jnz loc_46BFF9  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_46CA13  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_465650  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46CA06  +
cmp al 70h +
jz loc_46C97D  +
cmp al 69h +
jnz loc_46BFFC  +
cmp byte ptr [edx+1] 6Ch +
nop   +
jnz loc_46C8FB  +
mov eax ebx +
call sub_46A180  +
mov ecx edi +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx 38h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
mov eax [eax+4] +
mov [esp+2Ch+var_18] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46C967  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_46BAC1  +
xor esi esi +
test cl cl +
jnz loc_46C8AB  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov edx 30h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_46C414  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46C3DA  +
jle loc_46C3A5  +
cmp eax 2 +
jz loc_46C145  +
cmp eax 3 +
jnz loc_46B7F5  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46C47B  +
cmp byte ptr [edx] 6Eh +
jnz loc_46B7F5  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46B7ED  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_465650  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_14] eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46C457  +
cmp al 70h +
jz loc_46C445  +
cmp al 69h +
jnz loc_46C50F  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_46C505  +
mov eax ebx +
call sub_46A180  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
mov eax ebx +
call sub_461710  +
mov ecx eax +
jmp loc_46AA93  +
xor esi esi +
test cl cl +
jnz loc_46C934  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_14] 0 +
mov eax [eax+4] +
cmp eax 1 +
jz loc_46C6FD  +
jle loc_46C2CE  +
cmp eax 2 +
jz loc_46C21E  +
cmp eax 3 +
jnz loc_46B17C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46C87B  +
mov eax [esp+2Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_46B17C  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46C6AC  +
mov edx 5Fh +
mov eax ebx +
call sub_468410  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_465650  +
mov [esp+2Ch+var_10] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46C69F  +
xor ecx ecx +
cmp dl 70h +
jz loc_46C67E  +
cmp dl 69h +
jnz loc_46AA93  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46AA93  +
mov eax ebx +
call sub_46A180  +
mov ecx [esp+2Ch+var_10] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_18] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46AA93  +
xor ecx ecx +
test al al +
jnz loc_46C5D9  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_468410  +
mov ecx [esp+2Ch+var_18] +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46AA93  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov ecx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ecx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_14] ecx +
call strcmp  +
test eax eax +
jz loc_46C8BA  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax+0Ch] +
jmp loc_46BD7A  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
mov eax ebx +
call sub_466C00  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C52D  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_14] eax +
jmp loc_46AC67  +
mov eax [eax+4] +
xor edx edx +
jmp loc_46BC46  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46A92B  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov edi eax +
jmp loc_46B5F8  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov edi eax +
jmp loc_46BA30  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_466C00  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C8D5  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 1 +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46AA93  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_46B69F  +
xor ecx ecx +
jmp loc_46AA93  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46BFC0  +
sub eax 72h +
cmp al 1 +
ja loc_46B842  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_465650  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_46B855  +
mov eax ebx +
call sub_46A180  +
mov ecx eax +
jmp loc_46B8BE  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_46B64C  +
mov edx [ebx+0Ch] +
xor edi edi +
jmp loc_46AEB8  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ecx eax +
jmp loc_46B8BE  +
add eax 2 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
mov eax ebx +
call sub_466C00  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C650  +
mov [esp+2Ch+var_2C] edi +
mov edx 1 +
mov ecx esi +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46C06C  +
sub eax 72h +
cmp al 1 +
ja loc_46B9CC  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_14] eax +
jmp loc_46B9D7  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46C9B1  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46C99E  +
mov [esp+2Ch+var_28] offset unk_4930EF +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46C0DB  +
mov [esp+2Ch+var_28] offset unk_4930F2 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_46C9F8  +
mov eax ebx +
call sub_466C00  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46CA52  +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_461350  +
mov edx 36h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
test eax eax +
jnz loc_46B957  +
mov edx 34h +
mov ecx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46AEB8  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46C6CE  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_46A180  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46C6BB  +
mov [esp+2Ch+var_28] offset unk_4930EF +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_46C1BB  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4930F2 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_46C3CC  +
mov eax ebx +
call sub_466C00  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C81C  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_46A180  +
mov edi eax +
mov eax ebx +
call sub_46A180  +
jmp loc_46B7AF  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46C854  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46C841  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4930EF +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46C28C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4930F2 +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jnz loc_46C89D  +
mov eax ebx +
call sub_466C00  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C732  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
mov edx 37h +
mov eax ebx +
call sub_461350  +
mov ecx [esp+2Ch+var_18] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46AA93  +
test eax eax +
jnz loc_46B17C  +
mov ecx [esp+2Ch+var_18] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_461350  +
mov ecx eax +
jmp loc_46AA93  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
mov eax ebx +
call sub_466C00  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46C78A  +
mov [esp+2Ch+var_2C] ecx +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
mov eax ebx +
call sub_4616D0  +
add eax 1 +
mov edx eax +
jnz loc_46B5BD  +
xor esi esi +
jmp loc_46B7F7  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46B911  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46AC55  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_46A180  +
jmp loc_46B4C9  +
test eax eax +
jnz loc_46B7F5  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_461350  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46AF7B  +
mov eax ebx +
call sub_46A180  +
mov ecx eax +
jmp loc_46C1D0  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_46C3FA  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_46C408  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_46C425  +
cmp ecx 33h +
jnz loc_46AF46  +
jmp loc_46AF3A  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_46C3FA  +
jmp loc_46C3ED  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_2C] eax +
nop   +
jmp loc_46AF68  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46C3FA  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_46C3FA  +
cmp byte ptr [edx+1] 69h +
mov ecx 70h +
jz loc_46C464  +
xor esi esi +
jmp loc_46AFAD  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46BCE7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_468410  +
jmp loc_46BCE7  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_46A180  +
jmp loc_46BCE7  +
xor ecx ecx +
test edi edi +
jz loc_46C4AE  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jz loc_46C4BC  +
cmp al 70h +
jz loc_46C4BC  +
cmp edx 33h +
jnz loc_46AC2E  +
jmp loc_46AC22  +
xor ecx ecx +
cmp al [edi+1] +
jnz loc_46C4AE  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46C4AE  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46C4AE  +
cmp byte ptr [eax+1] 69h +
jnz loc_46B199  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_46B4C9  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46B4C9  +
mov ecx 69h +
jmp loc_46C450  +
xor esi esi +
jmp loc_46AF7B  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_46AF4D  +
mov eax ebx +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46BEFD  +
cmp al 69h +
jz loc_46AEFA  +
jmp loc_46AF04  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_46C57A  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_46C588  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_46C594  +
cmp ecx 33h +
jnz loc_46A909  +
jmp loc_46A8FD  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_46C57A  +
jmp loc_46C56D  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46C57A  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_46C57A  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46B8BE  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov ecx eax +
jmp loc_46BE6A  +
cmp dl 69h +
jz loc_46AE38  +
jmp loc_46AE42  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_46C614  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_46C60B  +
cmp dl 70h +
jnz loc_46C614  +
mov edi [esp+2Ch+var_18] +
cmp dl [edi+1] +
jz loc_46C62A  +
mov edx [ebx+0Ch] +
xor esi esi +
cmp eax 33h +
jz loc_46A872  +
movzx eax byte ptr [edx] +
jmp loc_46A87D  +
mov edx [ebx+0Ch] +
mov esi 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46C619  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_46C619  +
mov eax ebx +
call sub_46A180  +
mov edi eax +
jmp loc_46BA30  +
mov eax ebx +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46C03E  +
cmp cl 69h +
jz loc_46AFC2  +
jmp loc_46AFCC  +
cmp byte ptr [eax+1] 69h +
jnz loc_46AA93  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_46BE20  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46BE20  +
cmp al 77h +
jz loc_46BDD0  +
xor ecx ecx +
jmp loc_46AA93  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ecx eax +
jmp loc_46C1D0  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46C6E4  +
sub eax 72h +
cmp al 1 +
ja loc_46C154  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_465650  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_46C167  +
mov eax [esp+2Ch+var_14] +
xor ecx ecx +
test eax eax +
jz loc_46C719  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jnz loc_46C729  +
mov edx [esp+2Ch+var_14] +
xor ecx ecx +
cmp al [edx+1] +
jz loc_46C757  +
cmp [esp+2Ch+var_10] 33h +
jnz loc_46B012  +
jmp loc_46B006  +
cmp al 70h +
jnz loc_46C719  +
lea esi [esi+0] +
jmp loc_46C70E  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46C2A1  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46C719  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46C719  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_468410  +
mov ecx [esp+2Ch+var_14] +
jmp loc_46AC3D  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46C31C  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_468410  +
mov ecx [esp+2Ch+var_18] +
jmp loc_46AE8D  +
mov eax ebx +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edi eax +
jmp loc_46BA30  +
cmp byte ptr [eax+1] 69h +
jnz loc_46B50F  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_46B7AF  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46B7AF  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov ecx eax +
jmp loc_46C1D0  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov ecx eax +
jmp loc_46C2A1  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46C86A  +
sub eax 72h +
cmp al 1 +
ja loc_46C231  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_10] eax +
jmp loc_46C23C  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_46A180  +
jmp loc_46BE20  +
mov eax ebx +
call sub_46A180  +
mov ecx eax +
jmp loc_46C2A1  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
jmp loc_46BBDF  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
jmp loc_46B036  +
cmp dl 69h +
jz loc_46A7C1  +
jmp loc_46A83D  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_466FF0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46BF7A  +
mov eax 69h +
xor edi edi +
jmp loc_46AEE7  +
cmp al 69h +
jz loc_46ABE8  +
nop   +
jmp loc_46ABF2  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_468410  +
mov ecx [esp+2Ch+var_14] +
jmp loc_46B021  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov esi eax +
jmp loc_46BD40  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468410  +
jmp loc_46A910  +
cmp al 69h +
jz loc_46A8BD  +
jmp loc_46A8C7  +
mov [esp+2Ch+var_2C] ebx +
lea esi [esi+0] +
call sub_465650  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46AEA5  +
cmp byte ptr [edx+1] 69h +
jnz loc_46C900  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_468410  +
jmp loc_46BB5D  +
mov edx 45h +
mov eax ebx +
call sub_468410  +
mov edi eax +
jmp loc_46C0F0  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46C9C7  +
sub eax 72h +
cmp al 1 +
ja loc_46C08C  +
mov [esp+2Ch+var_2C] ebx +
call sub_465650  +
mov [esp+2Ch+var_18] eax +
jmp loc_46C097  +
mov eax ebx +
call sub_46A180  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_46A180  +
mov edi eax +
mov eax ebx +
call sub_46A180  +
jmp loc_46BB5D  +
mov eax ebx +
call sub_46A180  +
mov edi eax +
jmp loc_46C0F0  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46BB5D  +
cmp al 77h +
jz loc_46BB13  +
jmp loc_46BFF9  +
xor ecx ecx +
test edi edi +
jz loc_46CA34  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_46CA45  +
xor ecx ecx +
cmp al [edi+1] +
jz loc_46CA71  +
cmp edx 33h +
jnz loc_46AE7E  +
lea esi [esi+0] +
jmp loc_46AE72  +
cmp al 70h +
jnz loc_46CA34  +
lea esi [esi+0] +
jmp loc_46CA2D  +
mov eax ebx +
call sub_466FF0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_461350  +
mov edi eax +
jmp loc_46C0F0  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46CA34  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46CA34  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] 0 +
mov [ebp+var_54] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_4C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_461550  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx eax +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_46FEC0  +
sub esp eax +
lea eax ds:12h[edx*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_46FEC0  +
mov edx [ebp+arg_0] +
sub esp eax +
lea eax [esp+178h+var_16C] +
mov [ebp+var_28] eax +
mov eax [ebp+var_38] +
lea edi [ebp+var_15C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_164] ebx +
mov [ebp+var_160] eax +
lea eax [ebp+var_164] +
mov [ebp+var_38] eax +
mov eax edi +
call sub_461DE0  +
mov eax [ebp+var_160] +
mov [ebp+var_38] eax +
mov eax [ebp+var_5C] +
mov esp esi +
mov ecx [ebp+var_50] +
mov edx [ebp+var_54] +
mov byte ptr [ebp+eax+var_15C] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_44] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_46CBD0  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_46CDB0  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_46CD64  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_46CD5C  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_46FEC0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_46FEC0  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_46CD10  +
jb loc_46CDC5  +
cmp esi 3 +
ja loc_46CDC5  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_46CCC1  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_46CDE0  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_4613B0  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+78h+var_78] 0 +
call sub_461350  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_46CD25  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_4680D0  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_46CD35  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_46CD5A  +
test ebx ebx +
jz loc_46CDD7  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_46CA90  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_46CD70  +
cmp al 5Fh +
jnz loc_46CDA0  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_46CD83  +
cmp al 44h +
jnz loc_46CBFE  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_46CBFE  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_46CC0C  +
cmp al 24h +
jnz loc_46CBFE  +
jmp loc_46CD70  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_46CBEA  +
mov esi 1 +
nop   +
jmp loc_46CC0C  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_465650  +
mov ebx eax +
jmp loc_46CD25  +
xor eax eax +
mov esp edi +
jmp loc_46CD5C  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_467B30  +
mov ecx eax +
jmp loc_46CCDD  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset sub_461BE0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_46CBD0  +
test eax eax +
jz loc_46CE56  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_46CE51  +
***
push ebx  +
sub esp 28h +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov dword ptr [esp+1Ch] 0 +
jnz loc_46CEE3  +
lea eax [esp+10h] +
mov [esp+0Ch] eax +
mov eax [esp+34h] +
mov dword ptr [esp+8] offset sub_461BE0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_46CA90  +
test eax eax +
jz loc_46CF14  +
mov edx [esp+1Ch] +
mov eax 1 +
test edx edx +
mov edx [esp+3Ch] +
cmovz eax [esp+18h] +
mov [edx] eax +
mov eax [esp+10h] +
add esp 28h +
pop ebx  +
retn   +
***
cmp eax 2 +
mov ebx 2 +
jbe loc_46CEF6  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_46CEF0  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call realloc  +
test eax eax +
jz loc_46CF2E  +
mov [esp+10h] eax +
mov [esp+18h] ebx +
jmp loc_46CE9C  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov eax [esp+3Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_46CEDE  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 1 +
jmp loc_46CE9C  +
***
push ebx  +
mov ecx [esp+8] +
mov edx [esp+10h] +
mov eax [esp+14h] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+0Ch] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_46CE00  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_46CBD0  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+1Ch+arg_0] +
lea ecx [esp+1Ch+var_10] +
call sub_46CE00  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_46CBD0  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_468300  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_468300  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_46D0E0  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_46D0D9  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_458740  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_4586C0  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_46D0A0  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
test edx edx +
jz loc_46D1D0  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_46D1D0  +
sub ecx 46h +
cmp cl 11h +
ja loc_46D1D0  +
movzx ecx cl +
jmp ds:off_49417C[ecx*4]  +
lea ebx [edx+1] +
mov edx offset aExternWindows +
call sub_46D110  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
lea eax [edx+1] +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC +
call sub_46D110  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC_0 +
call sub_46D110  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternPascal +
call sub_46D110  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
test edx edx +
jz loc_46D2AE  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
movzx eax byte ptr [edx] +
test al al +
jz loc_46D220  +
lea ebx [edx+2] +
mov edx eax +
cmp dl 4Eh +
lea eax [ebx-2] +
jnz loc_46D222  +
movzx ecx byte ptr [ebx-1] +
lea edx [ecx-61h] +
cmp dl 0Ah +
ja loc_46D220  +
movzx edx dl +
jmp ds:off_494204[edx*4]  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx offset a@nogc +
mov eax esi +
call sub_46D110  +
movzx edx byte ptr [ebx] +
add ebx 2 +
jmp loc_46D1FB  +
mov edx offset a@safe +
mov eax esi +
call sub_46D110  +
jmp loc_46D234  +
mov edx offset a@trusted +
mov eax esi +
call sub_46D110  +
jmp loc_46D234  +
mov edx offset a@property +
mov eax esi +
call sub_46D110  +
jmp loc_46D234  +
mov edx offset aRef +
mov eax esi +
call sub_46D110  +
jmp loc_46D234  +
mov edx offset aNothrow +
mov eax esi +
call sub_46D110  +
jmp loc_46D234  +
mov edx offset aPure +
mov eax esi +
call sub_46D110  +
jmp loc_46D234  +
mov edx offset aReturn +
mov eax esi +
call sub_46D110  +
jmp loc_46D234  +
xor eax eax +
retn   +
***
jmp sub_46D2C0  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] edx +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_46D2E1  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
mov eax ebp +
call sub_46D0A0  +
mov eax [ebp+4] +
mov ebx [ebp+0] +
lea ecx [eax-1] +
cmp ecx ebx +
jb loc_46D308  +
movzx eax byte ptr [ecx] +
sub ecx 1 +
mov [ecx+esi+1] al +
mov ebx [ebp+0] +
cmp ecx ebx +
jnb loc_46D2F7  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
add [ebp+4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp cl 61h +
setz al  +
mov ebp eax +
mov eax ecx +
and eax 0FFFFFFFDh +
cmp al 75h +
jz loc_46D3D0  +
mov eax ebp +
test al al +
jnz loc_46D3D0  +
cmp cl 62h +
jz loc_46D550  +
movzx eax byte ptr [edx] +
xor ecx ecx +
mov ebx edx +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_46D3BB  +
lea esi [esi+0] +
add ebx 1 +
movzx eax byte ptr [ebx] +
add ecx 1 +
test byte ptr ds:word_490F00[eax+eax] 4 +
jnz loc_46D3A0  +
test ecx ecx +
jnz loc_46D598  +
lea eax [edi-68h] +
cmp al 0Ch +
ja loc_46D591  +
movzx eax al +
jmp ds:off_494250[eax*4]  +
lea eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
mov [esp+34h+var_34] edx +
call strtol  +
mov ecx [esp+34h+var_24] +
test ecx ecx +
mov ebx eax +
jz loc_46D5C0  +
test eax eax +
js loc_46D5C0  +
mov eax esi +
mov edx offset asc_49423B +
call sub_46D110  +
lea eax [ebx-20h] +
cmp eax 5Eh +
ja loc_46D448  +
mov eax ebp +
test al al +
jz loc_46D448  +
mov ecx 1 +
mov eax esi +
lea edx [esp+34h+var_20] +
mov byte ptr [esp+34h+var_20] bl +
call sub_46D330  +
lea esi [esi+0] +
mov eax esi +
mov edx offset asc_49423B +
call sub_46D110  +
mov eax [esp+34h+var_24] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 75h +
jz loc_46D5A5  +
cmp al 77h +
jz loc_46D536  +
xor ecx ecx +
cmp al 61h +
jnz loc_46D471  +
mov edx offset asc_49423D +
mov eax esi +
call sub_46D110  +
mov ecx 2 +
test ebx ebx +
jz loc_46D5C7  +
mov edx 9 +
jmp loc_46D494  +
add eax 30h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jz loc_46D4B4  +
mov eax ebx +
mov edi edx +
and eax 0Fh +
cmp eax 9 +
jle loc_46D480  +
add eax 57h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jnz loc_46D494  +
test ecx ecx +
jle loc_46D4CE  +
mov eax edi +
mov edx ecx +
sub eax ecx +
lea eax [esp+eax+34h+var_20] +
mov byte ptr [eax+edx-1] 30h +
sub edx 1 +
jnz loc_46D4C2  +
sub edi ecx +
mov ecx 0Ah +
sub ecx edi +
jz loc_46D430  +
lea edx [esp+edi+34h+var_20] +
mov eax esi +
call sub_46D330  +
jmp loc_46D430  +
mov eax esi +
mov edx offset aUl_0 +
call sub_46D110  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset asc_494248 +
call sub_46D110  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset aU_2 +
call sub_46D110  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aU_1 +
mov eax esi +
call sub_46D110  +
mov ecx 8 +
jmp loc_46D471  +
lea eax [esp+34h+var_20] +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
call strtol  +
mov edx [esp+34h+var_20] +
test edx edx +
jz loc_46D5C0  +
test eax eax +
js loc_46D5C0  +
mov eax offset aFalse_1 +
mov edx offset aTrue_1 +
cmovz edx eax +
mov eax esi +
call sub_46D110  +
mov eax [esp+34h+var_20] +
jmp loc_46D4FE  +
mov eax ebx +
jmp loc_46D4FE  +
mov eax esi +
call sub_46D330  +
nop   +
jmp loc_46D3BB  +
mov edx offset aU_0 +
mov eax esi +
call sub_46D110  +
mov ecx 4 +
jmp loc_46D471  +
xor eax eax +
jmp loc_46D4FE  +
mov edi 0Ah +
jmp loc_46D4B4  +
***
jmp sub_46D5E0  +
***
push esi  +
mov edi offset unk_494284 +
push ebx  +
mov esi edx +
sub esp 40h +
mov ebx edx +
cmps   +
jz loc_46D727  +
mov edi offset off_49428C +
mov ecx 3 +
mov esi edx +
cmps   +
jz loc_46D766  +
mov edi offset aNinf +
mov ecx 4 +
mov esi edx +
cmps   +
jz loc_46D77C  +
movzx ecx byte ptr [edx] +
xor edx edx +
cmp cl 4Eh +
jz loc_46D73D  +
movzx esi cl +
test byte ptr [esi+esi+490F01h] 1 +
jz loc_46D75B  +
mov [esp+edx+48h+var_46] cl +
lea ecx [edx+4] +
mov [esp+edx+48h+var_48] 30h +
lea esi [ebx+1] +
mov [esp+edx+48h+var_47] 78h +
mov [esp+edx+48h+var_45] 2Eh +
movzx edx byte ptr [ebx+1] +
movzx ebx dl +
test byte ptr [ebx+ebx+490F01h] 1 +
jz loc_46D689  +
lea edi [esp-1] +
add ecx 1 +
add esi 1 +
mov [edi+ecx] dl +
movzx edx byte ptr [esi] +
movzx ebx dl +
test byte ptr [ebx+ebx+490F01h] 1 +
jnz loc_46D670  +
cmp dl 50h +
jnz loc_46D75B  +
movzx edi byte ptr [esi+1] +
lea edx [ecx+1] +
mov [esp+ecx+48h+var_48] 70h +
mov ebx edi +
cmp bl 4Eh +
jz loc_46D792  +
lea ebx [esi+1] +
mov esi edi +
mov ecx esi +
movzx ecx cl +
test byte ptr ds:word_490F00[ecx+ecx] 4 +
jz loc_46D6DB  +
mov ecx esi +
lea edi [esp-1] +
add edx 1 +
add ebx 1 +
mov [edi+edx] cl +
movzx ecx byte ptr [ebx] +
movzx esi cl +
test byte ptr ds:word_490F00[esi+esi] 4 +
jnz loc_46D6C2  +
mov [esp+edx+48h+var_48] 0 +
mov esi esp +
mov ecx esp +
mov edi [ecx] +
add ecx 4 +
lea edx [edi-1010101h] +
not edi  +
and edx edi +
and edx 80808080h +
jz loc_46D6E3  +
mov edi edx +
shr edi 10h +
test edx 8080h +
cmovz edx edi +
lea edi [ecx+2] +
cmovz ecx edi +
add dl dl +
sbb ecx 3 +
sub ecx esi +
jz loc_46D734  +
mov edx esi +
call sub_46D330  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_494288 +
add ebx 3 +
call sub_46D110  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [ebx+1] +
add ebx 1 +
mov dl 1 +
mov [esp+48h+var_48] 2Dh +
movzx esi cl +
test byte ptr [esi+esi+490F01h] 1 +
jnz loc_46D643  +
add esp 40h +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_494290 +
add ebx 3 +
call sub_46D110  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset aInf +
add ebx 4 +
call sub_46D110  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+edx+48h+var_48] 2Dh +
lea ebx [esi+2] +
movzx esi byte ptr [esi+2] +
lea edx [ecx+2] +
jmp loc_46D6AD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov esi [esp+2Ch+arg_0] +
jz loc_46D817  +
mov ebx eax +
movzx eax byte ptr [edx] +
test al al +
jz loc_46D817  +
lea edi [eax-30h] +
mov ebp ecx +
mov ecx edi +
cmp cl 47h +
ja loc_46D817  +
movzx edi cl +
jmp ds:off_4942CC[edi*4]  +
add edx 1 +
mov byte ptr [esp+2Ch+var_12] al +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call strtol  +
mov ebp [esp+2Ch+var_12+2] +
test ebp ebp +
mov edi eax +
jz loc_46D817  +
test eax eax +
js loc_46D817  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_46D9F5  +
xor esi esi +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
lea ecx [edx+1] +
sub eax 30h +
cmp al 9 +
ja loc_46D817  +
mov edx ecx +
mov eax esi +
movsx ecx al +
mov eax ebx +
call sub_46D360  +
add esp 2Ch +
pop ebx  +
mov esi eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
add edx 1 +
cmp al 48h +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
jz loc_46DBB3  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_46D817  +
test eax eax +
js loc_46D817  +
mov edx offset asc_4942BC +
mov eax ebx +
call sub_46D110  +
jmp loc_46D8B5  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46D7B0  +
test edi edi +
mov esi eax +
jz loc_46D8B5  +
mov edx offset asc_4942C0 +
mov eax ebx +
call sub_46D110  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_46D891  +
mov edx offset asc_4942C3 +
mov eax ebx +
call sub_46D110  +
jmp loc_46D819  +
lea edi [edx+1] +
mov eax ebx +
mov edx offset asc_4942A3 +
call sub_46D110  +
mov eax esi +
mov edx edi +
movsx ecx al +
mov eax ebx +
call sub_46D360  +
mov esi eax +
jmp loc_46D819  +
add edx 1 +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_20] ebp +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_46D817  +
test eax eax +
js loc_46D817  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jz loc_46D93A  +
mov edx ebp +
mov eax ebx +
call sub_46D110  +
mov edx offset asc_4942C5 +
mov eax ebx +
call sub_46D110  +
jmp loc_46D96C  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46D7B0  +
test edi edi +
mov esi eax +
jz loc_46D96C  +
mov edx offset asc_4942C0 +
mov eax ebx +
call sub_46D110  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_46D948  +
mov edx offset asc_4942C7 +
mov eax ebx +
call sub_46D110  +
jmp loc_46D819  +
add edx 1 +
mov eax ebx +
call sub_46D5E0  +
mov edx offset asc_4942A5 +
mov esi eax +
mov eax ebx +
call sub_46D110  +
test esi esi +
jz loc_46D817  +
cmp byte ptr [esi] 63h +
jnz loc_46D817  +
lea edx [esi+1] +
mov eax ebx +
call sub_46D5E0  +
mov edx offset aI +
mov esi eax +
mov eax ebx +
call sub_46D110  +
jmp loc_46D819  +
add edx 1 +
mov eax ebx +
call sub_46D5E0  +
mov esi eax +
jmp loc_46D819  +
lea esi [edx+1] +
mov eax ebx +
mov edx offset aNull +
call sub_46D110  +
jmp loc_46D819  +
mov edx offset asc_4942A9 +
mov eax ebx +
call sub_46D110  +
test edi edi +
lea esi [ebp+1] +
jz loc_46DC31  +
movzx edx byte ptr [ebp+1] +
movzx eax dl +
test byte ptr [eax+eax+490F01h] 1 +
jz loc_46D817  +
movzx ecx byte ptr [ebp+2] +
movzx eax cl +
test byte ptr [eax+eax+490F01h] 1 +
jz loc_46D817  +
mov eax edx +
lea edx [eax-61h] +
lea ebp [edi-1] +
xor edi edi +
cmp dl 5 +
ja loc_46DAC1  +
sub eax 57h +
shl eax 4 +
lea edx [ecx-61h] +
cmp dl 5 +
ja loc_46DADF  +
sub ecx 57h +
or eax ecx +
lea edx [eax-9] +
cmp dl 17h +
mov byte ptr [esp+2Ch+var_12+1] al +
ja loc_46DB44  +
movzx edx dl +
jmp ds:off_4943EC[edx*4]  +
mov edx offset asc_4942AB +
mov eax ebx +
call sub_46D110  +
add esi 2 +
cmp edi ebp +
jz loc_46DC31  +
movzx eax byte ptr [esi] +
movzx edx al +
test byte ptr [edx+edx+490F01h] 1 +
jz loc_46D817  +
movzx ecx byte ptr [esi+1] +
add edi 1 +
movzx edx cl +
test byte ptr [edx+edx+490F01h] 1 +
jz loc_46D817  +
lea edx [eax-61h] +
cmp dl 5 +
jbe loc_46DA45  +
lea edx [eax-41h] +
cmp dl 5 +
ja loc_46DB76  +
sub eax 37h +
lea edx [ecx-61h] +
shl eax 4 +
cmp dl 5 +
jbe loc_46DA57  +
lea edx [ecx-41h] +
cmp dl 5 +
ja loc_46DB66  +
sub ecx 37h +
jmp loc_46DA5A  +
mov edx offset aR_0 +
mov eax ebx +
call sub_46D110  +
jmp loc_46DA82  +
mov edx offset aF +
mov eax ebx +
call sub_46D110  +
jmp loc_46DA82  +
mov edx offset aV +
mov eax ebx +
call sub_46D110  +
jmp loc_46DA82  +
mov edx offset aN +
mov eax ebx +
call sub_46D110  +
jmp loc_46DA82  +
mov edx offset aT +
mov eax ebx +
call sub_46D110  +
jmp loc_46DA82  +
movzx eax al +
test byte ptr ds:word_490F00[eax+eax] 10h +
jz loc_46DB94  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12+1] +
call sub_46D330  +
jmp loc_46DA82  +
lea edx [ecx-30h] +
xor ecx ecx +
cmp dl 9 +
cmovbe ecx edx +
jmp loc_46DA5A  +
lea edx [eax-30h] +
mov eax edx +
shl eax 4 +
mov byte ptr [esp+2Ch+var_20] al +
xor eax eax +
cmp dl 9 +
movzx edx byte ptr [esp+2Ch+var_20] +
cmovbe eax edx +
jmp loc_46DA4B  +
mov eax ebx +
mov edx offset asc_49423D +
call sub_46D110  +
mov ecx 2 +
mov edx esi +
mov eax ebx +
call sub_46D330  +
jmp loc_46DA82  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_46D817  +
test eax eax +
js loc_46D817  +
mov edx offset asc_4942BC +
mov eax ebx +
call sub_46D110  +
jmp loc_46DC24  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46D7B0  +
mov edx (offset asc_4942BC+2) +
mov esi eax +
mov eax ebx +
call sub_46D110  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46D7B0  +
test edi edi +
mov esi eax +
jz loc_46DC24  +
mov edx offset asc_4942C0 +
mov eax ebx +
call sub_46D110  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_46DBE0  +
jmp loc_46D8BD  +
mov edx offset asc_4942A9 +
mov eax ebx +
call sub_46D110  +
cmp byte ptr [esp+2Ch+var_12] 61h +
jz loc_46D819  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12] +
call sub_46D330  +
jmp loc_46D819  +
***
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_46DCD6  +
movzx ecx byte ptr [edx] +
mov esi eax +
test cl cl +
jz loc_46DCD6  +
cmp cl 4Fh +
jz loc_46DCE0  +
jle loc_46DCB5  +
cmp cl 78h +
nop   +
jz loc_46DCA0  +
cmp cl 79h +
jnz loc_46DCF7  +
mov eax esi +
mov edx offset aImmutable_0 +
call sub_46D110  +
lea eax [ebx+1] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
mov edx offset aConst_2 +
call sub_46D110  +
add esp 4 +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
retn   +
cmp cl 4Eh +
jnz loc_46DCF7  +
cmp byte ptr [ebx+1] 67h +
jnz loc_46DCD6  +
mov edx offset aInout +
mov eax esi +
add ebx 2 +
call sub_46D110  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_46DC74  +
xor eax eax +
jmp loc_46DC96  +
add ebx 1 +
mov edx offset aShared_0 +
mov eax esi +
call sub_46D110  +
test ebx ebx +
jnz loc_46DCCF  +
xor eax eax +
jmp loc_46DC96  +
add esp 4 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
jz loc_46DD28  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_46DD28  +
sub edx 41h +
cmp dl 39h +
ja loc_46DD28  +
movzx edx dl +
mov esi eax +
jmp ds:off_49454C[edx*4]  +
xor eax eax +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 69h +
jz loc_46E1CC  +
cmp al 6Bh +
jnz loc_46DD28  +
mov eax esi +
mov edx offset aUcent +
call sub_46D110  +
lea eax [ebx+2] +
jmp loc_46DD30  +
add ebx 1 +
mov edx offset aImmutable +
mov eax esi +
call sub_46D110  +
mov edx ebx +
mov eax esi +
call sub_46DD00  +
mov edx offset asc_4942C7 +
mov ebx eax +
mov eax esi +
call sub_46D110  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edx offset aConst_1 +
jmp loc_46DD68  +
mov edx offset aDchar +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aVoid_0 +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aWchar +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aUshort +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aShort_0 +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aCdouble +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aCfloat +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aIdouble +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aIfloat +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aNone +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aUlong +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aLong_0 +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aUint +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aIreal +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aInt_0 +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aUbyte +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aByte +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aFloat_0 +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aReal +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aDouble_0 +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aCreal +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aBool_0 +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
mov edx offset aChar_0 +
call sub_46D110  +
lea eax [ebx+1] +
jmp loc_46DD30  +
lea edx [ebx+1] +
call sub_46DD00  +
mov edx offset asc_49449B +
mov ebx eax +
mov eax esi +
call sub_46D110  +
mov eax ebx +
jmp loc_46DD30  +
add ebx 1 +
mov edx offset aShared +
jmp loc_46DD68  +
movzx edx byte ptr [ebx+1] +
cmp dl 67h +
jz loc_46E21C  +
xor eax eax +
cmp dl 68h +
jnz loc_46DD30  +
add ebx 2 +
mov edx offset a__vector_0 +
jmp loc_46DD68  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_46DD00  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_46E200  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_46DD00  +
mov edx offset asc_4942BC +
mov ebx eax +
mov eax esi +
call sub_46D110  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_46E005  +
mov ecx edi +
mov eax esi +
call sub_46D330  +
mov edx offset asc_4942C3 +
mov eax esi +
call sub_46D110  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_46DD86  +
mov [esp+2Ch+var_2C] edx +
call free  +
mov eax ebx +
jmp loc_46DD88  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_46DC60  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_46E1E0  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_46E3A0  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_46D110  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_46E094  +
mov ecx edi +
mov eax esi +
call sub_46D330  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jnz loc_46E01D  +
mov eax ebx +
jmp loc_46DD88  +
lea edx [ebx+1] +
mov ecx 2 +
call sub_46E9F0  +
jmp loc_46DD30  +
add ebx 1 +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
call strtol  +
mov edi [esp+2Ch+var_18] +
test edi edi +
mov ebx eax +
jz loc_46DD28  +
test eax eax +
js loc_46DD28  +
mov edx offset aTuple +
mov eax esi +
call sub_46D110  +
jmp loc_46E10C  +
mov edx edi +
mov eax esi +
call sub_46DD00  +
test ebx ebx +
mov edi eax +
jz loc_46E10C  +
mov edx offset asc_4942C0 +
mov eax esi +
call sub_46D110  +
sub ebx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_46E0F1  +
mov eax esi +
mov edx offset asc_4942C7 +
call sub_46D110  +
mov eax edi +
jmp loc_46DD30  +
lea edx [ebx+1] +
call sub_46DD00  +
mov edx offset asc_494498 +
mov ebx eax +
mov eax esi +
call sub_46D110  +
mov eax ebx +
jmp loc_46DD30  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
mov edx edi +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_46E229  +
nop   +
lea esi [esi+0] +
mov ebp edx +
add edx 1 +
movzx eax byte ptr [edx] +
sub ebp ebx +
test byte ptr ds:word_490F00[eax+eax] 4 +
jnz loc_46E160  +
mov eax esi +
call sub_46DD00  +
mov edx offset asc_4942BC +
mov ebx eax +
mov eax esi +
call sub_46D110  +
test ebp ebp +
jz loc_46E198  +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_46D330  +
mov eax esi +
mov edx offset asc_4942C3 +
call sub_46D110  +
mov eax ebx +
jmp loc_46DD30  +
mov edx ebx +
call sub_46E3A0  +
mov edx offset aFunction +
mov ebx eax +
mov eax esi +
call sub_46D110  +
mov eax ebx +
jmp loc_46DD30  +
mov eax esi +
mov edx offset aCent +
call sub_46D110  +
lea eax [ebx+2] +
jmp loc_46DD30  +
mov edx eax +
mov eax esi +
call sub_46E3A0  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_46D110  +
mov edx [esp+2Ch+var_18] +
jmp loc_46E094  +
mov edx eax +
mov eax esi +
call sub_46DD00  +
mov edx offset asc_4942BC +
mov ebx eax +
mov eax esi +
call sub_46D110  +
jmp loc_46E005  +
add ebx 2 +
mov edx offset aInout_0 +
jmp loc_46DD68  +
mov eax esi +
call sub_46DD00  +
mov edx offset asc_4942BC +
mov ebx eax +
mov eax esi +
call sub_46D110  +
jmp loc_46E198  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0Ch +
test edx edx +
jz loc_46E390  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_46E32C  +
mov esi eax +
xor edi edi +
cmp dl 59h +
jz loc_46E2E2  +
cmp dl 5Ah +
jz loc_46E2D7  +
cmp dl 58h +
jz loc_46E2C0  +
test edi edi +
jnz loc_46E330  +
movzx eax byte ptr [ebx] +
cmp al 4Dh +
jz loc_46E372  +
cmp al 4Eh +
jz loc_46E341  +
cmp al 4Bh +
jz loc_46E300  +
cmp al 4Ch +
jz loc_46E361  +
cmp al 4Ah +
jnz loc_46E30F  +
mov edx offset aOut +
mov eax esi +
add ebx 1 +
call sub_46D110  +
jmp loc_46E30F  +
mov eax esi +
mov edx offset unk_494634 +
call sub_46D110  +
lea eax [ebx+1] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset a____1 +
call sub_46D110  +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aRef +
mov eax esi +
add ebx 1 +
call sub_46D110  +
mov edx ebx +
mov eax esi +
call sub_46DD00  +
test eax eax +
mov ebx eax +
jz loc_46E390  +
movzx edx byte ptr [eax] +
add edi 1 +
test dl dl +
jnz loc_46E270  +
mov eax ebx +
jmp loc_46E2CF  +
mov edx offset asc_4942C0 +
mov eax esi +
call sub_46D110  +
jmp loc_46E287  +
cmp byte ptr [ebx+1] 6Bh +
jnz loc_46E30F  +
mov eax esi +
mov edx offset aReturn +
lea ebp [ebx+2] +
call sub_46D110  +
movzx eax byte ptr [ebx+2] +
mov ebx ebp +
jmp loc_46E29A  +
mov edx offset aLazy +
mov eax esi +
add ebx 1 +
call sub_46D110  +
jmp loc_46E30F  +
mov eax esi +
mov edx offset aScope +
lea ebp [ebx+1] +
call sub_46D110  +
movzx eax byte ptr [ebx+1] +
mov ebx ebp +
jmp loc_46E292  +
xor eax eax +
jmp loc_46E2CF  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
test edx edx +
jz loc_46E4EC  +
cmp byte ptr [edx] 0 +
jz loc_46E4EC  +
mov esi eax +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_18] 0 +
call sub_46D150  +
mov edx eax +
lea eax [esp+4Ch+var_30] +
call sub_46D1E0  +
mov ecx [esp+4Ch+var_2C] +
mov ebp [esp+4Ch+var_30] +
mov edi ecx +
sub edi ebp +
cmp ebp ecx +
mov edx eax +
cmovz edi ebx +
lea eax [esp+4Ch+var_24] +
call sub_46E250  +
mov ecx [esp+4Ch+var_20] +
mov ebp [esp+4Ch+var_24] +
mov edx ecx +
sub edx ebp +
cmp ebp ecx +
cmovnz ebx edx +
mov edx eax +
lea eax [esp+4Ch+var_18] +
mov ebp ebx +
call sub_46DD00  +
mov edx [esp+4Ch+var_18] +
mov ecx [esp+4Ch+var_14] +
cmp edx ecx +
mov ebx eax +
jz loc_46E464  +
sub ecx edx +
jnz loc_46E4F6  +
mov edx offset asc_4942C5 +
mov eax esi +
call sub_46D110  +
test ebp ebp +
mov edx [esp+4Ch+var_24] +
jnz loc_46E514  +
mov edx offset asc_494650 +
mov eax esi +
call sub_46D110  +
test edi edi +
mov edx [esp+4Ch+var_30] +
jnz loc_46E502  +
test edx edx +
jz loc_46E4B4  +
mov [esp+4Ch+var_4C] edx +
call free  +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] 0 +
mov eax [esp+4Ch+var_24] +
test eax eax +
jz loc_46E4DC  +
mov [esp+4Ch+var_4C] eax +
call free  +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_24] 0 +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_46E4EC  +
mov [esp+4Ch+var_4C] eax +
call free  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_46D330  +
jmp loc_46E464  +
mov ecx edi +
mov eax esi +
call sub_46D330  +
mov edx [esp+4Ch+var_30] +
jmp loc_46E490  +
mov ecx ebp +
mov eax esi +
call sub_46D330  +
jmp loc_46E47C  +
***
push esi  +
push ebx  +
sub esp 3Ch +
test edx edx +
mov [esp+3Ch+var_28] eax +
jz loc_46E644  +
cmp byte ptr [edx] 0 +
jz loc_46E644  +
lea eax [esp+3Ch+var_1C] +
mov esi ecx +
mov [esp+3Ch+var_34] 0Ah +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call strtol  +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
mov [esp+3Ch+var_24] eax +
jz loc_46E644  +
test eax eax +
jle loc_46E644  +
cmp esi 4 +
jz loc_46E667  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov edi [esp+3Ch+var_24] +
cmp eax edi +
jb loc_46E644  +
cmp edi 4 +
jle loc_46E650  +
mov edi offset a__t_0 +
mov ecx 3 +
mov esi ebx +
cmps   +
jnz loc_46E650  +
movzx eax byte ptr [ebx+3] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jz loc_46E644  +
cmp al 30h +
jz loc_46E644  +
mov esi [esp+3Ch+var_28] +
lea edx [ebx+3] +
mov ecx 3 +
mov eax esi +
call sub_46E530  +
mov edx offset asc_49465A +
mov edi eax +
mov eax esi +
call sub_46D110  +
test edi edi +
jz loc_46E636  +
movzx eax byte ptr [edi] +
test al al +
jz loc_46E8C9  +
xor esi esi +
cmp al 5Ah +
jz loc_46E9E3  +
test esi esi +
jnz loc_46E877  +
movzx eax byte ptr [edi] +
cmp al 48h +
jz loc_46E890  +
cmp al 54h +
jz loc_46E960  +
cmp al 56h +
jz loc_46E8F0  +
cmp al 53h +
lea esi [esi+0] +
jz loc_46E8A0  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4942C7 +
call sub_46D110  +
xor esi esi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_24] +
sub eax 6 +
cmp eax 6 +
ja loc_46E760  +
jmp ds:off_494704[eax*4]  +
mov eax [esp+3Ch+var_28] +
xor edi edi +
mov ebp [esp+3Ch+var_24] +
mov edx [eax] +
mov eax [eax+4] +
mov ecx eax +
sub ecx edx +
cmp edx eax +
cmovz ecx edi +
mov edx ebx +
mov [esp+3Ch+var_20] ecx +
jmp loc_46E6FA  +
mov [esp+3Ch+var_1C] 0 +
movzx eax byte ptr [edx] +
mov ebp [esp+3Ch+var_24] +
test byte ptr ds:word_490F00[eax+eax] 4 +
jnz loc_46E70D  +
mov edi offset a_d +
mov esi edx +
mov ecx 2 +
cmps   +
jz loc_46E730  +
mov eax edx +
sub eax ebx +
cmp eax ebp +
jz loc_46E870  +
mov eax 66666667h +
imul  ebp +
mov eax [esp+3Ch+var_28] +
sar ebp 1Fh +
sar edx 2 +
mov ecx [eax+4] +
sub edx ebp +
mov ebp edx +
mov edx [eax] +
xor eax eax +
mov esi ecx +
sub esi edx +
cmp edx ecx +
cmovnz eax esi +
cmp [esp+3Ch+var_20] eax +
js loc_46E723  +
lea edx [ebx-1] +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
jz loc_46E644  +
test ebp ebp +
jz loc_46E687  +
movzx eax byte ptr [edx] +
mov ebx edx +
test byte ptr ds:word_490F00[eax+eax] 4 +
jz loc_46E6A0  +
mov eax [esp+3Ch+var_28] +
mov ecx 3 +
call sub_46E9F0  +
mov edx eax +
test edx edx +
jnz loc_46E6B4  +
jmp loc_46E6C0  +
mov eax [esp+3Ch+var_28] +
add edx [esp+3Ch+var_20] +
mov [eax+4] edx +
jmp loc_46E6EB  +
mov eax [esp+3Ch+var_28] +
add edx 2 +
mov ecx 1 +
call sub_46E9F0  +
mov edx eax +
jmp loc_46E71D  +
mov edi offset a__postblitmfz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jz loc_46E98C  +
lea esi [esi+0] +
mov esi [esp+3Ch+var_24] +
mov edx ebx +
mov eax [esp+3Ch+var_28] +
mov ecx esi +
add esi ebx +
call sub_46D330  +
jmp loc_46E646  +
mov edi offset a__classz +
mov ecx 8 +
mov esi ebx +
cmps   +
jnz loc_46E760  +
mov edx offset aClassinfoFor +
jmp loc_46E800  +
mov ecx [esp+3Ch+var_24] +
mov eax 7 +
mov edi offset a__ctor +
mov esi ebx +
cmp ecx 7 +
cmovg ecx eax +
cmp ecx ecx +
cmps   +
jz loc_46E973  +
mov edi [esp+3Ch+var_24] +
mov esi ebx +
cmp edi 7 +
cmovle eax edi +
mov edi offset a__dtor +
mov ecx eax +
cmp eax eax +
cmps   +
jz loc_46E9A7  +
mov edi offset a__initz +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_46E9CA  +
mov edi offset a__vtblz +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_46E760  +
mov edx offset aVtableFor_0 +
lea esi [esi+0] +
mov edi [esp+3Ch+var_28] +
mov eax edi +
call sub_46D2C0  +
mov eax [edi] +
mov edx [edi+4] +
cmp eax edx +
jz loc_46E9C0  +
sub edx eax +
sub edx 1 +
mov edi [esp+3Ch+var_28] +
add eax edx +
mov esi [esp+3Ch+var_24] +
mov [edi+4] eax +
add esi ebx +
jmp loc_46E646  +
mov edi offset a__moduleinfoz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jnz loc_46E760  +
mov edx offset aModuleinfoFor +
jmp loc_46E800  +
mov edi offset a__interfacez +
mov ecx 0Ch +
mov esi ebx +
cmps   +
jnz loc_46E760  +
mov edx offset aInterfaceFor +
jmp loc_46E800  +
mov esi edx +
jmp loc_46E646  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4942C0 +
call sub_46D110  +
jmp loc_46E60F  +
movzx eax byte ptr [edi+1] +
add edi 1 +
jmp loc_46E61A  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
mov ecx 4 +
call sub_46E9F0  +
mov edi eax +
test edi edi +
jz loc_46E636  +
movzx eax byte ptr [edi] +
add esi 1 +
test al al +
jnz loc_46E5FF  +
mov esi edi +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4942C7 +
call sub_46D110  +
mov eax esi +
sub eax ebx +
cmp [esp+3Ch+var_24] eax +
mov eax 0 +
cmovnz esi eax +
jmp loc_46E646  +
lea edx [edi+1] +
movsx ebp byte ptr [edi+1] +
lea eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_18] 0 +
call sub_46DD00  +
mov edx 1 +
mov edi eax +
lea eax [esp+3Ch+var_18] +
call sub_46D0A0  +
mov eax [esp+3Ch+var_14] +
mov edx edi +
mov byte ptr [eax] 0 +
mov eax [esp+3Ch+var_28] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_46D7B0  +
mov edi eax +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_46E8B3  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_46E8B3  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
call sub_46DD00  +
mov edi eax +
jmp loc_46E8B3  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_0 +
call sub_46D110  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_46E646  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThisThis +
call sub_46D110  +
mov eax [esp+3Ch+var_24] +
lea esi [ebx+eax+3] +
jmp loc_46E646  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_1 +
call sub_46D110  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_46E646  +
mov edx 0FFFFFFFFh +
jmp loc_46E81D  +
mov eax [esp+3Ch+var_28] +
mov edx offset aInit +
call sub_46D110  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_46E646  +
lea esi [edi+1] +
jmp loc_46E8CB  +
***
push edi  +
mov edi 1 +
push esi  +
mov esi edi +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+48h+var_3C] ecx +
jmp loc_46EA54  +
movzx eax byte ptr [eax] +
cmp al 4Dh +
mov ecx eax +
jz loc_46EC42  +
sub ecx 46h +
cmp cl 11h +
ja loc_46EA30  +
mov edx 1 +
shl edx cl +
and edx 39001h +
jnz loc_46EAD0  +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jz loc_46EC03  +
test esi esi +
jz loc_46EA51  +
mov edx offset unk_494720 +
mov eax ebp +
call sub_46D110  +
add esi 1 +
mov ecx [esp+48h+var_3C] +
mov edx ebx +
mov eax ebp +
call sub_46E530  +
test eax eax +
mov ebx eax +
jnz loc_46EA08  +
cmp [esp+48h+var_3C] 1 +
jbe loc_46EA75  +
xor edx edx +
jmp loc_46EC10  +
xor ebx ebx +
mov eax [ebp+4] +
xor edi edi +
mov edx [ebp+0] +
mov esi eax +
sub esi edx +
cmp edx eax +
mov edx ebx +
mov eax ebp +
cmovz esi edi +
call sub_46DD00  +
mov ebx [ebp+4] +
mov edx [ebp+0] +
mov ecx ebx +
sub ecx edx +
cmp edx ebx +
cmovz ecx edi +
cmp esi ecx +
js loc_46ECC0  +
mov edx eax +
mov eax [esp+48h+var_3C] +
test eax eax +
jnz loc_46EC10  +
test edx edx +
jz loc_46EA6E  +
cmp byte ptr [edx] 0 +
jnz loc_46EA6E  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Dh +
jnz loc_46EADB  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
cmp al 56h +
jz loc_46EC20  +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
mov [esp+48h+var_30] 0 +
mov edx ebx +
xor edi edi +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
call sub_46DC60  +
mov edx [ebp+4] +
mov ecx [ebp+0] +
mov ebx edx +
sub ebx ecx +
cmp ecx edx +
mov edx eax +
mov eax ebp +
cmovz ebx edi +
call sub_46D150  +
mov edx eax +
mov eax ebp +
call sub_46D1E0  +
mov ecx [ebp+0] +
mov [esp+48h+var_38] eax +
mov eax [ebp+4] +
mov edx eax +
sub edx ecx +
cmp ecx eax +
cmovnz edi edx +
cmp ebx edi +
js loc_46EC78  +
mov edx offset asc_4942C5 +
mov eax ebp +
call sub_46D110  +
mov edx [esp+48h+var_38] +
mov eax ebp +
call sub_46E250  +
mov edx offset asc_4942C7 +
mov ebx eax +
mov eax ebp +
call sub_46D110  +
mov edx [esp+48h+var_24] +
mov ecx [esp+48h+var_20] +
cmp edx ecx +
jz loc_46EB99  +
sub ecx edx +
jz loc_46EB99  +
mov eax ebp +
call sub_46D330  +
mov edx [esp+48h+var_24] +
test edx edx +
jz loc_46EBBD  +
mov [esp+48h+var_48] edx +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
test ebx ebx +
jnz loc_46EBE7  +
cmp [esp+48h+var_29] 0 +
jz loc_46EBE7  +
mov ecx [ebp+4] +
xor eax eax +
mov edx [ebp+0] +
mov ebx ecx +
sub ebx edx +
cmp edx ecx +
cmovnz eax ebx +
mov ebx [esp+48h+var_30] +
cmp [esp+48h+var_34] eax +
js loc_46ECA4  +
test ebx ebx +
jz loc_46EA67  +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_490F00[edx+edx] 4 +
jnz loc_46EA41  +
cmp [esp+48h+var_3C] 1 +
mov edx ebx +
jbe loc_46ECB0  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
mov edx [ebp+4] +
cmp eax edx +
jz loc_46ECD0  +
sub edx eax +
mov [esp+48h+var_34] edx +
setnz [esp+48h+var_29]  +
mov [esp+48h+var_30] ebx +
jmp loc_46EAF8  +
lea edi [ebx+1] +
mov [esp+48h+var_38] edi +
mov ecx edi +
xor edi edi +
movzx edx byte ptr [ecx] +
cmp dl 4Fh +
jz loc_46EC70  +
jg loc_46EC82  +
cmp dl 4Eh +
jnz loc_46ECA0  +
cmp byte ptr [ecx+1] 67h +
jnz loc_46ECA0  +
add ecx 2 +
movzx edx byte ptr [ecx] +
add edi 2 +
cmp dl 4Fh +
jnz loc_46EC55  +
add ecx 1 +
add edi 1 +
jmp loc_46EC4D  +
add ecx ebx +
mov [ebp+4] ecx +
jmp loc_46EB59  +
sub edx 78h +
cmp dl 1 +
ja loc_46ECA0  +
mov edx 1 +
mov ecx [esp+48h+var_38] +
add ecx edi +
movzx ecx byte ptr [ecx+edx] +
jmp loc_46EA15  +
xor edx edx +
jmp loc_46EC8F  +
add edx [esp+48h+var_34] +
mov [ebp+4] edx +
jmp loc_46EBE7  +
cmp al 5Ah +
jnz loc_46EA77  +
lea eax [ebx+1] +
jmp loc_46EAA8  +
add edx esi +
mov [ebp+4] edx +
jmp loc_46EAA8  +
mov [esp+48h+var_30] ebx +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
jmp loc_46EAF8  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
test edx edx +
jz loc_46ED91  +
cmp byte ptr [edx] 0 +
jz loc_46ED91  +
mov edi offset a_d +
mov ecx 2 +
mov esi edx +
cmps   +
jnz loc_46ED91  +
mov [esp+24h+var_8] 0 +
mov edi offset a_dmain +
mov ecx 7 +
mov [esp+24h+var_C] 0 +
mov esi edx +
mov [esp+24h+var_10] 0 +
cmps   +
jz loc_46EDA0  +
lea edi [esp+24h+var_10] +
add edx 2 +
xor ecx ecx +
mov eax edi +
call sub_46E9F0  +
mov edx [esp+24h+var_10] +
test eax eax +
jz loc_46ED85  +
mov ecx [esp+24h+var_C] +
cmp edx ecx +
jz loc_46ED91  +
sub ecx edx +
test ecx ecx +
jle loc_46ED91  +
mov eax edi +
mov edx 1 +
call sub_46D0A0  +
mov eax [esp+24h+var_C] +
mov byte ptr [eax] 0 +
mov eax [esp+24h+var_10] +
add esp 24h +
pop esi  +
pop edi  +
retn   +
test edx edx +
jz loc_46ED5A  +
mov [esp+24h+var_24] edx +
call free  +
add esp 24h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
lea edi [esp+24h+var_10] +
mov edx offset aDMain +
mov eax edi +
call sub_46D110  +
mov edx [esp+24h+var_10] +
mov ecx [esp+24h+var_C] +
jmp loc_46ED5E  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_46EDE0  +
cmp eax 3 +
jz loc_46EDE0  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_46FAE0  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_4738AC 2 +
mov eax [esp+18h+arg_4] +
jz loc_46EE2B  +
mov dword_4738AC 2 +
cmp eax 2 +
jz loc_46EE41  +
cmp eax 1 +
jz loc_46EE70  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_49C030 +
cmp ebx offset unk_49C030 +
jz loc_46EE35  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_46EE58  +
call eax  +
add ebx 4 +
cmp ebx offset unk_49C030 +
jnz loc_46EE50  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_46FAE0  +
jmp loc_46EE35  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_49A860 +
mov [esp+28h+var_28] eax +
call sub_46EEB0  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_46EF70  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_49A860 +
mov [esp+28h+var_28] eax +
call sub_46EEB0  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_49A85C +
mov [esp+28h+var_28] eax +
call sub_46EEB0  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_46EEC0  +
mov ds:dword_49A860 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_46EEC0  +
mov [esp+28h+var_28] 8 +
mov ds:dword_49A85C eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_46EED0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_46F008  +
cmp eax 0C000008Dh +
jnb loc_46F070  +
cmp eax 0C0000005h +
jnz loc_46F077  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_46F0A6  +
test eax eax +
jz loc_46F01D  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_46F05D  +
cmp eax 0C0000094h +
jz loc_46F031  +
cmp eax 0C0000096h +
jz loc_46F07E  +
cmp eax 0C0000093h +
jz loc_46F070  +
mov eax ds:dword_49A4B4 +
test eax eax +
jz loc_46F062  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_46F0D6  +
test eax eax +
jz loc_46F01D  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_46F033  +
cmp eax 0C000001Dh +
jnz loc_46F01D  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_46F0C0  +
test eax eax +
jz loc_46F01D  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_46F05D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_46F05D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_46F05D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_46F05D  +
call sub_46F740  +
jmp loc_46F05D  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_49A4B8 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_46F151  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_46F157  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_49A4B8 eax +
jmp loc_471590  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_46F18D  +
mov edx ds:off_494850[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_46F230  +
***
push edi  +
mov eax ds:dword_49A4BC +
retn   +
***
call eax  +
mov eax off_4738A8 +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_4738A8 edx +
test eax eax +
jnz loc_46F760  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_4721D0 +
cmp ebx 0FFFFFFFFh +
jz loc_46F7B3  +
test ebx ebx +
jz loc_46F7A2  +
call ds:dword_4721D0[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_46F793  +
mov [esp+18h+var_18] offset dword_46F750 +
call sub_46EF90  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_46F7B9  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_4721D0[eax*4] +
test edx edx +
jnz loc_46F7B7  +
jmp loc_46F78F  +
***
mov eax ds:dword_49A4C8 +
test eax eax +
jz loc_46F7E0  +
retn   +
mov ds:dword_49A4C8 1 +
jmp sub_46F780  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_4738BC +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_46F822  +
not eax  +
mov dword_4738C0 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_46F890  +
mov eax esi +
not eax  +
mov dword_4738BC esi +
mov dword_4738C0 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_46F87C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_49A828 +
call ds:EnterCriticalSection  +
mov edi ds:dword_49A820 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_46F989  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_46F982  +
test ebx ebx +
jz loc_46F982  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_46F960  +
mov [esp+28h+var_28] offset unk_49A828 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_46F9B0  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_49A824 +
test eax eax +
jnz loc_46F9D0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_46FA2C  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_49A828 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_49A820 +
mov ds:dword_49A820 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_49A828 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_46F9C3  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_49A824 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_46FA60  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_49A828 +
call ds:EnterCriticalSection  +
mov edx ds:dword_49A820 +
sub esp 4 +
test edx edx +
jz loc_46FA91  +
mov eax [edx] +
cmp eax ebx +
jnz loc_46FA8A  +
jmp loc_46FAC8  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_46FAA8  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_46FA82  +
mov dword ptr [esp] offset unk_49A828 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_49A828 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_46FAA1  +
***
mov eax [edx+8] +
mov ds:dword_49A820 eax +
mov eax edx +
jmp loc_46FAAE  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_46FB34  +
jb loc_46FB05  +
cmp eax 3 +
jnz loc_46FAFE  +
mov eax ds:dword_49A824 +
test eax eax +
jnz loc_46FB62  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_49A824 +
test eax eax +
jnz loc_46FB70  +
mov eax ds:dword_49A824 +
cmp eax 1 +
jnz loc_46FAFE  +
mov ds:dword_49A824 0 +
mov [esp+18h+var_18] offset unk_49A828 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_46FAFE  +
mov eax ds:dword_49A824 +
test eax eax +
jz loc_46FB50  +
mov ds:dword_49A824 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_49A828 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_46FB3D  +
call sub_46F930  +
jmp loc_46FAFE  +
call sub_46F930  +
jmp loc_46FB0E  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_46FB90  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_46FBB0  +
xor eax eax +
retn   +
***
jmp sub_46FB80  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_46FBF8  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_46FBEE  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_46FBFA  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_46FBE0  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_46FC25  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_46FC30  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_46FB80  +
test eax eax +
jz loc_46FC25  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_46FC6A  +
jmp loc_46FC25  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_46FC90  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_46FC60  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_46FCB8  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_46FB80  +
test eax eax +
jz loc_46FCB1  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_46FBC0  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_46FD02  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_46FB80  +
test eax eax +
jz loc_46FCFE  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_46FD38  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_46FB80  +
test eax eax +
jz loc_46FD33  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_46FD33  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_46FD73  +
test ebx ebx +
jz loc_46FD84  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_46FD66  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_46FDA0  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_46FB80  +
test eax eax +
jz loc_46FD9B  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_46FDD0  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_46FB80  +
test eax eax +
jz loc_46FE06  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_46FBC0  +
test eax eax +
jz loc_46FE10  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_46FE06  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_46FE40  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_46FB80  +
test eax eax +
jz loc_46FE37  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_46FE37  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_46FBC0  +
test eax eax +
jz loc_46FE37  +
add esi 400000h +
mov edx esi +
jnz loc_46FE86  +
jmp loc_46FE37  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_46FE94  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_46FEB0  +
test ebx ebx +
jg loc_46FE80  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_46FEE2  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_46FECD  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov esi [esp+18h+arg_C] +
mov ebp [esp+18h+arg_8] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
mov edx ebx +
mov edi esi +
mov [esp+18h+var_18] 0 +
js loc_46FFA0  +
test edi edi +
mov ecx ebp +
mov ebx esi +
js loc_46FFBA  +
mov esi edx +
mov edx ebx +
test edx edx +
mov ebp eax +
mov edi ecx +
mov ebx eax +
jnz loc_46FF42  +
cmp ecx esi +
jbe loc_46FF64  +
mov edx esi +
xor esi esi +
div  ecx +
mov ebx eax +
jmp loc_46FF4A  +
cmp edx esi +
jbe loc_46FF83  +
xor esi esi +
xor ebx ebx +
mov ecx [esp+18h+var_18] +
mov eax ebx +
mov edx esi +
test ecx ecx +
jz loc_46FF5C  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_46FF73  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov esi eax +
mov eax ebx +
div  ecx +
mov ebx eax +
jmp loc_46FF4A  +
bsr ebx edx +
xor ebx 1Fh +
jnz loc_46FFD0  +
cmp ecx eax +
jbe loc_46FF93  +
cmp edx esi +
jnb loc_46FF46  +
xor esi esi +
mov ebx 1 +
jmp loc_46FF4A  +
neg eax  +
mov ecx ebp +
adc edx 0 +
mov ebx esi +
neg edx  +
test edi edi +
mov [esp+18h+var_18] 0FFFFFFFFh +
jns loc_46FF26  +
neg ecx  +
adc ebx 0 +
not [esp+18h+var_18]  +
neg ebx  +
jmp loc_46FF26  +
mov ecx ebx +
mov eax 20h +
sub eax ebx +
shl edx cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx edi +
shr edx cl +
mov ecx ebx +
mov [esp+18h+var_14] edx +
mov edx [esp+18h+var_10] +
shl edi cl +
or [esp+18h+var_14] edx +
mov ecx eax +
mov edx esi +
shr edx cl +
mov ecx ebx +
shl esi cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx ebp +
shr edx cl +
mov eax edx +
or eax esi +
mov esi [esp+18h+var_10] +
mov edx esi +
div  [esp+18h+var_14] +
mov esi edx +
mov [esp+18h+var_14] eax +
mul  edi +
cmp esi edx +
jb loc_470040  +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_47002F  +
cmp esi edx +
jz loc_470040  +
mov ebx [esp+18h+var_14] +
xor esi esi +
jmp loc_46FF4A  +
mov ebx [esp+18h+var_14] +
xor esi esi +
sub ebx 1 +
jmp loc_46FF4A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
test ebx ebx +
mov ebp ebx +
mov edx eax +
mov [esp+1Ch+var_1C] 0 +
js loc_470120  +
test edx edx +
mov ecx esi +
mov ebx eax +
js loc_470113  +
mov edx ebx +
mov eax edi +
test edx edx +
mov esi ebp +
mov [esp+1Ch+var_18] ecx +
mov ebx edi +
mov [esp+1Ch+var_14] ebp +
jnz loc_4700B0  +
cmp ecx ebp +
jbe loc_4700F6  +
mov edx ebp +
div  ecx +
mov esi edx +
mov eax esi +
xor edx edx +
jmp loc_4700B8  +
cmp edx ebp +
jbe loc_4700D0  +
mov eax edi +
mov edx ebp +
mov ecx [esp+1Ch+var_1C] +
test ecx ecx +
jz loc_4700C6  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
bsr edi edx +
mov [esp+1Ch+var_10] edi +
xor [esp+1Ch+var_10] 1Fh +
jnz loc_470133  +
cmp ecx eax +
jbe loc_4701C0  +
cmp edx ebp +
jb loc_4701C0  +
mov eax ebx +
mov edx [esp+1Ch+var_14] +
jmp loc_4700B8  +
test ecx ecx +
jnz loc_470105  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov eax ebx +
div  ecx +
mov esi edx +
jmp loc_4700A4  +
neg ecx  +
adc ebx 0 +
neg ebx  +
jmp loc_470086  +
neg edi  +
adc ebp 0 +
neg ebp  +
mov [esp+1Ch+var_1C] 0FFFFFFFFh +
jmp loc_47007A  +
mov ebp [esp+1Ch+var_10] +
mov edi 20h +
sub edi ebp +
mov ecx ebp +
mov ebp [esp+1Ch+var_18] +
shl edx cl +
mov ecx edi +
mov ebx ebp +
shr ebx cl +
mov [esp+1Ch+var_18] ebx +
mov ebx ebp +
mov ebp [esp+1Ch+var_10] +
or [esp+1Ch+var_18] edx +
mov edx esi +
mov ecx ebp +
shl ebx cl +
mov ecx edi +
shr edx cl +
mov ecx ebp +
shl esi cl +
mov ecx edi +
mov [esp+1Ch+var_14] ebx +
mov ebx edx +
mov edx eax +
shr edx cl +
mov ecx ebp +
or edx esi +
shl eax cl +
mov ebp eax +
mov eax edx +
mov edx ebx +
div  [esp+1Ch+var_18] +
mov ebx edx +
mul  [esp+1Ch+var_14] +
cmp ebx edx +
mov esi eax +
mov ecx edx +
jb loc_4701D4  +
cmp ebp eax +
jb loc_4701D0  +
mov eax ebp +
mov ebp [esp+1Ch+var_10] +
sub eax esi +
sbb ebx ecx +
mov ecx ebp +
shr eax cl +
mov ecx edi +
mov esi eax +
mov eax ebx +
shl eax cl +
mov ecx ebp +
or esi eax +
shr ebx cl +
mov eax esi +
mov edx ebx +
jmp loc_4700B8  +
mov eax esi +
sub ebx ecx +
sbb eax edx +
mov [esp+1Ch+var_14] eax +
jmp loc_4700EE  +
cmp ebx edx +
jnz loc_470196  +
mov ecx edx +
mov esi eax +
sub esi [esp+1Ch+var_14] +
sbb ecx [esp+1Ch+var_18] +
jmp loc_470196  +
***
push esi  +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_470390  +
cmp ecx ebp +
ja loc_4703C2  +
test ecx ecx +
mov ebx ecx +
jnz loc_470377  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_4703B6  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_4703D2  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_470430  +
cmp esi ebp +
jb loc_470430  +
xor eax eax +
jmp loc_470385  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_470440  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_470423  +
cmp esi edx +
jz loc_470440  +
mov eax edi +
xor edx edx +
jmp loc_470385  +
mov eax 1 +
jmp loc_470385  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 23Ch +
mov ebx [ebp+arg_4] +
mov [esp+248h+var_248] 4000h +
mov esi [ebp+arg_0] +
call malloc  +
test ebx ebx +
mov edi eax +
jz loc_470560  +
cmp word ptr [ebx] 0 +
mov eax offset aUnknown +
cmovz ebx eax +
test esi esi +
jz loc_470553  +
cmp word ptr [esi] 0 +
mov eax offset a? +
cmovz esi eax +
lea edx [ebp+var_222] +
mov [esp+248h+var_244] edx +
mov [ebp+var_22C] edx +
mov [esp+248h+var_240] 104h +
mov [esp+248h+var_248] 0 +
call ds:GetModuleFileNameW  +
mov edx [ebp+var_22C] +
sub esp 0Ch +
test eax eax +
jz loc_470538  +
mov eax [ebp+arg_8] +
mov [esp+248h+var_230] esi +
mov [esp+248h+var_238] ebx +
mov [esp+248h+var_23C] edx +
mov [esp+248h+var_234] eax +
mov [esp+248h+var_240] offset aAssertionFaile +
mov [esp+248h+var_244] 1FFFh +
mov [esp+248h+var_248] edi +
call _snwprintf  +
mov eax ds:dword_49A4A4 +
test eax eax +
jz loc_470587  +
mov [esp+248h+var_23C] 12012h +
mov [esp+248h+var_240] offset aMingwRuntimeAs +
mov [esp+248h+var_244] edi +
mov [esp+248h+var_248] 0 +
call ds:MessageBoxW  +
sub esp 10h +
cmp eax 3 +
jz loc_47056F  +
cmp eax 5 +
jnz loc_47056A  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+248h+var_248] edx +
mov [esp+248h+var_244] offset aUnknown +
call wcscpy  +
mov edx [ebp+var_22C] +
jmp loc_4704CA  +
mov esi offset a? +
jmp loc_470498  +
mov ebx offset aUnknown +
jmp loc_470484  +
call abort  +
mov [esp+248h+var_248] 16h +
call raise  +
mov [esp+248h+var_248] 3 +
call _exit  +
mov eax ds:_iob +
mov [esp+248h+var_240] edi +
mov [esp+248h+var_244] offset aWs +
add eax 40h +
mov [esp+248h+var_248] eax +
call fwprintf  +
call abort  +
nop   +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+274h+var_244] +
mov eax [esp+274h+var_23C] +
mov edi [esp+274h+var_240] +
mov [esp+274h+var_274] ebp +
mov [esp+274h+var_268] eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+274h+var_274] eax +
call malloc  +
mov [esp+274h+var_274] edi +
mov esi eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+274h+var_274] eax +
call malloc  +
movzx ecx byte ptr [ebp+0] +
test cl cl +
jz loc_470672  +
xor ebx ebx +
xor edx edx +
lea esi [esi+0] +
add edx 1 +
mov [esi+ebx*2] cx +
movzx ecx byte ptr [ebp+edx+0] +
mov ebx edx +
test cl cl +
jnz loc_470600  +
add edx edx +
xor ebx ebx +
mov [esi+edx] bx +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_470676  +
xor ebx ebx +
xor edx edx +
add edx 1 +
mov [eax+ebx*2] cx +
movzx ecx byte ptr [edi+edx] +
mov ebx edx +
test cl cl +
jnz loc_470625  +
add edx edx +
mov edi [esp+274h+var_268] +
xor ecx ecx +
mov [eax+edx] cx +
mov [esp+274h+var_270] eax +
mov [esp+274h+var_274] esi +
mov [esp+274h+var_26C] edi +
mov [esp+274h+var_268] eax +
call sub_470450  +
mov [esp+274h+var_274] esi +
call free  +
mov eax [esp+274h+var_268] +
mov [esp+274h+var_244] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
xor edx edx +
jmp loc_470614  +
xor edx edx +
jmp loc_470638  +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call fgetpos  +
test eax eax +
jnz loc_4706A7  +
mov eax [esp+2Ch+var_14] +
mov edx [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4706A3  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov edx eax +
and edx 3 +
cmp edx 2 +
jz loc_4706F0  +
xor eax eax +
mov [ebp+0] ebx +
mov dword ptr [ebp+4] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax 108h +
jz loc_4706DB  +
mov edx [ebp+0] +
sub edx ebx +
mov edi edx +
sar edi 1Fh +
cmp edi 0 +
jl loc_4706DB  +
jle loc_470750  +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] edx +
call _fileno  +
mov edx [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call _write  +
mov edx [esp+1Ch+var_10] +
mov ebx eax +
xor edx eax +
sar ebx 1Fh +
mov ecx ebx +
xor ecx edi +
or ecx edx +
jnz loc_470757  +
mov eax [ebp+0Ch] +
test al 80h +
jz loc_470748  +
and eax 0FFFFFFFDh +
mov [ebp+0Ch] eax +
mov ebx [ebp+8] +
xor eax eax +
jmp loc_4706DD  +
cmp edx 0 +
jbe loc_4706DB  +
jmp loc_470708  +
or dword ptr [ebp+0Ch] 20h +
mov eax 0FFFFFFFFh +
mov ebx [ebp+8] +
jmp loc_4706DD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
cmp eax 1 +
jz loc_4707B5  +
cmp eax 2 +
jz loc_4707D3  +
test eax eax +
jnz loc_470800  +
mov [esp+2Ch+var_14] esi +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_10] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fsetpos  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fgetpos  +
test eax eax +
jnz loc_470812  +
add [esp+2Ch+var_14] esi +
adc [esp+2Ch+var_10] edi +
jmp loc_4707A1  +
mov [esp+2Ch+var_2C] ebx +
lea ebp [esp+2Ch+var_14] +
call fflush  +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_2C] eax +
call _filelengthi64  +
add eax esi +
adc edx edi +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] edx +
jmp loc_4707A1  +
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_4707AD  +
mov eax 0FFFFFFFFh +
jmp loc_4707AD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
call _errno  +
mov dword ptr [eax] 0 +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+4] +
test eax eax +
js loc_470990  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
test edx edx +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_18] edx +
js loc_4709D1  +
mov edx [ebx+0Ch] +
test edx 108h +
jz loc_470970  +
mov ecx [ebx] +
mov eax [ebx+8] +
mov esi ecx +
sub esi eax +
test dl 3 +
mov [esp+2Ch+var_10] esi +
jnz loc_470917  +
test dl 80h +
jz loc_470AA2  +
mov esi [esp+2Ch+var_10] +
mov ebp [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_1C] +
mov eax ebp +
or eax edi +
jz loc_4709A0  +
and edx 1 +
jz loc_4709B0  +
mov edi [ebx+4] +
test edi edi +
jz loc_4709C4  +
mov eax [esp+2Ch+var_14] +
add edi [esp+2Ch+var_10] +
mov ecx eax +
and eax 1Fh +
lea eax [eax+eax*4] +
shl eax 3 +
mov edx eax +
mov ebp eax +
mov eax ds:__pioinfo +
sar ecx 5 +
mov eax [eax+ecx*4] +
cmp byte ptr [eax+edx+4] 0 +
js loc_4709E0  +
mov ecx edi +
xor ebx ebx +
mov eax esi +
xor edx edx +
sub [esp+2Ch+var_1C] ecx +
sbb [esp+2Ch+var_18] ebx +
jmp loc_4709B4  +
mov esi [esp+2Ch+var_14] +
mov edi esi +
and esi 1Fh +
sar edi 5 +
mov ebp edi +
lea edi [esi+esi*4] +
mov esi ds:__pioinfo +
shl edi 3 +
add edi [esi+ebp*4] +
mov esi [esp+2Ch+var_10] +
cmp byte ptr [edi+4] 0 +
jns loc_4708AF  +
cmp ecx eax +
jbe loc_4708AB  +
mov ebp [esp+2Ch+var_14] +
mov edi ecx +
xor ecx ecx +
cmp byte ptr [eax] 0Ah +
setz cl  +
add eax 1 +
add esi ecx +
cmp eax edi +
jnz loc_470950  +
mov [esp+2Ch+var_14] ebp +
jmp loc_4708AF  +
mov eax [ebx+4] +
mov edi [esp+2Ch+var_1C] +
mov ebp [esp+2Ch+var_18] +
cdq   +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edx ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+4] 0 +
jmp loc_47084D  +
add esp 2Ch +
mov eax esi +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
xor edx edx +
add eax [esp+2Ch+var_1C] +
adc edx [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor edx edx +
xor ecx ecx +
xor ebx ebx +
jmp loc_47090A  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_470984  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 2 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] ecx +
call _lseeki64  +
mov ecx [esp+2Ch+var_10] +
xor edx [esp+2Ch+var_18] +
xor eax [esp+2Ch+var_1C] +
or edx eax +
jnz loc_470A45  +
mov eax [ebx+8] +
lea ecx [eax+edi] +
cmp eax ecx +
jnb loc_470A33  +
xor edx edx +
cmp byte ptr [eax] 0Ah +
setz dl  +
add eax 1 +
add edi edx +
cmp eax ecx +
jnz loc_470A22  +
test byte ptr [ebx+0Dh] 20h +
jz loc_470902  +
add edi 1 +
jmp loc_470902  +
mov eax [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
cmp edi 200h +
mov ecx [esp+2Ch+var_10] +
ja loc_470A8B  +
mov eax [ebx+0Ch] +
mov edi 200h +
and eax 408h +
cmp eax 8 +
jz loc_470A8E  +
mov edi [ebx+18h] +
mov eax ds:__pioinfo +
mov eax [eax+ecx*4] +
test byte ptr [eax+ebp+4] 4 +
jnz loc_470A3D  +
jmp loc_470902  +
call _errno  +
mov edx 0FFFFFFFFh +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_470984  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
mov ebp [esp+3Ch] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470B62  +
cmp ebp 2 +
ja loc_470B62  +
and dword ptr [ebx+0Ch] 0FFFFFFEFh +
cmp ebp 1 +
jz loc_470B51  +
mov [esp] ebx +
call sub_4706C0  +
mov eax [ebx+0Ch] +
test al 80h +
jnz loc_470B40  +
and eax 409h +
cmp eax 9 +
jz loc_470B48  +
mov [esp] ebx +
call _fileno  +
mov [esp+0Ch] ebp +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] eax +
call _lseeki64  +
and eax edx +
cmp eax 0FFFFFFFFh +
setz al  +
movzx eax al +
neg eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and eax 0FFFFFFFCh +
mov [ebx+0Ch] eax +
jmp loc_470B0D  +
***
mov dword ptr [ebx+18h] 200h +
jmp loc_470B0D  +
***
mov [esp] ebx +
call sub_470820  +
add esi eax +
adc edi edx +
xor bp bp +
jmp loc_470AF4  +
***
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_470B36  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4 +
mov esi [esp+10h] +
call __doserrno  +
mov [eax] esi +
jmp loc_470BA1  +
add ebx 1 +
cmp ds:dword_494A64[ebx*8] 0FFFFFFFFh +
jz loc_470BC0  +
cmp ds:dword_494A60[ebx*8] esi +
jnz loc_470B94  +
call _errno  +
mov edx ds:dword_494A64[ebx*8] +
mov [eax] edx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
lea eax [esi-13h] +
cmp eax 11h +
jbe loc_470BF5  +
sub esi 0BCh +
cmp esi 0Eh +
jbe loc_470BE4  +
call _errno  +
mov dword ptr [eax] 16h +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 8 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Dh +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
lea edi [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
mov [esp+1Ch+var_14] esi +
call _vsnprintf  +
test eax eax +
mov ebx eax +
js loc_470C94  +
lea ebp [eax+1] +
mov [esp+1Ch+var_1C] ebp +
call malloc  +
mov edx [esp+1Ch+arg_0] +
test eax eax +
mov [edx] eax +
jz loc_470CA0  +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call _vsnprintf  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov byte ptr [eax+ebx] 0 +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 0FFFFFFFFh +
jmp loc_470C94  +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_470CD8  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_470CCB  +
jmp loc_470CD8  +
cmp byte ptr [edx] 0 +
jz loc_470CD6  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_470CC6  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470E9E  +
cmp byte ptr [ebx] 0 +
jz loc_470E68  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_470E80  +
test al 10h +
jz loc_470E68  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_470D54  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_470E8F  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_470DE3  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_470DE3  +
cmp al 5Ch +
jz loc_470DE3  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_470DE5  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_470E60  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_470E60  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_470E60  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_470FB2  +
mov eax [ebx+228h] +
test eax eax +
js loc_470F9D  +
jz loc_470F40  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_470F70  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_470F9D  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_470F93  +
mov dword ptr [ebx+228h] 1 +
jmp loc_470F09  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_470FA5  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_470F7B  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_470F33  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47100F  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_470FFF  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_471009  +
***
jmp sub_471030  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_471073  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_47105A  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_47106E  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4710A2  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_47109D  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47114D  +
cmp esi 0FFFFFFFFh +
jl loc_471140  +
jz loc_471110  +
mov [esp] ebx +
call sub_471030  +
nop   +
lea esi [esi+0] +
jmp loc_4710FE  +
mov [esp] ebx +
call sub_470EB0  +
test eax eax +
jz loc_471137  +
cmp esi [ebx+228h] +
jg loc_4710F2  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_471123  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_471137  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_471137  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
test esi esi +
jz loc_4711A5  +
lea eax [ebp+var_C4] +
mov [esp+0E8h+var_E8] eax +
call ds:GetTimeZoneInformation  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_471220  +
mov edx [ebp+var_C4] +
cmp eax 2 +
setz al  +
movzx eax al +
mov [esi+4] eax +
mov [esi] edx +
test ebx ebx +
jz loc_471213  +
lea eax [ebp+var_D0] +
mov [esp+0E8h+var_E8] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_D0] +
mov edi [ebp+var_CC] +
sub esp 4 +
add esi 2AC18000h +
adc edi 0FE624E21h +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_470340  +
mov [ebx] eax +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_4701F0  +
imul eax eax +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
jmp loc_4711A5  +
***
sub esp 24h +
mov eax [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
lea eax [esp+24h+var_C] +
mov [esp+24h+var_24] eax +
call sub_471160  +
test eax eax +
mov ecx eax +
jnz loc_471290  +
mov eax [esp+24h+var_C] +
mov edx 10624DD3h +
mov esi [esp+24h+var_8] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFFFh +
jmp loc_471281  +
***
push esi  +
push ebx  +
sub esp 24h +
mov eax [esp+34h] +
mov ebx [esp+30h] +
mov [esp+4] eax +
lea eax [esp+18h] +
mov [esp] eax +
call sub_471160  +
test eax eax +
mov ecx eax +
jnz loc_4712F0  +
mov eax [esp+18h] +
mov edx 10624DD3h +
mov esi [esp+1Ch] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx 0FFFFFFFFh +
jmp loc_4712E1  +
***
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_49A844 +
retn   +
***
jmp ds:__setusermatherr  +
***
push edi  +
push esi  +
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_46EF90  +
leave   +
retn   +
***
