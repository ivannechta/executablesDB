jmp loc_1001275  +
or eax [ecx] +
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_10017F0  +
cmp [esi] ax +
jz loc_10017EC  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_10017E2  +
test edx edx +
jnz loc_10017F5  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_1001806  +
test eax eax +
jl loc_1001803  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_100182A  +
mov eax [ebp+arg_0] +
jb loc_1001821  +
cmp eax 0FFFFFFFFh +
ja loc_100182A  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1001835  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 18h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_18] +
push eax  +
push 8  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_10018D0  +
cmp word ptr [edx] 0 +
jnz loc_10018B4  +
mov [ebp+arg_14] 0Eh +
jmp loc_10018D7  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10018B9  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_14] eax +
jmp loc_10018D7  +
mov [ebp+arg_14] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_10018ED  +
cmp word ptr [edx] 0 +
jnz loc_10018EF  +
mov edx offset aNull_0 +
jmp loc_10018EF  +
mov edx ebx +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_1001919  +
cmp word ptr [edi] 0 +
jnz loc_1001900  +
push 0Eh  +
jmp loc_100191B  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1001905  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_100191C  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_1001931  +
cmp word ptr [edi] 0 +
jnz loc_100192D  +
mov eax offset aNull_0 +
jmp loc_1001933  +
mov eax edi +
jmp loc_1001933  +
mov eax ebx +
push 0  +
push [ebp+arg_14]  +
push edx  +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_100198E  +
cmp word ptr [edx] 0 +
jnz loc_1001973  +
push 0Eh  +
jmp loc_1001990  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1001979  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_1001991  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_10019A2  +
cmp word ptr [edx] 0 +
jnz loc_10019A7  +
mov edx offset aNull_0 +
jmp loc_10019A7  +
mov edx offset aNull +
push 0  +
push 4  +
lea ecx [ebp+arg_14] +
push ecx  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
mov [eax+10h] ecx +
mov [eax] ecx +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ah] dx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor edx edx +
push ebx  +
mov [eax] edx +
mov eax [ebp+8] +
sub eax 4 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi esi +
jz loc_1001A53  +
dec eax  +
jz loc_1001A4A  +
push 57h  +
pop eax  +
jmp loc_1001AC1  +
xor ebx ebx +
xor eax eax +
mov [ebp+0Fh] al +
jmp loc_1001A79  +
push dword ptr [ebp+14h]  +
call ds:GetTraceLoggerHandle  +
mov ebx eax +
push edx  +
push ebx  +
mov [ebp-4] edx +
call ds:GetTraceEnableLevel  +
push dword ptr [ebp-4]  +
mov [ebp+0Fh] al +
push ebx  +
call ds:GetTraceEnableFlags  +
mov edx [ebp-4] +
movzx ecx word ptr [esi+1Ah] +
test cl 1 +
jz loc_1001AA2  +
cmp dword ptr [esi+10h] 0 +
jz loc_1001AA2  +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov [ecx+4] edx +
movzx ecx byte ptr [ebp+0Fh] +
mov edx [esi+10h] +
mov [edx+0Ch] ecx +
mov ecx [esi+10h] +
mov [ecx+8] eax +
jmp loc_1001ABF  +
test cl 2 +
jz loc_1001AB0  +
mov esi [esi+10h] +
test esi esi +
jz loc_1001AB0  +
mov edi esi +
mov cl [ebp+0Fh] +
mov [edi+10h] ebx +
mov [edi+14h] edx +
mov [edi+19h] cl +
mov [edi+1Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi off_1008000 +
push edi  +
mov edi offset dword_1008D40 +
jmp loc_1001B0C  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [esi+8] +
push ecx  +
push 0  +
push 0  +
lea ecx [ebp+var_8] +
push ecx  +
push 1  +
push eax  +
push esi  +
push offset loc_1001A24  +
add edi 4 +
mov [ebp+var_8] eax +
call ds:RegisterTraceGuidsW  +
mov esi [esi] +
test esi esi +
jnz loc_1001AE3  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi off_1008000 +
push edi  +
mov edi offset off_1008000 +
cmp esi edi +
jz loc_1001B58  +
jmp loc_1001B4E  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
mov edx eax +
or edx ecx +
jz loc_1001B4C  +
push ecx  +
push eax  +
call ds:UnregisterTraceGuids  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
mov esi [esi] +
test esi esi +
jnz loc_1001B30  +
mov off_1008000 edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
cmp [ebp+arg_0] edi +
mov [ebp+var_1] 0 +
jle loc_1001D8B  +
mov ebx ds:_wcsicmp +
mov eax [ebp+arg_4] +
mov eax [eax+edi*4] +
movzx ecx word ptr [eax] +
cmp cx 2Dh +
jz loc_1001B98  +
cmp cx 2Fh +
jnz loc_1001D8B  +
lea esi [eax+2] +
cmp word ptr [esi] 0 +
jz loc_1001D8B  +
push offset word_1001388  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001BEA  +
inc edi  +
cmp edi [ebp+arg_0] +
jge loc_1001D46  +
mov eax [ebp+arg_4] +
push dword ptr [eax+edi*4]  +
call ds:_wtol  +
pop ecx  +
mov dwProcessId eax +
call ds:GetCurrentProcessId  +
cmp eax dwProcessId +
jz loc_1001D8B  +
mov [ebp+var_1] 1 +
jmp loc_1001D46  +
push offset asc_1001384  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001C25  +
inc edi  +
cmp edi [ebp+arg_0] +
jge loc_1001D46  +
mov eax [ebp+arg_4] +
push dword ptr [eax+edi*4]  +
call ds:_wtol  +
pop ecx  +
mov dword_1008914 eax +
cmp eax 40h +
jbe loc_1001D46  +
or eax 0FFFFFFFFh +
jmp loc_1001D90  +
push offset aTp  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001C61  +
inc edi  +
cmp edi [ebp+arg_0] +
jge loc_1001D46  +
mov eax [ebp+arg_4] +
push dword ptr [eax+edi*4]  +
call ds:_wtol  +
pop ecx  +
mov dword_1008008 eax +
test eax eax +
jge loc_1001D46  +
cmp eax 3 +
jge loc_1001C1D  +
jmp loc_1001D46  +
push offset aWait  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001C94  +
inc edi  +
cmp edi [ebp+arg_0] +
jge loc_1001D46  +
mov eax [ebp+arg_4] +
push dword ptr [eax+edi*4]  +
call ds:_wtol  +
pop ecx  +
mov dword_100891C eax +
test eax eax +
jbe loc_1001C1D  +
jmp loc_1001D46  +
push offset aNowatson  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001CAC  +
mov byte_1008918 al +
jmp loc_1001D46  +
push offset aWatson  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001CC6  +
mov byte_1008918 1 +
jmp loc_1001D46  +
push offset aNocleanup  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001CDB  +
mov byte_1008919 al +
jmp loc_1001D46  +
push offset aCleanup  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1001D2A  +
push offset aNoexit  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001CFE  +
mov byte_100800C al +
jmp loc_1001D46  +
push offset aSnap  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001D15  +
mov byte_100891A 1 +
jmp loc_1001D46  +
push offset aEnable  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001D33  +
mov byte_100891B 1 +
mov byte_1008919 1 +
jmp loc_1001D46  +
push offset aUnnamed  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001D8B  +
mov byte_100800D al +
inc edi  +
cmp edi [ebp+arg_0] +
jl loc_1001B7F  +
cmp [ebp+var_1] 0 +
jz loc_1001D8B  +
mov eax dword_100891C +
test eax eax +
jbe loc_1001D68  +
cmp byte_100891A 0 +
jnz loc_1001D8B  +
cmp byte_100891A 0 +
jz loc_1001D7A  +
cmp byte_100891B 0 +
jnz loc_1001D8B  +
test eax eax +
jbe loc_1001D87  +
cmp byte_100891B 0 +
jnz loc_1001D8B  +
xor eax eax +
jmp loc_1001D90  +
mov eax 0C000000Dh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 2 +
jz loc_1001DB3  +
cmp [ebp+arg_0] 4 +
jbe loc_1001DE3  +
cmp [ebp+arg_0] 6 +
ja loc_1001DE3  +
cmp byte_100800C 1 +
jnz loc_1001DE3  +
push esi  +
mov esi offset unk_10089AC +
push esi  +
call ds:RtlAcquireSRWLockExclusive  +
mov eax dword_10086E8 +
test eax eax +
jz loc_1001DDB  +
push 0  +
push eax  +
call ds:NtSetEvent  +
push esi  +
call ds:RtlReleaseSRWLockExclusive  +
pop esi  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push edi  +
mov edi eax +
mov ecx [edi+0Ch] +
cmp ecx 20h +
jbe loc_1001E07  +
or Buffer 2 +
xor al al +
pop edi  +
retn   +
mov eax [edi+8] +
mov edx dword_1008688 +
cmp dword ptr [edx+eax*4] 0 +
jnz loc_1001DFC  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
test ecx ecx +
jz loc_1001E2E  +
lea ecx ds:40h[ecx*4] +
push ecx  +
jmp loc_1001E30  +
push 48h  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov esi eax +
test esi esi +
jnz loc_1001E45  +
xor al al +
jmp loc_1001EB6  +
push 48h  +
push 0  +
push esi  +
call memset  +
mov [esi+4] esi +
mov [esi] esi +
lea eax [esi+30h] +
mov [eax+4] eax +
mov [eax] eax +
lea eax [esi+38h] +
mov [eax+4] eax +
mov [eax] eax +
mov eax [edi+8] +
mov [esi+8] eax +
mov eax [edi+0Ch] +
add esp 0Ch +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1001E8B  +
shl eax 2 +
push eax  +
add edi 10h +
lea eax [esi+40h] +
push edi  +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax dword_1008248 +
mov ecx dword_1008688 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1008248 +
mov [eax+4] esi +
inc dword_100867C  +
mov dword_1008248 esi +
mov eax [esi+8] +
mov [ecx+eax*4] esi +
mov al 1 +
pop esi  +
pop edi  +
retn   +
***
mov eax [esi] +
jmp loc_1001EC9  +
cmp [eax+8] edi +
jz loc_1001EEA  +
mov eax [eax] +
cmp eax esi +
jnz loc_1001EC2  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 18h  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
test eax eax +
jnz loc_1001EF4  +
xor al al +
retn   +
add dword ptr [eax+10h] 1 +
adc dword ptr [eax+14h] 0 +
jmp loc_1001F13  +
and dword ptr [eax+14h] 0 +
mov [eax+4] eax +
mov [eax] eax +
mov [eax+8] edi +
mov dword ptr [eax+10h] 1 +
mov ecx [esi] +
mov [eax] ecx +
mov [eax+4] esi +
mov [ecx+4] eax +
mov [esi] eax +
mov al 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov edx [ecx+8] +
mov eax dword_1008688 +
mov eax [eax+edx*4] +
push edi  +
xor edi edi +
cmp edx edi +
jz loc_1001F46  +
cmp eax edi +
jnz loc_1001F46  +
or Buffer 2 +
xor al al +
jmp loc_1002042  +
mov edx [ecx+4] +
push esi  +
xor esi esi +
inc esi  +
cmp edx edi +
jle loc_100203F  +
cmp edx 2 +
jle loc_1001F9E  +
cmp edx 3 +
jnz loc_100203F  +
add dword_10086B0 esi +
adc dword_10086B4 edi +
mov edx [ecx+0Ch] +
add dword_10086B8 edx +
adc dword_10086BC edi +
cmp [ecx+8] edi +
jz loc_100203F  +
add [eax+20h] esi +
lea esi [eax+38h] +
adc [eax+24h] edi +
mov edx [ecx+0Ch] +
add [eax+28h] edx +
adc [eax+2Ch] edi +
jmp loc_1002037  +
cmp edx esi +
jnz loc_1001FBF  +
add dword_1008690 esi +
adc dword_1008694 edi +
mov edx [ecx+0Ch] +
add dword_1008698 edx +
adc dword_100869C edi +
jmp loc_1001FDA  +
add dword_10086A0 esi +
adc dword_10086A4 edi +
mov edx [ecx+0Ch] +
add dword_10086A8 edx +
adc dword_10086AC edi +
cmp [ecx+8] edi +
jz loc_100203F  +
mov edx [eax+10h] +
mov esi [eax+14h] +
push ebx  +
mov ebx edx +
add ebx 1 +
mov [ebp+var_4] esi +
adc esi edi +
mov [eax+14h] esi +
mov esi [ebp+var_4] +
or edx esi +
mov [eax+10h] ebx +
pop ebx  +
jnz loc_100202B  +
mov edx [eax] +
mov esi [eax+4] +
mov [esi] edx +
mov [edx+4] esi +
mov edx dword_1008258 +
dec dword_100867C  +
mov [eax] edx +
mov dword ptr [eax+4] offset dword_1008258 +
mov [edx+4] eax +
inc dword_1008678  +
mov dword_1008258 eax +
mov edx [ecx+0Ch] +
add [eax+18h] edx +
lea esi [eax+30h] +
adc [eax+1Ch] edi +
mov edi [ecx+0Ch] +
call sub_1001EBE  +
mov al 1 +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
inc dword ptr [esi+28h]  +
mov eax [esi+28h] +
lea ecx [ebp+var_4] +
push ecx  +
push 4  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_100180C  +
test eax eax +
jge loc_100206E  +
xor al al +
leave   +
retn   +
mov eax large fs:18h +
push [ebp+var_4]  +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov dword_1008688 eax +
test eax eax +
jz loc_100206A  +
push [ebp+var_4]  +
push 0  +
push eax  +
call memset  +
mov eax [esi+28h] +
mov dword_100868C eax +
mov eax [esi+30h] +
mov dword_1008250 eax +
mov eax [esi+34h] +
mov dword_1008254 eax +
mov eax [esi+38h] +
mov dword_1008260 eax +
mov eax [esi+3Ch] +
mov dword_1008264 eax +
add esp 0Ch +
mov al 1 +
leave   +
retn   +
***
jmp loc_10020EE  +
mov ecx [eax] +
mov edx [eax+4] +
push eax  +
mov eax large fs:18h +
mov [edx] ecx +
mov [ecx+4] edx +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov eax [esi] +
cmp eax esi +
jnz loc_10020CF  +
retn   +
***
mov edi edi +
push esi  +
lea esi [edi+30h] +
call sub_10020CD  +
lea esi [edi+38h] +
call sub_10020CD  +
mov eax [edi] +
mov ecx [edi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ecx] +
push edi  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
push 0  +
push dword ptr [eax+8]  +
call __allmul  +
push dword ptr [esi+14h]  +
mov ebx eax +
push dword ptr [esi+10h]  +
mov edi edx +
push 0  +
push dword ptr [esi+8]  +
call __allmul  +
cmp edi edx +
jl loc_1002182  +
jg loc_1002173  +
cmp ebx eax +
jbe loc_1002178  +
or eax 0FFFFFFFFh +
jmp loc_1002189  +
cmp edi edx +
jg loc_1002187  +
jl loc_1002182  +
cmp ebx eax +
jnb loc_1002187  +
xor eax eax +
inc eax  +
jmp loc_1002189  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov eax [eax] +
mov ecx [ecx] +
mov edx [eax+18h] +
mov eax [eax+1Ch] +
push esi  +
mov esi [ecx+18h] +
mov ecx [ecx+1Ch] +
cmp eax ecx +
jl loc_10021C8  +
jg loc_10021B9  +
cmp edx esi +
jbe loc_10021BE  +
or eax 0FFFFFFFFh +
jmp loc_10021CF  +
cmp eax ecx +
jg loc_10021CD  +
jl loc_10021C8  +
cmp edx esi +
jnb loc_10021CD  +
xor eax eax +
inc eax  +
jmp loc_10021CF  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov eax [eax] +
mov ecx [ecx] +
mov edx [eax+28h] +
mov eax [eax+2Ch] +
push esi  +
mov esi [ecx+28h] +
mov ecx [ecx+2Ch] +
cmp eax ecx +
jl loc_100220C  +
jg loc_10021FD  +
cmp edx esi +
jbe loc_1002202  +
or eax 0FFFFFFFFh +
jmp loc_1002213  +
cmp eax ecx +
jg loc_1002211  +
jl loc_100220C  +
cmp edx esi +
jnb loc_1002211  +
xor eax eax +
inc eax  +
jmp loc_1002213  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [esi] +
push edi  +
xor edi edi +
xor ecx ecx +
mov [ebp+var_4] edi +
cmp eax esi +
jz loc_100223D  +
mov eax [eax] +
inc ecx  +
inc [ebp+var_4]  +
cmp eax esi +
jnz loc_100222F  +
cmp ecx edi +
jnz loc_1002241  +
mov al 1 +
jmp loc_10022B9  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
shl ecx 2 +
push ecx  +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov ebx eax +
cmp ebx edi +
jnz loc_1002263  +
xor al al +
jmp loc_10022B8  +
mov eax [esi] +
jmp loc_1002272  +
cmp edi [ebp+var_4] +
jnb loc_1002276  +
mov [ebx+edi*4] eax +
mov eax [eax] +
inc edi  +
cmp eax esi +
jnz loc_1002267  +
push [ebp+arg_0]  +
push 4  +
push edi  +
push ebx  +
call ds:qsort  +
add esp 10h +
mov [esi+4] esi +
mov [esi] esi +
test edi edi +
jbe loc_10022A1  +
mov ecx [esi] +
dec edi  +
mov eax [ebx+edi*4] +
mov [eax] ecx +
mov [eax+4] esi +
mov [ecx+4] eax +
mov [esi] eax +
jnz loc_100228F  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov al 1 +
pop ebx  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebx] +
push edi  +
cmp esi ebx +
jz loc_1002335  +
mov edi ds:WriteFile +
cmp [ebp+var_8] 0Ah +
jnb loc_1002335  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 4  +
lea eax [esi+8] +
push eax  +
push hFile  +
call edi  +
test eax eax +
jz loc_100233B  +
cmp [ebp+NumberOfBytesWritten] 4 +
jnz loc_100233B  +
add dword_10086CC 4 +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 8  +
lea eax [esi+10h] +
push eax  +
push hFile  +
call edi  +
test eax eax +
jz loc_100233B  +
cmp [ebp+NumberOfBytesWritten] 8 +
jnz loc_100233B  +
add dword_10086CC 8 +
mov esi [esi] +
inc [ebp+var_8]  +
cmp esi ebx +
jnz loc_10022DC  +
mov al 1 +
pop edi  +
pop esi  +
leave   +
retn   +
xor al al +
jmp loc_1002337  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov ebx eax +
push edi  +
xor edi edi +
lea ecx [ebx+30h] +
mov eax [ecx] +
mov [ebp+Buffer] edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
mov [ebp+var_1C] ecx +
xor edx edx +
jmp loc_100236B  +
mov eax [eax] +
inc edx  +
cmp eax ecx +
jnz loc_1002368  +
push 0Ah  +
pop esi  +
mov [ebp+var_8] edx +
cmp edx esi +
jb loc_100237C  +
mov [ebp+var_8] esi +
lea ecx [ebx+38h] +
mov eax [ecx] +
mov [ebp+var_20] ecx +
xor edx edx +
jmp loc_100238B  +
mov eax [eax] +
inc edx  +
cmp eax ecx +
jnz loc_1002388  +
mov [ebp+var_C] edx +
cmp edx esi +
jb loc_1002399  +
mov [ebp+var_C] esi +
mov ecx [ebp+var_8] +
mov edx [ebp+var_C] +
mov esi [ebx+0Ch] +
lea eax [edx+ecx] +
lea eax [esi+eax*2+0Ah] +
add eax edx +
add eax ecx +
mov ecx dword_10086CC +
shl eax 2 +
add ecx eax +
mov [ebp+Buffer] eax +
cmp ecx 80000h +
ja loc_1002577  +
mov esi ds:WriteFile +
push edi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 4  +
lea eax [ebp+Buffer] +
push eax  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] 4 +
jnz loc_1002577  +
add dword_10086CC 4 +
push edi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 8  +
pop edi  +
push edi  +
lea eax [ebx+10h] +
push eax  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002577  +
add dword_10086CC edi +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
lea eax [ebx+18h] +
push eax  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002577  +
add dword_10086CC edi +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
lea eax [ebx+20h] +
push eax  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002577  +
add dword_10086CC edi +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
lea eax [ebx+28h] +
push eax  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002577  +
add dword_10086CC edi +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 4  +
pop edi  +
push edi  +
lea eax [ebx+0Ch] +
push eax  +
push hFile  +
mov [ebp+var_18] eax +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002577  +
add dword_10086CC edi +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002577  +
add dword_10086CC edi +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002577  +
mov eax [ebp+var_18] +
add dword_10086CC edi +
and [ebp+var_10] 0 +
cmp dword ptr [eax] 0 +
jbe loc_100255C  +
add ebx 40h +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push ebx  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002577  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002577  +
add dword_10086CC edi +
inc [ebp+var_10]  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_10] +
add ebx edi +
cmp ecx [eax] +
jb loc_100252E  +
mov ebx [ebp+var_1C] +
call sub_10022C3  +
test al al +
jz loc_1002577  +
mov ebx [ebp+var_20] +
call sub_10022C3  +
test al al +
setnz al  +
jmp loc_1002579  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
push ebx  +
push hFile  +
call ds:SetFilePointer  +
test eax eax +
jz loc_10025A7  +
xor al al +
jmp loc_1002816  +
push esi  +
mov esi ds:WriteFile +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 10h  +
push offset dword_1001250  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] 10h +
jnz loc_1002813  +
add dword_10086CC 10h +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 4  +
pop edi  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset Buffer  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 8  +
pop edi  +
push edi  +
push offset dword_1008690  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_1008698  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_10086A0  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_10086A8  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_10086B0  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_10086B8  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_1008250  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_1008260  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 4  +
pop edi  +
push edi  +
push offset dword_1008678  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_100867C  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_1008680  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push offset dword_1008684  +
push hFile  +
call esi  +
test eax eax +
jz loc_1002813  +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_1002813  +
add dword_10086CC edi +
mov al 1 +
jmp loc_1002815  +
xor al al +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov eax [ebp+SystemTimeAsFileTime.dwLowDateTime] +
sub eax [ebp+arg_0] +
mov ecx [ebp+SystemTimeAsFileTime.dwHighDateTime] +
sbb ecx [ebp+arg_4] +
xor ebx ebx +
push ebx  +
push 989680h  +
push ecx  +
push eax  +
call __aulldiv  +
mov edi offset dword_1008258 +
push offset sub_1002193  +
mov esi edi +
mov dword_1008908 eax +
mov dword_100890C edx +
call sub_100221B  +
push offset sub_10021D7  +
mov esi offset dword_1008248 +
call sub_100221B  +
mov eax dword_1008678 +
push dword_1008908  +
mov dword_1008680 eax +
mov eax dword_100867C +
mov dword_1008684 eax +
call sub_1002583  +
test al al +
jz loc_100292C  +
mov dword_1008680 ebx +
mov dword_1008684 ebx +
mov ebx dword_1008258 +
jmp loc_10028E3  +
push offset sub_1002133  +
lea esi [ebx+30h] +
call sub_100221B  +
push offset sub_1002133  +
lea esi [ebx+38h] +
call sub_100221B  +
mov eax ebx +
call sub_1002344  +
test al al +
jz loc_10028F4  +
inc dword_1008680  +
mov ebx [ebx] +
cmp ebx edi +
jnz loc_10028B6  +
mov edi dword_1008248 +
mov ebx offset dword_1008248 +
jmp loc_1002926  +
push dword_1008908  +
call sub_1002583  +
test al al +
setnz al  +
jmp loc_100292C  +
push offset sub_1002133  +
lea esi [edi+38h] +
call sub_100221B  +
mov eax edi +
call sub_1002344  +
test al al +
jz loc_10028F4  +
inc dword_1008684  +
mov edi [edi] +
cmp edi ebx +
jnz loc_1002906  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jnz loc_1002977  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1002973  +
test byte ptr [eax+1Ch] 1 +
jz loc_1002973  +
push offset dword_10012C0  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
xor eax eax +
jmp loc_100298E  +
push edi  +
push [ebp+lpProcName]  +
push esi  +
call ds:GetProcAddress  +
push esi  +
mov edi eax +
call ds:FreeLibrary  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_1008010 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax lpBaseAddress +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_2C] esi +
push offset ProcName  +
mov edi ecx +
mov [ebp+var_30] eax +
call sub_1002938  +
cmp eax esi +
jnz loc_10029D3  +
mov eax 0C0000001h +
jmp loc_1002A9B  +
lea ecx [ebp+var_50] +
mov [ebp+var_1C] ecx +
lea ecx [ebp+var_28] +
push ecx  +
mov ecx [ebp+var_30] +
push esi  +
push esi  +
push esi  +
push 2  +
mov [ebp+var_48] 18h +
mov [ebp+var_44] esi +
mov [ebp+var_3C] 200h +
mov [ebp+var_40] esi +
mov [ebp+var_38] esi +
mov [ebp+var_34] esi +
mov [ebp+var_24] 10003h +
mov [ebp+var_20] 8 +
mov [ebp+var_18] esi +
mov [ebp+var_28] 14h +
push dword ptr [ecx+14h]  +
push eax  +
push edi  +
lea eax [ebp+var_48] +
push eax  +
push 1FFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
call ds:NtCreateThreadEx  +
mov edi eax +
cmp edi esi +
jl loc_1002A99  +
push esi  +
push esi  +
push [ebp+var_2C]  +
call ds:NtWaitForSingleObject  +
test eax eax +
jz loc_1002A4B  +
mov edi 0C0000001h +
jmp loc_1002A8B  +
push esi  +
push 1Ch  +
lea eax [ebp+var_6C] +
push eax  +
push esi  +
push [ebp+var_2C]  +
call ds:NtQueryInformationThread  +
test eax eax +
jl loc_1002A44  +
mov edi [ebp+var_6C] +
cmp edi esi +
jl loc_1002A8B  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1002A8B  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002A8B  +
push offset dword_10012C0  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
cmp [ebp+var_2C] esi +
jz loc_1002A99  +
push [ebp+var_2C]  +
call ds:NtClose  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1005BFD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ds:NtOpenProcess +
push edi  +
mov [ebp+var_8] ebx +
mov [ebp+var_18] eax +
mov [ebp+var_14] ebx +
mov [ebp+var_30] 18h +
mov [ebp+var_2C] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov edi 10047Ah +
jmp loc_1002AFE  +
cmp [ebp+var_8] ebx +
jnz loc_1002B2D  +
push 1  +
call sub_10062FD  +
test eax eax +
jl loc_1002B2D  +
mov [ebp+var_8] 1 +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
call esi  +
test eax eax +
jl loc_1002AE7  +
mov esi ds:IsWow64Process +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_4]  +
call esi  +
test eax eax +
jnz loc_1002B31  +
push [ebp+var_4]  +
call ds:NtClose  +
xor eax eax +
jmp loc_1002B5E  +
lea eax [ebp+var_10] +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
call esi  +
test eax eax +
jz loc_1002B24  +
mov eax [ebp+var_C] +
mov dword_10088FC eax +
cmp eax [ebp+var_10] +
jz loc_1002B5B  +
push [ebp+var_4]  +
call ds:NtClose  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax lpBaseAddress +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
test eax eax +
jnz loc_1002B84  +
mov eax 0C0000001h +
leave   +
retn   +
mov eax [ebp+var_4] +
push ebx  +
push esi  +
mov esi ds:NtDuplicateObject +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
mov edi 100003h +
push edi  +
push offset dword_10086D8  +
push 0FFFFFFFFh  +
push dword ptr [eax+4]  +
push hProcess  +
call esi  +
cmp eax ebx +
jl loc_1002C28  +
mov eax [ebp+var_4] +
push ebx  +
push ebx  +
push edi  +
push offset dword_10086DC  +
push 0FFFFFFFFh  +
push dword ptr [eax+8]  +
push hProcess  +
call esi  +
cmp eax ebx +
jl loc_1002C28  +
mov eax [ebp+var_4] +
push ebx  +
push ebx  +
push edi  +
push offset dword_10086E0  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push hProcess  +
call esi  +
cmp eax ebx +
jl loc_1002C28  +
mov eax [ebp+var_4] +
push ebx  +
push ebx  +
push 1F0001h  +
push offset hHandle  +
push 0FFFFFFFFh  +
push dword ptr [eax+10h]  +
push hProcess  +
call esi  +
cmp eax ebx +
jl loc_1002C28  +
mov eax [ebp+var_4] +
mov [eax+24h] ebx +
mov eax [ebp+var_4] +
mov [eax+28h] ebx +
mov eax [ebp+var_4] +
mov [eax+30h] ebx +
mov [eax+34h] ebx +
mov eax [ebp+var_4] +
mov [eax+38h] ebx +
mov [eax+3Ch] ebx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
and [ebp+var_18] 0 +
push edi  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+arg_0] +
push eax  +
push 18h  +
lea eax [ebp+var_18] +
push eax  +
push 0  +
push [ebp+arg_0]  +
call ds:NtQueryInformationProcess  +
pop edi  +
test eax eax +
jge loc_1002C8B  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1002C87  +
test byte ptr [eax+1Ch] 1 +
jz loc_1002C87  +
push offset dword_10012C0  +
push 72h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
xor eax eax +
jmp locret_1002C96  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp ecx [ebp+arg_4] +
setz al  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 268h +
push ebx  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp+var_20] ebx +
lea edi [ebp+lpBaseAddress] +
stos   +
stos   +
stos   +
stos   +
push 247h  +
stos   +
lea eax [ebp+Buffer+1] +
push ebx  +
push eax  +
mov byte ptr [ebp+Buffer] bl +
call memset  +
add esp 0Ch +
lea eax [ebp+var_8] +
push eax  +
push 18h  +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
push [ebp+hProcess]  +
mov [ebp+NumberOfBytesRead] ebx +
mov [ebp+var_8] ebx +
xor edi edi +
call ds:NtQueryInformationProcess  +
test eax eax +
jl loc_1002D36  +
cmp [ebp+var_8] 18h +
jnz loc_1002D36  +
cmp [ebp+lpBaseAddress] ebx +
jz loc_1002D36  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov esi 248h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+lpBaseAddress]  +
mov [ebp+NumberOfBytesRead] ebx +
push [ebp+hProcess]  +
call ds:ReadProcessMemory  +
test eax eax +
jz loc_1002D35  +
cmp [ebp+NumberOfBytesRead] esi +
jnz loc_1002D35  +
test [ebp+var_240] 10h +
jz loc_1002D35  +
inc edi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
mov edi ds:RegOpenKeyExW +
lea eax [ebp+hKey] +
push eax  +
xor esi esi +
push 20019h  +
push esi  +
push offset SubKey  +
push 80000002h  +
mov [ebp+hKey] esi +
mov [ebp+var_C] esi +
mov [ebp+cbData] esi +
mov [ebp+var_10] esi +
call edi  +
test eax eax +
jnz loc_1002E87  +
lea eax [ebp+var_C] +
push eax  +
push 2  +
push esi  +
push offset aVolatileEnviro  +
push 80000001h  +
call edi  +
test eax eax +
jnz loc_1002E87  +
push ebx  +
mov ebx ds:RegQueryValueExW +
lea eax [ebp+cbData] +
push eax  +
push esi  +
push esi  +
push esi  +
mov edi offset ValueName +
push edi  +
push [ebp+hKey]  +
call ebx  +
test eax eax +
jnz loc_1002E86  +
mov eax large fs:18h +
push [ebp+cbData]  +
mov eax [eax+30h] +
push esi  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov [ebp+lpData] eax +
cmp eax esi +
jz loc_1002E86  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
push esi  +
push esi  +
push edi  +
push [ebp+hKey]  +
call ebx  +
test eax eax +
jnz loc_1002E57  +
push [ebp+cbData]  +
push [ebp+lpData]  +
push 1  +
push esi  +
push edi  +
push [ebp+var_C]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_1002E57  +
lea eax [ebp+cbData] +
push eax  +
push esi  +
push esi  +
push esi  +
mov edi offset aBuildlabex +
push edi  +
push [ebp+hKey]  +
call ebx  +
test eax eax +
jnz loc_1002E57  +
mov eax large fs:18h +
push [ebp+cbData]  +
mov eax [eax+30h] +
push esi  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
push esi  +
push esi  +
push edi  +
push [ebp+hKey]  +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jnz loc_1002E57  +
push [ebp+cbData]  +
push [ebp+var_10]  +
push 1  +
push esi  +
push edi  +
push [ebp+var_C]  +
call ds:RegSetValueExW  +
push [ebp+lpData]  +
mov eax large fs:18h +
mov eax [eax+30h] +
mov edi ds:RtlFreeHeap +
push esi  +
push dword ptr [eax+18h]  +
call edi  +
cmp [ebp+var_10] esi +
jz loc_1002E86  +
push [ebp+var_10]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push dword ptr [eax+18h]  +
call edi  +
pop ebx  +
mov edi ds:RegCloseKey +
cmp [ebp+hKey] esi +
jz loc_1002E97  +
push [ebp+hKey]  +
call edi  +
cmp [ebp+var_C] esi +
jz loc_1002EA1  +
push [ebp+var_C]  +
call edi  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1002EC0  +
cmp ecx 7FFFFFFFh +
jbe loc_1002EC5  +
mov eax 80070057h +
test eax eax +
jl loc_1002F10  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1002F00  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1002EFB  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_1002EFB  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1002EE3  +
pop edi  +
test esi esi +
jnz loc_1002F07  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1002F2F  +
cmp ecx 7FFFFFFFh +
jbe loc_1002F34  +
mov eax 80070057h +
test eax eax +
jl loc_1002F71  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1002F61  +
cmp eax esi +
ja loc_1002F61  +
jnz loc_1002F6C  +
jmp loc_1002F66  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_1002F9A  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_1002F9A  +
call sub_10017D5  +
jmp loc_1002F9F  +
mov eax 80070057h +
test eax eax +
jge loc_1002FAA  +
test edi edi +
jz loc_1002FAA  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi offset unk_10089AC +
push edi  +
call ds:RtlAcquireSRWLockExclusive  +
mov eax dword_10086E8 +
mov esi ds:NtClose +
xor ebx ebx +
cmp eax ebx +
jz loc_1002FDF  +
push eax  +
call esi  +
mov dword_10086E8 ebx +
push edi  +
call ds:RtlReleaseSRWLockExclusive  +
jmp loc_1002FED  +
call sub_10020FA  +
mov edi dword_1008258 +
cmp edi offset dword_1008258 +
jnz loc_1002FE8  +
jmp loc_1003002  +
call sub_10020FA  +
mov edi dword_1008248 +
cmp edi offset dword_1008248 +
jnz loc_1002FFD  +
mov eax dword_1008688 +
cmp eax ebx +
jz loc_1003039  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov dword_1008688 ebx +
mov dword_100868C ebx +
mov eax dword_10086D8 +
mov edi ds:NtSetEvent +
cmp eax ebx +
jz loc_100305A  +
push ebx  +
push eax  +
call edi  +
push dword_10086D8  +
call esi  +
mov dword_10086D8 ebx +
mov eax dword_10086DC +
cmp eax ebx +
jz loc_100306C  +
push eax  +
call esi  +
mov dword_10086DC ebx +
mov eax dword_10086E0 +
cmp eax ebx +
jz loc_1003087  +
push ebx  +
push eax  +
call edi  +
push dword_10086E0  +
call esi  +
mov dword_10086E0 ebx +
mov eax hHandle +
cmp eax ebx +
jz loc_10030A8  +
cmp byte_10086C7 bl +
jz loc_10030A0  +
push ebx  +
push eax  +
call ds:NtReleaseMutant  +
push hHandle  +
call esi  +
mov eax lpBaseAddress +
test eax eax +
jz loc_10030C3  +
push lpBaseAddress  +
call ds:UnmapViewOfFile  +
mov lpBaseAddress ebx +
mov eax hFileMappingObject +
cmp eax ebx +
jz loc_10030D5  +
push eax  +
call esi  +
mov hFileMappingObject ebx +
mov eax hProcess +
cmp eax ebx +
jz loc_10030E7  +
push eax  +
call esi  +
mov hProcess ebx +
mov eax hFile +
cmp eax ebx +
jz loc_10030F9  +
push eax  +
call esi  +
mov hFile ebx +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax lpBaseAddress +
or Buffer 8 +
push ebx  +
push esi  +
mov esi ds:NtResetEvent +
push edi  +
xor ebx ebx +
mov [ebp+var_14] ebx +
xor eax eax +
lea edi [ebp+var_10] +
stos   +
stos   +
push ebx  +
push dword_10086D8  +
stos   +
mov [ebp+var_4] ebx +
call esi  +
mov edi eax +
cmp edi ebx +
jge loc_1003170  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10032B7  +
test byte ptr [eax+1Ch] 1 +
jz loc_10032B7  +
push edi  +
push offset dword_10012C0  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
jmp loc_10032B7  +
push ebx  +
push dword_10086DC  +
call esi  +
mov edi eax +
cmp edi ebx +
jge loc_10031A3  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10032B7  +
test byte ptr [eax+1Ch] 1 +
jz loc_10032B7  +
push edi  +
push offset dword_10012C0  +
push 2Ch  +
jmp loc_1003160  +
push ebx  +
push dword_10086E0  +
call esi  +
mov edi eax +
cmp edi ebx +
jge loc_10031D6  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10032B7  +
test byte ptr [eax+1Ch] 1 +
jz loc_10032B7  +
push edi  +
push offset dword_10012C0  +
push 2Dh  +
jmp loc_1003160  +
push offset aRtldetectheapl  +
call sub_1002938  +
mov esi eax +
cmp esi ebx +
jnz loc_10031F0  +
mov eax 0C0000001h +
jmp loc_10032C7  +
push ebx  +
push ebx  +
push ebx  +
push 100003h  +
lea eax [ebp+var_4] +
push eax  +
call ds:NtCreateEvent  +
mov edi eax +
cmp edi ebx +
jge loc_100322F  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10032B7  +
test byte ptr [eax+1Ch] 1 +
jz loc_10032B7  +
push edi  +
push offset dword_10012C0  +
push 2Eh  +
jmp loc_1003160  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_4]  +
push ebx  +
push esi  +
push 6  +
push [ebp+arg_0]  +
call ds:RtlCreateProcessReflection  +
mov edi eax +
cmp edi ebx +
jge loc_1003268  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10032B7  +
test byte ptr [eax+1Ch] 1 +
jz loc_10032B7  +
push edi  +
push offset dword_10012C0  +
push 2Fh  +
jmp loc_1003160  +
push dwProcessId  +
push [ebp+var_14]  +
call sub_1002C32  +
test eax eax +
jz loc_1003284  +
mov eax [ebp+var_14] +
mov dword_10086D4 eax +
jmp loc_10032AD  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10032A8  +
test byte ptr [eax+1Ch] 1 +
jz loc_10032A8  +
push offset dword_10012C0  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
mov edi 0C0000001h +
push ebx  +
push [ebp+var_4]  +
call ds:NtSetEvent  +
cmp [ebp+var_4] ebx +
jz loc_10032C5  +
push [ebp+var_4]  +
call ds:NtClose  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 9Ch +
mov al byte_100800E +
push ebx  +
push esi  +
mov esi [ebp+hObject] +
push edi  +
xor edi edi +
push 40h  +
pop ebx  +
mov [ebp+var_8] edi +
mov [ebp+var_1] al +
cmp al 1 +
jnz loc_1003319  +
mov byte_100800E 0 +
call sub_100204A  +
test al al +
jnz loc_100330F  +
xor al al +
jmp loc_100355E  +
mov dword_10089B0 1 +
mov [ebp+var_C] edi +
cmp [esi+24h] edi +
jbe loc_10033BF  +
mov edx dwMaximumSizeLow +
lea eax [ebx+14h] +
cmp eax edx +
ja loc_10033EE  +
lea eax [ebx+esi] +
push 5  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_9C] +
movs   +
mov esi [ebp+var_9C] +
test esi esi +
jz loc_10033EE  +
cmp esi 90h +
ja loc_10033EE  +
mov ecx [ebp+var_94] +
cmp ecx dword_100868C +
jb loc_1003379  +
add ebx esi +
or Buffer 2 +
jmp loc_10033AB  +
cmp [ebp+var_98] 0 +
jnz loc_10033DF  +
lea ecx [esi+ebx] +
cmp ecx edx +
ja loc_10033EE  +
push esi  +
push eax  +
lea eax [ebp+var_9C] +
push eax  +
call memcpy  +
add esp 0Ch +
lea eax [ebp+var_9C] +
call sub_1001DEF  +
add ebx [ebp+var_9C] +
inc [ebp+var_C]  +
mov eax [ebp+hObject] +
mov ecx [ebp+var_C] +
mov esi eax +
cmp ecx [eax+24h] +
jb loc_1003325  +
mov eax [esi+24h] +
test eax eax +
jnz loc_100355C  +
cmp [ebp+var_1] 1 +
jnz loc_10033FA  +
mov dword_10089B0 2 +
jmp loc_1003308  +
lea ecx [ebp+var_9C] +
call sub_1001F1B  +
add ebx esi +
jmp loc_10033AB  +
or Buffer 2 +
jmp loc_1003308  +
test eax eax +
jnz loc_100355C  +
mov eax off_1008000 +
mov ebx offset off_1008000 +
mov edi offset dword_10012C0 +
cmp eax ebx +
jz loc_1003429  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003429  +
push edi  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
mov eax [esi+18h] +
cmp eax [ebp+arg_4] +
jz loc_1003475  +
call sub_1002AAE  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_100344A  +
push [ebp+arg_4]  +
push eax  +
call sub_1002C32  +
test eax eax +
jnz loc_1003475  +
mov eax off_1008000 +
cmp eax ebx +
jz loc_1003467  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003467  +
push edi  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
push [ebp+var_8]  +
call ds:NtClose  +
jmp loc_1003308  +
xor eax eax +
push eax  +
push 80h  +
push 2  +
push eax  +
push eax  +
push 10000000h  +
push offset FileName  +
call ds:CreateFileW  +
mov edx eax +
xor ecx ecx +
mov [ebp+hObject] edx +
cmp edx ecx +
jz loc_1003530  +
cmp edx 0FFFFFFFFh +
jz loc_1003530  +
mov eax [ebp+var_8] +
mov byte_10086C6 1 +
cmp eax ecx +
jnz loc_10034BA  +
mov eax [ebp+arg_0] +
push ecx  +
push ecx  +
push ecx  +
push 20h  +
push edx  +
push dword ptr [esi+18h]  +
push eax  +
call MiniDumpWriteDump  +
test eax eax +
jz loc_10034EC  +
mov eax off_1008000 +
cmp eax ebx +
jz loc_1003513  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003513  +
push edi  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
jmp loc_1003513  +
mov eax off_1008000 +
cmp eax ebx +
jz loc_1003509  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003509  +
push edi  +
push 34h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
mov dword_10089B0 3 +
cmp [ebp+var_8] 0 +
jz loc_1003522  +
push [ebp+var_8]  +
call ds:NtClose  +
push [ebp+hObject]  +
call ds:CloseHandle  +
jmp loc_1003308  +
mov eax off_1008000 +
cmp eax ebx +
jz loc_100354D  +
test byte ptr [eax+1Ch] 1 +
jz loc_100354D  +
push edi  +
push 35h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
mov dword_10089B0 3 +
jmp loc_1003308  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
push edi  +
xor esi esi +
push 0Ah  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_2C] +
mov [ebp+var_34] esi +
mov [ebp+var_30] esi +
mov [ebp+var_4] esi +
stos   +
cmp [ebp+arg_8] esi +
jz loc_1003597  +
cmp ebx esi +
jz loc_1003597  +
cmp [ebp+arg_C] esi +
jnz loc_10035C5  +
mov ecx 80070057h +
mov edi ecx +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1003691  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003691  +
push ecx  +
push offset dword_10012C0  +
push 36h  +
jmp loc_1003686  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_C]  +
push ebx  +
call sub_1002F78  +
mov edi eax +
cmp edi esi +
jz loc_1003608  +
cmp edi 8007007Ah +
jz loc_1003608  +
cmp edi esi +
jge loc_1003608  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1003691  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003691  +
push edi  +
push offset dword_10012C0  +
push 37h  +
jmp loc_1003686  +
mov eax [ebp+var_4] +
lea eax [eax+eax+2] +
mov [ebp+var_2C] eax +
lea eax [ebp+arg_10] +
mov [ebp+var_24] eax +
lea eax [ebp+arg_14] +
mov [ebp+var_14] eax +
lea eax [ebp+var_34] +
push eax  +
push 3  +
push [ebp+arg_8]  +
mov [ebp+var_34] ebx +
push [ebp+arg_4]  +
mov [ebp+var_30] esi +
push [ebp+arg_0]  +
mov [ebp+var_28] esi +
mov [ebp+var_20] esi +
mov [ebp+var_1C] 4 +
mov [ebp+var_18] esi +
mov [ebp+var_10] esi +
mov [ebp+var_C] 8 +
mov [ebp+var_8] esi +
call ds:EventWrite  +
cmp eax esi +
jz loc_1003691  +
jle loc_1003666  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
cmp edi esi +
jge loc_1003691  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1003691  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003691  +
push edi  +
push offset dword_10012C0  +
push 38h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
xor esi esi +
push 38h  +
lea eax [ebp+var_3C] +
push esi  +
push eax  +
mov [ebp+var_4] esi +
mov [ebp+var_44] esi +
mov [ebp+var_40] esi +
call memset  +
add esp 0Ch +
cmp [ebp+arg_8] esi +
jz loc_10036D0  +
cmp edi esi +
jz loc_10036D0  +
cmp [ebp+arg_C] esi +
jnz loc_10036FE  +
mov ecx 80070057h +
mov ebx ecx +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10037DA  +
test byte ptr [eax+1Ch] 1 +
jz loc_10037DA  +
push ecx  +
push offset dword_10012C0  +
push 39h  +
jmp loc_10037CF  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_C]  +
push edi  +
call sub_1002F78  +
mov ebx eax +
cmp ebx esi +
jz loc_1003744  +
cmp ebx 8007007Ah +
jz loc_1003744  +
cmp ebx esi +
jge loc_1003744  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10037DA  +
test byte ptr [eax+1Ch] 1 +
jz loc_10037DA  +
push ebx  +
push offset dword_10012C0  +
push 3Ah  +
jmp loc_10037CF  +
mov eax [ebp+var_4] +
lea eax [eax+eax+2] +
push 4  +
lea ecx [ebp+arg_14] +
mov [ebp+var_3C] eax +
mov [ebp+var_24] ecx +
lea eax [ebp+arg_10] +
lea ecx [ebp+arg_1C] +
mov [ebp+var_34] eax +
pop eax  +
mov [ebp+var_14] ecx +
lea ecx [ebp+var_44] +
push ecx  +
push eax  +
push [ebp+arg_8]  +
mov [ebp+var_44] edi +
push [ebp+arg_4]  +
mov [ebp+var_40] esi +
push [ebp+arg_0]  +
mov [ebp+var_38] esi +
mov [ebp+var_30] esi +
mov [ebp+var_2C] eax +
mov [ebp+var_28] esi +
mov [ebp+var_20] esi +
mov [ebp+var_1C] 8 +
mov [ebp+var_18] esi +
mov [ebp+var_10] esi +
mov [ebp+var_C] eax +
mov [ebp+var_8] esi +
call ds:EventWrite  +
cmp eax esi +
jz loc_10037DA  +
jle loc_10037AF  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
cmp ebx esi +
jge loc_10037DA  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10037DA  +
test byte ptr [eax+1Ch] 1 +
jz loc_10037DA  +
push ebx  +
push offset dword_10012C0  +
push 3Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 258h +
mov eax dword_1008010 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_240] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov [ebp+var_248] eax +
mov eax [ebp+arg_C] +
push edi  +
mov [ebp+var_230] eax +
xor eax eax +
mov edi 80h +
xor esi esi +
push edi  +
mov [ebp+var_88] ax +
lea eax [ebp-86h] +
push esi  +
push eax  +
mov [ebp+var_22C] esi +
call memset  +
push 118h  +
lea eax [ebp-224h] +
push esi  +
push eax  +
mov dword ptr [ebp+VersionInformation] esi +
call memset  +
xor eax eax +
push edi  +
mov [ebp+Buffer] ax +
lea eax [ebp-10Ah] +
push esi  +
push eax  +
call memset  +
add esp 24h +
mov [ebp+lpMem] esi +
mov [ebp+var_234] esi +
mov [ebp+var_254] offset aRadar_leak_32 +
mov [ebp+var_250] offset aRadar_leak_64 +
mov [ebp+var_24C] offset aRadar_leak_wow +
mov ebx offset dword_10012C0 +
cmp [ebp+var_240] esi +
jz loc_10038B7  +
cmp [ebp+var_248] esi +
jz loc_10038B7  +
cmp [ebp+var_230] esi +
jnz loc_10038DF  +
mov esi 80070057h +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_100424F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004213  +
push esi  +
push ebx  +
push 3Ch  +
jmp loc_100419B  +
push esi  +
call ds:GetModuleHandleW  +
mov [ebp+hInstance] eax +
cmp eax esi +
jnz loc_100392D  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1003904  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_100392D  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 3Dh  +
jmp loc_100419B  +
push 802h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1003973  +
mov esi 8007000Eh +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 3Eh  +
jmp loc_100419B  +
mov esi ds:LoadStringW +
push 401h  +
push [ebp+lpMem]  +
push 1B59h  +
push [ebp+hInstance]  +
call esi  +
test eax eax +
jnz loc_10039D0  +
call ds:GetLastError  +
test eax eax +
jle loc_10039A9  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx eax +
test ecx ecx +
jge loc_10039D0  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10039D0  +
test byte ptr [eax+1Ch] 1 +
jz loc_10039D0  +
push ecx  +
push ebx  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
push 41h  +
lea eax [ebp+Buffer] +
push eax  +
push 1B58h  +
push [ebp+hInstance]  +
call esi  +
test eax eax +
jnz loc_1003A25  +
call ds:GetLastError  +
test eax eax +
jle loc_10039FE  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx eax +
test ecx ecx +
jge loc_1003A25  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1003A52  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003A2A  +
push ecx  +
push ebx  +
push 40h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1003A52  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003A52  +
push [ebp+lpMem]  +
lea ecx [ebp+Buffer] +
push ecx  +
push ebx  +
push 41h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001896  +
call sub_1002D43  +
mov esi 894h +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_234] eax +
test eax eax +
jnz loc_1003A9E  +
mov esi 8007000Eh +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 42h  +
jmp loc_100419B  +
push esi  +
push 0  +
push [ebp+var_234]  +
call memset  +
mov eax [ebp+var_234] +
add esp 0Ch +
lea ecx [ebp+Buffer] +
push ecx  +
mov [eax] esi +
push edi  +
add eax 88h +
push eax  +
call sub_1002EAA  +
mov esi eax +
test esi esi +
jz loc_1003AFF  +
cmp esi 8007007Ah +
jz loc_1003AFF  +
test esi esi +
jge loc_1003AFF  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 43h  +
jmp loc_100419B  +
mov eax [ebp+var_234] +
add eax 188h +
cmp [ebp+arg_8] 0 +
jnz loc_1003B18  +
push [ebp+var_230]  +
jmp loc_1003B1B  +
push [ebp+arg_8]  +
push edi  +
push eax  +
call sub_1002EAA  +
mov esi eax +
test esi esi +
jz loc_1003B57  +
cmp esi 8007007Ah +
jz loc_1003B57  +
test esi esi +
jge loc_1003B57  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 44h  +
jmp loc_100419B  +
push [ebp+lpMem]  +
mov eax [ebp+var_234] +
push 200h  +
add eax 490h +
push eax  +
call sub_1002EAA  +
mov esi eax +
test esi esi +
jz loc_1003BA8  +
cmp esi 8007007Ah +
jz loc_1003BA8  +
test esi esi +
jge loc_1003BA8  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 45h  +
jmp loc_100419B  +
cmp [ebp+arg_10] 0 +
mov dword ptr [ebp+VersionInformation] 11Ch +
setz al  +
dec al  +
and al 2 +
mov [ebp+var_235] al +
lea eax [ebp+VersionInformation] +
push eax  +
call ds:GetVersionExW  +
test eax eax +
jnz loc_1003C13  +
call ds:GetLastError  +
test eax eax +
jle loc_1003BE8  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx eax +
test ecx ecx +
jge loc_1003C13  +
mov eax off_1008000 +
mov edi offset off_1008000 +
cmp eax edi +
jz loc_1003C18  +
test byte ptr [eax+1Ch] 1 +
jz loc_1003C18  +
push ecx  +
push ebx  +
push 46h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
jmp loc_1003C18  +
mov edi offset off_1008000 +
lea eax [ebp+var_22C] +
push eax  +
push [ebp+var_234]  +
movzx eax [ebp+var_235] +
push 0  +
push [ebp+eax*4+var_254]  +
call WerReportCreate  +
mov esi eax +
test esi esi +
jge loc_1003C60  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 47h  +
jmp loc_100419B  +
push [ebp+var_230]  +
push 0  +
push 0  +
push [ebp+var_22C]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_1003C9B  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 48h  +
jmp loc_100419B  +
mov eax [ebp+arg_18] +
movzx ecx ax +
push ecx  +
shr eax 10h +
push eax  +
mov eax [ebp+arg_14] +
movzx ecx ax +
push ecx  +
shr eax 10h +
push eax  +
push offset aU_U_U_U  +
lea eax [ebp+var_88] +
push 41h  +
push eax  +
call sub_1002F19  +
mov esi eax +
add esp 1Ch +
test esi esi +
jz loc_1003CF9  +
cmp esi 8007007Ah +
jz loc_1003CF9  +
test esi esi +
jge loc_1003CF9  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 49h  +
jmp loc_100419B  +
lea eax [ebp+var_88] +
push eax  +
push 0  +
push 1  +
push [ebp+var_22C]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_1003D35  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 4Ah  +
jmp loc_100419B  +
movzx eax [ebp+var_112] +
push eax  +
movzx eax [ebp+var_114] +
push eax  +
push dword ptr [ebp-218h]  +
lea eax [ebp+var_88] +
push dword ptr [ebp-21Ch]  +
push dword ptr [ebp-220h]  +
push dword ptr [ebp-224h]  +
push offset aU_U_U_U_U_U  +
push 41h  +
push eax  +
call sub_1002F19  +
mov esi eax +
add esp 24h +
test esi esi +
jz loc_1003DA5  +
cmp esi 8007007Ah +
jz loc_1003DA5  +
test esi esi +
jge loc_1003DA5  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 4Bh  +
jmp loc_100419B  +
lea eax [ebp+var_88] +
push eax  +
push 0  +
push 2  +
push [ebp+var_22C]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_1003DE1  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 4Ch  +
jmp loc_100419B  +
mov eax off_1008000 +
mov esi [ebp+arg_20] +
cmp eax edi +
jz loc_1003E3C  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003E3C  +
and [ebp+var_230] 0 +
mov ecx [ebp+arg_1C] +
mov edx esi +
test esi esi +
ja loc_1003E08  +
cmp ecx 1 +
jbe loc_1003E1F  +
inc [ebp+var_230]  +
shrd ecx edx +
shr edx 1 +
test edx edx +
ja loc_1003E08  +
jb loc_1003E1F  +
cmp ecx 1 +
ja loc_1003E08  +
push [ebp+var_230]  +
push esi  +
push [ebp+arg_1C]  +
push ebx  +
push 4Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001864  +
mov edi offset off_1008000 +
mov eax [ebp+arg_1C] +
xor edx edx +
mov ecx esi +
test esi esi +
ja loc_1003E4C  +
cmp eax 1 +
jbe loc_1003E5E  +
shrd eax ecx +
shr ecx 1 +
inc edx  +
test ecx ecx +
ja loc_1003E4C  +
jb loc_1003E5E  +
cmp eax 1 +
ja loc_1003E4C  +
push edx  +
push offset aU  +
lea eax [ebp+var_88] +
push 41h  +
push eax  +
call sub_1002F19  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_1003EA7  +
cmp esi 8007007Ah +
jz loc_1003EA7  +
test esi esi +
jge loc_1003EA7  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 4Eh  +
jmp loc_100419B  +
lea eax [ebp+var_88] +
push eax  +
push 0  +
push 3  +
push [ebp+var_22C]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_1003EE3  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 4Fh  +
jmp loc_100419B  +
mov eax off_1008000 +
mov esi [ebp+arg_28] +
cmp eax edi +
jz loc_1003F3E  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003F3E  +
and [ebp+var_230] 0 +
mov ecx [ebp+arg_24] +
mov edx esi +
test esi esi +
ja loc_1003F0A  +
cmp ecx 1 +
jbe loc_1003F21  +
inc [ebp+var_230]  +
shrd ecx edx +
shr edx 1 +
test edx edx +
ja loc_1003F0A  +
jb loc_1003F21  +
cmp ecx 1 +
ja loc_1003F0A  +
push [ebp+var_230]  +
push esi  +
push [ebp+arg_24]  +
push ebx  +
push 50h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001864  +
mov edi offset off_1008000 +
mov eax [ebp+arg_24] +
xor edx edx +
mov ecx esi +
test esi esi +
ja loc_1003F4E  +
cmp eax 1 +
jbe loc_1003F60  +
shrd eax ecx +
shr ecx 1 +
inc edx  +
test ecx ecx +
ja loc_1003F4E  +
jb loc_1003F60  +
cmp eax 1 +
ja loc_1003F4E  +
push edx  +
push offset aU  +
lea eax [ebp+var_88] +
push 41h  +
push eax  +
call sub_1002F19  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_1003FA9  +
cmp esi 8007007Ah +
jz loc_1003FA9  +
test esi esi +
jge loc_1003FA9  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 51h  +
jmp loc_100419B  +
lea eax [ebp+var_88] +
push eax  +
push 0  +
push 4  +
push [ebp+var_22C]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_1003FE5  +
mov eax off_1008000 +
cmp eax edi +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 52h  +
jmp loc_100419B  +
mov eax off_1008000 +
mov esi [ebp+arg_30] +
mov edi [ebp+arg_2C] +
cmp eax offset off_1008000 +
jz loc_1004034  +
test byte ptr [eax+1Ch] 8 +
jz loc_1004034  +
xor ebx ebx +
mov ecx edi +
mov edx esi +
test esi esi +
ja loc_100400C  +
cmp edi 1 +
jbe loc_100401E  +
shrd ecx edx +
shr edx 1 +
inc ebx  +
test edx edx +
ja loc_100400C  +
jb loc_100401E  +
cmp ecx 1 +
ja loc_100400C  +
push ebx  +
push esi  +
push edi  +
mov ebx offset dword_10012C0 +
push ebx  +
push 53h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001864  +
xor edx edx +
mov eax edi +
mov ecx esi +
test esi esi +
ja loc_1004043  +
cmp edi 1 +
jbe loc_1004055  +
shrd eax ecx +
shr ecx 1 +
inc edx  +
test ecx ecx +
ja loc_1004043  +
jb loc_1004055  +
cmp eax 1 +
ja loc_1004043  +
push edx  +
push offset aU  +
lea eax [ebp+var_88] +
push 41h  +
push eax  +
call sub_1002F19  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_10040A1  +
cmp esi 8007007Ah +
jz loc_10040A1  +
test esi esi +
jge loc_10040A1  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 54h  +
jmp loc_100419B  +
lea eax [ebp+var_88] +
push eax  +
push 0  +
push 5  +
push [ebp+var_22C]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_10040E0  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 55h  +
jmp loc_100419B  +
xor eax eax +
cmp byte_1008919 al +
setnz al  +
inc eax  +
inc eax  +
push eax  +
push 5  +
push [ebp+var_240]  +
push [ebp+var_22C]  +
call WerReportAddFile  +
mov esi eax +
test esi esi +
jge loc_1004127  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 56h  +
jmp loc_100419B  +
xor eax eax +
cmp byte_1008919 al +
setnz al  +
inc eax  +
inc eax  +
push eax  +
push 5  +
push [ebp+var_248]  +
push [ebp+var_22C]  +
call WerReportAddFile  +
mov esi eax +
test esi esi +
jge loc_1004166  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 57h  +
jmp loc_100419B  +
lea eax [ebp+var_258] +
push eax  +
push 100h  +
push 1  +
push [ebp+var_22C]  +
call WerReportSubmit  +
mov esi eax +
test esi esi +
jge loc_10041A6  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10041AB  +
test byte ptr [eax+1Ch] 1 +
jz loc_10041AB  +
push esi  +
push ebx  +
push 58h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
mov eax off_1008000 +
cmp [ebp+var_22C] 0 +
jz loc_10041CB  +
push [ebp+var_22C]  +
call WerReportCloseHandle  +
and [ebp+var_22C] 0 +
mov eax off_1008000 +
cmp [ebp+lpMem] 0 +
mov edi ds:HeapFree +
jz loc_10041F0  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov eax off_1008000 +
cmp [ebp+var_234] 0 +
jz loc_100420F  +
push [ebp+var_234]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov eax off_1008000 +
test esi esi +
jge loc_1004234  +
cmp eax offset off_1008000 +
jz loc_100424F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004234  +
push esi  +
push ebx  +
push 59h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_100424F  +
test byte ptr [eax+1Ch] 10h +
jz loc_100424F  +
push ebx  +
push 5Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100183E  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005BFD  +
leave   +
retn 34h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1008010 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
xor ebx ebx +
push 206h  +
mov [ebp+var_20C] ax +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
mov [ebp+var_214] edi +
mov [ebp+var_210] ebx +
call memset  +
add esp 0Ch +
mov [ebp+var_218] ebx +
cmp esi ebx +
jz loc_10042CB  +
cmp esi 0FFFFFFFFh +
jz loc_10042CB  +
cmp edi ebx +
jz loc_10042CB  +
mov edi [ebp+arg_8] +
cmp edi ebx +
jnz loc_1004308  +
mov ecx 80070057h +
mov [ebp+var_210] ecx +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004469  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004469  +
push ecx  +
push offset dword_10012C0  +
push 5Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
jmp loc_1004469  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push ebx  +
push esi  +
call K32GetModuleFileNameExW  +
test eax eax +
jnz loc_1004366  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1004333  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov [ebp+var_210] eax +
jge loc_1004366  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004469  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004469  +
push [ebp+var_210]  +
push offset dword_10012C0  +
push 5Ch  +
jmp loc_10042F8  +
lea eax [ebp+var_218] +
push eax  +
push [ebp+var_214]  +
lea eax [ebp+var_20C] +
push ebx  +
push ebx  +
push eax  +
mov [ebp+var_218] edi +
call ds:SHLWAPI_348  +
mov esi offset off_1008000 +
mov edi offset dword_10012C0 +
test eax eax +
jnz loc_100443F  +
mov eax off_1008000 +
cmp eax esi +
jz loc_10043C3  +
test byte ptr [eax+1Ch] 1 +
jz loc_10043C3  +
push 8007000Dh  +
lea ecx [ebp+var_20C] +
push ecx  +
push edi  +
push 5Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100195D  +
lea eax [ebp+var_20C] +
push 5Ch  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_100441C  +
add eax 2 +
push eax  +
push [ebp+arg_8]  +
push [ebp+var_214]  +
call sub_1002EAA  +
mov [ebp+var_210] eax +
cmp eax ebx +
jz loc_100443F  +
cmp eax 8007007Ah +
jz loc_100443F  +
cmp eax ebx +
jge loc_100443F  +
mov eax off_1008000 +
cmp eax esi +
jz loc_1004469  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004469  +
push [ebp+var_210]  +
push edi  +
push 5Eh  +
jmp loc_10042F8  +
mov ecx 80004005h +
mov [ebp+var_210] ecx +
mov eax off_1008000 +
cmp eax esi +
jz loc_1004469  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004469  +
push ecx  +
push edi  +
push 5Fh  +
jmp loc_10042F8  +
mov eax off_1008000 +
cmp eax esi +
jz loc_1004469  +
test byte ptr [eax+1Ch] 8 +
jz loc_1004469  +
push [ebp+var_214]  +
lea ecx [ebp+var_20C] +
push ecx  +
push edi  +
push 60h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001896  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005BFD  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
xor ebx ebx +
push 3Ch  +
lea eax [ebp+var_40] +
push ebx  +
push eax  +
mov [ebp+var_44] ebx +
call memset  +
mov eax [ebp+arg_0] +
mov [eax] ebx +
push CreationTime.dwHighDateTime  +
mov eax CreationTime.dwLowDateTime +
push eax  +
push dwProcessId  +
mov esi offset word_10086F0 +
push offset aRdrU_Xi64  +
push 104h  +
push esi  +
call sub_1002F19  +
add esp 24h +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_1004513  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 8000h +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2B  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2B  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 61h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
jmp loc_1004B2B  +
movzx eax byte_100800D +
push edi  +
neg eax  +
sbb eax eax +
and eax esi +
push eax  +
push dwMaximumSizeLow  +
push ebx  +
push 4  +
push ebx  +
push 0FFFFFFFFh  +
call ds:CreateFileMappingW  +
mov edi [ebp+arg_4] +
mov esi ds:GetLastError +
mov hFileMappingObject eax +
cmp eax ebx +
jnz loc_100458C  +
mov dword ptr [edi] 8000h +
call esi  +
cmp eax ebx +
jle loc_100455C  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_100458C  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 62h  +
jmp loc_1004B0F  +
call esi  +
cmp eax 0B7h +
jnz loc_100468A  +
mov eax off_1008000 +
mov ebx 800700B7h +
cmp eax offset off_1008000 +
jz loc_10045C3  +
test byte ptr [eax+1Ch] 1 +
jz loc_10045C3  +
push ebx  +
push offset dword_10012C0  +
push 63h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
cmp byte_100891A 0 +
jz loc_10045DE  +
cmp byte_100891B 0 +
jnz loc_10045DE  +
cmp dword_100891C 0 +
jbe loc_100460E  +
mov dword ptr [edi] 2000h +
mov [ebp+var_4] ebx +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push ebx  +
push offset dword_10012C0  +
push 64h  +
jmp loc_1004B0F  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 1 +
xor ebx ebx +
push dwMaximumSizeLow  +
push ebx  +
push ebx  +
push 0F001Fh  +
push hFileMappingObject  +
call ds:MapViewOfFile  +
mov lpBaseAddress eax +
mov eax lpBaseAddress +
test eax eax +
jnz loc_10046C7  +
mov dword ptr [edi] 8000h +
call esi  +
cmp eax ebx +
jle loc_100465A  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_10046C7  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 66h  +
jmp loc_1004B0F  +
cmp byte_100891A bl +
jz loc_1004619  +
mov ecx 80070490h +
mov dword ptr [edi] 4000h +
mov [ebp+var_4] ecx +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push ecx  +
push offset dword_10012C0  +
push 65h  +
jmp loc_1004B0F  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push 100003h  +
push offset dword_10086E8  +
call ds:NtCreateEvent  +
push 10h  +
cmp eax esi +
mov esi ds:RtlNtStatusToDosError +
pop ebx  +
jge loc_100472C  +
push eax  +
mov [edi] ebx +
call esi  +
test eax eax +
jle loc_10046FC  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_100472C  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 67h  +
jmp loc_1004B0F  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0 +
jz loc_1004788  +
call sub_1002B68  +
test eax eax +
jge loc_1004B2A  +
push eax  +
mov [edi] ebx +
call esi  +
test eax eax +
jle loc_1004754  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1004B2A  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 68h  +
jmp loc_1004B0F  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push 100003h  +
push offset dword_10086D8  +
call ds:NtCreateEvent  +
test eax eax +
jge loc_10047E4  +
push eax  +
mov [edi] ebx +
call esi  +
test eax eax +
jle loc_10047B4  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_10047E4  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 69h  +
jmp loc_1004B0F  +
push 0  +
push 1  +
push 0  +
push 100003h  +
push offset dword_10086DC  +
call ds:NtCreateEvent  +
test eax eax +
jge loc_1004841  +
push eax  +
mov [edi] ebx +
call esi  +
test eax eax +
jle loc_1004811  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1004841  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 6Ah  +
jmp loc_1004B0F  +
push 0  +
push 1  +
push 0  +
push 100003h  +
push offset dword_10086E0  +
call ds:NtCreateEvent  +
test eax eax +
jge loc_100489E  +
push eax  +
mov [edi] ebx +
call esi  +
test eax eax +
jle loc_100486E  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_100489E  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 6Bh  +
jmp loc_1004B0F  +
push 0  +
push 0  +
push 1F0001h  +
push offset hHandle  +
call ds:NtCreateMutant  +
test eax eax +
jge loc_10048F9  +
push eax  +
mov [edi] ebx +
call esi  +
test eax eax +
jle loc_10048C9  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_10048F9  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 6Ch  +
jmp loc_1004B0F  +
mov eax dwMaximumSizeLow +
mov ebx ds:NtDuplicateObject +
mov [ebp+var_44] eax +
mov eax dword_1008914 +
push 0  +
push 2  +
mov [ebp+var_28] eax +
mov eax dword_1008008 +
push 100003h  +
mov [ebp+var_24] eax +
lea eax [ebp+var_40] +
push eax  +
push hProcess  +
push dword_10086D8  +
push 0FFFFFFFFh  +
call ebx  +
test eax eax +
jge loc_100497F  +
push eax  +
mov dword ptr [edi] 10h +
call esi  +
test eax eax +
jle loc_100494F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_100497F  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 6Dh  +
jmp loc_1004B0F  +
push 0  +
push 2  +
push 100003h  +
lea eax [ebp+var_3C] +
push eax  +
push hProcess  +
push dword_10086DC  +
push 0FFFFFFFFh  +
call ebx  +
test eax eax +
jge loc_10049E7  +
push eax  +
mov dword ptr [edi] 10h +
call esi  +
test eax eax +
jle loc_10049B7  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_10049E7  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 6Eh  +
jmp loc_1004B0F  +
push 0  +
push 2  +
push 100003h  +
lea eax [ebp+var_38] +
push eax  +
push hProcess  +
push dword_10086E0  +
push 0FFFFFFFFh  +
call ebx  +
test eax eax +
jge loc_1004A4F  +
push eax  +
mov dword ptr [edi] 10h +
call esi  +
test eax eax +
jle loc_1004A1F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1004A4F  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 6Fh  +
jmp loc_1004B0F  +
push 0  +
push 2  +
push 1F0001h  +
lea eax [ebp+var_34] +
push eax  +
push hProcess  +
push hHandle  +
push 0FFFFFFFFh  +
call ebx  +
test eax eax +
jge loc_1004AB4  +
push eax  +
mov dword ptr [edi] 10h +
call esi  +
test eax eax +
jle loc_1004A87  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1004AB4  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 70h  +
jmp loc_1004B0F  +
push 2  +
push 2  +
push 0F001Fh  +
lea eax [ebp+var_30] +
push eax  +
push hProcess  +
push hFileMappingObject  +
push 0FFFFFFFFh  +
call ebx  +
test eax eax +
jge loc_1004B1C  +
push eax  +
mov dword ptr [edi] 20h +
call esi  +
test eax eax +
jle loc_1004AEC  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1004B1C  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1004B2A  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004B2A  +
push [ebp+var_4]  +
push offset dword_10012C0  +
push 71h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
jmp loc_1004B2A  +
mov edi lpBaseAddress +
push 10h  +
pop ecx  +
lea esi [ebp+var_44] +
movs   +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+Handles] 0 +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+var_C] +
stos   +
stos   +
mov eax dword_100891C +
or edi 0FFFFFFFFh +
test eax eax +
jz loc_1004B8C  +
mov edi eax +
imul edi edi +
mov ecx off_1008000 +
mov esi offset off_1008000 +
cmp ecx esi +
jz loc_1004B91  +
test byte ptr [ecx+1Ch] 8 +
jz loc_1004B91  +
push eax  +
push offset dword_10012C0  +
push 23h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
jmp loc_1004B91  +
mov esi offset off_1008000 +
cmp [ebp+arg_0] 0 +
mov eax dword_10086D4 +
jnz loc_1004BA1  +
mov eax hProcess +
mov [ebp+Handles] eax +
mov eax dword_10086DC +
mov [ebp+var_C] eax +
mov eax dword_10086E8 +
push edi  +
mov [ebp+var_8] eax +
push 0  +
lea eax [ebp+Handles] +
push eax  +
push 3  +
call ds:WaitForMultipleObjects  +
mov [ebp+var_4] eax +
cmp eax 102h +
jnz loc_1004C15  +
cmp edi 0FFFFFFFFh +
jz loc_1004C2B  +
push hProcess  +
call sub_1003102  +
test eax eax +
jge loc_1004C06  +
push eax  +
mov dword ptr [ebx] 10000h +
call ds:RtlNtStatusToDosError  +
test eax eax +
jle loc_1004BFC  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jl loc_1004D6C  +
mov [ebp+arg_0] 1 +
or edi 0FFFFFFFFh +
jmp loc_1004B91  +
test eax eax +
jz loc_1004D1A  +
cmp eax 1 +
jz loc_1004C5D  +
cmp eax 2 +
jz loc_1004CD8  +
mov eax 80004005h +
mov dword ptr [ebx] 800h +
mov edi eax +
mov ecx off_1008000 +
cmp ecx esi +
jz loc_1004D12  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1004D12  +
push eax  +
push offset dword_10012C0  +
push 25h  +
jmp loc_1004D07  +
mov eax large fs:18h +
push dwMaximumSizeLow  +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov esi eax +
test esi esi +
jz loc_1004D41  +
push dwMaximumSizeLow  +
push lpBaseAddress  +
push esi  +
call memcpy  +
add esp 0Ch +
push esi  +
push dwProcessId  +
push hProcess  +
call sub_10032D3  +
test al al +
jz loc_1004D8B  +
push 0  +
push dword_10086E0  +
call ds:NtSetEvent  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov esi offset off_1008000 +
cmp [ebp+var_4] 2 +
jnz loc_1004B91  +
mov eax 80004005h +
mov dword ptr [ebx] 1000h +
mov edi eax +
mov ecx off_1008000 +
cmp ecx esi +
jz loc_1004D12  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1004D12  +
push eax  +
push offset dword_10012C0  +
push 28h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov eax 80004005h +
mov dword ptr [ebx] 80h +
mov edi eax +
mov ecx off_1008000 +
cmp ecx esi +
jz loc_1004D12  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1004D12  +
push eax  +
push offset dword_10012C0  +
push 26h  +
jmp loc_1004D07  +
mov eax 80004005h +
mov dword ptr [ebx] 100h +
mov edi eax +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_1004D12  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1004D12  +
push eax  +
push offset dword_10012C0  +
push 27h  +
jmp loc_1004D07  +
mov eax off_1008000 +
cmp eax esi +
jz loc_1004D12  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004D12  +
push edi  +
push offset dword_10012C0  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
jmp loc_1004D0D  +
xor edi edi +
push edi  +
push dword_10086E0  +
call ds:NtSetEvent  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov eax dword_10089B0 +
dec eax  +
jz loc_1004DE7  +
dec eax  +
jz loc_1004DD7  +
dec eax  +
mov edi 80004005h +
jz loc_1004DCC  +
mov dword ptr [ebx] 800h +
jmp loc_1004D12  +
mov dword ptr [ebx] 400h +
jmp loc_1004D12  +
mov dword ptr [ebx] 200h +
mov edi 80004005h +
jmp loc_1004D12  +
push CreationTime.dwHighDateTime  +
push CreationTime.dwLowDateTime  +
call sub_1002821  +
test al al +
jnz loc_1004D12  +
mov dword ptr [ebx] 800h +
jmp loc_1004DDD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 444h +
mov eax dword_1008010 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor ecx ecx +
xor eax eax +
mov [ebp+ExitTime.dwLowDateTime] ecx +
lea edi [ebp+ExitTime.dwHighDateTime] +
stos   +
mov [ebp+KernelTime.dwLowDateTime] ecx +
lea edi [ebp+KernelTime.dwHighDateTime] +
stos   +
mov esi 206h +
mov [ebp+UserTime.dwLowDateTime] ecx +
lea edi [ebp+UserTime.dwHighDateTime] +
push esi  +
stos   +
mov [ebp+PathName] ax +
push ecx  +
lea eax [ebp-412h] +
push eax  +
mov [ebp+var_42C] ecx +
mov [ebp+var_424] ecx +
call memset  +
xor eax eax +
push esi  +
mov word ptr [ebp+var_20C] ax +
xor esi esi +
lea eax [ebp+var_20C+2] +
push esi  +
push eax  +
call memset  +
add esp 18h +
mov [ebp+var_428] esi +
mov [ebp+var_418] 1 +
mov [ebp+var_420] esi +
mov [ebp+var_41C] esi +
mov edi offset unk_1008D20 +
push edi  +
call sub_10019FC  +
push offset aMicrosoftRelia  +
mov dword_1008D40 offset dword_10012B0 +
mov off_1008000 edi +
call sub_1001ACD  +
push esi  +
push esi  +
push 1  +
push esi  +
call ds:HeapSetInformation  +
mov eax offset dword_1008258 +
push ebx  +
push [ebp+arg_0]  +
mov dword_100825C eax +
mov dword_1008258 eax +
mov eax offset dword_1008248 +
mov dword_100824C eax +
mov dword_1008248 eax +
call sub_1001B60  +
test eax eax +
jge loc_1004F14  +
or eax 0FFFFFFFFh +
jmp loc_100585E  +
push offset aUnknown  +
push 41h  +
push offset unk_1008920  +
call sub_1002EAA  +
mov ecx 80070057h +
mov esi offset dword_10012C0 +
mov edi offset off_1008000 +
cmp eax ecx +
jnz loc_1004F56  +
mov eax off_1008000 +
cmp eax edi +
jz loc_1004F56  +
test byte ptr [eax+1Ch] 1 +
jz loc_1004F56  +
push ecx  +
push esi  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
and dword_1008900 0 +
and dword_1008904 0 +
push offset dword_1008900  +
push offset dword_1001260  +
call sub_1006B45  +
test eax eax +
jge loc_1004F96  +
mov ecx off_1008000 +
cmp ecx edi +
jz loc_1004F96  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1004F96  +
push eax  +
push esi  +
push 0Bh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
lea eax [ebp+PathName] +
push eax  +
mov ebx 104h +
push ebx  +
call ds:GetTempPathW  +
mov esi ds:GetLastError +
test eax eax +
jz loc_1004FB7  +
cmp eax ebx +
jbe loc_1005009  +
mov [ebp+var_418] 2 +
call esi  +
test eax eax +
jle loc_1004FD1  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_1005009  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
jmp loc_1005621  +
push offset TempFileName  +
push 0  +
push offset PrefixString  +
lea eax [ebp+PathName] +
push eax  +
call ds:GetTempFileNameW  +
test eax eax +
jnz loc_100506A  +
mov [ebp+var_418] 2 +
call esi  +
test eax eax +
jle loc_1005040  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_100506A  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 0Dh  +
jmp loc_1004FF9  +
push offset TempFileName  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_10050C0  +
mov [ebp+var_418] 2 +
call esi  +
test eax eax +
jle loc_1005093  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_10050C0  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 0Eh  +
jmp loc_1004FF9  +
push 0  +
push offset TempFileName  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_1005118  +
mov [ebp+var_418] 2 +
call esi  +
test eax eax +
jle loc_10050EB  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_1005118  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 0Fh  +
jmp loc_1004FF9  +
push dwProcessId  +
mov byte_10086C4 1 +
push offset TempFileName  +
push offset aSResults_U_hlk  +
push ebx  +
push offset word_1008268  +
call sub_1002F19  +
mov edi eax +
add esp 14h +
mov esi 8007007Ah +
test edi edi +
jz loc_1005177  +
cmp edi esi +
jz loc_1005177  +
test edi edi +
jge loc_1005177  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 10h  +
jmp loc_1004FF9  +
push dwProcessId  +
push offset TempFileName  +
push offset aSMinidump_U_dm  +
push ebx  +
push offset FileName  +
call sub_1002F19  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_10051CA  +
cmp edi esi +
jz loc_10051CA  +
test edi edi +
jge loc_10051CA  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 11h  +
jmp loc_1004FF9  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_10051F8  +
test byte ptr [eax+1Ch] 8 +
jz loc_10051F8  +
push offset FileName  +
push offset word_1008268  +
push offset dword_10012C0  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001896  +
xor esi esi +
push esi  +
push 80h  +
push 2  +
push esi  +
push esi  +
push 10000000h  +
push offset word_1008268  +
call ds:CreateFileW  +
mov hFile eax +
cmp eax esi +
jz loc_1005222  +
cmp eax 0FFFFFFFFh +
jnz loc_100526F  +
mov [ebp+var_418] 4 +
call ds:GetLastError  +
cmp eax esi +
mov esi 80070000h +
jle loc_1005242  +
and eax 0FFFFh +
or eax esi +
mov edi eax +
test edi edi +
jge loc_1005274  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 13h  +
jmp loc_1004FF9  +
mov esi 80070000h +
mov eax dwProcessId +
mov byte_10086C5 1 +
call sub_1002AAE  +
mov hProcess eax +
test eax eax +
jnz loc_10052C4  +
mov [ebp+var_418] 8 +
mov edi 80004005h +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 14h  +
jmp loc_1004FF9  +
push ebx  +
lea ecx [ebp+var_20C] +
push ecx  +
push eax  +
call sub_1004267  +
test eax eax +
jl loc_10052E2  +
lea eax [ebp+var_20C] +
mov [ebp+var_428] eax +
mov edi ds:GetProcessHeap +
push 41h  +
push offset unk_1008920  +
push hProcess  +
call edi  +
push eax  +
call sub_10069F1  +
test eax eax +
jge loc_1005328  +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_1005328  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1005328  +
push eax  +
push offset dword_10012C0  +
push 15h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
lea eax [ebp+UserTime] +
push eax  +
lea eax [ebp+KernelTime] +
push eax  +
lea eax [ebp+ExitTime] +
push eax  +
push offset CreationTime  +
push hProcess  +
call ds:GetProcessTimes  +
test eax eax +
jnz loc_1005392  +
call ds:GetLastError  +
mov ebx 0FFFFh +
test eax eax +
jle loc_1005365  +
and eax ebx +
or eax esi +
mov ecx eax +
test ecx ecx +
jge loc_1005397  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005397  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005397  +
push ecx  +
push offset dword_10012C0  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10019D0  +
jmp loc_1005397  +
mov ebx 0FFFFh +
push hProcess  +
call sub_1002C9F  +
test eax eax +
jz loc_10053AD  +
or Buffer 4 +
lea eax [ebp+var_424] +
push eax  +
lea eax [ebp+var_42C] +
push eax  +
push dwProcessId  +
call edi  +
push eax  +
call sub_10060B3  +
test eax eax +
jge loc_10053F4  +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_10053F4  +
test byte ptr [ecx+1Ch] 1 +
jz loc_10053F4  +
push eax  +
push offset dword_10012C0  +
push 17h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
lea eax [ebp+var_418] +
push eax  +
lea eax [ebp+var_41C] +
push eax  +
call sub_1004485  +
mov edi eax +
test edi edi +
jge loc_1005434  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 18h  +
jmp loc_1004FF9  +
push 1  +
push offset HandlerRoutine  +
call ds:SetConsoleCtrlHandler  +
test eax eax +
jnz loc_1005480  +
call ds:GetLastError  +
test eax eax +
jle loc_1005453  +
and eax ebx +
or eax esi +
mov edi eax +
test edi edi +
jge loc_1005480  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 19h  +
jmp loc_1004FF9  +
cmp byte_100800C 0 +
jnz loc_10054D2  +
push 1  +
push 1  +
call ds:SetProcessShutdownParameters  +
test eax eax +
jnz loc_10054D2  +
call ds:GetLastError  +
test eax eax +
jle loc_10054A5  +
and eax ebx +
or eax esi +
mov edi eax +
test edi edi +
jge loc_10054D2  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 1Ah  +
jmp loc_1004FF9  +
cmp [ebp+var_41C] 0 +
jz loc_10054E8  +
push hProcess  +
call sub_1003102  +
jmp loc_10054F3  +
mov ecx hProcess +
call sub_1002998  +
test eax eax +
jge loc_100554C  +
mov ecx [ebp+var_41C] +
neg ecx  +
sbb ecx ecx +
and ecx 0FFC0h +
add ecx 40h +
push eax  +
mov [ebp+var_418] ecx +
call ds:RtlNtStatusToDosError  +
test eax eax +
jle loc_100551F  +
and eax ebx +
or eax esi +
mov edi eax +
test edi edi +
jge loc_100554C  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 1Bh  +
jmp loc_1004FF9  +
push CreationTime.dwHighDateTime  +
mov ebx offset unk_1008920 +
push CreationTime.dwLowDateTime  +
push dwProcessId  +
push 41h  +
push offset loc_1001270  +
push dword_1008904  +
push dword_1008900  +
call sub_100356A  +
test eax eax +
jge loc_10055A8  +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_10055B2  +
test byte ptr [ecx+1Ch] 1 +
jz loc_10055B2  +
push eax  +
push offset dword_10012C0  +
push 1Ch  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
jmp loc_10055B2  +
mov [ebp+var_420] 1 +
cmp byte_100891B 0 +
jnz loc_10057BA  +
push 0FFFFFFFFh  +
push hHandle  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_1005607  +
call ds:GetLastError  +
test eax eax +
jle loc_10055E2  +
and eax 0FFFFh +
or eax esi +
mov edi eax +
test edi edi +
jge loc_1005607  +
mov eax off_1008000 +
cmp eax offset off_1008000 +
jz loc_1005621  +
test byte ptr [eax+1Ch] 1 +
jz loc_1005621  +
push edi  +
push offset dword_10012C0  +
push 1Dh  +
jmp loc_1004FF9  +
push [ebp+var_41C]  +
lea ebx [ebp+var_418] +
mov byte_10086C7 1 +
call sub_1004B39  +
mov edi eax +
call sub_1002FB4  +
test edi edi +
jl loc_1005712  +
cmp byte_1008918 0 +
jz loc_10056B2  +
push dword_100890C  +
push dword_1008908  +
push dword_1008694  +
push dword_1008690  +
push dword_100869C  +
push dword_1008698  +
push [ebp+var_424]  +
push [ebp+var_42C]  +
push dword_10088FC  +
push offset unk_1008920  +
push [ebp+var_428]  +
push offset word_1008268  +
push offset FileName  +
call sub_10037E7  +
test eax eax +
jge loc_10056B2  +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_10056B2  +
test byte ptr [ecx+1Ch] 1 +
jz loc_10056B2  +
push eax  +
push offset dword_10012C0  +
push 1Eh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
push CreationTime.dwHighDateTime  +
mov ebx offset unk_1008920 +
push CreationTime.dwLowDateTime  +
push dwProcessId  +
push 41h  +
push offset dword_1001280  +
push dword_1008904  +
push dword_1008900  +
call sub_100356A  +
test eax eax +
jge loc_10057BA  +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_10057BA  +
test byte ptr [ecx+1Ch] 1 +
jz loc_10057BA  +
push eax  +
push offset dword_10012C0  +
push 1Fh  +
jmp loc_10057AF  +
cmp [ebp+var_420] 0 +
push [ebp+var_418]  +
mov byte_1008919 1 +
push CreationTime.dwHighDateTime  +
mov edi offset unk_1008920 +
push CreationTime.dwLowDateTime  +
push dwProcessId  +
push 41h  +
jnz loc_1005779  +
push offset dword_1001290  +
push dword_1008904  +
push dword_1008900  +
call sub_100369E  +
test eax eax +
jge loc_10057BA  +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_10057BA  +
test byte ptr [ecx+1Ch] 1 +
jz loc_10057BA  +
push eax  +
push offset dword_10012C0  +
push 20h  +
jmp loc_10057AF  +
push offset dword_10012A0  +
push dword_1008904  +
push dword_1008900  +
call sub_100369E  +
test eax eax +
jge loc_10057BA  +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_10057BA  +
test byte ptr [ecx+1Ch] 1 +
jz loc_10057BA  +
push eax  +
push offset dword_10012C0  +
push 21h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
cmp byte_1008919 0 +
jz loc_100581B  +
cmp byte_10086C5 0 +
jz loc_10057F3  +
mov eax hFile +
test eax eax +
jz loc_10057E8  +
cmp eax 0FFFFFFFFh +
jz loc_10057E8  +
push eax  +
call ds:NtClose  +
and hFile 0 +
push offset word_1008268  +
call ds:DeleteFileW  +
cmp byte_10086C6 0 +
jz loc_1005807  +
push offset FileName  +
call ds:DeleteFileW  +
cmp byte_10086C4 0 +
jz loc_100581B  +
push offset TempFileName  +
call ds:RemoveDirectoryW  +
push dword_1008904  +
push dword_1008900  +
call sub_1006B79  +
test eax eax +
jge loc_1005857  +
mov ecx off_1008000 +
cmp ecx offset off_1008000 +
jz loc_1005857  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1005857  +
push eax  +
push offset dword_10012C0  +
push 22h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10019D0  +
call sub_1001B1B  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005BFD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10058A5  +
test eax eax +
jnz loc_10058AA  +
mov ecx [esi] +
test ecx ecx +
jz loc_10058A2  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1005896  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_10089D8 +
push offset dword_10089C8  +
push dword_10089D4  +
mov dword_10089C8 eax +
push offset dword_10089B8  +
push offset dword_10089BC  +
push offset dword_10089B4  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_10089C4 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1005932  +
cmp eax esi +
jnz loc_1005925  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1005935  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100590C  +
xor esi esi +
inc esi  +
mov eax dword_1008D4C +
cmp eax esi +
jnz loc_1005948  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1005983  +
mov eax dword_1008D4C +
test eax eax +
jnz loc_100597D  +
mov dword_1008D4C esi +
push offset dword_1001224  +
push offset dword_1001218  +
call sub_1005889  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005983  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1005A4D  +
mov dword_10089D0 esi +
mov eax dword_1008D4C +
cmp eax esi +
jnz loc_10059A7  +
push offset dword_1001214  +
push offset dword_100120C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1008D4C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_10059B4  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1008D54 ebx +
jz loc_10059D5  +
push offset dword_1008D54  +
call sub_1005D09  +
pop ecx  +
test eax eax +
jz loc_10059D5  +
push ebx  +
push 2  +
push ebx  +
call dword_1008D54  +
push dword_10089B8  +
push dword_10089BC  +
push dword_10089B4  +
call sub_1004E0D  +
add esp 0Ch +
mov dword_10089CC eax +
cmp dword_10089C0 ebx +
jnz loc_1005A33  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_10089CC eax +
xor ebx ebx +
cmp dword_10089C0 ebx +
jnz loc_1005A33  +
push eax  +
call ds:_exit  +
cmp dword_10089D0 ebx +
jnz loc_1005A41  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_10089CC +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1005A6A  +
xor eax eax +
jmp loc_1005AB7  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1005A66  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1005AA4  +
cmp ecx 20Bh +
jnz loc_1005A66  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1005A66  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1005AB2  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1005A66  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_10089C0 eax +
call sub_1005EA2  +
push eax  +
call ds:__set_app_type  +
or dword_1008D44 0FFFFFFFFh +
or dword_1008D48 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10089E0 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10089DC +
mov [eax] ecx +
call sub_1005E34  +
cmp dword_1008020 0 +
jnz loc_1005B10  +
push offset sub_1005E34  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1005E1C  +
xor eax eax +
retn   +
***
call sub_1005EE1  +
jmp sub_10058EA  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_1005B69  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_1005BB2  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_1005BF3  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_1005BC0  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_1005BEE  +
cmp edx [esp+arg_4] +
ja loc_1005BEE  +
jb loc_1005BEF  +
cmp eax [esp+arg_0] +
jbe loc_1005BEF  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
cmp ecx dword_1008010 +
jnz loc_1005C08  +
retn 0  +
jmp loc_1005F78  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1005C4F  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1005C4F  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1005C49  +
cmp eax 19930521h +
jz loc_1005C49  +
cmp eax 19930522h +
jz loc_1005C49  +
cmp eax 1994000h +
jnz loc_1005C4F  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1005C10+2)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1005C96  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1005C92  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1005CFD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1005CF5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1005CFF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1005CE5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1005C80  +
pop ecx  +
test eax eax +
jz loc_1005D66  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1005CC0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005D66  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1005D6F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1005BFD  +
push offset dword_1008010  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1005E95  +
cmp ecx 0FFFFFFFFh +
jz loc_1005E95  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1005E8E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1005E8E  +
cmp edx 10000000h +
jnb loc_1005E8E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1005E8E  +
jmp loc_1005E89  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1005ED7  +
push eax  +
call sub_1005E3C  +
test eax eax +
jz loc_1005ED7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1005ECC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1005ED7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1008010 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1005F13  +
test eax ebx +
jz loc_1005F13  +
not eax  +
mov dword_1008014 eax +
jmp loc_1005F6E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1005F5A  +
test dword_1008010 ebx +
jnz loc_1005F5F  +
mov esi 0BB40E64Fh +
mov dword_1008010 esi +
not esi  +
mov dword_1008014 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1008AE8 eax +
mov dword_1008AE4 ecx +
mov dword_1008AE0 edx +
mov dword_1008ADC ebx +
mov dword_1008AD8 esi +
mov dword_1008AD4 edi +
mov word_1008B00 ss +
mov word_1008AF4 cs +
mov word_1008AD0 ds +
mov word_1008ACC es +
mov word_1008AC8 fs +
mov word_1008AC4 gs +
pushf   +
pop dword_1008AF8  +
mov eax [ebp+0] +
mov dword_1008AEC eax +
mov eax [ebp+4] +
mov dword_1008AF0 eax +
lea eax [ebp+8] +
mov dword_1008AFC eax +
mov eax [ebp-320h] +
mov dword_1008A38 10001h +
mov eax dword_1008AF0 +
mov dword_10089F4 eax +
mov dword_10089E8 0C0000409h +
mov dword_10089EC 1 +
mov eax dword_1008010 +
mov [ebp-328h] eax +
mov eax dword_1008014 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_1008010 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov [ebp+hHeap] eax +
mov eax [ebp+arg_C] +
push edi  +
mov [ebp+var_224] eax +
xor eax eax +
xor esi esi +
push 206h  +
mov [ebp+tstrFilename] ax +
lea eax [ebp-20Ah] +
push esi  +
push eax  +
mov [ebp+var_22C] ebx +
xor edi edi +
mov [ebp+dwHandle] esi +
call memset  +
add esp 0Ch +
mov [ebp+lpMem] esi +
mov [ebp+lpBuffer] esi +
mov [ebp+puLen] esi +
cmp [ebp+hHeap] esi +
jz loc_10062E2  +
cmp [ebp+hHeap] 0FFFFFFFFh +
jz loc_10062E2  +
cmp ebx esi +
jz loc_10062E2  +
mov eax [ebp+var_224] +
cmp eax esi +
jz loc_10062E2  +
push [ebp+dwProcessId]  +
mov [ebx] esi +
push esi  +
push 410h  +
mov [eax] esi +
call ds:OpenProcess  +
mov [ebp+hObject] eax +
mov ebx 80070000h +
cmp eax esi +
jnz loc_100618C  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1006182  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp edi esi +
jl loc_10062DE  +
push 104h  +
lea eax [ebp+tstrFilename] +
push eax  +
push esi  +
push [ebp+hObject]  +
call K32GetModuleFileNameExW  +
test eax eax +
jnz loc_10061C3  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10061B9  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp edi esi +
jl loc_1006286  +
lea eax [ebp+dwHandle] +
push eax  +
lea eax [ebp+tstrFilename] +
push eax  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax esi +
jnz loc_1006200  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10061F1  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp edi esi +
jl loc_1006286  +
jmp loc_1006284  +
push eax  +
push esi  +
push [ebp+hHeap]  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_100621D  +
mov edi 8007000Eh +
cmp edi esi +
jl loc_1006286  +
push eax  +
push [ebp+dwLen]  +
lea eax [ebp+tstrFilename] +
push [ebp+dwHandle]  +
push eax  +
call GetFileVersionInfoW  +
test eax eax +
jz loc_100627E  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+lpMem]  +
call VerQueryValueW  +
test eax eax +
jz loc_100627E  +
mov eax [ebp+lpBuffer] +
mov ecx [eax+8] +
mov edx [ebp+var_22C] +
mov [edx] ecx +
mov eax [eax+0Ch] +
mov ecx [ebp+var_224] +
mov [ecx] eax +
jmp loc_1006284  +
call ds:GetLastError  +
xor edi edi +
cmp [ebp+hObject] esi +
jz loc_10062BA  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_10062BA  +
push [ebp+hObject]  +
call ds:CloseHandle  +
test eax eax +
jnz loc_10062BA  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10062B8  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp [ebp+lpMem] esi +
jz loc_10062DE  +
push [ebp+lpMem]  +
push esi  +
push [ebp+hHeap]  +
call ds:HeapFree  +
test eax eax +
jnz loc_10062DE  +
mov edi 8007000Eh +
mov eax edi +
jmp loc_10062E7  +
mov eax 80070057h +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005BFD  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hObject] +
push eax  +
xor ebx ebx +
push 28h  +
mov [ebp+hObject] ebx +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jnz loc_1006345  +
and [ebp+hObject] ebx +
call ds:GetLastError  +
test eax eax +
jle loc_100633F  +
and eax edi +
or eax esi +
mov ebx eax +
test ebx ebx +
jl loc_10063AA  +
lea eax [ebp+NewState.Privileges] +
push eax  +
push offset Name  +
push 0  +
mov [ebp+NewState.PrivilegeCount] 1 +
call ds:LookupPrivilegeValueW  +
test eax eax +
jnz loc_1006375  +
call ds:GetLastError  +
test eax eax +
jle loc_100636F  +
and eax edi +
or eax esi +
mov ebx eax +
test ebx ebx +
jl loc_10063AA  +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
and eax 2 +
mov [ebp+NewState.Privileges.Attributes] eax +
xor eax eax +
push eax  +
push eax  +
push 10h  +
lea ecx [ebp+NewState] +
push ecx  +
push eax  +
push [ebp+hObject]  +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_10063AA  +
call ds:GetLastError  +
test eax eax +
jle loc_10063A8  +
and eax edi +
or eax esi +
mov ebx eax +
cmp [ebp+hObject] 0 +
jz loc_10063D3  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_10063D3  +
push [ebp+hObject]  +
call ds:CloseHandle  +
test eax eax +
jnz loc_10063D3  +
call ds:GetLastError  +
test eax eax +
jle loc_10063D1  +
and eax edi +
or eax esi +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_C] +
mov edx [ecx] +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
xor eax eax +
mov dword ptr [ecx] 1 +
mov ecx [ebp+arg_0] +
push edi  +
mov [ebp+var_4] edx +
cmp [ebp+arg_4] eax +
jz loc_100640E  +
mov edx [ebp+arg_4] +
add [ebp+arg_4] 4 +
mov [edx] esi +
cmp word ptr [ecx] 22h +
push 2  +
pop edi  +
jnz loc_100645B  +
add ecx edi +
jmp loc_1006434  +
test dx dx +
jz loc_100643D  +
add eax edi +
test esi esi +
jz loc_1006432  +
mov ebx [ebp+arg_10] +
cmp eax [ebx] +
jg loc_1006432  +
mov [esi] dx +
add esi edi +
add ecx edi +
movzx edx word ptr [ecx] +
cmp dx 22h +
jnz loc_100641B  +
add eax edi +
test esi esi +
jz loc_1006451  +
mov edx [ebp+arg_10] +
cmp eax [edx] +
jg loc_1006451  +
xor edx edx +
mov [esi] dx +
add esi edi +
cmp word ptr [ecx] 22h +
jnz loc_1006495  +
add ecx edi +
jmp loc_1006495  +
add eax edi +
test esi esi +
jz loc_1006470  +
mov edx [ebp+arg_10] +
cmp eax [edx] +
jg loc_1006470  +
mov dx [ecx] +
mov [esi] dx +
add esi edi +
movzx edx word ptr [ecx] +
add ecx edi +
cmp dx 20h +
ja loc_100645B  +
test dx dx +
jnz loc_1006484  +
sub ecx edi +
jmp loc_1006495  +
test esi esi +
jz loc_1006495  +
mov edx [ebp+arg_10] +
cmp eax [edx] +
jg loc_1006495  +
xor edx edx +
mov [esi-2] dx +
and [ebp+arg_8] 0 +
xor ebx ebx +
cmp [ecx] bx +
jz loc_10065A8  +
movzx edx word ptr [ecx] +
cmp dx 20h +
jz loc_10064B3  +
cmp dx 9 +
jnz loc_10064B7  +
add ecx edi +
jmp loc_10064A4  +
cmp [ecx] bx +
jz loc_10065A8  +
mov edx [ebp+arg_C] +
cmp [ebp+arg_4] ebx +
jz loc_10064D8  +
mov ebx [ebp+var_4] +
cmp [edx] ebx +
jge loc_10064D8  +
mov ebx [ebp+arg_4] +
add [ebp+arg_4] 4 +
mov [ebx] esi +
inc dword ptr [edx]  +
xor ebx ebx +
inc ebx  +
and [ebp+arg_0] 0 +
jmp loc_10064E8  +
add ecx edi +
inc [ebp+arg_0]  +
cmp word ptr [ecx] 5Ch +
jz loc_10064E3  +
cmp word ptr [ecx] 22h +
jnz loc_1006549  +
movzx edx word ptr [ebp+arg_0] +
and edx 80000001h +
jns loc_1006505  +
dec edx  +
or edx 0FFFFFFFEh +
inc edx  +
jnz loc_1006527  +
cmp [ebp+arg_8] 0 +
jz loc_100651A  +
lea edx [ecx+2] +
cmp word ptr [edx] 22h +
jnz loc_100651A  +
mov ecx edx +
jmp loc_100651C  +
xor ebx ebx +
xor edx edx +
cmp [ebp+arg_8] edx +
setz dl  +
mov [ebp+arg_8] edx +
shr word ptr [ebp+arg_0] 1 +
jmp loc_1006549  +
add [ebp+arg_0] 0FFFFh +
add eax edi +
test esi esi +
jz loc_1006549  +
mov edx [ebp+arg_10] +
cmp eax [edx] +
jg loc_1006549  +
push 5Ch  +
pop edx  +
mov [esi] dx +
add esi edi +
cmp word ptr [ebp+arg_0] 0 +
jnz loc_100652D  +
movzx edx word ptr [ecx] +
test dx dx +
jz loc_1006587  +
cmp [ebp+arg_8] 0 +
jnz loc_100656A  +
cmp dx 20h +
jz loc_1006587  +
cmp dx 9 +
jz loc_1006587  +
test ebx ebx +
jz loc_1006580  +
add eax edi +
test esi esi +
jz loc_1006580  +
mov ebx [ebp+arg_10] +
cmp eax [ebx] +
jg loc_1006580  +
mov [esi] dx +
add esi edi +
add ecx edi +
jmp loc_10064DA  +
add eax edi +
test esi esi +
jz loc_1006499  +
mov edx [ebp+arg_10] +
cmp eax [edx] +
jg loc_1006499  +
xor edx edx +
mov [esi] dx +
add esi edi +
jmp loc_1006499  +
pop edi  +
cmp esi ebx +
pop esi  +
pop ebx  +
jz loc_10065BD  +
mov edx [ebp+arg_10] +
xor ecx ecx +
cmp eax [edx] +
setle cl  +
mov eax ecx +
jmp locret_10065C5  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
xor eax eax +
inc eax  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_1008010 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_210] ebx +
cmp esi ebx +
jz loc_1006692  +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
push ebx  +
call ds:GetModuleFileNameW  +
xor eax eax +
cmp [edi] ax +
jnz loc_100661C  +
lea edi [ebp+Filename] +
lea ecx [ebp+var_210] +
push ecx  +
push esi  +
push eax  +
push eax  +
push edi  +
mov dword ptr [esi] 1 +
call sub_10063E1  +
mov eax [esi] +
test eax eax +
jle loc_100668B  +
mov ecx [ebp+var_210] +
mov edx 7FFFFFFFh +
sub edx ecx +
shr edx 2 +
dec edx  +
cmp eax edx +
jg loc_100668B  +
lea eax [ecx+eax*4+4] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1006687  +
lea eax [ebp+var_210] +
push eax  +
mov eax [esi] +
push esi  +
lea eax [ebx+eax*4+4] +
push eax  +
push ebx  +
push edi  +
call sub_10063E1  +
test eax eax +
jnz loc_100669A  +
push ebx  +
call ds:LocalFree  +
xor ebx ebx +
push 0Dh  +
jmp loc_1006694  +
push 8  +
jmp loc_1006694  +
push 216h  +
jmp loc_1006694  +
push 57h  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1005BFD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
xor esi esi +
mov [ebp+hSCObject] esi +
mov [ebp+var_1C] esi +
mov [ebp+lpMem] esi +
mov [ebp+dwBytes] esi +
mov [ebp+pcbBytesNeeded] esi +
mov [ebp+var_4] esi +
mov [ebp+var_24] esi +
mov [ebp+hMem] esi +
mov [ebp+var_28] esi +
cmp [ebp+hHeap] esi +
jz loc_10066ED  +
cmp [ebp+hHeap] 0FFFFFFFFh +
jz loc_10066ED  +
cmp dword ptr [ebp+arg_8] esi +
jz loc_10066ED  +
cmp [ebp+arg_C] esi +
jnz loc_10066F7  +
mov esi 80070057h +
jmp loc_10069E5  +
push ebx  +
push edi  +
push 4  +
push offset DatabaseName  +
push esi  +
call ds:OpenSCManagerW  +
mov [ebp+hSCManager] eax +
mov ebx 80070000h +
cmp eax esi +
jnz loc_1006730  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1006724  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_1006991  +
xor esi esi +
mov edi ds:EnumServicesStatusExW +
push esi  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
push esi  +
push 1  +
push 30h  +
push esi  +
push [ebp+hSCManager]  +
call edi  +
test eax eax +
jnz loc_1006760  +
call ds:GetLastError  +
cmp eax 0EAh +
jz loc_100677D  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1006771  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_1006991  +
xor esi esi +
push [ebp+dwBytes]  +
push esi  +
push [ebp+hHeap]  +
call ds:HeapAlloc  +
mov [ebp+var_1C] eax +
cmp eax esi +
jnz loc_100679B  +
mov esi 8007000Eh +
jmp loc_1006991  +
push esi  +
lea ecx [ebp+var_24] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+dwBytes] +
push ecx  +
push [ebp+dwBytes]  +
mov [ebp+var_24] esi +
push eax  +
push 1  +
push 30h  +
push esi  +
push [ebp+hSCManager]  +
call edi  +
test eax eax +
jnz loc_10067DA  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10067CE  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_1006991  +
xor esi esi +
xor eax eax +
cmp [ebp+var_4] esi +
jbe loc_10067FC  +
mov edx [ebp+var_1C] +
lea ecx [edx+24h] +
mov edi [ecx] +
cmp edi [ebp+arg_4] +
jz loc_10067F7  +
inc eax  +
add ecx 2Ch +
cmp eax [ebp+var_4] +
jb loc_10067E7  +
cmp eax [ebp+var_4] +
jb loc_1006806  +
mov esi 80070490h +
jmp loc_1006991  +
imul eax eax +
add eax edx +
mov ecx [eax+8] +
cmp ecx 10h +
jnz loc_100681A  +
mov eax [eax] +
jmp loc_1006969  +
cmp ecx 20h +
jnz loc_100695F  +
push 1  +
push dword ptr [eax]  +
push [ebp+hSCManager]  +
call ds:OpenServiceW  +
mov [ebp+hSCObject] eax +
cmp eax esi +
jnz loc_1006858  +
call ds:GetLastError  +
cmp eax esi +
mov edi 0FFFFh +
jle loc_100684A  +
and eax edi +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_1006982  +
xor esi esi +
jmp loc_100685D  +
mov edi 0FFFFh +
lea eax [ebp+pcbBytesNeeded] +
push eax  +
push esi  +
push esi  +
push [ebp+hSCObject]  +
call ds:QueryServiceConfigW  +
test eax eax +
jnz loc_100687B  +
call ds:GetLastError  +
cmp eax 7Ah +
jz loc_1006895  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1006889  +
and eax edi +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_1006982  +
xor esi esi +
push [ebp+pcbBytesNeeded]  +
push esi  +
push [ebp+hHeap]  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_10068B3  +
mov esi 8007000Eh +
jmp loc_1006982  +
lea ecx [ebp+pcbBytesNeeded] +
push ecx  +
push [ebp+pcbBytesNeeded]  +
push eax  +
push [ebp+hSCObject]  +
call ds:QueryServiceConfigW  +
test eax eax +
jnz loc_10068E2  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10068D6  +
and eax edi +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_1006982  +
xor esi esi +
mov eax [ebp+lpMem] +
mov eax [eax+0Ch] +
lea ecx [ebp+var_28] +
push ecx  +
push eax  +
mov [ebp+arg_4] eax +
call sub_10065CE  +
mov edx eax +
mov [ebp+hMem] edx +
cmp edx esi +
jnz loc_1006917  +
call ds:GetLastError  +
cmp eax esi +
jle loc_100690C  +
and eax edi +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_1006982  +
mov edx [ebp+hMem] +
xor esi esi +
mov edi [ebp+var_28] +
xor eax eax +
cmp edi esi +
jle loc_1006958  +
mov ecx [edx+eax*4] +
push 2Dh  +
pop esi  +
cmp si [ecx] +
jnz loc_1006946  +
movzx ecx word ptr [ecx+2] +
push 6Bh  +
pop esi  +
cmp si cx +
jz loc_100693F  +
push 4Bh  +
pop esi  +
cmp si cx +
jnz loc_1006946  +
lea ecx [edi-1] +
cmp eax ecx +
jnz loc_100694D  +
inc eax  +
cmp eax edi +
jl loc_1006920  +
jmp loc_1006954  +
mov ecx [edx+eax*4+4] +
mov [ebp+arg_4] ecx +
cmp eax edi +
jl loc_1006966  +
mov esi 80070490h +
jmp loc_1006982  +
mov esi 80004005h +
jmp loc_1006991  +
mov eax [ebp+arg_4] +
push eax  +
push dword ptr [ebp+arg_8]  +
push offset aS_S  +
push [ebp+arg_C]  +
push dword ptr [ebp+arg_8]  +
call sub_1002F19  +
add esp 14h +
mov esi eax +
cmp [ebp+hSCObject] 0 +
jz loc_1006991  +
push [ebp+hSCObject]  +
call ds:CloseServiceHandle  +
xor ebx ebx +
cmp [ebp+hSCManager] ebx +
jz loc_10069A1  +
push [ebp+hSCManager]  +
call ds:CloseServiceHandle  +
mov edi ds:HeapFree +
cmp [ebp+lpMem] ebx +
jz loc_10069BE  +
push [ebp+lpMem]  +
push ebx  +
push [ebp+hHeap]  +
call edi  +
test eax eax +
jnz loc_10069BE  +
mov esi 8007000Eh +
cmp [ebp+var_1C] ebx +
jz loc_10069D5  +
push [ebp+var_1C]  +
push ebx  +
push [ebp+hHeap]  +
call edi  +
test eax eax +
jnz loc_10069D5  +
mov esi 8007000Eh +
cmp [ebp+hMem] ebx +
pop edi  +
pop ebx  +
jz loc_10069E5  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_1008010 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
push 206h  +
push eax  +
mov [ebp+var_20C] ax +
lea eax [ebp-20Ah] +
push eax  +
mov [ebp+hHeap] esi +
mov dword ptr [ebp+var_214] edi +
call memset  +
add esp 0Ch +
test esi esi +
jz loc_1006A58  +
cmp esi 0FFFFFFFFh +
jz loc_1006A58  +
test edi edi +
jz loc_1006A58  +
cmp edi 0FFFFFFFFh +
jz loc_1006A58  +
test ebx ebx +
jz loc_1006A58  +
cmp [ebp+arg_C] 0 +
jnz loc_1006A62  +
mov esi 80070057h +
jmp loc_1006B26  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push 0  +
push edi  +
call K32GetModuleFileNameExW  +
test eax eax +
jnz loc_1006A98  +
call ds:GetLastError  +
test eax eax +
jle loc_1006A8E  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jl loc_1006B26  +
lea eax [ebp+var_20C] +
push 5Ch  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1006B39  +
add eax 2 +
push eax  +
push [ebp+arg_C]  +
push ebx  +
call sub_1002EAA  +
mov esi eax +
test esi esi +
jz loc_1006AD0  +
cmp esi 8007007Ah +
jz loc_1006AD0  +
test esi esi +
jl loc_1006B26  +
mov edi ds:RtlInitUnicodeString +
push offset aSvchost_exe  +
lea eax [ebp+var_224] +
push eax  +
call edi  +
push ebx  +
lea eax [ebp+var_21C] +
push eax  +
call edi  +
push 0  +
lea eax [ebp+var_21C] +
push eax  +
lea eax [ebp+var_224] +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jz loc_1006B26  +
push [ebp+arg_C]  +
push ebx  +
push dword ptr [ebp+var_214]  +
call ds:GetProcessId  +
push eax  +
push [ebp+hHeap]  +
call sub_10066B2  +
mov esi eax +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005BFD  +
leave   +
retn 10h  +
mov esi 80004005h +
jmp loc_1006B26  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
xor esi esi +
push esi  +
push esi  +
push [ebp+arg_0]  +
call ds:EtwEventRegister  +
cmp eax esi +
jz loc_1006B6D  +
jle loc_1006B6B  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
xor esi esi +
push [ebp+arg_0]  +
call ds:EtwEventUnregister  +
test eax eax +
jz loc_1006B9F  +
jle loc_1006B9D  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push ebx  +
xor edi edi +
mov eax [esp+14h] +
or eax eax +
jge loc_1006BD1  +
inc edi  +
mov edx [esp+10h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+14h] eax +
mov [esp+10h] edx +
mov eax [esp+1Ch] +
or eax eax +
jge loc_1006BED  +
inc edi  +
mov edx [esp+18h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+1Ch] eax +
mov [esp+18h] edx +
or eax eax +
jnz loc_1006C09  +
mov ecx [esp+18h] +
mov eax [esp+14h] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+10h] +
div  ecx +
mov edx ebx +
jmp loc_1006C4A  +
mov ebx eax +
mov ecx [esp+18h] +
mov edx [esp+14h] +
mov eax [esp+10h] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_1006C17  +
div  ecx +
mov esi eax +
mul  dword ptr [esp+1Ch] +
mov ecx eax +
mov eax [esp+18h] +
mul  esi +
add edx ecx +
jb loc_1006C45  +
cmp edx [esp+14h] +
ja loc_1006C45  +
jb loc_1006C46  +
cmp eax [esp+10h] +
jbe loc_1006C46  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_1006C54  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
imul ebp [edi+6Eh] +
retf   +
***
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 756EC03Bh  +
***
