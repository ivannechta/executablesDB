or eax 52000000h +
push ebx  +
inc esp  +
push ebx  +
scas   +
jno near ptr locret_10018AF+1  +
retf 0F65Eh  +
***
mov edi edi +
push esi  +
xor esi esi +
inc esi  +
push esi  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
inc esi  +
cmp esi 25h +
jbe loc_1001921  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push 79h  +
pop esi  +
push esi  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
inc esi  +
cmp esi 92h +
jbe loc_100194C  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push 64h  +
pop esi  +
push esi  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
inc esi  +
cmp esi 71h +
jbe loc_100197A  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi 0FAh +
push esi  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
inc esi  +
cmp esi 107h +
jbe loc_10019A7  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A18h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 17h  +
pop ecx  +
mov esi offset aHardwareDescri +
lea edi [ebp+SubKey] +
movs   +
xor ebx ebx +
push 1A0h  +
mov [ebp+lpString] eax +
lea eax [ebp+var_5A6] +
push ebx  +
push eax  +
mov [ebp+phkResult] ebx +
mov [ebp+hKey] ebx +
movs   +
call memset  +
add esp 0Ch +
push 210h  +
mov [ebp+cbData] 1FCh +
mov [ebp+lpMem] ebx +
call sub_1007B22  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_1001C98  +
mov esi 0FFh +
mov ecx esi +
lea eax [ebp+var_A04] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001A5A  +
mov ecx esi +
lea eax [ebp+MachineName] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001A68  +
mov ecx 100h +
mov edx ecx +
lea eax [ebp+var_804] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1001A7B  +
lea eax [ebp+var_404] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001A87  +
push ebx  +
push [ebp+lpString]  +
call sub_10078B2  +
test eax eax +
push esi  +
lea eax [ebp+MachineName] +
jz loc_1001AC4  +
push offset asc_1001370  +
push eax  +
call sub_10082C0  +
push esi  +
push [ebp+lpString]  +
lea eax [ebp+MachineName] +
push eax  +
call sub_1008303  +
jmp loc_1001AD0  +
push [ebp+lpString]  +
push eax  +
call sub_10082C0  +
lea eax [ebp+hKey] +
push eax  +
push 80000002h  +
lea eax [ebp+MachineName] +
push eax  +
call ds:RegConnectRegistryW  +
test eax eax +
jnz loc_1001C80  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push ebx  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1001C80  +
push [ebp+lpMem]  +
call sub_1007BCB  +
mov ecx [ebp+lpMem] +
cmp eax ebx +
jz loc_1001B34  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1001B2E  +
mov esi ds:RegQueryValueExW +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpMem]  +
mov edi offset ValueName +
push ebx  +
push ebx  +
push edi  +
push [ebp+phkResult]  +
call esi  +
cmp eax 0EAh +
jnz loc_1001BE8  +
mov ecx [ebp+cbData] +
mov edx [ebp+lpMem] +
xor eax eax +
mov [edx+ecx*2-2] ax +
mov eax [ebp+cbData] +
add eax eax +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1007F39  +
test eax eax +
jnz loc_1001BB5  +
push [ebp+phkResult]  +
mov esi ds:RegCloseKey +
call esi  +
push [ebp+hKey]  +
call esi  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1007EBE  +
jmp loc_1001C98  +
push [ebp+lpMem]  +
call sub_1007BCB  +
mov ecx [ebp+lpMem] +
cmp eax ebx +
jz loc_1001BD0  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1001BCA  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpMem]  +
push ebx  +
push ebx  +
push edi  +
push [ebp+phkResult]  +
call esi  +
cmp eax ebx +
jz loc_1001C13  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1007EBE  +
push [ebp+phkResult]  +
mov esi ds:RegCloseKey +
call esi  +
push [ebp+hKey]  +
call esi  +
jmp loc_1001C98  +
mov eax [ebp+cbData] +
mov edx [ebp+lpMem] +
mov esi ds:RegCloseKey +
shr eax 1 +
xor ecx ecx +
mov [edx+eax*2] cx +
push [ebp+phkResult]  +
call esi  +
push [ebp+hKey]  +
call esi  +
push 100h  +
push offset aX86  +
lea eax [ebp+var_404] +
push eax  +
call sub_10082C0  +
push ebx  +
lea eax [ebp+var_404] +
push eax  +
push [ebp+lpMem]  +
call sub_1008250  +
mov esi eax +
neg esi  +
sbb esi esi +
neg esi  +
lea eax [ebp+lpMem] +
inc esi  +
push eax  +
inc esi  +
call sub_1007EBE  +
mov eax esi +
jmp loc_1001C9B  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1007EBE  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push 4  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_10019CF  +
cmp eax 4 +
jnz loc_1001CE1  +
push 0C0h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
xor eax eax +
inc eax  +
jmp loc_1001D04  +
cmp eax 2 +
jnz loc_1001D02  +
push 0  +
push [ebp+lpString]  +
call sub_10078B2  +
test eax eax +
jnz loc_1001CFB  +
push 0C1h  +
jmp loc_1001CC8  +
push 0C2h  +
jmp loc_1001CC8  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1001D23  +
cmp ecx 7FFFFFFFh +
jbe loc_1001D28  +
mov eax 80070057h +
test eax eax +
jl loc_1001D65  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1001D55  +
cmp eax esi +
ja loc_1001D55  +
jnz loc_1001D60  +
jmp loc_1001D5A  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov esi [ebp+10h] +
lea ecx [ebp-658h] +
mov [ebp-65Ch] eax +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
push 0FEh  +
push 0E8h  +
call sub_100969E  +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
call sub_10082C0  +
push 0BFh  +
call sub_100969E  +
push eax  +
lea ecx [ebp-658h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-658h]  +
push 0A1h  +
call sub_100969E  +
push eax  +
lea eax [ebp-604h] +
push 1FCh  +
push eax  +
call sub_1001D0D  +
add esp 10h +
push 50h  +
pop ecx  +
lea eax [ebp-654h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001DF7  +
push 8  +
push offset aParser2  +
lea eax [ebp-654h] +
push eax  +
call sub_100827D  +
lea eax [ebp-20Ch] +
xor edi edi +
push ebx  +
inc edi  +
push eax  +
mov [ebp-64Ch] edi +
mov dword ptr [ebp-634h] offset aLocal +
mov [ebp-630h] ebx +
mov [ebp-62Ch] eax +
mov [ebp-63Ch] edi +
mov [ebp-638h] ebx +
mov dword ptr [ebp-644h] 10012h +
mov [ebp-640h] ebx +
mov [ebp-628h] ebx +
call sub_10078B2  +
push ebx  +
mov [ebp-624h] eax +
lea eax [ebp-654h] +
push eax  +
push edi  +
push 0FFFFFFFFh  +
push dword ptr [ebp-65Ch]  +
mov [ebp-620h] ebx +
push dword ptr [ebp+8]  +
mov [ebp-61Ch] ebx +
mov [ebp-618h] ebx +
mov [ebp-614h] ebx +
mov [ebp-610h] ebx +
mov [ebp-60Ch] ebx +
call sub_100A627  +
test eax eax +
jnz loc_1001ED7  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-658h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call sub_1006F54  +
retn 0Ch  +
mov eax [ebp-628h] +
mov [esi] eax +
cmp eax ebx +
jnz loc_1001F29  +
push ebx  +
mov edi offset String +
push edi  +
call sub_10078B2  +
lea eax [eax+eax+2] +
push eax  +
call sub_1007B22  +
mov [esi] eax +
cmp eax ebx +
jnz loc_1001F17  +
call sub_1007683  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-658h] +
call ??1CHString@@QAE@XZ  +
mov eax ebx +
jmp loc_1001ECF  +
push eax  +
call sub_1007BCB  +
push eax  +
push edi  +
push dword ptr [esi]  +
call sub_10082C0  +
xor edi edi +
inc edi  +
mov ebx edi +
jmp loc_1001F04  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov [ebp-5ACh] eax +
mov eax [ebp+10h] +
mov [ebp-5BCh] eax +
mov eax [ebp+14h] +
mov [ebp-5B0h] eax +
mov eax [ebp+18h] +
mov [ebp-5B4h] eax +
mov eax [ebp+1Ch] +
xor ebx ebx +
lea ecx [ebp-5A8h] +
mov [ebp-5B8h] eax +
mov [ebp-5A4h] ebx +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
push 0BFh  +
call sub_100969E  +
push eax  +
lea ecx [ebp-5A8h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-5A8h]  +
push 0A1h  +
call sub_100969E  +
push eax  +
lea eax [ebp-410h] +
push 200h  +
push eax  +
call sub_1001D0D  +
add esp 10h +
call sub_100A9AF  +
mov [ebp-5A4h] eax +
cmp eax ebx +
jnz loc_1002007  +
push 8  +
call ds:SetLastError  +
call sub_1007683  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10096B6  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-5A8h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call sub_1006F54  +
retn 18h  +
mov ecx 190h +
lea eax [ebp-5A0h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002012  +
push 8  +
mov esi offset aParser2 +
push esi  +
lea eax [ebp-5A0h] +
push eax  +
call sub_100827D  +
mov eax [ebp-5BCh] +
push 8  +
mov [ebp-574h] eax +
xor edi edi +
push esi  +
lea eax [ebp-550h] +
inc edi  +
push eax  +
mov dword ptr [ebp-598h] 0Ah +
mov dword ptr [ebp-580h] offset aDisconnect +
mov [ebp-57Ch] ebx +
mov [ebp-578h] ebx +
mov [ebp-588h] edi +
mov [ebp-584h] ebx +
mov [ebp-590h] ebx +
mov [ebp-58Ch] ebx +
mov [ebp-570h] ebx +
mov [ebp-56Ch] ebx +
mov [ebp-568h] ebx +
mov [ebp-564h] ebx +
mov [ebp-560h] ebx +
mov [ebp-55Ch] ebx +
mov [ebp-558h] ebx +
call sub_100827D  +
mov eax [ebp-5B0h] +
push 8  +
mov [ebp-524h] eax +
push esi  +
lea eax [ebp-500h] +
push eax  +
mov dword ptr [ebp-548h] 0Ah +
mov dword ptr [ebp-530h] offset aQuery +
mov [ebp-52Ch] ebx +
mov [ebp-528h] ebx +
mov [ebp-538h] edi +
mov [ebp-534h] ebx +
mov [ebp-540h] ebx +
mov [ebp-53Ch] ebx +
mov [ebp-520h] ebx +
mov [ebp-51Ch] ebx +
mov [ebp-518h] ebx +
mov [ebp-514h] ebx +
mov [ebp-510h] ebx +
mov [ebp-50Ch] ebx +
mov [ebp-508h] ebx +
call sub_100827D  +
mov eax [ebp-5B4h] +
push 8  +
mov [ebp-4D4h] eax +
push esi  +
lea eax [ebp-4B0h] +
push eax  +
mov dword ptr [ebp-4F8h] 0Ah +
mov dword ptr [ebp-4E0h] offset a? +
mov [ebp-4DCh] ebx +
mov [ebp-4D8h] ebx +
mov [ebp-4E8h] edi +
mov [ebp-4E4h] ebx +
mov dword ptr [ebp-4F0h] 20000h +
mov [ebp-4ECh] ebx +
mov [ebp-4D0h] ebx +
mov [ebp-4CCh] ebx +
mov [ebp-4C8h] ebx +
mov [ebp-4C4h] ebx +
mov [ebp-4C0h] ebx +
mov [ebp-4BCh] ebx +
mov [ebp-4B8h] ebx +
call sub_100827D  +
mov dword ptr [ebp-4A8h] 0Ah +
mov dword ptr [ebp-490h] offset aLocal +
mov [ebp-48Ch] ebx +
mov [ebp-488h] ebx +
mov [ebp-498h] edi +
mov [ebp-494h] ebx +
mov [ebp-4A0h] ebx +
mov eax [ebp-5B8h] +
push 8  +
mov [ebp-484h] eax +
push esi  +
lea eax [ebp-460h] +
push eax  +
mov [ebp-49Ch] ebx +
mov [ebp-480h] ebx +
mov [ebp-47Ch] ebx +
mov [ebp-478h] ebx +
mov [ebp-474h] ebx +
mov [ebp-470h] ebx +
mov [ebp-46Ch] ebx +
mov [ebp-468h] ebx +
call sub_100827D  +
push ebx  +
lea eax [ebp-5A4h] +
mov [ebp-434h] eax +
lea eax [ebp-5A0h] +
push eax  +
push 5  +
push 0FFFFFFFFh  +
push dword ptr [ebp-5ACh]  +
mov [ebp-458h] edi +
push dword ptr [ebp+8]  +
mov [ebp-440h] ebx +
mov [ebp-43Ch] ebx +
mov [ebp-438h] ebx +
mov [ebp-448h] ebx +
mov [ebp-444h] ebx +
mov dword ptr [ebp-450h] 40001h +
mov [ebp-44Ch] ebx +
mov [ebp-430h] ebx +
mov [ebp-42Ch] ebx +
mov [ebp-428h] ebx +
mov [ebp-424h] ebx +
mov [ebp-420h] ebx +
mov [ebp-41Ch] ebx +
mov [ebp-418h] ebx +
call sub_100A627  +
test eax eax +
jnz loc_10022EB  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
cmp [ebp-5A4h] ebx +
jz loc_1001FEE  +
lea eax [ebp-5A4h] +
push eax  +
call sub_100AA24  +
mov [ebp-5A4h] ebx +
jmp loc_1001FEE  +
cmp [ebp-5A4h] ebx +
jz loc_1002305  +
lea eax [ebp-5A4h] +
push eax  +
call sub_100AA24  +
mov [ebp-5A4h] ebx +
mov eax [ebp-5B4h] +
mov eax [eax] +
mov [ebp-5ACh] eax +
cmp eax edi +
jnz loc_1002347  +
cmp dword ptr [ebp+8] 3 +
jbe loc_1002347  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-410h] +
push eax  +
call sub_100761C  +
jmp loc_1001FEE  +
mov eax [ebp-5B8h] +
mov edx [eax] +
mov eax [ebp-5B0h] +
mov ecx [ebp-5BCh] +
mov eax [eax] +
mov ecx [ecx] +
lea esi [ecx+eax] +
add esi edx +
cmp esi edi +
jle loc_10023A5  +
push 9Ch  +
xor edi edi +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-410h] +
push eax  +
call sub_100761C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-5A8h] +
call ??1CHString@@QAE@XZ  +
mov eax edi +
jmp loc_1001FFF  +
cmp dword ptr [ebp+8] 2 +
jz loc_100238F  +
jbe loc_100238F  +
cmp eax ebx +
jnz loc_100238F  +
cmp ecx ebx +
jnz loc_100238F  +
cmp edx ebx +
jz loc_1002368  +
jmp loc_100238F  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov [ebp-0A60h] eax +
mov eax [ebp+10h] +
mov [ebp-0A50h] eax +
mov eax [ebp+14h] +
mov [ebp-0A54h] eax +
mov eax [ebp+18h] +
mov [ebp-0A48h] eax +
mov eax [ebp+1Ch] +
mov [ebp-0A44h] eax +
mov eax [ebp+20h] +
mov [ebp-0A5Ch] eax +
mov eax [ebp+24h] +
mov [ebp-0A58h] eax +
mov eax [ebp+28h] +
mov [ebp-0A64h] eax +
mov eax [ebp+2Ch] +
lea ecx [ebp-0A40h] +
mov [ebp-0A4Ch] eax +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
push 0BFh  +
call sub_100969E  +
push eax  +
lea ecx [ebp-0A40h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-0A40h]  +
push 0A1h  +
call sub_100969E  +
push eax  +
lea eax [ebp-410h] +
push 200h  +
push eax  +
call sub_1001D0D  +
add esp 10h +
push dword ptr [ebp-0A40h]  +
push 0B3h  +
call sub_100969E  +
push eax  +
lea eax [ebp-610h] +
push 100h  +
push eax  +
call sub_1001D0D  +
add esp 10h +
push 0FEh  +
push 52h  +
call sub_100969E  +
push eax  +
lea eax [ebp-80Ch] +
push eax  +
call sub_10082C0  +
mov ecx 230h +
lea eax [ebp-0A3Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10024B4  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp-0A3Ch] +
push eax  +
call sub_100827D  +
mov eax [ebp-0A50h] +
push 8  +
mov [ebp-0A10h] eax +
xor esi esi +
push edi  +
lea eax [ebp-9ECh] +
inc esi  +
push eax  +
mov dword ptr [ebp-0A34h] 0Ah +
mov dword ptr [ebp-0A1Ch] offset aQuery +
mov [ebp-0A18h] ebx +
mov [ebp-0A14h] ebx +
mov [ebp-0A24h] esi +
mov [ebp-0A20h] ebx +
mov [ebp-0A2Ch] ebx +
mov [ebp-0A28h] ebx +
mov [ebp-0A0Ch] ebx +
mov [ebp-0A08h] ebx +
mov [ebp-0A04h] ebx +
mov [ebp-0A00h] ebx +
mov [ebp-9FCh] ebx +
mov [ebp-9F8h] ebx +
mov [ebp-9F4h] ebx +
call sub_100827D  +
push 8  +
push edi  +
lea eax [ebp-99Ch] +
push eax  +
mov [ebp-9E4h] esi +
mov dword ptr [ebp-9CCh] offset aS +
mov [ebp-9C8h] ebx +
mov [ebp-9C4h] ebx +
mov [ebp-9D4h] esi +
mov [ebp-9D0h] ebx +
mov dword ptr [ebp-9DCh] 100C0h +
mov [ebp-9D8h] ebx +
mov [ebp-9C0h] ebx +
mov [ebp-9BCh] ebx +
mov [ebp-9B8h] ebx +
mov [ebp-9B4h] ebx +
mov [ebp-9B0h] ebx +
mov [ebp-9ACh] ebx +
mov [ebp-9A8h] ebx +
mov [ebp-9A4h] ebx +
call sub_100827D  +
push 8  +
push edi  +
lea eax [ebp-94Ch] +
push eax  +
mov [ebp-994h] esi +
mov dword ptr [ebp-97Ch] offset aU +
mov [ebp-978h] ebx +
mov [ebp-974h] ebx +
mov [ebp-984h] esi +
mov [ebp-980h] ebx +
mov dword ptr [ebp-98Ch] 100C0h +
mov [ebp-988h] ebx +
mov [ebp-970h] ebx +
mov [ebp-96Ch] ebx +
mov [ebp-968h] ebx +
mov [ebp-964h] ebx +
mov [ebp-960h] ebx +
mov [ebp-95Ch] ebx +
mov [ebp-958h] ebx +
mov [ebp-954h] ebx +
call sub_100827D  +
mov [ebp-944h] esi +
mov dword ptr [ebp-92Ch] offset aP +
mov [ebp-928h] ebx +
mov [ebp-924h] ebx +
mov [ebp-934h] esi +
mov [ebp-930h] ebx +
mov dword ptr [ebp-93Ch] 10010h +
mov [ebp-938h] ebx +
mov [ebp-920h] ebx +
push 8  +
push edi  +
lea eax [ebp-8FCh] +
push eax  +
mov [ebp-91Ch] ebx +
mov [ebp-918h] ebx +
mov [ebp-914h] ebx +
mov [ebp-910h] ebx +
mov [ebp-90Ch] ebx +
mov [ebp-908h] ebx +
mov [ebp-904h] ebx +
call sub_100827D  +
lea eax [ebp-80Ch] +
push 8  +
mov [ebp-8D4h] eax +
push edi  +
lea eax [ebp-8ACh] +
push eax  +
mov [ebp-8F4h] esi +
mov dword ptr [ebp-8DCh] offset aFo +
mov [ebp-8D8h] ebx +
mov [ebp-8E4h] esi +
mov [ebp-8E0h] ebx +
mov dword ptr [ebp-8ECh] 100C2h +
mov [ebp-8E8h] ebx +
mov [ebp-8D0h] ebx +
mov dword ptr [ebp-8CCh] 0FEh +
mov [ebp-8C8h] ebx +
mov [ebp-8C4h] ebx +
mov [ebp-8C0h] ebx +
mov [ebp-8BCh] ebx +
mov [ebp-8B8h] ebx +
mov [ebp-8B4h] ebx +
call sub_100827D  +
mov eax [ebp-0A58h] +
push 8  +
mov [ebp-880h] eax +
push edi  +
lea eax [ebp-85Ch] +
push eax  +
mov dword ptr [ebp-8A4h] 0Ah +
mov dword ptr [ebp-88Ch] offset aNh +
mov [ebp-888h] ebx +
mov [ebp-884h] ebx +
mov [ebp-894h] esi +
mov [ebp-890h] ebx +
mov [ebp-89Ch] ebx +
mov [ebp-898h] ebx +
mov [ebp-87Ch] ebx +
mov [ebp-878h] ebx +
mov [ebp-874h] ebx +
mov [ebp-870h] ebx +
mov [ebp-86Ch] ebx +
mov [ebp-868h] ebx +
mov [ebp-864h] ebx +
call sub_100827D  +
mov eax [ebp-0A64h] +
push ebx  +
mov [ebp-830h] eax +
lea eax [ebp-0A3Ch] +
push eax  +
push 7  +
push ebx  +
push dword ptr [ebp-0A60h]  +
mov dword ptr [ebp-854h] 0Ah +
push dword ptr [ebp+8]  +
mov dword ptr [ebp-83Ch] offset aV +
mov [ebp-838h] ebx +
mov [ebp-834h] ebx +
mov [ebp-844h] esi +
mov [ebp-840h] ebx +
mov [ebp-84Ch] ebx +
mov [ebp-848h] ebx +
mov [ebp-82Ch] ebx +
mov [ebp-828h] ebx +
mov [ebp-824h] ebx +
mov [ebp-820h] ebx +
mov [ebp-81Ch] ebx +
mov [ebp-818h] ebx +
mov [ebp-814h] ebx +
call sub_100A627  +
test eax eax +
jnz loc_100286E  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0A40h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call sub_1006F54  +
retn 28h  +
mov eax [ebp-9C0h] +
mov ecx [ebp-0A54h] +
mov edi [ebp-0A5Ch] +
mov [ecx] eax +
mov eax [ebp-970h] +
mov ecx [ebp-0A48h] +
mov [ecx] eax +
mov eax [ebp-0A44h] +
mov ecx [ebp-920h] +
mov [eax] ecx +
mov eax [ebp-8D0h] +
mov [edi] eax +
mov eax [ebp-0A58h] +
cmp [eax] esi +
jnz loc_1002912  +
cmp [ebp-8E0h] esi +
jnz loc_1002912  +
push ebx  +
push esi  +
push 96h  +
call sub_100969E  +
push eax  +
push dword ptr [edi]  +
call sub_10078D3  +
test eax eax +
jnz loc_1002912  +
mov esi 200h +
push esi  +
push 0A5h  +
call sub_100969E  +
push eax  +
lea eax [ebp-410h] +
push eax  +
call sub_10082C0  +
push esi  +
lea eax [ebp-610h] +
push eax  +
lea eax [ebp-410h] +
push eax  +
call sub_1008303  +
lea eax [ebp-410h] +
push eax  +
call sub_100761C  +
jmp loc_1002855  +
cmp [ebp-980h] ebx +
jnz loc_100292C  +
cmp [ebp-930h] ebx +
jz loc_100292C  +
mov esi 200h +
push esi  +
push 43h  +
jmp loc_10028DB  +
mov eax [ebp-0A50h] +
cmp [eax] ebx +
jnz loc_1002951  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
jmp loc_1002901  +
cmp [ebp-9D0h] ebx +
jnz loc_100296E  +
cmp [ebp-980h] ebx +
jz loc_100296E  +
mov esi 200h +
push esi  +
push 42h  +
jmp loc_10028DB  +
mov eax [ebp-0A54h] +
cmp [eax] ebx +
jz loc_1002A22  +
mov eax [ebp-0A48h] +
mov edi 1FCh +
cmp [eax] ebx +
jnz loc_10029A7  +
push edi  +
call sub_1007B22  +
mov ecx [ebp-0A48h] +
mov [ecx] eax +
cmp eax ebx +
jnz loc_10029A7  +
call sub_1007683  +
jmp loc_1002855  +
mov eax [ebp-0A44h] +
cmp [eax] ebx +
jnz loc_10029CD  +
mov eax [ebp-0A4Ch] +
push edi  +
mov [eax] esi +
call sub_1007B22  +
mov ecx [ebp-0A44h] +
mov [ecx] eax +
cmp eax ebx +
jz loc_100299D  +
mov eax ecx +
cmp [ebp-930h] ebx +
jz loc_1002A22  +
cmp [ebp-920h] ebx +
jnz loc_10029F9  +
push dword ptr [eax]  +
call sub_1007BCB  +
push eax  +
mov eax [ebp-0A44h] +
push offset String2  +
push dword ptr [eax]  +
call sub_10082C0  +
jmp loc_1002A22  +
push ebx  +
push esi  +
push offset String2  +
push dword ptr [eax]  +
call sub_1007989  +
test eax eax +
jnz loc_1002A22  +
push edi  +
push dword ptr [ebp-0A44h]  +
call sub_1007F39  +
test eax eax +
jnz loc_1002A38  +
call sub_1007683  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0A40h] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
jmp loc_1002866  +
mov eax [ebp-0A4Ch] +
mov [eax] esi +
jmp loc_1002A22  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov [ebp-0AACh] eax +
mov eax [ebp+10h] +
mov [ebp-0AA4h] eax +
mov eax [ebp+14h] +
mov [ebp-0A9Ch] eax +
mov eax [ebp+18h] +
mov [ebp-0A98h] eax +
mov eax [ebp+1Ch] +
mov [ebp-0AB8h] eax +
mov eax [ebp+20h] +
mov [ebp-0A94h] eax +
mov eax [ebp+24h] +
mov [ebp-0AB4h] eax +
mov eax [ebp+28h] +
mov [ebp-0AB0h] eax +
mov eax [ebp+2Ch] +
mov [ebp-0AA8h] eax +
mov eax [ebp+30h] +
lea ecx [ebp-0A90h] +
mov [ebp-0AA0h] eax +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
mov ecx 1FCh +
lea eax [ebp-80Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002ACB  +
push 0BFh  +
call sub_100969E  +
push eax  +
lea ecx [ebp-0A90h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-0A90h]  +
push 0A1h  +
call sub_100969E  +
push eax  +
lea eax [ebp-410h] +
push 200h  +
push eax  +
call sub_1001D0D  +
add esp 10h +
push dword ptr [ebp-0A90h]  +
push 0B4h  +
call sub_100969E  +
push eax  +
lea eax [ebp-610h] +
push 100h  +
push eax  +
call sub_1001D0D  +
add esp 10h +
push 0FEh  +
push 0A0h  +
call sub_100969E  +
push eax  +
lea eax [ebp-80Ch] +
push eax  +
call sub_10082C0  +
mov ecx 280h +
lea eax [ebp-0A8Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002B58  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp-0A8Ch] +
push eax  +
call sub_100827D  +
mov eax [ebp-0AA4h] +
push 8  +
mov [ebp-0A60h] eax +
xor esi esi +
push edi  +
lea eax [ebp-0A3Ch] +
inc esi  +
push eax  +
mov dword ptr [ebp-0A84h] 0Ah +
mov dword ptr [ebp-0A6Ch] offset aDisconnect +
mov [ebp-0A68h] ebx +
mov [ebp-0A64h] ebx +
mov [ebp-0A74h] esi +
mov [ebp-0A70h] ebx +
mov [ebp-0A7Ch] ebx +
mov [ebp-0A78h] ebx +
mov [ebp-0A5Ch] ebx +
mov [ebp-0A58h] ebx +
mov [ebp-0A54h] ebx +
mov [ebp-0A50h] ebx +
mov [ebp-0A4Ch] ebx +
mov [ebp-0A48h] ebx +
mov [ebp-0A44h] ebx +
call sub_100827D  +
push 8  +
push edi  +
lea eax [ebp-9ECh] +
push eax  +
mov [ebp-0A34h] esi +
mov dword ptr [ebp-0A1Ch] offset aS +
mov [ebp-0A18h] ebx +
mov [ebp-0A14h] ebx +
mov [ebp-0A24h] esi +
mov [ebp-0A20h] ebx +
mov dword ptr [ebp-0A2Ch] 100C0h +
mov [ebp-0A28h] ebx +
mov [ebp-0A10h] ebx +
mov [ebp-0A0Ch] ebx +
mov [ebp-0A08h] ebx +
mov [ebp-0A04h] ebx +
mov [ebp-0A00h] ebx +
mov [ebp-9FCh] ebx +
mov [ebp-9F8h] ebx +
mov [ebp-9F4h] ebx +
call sub_100827D  +
push 8  +
push edi  +
lea eax [ebp-99Ch] +
push eax  +
mov [ebp-9E4h] esi +
mov dword ptr [ebp-9CCh] offset aU +
mov [ebp-9C8h] ebx +
mov [ebp-9C4h] ebx +
mov [ebp-9D4h] esi +
mov [ebp-9D0h] ebx +
mov dword ptr [ebp-9DCh] 100C0h +
mov [ebp-9D8h] ebx +
mov [ebp-9C0h] ebx +
mov [ebp-9BCh] ebx +
mov [ebp-9B8h] ebx +
mov [ebp-9B4h] ebx +
mov [ebp-9B0h] ebx +
mov [ebp-9ACh] ebx +
mov [ebp-9A8h] ebx +
mov [ebp-9A4h] ebx +
call sub_100827D  +
mov [ebp-994h] esi +
mov dword ptr [ebp-97Ch] offset aP +
mov [ebp-978h] ebx +
mov [ebp-974h] ebx +
mov [ebp-984h] esi +
mov [ebp-980h] ebx +
mov dword ptr [ebp-98Ch] 10010h +
mov [ebp-988h] ebx +
mov [ebp-970h] ebx +
push 8  +
push edi  +
lea eax [ebp-94Ch] +
push eax  +
mov [ebp-96Ch] ebx +
mov [ebp-968h] ebx +
mov [ebp-964h] ebx +
mov [ebp-960h] ebx +
mov [ebp-95Ch] ebx +
mov [ebp-958h] ebx +
mov [ebp-954h] ebx +
call sub_100827D  +
push 8  +
push edi  +
lea eax [ebp-8FCh] +
push eax  +
mov [ebp-944h] esi +
mov dword ptr [ebp-92Ch] offset aId +
mov [ebp-928h] ebx +
mov [ebp-924h] ebx +
mov [ebp-934h] esi +
mov [ebp-930h] ebx +
mov dword ptr [ebp-93Ch] 100C0h +
mov [ebp-938h] ebx +
mov [ebp-920h] ebx +
mov [ebp-91Ch] ebx +
mov [ebp-918h] ebx +
mov [ebp-914h] ebx +
mov [ebp-910h] ebx +
mov [ebp-90Ch] ebx +
mov [ebp-908h] ebx +
mov [ebp-904h] ebx +
call sub_100827D  +
push 8  +
push edi  +
lea eax [ebp-8ACh] +
push eax  +
mov [ebp-8F4h] esi +
mov dword ptr [ebp-8DCh] offset aA +
mov [ebp-8D8h] ebx +
mov [ebp-8D4h] ebx +
mov [ebp-8E4h] esi +
mov [ebp-8E0h] ebx +
mov dword ptr [ebp-8ECh] 100C0h +
mov [ebp-8E8h] ebx +
mov [ebp-8D0h] ebx +
mov [ebp-8CCh] ebx +
mov [ebp-8C8h] ebx +
mov [ebp-8C4h] ebx +
mov [ebp-8C0h] ebx +
mov [ebp-8BCh] ebx +
mov [ebp-8B8h] ebx +
mov [ebp-8B4h] ebx +
call sub_100827D  +
lea eax [ebp-80Ch] +
push 8  +
mov [ebp-884h] eax +
push edi  +
lea eax [ebp-85Ch] +
push eax  +
mov [ebp-8A4h] esi +
mov dword ptr [ebp-88Ch] offset aO +
mov [ebp-888h] ebx +
mov [ebp-894h] esi +
mov [ebp-890h] ebx +
mov dword ptr [ebp-89Ch] 100C2h +
mov [ebp-898h] ebx +
mov [ebp-880h] ebx +
mov [ebp-87Ch] ebx +
mov [ebp-878h] ebx +
mov [ebp-874h] ebx +
mov [ebp-870h] ebx +
mov [ebp-86Ch] ebx +
mov [ebp-868h] ebx +
mov [ebp-864h] ebx +
call sub_100827D  +
mov [ebp-854h] esi +
mov dword ptr [ebp-83Ch] offset aOp +
mov [ebp-838h] ebx +
mov [ebp-834h] ebx +
mov [ebp-844h] esi +
push ebx  +
lea eax [ebp-0A8Ch] +
push eax  +
push 8  +
push ebx  +
push dword ptr [ebp-0AACh]  +
mov [ebp-840h] ebx +
push dword ptr [ebp+8]  +
mov dword ptr [ebp-84Ch] 100C0h +
mov [ebp-848h] ebx +
mov [ebp-830h] ebx +
mov [ebp-82Ch] ebx +
mov [ebp-828h] ebx +
mov [ebp-824h] ebx +
mov [ebp-820h] ebx +
mov [ebp-81Ch] ebx +
mov [ebp-818h] ebx +
mov [ebp-814h] ebx +
call sub_100A627  +
test eax eax +
jnz loc_1002F79  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0A90h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call sub_1006F54  +
retn 2Ch  +
mov eax [ebp-0A10h] +
mov ecx [ebp-0A9Ch] +
mov edi [ebp-0AB8h] +
mov edx [ebp-0AB0h] +
mov [ecx] eax +
mov eax [ebp-9C0h] +
mov ecx [ebp-0A98h] +
mov [ecx] eax +
mov eax [ebp-970h] +
mov ecx [ebp-0A94h] +
mov [edi] eax +
mov eax [ebp-920h] +
mov [ecx] eax +
mov ecx [ebp-8D0h] +
mov eax [ebp-0AB4h] +
mov [eax] ecx +
mov ecx [ebp-880h] +
mov [edx] ecx +
mov ecx [ebp-830h] +
mov edx [ebp-0AA8h] +
mov [edx] ecx +
mov ecx [ebp-0AA4h] +
cmp [ecx] ebx +
jnz loc_100300F  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-410h] +
push eax  +
call sub_100761C  +
jmp loc_1002F60  +
cmp [ebp-930h] ebx +
jnz loc_100305A  +
cmp [ebp-8E0h] ebx +
jnz loc_100305A  +
cmp [ebp-890h] ebx +
jnz loc_100305A  +
mov esi 200h +
push esi  +
push 98h  +
call sub_100969E  +
push eax  +
lea eax [ebp-410h] +
push eax  +
call sub_10082C0  +
push esi  +
lea eax [ebp-610h] +
push eax  +
lea eax [ebp-410h] +
push eax  +
call sub_1008303  +
jmp loc_1002FFE  +
cmp [ebp-0A20h] ebx +
jnz loc_1003074  +
cmp [ebp-9D0h] ebx +
jz loc_100307C  +
mov esi 200h +
push esi  +
push 42h  +
jmp loc_1003032  +
cmp [ebp-9D0h] ebx +
jnz loc_100308E  +
cmp [ebp-980h] ebx +
jz loc_100308E  +
mov esi 200h +
push esi  +
push 43h  +
jmp loc_1003032  +
cmp [ebp-8E0h] esi +
jnz loc_10030C8  +
push ebx  +
push offset a?@  +
push dword ptr [eax]  +
call sub_1008223  +
test eax eax +
jz loc_10030C8  +
push 200h  +
push 0EFh  +
call sub_100969E  +
push eax  +
lea eax [ebp-410h] +
push eax  +
call sub_10082C0  +
jmp loc_1002FFE  +
cmp [ebp-840h] esi +
jnz loc_10030F3  +
mov eax [ebp-0AA8h] +
push ebx  +
push offset a?_0  +
push dword ptr [eax]  +
call sub_1008223  +
test eax eax +
jz loc_10030F3  +
push 200h  +
push 0F0h  +
jmp loc_10030B1  +
mov eax [ebp-0A9Ch] +
cmp [eax] ebx +
jz loc_1003196  +
mov eax [ebp-0A98h] +
cmp [eax] ebx +
jnz loc_100312B  +
push 1FCh  +
call sub_1007B22  +
mov ecx [ebp-0A98h] +
mov [ecx] eax +
cmp eax ebx +
jnz loc_100312B  +
call sub_1007683  +
jmp loc_1002F60  +
cmp [edi] ebx +
jnz loc_1003147  +
mov eax [ebp-0AA0h] +
push 1FCh  +
mov [eax] esi +
call sub_1007B22  +
mov [edi] eax +
cmp eax ebx +
jz loc_1003121  +
cmp [ebp-980h] ebx +
jz loc_1003196  +
cmp [ebp-970h] ebx +
jnz loc_100316D  +
push dword ptr [edi]  +
call sub_1007BCB  +
push eax  +
push offset String2  +
push dword ptr [edi]  +
call sub_10082C0  +
jmp loc_1003196  +
push ebx  +
push esi  +
push offset String2  +
push dword ptr [edi]  +
call sub_1007989  +
test eax eax +
jnz loc_1003196  +
push 1FCh  +
push edi  +
call sub_1007F39  +
test eax eax +
jz loc_1003121  +
mov eax [ebp-0AA0h] +
mov [eax] esi +
cmp [ebp-930h] esi +
jnz loc_100322D  +
mov eax [ebp-0A94h] +
push ebx  +
push ebx  +
push offset String2  +
push dword ptr [eax]  +
call sub_10078D3  +
test eax eax +
jz loc_100322D  +
mov edi [ebp-0A94h] +
push ebx  +
push 0Ah  +
push dword ptr [edi]  +
call sub_1009122  +
cmp eax esi +
jz loc_100322D  +
push ebx  +
push dword ptr [edi]  +
call sub_10078B2  +
test eax eax +
jz loc_100322D  +
mov esi 200h +
push esi  +
push 9Bh  +
call sub_100969E  +
push eax  +
lea eax [ebp-410h] +
push eax  +
call sub_10082C0  +
push esi  +
lea eax [ebp-610h] +
push eax  +
lea eax [ebp-410h] +
push eax  +
call sub_1008303  +
lea eax [ebp-410h] +
push eax  +
call sub_100761C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0A90h] +
call ??1CHString@@QAE@XZ  +
mov eax ebx +
jmp loc_1002F71  +
mov ebx esi +
jmp loc_1003217  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+lpString1] +
push eax  +
push [ebp+arg_4]  +
xor esi esi +
push [ebp+arg_0]  +
mov [ebp+lpString1] esi +
call sub_1001D6C  +
test eax eax +
jnz loc_100327B  +
call sub_10075F0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
cmp [ebp+lpString1] esi +
jz loc_1003277  +
push [ebp+lpString1]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
xor eax eax +
jmp loc_10032B7  +
call sub_100B6B2  +
test eax eax +
jnz loc_100329F  +
push 0EBh  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
jmp loc_10032AC  +
push [ebp+lpString1]  +
push esi  +
push esi  +
push esi  +
call sub_100653A  +
mov esi eax +
lea eax [ebp+lpString1] +
push eax  +
call sub_1007EBE  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-2Ch] ebx +
mov [ebp-30h] ebx +
mov [ebp-50h] ebx +
mov [ebp-48h] ebx +
mov [ebp-44h] ebx +
mov [ebp-40h] ebx +
mov [ebp-14h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-20h] ebx +
mov [ebp-24h] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-28h] ebx +
mov [ebp-4] ebx +
push offset dword_1001434  +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-44h] +
push eax  +
lea eax [ebp-48h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-50h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10023C0  +
mov [ebp-4Ch] eax +
cmp eax ebx +
jnz loc_1003386  +
call sub_10075F0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-24h] +
push eax  +
call sub_1007EBE  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_10078B2  +
test eax eax +
jz loc_10036A0  +
push dword ptr [ebp-14h]  +
call sub_1007BCB  +
push eax  +
call sub_1007B22  +
mov esi eax +
mov [ebp-3Ch] esi +
cmp esi ebx +
jnz loc_10033D3  +
push 8  +
call ds:SetLastError  +
call sub_1007683  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10096B6  +
jmp loc_100334D  +
push esi  +
call sub_1007BCB  +
mov [ebp-38h] eax +
mov [ebp-34h] esi +
cmp [ebp-38h] ebx +
jz loc_10033F1  +
mov eax [ebp-34h] +
mov [eax] bl +
inc dword ptr [ebp-34h]  +
dec dword ptr [ebp-38h]  +
jmp loc_10033DF  +
mov [ebp-28h] esi +
push dword ptr [ebp-14h]  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push 2  +
pop edi  +
push edi  +
lea eax [ebp-54h] +
push eax  +
lea ecx [ebp-18h] +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
xor esi esi +
inc esi  +
or [ebp-2Ch] esi +
mov eax [eax] +
push edi  +
push ebx  +
push offset asc_1001370  +
push eax  +
call sub_10078D3  +
test eax eax +
jnz loc_100343D  +
lea ecx [ebp-18h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] edi +
mov byte ptr [ebp+0Fh] 1 +
jg loc_1003440  +
mov [ebp+0Fh] bl +
mov [ebp-4] esi +
test byte ptr [ebp-2Ch] 1 +
jz loc_1003455  +
and dword ptr [ebp-2Ch] 0FFFFFFFEh +
lea ecx [ebp-54h] +
call ??1CHString@@QAE@XZ  +
cmp [ebp+0Fh] bl +
jz loc_100348B  +
lea ecx [ebp-18h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
push dword ptr [eax+4]  +
push edi  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-18h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-58h] +
call ??1CHString@@QAE@XZ  +
push esi  +
lea eax [ebp-5Ch] +
push eax  +
lea ecx [ebp-18h] +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 4 +
mov eax [eax] +
push esi  +
push ebx  +
push offset dword_10012E0  +
push eax  +
call sub_10078D3  +
test eax eax +
setnz byte ptr [ebp+0Bh]  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-5Ch] +
call ??1CHString@@QAE@XZ  +
cmp [ebp+0Bh] bl +
jz loc_10034D7  +
mov edi [ebp-18h] +
push dword ptr [ebp-14h]  +
call sub_1007BCB  +
push eax  +
push edi  +
push dword ptr [ebp-14h]  +
call sub_10082C0  +
mov edi [ebp-3Ch] +
push edi  +
call sub_1007BCB  +
push eax  +
push dword ptr [ebp-14h]  +
push edi  +
call sub_10082C0  +
push edi  +
call sub_100BBAE  +
cmp eax esi +
jnz loc_10035BD  +
push offset dword_1001430  +
call sub_1001CB1  +
cmp eax ebx +
jz loc_1003545  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-24h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-28h] +
push eax  +
call sub_1007EBE  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
jmp loc_100337E  +
push ebx  +
push dword ptr [ebp-1Ch]  +
call sub_10078B2  +
test eax eax +
jbe loc_100356B  +
push 0A6h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
call sub_100B6B2  +
test eax eax +
jnz loc_10036A3  +
push 0EBh  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-24h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-28h] +
jmp loc_100336B  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp-20h]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push dword ptr [ebp-1Ch]  +
push edi  +
call sub_100BFA2  +
test eax eax +
jnz loc_1003649  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
push ebx  +
call sub_10075F0  +
push eax  +
call sub_10078B2  +
test eax eax +
jnz loc_100361B  +
push 9Fh  +
call sub_100969E  +
jmp loc_1003620  +
call sub_10075F0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-1Ch] +
jmp loc_10035A6  +
call ds:GetLastError  +
cmp eax 4C3h +
jz loc_100366E  +
cmp eax 50010001h +
jz loc_1003669  +
cmp eax 0A0010001h +
jz loc_100366E  +
mov [ebp-30h] esi +
jmp loc_10036A3  +
mov [ebp-30h] ebx +
jmp loc_10036A3  +
mov [ebp-30h] ebx +
push 0A9h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
call sub_10075F0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
jmp loc_10036A3  +
xor esi esi +
inc esi  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-48h]  +
push dword ptr [ebp-14h]  +
call sub_1004675  +
mov [ebp-4Ch] eax +
cmp [ebp-30h] esi +
jnz loc_10036CD  +
push dword ptr [ebp-3Ch]  +
call sub_100BDCA  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-24h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-28h] +
push eax  +
call sub_1007EBE  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-4Ch] +
jmp loc_100337E  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-34h] ebx +
mov [ebp-68h] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-4Ch] ebx +
mov [ebp-54h] ebx +
mov [ebp-14h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-20h] ebx +
xor esi esi +
mov [ebp-38h] ebx +
mov [ebp-24h] ebx +
mov [ebp-28h] ebx +
mov [ebp-2Ch] ebx +
mov [ebp-30h] ebx +
mov [ebp-4] ebx +
push offset dword_1001430  +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-4Ch] +
push eax  +
lea eax [ebp-30h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-54h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1002A47  +
mov [ebp-50h] eax +
cmp eax ebx +
jnz loc_1003838  +
call sub_10075F0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-24h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-28h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-2Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-30h] +
push eax  +
call sub_1007EBE  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_10078B2  +
test eax eax +
jz loc_10039DC  +
push dword ptr [ebp-14h]  +
call sub_1007BCB  +
push eax  +
call sub_1007B22  +
mov esi eax +
mov [ebp-48h] esi +
cmp esi ebx +
jnz loc_10038BF  +
push 8  +
call ds:SetLastError  +
call sub_1007683  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10096B6  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-24h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-28h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-2Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-30h] +
push eax  +
call sub_1007EBE  +
push esi  +
call sub_1007BCB  +
mov [ebp-44h] eax +
mov [ebp-40h] esi +
cmp [ebp-44h] ebx +
jz loc_10038DD  +
mov eax [ebp-40h] +
mov [eax] bl +
inc dword ptr [ebp-40h]  +
dec dword ptr [ebp-44h]  +
jmp loc_10038CB  +
mov [ebp-38h] esi +
push dword ptr [ebp-14h]  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push 2  +
pop esi  +
push esi  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-18h] +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
xor edi edi +
inc edi  +
or [ebp-34h] edi +
mov eax [eax] +
push esi  +
push ebx  +
push offset asc_1001370  +
push eax  +
call sub_10078D3  +
test eax eax +
jnz loc_1003929  +
lea ecx [ebp-18h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] esi +
mov byte ptr [ebp+0Fh] 1 +
jg loc_100392C  +
mov [ebp+0Fh] bl +
mov [ebp-4] edi +
test byte ptr [ebp-34h] 1 +
jz loc_1003941  +
and dword ptr [ebp-34h] 0FFFFFFFEh +
lea ecx [ebp-58h] +
call ??1CHString@@QAE@XZ  +
cmp [ebp+0Fh] bl +
jz loc_1003977  +
lea ecx [ebp-18h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
push dword ptr [eax+4]  +
push esi  +
lea eax [ebp-5Ch] +
push eax  +
lea ecx [ebp-18h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-5Ch] +
call ??1CHString@@QAE@XZ  +
push esi  +
lea eax [ebp-60h] +
push eax  +
lea ecx [ebp-18h] +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 4 +
mov eax [eax] +
push esi  +
push ebx  +
push offset dword_10012E0  +
push eax  +
call sub_10078D3  +
test eax eax +
setnz byte ptr [ebp+0Bh]  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-60h] +
call ??1CHString@@QAE@XZ  +
cmp [ebp+0Bh] bl +
jz loc_10039C3  +
mov esi [ebp-18h] +
push dword ptr [ebp-14h]  +
call sub_1007BCB  +
push eax  +
push esi  +
push dword ptr [ebp-14h]  +
call sub_10082C0  +
push dword ptr [ebp-48h]  +
call sub_1007BCB  +
push eax  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-48h]  +
call sub_10082C0  +
mov esi [ebp-48h] +
jmp loc_10039DF  +
xor edi edi +
inc edi  +
push esi  +
call sub_100BBAE  +
cmp eax edi +
jnz loc_1003A75  +
push offset dword_1001430  +
call sub_1001CB1  +
cmp eax ebx +
jz loc_1003A55  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-38h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-24h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-28h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-2Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-30h] +
push eax  +
call sub_1007EBE  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
mov eax edi +
jmp loc_1003830  +
push ebx  +
push dword ptr [ebp-1Ch]  +
call sub_10078B2  +
test eax eax +
jbe loc_1003B5F  +
push 0A6h  +
call sub_100969E  +
jmp loc_1003B50  +
push dword ptr [ebp-4Ch]  +
push dword ptr [ebp-20h]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push dword ptr [ebp-1Ch]  +
push esi  +
call sub_100BFA2  +
test eax eax +
jnz loc_1003B0A  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
push ebx  +
call sub_10075F0  +
push eax  +
call sub_10078B2  +
test eax eax +
jnz loc_1003AD3  +
push 9Fh  +
call sub_100969E  +
jmp loc_1003AD8  +
call sub_10075F0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-38h] +
jmp loc_10037F9  +
call ds:GetLastError  +
cmp eax 4C3h +
jz loc_1003B2F  +
cmp eax 50010001h +
jz loc_1003B2A  +
cmp eax 0A0010001h +
jz loc_1003B2F  +
mov [ebp-3Ch] edi +
jmp loc_1003B5F  +
mov [ebp-3Ch] ebx +
jmp loc_1003B5F  +
mov [ebp-3Ch] ebx +
push 0A9h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
call sub_10075F0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
lea eax [ebp-20h] +
push eax  +
call sub_1007EBE  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-14h]  +
call sub_100414B  +
mov [ebp-50h] eax +
cmp [ebp-3Ch] edi +
jnz loc_1003B8A  +
push esi  +
call sub_100BDCA  +
lea eax [ebp-14h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-1Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-38h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-24h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-28h] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-2Ch] +
push eax  +
call sub_1007EBE  +
lea eax [ebp-30h] +
push eax  +
call sub_1007EBE  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-50h] +
jmp loc_1003830  +
***
call __EH_prolog3_catch_GS  +
call sub_1007683  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10096B6  +
and dword ptr [ebp-808h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1003ED6 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push offset aPipeSrvsvc  +
push [ebp+lpString]  +
call sub_1008250  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
push 0  +
push offset String2  +
push [ebp+lpString]  +
call sub_10078D3  +
test eax eax +
jz loc_1003F8D  +
push 0  +
push [ebp+lpString]  +
call sub_10078B2  +
test eax eax +
jz loc_1003F8D  +
push 0Ah  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+lpString]  +
call ds:wcstoul  +
add esp 0Ch +
cmp eax [ebp+arg_4] +
jz loc_1003F8D  +
xor eax eax +
jmp locret_1003F90  +
xor eax eax +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push offset String2  +
push [ebp+lpString1]  +
call sub_10078D3  +
test eax eax +
jz loc_1003FD8  +
push 0  +
push [ebp+lpString1]  +
call sub_10078B2  +
test eax eax +
jz loc_1003FD8  +
push 0  +
push 1  +
push [ebp+lpString2]  +
push [ebp+lpString1]  +
call sub_10078D3  +
test eax eax +
jz loc_1003FD8  +
xor eax eax +
jmp loc_1003FDB  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push offset String2  +
push [ebp+lpString]  +
call sub_10078D3  +
test eax eax +
jz loc_10040F1  +
push esi  +
push [ebp+lpString]  +
call sub_10078B2  +
test eax eax +
jz loc_10040F1  +
or ebx 0FFFFFFFFh +
push ebx  +
push 4Eh  +
call sub_100969E  +
mov esi ds:CompareStringW +
push eax  +
push ebx  +
push [ebp+lpString]  +
mov edi 400h +
push 1  +
push edi  +
call esi  +
cmp eax 2 +
jnz loc_100405F  +
mov ecx [ebp+arg_4] +
xor eax eax +
inc eax  +
and ecx eax +
cmp cl al +
jnz loc_10040ED  +
mov ecx [ebp+arg_4] +
and ecx 2 +
cmp cl 2 +
jz loc_10040ED  +
jmp loc_10040F4  +
push ebx  +
push 4Fh  +
call sub_100969E  +
push eax  +
push ebx  +
push [ebp+lpString]  +
push 1  +
push edi  +
call esi  +
cmp eax 2 +
jnz loc_100408C  +
mov eax [ebp+arg_4] +
and eax 2 +
cmp al 2 +
jnz loc_10040ED  +
mov ecx [ebp+arg_4] +
xor eax eax +
inc eax  +
and ecx eax +
cmp cl al +
jmp loc_1004054  +
push ebx  +
push 0ADh  +
call sub_100969E  +
push eax  +
push ebx  +
push [ebp+lpString]  +
push 1  +
push edi  +
call esi  +
cmp eax 2 +
jnz loc_10040BF  +
mov ecx [ebp+arg_4] +
xor eax eax +
inc eax  +
and ecx eax +
cmp cl al +
jnz loc_10040ED  +
mov ecx [ebp+arg_4] +
and ecx 2 +
cmp cl 2 +
jnz loc_10040ED  +
jmp loc_10040F4  +
push ebx  +
push 0AEh  +
call sub_100969E  +
push eax  +
push ebx  +
push [ebp+lpString]  +
push 1  +
push edi  +
call esi  +
cmp eax 2 +
jnz loc_10040ED  +
mov eax [ebp+arg_4] +
and eax 2 +
cmp al 2 +
jnz loc_10040ED  +
mov eax [ebp+arg_4] +
and eax 1 +
cmp al 1 +
jz loc_10040F1  +
xor eax eax +
jmp loc_10040F4  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push offset String2  +
push [ebp+lpString2]  +
call sub_10078D3  +
test eax eax +
jz loc_100413F  +
push 0  +
push [ebp+lpString2]  +
call sub_10078B2  +
test eax eax +
jz loc_100413F  +
push 0  +
push 1  +
push [ebp+lpString2]  +
push [ebp+lpString1]  +
call sub_10078D3  +
test eax eax +
jz loc_100413F  +
xor eax eax +
jmp loc_1004142  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 430h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+servername] eax +
mov eax [ebp+arg_4] +
mov [ebp+lpString1] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_42C] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov [ebp+var_424] eax +
mov eax [ebp+arg_10] +
xor ebx ebx +
push esi  +
mov [ebp+lpString2] eax +
push edi  +
mov [ebp+entriesread] ebx +
mov [ebp+totalentries] ebx +
mov [ebp+resume_handle] ebx +
mov [ebp+bufptr] ebx +
mov ecx 3F8h +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10041B5  +
lea eax [ebp+resume_handle] +
push eax  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+bufptr] +
push eax  +
push 3  +
push ebx  +
push ebx  +
push [ebp+servername]  +
call NetFileEnum  +
mov [ebp+var_428] eax +
cmp eax 5 +
jz loc_10043A2  +
mov ecx [ebp+bufptr] +
mov [ebp+Buffer] ecx +
cmp eax ebx +
jz loc_1004212  +
cmp eax 0EAh +
jnz loc_1004365  +
mov [ebp+var_408] ebx +
cmp [ebp+entriesread] ebx +
jbe loc_1004365  +
mov eax [ebp+bufptr] +
push dword ptr [eax+0Ch]  +
call sub_1003F22  +
test eax eax +
jnz loc_1004346  +
mov eax [ebp+bufptr] +
push dword ptr [eax]  +
push [ebp+lpString1]  +
call sub_1003F45  +
mov esi eax +
mov eax [ebp+bufptr] +
push dword ptr [eax+10h]  +
push [ebp+var_42C]  +
call sub_1003F99  +
mov edi eax +
mov eax [ebp+bufptr] +
push dword ptr [eax+4]  +
push [ebp+var_424]  +
call sub_1003FE4  +
mov [ebp+var_420] eax +
mov eax [ebp+bufptr] +
push dword ptr [eax+0Ch]  +
push [ebp+lpString2]  +
call sub_1004100  +
cmp esi ebx +
jz loc_1004346  +
cmp edi ebx +
jz loc_1004346  +
cmp [ebp+var_420] ebx +
jz loc_1004346  +
cmp eax ebx +
jz loc_1004346  +
mov ecx 3F8h +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10042C2  +
mov eax [ebp+bufptr] +
push dword ptr [eax]  +
push [ebp+servername]  +
call NetFileClose  +
test eax eax +
mov eax [ebp+bufptr] +
push dword ptr [eax+0Ch]  +
jnz loc_1004315  +
push 3Eh  +
call sub_100969E  +
push eax  +
lea eax [ebp+String] +
push 1FCh  +
push eax  +
call sub_1001D0D  +
add esp 10h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
jmp loc_1004340  +
push 40h  +
call sub_100969E  +
push eax  +
lea eax [ebp+String] +
push 1FCh  +
push eax  +
call sub_1001D0D  +
add esp 10h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
inc [ebp+var_408]  +
mov eax [ebp+var_408] +
add [ebp+bufptr] 14h +
cmp eax [ebp+entriesread] +
jb loc_1004224  +
cmp [ebp+Buffer] ebx +
jz loc_100437E  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
mov [ebp+bufptr] ebx +
cmp [ebp+var_428] 0EAh +
jz loc_10041BB  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn 14h  +
push 80070005h  +
call ds:SetLastError  +
call sub_1007683  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10096B6  +
xor eax eax +
jmp loc_1004391  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi 7D0h +
push edi  +
call ??_U@YAPAXI@Z  +
xor ebx ebx +
mov esi eax +
pop ecx  +
mov [ebp+var_8] ebx +
cmp esi ebx +
jnz loc_10043F6  +
xor eax eax +
jmp loc_1004496  +
mov [eax] bl +
inc eax  +
dec edi  +
jnz loc_10043F6  +
mov eax [ebp+arg_4] +
mov [esi+4] eax +
mov eax [ebp+arg_8] +
mov [esi+8] eax +
lea eax [ebp+hLookup] +
push eax  +
push 210h  +
push esi  +
mov dword ptr [esi] 3Ch +
mov [esi+14h] ebx +
mov dword ptr [esi+20h] 2 +
mov dword ptr [esi+24h] offset unk_100F044 +
call ds:WSALookupServiceBeginW  +
test eax eax +
jnz loc_100448C  +
push esi  +
lea eax [ebp+dwBufferLength] +
push eax  +
push ebx  +
push [ebp+hLookup]  +
call ds:WSALookupServiceNextW  +
mov edi eax +
cmp edi ebx +
jnz loc_1004470  +
mov eax [esi+38h] +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_1004469  +
cmp [ebp+arg_C] ebx +
jz loc_1004478  +
push 100h  +
push dword ptr [esi+4]  +
push [ebp+arg_C]  +
call sub_10082C0  +
jmp loc_1004478  +
mov edi 2AFCh +
jmp loc_1004478  +
call ds:GetLastError  +
mov edi eax +
push [ebp+hLookup]  +
call ds:WSALookupServiceEnd  +
cmp edi ebx +
jz loc_100448C  +
push edi  +
call ds:SetLastError  +
push esi  +
call ??_V@YAXPAX@Z  +
mov eax [ebp+var_8] +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi 7D0h +
push esi  +
call ??_U@YAPAXI@Z  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_10044C7  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10044E7  +
mov byte ptr [eax] 0 +
inc eax  +
dec esi  +
jnz loc_10044C7  +
push edi  +
push offset unk_100F024  +
push [ebp+arg_0]  +
push 3E8h  +
call sub_10043CE  +
neg eax  +
sbb eax eax +
and eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi 7D0h +
push esi  +
call ??_U@YAPAXI@Z  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_1004517  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1004537  +
mov byte ptr [eax] 0 +
inc eax  +
dec esi  +
jnz loc_1004517  +
push edi  +
push offset unk_100F034  +
push [ebp+arg_0]  +
push 3E8h  +
call sub_10043CE  +
neg eax  +
sbb eax eax +
and eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 194h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1004566  +
xor eax eax +
jmp loc_1004661  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_10045B2  +
call ds:WSAGetLastError  +
push eax  +
call ds:SetLastError  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100770A  +
jmp loc_100455F  +
push edi  +
push esi  +
call sub_100B78B  +
push esi  +
test eax eax +
jz loc_10045DE  +
call sub_10044F2  +
mov edi eax +
test edi edi +
jz loc_10045EF  +
push 100h  +
push edi  +
push esi  +
call sub_10082C0  +
push edi  +
call ??_V@YAXPAX@Z  +
pop ecx  +
jmp loc_1004657  +
call sub_100BD15  +
test eax eax +
jz loc_1004625  +
push esi  +
call sub_10044A2  +
jmp loc_10045C3  +
call ds:WSAGetLastError  +
push eax  +
call ds:SetLastError  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100770A  +
jmp loc_1004657  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
push 0A4h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1006E22  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_100D390  +
mov eax large fs:0 +
push eax  +
mov eax 125Ch +
call __alloca_probe  +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov [ebp+servername] eax +
mov eax [ebp+arg_8] +
push offset dword_1001430  +
lea ecx [ebp+var_1224] +
mov [ebp+lpString1] eax +
call ??0CHString@@QAE@PBG@Z  +
xor ebx ebx +
mov [ebp+var_4] ebx +
mov esi 202h +
push esi  +
mov [ebp+entriesread] ebx +
mov [ebp+totalentries] ebx +
mov [ebp+resume_handle] ebx +
mov [ebp+var_1250] ebx +
mov [ebp+var_1230] 2 +
mov [ebp+bufptr] ebx +
call ??_U@YAPAXI@Z  +
mov edi eax +
mov [ebp+var_123C] edi +
mov [ebp+var_1254] ebx +
mov [esp+1280h+var_1280] 7D2h +
call ??_U@YAPAXI@Z  +
pop ecx  +
mov [ebp+lpString] eax +
cmp eax ebx +
jnz loc_1004765  +
push 8  +
call ds:SetLastError  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100770A  +
cmp edi ebx +
jz loc_100501D  +
push edi  +
jmp loc_1005017  +
push esi  +
call ??_U@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_122C] eax +
cmp eax ebx +
jnz loc_10047BB  +
push 8  +
call ds:SetLastError  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100770A  +
cmp edi ebx +
jz loc_10047B0  +
push edi  +
call ??_V@YAXPAX@Z  +
pop ecx  +
push [ebp+lpString]  +
jmp loc_1005017  +
mov edi [ebp+arg_C] +
neg edi  +
mov esi 1FCh +
sbb edi edi +
push esi  +
lea eax [ebp+var_1218] +
push ebx  +
and edi 0FFFFF000h +
push eax  +
add edi 1010h +
mov [ebp+var_121C] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_1010] +
push ebx  +
push eax  +
mov [ebp+var_101C] 0Fh +
mov [ebp+var_1018] edi +
mov [ebp+var_1014] ebx +
call memset  +
push esi  +
lea eax [ebp+var_F84] +
push ebx  +
push eax  +
mov [ebp+var_F90] ebx +
mov [ebp+var_F8C] ebx +
mov [ebp+var_F88] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_D7C] +
push ebx  +
push eax  +
mov [ebp+var_D88] 8 +
mov [ebp+var_D84] 10h +
mov [ebp+var_D80] ebx +
call memset  +
push esi  +
lea eax [ebp+var_CF0] +
push ebx  +
push eax  +
mov [ebp+var_CFC] ebx +
mov [ebp+var_CF8] ebx +
mov [ebp+var_CF4] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_AE8] +
push ebx  +
push eax  +
mov [ebp+var_AF4] 14h +
mov [ebp+var_AF0] 10h +
mov [ebp+var_AEC] ebx +
call memset  +
add esp 48h +
push esi  +
lea eax [ebp+var_A5C] +
push ebx  +
push eax  +
mov [ebp+var_A68] ebx +
mov [ebp+var_A64] ebx +
mov [ebp+var_A60] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_854] +
push ebx  +
push eax  +
mov [ebp+var_860] 0Ah +
mov [ebp+var_85C] 10h +
mov [ebp+var_858] ebx +
call memset  +
push esi  +
lea eax [ebp+var_7C8] +
push ebx  +
push eax  +
mov [ebp+var_7D4] ebx +
mov [ebp+var_7D0] ebx +
mov [ebp+var_7CC] ebx +
call memset  +
mov [ebp+var_5CC] 0Ah +
mov [ebp+var_5C8] edi +
mov [ebp+var_5C4] ebx +
push 7Eh  +
lea eax [ebp+var_5C0] +
push ebx  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_534] +
push ebx  +
push eax  +
mov [ebp+var_540] ebx +
mov [ebp+var_53C] ebx +
mov [ebp+var_538] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_32C] +
push ebx  +
push eax  +
mov [ebp+var_338] 0Fh +
mov [ebp+var_334] edi +
mov [ebp+var_330] ebx +
call memset  +
add esp 48h +
push esi  +
lea eax [ebp+var_2A0] +
push ebx  +
push eax  +
mov [ebp+var_2AC] ebx +
mov [ebp+var_2A8] ebx +
mov [ebp+var_2A4] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_98] +
push ebx  +
push eax  +
mov [ebp+var_A4] 24h +
mov [ebp+var_A0] 80010h +
mov [ebp+var_9C] ebx +
call memset  +
add esp 18h +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
call sub_100A9AF  +
mov esi [ebp+var_123C] +
mov [ebp+var_1220] eax +
cmp esi ebx +
jz loc_1004FB1  +
cmp eax ebx +
jz loc_1004FB1  +
mov edi [ebp+lpString] +
mov eax 200h +
mov edx eax +
mov ecx edi +
mov [ecx] bl +
inc ecx  +
dec edx  +
jnz loc_10049F9  +
mov ecx esi +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1004A01  +
mov esi 100h +
push esi  +
push 44h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_121C] +
push eax  +
call sub_10082C0  +
push esi  +
push 45h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_F88] +
push eax  +
call sub_10082C0  +
push esi  +
push 47h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_CF4] +
push eax  +
call sub_10082C0  +
push esi  +
push 48h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_A60] +
push eax  +
call sub_10082C0  +
push esi  +
push 49h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_7CC] +
push eax  +
call sub_10082C0  +
push esi  +
push 4Ah  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_538] +
push eax  +
call sub_10082C0  +
push esi  +
push 4Bh  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_2A4] +
push eax  +
call sub_10082C0  +
cmp [ebp+lpString1] ebx +
jz loc_1004AF7  +
push ebx  +
push 1  +
push 96h  +
call sub_100969E  +
push eax  +
push [ebp+lpString1]  +
call sub_10078D3  +
test eax eax +
jnz loc_1004AD0  +
mov [ebp+var_1230] 1 +
jmp loc_1004AF7  +
push ebx  +
push 1  +
push 97h  +
call sub_100969E  +
push eax  +
push [ebp+lpString1]  +
call sub_10078D3  +
test eax eax +
jnz loc_1004AF7  +
mov [ebp+var_1230] 3 +
cmp [ebp+servername] ebx +
jz loc_1004B3D  +
push [ebp+servername]  +
call sub_100BBAE  +
cmp eax 1 +
jz loc_1004B3D  +
push esi  +
push [ebp+servername]  +
push edi  +
call sub_10082C0  +
push edi  +
call sub_1004542  +
test eax eax +
jnz loc_1004B9D  +
push edi  +
call ??_V@YAXPAX@Z  +
push [ebp+var_123C]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
jmp loc_1004FF6  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
mov [ebp+Buffer] 3E9h +
call ds:GetComputerNameW  +
push offset dword_1001430  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push [ebp+var_1230]  +
call sub_100653A  +
push 0B8h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
push 0BEh  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
push esi  +
push 4Ch  +
call sub_100969E  +
push eax  +
push [ebp+var_123C]  +
call sub_10082C0  +
mov edi 0FFh +
lea eax [ebp+resume_handle] +
push eax  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+bufptr] +
push eax  +
push 3  +
push ebx  +
push ebx  +
push [ebp+servername]  +
call NetFileEnum  +
mov [ebp+var_1260] eax +
cmp eax 5 +
jz loc_1004ED1  +
mov ecx [ebp+bufptr] +
mov [ebp+Buffer] ecx +
cmp eax ebx +
jz loc_1004C0D  +
cmp eax 0EAh +
jnz loc_1004E85  +
mov [ebp+lpString1] ebx +
cmp [ebp+entriesread] ebx +
jbe loc_1004E85  +
mov [ebp+var_1250] 1 +
push ebx  +
push [ebp+var_1220]  +
call sub_100AE9C  +
mov esi [ebp+var_1254] +
push ebx  +
push [ebp+lpString]  +
push esi  +
push [ebp+var_1220]  +
call sub_100AF5A  +
mov eax [ebp+bufptr] +
push dword ptr [eax]  +
push offset aLu  +
push edi  +
push [ebp+var_122C]  +
call sub_1001D0D  +
add esp 10h +
push ebx  +
push [ebp+var_122C]  +
push esi  +
push [ebp+var_1220]  +
call sub_100AF5A  +
mov eax [ebp+bufptr] +
push ebx  +
push dword ptr [eax+10h]  +
call sub_10078B2  +
push ebx  +
test eax eax +
ja loc_1004C9E  +
push 0A7h  +
call sub_100969E  +
push eax  +
jmp loc_1004CA7  +
mov eax [ebp+bufptr] +
push dword ptr [eax+10h]  +
push esi  +
push [ebp+var_1220]  +
call sub_100AF5A  +
push ebx  +
push [ebp+var_123C]  +
push esi  +
push [ebp+var_1220]  +
call sub_100AF5A  +
mov eax [ebp+bufptr] +
push dword ptr [eax+8]  +
push offset aLd  +
push edi  +
push [ebp+var_122C]  +
call sub_1001D0D  +
add esp 10h +
push ebx  +
push [ebp+var_122C]  +
push esi  +
push [ebp+var_1220]  +
call sub_100AF5A  +
mov eax [ebp+bufptr] +
mov eax [eax+4] +
mov ecx eax +
and ecx 1 +
jz loc_1004D0F  +
test al 2 +
jz loc_1004D18  +
push ebx  +
push 50h  +
jmp loc_1004D26  +
test al 2 +
jz loc_1004D18  +
push ebx  +
push 4Fh  +
jmp loc_1004D26  +
push ebx  +
cmp ecx ebx +
jz loc_1004D21  +
push 4Eh  +
jmp loc_1004D26  +
push 99h  +
call sub_100969E  +
push eax  +
push esi  +
push [ebp+var_1220]  +
call sub_100AF5A  +
mov eax [ebp+bufptr] +
push dword ptr [eax+0Ch]  +
lea ecx [ebp+var_1224] +
call ??4CHString@@QAEABV0@PBG@Z  +
cmp [ebp+arg_C] ebx +
jnz loc_1004E42  +
lea ecx [ebp+var_1224] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp dword ptr [eax+4] 1Fh +
jle loc_1004E4C  +
cmp [ebp+var_1230] 2 +
jnz loc_1004E4C  +
push 1Fh  +
lea eax [ebp+var_1238] +
push eax  +
lea ecx [ebp+var_1224] +
call ?Right@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_1238] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
push dword ptr [eax+4]  +
lea ecx [ebp+var_1238] +
push offset dword_10012E0  +
call ?Find@CHString@@QBEHPBG@Z  +
push eax  +
lea eax [ebp+var_1258] +
push eax  +
lea ecx [ebp+var_1238] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp+var_4] 2 +
push eax  +
lea ecx [ebp+var_1238] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_1258] +
call ??1CHString@@QAE@XZ  +
push 3  +
push ebx  +
lea eax [ebp+var_125C] +
push eax  +
lea ecx [ebp+var_1224] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp+var_4] 3 +
push [ebp+var_1238]  +
push offset a__  +
push dword ptr [eax]  +
lea eax [ebp+var_1224] +
push offset aSSS  +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 14h +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_125C] +
call ??1CHString@@QAE@XZ  +
mov [ebp+var_A4] 25h +
mov byte ptr [ebp+var_4] bl +
lea ecx [ebp+var_1238] +
call ??1CHString@@QAE@XZ  +
jmp loc_1004E4C  +
mov [ebp+var_A4] 50h +
push ebx  +
push [ebp+var_1224]  +
push esi  +
push [ebp+var_1220]  +
call sub_100AF5A  +
add [ebp+bufptr] 14h +
inc esi  +
inc [ebp+lpString1]  +
mov eax [ebp+lpString1] +
mov [ebp+var_1254] esi +
cmp eax [ebp+entriesread] +
jb loc_1004C29  +
cmp [ebp+Buffer] ebx +
jz loc_1004E9E  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
mov [ebp+bufptr] ebx +
cmp [ebp+var_1260] 0EAh +
jz loc_1004BB6  +
cmp [ebp+var_1250] ebx +
jnz loc_1004EFF  +
push 51h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
jmp loc_1004F5F  +
push 80070005h  +
call ds:SetLastError  +
call sub_1007683  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10096B6  +
push [ebp+lpString]  +
jmp loc_1004B27  +
cmp [ebp+var_1230] 3 +
jz loc_1004F1B  +
mov eax ds:_iob +
push offset asc_1001454  +
add eax 20h +
push eax  +
call sub_1008346  +
cmp [ebp+arg_4] 1 +
jnz loc_1004F2B  +
or [ebp+var_1230] 1000h +
push [ebp+var_1220]  +
lea eax [ebp+var_121C] +
push [ebp+var_1230]  +
push eax  +
push 7  +
call sub_100D067  +
cmp [ebp+var_1220] ebx +
jz loc_1004F5F  +
lea eax [ebp+var_1220] +
push eax  +
call sub_100AA24  +
mov [ebp+var_1220] ebx +
push [ebp+lpString]  +
call ??_V@YAXPAX@Z  +
push [ebp+var_123C]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
pop ecx  +
cmp [ebp+var_1220] ebx +
jz loc_1004F91  +
lea eax [ebp+var_1220] +
push eax  +
call sub_100AA24  +
mov [ebp+var_1220] ebx +
push [ebp+var_122C]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1224] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100502E  +
push 8  +
call ds:SetLastError  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100770A  +
push [ebp+lpString]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
cmp esi ebx +
jz loc_1004FF7  +
push esi  +
call ??_V@YAXPAX@Z  +
pop ecx  +
cmp [ebp+var_1220] ebx +
jz loc_1005011  +
lea eax [ebp+var_1220] +
push eax  +
call sub_100AA24  +
mov [ebp+var_1220] ebx +
push [ebp+var_122C]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1224] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_1006E22  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push offset phkResult  +
push 2001Fh  +
push 0  +
push offset SubKey  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10050B8  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aGlobalflag  +
push phkResult  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_10050AC  +
cmp [ebp+Type] 4 +
jnz loc_10050AC  +
mov eax dword ptr [ebp+Data] +
leave   +
retn   +
push phkResult  +
call ds:RegCloseKey  +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 0  +
push offset aGlobalflag  +
push phkResult  +
call ds:RegSetValueExW  +
test eax eax +
jz loc_10050F5  +
push phkResult  +
call ds:RegCloseKey  +
xor al al +
jmp loc_10050F7  +
mov al 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 4  +
push 1000h  +
push dword ptr [esi]  +
push 0  +
call ds:VirtualAlloc  +
mov edi eax +
test edi edi +
jz loc_100513C  +
push 1Ch  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call ds:VirtualQuery  +
test eax eax +
jz loc_100513A  +
mov eax [ebp+Buffer.RegionSize] +
mov [esi] eax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 8000h  +
push 0  +
push [ebp+lpAddress]  +
call ds:VirtualFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
and [ebp+var_4] 0 +
lea eax [ebp+var_40] +
mov dword_100F6D4 eax +
mov [ebp+var_8] 38h +
push esi  +
mov esi [ebp+var_8] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
push eax  +
push 11h  +
call ds:NtQuerySystemInformation  +
cmp eax 0C0000004h +
jnz loc_10051D4  +
cmp [ebp+var_4] esi +
jbe loc_10051D8  +
mov eax dword_100F6D4 +
lea ecx [ebp+var_40] +
cmp eax ecx +
jz loc_10051B0  +
push eax  +
call sub_1005147  +
mov eax [ebp+var_4] +
add eax 1000h +
mov [ebp+var_8] eax +
lea eax [ebp+var_8] +
push eax  +
call sub_1005100  +
mov dword_100F6D4 eax +
test eax eax +
jnz loc_1005181  +
xor al al +
jmp loc_1005258  +
test eax eax +
jge loc_10051EC  +
mov eax dword_100F6D4 +
lea ecx [ebp+var_40] +
cmp eax ecx +
jz loc_10051CD  +
push eax  +
call sub_1005147  +
jmp loc_10051CD  +
mov edx dword_100F6D4 +
mov eax edx +
mov ecx [eax+0Ch] +
cmp ecx 80h +
jnb loc_1005214  +
mov esi [eax+30h] +
imul ecx ecx +
mov dword_100F0C0[ecx] esi +
mov esi [eax+34h] +
mov dword_100F0C4[ecx] esi +
mov eax [eax] +
test eax eax +
jz loc_100521E  +
add eax edx +
jmp loc_10051F4  +
push offset aUnknowntypeidx  +
push offset dword_100F0B8  +
call ds:RtlInitUnicodeString  +
mov eax offset dword_100F0C0 +
mov ecx 81h +
xor edx edx +
cmp dx [eax] +
jnz loc_1005250  +
mov edx dword_100F0B8 +
mov [eax] edx +
mov edx dword_100F0BC +
mov [eax+4] edx +
add eax 0Ch +
dec ecx  +
jnz loc_1005238  +
mov al 1 +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
and [ebp+var_4] 0 +
lea eax [ebp+var_2C] +
mov dword_100F6D0 eax +
mov [ebp+var_8] 24h +
push esi  +
mov esi [ebp+var_8] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
push eax  +
push 40h  +
call ds:NtQuerySystemInformation  +
cmp eax 0C0000004h +
jnz loc_10052CF  +
cmp [ebp+var_4] esi +
jbe loc_10052D3  +
mov eax dword_100F6D0 +
lea ecx [ebp+var_2C] +
cmp eax ecx +
jz loc_10052AB  +
push eax  +
call sub_1005147  +
mov eax [ebp+var_4] +
add eax 1000h +
mov [ebp+var_8] eax +
lea eax [ebp+var_8] +
push eax  +
call sub_1005100  +
mov dword_100F6D0 eax +
test eax eax +
jnz loc_100527C  +
xor al al +
jmp loc_1005359  +
test eax eax +
jge loc_10052E7  +
mov eax dword_100F6D0 +
lea ecx [ebp+var_2C] +
cmp eax ecx +
jz loc_10052C8  +
push eax  +
call sub_1005147  +
jmp loc_10052C8  +
mov ecx dword_100F6D4 +
mov esi dword_100F6D0 +
push ebx  +
push edi  +
mov ebx ecx +
movzx edx word ptr [ebx+32h] +
add edx [ebx+34h] +
mov [ebp+var_8] ebx +
cmp dword ptr [edx+14h] 0 +
jz loc_1005340  +
xor edi edi +
lea eax [esi+8] +
cmp [esi] edi +
jbe loc_1005340  +
mov ecx [eax+14h] +
inc edi  +
test cl cl +
js loc_1005333  +
mov ebx [eax] +
cmp ebx [edx+4] +
mov ebx [ebp+var_8] +
jnz loc_1005333  +
or ecx 80h +
mov [eax] edx +
mov [eax+14h] ecx +
mov esi dword_100F6D0 +
add eax 1Ch +
cmp edi [esi] +
jb loc_1005310  +
mov ecx dword_100F6D4 +
mov edx [edx] +
test edx edx +
jz loc_100534A  +
add edx ecx +
jmp loc_1005301  +
mov eax [ebx] +
test eax eax +
jz loc_1005355  +
lea ebx [eax+ecx] +
jmp loc_10052F7  +
pop edi  +
mov al 1 +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
lea eax [ebp+var_4] +
mov ebx offset dword_100F6D8 +
push eax  +
mov dword_100F6DC ebx +
mov dword_100F6D8 ebx +
mov [ebp+var_4] 10000h +
call sub_1005100  +
xor edi edi +
mov lpAddress eax +
cmp eax edi +
jnz loc_100539D  +
xor al al +
jmp loc_1005469  +
push esi  +
mov esi [ebp+var_4] +
push edi  +
push esi  +
push eax  +
push 5  +
call ds:NtQuerySystemInformation  +
cmp eax 0C0000004h +
jnz loc_10053E8  +
push 8000h  +
push edi  +
push lpAddress  +
call ds:VirtualFree  +
test eax eax +
jz loc_10053E1  +
lea eax [esi+esi] +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
call sub_1005100  +
mov lpAddress eax +
cmp eax edi +
jnz loc_100539E  +
xor al al +
jmp loc_1005468  +
cmp eax edi +
jl loc_10053E1  +
mov esi lpAddress +
mov [ebp+var_8] edi +
mov eax large fs:18h +
mov ecx [esi+4] +
mov eax [eax+30h] +
lea ecx ds:10h[ecx*4] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
test eax eax +
jz loc_10053E1  +
xor edi edi +
mov [eax+4] eax +
mov [eax] eax +
mov [eax+8] esi +
lea ecx [esi+0B8h] +
cmp [esi+4] edi +
jbe loc_100543E  +
lea edx [eax+0Ch] +
mov [edx] ecx +
add ecx 40h +
inc edi  +
add edx 4 +
cmp edi [esi+4] +
jb loc_1005430  +
mov ecx dword_100F6DC +
mov [eax] ebx +
mov [eax+4] ecx +
mov [ecx] eax +
mov dword_100F6DC eax +
mov esi [esi] +
test esi esi +
jz loc_1005466  +
add [ebp+var_8] esi +
mov eax lpAddress +
mov ecx [ebp+var_8] +
lea esi [eax+ecx] +
jmp loc_10053F5  +
mov al 1 +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_100F6D8 +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi offset dword_100F6D8 +
jmp loc_1005493  +
mov eax [ecx+8] +
cmp [eax+44h] edi +
jz loc_10054D6  +
mov ecx [ecx] +
cmp ecx esi +
jnz loc_1005489  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0C8h  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
test eax eax +
jz loc_10054D6  +
lea ecx [eax+10h] +
mov [eax+8] ecx +
mov [ecx+44h] edi +
mov [eax+4] eax +
mov [eax] eax +
mov edx dword_100F6DC +
mov [eax] esi +
mov [eax+4] edx +
mov [edx] eax +
mov dword_100F6DC eax +
mov eax ecx +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_GS  +
mov eax [ebp+18h] +
mov edi [ebp+8] +
mov esi [ebp+10h] +
mov ebx [ebp+0Ch] +
mov [ebp-4A0h] eax +
mov eax [ebp+1Ch] +
mov [ebp-480h] eax +
mov eax [ebp+20h] +
push edi  +
lea ecx [ebp-47Ch] +
mov [ebp-488h] edi +
mov [ebp-484h] esi +
mov [ebp-490h] eax +
call ??0CHString@@QAE@PBG@Z  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-490h] +
and dword ptr [eax] 0 +
push 5  +
mov [ebp-48Ch] esi +
pop ecx  +
lea eax [ebp-1Ch] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1005545  +
test edi edi +
jnz loc_100556B  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-47Ch] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
call sub_1006F54  +
retn 1Ch  +
mov ecx 105h +
lea eax [ebp-228h] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1005576  +
push 3  +
push dword ptr [ebp-480h]  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10082C0  +
push 5Ch  +
pop eax  +
cmp ax [edi] +
jnz loc_100588F  +
push 3Bh  +
pop eax  +
cmp ax [edi+2] +
jnz loc_100565A  +
mov ax [edi+4] +
mov [ebx] ax +
push 3Ah  +
pop eax  +
mov [ebx+2] ax +
xor eax eax +
xor edi edi +
mov [ebx+4] ax +
xor esi esi +
push offset dword_10012E0  +
lea ecx [ebp-47Ch] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1005613  +
inc edi  +
lea ecx [ebp-47Ch] +
cmp edi 4 +
jz loc_1005624  +
inc eax  +
push eax  +
lea eax [ebp-494h] +
push eax  +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-494h] +
call ??1CHString@@QAE@XZ  +
inc esi  +
cmp esi 5 +
jl loc_10055BF  +
mov eax [ebp-490h] +
mov dword ptr [eax] 1 +
jmp loc_1005550  +
push eax  +
lea eax [ebp-49Ch] +
push eax  +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 1 +
mov eax [eax] +
push 101h  +
push eax  +
push ebx  +
call sub_1008303  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-49Ch] +
call ??1CHString@@QAE@XZ  +
xor esi esi +
inc esi  +
jmp loc_1005552  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [ebp-47Ch] +
call ??YCHString@@QAEABV0@PBG@Z  +
mov esi ds:FindFirstFileW +
lea eax [ebp-478h] +
push eax  +
push dword ptr [ebp-47Ch]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_10056A9  +
push eax  +
call ds:FindClose  +
push 101h  +
push dword ptr [ebp-47Ch]  +
push ebx  +
call sub_10082C0  +
jmp loc_1005652  +
and dword ptr [ebp-480h] 0 +
cmp dword ptr [ebp+14h] 0 +
jbe loc_100571D  +
push 0  +
push 1  +
push dword ptr [ebp-484h]  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10078D3  +
test eax eax +
jz loc_1005705  +
mov eax [ebp-484h] +
cmp dword ptr [eax+8] 3 +
jnz loc_1005705  +
push eax  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [ebp-47Ch] +
call ??YCHString@@QAEABV0@PBG@Z  +
lea eax [ebp-478h] +
push eax  +
push dword ptr [ebp-47Ch]  +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_100568F  +
inc dword ptr [ebp-480h]  +
mov eax [ebp-480h] +
add dword ptr [ebp-484h] 10h +
cmp eax [ebp+14h] +
jb loc_10056B6  +
and dword ptr [ebp-480h] 0 +
cmp dword ptr [ebp+14h] 0 +
jbe loc_1005797  +
mov eax [ebp-48Ch] +
add eax 0Ch +
mov [ebp-488h] eax +
cmp dword ptr [eax-4] 3 +
jz loc_100577D  +
cmp dword ptr [eax] 1 +
jnz loc_100577D  +
add eax 0FFFFFFF4h +
push eax  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [ebp-47Ch] +
call ??YCHString@@QAEABV0@PBG@Z  +
lea eax [ebp-478h] +
push eax  +
push dword ptr [ebp-47Ch]  +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_100568F  +
mov eax [ebp-488h] +
inc dword ptr [ebp-480h]  +
mov ecx [ebp-480h] +
add eax 10h +
mov [ebp-488h] eax +
cmp ecx [ebp+14h] +
jb loc_1005739  +
push edi  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push 5Ch  +
pop eax  +
mov [ebx] ax +
xor eax eax +
and [ebp-484h] eax +
and [ebp-480h] eax +
mov [ebx+2] ax +
push offset dword_10012E0  +
lea ecx [ebp-47Ch] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1005613  +
inc eax  +
push eax  +
lea eax [ebp-498h] +
push eax  +
lea ecx [ebp-47Ch] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-498h] +
call ??1CHString@@QAE@XZ  +
inc dword ptr [ebp-484h]  +
cmp dword ptr [ebp-484h] 3 +
jz loc_100582A  +
inc dword ptr [ebp-480h]  +
cmp dword ptr [ebp-480h] 4 +
jl loc_10057BB  +
jmp loc_1005613  +
push 101h  +
push edi  +
push ebx  +
call sub_1008303  +
lea eax [ebp-478h] +
push eax  +
push ebx  +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_1005883  +
mov edi 104h +
push edi  +
push ebx  +
lea eax [ebp-228h] +
push eax  +
call sub_10082C0  +
push edi  +
push offset asc_100151C  +
lea eax [ebp-228h] +
push eax  +
call sub_1008303  +
lea eax [ebp-478h] +
push eax  +
lea eax [ebp-228h] +
push eax  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_1005613  +
push eax  +
call ds:FindClose  +
jmp loc_1005652  +
mov esi 101h +
push esi  +
push dword ptr [ebp-4A0h]  +
push ebx  +
call sub_10082C0  +
push esi  +
push offset dword_10012E0  +
push ebx  +
call sub_1008303  +
push esi  +
push edi  +
push ebx  +
call sub_1008303  +
mov edi ds:FindFirstFileW +
lea eax [ebp-478h] +
push eax  +
push dword ptr [ebp-47Ch]  +
call edi  +
cmp eax 0FFFFFFFFh +
jnz loc_1005883  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-488h]  +
lea ecx [ebp-47Ch] +
call ??YCHString@@QAEABV0@PBG@Z  +
lea eax [ebp-478h] +
push eax  +
push dword ptr [ebp-47Ch]  +
call edi  +
cmp eax 0FFFFFFFFh +
jz loc_1005910  +
push eax  +
call ds:FindClose  +
push esi  +
jmp loc_100569B  +
and dword ptr [ebp-480h] 0 +
cmp dword ptr [ebp+14h] 0 +
jbe loc_1005999  +
push 0  +
push 1  +
push dword ptr [ebp-484h]  +
lea eax [ebp-1Ch] +
push eax  +
call sub_10078D3  +
test eax eax +
jz loc_1005981  +
mov eax [ebp-484h] +
cmp dword ptr [eax+8] 3 +
jnz loc_1005981  +
push eax  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push offset dword_10012E0  +
lea ecx [ebp-47Ch] +
call ??YCHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-488h]  +
lea ecx [ebp-47Ch] +
call ??YCHString@@QAEABV0@PBG@Z  +
lea eax [ebp-478h] +
push eax  +
push dword ptr [ebp-47Ch]  +
call edi  +
cmp eax 0FFFFFFFFh +
jnz loc_1005903  +
inc dword ptr [ebp-480h]  +
mov eax [ebp-480h] +
add dword ptr [ebp-484h] 10h +
cmp eax [ebp+14h] +
jb loc_100591D  +
and dword ptr [ebp-480h] 0 +
cmp dword ptr [ebp+14h] 0 +
jbe loc_1005613  +
mov eax [ebp-48Ch] +
add eax 0Ch +
mov [ebp-48Ch] eax +
cmp dword ptr [eax-4] 3 +
jz loc_1005A12  +
cmp dword ptr [eax] 1 +
jnz loc_1005A12  +
add eax 0FFFFFFF4h +
push eax  +
lea ecx [ebp-47Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push offset dword_10012E0  +
lea ecx [ebp-47Ch] +
call ??YCHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-488h]  +
lea ecx [ebp-47Ch] +
call ??YCHString@@QAEABV0@PBG@Z  +
lea eax [ebp-478h] +
push eax  +
push dword ptr [ebp-47Ch]  +
call edi  +
cmp eax 0FFFFFFFFh +
jnz loc_1005903  +
mov eax [ebp-48Ch] +
inc dword ptr [ebp-480h]  +
mov ecx [ebp-480h] +
add eax 10h +
mov [ebp-48Ch] eax +
cmp ecx [ebp+14h] +
jb loc_10059B9  +
jmp loc_1005613  +
***
call __EH_prolog3  +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
call ??0CHString@@QAE@PBG@Z  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
mov ecx [ebp+10h] +
cmp eax ecx +
jle loc_1005B0A  +
cmp dword ptr [ebp+0Ch] 2 +
jnz loc_1005B0A  +
add ecx 0FFFFFFFAh +
push ecx  +
lea eax [ebp+10h] +
push eax  +
lea ecx [ebp-10h] +
call ?Right@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+10h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
push dword ptr [eax+4]  +
lea ecx [ebp+10h] +
push offset dword_10012E0  +
call ?Find@CHString@@QBEHPBG@Z  +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp+10h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp+10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
push 3  +
push 0  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp+10h]  +
push offset a__  +
push dword ptr [eax]  +
lea eax [ebp-10h] +
push offset aSSS  +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 14h +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp+10h] +
call ??1CHString@@QAE@XZ  +
push 100h  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+8]  +
call sub_10082C0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
call sub_1005165  +
test al al +
jnz loc_1005B3F  +
xor eax eax +
retn   +
call sub_1005260  +
test al al +
jz loc_1005B3C  +
call sub_1005361  +
xor ecx ecx +
test al al +
setnz cl  +
mov eax ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_100D461  +
mov eax large fs:0 +
push eax  +
mov eax 2788h +
call __alloca_probe  +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor ebx ebx +
lea ecx [ebp+lpString] +
mov [ebp+var_277C] ebx +
call ??0CHString@@QAE@XZ  +
mov [ebp+var_4] ebx +
mov edi [ebp+arg_8] +
neg edi  +
mov esi 1FCh +
sbb edi edi +
push esi  +
lea eax [ebp+var_25B8] +
push ebx  +
and edi 0FFFFF000h +
push eax  +
mov [ebp+var_276C] ebx +
mov [ebp+var_2780] ebx +
mov [ebp+var_2770] 41h +
mov [ebp+var_2768] 1 +
mov [ebp+var_2784] ebx +
mov [ebp+VolumeSerialNumber] ebx +
mov [ebp+FileSystemFlags] ebx +
mov [ebp+MaximumComponentLength] ebx +
mov [ebp+var_2788] ebx +
add edi 1010h +
mov [ebp+var_25BC] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_23B0] +
push ebx  +
push eax  +
mov [ebp+var_23BC] 5 +
mov [ebp+var_23B8] 10h +
mov [ebp+var_23B4] ebx +
call memset  +
push esi  +
lea eax [ebp+var_2324] +
push ebx  +
push eax  +
mov [ebp+var_2330] ebx +
mov [ebp+var_232C] ebx +
mov [ebp+var_2328] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_211C] +
push ebx  +
push eax  +
mov [ebp+var_2128] 0Ah +
mov [ebp+var_2124] 1000h +
mov [ebp+var_2120] ebx +
call memset  +
push esi  +
lea eax [ebp+var_2090] +
push ebx  +
push eax  +
mov [ebp+var_209C] ebx +
mov [ebp+var_2098] ebx +
mov [ebp+var_2094] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_1E88] +
push ebx  +
push eax  +
mov [ebp+var_1E94] 0Fh +
mov [ebp+var_1E90] edi +
mov [ebp+var_1E8C] ebx +
call memset  +
add esp 48h +
push esi  +
lea eax [ebp+var_1DFC] +
push ebx  +
push eax  +
mov [ebp+var_1E08] ebx +
mov [ebp+var_1E04] ebx +
mov [ebp+var_1E00] ebx +
call memset  +
push 7Eh  +
mov [ebp+var_1C00] 8 +
mov [ebp+var_1BFC] edi +
mov [ebp+var_1BF8] ebx +
push ebx  +
lea eax [ebp+var_1BF4] +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_1B68] +
push ebx  +
push eax  +
mov [ebp+var_1B74] ebx +
mov [ebp+var_1B70] ebx +
mov [ebp+var_1B6C] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_1960] +
push ebx  +
push eax  +
mov [ebp+var_196C] 14h +
mov [ebp+var_1968] 10h +
mov [ebp+var_1964] ebx +
call memset  +
push esi  +
lea eax [ebp+var_18D4] +
push ebx  +
push eax  +
mov [ebp+var_18E0] ebx +
mov [ebp+var_18DC] ebx +
mov [ebp+var_18D8] ebx +
call memset  +
push 7Eh  +
lea eax [ebp+var_16CC] +
push ebx  +
push eax  +
mov [ebp+var_16D8] 32h +
mov [ebp+var_16D4] 80010h +
mov [ebp+var_16D0] ebx +
call memset  +
add esp 48h +
push 3F8h  +
mov [ebp+var_164C] ebx +
mov [ebp+var_1648] ebx +
call ??_U@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_2774] eax +
cmp eax ebx +
jnz loc_1005DF9  +
push 8  +
call ds:SetLastError  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100770A  +
jmp loc_100650A  +
call sub_100A9AF  +
mov [ebp+var_2760] eax +
cmp eax ebx +
jnz loc_1005E3C  +
push 8  +
call ds:SetLastError  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100770A  +
jmp loc_10064FE  +
call sub_100A9AF  +
mov [ebp+var_2764] eax +
cmp eax ebx +
jnz loc_1005E7F  +
push 8  +
call ds:SetLastError  +
push 9Ch  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1008346  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100770A  +
jmp loc_10064CA  +
mov ecx 0FEh +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1005E8A  +
mov ecx 105h +
mov edx ecx +
lea eax [ebp+var_A20] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1005E9D  +
mov edx ecx +
lea eax [ebp+Buffer] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1005EAB  +
push 3  +
pop edx  +
lea eax [ebp+var_18] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1005EB7  +
mov edi 100h +
mov edx edi +
lea eax [ebp+var_1444] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1005ECA  +
mov edx edi +
lea eax [ebp+var_1244] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1005ED8  +
mov edx edi +
lea eax [ebp+var_1644] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1005EE6  +
lea eax [ebp+RootPathName] +
mov [eax] bl +
inc eax  +
dec esi  +
jnz loc_1005EF2  +
mov edx 104h +
lea eax [ebp+var_814] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1005F03  +
mov edx ecx +
lea eax [ebp+FileSystemNameBuffer] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1005F11  +
lea eax [ebp+VolumeNameBuffer] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1005F1D  +
push edi  +
push 45h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_25BC] +
push eax  +
call sub_10082C0  +
push edi  +
push 0C5h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_2328] +
push eax  +
call sub_10082C0  +
push edi  +
push 47h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_2094] +
push eax  +
call sub_10082C0  +
push edi  +
push 53h  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_1E00] +
push eax  +
call sub_10082C0  +
push edi  +
push 0BBh  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_1B6C] +
push eax  +
call sub_10082C0  +
push edi  +
push 4Bh  +
call sub_100969E  +
push eax  +
lea eax [ebp+var_18D8] +
push eax  +
call sub_10082C0  +
call ds:GetLogicalDrives  +
mov [ebp+var_18] eax +
mov esi 104h +
lea eax [ebp+var_A20] +
push esi  +
push eax  +
call ds:_wgetcwd  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005E53  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_1005E53  +
push 1Ah  +
lea esi [ebp+var_275C] +
pop edi  +
mov eax [ebp+var_2768] +
test [ebp+var_18] eax +
jz loc_1006076  +
movzx eax word ptr [ebp+var_2770] +
push eax  +
push offset aC  +
push 4  +
push esi  +
call sub_1001D0D  +
add esp 10h +
push esi  +
call ds:GetDriveTypeW  +
push esi  +
push offset aS_0  +
mov [esi+8] eax +
lea eax [ebp+RootPathName] +
push 1FBh  +
push eax  +
call sub_1001D0D  +
add esp 10h +
mov eax 104h +
push eax  +
lea ecx [ebp+FileSystemNameBuffer] +
push ecx  +
lea ecx [ebp+FileSystemFlags] +
push ecx  +
lea ecx [ebp+MaximumComponentLength] +
push ecx  +
lea ecx [ebp+VolumeSerialNumber] +
push ecx  +
push eax  +
lea eax [ebp+VolumeNameBuffer] +
push eax  +
lea eax [ebp+RootPathName] +
push eax  +
call ds:GetVolumeInformationW  +
inc [ebp+var_2780]  +
mov [esi+0Ch] eax +
add esi 10h +
shl [ebp+var_2768] 1 +
inc [ebp+var_2770]  +
dec edi  +
jnz loc_1005FEC  +
mov eax dword_100F6D0 +
or [ebp+var_18] 0FFFFFFFFh +
lea ecx [eax+8] +
mov [ebp+var_2768] ecx +
mov [ebp+var_2770] ebx +
cmp [eax] ebx +
jbe loc_100642B  +
mov edi [ebp+var_2768] +
mov eax [edi+4] +
cmp [ebp+var_18] eax +
jz loc_10060C6  +
push eax  +
mov [ebp+var_18] eax +
call sub_1005472  +
mov [ebp+var_277C] eax +
xor eax eax +
mov [ebp+String] ax +
test byte ptr [edi+14h] 80h +
jz loc_1006128  +
mov eax [edi] +
xor ecx ecx +
cmp cx [eax+28h] +
jz loc_10060EF  +
mov ecx [eax+2Ch] +
xor edx edx +
cmp dx [ecx] +
jnz loc_10060EF  +
xor ecx ecx +
mov [eax+28h] cx +
movzx esi word ptr [eax+28h] +
mov eax [eax+2Ch] +
shr esi 1 +
cmp eax ebx +
jz loc_100611F  +
mov ecx 0FEh +
cmp esi ecx +
jnb loc_100611F  +
push ecx  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10082C0  +
xor eax eax +
mov [ebp+esi*2+String] ax +
jmp loc_1006128  +
xor eax eax +
mov [ebp+String] ax +
mov eax dword_100FC00 +
cmp eax ebx +
jz loc_100614A  +
mov ecx [ebp+var_277C] +
cmp ecx ebx +
jz loc_100614A  +
cmp [ecx+44h] eax +
jnz loc_100640B  +
mov edi [ebp+var_2768] +
movzx edx word ptr [edi+12h] +
mov eax 80h +
mov ecx eax +
cmp dx cx +
jnb loc_100615D  +
movzx ecx dx +
imul ecx ecx +
mov esi eax +
add ecx offset dword_100F0C0 +
cmp dx si +
jnb loc_1006170  +
movzx eax dx +
imul eax eax +
lea eax dword_100F0C8[eax] +
inc dword ptr [eax]  +
cmp String1 bx +
jz loc_100619C  +
push ebx  +
push 1  +
push dword ptr [ecx+4]  +
push offset String1  +
call sub_10078D3  +
test eax eax +
jnz loc_100640B  +
cmp [ebp+String] bx +
jnz loc_10061AD  +
cmp byte_100F6FA bl +
jmp loc_1006208  +
cmp word_100F700 bx +
jz loc_100620E  +
push ebx  +
push offset word_100F700  +
lea eax [ebp+String] +
push eax  +
call sub_1008250  +
test eax eax +
jnz loc_100620E  +
push ebx  +
push offset word_100F700  +
lea esi [ebp+String] +
call sub_10078B2  +
mov edi eax +
cmp [ebp+String] bx +
jz loc_100640B  +
push edi  +
push 1  +
push offset word_100F700  +
push esi  +
call sub_10078D3  +
test eax eax +
jz loc_1006205  +
inc esi  +
inc esi  +
cmp [esi] bx +
jnz loc_10061EC  +
cmp [esi] bx +
jz loc_100640B  +
mov eax [ebp+var_277C] +
mov esi [eax+44h] +
push esi  +
push [ebp+var_2774]  +
call sub_1006731  +
test eax eax +
jz loc_100640B  +
lea eax [ebp+String] +
cmp [ebp+String] bx +
jnz loc_100623F  +
mov eax offset dword_1001430 +
push eax  +
push offset aWs  +
mov edi 1FBh +
lea eax [ebp+RootPathName] +
push edi  +
push eax  +
call sub_1001D0D  +
add esp 10h +
push [ebp+var_2764]  +
call sub_100A98E  +
cmp eax 1 +
jnz loc_1006287  +
push ebx  +
push eax  +
lea eax [ebp+RootPathName] +
push eax  +
push [ebp+var_2764]  +
call sub_100B57B  +
cmp eax 0FFFFFFFFh +
jnz loc_100640B  +
push 104h  +
push offset dword_1001430  +
lea eax [ebp+var_814] +
push eax  +
call sub_10082C0  +
lea eax [ebp+var_2788] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_A20] +
push eax  +
push [ebp+var_2780]  +
lea eax [ebp+var_275C] +
push eax  +
lea eax [ebp+var_814] +
push eax  +
lea eax [ebp+RootPathName] +
push eax  +
call sub_10054E1  +
test eax eax +
jnz loc_100630F  +
cmp [ebp+var_2788] 1 +
jnz loc_100640B  +
push [ebp+var_2764]  +
call sub_100A98E  +
cmp eax 1 +
jnz loc_100640B  +
push ebx  +
lea eax [ebp+RootPathName] +
push eax  +
push [ebp+var_2764]  +
call sub_100ACD1  +
jmp loc_100640B  +
push ebx  +
push [ebp+var_2760]  +
call sub_100AE9C  +
mov eax [ebp+var_2768] +
push dword ptr [eax+8]  +
lea eax [ebp+RootPathName] +
push offset aLd  +
push edi  +
push eax  +
call sub_1001D0D  +
add esp 10h +
push ebx  +
lea eax [ebp+RootPathName] +
push eax  +
push [ebp+var_276C]  +
push [ebp+var_2760]  +
call sub_100AF5A  +
push ebx  +
push [ebp+lpString]  +
push [ebp+var_276C]  +
push [ebp+var_2760]  +
call sub_100AF5A  +
push ebx  +
push [ebp+var_2774]  +
push [ebp+var_276C]  +
push [ebp+var_2760]  +
call sub_100AF5A  +
push esi  +
push offset aLd  +
lea eax [ebp+RootPathName] +
push edi  +
push eax  +
call sub_1001D0D  +
add esp 10h +
push ebx  +
lea eax [ebp+RootPathName] +
push eax  +
push [ebp+var_276C]  +
push [ebp+var_2760]  +
call sub_100AF5A  +
mov eax [ebp+var_277C] +
push ebx  +
push dword ptr [eax+3Ch]  +
push [ebp+var_276C]  +
push [ebp+var_2760]  +
call sub_100AF5A  +
cmp [ebp+arg_8] ebx +
jnz loc_10063E2  +
push 32h  +
push [ebp+arg_0]  +
lea eax [ebp+var_814] +
push eax  +
call sub_1005A36  +
push ebx  +
lea eax [ebp+var_814] +
push eax  +
push [ebp+var_276C]  +
push [ebp+var_2760]  +
call sub_100AF5A  +
inc [ebp+var_276C]  +
mov [ebp+var_2784] 1 +
inc [ebp+var_2770]  +
mov eax dword_100F6D0 +
mov ecx [ebp+var_2770] +
add [ebp+var_2768] 1Ch +
cmp ecx [eax] +
jb loc_10060A9  +
cmp [ebp+arg_8] 1 +
jnz loc_100643B  +
mov [ebp+var_16D8] 50h +
cmp [ebp+var_2784] ebx +
jnz loc_100645B  +
push 51h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
jmp loc_10064CA  +
push 0B7h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
push 0BDh  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
cmp [ebp+arg_0] 3 +
jz loc_10064A6  +
mov eax ds:_iob +
push offset asc_1001454  +
add eax 20h +
push eax  +
call sub_1008346  +
cmp [ebp+arg_4] 1 +
jnz loc_10064B3  +
or [ebp+arg_0] 1000h +
push [ebp+var_2760]  +
lea eax [ebp+var_25BC] +
push [ebp+arg_0]  +
push eax  +
push 6  +
call sub_100D067  +
cmp [ebp+var_2760] ebx +
jz loc_10064E4  +
lea eax [ebp+var_2760] +
push eax  +
call sub_100AA24  +
mov [ebp+var_2760] ebx +
cmp [ebp+var_2764] ebx +
jz loc_10064FE  +
lea eax [ebp+var_2764] +
push eax  +
call sub_100AA24  +
mov [ebp+var_2764] ebx +
push [ebp+var_2774]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+lpString] +
call ??1CHString@@QAE@XZ  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_1006E22  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
call sub_100504F  +
xor ebx ebx +
push ebx  +
push 1  +
push 0E7h  +
mov esi eax +
call sub_100969E  +
mov edi [ebp+lpString1] +
push eax  +
push edi  +
call sub_10078D3  +
test eax eax +
jnz loc_10065B8  +
mov eax large fs:18h +
mov eax [eax+30h] +
test dword ptr [eax+68h] 4000h +
jnz loc_100657F  +
push 0E9h  +
jmp loc_1006590  +
and esi 0FFFFBFFFh +
push esi  +
call sub_10050C1  +
push 0E5h  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
push phkResult  +
call ds:RegCloseKey  +
xor eax eax +
inc eax  +
jmp loc_1006725  +
push ebx  +
push 1  +
push 0E6h  +
call sub_100969E  +
push eax  +
push edi  +
call sub_10078D3  +
test eax eax +
jnz loc_10065F9  +
mov eax large fs:18h +
mov ecx [eax+30h] +
mov eax 4000h +
test [ecx+68h] eax +
jnz loc_10065F2  +
or esi eax +
push esi  +
call sub_10050C1  +
push 0E4h  +
jmp loc_1006590  +
push 0EAh  +
jmp loc_1006590  +
push ebx  +
mov esi offset String +
push esi  +
call sub_10078B2  +
push eax  +
push esi  +
push ebx  +
push edi  +
call sub_10078B2  +
push eax  +
push edi  +
xor esi esi +
inc esi  +
push esi  +
push 409h  +
call ds:CompareStringW  +
cmp eax 2 +
mov eax large fs:18h +
mov eax [eax+30h] +
jnz loc_1006667  +
test dword ptr [eax+68h] 4000h +
jnz loc_100663D  +
push 0E9h  +
jmp loc_1006642  +
push 0EAh  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
push phkResult  +
call ds:RegCloseKey  +
jmp loc_1006723  +
test dword ptr [eax+68h] 4000h +
push phkResult  +
jnz loc_10066C9  +
call ds:RegCloseKey  +
push 0ECh  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
push 0EDh  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
push 0EEh  +
call sub_100969E  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1008346  +
jmp loc_1006723  +
call ds:RegCloseKey  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
mov dword_100F6E0 eax +
cmp eax ebx +
jz loc_10066EC  +
push offset ConsoleScreenBufferInfo  +
push eax  +
call ds:GetConsoleScreenBufferInfo  +
push 80h  +
push offset aFile  +
push offset String1  +
mov dword_100FC00 ebx +
mov byte_100F6FA bl +
call sub_10082C0  +
call sub_1005B33  +
test eax eax +
jz loc_1006725  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1005B5C  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
call __EH_prolog3_catch_GS  +
xor edi edi +
inc edi  +
mov [ebp-34h] edi +
mov [ebp-38h] edi +
mov dword ptr [ebp-3Ch] 8 +
mov ebx ds:GetCurrentProcess +
call ebx  +
xor esi esi +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
lea eax [ebp-18h] +
push eax  +
push 28h  +
call ebx  +
push eax  +
mov ebx ds:OpenProcessToken +
call ebx  +
test eax eax +
jz loc_1006B6D  +
lea eax [ebp-48h] +
push eax  +
push offset Name  +
push esi  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jz loc_1006B5F  +
mov [ebp-58h] esi +
mov eax [ebp-48h] +
mov [ebp-54h] eax +
mov eax [ebp-44h] +
mov [ebp-50h] eax +
mov dword ptr [ebp-4Ch] 80000002h +
push esi  +
push esi  +
push 10h  +
lea eax [ebp-58h] +
push eax  +
push esi  +
push dword ptr [ebp-18h]  +
call ds:AdjustTokenPrivileges  +
test eax eax +
jz loc_1006B5F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006B5F  +
push dword ptr [ebp+0Ch]  +
push esi  +
push 400h  +
call ds:OpenProcess  +
mov [ebp-20h] eax +
cmp eax esi +
jz loc_1006B6D  +
lea eax [ebp-1Ch] +
push eax  +
push 8  +
push dword ptr [ebp-20h]  +
call ebx  +
cmp eax esi +
jnz loc_10067FD  +
push dword ptr [ebp-20h]  +
jmp loc_1006B67  +
mov [ebp-30h] esi +
lea eax [ebp-30h] +
push eax  +
push esi  +
push esi  +
push edi  +
push dword ptr [ebp-18h]  +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_100684E  +
call ds:GetLastError  +
cmp eax 7Ah +
jz loc_100684E  +
cmp [ebp-18h] esi +
jz loc_1006830  +
push dword ptr [ebp-18h]  +
call ds:CloseHandle  +
mov [ebp-18h] esi +
push dword ptr [ebp-20h]  +
mov edi ds:CloseHandle +
call edi  +
cmp [ebp-1Ch] esi +
jz loc_1006B6D  +
push dword ptr [ebp-1Ch]  +
call edi  +
jmp loc_1006B6D  +
mov [ebp-4] esi +
mov eax [ebp-30h] +
call __alloca_probe_16  +
mov [ebp-10h] esp +
mov ebx esp +
mov [ebp-5Ch] ebx +
cmp ebx esi +
jnz loc_100689A  +
cmp [ebp-18h] esi +
jz loc_1006876  +
push dword ptr [ebp-18h]  +
call ds:CloseHandle  +
mov [ebp-18h] esi +
push dword ptr [ebp-20h]  +
mov edi ds:CloseHandle +
call edi  +
mov [ebp-20h] esi +
cmp [ebp-1Ch] esi +
jz loc_1006B6D  +
push dword ptr [ebp-1Ch]  +
call edi  +
mov [ebp-1Ch] esi +
jmp loc_1006B6D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-30h] +
push eax  +
push dword ptr [ebp-30h]  +
push ebx  +
push edi  +
push dword ptr [ebp-1Ch]  +
call ds:GetTokenInformation  +
test eax eax +
jz loc_100681F  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-2Ch] eax +
cmp eax esi +
jz loc_100681F  +
push 14h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-40h] eax +
cmp eax esi +
jnz loc_1006911  +
cmp [ebp-18h] esi +
jz loc_10068EB  +
push dword ptr [ebp-18h]  +
call ds:CloseHandle  +
mov [ebp-18h] esi +
push dword ptr [ebp-20h]  +
mov edi ds:CloseHandle +
call edi  +
cmp [ebp-1Ch] esi +
jz loc_1006903  +
push dword ptr [ebp-1Ch]  +
call edi  +
mov [ebp-1Ch] esi +
push dword ptr [ebp-2Ch]  +
call ??3@YAXPAX@Z  +
pop ecx  +
jmp loc_1006B6D  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-38h] +
push eax  +
push esi  +
lea eax [ebp-34h] +
push eax  +
push esi  +
push dword ptr [ebx]  +
push esi  +
mov edi ds:LookupAccountSidW +
call edi  +
mov eax [ebp-34h] +
inc eax  +
xor ecx ecx +
push 2  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
mov [ebp-24h] eax +
mov eax [ebp-38h] +
inc eax  +
xor ecx ecx +
push 2  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
pop ecx  +
pop ecx  +
mov [ebp-28h] eax +
cmp [ebp-24h] esi +
jz loc_1006AD7  +
cmp eax esi +
jz loc_1006AD7  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-38h] +
push eax  +
push dword ptr [ebp-28h]  +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebp-24h]  +
push dword ptr [ebx]  +
push esi  +
call edi  +
mov ebx eax +
push dword ptr [ebp-20h]  +
mov edi ds:CloseHandle +
call edi  +
cmp [ebp-1Ch] esi +
jz loc_10069A4  +
push dword ptr [ebp-1Ch]  +
call edi  +
mov [ebp-1Ch] esi +
push dword ptr [ebp-40h]  +
call ??3@YAXPAX@Z  +
push dword ptr [ebp-2Ch]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop ecx  +
cmp ebx esi +
jnz loc_10069EA  +
cmp [ebp-18h] esi +
jz loc_10069C7  +
push dword ptr [ebp-18h]  +
call edi  +
mov [ebp-18h] esi +
cmp [ebp-1Ch] esi +
jz loc_10069D4  +
push dword ptr [ebp-1Ch]  +
call edi  +
mov [ebp-1Ch] esi +
push dword ptr [ebp-24h]  +
call ??_V@YAXPAX@Z  +
push dword ptr [ebp-28h]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
jmp loc_100690B  +
push esi  +
mov ebx offset aNtAuthority +
push ebx  +
call sub_10078B2  +
push eax  +
push ebx  +
push esi  +
push dword ptr [ebp-28h]  +
call sub_10078B2  +
push eax  +
push dword ptr [ebp-28h]  +
push 1  +
push 409h  +
call ds:CompareStringW  +
cmp eax 2 +
jnz loc_1006AA8  +
mov [ebp-2Ch] esi +
cmp off_100F054 esi +
jz loc_1006A69  +
mov ebx [ebp-2Ch] +
lea ebx off_100F054[ebx*4] +
push esi  +
push dword ptr [ebx]  +
call sub_10078B2  +
push eax  +
push dword ptr [ebx]  +
push esi  +
push dword ptr [ebp-24h]  +
call sub_10078B2  +
push eax  +
push dword ptr [ebp-24h]  +
push 1  +
push 409h  +
call ds:CompareStringW  +
cmp eax 2 +
jz loc_1006A69  +
inc dword ptr [ebp-2Ch]  +
mov eax [ebp-2Ch] +
cmp off_100F054[eax*4] esi +
jnz loc_1006A26  +
mov eax [ebp-2Ch] +
cmp off_100F054[eax*4] esi +
jnz loc_1006AA8  +
cmp [ebp-18h] esi +
jz loc_1006A82  +
push dword ptr [ebp-18h]  +
call edi  +
mov [ebp-18h] esi +
cmp [ebp-1Ch] esi +
jz loc_1006A8F  +
push dword ptr [ebp-1Ch]  +
call edi  +
mov [ebp-1Ch] esi +
push dword ptr [ebp-24h]  +
call ??_V@YAXPAX@Z  +
push dword ptr [ebp-28h]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
pop ecx  +
mov eax esi +
jmp loc_1006B6F  +
push 100h  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp+8]  +
call sub_10082C0  +
cmp [ebp-18h] esi +
jz loc_1006AC5  +
push dword ptr [ebp-18h]  +
call edi  +
mov [ebp-18h] esi +
cmp [ebp-1Ch] esi +
jz loc_1006AD2  +
push dword ptr [ebp-1Ch]  +
call edi  +
mov [ebp-1Ch] esi +
xor esi esi +
inc esi  +
jmp loc_1006A8F  +
cmp [ebp-18h] esi +
jz loc_1006AE8  +
push dword ptr [ebp-18h]  +
call ds:CloseHandle  +
mov [ebp-18h] esi +
push dword ptr [ebp-20h]  +
mov edi ds:CloseHandle +
call edi  +
cmp [ebp-1Ch] esi +
jz loc_1006B00  +
push dword ptr [ebp-1Ch]  +
call edi  +
mov [ebp-1Ch] esi +
cmp [ebp-24h] esi +
jz loc_1006B0E  +
push dword ptr [ebp-24h]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
cmp [ebp-28h] esi +
jz loc_1006B6D  +
push dword ptr [ebp-28h]  +
call ??_V@YAXPAX@Z  +
jmp loc_100690B  +
xor esi esi +
cmp [ebp-18h] esi +
jz loc_1006B33  +
push dword ptr [ebp-18h]  +
call ds:CloseHandle  +
mov [ebp-18h] esi +
cmp [ebp-20h] esi +
jz loc_1006B44  +
push dword ptr [ebp-20h]  +
call ds:CloseHandle  +
mov [ebp-20h] esi +
cmp [ebp-1Ch] esi +
jz loc_1006B55  +
push dword ptr [ebp-1Ch]  +
call ds:CloseHandle  +
mov [ebp-1Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1006B6D +
retn   +
cmp [ebp-18h] esi +
jz loc_1006B6D  +
push dword ptr [ebp-18h]  +
call ds:CloseHandle  +
xor eax eax +
lea esp [ebp-6Ch] +
call sub_1006F68  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1006B9B  +
test eax eax +
jnz loc_1006BA0  +
mov ecx [esi] +
test ecx ecx +
jz loc_1006B98  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1006B8C  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100FC28 +
push offset dword_100FC18  +
push dword_100FC24  +
mov dword_100FC18 eax +
push offset dword_100FC08  +
push offset dword_100FC0C  +
push offset dword_100FC04  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_100FC14 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1006C28  +
cmp eax esi +
jnz loc_1006C1B  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1006C2B  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1006C02  +
xor esi esi +
inc esi  +
mov eax dword_1010078 +
cmp eax esi +
jnz loc_1006C3E  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1006C79  +
mov eax dword_1010078 +
test eax eax +
jnz loc_1006C73  +
mov dword_1010078 esi +
push offset dword_10012A0  +
push offset dword_1001294  +
call sub_1006B7F  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1006C79  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1006D43  +
mov dword_100FC20 esi +
mov eax dword_1010078 +
cmp eax esi +
jnz loc_1006C9D  +
push offset dword_1001290  +
push offset dword_1001288  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1010078 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1006CAA  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1010080 ebx +
jz loc_1006CCB  +
push offset dword_1010080  +
call sub_1007149  +
pop ecx  +
test eax eax +
jz loc_1006CCB  +
push ebx  +
push 2  +
push ebx  +
call dword_1010080  +
push dword_100FC08  +
push dword_100FC0C  +
push dword_100FC04  +
call sub_1003C42  +
add esp 0Ch +
mov dword_100FC1C eax +
cmp dword_100FC10 ebx +
jnz loc_1006D29  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_100FC1C eax +
xor ebx ebx +
cmp dword_100FC10 ebx +
jnz loc_1006D29  +
push eax  +
call ds:_exit  +
cmp dword_100FC20 ebx +
jnz loc_1006D37  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100FC1C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1006D60  +
xor eax eax +
jmp loc_1006DAD  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1006D5C  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1006D9A  +
cmp ecx 20Bh +
jnz loc_1006D5C  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1006D5C  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1006DA8  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1006D5C  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100FC10 eax +
call sub_10072E2  +
push eax  +
call ds:__set_app_type  +
or dword_1010070 0FFFFFFFFh +
or dword_1010074 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100FC30 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100FC2C +
mov [eax] ecx +
call sub_1007274  +
cmp dword_100F098 0 +
jnz loc_1006E06  +
push offset sub_1007274  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100725C  +
xor eax eax +
retn   +
***
call sub_1007321  +
jmp sub_1006BE0  +
***
cmp ecx dword_100F07C +
jnz loc_1006E2D  +
retn 0  +
jmp loc_10073B7  +
***
jmp ds:__CxxFrameHandler3  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100F07C +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100F07C +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100F07C +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100F07C +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_1006E22  +
jmp __EH_epilog3  +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_1006E22  +
jmp __EH_epilog3  +
***
jmp ds:_CxxThrowException  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1006FAE  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100708E  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100708E  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1007088  +
cmp eax 19930521h +
jz loc_1007088  +
cmp eax 19930522h +
jz loc_1007088  +
cmp eax 1994000h +
jnz loc_100708E  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_1007050+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10070D6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10070D2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100713D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1007135  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100713F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1007125  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_10070C0  +
pop ecx  +
test eax eax +
jz loc_10071A6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1007100  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10071A6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10071AF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1006E22  +
push offset dword_100F07C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10072D5  +
cmp ecx 0FFFFFFFFh +
jz loc_10072D5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10072CE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10072CE  +
cmp edx 10000000h +
jnb loc_10072CE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10072CE  +
jmp loc_10072C9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1007317  +
push eax  +
call sub_100727C  +
test eax eax +
jz loc_1007317  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100730C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1007317  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100F07C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1007353  +
test eax ebx +
jz loc_1007353  +
not eax  +
mov dword_100F080 eax +
jmp loc_10073AE  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100739A  +
test dword_100F07C ebx +
jnz loc_100739F  +
mov esi 0BB40E64Fh +
mov dword_100F07C esi +
not esi  +
mov dword_100F080 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_100FD38 eax +
mov dword_100FD34 ecx +
mov dword_100FD30 edx +
mov dword_100FD2C ebx +
mov dword_100FD28 esi +
mov dword_100FD24 edi +
mov word_100FD50 ss +
mov word_100FD44 cs +
mov word_100FD20 ds +
mov word_100FD1C es +
mov word_100FD18 fs +
mov word_100FD14 gs +
pushf   +
pop dword_100FD48  +
mov eax [ebp+0] +
mov dword_100FD3C eax +
mov eax [ebp+4] +
mov dword_100FD40 eax +
lea eax [ebp+8] +
mov dword_100FD4C eax +
mov eax [ebp-320h] +
mov dword_100FC88 10001h +
mov eax dword_100FD40 +
mov dword_100FC44 eax +
mov dword_100FC38 0C0000409h +
mov dword_100FC3C 1 +
mov eax dword_100F07C +
mov [ebp-328h] eax +
mov eax dword_100F080 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_100FF58 edi +
jnz loc_10074E2  +
push dword_100FF60  +
call sub_100A98E  +
test eax eax +
jnz loc_10074DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007576  +
push 42Bh  +
jmp loc_1007570  +
mov eax edi +
pop edi  +
retn   +
cmp dword_100FF60 0 +
jnz loc_10074C6  +
call sub_100A9AF  +
push eax  +
mov dword_100FF60 eax +
call sub_100A98E  +
test eax eax +
jz loc_1007564  +
push 0  +
push offset dword_100169C  +
push dword_100FF60  +
call sub_100ACD1  +
test eax eax +
jnz loc_1007564  +
push 3  +
push dword_100FF60  +
call sub_100AE9C  +
cmp eax edi +
jnz loc_1007564  +
push 3  +
push dword_100FF60  +
call sub_100AE9C  +
cmp eax 2 +
jnz loc_1007564  +
push 3  +
push dword_100FF60  +
call sub_100AE9C  +
cmp eax 3 +
jnz loc_1007564  +
push 0  +
mov dword_100FF58 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1007576  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_100FF58 0 +
push esi  +
jz loc_10075E4  +
push 3  +
push dword_100FF60  +
call sub_100B032  +
cmp eax [ebp+arg_0] +
jbe loc_10075E4  +
push [ebp+arg_0]  +
push 3  +
push dword_100FF60  +
call sub_100B4B8  +
test eax eax +
jz loc_10075E4  +
push [ebp+arg_0]  +
push 3  +
push dword_100FF60  +
call sub_100B1EA  +
mov esi eax +
test esi esi +
jz loc_10075E4  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10075E4  +
mov eax [esi+0Ch] +
jmp loc_10075E6  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_100FF60 +
test eax eax +
jz loc_1007611  +
push eax  +
call sub_100A98E  +
test eax eax +
jz loc_1007611  +
push 0  +
push dword_100FF60  +
call sub_100B09F  +
retn   +
mov eax offset dword_100169C +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1007645  +
call esi  +
test eax eax +
jnz loc_1007641  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007678  +
call sub_10074A9  +
test eax eax +
jz loc_1007641  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_100FF60  +
call sub_100B2DA  +
test eax eax +
jnz loc_100766E  +
call esi  +
test eax eax +
jnz loc_1007641  +
push 8  +
jmp loc_100763B  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_10074A9  +
test eax eax +
jz loc_1007702  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_10076DC  +
cmp [ebp+hMem] edi +
jz loc_10076F4  +
push [ebp+hMem]  +
call sub_100761C  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1007700  +
cmp [ebp+hMem] edi +
jz loc_10076F4  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_10076F4  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_10076FE  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1007683  +
test eax eax +
jz loc_100772C  +
call sub_10075F0  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_100F09C +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_100F0A0 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_100FF64 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1006E22  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_100780A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007806  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007887  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_100787B  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_100787B  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1007883  +
sub edi 0 +
jz loc_1007857  +
dec edi  +
jz loc_1007853  +
dec edi  +
jnz loc_1007883  +
push 0FFFFFFF4h  +
jmp loc_1007859  +
push 0FFFFFFF5h  +
jmp loc_1007859  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1007883  +
cmp eax 0FFFFFFFFh +
jz loc_1007883  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1007885  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_10078A0  +
xor eax eax +
jmp loc_10078A9  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_10078C1  +
xor eax eax +
jmp loc_10078CA  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1007911  +
cmp [ebp+lpString2] 0 +
jz loc_1007911  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_10078F7  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1007925  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007923  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_100796C  +
cmp [ebp+lpString2] 0 +
jz loc_100796C  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1007952  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1007980  +
call ds:GetLastError  +
test eax eax +
jnz loc_100797E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_10079DB  +
cmp [ebp+lpString2] 0 +
jz loc_10079DB  +
mov eax [ebp+arg_C] +
xor edx edx +
cmp [ebp+arg_8] 1 +
setz dl  +
test eax eax +
jnz loc_10079AD  +
or eax 0FFFFFFFFh +
cmp dword_100F09C 5 +
push 7Fh  +
pop ecx  +
jnz loc_10079C7  +
cmp dword_100F0A0 0 +
jnz loc_10079C7  +
mov ecx 409h +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push edx  +
push ecx  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_10079EF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10079ED  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_1007ABC  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_1007ABC  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_1007A27  +
cmp [eax] edi +
jnz loc_1007ABC  +
mov eax [eax] +
cmp eax edi +
jz loc_1007A35  +
cmp eax 1 +
jbe loc_1007AA3  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_1007A4C  +
cmp esi edi +
jz loc_1007A4C  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1007A62  +
push edi  +
push [ebp+lpString]  +
call sub_1007891  +
cmp eax esi +
jle loc_1007A62  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_1007AB5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007A8A  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_1007ACE  +
cmp esi edi +
jz loc_1007ACE  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_1007ACE  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_1007AD0  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_1007AB0  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007ACE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1007AF5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007B17  +
push 57h  +
jmp loc_1007B11  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1007B17  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1007B19  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1007B48  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007BBC  +
push 57h  +
call ds:SetLastError  +
jmp loc_1007BBC  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1007BBC  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1007BBE  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1007BA3  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1007BA3  +
push 570h  +
call ds:SetLastError  +
call sub_1007683  +
jmp loc_1007BB5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007BB5  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1007BED  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007BE8  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1007C0F  +
push [ebp+lpMem]  +
call sub_1007ADC  +
test eax eax +
jz loc_1007BE8  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1007BE8  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1007C48  +
cmp [ebp+arg_4] eax +
jz loc_1007C44  +
mov dl [ebx] +
test dl dl +
jz loc_1007C44  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1007C2C  +
test esi esi +
jnz loc_1007C4F  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1007C5B  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1007C9C  +
cmp [ebp+arg_4] eax +
jz loc_1007C98  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1007C98  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1007C7B  +
test esi esi +
jnz loc_1007CA4  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1007CB2  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1007CE7  +
cmp eax esi +
ja loc_1007CE7  +
jz loc_1007CEC  +
jmp loc_1007CF4  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1007CFD  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1007D25  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007D68  +
push 57h  +
jmp loc_1007D62  +
push 0  +
push esi  +
call sub_10078B2  +
test eax eax +
jz loc_1007D5D  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_1007D5D  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_1007D4D  +
call ds:StrChrIW  +
jmp loc_1007D53  +
call ds:StrChrW  +
test eax eax +
jz loc_1007D5D  +
sub eax esi +
sar eax 1 +
jmp loc_1007D6B  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_1007DDA  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_1007DDA  +
push esi  +
push edi  +
call sub_10078B2  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_1007DD3  +
push esi  +
push ebx  +
call sub_10078B2  +
test eax eax +
jz loc_1007DD3  +
push esi  +
push ebx  +
call sub_10078B2  +
cmp [ebp+arg_C] eax +
jnb loc_1007DD3  +
cmp [ebp+arg_0] esi +
jbe loc_1007DD3  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_1007D0A  +
cmp eax 0FFFFFFFFh +
jnz loc_1007DEF  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_1007DB7  +
push 490h  +
jmp loc_1007DE6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007DEC  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1007E62  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1007E62  +
push 0  +
push edi  +
call sub_10078B2  +
push 0  +
push ebx  +
mov esi eax +
call sub_10078B2  +
test eax eax +
jz loc_1007E55  +
test esi esi +
jz loc_1007E55  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_1007E55  +
sub esi ecx +
cmp esi eax +
jb loc_1007E55  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_1007E4B  +
call ds:StrStrIW  +
jmp loc_1007E51  +
call ds:StrStrW  +
test eax eax +
jnz loc_1007E5C  +
push 490h  +
jmp loc_1007E6E  +
sub eax edi +
sar eax 1 +
jmp loc_1007E77  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007E74  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString] esi +
jz loc_1007EB2  +
push esi  +
push [ebp+lpString]  +
call sub_10078B2  +
test eax eax +
jz loc_1007EB2  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
dec eax  +
jmp loc_1007EB4  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1007EE1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007EDD  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007F2F  +
cmp dword ptr [esi] 0 +
jnz loc_1007EEB  +
xor eax eax +
inc eax  +
jmp loc_1007F2F  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_1007F0F  +
push dword ptr [esi]  +
call sub_1007BCB  +
cmp eax 0FFFFFFFFh +
jnz loc_1007F13  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007F2E  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_1007FFE  +
mov eax [esi] +
cmp eax edi +
jz loc_1007FFE  +
cmp [ebp+dwBytes] edi +
jnz loc_1007F6C  +
push esi  +
call sub_1007EBE  +
jmp loc_1008012  +
push eax  +
call sub_1007ADC  +
test eax eax +
jnz loc_1007F7D  +
mov [esi] edi +
jmp loc_1008010  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_1008010  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_1007FBB  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007FB2  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1008010  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_1008012  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1007FA0  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1007FA0  +
push 570h  +
call ds:SetLastError  +
call sub_1007683  +
jmp loc_1007FB2  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008010  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1008035  +
cmp edx 7FFFFFFFh +
jbe loc_100803A  +
mov eax 80070057h +
test eax eax +
jl loc_1008050  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1007C18  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100806F  +
cmp edx 7FFFFFFFh +
jbe loc_1008074  +
mov eax 80070057h +
test eax eax +
jl loc_100808A  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1007C67  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_10080AC  +
cmp edx ebx +
jbe loc_10080B1  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_10080E8  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_10080D5  +
cmp [eax] cx +
jz loc_10080D1  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_10080C7  +
cmp esi ecx +
jnz loc_10080DE  +
mov [ebp+arg_4] 80070057h +
jmp loc_10080E2  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_10080EA  +
xor ecx ecx +
test eax eax +
jl loc_10080FE  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1007C67  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100811E  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1008123  +
mov eax 80070057h +
test eax eax +
jl loc_100813C  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1007CBE  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100815A  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_100815F  +
mov eax 80070057h +
test eax eax +
jl loc_1008179  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_1007CBE  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_100FF60  +
call sub_100A98E  +
cmp eax 1 +
jnz loc_100820A  +
push edi  +
push 3  +
push dword_100FF60  +
call sub_100B032  +
mov edi eax +
test edi edi +
jz loc_10081FF  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_100FF60  +
call sub_100B4B8  +
cmp eax 10000h +
jnz loc_10081F8  +
push esi  +
push 3  +
push dword_100FF60  +
call sub_100B1EA  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10081F8  +
add eax 0Ch +
push eax  +
call sub_1007EBE  +
lea eax [ebp+var_4] +
push eax  +
call sub_1007EBE  +
push esi  +
push 3  +
push dword_100FF60  +
call sub_100AFFB  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_10081AE  +
pop esi  +
push offset dword_100FF60  +
call sub_100AA24  +
pop edi  +
cmp dword_100FF5C 1 +
jnz loc_1008219  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push 1  +
push [ebp+lpString]  +
push esi  +
call sub_1007D75  +
cmp eax 0FFFFFFFFh +
jnz loc_1008243  +
xor eax eax +
jmp loc_1008246  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_1007DFB  +
cmp eax 0FFFFFFFFh +
jnz loc_1008270  +
xor eax eax +
jmp loc_1008273  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10082B0  +
cmp [ebp+arg_4] 0 +
jz loc_10082B0  +
cmp [ebp+arg_8] 0 +
jle loc_10082B0  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100801F  +
test eax eax +
jge loc_10082B6  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10082B2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10082F3  +
cmp [ebp+arg_4] 0 +
jz loc_10082F3  +
cmp [ebp+arg_8] 0 +
jle loc_10082F3  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1008059  +
test eax eax +
jge loc_10082F9  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10082F5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1008336  +
cmp [ebp+arg_4] 0 +
jz loc_1008336  +
cmp [ebp+arg_8] 0 +
jle loc_1008336  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1008093  +
test eax eax +
jge loc_100833C  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1008338  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_100858B  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_100858B  +
push [ebp+hConsoleOutput]  +
call sub_10077E3  +
cmp eax 1 +
jnz loc_1008478  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_100838F  +
push 0FFFFFFF5h  +
jmp loc_100839F  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1008460  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_10078B2  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_10083D3  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1008438  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_100845C  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_10078B2  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1008438  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_100840A  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1008440  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1008440  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_10083FA  +
xor eax eax +
inc eax  +
jmp loc_100859F  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100770A  +
call sub_1008180  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1008446  +
call ds:GetLastError  +
test eax eax +
jnz loc_100859D  +
push 42Bh  +
jmp loc_1008597  +
push edi  +
push ebx  +
call sub_10078B2  +
push 100h  +
push edi  +
mov esi offset unk_100FF70 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_1008438  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_10084B8  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1008515  +
cmp eax ebx +
jbe loc_1008523  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_10084F5  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_10084F8  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_10084C1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008515  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1008449  +
cmp eax [ebp+cchWideChar] +
jnb loc_100852B  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1008515  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS_1  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_10084A3  +
jmp loc_1008438  +
call ds:GetLastError  +
test eax eax +
jnz loc_100859D  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_100860A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008603  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008805  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_10087C2  +
cmp edi 0Fh +
jz loc_100863A  +
cmp edi 3 +
jz loc_100863A  +
cmp edi 0FFFFFFFFh +
jz loc_100863A  +
mov [ebp+var_40] 1 +
jmp loc_1008656  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_10087C2  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC_0 +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_10086C8  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_10087C2  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_10087C6  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_10079F8  +
movzx eax word ptr [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_10086E0  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_10087B6  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_10087C6  +
cmp ax 8 +
jnz loc_100876E  +
cmp [ebp+var_28] 0 +
jz loc_1008674  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1008145  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1008145  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1008145  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_1008674  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_1008786  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset asc_10016B4  +
jmp loc_10087AA  +
cmp ax 0Ah +
jz loc_1008674  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset String2  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_1008674  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_1008804  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_10016AC  +
lea eax [ebp+var_18] +
push eax  +
call sub_10082C0  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1006E22  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1008832  +
cmp [ebp+arg_8] 0 +
jnz loc_1008832  +
xor eax eax +
jmp loc_1008986  +
call sub_10074A9  +
test eax eax +
jz loc_100882B  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_100FF60  +
call sub_100B032  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_100887F  +
push esi  +
push dword_100FF60  +
call sub_100B066  +
test eax eax +
jz loc_100894A  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_100AF17  +
cmp eax 0FFFFFFFFh +
jz loc_100894A  +
push ebx  +
push esi  +
push dword_100FF60  +
call sub_100B4B8  +
mov edi offset aBuffer +
test eax eax +
jz loc_10088CD  +
push ebx  +
push esi  +
push dword_100FF60  +
call sub_100B1EA  +
mov esi eax +
test esi esi +
jz loc_100894A  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100894A  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_100890C  +
mov edi [ebp+arg_8] +
jmp loc_1008917  +
push 10h  +
call sub_1007B22  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_100894A  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_100827D  +
push esi  +
push ebx  +
push 3  +
push dword_100FF60  +
call sub_100B3E5  +
test eax eax +
jnz loc_10088AC  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1007EBE  +
jmp loc_100894A  +
push 0  +
push ebx  +
call sub_10078B2  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_100892D  +
cmp edi 100h +
jbe loc_1008944  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1008944  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_100894E  +
call sub_1007B22  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100894A  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1008959  +
xor eax eax +
jmp loc_1008983  +
lea eax [esi+0Ch] +
push eax  +
call sub_1007F39  +
jmp loc_100893D  +
test ebx ebx +
jz loc_1008969  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10082C0  +
jmp loc_1008980  +
cmp [ebp+arg_C] 1 +
jnz loc_1008980  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_10016C0 +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_1008A8C  +
push eax  +
push ebx  +
call sub_10078B2  +
test eax eax +
jz loc_1008A8C  +
cmp [ebp+lpStart] 0 +
jz loc_10089EB  +
push 0  +
push [ebp+lpStart]  +
call sub_10078B2  +
test eax eax +
jnz loc_10089F1  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_1008A00  +
cmp edi 1 +
jnz loc_1008A22  +
cmp word ptr [ebx] 0 +
jz loc_1008A1F  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1008A1F  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1008A06  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_1008A2C  +
cmp edi 2 +
jnz loc_1008A6E  +
cmp edi 2 +
jnz loc_1008A33  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1008A6E  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1008A54  +
cmp [ebp+var_14] 0 +
jnz loc_1008A58  +
mov [ebp+var_14] esi +
jmp loc_1008A58  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1008A3B  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_1008A6E  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_1008A88  +
push 0  +
push [ebp+var_18]  +
call sub_10078B2  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_10082C0  +
mov eax ebx +
jmp loc_1008A91  +
mov eax offset dword_100169C +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1008AE9  +
cmp [ebp+arg_4] edi +
jz loc_1008AE9  +
push [ebp+arg_C]  +
push offset dword_100169C  +
push esi  +
call sub_10082C0  +
cmp [ebp+arg_8] edi +
jbe loc_1008AE5  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
call sub_1008303  +
test eax eax +
jz loc_1008AE5  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_1008ACF  +
mov eax esi +
jmp loc_1008B00  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008AFB  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_100169C +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1008B2E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008B2A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008B95  +
cmp [ebp+arg_0] esi +
jnz loc_1008B40  +
push [ebp+arg_4]  +
call sub_100761C  +
xor eax eax +
inc eax  +
jmp loc_1008B95  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_100881A  +
mov edi eax +
test edi edi +
jz loc_1008B80  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_1008109  +
cmp eax 8007007Ah +
jz loc_1008B41  +
test eax eax +
jge loc_1008B8E  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008B94  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008B7C  +
push 8  +
jmp loc_1008B76  +
push edi  +
call sub_100761C  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_100881A  +
mov ebx eax +
test ebx ebx +
jnz loc_1008BC5  +
push 8  +
pop eax  +
jmp loc_1008C07  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_100881A  +
mov esi eax +
test esi esi +
jz loc_1008BC0  +
push esi  +
call sub_1007BCB  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_1007BCB  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_1008C07  +
push ebx  +
call sub_100761C  +
test eax eax +
jz loc_1008BC0  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_1008C3D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008C33  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_100169C +
jmp loc_1008D4A  +
call sub_10074A9  +
test eax eax +
jz loc_1008C33  +
push esi  +
push 1  +
push dword_100FF60  +
call sub_100B032  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1008C9A  +
push 1  +
push dword_100FF60  +
call sub_100B066  +
cmp eax ebx +
jz loc_1008C7E  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_100AF17  +
cmp eax 0FFFFFFFFh +
jnz loc_1008C9A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008C90  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_100169C +
jmp loc_1008D49  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_100881A  +
mov edi eax +
cmp edi ebx +
jz loc_1008D0E  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_1008CF1  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_1008D20  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_1008D20  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1008CA0  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_100FF60  +
call sub_100B41F  +
test eax eax +
jnz loc_1008D27  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008D20  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_100169C +
jmp loc_1008D48  +
cmp [ebp+lpString] ebx +
jz loc_1008D38  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_100FF60  +
call sub_100B221  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_1008EF9  +
push ebx  +
push [ebp+lpString]  +
call sub_10078B2  +
test eax eax +
jz loc_1008EF9  +
call sub_10074A9  +
test eax eax +
jz loc_1008F0B  +
call sub_10074A9  +
test eax eax +
jz loc_1008EB3  +
push 3  +
pop esi  +
push esi  +
push dword_100FF60  +
call sub_100B032  +
mov edi eax +
cmp edi ebx +
ja loc_1008DD6  +
push esi  +
push dword_100FF60  +
call sub_100B066  +
cmp eax ebx +
jz loc_1008EB3  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100AF17  +
cmp eax 0FFFFFFFFh +
jz loc_1008EB3  +
push ebx  +
push esi  +
push dword_100FF60  +
call sub_100B4B8  +
mov edi offset aBuffer +
test eax eax +
jz loc_1008E4E  +
push ebx  +
push esi  +
push dword_100FF60  +
call sub_100B1EA  +
mov esi eax +
cmp esi ebx +
jz loc_1008EB3  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1008EB3  +
push ebx  +
push [ebp+lpString]  +
call sub_10078B2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1008E3A  +
cmp edi 100h +
jbe loc_1008E9B  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1008E9B  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1008E8B  +
call sub_1007B22  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1008E96  +
push 10h  +
call sub_1007B22  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1008EB3  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100827D  +
push esi  +
push ebx  +
push 3  +
push dword_100FF60  +
call sub_100B3E5  +
test eax eax +
jnz loc_1008E03  +
lea eax [ebp+var_8] +
push eax  +
call sub_1007EBE  +
jmp loc_1008EB3  +
lea eax [esi+0Ch] +
push eax  +
call sub_1007F39  +
test eax eax +
jz loc_1008EB3  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1008EB3  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10082C0  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1008EC1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008F0B  +
push 8  +
jmp loc_1008F05  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1008EF9  +
cmp [ebp+var_4] ebx +
jz loc_1008EF4  +
push ebx  +
push [ebp+var_4]  +
call sub_10078B2  +
test eax eax +
jnz loc_1008EF9  +
fld  qword ptr [ebp-0Ch] +
jmp loc_1008F0D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008F0B  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_1008D54  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_1009102  +
cmp [ebp+lpString] ebx +
jz loc_1009102  +
call sub_10074A9  +
test eax eax +
jz loc_1009114  +
call sub_10074A9  +
test eax eax +
jz loc_1009098  +
push 3  +
pop esi  +
push esi  +
push dword_100FF60  +
call sub_100B032  +
mov edi eax +
cmp edi ebx +
ja loc_1008FBB  +
push esi  +
push dword_100FF60  +
call sub_100B066  +
cmp eax ebx +
jz loc_1009098  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100AF17  +
cmp eax 0FFFFFFFFh +
jz loc_1009098  +
push ebx  +
push esi  +
push dword_100FF60  +
call sub_100B4B8  +
mov edi offset aBuffer +
test eax eax +
jz loc_1009033  +
push ebx  +
push esi  +
push dword_100FF60  +
call sub_100B1EA  +
mov esi eax +
cmp esi ebx +
jz loc_1009098  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1009098  +
push ebx  +
push [ebp+lpString]  +
call sub_10078B2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100901F  +
cmp edi 100h +
jbe loc_1009080  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1009080  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1009070  +
call sub_1007B22  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100907B  +
push 10h  +
call sub_1007B22  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1009098  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100827D  +
push esi  +
push ebx  +
push 3  +
push dword_100FF60  +
call sub_100B3E5  +
test eax eax +
jnz loc_1008FE8  +
lea eax [ebp+var_8] +
push eax  +
call sub_1007EBE  +
jmp loc_1009098  +
lea eax [esi+0Ch] +
push eax  +
call sub_1007F39  +
test eax eax +
jz loc_1009098  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1009098  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10082C0  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10090A6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009114  +
push 8  +
jmp loc_100910E  +
push 3  +
push ebx  +
push esi  +
call sub_100898F  +
push ebx  +
push esi  +
call sub_10078B2  +
test eax eax +
jz loc_1009102  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10090DA  +
call ds:wcstol  +
jmp loc_10090E0  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1009102  +
cmp [ebp+var_4] ebx +
jz loc_10090FE  +
push ebx  +
push [ebp+var_4]  +
call sub_10078B2  +
test eax eax +
jnz loc_1009102  +
mov eax esi +
jmp loc_1009116  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009114  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10092E5  +
cmp [ebp+lpString] ebx +
jz loc_10092E5  +
call sub_10074A9  +
test eax eax +
jz loc_1009271  +
push 3  +
pop esi  +
push esi  +
push dword_100FF60  +
call sub_100B032  +
mov edi eax +
cmp edi ebx +
ja loc_1009194  +
push esi  +
push dword_100FF60  +
call sub_100B066  +
cmp eax ebx +
jz loc_1009271  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100AF17  +
cmp eax 0FFFFFFFFh +
jz loc_1009271  +
push ebx  +
push esi  +
push dword_100FF60  +
call sub_100B4B8  +
mov edi offset aBuffer +
test eax eax +
jz loc_100920C  +
push ebx  +
push esi  +
push dword_100FF60  +
call sub_100B1EA  +
mov esi eax +
cmp esi ebx +
jz loc_1009271  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1009271  +
push ebx  +
push [ebp+lpString]  +
call sub_10078B2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_10091F8  +
cmp edi 100h +
jbe loc_1009259  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1009259  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1009249  +
call sub_1007B22  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1009254  +
push 10h  +
call sub_1007B22  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1009271  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100827D  +
push esi  +
push ebx  +
push 3  +
push dword_100FF60  +
call sub_100B3E5  +
test eax eax +
jnz loc_10091C1  +
lea eax [ebp+var_8] +
push eax  +
call sub_1007EBE  +
jmp loc_1009271  +
lea eax [esi+0Ch] +
push eax  +
call sub_1007F39  +
test eax eax +
jz loc_1009271  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1009271  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10082C0  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100927F  +
call ds:GetLastError  +
test eax eax +
jnz loc_10092F7  +
push 8  +
jmp loc_10092F1  +
push 3  +
push ebx  +
push esi  +
call sub_100898F  +
push ebx  +
push esi  +
call sub_10078B2  +
test eax eax +
jz loc_10092F7  +
cmp [ebp+arg_8] ebx +
jnz loc_100929E  +
cmp word ptr [esi] 2Dh +
jz loc_10092F7  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10092BE  +
call ds:wcstol  +
jmp loc_10092C4  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10092F7  +
cmp [ebp+var_4] ebx +
jz loc_10092E0  +
push ebx  +
push [ebp+var_4]  +
call sub_10078B2  +
test eax eax +
jnz loc_10092F7  +
xor eax eax +
inc eax  +
jmp loc_10092F9  +
call ds:GetLastError  +
test eax eax +
jnz loc_10092F7  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_10093C3  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_10093C3  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_10078B2  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_100881A  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1009354  +
call ds:GetLastError  +
test eax eax +
jnz loc_10093D5  +
push 8  +
jmp loc_10093CF  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_10078B2  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_100881A  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1009342  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_2 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1008145  +
add esp 10h +
test eax eax +
jge loc_1009393  +
movzx eax ax +
push eax  +
jmp loc_10093CF  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1008145  +
add esp 10h +
test eax eax +
jl loc_100938D  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1007DFB  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_10093D7  +
call ds:GetLastError  +
test eax eax +
jnz loc_10093D5  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
lea edi [ebp+var_8] +
mov dword ptr [ebp+String] esi +
mov [ebp+var_18] ecx +
stos   +
cmp ecx esi +
jnz loc_1009429  +
call ds:GetLastError  +
test eax eax +
jnz loc_100941F  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_100169C +
jmp loc_1009536  +
push ecx  +
call sub_1007E83  +
mov [ebp+var_14] eax +
cmp eax [ebp+arg_4] +
ja loc_100943A  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
lea edi [eax+0Ah] +
push edi  +
push esi  +
push esi  +
call sub_100881A  +
mov [ebp+var_10] eax +
cmp eax esi +
jz loc_1009468  +
mov eax [ebp+arg_4] +
cmp [ebp+var_14] eax +
jnb loc_10094C3  +
push ebx  +
push edi  +
push esi  +
push ebx  +
call sub_100881A  +
mov esi eax +
test esi esi +
jnz loc_1009484  +
call ds:GetLastError  +
test eax eax +
jnz loc_100947A  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_100169C +
jmp loc_1009535  +
mov eax [ebp+arg_4] +
sub eax [ebp+var_14] +
push edi  +
push eax  +
push offset asc_10016D4  +
push esi  +
call sub_1008AA7  +
push edi  +
cmp [ebp+arg_8] ebx +
jnz loc_10094AC  +
push esi  +
push [ebp+var_10]  +
call sub_10082C0  +
push edi  +
push [ebp+var_18]  +
jmp loc_10094B9  +
push [ebp+var_18]  +
push [ebp+var_10]  +
call sub_10082C0  +
push edi  +
push esi  +
push [ebp+var_10]  +
call sub_1008303  +
jmp loc_1009522  +
xor ebx ebx +
cmp eax esi +
jbe loc_1009522  +
mov eax [ebp+var_18] +
mov [ebp+var_14] eax +
push 2  +
push [ebp+var_14]  +
lea eax [ebp+String] +
push eax  +
call sub_10082C0  +
lea eax [ebp+String] +
push eax  +
call sub_1007E83  +
mov esi eax +
add esi ebx +
cmp esi [ebp+arg_4] +
ja loc_1009507  +
push edi  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_10]  +
call sub_1008303  +
add [ebp+var_14] 2 +
mov ebx esi +
cmp esi [ebp+arg_4] +
jb loc_10094CF  +
cmp ebx [ebp+arg_4] +
jnb loc_1009522  +
mov esi [ebp+arg_4] +
sub esi ebx +
push edi  +
push offset asc_10016D4  +
push [ebp+var_10]  +
call sub_1008303  +
dec esi  +
jnz loc_1009511  +
mov eax [ebp+arg_4] +
inc eax  +
push eax  +
push [ebp+var_10]  +
push [ebp+var_18]  +
call sub_10082C0  +
mov eax [ebp+var_18] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1006E22  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_1009652  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_1009652  +
cmp [ebp+arg_4] ebx +
jnz loc_100957D  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
jmp loc_1009666  +
cmp [ebp+arg_8] ebx +
jnz loc_1009612  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_100881A  +
mov edi eax +
test edi edi +
jz loc_10095FF  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_10095EF  +
call ds:GetLastError  +
test eax eax +
jz loc_100960D  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_1009664  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_100958A  +
push edi  +
jmp loc_1009570  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009664  +
push 8  +
jmp loc_100965E  +
xor eax eax +
inc eax  +
jmp loc_1009666  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_100881A  +
mov edi eax +
test edi edi +
jz loc_10095FF  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_1008109  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_1009612  +
test eax eax +
jge loc_10095F9  +
movzx eax ax +
push eax  +
jmp loc_100965E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009664  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_100FF6C  +
mov eax dword_100FF6C +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_1008C10  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_100966F  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1009732  +
test [ebp+arg_4] 0F0000h +
jz loc_1009732  +
test [ebp+arg_4] 10000h +
jz loc_10096DA  +
call sub_1007683  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_10096EC  +
push 1389h  +
jmp loc_100970B  +
test al 4 +
jz loc_10096F7  +
push 138Ah  +
jmp loc_100970B  +
test al 2 +
jz loc_1009702  +
push 138Ch  +
jmp loc_100970B  +
test al 8 +
jz loc_1009721  +
push 138Bh  +
call sub_100969E  +
push eax  +
push offset aS_3  +
push ebx  +
push ebx  +
push esi  +
call sub_100954B  +
add esp 14h +
call sub_10075F0  +
push eax  +
push esi  +
call sub_1008346  +
mov eax ebx +
pop ebx  +
jmp loc_1009746  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009744  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_100977E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009776  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1009776  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_10016E0  +
call sub_1007D0A  +
cmp eax 0FFFFFFFFh +
jz loc_1009776  +
xor eax eax +
inc eax  +
jmp loc_1009778  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_10097CC  +
movzx eax ds:byte_10097DB[eax] +
jmp ds:off_10097D3[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_10097CE  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_100986F  +
cmp [ebp+arg_4] ebx +
jnz loc_100986F  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1007D0A  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_1009829  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_10078B2  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_100881A  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_100984C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100987D  +
push 8  +
jmp loc_100987B  +
lea ecx [esi+1] +
push ecx  +
push offset dword_10012DC  +
push eax  +
call sub_10082C0  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_1008303  +
mov eax [ebp+arg_4] +
jmp loc_100987F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100987D  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_10098C4  +
cmp ecx edi +
jnz loc_10098C4  +
call ds:GetLastError  +
test eax eax +
jnz loc_10098BD  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_1009B27  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_10098AF  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_1009B23  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_1009B2D  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_100792E  +
test eax eax +
jnz loc_10099DF  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_10099DF  +
cmp [edi+4] ebx +
jnz loc_10099DF  +
cmp [edi+8] ebx +
jnz loc_10099DF  +
cmp [edi+0Ch] ebx +
jnz loc_10099DF  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100995A  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_10099DF  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_10099DF  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_100996F  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_10099DF  +
mov edx eax +
or edx ecx +
jz loc_1009980  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_10099DF  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_1009995  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_10099DF  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_10099A1  +
xor eax eax +
or ebx eax +
jnz loc_10099DF  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_10099DF  +
jmp ds:off_1009B4F[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_10099F8  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_10099DF  +
cmp [edi-10h] ecx +
jnz loc_10099DF  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_1009A17  +
cmp eax 2 +
jnb loc_1009A17  +
call ds:GetLastError  +
test eax eax +
jnz loc_10099F1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1009B26  +
mov eax [edi-10h] +
test eax eax +
jz loc_10099DF  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_1009A17  +
push dword ptr [eax]  +
call sub_100A98E  +
test eax eax +
jz loc_10099DF  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1009A27  +
cmp [edi-14h] ecx +
jz loc_10099DF  +
xor eax eax +
or ebx eax +
jnz loc_1009B0D  +
cmp dword ptr [edi-24h] 1 +
jnz loc_10099DF  +
and esi 20h +
or esi eax +
jnz loc_10099DF  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_1009B0D  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_10099DF  +
jmp loc_1009B0D  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_1009B45  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_10099DF  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_10099DF  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_10099DF  +
mov edx [edi-10h] +
test edx edx +
jz loc_10099DF  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_1009AB5  +
push dword ptr [edx]  +
call sub_100A98E  +
test eax eax +
jz loc_10099DF  +
jmp loc_1009B0D  +
cmp dword ptr [edi-24h] 1 +
ja loc_10099DF  +
and esi 20h +
xor eax eax +
jmp loc_1009B05  +
cmp dword ptr [edi-8] 0 +
jz loc_10099DF  +
cmp dword ptr [edi-4] 0 +
jnz loc_1009B0D  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_1009B0D  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_10099DF  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_10099DF  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_10099DF  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_10098DE  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_10099F1  +
push 42Bh  +
jmp loc_10099EB  +
push 78h  +
jmp loc_10099EB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_1009BC2  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009BB6  +
push 57h  +
call ebx  +
call sub_1007683  +
xor eax eax +
jmp loc_100A126  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_100A110  +
cmp eax edi +
jz loc_100A110  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_1009C61  +
cmp [ebp+lpString2] 0 +
jnz loc_1009C61  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_1009C61  +
cmp dword ptr [ebp+lpString] edx +
jz loc_1009C3F  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009C3F  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_100969E  +
push eax  +
push 2  +
call sub_1008B0B  +
add esp 10h +
jmp loc_1009C55  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009C50  +
push 42Bh  +
call ebx  +
call sub_1007683  +
push 800401E4h  +
call ebx  +
jmp loc_100A123  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_1009C79  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_1009C84  +
jmp loc_100A110  +
cmp dword ptr [esi+24h] 0 +
jz loc_1009C8A  +
cmp ecx 9 +
jz loc_1009C8A  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_100A110  +
jmp ds:off_100A12C[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1009CF8  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_1009CF8  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_100881A  +
test eax eax +
jnz loc_1009CD8  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A11E  +
push 8  +
call ds:SetLastError  +
jmp loc_100A11E  +
push 3  +
push offset asc_10016C0  +
push eax  +
call sub_100898F  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_100A11E  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1009D73  +
test ebx ebx +
jz loc_100A10B  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_1009305  +
test eax eax +
jnz loc_1009D73  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1009D4A  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009D4A  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_100969E  +
push eax  +
push 3  +
call sub_1008B0B  +
add esp 14h +
jmp loc_1009D63  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_100969E  +
push eax  +
push 2  +
call sub_1008B0B  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100A123  +
test ebx ebx +
jz loc_100A10B  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1009DCC  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1009DCC  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1009DB2  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1009DB2  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_1009D53  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_100969E  +
push eax  +
push 1  +
call sub_1008B0B  +
add esp 0Ch +
jmp loc_1009D63  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_1009E1C  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_1009DFF  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100B57B  +
cmp eax 0FFFFFFFFh +
jnz loc_100A10B  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100ACD1  +
cmp eax 0FFFFFFFFh +
jnz loc_100A10B  +
jmp loc_1009CBD  +
cmp [ebp+var_C] ecx +
jz loc_1009E5B  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_1009E5B  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1009E4C  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1009E4C  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_1009D53  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1009DBA  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_1009E85  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1007B22  +
test eax eax +
jz loc_1009CBD  +
mov [esi+2Ch] eax +
jmp loc_1009E8B  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_10082C0  +
jmp loc_100A10B  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_100A10B  +
push 0  +
push ebx  +
call sub_10078B2  +
test eax eax +
jz loc_1009F64  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_1009122  +
test eax eax +
jz loc_1009F64  +
push 0Ah  +
push ebx  +
call sub_1008F3C  +
cmp [ebp+var_C] 1 +
jnz loc_1009EE6  +
mov dword ptr [ebp+String2] eax +
jmp loc_1009EE9  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1009F4E  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_1009F27  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1009F14  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100B4EF  +
jmp loc_1009F1E  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100B512  +
cmp eax 0FFFFFFFFh +
jnz loc_100A10B  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1009F3F  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100AD48  +
jmp loc_1009E0E  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100AD9D  +
jmp loc_1009E0E  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_1009F5D  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_100A10B  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_1009F76  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_1009FCA  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1009F98  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009F98  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_1009D53  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1009DBA  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100A10B  +
push ebx  +
call sub_1008F19  +
test eax eax +
jnz loc_100A003  +
and edi 10h +
or edi eax +
jz loc_1009FD4  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_1009FD4  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_100A125  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1009FF6  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009FF6  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_1009D53  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1009DBA  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_100A014  +
call sub_1008D54  +
fstp  [ebp+var_18] +
jmp loc_100A01C  +
call sub_1008D54  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_100A092  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_100A063  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100A04C  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100B535  +
jmp loc_100A05A  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100B558  +
cmp eax 0FFFFFFFFh +
jnz loc_100A10B  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100A07F  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100ADF2  +
jmp loc_1009E0E  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100AE47  +
jmp loc_1009E0E  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_100A0A2  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_100A10B  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_100A10B  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_100A125  +
cmp [ebp+lpString2] 0 +
jz loc_100A102  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100A0E3  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A0E3  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_1009D53  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A0F8  +
push 42Bh  +
call ds:SetLastError  +
call sub_1007683  +
jmp loc_1009D63  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_100A125  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A11E  +
push 57h  +
call ebx  +
call sub_1007683  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100A21A  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_100A21A  +
cmp [ebp+arg_8] edi +
jz loc_100A21A  +
push [ebp+arg_8]  +
call sub_1009750  +
test eax eax +
jnz loc_100A19F  +
push 490h  +
jmp loc_100A226  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_100A195  +
add esi 20h +
jmp loc_100A1AE  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_100A1FB  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_100A1C6  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_100A1EB  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_100A1EB  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_1009305  +
cmp eax 1 +
jz loc_100A215  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_100A1AC  +
jmp loc_100A195  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A20C  +
push 42Bh  +
call ebx  +
call sub_1007683  +
xor eax eax +
jmp loc_100A22B  +
mov eax [ebp+arg_4] +
jmp loc_100A22B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A228  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100A30F  +
cmp [ebp+arg_4] edi +
jz loc_100A30F  +
cmp [ebp+lpString] edi +
jz loc_100A30F  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_100A30F  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1007D0A  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_100A320  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_100881A  +
mov [esi] eax +
test eax eax +
jnz loc_100A2C6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A31D  +
push 8  +
call ds:SetLastError  +
jmp loc_100A31D  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_100881A  +
mov [esi+4] eax +
test eax eax +
jz loc_100A2B2  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_10082C0  +
test edi edi +
jz loc_100A300  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_10082C0  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A159  +
jmp loc_100A320  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A31D  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_100A3AB  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_100A3AB  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_10075F0  +
test eax eax +
jnz loc_100A35C  +
push 7  +
call sub_100757F  +
jmp loc_100A368  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_100881A  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100A3AB  +
test ebx ebx +
jbe loc_100A395  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_100A38F  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_100A38F  +
push esi  +
call sub_1007EBE  +
add esi 50h +
dec ebx  +
jnz loc_100A376  +
push [ebp+arg_0]  +
call sub_100761C  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_100A3AD  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_100881A  +
mov ebx eax +
cmp ebx edi +
jz loc_100A43C  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_100A44E  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_100A3E5  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_100A455  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_100A44E  +
call esi  +
test eax eax +
jnz loc_100A44E  +
push 57h  +
jmp loc_100A448  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A44E  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100A61B  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1007B22  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_100A44E  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_100A482  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1007EBE  +
jmp loc_100A44E  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_100A477  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_100881A  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_100A477  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1008145  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_100A4F9  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_100A4B7  +
cmp dword ptr [ebp+lpString] edi +
jz loc_100A477  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_10078B2  +
cmp eax 4 +
ja loc_100A531  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1007EBE  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A44E  +
push 42Bh  +
jmp loc_100A448  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1007DFB  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_100A56B  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_1001698 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_100A5BB  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_100881A  +
mov esi eax +
cmp esi edi +
jnz loc_100A5A2  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1007EBE  +
jmp loc_100A43C  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS  +
push [ebp+dwLen]  +
push esi  +
call sub_1008145  +
add esp 14h +
jmp loc_100A5DB  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_100A5C9  +
push 7  +
call sub_100757F  +
jmp loc_100A5D5  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_100881A  +
mov esi eax +
cmp esi edi +
jz loc_100A594  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_100881A  +
mov esi eax +
cmp esi edi +
jz loc_100A594  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_100969E  +
push eax  +
push 50h  +
push esi  +
call sub_1008145  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_1007EBE  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_100A69D  +
cmp [ebp+arg_4] ebx +
jz loc_100A69D  +
cmp [ebp+arg_C] ebx +
jz loc_100A69D  +
cmp [ebp+dwErrCode] ebx +
jz loc_100A69D  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_100A69D  +
call sub_1007735  +
test eax eax +
jnz loc_100A67D  +
push 157Fh  +
call sub_100969E  +
push eax  +
call sub_100761C  +
push 47Eh  +
call edi  +
jmp loc_100A6A6  +
call sub_10074A9  +
test eax eax +
jz loc_100A6A1  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_100A6C5  +
cmp eax [ebp+arg_C] +
jl loc_100A6AF  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A6A1  +
push 57h  +
call edi  +
call sub_1007683  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_10097EA  +
mov esi eax +
cmp esi ebx +
jz loc_100A6A1  +
push esi  +
call sub_100A3B8  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_100A6A1  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_100988B  +
test eax eax +
jz loc_100A6A1  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_100A827  +
jmp loc_100A6FC  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_100A715  +
mov edi [ecx+4] +
jmp loc_100A717  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100A159  +
cmp eax 0FFFFFFFFh +
jnz loc_100A75C  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100A237  +
cmp eax 0FFFFFFFFh +
jnz loc_100A74F  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_100A864  +
mov edi ebx +
xor ebx ebx +
jmp loc_100A755  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_100A897  +
test edi edi +
jz loc_100A7B7  +
cmp [ebp+arg_8] 2 +
jnz loc_100A7B7  +
push dword ptr [esi+8]  +
call sub_10097AB  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_100A7B2  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100A159  +
cmp eax 0FFFFFFFFh +
jnz loc_100A7A9  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100A237  +
cmp eax 0FFFFFFFFh +
jz loc_100A7B7  +
mov [ebp+arg_8] 1 +
jmp loc_100A7B5  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_1009B7C  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_100A910  +
mov eax [esi+18h] +
test eax eax +
jz loc_100A7F2  +
cmp eax [esi+1Ch] +
jz loc_100A8B5  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_100A80B  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_100A6F9  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_100A859  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_100A859  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_100A8FA  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_100A850  +
cmp [ecx+1Ch] ebx +
jz loc_100A920  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_100A831  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_100A6A8  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_100969E  +
push eax  +
push esi  +
call sub_1008B0B  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100A32C  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100A6A6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A6A1  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_100A6A1  +
test ebx ebx +
jz loc_100A8E2  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A8E2  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_100969E  +
push eax  +
push 3  +
call sub_1008B0B  +
add esp 14h +
jmp loc_100A87C  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_100969E  +
push eax  +
push 2  +
jmp loc_100A874  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A90B  +
push 42Bh  +
call edi  +
call sub_1007683  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100A32C  +
jmp loc_100A6A6  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_100A93A  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_100A8FA  +
mov edi [ecx+24h] +
jmp loc_100A952  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_100A950  +
push ebx  +
push eax  +
call sub_10097EA  +
mov edi eax +
test edi edi +
jnz loc_100A956  +
jmp loc_100A90B  +
mov edi ecx +
test edi edi +
jz loc_100A96C  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A96C  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_100A8ED  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_100969E  +
push eax  +
push 1  +
call sub_1008B0B  +
add esp 0Ch +
jmp loc_100A87C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100A9A4  +
cmp dword ptr [eax] 9 +
jnz loc_100A9A4  +
xor eax eax +
inc eax  +
jmp loc_100A9A6  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_100A9BF  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100A98E  +
test eax eax +
jz loc_100AA1A  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100AA0E  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_100AB1B  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1007EBE  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_100A9F2  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_100A98E  +
test eax eax +
jz loc_100AA45  +
push ecx  +
call sub_100A9D4  +
push esi  +
call sub_1007EBE  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100A98E  +
test eax eax +
jz loc_100AA64  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100A98E  +
test eax eax +
jnz loc_100AA83  +
xor eax eax +
jmp loc_100AAA8  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_100AA7F  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_100AA9E  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_100AA96  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_100AAA7  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100A98E  +
test eax eax +
jnz loc_100AAC9  +
or eax 0FFFFFFFFh +
jmp loc_100AB11  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_100AAC4  +
push 14h  +
call sub_1007B22  +
test eax eax +
jz loc_100AAC4  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_100AB04  +
mov [esi+8] eax +
jmp loc_100AB0A  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_100AB8F  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_100AB5A  +
jz loc_100AB76  +
cmp eax 20000h +
jz loc_100AB76  +
cmp eax 30000h +
jz loc_100AB76  +
cmp eax 40000h +
jz loc_100AB76  +
cmp eax 50000h +
jz loc_100AB76  +
cmp eax 60000h +
jz loc_100AB76  +
jmp loc_100AB8F  +
cmp eax 80000h +
jz loc_100AB81  +
cmp eax 90000h +
jz loc_100AB76  +
cmp eax 0A0000h +
jz loc_100AB76  +
cmp eax 0B0000h +
jnz loc_100AB8F  +
add edx 0Ch +
push edx  +
call sub_1007EBE  +
jmp loc_100AB8F  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_100AA24  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_100A98E  +
test eax eax +
jnz loc_100ABB3  +
or eax 0FFFFFFFFh +
jmp loc_100ACC2  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_100ACBD  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_100ACAD  +
mov ecx 70000h +
cmp eax ecx +
ja loc_100AC41  +
jz loc_100AC2F  +
cmp eax 20000h +
jz loc_100AC13  +
cmp eax 30000h +
jz loc_100ACA4  +
cmp eax 40000h +
jz loc_100ACA4  +
cmp eax 60000h +
jnz loc_100ACAD  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_100AC36  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_10078D3  +
test eax eax +
jz loc_100ACC7  +
mov edx [ebp+arg_0] +
jmp loc_100ACAD  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_100ACAD  +
mov eax edx +
jmp loc_100ACC0  +
cmp eax 90000h +
jz loc_100ACA4  +
cmp eax 0A0000h +
jz loc_100AC67  +
cmp eax 0B0000h +
jnz loc_100ACAD  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_100ACAD  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_100ACAB  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_100ACAD  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_100ACAD  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_100ACAD  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100ACAD  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_100ACAD  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_100ACAB  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_100AC3D  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_100ABC9  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_100ACC0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A98E  +
test eax eax +
jnz loc_100ACEC  +
or eax 0FFFFFFFFh +
jmp locret_100AD3F  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100ACFF  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1007B22  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AD3A  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_10082C0  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100AAB1  +
cmp eax 0FFFFFFFFh +
jnz loc_100AD3D  +
lea eax [ebp+var_4] +
push eax  +
call sub_1007EBE  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A98E  +
test eax eax +
jz loc_100AD91  +
push 4  +
call sub_1007B22  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AD91  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100AAB1  +
cmp eax 0FFFFFFFFh +
jnz locret_100AD94  +
lea eax [ebp+var_4] +
push eax  +
call sub_1007EBE  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A98E  +
test eax eax +
jz loc_100ADE6  +
push 4  +
call sub_1007B22  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100ADE6  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100AAB1  +
cmp eax 0FFFFFFFFh +
jnz locret_100ADE9  +
lea eax [ebp+var_4] +
push eax  +
call sub_1007EBE  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A98E  +
test eax eax +
jz loc_100AE3B  +
push 4  +
call sub_1007B22  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AE3B  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100AAB1  +
cmp eax 0FFFFFFFFh +
jnz locret_100AE3E  +
lea eax [ebp+var_4] +
push eax  +
call sub_1007EBE  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A98E  +
test eax eax +
jz loc_100AE90  +
push 8  +
call sub_1007B22  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AE90  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100AAB1  +
cmp eax 0FFFFFFFFh +
jnz locret_100AE93  +
lea eax [ebp+var_4] +
push eax  +
call sub_1007EBE  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_100A98E  +
test eax eax +
jz loc_100AF0A  +
call sub_100A9AF  +
push eax  +
mov [ebp+var_4] eax +
call sub_100A98E  +
test eax eax +
jz loc_100AF0A  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_100AEE4  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_100AAB1  +
cmp eax 0FFFFFFFFh +
jz loc_100AEE4  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100AECE  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_100AF01  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_100AAB1  +
cmp eax 0FFFFFFFFh +
jnz loc_100AF0D  +
lea eax [ebp+var_4] +
push eax  +
call sub_100AA24  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_100A98E  +
test eax eax +
jnz loc_100AF2D  +
or eax 0FFFFFFFFh +
jmp loc_100AF51  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_100AF4E  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_100AAB1  +
cmp eax 0FFFFFFFFh +
jz loc_100AF4E  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100AF35  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100AF89  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100AF89  +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [eax+0Ch]  +
call sub_100ACD1  +
jmp loc_100AF8C  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_100AA6D  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AFF1  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_100AFCE  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_100AFD4  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_100AFDC  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_100AB1B  +
lea eax [ebp+var_4] +
push eax  +
call sub_1007EBE  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B027  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B027  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100AF95  +
jmp loc_100B029  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B05B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B05B  +
push dword ptr [eax+0Ch]  +
call sub_100AA4F  +
jmp loc_100B05D  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jnz loc_100B080  +
xor eax eax +
jmp loc_100B096  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_100B093  +
cmp ecx 80000h +
jnz loc_100B07C  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jnz loc_100B0B9  +
xor eax eax +
jmp loc_100B0C5  +
cmp dword ptr [eax+4] 20000h +
jnz loc_100B0B5  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jnz loc_100B0E8  +
xor eax eax +
jmp loc_100B100  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_100B0FB  +
cmp ecx 30000h +
jnz loc_100B0E4  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jnz loc_100B127  +
fld  ds:flt_1001788 +
jmp loc_100B135  +
cmp dword ptr [eax+4] 60000h +
jnz loc_100B11F  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jnz loc_100B15C  +
fld  ds:dbl_1001790 +
jmp loc_100B16A  +
cmp dword ptr [eax+4] 70000h +
jnz loc_100B154  +
mov eax [eax+0Ch] +
fld  qword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor eax eax +
lea edi [ebp+FileTime] +
stos   +
stos   +
xor eax eax +
mov edi ebx +
stos   +
stos   +
push 0  +
push [ebp+arg_8]  +
stos   +
push [ebp+arg_4]  +
stos   +
call sub_100AA6D  +
test eax eax +
jz loc_100B1DD  +
mov edx [eax+4] +
mov ecx 0A0000h +
cmp edx ecx +
jz loc_100B1B7  +
cmp edx 0B0000h +
jnz loc_100B1DD  +
cmp edx ecx +
jnz loc_100B1C4  +
push esi  +
mov esi [eax+0Ch] +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
pop esi  +
jmp loc_100B1DD  +
mov eax [eax+0Ch] +
mov ecx [eax] +
mov [ebp+FileTime.dwLowDateTime] ecx +
mov eax [eax+4] +
mov [ebp+FileTime.dwHighDateTime] eax +
push ebx  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B216  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B216  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100B066  +
jmp loc_100B218  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B24D  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B24D  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100B09F  +
jmp loc_100B24F  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B284  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B284  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100B0CE  +
jmp loc_100B286  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100B2A0  +
xor eax eax +
jmp loc_100B2D0  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B29C  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_100B2C3  +
test ecx ecx +
jz loc_100B2C7  +
jmp loc_100B29C  +
test ecx ecx +
jnz loc_100B2CA  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
mov esi eax +
cmp esi edi +
jnz loc_100B2F9  +
xor eax eax +
jmp loc_100B378  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_100B30A  +
cmp eax edi +
jnz loc_100B35F  +
cmp [ebp+arg_C] edi +
jnz loc_100B31B  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_100B33F  +
lea edi [eax+eax] +
push edi  +
call sub_1007B22  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100B35F  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_100B366  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_100B366  +
lea edi [esi+0Ch] +
push edi  +
call sub_1007EBE  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1007B22  +
mov [edi] eax +
test eax eax +
jnz loc_100B363  +
xor eax eax +
jmp loc_100B377  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10082C0  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
mov esi eax +
test esi esi +
jnz loc_100B3A0  +
xor eax eax +
jmp loc_100B3DB  +
mov eax [esi+4] +
cmp eax 40000h +
jz loc_100B3B0  +
test eax eax +
jz loc_100B3B4  +
jmp loc_100B39C  +
test eax eax +
jnz loc_100B3D0  +
push 4  +
call sub_1007B22  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100B39C  +
mov dword ptr [esi+4] 40000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B414  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B414  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100B28F  +
jmp loc_100B416  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B451  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B451  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100B2DA  +
jmp loc_100B453  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B48B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B48B  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100B383  +
jmp loc_100B48D  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B4AF  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100AA6D  +
test eax eax +
jz loc_100B4E4  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100B4E4  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100B496  +
jmp loc_100B4E6  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100AB98  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100AB98  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100AB98  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100AB98  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100AB98  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_204] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push 1FAh  +
lea eax [ebp+var_200] +
push 0  +
push eax  +
call memset  +
mov ebx [ebp+arg_C] +
add esp 0Ch +
test ebx ebx +
jnz loc_100B5E8  +
xor eax eax +
jmp loc_100B69C  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_100AA6D  +
mov esi eax +
test esi esi +
jz loc_100B5E1  +
push ebx  +
push offset dword_1001430  +
push edi  +
call sub_10082C0  +
mov eax [esi+4] +
cmp eax 20000h +
jz loc_100B68B  +
cmp eax 30000h +
jz loc_100B67F  +
cmp eax 40000h +
jz loc_100B65F  +
cmp eax 60000h +
jz loc_100B658  +
cmp eax 70000h +
jnz loc_100B695  +
mov eax [esi+0Ch] +
fld  qword ptr [eax] +
push ecx  +
push ecx  +
fstp  [esp+218h+var_218] +
push offset aF  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1008145  +
add esp 14h +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
jmp loc_100B68F  +
mov eax [esi+0Ch] +
fld  dword ptr [eax] +
jmp loc_100B630  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLu  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1008145  +
add esp 10h +
jmp loc_100B64E  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLd  +
jmp loc_100B669  +
push ebx  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_10082C0  +
push edi  +
call ds:lstrlenW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
mov [ebp+pSid] ebx +
mov [ebp+var_14] ebx +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
call ds:AllocateAndInitializeSid  +
mov esi eax +
cmp esi 1 +
jnz loc_100B727  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+pSid]  +
push ebx  +
call ds:CheckTokenMembership  +
cmp eax esi +
jnz loc_100B71C  +
cmp [ebp+var_14] esi +
jz loc_100B71E  +
xor esi esi +
push [ebp+pSid]  +
call ds:FreeSid  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_100B75D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B759  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100B782  +
push 0  +
push [ebp+lpString1]  +
call sub_10078B2  +
cmp eax 2 +
jbe loc_100B759  +
push 2  +
push 1  +
push offset asc_1001370  +
push [ebp+lpString1]  +
call sub_10078D3  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_100B81C  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100B81C  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_100881A  +
cmp eax esi +
jnz loc_100B7CB  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B827  +
push 8  +
jmp loc_100B821  +
mov esi ds:wcstok +
mov edi offset a_ +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_100B81C  +
push 0  +
push 0Ah  +
push ebx  +
call sub_1009122  +
test eax eax +
jz loc_100B827  +
push 0Ah  +
push ebx  +
call sub_1008F3C  +
cmp eax 0FFh +
ja loc_100B827  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_100B7E2  +
cmp [ebp+var_4] 4 +
jnz loc_100B81C  +
inc eax  +
jmp loc_100B829  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_100B9B9  +
cmp ebx esi +
jz loc_100B9B9  +
mov eax [ebx] +
cmp eax esi +
jz loc_100B8B2  +
cmp eax 2 +
jb loc_100B9B9  +
cmp edx esi +
jz loc_100B9B9  +
cmp dword_100FF5C esi +
jnz loc_100B8E6  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_100B8DC  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_100B9C5  +
mov dword_100FF5C 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call ds:GetAddrInfoW  +
test eax eax +
jnz loc_100B9CB  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_100B953  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:GetNameInfoW  +
cmp eax edi +
jz loc_100B959  +
cmp eax 2AFCh +
jnz loc_100B950  +
cmp [ebp+var_848] di +
jnz loc_100B959  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_100B913  +
jmp loc_100B9A5  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_100B976  +
mov eax esi +
push offset a_  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_10078B2  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_100B992  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_100B9A5  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_10082C0  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call ds:FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_100B9CD  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B9CB  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_100BA37  +
push esi  +
push edi  +
call sub_10078B2  +
test eax eax +
jz loc_100BA37  +
push edi  +
call sub_100B73C  +
push edi  +
test eax eax +
jnz loc_100BA3F  +
push offset aS_4  +
push 1  +
call sub_1008B0B  +
add esp 0Ch +
test eax eax +
jnz loc_100BA46  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BA32  +
push 8  +
call ds:SetLastError  +
call sub_1007683  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_100761C  +
jmp loc_100BA1C  +
call sub_10075F0  +
cmp eax esi +
jnz loc_100BA58  +
push 0Dh  +
call sub_100757F  +
jmp loc_100BA62  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_100881A  +
cmp eax esi +
jz loc_100BA20  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_100BA37  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_100BA91  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_100BA39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_100BBA0  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100BBA0  +
push esi  +
call sub_100B73C  +
cmp eax 1 +
jnz loc_100BAD6  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_100BB11  +
push offset aIpc  +
push esi  +
push offset aSS_0  +
push 2  +
call sub_1008B0B  +
add esp 10h +
test eax eax +
jnz loc_100BB3E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BB09  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_100BBA2  +
test bl 20h +
jz loc_100BB1D  +
push offset aAdmin  +
jmp loc_100BAE3  +
test bl 40h +
jz loc_100BB2C  +
cmp [ebp+arg_4] edi +
jz loc_100BB2C  +
push [ebp+arg_4]  +
jmp loc_100BAE3  +
push esi  +
push offset aS_4  +
push 1  +
call sub_1008B0B  +
add esp 0Ch +
jmp loc_100BAF3  +
call sub_10075F0  +
cmp eax edi +
jnz loc_100BB50  +
push 12h  +
call sub_100757F  +
jmp loc_100BB5A  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_100881A  +
cmp eax edi +
jz loc_100BAF7  +
test ebx 10000000h +
jz loc_100BB6D  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_100BB93  +
cmp esi 4B8h +
jz loc_100BB8C  +
call sub_1007683  +
jmp loc_100BB9C  +
call sub_1008B9D  +
jmp loc_100BB9C  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_100BBA2  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_100BD06  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100BD06  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_100BC03  +
xor eax eax +
jmp loc_100BD09  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_100881A  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_100BC27  +
call ebx  +
test eax eax +
jnz loc_100BBFC  +
push 8  +
call ds:SetLastError  +
jmp loc_100BBFC  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_100BBFC  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_10078D3  +
test eax eax +
jz loc_100BD06  +
push [ebp+lpString]  +
call sub_100B78B  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_100BCC2  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_100B835  +
test eax eax +
jz loc_100BBFC  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_100881A  +
mov esi eax +
cmp esi edi +
jz loc_100BBFC  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_100B835  +
test eax eax +
jz loc_100BBFC  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_10078D3  +
test eax eax +
jnz loc_100BCAE  +
mov eax ebx +
jmp loc_100BD09  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_10078D3  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_100BD09  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_100BBFC  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_100881A  +
mov ebx eax +
cmp ebx edi +
jz loc_100BBFC  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_100BBFC  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_100BCB6  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@_0 +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_100BDB1  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100BDB1  +
push ebx  +
call sub_100B78B  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_100BD93  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_100B835  +
test eax eax +
jnz loc_100BD6F  +
xor eax eax +
jmp loc_100BDB4  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_100881A  +
cmp eax esi +
jz loc_100BD6B  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_100B835  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100BDB4  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_1007D75  +
cmp eax 0FFFFFFFFh +
jz loc_100BDAD  +
push 35h  +
call ds:SetLastError  +
jmp loc_100BD6B  +
mov eax edi +
jmp loc_100BDB4  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_100BAA0  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_100BF42  +
push esi  +
call sub_100BBAE  +
cmp eax 1 +
jz loc_100BF42  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_100B73C  +
cmp eax 1 +
jnz loc_100BE21  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_100BD15  +
test eax eax +
jnz loc_100BE3D  +
call sub_1007683  +
call ds:GetLastError  +
jmp loc_100BF76  +
cmp [ebp+lpString] ebx +
jz loc_100BE66  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100BE66  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_0  +
push 2  +
call sub_1008B0B  +
add esp 10h +
jmp loc_100BE78  +
push dword ptr [ebp+arg_0]  +
push offset aS_4  +
push 1  +
call sub_1008B0B  +
add esp 0Ch +
test eax eax +
jnz loc_100BE9B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BE8E  +
push 8  +
call ds:SetLastError  +
call sub_1007683  +
push 8  +
pop eax  +
jmp loc_100BF76  +
call sub_10075F0  +
cmp eax ebx +
jnz loc_100BEAD  +
push 12h  +
call sub_100757F  +
jmp loc_100BEB7  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_100881A  +
mov edx eax +
cmp edx ebx +
jz loc_100BE7C  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_100BF08  +
cmp esi 4B8h +
jz loc_100BF01  +
push esi  +
call ds:SetLastError  +
call sub_1007683  +
jmp loc_100BF70  +
call sub_1008B9D  +
jmp loc_100BF70  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_100B9E3  +
push eax  +
call sub_10077CB  +
test eax eax +
jnz loc_100BF70  +
push dword ptr [ebp+arg_0]  +
call sub_100BDCA  +
push 1580h  +
call sub_100969E  +
push eax  +
call sub_100761C  +
mov esi 4B8h +
jmp loc_100BF70  +
cmp [ebp+lpUserName] ebx +
jz loc_100BF74  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100BF74  +
push 157Eh  +
call sub_100969E  +
push eax  +
call sub_100761C  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_100BF76  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_100BDE7  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
push 0  +
call ebx  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_100C12C  +
push 0  +
push edi  +
call sub_10078B2  +
test eax eax +
jz loc_100C12C  +
xor esi esi +
inc esi  +
cmp [ebp+arg_14] esi +
jnz loc_100C00B  +
cmp [ebp+lpUserName] 0 +
jz loc_100BFF1  +
cmp [ebp+nSize] 2 +
jb loc_100BFF1  +
cmp [ebp+lpPassword] 0 +
jz loc_100BFF1  +
cmp [ebp+arg_10] 2 +
jnb loc_100C00B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BFFF  +
push 57h  +
call ebx  +
call sub_1007683  +
xor eax eax +
jmp loc_100C12F  +
push edi  +
mov [ebp+var_4] edi +
call sub_100B73C  +
cmp eax esi +
jnz loc_100C01E  +
lea eax [edi+4] +
mov [ebp+var_4] eax +
cmp [ebp+arg_14] esi +
jnz loc_100C04F  +
cmp [ebp+lpPassword] 0 +
jz loc_100C04F  +
push 0  +
push esi  +
push offset String2  +
push [ebp+lpPassword]  +
call sub_10078D3  +
test eax eax +
jnz loc_100C04F  +
push [ebp+var_4]  +
call sub_100BD15  +
test eax eax +
jnz loc_100C143  +
jmp loc_100BFFF  +
push [ebp+var_4]  +
and [ebp+var_8] 0 +
call sub_100BD15  +
test eax eax +
jz loc_100BFFF  +
cmp [ebp+lpUserName] 0 +
jz loc_100C094  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100C094  +
mov eax [ebp+arg_14] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpPassword] +
push eax  +
push [ebp+lpUserName]  +
push edi  +
call sub_100BF81  +
mov edi eax +
cmp [ebp+arg_14] esi +
jnz loc_100C0A3  +
mov [ebp+var_8] esi +
jmp loc_100C0A3  +
push 0  +
push 0  +
push edi  +
mov [ebp+var_8] esi +
call sub_100BF81  +
mov edi eax +
cmp edi 55h +
jnz loc_100C0B3  +
push 50010001h  +
call ebx  +
mov eax esi +
jmp loc_100C12F  +
test edi edi +
jnz loc_100C0BF  +
cmp [ebp+var_8] esi +
jz loc_100C0A8  +
push edi  +
jmp loc_100C0AD  +
mov eax 4C3h +
cmp edi eax +
ja loc_100C0EC  +
jz loc_100C0E9  +
cmp edi 34h +
jz loc_100C1DB  +
cmp edi 56h +
jz loc_100C136  +
cmp edi 4BEh +
jz loc_100C1DB  +
jmp loc_100BFFF  +
push eax  +
jmp loc_100C0AD  +
cmp edi 4CFh +
jb loc_100BFFF  +
cmp edi 4D1h +
jbe loc_100C1DB  +
cmp edi 52Eh +
jz loc_100C136  +
mov esi 0A0010001h +
cmp edi esi +
jnz loc_100BFFF  +
push 157Eh  +
call sub_100969E  +
push eax  +
call sub_100761C  +
push esi  +
call ebx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp [ebp+arg_14] 0 +
jz loc_100C004  +
mov edi [ebp+lpString] +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jnz loc_100C166  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpUserName]  +
push 2  +
call GetUserNameExW  +
test al al +
jz loc_100BFFF  +
push [ebp+lpUserName]  +
push 157Dh  +
call sub_100969E  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100954B  +
add esp 14h +
push [ebp+arg_10]  +
push [ebp+lpPassword]  +
call sub_10085AB  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push edi  +
call sub_100BF81  +
mov edi eax +
test edi edi +
jz loc_100C0AF  +
cmp edi 34h +
jz loc_100C1DB  +
cmp edi 4BEh +
jz loc_100C1DB  +
mov eax 4C3h +
cmp edi eax +
jz loc_100C0E9  +
cmp edi 4CEh +
jbe loc_100BFFF  +
cmp edi 4D1h +
ja loc_100C10C  +
push 4C6h  +
call ebx  +
call sub_1007683  +
push edi  +
call ebx  +
jmp loc_100C004  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+lpString] +
push edi  +
xor edi edi +
cmp ebx edi +
jz loc_100C354  +
push esi  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_100C353  +
cmp [ebp+hConsoleOutput] edi +
jz loc_100C353  +
push ebx  +
call sub_1007E83  +
mov [ebp+lpString] eax +
cmp eax esi +
jnb loc_100C22F  +
mov [ebp+lpString] esi +
mov eax [ebp+lpString] +
push 1  +
add eax 5 +
push eax  +
push edi  +
push 15h  +
call sub_100881A  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_100C271  +
call ds:GetLastError  +
test eax eax +
jnz loc_100C259  +
push 8  +
call ds:SetLastError  +
call sub_1007683  +
push ebx  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push offset dword_1001430  +
jmp loc_100C34D  +
mov [ebp+var_4] edi +
cmp [ebp+arg_8] edi +
jz loc_100C284  +
push [ebp+arg_8]  +
call sub_1007E83  +
mov [ebp+var_4] eax +
xor esi esi +
cmp [ebp+arg_8] edi +
jz loc_100C31A  +
push esi  +
push [ebp+arg_8]  +
push ebx  +
call sub_1008250  +
cmp eax edi +
jz loc_100C31A  +
push eax  +
call sub_1007E83  +
mov edi [ebp+var_4] +
push ebx  +
sub edi eax +
call sub_1007E83  +
add eax edi +
cmp eax [ebp+arg_C] +
jnb loc_100C2BB  +
mov esi eax +
xor edi edi +
jmp loc_100C286  +
test esi esi +
jz loc_100C2C4  +
cmp eax [ebp+arg_C] +
jnz loc_100C2C7  +
mov esi [ebp+arg_C] +
lea eax [esi+1] +
cmp [ebp+lpString] eax +
ja loc_100C2D2  +
mov eax [ebp+lpString] +
mov edi [ebp+var_8] +
push eax  +
push ebx  +
push edi  +
call sub_10082C0  +
push 0  +
push [ebp+arg_C]  +
push edi  +
call sub_10093E3  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push edi  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push ebx  +
push edi  +
call sub_10082C0  +
push ebx  +
call sub_1007E83  +
cmp eax esi +
push ebx  +
jle loc_100C340  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
lea eax [edi+esi*2] +
push eax  +
jmp loc_100C34D  +
cmp esi edi +
jz loc_100C2C4  +
push ebx  +
call sub_1007E83  +
sub eax esi +
cmp eax [ebp+arg_C] +
ja loc_100C2C4  +
push ebx  +
call sub_1007E83  +
cmp eax [ebp+arg_C] +
jg loc_100C2C7  +
push ebx  +
call sub_1007E83  +
mov esi eax +
jmp loc_100C2C7  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push offset dword_1001434  +
push ebx  +
call sub_10082C0  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
push 16h  +
call sub_100757F  +
mov edi eax +
test edi edi +
jz loc_100C445  +
cmp [ebp+arg_8] 0 +
jz loc_100C445  +
push ebx  +
push esi  +
push edi  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push offset dword_1001430  +
push edi  +
call sub_10082C0  +
push [ebp+arg_0]  +
call sub_100AA4F  +
mov ebx [ebp+lpMem] +
push 1  +
lea esi [ebx+5] +
push esi  +
push 0  +
push 13h  +
mov [ebp+var_4] eax +
call sub_100881A  +
push 1  +
push esi  +
xor esi esi +
push esi  +
push 14h  +
mov [ebp+lpMem] eax +
call sub_100881A  +
mov dword ptr [ebp+var_8] eax +
cmp [ebp+lpMem] esi +
jz loc_100C443  +
cmp eax esi +
jz loc_100C443  +
push [ebp+lpString]  +
call sub_1007E83  +
mov [ebp+var_C] eax +
cmp [ebp+var_4] esi +
jbe loc_100C443  +
push ebx  +
push dword ptr [ebp+var_8]  +
push esi  +
push [ebp+arg_0]  +
call sub_100B59F  +
push dword ptr [ebp+var_8]  +
push [ebp+arg_8]  +
push [ebp+lpMem]  +
call sub_1007BCB  +
shr eax 1 +
dec eax  +
push eax  +
push [ebp+lpMem]  +
call sub_1008145  +
add esp 10h +
push edi  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
push edi  +
call sub_1008303  +
inc esi  +
cmp esi [ebp+var_4] +
jnb loc_100C443  +
cmp ebx [ebp+var_C] +
jb loc_100C443  +
push edi  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push edi  +
call sub_1008303  +
sub ebx [ebp+var_C] +
cmp esi [ebp+var_4] +
jb loc_100C3E2  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov ebx [ebp+arg_0] +
mov esi offset aS_5 +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aD +
lea edi [ebp+var_14] +
movs   +
movs   +
mov esi offset aF +
lea edi [ebp+var_C] +
movs   +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
push 16h  +
mov [ebp+lpString] eax +
movs   +
call sub_100757F  +
mov esi eax +
mov [ebp+lpMem] esi +
test ebx ebx +
jz loc_100C5CF  +
test esi esi +
jz loc_100C5CF  +
xor eax eax +
lea edi [ebp+Time] +
stos   +
stos   +
stos   +
push esi  +
stos   +
call sub_1007BCB  +
shr eax 1 +
push eax  +
mov edi offset dword_1001430 +
push edi  +
push esi  +
call sub_10082C0  +
mov ecx [ebx+204h] +
mov eax ecx +
push 10h  +
and eax 0FF0h +
pop edx  +
sub eax edx +
jz loc_100C68E  +
sub eax edx +
jz loc_100C650  +
sub eax edx +
jz loc_100C60A  +
sub eax edx +
jz loc_100C5E0  +
sub eax 20h +
jz loc_100C543  +
sub eax 20h +
jz loc_100C51D  +
push esi  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push edi  +
push esi  +
call sub_10082C0  +
jmp loc_100C59E  +
mov ecx [ebx+28Ch] +
test ecx ecx +
jz loc_100C5CF  +
mov eax [ebx+290h] +
test eax eax +
jnz loc_100C537  +
mov eax ebx +
push esi  +
push eax  +
push [ebp+var_20]  +
push [ebp+arg_4]  +
call ecx  +
jmp loc_100C59E  +
push [ebp+arg_4]  +
lea eax [ebp+var_48] +
push [ebp+var_20]  +
push eax  +
call sub_100B173  +
mov esi eax +
lea edi [ebp+Time] +
movs   +
push 0FEh  +
push [ebp+lpMem]  +
movs   +
push 0  +
lea eax [ebp+Time] +
push eax  +
movs   +
push 80000000h  +
push 400h  +
movs   +
call ds:GetTimeFormatW  +
test eax eax +
jnz loc_100C59B  +
call sub_1007683  +
push [ebp+lpMem]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
call sub_10075F0  +
push eax  +
push [ebp+lpMem]  +
call sub_10082C0  +
mov esi [ebp+lpMem] +
push esi  +
call ds:lstrlenW  +
test eax eax +
jnz loc_100C5CF  +
test dword ptr [ebx+204h] 100000h +
jz loc_100C5CF  +
push esi  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push 138Dh  +
call sub_100969E  +
push eax  +
push esi  +
call sub_10082C0  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn 10h  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100C5F1  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100C6AD  +
call sub_100B13E  +
jmp loc_100C632  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100C61B  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100C6AD  +
call sub_100B109  +
push ecx  +
push ecx  +
fstp  [esp+5Ch+var_5C] +
push edi  +
push esi  +
call sub_1007BCB  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1008145  +
add esp 14h +
jmp loc_100C59E  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100C661  +
lea edi [ebp+var_14] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100C6AD  +
call sub_100B0CE  +
push eax  +
push edi  +
push esi  +
call sub_1007BCB  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1008145  +
add esp 10h +
jmp loc_100C59E  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100C69F  +
lea edi [ebp+var_1C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jz loc_100C6CF  +
call sub_100B066  +
test eax eax +
jz loc_100C5CF  +
push [ebp+lpString]  +
push edi  +
push dword ptr [ebx+200h]  +
push eax  +
call sub_100C35F  +
jmp loc_100C59E  +
call sub_100B09F  +
test eax eax +
jz loc_100C5CF  +
jmp loc_100C674  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_100CB45  +
mov esi [ebp+arg_8] +
cmp esi edi +
jz loc_100CB45  +
push 1  +
mov ebx 1000h +
push ebx  +
push edi  +
push 16h  +
call sub_100881A  +
mov [ebp+lpMem] eax +
call sub_100A9AF  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_100CB37  +
cmp [ebp+lpMem] edi +
jz loc_100CB37  +
test [ebp+arg_C] ebx +
jnz loc_100C837  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp eax edi +
jbe loc_100C7C9  +
add esi 204h +
mov [ebp+arg_C] eax +
mov eax [esi] +
test eax ebx +
jnz loc_100C7BE  +
xor edi edi +
test eax 10000h +
jnz loc_100C775  +
and eax 0FF0h +
cmp eax 20h +
jz loc_100C775  +
cmp eax 30h +
jz loc_100C775  +
cmp eax 40h +
jnz loc_100C778  +
xor edi edi +
inc edi  +
cmp ecx 1 +
jnz loc_100C78A  +
push offset asc_10016D4  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push [ebp+lpMem]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
lea eax [esi-204h] +
push eax  +
push [ebp+lpMem]  +
call sub_10082C0  +
push edi  +
push dword ptr [esi-4]  +
push [ebp+lpMem]  +
call sub_10093E3  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
xor ecx ecx +
inc ecx  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_100C752  +
push offset asc_1001454  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
mov edi [ebp+arg_4] +
xor eax eax +
test edi edi +
jbe loc_100C82A  +
mov esi [ebp+arg_8] +
add esi 200h +
test [esi+4] ebx +
jnz loc_100C821  +
cmp eax 1 +
jnz loc_100C7FF  +
push offset asc_10016D4  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
mov eax [esi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_1001840  +
push [ebp+lpMem]  +
call sub_1008AA7  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
xor eax eax +
inc eax  +
add esi 294h +
dec edi  +
jnz loc_100C7E8  +
push offset asc_1001454  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push [ebp+arg_10]  +
call sub_100AA4F  +
and [ebp+var_14] 0 +
mov [ebp+var_1C] eax +
test eax eax +
jbe loc_100CB2C  +
push [ebp+lpMem]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push offset dword_1001430  +
push [ebp+lpMem]  +
call sub_10082C0  +
push [ebp+var_14]  +
push [ebp+arg_10]  +
call sub_100B066  +
xor ecx ecx +
mov [ebp+var_18] eax +
cmp eax ecx +
jz loc_100CB1D  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_100C9B2  +
mov esi [ebp+arg_8] +
add esi 200h +
mov eax [esi+4] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax 1000h +
jnz loc_100C99D  +
test eax 88000h +
jz loc_100C8C2  +
mov eax [esi] +
push [ebp+lpMem]  +
inc ebx  +
mov [ebp+var_10] eax +
call sub_1007BCB  +
shr eax 1 +
mov [esi] eax +
mov edi offset asc_1001838 +
push edi  +
push [ebp+var_18]  +
lea eax [esi-200h] +
push [ebp+arg_C]  +
push eax  +
call sub_100C44F  +
xor ecx ecx +
test ebx ebx +
jnz loc_100C90C  +
mov eax [esi+4] +
test eax 10000h +
jnz loc_100C8FE  +
and eax 0FF0h +
cmp eax 20h +
jz loc_100C8FE  +
cmp eax 30h +
jz loc_100C8FE  +
cmp eax 40h +
jnz loc_100C901  +
xor ecx ecx +
inc ecx  +
push ecx  +
push dword ptr [esi]  +
push [ebp+lpMem]  +
call sub_10093E3  +
cmp ebx 1 +
jnz loc_100C916  +
mov eax [ebp+var_10] +
mov [esi] eax +
cmp [ebp+var_C] 1 +
jnz loc_100C929  +
push offset asc_10016D4  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
test dword ptr [esi+4] 8000h +
jz loc_100C98B  +
push dword ptr [esi]  +
push edi  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100C1F4  +
push [ebp+lpMem]  +
call sub_1007E83  +
test eax eax +
jz loc_100C996  +
push 3  +
push [ebp+var_8]  +
call sub_100AE9C  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_100C996  +
push [ebp+arg_C]  +
push 0  +
push ebx  +
push [ebp+var_8]  +
call sub_100B45C  +
push 0  +
push [ebp+lpMem]  +
push 2  +
push ebx  +
push [ebp+var_8]  +
call sub_100B41F  +
push 0  +
push edi  +
push 1  +
push ebx  +
push [ebp+var_8]  +
call sub_100B41F  +
jmp loc_100C996  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
mov [ebp+var_C] 1 +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100C896  +
push offset asc_1001454  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push [ebp+var_8]  +
call sub_100AA4F  +
mov [ebp+var_10] eax +
jmp loc_100CB15  +
and [ebp+var_C] 0 +
and [ebp+arg_C] 0 +
or edi 0FFFFFFFFh +
test eax eax +
jbe loc_100CB05  +
jmp loc_100C9E7  +
mov edi [ebp+var_18] +
push 0  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100B258  +
mov esi eax +
lea eax [edi+1] +
cmp eax esi +
jnb loc_100CA5E  +
mov edx [ebp+arg_8] +
mov ecx eax +
imul ecx ecx +
mov ebx esi +
lea edi [ecx+edx+200h] +
sub ebx eax +
test dword ptr [edi+4] 1000h +
jnz loc_100CA55  +
cmp [ebp+var_C] 1 +
jnz loc_100CA2F  +
push offset asc_10016D4  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
mov eax [edi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_10016D4  +
push [ebp+lpMem]  +
call sub_1008AA7  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
mov [ebp+var_C] 1 +
add edi 294h +
dec ebx  +
jnz loc_100CA13  +
cmp [ebp+var_C] 1 +
mov [ebp+var_18] esi +
jnz loc_100CA74  +
push offset asc_10016D4  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100B221  +
push 1  +
push [ebp+arg_C]  +
mov edi eax +
push [ebp+var_8]  +
call sub_100B221  +
mov ebx eax +
test edi edi +
jz loc_100CAF6  +
test ebx ebx +
jz loc_100CAF6  +
push [ebp+lpMem]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push edi  +
mov edi [ebp+lpMem] +
push edi  +
call sub_10082C0  +
imul esi esi +
mov eax [ebp+arg_8] +
push dword ptr [esi+eax+200h]  +
push ebx  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100C1F4  +
push edi  +
call sub_1007E83  +
test eax eax +
jnz loc_100CAE6  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100AF95  +
dec [ebp+arg_C]  +
dec [ebp+var_10]  +
jmp loc_100CAF6  +
push 0  +
push edi  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100B41F  +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
cmp eax [ebp+var_10] +
jb loc_100C9E4  +
push offset asc_1001454  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_100C9CF  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_1C] +
jb loc_100C84E  +
lea eax [ebp+var_8] +
push eax  +
call sub_100AA24  +
jmp loc_100CB5C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CB57  +
push 8  +
jmp loc_100CB51  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CB57  +
push 57h  +
call ds:SetLastError  +
call sub_1007683  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_100F07C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
push 7Ch  +
mov [ebp+var_9C] eax +
lea eax [ebp+var_80] +
push ebx  +
push eax  +
mov [ebp+hConsoleOutput] esi +
mov [ebp+var_A8] edi +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_100CDFE  +
cmp edi ebx +
jz loc_100CDFE  +
push 1  +
push 1000h  +
push ebx  +
push 16h  +
call sub_100881A  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jnz loc_100CBF2  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CE10  +
push 8  +
jmp loc_100CE0A  +
mov esi [ebp+arg_4] +
and [ebp+var_90] 0 +
test esi esi +
jbe loc_100CC1D  +
push edi  +
call sub_1007E83  +
cmp [ebp+var_90] eax +
jnb loc_100CC14  +
mov [ebp+var_90] eax +
add edi 294h +
dec esi  +
jnz loc_100CC00  +
push [ebp+var_9C]  +
call sub_100AA4F  +
and [ebp+var_8C] 0 +
mov [ebp+var_A4] eax +
test eax eax +
jbe loc_100CE15  +
mov edi offset asc_1001454 +
push [ebp+var_8C]  +
push [ebp+var_9C]  +
call sub_100B066  +
mov [ebp+var_AC] eax +
test eax eax +
jz loc_100CDE4  +
and [ebp+var_94] 0 +
cmp [ebp+arg_4] 0 +
jbe loc_100CDC9  +
mov esi [ebp+var_A8] +
add esi 200h +
push ebx  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push offset dword_1001430  +
push ebx  +
call sub_10082C0  +
test dword ptr [esi+4] 1000h +
jnz loc_100CDAE  +
lea eax [esi-200h] +
push eax  +
push offset aS_6  +
push ebx  +
call sub_1007BCB  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1008145  +
mov eax [ebp+var_90] +
add esp 10h +
push 0  +
add eax 2 +
push eax  +
push ebx  +
call sub_10093E3  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push [ebp+lpMem]  +
mov ebx [esi] +
call sub_1007BCB  +
push edi  +
push [ebp+var_AC]  +
shr eax 1 +
push [ebp+var_94]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_100C44F  +
push edi  +
push [ebp+lpMem]  +
mov [esi] ebx +
mov ebx ds:wcstok +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_100CD9C  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push edi  +
push 0  +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_100CD9C  +
push [ebp+lpMem]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push offset asc_10016D4  +
lea eax [ebp+String] +
push eax  +
call sub_10082C0  +
mov eax [ebp+var_90] +
push 0  +
add eax 2 +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10093E3  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
lea eax [ebp+String] +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
jmp loc_100CD23  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
mov ebx [ebp+lpMem] +
inc [ebp+var_94]  +
mov eax [ebp+var_94] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100CC7E  +
mov eax [ebp+var_8C] +
inc eax  +
cmp eax [ebp+var_A4] +
jnb loc_100CDE4  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
inc [ebp+var_8C]  +
mov eax [ebp+var_8C] +
cmp eax [ebp+var_A4] +
jb loc_100CC42  +
jmp loc_100CE15  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CE10  +
push 57h  +
call ds:SetLastError  +
call sub_1007683  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1006E22  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
cmp [ebp+hConsoleOutput] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_100CFDF  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_100CFDF  +
push 1  +
mov edi 1000h +
push edi  +
push 0  +
push 16h  +
call sub_100881A  +
mov ebx eax +
mov [ebp+lpString] ebx +
test ebx ebx +
jnz loc_100CE7A  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CFF1  +
push 8  +
jmp loc_100CFEB  +
test [ebp+arg_C] edi +
jnz loc_100CEE2  +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jbe loc_100CED5  +
mov [ebp+arg_C] ecx +
test [esi+204h] edi +
jnz loc_100CECA  +
cmp eax 1 +
jnz loc_100CEA5  +
push offset asc_100185C  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push esi  +
push offset aS_7  +
push ebx  +
call sub_1007BCB  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1008145  +
add esp 10h +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
xor eax eax +
inc eax  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_100CE8B  +
push offset asc_1001454  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push [ebp+arg_10]  +
call sub_100AA4F  +
and [ebp+var_8] 0 +
mov [ebp+var_14] eax +
test eax eax +
jbe loc_100CFF6  +
mov ebx offset asc_100184C +
push [ebp+var_8]  +
push [ebp+arg_10]  +
call sub_100B066  +
xor ecx ecx +
mov [ebp+var_10] eax +
cmp eax ecx +
jz loc_100CFCE  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_100CFC1  +
mov esi [ebp+arg_8] +
add esi 200h +
push [ebp+lpString]  +
call sub_1007BCB  +
shr eax 1 +
push eax  +
push offset dword_1001430  +
push [ebp+lpString]  +
call sub_10082C0  +
test [esi+4] edi +
jnz loc_100CFAC  +
push [ebp+lpString]  +
mov edi [esi] +
call sub_1007BCB  +
push offset asc_100185C  +
push [ebp+var_10]  +
shr eax 1 +
push [ebp+arg_C]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_100C44F  +
mov [esi] edi +
xor edi edi +
inc edi  +
cmp [ebp+var_C] edi +
jnz loc_100CF87  +
push offset asc_100185C  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
mov [ebp+var_C] edi +
mov edi 1000h +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100CF2E  +
push offset asc_1001454  +
push [ebp+hConsoleOutput]  +
call sub_1008346  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jb loc_100CEFE  +
jmp loc_100CFF6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CFF1  +
push 57h  +
call ds:SetLastError  +
call sub_1007683  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hConsoleOutput] +
test esi esi +
jz loc_100D05D  +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_100D05D  +
mov ecx [ebp+arg_C] +
mov eax ecx +
and eax 0Fh +
dec eax  +
jz loc_100D047  +
dec eax  +
jz loc_100D037  +
dec eax  +
jnz loc_100D055  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100CE2B  +
jmp loc_100D055  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100C6E3  +
jmp loc_100D055  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100CB68  +
push esi  +
call ds:fflush  +
pop ecx  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D002  +
pop ebp  +
retn 10h  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-660h] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D4C0 +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5C0h] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D4EC +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A68h] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D518 +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ABCh] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D544 +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D59C +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D638 +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-840h] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-8] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D6C0 +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-126Ch] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D704 +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4A4h] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D748 +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D78C +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2798h] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D7B8 +
jmp loc_1006E44  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_1006E22  +
mov ecx [edx-8] +
xor ecx eax +
call sub_1006E22  +
mov eax offset dword_100D810 +
jmp loc_1006E44  +
***
retf   +
***
