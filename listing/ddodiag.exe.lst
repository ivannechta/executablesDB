mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1005050  +
cmp [esi] ax +
jz loc_100504C  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_1005042  +
test edx edx +
jnz loc_1005055  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_1005066  +
test eax eax +
jl loc_1005063  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_100507F  +
cmp edx [ebp+arg_4] +
jbe loc_1005084  +
mov eax 80070057h +
test eax eax +
jl loc_1005092  +
mov eax [ebp+arg_0] +
call sub_1005035  +
jmp loc_1005095  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10050D4  +
cmp [ebp+arg_4] eax +
jz loc_10050D0  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_10050D0  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10050B3  +
test esi esi +
jnz loc_10050DC  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10050EA  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1005107  +
xor eax eax +
jmp loc_1005126  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1005115  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [esi] +
test eax eax +
jz loc_1005121  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jz loc_1005147  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset dword_10011BC  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100518B  +
cmp edx 7FFFFFFFh +
jbe loc_1005190  +
mov eax 80070057h +
test eax eax +
jl loc_10051A6  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_100509F  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
call sub_100506C  +
test eax eax +
jl loc_10051E5  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
sub edx eax +
lea ecx [edi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_100509F  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetTempPathW +
push 0  +
push 0  +
call edi  +
mov esi eax +
add esi 0Ch +
lea eax [esi+esi] +
push eax  +
call ds:CoTaskMemAlloc  +
mov ebx [ebp+arg_8] +
mov [ebx] eax +
test eax eax +
jnz loc_1005226  +
mov [ebp+arg_8] 8007000Eh +
jmp loc_1005259  +
push eax  +
push esi  +
call edi  +
test eax eax +
jnz loc_1005249  +
call ds:GetLastError  +
test eax eax +
jle loc_1005242  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+arg_8] eax +
test eax eax +
jnz loc_1005259  +
push offset aDdodiag_xml  +
push esi  +
push dword ptr [ebx]  +
call sub_10051AF  +
mov [ebp+arg_8] eax +
xor edi edi +
inc edi  +
cmp [ebp+arg_0] edi +
jle loc_100531D  +
mov [ebp+var_4] 2 +
mov eax [ebp+arg_4] +
mov esi ds:_wcsicmp +
push offset aO  +
push dword ptr [eax+edi*4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005298  +
mov eax [ebp+arg_4] +
push offset aO_0  +
push dword ptr [eax+edi*4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005316  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jge loc_1005316  +
mov esi [ebp+arg_4] +
mov eax [esi+edi*4+4] +
push 2Dh  +
pop ecx  +
cmp cx [eax] +
jz loc_1005316  +
mov eax [ebx] +
inc edi  +
inc [ebp+var_4]  +
test eax eax +
jz loc_10052C3  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [ebx] 0 +
mov eax [esi+edi*4] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10052C9  +
sub eax ecx +
sar eax 1 +
lea esi [eax+1] +
lea eax [esi+esi] +
push eax  +
call ds:CoTaskMemAlloc  +
mov [ebx] eax +
test eax eax +
jnz loc_10052F1  +
mov [ebp+arg_8] 8007000Eh +
cmp [ebp+arg_8] 0 +
jnz loc_1005307  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+edi*4]  +
push esi  +
push eax  +
call sub_1005175  +
mov [ebp+arg_8] eax +
inc edi  +
inc [ebp+var_4]  +
cmp edi [ebp+arg_0] +
jl loc_100526C  +
jmp loc_100531D  +
mov [ebp+arg_8] 80070057h +
mov eax [ebp+arg_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push dword ptr [eax]  +
mov esi ecx +
call sub_1005130  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [ebp+10h] +
test ebx ebx +
jz loc_10053B8  +
and dword ptr [ebx] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1001234 +
xor eax eax +
cmps   +
jz loc_10053C1  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_1001224 +
xor eax eax +
cmps   +
jz loc_10053C1  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_1001214 +
xor eax eax +
cmps   +
jz loc_10053C1  +
mov dword ptr [ebp-4] 80004002h +
jmp loc_10053CC  +
mov dword ptr [ebp-4] 80070057h +
jmp loc_10053CE  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov [ebx] esi +
pop edi  +
pop esi  +
mov eax [ebp-4] +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push 0  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax+4]  +
call ds:ReadFile  +
test eax eax +
jz loc_10053FF  +
xor eax eax +
jmp loc_1005413  +
call ds:GetLastError  +
test eax eax +
jle loc_1005413  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push 0  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax+4]  +
call ds:WriteFile  +
test eax eax +
jz loc_1005440  +
xor eax eax +
jmp loc_1005454  +
call ds:GetLastError  +
test eax eax +
jle loc_1005454  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 10h  +
***
mov eax 80004001h +
retn 0Ch  +
***
mov eax 80004001h +
retn 4  +
***
mov eax 80004001h +
retn 18h  +
***
mov eax 80004001h +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
push esi  +
xor esi esi +
sub eax esi +
jz loc_10054B7  +
dec eax  +
jz loc_10054B2  +
dec eax  +
jz loc_10054AD  +
mov eax 80030001h +
jmp loc_10054EB  +
push 2  +
pop eax  +
jmp loc_10054B9  +
xor eax eax +
inc eax  +
jmp loc_10054B9  +
xor eax eax +
push eax  +
push dword ptr [ebp+18h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax+4]  +
call ds:SetFilePointerEx  +
test eax eax +
jnz loc_10054E9  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10054E7  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push esi  +
add eax 8 +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+4]  +
xor esi esi +
call ds:GetFileSizeEx  +
test eax eax +
jnz loc_100552A  +
call ds:GetLastError  +
test eax eax +
jle loc_1005528  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov dword ptr [esi] offset off_10011DC +
cmp eax 0FFFFFFFFh +
jz loc_1005554  +
push eax  +
call ds:CloseHandle  +
or dword ptr [esi+4] 0FFFFFFFFh +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1005536  +
test [ebp+arg_0] 1 +
jz loc_1005575  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+8] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_10055A8  +
test esi esi +
jz loc_10055A8  +
push 1  +
mov ecx esi +
call sub_100555B  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+hObject] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ds:GetCurrentProcess +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
push 2  +
push ebx  +
push ebx  +
lea eax [ebp+hObject] +
push eax  +
mov [ebp+var_4] ebx +
mov [edi] ebx +
call esi  +
push eax  +
push [ebp+hSourceHandle]  +
call esi  +
push eax  +
call ds:DuplicateHandle  +
test eax eax +
jnz loc_1005609  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1005602  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
cmp eax ebx +
jnz loc_1005639  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax ebx +
jz loc_100562A  +
mov ecx [ebp+hObject] +
mov dword ptr [eax] offset off_10011DC +
mov [eax+4] ecx +
mov dword ptr [eax+8] 1 +
jmp loc_100562C  +
xor eax eax +
mov [edi] eax +
cmp eax ebx +
jnz loc_1005648  +
mov [ebp+var_4] 8007000Eh +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1005648  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor esi esi +
push edi  +
lea edx [ebp+var_14] +
push edx  +
mov [ebp+var_14] esi +
mov [ebp+pv] esi +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx ds:CoTaskMemFree +
mov edi eax +
mov [ebp+var_10] esi +
jmp loc_1005765  +
mov eax [ebp+var_10] +
cmp eax [ebp+var_14] +
jnb loc_100576D  +
cmp [ebp+var_C] esi +
jz loc_10056A8  +
push esi  +
lea eax [ebp+var_C] +
push eax  +
call sub_10050F6  +
cmp [ebp+var_8] esi +
jz loc_10056B7  +
push esi  +
lea eax [ebp+var_8] +
push eax  +
call sub_10050F6  +
cmp [ebp+pv] esi +
jz loc_10056C4  +
push [ebp+pv]  +
call ebx  +
mov [ebp+pv] esi +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+var_10]  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi esi +
jnz loc_1005762  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi esi +
jnz loc_1005762  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push offset aDio  +
push esi  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov edi eax +
cmp edi esi +
jnz loc_1005762  +
push [ebp+pv]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push offset aInstanceid  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi esi +
jnz loc_1005762  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi esi +
jnz loc_1005762  +
push ecx  +
lea eax [ebp+var_C] +
mov ecx esp +
push eax  +
call sub_100532C  +
push ecx  +
lea eax [ebp+arg_0] +
mov ecx esp +
push eax  +
call sub_100532C  +
call sub_10063EB  +
mov edi eax +
cmp edi esi +
jnz loc_1005762  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov edi eax +
inc [ebp+var_10]  +
cmp edi esi +
jz loc_100568D  +
cmp [ebp+pv] esi +
jz loc_100577A  +
push [ebp+pv]  +
call ebx  +
mov [ebp+pv] esi +
mov eax [ebp+var_C] +
cmp eax esi +
jz loc_1005787  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_1005794  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
cmp eax esi +
jz loc_10057A1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_4] +
cmp eax esi +
jz loc_10057AE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
cmp [ebp+arg_4] edi +
jz loc_10058AD  +
cmp [ebp+lpFileName] edi +
jz loc_10058AD  +
push ebx  +
push esi  +
push edi  +
push 80h  +
push 2  +
push edi  +
push edi  +
push 40000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_1005819  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1005813  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi edi +
jnz loc_100588D  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
call sub_10055B5  +
mov esi eax +
cmp esi edi +
jnz loc_1005881  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_1001264  +
call CreateXmlWriter  +
mov esi eax +
cmp esi edi +
jnz loc_1005881  +
mov eax [ebp+var_4] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_1005881  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 1  +
push 1  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi edi +
jnz loc_1005881  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jnz loc_1005881  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
cmp ebx 0FFFFFFFFh +
jz loc_100588D  +
push ebx  +
call ds:CloseHandle  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_100589A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_10058A7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebx  +
jmp loc_10058B2  +
mov eax 80070057h +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+pv] edi +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
cmp ecx edi +
jz loc_1005A91  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_1005A8B  +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx ds:CoTaskMemFree +
mov esi eax +
mov [ebp+var_14] edi +
jmp loc_1005A31  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_18] +
jnb loc_1005A39  +
cmp [ebp+var_C] edi +
jz loc_1005923  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
call sub_10050F6  +
cmp [ebp+var_10] edi +
jz loc_1005932  +
push edi  +
lea eax [ebp+var_10] +
push eax  +
call sub_10050F6  +
cmp [ebp+var_8] edi +
jz loc_1005941  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
call sub_10050F6  +
cmp [ebp+pv] edi +
jz loc_100594E  +
push [ebp+pv]  +
call ebx  +
mov [ebp+pv] edi +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+var_14]  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi edi +
jnz loc_1005A2E  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi edi +
jnz loc_1005A2E  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edi  +
push offset aDfo  +
push edi  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_1005A2E  +
push [ebp+pv]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edi  +
push offset aInstanceid  +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_1005A2E  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi edi +
jnz loc_1005A2E  +
push ecx  +
lea eax [ebp+var_10] +
mov ecx esp +
push eax  +
call sub_100532C  +
push ecx  +
lea eax [ebp+arg_0] +
mov ecx esp +
push eax  +
call sub_100532C  +
call sub_10063EB  +
mov esi eax +
cmp esi edi +
jnz loc_1005A2E  +
lea eax [ebp+var_C] +
push eax  +
push offset dword_1004EB0  +
push [ebp+var_8]  +
call sub_1005153  +
mov esi eax +
cmp esi edi +
jnz loc_1005A2E  +
push ecx  +
lea eax [ebp+var_C] +
mov ecx esp +
push eax  +
call sub_100532C  +
push ecx  +
lea eax [ebp+arg_0] +
mov ecx esp +
push eax  +
call sub_100532C  +
call sub_1005657  +
mov esi eax +
cmp esi edi +
jnz loc_1005A2E  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
inc [ebp+var_14]  +
cmp esi edi +
jz loc_1005908  +
cmp [ebp+pv] edi +
jz loc_1005A46  +
push [ebp+pv]  +
call ebx  +
mov [ebp+pv] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1005A53  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1005A60  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1005A6D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1005A7A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_1005A87  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
jmp loc_1005AA3  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_1005A9E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+pv] edi +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
cmp ecx edi +
jz loc_1005C84  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_1005C7E  +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx ds:CoTaskMemFree +
mov esi eax +
mov [ebp+var_14] edi +
jmp loc_1005C24  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_18] +
jnb loc_1005C2C  +
cmp [ebp+var_C] edi +
jz loc_1005B16  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
call sub_10050F6  +
cmp [ebp+var_10] edi +
jz loc_1005B25  +
push edi  +
lea eax [ebp+var_10] +
push eax  +
call sub_10050F6  +
cmp [ebp+var_8] edi +
jz loc_1005B34  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
call sub_10050F6  +
cmp [ebp+pv] edi +
jz loc_1005B41  +
push [ebp+pv]  +
call ebx  +
mov [ebp+pv] edi +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+var_14]  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi edi +
jnz loc_1005C21  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi edi +
jnz loc_1005C21  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edi  +
push offset aDdo  +
push edi  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_1005C21  +
push [ebp+pv]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edi  +
push offset aInstanceid  +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_1005C21  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi edi +
jnz loc_1005C21  +
push ecx  +
lea eax [ebp+var_10] +
mov ecx esp +
push eax  +
call sub_100532C  +
push ecx  +
lea eax [ebp+arg_0] +
mov ecx esp +
push eax  +
call sub_100532C  +
call sub_10063EB  +
mov esi eax +
cmp esi edi +
jnz loc_1005C21  +
lea eax [ebp+var_C] +
push eax  +
push offset dword_1004EC0  +
push [ebp+var_8]  +
call sub_1005153  +
mov esi eax +
cmp esi edi +
jnz loc_1005C21  +
push ecx  +
lea eax [ebp+var_C] +
mov ecx esp +
push eax  +
call sub_100532C  +
push ecx  +
lea eax [ebp+arg_0] +
mov ecx esp +
push eax  +
call sub_100532C  +
call sub_10058BC  +
mov esi eax +
cmp esi edi +
jnz loc_1005C21  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
inc [ebp+var_14]  +
cmp esi edi +
jz loc_1005AFB  +
cmp [ebp+pv] edi +
jz loc_1005C39  +
push [ebp+pv]  +
call ebx  +
mov [ebp+pv] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1005C46  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1005C53  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1005C60  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1005C6D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_1005C7A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
jmp loc_1005C96  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_1005C91  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+lpFileName] +
push eax  +
push [ebp+arg_4]  +
xor esi esi +
push [ebp+arg_0]  +
xor ebx ebx +
mov [ebp+lpFileName] esi +
mov [ebp+ppv] esi +
mov [ebp+var_4] esi +
mov [ebp+var_C] esi +
mov [ebp+var_8] ebx +
call sub_10051F0  +
mov edi eax +
cmp edi esi +
jnz loc_1005DAD  +
push esi  +
push esi  +
call ds:CoInitializeEx  +
mov edi eax +
cmp edi esi +
jnz loc_1005DAD  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 17h  +
push esi  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi esi +
jnz loc_1005DAD  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push esi  +
push esi  +
push esi  +
push esi  +
push offset aProviderMicros  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi esi +
jnz loc_1005DAD  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp [ebp+var_4] esi +
jz loc_1005D4A  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_10050F6  +
cmp edi esi +
jnz loc_1005DAD  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+lpFileName]  +
call sub_10057BC  +
mov ebx [ebp+var_8] +
mov edi eax +
cmp edi esi +
jnz loc_1005DAD  +
mov eax [ebx] +
push esi  +
push offset aDdodiag  +
push esi  +
push ebx  +
call dword ptr [eax+6Ch]  +
mov edi eax +
cmp edi esi +
jnz loc_1005DAD  +
push ecx  +
lea eax [ebp+var_C] +
mov ecx esp +
push eax  +
call sub_100532C  +
push ecx  +
lea eax [ebp+var_8] +
mov ecx esp +
push eax  +
call sub_100532C  +
call sub_1005AAF  +
mov edi eax +
cmp edi esi +
jnz loc_1005DAD  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+44h]  +
mov edi eax +
cmp edi esi +
jnz loc_1005DAD  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+38h]  +
mov edi eax +
cmp [ebp+var_C] esi +
jz loc_1005DBC  +
push esi  +
lea eax [ebp+var_C] +
push eax  +
call sub_10050F6  +
cmp [ebp+var_4] esi +
jz loc_1005DCB  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_10050F6  +
cmp [ebp+ppv] esi +
jz loc_1005DDA  +
push esi  +
lea eax [ebp+ppv] +
push eax  +
call sub_10050F6  +
cmp ebx esi +
jz loc_1005DEB  +
push esi  +
lea eax [ebp+var_8] +
push eax  +
call sub_10050F6  +
mov ebx [ebp+var_8] +
cmp [ebp+lpFileName] esi +
jz loc_1005DF9  +
push [ebp+lpFileName]  +
call ds:CoTaskMemFree  +
call ds:CoUninitialize  +
cmp ebx esi +
jz loc_1005E09  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
mov eax [ebp+var_C] +
cmp eax esi +
jz loc_1005E16  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_1005E23  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_1005E30  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1005E52  +
cmp ecx 7FFFFFFFh +
jbe loc_1005E57  +
mov eax 80070057h +
test eax eax +
jl loc_1005E94  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1005E84  +
cmp eax esi +
ja loc_1005E84  +
jnz loc_1005E8F  +
jmp loc_1005E89  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_1008F18 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx ds:dword_1001BF8 +
push ebx  +
push esi  +
push edi  +
push 5  +
pop ecx  +
lea esi [ebp+arg_0] +
lea edi [ebp+var_18] +
movs   +
xor edi edi +
xor eax eax +
mov [ebp+var_20] edi +
test edx edx +
jbe loc_1005F08  +
mov [ebp+var_1C] offset unk_1008000 +
mov ecx [ebp+var_1C] +
mov ecx [ecx+10h] +
cmp ecx [ebp+var_8] +
jnz loc_1005EF0  +
mov esi [ebp+var_1C] +
push 4  +
pop ecx  +
lea edi [ebp+var_18] +
xor ebx ebx +
cmps   +
jz loc_1005EFB  +
mov edi [ebp+var_20] +
add [ebp+var_1C] 18h +
inc eax  +
cmp eax edx +
jb loc_1005ED3  +
jmp loc_1005F08  +
imul eax eax +
mov edi off_1008014[eax] +
test edi edi +
jnz loc_1005F5E  +
push [ebp+var_8]  +
movzx eax [ebp+var_9] +
push eax  +
movzx eax [ebp+var_A] +
push eax  +
movzx eax [ebp+var_B] +
push eax  +
movzx eax [ebp+var_C] +
push eax  +
movzx eax [ebp+var_D] +
push eax  +
movzx eax [ebp+var_E] +
push eax  +
movzx eax [ebp+var_F] +
push eax  +
movzx eax [ebp+var_10] +
push eax  +
movzx eax [ebp+var_12] +
push eax  +
movzx eax [ebp+var_14] +
push eax  +
push dword ptr [ebp+var_18]  +
mov esi offset word_1008F30 +
push offset a08x04x04x02x02  +
push 80h  +
push esi  +
call sub_1005E3C  +
add esp 3Ch +
test eax eax +
jnz loc_1005F5E  +
mov edi esi +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10068D5  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ds:dword_1001BFC +
mov dx [ebp+arg_0] +
push esi  +
xor esi esi +
xor ecx ecx +
test eax eax +
jbe loc_1005FA9  +
cmp ds:word_1001C00[ecx*8] dx +
jz loc_1005F9E  +
inc ecx  +
cmp ecx eax +
jb loc_1005F8D  +
jmp loc_1005FA9  +
mov esi ds:off_1001C04[ecx*8] +
test esi esi +
jnz loc_1005FCA  +
movzx eax dx +
push eax  +
push offset a0xX  +
push 20h  +
push offset word_1009030  +
call sub_1005E3C  +
add esp 10h +
test eax eax +
jnz loc_1005FCA  +
mov esi offset word_1008F30 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
mov eax dword_1008F18 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 5  +
pop ecx  +
lea esi [ebp+arg_4] +
lea edi [ebp+var_58] +
movs   +
lea esi [ebp+arg_18] +
lea edi [ebp+var_6C] +
movs   +
movs   +
xor eax eax +
xor ebx ebx +
push 3Eh  +
movs   +
mov [ebp+var_44] ax +
lea eax [ebp-42h] +
push ebx  +
push eax  +
movs   +
mov [ebp+pv] ebx +
call memset  +
add esp 0Ch +
cmp [ebp+arg_0] ebx +
jnz loc_1006029  +
mov eax 80070057h +
jmp loc_100637C  +
sub esp 14h +
push 5  +
pop ecx  +
mov edi esp +
lea esi [ebp+var_58] +
movs   +
call sub_1005E9B  +
push [ebp+var_6C]  +
mov edi eax +
call sub_1005F76  +
push ebx  +
push offset aProperty  +
mov [ebp+var_70] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
cmp esi ebx +
jnz loc_100636D  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edi  +
push ebx  +
push offset aKey  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jnz loc_100636D  +
push [ebp+var_70]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push offset aType  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jnz loc_100636D  +
mov eax [ebp+var_6C] +
and eax 1000h +
xor ecx ecx +
push 20h  +
mov edi offset aD +
pop ebx  +
cmp cx ax +
jz loc_10060E2  +
push dword ptr [ebp+rclsid]  +
lea eax [ebp+var_44] +
push edi  +
push ebx  +
push eax  +
call sub_1005E3C  +
mov esi eax +
add esp 10h +
test esi esi +
jnz loc_100636B  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_44] +
push edx  +
push esi  +
push offset aVectorcount  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jnz loc_100636B  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push offset aValue  +
push esi  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
test esi esi +
jnz loc_100636B  +
movzx eax word ptr [ebp+var_6C] +
cmp eax 1Fh +
jg loc_10061DA  +
jz loc_10061D2  +
dec eax  +
dec eax  +
cmp eax 15h +
ja loc_100634D  +
jmp ds:off_100638E[eax*4]  +
movsx eax [ebp+rclsid] +
push eax  +
push edi  +
lea eax [ebp+var_44] +
push ebx  +
push eax  +
call sub_1005E3C  +
add esp 10h +
mov esi eax +
test esi esi +
jnz loc_100636B  +
lea edx [ebp+var_44] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov esi eax +
jmp loc_100634D  +
movzx eax [ebp+rclsid] +
jmp loc_100612D  +
movsx eax word ptr [ebp+rclsid] +
jmp loc_100612D  +
movzx eax word ptr [ebp+rclsid] +
jmp loc_100612D  +
push dword ptr [ebp+rclsid]  +
jmp loc_100612E  +
push dword ptr [ebp+rclsid]  +
push offset aU  +
jmp loc_100612F  +
push dword ptr [ebp-60h]  +
push dword ptr [ebp+rclsid]  +
push offset aI64d  +
lea eax [ebp+var_44] +
push ebx  +
push eax  +
call sub_1005E3C  +
add esp 14h +
jmp loc_100613C  +
push dword ptr [ebp-60h]  +
push dword ptr [ebp+rclsid]  +
push offset aI64u  +
jmp loc_1006186  +
fld  dword ptr [ebp+rclsid] +
push ecx  +
push ecx  +
fstp  [esp+0E0h+var_E0] +
push offset aF  +
jmp loc_1006186  +
fld  qword ptr [ebp+rclsid] +
jmp loc_10061A5  +
cmp word ptr [ebp+rclsid] 0FFFFh +
mov eax offset aTrue +
jz loc_10061C7  +
mov eax offset aFalse +
push eax  +
push offset aS  +
jmp loc_100612F  +
push dword ptr [ebp+rclsid]  +
jmp loc_100614A  +
sub eax 48h +
jz loc_1006319  +
sub eax 0FC0h +
jz loc_10062CD  +
sub eax 17h +
jz loc_100627A  +
sub eax 29h +
jnz loc_100634D  +
mov edi [ebp-60h] +
xor ebx ebx +
cmp ebx dword ptr [ebp+rclsid] +
jnb loc_100634D  +
lea eax [ebp+pv] +
push eax  +
push edi  +
call ds:StringFromCLSID  +
mov esi eax +
test esi esi +
jnz loc_100622D  +
mov eax [ebp+arg_0] +
push [ebp+pv]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov esi eax +
cmp [ebp+pv] 0 +
jz loc_1006240  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
and [ebp+pv] 0 +
test esi esi +
jnz loc_100626D  +
lea eax [ebx+1] +
cmp eax dword ptr [ebp+rclsid] +
jnb loc_100626D  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
test esi esi +
jnz loc_100626D  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push offset aValue  +
push esi  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
inc ebx  +
add edi 10h +
test esi esi +
jz loc_1006205  +
jmp loc_100634D  +
xor edi edi +
cmp edi dword ptr [ebp+rclsid] +
jnb loc_100634D  +
mov edx [ebp-60h] +
mov eax [ebp+arg_0] +
push dword ptr [edx+edi*4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov esi eax +
test esi esi +
jnz loc_10062C3  +
lea eax [edi+1] +
cmp eax dword ptr [ebp+rclsid] +
jnb loc_10062C3  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
test esi esi +
jnz loc_10062C3  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push offset aValue  +
push esi  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
inc edi  +
test esi esi +
jz loc_100627C  +
jmp loc_100634D  +
xor edi edi +
cmp edi dword ptr [ebp+rclsid] +
jnb loc_100634D  +
mov edx [ebp-60h] +
mov eax [ebp+arg_0] +
push dword ptr [edx+edi*4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov esi eax +
test esi esi +
jnz loc_1006312  +
lea eax [edi+1] +
cmp eax dword ptr [ebp+rclsid] +
jnb loc_1006312  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
test esi esi +
jnz loc_1006312  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push offset aValue  +
push esi  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
inc edi  +
test esi esi +
jz loc_10062CF  +
jmp loc_100634D  +
lea eax [ebp+pv] +
push eax  +
push dword ptr [ebp+rclsid]  +
call ds:StringFromCLSID  +
mov esi eax +
test esi esi +
jnz loc_100633A  +
mov eax [ebp+arg_0] +
push [ebp+pv]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov esi eax +
cmp [ebp+pv] 0 +
jz loc_100634D  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
and [ebp+pv] 0 +
test esi esi +
jnz loc_100636B  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
test esi esi +
jnz loc_100636B  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
xor ebx ebx +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_100637A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10068D5  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_1008F18 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor eax eax +
push esi  +
push edi  +
xor ebx ebx +
mov [ebp+var_58] ebx +
lea edi [ebp+var_54] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+pvar.vt] ax +
lea edi [ebp+pvar.wReserved1] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
push 3Eh  +
mov [ebp+var_44] ax +
lea eax [ebp-42h] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_5C] ebx +
call memset  +
mov eax [ebp+arg_0] +
add esp 0Ch +
cmp eax ebx +
jz loc_10065F2  +
mov ecx [eax] +
cmp [ebp+arg_4] ebx +
jz loc_10065EE  +
push ebx  +
push offset aPropertystore  +
push ebx  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
cmp esi ebx +
jnz loc_10064A0  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_5C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jnz loc_10064A0  +
push dword ptr [ebp+var_5C]  +
lea eax [ebp+var_44] +
push offset aD  +
push 20h  +
push eax  +
call sub_1005E3C  +
mov esi eax +
add esp 10h +
cmp esi ebx +
jnz loc_10064A0  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_44] +
push edx  +
push ebx  +
push offset aPropertycount  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
mov [ebp+var_60] ebx +
cmp dword ptr [ebp+var_5C] ebx +
jbe loc_100658B  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_58] +
push edx  +
push [ebp+var_60]  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_1006570  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+pvar] +
push edx  +
lea edx [ebp+var_58] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax ebx +
jz loc_10065C2  +
push eax  +
push offset a0xX  +
lea eax [ebp+var_44] +
push 20h  +
push eax  +
call sub_1005E3C  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
add esp 10h +
push ebx  +
push offset aProperty  +
push ebx  +
push eax  +
call dword ptr [ecx+6Ch]  +
cmp eax ebx +
jnz loc_1006570  +
mov eax [ebp+arg_0] +
mov ebx [eax] +
sub esp 14h +
push 5  +
pop ecx  +
mov edi esp +
lea esi [ebp+var_58] +
mov [ebp+var_64] eax +
add ebx 1Ch +
movs   +
call sub_1005E9B  +
push eax  +
push 0  +
push offset aKey  +
push 0  +
push [ebp+var_64]  +
call dword ptr [ebx]  +
test eax eax +
jnz loc_100656E  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 0  +
push offset aValue  +
push 0  +
push eax  +
call dword ptr [ecx+6Ch]  +
test eax eax +
jnz loc_100656E  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_44] +
push edx  +
push eax  +
call dword ptr [ecx+70h]  +
test eax eax +
jnz loc_100656E  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
xor ebx ebx +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantClear  +
xor esi esi +
inc [ebp+var_60]  +
mov eax [ebp+var_60] +
cmp eax dword ptr [ebp+var_5C] +
jb loc_10064AC  +
cmp esi ebx +
jnz loc_100659A  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantClear  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_10065B1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_4] +
cmp eax ebx +
jz loc_10065BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
jmp loc_1006604  +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvar] +
movs   +
movs   +
movs   +
sub esp 14h +
push 5  +
pop ecx  +
movs   +
mov edi esp +
lea esi [ebp+var_58] +
movs   +
push ecx  +
lea eax [ebp+arg_0] +
mov ecx esp +
push eax  +
call sub_100532C  +
call sub_1005FD6  +
jmp loc_1006570  +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_4] +
cmp eax ebx +
jz loc_10065FF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax 80070057h +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10068D5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1006636  +
test eax eax +
jnz loc_100663B  +
mov ecx [esi] +
test ecx ecx +
jz loc_1006633  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1006627  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1009094 +
push offset dword_1009084  +
push dword_1009090  +
mov dword_1009084 eax +
push offset dword_1009074  +
push offset dword_1009078  +
push offset dword_1009070  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1009080 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10066C3  +
cmp eax esi +
jnz loc_10066B6  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_10066C6  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100669D  +
xor esi esi +
inc esi  +
mov eax dword_10093C4 +
cmp eax esi +
jnz loc_10066D9  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1006714  +
mov eax dword_10093C4 +
test eax eax +
jnz loc_100670E  +
mov dword_10093C4 esi +
push offset dword_10010F8  +
push offset dword_10010EC  +
call sub_100661A  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1006714  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10067DE  +
mov dword_100908C esi +
mov eax dword_10093C4 +
cmp eax esi +
jnz loc_1006738  +
push offset dword_10010E8  +
push offset dword_10010DC  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10093C4 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1006745  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10093CC ebx +
jz loc_1006766  +
push offset dword_10093CC  +
call sub_10069F9  +
pop ecx  +
test eax eax +
jz loc_1006766  +
push ebx  +
push 2  +
push ebx  +
call dword_10093CC  +
push dword_1009074  +
push dword_1009078  +
push dword_1009070  +
call sub_1005CA2  +
add esp 0Ch +
mov dword_1009088 eax +
cmp dword_100907C ebx +
jnz loc_10067C4  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1009088 eax +
xor ebx ebx +
cmp dword_100907C ebx +
jnz loc_10067C4  +
push eax  +
call ds:_exit  +
cmp dword_100908C ebx +
jnz loc_10067D2  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1009088 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10067FB  +
xor eax eax +
jmp loc_1006848  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10067F7  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1006835  +
cmp ecx 20Bh +
jnz loc_10067F7  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10067F7  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1006843  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10067F7  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100907C eax +
call sub_1006B92  +
push eax  +
call ds:__set_app_type  +
or dword_10093BC 0FFFFFFFFh +
or dword_10093C0 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100909C +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1009098 +
mov [eax] ecx +
call sub_1006B24  +
cmp dword_1008F28 0 +
jnz loc_10068A1  +
push offset sub_1006B24  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1006B0C  +
xor eax eax +
retn   +
***
call sub_1006BD1  +
jmp sub_100667B  +
***
cmp ecx dword_1008F18 +
jnz loc_10068E0  +
retn 0  +
jmp loc_1006C67  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100693E  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100693E  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1006938  +
cmp eax 19930521h +
jz loc_1006938  +
cmp eax 19930522h +
jz loc_1006938  +
cmp eax 1994000h +
jnz loc_100693E  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_1006900+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1006986  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1006982  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10069ED  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10069E5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10069EF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10069D5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1006970  +
pop ecx  +
test eax eax +
jz loc_1006A56  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10069B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1006A56  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1006A5F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10068D5  +
push offset dword_1008F18  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1006B85  +
cmp ecx 0FFFFFFFFh +
jz loc_1006B85  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1006B7E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1006B7E  +
cmp edx 10000000h +
jnb loc_1006B7E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1006B7E  +
jmp loc_1006B79  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1006BC7  +
push eax  +
call sub_1006B2C  +
test eax eax +
jz loc_1006BC7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1006BBC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1006BC7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1008F18 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1006C03  +
test eax ebx +
jz loc_1006C03  +
not eax  +
mov dword_1008F1C eax +
jmp loc_1006C5E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1006C4A  +
test dword_1008F18 ebx +
jnz loc_1006C4F  +
mov esi 0BB40E64Fh +
mov dword_1008F18 esi +
not esi  +
mov dword_1008F1C esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10091A0 eax +
mov dword_100919C ecx +
mov dword_1009198 edx +
mov dword_1009194 ebx +
mov dword_1009190 esi +
mov dword_100918C edi +
mov word_10091B8 ss +
mov word_10091AC cs +
mov word_1009188 ds +
mov word_1009184 es +
mov word_1009180 fs +
mov word_100917C gs +
pushf   +
pop dword_10091B0  +
mov eax [ebp+0] +
mov dword_10091A4 eax +
mov eax [ebp+4] +
mov dword_10091A8 eax +
lea eax [ebp+8] +
mov dword_10091B4 eax +
mov eax [ebp-320h] +
mov dword_10090F0 10001h +
mov eax dword_10091A8 +
mov dword_10090AC eax +
mov dword_10090A0 0C0000409h +
mov dword_10090A4 1 +
mov eax dword_1008F18 +
mov [ebp-328h] eax +
mov eax dword_1008F1C +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
push 5  +
pop eax  +
mov ecx eax +
mov esi (offset dword_1004EC0+30h) +
mov edi offset unk_1008000 +
movs   +
mov ecx eax +
mov esi (offset dword_1004EC0+44h) +
mov edi offset unk_1008018 +
movs   +
mov ecx eax +
mov esi (offset dword_1004EC0+58h) +
mov edi offset unk_1008030 +
movs   +
mov ecx eax +
mov esi (offset dword_1004EC0+6Ch) +
mov edi offset unk_1008048 +
movs   +
mov ecx eax +
mov esi (offset dword_1004EC0+80h) +
mov edi offset unk_1008060 +
movs   +
mov ecx eax +
mov esi (offset dword_1004EC0+94h) +
mov edi offset unk_1008078 +
movs   +
mov ecx eax +
mov esi (offset dword_1004EC0+0A8h) +
mov edi offset unk_1008090 +
movs   +
mov ecx eax +
mov esi (offset dword_1004EC0+0BCh) +
mov edi offset unk_10080A8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004EC0+0D0h) +
mov edi offset unk_10080C0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+1CCh) +
mov edi offset unk_10080D8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+244h) +
mov edi offset unk_10080F0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+7A8h) +
mov edi offset unk_1008108 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+168h) +
mov edi offset unk_1008120 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+140h) +
mov edi offset unk_1008138 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+104h) +
mov edi offset unk_1008150 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+1B8h) +
mov edi offset unk_1008168 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+64h) +
mov edi offset unk_1008180 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+78h) +
mov edi offset unk_1008198 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+3Ch) +
mov edi offset unk_10081B0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+0A0h) +
mov edi offset unk_10081C8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+2BCh) +
mov edi offset unk_10081E0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+14h) +
mov edi offset unk_10081F8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+258h) +
mov edi offset unk_1008210 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+8Ch) +
mov edi offset unk_1008228 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+2E4h) +
mov edi offset unk_1008240 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+30Ch) +
mov edi offset unk_1008258 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+320h) +
mov edi offset unk_1008270 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+334h) +
mov edi offset unk_1008288 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+348h) +
mov edi offset unk_10082A0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+384h) +
mov edi offset unk_10082B8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+370h) +
mov edi offset unk_10082D0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+398h) +
mov edi offset unk_10082E8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+2F8h) +
mov edi offset unk_1008300 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+17Ch) +
mov edi offset unk_1008318 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+0C8h) +
mov edi offset unk_1008330 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+28h) +
mov edi offset unk_1008348 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+21Ch) +
mov edi offset unk_1008360 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+2A8h) +
mov edi offset unk_1008378 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+7D0h) +
mov edi offset unk_1008390 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+154h) +
mov edi offset unk_10083A8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+0DCh) +
mov edi offset unk_10083C0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+230h) +
mov edi offset unk_10083D8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+12Ch) +
mov edi offset unk_10083F0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+0B4h) +
mov edi offset unk_1008408 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+35Ch) +
mov edi offset unk_1008420 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+4B0h) +
mov edi offset unk_1008438 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+2D0h) +
mov edi offset unk_1008450 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+3ACh) +
mov edi offset unk_1008468 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+49Ch) +
mov edi offset unk_1008480 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+280h) +
mov edi offset unk_1008498 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+0F0h) +
mov edi offset unk_10084B0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+1E0h) +
mov edi offset unk_10084C8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+26Ch) +
mov edi offset unk_10084E0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+1F4h) +
mov edi offset unk_10084F8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+208h) +
mov edi offset unk_1008510 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+50h) +
mov edi offset unk_1008528 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+294h) +
mov edi offset unk_1008540 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+190h) +
mov edi offset unk_1008558 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+1A4h) +
mov edi offset unk_1008570 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+118h) +
mov edi offset unk_1008588 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+3C0h) +
mov edi offset unk_10085A0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+4D8h) +
mov edi offset unk_10085B8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+668h) +
mov edi offset unk_10085D0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+640h) +
mov edi offset unk_10085E8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+730h) +
mov edi offset unk_1008600 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+67Ch) +
mov edi offset unk_1008618 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+690h) +
mov edi offset unk_1008630 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+4ECh) +
mov edi offset unk_1008648 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+71Ch) +
mov edi offset unk_1008660 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+758h) +
mov edi offset unk_1008678 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+550h) +
mov edi offset unk_1008690 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+514h) +
mov edi offset unk_10086A8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+528h) +
mov edi offset unk_10086C0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+6E0h) +
mov edi offset unk_10086D8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+654h) +
mov edi offset unk_10086F0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+500h) +
mov edi offset unk_1008708 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+5B4h) +
mov edi offset unk_1008720 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+5DCh) +
mov edi offset unk_1008738 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+6CCh) +
mov edi offset unk_1008750 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+604h) +
mov edi offset unk_1008768 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+6A4h) +
mov edi offset unk_1008780 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+53Ch) +
mov edi offset unk_1008798 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+6B8h) +
mov edi offset unk_10087B0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+5A0h) +
mov edi offset unk_10087C8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+58Ch) +
mov edi offset unk_10087E0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+578h) +
mov edi offset unk_10087F8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+62Ch) +
mov edi offset unk_1008810 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+618h) +
mov edi offset unk_1008828 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+76Ch) +
mov edi offset unk_1008840 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+6F4h) +
mov edi offset unk_1008858 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+5F0h) +
mov edi offset unk_1008870 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+5C8h) +
mov edi offset unk_1008888 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+780h) +
mov edi offset unk_10088A0 +
movs   +
mov ebx (offset dword_1004334+794h) +
mov ecx eax +
mov esi ebx +
mov edi offset unk_10088B8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+744h) +
mov edi offset unk_10088D0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+708h) +
mov edi offset unk_10088E8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+564h) +
mov edi offset unk_1008900 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+474h) +
mov edi offset unk_1008918 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+4C4h) +
mov edi offset unk_1008930 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+460h) +
mov edi offset unk_1008948 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+44Ch) +
mov edi offset unk_1008960 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+438h) +
mov edi offset unk_1008978 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+3FCh) +
mov edi offset unk_1008990 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+410h) +
mov edi offset unk_10089A8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+424h) +
mov edi offset unk_10089C0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+3D4h) +
mov edi offset unk_10089D8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+3E8h) +
mov edi offset unk_10089F0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+488h) +
mov edi offset unk_1008A08 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+264h) +
mov edi offset unk_1008A20 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+278h) +
mov edi offset unk_1008A38 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+28Ch) +
mov edi offset unk_1008A50 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+2A0h) +
mov edi offset unk_1008A68 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+2B4h) +
mov edi offset unk_1008A80 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+2C8h) +
mov edi offset unk_1008A98 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+2DCh) +
mov edi offset unk_1008AB0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+2F0h) +
mov edi offset unk_1008AC8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+304h) +
mov edi offset unk_1008AE0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+318h) +
mov edi offset unk_1008AF8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+32Ch) +
mov edi offset unk_1008B10 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+340h) +
mov edi offset unk_1008B28 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+354h) +
mov edi offset unk_1008B40 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+368h) +
mov edi offset unk_1008B58 +
movs   +
mov edx offset dword_1004334 +
mov ecx eax +
mov esi edx +
mov edi offset unk_1008B70 +
movs   +
mov ecx eax +
mov esi edx +
mov edi offset unk_1008B88 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+228h) +
mov edi offset unk_1008BA0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+23Ch) +
mov edi offset unk_1008BB8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+174h) +
mov edi offset unk_1008BD0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+188h) +
mov edi offset unk_1008BE8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+14Ch) +
mov edi offset unk_1008C00 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+758h) +
mov edi offset unk_1008C18 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+84h) +
mov edi offset unk_1008C30 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+0E8h) +
mov edi offset unk_1008C48 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+214h) +
mov edi offset unk_1008C60 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+76Ch) +
mov edi offset unk_1008C78 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+0FCh) +
mov edi offset unk_1008C90 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+0D4h) +
mov edi offset unk_1008CA8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+780h) +
mov edi offset unk_1008CC0 +
movs   +
mov ecx eax +
mov esi ebx +
mov edi offset unk_1008CD8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+110h) +
mov edi offset unk_1008CF0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+1B0h) +
mov edi offset unk_1008D08 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+1C4h) +
mov edi offset unk_1008D20 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+19Ch) +
mov edi offset unk_1008D38 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+138h) +
mov edi offset unk_1008D50 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+250h) +
mov edi offset unk_1008D68 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+0ACh) +
mov edi offset unk_1008D80 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+160h) +
mov edi offset unk_1008D98 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+1D8h) +
mov edi offset unk_1008DB0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+1ECh) +
mov edi offset unk_1008DC8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+200h) +
mov edi offset unk_1008DE0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+98h) +
mov edi offset unk_1008DF8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+124h) +
mov edi offset unk_1008E10 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+0C0h) +
mov edi offset unk_1008E28 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+7BCh) +
mov edi offset unk_1008E40 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+7E4h) +
mov edi offset unk_1008E58 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+34h) +
mov edi offset unk_1008E70 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+5Ch) +
mov edi offset unk_1008E88 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+48h) +
mov edi offset unk_1008EA0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+20h) +
mov edi offset unk_1008EB8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+0Ch) +
mov edi offset unk_1008ED0 +
movs   +
mov ecx eax +
mov esi (offset dword_1004334+7F8h) +
mov edi offset unk_1008EE8 +
movs   +
mov ecx eax +
mov esi (offset dword_1004B34+70h) +
mov edi offset unk_1008F00 +
movs   +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
