mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ebx ebx +
cmp eax ebx +
jnz loc_1008BDA  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax eax +
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_1013000 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jz loc_1009D05  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
cmp eax 30000h +
jz loc_1001427  +
cmp eax 40000h +
jz loc_1001427  +
cmp eax 50000h +
jz loc_1001427  +
cmp eax 60000h +
jnz loc_1001430  +
jmp loc_1001427  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1001430  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_1001434  +
jz loc_1001427  +
cmp eax 20000h +
jnz loc_10013E3  +
add edx 0Ch +
push edx  +
call sub_10014CF  +
pop ebp  +
retn 4  +
cmp eax 80000h +
jnz loc_1006669  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_1001454  +
and dword ptr [esi] 0 +
pop esi  +
jmp loc_1001430  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_10018DB  +
test eax eax +
jz loc_1001475  +
push ecx  +
call sub_100147F  +
push esi  +
call sub_10014CF  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10018DB  +
test eax eax +
jz loc_10014C5  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_10014B9  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_1001406  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10014CF  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_100149D  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1009E13  +
cmp dword ptr [esi] 0 +
jz loc_1001523  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_1001528  +
push dword ptr [esi]  +
call sub_10018FC  +
cmp eax 0FFFFFFFFh +
jz loc_1009E2C  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_100151E  +
xor eax eax +
jmp loc_100151D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1001565  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1001565  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100156E  +
pop ebp  +
retn 14h  +
xor eax eax +
jmp loc_1001561  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
mov esi eax +
cmp esi edi +
jz loc_100A3A6  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_100159E  +
cmp eax edi +
jnz loc_100160E  +
cmp [ebp+arg_C] edi +
jnz loc_10015AF  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_10015E9  +
lea edi [eax+eax] +
push edi  +
call sub_1001617  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100160E  +
mov [esi+4] ebx +
mov [esi+8] edi +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1001975  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_10015D1  +
lea edi [esi+0Ch] +
push edi  +
call sub_10014CF  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1001617  +
mov [edi] eax +
test eax eax +
jz loc_100160E  +
mov [esi+8] ebx +
jmp loc_10015D1  +
xor eax eax +
jmp loc_10015E2  +
***
call sub_1001372  +
cmp dword ptr [ebp+8] 0 +
jbe loc_1009D51  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1001659  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+8]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-20h] eax +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_100167C  +
retn 4  +
xor eax eax +
jmp loc_1001651  +
***
mov ecx [ebp-10h] +
call sub_1001372  +
xor ebx ebx +
mov [ebp-4] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp-1Ch] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jnz loc_1009B62  +
xor esi esi +
inc esi  +
mov eax dword_101302C +
cmp eax esi +
jz loc_1009B81  +
mov eax dword_101302C +
test eax eax +
jnz loc_100176E  +
mov dword_101302C esi +
push offset dword_1001790  +
push offset dword_1001784  +
call sub_100419E  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1009B8E  +
mov eax dword_101302C +
cmp eax esi +
jnz loc_1001723  +
push offset dword_1001780  +
push offset dword_1001778  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_101302C 2 +
cmp [ebp-1Ch] ebx +
jnz loc_1001730  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1013484 ebx +
jnz loc_1009B9C  +
push dword_1013038  +
push dword_101303C  +
push dword_1013034  +
call sub_10017B9  +
add esp 0Ch +
mov dword_1013014 eax +
cmp dword_1013008 ebx +
jnz loc_1009BEE  +
push eax  +
call ds:exit  +
mov dword_10134C8 esi +
jmp loc_10016FF  +
***
call sub_100133D  +
lea ecx [ebp-0C0h] +
call sub_1003515  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [ebp-0C0h] +
mov [ebp-10h] edi +
call sub_1005368  +
test eax eax +
jz loc_1007E46  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-0C0h] +
push dword ptr [ebp+8]  +
call sub_1004973  +
xor esi esi +
inc esi  +
test eax eax +
jz loc_1001885  +
lea ecx [ebp-0C0h] +
cmp [ebp-18h] esi +
jz loc_1007EBD  +
call sub_1004E2A  +
test eax eax +
jz loc_1001885  +
lea ecx [ebp-0C0h] +
call sub_100360C  +
test eax eax +
jz loc_1007EC6  +
lea ecx [ebp-0C0h] +
call sub_1002B81  +
cmp eax edi +
jz loc_1001885  +
lea ecx [ebp-0C0h] +
call sub_10028E0  +
cmp eax edi +
jz loc_1001885  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-0C0h] +
call sub_1006418  +
cmp eax edi +
jz loc_1007ED0  +
call sub_10066FC  +
mov esi [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0C0h] +
call sub_10064DB  +
mov eax esi +
call __EH_epilog3  +
retn   +
call sub_100CFB1  +
jmp loc_1007E8D  +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_1013018 edi +
jnz loc_1005D22  +
push dword_101301C  +
call sub_10018DB  +
test eax eax +
jz loc_1009C6F  +
mov eax edi +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10018F3  +
cmp dword ptr [eax] 9 +
jnz loc_10018F3  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_10018EF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jz loc_1009DBF  +
push [ebp+lpMem]  +
call sub_100193B  +
test eax eax +
jz loc_1001931  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1001931  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
or eax 0FFFFFFFFh +
jmp loc_100192D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jz loc_1009D32  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_100196C  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jz loc_1009D44  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_1001968  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10019A9  +
cmp [ebp+arg_4] 0 +
jz loc_10019A9  +
cmp [ebp+arg_8] 0 +
jle loc_10019A9  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10019B2  +
test eax eax +
jl loc_1009ED0  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_10019A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10019E2  +
cmp edx 7FFFFFFFh +
ja loc_10019E2  +
test eax eax +
jl loc_10019DE  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10019EE  +
pop ebp  +
retn 0Ch  +
mov eax 80070057h +
jmp loc_10019C8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1001A3A  +
cmp [ebp+arg_4] eax +
jz loc_1001A1F  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1001A1F  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1001A02  +
test esi esi +
jz loc_1001A3A  +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_1009DE1  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
jmp loc_1001A23  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1001A5E  +
cmp [ebp+arg_8] 0 +
jz loc_1003ECB  +
call sub_10018AD  +
test eax eax +
jz loc_1003ECB  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_101301C  +
call sub_1001C47  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
jbe loc_1003E95  +
push ebx  +
push esi  +
push dword_101301C  +
call sub_1001BEE  +
mov edi offset aBuffer +
test eax eax +
jz loc_1005DB8  +
push ebx  +
push esi  +
push dword_101301C  +
call sub_1001B38  +
mov esi eax +
test esi esi +
jz loc_1003EDE  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1003EDE  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1003822  +
mov edi [ebp+arg_8] +
mov eax [esi+8] +
cmp edi eax +
ja loc_1003EE5  +
cmp edi 100h +
ja loc_1003ED2  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_1003EDE  +
test ebx ebx +
jnz loc_1003EBC  +
cmp [ebp+arg_C] 1 +
jnz loc_1001B1E  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1001B66  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1001B66  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1001B6F  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1001B62  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_10038BF  +
mov ecx [eax+4] +
cmp ecx 10000h +
jnz loc_10038B3  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10018DB  +
test eax eax +
jz loc_1006662  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_1006662  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_1001BD9  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_1001BD1  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_100665B  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1001C1C  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1001C1C  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1001C25  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1001C18  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1001C3E  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1001C72  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1001C72  +
push dword ptr [eax+0Ch]  +
call sub_1001C7B  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_1001C6E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10018DB  +
test eax eax +
jz loc_1001C90  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push 0  +
call sub_1001CB1  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_1013020  +
mov eax dword_1013020 +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_1001CE0  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+hMem] ebx +
cmp [ebp+dwMessageId] ebx +
jz loc_100A05F  +
call sub_10018AD  +
test eax eax +
jz loc_100A071  +
push esi  +
push 1  +
push dword_101301C  +
call sub_1001C47  +
mov esi eax +
cmp esi [ebp+arg_8] +
jbe loc_1003832  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_1001A49  +
mov edi eax +
cmp edi ebx +
jz loc_100A0C8  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jz loc_100A097  +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1001D21  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_101301C  +
call sub_1001531  +
test eax eax +
jz loc_100A0C8  +
cmp [ebp+hMem] ebx +
jnz loc_100A0E4  +
push [ebp+arg_8]  +
push 1  +
push dword_101301C  +
call sub_1001D94  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1001DC2  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1001DC2  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1001DCB  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1001DBE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_100797E  +
cmp dword ptr [eax+4] 20000h +
jnz loc_100797E  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
cmp [esi] edi +
jz loc_10085E6  +
mov [ebp-30h] ebx +
mov [ebp-40h] ebx +
mov eax [esi+48h] +
mov ecx [eax] +
lea edx [ebp-74h] +
push edx  +
lea edx [ebp-98h] +
push edx  +
push 5  +
push 3E8h  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-54h] eax +
xor edi edi +
inc edi  +
cmp eax edi +
jnz loc_1008658  +
mov [ebp-6Ch] edi +
mov [ebp-4Ch] ebx +
mov [ebp-5Ch] ebx +
jmp loc_10067CB  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jnz loc_1007DB2  +
pop esi  +
retn   +
***
cmp ecx dword_1013000 +
jnz loc_100CE49  +
retn   +
***
mov eax eax +
push eax  +
push large dword ptr fs:0  +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1013000 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpString] +
test esi esi +
jz loc_1009DEF  +
push 0  +
push esi  +
call sub_10013BC  +
test eax eax +
jz loc_1001F01  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_1001F01  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_1003817  +
call ds:StrChrIW  +
test eax eax +
jnz loc_100380E  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_10018DB  +
test eax eax +
jz loc_100A2BE  +
and [ebp+arg_0] 0 +
cmp dword ptr [ebx+4] 0 +
push esi  +
push edi  +
mov edi [ebx+8] +
jbe loc_1001FB2  +
mov esi [ebp+arg_C] +
cmp dword ptr [edi+4] 80000h +
jnz loc_1001FA4  +
push 0  +
push [ebp+arg_4]  +
push dword ptr [edi+0Ch]  +
call sub_1001BA4  +
test eax eax +
jz loc_1001FA4  +
mov ecx [ebp+arg_8] +
cmp [eax+4] ecx +
jnz loc_1001FA4  +
mov edx 70000h +
cmp ecx edx +
ja loc_1002280  +
jz loc_100A2E0  +
cmp ecx 20000h +
jz loc_1003862  +
cmp ecx 30000h +
jz loc_1001F97  +
cmp ecx 40000h +
jnz loc_100A2C6  +
mov eax [eax+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_100226C  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
mov edi [edi+10h] +
cmp eax [ebx+4] +
jb loc_1001F42  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_10018DB  +
test eax eax +
jz loc_100A39E  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_1001FF7  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_1002097  +
cmp eax 0FFFFFFFFh +
jz loc_1001FF7  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1001FDE  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10018DB  +
test eax eax +
jz loc_100A36C  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1002051  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1001617  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100208D  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_1001975  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1002097  +
cmp eax 0FFFFFFFFh +
jz loc_100A374  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
or eax 0FFFFFFFFh +
jmp loc_1002087  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10018DB  +
test eax eax +
jz loc_10020F7  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_10020F7  +
push 14h  +
call sub_1001617  +
test eax eax +
jz loc_10020F7  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jz loc_10020F2  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
mov [esi+8] eax +
jmp loc_10020E6  +
or eax 0FFFFFFFFh +
jmp loc_10020ED  +
***
call sub_100133D  +
mov esi ecx +
call sub_1001E4E  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1002132  +
push dword ptr [ebp+8]  +
call sub_1002147  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
and dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jz loc_1007AD0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100219D  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_10018DB  +
test eax eax +
jz loc_100A1E0  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_1002212  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_1002206  +
mov ecx 70000h +
cmp eax ecx +
ja loc_100A22D  +
jz loc_100A214  +
cmp eax 20000h +
jnz loc_100A1E8  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1002221  +
test eax eax +
jz loc_10078EA  +
mov edx [ebp+arg_0] +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_10021C6  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1002261  +
cmp [ebp+lpString2] 0 +
jz loc_1002261  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1002245  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
pop ebp  +
retn 10h  +
call ds:GetLastError  +
jmp loc_1009D0C  +
***
mov eax [ebp+arg_0] +
jmp loc_1001FB5  +
fnstsw  ax +
test ah 44h +
jnp loc_100226C  +
jmp loc_1001FA4  +
cmp ecx 90000h +
jnz loc_100A2EC  +
jmp loc_1001F97  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jz loc_1009C90  +
call sub_10018AD  +
test eax eax +
jz loc_10022EB  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_101301C  +
call sub_100156E  +
test eax eax +
jz loc_1009CA7  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_10022E5  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1002317  +
push eax  +
call ds:SysFreeString  +
mov esi [esi+4] +
test esi esi +
jnz loc_1007AE8  +
pop esi  +
retn   +
***
call sub_100133D  +
mov esi ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_100236C  +
push dword ptr [ebp+8]  +
call sub_1002147  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
test eax eax +
jz loc_1007BF5  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
xor eax eax +
jmp loc_1002354  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push dword ptr [ebp+wMatch]  +
push esi  +
call sub_1001EBE  +
cmp eax 0FFFFFFFFh +
jnz loc_1002398  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
lea eax [esi+eax*2] +
jmp loc_1002393  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+8] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_10023C5  +
test esi esi +
jz loc_10023C5  +
push 1  +
mov ecx esi +
call sub_10023CF  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1002305  +
test [ebp+arg_0] 1 +
jz loc_10023E9  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_1006E79  +
cmp [ebp+lpString] ebx +
jz loc_1006E79  +
call sub_10018AD  +
test eax eax +
jz loc_1006E66  +
push 3  +
pop esi  +
push esi  +
push dword_101301C  +
call sub_1001C47  +
mov edi eax +
cmp edi ebx +
jbe loc_100A0F5  +
push ebx  +
push esi  +
push dword_101301C  +
call sub_1001BEE  +
mov edi offset aBuffer +
test eax eax +
jz loc_100A132  +
push ebx  +
push esi  +
push dword_101301C  +
call sub_1001B38  +
mov esi eax +
cmp esi ebx +
jz loc_1006E66  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1006E66  +
push ebx  +
push [ebp+lpString]  +
call sub_10013BC  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
jbe loc_1006E4A  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jz loc_100A123  +
lea eax [esi+0Ch] +
push eax  +
call sub_1002AE5  +
test eax eax +
jz loc_1006E66  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1006E66  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1001975  +
mov esi [esi+0Ch] +
cmp esi ebx +
jz loc_1006E66  +
push 3  +
push ebx  +
push esi  +
call sub_100255D  +
push ebx  +
push esi  +
call sub_10013BC  +
test eax eax +
jz loc_100254F  +
cmp [ebp+arg_8] ebx +
jnz loc_1002509  +
cmp word ptr [esi] 2Dh +
jz loc_100254F  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jz loc_100A186  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100254F  +
cmp [ebp+var_4] ebx +
jz loc_1006E71  +
push ebx  +
push [ebp+var_4]  +
call sub_10013BC  +
test eax eax +
jz loc_1006E71  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_1002674 +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_100266A  +
push eax  +
push ebx  +
call sub_10013BC  +
test eax eax +
jz loc_100266A  +
cmp [ebp+lpStart] 0 +
jnz loc_100A013  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jnz loc_1002647  +
cmp word ptr [ebx] 0 +
jz loc_10025DA  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jnz loc_1002652  +
mov [ebp+var_18] esi +
cmp edi 3 +
jnz loc_100265F  +
cmp edi 2 +
jz loc_100A022  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_100261E  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jnz loc_100A029  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_10025F3  +
mov eax [ebp+var_14] +
test eax eax +
jnz loc_100A03B  +
cmp [ebp+var_18] ebx +
ja loc_100A045  +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 0Ch  +
test eax eax +
jz loc_10025AF  +
jmp loc_10025B5  +
cmp edi 1 +
jz loc_10025C3  +
jmp loc_10025DD  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jz loc_10025DA  +
jmp loc_10025C9  +
cmp edi 2 +
jz loc_10025E2  +
jmp loc_100261E  +
mov eax offset dword_1005DB4 +
jmp loc_1002629  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
mov esi eax +
test esi esi +
jz loc_10026D2  +
mov eax [esi+4] +
cmp eax 40000h +
jz loc_10026D6  +
test eax eax +
jnz loc_10026D2  +
push 4  +
call sub_1001617  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_10026D2  +
mov dword ptr [esi+4] 40000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_10026CD  +
test eax eax +
jz loc_10026A6  +
jmp loc_10026C2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+arg_8] +
push eax  +
push 40000h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001F19  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
mov esi eax +
test esi esi +
jz loc_100275A  +
mov eax [esi+4] +
cmp eax 90000h +
jz loc_100275E  +
test eax eax +
jnz loc_100275A  +
push 4  +
call sub_1001617  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100275A  +
mov dword ptr [esi+4] 90000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1002755  +
test eax eax +
jz loc_100272E  +
jmp loc_100274A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1002797  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1002797  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10027A0  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1002793  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_10027C8  +
cmp dword ptr [eax+4] 90000h +
jnz loc_10027C8  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_10027C4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_10018DB  +
test eax eax +
jz loc_1002847  +
call sub_1002851  +
push eax  +
mov [ebp+var_4] eax +
call sub_10018DB  +
test eax eax +
jz loc_1002847  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_100281D  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_1002097  +
cmp eax 0FFFFFFFFh +
jz loc_100281D  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1002807  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_100A390  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_1002097  +
cmp eax 0FFFFFFFFh +
jz loc_100A390  +
pop esi  +
leave   +
retn 8  +
or eax 0FFFFFFFFh +
jmp loc_1002842  +
***
xor ecx ecx +
cmp eax ecx +
jz loc_100A1CD  +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+lpString] edi +
call sub_10018AD  +
test eax eax +
jz loc_10028D8  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+lpString] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1009CB5  +
cmp [ebp+lpString] edi +
jz loc_1009CCD  +
push [ebp+lpString]  +
call sub_100229D  +
push [ebp+lpString]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
call sub_1001E76  +
mov esi ecx +
xor ebx ebx +
mov [ebp-14h] ebx +
cmp [esi+44h] ebx +
jz loc_1007E2F  +
cmp [esi+48h] ebx +
jnz loc_1007E2F  +
mov [ebp-4] ebx +
call sub_1002F63  +
push dword ptr [esi+1Ch]  +
lea ecx [ebp-20h] +
call sub_1002329  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
push offset aWql  +
lea ecx [ebp-1Ch] +
call sub_1002329  +
mov byte ptr [ebp-4] 2 +
cmp [edi] ebx +
jz loc_1002AA5  +
mov edi [edi] +
mov ecx [edi] +
cmp [eax] ebx +
jz loc_1002AAC  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-18h] eax +
mov eax [esi+44h] +
mov edx [eax] +
lea edi [esi+48h] +
push edi  +
push ebx  +
push 30h  +
push ecx  +
push dword ptr [ebp-18h]  +
push eax  +
call dword ptr [edx+50h]  +
mov [ebp-18h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_1002974  +
call sub_10023A2  +
mov [ebp-1Ch] ebx +
mov [ebp-4] bl +
mov ecx [ebp-20h] +
cmp ecx ebx +
jz loc_1002986  +
call sub_10023A2  +
mov [ebp-20h] ebx +
cmp [ebp-18h] ebx +
jl loc_1007DBF  +
push dword ptr [esi+50h]  +
push dword ptr [edi]  +
call sub_1003191  +
cmp eax ebx +
jl loc_1007DC9  +
push offset aWin32_process  +
lea ecx [ebp-18h] +
call sub_1002329  +
mov byte ptr [ebp-4] 3 +
cmp [eax] ebx +
jz loc_1002AB4  +
mov eax [eax] +
mov ecx [eax] +
mov eax [esi+44h] +
mov edx [eax] +
push ebx  +
lea edi [ebp-14h] +
push edi  +
push ebx  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+18h]  +
mov edi eax +
mov [ebp-4] bl +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_10029E3  +
call sub_10023A2  +
mov [ebp-18h] ebx +
cmp edi ebx +
jl loc_1007DCC  +
push offset aTerminate  +
lea ecx [ebp-24h] +
call sub_1002329  +
mov byte ptr [ebp-4] 4 +
cmp [eax] ebx +
jz loc_1002ABB  +
mov eax [eax] +
mov ecx [eax] +
mov eax [ebp-14h] +
mov edx [eax] +
push ebx  +
lea edi [esi+4Ch] +
push edi  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+4Ch]  +
mov edi eax +
mov [ebp-4] bl +
mov ecx [ebp-24h] +
cmp ecx ebx +
jz loc_1002A2C  +
call sub_10023A2  +
mov [ebp-24h] ebx +
cmp edi ebx +
jl loc_1007DD7  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1002A44  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
push dword ptr [esi+30h]  +
call sub_100147F  +
cmp dword ptr [esi+0ACh] 1 +
jnz loc_1002A91  +
mov [ebp-38h] ebx +
mov [ebp-34h] ebx +
mov [ebp-30h] ebx +
mov eax [esi+30h] +
mov [ebp-2Ch] eax +
lea eax [ebp-38h] +
push eax  +
push offset EnumFunc  +
call ds:EnumWindowStationsW  +
cmp [ebp-38h] ebx +
jz loc_1002A82  +
push dword ptr [ebp-38h]  +
call ds:free  +
pop ecx  +
cmp [ebp-34h] ebx +
jz loc_1002A91  +
push dword ptr [ebp-34h]  +
call ds:free  +
pop ecx  +
mov ecx esi +
call sub_10063DF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn   +
xor ecx ecx +
jmp loc_100293B  +
mov [ebp-18h] ebx +
jmp loc_100294A  +
xor ecx ecx +
jmp loc_10029BE  +
xor ecx ecx +
jmp loc_1002A08  +
***
call sub_1001372  +
mov esi [ebp+8] +
xor edi edi +
cmp esi edi +
jz loc_1002B4E  +
mov eax [esi] +
cmp eax edi +
jz loc_1002B4E  +
cmp [ebp+0Ch] edi +
jz loc_1009E3C  +
push eax  +
call sub_100193B  +
test eax eax +
jz loc_1009E47  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_1002B59  +
mov [ebp-4] edi +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jz loc_1009E4E  +
mov [esi] eax +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor eax eax +
inc eax  +
call sub_100167C  +
retn 8  +
call ds:GetLastError  +
jmp loc_1009EA1  +
xor eax eax +
jmp loc_1002B46  +
***
call sub_1001E76  +
mov esi ecx +
lea ebx [esi+50h] +
push ebx  +
call sub_100131C  +
lea edi [esi+8] +
mov eax [edi] +
lea ecx [esi+0ACh] +
lea edx [esi+44h] +
push 0  +
push 0  +
push ecx  +
push offset aRootCimv2  +
push dword ptr [esi+24h]  +
push ebx  +
lea ecx [esi+10h] +
push ecx  +
lea ecx [esi+0Ch] +
push ecx  +
push eax  +
push edx  +
push dword ptr [esi+40h]  +
call sub_1002C62  +
mov [ebp-14h] eax +
call ds:GetLastError  +
mov [ebp-18h] eax +
cmp dword ptr [ebp-14h] 0 +
jz loc_1002C37  +
cmp dword ptr [esi+0ACh] 1 +
jnz loc_1002BEB  +
cmp dword ptr [esi+28h] 1 +
jz loc_1007AF4  +
and dword ptr [ebp-4] 0 +
mov eax 80041064h +
cmp [ebp-18h] eax +
jz loc_1007B16  +
cmp dword ptr [esi+0ACh] 0 +
jz loc_1007B4D  +
add esi 68h +
push offset dword_1002EB4  +
mov ecx esi +
call ??4CHString@@QAEABV0@PBG@Z  +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp dword ptr [eax+4] 0 +
jnz loc_1007B7A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn   +
xor eax eax +
jmp loc_1002C31  +
***
call sub_1001E76  +
xor edi edi +
mov [ebp-18h] edi +
mov [ebp-20h] edi +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] edi +
mov byte ptr [ebp-4] 1 +
cmp dword ptr [ebp+20h] 1 +
jnz loc_1002CA0  +
push offset String2  +
mov ecx [ebp+18h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_100955E  +
mov esi [ebp+14h] +
mov ecx esi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] edi +
jnz loc_10094FA  +
push dword ptr [ebp+30h]  +
push dword ptr [ebp+28h]  +
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebp+24h]  +
push edi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1002D08  +
mov [ebp-1Ch] eax +
push dword ptr [ebp-18h]  +
mov ebx ds:SetLastError +
call ebx  +
cmp dword ptr [ebp-1Ch] 1 +
jnz loc_1009525  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 2Ch  +
***
call sub_1001E76  +
xor ebx ebx +
mov [ebp-24h] ebx +
mov [ebp-28h] ebx +
mov [ebp-4] ebx +
mov [ebp-18h] ebx +
mov byte ptr [ebp-4] 1 +
mov [ebp-1Ch] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 3 +
cmp [ebp+8] ebx +
jz loc_1002E9C  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jz loc_1002E9C  +
cmp [eax] ebx +
jnz loc_1002E9C  +
cmp [ebp+24h] ebx +
jz loc_1002E9C  +
mov eax [ebp+2Ch] +
cmp eax ebx +
jz loc_1002D62  +
mov [eax] ebx +
mov edi [ebp+28h] +
cmp edi ebx +
jz loc_1002D6B  +
mov [edi] ebx +
mov byte ptr [ebp-4] 4 +
mov [ebp-38h] ebx +
lea eax [ebp-24h] +
push eax  +
mov esi [ebp+10h] +
push esi  +
call sub_100341B  +
test eax eax +
jz loc_1009117  +
push dword ptr [ebp+14h]  +
call sub_10033DD  +
test eax eax +
jz loc_1009126  +
push dword ptr [ebp+24h]  +
lea ecx [ebp-18h] +
call sub_1002101  +
cmp esi ebx +
jz loc_1002DAF  +
cmp [ebp-24h] ebx +
jz loc_1009135  +
cmp dword ptr [ebp-24h] 1 +
jnz loc_1002DBE  +
cmp [ebp+14h] ebx +
jnz loc_1009300  +
xor edx edx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jnz loc_1009332  +
xor ecx ecx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1002E95  +
mov eax [eax] +
mov esi [ebp+8] +
mov esi [esi] +
mov edi [ebp+0Ch] +
push edi  +
push dword ptr [ebp+30h]  +
push ebx  +
push ebx  +
push ebx  +
push edx  +
push ecx  +
push eax  +
mov eax esi +
mov esi [ebp+8] +
push esi  +
call dword ptr [eax+0Ch]  +
mov [ebp-20h] eax +
cmp eax ebx +
jl loc_1009339  +
mov eax [ebp-14h] +
cmp eax ebx +
jnz loc_1009441  +
xor ecx ecx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jnz loc_1009448  +
xor eax eax +
push dword ptr [ebp+1Ch]  +
push ecx  +
push eax  +
push dword ptr [edi]  +
call sub_1002EC5  +
mov [ebp-20h] eax +
cmp eax ebx +
jl loc_100944F  +
mov eax [ebp+2Ch] +
cmp eax ebx +
jz loc_1002E3D  +
mov ecx [ebp-24h] +
mov [eax] ecx +
mov dword ptr [ebp-38h] 1 +
mov dword ptr [ebp-4] 3 +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-14h] +
cmp ecx ebx +
jnz loc_10094C2  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jnz loc_10094CF  +
mov [ebp-4] bl +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_1002E7B  +
call sub_10023A2  +
mov [ebp-18h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-28h] +
cmp ecx ebx +
jnz loc_10094DC  +
mov eax [ebp-38h] +
call __EH_epilog3  +
retn 2Ch  +
xor eax eax +
jmp loc_1002DDA  +
mov eax [ebp+28h] +
cmp eax ebx +
jnz loc_10094E9  +
jmp loc_10094EF  +
***
call sub_1001E76  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-24h] ebx +
mov [ebp-20h] ebx +
mov byte ptr [ebp-4] 2 +
cmp [ebp+8] ebx +
jz loc_1008C25  +
mov edi [ebp+14h] +
mov eax [edi] +
cmp eax ebx +
jnz loc_1008C46  +
cmp [ebp+0Ch] ebx +
jnz loc_1008C6F  +
cmp [ebp+10h] ebx +
jnz loc_1008C6F  +
push ebx  +
push ebx  +
push 3  +
push 6  +
push ebx  +
push ebx  +
push 0Ah  +
push dword ptr [ebp+8]  +
call sub_10031E3  +
mov [ebp-1Ch] eax +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-1Ch] +
call __EH_epilog3  +
retn 10h  +
***
call sub_1001E76  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
mov [ebp-24h] edi +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
inc ebx  +
mov [ebp-4] bl +
cmp [esi] ebx +
jz loc_10030CE  +
mov byte ptr [ebp-4] 2 +
mov dword ptr [ebp-1Ch] offset dword_1002294 +
push dword ptr [esi+18h]  +
call sub_1001C7B  +
mov [ebp-28h] eax +
mov [ebp-20h] edi +
mov eax [ebp-20h] +
cmp eax [ebp-28h] +
jnb loc_1003064  +
push eax  +
push dword ptr [esi+18h]  +
call sub_1001DCB  +
mov edi eax +
test edi edi +
jz loc_1003035  +
push 0  +
push ebx  +
push offset String2  +
push edi  +
call sub_1002221  +
test eax eax +
jz loc_10030CE  +
push 0  +
push 2Ah  +
push edi  +
call sub_1002375  +
test eax eax +
jnz loc_1007A7C  +
push 0  +
push 0Ah  +
push edi  +
call sub_1002400  +
push edi  +
cmp eax ebx +
lea eax [ebp-14h] +
jz loc_1007A89  +
push offset aCaption  +
push dword ptr [ebp-1Ch]  +
push offset aSSS  +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 14h +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-18h] +
call ??YCHString@@QAEABV0@ABV0@@Z  +
mov [ebp-24h] ebx +
mov dword ptr [ebp-1Ch] offset aOr +
inc dword ptr [ebp-20h]  +
jmp loc_1002FB0  +
cmp [ebp-24h] ebx +
jnz loc_10030A3  +
cmp [esi+64h] ebx +
mov eax offset aAnd +
jz loc_1003078  +
mov eax offset aWhere +
lea edi [esi+1Ch] +
push eax  +
push dword ptr [edi]  +
push offset aSS  +
lea eax [ebp-14h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
mov [esi+60h] ebx +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-14h]  +
push offset aSS_0  +
push edi  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 20h +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
cmp eax ebx +
jnz loc_1002FF3  +
jmp loc_1003035  +
mov byte ptr [ebp-4] 0 +
jmp loc_10030A7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
cmp edi esi +
jz loc_1008B34  +
mov eax [edi] +
push ebx  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_100317C  +
push edi  +
call dword ptr [eax]  +
mov ebx eax +
cmp ebx esi +
jl loc_1003170  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
cmp ebx esi +
jl loc_1003163  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_1003170  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
mov [ebp+var_8] 0Ah +
jz loc_1008C1B  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_1003101  +
test eax eax +
jl locret_10031DA  +
push 0  +
push [ebp+arg_4]  +
push 3  +
push 6  +
push 0  +
push [ebp+var_4]  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_10031E3  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_100328F  +
test [ebp+arg_1C] 60h +
mov ebx [ebp+arg_18] +
jnz loc_1008B3E  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push offset dword_1003298  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_1003288  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
mov edi offset dword_100317C +
push edi  +
push esi  +
call dword ptr [eax]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_1008B4B  +
push dword ptr [ebp+arg_1C]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_1008B60  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1003271  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
test ebx ebx +
jnz loc_1008B79  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1003286  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
mov eax 80041008h +
jmp loc_1003288  +
***
call sub_1001E76  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor eax eax +
mov [ebp-4] eax +
cmp [ebp+8] eax +
jnz loc_1008ECF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 4  +
***
call sub_1001E76  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov edi [ebp+8] +
test edi edi +
jz loc_100344A  +
push 0  +
push edi  +
call sub_10013BC  +
test eax eax +
jnz loc_1008FAC  +
xor ebx ebx +
inc ebx  +
mov eax [ebp+0Ch] +
mov [eax] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn 8  +
***
call sub_1001E76  +
xor esi esi +
mov [ebp-14h] esi +
mov [ebp-4] esi +
mov edi [ebp+8] +
cmp edi esi +
jz loc_10090C2  +
cmp [edi] esi +
jnz loc_10090C2  +
push esi  +
push esi  +
call ds:CoInitializeEx  +
cmp eax esi +
jl loc_10090D1  +
push esi  +
push esi  +
push esi  +
push 3  +
xor ebx ebx +
inc ebx  +
push ebx  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CoInitializeSecurity  +
cmp eax esi +
jl loc_10090DC  +
push edi  +
push offset riid  +
push ebx  +
push esi  +
push offset rclsid  +
call ds:CoCreateInstance  +
cmp eax esi +
jl loc_10090E7  +
mov [ebp-14h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 4  +
***
call sub_100133D  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+8] +
call ??0CHString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+0Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+10h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+1Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+5Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+68h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 5 +
mov [esi+14h] edi +
mov [esi+18h] edi +
mov [esi+0A8h] edi +
mov [esi] edi +
mov [esi+4] edi +
mov [esi+20h] edi +
mov [esi+24h] edi +
mov [esi+2Ch] edi +
mov [esi+34h] edi +
mov [esi+38h] edi +
mov [esi+28h] edi +
mov [esi+3Ch] edi +
mov [esi+30h] edi +
mov [esi+40h] edi +
mov [esi+44h] edi +
mov [esi+48h] edi +
mov [esi+4Ch] edi +
mov [esi+6Ch] edi +
mov [esi+70h] edi +
mov [esi+74h] edi +
mov [esi+78h] edi +
mov [esi+7Ch] edi +
mov [esi+80h] edi +
mov [esi+84h] edi +
mov [esi+88h] edi +
mov [esi+8Ch] edi +
mov [esi+90h] edi +
mov [esi+94h] edi +
mov [esi+98h] edi +
mov [esi+9Ch] edi +
mov [esi+0A0h] edi +
mov [esi+0A4h] edi +
mov [esi+54h] edi +
mov [esi+50h] edi +
mov [esi+60h] edi +
mov [esi+64h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
xor ebx ebx +
push 8  +
mov [ebp+hObject] ebx +
pop ecx  +
lea eax [ebp+Luid] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1003620  +
push 10h  +
pop ecx  +
lea eax [ebp+NewState] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100362C  +
lea eax [ebp+hObject] +
push eax  +
push 28h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_100979A  +
lea eax [ebp+Luid] +
push eax  +
push offset Name  +
push ebx  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jz loc_10097A6  +
mov eax [ebp+Luid.LowPart] +
push esi  +
push ebx  +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
push ebx  +
push 10h  +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
lea eax [ebp+NewState] +
push eax  +
push ebx  +
push [ebp+hObject]  +
xor esi esi +
inc esi  +
mov [ebp+NewState.PrivilegeCount] esi +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:AdjustTokenPrivileges  +
test eax eax +
jz loc_10097B6  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov eax dword_1013470 +
push offset dword_1013010  +
push dword_101346C  +
mov dword_1013010 eax +
push offset dword_1013038  +
push offset dword_101303C  +
push offset dword_1013034  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_101300C eax +
retn   +
***
push offset loc_100CCAF  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_1013464 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_1013468 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_101347C +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001E64  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1003803  +
cmp [ebp+lpString2] 0 +
jz loc_1003803  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_10037E7  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
pop ebp  +
retn 10h  +
call ds:GetLastError  +
jmp loc_1009D1F  +
***
sub eax esi +
sar eax 1 +
jmp loc_1001F0F  +
call ds:StrChrW  +
jmp loc_1001EF9  +
***
push 0  +
push ebx  +
call sub_10013BC  +
mov edi eax +
inc edi  +
jmp loc_1001ADE  +
***
push 1  +
push dword_101301C  +
call sub_1001B6F  +
cmp eax ebx +
jz loc_100A07B  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_1001FC1  +
cmp eax 0FFFFFFFFh +
jnz loc_1001D1B  +
jmp loc_100A07B  +
***
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push esi  +
push dword ptr [eax+0Ch]  +
call sub_1002221  +
test eax eax +
jmp loc_1001F9E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_10038AE  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10038AE  +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [eax+0Ch]  +
call sub_1002024  +
pop ebp  +
retn 10h  +
or eax 0FFFFFFFFh +
jmp loc_10038AA  +
***
cmp ecx 80000h +
jz loc_1001B98  +
xor eax eax +
jmp loc_1001B9B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 624h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov [ebp+var_614] eax +
mov eax [ebp+arg_8] +
mov edi 1FAh +
xor ebx ebx +
push edi  +
mov [ebp+var_610] eax +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+var_204] ebx +
call memset  +
push edi  +
lea eax [ebp+var_400] +
push ebx  +
push eax  +
mov [ebp+var_404] ebx +
call memset  +
push edi  +
lea eax [ebp+var_600] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 24h +
mov [ebp+var_618] ebx +
cmp [ebp+var_614] ebx +
jz loc_10039D2  +
cmp [ebp+var_610] ebx +
jz loc_10039D2  +
call sub_1002851  +
mov [ebp+var_618] eax +
cmp eax ebx +
jz loc_100A3B7  +
push eax  +
push [ebp+var_614]  +
push [ebp+arg_0]  +
call sub_1003AD0  +
cmp esi ebx +
jz loc_1003986  +
cmp [esi] ebx +
jz loc_100A3CC  +
push [ebp+var_610]  +
mov [ebp+var_60C] 1 +
call sub_1001C7B  +
mov [ebp+var_620] eax +
mov [ebp+var_608] ebx +
cmp eax ebx +
ja loc_100A3DD  +
lea eax [ebp+var_618] +
push eax  +
call sub_1001454  +
mov eax [ebp+var_60C] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 10h  +
call ds:GetLastError  +
jmp loc_100A4FD  +
***
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_1004963  +
mov [ebp+var_4] ecx +
jmp loc_1003D1D  +
xor eax eax +
or ebx eax +
jz loc_1003D33  +
jmp loc_1004963  +
***
push 490h  +
call ebx  +
or eax 0FFFFFFFFh +
jmp loc_1004192  +
call ds:GetLastError  +
jmp loc_100A549  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1003A6E  +
cmp [ebp+arg_4] edi +
jz loc_1003A6E  +
cmp [ebp+lpString] edi +
jz loc_1003A6E  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_1003A6E  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1001EBE  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jnz loc_100A558  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
call ds:GetLastError  +
jmp loc_100A5DB  +
***
push 0  +
push [ebp+var_208]  +
call sub_10027D5  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1003BEB  +
push 0  +
push [ebp+lpString]  +
push esi  +
push [ebp+var_208]  +
call sub_100387D  +
jmp loc_1003B96  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
push 1FAh  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+var_208] edi +
mov dword ptr [ebp+var_204] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_1003BFC  +
cmp edi ebx +
jz loc_1003BFC  +
mov [ebp+var_20C] ebx +
cmp [ebp+arg_0] ebx +
jbe loc_1003BEB  +
mov edi ds:wcstok +
mov [ebp+var_210] esi +
mov ebx offset dword_1003BC8 +
mov eax [ebp+var_210] +
push 0FEh  +
add eax 204h +
push eax  +
lea eax [ebp+var_204] +
push eax  +
call sub_1001975  +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
call edi  +
pop ecx  +
mov [ebp+lpString] eax +
pop ecx  +
test eax eax +
jz loc_1003BCC  +
push 0  +
push 1  +
push [ebp+lpString]  +
push 0  +
push [ebp+var_208]  +
call sub_1005341  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1003A9A  +
push [ebp+var_20C]  +
push esi  +
push [ebp+var_208]  +
call sub_1005E83  +
mov eax [ebp+var_210] +
push 0  +
add eax 4 +
push eax  +
push esi  +
push [ebp+var_208]  +
call sub_100387D  +
push ebx  +
push 0  +
jmp loc_1003B66  +
inc [ebp+var_20C]  +
mov eax [ebp+var_20C] +
add [ebp+var_210] 4DCh +
cmp eax [ebp+arg_0] +
jb loc_1003B41  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 0Ch  +
push 57h  +
call ds:SetLastError  +
jmp loc_100A3AD  +
***
mov eax [edi-10h] +
test eax eax +
jz loc_1004963  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_1003D80  +
push dword ptr [eax]  +
call sub_10018DB  +
test eax eax +
jnz loc_1003D80  +
jmp loc_1004963  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_1003C66  +
cmp ecx edi +
jz loc_100481F  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_100481F  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_1003DCD  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_1004912  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2  +
push eax  +
call sub_10037C3  +
test eax eax +
jnz loc_1004963  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_1004963  +
cmp [edi+4] ebx +
jnz loc_1004963  +
cmp [edi+8] ebx +
jnz loc_1004963  +
cmp [edi+0Ch] ebx +
jnz loc_1004963  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1003D00  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_1004963  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_1004963  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jnz loc_1004959  +
mov edx eax +
or edx ecx +
jnz loc_10039DD  +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jnz loc_1004834  +
xor ecx ecx +
or eax ecx +
jnz loc_10039F1  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_1004963  +
jmp ds:off_1004931[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_1003C09  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1004963  +
cmp [edi-10h] ecx +
jnz loc_1004963  +
mov eax [edi-0Ch] +
test eax eax +
jnz loc_100484A  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_100486B  +
xor eax eax +
or ebx eax +
jnz loc_1003DB7  +
cmp dword ptr [edi-24h] 1 +
jnz loc_1004963  +
and esi 20h +
or esi eax +
jnz loc_1004963  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jz loc_1004879  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_1003C84  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_1004963  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_1004963  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jz loc_1003DB7  +
jmp loc_1004963  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1003E8A  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1003E8A  +
push 0  +
push edi  +
call sub_10013BC  +
push 0  +
push ebx  +
mov esi eax +
call sub_10013BC  +
test eax eax +
jz loc_1003E67  +
test esi esi +
jz loc_1003E67  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_1003E67  +
sub esi ecx +
cmp esi eax +
jb loc_1003E67  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_1003E82  +
call ds:StrStrIW  +
test eax eax +
jnz loc_1003E7C  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
sub eax edi +
sar eax 1 +
jmp loc_1003E75  +
call ds:StrStrW  +
jmp loc_1003E63  +
call ds:GetLastError  +
jmp loc_1009E04  +
***
push esi  +
push dword_101301C  +
call sub_1001B6F  +
test eax eax +
jz loc_1003EDE  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_1001FC1  +
cmp eax 0FFFFFFFFh +
jnz loc_1001A8A  +
jmp loc_1003EDE  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_1001975  +
jmp loc_1001B1E  +
xor eax eax +
jmp loc_1001B24  +
lea ecx [edi+edi] +
cmp ecx eax +
jb loc_1003EE5  +
jmp loc_1001AF5  +
xor eax eax +
jmp loc_1001B21  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1003F01  +
call sub_1001617  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1003EDE  +
mov [esi+8] edi +
jmp loc_1001AF5  +
lea eax [esi+0Ch] +
push eax  +
call sub_1002AE5  +
jmp loc_1003EF5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_1005F56  +
cmp [ebp+arg_4] ebx +
jz loc_1005F56  +
cmp [ebp+lpString] ebx +
jz loc_1005F56  +
cmp [ebp+dwErrCode] ebx +
jz loc_1005F56  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_1005F56  +
call sub_100372D  +
test eax eax +
jz loc_100A6A9  +
call sub_10018AD  +
test eax eax +
jz loc_1005F5A  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jnz loc_100A6C2  +
push esi  +
call sub_1005878  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_1005F5A  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+lpString]  +
push eax  +
call sub_1003C3E  +
test eax eax +
jz loc_1005F5A  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_10040AA  +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_1005F64  +
mov edi [ecx+4] +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+lpString]  +
call sub_10040E9  +
cmp eax 0FFFFFFFFh +
jz loc_100A700  +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_100A782  +
test edi edi +
jz loc_1004042  +
cmp [ebp+arg_8] 2 +
jnz loc_1004042  +
push dword ptr [esi+8]  +
call sub_100583A  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_1005F74  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+lpString]  +
call sub_10040E9  +
cmp eax 0FFFFFFFFh +
jnz loc_1005F6B  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+lpString]  +
call sub_1003A1F  +
cmp eax 0FFFFFFFFh +
jnz loc_1005F6B  +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_10046FD  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_100A7FB  +
mov eax [esi+18h] +
test eax eax +
jnz loc_1005F40  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jnz loc_100A735  +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_1005F4E  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_10040D7  +
xor esi esi +
cmp [ebp+lpString] ebx +
jbe loc_10040D7  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_100A7E5  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jnz loc_100A741  +
inc esi  +
add ecx 50h +
cmp esi [ebp+lpString] +
jb loc_10040B4  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1003A0F  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_1003A0F  +
cmp [ebp+lpString] edi +
jz loc_1003A0F  +
push [ebp+lpString]  +
call sub_10041C7  +
test eax eax +
jz loc_1003A00  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_1003A00  +
add esi 20h +
lea eax [esi-20h] +
test eax eax +
jz loc_100A52C  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_1004154  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_1004179  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_1004179  +
mov eax [ebp+lpString] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_10056D8  +
cmp eax 1 +
jz loc_100418F  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jnb loc_1003A00  +
xor edi edi +
jmp loc_1004138  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp esi [ebp+arg_4] +
jnb loc_10041BF  +
test eax eax +
jnz loc_10041BF  +
mov ecx [esi] +
test ecx ecx +
jz loc_10041BA  +
call ecx  +
add esi 4 +
jmp loc_10041A9  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_100A515  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1004218  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_1004210  +
call sub_1001EBE  +
cmp eax 0FFFFFFFFh +
jz loc_1004218  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_1004209  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_100422A  +
push 57h  +
call ebx  +
call sub_1002877  +
xor eax eax +
jmp loc_1004819  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_1004774  +
cmp dword ptr [ebp+lpString] edx +
jz loc_1004274  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1004274  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1001C99  +
push eax  +
push 2  +
call sub_100D497  +
add esp 10h +
jmp loc_100428A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004285  +
push 42Bh  +
call ebx  +
call sub_1002877  +
push 800401E4h  +
call ebx  +
jmp loc_10046C9  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_1005F35  +
jmp loc_10042B2  +
cmp ecx 9 +
jz loc_1004788  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
jmp loc_1004788  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_1001A49  +
test eax eax +
jnz loc_10042E6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10046C4  +
push 8  +
call ds:SetLastError  +
jmp loc_10046C4  +
push 3  +
push offset asc_1002674  +
push eax  +
call sub_100255D  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jz loc_10047B1  +
jmp loc_10046C4  +
test ebx ebx +
jz loc_1004815  +
push 1  +
push dword ptr [ebp+var_1C]  +
push ebx  +
call sub_10056D8  +
test eax eax +
jnz loc_10047C0  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1004356  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1004356  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1001C99  +
push eax  +
push 3  +
call sub_100D497  +
add esp 14h +
jmp loc_100436F  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1001C99  +
push eax  +
push 2  +
call sub_100D497  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_10046C9  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_10047DB  +
cmp dword ptr [ebp+lpString] eax +
jz loc_10043A7  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_10043A7  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_100435F  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1001C99  +
push eax  +
push 1  +
call sub_100D497  +
add esp 0Ch +
jmp loc_100436F  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1002179  +
jmp loc_1005F27  +
cmp [ebp+var_C] ecx +
jz loc_1004412  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_1004412  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1004406  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1004406  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_100435F  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_10043AF  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_100443C  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1001617  +
test eax eax +
jz loc_10042CB  +
mov [esi+2Ch] eax +
jmp loc_1004442  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_1001975  +
jmp loc_1004815  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_1004815  +
push 0  +
push ebx  +
call sub_10013BC  +
test eax eax +
jz loc_100451B  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_1002400  +
test eax eax +
jz loc_100451B  +
push 0Ah  +
push ebx  +
call sub_100D784  +
cmp [ebp+var_C] 1 +
jnz loc_100449D  +
mov dword ptr [ebp+String2] eax +
jmp loc_10044A0  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1004505  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_10044DE  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_10044CB  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100DD0C  +
jmp loc_10044D5  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100DD2F  +
cmp eax 0FFFFFFFFh +
jnz loc_1004815  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_10044F6  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_1005EBB  +
jmp loc_100480C  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100DAA9  +
jmp loc_100480C  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_1004514  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_1004815  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_100452D  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_1004581  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100454F  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100454F  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_100435F  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_10043AF  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1004815  +
push ebx  +
call sub_100D761  +
test eax eax +
jnz loc_10045BA  +
and edi 10h +
or edi eax +
jz loc_100458B  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_100458B  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1004818  +
cmp dword ptr [ebp+lpString] eax +
jz loc_10045AD  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10045AD  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_100435F  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_10043AF  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_10045CB  +
call sub_100D59C  +
fstp  dword ptr [ebp+var_1C+4] +
jmp loc_10045D3  +
call sub_100D59C  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1004649  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_100461A  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1004603  +
fld  dword ptr [ebp+var_1C+4] +
fstp  dword ptr [esp+18h+var_1C+4] +
push dword ptr [eax]  +
call sub_100DD52  +
jmp loc_1004611  +
fld  [ebp+var_28] +
push ecx  +
fstp  [esp+1Ch+var_1C] +
push dword ptr [eax]  +
call sub_100DD75  +
cmp eax 0FFFFFFFFh +
jnz loc_1004815  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1004636  +
fld  dword ptr [ebp+var_1C+4] +
fstp  dword ptr [esp+18h+var_1C+4] +
push dword ptr [eax]  +
call sub_100DAFE  +
jmp loc_100480C  +
fld  [ebp+var_28] +
push ecx  +
fstp  [esp+1Ch+var_1C] +
push dword ptr [eax]  +
call sub_100DB53  +
jmp loc_100480C  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_100465C  +
fld  dword ptr [ebp+var_1C+4] +
fstp  dword ptr [eax] +
jmp loc_1004815  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_1004815  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_1004818  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100469D  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100469D  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_100435F  +
call ds:GetLastError  +
test eax eax +
jnz loc_10046B2  +
push 42Bh  +
call ds:SetLastError  +
call sub_1002877  +
jmp loc_100436F  +
test eax eax +
jnz loc_10046C4  +
push 57h  +
call ebx  +
call sub_1002877  +
xor eax eax +
jmp loc_1004818  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  dword ptr [ebp+var_1C+4] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_100421C  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_1005F35  +
cmp eax edi +
jz loc_1005F35  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov dword ptr [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov dword ptr [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_1004774  +
cmp [ebp+lpString2] 0 +
jz loc_1004236  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1004296  +
cmp dword ptr [esi+24h] 0 +
jnz loc_10042A9  +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_1005F35  +
jmp ds:off_10046D0[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_10047B1  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jnz loc_10042BD  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_100430B  +
test ebx ebx +
jz loc_1004815  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jnz loc_100437F  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_10043D6  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jnz loc_10043C1  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1002024  +
cmp eax 0FFFFFFFFh +
jz loc_10042CB  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_100482D  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_1003DD1  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_1004963  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
jmp loc_1003D29  +
cmp eax 2 +
jb loc_1004963  +
jmp loc_1003D80  +
test eax eax +
jnz loc_1004864  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1003DD0  +
cmp [edi-14h] ecx +
jnz loc_1003D8F  +
jmp loc_1004963  +
cmp dword ptr [edi-0Ch] 2 +
jnb loc_1003DB7  +
jmp loc_1004963  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_100492A  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_1004963  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_1004963  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_1004963  +
mov edx [edi-10h] +
test edx edx +
jz loc_1004963  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_10048E7  +
push dword ptr [edx]  +
call sub_10018DB  +
test eax eax +
jnz loc_1003DB7  +
jmp loc_1004963  +
cmp dword ptr [edi-24h] 1 +
ja loc_1004963  +
and esi 20h +
xor eax eax +
jmp loc_1003E07  +
cmp dword ptr [edi-8] 0 +
jz loc_1004963  +
cmp dword ptr [edi-4] 0 +
jnz loc_1003DB7  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_1003DB7  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004864  +
push 42Bh  +
jmp loc_100485E  +
push 78h  +
jmp loc_100485E  +
***
cmp dword ptr [edi-34h] 0Ah +
jz loc_1003D13  +
call ds:GetLastError  +
jmp loc_1004858  +
***
call sub_1001E76  +
mov [ebp-1Ch] ecx +
xor ebx ebx +
mov [ebp-14h] ebx +
mov esi 2D0h +
push esi  +
call sub_1001617  +
mov [ebp-14h] eax +
cmp eax ebx +
jz loc_10097C2  +
mov [eax] bl +
inc eax  +
dec esi  +
jnz loc_100499D  +
mov edi [ebp-14h] +
mov [ebp-18h] edi +
push 8  +
mov esi offset aParser2_0 +
push esi  +
push edi  +
call sub_1004D5E  +
mov dword ptr [edi+8] 0Ah +
mov dword ptr [edi+20h] offset dword_1004D4C +
xor edi edi +
inc edi  +
mov eax [ebp-18h] +
mov [eax+18h] edi +
mov [eax+1Ch] ebx +
mov dword ptr [eax+10h] 20000h +
mov [eax+14h] ebx +
mov ecx [ebp-1Ch] +
add ecx 0A8h +
mov [eax+2Ch] ecx +
mov [eax+30h] ebx +
mov eax [ebp-14h] +
add eax 50h +
mov [ebp-18h] eax +
push 8  +
push esi  +
push eax  +
call sub_1004D5E  +
mov eax [ebp-18h] +
mov [eax+8] edi +
mov dword ptr [eax+20h] offset dword_1004D48 +
mov [eax+18h] edi +
mov [eax+1Ch] ebx +
mov dword ptr [eax+10h] 100C0h +
mov [eax+14h] ebx +
mov [eax+2Ch] ebx +
mov [eax+30h] ebx +
mov eax [ebp-14h] +
add eax 0A0h +
mov [ebp-18h] eax +
push 8  +
push esi  +
push eax  +
call sub_1004D5E  +
mov eax [ebp-18h] +
mov [eax+8] edi +
mov dword ptr [eax+20h] offset dword_1004D44 +
mov [eax+18h] edi +
mov [eax+1Ch] ebx +
mov dword ptr [eax+10h] 100C0h +
mov [eax+14h] ebx +
mov [eax+2Ch] ebx +
mov [eax+30h] ebx +
mov eax [ebp-14h] +
add eax 0F0h +
mov [ebp-18h] eax +
push 8  +
push esi  +
push eax  +
call sub_1004D5E  +
mov eax [ebp-18h] +
mov [eax+8] edi +
mov dword ptr [eax+20h] offset dword_1004D40 +
mov [eax+18h] edi +
mov [eax+1Ch] ebx +
mov dword ptr [eax+10h] 10010h +
mov [eax+14h] ebx +
mov [eax+2Ch] ebx +
mov [eax+30h] ebx +
mov eax [ebp-14h] +
add eax 140h +
mov [ebp-18h] eax +
push 8  +
push esi  +
push eax  +
call sub_1004D5E  +
mov eax [ebp-18h] +
mov dword ptr [eax+8] 0Ah +
mov dword ptr [eax+20h] offset dword_1004D3C +
mov [eax+28h] ebx +
mov [eax+18h] edi +
mov [eax+1Ch] ebx +
mov [eax+10h] ebx +
mov [eax+14h] ebx +
mov ecx [ebp-1Ch] +
add ecx 4 +
mov [eax+2Ch] ecx +
mov [eax+30h] ebx +
mov eax [ebp-14h] +
add eax 280h +
mov [ebp-18h] eax +
push 8  +
push esi  +
push eax  +
call sub_1004D5E  +
mov eax [ebp-18h] +
mov dword ptr [eax+8] 0Ah +
mov dword ptr [eax+20h] offset dword_1004D38 +
mov [eax+28h] ebx +
mov [eax+18h] edi +
mov [eax+1Ch] ebx +
mov [eax+10h] ebx +
mov [eax+14h] ebx +
mov ecx [ebp-1Ch] +
mov [eax+2Ch] ecx +
mov [eax+30h] ebx +
mov eax [ebp-14h] +
add eax 190h +
mov [ebp-18h] eax +
push 8  +
push esi  +
push eax  +
call sub_1004D5E  +
mov eax [ebp-18h] +
mov [eax+8] edi +
mov dword ptr [eax+20h] offset aFi +
mov [eax+18h] ebx +
mov [eax+1Ch] ebx +
mov dword ptr [eax+10h] 0E1h +
mov [eax+14h] ebx +
mov ecx [ebp-1Ch] +
add ecx 14h +
mov [ebp-28h] ecx +
mov [eax+2Ch] ecx +
mov [eax+30h] ebx +
mov eax [ebp-14h] +
add eax 1E0h +
mov [ebp-18h] eax +
push 8  +
push esi  +
push eax  +
call sub_1004D5E  +
mov eax [ebp-18h] +
mov [eax+8] edi +
mov dword ptr [eax+20h] offset aPid +
mov [eax+18h] ebx +
mov [eax+1Ch] ebx +
mov dword ptr [eax+10h] 2021h +
mov [eax+14h] ebx +
mov ecx [ebp-1Ch] +
add ecx 18h +
mov [eax+2Ch] ecx +
mov [eax+30h] ebx +
mov eax [ebp-14h] +
add eax 230h +
mov [ebp-18h] eax +
push 8  +
push esi  +
push eax  +
call sub_1004D5E  +
mov eax [ebp-18h] +
mov [eax+8] edi +
mov dword ptr [eax+20h] offset aIm +
mov [eax+18h] ebx +
mov [eax+1Ch] ebx +
mov dword ptr [eax+10h] 2021h +
mov [eax+14h] ebx +
mov esi [ebp-1Ch] +
add esi 18h +
mov [eax+2Ch] esi +
mov [eax+30h] ebx +
push ebx  +
push dword ptr [ebp-14h]  +
push 9  +
push 0FFFFFFFFh  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1003F11  +
cmp eax ebx +
jz loc_10097D9  +
mov eax [ebp-14h] +
lea ecx [eax+50h] +
mov [ebp-24h] ecx +
lea edx [eax+0A0h] +
mov [ebp-18h] edx +
add eax 0F0h +
mov [ebp+0Ch] eax +
mov [ebp-4] ebx +
lea eax [ecx+2Ch] +
push dword ptr [eax]  +
mov ecx [ebp-1Ch] +
add ecx 8 +
call ??4CHString@@QAEABV0@PBG@Z  +
mov eax [ebp-18h] +
add eax 2Ch +
push dword ptr [eax]  +
mov ecx [ebp-1Ch] +
add ecx 0Ch +
call ??4CHString@@QAEABV0@PBG@Z  +
mov eax [ebp+0Ch] +
add eax 2Ch +
mov ecx [ebp-1Ch] +
add ecx 10h +
mov [ebp-20h] ecx +
push dword ptr [eax]  +
call ??4CHString@@QAEABV0@PBG@Z  +
mov eax [ebp+0Ch] +
add eax 2Ch +
cmp [eax] ebx +
jnz loc_1004C4C  +
push offset String2  +
mov ecx [ebp-20h] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov eax [ebp-24h] +
add eax 2Ch +
push eax  +
call sub_10014CF  +
mov eax [ebp-18h] +
add eax 2Ch +
push eax  +
call sub_10014CF  +
mov eax [ebp+0Ch] +
add eax 2Ch +
push eax  +
call sub_10014CF  +
mov eax [ebp-1Ch] +
cmp [eax+0A8h] edi +
jz loc_10097E4  +
mov ecx [ebp-24h] +
cmp [ecx+1Ch] ebx +
mov ecx [ebp-18h] +
jnz loc_1004D14  +
cmp [ecx+1Ch] ebx +
jnz loc_1009826  +
mov ecx [ebp+0Ch] +
cmp [ecx+1Ch] ebx +
jnz loc_1009814  +
mov ecx [ebp+0Ch] +
cmp [ecx+1Ch] ebx +
mov ecx [ebp-20h] +
jnz loc_100982D  +
mov [eax+24h] edi +
call ?Empty@CHString@@QAEXXZ  +
mov eax [ebp-14h] +
cmp [eax+1FCh] ebx +
jnz loc_100985B  +
push dword ptr [esi]  +
call sub_1001C7B  +
test eax eax +
jz loc_100986E  +
mov eax [ebp-28h] +
push dword ptr [eax]  +
call sub_1001C7B  +
test eax eax +
jnz loc_1004CFD  +
push ebx  +
push edi  +
push offset String2  +
push dword ptr [esi]  +
call sub_1002179  +
cmp eax 0FFFFFFFFh +
jnz loc_1009895  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-14h] +
push eax  +
call sub_10014CF  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
cmp [ecx+1Ch] ebx +
jnz loc_1004CA3  +
jmp loc_1004C97  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1004D92  +
cmp [ebp+arg_4] 0 +
jz loc_1004D92  +
cmp [ebp+arg_8] 0 +
jle loc_1004D92  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1004D9B  +
test eax eax +
jl loc_1009EC1  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1004D8E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1004DCB  +
cmp edx 7FFFFFFFh +
ja loc_1004DCB  +
test eax eax +
jl loc_1004DC7  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1004DD7  +
pop ebp  +
retn 0Ch  +
mov eax 80070057h +
jmp loc_1004DB1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1004E1C  +
cmp [ebp+arg_4] eax +
jz loc_1004E03  +
mov dl [ebx] +
test dl dl +
jz loc_1004E03  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1004DEB  +
test esi esi +
jz loc_1004E1C  +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_1009DDA  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
jmp loc_1004E07  +
***
call sub_1001E76  +
mov edi ecx +
mov ebx [edi+3Ch] +
mov dword ptr [ebx] 6 +
mov dword ptr [ebx+2D0h] 1001h +
and dword ptr [ebx+4D4h] 0 +
and dword ptr [ebx+4D8h] 0 +
push 65h  +
push 79h  +
call sub_1001C99  +
push eax  +
lea eax [ebx+204h] +
push eax  +
call sub_1001975  +
mov esi 100h +
push esi  +
push 67h  +
call sub_1001C99  +
push eax  +
lea eax [ebx+4] +
push eax  +
call sub_1001975  +
push esi  +
push 71h  +
call sub_1001C99  +
push eax  +
add ebx 2D4h +
push ebx  +
call sub_1001975  +
mov ebx [edi+3Ch] +
add ebx 4DCh +
mov [ebp-14h] ebx +
mov dword ptr [ebx] 1 +
mov dword ptr [ebx+2D0h] 2001h +
and dword ptr [ebx+4D4h] 0 +
and dword ptr [ebx+4D8h] 0 +
push 65h  +
push 79h  +
call sub_1001C99  +
push eax  +
lea eax [ebx+204h] +
push eax  +
call sub_1001975  +
push esi  +
push 68h  +
call sub_1001C99  +
push eax  +
add ebx 4 +
push ebx  +
call sub_1001975  +
push esi  +
mov ebx offset dword_1002294 +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
mov eax [edi+3Ch] +
add eax 9B8h +
mov [ebp-14h] eax +
mov dword ptr [eax] 2 +
mov dword ptr [eax+2D0h] 9 +
mov dword ptr [eax+4D4h] offset loc_100CA48 +
and dword ptr [eax+4D8h] 0 +
push 65h  +
push 7Ah  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 204h +
push eax  +
call sub_1001975  +
push esi  +
push 69h  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 4 +
push eax  +
call sub_1001975  +
push esi  +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
mov eax [edi+3Ch] +
add eax 0E94h +
mov [ebp-14h] eax +
mov dword ptr [eax] 4 +
mov dword ptr [eax+2D0h] 3 +
and dword ptr [eax+4D4h] 0 +
and dword ptr [eax+4D8h] 0 +
push 65h  +
push 7Ah  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 204h +
push eax  +
call sub_1001975  +
push esi  +
push 6Ah  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 4 +
push eax  +
call sub_1001975  +
push esi  +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
mov eax [edi+3Ch] +
add eax 1370h +
mov [ebp-14h] eax +
mov dword ptr [eax] 8 +
mov dword ptr [eax+2D0h] 9 +
mov dword ptr [eax+4D4h] offset loc_100C7A5 +
and dword ptr [eax+4D8h] 0 +
push 65h  +
push 7Ah  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 204h +
push eax  +
call sub_1001975  +
push esi  +
push 6Bh  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 4 +
push eax  +
call sub_1001975  +
push esi  +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
mov eax [edi+3Ch] +
add eax 184Ch +
mov [ebp-14h] eax +
mov dword ptr [eax] 5 +
mov dword ptr [eax+2D0h] 3 +
and dword ptr [eax+4D4h] 0 +
and dword ptr [eax+4D8h] 0 +
push 65h  +
push 7Ah  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 204h +
push eax  +
call sub_1001975  +
push esi  +
push 6Ch  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 4 +
push eax  +
call sub_1001975  +
push esi  +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
mov eax [edi+3Ch] +
add eax 1D28h +
mov [ebp-14h] eax +
mov dword ptr [eax] 7 +
mov dword ptr [eax+2D0h] 9 +
mov dword ptr [eax+4D4h] offset loc_100C932 +
and dword ptr [eax+4D8h] 0 +
push 65h  +
push 79h  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 204h +
push eax  +
call sub_1001975  +
push esi  +
push 6Dh  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 4 +
push eax  +
call sub_1001975  +
push esi  +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
mov eax [edi+3Ch] +
add eax 2204h +
mov [ebp-14h] eax +
mov dword ptr [eax] 0Ah +
mov dword ptr [eax+2D0h] 6001h +
and dword ptr [eax+4D4h] 0 +
and dword ptr [eax+4D8h] 0 +
push 65h  +
push 79h  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 204h +
push eax  +
call sub_1001975  +
push esi  +
push 6Eh  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 4 +
push eax  +
call sub_1001975  +
push esi  +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
mov eax [edi+3Ch] +
add eax 26E0h +
mov [ebp-14h] eax +
mov dword ptr [eax] 9 +
mov dword ptr [eax+2D0h] 2001h +
and dword ptr [eax+4D4h] 0 +
and dword ptr [eax+4D8h] 0 +
push 65h  +
push 79h  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 204h +
push eax  +
call sub_1001975  +
push esi  +
push 6Fh  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 4 +
push eax  +
call sub_1001975  +
push esi  +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
mov eax [edi+3Ch] +
add eax 2BBCh +
mov [ebp-14h] eax +
mov dword ptr [eax] 0Bh +
mov dword ptr [eax+2D0h] 6001h +
and dword ptr [eax+4D4h] 0 +
and dword ptr [eax+4D8h] 0 +
push 65h  +
push 79h  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 204h +
push eax  +
call sub_1001975  +
push esi  +
push 70h  +
call sub_1001C99  +
push eax  +
mov eax [ebp-14h] +
add eax 4 +
push eax  +
call sub_1001975  +
push esi  +
push ebx  +
mov eax [ebp-14h] +
add eax 2D4h +
push eax  +
call sub_1001975  +
lea esi [edi+2Ch] +
push esi  +
push dword ptr [edi+14h]  +
push dword ptr [edi+3Ch]  +
push 0Ah  +
call sub_10038CB  +
test eax eax +
jz loc_1005327  +
xor ebx ebx +
inc ebx  +
cmp dword ptr [edi+38h] 0 +
jnz loc_1005279  +
push 0  +
push ebx  +
push 6Dh  +
call sub_1001C99  +
push eax  +
push ebx  +
push dword ptr [esi]  +
call sub_1005341  +
cmp eax 0FFFFFFFFh +
jnz loc_10098C2  +
cmp dword ptr [edi+34h] 0 +
jnz loc_100529B  +
push 0  +
push ebx  +
push 6Eh  +
call sub_1001C99  +
push eax  +
push ebx  +
push dword ptr [esi]  +
call sub_1005341  +
cmp eax 0FFFFFFFFh +
jnz loc_10098CA  +
cmp dword ptr [edi+28h] 0 +
jnz loc_10052BD  +
push 0  +
push ebx  +
push 70h  +
call sub_1001C99  +
push eax  +
push ebx  +
push dword ptr [esi]  +
call sub_1005341  +
cmp eax 0FFFFFFFFh +
jnz loc_10098D2  +
cmp [edi] ebx +
jz loc_10098DA  +
lea ecx [ebp-1Ch] +
call ??0CHString@@QAE@XZ  +
mov dword ptr [ebp-4] 2 +
mov byte ptr [ebp-4] 3 +
push offset aSelect__pathPr  +
lea ecx [edi+1Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov dword ptr [ebp-24h] offset aWhere_0 +
push dword ptr [esi]  +
call sub_1001C7B  +
mov [ebp-30h] eax +
and dword ptr [edi+64h] 0 +
and dword ptr [ebp-18h] 0 +
mov eax [ebp-18h] +
cmp eax [ebp-30h] +
jl loc_1009952  +
cmp [edi+64h] ebx +
jz loc_1009AD5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn   +
xor eax eax +
jmp loc_1005321  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 20000h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001F19  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push 8007000Eh  +
mov esi ecx +
call ds:SetLastError  +
call sub_1002877  +
call ds:GetCurrentProcessId  +
xor ebx ebx +
mov [esi+20h] eax +
cmp [esi+14h] ebx +
jnz loc_10053A2  +
call sub_1002851  +
mov [esi+14h] eax +
cmp eax ebx +
jz loc_100554C  +
cmp [esi+18h] ebx +
jnz loc_10053B7  +
call sub_1002851  +
mov [esi+18h] eax +
cmp eax ebx +
jz loc_100554C  +
cmp [esi+2Ch] ebx +
jnz loc_10053CC  +
call sub_1002851  +
mov [esi+2Ch] eax +
cmp eax ebx +
jz loc_100554C  +
push edi  +
cmp [esi+3Ch] ebx +
jnz loc_10053F6  +
mov edi 3098h +
push edi  +
call sub_1001617  +
mov [esi+3Ch] eax +
cmp eax ebx +
jz loc_1005550  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov [eax] bl +
inc eax  +
dec edi  +
jnz loc_10053F0  +
cmp [esi+30h] ebx +
jnz loc_100540B  +
call sub_1002851  +
mov [esi+30h] eax +
cmp eax ebx +
jz loc_1005550  +
cmp [esi+54h] ebx +
jnz loc_1005420  +
call sub_1002851  +
mov [esi+54h] eax +
cmp eax ebx +
jz loc_1005550  +
lea eax [esi+40h] +
push eax  +
call sub_100346D  +
test eax eax +
jz loc_1005550  +
push ebx  +
push offset String  +
mov [ebp+lpLibFileName] ebx +
call sub_10013BC  +
mov edi eax +
add edi 10Ah +
lea eax [edi+edi] +
push eax  +
call sub_1001617  +
mov [ebp+lpLibFileName] eax +
cmp eax ebx +
jz loc_1005562  +
push 105h  +
push eax  +
call ds:GetSystemDirectoryW  +
push edi  +
push offset word_10032A8  +
push [ebp+lpLibFileName]  +
call sub_1005623  +
push edi  +
push offset String  +
push [ebp+lpLibFileName]  +
call sub_1005623  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryW  +
mov [esi+70h] eax +
lea eax [ebp+lpLibFileName] +
push eax  +
call sub_10014CF  +
mov eax [esi+70h] +
cmp eax ebx +
jz loc_1005533  +
mov edi ds:GetProcAddress +
push offset ProcName  +
push eax  +
call edi  +
push offset aWinstationclos  +
push dword ptr [esi+70h]  +
mov [esi+90h] eax +
call edi  +
push offset aWinstationopen  +
push dword ptr [esi+70h]  +
mov [esi+98h] eax +
call edi  +
push offset aWinstationfr_0  +
push dword ptr [esi+70h]  +
mov [esi+94h] eax +
call edi  +
push offset aWinstationgeta  +
push dword ptr [esi+70h]  +
mov [esi+9Ch] eax +
call edi  +
push offset aWinstationenum  +
push dword ptr [esi+70h]  +
mov [esi+0A0h] eax +
call edi  +
mov [esi+0A4h] eax +
cmp [esi+90h] ebx +
jz loc_1005554  +
cmp [esi+98h] ebx +
jz loc_1005554  +
cmp [esi+94h] ebx +
jz loc_1005554  +
cmp [esi+9Ch] ebx +
jz loc_1005554  +
cmp [esi+0A0h] ebx +
jz loc_1005554  +
cmp eax ebx +
jz loc_1005554  +
push ebx  +
call ds:SetLastError  +
push offset dword_1002294  +
call sub_100229D  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
xor eax eax +
jmp loc_1005548  +
xor eax eax +
jmp loc_1005547  +
push dword ptr [esi+70h]  +
call ds:FreeLibrary  +
jmp loc_100976E  +
mov [esi+70h] ebx +
jmp loc_1005498  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1005657  +
cmp [ebp+arg_4] 0 +
jz loc_1005657  +
cmp [ebp+arg_8] 0 +
jle loc_1005657  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1005660  +
test eax eax +
jl loc_1009EDF  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1005653  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_10056BF  +
cmp edx ebx +
ja loc_10056BF  +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_10056CF  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_10056C6  +
cmp [eax] cx +
jz loc_1005699  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_100568F  +
cmp esi ecx +
jz loc_10056C6  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
test eax eax +
jl loc_10056B9  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_10019EE  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax 80070057h +
jmp loc_1005679  +
mov [ebp+arg_4] 80070057h +
jmp loc_10056A1  +
xor ecx ecx +
jmp loc_10056A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_1005793  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_1005793  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_10013BC  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_1001A49  +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_100A1A6  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_10013BC  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_1001A49  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_100A1A6  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_10057AF  +
add esp 10h +
test eax eax +
jl loc_100A1B4  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_10057AF  +
add esp 10h +
test eax eax +
jl loc_100A1B4  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1003E15  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
jmp loc_100A1BA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10057E0  +
cmp [ebp+arg_4] 7FFFFFFFh +
ja loc_10057E0  +
test eax eax +
jl loc_10057DE  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_10057EC  +
pop edi  +
pop ebp  +
retn   +
mov eax 80070057h +
jmp loc_10057C4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1005826  +
cmp eax esi +
ja loc_1005826  +
jz loc_100582B  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_1009DE8  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
jmp loc_1005813  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_1005F08  +
movzx eax ds:byte_1005869[eax] +
jmp ds:off_1005861[eax*4]  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_1001A49  +
mov ebx eax +
cmp ebx edi +
jz loc_100A609  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_1005A51  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_10058A5  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jz loc_100A5EB  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1001617  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_1005A51  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jz loc_1005A55  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_1005A55  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_1001A49  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_1005A55  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_10057AF  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_100A624  +
cmp dword ptr [ebp+lpString] edi +
jz loc_1005A55  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_10013BC  +
cmp eax 4 +
jbe loc_100A63B  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1003E15  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_10059E6  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_1005A70 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jnz loc_100A659  +
cmp dword ptr [ebp+lpString] edi +
jz loc_100A69D  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_1001A49  +
mov esi eax +
cmp esi edi +
jz loc_1005A60  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_1001A49  +
mov esi eax +
cmp esi edi +
jz loc_1005A60  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1001C99  +
push eax  +
push 50h  +
push esi  +
call sub_10057AF  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_10014CF  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
xor eax eax +
jmp loc_1005A4A  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10014CF  +
jmp loc_1005A51  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10014CF  +
jmp loc_100A609  +
***
pop ecx  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1005C04  +
push eax  +
call sub_1005C0E  +
test eax eax +
jz loc_1005C04  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jz loc_1009C56  +
cmp ax 3 +
jnz loc_1005C04  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
pop ebp  +
retn   +
***
call sub_1001372  +
xor eax eax +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1005C5D  +
cmp ecx 0FFFFFFFFh +
jz loc_1005C5D  +
and [ebp-4] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1005C56  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1005C56  +
cmp edx 10000000h +
jnb loc_1005C56  +
lea eax [edx+ecx] +
mov [ebp-1Ch] eax +
cmp dword ptr [eax] 4550h +
jnz loc_1009C4C  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_100167C  +
retn 4  +
***
call sub_1005C98  +
jmp sub_1001690  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1013000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jnz loc_1009C5B  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1005D1B  +
test dword_1013000 ebx +
jz loc_1005D1B  +
mov dword_1013000 esi +
not esi  +
mov dword_1013004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
mov esi 0BB40E64Fh +
jmp loc_1005D08  +
***
cmp dword_101301C 0 +
jnz loc_1009C6F  +
call sub_1002851  +
push eax  +
mov dword_101301C eax +
call sub_10018DB  +
test eax eax +
jz loc_1005DA8  +
push 0  +
push offset dword_1005DB4  +
push dword_101301C  +
call sub_1002024  +
test eax eax +
jnz loc_1005DA8  +
push 3  +
push dword_101301C  +
call sub_10027D5  +
cmp eax edi +
jnz loc_1005DA8  +
push 3  +
push dword_101301C  +
call sub_10027D5  +
cmp eax 2 +
jnz loc_1005DA8  +
push 3  +
push dword_101301C  +
call sub_10027D5  +
cmp eax 3 +
jnz loc_1005DA8  +
push 0  +
mov dword_1013018 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
jmp loc_1009C80  +
***
push 10h  +
call sub_1001617  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1003EDE  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_1004D5E  +
push esi  +
push ebx  +
push 3  +
push dword_101301C  +
call sub_1005DFE  +
test eax eax +
jnz loc_1001ABB  +
jmp loc_100A005  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1005E2F  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1005E2F  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1005E38  +
pop ebp  +
retn 10h  +
xor eax eax +
jmp loc_1005E2B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_1005E74  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1005E74  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_1005E78  +
test ecx ecx +
jnz loc_1005E74  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1005E6F  +
test ecx ecx +
jz loc_1005E66  +
jmp loc_1005E69  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1005EB1  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1005EB1  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1005EBB  +
pop ebp  +
retn 0Ch  +
or eax 0FFFFFFFFh +
jmp loc_1005EAD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10018DB  +
test eax eax +
jz loc_1005F03  +
push 4  +
call sub_1001617  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1005F03  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1002097  +
cmp eax 0FFFFFFFFh +
jz loc_100A382  +
leave   +
retn 8  +
or eax 0FFFFFFFFh +
jmp locret_1005EFF  +
***
xor eax eax +
jmp loc_100585D  +
***
cmp [ebp+lpString2] 0 +
jnz loc_100467A  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
jmp loc_1004815  +
cmp eax 0FFFFFFFFh +
jz loc_10047FD  +
jmp loc_1004815  +
call ds:GetLastError  +
jmp loc_10046BC  +
***
cmp eax [esi+1Ch] +
jnz loc_1004078  +
jmp loc_100A7A0  +
mov eax [ebp+var_4] +
jmp loc_1003FB9  +
push 57h  +
call edi  +
call sub_1002877  +
jmp loc_100A6DA  +
xor edi edi +
jmp loc_1003FD4  +
mov [ebp+arg_8] 1 +
jmp loc_1005F77  +
mov [ebp+arg_8] ecx +
xor edi edi +
jmp loc_1004042  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1005FB4  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1005FB4  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100267F  +
pop ebp  +
retn 10h  +
xor eax eax +
jmp loc_1005FB0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1005FEE  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1005FEE  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1002707  +
pop ebp  +
retn 10h  +
xor eax eax +
jmp loc_1005FEA  +
***
push [ebp+hWnd]  +
call ds:IsHungAppWindow  +
push [ebp+hWnd]  +
mov [ebp+var_210] eax +
push 3  +
push esi  +
push ebx  +
call sub_1005FBD  +
push [ebp+var_210]  +
push 5  +
push esi  +
push ebx  +
call sub_100616F  +
push [ebp+dwProcessId]  +
push 0  +
push esi  +
push ebx  +
call sub_1005F83  +
push 0  +
push dword ptr [edi+4]  +
push 1  +
push esi  +
push ebx  +
call sub_1001531  +
push 0  +
push dword ptr [edi]  +
push 2  +
push esi  +
push ebx  +
call sub_1001531  +
push 100h  +
lea eax [ebp+String] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowTextW  +
test eax eax +
jz loc_1006146  +
push 0  +
lea eax [ebp+String] +
push eax  +
push 4  +
push esi  +
push ebx  +
call sub_1001531  +
jmp loc_1006146  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
push 1FCh  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+hWnd] esi +
mov [ebp+dwProcessId] ebx +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_1006166  +
cmp edi ebx +
jz loc_1006166  +
mov ebx [edi+0Ch] +
lea eax [ebp+dwProcessId] +
push eax  +
push esi  +
call ds:GetWindowThreadProcessId  +
test eax eax +
jz loc_1006146  +
push 0FFFFFFF0h  +
push esi  +
call ds:GetWindowLongW  +
test eax 10000000h +
jnz loc_100610C  +
xor eax eax +
inc eax  +
cmp [edi+8] eax +
jz loc_1006149  +
push 4  +
push esi  +
call ds:GetWindow  +
test eax eax +
jnz loc_1006146  +
push [ebp+dwProcessId]  +
push eax  +
push ebx  +
call sub_10026E1  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_100615A  +
push 3  +
push esi  +
push ebx  +
call sub_1002769  +
test eax eax +
jz loc_100613D  +
or esi 0FFFFFFFFh +
cmp esi 0FFFFFFFFh +
jnz loc_1005FF2  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 8  +
push 6  +
push ebx  +
call sub_10027D5  +
mov esi eax +
jmp loc_100613D  +
xor eax eax +
jmp loc_1006149  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_10061A0  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10061A0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10061A9  +
pop ebp  +
retn 10h  +
xor eax eax +
jmp loc_100619C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
mov esi eax +
test esi esi +
jz loc_10061FC  +
mov eax [esi+4] +
cmp eax 50000h +
jz loc_1006200  +
test eax eax +
jnz loc_10061FC  +
push 4  +
call sub_1001617  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_10061FC  +
mov dword ptr [esi+4] 50000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_10061F7  +
test eax eax +
jz loc_10061D0  +
jmp loc_10061EC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpszWinSta] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_10062A9  +
mov esi [ebp+hWinSta] +
test esi esi +
jz loc_10062A9  +
call ds:GetProcessWindowStation  +
push 2000000h  +
push 0  +
push [ebp+lpszWinSta]  +
mov [ebp+hWinSta] eax +
call ds:OpenWindowStationW  +
mov ebx eax +
test ebx ebx +
jz loc_1007D6D  +
mov edi ds:SetProcessWindowStation +
cmp ebx [ebp+hWinSta] +
jz loc_1006261  +
push ebx  +
call edi  +
test eax eax +
jz loc_1007D6D  +
mov eax [esi+4] +
test eax eax +
jnz loc_1007D77  +
push [ebp+lpszWinSta]  +
call ds:_wcsdup  +
pop ecx  +
mov [esi+4] eax +
test eax eax +
jz loc_1007D88  +
push esi  +
push offset sub_10062B2  +
push ebx  +
call ds:EnumDesktopsW  +
cmp ebx [ebp+hWinSta] +
jz loc_100629F  +
push [ebp+hWinSta]  +
call edi  +
push ebx  +
call ds:CloseWindowStation  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_10062A2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp [ebp+lpszDesktop] ebx +
jz loc_10064CF  +
mov edi [ebp+hDesktop] +
cmp edi ebx +
jz loc_10064CF  +
call ds:GetCurrentThreadId  +
push eax  +
call ds:GetThreadDesktop  +
push 2000000h  +
push ebx  +
push ebx  +
push [ebp+lpszDesktop]  +
mov [ebp+hDesktop] eax +
call ds:OpenDesktopW  +
mov esi eax +
mov [ebp+var_4] esi +
cmp esi ebx +
jz loc_10064CA  +
cmp esi [ebp+hDesktop] +
jz loc_1006312  +
push esi  +
call ds:SetThreadDesktop  +
test eax eax +
jz loc_10064CA  +
mov eax [edi] +
cmp eax ebx +
jnz loc_1007BB8  +
push [ebp+lpszDesktop]  +
call ds:_wcsdup  +
pop ecx  +
mov [edi] eax +
cmp eax ebx +
jz loc_1007BC7  +
mov ebx ds:EnumWindows +
push edi  +
mov esi offset sub_1006088 +
push esi  +
mov dword ptr [edi+8] 1 +
call ebx  +
push edi  +
push esi  +
call sub_1006399  +
and dword ptr [edi+8] 0 +
push edi  +
push esi  +
call ebx  +
push edi  +
push esi  +
call sub_1006399  +
mov eax [ebp+hDesktop] +
cmp [ebp+var_4] eax +
jz loc_1006374  +
push eax  +
call ds:SetThreadDesktop  +
push [ebp+var_4]  +
call ds:CloseDesktop  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
cmp [ebp+arg_0] esi +
jz loc_10063D6  +
cmp [ebp+arg_4] esi +
jz loc_10063D6  +
push 0  +
push 0  +
push esi  +
push 0FFFFFFFDh  +
call ds:FindWindowExW  +
mov esi eax +
test esi esi +
jz loc_10063CE  +
push [ebp+arg_4]  +
push esi  +
call [ebp+arg_0]  +
mov edi eax +
test edi edi +
jnz loc_10063AE  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_10063D0  +
***
call sub_1001E76  +
mov esi ecx +
xor ebx ebx +
cmp [esi+28h] ebx +
jnz loc_1007C04  +
cmp [esi+38h] ebx +
jnz loc_1007C04  +
cmp [esi+34h] ebx +
jnz loc_1007C04  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn   +
***
call sub_1001E76  +
mov esi ecx +
lea ecx [ebp-1Ch] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-4Ch] ebx +
mov [ebp-48h] ebx +
mov [ebp-70h] ebx +
mov [ebp-74h] ebx +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
push ebx  +
call ds:SetLastError  +
xor edi edi +
inc edi  +
mov byte ptr [ebp-4] 1 +
mov [ebp-6Ch] ebx +
mov [ebp-3Ch] ebx +
push dword ptr [esi+2Ch]  +
call sub_1001C7B  +
mov [ebp-7Ch] eax +
push dword ptr [esi+18h]  +
call sub_1001C7B  +
mov [ebp-28h] eax +
call sub_1002851  +
mov [ebp-14h] eax +
call sub_1002851  +
mov [ebp-18h] eax +
cmp eax ebx +
jz loc_100860E  +
cmp [ebp-14h] ebx +
jz loc_100860E  +
push ebx  +
push edi  +
push offset String2  +
push dword ptr [esi+18h]  +
call sub_1002179  +
mov [ebp-20h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10085D2  +
mov [ebp-58h] ebx +
cmp dword ptr [ebp-58h] 5 +
jnb loc_1001E04  +
mov eax [ebp-58h] +
mov [ebp+eax*4-98h] ebx +
inc dword ptr [ebp-58h]  +
jmp loc_10064B1  +
***
call sub_1002877  +
xor eax eax +
jmp loc_1006377  +
***
call sub_100133D  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 5 +
lea edi [esi+54h] +
xor ebx ebx +
cmp [edi] ebx +
jz loc_1006504  +
push edi  +
call sub_1001454  +
mov [edi] ebx +
lea edi [esi+14h] +
cmp [edi] ebx +
jz loc_1006513  +
push edi  +
call sub_1001454  +
mov [edi] ebx +
lea edi [esi+2Ch] +
cmp [edi] ebx +
jz loc_1006522  +
push edi  +
call sub_1001454  +
mov [edi] ebx +
lea edi [esi+30h] +
cmp [edi] ebx +
jz loc_1006531  +
push edi  +
call sub_1001454  +
mov [edi] ebx +
lea edi [esi+18h] +
cmp [edi] ebx +
jz loc_1006540  +
push edi  +
call sub_1001454  +
mov [edi] ebx +
lea eax [esi+3Ch] +
cmp [eax] ebx +
jz loc_100654D  +
push eax  +
call sub_10014CF  +
mov eax [esi+40h] +
cmp eax ebx +
jz loc_100655D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+40h] ebx +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_100656D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+44h] ebx +
mov eax [esi+48h] +
cmp eax ebx +
jz loc_100657D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+48h] ebx +
mov eax [esi+4Ch] +
cmp eax ebx +
jz loc_100658D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+4Ch] ebx +
lea eax [esi+50h] +
push eax  +
call sub_100131C  +
cmp dword ptr [esi+7Ch] 1 +
jz loc_1009738  +
lea eax [esi+84h] +
push eax  +
call sub_10014CF  +
lea eax [esi+8Ch] +
push eax  +
call sub_10014CF  +
mov ecx [esi+6Ch] +
cmp ecx ebx +
jnz loc_10065CA  +
mov eax [esi+74h] +
cmp eax ebx +
jnz loc_1009745  +
cmp ecx 1 +
jz loc_1009753  +
mov eax [esi+70h] +
cmp eax ebx +
jz loc_1006608  +
push eax  +
call ds:FreeLibrary  +
mov [esi+70h] ebx +
mov [esi+90h] ebx +
mov [esi+94h] ebx +
mov [esi+98h] ebx +
mov [esi+9Ch] ebx +
mov [esi+0A0h] ebx +
mov [esi+0A4h] ebx +
call ds:CoUninitialize  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+68h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+5Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+1Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+10h] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [esi+0Ch] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+8] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov [ecx] esi +
jmp loc_1001BE4  +
xor eax eax +
jmp loc_1001BE5  +
***
cmp eax 90000h +
jz loc_1001427  +
jmp loc_100A1D0  +
cmp eax 0B0000h +
jz loc_1001427  +
jmp loc_1001430  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_10066BC  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10066BC  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1006770  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_10066B8  +
***
push esi  +
push 3  +
push dword_101301C  +
call sub_1001B38  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100673F  +
add eax 0Ch +
push eax  +
call sub_10014CF  +
lea eax [ebp+var_4] +
push eax  +
call sub_10014CF  +
push esi  +
push 3  +
push dword_101301C  +
call sub_100668E  +
jmp loc_100673F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_101301C  +
call sub_10018DB  +
cmp eax 1 +
jnz loc_1006751  +
push edi  +
push 3  +
push dword_101301C  +
call sub_1001C47  +
mov edi eax +
test edi edi +
jz loc_1006746  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_101301C  +
call sub_1001BEE  +
cmp eax 10000h +
jz loc_10066C0  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_100672A  +
pop esi  +
push offset dword_101301C  +
call sub_1001454  +
pop edi  +
cmp dword_1013488 1 +
jz loc_1009EB6  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edx [eax+10h] +
mov [esi+8] edx +
jmp loc_10067A7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_1001BA4  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10067C1  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1006763  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
cmp eax [esi+0Ch] +
jz loc_10067C6  +
dec dword ptr [esi+4]  +
push eax  +
call sub_1001406  +
lea eax [ebp+var_4] +
push eax  +
call sub_10014CF  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
mov [esi+0Ch] ecx +
jmp loc_10067AC  +
***
mov eax [ebp-5Ch] +
cmp eax [ebp-74h] +
jnb loc_1006988  +
cmp [esi] edi +
jz loc_10085FE  +
push dword ptr [esi+54h]  +
call sub_100147F  +
push 12h  +
push dword ptr [esi+54h]  +
call sub_1001FC1  +
mov edi [ebp-5Ch] +
lea edi [ebp+edi*4-98h] +
push dword ptr [edi]  +
mov ecx esi +
call sub_1006E89  +
mov eax [edi] +
cmp eax ebx +
jz loc_1006812  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi] ebx +
cmp [ebp-7Ch] ebx +
jnz loc_10086E1  +
xor edi edi +
inc edi  +
inc dword ptr [ebp-30h]  +
or dword ptr [ebp-20h] 0FFFFFFFFh +
mov [ebp-34h] ebx +
mov [ebp-2Ch] ebx +
cmp [ebp-28h] ebx +
jz loc_10078F2  +
lea eax [ebp-48h] +
push eax  +
mov ecx esi +
call sub_1006C83  +
mov [ebp-20h] eax +
cmp eax 0FFFFFFFFh +
jz loc_10078FB  +
cmp [ebp-48h] edi +
jnz loc_1006861  +
mov [ebp-2Ch] edi +
push dword ptr [ebp-20h]  +
push dword ptr [esi+18h]  +
call sub_1001DCB  +
mov [ebp-34h] eax +
cmp [ebp-70h] ebx +
jnz loc_1006870  +
cmp dword ptr [ebp-20h] 0FFFFFFFFh +
jz loc_10078DC  +
cmp [esi] edi +
jz loc_100878E  +
mov ecx esi +
call sub_1007265  +
cmp eax edi +
jnz loc_10087DF  +
inc dword ptr [ebp-40h]  +
cmp [ebp-2Ch] edi +
jnz loc_10087A9  +
cmp [esi+0ACh] edi +
jnz loc_100758D  +
cmp [esi+4] ebx +
jnz loc_100758D  +
push dword ptr [esi+58h]  +
push dword ptr [esi+5Ch]  +
push 1F8h  +
call sub_1001C99  +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 10h +
push dword ptr [ebp-1Ch]  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_10069FD  +
cmp [ebp-2Ch] edi +
jnz loc_1008848  +
lea ecx [ebp-64h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
push dword ptr [esi+58h]  +
push offset aLd  +
lea eax [ebp-64h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
push ebx  +
push edi  +
push dword ptr [ebp-64h]  +
push dword ptr [esi+18h]  +
call sub_1002179  +
cmp eax 0FFFFFFFFh +
jnz loc_1008831  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-64h] +
call ??1CHString@@QAE@XZ  +
cmp [ebp-34h] ebx +
jz loc_1006948  +
push ebx  +
push edi  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-18h]  +
call sub_1002179  +
cmp eax 0FFFFFFFFh +
jnz loc_1006948  +
inc dword ptr [ebp-3Ch]  +
push ebx  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-18h]  +
call sub_1002024  +
cmp dword ptr [ebp-20h] 0FFFFFFFFh +
jz loc_100695C  +
dec dword ptr [ebp-28h]  +
push dword ptr [ebp-20h]  +
push dword ptr [esi+18h]  +
call sub_1006770  +
cmp [esi] ebx +
jnz loc_1006973  +
cmp [ebp-70h] ebx +
jnz loc_1006973  +
cmp [ebp-28h] ebx +
jnz loc_1006973  +
cmp [ebp-3Ch] ebx +
jz loc_1008881  +
inc dword ptr [ebp-5Ch]  +
xor edi edi +
inc edi  +
jmp loc_10067CB  +
***
cmp [ebp-6Ch] ebx +
jz loc_1001E12  +
cmp [ebp-30h] ebx +
jz loc_100699F  +
cmp [ebp-40h] ebx +
jz loc_1008889  +
xor eax eax +
inc eax  +
cmp [esi] eax +
jz loc_1008897  +
mov [ebp-4] ebx +
cmp [ebp-14h] ebx +
jz loc_10069BE  +
lea eax [ebp-14h] +
push eax  +
call sub_1001454  +
mov [ebp-14h] ebx +
cmp [ebp-18h] ebx +
jz loc_10069CF  +
lea eax [ebp-18h] +
push eax  +
call sub_1001454  +
mov [ebp-18h] ebx +
cmp [ebp-30h] ebx +
jz loc_100759D  +
cmp [ebp-28h] ebx +
jnz loc_10075BE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
and eax 90900073h +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jz loc_1009CDE  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_10079CE  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_10079CE  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jz loc_100798F  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push 9Bh  +
mov esi ecx +
call sub_1001C99  +
push eax  +
push 6  +
push dword ptr [esi+54h]  +
call sub_100156E  +
push dword ptr [esi+58h]  +
push ebx  +
push dword ptr [esi+30h]  +
call sub_10026E1  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1006C7A  +
push 4  +
push edi  +
push dword ptr [esi+30h]  +
call sub_1001D94  +
cmp eax ebx +
jz loc_1006C00  +
push ebx  +
push eax  +
push 9  +
push dword ptr [esi+54h]  +
call sub_100156E  +
push 1  +
push edi  +
push dword ptr [esi+30h]  +
call sub_1001D94  +
cmp eax ebx +
jz loc_1006C1B  +
push ebx  +
push eax  +
push 0Dh  +
push dword ptr [esi+54h]  +
call sub_100156E  +
push 2  +
push edi  +
push dword ptr [esi+30h]  +
call sub_1001D94  +
cmp eax ebx +
jz loc_1006C36  +
push ebx  +
push eax  +
push 0Eh  +
push dword ptr [esi+54h]  +
call sub_100156E  +
push 3  +
push edi  +
push dword ptr [esi+30h]  +
call sub_1002769  +
cmp eax ebx +
jz loc_1006C7A  +
push eax  +
push 0Ch  +
push dword ptr [esi+54h]  +
call sub_1002707  +
push 5  +
push edi  +
push dword ptr [esi+30h]  +
call sub_10074C7  +
push ebx  +
cmp eax 1 +
jz loc_1007985  +
push 97h  +
call sub_1001C99  +
push eax  +
push 6  +
push dword ptr [esi+54h]  +
call sub_100156E  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
push dword ptr [edi+18h]  +
call sub_1001C7B  +
and [ebp+var_4] 0 +
mov [ebp+var_C] eax +
test eax eax +
jle loc_1006D12  +
push [ebp+var_4]  +
push dword ptr [edi+18h]  +
call sub_1001DCB  +
mov ebx eax +
xor esi esi +
cmp ebx esi +
jz loc_1006D12  +
mov eax [ebp+arg_0] +
push esi  +
push 0Ah  +
push ebx  +
mov dword ptr [eax] 2 +
call sub_1002400  +
test eax eax +
jnz loc_1007FED  +
push 0  +
push 2Ah  +
push ebx  +
call sub_1002375  +
mov [ebp+lpString] eax +
test eax eax +
jnz loc_1007FFA  +
mov eax [ebp+arg_0] +
xor ecx ecx +
push esi  +
inc ecx  +
push ecx  +
mov [eax] ecx +
mov eax [edi+5Ch] +
push ebx  +
push eax  +
call sub_1002221  +
test eax eax +
jnz loc_1008026  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
cmp [edi+58h] eax +
jnz loc_1006CD0  +
jmp loc_1006D01  +
or eax 0FFFFFFFFh +
jmp loc_1006D04  +
***
call sub_1001E76  +
mov edi ecx +
lea ecx [ebp-1Ch] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-20h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
mov [ebp-24h] ebx +
cmp [edi+38h] ebx +
jnz loc_1008054  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-20h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call sub_1001E76  +
mov edi ecx +
mov [ebp-44h] edi +
lea ecx [ebp-1Ch] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-38h] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-14h] ebx +
cmp [edi+34h] ebx +
jnz loc_1008242  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+28h] 0 +
jnz loc_1008518  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
call sub_100133D  +
mov esi ecx +
mov edi [ebp+8] +
and dword ptr [esi] 0 +
cmp word ptr [edi] 8 +
jnz loc_1008D67  +
push dword ptr [edi+8]  +
call sub_1002101  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
cmp edi 100h +
jbe loc_10024CA  +
lea ecx [edi+edi] +
cmp ecx eax +
jb loc_10024AA  +
jmp loc_10024CA  +
call ds:GetLastError  +
jmp loc_100A17A  +
xor eax eax +
inc eax  +
jmp loc_1002551  +
call ds:GetLastError  +
jmp loc_100A191  +
***
call sub_1001E76  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor eax eax +
mov [ebp-4] eax +
mov [ebp-18h] eax +
mov byte ptr [ebp-4] 1 +
lea edi [esi+58h] +
push eax  +
push edi  +
push offset aProcessid  +
mov ebx [ebp+8] +
push ebx  +
call sub_1007375  +
push dword ptr [edi]  +
push 2  +
push dword ptr [esi+54h]  +
call sub_100267F  +
mov edi 138Dh +
push edi  +
call sub_1001C99  +
push eax  +
lea eax [esi+5Ch] +
push eax  +
push offset aCaption  +
push ebx  +
call sub_1006FD7  +
mov eax [esi+5Ch] +
push 0  +
push eax  +
push 1  +
push dword ptr [esi+54h]  +
call sub_100156E  +
push edi  +
call sub_1001C99  +
push eax  +
lea eax [ebp-14h] +
push eax  +
push offset a__path  +
push ebx  +
call sub_1006FD7  +
push 0  +
push dword ptr [ebp-14h]  +
push 10h  +
push dword ptr [esi+54h]  +
call sub_100156E  +
push edi  +
call sub_1001C99  +
push eax  +
lea eax [ebp-14h] +
push eax  +
push offset aCsname  +
push ebx  +
call sub_1006FD7  +
xor edi edi +
push edi  +
push dword ptr [ebp-14h]  +
push edi  +
push dword ptr [esi+54h]  +
call sub_100156E  +
push edi  +
lea eax [ebp-18h] +
push eax  +
push offset aParentprocessi  +
push ebx  +
call sub_1007375  +
push dword ptr [ebp-18h]  +
push 0Fh  +
push dword ptr [esi+54h]  +
call sub_100267F  +
push ebx  +
mov ecx esi +
call sub_1006D1C  +
push ebx  +
mov ecx esi +
call sub_10070AF  +
mov ecx esi +
call sub_1006BAF  +
mov ecx esi +
call sub_1006DA3  +
mov ecx esi +
call sub_1006E01  +
cmp dword ptr [esi] 1 +
jz loc_100858E  +
mov [ebp-4] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call sub_1001E76  +
lea eax [ebp-24h] +
push eax  +
call ds:VariantInit  +
xor esi esi +
mov [ebp-4] esi +
mov ecx [ebp+10h] +
call ?Empty@CHString@@QAEXXZ  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+14h]  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
cmp [ebp+8] esi +
jz loc_100965F  +
cmp [ebp+0Ch] esi +
jz loc_100965F  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1007408  +
cmp eax esi +
jl loc_100966E  +
push 8  +
pop eax  +
cmp ax [ebp-24h] +
jnz loc_100706F  +
lea eax [ebp-24h] +
push eax  +
lea ecx [ebp+0Ch] +
call sub_1006E1A  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_100708E  +
mov eax [eax] +
mov eax [eax] +
push eax  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+0Ch] +
cmp ecx esi +
jz loc_100706F  +
call sub_10023A2  +
mov [ebp+0Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1007097  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 10h  +
xor eax eax +
jmp loc_1007053  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jl loc_1007FE7  +
pop ebp  +
retn 4  +
***
call sub_1001E76  +
mov edi ecx +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor esi esi +
mov [ebp-4] esi +
mov [ebp-2Ch] esi +
mov [ebp-28h] esi +
mov [ebp-24h] esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-1Ch] +
push eax  +
push offset aKernelmodetime  +
push dword ptr [ebp+8]  +
call sub_10071CF  +
lea eax [ebp-24h] +
push eax  +
push offset aUsermodetime  +
push dword ptr [ebp+8]  +
call sub_10071CF  +
mov eax [ebp-1Ch] +
add eax [ebp-24h] +
mov ecx [ebp-18h] +
adc ecx [ebp-20h] +
mov [ebp-2Ch] eax +
mov [ebp-28h] ecx +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
call ds:RtlTimeToElapsedTimeFields  +
mov eax [ebp-38h] +
imul eax eax +
add eax [ebp-36h] +
mov [ebp-36h] ax +
movsx ecx word ptr [ebp-32h] +
push ecx  +
movsx ecx word ptr [ebp-34h] +
push ecx  +
cwde   +
push eax  +
push offset aD02d02d  +
lea eax [ebp-14h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 14h +
push esi  +
push dword ptr [ebp-14h]  +
push 8  +
push dword ptr [edi+54h]  +
call sub_100156E  +
mov [ebp-4] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call sub_1001E76  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [ebp-14h] +
call ?Empty@CHString@@QAEXXZ  +
xor ebx ebx +
inc ebx  +
mov [ebp-4] bl +
mov esi [ebp+10h] +
mov [esi] ebx +
mov [esi+4] edi +
cmp [ebp+8] edi +
jz loc_1007770  +
cmp [ebp+0Ch] edi +
jz loc_1007770  +
push offset dword_100725C  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1006FD7  +
test eax eax +
jz loc_100777A  +
push dword ptr [ebp-14h]  +
call ds:_wtoi64  +
pop ecx  +
mov [esi] eax +
mov [esi+4] edx +
cmp eax edi +
jz loc_1007763  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100729B  +
test eax eax +
jz loc_1008510  +
cmp dword ptr [esi+0ACh] 1 +
mov ecx esi +
jnz loc_1008512  +
cmp dword ptr [esi+4] 0 +
pop esi  +
jz loc_1007624  +
jmp loc_100752A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ecx+58h] +
mov [ebp+lpString1] offset aCsrss_exe +
mov [ebp+var_C] offset aSmss_exe +
mov [ebp+var_8] offset aServices_exe +
mov [ebp+var_4] offset aWinlogon_exe +
test eax eax +
jz loc_1007F9E  +
cmp eax [ecx+20h] +
jz loc_1007FB2  +
push edi  +
push 1  +
push dword ptr [ecx+54h]  +
call sub_1001DCB  +
mov edi eax +
test edi edi +
jz loc_1007FB9  +
push esi  +
xor esi esi +
push 0  +
push 1  +
push edi  +
push [ebp+esi*4+lpString1]  +
call sub_1002221  +
test eax eax +
jz loc_1007FD0  +
inc esi  +
cmp esi 4 +
jb loc_10072EB  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
leave   +
retn   +
***
call sub_1001E76  +
lea eax [ebp-24h] +
push eax  +
call ds:VariantInit  +
xor edi edi +
mov [ebp-4] edi +
mov byte ptr [ebp-4] 1 +
mov esi [ebp+10h] +
mov eax [ebp+14h] +
mov [esi] eax +
cmp [ebp+8] edi +
jz loc_10096BA  +
cmp [ebp+0Ch] edi +
jz loc_10096BA  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1007408  +
cmp eax edi +
jl loc_10096C9  +
movzx eax word ptr [ebp-24h] +
dec eax  +
dec eax  +
jz loc_10073FD  +
dec eax  +
jnz loc_10096D4  +
mov eax [ebp-1Ch] +
mov [esi] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1007097  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 10h  +
dec eax  +
jz loc_10073D4  +
jmp loc_10073D9  +
movsx eax word ptr [ebp-1Ch] +
jmp loc_10073D7  +
***
call sub_1001E76  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jz loc_1007497  +
cmp [ebp+0Ch] ebx +
jz loc_1007497  +
mov [ebp-4] ebx +
lea eax [ebp-28h] +
push eax  +
call ds:VariantInit  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp+0Ch] +
call sub_1002329  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_1007493  +
mov eax [eax] +
mov eax [eax] +
mov ecx [esi] +
push ebx  +
push ebx  +
lea edx [ebp-28h] +
push edx  +
push ebx  +
push eax  +
push esi  +
call dword ptr [ecx+10h]  +
mov [ebp-14h] eax +
mov [ebp-4] bl +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_1007469  +
call sub_10023A2  +
mov [ebp+0Ch] ebx +
lea eax [ebp-28h] +
push eax  +
cmp [ebp-14h] ebx +
jl loc_1007482  +
mov ecx [ebp+10h] +
call sub_10074A3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-28h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 0Ch  +
xor eax eax +
jmp loc_1007446  +
mov eax 80041008h +
jmp loc_100748B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+pvargSrc]  +
mov esi ecx +
push esi  +
call ds:VariantCopy  +
push eax  +
call sub_1007097  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_10074F5  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10074F5  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10074FE  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_10074F1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_1007526  +
cmp dword ptr [eax+4] 50000h +
jnz loc_1007526  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_1007522  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
push dword ptr [ecx+58h]  +
push 0  +
push 401h  +
call ds:OpenProcess  +
mov esi eax +
test esi esi +
jz loc_1007F5D  +
lea eax [ebp-4] +
push eax  +
push esi  +
call ds:GetExitCodeProcess  +
test eax eax +
jz loc_1007F7F  +
cmp dword ptr [ebp-4] 103h +
jnz loc_1007F88  +
push 1  +
push esi  +
call ds:TerminateProcess  +
push esi  +
test eax eax +
jz loc_1007F96  +
call ds:CloseHandle  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn   +
***
push dword ptr [esi+58h]  +
push dword ptr [esi+5Ch]  +
push 1F7h  +
jmp loc_10068B3  +
cmp [ebp-28h] ebx +
jz loc_1008AAD  +
cmp dword ptr [esi+64h] 1 +
jz loc_1008AAD  +
cmp [ebp-7Ch] ebx +
jz loc_10069D8  +
jmp loc_1008AAD  +
xor edi edi +
jmp loc_10075D0  +
cmp [ebp-2Ch] edi +
jz loc_1006922  +
jmp loc_1006948  +
cmp edi [ebp-28h] +
jnb loc_1007616  +
push edi  +
push dword ptr [esi+18h]  +
call sub_1001DCB  +
cmp eax ebx +
jz loc_1007613  +
mov byte ptr [ebp-4] 4 +
push eax  +
push 1FBh  +
call sub_1001C99  +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
push dword ptr [ebp-1Ch]  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_10069FD  +
mov [ebp-4] ebx +
inc edi  +
jmp loc_10075D0  +
mov eax [ebp+8] +
mov dword ptr [eax] 80h +
jmp loc_10069E1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor edi edi +
push offset dword_1002294  +
mov esi ecx +
mov [ebp-8] edi +
mov [ebp-18h] edi +
call sub_100229D  +
push dword ptr [esi+58h]  +
push edi  +
push 1  +
call ds:OpenProcess  +
cmp eax edi +
jz loc_1007F00  +
push eax  +
call ds:CloseHandle  +
push 0Ch  +
push dword ptr [esi+54h]  +
call sub_10027A0  +
push 0Eh  +
push dword ptr [esi+54h]  +
mov [ebp-10h] eax +
call sub_1001DCB  +
push 0Dh  +
push dword ptr [esi+54h]  +
mov [ebp-0Ch] eax +
call sub_1001DCB  +
mov esi eax +
cmp [ebp-10h] edi +
jz loc_1007F0C  +
push ebx  +
call ds:GetProcessWindowStation  +
mov [ebp-4] eax +
call ds:GetCurrentThreadId  +
push eax  +
call ds:GetThreadDesktop  +
mov ebx ds:SetProcessWindowStation +
mov [ebp-14h] eax +
cmp esi edi +
jz loc_10076D8  +
push 101h  +
push 0  +
push esi  +
call ds:OpenWindowStationW  +
mov edi eax +
test edi edi +
jz loc_1007F47  +
cmp edi [ebp-4] +
jz loc_10076D8  +
push edi  +
call ebx  +
test eax eax +
jz loc_1007F40  +
cmp dword ptr [ebp-0Ch] 0 +
mov esi ds:SetThreadDesktop +
jz loc_100770E  +
push 40h  +
push 0  +
push 0  +
push dword ptr [ebp-0Ch]  +
call ds:OpenDesktopW  +
mov [ebp-8] eax +
test eax eax +
jz loc_1007F32  +
cmp eax [ebp-14h] +
jz loc_100770E  +
push eax  +
call esi  +
test eax eax +
jz loc_1007F29  +
push 0  +
push 0  +
push 10h  +
push dword ptr [ebp-10h]  +
call ds:PostMessageW  +
test eax eax +
jz loc_1007F53  +
mov dword ptr [ebp-18h] 1 +
cmp dword ptr [ebp-8] 0 +
jz loc_1007746  +
mov eax [ebp-14h] +
cmp [ebp-8] eax +
jz loc_1007746  +
push eax  +
call esi  +
push dword ptr [ebp-8]  +
call ds:CloseDesktop  +
test edi edi +
jz loc_100775B  +
cmp edi [ebp-4] +
jz loc_100775B  +
push dword ptr [ebp-4]  +
call ebx  +
push edi  +
call ds:CloseWindowStation  +
mov eax [ebp-18h] +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
cmp edx edi +
jnz loc_1007243  +
mov [esi] ebx +
mov [esi+4] edi +
push 80041008h  +
call sub_1007792  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
jmp loc_1007251  +
***
call sub_1001E76  +
xor edi edi +
mov [ebp-18h] edi +
mov [ebp-14h] edi +
mov [ebp-4] edi +
mov byte ptr [ebp-4] 1 +
mov ebx [ebp+8] +
cmp ebx 80070005h +
jz loc_1008DA3  +
cmp ebx 80040154h +
jz loc_1008DAD  +
lea eax [ebp-18h] +
push eax  +
push offset stru_1007888  +
push 1  +
push edi  +
push offset stru_1007898  +
call ds:CoCreateInstance  +
cmp eax edi +
jl loc_100787D  +
mov [ebp-1Ch] edi +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push edi  +
push edi  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp [ebp-1Ch] edi +
jz loc_1007835  +
push dword ptr [ebp-1Ch]  +
lea ecx [ebp-24h] +
call sub_1002329  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-14h] +
call sub_10078AD  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-24h] +
cmp ecx edi +
jz loc_100782C  +
call sub_10023A2  +
mov [ebp-24h] edi +
push dword ptr [ebp-1Ch]  +
call ds:SysFreeString  +
cmp esi edi +
jl loc_1008DE9  +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_100784D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
mov [ebp-4] edi +
mov esi [ebp-14h] +
cmp esi edi +
jz loc_1007879  +
mov eax [esi] +
push eax  +
call sub_100229D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp esi edi +
jz loc_1007871  +
mov ecx esi +
call sub_10023A2  +
mov [ebp-14h] edi +
call __EH_epilog3  +
retn 4  +
xor eax eax +
jmp loc_1007859  +
push ebx  +
call sub_100CAF3  +
jmp loc_100784D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
test eax eax +
jz loc_10078C9  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov ecx edi +
call sub_1001E4E  +
mov eax [esi] +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp [ebp-2Ch] ebx +
jnz loc_1006870  +
jmp loc_100877E  +
***
mov eax [ebp+arg_0] +
jmp loc_1002215  +
***
cmp [ebp-3Ch] ebx +
jz loc_1006861  +
cmp [ebp-3Ch] ebx +
jz loc_1006861  +
mov [ebp-78h] ebx +
push edi  +
push dword ptr [esi+54h]  +
call sub_1001DCB  +
mov [ebp-80h] eax +
cmp eax ebx +
jz loc_100871F  +
mov [ebp-68h] ebx +
mov eax [ebp-68h] +
cmp eax [ebp-3Ch] +
jnb loc_1006861  +
push eax  +
push dword ptr [ebp-18h]  +
call sub_1001DCB  +
mov [ebp-60h] eax +
cmp eax ebx +
jz loc_100871F  +
xor edi edi +
mov [ebp-78h] edi +
push ebx  +
push 2Ah  +
push eax  +
call sub_1002375  +
mov [ebp-54h] eax +
cmp eax ebx +
jnz loc_1008750  +
push edi  +
push 1  +
push dword ptr [ebp-60h]  +
push dword ptr [ebp-80h]  +
call sub_1002221  +
test eax eax +
jnz loc_1007976  +
mov dword ptr [ebp-2Ch] 1 +
mov eax [ebp-60h] +
mov [ebp-34h] eax +
inc dword ptr [ebp-68h]  +
xor edi edi +
inc edi  +
jmp loc_100791E  +
***
xor eax eax +
jmp loc_1001DF5  +
***
push 98h  +
jmp loc_1006C6A  +
***
sub edi 0 +
jz loc_10079CA  +
dec edi  +
jnz loc_1009CF7  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1006B7F  +
cmp eax 0FFFFFFFFh +
jz loc_1006B7F  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1006B81  +
push 0FFFFFFF6h  +
jmp loc_100799D  +
push 6  +
call ds:SetLastError  +
jmp loc_1006B7F  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_1007A61  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
call sub_1002877  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_10030CE +
retn   +
***
cmp [ebp+arg_0] eax +
jz loc_100216D  +
push 8007000Eh  +
call sub_100CAF3  +
jmp loc_100216D  +
***
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
jmp loc_1002322  +
***
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1002C37 +
retn   +
***
push eax  +
call ds:free  +
pop ecx  +
mov [edi] ebx +
jmp loc_100631C  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1002877  +
cmp esi [ebp+hDesktop] +
jz loc_10064CF  +
push [ebp+hDesktop]  +
call ds:SetThreadDesktop  +
push esi  +
call ds:CloseDesktop  +
jmp loc_10064CF  +
***
push 8007000Eh  +
call sub_100CAF3  +
jmp loc_1002362  +
***
call sub_1002877  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1007D66 +
retn   +
***
xor eax eax +
jmp loc_100640D  +
***
call sub_1002877  +
jmp loc_10062A9  +
push eax  +
call ds:free  +
and dword ptr [esi+4] 0 +
pop ecx  +
jmp loc_100626C  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1002877  +
cmp ebx [ebp+hWinSta] +
jz loc_10062A9  +
push [ebp+hWinSta]  +
call edi  +
push ebx  +
call ds:CloseWindowStation  +
jmp loc_10062A9  +
***
call sub_10023A2  +
and dword ptr [esi] 0 +
jmp loc_1001E5D  +
***
mov eax [ebp-14h] +
mov eax [ebp-14h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1007E1B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
push 8007000Eh  +
call sub_1007792  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1007E3F +
retn   +
***
push 800300FDh  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
jmp loc_1002A9F  +
***
call sub_100CFB1  +
push eax  +
push 1389h  +
call sub_1001C99  +
push eax  +
push offset a12  +
push edi  +
push 2  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D985  +
add esp 18h +
call sub_10066FC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0C0h] +
call sub_10064DB  +
xor eax eax +
inc eax  +
jmp loc_100187F  +
push eax  +
push 1389h  +
call sub_1001C99  +
push eax  +
push offset a12  +
push edi  +
push 2  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D985  +
add esp 18h +
call sub_10066FC  +
jmp loc_100186E  +
call sub_100CAC5  +
xor esi esi +
jmp loc_1007EB3  +
call sub_1002877  +
jmp loc_1001885  +
call sub_100CFB1  +
push eax  +
push 1389h  +
call sub_1001C99  +
push eax  +
push offset a12  +
push edi  +
push 2  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D985  +
add esp 18h +
jmp loc_1001866  +
***
call sub_1002877  +
xor eax eax +
jmp loc_100775F  +
push 80004021h  +
call ds:SetLastError  +
push 1FFh  +
call sub_1001C99  +
push eax  +
call sub_100229D  +
jmp loc_1007F05  +
push dword ptr [ebp-8]  +
call ds:CloseDesktop  +
test edi edi +
jz loc_1007F47  +
cmp edi [ebp-4] +
jz loc_1007F47  +
push dword ptr [ebp-4]  +
call ebx  +
push edi  +
call ds:CloseWindowStation  +
call sub_1002877  +
xor eax eax +
jmp loc_100775E  +
call sub_1002877  +
jmp loc_100772C  +
call ds:GetLastError  +
cmp eax 57h +
jnz loc_1007F73  +
push 80004021h  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
jmp loc_100758A  +
push esi  +
call ds:CloseHandle  +
jmp loc_1007F73  +
push esi  +
call ds:CloseHandle  +
push 8004130Bh  +
jmp loc_1007F6D  +
call ds:CloseHandle  +
jmp loc_1007F5D  +
***
push 1FEh  +
call sub_1001C99  +
push eax  +
call sub_100229D  +
xor eax eax +
leave   +
retn   +
push 200h  +
jmp loc_1007FA3  +
push 800300FDh  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
jmp loc_100730B  +
push 1FEh  +
call sub_1001C99  +
push eax  +
call sub_100229D  +
xor eax eax +
jmp loc_100730A  +
***
pop ebp  +
jmp sub_100CAF3  +
***
call sub_1002877  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100715D +
retn   +
***
mov dword ptr [ebp-4] 3 +
mov eax offset loc_10081E7 +
retn   +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
jmp loc_1006D82  +
***
mov dword ptr [ebp-4] 2 +
mov eax offset loc_1008404 +
retn   +
xor ebx ebx +
***
call sub_1002877  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1008458 +
retn   +
xor ebx ebx +
***
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1006DDF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
jmp loc_1006DDF  +
***
pop esi  +
retn   +
pop esi  +
jmp loc_100B116  +
***
push edi  +
call sub_1002851  +
mov edi eax +
test edi edi +
jnz loc_1008538  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
jmp loc_100858B  +
cmp dword ptr [esi+0ACh] 1 +
push ebx  +
jnz loc_1008555  +
cmp dword ptr [esi+88h] 0 +
jnz loc_1008555  +
push edi  +
mov ecx esi +
call sub_100B07B  +
jmp loc_100855D  +
push edi  +
mov ecx esi +
call sub_100B7AF  +
mov ebx eax +
cmp ebx 1 +
jnz loc_100857D  +
mov eax [esi+5Ch] +
push 0  +
push ebx  +
push eax  +
push edi  +
call sub_1002179  +
cmp eax 0FFFFFFFFh +
jz loc_100857D  +
push eax  +
push edi  +
call sub_1006770  +
push edi  +
push 0Bh  +
push dword ptr [esi+54h]  +
call sub_100DE13  +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
call sub_1002877  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1006F8D +
retn   +
***
and dword ptr [ebp-4] 0 +
mov eax offset loc_1008B1E +
retn   +
xor esi esi +
cmp [ebp-14h] esi +
jz loc_1008AF9  +
lea eax [ebp-14h] +
push eax  +
call sub_1001454  +
mov [ebp-14h] esi +
cmp [ebp-18h] esi +
jz loc_1008B0A  +
lea eax [ebp-18h] +
push eax  +
call sub_1001454  +
mov [ebp-18h] esi +
push 8007000Eh  +
call ds:SetLastError  +
mov [ebp-4] esi +
mov eax offset loc_1008B1E +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
mov eax 0FFh +
jmp loc_10069F0  +
***
mov eax 80041008h +
jmp loc_1003173  +
***
test ebx ebx +
jz loc_100320D  +
jmp loc_100328F  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1008B58  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
jmp loc_1003288  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1008B71  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov eax [ebp+var_4] +
jmp loc_100327C  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_1008BC7  +
push dword ptr [ebp+arg_1C]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1003279  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
jmp loc_1003279  +
cmp esi 80004002h +
jnz loc_1003279  +
xor esi esi +
jmp loc_1003279  +
***
push edi  +
mov edi ds:CoTaskMemFree +
cmp [eax] ebx +
jz loc_1008BED  +
push dword ptr [eax]  +
call edi  +
mov eax [esi] +
mov [eax] ebx +
mov eax [esi] +
mov eax [eax+10h] +
cmp eax ebx +
jz loc_1008BFE  +
push eax  +
call edi  +
mov eax [esi] +
mov [eax+10h] ebx +
mov eax [esi] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1008C0F  +
push eax  +
call edi  +
mov eax [esi] +
mov [eax+8] ebx +
push dword ptr [esi]  +
call edi  +
mov [esi] ebx +
pop edi  +
jmp loc_1001332  +
***
mov eax 80041008h +
jmp locret_10031DA  +
***
mov dword ptr [ebp-1Ch] 80041006h +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1008D60 +
retn   +
xor ebx ebx +
jmp loc_1002F31  +
***
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantInit  +
and dword ptr [ebp-4] 0 +
push edi  +
push 8  +
lea ecx [ebp-1Ch] +
call sub_100B9C5  +
push dword ptr [ebp-14h]  +
mov ecx esi +
call sub_1002101  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1007097  +
jmp loc_1006E40  +
***
mov [ebp-10h] esp +
xor edi edi +
mov [ebp+8] edi +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_1008E0C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
mov byte ptr [ebp-4] 5 +
push edi  +
mov ecx [ebp-28h] +
call sub_100BCA1  +
push eax  +
call sub_10013BC  +
mov esi eax +
add esi 5 +
lea eax [esi+esi] +
push eax  +
call sub_1001617  +
mov [ebp+8] eax +
cmp eax edi +
jz loc_1008E67  +
push esi  +
mov ecx [ebp-28h] +
call sub_100BCA1  +
push eax  +
push dword ptr [ebp+8]  +
call sub_1001975  +
push esi  +
push offset dword_1008EB8  +
push dword ptr [ebp+8]  +
call sub_1005623  +
push dword ptr [ebp+8]  +
call sub_100229D  +
lea eax [ebp+8] +
push eax  +
call sub_10014CF  +
jmp loc_1008E74  +
push 8  +
call ds:SetLastError  +
call sub_1002877  +
mov dword ptr [ebp-4] 4 +
mov dword ptr [ebp-4] 4 +
mov eax offset loc_1008EA2 +
retn   +
push 8  +
call ds:SetLastError  +
call sub_1002877  +
mov dword ptr [ebp-4] 4 +
mov eax offset loc_1008E7B +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-14h] +
xor edi edi +
cmp ecx edi +
jz loc_1007871  +
jmp loc_1007869  +
***
retn   +
***
and dword ptr [ebp-4] 0 +
mov eax offset loc_1008F03 +
retn   +
***
and dword ptr [ebp-4] 0 +
mov eax offset loc_1008FC6 +
retn   +
***
mov edi [ebp+8] +
mov eax [edi] +
xor esi esi +
cmp eax esi +
jz loc_100910D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10034E2 +
retn   +
***
mov [ebp-10h] esp +
mov byte ptr [ebp-4] 10h +
mov esi [ebp-50h] +
push esi  +
call sub_100AB04  +
mov ecx [ebp+28h] +
xor ebx ebx +
cmp ecx ebx +
jz loc_1009478  +
mov eax [esi+4] +
mov [ecx] eax +
mov dword ptr [ebp-4] 0Fh +
jmp loc_100949A  +
push 8007000Eh  +
call sub_1007792  +
mov dword ptr [ebp-4] 0Fh +
mov eax offset loc_1009498 +
retn   +
xor ebx ebx +
mov esi [ebp+0Ch] +
mov eax [esi] +
cmp eax ebx +
jz loc_10094AB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
mov [ebp-38h] ebx +
mov dword ptr [ebp-4] 0Fh +
mov eax offset loc_10094BB +
retn   +
xor ebx ebx +
jmp loc_1002E4B  +
***
call sub_10023A2  +
mov [ebp-14h] ebx +
jmp loc_1002E5A  +
call sub_10023A2  +
mov [ebp-1Ch] ebx +
jmp loc_1002E69  +
call sub_10023A2  +
mov [ebp-28h] ebx +
jmp loc_1002E8A  +
mov dword ptr [eax] 80041008h +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
jmp loc_1002E8D  +
***
and dword ptr [ebp-4] 0 +
mov eax offset loc_1009541 +
retn   +
***
and dword ptr [ebp-4] 0 +
mov eax offset loc_100969F +
retn   +
push 80041006h  +
call sub_1007792  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100969F +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1007097  +
xor eax eax +
jmp loc_1007086  +
***
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100777A +
retn   +
***
push dword ptr [esi+8]  +
call sub_100E559  +
jmp loc_10065A0  +
push dword ptr [esi+78h]  +
mov ecx esi +
push eax  +
push ebx  +
call sub_100C5AB  +
jmp loc_1009766  +
mov eax [esi+74h] +
cmp eax ebx +
jz loc_10065D3  +
push eax  +
mov ecx esi +
call sub_100C517  +
mov [esi+74h] ebx +
jmp loc_10065D3  +
***
mov [esi+70h] ebx +
mov [esi+90h] ebx +
mov [esi+94h] ebx +
mov [esi+98h] ebx +
mov [esi+9Ch] ebx +
mov [esi+0A0h] ebx +
mov [esi+0A4h] ebx +
jmp loc_1005533  +
***
call sub_1002877  +
xor eax eax +
jmp loc_10036A5  +
call sub_1002877  +
push [ebp+hObject]  +
call ds:CloseHandle  +
jmp loc_100979F  +
call sub_1002877  +
xor esi esi +
jmp loc_1003699  +
***
call sub_1002877  +
lea eax [ebp-14h] +
push eax  +
call sub_10014CF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10097D2 +
retn   +
***
call sub_1002877  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1005327 +
retn   +
***
call sub_1002877  +
mov dword ptr [ebp-4] 2 +
mov eax offset loc_1009AC4 +
retn   +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1013014 eax +
xor ebx ebx +
cmp dword_1013008 ebx +
jnz loc_1009BEE  +
push eax  +
call ds:_exit  +
***
cmp dword_10134C8 ebx +
jnz loc_1009BFC  +
call ds:_cexit  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax dword_1013014 +
call sub_100167C  +
retn   +
***
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
***
xor eax eax +
mov [ebp-1Ch] eax +
jmp loc_1005C56  +
***
push 2  +
pop eax  +
pop ebp  +
retn   +
***
test eax ebx +
jz loc_1005CC1  +
not eax  +
mov dword_1013004 eax +
jmp loc_1005D17  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_1009C8C  +
push 42Bh  +
jmp loc_1009C86  +
test eax eax +
jnz loc_1009C8C  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
call esi  +
test eax eax +
jnz loc_10022EB  +
push 57h  +
call ds:SetLastError  +
jmp loc_10022EB  +
call esi  +
test eax eax +
jnz loc_10022EB  +
push 8  +
jmp loc_1009C9C  +
***
cmp [ebp+lpString] edi +
jz loc_1009CCD  +
push [ebp+lpString]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1009CCD  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1009CD7  +
push 8  +
call ebx  +
xor eax eax +
jmp loc_10028D6  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_1009CF0  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006B83  +
dec edi  +
jnz loc_1006B7F  +
push 0FFFFFFF4h  +
jmp loc_100799D  +
***
xor eax eax +
jmp loc_10013D4  +
***
test eax eax +
jnz loc_1009D18  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100225D  +
***
test eax eax +
jnz loc_1009D2B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10037FF  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_100196C  +
push 57h  +
jmp loc_1009D46  +
push 6  +
call ds:SetLastError  +
jmp loc_100196C  +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1009DA1  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1009DA1  +
push 570h  +
call ds:SetLastError  +
call sub_1002877  +
jmp loc_1009DB3  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009DB3  +
push 8  +
call ds:SetLastError  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1001659  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_1001931  +
push 57h  +
call ds:SetLastError  +
jmp loc_1001931  +
***
mov [ecx] edi +
jmp loc_1004E15  +
***
mov [ecx] edi +
jmp loc_1001A33  +
***
mov [ecx] eax +
jmp loc_100581E  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_1001F0C  +
push 57h  +
jmp loc_1001F06  +
***
test eax eax +
jnz loc_1003E72  +
push 57h  +
jmp loc_1003E6C  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_1009E25  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100151E  +
push 80004003h  +
call ds:SetLastError  +
jmp loc_1001528  +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1009E4E  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1009E4E  +
push 570h  +
call ds:SetLastError  +
call sub_1002877  +
jmp loc_1009E60  +
***
test eax eax +
jnz loc_1002B59  +
push 57h  +
call ds:SetLastError  +
jmp loc_1002B59  +
***
call ds:WSACleanup  +
jmp loc_100675E  +
***
movzx eax ax +
push eax  +
call ds:SetLastError  +
jmp loc_1004D92  +
***
movzx eax ax +
push eax  +
call ds:SetLastError  +
jmp loc_10019A9  +
***
movzx eax ax +
push eax  +
call ds:SetLastError  +
jmp loc_1005657  +
***
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1009F96  +
push 0FFFFFFF4h  +
jmp loc_10079F1  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_1009F92  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_10013BC  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1006B12  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_1009F42  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1009F76  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1009F76  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jnb loc_1006B12  +
jmp loc_1009F32  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100CFDD  +
call sub_10066FC  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1009F7C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009FFE  +
push 42Bh  +
jmp loc_1009FF8  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_1009FB8  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_1009FBB  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_1006A7F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007A32  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_1007A32  +
add eax 20h +
jmp loc_1009F7F  +
mov [ebp+cchWideChar] eax +
jmp loc_1006AB3  +
test eax eax +
jnz loc_1009FFE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006B15  +
***
lea eax [ebp+arg_0] +
push eax  +
call sub_10014CF  +
jmp loc_1003EDE  +
***
push 0  +
push [ebp+lpStart]  +
call sub_10013BC  +
jmp loc_100263A  +
mov esi ebx +
jmp loc_10025EB  +
cmp [ebp+var_14] 0 +
jnz loc_1002609  +
mov [ebp+var_14] esi +
jmp loc_1002609  +
xor ecx ecx +
mov [eax] cx +
jmp loc_100261E  +
push 0  +
push [ebp+var_18]  +
call sub_10013BC  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_1001975  +
jmp loc_1002627  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_100A071  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1005DB4 +
jmp loc_1001D8A  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A08D  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1005DB4 +
jmp loc_1001D89  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_100A0DA  +
push ebx  +
push ebx  +
lea eax [ebp+hMem] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_100A0DA  +
mov edi [ebp+hMem] +
jmp loc_1001D4E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A0DA  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1005DB4 +
jmp loc_1001D88  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov [ebp+hMem] ebx +
jmp loc_1001D78  +
***
push esi  +
push dword_101301C  +
call sub_1001B6F  +
cmp eax ebx +
jz loc_1006E66  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1001FC1  +
cmp eax 0FFFFFFFFh +
jnz loc_100244D  +
jmp loc_1006E66  +
call sub_1001617  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_10024C1  +
push 10h  +
call sub_1001617  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1006E66  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1004D5E  +
push esi  +
push ebx  +
push 3  +
push dword_101301C  +
call sub_1005DFE  +
test eax eax +
jnz loc_100247E  +
lea eax [ebp+var_8] +
push eax  +
call sub_10014CF  +
jmp loc_1006E66  +
test eax eax +
jnz loc_100254F  +
push 8  +
jmp loc_100A19B  +
call ds:wcstol  +
jmp loc_100252B  +
test eax eax +
jnz loc_100254F  +
push 57h  +
call ds:SetLastError  +
jmp loc_100254F  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_100A1C6  +
push 8  +
jmp loc_100A1C0  +
movzx eax ax +
push eax  +
jmp loc_100A1C0  +
test eax eax +
jnz loc_100A1C6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100578C  +
***
xor eax eax +
retn   +
***
cmp eax 0A0000h +
jnz loc_1006679  +
jmp loc_1001427  +
***
or eax 0FFFFFFFFh +
jmp loc_1002217  +
cmp eax 30000h +
jz loc_100A2AC  +
cmp eax 40000h +
jz loc_100A2AC  +
cmp eax 60000h +
jnz loc_1002206  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_100A21B  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_1002206  +
mov eax edx +
jmp loc_1002215  +
cmp eax 90000h +
jz loc_100A2AC  +
cmp eax 0A0000h +
jz loc_100A25B  +
cmp eax 0B0000h +
jnz loc_1002206  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_1002206  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_100A2B3  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_1002206  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_1002206  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_1002206  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1002206  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_1002206  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_100A2B3  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jnz loc_1002206  +
jmp loc_100A226  +
***
or eax 0FFFFFFFFh +
jmp loc_1001FB7  +
cmp ecx 60000h +
jnz loc_1001FA4  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_1002274  +
mov eax [eax+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
jmp loc_1002274  +
cmp ecx 0A0000h +
jz loc_100A318  +
cmp ecx 0B0000h +
jnz loc_1001FA4  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_1001FA4  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_1001F9E  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_1001FA4  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_1001FA4  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_1001FA4  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1001FA4  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_1001FA4  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_1001F9E  +
***
or eax 0FFFFFFFFh +
jmp locret_1002089  +
lea eax [ebp+var_4] +
push eax  +
call sub_10014CF  +
jmp loc_100208D  +
***
lea eax [ebp+var_4] +
push eax  +
call sub_10014CF  +
jmp loc_1005F03  +
***
lea eax [ebp+var_4] +
push eax  +
call sub_1001454  +
jmp loc_1002847  +
***
or eax 0FFFFFFFFh +
jmp loc_1001FFA  +
***
xor eax eax +
jmp loc_10015E3  +
***
call sub_1002877  +
jmp loc_1003BEB  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_100A509  +
push 8  +
jmp loc_100A503  +
call sub_1002851  +
mov [esi] eax +
cmp eax ebx +
jnz loc_1003986  +
jmp loc_100A3B7  +
mov ebx 0FEh +
mov edi offset dword_1002294 +
push ebx  +
push edi  +
lea eax [ebp+var_204] +
push eax  +
call sub_1001975  +
push ebx  +
push edi  +
lea eax [ebp+var_404] +
push eax  +
call sub_1001975  +
push ebx  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1001975  +
push [ebp+var_608]  +
push [ebp+var_610]  +
call sub_1001DCB  +
test eax eax +
jz loc_100A4F1  +
lea ecx [ebp+var_204] +
push ecx  +
lea ecx [ebp+var_404] +
push ecx  +
lea ecx [ebp+String] +
push ecx  +
push [ebp+var_614]  +
push [ebp+var_618]  +
push eax  +
call sub_100EEA8  +
mov [ebp+var_624] eax +
cmp eax 0FFFFFFFFh +
jz loc_100A4F1  +
test esi esi +
jz loc_100A4D4  +
push 4  +
push dword ptr [esi]  +
call sub_10027D5  +
mov [ebp+var_61C] eax +
cmp eax 0FFFFFFFFh +
jz loc_100A3B7  +
push [ebp+var_624]  +
push 0  +
push eax  +
push dword ptr [esi]  +
call sub_1005F83  +
push 0  +
lea eax [ebp+String] +
push eax  +
push 1  +
push [ebp+var_61C]  +
push dword ptr [esi]  +
call sub_1001531  +
push 0  +
lea eax [ebp+var_404] +
push eax  +
push 2  +
push [ebp+var_61C]  +
push dword ptr [esi]  +
call sub_1001531  +
push 0  +
lea eax [ebp+var_204] +
push eax  +
push 3  +
push [ebp+var_61C]  +
push dword ptr [esi]  +
call sub_1001531  +
inc [ebp+var_608]  +
mov eax [ebp+var_608] +
cmp eax [ebp+var_620] +
jnb loc_10039AF  +
jmp loc_100A3E7  +
and [ebp+var_60C] 0 +
jmp loc_10039AF  +
test eax eax +
jnz loc_100A509  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
jmp loc_10039C1  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_1004218  +
push 57h  +
call esi  +
jmp loc_1004218  +
***
call ds:GetLastError  +
test eax eax +
jnz loc_100A53D  +
push 42Bh  +
call ebx  +
call sub_1002877  +
xor eax eax +
jmp loc_1004192  +
test eax eax +
jnz loc_1003A07  +
push 57h  +
jmp loc_1003A05  +
***
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_1001A49  +
mov [esi] eax +
test eax eax +
jnz loc_100A58F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A5E3  +
push 8  +
call ds:SetLastError  +
jmp loc_100A5E3  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_1001A49  +
mov [esi+4] eax +
test eax eax +
jz loc_100A57B  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1001975  +
test edi edi +
jz loc_100A5C9  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_1001975  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10040E9  +
jmp loc_1003A67  +
test eax eax +
jnz loc_100A5E3  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
jmp loc_1003A67  +
***
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_1005A51  +
call esi  +
test eax eax +
jnz loc_1005A51  +
push 57h  +
jmp loc_100A619  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005A51  +
push 8  +
call ds:SetLastError  +
jmp loc_1005A51  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jnb loc_1005991  +
jmp loc_1005959  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10014CF  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005A51  +
push 42Bh  +
jmp loc_100A619  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_1001A49  +
mov esi eax +
cmp esi edi +
jz loc_1005A60  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS  +
push [ebp+dwLen]  +
push esi  +
call sub_10057AF  +
add esp 14h +
jmp loc_1005A0A  +
push 7  +
call sub_100CF40  +
jmp loc_1005A04  +
***
push 157Fh  +
call sub_1001C99  +
push eax  +
call sub_100229D  +
push 47Eh  +
call edi  +
jmp loc_100A6DA  +
cmp eax [ebp+lpString] +
jl loc_100A6E1  +
call ds:GetLastError  +
test eax eax +
jz loc_1005F56  +
jmp loc_1005F5A  +
xor eax eax +
jmp loc_10040DD  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_100F609  +
mov esi eax +
cmp esi ebx +
jnz loc_1003F7F  +
jmp loc_1005F5A  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+lpString]  +
call sub_1003A1F  +
cmp eax 0FFFFFFFFh +
jnz loc_100A723  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_100A74F  +
mov edi ebx +
xor ebx ebx +
jmp loc_100A729  +
mov ebx dword ptr [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
jmp loc_1003FE9  +
mov [ebp+var_C] 1 +
jmp loc_100408E  +
cmp [ecx+1Ch] ebx +
jnz loc_10040CE  +
jmp loc_100A80B  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1001C99  +
push eax  +
push esi  +
call sub_100D497  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+lpString]  +
call sub_100F6B1  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100A6DA  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005F5A  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_1005F5A  +
test ebx ebx +
jz loc_100A7CD  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A7CD  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1001C99  +
push eax  +
push 3  +
call sub_100D497  +
add esp 14h +
jmp loc_100A767  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1001C99  +
push eax  +
push 2  +
jmp loc_100A75F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A7F6  +
push 42Bh  +
call edi  +
call sub_1002877  +
push [ebp+dwErrCode]  +
push [ebp+lpString]  +
call sub_100F6B1  +
jmp loc_100A6DA  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_100A825  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_100A7E5  +
mov edi [ecx+24h] +
jmp loc_100A83D  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_100A83B  +
push ebx  +
push eax  +
call sub_100F609  +
mov edi eax +
test edi edi +
jz loc_100A7F6  +
jmp loc_100A841  +
mov edi ecx +
test edi edi +
jz loc_100A857  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A857  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_100A7D8  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1001C99  +
push eax  +
push 1  +
call sub_100D497  +
add esp 0Ch +
jmp loc_100A767  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+lpValueName] esi +
jz loc_100AA78  +
mov ebx [ebp+cbData] +
cmp ebx esi +
jz loc_100AA78  +
cmp [ebx] esi +
jnz loc_100AA78  +
mov eax 8000h +
push eax  +
mov [ebp+cbData] eax +
call sub_1001617  +
mov [ebx] eax +
cmp eax esi +
jnz loc_100AA81  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
push esi  +
push esi  +
push [ebp+lpValueName]  +
mov esi ds:RegQueryValueExW +
push [ebp+hKey]  +
call esi  +
mov edi 0EAh +
jmp loc_100AACC  +
add [ebp+cbData] 2000h +
push ebx  +
call sub_10014CF  +
push [ebp+cbData]  +
and dword ptr [ebx] 0 +
call sub_1001617  +
mov [ebx] eax +
test eax eax +
jz loc_100AA68  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
push 0  +
push 0  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call esi  +
mov [ebp+dwErrCode] eax +
cmp eax edi +
jz loc_100AA9D  +
xor esi esi +
xor edi edi +
inc esi  +
cmp eax edi +
jz loc_100AAF8  +
cmp [ebx] edi +
jz loc_100AAE8  +
push ebx  +
call sub_10014CF  +
mov [ebx] edi +
push [ebp+dwErrCode]  +
xor esi esi +
call ds:SetLastError  +
call sub_1002877  +
mov eax esi +
jmp loc_100AA7A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+4]  +
call sub_1007792  +
pop ebp  +
retn 4  +
***
call sub_1001E76  +
cmp dword ptr [ebp-14h] 0 +
jz loc_100AC49  +
push dword ptr [ebp-14h]  +
call ds:RegCloseKey  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100AB6C +
retn   +
***
call sub_1001E76  +
mov esi ecx +
xor edi edi +
mov [ebp-1Ch] edi +
mov [ebp-28h] edi +
mov [ebp-14h] edi +
cmp [esi+74h] edi +
jz loc_100ADD1  +
mov [ebp-4] edi +
mov eax 80h +
mov [ebp-28h] eax +
mov [ebp-14h] eax +
push eax  +
mov ecx [ebp+0Ch] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov ebx eax +
push dword ptr [ebp-14h]  +
mov ecx [ebp+8] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-2Ch] eax +
mov [ebp-18h] edi +
cmp [esi+6Ch] edi +
jnz loc_100ACE0  +
mov edx [esi+74h] +
mov [ebp-24h] edi +
mov eax [ebp-24h] +
cmp eax [esi+78h] +
jnb loc_100AD18  +
imul eax eax +
add eax edx +
mov ecx [eax] +
mov ecx [ecx+44h] +
cmp ecx [esi+58h] +
jz loc_100AD12  +
inc dword ptr [ebp-24h]  +
jmp loc_100ACC4  +
mov [ebp-20h] edi +
mov [ebp-20h] edi +
mov ecx [esi+74h] +
mov eax ecx +
mov edx [eax+44h] +
cmp edx [esi+58h] +
jz loc_100ACFD  +
mov edx [eax] +
cmp edx edi +
jnz loc_100ADB0  +
mov ecx [eax+4] +
shl ecx 6 +
lea eax [ecx+eax+88h] +
cmp dword ptr [eax] 23495452h +
jnz loc_100AD18  +
mov eax [eax+8] +
mov [ebp-18h] eax +
cmp [ebp-18h] edi +
jnz loc_100AD6C  +
cmp [esi+58h] edi +
jnz loc_100AD53  +
mov dword ptr [ebp-1Ch] 1 +
push dword ptr [ebp-28h]  +
push 9Ah  +
call sub_1001C99  +
push eax  +
push ebx  +
call sub_1001975  +
push dword ptr [ebp-14h]  +
push 99h  +
call sub_1001C99  +
push eax  +
push dword ptr [ebp-2Ch]  +
call sub_1001975  +
push 0FFFFFFFFh  +
mov ecx [ebp+8] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push 0FFFFFFFFh  +
mov ecx [ebp+0Ch] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
mov eax [ebp-1Ch] +
jmp loc_100ADD3  +
xor eax eax +
cmp [esi+0ACh] edi +
jnz loc_100AD79  +
mov eax [esi+68h] +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp-2Ch]  +
lea ecx [ebp-28h] +
push ecx  +
push ebx  +
push dword ptr [ebp-18h]  +
push eax  +
call ds:LookupAccountSidW  +
mov [ebp-1Ch] eax +
push 0FFFFFFFFh  +
mov ecx [ebp+8] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push 0FFFFFFFFh  +
mov ecx [ebp+0Ch] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_100AD67  +
add [ebp-20h] edx +
mov eax [ebp-20h] +
add eax ecx +
jmp loc_100ACEB  +
push 8007000Eh  +
call sub_1007792  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100ADD1 +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
call sub_1001E76  +
cmp dword ptr [ebp-18h] 0 +
jz loc_100AEFE  +
push dword ptr [ebp-18h]  +
call ds:CloseServiceHandle  +
push 8007000Eh  +
call sub_1007792  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100AE36 +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z +
call sub_1001E76  +
xor esi esi +
cmp [ebp+8] esi +
jz loc_100AF71  +
cmp [ebp+18h] esi +
jz loc_100AF71  +
mov [ebp-4] esi +
push 5Ch  +
push dword ptr [ebp+8]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_100AF48  +
mov eax [ebp+8] +
jmp loc_100AF4F  +
inc eax  +
inc eax  +
cmp [eax] si +
jz loc_100AF71  +
push esi  +
push eax  +
push dword ptr [ebp+18h]  +
call sub_1002024  +
cmp eax 0FFFFFFFFh +
jz loc_100AF71  +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
inc eax  +
jmp loc_100AF73  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100AF71 +
retn   +
***
xor eax eax +
call __EH_epilog3  +
retn 14h  +
***
adc eax offset VariantClear +
push eax  +
call sub_1007097  +
retn   +
***
call sub_100CC19  +
call sub_1002877  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100B048 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_100B08A  +
xor eax eax +
jmp loc_100B0BE  +
push esi  +
push dword ptr [ecx+58h]  +
push 0  +
push 410h  +
call ds:OpenProcess  +
mov esi eax +
test esi esi +
jz loc_100B0BD  +
push edi  +
push [ebp+arg_0]  +
push offset loc_100AF17  +
push esi  +
call ds:EnumerateLoadedModulesW64  +
push esi  +
mov edi eax +
call ds:CloseHandle  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
movzx eax word ptr [esi] +
cmp ax 3 +
jz loc_100B104  +
cmp ax 0Ah +
jz loc_100B104  +
cmp ax 0Bh +
jnz loc_100B0F1  +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
mov [esi+8] ax +
jmp loc_100B10A  +
push esi  +
call ds:VariantClear  +
push eax  +
call sub_1007097  +
push 3  +
pop eax  +
mov [esi] ax +
mov eax [ebp+arg_0] +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
xor esi esi +
mov [ebp-2Ch] esi +
mov [ebp-4] esi +
mov eax offset loc_100B38D +
retn   +
push 8007000Eh  +
call sub_1007792  +
xor esi esi +
mov [ebp-2Ch] esi +
mov [ebp-4] esi +
mov eax offset loc_100B38D +
retn   +
xor esi esi +
***
mov eax [ebp-20h] +
cmp eax esi +
jz loc_100B39F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] esi +
mov eax [ebp-28h] +
cmp eax esi +
jz loc_100B3AF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-28h] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_100B3BF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov esi [ebp-2Ch] +
jmp loc_100B160  +
***
call sub_1001E76  +
mov edi ecx +
lea ecx [ebp-24h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-20h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
mov [ebp-44h] ebx +
mov dword ptr [ebp-34h] 1 +
mov [ebp-48h] ebx +
mov [ebp-14h] ebx +
cmp [ebp+8] ebx +
jnz loc_100B47D  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-20h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
jmp loc_100B703  +
push 10h  +
push dword ptr [edi+54h]  +
call sub_1001DCB  +
cmp eax ebx +
jz loc_100B447  +
mov byte ptr [ebp-4] 4 +
mov [ebp-28h] ebx +
cmp dword ptr [ebp-28h] 0Ah +
jnb loc_100B4A4  +
mov ecx [ebp-28h] +
mov [ebp+ecx*4-74h] ebx +
inc dword ptr [ebp-28h]  +
jmp loc_100B492  +
push eax  +
push offset aAssociatorsOfS  +
lea eax [ebp-24h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
push dword ptr [ebp-24h]  +
lea ecx [ebp-40h] +
call sub_1002329  +
mov esi eax +
mov byte ptr [ebp-4] 5 +
push offset aWql  +
lea ecx [ebp-3Ch] +
call sub_1002329  +
mov byte ptr [ebp-4] 6 +
cmp [esi] ebx +
jz loc_100B4E5  +
mov esi [esi] +
mov ecx [esi] +
mov [ebp-38h] ecx +
jmp loc_100B4E8  +
mov [ebp-38h] ebx +
cmp [eax] ebx +
jz loc_100B4F2  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_100B4F4  +
xor ecx ecx +
mov eax [edi+44h] +
mov edx [eax] +
lea esi [ebp-14h] +
push esi  +
push ebx  +
push 30h  +
push dword ptr [ebp-38h]  +
push ecx  +
push eax  +
call dword ptr [edx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 5 +
mov ecx [ebp-3Ch] +
cmp ecx ebx +
jz loc_100B51D  +
call sub_10023A2  +
mov [ebp-3Ch] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-40h] +
cmp ecx ebx +
jz loc_100B530  +
call sub_10023A2  +
mov [ebp-40h] ebx +
cmp esi ebx +
jge loc_100B53A  +
push esi  +
call sub_100CAF3  +
push dword ptr [edi+50h]  +
push dword ptr [ebp-14h]  +
call sub_1003191  +
cmp eax ebx +
jge loc_100B54F  +
push eax  +
call sub_100CAF3  +
mov edi 138Dh +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-44h] +
push edx  +
lea edx [ebp-74h] +
push edx  +
push 0Ah  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_100B575  +
mov [ebp-48h] ecx +
jmp loc_100B588  +
cmp eax 40004h +
jz loc_100B657  +
cmp eax ebx +
jl loc_100B657  +
xor eax eax +
mov [ebp-30h] eax +
cmp eax [ebp-44h] +
jnb loc_100B64D  +
lea esi [ebp+eax*4-74h] +
push edi  +
call sub_1001C99  +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
push offset aFilename  +
push dword ptr [esi]  +
call sub_1006FD7  +
cmp eax ebx +
jz loc_100B634  +
push edi  +
call sub_1001C99  +
push eax  +
lea eax [ebp-18h] +
push eax  +
push offset aExtension  +
push dword ptr [esi]  +
call sub_1006FD7  +
cmp eax ebx +
jz loc_100B634  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-1Ch]  +
push offset aS_S  +
lea eax [ebp-20h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 10h +
push ebx  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp+8]  +
call sub_1002024  +
cmp eax 0FFFFFFFFh +
jnz loc_100B634  +
mov [ebp-2Ch] ebx +
cmp dword ptr [ebp-2Ch] 0Ah +
jnb loc_100B61B  +
mov esi [ebp-2Ch] +
lea esi [ebp+esi*4-74h] +
mov eax [esi] +
cmp eax ebx +
jz loc_100B616  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
inc dword ptr [ebp-2Ch]  +
jmp loc_100B5FB  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_100B447  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
jmp loc_100B447  +
mov eax [esi] +
cmp eax ebx +
jz loc_100B642  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [esi] ebx +
inc dword ptr [ebp-30h]  +
mov eax [ebp-30h] +
jmp loc_100B58D  +
cmp [ebp-48h] ebx +
jnz loc_100B668  +
jmp loc_100B554  +
push eax  +
call sub_1007792  +
push 800300FDh  +
call ds:SetLastError  +
mov dword ptr [ebp-4] 3 +
jmp loc_100B6A7  +
push dword ptr [ebp-4Ch]  +
call sub_100AB04  +
and dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-4] 3 +
mov eax offset loc_100B6A5 +
retn   +
push 8007000Eh  +
call sub_1007792  +
and dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-4] 3 +
mov eax offset loc_100B6A5 +
retn   +
xor ebx ebx +
xor edi edi +
lea esi [ebp+edi*4-74h] +
mov eax [esi] +
cmp eax ebx +
jz loc_100B6BB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
inc edi  +
cmp edi 0Ah +
jb loc_100B6A9  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_100B6D1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-20h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-34h] +
call __EH_epilog3  +
retn 4  +
***
call sub_1001E76  +
call sub_1002877  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100B853 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_100B983  +
mov eax [ebp+arg_0] +
jb loc_100B97A  +
cmp eax 0FFFFFFFFh +
ja loc_100B983  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100B98E  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_100B9B1  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100B9BC  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_100B9D3  +
mov edx ecx +
mov eax dword ptr [ebp+vt] +
cmp ecx edx +
jnz loc_100B9DF  +
cmp ax [ecx] +
jz loc_100B9F0  +
push eax  +
push 0  +
push edx  +
push ecx  +
call ds:VariantChangeType  +
push eax  +
call sub_1007097  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea ecx [eax+7FFBFE00h] +
cmp ecx 0FDFFh +
ja loc_100BA19  +
add eax 0FFFFFE00h +
movzx eax ax +
jmp loc_100BA1B  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_C] ebx +
jnz loc_100BA3E  +
mov eax 80041008h +
jmp loc_100BB94  +
push esi  +
push 1Ch  +
call ds:CoTaskMemAlloc  +
mov esi eax +
mov [ebp+var_4] esi +
cmp esi ebx +
jnz loc_100BA5A  +
mov eax 80041006h +
jmp loc_100BB93  +
push 1Ch  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100BA5D  +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_100BAC8  +
push ebx  +
push [ebp+lpString]  +
call sub_10013BC  +
mov edi eax +
lea eax [ebp+cb] +
push eax  +
push 1  +
push edi  +
mov [ebp+cb] ebx +
call sub_100B997  +
test eax eax +
jl loc_100BB99  +
mov eax [ebp+cb] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+cb] +
push ecx  +
push edx  +
push eax  +
call sub_100B965  +
test eax eax +
jl loc_100BB99  +
push [ebp+cb]  +
call ds:CoTaskMemAlloc  +
mov [esi] eax +
cmp eax ebx +
jz loc_100BB99  +
mov [esi+4] edi +
inc edi  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1001975  +
cmp [ebp+arg_8] ebx +
jz loc_100BB2A  +
push ebx  +
push [ebp+arg_8]  +
call sub_10013BC  +
mov edi eax +
lea eax [ebp+var_C] +
push eax  +
push 1  +
push edi  +
mov [ebp+var_C] ebx +
call sub_100B997  +
test eax eax +
jl loc_100BB99  +
mov eax [ebp+var_C] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+var_C] +
push ecx  +
push edx  +
push eax  +
call sub_100B965  +
test eax eax +
jl loc_100BB99  +
push [ebp+var_C]  +
call ds:CoTaskMemAlloc  +
mov [esi+8] eax +
cmp eax ebx +
jz loc_100BB99  +
mov [esi+0Ch] edi +
inc edi  +
push edi  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
call sub_1001975  +
cmp [ebp+arg_4] ebx +
jz loc_100BB84  +
push ebx  +
push [ebp+arg_4]  +
call sub_10013BC  +
mov edi eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push edi  +
mov [ebp+var_10] ebx +
call sub_100B997  +
test eax eax +
jl loc_100BB99  +
mov eax [ebp+var_10] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+var_10] +
push ecx  +
push edx  +
push eax  +
call sub_100B965  +
test eax eax +
jl loc_100BB99  +
push [ebp+var_10]  +
call ds:CoTaskMemAlloc  +
mov [esi+10h] eax +
cmp eax ebx +
jz loc_100BB99  +
mov [esi+14h] edi +
inc edi  +
push edi  +
push [ebp+arg_4]  +
push dword ptr [esi+10h]  +
call sub_1001975  +
mov eax [ebp+arg_C] +
mov dword ptr [esi+18h] 2 +
mov [eax] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
lea eax [ebp+var_4] +
push eax  +
call sub_100131C  +
mov eax 80041006h +
jmp loc_100BB92  +
***
mov eax [ecx] +
test eax eax +
jz loc_100BBC2  +
mov eax [eax] +
test eax eax +
jz loc_100BBC2  +
push eax  +
call ds:SysStringLen  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+len] +
push esi  +
mov esi ecx +
and dword ptr [esi+4] 0 +
push edi  +
mov ecx ebx +
mov dword ptr [esi+8] 1 +
call sub_100BBAE  +
mov ecx [ebp+arg_4] +
mov edi eax +
call sub_100BBAE  +
lea ecx [ebp+len] +
push ecx  +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call sub_100B997  +
test eax eax +
jl loc_100BC1D  +
mov eax [ebp+len] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+len] +
push ecx  +
push edx  +
push eax  +
call sub_100B965  +
test eax eax +
jge loc_100BC27  +
push 8007000Eh  +
call sub_100CAF3  +
push [ebp+len]  +
push 0  +
call ds:SysAllocStringByteLen  +
mov [esi] eax +
test eax eax +
jnz loc_100BC49  +
mov eax [ebp+var_4] +
add eax edi +
jz loc_100BC93  +
push 8007000Eh  +
call sub_100CAF3  +
mov eax [ebx] +
test eax eax +
jz loc_100BC53  +
mov eax [eax] +
jmp loc_100BC55  +
xor eax eax +
test eax eax +
jz loc_100BC69  +
lea ecx [edi+edi+2] +
push ecx  +
push eax  +
push dword ptr [esi]  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_100BC76  +
mov eax [eax] +
jmp loc_100BC78  +
xor eax eax +
test eax eax +
jz loc_100BC93  +
mov ecx [ebp+var_4] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
mov eax [esi] +
lea eax [eax+edi*2] +
push eax  +
call memcpy  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+0Ch] +
xor ebx ebx +
cmp [esi] ebx +
jnz loc_100BD46  +
push ebx  +
push ebx  +
push esi  +
push 400h  +
push dword ptr [edi+4]  +
push ebx  +
push 1100h  +
call ds:FormatMessageW  +
mov eax [esi] +
cmp eax ebx +
jz loc_100BD06  +
push eax  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_100BD46  +
mov ecx [esi] +
lea ecx [ecx+eax*2-2] +
cmp word ptr [ecx] 0Ah +
jnz loc_100BD46  +
xor edx edx +
mov [ecx] dx +
mov ecx [esi] +
lea eax [ecx+eax*2-4] +
cmp word ptr [eax] 0Dh +
jnz loc_100BD46  +
xor ecx ecx +
mov [eax] cx +
jmp loc_100BD46  +
push 40h  +
push ebx  +
call ds:LocalAlloc  +
mov [ebp+var_4] eax +
mov [esi] eax +
cmp eax ebx +
jz loc_100BD46  +
mov edi [edi+4] +
push edi  +
call sub_100B9F9  +
movzx eax ax +
cmp ax bx +
jz loc_100BD34  +
movzx eax ax +
push eax  +
push offset aIdispatchError  +
jmp loc_100BD3A  +
push edi  +
push offset aUnknownError0x  +
push [ebp+var_4]  +
call ds:wsprintfW  +
add esp 0Ch +
mov eax [esi] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jz loc_100BDC6  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_100133D  +
mov esi ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor edi edi +
mov [ebp-4] edi +
cmp ecx edi +
jz loc_100BE01  +
push dword ptr [ebp+8]  +
push esi  +
call sub_100BBCA  +
mov edi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1001E4E  +
mov [esi] edi +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call sub_100133D  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
push ecx  +
mov ecx [ebp+8] +
call sub_100BDA9  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
mov dword ptr [ebp-10h] 1 +
call sub_100BDD2  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 8  +
***
call sub_100133D  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_1002329  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
mov dword ptr [ebp-10h] 1 +
call sub_100BDD2  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
call sub_1001E76  +
xor ebx ebx +
cmp [ebp+8] ebx +
jz loc_100BF26  +
cmp [ebp+0Ch] ebx +
jz loc_100BF26  +
mov [ebp-4] ebx +
mov esi [ebp+10h] +
lea edi [ebp-28h] +
movs   +
movs   +
movs   +
movs   +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp+0Ch] +
call sub_1002329  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_100BEE3  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_100BEE5  +
xor ecx ecx +
mov eax [ebp+8] +
mov edx [eax] +
push ebx  +
lea esi [ebp-28h] +
push esi  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+14h]  +
mov [ebp-14h] eax +
mov [ebp-4] bl +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_100BF0A  +
call sub_10023A2  +
mov [ebp+0Ch] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-14h] +
jmp loc_100BF2B  +
mov eax [ebp-18h] +
mov eax [eax+4] +
mov [ebp-14h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100BF0E +
retn   +
mov eax 80041008h +
call __EH_epilog3  +
retn 0Ch  +
***
call sub_1001E76  +
mov eax [ebp-1Ch] +
mov eax [ebp-1Ch] +
xor esi esi +
cmp eax esi +
jz loc_100C23D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_100C24D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-4] esi +
mov eax offset loc_100BF6B +
retn   +
***
call sub_1001E76  +
mov eax [ebp-1Ch] +
mov eax [ebp-1Ch] +
xor esi esi +
cmp eax esi +
jz loc_100C494  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-14h] +
cmp eax esi +
jz loc_100C4A4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] esi +
mov [ebp-4] esi +
mov eax offset loc_100C2CC +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_100C528  +
mov al 1 +
pop ebp  +
retn 4  +
mov eax [ecx+90h] +
test eax eax +
jnz loc_100C536  +
xor al al +
jmp loc_100C524  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_100C54F  +
mov al 1 +
pop ebp  +
retn 4  +
mov eax [ecx+98h] +
test eax eax +
jnz loc_100C55D  +
xor al al +
jmp loc_100C54B  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100C57D  +
mov eax [ecx+94h] +
test eax eax +
jz loc_100C57D  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_100C5A0  +
mov eax [ecx+0A4h] +
test eax eax +
jz loc_100C5A0  +
pop ebp  +
jmp eax  +
xor al al +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_100C5BC  +
mov al 1 +
pop ebp  +
retn 0Ch  +
mov eax [ecx+9Ch] +
test eax eax +
jnz loc_100C5CA  +
xor al al +
jmp loc_100C5B8  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jz loc_100C5F0  +
cmp [ebp+arg_C] 0 +
jz loc_100C5F0  +
mov eax [ecx+0A0h] +
test eax eax +
jz loc_100C5F0  +
pop ebp  +
jmp eax  +
xor al al +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
xor esi esi +
push 7Ch  +
mov [ebp+var_90] eax +
lea eax [ebp+var_80] +
push esi  +
push eax  +
mov [ebp+lpString] ebx +
mov dword ptr [ebp+String] esi +
call memset  +
add esp 0Ch +
cmp ebx esi +
jz loc_100C77F  +
cmp [ebp+var_90] esi +
jz loc_100C77F  +
xor ebx ebx +
mov [ebp+var_88] esi +
mov [edi] esi +
push ebx  +
push [ebp+var_90]  +
push [ebp+lpString]  +
call sub_100D1E7  +
push esi  +
push [ebp+lpString]  +
mov [ebp+var_94] eax +
cmp eax esi +
jnz loc_100C6BA  +
call sub_10013BC  +
cmp ebx eax +
jnb loc_100C792  +
mov eax [ebp+lpString] +
push 40h  +
lea eax [eax+ebx*2] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1001975  +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_10013BC  +
mov [ebp+var_98] eax +
jmp loc_100C6FA  +
call sub_10013BC  +
push 0  +
push [ebp+var_94]  +
mov esi eax +
sub esi ebx +
call sub_10013BC  +
sub esi eax +
mov [ebp+var_98] esi +
cmp esi 40h +
ja loc_100C77F  +
mov eax [ebp+lpString] +
push esi  +
lea eax [eax+ebx*2] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1001975  +
xor esi esi +
inc [ebp+var_88]  +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_10013BC  +
test eax eax +
jz loc_100C77F  +
push esi  +
push 0Ah  +
lea eax [ebp+String] +
push eax  +
call sub_1002400  +
test eax eax +
jz loc_100C77F  +
push 0Ah  +
lea eax [ebp+String] +
push eax  +
call sub_100D784  +
cmp [ebp+var_88] 1 +
jbe loc_100C740  +
cmp eax 32h +
ja loc_100C77F  +
mov ecx [edi] +
add ecx eax +
cmp [ebp+var_88] 3 +
push esi  +
push [ebp+var_90]  +
sbb eax eax +
and eax 3Bh +
inc eax  +
imul ecx eax +
mov [edi] ecx +
call sub_10013BC  +
add eax [ebp+var_98] +
add ebx eax +
cmp [ebp+var_94] esi +
jz loc_100C792  +
cmp [ebp+var_88] 3 +
jb loc_100C65D  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 0Ch  +
cmp [ebp+var_88] 3 +
jnz loc_100C77F  +
xor eax eax +
inc eax  +
jmp loc_100C781  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+18h] 0 +
push esi  +
jnz loc_100C7FD  +
mov esi [ebp+10h] +
test esi esi +
jz loc_100C7E6  +
push 0  +
push esi  +
call sub_10013BC  +
cmp eax 1 +
jbe loc_100C7E6  +
movzx eax word ptr [esi] +
push 2Dh  +
pop ecx  +
cmp cx ax +
jz loc_100C7E2  +
push 2Bh  +
pop ecx  +
cmp cx ax +
jnz loc_100C7E6  +
xor eax eax +
jmp loc_100C844  +
lea eax [ebp-4] +
push eax  +
push offset dword_100C84C  +
push esi  +
call sub_100C5FB  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100C844  +
lea eax [ebp-4] +
push eax  +
push offset dword_100C84C  +
push dword ptr [ebp+10h]  +
call sub_100C5FB  +
push 8  +
push dword ptr [ebp+18h]  +
call sub_1001DCB  +
test eax eax +
jz loc_100C7E2  +
lea ecx [ebp-8] +
push ecx  +
push dword ptr [ebp+14h]  +
push eax  +
call sub_100C5FB  +
mov eax [ebp-8] +
cmp eax [ebp-4] +
jnz loc_100C836  +
push 2  +
pop eax  +
jmp loc_100C844  +
jnb loc_100C83C  +
push 4  +
jmp loc_100C833  +
***
cmp [ebp-4] eax +
sbb eax eax +
and eax 8 +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+8] esi +
jz loc_100C924  +
cmp [ebp+0Ch] esi +
jz loc_100C924  +
cmp [ebp+10h] esi +
jz loc_100C924  +
cmp [ebp+18h] esi +
jz loc_100C924  +
push 5  +
push dword ptr [ebp+18h]  +
call sub_1001DCB  +
mov [ebp+18h] eax +
cmp eax esi +
jz loc_100C924  +
push esi  +
push eax  +
xor edi edi +
xor ebx ebx +
call sub_10013BC  +
mov [ebp-4] eax +
test eax eax +
jbe loc_100C8F0  +
mov eax [ebp+18h] +
movzx eax word ptr [eax+esi*2] +
push 30h  +
pop ecx  +
cmp cx ax +
ja loc_100C924  +
push 39h  +
pop ecx  +
cmp cx ax +
jb loc_100C924  +
movzx eax ax +
push 0  +
sub eax 30h +
cdq   +
push 0Ah  +
push ebx  +
mov ecx edx +
push edi  +
mov [ebp+8] eax +
mov [ebp+0Ch] ecx +
call __allmul  +
mov ecx [ebp+8] +
add ecx eax +
mov eax [ebp+0Ch] +
adc eax edx +
inc esi  +
mov edi ecx +
mov ebx eax +
cmp esi [ebp-4] +
jb loc_100C8AB  +
push 0Ah  +
push dword ptr [ebp+10h]  +
call sub_100D784  +
cdq   +
cmp edi eax +
jnz loc_100C908  +
cmp ebx edx +
jnz loc_100C90A  +
push 2  +
pop eax  +
jmp loc_100C926  +
cmp ebx edx +
ja loc_100C916  +
jb loc_100C912  +
cmp edi eax +
jnb loc_100C916  +
push 4  +
jmp loc_100C905  +
***
cmp ebx edx +
jb loc_100C924  +
ja loc_100C920  +
cmp edi eax +
jbe loc_100C924  +
push 8  +
jmp loc_100C905  +
***
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+8] edi +
jz loc_100CA3A  +
cmp [ebp+0Ch] edi +
jz loc_100CA3A  +
mov ebx [ebp+10h] +
cmp ebx edi +
jz loc_100CA3A  +
cmp [ebp+18h] edi +
jnz loc_100C9AC  +
push edi  +
push ebx  +
call sub_10013BC  +
test eax eax +
jz loc_100CA3A  +
push edi  +
push 1  +
push offset String2  +
push ebx  +
call sub_1002221  +
test eax eax +
jz loc_100CA3A  +
push 2Ah  +
push ebx  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_100C9A4  +
push edi  +
add eax 2 +
push eax  +
call sub_10013BC  +
test eax eax +
jnz loc_100CA3A  +
xor eax eax +
inc eax  +
jmp loc_100CA3C  +
mov esi ds:wcschr +
push 2Ah  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100C9D9  +
push 0  +
push eax  +
call sub_10013BC  +
push 0  +
push ebx  +
mov [ebp+8] eax +
call sub_10013BC  +
mov edi eax +
mov eax [ebp+8] +
sub edi eax +
jz loc_100CA3A  +
and dword ptr [ebp+8] 0 +
push 5Ch  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100C9EF  +
mov dword ptr [ebp+8] 1 +
push 7  +
push dword ptr [ebp+18h]  +
call sub_1001DCB  +
test eax eax +
jz loc_100CA3A  +
cmp dword ptr [ebp+8] 1 +
mov ebx eax +
jnz loc_100CA13  +
push 5Ch  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100CA13  +
lea ebx [eax+2] +
test ebx ebx +
jz loc_100CA3A  +
push edi  +
push 1  +
push dword ptr [ebp+10h]  +
push ebx  +
call sub_1002221  +
test eax eax +
jnz loc_100CA2C  +
push 2  +
pop eax  +
jmp loc_100CA3C  +
jge loc_100CA32  +
push 4  +
jmp loc_100CA29  +
***
test eax eax +
jle loc_100CA3A  +
push 8  +
jmp loc_100CA29  +
***
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
mov [ebp-4] esi +
cmp [ebp+8] esi +
jz loc_100CAB4  +
cmp [ebp+0Ch] esi +
jz loc_100CAB4  +
cmp [ebp+10h] esi +
jz loc_100CAB4  +
cmp [ebp+18h] esi +
jnz loc_100CAB4  +
push 0Ah  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
call ds:wcstoul  +
add esp 0Ch +
push esi  +
push dword ptr [ebp+10h]  +
call sub_10013BC  +
test eax eax +
jz loc_100CAB4  +
cmp [ebp-4] esi +
jz loc_100CA99  +
push esi  +
push dword ptr [ebp-4]  +
call sub_10013BC  +
test eax eax +
ja loc_100CAB4  +
call ds:_errno  +
cmp dword ptr [eax] 22h +
jnz loc_100CABB  +
push 1FCh  +
call sub_1001C99  +
push eax  +
call sub_100229D  +
xor eax eax +
pop esi  +
leave   +
retn 14h  +
***
xor eax eax +
inc eax  +
jmp loc_100CAB6  +
***
mov edi edi +
push esi  +
mov esi 3E9h +
push esi  +
call sub_1001C99  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_10069FD  +
inc esi  +
cmp esi 423h +
jbe loc_100CACD  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call loc_100CB74  +
jmp $+2  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi+0Ch] 0 +
mov [esi+4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [esi] offset off_100A8CC +
mov [esi+8] eax +
test eax eax +
jz loc_100CB3B  +
cmp [ebp+arg_8] 0 +
jz loc_100CB3B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
mov dword ptr [esi] offset off_100A8CC +
test eax eax +
jz loc_100CB5F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_100CB6D  +
push esi  +
call ds:LocalFree  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push 0  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
push dword ptr [ebp+8]  +
call sub_100CB0D  +
push offset dword_100CB9C  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
int 3  +
nop   +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_100A8CC +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov eax [eax+8] +
and dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
test eax eax +
jz loc_100CBDC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100CB47  +
test byte ptr [ebp+8] 1 +
jz loc_100CC02  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax eax +
push eax  +
push large dword ptr fs:0  +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1013000 +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_1001E64  +
jmp __EH_epilog3  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_100CC88  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100CCEC  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100CCEC  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_100CCE6  +
cmp eax 19930521h +
jz loc_100CCE6  +
cmp eax 19930522h +
jz loc_100CCE6  +
cmp eax 1994000h +
jnz loc_100CCEC  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_100CD18  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_100CD14  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100CD79  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_100CD71  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100CD7B  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_100CD61  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_1001372  +
and dword ptr [ebp-4] 0 +
mov esi 1000000h +
push esi  +
call sub_100CD02  +
pop ecx  +
test eax eax +
jz loc_100CDE2  +
mov eax [ebp+8] +
sub eax esi +
push eax  +
push esi  +
call sub_100CD3C  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100CDE2  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_100CDEB  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor eax eax +
call sub_100167C  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1001E64  +
push offset dword_1013000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1013140 eax +
mov dword_101313C ecx +
mov dword_1013138 edx +
mov dword_1013134 ebx +
mov dword_1013130 esi +
mov dword_101312C edi +
mov word_1013158 ss +
mov word_101314C cs +
mov word_1013128 ds +
mov word_1013124 es +
mov word_1013120 fs +
mov word_101311C gs +
pushf   +
pop dword_1013150  +
mov eax [ebp+0] +
mov dword_1013144 eax +
mov eax [ebp+4] +
mov dword_1013148 eax +
lea eax [ebp+8] +
mov dword_1013154 eax +
mov eax [ebp-320h] +
mov dword_1013090 10001h +
mov eax dword_1013148 +
mov dword_101304C eax +
mov dword_1013040 0C0000409h +
mov dword_1013044 1 +
mov eax dword_1013000 +
mov [ebp-328h] eax +
mov eax dword_1013004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1013018 0 +
push esi  +
jz loc_100CFA5  +
push 3  +
push dword_101301C  +
call sub_1001C47  +
cmp eax [ebp+arg_0] +
jbe loc_100CFA5  +
push [ebp+arg_0]  +
push 3  +
push dword_101301C  +
call sub_1001BEE  +
test eax eax +
jz loc_100CFA5  +
push [ebp+arg_0]  +
push 3  +
push dword_101301C  +
call sub_1001B38  +
mov esi eax +
test esi esi +
jz loc_100CFA5  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100CFA5  +
mov eax [esi+0Ch] +
jmp loc_100CFA7  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_101301C +
test eax eax +
jz loc_100CFD2  +
push eax  +
call sub_10018DB  +
test eax eax +
jz loc_100CFD2  +
push 0  +
push dword_101301C  +
call sub_1001DCB  +
retn   +
mov eax offset dword_1005DB4 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1002877  +
test eax eax +
jz loc_100CFFF  +
call sub_100CFB1  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_10069FD  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_100D02F  +
xor eax eax +
jmp loc_100D038  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_100D105  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_100D105  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_100D070  +
cmp [eax] edi +
jnz loc_100D105  +
mov eax [eax] +
cmp eax edi +
jz loc_100D07E  +
cmp eax 1 +
jbe loc_100D0EC  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_100D095  +
cmp esi edi +
jz loc_100D095  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_100D0AB  +
push edi  +
push [ebp+lpString]  +
call sub_100D020  +
cmp eax esi +
jle loc_100D0AB  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_100D0FE  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D0D3  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_100D117  +
cmp esi edi +
jz loc_100D117  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_100D117  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_100D119  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_100D0F9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D117  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_100D18A  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_100D18A  +
push esi  +
push edi  +
call sub_10013BC  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_100D183  +
push esi  +
push ebx  +
call sub_10013BC  +
test eax eax +
jz loc_100D183  +
push esi  +
push ebx  +
call sub_10013BC  +
cmp [ebp+arg_C] eax +
jnb loc_100D183  +
cmp [ebp+arg_0] esi +
jbe loc_100D183  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_1001EBE  +
cmp eax 0FFFFFFFFh +
jnz loc_100D19F  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_100D167  +
push 490h  +
jmp loc_100D196  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D19C  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100D1C0  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_100D1C5  +
mov eax 80070057h +
test eax eax +
jl loc_100D1DE  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_10057EC  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_1003E15  +
cmp eax 0FFFFFFFFh +
jnz loc_100D207  +
xor eax eax +
jmp loc_100D20A  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_100D273  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D26C  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100D46E  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_100D42B  +
cmp edi 0Fh +
jz loc_100D2A3  +
cmp edi 3 +
jz loc_100D2A3  +
cmp edi 0FFFFFFFFh +
jz loc_100D2A3  +
mov [ebp+var_40] 1 +
jmp loc_100D2BF  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_100D42B  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_100D331  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_100D42B  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_100D42F  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_100D041  +
movzx eax word ptr [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_100D349  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_100D41F  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_100D42F  +
cmp ax 8 +
jnz loc_100D3D7  +
cmp [ebp+var_28] 0 +
jz loc_100D2DD  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_10057AF  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_10057AF  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_10057AF  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_100D2DD  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_100D3EF  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset dword_100D488  +
jmp loc_100D413  +
cmp ax 0Ah +
jz loc_100D2DD  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset String2  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_100D2DD  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_100D46D  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_100D480  +
lea eax [ebp+var_18] +
push eax  +
call sub_1001975  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001E64  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString] esi +
jnz loc_100D4BA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D4B6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100D521  +
cmp [ebp+arg_0] esi +
jnz loc_100D4CC  +
push [ebp+lpString]  +
call sub_100229D  +
xor eax eax +
inc eax  +
jmp loc_100D521  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_1001A49  +
mov edi eax +
test edi edi +
jz loc_100D50C  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+lpString]  +
push esi  +
push edi  +
call sub_100D1AB  +
cmp eax 8007007Ah +
jz loc_100D4CD  +
test eax eax +
jge loc_100D51A  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100D520  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D508  +
push 8  +
jmp loc_100D502  +
push edi  +
call sub_100229D  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_1001A49  +
mov ebx eax +
test ebx ebx +
jnz loc_100D551  +
push 8  +
pop eax  +
jmp loc_100D593  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_1001A49  +
mov esi eax +
test esi esi +
jz loc_100D54C  +
push esi  +
call sub_10018FC  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_10018FC  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_100D593  +
push ebx  +
call sub_100229D  +
test eax eax +
jz loc_100D54C  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_100D741  +
push ebx  +
push [ebp+lpString]  +
call sub_10013BC  +
test eax eax +
jz loc_100D741  +
call sub_10018AD  +
test eax eax +
jz loc_100D753  +
call sub_10018AD  +
test eax eax +
jz loc_100D6FB  +
push 3  +
pop esi  +
push esi  +
push dword_101301C  +
call sub_1001C47  +
mov edi eax +
cmp edi ebx +
ja loc_100D61E  +
push esi  +
push dword_101301C  +
call sub_1001B6F  +
cmp eax ebx +
jz loc_100D6FB  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1001FC1  +
cmp eax 0FFFFFFFFh +
jz loc_100D6FB  +
push ebx  +
push esi  +
push dword_101301C  +
call sub_1001BEE  +
mov edi offset aBuffer +
test eax eax +
jz loc_100D696  +
push ebx  +
push esi  +
push dword_101301C  +
call sub_1001B38  +
mov esi eax +
cmp esi ebx +
jz loc_100D6FB  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100D6FB  +
push ebx  +
push [ebp+lpString]  +
call sub_10013BC  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100D682  +
cmp edi 100h +
jbe loc_100D6E3  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100D6E3  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100D6D3  +
call sub_1001617  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100D6DE  +
push 10h  +
call sub_1001617  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100D6FB  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1004D5E  +
push esi  +
push ebx  +
push 3  +
push dword_101301C  +
call sub_1005DFE  +
test eax eax +
jnz loc_100D64B  +
lea eax [ebp+var_8] +
push eax  +
call sub_10014CF  +
jmp loc_100D6FB  +
lea eax [esi+0Ch] +
push eax  +
call sub_1002AE5  +
test eax eax +
jz loc_100D6FB  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100D6FB  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1001975  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100D709  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D753  +
push 8  +
jmp loc_100D74D  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100D741  +
cmp [ebp+var_4] ebx +
jz loc_100D73C  +
push ebx  +
push [ebp+var_4]  +
call sub_10013BC  +
test eax eax +
jnz loc_100D741  +
fld  qword ptr [ebp-0Ch] +
jmp loc_100D755  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D753  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_100D59C  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_100D94A  +
cmp [ebp+lpString] ebx +
jz loc_100D94A  +
call sub_10018AD  +
test eax eax +
jz loc_100D95C  +
call sub_10018AD  +
test eax eax +
jz loc_100D8E0  +
push 3  +
pop esi  +
push esi  +
push dword_101301C  +
call sub_1001C47  +
mov edi eax +
cmp edi ebx +
ja loc_100D803  +
push esi  +
push dword_101301C  +
call sub_1001B6F  +
cmp eax ebx +
jz loc_100D8E0  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1001FC1  +
cmp eax 0FFFFFFFFh +
jz loc_100D8E0  +
push ebx  +
push esi  +
push dword_101301C  +
call sub_1001BEE  +
mov edi offset aBuffer +
test eax eax +
jz loc_100D87B  +
push ebx  +
push esi  +
push dword_101301C  +
call sub_1001B38  +
mov esi eax +
cmp esi ebx +
jz loc_100D8E0  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100D8E0  +
push ebx  +
push [ebp+lpString]  +
call sub_10013BC  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100D867  +
cmp edi 100h +
jbe loc_100D8C8  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100D8C8  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100D8B8  +
call sub_1001617  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100D8C3  +
push 10h  +
call sub_1001617  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100D8E0  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1004D5E  +
push esi  +
push ebx  +
push 3  +
push dword_101301C  +
call sub_1005DFE  +
test eax eax +
jnz loc_100D830  +
lea eax [ebp+var_8] +
push eax  +
call sub_10014CF  +
jmp loc_100D8E0  +
lea eax [esi+0Ch] +
push eax  +
call sub_1002AE5  +
test eax eax +
jz loc_100D8E0  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100D8E0  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1001975  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100D8EE  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D95C  +
push 8  +
jmp loc_100D956  +
push 3  +
push ebx  +
push esi  +
call sub_100255D  +
push ebx  +
push esi  +
call sub_10013BC  +
test eax eax +
jz loc_100D94A  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_100D922  +
call ds:wcstol  +
jmp loc_100D928  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100D94A  +
cmp [ebp+var_4] ebx +
jz loc_100D946  +
push ebx  +
push [ebp+var_4]  +
call sub_10013BC  +
test eax eax +
jnz loc_100D94A  +
mov eax esi +
jmp loc_100D95E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D95C  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 0  +
push [ebp+lpString]  +
call sub_100255D  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_100DA8C  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_100DA8C  +
cmp [ebp+arg_4] ebx +
jnz loc_100D9B7  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_10069FD  +
jmp loc_100DAA0  +
cmp [ebp+arg_8] ebx +
jnz loc_100DA4C  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_1001A49  +
mov edi eax +
test edi edi +
jz loc_100DA39  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_100DA29  +
call ds:GetLastError  +
test eax eax +
jz loc_100DA47  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_100DA9E  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_100D9C4  +
push edi  +
jmp loc_100D9AA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DA9E  +
push 8  +
jmp loc_100DA98  +
xor eax eax +
inc eax  +
jmp loc_100DAA0  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_1001A49  +
mov edi eax +
test edi edi +
jz loc_100DA39  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_100D1AB  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_100DA4C  +
test eax eax +
jge loc_100DA33  +
movzx eax ax +
push eax  +
jmp loc_100DA98  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DA9E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10018DB  +
test eax eax +
jz loc_100DAF2  +
push 4  +
call sub_1001617  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100DAF2  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1002097  +
cmp eax 0FFFFFFFFh +
jnz locret_100DAF5  +
lea eax [ebp+var_4] +
push eax  +
call sub_10014CF  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10018DB  +
test eax eax +
jz loc_100DB47  +
push 4  +
call sub_1001617  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100DB47  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1002097  +
cmp eax 0FFFFFFFFh +
jnz locret_100DB4A  +
lea eax [ebp+var_4] +
push eax  +
call sub_10014CF  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10018DB  +
test eax eax +
jz loc_100DB9C  +
push 8  +
call sub_1001617  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100DB9C  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1002097  +
cmp eax 0FFFFFFFFh +
jnz locret_100DB9F  +
lea eax [ebp+var_4] +
push eax  +
call sub_10014CF  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jnz loc_100DBC3  +
or eax 0FFFFFFFFh +
jmp loc_100DBDB  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_100DBD6  +
cmp ecx 30000h +
jnz loc_100DBBE  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jnz loc_100DBFE  +
xor eax eax +
jmp loc_100DC16  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_100DC11  +
cmp ecx 30000h +
jnz loc_100DBFA  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jnz loc_100DC3D  +
fld  ds:flt_100DC50 +
jmp loc_100DC4B  +
cmp dword ptr [eax+4] 60000h +
jnz loc_100DC35  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jnz loc_100DC77  +
fld  ds:dbl_100DC90 +
jmp loc_100DC85  +
cmp dword ptr [eax+4] 70000h +
jnz loc_100DC6F  +
mov eax [eax+0Ch] +
fld  qword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_100DCC9  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100DCC9  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100DBA8  +
jmp loc_100DCCC  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_100DD01  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100DD01  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100DBE4  +
jmp loc_100DD03  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100219D  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100219D  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100219D  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100219D  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_100DDCA  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100DDCA  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+lpString2]  +
push dword ptr [eax+0Ch]  +
call sub_1002179  +
jmp loc_100DDCD  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_10018DB  +
test eax eax +
jz loc_100DE07  +
push [ebp+arg_4]  +
call sub_10018DB  +
test eax eax +
jz loc_100DE07  +
push [ebp+arg_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_1002097  +
jmp loc_100DE0A  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
call sub_10018DB  +
test eax eax +
jz loc_100DE5E  +
mov esi [ebp+arg_8] +
push esi  +
call sub_10018DB  +
test eax eax +
jz loc_100DE5E  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001BA4  +
test eax eax +
jz loc_100DE5E  +
mov edx [eax+4] +
mov ecx 80000h +
cmp edx ecx +
jz loc_100DE53  +
test edx edx +
jnz loc_100DE5E  +
mov [eax+0Ch] esi +
mov [eax+4] ecx +
xor eax eax +
inc eax  +
jmp loc_100DE60  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_100DE8B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DE87  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100DEB0  +
push 0  +
push [ebp+lpString1]  +
call sub_10013BC  +
cmp eax 2 +
jbe loc_100DE87  +
push 2  +
push 1  +
push offset asc_100A8C4  +
push [ebp+lpString1]  +
call sub_1002221  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_100DF4A  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100DF4A  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_1001A49  +
cmp eax esi +
jnz loc_100DEF9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DF55  +
push 8  +
jmp loc_100DF4F  +
mov esi ds:wcstok +
mov edi offset a_ +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_100DF4A  +
push 0  +
push 0Ah  +
push ebx  +
call sub_1002400  +
test eax eax +
jz loc_100DF55  +
push 0Ah  +
push ebx  +
call sub_100D784  +
cmp eax 0FFh +
ja loc_100DF55  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_100DF10  +
cmp [ebp+var_4] 4 +
jnz loc_100DF4A  +
inc eax  +
jmp loc_100DF57  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_100E0E7  +
cmp ebx esi +
jz loc_100E0E7  +
mov eax [ebx] +
cmp eax esi +
jz loc_100DFE0  +
cmp eax 2 +
jb loc_100E0E7  +
cmp edx esi +
jz loc_100E0E7  +
cmp dword_1013488 esi +
jnz loc_100E014  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_100E00A  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_100E0F3  +
mov dword_1013488 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call ds:GetAddrInfoW  +
test eax eax +
jnz loc_100E0F9  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_100E081  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:GetNameInfoW  +
cmp eax edi +
jz loc_100E087  +
cmp eax 2AFCh +
jnz loc_100E07E  +
cmp [ebp+var_848] di +
jnz loc_100E087  +
mov esi [esi+1Ch] +
cmp esi edi +
jz loc_100E0D3  +
jmp loc_100E041  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_100E0A4  +
mov eax esi +
push offset a_  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_10013BC  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_100E0C0  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_100E0D3  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_1001975  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call ds:FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_100E0FB  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E0F9  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_100E165  +
push esi  +
push edi  +
call sub_10013BC  +
test eax eax +
jz loc_100E165  +
push edi  +
call sub_100DE6A  +
push edi  +
test eax eax +
jnz loc_100E16D  +
push offset aS_0  +
push 1  +
call sub_100D497  +
add esp 0Ch +
test eax eax +
jnz loc_100E174  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E160  +
push 8  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_100229D  +
jmp loc_100E14A  +
call sub_100CFB1  +
cmp eax esi +
jnz loc_100E186  +
push 0Dh  +
call sub_100CF40  +
jmp loc_100E190  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_1001A49  +
cmp eax esi +
jz loc_100E14E  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_100E165  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_100E1BF  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_100E167  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_100E2CE  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100E2CE  +
push esi  +
call sub_100DE6A  +
cmp eax 1 +
jnz loc_100E204  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_100E23F  +
push offset aIpc  +
push esi  +
push offset aSS_2  +
push 2  +
call sub_100D497  +
add esp 10h +
test eax eax +
jnz loc_100E26C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E237  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_100E2D0  +
test bl 20h +
jz loc_100E24B  +
push offset aAdmin  +
jmp loc_100E211  +
test bl 40h +
jz loc_100E25A  +
cmp [ebp+arg_4] edi +
jz loc_100E25A  +
push [ebp+arg_4]  +
jmp loc_100E211  +
push esi  +
push offset aS_0  +
push 1  +
call sub_100D497  +
add esp 0Ch +
jmp loc_100E221  +
call sub_100CFB1  +
cmp eax edi +
jnz loc_100E27E  +
push 12h  +
call sub_100CF40  +
jmp loc_100E288  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_1001A49  +
cmp eax edi +
jz loc_100E225  +
test ebx 10000000h +
jz loc_100E29B  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_100E2C1  +
cmp esi 4B8h +
jz loc_100E2BA  +
call sub_1002877  +
jmp loc_100E2CA  +
call sub_100D529  +
jmp loc_100E2CA  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_100E2D0  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_100E443  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100E443  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_100E340  +
xor eax eax +
jmp loc_100E446  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1001A49  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_100E364  +
call ebx  +
test eax eax +
jnz loc_100E339  +
push 8  +
call ds:SetLastError  +
jmp loc_100E339  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_100E339  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_1002221  +
test eax eax +
jz loc_100E443  +
push [ebp+lpString]  +
call sub_100DEB9  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_100E3FF  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_100DF63  +
test eax eax +
jz loc_100E339  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_1001A49  +
mov esi eax +
cmp esi edi +
jz loc_100E339  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_100DF63  +
test eax eax +
jz loc_100E339  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_1002221  +
test eax eax +
jnz loc_100E3EB  +
mov eax ebx +
jmp loc_100E446  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_1002221  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_100E446  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_100E339  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1001A49  +
mov ebx eax +
cmp ebx edi +
jz loc_100E339  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_100E339  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_100E3F3  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_100E505  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100E505  +
push ebx  +
call sub_100DEB9  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_100E4E7  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_100DF63  +
test eax eax +
jnz loc_100E4C3  +
xor eax eax +
jmp loc_100E508  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_1001A49  +
cmp eax esi +
jz loc_100E4BF  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_100DF63  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100E508  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_100D125  +
cmp eax 0FFFFFFFFh +
jz loc_100E501  +
push 35h  +
call ds:SetLastError  +
jmp loc_100E4BF  +
mov eax edi +
jmp loc_100E508  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_100E1CE  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_100E6D1  +
push esi  +
call sub_100E2EB  +
cmp eax 1 +
jz loc_100E6D1  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_100DE6A  +
cmp eax 1 +
jnz loc_100E5B0  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_100E469  +
test eax eax +
jnz loc_100E5CC  +
call sub_1002877  +
call ds:GetLastError  +
jmp loc_100E705  +
cmp [ebp+lpString] ebx +
jz loc_100E5F5  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100E5F5  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_2  +
push 2  +
call sub_100D497  +
add esp 10h +
jmp loc_100E607  +
push dword ptr [ebp+arg_0]  +
push offset aS_0  +
push 1  +
call sub_100D497  +
add esp 0Ch +
test eax eax +
jnz loc_100E62A  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E61D  +
push 8  +
call ds:SetLastError  +
call sub_1002877  +
push 8  +
pop eax  +
jmp loc_100E705  +
call sub_100CFB1  +
cmp eax ebx +
jnz loc_100E63C  +
push 12h  +
call sub_100CF40  +
jmp loc_100E646  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_1001A49  +
mov edx eax +
cmp edx ebx +
jz loc_100E60B  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_100E697  +
cmp esi 4B8h +
jz loc_100E690  +
push esi  +
call ds:SetLastError  +
call sub_1002877  +
jmp loc_100E6FF  +
call sub_100D529  +
jmp loc_100E6FF  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_100E111  +
push eax  +
call sub_100D008  +
test eax eax +
jnz loc_100E6FF  +
push dword ptr [ebp+arg_0]  +
call sub_100E559  +
push 1580h  +
call sub_1001C99  +
push eax  +
call sub_100229D  +
mov esi 4B8h +
jmp loc_100E6FF  +
cmp [ebp+lpUserName] ebx +
jz loc_100E703  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100E703  +
push 157Eh  +
call sub_1001C99  +
push eax  +
call sub_100229D  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_100E705  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_100E576  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_100E777  +
cmp dword ptr [ebp+arg_8] esi +
jz loc_100E777  +
cmp [ebp+arg_0] esi +
jbe loc_100E784  +
lea edi [ebx+4] +
push 1  +
push edi  +
push dword ptr [ebp+arg_8]  +
call sub_10056D8  +
test eax eax +
jnz loc_100E76C  +
inc esi  +
add edi 0D0h +
cmp esi [ebp+arg_0] +
jnb loc_100E784  +
jmp loc_100E74F  +
imul esi esi +
mov eax [esi+ebx] +
jmp loc_100E786  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_100E7D8  +
cmp [ebp+lpString2] 0 +
jz loc_100E7D8  +
cmp [ebp+arg_C] 0FFFFFFFFh +
jnz loc_100E7B0  +
mov eax 0FFh +
jmp loc_100E7E7  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push [ebp+lpString1]  +
call sub_1002221  +
test eax eax +
jnz loc_100E7CA  +
push 2  +
pop eax  +
jmp loc_100E7E7  +
jge loc_100E7D0  +
push 4  +
jmp loc_100E7C7  +
test eax eax +
jle loc_100E7E5  +
push 8  +
jmp loc_100E7C7  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jnz loc_100E802  +
push 2  +
pop eax  +
jmp loc_100E813  +
jge loc_100E808  +
push 4  +
jmp loc_100E7FF  +
cmp eax [ebp+arg_4] +
jle loc_100E811  +
push 8  +
jmp loc_100E7FF  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jnz loc_100E82E  +
push 2  +
pop eax  +
jmp loc_100E83C  +
jnb loc_100E834  +
push 4  +
jmp loc_100E82B  +
cmp [ebp+arg_4] eax +
sbb eax eax +
and eax 8 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
fld  [ebp+arg_0] +
fld  [ebp+arg_4] +
fucompp   +
fnstsw  ax +
test ah 44h +
jp loc_100E85E  +
push 2  +
pop eax  +
jmp loc_100E886  +
fld  [ebp+arg_0] +
fld  [ebp+arg_4] +
fcompp st(1) st +
fnstsw  ax +
test ah 41h +
jnz loc_100E871  +
push 4  +
jmp loc_100E85B  +
fld  [ebp+arg_0] +
fld  [ebp+arg_4] +
fcompp st(1) st +
fnstsw  ax +
test ah 5 +
jp loc_100E884  +
push 8  +
jmp loc_100E85B  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
fld  [ebp+arg_8] +
fcomp  [ebp+arg_0] +
fnstsw  ax +
test ah 44h +
jp loc_100E8A6  +
push 2  +
pop eax  +
jmp loc_100E8CA  +
fld  [ebp+arg_8] +
fcomp  [ebp+arg_0] +
fnstsw  ax +
test ah 41h +
jnz loc_100E8B7  +
push 4  +
jmp loc_100E8A3  +
fld  [ebp+arg_8] +
fcomp  [ebp+arg_0] +
fnstsw  ax +
test ah 5 +
jp loc_100E8C8  +
push 8  +
jmp loc_100E8A3  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6ECh +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov ecx 137h +
lea esi [ebp+arg_8] +
lea edi [ebp+var_6E0] +
movs   +
xor esi esi +
push 1FAh  +
mov [ebp+var_6E4] eax +
lea eax [ebp+var_200] +
push esi  +
push eax  +
mov dword ptr [ebp+String] esi +
call memset  +
mov edi [ebp+var_6E4] +
add esp 0Ch +
cmp edi esi +
jz loc_100EB30  +
cmp ebx esi +
jz loc_100EB30  +
mov eax [ebp+var_410] +
and eax 0FFFh +
dec eax  +
cmp eax 8 +
ja loc_100EB29  +
jmp ds:off_100EB50[eax*4]  +
push [ebp+var_6E0]  +
push edi  +
call sub_1001DCB  +
push 3  +
push ebx  +
mov edi eax +
call sub_1001DCB  +
mov ebx eax +
cmp edi esi +
jz loc_100EB3D  +
cmp ebx esi +
jz loc_100EB3D  +
test [ebp+var_410] 2000h +
jz loc_100E9D8  +
push 0FEh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1001975  +
lea eax [ebp+String] +
push 2Ah  +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100E9D8  +
mov esi ds:lstrlenW +
push eax  +
call esi  +
lea ecx [ebp+String] +
push ecx  +
mov [ebp+var_6E4] eax +
call esi  +
mov esi eax +
mov eax [ebp+var_6E4] +
sub esi eax +
jnz loc_100E9D8  +
or esi 0FFFFFFFFh +
push esi  +
push 1  +
push ebx  +
push edi  +
call sub_100E792  +
jmp loc_100EB3F  +
push 3  +
push ebx  +
call sub_1001DCB  +
mov esi eax +
test esi esi +
jz loc_100EB3D  +
push [ebp+var_6E0]  +
push edi  +
call sub_100DBA8  +
push 0Ah  +
push esi  +
mov edi eax +
call sub_100D784  +
push eax  +
push edi  +
call sub_100E7F0  +
jmp loc_100EB3F  +
push 3  +
push ebx  +
call sub_1001DCB  +
mov esi eax +
test esi esi +
jz loc_100EB3D  +
push [ebp+var_6E0]  +
push edi  +
call sub_100DBA8  +
push 0Ah  +
push esi  +
mov edi eax +
call sub_100D784  +
push eax  +
push edi  +
call sub_100E81C  +
jmp loc_100EB3F  +
push 3  +
push ebx  +
call sub_1001DCB  +
mov esi eax +
test esi esi +
jz loc_100EB3D  +
push [ebp+var_6E0]  +
push edi  +
call sub_100DC1F  +
fstp  [ebp+var_6E8] +
push esi  +
call sub_100D59C  +
fstp  [ebp+var_6E4] +
fld  [ebp+var_6E4] +
push ecx  +
push ecx  +
fstp  dword ptr [esp+700h+var_700+4] +
fld  [ebp+var_6E8] +
fstp  dword ptr [esp+700h+var_700] +
call sub_100E845  +
jmp loc_100EB3F  +
push 3  +
push ebx  +
call sub_1001DCB  +
mov esi eax +
test esi esi +
jz loc_100EB3D  +
push [ebp+var_6E0]  +
push edi  +
call sub_100DC59  +
fstp  qword ptr [ebp-6ECh] +
push esi  +
call sub_100D59C  +
sub esp 10h +
fstp  [esp+708h+var_700] +
fld  qword ptr [ebp-6ECh] +
fstp  [esp+708h+var_708] +
call sub_100E88F  +
jmp loc_100EB3F  +
push 1  +
push ebx  +
call sub_1001DCB  +
push 2  +
push ebx  +
mov esi eax +
call sub_1001DCB  +
push 3  +
push ebx  +
mov edi eax +
call sub_1001DCB  +
test esi esi +
jz loc_100EB3D  +
test edi edi +
jz loc_100EB3D  +
test eax eax +
jz loc_100EB3D  +
mov ecx [ebp+var_208] +
test ecx ecx +
jnz loc_100EB17  +
lea ecx [ebp+var_6E0] +
push [ebp+var_6E4]  +
push ecx  +
push eax  +
push edi  +
push esi  +
call [ebp+var_20C]  +
jmp loc_100EB3F  +
mov eax 0FFh +
jmp loc_100EB3F  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 4E4h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6E4h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov ecx 137h +
lea esi [ebp+arg_8] +
lea edi [ebp+var_6E0] +
movs   +
xor esi esi +
push 1FAh  +
mov [ebp+var_6E4] eax +
lea eax [ebp+var_200] +
push esi  +
push eax  +
mov dword ptr [ebp+String] esi +
call memset  +
add esp 0Ch +
cmp ebx esi +
jz loc_100ECB4  +
cmp [ebp+var_6E4] esi +
jz loc_100ECB4  +
push [ebp+var_6E0]  +
push ebx  +
call sub_1001B6F  +
mov ebx eax +
cmp ebx esi +
jz loc_100ECC1  +
mov eax [ebp+var_410] +
and eax 0FFFh +
dec eax  +
jnz loc_100ECB0  +
push 3  +
push [ebp+var_6E4]  +
call sub_1001DCB  +
mov edi eax +
test edi edi +
jz loc_100ECC1  +
test [ebp+var_410] 2000h +
jz loc_100EC83  +
push 0FEh  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1001975  +
lea eax [ebp+String] +
push 2Ah  +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100EC83  +
mov esi ds:lstrlenW +
push eax  +
call esi  +
lea ecx [ebp+String] +
push ecx  +
mov [ebp+var_6E4] eax +
call esi  +
mov esi eax +
mov eax [ebp+var_6E4] +
sub esi eax +
jnz loc_100EC77  +
or esi 0FFFFFFFFh +
cmp esi 0FFFFFFFFh +
jnz loc_100EC83  +
mov esi 0FFh +
jmp loc_100ECB0  +
push esi  +
push 1  +
push edi  +
push ebx  +
call sub_1002179  +
cmp eax 0FFFFFFFFh +
jnz loc_100EC99  +
mov esi 0FCh +
jmp loc_100ECB0  +
push eax  +
push ebx  +
call sub_1001DCB  +
test eax eax +
jz loc_100ECC1  +
push esi  +
push 1  +
push edi  +
push eax  +
call sub_100E792  +
mov esi eax +
mov eax esi +
jmp loc_100ECC3  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 4E4h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6E8h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4E0] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 1FAh  +
mov ecx 137h +
lea esi [ebp+arg_0] +
lea edi [ebp+var_6E0] +
movs   +
mov edi [ebp+arg_4DC] +
mov esi [ebp+arg_4E4] +
mov [ebp+var_6E4] eax +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+var_6E8] edi +
mov dword ptr [ebp+var_204] ebx +
call memset  +
add esp 0Ch +
cmp edi ebx +
jz loc_100EE5F  +
cmp [ebp+var_6E4] ebx +
jz loc_100EE5F  +
cmp esi ebx +
jz loc_100EE5F  +
mov edi ds:lstrlenW +
push esi  +
call edi  +
test eax eax +
jz loc_100EE6C  +
mov eax [ebp+var_410] +
and eax 0FFFh +
dec eax  +
cmp eax 8 +
ja loc_100EE6C  +
jmp ds:off_100EE7F[eax*4]  +
test [ebp+var_410] 2000h +
jz loc_100EDD4  +
push 0FEh  +
push esi  +
lea eax [ebp+var_204] +
push eax  +
call sub_1001975  +
lea eax [ebp+var_204] +
push 2Ah  +
push eax  +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_100EDD4  +
push ebx  +
call edi  +
cmp eax 1 +
jnz loc_100EE6C  +
lea eax [ebp+var_204] +
cmp ebx eax +
jz loc_100EE6C  +
test [ebp+var_410] 1000h +
jnz loc_100EDE8  +
xor eax eax +
inc eax  +
jmp loc_100EE6E  +
push 1  +
lea eax [ebp+lpString] +
push eax  +
push esi  +
call sub_10056D8  +
jmp loc_100EE6E  +
push 1  +
push 0Ah  +
push esi  +
call sub_1002400  +
test eax eax +
jz loc_100EE6C  +
test [ebp+var_410] 1000h +
jz loc_100EDE0  +
push 1  +
push esi  +
lea eax [ebp+lpString] +
push eax  +
jmp loc_100EDF2  +
push ebx  +
jmp loc_100EDFB  +
push esi  +
call sub_100D761  +
jmp loc_100EE6E  +
cmp [ebp+var_20C] ebx +
jz loc_100EE6C  +
mov eax [ebp+var_208] +
cmp eax ebx +
jnz loc_100EE42  +
lea eax [ebp+var_6E0] +
push ebx  +
push eax  +
push esi  +
push [ebp+var_6E4]  +
push [ebp+var_6E8]  +
call [ebp+var_20C]  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100EE6E  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 4E8h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 624h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_610] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_61C] eax +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov [ebp+var_614] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+lpString] eax +
mov eax [ebp+arg_14] +
mov esi 1FAh +
xor ebx ebx +
push esi  +
mov [ebp+var_620] eax +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
push esi  +
lea eax [ebp+var_400] +
push ebx  +
push eax  +
mov dword ptr [ebp+sz] ebx +
call memset  +
push esi  +
lea eax [ebp+var_600] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_604] ebx +
call memset  +
add esp 24h +
cmp edi ebx +
jz loc_100F17B  +
cmp [ebp+var_610] ebx +
jz loc_100F17B  +
cmp [ebp+var_61C] ebx +
jz loc_100F17B  +
cmp [ebp+var_614] ebx +
jz loc_100F17B  +
cmp [ebp+lpString] ebx +
jz loc_100F17B  +
cmp [ebp+var_620] ebx +
jz loc_100F17B  +
mov ebx 0FEh +
push ebx  +
push edi  +
lea eax [ebp+sz] +
push eax  +
call sub_1001975  +
lea eax [ebp+sz] +
push eax  +
call ds:CharUpperW  +
push 203Eh  +
call ds:SetLastError  +
call sub_1002877  +
push [ebp+var_610]  +
call sub_1001C7B  +
and [ebp+var_608] 0 +
mov [ebp+var_624] eax +
test eax eax +
jbe loc_100F188  +
push 0  +
push [ebp+var_608]  +
push [ebp+var_610]  +
call sub_1001D94  +
test eax eax +
jz loc_100F150  +
push ebx  +
push eax  +
push [ebp+lpString]  +
call sub_1001975  +
push ebx  +
push [ebp+lpString]  +
lea eax [ebp+var_604] +
push eax  +
call sub_1001975  +
lea eax [ebp+var_604] +
push eax  +
call ds:CharUpperW  +
push ebx  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1001975  +
lea eax [ebp+var_604] +
push eax  +
lea eax [ebp+String] +
push eax  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
mov [ebp+var_618] eax +
test eax eax +
jz loc_100F137  +
mov esi ds:lstrlenW +
push eax  +
call esi  +
mov edi eax +
lea eax [ebp+String] +
push eax  +
call esi  +
sub eax edi +
xor ecx ecx +
mov [ebp+eax*2+String] cx +
push ebx  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_614]  +
call sub_1001975  +
push [ebp+lpString]  +
call esi  +
mov edi [ebp+var_618] +
lea eax [edi+eax*2] +
test eax eax +
jz loc_100F137  +
push ebx  +
push [ebp+lpString]  +
call esi  +
mov esi [ebp+var_620] +
lea eax [edi+eax*2] +
push eax  +
push esi  +
call sub_1001975  +
push ebx  +
push 3  +
push esi  +
call sub_100D96A  +
push eax  +
push esi  +
call sub_1001975  +
mov edi [ebp+var_614] +
push ebx  +
push 3  +
push edi  +
call sub_100D96A  +
push eax  +
push edi  +
call sub_1001975  +
push 0  +
push 1  +
push edi  +
push [ebp+var_608]  +
push [ebp+var_610]  +
call sub_100DD98  +
cmp eax 1 +
jle loc_100F137  +
dec eax  +
push eax  +
push [ebp+var_608]  +
push [ebp+var_610]  +
call sub_100DC9D  +
push esi  +
push [ebp+lpString]  +
mov esi eax +
imul esi esi +
add esi [ebp+var_61C] +
push edi  +
sub esp 4DCh +
mov edi esp +
mov ecx 137h +
mov [ebp+var_618] eax +
movs   +
call sub_100ECD9  +
test eax eax +
jnz loc_100F161  +
inc [ebp+var_608]  +
mov eax [ebp+var_608] +
cmp eax [ebp+var_624] +
jnb loc_100F188  +
jmp loc_100EFCA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F183  +
push 42Bh  +
jmp loc_100F17D  +
push 0  +
call ds:SetLastError  +
push offset dword_1002294  +
call sub_100229D  +
mov eax [ebp+var_618] +
jmp loc_100F18B  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4FCh +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4E4] 2 +
mov esi offset aEq +
lea edi [ebp+var_4E0] +
movs   +
mov [ebp+var_4F4] eax +
mov eax [ebp+arg_8] +
movs   +
mov [ebp+var_4F0] eax +
mov eax [ebp+arg_C] +
movs   +
push 0BCh  +
mov [ebp+var_4EC] eax +
lea eax [ebp+var_4D2] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_414] 0FCh +
mov esi offset aNe +
lea edi [ebp+var_410] +
movs   +
movs   +
mov ebx 0BAh +
movs   +
push ebx  +
lea eax [ebp+var_400] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_344] 8 +
mov esi offset aGt +
lea edi [ebp+var_340] +
movs   +
movs   +
movs   +
push 0BCh  +
lea eax [ebp+var_332] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_274] 4 +
mov esi offset aLt +
lea edi [ebp+var_270] +
movs   +
movs   +
movs   +
push 0BCh  +
lea eax [ebp+var_262] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_1A4] 0Ah +
mov esi offset aGe +
lea edi [ebp+var_1A0] +
movs   +
movs   +
movs   +
push ebx  +
lea eax [ebp+var_190] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_D4] 6 +
mov esi offset aLe +
lea edi [ebp+var_D0] +
movs   +
movs   +
movs   +
movs   +
push ebx  +
xor esi esi +
push esi  +
lea eax [ebp+var_C0] +
push eax  +
call memset  +
mov edi [ebp+var_4F4] +
add esp 48h +
cmp edi esi +
jz loc_100F410  +
cmp [ebp+var_4F0] esi +
jz loc_100F410  +
cmp [ebp+var_4EC] esi +
jz loc_100F410  +
push [ebp+var_4EC]  +
call sub_1001C7B  +
mov [ebp+var_4F8] eax +
mov [ebp+var_4E8] esi +
cmp eax esi +
jbe loc_100F3FD  +
add ebx 7Dh +
jmp loc_100F328  +
xor esi esi +
push esi  +
push [ebp+var_4E8]  +
push [ebp+var_4EC]  +
call sub_100DCD5  +
push 2  +
push [ebp+var_4E8]  +
mov esi eax +
push [ebp+var_4EC]  +
call sub_1001D94  +
test eax eax +
jz loc_100F3E5  +
push eax  +
lea eax [ebp+var_4E4] +
push eax  +
push 6  +
call sub_100E731  +
mov [ebp+var_4FC] eax +
test eax eax +
jnz loc_100F38D  +
mov eax esi +
imul eax eax +
mov eax [eax+edi+2D0h] +
and eax 0FFFh +
cmp eax 9 +
jnz loc_100F41D  +
push [ebp+var_4E8]  +
push [ebp+var_4EC]  +
call sub_1001B6F  +
test eax eax +
jz loc_100F41D  +
imul esi esi +
sub esp 4DCh +
add esi edi +
test dword ptr [esi+2D0h] 4000h +
mov edi esp +
mov ecx ebx +
push eax  +
push [ebp+var_4F0]  +
movs   +
jz loc_100F3D0  +
call sub_100EB79  +
jmp loc_100F3D5  +
call sub_100E8D3  +
mov ecx [ebp+var_4FC] +
test eax ecx +
jz loc_100F3FD  +
mov edi [ebp+var_4F4] +
inc [ebp+var_4E8]  +
mov eax [ebp+var_4E8] +
cmp eax [ebp+var_4F8] +
jb loc_100F326  +
mov ecx [ebp+var_4F8] +
xor eax eax +
cmp [ebp+var_4E8] ecx +
setnz al  +
jmp loc_100F41F  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001E64  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4E8h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4E4] 2 +
mov esi offset aEq +
lea edi [ebp+var_4E0] +
movs   +
movs   +
movs   +
push 0BCh  +
mov [ebp+var_4E8] eax +
lea eax [ebp+var_4D2] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_414] 0FCh +
mov esi offset aNe +
lea edi [ebp+var_410] +
movs   +
movs   +
mov ebx 0BAh +
movs   +
push ebx  +
lea eax [ebp+var_400] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_344] 8 +
mov esi offset aGt +
lea edi [ebp+var_340] +
movs   +
movs   +
movs   +
push 0BCh  +
lea eax [ebp+var_332] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_274] 4 +
mov esi offset aLt +
lea edi [ebp+var_270] +
movs   +
movs   +
movs   +
push 0BCh  +
lea eax [ebp+var_262] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_1A4] 0Ah +
mov esi offset aGe +
lea edi [ebp+var_1A0] +
movs   +
movs   +
movs   +
push ebx  +
lea eax [ebp+var_190] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_D4] 6 +
mov esi offset aLe +
lea edi [ebp+var_D0] +
movs   +
movs   +
movs   +
push ebx  +
lea eax [ebp+var_C0] +
push 0  +
push eax  +
movs   +
call memset  +
add esp 48h +
pop edi  +
pop esi  +
cmp [ebp+var_4E8] 0 +
pop ebx  +
jnz loc_100F589  +
push 57h  +
call ds:SetLastError  +
call sub_1002877  +
mov eax offset loc_100F600 +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001E64  +
leave   +
retn 4  +
push [ebp+var_4E8]  +
lea eax [ebp+var_4E4] +
push eax  +
push 6  +
call sub_100E731  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_100F576  +
sub eax ecx +
jz loc_100F5D7  +
sub eax ecx +
jz loc_100F5D0  +
sub eax ecx +
jz loc_100F5C9  +
sub eax ecx +
jz loc_100F5C2  +
sub eax 0F2h +
jnz loc_100F576  +
mov eax offset asc_100F5F8 +
jmp loc_100F57B  +
mov eax offset asc_100F5F0 +
jmp loc_100F57B  +
mov eax offset dword_100F5EC +
jmp loc_100F57B  +
mov eax offset asc_100F5E4 +
jmp loc_100F57B  +
mov eax offset dword_100F5E0 +
jmp loc_100F57B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_100F68E  +
cmp [ebp+arg_4] ebx +
jnz loc_100F68E  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1001EBE  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_100F648  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_10013BC  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_1001A49  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_100F66B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F69C  +
push 8  +
jmp loc_100F69A  +
lea ecx [esi+1] +
push ecx  +
push offset dword_100F6A8  +
push eax  +
call sub_1001975  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_1005623  +
mov eax [ebp+arg_4] +
jmp loc_100F69E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F69C  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
test ebx ebx +
jz loc_100F730  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_100F730  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_100CFB1  +
test eax eax +
jnz loc_100F6E1  +
push 7  +
call sub_100CF40  +
jmp loc_100F6ED  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_1001A49  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_100F730  +
test ebx ebx +
jbe loc_100F71A  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_100F714  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_100F714  +
push esi  +
call sub_10014CF  +
add esi 50h +
dec ebx  +
jnz loc_100F6FB  +
push [ebp+lpString]  +
call sub_100229D  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_100F732  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp-10h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
push ss  +
sar edi cl +
call dword ptr [eax-6F6F6F70h]  +
lea ecx [ebp-20h] +
jmp sub_1001E4E  +
***
lea ecx [ebp-1Ch] +
jmp sub_1001E4E  +
***
lea ecx [ebp-18h] +
jmp sub_1001E4E  +
***
lea ecx [ebp-24h] +
jmp sub_1001E4E  +
***
setalc   +
sar bh cl +
call dword ptr [eax-6F6F6F70h]  +
lea ecx [ebp-0C0h] +
jmp sub_10064DB  +
***
sahf   +
sar edi 1 +
call dword ptr [eax-6F6F6F70h]  +
lea ecx [ebp-1Ch] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp-18h] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp-34h] +
jmp sub_1001E4E  +
***
lea ecx [ebp-30h] +
jmp sub_1001E4E  +
***
pop esi  +
sar edi 1 +
call dword ptr [eax-6F6F6F70h]  +
lea ecx [ebp-24h] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp-20h] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp-1Ch] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp-18h] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp-40h] +
jmp sub_1001E4E  +
***
lea ecx [ebp-3Ch] +
jmp sub_1001E4E  +
***
push cs  +
sar edi 1 +
call dword ptr [eax-6F6F6F70h]  +
lea ecx [ebp-14h] +
jmp ??1CHString@@QAE@XZ  +
***
mov esi 90FFFFD0h +
nop   +
nop   +
nop   +
nop   +
lea ecx [ebp-1Ch] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp-64h] +
jmp ??1CHString@@QAE@XZ  +
***
sar bh 1 +
call dword ptr [eax-6F6F6F70h]  +
lea ecx [ebp-14h] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp-18h] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp+0Ch] +
jmp ??1CHString@@QAE@XZ  +
***
lea ecx [ebp+0Ch] +
jmp ??1CHString@@QAE@XZ  +
***
sar bh 1 +
call dword ptr [eax-6F6F6F70h]  +
mov eax [ebp-10h] +
and eax 1 +
jz locret_100FBDC  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_1001E4E  +
***
retn   +
***
lea ecx [ebp-1Ch] +
jmp ??1CHString@@QAE@XZ  +
***
inc ecx  +
ins  dx +
ins  dx +
outs   +
arpl [eax] ax +
iret   +
***
imul ebp [edi+6Eh] +
jb $+3  +
jmp near ptr 756F6207h  +
***
add gs:[eax] al +
jmp far ptr 6473h:63775F03h  +
***
