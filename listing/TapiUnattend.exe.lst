mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ConstructPartialMsgVW  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ds:RegQueryValueExW +
push edi  +
lea eax [ebp+cbData] +
push eax  +
xor edi edi +
push edi  +
lea eax [ebp+dwType] +
push eax  +
push edi  +
push [ebp+lpValueName]  +
xor ebx ebx +
push [ebp+hKey]  +
call esi  +
mov [ebp+lpData] eax +
cmp eax edi +
jz loc_10018D0  +
mov ebx eax +
jle loc_100188E  +
and ebx 0FFFFh +
or ebx 80070000h +
push edi  +
push edi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aCopyvalueinreg  +
push offset aDW7rtmPrintsca  +
push 66h  +
push edi  +
push offset aD  +
push edi  +
push [ebp+lpData]  +
push offset aTapiunattendEr  +
push 2000000h  +
call sub_1001835  +
add esp 0Ch +
push eax  +
call WdsSetupLogMessageW  +
jmp loc_10019D9  +
push [ebp+cbData]  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+lpData] eax +
cmp eax edi +
jnz loc_1001912  +
push edi  +
push edi  +
mov ebx 8007000Eh +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aCopyvalueinreg  +
push offset aDW7rtmPrintsca  +
push 6Dh  +
push edi  +
push offset aD  +
push edi  +
push ebx  +
push offset aTapiunattend_0  +
jmp loc_10019B8  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea eax [ebp+dwType] +
push eax  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call esi  +
mov esi eax +
cmp esi edi +
jz loc_1001964  +
mov ebx esi +
jle loc_100193A  +
and ebx 0FFFFh +
or ebx 80070000h +
push edi  +
push edi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aCopyvalueinreg  +
push offset aDW7rtmPrintsca  +
push 75h  +
push edi  +
push offset aD  +
push edi  +
push esi  +
push offset aTapiunattend_1  +
jmp loc_10019B8  +
push [ebp+cbData]  +
push [ebp+lpData]  +
push [ebp+dwType]  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+arg_0]  +
call ds:RegSetValueExW  +
mov esi eax +
cmp esi edi +
jz loc_10019CB  +
mov ebx esi +
jle loc_1001990  +
and ebx 0FFFFh +
or ebx 80070000h +
push edi  +
push edi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aCopyvalueinreg  +
push offset aDW7rtmPrintsca  +
push 7Dh  +
push edi  +
push offset aD  +
push edi  +
push esi  +
push offset aTapiunattend_2  +
push 2000000h  +
call sub_1001835  +
add esp 0Ch +
push eax  +
call WdsSetupLogMessageW  +
cmp [ebp+lpData] edi +
jz loc_10019D9  +
push [ebp+lpData]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
xor esi esi +
mov ebx 2001Fh +
push ebx  +
push esi  +
push offset SubKey  +
push 80000002h  +
mov [ebp+hKey] esi +
mov [ebp+phkResult] esi +
mov [ebp+var_C] esi +
mov [ebp+var_18] esi +
call ds:RegOpenKeyExW  +
mov edi eax +
mov [ebp+var_8] edi +
cmp edi esi +
jz loc_1001A64  +
jle loc_1001A32  +
and edi 0FFFFh +
or edi 80070000h +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 99h  +
push esi  +
push offset aD  +
push esi  +
push [ebp+var_8]  +
push offset aTapiunattend_3  +
jmp loc_1001DD1  +
mov edi ds:RegQueryValueExW +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push offset ValueName  +
push [ebp+hKey]  +
mov dword ptr [ebp+Data] esi +
mov [ebp+cbData] 4 +
call edi  +
test eax eax +
jnz loc_1001AC4  +
cmp dword ptr [ebp+Data] 1 +
jbe loc_1001AC4  +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 0AAh  +
push esi  +
push offset aD  +
push esi  +
push offset aTapiunattendTh  +
jmp loc_1001BB7  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push esi  +
push offset aSoftwareMicr_0  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov [ebp+var_8] eax +
cmp eax esi +
jz loc_1001B27  +
mov edi eax +
jle loc_1001AF5  +
and edi 0FFFFh +
or edi 80070000h +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 0B5h  +
push esi  +
push offset aD  +
push esi  +
push [ebp+var_8]  +
push offset aTapiunattend_4  +
jmp loc_1001DD1  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push offset aCountry  +
push [ebp+phkResult]  +
mov [ebp+var_20] esi +
mov [ebp+cbData] 4 +
call edi  +
mov edi eax +
cmp edi esi +
jz loc_1001B88  +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 0C4h  +
push esi  +
push offset aD  +
push esi  +
push edi  +
push offset aTapiunattendRe  +
push 3000000h  +
call sub_1001835  +
add esp 0Ch +
jmp loc_1001BC3  +
cmp [ebp+var_20] esi +
jnz loc_1001BD1  +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 0CAh  +
push esi  +
push offset aD  +
push esi  +
push offset aTapiunattendUn  +
push 3000000h  +
call sub_1001835  +
pop ecx  +
pop ecx  +
push eax  +
call WdsSetupLogMessageW  +
xor edi edi +
inc edi  +
jmp loc_1001DE4  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push ebx  +
push esi  +
push offset Class  +
push esi  +
push offset aLocation1  +
push [ebp+hKey]  +
call ds:RegCreateKeyExW  +
mov edi eax +
mov [ebp+var_8] edi +
cmp edi esi +
jz loc_1001C39  +
jle loc_1001C07  +
and edi 0FFFFh +
or edi 80070000h +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 0DAh  +
push esi  +
push offset aD  +
push esi  +
push [ebp+var_8]  +
push offset aTapiunattend_5  +
jmp loc_1001DD1  +
mov [ebp+var_8] esi +
mov eax [ebp+var_8] +
push ds:lpValueName[eax*4]  +
push [ebp+phkResult]  +
push [ebp+var_C]  +
call sub_1001850  +
mov edi eax +
cmp edi esi +
jnz loc_1001CC9  +
inc [ebp+var_8]  +
cmp [ebp+var_8] 9 +
jb loc_1001C3C  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
push ebx  +
push esi  +
push offset Class  +
push esi  +
push offset aAreacoderules  +
push [ebp+var_C]  +
call ds:RegCreateKeyExW  +
mov ebx eax +
cmp ebx esi +
jz loc_1001D10  +
mov edi ebx +
jle loc_1001C99  +
and edi 0FFFFh +
or edi 80070000h +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 0F2h  +
push esi  +
push offset aD  +
push esi  +
push ebx  +
push offset aTapiunattend_6  +
jmp loc_1001DD1  +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
mov eax [ebp+var_8] +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 0E3h  +
push esi  +
push offset aD  +
push esi  +
push edi  +
push ds:lpValueName[eax*4]  +
push offset aFailedForValue  +
push 2000000h  +
call sub_1001835  +
add esp 10h +
jmp loc_1001DDE  +
mov ebx ds:RegSetValueExW +
push 4  +
lea eax [ebp+var_24] +
push eax  +
push 4  +
push esi  +
push offset aCurrentid  +
push [ebp+hKey]  +
mov [ebp+var_24] 1 +
call ebx  +
mov [ebp+var_8] eax +
cmp eax esi +
jz loc_1001D76  +
mov edi eax +
jle loc_1001D47  +
and edi 0FFFFh +
or edi 80070000h +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 0FBh  +
push esi  +
push offset aD  +
push esi  +
push [ebp+var_8]  +
push offset aTapiunattend_7  +
jmp loc_1001DD1  +
mov eax [ebp+var_24] +
inc eax  +
push 4  +
mov dword ptr [ebp+Data] eax +
lea eax [ebp+Data] +
push eax  +
push 4  +
push esi  +
push offset ValueName  +
push [ebp+hKey]  +
call ebx  +
mov ebx eax +
cmp ebx esi +
jz loc_1001DE4  +
mov edi ebx +
jle loc_1001DA6  +
and edi 0FFFFh +
or edi 80070000h +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call CurrentIP  +
push eax  +
push offset aWmain  +
push offset aDW7rtmPrintsca  +
push 104h  +
push esi  +
push offset aD  +
push esi  +
push ebx  +
push offset aTapiunattend_8  +
push 2000000h  +
call sub_1001835  +
add esp 0Ch +
push eax  +
call WdsSetupLogMessageW  +
mov ebx ds:RegCloseKey +
cmp [ebp+var_18] esi +
jz loc_1001DF7  +
push [ebp+var_18]  +
call ebx  +
mov [ebp+var_18] esi +
cmp [ebp+hKey] esi +
jz loc_1001E04  +
push [ebp+hKey]  +
call ebx  +
mov [ebp+hKey] esi +
cmp [ebp+var_C] esi +
jz loc_1001E11  +
push [ebp+var_C]  +
call ebx  +
mov [ebp+var_C] esi +
cmp [ebp+phkResult] esi +
jz loc_1001E1B  +
push [ebp+phkResult]  +
call ebx  +
cmp edi esi +
jl loc_1001E23  +
xor eax eax +
jmp loc_1001E25  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1001E4B  +
test eax eax +
jnz loc_1001E50  +
mov ecx [esi] +
test ecx ecx +
jz loc_1001E48  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1001E3C  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100303C +
push offset dword_100302C  +
push dword_1003038  +
mov dword_100302C eax +
push offset dword_100301C  +
push offset dword_1003020  +
push offset dword_1003018  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1003028 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1001ED8  +
cmp eax esi +
jnz loc_1001ECB  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1001EDB  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1001EB2  +
xor esi esi +
inc esi  +
mov eax dword_100336C +
cmp eax esi +
jnz loc_1001EEE  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1001F29  +
mov eax dword_100336C +
test eax eax +
jnz loc_1001F23  +
mov dword_100336C esi +
push offset dword_10010C0  +
push offset dword_10010B4  +
call sub_1001E2F  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1001F29  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1001FF3  +
mov dword_1003034 esi +
mov eax dword_100336C +
cmp eax esi +
jnz loc_1001F4D  +
push offset dword_10010B0  +
push offset dword_10010A8  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100336C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1001F5A  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1003374 ebx +
jz loc_1001F7B  +
push offset dword_1003374  +
call sub_10021D9  +
pop ecx  +
test eax eax +
jz loc_1001F7B  +
push ebx  +
push 2  +
push ebx  +
call dword_1003374  +
push dword_100301C  +
push dword_1003020  +
push dword_1003018  +
call sub_10019E7  +
add esp 0Ch +
mov dword_1003030 eax +
cmp dword_1003024 ebx +
jnz loc_1001FD9  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1003030 eax +
xor ebx ebx +
cmp dword_1003024 ebx +
jnz loc_1001FD9  +
push eax  +
call ds:_exit  +
cmp dword_1003034 ebx +
jnz loc_1001FE7  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1003030 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1002010  +
xor eax eax +
jmp loc_100205D  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100200C  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_100204A  +
cmp ecx 20Bh +
jnz loc_100200C  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100200C  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1002058  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100200C  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1003024 eax +
call sub_1002372  +
push eax  +
call ds:__set_app_type  +
or dword_1003364 0FFFFFFFFh +
or dword_1003368 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1003044 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1003040 +
mov [eax] ecx +
call sub_1002304  +
cmp dword_1003008 0 +
jnz loc_10020B6  +
push offset sub_1002304  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10022EC  +
xor eax eax +
retn   +
***
call sub_10023B1  +
jmp sub_1001E90  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1002126  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1002126  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1002120  +
cmp eax 19930521h +
jz loc_1002120  +
cmp eax 19930522h +
jz loc_1002120  +
cmp eax 1994000h +
jnz loc_1002126  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_10020E8+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1002166  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1002162  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10021CD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10021C5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10021CF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10021B5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1002150  +
pop ecx  +
test eax eax +
jz loc_1002236  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1002190  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002236  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100223F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset loc_1002447  +
push offset dword_100300C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002365  +
cmp ecx 0FFFFFFFFh +
jz loc_1002365  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100235E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100235E  +
cmp edx 10000000h +
jnb loc_100235E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100235E  +
jmp loc_1002359  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10023A7  +
push eax  +
call sub_100230C  +
test eax eax +
jz loc_10023A7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100239C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10023A7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100300C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10023E3  +
test eax ebx +
jz loc_10023E3  +
not eax  +
mov dword_1003010 eax +
jmp loc_100243E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100242A  +
test dword_100300C ebx +
jnz loc_100242F  +
mov esi 0BB40E64Fh +
mov dword_100300C esi +
not esi  +
mov dword_1003010 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
cmp ecx dword_100300C +
jnz loc_1002452  +
retn 0  +
***
jmp loc_1002467  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1003148 eax +
mov dword_1003144 ecx +
mov dword_1003140 edx +
mov dword_100313C ebx +
mov dword_1003138 esi +
mov dword_1003134 edi +
mov word_1003160 ss +
mov word_1003154 cs +
mov word_1003130 ds +
mov word_100312C es +
mov word_1003128 fs +
mov word_1003124 gs +
pushf   +
pop dword_1003158  +
mov eax [ebp+0] +
mov dword_100314C eax +
mov eax [ebp+4] +
mov dword_1003150 eax +
lea eax [ebp+8] +
mov dword_100315C eax +
mov eax [ebp-320h] +
mov dword_1003098 10001h +
mov eax dword_1003150 +
mov dword_1003054 eax +
mov dword_1003048 0C0000409h +
mov dword_100304C 1 +
mov eax dword_100300C +
mov [ebp-328h] eax +
mov eax dword_1003010 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset off_1001798  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
