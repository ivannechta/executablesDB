mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
and eax 2 +
jz loc_10073E7  +
push offset sub_1007420  +
mov ecx [ebp+var_4] +
mov edx [ecx-4] +
push edx  +
push 0Ch  +
mov eax [ebp+var_4] +
push eax  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
mov ecx [ebp+arg_0] +
and ecx 1 +
jz loc_10073DF  +
mov edx [ebp+var_4] +
sub edx 4 +
push edx  +
call ??_V@YAXPAX@Z  +
add esp 4 +
mov eax [ebp+var_4] +
sub eax 4 +
jmp loc_1007406  +
mov ecx [ebp+var_4] +
call sub_1007420  +
mov eax [ebp+arg_0] +
and eax 1 +
jz loc_1007403  +
mov ecx [ebp+var_4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1007440  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SysFreeString  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [ebp+0Ch] +
mov [ebp-0Ch] eax +
mov ecx [ebp+10h] +
mov dword ptr [ecx] 0 +
mov edx [ebp+8] +
mov [ebp-1Ch] edx +
cmp dword ptr [ebp-1Ch] 4 +
jz loc_100748B  +
cmp dword ptr [ebp-1Ch] 5 +
jz loc_10074BF  +
jmp loc_10074DA  +
mov eax [ebp+14h] +
push eax  +
call ds:EtwGetTraceLoggerHandle  +
mov [ebp-18h] eax +
mov [ebp-14h] edx +
mov ecx [ebp-14h] +
push ecx  +
mov edx [ebp-18h] +
push edx  +
call ds:EtwGetTraceEnableLevel  +
mov [ebp-1] al +
mov eax [ebp-14h] +
push eax  +
mov ecx [ebp-18h] +
push ecx  +
call ds:EtwGetTraceEnableFlags  +
mov [ebp-8] eax +
jmp loc_10074E4  +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-8] 0 +
mov byte ptr [ebp-1] 0 +
jmp loc_10074E4  +
mov eax 57h +
jmp loc_1007566  +
mov edx [ebp-0Ch] +
movzx eax word ptr [edx+1Ah] +
and eax 1 +
jz loc_1007525  +
mov ecx [ebp-0Ch] +
cmp dword ptr [ecx+10h] 0 +
jz loc_1007525  +
mov edx [ebp-0Ch] +
mov eax [edx+10h] +
mov ecx [ebp-18h] +
mov [eax] ecx +
mov edx [ebp-14h] +
mov [eax+4] edx +
movzx eax byte ptr [ebp-1] +
mov ecx [ebp-0Ch] +
mov edx [ecx+10h] +
mov [edx+0Ch] eax +
mov eax [ebp-0Ch] +
mov ecx [eax+10h] +
mov edx [ebp-8] +
mov [ecx+8] edx +
jmp loc_1007564  +
mov eax [ebp-0Ch] +
movzx ecx word ptr [eax+1Ah] +
and ecx 2 +
jz loc_1007543  +
mov edx [ebp-0Ch] +
cmp dword ptr [edx+10h] 0 +
jz loc_1007543  +
mov eax [ebp-0Ch] +
mov ecx [eax+10h] +
mov [ebp-0Ch] ecx +
mov edx [ebp-0Ch] +
mov eax [ebp-18h] +
mov [edx+10h] eax +
mov ecx [ebp-14h] +
mov [edx+14h] ecx +
mov edx [ebp-0Ch] +
mov al [ebp-1] +
mov [edx+19h] al +
mov ecx [ebp-0Ch] +
mov edx [ebp-8] +
mov [ecx+1Ch] edx +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax off_103B010 +
mov [ebp+var_8] eax +
mov [ebp+var_C] offset unk_103B538 +
jmp loc_10075A1  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
mov [ebp+var_8] edx +
cmp [ebp+var_8] 0 +
jz loc_10075EE  +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_C] +
add edx 4 +
mov [ebp+var_C] edx +
mov eax [ebp+var_4] +
mov [ebp+var_14] eax +
mov [ebp+var_10] 0 +
mov ecx [ebp+var_8] +
add ecx 8 +
push ecx  +
push 0  +
push 0  +
lea edx [ebp+var_14] +
push edx  +
push 1  +
mov eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_8] +
push ecx  +
push offset loc_1007460  +
call ds:EtwRegisterTraceGuidsW  +
mov [ebp+var_18] eax +
jmp loc_1007599  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp off_103B010 offset off_103B010 +
jnz loc_1007616  +
jmp loc_1007670  +
mov eax off_103B010 +
mov [ebp+var_4] eax +
jmp loc_1007628  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 0 +
jz loc_1007666  +
mov eax [ebp+var_4] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
mov edx [ebp+var_8] +
mov eax [ecx+8] +
or eax [edx+0Ch] +
jz loc_1007664  +
mov ecx [ebp+var_4] +
mov edx [ecx+0Ch] +
push edx  +
mov eax [ecx+8] +
push eax  +
call ds:EtwUnregisterTraceGuids  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 0 +
jmp loc_1007620  +
mov off_103B010 offset off_103B010 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] 1 +
mov [ebp+hSCManager] 0 +
mov [ebp+hSCObject] 0 +
push 1  +
push 0  +
push 0  +
call OpenSCManagerW  +
mov [ebp+hSCManager] eax +
cmp [ebp+hSCManager] 0 +
jnz loc_10076BD  +
mov [ebp+var_C] 0 +
jmp loc_100771E  +
jmp loc_100771E  +
push 12h  +
push offset ServiceName  +
mov eax [ebp+hSCManager] +
push eax  +
call OpenServiceW  +
mov [ebp+hSCObject] eax +
cmp [ebp+hSCObject] 0 +
jnz loc_10076E2  +
mov [ebp+var_C] 0 +
jmp loc_100771E  +
jmp loc_100771E  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 2  +
push 0FFFFFFFFh  +
mov ecx [ebp+hSCObject] +
push ecx  +
call ChangeServiceConfigW  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_100770D  +
jmp loc_100771E  +
jmp loc_100771E  +
push 0  +
push 0  +
mov edx [ebp+hSCObject] +
push edx  +
call StartServiceW  +
mov [ebp+var_C] eax +
cmp [ebp+hSCObject] 0 +
jz loc_1007735  +
mov eax [ebp+hSCObject] +
push eax  +
call CloseServiceHandle  +
mov [ebp+hSCObject] 0 +
cmp [ebp+hSCManager] 0 +
jz loc_100774C  +
mov ecx [ebp+hSCManager] +
push ecx  +
call CloseServiceHandle  +
mov [ebp+hSCManager] 0 +
mov eax [ebp+var_C] +
neg eax  +
sbb eax eax +
neg eax  +
sub eax 1 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] 1 +
mov [ebp+hSCManager] 0 +
mov [ebp+hSCObject] 0 +
push 1  +
push 0  +
push 0  +
call OpenSCManagerW  +
mov [ebp+hSCManager] eax +
cmp [ebp+hSCManager] 0 +
jnz loc_10077AD  +
mov [ebp+var_C] 0 +
jmp loc_100780E  +
jmp loc_100780E  +
push 12h  +
push offset aBeep  +
mov eax [ebp+hSCManager] +
push eax  +
call OpenServiceW  +
mov [ebp+hSCObject] eax +
cmp [ebp+hSCObject] 0 +
jnz loc_10077D2  +
mov [ebp+var_C] 0 +
jmp loc_100780E  +
jmp loc_100780E  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 1  +
push 0FFFFFFFFh  +
mov ecx [ebp+hSCObject] +
push ecx  +
call ChangeServiceConfigW  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_10077FD  +
jmp loc_100780E  +
jmp loc_100780E  +
push 0  +
push 0  +
mov edx [ebp+hSCObject] +
push edx  +
call StartServiceW  +
mov [ebp+var_C] eax +
cmp [ebp+hSCObject] 0 +
jz loc_1007825  +
mov eax [ebp+hSCObject] +
push eax  +
call CloseServiceHandle  +
mov [ebp+hSCObject] 0 +
cmp [ebp+hSCManager] 0 +
jz loc_100783C  +
mov ecx [ebp+hSCManager] +
push ecx  +
call CloseServiceHandle  +
mov [ebp+hSCManager] 0 +
mov eax [ebp+var_C] +
neg eax  +
sbb eax eax +
neg eax  +
sub eax 1 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_103512C  +
mov eax large fs:0 +
push eax  +
sub esp 118h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
call ds:CoInitialize  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_10078A0  +
jmp loc_1007ED3  +
lea ecx [ebp+var_1C] +
call sub_1012550  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 2 +
push 17h  +
push 0  +
push offset stru_1002BFC  +
lea ecx [ebp+var_1C] +
call sub_1008CA0  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_100790D  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
lea ecx [ebp+var_4C] +
call sub_1008C60  +
mov [ebp+var_D8] eax +
mov eax [ebp+var_D8] +
mov [ebp+var_DC] eax +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_DC] +
mov edx [ecx] +
mov [ebp+var_3C] edx +
mov eax [ecx+4] +
mov [ebp+var_38] eax +
mov edx [ecx+8] +
mov [ebp+var_34] edx +
mov eax [ecx+0Ch] +
mov [ebp+var_30] eax +
lea ecx [ebp+var_6C] +
call sub_1008C60  +
mov [ebp+var_E0] eax +
mov ecx [ebp+var_E0] +
mov [ebp+var_E4] ecx +
mov byte ptr [ebp+var_4] 4 +
mov edx [ebp+var_E4] +
mov eax [edx] +
mov [ebp+var_5C] eax +
mov ecx [edx+4] +
mov [ebp+var_58] ecx +
mov eax [edx+8] +
mov [ebp+var_54] eax +
mov ecx [edx+0Ch] +
mov [ebp+var_50] ecx +
lea ecx [ebp+var_8C] +
call sub_1008C60  +
mov [ebp+var_E8] eax +
mov edx [ebp+var_E8] +
mov [ebp+var_EC] edx +
mov byte ptr [ebp+var_4] 5 +
mov eax [ebp+var_EC] +
mov ecx [eax] +
mov [ebp+var_7C] ecx +
mov edx [eax+4] +
mov [ebp+var_78] edx +
mov ecx [eax+8] +
mov [ebp+var_74] ecx +
mov edx [eax+0Ch] +
mov [ebp+var_70] edx +
lea ecx [ebp+var_AC] +
call sub_1008C60  +
mov [ebp+var_F0] eax +
mov eax [ebp+var_F0] +
mov [ebp+var_F4] eax +
mov byte ptr [ebp+var_4] 6 +
mov ecx [ebp+var_F4] +
mov edx [ecx] +
mov [ebp+var_9C] edx +
mov eax [ecx+4] +
mov [ebp+var_98] eax +
mov edx [ecx+8] +
mov [ebp+var_94] edx +
mov eax [ecx+0Ch] +
mov [ebp+var_90] eax +
lea ecx [ebp+var_1C] +
call sub_1024680  +
mov [ebp+var_F8] eax +
sub esp 10h +
mov ecx esp +
mov edx [ebp+var_3C] +
mov [ecx] edx +
mov eax [ebp+var_38] +
mov [ecx+4] eax +
mov edx [ebp+var_34] +
mov [ecx+8] edx +
mov eax [ebp+var_30] +
mov [ecx+0Ch] eax +
sub esp 10h +
mov ecx esp +
mov edx [ebp+var_5C] +
mov [ecx] edx +
mov eax [ebp+var_58] +
mov [ecx+4] eax +
mov edx [ebp+var_54] +
mov [ecx+8] edx +
mov eax [ebp+var_50] +
mov [ecx+0Ch] eax +
sub esp 10h +
mov ecx esp +
mov edx [ebp+var_7C] +
mov [ecx] edx +
mov eax [ebp+var_78] +
mov [ecx+4] eax +
mov edx [ebp+var_74] +
mov [ecx+8] edx +
mov eax [ebp+var_70] +
mov [ecx+0Ch] eax +
sub esp 10h +
mov ecx esp +
mov edx [ebp+var_9C] +
mov [ecx] edx +
mov eax [ebp+var_98] +
mov [ecx+4] eax +
mov edx [ebp+var_94] +
mov [ecx+8] edx +
mov eax [ebp+var_90] +
mov [ecx+0Ch] eax +
mov ecx [ebp+var_F8] +
push ecx  +
mov edx [ebp+var_F8] +
mov eax [edx] +
mov ecx [eax+28h] +
call ecx  +
mov [ebp+var_10] eax +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_AC] +
call sub_1008C80  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_8C] +
call sub_1008C80  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_6C] +
call sub_1008C80  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_4C] +
call sub_1008C80  +
cmp [ebp+var_10] 0 +
jge loc_1007B14  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
lea ecx [ebp+var_1C] +
call sub_1024680  +
mov [ebp+var_FC] eax +
lea ecx [ebp+var_24] +
call sub_10114A0  +
push eax  +
push offset aMicrosoftWindo  +
lea ecx [ebp+var_B0] +
call sub_1007F00  +
mov [ebp+var_100] eax +
mov edx [ebp+var_100] +
mov [ebp+var_104] edx +
mov byte ptr [ebp+var_4] 7 +
mov ecx [ebp+var_104] +
call sub_1024680  +
push eax  +
mov eax [ebp+var_FC] +
push eax  +
mov ecx [ebp+var_FC] +
mov edx [ecx] +
mov eax [edx+1Ch] +
call eax  +
mov [ebp+var_10] eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_B0] +
call sub_1007440  +
cmp [ebp+var_10] 0 +
jge loc_1007BB5  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
lea ecx [ebp+var_24] +
call sub_1024680  +
mov [ebp+var_108] eax +
lea ecx [ebp+var_18] +
call sub_10114A0  +
push eax  +
push offset aSystemsoundsse  +
mov ecx [ebp+var_108] +
push ecx  +
mov edx [ebp+var_108] +
mov eax [edx] +
mov ecx [eax+34h] +
call ecx  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_1007C1A  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_10C] eax +
lea edx [ebp+var_14] +
push edx  +
mov eax [ebp+var_10C] +
push eax  +
mov ecx [ebp+var_10C] +
mov edx [ecx] +
mov eax [edx+28h] +
call eax  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_1007C75  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
movsx ecx word ptr [ebp+var_14] +
cmp ecx 0FFFFFFFFh +
jz loc_1007CD7  +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_110] eax +
push 0FFFFFFFFh  +
mov edx [ebp+var_110] +
push edx  +
mov eax [ebp+var_110] +
mov ecx [eax] +
mov edx [ecx+2Ch] +
call edx  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_1007CD7  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
mov [ebp+var_20] 0 +
lea ecx [ebp+var_28] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_114] eax +
lea ecx [ebp+var_28] +
call sub_10114A0  +
push eax  +
push 0  +
mov eax [ebp+var_114] +
push eax  +
mov ecx [ebp+var_114] +
mov edx [ecx] +
mov eax [edx+38h] +
call eax  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_1007D58  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_28] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
lea ecx [ebp+var_28] +
call sub_1024680  +
mov [ebp+var_118] eax +
lea ecx [ebp+var_20] +
push ecx  +
mov edx [ebp+var_118] +
push edx  +
mov eax [ebp+var_118] +
mov ecx [eax] +
mov edx [ecx+1Ch] +
call edx  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_1007DBF  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_28] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_28] +
call sub_1023C70  +
cmp [ebp+var_20] 0 +
jnz loc_1007EAC  +
lea ecx [ebp+var_D4] +
call sub_1008C60  +
mov [ebp+var_11C] eax +
mov eax [ebp+var_11C] +
mov [ebp+var_120] eax +
mov byte ptr [ebp+var_4] 9 +
mov ecx [ebp+var_120] +
mov edx [ecx] +
mov [ebp+var_C4] edx +
mov eax [ecx+4] +
mov [ebp+var_C0] eax +
mov edx [ecx+8] +
mov [ebp+var_BC] edx +
mov eax [ecx+0Ch] +
mov [ebp+var_B8] eax +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_124] eax +
push 0  +
sub esp 10h +
mov ecx esp +
mov edx [ebp+var_C4] +
mov [ecx] edx +
mov eax [ebp+var_C0] +
mov [ecx+4] eax +
mov edx [ebp+var_BC] +
mov [ecx+8] edx +
mov eax [ebp+var_B8] +
mov [ecx+0Ch] eax +
mov ecx [ebp+var_124] +
push ecx  +
mov edx [ebp+var_124] +
mov eax [edx] +
mov ecx [eax+30h] +
call ecx  +
mov [ebp+var_10] eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_D4] +
call sub_1008C80  +
cmp [ebp+var_10] 0 +
jge loc_1007EAC  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
jmp loc_1007ED3  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
call ds:CoUninitialize  +
xor eax eax +
cmp [ebp+var_10] 0 +
setnl al  +
sub eax 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] 0 +
jnz loc_1007F1A  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
jmp loc_1007F42  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:SysAllocString  +
mov edx [ebp+var_4] +
mov [edx] eax +
mov ecx [ebp+var_4] +
call sub_1008A00  +
movzx eax al +
test eax eax +
jz loc_1007F42  +
push 8007000Eh  +
call sub_1007F50  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_8] +
call sub_1007F90  +
mov ecx [eax] +
mov [ebp+var_4] ecx +
push offset dword_103688C  +
lea edx [ebp+var_4] +
push edx  +
call _CxxThrowException  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov [ebp+var_8] 0 +
lea eax [ebp+pNumArgs] +
push eax  +
mov ecx [ebp+lpCmdLine] +
push ecx  +
call ds:CommandLineToArgvW  +
mov [ebp+hMem] eax +
cmp [ebp+pNumArgs] 0 +
jle loc_10081A6  +
push offset aS  +
mov edx [ebp+hMem] +
mov eax [edx] +
push eax  +
call ds:__imp__wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_100800E  +
mov [ebp+var_8] 8 +
jmp loc_1008099  +
push offset aF  +
mov ecx [ebp+hMem] +
mov edx [ecx] +
push edx  +
call ds:__imp__wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_100802F  +
mov [ebp+var_8] 1 +
jmp loc_1008099  +
push offset aR  +
mov eax [ebp+hMem] +
mov ecx [eax] +
push ecx  +
call ds:__imp__wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_1008050  +
mov [ebp+var_8] 6 +
jmp loc_1008099  +
push offset aP  +
mov edx [ebp+hMem] +
mov eax [edx] +
push eax  +
call ds:__imp__wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_1008071  +
mov [ebp+var_8] 10h +
jmp loc_1008099  +
push offset aA  +
mov ecx [ebp+hMem] +
mov edx [ecx] +
push edx  +
call ds:__imp__wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_1008092  +
mov [ebp+var_8] 22h +
jmp loc_1008099  +
mov [ebp+var_8] 2 +
cmp [ebp+pNumArgs] 2 +
jl loc_10080D8  +
mov eax [ebp+hMem] +
mov ecx [eax+4] +
push ecx  +
call ds:_wtoi  +
add esp 4 +
mov [ebp+var_10] eax +
mov edx [ebp+var_10] +
and edx 0FFFFh +
movsx eax dx +
mov dword_103B014 eax +
mov ecx [ebp+var_10] +
shr ecx 10h +
and ecx 0FFFFh +
movsx edx cx +
mov dword_103B018 edx +
cmp [ebp+pNumArgs] 3 +
jl loc_10080F7  +
push 0Ah  +
push 0  +
mov eax [ebp+hMem] +
mov ecx [eax+8] +
push ecx  +
call ds:__imp_wcstol  +
add esp 0Ch +
mov dword_103B554 eax +
cmp [ebp+pNumArgs] 4 +
jl loc_10081A6  +
mov edx [ebp+hMem] +
mov eax [edx+0Ch] +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
add ecx 2 +
mov [ebp+var_20] ecx +
mov edx [ebp+var_1C] +
mov ax [edx] +
mov [ebp+var_22] ax +
add [ebp+var_1C] 2 +
cmp [ebp+var_22] 0 +
jnz loc_1008113  +
mov ecx [ebp+var_1C] +
sub ecx [ebp+var_20] +
sar ecx 1 +
mov [ebp+var_28] ecx +
mov edx [ebp+var_28] +
add edx 1 +
mov [ebp+var_14] edx +
mov eax [ebp+var_14] +
shl eax 1 +
push eax  +
call ds:CoTaskMemAlloc  +
mov pv eax +
cmp pv 0 +
jz loc_10081A6  +
push 0  +
push 0  +
push 0  +
mov ecx [ebp+hMem] +
mov edx [ecx+0Ch] +
push edx  +
mov eax [ebp+var_14] +
push eax  +
mov ecx pv +
push ecx  +
call sub_1009310  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jge loc_10081A6  +
cmp pv 0 +
jz loc_100819C  +
mov edx pv +
push edx  +
call ds:CoTaskMemFree  +
mov pv 0 +
mov pv 0 +
cmp [ebp+hMem] 0 +
jz loc_10081B6  +
mov eax [ebp+hMem] +
push eax  +
call ds:GlobalFree  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B8h +
call sub_1022E40  +
push offset unk_103B518  +
call sub_1008970  +
push offset unk_103B538  +
call sub_10089E0  +
mov off_103B010 offset unk_103B518 +
push offset aMicrosoftWin_0  +
call sub_1007580  +
push 0  +
call ImmDisableIME  +
push offset dword_103B558  +
push offset unk_103B560  +
push offset loc_1008830  +
push offset dword_10017FC  +
call sub_10088D0  +
push 0  +
push 0  +
push 1  +
push 0  +
call ds:HeapSetInformation  +
mov eax [ebp+lpCmdLine] +
push eax  +
call sub_1007FC0  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 8 +
jnz loc_1008282  +
call sub_1007680  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jnz loc_100827A  +
call sub_1007770  +
mov [ebp+var_24] eax +
cmp [ebp+var_24] 0 +
jnz loc_1008270  +
call sub_1007860  +
jmp loc_10085AC  +
jmp loc_1008278  +
mov eax [ebp+var_24] +
jmp loc_10085AC  +
jmp loc_1008282  +
mov eax [ebp+var_20] +
jmp loc_10085AC  +
push 2Ch  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_88] eax +
cmp [ebp+var_88] 0 +
jz loc_10082B3  +
push offset hWnd  +
mov ecx [ebp+var_88] +
call sub_10085C0  +
mov [ebp+var_AC] eax +
jmp loc_10082BD  +
mov [ebp+var_AC] 0 +
mov ecx [ebp+var_AC] +
mov [ebp+var_84] ecx +
mov edx [ebp+var_84] +
mov dword_103B510 edx +
cmp dword_103B510 0 +
jnz loc_10082E6  +
or eax 0FFFFFFFFh +
jmp loc_10085AC  +
mov eax [ebp+var_1C] +
and eax 4 +
jnz loc_1008306  +
push 0  +
mov ecx dword_103B510 +
call sub_10086B0  +
test eax eax +
jz loc_1008306  +
xor eax eax +
jmp loc_10085AC  +
call ds:InitCommonControls  +
push 0  +
push 0  +
push 0  +
lea ecx [ebp+var_14] +
call sub_10092D0  +
push 0  +
lea ecx [ebp+var_14] +
push ecx  +
lea edx [ebp+var_4] +
push edx  +
call GdiplusStartup  +
push 0  +
call ds:CoInitialize  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jge loc_100833F  +
jmp loc_10085A5  +
mov eax [ebp+arg_0] +
mov hInstance eax +
call ds:SetProcessDPIAware  +
push 0  +
call sub_102D130  +
test eax eax +
jz loc_100836A  +
mov dword_103B54C 1 +
push 1  +
call ds:SetProcessDefaultLayout  +
push 0  +
push ecx  +
mov ecx esp +
mov [ebp+var_8C] esp +
push 0  +
call sub_1007F90  +
push 0  +
push 0  +
push offset Name  +
push ecx  +
mov ecx esp +
mov [ebp+var_90] esp +
push 0  +
call sub_1007F90  +
push 0  +
mov ecx dword_103B510 +
call sub_1008A80  +
mov ecx [ebp+var_1C] +
and ecx 1 +
jz loc_1008429  +
push 1  +
push 0FFFFFFEBh  +
mov ecx dword_103B510 +
add ecx 4 +
call sub_10090E0  +
push 90h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_98] eax +
cmp [ebp+var_98] 0 +
jz loc_10083EB  +
mov ecx [ebp+var_98] +
call sub_101CBD0  +
mov [ebp+var_B0] eax +
jmp loc_10083F5  +
mov [ebp+var_B0] 0 +
mov edx [ebp+var_B0] +
mov [ebp+var_94] edx +
mov eax [ebp+var_94] +
mov [ebp+var_28] eax +
push 0  +
call ds:GetActiveWindow  +
push eax  +
mov ecx [ebp+var_28] +
call sub_1008B60  +
mov ecx [ebp+var_28] +
push ecx  +
call sub_101D120  +
jmp loc_10084F7  +
mov edx [ebp+var_1C] +
and edx 2 +
jz loc_10084CE  +
mov eax [ebp+var_1C] +
and eax 20h +
xor ecx ecx +
cmp eax 20h +
setz cl  +
mov dword_103B550 ecx +
push 2  +
push 0FFFFFFEBh  +
mov ecx dword_103B510 +
add ecx 4 +
call sub_10090E0  +
push 3A8h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_A0] eax +
cmp [ebp+var_A0] 0 +
jz loc_100848A  +
mov ecx [ebp+var_A0] +
call sub_10149E0  +
mov [ebp+var_B4] eax +
jmp loc_1008494  +
mov [ebp+var_B4] 0 +
mov edx [ebp+var_B4] +
mov [ebp+var_9C] edx +
mov eax [ebp+var_9C] +
mov [ebp+var_2C] eax +
push 0  +
call ds:GetActiveWindow  +
push eax  +
mov ecx [ebp+var_2C] +
call sub_1008A20  +
mov ecx [ebp+var_2C] +
add ecx 20h +
mov edx [ebp+var_2C] +
mov eax [edx+20h] +
push ecx  +
mov ecx [eax+8] +
call ecx  +
jmp loc_10084F7  +
mov edx [ebp+var_1C] +
and edx 10h +
jz loc_10084F7  +
lea ecx [ebp+var_80] +
call sub_1020560  +
push 0  +
call ds:GetActiveWindow  +
push eax  +
lea ecx [ebp+var_80] +
call sub_1008BE0  +
lea ecx [ebp+var_80] +
call sub_1020A90  +
mov ecx dword_103B510 +
call sub_1008B40  +
mov eax dword_103B510 +
mov [ebp+var_A8] eax +
mov ecx [ebp+var_A8] +
mov [ebp+var_A4] ecx +
cmp [ebp+var_A4] 0 +
jz loc_100853F  +
push 1  +
mov edx [ebp+var_A4] +
mov eax [edx] +
mov ecx [ebp+var_A4] +
mov edx [eax+4] +
call edx  +
mov [ebp+var_B8] eax +
jmp loc_1008549  +
mov [ebp+var_B8] 0 +
mov dword_103B510 0 +
cmp dword_103B540 0 +
jz loc_1008568  +
mov eax dword_103B540 +
push eax  +
call ds:DeleteObject  +
cmp pv 0 +
jz loc_1008588  +
mov ecx pv +
push ecx  +
call ds:CoTaskMemFree  +
mov pv 0 +
mov pv 0 +
mov edx [ebp+var_4] +
push edx  +
call GdiplusShutdown  +
push offset dword_103B558  +
call sub_1008920  +
call sub_1007600  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_1024C10  +
mov eax [ebp+var_8] +
mov dword ptr [eax] offset off_1001940 +
push offset Name  +
push 1  +
push 0  +
call ds:CreateMutexW  +
mov ecx [ebp+var_8] +
mov [ecx+24h] eax +
call ds:__imp_GetLastError  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0B7h +
jnz loc_1008623  +
mov edx [ebp+var_8] +
cmp dword ptr [edx+24h] 0 +
jz loc_1008623  +
mov eax [ebp+var_8] +
mov ecx [eax+24h] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_8] +
mov dword ptr [edx+24h] 0 +
cmp [ebp+arg_0] 0 +
jz loc_1008632  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_0] +
mov [eax+28h] ecx +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_1008660  +
jmp loc_100869A  +
cmp dword ptr [ebp+0Ch] 423h +
jnz loc_100869A  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_1008730  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100869A  +
mov eax 1 +
jmp loc_100869C  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
xor ecx ecx +
cmp dword ptr [eax+24h] 0 +
setz cl  +
mov [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jz loc_1008713  +
push offset Name  +
push offset Name  +
call ds:FindWindowW  +
mov [ebp+hWnd] eax +
cmp [ebp+hWnd] 0 +
jz loc_1008713  +
mov edx [ebp+var_C] +
mov eax [ebp+hWnd] +
cmp eax [edx+4] +
jz loc_1008713  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:SetForegroundWindow  +
push 0  +
mov edx [ebp+wParam] +
push edx  +
push 423h  +
mov eax [ebp+hWnd] +
push eax  +
call ds:PostMessageW  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+28h] 0 +
jz loc_1008787  +
mov ecx [ebp+var_4] +
mov edx [ecx+28h] +
cmp dword ptr [edx] 0 +
jz loc_1008787  +
mov eax [ebp+var_4] +
mov ecx [eax+28h] +
mov edx [ecx] +
push edx  +
call ds:BringWindowToTop  +
mov eax [ebp+var_4] +
mov ecx [eax+28h] +
mov edx [ecx] +
push edx  +
call ds:SetForegroundWindow  +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
push 423h  +
mov edx [ebp+var_4] +
mov eax [edx+28h] +
mov ecx [eax] +
push ecx  +
call ds:SendMessageW  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_10087E0  +
mov eax [ebp+8] +
and eax 1 +
jz loc_10087C5  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1001940 +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+24h] 0 +
jz loc_1008812  +
mov edx [ebp+var_4] +
mov eax [edx+24h] +
push eax  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] 0 +
mov ecx [ebp+var_4] +
call sub_1014040  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+28h] +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jnz loc_1008846  +
jmp loc_10088C0  +
mov ecx [ebp+0Ch] +
mov [ebp-8] ecx +
cmp dword ptr [ebp-8] 0 +
jz loc_100888D  +
cmp dword ptr [ebp-8] 1 +
jz loc_100885A  +
jmp loc_10088C0  +
mov edx [ebp-4] +
mov al [ebp+10h] +
mov [edx+28h] al +
mov ecx [ebp-4] +
mov edx [ebp+14h] +
mov [ecx+10h] edx +
mov eax [ebp+18h] +
mov [ecx+14h] eax +
mov ecx [ebp-4] +
mov edx [ebp+1Ch] +
mov [ecx+18h] edx +
mov eax [ebp+20h] +
mov [ecx+1Ch] eax +
mov ecx [ebp-4] +
mov dword ptr [ecx+24h] 1 +
jmp loc_10088C0  +
mov edx [ebp-4] +
mov dword ptr [edx+24h] 0 +
mov eax [ebp-4] +
mov byte ptr [eax+28h] 0 +
mov ecx [ebp-4] +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov edx [ebp-4] +
mov dword ptr [edx+18h] 0 +
mov dword ptr [edx+1Ch] 0 +
mov esp ebp +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+arg_C] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
mov edx [ebp+var_8] +
mov eax [ecx] +
or eax [edx+4] +
jz loc_10088EF  +
xor eax eax +
jmp loc_100890B  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:EtwEventRegister  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
mov edx [ebp+var_8] +
mov eax [ecx] +
or eax [edx+4] +
jnz loc_100893F  +
xor eax eax +
jmp loc_1008965  +
mov ecx [ebp+arg_0] +
mov edx [ecx+4] +
push edx  +
mov eax [ecx] +
push eax  +
call ds:EtwEventUnregister  +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+10h] 0 +
mov ecx 1 +
test ecx ecx +
jz loc_1008992  +
mov [ebp+var_4] 0 +
jmp loc_1008999  +
mov [ebp+var_4] offset unk_103B538 +
mov edx [ebp+arg_0] +
mov eax [ebp+var_4] +
mov [edx] eax +
mov ecx [ebp+arg_0] +
mov byte ptr [ecx+18h] 1 +
mov edx [ebp+arg_0] +
mov byte ptr [edx+19h] 0 +
xor eax eax +
mov ecx [ebp+arg_0] +
mov [ecx+1Ah] ax +
mov edx [ebp+arg_0] +
mov dword ptr [edx+1Ch] 0 +
mov eax [ebp+arg_0] +
add eax 20h +
mov [ebp+arg_0] eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset dword_1001820 +
mov ecx [ebp+arg_0] +
add ecx 4 +
mov [ebp+arg_0] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
xor ecx ecx +
cmp dword ptr [eax] 0 +
setz cl  +
mov al cl +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
jnz loc_1008A29  +
xor ecx ecx +
jnz loc_1008A29  +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+var_4] +
add eax 8 +
push eax  +
mov ecx offset unk_103BC3C +
call sub_1008E10  +
mov ecx [ebp+dwInitParam] +
push ecx  +
push offset DialogFunc  +
mov edx [ebp+hWndParent] +
push edx  +
mov eax [ebp+var_4] +
movzx ecx word ptr [eax+21Ch] +
push ecx  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call sub_1009270  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov [ebp+var_8] ecx +
call sub_1008B20  +
cmp dword ptr [eax+30h] 0 +
jnz loc_1008AA6  +
call sub_1025250  +
mov esi eax +
call sub_1008B20  +
mov [eax+30h] esi +
mov eax [ebp+var_8] +
add eax 20h +
push eax  +
call sub_1008B20  +
mov ecx eax +
call sub_10090B0  +
mov [ebp+var_4] ax +
mov ecx [ebp+dwStyle] +
push ecx  +
call sub_1014080  +
mov [ebp+dwStyle] eax +
mov edx [ebp+dwExStyle] +
push edx  +
call sub_1014080  +
mov [ebp+dwExStyle] eax +
cmp [ebp+lpWindowName] 0 +
jnz loc_1008AE3  +
call sub_1025250  +
mov [ebp+lpWindowName] eax +
mov eax [ebp+lpParam] +
push eax  +
movzx ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+hMenu] +
push edx  +
mov eax [ebp+dwExStyle] +
push eax  +
mov ecx [ebp+dwStyle] +
push ecx  +
mov edx [ebp+lpWindowName] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hWndParent] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10140C0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset unk_103B040 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
call ds:DestroyWindow  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
xor eax eax +
jnz loc_1008B6B  +
xor ecx ecx +
jnz loc_1008B6B  +
push 0  +
push 0  +
mov ecx [ebp+var_8] +
add ecx 8 +
call sub_1009110  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_1008B98  +
push 0Eh  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1008BD0  +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_8] +
add eax 8 +
push eax  +
mov ecx offset unk_103BC3C +
call sub_1008E10  +
mov ecx [ebp+dwInitParam] +
push ecx  +
push offset DialogFunc  +
mov edx [ebp+hWndParent] +
push edx  +
push 0CCh  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call ds:DialogBoxParamW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
xor eax eax +
jnz loc_1008BEB  +
xor ecx ecx +
jnz loc_1008BEB  +
push 0  +
push 0  +
mov ecx [ebp+var_8] +
add ecx 8 +
call sub_1009110  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_1008C18  +
push 0Eh  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1008C50  +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_8] +
add eax 8 +
push eax  +
mov ecx offset unk_103BC3C +
call sub_1008E10  +
mov ecx [ebp+dwInitParam] +
push ecx  +
push offset DialogFunc  +
mov edx [ebp+hWndParent] +
push edx  +
push 0CBh  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call ds:DialogBoxParamW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+pvarg] ecx +
mov eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
mov eax [ebp+pvarg] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1008DF0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+ppv] ecx +
mov eax [ebp+ppv] +
push eax  +
push offset riid  +
mov ecx [ebp+dwClsContext] +
push ecx  +
mov edx [ebp+pUnkOuter] +
push edx  +
mov eax [ebp+rclsid] +
push eax  +
call ds:CoCreateInstance  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov ecx offset unk_103BC3C +
call sub_1008E40  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_1008CEF  +
xor eax eax +
jmp loc_1008D48  +
mov eax [ebp+var_8] +
mov ecx [ebp+hWnd] +
mov [eax+4] ecx +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_8] +
mov edx [eax] +
mov ecx [ebp+var_8] +
mov eax [edx+8] +
call eax  +
push eax  +
mov ecx [ebp+var_8] +
add ecx 8 +
call sub_1009110  +
mov ecx [ebp+var_8] +
add ecx 8 +
call sub_1009230  +
mov [ebp+dwNewLong] eax +
mov ecx [ebp+dwNewLong] +
push ecx  +
push 4  +
mov edx [ebp+hWnd] +
push edx  +
call sub_1009000  +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+hWnd] +
push eax  +
call [ebp+dwNewLong]  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov ecx offset unk_103BC3C +
call sub_1008E40  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_1008D7F  +
xor eax eax +
jmp loc_1008DD8  +
mov eax [ebp+var_8] +
mov ecx [ebp+hWnd] +
mov [eax+4] ecx +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_8] +
mov edx [eax] +
mov ecx [ebp+var_8] +
mov eax [edx+8] +
call eax  +
push eax  +
mov ecx [ebp+var_8] +
add ecx 8 +
call sub_1009110  +
mov ecx [ebp+var_8] +
add ecx 8 +
call sub_1009230  +
mov [ebp+dwNewLong] eax +
mov ecx [ebp+dwNewLong] +
push ecx  +
push 0FFFFFFFCh  +
mov edx [ebp+hWnd] +
push edx  +
call sub_1009000  +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+hWnd] +
push eax  +
call [ebp+dwNewLong]  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+pvarg] ecx +
mov eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_4] +
push edx  +
call sub_1008E60  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
push eax  +
call sub_1008F20  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp [ebp+arg_0] 0 +
jnz loc_1008E7A  +
push 1  +
push 0C0000005h  +
call sub_1008F00  +
cmp [ebp+arg_4] 0 +
jz loc_1008E86  +
cmp [ebp+arg_8] 0 +
jnz loc_1008E92  +
push 1  +
push 0C0000005h  +
call sub_1008F00  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
call ds:GetCurrentThreadId  +
mov edx [ebp+arg_4] +
mov [edx+4] eax +
push 0  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
lea ecx [ebp+var_8] +
call sub_10097C0  +
lea ecx [ebp+var_8] +
call sub_1009840  +
test eax eax +
jge loc_1008ECD  +
lea ecx [ebp+var_8] +
call sub_1009810  +
jmp loc_1008EEA  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov eax [edx+1Ch] +
mov [ecx+8] eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [ecx+1Ch] edx +
lea ecx [ebp+var_8] +
call sub_1009810  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
mov eax [ebp+dwExceptionFlags] +
push eax  +
mov ecx [ebp+dwExceptionCode] +
push ecx  +
call ds:RaiseException  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
cmp [ebp+arg_0] 0 +
jnz loc_1008F35  +
xor eax eax +
jmp loc_1008FE8  +
mov [ebp+var_10] 0 +
push 0  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
lea ecx [ebp+var_C] +
call sub_10097C0  +
lea ecx [ebp+var_C] +
call sub_1009840  +
test eax eax +
jge loc_1008F6C  +
mov ecx [ebp+var_10] +
mov [ebp+var_1C] ecx +
lea ecx [ebp+var_C] +
call sub_1009810  +
mov eax [ebp+var_1C] +
jmp loc_1008FE8  +
mov edx [ebp+arg_0] +
mov eax [edx+1Ch] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1008FD7  +
call ds:GetCurrentThreadId  +
mov [ebp+var_18] eax +
mov [ebp+var_14] 0 +
cmp [ebp+var_4] 0 +
jz loc_1008FD7  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
cmp edx [ebp+var_18] +
jnz loc_1008FC6  +
cmp [ebp+var_14] 0 +
jnz loc_1008FB0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov edx [ecx+8] +
mov [eax+1Ch] edx +
jmp loc_1008FBC  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_4] +
mov edx [ecx+8] +
mov [eax+8] edx +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov [ebp+var_10] ecx +
jmp loc_1008FD7  +
mov edx [ebp+var_4] +
mov [ebp+var_14] edx +
mov eax [ebp+var_4] +
mov ecx [eax+8] +
mov [ebp+var_4] ecx +
jmp loc_1008F8B  +
mov edx [ebp+var_10] +
mov [ebp+var_20] edx +
lea ecx [ebp+var_C] +
call sub_1009810  +
mov eax [ebp+var_20] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+dwNewLong] +
push eax  +
mov ecx [ebp+nIndex] +
push ecx  +
mov edx [ebp+hWnd] +
push edx  +
call ds:SetWindowLongW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+nIndex] +
push eax  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetWindowLongW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax+1Ch] 24h +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_10] +
mov [ecx+20h] edx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov edx [ebp+var_4] +
mov eax [ebp+arg_4] +
mov [edx+4] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_8] +
mov [ecx+8] edx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov edx [ebp+var_4] +
mov dword ptr [edx+10h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+18h] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+14h] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
push offset unk_103BC00  +
push offset unk_103BC3C  +
call sub_10092A0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+dwNewLong] +
push eax  +
mov ecx [ebp+nIndex] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call sub_1009000  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_4] +
add ecx 0Ch +
call sub_1009140  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
cmp dword ptr [eax] 0 +
jnz loc_1009171  +
push 0Dh  +
call sub_1009210  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_8] +
mov edx [ebp+var_4] +
mov [ecx] edx +
mov eax [ebp+var_8] +
cmp dword ptr [eax] 0 +
jnz loc_1009171  +
xor eax eax +
jmp loc_1009196  +
cmp [ebp+arg_0] 0 +
jnz loc_1009184  +
cmp [ebp+arg_4] 0 +
jnz loc_1009184  +
mov eax 1 +
jmp loc_1009196  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_8] +
mov ecx [eax] +
call sub_10091B0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpBaseAddress] ecx +
mov eax [ebp+lpBaseAddress] +
mov dword ptr [eax] 42444C7h +
mov ecx [ebp+lpBaseAddress] +
mov edx [ebp+arg_4] +
mov [ecx+4] edx +
mov eax [ebp+lpBaseAddress] +
mov byte ptr [eax+8] 0E9h +
mov ecx [ebp+lpBaseAddress] +
add ecx 0Dh +
mov edx [ebp+arg_0] +
sub edx ecx +
mov eax [ebp+lpBaseAddress] +
mov [eax+9] edx +
push 0Dh  +
mov ecx [ebp+lpBaseAddress] +
push ecx  +
call ds:GetCurrentProcess  +
push eax  +
call ds:FlushInstructionCache  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_102C300  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 0Ch +
call sub_1009250  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
call sub_10114A0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+dwInitParam] +
push eax  +
mov ecx [ebp+lpDialogFunc] +
push ecx  +
mov edx [ebp+hWndParent] +
push edx  +
mov eax [ebp+lpName] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call sub_10098A0  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
movzx eax byte ptr [ebp-1] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
call sub_1013790  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_0] +
mov [ecx+4] edx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
mov [eax+8] ecx +
mov edx [ebp+var_4] +
mov eax [ebp+arg_8] +
mov [edx+0Ch] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_14] +
push eax  +
push 7FFFFFFFh  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_1009500  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_1009492  +
mov eax [ebp+arg_0] +
mov [ebp+var_C] eax +
mov ecx [ebp+arg_4] +
mov [ebp+var_8] ecx +
mov edx [ebp+arg_14] +
push edx  +
push 7FFFFFFFh  +
push 0  +
lea eax [ebp+arg_8] +
push eax  +
call sub_10094A0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_1009420  +
mov ecx [ebp+arg_14] +
and ecx 0FFFFE000h +
jz loc_100938D  +
mov [ebp+var_4] 80070057h +
cmp [ebp+arg_4] 0 +
jz loc_1009388  +
xor edx edx +
mov eax [ebp+arg_0] +
mov [eax] dx +
jmp loc_100941E  +
cmp [ebp+arg_4] 0 +
jnz loc_10093B5  +
mov ecx [ebp+arg_8] +
movzx edx word ptr [ecx] +
test edx edx +
jz loc_10093B3  +
cmp [ebp+arg_0] 0 +
jnz loc_10093AC  +
mov [ebp+var_4] 80070057h +
jmp loc_10093B3  +
mov [ebp+var_4] 8007007Ah +
jmp loc_100941E  +
mov [ebp+var_10] 0 +
push 7FFFFFFEh  +
mov eax [ebp+arg_8] +
push eax  +
lea ecx [ebp+var_10] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_1024780  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
mov edx [ebp+arg_0] +
lea eax [edx+ecx*2] +
mov [ebp+var_C] eax +
mov ecx [ebp+arg_4] +
sub ecx [ebp+var_10] +
mov [ebp+var_8] ecx +
cmp [ebp+var_4] 0 +
jl loc_100941E  +
mov edx [ebp+arg_14] +
and edx 200h +
jz loc_100941E  +
cmp [ebp+var_8] 1 +
jbe loc_100941E  +
mov eax [ebp+var_8] +
shl eax 1 +
mov [ebp+var_14] eax +
mov ecx [ebp+arg_14] +
push ecx  +
mov edx [ebp+var_14] +
push edx  +
mov eax [ebp+var_C] +
push eax  +
call sub_1009590  +
jmp loc_100942E  +
cmp [ebp+arg_4] 0 +
jz loc_100942E  +
xor ecx ecx +
mov edx [ebp+arg_0] +
mov [edx] cx +
cmp [ebp+var_4] 0 +
jge loc_1009467  +
mov eax [ebp+arg_14] +
and eax 1C00h +
jz loc_1009467  +
cmp [ebp+arg_4] 0 +
jz loc_1009467  +
mov ecx [ebp+arg_4] +
shl ecx 1 +
mov [ebp+var_18] ecx +
mov edx [ebp+arg_14] +
push edx  +
lea eax [ebp+var_8] +
push eax  +
lea ecx [ebp+var_C] +
push ecx  +
push 0  +
mov edx [ebp+var_18] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_10095D0  +
cmp [ebp+var_4] 0 +
jge loc_1009476  +
cmp [ebp+var_4] 8007007Ah +
jnz loc_1009492  +
cmp [ebp+arg_C] 0 +
jz loc_1009484  +
mov ecx [ebp+arg_C] +
mov edx [ebp+var_C] +
mov [ecx] edx +
cmp [ebp+arg_10] 0 +
jz loc_1009492  +
mov eax [ebp+arg_10] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] 0 +
cmp [ebp+arg_4] 0 +
jz loc_10094C6  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
cmp ecx [ebp+arg_8] +
jb loc_10094C6  +
mov [ebp+var_4] 80070057h +
jmp loc_10094F1  +
mov edx [ebp+arg_C] +
and edx 100h +
jz loc_10094F1  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0 +
jnz loc_10094F1  +
mov ecx [ebp+arg_0] +
mov dword ptr [ecx] offset WindowName +
cmp [ebp+arg_4] 0 +
jz loc_10094F1  +
mov edx [ebp+arg_4] +
mov dword ptr [edx] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_C] +
and eax 100h +
jz loc_1009534  +
cmp [ebp+arg_0] 0 +
jnz loc_1009523  +
cmp [ebp+arg_4] 0 +
jnz loc_100952B  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jbe loc_1009532  +
mov [ebp+var_4] 80070057h +
jmp loc_1009548  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1009560  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] 0 +
cmp [ebp+arg_4] 0 +
jz loc_100957B  +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_8] +
jbe loc_1009582  +
mov [ebp+var_4] 80070057h +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 2 +
jbe loc_10095BB  +
mov eax [ebp+arg_4] +
sub eax 2 +
push eax  +
mov ecx [ebp+arg_8] +
and ecx 0FFh +
push ecx  +
mov edx [ebp+arg_0] +
add edx 2 +
push edx  +
call memset  +
add esp 0Ch +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_4] +
shr eax 1 +
mov [ebp+var_4] eax +
jz loc_1009614  +
mov ecx [ebp+arg_14] +
and ecx 1000h +
jz loc_1009614  +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_0] +
lea ecx [eax+edx*2] +
mov [ebp+var_8] ecx +
mov edx [ebp+arg_C] +
mov eax [ebp+var_8] +
mov [edx] eax +
mov ecx [ebp+var_4] +
sub ecx [ebp+arg_8] +
mov edx [ebp+arg_10] +
mov [edx] ecx +
xor eax eax +
mov ecx [ebp+var_8] +
mov [ecx] ax +
mov edx [ebp+arg_14] +
and edx 400h +
jz loc_1009681  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_14] +
and ecx 0FFh +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call memset  +
add esp 0Ch +
mov eax [ebp+arg_14] +
and eax 0FFh +
jnz loc_1009655  +
mov ecx [ebp+arg_C] +
mov edx [ebp+arg_0] +
mov [ecx] edx +
mov eax [ebp+arg_10] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
jmp loc_1009681  +
cmp [ebp+var_4] 0 +
jbe loc_1009681  +
mov edx [ebp+var_4] +
mov eax [ebp+arg_0] +
lea ecx [eax+edx*2-2] +
mov [ebp+var_C] ecx +
mov edx [ebp+arg_C] +
mov eax [ebp+var_C] +
mov [edx] eax +
mov ecx [ebp+arg_10] +
mov dword ptr [ecx] 1 +
xor edx edx +
mov eax [ebp+var_C] +
mov [eax] dx +
cmp [ebp+var_4] 0 +
jbe loc_10096AA  +
mov ecx [ebp+arg_14] +
and ecx 800h +
jz loc_10096AA  +
mov edx [ebp+arg_C] +
mov eax [ebp+arg_0] +
mov [edx] eax +
mov ecx [ebp+arg_10] +
mov edx [ebp+var_4] +
mov [ecx] edx +
xor eax eax +
mov ecx [ebp+arg_0] +
mov [ecx] ax +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_10096E0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 0Ch +
call sub_1009700  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
cmp dword ptr [eax] 0 +
jz loc_1009724  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
mov [ebp+lpMem] edx +
mov eax [ebp+lpMem] +
push eax  +
call sub_1009730  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpMem] +
push eax  +
call sub_102C24B  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1007F90  +
mov ecx [ebp+var_4] +
call sub_10114A0  +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_10097A0  +
mov eax [ebp+var_4] +
mov dword ptr [eax+18h] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+1Ch] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 0Ch +
call sub_100B430  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov edx [ebp+var_8] +
mov byte ptr [edx+4] 0 +
movzx eax [ebp+arg_4] +
test eax eax +
jz loc_10097FC  +
mov ecx [ebp+var_8] +
call sub_1009840  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_10097FC  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1007F50  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
movzx ecx byte ptr [eax+4] +
test ecx ecx +
jz loc_100982C  +
mov ecx [ebp+var_4] +
call sub_1014660  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov ecx [eax] +
call sub_1009880  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1009863  +
mov eax [ebp+var_4] +
jmp loc_100986C  +
mov ecx [ebp+var_8] +
mov byte ptr [ecx+4] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpCriticalSection] ecx +
mov eax [ebp+lpCriticalSection] +
push eax  +
call ds:EnterCriticalSection  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
call sub_1009F90  +
call sub_1009F50  +
mov [ebp+var_4] eax +
push 5  +
mov eax [ebp+lpName] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call sub_1009F30  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_10099CE  +
push 0F0h  +
mov edx [ebp+lpName] +
push edx  +
mov eax [ebp+hModule] +
push eax  +
call sub_1009F30  +
mov [ebp+hResInfo] eax +
mov [ebp+hResData] 0 +
mov [ebp+var_C] 0 +
cmp [ebp+hResInfo] 0 +
jz loc_1009918  +
mov ecx [ebp+hResInfo] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
mov eax [ebp+hResData] +
push eax  +
call ds:LockResource  +
mov [ebp+var_C] eax +
mov [ebp+dwErrCode] 0 +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call ds:LoadResource  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jz loc_10099B5  +
mov eax [ebp+var_10] +
push eax  +
call ds:LockResource  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jz loc_10099AA  +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [ebp+var_20] +
push edx  +
call sub_10099E0  +
mov [ebp+pMem] eax +
mov eax [ebp+dwInitParam] +
push eax  +
mov ecx [ebp+lpDialogFunc] +
push ecx  +
mov edx [ebp+hWndParent] +
push edx  +
mov eax [ebp+pMem] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call ds:DialogBoxIndirectParamW  +
mov [ebp+var_4] eax +
mov edx [ebp+var_4] +
push edx  +
call sub_1009F60  +
movzx eax al +
test eax eax +
jnz loc_100998F  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
mov ecx [ebp+pMem] +
cmp ecx [ebp+var_20] +
jz loc_10099A8  +
mov edx [ebp+pMem] +
push edx  +
call ds:GlobalHandle  +
push eax  +
call ds:GlobalFree  +
jmp loc_10099B3  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_10099BE  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
cmp [ebp+dwErrCode] 0 +
jz loc_10099CE  +
mov eax [ebp+dwErrCode] +
push eax  +
call ds:SetLastError  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov eax [ebp+arg_0] +
push eax  +
call sub_1009D60  +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
sub ecx [ebp+arg_0] +
mov [ebp+var_14] ecx +
mov edx [ebp+var_14] +
mov [ebp+dwBytes] edx +
mov eax [ebp+arg_0] +
push eax  +
call sub_1009D10  +
mov [ebp+var_18] eax +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1009D30  +
movzx edx word ptr [eax] +
mov [ebp+var_2C] edx +
mov [ebp+var_24] 0 +
mov eax [ebp+var_8] +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov [ebp+var_30] ecx +
mov [ebp+var_4] 0 +
jmp loc_1009A43  +
mov edx [ebp+var_4] +
add edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+var_4] +
cmp eax [ebp+var_2C] +
jge loc_1009AA3  +
mov ecx [ebp+var_18] +
push ecx  +
mov edx [ebp+var_1C] +
push edx  +
call sub_1009E60  +
mov [ebp+var_30] eax +
cmp [ebp+var_18] 0 +
jz loc_1009A6C  +
mov eax [ebp+var_1C] +
add eax 18h +
mov [ebp+var_44] eax +
jmp loc_1009A75  +
mov ecx [ebp+var_1C] +
add ecx 12h +
mov [ebp+var_44] ecx +
mov edx [ebp+var_44] +
mov [ebp+var_10] edx +
mov eax [ebp+var_10] +
movzx ecx word ptr [eax] +
cmp ecx 7Bh +
jnz loc_1009A8F  +
mov [ebp+var_24] 1 +
jmp loc_1009A9B  +
mov edx [ebp+var_30] +
sub edx [ebp+var_1C] +
add edx [ebp+dwBytes] +
mov [ebp+dwBytes] edx +
mov eax [ebp+var_30] +
mov [ebp+var_1C] eax +
jmp loc_1009A3A  +
cmp [ebp+var_24] 0 +
jnz loc_1009AB1  +
mov eax [ebp+arg_0] +
jmp loc_1009C08  +
mov ecx [ebp+dwBytes] +
push ecx  +
push 0  +
call ds:GlobalAlloc  +
mov [ebp+var_28] eax +
mov edx [ebp+var_28] +
mov [ebp+var_C] edx +
mov eax [ebp+var_14] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+dwBytes] +
push edx  +
mov eax [ebp+var_28] +
push eax  +
call sub_1009C20  +
add esp 10h +
mov ecx [ebp+var_28] +
add ecx [ebp+var_14] +
mov [ebp+var_28] ecx +
mov edx [ebp+dwBytes] +
mov [ebp+var_20] edx +
mov eax [ebp+dwBytes] +
sub eax [ebp+var_14] +
mov [ebp+dwBytes] eax +
mov ecx [ebp+dwBytes] +
cmp [ebp+var_20] ecx +
sbb edx edx +
add edx 1 +
mov [ebp+var_38] edx +
jnz loc_1009B10  +
push 80004005h  +
call sub_1007F50  +
xor eax eax +
jnz loc_1009AF6  +
mov ecx [ebp+var_C] +
push ecx  +
call sub_1009D30  +
xor edx edx +
mov [eax] dx +
mov eax [ebp+var_8] +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov [ebp+var_30] ecx +
mov [ebp+var_4] 0 +
jmp loc_1009B40  +
mov edx [ebp+var_4] +
add edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+var_4] +
cmp eax [ebp+var_2C] +
jge loc_1009C05  +
mov ecx [ebp+var_18] +
push ecx  +
mov edx [ebp+var_1C] +
push edx  +
call sub_1009E60  +
mov [ebp+var_30] eax +
cmp [ebp+var_18] 0 +
jz loc_1009B6D  +
mov eax [ebp+var_1C] +
add eax 18h +
mov [ebp+var_48] eax +
jmp loc_1009B76  +
mov ecx [ebp+var_1C] +
add ecx 12h +
mov [ebp+var_48] ecx +
mov edx [ebp+var_48] +
mov [ebp+var_10] edx +
mov eax [ebp+var_10] +
movzx ecx word ptr [eax] +
cmp ecx 7Bh +
jz loc_1009BFA  +
mov edx [ebp+var_30] +
sub edx [ebp+var_1C] +
mov [ebp+var_3C] edx +
mov eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+var_1C] +
push ecx  +
mov edx [ebp+dwBytes] +
push edx  +
mov eax [ebp+var_28] +
push eax  +
call sub_1009C20  +
add esp 10h +
mov ecx [ebp+var_28] +
add ecx [ebp+var_3C] +
mov [ebp+var_28] ecx +
mov edx [ebp+dwBytes] +
mov [ebp+var_20] edx +
mov eax [ebp+dwBytes] +
sub eax [ebp+var_3C] +
mov [ebp+dwBytes] eax +
mov ecx [ebp+dwBytes] +
cmp [ebp+var_20] ecx +
sbb edx edx +
add edx 1 +
mov [ebp+var_40] edx +
jnz loc_1009BDA  +
push 80004005h  +
call sub_1007F50  +
xor eax eax +
jnz loc_1009BC0  +
mov ecx [ebp+var_C] +
push ecx  +
call sub_1009D30  +
mov [ebp+var_4C] eax +
mov edx [ebp+var_4C] +
mov ax [edx] +
add ax 1 +
mov ecx [ebp+var_4C] +
mov [ecx] ax +
mov edx [ebp+var_30] +
mov [ebp+var_1C] edx +
jmp loc_1009B37  +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call memcpy_s  +
add esp 10h +
push eax  +
call sub_1009C50  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 50h +
ja loc_1009C8D  +
mov ecx [ebp+var_4] +
movzx edx ds:byte_1009CB0[ecx] +
jmp ds:off_1009CA0[edx*4]  +
push 8007000Eh  +
call sub_1007F50  +
jmp loc_1009C97  +
push 80070057h  +
call sub_1007F50  +
jmp loc_1009C97  +
jmp loc_1009C97  +
push 80004005h  +
call sub_1007F50  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
movzx ecx word ptr [eax+2] +
xor eax eax +
cmp ecx 0FFFFh +
setz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push eax  +
call sub_1009D10  +
test eax eax +
jz loc_1009D4C  +
mov eax [ebp+arg_0] +
add eax 10h +
jmp loc_1009D52  +
jmp loc_1009D52  +
mov eax [ebp+arg_0] +
add eax 8 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push eax  +
call sub_1009D10  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1009D8E  +
mov ecx [ebp+arg_0] +
add ecx 1Ah +
mov [ebp+var_C] ecx +
mov edx [ebp+arg_0] +
mov eax [edx+0Ch] +
mov [ebp+var_8] eax +
jmp loc_1009D9F  +
mov ecx [ebp+arg_0] +
add ecx 12h +
mov [ebp+var_C] ecx +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_C] +
movzx edx word ptr [ecx] +
cmp edx 0FFFFh +
jnz loc_1009DB8  +
mov eax [ebp+var_C] +
add eax 4 +
mov [ebp+var_C] eax +
jmp loc_1009DCD  +
mov ecx [ebp+var_C] +
movzx edx word ptr [ecx] +
mov eax [ebp+var_C] +
add eax 2 +
mov [ebp+var_C] eax +
test edx edx +
jz loc_1009DCD  +
jmp loc_1009DB8  +
mov ecx [ebp+var_C] +
movzx edx word ptr [ecx] +
cmp edx 0FFFFh +
jnz loc_1009DE6  +
mov eax [ebp+var_C] +
add eax 4 +
mov [ebp+var_C] eax +
jmp loc_1009DFB  +
mov ecx [ebp+var_C] +
movzx edx word ptr [ecx] +
mov eax [ebp+var_C] +
add eax 2 +
mov [ebp+var_C] eax +
test edx edx +
jz loc_1009DFB  +
jmp loc_1009DE6  +
mov ecx [ebp+var_C] +
movzx edx word ptr [ecx] +
mov eax [ebp+var_C] +
add eax 2 +
mov [ebp+var_C] eax +
test edx edx +
jz loc_1009E10  +
jmp loc_1009DFB  +
mov ecx [ebp+var_8] +
and ecx 40h +
jz loc_1009E47  +
cmp [ebp+var_4] 0 +
jz loc_1009E29  +
mov edx [ebp+var_C] +
add edx 6 +
mov [ebp+var_C] edx +
jmp loc_1009E32  +
mov eax [ebp+var_C] +
add eax 2 +
mov [ebp+var_C] eax +
mov ecx [ebp+var_C] +
movzx edx word ptr [ecx] +
mov eax [ebp+var_C] +
add eax 2 +
mov [ebp+var_C] eax +
test edx edx +
jz loc_1009E47  +
jmp loc_1009E32  +
mov eax [ebp+var_C] +
add eax 3 +
and eax 0FFFFFFFCh +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp [ebp+arg_4] 0 +
jz loc_1009E79  +
mov eax [ebp+arg_0] +
add eax 18h +
mov [ebp+var_8] eax +
jmp loc_1009E82  +
mov ecx [ebp+arg_0] +
add ecx 12h +
mov [ebp+var_8] ecx +
mov edx [ebp+var_8] +
movzx eax word ptr [edx] +
cmp eax 0FFFFh +
jnz loc_1009E9A  +
mov ecx [ebp+var_8] +
add ecx 4 +
mov [ebp+var_8] ecx +
jmp loc_1009EAF  +
mov edx [ebp+var_8] +
movzx eax word ptr [edx] +
mov ecx [ebp+var_8] +
add ecx 2 +
mov [ebp+var_8] ecx +
test eax eax +
jz loc_1009EAF  +
jmp loc_1009E9A  +
mov edx [ebp+var_8] +
movzx eax word ptr [edx] +
cmp eax 0FFFFh +
jnz loc_1009EC7  +
mov ecx [ebp+var_8] +
add ecx 4 +
mov [ebp+var_8] ecx +
jmp loc_1009EDC  +
mov edx [ebp+var_8] +
movzx eax word ptr [edx] +
mov ecx [ebp+var_8] +
add ecx 2 +
mov [ebp+var_8] ecx +
test eax eax +
jz loc_1009EDC  +
jmp loc_1009EC7  +
mov edx [ebp+var_8] +
mov ax [edx] +
mov [ebp+var_4] ax +
mov ecx [ebp+var_8] +
add ecx 2 +
mov [ebp+var_8] ecx +
movzx edx [ebp+var_4] +
test edx edx +
jz loc_1009F08  +
cmp [ebp+arg_4] 0 +
jnz loc_1009F08  +
movzx eax [ebp+var_4] +
sub eax 2 +
mov [ebp+var_4] ax +
movzx ecx [ebp+var_4] +
mov edx [ebp+var_8] +
lea eax [edx+ecx+3] +
and eax 0FFFFFFFCh +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpType] +
push eax  +
mov ecx [ebp+lpName] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call ds:FindResourceW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
jz loc_1009F7B  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_1009F7B  +
mov [ebp+var_4] 1 +
jmp loc_1009F82  +
mov [ebp+var_4] 0 +
mov al byte ptr [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push 0  +
push offset unk_103BC40  +
lea ecx [ebp+var_8] +
call sub_10097C0  +
lea ecx [ebp+var_8] +
call sub_1009840  +
test eax eax +
jge loc_1009FCA  +
mov [ebp+var_48] 0 +
lea ecx [ebp+var_8] +
call sub_1009810  +
mov eax [ebp+var_48] +
jmp loc_100A1A3  +
push offset String  +
call ds:RegisterWindowMessageW  +
mov Msg eax +
push offset aWm_atlgetcontr  +
call ds:RegisterWindowMessageW  +
mov dword_103B50C eax +
mov [ebp+var_3C.cbSize] 30h +
lea eax [ebp+var_3C] +
push eax  +
call sub_100B010  +
push eax  +
mov ecx offset unk_103BC00 +
call sub_1022700  +
push eax  +
call ds:GetClassInfoExW  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_100A0B1  +
mov [ebp+var_3C.cbSize] 30h +
mov [ebp+var_3C.style] 8 +
mov [ebp+var_3C.lpfnWndProc] offset loc_100A1B0 +
mov [ebp+var_3C.cbClsExtra] 0 +
mov [ebp+var_3C.cbWndExtra] 0 +
mov ecx offset unk_103BC00 +
call sub_1022700  +
mov [ebp+var_3C.hInstance] eax +
mov [ebp+var_3C.hIcon] 0 +
push 7F00h  +
push 0  +
call ds:LoadCursorW  +
mov [ebp+var_3C.hCursor] eax +
mov [ebp+var_3C.hbrBackground] 6 +
mov [ebp+var_3C.lpszMenuName] 0 +
call sub_100B010  +
mov [ebp+var_3C.lpszClassName] eax +
mov [ebp+var_3C.hIconSm] 0 +
lea ecx [ebp+var_3C] +
push ecx  +
call ds:RegisterClassExW  +
mov word ptr [ebp+var_40] ax +
movzx edx word ptr [ebp+var_40] +
test edx edx +
jz loc_100A0AA  +
lea eax [ebp+var_40] +
push eax  +
mov ecx offset unk_103BC5C +
call sub_100AF50  +
mov [ebp+var_C] 1 +
jmp loc_100A0B1  +
mov [ebp+var_C] 0 +
cmp [ebp+var_C] 0 +
jz loc_100A192  +
push 30h  +
push 0  +
lea ecx [ebp+var_3C] +
push ecx  +
call memset  +
add esp 0Ch +
mov [ebp+var_3C.cbSize] 30h +
lea edx [ebp+var_3C] +
push edx  +
call sub_100B030  +
push eax  +
mov ecx offset unk_103BC00 +
call sub_1022700  +
push eax  +
call ds:GetClassInfoExW  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_100A192  +
mov [ebp+var_3C.cbSize] 30h +
mov [ebp+var_3C.style] 8 +
mov [ebp+var_3C.lpfnWndProc] offset loc_100A5F0 +
mov [ebp+var_3C.cbClsExtra] 0 +
mov [ebp+var_3C.cbWndExtra] 0 +
mov ecx offset unk_103BC00 +
call sub_1022700  +
mov [ebp+var_3C.hInstance] eax +
mov [ebp+var_3C.hIcon] 0 +
push 7F00h  +
push 0  +
call ds:LoadCursorW  +
mov [ebp+var_3C.hCursor] eax +
mov [ebp+var_3C.hbrBackground] 6 +
mov [ebp+var_3C.lpszMenuName] 0 +
call sub_100B030  +
mov [ebp+var_3C.lpszClassName] eax +
mov [ebp+var_3C.hIconSm] 0 +
lea eax [ebp+var_3C] +
push eax  +
call ds:RegisterClassExW  +
mov word ptr [ebp+var_44] ax +
movzx ecx word ptr [ebp+var_44] +
test ecx ecx +
jz loc_100A18B  +
lea edx [ebp+var_44] +
push edx  +
mov ecx offset unk_103BC5C +
call sub_100AF50  +
mov [ebp+var_C] 1 +
jmp loc_100A192  +
mov [ebp+var_C] 0 +
mov eax [ebp+var_C] +
mov [ebp+var_4C] eax +
lea ecx [ebp+var_8] +
call sub_1009810  +
mov eax [ebp+var_4C] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035170  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp-58h] eax +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+0Ch] +
mov [ebp-6Ch] eax +
cmp dword ptr [ebp-6Ch] 1 +
jz loc_100A205  +
cmp dword ptr [ebp-6Ch] 82h +
jz loc_100A4EA  +
cmp dword ptr [ebp-6Ch] 210h +
jz loc_100A514  +
jmp loc_100A55F  +
push 0  +
call ds:OleInitialize  +
mov ecx [ebp+14h] +
mov [ebp-3Ch] ecx +
mov edx [ebp+8] +
push edx  +
call ds:GetWindowTextLengthW  +
mov [ebp-28h] eax +
mov eax [ebp-28h] +
lea ecx [eax+eax+0Ah] +
cmp ecx 400h +
ja loc_100A251  +
mov edx [ebp-28h] +
lea eax [edx+edx+0Ah] +
call __alloca_probe_16  +
mov [ebp-70h] esp +
push 0CCCCh  +
mov eax [ebp-70h] +
push eax  +
call sub_100A5A0  +
mov [ebp-74h] eax +
jmp loc_100A270  +
push 0DDDDh  +
mov ecx [ebp-28h] +
lea edx [ecx+ecx+0Ah] +
push edx  +
call ds:malloc  +
add esp 4 +
push eax  +
call sub_100A5A0  +
mov [ebp-74h] eax +
mov eax [ebp-74h] +
push eax  +
lea ecx [ebp-1Ch] +
call sub_1007F90  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-1Ch] +
call sub_1024680  +
test eax eax +
jnz loc_100A2AD  +
mov dword ptr [ebp-5Ch] 0FFFFFFFFh +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-5Ch] +
jmp loc_100A575  +
mov ecx [ebp-28h] +
add ecx 1 +
push ecx  +
lea ecx [ebp-1Ch] +
call sub_1024680  +
push eax  +
mov edx [ebp+8] +
push edx  +
call ds:GetWindowTextW  +
push offset WindowName  +
mov eax [ebp+8] +
push eax  +
call ds:SetWindowTextW  +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-40h] 0 +
cmp dword ptr [ebp-3Ch] 0 +
jz loc_100A2FD  +
mov ecx [ebp-3Ch] +
cmp dword ptr [ecx] 0 +
jz loc_100A2FD  +
mov edx [ebp-3Ch] +
mov eax [edx] +
movzx ecx word ptr [eax] +
mov [ebp-40h] ecx +
lea ecx [ebp-38h] +
call sub_1012550  +
mov byte ptr [ebp-4] 1 +
cmp dword ptr [ebp-40h] 0 +
jz loc_100A3A3  +
mov edx [ebp-40h] +
push edx  +
push 42h  +
call ds:GlobalAlloc  +
mov [ebp-44h] eax +
cmp dword ptr [ebp-44h] 0 +
jz loc_100A379  +
mov eax [ebp-44h] +
push eax  +
call ds:GlobalLock  +
mov [ebp-4Ch] eax +
mov ecx [ebp-3Ch] +
mov edx [ecx] +
add edx 2 +
mov [ebp-48h] edx +
mov eax [ebp-40h] +
push eax  +
mov ecx [ebp-48h] +
push ecx  +
mov edx [ebp-40h] +
push edx  +
mov eax [ebp-4Ch] +
push eax  +
call sub_1009C20  +
add esp 10h +
mov ecx [ebp-44h] +
push ecx  +
call ds:GlobalUnlock  +
lea ecx [ebp-38h] +
call sub_10114A0  +
push eax  +
push 1  +
mov edx [ebp-44h] +
push edx  +
call ds:CreateStreamOnHGlobal  +
jmp loc_100A3A3  +
mov dword ptr [ebp-60h] 0FFFFFFFFh +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-60h] +
jmp loc_100A575  +
call sub_100A5D0  +
mov [ebp-24h] eax +
lea ecx [ebp-30h] +
call sub_100B430  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-10h] +
call sub_1012550  +
mov byte ptr [ebp-4] 3 +
push 0  +
lea ecx [ebp-10h] +
call sub_10114A0  +
push eax  +
lea ecx [ebp-38h] +
call sub_1024680  +
push eax  +
mov eax [ebp+8] +
push eax  +
lea ecx [ebp-1Ch] +
call sub_1024680  +
push eax  +
call sub_100F520  +
push eax  +
call sub_100AD70  +
mov [ebp-34h] eax +
cmp dword ptr [ebp-34h] 0 +
jge loc_100A43A  +
mov dword ptr [ebp-64h] 0FFFFFFFFh +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-10h] +
call sub_1023C70  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-30h] +
call sub_100AEF0  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-64h] +
jmp loc_100A575  +
lea ecx [ebp-10h] +
call sub_1024680  +
mov [ebp-78h] eax +
lea ecx [ebp-20h] +
push ecx  +
push offset dword_10019A4  +
mov edx [ebp-78h] +
push edx  +
mov eax [ebp-78h] +
mov ecx [eax] +
mov edx [ecx] +
call edx  +
mov [ebp-34h] eax +
cmp dword ptr [ebp-34h] 0 +
jge loc_100A4A6  +
mov dword ptr [ebp-68h] 0FFFFFFFFh +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-10h] +
call sub_1023C70  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-30h] +
call sub_100AEF0  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-68h] +
jmp loc_100A575  +
mov eax [ebp-20h] +
push eax  +
push 0FFFFFFEBh  +
mov ecx [ebp+8] +
push ecx  +
call sub_1009000  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-10h] +
call sub_1023C70  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-30h] +
call sub_100AEF0  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
jmp loc_100A55F  +
push 0FFFFFFEBh  +
mov edx [ebp+8] +
push edx  +
call sub_1009020  +
mov [ebp-50h] eax +
cmp dword ptr [ebp-50h] 0 +
jz loc_100A50C  +
mov eax [ebp-50h] +
mov ecx [eax] +
mov edx [ebp-50h] +
push edx  +
mov eax [ecx+8] +
call eax  +
call ds:OleUninitialize  +
jmp loc_100A55F  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_100A55F  +
push 0FFFFFFECh  +
mov ecx [ebp+14h] +
push ecx  +
call ds:GetWindowLongW  +
mov [ebp-54h] eax +
mov edx [ebp-54h] +
and edx 10000h +
jz loc_100A55F  +
push 0FFFFFFECh  +
mov eax [ebp+8] +
push eax  +
call ds:GetWindowLongW  +
mov [ebp-54h] eax +
mov ecx [ebp-54h] +
or ecx 10000h +
mov [ebp-54h] ecx +
mov edx [ebp-54h] +
push edx  +
push 0FFFFFFECh  +
mov eax [ebp+8] +
push eax  +
call ds:SetWindowLongW  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
push ecx  +
call ds:DefWindowProcW  +
lea esp [ebp-7Ch] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp-58h] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100A5BC  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov edx [ebp+arg_0] +
add edx 8 +
mov [ebp+arg_0] edx +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 3 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10351C8  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp-5Ch] eax +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+0Ch] +
mov [ebp-74h] eax +
cmp dword ptr [ebp-74h] 1 +
jz loc_100A645  +
cmp dword ptr [ebp-74h] 82h +
jz loc_100A9B2  +
cmp dword ptr [ebp-74h] 210h +
jz loc_100A9DC  +
jmp loc_100AA26  +
push 0  +
call ds:OleInitialize  +
mov ecx [ebp+14h] +
mov [ebp-3Ch] ecx +
mov edx [ebp+8] +
push edx  +
call ds:GetWindowTextLengthW  +
mov [ebp-28h] eax +
mov eax [ebp-28h] +
lea ecx [eax+eax+0Ah] +
cmp ecx 400h +
ja loc_100A691  +
mov edx [ebp-28h] +
lea eax [edx+edx+0Ah] +
call __alloca_probe_16  +
mov [ebp-78h] esp +
push 0CCCCh  +
mov eax [ebp-78h] +
push eax  +
call sub_100A5A0  +
mov [ebp-7Ch] eax +
jmp loc_100A6B0  +
push 0DDDDh  +
mov ecx [ebp-28h] +
lea edx [ecx+ecx+0Ah] +
push edx  +
call ds:malloc  +
add esp 4 +
push eax  +
call sub_100A5A0  +
mov [ebp-7Ch] eax +
mov eax [ebp-7Ch] +
push eax  +
lea ecx [ebp-1Ch] +
call sub_1007F90  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-1Ch] +
call sub_1024680  +
test eax eax +
jnz loc_100A6ED  +
mov dword ptr [ebp-60h] 0FFFFFFFFh +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-60h] +
jmp loc_100AA3C  +
mov ecx [ebp-28h] +
add ecx 1 +
push ecx  +
lea ecx [ebp-1Ch] +
call sub_1024680  +
push eax  +
mov edx [ebp+8] +
push edx  +
call ds:GetWindowTextW  +
push offset WindowName  +
mov eax [ebp+8] +
push eax  +
call ds:SetWindowTextW  +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-44h] 0 +
cmp dword ptr [ebp-3Ch] 0 +
jz loc_100A73D  +
mov ecx [ebp-3Ch] +
cmp dword ptr [ecx] 0 +
jz loc_100A73D  +
mov edx [ebp-3Ch] +
mov eax [edx] +
movzx ecx word ptr [eax] +
mov [ebp-44h] ecx +
lea ecx [ebp-38h] +
call sub_1012550  +
mov byte ptr [ebp-4] 1 +
cmp dword ptr [ebp-44h] 0 +
jz loc_100A7E3  +
mov edx [ebp-44h] +
push edx  +
push 42h  +
call ds:GlobalAlloc  +
mov [ebp-48h] eax +
cmp dword ptr [ebp-48h] 0 +
jz loc_100A7B9  +
mov eax [ebp-48h] +
push eax  +
call ds:GlobalLock  +
mov [ebp-50h] eax +
mov ecx [ebp-3Ch] +
mov edx [ecx] +
add edx 2 +
mov [ebp-4Ch] edx +
mov eax [ebp-44h] +
push eax  +
mov ecx [ebp-4Ch] +
push ecx  +
mov edx [ebp-44h] +
push edx  +
mov eax [ebp-50h] +
push eax  +
call sub_1009C20  +
add esp 10h +
mov ecx [ebp-48h] +
push ecx  +
call ds:GlobalUnlock  +
lea ecx [ebp-38h] +
call sub_10114A0  +
push eax  +
push 1  +
mov edx [ebp-48h] +
push edx  +
call ds:CreateStreamOnHGlobal  +
jmp loc_100A7E3  +
mov dword ptr [ebp-64h] 0FFFFFFFFh +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-64h] +
jmp loc_100AA3C  +
lea ecx [ebp-40h] +
call sub_100B430  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-38h] +
call sub_1024680  +
push eax  +
call sub_100AA70  +
mov [ebp-34h] eax +
cmp dword ptr [ebp-34h] 0 +
jge loc_100A840  +
mov dword ptr [ebp-68h] 0FFFFFFFFh +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40h] +
call sub_1007440  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-68h] +
jmp loc_100AA3C  +
call sub_100A5D0  +
mov [ebp-24h] eax +
lea ecx [ebp-30h] +
call sub_100B430  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-10h] +
call sub_1012550  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-40h] +
call sub_1024680  +
push eax  +
lea ecx [ebp-10h] +
call sub_10114A0  +
push eax  +
lea ecx [ebp-38h] +
call sub_1024680  +
push eax  +
mov ecx [ebp+8] +
push ecx  +
lea ecx [ebp-1Ch] +
call sub_1024680  +
push eax  +
call sub_100F520  +
push eax  +
call sub_100AD70  +
mov [ebp-34h] eax +
cmp dword ptr [ebp-34h] 0 +
jge loc_100A8EA  +
mov dword ptr [ebp-6Ch] 0FFFFFFFFh +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-10h] +
call sub_1023C70  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-30h] +
call sub_100AEF0  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40h] +
call sub_1007440  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-6Ch] +
jmp loc_100AA3C  +
lea ecx [ebp-10h] +
call sub_1024680  +
mov [ebp-80h] eax +
lea edx [ebp-20h] +
push edx  +
push offset dword_10019B4  +
mov eax [ebp-80h] +
push eax  +
mov ecx [ebp-80h] +
mov edx [ecx] +
mov eax [edx] +
call eax  +
mov [ebp-34h] eax +
cmp dword ptr [ebp-34h] 0 +
jge loc_100A962  +
mov dword ptr [ebp-70h] 0FFFFFFFFh +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-10h] +
call sub_1023C70  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-30h] +
call sub_100AEF0  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40h] +
call sub_1007440  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
mov eax [ebp-70h] +
jmp loc_100AA3C  +
mov ecx [ebp-20h] +
push ecx  +
push 0FFFFFFEBh  +
mov edx [ebp+8] +
push edx  +
call sub_1009000  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-10h] +
call sub_1023C70  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-30h] +
call sub_100AEF0  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40h] +
call sub_1007440  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_1023C70  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100B050  +
jmp loc_100AA26  +
push 0FFFFFFEBh  +
mov eax [ebp+8] +
push eax  +
call sub_1009020  +
mov [ebp-54h] eax +
cmp dword ptr [ebp-54h] 0 +
jz loc_100A9D4  +
mov ecx [ebp-54h] +
mov edx [ecx] +
mov eax [ebp-54h] +
push eax  +
mov ecx [edx+8] +
call ecx  +
call ds:OleUninitialize  +
jmp loc_100AA26  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_100AA26  +
push 0FFFFFFECh  +
mov edx [ebp+14h] +
push edx  +
call ds:GetWindowLongW  +
mov [ebp-58h] eax +
mov eax [ebp-58h] +
and eax 10000h +
jz loc_100AA26  +
push 0FFFFFFECh  +
mov ecx [ebp+8] +
push ecx  +
call ds:GetWindowLongW  +
mov [ebp-58h] eax +
mov edx [ebp-58h] +
or edx 10000h +
mov [ebp-58h] edx +
mov eax [ebp-58h] +
push eax  +
push 0FFFFFFECh  +
mov ecx [ebp+8] +
push ecx  +
call ds:SetWindowLongW  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov edx [ebp+8] +
push edx  +
call ds:DefWindowProcW  +
lea esp [ebp-84h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp-5Ch] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035208  +
mov eax large fs:0 +
push eax  +
sub esp 418h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_28] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_100AAB3  +
xor eax eax +
jmp loc_100ACC2  +
lea ecx [ebp+var_18] +
push ecx  +
push 2  +
lea edx [ebp+var_10] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx+0Ch] +
call eax  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_100AADC  +
mov eax [ebp+var_1C] +
jmp loc_100ACC2  +
lea ecx [ebp+var_18] +
push ecx  +
push 4  +
lea edx [ebp+var_20] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx+0Ch] +
call eax  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_100AB05  +
mov eax [ebp+var_1C] +
jmp loc_100ACC2  +
lea ecx [ebp+var_18] +
push ecx  +
push 4  +
lea edx [ebp+var_14] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx+0Ch] +
call eax  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_100AB2E  +
mov eax [ebp+var_1C] +
jmp loc_100ACC2  +
cmp [ebp+var_14] 0 +
jbe loc_100ABF5  +
mov ecx [ebp+var_14] +
push ecx  +
lea ecx [ebp+var_24] +
call sub_100ACF0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_100AD50  +
test eax eax +
jnz loc_100AB7B  +
mov [ebp+var_41C] 8007000Eh +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_24] +
call sub_1007440  +
mov eax [ebp+var_41C] +
jmp loc_100ACC2  +
mov edx [ebp+var_14] +
lea eax [edx+edx+2] +
push eax  +
push 0  +
mov ecx [ebp+var_24] +
push ecx  +
call memset  +
add esp 0Ch +
lea edx [ebp+var_18] +
push edx  +
mov eax [ebp+var_14] +
shl eax 1 +
push eax  +
mov ecx [ebp+var_24] +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [eax+0Ch] +
call edx  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_100ABD9  +
mov eax [ebp+var_1C] +
mov [ebp+var_420] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_24] +
call sub_1007440  +
mov eax [ebp+var_420] +
jmp loc_100ACC2  +
lea ecx [ebp+var_24] +
call sub_101AC70  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_24] +
call sub_1007440  +
movzx edx word ptr [ebp+var_10] +
cmp edx 37Ah +
jz loc_100AC10  +
movzx eax word ptr [ebp+var_10] +
cmp eax 37Bh +
jnz loc_100ACAD  +
lea ecx [ebp+var_18] +
push ecx  +
push 4  +
lea edx [ebp+var_418] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx+0Ch] +
call eax  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_100AC3C  +
mov eax [ebp+var_1C] +
jmp loc_100ACC2  +
mov ecx [ebp+var_418] +
sub ecx 4 +
mov [ebp+var_418] ecx +
cmp [ebp+var_418] 0 +
jbe loc_100ACA9  +
cmp [ebp+var_418] 3E8h +
jnb loc_100AC6E  +
mov edx [ebp+var_418] +
mov [ebp+var_424] edx +
jmp loc_100AC78  +
mov [ebp+var_424] 3E8h +
lea eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_424] +
push ecx  +
lea edx [ebp+var_414] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx+0Ch] +
call eax  +
mov ecx [ebp+var_418] +
sub ecx [ebp+var_18] +
mov [ebp+var_418] ecx +
jmp loc_100AC4B  +
xor eax eax +
jmp loc_100ACC2  +
movzx edx word ptr [ebp+var_10] +
cmp edx 376h +
jnz loc_100ACBD  +
xor eax eax +
jmp loc_100ACC2  +
mov eax 80004005h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_28] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] 0 +
jnz loc_100AD0A  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
jmp loc_100AD34  +
mov ecx [ebp+arg_0] +
push ecx  +
push 0  +
call ds:SysAllocStringLen  +
mov edx [ebp+var_4] +
mov [edx] eax +
mov ecx [ebp+var_4] +
call sub_1008A00  +
movzx eax al +
test eax eax +
jz loc_100AD34  +
push 8007000Eh  +
call sub_1007F50  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SysStringLen  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_10] +
push eax  +
push 0  +
push offset dword_100295C  +
push 0  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100ADA0  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
call sub_1009F90  +
lea ecx [ebp+var_4] +
call sub_1012550  +
lea ecx [ebp+var_C] +
call sub_1012550  +
lea ecx [ebp+var_4] +
call sub_10114A0  +
push eax  +
push offset dword_10019C4  +
push 0  +
call sub_100B070  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jl loc_100AE6B  +
lea ecx [ebp+var_10] +
call sub_1012550  +
lea ecx [ebp+var_4] +
call sub_1024680  +
mov [ebp+var_1C] eax +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
push offset dword_10019A4  +
mov eax [ebp+var_1C] +
push eax  +
mov ecx [ebp+var_1C] +
mov edx [ecx] +
mov eax [edx] +
call eax  +
mov ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_14] +
call sub_1007F00  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_20] eax +
mov edx [ebp+arg_1C] +
push edx  +
mov eax [ebp+arg_18] +
push eax  +
mov ecx [ebp+arg_14] +
push ecx  +
lea ecx [ebp+var_C] +
call sub_10114A0  +
push eax  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
lea ecx [ebp+var_14] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_20] +
push ecx  +
mov edx [ebp+var_20] +
mov eax [edx] +
mov ecx [eax+28h] +
call ecx  +
mov [ebp+var_8] eax +
lea ecx [ebp+var_14] +
call sub_1007440  +
lea ecx [ebp+var_10] +
call sub_1023C70  +
cmp [ebp+arg_C] 0 +
jz loc_100AE91  +
cmp [ebp+var_8] 0 +
jl loc_100AE88  +
mov edx [ebp+arg_C] +
mov eax [ebp+var_4] +
mov [edx] eax +
mov [ebp+var_4] 0 +
jmp loc_100AE91  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
cmp [ebp+arg_10] 0 +
jz loc_100AEC3  +
cmp [ebp+var_8] 0 +
jl loc_100AEBA  +
xor edx edx +
cmp [ebp+var_8] 0 +
setl dl  +
sub edx 1 +
and edx [ebp+var_C] +
mov eax [ebp+arg_10] +
mov [eax] edx +
mov [ebp+var_C] 0 +
jmp loc_100AEC3  +
mov ecx [ebp+arg_10] +
mov dword ptr [ecx] 0 +
mov edx [ebp+var_8] +
mov [ebp+var_18] edx +
lea ecx [ebp+var_C] +
call sub_1023C70  +
lea ecx [ebp+var_4] +
call sub_1023C70  +
mov eax [ebp+var_18] +
mov esp ebp +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
cmp dword ptr [eax] 0 +
jz loc_100AF22  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
mov [ebp+var_4] edx +
mov eax [ebp+var_8] +
mov ecx [eax] +
mov edx [ebp+var_8] +
mov eax [ecx] +
mov [edx] eax +
mov ecx [ebp+var_4] +
push ecx  +
call sub_100AF30  +
jmp loc_100AEFB  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push eax  +
call ds:__imp_free  +
add esp 4 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
mov ecx [ebp+var_C] +
mov edx [eax+4] +
cmp edx [ecx+8] +
jnz loc_100AFD2  +
mov eax [ebp+var_C] +
cmp dword ptr [eax+8] 0 +
jnz loc_100AF7B  +
mov [ebp+var_10] 1 +
jmp loc_100AF86  +
mov ecx [ebp+var_C] +
mov edx [ecx+4] +
shl edx 1 +
mov [ebp+var_10] edx +
mov eax [ebp+var_10] +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jl loc_100AF9B  +
cmp [ebp+var_8] 3FFFFFFFh +
jbe loc_100AF9F  +
xor eax eax +
jmp loc_100AFF9  +
push 2  +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+var_C] +
mov eax [edx] +
push eax  +
call off_103B450  +
add esp 0Ch +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_100AFC1  +
xor eax eax +
jmp loc_100AFF9  +
mov ecx [ebp+var_C] +
mov edx [ebp+var_8] +
mov [ecx+8] edx +
mov eax [ebp+var_C] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_C] +
mov ecx [eax+4] +
push ecx  +
mov ecx [ebp+var_C] +
call sub_100B240  +
mov edx [ebp+var_C] +
mov eax [edx+4] +
add eax 1 +
mov ecx [ebp+var_C] +
mov [ecx+4] eax +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset aAtlaxwin80 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset aAtlaxwinlic80 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_100B2D0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_103524B  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
cmp [ebp+arg_8] 0 +
jnz loc_100B0AE  +
mov eax 80004003h +
jmp loc_100B1E3  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 0 +
mov [ebp+var_18] 8007000Eh +
mov [ebp+var_14] 0 +
mov [ebp+var_4] 0 +
push 0F4h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_2C] eax +
mov ecx [ebp+var_2C] +
mov [ebp+var_20] ecx +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_20] 0 +
jz loc_100B103  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_20] +
call sub_100B340  +
mov [ebp+var_30] eax +
mov eax [ebp+var_30] +
mov [ebp+var_34] eax +
jmp loc_100B10A  +
mov [ebp+var_34] 0 +
mov ecx [ebp+var_34] +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_4] 0 +
mov edx [ebp+var_1C] +
mov [ebp+var_14] edx +
jmp loc_100B129  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100B130 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 0 +
jz loc_100B1E0  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_100B200  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_100B410  +
mov ecx [ebp+var_14] +
call sub_100B450  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_100B170  +
mov ecx [ebp+var_14] +
call sub_100B490  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_100B184  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101C7E0  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_100B220  +
cmp [ebp+var_18] 0 +
jnz loc_100B1AD  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+var_14] +
push eax  +
mov ecx [ebp+var_14] +
mov edx [ecx] +
mov eax [edx] +
call eax  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jz loc_100B1E0  +
mov ecx [ebp+var_14] +
mov [ebp+var_28] ecx +
mov edx [ebp+var_28] +
mov [ebp+var_24] edx +
cmp [ebp+var_24] 0 +
jz loc_100B1D9  +
push 1  +
mov eax [ebp+var_24] +
mov edx [eax] +
mov ecx [ebp+var_24] +
mov eax [edx+0Ch] +
call eax  +
mov [ebp+var_38] eax +
jmp loc_100B1E0  +
mov [ebp+var_38] 0 +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
jnz loc_100B229  +
xor ecx ecx +
jnz loc_100B229  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov eax [ebp+var_18] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
lea eax [ecx+edx*2] +
push eax  +
push 2  +
call sub_101B180  +
add esp 8 +
mov [ebp+var_14] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_14] 0 +
jz loc_100B2A1  +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+var_14] +
call sub_1012B30  +
mov [ebp+var_1C] eax +
jmp loc_100B2A8  +
mov [ebp+var_1C] 0 +
mov edx [ebp+var_1C] +
mov [ebp+var_10] edx +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call sub_100B300  +
add esp 4 +
mov edx [ebp+var_4] +
mov dword ptr [edx] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
jz loc_100B333  +
mov eax [ebp+arg_0] +
sub eax 8 +
mov [ebp+arg_0] eax +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 0DDDDh +
jnz loc_100B333  +
mov eax [ebp+arg_0] +
push eax  +
call ds:__imp_free  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_10352C6  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_10114A0  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_1001A08 +
cmp [ebp+arg_0] 0 +
jz loc_100B39B  +
mov ecx [ebp+arg_0] +
mov [ebp+var_14] ecx +
jmp loc_100B3A1  +
mov edx [ebp+var_10] +
mov [ebp+var_14] edx +
mov eax [ebp+var_14] +
push eax  +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_100BF20  +
mov byte ptr [ebp+var_4] 1 +
mov ecx dword_103B4F4 +
mov edx [ecx] +
mov ecx dword_103B4F4 +
mov eax [edx+4] +
call eax  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_100B410  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
add ecx 58h +
call sub_101C7E0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_100B47D  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_101C7E0  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_100B4E0  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_101C7E0  +
mov ecx [ebp+var_8] +
add ecx 58h +
call sub_101C7E0  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_100B530  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
jnz loc_100B4E9  +
xor ecx ecx +
jnz loc_100B4E9  +
mov edx [ebp+var_4] +
push edx  +
call sub_100B510  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
add ecx 1 +
mov edx [ebp+arg_0] +
mov [edx] ecx +
mov eax [ebp+arg_0] +
mov eax [eax] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
push eax  +
call sub_100B550  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
sub ecx 1 +
mov edx [ebp+arg_0] +
mov [edx] ecx +
mov eax [ebp+arg_0] +
mov eax [eax] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
add ecx 4 +
call sub_100B4E0  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov ecx [ebp+8] +
add ecx 4 +
call sub_100B530  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jnz loc_100B5D9  +
mov eax [ebp+8] +
mov [ebp-0Ch] eax +
mov ecx [ebp-0Ch] +
mov [ebp-8] ecx +
cmp dword ptr [ebp-8] 0 +
jz loc_100B5D2  +
push 1  +
mov edx [ebp-8] +
mov eax [edx] +
mov ecx [ebp-8] +
mov edx [eax+0Ch] +
call edx  +
mov [ebp-10h] eax +
jmp loc_100B5D9  +
mov dword ptr [ebp-10h] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_100B603  +
mov eax 80004003h +
jmp loc_100B651  +
mov eax [ebp+10h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-4] 0 +
mov ecx [ebp+0Ch] +
push ecx  +
call sub_100B660  +
test eax eax +
jz loc_100B638  +
mov edx [ebp+10h] +
mov eax [ebp+8] +
mov [edx] eax +
mov ecx [ebp+8] +
mov edx [ecx] +
mov eax [ebp+8] +
push eax  +
mov ecx [edx+4] +
call ecx  +
jmp loc_100B64E  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 8 +
call sub_100B6B0  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0 +
jnz loc_100B698  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+4] 0 +
jnz loc_100B698  +
mov edx [ebp+arg_0] +
cmp dword ptr [edx+8] 0C0h +
jnz loc_100B698  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+0Ch] 46000000h +
jnz loc_100B698  +
mov [ebp+var_4] 1 +
jmp loc_100B69F  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100B8A0  +
push eax  +
mov edx [ebp+var_4] +
push edx  +
call sub_100B6E0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_100B710  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_0] 0 +
jz loc_100B724  +
cmp [ebp+arg_4] 0 +
jnz loc_100B72E  +
mov eax 80070057h +
jmp loc_100B82A  +
cmp [ebp+arg_C] 0 +
jnz loc_100B73E  +
mov eax 80004003h +
jmp loc_100B82A  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
mov ecx [ebp+arg_8] +
push ecx  +
call sub_100B660  +
test eax eax +
jz loc_100B77D  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
add eax [edx+4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [ebp+var_4] +
push eax  +
mov ecx [edx+4] +
call ecx  +
mov edx [ebp+arg_C] +
mov eax [ebp+var_4] +
mov [edx] eax +
xor eax eax +
jmp loc_100B82A  +
mov ecx [ebp+arg_4] +
cmp dword ptr [ecx+8] 0 +
jz loc_100B825  +
mov edx [ebp+arg_4] +
xor eax eax +
cmp dword ptr [edx] 0 +
setz al  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_100B7B1  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx] +
push eax  +
call sub_100B840  +
test eax eax +
jz loc_100B817  +
mov ecx [ebp+arg_4] +
cmp dword ptr [ecx+8] 1 +
jnz loc_100B7E2  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
add eax [edx+4] +
mov [ebp+var_C] eax +
mov ecx [ebp+var_C] +
mov edx [ecx] +
mov eax [ebp+var_C] +
push eax  +
mov ecx [edx+4] +
call ecx  +
mov edx [ebp+arg_C] +
mov eax [ebp+var_C] +
mov [edx] eax +
xor eax eax +
jmp loc_100B82A  +
jmp loc_100B817  +
mov ecx [ebp+arg_4] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
call ecx  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jz loc_100B812  +
cmp [ebp+var_8] 0 +
jnz loc_100B817  +
cmp [ebp+var_10] 0 +
jge loc_100B817  +
mov eax [ebp+var_10] +
jmp loc_100B82A  +
mov edx [ebp+arg_4] +
add edx 0Ch +
mov [ebp+arg_4] edx +
jmp loc_100B77D  +
mov eax 80004002h +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [eax] +
cmp edx [ecx] +
jnz loc_100B885  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [eax+4] +
cmp edx [ecx+4] +
jnz loc_100B885  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [eax+8] +
cmp edx [ecx+8] +
jnz loc_100B885  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [eax+0Ch] +
cmp edx [ecx+0Ch] +
jnz loc_100B885  +
mov [ebp+var_4] 1 +
jmp loc_100B88C  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset off_1001A18 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_100B900  +
mov eax [ebp+8] +
and eax 1 +
jz loc_100B8E5  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_1035306  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_1001A08 +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+4] 0C0000001h +
mov ecx [ebp+var_10] +
call sub_100BB00  +
mov edx dword_103B4F4 +
mov eax [edx] +
mov ecx dword_103B4F4 +
mov edx [eax+8] +
call edx  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_100B9A0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_100B3F0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_100B9C0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035343  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
add ecx 0E8h +
call sub_1007440  +
mov ecx [ebp+var_10] +
add ecx 0DCh +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 0D8h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 7Ch +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 78h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 74h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 70h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 6Ch +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 68h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 64h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 60h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 54h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
add ecx 38h +
call sub_100BAE0  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
call sub_1014040  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
add ecx 50h +
call sub_100B3F0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_10096C0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1023C70  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_100B410  +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_100BB30  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_100BB50  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035378  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov ecx [eax+98h] +
shr ecx 6 +
and ecx 1 +
jz loc_100BB90  +
jmp loc_100BE0A  +
mov edx [ebp+var_14] +
mov eax [edx+98h] +
or eax 40h +
mov ecx [ebp+var_14] +
mov [ecx+98h] eax +
push 0  +
mov ecx [ebp+var_14] +
add ecx 70h +
call sub_1012320  +
movzx edx al +
test edx edx +
jz loc_100BBDB  +
mov ecx [ebp+var_14] +
add ecx 70h +
call sub_1024680  +
mov [ebp+var_18] eax +
push 0  +
push 0  +
push 1  +
mov eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_18] +
mov edx [ecx] +
mov eax [edx+1Ch] +
call eax  +
mov ecx [ebp+var_14] +
cmp dword ptr [ecx+94h] 0CDCDCDCDh +
jz loc_100BC1C  +
mov edx [ebp+var_14] +
mov eax [edx+94h] +
push eax  +
mov ecx [ebp+var_14] +
add ecx 80h +
push ecx  +
mov ecx [ebp+var_14] +
add ecx 60h +
call sub_1024680  +
push eax  +
call sub_100BE20  +
mov edx [ebp+var_14] +
mov dword ptr [edx+94h] 0CDCDCDCDh +
mov ecx [ebp+var_14] +
add ecx 64h +
call sub_1024680  +
test eax eax +
jz loc_100BC8D  +
mov ecx [ebp+var_14] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_1C] eax +
mov eax [ebp+var_14] +
mov ecx [eax+9Ch] +
push ecx  +
mov edx [ebp+var_1C] +
push edx  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
mov edx [ecx+50h] +
call edx  +
mov ecx [ebp+var_14] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_20] eax +
push 1  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+var_20] +
mov edx [ecx] +
mov eax [edx+18h] +
call eax  +
mov ecx [ebp+var_14] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_24] eax +
push 0  +
mov ecx [ebp+var_24] +
push ecx  +
mov edx [ebp+var_24] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
push 0  +
mov ecx [ebp+var_14] +
add ecx 60h +
call sub_1012320  +
movzx edx al +
test edx edx +
jz loc_100BD14  +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
add ecx 60h +
call sub_1024680  +
mov [ebp+var_28] eax +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
push offset dword_1001B64  +
mov eax [ebp+var_28] +
push eax  +
mov ecx [ebp+var_28] +
mov edx [ecx] +
mov eax [edx] +
call eax  +
push 0  +
lea ecx [ebp+var_10] +
call sub_1012320  +
movzx ecx al +
test ecx ecx +
jz loc_100BD05  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_2C] eax +
push 0  +
mov edx [ebp+var_2C] +
push edx  +
mov eax [ebp+var_2C] +
mov ecx [eax] +
mov edx [ecx+0Ch] +
call edx  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov ecx [ebp+var_14] +
add ecx 70h +
call sub_100BEE0  +
mov eax [ebp+var_14] +
mov dword ptr [eax+90h] 0 +
mov ecx [ebp+var_14] +
add ecx 74h +
call sub_100BEE0  +
mov ecx [ebp+var_14] +
add ecx 64h +
call sub_100BEE0  +
mov ecx [ebp+var_14] +
add ecx 60h +
call sub_100BEE0  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_100BEE0  +
mov ecx [ebp+var_14] +
add ecx 68h +
call sub_100BEE0  +
mov ecx [ebp+var_14] +
mov edx [ecx+98h] +
and edx 0FFFFFFFEh +
mov eax [ebp+var_14] +
mov [eax+98h] edx +
mov ecx [ebp+var_14] +
mov edx [ecx+98h] +
and edx 0FFFFFFF7h +
mov eax [ebp+var_14] +
mov [eax+98h] edx +
mov ecx [ebp+var_14] +
mov edx [ecx+98h] +
and edx 0FFFFFFFEh +
mov eax [ebp+var_14] +
mov [eax+98h] edx +
mov ecx [ebp+var_14] +
mov edx [ecx+98h] +
and edx 0FFFFFFFDh +
mov eax [ebp+var_14] +
mov [eax+98h] edx +
mov ecx [ebp+var_14] +
mov edx [ecx+98h] +
and edx 0FFFFFFEFh +
mov eax [ebp+var_14] +
mov [eax+98h] edx +
mov ecx [ebp+var_14] +
mov edx [ecx+98h] +
and edx 0FFFFFFBFh +
mov eax [ebp+var_14] +
mov [eax+98h] edx +
mov ecx [ebp+var_14] +
cmp dword ptr [ecx+0C4h] 0 +
jz loc_100BE0A  +
mov edx [ebp+var_14] +
mov eax [edx+0C4h] +
push eax  +
call ds:DestroyAcceleratorTable  +
mov ecx [ebp+var_14] +
mov dword ptr [ecx+0C4h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
cmp [ebp+arg_0] 0 +
jnz loc_100BE38  +
mov eax 80070057h +
jmp loc_100BED4  +
lea ecx [ebp+var_C] +
call sub_1012550  +
lea ecx [ebp+var_4] +
call sub_1012550  +
lea ecx [ebp+var_C] +
call sub_10114A0  +
push eax  +
push offset dword_1001BC4  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx] +
call eax  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jl loc_100BE95  +
lea ecx [ebp+var_C] +
call sub_1024680  +
mov [ebp+var_14] eax +
lea ecx [ebp+var_4] +
call sub_10114A0  +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+var_14] +
push edx  +
mov eax [ebp+var_14] +
mov ecx [eax] +
mov edx [ecx+10h] +
call edx  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jl loc_100BEBB  +
lea ecx [ebp+var_4] +
call sub_1024680  +
mov [ebp+var_18] eax +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+var_18] +
push ecx  +
mov edx [ebp+var_18] +
mov eax [edx] +
mov ecx [eax+18h] +
call ecx  +
mov [ebp+var_8] eax +
mov edx [ebp+var_8] +
mov [ebp+var_10] edx +
lea ecx [ebp+var_4] +
call sub_1023C70  +
lea ecx [ebp+var_C] +
call sub_1023C70  +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jz loc_100BF10  +
mov edx [ebp+var_8] +
mov dword ptr [edx] 0 +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
push edx  +
mov eax [ecx+8] +
call eax  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_100BFC0  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1001E00 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] offset off_1001DD4 +
mov edx [ebp+var_4] +
mov dword ptr [edx+28h] offset off_1001DB0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+2Ch] offset off_1001D38 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+30h] offset off_1001D10 +
mov edx [ebp+var_4] +
mov dword ptr [edx+34h] offset off_1001CF8 +
mov eax [ebp+var_4] +
mov dword ptr [eax+38h] offset off_1001CE0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+40h] offset off_1001CD0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+44h] offset off_1001CB0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+48h] offset off_1001C68 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+4Ch] offset off_1001BD8 +
mov edx [ebp+var_4] +
mov eax [ebp+arg_0] +
mov [edx+50h] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_10353AB  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
add ecx 50h +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
call sub_1024C10  +
mov ecx [ebp+var_10] +
add ecx 24h +
call sub_1011290  +
mov ecx [ebp+var_10] +
add ecx 28h +
call sub_1023950  +
mov ecx [ebp+var_10] +
add ecx 2Ch +
call sub_10112E0  +
mov ecx [ebp+var_10] +
add ecx 30h +
call sub_1023950  +
mov ecx [ebp+var_10] +
add ecx 34h +
call sub_1011290  +
mov ecx [ebp+var_10] +
add ecx 38h +
call sub_10112B0  +
mov ecx [ebp+var_10] +
add ecx 40h +
call sub_1023950  +
mov ecx [ebp+var_10] +
add ecx 44h +
call sub_1023950  +
mov ecx [ebp+var_10] +
add ecx 48h +
call sub_1023950  +
mov ecx [ebp+var_10] +
add ecx 4Ch +
call sub_10112E0  +
mov ecx [ebp+var_10] +
add ecx 54h +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 60h +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 64h +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 68h +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 6Ch +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 70h +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 74h +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 78h +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 7Ch +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 0D8h +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 0DCh +
call sub_1012550  +
mov ecx [ebp+var_10] +
add ecx 0E8h +
call sub_100B430  +
mov eax [ebp+var_10] +
mov ecx [eax+98h] +
and ecx 0FFFFFFFEh +
mov edx [ebp+var_10] +
mov [edx+98h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+98h] +
and ecx 0FFFFFFFDh +
mov edx [ebp+var_10] +
mov [edx+98h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+98h] +
and ecx 0FFFFFFFBh +
mov edx [ebp+var_10] +
mov [edx+98h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+98h] +
and ecx 0FFFFFFF7h +
mov edx [ebp+var_10] +
mov [edx+98h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+98h] +
and ecx 0FFFFFFEFh +
mov edx [ebp+var_10] +
mov [edx+98h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+98h] +
and ecx 0FFFFFFDFh +
mov edx [ebp+var_10] +
mov [edx+98h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+0C8h] +
or ecx 1 +
mov edx [ebp+var_10] +
mov [edx+0C8h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+0C8h] +
or ecx 2 +
mov edx [ebp+var_10] +
mov [edx+0C8h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+0C8h] +
and ecx 0FFFFFFFBh +
mov edx [ebp+var_10] +
mov [edx+0C8h] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax+0CCh] 0 +
push 8  +
call ds:GetSysColor  +
mov ecx [ebp+var_10] +
mov [ecx+0D0h] eax +
mov edx [ebp+var_10] +
mov dword ptr [edx+0D4h] 400h +
mov eax [ebp+var_10] +
mov ecx [eax+0C8h] +
or ecx 8 +
mov edx [ebp+var_10] +
mov [edx+0C8h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+98h] +
and ecx 0FFFFFFBFh +
mov edx [ebp+var_10] +
mov [edx+98h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+0C8h] +
and ecx 0FFFFFFEFh +
mov edx [ebp+var_10] +
mov [edx+0C8h] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax+94h] 0CDCDCDCDh +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+0E0h] 4 +
mov edx [ebp+var_10] +
mov dword ptr [edx+0E4h] 0 +
mov eax [ebp+var_10] +
mov ecx [eax+0C8h] +
or ecx 20h +
mov edx [ebp+var_10] +
mov [edx+0C8h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+0C8h] +
and ecx 0FFFFFFBFh +
mov edx [ebp+var_10] +
mov [edx+0C8h] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax+58h] 0 +
mov ecx [ebp+var_10] +
mov byte ptr [ecx+5Ch] 1 +
mov edx [ebp+var_10] +
mov dword ptr [edx+0C4h] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp-4] ecx +
mov eax [ebp-4] +
mov edx [eax] +
mov ecx [ebp-4] +
mov eax [edx+10h] +
call eax  +
mov [ebp-8] eax +
mov ecx [ebp-8] +
mov edx [ecx] +
mov eax [ebp-8] +
push eax  +
mov ecx [edx+8] +
call ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-18h] eax +
cmp dword ptr [ebp-18h] 0 +
jz loc_100C323  +
jmp loc_100CBD5  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_100C35D  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-14h] +
call sub_100CD40  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C35D  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_100C397  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-14h] +
call sub_100D3B0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C397  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 5 +
jnz loc_100C3D1  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D0C0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C3D1  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 21h +
jnz loc_100C40B  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100CD80  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C40B  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 7 +
jnz loc_100C445  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100CEC0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C445  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 8 +
jnz loc_100C47F  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D080  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C47F  +
mov eax 1 +
jmp loc_100CBD7  +
mov edx [ebp-14h] +
mov eax [edx+98h] +
shr eax 3 +
and eax 1 +
jz loc_100C79F  +
cmp dword ptr [ebp+0Ch] 200h +
jb loc_100C79F  +
cmp dword ptr [ebp+0Ch] 20Eh +
ja loc_100C79F  +
mov ecx [ebp-14h] +
mov edx [ecx+98h] +
shr edx 4 +
and edx 1 +
neg edx  +
sbb edx edx +
and edx 3 +
mov [ebp-8] edx +
jnz loc_100C533  +
push 0  +
mov ecx [ebp-14h] +
add ecx 70h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100C533  +
mov ecx [ebp+14h] +
and ecx 0FFFFh +
movsx edx cx +
mov [ebp-10h] edx +
mov eax [ebp+14h] +
shr eax 10h +
and eax 0FFFFh +
movsx ecx ax +
mov [ebp-0Ch] ecx +
mov ecx [ebp-14h] +
add ecx 70h +
call sub_1024680  +
mov [ebp-1Ch] eax +
lea edx [ebp-8] +
push edx  +
push 0  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp-10h] +
push ecx  +
mov edx [ebp-14h] +
add edx 0B4h +
push edx  +
push 1  +
mov eax [ebp-1Ch] +
push eax  +
mov ecx [ebp-1Ch] +
mov edx [ecx] +
mov eax [edx+30h] +
call eax  +
cmp dword ptr [ebp-8] 3 +
jnz loc_100C79F  +
cmp dword ptr [ebp+0Ch] 200h +
jnz loc_100C57A  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C57A  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 202h +
jnz loc_100C5B7  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C5B7  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 205h +
jnz loc_100C5F4  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C5F4  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 208h +
jnz loc_100C631  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C631  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 201h +
jnz loc_100C66E  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C66E  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 204h +
jnz loc_100C6AB  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C6AB  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 207h +
jnz loc_100C6E8  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C6E8  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 203h +
jnz loc_100C725  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C725  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 206h +
jnz loc_100C762  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C762  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 209h +
jnz loc_100C79F  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D320  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C79F  +
mov eax 1 +
jmp loc_100CBD7  +
mov edx [ebp-14h] +
mov eax [edx+98h] +
shr eax 3 +
and eax 1 +
mov ecx [ebp-14h] +
mov edx [ecx+98h] +
shr edx 5 +
and edx 1 +
and eax edx +
jz loc_100CAA4  +
cmp dword ptr [ebp+0Ch] 100h +
jnz loc_100C802  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C802  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 101h +
jnz loc_100C83F  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C83F  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 102h +
jnz loc_100C87C  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C87C  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 103h +
jnz loc_100C8B9  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C8B9  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 104h +
jnz loc_100C8F6  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C8F6  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 105h +
jnz loc_100C933  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C933  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 107h +
jnz loc_100C970  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C970  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 53h +
jnz loc_100C9AA  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C9AA  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 1Fh +
jnz loc_100C9E4  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100C9E4  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 286h +
jnz loc_100CA21  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100CA21  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 209h +
jnz loc_100CA5E  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100CA5E  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 281h +
jb loc_100CAA4  +
cmp dword ptr [ebp+0Ch] 291h +
ja loc_100CAA4  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D280  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100CAA4  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 2 +
jnz loc_100CADE  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-14h] +
call sub_100D220  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100CADE  +
mov eax 1 +
jmp loc_100CBD7  +
mov edx [ebp-14h] +
mov eax [edx+0C8h] +
shr eax 3 +
and eax 1 +
jz loc_100CB23  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-14h] +
call sub_1010F80  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100CB23  +
mov eax 1 +
jmp loc_100CBD7  +
mov eax [ebp+0Ch] +
cmp eax Msg +
jnz loc_100CB5F  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-14h] +
call sub_100CCC0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100CB5F  +
mov eax 1 +
jmp loc_100CBD7  +
mov eax [ebp+0Ch] +
cmp eax dword_103B50C +
jnz loc_100CB9B  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-14h] +
call sub_100CD00  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100CB9B  +
mov eax 1 +
jmp loc_100CBD7  +
cmp dword ptr [ebp+0Ch] 37Fh +
jnz loc_100CBD5  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-14h] +
call sub_100CBF0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_100CBD5  +
mov eax 1 +
jmp loc_100CBD7  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10353D8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_20] ecx +
mov eax [ebp+arg_8] +
mov [ebp+var_10] eax +
mov ecx [ebp+var_20] +
add ecx 60h +
call sub_1024680  +
push eax  +
lea ecx [ebp+var_14] +
call sub_10122E0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_1024680  +
test eax eax +
jz loc_100CC83  +
lea ecx [ebp+var_14] +
call sub_1024680  +
mov [ebp+var_24] eax +
mov ecx [ebp+var_10] +
push ecx  +
mov edx [ebp+var_24] +
push edx  +
mov eax [ebp+var_24] +
mov ecx [eax] +
mov edx [ecx+14h] +
call edx  +
test eax eax +
jnz loc_100CC83  +
mov [ebp+var_18] 1 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1025550  +
mov eax [ebp+var_18] +
jmp loc_100CC9C  +
mov [ebp+var_1C] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1025550  +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov edx [eax] +
mov ecx [ebp+var_8] +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [ebp+var_4] +
push eax  +
mov ecx [edx+4] +
call ecx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
add ecx 60h +
call sub_1024680  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_100CD2D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
push edx  +
mov eax [ecx+4] +
call eax  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
mov ecx [ebp+var_4] +
add ecx 70h +
call sub_1012890  +
movzx eax al +
test eax eax +
jz loc_100CD66  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035408  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_18] +
mov edx [ecx+0A0h] +
and edx 4000h +
jz loc_100CE89  +
push 0  +
mov ecx [ebp+var_18] +
add ecx 64h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100CE87  +
mov ecx [ebp+var_18] +
mov edx [ecx+98h] +
and edx 1 +
jnz loc_100CE87  +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_18] +
mov edx [eax] +
mov ecx [ebp+var_18] +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_1C] eax +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
push offset dword_1001AF4  +
mov ecx [ebp+var_1C] +
push ecx  +
mov edx [ebp+var_1C] +
mov eax [edx] +
mov ecx [eax] +
call ecx  +
push 0  +
lea ecx [ebp+var_10] +
call sub_1012320  +
movzx edx al +
test edx edx +
jz loc_100CE78  +
mov ecx [ebp+var_18] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_20] eax +
mov eax [ebp+var_18] +
add eax 0B4h +
push eax  +
mov ecx [ebp+var_18] +
mov edx [ecx+4] +
push edx  +
push 0  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
push 0  +
push 0FFFFFFFBh  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+var_20] +
mov edx [ecx] +
mov eax [edx+2Ch] +
call eax  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
jmp loc_100CE9B  +
lea ecx [ebp+var_14] +
push ecx  +
push 0  +
push 0  +
push 0  +
mov ecx [ebp+var_18] +
call sub_100CEC0  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov ecx [eax+98h] +
or ecx 20h +
mov edx [ebp+var_14] +
mov [edx+98h] ecx +
mov eax [ebp+var_14] +
mov ecx [eax+98h] +
shr ecx 6 +
and ecx 1 +
jnz loc_100D022  +
push 0  +
mov ecx [ebp+var_14] +
add ecx 64h +
call sub_1012320  +
movzx edx al +
test edx edx +
jz loc_100CFD6  +
mov eax [ebp+var_14] +
mov ecx [eax+98h] +
shr ecx 1 +
and ecx 1 +
jnz loc_100CFD6  +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov edx [ebp+var_14] +
mov eax [edx] +
mov ecx [ebp+var_14] +
mov edx [eax+10h] +
call edx  +
mov [ebp+var_18] eax +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
push offset dword_1001AF4  +
mov eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_18] +
mov edx [ecx] +
mov eax [edx] +
call eax  +
push 0  +
lea ecx [ebp+var_10] +
call sub_1012320  +
movzx ecx al +
test ecx ecx +
jz loc_100CFC7  +
mov ecx [ebp+var_14] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_1C] eax +
mov edx [ebp+var_14] +
add edx 0B4h +
push edx  +
mov eax [ebp+var_14] +
mov ecx [eax+4] +
push ecx  +
push 0  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
push 0  +
push 0FFFFFFFCh  +
mov edx [ebp+var_1C] +
push edx  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
mov edx [ecx+2Ch] +
call edx  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov eax [ebp+var_14] +
mov ecx [eax+98h] +
shr ecx 3 +
and ecx 1 +
jz loc_100CFF6  +
mov edx [ebp+var_14] +
mov eax [edx+4] +
push eax  +
call ds:SetFocus  +
jmp loc_100D022  +
call ds:GetFocus  +
push eax  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_100D050  +
test eax eax +
jnz loc_100D022  +
push 5  +
mov ecx [ebp+var_14] +
mov edx [ecx+4] +
push edx  +
call ds:GetWindow  +
push eax  +
call ds:SetFocus  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+hWnd] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:IsChild  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+98h] +
and ecx 0FFFFFFDFh +
mov edx [ebp+var_4] +
mov [edx+98h] ecx +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_8] +
and eax 0FFFFh +
movsx ecx ax +
mov [ebp+var_4] ecx +
mov edx [ebp+arg_8] +
shr edx 10h +
and edx 0FFFFh +
movsx eax dx +
mov [ebp+var_8] eax +
mov ecx [ebp+var_C] +
mov edx [ecx+0B4h] +
add edx [ebp+var_4] +
mov eax [ebp+var_C] +
mov [eax+0BCh] edx +
mov ecx [ebp+var_C] +
mov edx [ecx+0B8h] +
add edx [ebp+var_8] +
mov eax [ebp+var_C] +
mov [eax+0C0h] edx +
mov ecx [ebp+var_C] +
mov edx [ebp+var_C] +
mov eax [ecx+0BCh] +
sub eax [edx+0B4h] +
mov ecx [ebp+var_C] +
mov [ecx+0ACh] eax +
mov edx [ebp+var_C] +
mov eax [ebp+var_C] +
mov ecx [edx+0C0h] +
sub ecx [eax+0B8h] +
mov edx [ebp+var_C] +
mov [edx+0B0h] ecx +
mov eax [ebp+var_C] +
add eax 0A4h +
push eax  +
mov ecx [ebp+var_C] +
add ecx 0ACh +
push ecx  +
call sub_10113E0  +
mov ecx [ebp+var_C] +
add ecx 64h +
call sub_1024680  +
test eax eax +
jz loc_100D19A  +
mov ecx [ebp+var_C] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_10] eax +
mov edx [ebp+var_C] +
add edx 0A4h +
push edx  +
push 1  +
mov eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_10] +
mov edx [ecx] +
mov eax [edx+44h] +
call eax  +
mov ecx [ebp+var_C] +
add ecx 74h +
call sub_1024680  +
test eax eax +
jz loc_100D1D9  +
mov ecx [ebp+var_C] +
add ecx 74h +
call sub_1024680  +
mov [ebp+var_14] eax +
mov ecx [ebp+var_C] +
add ecx 0B4h +
push ecx  +
mov edx [ebp+var_C] +
add edx 0B4h +
push edx  +
mov eax [ebp+var_14] +
push eax  +
mov ecx [ebp+var_14] +
mov edx [ecx] +
mov eax [edx+1Ch] +
call eax  +
mov ecx [ebp+var_C] +
mov edx [ecx+98h] +
shr edx 3 +
and edx 1 +
jz loc_100D200  +
push 1  +
push 0  +
mov eax [ebp+var_C] +
add eax 2Ch +
mov ecx [ebp+var_C] +
mov edx [ecx+2Ch] +
push eax  +
mov eax [edx+64h] +
call eax  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov edx [eax] +
mov ecx [ebp+var_4] +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
mov edx [ecx] +
mov eax [ebp+var_8] +
push eax  +
mov ecx [edx+4] +
call ecx  +
mov edx [ebp+lParam] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
mov ecx [ebp+Msg] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_1011530  +
mov ecx [ebp+var_4] +
call sub_100BB50  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_C] ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_8] 1 +
mov eax [ebp+var_C] +
mov ecx [eax+98h] +
and ecx 1 +
jz loc_100D2F6  +
mov edx [ebp+var_C] +
mov eax [edx+98h] +
shr eax 3 +
and eax 1 +
jz loc_100D2F6  +
mov ecx [ebp+var_C] +
add ecx 74h +
call sub_1024680  +
test eax eax +
jz loc_100D2F6  +
mov ecx [ebp+var_C] +
add ecx 74h +
call sub_1024680  +
mov [ebp+var_10] eax +
lea ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_10] +
push edx  +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edx [ecx+24h] +
call edx  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 1 +
jnz loc_100D305  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax+98h] +
and ecx 1 +
jz loc_100D38C  +
mov edx [ebp+var_8] +
mov eax [edx+98h] +
shr eax 3 +
and eax 1 +
jz loc_100D38C  +
mov ecx [ebp+var_8] +
add ecx 74h +
call sub_1024680  +
test eax eax +
jz loc_100D38C  +
mov ecx [ebp+var_8] +
add ecx 74h +
call sub_1024680  +
mov [ebp+var_C] eax +
lea ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_C] +
push edx  +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov edx [ecx+24h] +
call edx  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0CCh +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_C8] ecx +
push 0  +
mov ecx [ebp+var_C8] +
add ecx 70h +
call sub_1012890  +
movzx eax al +
test eax eax +
jz loc_100D472  +
lea ecx [ebp+Paint] +
push ecx  +
mov edx [ebp+var_C8] +
mov eax [edx+4] +
push eax  +
call ds:BeginPaint  +
mov [ebp+hDC] eax +
cmp [ebp+hDC] 0 +
jnz loc_100D40A  +
xor eax eax +
jmp loc_100D68F  +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_C8] +
add ecx 4 +
call sub_100D6B0  +
mov edx [ebp+var_C8] +
mov eax [edx+0CCh] +
push eax  +
call ds:CreateSolidBrush  +
mov [ebp+hbr] eax +
cmp [ebp+hbr] 0 +
jz loc_100D454  +
mov ecx [ebp+hbr] +
push ecx  +
lea edx [ebp+Rect] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:FillRect  +
mov ecx [ebp+hbr] +
push ecx  +
call ds:DeleteObject  +
lea edx [ebp+Paint] +
push edx  +
mov eax [ebp+var_C8] +
mov ecx [eax+4] +
push ecx  +
call ds:EndPaint  +
mov eax 1 +
jmp loc_100D68F  +
mov ecx [ebp+var_C8] +
add ecx 70h +
call sub_1024680  +
test eax eax +
jz loc_100D67D  +
mov edx [ebp+var_C8] +
mov eax [edx+98h] +
shr eax 3 +
and eax 1 +
jz loc_100D67D  +
lea ecx [ebp+var_A0] +
push ecx  +
mov edx [ebp+var_C8] +
mov eax [edx+4] +
push eax  +
call ds:BeginPaint  +
mov [ebp+var_B8] eax +
cmp [ebp+var_B8] 0 +
jnz loc_100D4CD  +
xor eax eax +
jmp loc_100D68F  +
lea ecx [ebp+var_B4] +
push ecx  +
mov ecx [ebp+var_C8] +
add ecx 4 +
call sub_100D6B0  +
mov edx [ebp+var_A8] +
sub edx [ebp+var_B0] +
push edx  +
mov eax [ebp+var_AC] +
sub eax [ebp+var_B4] +
push eax  +
mov ecx [ebp+var_B8] +
push ecx  +
call ds:CreateCompatibleBitmap  +
mov [ebp+var_A4] eax +
cmp [ebp+var_A4] 0 +
jz loc_100D664  +
mov edx [ebp+var_B8] +
push edx  +
call ds:CreateCompatibleDC  +
mov [ebp+var_BC] eax +
cmp [ebp+var_BC] 0 +
jz loc_100D657  +
mov eax [ebp+var_A4] +
push eax  +
mov ecx [ebp+var_BC] +
push ecx  +
call ds:SelectObject  +
mov [ebp+var_C0] eax +
cmp [ebp+var_C0] 0 +
jz loc_100D64A  +
mov edx [ebp+var_C8] +
mov eax [edx+0CCh] +
push eax  +
call ds:CreateSolidBrush  +
mov [ebp+var_C4] eax +
cmp [ebp+var_C4] 0 +
jz loc_100D636  +
mov ecx [ebp+var_C4] +
push ecx  +
lea edx [ebp+var_B4] +
push edx  +
mov eax [ebp+var_BC] +
push eax  +
call ds:FillRect  +
mov ecx [ebp+var_C4] +
push ecx  +
call ds:DeleteObject  +
mov ecx [ebp+var_C8] +
add ecx 70h +
call sub_1024680  +
mov [ebp+var_CC] eax +
push 0  +
push 0  +
mov edx [ebp+var_C8] +
add edx 0B4h +
push edx  +
mov eax [ebp+var_C8] +
add eax 0B4h +
push eax  +
mov ecx [ebp+var_BC] +
push ecx  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 1  +
mov edx [ebp+var_CC] +
push edx  +
mov eax [ebp+var_CC] +
mov ecx [eax] +
mov edx [ecx+0Ch] +
call edx  +
push 0CC0020h  +
push 0  +
push 0  +
mov eax [ebp+var_BC] +
push eax  +
mov ecx [ebp+var_A8] +
push ecx  +
mov edx [ebp+var_AC] +
push edx  +
push 0  +
push 0  +
mov eax [ebp+var_B8] +
push eax  +
call ds:BitBlt  +
mov ecx [ebp+var_C0] +
push ecx  +
mov edx [ebp+var_BC] +
push edx  +
call ds:SelectObject  +
mov eax [ebp+var_BC] +
push eax  +
call ds:DeleteDC  +
mov ecx [ebp+var_A4] +
push ecx  +
call ds:DeleteObject  +
lea edx [ebp+var_A0] +
push edx  +
mov eax [ebp+var_C8] +
mov ecx [eax+4] +
push ecx  +
call ds:EndPaint  +
jmp loc_100D68A  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
xor eax eax +
jmp loc_100D68F  +
mov eax 1 +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpRect] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:GetClientRect  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
lea ecx [ebp-4] +
call sub_1012550  +
push 0  +
push 0  +
push offset dword_100295C  +
lea ecx [ebp-4] +
call sub_10114A0  +
push eax  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov edx [ecx] +
push eax  +
mov eax [edx+28h] +
call eax  +
mov [ebp-8] eax +
lea ecx [ebp-4] +
call sub_1023C70  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
mov eax [ebp+20h] +
push eax  +
mov ecx [ebp+1Ch] +
push ecx  +
mov edx [ebp+18h] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov edx [ecx] +
push eax  +
mov eax [edx+28h] +
call eax  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-8] 1 +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_100BB50  +
mov byte ptr [ebp-1] 0 +
mov eax [ebp+8] +
cmp dword ptr [eax-20h] 0 +
jz loc_100D7D1  +
mov ecx [ebp+8] +
mov edx [ecx-20h] +
cmp edx [ebp+10h] +
jz loc_100D7D1  +
push 507h  +
push 0  +
push 0  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100D870  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1010F30  +
mov eax [ebp+10h] +
push eax  +
call ds:IsWindow  +
test eax eax +
jz loc_100D854  +
mov ecx [ebp+8] +
mov edx [ecx-20h] +
cmp edx [ebp+10h] +
jz loc_100D7FD  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1010EE0  +
mov byte ptr [ebp-1] 1 +
push 0  +
push 1  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1010870  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jge loc_100D854  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_100BB50  +
mov edx [ebp+8] +
cmp dword ptr [edx-20h] 0 +
jz loc_100D854  +
push 507h  +
push 0  +
push 0  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100D870  +
movzx eax byte ptr [ebp-1] +
test eax eax +
jz loc_100D854  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1010F30  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+flags] +
push eax  +
mov ecx [ebp+hrgnUpdate] +
push ecx  +
mov edx [ebp+lprcUpdate] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:RedrawWindow  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 80004003h +
cmp dword ptr [ebp+10h] 0 +
jz loc_100D8FC  +
mov ecx [ebp+8] +
add ecx 3Ch +
call sub_1024680  +
test eax eax +
jz loc_100D8EC  +
mov ecx [ebp+8] +
add ecx 3Ch +
call sub_1024680  +
mov [ebp-8] eax +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx] +
call edx  +
mov [ebp-4] eax +
jmp loc_100D8FC  +
mov eax [ebp+10h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-4] 80040004h +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 54h +
call sub_10122A0  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_100D93F  +
xor eax eax +
jmp loc_100D978  +
cmp [ebp+arg_4] 0 +
jz loc_100D953  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ecx+4] +
call eax  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0 +
jz loc_100D96D  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [eax] +
push edx  +
mov ecx [eax+8] +
call ecx  +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [edx] eax +
mov eax [ebp+arg_4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 58h +
call sub_10122A0  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
lea ecx [ebp-4] +
call sub_1012550  +
mov eax [ebp+18h] +
push eax  +
push 0  +
push offset dword_100295C  +
lea ecx [ebp-4] +
call sub_10114A0  +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
mov edx [ebp+8] +
mov eax [edx] +
push ecx  +
mov ecx [eax+28h] +
call ecx  +
mov [ebp-8] eax +
lea ecx [ebp-4] +
call sub_1023C70  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
cmp dword ptr [ebp+18h] 0 +
jnz loc_100DA28  +
mov eax 80004003h +
jmp loc_100DEDA  +
mov eax [ebp+18h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-8] 1 +
mov byte ptr [ebp-1] 0 +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_100BB50  +
mov ecx [ebp+8] +
cmp dword ptr [ecx-20h] 0 +
jz loc_100DA7A  +
mov edx [ebp+8] +
mov eax [edx-20h] +
cmp eax [ebp+10h] +
jz loc_100DA7A  +
push 507h  +
push 0  +
push 0  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100D870  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1010F30  +
mov ecx [ebp+10h] +
push ecx  +
call ds:IsWindow  +
test eax eax +
jz loc_100DED7  +
mov edx [ebp+8] +
mov eax [edx-20h] +
cmp eax [ebp+10h] +
jz loc_100DAAA  +
mov ecx [ebp+10h] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1010EE0  +
mov byte ptr [ebp-1] 1 +
mov edx [ebp+8] +
cmp dword ptr [edx+0A8h] 0 +
jnz loc_100DAE9  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100E120  +
test eax eax +
jz loc_100DAD8  +
push 0Fh  +
call ds:GetSysColor  +
mov ecx [ebp+8] +
mov [ecx+0A8h] eax +
jmp loc_100DAE9  +
push 5  +
call ds:GetSysColor  +
mov edx [ebp+8] +
mov [edx+0A8h] eax +
mov byte ptr [ebp-9] 0 +
mov eax [ebp+24h] +
push eax  +
lea ecx [ebp-9] +
push ecx  +
mov edx [ebp+18h] +
push edx  +
push offset dword_10019C4  +
mov eax [ebp+0Ch] +
push eax  +
call sub_100E1C0  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jl loc_100DB2A  +
mov ecx [ebp+14h] +
push ecx  +
push 0  +
mov edx [ebp+18h] +
mov eax [edx] +
push eax  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1010870  +
mov [ebp-8] eax +
mov ecx [ebp+1Ch] +
mov edx [ebp+8] +
add edx 5Ch +
mov eax [ecx] +
mov [edx] eax +
mov eax [ecx+4] +
mov [edx+4] eax +
mov eax [ecx+8] +
mov [edx+8] eax +
mov ecx [ecx+0Ch] +
mov [edx+0Ch] ecx +
cmp dword ptr [ebp-8] 0 +
jl loc_100DB7A  +
mov edx [ebp+18h] +
cmp dword ptr [edx] 0 +
jz loc_100DB7A  +
cmp dword ptr [ebp+20h] 0 +
jz loc_100DB7A  +
mov eax [ebp+8] +
add eax 70h +
push eax  +
mov ecx [ebp+8] +
add ecx 5Ch +
push ecx  +
mov edx [ebp+20h] +
push edx  +
mov eax [ebp+18h] +
mov ecx [eax] +
push ecx  +
call sub_100DFC0  +
cmp dword ptr [ebp-8] 0 +
jl loc_100DE7C  +
movzx edx byte ptr [ebp-9] +
test edx edx +
jz loc_100DE7C  +
mov eax [ebp+18h] +
cmp dword ptr [eax] 0 +
jz loc_100DE7C  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100E090  +
and eax 300000h +
jnz loc_100DBC5  +
mov ecx [ebp+8] +
mov edx [ecx+0BCh] +
or edx 8 +
mov eax [ebp+8] +
mov [eax+0BCh] edx +
jmp loc_100DC01  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100E090  +
mov [ebp-14h] eax +
mov ecx [ebp-14h] +
and ecx 0FFCFFFFFh +
push ecx  +
push 0FFFFFFF0h  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100E0B0  +
push 37h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100E0E0  +
mov edx [ebp+18h] +
mov eax [edx] +
push eax  +
lea ecx [ebp-10h] +
call sub_1024620  +
mov ecx [ebp+0Ch] +
movzx edx word ptr [ecx] +
cmp edx 4Dh +
jz loc_100DC29  +
mov eax [ebp+0Ch] +
movzx ecx word ptr [eax] +
cmp ecx 6Dh +
jnz loc_100DDC0  +
mov edx [ebp+0Ch] +
movzx eax word ptr [edx+2] +
cmp eax 53h +
jz loc_100DC45  +
mov ecx [ebp+0Ch] +
movzx edx word ptr [ecx+2] +
cmp edx 73h +
jnz loc_100DDC0  +
mov eax [ebp+0Ch] +
movzx ecx word ptr [eax+4] +
cmp ecx 48h +
jz loc_100DC61  +
mov edx [ebp+0Ch] +
movzx eax word ptr [edx+4] +
cmp eax 68h +
jnz loc_100DDC0  +
mov ecx [ebp+0Ch] +
movzx edx word ptr [ecx+6] +
cmp edx 54h +
jz loc_100DC7D  +
mov eax [ebp+0Ch] +
movzx ecx word ptr [eax+6] +
cmp ecx 74h +
jnz loc_100DDC0  +
mov edx [ebp+0Ch] +
movzx eax word ptr [edx+8] +
cmp eax 4Dh +
jz loc_100DC99  +
mov ecx [ebp+0Ch] +
movzx edx word ptr [ecx+8] +
cmp edx 6Dh +
jnz loc_100DDC0  +
mov eax [ebp+0Ch] +
movzx ecx word ptr [eax+0Ah] +
cmp ecx 4Ch +
jz loc_100DCB5  +
mov edx [ebp+0Ch] +
movzx eax word ptr [edx+0Ah] +
cmp eax 6Ch +
jnz loc_100DDC0  +
mov ecx [ebp+0Ch] +
movzx edx word ptr [ecx+0Ch] +
cmp edx 3Ah +
jnz loc_100DDC0  +
mov eax [ebp+0Ch] +
push eax  +
call sub_100DEF0  +
lea ecx [eax+eax-0Eh] +
mov [ebp-1Ch] ecx +
mov edx [ebp-1Ch] +
push edx  +
push 42h  +
call ds:GlobalAlloc  +
mov [ebp-18h] eax +
cmp dword ptr [ebp-18h] 0 +
jz loc_100DDB4  +
lea ecx [ebp-20h] +
call sub_1012550  +
mov eax [ebp-18h] +
push eax  +
call ds:GlobalLock  +
mov [ebp-24h] eax +
mov ecx [ebp-1Ch] +
push ecx  +
mov edx [ebp+0Ch] +
add edx 0Eh +
push edx  +
mov eax [ebp-1Ch] +
push eax  +
mov ecx [ebp-24h] +
push ecx  +
call sub_1009C20  +
add esp 10h +
mov edx [ebp-18h] +
push edx  +
call ds:GlobalUnlock  +
lea ecx [ebp-20h] +
call sub_10114A0  +
push eax  +
push 1  +
mov eax [ebp-18h] +
push eax  +
call ds:CreateStreamOnHGlobal  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jl loc_100DDAA  +
lea ecx [ebp-28h] +
call sub_1012550  +
lea ecx [ebp-10h] +
call sub_1024680  +
mov [ebp-54h] eax +
lea ecx [ebp-28h] +
call sub_10114A0  +
push eax  +
push offset dword_1001E24  +
mov ecx [ebp-54h] +
push ecx  +
mov edx [ebp-54h] +
mov eax [edx] +
mov ecx [eax] +
call ecx  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jl loc_100DDA2  +
lea ecx [ebp-28h] +
call sub_1024680  +
mov [ebp-58h] eax +
lea ecx [ebp-20h] +
call sub_1024680  +
push eax  +
mov edx [ebp-58h] +
push edx  +
mov eax [ebp-58h] +
mov ecx [eax] +
mov edx [ecx+14h] +
call edx  +
mov [ebp-8] eax +
lea ecx [ebp-28h] +
call sub_1023C70  +
lea ecx [ebp-20h] +
call sub_1023C70  +
jmp loc_100DDBB  +
mov dword ptr [ebp-8] 8007000Eh +
jmp loc_100DE74  +
lea ecx [ebp-2Ch] +
call sub_1012550  +
lea ecx [ebp-10h] +
call sub_1024680  +
mov [ebp-5Ch] eax +
lea ecx [ebp-2Ch] +
call sub_10114A0  +
push eax  +
push offset dword_1001E14  +
mov eax [ebp-5Ch] +
push eax  +
mov ecx [ebp-5Ch] +
mov edx [ecx] +
mov eax [edx] +
call eax  +
lea ecx [ebp-2Ch] +
call sub_1024680  +
test eax eax +
jz loc_100DE6C  +
lea ecx [ebp-40h] +
call sub_1008C60  +
mov ecx [ebp+0Ch] +
push ecx  +
lea ecx [ebp-50h] +
call sub_100DF10  +
lea ecx [ebp-2Ch] +
call sub_1024680  +
mov [ebp-60h] eax +
push 0FFFFFFFFh  +
mov edx [ebp-60h] +
push edx  +
mov eax [ebp-60h] +
mov ecx [eax] +
mov edx [ecx+0A4h] +
call edx  +
lea ecx [ebp-2Ch] +
call sub_1024680  +
mov [ebp-64h] eax +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-40h] +
push ecx  +
lea edx [ebp-40h] +
push edx  +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-50h] +
push ecx  +
mov edx [ebp-64h] +
push edx  +
mov eax [ebp-64h] +
mov ecx [eax] +
mov edx [ecx+0D0h] +
call edx  +
lea ecx [ebp-50h] +
call sub_1008C80  +
lea ecx [ebp-40h] +
call sub_1008C80  +
lea ecx [ebp-2Ch] +
call sub_1023C70  +
lea ecx [ebp-10h] +
call sub_1023C70  +
cmp dword ptr [ebp-8] 0 +
jl loc_100DE96  +
push 0  +
mov ecx [ebp+8] +
add ecx 3Ch +
call sub_1012890  +
movzx eax al +
test eax eax +
jz loc_100DED7  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_100BB50  +
mov ecx [ebp+8] +
cmp dword ptr [ecx-20h] 0 +
jz loc_100DED7  +
push 507h  +
push 0  +
push 0  +
mov ecx [ebp+8] +
sub ecx 20h +
call sub_100D870  +
cmp dword ptr [ebp-8] 0 +
jge loc_100DED7  +
movzx edx byte ptr [ebp-1] +
test edx edx +
jz loc_100DED7  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1010F30  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpString] +
push eax  +
call ds:lstrlenW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
mov ecx [ebp+var_4] +
mov [ecx] ax +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_4] +
call sub_100DF40  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_1008DF0  +
mov eax 8 +
mov ecx [ebp+var_8] +
mov [ecx] ax +
mov edx [ebp+arg_0] +
push edx  +
call ds:SysAllocString  +
mov ecx [ebp+var_8] +
mov [ecx+8] eax +
mov edx [ebp+var_8] +
cmp dword ptr [edx+8] 0 +
jnz loc_100DFAD  +
cmp [ebp+arg_0] 0 +
jz loc_100DFAD  +
mov eax 0Ah +
mov ecx [ebp+var_8] +
mov [ecx] ax +
mov edx [ebp+var_8] +
mov dword ptr [edx+8] 8007000Eh +
mov [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jnz loc_100DFA9  +
push 8007000Eh  +
call sub_1007F50  +
xor eax eax +
jnz loc_100DF92  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
cmp [ebp+arg_0] 0 +
jnz loc_100DFD8  +
mov eax 80070057h +
jmp loc_100E078  +
lea ecx [ebp+var_C] +
call sub_1012550  +
lea ecx [ebp+var_4] +
call sub_1012550  +
lea ecx [ebp+var_C] +
call sub_10114A0  +
push eax  +
push offset dword_1001BC4  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx] +
call eax  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jl loc_100E035  +
lea ecx [ebp+var_C] +
call sub_1024680  +
mov [ebp+var_14] eax +
lea ecx [ebp+var_4] +
call sub_10114A0  +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+var_14] +
push edx  +
mov eax [ebp+var_14] +
mov ecx [eax] +
mov edx [ecx+10h] +
call edx  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jl loc_100E05F  +
lea ecx [ebp+var_4] +
call sub_1024680  +
mov [ebp+var_18] eax +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+var_18] +
push edx  +
mov eax [ebp+var_18] +
mov ecx [eax] +
mov edx [ecx+14h] +
call edx  +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
mov [ebp+var_10] eax +
lea ecx [ebp+var_4] +
call sub_1023C70  +
lea ecx [ebp+var_C] +
call sub_1023C70  +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0FFFFFFF0h  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:GetWindowLongW  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+dwNewLong] +
push eax  +
mov ecx [ebp+nIndex] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:SetWindowLongW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+uFlags] +
push eax  +
mov ecx [ebp+cy] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+Y] +
push eax  +
mov ecx [ebp+X] +
push ecx  +
mov edx [ebp+hWndInsertAfter] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SetWindowPos  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_1C] ecx +
push 8  +
lea eax [ebp+String1] +
push eax  +
lea ecx [ebp+var_18] +
push ecx  +
mov ecx [ebp+var_1C] +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:GetClassNameW  +
test eax eax +
jnz loc_100E15D  +
xor eax eax +
jmp loc_100E173  +
push offset String2  +
lea edx [ebp+String1] +
push edx  +
call ds:lstrcmpW  +
neg eax  +
sbb eax eax +
add eax 1 +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:GetParent  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_1007F90  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035468  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_14] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+ppv] 0 +
jnz loc_100E1FA  +
mov eax 80004003h +
jmp loc_100E42A  +
mov eax [ebp+ppv] +
mov dword ptr [eax] 0 +
mov [ebp+var_10] 80004005h +
mov ecx [ebp+arg_C] +
mov byte ptr [ecx] 0 +
cmp [ebp+lpString] 0 +
jz loc_100E220  +
mov edx [ebp+lpString] +
movzx eax word ptr [edx] +
test eax eax +
jnz loc_100E227  +
xor eax eax +
jmp loc_100E42A  +
mov ecx [ebp+lpString] +
movzx edx word ptr [ecx] +
cmp edx 4Dh +
jz loc_100E241  +
mov eax [ebp+lpString] +
movzx ecx word ptr [eax] +
cmp ecx 6Dh +
jnz loc_100E2EE  +
mov edx [ebp+lpString] +
movzx eax word ptr [edx+2] +
cmp eax 53h +
jz loc_100E25D  +
mov ecx [ebp+lpString] +
movzx edx word ptr [ecx+2] +
cmp edx 73h +
jnz loc_100E2EE  +
mov eax [ebp+lpString] +
movzx ecx word ptr [eax+4] +
cmp ecx 48h +
jz loc_100E275  +
mov edx [ebp+lpString] +
movzx eax word ptr [edx+4] +
cmp eax 68h +
jnz loc_100E2EE  +
mov ecx [ebp+lpString] +
movzx edx word ptr [ecx+6] +
cmp edx 54h +
jz loc_100E28D  +
mov eax [ebp+lpString] +
movzx ecx word ptr [eax+6] +
cmp ecx 74h +
jnz loc_100E2EE  +
mov edx [ebp+lpString] +
movzx eax word ptr [edx+8] +
cmp eax 4Dh +
jz loc_100E2A5  +
mov ecx [ebp+lpString] +
movzx edx word ptr [ecx+8] +
cmp edx 6Dh +
jnz loc_100E2EE  +
mov eax [ebp+lpString] +
movzx ecx word ptr [eax+0Ah] +
cmp ecx 4Ch +
jz loc_100E2BD  +
mov edx [ebp+lpString] +
movzx eax word ptr [edx+0Ah] +
cmp eax 6Ch +
jnz loc_100E2EE  +
mov ecx [ebp+lpString] +
movzx edx word ptr [ecx+0Ch] +
cmp edx 3Ah +
jnz loc_100E2EE  +
mov eax [ebp+ppv] +
push eax  +
mov ecx [ebp+riid] +
push ecx  +
push 1  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov [ebp+var_10] eax +
mov edx [ebp+arg_C] +
mov byte ptr [edx] 1 +
jmp loc_100E427  +
push offset dword_1001E64  +
mov eax [ebp+lpString] +
push eax  +
lea ecx [ebp+var_30] +
call sub_1007F90  +
mov [ebp+var_34] eax +
mov ecx [ebp+var_34] +
call sub_1024680  +
push eax  +
call sub_100E450  +
mov [ebp+var_2C] eax +
lea ecx [ebp+var_30] +
call sub_100B410  +
cmp [ebp+var_2C] 0 +
jz loc_100E346  +
mov ecx [ebp+ppv] +
push ecx  +
mov edx [ebp+riid] +
push edx  +
push 1  +
push 0  +
push offset stru_1001E54  +
call ds:CoCreateInstance  +
mov [ebp+var_10] eax +
mov eax [ebp+arg_C] +
mov byte ptr [eax] 1 +
jmp loc_100E427  +
mov ecx [ebp+lpString] +
push ecx  +
call sub_100DEF0  +
cmp eax 0FFh +
jge loc_100E385  +
mov edx [ebp+lpString] +
movzx eax word ptr [edx] +
cmp eax 7Bh +
jnz loc_100E374  +
lea ecx [ebp+rclsid] +
push ecx  +
mov edx [ebp+lpString] +
push edx  +
call ds:CLSIDFromString  +
mov [ebp+var_10] eax +
jmp loc_100E385  +
lea eax [ebp+rclsid] +
push eax  +
mov ecx [ebp+lpString] +
push ecx  +
call ds:CLSIDFromProgID  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jl loc_100E427  +
mov edx [ebp+arg_10] +
push edx  +
call ds:SysStringLen  +
test eax eax +
jz loc_100E40E  +
lea ecx [ebp+var_28] +
call sub_1012550  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
call sub_10114A0  +
push eax  +
push offset stru_1001E44  +
push 0  +
push 1  +
lea eax [ebp+rclsid] +
push eax  +
call ds:CoGetClassObject  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jl loc_100E3FD  +
lea ecx [ebp+var_28] +
call sub_1024680  +
mov [ebp+var_38] eax +
mov ecx [ebp+ppv] +
push ecx  +
mov edx [ebp+arg_10] +
push edx  +
mov eax [ebp+riid] +
push eax  +
push 0  +
push 0  +
mov ecx [ebp+var_38] +
push ecx  +
mov edx [ebp+var_38] +
mov eax [edx] +
mov ecx [eax+1Ch] +
call ecx  +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_1023C70  +
jmp loc_100E427  +
mov edx [ebp+ppv] +
push edx  +
mov eax [ebp+riid] +
push eax  +
push 1  +
push 0  +
lea ecx [ebp+rclsid] +
push ecx  +
call ds:CoCreateInstance  +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+lpsz] 0 +
jz loc_100E4B6  +
mov eax [ebp+lpsz] +
movzx ecx word ptr [eax] +
test ecx ecx +
jz loc_100E4B6  +
mov edx [ebp+arg_4] +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 0 +
jz loc_100E4A7  +
mov eax [ebp+var_4] +
movzx ecx word ptr [eax] +
test ecx ecx +
jz loc_100E4A7  +
mov edx [ebp+lpsz] +
movzx eax word ptr [edx] +
mov ecx [ebp+var_4] +
movzx edx word ptr [ecx] +
cmp eax edx +
jnz loc_100E498  +
mov eax [ebp+lpsz] +
push eax  +
call ds:CharNextW  +
jmp loc_100E4B8  +
mov ecx [ebp+var_4] +
push ecx  +
call ds:CharNextW  +
mov [ebp+var_4] eax +
jmp loc_100E46C  +
mov edx [ebp+lpsz] +
push edx  +
call ds:CharNextW  +
mov [ebp+lpsz] eax +
jmp loc_100E456  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+8] +
mov ecx [eax+80h] +
shr ecx 5 +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
neg ecx  +
mov [ebp-4] ecx +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx edx al +
test edx edx +
jz loc_100E53D  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+18h] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+10h] +
mov eax [edx] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx+1Ch] +
call edx  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100E563  +
mov eax 80004003h +
jmp loc_100E5C3  +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100E5A3  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-4] eax +
mov ecx [ebp+0Ch] +
add ecx 8 +
push ecx  +
mov edx [ebp+0Ch] +
add edx 4 +
push edx  +
mov eax [ebp-4] +
push eax  +
mov ecx [ebp-4] +
mov edx [ecx] +
mov eax [edx+20h] +
call eax  +
jmp loc_100E5C3  +
mov ecx [ebp+0Ch] +
mov edx [ebp+8] +
mov eax [edx+98h] +
mov [ecx+4] eax +
mov ecx [ebp+0Ch] +
mov edx [ebp+8] +
mov eax [edx+9Ch] +
mov [ecx+8] eax +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+8] +
mov ecx [eax+80h] +
shr ecx 6 +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
neg ecx  +
mov [ebp-4] ecx +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx edx al +
test edx edx +
jz loc_100E638  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+1Ch] +
push ecx  +
mov edx [ebp+18h] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp-8] +
push eax  +
mov ecx [ebp-8] +
mov edx [ecx] +
mov eax [edx+24h] +
call eax  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 0 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100E692  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp-8] +
mov edx [ecx] +
mov eax [ebp-8] +
push eax  +
mov ecx [edx+28h] +
call ecx  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 0 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100E6E2  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp-8] +
mov edx [ecx] +
mov eax [ebp-8] +
push eax  +
mov ecx [edx+2Ch] +
call ecx  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 0 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100E73A  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+0Ch] +
neg ecx  +
sbb ecx ecx +
push ecx  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx+30h] +
call edx  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 0 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100E79A  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+0Ch] +
neg ecx  +
sbb ecx ecx +
push ecx  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx+34h] +
call edx  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 0 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100E7FA  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+0Ch] +
neg ecx  +
sbb ecx ecx +
push ecx  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx+38h] +
call edx  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 0 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100E879  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+14h] +
neg ecx  +
sbb ecx ecx +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
mov ecx [eax+0Ch] +
push ecx  +
mov edx [ebp+0Ch] +
mov eax [edx+8] +
push eax  +
mov ecx [ebp+0Ch] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push ecx  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx+3Ch] +
call edx  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov dword ptr [ebp-4] 1 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100E90E  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-0Ch] eax +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
lea ecx [ebp-8] +
call sub_100E920  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+0Ch] +
mov edx [ecx+0Ch] +
push edx  +
mov eax [ebp+0Ch] +
mov ecx [eax+8] +
push ecx  +
mov edx [ebp+0Ch] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+0Ch] +
mov edx [ecx] +
push edx  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp-0Ch] +
mov edx [ecx] +
mov eax [edx+40h] +
call eax  +
lea ecx [ebp-8] +
call sub_1007440  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_8C] ecx +
push 40h  +
lea eax [ebp+sz] +
push eax  +
mov ecx [ebp+rguid] +
push ecx  +
call ds:StringFromGUID2  +
lea edx [ebp+sz] +
push edx  +
call ds:SysAllocString  +
mov ecx [ebp+var_8C] +
mov [ecx] eax +
mov ecx [ebp+var_8C] +
call sub_1008A00  +
movzx edx al +
test edx edx +
jz loc_100E97F  +
push 8007000Eh  +
call sub_1007F50  +
mov eax [ebp+var_8C] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov dword ptr [ebp-4] 1 +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100E9BF  +
mov eax 80004003h +
jmp loc_100EA96  +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 0 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx ecx al +
test ecx ecx +
jz loc_100EA1A  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-10h] eax +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-10h] +
push ecx  +
mov edx [ebp-10h] +
mov eax [edx] +
mov ecx [eax+44h] +
call ecx  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_100EA11  +
mov edx [ebp+0Ch] +
cmp dword ptr [edx] 0 +
jnz loc_100EA18  +
mov dword ptr [ebp-4] 1 +
jmp loc_100EA93  +
mov ecx [ebp+8] +
add ecx 0A0h +
call sub_100AD50  +
test eax eax +
jz loc_100EA93  +
mov ecx [ebp+8] +
add ecx 0A0h +
call sub_100EAF0  +
mov [ebp-0Ch] eax +
mov eax [ebp-0Ch] +
add eax 2 +
push eax  +
call ds:CoTaskMemAlloc  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jnz loc_100EA5A  +
mov eax 8007000Eh +
jmp loc_100EA96  +
mov ecx [ebp+8] +
mov edx [ecx+0A0h] +
push edx  +
mov eax [ebp-0Ch] +
shr eax 1 +
add eax 1 +
push eax  +
mov ecx [ebp-8] +
push ecx  +
call sub_100EAB0  +
movzx edx al +
test edx edx +
jnz loc_100EA84  +
mov eax 80004005h +
jmp loc_100EA96  +
mov eax [ebp+0Ch] +
mov ecx [ebp-8] +
mov [eax] ecx +
mov dword ptr [ebp-4] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpString] +
push eax  +
call sub_100DEF0  +
lea ecx [eax+eax+2] +
push ecx  +
mov edx [ebp+lpString] +
push edx  +
mov eax [ebp+arg_4] +
shl eax 1 +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call memcpy_s  +
add esp 10h +
neg eax  +
sbb eax eax +
add eax 1 +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SysStringByteLen  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp dword ptr [ebp+10h] 0 +
jnz loc_100EB28  +
mov eax 80004003h +
jmp loc_100EBD4  +
mov eax [ebp+10h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-4] 80004001h +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx ecx al +
test ecx ecx +
jz loc_100EBD1  +
lea ecx [ebp-8] +
call sub_1012550  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-0Ch] eax +
lea ecx [ebp-8] +
call sub_10114A0  +
push eax  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp-0Ch] +
mov edx [ecx] +
mov eax [edx+48h] +
call eax  +
mov [ebp-4] eax +
lea ecx [ebp-8] +
call sub_1024680  +
test eax eax +
jz loc_100EBB4  +
lea ecx [ebp-8] +
call sub_1024680  +
mov [ebp-10h] eax +
mov ecx [ebp+10h] +
push ecx  +
push offset dword_1001E78  +
mov edx [ebp-10h] +
push edx  +
mov eax [ebp-10h] +
mov ecx [eax] +
mov edx [ecx] +
call edx  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_100EBC2  +
mov eax [ebp+10h] +
cmp dword ptr [eax] 0 +
jnz loc_100EBC9  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-8] +
call sub_1023C70  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100EBF5  +
mov eax 80004003h +
jmp loc_100EC68  +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-4] 80004002h +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx ecx al +
test ecx ecx +
jz loc_100EC53  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-8] eax +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp-8] +
push eax  +
mov ecx [ebp-8] +
mov edx [ecx] +
mov eax [edx+4Ch] +
call eax  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_100EC4A  +
mov ecx [ebp+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_100EC51  +
mov dword ptr [ebp-4] 80004002h +
jmp loc_100EC65  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp+8] +
add ecx 30h +
call sub_1012250  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
cmp dword ptr [ebp+14h] 0 +
jnz loc_100EC98  +
mov eax 80004003h +
jmp loc_100ED8A  +
mov eax [ebp+14h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-4] 1 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx ecx al +
test ecx ecx +
jz loc_100ED87  +
lea ecx [ebp-8] +
call sub_100B430  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-18h] eax +
lea ecx [ebp-8] +
call sub_10114A0  +
push eax  +
mov edx [ebp+10h] +
push edx  +
lea ecx [ebp-10h] +
call sub_1007F00  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-18h] +
push ecx  +
mov edx [ebp-18h] +
mov eax [edx] +
mov ecx [eax+50h] +
call ecx  +
mov [ebp-4] eax +
lea ecx [ebp-10h] +
call sub_1007440  +
cmp dword ptr [ebp-4] 0 +
jl loc_100ED78  +
lea ecx [ebp-8] +
call sub_100AD50  +
test eax eax +
jz loc_100ED78  +
lea ecx [ebp-8] +
call sub_100AD50  +
lea edx [eax+eax+2] +
mov [ebp-0Ch] edx +
mov eax [ebp-0Ch] +
push eax  +
call ds:CoTaskMemAlloc  +
mov ecx [ebp+14h] +
mov [ecx] eax +
mov edx [ebp+14h] +
cmp dword ptr [edx] 0 +
jnz loc_100ED5C  +
mov dword ptr [ebp-14h] 8007000Eh +
lea ecx [ebp-8] +
call sub_1007440  +
mov eax [ebp-14h] +
jmp loc_100ED8A  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp-8] +
push ecx  +
mov edx [ebp-0Ch] +
push edx  +
mov eax [ebp+14h] +
mov ecx [eax] +
push ecx  +
call sub_1009C20  +
add esp 10h +
jmp loc_100ED7F  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-8] +
call sub_1007440  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp dword ptr [ebp+10h] 0 +
jnz loc_100EDB8  +
mov eax 80004003h +
jmp loc_100EE59  +
mov eax [ebp+10h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-4] 1 +
push 0  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1012320  +
movzx ecx al +
test ecx ecx +
jz loc_100EE56  +
lea ecx [ebp-8] +
call sub_1012550  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1024680  +
mov [ebp-0Ch] eax +
lea ecx [ebp-8] +
call sub_10114A0  +
push eax  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp-0Ch] +
mov edx [ecx] +
mov eax [edx+54h] +
call eax  +
mov [ebp-4] eax +
lea ecx [ebp-8] +
call sub_1024680  +
test eax eax +
jz loc_100EE39  +
mov ecx [ebp+10h] +
push ecx  +
push offset dword_1001E88  +
mov edx [ebp+8] +
sub edx 24h +
mov eax [ebp+8] +
mov ecx [eax-24h] +
push edx  +
mov edx [ecx] +
call edx  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_100EE47  +
mov eax [ebp+10h] +
cmp dword ptr [eax] 0 +
jnz loc_100EE4E  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-8] +
call sub_1023C70  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+28h] +
push eax  +
mov ecx [ebp+24h] +
push ecx  +
mov edx [ebp+20h] +
push edx  +
mov eax [ebp+1Ch] +
push eax  +
movzx ecx word ptr [ebp+18h] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov edx [ebp+8] +
push edx  +
call sub_10121A0  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 80020003h +
jz loc_100EEB7  +
cmp dword ptr [ebp-4] 8002802Bh +
jnz loc_100EF2C  +
push 0  +
mov ecx [ebp+8] +
add ecx 8 +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100EF2C  +
mov ecx [ebp+8] +
add ecx 8 +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+28h] +
push ecx  +
mov edx [ebp+24h] +
push edx  +
mov eax [ebp+20h] +
push eax  +
mov ecx [ebp+1Ch] +
push ecx  +
movzx edx word ptr [ebp+18h] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp-8] +
push eax  +
mov ecx [ebp-8] +
mov edx [ecx] +
mov eax [edx+18h] +
call eax  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_100EF2C  +
movzx ecx word ptr [ebp+18h] +
and ecx 4 +
jz loc_100EF2C  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10354A8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_1C] ecx +
mov [ebp+var_14] 0 +
mov ecx [ebp+var_1C] +
add ecx 60h +
call sub_1024680  +
push eax  +
lea ecx [ebp+var_10] +
call sub_1012350  +
mov [ebp+var_4] 0 +
push 0  +
lea ecx [ebp+var_10] +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_100EFBD  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_20] eax +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_20] +
push edx  +
mov eax [ebp+var_20] +
mov ecx [eax] +
mov edx [ecx+14h] +
call edx  +
mov [ebp+var_14] eax +
mov eax [ebp+var_14] +
mov [ebp+var_18] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1025550  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx eax word ptr [ebp+0Ch] +
and eax 1 +
mov ecx [ebp+8] +
mov edx [ecx+7Ch] +
and edx 0FFFFFFFEh +
or edx eax +
mov eax [ebp+8] +
mov [eax+7Ch] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F032  +
mov eax 80004003h +
jmp loc_100F047  +
mov eax [ebp+8] +
mov ecx [eax+7Ch] +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
mov edx [ebp+0Ch] +
mov [edx] cx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+80h] ecx +
push 0FFFFFD43h  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
push 0  +
push 0  +
mov edx [ebp+8] +
sub edx 20h +
mov eax [ebp+8] +
mov ecx [eax-20h] +
push edx  +
mov edx [ecx+64h] +
call edx  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F0B2  +
mov eax 80004003h +
jmp loc_100F0C2  +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx [ecx+80h] +
mov [eax] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+84h] ecx +
push 0FFFFFD40h  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F112  +
mov eax 80004003h +
jmp loc_100F122  +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx [ecx+84h] +
mov [eax] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+88h] ecx +
push 0FFFFFD3Fh  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F172  +
mov eax 80004003h +
jmp loc_100F182  +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx [ecx+88h] +
mov [eax] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx eax word ptr [ebp+0Ch] +
and eax 1 +
shl eax 1 +
mov ecx [ebp+8] +
mov edx [ecx+7Ch] +
and edx 0FFFFFFFDh +
or edx eax +
mov eax [ebp+8] +
mov [eax+7Ch] edx +
push 0FFFFFD3Bh  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F1E2  +
mov eax 80004003h +
jmp loc_100F1F9  +
mov eax [ebp+8] +
mov ecx [eax+7Ch] +
shr ecx 1 +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
mov edx [ebp+0Ch] +
mov [edx] cx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx eax word ptr [ebp+0Ch] +
and eax 1 +
shl eax 2 +
mov ecx [ebp+8] +
mov edx [ecx+7Ch] +
and edx 0FFFFFFFBh +
or edx eax +
mov eax [ebp+8] +
mov [eax+7Ch] edx +
push 0FFFFFD37h  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F262  +
mov eax 80004003h +
jmp loc_100F27A  +
mov eax [ebp+8] +
mov ecx [eax+7Ch] +
shr ecx 2 +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
mov edx [ebp+0Ch] +
mov [edx] cx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 8Ch +
call sub_10122A0  +
push 0FFFFFD41h  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0BCh +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp-24h] eax +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F2F5  +
mov eax 80004003h +
jmp loc_100F501  +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 0 +
push 0  +
mov ecx [ebp+8] +
add ecx 8Ch +
call sub_1012890  +
movzx ecx al +
test ecx ecx +
jz loc_100F4EF  +
call sub_100A5D0  +
mov [ebp-18h] eax +
lea ecx [ebp-20h] +
call sub_100B430  +
push 11h  +
call ds:GetStockObject  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jnz loc_100F345  +
push 0Dh  +
call ds:GetStockObject  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jnz loc_100F369  +
call sub_100F540  +
mov [ebp-0B4h] eax +
lea ecx [ebp-20h] +
call sub_100AEF0  +
mov eax [ebp-0B4h] +
jmp loc_100F501  +
lea edx [ebp-88h] +
push edx  +
push 5Ch  +
mov eax [ebp-4] +
push eax  +
call ds:GetObjectW  +
mov dword ptr [ebp-0B0h] 20h +
lea ecx [ebp-6Ch] +
push ecx  +
call sub_100F520  +
mov [ebp-0ACh] eax +
mov dx [ebp-78h] +
mov [ebp-0A0h] dx +
movzx ax byte ptr [ebp-71h] +
mov [ebp-9Eh] ax +
movzx ecx byte ptr [ebp-74h] +
mov [ebp-9Ch] ecx +
movzx edx byte ptr [ebp-73h] +
mov [ebp-98h] edx +
movzx eax byte ptr [ebp-72h] +
mov [ebp-94h] eax +
mov ecx [ebp-88h] +
mov [ebp-0Ch] ecx +
cmp dword ptr [ebp-0Ch] 0 +
jge loc_100F3E1  +
mov edx [ebp-0Ch] +
neg edx  +
mov [ebp-0Ch] edx +
mov eax [ebp+8] +
cmp dword ptr [eax-48h] 0 +
jz loc_100F44C  +
mov ecx [ebp+8] +
mov edx [ecx-48h] +
push edx  +
call ds:GetDC  +
mov [ebp-8Ch] eax +
cmp dword ptr [ebp-8Ch] 0 +
jnz loc_100F424  +
call sub_100F540  +
mov [ebp-0B8h] eax +
lea ecx [ebp-20h] +
call sub_100AEF0  +
mov eax [ebp-0B8h] +
jmp loc_100F501  +
push 5Ah  +
mov eax [ebp-8Ch] +
push eax  +
call ds:GetDeviceCaps  +
mov [ebp-10h] eax +
mov ecx [ebp-8Ch] +
push ecx  +
mov edx [ebp+8] +
mov eax [edx-48h] +
push eax  +
call ds:ReleaseDC  +
jmp loc_100F4A9  +
call ds:GetDesktopWindow  +
push eax  +
call ds:GetDC  +
mov [ebp-8Ch] eax +
cmp dword ptr [ebp-8Ch] 0 +
jnz loc_100F483  +
call sub_100F540  +
mov [ebp-0BCh] eax +
lea ecx [ebp-20h] +
call sub_100AEF0  +
mov eax [ebp-0BCh] +
jmp loc_100F501  +
push 5Ah  +
mov ecx [ebp-8Ch] +
push ecx  +
call ds:GetDeviceCaps  +
mov [ebp-10h] eax +
mov edx [ebp-8Ch] +
push edx  +
call ds:GetDesktopWindow  +
push eax  +
call ds:ReleaseDC  +
mov eax [ebp-0Ch] +
imul eax eax +
cdq   +
idiv  dword ptr [ebp-10h] +
mov [ebp-0A8h] eax +
mov dword ptr [ebp-0A4h] 0 +
mov ecx [ebp+8] +
add ecx 8Ch +
call sub_10114A0  +
push eax  +
push offset dword_1001E98  +
lea eax [ebp-0B0h] +
push eax  +
call ds:OleCreateFontIndirect  +
lea ecx [ebp-20h] +
call sub_100AEF0  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
add ecx 8Ch +
call sub_1012250  +
mov ecx [ebp-24h] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
call ds:__imp_GetLastError  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
push eax  +
call sub_100F570  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
jg loc_100F584  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
jmp loc_100F59C  +
mov ecx [ebp+arg_0] +
and ecx 0FFFFh +
or ecx 70000h +
or ecx 80000000h +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx eax word ptr [ebp+0Ch] +
and eax 1 +
shl eax 3 +
mov ecx [ebp+8] +
mov edx [ecx+7Ch] +
and edx 0FFFFFFF7h +
or edx eax +
mov eax [ebp+8] +
mov [eax+7Ch] edx +
push 0FFFFFD3Eh  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F602  +
mov eax 80004003h +
jmp loc_100F61A  +
mov eax [ebp+8] +
mov ecx [eax+7Ch] +
shr ecx 3 +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
mov edx [ebp+0Ch] +
mov [edx] cx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
mov ecx [ebp+0Ch] +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F662  +
mov eax 80004003h +
jmp loc_100F66C  +
xor eax eax +
mov ecx [ebp+0Ch] +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+94h] ecx +
push 0FFFFFFFFh  +
mov ecx [ebp+8] +
sub ecx 4Ch +
call sub_100EF40  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F6C2  +
mov eax 80004003h +
jmp loc_100F6D2  +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx [ecx+94h] +
mov [eax] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+98h] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F712  +
mov eax 80004003h +
jmp loc_100F722  +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx [ecx+98h] +
mov [eax] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx eax word ptr [ebp+0Ch] +
and eax 1 +
shl eax 5 +
mov ecx [ebp+8] +
mov edx [ecx+7Ch] +
and edx 0FFFFFFDFh +
or edx eax +
mov eax [ebp+8] +
mov [eax+7Ch] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F772  +
mov eax 80004003h +
jmp loc_100F78A  +
mov eax [ebp+8] +
mov ecx [eax+7Ch] +
shr ecx 5 +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
mov edx [ebp+0Ch] +
mov [edx] cx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx eax word ptr [ebp+0Ch] +
and eax 1 +
shl eax 6 +
mov ecx [ebp+8] +
mov edx [ecx+7Ch] +
and edx 0FFFFFFBFh +
or edx eax +
mov eax [ebp+8] +
mov [eax+7Ch] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F7E2  +
mov eax 80004003h +
jmp loc_100F7FA  +
mov eax [ebp+8] +
mov ecx [eax+7Ch] +
shr ecx 6 +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
mov edx [ebp+0Ch] +
mov [edx] cx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 9Ch +
call sub_100F860  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
add ecx 9Ch +
call sub_100F8D0  +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
cmp ecx [eax] +
jz loc_100F8B8  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:SysFreeString  +
cmp [ebp+arg_0] 0 +
jz loc_100F8AF  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:SysAllocString  +
mov edx [ebp+var_4] +
mov [edx] eax +
mov ecx [ebp+var_4] +
call sub_1008A00  +
movzx eax al +
test eax eax +
jz loc_100F8AD  +
push 8007000Eh  +
call sub_1007F50  +
jmp loc_100F8B8  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_100F8F0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_4] +
call sub_1007F00  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+var_C] +
call sub_100F930  +
mov [ebp+var_5] al +
lea ecx [ebp+var_4] +
call sub_1007440  +
mov al [ebp+var_5] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
push 400h  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call OLEAUT32_314  +
sub eax 1 +
neg eax  +
sbb eax eax +
add eax 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100F982  +
mov eax 80004003h +
jmp loc_100F9B6  +
mov ecx [ebp+8] +
add ecx 9Ch +
call sub_1024680  +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
mov ecx [ebp+8] +
add ecx 9Ch +
call sub_1024680  +
mov edx [ebp+0Ch] +
mov ecx [edx] +
sub ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 8007000Eh +
mov eax ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 8 +
call sub_10122A0  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
push ecx  +
call sub_1011570  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_100FA3F  +
mov ecx [ebp+8] +
add ecx 4 +
call sub_1024680  +
test eax eax +
jz loc_100FA3F  +
mov ecx [ebp+8] +
add ecx 4 +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+8] +
add ecx 0A4h +
call sub_10114A0  +
push eax  +
push offset dword_1001B74  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx] +
call edx  +
mov [ebp-4] eax +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100FA53  +
mov ecx [ebp+8] +
add ecx 0A4h +
call sub_100BEE0  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 80004001h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 80004003h +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_100FB0E  +
mov dword ptr [ebp-4] 80004001h +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 0 +
mov ecx [ebp+8] +
add ecx 14h +
call sub_1024680  +
test eax eax +
jz loc_100FAEB  +
mov ecx [ebp+8] +
add ecx 14h +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+0Ch] +
push ecx  +
push offset dword_1001B54  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx] +
call edx  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jge loc_100FB0E  +
mov eax [ebp+0Ch] +
push eax  +
push offset dword_1001B54  +
mov ecx [ebp+8] +
sub ecx 4 +
mov edx [ebp+8] +
mov eax [edx-4] +
push ecx  +
mov ecx [eax] +
call ecx  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_100FBB0  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jnz loc_100FB43  +
mov eax 80004005h +
jmp loc_100FBA4  +
mov ecx [ebp+8] +
add ecx 48h +
call sub_1024680  +
test eax eax +
jz loc_100FB93  +
mov ecx [ebp+8] +
add ecx 48h +
call sub_1024680  +
mov [ebp-8] eax +
push 0  +
push 0  +
mov eax [ebp+8] +
add eax 8Ch +
push eax  +
mov ecx [ebp+8] +
add ecx 8Ch +
push ecx  +
mov edx [ebp-4] +
push edx  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 1  +
mov eax [ebp-8] +
push eax  +
mov ecx [ebp-8] +
mov edx [ecx] +
mov eax [edx+0Ch] +
call eax  +
mov ecx [ebp-4] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_100FBD0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:GetDC  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:ReleaseDC  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx [ecx-28h] +
mov [eax] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
jnz loc_100FC46  +
xor ecx ecx +
jnz loc_100FC46  +
xor edx edx +
jnz loc_100FC4E  +
xor eax eax +
jnz loc_100FC4E  +
mov ecx [ebp+8] +
mov edx [ecx+6Ch] +
or edx 1 +
mov eax [ebp+8] +
mov [eax+6Ch] edx +
push 0  +
push 1  +
mov ecx [ebp+8] +
add ecx 38h +
call sub_1024680  +
push eax  +
call ds:OleLockRunning  +
mov ecx [ebp+8] +
mov edx [ecx+6Ch] +
and edx 0FFFFFFF7h +
mov eax [ebp+8] +
mov [eax+6Ch] edx +
mov ecx [ebp+8] +
add ecx 38h +
call sub_1024680  +
mov [ebp-4] eax +
mov ecx [ebp+8] +
add ecx 48h +
call sub_10114A0  +
push eax  +
push offset dword_1001EA8  +
mov ecx [ebp-4] +
push ecx  +
mov edx [ebp-4] +
mov eax [edx] +
mov ecx [eax] +
call ecx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+6Ch] +
or ecx 2 +
mov edx [ebp+8] +
mov [edx+6Ch] ecx +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_100FD07  +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 0 +
cmp dword ptr [ebp+10h] 0 +
jz loc_100FD16  +
mov ecx [ebp+10h] +
mov dword ptr [ecx] 0 +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_100FD2E  +
cmp dword ptr [ebp+10h] 0 +
jz loc_100FD2E  +
cmp dword ptr [ebp+14h] 0 +
jz loc_100FD2E  +
cmp dword ptr [ebp+18h] 0 +
jnz loc_100FD38  +
mov eax 80004003h +
jmp loc_100FEB6  +
mov ecx [ebp+8] +
add ecx 3Ch +
call sub_1008A00  +
movzx edx al +
test edx edx +
jz loc_100FD7D  +
lea eax [ebp-8] +
push eax  +
call sub_1012F20  +
mov ecx [ebp+8] +
add ecx 3Ch +
call sub_10114A0  +
push eax  +
push offset dword_1001EC8  +
mov ecx [ebp-8] +
add ecx 24h +
mov edx [ebp-8] +
mov eax [edx+24h] +
push ecx  +
mov ecx [eax] +
call ecx  +
xor edx edx +
jnz loc_100FD75  +
xor eax eax +
jnz loc_100FD75  +
mov ecx [ebp+8] +
add ecx 40h +
call sub_1008A00  +
movzx ecx al +
test ecx ecx +
jz loc_100FDC2  +
lea edx [ebp-0Ch] +
push edx  +
call sub_1013090  +
mov ecx [ebp+8] +
add ecx 40h +
call sub_10114A0  +
push eax  +
push offset dword_1001EB8  +
mov eax [ebp-0Ch] +
add eax 24h +
mov ecx [ebp-0Ch] +
mov edx [ecx+24h] +
push eax  +
mov eax [edx] +
call eax  +
xor ecx ecx +
jnz loc_100FDBA  +
xor edx edx +
jnz loc_100FDBA  +
mov dword ptr [ebp-4] 0 +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 3Ch +
call sub_1012250  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jge loc_100FDE9  +
mov eax [ebp-4] +
jmp loc_100FEB6  +
mov ecx [ebp+10h] +
push ecx  +
mov ecx [ebp+8] +
add ecx 40h +
call sub_1012250  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jge loc_100FE09  +
mov eax [ebp-4] +
jmp loc_100FEB6  +
mov edx [ebp+14h] +
push edx  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100D6B0  +
mov eax [ebp+18h] +
push eax  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100D6B0  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+98h] 0 +
jnz loc_100FE58  +
mov byte ptr [ebp-14h] 0 +
xor edx edx +
mov [ebp-12h] dx +
xor eax eax +
mov [ebp-10h] ax +
push 1  +
lea ecx [ebp-14h] +
push ecx  +
call ds:CreateAcceleratorTableW  +
mov edx [ebp+8] +
mov [edx+98h] eax +
mov eax [ebp+1Ch] +
mov dword ptr [eax] 14h +
mov ecx [ebp+8] +
mov edx [ecx+6Ch] +
shr edx 2 +
and edx 1 +
mov eax [ebp+1Ch] +
mov [eax+4] edx +
lea ecx [ebp-18h] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
mov edx [ebp+1Ch] +
mov [edx+8] eax +
mov eax [ebp+1Ch] +
mov ecx [ebp+8] +
mov edx [ecx+98h] +
mov [eax+0Ch] edx +
mov eax [ebp+8] +
xor ecx ecx +
cmp dword ptr [eax+98h] 0 +
setnz cl  +
mov edx [ebp+1Ch] +
mov [edx+10h] ecx +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+6Ch] +
and ecx 0FFFFFFFDh +
mov edx [ebp+8] +
mov [edx+6Ch] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+6Ch] +
and ecx 0FFFFFFFEh +
mov edx [ebp+8] +
mov [edx+6Ch] ecx +
mov ecx [ebp+8] +
add ecx 48h +
call sub_100BEE0  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_100FF55  +
mov eax 80004003h +
jmp loc_100FFD0  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
mov [ebp-10h] ecx +
mov edx [eax+4] +
mov [ebp-0Ch] edx +
mov ecx [eax+8] +
mov [ebp-8] ecx +
mov edx [eax+0Ch] +
mov [ebp-4] edx +
lea eax [ebp-10h] +
push eax  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_1010030  +
lea ecx [ebp-1Ch] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
mov [ebp-14h] eax +
cmp dword ptr [ebp-14h] 0 +
jz loc_100FFBD  +
mov edx [ebp-14h] +
push edx  +
lea ecx [ebp-18h] +
call sub_1007F90  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-18h] +
call sub_1010070  +
lea ecx [ebp-18h] +
call sub_101AC70  +
push 1  +
lea ecx [ebp-10h] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100FFE0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+bRepaint] +
push eax  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_0] +
mov eax [ecx+0Ch] +
sub eax [edx+4] +
push eax  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_0] +
mov eax [ecx+8] +
sub eax [edx] +
push eax  +
mov ecx [ebp+arg_0] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:MoveWindow  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpPoint] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:ClientToScreen  +
test eax eax +
jnz loc_1010051  +
xor eax eax +
jmp loc_1010064  +
mov eax [ebp+lpPoint] +
add eax 8 +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:ClientToScreen  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpPoint] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:ScreenToClient  +
test eax eax +
jnz loc_1010091  +
xor eax eax +
jmp loc_10100A4  +
mov eax [ebp+lpPoint] +
add eax 8 +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:ScreenToClient  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
jnz loc_10100B8  +
xor ecx ecx +
jnz loc_10100B8  +
xor edx edx +
jnz loc_10100C0  +
xor eax eax +
jnz loc_10100C0  +
mov ecx [ebp+8] +
mov edx [ecx+6Ch] +
or edx 1 +
mov eax [ebp+8] +
mov [eax+6Ch] edx +
push 0  +
push 1  +
mov ecx [ebp+8] +
add ecx 38h +
call sub_1024680  +
push eax  +
call ds:OleLockRunning  +
mov dword ptr [ebp-4] 80004005h +
mov ecx [ebp+10h] +
and ecx 1 +
jz loc_101013A  +
mov edx [ebp+8] +
mov eax [edx+6Ch] +
or eax 8 +
mov ecx [ebp+8] +
mov [ecx+6Ch] eax +
mov ecx [ebp+8] +
add ecx 38h +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+8] +
add ecx 48h +
call sub_10114A0  +
push eax  +
push offset dword_1001ED8  +
mov edx [ebp-8] +
push edx  +
mov eax [ebp-8] +
mov ecx [eax] +
mov edx [ecx] +
call edx  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jge loc_101017E  +
mov eax [ebp+8] +
mov ecx [eax+6Ch] +
and ecx 0FFFFFFF7h +
mov edx [ebp+8] +
mov [edx+6Ch] ecx +
mov ecx [ebp+8] +
add ecx 38h +
call sub_1024680  +
mov [ebp-0Ch] eax +
mov ecx [ebp+8] +
add ecx 48h +
call sub_10114A0  +
push eax  +
push offset dword_1001EA8  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp-0Ch] +
mov edx [ecx] +
mov eax [edx] +
call eax  +
mov [ebp-4] eax +
mov ecx [ebp+8] +
add ecx 48h +
call sub_1024680  +
test eax eax +
jz loc_10101BD  +
mov ecx [ebp+8] +
add ecx 48h +
call sub_1024680  +
mov [ebp-10h] eax +
mov ecx [ebp+8] +
add ecx 88h +
push ecx  +
mov edx [ebp+8] +
add edx 88h +
push edx  +
mov eax [ebp-10h] +
push eax  +
mov ecx [ebp-10h] +
mov edx [ecx] +
mov eax [edx+1Ch] +
call eax  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+6Ch] +
and ecx 0FFFFFFFEh +
mov edx [ebp+8] +
mov [edx+6Ch] ecx +
mov ecx [ebp+8] +
add ecx 48h +
call sub_100BEE0  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+9Ch] +
and eax 1 +
neg eax  +
sbb eax eax +
add eax 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+6Ch] +
shr eax 4 +
and eax 1 +
neg eax  +
sbb eax eax +
add eax 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_1010287  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_10102B0  +
mov eax [ebp+8] +
mov ecx [eax+6Ch] +
or ecx 10h +
mov edx [ebp+8] +
mov [edx+6Ch] ecx +
jmp loc_101029C  +
call ds:ReleaseCapture  +
mov eax [ebp+8] +
mov ecx [eax+6Ch] +
and ecx 0FFFFFFEFh +
mov edx [ebp+8] +
mov [edx+6Ch] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SetCapture  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+6Ch] +
shr eax 5 +
and eax 1 +
neg eax  +
sbb eax eax +
add eax 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
and eax 1 +
shl eax 5 +
mov ecx [ebp+8] +
mov edx [ecx+6Ch] +
and edx 0FFFFFFDFh +
or edx eax +
mov eax [ebp+8] +
mov [eax+6Ch] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
cmp dword ptr [ebp+14h] 0 +
jnz loc_1010348  +
mov eax 80004003h +
jmp loc_101045A  +
mov eax [ebp+8] +
movzx ecx byte ptr [eax+30h] +
test ecx ecx +
jnz loc_101035D  +
mov eax 80004005h +
jmp loc_101045A  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100FBB0  +
mov edx [ebp+14h] +
mov [edx] eax +
mov eax [ebp+14h] +
cmp dword ptr [eax] 0 +
jnz loc_101037F  +
mov eax 80004005h +
jmp loc_101045A  +
mov ecx [ebp+8] +
mov byte ptr [ecx+30h] 0 +
mov edx [ebp+10h] +
and edx 1 +
jz loc_1010395  +
xor eax eax +
jmp loc_101045A  +
lea eax [ebp-10h] +
push eax  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100D6B0  +
mov ecx [ebp+10h] +
and ecx 4 +
jz loc_101043E  +
mov edx [ebp+14h] +
mov eax [edx] +
push eax  +
call ds:CreateCompatibleDC  +
mov [ebp-14h] eax +
cmp dword ptr [ebp-14h] 0 +
jz loc_101043E  +
mov ecx [ebp-4] +
sub ecx [ebp-0Ch] +
push ecx  +
mov edx [ebp-8] +
sub edx [ebp-10h] +
push edx  +
mov eax [ebp+14h] +
mov ecx [eax] +
push ecx  +
call ds:CreateCompatibleBitmap  +
mov [ebp-18h] eax +
cmp dword ptr [ebp-18h] 0 +
jnz loc_10103F4  +
mov edx [ebp-14h] +
push edx  +
call ds:DeleteDC  +
jmp loc_101043E  +
mov eax [ebp-18h] +
push eax  +
mov ecx [ebp-14h] +
push ecx  +
call ds:SelectObject  +
mov [ebp-1Ch] eax +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_1010421  +
mov edx [ebp-18h] +
push edx  +
call ds:DeleteObject  +
mov eax [ebp-14h] +
push eax  +
call ds:DeleteDC  +
jmp loc_101043E  +
mov ecx [ebp-1Ch] +
push ecx  +
call ds:DeleteObject  +
mov edx [ebp+8] +
mov eax [ebp+14h] +
mov ecx [eax] +
mov [edx+2Ch] ecx +
mov edx [ebp+14h] +
mov eax [ebp-14h] +
mov [edx] eax +
mov ecx [ebp+10h] +
and ecx 2 +
jz loc_1010458  +
push 6  +
lea edx [ebp-10h] +
push edx  +
mov eax [ebp+14h] +
mov ecx [eax] +
push ecx  +
call ds:FillRect  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
mov byte ptr [eax+30h] 1 +
mov ecx [ebp+8] +
cmp dword ptr [ecx+2Ch] 0 +
jz loc_10104DA  +
lea edx [ebp-10h] +
push edx  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100D6B0  +
push 0CC0020h  +
push 0  +
push 0  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-4] +
sub ecx [ebp-0Ch] +
push ecx  +
mov edx [ebp-8] +
sub edx [ebp-10h] +
push edx  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp-10h] +
push ecx  +
mov edx [ebp+8] +
mov eax [edx+2Ch] +
push eax  +
call ds:BitBlt  +
mov ecx [ebp+0Ch] +
push ecx  +
call ds:DeleteDC  +
mov edx [ebp+8] +
mov eax [edx+2Ch] +
mov [ebp+0Ch] eax +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_100FBD0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_1010530  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+bErase] +
push eax  +
mov ecx [ebp+lpRect] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:InvalidateRect  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 28h +
call sub_1010590  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+bErase] +
push eax  +
mov ecx [ebp+hRgn] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:InvalidateRgn  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp+8] +
sub ecx 2Ch +
call sub_1011530  +
mov ecx [ebp+18h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1010612  +
mov eax 80004003h +
jmp loc_1010621  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 34h +
call sub_1013200  +
pop ebp  +
retn 8  +
***
mov eax 1 +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
and eax 1 +
shl eax 5 +
mov ecx [ebp+8] +
mov edx [ecx+68h] +
and edx 0FFFFFFDFh +
or edx eax +
mov eax [ebp+8] +
mov [eax+68h] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 80004001h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 80004001h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10354D0  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
cmp dword ptr [ebp+10h] 0 +
jnz loc_101071E  +
mov eax 80004003h +
jmp loc_101081A  +
mov eax [ebp+10h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-4] 0 +
push 38h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp-2Ch] eax +
mov ecx [ebp-2Ch] +
mov [ebp-20h] ecx +
cmp dword ptr [ebp-20h] 0 +
jz loc_101075D  +
push 0  +
mov ecx [ebp-20h] +
call sub_1012390  +
mov [ebp-30h] eax +
jmp loc_1010764  +
mov dword ptr [ebp-30h] 0 +
mov edx [ebp-30h] +
mov [ebp-18h] edx +
jmp loc_1010779  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1010780 +
retn   +
***
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-18h] 0 +
jnz loc_1010790  +
mov eax 8007000Eh +
jmp loc_101081A  +
mov ecx [ebp+8] +
add ecx 2Ch +
call sub_1024680  +
mov [ebp-14h] eax +
push 3  +
mov ecx [ebp+8] +
sub ecx 34h +
mov eax [ebp+8] +
mov edx [eax-34h] +
mov eax [edx+10h] +
call eax  +
push eax  +
lea ecx [ebp-10h] +
push ecx  +
lea edx [ebp-14h] +
push edx  +
mov ecx [ebp-18h] +
call sub_10135B0  +
mov [ebp-1Ch] eax +
cmp dword ptr [ebp-1Ch] 0 +
jl loc_10107E4  +
mov eax [ebp+10h] +
push eax  +
push offset dword_1001EE8  +
mov ecx [ebp-18h] +
push ecx  +
mov edx [ebp-18h] +
mov eax [edx] +
mov ecx [eax] +
call ecx  +
mov [ebp-1Ch] eax +
cmp dword ptr [ebp-1Ch] 0 +
jge loc_1010817  +
mov edx [ebp-18h] +
mov [ebp-28h] edx +
mov eax [ebp-28h] +
mov [ebp-24h] eax +
cmp dword ptr [ebp-24h] 0 +
jz loc_1010810  +
push 1  +
mov ecx [ebp-24h] +
mov edx [ecx] +
mov ecx [ebp-24h] +
mov eax [edx+1Ch] +
call eax  +
mov [ebp-34h] eax +
jmp loc_1010817  +
mov dword ptr [ebp-34h] 0 +
mov eax [ebp-1Ch] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
and eax 1 +
shl eax 7 +
mov ecx [ebp+8] +
mov edx [ecx+64h] +
and edx 0FFFFFF7Fh +
or edx eax +
mov eax [ebp+8] +
mov [eax+64h] edx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035528  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_38] ecx +
cmp [ebp+arg_0] 0 +
jnz loc_10108A7  +
xor eax eax +
jmp loc_1010EC5  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_38] +
add ecx 60h +
call sub_10122A0  +
mov [ebp+var_14] 0 +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_10114A0  +
push eax  +
push offset dword_1001F34  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
test eax eax +
jz loc_1010E4B  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_3C] eax +
mov edx [ebp+var_38] +
add edx 0A0h +
push edx  +
push 1  +
mov eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+var_3C] +
mov edx [ecx] +
mov eax [edx+58h] +
call eax  +
mov ecx [ebp+var_38] +
mov edx [ecx+0A0h] +
and edx 20000h +
jz loc_1010978  +
mov eax [ebp+var_38] +
mov edx [eax] +
mov ecx [ebp+var_38] +
mov eax [edx+10h] +
call eax  +
push eax  +
lea ecx [ebp+var_1C] +
call sub_1012490  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_40] eax +
lea ecx [ebp+var_1C] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_40] +
push ecx  +
mov edx [ebp+var_40] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1025550  +
movzx edx [ebp+arg_4] +
test edx edx +
jnz loc_1010ACA  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
push eax  +
lea ecx [ebp+var_20] +
call sub_10124D0  +
mov [ebp+var_4] 1 +
lea ecx [ebp+var_20] +
call sub_1024680  +
test eax eax +
jz loc_10109F1  +
cmp [ebp+arg_8] 0 +
jz loc_10109D3  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_44] eax +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+var_44] +
push ecx  +
mov edx [ebp+var_44] +
mov eax [edx] +
mov ecx [eax+14h] +
call ecx  +
mov [ebp+var_14] eax +
jmp loc_10109EF  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_48] eax +
mov edx [ebp+var_48] +
mov eax [edx] +
mov ecx [ebp+var_48] +
push ecx  +
mov edx [eax+20h] +
call edx  +
mov [ebp+var_14] eax +
jmp loc_1010A47  +
cmp [ebp+arg_8] 0 +
jz loc_1010A47  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
push eax  +
lea ecx [ebp+var_24] +
call sub_1012510  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_24] +
call sub_1024680  +
test eax eax +
jz loc_1010A3B  +
lea ecx [ebp+var_24] +
call sub_1024680  +
mov [ebp+var_4C] eax +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+var_4C] +
push ecx  +
mov edx [ebp+var_4C] +
mov eax [edx] +
mov ecx [eax+14h] +
call ecx  +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_24] +
call sub_1025550  +
cmp [ebp+var_14] 0 +
jge loc_1010ABB  +
mov edx [ebp+var_38] +
mov eax [edx+0A0h] +
and eax 20000h +
jz loc_1010A7B  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_50] eax +
push 0  +
mov ecx [ebp+var_50] +
push ecx  +
mov edx [ebp+var_50] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov edx [ebp+var_38] +
mov dword ptr [edx+0A0h] 0 +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_100BEE0  +
mov ecx [ebp+var_38] +
add ecx 60h +
call sub_100BEE0  +
mov eax [ebp+var_14] +
mov [ebp+var_30] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_20] +
call sub_1025550  +
mov eax [ebp+var_30] +
jmp loc_1010EC5  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_20] +
call sub_1025550  +
mov ecx [ebp+var_38] +
mov edx [ecx+0A0h] +
and edx 20000h +
jnz loc_1010B2C  +
mov eax [ebp+var_38] +
mov edx [eax] +
mov ecx [ebp+var_38] +
mov eax [edx+10h] +
call eax  +
push eax  +
lea ecx [ebp+var_28] +
call sub_1012490  +
mov [ebp+var_4] 3 +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_54] eax +
lea ecx [ebp+var_28] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_54] +
push ecx  +
mov edx [ebp+var_54] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_1025550  +
mov edx [ebp+var_38] +
mov dword ptr [edx+90h] 0 +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_58] eax +
mov ecx [ebp+var_38] +
add ecx 70h +
call sub_10114A0  +
push eax  +
push offset dword_1001F24  +
mov eax [ebp+var_58] +
push eax  +
mov ecx [ebp+var_58] +
mov edx [ecx] +
mov eax [edx] +
call eax  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1010BB2  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_5C] eax +
mov ecx [ebp+var_38] +
add ecx 70h +
call sub_10114A0  +
push eax  +
push offset dword_1001F14  +
mov ecx [ebp+var_5C] +
push ecx  +
mov edx [ebp+var_5C] +
mov eax [edx] +
mov ecx [eax] +
call ecx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jl loc_1010BB0  +
mov edx [ebp+var_38] +
mov dword ptr [edx+90h] 3 +
jmp loc_1010BBF  +
mov eax [ebp+var_38] +
mov dword ptr [eax+90h] 7 +
cmp [ebp+var_14] 0 +
jge loc_1010C07  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_60] eax +
mov ecx [ebp+var_38] +
add ecx 70h +
call sub_10114A0  +
push eax  +
push offset dword_1001F04  +
mov ecx [ebp+var_60] +
push ecx  +
mov edx [ebp+var_60] +
mov eax [edx] +
mov ecx [eax] +
call ecx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jl loc_1010C07  +
mov edx [ebp+var_38] +
mov dword ptr [edx+90h] 1 +
mov eax [ebp+var_38] +
mov edx [eax] +
mov ecx [ebp+var_38] +
mov eax [edx+10h] +
call eax  +
push eax  +
lea ecx [ebp+var_18] +
call sub_1012570  +
mov [ebp+var_4] 4 +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_64] eax +
mov ecx [ebp+var_38] +
add ecx 9Ch +
push ecx  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
mov edx [ebp+var_64] +
push edx  +
mov eax [ebp+var_64] +
mov ecx [eax] +
mov edx [ecx+4Ch] +
call edx  +
mov ecx [ebp+var_38] +
add ecx 70h +
call sub_1024680  +
test eax eax +
jz loc_1010C8B  +
mov ecx [ebp+var_38] +
add ecx 70h +
call sub_1024680  +
mov [ebp+var_68] eax +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
push 0  +
push 1  +
mov eax [ebp+var_68] +
push eax  +
mov ecx [ebp+var_68] +
mov edx [ecx] +
mov eax [edx+1Ch] +
call eax  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_6C] eax +
push 0  +
push offset aAxwin  +
mov ecx [ebp+var_6C] +
push ecx  +
mov edx [ebp+var_6C] +
mov eax [edx] +
mov ecx [eax+14h] +
call ecx  +
mov edx [ebp+var_38] +
mov eax [edx+0A0h] +
and eax 400h +
jnz loc_1010E3C  +
mov ecx [ebp+var_38] +
add ecx 0B4h +
push ecx  +
mov ecx [ebp+var_38] +
add ecx 4 +
call sub_100D6B0  +
mov edx [ebp+var_38] +
mov eax [ebp+var_38] +
mov ecx [edx+0BCh] +
sub ecx [eax+0B4h] +
mov edx [ebp+var_38] +
mov [edx+0ACh] ecx +
mov eax [ebp+var_38] +
mov ecx [ebp+var_38] +
mov edx [eax+0C0h] +
sub edx [ecx+0B8h] +
mov eax [ebp+var_38] +
mov [eax+0B0h] edx +
mov ecx [ebp+var_38] +
add ecx 0A4h +
push ecx  +
mov edx [ebp+var_38] +
add edx 0ACh +
push edx  +
call sub_10113E0  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_70] eax +
mov eax [ebp+var_38] +
add eax 0A4h +
push eax  +
push 1  +
mov ecx [ebp+var_70] +
push ecx  +
mov edx [ebp+var_70] +
mov eax [edx] +
mov ecx [eax+44h] +
call ecx  +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_74] eax +
mov edx [ebp+var_38] +
add edx 0A4h +
push edx  +
push 1  +
mov eax [ebp+var_74] +
push eax  +
mov ecx [ebp+var_74] +
mov edx [ecx] +
mov eax [edx+48h] +
call eax  +
mov ecx [ebp+var_38] +
add ecx 0ACh +
push ecx  +
mov edx [ebp+var_38] +
add edx 0A4h +
push edx  +
call sub_1011320  +
mov eax [ebp+var_38] +
mov ecx [eax+0B4h] +
mov edx [ebp+var_38] +
add ecx [edx+0ACh] +
mov eax [ebp+var_38] +
mov [eax+0BCh] ecx +
mov ecx [ebp+var_38] +
mov edx [ecx+0B8h] +
mov eax [ebp+var_38] +
add edx [eax+0B0h] +
mov ecx [ebp+var_38] +
mov [ecx+0C0h] edx +
mov edx [ebp+var_38] +
mov eax [edx] +
mov ecx [ebp+var_38] +
mov edx [eax+10h] +
call edx  +
push eax  +
lea ecx [ebp+var_2C] +
call sub_1012490  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_38] +
add ecx 64h +
call sub_1024680  +
mov [ebp+var_78] eax +
mov eax [ebp+var_38] +
add eax 0B4h +
push eax  +
mov ecx [ebp+var_38] +
mov edx [ecx+4] +
push edx  +
push 0  +
lea ecx [ebp+var_2C] +
call sub_1024680  +
push eax  +
push 0  +
push 0FFFFFFFBh  +
mov eax [ebp+var_78] +
push eax  +
mov ecx [ebp+var_78] +
mov edx [ecx] +
mov eax [edx+2Ch] +
call eax  +
mov [ebp+var_14] eax +
push 507h  +
push 0  +
push 0  +
mov ecx [ebp+var_38] +
add ecx 4 +
call sub_100D870  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_2C] +
call sub_1025550  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_1025550  +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 6 +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
push offset dword_1001B64  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
push 0  +
lea ecx [ebp+var_10] +
call sub_1012320  +
movzx edx al +
test edx edx +
jz loc_1010EAD  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_7C] eax +
mov eax [ebp+var_38] +
mov edx [eax] +
mov ecx [ebp+var_38] +
mov eax [edx+10h] +
call eax  +
push eax  +
mov ecx [ebp+var_7C] +
push ecx  +
mov edx [ebp+var_7C] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov edx [ebp+var_14] +
mov [ebp+var_34] edx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov eax [ebp+var_34] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
mov eax [ebp+hWnd] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1012DF0  +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
and ecx 1 +
shl ecx 4 +
mov edx [ebp+var_4] +
mov eax [edx+0C8h] +
and eax 0FFFFFFEFh +
or eax ecx +
mov ecx [ebp+var_4] +
mov [ecx+0C8h] eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+0C8h] +
shr ecx 4 +
and ecx 1 +
jz loc_1010F6F  +
push 1  +
mov ecx [ebp+var_4] +
call sub_1012E80  +
test eax eax +
jz loc_1010F6D  +
mov edx [ebp+var_4] +
mov eax [edx+0C8h] +
and eax 0FFFFFFEFh +
mov ecx [ebp+var_4] +
mov [ecx+0C8h] eax +
jmp loc_1010F77  +
mov ecx [ebp+var_4] +
call sub_1008B40  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov [ebp+var_1C] ecx +
mov [ebp+hWnd] 0 +
mov eax [ebp+arg_0] +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 39h +
ja loc_1010FC5  +
cmp [ebp+var_20] 39h +
jz loc_10110F3  +
mov ecx [ebp+var_20] +
sub ecx 2Bh +
mov [ebp+var_20] ecx +
cmp [ebp+var_20] 4 +
ja loc_1011117  +
mov edx [ebp+var_20] +
jmp ds:off_10111C0[edx*4]  +
cmp [ebp+var_20] 115h +
ja loc_1010FEF  +
cmp [ebp+var_20] 114h +
jnb loc_1011109  +
cmp [ebp+var_20] 4Eh +
jz loc_1011028  +
cmp [ebp+var_20] 111h +
jz loc_1011017  +
jmp loc_1011117  +
cmp [ebp+var_20] 132h +
jb loc_1011117  +
cmp [ebp+var_20] 138h +
jbe loc_1011111  +
cmp [ebp+var_20] 210h +
jz loc_1011035  +
jmp loc_1011117  +
cmp [ebp+lParam] 0 +
jz loc_1011023  +
mov eax [ebp+lParam] +
mov [ebp+hWnd] eax +
jmp loc_1011117  +
mov ecx [ebp+lParam] +
mov edx [ecx] +
mov [ebp+hWnd] edx +
jmp loc_1011117  +
mov ecx [ebp+var_1C] +
call sub_10114E0  +
mov eax [ebp+wParam] +
and eax 0FFFFh +
movzx ecx ax +
mov [ebp+var_24] ecx +
cmp [ebp+var_24] 0 +
jle loc_1011061  +
cmp [ebp+var_24] 2 +
jle loc_1011059  +
jmp loc_1011061  +
mov edx [ebp+lParam] +
mov [ebp+hWnd] edx +
jmp loc_1011089  +
mov eax [ebp+wParam] +
shr eax 10h +
and eax 0FFFFh +
movzx ecx ax +
push ecx  +
lea edx [ebp+var_14] +
push edx  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
mov [ebp+hWnd] eax +
jmp loc_1011117  +
mov eax [ebp+lParam] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx] 1 +
jz loc_10110A7  +
mov edx [ebp+var_8] +
mov eax [edx+14h] +
mov [ebp+hWnd] eax +
jmp loc_10110C1  +
mov ecx [ebp+var_8] +
mov edx [ecx+14h] +
push edx  +
call ds:IsWindow  +
test eax eax +
jz loc_10110C1  +
mov eax [ebp+var_8] +
mov ecx [eax+14h] +
mov [ebp+hWnd] ecx +
jmp loc_1011117  +
mov edx [ebp+lParam] +
mov [ebp+var_C] edx +
mov eax [ebp+var_C] +
cmp dword ptr [eax] 1 +
jz loc_10110F1  +
mov ecx [ebp+var_C] +
mov edx [ecx+4] +
push edx  +
lea eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
mov [ebp+hWnd] eax +
jmp loc_1011117  +
mov ecx [ebp+lParam] +
mov edx [ecx+8] +
mov [ebp+hWnd] edx +
jmp loc_1011117  +
mov eax [ebp+lParam] +
mov ecx [eax+0Ch] +
mov [ebp+hWnd] ecx +
jmp loc_1011117  +
mov edx [ebp+lParam] +
mov [ebp+hWnd] edx +
jmp loc_1011117  +
mov eax [ebp+lParam] +
mov [ebp+hWnd] eax +
cmp [ebp+hWnd] 0 +
jnz loc_1011130  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
mov eax 1 +
jmp loc_10111B7  +
mov edx [ebp+var_1C] +
mov eax [edx+98h] +
shr eax 3 +
and eax 1 +
jz loc_101119B  +
mov [ebp+var_10] 0 +
mov ecx [ebp+var_1C] +
mov edx [ecx+98h] +
and edx 1 +
jz loc_1011196  +
mov ecx [ebp+var_1C] +
add ecx 74h +
call sub_1024680  +
test eax eax +
jz loc_1011196  +
mov ecx [ebp+var_1C] +
add ecx 74h +
call sub_1024680  +
mov [ebp+var_28] eax +
lea eax [ebp+var_10] +
push eax  +
mov ecx [ebp+lParam] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
mov eax [ebp+arg_0] +
add eax 2000h +
push eax  +
mov ecx [ebp+var_28] +
push ecx  +
mov edx [ebp+var_28] +
mov eax [edx] +
mov ecx [eax+24h] +
call ecx  +
mov eax [ebp+var_10] +
jmp loc_10111B7  +
mov edx [ebp+lParam] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
mov ecx [ebp+arg_0] +
add ecx 2000h +
push ecx  +
mov edx [ebp+hWnd] +
push edx  +
call ds:SendMessageW  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+nIDDlgItem] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:GetDlgItem  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_1007F90  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp dword ptr [ebp+14h] 0 +
jnz loc_1011225  +
mov eax 80004003h +
jmp loc_101127E  +
mov eax [ebp+14h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp-4] 80004002h +
cmp dword ptr [ebp-4] 0 +
jge loc_101127B  +
mov ecx [ebp+8] +
add ecx 9Ch +
call sub_1024680  +
test eax eax +
jz loc_101127B  +
mov ecx [ebp+8] +
add ecx 9Ch +
call sub_1024680  +
mov [ebp-8] eax +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
push ecx  +
mov edx [ebp-8] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp-4] eax +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1023950  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1023950  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1012550  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1011300  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1011290  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
xor eax eax +
cmp [ebp+arg_0] 0 +
setnz al  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jnz loc_1011344  +
push 80004003h  +
call sub_1007F50  +
xor ecx ecx +
jnz loc_1011328  +
xor edx edx +
cmp [ebp+arg_4] 0 +
setnz dl  +
mov [ebp+var_14] edx +
cmp [ebp+var_14] 0 +
jnz loc_1011364  +
push 80004003h  +
call sub_1007F50  +
xor eax eax +
jnz loc_1011348  +
push 0  +
call ds:GetDC  +
mov [ebp+hDC] eax +
push 58h  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:GetDeviceCaps  +
mov [ebp+nNumber] eax +
push 5Ah  +
mov edx [ebp+hDC] +
push edx  +
call ds:GetDeviceCaps  +
mov [ebp+var_4] eax +
mov eax [ebp+hDC] +
push eax  +
push 0  +
call ds:ReleaseDC  +
push 9ECh  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
push edx  +
mov eax [ebp+nNumber] +
push eax  +
call ds:MulDiv  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
push 9ECh  +
mov edx [ebp+arg_0] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call ds:MulDiv  +
mov edx [ebp+arg_4] +
mov [edx+4] eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
xor eax eax +
cmp [ebp+arg_0] 0 +
setnz al  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jnz loc_1011404  +
push 80004003h  +
call sub_1007F50  +
xor ecx ecx +
jnz loc_10113E8  +
xor edx edx +
cmp [ebp+arg_4] 0 +
setnz dl  +
mov [ebp+var_14] edx +
cmp [ebp+var_14] 0 +
jnz loc_1011424  +
push 80004003h  +
call sub_1007F50  +
xor eax eax +
jnz loc_1011408  +
push 0  +
call ds:GetDC  +
mov [ebp+hDC] eax +
push 58h  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:GetDeviceCaps  +
mov [ebp+nDenominator] eax +
push 5Ah  +
mov edx [ebp+hDC] +
push edx  +
call ds:GetDeviceCaps  +
mov [ebp+var_4] eax +
mov eax [ebp+hDC] +
push eax  +
push 0  +
call ds:ReleaseDC  +
mov ecx [ebp+nDenominator] +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx] +
push eax  +
push 9ECh  +
call ds:MulDiv  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
push ecx  +
push 9ECh  +
call ds:MulDiv  +
mov edx [ebp+arg_4] +
mov [edx+4] eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov eax offset loc_1012C80 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
mov ecx [eax+18h] +
mov [ebp+var_4] ecx +
mov [ebp+var_8] 0 +
cmp [ebp+var_4] 0 +
jz loc_1011521  +
mov edx [ebp+var_4] +
mov eax [edx+0Ch] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+8] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
mov ecx [ebp+var_C] +
call sub_1011530  +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx+20h] +
push eax  +
call ds:CallWindowProcW  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp [ebp+arg_0] 0 +
jz loc_1011589  +
mov eax [ebp+arg_0] +
sub eax 38h +
mov [ebp+var_8] eax +
jmp loc_1011590  +
mov [ebp+var_8] 0 +
mov ecx [ebp+var_8] +
mov [ebp+var_4] ecx +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_4] +
add ecx 3Ch +
call sub_10122A0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp dword ptr [ebp+8] 0 +
jz loc_10115D9  +
mov eax [ebp+8] +
sub eax 38h +
mov [ebp-0Ch] eax +
jmp loc_10115E0  +
mov dword ptr [ebp-0Ch] 0 +
mov ecx [ebp-0Ch] +
mov [ebp-4] ecx +
mov dword ptr [ebp-8] 80004003h +
cmp dword ptr [ebp+10h] 0 +
jz loc_101163A  +
mov ecx [ebp-4] +
add ecx 3Ch +
call sub_1024680  +
test eax eax +
jz loc_101162A  +
mov ecx [ebp-4] +
add ecx 3Ch +
call sub_1024680  +
mov [ebp-10h] eax +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-10h] +
push ecx  +
mov edx [ebp-10h] +
mov eax [edx] +
mov ecx [eax] +
call ecx  +
mov [ebp-8] eax +
jmp loc_101163A  +
mov edx [ebp+10h] +
mov dword ptr [edx] 0 +
mov dword ptr [ebp-8] 80004005h +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1011662  +
mov eax 80004003h +
jmp loc_101166D  +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 1 +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx offset off_103B0CC +
call sub_10116B0  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] 0 +
jz loc_10116C6  +
mov eax 8002000Bh +
jmp loc_10116D6  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+lcid] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_10116F0  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
cmp [ebp+arg_4] 0 +
jnz loc_1011708  +
mov eax 80004003h +
jmp loc_1011759  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_8] +
cmp dword ptr [eax+0Ch] 0 +
jnz loc_1011727  +
mov ecx [ebp+lcid] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_1011770  +
mov [ebp+var_4] eax +
mov edx [ebp+arg_4] +
mov eax [ebp+var_8] +
mov ecx [eax+0Ch] +
mov [edx] ecx +
mov edx [ebp+var_8] +
cmp dword ptr [edx+0Ch] 0 +
jz loc_1011756  +
mov eax [ebp+var_8] +
mov ecx [eax+0Ch] +
mov edx [ebp+var_8] +
mov eax [edx+0Ch] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+4] +
call edx  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035584  +
mov eax large fs:0 +
push eax  +
sub esp 250h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_24] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_25C] ecx +
xor eax eax +
jnz loc_10117A3  +
xor ecx ecx +
jnz loc_10117A3  +
xor edx edx +
jnz loc_10117AB  +
xor eax eax +
jnz loc_10117AB  +
mov ecx [ebp+var_25C] +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_10117D2  +
mov edx [ebp+var_25C] +
cmp dword ptr [edx+14h] 0 +
jz loc_10117D2  +
xor eax eax +
jmp loc_1011A99  +
push 0  +
mov eax dword_103B4F4 +
add eax 10h +
push eax  +
lea ecx [ebp+var_14] +
call sub_10097C0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_1009840  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jge loc_1011820  +
mov ecx [ebp+var_18] +
mov [ebp+var_254] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1009810  +
mov eax [ebp+var_254] +
jmp loc_1011A99  +
mov [ebp+var_18] 80004005h +
mov edx [ebp+var_25C] +
cmp dword ptr [edx+0Ch] 0 +
jnz loc_1011A44  +
mov [ebp+pptlib] 0 +
mov eax [ebp+var_25C] +
mov ecx [eax+4] +
push ecx  +
push offset unk_103B4F8  +
call sub_100B840  +
test eax eax +
jz loc_101190A  +
mov edx [ebp+var_25C] +
movzx eax word ptr [edx+8] +
cmp eax 0FFFFh +
jnz loc_101190A  +
mov ecx [ebp+var_25C] +
movzx edx word ptr [ecx+0Ah] +
cmp edx 0FFFFh +
jnz loc_101190A  +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
mov ecx offset unk_103BC00 +
call sub_1022700  +
push eax  +
call ds:GetModuleFileNameW  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jz loc_1011908  +
cmp [ebp+var_20] 104h +
jz loc_1011908  +
call sub_100A5D0  +
mov [ebp+var_238] eax +
lea ecx [ebp+var_244] +
call sub_100B430  +
mov byte ptr [ebp+var_4] 1 +
push 400h  +
lea ecx [ebp+Filename] +
push ecx  +
call sub_1011AC0  +
mov [ebp+szFile] eax +
lea edx [ebp+pptlib] +
push edx  +
mov eax [ebp+szFile] +
push eax  +
call ds:LoadTypeLib  +
mov [ebp+var_18] eax +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_244] +
call sub_100AEF0  +
jmp loc_101193B  +
lea ecx [ebp+pptlib] +
push ecx  +
mov edx [ebp+lcid] +
push edx  +
mov eax [ebp+var_25C] +
movzx ecx word ptr [eax+0Ah] +
push ecx  +
mov edx [ebp+var_25C] +
movzx eax word ptr [edx+8] +
push eax  +
mov ecx [ebp+var_25C] +
mov edx [ecx+4] +
push edx  +
call ds:LoadRegTypeLib  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_1011A42  +
lea ecx [ebp+var_248] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_248] +
call sub_10114A0  +
push eax  +
mov eax [ebp+var_25C] +
mov ecx [eax] +
push ecx  +
mov edx [ebp+pptlib] +
mov eax [edx] +
mov ecx [ebp+pptlib] +
push ecx  +
mov edx [eax+18h] +
call edx  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_1011A25  +
lea eax [ebp+var_248] +
push eax  +
lea ecx [ebp+var_24C] +
call sub_1011FD0  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_250] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_250] +
call sub_10114A0  +
push eax  +
lea ecx [ebp+var_248] +
call sub_1024680  +
push eax  +
call sub_1012BA0  +
test eax eax +
jl loc_10119DC  +
lea ecx [ebp+var_250] +
push ecx  +
lea ecx [ebp+var_24C] +
call sub_1012BD0  +
lea ecx [ebp+var_24C] +
call sub_101AC70  +
mov edx [ebp+var_25C] +
mov [edx+0Ch] eax +
mov eax [ebp+var_25C] +
push eax  +
push offset loc_1011F50  +
mov ecx dword_103B4F4 +
call sub_1011AE0  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_250] +
call sub_1023C70  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_24C] +
call sub_1023C70  +
mov ecx [ebp+pptlib] +
mov edx [ecx] +
mov eax [ebp+pptlib] +
push eax  +
mov ecx [edx+8] +
call ecx  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_248] +
call sub_1023C70  +
jmp loc_1011A4B  +
mov [ebp+var_18] 0 +
mov edx [ebp+var_25C] +
cmp dword ptr [edx+0Ch] 0 +
jz loc_1011A7B  +
mov eax [ebp+var_25C] +
cmp dword ptr [eax+14h] 0 +
jnz loc_1011A7B  +
mov ecx [ebp+var_25C] +
mov edx [ecx+0Ch] +
push edx  +
mov ecx [ebp+var_25C] +
call sub_1011C40  +
mov [ebp+var_18] eax +
mov eax [ebp+var_18] +
mov [ebp+var_258] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1009810  +
mov eax [ebp+var_258] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_24] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jz loc_1011AFC  +
mov eax [ebp+var_4] +
add eax 4 +
mov [ebp+var_8] eax +
jmp loc_1011B03  +
mov [ebp+var_8] 0 +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_8] +
push eax  +
call sub_1011B20  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10355C8  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
cmp [ebp+arg_0] 0 +
jnz loc_1011B5E  +
mov eax 80070057h +
jmp loc_1011C26  +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 0 +
mov [ebp+var_4] 0 +
push 0Ch  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_2C] eax +
mov eax [ebp+var_2C] +
mov [ebp+var_24] eax +
mov ecx [ebp+var_24] +
mov [ebp+var_14] ecx +
jmp loc_1011B9B  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1011BA2 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 0 +
jnz loc_1011BB1  +
mov [ebp+var_18] 8007000Eh +
jmp loc_1011C23  +
mov edx [ebp+var_14] +
mov eax [ebp+arg_4] +
mov [edx] eax +
mov ecx [ebp+var_14] +
mov edx [ebp+arg_8] +
mov [ecx+4] edx +
push 0  +
mov eax [ebp+arg_0] +
add eax 0Ch +
push eax  +
lea ecx [ebp+var_20] +
call sub_10097C0  +
mov [ebp+var_4] 2 +
lea ecx [ebp+var_20] +
call sub_1009840  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_1011C02  +
mov ecx [ebp+var_14] +
mov edx [ebp+arg_0] +
mov eax [edx+8] +
mov [ecx+8] eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_14] +
mov [ecx+8] edx +
jmp loc_1011C14  +
mov eax [ebp+var_14] +
mov [ebp+var_28] eax +
mov ecx [ebp+var_28] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_20] +
call sub_1009810  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035603  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_38] ecx +
lea eax [ebp+var_18] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jl loc_1011EA7  +
mov [ebp+var_1C] 0 +
mov edx [ebp+var_18] +
movzx eax word ptr [edx+2Ch] +
mov ecx [ebp+var_38] +
mov [ecx+18h] eax +
mov edx [ebp+var_38] +
mov dword ptr [edx+14h] 0 +
mov eax [ebp+var_38] +
cmp dword ptr [eax+18h] 0 +
jz loc_1011D84  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_38] +
mov edx [ecx+18h] +
mov [ebp+var_2C] edx +
xor ecx ecx +
mov eax [ebp+var_2C] +
mov edx 0Ch +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_3C] eax +
mov ecx [ebp+var_3C] +
mov [ebp+var_34] ecx +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_34] 0 +
jz loc_1011D35  +
mov edx [ebp+var_34] +
mov eax [ebp+var_2C] +
mov [edx] eax +
push offset sub_1007420  +
push offset loc_1011F10  +
mov ecx [ebp+var_2C] +
push ecx  +
push 0Ch  +
mov edx [ebp+var_34] +
add edx 4 +
push edx  +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov eax [ebp+var_34] +
add eax 4 +
mov [ebp+var_40] eax +
jmp loc_1011D3C  +
mov [ebp+var_40] 0 +
mov ecx [ebp+var_40] +
mov [ebp+var_30] ecx +
mov byte ptr [ebp+var_4] 0 +
mov edx [ebp+var_30] +
mov [ebp+var_1C] edx +
jmp loc_1011D5B  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1011D62 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_1C] 0 +
jnz loc_1011D84  +
mov eax [ebp+var_18] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [eax+4Ch] +
call ecx  +
mov eax 8007000Eh +
jmp loc_1011EA9  +
mov [ebp+var_20] 0 +
jmp loc_1011D96  +
mov edx [ebp+var_20] +
add edx 1 +
mov [ebp+var_20] edx +
mov eax [ebp+var_38] +
mov ecx [ebp+var_20] +
cmp ecx [eax+18h] +
jge loc_1011E8C  +
mov edx [ebp+var_20] +
imul edx edx +
mov eax [ebp+var_1C] +
mov dword ptr [eax+edx+4] 0 +
mov ecx [ebp+var_20] +
imul ecx ecx +
mov edx [ebp+var_1C] +
mov dword ptr [edx+ecx+8] 0 +
lea eax [ebp+var_24] +
push eax  +
mov ecx [ebp+var_20] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ecx+14h] +
call edx  +
test eax eax +
jl loc_1011E87  +
lea ecx [ebp+var_28] +
call sub_100B430  +
mov [ebp+var_4] 3 +
push 0  +
push 0  +
push 0  +
lea ecx [ebp+var_28] +
call sub_10114A0  +
push eax  +
mov eax [ebp+var_24] +
mov ecx [eax] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ecx+30h] +
call edx  +
test eax eax +
jl loc_1011E66  +
lea ecx [ebp+var_28] +
call sub_101AC70  +
push eax  +
mov ecx [ebp+var_20] +
imul ecx ecx +
add ecx [ebp+var_1C] +
call sub_1011ED0  +
mov esi [ebp+var_20] +
imul esi esi +
mov ecx [ebp+var_20] +
imul ecx ecx +
add ecx [ebp+var_1C] +
call sub_1024680  +
push eax  +
call ds:SysStringLen  +
mov ecx [ebp+var_1C] +
mov [ecx+esi+4] eax +
mov edx [ebp+var_20] +
imul edx edx +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_24] +
mov ecx [ecx] +
mov [eax+edx+8] ecx +
mov edx [ebp+var_24] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [edx+50h] +
call eax  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_1007440  +
jmp loc_1011D8D  +
mov ecx [ebp+var_38] +
mov edx [ebp+var_1C] +
mov [ecx+14h] edx +
mov eax [ebp+var_18] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [eax+4Ch] +
call ecx  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
cmp ecx [ebp+arg_0] +
jz loc_1011EF7  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:SysFreeString  +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_0] +
mov [ecx] edx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_100B430  +
mov eax [ebp-4] +
mov dword ptr [eax+4] 0 +
mov ecx [ebp-4] +
mov dword ptr [ecx+8] 0FFFFFFFFh +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp dword ptr [ebp+8] 0 +
jnz loc_1011F60  +
jmp loc_1011FC2  +
mov eax [ebp+8] +
mov [ebp-4] eax +
mov ecx [ebp-4] +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_1011F83  +
mov edx [ebp-4] +
mov eax [edx+0Ch] +
mov ecx [ebp-4] +
mov edx [ecx+0Ch] +
mov eax [eax] +
push edx  +
mov ecx [eax+8] +
call ecx  +
mov edx [ebp-4] +
mov dword ptr [edx+0Ch] 0 +
mov eax [ebp-4] +
mov ecx [eax+14h] +
mov [ebp-0Ch] ecx +
mov edx [ebp-0Ch] +
mov [ebp-8] edx +
cmp dword ptr [ebp-8] 0 +
jz loc_1011FB1  +
push 3  +
mov ecx [ebp-8] +
call sub_10073A0  +
mov [ebp-10h] eax +
jmp loc_1011FB8  +
mov dword ptr [ebp-10h] 0 +
mov eax [ebp-4] +
mov dword ptr [eax+14h] 0 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_10128C0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+1Ch] +
push eax  +
mov ecx [ebp+18h] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx offset off_103B0CC +
call sub_1012030  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_10] ecx +
mov eax [ebp+lcid] +
push eax  +
mov ecx [ebp+var_10] +
call sub_1012150  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_1012133  +
mov [ebp+var_4] 80004005h +
mov edx [ebp+var_10] +
cmp dword ptr [edx+14h] 0 +
jz loc_101210A  +
cmp [ebp+arg_8] 1 +
jnz loc_101210A  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push ecx  +
call sub_100DEF0  +
mov [ebp+var_8] eax +
mov edx [ebp+var_10] +
mov eax [edx+18h] +
sub eax 1 +
mov [ebp+var_C] eax +
jmp loc_101209D  +
mov ecx [ebp+var_C] +
sub ecx 1 +
mov [ebp+var_C] ecx +
cmp [ebp+var_C] 0 +
jl loc_101210A  +
mov edx [ebp+var_C] +
imul edx edx +
mov eax [ebp+var_10] +
mov ecx [eax+14h] +
mov eax [ebp+var_8] +
cmp eax [ecx+edx+4] +
jnz loc_1012108  +
mov ecx [ebp+var_C] +
imul ecx ecx +
mov edx [ebp+var_10] +
mov eax [edx+14h] +
mov ebx [eax+ecx+4] +
shl ebx 1 +
mov ecx [ebp+arg_4] +
mov edi [ecx] +
mov ecx [ebp+var_C] +
imul ecx ecx +
mov edx [ebp+var_10] +
add ecx [edx+14h] +
call sub_1024680  +
mov esi eax +
mov ecx ebx +
xor eax eax +
cmps   +
jnz loc_1012108  +
mov ecx [ebp+var_C] +
imul ecx ecx +
mov edx [ebp+var_10] +
mov eax [edx+14h] +
mov edx [ebp+arg_10] +
mov eax [eax+ecx+8] +
mov [edx] eax +
mov [ebp+var_4] 0 +
jmp loc_101210A  +
jmp loc_1012094  +
cmp [ebp+var_4] 0 +
jge loc_1012133  +
mov ecx [ebp+arg_10] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_10] +
mov edx [ecx+0Ch] +
mov eax [ebp+var_10] +
mov ecx [eax+0Ch] +
mov edx [edx] +
push ecx  +
mov eax [edx+28h] +
call eax  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+var_8] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_1012174  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+14h] 0 +
jnz loc_1012183  +
mov edx [ebp+lcid] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1011770  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_20] +
push eax  +
mov ecx [ebp+arg_1C] +
push ecx  +
mov edx [ebp+arg_18] +
push edx  +
mov eax [ebp+arg_14] +
push eax  +
movzx ecx [ebp+arg_10] +
push ecx  +
mov edx [ebp+lcid] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx offset off_103B0CC +
call sub_10121E0  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+lcid] +
push eax  +
mov ecx [ebp+var_8] +
call sub_1012150  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_1012237  +
mov edx [ebp+arg_20] +
push edx  +
mov eax [ebp+arg_1C] +
push eax  +
mov ecx [ebp+arg_18] +
push ecx  +
mov edx [ebp+arg_14] +
push edx  +
movzx eax [ebp+arg_10] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_8] +
mov ecx [eax+0Ch] +
mov edx [ebp+var_8] +
mov eax [edx+0Ch] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+2Ch] +
call edx  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] 0 +
jnz loc_1012266  +
mov eax 80004003h +
jmp loc_101228C  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov [eax] edx +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 0 +
jz loc_101228A  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [edx] +
push ecx  +
mov eax [edx+4] +
call eax  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1012320  +
movzx ecx al +
test ecx ecx +
jz loc_10122CB  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_4] +
push eax  +
call sub_100D930  +
jmp loc_10122D3  +
mov ecx [ebp+var_4] +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012550  +
cmp [ebp+arg_0] 0 +
jz loc_101230D  +
mov eax [ebp+var_4] +
push eax  +
push offset dword_1001F44  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1012890  +
movzx eax al +
neg eax  +
sbb eax eax +
add eax 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012550  +
cmp [ebp+arg_0] 0 +
jz loc_101237D  +
mov eax [ebp+var_4] +
push eax  +
push offset dword_1001F54  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012640  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1001F64 +
mov ecx dword_103B4F4 +
mov edx [ecx] +
mov ecx dword_103B4F4 +
mov eax [edx+4] +
call eax  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
add ecx 18h +
call sub_1012900  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov ecx [ebp+8] +
add ecx 18h +
call sub_1012950  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jnz loc_1012439  +
mov eax [ebp+8] +
mov [ebp-0Ch] eax +
mov ecx [ebp-0Ch] +
mov [ebp-8] ecx +
cmp dword ptr [ebp-8] 0 +
jz loc_1012432  +
push 1  +
mov edx [ebp-8] +
mov eax [edx] +
mov ecx [ebp-8] +
mov edx [eax+1Ch] +
call edx  +
mov [ebp-10h] eax +
jmp loc_1012439  +
mov dword ptr [ebp-10h] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
call sub_1012990  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov edx [ecx+8] +
mov [eax+10h] edx +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012550  +
cmp [ebp+arg_0] 0 +
jz loc_10124BD  +
mov eax [ebp+var_4] +
push eax  +
push offset dword_1001AF4  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012550  +
cmp [ebp+arg_0] 0 +
jz loc_10124FD  +
mov eax [ebp+var_4] +
push eax  +
push offset dword_1001E24  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012550  +
cmp [ebp+arg_0] 0 +
jz loc_101253D  +
mov eax [ebp+var_4] +
push eax  +
push offset dword_1001F84  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_100B430  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012550  +
cmp [ebp+arg_0] 0 +
jz loc_101259D  +
mov eax [ebp+var_4] +
push eax  +
push offset dword_1001BB4  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_10125F0  +
mov eax [ebp+8] +
and eax 1 +
jz loc_10125D5  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1001F64 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+18h] 0C0000001h +
mov ecx [ebp+var_4] +
add ecx 18h +
call sub_100B410  +
mov edx dword_103B4F4 +
mov eax [edx] +
mov ecx dword_103B4F4 +
mov edx [eax+8] +
call edx  +
mov ecx [ebp+var_4] +
call sub_1012780  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035638  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_10129C0  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 18h +
call sub_10126A0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035668  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_100B430  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1012700  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012720  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012750  +
mov eax [ebp+var_4] +
mov byte ptr [eax+18h] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov [ecx+10h] eax +
mov [ecx+14h] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035638  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 18h +
call sub_10127E0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
call sub_1013230  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1012810  +
mov ecx [ebp+var_4] +
call sub_100B410  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012830  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
movzx ecx byte ptr [eax+18h] +
test ecx ecx +
jnz loc_1012846  +
jmp loc_1012855  +
mov edx [ebp+var_4] +
mov byte ptr [edx+18h] 0 +
mov ecx [ebp+var_4] +
call sub_1012870  +
mov ecx [ebp+var_4] +
call sub_100B410  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpCriticalSection] ecx +
mov eax [ebp+lpCriticalSection] +
push eax  +
call ds:DeleteCriticalSection  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
xor eax eax +
cmp ecx [ebp+arg_0] +
setz al  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov edx [ebp+var_4] +
cmp dword ptr [edx] 0 +
jz loc_10128EB  +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+4] +
call edx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpAddend] ecx +
xor eax eax +
jnz loc_1012909  +
xor ecx ecx +
jnz loc_1012909  +
mov edx [ebp+lpAddend] +
push edx  +
call sub_1012930  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpAddend] +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpAddend] ecx +
mov eax [ebp+lpAddend] +
push eax  +
call sub_1012970  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpAddend] +
push eax  +
call ds:InterlockedDecrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1012B10  +
push eax  +
mov edx [ebp+var_4] +
push edx  +
call sub_100B6E0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1023950  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1012550  +
mov eax [ebp+var_4] +
mov dword ptr [eax+10h] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+0Ch] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+8] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+14h] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
add ecx 2Ch +
call sub_1012A30  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+4] +
call edx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
add ecx 2Ch +
call sub_1012A80  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+8] +
call edx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
add ecx 2Ch +
call sub_1012AE0  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [eax] +
push edx  +
mov ecx [eax] +
call ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset off_1001F94 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov dx [ecx] +
mov [eax] dx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_100B9A0  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1012B85  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push eax  +
push offset dword_1001FAC  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_0] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_4] +
call sub_1013AD0  +
movzx eax al +
test eax eax +
jnz loc_1012C0A  +
push offset dword_1001FBC  +
mov ecx [ebp+arg_0] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1012C20  +
jmp loc_1012C12  +
mov ecx [ebp+var_4] +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
jnz loc_1012C30  +
xor eax eax +
jmp loc_1012C75  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
mov edx [ebp+arg_0] +
mov dword ptr [edx] 0 +
cmp [ebp+arg_4] 0 +
jz loc_1012C5C  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx] +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [eax] +
call edx  +
cmp [ebp+var_4] 0 +
jz loc_1012C70  +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
push edx  +
mov eax [ecx+8] +
call eax  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax [ebp+8] +
mov [ebp-8] eax +
push 1  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
mov edx [ecx+4] +
push edx  +
lea ecx [ebp-2Ch] +
call sub_1009040  +
mov eax [ebp-8] +
mov ecx [eax+18h] +
mov [ebp-34h] ecx +
mov edx [ebp-8] +
lea eax [ebp-2Ch] +
mov [edx+18h] eax +
push 0  +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov edx [ebp-8] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp-8] +
mov edx [ecx] +
mov ecx [ebp-8] +
mov eax [edx] +
call eax  +
mov [ebp-30h] eax +
cmp dword ptr [ebp-30h] 0 +
jnz loc_1012D7E  +
cmp dword ptr [ebp+0Ch] 82h +
jz loc_1012D11  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_1011530  +
mov [ebp-4] eax +
jmp loc_1012D7E  +
push 0FFFFFFFCh  +
mov ecx [ebp-8] +
mov edx [ecx+4] +
push edx  +
call sub_1009020  +
mov [ebp-38h] eax +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1011530  +
mov [ebp-4] eax +
mov eax [ebp-8] +
mov ecx [eax+20h] +
cmp ecx ds:DefWindowProcW +
jz loc_1012D6F  +
push 0FFFFFFFCh  +
mov edx [ebp-8] +
mov eax [edx+4] +
push eax  +
call sub_1009020  +
cmp eax [ebp-38h] +
jnz loc_1012D6F  +
mov ecx [ebp-8] +
mov edx [ecx+20h] +
push edx  +
push 0FFFFFFFCh  +
mov eax [ebp-8] +
mov ecx [eax+4] +
push ecx  +
call sub_1009000  +
mov edx [ebp-8] +
mov eax [edx+1Ch] +
or eax 1 +
mov ecx [ebp-8] +
mov [ecx+1Ch] eax +
mov edx [ebp-8] +
mov eax [edx+1Ch] +
and eax 1 +
jz loc_1012DCD  +
cmp dword ptr [ebp-34h] 0 +
jnz loc_1012DCD  +
mov ecx [ebp-8] +
mov edx [ecx+4] +
mov [ebp-3Ch] edx +
mov eax [ebp-8] +
mov dword ptr [eax+4] 0 +
mov ecx [ebp-8] +
mov edx [ecx+1Ch] +
and edx 0FFFFFFFEh +
mov eax [ebp-8] +
mov [eax+1Ch] edx +
mov ecx [ebp-8] +
mov edx [ebp-34h] +
mov [ecx+18h] edx +
mov eax [ebp-3Ch] +
push eax  +
mov ecx [ebp-8] +
mov edx [ecx] +
mov ecx [ebp-8] +
mov eax [edx+0Ch] +
call eax  +
jmp loc_1012DD6  +
mov ecx [ebp-8] +
mov edx [ebp-34h] +
mov [ecx+18h] edx +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
xor eax eax +
jnz loc_1012DFB  +
xor ecx ecx +
jnz loc_1012DFB  +
mov edx [ebp+var_10] +
push edx  +
mov eax [ebp+var_10] +
mov edx [eax] +
mov ecx [ebp+var_10] +
mov eax [edx+8] +
call eax  +
push eax  +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_1009110  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_1012E2D  +
xor eax eax +
jmp loc_1012E6E  +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_1009230  +
mov [ebp+dwNewLong] eax +
mov ecx [ebp+dwNewLong] +
push ecx  +
push 0FFFFFFFCh  +
mov edx [ebp+hWnd] +
push edx  +
call sub_1009000  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_1012E57  +
xor eax eax +
jmp loc_1012E6E  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_4] +
mov [eax+20h] ecx +
mov edx [ebp+var_10] +
mov eax [ebp+hWnd] +
mov [edx+4] eax +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
xor eax eax +
jnz loc_1012E8B  +
xor ecx ecx +
jnz loc_1012E8B  +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_1009230  +
mov [ebp+var_C] eax +
push 0FFFFFFFCh  +
mov edx [ebp+var_10] +
mov eax [edx+4] +
push eax  +
call sub_1009020  +
mov [ebp+var_8] eax +
mov [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_1012EC7  +
mov ecx [ebp+var_C] +
cmp ecx [ebp+var_8] +
jnz loc_1012F03  +
mov edx [ebp+var_10] +
mov eax [edx+20h] +
push eax  +
push 0FFFFFFFCh  +
mov ecx [ebp+var_10] +
mov edx [ecx+4] +
push edx  +
call sub_1009000  +
test eax eax +
jnz loc_1012EE4  +
xor eax eax +
jmp loc_1012F06  +
mov eax [ebp+var_10] +
mov ecx ds:DefWindowProcW +
mov [eax+20h] ecx +
mov edx [ebp+var_10] +
mov eax [edx+4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035690  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
cmp [ebp+arg_0] 0 +
jnz loc_1012F5E  +
mov eax 80004003h +
jmp loc_101306F  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
mov [ebp+var_18] 8007000Eh +
mov [ebp+var_14] 0 +
mov [ebp+var_4] 0 +
push 4Ch  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_28] eax +
mov ecx [ebp+var_28] +
mov [ebp+var_1C] ecx +
cmp [ebp+var_1C] 0 +
jz loc_1012FA4  +
push 0  +
mov ecx [ebp+var_1C] +
call sub_1013C80  +
mov [ebp+var_2C] eax +
jmp loc_1012FAB  +
mov [ebp+var_2C] 0 +
mov edx [ebp+var_2C] +
mov [ebp+var_14] edx +
jmp loc_1012FC0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1012FC7 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 0 +
jz loc_1013064  +
push 0  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_100B200  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_100B410  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_1013B80  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_101300B  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_101C7E0  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_101301F  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_101C7E0  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_100B220  +
cmp [ebp+var_18] 0 +
jz loc_1013064  +
mov eax [ebp+var_14] +
mov [ebp+var_24] eax +
mov ecx [ebp+var_24] +
mov [ebp+var_20] ecx +
cmp [ebp+var_20] 0 +
jz loc_1013056  +
push 1  +
mov edx [ebp+var_20] +
mov eax [edx] +
mov ecx [ebp+var_20] +
mov edx [eax+4] +
call edx  +
mov [ebp+var_30] eax +
jmp loc_101305D  +
mov [ebp+var_30] 0 +
mov [ebp+var_14] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [eax] ecx +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10356B0  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
cmp [ebp+arg_0] 0 +
jnz loc_10130CE  +
mov eax 80004003h +
jmp loc_10131DF  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
mov [ebp+var_18] 8007000Eh +
mov [ebp+var_14] 0 +
mov [ebp+var_4] 0 +
push 4Ch  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_28] eax +
mov ecx [ebp+var_28] +
mov [ebp+var_1C] ecx +
cmp [ebp+var_1C] 0 +
jz loc_1013114  +
push 0  +
mov ecx [ebp+var_1C] +
call sub_10141B0  +
mov [ebp+var_2C] eax +
jmp loc_101311B  +
mov [ebp+var_2C] 0 +
mov edx [ebp+var_2C] +
mov [ebp+var_14] edx +
jmp loc_1013130  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1013137 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 0 +
jz loc_10131D4  +
push 0  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_100B200  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_100B410  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_1013B80  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_101317B  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_101C7E0  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_101318F  +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_101C7E0  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_14] +
add ecx 28h +
call sub_100B220  +
cmp [ebp+var_18] 0 +
jz loc_10131D4  +
mov eax [ebp+var_14] +
mov [ebp+var_24] eax +
mov ecx [ebp+var_24] +
mov [ebp+var_20] ecx +
cmp [ebp+var_20] 0 +
jz loc_10131C6  +
push 1  +
mov edx [ebp+var_20] +
mov eax [edx] +
mov ecx [ebp+var_20] +
mov edx [eax+4] +
call edx  +
mov [ebp+var_30] eax +
jmp loc_10131CD  +
mov [ebp+var_30] 0 +
mov [ebp+var_14] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [eax] ecx +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
push offset dword_1001AE4  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [edx] +
push ecx  +
mov eax [edx] +
call eax  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_10356DB  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+var_18] +
mov ecx [eax+14h] +
and ecx 2 +
jz loc_10132AB  +
mov edx [ebp+var_18] +
mov eax [edx+8] +
mov [ebp+var_10] eax +
jmp loc_1013280  +
mov ecx [ebp+var_10] +
add ecx 4 +
mov [ebp+var_10] ecx +
mov edx [ebp+var_18] +
mov eax [ebp+var_10] +
cmp eax [edx+0Ch] +
jz loc_1013296  +
mov ecx [ebp+var_10] +
push ecx  +
call sub_1014630  +
jmp loc_1013277  +
mov edx [ebp+var_18] +
mov eax [edx+8] +
mov [ebp+var_14] eax +
mov ecx [ebp+var_14] +
push ecx  +
call ??_V@YAXPAX@Z  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_1023C70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
cmp dword ptr [ebp+14h] 0 +
jz loc_10132F7  +
mov eax [ebp+14h] +
mov dword ptr [eax] 0 +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1013307  +
mov eax 80070057h +
jmp loc_101341C  +
cmp dword ptr [ebp+10h] 0 +
jz loc_1013319  +
cmp dword ptr [ebp+0Ch] 1 +
jz loc_1013323  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_1013323  +
mov eax 80004003h +
jmp loc_101341C  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+8] 0 +
jz loc_101333E  +
mov edx [ebp+8] +
cmp dword ptr [edx+0Ch] 0 +
jz loc_101333E  +
mov eax [ebp+8] +
cmp dword ptr [eax+10h] 0 +
jnz loc_1013348  +
mov eax 80004005h +
jmp loc_101341C  +
mov ecx [ebp+8] +
mov edx [ebp+8] +
mov eax [ecx+0Ch] +
sub eax [edx+10h] +
sar eax 2 +
mov [ebp-10h] eax +
mov dword ptr [ebp-8] 0 +
mov ecx [ebp-10h] +
cmp ecx [ebp+0Ch] +
jnb loc_1013370  +
mov dword ptr [ebp-8] 1 +
mov edx [ebp+0Ch] +
cmp edx [ebp-10h] +
jnb loc_1013380  +
mov eax [ebp+0Ch] +
mov [ebp-18h] eax +
jmp loc_1013386  +
mov ecx [ebp-10h] +
mov [ebp-18h] ecx +
mov edx [ebp-18h] +
mov [ebp-0Ch] edx +
cmp dword ptr [ebp+14h] 0 +
jz loc_101339A  +
mov eax [ebp+14h] +
mov ecx [ebp-0Ch] +
mov [eax] ecx +
mov edx [ebp+10h] +
mov [ebp-4] edx +
mov eax [ebp-0Ch] +
mov ecx [ebp-0Ch] +
sub ecx 1 +
mov [ebp-0Ch] ecx +
test eax eax +
jz loc_1013419  +
mov edx [ebp+8] +
mov eax [edx+10h] +
push eax  +
mov ecx [ebp-4] +
push ecx  +
call sub_10145B0  +
mov [ebp-14h] eax +
cmp dword ptr [ebp-14h] 0 +
jge loc_10133FF  +
mov edx [ebp+10h] +
cmp edx [ebp-4] +
jnb loc_10133EB  +
mov eax [ebp+10h] +
mov [ebp-1Ch] eax +
mov ecx [ebp-1Ch] +
push ecx  +
call sub_1014630  +
mov edx [ebp+10h] +
add edx 4 +
mov [ebp+10h] edx +
jmp loc_10133C9  +
***
cmp dword ptr [ebp+14h] 0 +
jz loc_10133FA  +
mov eax [ebp+14h] +
mov dword ptr [eax] 0 +
mov eax [ebp-14h] +
jmp loc_101341C  +
mov ecx [ebp-4] +
add ecx 4 +
mov [ebp-4] ecx +
mov edx [ebp+8] +
mov eax [edx+10h] +
add eax 4 +
mov ecx [ebp+8] +
mov [ecx+10h] eax +
jmp loc_10133A0  +
***
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1013445  +
mov eax 80070057h +
jmp loc_1013492  +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov edx [eax+0Ch] +
sub edx [ecx+10h] +
sar edx 2 +
mov [ebp-8] edx +
mov eax [ebp+0Ch] +
cmp eax [ebp-8] +
jbe loc_1013467  +
mov ecx [ebp-8] +
mov [ebp-0Ch] ecx +
jmp loc_101346D  +
mov edx [ebp+0Ch] +
mov [ebp-0Ch] edx +
mov eax [ebp-0Ch] +
mov [ebp-4] eax +
mov ecx [ebp+8] +
mov edx [ecx+10h] +
mov eax [ebp-4] +
lea ecx [edx+eax*4] +
mov edx [ebp+8] +
mov [edx+10h] ecx +
mov eax [ebp+0Ch] +
xor ecx ecx +
cmp eax [ebp-4] +
setnz cl  +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-4] 80004003h +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_101359F  +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 0 +
lea ecx [ebp-8] +
push ecx  +
call sub_10146B0  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_101359F  +
mov edx [ebp+8] +
mov eax [edx+14h] +
and eax 2 +
jz loc_10134FF  +
mov ecx [ebp+8] +
push ecx  +
lea ecx [ebp-10h] +
call sub_1024620  +
or dword ptr [ebp-1Ch] 1 +
mov [ebp-20h] eax +
jmp loc_1013508  +
mov edx [ebp+8] +
add edx 4 +
mov [ebp-20h] edx +
mov eax [ebp-20h] +
mov [ebp-0Ch] eax +
push 0  +
mov ecx [ebp-0Ch] +
call sub_1024680  +
push eax  +
mov ecx [ebp+8] +
mov edx [ecx+0Ch] +
push edx  +
mov eax [ebp+8] +
mov ecx [eax+8] +
push ecx  +
mov ecx [ebp-8] +
call sub_10135B0  +
mov [ebp-4] eax +
mov edx [ebp-1Ch] +
and edx 1 +
jz loc_1013546  +
and dword ptr [ebp-1Ch] 0FFFFFFFEh +
lea ecx [ebp-10h] +
call sub_1023C70  +
cmp dword ptr [ebp-4] 0 +
jl loc_101356C  +
mov eax [ebp-8] +
mov ecx [ebp+8] +
mov edx [ecx+10h] +
mov [eax+10h] edx +
mov eax [ebp+0Ch] +
push eax  +
push offset dword_1001EE8  +
mov ecx [ebp-8] +
call sub_1012990  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jge loc_101359F  +
mov ecx [ebp-8] +
mov [ebp-18h] ecx +
mov edx [ebp-18h] +
mov [ebp-14h] edx +
cmp dword ptr [ebp-14h] 0 +
jz loc_1013598  +
push 1  +
mov eax [ebp-14h] +
mov edx [eax] +
mov ecx [ebp-14h] +
mov eax [edx+1Ch] +
call eax  +
mov [ebp-24h] eax +
jmp loc_101359F  +
mov dword ptr [ebp-24h] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035700  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_28] ecx +
cmp [ebp+arg_C] 3 +
jnz loc_1013739  +
xor eax eax +
jnz loc_10135EB  +
xor ecx ecx +
jnz loc_10135EB  +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
sub eax [ebp+arg_0] +
sar eax 2 +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_2C] eax +
mov eax [ebp+var_2C] +
mov [ebp+var_20] eax +
mov ecx [ebp+var_28] +
mov edx [ebp+var_20] +
mov [ecx+8] edx +
jmp loc_101363D  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1013644 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_28] +
mov ecx [ebp+var_28] +
mov edx [ecx+8] +
mov [eax+10h] edx +
mov eax [ebp+var_28] +
cmp dword ptr [eax+8] 0 +
jnz loc_1013663  +
mov eax 8007000Eh +
jmp loc_1013771  +
mov ecx [ebp+arg_0] +
mov [ebp+var_14] ecx +
jmp loc_1013674  +
mov edx [ebp+var_14] +
add edx 4 +
mov [ebp+var_14] edx +
mov eax [ebp+var_14] +
cmp eax [ebp+arg_4] +
jz loc_101371F  +
mov ecx [ebp+var_28] +
mov edx [ecx+10h] +
push edx  +
call sub_1014620  +
mov eax [ebp+var_14] +
push eax  +
mov ecx [ebp+var_28] +
mov edx [ecx+10h] +
push edx  +
call sub_10145B0  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jge loc_101370B  +
mov eax [ebp+var_28] +
mov ecx [eax+8] +
mov [ebp+var_1C] ecx +
mov edx [ebp+var_28] +
mov eax [ebp+var_1C] +
cmp eax [edx+10h] +
jnb loc_10136D3  +
mov ecx [ebp+var_1C] +
mov [ebp+var_30] ecx +
mov edx [ebp+var_1C] +
add edx 4 +
mov [ebp+var_1C] edx +
mov eax [ebp+var_30] +
push eax  +
call sub_1014630  +
jmp loc_10136AE  +
mov ecx [ebp+var_28] +
mov edx [ecx+8] +
mov [ebp+var_24] edx +
mov eax [ebp+var_24] +
push eax  +
call ??_V@YAXPAX@Z  +
add esp 4 +
mov ecx [ebp+var_28] +
mov dword ptr [ecx+10h] 0 +
mov edx [ebp+var_28] +
mov dword ptr [edx+0Ch] 0 +
mov eax [ebp+var_28] +
mov dword ptr [eax+8] 0 +
mov eax [ebp+var_18] +
jmp loc_1013771  +
mov ecx [ebp+var_28] +
mov edx [ecx+10h] +
add edx 4 +
mov eax [ebp+var_28] +
mov [eax+10h] edx +
jmp loc_101366B  +
mov ecx [ebp+arg_4] +
sub ecx [ebp+arg_0] +
sar ecx 2 +
mov edx [ebp+var_28] +
mov eax [edx+8] +
lea ecx [eax+ecx*4] +
mov edx [ebp+var_28] +
mov [edx+0Ch] ecx +
jmp loc_101374B  +
mov eax [ebp+var_28] +
mov ecx [ebp+arg_0] +
mov [eax+8] ecx +
mov edx [ebp+var_28] +
mov eax [ebp+arg_4] +
mov [edx+0Ch] eax +
mov ecx [ebp+arg_8] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10122A0  +
mov edx [ebp+var_28] +
mov eax [ebp+var_28] +
mov ecx [eax+8] +
mov [edx+10h] ecx +
mov edx [ebp+var_28] +
mov eax [ebp+arg_C] +
mov [edx+14h] eax +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035728  +
mov eax large fs:0 +
push eax  +
sub esp 78h +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jz loc_10137D1  +
cmp [ebp+arg_4] 0 +
jz loc_10137D1  +
cmp [ebp+arg_8] 0 +
jz loc_10137D1  +
cmp [ebp+arg_C] 0 +
jnz loc_10137D8  +
xor eax eax +
jmp loc_10139CC  +
mov eax [ebp+arg_8] +
movzx ecx word ptr [eax+40h] +
test ecx ecx +
jnz loc_10139B1  +
push 0  +
mov edx [ebp+arg_4] +
add edx 4 +
push edx  +
lea ecx [ebp+var_14] +
call sub_10097C0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_1009840  +
test eax eax +
jge loc_1013829  +
xor eax eax +
mov [ebp+var_7E] ax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1009810  +
mov ax [ebp+var_7E] +
jmp loc_10139CC  +
mov ecx [ebp+arg_8] +
movzx edx word ptr [ecx+40h] +
test edx edx +
jnz loc_10139A2  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+30h] 0 +
jz loc_10138DA  +
mov ecx [ebp+arg_8] +
mov edx [ecx+28h] +
mov [ebp+var_48] edx +
mov eax [ebp+arg_8] +
mov ecx [eax+8] +
mov [ebp+var_7C] ecx +
mov [ebp+var_78.cbSize] 30h +
lea edx [ebp+var_78] +
push edx  +
mov eax [ebp+arg_8] +
mov ecx [eax+30h] +
push ecx  +
push 0  +
call sub_10139F0  +
test eax eax +
jnz loc_10138AD  +
lea edx [ebp+var_78] +
push edx  +
mov eax [ebp+arg_8] +
mov ecx [eax+30h] +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx+4] +
push eax  +
call sub_10139F0  +
test eax eax +
jnz loc_10138AD  +
xor ecx ecx +
mov [ebp+var_80] cx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1009810  +
mov ax [ebp+var_80] +
jmp loc_10139CC  +
mov ecx 0Ch +
lea esi [ebp+var_78] +
mov edi [ebp+arg_8] +
movs   +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_8] +
mov ecx [eax+8] +
mov [edx+34h] ecx +
mov edx [ebp+arg_8] +
mov eax [ebp+var_48] +
mov [edx+28h] eax +
mov ecx [ebp+arg_8] +
mov edx [ebp+var_7C] +
mov [ecx+8] edx +
jmp loc_1013914  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+3Ch] 0 +
jz loc_10138EF  +
mov [ebp+hInstance] 0 +
jmp loc_10138FB  +
mov ecx [ebp+arg_0] +
mov edx [ecx+8] +
mov [ebp+hInstance] edx +
mov eax [ebp+arg_8] +
mov ecx [eax+38h] +
push ecx  +
mov edx [ebp+hInstance] +
push edx  +
call sub_1013A40  +
mov ecx [ebp+arg_8] +
mov [ecx+1Ch] eax +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
mov [edx+14h] ecx +
mov edx [ebp+arg_8] +
mov eax [edx+4] +
and eax 0FFFFBFFFh +
mov ecx [ebp+arg_8] +
mov [ecx+4] eax +
mov edx [ebp+arg_8] +
cmp dword ptr [edx+28h] 0 +
jnz loc_1013958  +
mov eax [ebp+arg_8] +
push eax  +
push 25h  +
mov ecx [ebp+arg_8] +
add ecx 42h +
push ecx  +
call sub_1013A10  +
mov edx [ebp+arg_8] +
add edx 42h +
mov eax [ebp+arg_8] +
mov [eax+28h] edx +
mov esi [ebp+arg_8] +
mov ecx 0Ch +
lea edi [ebp+var_44] +
movs   +
lea ecx [ebp+var_44] +
push ecx  +
mov edx [ebp+arg_8] +
mov eax [edx+28h] +
push eax  +
mov ecx [ebp+arg_8] +
mov edx [ecx+14h] +
push edx  +
call sub_10139F0  +
mov ecx [ebp+arg_8] +
mov [ecx+40h] ax +
mov edx [ebp+arg_8] +
movzx eax word ptr [edx+40h] +
test eax eax +
jnz loc_10139A2  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
call sub_1013A60  +
mov ecx [ebp+arg_8] +
mov [ecx+40h] ax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1009810  +
mov edx [ebp+arg_8] +
cmp dword ptr [edx+30h] 0 +
jz loc_10139C5  +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_8] +
mov edx [ecx+34h] +
mov [eax] edx +
mov eax [ebp+arg_8] +
mov ax [eax+40h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call ds:GetClassInfoExW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push eax  +
push offset aAtlP  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call swprintf_s  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpCursorName] +
push eax  +
mov ecx [ebp+hInstance] +
push ecx  +
call ds:LoadCursorW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1013A80  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp [ebp+arg_0] 0 +
jz loc_1013A94  +
cmp [ebp+arg_4] 0 +
jnz loc_1013A98  +
xor eax eax +
jmp loc_1013ABC  +
mov eax [ebp+arg_4] +
push eax  +
call ds:RegisterClassExW  +
mov word ptr [ebp+var_8] ax +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+arg_0] +
add ecx 20h +
call sub_100AF50  +
mov [ebp+var_4] eax +
mov ax word ptr [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
cmp dword ptr [eax] 0 +
jnz loc_1013AF0  +
cmp [ebp+arg_0] 0 +
jnz loc_1013AF0  +
mov al 1 +
jmp loc_1013B73  +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx] 0 +
jz loc_1013AFE  +
cmp [ebp+arg_0] 0 +
jnz loc_1013B02  +
xor al al +
jmp loc_1013B73  +
lea ecx [ebp+var_4] +
call sub_1012550  +
lea ecx [ebp+var_8] +
call sub_1012550  +
lea ecx [ebp+var_4] +
call sub_10114A0  +
push eax  +
push offset dword_10019C4  +
mov edx [ebp+var_10] +
mov eax [edx] +
mov ecx [ebp+var_10] +
mov edx [ecx] +
mov eax [eax] +
push edx  +
mov ecx [eax] +
call ecx  +
lea ecx [ebp+var_8] +
call sub_10114A0  +
push eax  +
push offset dword_10019C4  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [eax] +
call edx  +
lea ecx [ebp+var_8] +
call sub_1024680  +
push eax  +
lea ecx [ebp+var_4] +
call sub_1012890  +
mov [ebp+var_9] al +
lea ecx [ebp+var_8] +
call sub_1023C70  +
lea ecx [ebp+var_4] +
call sub_1023C70  +
mov al [ebp+var_9] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1013BA0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_1013BD0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_1013BC3  +
mov eax [ebp+var_8] +
mov byte ptr [eax+18h] 1 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFEh  +
push offset dword_1036F58  +
push offset loc_102C8AD  +
mov eax large fs:0 +
push eax  +
add esp 0FFFFFFECh +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+lpCriticalSection] ecx +
mov [ebp+var_1C] 80004005h +
mov [ebp+var_4] 0 +
mov eax [ebp+lpCriticalSection] +
push eax  +
call ds:InitializeCriticalSection  +
mov [ebp+var_1C] 0 +
mov [ebp+var_4] 0FFFFFFFEh +
jmp loc_1013C5A  +
mov ecx [ebp-14h] +
mov edx [ecx] +
mov eax [edx] +
mov [ebp-20h] eax +
mov ecx [ebp-20h] +
xor eax eax +
cmp ecx 0C0000017h +
setz al  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-1Ch] 8007000Eh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1013CD0  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1002018 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] offset off_1001FDC +
mov edx dword_103B4F4 +
mov eax [edx] +
mov ecx dword_103B4F4 +
mov edx [eax+4] +
call edx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_103575B  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
add ecx 28h +
call sub_10126A0  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
call sub_1024C10  +
mov ecx [ebp+var_10] +
add ecx 24h +
call sub_1011300  +
mov ecx [ebp+var_10] +
add ecx 48h +
call sub_1012550  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1013D65  +
mov eax 80004003h +
jmp loc_1013DAA  +
mov eax [ebp+8] +
cmp dword ptr [eax-20h] 0 +
jnz loc_1013D9D  +
push 0  +
push ecx  +
mov ecx esp +
push 0  +
call sub_1007F90  +
push 0  +
push 0CF0000h  +
push offset aAxwinFrameWind  +
push ecx  +
mov ecx esp +
push 0  +
call sub_1007F90  +
push 0  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1013DF0  +
mov ecx [ebp+0Ch] +
mov edx [ebp+8] +
mov eax [edx-20h] +
mov [ecx] eax +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov [ebp+var_8] ecx +
call sub_1014060  +
cmp dword ptr [eax+30h] 0 +
jnz loc_1013E16  +
call sub_1025250  +
mov esi eax +
call sub_1014060  +
mov [eax+30h] esi +
mov eax [ebp+var_8] +
add eax 20h +
push eax  +
call sub_1014060  +
mov ecx eax +
call sub_10090B0  +
mov [ebp+var_4] ax +
mov ecx [ebp+dwStyle] +
push ecx  +
call sub_1019910  +
mov [ebp+dwStyle] eax +
mov edx [ebp+dwExStyle] +
push edx  +
call sub_1014080  +
mov [ebp+dwExStyle] eax +
cmp [ebp+lpWindowName] 0 +
jnz loc_1013E53  +
call sub_1025250  +
mov [ebp+lpWindowName] eax +
mov eax [ebp+lpParam] +
push eax  +
movzx ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+hMenu] +
push edx  +
mov eax [ebp+dwExStyle] +
push eax  +
mov ecx [ebp+dwStyle] +
push ecx  +
mov edx [ebp+lpWindowName] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hWndParent] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10140C0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
add ecx 4 +
call sub_1012900  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1013EE0  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1013F10  +
push eax  +
mov edx [ebp+var_4] +
push edx  +
call sub_100B6E0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset off_1002050 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1013F70  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1013F55  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1002018 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] offset off_1001FDC +
mov edx [ebp+var_4] +
mov dword ptr [edx+28h] 0C0000001h +
mov ecx [ebp+var_4] +
call sub_1014560  +
mov eax dword_103B4F4 +
mov edx [eax] +
mov ecx dword_103B4F4 +
mov eax [edx+8] +
call eax  +
mov ecx [ebp+var_4] +
call sub_1013FD0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_103575B  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 48h +
call sub_1023C70  +
mov ecx [ebp+var_10] +
call sub_1014040  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
add ecx 28h +
call sub_10127E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_100BAC0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset unk_103B0E8 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push eax  +
call sub_10140A0  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
and eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
xor eax eax +
jnz loc_10140CB  +
xor ecx ecx +
jnz loc_10140CB  +
push 0  +
push 0  +
mov ecx [ebp+var_C] +
add ecx 8 +
call sub_1009110  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_10140FA  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10141A4  +
movzx edx [ebp+arg_18] +
test edx edx +
jnz loc_1014109  +
xor eax eax +
jmp loc_10141A4  +
mov eax [ebp+var_C] +
push eax  +
mov ecx [ebp+var_C] +
add ecx 8 +
push ecx  +
mov ecx offset unk_103BC3C +
call sub_1008E10  +
cmp [ebp+hMenu] 0 +
jnz loc_1014135  +
mov edx [ebp+dwStyle] +
and edx 40000000h +
jz loc_1014135  +
mov eax [ebp+var_C] +
mov [ebp+hMenu] eax +
cmp [ebp+arg_4] 0 +
jnz loc_1014142  +
mov [ebp+arg_4] offset unk_103B000 +
mov ecx [ebp+lpParam] +
push ecx  +
mov ecx offset unk_103BC00 +
call sub_1022700  +
push eax  +
mov edx [ebp+hMenu] +
push edx  +
mov eax [ebp+hWndParent] +
push eax  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
mov eax [ecx+0Ch] +
sub eax [edx+4] +
push eax  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
mov eax [ecx+8] +
sub eax [edx] +
push eax  +
mov ecx [ebp+arg_4] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push ecx  +
mov edx [ebp+dwStyle] +
push edx  +
mov eax [ebp+lpWindowName] +
push eax  +
movzx ecx [ebp+arg_18] +
push ecx  +
mov edx [ebp+dwExStyle] +
push edx  +
call ds:CreateWindowExW  +
mov [ebp+var_4] eax +
xor eax eax +
jnz loc_1014199  +
xor ecx ecx +
jnz loc_1014199  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1014200  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_10020A4 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] offset off_1002080 +
mov edx dword_103B4F4 +
mov eax [edx] +
mov ecx dword_103B4F4 +
mov edx [eax+4] +
call edx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_103575B  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
add ecx 28h +
call sub_10126A0  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
call sub_1024C10  +
mov ecx [ebp+var_10] +
add ecx 24h +
call sub_1011290  +
mov ecx [ebp+var_10] +
add ecx 48h +
call sub_1012550  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+8] +
cmp dword ptr [eax-20h] 0 +
jnz loc_10142E0  +
push 0  +
push ecx  +
mov ecx esp +
push 0  +
call sub_1007F90  +
push 0  +
push 0CF0000h  +
push offset aAxwinUiWindow  +
push ecx  +
mov ecx esp +
push 0  +
call sub_1007F90  +
push 0  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1014340  +
mov ecx [ebp+0Ch] +
mov edx [ebp+8] +
mov eax [edx-20h] +
mov [ecx] eax +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 800401A1h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 24h +
call sub_10122A0  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov [ebp+var_8] ecx +
call sub_1014590  +
cmp dword ptr [eax+30h] 0 +
jnz loc_1014366  +
call sub_1025250  +
mov esi eax +
call sub_1014590  +
mov [eax+30h] esi +
mov eax [ebp+var_8] +
add eax 20h +
push eax  +
call sub_1014590  +
mov ecx eax +
call sub_10090B0  +
mov [ebp+var_4] ax +
mov ecx [ebp+dwStyle] +
push ecx  +
call sub_1019910  +
mov [ebp+dwStyle] eax +
mov edx [ebp+dwExStyle] +
push edx  +
call sub_1014080  +
mov [ebp+dwExStyle] eax +
cmp [ebp+lpWindowName] 0 +
jnz loc_10143A3  +
call sub_1025250  +
mov [ebp+lpWindowName] eax +
mov eax [ebp+lpParam] +
push eax  +
movzx ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+hMenu] +
push edx  +
mov eax [ebp+dwExStyle] +
push eax  +
mov ecx [ebp+dwStyle] +
push ecx  +
mov edx [ebp+lpWindowName] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hWndParent] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10140C0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov ecx [ebp+8] +
add ecx 4 +
call sub_1012950  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jnz loc_101442C  +
mov eax [ebp+8] +
sub eax 24h +
mov [ebp-0Ch] eax +
mov ecx [ebp-0Ch] +
mov [ebp-8] ecx +
cmp dword ptr [ebp-8] 0 +
jz loc_1014425  +
push 1  +
mov edx [ebp-8] +
mov eax [edx] +
mov ecx [ebp-8] +
mov edx [eax+4] +
call edx  +
mov [ebp-10h] eax +
jmp loc_101442C  +
mov dword ptr [ebp-10h] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
sub ecx 24h +
call sub_1014470  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10144A0  +
push eax  +
mov edx [ebp+var_4] +
push edx  +
call sub_100B6E0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset off_10020D4 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1014500  +
mov eax [ebp+8] +
and eax 1 +
jz loc_10144E5  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_10020A4 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] offset off_1002080 +
mov edx [ebp+var_4] +
mov dword ptr [edx+28h] 0C0000001h +
mov ecx [ebp+var_4] +
call sub_1014560  +
mov eax dword_103B4F4 +
mov edx [eax] +
mov ecx dword_103B4F4 +
mov eax [edx+8] +
call eax  +
mov ecx [ebp+var_4] +
call sub_1013FD0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 48h +
call sub_100BEE0  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+4] 0 +
jz loc_1014585  +
mov ecx [ebp+var_4] +
call sub_1008B40  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset unk_103B178 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp [ebp+arg_0] 0 +
jz loc_10145CD  +
cmp [ebp+arg_4] 0 +
jz loc_10145CD  +
mov [ebp+var_8] 1 +
jmp loc_10145D4  +
mov [ebp+var_8] 0 +
mov eax [ebp+var_8] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_10145EA  +
push 80004005h  +
call sub_1007F50  +
xor ecx ecx +
jnz loc_10145B8  +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov [edx] ecx +
mov edx [ebp+arg_0] +
cmp dword ptr [edx] 0 +
jz loc_1014612  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+4] +
call edx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0 +
jz loc_101464F  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [edx] +
push ecx  +
mov eax [edx+8] +
call eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
jnz loc_1014669  +
xor ecx ecx +
jnz loc_1014669  +
mov edx [ebp+var_4] +
mov ecx [edx] +
call sub_1014690  +
mov eax [ebp+var_4] +
mov byte ptr [eax+4] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpCriticalSection] ecx +
mov eax [ebp+lpCriticalSection] +
push eax  +
call ds:LeaveCriticalSection  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035780  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
cmp [ebp+arg_0] 0 +
jnz loc_10146EE  +
mov eax 80004003h +
jmp loc_10147FF  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
mov [ebp+var_18] 8007000Eh +
mov [ebp+var_14] 0 +
mov [ebp+var_4] 0 +
push 38h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_28] eax +
mov ecx [ebp+var_28] +
mov [ebp+var_1C] ecx +
cmp [ebp+var_1C] 0 +
jz loc_1014734  +
push 0  +
mov ecx [ebp+var_1C] +
call sub_1012390  +
mov [ebp+var_2C] eax +
jmp loc_101473B  +
mov [ebp+var_2C] 0 +
mov edx [ebp+var_2C] +
mov [ebp+var_14] edx +
jmp loc_1014750  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1014757 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 0 +
jz loc_10147F4  +
push 0  +
mov ecx [ebp+var_14] +
add ecx 18h +
call sub_100B200  +
mov ecx [ebp+var_14] +
add ecx 18h +
call sub_100B410  +
mov ecx [ebp+var_14] +
add ecx 18h +
call sub_1013B80  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_101479B  +
mov ecx [ebp+var_14] +
add ecx 18h +
call sub_101C7E0  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jl loc_10147AF  +
mov ecx [ebp+var_14] +
add ecx 18h +
call sub_101C7E0  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_14] +
add ecx 18h +
call sub_100B220  +
cmp [ebp+var_18] 0 +
jz loc_10147F4  +
mov eax [ebp+var_14] +
mov [ebp+var_24] eax +
mov ecx [ebp+var_24] +
mov [ebp+var_20] ecx +
cmp [ebp+var_20] 0 +
jz loc_10147E6  +
push 1  +
mov edx [ebp+var_20] +
mov eax [edx] +
mov ecx [ebp+var_20] +
mov edx [eax+1Ch] +
call edx  +
mov [ebp+var_30] eax +
jmp loc_10147ED  +
mov [ebp+var_30] 0 +
mov [ebp+var_14] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [eax] ecx +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1012A60  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1012A60  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1012A60  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1012A60  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1012A60  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1012A60  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1012A60  +
***
sub ecx 38h +
jmp loc_1012B60  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1012A10  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1012A60  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1012AB0  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1012A60  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10357FC  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_101E580  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 220h +
call sub_102DFD0  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_1002120 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+20h] offset off_10021B8 +
mov edx [ebp+var_10] +
mov dword ptr [edx+220h] offset off_1002118 +
mov eax [ebp+var_10] +
mov dword ptr [eax+244h] 0 +
mov ecx [ebp+var_10] +
add ecx 248h +
call sub_10246E0  +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_10] +
add ecx 254h +
call sub_101A8A0  +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_10] +
add ecx 270h +
call sub_102AFF0  +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_10] +
add ecx 2ACh +
call sub_102AFF0  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_10] +
add ecx 2E8h +
call sub_102D200  +
mov byte ptr [ebp+var_4] 6 +
mov ecx [ebp+var_10] +
add ecx 354h +
call sub_1015850  +
mov ecx [ebp+var_10] +
add ecx 3A4h +
call sub_1012550  +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+21Ch] 0C8h +
mov edx [ebp+var_10] +
mov dword ptr [edx+1C8h] 0 +
xor eax eax +
mov ecx [ebp+var_10] +
add ecx 344h +
mov [ecx] eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_1014B43  +
jmp loc_10150DC  +
cmp dword ptr [ebp+0Ch] 40Fh +
jnz loc_1014B80  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_1016A00  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014B80  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 414h +
jnz loc_1014BBD  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_1017160  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014BBD  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 415h +
jnz loc_1014BFA  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10171B0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014BFA  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 416h +
jnz loc_1014C37  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1017240  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014C37  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 41Bh +
jnz loc_1014C74  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1017350  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014C74  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 419h +
jnz loc_1014CB1  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1016BB0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014CB1  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 41Fh +
jnz loc_1014CEE  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1016CB0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014CEE  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 41Eh +
jnz loc_1014D2B  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1017700  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014D2B  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 436h +
jnz loc_1014D68  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1016CE0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014D68  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 84h +
jnz loc_1014DA5  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1017DA0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014DA5  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 31Eh +
jnz loc_1014DE2  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1017E30  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014DE2  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 40Bh +
jnz loc_1014E1F  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1017590  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014E1F  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 40Ch +
jnz loc_1014E5C  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1017590  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014E5C  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 40Eh +
jnz loc_1014E99  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10176B0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014E99  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 214h +
jnz loc_1014ED6  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1018710  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014ED6  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_1014F10  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10168A0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014F10  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_1014F4F  +
mov edx [ebp+14h] +
cmp dword ptr [edx+8] 0FFFFFFF4h +
jnz loc_1014F4F  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-8] +
call sub_1017EA0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014F4F  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_1014F91  +
mov edx [ebp+14h] +
cmp dword ptr [edx+8] 0FFFFFD3Ah +
jnz loc_1014F91  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-8] +
call sub_1018300  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014F91  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_1014FD3  +
mov edx [ebp+14h] +
cmp dword ptr [edx+8] 0FFFFFD31h +
jnz loc_1014FD3  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-8] +
call sub_1018140  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1014FD3  +
mov eax 1 +
jmp loc_10150DE  +
push 0  +
mov edx [ebp+18h] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp+8] +
push eax  +
mov ecx [ebp-8] +
call sub_10150F0  +
test eax eax +
jz loc_1014FFF  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 2 +
jnz loc_1015039  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_1016580  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1015039  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 110h +
jnz loc_1015073  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_1015A70  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1015073  +
mov eax 1 +
jmp loc_10150DE  +
cmp dword ptr [ebp+0Ch] 420h +
jnz loc_10150AD  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10172F0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10150AD  +
mov eax 1 +
jmp loc_10150DE  +
push 0  +
mov edx [ebp+18h] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp+8] +
push eax  +
mov ecx [ebp-8] +
add ecx 220h +
call sub_1015750  +
test eax eax +
jz loc_10150DC  +
mov eax 1 +
jmp loc_10150DE  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 1 +
mov eax [ebp+arg_14] +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_1015113  +
jmp loc_1015736  +
cmp [ebp+arg_4] 113h +
jnz loc_1015150  +
mov [ebp+var_4] 1 +
lea ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_101F710  +
mov edx [ebp+arg_10] +
mov [edx] eax +
cmp [ebp+var_4] 0 +
jz loc_1015150  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 115h +
jnz loc_101518D  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_8] +
call sub_101FB60  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_101518D  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 111h +
jnz loc_10151FE  +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 131h +
jnz loc_10151FE  +
mov ecx [ebp+arg_8] +
shr ecx 10h +
and ecx 0FFFFh +
movzx edx cx +
test edx edx +
jnz loc_10151FE  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
push edx  +
mov eax [ebp+arg_8] +
shr eax 10h +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+var_8] +
call sub_101FA70  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_10151FE  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 111h +
jnz loc_101526D  +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 1 +
jnz loc_101526D  +
mov ecx [ebp+arg_8] +
shr ecx 10h +
and ecx 0FFFFh +
movzx edx cx +
test edx edx +
jnz loc_101526D  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
push edx  +
mov eax [ebp+arg_8] +
shr eax 10h +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+var_8] +
call sub_101F0A0  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_101526D  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 111h +
jnz loc_10152DC  +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 2 +
jnz loc_10152DC  +
mov ecx [ebp+arg_8] +
shr ecx 10h +
and ecx 0FFFFh +
movzx edx cx +
test edx edx +
jnz loc_10152DC  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
push edx  +
mov eax [ebp+arg_8] +
shr eax 10h +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+var_8] +
call sub_101F0A0  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_10152DC  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 111h +
jnz loc_101534D  +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 12Ch +
jnz loc_101534D  +
mov ecx [ebp+arg_8] +
shr ecx 10h +
and ecx 0FFFFh +
movzx edx cx +
test edx edx +
jnz loc_101534D  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
push edx  +
mov eax [ebp+arg_8] +
shr eax 10h +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+var_8] +
call sub_101F970  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_101534D  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 136h +
jnz loc_101538A  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1028C30  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_101538A  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 135h +
jnz loc_10153C7  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1028C30  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_10153C7  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 138h +
jnz loc_1015404  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101F0D0  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_1015404  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 40Bh +
jnz loc_1015441  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101F110  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_1015441  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 40Ch +
jnz loc_101547E  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101F160  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_101547E  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 40Dh +
jnz loc_10154BB  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101F1E0  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_10154BB  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 40Eh +
jnz loc_10154F8  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101F220  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_10154F8  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 417h +
jnz loc_1015535  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101FCA0  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_1015535  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 409h +
jnz loc_1015572  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101FF70  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_1015572  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 4Eh +
jnz loc_10155B4  +
mov edx [ebp+arg_C] +
cmp dword ptr [edx+8] 0FFFFFD31h +
jnz loc_10155B4  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101F850  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_10155B4  +
mov eax 1 +
jmp loc_1015738  +
push 0  +
mov edx [ebp+arg_10] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_8] +
add ecx 28h +
mov edx [ebp+var_8] +
mov eax [edx+28h] +
mov edx [eax] +
call edx  +
test eax eax +
jz loc_10155E8  +
mov eax 1 +
jmp loc_1015738  +
push 0  +
mov eax [ebp+arg_10] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_8] +
add ecx 8Ch +
mov edx [ebp+var_8] +
mov eax [edx+8Ch] +
mov edx [eax] +
call edx  +
test eax eax +
jz loc_1015622  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 436h +
jnz loc_101565F  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_8] +
call sub_101FAF0  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_101565F  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 2 +
jnz loc_1015699  +
mov [ebp+var_4] 1 +
lea edx [ebp+var_4] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101F040  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_1015699  +
mov eax 1 +
jmp loc_1015738  +
push 0  +
mov edx [ebp+arg_10] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_8] +
call sub_1018E30  +
test eax eax +
jz loc_10156C2  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 110h +
jnz loc_10156FC  +
mov [ebp+var_4] 1 +
lea ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_101EA60  +
mov edx [ebp+arg_10] +
mov [edx] eax +
cmp [ebp+var_4] 0 +
jz loc_10156FC  +
mov eax 1 +
jmp loc_1015738  +
cmp [ebp+arg_4] 31Ah +
jnz loc_1015736  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_8] +
call sub_101F070  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_1015736  +
mov eax 1 +
jmp loc_1015738  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 1 +
mov eax [ebp+arg_14] +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_1015770  +
jmp loc_10157DE  +
cmp [ebp+arg_4] 5 +
jnz loc_10157A7  +
mov [ebp+var_4] 1 +
lea ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_102E2A0  +
mov edx [ebp+arg_10] +
mov [edx] eax +
cmp [ebp+var_4] 0 +
jz loc_10157A7  +
mov eax 1 +
jmp loc_10157E0  +
cmp [ebp+arg_4] 24h +
jnz loc_10157DE  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_8] +
call sub_102E380  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_10157DE  +
mov eax 1 +
jmp loc_10157E0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov eax [ebp-4] +
mov eax [eax-21Ch] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1015940  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1015835  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024C10  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_100214C +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_10158A0  +
jmp loc_101590E  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_10158D7  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_10189E0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10158D7  +
mov eax 1 +
jmp loc_1015910  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_101590E  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_1018960  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101590E  +
mov eax 1 +
jmp loc_1015910  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1014040  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10357FC  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_1002120 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+20h] offset off_10021B8 +
mov edx [ebp+var_10] +
mov dword ptr [edx+220h] offset off_1002118 +
mov [ebp+var_4] 6 +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_101A800  +
mov ecx [ebp+var_10] +
add ecx 3A4h +
call sub_1015A50  +
mov ecx [ebp+var_10] +
add ecx 354h +
call sub_1015920  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_10] +
add ecx 2E8h +
call sub_102D450  +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_10] +
add ecx 2ACh +
call sub_102B1C0  +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_10] +
add ecx 270h +
call sub_102B1C0  +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_10] +
add ecx 254h +
call sub_101A940  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
add ecx 248h +
call sub_100B410  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 220h +
call sub_102E090  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
call sub_101E700  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1019590  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_103582B  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_78] ecx +
mov [ebp+dwStyle] 56000000h +
call ds:BufferedPaintInit  +
mov eax [ebp+var_78] +
mov ecx [eax+4] +
push ecx  +
mov ecx dword_103B510 +
call sub_1015EB0  +
push 19Bh  +
lea edx [ebp+var_38] +
push edx  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov eax [eax] +
mov [ebp+var_20] eax +
push 19Ch  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov edx [eax] +
mov [ebp+hWnd] edx +
mov ecx [ebp+var_78] +
call sub_101ECE0  +
mov ecx [ebp+var_78] +
call sub_1015F30  +
push 12Fh  +
lea eax [ebp+var_40] +
push eax  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_78] +
add ecx 2E8h +
call sub_1012DF0  +
mov ecx [ebp+var_78] +
add ecx 2E8h +
call sub_102D4F0  +
mov ecx dword_103B544 +
call sub_1024080  +
cmp eax 1 +
jbe loc_1015B7F  +
push 5  +
push 12Dh  +
lea ecx [ebp+var_44] +
push ecx  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
push 0  +
push 12Fh  +
lea edx [ebp+var_48] +
push edx  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
jmp loc_1015BB9  +
push 0  +
push 12Dh  +
lea eax [ebp+var_4C] +
push eax  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
push 5  +
push 12Fh  +
lea ecx [ebp+var_50] +
push ecx  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
lea edx [ebp+Rect] +
push edx  +
mov eax [ebp+hWnd] +
push eax  +
call ds:GetClientRect  +
push 2  +
lea ecx [ebp+Rect] +
push ecx  +
mov edx [ebp+var_78] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:MapWindowPoints  +
mov edx [ebp+hWnd] +
push edx  +
call ds:DestroyWindow  +
push 58h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_58] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_58] 0 +
jz loc_1015C13  +
mov eax [ebp+var_78] +
push eax  +
mov ecx [ebp+var_58] +
call sub_10248C0  +
mov [ebp+hMenu] eax +
jmp loc_1015C1A  +
mov [ebp+hMenu] 0 +
mov ecx [ebp+hMenu] +
mov [ebp+var_54] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
mov edx [ebp+var_78] +
mov eax [ebp+var_54] +
mov [edx+244h] eax +
push 0  +
push ecx  +
mov ecx esp +
mov [ebp+var_5C] esp +
push 19Ch  +
call sub_1007F90  +
push 10000h  +
mov ecx [ebp+dwStyle] +
push ecx  +
push offset WindowName  +
push ecx  +
mov ecx esp +
mov [ebp+var_60] esp +
push 0  +
call sub_1007F90  +
mov edx [ebp+var_78] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+var_78] +
mov ecx [ecx+244h] +
call sub_1019620  +
push 0  +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
push edx  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push eax  +
mov ecx [ebp+Rect.top] +
push ecx  +
mov edx [ebp+Rect.left] +
push edx  +
push 0  +
mov eax [ebp+var_78] +
mov ecx [eax+244h] +
add ecx 4 +
call sub_100E0E0  +
mov ecx [ebp+var_20] +
push ecx  +
mov ecx [ebp+var_78] +
add ecx 2ACh +
call sub_102B220  +
mov edx [ebp+var_20] +
push edx  +
call ds:DestroyWindow  +
mov [ebp+var_20] 0 +
push 19Ah  +
lea eax [ebp+var_64] +
push eax  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov ecx [eax] +
push ecx  +
mov ecx [ebp+var_78] +
add ecx 270h +
call sub_102B220  +
push 19Ah  +
lea edx [ebp+var_68] +
push edx  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov eax [eax] +
push eax  +
call ds:DestroyWindow  +
mov ecx [ebp+var_78] +
push ecx  +
mov ecx [ebp+var_78] +
add ecx 354h +
call sub_1015E90  +
push 0  +
push ecx  +
mov ecx esp +
mov [ebp+var_6C] esp +
push 0  +
call sub_1007F90  +
push 0  +
push 0  +
push 0  +
push ecx  +
mov ecx esp +
mov [ebp+var_70] esp +
push 0  +
call sub_1007F90  +
mov edx [ebp+var_78] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+var_78] +
add ecx 354h +
call sub_1019420  +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_101A600  +
push 2  +
push offset dword_1002108  +
mov ecx [ebp+var_78] +
add ecx 220h +
call sub_102E140  +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
push edx  +
push 0BB8h  +
mov ecx [ebp+var_78] +
add ecx 220h +
call sub_102E270  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
push eax  +
push 10Eh  +
mov ecx [ebp+var_78] +
add ecx 220h +
call sub_102E240  +
push 0  +
mov ecx [ebp+var_78] +
call sub_101EDA0  +
cmp pv 0 +
jz loc_1015E19  +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
lea ecx [ebp+var_2C] +
push ecx  +
lea edx [ebp+var_34] +
push edx  +
mov eax pv +
push eax  +
mov ecx dword_103B544 +
call sub_1023E30  +
mov [ebp+var_30] eax +
cmp [ebp+var_30] 0 +
jl loc_1015DFC  +
mov ecx [ebp+var_34] +
push ecx  +
mov edx [ebp+var_78] +
mov eax [edx] +
mov ecx [ebp+var_78] +
mov edx [eax+18h] +
call edx  +
jmp loc_1015E17  +
push 0  +
mov ecx dword_103B544 +
call sub_1023FF0  +
push eax  +
mov eax [ebp+var_78] +
mov edx [eax] +
mov ecx [ebp+var_78] +
mov eax [edx+18h] +
call eax  +
jmp loc_1015E34  +
push 0  +
mov ecx dword_103B544 +
call sub_1023FF0  +
push eax  +
mov ecx [ebp+var_78] +
mov edx [ecx] +
mov ecx [ebp+var_78] +
mov eax [edx+18h] +
call eax  +
push 130h  +
lea ecx [ebp+var_74] +
push ecx  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6F0  +
mov ecx [ebp+var_78] +
call sub_101EF20  +
mov ecx [ebp+var_78] +
call sub_10166A0  +
push 1  +
push 0  +
mov ecx [ebp+var_78] +
add ecx 4 +
call sub_1010530  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+24h] ecx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+28h] +
mov edx [ebp+arg_0] +
mov [ecx] edx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
push 0  +
push 0  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
mov edx hInstance +
push edx  +
mov eax hInstance +
push eax  +
mov ecx [ebp+var_4] +
add ecx 1CCh +
call sub_102E970  +
push 12Fh  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
mov ecx [ebp+var_4] +
add ecx 1CCh +
call sub_102EBF0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_18] eax +
mov [ebp+var_3C] ecx +
push 12Dh  +
lea eax [ebp+var_34] +
push eax  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
mov [ebp+hWnd] eax +
push 0  +
push 14h  +
push 41Eh  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:SendMessageW  +
push 100000h  +
push 0  +
push 420h  +
mov edx [ebp+hWnd] +
push edx  +
call ds:SendMessageW  +
mov [ebp+lParam] 0 +
xor eax eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_28] 12Dh +
mov byte ptr [ebp+var_24] 4 +
mov byte ptr [ebp+var_24+1] 0E8h +
mov [ebp+var_20] 0 +
lea ecx [ebp+Rect] +
push ecx  +
push 12Fh  +
lea edx [ebp+var_38] +
push edx  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100D6B0  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
mov ecx [ebp+var_3C] +
mov [ecx+37Ch] eax +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
mov eax [ebp+var_3C] +
mov [eax+380h] edx +
mov ecx [ebp+var_3C] +
mov edx [ecx+37Ch] +
and edx 0FFFFh +
movzx eax dx +
mov ecx [ebp+var_3C] +
mov edx [ecx+37Ch] +
and edx 0FFFFh +
movzx ecx dx +
shl ecx 10h +
or eax ecx +
push eax  +
push 0  +
push 43Bh  +
mov edx [ebp+hWnd] +
push edx  +
call ds:SendMessageW  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 444h  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:SendMessageW  +
mov edx [ebp+var_3C] +
mov eax [edx+37Ch] +
and eax 0FFFFh +
movzx ecx ax +
mov edx [ebp+var_3C] +
mov eax [edx+380h] +
and eax 0FFFFh +
movzx edx ax +
shl edx 10h +
or ecx edx +
push ecx  +
push 0  +
push 41Fh  +
mov eax [ebp+hWnd] +
push eax  +
call ds:SendMessageW  +
push 0  +
push 0  +
push 455h  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:SendMessageW  +
or eax 80h +
or eax 1 +
push eax  +
push 0  +
push 454h  +
mov edx [ebp+hWnd] +
push edx  +
call ds:SendMessageW  +
push 0  +
push 0  +
push 423h  +
mov eax [ebp+hWnd] +
push eax  +
call sub_101A5A0  +
mov [ebp+var_30] eax +
cmp [ebp+var_30] 0 +
jz loc_10160E1  +
push 0FFFFFFF0h  +
mov ecx [ebp+var_30] +
push ecx  +
call ds:GetWindowLongW  +
or eax 2 +
push eax  +
push 0FFFFFFF0h  +
mov edx [ebp+var_30] +
push edx  +
call ds:SetWindowLongW  +
mov ecx [ebp+var_18] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035858  +
mov eax large fs:0 +
push eax  +
sub esp 490h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_1C] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_43C] ecx +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_43C] +
add ecx 3A4h +
call sub_1024680  +
test eax eax +
jnz loc_10162A1  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push 1FAh  +
mov ecx hInstance +
push ecx  +
call ds:LoadStringW  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jnz loc_1016196  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_18] eax +
jmp loc_101654C  +
lea edx [ebp+Buffer] +
mov [ebp+var_440] edx +
mov eax [ebp+var_440] +
add eax 2 +
mov [ebp+var_444] eax +
mov ecx [ebp+var_440] +
mov dx [ecx] +
mov [ebp+var_446] dx +
add [ebp+var_440] 2 +
cmp [ebp+var_446] 0 +
jnz loc_10161B1  +
mov eax [ebp+var_440] +
sub eax [ebp+var_444] +
sar eax 1 +
mov [ebp+var_44C] eax +
mov ecx [ebp+var_44C] +
add ecx 1 +
push ecx  +
mov ecx [ebp+var_43C] +
add ecx 3A4h +
call sub_1019510  +
mov ecx [ebp+var_43C] +
add ecx 3A4h +
call sub_1024680  +
test eax eax +
jnz loc_101621B  +
jmp loc_101654C  +
lea edx [ebp+Buffer] +
mov [ebp+var_450] edx +
mov eax [ebp+var_450] +
add eax 2 +
mov [ebp+var_454] eax +
mov ecx [ebp+var_450] +
mov dx [ecx] +
mov [ebp+var_456] dx +
add [ebp+var_450] 2 +
cmp [ebp+var_456] 0 +
jnz loc_1016236  +
mov eax [ebp+var_450] +
sub eax [ebp+var_454] +
sar eax 1 +
mov [ebp+var_45C] eax +
lea ecx [ebp+Buffer] +
push ecx  +
mov edx [ebp+var_45C] +
add edx 1 +
push edx  +
mov ecx [ebp+var_43C] +
add ecx 3A4h +
call sub_1024680  +
push eax  +
call sub_101A9A0  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jge loc_10162A1  +
jmp loc_101654C  +
cmp [ebp+arg_0] 0 +
jz loc_101640B  +
push 104h  +
lea eax [ebp+var_434] +
push eax  +
push 1F8h  +
mov ecx hInstance +
push ecx  +
call ds:LoadStringW  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jnz loc_10162E6  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_18] eax +
jmp loc_101654C  +
mov ecx [ebp+var_43C] +
add ecx 3A4h +
call sub_1024680  +
mov [ebp+var_460] eax +
mov edx [ebp+var_460] +
add edx 2 +
mov [ebp+var_464] edx +
mov eax [ebp+var_460] +
mov cx [eax] +
mov [ebp+var_466] cx +
add [ebp+var_460] 2 +
cmp [ebp+var_466] 0 +
jnz loc_101630C  +
mov edx [ebp+var_460] +
sub edx [ebp+var_464] +
sar edx 1 +
mov [ebp+var_46C] edx +
lea eax [ebp+var_434] +
mov [ebp+var_470] eax +
mov ecx [ebp+var_470] +
add ecx 2 +
mov [ebp+var_474] ecx +
mov edx [ebp+var_470] +
mov ax [edx] +
mov [ebp+var_476] ax +
add [ebp+var_470] 2 +
cmp [ebp+var_476] 0 +
jnz loc_101635C  +
mov ecx [ebp+var_470] +
sub ecx [ebp+var_474] +
sar ecx 1 +
mov [ebp+var_47C] ecx +
mov edx [ebp+var_47C] +
mov eax [ebp+var_46C] +
lea ecx [eax+edx+1] +
mov [ebp+var_228] ecx +
mov edx [ebp+var_228] +
push edx  +
lea ecx [ebp+var_10] +
call sub_1019510  +
lea ecx [ebp+var_10] +
call sub_1024680  +
test eax eax +
jnz loc_10163C7  +
jmp loc_101654C  +
lea eax [ebp+var_434] +
push eax  +
mov ecx [ebp+var_43C] +
add ecx 3A4h +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_228] +
push ecx  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
call sub_101A9F0  +
add esp 10h +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jge loc_1016406  +
jmp loc_101654C  +
jmp loc_1016535  +
mov ecx [ebp+var_43C] +
add ecx 3A4h +
call sub_1024680  +
mov [ebp+var_480] eax +
mov edx [ebp+var_480] +
add edx 2 +
mov [ebp+var_484] edx +
mov eax [ebp+var_480] +
mov cx [eax] +
mov [ebp+var_486] cx +
add [ebp+var_480] 2 +
cmp [ebp+var_486] 0 +
jnz loc_1016431  +
mov edx [ebp+var_480] +
sub edx [ebp+var_484] +
sar edx 1 +
mov [ebp+var_48C] edx +
mov eax [ebp+var_43C] +
mov ecx [eax+24h] +
call sub_101AAD0  +
mov [ebp+var_490] eax +
mov ecx [ebp+var_490] +
add ecx 2 +
mov [ebp+var_494] ecx +
mov edx [ebp+var_490] +
mov ax [edx] +
mov [ebp+var_496] ax +
add [ebp+var_490] 2 +
cmp [ebp+var_496] 0 +
jnz loc_1016489  +
mov ecx [ebp+var_490] +
sub ecx [ebp+var_494] +
sar ecx 1 +
mov [ebp+var_49C] ecx +
mov edx [ebp+var_49C] +
mov eax [ebp+var_48C] +
lea ecx [eax+edx+1] +
mov [ebp+var_438] ecx +
mov edx [ebp+var_438] +
push edx  +
lea ecx [ebp+var_10] +
call sub_1019510  +
lea ecx [ebp+var_10] +
call sub_1024680  +
test eax eax +
jnz loc_10164F1  +
jmp loc_101654C  +
mov eax [ebp+var_43C] +
mov ecx [eax+24h] +
call sub_101AAD0  +
push eax  +
mov ecx [ebp+var_43C] +
add ecx 3A4h +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_438] +
push ecx  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
call sub_101A9F0  +
add esp 10h +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jge loc_1016535  +
jmp loc_101654C  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_43C] +
add ecx 4 +
call sub_101A5D0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1015A50  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_1C] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_10] ecx +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_10] +
add ecx 248h +
call sub_1027430  +
test eax eax +
jz loc_10165B4  +
mov ecx [ebp+var_4] +
call sub_1008B40  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1028030  +
jmp loc_101658B  +
mov edx [ebp+var_10] +
cmp dword ptr [edx+244h] 0 +
jz loc_10165CE  +
mov eax [ebp+var_10] +
mov ecx [eax+244h] +
call sub_1008B40  +
mov ecx [ebp+var_10] +
mov edx [ecx+244h] +
mov [ebp+var_C] edx +
mov eax [ebp+var_C] +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_10165FA  +
push 1  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
mov ecx [ebp+var_8] +
mov eax [edx+4] +
call eax  +
mov [ebp+var_14] eax +
jmp loc_1016601  +
mov [ebp+var_14] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+244h] 0 +
call ds:BufferedPaintUnInit  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 40h  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_4] +
mov edx [eax+350h] +
sub edx [ecx+348h] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_4] +
mov edx [eax+34Ch] +
sub edx [ecx+344h] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax+348h] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx+344h] +
push eax  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 358h +
call sub_100E0E0  +
mov ecx [ebp+var_4] +
add ecx 354h +
call sub_10187E0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov [ebp+var_48] ecx +
push 0  +
lea ecx [ebp+var_28] +
call sub_1007F90  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 419h  +
mov ecx [ebp+var_48] +
add ecx 0FCh +
call sub_101A540  +
push 2  +
lea ecx [ebp+lParam] +
push ecx  +
mov edx [ebp+var_48] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+var_48] +
mov edx [ecx+0FCh] +
push edx  +
call ds:MapWindowPoints  +
mov eax [ebp-20h] +
add eax [ebp-18h] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_2C] eax +
mov eax [ebp-1Ch] +
mov [ebp+var_30] eax +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_48] +
add ecx 248h +
call sub_1022700  +
mov [ebp+var_38] eax +
cmp [ebp+var_38] 0 +
jz loc_10167C6  +
lea ecx [ebp+var_34] +
push ecx  +
mov edx [ebp+var_38] +
push edx  +
mov ecx [ebp+var_48] +
add ecx 248h +
call sub_101A110  +
test eax eax +
jz loc_10167C6  +
push 130h  +
lea eax [ebp+var_40] +
push eax  +
mov ecx [ebp+var_34] +
add ecx 4 +
call sub_10111E0  +
mov ecx [eax] +
mov [ebp+hWndFrom] ecx +
lea edx [ebp+lParam] +
push edx  +
mov eax [ebp+hWndFrom] +
push eax  +
call ds:GetClientRect  +
push 2  +
lea ecx [ebp+lParam] +
push ecx  +
mov edx [ebp+var_48] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+hWndFrom] +
push ecx  +
call ds:MapWindowPoints  +
mov edx [ebp-1Ch] +
sub edx [ebp+var_30] +
mov [ebp+var_4] edx +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 419h  +
mov ecx [ebp+hWndFrom] +
push ecx  +
call ds:SendMessageW  +
push 2  +
lea edx [ebp+lParam] +
push edx  +
mov eax [ebp+var_48] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+hWndFrom] +
push edx  +
call ds:MapWindowPoints  +
mov eax [ebp+var_30] +
add eax [ebp+var_4] +
cmp eax [ebp-1Ch] +
jle loc_10167C6  +
mov ecx [ebp-1Ch] +
sub ecx [ebp+var_30] +
mov [ebp+var_4] ecx +
push 19Bh  +
lea edx [ebp+var_44] +
push edx  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov eax [eax] +
mov [ebp+var_28] eax +
lea ecx [ebp+Points] +
push ecx  +
lea ecx [ebp+var_28] +
call sub_100D6B0  +
lea edx [ebp+Points] +
push edx  +
mov eax [ebp+var_48] +
mov ecx [eax+4] +
push ecx  +
lea ecx [ebp+var_28] +
call sub_101A630  +
mov edx [ebp+var_30] +
add edx [ebp+var_4] +
cmp edx [ebp-0Ch] +
jle loc_1016812  +
mov eax [ebp-0Ch] +
sub eax [ebp+var_30] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_48] +
mov edx [ecx+344h] +
cmp edx [ebp+var_30] +
jnz loc_1016850  +
mov eax [ebp+var_48] +
mov ecx [eax+348h] +
cmp ecx [ebp+var_2C] +
jnz loc_1016850  +
mov edx [ebp+var_2C] +
add edx 1 +
mov eax [ebp+var_48] +
cmp [eax+350h] edx +
jnz loc_1016850  +
mov ecx [ebp+var_30] +
add ecx [ebp+var_4] +
mov edx [ebp+var_48] +
cmp [edx+34Ch] ecx +
jz loc_1016891  +
mov eax [ebp+var_48] +
mov ecx [ebp+var_30] +
mov [eax+344h] ecx +
mov edx [ebp+var_2C] +
sub edx 1 +
mov eax [ebp+var_48] +
mov [eax+348h] edx +
mov ecx [ebp+var_2C] +
add ecx 2 +
mov edx [ebp+var_48] +
mov [edx+350h] ecx +
mov eax [ebp+var_30] +
add eax [ebp+var_4] +
mov ecx [ebp+var_48] +
mov [ecx+34Ch] eax +
mov ecx [ebp+var_48] +
call sub_1016630  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+hDC] eax +
cmp off_103B010 offset off_103B010 +
jz loc_10168FF  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_10168FF  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_10168FF  +
push offset dword_10020F8  +
push 0Ah  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_20] 1 +
jmp loc_1016906  +
mov [ebp+var_20] 0 +
lea edx [ebp+Rect] +
push edx  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_100D6B0  +
push 5  +
call ds:GetSysColorBrush  +
mov [ebp+hbr] eax +
mov eax [ebp+hbr] +
push eax  +
lea ecx [ebp+Rect] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:FillRect  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
movzx eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
push 2Bh  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call EtwTraceMessage  +
add esp 18h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov ecx [ebp+var_C] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_10169EF  +
lea eax [ebp+var_4] +
push eax  +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_C] +
add ecx 248h +
call sub_1027580  +
cmp [ebp+var_4] 0 +
jz loc_10169ED  +
mov edx [ebp+var_C] +
mov eax [edx+1C0h] +
push eax  +
mov ecx [ebp+var_C] +
fld  dword ptr [ecx+1C4h] +
fmul  ds:dbl_1002160 +
call _ftol2_sse  +
push eax  +
push 417h  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A570  +
jmp loc_101699C  +
mov ecx [ebp+var_C] +
call sub_10166A0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov [ebp+var_20] ecx +
mov [ebp+var_14] 0 +
mov [ebp+var_C] 0 +
mov eax [ebp+var_20] +
cmp dword ptr [eax+24h] 0 +
jz loc_1016A3C  +
push 0  +
mov ecx [ebp+var_20] +
mov ecx [ecx+24h] +
call sub_101AA50  +
test eax eax +
jz loc_1016A3C  +
mov [ebp+var_24] 1 +
jmp loc_1016A43  +
mov [ebp+var_24] 0 +
mov edx [ebp+var_24] +
mov [ebp+var_10] edx +
mov ecx [ebp+var_20] +
add ecx 254h +
call sub_101A960  +
mov ecx [ebp+var_20] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jz loc_1016ADE  +
mov eax [ebp+var_18] +
mov [ebp+var_8] eax +
lea ecx [ebp+var_4] +
push ecx  +
lea edx [ebp+var_18] +
push edx  +
mov ecx [ebp+var_20] +
add ecx 248h +
call sub_1027580  +
mov ecx [ebp+var_4] +
call sub_1016B70  +
test eax eax +
jz loc_1016ADC  +
cmp [ebp+var_10] 0 +
jnz loc_1016AD3  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_20] +
add ecx 248h +
call sub_10274E0  +
mov ecx [ebp+var_4] +
call sub_1008B40  +
cmp [ebp+var_4] 0 +
jz loc_1016ACC  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1028030  +
mov [ebp+var_4] 0 +
mov [ebp+var_C] 1 +
mov [ebp+var_14] 1 +
jmp loc_1016ADE  +
jmp loc_1016A68  +
cmp [ebp+var_10] 0 +
jz loc_1016B35  +
cmp [ebp+var_14] 0 +
jnz loc_1016B35  +
cmp dword_103B7FC 0 +
jz loc_1016B35  +
mov ecx dword_103B7FC +
call sub_1026DB0  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jz loc_1016B35  +
mov edx [ebp+var_1C] +
push edx  +
mov ecx [ebp+var_20] +
call sub_1016F60  +
mov [ebp+var_C] 1 +
cmp [ebp+var_1C] 0 +
jz loc_1016B35  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
mov edx [ebp+var_1C] +
push edx  +
mov eax [ecx+8] +
call eax  +
mov [ebp+var_1C] 0 +
mov ecx [ebp+var_20] +
add ecx 254h +
call sub_101A980  +
cmp [ebp+var_C] 0 +
jz loc_1016B61  +
push 1  +
mov ecx [ebp+var_20] +
mov ecx [ecx+244h] +
call sub_1024CA0  +
mov ecx [ebp+var_20] +
call sub_10166A0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+20h] +
call sub_1016B90  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+50h] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
mov ecx [ebp+arg_8] +
mov [ebp+var_10] ecx +
mov edx 64h +
sub edx [ebp+var_14] +
push edx  +
push 1  +
push 405h  +
mov ecx [ebp+var_1C] +
add ecx 0FCh +
call sub_101A540  +
mov ecx [ebp+var_1C] +
call sub_10166A0  +
fild  [ebp+var_14] +
fdiv  ds:dbl_1002168 +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
mov eax [ebp+var_1C] +
fdiv  dword ptr [eax+1C4h] +
fstp  [ebp+var_8] +
mov ecx [ebp+var_1C] +
fld  [ebp+var_C] +
fstp  dword ptr [ecx+1C4h] +
mov ecx [ebp+var_1C] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jz loc_1016C67  +
lea edx [ebp+var_4] +
push edx  +
lea eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_1C] +
add ecx 248h +
call sub_1027580  +
mov ecx [ebp+var_10] +
cmp ecx [ebp+var_4] +
jz loc_1016C65  +
push ecx  +
fld  [ebp+var_8] +
fstp  [esp+20h+var_20] +
mov edx [ebp+var_1C] +
push ecx  +
fld  dword ptr [edx+1C4h] +
fstp  [esp+24h+var_24] +
mov ecx [ebp+var_4] +
call sub_10290C0  +
jmp loc_1016C25  +
mov eax [ebp+var_1C] +
cmp dword ptr [eax+0F0h] 0 +
jz loc_1016C9F  +
push offset pguid  +
mov ecx [ebp+var_1C] +
push ecx  +
fld  dword ptr [ecx+1C4h] +
fstp  [esp+24h+var_24] +
mov edx [ebp+var_1C] +
mov eax [edx+0F0h] +
mov ecx [ebp+var_1C] +
mov edx [ecx+0F0h] +
mov eax [eax] +
push edx  +
mov ecx [eax+1Ch] +
call ecx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 354h +
call sub_10187E0  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1016DA6  +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+1C0h] 0 +
jz loc_1016DA6  +
mov edx [ebp+var_10] +
mov dword ptr [edx+1C0h] 0 +
mov eax [ebp+var_10] +
mov ecx [eax+1C0h] +
push ecx  +
push 1  +
push 432h  +
mov ecx [ebp+var_10] +
add ecx 0FCh +
call sub_101A540  +
mov ecx [ebp+var_10] +
add ecx 254h +
call sub_101A960  +
mov ecx [ebp+var_10] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_1016D90  +
lea edx [ebp+var_8] +
push edx  +
lea eax [ebp+var_C] +
push eax  +
mov ecx [ebp+var_10] +
add ecx 248h +
call sub_1027580  +
mov ecx [ebp+var_8] +
cmp ecx [ebp+var_4] +
jz loc_1016D8E  +
push 0  +
push 0  +
push 40Ah  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_101A540  +
jmp loc_1016D56  +
mov ecx [ebp+var_10] +
add ecx 254h +
call sub_101A980  +
push 14h  +
call ds:Sleep  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_10] eax +
mov [ebp+var_38] ecx +
mov [ebp+var_C] 0 +
lea eax [ebp+var_20] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_1016EE0  +
mov ecx [ebp+var_38] +
add ecx 254h +
call sub_101A960  +
mov ecx [ebp+var_38] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_24] eax +
mov ecx [ebp+var_24] +
mov [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jz loc_1016E67  +
lea edx [ebp+var_8] +
push edx  +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_38] +
add ecx 248h +
call sub_1027580  +
cmp [ebp+var_8] 0 +
jz loc_1016E5F  +
lea ecx [ebp+var_20] +
push ecx  +
lea edx [ebp+var_34] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1016F20  +
push eax  +
call sub_1016E90  +
test eax eax +
jz loc_1016E5F  +
mov eax [ebp+var_8] +
mov [ebp+var_C] eax +
cmp [ebp+arg_4] 0 +
jz loc_1016E5D  +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_24] +
mov [ecx] edx +
jmp loc_1016E67  +
mov eax [ebp+var_4] +
mov [ebp+var_24] eax +
jmp loc_1016E0D  +
mov ecx [ebp+var_38] +
add ecx 254h +
call sub_101A980  +
mov eax [ebp+var_C] +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1016EB0  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov ecx 4 +
mov edi [ebp+arg_4] +
mov esi [ebp+arg_0] +
xor eax eax +
mov eax 0 +
cmps   +
setz al  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
add eax 60h +
mov ecx [ebp+arg_0] +
mov edx [eax] +
mov [ecx] edx +
mov edx [eax+4] +
mov [ecx+4] edx +
mov edx [eax+8] +
mov [ecx+8] edx +
mov eax [eax+0Ch] +
mov [ecx+0Ch] eax +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
add eax 2A0h +
mov ecx [ebp+arg_0] +
mov edx [eax] +
mov [ecx] edx +
mov edx [eax+4] +
mov [ecx+4] edx +
mov edx [eax+8] +
mov [ecx+8] edx +
mov eax [eax+0Ch] +
mov [ecx+0Ch] eax +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_103589B  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_2C] ecx +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 0 +
mov ecx [ebp+var_2C] +
add ecx 254h +
call sub_101A960  +
mov ecx [ebp+arg_0] +
call sub_1016B90  +
test eax eax +
jz loc_1016FC8  +
push 0  +
mov eax [ebp+var_2C] +
mov ecx [eax+24h] +
call sub_101AA50  +
test eax eax +
jnz loc_1016FC8  +
jmp loc_10170FF  +
push 2D4h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_28] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_28] 0 +
jz loc_1016FF6  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_28] +
call sub_1027640  +
mov [ebp+var_30] eax +
jmp loc_1016FFD  +
mov [ebp+var_30] 0 +
mov edx [ebp+var_30] +
mov [ebp+var_24] edx +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_24] +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jnz loc_1017022  +
mov [ebp+var_18] 8007000Eh +
jmp loc_10170FF  +
mov ecx [ebp+arg_0] +
call sub_1016B90  +
test eax eax +
jz loc_1017045  +
mov ecx [ebp+var_14] +
push ecx  +
mov ecx [ebp+var_2C] +
add ecx 248h +
call sub_10272E0  +
mov [ebp+var_1C] eax +
jmp loc_101705A  +
mov edx [ebp+var_14] +
push edx  +
mov ecx [ebp+var_2C] +
add ecx 248h +
call sub_1027390  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jnz loc_101706C  +
mov [ebp+var_18] 8007000Eh +
jmp loc_10170FF  +
mov eax [ebp+var_14] +
push eax  +
call sub_1028000  +
mov ecx [ebp+var_2C] +
mov ecx [ecx+244h] +
call sub_1017140  +
mov [ebp+hWndParent] eax +
push 0  +
mov edx [ebp+hWndParent] +
push edx  +
mov ecx [ebp+var_14] +
call sub_10195B0  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jnz loc_101709F  +
jmp loc_10170FF  +
push 1  +
mov eax [ebp+var_2C] +
mov ecx [eax+244h] +
call sub_1024CA0  +
mov ecx [ebp+var_14] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_1024830  +
mov edx [ebp+var_2C] +
mov eax [edx+1C0h] +
push eax  +
mov ecx [ebp+var_2C] +
fld  dword ptr [ecx+1C4h] +
fmul  ds:dbl_1002160 +
call _ftol2_sse  +
push eax  +
push 417h  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101A540  +
push 5  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101A6C0  +
mov ecx [ebp+var_2C] +
call sub_10166A0  +
mov ecx [ebp+var_2C] +
add ecx 254h +
call sub_101A980  +
cmp [ebp+var_14] 0 +
jz loc_1017123  +
mov edx [ebp+var_14] +
push edx  +
call sub_1028030  +
mov [ebp+var_14] 0 +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+54h] +
mov eax [ecx+4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_101719D  +
cmp dword_103B7FC 0 +
jz loc_101718F  +
mov ecx [ebp+var_4] +
push ecx  +
mov ecx dword_103B7FC +
call sub_1026E40  +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [eax+8] +
call edx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_4] +
mov [ebp+lParam] eax +
mov [ebp+var_8] 0 +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+26Ch] 0 +
jnz loc_10171D8  +
jmp loc_101721E  +
jmp loc_101721E  +
push 0  +
mov edx [ebp+lParam] +
push edx  +
mov ecx [ebp+var_10] +
call sub_1016DC0  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_10171FD  +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+var_8] +
call sub_1029E80  +
jmp loc_1017216  +
mov ecx [ebp+lParam] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_1016F60  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jge loc_1017216  +
jmp loc_101721E  +
jmp loc_101721E  +
mov ecx [ebp+var_10] +
call sub_10166A0  +
mov edx [ebp+lParam] +
mov eax [edx] +
mov ecx [ebp+lParam] +
push ecx  +
mov edx [eax+8] +
call edx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_C] eax +
mov ecx [ebp+var_14] +
add ecx 254h +
call sub_101A960  +
lea ecx [ebp+var_10] +
push ecx  +
mov edx [ebp+var_C] +
push edx  +
mov ecx [ebp+var_14] +
call sub_1016DC0  +
mov [ebp+lParam] eax +
cmp [ebp+lParam] 0 +
jz loc_10172B5  +
mov eax [ebp+var_C] +
push eax  +
mov ecx [ebp+lParam] +
call sub_102A060  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_10172B5  +
mov ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+var_14] +
add ecx 248h +
call sub_10274E0  +
mov edx [ebp+lParam] +
push edx  +
push 0  +
push 420h  +
mov ecx [ebp+lParam] +
add ecx 4 +
call sub_101A570  +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov edx [ebp+var_C] +
push edx  +
mov eax [ecx+8] +
call eax  +
mov ecx [ebp+var_14] +
add ecx 254h +
call sub_101A980  +
mov ecx [ebp+var_14] +
call sub_10166A0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_8] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
call sub_1008B40  +
cmp [ebp+var_4] 0 +
jz loc_101731F  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1028030  +
mov [ebp+var_4] 0 +
push 1  +
mov edx [ebp+var_8] +
mov ecx [edx+244h] +
call sub_1024CA0  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov [ebp+var_34] ecx +
mov eax [ebp+arg_4] +
mov [ebp+lParam] eax +
mov [ebp+var_10] 0 +
mov [ebp+var_8] 0 +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_34] +
add ecx 254h +
call sub_101A960  +
mov ecx [ebp+lParam] +
call sub_1017510  +
mov [ebp+var_14] eax +
push 0  +
mov ecx [ebp+lParam] +
push ecx  +
mov ecx [ebp+var_34] +
call sub_1016DC0  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jnz loc_10173E1  +
mov ecx [ebp+var_14] +
call sub_1017530  +
cmp eax 1 +
jnz loc_10173CA  +
mov [ebp+var_8] 0 +
mov [ebp+var_10] 0 +
mov [ebp+var_4] 1 +
jmp loc_10173DF  +
mov [ebp+var_8] 1 +
mov [ebp+var_10] 1 +
mov [ebp+var_4] 0 +
jmp loc_10173F6  +
mov [ebp+var_8] 1 +
mov [ebp+var_10] 1 +
mov [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jz loc_1017448  +
lea edx [ebp+var_30] +
push edx  +
mov ecx [ebp+lParam] +
call sub_1016EE0  +
sub esp 10h +
mov ecx esp +
mov edx [eax] +
mov [ecx] edx +
mov edx [eax+4] +
mov [ecx+4] edx +
mov edx [eax+8] +
mov [ecx+8] edx +
mov eax [eax+0Ch] +
mov [ecx+0Ch] eax +
mov ecx [ebp+var_14] +
call sub_1017550  +
mov ecx [ebp+var_34] +
add ecx 254h +
call sub_101A980  +
jmp loc_10174F4  +
jmp loc_10174F4  +
jmp loc_10174CE  +
cmp [ebp+var_10] 0 +
jz loc_10174A8  +
mov ecx [ebp+lParam] +
push ecx  +
mov ecx [ebp+var_14] +
call sub_102A060  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_10174A8  +
mov edx [ebp+var_14] +
push edx  +
mov ecx [ebp+var_34] +
add ecx 248h +
call sub_101A0C0  +
mov [ebp+var_20] eax +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+var_34] +
add ecx 248h +
call sub_10274E0  +
mov ecx [ebp+var_14] +
call sub_1008B40  +
cmp [ebp+var_14] 0 +
jz loc_10174A8  +
mov ecx [ebp+var_14] +
push ecx  +
call sub_1028030  +
mov [ebp+var_14] 0 +
cmp [ebp+var_8] 0 +
jz loc_10174CE  +
cmp [ebp+var_18] 0 +
jz loc_10174C2  +
mov edx [ebp+lParam] +
push edx  +
mov ecx [ebp+var_18] +
call sub_1029E80  +
jmp loc_10174CE  +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+var_34] +
call sub_1016F60  +
mov ecx [ebp+var_34] +
add ecx 254h +
call sub_101A980  +
push 1  +
mov ecx [ebp+var_34] +
mov ecx [ecx+244h] +
call sub_1024CA0  +
mov ecx [ebp+var_34] +
call sub_10166A0  +
mov edx [ebp+lParam] +
mov eax [edx] +
mov ecx [ebp+lParam] +
push ecx  +
mov edx [eax+8] +
call edx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+14h] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 44h +
call sub_101A0A0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
add eax 2A0h +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov edx [ebp+arg_4] +
mov [eax+4] edx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov edx [ebp+arg_C] +
mov [eax+0Ch] edx +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_10175C0  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov ecx dword_103B544 +
call sub_1024080  +
cmp eax 1 +
jbe loc_1017634  +
push 0  +
push 12Fh  +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
mov ecx [ebp+var_14] +
cmp dword ptr [ecx+24h] 0 +
jz loc_1017615  +
mov edx [ebp+var_14] +
mov ecx [edx+24h] +
call sub_101AAB0  +
push eax  +
mov ecx [ebp+var_14] +
call sub_1017980  +
push 5  +
push 12Dh  +
lea eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
jmp loc_101768B  +
push 0  +
push 12Dh  +
lea ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
mov edx [ebp+var_14] +
cmp dword ptr [edx+24h] 0 +
jz loc_101766E  +
mov eax [ebp+var_14] +
mov ecx [eax+24h] +
call sub_101AAB0  +
push eax  +
mov ecx [ebp+var_14] +
call sub_1017980  +
push 5  +
push 12Fh  +
lea ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_10176E6  +
mov ecx [ebp+var_8] +
mov edx [ecx+24h] +
cmp edx [ebp+var_4] +
jnz loc_10176E6  +
mov eax [ebp+var_8] +
mov ecx [eax+24h] +
call sub_101AAB0  +
push eax  +
mov ecx [ebp+var_8] +
call sub_1017980  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
add ecx 254h +
call sub_101A960  +
mov ecx [ebp+var_10] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_1017760  +
lea ecx [ebp+var_C] +
push ecx  +
lea edx [ebp+var_8] +
push edx  +
mov ecx [ebp+var_10] +
add ecx 248h +
call sub_1027580  +
cmp [ebp+var_C] 0 +
jz loc_101775E  +
mov eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_C] +
call sub_102A4A0  +
jmp loc_1017730  +
mov ecx [ebp+var_10] +
add ecx 254h +
call sub_101A980  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov dword ptr [eax+26Ch] 0 +
cmp dword_103B7FC 0 +
jz loc_10177AC  +
mov ecx dword_103B7FC +
call sub_1026CF0  +
mov ecx [ebp+var_8] +
add ecx 254h +
call sub_101A960  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+var_8] +
add ecx 248h +
call sub_1027430  +
test eax eax +
jz loc_10177F0  +
mov ecx [ebp+var_4] +
call sub_1008B40  +
cmp [ebp+var_4] 0 +
jz loc_10177EE  +
mov edx [ebp+var_4] +
push edx  +
call sub_1028030  +
mov [ebp+var_4] 0 +
jmp loc_10177BA  +
mov ecx [ebp+var_8] +
add ecx 254h +
call sub_101A980  +
cmp dword_103B7FC 0 +
jz loc_1017824  +
mov eax dword_103B7FC +
mov ecx [eax] +
mov edx dword_103B7FC +
push edx  +
mov eax [ecx+8] +
call eax  +
mov dword_103B7FC 0 +
mov ecx [ebp+var_8] +
call sub_101F320  +
mov ecx [ebp+var_8] +
call sub_1016630  +
xor ecx ecx +
mov edx [ebp+var_8] +
add edx 344h +
mov [edx] ecx +
mov [edx+4] ecx +
mov [edx+8] ecx +
mov [edx+0Ch] ecx +
push 0  +
mov ecx dword_103B544 +
call sub_1023FF0  +
test eax eax +
jnz loc_1017865  +
push 1  +
mov ecx [ebp+var_8] +
call sub_1016100  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035BCB  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_1C] ecx +
mov [ebp+var_10] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_10178B3  +
mov [ebp+var_10] 1 +
jmp loc_1017961  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_1C] +
call sub_101F490  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_10178CD  +
jmp loc_1017961  +
mov ecx [ebp+arg_0] +
call sub_101AAB0  +
push eax  +
mov ecx [ebp+var_1C] +
call sub_1017980  +
mov ecx [ebp+var_1C] +
mov dword ptr [ecx+26Ch] 1 +
push 3Ch  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_18] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_18] 0 +
jz loc_1017912  +
mov ecx [ebp+var_18] +
call sub_1026810  +
mov [ebp+var_20] eax +
jmp loc_1017919  +
mov [ebp+var_20] 0 +
mov edx [ebp+var_20] +
mov [ebp+var_14] edx +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov dword_103B7FC eax +
cmp dword_103B7FC 0 +
jnz loc_1017940  +
mov [ebp+var_10] 8007000Eh +
jmp loc_1017961  +
mov ecx [ebp+arg_0] +
call sub_101AA90  +
push eax  +
mov ecx dword_103B7FC +
call sub_1026A90  +
mov [ebp+var_10] eax +
push 0  +
mov ecx [ebp+var_1C] +
call sub_1016100  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov [ebp+var_28] ecx +
mov ecx dword_103B544 +
call sub_1024080  +
cmp eax 1 +
jbe loc_1017A12  +
mov eax [ebp+lpString] +
push eax  +
mov ecx [ebp+var_28] +
call sub_1017A40  +
mov [ebp+lParam] 0 +
xor ecx ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ecx +
mov [ebp+lParam] 20h +
mov [ebp+var_1C] 3 +
mov [ebp+var_18] 12Dh +
mov [ebp+var_14] 0FFFFFFFFh +
mov edx [ebp+lpString] +
mov [ebp+var_8] edx +
lea eax [ebp+lParam] +
push eax  +
push 12Dh  +
push 440h  +
push 12Dh  +
lea ecx [ebp+var_24] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A540  +
jmp loc_1017A26  +
mov edx [ebp+lpString] +
push edx  +
push 12Fh  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_101A740  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10358D0  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_101ACF0  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_3C] +
mov dword ptr [ecx+388h] 0 +
mov edx [ebp+var_3C] +
mov dword ptr [edx+384h] 0 +
mov eax [ebp+var_3C] +
mov ecx [ebp+var_3C] +
mov edx [ecx+380h] +
mov [eax+390h] edx +
mov eax [ebp+var_3C] +
mov ecx [ebp+var_3C] +
mov edx [ecx+37Ch] +
mov [eax+38Ch] edx +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_100FBB0  +
mov [ebp+hDC] eax +
push 0  +
push 0  +
push 31h  +
push 12Dh  +
lea eax [ebp+var_30] +
push eax  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A540  +
mov [ebp+var_14] eax +
mov ecx [ebp+var_14] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:SelectObject  +
mov eax [ebp+arg_0] +
mov [ebp+var_40] eax +
mov ecx [ebp+var_40] +
add ecx 2 +
mov [ebp+var_44] ecx +
mov edx [ebp+var_40] +
mov ax [edx] +
mov [ebp+var_46] ax +
add [ebp+var_40] 2 +
cmp [ebp+var_46] 0 +
jnz loc_1017B0A  +
mov ecx [ebp+var_40] +
sub ecx [ebp+var_44] +
sar ecx 1 +
mov [ebp+var_4C] ecx +
lea edx [ebp+var_10] +
push edx  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
mov eax [ebp+var_3C] +
mov ecx [eax+37Ch] +
push ecx  +
push 40h  +
push 0FFFFFFFFh  +
push 0  +
mov edx [ebp+var_4C] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ScriptStringAnalyse  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jl loc_1017C74  +
mov edx [ebp+var_10] +
push edx  +
call ScriptString_pLogAttr  +
mov [ebp+var_18] eax +
push 0AC11h  +
mov eax [ebp+var_3C] +
add eax 384h +
push eax  +
lea ecx [ebp+var_1C] +
call sub_101ACA0  +
push eax  +
lea ecx [ebp+var_1C] +
call sub_1024680  +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:DrawTextW  +
mov [ebp+var_28] eax +
mov edx [ebp+var_3C] +
mov eax [ebp+var_28] +
cmp eax [edx+380h] +
jb loc_1017C62  +
lea ecx [ebp+var_1C] +
call sub_101ACA0  +
sub eax 1 +
mov [ebp+var_2C] eax +
jmp loc_1017BCA  +
mov ecx [ebp+var_2C] +
sub ecx 1 +
mov [ebp+var_2C] ecx +
cmp [ebp+var_2C] 0 +
jz loc_1017C1C  +
mov edx [ebp+var_18] +
add edx [ebp+var_2C] +
mov al [edx] +
shr al 1 +
and al 1 +
movzx ecx al +
test ecx ecx +
jz loc_1017C1A  +
mov edx [ebp+var_2C] +
push edx  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_1018D80  +
mov [ebp+var_50] eax +
mov ecx [ebp+var_50] +
mov [ebp+var_54] ecx +
mov byte ptr [ebp+var_4] 1 +
mov edx [ebp+var_54] +
push edx  +
lea ecx [ebp+var_1C] +
call sub_1018D50  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_34] +
call sub_101AD70  +
jmp loc_1017C1C  +
jmp loc_1017BC1  +
cmp [ebp+var_2C] 0 +
jnz loc_1017C62  +
mov eax [ebp+var_3C] +
mov dword ptr [eax+388h] 0 +
mov ecx [ebp+var_3C] +
mov dword ptr [ecx+384h] 0 +
mov edx [ebp+var_3C] +
mov eax [ebp+var_3C] +
mov ecx [eax+380h] +
mov [edx+390h] ecx +
mov edx [ebp+var_3C] +
mov eax [ebp+var_3C] +
mov ecx [eax+37Ch] +
mov [edx+38Ch] ecx +
jmp loc_1017C74  +
mov edx [ebp+var_3C] +
mov eax [ebp+var_28] +
cmp eax [edx+380h] +
jnb loc_1017B72  +
mov ecx [ebp+var_3C] +
mov edx [ebp+var_3C] +
mov eax [edx+37Ch] +
mov [ecx+38Ch] eax +
lea ecx [ebp+var_10] +
push ecx  +
call ScriptStringFree  +
mov edx [ebp+var_3C] +
mov eax [ebp+var_3C] +
mov ecx [edx+38Ch] +
sub ecx [eax+384h] +
and ecx 0FFFFh +
movzx edx cx +
mov eax [ebp+var_3C] +
mov ecx [ebp+var_3C] +
mov eax [eax+390h] +
sub eax [ecx+388h] +
and eax 0FFFFh +
movzx ecx ax +
shl ecx 10h +
or edx ecx +
push edx  +
push 0  +
push 41Fh  +
push 12Dh  +
lea edx [ebp+var_38] +
push edx  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A540  +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_100FBD0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_101AD70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov ecx [ebp+var_C] +
call sub_101E8B0  +
mov ecx [ebp+var_C] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_1017D97  +
lea eax [ebp+var_4] +
push eax  +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_C] +
add ecx 248h +
call sub_1027580  +
cmp [ebp+var_4] 0 +
jz loc_1017D95  +
mov edx [ebp+var_C] +
mov eax [edx+1C0h] +
push eax  +
mov ecx [ebp+var_C] +
fld  dword ptr [ecx+1C4h] +
fmul  ds:dbl_1002160 +
call _ftol2_sse  +
push eax  +
push 417h  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A570  +
jmp loc_1017D44  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov eax [ebp+var_8] +
mov ecx [eax+4] +
push ecx  +
call ds:DefWindowProcW  +
mov [ebp+var_4] eax +
mov edx [ebp+var_4] +
mov [ebp+var_C] edx +
mov eax [ebp+var_C] +
sub eax 0Ch +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 5 +
ja loc_1017DFF  +
mov ecx [ebp+var_C] +
jmp ds:off_1017E08[ecx*4]  +
mov [ebp+var_4] 0 +
jmp loc_1017DFF  +
mov [ebp+var_4] 0Ah +
jmp loc_1017DFF  +
mov [ebp+var_4] 0Bh +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov ecx [ebp+var_C] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_1017E84  +
lea eax [ebp+var_4] +
push eax  +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_C] +
add ecx 248h +
call sub_1027580  +
cmp [ebp+var_4] 0 +
jz loc_1017E82  +
push 0  +
push 0  +
push 31Eh  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A570  +
jmp loc_1017E4C  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov [ebp+var_5C] ecx +
mov [ebp+var_8] 0 +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 12Dh +
jnz loc_101811C  +
mov ecx [ebp+var_4] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_C] +
mov eax [edx+0Ch] +
mov [ebp+var_60] eax +
cmp [ebp+var_60] 1 +
jz loc_1017EF1  +
cmp [ebp+var_60] 10001h +
jz loc_1017F24  +
cmp [ebp+var_60] 10002h +
jz loc_1017F41  +
jmp loc_101810D  +
mov ecx [ebp+var_C] +
mov edx [ecx+10h] +
mov [ebp+hDC] edx +
push 5  +
call ds:GetSysColorBrush  +
mov [ebp+hbr] eax +
mov eax [ebp+hbr] +
push eax  +
mov ecx [ebp+var_C] +
add ecx 14h +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:FillRect  +
mov eax 70h +
jmp loc_1018128  +
mov [ebp+var_18] 30h +
push 5  +
call ds:GetSysColor  +
mov ecx [ebp+var_C] +
mov [ecx+48h] eax +
mov eax [ebp+var_18] +
jmp loc_1018128  +
mov edx [ebp+var_C] +
mov eax [edx+10h] +
mov [ebp+var_20] eax +
mov [ebp+var_1C] 80004005h +
mov ecx [ebp+var_5C] +
cmp dword ptr [ecx+24h] 0 +
jz loc_1018109  +
mov edx [ebp+var_C] +
add edx 54h +
mov eax [edx] +
mov [ebp+Rect.left] eax +
mov ecx [edx+4] +
mov [ebp+Rect.top] ecx +
mov eax [edx+8] +
mov [ebp+Rect.right] eax +
mov ecx [edx+0Ch] +
mov [ebp+Rect.bottom] ecx +
push offset aToolbar  +
push 0  +
call ds:OpenThemeData  +
mov [ebp+var_34] eax +
push 5  +
call ds:GetSysColorBrush  +
mov [ebp+var_38] eax +
mov edx [ebp+Rect.left] +
mov [ebp+rc.left] edx +
mov eax [ebp+Rect.top] +
mov [ebp+rc.top] eax +
mov ecx [ebp+Rect.right] +
mov [ebp+rc.right] ecx +
mov edx [ebp+Rect.bottom] +
mov [ebp+rc.bottom] edx +
cmp [ebp+var_34] 0 +
jnz loc_1017FCC  +
push 2Eh  +
call ds:GetSystemMetrics  +
imul eax eax +
push eax  +
push 0  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov ecx [ebp+var_38] +
push ecx  +
lea edx [ebp+rc] +
push edx  +
mov eax [ebp+var_20] +
push eax  +
call ds:FillRect  +
push 0  +
push 0  +
push 31h  +
push 12Dh  +
lea ecx [ebp+var_58] +
push ecx  +
mov ecx [ebp+var_5C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A540  +
mov [ebp+var_4C] eax +
mov edx [ebp+var_4C] +
push edx  +
mov eax [ebp+var_20] +
push eax  +
call ds:SelectObject  +
mov [ebp+var_50] eax +
mov ecx [ebp+var_C] +
mov edx [ecx+3Ch] +
push edx  +
mov eax [ebp+var_20] +
push eax  +
call ds:SetTextColor  +
mov ecx [ebp+var_C] +
mov edx [ecx+48h] +
push edx  +
mov eax [ebp+var_20] +
push eax  +
call ds:SetBkColor  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov ecx [ebp+var_5C] +
mov edx [ebp+var_5C] +
mov ecx [ecx+390h] +
sub ecx [edx+388h] +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+Rect.top] +
mov [ebp+Rect.top] eax +
cmp [ebp+var_34] 0 +
jz loc_10180BE  +
lea edx [ebp+var_54] +
push edx  +
mov ecx [ebp+var_5C] +
call sub_10181F0  +
mov eax [ebp+var_C] +
add eax 54h +
push eax  +
mov ecx [ebp+var_C] +
add ecx 14h +
push ecx  +
mov edx [ebp+var_54] +
push edx  +
push 2  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+var_34] +
push ecx  +
call ds:DrawThemeBackground  +
lea edx [ebp+Rect] +
push edx  +
push 0  +
push 0A815h  +
push 0FFFFFFFFh  +
mov eax [ebp+var_5C] +
mov ecx [eax+24h] +
call sub_101AAB0  +
push eax  +
mov ecx [ebp+var_54] +
push ecx  +
push 2  +
mov edx [ebp+var_20] +
push edx  +
mov eax [ebp+var_34] +
push eax  +
call ds:DrawThemeText  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jl loc_10180CA  +
cmp [ebp+var_34] 0 +
jnz loc_10180EB  +
push 0A811h  +
lea ecx [ebp+Rect] +
push ecx  +
push 0FFFFFFFFh  +
mov edx [ebp+var_5C] +
mov ecx [edx+24h] +
call sub_101AAB0  +
push eax  +
mov eax [ebp+var_20] +
push eax  +
call ds:DrawTextW  +
mov ecx [ebp+var_50] +
push ecx  +
mov edx [ebp+var_20] +
push edx  +
call ds:SelectObject  +
cmp [ebp+var_34] 0 +
jz loc_1018109  +
mov eax [ebp+var_34] +
push eax  +
call ds:CloseThemeData  +
xor eax eax +
jmp loc_1018128  +
xor eax eax +
jmp loc_1018128  +
mov ecx [ebp+10h] +
mov dword ptr [ecx] 1 +
jmp loc_1018125  +
mov edx [ebp+arg_8] +
mov dword ptr [edx] 0 +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 0 +
cmp [ebp+arg_0] 12Dh +
jnz loc_10181DE  +
mov edx [ebp+var_C] +
cmp dword ptr [edx+24h] 0 +
jz loc_10181D5  +
mov eax [ebp+var_C] +
mov ecx [eax+24h] +
call sub_101AAD0  +
push eax  +
call sub_102ED40  +
mov [ebp+pv] eax +
cmp [ebp+pv] 0 +
jz loc_101819F  +
mov ecx [ebp+pv] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx+10h] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+0Ch] +
push edx  +
call sub_101A9A0  +
jmp loc_10181BE  +
mov eax [ebp+var_C] +
mov ecx [eax+24h] +
call sub_101AAD0  +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+10h] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax+0Ch] +
push ecx  +
call sub_101A9A0  +
cmp [ebp+pv] 0 +
jz loc_10181D5  +
mov edx [ebp+pv] +
push edx  +
call ds:CoTaskMemFree  +
mov [ebp+pv] 0 +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov [ebp+var_30] ecx +
mov [ebp+lParam] 0 +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
mov [ebp+var_4] eax +
mov [ebp+lParam] 20h +
mov [ebp+var_1C] 4 +
mov [ebp+var_18] 12Dh +
lea ecx [ebp+lParam] +
push ecx  +
push 12Dh  +
push 43Fh  +
push 12Dh  +
lea edx [ebp+var_28] +
push edx  +
mov ecx [ebp+var_30] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A540  +
push 0  +
push 0  +
push 447h  +
push 12Dh  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx [ebp+var_30] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A540  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov [ebp+var_24] ecx +
mov edx [ebp+arg_0] +
mov dword ptr [edx] 1 +
movzx eax byte ptr [ebp+var_10] +
and eax 2 +
jz loc_10182A3  +
mov ecx [ebp+arg_0] +
mov dword ptr [ecx] 3 +
jmp loc_10182F4  +
movzx edx byte ptr [ebp+var_10] +
and edx 4 +
jnz loc_10182B7  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 4 +
jmp loc_10182F4  +
cmp [ebp+var_24] 0 +
jz loc_10182D1  +
movzx ecx byte ptr [ebp+var_10] +
and ecx 1 +
jz loc_10182D1  +
mov edx [ebp+arg_0] +
mov dword ptr [edx] 6 +
jmp loc_10182F4  +
cmp [ebp+var_24] 0 +
jz loc_10182E2  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 2 +
jmp loc_10182F4  +
movzx ecx byte ptr [ebp+var_10] +
and ecx 1 +
jz loc_10182F4  +
mov edx [ebp+arg_0] +
mov dword ptr [edx] 5 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0F8h +
mov [ebp+var_E0] ecx +
cmp [ebp+arg_0] 12Dh +
jnz loc_10186D4  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx+8] +
mov [ebp+var_E4] edx +
cmp [ebp+var_E4] 0FFFFFD3Ah +
jz loc_1018341  +
jmp loc_10186D4  +
call ds:CreatePopupMenu  +
mov [ebp+hMenu] eax +
mov [ebp+var_20] 0 +
mov [ebp+var_38] 0 +
jmp loc_1018363  +
mov eax [ebp+var_38] +
add eax 1 +
mov [ebp+var_38] eax +
mov ecx dword_103B544 +
call sub_101AAF0  +
cmp [ebp+var_38] eax +
jnb loc_101849E  +
mov [ebp+var_40] 0 +
lea ecx [ebp+var_40] +
push ecx  +
mov edx [ebp+var_38] +
push edx  +
mov ecx dword_103B544 +
call sub_1023EF0  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jl loc_1018499  +
cmp [ebp+var_40] 0 +
jz loc_1018499  +
mov ecx [ebp+var_40] +
call sub_101AA70  +
test eax eax +
jz loc_1018499  +
push 30h  +
push 0  +
lea eax [ebp+pv] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+pv] 30h +
mov dword ptr [ebp-6Ch] 63h +
mov ecx [ebp+var_40] +
mov [ebp-50h] ecx +
mov ecx [ebp+var_40] +
call sub_101AAD0  +
push eax  +
call sub_102ED40  +
mov [ebp-4Ch] eax +
mov dword ptr [ebp-64h] 0 +
mov edx [ebp+var_38] +
add edx 8002h +
mov [ebp-60h] edx +
mov eax [ebp-4Ch] +
mov [ebp+var_E8] eax +
mov ecx [ebp+var_E8] +
add ecx 2 +
mov [ebp+var_EC] ecx +
mov edx [ebp+var_E8] +
mov ax [edx] +
mov [ebp+var_EE] ax +
add [ebp+var_E8] 2 +
cmp [ebp+var_EE] 0 +
jnz loc_1018418  +
mov ecx [ebp+var_E8] +
sub ecx [ebp+var_EC] +
sar ecx 1 +
mov [ebp+var_F4] ecx +
mov edx [ebp+var_F4] +
mov [ebp-48h] edx +
mov eax [ebp+var_E0] +
mov ecx [ebp+var_40] +
cmp ecx [eax+24h] +
jnz loc_101846A  +
mov edx [ebp-60h] +
mov [ebp+var_20] edx +
lea eax [ebp+pv] +
push eax  +
push 1  +
push 0  +
mov ecx [ebp+hMenu] +
push ecx  +
call ds:InsertMenuItemW  +
cmp dword ptr [ebp-4Ch] 0 +
jz loc_1018499  +
cmp dword ptr [ebp-4Ch] 0 +
jz loc_1018499  +
mov edx [ebp-4Ch] +
push edx  +
call ds:CoTaskMemFree  +
mov dword ptr [ebp-4Ch] 0 +
jmp loc_101835A  +
push 0  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+hMenu] +
push ecx  +
call ds:GetMenuItemCount  +
add eax 8001h +
push eax  +
push 8002h  +
mov edx [ebp+hMenu] +
push edx  +
call ds:CheckMenuRadioItem  +
lea eax [ebp+lParam] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+0Ch] +
push edx  +
push 433h  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call sub_101A5A0  +
push 2  +
lea edx [ebp+lParam] +
push edx  +
push 0  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:MapWindowPoints  +
mov [ebp+var_34.cbSize] 14h +
mov edx [ebp+lParam] +
mov [ebp+var_34.rcExclude.left] edx +
mov eax [ebp-10h] +
mov [ebp+var_34.rcExclude.top] eax +
mov ecx [ebp+var_C] +
mov [ebp+var_34.rcExclude.right] ecx +
mov edx [ebp+var_8] +
mov [ebp+var_34.rcExclude.bottom] edx +
mov ecx [ebp+var_E0] +
add ecx 4 +
call sub_101A520  +
and eax 400000h +
jz loc_1018531  +
mov eax [ebp+var_C] +
mov [ebp+var_F8] eax +
jmp loc_101853A  +
mov ecx [ebp+lParam] +
mov [ebp+var_F8] ecx +
lea edx [ebp+var_34] +
push edx  +
mov eax [ebp+var_E0] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_F8] +
push eax  +
push 11C2h  +
mov ecx [ebp+hMenu] +
push ecx  +
call ds:TrackPopupMenuEx  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jz loc_1018626  +
push 30h  +
push 0  +
lea edx [ebp+var_A0] +
push edx  +
call memset  +
add esp 0Ch +
mov [ebp+var_A0.cbSize] 30h +
mov [ebp+var_A0.fMask] 22h +
mov eax [ebp+var_18] +
mov [ebp+var_A0.wID] eax +
lea ecx [ebp+var_A0] +
push ecx  +
push 0  +
mov edx [ebp+var_18] +
push edx  +
mov eax [ebp+hMenu] +
push eax  +
call ds:GetMenuItemInfoW  +
mov ecx [ebp+var_A0.dwItemData] +
mov [ebp+var_A4] ecx +
mov edx [ebp+var_E0] +
mov eax [edx+24h] +
cmp eax [ebp+var_A4] +
jz loc_1018626  +
mov ecx [ebp+var_E0] +
cmp dword ptr [ecx+24h] 0 +
jz loc_10185EF  +
mov edx [ebp+var_E0] +
mov eax [edx] +
mov ecx [ebp+var_E0] +
mov edx [eax+14h] +
call edx  +
mov eax [ebp+var_A4] +
push eax  +
mov ecx [ebp+var_E0] +
mov edx [ecx] +
mov ecx [ebp+var_E0] +
mov eax [edx+18h] +
call eax  +
mov ecx [ebp+var_E0] +
call sub_101EF20  +
push 0  +
push 0  +
mov ecx [ebp+var_E0] +
add ecx 4 +
call sub_1010530  +
mov [ebp+var_A8] 0 +
jmp loc_1018641  +
mov ecx [ebp+var_A8] +
add ecx 1 +
mov [ebp+var_A8] ecx +
mov edx [ebp+hMenu] +
push edx  +
call ds:GetMenuItemCount  +
cmp [ebp+var_A8] eax +
jge loc_10186BD  +
push 30h  +
push 0  +
lea eax [ebp+var_D8] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+var_D8.cbSize] 30h +
mov [ebp+var_D8.fMask] 20h +
lea ecx [ebp+var_D8] +
push ecx  +
push 1  +
mov edx [ebp+var_A8] +
push edx  +
mov eax [ebp+hMenu] +
push eax  +
call ds:GetMenuItemInfoW  +
test eax eax +
jz loc_10186B8  +
mov ecx [ebp+var_D8.dwItemData] +
mov [ebp+var_DC] ecx +
mov edx [ebp+var_DC] +
mov eax [edx] +
mov ecx [ebp+var_DC] +
push ecx  +
mov edx [eax+8] +
call edx  +
jmp loc_1018632  +
mov eax [ebp+hMenu] +
push eax  +
call ds:DestroyMenu  +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 1 +
xor eax eax +
jmp loc_10186D6  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 248h +
call sub_101A0A0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
cmp off_103B010 offset off_103B010 +
jz loc_1018769  +
mov eax off_103B010 +
mov ecx [eax+1Ch] +
and ecx 20000000h +
jz loc_1018769  +
mov edx off_103B010 +
movzx eax byte ptr [edx+19h] +
cmp eax 4 +
jl loc_1018769  +
push offset dword_10020F8  +
push 0Bh  +
mov ecx off_103B010 +
mov edx [ecx+14h] +
push edx  +
mov eax [ecx+10h] +
push eax  +
call sub_1016950  +
mov [ebp+var_8] 1 +
jmp loc_1018770  +
mov [ebp+var_8] 0 +
mov ecx [ebp+var_4] +
call sub_10166A0  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_C] +
add ecx 248h +
call sub_101A150  +
test eax eax +
jz loc_10187CF  +
push 130h  +
lea edx [ebp+var_8] +
push edx  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_10111E0  +
mov eax [eax] +
jmp loc_10187D1  +
jmp loc_10187D1  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov [ebp+var_28] ecx +
push 0  +
call ds:GetDC  +
mov [ebp+var_4] eax +
cmp off_103B010 offset off_103B010 +
jz loc_101884A  +
mov eax off_103B010 +
mov ecx [eax+1Ch] +
and ecx 20000000h +
jz loc_101884A  +
mov edx off_103B010 +
movzx eax byte ptr [edx+19h] +
cmp eax 4 +
jl loc_101884A  +
mov ecx [ebp+var_28] +
mov edx [ecx+4] +
push edx  +
push offset dword_10020F8  +
push 0Ch  +
mov eax off_103B010 +
mov ecx [eax+14h] +
push ecx  +
mov edx [eax+10h] +
push edx  +
call sub_1018920  +
mov [ebp+var_2C] 1 +
jmp loc_1018851  +
mov [ebp+var_2C] 0 +
mov eax [ebp+var_4] +
push eax  +
call ds:BeginPath  +
test eax eax +
jz loc_10188FE  +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_100D6B0  +
push 5  +
call ds:GetSysColorBrush  +
mov [ebp+var_8] eax +
push 5  +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
push edx  +
push 5  +
call ds:CreatePen  +
mov [ebp+var_20] eax +
push 1  +
mov eax [ebp+var_4] +
push eax  +
call ds:SetBkMode  +
mov [ebp+var_C] eax +
mov ecx [ebp+var_20] +
push ecx  +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_28] +
call sub_1018B00  +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [ebp+var_4] +
push edx  +
call ds:SetBkMode  +
mov eax [ebp+var_20] +
push eax  +
call ds:DeleteObject  +
mov ecx [ebp+var_4] +
push ecx  +
call ds:EndPath  +
test eax eax +
jz loc_10188FE  +
mov edx [ebp+var_4] +
push edx  +
call ds:PathToRegion  +
mov [ebp+hRgn] eax +
cmp [ebp+hRgn] 0 +
jz loc_10188FE  +
push 1  +
mov eax [ebp+hRgn] +
push eax  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_101A7D0  +
mov ecx [ebp+var_4] +
push ecx  +
call ds:DeleteDC  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
movzx ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
push 2Bh  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call EtwTraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov [ebp+var_20] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_1C] eax +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_100D6B0  +
push 5  +
call ds:GetSysColorBrush  +
mov [ebp+var_4] eax +
push 5  +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
push edx  +
push 5  +
call ds:CreatePen  +
mov [ebp+var_18] eax +
mov eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+var_1C] +
push edx  +
mov ecx [ebp+var_20] +
call sub_1018B00  +
mov eax [ebp+var_18] +
push eax  +
call ds:DeleteObject  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_8] eax +
mov [ebp+var_64] ecx +
cmp off_103B010 offset off_103B010 +
jz loc_1018A43  +
mov eax off_103B010 +
mov ecx [eax+1Ch] +
and ecx 20000000h +
jz loc_1018A43  +
mov edx off_103B010 +
movzx eax byte ptr [edx+19h] +
cmp eax 4 +
jl loc_1018A43  +
push offset dword_10020F8  +
push 0Dh  +
mov ecx off_103B010 +
mov edx [ecx+14h] +
push edx  +
mov eax [ecx+10h] +
push eax  +
call sub_1016950  +
mov [ebp+var_68] 1 +
jmp loc_1018A4A  +
mov [ebp+var_68] 0 +
cmp [ebp+arg_4] 0 +
jnz loc_1018A64  +
lea ecx [ebp+Paint] +
push ecx  +
mov ecx [ebp+var_64] +
add ecx 4 +
call sub_101A660  +
mov [ebp+var_60] eax +
jmp loc_1018A6A  +
mov edx [ebp+arg_4] +
mov [ebp+var_60] edx +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_64] +
add ecx 4 +
call sub_100D6B0  +
mov ecx dword_103B590 +
push ecx  +
call ds:CreateSolidBrush  +
mov [ebp+var_4] eax +
mov edx dword_103B590 +
push edx  +
push 2  +
push 0  +
call ds:CreatePen  +
mov [ebp+var_5C] eax +
mov eax [ebp+var_5C] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+var_60] +
push edx  +
mov ecx [ebp+var_64] +
call sub_1018B00  +
mov eax [ebp+var_4] +
push eax  +
call ds:DeleteObject  +
mov ecx [ebp+var_5C] +
push ecx  +
call ds:DeleteObject  +
cmp [ebp+arg_4] 0 +
jnz loc_1018ADA  +
lea edx [ebp+Paint] +
push edx  +
mov ecx [ebp+var_64] +
add ecx 4 +
call sub_101A690  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov ecx [ebp+var_8] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov [ebp+var_64] ecx +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_64] +
add ecx 4 +
call sub_100D6B0  +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
test ecx ecx +
jle loc_1018CF3  +
mov edx [ebp+Rect.left] +
mov [ebp+var_24] edx +
mov [ebp+var_1C] 0 +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:SelectObject  +
mov [ebp+var_18] eax +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call ds:SelectObject  +
mov [ebp+var_14] eax +
mov ecx [ebp+var_64] +
mov ecx [ecx+24h] +
call sub_10186F0  +
mov [ebp+var_20] eax +
mov edx [ebp+Rect.right] +
mov [ebp+var_3C] edx +
mov [ebp+var_28] 0 +
jmp loc_1018B7D  +
mov eax [ebp+var_1C] +
add eax 1 +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
cmp ecx [ebp+var_20] +
jnb loc_1018C18  +
mov edx [ebp+var_1C] +
push edx  +
mov eax [ebp+var_64] +
mov ecx [eax+24h] +
call sub_1018790  +
mov [ebp+hWndFrom] eax +
cmp [ebp+hWndFrom] 0 +
jz loc_1018C13  +
lea ecx [ebp+rcSrc2] +
push ecx  +
push 0  +
push 419h  +
mov edx [ebp+hWndFrom] +
push edx  +
call ds:SendMessageW  +
push 2  +
lea eax [ebp+rcSrc2] +
push eax  +
mov ecx [ebp+var_64] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+hWndFrom] +
push eax  +
call ds:MapWindowPoints  +
lea ecx [ebp+rcSrc2] +
push ecx  +
lea edx [ebp+Rect] +
push edx  +
lea eax [ebp+rcDst] +
push eax  +
call ds:IntersectRect  +
test eax eax +
jz loc_1018C13  +
mov ecx [ebp+rcSrc2.right] +
sub ecx [ebp+rcSrc2.left] +
mov [ebp+var_28] ecx +
mov edx [ebp+rcSrc2.left] +
cmp edx [ebp+Rect.right] +
jge loc_1018BFC  +
mov eax [ebp+rcSrc2.left] +
mov [ebp+var_68] eax +
jmp loc_1018C02  +
mov ecx [ebp+Rect.right] +
mov [ebp+var_68] ecx +
mov edx [ebp+var_68] +
mov [ebp+var_3C] edx +
mov eax [ebp+var_1C] +
add eax 1 +
mov [ebp+var_1C] eax +
jmp loc_1018C18  +
jmp loc_1018B74  +
mov ecx [ebp+Rect.left] +
mov [ebp+var_38] ecx +
mov edx [ebp+Rect.top] +
mov [ebp+var_34] edx +
mov eax [ebp+Rect.right] +
mov [ebp+var_30] eax +
mov ecx [ebp+Rect.bottom] +
mov [ebp+var_2C] ecx +
mov edx [ebp+var_24] +
mov [ebp+var_38] edx +
mov eax [ebp+var_3C] +
mov [ebp+var_30] eax +
cmp off_103B010 offset off_103B010 +
jz loc_1018CA1  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_1018CA1  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_1018CA1  +
mov edx [ebp+var_2C] +
push edx  +
mov eax [ebp+var_30] +
push eax  +
mov ecx [ebp+var_34] +
push ecx  +
mov edx [ebp+var_38] +
push edx  +
mov eax [ebp+var_64] +
mov ecx [eax+4] +
push ecx  +
push offset dword_10020F8  +
push 0Eh  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1018D00  +
mov [ebp+var_6C] 1 +
jmp loc_1018CA8  +
mov [ebp+var_6C] 0 +
mov edx [ebp+var_2C] +
push edx  +
mov eax [ebp+var_30] +
push eax  +
mov ecx [ebp+var_34] +
push ecx  +
mov edx [ebp+var_38] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call ds:Rectangle  +
mov edx [ebp+var_3C] +
add edx [ebp+var_28] +
mov [ebp+var_24] edx +
mov eax [ebp+var_24] +
cmp eax [ebp+Rect.right] +
jl loc_1018B65  +
mov ecx [ebp+var_18] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call ds:SelectObject  +
mov eax [ebp+var_14] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:SelectObject  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_20] +
push eax  +
push 4  +
lea ecx [ebp+arg_1C] +
push ecx  +
push 4  +
lea edx [ebp+arg_18] +
push edx  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea ecx [ebp+arg_10] +
push ecx  +
movzx edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
push 2Bh  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call EtwTraceMessage  +
add esp 40h +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_10196E0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov [ebp+var_8] 0 +
cmp [ebp+arg_4] 0 +
jge loc_1018D9F  +
mov [ebp+arg_4] 0 +
mov ecx [ebp+var_C] +
call sub_101ACA0  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_4] +
jl loc_1018DCC  +
mov ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_101ACC0  +
mov edx [ebp+var_8] +
or edx 1 +
mov [ebp+var_8] edx +
mov eax [ebp+arg_0] +
jmp loc_1018DF6  +
mov ecx [ebp+var_C] +
call sub_1019890  +
push eax  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_C] +
call sub_1024680  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_1019860  +
mov ecx [ebp+var_8] +
or ecx 1 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax offset loc_101A020 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 1 +
mov eax [ebp+arg_14] +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_1018E50  +
jmp loc_1018EC1  +
cmp [ebp+arg_4] 110h +
jnz loc_1018E8A  +
mov [ebp+var_4] 1 +
lea ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10198D0  +
mov edx [ebp+arg_10] +
mov [edx] eax +
cmp [ebp+var_4] 0 +
jz loc_1018E8A  +
mov eax 1 +
jmp loc_1018EC3  +
cmp [ebp+arg_4] 2 +
jnz loc_1018EC1  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_8] +
call sub_102A7C0  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_1018EC1  +
mov eax 1 +
jmp loc_1018EC3  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035900  +
mov eax large fs:0 +
push eax  +
sub esp 94h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_84] ecx +
push 0F0h  +
movzx eax [ebp+arg_0] +
push eax  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call ds:FindResourceW  +
mov [ebp+hResInfo] eax +
mov [ebp+var_10] 0 +
mov [ebp+hResData] 0 +
mov [ebp+var_1C] 0 +
cmp [ebp+hResInfo] 0 +
jz loc_1018F64  +
mov ecx [ebp+hResInfo] +
push ecx  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
cmp [ebp+hResData] 0 +
jz loc_1018F64  +
mov edx [ebp+hResData] +
push edx  +
call ds:LockResource  +
mov [ebp+var_10] eax +
push 5  +
movzx eax [ebp+arg_0] +
push eax  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call ds:FindResourceW  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_1019401  +
mov ecx [ebp+var_14] +
push ecx  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call ds:LoadResource  +
mov [ebp+var_28] eax +
mov [ebp+var_24] 0 +
cmp [ebp+var_28] 0 +
jz loc_10193F9  +
mov edx [ebp+var_28] +
push edx  +
call ds:LockResource  +
mov [ebp+var_24] eax +
cmp [ebp+var_24] 0 +
jz loc_10193EF  +
mov eax [ebp+var_24] +
push eax  +
call sub_1009D10  +
mov [ebp+var_2C] eax +
mov ecx [ebp+var_24] +
push ecx  +
call sub_1009D30  +
mov dx [eax] +
mov [ebp+var_38] dx +
mov eax [ebp+var_24] +
push eax  +
call sub_1009D60  +
mov [ebp+var_30] eax +
push 5  +
lea ecx [ebp+var_78] +
push ecx  +
mov ecx [ebp+var_84] +
add ecx 4 +
call sub_101A770  +
mov ecx eax +
call sub_1024680  +
mov [ebp+hWndInsertAfter] eax +
xor edx edx +
mov [ebp+var_3C] dx +
jmp loc_1019023  +
mov ax [ebp+var_3C] +
add ax 1 +
mov [ebp+var_3C] ax +
movzx ecx [ebp+var_3C] +
movzx edx [ebp+var_38] +
cmp ecx edx +
jge loc_10193ED  +
cmp [ebp+var_2C] 0 +
jz loc_1019047  +
mov eax [ebp+var_30] +
mov ecx [eax+14h] +
mov [ebp+var_88] ecx +
jmp loc_1019054  +
mov edx [ebp+var_30] +
movzx eax word ptr [edx+10h] +
mov [ebp+var_88] eax +
mov ecx [ebp+var_88] +
mov [ebp+var_40] ecx +
mov edx [ebp+var_2C] +
push edx  +
mov eax [ebp+var_30] +
push eax  +
call sub_101A440  +
movzx ecx al +
test ecx ecx +
jz loc_10193C1  +
mov [ebp+var_44] 0 +
lea edx [ebp+var_44] +
push edx  +
mov eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_40] +
push ecx  +
call sub_101A3B0  +
mov [ebp+dwBytes] eax +
lea ecx [ebp+var_48] +
call sub_1012550  +
mov [ebp+var_4] 0 +
cmp [ebp+dwBytes] 0 +
jz loc_1019121  +
mov edx [ebp+dwBytes] +
push edx  +
push 42h  +
call ds:GlobalAlloc  +
mov [ebp+hGlobal] eax +
cmp [ebp+hGlobal] 0 +
jz loc_1019106  +
mov eax [ebp+hGlobal] +
push eax  +
call ds:GlobalLock  +
mov [ebp+var_5C] eax +
mov ecx [ebp+var_44] +
mov [ebp+var_58] ecx +
mov edx [ebp+dwBytes] +
push edx  +
mov eax [ebp+var_58] +
push eax  +
mov ecx [ebp+dwBytes] +
push ecx  +
mov edx [ebp+var_5C] +
push edx  +
call sub_1009C20  +
add esp 10h +
mov eax [ebp+hGlobal] +
push eax  +
call ds:GlobalUnlock  +
lea ecx [ebp+var_48] +
call sub_10114A0  +
push eax  +
push 1  +
mov ecx [ebp+hGlobal] +
push ecx  +
call ds:CreateStreamOnHGlobal  +
jmp loc_1019121  +
mov [ebp+var_1C] 8007000Eh +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_48] +
call sub_1023C70  +
jmp loc_10193ED  +
lea ecx [ebp+var_4C] +
call sub_100B430  +
mov byte ptr [ebp+var_4] 1 +
lea edx [ebp+var_4C] +
push edx  +
lea ecx [ebp+var_48] +
call sub_1024680  +
push eax  +
call sub_100AA70  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jl loc_10193A4  +
push 0  +
lea ecx [ebp+var_74] +
call sub_10197B0  +
cmp [ebp+var_2C] 0 +
jz loc_101916A  +
mov eax [ebp+var_30] +
add eax 18h +
mov [ebp+var_8C] eax +
jmp loc_1019176  +
mov ecx [ebp+var_30] +
add ecx 12h +
mov [ebp+var_8C] ecx +
mov edx [ebp+var_8C] +
mov [ebp+var_70] edx +
cmp [ebp+var_2C] 0 +
jz loc_1019195  +
mov eax [ebp+var_30] +
mov cx [eax+0Ch] +
mov [ebp+var_8E] cx +
jmp loc_10191A3  +
mov edx [ebp+var_30] +
mov ax [edx+8] +
mov [ebp+var_8E] ax +
movsx ecx [ebp+var_8E] +
mov [ebp+Rect.left] ecx +
cmp [ebp+var_2C] 0 +
jz loc_10191C3  +
mov edx [ebp+var_30] +
mov ax [edx+0Eh] +
mov [ebp+var_90] ax +
jmp loc_10191D1  +
mov ecx [ebp+var_30] +
mov dx [ecx+0Ah] +
mov [ebp+var_90] dx +
movsx eax [ebp+var_90] +
mov [ebp+Rect.top] eax +
cmp [ebp+var_2C] 0 +
jz loc_10191F1  +
mov ecx [ebp+var_30] +
mov dx [ecx+10h] +
mov [ebp+var_92] dx +
jmp loc_10191FF  +
mov eax [ebp+var_30] +
mov cx [eax+0Ch] +
mov [ebp+var_92] cx +
movsx edx [ebp+var_92] +
add edx [ebp+Rect.left] +
mov [ebp+Rect.right] edx +
cmp [ebp+var_2C] 0 +
jz loc_1019222  +
mov eax [ebp+var_30] +
mov cx [eax+12h] +
mov [ebp+var_94] cx +
jmp loc_1019230  +
mov edx [ebp+var_30] +
mov ax [edx+0Eh] +
mov [ebp+var_94] ax +
movsx ecx [ebp+var_94] +
add ecx [ebp+Rect.top] +
mov [ebp+Rect.bottom] ecx +
lea edx [ebp+Rect] +
push edx  +
mov ecx [ebp+var_84] +
call sub_1019780  +
cmp [ebp+var_2C] 0 +
jz loc_1019260  +
mov eax [ebp+var_30] +
mov ecx [eax+14h] +
mov [ebp+var_98] ecx +
jmp loc_101926D  +
mov edx [ebp+var_30] +
movzx eax word ptr [edx+10h] +
mov [ebp+var_98] eax +
cmp [ebp+var_2C] 0 +
jz loc_1019281  +
mov ecx [ebp+var_30] +
mov edx [ecx+4] +
mov [ebp+dwExStyle] edx +
jmp loc_101928B  +
mov [ebp+dwExStyle] 0 +
cmp [ebp+var_2C] 0 +
jz loc_101929F  +
mov eax [ebp+var_30] +
mov ecx [eax+8] +
mov [ebp+var_A0] ecx +
jmp loc_10192AA  +
mov edx [ebp+var_30] +
mov eax [edx] +
mov [ebp+var_A0] eax +
push 0  +
push ecx  +
mov ecx esp +
mov [ebp+var_7C] esp +
mov edx [ebp+var_98] +
push edx  +
call sub_1007F90  +
mov eax [ebp+dwExStyle] +
push eax  +
mov ecx [ebp+var_A0] +
or ecx 10000h +
push ecx  +
push 0  +
push ecx  +
mov ecx esp +
mov [ebp+var_80] esp +
lea edx [ebp+Rect] +
push edx  +
call sub_1007F90  +
mov eax [ebp+var_84] +
mov ecx [eax+4] +
push ecx  +
lea ecx [ebp+var_74] +
call sub_10197E0  +
lea ecx [ebp+var_74] +
call sub_1024680  +
test eax eax +
jz loc_101939C  +
cmp [ebp+var_2C] 0 +
jz loc_1019321  +
mov edx [ebp+var_30] +
cmp dword ptr [edx] 0 +
jz loc_1019321  +
mov eax [ebp+var_30] +
mov ecx [eax] +
push ecx  +
lea ecx [ebp+var_74] +
call sub_101A7A0  +
lea ecx [ebp+var_4C] +
call sub_1024680  +
push eax  +
push 0  +
lea ecx [ebp+var_48] +
call sub_1024680  +
push eax  +
mov edx [ebp+var_70] +
push edx  +
lea ecx [ebp+var_74] +
call sub_1019820  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_101936A  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_4C] +
call sub_1007440  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_48] +
call sub_1023C70  +
jmp loc_10193ED  +
movzx eax [ebp+var_3C] +
test eax eax +
jnz loc_1019379  +
mov [ebp+hWndInsertAfter] 0 +
push 13h  +
push 0  +
push 0  +
push 0  +
push 0  +
mov ecx [ebp+hWndInsertAfter] +
push ecx  +
lea ecx [ebp+var_74] +
call sub_100E0E0  +
lea ecx [ebp+var_74] +
call sub_1024680  +
mov [ebp+hWndInsertAfter] eax +
jmp loc_10193A4  +
call sub_100F540  +
mov [ebp+var_1C] eax +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_4C] +
call sub_1007440  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_48] +
call sub_1023C70  +
jmp loc_10193D8  +
movzx edx [ebp+var_3C] +
test edx edx +
jz loc_10193D8  +
push 2  +
mov eax [ebp+hWndInsertAfter] +
push eax  +
call ds:GetWindow  +
mov [ebp+hWndInsertAfter] eax +
mov ecx [ebp+var_2C] +
push ecx  +
mov edx [ebp+var_30] +
push edx  +
call sub_1009E60  +
mov [ebp+var_30] eax +
jmp loc_1019017  +
jmp loc_10193F7  +
call sub_100F540  +
mov [ebp+var_1C] eax +
jmp loc_1019401  +
call sub_100F540  +
mov [ebp+var_1C] eax +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov [ebp+var_8] ecx +
call sub_10194C0  +
cmp dword ptr [eax+30h] 0 +
jnz loc_1019446  +
call sub_1025250  +
mov esi eax +
call sub_10194C0  +
mov [eax+30h] esi +
mov eax [ebp+var_8] +
add eax 20h +
push eax  +
call sub_10194C0  +
mov ecx eax +
call sub_10090B0  +
mov [ebp+var_4] ax +
mov ecx [ebp+dwStyle] +
push ecx  +
call sub_1019910  +
mov [ebp+dwStyle] eax +
mov edx [ebp+dwExStyle] +
push edx  +
call sub_1019930  +
mov [ebp+dwExStyle] eax +
cmp [ebp+lpWindowName] 0 +
jnz loc_1019483  +
call sub_1025250  +
mov [ebp+lpWindowName] eax +
mov eax [ebp+lpParam] +
push eax  +
movzx ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+hMenu] +
push edx  +
mov eax [ebp+dwExStyle] +
push eax  +
mov ecx [ebp+dwStyle] +
push ecx  +
mov edx [ebp+lpWindowName] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hWndParent] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10140C0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset unk_103B208 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1009750  +
mov eax [ebp+var_4] +
mov ecx ds:DefWindowProcW +
mov [eax+20h] ecx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
push 2  +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_4] +
push ecx  +
call sub_1019550  +
test eax eax +
jge loc_1019539  +
xor al al +
jmp loc_1019545  +
mov edx [ebp+var_4] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1019950  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mul  ecx +
mov [ebp+var_8] eax +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 0 +
ja loc_1019572  +
cmp [ebp+var_8] 0FFFFFFFFh +
jbe loc_1019579  +
mov eax 80070057h +
jmp loc_1019583  +
mov edx [ebp+var_8] +
mov eax [ebp+arg_0] +
mov [eax] edx +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_10199A0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
xor eax eax +
jnz loc_10195BB  +
xor ecx ecx +
jnz loc_10195BB  +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_8] +
add eax 8 +
push eax  +
mov ecx offset unk_103BC3C +
call sub_1008E10  +
mov ecx [ebp+dwInitParam] +
push ecx  +
push offset DialogFunc  +
mov edx [ebp+hWndParent] +
push edx  +
push 0CAh  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call sub_101A820  +
mov [ebp+var_4] eax +
xor eax eax +
jnz loc_10195FD  +
xor ecx ecx +
jnz loc_10195FD  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov [ebp+var_8] ecx +
call sub_10196C0  +
cmp dword ptr [eax+30h] 0 +
jnz loc_1019646  +
call sub_1025250  +
mov esi eax +
call sub_10196C0  +
mov [eax+30h] esi +
mov eax [ebp+var_8] +
add eax 20h +
push eax  +
call sub_10196C0  +
mov ecx eax +
call sub_10090B0  +
mov [ebp+var_4] ax +
mov ecx [ebp+dwStyle] +
push ecx  +
call sub_1019910  +
mov [ebp+dwStyle] eax +
mov edx [ebp+dwExStyle] +
push edx  +
call sub_1019930  +
mov [ebp+dwExStyle] eax +
cmp [ebp+lpWindowName] 0 +
jnz loc_1019683  +
call sub_1025250  +
mov [ebp+lpWindowName] eax +
mov eax [ebp+lpParam] +
push eax  +
movzx ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+hMenu] +
push edx  +
mov eax [ebp+dwExStyle] +
push eax  +
mov ecx [ebp+dwStyle] +
push ecx  +
mov edx [ebp+lpWindowName] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hWndParent] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10140C0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset unk_103B298 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov ecx [ebp+arg_0] +
call sub_101AEB0  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
call sub_101AEB0  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jz loc_1019763  +
mov ecx [ebp+var_8] +
call sub_101A350  +
movzx ecx al +
test ecx ecx +
jnz loc_1019724  +
mov edx [ebp+var_4] +
mov eax [ebp+var_8] +
mov ecx [edx] +
cmp ecx [eax] +
jz loc_1019740  +
mov ecx [ebp+arg_0] +
call sub_101ACA0  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_10] +
call sub_101B800  +
jmp loc_1019763  +
mov edx [ebp+var_4] +
push edx  +
call sub_101B530  +
add esp 4 +
mov [ebp+var_C] eax +
mov ecx [ebp+var_8] +
call sub_101A370  +
mov eax [ebp+var_C] +
push eax  +
mov ecx [ebp+var_10] +
call sub_101AE60  +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpRect] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
call ds:MapDialogRect  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1019CA0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpParam] +
push eax  +
mov ecx [ebp+hMenu] +
push ecx  +
mov edx [ebp+dwExStyle] +
push edx  +
mov eax [ebp+dwStyle] +
push eax  +
mov ecx [ebp+lpWindowName] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+hWndParent] +
push eax  +
call sub_100B030  +
push eax  +
mov ecx [ebp+var_4] +
call sub_101A490  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_C] +
push eax  +
push 0  +
push offset dword_100295C  +
push 0  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1019CD0  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_4] +
call sub_10199D0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_1019A80  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_10198B1  +
mov eax [ebp+var_4] +
jmp loc_10198C6  +
call sub_101B400  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov edx [eax] +
mov ecx [ebp+var_4] +
mov eax [edx+10h] +
call eax  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+21Ch] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_1019AD0  +
push 1  +
mov ecx [ebp+var_4] +
call sub_102A7F0  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push eax  +
call sub_1019E20  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push eax  +
call sub_1019E50  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_1019980  +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov edx [ebp+var_4] +
cmp dword ptr [edx] 0 +
jnz loc_1019973  +
xor al al +
jmp loc_1019975  +
mov al 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push eax  +
call ds:malloc  +
add esp 4 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call sub_100AF30  +
mov edx [ebp+var_4] +
mov dword ptr [edx] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
xor eax eax +
cmp [ebp+arg_8] 0 +
setnz al  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_10199F7  +
push 80004005h  +
call sub_1007F50  +
xor ecx ecx +
jnz loc_10199DB  +
cmp [ebp+arg_0] 0 +
jnz loc_1019A11  +
cmp [ebp+arg_4] 0 +
jz loc_1019A11  +
push 80070057h  +
call sub_1007F50  +
push 2  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_8] +
mov edx [eax] +
mov ecx [ebp+arg_8] +
mov eax [edx] +
call eax  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_1019A31  +
call sub_101B6A0  +
mov ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+var_C] +
call sub_101AE60  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_C] +
call sub_101AED0  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push ecx  +
call sub_101B200  +
add esp 10h +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_101AEB0  +
mov eax [eax] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1019AB0  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov ecx [ebp+var_4] +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_C] eax +
jmp loc_1019AB7  +
mov [ebp+var_C] 0 +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_24] eax +
mov [ebp+var_25C] ecx +
mov [ebp+var_C] 1 +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
mov [ebp+hModule] eax +
push 0F0h  +
movzx eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call ds:FindResourceW  +
mov [ebp+hResInfo] eax +
cmp [ebp+hResInfo] 0 +
jz loc_1019C87  +
mov edx [ebp+hResInfo] +
push edx  +
mov eax [ebp+hModule] +
push eax  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
cmp [ebp+hResData] 0 +
jz loc_1019C87  +
mov ecx [ebp+hResData] +
push ecx  +
call ds:LockResource  +
mov [ebp+lpMultiByteStr] eax +
cmp [ebp+lpMultiByteStr] 0 +
jz loc_1019C87  +
cmp [ebp+var_C] 0 +
jz loc_1019C87  +
mov edx [ebp+lpMultiByteStr] +
movzx eax word ptr [edx] +
test eax eax +
jz loc_1019C87  +
mov ecx [ebp+lpMultiByteStr] +
mov dx [ecx] +
mov [ebp+var_1C] dx +
mov eax [ebp+lpMultiByteStr] +
add eax 2 +
mov [ebp+lpMultiByteStr] eax +
mov ecx [ebp+lpMultiByteStr] +
mov dx [ecx] +
mov [ebp+var_20] dx +
mov eax [ebp+lpMultiByteStr] +
add eax 2 +
mov [ebp+lpMultiByteStr] eax +
mov ecx [ebp+lpMultiByteStr] +
mov edx [ecx] +
mov [ebp+var_18] edx +
mov eax [ebp+lpMultiByteStr] +
add eax 4 +
mov [ebp+lpMultiByteStr] eax +
movzx ecx [ebp+var_20] +
cmp ecx 403h +
jnz loc_1019BFB  +
mov edx [ebp+lpMultiByteStr] +
push edx  +
lea ecx [ebp+var_130] +
call sub_1019E80  +
lea ecx [ebp+var_130] +
call sub_1024680  +
push eax  +
push 0  +
push 143h  +
movzx eax [ebp+var_1C] +
push eax  +
mov ecx [ebp+var_25C] +
add ecx 4 +
call sub_101A710  +
cmp eax 0FFFFFFFFh +
jnz loc_1019BEE  +
mov [ebp+var_C] 0 +
lea ecx [ebp+var_130] +
call sub_1019EC0  +
jmp loc_1019C79  +
movzx ecx [ebp+var_20] +
cmp ecx 1234h +
jnz loc_1019C79  +
mov [ebp+lParam] 1 +
mov [ebp+var_150] 0FFFFFFFFh +
mov edx [ebp+lpMultiByteStr] +
push edx  +
lea ecx [ebp+var_258] +
call sub_1019E80  +
mov [ebp+var_260] eax +
mov ecx [ebp+var_260] +
call sub_1024680  +
mov [ebp+var_14C] eax +
lea ecx [ebp+var_258] +
call sub_1019EC0  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 40Bh  +
movzx ecx [ebp+var_1C] +
push ecx  +
mov ecx [ebp+var_25C] +
add ecx 4 +
call sub_101A710  +
cmp eax 0FFFFFFFFh +
jnz loc_1019C79  +
mov [ebp+var_C] 0 +
mov edx [ebp+lpMultiByteStr] +
add edx [ebp+var_18] +
mov [ebp+lpMultiByteStr] edx +
jmp loc_1019B52  +
mov eax [ebp+var_C] +
mov ecx [ebp+var_24] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1007F90  +
call sub_1009F90  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035940  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_24] ecx +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
mov ecx [ebp+var_24] +
call sub_101A200  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1019D64  +
mov eax [ebp+arg_18] +
push eax  +
mov ecx [ebp+arg_14] +
push ecx  +
mov edx [ebp+arg_10] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+var_24] +
mov ecx [eax] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_100ADA0  +
mov [ebp+var_1C] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov eax [ebp+var_1C] +
jmp loc_1019E07  +
lea ecx [ebp+var_18] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_14] 0 +
jl loc_1019DB5  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_28] eax +
mov eax [ebp+arg_18] +
push eax  +
mov ecx [ebp+arg_14] +
push ecx  +
mov edx [ebp+arg_10] +
push edx  +
lea ecx [ebp+var_18] +
call sub_10114A0  +
push eax  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_24] +
mov edx [ecx] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_28] +
push ecx  +
mov edx [ebp+var_28] +
mov eax [edx] +
mov ecx [eax+28h] +
call ecx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jl loc_1019DE3  +
cmp [ebp+arg_C] 0 +
jz loc_1019DCE  +
lea ecx [ebp+var_18] +
call sub_101AC70  +
mov edx [ebp+arg_C] +
mov [edx] eax +
cmp [ebp+arg_8] 0 +
jz loc_1019DE3  +
mov eax [ebp+arg_8] +
push eax  +
lea ecx [ebp+var_10] +
call sub_101A230  +
mov [ebp+var_14] eax +
mov ecx [ebp+var_14] +
mov [ebp+var_20] ecx +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
jnz loc_1019E35  +
mov [ebp+var_4] 56000000h +
jmp loc_1019E3B  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
jnz loc_1019E65  +
mov [ebp+var_4] 10000h +
jmp loc_1019E6B  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
add eax 4 +
mov ecx [ebp+var_4] +
mov [ecx] eax +
call sub_100A5D0  +
push eax  +
mov edx [ebp+lpMultiByteStr] +
push edx  +
mov ecx [ebp+var_4] +
call sub_1019EF0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 80h  +
mov eax [ebp+var_4] +
add eax 4 +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call sub_101BC10  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
cmp [ebp+lpMultiByteStr] 0 +
jnz loc_1019F0F  +
mov eax [ebp+var_10] +
mov dword ptr [eax] 0 +
jmp loc_1019FDA  +
mov ecx [ebp+lpMultiByteStr] +
push ecx  +
call ds:lstrlenA  +
add eax 1 +
mov [ebp+cchMultiByte] eax +
mov edx [ebp+cchMultiByte] +
mov [ebp+cchWideChar] edx +
push 80h  +
mov eax [ebp+var_10] +
add eax 4 +
push eax  +
mov ecx [ebp+cchWideChar] +
push ecx  +
mov edx [ebp+var_10] +
push edx  +
call sub_101BC40  +
mov eax [ebp+cchWideChar] +
push eax  +
mov ecx [ebp+var_10] +
mov edx [ecx] +
push edx  +
mov eax [ebp+cchMultiByte] +
push eax  +
mov ecx [ebp+lpMultiByteStr] +
push ecx  +
push 0  +
mov edx [ebp+CodePage] +
push edx  +
call ds:MultiByteToWideChar  +
neg eax  +
sbb eax eax +
add eax 1 +
mov [ebp+var_4] eax +
jz loc_1019FCF  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_1019FCF  +
push 0  +
push 0  +
mov eax [ebp+cchMultiByte] +
push eax  +
mov ecx [ebp+lpMultiByteStr] +
push ecx  +
push 0  +
mov edx [ebp+CodePage] +
push edx  +
call ds:MultiByteToWideChar  +
mov [ebp+cchWideChar] eax +
push 80h  +
mov eax [ebp+var_10] +
add eax 4 +
push eax  +
mov ecx [ebp+cchWideChar] +
push ecx  +
mov edx [ebp+var_10] +
push edx  +
call sub_101BC40  +
mov eax [ebp+cchWideChar] +
push eax  +
mov ecx [ebp+var_10] +
mov edx [ecx] +
push edx  +
mov eax [ebp+cchMultiByte] +
push eax  +
mov ecx [ebp+lpMultiByteStr] +
push ecx  +
push 0  +
mov edx [ebp+CodePage] +
push edx  +
call ds:MultiByteToWideChar  +
neg eax  +
sbb eax eax +
add eax 1 +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1019FDA  +
call sub_1019FF0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
call ds:__imp_GetLastError  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
push eax  +
call sub_100F570  +
push eax  +
call sub_1007F50  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+8] +
mov [ebp-4] eax +
cmp dword ptr [ebp+0Ch] 110h +
jnz loc_101A072  +
mov ecx [ebp-4] +
call sub_101A320  +
push eax  +
mov ecx [ebp-4] +
mov edx [ecx] +
mov ecx [ebp-4] +
mov eax [edx+10h] +
call eax  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jge loc_101A072  +
mov ecx [ebp-4] +
call sub_1008B40  +
mov ecx [ebp-8] +
and ecx 0FFFFh +
push ecx  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101A087  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov edx [ebp+8] +
push edx  +
call sub_101B970  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
jmp loc_101A0DD  +
mov edx [ebp+var_4] +
mov eax [edx] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_101A0F5  +
mov ecx [ebp+var_4] +
mov edx [ecx+8] +
cmp edx [ebp+arg_0] +
jnz loc_101A0F3  +
mov eax [ebp+var_4] +
jmp loc_101A0F7  +
jmp loc_101A0D5  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_101A12B  +
xor eax eax +
jmp loc_101A13B  +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_4] +
mov eax [edx+8] +
mov [ecx] eax +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
cmp [ebp+arg_4] 0 +
jnz loc_101A168  +
xor eax eax +
jmp loc_101A1E8  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
cmp [ebp+arg_0] 0 +
jl loc_101A185  +
mov ecx [ebp+var_14] +
mov edx [ecx+8] +
sub edx 1 +
cmp [ebp+arg_0] edx +
jle loc_101A189  +
xor eax eax +
jmp loc_101A1E8  +
mov [ebp+var_C] 0 +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_14] +
call sub_1024680  +
mov [ebp+var_8] eax +
mov [ebp+var_10] 0 +
jmp loc_101A1B4  +
mov eax [ebp+var_10] +
add eax 1 +
mov [ebp+var_10] eax +
cmp [ebp+var_4] 0 +
jz loc_101A1D7  +
mov ecx [ebp+var_10] +
cmp ecx [ebp+arg_0] +
jg loc_101A1D7  +
lea edx [ebp+var_C] +
push edx  +
lea eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_14] +
call sub_1027580  +
mov [ebp+var_4] eax +
jmp loc_101A1AB  +
cmp [ebp+var_4] 0 +
jz loc_101A1E5  +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_C] +
mov [ecx] edx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
push offset dword_10019B4  +
mov ecx [ebp+var_4] +
call sub_101A260  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
push offset dword_10019C4  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [edx] +
push ecx  +
mov eax [edx] +
call eax  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035408  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_1C] ecx +
cmp [ebp+arg_4] 0 +
jnz loc_101A297  +
mov eax 80004003h +
jmp loc_101A307  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
mov ecx [ebp+var_1C] +
mov edx [ecx] +
push edx  +
call sub_101A850  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jl loc_101A2EF  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_20] eax +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_20] +
push edx  +
mov eax [ebp+var_20] +
mov ecx [eax] +
mov edx [ecx] +
call edx  +
mov [ebp+var_14] eax +
mov eax [ebp+var_14] +
mov [ebp+var_18] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+21Ch] +
mov esp ebp +
pop ebp  +
retn   +
***
sub ecx 220h +
jmp loc_1015810  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
xor ecx ecx +
cmp dword ptr [eax+0Ch] 0 +
setl cl  +
mov al cl +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
add eax 0Ch +
or ecx 0FFFFFFFFh +
xadd [eax] ecx +
dec ecx  +
test ecx ecx +
jg loc_101A3A2  +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
mov eax [edx] +
mov edx [ecx] +
mov ecx eax +
mov eax [edx+4] +
call eax  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_4] 0 +
jz loc_101A42F  +
mov eax [ebp+arg_4] +
mov cx [eax] +
mov [ebp+var_8] cx +
mov edx [ebp+arg_4] +
add edx 2 +
mov [ebp+arg_4] edx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov dx [ecx] +
mov [ebp+var_C] dx +
mov eax [ebp+arg_4] +
add eax 2 +
mov [ebp+arg_4] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
mov [ebp+var_10] edx +
mov eax [ebp+arg_4] +
add eax 4 +
mov [ebp+arg_4] eax +
movzx ecx [ebp+var_8] +
cmp ecx [ebp+arg_0] +
jnz loc_101A424  +
movzx edx [ebp+var_C] +
cmp edx 378h +
jnz loc_101A414  +
xor eax eax +
jmp loc_101A431  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov eax [ebp+var_10] +
add eax 6 +
jmp loc_101A431  +
mov edx [ebp+arg_4] +
add edx [ebp+var_10] +
mov [ebp+arg_4] edx +
jmp loc_101A3B8  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
cmp [ebp+arg_4] 0 +
jz loc_101A459  +
mov eax [ebp+arg_0] +
add eax 18h +
mov [ebp+var_8] eax +
jmp loc_101A462  +
mov ecx [ebp+arg_0] +
add ecx 12h +
mov [ebp+var_8] ecx +
mov edx [ebp+var_8] +
mov [ebp+var_4] edx +
mov eax [ebp+var_4] +
movzx ecx word ptr [eax] +
cmp ecx 7Bh +
jnz loc_101A477  +
mov al 1 +
jmp loc_101A479  +
xor al al +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
jnz loc_101A499  +
xor ecx ecx +
jnz loc_101A499  +
cmp [ebp+arg_8] 0 +
jnz loc_101A4AE  +
mov [ebp+arg_8] offset unk_103B000 +
mov edx [ebp+lpParam] +
push edx  +
mov ecx offset unk_103BC00 +
call sub_1022700  +
push eax  +
mov eax [ebp+hMenu] +
push eax  +
mov ecx [ebp+hWndParent] +
push ecx  +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_8] +
mov ecx [edx+0Ch] +
sub ecx [eax+4] +
push ecx  +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_8] +
mov ecx [edx+8] +
sub ecx [eax] +
push ecx  +
mov edx [ebp+arg_8] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+arg_8] +
mov edx [ecx] +
push edx  +
mov eax [ebp+dwStyle] +
push eax  +
mov ecx [ebp+lpWindowName] +
push ecx  +
mov edx [ebp+lpClassName] +
push edx  +
mov eax [ebp+dwExStyle] +
push eax  +
call ds:CreateWindowExW  +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov edx [ebp+var_4] +
mov eax [edx] +
mov esp ebp +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0FFFFFFECh  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:GetWindowLongW  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SendMessageW  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:PostMessageW  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov eax [ebp+hWnd] +
push eax  +
call ds:SendMessageW  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpString] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:SetWindowTextW  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpRect] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:GetWindowRect  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 2  +
mov eax [ebp+lpPoints] +
push eax  +
mov ecx [ebp+hWndTo] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:MapWindowPoints  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpPaint] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:BeginPaint  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpPaint] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:EndPaint  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+nCmdShow] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:ShowWindow  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SetFocus  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov eax [ebp+nIDDlgItem] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:SendDlgItemMessageW  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpString] +
push eax  +
mov ecx [ebp+nIDDlgItem] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:SetDlgItemTextW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+uCmd] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:GetWindow  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_1007F90  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:SetWindowContextHelpId  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+bRedraw] +
push eax  +
mov ecx [ebp+hRgn] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:SetWindowRgn  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:IsWindow  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+dwInitParam] +
push eax  +
mov ecx [ebp+lpDialogFunc] +
push ecx  +
mov edx [ebp+hWndParent] +
push edx  +
mov eax [ebp+lpName] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call sub_101BAB0  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_101A862  +
mov eax 80004003h +
jmp loc_101A88E  +
push 0  +
push 0  +
mov eax Msg +
push eax  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:SendMessageW  +
mov edx [ebp+arg_4] +
mov [edx] eax +
mov eax [ebp+arg_4] +
mov eax [eax] +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFEh  +
push offset dword_1037178  +
push offset loc_102C8AD  +
mov eax large fs:0 +
push eax  +
add esp 0FFFFFFF0h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+lpCriticalSection] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+lpCriticalSection] +
push eax  +
call ds:InitializeCriticalSection  +
mov [ebp+var_4] 0FFFFFFFEh +
jmp loc_101A91F  +
mov ecx [ebp-14h] +
mov edx [ecx] +
mov eax [edx] +
mov [ebp-1Ch] eax +
mov ecx [ebp-1Ch] +
xor eax eax +
cmp ecx 0C0000017h +
setz al  +
retn   +
mov esp [ebp-18h] +
push 8007000Eh  +
call sub_1007F50  +
mov [ebp+var_4] 0FFFFFFFEh +
mov eax [ebp+lpCriticalSection] +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpCriticalSection] ecx +
mov eax [ebp+lpCriticalSection] +
push eax  +
call ds:DeleteCriticalSection  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpCriticalSection] ecx +
mov eax [ebp+lpCriticalSection] +
push eax  +
call ds:EnterCriticalSection  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpCriticalSection] ecx +
mov eax [ebp+lpCriticalSection] +
push eax  +
call ds:LeaveCriticalSection  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 7FFFFFFFh  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1009560  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_101A9DC  +
push 7FFFFFFEh  +
mov edx [ebp+arg_8] +
push edx  +
push 0  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1024780  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push 7FFFFFFFh  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1009560  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_101AA3A  +
lea edx [ebp+arg_C] +
mov [ebp+var_8] edx +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
push 0  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_101CA90  +
mov [ebp+var_4] eax +
mov [ebp+var_8] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov eax [ecx+eax*4+38h] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
xor ecx ecx +
cmp dword ptr [eax+14h] 1 +
setz cl  +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+18h] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+1Ch] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
push 1  +
mov eax [ebp+var_10] +
add eax 14h +
push eax  +
lea ecx [ebp+var_8] +
call sub_101AB30  +
mov ecx [ebp+var_10] +
mov edx [ecx+10h] +
mov [ebp+var_C] edx +
lea ecx [ebp+var_8] +
call sub_101AB70  +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov edx [ebp+var_4] +
mov byte ptr [edx+4] 0 +
movzx eax [ebp+arg_4] +
test eax eax +
jz loc_101AB58  +
mov ecx [ebp+var_4] +
call sub_101ABA0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
movzx ecx byte ptr [eax+4] +
test ecx ecx +
jz loc_101AB8C  +
mov ecx [ebp+var_4] +
call sub_101AC40  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFEh  +
push offset dword_1037198  +
push offset loc_102C8AD  +
mov eax large fs:0 +
push eax  +
add esp 0FFFFFFF0h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_20] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+var_20] +
mov ecx [eax] +
push ecx  +
call ds:EnterCriticalSection  +
mov [ebp+var_4] 0FFFFFFFEh +
jmp loc_101AC21  +
mov edx [ebp-14h] +
mov eax [edx] +
mov ecx [eax] +
mov [ebp-1Ch] ecx +
mov edx [ebp-1Ch] +
xor eax eax +
cmp edx 0C0000017h +
setz al  +
retn   +
mov esp [ebp-18h] +
push 8007000Eh  +
call sub_1007F50  +
mov [ebp+var_4] 0FFFFFFFEh +
mov eax [ebp+var_20] +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
jnz loc_101AC49  +
xor ecx ecx +
jnz loc_101AC49  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:LeaveCriticalSection  +
mov ecx [ebp+var_4] +
mov byte ptr [ecx+4] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_8] +
mov dword ptr [edx] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_101AEB0  +
mov eax [eax+4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_101ADF0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035968  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
call sub_101B400  +
push eax  +
mov ecx [ebp+var_10] +
call sub_101AD90  +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_10] +
call sub_101AF50  +
movzx ecx al +
test ecx ecx +
jnz loc_101AD4C  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_10] +
call sub_101AF20  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_101AE30  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
xor eax eax +
cmp [ebp+arg_0] 0 +
setnz al  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_101ADB7  +
push 80004005h  +
call sub_1007F50  +
xor ecx ecx +
jnz loc_101AD9B  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
mov edx [eax+0Ch] +
call edx  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_C] +
call sub_101AE60  +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov ecx [ebp+arg_0] +
call sub_101AEB0  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
push eax  +
call sub_101B530  +
add esp 4 +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_C] +
call sub_101AE60  +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_101AEB0  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
call sub_101A370  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_0] +
call sub_101AE90  +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
add eax 10h +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax] +
sub eax 10h +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] 0 +
jl loc_101AEEF  +
mov ecx [ebp+var_4] +
call sub_101AEB0  +
mov ecx [ebp+arg_0] +
cmp ecx [eax+8] +
jle loc_101AEF9  +
push 80070057h  +
call sub_1007F50  +
mov ecx [ebp+var_4] +
call sub_101AEB0  +
mov edx [ebp+arg_0] +
mov [eax+4] edx +
mov eax [ebp+var_4] +
mov ecx [eax] +
xor edx edx +
mov eax [ebp+arg_0] +
mov [ecx+eax*2] dx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_101B420  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov [ebp+var_1] 0 +
cmp [ebp+arg_0] 0 +
jz loc_101AF8E  +
mov eax [ebp+arg_0] +
shr eax 10h +
test eax eax +
jnz loc_101AF8E  +
mov ecx [ebp+arg_0] +
and ecx 0FFFFh +
movzx edx cx +
mov [ebp+var_8] edx +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_C] +
call sub_101AFA0  +
mov [ebp+var_1] 1 +
mov al [ebp+var_1] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_101B300  +
mov [ebp+hModule] eax +
cmp [ebp+hModule] 0 +
jnz loc_101AFC1  +
xor eax eax +
jmp loc_101AFD1  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101AFE0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call sub_101B070  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_101B005  +
xor eax eax +
jmp loc_101B05C  +
mov edx [ebp+var_4] +
movzx eax word ptr [edx] +
push eax  +
mov ecx [ebp+var_4] +
add ecx 2 +
push ecx  +
call sub_101B180  +
add esp 8 +
mov [ebp+var_C] eax +
mov edx [ebp+var_C] +
push edx  +
mov ecx [ebp+var_10] +
call sub_101B280  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
movzx ecx word ptr [eax] +
push ecx  +
mov edx [ebp+var_4] +
add edx 2 +
push edx  +
mov eax [ebp+var_C] +
push eax  +
mov ecx [ebp+var_8] +
push ecx  +
call sub_101B190  +
add esp 10h +
mov edx [ebp+var_C] +
push edx  +
mov ecx [ebp+var_10] +
call sub_101B450  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 6  +
mov eax [ebp+arg_4] +
shr eax 4 +
add eax 1 +
movzx ecx ax +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call ds:FindResourceW  +
mov [ebp+hResInfo] eax +
cmp [ebp+hResInfo] 0 +
jnz loc_101B09C  +
xor eax eax +
jmp loc_101B0AD  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hResInfo] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call sub_101B0C0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+hResInfo] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
cmp [ebp+hResData] 0 +
jnz loc_101B0E6  +
xor eax eax +
jmp loc_101B166  +
mov edx [ebp+hResData] +
push edx  +
call ds:LockResource  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_101B0FD  +
xor eax eax +
jmp loc_101B166  +
mov eax [ebp+hResInfo] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call ds:SizeofResource  +
mov [ebp+var_C] eax +
mov edx [ebp+var_4] +
add edx [ebp+var_C] +
mov [ebp+var_8] edx +
mov eax [ebp+arg_8] +
and eax 0Fh +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jbe loc_101B149  +
mov ecx [ebp+var_4] +
cmp ecx [ebp+var_8] +
jnb loc_101B149  +
mov edx [ebp+var_4] +
movzx eax word ptr [edx] +
mov ecx [ebp+var_4] +
lea edx [ecx+eax*2+2] +
mov [ebp+var_4] edx +
mov eax [ebp+var_10] +
sub eax 1 +
mov [ebp+var_10] eax +
jmp loc_101B120  +
mov ecx [ebp+var_4] +
cmp ecx [ebp+var_8] +
jb loc_101B155  +
xor eax eax +
jmp loc_101B166  +
mov edx [ebp+var_4] +
movzx eax word ptr [edx] +
test eax eax +
jnz loc_101B163  +
xor eax eax +
jmp loc_101B166  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_C] 0FFFFFFFFh +
jnz loc_101B1AD  +
mov eax [ebp+arg_8] +
push eax  +
call sub_101B230  +
add esp 4 +
add eax 1 +
mov [ebp+arg_C] eax +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_101B1D0  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_101B200  +
add esp 10h +
push eax  +
call sub_1009C50  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
shl eax 1 +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
shl edx 1 +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call memcpy_s  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
add ecx 2 +
mov [ebp+var_8] ecx +
mov edx [ebp+var_4] +
mov ax [edx] +
mov [ebp+var_A] ax +
add [ebp+var_4] 2 +
cmp [ebp+var_A] 0 +
jnz loc_101B247  +
mov ecx [ebp+var_4] +
sub ecx [ebp+var_8] +
sar ecx 1 +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_101B2A0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_101AEB0  +
mov [ebp+var_C] eax +
mov eax [ebp+var_C] +
mov ecx 1 +
sub ecx [eax+0Ch] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_C] +
mov eax [edx+8] +
sub eax [ebp+arg_0] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_4] +
or ecx [ebp+var_8] +
jge loc_101B2E4  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_10] +
call sub_101B470  +
mov eax [ebp+var_10] +
mov eax [eax] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
mov eax [ebp+arg_0] +
push eax  +
call sub_101B320  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_4] 0 +
push 0  +
mov ecx offset unk_103BC00 +
call sub_102BD0B  +
mov [ebp+hModule] eax +
mov [ebp+var_C] 1 +
jmp loc_101B367  +
mov eax [ebp+var_C] +
mov [ebp+var_10] eax +
mov ecx [ebp+var_10] +
push ecx  +
mov ecx offset unk_103BC00 +
call sub_102BD0B  +
mov [ebp+hModule] eax +
mov edx [ebp+var_C] +
add edx 1 +
mov [ebp+var_C] edx +
cmp [ebp+hModule] 0 +
jz loc_101B395  +
cmp [ebp+var_4] 0 +
jnz loc_101B395  +
movzx eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call sub_101B3B0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_101B393  +
mov eax [ebp+hModule] +
jmp loc_101B397  +
jmp loc_101B347  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
movzx eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
shr ecx 4 +
add ecx 1 +
movzx edx cx +
push edx  +
push 6  +
mov eax [ebp+hModule] +
push eax  +
call ds:FindResourceExW  +
mov [ebp+hResInfo] eax +
cmp [ebp+hResInfo] 0 +
jnz loc_101B3E1  +
xor eax eax +
jmp loc_101B3F2  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+hResInfo] +
push edx  +
mov eax [ebp+hModule] +
push eax  +
call sub_101B0C0  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset unk_103BC74 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_101B620  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_101AED0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov ecx [ebp+var_C] +
call sub_101AEB0  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
cmp ecx [ebp+arg_0] +
jle loc_101B49A  +
mov edx [ebp+var_4] +
mov eax [edx+4] +
mov [ebp+arg_0] eax +
mov ecx [ebp+var_4] +
call sub_101B510  +
movzx ecx al +
test ecx ecx +
jz loc_101B4B7  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_C] +
call sub_101B6C0  +
jmp loc_101B504  +
mov eax [ebp+var_4] +
mov ecx [eax+8] +
cmp ecx [ebp+arg_0] +
jge loc_101B504  +
mov edx [ebp+var_4] +
mov eax [edx+8] +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 400h +
jle loc_101B4E2  +
mov ecx [ebp+var_8] +
add ecx 400h +
mov [ebp+var_8] ecx +
jmp loc_101B4EA  +
mov edx [ebp+var_8] +
shl edx 1 +
mov [ebp+var_8] edx +
mov eax [ebp+var_8] +
cmp eax [ebp+arg_0] +
jge loc_101B4F8  +
mov ecx [ebp+arg_0] +
mov [ebp+var_8] ecx +
mov edx [ebp+var_8] +
push edx  +
mov ecx [ebp+var_C] +
call sub_101B780  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
xor ecx ecx +
cmp dword ptr [eax+0Ch] 1 +
setnle cl  +
mov al cl +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov edx [ecx] +
mov ecx eax +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_0] +
call sub_101A350  +
movzx ecx al +
test ecx ecx +
jnz loc_101B57E  +
mov edx [ebp+arg_0] +
mov eax [ebp+var_8] +
cmp eax [edx] +
jnz loc_101B57E  +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_101B5F0  +
jmp loc_101B5DB  +
push 2  +
mov edx [ebp+arg_0] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
mov ecx [ebp+var_8] +
mov eax [edx] +
call eax  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_101B5A1  +
call sub_101B6A0  +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_0] +
mov eax [edx+4] +
mov [ecx+4] eax +
mov ecx [ebp+arg_0] +
mov edx [ecx+4] +
add edx 1 +
push edx  +
mov ecx [ebp+arg_0] +
call sub_101AE90  +
push eax  +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
add ecx 1 +
push ecx  +
mov ecx [ebp+var_4] +
call sub_101AE90  +
push eax  +
call sub_101B200  +
add esp 10h +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
add eax 0Ch +
mov ecx 1 +
xadd [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_101B650  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_101B800  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_0] 0 +
jnz loc_101B662  +
xor eax eax +
jmp loc_101B694  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
add ecx 2 +
mov [ebp+var_8] ecx +
mov edx [ebp+var_4] +
mov ax [edx] +
mov [ebp+var_A] ax +
add [ebp+var_4] 2 +
cmp [ebp+var_A] 0 +
jnz loc_101B671  +
mov ecx [ebp+var_4] +
sub ecx [ebp+var_8] +
sar ecx 1 +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 8007000Eh  +
call sub_1007F50  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_14] ecx +
mov ecx [ebp+var_14] +
call sub_101AEB0  +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
mov ecx [eax+4] +
mov [ebp+var_8] ecx +
mov edx [ebp+var_10] +
mov eax [edx] +
mov ecx [ebp+var_10] +
mov ecx [ecx] +
mov edx [eax] +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_18] eax +
push 2  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_18] +
mov eax [edx] +
mov ecx [ebp+var_18] +
mov edx [eax] +
call edx  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_101B713  +
call sub_101B6A0  +
mov eax [ebp+var_8] +
cmp eax [ebp+arg_0] +
jge loc_101B723  +
mov ecx [ebp+var_8] +
mov [ebp+var_1C] ecx +
jmp loc_101B729  +
mov edx [ebp+arg_0] +
mov [ebp+var_1C] edx +
mov eax [ebp+var_1C] +
add eax 1 +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_101AE90  +
push eax  +
mov edx [ebp+var_4] +
push edx  +
mov ecx [ebp+var_C] +
call sub_101AE90  +
push eax  +
call sub_101B200  +
add esp 10h +
mov eax [ebp+var_C] +
mov ecx [ebp+var_8] +
mov [eax+4] ecx +
mov ecx [ebp+var_10] +
call sub_101A370  +
mov edx [ebp+var_C] +
push edx  +
mov ecx [ebp+var_14] +
call sub_101AE60  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_101AEB0  +
mov [ebp+var_C] eax +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov [ebp+var_8] ecx +
mov edx [ebp+var_C] +
mov eax [edx+8] +
cmp eax [ebp+arg_0] +
jge loc_101B7AF  +
cmp [ebp+arg_0] 0 +
jg loc_101B7B6  +
call sub_101B6A0  +
jmp loc_101B7E7  +
push 2  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_C] +
push edx  +
mov eax [ebp+var_8] +
mov edx [eax] +
mov ecx [ebp+var_8] +
mov eax [edx+8] +
call eax  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_101B7DB  +
call sub_101B6A0  +
mov ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_101AE60  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
cmp [ebp+arg_4] 0 +
jnz loc_101B81E  +
mov ecx [ebp+var_10] +
call sub_101B8C0  +
jmp loc_101B8A6  +
cmp [ebp+arg_0] 0 +
jnz loc_101B82E  +
push 80070057h  +
call sub_1007F50  +
mov ecx [ebp+var_10] +
call sub_101ACA0  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
call sub_1024680  +
mov ecx [ebp+arg_0] +
sub ecx eax +
sar ecx 1 +
mov [ebp+var_8] ecx +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_10] +
call sub_101B280  +
mov [ebp+var_C] eax +
mov eax [ebp+var_8] +
cmp eax [ebp+var_4] +
ja loc_101B882  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+var_8] +
mov eax [ebp+var_C] +
lea ecx [eax+edx*2] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+var_C] +
push eax  +
call sub_101B940  +
add esp 10h +
jmp loc_101B89A  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_C] +
push ecx  +
call sub_101B200  +
add esp 10h +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_10] +
call sub_101B450  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_101AEB0  +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_8] +
cmp dword ptr [edx+4] 0 +
jnz loc_101B8E9  +
jmp loc_101B928  +
mov ecx [ebp+var_8] +
call sub_101A350  +
movzx eax al +
test eax eax +
jz loc_101B904  +
push 0  +
mov ecx [ebp+var_10] +
call sub_101AED0  +
jmp loc_101B928  +
mov ecx [ebp+var_8] +
call sub_101A370  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov ecx [ebp+var_4] +
mov eax [edx+0Ch] +
call eax  +
mov [ebp+var_C] eax +
mov ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_101AE60  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
shl eax 1 +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
shl edx 1 +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call memmove_s  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
push 1  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_8] +
mov edx [ecx+4] +
push edx  +
lea ecx [ebp+var_2C] +
call sub_1009040  +
mov eax [ebp+var_8] +
mov ecx [eax+18h] +
mov [ebp+var_34] ecx +
mov edx [ebp+var_8] +
lea eax [ebp+var_2C] +
mov [edx+18h] eax +
push 0  +
lea ecx [ebp+dwNewLong] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+var_8] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
mov ecx [ebp+var_8] +
mov eax [edx] +
call eax  +
mov [ebp+var_30] eax +
mov ecx [ebp+var_8] +
mov edx [ebp+var_34] +
mov [ecx+18h] edx +
cmp [ebp+var_30] 0 +
jz loc_101BA43  +
mov eax [ebp+arg_4] +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 39h +
ja loc_101BA0A  +
cmp [ebp+var_3C] 39h +
jz loc_101BA27  +
cmp [ebp+var_3C] 2Eh +
jb loc_101BA2F  +
cmp [ebp+var_3C] 2Fh +
jbe loc_101BA27  +
cmp [ebp+var_3C] 37h +
jz loc_101BA27  +
jmp loc_101BA2F  +
cmp [ebp+var_3C] 110h +
jz loc_101BA27  +
cmp [ebp+var_3C] 131h +
jbe loc_101BA2F  +
cmp [ebp+var_3C] 138h +
jbe loc_101BA27  +
jmp loc_101BA2F  +
mov ecx [ebp+dwNewLong] +
mov [ebp+var_30] ecx +
jmp loc_101BA41  +
mov edx [ebp+dwNewLong] +
push edx  +
push 0  +
mov eax [ebp+var_8] +
mov ecx [eax+4] +
push ecx  +
call sub_1009000  +
jmp loc_101BA5B  +
cmp [ebp+arg_4] 82h +
jnz loc_101BA5B  +
mov edx [ebp+var_8] +
mov eax [edx+1Ch] +
or eax 1 +
mov ecx [ebp+var_8] +
mov [ecx+1Ch] eax +
mov edx [ebp+var_8] +
mov eax [edx+1Ch] +
and eax 1 +
jz loc_101BAA2  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+18h] 0 +
jnz loc_101BAA2  +
mov edx [ebp+var_8] +
mov eax [edx+4] +
mov [ebp+var_38] eax +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+4] 0 +
mov edx [ebp+var_8] +
mov eax [edx+1Ch] +
and eax 0FFFFFFFEh +
mov ecx [ebp+var_8] +
mov [ecx+1Ch] eax +
mov edx [ebp+var_38] +
push edx  +
mov eax [ebp+var_8] +
mov edx [eax] +
mov ecx [ebp+var_8] +
mov eax [edx+0Ch] +
call eax  +
mov eax [ebp+var_30] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
call sub_1009F90  +
call sub_1025250  +
mov [ebp+var_4] eax +
push 5  +
mov eax [ebp+lpName] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call sub_1009F30  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_101BBDE  +
push 0F0h  +
mov edx [ebp+lpName] +
push edx  +
mov eax [ebp+hModule] +
push eax  +
call sub_1009F30  +
mov [ebp+hResInfo] eax +
mov [ebp+hResData] 0 +
mov [ebp+var_C] 0 +
cmp [ebp+hResInfo] 0 +
jz loc_101BB28  +
mov ecx [ebp+hResInfo] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
mov eax [ebp+hResData] +
push eax  +
call ds:LockResource  +
mov [ebp+var_C] eax +
mov [ebp+dwErrCode] 0 +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call ds:LoadResource  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jz loc_101BBC5  +
mov eax [ebp+var_10] +
push eax  +
call ds:LockResource  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jz loc_101BBBA  +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [ebp+var_20] +
push edx  +
call sub_10099E0  +
mov [ebp+pMem] eax +
mov eax [ebp+dwInitParam] +
push eax  +
mov ecx [ebp+lpDialogFunc] +
push ecx  +
mov edx [ebp+hWndParent] +
push edx  +
mov eax [ebp+pMem] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call ds:CreateDialogIndirectParamW  +
mov [ebp+var_4] eax +
mov edx [ebp+var_4] +
push edx  +
call sub_101BBF0  +
movzx eax al +
test eax eax +
jnz loc_101BB9F  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
mov ecx [ebp+pMem] +
cmp ecx [ebp+var_20] +
jz loc_101BBB8  +
mov edx [ebp+pMem] +
push edx  +
call ds:GlobalHandle  +
push eax  +
call ds:GlobalFree  +
jmp loc_101BBC3  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_101BBCE  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
cmp [ebp+dwErrCode] 0 +
jz loc_101BBDE  +
mov eax [ebp+dwErrCode] +
push eax  +
call ds:SetLastError  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] 0 +
setnz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jz loc_101BC2A  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:__imp_free  +
add esp 4 +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
cmp [ebp+arg_0] 0 +
setnz al  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_101BC64  +
push 80070057h  +
call sub_1007F50  +
xor ecx ecx +
jnz loc_101BC48  +
xor edx edx +
cmp [ebp+arg_4] 0 +
setnl dl  +
mov [ebp+var_8] edx +
cmp [ebp+var_8] 0 +
jnz loc_101BC84  +
push 80070057h  +
call sub_1007F50  +
xor eax eax +
jnz loc_101BC68  +
xor ecx ecx +
cmp [ebp+arg_8] 0 +
setnz cl  +
mov [ebp+var_C] ecx +
cmp [ebp+var_C] 0 +
jnz loc_101BCA4  +
push 80070057h  +
call sub_1007F50  +
xor edx edx +
jnz loc_101BC88  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
cmp ecx [ebp+arg_8] +
jz loc_101BD05  +
mov edx [ebp+arg_4] +
cmp edx [ebp+arg_C] +
jle loc_101BCEC  +
push 2  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
push edx  +
call off_103B450  +
add esp 0Ch +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jnz loc_101BCE2  +
push 8007000Eh  +
call sub_1007F50  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_10] +
mov [eax] ecx +
jmp loc_101BD03  +
mov edx [ebp+arg_0] +
mov eax [edx] +
push eax  +
call ds:__imp_free  +
add esp 4 +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov [ecx] edx +
jmp loc_101BD2B  +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_C] +
jle loc_101BD23  +
push 2  +
mov ecx [ebp+arg_4] +
push ecx  +
call ds:__imp_calloc  +
add esp 8 +
mov edx [ebp+arg_0] +
mov [edx] eax +
jmp loc_101BD2B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
mov edx [ebp+arg_0] +
cmp dword ptr [edx] 0 +
jnz loc_101BD3D  +
push 8007000Eh  +
call sub_1007F50  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_10359A6  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_101E580  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_10021C8 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+20h] offset off_10021B8 +
mov edx [ebp+var_10] +
mov eax [ebp+arg_0] +
mov [edx+220h] eax +
mov ecx [ebp+var_10] +
add ecx 230h +
call sub_102EE90  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
add ecx 288h +
call sub_102D200  +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+21Ch] 0C9h +
mov edx [ebp+var_10] +
mov dword ptr [edx+1C8h] 0FFFFFFFFh +
mov eax [ebp+var_10] +
add eax 228h +
push eax  +
call ds:QueryPerformanceCounter  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_101BE33  +
jmp loc_101BFF2  +
cmp dword ptr [ebp+0Ch] 24h +
jnz loc_101BE6D  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_101C0D0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101BE6D  +
mov eax 1 +
jmp loc_101BFF4  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_101BEDE  +
mov eax [ebp+10h] +
and eax 0FFFFh +
movzx ecx ax +
cmp ecx 133h +
jnz loc_101BEDE  +
mov edx [ebp+10h] +
shr edx 10h +
and edx 0FFFFh +
movzx eax dx +
test eax eax +
jnz loc_101BEDE  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
push ecx  +
mov ecx [ebp-8] +
call sub_101C450  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101BEDE  +
mov eax 1 +
jmp loc_101BFF4  +
cmp dword ptr [ebp+0Ch] 138h +
jnz loc_101BF1B  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_101C570  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101BF1B  +
mov eax 1 +
jmp loc_101BFF4  +
cmp dword ptr [ebp+0Ch] 84h +
jnz loc_101BF58  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101C6D0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101BF58  +
mov eax 1 +
jmp loc_101BFF4  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_101BF8F  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101C5C0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101BF8F  +
mov eax 1 +
jmp loc_101BFF4  +
push 0  +
mov edx [ebp+18h] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp+8] +
push eax  +
mov ecx [ebp-8] +
call sub_10150F0  +
test eax eax +
jz loc_101BFB8  +
mov eax 1 +
jmp loc_101BFF4  +
cmp dword ptr [ebp+0Ch] 110h +
jnz loc_101BFF2  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_101C140  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101BFF2  +
mov eax 1 +
jmp loc_101BFF4  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_101C040  +
mov eax [ebp+8] +
and eax 1 +
jz loc_101C025  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_10359A6  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_10021C8 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+20h] offset off_10021B8 +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
add ecx 288h +
call sub_102D450  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 230h +
call sub_102F120  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
call sub_101E700  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_8] +
mov [ebp+var_14] eax +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_101A600  +
mov edx [ebp+Rect.right] +
sub edx [ebp+Rect.left] +
mov eax [ebp+var_14] +
mov [eax+20h] edx +
mov ecx [ebp+var_14] +
mov edx [ebp+var_14] +
mov eax [edx+20h] +
mov [ecx+18h] eax +
mov ecx [ebp+Rect.bottom] +
sub ecx [ebp+Rect.top] +
mov edx [ebp+var_14] +
mov [edx+24h] ecx +
mov eax [ebp+var_14] +
mov ecx [ebp+var_14] +
mov edx [ecx+24h] +
mov [eax+1Ch] edx +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10359E0  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push esi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_38] ecx +
push 12Dh  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx [ebp+var_38] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_38] +
add ecx 288h +
call sub_1012DF0  +
mov ecx [ebp+var_38] +
add ecx 288h +
call sub_102D4F0  +
push 0  +
push 0  +
push 10000000h  +
mov ecx [ebp+var_38] +
add ecx 28Ch +
call sub_101C8B0  +
push 0  +
push 8000000h  +
push 0  +
mov ecx [ebp+var_38] +
add ecx 4 +
call sub_101C930  +
mov ecx [ebp+var_38] +
mov edx [ecx+4] +
push edx  +
call ds:SetForegroundWindow  +
push 1  +
mov ecx [ebp+var_38] +
call sub_101EDA0  +
mov eax [ebp+var_38] +
cmp dword ptr [eax+220h] 0 +
jz loc_101C37F  +
lea ecx [ebp+var_10] +
call sub_101CBA0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_101CBA0  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_38] +
mov edx [ecx+220h] +
push edx  +
mov eax [ebp+var_38] +
mov edx [eax] +
mov ecx [ebp+var_38] +
mov eax [edx+18h] +
call eax  +
push 133h  +
lea ecx [ebp+var_30] +
push ecx  +
mov ecx [ebp+var_38] +
add ecx 4 +
call sub_10111E0  +
mov edx [eax] +
push edx  +
mov ecx [ebp+var_38] +
add ecx 230h +
call sub_1012DF0  +
push 2  +
mov ecx [ebp+var_38] +
add ecx 230h +
call sub_102F180  +
push 25h  +
push 2  +
mov ecx [ebp+var_38] +
add ecx 230h +
call sub_101C3C0  +
push 11h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov esi eax +
mov ecx [ebp+var_38] +
add ecx 230h +
call sub_102F8A0  +
add esi eax +
push 12h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
add esi eax +
mov [ebp+cy] esi +
lea eax [ebp+X] +
push eax  +
mov ecx [ebp+var_38] +
add ecx 4 +
call sub_100D6B0  +
push 14h  +
mov ecx [ebp+cy] +
push ecx  +
mov edx [ebp-1Ch] +
sub edx [ebp+X] +
push edx  +
mov eax [ebp-18h] +
sub eax [ebp+cy] +
push eax  +
mov ecx [ebp+X] +
push ecx  +
push 0  +
mov ecx [ebp+var_38] +
add ecx 234h +
call sub_100E0E0  +
mov edx [ebp+var_38] +
mov ecx [edx+220h] +
call sub_101AAB0  +
test eax eax +
jz loc_101C347  +
push 1F9h  +
mov eax hInstance +
push eax  +
lea ecx [ebp+var_10] +
call sub_101AFE0  +
test eax eax +
jz loc_101C347  +
mov ecx [ebp+var_38] +
mov ecx [ecx+220h] +
call sub_101AAB0  +
push eax  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
lea edx [ebp+var_14] +
push edx  +
call sub_101C800  +
add esp 0Ch +
lea ecx [ebp+var_14] +
call sub_1024680  +
push eax  +
push 133h  +
mov eax [ebp+var_38] +
mov ecx [eax+234h] +
push ecx  +
mov ecx [ebp+var_38] +
add ecx 1CCh +
call sub_102EB90  +
push 130h  +
lea edx [ebp+var_34] +
push edx  +
mov ecx [ebp+var_38] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6F0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_101AD70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_101AD70  +
jmp loc_101C38C  +
mov eax [ebp+var_38] +
mov ecx [eax+4] +
push ecx  +
call ds:DestroyWindow  +
mov edx [ebp+var_38] +
mov eax [edx] +
mov ecx [ebp+var_38] +
mov edx [eax+28h] +
call edx  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+30h] ecx +
mov edx [ebp+var_4] +
mov eax [ebp+arg_4] +
mov [edx+34h] eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
push 0  +
push 0  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
mov edx hInstance +
push edx  +
mov eax hInstance +
push eax  +
mov ecx [ebp+var_4] +
add ecx 1CCh +
call sub_102E970  +
push 12Dh  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
mov ecx [ebp+var_4] +
add ecx 1CCh +
call sub_102EBF0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 274h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_64] eax +
mov [ebp+var_274] ecx +
mov [ebp+StartupInfo.cb] 0 +
push 40h  +
push 0  +
lea eax [ebp+StartupInfo.lpReserved] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+hObject] 0 +
xor ecx ecx +
mov [ebp-10h] ecx +
mov [ebp-0Ch] ecx +
mov [ebp-8] ecx +
push 0  +
call ds:PostQuitMessage  +
mov [ebp+StartupInfo.cb] 44h +
movsx edx word ptr dword_103B014 +
and edx 0FFFFh +
movzx eax dx +
movsx ecx word ptr dword_103B018 +
and ecx 0FFFFh +
movzx edx cx +
shl edx 10h +
or eax edx +
mov [ebp+var_4] eax +
mov eax [ebp+var_274] +
mov ecx [eax+220h] +
call sub_101CB80  +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
push offset aSndvol_exeRD0S  +
push 208h  +
lea edx [ebp+CommandLine] +
push edx  +
call sub_101CA30  +
add esp 14h +
xor eax eax +
mov [ebp+var_6A] ax +
lea ecx [ebp+hObject] +
push ecx  +
lea edx [ebp+StartupInfo] +
push edx  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+CommandLine] +
push eax  +
push 0  +
call ds:CreateProcessW  +
cmp [ebp+hObject] 0 +
jz loc_101C53A  +
mov ecx [ebp+hObject] +
push ecx  +
call ds:CloseHandle  +
mov [ebp+hObject] 0 +
cmp dword ptr [ebp-10h] 0 +
jz loc_101C551  +
mov edx [ebp-10h] +
push edx  +
call ds:CloseHandle  +
mov dword ptr [ebp-10h] 0 +
xor eax eax +
mov ecx [ebp+var_64] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_8] +
mov [ebp+hWnd] eax +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetDlgCtrlID  +
cmp eax 133h +
jnz loc_101C59E  +
push 0Fh  +
call ds:GetSysColorBrush  +
jmp loc_101C5A9  +
jmp loc_101C5A9  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov [ebp+var_40] ecx +
mov eax [ebp+arg_4] +
mov [ebp+hDC] eax +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_40] +
add ecx 4 +
call sub_100D6B0  +
push offset aTraynotifyflyo  +
push 0  +
call ds:OpenThemeData  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_101C693  +
lea edx [ebp+rcSrc2] +
push edx  +
mov eax [ebp+var_40] +
mov ecx [eax+234h] +
push ecx  +
call ds:GetClientRect  +
push 2  +
lea edx [ebp+rcSrc2] +
push edx  +
mov eax [ebp+var_40] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+var_40] +
mov eax [edx+234h] +
push eax  +
call ds:MapWindowPoints  +
mov ecx [ebp+Rect.left] +
mov [ebp+rcSrc2.left] ecx +
mov edx [ebp+Rect.right] +
mov [ebp+rcSrc2.right] edx +
mov eax [ebp+Rect.left] +
mov [ebp+rcDst.left] eax +
mov ecx [ebp+Rect.top] +
mov [ebp+rcDst.top] ecx +
mov edx [ebp+Rect.right] +
mov [ebp+rcDst.right] edx +
mov eax [ebp+Rect.bottom] +
mov [ebp+rcDst.bottom] eax +
lea ecx [ebp+rcSrc2] +
push ecx  +
lea edx [ebp+Rect] +
push edx  +
lea eax [ebp+rcDst] +
push eax  +
call ds:SubtractRect  +
push 0  +
lea ecx [ebp+rcDst] +
push ecx  +
push 0  +
push 1  +
mov edx [ebp+hDC] +
push edx  +
mov eax [ebp+var_14] +
push eax  +
call ds:DrawThemeBackground  +
push 0  +
lea ecx [ebp+rcSrc2] +
push ecx  +
push 0  +
push 2  +
mov edx [ebp+hDC] +
push edx  +
mov eax [ebp+var_14] +
push eax  +
call ds:DrawThemeBackground  +
jmp loc_101C6B0  +
push 5  +
call ds:GetSysColorBrush  +
mov [ebp+hbr] eax +
mov ecx [ebp+hbr] +
push ecx  +
lea edx [ebp+Rect] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:FillRect  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_8] +
and eax 0FFFFh +
movsx ecx ax +
mov [ebp+pt.x] ecx +
mov edx [ebp+arg_8] +
shr edx 10h +
and edx 0FFFFh +
movsx eax dx +
mov [ebp+pt.y] eax +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_100D6B0  +
lea edx [ebp+Rect] +
push edx  +
mov eax [ebp+var_1C] +
mov ecx [eax+4] +
push ecx  +
call sub_102EC80  +
mov edx [ebp+pt.y] +
push edx  +
mov eax [ebp+pt.x] +
push eax  +
lea ecx [ebp+Rect] +
push ecx  +
call ds:PtInRect  +
test eax eax +
jz loc_101C745  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
mov ecx [ebp+var_1C] +
call sub_101C7E0  +
jmp loc_101C747  +
jmp loc_101C747  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_0] +
call sub_101CB80  +
push eax  +
mov eax [ebp+var_4] +
mov ecx [eax+220h] +
call sub_101CB50  +
test eax eax +
jz loc_101C7A0  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov ecx [ebp+var_4] +
mov eax [edx+14h] +
call eax  +
push 0  +
call ds:PostQuitMessage  +
mov eax 1 +
jmp loc_101C7A2  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
push 130h  +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6F0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_8] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+arg_0] +
call sub_101C830  +
mov [ebp+var_4] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
cmp [ebp+arg_0] 0 +
jnz loc_101C84B  +
push 80070057h  +
call sub_1007F50  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_101C9B0  +
add esp 8 +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0FFFFFFFFh +
jnz loc_101C86E  +
push 8007000Eh  +
call sub_1007F50  +
mov edx [ebp+var_8] +
push edx  +
mov ecx [ebp+var_C] +
call sub_101B280  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_8] +
add edx 1 +
push edx  +
mov eax [ebp+var_4] +
push eax  +
call sub_101C9D0  +
add esp 10h +
mov ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_C] +
call sub_101B450  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
push 0FFFFFFF0h  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push ecx  +
call ds:GetWindowLongW  +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
not edx  +
and edx [ebp+var_4] +
or edx [ebp+arg_4] +
mov [ebp+dwNewLong] edx +
mov eax [ebp+var_4] +
cmp eax [ebp+dwNewLong] +
jnz loc_101C8E6  +
xor eax eax +
jmp loc_101C920  +
mov ecx [ebp+dwNewLong] +
push ecx  +
push 0FFFFFFF0h  +
mov edx [ebp+var_C] +
mov eax [edx] +
push eax  +
call ds:SetWindowLongW  +
cmp [ebp+arg_8] 0 +
jz loc_101C91B  +
mov ecx [ebp+arg_8] +
or ecx 17h +
push ecx  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
mov edx [ebp+var_C] +
mov eax [edx] +
push eax  +
call ds:SetWindowPos  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
push 0FFFFFFECh  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push ecx  +
call ds:GetWindowLongW  +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
not edx  +
and edx [ebp+var_4] +
or edx [ebp+arg_4] +
mov [ebp+dwNewLong] edx +
mov eax [ebp+var_4] +
cmp eax [ebp+dwNewLong] +
jnz loc_101C966  +
xor eax eax +
jmp loc_101C9A0  +
mov ecx [ebp+dwNewLong] +
push ecx  +
push 0FFFFFFECh  +
mov edx [ebp+var_C] +
mov eax [edx] +
push eax  +
call ds:SetWindowLongW  +
cmp [ebp+arg_8] 0 +
jz loc_101C99B  +
mov ecx [ebp+arg_8] +
or ecx 17h +
push ecx  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
mov edx [ebp+var_C] +
mov eax [edx] +
push eax  +
call ds:SetWindowPos  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:_vscwprintf  +
add esp 8 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call vswprintf_s  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
fild  [ebp+arg_0] +
mov eax [ebp+var_4] +
fmul  dword ptr [eax+4] +
fdiv  ds:dbl_1002248 +
call _ftol2_sse  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_4] +
shr eax 1 +
mov [ebp+var_8] eax +
push 7FFFFFFFh  +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_1009560  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_101CA82  +
lea eax [ebp+arg_C] +
mov [ebp+var_C] eax +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
push 0  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_101CA90  +
mov [ebp+var_4] eax +
mov [ebp+var_C] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] 0 +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
sub eax 1 +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_10] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:_vsnwprintf  +
add esp 10h +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jl loc_101CAD9  +
mov edx [ebp+var_C] +
cmp edx [ebp+var_8] +
jbe loc_101CAFC  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_0] +
lea edx [ecx+eax*2] +
mov [ebp+arg_0] edx +
xor eax eax +
mov ecx [ebp+arg_0] +
mov [ecx] ax +
mov edx [ebp+var_8] +
mov [ebp+var_4] edx +
mov [ebp+var_10] 8007007Ah +
jmp loc_101CB26  +
mov eax [ebp+var_C] +
cmp eax [ebp+var_8] +
jnz loc_101CB20  +
mov ecx [ebp+var_8] +
mov edx [ebp+arg_0] +
lea eax [edx+ecx*2] +
mov [ebp+arg_0] eax +
xor ecx ecx +
mov edx [ebp+arg_0] +
mov [edx] cx +
mov eax [ebp+var_8] +
mov [ebp+var_4] eax +
jmp loc_101CB26  +
mov ecx [ebp+var_C] +
mov [ebp+var_4] ecx +
cmp [ebp+arg_8] 0 +
jz loc_101CB34  +
mov edx [ebp+arg_8] +
mov eax [ebp+var_4] +
mov [edx] eax +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+24h] +
push edx  +
call ds:__imp__wcsicmp  +
add esp 8 +
neg eax  +
sbb eax eax +
add eax 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+24h] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
call sub_101B400  +
push eax  +
mov ecx [ebp+var_4] +
call sub_101AD90  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035A13  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_1027E80  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_100230C +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+20h] 1 +
mov edx [ebp+var_10] +
mov dword ptr [edx+30h] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
add ecx 34h +
call sub_10246E0  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
add ecx 40h +
call sub_101A8A0  +
mov eax [ebp+var_10] +
mov dword ptr [eax+78h] 1 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+7Ch] 1 +
mov edx [ebp+var_10] +
mov dword ptr [edx+80h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+84h] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+88h] 0 +
mov edx [ebp+var_10] +
add edx 28h +
push edx  +
call ds:QueryPerformanceCounter  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_101CCD3  +
jmp loc_101CFC4  +
cmp dword ptr [ebp+0Ch] 113h +
jnz loc_101CD10  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_101D410  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CD10  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 110h +
jnz loc_101CD4D  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_101D180  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CD4D  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 2 +
jnz loc_101CD87  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101D5E0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CD87  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 24h +
jnz loc_101CDC1  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101D6E0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CDC1  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 84h +
jnz loc_101CDFE  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101C6D0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CDFE  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 40Ch +
jnz loc_101CE3B  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101D730  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CE3B  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_101CE75  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101D850  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CE75  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 6 +
jnz loc_101CEAF  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101D630  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CEAF  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 423h +
jnz loc_101CEEC  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_101D550  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CEEC  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_101CF58  +
mov edx [ebp+10h] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 2 +
jnz loc_101CF58  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
movzx edx cx +
test edx edx +
jnz loc_101CF58  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
and edx 0FFFFh +
push edx  +
mov eax [ebp+10h] +
shr eax 10h +
and eax 0FFFFh +
push eax  +
mov ecx [ebp-8] +
call sub_101D8B0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CF58  +
mov eax 1 +
jmp loc_101CFC6  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_101CFC4  +
mov edx [ebp+10h] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 1 +
jnz loc_101CFC4  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
movzx edx cx +
test edx edx +
jnz loc_101CFC4  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
and edx 0FFFFh +
push edx  +
mov eax [ebp+10h] +
shr eax 10h +
and eax 0FFFFh +
push eax  +
mov ecx [ebp-8] +
call sub_101D8B0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101CFC4  +
mov eax 1 +
jmp loc_101CFC6  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_101D040  +
mov eax [ebp+8] +
and eax 1 +
jz loc_101D005  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1009750  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_1035A5E  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov dword ptr [eax] offset off_100230C +
mov [ebp+var_4] 2 +
mov [ebp+var_10] 0 +
lea ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+var_14] +
add ecx 34h +
call sub_1027430  +
test eax eax +
jz loc_101D0B5  +
cmp [ebp+var_10] 0 +
jz loc_101D0B3  +
mov edx [ebp+var_10] +
add edx 20h +
mov eax [ebp+var_10] +
mov ecx [eax+20h] +
push edx  +
mov edx [ecx+8] +
call edx  +
mov [ebp+var_10] 0 +
jmp loc_101D081  +
mov eax [ebp+var_14] +
cmp dword ptr [eax+88h] 0 +
jz loc_101D0DE  +
mov ecx [ebp+var_14] +
mov edx [ecx+88h] +
push edx  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_14] +
mov dword ptr [eax+88h] 0 +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_14] +
add ecx 40h +
call sub_101A940  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
add ecx 34h +
call sub_100B410  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_14] +
call sub_1014040  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
add eax 20h +
push eax  +
call ds:InterlockedDecrement  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_101D16B  +
mov ecx [ebp+arg_0] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_C] +
mov [ebp+var_8] edx +
cmp [ebp+var_8] 0 +
jz loc_101D164  +
push 1  +
mov eax [ebp+var_8] +
mov edx [eax] +
mov ecx [ebp+var_8] +
mov eax [edx+4] +
call eax  +
mov [ebp+var_10] eax +
jmp loc_101D16B  +
mov [ebp+var_10] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+4] +
push ecx  +
mov ecx dword_103B510 +
call sub_1015EB0  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_100FBB0  +
mov [ebp+hDC] eax +
mov edx [ebp+hDC] +
push edx  +
mov ecx offset unk_103B5AC +
call sub_101E530  +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_100FBD0  +
push 65h  +
mov ecx hInstance +
push ecx  +
call ds:LoadIconW  +
mov [ebp+lParam] eax +
push 1  +
mov edx [ebp+lParam] +
push edx  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_101E500  +
push 0  +
push 8000000h  +
push 0  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_101C930  +
mov eax [ebp+var_10] +
mov ecx [eax+4] +
push ecx  +
call ds:SetForegroundWindow  +
mov [ebp+var_4] 0 +
call ds:IsThemeActive  +
test eax eax +
jz loc_101D231  +
lea edx [ebp+var_4] +
push edx  +
call ds:DwmIsCompositionEnabled  +
test eax eax +
jl loc_101D231  +
cmp [ebp+var_4] 1 +
jz loc_101D248  +
push 20h  +
push 800000h  +
push 40000h  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_101C8B0  +
mov ecx [ebp+var_10] +
call sub_101DA40  +
mov ecx [ebp+var_10] +
call sub_101DAF0  +
mov ecx [ebp+var_10] +
call sub_101DD90  +
mov ecx [ebp+var_10] +
call sub_101D8D0  +
mov ecx [ebp+var_10] +
call sub_101DEE0  +
push 0  +
push 32h  +
push 42Bh  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_101E4A0  +
push 0  +
push 0FFFFFFFCh  +
mov eax [ebp+var_10] +
mov ecx [eax+4] +
push ecx  +
push 6  +
call ds:NotifyWinEvent  +
cmp dword_103B554 0 +
jz loc_101D2E9  +
cmp dword_103B584 0 +
jz loc_101D2E2  +
push offset dword_1001810  +
push offset unk_103B560  +
call sub_101D300  +
movzx edx al +
test edx edx +
jz loc_101D2E2  +
mov eax dword_103B554 +
push eax  +
push offset dword_1001810  +
mov ecx dword_103B55C +
push ecx  +
mov edx dword_103B558 +
push edx  +
call sub_101D3A0  +
mov [ebp+var_14] eax +
jmp loc_101D2E9  +
mov [ebp+var_14] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_4] +
movzx ecx byte ptr [eax+4] +
mov edx [ebp+arg_0] +
movzx eax byte ptr [edx+28h] +
cmp ecx eax +
jle loc_101D325  +
mov ecx [ebp+arg_0] +
movzx edx byte ptr [ecx+28h] +
test edx edx +
jnz loc_101D391  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_4] +
mov eax [ecx+8] +
or eax [edx+0Ch] +
jz loc_101D38D  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov eax [ecx+8] +
and eax [edx+10h] +
mov ecx [ecx+0Ch] +
and ecx [edx+14h] +
mov [ebp+var_C] eax +
mov [ebp+var_8] ecx +
mov edx [ebp+var_C] +
or edx [ebp+var_8] +
jz loc_101D391  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov edx [eax+8] +
and edx [ecx+18h] +
mov eax [eax+0Ch] +
and eax [ecx+1Ch] +
mov ecx [ebp+arg_0] +
mov [ebp+var_14] edx +
mov [ebp+var_10] eax +
mov [ebp+var_18] ecx +
mov edx [ebp+var_18] +
mov eax [ebp+var_14] +
cmp eax [edx+18h] +
jnz loc_101D391  +
mov ecx [ebp+var_18] +
mov edx [ebp+var_10] +
cmp edx [ecx+1Ch] +
jnz loc_101D391  +
mov al 1 +
jmp loc_101D393  +
xor al al +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push 4  +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+var_10] +
push ecx  +
call sub_101D3E0  +
lea edx [ebp+var_10] +
push edx  +
push 1  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call ds:EtwEventWrite  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
xor ecx ecx +
mov edx [ebp+arg_0] +
mov [edx] eax +
mov [edx+4] ecx +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov edx [ebp+arg_0] +
mov dword ptr [edx+0Ch] 0 +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov [ebp+var_24] ecx +
cmp [ebp+arg_4] 42Bh +
jnz loc_101D51B  +
mov [ebp+var_4] 0 +
call ds:GetForegroundWindow  +
mov [ebp+hWnd] eax +
cmp [ebp+hWnd] 0 +
jz loc_101D45D  +
lea eax [ebp+dwProcessId] +
push eax  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetWindowThreadProcessId  +
call ds:GetCurrentProcessId  +
xor edx edx +
cmp [ebp+dwProcessId] eax +
setz dl  +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 0 +
jnz loc_101D519  +
call ds:GetDoubleClickTime  +
mov ecx 2710h +
mul  ecx +
mov [ebp+var_20] eax +
mov [ebp+var_1C] edx +
lea edx [ebp+PerformanceCount] +
push edx  +
call ds:QueryPerformanceCounter  +
test eax eax +
jz loc_101D4E5  +
mov eax [ebp+var_24] +
mov ecx dword ptr [ebp+PerformanceCount] +
sub ecx [eax+28h] +
mov edx dword ptr [ebp+PerformanceCount+4] +
sbb edx [eax+2Ch] +
mov dword ptr [ebp+PerformanceCount] ecx +
mov dword ptr [ebp+PerformanceCount+4] edx +
mov eax dword ptr [ebp+PerformanceCount+4] +
cmp eax [ebp+var_1C] +
jl loc_101D4E3  +
jg loc_101D4AF  +
mov ecx dword ptr [ebp+PerformanceCount] +
cmp ecx [ebp+var_20] +
jbe loc_101D4E3  +
push 42Bh  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_101E4D0  +
push 0  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_101A6C0  +
push 0  +
push 3E8h  +
push 42Ch  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_101E4A0  +
jmp loc_101D519  +
push 42Bh  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_101E4D0  +
push 0  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_101A6C0  +
push 0  +
push 3E8h  +
push 42Ch  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_101E4A0  +
jmp loc_101D53C  +
cmp [ebp+arg_4] 42Ch +
jnz loc_101D53C  +
push 42Ch  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_101E4D0  +
push 0  +
call ds:PostQuitMessage  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
push 42Ch  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101E4D0  +
push 5  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A6C0  +
cmp dword_103B584 0 +
jz loc_101D5B7  +
push offset dword_1001810  +
push offset unk_103B560  +
call sub_101D300  +
movzx eax al +
test eax eax +
jz loc_101D5B7  +
mov ecx [ebp+arg_4] +
push ecx  +
push offset dword_1001810  +
mov edx dword_103B55C +
push edx  +
mov eax dword_103B558 +
push eax  +
call sub_101D3A0  +
mov [ebp+var_8] eax +
jmp loc_101D5BE  +
mov [ebp+var_8] 0 +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 42Bh  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101E4D0  +
push 0  +
push 0FFFFFFFCh  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
push 7  +
call ds:NotifyWinEvent  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
and eax 0FFFFh +
movzx ecx ax +
test ecx ecx +
jnz loc_101D679  +
mov edx [ebp+var_4] +
mov eax [ebp+arg_8] +
cmp eax [edx+4] +
jz loc_101D679  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A6C0  +
push 0  +
push 3E8h  +
push 42Ch  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101E4A0  +
jmp loc_101D6C9  +
mov ecx [ebp+arg_4] +
and ecx 0FFFFh +
movzx edx cx +
cmp edx 1 +
jz loc_101D69A  +
mov eax [ebp+arg_4] +
and eax 0FFFFh +
movzx ecx ax +
cmp ecx 2 +
jnz loc_101D6C9  +
mov edx [ebp+var_4] +
mov eax [ebp+arg_8] +
cmp eax [edx+4] +
jnz loc_101D6C9  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A6C0  +
push 0  +
push 3E8h  +
push 42Ch  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101E4A0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_8] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_8] +
mov eax [edx+58h] +
mov [ecx+20h] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_4] +
mov eax [edx+20h] +
mov [ecx+18h] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_8] +
mov eax [edx+5Ch] +
mov [ecx+24h] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_4] +
mov eax [edx+24h] +
mov [ecx+1Ch] eax +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
mov [ebp+var_10] 0 +
mov [ebp+var_18] 0 +
mov [ebp+var_C] 0 +
mov [ebp+var_4] 0 +
cmp [ebp+var_14] 0 +
jz loc_101D83E  +
mov ecx [ebp+var_1C] +
add ecx 40h +
call sub_101A960  +
mov ecx [ebp+var_1C] +
add ecx 34h +
call sub_1024680  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_18] +
mov [ebp+var_C] ecx +
cmp [ebp+var_18] 0 +
jz loc_101D7F9  +
lea edx [ebp+var_10] +
push edx  +
lea eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_1C] +
add ecx 34h +
call sub_1027580  +
cmp [ebp+var_10] 0 +
jz loc_101D7EA  +
mov ecx [ebp+var_14] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_101C760  +
test eax eax +
jz loc_101D7EA  +
mov [ebp+var_4] 1 +
mov edx [ebp+var_C] +
push edx  +
mov ecx [ebp+var_1C] +
add ecx 34h +
call sub_10274E0  +
cmp [ebp+var_10] 0 +
jz loc_101D7EA  +
mov eax [ebp+var_10] +
add eax 20h +
mov ecx [ebp+var_10] +
mov edx [ecx+20h] +
push eax  +
mov eax [edx+8] +
call eax  +
mov [ebp+var_10] 0 +
mov ecx [ebp+var_18] +
mov [ebp+var_C] ecx +
mov [ebp+var_10] 0 +
jmp loc_101D786  +
mov ecx [ebp+var_1C] +
add ecx 34h +
call sub_101A0A0  +
mov [ebp+var_8] eax +
mov ecx [ebp+var_1C] +
add ecx 40h +
call sub_101A980  +
mov edx [ebp+var_14] +
mov eax [edx] +
mov ecx [ebp+var_14] +
push ecx  +
mov edx [eax+8] +
call edx  +
cmp [ebp+var_8] 0 +
jbe loc_101D836  +
cmp [ebp+var_4] 0 +
jz loc_101D834  +
push 0  +
call ds:PostQuitMessage  +
jmp loc_101D83E  +
push 0  +
call ds:PostQuitMessage  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+hDC] eax +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_100D6B0  +
mov edx dword_103B590 +
push edx  +
call ds:CreateSolidBrush  +
mov [ebp+hbr] eax +
mov eax [ebp+hbr] +
push eax  +
lea ecx [ebp+Rect] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:FillRect  +
mov eax [ebp+hbr] +
push eax  +
call ds:DeleteObject  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
call ds:PostQuitMessage  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_14] eax +
mov [ebp+var_68] ecx +
xor eax eax +
mov [ebp+var_30] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_18] eax +
mov [ebp+var_30] 1Ch +
mov ecx ds:dword_1006D9C +
mov [ebp+var_24] ecx +
mov edx ds:dword_1006DA0 +
mov [ebp+var_20] edx +
mov eax ds:dword_1006DA4 +
mov [ebp+var_1C] eax +
mov ecx ds:dword_1006DA8 +
mov [ebp+var_18] ecx +
lea edx [ebp+var_10] +
push edx  +
lea eax [ebp+var_30] +
push eax  +
call ds:Shell_NotifyIconGetRect  +
mov [ebp+var_34] eax +
cmp [ebp+var_34] 0 +
jl loc_101DA17  +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_68] +
add ecx 4 +
call sub_101A600  +
mov [ebp+dy] 0 +
mov [ebp+var_3C] 0 +
lea edx [ebp+var_3C] +
push edx  +
call ds:DwmIsCompositionEnabled  +
test eax eax +
jl loc_101D9C4  +
cmp [ebp+var_3C] 0 +
jz loc_101D9C4  +
mov eax ds:dword_1006DAC +
mov [ebp+var_24] eax +
mov ecx ds:dword_1006DB0 +
mov [ebp+var_20] ecx +
mov edx ds:dword_1006DB4 +
mov [ebp+var_1C] edx +
mov eax ds:dword_1006DB8 +
mov [ebp+var_18] eax +
lea ecx [ebp+var_64] +
push ecx  +
lea edx [ebp+var_30] +
push edx  +
call ds:Shell_NotifyIconGetRect  +
test eax eax +
jl loc_101D9B2  +
mov eax [ebp+var_58] +
sub eax [ebp+var_60] +
add eax [ebp+dy] +
mov [ebp+dy] eax +
mov ecx [ebp+dy] +
push ecx  +
mov edx [ebp+dy] +
push edx  +
lea eax [ebp+Rect] +
push eax  +
call ds:InflateRect  +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
mov [ebp+var_54] ecx +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
mov [ebp+var_50] edx +
lea eax [ebp+Rect] +
push eax  +
lea ecx [ebp+var_10] +
push ecx  +
push 10054h  +
lea edx [ebp+var_54] +
push edx  +
push offset dword_103B014  +
call ds:CalculatePopupWindowPosition  +
test eax eax +
jz loc_101DA17  +
push 1  +
push 0  +
push 0  +
mov eax [ebp+Rect.top] +
add eax [ebp+dy] +
push eax  +
mov ecx [ebp+Rect.left] +
add ecx [ebp+dy] +
push ecx  +
push 0FFFFFFFFh  +
mov ecx [ebp+var_68] +
add ecx 4 +
call sub_100E0E0  +
push 1  +
push 0  +
mov ecx [ebp+var_68] +
add ecx 4 +
call sub_1010530  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035BCB  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_1C] ecx +
mov [ebp+var_10] 0 +
push 48h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_18] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_18] 0 +
jz loc_101DA98  +
mov ecx [ebp+var_18] +
call sub_10238C0  +
mov [ebp+var_20] eax +
jmp loc_101DA9F  +
mov [ebp+var_20] 0 +
mov eax [ebp+var_20] +
mov [ebp+var_14] eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_14] +
mov dword_103B544 ecx +
cmp dword_103B544 0 +
jnz loc_101DAC7  +
mov [ebp+var_10] 8007000Eh +
jmp loc_101DAD5  +
mov ecx dword_103B544 +
call sub_1023970  +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_1C] ecx +
mov [ebp+var_10] 0 +
mov [ebp+var_C] 0 +
mov [ebp+var_8] 0 +
mov [ebp+var_14] 0 +
mov ecx [ebp+var_1C] +
call sub_101E1C0  +
mov ecx [ebp+var_1C] +
add ecx 40h +
call sub_101A960  +
push 0  +
mov ecx dword_103B544 +
call sub_1023FF0  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_101DB51  +
mov [ebp+var_10] 80004005h +
jmp loc_101DC75  +
jmp loc_101DC75  +
mov ecx [ebp+var_C] +
call sub_101AA70  +
test eax eax +
jnz loc_101DB6E  +
mov [ebp+var_10] 80004005h +
jmp loc_101DC75  +
jmp loc_101DC75  +
mov eax [ebp+var_C] +
push eax  +
mov ecx [ebp+var_1C] +
call sub_101DC90  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_101DB8D  +
jmp loc_101DC75  +
jmp loc_101DC75  +
push 2  +
mov ecx [ebp+var_C] +
call sub_101AA50  +
test eax eax +
jnz loc_101DBE0  +
push 2  +
mov ecx dword_103B544 +
call sub_1023FF0  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_101DBE0  +
mov ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_1C] +
call sub_101DFF0  +
test eax eax +
jz loc_101DBE0  +
mov edx [ebp+var_8] +
push edx  +
mov ecx [ebp+var_1C] +
call sub_101DC90  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_101DBE0  +
jmp loc_101DC75  +
jmp loc_101DC75  +
mov ecx dword_103B544 +
call sub_101AAF0  +
mov [ebp+var_4] eax +
mov [ebp+var_18] 0 +
jmp loc_101DC00  +
mov eax [ebp+var_18] +
add eax 1 +
mov [ebp+var_18] eax +
mov ecx [ebp+var_18] +
cmp ecx [ebp+var_4] +
jnb loc_101DC75  +
lea edx [ebp+var_14] +
push edx  +
mov eax [ebp+var_18] +
push eax  +
mov ecx dword_103B544 +
call sub_1023EF0  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_101DC28  +
jmp loc_101DC75  +
jmp loc_101DC75  +
cmp [ebp+var_14] 0 +
jz loc_101DC73  +
push 0  +
mov ecx [ebp+var_14] +
call sub_101AA50  +
test eax eax +
jnz loc_101DC73  +
push 2  +
mov ecx [ebp+var_14] +
call sub_101AA50  +
test eax eax +
jnz loc_101DC73  +
mov ecx [ebp+var_14] +
push ecx  +
mov ecx [ebp+var_1C] +
call sub_101DFF0  +
test eax eax +
jz loc_101DC73  +
mov edx [ebp+var_14] +
push edx  +
mov ecx [ebp+var_1C] +
call sub_101DC90  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_101DC73  +
jmp loc_101DC75  +
jmp loc_101DC75  +
jmp loc_101DBF7  +
mov ecx [ebp+var_1C] +
add ecx 40h +
call sub_101A980  +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035A8B  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_24] ecx +
mov [ebp+var_14] 0 +
mov [ebp+var_10] 0 +
push 2E8h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_20] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_20] 0 +
jz loc_101DCF6  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_20] +
call sub_101BD50  +
mov [ebp+var_28] eax +
jmp loc_101DCFD  +
mov [ebp+var_28] 0 +
mov ecx [ebp+var_28] +
mov [ebp+var_1C] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
mov edx [ebp+var_1C] +
mov [ebp+var_10] edx +
cmp [ebp+var_10] 0 +
jnz loc_101DD1F  +
mov [ebp+var_14] 8007000Eh +
jmp loc_101DD75  +
mov eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_24] +
add ecx 34h +
call sub_1027390  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jnz loc_101DD52  +
mov ecx [ebp+var_10] +
add ecx 20h +
mov edx [ebp+var_10] +
mov eax [edx+20h] +
push ecx  +
mov ecx [eax+8] +
call ecx  +
mov [ebp+var_14] 8007000Eh +
jmp loc_101DD75  +
mov edx [ebp+var_10] +
add edx 20h +
mov eax [ebp+var_10] +
mov ecx [eax+20h] +
push edx  +
mov edx [ecx+4] +
call edx  +
push 0  +
mov eax [ebp+var_24] +
mov ecx [eax+4] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_101E370  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov [ebp+var_2C] ecx +
mov [ebp+var_8] 0 +
lea eax [ebp+var_28] +
push eax  +
mov ecx [ebp+var_2C] +
add ecx 4 +
call sub_101A600  +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_2C] +
add ecx 4 +
call sub_100D6B0  +
mov eax [ebp+var_20] +
sub eax [ebp+var_28] +
mov edx [ebp+Rect.right] +
sub edx [ebp+Rect.left] +
sub eax edx +
cdq   +
sub eax edx +
sar eax 1 +
mov ecx [ebp+var_2C] +
mov [ecx+60h] eax +
mov eax [ebp+var_1C] +
sub eax [ebp+var_24] +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
sub eax edx +
cdq   +
sub eax edx +
sar eax 1 +
mov ecx [ebp+var_2C] +
mov [ecx+64h] eax +
mov ecx [ebp+var_2C] +
add ecx 40h +
call sub_101A960  +
mov ecx [ebp+var_2C] +
add ecx 34h +
call sub_101A0A0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_101DE26  +
mov ecx [ebp+var_2C] +
add ecx 40h +
call sub_101A980  +
jmp loc_101DECA  +
jmp loc_101DECA  +
lea edx [ebp+var_8] +
push edx  +
mov ecx [ebp+var_2C] +
add ecx 34h +
call sub_101E410  +
test eax eax +
jnz loc_101DE4B  +
mov ecx [ebp+var_2C] +
add ecx 40h +
call sub_101A980  +
jmp loc_101DECA  +
jmp loc_101DECA  +
mov eax [ebp+var_2C] +
add eax 68h +
push eax  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_101A600  +
mov ecx [ebp+var_2C] +
add ecx 40h +
call sub_101A980  +
mov ecx [ebp+var_2C] +
mov edx [ebp+var_2C] +
mov eax [ecx+70h] +
sub eax [edx+68h] +
imul eax [ebp+var_4] +
mov ecx [ebp+var_4] +
lea edx [eax+ecx-1] +
mov eax [ebp+var_2C] +
mov ecx [eax+60h] +
lea edx [edx+ecx*2] +
mov eax [ebp+var_2C] +
mov [eax+58h] edx +
mov ecx [ebp+var_2C] +
mov edx [ebp+var_2C] +
mov eax [ecx+74h] +
sub eax [edx+6Ch] +
mov ecx [ebp+var_2C] +
mov edx [ecx+64h] +
lea eax [eax+edx*2] +
mov ecx [ebp+var_2C] +
mov [ecx+5Ch] eax +
push 6  +
mov edx [ebp+var_2C] +
mov eax [edx+5Ch] +
push eax  +
mov ecx [ebp+var_2C] +
mov edx [ecx+58h] +
push edx  +
push 0  +
push 0  +
push 0  +
mov ecx [ebp+var_2C] +
add ecx 4 +
call sub_100E0E0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov [ebp+var_2C] ecx +
mov [ebp+var_8] 0 +
mov [ebp+var_1C] 1 +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_2C] +
add ecx 4 +
call sub_100D6B0  +
mov [ebp+Y] 0 +
mov ecx [ebp+var_2C] +
mov edx [ebp+var_2C] +
mov eax [ecx+70h] +
sub eax [edx+68h] +
add eax 1 +
mov [ebp+var_20] eax +
mov ecx [ebp+var_2C] +
cmp dword ptr [ecx+78h] 0 +
jz loc_101DF43  +
mov edx [ebp+Rect.right] +
sub edx [ebp+Rect.left] +
mov eax [ebp+var_2C] +
mov ecx [ebp+var_2C] +
mov eax [eax+70h] +
sub eax [ecx+68h] +
sub edx eax +
mov [ebp+X] edx +
jmp loc_101DF52  +
mov [ebp+X] 0 +
mov ecx [ebp+var_20] +
neg ecx  +
mov [ebp+var_20] ecx +
mov ecx [ebp+var_2C] +
add ecx 40h +
call sub_101A960  +
mov ecx [ebp+var_2C] +
add ecx 34h +
call sub_1024680  +
mov [ebp+var_28] eax +
cmp [ebp+var_28] 0 +
jz loc_101DFD2  +
lea edx [ebp+var_8] +
push edx  +
lea eax [ebp+var_28] +
push eax  +
mov ecx [ebp+var_2C] +
add ecx 34h +
call sub_1027580  +
cmp [ebp+var_8] 0 +
jz loc_101DFD0  +
push 5  +
push 0  +
push 0  +
mov ecx [ebp+Y] +
push ecx  +
mov edx [ebp+X] +
push edx  +
push 0  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_100E0E0  +
cmp [ebp+var_1C] 1 +
jnz loc_101DFBA  +
mov ecx [ebp+var_8] +
call sub_101C7B0  +
mov [ebp+var_1C] 0 +
push 5  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_101A6C0  +
mov eax [ebp+X] +
sub eax [ebp+var_20] +
mov [ebp+X] eax +
jmp loc_101DF6B  +
mov ecx [ebp+var_2C] +
add ecx 40h +
call sub_101A980  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset __ehhandler$?_mbrtowc_s_l@@YAHPAHPA_WPBDI0PAUlocaleinfo_struct@@@Z  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_28] ecx +
mov ecx [ebp+arg_0] +
call sub_101AA70  +
test eax eax +
jnz loc_101E02D  +
xor eax eax +
jmp loc_101E1A7  +
mov eax [ebp+var_28] +
cmp dword ptr [eax+80h] 0 +
jz loc_101E051  +
push 2  +
mov ecx [ebp+arg_0] +
call sub_101AA50  +
test eax eax +
jz loc_101E051  +
mov eax 1 +
jmp loc_101E1A7  +
mov ecx [ebp+var_28] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_101E12E  +
lea ecx [ebp+var_14] +
call sub_1012550  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+arg_0] +
call sub_101AA90  +
mov [ebp+var_10] eax +
lea ecx [ebp+var_14] +
call sub_10114A0  +
push eax  +
push 0  +
push 17h  +
push offset dword_100231C  +
mov edx [ebp+var_10] +
mov eax [edx] +
mov ecx [ebp+var_10] +
push ecx  +
mov edx [eax+0Ch] +
call edx  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jnz loc_101E113  +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_101E450  +
lea ecx [ebp+var_1C] +
call sub_1024680  +
test eax eax +
jz loc_101E113  +
lea ecx [ebp+var_1C] +
call sub_1024680  +
mov [ebp+var_2C] eax +
push 1Eh  +
mov ecx [ebp+var_2C] +
push ecx  +
mov edx [ebp+var_2C] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jnz loc_101E113  +
mov [ebp+var_24] 1 +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1023C70  +
mov eax [ebp+var_24] +
jmp loc_101E1A7  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1023C70  +
mov edx [ebp+var_28] +
cmp dword ptr [edx+84h] 0 +
jz loc_101E1A5  +
mov eax [ebp+var_28] +
mov ecx [eax+88h] +
mov [ebp+var_20] ecx +
mov edx [ebp+var_20] +
movzx eax word ptr [edx] +
test eax eax +
jz loc_101E1A5  +
mov ecx [ebp+var_20] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_101CB50  +
test eax eax +
jz loc_101E167  +
mov eax 1 +
jmp loc_101E1A7  +
mov edx [ebp+var_20] +
mov [ebp+var_30] edx +
mov eax [ebp+var_30] +
add eax 2 +
mov [ebp+var_34] eax +
mov ecx [ebp+var_30] +
mov dx [ecx] +
mov [ebp+var_36] dx +
add [ebp+var_30] 2 +
cmp [ebp+var_36] 0 +
jnz loc_101E176  +
mov eax [ebp+var_30] +
sub eax [ebp+var_34] +
sar eax 1 +
mov [ebp+var_3C] eax +
mov ecx [ebp+var_3C] +
mov edx [ebp+var_20] +
lea eax [edx+ecx*2+2] +
mov [ebp+var_20] eax +
jmp loc_101E146  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov [ebp+cb] 4 +
lea eax [ebp+cb] +
push eax  +
lea ecx [ebp+var_C] +
push ecx  +
push 0  +
push 18h  +
mov edx ds:off_1002304 +
push edx  +
mov eax ds:off_1002300 +
push eax  +
push 80000001h  +
call ds:RegGetValueW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_101E23D  +
mov ecx [ebp+var_C] +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
neg ecx  +
mov edx [ebp+var_10] +
mov [edx+7Ch] ecx +
mov eax [ebp+var_C] +
and eax 2 +
neg eax  +
sbb eax eax +
neg eax  +
mov ecx [ebp+var_10] +
mov [ecx+80h] eax +
mov edx [ebp+var_C] +
and edx 4 +
neg edx  +
sbb edx edx +
neg edx  +
mov eax [ebp+var_10] +
mov [eax+84h] edx +
jmp loc_101E261  +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+7Ch] 1 +
mov edx [ebp+var_10] +
mov dword ptr [edx+80h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+84h] 0 +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+84h] 0 +
jz loc_101E35A  +
mov [ebp+cb] 0 +
lea edx [ebp+cb] +
push edx  +
push 0  +
push 0  +
push 20h  +
mov eax ds:off_1002308 +
push eax  +
mov ecx ds:off_1002300 +
push ecx  +
push 80000001h  +
call ds:RegGetValueW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_101E34D  +
mov edx [ebp+cb] +
push edx  +
call ds:CoTaskMemAlloc  +
mov ecx [ebp+var_10] +
mov [ecx+88h] eax +
mov edx [ebp+var_10] +
cmp dword ptr [edx+88h] 0 +
jz loc_101E33E  +
lea eax [ebp+cb] +
push eax  +
mov ecx [ebp+var_10] +
mov edx [ecx+88h] +
push edx  +
push 0  +
push 20h  +
mov eax ds:off_1002308 +
push eax  +
mov ecx ds:off_1002300 +
push ecx  +
push 80000001h  +
call ds:RegGetValueW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_101E33C  +
mov edx [ebp+var_10] +
cmp dword ptr [edx+88h] 0 +
jz loc_101E322  +
mov eax [ebp+var_10] +
mov ecx [eax+88h] +
push ecx  +
call ds:CoTaskMemFree  +
mov edx [ebp+var_10] +
mov dword ptr [edx+88h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+88h] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+84h] 0 +
jmp loc_101E34B  +
mov edx [ebp+var_10] +
mov dword ptr [edx+84h] 0 +
jmp loc_101E35A  +
mov eax [ebp+var_10] +
mov dword ptr [eax+84h] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
xor eax eax +
jnz loc_101E37B  +
xor ecx ecx +
jnz loc_101E37B  +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_8] +
add eax 8 +
push eax  +
mov ecx offset unk_103BC3C +
call sub_1008E10  +
mov ecx [ebp+dwInitParam] +
push ecx  +
push offset DialogFunc  +
mov edx [ebp+hWndParent] +
push edx  +
mov eax [ebp+var_8] +
movzx ecx word ptr [eax+21Ch] +
push ecx  +
mov ecx offset unk_103BC00 +
call sub_101A0A0  +
push eax  +
call sub_101A820  +
mov [ebp+var_4] eax +
xor edx edx +
jnz loc_101E3C3  +
xor eax eax +
jnz loc_101E3C3  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 0 +
jz loc_101E403  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [edx] +
push ecx  +
mov eax [edx+8] +
call eax  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 0 +
jnz loc_101E42E  +
mov ecx [ebp+arg_0] +
mov dword ptr [ecx] 0 +
xor eax eax +
jmp loc_101E440  +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
mov edx [eax+8] +
mov [ecx] edx +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_0] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_4] +
call sub_1013AD0  +
movzx eax al +
test eax eax +
jnz loc_101E48A  +
push offset dword_100232C  +
mov ecx [ebp+arg_0] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1012C20  +
jmp loc_101E492  +
mov ecx [ebp+var_4] +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpTimerFunc] +
push eax  +
mov ecx [ebp+uElapse] +
push ecx  +
mov edx [ebp+nIDEvent] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SetTimer  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+uIDEvent] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:KillTimer  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
push 80h  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:SendMessageW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
push 58h  +
mov eax [ebp+arg_0] +
push eax  +
call ds:GetDeviceCaps  +
mov [ebp+var_8] eax +
fild  [ebp+var_8] +
mov ecx [ebp+var_4] +
fstp  dword ptr [ecx+4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov eax offset sub_101B970 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035B0F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_1027E80  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 20h +
call sub_1023950  +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_100233C +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+20h] offset off_10021B8 +
mov edx [ebp+var_10] +
mov dword ptr [edx+24h] 0 +
mov eax dword_103B54C +
push eax  +
mov ecx [ebp+var_10] +
add ecx 28h +
call sub_102FBF0  +
mov byte ptr [ebp+var_4] 1 +
mov ecx dword_103B54C +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 8Ch +
call sub_102FBF0  +
mov byte ptr [ebp+var_4] 2 +
mov edx [ebp+var_10] +
mov dword ptr [edx+0F0h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+0F4h] 0 +
mov ecx [ebp+var_10] +
add ecx 0F8h +
call sub_1031110  +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+1C0h] 0 +
mov edx [ebp+var_10] +
fldz   +
fstp  dword ptr [edx+1C4h] +
mov ecx [ebp+var_10] +
add ecx 1CCh +
call sub_102E8B0  +
mov eax [ebp+var_10] +
mov dword ptr [eax+210h] 1 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+214h] 0 +
mov edx [ebp+var_10] +
mov dword ptr [edx+218h] 0 +
cmp pguid.Data1 0 +
jnz loc_101E69A  +
push offset pguid  +
call ds:CoCreateGuid  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_101E700  +
mov eax [ebp+arg_0] +
and eax 1 +
jz loc_101E6E5  +
mov ecx [ebp+var_4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035B6D  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_100233C +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+20h] offset off_10021B8 +
mov [ebp+var_4] 4 +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_101A800  +
mov ecx [ebp+var_10] +
call sub_101FDE0  +
mov edx [ebp+var_10] +
cmp dword ptr [edx+24h] 0 +
jz loc_101E766  +
mov ecx [ebp+var_10] +
call sub_101F320  +
cmp hIcon 0 +
jz loc_101E77B  +
mov eax hIcon +
push eax  +
call ds:DestroyIcon  +
cmp dword_103B598 0 +
jz loc_101E791  +
mov ecx dword_103B598 +
push ecx  +
call ds:DestroyIcon  +
mov edx [ebp+var_10] +
cmp dword ptr [edx+218h] 0 +
jz loc_101E7BA  +
mov eax [ebp+var_10] +
mov ecx [eax+218h] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_10] +
mov dword ptr [edx+218h] 0 +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_10] +
add ecx 1CCh +
call sub_102E950  +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_10] +
add ecx 0F8h +
call sub_1015920  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
add ecx 8Ch +
call sub_102FE20  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 28h +
call sub_102FE20  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
call sub_1014040  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 1F0h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
add eax 1F0h +
push eax  +
call ds:InterlockedDecrement  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jnz loc_101E8A0  +
mov ecx [ebp+8] +
sub ecx 20h +
mov [ebp-0Ch] ecx +
mov edx [ebp-0Ch] +
mov [ebp-8] edx +
cmp dword ptr [ebp-8] 0 +
jz loc_101E899  +
push 1  +
mov eax [ebp-8] +
mov edx [eax] +
mov ecx [ebp-8] +
mov eax [edx+4] +
call eax  +
mov [ebp-10h] eax +
jmp loc_101E8A0  +
mov dword ptr [ebp-10h] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035B98  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_24] ecx +
mov eax [ebp+var_24] +
cmp dword ptr [eax+1C0h] 0 +
jz loc_101E8F8  +
mov ecx hIcon +
mov [ebp+var_28] ecx +
jmp loc_101E901  +
mov edx dword_103B598 +
mov [ebp+var_28] edx +
mov eax [ebp+var_28] +
mov [ebp+hicon] eax +
mov ecx [ebp+hicon] +
push ecx  +
mov ecx [ebp+var_24] +
add ecx 8Ch +
call sub_102FFB0  +
mov edx [ebp+var_24] +
cmp dword ptr [edx+24h] 0 +
jz loc_101EA00  +
mov eax [ebp+var_24] +
mov ecx [eax+24h] +
call sub_101AAB0  +
test eax eax +
jz loc_101EA00  +
lea ecx [ebp+var_18] +
call sub_101CBA0  +
mov [ebp+var_4] 0 +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_24] +
mov ecx [ecx+24h] +
call sub_101AAB0  +
mov [ebp+var_2C] eax +
mov edx [ebp+var_2C] +
push edx  +
mov eax [ebp+var_24] +
mov ecx [eax+1C0h] +
neg ecx  +
sbb ecx ecx +
and ecx 7 +
add ecx 1F5h +
push ecx  +
lea edx [ebp+var_18] +
push edx  +
call sub_1020250  +
add esp 0Ch +
jmp loc_101E9B6  +
mov ecx [ebp-20h] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_101E99E  +
call _resetstkoflw  +
mov ecx [ebp-20h] +
call sub_1024680  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-4] 0 +
mov eax offset loc_101E9BD +
retn   +
mov [ebp+var_4] 0 +
cmp [ebp+var_1C] 0 +
jl loc_101E9F1  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_24] +
add ecx 8Ch +
call sub_1030190  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_24] +
add ecx 8Ch +
call sub_1030160  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_101AD70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov edx [eax] +
mov ecx [ebp+var_4] +
mov eax [edx+20h] +
call eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+1C0h] +
push edx  +
push 1  +
push 432h  +
mov ecx [ebp+var_4] +
add ecx 0FCh +
call sub_101A540  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov [ebp+var_28] ecx +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_100FBB0  +
mov [ebp+hDC] eax +
mov eax [ebp+hDC] +
push eax  +
mov ecx offset unk_103B5AC +
call sub_101E530  +
mov ecx [ebp+hDC] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_100FBD0  +
push 0  +
push offset dword_103B590  +
call sub_1031040  +
mov [ebp+var_4] 2 +
push 4  +
lea edx [ebp+var_4] +
push edx  +
push 2  +
mov eax [ebp+var_28] +
mov ecx [eax+4] +
push ecx  +
call ds:DwmSetWindowAttribute  +
push 0  +
push 0  +
push 1  +
push 0  +
call ds:CreateEventW  +
mov edx [ebp+var_28] +
mov [edx+218h] eax +
push 65h  +
mov eax hInstance +
push eax  +
call ds:LoadIconW  +
mov [ebp+lParam] eax +
push 1  +
mov ecx [ebp+lParam] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_101E500  +
push 10h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov [ebp+var_C] eax +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov [ebp+var_10] eax +
push offset hIcon  +
mov edx [ebp+var_C] +
push edx  +
mov eax [ebp+var_C] +
push eax  +
push 6Fh  +
mov ecx hInstance +
push ecx  +
call ds:COMCTL32_381  +
push offset dword_103B598  +
mov edx [ebp+var_C] +
push edx  +
mov eax [ebp+var_C] +
push eax  +
push 6Eh  +
mov ecx hInstance +
push ecx  +
call ds:COMCTL32_381  +
push 12Ch  +
lea edx [ebp+var_18] +
push edx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_28] +
add ecx 28h +
call sub_1012DF0  +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
push eax  +
mov ecx [ebp+var_28] +
add ecx 28h +
call sub_102FE90  +
push 131h  +
lea eax [ebp+var_1C] +
push eax  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_28] +
add ecx 8Ch +
call sub_1012DF0  +
mov ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 8Ch +
call sub_102FE90  +
mov edx [ebp+var_10] +
and edx 0FFFFh +
movzx eax dx +
mov ecx [ebp+var_10] +
and ecx 0FFFFh +
movzx edx cx +
shl edx 10h +
or eax edx +
push eax  +
push 0  +
push 41Fh  +
mov ecx [ebp+var_28] +
add ecx 90h +
call sub_101A540  +
push 130h  +
lea eax [ebp+var_20] +
push eax  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_28] +
add ecx 0F8h +
call sub_1012DF0  +
mov ecx [ebp+var_28] +
add ecx 0F8h +
call sub_10316E0  +
push 640000h  +
push 1  +
push 406h  +
push 130h  +
lea ecx [ebp+var_24] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:SendMessageW  +
push 1  +
push 0  +
push 433h  +
mov ecx [ebp+var_28] +
add ecx 0FCh +
call sub_101A540  +
push 0  +
push 0  +
push 434h  +
mov ecx [ebp+var_28] +
add ecx 0FCh +
call sub_101A540  +
mov edx [ebp+var_28] +
mov eax [edx] +
mov ecx [ebp+var_28] +
mov edx [eax+1Ch] +
call edx  +
mov ecx [ebp+var_28] +
call sub_101FFC0  +
mov eax [ebp+var_28] +
mov edx [eax] +
mov ecx [ebp+var_28] +
mov eax [edx+28h] +
call eax  +
push offset TimerFunc  +
push 1F4h  +
push 7B2h  +
push 0  +
call ds:SetTimer  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035BCB  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_1C] ecx +
mov [ebp+var_10] 0 +
cmp dword_103B544 0 +
jnz loc_101ED7E  +
push 48h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_18] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_18] 0 +
jz loc_101ED41  +
mov ecx [ebp+var_18] +
call sub_10238C0  +
mov [ebp+var_20] eax +
jmp loc_101ED48  +
mov [ebp+var_20] 0 +
mov eax [ebp+var_20] +
mov [ebp+var_14] eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_14] +
mov dword_103B544 ecx +
cmp dword_103B544 0 +
jnz loc_101ED70  +
mov [ebp+var_10] 8007000Eh +
jmp loc_101ED7E  +
mov ecx dword_103B544 +
call sub_1023970  +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_14] eax +
mov [ebp+var_68] ecx +
xor eax eax +
mov [ebp+var_30] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_18] eax +
mov [ebp+var_30] 1Ch +
mov ecx ds:dword_1006D9C +
mov [ebp+var_24] ecx +
mov edx ds:dword_1006DA0 +
mov [ebp+var_20] edx +
mov eax ds:dword_1006DA4 +
mov [ebp+var_1C] eax +
mov ecx ds:dword_1006DA8 +
mov [ebp+var_18] ecx +
lea edx [ebp+var_10] +
push edx  +
lea eax [ebp+var_30] +
push eax  +
call ds:Shell_NotifyIconGetRect  +
mov [ebp+var_34] eax +
cmp [ebp+var_34] 0 +
jl loc_101EEED  +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_68] +
add ecx 4 +
call sub_101A600  +
mov [ebp+dy] 0 +
mov [ebp+var_3C] 0 +
lea edx [ebp+var_3C] +
push edx  +
call ds:DwmIsCompositionEnabled  +
test eax eax +
jl loc_101EE94  +
cmp [ebp+var_3C] 0 +
jz loc_101EE94  +
mov eax ds:dword_1006DAC +
mov [ebp+var_24] eax +
mov ecx ds:dword_1006DB0 +
mov [ebp+var_20] ecx +
mov edx ds:dword_1006DB4 +
mov [ebp+var_1C] edx +
mov eax ds:dword_1006DB8 +
mov [ebp+var_18] eax +
lea ecx [ebp+var_64] +
push ecx  +
lea edx [ebp+var_30] +
push edx  +
call ds:Shell_NotifyIconGetRect  +
test eax eax +
jl loc_101EE82  +
mov eax [ebp+var_58] +
sub eax [ebp+var_60] +
add eax [ebp+dy] +
mov [ebp+dy] eax +
mov ecx [ebp+dy] +
push ecx  +
mov edx [ebp+dy] +
push edx  +
lea eax [ebp+Rect] +
push eax  +
call ds:InflateRect  +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
mov [ebp+var_54] ecx +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
mov [ebp+var_50] edx +
lea eax [ebp+Rect] +
push eax  +
lea ecx [ebp+var_10] +
push ecx  +
push 10054h  +
lea edx [ebp+var_54] +
push edx  +
push offset dword_103B014  +
call ds:CalculatePopupWindowPosition  +
test eax eax +
jz loc_101EEED  +
push 1  +
push 0  +
push 0  +
mov eax [ebp+Rect.top] +
add eax [ebp+dy] +
push eax  +
mov ecx [ebp+Rect.left] +
add ecx [ebp+dy] +
push ecx  +
mov edx [ebp+arg_0] +
neg edx  +
sbb edx edx +
push edx  +
mov ecx [ebp+var_68] +
add ecx 4 +
call sub_100E0E0  +
push 1  +
push 0  +
mov ecx [ebp+var_68] +
add ecx 4 +
call sub_1010530  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
cmp dword ptr [eax+24h] 0 +
jnz loc_101EF78  +
cmp dword_103B324 0 +
jz loc_101EF76  +
push 0  +
push offset EnumFunc  +
mov ecx [ebp+var_C] +
mov edx [ecx+4] +
push edx  +
call ds:EnumChildWindows  +
mov dword_103B324 0 +
push 132h  +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6F0  +
jmp loc_101EFBA  +
cmp dword_103B324 0 +
jnz loc_101EFBA  +
push 5  +
push offset EnumFunc  +
mov ecx [ebp+var_C] +
mov edx [ecx+4] +
push edx  +
call ds:EnumChildWindows  +
mov dword_103B324 1 +
push 130h  +
lea eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6F0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push 0FFFFFFF4h  +
mov eax [ebp+hWnd] +
push eax  +
call sub_1009020  +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov [ebp+var_8] ecx +
cmp [ebp+var_4] 132h +
jnz loc_101F00F  +
mov edx [ebp+var_8] +
neg edx  +
sbb edx edx +
and edx 0FFFFFFFBh +
add edx 5 +
push edx  +
mov eax [ebp+hWnd] +
push eax  +
call ds:ShowWindow  +
jmp loc_101F02D  +
cmp [ebp+var_4] 12Eh +
jz loc_101F02D  +
mov ecx [ebp+var_8] +
neg ecx  +
sbb ecx ecx +
and ecx 5 +
push ecx  +
mov edx [ebp+hWnd] +
push edx  +
call ds:ShowWindow  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov edx [eax] +
mov ecx [ebp+var_4] +
mov eax [edx+14h] +
call eax  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
push offset dword_103B590  +
call sub_1031040  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
movzx eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1022740  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 1  +
mov eax [ebp+arg_4] +
push eax  +
call ds:SetBkMode  +
push 12h  +
call ds:GetSysColor  +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
call ds:SetTextColor  +
push 5  +
call ds:GetSysColorBrush  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
call sub_101AA70  +
test eax eax +
jz loc_101F14F  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+24h] 0 +
jnz loc_101F14F  +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+var_8] +
mov edx [eax] +
mov ecx [ebp+var_8] +
mov eax [edx+18h] +
call eax  +
mov ecx [ebp+var_8] +
call sub_101EF20  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_101F1CC  +
mov ecx [ebp+var_C] +
mov edx [ecx+24h] +
cmp edx [ebp+var_4] +
jnz loc_101F1B6  +
mov eax [ebp+var_C] +
mov edx [eax] +
mov ecx [ebp+var_C] +
mov eax [edx+14h] +
call eax  +
push 0  +
mov ecx dword_103B544 +
call sub_1023FF0  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_101F1B6  +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+var_C] +
mov eax [edx] +
mov ecx [ebp+var_C] +
mov edx [eax+18h] +
call edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
push edx  +
mov eax [ecx+8] +
call eax  +
mov ecx [ebp+var_C] +
call sub_101EF20  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_8] +
mov edx [ecx+24h] +
cmp edx [ebp+var_4] +
jnz loc_101F213  +
mov eax [ebp+var_8] +
mov ecx [eax+24h] +
call sub_1020510  +
push eax  +
mov ecx [ebp+var_8] +
add ecx 28h +
call sub_102FFB0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_101F25B  +
mov ecx [ebp+var_8] +
mov edx [ecx+24h] +
cmp edx [ebp+var_4] +
jnz loc_101F25B  +
mov ecx [ebp+var_4] +
call sub_101AAB0  +
push eax  +
mov ecx [ebp+var_8] +
call sub_101F270  +
mov ecx [ebp+var_8] +
call sub_101FFC0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_18] ecx +
push 12Dh  +
mov eax [ebp+var_18] +
mov ecx [eax+4] +
push ecx  +
call ds:GetDlgItem  +
mov [ebp+hWndFrom] eax +
cmp [ebp+hWndFrom] 0 +
jz loc_101F309  +
lea edx [ebp+Points] +
push edx  +
mov eax [ebp+hWndFrom] +
push eax  +
call ds:GetClientRect  +
push 2  +
lea ecx [ebp+Points] +
push ecx  +
mov edx [ebp+var_18] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+hWndFrom] +
push ecx  +
call ds:MapWindowPoints  +
mov edx [ebp+lpString] +
push edx  +
sub esp 10h +
mov eax esp +
mov ecx [ebp+Points.x] +
mov [eax] ecx +
mov edx [ebp+Points.y] +
mov [eax+4] edx +
mov ecx [ebp-8] +
mov [eax+8] ecx +
mov edx [ebp-4] +
mov [eax+0Ch] edx +
push 12Dh  +
mov eax [ebp+var_18] +
mov ecx [eax+4] +
push ecx  +
mov ecx [ebp+var_18] +
add ecx 1CCh +
call sub_102EAF0  +
mov edx [ebp+lpString] +
push edx  +
push 12Dh  +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_101A740  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+0F0h] 0 +
jz loc_101F3A0  +
cmp [ebp+var_4] 0 +
jz loc_101F348  +
mov ecx [ebp+var_4] +
add ecx 20h +
mov [ebp+var_8] ecx +
jmp loc_101F34F  +
mov [ebp+var_8] 0 +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax+0F0h] +
mov edx [ebp+var_4] +
mov eax [edx+0F0h] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+10h] +
call edx  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+0F0h] 0 +
jz loc_101F3A0  +
mov ecx [ebp+var_4] +
mov edx [ecx+0F0h] +
mov eax [ebp+var_4] +
mov ecx [eax+0F0h] +
mov edx [edx] +
push ecx  +
mov eax [edx+8] +
call eax  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+0F0h] 0 +
mov edx [ebp+var_4] +
cmp dword ptr [edx+0F4h] 0 +
jz loc_101F3D3  +
mov eax [ebp+var_4] +
mov ecx [eax+0F4h] +
mov edx [ebp+var_4] +
mov eax [edx+0F4h] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+8] +
call edx  +
mov eax [ebp+var_4] +
mov dword ptr [eax+0F4h] 0 +
mov ecx [ebp+var_4] +
call sub_101FDE0  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+24h] 0 +
jz loc_101F402  +
mov edx [ebp+var_4] +
mov eax [edx+24h] +
mov ecx [ebp+var_4] +
mov edx [ecx+24h] +
mov eax [eax] +
push edx  +
mov ecx [eax+8] +
call ecx  +
mov edx [ebp+var_4] +
mov dword ptr [edx+24h] 0 +
push 42Ah  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101E4D0  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 28h +
call sub_102FFB0  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 0FCh +
call sub_10204B0  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 90h +
call sub_10204B0  +
push 0  +
push 0  +
push 434h  +
mov ecx [ebp+var_4] +
add ecx 0FCh +
call sub_101A540  +
push 0  +
push 1  +
push 432h  +
mov ecx [ebp+var_4] +
add ecx 0FCh +
call sub_101A540  +
mov eax [ebp+var_4] +
mov dword ptr [eax+1C0h] 0 +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov ecx [ebp+var_4] +
mov eax [edx+1Ch] +
call eax  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035378  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_20] ecx +
mov [ebp+var_14] 0 +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_101F4E2  +
mov [ebp+var_14] 1 +
jmp loc_101F6CA  +
mov eax [ebp+var_20] +
mov ecx [ebp+arg_0] +
mov [eax+24h] ecx +
mov edx [ebp+var_20] +
mov eax [edx+24h] +
mov ecx [ebp+var_20] +
mov edx [ecx+24h] +
mov eax [eax] +
push edx  +
mov ecx [eax+4] +
call ecx  +
mov edx [ebp+var_20] +
mov ecx [edx+24h] +
call sub_101AA90  +
push eax  +
lea ecx [ebp+var_10] +
call sub_10122A0  +
mov eax [ebp+var_20] +
mov ecx [eax+24h] +
call sub_1020510  +
push eax  +
mov ecx [ebp+var_20] +
add ecx 28h +
call sub_102FFB0  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_24] eax +
mov ecx [ebp+var_20] +
add ecx 0F0h +
push ecx  +
push 0  +
push 17h  +
push offset dword_1002380  +
mov edx [ebp+var_24] +
push edx  +
mov eax [ebp+var_24] +
mov ecx [eax] +
mov edx [ecx+0Ch] +
call edx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_101F564  +
jmp loc_101F6CA  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_28] eax +
mov eax [ebp+var_20] +
add eax 0F4h +
push eax  +
push 0  +
push 17h  +
push offset dword_1002370  +
mov ecx [ebp+var_28] +
push ecx  +
mov edx [ebp+var_28] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_101F59D  +
jmp loc_101F6CA  +
mov edx [ebp+var_20] +
add edx 1C4h +
push edx  +
mov eax [ebp+var_20] +
mov ecx [eax+0F0h] +
mov edx [ebp+var_20] +
mov eax [edx+0F0h] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+24h] +
call edx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_101F5CF  +
jmp loc_101F6CA  +
mov eax [ebp+var_20] +
add eax 1C0h +
push eax  +
mov ecx [ebp+var_20] +
mov edx [ecx+0F0h] +
mov eax [ebp+var_20] +
mov ecx [eax+0F0h] +
mov edx [edx] +
push ecx  +
mov eax [edx+3Ch] +
call eax  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_101F600  +
jmp loc_101F6CA  +
cmp [ebp+var_20] 0 +
jz loc_101F611  +
mov ecx [ebp+var_20] +
add ecx 20h +
mov [ebp+var_2C] ecx +
jmp loc_101F618  +
mov [ebp+var_2C] 0 +
mov edx [ebp+var_2C] +
push edx  +
mov eax [ebp+var_20] +
mov ecx [eax+0F0h] +
mov edx [ebp+var_20] +
mov eax [edx+0F0h] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+0Ch] +
call edx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_101F644  +
jmp loc_101F6CA  +
push 1  +
mov ecx [ebp+var_20] +
add ecx 0FCh +
call sub_10204B0  +
push 1  +
mov ecx [ebp+var_20] +
add ecx 90h +
call sub_10204B0  +
mov eax [ebp+var_20] +
fld  dword ptr [eax+1C4h] +
fmul  ds:dbl_1002168 +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov ecx 64h +
sub ecx eax +
mov [ebp+lParam] ecx +
mov edx [ebp+lParam] +
push edx  +
push 1  +
push 405h  +
mov ecx [ebp+var_20] +
add ecx 0FCh +
call sub_101A540  +
mov eax [ebp+var_20] +
mov edx [eax] +
mov ecx [ebp+var_20] +
mov eax [edx+1Ch] +
call eax  +
mov ecx [ebp+var_20] +
call sub_101FFC0  +
push 0  +
push 32h  +
push 42Ah  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_101E4A0  +
cmp [ebp+var_14] 0 +
jge loc_101F6DD  +
mov ecx [ebp+var_20] +
mov edx [ecx] +
mov ecx [ebp+var_20] +
mov eax [edx+14h] +
call eax  +
mov ecx [ebp+var_14] +
mov [ebp+var_1C] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_1035BFE  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_20] ecx +
mov eax dword_103B5B8 +
and eax 1 +
jnz loc_101F772  +
mov ecx dword_103B5B8 +
or ecx 1 +
mov dword_103B5B8 ecx +
mov [ebp+var_4] 0 +
call sub_102ED00  +
neg eax  +
sbb eax eax +
add eax 1 +
mov dword_103B5B4 eax +
mov [ebp+var_4] 0FFFFFFFFh +
cmp dword_103B5B4 0 +
jz loc_101F82E  +
mov edx [ebp+var_20] +
cmp dword ptr [edx+0F4h] 0 +
jz loc_101F82E  +
mov [ebp+var_14] 0 +
mov [ebp+var_10] 0 +
lea eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_20] +
mov edx [ecx+0F4h] +
mov eax [ebp+var_20] +
mov ecx [eax+0F4h] +
mov edx [edx] +
push ecx  +
mov eax [edx+0Ch] +
call eax  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jl loc_101F7FB  +
fld  [ebp+var_18] +
fmul  ds:dbl_1002168 +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_14] eax +
mov ecx [ebp+var_20] +
fld  dword ptr [ecx+1C4h] +
fmul  [ebp+var_18] +
fmul  ds:dbl_1002168 +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_10] eax +
mov edx [ebp+var_14] +
and edx 0FFFFh +
movzx eax dx +
mov ecx [ebp+var_10] +
and ecx 0FFFFh +
movzx edx cx +
shl edx 10h +
or eax edx +
push eax  +
push 1  +
push 434h  +
mov ecx [ebp+var_20] +
add ecx 0FCh +
call sub_101A570  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035C28  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_10] eax +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 0 +
mov edx [ebp+var_10] +
cmp dword ptr [edx+4] 12Ch +
jnz loc_101F90F  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_18] +
mov edx [eax] +
cmp edx [ecx+2Ch] +
jnz loc_101F90F  +
mov eax [ebp+var_18] +
cmp dword ptr [eax+24h] 0 +
jz loc_101F906  +
mov ecx [ebp+var_18] +
mov ecx [ecx+24h] +
call sub_101AAD0  +
test eax eax +
jz loc_101F906  +
mov edx [ebp+var_18] +
mov ecx [edx+24h] +
call sub_101AAD0  +
push eax  +
call sub_102ED40  +
push eax  +
lea ecx [ebp+var_14] +
call sub_10201A0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_1024680  +
push eax  +
mov eax [ebp+var_10] +
mov ecx [eax+10h] +
push ecx  +
mov edx [ebp+var_10] +
mov eax [edx+0Ch] +
push eax  +
call sub_101A9A0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_101F930  +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_101F950  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_10201D0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035C58  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_24] ecx +
lea ecx [ebp+var_14] +
call sub_101CBA0  +
mov [ebp+var_4] 0 +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_24] +
mov ecx [eax+24h] +
call sub_101CB80  +
mov [ebp+var_28] eax +
mov ecx [ebp+var_28] +
push ecx  +
push offset aMmsys_cplSGene  +
lea edx [ebp+var_14] +
push edx  +
call sub_101C800  +
add esp 0Ch +
jmp loc_101FA0C  +
mov ecx [ebp-1Ch] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_101F9F4  +
call _resetstkoflw  +
mov ecx [ebp-1Ch] +
call sub_1024680  +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 0 +
mov eax offset loc_101FA13 +
retn   +
mov [ebp+var_4] 0 +
cmp [ebp+var_18] 0 +
jl loc_101FA35  +
push 1  +
push 0  +
lea ecx [ebp+var_14] +
call sub_1024680  +
push eax  +
push offset File  +
push 0  +
push 0  +
call ds:ShellExecuteW  +
mov [ebp+var_20] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_101AD70  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
cmp dword ptr [eax+0F0h] 0 +
jz loc_101FADE  +
mov ecx [ebp+var_C] +
xor edx edx +
cmp dword ptr [ecx+1C0h] 0 +
setz dl  +
mov [ebp+var_4] edx +
push offset pguid  +
mov eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_C] +
mov edx [ecx+0F0h] +
mov eax [ebp+var_C] +
mov ecx [eax+0F0h] +
mov edx [edx] +
push ecx  +
mov eax [edx+38h] +
call eax  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jl loc_101FADE  +
mov ecx [ebp+var_C] +
mov edx [ebp+var_4] +
mov [ecx+1C0h] edx +
mov eax [ebp+var_C] +
mov edx [eax] +
mov ecx [ebp+var_C] +
mov eax [edx+1Ch] +
call eax  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax+1C0h] 0 +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov ecx [ebp+var_4] +
mov eax [edx+20h] +
call eax  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+0F0h] 0 +
jz loc_101FB48  +
push offset pguid  +
mov edx [ebp+var_4] +
mov eax [edx+1C0h] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+0F0h] +
mov eax [ebp+var_4] +
mov ecx [eax+0F0h] +
mov edx [edx] +
push ecx  +
mov eax [edx+38h] +
call eax  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
push 0  +
push 0  +
push 400h  +
mov ecx [ebp+var_8] +
add ecx 0FCh +
call sub_101A540  +
mov [ebp+var_4] eax +
mov eax 64h +
sub eax [ebp+var_4] +
mov [ebp+var_C] eax +
fild  [ebp+var_C] +
fdiv  ds:dbl_1002168 +
mov ecx [ebp+var_8] +
fstp  dword ptr [ecx+1C4h] +
mov edx [ebp+var_8] +
mov eax [edx] +
mov ecx [ebp+var_8] +
mov edx [eax+24h] +
call edx  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+0F0h] 0 +
jz loc_101FBE7  +
push offset pguid  +
mov ecx [ebp+var_8] +
push ecx  +
fld  dword ptr [ecx+1C4h] +
fstp  [esp+14h+var_14] +
mov edx [ebp+var_8] +
mov eax [edx+0F0h] +
mov ecx [ebp+var_8] +
mov edx [ecx+0F0h] +
mov eax [eax] +
push edx  +
mov ecx [eax+1Ch] +
call ecx  +
mov edx [ebp+arg_4] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 8 +
jnz loc_101FC00  +
mov ecx [ebp+var_8] +
call sub_101FD70  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset pguid  +
mov eax [ebp+0Ch] +
push eax  +
call sub_101FC70  +
test eax eax +
jz loc_101FC60  +
mov ecx [ebp+0Ch] +
mov edx [ecx+10h] +
push edx  +
mov eax [ebp+0Ch] +
fld  dword ptr [eax+14h] +
fmul  ds:dbl_1002160 +
call _ftol2_sse  +
push eax  +
push 417h  +
mov ecx [ebp+8] +
sub ecx 1Ch +
call sub_101A570  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1016E90  +
neg eax  +
sbb eax eax +
add eax 1 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_4] +
mov dword ptr [ebp+var_18] eax +
mov dword ptr [ebp+var_18+4] 0 +
fild  [ebp+var_18] +
fdiv  ds:dbl_1002160 +
fstp  [ebp+var_8] +
mov ecx [ebp+arg_8] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_10] +
fld  dword ptr [edx+1C4h] +
fld  [ebp+var_8] +
fucompp   +
fnstsw  ax +
test ah 44h +
jnp loc_101FD33  +
mov eax [ebp+var_10] +
fld  [ebp+var_8] +
fstp  dword ptr [eax+1C4h] +
fld  [ebp+var_8] +
fmul  ds:dbl_1002168 +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+lParam] eax +
mov ecx 64h +
sub ecx [ebp+lParam] +
mov [ebp+lParam] ecx +
mov edx [ebp+lParam] +
push edx  +
push 1  +
push 405h  +
mov ecx [ebp+var_10] +
add ecx 0FCh +
call sub_101A540  +
mov eax [ebp+var_10] +
mov edx [eax] +
mov ecx [ebp+var_10] +
mov eax [edx+24h] +
call eax  +
mov ecx [ebp+var_10] +
mov edx [ecx+1C0h] +
cmp edx [ebp+var_4] +
jz loc_101FD5A  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_4] +
mov [eax+1C0h] ecx +
mov edx [ebp+var_10] +
mov eax [edx] +
mov ecx [ebp+var_10] +
mov edx [eax+1Ch] +
call edx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpParameter] ecx +
mov eax [ebp+lpParameter] +
cmp dword ptr [eax+214h] 0 +
jz loc_101FD8D  +
mov ecx [ebp+lpParameter] +
call sub_101FDE0  +
mov ecx [ebp+lpParameter] +
cmp dword ptr [ecx+214h] 0 +
jnz loc_101FDCB  +
push 0  +
push 0  +
mov edx [ebp+lpParameter] +
push edx  +
push offset StartAddress  +
push 0  +
push 0  +
call ds:CreateThread  +
mov ecx [ebp+lpParameter] +
mov [ecx+214h] eax +
push 2  +
mov edx [ebp+lpParameter] +
mov eax [edx+214h] +
push eax  +
call ds:SetThreadPriority  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+218h] 0 +
jz loc_101FE33  +
mov ecx [ebp+var_4] +
mov edx [ecx+218h] +
push edx  +
call ds:SetEvent  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+214h] 0 +
jz loc_101FE23  +
push 0FFFFFFFFh  +
mov ecx [ebp+var_4] +
mov edx [ecx+214h] +
push edx  +
call ds:WaitForSingleObject  +
mov eax [ebp+var_4] +
mov ecx [eax+218h] +
push ecx  +
call ds:ResetEvent  +
mov edx [ebp+var_4] +
cmp dword ptr [edx+214h] 0 +
jz loc_101FE5C  +
mov eax [ebp+var_4] +
mov ecx [eax+214h] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_4] +
mov dword ptr [edx+214h] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
push 0  +
call ds:CoInitialize  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jge loc_101FE93  +
jmp loc_101FEA1  +
jmp loc_101FEA1  +
mov ecx [ebp+var_4] +
call sub_101FEB0  +
call ds:CoUninitialize  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_21C] ecx +
mov [ebp+var_218] 208h +
lea eax [ebp+var_218] +
push eax  +
lea ecx [ebp+pszFileName] +
push ecx  +
push 0  +
push 0FFFFh  +
push offset WindowName  +
push offset aAppeventsSchem  +
push 80000001h  +
call ds:RegGetValueW  +
mov [ebp+var_214] eax +
cmp [ebp+var_214] 0 +
jnz loc_101FF46  +
mov edx [ebp+var_21C] +
cmp dword ptr [edx+24h] 0 +
jz loc_101FF46  +
mov eax [ebp+var_21C] +
mov ecx [eax+218h] +
push ecx  +
push 1  +
push 0  +
lea edx [ebp+pszFileName] +
push edx  +
mov eax [ebp+var_21C] +
mov ecx [eax+24h] +
call sub_101AA90  +
push eax  +
call sub_1034530  +
push 0  +
push 0  +
push 409h  +
mov ecx [ebp+var_21C] +
add ecx 4 +
call sub_101A570  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+214h] 0 +
jz loc_101FFA2  +
mov ecx [ebp+var_4] +
mov edx [ecx+214h] +
push edx  +
call ds:CloseHandle  +
mov eax [ebp+var_4] +
mov dword ptr [eax+214h] 0 +
mov ecx [ebp+var_4] +
mov edx [ecx+218h] +
push edx  +
call ds:ResetEvent  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035C90  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_28] ecx +
lea ecx [ebp+var_14] +
call sub_101CBA0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_18] +
call sub_101CBA0  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_28] +
cmp dword ptr [eax+24h] 0 +
jz loc_1020139  +
mov ecx [ebp+var_28] +
mov ecx [ecx+24h] +
call sub_101AAB0  +
test eax eax +
jz loc_1020139  +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_4] 2 +
mov edx [ebp+var_28] +
mov ecx [edx+24h] +
call sub_101AAB0  +
mov [ebp+var_2C] eax +
mov eax [ebp+var_2C] +
push eax  +
push 1F6h  +
lea ecx [ebp+var_14] +
push ecx  +
call sub_1020250  +
add esp 0Ch +
jmp loc_1020088  +
mov ecx [ebp-20h] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_1020070  +
call _resetstkoflw  +
mov ecx [ebp-20h] +
call sub_1024680  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_102008F +
retn   +
mov [ebp+var_4] 1 +
cmp [ebp+var_1C] 0 +
jl loc_10200AE  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
push 12Eh  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_101A740  +
mov byte ptr [ebp+var_4] 4 +
mov edx [ebp+var_28] +
mov ecx [edx+24h] +
call sub_101AAB0  +
mov [ebp+var_30] eax +
mov eax [ebp+var_30] +
push eax  +
mov ecx [ebp+var_28] +
mov edx [ecx+1C0h] +
neg edx  +
sbb edx edx +
and edx 7 +
add edx 1F5h +
push edx  +
lea eax [ebp+var_18] +
push eax  +
call sub_1020250  +
add esp 0Ch +
jmp loc_1020115  +
mov ecx [ebp-24h] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_10200FD  +
call _resetstkoflw  +
mov ecx [ebp-24h] +
call sub_1024680  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_102011C +
retn   +
mov [ebp+var_4] 1 +
cmp [ebp+var_1C] 0 +
jl loc_1020139  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_28] +
add ecx 8Ch +
call sub_1030160  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_18] +
call sub_101AD70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_101AD70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call waveOutGetNumDevs  +
push 7B2h  +
push 0  +
call ds:KillTimer  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_10201F0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1020220  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1007F90  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call sub_1020490  +
mov edx [ebp+var_4] +
mov dword ptr [edx] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035CB8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_0] +
call sub_1019890  +
push eax  +
lea ecx [ebp+var_10] +
call sub_1020300  +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
push eax  +
lea ecx [ebp+var_10] +
call sub_101AFA0  +
lea ecx [ebp+var_10] +
call sub_101ACA0  +
test eax eax +
jnz loc_10202B1  +
push 80070057h  +
call sub_1007F50  +
lea ecx [ebp+arg_8] +
mov [ebp+Arguments] ecx +
lea edx [ebp+Arguments] +
push edx  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_1020330  +
mov [ebp+Arguments] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_101AD70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_101AD90  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035CE8  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov eax [ebp+Arguments] +
push eax  +
push 0  +
lea ecx [ebp+var_10] +
call sub_1020420  +
push eax  +
push 0  +
push 0  +
mov ecx [ebp+lpSource] +
push ecx  +
push 500h  +
call sub_10204E0  +
add esp 1Ch +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jnz loc_102039B  +
call sub_101B6A0  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_18] +
call sub_101AF20  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_10203E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1020400  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1020440  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
jnz loc_1020429  +
xor ecx ecx +
jnz loc_1020429  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call sub_1020470  +
mov edx [ebp+var_4] +
mov dword ptr [edx] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+hMem] +
push eax  +
call ds:LocalFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+pv] +
push eax  +
call ds:CoTaskMemFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+bEnable] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:EnableWindow  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+Arguments] +
push eax  +
mov ecx [ebp+nSize] +
push ecx  +
mov edx [ebp+lpBuffer] +
push edx  +
mov eax [ebp+dwLanguageId] +
push eax  +
mov ecx [ebp+dwMessageId] +
push ecx  +
mov edx [ebp+lpSource] +
push edx  +
mov eax [ebp+dwFlags] +
push eax  +
call ds:FormatMessageW  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+28h] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
fld  ds:flt_100243C +
fstp  dword ptr [ecx+4] +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035D18  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_1027E80  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_100244C +
mov ecx [ebp+var_10] +
add ecx 20h +
call sub_1022640  +
mov ecx [ebp+var_10] +
add ecx 2Ch +
call sub_1022640  +
mov ecx [ebp+var_10] +
add ecx 3Ch +
call sub_10227F0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_1020603  +
jmp loc_1020A42  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_102063D  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_10220D0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102063D  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_10206AB  +
mov eax [ebp+10h] +
and eax 0FFFFh +
movzx ecx ax +
cmp ecx 1 +
jnz loc_10206AB  +
mov edx [ebp+10h] +
shr edx 10h +
and edx 0FFFFh +
movzx eax dx +
test eax eax +
jnz loc_10206AB  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
push ecx  +
mov ecx [ebp-8] +
call sub_10223A0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10206AB  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_1020719  +
mov eax [ebp+10h] +
and eax 0FFFFh +
movzx ecx ax +
cmp ecx 2 +
jnz loc_1020719  +
mov edx [ebp+10h] +
shr edx 10h +
and edx 0FFFFh +
movzx eax dx +
test eax eax +
jnz loc_1020719  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
push ecx  +
mov ecx [ebp-8] +
call sub_10223E0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1020719  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_102078A  +
mov eax [ebp+10h] +
and eax 0FFFFh +
movzx ecx ax +
cmp ecx 1ADh +
jnz loc_102078A  +
mov edx [ebp+10h] +
shr edx 10h +
and edx 0FFFFh +
movzx eax dx +
test eax eax +
jnz loc_102078A  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
push ecx  +
mov ecx [ebp-8] +
call sub_10224D0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102078A  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 40Ch +
jnz loc_10207C7  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_1021AD0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10207C7  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 40Bh +
jnz loc_1020804  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1021C20  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1020804  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 136h +
jnz loc_1020841  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1028C30  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1020841  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 138h +
jnz loc_102087E  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1021F30  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102087E  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_10208DC  +
mov edx [ebp+10h] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 1A9h +
jnz loc_10208DC  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
and eax 0FFFFh +
push eax  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
push ecx  +
mov ecx [ebp-8] +
call sub_1021940  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10208DC  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_102093B  +
mov eax [ebp+10h] +
and eax 0FFFFh +
movzx ecx ax +
cmp ecx 1AAh +
jnz loc_102093B  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
and ecx 0FFFFh +
push ecx  +
mov edx [ebp+10h] +
shr edx 10h +
and edx 0FFFFh +
push edx  +
mov ecx [ebp-8] +
call sub_10219D0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102093B  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_1020986  +
mov edx [ebp+14h] +
cmp dword ptr [edx+4] 1ACh +
jnz loc_1020986  +
mov eax [ebp+14h] +
cmp dword ptr [eax+8] 0FFFFFFF4h +
jnz loc_1020986  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp-8] +
call sub_1021F80  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1020986  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_10209CE  +
mov edx [ebp+14h] +
cmp dword ptr [edx+4] 1ACh +
jnz loc_10209CE  +
mov eax [ebp+14h] +
cmp dword ptr [eax+8] 0FFFFFF9Bh +
jnz loc_10209CE  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp-8] +
call sub_1021A20  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10209CE  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 138h +
jnz loc_1020A08  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1021F30  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1020A08  +
mov eax 1 +
jmp loc_1020A44  +
cmp dword ptr [ebp+0Ch] 110h +
jnz loc_1020A42  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1020AC0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1020A42  +
mov eax 1 +
jmp loc_1020A44  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1020A90  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1020A75  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_100244C +
mov ecx [ebp+var_4] +
add ecx 3Ch +
call sub_10229B0  +
mov ecx [ebp+var_4] +
call sub_1014040  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov ecx [eax+4] +
push ecx  +
mov ecx dword_103B510 +
call sub_1015EB0  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_100FBB0  +
mov [ebp+hDC] eax +
mov edx [ebp+hDC] +
push edx  +
mov ecx offset unk_103B5AC +
call sub_101E530  +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_100FBD0  +
push 65h  +
mov ecx hInstance +
push ecx  +
call ds:LoadIconW  +
mov [ebp+lParam] eax +
push 1  +
mov edx [ebp+lParam] +
push edx  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101E500  +
mov [ebp+var_4] 2 +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 2  +
mov ecx [ebp+var_14] +
mov edx [ecx+4] +
push edx  +
call ds:DwmSetWindowAttribute  +
mov eax [ebp+var_14] +
mov ecx [eax+4] +
push ecx  +
call ds:SetForegroundWindow  +
push 0  +
mov ecx [ebp+var_14] +
call sub_1021D20  +
mov ecx [ebp+var_14] +
call sub_101DA40  +
mov ecx [ebp+var_14] +
call sub_1020BB0  +
push 1ACh  +
lea edx [ebp+var_10] +
push edx  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_10111E0  +
mov ecx [ebp+var_14] +
mov edx [eax] +
mov [ecx+38h] edx +
mov ecx [ebp+var_14] +
call sub_1020DA0  +
mov ecx [ebp+var_14] +
call sub_10212C0  +
mov ecx [ebp+var_14] +
call sub_1021E20  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov [ebp+var_28] ecx +
lea eax [ebp+X] +
push eax  +
push 1AEh  +
lea ecx [ebp+var_1C] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100D6B0  +
push 2  +
lea edx [ebp+X] +
push edx  +
mov eax [ebp+var_28] +
mov ecx [eax+4] +
push ecx  +
push 1AEh  +
lea edx [ebp+var_20] +
push edx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10111E0  +
mov eax [eax] +
push eax  +
call ds:MapWindowPoints  +
push 5  +
push 1AEh  +
mov ecx [ebp+var_28] +
call sub_1022290  +
mov [ebp+var_18] eax +
mov ecx [ebp-4] +
sub ecx [ebp-0Ch] +
mov edx [ebp+var_18] +
sub edx ecx +
mov [ebp+var_14] edx +
push 21Ch  +
push 2  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
add eax [ebp+var_18] +
push eax  +
mov eax [ebp-8] +
sub eax [ebp+X] +
push eax  +
mov ecx [ebp-0Ch] +
push ecx  +
mov edx [ebp+X] +
push edx  +
push 0  +
push 1AEh  +
lea eax [ebp+var_24] +
push eax  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100E0E0  +
push 0  +
push 0  +
mov ecx [ebp+var_14] +
push ecx  +
push 0  +
push 1AFh  +
mov ecx [ebp+var_28] +
call sub_1020CF0  +
push 0  +
push 0  +
mov edx [ebp+var_14] +
push edx  +
push 0  +
push 1A9h  +
mov ecx [ebp+var_28] +
call sub_1020CF0  +
push 0  +
push 0  +
mov eax [ebp+var_14] +
push eax  +
push 0  +
push 1AAh  +
mov ecx [ebp+var_28] +
call sub_1020CF0  +
push 0  +
push 0  +
mov ecx [ebp+var_14] +
push ecx  +
push 0  +
push 1B0h  +
mov ecx [ebp+var_28] +
call sub_1020CF0  +
mov edx [ebp+var_14] +
neg edx  +
push edx  +
push 0  +
mov eax [ebp+var_14] +
push eax  +
push 0  +
push 1ACh  +
mov ecx [ebp+var_28] +
call sub_1020CF0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov [ebp+var_20] ecx +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+nIDDlgItem] +
push ecx  +
lea edx [ebp+var_14] +
push edx  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100D6B0  +
push 2  +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_20] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+nIDDlgItem] +
push eax  +
lea ecx [ebp+var_18] +
push ecx  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:MapWindowPoints  +
push 21Ch  +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
add edx [ebp+arg_10] +
push edx  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
add eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+Rect.top] +
add ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+Rect.left] +
add edx [ebp+arg_4] +
push edx  +
push 0  +
mov eax [ebp+nIDDlgItem] +
push eax  +
lea ecx [ebp+var_1C] +
push ecx  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100E0E0  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov [ebp+var_4C] ecx +
mov [ebp+var_4] 0 +
push 0  +
push offset aExplorer  +
push 1ACh  +
lea eax [ebp+var_48] +
push eax  +
mov ecx [ebp+var_4C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:SetWindowTheme  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1020DEE  +
jmp loc_1020F09  +
jmp loc_1020F09  +
push 10024h  +
push 0  +
push 1036h  +
mov ecx [ebp+var_4C] +
mov edx [ecx+38h] +
push edx  +
call ds:SendMessageW  +
push 0  +
mov ecx dword_103B544 +
call sub_101AAF0  +
push eax  +
push 102Fh  +
mov eax [ebp+var_4C] +
mov ecx [eax+38h] +
push ecx  +
call ds:SendMessageW  +
lea edx [ebp+Rect] +
push edx  +
mov eax [ebp+var_4C] +
mov ecx [eax+38h] +
push ecx  +
call ds:GetClientRect  +
mov ecx [ebp+var_4C] +
call sub_1020F20  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_1020E53  +
jmp loc_1020F09  +
jmp loc_1020F09  +
xor edx edx +
mov [ebp+lParam] edx +
mov [ebp+var_40] edx +
mov [ebp+var_3C] edx +
mov [ebp+var_38] edx +
mov [ebp+var_34] edx +
mov [ebp+var_30] edx +
mov [ebp+rc.left] edx +
mov [ebp+rc.top] edx +
mov [ebp+rc.right] edx +
mov [ebp+rc.bottom] edx +
mov [ebp+lParam] 28h +
mov [ebp+var_40] 7 +
mov [ebp+var_3C] 1 +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
mov [ebp+var_38] eax +
push 5  +
push 0  +
push 5  +
push 22h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
push eax  +
lea ecx [ebp+rc] +
push ecx  +
call ds:SetRect  +
mov [ebp+var_30] 1 +
lea edx [ebp+lParam] +
push edx  +
push 0  +
push 10A2h  +
mov eax [ebp+var_4C] +
mov ecx [eax+38h] +
push ecx  +
call ds:SendMessageW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0FFFFFFFFh +
jnz loc_1020EDA  +
jmp loc_1020F09  +
jmp loc_1020F09  +
push 0  +
push 4  +
push 108Eh  +
mov edx [ebp+var_4C] +
mov eax [edx+38h] +
push eax  +
call ds:SendMessageW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0FFFFFFFFh +
jnz loc_1020EFD  +
jmp loc_1020F09  +
jmp loc_1020F09  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_4] +
jmp loc_1020F12  +
mov [ebp+var_4] 0 +
jmp loc_1020F04  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov [ebp+var_30] ecx +
push 2Ch  +
push 0  +
lea eax [ebp+lParam] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+lParam] 1 +
mov [ebp+var_28] 0 +
mov [ebp+var_20] offset aName +
mov ecx [ebp+var_20] +
mov [ebp+var_34] ecx +
mov edx [ebp+var_34] +
add edx 2 +
mov [ebp+var_38] edx +
mov eax [ebp+var_34] +
mov cx [eax] +
mov [ebp+var_3A] cx +
add [ebp+var_34] 2 +
cmp [ebp+var_3A] 0 +
jnz loc_1020F5F  +
mov edx [ebp+var_34] +
sub edx [ebp+var_38] +
sar edx 1 +
mov [ebp+var_40] edx +
mov eax [ebp+var_40] +
mov [ebp+var_1C] eax +
lea ecx [ebp+lParam] +
push ecx  +
push 0  +
push 1061h  +
mov edx [ebp+var_30] +
mov eax [edx+38h] +
push eax  +
call ds:SendMessageW  +
mov [ebp+var_20] offset aAdapter +
mov ecx [ebp+var_20] +
mov [ebp+var_44] ecx +
mov edx [ebp+var_44] +
add edx 2 +
mov [ebp+var_48] edx +
mov eax [ebp+var_44] +
mov cx [eax] +
mov [ebp+var_4A] cx +
add [ebp+var_44] 2 +
cmp [ebp+var_4A] 0 +
jnz loc_1020FB3  +
mov edx [ebp+var_44] +
sub edx [ebp+var_48] +
sar edx 1 +
mov [ebp+var_50] edx +
mov eax [ebp+var_50] +
mov [ebp+var_1C] eax +
lea ecx [ebp+lParam] +
push ecx  +
push 1  +
push 1061h  +
mov edx [ebp+var_30] +
mov eax [edx+38h] +
push eax  +
call ds:SendMessageW  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B8h +
mov [ebp+var_98] ecx +
mov [ebp+var_1C] 1 +
mov [ebp+var_18] 2 +
mov [ebp+var_14] 3 +
mov [ebp+var_10] 4 +
mov [ebp+var_C] 5 +
mov [ebp+var_8] 6 +
mov [ebp+var_4] 7 +
mov [ebp+lParam] 0 +
push 38h  +
push 0  +
lea eax [ebp+var_54] +
push eax  +
call memset  +
add esp 0Ch +
mov ecx [ebp+arg_0] +
mov [ebp+var_38] ecx +
mov edx [ebp+arg_4] +
mov [ebp+var_54] edx +
mov [ebp+lParam] 20Dh +
mov [ebp+var_4C] 0 +
mov [ebp+var_50] 0 +
mov [ebp+var_2C] 1 +
lea eax [ebp+var_1C] +
mov [ebp+var_28] eax +
mov ecx [ebp+arg_0] +
call sub_101AAB0  +
mov [ebp+var_44] eax +
mov ecx [ebp+var_44] +
mov [ebp+var_9C] ecx +
mov edx [ebp+var_9C] +
add edx 2 +
mov [ebp+var_A0] edx +
mov eax [ebp+var_9C] +
mov cx [eax] +
mov [ebp+var_A2] cx +
add [ebp+var_9C] 2 +
cmp [ebp+var_A2] 0 +
jnz loc_10210AA  +
mov edx [ebp+var_9C] +
sub edx [ebp+var_A0] +
sar edx 1 +
mov [ebp+var_A8] edx +
mov eax [ebp+var_A8] +
mov [ebp+var_40] eax +
lea ecx [ebp+lParam] +
push ecx  +
push 0  +
push 104Dh  +
mov edx [ebp+var_98] +
mov eax [edx+38h] +
push eax  +
call ds:SendMessageW  +
mov [ebp+var_54] eax +
cmp [ebp+var_54] 0FFFFFFFFh +
jnz loc_1021116  +
jmp loc_1021215  +
jmp loc_1021215  +
mov ecx [ebp+var_54] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_1022F30  +
mov [ebp+lParam] 1 +
mov [ebp+var_50] 1 +
mov ecx [ebp+arg_0] +
call sub_1022ED0  +
mov [ebp+var_44] eax +
mov edx [ebp+var_44] +
mov [ebp+var_AC] edx +
mov eax [ebp+var_AC] +
add eax 2 +
mov [ebp+var_B0] eax +
mov ecx [ebp+var_AC] +
mov dx [ecx] +
mov [ebp+var_B2] dx +
add [ebp+var_AC] 2 +
cmp [ebp+var_B2] 0 +
jnz loc_1021153  +
mov eax [ebp+var_AC] +
sub eax [ebp+var_B0] +
sar eax 1 +
mov [ebp+var_B8] eax +
mov ecx [ebp+var_B8] +
mov [ebp+var_40] ecx +
lea edx [ebp+lParam] +
push edx  +
push 0  +
push 104Ch  +
mov eax [ebp+var_98] +
mov ecx [eax+38h] +
push ecx  +
call ds:SendMessageW  +
mov [ebp+var_84] 0F000h +
mov ecx [ebp+arg_0] +
call sub_1022F50  +
mov ecx eax +
call sub_1024680  +
neg eax  +
sbb eax eax +
neg eax  +
add eax 1 +
shl eax 0Ch +
mov [ebp+var_88] eax +
lea edx [ebp+var_94] +
push edx  +
mov ecx [ebp+arg_0] +
call sub_1022F10  +
push eax  +
push 102Bh  +
mov eax [ebp+var_98] +
mov ecx [eax+38h] +
push ecx  +
call ds:SendMessageW  +
mov ecx [ebp+var_98] +
call sub_1021220  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [eax+4] +
call edx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov [ebp+var_3C] ecx +
mov [ebp+lParam] 0 +
xor eax eax +
mov [ebp+var_34] eax +
mov [ebp+var_30] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
lea ecx [ebp+Rect] +
push ecx  +
mov edx [ebp+var_3C] +
mov eax [edx+38h] +
push eax  +
call ds:GetClientRect  +
xor ecx ecx +
mov [ebp+lParam] ecx +
mov [ebp+var_34] ecx +
mov [ebp+var_30] ecx +
mov [ebp+var_2C] ecx +
mov [ebp+var_28] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] ecx +
mov [ebp+var_14] ecx +
mov [ebp+lParam] 28h +
mov [ebp+var_34] 1 +
mov [ebp+var_30] 1 +
mov edx [ebp+Rect.right] +
sub edx [ebp+Rect.left] +
mov [ebp+var_2C] edx +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 10A2h  +
mov ecx [ebp+var_3C] +
mov edx [ecx+38h] +
push edx  +
call ds:SendMessageW  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035D48  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 3Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_3C] ecx +
mov [ebp+var_18] 4 +
lea eax [ebp+var_18] +
push eax  +
lea ecx [ebp+var_1C] +
push ecx  +
push 0  +
push 18h  +
mov edx ds:lpValueName +
push edx  +
mov eax ds:lpSubKey +
push eax  +
push 80000001h  +
call ds:RegGetValueW  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_102132C  +
mov [ebp+var_1C] 1 +
mov ecx [ebp+var_1C] +
and ecx 1 +
neg ecx  +
sbb ecx ecx +
neg ecx  +
push ecx  +
mov ecx [ebp+var_3C] +
add ecx 20h +
call sub_1022680  +
mov edx [ebp+var_1C] +
and edx 2 +
neg edx  +
sbb edx edx +
neg edx  +
push edx  +
mov ecx [ebp+var_3C] +
add ecx 2Ch +
call sub_1022680  +
mov [ebp+var_20] 0 +
lea eax [ebp+var_20] +
push eax  +
push 0  +
push 0  +
push 20h  +
mov ecx ds:off_1002448 +
push ecx  +
mov edx ds:lpSubKey +
push edx  +
push 80000001h  +
call ds:RegGetValueW  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jnz loc_10214E4  +
lea ecx [ebp+var_28] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_28] +
call sub_1019510  +
lea ecx [ebp+var_28] +
call sub_1024680  +
test eax eax +
jz loc_10214D5  +
lea ecx [ebp+var_20] +
push ecx  +
lea ecx [ebp+var_28] +
call sub_1024680  +
push eax  +
push 0  +
push 20h  +
mov edx ds:off_1002448 +
push edx  +
mov eax ds:lpSubKey +
push eax  +
push 80000001h  +
call ds:RegGetValueW  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jnz loc_10214D5  +
lea ecx [ebp+var_28] +
call sub_1024680  +
mov [ebp+var_24] eax +
mov ecx [ebp+var_24] +
movzx edx word ptr [ecx] +
test edx edx +
jz loc_10214D5  +
push 0  +
lea eax [ebp+var_30] +
push eax  +
mov ecx [ebp+var_24] +
push ecx  +
mov ecx dword_103B544 +
call sub_1023E30  +
mov [ebp+var_2C] eax +
cmp [ebp+var_2C] 0 +
jnz loc_102144C  +
push 1  +
mov ecx [ebp+var_30] +
call sub_1022F50  +
mov ecx eax +
call sub_1022680  +
mov edx [ebp+var_30] +
push edx  +
mov eax [ebp+var_30] +
mov ecx [eax] +
mov edx [ecx+8] +
call edx  +
jmp loc_1021494  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_24] +
push eax  +
mov ecx [ebp+var_3C] +
add ecx 3Ch +
call sub_1022830  +
jmp loc_102148D  +
mov ecx [ebp-38h] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_1021475  +
call _resetstkoflw  +
mov ecx [ebp-38h] +
call sub_1024680  +
mov [ebp-34h] eax +
mov dword ptr [ebp-4] 0 +
mov eax offset loc_1021494 +
retn   +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_24] +
mov [ebp+var_40] ecx +
mov edx [ebp+var_40] +
add edx 2 +
mov [ebp+var_44] edx +
mov eax [ebp+var_40] +
mov cx [eax] +
mov [ebp+var_46] cx +
add [ebp+var_40] 2 +
cmp [ebp+var_46] 0 +
jnz loc_10214A3  +
mov edx [ebp+var_40] +
sub edx [ebp+var_44] +
sar edx 1 +
mov [ebp+var_4C] edx +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_24] +
lea edx [ecx+eax*2+2] +
mov [ebp+var_24] edx +
jmp loc_10213FF  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_1015A50  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035D80  +
mov eax large fs:0 +
push eax  +
sub esp 7Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_58] ecx +
mov [ebp+var_10] 0 +
mov dword ptr [ebp+Data] 0 +
lea ecx [ebp+var_20] +
call sub_10246E0  +
mov [ebp+var_4] 0 +
push 0  +
push 0  +
push 20006h  +
push 0  +
push 0  +
mov eax ds:lpSubKey +
push eax  +
push 80000001h  +
lea ecx [ebp+var_20] +
call sub_1022C50  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jnz loc_10218B7  +
mov [ebp+var_24] 0 +
mov [ebp+var_2C] 0 +
jmp loc_102158D  +
mov ecx [ebp+var_2C] +
add ecx 1 +
mov [ebp+var_2C] ecx +
mov ecx dword_103B544 +
call sub_101AAF0  +
cmp [ebp+var_2C] eax +
jnb loc_102162D  +
lea edx [ebp+var_34] +
push edx  +
mov eax [ebp+var_2C] +
push eax  +
mov ecx dword_103B544 +
call sub_1023EF0  +
mov [ebp+var_30] eax +
cmp [ebp+var_30] 0 +
jl loc_1021628  +
mov ecx [ebp+var_34] +
call sub_1022F50  +
mov ecx eax +
call sub_1022700  +
test eax eax +
jz loc_102161A  +
mov ecx dword ptr [ebp+Data] +
or ecx 4 +
mov dword ptr [ebp+Data] ecx +
mov ecx [ebp+var_34] +
call sub_101CB80  +
mov [ebp+var_5C] eax +
mov edx [ebp+var_5C] +
add edx 2 +
mov [ebp+var_60] edx +
mov eax [ebp+var_5C] +
mov cx [eax] +
mov [ebp+var_62] cx +
add [ebp+var_5C] 2 +
cmp [ebp+var_62] 0 +
jnz loc_10215ED  +
mov edx [ebp+var_5C] +
sub edx [ebp+var_60] +
sar edx 1 +
mov [ebp+var_68] edx +
mov eax [ebp+var_68] +
mov ecx [ebp+var_24] +
lea edx [ecx+eax+1] +
mov [ebp+var_24] edx +
mov eax [ebp+var_34] +
mov ecx [eax] +
mov edx [ebp+var_34] +
push edx  +
mov eax [ecx+8] +
call eax  +
jmp loc_1021584  +
mov [ebp+var_38] 0 +
jmp loc_102163F  +
mov ecx [ebp+var_38] +
add ecx 1 +
mov [ebp+var_38] ecx +
mov ecx [ebp+var_58] +
add ecx 3Ch +
call sub_1022700  +
cmp [ebp+var_38] eax +
jnb loc_102167A  +
mov edx dword ptr [ebp+Data] +
or edx 4 +
mov dword ptr [ebp+Data] edx +
mov eax [ebp+var_38] +
push eax  +
mov ecx [ebp+var_58] +
add ecx 3Ch +
call sub_102E4A0  +
mov ecx eax +
call sub_101ACA0  +
mov ecx [ebp+var_24] +
lea edx [ecx+eax+1] +
mov [ebp+var_24] edx +
jmp loc_1021636  +
mov eax [ebp+var_24] +
add eax 1 +
mov [ebp+var_24] eax +
lea ecx [ebp+var_28] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_24] +
push ecx  +
lea ecx [ebp+var_28] +
call sub_1019510  +
lea ecx [ebp+var_28] +
call sub_1024680  +
test eax eax +
jz loc_10218AB  +
lea ecx [ebp+var_28] +
call sub_1024680  +
mov [ebp+var_3C] eax +
mov edx [ebp+var_24] +
mov [ebp+var_40] edx +
mov [ebp+var_44] 0 +
mov [ebp+var_48] 0 +
jmp loc_10216D5  +
mov eax [ebp+var_48] +
add eax 1 +
mov [ebp+var_48] eax +
mov ecx dword_103B544 +
call sub_101AAF0  +
cmp [ebp+var_48] eax +
jnb loc_10217DB  +
lea ecx [ebp+var_4C] +
push ecx  +
mov edx [ebp+var_48] +
push edx  +
mov ecx dword_103B544 +
call sub_1023EF0  +
mov [ebp+var_44] eax +
cmp [ebp+var_44] 0 +
jl loc_10217D6  +
mov ecx [ebp+var_4C] +
call sub_1022F50  +
mov ecx eax +
call sub_1022700  +
test eax eax +
jz loc_10217C8  +
mov ecx [ebp+var_4C] +
call sub_101CB80  +
push eax  +
mov eax [ebp+var_40] +
push eax  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_101A9A0  +
mov [ebp+var_44] eax +
cmp [ebp+var_44] 0 +
jl loc_10217C8  +
mov edx [ebp+var_3C] +
mov [ebp+var_6C] edx +
mov eax [ebp+var_6C] +
add eax 2 +
mov [ebp+var_70] eax +
mov ecx [ebp+var_6C] +
mov dx [ecx] +
mov [ebp+var_72] dx +
add [ebp+var_6C] 2 +
cmp [ebp+var_72] 0 +
jnz loc_1021752  +
mov eax [ebp+var_6C] +
sub eax [ebp+var_70] +
sar eax 1 +
mov [ebp+var_78] eax +
mov ecx [ebp+var_78] +
add ecx 1 +
mov edx [ebp+var_40] +
sub edx ecx +
mov [ebp+var_40] edx +
mov eax [ebp+var_3C] +
mov [ebp+var_7C] eax +
mov ecx [ebp+var_7C] +
add ecx 2 +
mov [ebp+var_80] ecx +
mov edx [ebp+var_7C] +
mov ax [edx] +
mov [ebp+var_82] ax +
add [ebp+var_7C] 2 +
cmp [ebp+var_82] 0 +
jnz loc_102178F  +
mov ecx [ebp+var_7C] +
sub ecx [ebp+var_80] +
sar ecx 1 +
mov [ebp+var_88] ecx +
mov edx [ebp+var_88] +
mov eax [ebp+var_3C] +
lea ecx [eax+edx*2+2] +
mov [ebp+var_3C] ecx +
mov edx [ebp+var_4C] +
mov eax [edx] +
mov ecx [ebp+var_4C] +
push ecx  +
mov edx [eax+8] +
call edx  +
jmp loc_10216CC  +
mov [ebp+var_50] 0 +
jmp loc_10217ED  +
mov eax [ebp+var_50] +
add eax 1 +
mov [ebp+var_50] eax +
mov ecx [ebp+var_58] +
add ecx 3Ch +
call sub_1022700  +
cmp [ebp+var_50] eax +
jnb loc_1021870  +
mov ecx [ebp+var_50] +
push ecx  +
mov ecx [ebp+var_58] +
add ecx 3Ch +
call sub_102E4A0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov edx [ebp+var_40] +
push edx  +
mov eax [ebp+var_3C] +
push eax  +
call sub_101A9A0  +
mov [ebp+var_44] eax +
cmp [ebp+var_44] 0 +
jl loc_102186B  +
mov ecx [ebp+var_50] +
push ecx  +
mov ecx [ebp+var_58] +
add ecx 3Ch +
call sub_102E4A0  +
mov ecx eax +
call sub_101ACA0  +
add eax 1 +
mov edx [ebp+var_40] +
sub edx eax +
mov [ebp+var_40] edx +
mov eax [ebp+var_50] +
push eax  +
mov ecx [ebp+var_58] +
add ecx 3Ch +
call sub_102E4A0  +
mov ecx eax +
call sub_101ACA0  +
mov ecx [ebp+var_3C] +
lea edx [ecx+eax*2+2] +
mov [ebp+var_3C] edx +
jmp loc_10217E4  +
mov eax [ebp+var_24] +
add eax 1 +
mov [ebp+var_24] eax +
xor ecx ecx +
mov edx [ebp+var_3C] +
mov [edx] cx +
mov eax [ebp+var_3C] +
add eax 2 +
mov [ebp+var_3C] eax +
cmp [ebp+var_44] 0 +
jl loc_10218AB  +
lea ecx [ebp+var_28] +
call sub_1024680  +
push eax  +
mov ecx ds:off_1002448 +
push ecx  +
lea ecx [ebp+var_20] +
call sub_1022D10  +
mov [ebp+var_10] eax +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
call sub_1015A50  +
cmp [ebp+var_10] 0 +
jnz loc_1021903  +
mov ecx [ebp+var_58] +
add ecx 20h +
call sub_1022700  +
test eax eax +
jz loc_10218D5  +
mov edx dword ptr [ebp+Data] +
or edx 1 +
mov dword ptr [ebp+Data] edx +
mov ecx [ebp+var_58] +
add ecx 2Ch +
call sub_1022700  +
test eax eax +
jz loc_10218ED  +
mov eax dword ptr [ebp+Data] +
or eax 2 +
mov dword ptr [ebp+Data] eax +
mov ecx dword ptr [ebp+Data] +
push ecx  +
mov edx ds:lpValueName +
push edx  +
lea ecx [ebp+var_20] +
call sub_1022CD0  +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
push eax  +
call sub_100F570  +
mov [ebp+var_54] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_20] +
call sub_1022BF0  +
mov eax [ebp+var_54] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 1A9h  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1022E10  +
push eax  +
mov ecx [ebp+var_4] +
add ecx 20h +
call sub_1022720  +
mov ecx [ebp+var_4] +
call sub_1021990  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_1022410  +
push eax  +
push 1ADh  +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_10204B0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 1AAh  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1022E10  +
push eax  +
mov ecx [ebp+var_4] +
add ecx 2Ch +
call sub_1022720  +
mov ecx [ebp+var_4] +
call sub_1021990  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov edx [ecx+1Ch] +
and edx 8 +
jz loc_1021AB3  +
mov eax [ebp+var_4] +
mov ecx [eax+18h] +
and ecx 0F000h +
mov edx [ebp+var_4] +
mov eax [edx+14h] +
and eax 0F000h +
cmp ecx eax +
jz loc_1021AB3  +
mov ecx [ebp+var_4] +
mov edx [ecx+14h] +
and edx 0F000h +
shr edx 0Ch +
mov [ebp+var_8] edx +
mov eax [ebp+var_4] +
mov ecx [eax+0Ch] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_10225A0  +
mov [ebp+var_C] eax +
cmp [ebp+var_8] 1 +
jnz loc_1021A94  +
push 0  +
mov ecx [ebp+var_C] +
call sub_1022F50  +
mov ecx eax +
call sub_1022720  +
jmp loc_1021AAB  +
cmp [ebp+var_8] 2 +
jnz loc_1021AAB  +
push 1  +
mov ecx [ebp+var_C] +
call sub_1022F50  +
mov ecx eax +
call sub_1022720  +
mov ecx [ebp+var_10] +
call sub_1021990  +
mov edx [ebp+arg_8] +
mov dword ptr [edx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035DA0  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_30] eax +
mov [ebp+lParam] 0 +
xor ecx ecx +
mov [ebp+var_28] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] ecx +
mov [ebp+lParam] 1 +
mov edx [ebp+var_30] +
mov [ebp+var_24] edx +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 1053h  +
mov ecx [ebp+var_3C] +
mov edx [ecx+38h] +
push edx  +
call ds:SendMessageW  +
mov [ebp+wParam] eax +
cmp [ebp+wParam] 0FFFFFFFFh +
jz loc_1021B77  +
push 0  +
mov eax [ebp+wParam] +
push eax  +
push 1008h  +
mov ecx [ebp+var_3C] +
mov edx [ecx+38h] +
push edx  +
call ds:SendMessageW  +
test eax eax +
jz loc_1021B77  +
mov eax [ebp+var_30] +
push eax  +
mov ecx [ebp+var_30] +
mov edx [ecx] +
mov eax [edx+8] +
call eax  +
mov ecx [ebp+var_3C] +
call sub_1021220  +
mov ecx [ebp+var_30] +
call sub_1022F50  +
mov ecx eax +
call sub_1022700  +
test eax eax +
jz loc_1021BE8  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_30] +
call sub_101CB80  +
mov [ebp+var_40] eax +
mov ecx [ebp+var_40] +
push ecx  +
mov ecx [ebp+var_3C] +
add ecx 3Ch +
call sub_1022830  +
jmp loc_1021BE1  +
mov ecx [ebp-38h] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_1021BC9  +
call _resetstkoflw  +
mov ecx [ebp-38h] +
call sub_1024680  +
mov [ebp-34h] eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1021BE8 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
mov edx [ebp+var_30] +
push edx  +
mov eax [ebp+var_30] +
mov ecx [eax] +
mov edx [ecx+8] +
call edx  +
mov ecx [ebp+var_3C] +
call sub_1021E20  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov [ebp+var_28] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_20] eax +
mov [ebp+var_24] 0 +
jmp loc_1021C43  +
mov ecx [ebp+var_24] +
add ecx 1 +
mov [ebp+var_24] ecx +
mov ecx [ebp+var_28] +
add ecx 3Ch +
call sub_1022700  +
cmp [ebp+var_24] eax +
jnb loc_1021C9C  +
mov ecx [ebp+var_20] +
call sub_101CB80  +
push eax  +
mov edx [ebp+var_24] +
push edx  +
mov ecx [ebp+var_28] +
add ecx 3Ch +
call sub_102E4A0  +
push eax  +
call sub_1022610  +
movzx eax al +
test eax eax +
jz loc_1021C9A  +
push 1  +
mov ecx [ebp+var_20] +
call sub_1022F50  +
mov ecx eax +
call sub_1022680  +
push 1  +
mov ecx [ebp+var_24] +
push ecx  +
mov ecx [ebp+var_28] +
add ecx 3Ch +
call sub_1022910  +
jmp loc_1021C3A  +
mov [ebp+lParam] 0 +
xor edx edx +
mov [ebp+var_18] edx +
mov [ebp+var_14] edx +
mov [ebp+var_10] edx +
mov [ebp+var_C] edx +
mov [ebp+var_8] edx +
mov [ebp+lParam] 1 +
mov eax [ebp+var_20] +
mov [ebp+var_14] eax +
lea ecx [ebp+lParam] +
push ecx  +
push 0FFFFFFFFh  +
push 1053h  +
mov edx [ebp+var_28] +
mov eax [edx+38h] +
push eax  +
call ds:SendMessageW  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0FFFFFFFFh +
jnz loc_1021D05  +
push 0  +
push 0  +
push 1004h  +
mov ecx [ebp+var_28] +
mov edx [ecx+38h] +
push edx  +
call ds:SendMessageW  +
push eax  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+var_28] +
call sub_1021000  +
mov ecx [ebp+var_28] +
call sub_1021E20  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_14] eax +
mov [ebp+var_50] ecx +
xor eax eax +
mov [ebp+var_30] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_18] eax +
mov [ebp+var_30] 1Ch +
mov ecx ds:dword_1006D9C +
mov [ebp+var_24] ecx +
mov edx ds:dword_1006DA0 +
mov [ebp+var_20] edx +
mov eax ds:dword_1006DA4 +
mov [ebp+var_1C] eax +
mov ecx ds:dword_1006DA8 +
mov [ebp+var_18] ecx +
lea edx [ebp+var_10] +
push edx  +
lea eax [ebp+var_30] +
push eax  +
call ds:Shell_NotifyIconGetRect  +
mov [ebp+var_34] eax +
cmp [ebp+var_34] 0 +
jl loc_1021DEF  +
lea ecx [ebp+X] +
push ecx  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A600  +
mov edx [ebp-3Ch] +
sub edx [ebp+X] +
mov [ebp+var_4C] edx +
mov eax [ebp-38h] +
sub eax [ebp-40h] +
mov [ebp+var_48] eax +
lea ecx [ebp+X] +
push ecx  +
lea edx [ebp+var_10] +
push edx  +
push 10054h  +
lea eax [ebp+var_4C] +
push eax  +
push offset dword_103B014  +
call ds:CalculatePopupWindowPosition  +
test eax eax +
jz loc_1021DEF  +
push 1  +
push 0  +
push 0  +
mov ecx [ebp-40h] +
push ecx  +
mov edx [ebp+X] +
push edx  +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
push eax  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_100E0E0  +
push 1  +
push 0  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_1010530  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov [ebp+var_4C] ecx +
mov ecx [ebp+var_4C] +
add ecx 20h +
call sub_1022700  +
neg eax  +
sbb eax eax +
neg eax  +
push eax  +
push 1A9h  +
mov ecx [ebp+var_4C] +
add ecx 4 +
call sub_1022DE0  +
mov ecx [ebp+var_4C] +
add ecx 2Ch +
call sub_1022700  +
neg eax  +
sbb eax eax +
neg eax  +
push eax  +
push 1AAh  +
mov ecx [ebp+var_4C] +
add ecx 4 +
call sub_1022DE0  +
mov [ebp+var_4] 0 +
jmp loc_1021E81  +
mov eax [ebp+var_4] +
add eax 1 +
mov [ebp+var_4] eax +
mov ecx dword_103B544 +
call sub_101AAF0  +
cmp [ebp+var_4] eax +
jnb loc_1021F15  +
lea ecx [ebp+var_C] +
push ecx  +
mov edx [ebp+var_4] +
push edx  +
mov ecx dword_103B544 +
call sub_1023EF0  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jl loc_1021F10  +
mov ecx [ebp+var_C] +
call sub_1022F10  +
cmp eax 0FFFFFFFFh +
jz loc_1021F02  +
mov [ebp+var_38] 0F000h +
mov ecx [ebp+var_C] +
call sub_1022F50  +
mov ecx eax +
call sub_1022700  +
neg eax  +
sbb eax eax +
neg eax  +
add eax 1 +
shl eax 0Ch +
mov [ebp+var_3C] eax +
lea eax [ebp+lParam] +
push eax  +
mov ecx [ebp+var_C] +
call sub_1022F10  +
push eax  +
push 102Bh  +
mov ecx [ebp+var_4C] +
mov edx [ecx+38h] +
push edx  +
call ds:SendMessageW  +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov edx [ebp+var_C] +
push edx  +
mov eax [ecx+8] +
call eax  +
jmp loc_1021E78  +
mov ecx [ebp+var_4C] +
call sub_1021990  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
push 8  +
call ds:GetSysColor  +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call ds:SetTextColor  +
push 5  +
call ds:GetSysColor  +
push eax  +
mov edx [ebp+var_4] +
push edx  +
call ds:SetBkColor  +
push 5  +
call ds:GetSysColorBrush  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
mov [ebp+var_34] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
mov edx [ecx+0Ch] +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 1 +
jz loc_1021FB1  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+3Ch] 1 +
jnz loc_1021FB1  +
xor eax eax +
jmp loc_10220BB  +
mov ecx [ebp+var_4] +
mov [ebp+var_38] ecx +
cmp [ebp+var_38] 1 +
jz loc_1021FD4  +
cmp [ebp+var_38] 10001h +
jz loc_1021FDE  +
cmp [ebp+var_38] 10002h +
jz loc_1021FE8  +
jmp loc_10220B5  +
mov eax 20h +
jmp loc_10220BB  +
mov eax 10h +
jmp loc_10220BB  +
mov edx [ebp+var_8] +
mov eax [edx+24h] +
mov [ebp+wParam] eax +
lea ecx [ebp+x] +
test ecx ecx +
jz loc_1022007  +
mov [ebp+x] 2 +
lea edx [ebp+x] +
mov [ebp+lParam] edx +
jmp loc_102200E  +
mov [ebp+lParam] 0 +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
push 100Eh  +
mov edx [ebp+var_34] +
mov eax [edx+38h] +
push eax  +
call ds:SendMessageW  +
lea ecx [ebp+x] +
push ecx  +
lea edx [ebp+rcDst] +
push edx  +
call ds:CopyRect  +
mov esi [ebp+rcDst.bottom] +
sub esi [ebp+rcDst.top] +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
sub esi eax +
mov eax esi +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+rcDst.top] +
mov [ebp+rcDst.top] eax +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
add eax [ebp+rcDst.top] +
mov [ebp+rcDst.bottom] eax +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
add eax [ebp+rcDst.left] +
mov [ebp+rcDst.right] eax +
mov eax [ebp+wParam] +
push eax  +
mov ecx [ebp+var_34] +
call sub_10225A0  +
mov [ebp+var_30] eax +
push 1  +
mov ecx [ebp-28h] +
push ecx  +
mov edx [ebp+x] +
push edx  +
mov eax [ebp+var_8] +
mov ecx [eax+10h] +
push ecx  +
mov ecx [ebp+var_30] +
call sub_1022EF0  +
push eax  +
mov edx himl +
push edx  +
call ds:ImageList_Draw  +
xor eax eax +
jmp loc_10220BB  +
xor eax eax +
jmp loc_10220BB  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_50] ecx +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A660  +
mov [ebp+var_4C] eax +
push 5  +
push 1AEh  +
mov ecx [ebp+var_4C] +
push ecx  +
mov ecx [ebp+var_50] +
call sub_1022150  +
push 6  +
push 1AFh  +
mov edx [ebp+var_4C] +
push edx  +
mov ecx [ebp+var_50] +
call sub_1022150  +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A690  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 138h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_1C] eax +
mov [ebp+var_138] ecx +
mov [ebp+var_14] 0 +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+nIDDlgItem] +
push ecx  +
lea edx [ebp+var_124] +
push edx  +
mov ecx [ebp+var_138] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A600  +
push 2  +
lea eax [ebp+Rect] +
push eax  +
lea ecx [ebp+var_12C] +
push ecx  +
mov edx [ebp+nIDDlgItem] +
push edx  +
lea eax [ebp+var_128] +
push eax  +
mov ecx [ebp+var_138] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100E190  +
mov ecx [eax] +
push ecx  +
push 0  +
call ds:MapWindowPoints  +
push 80h  +
lea edx [ebp+String] +
push edx  +
mov eax [ebp+nIDDlgItem] +
push eax  +
lea ecx [ebp+var_130] +
push ecx  +
mov ecx [ebp+var_138] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1022DB0  +
push offset aControlpanel  +
push 0  +
call ds:OpenThemeData  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jz loc_1022247  +
lea edx [ebp+Rect] +
push edx  +
push 0  +
push 8014h  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push 1  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_18] +
push eax  +
call ds:DrawThemeText  +
mov [ebp+var_14] eax +
mov ecx [ebp+var_18] +
push ecx  +
call ds:CloseThemeData  +
jmp loc_1022269  +
push 5  +
mov edx [ebp+nIDDlgItem] +
push edx  +
lea eax [ebp+var_134] +
push eax  +
mov ecx [ebp+var_138] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_101A6C0  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_1C] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 12Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_20] eax +
mov [ebp+var_12C] ecx +
mov [ebp+var_18] 0 +
push 0  +
call ds:CreateCompatibleDC  +
mov [ebp+hDC] eax +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+nIDDlgItem] +
push ecx  +
lea edx [ebp+var_124] +
push edx  +
mov ecx [ebp+var_12C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100D6B0  +
push 80h  +
lea eax [ebp+String] +
push eax  +
mov ecx [ebp+nIDDlgItem] +
push ecx  +
lea edx [ebp+var_128] +
push edx  +
mov ecx [ebp+var_12C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1022DB0  +
push offset aControlpanel  +
push 0  +
call ds:OpenThemeData  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_102235C  +
lea eax [ebp+Rect] +
push eax  +
lea ecx [ebp+Rect] +
push ecx  +
push 8014h  +
push 0FFFFFFFFh  +
lea edx [ebp+String] +
push edx  +
push 1  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
mov edx [ebp+var_14] +
push edx  +
call ds:GetThemeTextExtent  +
mov [ebp+var_18] eax +
mov eax [ebp+var_14] +
push eax  +
call ds:CloseThemeData  +
jmp loc_1022378  +
push 8414h  +
lea ecx [ebp+Rect] +
push ecx  +
push 0FFFFFFFFh  +
lea edx [ebp+String] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:DrawTextW  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:DeleteDC  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov ecx [ebp+var_20] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1022410  +
test eax eax +
jz loc_10223BD  +
mov ecx [ebp+var_4] +
call sub_1021500  +
push 0  +
mov ecx [ebp+var_4] +
call sub_1022740  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
mov ecx [ebp+var_4] +
call sub_1022740  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_14] ecx +
mov ecx [ebp+var_14] +
add ecx 20h +
call sub_10226D0  +
test eax eax +
jnz loc_1022442  +
mov ecx [ebp+var_14] +
add ecx 2Ch +
call sub_10226D0  +
test eax eax +
jnz loc_1022442  +
mov [ebp+var_18] 0 +
jmp loc_1022449  +
mov [ebp+var_18] 1 +
mov eax [ebp+var_18] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_10224BF  +
mov [ebp+var_8] 0 +
jmp loc_1022467  +
mov ecx [ebp+var_8] +
add ecx 1 +
mov [ebp+var_8] ecx +
mov ecx dword_103B544 +
call sub_101AAF0  +
cmp [ebp+var_8] eax +
jnb loc_10224BF  +
lea edx [ebp+var_10] +
push edx  +
mov eax [ebp+var_8] +
push eax  +
mov ecx dword_103B544 +
call sub_1023EF0  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jl loc_10224BD  +
mov ecx [ebp+var_10] +
call sub_1022F50  +
mov ecx eax +
call sub_10226D0  +
test eax eax +
jz loc_10224AF  +
mov [ebp+var_4] 1 +
jmp loc_10224BF  +
mov ecx [ebp+var_10] +
mov edx [ecx] +
mov eax [ebp+var_10] +
push eax  +
mov ecx [edx+8] +
call ecx  +
jmp loc_102245E  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov ecx [ebp+var_14] +
call sub_1022410  +
test eax eax +
jz loc_1022576  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
call sub_1021500  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_1022576  +
mov ecx [ebp+var_14] +
add ecx 20h +
call sub_10226B0  +
mov ecx [ebp+var_14] +
add ecx 2Ch +
call sub_10226B0  +
mov [ebp+var_8] 0 +
jmp loc_102252B  +
mov eax [ebp+var_8] +
add eax 1 +
mov [ebp+var_8] eax +
mov ecx dword_103B544 +
call sub_101AAF0  +
cmp [ebp+var_8] eax +
jnb loc_1022576  +
lea ecx [ebp+var_10] +
push ecx  +
mov edx [ebp+var_8] +
push edx  +
mov ecx dword_103B544 +
call sub_1023EF0  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jl loc_1022566  +
mov ecx [ebp+var_10] +
call sub_1022F50  +
mov ecx eax +
call sub_10226B0  +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edx [ebp+var_10] +
push edx  +
mov eax [ecx+8] +
call eax  +
jmp loc_1022522  +
mov ecx [ebp+var_14] +
call sub_1021990  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov [ebp+var_44] ecx +
mov [ebp+var_4] 0 +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_10225F3  +
push 3Ch  +
push 0  +
lea eax [ebp+lParam] +
push eax  +
call memset  +
add esp 0Ch +
mov ecx [ebp+arg_0] +
mov [ebp+var_3C] ecx +
mov [ebp+lParam] 4 +
lea edx [ebp+lParam] +
push edx  +
push 0  +
push 104Bh  +
mov eax [ebp+var_44] +
mov ecx [eax+38h] +
push ecx  +
call ds:SendMessageW  +
mov edx [ebp+var_20] +
mov [ebp+var_4] edx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_1022770  +
neg eax  +
sbb eax eax +
add eax 1 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax+8] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+4] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
mov edx [ebp+var_4] +
mov eax [ebp+arg_0] +
mov [edx] eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
mov [eax] edx +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+var_4] +
mov edx [eax+4] +
xor eax eax +
cmp edx [ecx] +
setnz al  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+nResult] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
call ds:EndDialog  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
push 7FFFFFFFh  +
mov eax [ebp+arg_0] +
push eax  +
call sub_10227D0  +
neg eax  +
sbb eax eax +
neg eax  +
mov [ebp+var_4] eax +
jnz loc_102279E  +
push 80004005h  +
call sub_1007F50  +
xor ecx ecx +
jnz loc_102277B  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1024680  +
push eax  +
call sub_1022E50  +
add esp 8 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] 0 +
setnz al  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+4] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+8] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+0Ch] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035DD9  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_20] ecx +
mov eax [ebp+var_20] +
mov ecx [eax+4] +
mov [ebp+var_10] ecx +
mov edx [ebp+var_20] +
mov eax [ebp+var_10] +
cmp eax [edx+8] +
jb loc_1022892  +
mov ecx [ebp+var_10] +
add ecx 1 +
push ecx  +
mov ecx [ebp+var_20] +
call sub_1022A20  +
mov [ebp+var_11] al +
movzx edx [ebp+var_11] +
test edx edx +
jnz loc_1022892  +
push 8007000Eh  +
call sub_1007F50  +
mov eax [ebp+var_20] +
mov ecx [eax] +
mov edx [ebp+var_10] +
lea eax [ecx+edx*4] +
push eax  +
push 4  +
call sub_101B180  +
add esp 8 +
mov [ebp+var_1C] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_1C] 0 +
jz loc_10228C9  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_1C] +
call sub_101ACF0  +
mov [ebp+var_24] eax +
jmp loc_10228D0  +
mov [ebp+var_24] 0 +
mov edx [ebp+var_24] +
mov [ebp+var_18] edx +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_20] +
mov ecx [eax+4] +
add ecx 1 +
mov edx [ebp+var_20] +
mov [edx+4] ecx +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_0] +
add eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
cmp ecx [ebp+arg_0] +
jb loc_102293F  +
mov edx [ebp+var_4] +
cmp edx [ebp+arg_4] +
jb loc_102293F  +
mov eax [ebp+var_C] +
mov ecx [ebp+var_4] +
cmp ecx [eax+4] +
jbe loc_1022949  +
push 80070057h  +
call sub_1007F50  +
mov edx [ebp+var_C] +
mov eax [edx+4] +
sub eax [ebp+var_4] +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+var_C] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
lea edx [eax+ecx*4] +
push edx  +
call sub_1022B70  +
cmp [ebp+var_8] 0 +
jbe loc_1022991  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_C] +
mov edx [ecx] +
mov eax [ebp+var_4] +
lea ecx [edx+eax*4] +
push ecx  +
mov edx [ebp+var_C] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
lea edx [eax+ecx*4] +
push edx  +
call sub_102E7C0  +
mov eax [ebp+var_C] +
mov ecx [eax+4] +
sub ecx [ebp+arg_4] +
mov edx [ebp+var_C] +
mov [edx+4] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 0 +
jz loc_10229E2  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call sub_1022B70  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:__imp_free  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call memmove_s  +
add esp 10h +
push eax  +
call sub_1009C50  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov ecx [ebp+arg_0] +
cmp ecx [eax+8] +
jbe loc_1022B57  +
mov edx [ebp+var_14] +
cmp dword ptr [edx] 0 +
jnz loc_1022A95  +
mov eax [ebp+var_14] +
mov ecx [eax+0Ch] +
cmp ecx [ebp+arg_0] +
jbe loc_1022A58  +
mov edx [ebp+var_14] +
mov eax [edx+0Ch] +
mov [ebp+var_18] eax +
jmp loc_1022A5E  +
mov ecx [ebp+arg_0] +
mov [ebp+var_18] ecx +
mov edx [ebp+var_18] +
mov [ebp+var_4] edx +
push 4  +
mov eax [ebp+var_4] +
push eax  +
call ds:__imp_calloc  +
add esp 8 +
mov ecx [ebp+var_14] +
mov [ecx] eax +
mov edx [ebp+var_14] +
cmp dword ptr [edx] 0 +
jnz loc_1022A87  +
xor al al +
jmp loc_1022B59  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_4] +
mov [eax+8] ecx +
jmp loc_1022B57  +
mov edx [ebp+var_14] +
mov eax [edx+0Ch] +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jnz loc_1022AE3  +
mov ecx [ebp+var_14] +
mov edx [ecx+4] +
shr edx 3 +
mov [ebp+var_10] edx +
cmp [ebp+var_10] 4 +
jnb loc_1022ABF  +
mov [ebp+var_1C] 4 +
jmp loc_1022ADD  +
cmp [ebp+var_10] 400h +
jbe loc_1022AD1  +
mov [ebp+var_20] 400h +
jmp loc_1022AD7  +
mov eax [ebp+var_10] +
mov [ebp+var_20] eax +
mov ecx [ebp+var_20] +
mov [ebp+var_1C] ecx +
mov edx [ebp+var_1C] +
mov [ebp+var_10] edx +
mov eax [ebp+var_14] +
mov ecx [eax+8] +
add ecx [ebp+var_10] +
cmp [ebp+arg_0] ecx +
jnb loc_1022AFF  +
mov edx [ebp+var_14] +
mov eax [edx+8] +
add eax [ebp+var_10] +
mov [ebp+var_8] eax +
jmp loc_1022B05  +
mov ecx [ebp+arg_0] +
mov [ebp+var_8] ecx +
push 4  +
mov edx [ebp+var_8] +
push edx  +
call ds:__imp_calloc  +
add esp 8 +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_1022B21  +
xor al al +
jmp loc_1022B59  +
mov eax [ebp+var_14] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+var_14] +
mov eax [edx] +
push eax  +
mov ecx [ebp+var_C] +
push ecx  +
call sub_102E7C0  +
mov edx [ebp+var_14] +
mov eax [edx] +
push eax  +
call ds:__imp_free  +
add esp 4 +
mov ecx [ebp+var_14] +
mov edx [ebp+var_C] +
mov [ecx] edx +
mov eax [ebp+var_14] +
mov ecx [ebp+var_8] +
mov [eax+8] ecx +
mov al 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] 0 +
jmp loc_1022B88  +
mov eax [ebp+var_4] +
add eax 1 +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
cmp ecx [ebp+arg_4] +
jnb loc_1022BA2  +
push 0  +
mov edx [ebp+var_4] +
mov eax [ebp+arg_0] +
lea ecx [eax+edx*4] +
call sub_1022BB0  +
jmp loc_1022B7F  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_101AD70  +
mov eax [ebp+arg_0] +
and eax 1 +
jz loc_1022BD5  +
mov ecx [ebp+var_4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1022C10  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+var_8] +
cmp dword ptr [eax] 0 +
jz loc_1022C42  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
push edx  +
call ds:RegCloseKey  +
mov [ebp+var_4] eax +
mov eax [ebp+var_8] +
mov dword ptr [eax] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov [ebp+phkResult] 0 +
lea eax [ebp+dwDisposition] +
push eax  +
lea ecx [ebp+phkResult] +
push ecx  +
mov edx [ebp+lpSecurityAttributes] +
push edx  +
mov eax [ebp+samDesired] +
push eax  +
mov ecx [ebp+dwOptions] +
push ecx  +
mov edx [ebp+lpClass] +
push edx  +
push 0  +
mov eax [ebp+lpSubKey] +
push eax  +
mov ecx [ebp+hKey] +
push ecx  +
call ds:RegCreateKeyExW  +
mov [ebp+var_8] eax +
cmp [ebp+arg_18] 0 +
jz loc_1022C9B  +
mov edx [ebp+arg_18] +
mov eax [ebp+dwDisposition] +
mov [edx] eax +
cmp [ebp+var_8] 0 +
jnz loc_1022CB4  +
mov ecx [ebp+var_10] +
call sub_1022C10  +
mov [ebp+var_8] eax +
mov ecx [ebp+var_10] +
mov edx [ebp+phkResult] +
mov [ecx] edx +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
jnz loc_1022CD9  +
xor ecx ecx +
jnz loc_1022CD9  +
push 4  +
lea edx [ebp+Data] +
push edx  +
push 4  +
push 0  +
mov eax [ebp+lpValueName] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:RegSetValueExW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
xor eax eax +
jnz loc_1022D1B  +
xor ecx ecx +
jnz loc_1022D1B  +
xor edx edx +
cmp [ebp+lpData] 0 +
setnz dl  +
mov [ebp+var_10] edx +
cmp [ebp+var_10] 0 +
jnz loc_1022D3F  +
push 80004005h  +
call sub_1007F50  +
xor eax eax +
jnz loc_1022D23  +
mov [ebp+cbData] 0 +
mov ecx [ebp+lpData] +
mov [ebp+lpString] ecx +
mov edx [ebp+lpString] +
push edx  +
call ds:lstrlenW  +
add eax 1 +
mov [ebp+var_C] eax +
mov eax [ebp+var_C] +
mov ecx [ebp+lpString] +
lea edx [ecx+eax*2] +
mov [ebp+lpString] edx +
mov eax [ebp+var_C] +
mov ecx [ebp+cbData] +
lea edx [ecx+eax*2] +
mov [ebp+cbData] edx +
cmp [ebp+var_C] 1 +
jnz loc_1022D50  +
mov eax [ebp+cbData] +
push eax  +
mov ecx [ebp+lpData] +
push ecx  +
push 7  +
push 0  +
mov edx [ebp+lpValueName] +
push edx  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push ecx  +
call ds:RegSetValueExW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+nMaxCount] +
push eax  +
mov ecx [ebp+lpString] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:GetWindowTextW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+uCheck] +
push eax  +
mov ecx [ebp+nIDButton] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call ds:CheckDlgButton  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+nIDButton] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:IsDlgButtonChecked  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov [ebp+var_8] ecx +
mov edx [ebp+var_8] +
mov ax [edx] +
mov [ebp+var_A] ax +
mov ecx [ebp+var_4] +
cmp ax [ecx] +
jnz loc_1022EA9  +
cmp [ebp+var_A] 0 +
jz loc_1022EA0  +
mov edx [ebp+var_8] +
mov ax [edx+2] +
mov [ebp+var_C] ax +
mov ecx [ebp+var_4] +
cmp ax [ecx+2] +
jnz loc_1022EA9  +
add [ebp+var_8] 4 +
add [ebp+var_4] 4 +
cmp [ebp+var_C] 0 +
jnz loc_1022E64  +
mov [ebp+var_10] 0 +
jmp loc_1022EB1  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
mov [ebp+var_10] edx +
mov eax [ebp+var_10] +
mov [ebp+var_14] eax +
mov eax [ebp+var_14] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+20h] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+2Ch] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+30h] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+30h] ecx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
add eax 8 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
lea eax [ebp+pvar] +
push eax  +
call sub_1023100  +
lea ecx [ebp+pvar] +
push ecx  +
lea edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx+14h] +
call eax  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jge loc_1022FA4  +
jmp loc_1022FE3  +
jmp loc_1022FE3  +
movzx ecx [ebp+pvar.vt] +
cmp ecx 1Fh +
jz loc_1022FB8  +
mov [ebp+var_8] 80004005h +
jmp loc_1022FE3  +
jmp loc_1022FE3  +
mov edx [ebp+arg_18] +
cmp dword ptr [edx] 0 +
jz loc_1022FD5  +
mov eax [ebp+arg_18] +
mov ecx [eax] +
push ecx  +
call ds:CoTaskMemFree  +
mov edx [ebp+arg_18] +
mov dword ptr [edx] 0 +
mov eax [ebp+arg_18] +
mov ecx dword ptr [ebp+pvar.anonymous_0] +
mov [eax] ecx +
xor edx edx +
mov [ebp+pvar.vt] dx +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantClear  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035E0B  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov ecx [ebp+var_14] +
call sub_10114A0  +
mov eax [ebp+var_14] +
mov dword ptr [eax] offset off_10024A8 +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_1024620  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
add ecx 8 +
call sub_1022640  +
mov edx [ebp+var_14] +
mov dword ptr [edx+18h] 0 +
mov eax [ebp+var_14] +
mov dword ptr [eax+1Ch] 0 +
mov ecx [ebp+var_14] +
mov dword ptr [ecx+20h] 0 +
mov edx [ebp+var_14] +
mov dword ptr [edx+24h] 0 +
mov eax [ebp+var_14] +
mov dword ptr [eax+28h] 0 +
mov ecx [ebp+var_14] +
mov dword ptr [ecx+2Ch] 0FFFFFFFFh +
mov edx [ebp+var_14] +
mov dword ptr [edx+30h] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov dword ptr [eax+44h] 1 +
push offset Addend  +
call ds:InterlockedIncrement  +
mov [ebp+var_10] 0 +
jmp loc_10230C9  +
mov ecx [ebp+var_10] +
add ecx 1 +
mov [ebp+var_10] ecx +
cmp [ebp+var_10] 3 +
jge loc_10230DF  +
mov edx [ebp+var_10] +
mov eax [ebp+var_14] +
mov dword ptr [eax+edx*4+38h] 0 +
jmp loc_10230C0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_10024A8 +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+28h] 0 +
jz loc_1023152  +
mov edx [ebp+var_4] +
mov eax [edx+28h] +
push eax  +
call ds:DestroyIcon  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+28h] 0 +
mov edx [ebp+var_4] +
cmp dword ptr [edx+18h] 0 +
jz loc_1023172  +
mov eax [ebp+var_4] +
mov ecx [eax+18h] +
push ecx  +
call ds:CoTaskMemFree  +
mov edx [ebp+var_4] +
mov dword ptr [edx+18h] 0 +
mov eax [ebp+var_4] +
cmp dword ptr [eax+1Ch] 0 +
jz loc_1023192  +
mov ecx [ebp+var_4] +
mov edx [ecx+1Ch] +
push edx  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_4] +
mov dword ptr [eax+1Ch] 0 +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+20h] 0 +
jz loc_10231B2  +
mov edx [ebp+var_4] +
mov eax [edx+20h] +
push eax  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+20h] 0 +
mov edx [ebp+var_4] +
cmp dword ptr [edx+24h] 0 +
jz loc_10231D2  +
mov eax [ebp+var_4] +
mov ecx [eax+24h] +
push ecx  +
call ds:CoTaskMemFree  +
mov edx [ebp+var_4] +
mov dword ptr [edx+24h] 0 +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1023C70  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset Addend  +
call ds:InterlockedIncrement  +
mov eax [ebp+8] +
add eax 44h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
add eax 44h +
push eax  +
call ds:InterlockedDecrement  +
mov [ebp-4] eax +
push offset Addend  +
call ds:InterlockedDecrement  +
cmp dword ptr [ebp-4] 0 +
jnz loc_1023271  +
mov ecx [ebp+8] +
mov [ebp-0Ch] ecx +
mov edx [ebp-0Ch] +
mov [ebp-8] edx +
cmp dword ptr [ebp-8] 0 +
jz loc_102326A  +
push 1  +
mov ecx [ebp-8] +
call sub_1023280  +
mov [ebp-10h] eax +
jmp loc_1023271  +
mov dword ptr [ebp-10h] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1023120  +
mov eax [ebp+arg_0] +
and eax 1 +
jz loc_10232A5  +
mov ecx [ebp+var_4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035E38  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_24] ecx +
lea ecx [ebp+var_18] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov [ebp+pv] 0 +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_28] eax +
mov eax [ebp+var_24] +
add eax 24h +
push eax  +
mov ecx [ebp+var_28] +
push ecx  +
mov edx [ebp+var_28] +
mov eax [edx] +
mov ecx [eax+14h] +
call ecx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023331  +
jmp loc_102350B  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_2C] eax +
lea ecx [ebp+var_18] +
call sub_10114A0  +
push eax  +
push 0  +
mov edx [ebp+var_2C] +
push edx  +
mov eax [ebp+var_2C] +
mov ecx [eax] +
mov edx [ecx+10h] +
call edx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023366  +
jmp loc_102350B  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_30] eax +
mov eax [ebp+var_24] +
add eax 14h +
push eax  +
mov ecx [ebp+var_30] +
push ecx  +
mov edx [ebp+var_30] +
mov eax [edx] +
mov ecx [eax+18h] +
call ecx  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023397  +
jmp loc_102350B  +
mov edx [ebp+var_24] +
add edx 18h +
push edx  +
sub esp 14h +
mov eax esp +
mov ecx ds:dword_100296C +
mov [eax] ecx +
mov edx ds:dword_1002970 +
mov [eax+4] edx +
mov ecx ds:dword_1002974 +
mov [eax+8] ecx +
mov edx ds:dword_1002978 +
mov [eax+0Ch] edx +
mov ecx ds:dword_100297C +
mov [eax+10h] ecx +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
call sub_1022F70  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_10233EB  +
jmp loc_102350B  +
mov edx [ebp+var_24] +
add edx 1Ch +
push edx  +
sub esp 14h +
mov eax esp +
mov ecx ds:dword_1002980 +
mov [eax] ecx +
mov edx ds:dword_1002984 +
mov [eax+4] edx +
mov ecx ds:dword_1002988 +
mov [eax+8] ecx +
mov edx ds:dword_100298C +
mov [eax+0Ch] edx +
mov ecx ds:dword_1002990 +
mov [eax+10h] ecx +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
call sub_1022F70  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_102343F  +
jmp loc_102350B  +
mov edx [ebp+var_24] +
add edx 20h +
push edx  +
sub esp 14h +
mov eax esp +
mov ecx ds:dword_10029A8 +
mov [eax] ecx +
mov edx ds:dword_10029AC +
mov [eax+4] edx +
mov ecx ds:dword_10029B0 +
mov [eax+8] ecx +
mov edx ds:dword_10029B4 +
mov [eax+0Ch] edx +
mov ecx ds:dword_10029B8 +
mov [eax+10h] ecx +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
call sub_1022F70  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023490  +
jmp loc_102350B  +
lea edx [ebp+pv] +
push edx  +
sub esp 14h +
mov eax esp +
mov ecx ds:dword_1002994 +
mov [eax] ecx +
mov edx ds:dword_1002998 +
mov [eax+4] edx +
mov ecx ds:dword_100299C +
mov [eax+8] ecx +
mov edx ds:dword_10029A0 +
mov [eax+0Ch] edx +
mov ecx ds:dword_10029A4 +
mov [eax+10h] ecx +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
call sub_1022F70  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jl loc_102350B  +
mov edx [ebp+pv] +
push edx  +
mov ecx [ebp+var_24] +
call sub_1023550  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_102350B  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
call sub_1034E90  +
push eax  +
mov ecx [ebp+var_24] +
call sub_1023550  +
mov [ebp+var_1C] eax +
cmp [ebp+pv] 0 +
jz loc_1023522  +
mov eax [ebp+pv] +
push eax  +
call ds:CoTaskMemFree  +
mov [ebp+pv] 0 +
mov ecx [ebp+var_14] +
mov [ebp+var_20] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov [ebp+var_10] 0 +
mov [ebp+var_4] 0 +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
push eax  +
push 21Ch  +
push offset pszIconFile  +
call sub_1024720  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_1023598  +
jmp loc_102360B  +
jmp loc_102360B  +
push offset pszIconFile  +
call ds:PathParseIconLocationW  +
mov [ebp+var_C] eax +
mov ecx [ebp+var_8] +
push ecx  +
lea edx [ebp+var_4] +
push edx  +
lea eax [ebp+var_C] +
push eax  +
push offset pszIconFile  +
call sub_1034C10  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_10235C9  +
jmp loc_102360B  +
jmp loc_102360B  +
mov ecx [ebp+var_14] +
mov edx [ebp+var_4] +
mov [ecx+28h] edx +
mov eax [ebp+var_14] +
mov ecx [eax+28h] +
push ecx  +
mov edx [ebp+var_14] +
mov eax [edx+2Ch] +
push eax  +
mov ecx himl +
push ecx  +
call ds:ImageList_ReplaceIcon  +
mov edx [ebp+var_14] +
mov [edx+2Ch] eax +
mov eax [ebp+var_14] +
cmp dword ptr [eax+2Ch] 0FFFFFFFFh +
jnz loc_102360B  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset __ehhandler$?x_ismbbtype_l@@YAHPAUlocaleinfo_struct@@IHH@Z  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+wParam] ecx +
mov [ebp+var_14] 0 +
lea ecx [ebp+var_1C] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov [ebp+pv] 0 +
mov ecx [ebp+wParam] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_28] eax +
lea ecx [ebp+var_1C] +
call sub_10114A0  +
push eax  +
push 0  +
mov eax [ebp+var_28] +
push eax  +
mov ecx [ebp+var_28] +
mov edx [ecx] +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_102369C  +
jmp loc_102386E  +
push offset dword_100296C  +
lea ecx [ebp+arg_0] +
push ecx  +
call sub_1016E90  +
test eax eax +
jz loc_10237D4  +
mov edx [ebp+arg_10] +
cmp edx ds:dword_100297C +
jnz loc_10237D4  +
mov eax [ebp+wParam] +
add eax 18h +
push eax  +
sub esp 14h +
mov ecx esp +
mov edx ds:dword_100296C +
mov [ecx] edx +
mov eax ds:dword_1002970 +
mov [ecx+4] eax +
mov edx ds:dword_1002974 +
mov [ecx+8] edx +
mov eax ds:dword_1002978 +
mov [ecx+0Ch] eax +
mov edx ds:dword_100297C +
mov [ecx+10h] edx +
lea ecx [ebp+var_1C] +
call sub_1024680  +
push eax  +
call sub_1022F70  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023713  +
jmp loc_102386E  +
mov eax [ebp+wParam] +
add eax 1Ch +
push eax  +
sub esp 14h +
mov ecx esp +
mov edx ds:dword_1002980 +
mov [ecx] edx +
mov eax ds:dword_1002984 +
mov [ecx+4] eax +
mov edx ds:dword_1002988 +
mov [ecx+8] edx +
mov eax ds:dword_100298C +
mov [ecx+0Ch] eax +
mov edx ds:dword_1002990 +
mov [ecx+10h] edx +
lea ecx [ebp+var_1C] +
call sub_1024680  +
push eax  +
call sub_1022F70  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023765  +
jmp loc_102386E  +
mov eax [ebp+wParam] +
add eax 20h +
push eax  +
sub esp 14h +
mov ecx esp +
mov edx ds:dword_10029A8 +
mov [ecx] edx +
mov eax ds:dword_10029AC +
mov [ecx+4] eax +
mov edx ds:dword_10029B0 +
mov [ecx+8] edx +
mov eax ds:dword_10029B4 +
mov [ecx+0Ch] eax +
mov edx ds:dword_10029B8 +
mov [ecx+10h] edx +
lea ecx [ebp+var_1C] +
call sub_1024680  +
push eax  +
call sub_1022F70  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_10237B7  +
jmp loc_102386E  +
push 0  +
mov eax [ebp+wParam] +
push eax  +
push 40Eh  +
mov ecx hWnd +
push ecx  +
call ds:PostMessageW  +
jmp loc_102386E  +
push offset dword_1002994  +
lea edx [ebp+arg_0] +
push edx  +
call sub_1016E90  +
test eax eax +
jz loc_102386E  +
mov eax [ebp+arg_10] +
cmp eax ds:dword_10029A4 +
jnz loc_102386E  +
lea ecx [ebp+pv] +
push ecx  +
sub esp 14h +
mov edx esp +
mov eax ds:dword_1002994 +
mov [edx] eax +
mov ecx ds:dword_1002998 +
mov [edx+4] ecx +
mov eax ds:dword_100299C +
mov [edx+8] eax +
mov ecx ds:dword_10029A0 +
mov [edx+0Ch] ecx +
mov eax ds:dword_10029A4 +
mov [edx+10h] eax +
lea ecx [ebp+var_1C] +
call sub_1024680  +
push eax  +
call sub_1022F70  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023840  +
jmp loc_102386E  +
mov ecx [ebp+pv] +
push ecx  +
mov ecx [ebp+wParam] +
call sub_1023550  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023857  +
jmp loc_102386E  +
push 0  +
mov edx [ebp+wParam] +
push edx  +
push 40Dh  +
mov eax hWnd +
push eax  +
call ds:PostMessageW  +
cmp [ebp+pv] 0 +
jz loc_1023885  +
mov ecx [ebp+pv] +
push ecx  +
call ds:CoTaskMemFree  +
mov [ebp+pv] 0 +
mov edx [ebp+var_14] +
mov [ebp+var_20] edx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035E9B  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_1023950  +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_10024B4 +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_10246E0  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+10h] 0 +
mov ecx [ebp+var_10] +
add ecx 14h +
call sub_101A8A0  +
mov ecx [ebp+var_10] +
add ecx 2Ch +
call sub_1012550  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_10114A0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
push 17h  +
push 0  +
push offset stru_10024D4  +
mov ecx [ebp+var_8] +
add ecx 2Ch +
call sub_1024650  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_102399C  +
jmp loc_10239E9  +
jmp loc_10239E9  +
mov ecx [ebp+var_8] +
call sub_10245A0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_10239B1  +
jmp loc_10239E9  +
jmp loc_10239E9  +
mov ecx [ebp+var_8] +
add ecx 2Ch +
call sub_1024680  +
mov [ebp+var_C] eax +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [ebp+var_C] +
mov eax [edx] +
mov ecx [eax+18h] +
call ecx  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_10239DE  +
jmp loc_10239E9  +
jmp loc_10239E9  +
mov ecx [ebp+var_8] +
call sub_1023A00  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset __ehhandler$?wcstoxl@@YAKPAUlocaleinfo_struct@@PB_WPAPB_WHH@Z  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_38] ecx +
lea ecx [ebp+var_14] +
call sub_1012550  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+pv] 0 +
mov ecx [ebp+var_38] +
add ecx 14h +
call sub_101A960  +
mov ecx [ebp+var_38] +
add ecx 2Ch +
call sub_1024680  +
mov [ebp+var_3C] eax +
lea ecx [ebp+var_14] +
call sub_10114A0  +
push eax  +
push 9  +
push 0  +
mov eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+var_3C] +
mov edx [ecx] +
mov eax [edx+0Ch] +
call eax  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_1023A8E  +
jmp loc_1023C0E  +
lea ecx [ebp+var_14] +
call sub_1024680  +
mov [ebp+var_40] eax +
lea ecx [ebp+var_10] +
push ecx  +
mov edx [ebp+var_40] +
push edx  +
mov eax [ebp+var_40] +
mov ecx [eax] +
mov edx [ecx+0Ch] +
call edx  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_1023AB9  +
jmp loc_1023C0E  +
mov [ebp+var_28] 0 +
jmp loc_1023ACB  +
mov eax [ebp+var_28] +
add eax 1 +
mov [ebp+var_28] eax +
mov ecx [ebp+var_28] +
cmp ecx [ebp+var_10] +
jnb loc_1023B40  +
lea ecx [ebp+var_2C] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_14] +
call sub_1024680  +
mov [ebp+var_44] eax +
lea ecx [ebp+var_2C] +
call sub_10114A0  +
push eax  +
mov edx [ebp+var_28] +
push edx  +
mov eax [ebp+var_44] +
push eax  +
mov ecx [ebp+var_44] +
mov edx [ecx] +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_1023B1F  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_2C] +
call sub_1023C70  +
jmp loc_1023C0E  +
push 0  +
lea ecx [ebp+var_2C] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_38] +
call sub_1023C90  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_2C] +
call sub_1023C70  +
jmp loc_1023AC2  +
mov [ebp+var_30] 0 +
jmp loc_1023B52  +
mov ecx [ebp+var_30] +
add ecx 1 +
mov [ebp+var_30] ecx +
cmp [ebp+var_30] 3 +
jge loc_1023C0E  +
mov ecx [ebp+var_38] +
add ecx 2Ch +
call sub_1024680  +
mov [ebp+var_48] eax +
lea ecx [ebp+var_24] +
call sub_10114A0  +
push eax  +
mov edx [ebp+var_30] +
push edx  +
push 0  +
mov eax [ebp+var_48] +
push eax  +
mov ecx [ebp+var_48] +
mov edx [ecx] +
mov eax [edx+10h] +
call eax  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_1023B92  +
jmp loc_1023C0E  +
lea ecx [ebp+var_24] +
call sub_1024680  +
mov [ebp+var_4C] eax +
lea ecx [ebp+pv] +
push ecx  +
mov edx [ebp+var_4C] +
push edx  +
mov eax [ebp+var_4C] +
mov ecx [eax] +
mov edx [ecx+14h] +
call edx  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_1023BBA  +
jmp loc_1023C0E  +
push 0  +
lea eax [ebp+var_1C] +
push eax  +
mov ecx [ebp+pv] +
push ecx  +
mov ecx [ebp+var_38] +
call sub_1023E30  +
mov [ebp+var_20] eax +
cmp [ebp+pv] 0 +
jz loc_1023BE6  +
mov edx [ebp+pv] +
push edx  +
call ds:CoTaskMemFree  +
mov [ebp+pv] 0 +
mov [ebp+pv] 0 +
cmp [ebp+var_20] 0 +
jge loc_1023BF5  +
jmp loc_1023C0E  +
cmp [ebp+var_1C] 0 +
jz loc_1023C09  +
push 1  +
mov eax [ebp+var_30] +
push eax  +
mov ecx [ebp+var_1C] +
call sub_1024850  +
jmp loc_1023B49  +
mov ecx [ebp+var_38] +
add ecx 14h +
call sub_101A980  +
cmp [ebp+pv] 0 +
jz loc_1023C30  +
mov ecx [ebp+pv] +
push ecx  +
call ds:CoTaskMemFree  +
mov [ebp+pv] 0 +
mov edx [ebp+var_20] +
mov [ebp+var_34] edx +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1023C70  +
mov eax [ebp+var_34] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_101E3E0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035A8B  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_24] ecx +
mov [ebp+wParam] 0 +
cmp [ebp+arg_4] 0 +
jz loc_1023CD0  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
push 48h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_20] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_20] 0 +
jz loc_1023CFB  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_20] +
call sub_1023000  +
mov [ebp+var_28] eax +
jmp loc_1023D02  +
mov [ebp+var_28] 0 +
mov edx [ebp+var_28] +
mov [ebp+var_1C] edx +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_1C] +
mov [ebp+wParam] eax +
cmp [ebp+wParam] 0 +
jnz loc_1023D27  +
mov [ebp+var_14] 8007000Eh +
jmp loc_1023DAC  +
mov ecx [ebp+wParam] +
call sub_10232C0  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_1023D3A  +
jmp loc_1023DAC  +
mov ecx [ebp+wParam] +
push ecx  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_1027390  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jnz loc_1023D5B  +
mov [ebp+var_14] 8007000Eh +
jmp loc_1023DAC  +
mov edx [ebp+var_24] +
mov eax [edx+10h] +
add eax 1 +
mov ecx [ebp+var_24] +
mov [ecx+10h] eax +
mov edx [ebp+wParam] +
mov eax [edx] +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [eax+4] +
call edx  +
cmp [ebp+arg_4] 0 +
jz loc_1023D94  +
mov eax [ebp+wParam] +
mov ecx [eax] +
mov edx [ebp+wParam] +
push edx  +
mov eax [ecx+4] +
call eax  +
mov ecx [ebp+arg_4] +
mov edx [ebp+wParam] +
mov [ecx] edx +
push 0  +
mov eax [ebp+wParam] +
push eax  +
push 40Bh  +
mov ecx hWnd +
push ecx  +
call ds:PostMessageW  +
cmp [ebp+wParam] 0 +
jz loc_1023DC7  +
mov edx [ebp+wParam] +
mov eax [edx] +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [eax+8] +
call edx  +
mov [ebp+wParam] 0 +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_10274E0  +
mov ecx [ebp+var_4] +
mov edx [ecx+10h] +
sub edx 1 +
mov eax [ebp+var_4] +
mov [eax+10h] edx +
push 0  +
mov ecx [ebp+wParam] +
push ecx  +
push 40Ch  +
mov edx hWnd +
push edx  +
call ds:PostMessageW  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov [ebp+var_8] 0 +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
cmp [ebp+arg_8] 0 +
jz loc_1023E5A  +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 0 +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_10] eax +
mov edx [ebp+var_10] +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 0 +
jz loc_1023EB7  +
lea eax [ebp+var_C] +
push eax  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_1027580  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_C] +
call sub_101CB50  +
test eax eax +
jz loc_1023EAF  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov edx [ebp+var_C] +
mov eax [edx] +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [eax+4] +
call edx  +
jmp loc_1023EB7  +
mov eax [ebp+var_4] +
mov [ebp+var_10] eax +
jmp loc_1023E6E  +
cmp [ebp+arg_8] 0 +
jz loc_1023EC5  +
mov ecx [ebp+arg_8] +
mov edx [ebp+var_10] +
mov [ecx] edx +
cmp [ebp+var_8] 0 +
jl loc_1023EE0  +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jnz loc_1023EE0  +
push 490h  +
call sub_100F570  +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035F08  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_2C] ecx +
mov [ebp+var_1C] 0 +
mov [ebp+var_20] 0 +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
push 1  +
mov ecx [ebp+var_2C] +
add ecx 14h +
push ecx  +
lea ecx [ebp+var_18] +
call sub_101AB30  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_2C] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jz loc_1023F9B  +
lea edx [ebp+var_24] +
push edx  +
lea eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_2C] +
add ecx 4 +
call sub_1027580  +
mov ecx [ebp+arg_0] +
cmp ecx [ebp+var_20] +
jnz loc_1023F90  +
mov edx [ebp+arg_4] +
mov eax [ebp+var_24] +
mov [edx] eax +
mov ecx [ebp+var_24] +
mov edx [ecx] +
mov eax [ebp+var_24] +
push eax  +
mov ecx [edx+4] +
call ecx  +
jmp loc_1023F9B  +
mov edx [ebp+var_20] +
add edx 1 +
mov [ebp+var_20] edx +
jmp loc_1023F57  +
cmp [ebp+var_1C] 0 +
jl loc_1023FB6  +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jnz loc_1023FB6  +
push 490h  +
call sub_100F570  +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov [ebp+var_28] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_101AB70  +
mov eax [ebp+var_28] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_8] 0 +
mov ecx [ebp+var_10] +
add ecx 14h +
call sub_101A960  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_102405B  +
lea eax [ebp+var_8] +
push eax  +
lea ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1027580  +
test eax eax +
jnz loc_1024041  +
jmp loc_102405B  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_8] +
call sub_101AA50  +
test eax eax +
jz loc_1024059  +
mov eax [ebp+var_8] +
mov [ebp+var_4] eax +
jmp loc_102405B  +
jmp loc_1024022  +
mov ecx [ebp+var_10] +
add ecx 14h +
call sub_101A980  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035F38  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_28] ecx +
mov [ebp+var_10] 0 +
push 1  +
mov eax [ebp+var_28] +
add eax 14h +
push eax  +
lea ecx [ebp+var_18] +
call sub_101AB30  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jz loc_102410D  +
lea ecx [ebp+var_20] +
push ecx  +
lea edx [ebp+var_1C] +
push edx  +
mov ecx [ebp+var_28] +
add ecx 4 +
call sub_1027580  +
test eax eax +
jnz loc_10240F6  +
jmp loc_102410D  +
mov ecx [ebp+var_20] +
call sub_101AA70  +
test eax eax +
jz loc_102410B  +
mov eax [ebp+var_10] +
add eax 1 +
mov [ebp+var_10] eax +
jmp loc_10240D7  +
mov ecx [ebp+var_10] +
mov [ebp+var_24] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_101AB70  +
mov eax [ebp+var_24] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035F70  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ebp-10h] 0 +
mov dword ptr [ebp-14h] 0 +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1024180  +
jmp loc_10242CC  +
mov ecx [ebp+8] +
add ecx 14h +
call sub_101A960  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-14h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp+8] +
call sub_1023E30  +
cmp dword ptr [ebp-14h] 0 +
jnz loc_102429A  +
lea ecx [ebp-1Ch] +
call sub_1012550  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-24h] +
call sub_1027240  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+8] +
add ecx 2Ch +
call sub_1024680  +
mov [ebp-28h] eax +
lea ecx [ebp-1Ch] +
call sub_10114A0  +
push eax  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-28h] +
push ecx  +
mov edx [ebp-28h] +
mov eax [edx] +
mov ecx [eax+14h] +
call ecx  +
mov [ebp-10h] eax +
cmp dword ptr [ebp-10h] 0 +
jge loc_1024216  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-24h] +
call sub_1025550  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_1023C70  +
jmp loc_10242CC  +
lea ecx [ebp-1Ch] +
call sub_1024680  +
push eax  +
lea ecx [ebp-24h] +
call sub_10246A0  +
lea ecx [ebp-24h] +
call sub_1024680  +
mov [ebp-2Ch] eax +
lea edx [ebp-20h] +
push edx  +
mov eax [ebp-2Ch] +
push eax  +
mov ecx [ebp-2Ch] +
mov edx [ecx] +
mov eax [edx+0Ch] +
call eax  +
mov [ebp-10h] eax +
cmp dword ptr [ebp-10h] 0 +
jl loc_102427D  +
cmp dword ptr [ebp-20h] 0 +
jnz loc_102427D  +
lea ecx [ebp-14h] +
push ecx  +
lea ecx [ebp-1Ch] +
call sub_1024680  +
push eax  +
mov ecx [ebp+8] +
call sub_1023C90  +
mov [ebp-10h] eax +
cmp dword ptr [ebp-10h] 0 +
jl loc_102427D  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-14h] +
call sub_1024830  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-24h] +
call sub_1025550  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_1023C70  +
jmp loc_10242CC  +
mov eax [ebp+10h] +
and eax 0Eh +
jz loc_10242C0  +
mov ecx [ebp+10h] +
push ecx  +
mov ecx [ebp-14h] +
call sub_1024830  +
mov edx [ebp-14h] +
push edx  +
mov eax [ebp-18h] +
push eax  +
mov ecx [ebp+8] +
call sub_1023DE0  +
jmp loc_10242CC  +
mov ecx [ebp+10h] +
push ecx  +
mov ecx [ebp-14h] +
call sub_1024830  +
mov ecx [ebp+8] +
add ecx 14h +
call sub_101A980  +
cmp dword ptr [ebp-14h] 0 +
jz loc_10242F2  +
mov edx [ebp-14h] +
mov eax [edx] +
mov ecx [ebp-14h] +
push ecx  +
mov edx [eax+8] +
call edx  +
mov dword ptr [ebp-14h] 0 +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1024329  +
jmp loc_102435E  +
jmp loc_102435E  +
mov ecx [ebp+8] +
add ecx 14h +
call sub_101A960  +
lea eax [ebp-8] +
push eax  +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp+8] +
call sub_1023E30  +
cmp dword ptr [ebp-4] 0 +
jz loc_102435E  +
mov eax [ebp-4] +
push eax  +
mov ecx [ebp-8] +
push ecx  +
mov ecx [ebp+8] +
call sub_1023DE0  +
mov ecx [ebp+8] +
add ecx 14h +
call sub_101A980  +
cmp dword ptr [ebp-4] 0 +
jz loc_1024384  +
mov edx [ebp-4] +
mov eax [edx] +
mov ecx [ebp-4] +
push ecx  +
mov edx [eax+8] +
call edx  +
mov dword ptr [ebp-4] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1035F98  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ebp-10h] 0 +
cmp dword ptr [ebp+14h] 0 +
jnz loc_10243D9  +
jmp loc_10244EC  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_10243E4  +
jmp loc_10244EC  +
mov ecx [ebp+8] +
add ecx 14h +
call sub_101A960  +
mov ecx [ebp+8] +
add ecx 4 +
call sub_1024680  +
mov [ebp-18h] eax +
cmp dword ptr [ebp-18h] 0 +
jz loc_102444D  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-18h] +
push ecx  +
mov ecx [ebp+8] +
add ecx 4 +
call sub_1027580  +
mov edx [ebp+14h] +
push edx  +
mov ecx [ebp-14h] +
call sub_101CB50  +
test eax eax +
jz loc_102443D  +
push 1  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp-14h] +
call sub_1024850  +
mov dword ptr [ebp-10h] 1 +
jmp loc_102444B  +
push 0  +
mov ecx [ebp+10h] +
push ecx  +
mov ecx [ebp-14h] +
call sub_1024850  +
jmp loc_10243FD  +
***
cmp dword ptr [ebp-10h] 0 +
jnz loc_10244CC  +
lea ecx [ebp-1Ch] +
call sub_1012550  +
mov dword ptr [ebp-4] 0 +
mov ecx [ebp+8] +
add ecx 2Ch +
call sub_1024680  +
mov [ebp-24h] eax +
lea ecx [ebp-1Ch] +
call sub_10114A0  +
push eax  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp-24h] +
push eax  +
mov ecx [ebp-24h] +
mov edx [ecx] +
mov eax [edx+14h] +
call eax  +
mov [ebp-20h] eax +
cmp dword ptr [ebp-20h] 0 +
jl loc_10244BD  +
lea ecx [ebp-14h] +
push ecx  +
lea ecx [ebp-1Ch] +
call sub_1024680  +
push eax  +
mov ecx [ebp+8] +
call sub_1023C90  +
cmp dword ptr [ebp-14h] 0 +
jz loc_10244BD  +
push 1  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-14h] +
call sub_1024850  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_1023C70  +
push 0  +
push 0  +
push 40Fh  +
mov eax hWnd +
push eax  +
call ds:PostMessageW  +
mov ecx [ebp+8] +
add ecx 14h +
call sub_101A980  +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov dword ptr [ebp-0Ch] 0 +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1024529  +
jmp loc_1024572  +
jmp loc_1024572  +
push 0  +
lea eax [ebp-0Ch] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
call sub_1023E30  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jge loc_1024548  +
jmp loc_1024572  +
jmp loc_1024572  +
sub esp 14h +
mov edx esp +
mov eax [ebp+10h] +
mov [edx] eax +
mov ecx [ebp+14h] +
mov [edx+4] ecx +
mov eax [ebp+18h] +
mov [edx+8] eax +
mov ecx [ebp+1Ch] +
mov [edx+0Ch] ecx +
mov eax [ebp+20h] +
mov [edx+10h] eax +
mov ecx [ebp-0Ch] +
call sub_1023620  +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_102458D  +
mov ecx [ebp-0Ch] +
mov edx [ecx] +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [edx+8] +
call ecx  +
mov dword ptr [ebp-0Ch] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov [ebp+var_8] 0 +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov [ebp+cy] eax +
push 14h  +
push 8  +
push 2A021h  +
mov eax [ebp+cy] +
push eax  +
mov ecx [ebp+cy] +
push ecx  +
call ds:ImageList_Create  +
mov himl eax +
cmp himl 0 +
jnz loc_10245F1  +
mov [ebp+var_8] 80004005h +
jmp loc_1024607  +
jmp loc_1024607  +
push 5  +
call ds:GetSysColor  +
push eax  +
mov edx himl +
push edx  +
call ds:ImageList_SetBkColor  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_10128C0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+ppv] ecx +
mov eax [ebp+ppv] +
push eax  +
push offset stru_10024E4  +
mov ecx [ebp+dwClsContext] +
push ecx  +
mov edx [ebp+pUnkOuter] +
push edx  +
mov eax [ebp+rclsid] +
push eax  +
call ds:CoCreateInstance  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024680  +
cmp eax [ebp+arg_0] +
jz loc_10246CA  +
push offset dword_10024F4  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1012C20  +
jmp loc_10246D2  +
mov ecx [ebp+var_4] +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+4] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+8] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+arg_4] +
shr eax 1 +
mov [ebp+var_8] eax +
push 7FFFFFFFh  +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_1009560  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_1024766  +
push 7FFFFFFEh  +
mov eax [ebp+arg_8] +
push eax  +
push 0  +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_1024780  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] 0 +
mov [ebp+var_4] 0 +
cmp [ebp+arg_4] 0 +
jz loc_10247E7  +
cmp [ebp+arg_10] 0 +
jz loc_10247E7  +
mov eax [ebp+arg_C] +
movzx ecx word ptr [eax] +
test ecx ecx +
jz loc_10247E7  +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_C] +
mov cx [eax] +
mov [edx] cx +
mov edx [ebp+arg_0] +
add edx 2 +
mov [ebp+arg_0] edx +
mov eax [ebp+arg_C] +
add eax 2 +
mov [ebp+arg_C] eax +
mov ecx [ebp+arg_4] +
sub ecx 1 +
mov [ebp+arg_4] ecx +
mov edx [ebp+arg_10] +
sub edx 1 +
mov [ebp+arg_10] edx +
mov eax [ebp+var_4] +
add eax 1 +
mov [ebp+var_4] eax +
jmp loc_1024796  +
cmp [ebp+arg_4] 0 +
jnz loc_1024806  +
mov ecx [ebp+arg_0] +
sub ecx 2 +
mov [ebp+arg_0] ecx +
mov edx [ebp+var_4] +
sub edx 1 +
mov [ebp+var_4] edx +
mov [ebp+var_8] 8007007Ah +
xor eax eax +
mov ecx [ebp+arg_0] +
mov [ecx] ax +
cmp [ebp+arg_8] 0 +
jz loc_102481C  +
mov edx [ebp+arg_8] +
mov eax [ebp+var_4] +
mov [edx] eax +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+14h] ecx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_4] +
mov [ecx+eax*4+38h] edx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 0 +
jz loc_1024894  +
mov eax [ebp+10h] +
mov dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024C10  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1002504 +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_0] +
mov [ecx+24h] edx +
mov eax [ebp+var_4] +
mov dword ptr [eax+4Ch] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+50h] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+54h] 0 +
xor eax eax +
mov ecx [ebp+var_4] +
add ecx 28h +
mov [ecx] eax +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_1024943  +
jmp loc_1024A62  +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_102497D  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_1024AE0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102497D  +
mov eax 1 +
jmp loc_1024A64  +
cmp dword ptr [ebp+0Ch] 114h +
jnz loc_10249BA  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_1024F50  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10249BA  +
mov eax 1 +
jmp loc_1024A64  +
cmp dword ptr [ebp+0Ch] 113h +
jnz loc_10249F4  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1025090  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10249F4  +
mov eax 1 +
jmp loc_1024A64  +
cmp dword ptr [ebp+0Ch] 5 +
jnz loc_1024A2B  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1024F30  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1024A2B  +
mov eax 1 +
jmp loc_1024A64  +
cmp dword ptr [ebp+0Ch] 2 +
jnz loc_1024A62  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1024C30  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1024A62  +
mov eax 1 +
jmp loc_1024A64  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1024AB0  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1024A95  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1002504 +
mov ecx [ebp+var_4] +
call sub_1014040  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1035FCB  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+hMenu] ecx +
push 24h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_14] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_14] 0 +
jz loc_1024B31  +
mov ecx [ebp+var_14] +
call sub_1024BB0  +
mov [ebp+var_24] eax +
jmp loc_1024B38  +
mov [ebp+var_24] 0 +
mov eax [ebp+var_24] +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+hMenu] +
mov edx [ebp+var_10] +
mov [ecx+54h] edx +
mov eax [ebp+hMenu] +
cmp dword ptr [eax+54h] 0 +
jz loc_1024B8B  +
push 0  +
push ecx  +
mov ecx esp +
mov [ebp+var_18] esp +
push 0  +
call sub_1007F90  +
push 0  +
push 0  +
push 0  +
push ecx  +
mov ecx esp +
mov [ebp+var_1C] esp +
push 0  +
call sub_1007F90  +
mov ecx [ebp+hMenu] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+hMenu] +
mov ecx [eax+54h] +
call sub_1025190  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
mov eax 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024C10  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1002514 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_10194E0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
cmp dword ptr [eax+54h] 0 +
jz loc_1024C89  +
mov ecx [ebp+var_C] +
mov ecx [ecx+54h] +
call sub_1008B40  +
mov edx [ebp+var_C] +
mov eax [edx+54h] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
mov [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jz loc_1024C78  +
push 1  +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ebp+var_4] +
mov edx [eax+4] +
call edx  +
mov [ebp+var_10] eax +
jmp loc_1024C7F  +
mov [ebp+var_10] 0 +
mov eax [ebp+var_C] +
mov dword ptr [eax+54h] 0 +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov [ebp+var_50] ecx +
mov eax [ebp+var_50] +
mov ecx [eax+24h] +
add ecx 248h +
call sub_101A0A0  +
mov [ebp+var_C] eax +
mov [ebp+var_10] 0 +
cmp [ebp+var_C] 0 +
jnz loc_1024CD1  +
jmp loc_1024F25  +
mov ecx [ebp+var_50] +
cmp dword ptr [ecx+28h] 0 +
jnz loc_1024D16  +
lea edx [ebp+var_10] +
push edx  +
mov eax [ebp+var_50] +
mov ecx [eax+24h] +
add ecx 248h +
call sub_101E410  +
cmp [ebp+var_10] 0 +
jz loc_1024D16  +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_100D6B0  +
mov edx [ebp+var_50] +
mov eax [ebp+Rect.right] +
mov [edx+28h] eax +
mov ecx [ebp+var_50] +
mov edx [ebp+Rect.bottom] +
mov [ecx+2Ch] edx +
lea eax [ebp+var_34] +
push eax  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_100D6B0  +
mov ecx [ebp+var_50] +
mov eax [ebp+var_2C] +
cdq   +
idiv  dword ptr [ecx+28h] +
mov [ebp+var_4] eax +
mov edx [ebp+var_2C] +
add edx 2 +
mov [ebp+var_3C] edx +
mov eax [ebp+var_50] +
mov ecx [eax+2Ch] +
add ecx 2 +
mov [ebp+cy] ecx +
push 0  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_1025260  +
mov [ebp+var_14] eax +
mov edx [ebp+var_C] +
cmp edx [ebp+var_4] +
jg loc_1024D69  +
cmp [ebp+var_14] 0 +
jle loc_1024E26  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_100E090  +
and eax 100000h +
jnz loc_1024D8F  +
push 20h  +
push 100000h  +
push 0  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101C8B0  +
mov eax [ebp+var_C] +
sub eax [ebp+var_4] +
mov [ebp+var_40] eax +
cmp [ebp+var_14] 0 +
jle loc_1024DB6  +
mov ecx [ebp+var_C] +
sub ecx [ebp+var_4] +
cmp ecx [ebp+var_14] +
jl loc_1024DAB  +
jmp loc_1024DB6  +
mov edx [ebp+var_14] +
sub edx 1 +
mov [ebp+var_14] edx +
jmp loc_1024D98  +
mov eax [ebp+var_50] +
mov dword ptr [eax+30h] 1Ch +
mov ecx [ebp+var_50] +
mov dword ptr [ecx+34h] 17h +
mov edx [ebp+var_50] +
mov dword ptr [edx+38h] 0 +
mov eax [ebp+var_50] +
mov ecx [ebp+var_40] +
mov [eax+3Ch] ecx +
mov edx [ebp+var_50] +
mov dword ptr [edx+40h] 1 +
mov eax [ebp+var_50] +
mov ecx [ebp+var_14] +
mov [eax+44h] ecx +
push 1  +
mov edx [ebp+var_50] +
add edx 30h +
push edx  +
push 0  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_1025290  +
mov eax [ebp+var_50] +
mov dword ptr [eax+50h] 0 +
push 0  +
push 28h  +
push 204h  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101E4A0  +
jmp loc_1024E4C  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_100E090  +
and eax 100000h +
jz loc_1024E4C  +
push 20h  +
push 0  +
push 100000h  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101C8B0  +
mov ecx [ebp+var_50] +
mov edx [ebp+var_C] +
imul edx [ecx+28h] +
add edx 2 +
mov [ebp+var_8] edx +
push 6  +
mov eax [ebp+cy] +
push eax  +
mov ecx [ebp+var_8] +
push ecx  +
push 0  +
push 0  +
push 0  +
mov edx [ebp+var_50] +
mov ecx [edx+54h] +
add ecx 4 +
call sub_100E0E0  +
cmp [ebp+arg_0] 0 +
jz loc_1024F10  +
mov eax [ebp+var_50] +
mov ecx [eax+24h] +
add ecx 248h +
call sub_101A0A0  +
push eax  +
call ds:BeginDeferWindowPos  +
mov [ebp+hWinPosInfo] eax +
mov [ebp+x] 0 +
mov ecx [ebp+var_50] +
mov ecx [ecx+24h] +
add ecx 248h +
call sub_1024680  +
mov [ebp+var_4C] eax +
cmp [ebp+var_4C] 0 +
jz loc_1024F06  +
lea edx [ebp+var_10] +
push edx  +
lea eax [ebp+var_4C] +
push eax  +
mov ecx [ebp+var_50] +
mov ecx [ecx+24h] +
add ecx 248h +
call sub_1027580  +
push 5  +
push 0  +
push 0  +
push 0  +
mov edx [ebp+x] +
push edx  +
push 0  +
mov eax [ebp+var_10] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+hWinPosInfo] +
push edx  +
call ds:DeferWindowPos  +
mov eax [ebp+var_50] +
mov ecx [ebp+x] +
add ecx [eax+28h] +
mov [ebp+x] ecx +
jmp loc_1024EBA  +
mov edx [ebp+hWinPosInfo] +
push edx  +
call ds:EndDeferWindowPos  +
cmp [ebp+arg_0] 0 +
jz loc_1024F25  +
push 1  +
push 0  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_1010530  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
mov ecx [ebp+var_4] +
call sub_1024CA0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_4] +
and eax 0FFFFh +
mov [ebp+var_4] ax +
mov ecx [ebp+var_C] +
mov edx [ecx+44h] +
mov [ebp+var_8] edx +
movzx eax [ebp+var_4] +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 8 +
ja loc_102500F  +
mov ecx [ebp+var_10] +
jmp ds:off_1025064[ecx*4]  +
mov edx [ebp+var_C] +
mov eax [edx+38h] +
mov [ebp+var_8] eax +
jmp loc_102500F  +
mov ecx [ebp+var_C] +
mov edx [ecx+3Ch] +
mov [ebp+var_8] edx +
jmp loc_102500F  +
mov eax [ebp+var_8] +
add eax 1 +
mov ecx [ebp+var_C] +
cmp [ecx+3Ch] eax +
jge loc_1024FBA  +
mov edx [ebp+var_C] +
mov eax [edx+3Ch] +
mov [ebp+var_14] eax +
jmp loc_1024FC3  +
mov ecx [ebp+var_8] +
add ecx 1 +
mov [ebp+var_14] ecx +
mov edx [ebp+var_14] +
mov [ebp+var_8] edx +
jmp loc_102500F  +
mov eax [ebp+var_8] +
sub eax 1 +
mov ecx [ebp+var_C] +
cmp [ecx+38h] eax +
jle loc_1024FE4  +
mov edx [ebp+var_C] +
mov eax [edx+38h] +
mov [ebp+var_18] eax +
jmp loc_1024FED  +
mov ecx [ebp+var_8] +
sub ecx 1 +
mov [ebp+var_18] ecx +
mov edx [ebp+var_18] +
mov [ebp+var_8] edx +
jmp loc_102500F  +
mov eax [ebp+arg_4] +
shr eax 10h +
and eax 0FFFFh +
movzx ecx ax +
mov [ebp+var_8] ecx +
jmp loc_102500F  +
mov eax 1 +
jmp loc_102505C  +
mov edx [ebp+var_C] +
mov eax [edx+44h] +
cmp eax [ebp+var_8] +
jz loc_1025057  +
mov ecx [ebp+var_C] +
mov edx [ebp+var_8] +
mov [ecx+44h] edx +
push 1  +
mov eax [ebp+var_C] +
add eax 30h +
push eax  +
push 0  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_1025290  +
mov ecx [ebp+var_C] +
mov dword ptr [ecx+50h] 0 +
push 0  +
push 28h  +
push 204h  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_101E4A0  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov [ebp+var_20] ecx +
fld  ds:flt_1002530 +
fstp  [ebp+var_18] +
fld  ds:flt_100252C +
fstp  [ebp+var_14] +
fld  ds:flt_1002528 +
fstp  [ebp+var_10] +
fld  ds:flt_1002524 +
fstp  [ebp+var_C] +
fld1   +
fstp  [ebp+var_8] +
mov eax [ebp+var_20] +
mov ecx [ebp+var_20] +
mov edx [eax+44h] +
imul edx [ecx+28h] +
neg edx  +
mov [ebp+X] edx +
mov eax [ebp+var_20] +
mov ecx [ebp+X] +
sub ecx [eax+4Ch] +
mov [ebp+var_24] ecx +
fild  [ebp+var_24] +
mov edx [ebp+var_20] +
mov eax [edx+50h] +
fmul  [ebp+eax*4+var_18] +
call _ftol2_sse  +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_20] +
mov edx [ecx+4Ch] +
add edx [ebp+var_1C] +
mov [ebp+X] edx +
push 5  +
push 0  +
push 0  +
push 0  +
mov eax [ebp+X] +
push eax  +
push 0  +
mov ecx [ebp+var_20] +
mov ecx [ecx+54h] +
add ecx 4 +
call sub_100E0E0  +
mov edx [ebp+var_20] +
mov eax [edx+50h] +
add eax 1 +
mov ecx [ebp+var_20] +
mov [ecx+50h] eax +
mov edx [ebp+var_20] +
cmp dword ptr [edx+50h] 5 +
jnz loc_1025165  +
mov eax [ebp+var_20] +
mov ecx [ebp+X] +
mov [eax+4Ch] ecx +
mov edx [ebp+var_20] +
mov dword ptr [edx+50h] 0 +
push 204h  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_101E4D0  +
mov eax [ebp+var_20] +
mov ecx [eax+24h] +
call sub_10166A0  +
push 1  +
push 0  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_1010530  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov [ebp+var_8] ecx +
call sub_1025230  +
cmp dword ptr [eax+30h] 0 +
jnz loc_10251B6  +
call sub_1025250  +
mov esi eax +
call sub_1025230  +
mov [eax+30h] esi +
mov eax [ebp+var_8] +
add eax 20h +
push eax  +
call sub_1025230  +
mov ecx eax +
call sub_10090B0  +
mov [ebp+var_4] ax +
mov ecx [ebp+dwStyle] +
push ecx  +
call sub_1019910  +
mov [ebp+dwStyle] eax +
mov edx [ebp+dwExStyle] +
push edx  +
call sub_1019930  +
mov [ebp+dwExStyle] eax +
cmp [ebp+lpWindowName] 0 +
jnz loc_10251F3  +
call sub_1025250  +
mov [ebp+lpWindowName] eax +
mov eax [ebp+lpParam] +
push eax  +
movzx ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+hMenu] +
push edx  +
mov eax [ebp+dwExStyle] +
push eax  +
mov ecx [ebp+dwStyle] +
push ecx  +
mov edx [ebp+lpWindowName] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hWndParent] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10140C0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset unk_103B328 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+nBar] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:GetScrollPos  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SetScrollInfo  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
mov [ebp-4] eax +
mov ecx [ebp-4] +
call sub_1025660  +
mov ecx [ebp-4] +
mov edx [ecx] +
mov eax [ebp-4] +
push eax  +
mov ecx [edx+8] +
call ecx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
mov eax [ebp+arg_0] +
push eax  +
push offset loc_10252C0  +
call ds:QueueUserWorkItem  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
jz loc_1025338  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1034B60  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1036011  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_1023950  +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_1002564 +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1027180  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_1027240  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
add ecx 0Ch +
call sub_1027240  +
mov byte ptr [ebp+var_4] 2 +
mov edx [ebp+var_10] +
mov eax [ebp+arg_4] +
mov [edx+10h] eax +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+14h] 0 +
mov ecx [ebp+var_10] +
add ecx 18h +
call sub_101A8A0  +
mov edx [ebp+var_10] +
mov dword ptr [edx+30h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+34h] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+38h] 4 +
mov edx [ebp+var_10] +
mov dword ptr [edx+3Ch] 4 +
mov eax [ebp+var_10] +
mov dword ptr [eax+40h] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+44h] 0 +
mov edx [ebp+var_10] +
mov dword ptr [edx+48h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+4Ch] 1 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+50h] 0 +
mov edx [ebp+var_10] +
mov dword ptr [edx+54h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+58h] 0 +
mov ecx [ebp+var_10] +
add ecx 60h +
mov edx ds:dword_1002554 +
mov [ecx] edx +
mov eax ds:dword_1002558 +
mov [ecx+4] eax +
mov edx ds:dword_100255C +
mov [ecx+8] edx +
mov eax ds:dword_1002560 +
mov [ecx+0Ch] eax +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+70h] 1 +
push offset dword_103B7F4  +
call ds:InterlockedIncrement  +
cmp stru_103B7E4.Data1 0 +
jnz loc_1025499  +
push offset stru_103B7E4  +
call ds:CoCreateGuid  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 0 +
jz loc_10254F4  +
mov eax [ebp+10h] +
mov dword ptr [eax] 0 +
mov eax 80004002h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1025570  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1025535  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1023C70  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_103606C  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_1002564 +
mov [ebp+var_4] 3 +
mov ecx [ebp+var_10] +
call sub_1025660  +
push 0  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1012890  +
push 0  +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_1012890  +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+34h] 0 +
jz loc_10255EA  +
mov edx [ebp+var_10] +
mov eax [edx+34h] +
push eax  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+34h] 0 +
mov edx [ebp+var_10] +
cmp dword ptr [edx+30h] 0 +
jz loc_102560A  +
mov eax [ebp+var_10] +
mov ecx [eax+30h] +
push ecx  +
call ds:DestroyIcon  +
mov edx [ebp+var_10] +
mov dword ptr [edx+30h] 0 +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_10] +
add ecx 18h +
call sub_101A940  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
add ecx 0Ch +
call sub_1025550  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_1025550  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1025550  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1025860  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_100BEE0  +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_100BEE0  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10256C2  +
mov ecx [ebp-4] +
add ecx 18h +
call sub_101A960  +
mov ecx [ebp-4] +
mov dword ptr [ecx+4Ch] 2 +
mov ecx [ebp-4] +
add ecx 18h +
call sub_101A980  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_8] 0 +
mov eax [ebp+var_14] +
cmp dword ptr [eax+58h] 0 +
jnz loc_102572F  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_14] +
push ecx  +
mov edx [ebp+var_18] +
push edx  +
mov eax [ebp+var_18] +
mov ecx [eax] +
mov edx [ecx+28h] +
call edx  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1025725  +
jmp loc_1025833  +
jmp loc_1025833  +
mov eax [ebp+var_14] +
mov dword ptr [eax+58h] 1 +
mov ecx [ebp+var_14] +
cmp dword ptr [ecx+50h] 0 +
jnz loc_1025833  +
mov ecx [ebp+var_14] +
add ecx 18h +
call sub_101A960  +
mov [ebp+var_8] 1 +
mov edx [ebp+var_14] +
cmp dword ptr [edx+40h] 0 +
jnz loc_102577A  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_1C] eax +
mov eax [ebp+var_14] +
add eax 40h +
push eax  +
mov ecx [ebp+var_1C] +
push ecx  +
mov edx [ebp+var_1C] +
mov eax [edx] +
mov ecx [eax+38h] +
call ecx  +
mov edx [ebp+var_14] +
cmp dword ptr [edx+40h] 0 +
jz loc_1025833  +
mov eax [ebp+var_14] +
cmp dword ptr [eax+48h] 0 +
jnz loc_1025833  +
mov ecx [ebp+var_14] +
mov edx [ecx+40h] +
push edx  +
push 0  +
push 100400h  +
call ds:OpenProcess  +
mov ecx [ebp+var_14] +
mov [ecx+44h] eax +
mov edx [ebp+var_14] +
cmp dword ptr [edx+44h] 0 +
jz loc_1025818  +
lea eax [ebp+ExitCode] +
push eax  +
mov ecx [ebp+var_14] +
mov edx [ecx+44h] +
push edx  +
call ds:GetExitCodeProcess  +
test eax eax +
jz loc_10257E2  +
cmp [ebp+ExitCode] 103h +
jz loc_10257E0  +
mov [ebp+var_4] 80004005h +
jmp loc_1025833  +
jmp loc_1025833  +
jmp loc_10257F5  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_4] eax +
jmp loc_1025833  +
jmp loc_1025833  +
push 8  +
push 0FFFFFFFFh  +
mov eax [ebp+var_14] +
push eax  +
push offset loc_1025690  +
mov ecx [ebp+var_14] +
mov edx [ecx+44h] +
push edx  +
mov eax [ebp+var_14] +
add eax 48h +
push eax  +
call ds:RegisterWaitForSingleObject  +
jmp loc_1025833  +
call ds:__imp_GetLastError  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 5 +
jz loc_1025833  +
mov ecx [ebp+var_10] +
push ecx  +
call sub_100F570  +
mov [ebp+var_4] eax +
cmp [ebp+var_8] 0 +
jz loc_1025844  +
mov ecx [ebp+var_14] +
add ecx 18h +
call sub_101A980  +
cmp [ebp+var_4] 0 +
jge loc_1025852  +
mov ecx [ebp+var_14] +
call sub_1025860  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
cmp dword ptr [eax+58h] 0 +
jz loc_1025894  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_C] eax +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+var_C] +
push edx  +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov edx [ecx+2Ch] +
call edx  +
mov eax [ebp+var_8] +
mov dword ptr [eax+58h] 0 +
mov ecx [ebp+var_8] +
add ecx 18h +
call sub_101A960  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+48h] 0 +
jz loc_10258FA  +
push 0  +
push 0  +
push 0  +
push 0  +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
mov edx [ebp+hObject] +
push edx  +
mov eax [ebp+var_8] +
mov ecx [eax+48h] +
push ecx  +
call ds:UnregisterWaitEx  +
mov edx [ebp+var_8] +
mov dword ptr [edx+48h] 0 +
cmp [ebp+hObject] 0 +
jz loc_10258FA  +
push 0FFFFFFFFh  +
mov eax [ebp+hObject] +
push eax  +
call ds:WaitForSingleObject  +
mov ecx [ebp+hObject] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_8] +
cmp dword ptr [edx+44h] 0 +
jz loc_102591A  +
mov eax [ebp+var_8] +
mov ecx [eax+44h] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_8] +
mov dword ptr [edx+44h] 0 +
mov ecx [ebp+var_8] +
add ecx 18h +
call sub_101A980  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset dword_103B7F4  +
call ds:InterlockedIncrement  +
mov eax [ebp+8] +
add eax 70h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
add eax 70h +
push eax  +
call ds:InterlockedDecrement  +
mov [ebp-4] eax +
push offset dword_103B7F4  +
call ds:InterlockedDecrement  +
cmp dword ptr [ebp-4] 0 +
jnz loc_10259B6  +
mov ecx [ebp+8] +
mov [ebp-0Ch] ecx +
mov edx [ebp-0Ch] +
mov [ebp-8] edx +
cmp dword ptr [ebp-8] 0 +
jz loc_10259AF  +
push 1  +
mov eax [ebp-8] +
mov edx [eax] +
mov ecx [ebp-8] +
mov eax [edx+28h] +
call eax  +
mov [ebp-10h] eax +
jmp loc_10259B6  +
mov dword ptr [ebp-10h] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_8] +
add ecx 8 +
call sub_1027200  +
push 0  +
mov ecx [ebp+var_8] +
add ecx 8 +
call sub_1012890  +
movzx eax al +
test eax eax +
jz loc_1025A17  +
mov [ebp+var_4] 80004002h +
jmp loc_1025B68  +
jmp loc_1025B68  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_8] +
add ecx 0Ch +
call sub_1027260  +
push 0  +
mov ecx [ebp+var_8] +
add ecx 0Ch +
call sub_1012890  +
movzx ecx al +
test ecx ecx +
jz loc_1025A53  +
mov [ebp+var_4] 80004002h +
jmp loc_1025B68  +
jmp loc_1025B68  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_C] eax +
mov edx [ebp+var_C] +
mov eax [edx] +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [eax+3Ch] +
call edx  +
neg eax  +
sbb eax eax +
add eax 1 +
mov ecx [ebp+var_8] +
mov [ecx+50h] eax +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_10] eax +
mov edx [ebp+var_8] +
add edx 54h +
push edx  +
mov eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_10] +
mov edx [ecx] +
mov eax [edx+4Ch] +
call eax  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1025AB2  +
jmp loc_1025B68  +
jmp loc_1025B68  +
mov ecx [ebp+var_8] +
call sub_10256D0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1025ACD  +
jmp loc_1025B68  +
jmp loc_1025B68  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_14] eax +
mov ecx [ebp+var_8] +
add ecx 4Ch +
push ecx  +
mov edx [ebp+var_14] +
push edx  +
mov eax [ebp+var_14] +
mov ecx [eax] +
mov edx [ecx+0Ch] +
call edx  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1025AFD  +
jmp loc_1025B68  +
jmp loc_1025B68  +
mov ecx [ebp+var_8] +
call sub_1025B80  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1025B12  +
jmp loc_1025B68  +
jmp loc_1025B68  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_18] eax +
mov eax [ebp+var_8] +
add eax 60h +
push eax  +
mov ecx [ebp+var_18] +
push ecx  +
mov edx [ebp+var_18] +
mov eax [edx] +
mov ecx [eax+20h] +
call ecx  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1025B42  +
jmp loc_1025B68  +
jmp loc_1025B68  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_1C] eax +
mov edx [ebp+var_8] +
add edx 5Ch +
push edx  +
mov eax [ebp+var_1C] +
push eax  +
mov ecx [ebp+var_1C] +
mov edx [ecx] +
mov eax [edx+50h] +
call eax  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 134h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_24] eax +
mov [ebp+var_12C] ecx +
mov [ebp+var_10] 0 +
mov [ebp+var_8] 0 +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_12C] +
add ecx 18h +
call sub_101A960  +
mov eax [ebp+var_12C] +
xor ecx ecx +
cmp dword ptr [eax+34h] 0 +
setnz cl  +
mov [ebp+var_8] ecx +
mov edx [ebp+var_12C] +
xor eax eax +
cmp dword ptr [edx+30h] 0 +
setnz al  +
mov [ebp+var_4] eax +
cmp [ebp+var_8] 0 +
jnz loc_1025C79  +
mov [ebp+pv] 0 +
mov ecx [ebp+var_12C] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_130] eax +
lea ecx [ebp+pv] +
push ecx  +
mov edx [ebp+var_130] +
push edx  +
mov eax [ebp+var_130] +
mov ecx [eax] +
mov edx [ecx+10h] +
call edx  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_1025C62  +
mov eax [ebp+pv] +
movzx ecx word ptr [eax] +
test ecx ecx +
jz loc_1025C62  +
mov edx [ebp+var_12C] +
add edx 34h +
push edx  +
mov eax [ebp+pv] +
push eax  +
call sub_102AE80  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jl loc_1025C62  +
mov ecx [ebp+var_12C] +
mov dword ptr [ecx+3Ch] 0 +
mov [ebp+var_8] 1 +
cmp [ebp+pv] 0 +
jz loc_1025C79  +
mov edx [ebp+pv] +
push edx  +
call ds:CoTaskMemFree  +
mov [ebp+pv] 0 +
cmp [ebp+var_4] 0 +
jnz loc_1025D2A  +
mov [ebp+lpSrc] 0 +
mov ecx [ebp+var_12C] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_134] eax +
lea eax [ebp+lpSrc] +
push eax  +
mov ecx [ebp+var_134] +
push ecx  +
mov edx [ebp+var_134] +
mov eax [edx] +
mov ecx [eax+18h] +
call ecx  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jl loc_1025D13  +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov [ebp+var_1C] eax +
mov edx [ebp+lpSrc] +
push edx  +
call ds:PathParseIconLocationW  +
mov [ebp+var_20] eax +
mov eax [ebp+var_1C] +
push eax  +
mov ecx [ebp+var_12C] +
add ecx 30h +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov eax [ebp+lpSrc] +
push eax  +
call sub_1034C10  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jl loc_1025D13  +
mov ecx [ebp+var_12C] +
mov dword ptr [ecx+38h] 0 +
mov [ebp+var_4] 1 +
cmp [ebp+lpSrc] 0 +
jz loc_1025D2A  +
mov edx [ebp+lpSrc] +
push edx  +
call ds:CoTaskMemFree  +
mov [ebp+lpSrc] 0 +
mov eax [ebp+var_12C] +
cmp dword ptr [eax+40h] 0 +
jz loc_1025E43  +
cmp [ebp+var_8] 0 +
jnz loc_1025DDD  +
mov ecx [ebp+var_12C] +
add ecx 34h +
push ecx  +
mov edx [ebp+var_12C] +
mov eax [edx+40h] +
push eax  +
call sub_102AAE0  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_1025D75  +
mov ecx [ebp+var_12C] +
mov dword ptr [ecx+3Ch] 1 +
jmp loc_1025DDD  +
mov edx [ebp+var_12C] +
add edx 34h +
push edx  +
mov eax [ebp+var_12C] +
mov ecx [eax+40h] +
push ecx  +
call sub_102AB40  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_1025DA6  +
mov edx [ebp+var_12C] +
mov dword ptr [edx+3Ch] 2 +
jmp loc_1025DDD  +
push 80h  +
lea eax [ebp+Buffer] +
push eax  +
push 1F8h  +
mov ecx hInstance +
push ecx  +
call ds:LoadStringW  +
mov edx [ebp+var_12C] +
add edx 34h +
push edx  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1034B60  +
mov [ebp+var_C] eax +
cmp [ebp+var_4] 0 +
jnz loc_1025E43  +
mov ecx [ebp+var_12C] +
add ecx 30h +
push ecx  +
mov edx [ebp+var_12C] +
mov eax [edx+40h] +
push eax  +
call sub_102ACB0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1025E14  +
mov ecx [ebp+var_12C] +
mov dword ptr [ecx+38h] 1 +
jmp loc_1025E43  +
mov edx [ebp+var_12C] +
add edx 30h +
push edx  +
mov eax [ebp+var_12C] +
mov ecx [eax+40h] +
push ecx  +
call sub_102ADC0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1025E43  +
mov edx [ebp+var_12C] +
mov dword ptr [edx+38h] 2 +
mov ecx [ebp+var_12C] +
add ecx 18h +
call sub_101A980  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_24] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov [ebp+lParam] ecx +
mov [ebp+pv] 0 +
mov [ebp+var_4] 0 +
mov [ebp+wParam] 0 +
mov eax [ebp+lParam] +
cmp dword ptr [eax+3Ch] 1 +
jnz loc_1025EAB  +
lea ecx [ebp+pv] +
push ecx  +
mov edx [ebp+lParam] +
mov eax [edx+40h] +
push eax  +
call sub_102AAE0  +
jmp loc_1025EC4  +
mov ecx [ebp+lParam] +
cmp dword ptr [ecx+3Ch] 2 +
jnz loc_1025EC4  +
lea edx [ebp+pv] +
push edx  +
mov eax [ebp+lParam] +
mov ecx [eax+40h] +
push ecx  +
call sub_102AB40  +
mov edx [ebp+lParam] +
cmp dword ptr [edx+38h] 1 +
jnz loc_1025EDF  +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+lParam] +
mov edx [ecx+40h] +
push edx  +
call sub_102ACB0  +
jmp loc_1025EF8  +
mov eax [ebp+lParam] +
cmp dword ptr [eax+38h] 2 +
jnz loc_1025EF8  +
lea ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+lParam] +
mov eax [edx+40h] +
push eax  +
call sub_102ADC0  +
mov ecx [ebp+lParam] +
add ecx 18h +
call sub_101A960  +
cmp [ebp+pv] 0 +
jz loc_1025FD0  +
mov ecx [ebp+lParam] +
cmp dword ptr [ecx+34h] 0 +
jz loc_1025F7E  +
mov edx [ebp+lParam] +
mov eax [edx+34h] +
mov [ebp+var_14] eax +
mov ecx [ebp+pv] +
mov [ebp+var_18] ecx +
mov edx [ebp+var_18] +
mov ax [edx] +
mov [ebp+var_1A] ax +
mov ecx [ebp+var_14] +
cmp ax [ecx] +
jnz loc_1025F6A  +
cmp [ebp+var_1A] 0 +
jz loc_1025F61  +
mov edx [ebp+var_18] +
mov ax [edx+2] +
mov [ebp+var_1C] ax +
mov ecx [ebp+var_14] +
cmp ax [ecx+2] +
jnz loc_1025F6A  +
add [ebp+var_18] 4 +
add [ebp+var_14] 4 +
cmp [ebp+var_1C] 0 +
jnz loc_1025F25  +
mov [ebp+var_20] 0 +
jmp loc_1025F72  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
mov [ebp+var_20] edx +
mov eax [ebp+var_20] +
mov [ebp+var_24] eax +
cmp [ebp+var_24] 0 +
jz loc_1025FB9  +
mov ecx [ebp+lParam] +
cmp dword ptr [ecx+34h] 0 +
jz loc_1025F9E  +
mov edx [ebp+lParam] +
mov eax [edx+34h] +
push eax  +
call ds:CoTaskMemFree  +
mov ecx [ebp+lParam] +
mov dword ptr [ecx+34h] 0 +
mov edx [ebp+lParam] +
mov eax [ebp+pv] +
mov [edx+34h] eax +
mov [ebp+pv] 0 +
mov ecx [ebp+wParam] +
or ecx 2 +
mov [ebp+wParam] ecx +
jmp loc_1025FD0  +
cmp [ebp+pv] 0 +
jz loc_1025FD0  +
mov edx [ebp+pv] +
push edx  +
call ds:CoTaskMemFree  +
mov [ebp+pv] 0 +
cmp [ebp+var_4] 0 +
jz loc_1026008  +
mov eax [ebp+lParam] +
cmp dword ptr [eax+30h] 0 +
jz loc_1025FF6  +
mov ecx [ebp+lParam] +
mov edx [ecx+30h] +
push edx  +
call ds:DestroyIcon  +
mov eax [ebp+lParam] +
mov dword ptr [eax+30h] 0 +
mov ecx [ebp+lParam] +
mov edx [ebp+var_4] +
mov [ecx+30h] edx +
mov eax [ebp+wParam] +
or eax 1 +
mov [ebp+wParam] eax +
mov ecx [ebp+lParam] +
add ecx 18h +
call sub_101A980  +
cmp [ebp+wParam] 0 +
jz loc_102604B  +
mov ecx [ebp+lParam] +
cmp dword ptr [ecx+14h] 0 +
jz loc_102604B  +
mov edx [ebp+lParam] +
mov eax [edx] +
mov ecx [ebp+lParam] +
push ecx  +
mov edx [eax+4] +
call edx  +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
push 41Ah  +
mov edx [ebp+lParam] +
mov ecx [edx+14h] +
add ecx 4 +
call sub_101A570  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+wParam] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+wParam] +
cmp dword ptr [eax+4Ch] 2 +
jnz loc_10260DD  +
mov ecx [ebp+wParam] +
add ecx 18h +
call sub_101A960  +
mov ecx [ebp+wParam] +
cmp dword ptr [ecx+10h] 0 +
jz loc_10260B0  +
mov edx [ebp+wParam] +
mov eax [edx+10h] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [ebp+var_4] +
push eax  +
mov ecx [edx+4] +
call ecx  +
mov edx [ebp+wParam] +
mov dword ptr [edx+10h] 0 +
mov ecx [ebp+wParam] +
add ecx 18h +
call sub_101A980  +
cmp [ebp+var_4] 0 +
jz loc_10260DB  +
mov eax [ebp+wParam] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1027050  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov eax [ebp+var_4] +
push eax  +
mov ecx [edx+8] +
call ecx  +
jmp loc_10260EE  +
mov edx [ebp+wParam] +
cmp dword ptr [edx+50h] 0 +
jnz loc_10260EE  +
mov ecx [ebp+wParam] +
call sub_1025E70  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_8] +
add ecx 18h +
call sub_101A960  +
mov eax [ebp+var_8] +
mov ecx [eax+34h] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_1025310  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_8] +
add ecx 18h +
call sub_101A980  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov [ebp+var_4] 80004005h +
mov ecx [ebp+var_C] +
add ecx 18h +
call sub_101A960  +
mov eax [ebp+var_C] +
cmp dword ptr [eax+50h] 0 +
jnz loc_10261AF  +
mov ecx [ebp+var_C] +
cmp dword ptr [ecx+40h] 0 +
jz loc_10261AF  +
mov [ebp+var_8] 0 +
lea edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_C] +
mov ecx [eax+40h] +
push ecx  +
call sub_102AF00  +
test eax eax +
jz loc_10261AF  +
cmp [ebp+var_8] 0 +
jz loc_10261AF  +
mov edx [ebp+arg_0] +
mov eax [ebp+var_8] +
mov [edx] eax +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_C] +
add ecx 18h +
call sub_101A980  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
add eax 60h +
push eax  +
mov ecx [ebp+var_8] +
add ecx 60h +
push ecx  +
call sub_1016E90  +
mov ecx [ebp+var_8] +
add ecx 18h +
call sub_101A960  +
mov edx [ebp+var_8] +
cmp dword ptr [edx+40h] 0 +
jnz loc_1026225  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+40h] 0 +
jz loc_1026225  +
mov ecx [ebp+var_8] +
mov edx [ebp+arg_0] +
mov eax [edx+40h] +
mov [ecx+40h] eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_8] +
add ecx 18h +
call sub_101A980  +
cmp [ebp+var_4] 0 +
jz loc_102623E  +
mov ecx [ebp+var_8] +
call sub_10256D0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036098  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_1C] ecx +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov [ebp+var_14] 0 +
cmp [ebp+arg_4] 0 +
jnz loc_102629F  +
mov [ebp+var_14] 80070057h +
jmp loc_10262F3  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_1024680  +
mov [ebp+var_20] eax +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+var_20] +
mov edx [ecx] +
mov eax [edx+54h] +
call eax  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_10262CF  +
jmp loc_10262F3  +
lea ecx [ebp+var_10] +
call sub_1024680  +
mov [ebp+var_24] eax +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_24] +
push eax  +
mov ecx [ebp+var_24] +
mov edx [ecx] +
mov eax [edx+14h] +
call eax  +
mov [ebp+var_14] eax +
mov ecx [ebp+var_14] +
mov [ebp+var_18] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A960  +
mov eax [ebp+8] +
cmp dword ptr [eax+34h] 0 +
jz loc_1026363  +
mov ecx [ebp+8] +
mov edx [ecx+34h] +
push edx  +
call ds:CoTaskMemFree  +
mov eax [ebp+8] +
mov dword ptr [eax+34h] 0 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
call sub_1034B60  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jl loc_10263BC  +
mov eax [ebp+8] +
mov ecx [ebp-4] +
mov [eax+34h] ecx +
mov edx [ebp+8] +
mov dword ptr [edx+3Ch] 0 +
mov eax [ebp+8] +
cmp dword ptr [eax+14h] 0 +
jz loc_10263BC  +
mov ecx [ebp+8] +
mov edx [ecx] +
mov eax [ebp+8] +
push eax  +
mov ecx [edx+4] +
call ecx  +
mov edx [ebp+8] +
push edx  +
push 2  +
push 41Ah  +
mov eax [ebp+8] +
mov ecx [eax+14h] +
add ecx 4 +
call sub_101A570  +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A980  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov dword ptr [ebp-4] 0 +
mov eax [ebp+0Ch] +
mov [ebp-0Ch] eax +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov [ebp-8] eax +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A960  +
mov ecx [ebp-0Ch] +
push ecx  +
call ds:PathParseIconLocationW  +
mov [ebp-10h] eax +
mov edx [ebp-8] +
push edx  +
lea eax [ebp-4] +
push eax  +
lea ecx [ebp-10h] +
push ecx  +
mov edx [ebp-0Ch] +
push edx  +
call sub_1034C10  +
mov [ebp-14h] eax +
cmp dword ptr [ebp-14h] 0 +
jl loc_102649D  +
mov eax [ebp+8] +
cmp dword ptr [eax+30h] 0 +
jz loc_102645A  +
mov ecx [ebp+8] +
mov edx [ecx+30h] +
push edx  +
call ds:DestroyIcon  +
mov eax [ebp+8] +
mov dword ptr [eax+30h] 0 +
mov ecx [ebp+8] +
mov edx [ebp-4] +
mov [ecx+30h] edx +
mov eax [ebp+8] +
mov dword ptr [eax+38h] 0 +
mov ecx [ebp+8] +
cmp dword ptr [ecx+14h] 0 +
jz loc_102649D  +
mov edx [ebp+8] +
mov eax [edx] +
mov ecx [ebp+8] +
push ecx  +
mov edx [eax+4] +
call edx  +
mov eax [ebp+8] +
push eax  +
push 1  +
push 41Ah  +
mov ecx [ebp+8] +
mov ecx [ecx+14h] +
add ecx 4 +
call sub_101A570  +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A980  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset stru_103B7E4  +
mov eax [ebp+14h] +
push eax  +
call sub_101FC70  +
test eax eax +
jz loc_1026515  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+14h] 0 +
jz loc_1026515  +
mov edx [ebp+10h] +
and edx 0FFFFh +
movzx eax dx +
shl eax 10h +
or eax 1 +
push eax  +
fld  dword ptr [ebp+0Ch] +
fmul  ds:dbl_1002160 +
call _ftol2_sse  +
push eax  +
push 418h  +
mov ecx [ebp+8] +
mov ecx [ecx+14h] +
add ecx 4 +
call sub_101A570  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push offset stru_103B7E4  +
mov eax [ebp+18h] +
push eax  +
call sub_101FC70  +
test eax eax +
jz loc_1026594  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+14h] 0 +
jz loc_1026594  +
mov ecx [ebp+8] +
add ecx 8 +
call sub_1024680  +
mov [ebp-0Ch] eax +
lea edx [ebp-8] +
push edx  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp-0Ch] +
mov edx [ecx] +
mov eax [edx+10h] +
call eax  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jge loc_1026570  +
jmp loc_1026594  +
jmp loc_1026594  +
push 0  +
fld  dword ptr [ebp-8] +
fmul  ds:dbl_1002160 +
call _ftol2_sse  +
push eax  +
push 418h  +
mov ecx [ebp+8] +
mov ecx [ecx+14h] +
add ecx 4 +
call sub_101A570  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov dword ptr [ebp-4] 0 +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A960  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
add ecx 60h +
push ecx  +
call sub_101FC70  +
test eax eax +
jz loc_1026602  +
mov edx [ebp+0Ch] +
mov eax [ebp+8] +
add eax 60h +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov edx [edx+0Ch] +
mov [eax+0Ch] edx +
mov dword ptr [ebp-4] 1 +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A980  +
cmp dword ptr [ebp-4] 0 +
jz loc_1026641  +
mov eax [ebp+8] +
cmp dword ptr [eax+14h] 0 +
jz loc_1026641  +
mov ecx [ebp+8] +
mov edx [ecx] +
mov eax [ebp+8] +
push eax  +
mov ecx [edx+4] +
call ecx  +
push 0  +
mov edx [ebp+8] +
push edx  +
push 41Bh  +
mov eax hWnd +
push eax  +
call ds:PostMessageW  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A960  +
mov eax [ebp+8] +
mov ecx [eax+4Ch] +
mov [ebp-4] ecx +
mov edx [ebp+8] +
mov eax [edx+54h] +
and eax 40000000h +
neg eax  +
sbb eax eax +
neg eax  +
mov [ebp-5] al +
mov ecx [ebp+8] +
cmp dword ptr [ecx+50h] 0 +
jnz loc_102671A  +
mov edx [ebp-4] +
cmp edx [ebp+0Ch] +
jz loc_102671A  +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+4Ch] ecx +
mov edx [ebp+8] +
cmp dword ptr [edx+4Ch] 1 +
jnz loc_10266DB  +
mov eax [ebp+8] +
cmp dword ptr [eax+14h] 0 +
jnz loc_10266DB  +
mov ecx [ebp+8] +
mov edx [ecx] +
mov eax [ebp+8] +
push eax  +
mov ecx [edx+4] +
call ecx  +
push 0  +
mov edx [ebp+8] +
push edx  +
push 415h  +
mov eax hWnd +
push eax  +
call ds:PostMessageW  +
jmp loc_102671A  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+14h] 0 +
jz loc_102671A  +
mov edx [ebp+8] +
cmp dword ptr [edx+4Ch] 0 +
jnz loc_102671A  +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_102671A  +
mov eax [ebp+8] +
mov ecx [eax] +
mov edx [ebp+8] +
push edx  +
mov eax [ecx+4] +
call eax  +
mov ecx [ebp+8] +
push ecx  +
push 4  +
push 41Ah  +
mov edx [ebp+8] +
mov ecx [edx+14h] +
add ecx 4 +
call sub_101A570  +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A980  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax+50h] 0 +
jnz loc_102676E  +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A960  +
mov ecx [ebp+8] +
mov dword ptr [ecx+4Ch] 0 +
mov ecx [ebp+8] +
add ecx 18h +
call sub_101A980  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov ecx [ebp+8] +
add ecx 4 +
call sub_1024680  +
mov [ebp-0Ch] eax +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp-0Ch] +
push ecx  +
mov edx [ebp-0Ch] +
mov eax [edx] +
mov ecx [eax+50h] +
call ecx  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jl loc_1026800  +
fld  dword ptr [ebp-4] +
mov edx [ebp+8] +
fld  dword ptr [edx+5Ch] +
fucompp   +
fnstsw  ax +
test ah 44h +
jnp loc_1026800  +
mov eax [ebp+8] +
fld  dword ptr [ebp-4] +
fstp  dword ptr [eax+5Ch] +
push 0  +
fld  dword ptr [ebp-4] +
fnstcw  word ptr [ebp-0Eh] +
movzx eax word ptr [ebp-0Eh] +
or eax 0C00h +
mov [ebp-14h] eax +
fldcw  word ptr [ebp-14h] +
fistp  qword ptr [ebp-1Ch] +
fldcw  word ptr [ebp-0Eh] +
mov ecx [ebp-1Ch] +
push ecx  +
push 41Dh  +
mov edx [ebp+8] +
mov ecx [edx+14h] +
add ecx 4 +
call sub_101A570  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_10360CB  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_1023950  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1023950  +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_10025AC +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+4] offset off_1002598 +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_1027240  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
add ecx 0Ch +
call sub_101A8A0  +
mov ecx [ebp+var_10] +
add ecx 24h +
call sub_10246E0  +
mov edx [ebp+var_10] +
mov dword ptr [edx+30h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+34h] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+38h] 1 +
push offset dword_103B7F8  +
call ds:InterlockedIncrement  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1026910  +
mov eax [ebp+8] +
and eax 1 +
jz loc_10268F5  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1036111  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov dword ptr [eax] offset off_10025AC +
mov ecx [ebp+var_14] +
mov dword ptr [ecx+4] offset off_1002598 +
mov [ebp+var_4] 2 +
mov ecx [ebp+var_14] +
call sub_1026CF0  +
mov ecx [ebp+var_14] +
add ecx 0Ch +
call sub_101A960  +
lea edx [ebp+var_10] +
push edx  +
mov ecx [ebp+var_14] +
add ecx 24h +
call sub_1027430  +
test eax eax +
jz loc_1026992  +
mov ecx [ebp+var_10] +
call sub_1025660  +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edx [ebp+var_10] +
push edx  +
mov eax [ecx+8] +
call eax  +
jmp loc_1026967  +
mov ecx [ebp+var_14] +
add ecx 0Ch +
call sub_101A980  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_14] +
add ecx 24h +
call sub_100B410  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
add ecx 0Ch +
call sub_101A940  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_14] +
add ecx 8 +
call sub_1025550  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset dword_103B7F8  +
call ds:InterlockedIncrement  +
mov eax [ebp+8] +
add eax 38h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
add eax 38h +
push eax  +
call ds:InterlockedDecrement  +
mov [ebp-4] eax +
push offset dword_103B7F8  +
call ds:InterlockedDecrement  +
cmp dword ptr [ebp-4] 0 +
jnz loc_1026A76  +
mov ecx [ebp+8] +
mov [ebp-0Ch] ecx +
mov edx [ebp-0Ch] +
mov [ebp-8] edx +
cmp dword ptr [ebp-8] 0 +
jz loc_1026A6F  +
push 1  +
mov eax [ebp-8] +
mov edx [eax] +
mov ecx [ebp-8] +
mov eax [edx+10h] +
call eax  +
mov [ebp-10h] eax +
jmp loc_1026A76  +
mov dword ptr [ebp-10h] 0 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036158  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_30] ecx +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+var_20] 0 +
lea ecx [ebp+var_10] +
call sub_10114A0  +
push eax  +
push 0  +
push 17h  +
push offset dword_100231C  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ecx+0Ch] +
call eax  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1026B0A  +
jmp loc_1026C9A  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_30] +
add ecx 8 +
call sub_10272A0  +
mov ecx [ebp+var_30] +
add ecx 8 +
call sub_1024680  +
mov [ebp+var_34] eax +
mov ecx [ebp+var_30] +
push ecx  +
mov edx [ebp+var_34] +
push edx  +
mov eax [ebp+var_34] +
mov ecx [eax] +
mov edx [ecx+18h] +
call edx  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1026B4C  +
jmp loc_1026C9A  +
mov eax [ebp+var_30] +
mov dword ptr [eax+30h] 1 +
cmp [ebp+var_30] 0 +
jz loc_1026B67  +
mov ecx [ebp+var_30] +
add ecx 4 +
mov [ebp+var_38] ecx +
jmp loc_1026B6E  +
mov [ebp+var_38] 0 +
mov ecx [ebp+var_30] +
add ecx 8 +
call sub_1024680  +
mov [ebp+var_3C] eax +
mov edx [ebp+var_38] +
push edx  +
push 0  +
mov eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+var_3C] +
mov edx [ecx] +
mov eax [edx+20h] +
call eax  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1026B9E  +
jmp loc_1026C9A  +
mov ecx [ebp+var_30] +
mov dword ptr [ecx+34h] 1 +
mov ecx [ebp+var_30] +
add ecx 8 +
call sub_1024680  +
mov [ebp+var_40] eax +
lea ecx [ebp+var_14] +
call sub_10114A0  +
push eax  +
mov edx [ebp+var_40] +
push edx  +
mov eax [ebp+var_40] +
mov ecx [eax] +
mov edx [ecx+14h] +
call edx  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1026BDB  +
jmp loc_1026C9A  +
lea ecx [ebp+var_14] +
call sub_1024680  +
mov [ebp+var_44] eax +
lea eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_44] +
push ecx  +
mov edx [ebp+var_44] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1026C06  +
jmp loc_1026C9A  +
mov ecx [ebp+var_30] +
add ecx 0Ch +
call sub_101A960  +
mov [ebp+var_20] 1 +
mov [ebp+var_24] 0 +
jmp loc_1026C2A  +
mov edx [ebp+var_24] +
add edx 1 +
mov [ebp+var_24] edx +
mov eax [ebp+var_24] +
cmp eax [ebp+var_18] +
jge loc_1026C9A  +
lea ecx [ebp+var_28] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_14] +
call sub_1024680  +
mov [ebp+var_48] eax +
lea ecx [ebp+var_28] +
call sub_10114A0  +
push eax  +
mov ecx [ebp+var_24] +
push ecx  +
mov edx [ebp+var_48] +
push edx  +
mov eax [ebp+var_48] +
mov ecx [eax] +
mov edx [ecx+10h] +
call edx  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1026C7B  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_28] +
call sub_1023C70  +
jmp loc_1026C9A  +
lea ecx [ebp+var_28] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_30] +
call sub_1026E40  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_28] +
call sub_1023C70  +
jmp loc_1026C21  +
cmp [ebp+var_20] 0 +
jz loc_1026CAB  +
mov ecx [ebp+var_30] +
add ecx 0Ch +
call sub_101A980  +
mov eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1023C70  +
mov eax [ebp+var_2C] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_4] ecx +
push 0  +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_1012320  +
movzx eax al +
test eax eax +
jz loc_1026D99  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+30h] 0 +
jz loc_1026D4A  +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_1024680  +
mov [ebp+var_8] eax +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
mov eax [edx+1Ch] +
call eax  +
test eax eax +
jnz loc_1026D4A  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+30h] 0 +
mov edx [ebp+var_4] +
cmp dword ptr [edx+34h] 0 +
jz loc_1026D99  +
cmp [ebp+var_4] 0 +
jz loc_1026D64  +
mov eax [ebp+var_4] +
add eax 4 +
mov [ebp+var_C] eax +
jmp loc_1026D6B  +
mov [ebp+var_C] 0 +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_1024680  +
mov [ebp+var_10] eax +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [ebp+var_10] +
push edx  +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edx [ecx+24h] +
call edx  +
test eax eax +
jnz loc_1026D99  +
mov eax [ebp+var_4] +
mov dword ptr [eax+34h] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_C] +
add ecx 0Ch +
call sub_101A960  +
mov ecx [ebp+var_C] +
add ecx 24h +
call sub_1024680  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_1026E1F  +
lea eax [ebp+var_4] +
push eax  +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_C] +
add ecx 24h +
call sub_1027580  +
cmp [ebp+var_4] 0 +
jz loc_1026E16  +
mov ecx [ebp+var_4] +
call sub_1016B90  +
test eax eax +
jz loc_1026E16  +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [eax+4] +
call edx  +
jmp loc_1026E1F  +
mov [ebp+var_4] 0 +
jmp loc_1026DDB  +
mov ecx [ebp+var_C] +
add ecx 0Ch +
call sub_101A980  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1036193  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_30] ecx +
lea ecx [ebp+var_14] +
call sub_1027240  +
mov [ebp+var_4] 0 +
mov [ebp+wParam] 0 +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_14] +
call sub_10271C0  +
push 0  +
lea ecx [ebp+var_14] +
call sub_1012890  +
movzx ecx al +
test ecx ecx +
jz loc_1026EA9  +
mov [ebp+var_1C] 80004002h +
jmp loc_1026FE6  +
lea ecx [ebp+var_14] +
call sub_1024680  +
mov [ebp+var_34] eax +
lea edx [ebp+var_18] +
push edx  +
mov eax [ebp+var_34] +
push eax  +
mov ecx [ebp+var_34] +
mov edx [ecx] +
mov eax [edx+4Ch] +
call eax  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1026ED4  +
jmp loc_1026FE6  +
mov ecx [ebp+var_18] +
and ecx 20000000h +
jz loc_1026EE4  +
jmp loc_1026FE6  +
push 74h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_28] eax +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_28] 0 +
jz loc_1026F10  +
mov edx [ebp+var_30] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_28] +
call sub_1025350  +
mov [ebp+var_38] eax +
jmp loc_1026F17  +
mov [ebp+var_38] 0 +
mov ecx [ebp+var_38] +
mov [ebp+var_24] ecx +
mov byte ptr [ebp+var_4] 0 +
mov edx [ebp+var_24] +
mov [ebp+wParam] edx +
cmp [ebp+wParam] 0 +
jnz loc_1026F39  +
mov [ebp+var_1C] 8007000Eh +
jmp loc_1026FE6  +
mov ecx [ebp+wParam] +
call sub_10259D0  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jge loc_1026F4F  +
jmp loc_1026FE6  +
mov ecx [ebp+var_30] +
add ecx 0Ch +
call sub_101A960  +
mov ecx [ebp+wParam] +
call sub_1016B90  +
test eax eax +
jz loc_1026F7A  +
mov eax [ebp+wParam] +
push eax  +
mov ecx [ebp+var_30] +
add ecx 24h +
call sub_10272E0  +
mov [ebp+var_20] eax +
jmp loc_1026F8C  +
mov ecx [ebp+wParam] +
push ecx  +
mov ecx [ebp+var_30] +
add ecx 24h +
call sub_1027390  +
mov [ebp+var_20] eax +
mov ecx [ebp+var_30] +
add ecx 0Ch +
call sub_101A980  +
cmp [ebp+var_20] 0 +
jnz loc_1026FA6  +
mov [ebp+var_1C] 8007000Eh +
jmp loc_1026FE6  +
mov edx [ebp+wParam] +
mov eax [edx] +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [eax+4] +
call edx  +
mov ecx [ebp+wParam] +
call sub_1027030  +
test eax eax +
jz loc_1026FE6  +
mov eax [ebp+wParam] +
mov ecx [eax] +
mov edx [ebp+wParam] +
push edx  +
mov eax [ecx+4] +
call eax  +
push 0  +
mov ecx [ebp+wParam] +
push ecx  +
push 415h  +
mov edx hWnd +
push edx  +
call ds:PostMessageW  +
cmp [ebp+wParam] 0 +
jz loc_1027001  +
mov eax [ebp+wParam] +
mov ecx [eax] +
mov edx [ebp+wParam] +
push edx  +
mov eax [ecx+8] +
call eax  +
mov [ebp+wParam] 0 +
mov ecx [ebp+var_1C] +
mov [ebp+var_2C] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1025550  +
mov eax [ebp+var_2C] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
xor ecx ecx +
cmp dword ptr [eax+4Ch] 2 +
setnz cl  +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+wParam] +
mov ecx [eax] +
mov edx [ebp+wParam] +
push edx  +
mov eax [ecx+4] +
call eax  +
push 0  +
mov ecx [ebp+wParam] +
push ecx  +
push 416h  +
mov edx hWnd +
push edx  +
call ds:PostMessageW  +
mov ecx [ebp+var_C] +
add ecx 0Ch +
call sub_101A960  +
mov eax [ebp+wParam] +
push eax  +
mov ecx [ebp+var_C] +
add ecx 24h +
call sub_101A0C0  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_10270C3  +
mov ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_C] +
add ecx 24h +
call sub_10274E0  +
mov edx [ebp+wParam] +
push edx  +
call sub_10252F0  +
mov ecx [ebp+var_C] +
add ecx 0Ch +
call sub_101A980  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [eax] +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ecx+4] +
call eax  +
push 0  +
mov ecx [ebp+0Ch] +
push ecx  +
push 414h  +
mov edx hWnd +
push edx  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
push eax  +
push 1  +
push 41Eh  +
mov ecx hWnd +
push ecx  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push 41Eh  +
mov eax hWnd +
push eax  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012550  +
cmp [ebp+arg_0] 0 +
jz loc_10271AD  +
mov eax [ebp+var_4] +
push eax  +
push offset dword_10025C0  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [edx] +
call ecx  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024680  +
cmp eax [ebp+arg_0] +
jz loc_10271EA  +
push offset dword_10025C0  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1012C20  +
jmp loc_10271F2  +
mov ecx [ebp+var_4] +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024680  +
cmp eax [ebp+arg_0] +
jz loc_102722A  +
push offset dword_10025D0  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1012C20  +
jmp loc_1027232  +
mov ecx [ebp+var_4] +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1012550  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024680  +
cmp eax [ebp+arg_0] +
jz loc_102728A  +
push offset dword_1002370  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1012C20  +
jmp loc_1027292  +
mov ecx [ebp+var_4] +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024680  +
cmp eax [ebp+arg_0] +
jz loc_10272CA  +
push offset aAskwOhlElIos  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_1012C20  +
jmp loc_10272D2  +
mov ecx [ebp+var_4] +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_C] ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_102730B  +
mov ecx [ebp+var_8] +
call sub_10246E0  +
mov [ebp+var_10] eax +
jmp loc_1027312  +
mov [ebp+var_10] 0 +
mov eax [ebp+var_10] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_1027322  +
xor eax eax +
jmp loc_1027377  +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_0] +
mov [ecx+8] edx +
mov eax [ebp+var_4] +
mov ecx [ebp+var_C] +
mov edx [ecx] +
mov [eax] edx +
mov eax [ebp+var_4] +
mov dword ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
cmp dword ptr [ecx] 0 +
jz loc_1027354  +
mov edx [ebp+var_C] +
mov eax [edx] +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
jmp loc_102735D  +
mov edx [ebp+var_C] +
mov eax [ebp+var_4] +
mov [edx+4] eax +
mov ecx [ebp+var_C] +
mov edx [ebp+var_4] +
mov [ecx] edx +
mov eax [ebp+var_C] +
mov ecx [eax+8] +
add ecx 1 +
mov edx [ebp+var_C] +
mov [edx+8] ecx +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_C] ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_10273BB  +
mov ecx [ebp+var_8] +
call sub_10246E0  +
mov [ebp+var_10] eax +
jmp loc_10273C2  +
mov [ebp+var_10] 0 +
mov eax [ebp+var_10] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_10273D2  +
jmp loc_102741D  +
jmp loc_102741D  +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_0] +
mov [ecx+8] edx +
mov eax [ebp+var_4] +
mov ecx [ebp+var_C] +
mov edx [ecx+4] +
mov [eax+4] edx +
mov eax [ebp+var_C] +
cmp dword ptr [eax+4] 0 +
jnz loc_10273FA  +
mov ecx [ebp+var_C] +
mov edx [ebp+var_4] +
mov [ecx] edx +
jmp loc_1027405  +
mov eax [ebp+var_C] +
mov ecx [eax+4] +
mov edx [ebp+var_4] +
mov [ecx] edx +
mov eax [ebp+var_C] +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
mov edx [ebp+var_C] +
mov eax [edx+8] +
add eax 1 +
mov ecx [ebp+var_C] +
mov [ecx+8] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_10] ecx +
cmp [ebp+arg_0] 0 +
jz loc_1027449  +
mov eax [ebp+var_10] +
cmp dword ptr [eax] 0 +
jnz loc_102744D  +
xor eax eax +
jmp loc_10274C6  +
mov ecx [ebp+var_10] +
mov edx [ecx] +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov edx [ecx+8] +
mov [eax] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov [eax] edx +
mov eax [ebp+var_10] +
cmp dword ptr [eax] 0 +
jz loc_1027480  +
mov ecx [ebp+var_10] +
mov edx [ecx] +
mov dword ptr [edx+4] 0 +
jmp loc_102748A  +
mov eax [ebp+var_10] +
mov dword ptr [eax+4] 0 +
mov ecx [ebp+var_4] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_C] +
mov [ebp+var_8] edx +
cmp [ebp+var_8] 0 +
jz loc_10274AB  +
push 1  +
mov ecx [ebp+var_8] +
call sub_10275D0  +
mov [ebp+var_14] eax +
jmp loc_10274B2  +
mov [ebp+var_14] 0 +
mov eax [ebp+var_10] +
mov ecx [eax+8] +
sub ecx 1 +
mov edx [ebp+var_10] +
mov [edx+8] ecx +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
mov edx [ebp+var_4] +
cmp edx [ecx] +
jnz loc_1027507  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_4] +
mov edx [ecx] +
mov [eax] edx +
jmp loc_1027514  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
mov edx [ebp+var_4] +
mov eax [edx] +
mov [ecx] eax +
mov ecx [ebp+var_10] +
mov edx [ebp+var_4] +
cmp edx [ecx+4] +
jnz loc_102752D  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
mov [eax+4] edx +
jmp loc_102753B  +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
mov eax [edx+4] +
mov [ecx+4] eax +
mov ecx [ebp+var_4] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_C] +
mov [ebp+var_8] edx +
cmp [ebp+var_8] 0 +
jz loc_102755C  +
push 1  +
mov ecx [ebp+var_8] +
call sub_10275D0  +
mov [ebp+var_14] eax +
jmp loc_1027563  +
mov [ebp+var_14] 0 +
mov eax [ebp+var_10] +
mov ecx [eax+8] +
sub ecx 1 +
mov edx [ebp+var_10] +
mov [edx+8] ecx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jnz loc_102759D  +
xor eax eax +
jmp loc_10275BD  +
mov edx [ebp+arg_0] +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov [edx] ecx +
cmp [ebp+arg_4] 0 +
jz loc_10275B8  +
mov edx [ebp+arg_4] +
mov eax [ebp+var_4] +
mov ecx [eax+8] +
mov [edx] ecx +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_100B410  +
mov eax [ebp+arg_0] +
and eax 1 +
jz loc_10275F5  +
mov ecx [ebp+var_4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1026A20  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10269F0  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10254E0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1036221  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_20] ecx +
mov ecx [ebp+var_20] +
call sub_1027E80  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_20] +
mov dword ptr [eax] offset off_1002634 +
mov ecx [ebp+var_20] +
mov edx [ebp+arg_0] +
mov [ecx+20h] edx +
mov eax [ebp+var_20] +
mov ecx [ebp+arg_0] +
mov [eax+24h] ecx +
mov edx [ebp+var_20] +
mov eax [ebp+arg_0] +
mov [edx+28h] eax +
mov ecx [ebp+var_20] +
add ecx 2Ch +
call sub_101A8A0  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_20] +
add ecx 44h +
call sub_10246E0  +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_20] +
mov dword ptr [ecx+50h] 0 +
mov edx [ebp+var_20] +
mov dword ptr [edx+54h] 0 +
mov eax [ebp+var_20] +
mov dword ptr [eax+58h] 0 +
mov ecx [ebp+var_20] +
fldz   +
fstp  dword ptr [ecx+5Ch] +
mov edx [ebp+var_20] +
fld  ds:flt_1002630 +
fstp  dword ptr [edx+60h] +
mov eax [ebp+var_20] +
mov dword ptr [eax+64h] 0 +
mov ecx [ebp+var_20] +
add ecx 68h +
call sub_1031110  +
mov byte ptr [ebp+var_4] 3 +
mov ecx dword_103B54C +
push ecx  +
mov ecx [ebp+var_20] +
add ecx 130h +
call sub_102FBF0  +
mov byte ptr [ebp+var_4] 4 +
mov edx dword_103B54C +
push edx  +
mov ecx [ebp+var_20] +
add ecx 194h +
call sub_102FBF0  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_20] +
add ecx 1F8h +
call sub_102D200  +
mov byte ptr [ebp+var_4] 6 +
mov ecx [ebp+var_20] +
add ecx 254h +
call sub_102E8B0  +
mov byte ptr [ebp+var_4] 7 +
mov eax [ebp+var_20] +
mov dword ptr [eax+298h] 0 +
mov ecx [ebp+var_20] +
mov dword ptr [ecx+29Ch] 0 +
mov edx [ebp+var_20] +
add edx 2A0h +
mov eax ds:dword_1002554 +
mov [edx] eax +
mov ecx ds:dword_1002558 +
mov [edx+4] ecx +
mov eax ds:dword_100255C +
mov [edx+8] eax +
mov ecx ds:dword_1002560 +
mov [edx+0Ch] ecx +
mov edx [ebp+var_20] +
mov dword ptr [edx+2B0h] 0 +
mov eax [ebp+var_20] +
mov dword ptr [eax+2B4h] 0 +
mov ecx [ebp+var_20] +
mov dword ptr [ecx+2B8h] 0 +
mov edx [ebp+var_20] +
mov eax dword_103B550 +
mov [edx+2BCh] eax +
mov ecx [ebp+var_20] +
mov dword ptr [ecx+2C0h] 0 +
mov edx [ebp+var_20] +
mov dword ptr [edx+2C4h] 1 +
mov eax [ebp+var_20] +
mov ecx [eax+20h] +
mov edx [ebp+var_20] +
mov eax [edx+20h] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+4] +
call edx  +
push offset dword_103B800  +
call ds:InterlockedIncrement  +
lea eax [ebp+var_1C] +
push eax  +
mov ecx [ebp+var_20] +
mov ecx [ecx+20h] +
call sub_1016EE0  +
mov edx [ebp+var_20] +
add edx 2A0h +
mov ecx [eax] +
mov [edx] ecx +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [eax+8] +
mov [edx+8] ecx +
mov eax [eax+0Ch] +
mov [edx+0Ch] eax +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_20] +
add ecx 44h +
call sub_1027390  +
mov ecx [ebp+var_20] +
add ecx 44h +
call sub_101A0A0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_10278A3  +
jmp loc_1027E25  +
cmp dword ptr [ebp+0Ch] 110h +
jnz loc_10278E0  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_10282C0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10278E0  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 2 +
jnz loc_102791A  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_1028760  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102791A  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 115h +
jnz loc_1027957  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1029160  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027957  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_10279C8  +
mov edx [ebp+10h] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 191h +
jnz loc_10279C8  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
movzx edx cx +
test edx edx +
jnz loc_10279C8  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
and edx 0FFFFh +
push edx  +
mov eax [ebp+10h] +
shr eax 10h +
and eax 0FFFFh +
push eax  +
mov ecx [ebp-8] +
call sub_1028E10  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10279C8  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 111h +
jnz loc_1027A39  +
mov edx [ebp+10h] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 131h +
jnz loc_1027A39  +
mov ecx [ebp+10h] +
shr ecx 10h +
and ecx 0FFFFh +
movzx edx cx +
test edx edx +
jnz loc_1027A39  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
and edx 0FFFFh +
push edx  +
mov eax [ebp+10h] +
shr eax 10h +
and eax 0FFFFh +
push eax  +
mov ecx [ebp-8] +
call sub_1028F80  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027A39  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 136h +
jnz loc_1027A76  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1028C30  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027A76  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 138h +
jnz loc_1027AB3  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1028C30  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027AB3  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 40Ah +
jnz loc_1027AF0  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1029020  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027AF0  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_1027B2A  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1028B80  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027B2A  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_1027B64  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1028AD0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027B64  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 436h +
jnz loc_1027BA1  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1029060  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027BA1  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 417h +
jnz loc_1027BDE  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1029760  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027BDE  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 418h +
jnz loc_1027C1B  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10292F0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027C1B  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 41Ah +
jnz loc_1027C58  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10293D0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027C58  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 41Ch +
jnz loc_1027C95  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102A360  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027C95  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 420h +
jnz loc_1027CD2  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102A250  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027CD2  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 31Eh +
jnz loc_1027D0F  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102A3E0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027D0F  +
mov eax 1 +
jmp loc_1027E27  +
push 0  +
mov edx [ebp+18h] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp+8] +
push eax  +
mov ecx [ebp-8] +
add ecx 194h +
mov edx [ebp-8] +
mov eax [edx+194h] +
mov edx [eax] +
call edx  +
test eax eax +
jz loc_1027D49  +
mov eax 1 +
jmp loc_1027E27  +
push 0  +
mov eax [ebp+18h] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp+8] +
push ecx  +
mov ecx [ebp-8] +
add ecx 130h +
mov edx [ebp-8] +
mov eax [edx+130h] +
mov edx [eax] +
call edx  +
test eax eax +
jz loc_1027D83  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 113h +
jnz loc_1027DBD  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_10298B0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027DBD  +
mov eax 1 +
jmp loc_1027E27  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_1027DFC  +
mov edx [ebp+14h] +
cmp dword ptr [edx+8] 0FFFFFDEEh +
jnz loc_1027DFC  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-8] +
call sub_1029CD0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1027DFC  +
mov eax 1 +
jmp loc_1027E27  +
push 0  +
mov edx [ebp+18h] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov eax [ebp+8] +
push eax  +
mov ecx [ebp-8] +
call sub_102A6E0  +
test eax eax +
jz loc_1027E25  +
mov eax 1 +
jmp loc_1027E27  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1027EA0  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1027E65  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_101D020  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_10362B1  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov dword ptr [eax] offset off_1002634 +
mov [ebp+var_4] 7 +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101A800  +
mov ecx [ebp+var_14] +
add ecx 2Ch +
call sub_101A960  +
lea ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+var_14] +
add ecx 44h +
call sub_1027430  +
test eax eax +
jz loc_1027F25  +
push 0  +
mov ecx [ebp+var_10] +
call sub_1024830  +
mov ecx [ebp+var_10] +
call sub_1025860  +
mov edx [ebp+var_10] +
mov eax [edx] +
mov ecx [ebp+var_10] +
push ecx  +
mov edx [eax+8] +
call edx  +
jmp loc_1027EF0  +
mov ecx [ebp+var_14] +
add ecx 2Ch +
call sub_101A980  +
mov eax [ebp+var_14] +
mov dword ptr [eax+20h] 0 +
mov ecx [ebp+var_14] +
cmp dword ptr [ecx+29Ch] 0 +
jz loc_1027F63  +
mov edx [ebp+var_14] +
mov eax [edx+29Ch] +
push eax  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_14] +
mov dword ptr [ecx+29Ch] 0 +
mov byte ptr [ebp+var_4] 6 +
mov ecx [ebp+var_14] +
add ecx 254h +
call sub_102E950  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_14] +
add ecx 1F8h +
call sub_102D450  +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_14] +
add ecx 194h +
call sub_102FE20  +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_14] +
add ecx 130h +
call sub_102FE20  +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_14] +
add ecx 68h +
call sub_1015920  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_14] +
add ecx 44h +
call sub_100B410  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
add ecx 2Ch +
call sub_101A940  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_14] +
call sub_1014040  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset dword_103B800  +
call ds:InterlockedIncrement  +
mov eax [ebp+arg_0] +
add eax 2C4h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
add eax 2C4h +
push eax  +
call ds:InterlockedDecrement  +
mov [ebp+var_4] eax +
push offset dword_103B800  +
call ds:InterlockedDecrement  +
cmp [ebp+var_4] 0 +
jnz loc_1028088  +
mov ecx [ebp+arg_0] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_C] +
mov [ebp+var_8] edx +
cmp [ebp+var_8] 0 +
jz loc_1028081  +
push 1  +
mov eax [ebp+var_8] +
mov edx [eax] +
mov ecx [ebp+var_8] +
mov eax [edx+4] +
call eax  +
mov [ebp+var_10] eax +
jmp loc_1028088  +
mov [ebp+var_10] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset __ehhandler$?_mbrtowc_s_l@@YAHPAHPA_WPBDI0PAUlocaleinfo_struct@@@Z_0  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_28] ecx +
cmp [ebp+arg_0] 0 +
jz loc_10280E1  +
mov eax hIcon +
mov [ebp+var_2C] eax +
jmp loc_10280EA  +
mov ecx dword_103B598 +
mov [ebp+var_2C] ecx +
mov edx [ebp+var_2C] +
mov [ebp+hicon] edx +
mov eax [ebp+var_28] +
mov ecx [ebp+arg_0] +
cmp ecx [eax+54h] +
jnz loc_1028105  +
cmp [ebp+arg_4] 0 +
jz loc_1028203  +
lea ecx [ebp+var_18] +
call sub_101CBA0  +
mov [ebp+var_4] 0 +
mov edx [ebp+hicon] +
push edx  +
mov ecx [ebp+var_28] +
add ecx 130h +
call sub_102FFB0  +
mov eax [ebp+var_28] +
cmp dword ptr [eax+24h] 0 +
jz loc_10281EB  +
lea ecx [ebp+var_1C] +
call sub_100B430  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_1C] +
push ecx  +
mov edx [ebp+var_28] +
mov ecx [edx+24h] +
call sub_1026100  +
test eax eax +
jl loc_10281DF  +
mov [ebp+var_20] 0 +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_1C] +
call sub_1024680  +
mov [ebp+var_30] eax +
mov eax [ebp+var_30] +
push eax  +
mov ecx [ebp+arg_0] +
neg ecx  +
sbb ecx ecx +
and ecx 7 +
add ecx 1F5h +
push ecx  +
lea edx [ebp+var_18] +
push edx  +
call sub_1020250  +
add esp 0Ch +
jmp loc_10281BB  +
mov ecx [ebp-24h] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_10281A3  +
call _resetstkoflw  +
mov ecx [ebp-24h] +
call sub_1024680  +
mov [ebp-20h] eax +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_10281C2 +
retn   +
mov [ebp+var_4] 1 +
cmp [ebp+var_20] 0 +
jl loc_10281DF  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_28] +
add ecx 130h +
call sub_1030190  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_1028220  +
mov eax [ebp+var_28] +
mov ecx [ebp+arg_0] +
mov [eax+54h] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_101AD70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 0 +
jz loc_1028246  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
cmp dword ptr [eax+58h] 0 +
jnz loc_1028276  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+50h] 0 +
jnz loc_1028276  +
mov [ebp+var_C] 0 +
jmp loc_102827D  +
mov [ebp+var_C] 1 +
mov edx [ebp+var_C] +
mov [ebp+lParam] edx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+lParam] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10280A0  +
mov edx [ebp+lParam] +
push edx  +
push 1  +
push 432h  +
mov ecx [ebp+var_8] +
add ecx 6Ch +
call sub_101A540  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036318  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_48] ecx +
lea ecx [ebp+var_18] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_48] +
call sub_102A290  +
mov ecx [ebp+var_48] +
call sub_102A660  +
mov eax [ebp+var_48] +
cmp dword ptr [eax+298h] 0 +
jnz loc_102833A  +
mov ecx [ebp+var_48] +
call sub_1016B70  +
test eax eax +
jnz loc_102833A  +
mov ecx [ebp+var_48] +
cmp dword ptr [ecx+2BCh] 0 +
jnz loc_102833A  +
mov edx [ebp+var_48] +
mov dword ptr [edx+2C0h] 1 +
push 12Dh  +
lea eax [ebp+var_24] +
push eax  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_48] +
add ecx 1F8h +
call sub_1012DF0  +
mov ecx [ebp+var_48] +
add ecx 1F8h +
call sub_102D4F0  +
push 130h  +
lea ecx [ebp+var_28] +
push ecx  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_48] +
add ecx 68h +
call sub_1012DF0  +
mov ecx [ebp+var_48] +
add ecx 68h +
call sub_10316E0  +
push 10h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov [ebp+var_10] eax +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov [ebp+var_14] eax +
push 131h  +
lea edx [ebp+var_2C] +
push edx  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_48] +
add ecx 130h +
call sub_1012DF0  +
mov eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_48] +
add ecx 130h +
call sub_102FE90  +
mov ecx [ebp+var_14] +
and ecx 0FFFFh +
movzx edx cx +
mov eax [ebp+var_14] +
and eax 0FFFFh +
movzx ecx ax +
shl ecx 10h +
or edx ecx +
push edx  +
push 0  +
push 41Fh  +
mov ecx [ebp+var_48] +
add ecx 134h +
call sub_101A540  +
push 191h  +
lea edx [ebp+var_30] +
push edx  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_48] +
add ecx 194h +
call sub_1012DF0  +
push 20h  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
push eax  +
mov ecx [ebp+var_48] +
add ecx 194h +
call sub_102FE90  +
push 1  +
push 0  +
push 433h  +
mov ecx [ebp+var_48] +
add ecx 6Ch +
call sub_101A540  +
push 0  +
push 0  +
push 434h  +
mov ecx [ebp+var_48] +
add ecx 6Ch +
call sub_101A540  +
push 640000h  +
push 1  +
push 406h  +
push 130h  +
lea eax [ebp+var_34] +
push eax  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:SendMessageW  +
mov ecx [ebp+var_48] +
mov ecx [ecx+28h] +
call sub_1022F10  +
mov [ebp+hicon] eax +
mov edx [ebp+var_48] +
cmp dword ptr [edx+2C0h] 0 +
jz loc_1028571  +
push 0FFFFFFF0h  +
push 190h  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_102A8D0  +
or eax 800h +
push eax  +
push 0FFFFFFF0h  +
push 190h  +
lea ecx [ebp+var_38] +
push ecx  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100E0B0  +
push 0  +
mov edx [ebp+hicon] +
push edx  +
push 170h  +
push 190h  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_101A710  +
push 0  +
mov ecx [ebp+var_48] +
add ecx 198h +
call sub_1024680  +
push eax  +
call ds:ShowWindow  +
push 0  +
push 0  +
push 0Ah  +
mov ecx [ebp+var_48] +
add ecx 198h +
call sub_101A540  +
jmp loc_10285A7  +
mov eax [ebp+hicon] +
push eax  +
mov ecx [ebp+var_48] +
add ecx 194h +
call sub_102FFB0  +
push 0  +
push 190h  +
lea ecx [ebp+var_40] +
push ecx  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:ShowWindow  +
mov edx [ebp+var_48] +
mov eax [ebp+hicon] +
mov [edx+64h] eax +
mov ecx [ebp+var_48] +
mov ecx [ecx+20h] +
call sub_1028740  +
push eax  +
lea ecx [ebp+var_18] +
call sub_10122A0  +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_4C] eax +
mov edx [ebp+var_48] +
add edx 5Ch +
push edx  +
mov eax [ebp+var_4C] +
push eax  +
mov ecx [ebp+var_4C] +
mov edx [ecx] +
mov eax [edx+10h] +
call eax  +
mov ecx [ebp+var_48] +
fld  dword ptr [ecx+5Ch] +
fcomp  ds:dbl_1002648 +
fnstsw  ax +
test ah 5 +
jnp loc_1028610  +
mov edx [ebp+var_48] +
fld  dword ptr [edx+5Ch] +
sub esp 8 +
fstp  [esp+64h+var_64] +
call ds:_isnan  +
add esp 8 +
test eax eax +
jz loc_1028618  +
mov eax [ebp+var_48] +
fldz   +
fstp  dword ptr [eax+5Ch] +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_50] eax +
mov ecx [ebp+var_48] +
add ecx 50h +
push ecx  +
mov edx [ebp+var_50] +
push edx  +
mov eax [ebp+var_50] +
mov ecx [eax] +
mov edx [ecx+18h] +
call edx  +
push 1  +
mov ecx [ebp+var_48] +
call sub_1028250  +
mov eax [ebp+var_48] +
cmp dword ptr [eax+2BCh] 0 +
jz loc_10286B7  +
mov ecx [ebp+var_48] +
add ecx 2B4h +
push ecx  +
mov edx [ebp+var_48] +
mov ecx [edx+20h] +
call sub_1026150  +
test eax eax +
jl loc_10286B7  +
mov [ebp+var_20] 0 +
lea eax [ebp+var_20] +
push eax  +
call ds:DwmIsCompositionEnabled  +
test eax eax +
jl loc_10286B7  +
cmp [ebp+var_20] 0 +
jz loc_10286B7  +
mov ecx [ebp+var_48] +
cmp dword ptr [ecx+2B4h] 0 +
jz loc_10286B7  +
mov edx [ebp+var_48] +
mov eax [edx+2B4h] +
push eax  +
mov ecx [ebp+var_48] +
add ecx 194h +
call sub_10309D0  +
test eax eax +
jl loc_10286B7  +
mov ecx [ebp+var_48] +
mov dword ptr [ecx+2B8h] 1 +
mov ecx [ebp+var_48] +
call sub_10287A0  +
mov ecx [ebp+var_48] +
call sub_1028820  +
push 0  +
push 3E8h  +
push 83h  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_101E4A0  +
mov edx [ebp+var_48] +
mov [edx+2B0h] eax +
push 0  +
push 32h  +
push 42Ah  +
mov ecx [ebp+var_48] +
add ecx 4 +
call sub_101E4A0  +
mov eax [ebp+var_48] +
mov ecx [eax+20h] +
call sub_10256D0  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
mov [ebp+var_44] 1 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov eax [ebp+var_44] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_1024680  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+2B0h] 0 +
jz loc_102878A  +
mov ecx [ebp+var_4] +
mov edx [ecx+2B0h] +
push edx  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101E4D0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
push 0  +
push 0  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
mov edx hInstance +
push edx  +
mov eax hInstance +
push eax  +
mov ecx [ebp+var_4] +
add ecx 254h +
call sub_102E970  +
push 12Dh  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
mov ecx [ebp+var_4] +
add ecx 254h +
call sub_102EBF0  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+2C0h] 0 +
jz loc_1028811  +
push 190h  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
mov ecx [ebp+var_4] +
add ecx 254h +
call sub_102EBF0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1036353  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 88h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_18] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_98] ecx +
lea ecx [ebp+var_7C] +
call sub_100B430  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_7C] +
push eax  +
mov ecx [ebp+var_98] +
mov ecx [ecx+24h] +
call sub_1026100  +
mov [ebp+var_80] eax +
cmp [ebp+var_80] 0 +
jge loc_1028889  +
jmp loc_1028A6C  +
lea ecx [ebp+var_7C] +
call sub_1024680  +
push eax  +
push 12Dh  +
mov ecx [ebp+var_98] +
add ecx 4 +
call sub_101A740  +
mov ecx [ebp+var_98] +
add ecx 4 +
call sub_102A940  +
mov [ebp+wParam] eax +
cmp [ebp+wParam] 0 +
jz loc_1028933  +
mov edx [ebp+var_98] +
mov ecx [edx+24h] +
call sub_1028AB0  +
cmp eax 4 +
jnz loc_102890C  +
cmp dword_103B540 0 +
jnz loc_10288FB  +
lea eax [ebp+var_78] +
push eax  +
push 5Ch  +
mov ecx [ebp+wParam] +
push ecx  +
call ds:GetObjectW  +
mov [ebp+var_78.lfItalic] 1 +
lea edx [ebp+var_78] +
push edx  +
call ds:CreateFontIndirectW  +
mov dword_103B540 eax +
cmp dword_103B540 0 +
jz loc_102890C  +
mov eax dword_103B540 +
mov [ebp+wParam] eax +
push 1  +
mov ecx [ebp+wParam] +
push ecx  +
push 12Dh  +
lea edx [ebp+var_90] +
push edx  +
mov ecx [ebp+var_98] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_102A900  +
lea ecx [ebp+var_84] +
call sub_101CBA0  +
mov byte ptr [ebp+var_4] 1 +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_7C] +
push eax  +
push 1F6h  +
lea ecx [ebp+var_84] +
push ecx  +
call sub_1020250  +
add esp 0Ch +
jmp loc_1028992  +
mov ecx [ebp-88h] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_1028977  +
call _resetstkoflw  +
mov ecx [ebp-88h] +
call sub_1024680  +
mov [ebp-80h] eax +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1028999 +
retn   +
mov [ebp+var_4] 1 +
cmp [ebp+var_80] 0 +
jge loc_10289B3  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_84] +
call sub_101AD70  +
jmp loc_1028A6C  +
lea ecx [ebp+var_84] +
call sub_1024680  +
push eax  +
push 12Eh  +
mov ecx [ebp+var_98] +
add ecx 4 +
call sub_101A740  +
mov byte ptr [ebp+var_4] 4 +
mov edx [ebp+var_7C] +
push edx  +
push 1F7h  +
lea eax [ebp+var_84] +
push eax  +
call sub_1020250  +
add esp 0Ch +
jmp loc_1028A22  +
mov ecx [ebp-8Ch] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_1028A07  +
call _resetstkoflw  +
mov ecx [ebp-8Ch] +
call sub_1024680  +
mov [ebp-80h] eax +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1028A29 +
retn   +
mov [ebp+var_4] 1 +
cmp [ebp+var_80] 0 +
jge loc_1028A40  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_84] +
call sub_101AD70  +
jmp loc_1028A6C  +
lea ecx [ebp+var_84] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_98] +
add ecx 130h +
call sub_1030160  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_84] +
call sub_101AD70  +
mov ecx [ebp+var_80] +
mov [ebp+var_94] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_7C] +
call sub_1028220  +
mov eax [ebp+var_94] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_18] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+3Ch] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
cmp off_103B010 offset off_103B010 +
jz loc_1028B2F  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_1028B2F  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_1028B2F  +
push offset dword_1002620  +
push 0Ah  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_1C] 1 +
jmp loc_1028B36  +
mov [ebp+var_1C] 0 +
lea edx [ebp+Rect] +
push edx  +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_100D6B0  +
push 0  +
push 4  +
mov eax [ebp+var_14] +
push eax  +
mov ecx [ebp+var_18] +
mov edx [ecx+4] +
push edx  +
call ds:DrawThemeParentBackgroundEx  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_18] eax +
mov [ebp+var_60] ecx +
cmp [ebp+arg_4] 0 +
jnz loc_1028BAF  +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_60] +
add ecx 4 +
call sub_101A660  +
mov [ebp+hDC] eax +
jmp loc_1028BB5  +
mov ecx [ebp+arg_4] +
mov [ebp+hDC] ecx +
lea edx [ebp+Rect] +
push edx  +
mov ecx [ebp+var_60] +
add ecx 4 +
call sub_100D6B0  +
mov eax [ebp+Rect.right] +
sub eax 1 +
mov [ebp+Rect.left] eax +
mov ecx dword_103B590 +
push ecx  +
call ds:CreateSolidBrush  +
mov [ebp+hbr] eax +
mov edx [ebp+hbr] +
push edx  +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:FillRect  +
mov edx [ebp+hbr] +
push edx  +
call ds:DeleteObject  +
cmp [ebp+arg_4] 0 +
jnz loc_1028C0E  +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_60] +
add ecx 4 +
call sub_101A690  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov ecx [ebp+var_18] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 5  +
call ds:GetSysColorBrush  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036388  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_1C] ecx +
mov ecx [ebp+var_1C] +
add ecx 2Ch +
call sub_101A960  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_1024680  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_1028D0C  +
lea eax [ebp+var_10] +
push eax  +
lea ecx [ebp+var_14] +
push ecx  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_1027580  +
cmp [ebp+var_10] 0 +
jz loc_1028D0A  +
mov ecx [ebp+var_10] +
call sub_1028740  +
push eax  +
lea ecx [ebp+var_18] +
call sub_1024620  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_18] +
call sub_1024680  +
test eax eax +
jz loc_1028CFB  +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_20] eax +
push offset stru_103B7E4  +
mov edx [ebp+var_1C] +
mov eax [edx+50h] +
push eax  +
mov ecx [ebp+var_20] +
push ecx  +
mov edx [ebp+var_20] +
mov eax [edx] +
mov ecx [eax+14h] +
call ecx  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_1023C70  +
jmp loc_1028C93  +
mov ecx [ebp+var_1C] +
add ecx 2Ch +
call sub_101A980  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036388  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_1C] ecx +
mov ecx [ebp+var_1C] +
add ecx 2Ch +
call sub_101A960  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_1024680  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_1028DEC  +
lea eax [ebp+var_10] +
push eax  +
lea ecx [ebp+var_14] +
push ecx  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_1027580  +
cmp [ebp+var_10] 0 +
jz loc_1028DEA  +
mov ecx [ebp+var_10] +
call sub_1028740  +
push eax  +
lea ecx [ebp+var_18] +
call sub_1024620  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_18] +
call sub_1024680  +
test eax eax +
jz loc_1028DDB  +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_20] eax +
push offset stru_103B7E4  +
push ecx  +
fld  [ebp+arg_0] +
fstp  [esp+2Ch+var_2C] +
mov edx [ebp+var_20] +
push edx  +
mov eax [ebp+var_20] +
mov ecx [eax] +
mov edx [ecx+0Ch] +
call edx  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_1023C70  +
jmp loc_1028D73  +
mov ecx [ebp+var_1C] +
add ecx 2Ch +
call sub_101A980  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10363B8  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_20] ecx +
mov eax [ebp+var_20] +
mov ecx [eax+20h] +
call sub_1016B90  +
test eax eax +
jz loc_1028E6D  +
push 1  +
push 0  +
push offset Parameters  +
push offset File  +
push 0  +
push 0  +
call ds:ShellExecuteW  +
jmp loc_1028F64  +
mov ecx [ebp+var_20] +
cmp dword ptr [ecx+298h] 0 +
jz loc_1028F1A  +
lea ecx [ebp+var_14] +
call sub_101CBA0  +
mov [ebp+var_4] 0 +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_4] 1 +
mov edx [ebp+var_20] +
mov eax [edx+29Ch] +
push eax  +
push offset aMmsys_cplSList  +
lea ecx [ebp+var_14] +
push ecx  +
call sub_101C800  +
add esp 0Ch +
jmp loc_1028EE0  +
mov ecx [ebp-1Ch] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_1028EC8  +
call _resetstkoflw  +
mov ecx [ebp-1Ch] +
call sub_1024680  +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 0 +
mov eax offset loc_1028EE7 +
retn   +
mov [ebp+var_4] 0 +
cmp [ebp+var_18] 0 +
jl loc_1028F09  +
push 1  +
push 0  +
lea ecx [ebp+var_14] +
call sub_1024680  +
push eax  +
push offset File  +
push 0  +
push 0  +
call ds:ShellExecuteW  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_101AD70  +
jmp loc_1028F64  +
mov edx [ebp+var_20] +
cmp dword ptr [edx+2BCh] 0 +
jz loc_1028F64  +
mov eax [ebp+var_20] +
cmp dword ptr [eax+2B4h] 0 +
jz loc_1028F64  +
push 4  +
mov ecx [ebp+var_20] +
mov edx [ecx+2B4h] +
push edx  +
call ds:ShowWindow  +
push 13h  +
push 0  +
push 0  +
push 0  +
push 0  +
mov eax hWnd +
push eax  +
mov ecx [ebp+var_20] +
mov edx [ecx+2B4h] +
push edx  +
call ds:SetWindowPos  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+wParam] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+wParam] +
cmp dword ptr [eax+58h] 0 +
jz loc_1028FD6  +
mov ecx [ebp+wParam] +
xor edx edx +
cmp dword ptr [ecx+50h] 1 +
setz dl  +
mov [ebp+var_4] edx +
mov eax [ebp+wParam] +
mov dword ptr [eax+58h] 0 +
mov ecx [ebp+wParam] +
mov dword ptr [ecx+50h] 0 +
push 0  +
mov edx [ebp+wParam] +
push edx  +
push 436h  +
mov eax hWnd +
push eax  +
call sub_101A5A0  +
jmp loc_1028FEF  +
mov ecx [ebp+wParam] +
xor edx edx +
cmp dword ptr [ecx+50h] 0 +
setz dl  +
mov eax [ebp+wParam] +
mov [eax+50h] edx +
mov [ebp+var_4] 1 +
push 0  +
mov ecx [ebp+wParam] +
call sub_1028250  +
cmp [ebp+var_4] 0 +
jz loc_102900E  +
mov ecx [ebp+wParam] +
mov edx [ecx+50h] +
push edx  +
mov ecx [ebp+wParam] +
call sub_1028C50  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax+50h] 1 +
push 0  +
mov ecx [ebp+var_4] +
mov edx [ecx+50h] +
push edx  +
mov ecx [ebp+var_4] +
call sub_10280A0  +
mov eax [ebp+var_4] +
mov ecx [eax+50h] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_1028C50  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+wParam] ecx +
mov eax [ebp+wParam] +
mov dword ptr [eax+50h] 0 +
push 0  +
mov ecx [ebp+wParam] +
mov edx [ecx+50h] +
push edx  +
mov ecx [ebp+wParam] +
call sub_10280A0  +
mov eax [ebp+wParam] +
mov ecx [eax+50h] +
push ecx  +
mov ecx [ebp+wParam] +
call sub_1028C50  +
push 0  +
mov edx [ebp+wParam] +
push edx  +
push 436h  +
mov eax hWnd +
push eax  +
call sub_101A5A0  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
fld  dword ptr [eax+5Ch] +
fdiv  [ebp+arg_4] +
mov ecx [ebp+var_4] +
fstp  dword ptr [ecx+5Ch] +
mov edx [ebp+var_4] +
fld  [ebp+arg_0] +
fstp  dword ptr [edx+60h] +
mov eax [ebp+var_4] +
push ecx  +
fld  dword ptr [eax+60h] +
fstp  [esp+8+var_8] +
mov ecx [ebp+var_4] +
add ecx 68h +
call sub_1029130  +
push 0  +
push 0  +
push 438h  +
mov ecx [ebp+var_4] +
add ecx 6Ch +
call sub_101A540  +
mov ecx [ebp+var_4] +
push ecx  +
fld  dword ptr [ecx+5Ch] +
fstp  [esp+8+var_8] +
mov ecx [ebp+var_4] +
call sub_1028D30  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
fld  [ebp+arg_0] +
fstp  dword ptr [eax+0ACh] +
push 1  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1010530  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+lParam] ecx +
mov [ebp+var_4] 0 +
push 0  +
push 0  +
push 400h  +
mov ecx [ebp+lParam] +
add ecx 6Ch +
call sub_101A540  +
mov [ebp+wParam] eax +
mov eax 64h +
sub eax [ebp+wParam] +
mov [ebp+wParam] eax +
jnz loc_10291A0  +
mov ecx [ebp+lParam] +
fldz   +
fstp  dword ptr [ecx+5Ch] +
jmp loc_10291FC  +
mov edx [ebp+lParam] +
fld  dword ptr [edx+60h] +
fcomp  ds:dbl_1002648 +
fnstsw  ax +
test ah 44h +
jp loc_10291BC  +
mov [ebp+var_4] 1 +
jmp loc_10291FC  +
fild  [ebp+wParam] +
mov eax [ebp+lParam] +
fld  dword ptr [eax+60h] +
fmul  ds:dbl_1002168 +
fdivp st(1) st +
mov ecx [ebp+lParam] +
fstp  dword ptr [ecx+5Ch] +
mov edx [ebp+lParam] +
fld  dword ptr [edx+5Ch] +
fcomp  ds:dbl_10026B8 +
fnstsw  ax +
test ah 41h +
jnz loc_10291EF  +
mov [ebp+var_14] 1 +
jmp loc_10291F6  +
mov [ebp+var_14] 0 +
mov eax [ebp+var_14] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1029255  +
mov ecx [ebp+lParam] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
push 419h  +
mov eax hWnd +
push eax  +
call sub_101A5A0  +
fild  [ebp+wParam] +
fdiv  ds:dbl_1002168 +
mov ecx [ebp+lParam] +
fstp  dword ptr [ecx+60h] +
mov edx [ebp+lParam] +
fld1   +
fstp  dword ptr [edx+5Ch] +
mov eax [ebp+lParam] +
push ecx  +
fld  dword ptr [eax+60h] +
fstp  [esp+18h+var_18] +
mov ecx [ebp+lParam] +
add ecx 68h +
call sub_1029130  +
push 1  +
push 0  +
mov ecx [ebp+lParam] +
add ecx 6Ch +
call sub_1010530  +
mov ecx [ebp+lParam] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
push 41Fh  +
mov eax hWnd +
push eax  +
call sub_101A5A0  +
push 0  +
push 0  +
push 438h  +
mov ecx [ebp+lParam] +
add ecx 6Ch +
call sub_101A540  +
mov ecx [ebp+lParam] +
push ecx  +
fld  dword ptr [ecx+5Ch] +
fstp  [esp+18h+var_18] +
mov ecx [ebp+lParam] +
call sub_1028D30  +
mov edx [ebp+arg_4] +
and edx 0FFFFh +
movzx eax dx +
cmp eax 8 +
jnz loc_10292D7  +
mov ecx [ebp+lParam] +
mov ecx [ecx+20h] +
call sub_1016B90  +
test eax eax +
jz loc_10292D7  +
mov [ebp+fdwSound] 290003h +
push 1  +
push 0  +
push 0  +
call PlaySoundW  +
mov edx [ebp+fdwSound] +
push edx  +
push 0  +
push offset pszSound  +
call PlaySoundW  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_14] ecx +
mov eax [ebp+arg_8] +
and eax 0FFFFh +
movzx ecx ax +
mov [ebp+var_8] ecx +
mov edx [ebp+arg_8] +
shr edx 10h +
and edx 0FFFFh +
movzx eax dx +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov dword ptr [ebp+var_1C] ecx +
mov dword ptr [ebp+var_1C+4] 0 +
fild  [ebp+var_1C] +
fdiv  ds:dbl_1002160 +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
mov edx [ebp+var_14] +
fld  dword ptr [edx+5Ch] +
fucompp   +
fnstsw  ax +
test ah 44h +
jnp loc_102939E  +
mov eax [ebp+var_14] +
fld  [ebp+var_C] +
fstp  dword ptr [eax+5Ch] +
mov ecx [ebp+var_14] +
fld  dword ptr [ecx+60h] +
fmul  ds:dbl_1002168 +
mov edx [ebp+var_14] +
fmul  dword ptr [edx+5Ch] +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_10] eax +
mov eax 64h +
sub eax [ebp+var_10] +
push eax  +
push 1  +
push 405h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A570  +
push 0  +
push 0  +
push 438h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A540  +
cmp [ebp+var_8] 0 +
jz loc_10293C2  +
mov ecx [ebp+var_14] +
mov edx [ebp+var_4] +
cmp edx [ecx+50h] +
jz loc_10293C2  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_4] +
mov [eax+50h] ecx +
push 0  +
mov ecx [ebp+var_14] +
call sub_1028250  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 87Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_14] eax +
mov [ebp+var_87C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_8] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_8] +
and edx 2 +
jz loc_1029418  +
mov eax [ebp+var_87C] +
mov ecx [ebp+var_4] +
cmp ecx [eax+24h] +
jnz loc_1029418  +
mov ecx [ebp+var_87C] +
call sub_1028820  +
mov edx [ebp+var_8] +
and edx 4 +
jz loc_102942B  +
mov ecx [ebp+var_87C] +
call sub_10295D0  +
mov eax [ebp+var_8] +
and eax 1 +
jz loc_102959C  +
mov ecx [ebp+var_87C] +
mov edx [ebp+var_4] +
cmp edx [ecx+28h] +
jnz loc_102959C  +
mov eax [ebp+var_87C] +
mov ecx [eax+28h] +
call sub_1022F10  +
mov [ebp+hicon] eax +
mov ecx [ebp+var_87C] +
mov edx [ebp+hicon] +
cmp edx [ecx+64h] +
jz loc_102959C  +
mov [ebp+var_448] 0 +
push 428h  +
push 0  +
lea eax [ebp+var_444] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+var_878] 0 +
push 428h  +
push 0  +
lea ecx [ebp+var_874] +
push ecx  +
call memset  +
add esp 0Ch +
mov [ebp+var_448] 42Ch +
mov [ebp+var_878] 42Ch +
mov [ebp+var_10] 0 +
lea edx [ebp+var_878] +
push edx  +
mov eax [ebp+var_87C] +
mov ecx [eax+64h] +
push ecx  +
call ds:GetIconInfoExW  +
test eax eax +
jz loc_1029546  +
lea edx [ebp+var_448] +
push edx  +
mov eax [ebp+hicon] +
push eax  +
call ds:GetIconInfoExW  +
test eax eax +
jz loc_1029546  +
movzx ecx [ebp+var_430] +
movzx edx [ebp+var_860] +
cmp ecx edx +
jnz loc_1029546  +
lea eax [ebp+var_85E] +
push eax  +
lea ecx [ebp+var_42E] +
push ecx  +
call ds:__imp__wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_1029546  +
lea edx [ebp+var_656] +
push edx  +
lea eax [ebp+var_226] +
push eax  +
call ds:__imp__wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_1029546  +
mov [ebp+var_10] 1 +
cmp [ebp+var_10] 0 +
jnz loc_102959C  +
mov ecx [ebp+var_87C] +
cmp dword ptr [ecx+2C0h] 0 +
jz loc_102957B  +
push 0  +
mov edx [ebp+hicon] +
push edx  +
push 170h  +
push 190h  +
mov ecx [ebp+var_87C] +
add ecx 4 +
call sub_101A710  +
jmp loc_1029590  +
mov eax [ebp+hicon] +
push eax  +
mov ecx [ebp+var_87C] +
add ecx 194h +
call sub_102FFB0  +
mov ecx [ebp+var_87C] +
mov edx [ebp+hicon] +
mov [ecx+64h] edx +
cmp [ebp+var_4] 0 +
jz loc_10295B7  +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov edx [ebp+var_4] +
push edx  +
mov eax [ecx+8] +
call eax  +
mov [ebp+var_4] 0 +
xor eax eax +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov [ebp+var_1C] ecx +
mov ecx [ebp+var_1C] +
call sub_102A290  +
mov eax [ebp+var_1C] +
cmp dword ptr [eax+298h] 0 +
jnz loc_1029604  +
mov ecx [ebp+var_1C] +
call sub_1016B70  +
test eax eax +
jnz loc_1029604  +
mov [ebp+var_20] 1 +
jmp loc_102960B  +
mov [ebp+var_20] 0 +
mov ecx [ebp+var_20] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_1C] +
mov eax [ebp+var_4] +
cmp eax [edx+2C0h] +
jz loc_1029748  +
mov ecx [ebp+var_1C] +
mov edx [ebp+var_4] +
mov [ecx+2C0h] edx +
mov eax [ebp+var_1C] +
mov ecx [eax+28h] +
call sub_1022F10  +
mov [ebp+hicon] eax +
mov ecx [ebp+var_1C] +
cmp dword ptr [ecx+2C0h] 0 +
jz loc_10296DE  +
push 0FFFFFFF0h  +
push 190h  +
lea edx [ebp+var_10] +
push edx  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_102A8D0  +
or eax 800h +
push eax  +
push 0FFFFFFF0h  +
push 190h  +
lea eax [ebp+var_C] +
push eax  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_100E0B0  +
push 0  +
mov ecx [ebp+var_1C] +
add ecx 198h +
call sub_1024680  +
push eax  +
call ds:ShowWindow  +
push 5  +
push 190h  +
lea ecx [ebp+var_14] +
push ecx  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:ShowWindow  +
push 0  +
push 0  +
push 0Ah  +
mov ecx [ebp+var_1C] +
add ecx 198h +
call sub_101A540  +
jmp loc_102973F  +
mov edx [ebp+hicon] +
push edx  +
mov ecx [ebp+var_1C] +
add ecx 194h +
call sub_102FFB0  +
push 0  +
push 190h  +
lea eax [ebp+var_18] +
push eax  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_10111E0  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:ShowWindow  +
push 5  +
mov ecx [ebp+var_1C] +
add ecx 198h +
call sub_1024680  +
push eax  +
call ds:ShowWindow  +
push 0  +
push 1  +
push 0Ah  +
mov ecx [ebp+var_1C] +
add ecx 198h +
call sub_101A540  +
mov ecx [ebp+var_1C] +
mov edx [ebp+hicon] +
mov [ecx+64h] edx +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_14] ecx +
mov eax [ebp+arg_4] +
mov dword ptr [ebp+var_1C] eax +
mov dword ptr [ebp+var_1C+4] 0 +
fild  [ebp+var_1C] +
fdiv  ds:dbl_1002160 +
fstp  [ebp+var_4] +
mov ecx [ebp+var_14] +
mov edx [ebp+arg_8] +
mov [ecx+58h] edx +
fld  [ebp+var_4] +
mov eax [ebp+var_14] +
fld  dword ptr [eax+60h] +
fucompp   +
fnstsw  ax +
test ah 44h +
jnp loc_1029875  +
mov ecx [ebp+var_14] +
fld  [ebp+var_4] +
fstp  dword ptr [ecx+60h] +
mov edx [ebp+var_14] +
fld  dword ptr [edx+60h] +
fmul  ds:dbl_1002168 +
mov eax [ebp+var_14] +
fmul  dword ptr [eax+5Ch] +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_C] eax +
mov ecx [ebp+var_14] +
push ecx  +
fld  dword ptr [ecx+60h] +
fstp  [esp+20h+var_20] +
mov ecx [ebp+var_14] +
add ecx 68h +
call sub_1029130  +
mov edx [ebp+var_14] +
mov ecx [edx+20h] +
call sub_1029890  +
fstp  [ebp+var_8] +
fld  [ebp+var_8] +
fcomp  ds:dbl_10026B8 +
fnstsw  ax +
test ah 5 +
jp loc_102985A  +
mov eax [ebp+var_14] +
fld  dword ptr [eax+60h] +
fmul  ds:dbl_1002168 +
fmul  [ebp+var_8] +
mov ecx [ebp+var_14] +
fmul  dword ptr [ecx+5Ch] +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_10] eax +
mov edx 64h +
sub edx [ebp+var_C] +
push edx  +
push 0  +
push 437h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A540  +
mov eax 64h +
sub eax [ebp+var_10] +
push eax  +
push 1  +
push 405h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A540  +
jmp loc_1029875  +
mov ecx 64h +
sub ecx [ebp+var_C] +
push ecx  +
push 1  +
push 405h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A540  +
push 0  +
mov ecx [ebp+var_14] +
call sub_1028250  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
fld  dword ptr [eax+5Ch] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_10363EE  +
mov eax large fs:0 +
push eax  +
sub esp 9Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_A4] ecx +
cmp [ebp+arg_4] 42Ah +
jnz loc_1029A55  +
mov eax dword_103B808 +
and eax 1 +
jnz loc_1029925  +
mov ecx dword_103B808 +
or ecx 1 +
mov dword_103B808 ecx +
mov [ebp+var_4] 0 +
call sub_102ED00  +
neg eax  +
sbb eax eax +
add eax 1 +
mov dword_103B804 eax +
mov [ebp+var_4] 0FFFFFFFFh +
cmp dword_103B804 0 +
jz loc_1029A50  +
fldz   +
fstp  [ebp+var_24] +
mov [ebp+var_20] 0 +
mov [ebp+var_18] 0 +
mov [ebp+var_1C] 0 +
mov ecx [ebp+var_A4] +
add ecx 2Ch +
call sub_101A960  +
mov ecx [ebp+var_A4] +
add ecx 44h +
call sub_1024680  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_10299C0  +
lea edx [ebp+var_10] +
push edx  +
lea eax [ebp+var_14] +
push eax  +
mov ecx [ebp+var_A4] +
add ecx 44h +
call sub_1027580  +
cmp [ebp+var_10] 0 +
jz loc_10299BE  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_1029C90  +
mov [ebp+var_28] eax +
cmp [ebp+var_28] 0 +
jl loc_10299BE  +
fld  [ebp+var_2C] +
fld  [ebp+var_24] +
fcompp st(1) st +
fnstsw  ax +
test ah 5 +
jp loc_10299BE  +
fld  [ebp+var_2C] +
fstp  [ebp+var_24] +
mov [ebp+var_1C] 1 +
jmp loc_102996B  +
mov ecx [ebp+var_A4] +
add ecx 2Ch +
call sub_101A980  +
cmp [ebp+var_1C] 0 +
jz loc_1029A1D  +
fld  [ebp+var_24] +
fmul  ds:dbl_1002168 +
mov edx [ebp+var_A4] +
fmul  dword ptr [edx+60h] +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_20] eax +
mov eax [ebp+var_A4] +
fld  dword ptr [eax+5Ch] +
mov ecx [ebp+var_A4] +
fmul  dword ptr [ecx+60h] +
fmul  [ebp+var_24] +
fmul  ds:dbl_1002168 +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_18] eax +
mov edx [ebp+var_20] +
and edx 0FFFFh +
movzx eax dx +
mov ecx [ebp+var_18] +
and ecx 0FFFFh +
movzx edx cx +
shl edx 10h +
or eax edx +
push eax  +
push 1  +
push 434h  +
mov ecx [ebp+var_A4] +
add ecx 6Ch +
call sub_101A570  +
jmp loc_1029C76  +
cmp [ebp+arg_4] 42Bh +
jnz loc_1029C1D  +
fldz   +
fstp  [ebp+var_9C] +
fld  ds:flt_1002720 +
fstp  [ebp+var_98] +
fld  ds:flt_100271C +
fstp  [ebp+var_94] +
fld  ds:flt_1002718 +
fstp  [ebp+var_90] +
fld  ds:flt_1002714 +
fstp  [ebp+var_8C] +
fld  ds:flt_1002710 +
fstp  [ebp+var_88] +
fld  ds:flt_100270C +
fstp  [ebp+var_84] +
fld  ds:flt_1002708 +
fstp  [ebp+var_80] +
fld  ds:flt_1002704 +
fstp  [ebp+var_7C] +
fld  ds:flt_1002700 +
fstp  [ebp+var_78] +
fld  ds:flt_10026FC +
fstp  [ebp+var_74] +
fld  ds:flt_10026F8 +
fstp  [ebp+var_70] +
fld  ds:flt_10026F4 +
fstp  [ebp+var_6C] +
fld  ds:flt_10026F0 +
fstp  [ebp+var_68] +
fld  ds:flt_10026EC +
fstp  [ebp+var_64] +
fld  ds:flt_10026E8 +
fstp  [ebp+var_60] +
fld  ds:flt_10026E4 +
fstp  [ebp+var_5C] +
fld  ds:flt_10026E0 +
fstp  [ebp+var_58] +
fld  ds:flt_10026DC +
fstp  [ebp+var_54] +
fld  ds:flt_10026D8 +
fstp  [ebp+var_50] +
fld  ds:flt_10026D4 +
fstp  [ebp+var_4C] +
fld  ds:flt_10026D0 +
fstp  [ebp+var_48] +
fld  ds:flt_10026CC +
fstp  [ebp+var_44] +
fld  ds:flt_10026C8 +
fstp  [ebp+var_40] +
fld  ds:flt_10026C4 +
fstp  [ebp+var_3C] +
fld  ds:flt_10026C0 +
fstp  [ebp+var_38] +
fld1   +
fstp  [ebp+var_34] +
call sub_102ED00  +
test eax eax +
jnz loc_1029C1B  +
mov eax [ebp+var_A4] +
mov ecx [eax+2C8h] +
mov edx [ebp+var_A4] +
mov eax [ebp+var_A4] +
mov edx [edx+2D0h] +
sub edx [eax+2CCh] +
mov [ebp+var_A8] edx +
fild  [ebp+var_A8] +
fmul  [ebp+ecx*4+var_9C] +
call _ftol2_sse  +
mov ecx [ebp+var_A4] +
add eax [ecx+2CCh] +
mov [ebp+var_A0] eax +
mov edx 64h +
sub edx [ebp+var_A0] +
push edx  +
push 1  +
push 405h  +
mov ecx [ebp+var_A4] +
add ecx 6Ch +
call sub_101A570  +
mov eax [ebp+var_A4] +
mov ecx [eax+2C8h] +
add ecx 1 +
mov edx [ebp+var_A4] +
mov [edx+2C8h] ecx +
mov eax [ebp+var_A4] +
cmp dword ptr [eax+2C8h] 1Bh +
jb loc_1029C1B  +
push 42Bh  +
mov ecx [ebp+var_A4] +
add ecx 4 +
call sub_101E4D0  +
jmp loc_1029C76  +
mov ecx [ebp+var_A4] +
add ecx 2Ch +
call sub_101A960  +
mov ecx [ebp+var_A4] +
add ecx 44h +
call sub_1024680  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_1029C68  +
lea ecx [ebp+var_10] +
push ecx  +
lea edx [ebp+var_14] +
push edx  +
mov ecx [ebp+var_A4] +
add ecx 44h +
call sub_1027580  +
cmp [ebp+var_10] 0 +
jz loc_1029C66  +
mov ecx [ebp+var_10] +
call sub_1026060  +
jmp loc_1029C3C  +
mov ecx [ebp+var_A4] +
add ecx 2Ch +
call sub_101A980  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 0Ch +
call sub_1024680  +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+var_8] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036430  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_28] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
cmp [ebp+arg_0] 190h +
jz loc_1029D26  +
cmp [ebp+arg_0] 191h +
jz loc_1029D26  +
cmp [ebp+arg_0] 12Dh +
jnz loc_1029E4F  +
lea ecx [ebp+var_18] +
call sub_100B430  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_28] +
cmp dword ptr [ecx+24h] 0 +
jz loc_1029E3E  +
lea edx [ebp+var_18] +
push edx  +
mov eax [ebp+var_28] +
mov ecx [eax+24h] +
call sub_1026100  +
test eax eax +
jl loc_1029E3E  +
lea ecx [ebp+var_18] +
call sub_1024680  +
test eax eax +
jz loc_1029E3E  +
mov ecx [ebp+var_28] +
cmp dword ptr [ecx+298h] 0 +
jz loc_1029E24  +
lea ecx [ebp+var_20] +
call sub_101CBA0  +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_4] 2 +
mov edx [ebp+var_18] +
push edx  +
push 1FDh  +
lea eax [ebp+var_20] +
push eax  +
call sub_1020250  +
add esp 0Ch +
jmp loc_1029DD3  +
mov ecx [ebp-24h] +
call sub_1024680  +
cmp eax 0C00000FDh +
jnz loc_1029DBB  +
call _resetstkoflw  +
mov ecx [ebp-24h] +
call sub_1024680  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1029DDA +
retn   +
mov [ebp+var_4] 1 +
cmp [ebp+var_1C] 0 +
jl loc_1029DFC  +
lea ecx [ebp+var_20] +
call sub_1024680  +
push eax  +
push 0A0h  +
mov ecx [ebp+var_14] +
add ecx 10h +
push ecx  +
call sub_1024720  +
jmp loc_1029E16  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
push 0A0h  +
mov edx [ebp+var_14] +
add edx 10h +
push edx  +
call sub_1024720  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_20] +
call sub_101AD70  +
jmp loc_1029E3E  +
lea ecx [ebp+var_18] +
call sub_1024680  +
push eax  +
push 0A0h  +
mov eax [ebp+var_14] +
add eax 10h +
push eax  +
call sub_1024720  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_1028220  +
jmp loc_1029E58  +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov [ebp+var_8] 0 +
mov ecx [ebp+var_10] +
add ecx 2Ch +
call sub_101A960  +
mov ecx [ebp+var_10] +
add ecx 44h +
call sub_1024680  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_1029EE0  +
lea eax [ebp+var_4] +
push eax  +
lea ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 44h +
call sub_1027580  +
mov edx [ebp+lParam] +
cmp edx [ebp+var_4] +
jnz loc_1029EDE  +
mov ecx [ebp+var_10] +
call sub_10295D0  +
jmp loc_1029FD9  +
jmp loc_1029FD9  +
jmp loc_1029EAB  +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+var_10] +
add ecx 44h +
call sub_1027390  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_1029FD9  +
mov ecx [ebp+lParam] +
mov edx [ecx] +
mov eax [ebp+lParam] +
push eax  +
mov ecx [edx+4] +
call ecx  +
mov [ebp+var_8] 1 +
mov edx [ebp+var_10] +
cmp dword ptr [edx+24h] 0 +
jz loc_1029F2D  +
mov eax [ebp+var_10] +
mov ecx [eax+24h] +
push ecx  +
mov ecx [ebp+lParam] +
call sub_102A000  +
test eax eax +
jz loc_1029F60  +
mov edx [ebp+var_10] +
mov eax [ebp+lParam] +
mov [edx+24h] eax +
mov ecx [ebp+var_10] +
mov edx [ecx+24h] +
mov eax [ebp+var_10] +
mov ecx [eax+24h] +
mov edx [edx] +
push ecx  +
mov eax [edx+4] +
call eax  +
mov ecx [ebp+lParam] +
push ecx  +
push 2  +
push 41Ah  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_101A570  +
mov edx [ebp+var_10] +
cmp dword ptr [edx+28h] 0 +
jz loc_1029F7C  +
mov eax [ebp+var_10] +
mov ecx [eax+28h] +
push ecx  +
mov ecx [ebp+lParam] +
call sub_102A030  +
test eax eax +
jz loc_1029FAF  +
mov edx [ebp+var_10] +
mov eax [ebp+lParam] +
mov [edx+28h] eax +
mov ecx [ebp+var_10] +
mov edx [ecx+28h] +
mov eax [ebp+var_10] +
mov ecx [eax+28h] +
mov edx [edx] +
push ecx  +
mov eax [edx+4] +
call eax  +
mov ecx [ebp+lParam] +
push ecx  +
push 1  +
push 41Ah  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_101A570  +
mov edx [ebp+var_10] +
mov eax [edx+24h] +
push eax  +
mov ecx [ebp+lParam] +
call sub_10261D0  +
mov ecx [ebp+var_10] +
mov edx [ecx+28h] +
push edx  +
mov ecx [ebp+lParam] +
call sub_10261D0  +
mov eax [ebp+var_10] +
push eax  +
mov ecx [ebp+lParam] +
call sub_1024830  +
mov ecx [ebp+var_10] +
add ecx 2Ch +
call sub_101A980  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov edx [eax+3Ch] +
xor eax eax +
cmp edx [ecx+3Ch] +
setl al  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov edx [eax+38h] +
xor eax eax +
cmp edx [ecx+38h] +
setl al  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_1C] ecx +
mov ecx [ebp+var_1C] +
add ecx 2Ch +
call sub_101A960  +
mov eax [ebp+var_1C] +
mov dword ptr [eax+24h] 0 +
mov ecx [ebp+var_1C] +
mov dword ptr [ecx+28h] 0 +
mov edx [ebp+var_1C] +
mov dword ptr [edx+20h] 0 +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_1024680  +
mov [ebp+var_18] eax +
mov eax [ebp+var_18] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_102A102  +
lea ecx [ebp+var_8] +
push ecx  +
lea edx [ebp+var_4] +
push edx  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_1027580  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_8] +
jnz loc_102A0FA  +
push 0  +
mov ecx [ebp+arg_0] +
call sub_1024830  +
mov ecx [ebp+var_18] +
push ecx  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_10274E0  +
mov ecx [ebp+arg_0] +
call sub_1025860  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [eax+8] +
call edx  +
jmp loc_102A102  +
mov eax [ebp+var_4] +
mov [ebp+var_18] eax +
jmp loc_102A0A8  +
mov [ebp+var_10] 0 +
mov [ebp+var_14] 0 +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_1024680  +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jz loc_102A191  +
lea ecx [ebp+var_8] +
push ecx  +
lea edx [ebp+var_18] +
push edx  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_1027580  +
mov eax [ebp+var_1C] +
cmp dword ptr [eax+24h] 0 +
jz loc_102A153  +
mov ecx [ebp+var_1C] +
mov edx [ecx+24h] +
push edx  +
mov ecx [ebp+var_8] +
call sub_102A000  +
test eax eax +
jz loc_102A163  +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_8] +
mov [eax+24h] ecx +
mov [ebp+var_10] 1 +
mov edx [ebp+var_1C] +
cmp dword ptr [edx+28h] 0 +
jz loc_102A17F  +
mov eax [ebp+var_1C] +
mov ecx [eax+28h] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_102A030  +
test eax eax +
jz loc_102A18F  +
mov edx [ebp+var_1C] +
mov eax [ebp+var_8] +
mov [edx+28h] eax +
mov [ebp+var_14] 1 +
jmp loc_102A11E  +
cmp [ebp+var_10] 0 +
jz loc_102A1CD  +
mov ecx [ebp+var_1C] +
cmp dword ptr [ecx+24h] 0 +
jz loc_102A1CD  +
mov edx [ebp+var_1C] +
mov eax [edx+24h] +
mov ecx [ebp+var_1C] +
mov edx [ecx+24h] +
mov eax [eax] +
push edx  +
mov ecx [eax+4] +
call ecx  +
mov edx [ebp+var_1C] +
mov eax [edx+24h] +
push eax  +
push 2  +
push 41Ah  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_101A570  +
cmp [ebp+var_14] 0 +
jz loc_102A209  +
mov ecx [ebp+var_1C] +
cmp dword ptr [ecx+28h] 0 +
jz loc_102A209  +
mov edx [ebp+var_1C] +
mov eax [edx+28h] +
mov ecx [ebp+var_1C] +
mov edx [ecx+28h] +
mov eax [eax] +
push edx  +
mov ecx [eax+4] +
call ecx  +
mov edx [ebp+var_1C] +
mov eax [edx+28h] +
push eax  +
push 1  +
push 41Ah  +
mov ecx [ebp+var_1C] +
add ecx 4 +
call sub_101A570  +
mov ecx [ebp+var_1C] +
add ecx 20h +
push ecx  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_101E410  +
mov ecx [ebp+var_1C] +
add ecx 44h +
call sub_101A0A0  +
mov [ebp+var_C] eax +
mov ecx [ebp+var_1C] +
add ecx 2Ch +
call sub_101A980  +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov eax hWnd +
push eax  +
call ds:PostMessageW  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_18] ecx +
mov [ebp+var_14] 0 +
lea eax [ebp+pvar] +
push eax  +
call sub_1023100  +
lea ecx [ebp+pvar] +
push ecx  +
push offset dword_10017D4  +
mov edx [ebp+var_18] +
mov ecx [edx+20h] +
call sub_1026250  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_102A2CC  +
jmp loc_102A348  +
jmp loc_102A348  +
movzx eax [ebp+pvar.vt] +
cmp eax 0Bh +
jnz loc_102A33E  +
movsx ecx word ptr [ebp+pvar.anonymous_0] +
cmp ecx 0FFFFFFFFh +
jnz loc_102A33E  +
mov edx [ebp+var_18] +
mov dword ptr [edx+298h] 1 +
lea eax [ebp+pvar] +
push eax  +
call sub_1023100  +
lea ecx [ebp+pvar] +
push ecx  +
push offset dword_10017E8  +
mov edx [ebp+var_18] +
mov ecx [edx+20h] +
call sub_1026250  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jge loc_102A315  +
jmp loc_102A348  +
jmp loc_102A348  +
movzx eax [ebp+pvar.vt] +
cmp eax 1Fh +
jnz loc_102A332  +
cmp dword ptr [ebp+pvar.anonymous_0] 0 +
jz loc_102A332  +
mov ecx [ebp+var_18] +
mov edx dword ptr [ebp+pvar.anonymous_0] +
mov [ecx+29Ch] edx +
jmp loc_102A33C  +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantClear  +
jmp loc_102A348  +
lea ecx [ebp+pvar] +
push ecx  +
call ds:PropVariantClear  +
mov eax [ebp+var_14] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 2 +
mov eax [ebp+arg_4] +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_102A382  +
jmp loc_102A3D2  +
jmp loc_102A3D2  +
mov ecx [ebp+var_10] +
add ecx 2B4h +
push ecx  +
mov edx [ebp+var_10] +
mov ecx [edx+20h] +
call sub_1026150  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jge loc_102A3A4  +
jmp loc_102A3D2  +
jmp loc_102A3D2  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_8] +
mov edx [eax+2B4h] +
cmp edx [ecx] +
jnz loc_102A3BD  +
mov [ebp+var_4] 0 +
jmp loc_102A3D2  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_10] +
mov edx [ecx+2B4h] +
mov [eax] edx +
mov [ebp+var_4] 1 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call ds:DwmIsCompositionEnabled  +
test eax eax +
jl loc_102A486  +
cmp [ebp+var_4] 0 +
jz loc_102A44D  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+2BCh] 0 +
jz loc_102A44B  +
mov edx [ebp+var_8] +
cmp dword ptr [edx+2B8h] 0 +
jnz loc_102A44B  +
mov eax [ebp+var_8] +
mov ecx [eax+2B4h] +
push ecx  +
mov ecx [ebp+var_8] +
add ecx 194h +
call sub_10309D0  +
test eax eax +
jl loc_102A44B  +
mov edx [ebp+var_8] +
mov dword ptr [edx+2B8h] 1 +
jmp loc_102A486  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+2BCh] 0 +
jz loc_102A486  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+2B8h] 0 +
jz loc_102A486  +
push 0  +
mov ecx [ebp+var_8] +
add ecx 194h +
call sub_10309D0  +
test eax eax +
jl loc_102A486  +
mov edx [ebp+var_8] +
mov dword ptr [edx+2B8h] 0 +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov ecx [eax+20h] +
mov edx [ebp+var_14] +
mov eax [edx+20h] +
mov ecx [ecx] +
push eax  +
mov edx [ecx+2Ch] +
call edx  +
mov eax [ebp+var_14] +
mov ecx [eax+20h] +
call sub_1029890  +
fstp  [ebp+var_8] +
mov ecx [ebp+var_14] +
fld  dword ptr [ecx+60h] +
fmul  ds:dbl_1002168 +
mov edx [ebp+var_14] +
fmul  dword ptr [edx+5Ch] +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_4] eax +
mov eax [ebp+var_14] +
fld  dword ptr [eax+60h] +
fmul  ds:dbl_1002168 +
fmul  [ebp+var_8] +
mov ecx [ebp+var_14] +
fmul  dword ptr [ecx+5Ch] +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_C] eax +
fld  [ebp+var_8] +
fcomp  ds:dbl_10026B8 +
fnstsw  ax +
test ah 5 +
jp loc_102A5A9  +
call sub_102ED00  +
test eax eax +
jz loc_102A54A  +
mov edx 64h +
sub edx [ebp+var_C] +
push edx  +
push 1  +
push 405h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A570  +
jmp loc_102A583  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_4] +
mov [eax+2CCh] ecx +
mov edx [ebp+var_14] +
mov eax [ebp+var_C] +
mov [edx+2D0h] eax +
mov ecx [ebp+var_14] +
mov dword ptr [ecx+2C8h] 0 +
push 0  +
push 28h  +
push 42Bh  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101E4A0  +
mov edx [ebp+var_14] +
mov eax 64h +
sub eax [edx+2CCh] +
push eax  +
push 0  +
push 437h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A540  +
jmp loc_102A646  +
call sub_102ED00  +
test eax eax +
jz loc_102A5CF  +
mov ecx 64h +
sub ecx [ebp+var_4] +
push ecx  +
push 1  +
push 405h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A570  +
jmp loc_102A632  +
push 0  +
push 0  +
push 400h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A540  +
mov [ebp+var_10] eax +
mov edx 64h +
sub edx [ebp+var_10] +
mov [ebp+var_10] edx +
mov eax [ebp+var_10] +
cmp eax [ebp+var_4] +
jz loc_102A632  +
mov ecx [ebp+var_14] +
mov edx [ebp+var_10] +
mov [ecx+2CCh] edx +
mov eax [ebp+var_14] +
mov ecx [ebp+var_4] +
mov [eax+2D0h] ecx +
mov edx [ebp+var_14] +
mov dword ptr [edx+2C8h] 0 +
push 0  +
push 28h  +
push 42Bh  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101E4A0  +
push 0  +
push 0  +
push 438h  +
mov ecx [ebp+var_14] +
add ecx 6Ch +
call sub_101A540  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov [ebp+var_8] 4 +
lea eax [ebp+var_8] +
push eax  +
lea ecx [ebp+var_4] +
push ecx  +
push 0  +
push 18h  +
mov edx ds:off_100261C +
push edx  +
mov eax ds:off_1002618 +
push eax  +
push 80000001h  +
call ds:RegGetValueW  +
test eax eax +
jnz loc_102A6AD  +
cmp [ebp+var_4] 0 +
jz loc_102A6AD  +
mov ecx [ebp+var_C] +
mov dword ptr [ecx+2BCh] 1 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov eax offset loc_102A830 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 1 +
mov eax [ebp+arg_14] +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_102A700  +
jmp loc_102A771  +
cmp [ebp+arg_4] 110h +
jnz loc_102A73A  +
mov [ebp+var_4] 1 +
lea ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_102A780  +
mov edx [ebp+arg_10] +
mov [edx] eax +
cmp [ebp+var_4] 0 +
jz loc_102A73A  +
mov eax 1 +
jmp loc_102A773  +
cmp [ebp+arg_4] 2 +
jnz loc_102A771  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_8] +
call sub_102A7C0  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
jz loc_102A771  +
mov eax 1 +
jmp loc_102A773  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0CAh  +
mov ecx [ebp+var_4] +
call sub_1019AD0  +
push 1  +
mov ecx [ebp+var_4] +
call sub_102A7F0  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
mov ecx [ebp+var_4] +
call sub_102A7F0  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
movzx eax [ebp+arg_0] +
test eax eax +
jnz loc_102A810  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+4] 0 +
jnz loc_102A810  +
xor eax eax +
jmp loc_102A81A  +
mov [ebp+var_4] 80004001h +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+8] +
mov [ebp-4] eax +
cmp dword ptr [ebp+0Ch] 110h +
jnz loc_102A882  +
mov ecx [ebp-4] +
call sub_102A8B0  +
push eax  +
mov ecx [ebp-4] +
mov edx [ecx] +
mov ecx [ebp-4] +
mov eax [edx+10h] +
call eax  +
mov [ebp-8] eax +
cmp dword ptr [ebp-8] 0 +
jge loc_102A882  +
mov ecx [ebp-4] +
call sub_1008B40  +
mov ecx [ebp-8] +
and ecx 0FFFFh +
push ecx  +
call ds:SetLastError  +
xor eax eax +
jmp loc_102A897  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov edx [ebp+8] +
push edx  +
call sub_101B970  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax 0CAh +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+nIndex] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:GetWindowLongW  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
and eax 0FFFFh +
movzx ecx ax +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
push 30h  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SendMessageW  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0  +
push 0  +
push 31h  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:SendMessageW  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
push 104h  +
lea ecx [ebp+var_210] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call ds:InternalGetWindowText  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 1 +
jg loc_102A9B1  +
xor eax eax +
jmp loc_102A9F6  +
mov eax [ebp+var_4] +
lea ecx [eax+eax+2] +
push ecx  +
call ds:CoTaskMemAlloc  +
mov edx [ebp+arg_4] +
mov [edx] eax +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jnz loc_102A9D0  +
xor eax eax +
jmp loc_102A9F6  +
lea ecx [ebp+var_210] +
push ecx  +
mov edx [ebp+var_4] +
add edx 1 +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push ecx  +
call sub_101A9A0  +
test eax eax +
jge loc_102A9F1  +
xor eax eax +
jmp loc_102A9F6  +
mov eax 1 +
mov ecx [ebp+var_8] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_8] 1 +
mov eax [ebp+arg_4] +
mov [ebp+var_18] eax +
push 4  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetWindow  +
mov [ebp+var_4] eax +
push 0FFFFFFECh  +
mov edx [ebp+hWnd] +
push edx  +
call ds:GetWindowLongW  +
mov [ebp+var_14] eax +
cmp [ebp+var_4] 0 +
jz loc_102AA62  +
mov eax [ebp+var_4] +
push eax  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_102AA62  +
mov ecx [ebp+var_14] +
and ecx 40000h +
jz loc_102AA88  +
mov edx [ebp+hWnd] +
push edx  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_102AA88  +
mov eax [ebp+var_14] +
and eax 80h +
jnz loc_102AA88  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GhostWindowFromHungWindow  +
test eax eax +
jz loc_102AA8C  +
jmp loc_102AAC8  +
jmp loc_102AAC8  +
lea edx [ebp+dwProcessId] +
push edx  +
mov eax [ebp+hWnd] +
push eax  +
call ds:GetWindowThreadProcessId  +
mov ecx [ebp+var_18] +
mov edx [ecx] +
cmp edx [ebp+dwProcessId] +
jz loc_102AAA8  +
jmp loc_102AAC8  +
jmp loc_102AAC8  +
mov eax [ebp+var_18] +
add eax 4 +
push eax  +
mov ecx [ebp+hWnd] +
push ecx  +
call sub_102A970  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_102AAC8  +
mov [ebp+var_8] 0 +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] 0 +
mov [ebp+lParam] 0 +
xor eax eax +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov [ebp+lParam] ecx +
mov edx [ebp+arg_4] +
mov dword ptr [edx] 0 +
lea eax [ebp+lParam] +
push eax  +
push offset sub_102AA10  +
call ds:EnumWindows  +
cmp [ebp+var_4] 0 +
jz loc_102AB2E  +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_4] +
mov [ecx] edx +
mov [ebp+var_C] 1 +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6FCh +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_C] eax +
mov [ebp+var_8] 0 +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
mov ecx [ebp+dwProcessId] +
push ecx  +
push 0  +
push 1000h  +
call ds:OpenProcess  +
mov [ebp+hObject] eax +
cmp [ebp+hObject] 0 +
jz loc_102AC8D  +
mov [ebp+var_43C] 104h +
lea edx [ebp+var_43C] +
push edx  +
lea eax [ebp+pszPath] +
push eax  +
push 0  +
mov ecx [ebp+hObject] +
push ecx  +
call ds:QueryFullProcessImageNameW  +
test eax eax +
jz loc_102AC83  +
xor edx edx +
mov word ptr [ebp+var_438] dx +
mov [ebp+var_224] 105h +
lea eax [ebp+var_224] +
push eax  +
lea ecx [ebp+var_438] +
push ecx  +
push 0  +
push 0  +
lea edx [ebp+pszPath] +
push edx  +
call ds:SHLWAPI_348  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_102AC11  +
movzx eax word ptr [ebp+var_438] +
test eax eax +
jz loc_102AC11  +
mov ecx [ebp+arg_4] +
push ecx  +
lea edx [ebp+var_438] +
push edx  +
call sub_1034B60  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [ebp+var_8] ecx +
jmp loc_102AC83  +
push 200h  +
push 2B4h  +
lea edx [ebp+psfi] +
push edx  +
push 0  +
lea eax [ebp+pszPath] +
push eax  +
call ds:SHGetFileInfoW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_102AC56  +
mov ecx [ebp+arg_4] +
push ecx  +
lea edx [ebp+psfi.szDisplayName] +
push edx  +
call sub_1034B60  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [ebp+var_8] ecx +
jmp loc_102AC83  +
lea edx [ebp+pszPath] +
push edx  +
call ds:PathFindFileNameW  +
mov [ebp+var_6FC] eax +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_6FC] +
push ecx  +
call sub_1034B60  +
xor edx edx +
test eax eax +
setnl dl  +
mov [ebp+var_8] edx +
mov eax [ebp+hObject] +
push eax  +
call ds:CloseHandle  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_C] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] 0 +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
push 0  +
push 0  +
call ds:FindWindowW  +
mov [ebp+hWnd] eax +
jmp loc_102ACE6  +
push 2  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetWindow  +
mov [ebp+hWnd] eax +
cmp [ebp+hWnd] 0 +
jz loc_102ADAF  +
mov edx [ebp+hWnd] +
push edx  +
call ds:IsWindow  +
test eax eax +
jz loc_102ADAF  +
mov [ebp+dwProcessId] 0 +
mov eax [ebp+hWnd] +
push eax  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_102ADAA  +
lea ecx [ebp+dwProcessId] +
push ecx  +
mov edx [ebp+hWnd] +
push edx  +
call ds:GetWindowThreadProcessId  +
test eax eax +
jz loc_102ADAA  +
mov eax [ebp+arg_0] +
cmp eax [ebp+dwProcessId] +
jnz loc_102ADAA  +
push 0  +
push 1  +
push 7Fh  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:SendMessageW  +
mov edx [ebp+arg_4] +
mov [edx] eax +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jnz loc_102AD63  +
push 0FFFFFFF2h  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetClassLongW  +
mov edx [ebp+arg_4] +
mov [edx] eax +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jnz loc_102AD7C  +
push 0FFFFFFDEh  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetClassLongW  +
mov edx [ebp+arg_4] +
mov [edx] eax +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jnz loc_102AD99  +
push 0  +
push 0  +
push 7Fh  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:SendMessageW  +
mov edx [ebp+arg_4] +
mov [edx] eax +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jz loc_102ADAA  +
mov [ebp+var_8] 1 +
jmp loc_102ADAF  +
jmp loc_102ACD7  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4E0h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_C] eax +
mov [ebp+var_8] 0 +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
mov ecx [ebp+dwProcessId] +
push ecx  +
push 0  +
push 1000h  +
call ds:OpenProcess  +
mov [ebp+hObject] eax +
cmp [ebp+hObject] 0 +
jz loc_102AE65  +
mov [ebp+var_224] 104h +
lea edx [ebp+var_224] +
push edx  +
lea eax [ebp+pszPath] +
push eax  +
push 0  +
mov ecx [ebp+hObject] +
push ecx  +
call ds:QueryFullProcessImageNameW  +
test eax eax +
jz loc_102AE5B  +
push 100h  +
push 2B4h  +
lea edx [ebp+psfi] +
push edx  +
push 0  +
lea eax [ebp+pszPath] +
push eax  +
call ds:SHGetFileInfoW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jz loc_102AE5B  +
mov ecx [ebp+arg_4] +
mov edx [ebp+psfi.hIcon] +
mov [ecx] edx +
mov eax [ebp+hObject] +
push eax  +
call ds:CloseHandle  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_C] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
push 0  +
push 104h  +
lea eax [ebp+var_210] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:SHLoadIndirectString  +
mov [ebp+var_214] eax +
cmp [ebp+var_214] 0 +
jge loc_102AEC0  +
jmp loc_102AED6  +
jmp loc_102AED6  +
mov edx [ebp+arg_4] +
push edx  +
lea eax [ebp+var_210] +
push eax  +
call sub_1034B60  +
mov [ebp+var_214] eax +
mov eax [ebp+var_214] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_8] 0 +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
push 0  +
push 0  +
call ds:FindWindowW  +
mov [ebp+hWnd] eax +
jmp loc_102AF36  +
push 2  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetWindow  +
mov [ebp+hWnd] eax +
cmp [ebp+hWnd] 0 +
jz loc_102AFD3  +
mov edx [ebp+hWnd] +
push edx  +
call ds:IsWindow  +
test eax eax +
jz loc_102AFD3  +
mov [ebp+dwProcessId] 0 +
mov eax [ebp+hWnd] +
push eax  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_102AFCE  +
lea ecx [ebp+dwProcessId] +
push ecx  +
mov edx [ebp+hWnd] +
push edx  +
call ds:GetWindowThreadProcessId  +
test eax eax +
jz loc_102AFCE  +
mov eax [ebp+arg_0] +
cmp eax [ebp+dwProcessId] +
jnz loc_102AFCE  +
mov ecx [ebp+hWnd] +
mov [ebp+var_14] ecx +
mov edx [ebp+var_14] +
push edx  +
call ds:GetParent  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jz loc_102AFBD  +
mov eax [ebp+var_10] +
push eax  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_102AFBD  +
mov ecx [ebp+var_10] +
mov [ebp+var_14] ecx +
mov edx [ebp+var_14] +
push edx  +
call ds:GetParent  +
mov [ebp+var_10] eax +
jmp loc_102AF94  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_14] +
mov [eax] ecx +
mov [ebp+var_8] 1 +
jmp loc_102AFD3  +
jmp loc_102AF27  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024C10  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1002734 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+28h] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_102B053  +
jmp loc_102B16F  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_102B08D  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_102B7E0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102B08D  +
mov eax 1 +
jmp loc_102B171  +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_102B0C7  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_102B7E0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102B0C7  +
mov eax 1 +
jmp loc_102B171  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_102B0FE  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102B3E0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102B0FE  +
mov eax 1 +
jmp loc_102B171  +
cmp dword ptr [ebp+0Ch] 5 +
jnz loc_102B135  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102B8D0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102B135  +
mov eax 1 +
jmp loc_102B171  +
cmp dword ptr [ebp+0Ch] 31Ah +
jnz loc_102B16F  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102B960  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102B16F  +
mov eax 1 +
jmp loc_102B171  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_102B1C0  +
mov eax [ebp+8] +
and eax 1 +
jz loc_102B1A5  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1002734 +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+24h] 0 +
jz loc_102B1F2  +
mov edx [ebp+var_4] +
mov eax [edx+24h] +
push eax  +
call ds:DeleteObject  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] 0 +
mov edx [ebp+var_4] +
cmp dword ptr [edx+28h] 0 +
jz loc_102B208  +
mov eax [ebp+var_4] +
mov ecx [eax+28h] +
push ecx  +
call ds:CloseThemeData  +
mov ecx [ebp+var_4] +
call sub_1014040  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036458  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
push offset aButton  +
push 0  +
call ds:OpenThemeData  +
mov ecx [ebp+var_3C] +
mov [ecx+28h] eax +
lea edx [ebp+Points] +
push edx  +
mov eax [ebp+hWnd] +
push eax  +
call ds:GetWindowRect  +
push 2  +
lea ecx [ebp+Points] +
push ecx  +
mov edx [ebp+hWnd] +
push edx  +
call ds:GetParent  +
push eax  +
push 0  +
call ds:MapWindowPoints  +
mov eax [ebp+hWnd] +
push eax  +
call ds:GetWindowTextLengthW  +
mov [ebp+var_24] eax +
lea ecx [ebp+var_10] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_24] +
add ecx 1 +
push ecx  +
lea ecx [ebp+var_10] +
call sub_1019510  +
lea ecx [ebp+var_10] +
call sub_1024680  +
test eax eax +
jz loc_102B2D5  +
mov edx [ebp+var_24] +
add edx 1 +
push edx  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
mov eax [ebp+hWnd] +
push eax  +
call ds:GetWindowTextW  +
push 0  +
push 0FFFFFFF4h  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetWindowLongW  +
push ecx  +
mov ecx esp +
mov [ebp+var_2C] esp +
push eax  +
call sub_1007F90  +
push 0FFFFFFECh  +
mov edx [ebp+hWnd] +
push edx  +
call ds:GetWindowLongW  +
push eax  +
push 0FFFFFFF0h  +
mov eax [ebp+hWnd] +
push eax  +
call ds:GetWindowLongW  +
push eax  +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
push ecx  +
mov ecx esp +
mov [ebp+var_30] esp +
lea edx [ebp+Points] +
push edx  +
call sub_1007F90  +
mov eax [ebp+hWnd] +
push eax  +
call ds:GetParent  +
push eax  +
mov ecx [ebp+var_3C] +
call sub_102B9B0  +
mov [ebp+var_28] eax +
cmp [ebp+var_28] 0 +
jz loc_102B38B  +
push 0FFFFFFE6h  +
mov ecx [ebp+var_28] +
push ecx  +
call ds:GetClassLongW  +
and eax 0FFFFFFFCh +
push eax  +
push 0FFFFFFE6h  +
mov edx [ebp+var_28] +
push edx  +
call ds:SetClassLongW  +
push 1  +
push 0  +
push 0  +
push 31h  +
mov eax [ebp+hWnd] +
push eax  +
call ds:SendMessageW  +
push eax  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_102A900  +
mov ecx [ebp+var_3C] +
add ecx 2Ch +
push ecx  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_100D6B0  +
jmp loc_102B3A6  +
mov [ebp+var_34] 80004005h +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1015A50  +
mov eax [ebp+var_34] +
jmp loc_102B3BF  +
mov [ebp+var_38] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_1015A50  +
mov eax [ebp+var_38] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
cmp off_103B010 offset off_103B010 +
jz loc_102B439  +
mov eax off_103B010 +
mov ecx [eax+1Ch] +
and ecx 20000000h +
jz loc_102B439  +
mov edx off_103B010 +
movzx eax byte ptr [edx+19h] +
cmp eax 4 +
jl loc_102B439  +
push offset dword_1002724  +
push 0Bh  +
mov ecx off_103B010 +
mov edx [ecx+14h] +
push edx  +
mov eax [ecx+10h] +
push eax  +
call sub_1016950  +
mov [ebp+var_C] 1 +
jmp loc_102B440  +
mov [ebp+var_C] 0 +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] ecx +
push 0  +
push 4  +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+var_8] +
mov ecx [eax+4] +
push ecx  +
call ds:DrawThemeParentBackgroundEx  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_103648E  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_30] ecx +
mov eax dword_103BBFC +
and eax 1 +
jnz loc_102B4E2  +
mov ecx dword_103BBFC +
or ecx 1 +
mov dword_103BBFC ecx +
mov [ebp+var_4] 0 +
push 7  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
mov dword_103BBF8 eax +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+arg_4] 0 +
jz loc_102B55A  +
cmp off_103B010 offset off_103B010 +
jz loc_102B551  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_102B551  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_102B551  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx+0Ch] +
push eax  +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax+4] +
push ecx  +
push offset dword_1002724  +
push 0Ch  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_102B790  +
mov [ebp+var_34] 1 +
jmp loc_102B558  +
mov [ebp+var_34] 0 +
jmp loc_102B5AE  +
cmp off_103B010 offset off_103B010 +
jz loc_102B5A7  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_102B5A7  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_102B5A7  +
push offset dword_1002724  +
push 0Dh  +
mov eax off_103B010 +
mov ecx [eax+14h] +
push ecx  +
mov edx [eax+10h] +
push edx  +
call sub_1016950  +
mov [ebp+var_38] 1 +
jmp loc_102B5AE  +
mov [ebp+var_38] 0 +
mov ecx [ebp+var_30] +
add ecx 4 +
call sub_102A940  +
mov [ebp+var_24] eax +
mov eax [ebp+var_24] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SelectObject  +
mov [ebp+var_28] eax +
push 5  +
call ds:GetSysColor  +
push eax  +
mov edx [ebp+hDC] +
push edx  +
call ds:SetBkColor  +
mov [ebp+var_2C] eax +
mov eax [ebp+var_30] +
cmp dword ptr [eax+28h] 0 +
jz loc_102B60B  +
push 8  +
mov ecx [ebp+var_30] +
mov edx [ecx+28h] +
push edx  +
call ds:GetThemeSysColor  +
push eax  +
mov eax [ebp+hDC] +
push eax  +
call ds:SetTextColor  +
mov [ebp+var_20] eax +
jmp loc_102B621  +
push 8  +
call ds:GetSysColor  +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SetTextColor  +
mov [ebp+var_20] eax +
lea edx [ebp+Rect] +
push edx  +
mov ecx [ebp+var_30] +
add ecx 4 +
call sub_100D6B0  +
mov eax [ebp+Rect.top] +
add eax dword_103BBF8 +
mov [ebp+Rect.top] eax +
mov ecx [ebp+var_30] +
cmp dword ptr [ecx+28h] 0 +
jz loc_102B6E5  +
push 1  +
push 4  +
mov edx [ebp+var_30] +
mov eax [edx+28h] +
push eax  +
call ds:IsThemeBackgroundPartiallyTransparent  +
test eax eax +
jz loc_102B6C8  +
cmp off_103B010 offset off_103B010 +
jz loc_102B6AC  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_102B6AC  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_102B6AC  +
push offset dword_1002724  +
push 0Eh  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_3C] 1 +
jmp loc_102B6B3  +
mov [ebp+var_3C] 0 +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_30] +
mov edx [ecx+4] +
push edx  +
call ds:DrawThemeParentBackground  +
push 0  +
lea eax [ebp+Rect] +
push eax  +
push 1  +
push 4  +
mov ecx [ebp+hDC] +
push ecx  +
mov edx [ebp+var_30] +
mov eax [edx+28h] +
push eax  +
call ds:DrawThemeBackground  +
jmp loc_102B6F7  +
push 0Fh  +
push 6  +
lea ecx [ebp+Rect] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:DrawEdge  +
push 1F4h  +
push offset word_103B810  +
mov ecx [ebp+var_30] +
add ecx 4 +
call sub_1022DB0  +
push 0Ah  +
mov ecx offset unk_103B5AC +
call sub_101CA00  +
add eax [ebp+Rect.left] +
mov [ebp+Rect.left] eax +
mov eax [ebp+Rect.top] +
sub eax dword_103BBF8 +
mov [ebp+Rect.top] eax +
push 0  +
lea ecx [ebp+Rect] +
push ecx  +
push 0FFFFFFFFh  +
push offset word_103B810  +
mov edx [ebp+hDC] +
push edx  +
call ds:DrawTextW  +
mov eax [ebp+var_28] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SelectObject  +
mov edx [ebp+var_20] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:SetTextColor  +
mov ecx [ebp+var_2C] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:SetBkColor  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_1C] +
push eax  +
push 4  +
lea ecx [ebp+arg_18] +
push ecx  +
push 4  +
lea edx [ebp+arg_14] +
push edx  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
movzx ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
push 2Bh  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call EtwTraceMessage  +
add esp 38h +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_50] ecx +
cmp [ebp+arg_4] 0 +
jnz loc_102B80F  +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A660  +
mov [ebp+hDC] eax +
jmp loc_102B815  +
mov ecx [ebp+arg_4] +
mov [ebp+hDC] ecx +
cmp off_103B010 offset off_103B010 +
jz loc_102B86A  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_102B86A  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_102B86A  +
mov eax [ebp+var_50] +
mov ecx [eax+4] +
push ecx  +
push offset dword_1002724  +
push 0Fh  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1018920  +
mov [ebp+var_54] 1 +
jmp loc_102B871  +
mov [ebp+var_54] 0 +
mov edx [ebp+arg_4] +
neg edx  +
sbb edx edx +
not edx  +
lea eax [ebp+Paint.rcPaint] +
and edx eax +
push edx  +
mov ecx [ebp+hDC] +
push ecx  +
mov ecx [ebp+var_50] +
call sub_102B480  +
cmp [ebp+arg_4] 0 +
jnz loc_102B8A1  +
lea edx [ebp+Paint] +
push edx  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A690  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov [ebp+var_24] ecx +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_100D6B0  +
mov ecx [ebp+var_24] +
add ecx 2Ch +
mov edx [ecx] +
mov [ebp+var_20] edx +
mov eax [ecx+4] +
mov [ebp+var_1C] eax +
mov edx [ecx+8] +
mov [ebp+var_18] edx +
mov eax [ecx+0Ch] +
mov [ebp+var_14] eax +
mov ecx [ebp+var_18] +
sub ecx 0Ah +
mov [ebp+var_20] ecx +
push 1  +
lea edx [ebp+var_20] +
push edx  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_1010530  +
mov eax [ebp+var_24] +
add eax 2Ch +
mov ecx [ebp+Rect.left] +
mov [eax] ecx +
mov edx [ebp+Rect.top] +
mov [eax+4] edx +
mov ecx [ebp+Rect.right] +
mov [eax+8] ecx +
mov edx [ebp+Rect.bottom] +
mov [eax+0Ch] edx +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+28h] 0 +
jz loc_102B97F  +
mov ecx [ebp+var_4] +
mov edx [ecx+28h] +
push edx  +
call ds:CloseThemeData  +
push offset aButton  +
push 0  +
call ds:OpenThemeData  +
mov ecx [ebp+var_4] +
mov [ecx+28h] eax +
push 1  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1010530  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov [ebp+var_8] ecx +
call sub_102BA50  +
cmp dword ptr [eax+30h] 0 +
jnz loc_102B9D6  +
call sub_1025250  +
mov esi eax +
call sub_102BA50  +
mov [eax+30h] esi +
mov eax [ebp+var_8] +
add eax 20h +
push eax  +
call sub_102BA50  +
mov ecx eax +
call sub_10090B0  +
mov [ebp+var_4] ax +
mov ecx [ebp+dwStyle] +
push ecx  +
call sub_1019910  +
mov [ebp+dwStyle] eax +
mov edx [ebp+dwExStyle] +
push edx  +
call sub_1014080  +
mov [ebp+dwExStyle] eax +
cmp [ebp+lpWindowName] 0 +
jnz loc_102BA13  +
call sub_1025250  +
mov [ebp+lpWindowName] eax +
mov eax [ebp+lpParam] +
push eax  +
movzx ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+hMenu] +
push edx  +
mov eax [ebp+dwExStyle] +
push eax  +
mov ecx [ebp+dwStyle] +
push ecx  +
mov edx [ebp+lpWindowName] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hWndParent] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_10140C0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset unk_103B3B8 +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [eax+4] +
push esi  +
mov esi [eax+8] +
push edi  +
mov edi [ebp+0Ch] +
sub edi [eax+0Ch] +
mov eax [eax+10h] +
mov ecx offset __ImageBase +
sub edi ecx +
sar edi 2 +
add esi ecx +
mov edx [esi] +
lea eax __ImageBase[eax+edi*4] +
add ebx ecx +
mov ecx [eax] +
mov [ebp+8] edx +
lea eax (__ImageBase+2)[ecx] +
test ecx ecx +
jns loc_102BAAB  +
movzx eax cx +
mov [ebp-8] eax +
test edx edx +
jnz loc_102BB2A  +
push edx  +
push edx  +
push ebx  +
call LoadLibraryExA  +
mov edi eax +
mov [ebp+8] edi +
test edi edi +
jz loc_102BB08  +
push 0  +
push edi  +
push esi  +
call InterlockedCompareExchange  +
mov esi eax +
test esi esi +
jnz loc_102BAFD  +
push 8  +
pop ecx  +
lea edi [ebp-28h] +
stos   +
mov eax [ebp+8] +
mov [ebp-14h] eax +
mov eax ds:dword_1002780 +
mov dword ptr [ebp-2Ch] 24h +
mov [ebp-20h] ebx +
test eax eax +
jz loc_102BB2A  +
lea ecx [ebp-2Ch] +
push ecx  +
push 5  +
call eax  +
jmp loc_102BB2A  +
push edi  +
call FreeLibrary  +
mov [ebp+8] esi +
jmp loc_102BB2A  +
call GetLastError  +
cmp eax 7Eh +
jz loc_102BB19  +
cmp eax 0C1h +
jnz loc_102BB6C  +
push 0  +
push 0FFFFFFFFh  +
push esi  +
call InterlockedCompareExchange  +
test eax eax +
jz loc_102BB30  +
mov [ebp+8] eax +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jnz loc_102BB39  +
mov dword ptr [ebp-4] 1 +
jmp loc_102BB6C  +
cmp dword ptr [ebp+8] 0 +
jz loc_102BB6C  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_102BB61  +
call GetLastError  +
cmp eax 7Fh +
jz loc_102BB61  +
cmp eax 0B6h +
jnz loc_102BB68  +
mov dword ptr [ebp-4] 1 +
test esi esi +
jnz loc_102BB77  +
push dword ptr [ebp-8]  +
push ebx  +
call DelayLoadFailureHook  +
mov esi eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102BB82  +
mov eax [ebp+0Ch] +
mov [eax] esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_102BBA3  +
mov eax 80070057h +
jmp loc_102BBB4  +
cmp dword ptr [eax] 2Ch +
jnz loc_102BB9C  +
and dword ptr [eax+1Ch] 0 +
lea ecx [eax+4] +
call sub_1013BD0  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_102BBD2  +
push eax  +
call free  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jl loc_102BBFB  +
cmp eax [ecx+4] +
jge loc_102BBFB  +
mov ecx [ecx] +
lea eax [ecx+eax*2] +
pop ebp  +
retn 4  +
***
push 0  +
push 0  +
push 1  +
push 0C000008Ch  +
call ds:RaiseException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jl loc_102BC2C  +
cmp eax [ecx+4] +
jge loc_102BC2C  +
mov ecx [ecx] +
lea eax [ecx+eax*4] +
pop ebp  +
retn 4  +
***
push 0  +
push 0  +
push 1  +
push 0C000008Ch  +
call ds:RaiseException  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jnz loc_102BC7B  +
mov eax 80070057h +
jmp loc_102BCC2  +
mov eax [esi] +
cmp eax edi +
jz loc_102BCC0  +
cmp eax 2Ch +
jnz loc_102BC74  +
cmp [esi+24h] edi +
jle loc_102BCAB  +
push ebx  +
lea ebx [esi+20h] +
push edi  +
mov ecx ebx +
call loc_102BBE1  +
movzx eax word ptr [eax] +
push [ebp+hInstance]  +
push eax  +
call ds:UnregisterClassA  +
inc edi  +
cmp edi [esi+24h] +
jl loc_102BC8F  +
pop ebx  +
lea ecx [esi+20h] +
call sub_102BBBD  +
lea eax [esi+4] +
push eax  +
call ds:DeleteCriticalSection  +
and dword ptr [esi] 0 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+18h] +
call sub_1012750  +
xor eax eax +
mov [esi+30h] eax +
mov [esi+34h] eax +
mov [esi+38h] eax +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+18h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+30h] +
pop esi  +
jmp sub_102BBBD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
lea edi [esi+18h] +
push edi  +
call ds:EnterCriticalSection  +
mov eax [esi+34h] +
mov ecx [ebp+arg_0] +
cmp ecx eax +
jg loc_102BD4B  +
test ecx ecx +
jl loc_102BD4B  +
cmp ecx eax +
jnz loc_102BD3E  +
mov esi [esi+8] +
push edi  +
call ds:LeaveCriticalSection  +
mov eax esi +
jmp loc_102BD54  +
push ecx  +
lea ecx [esi+30h] +
call loc_102BC12  +
mov esi [eax] +
jmp loc_102BD33  +
push edi  +
call ds:LeaveCriticalSection  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
or al dh +
add eax offset byte_103B4F0 +
add [ebx-3974FFDAh] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
call sub_102BCCD  +
mov eax offset __ImageBase +
push 94h  +
mov [esi+8] eax +
mov [esi+4] eax +
lea eax [ebp+VersionInformation] +
push 0  +
push eax  +
mov dword ptr [esi] 3Ch +
mov byte ptr [esi+0Ch] 0 +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 94h +
call ds:GetVersionExA  +
cmp [ebp+VersionInformation.dwPlatformId] 2 +
jnz loc_102BDFF  +
cmp [ebp+VersionInformation.dwMajorVersion] 5 +
jb loc_102BE20  +
jmp loc_102BE1C  +
cmp [ebp+VersionInformation.dwPlatformId] 1 +
jnz loc_102BE20  +
cmp [ebp+VersionInformation.dwMajorVersion] 4 +
ja loc_102BE1C  +
jnz loc_102BE20  +
cmp [ebp+VersionInformation.dwMinorVersion] 0 +
jbe loc_102BE20  +
mov byte ptr [esi+0Ch] 1 +
lea ecx [esi+18h] +
mov dword ptr [esi+10h] 800h +
mov dword ptr [esi+14h] offset dword_1002794 +
call sub_1013BD0  +
test eax eax +
jge loc_102BE41  +
mov byte_103B4F0 1 +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_102C711  +
leave   +
retn   +
***
push dword_103BC04  +
mov esi ecx +
push esi  +
call sub_102BC64  +
lea ecx [esi+20h] +
pop esi  +
jmp sub_102BBBD  +
***
cmp byte ptr [ecx+8] 0 +
mov dword ptr [ecx] offset off_10027A4 +
jz locret_102BE8E  +
mov ecx [ecx+4] +
test ecx ecx +
jz locret_102BE8E  +
push ecx  +
call ds:HeapDestroy  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_102BEC9  +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+8] eax +
jnz loc_102BEE7  +
push dword ptr [ebp+0Ch]  +
mov eax [ecx] +
call dword ptr [eax]  +
jmp loc_102BF08  +
cmp [ebp+0Ch] eax +
jnz loc_102BEF8  +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_102BF08  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push eax  +
push dword ptr [ecx+4]  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_102BE74  +
test byte ptr [ebp+8] 1 +
jz loc_102BF47  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+8] +
mov [eax+4] ecx +
mov dword ptr [eax] offset off_10027B8 +
xor ecx ecx +
mov dword ptr [eax+14h] 2 +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+18h] cx +
mov [eax+1Ah] cx +
mov [eax+8] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mul  [ebp+arg_8] +
test edx edx +
ja loc_102BF9D  +
cmp eax 0FFFFFFFFh +
jbe loc_102BFA4  +
mov eax 80070057h +
jmp loc_102BFAB  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx+4] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+4]  +
***
ror byte ptr [ebp-0FBDEBBFh] cl +
xadd [eax] edx +
lea eax [ecx+8] +
retn   +
***
mov eax ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10027B8 +
jz loc_102BFFD  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push esi  +
lea ecx [edx+eax] +
lea esi [ecx-1] +
cmp esi edx +
pop esi  +
jge loc_102C025  +
mov eax [ebp+arg_8] +
jmp loc_102C02B  +
dec eax  +
not eax  +
dec ecx  +
and eax ecx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
or edx 0FFFFFFFFh +
sub edx eax +
cmp edx ecx +
jnb loc_102C04F  +
mov eax 80070057h +
jmp loc_102C058  +
add eax ecx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
push edi  +
push 7FFFFFFFh  +
push 8  +
inc eax  +
push eax  +
mov esi ecx +
call sub_102C009  +
push dword ptr [ebp+0Ch]  +
mov edi eax +
push edi  +
lea eax [ebp+8] +
push eax  +
call sub_1019550  +
test eax eax +
jl loc_102C0C1  +
push dword ptr [ebp+8]  +
lea eax [ebp+8] +
push 10h  +
push eax  +
call sub_102C034  +
test eax eax +
jl loc_102C0C1  +
mov ecx [esi+4] +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax]  +
test eax eax +
jz loc_102C0C1  +
dec edi  +
and dword ptr [eax+4] 0 +
mov [eax] esi +
mov dword ptr [eax+0Ch] 1 +
mov [eax+8] edi +
jmp loc_102C0C3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push esi  +
push edi  +
push 7FFFFFFFh  +
push 8  +
inc eax  +
push eax  +
mov esi ecx +
call sub_102C009  +
push dword ptr [ebp+10h]  +
mov edi eax +
push edi  +
lea eax [ebp+0Ch] +
push eax  +
call sub_102BF89  +
test eax eax +
jl loc_102C125  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp+0Ch] +
push 10h  +
push eax  +
call sub_102C034  +
test eax eax +
jl loc_102C125  +
push dword ptr [ebp+0Ch]  +
mov ecx [esi+4] +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_102C125  +
dec edi  +
mov [eax+8] edi +
jmp loc_102C127  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_103BCC8 +
push [ebp+lpMem]  +
cmp eax 1 +
jnz loc_102C155  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_102C15C  +
push eax  +
call dword_103BCCC  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push edi  +
push offset LibFileName  +
call ds:LoadLibraryA  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jnz loc_102C183  +
xor eax eax +
jmp loc_102C243  +
push esi  +
mov esi ds:__imp_GetProcAddress +
push offset ProcName  +
push edi  +
call esi  +
cmp eax ebx +
jz loc_102C19C  +
push 0Ch  +
call eax  +
jmp loc_102C19E  +
xor eax eax +
cmp eax ebx +
jnz loc_102C1AF  +
xor eax eax +
inc eax  +
mov dword_103BCC8 eax +
jmp loc_102C242  +
push offset aInterlockedpop  +
push edi  +
call esi  +
push offset aInterlockedpus  +
push edi  +
mov dword_103BCD0 eax +
call esi  +
push offset aInterlockedcom  +
push edi  +
mov dword_103BCCC eax +
call esi  +
mov dword_103BCD4 eax +
cmp dword_103BCCC ebx +
jz loc_102C240  +
cmp dword_103BCD0 ebx +
jz loc_102C240  +
cmp eax ebx +
jz loc_102C240  +
mov eax large fs:18h +
mov esi [eax+30h] +
add esi 34h +
mov eax [esi] +
cmp eax ebx +
jnz loc_102C236  +
push 8  +
push ebx  +
mov ebx ds:GetProcessHeap +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
xor eax eax +
cmp edi eax +
jz loc_102C240  +
push eax  +
push edi  +
push esi  +
mov [edi] eax +
mov [edi+4] eax +
call dword_103BCD4  +
test eax eax +
jz loc_102C234  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [esi] +
mov dword_103BCC8 eax +
xor eax eax +
inc eax  +
jmp loc_102C242  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_102C132  +
***
cmp dword_103BCC8 0 +
push esi  +
jnz loc_102C26E  +
call sub_102C165  +
test eax eax +
jz loc_102C2B1  +
mov eax dword_103BCC8 +
cmp eax 1 +
jnz loc_102C28F  +
push 0Dh  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
test eax eax +
jz loc_102C2B1  +
pop esi  +
retn   +
push eax  +
call dword_103BCD0  +
test eax eax +
jnz loc_102C2F9  +
push 40h  +
mov eax 1000h +
push eax  +
push eax  +
push 0  +
call ds:VirtualAlloc  +
mov esi eax +
test esi esi +
jnz loc_102C2B5  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi] +
push edi  +
push dword_103BCC8  +
call dword_103BCD0  +
mov edi eax +
test edi edi +
jz loc_102C2DA  +
push 8000h  +
push 0  +
push esi  +
call ds:VirtualFree  +
jmp loc_102C2F6  +
mov edi esi +
add esi 0FF0h +
push edi  +
push dword_103BCC8  +
call dword_103BCCC  +
add edi 10h +
cmp edi esi +
jb loc_102C2E2  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_102C326  +
test eax eax +
jnz loc_102C32B  +
mov ecx [esi] +
test ecx ecx +
jz loc_102C323  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_102C317  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_103BCFC +
push offset dword_103BCEC  +
push dword_103BCF8  +
mov dword_103BCEC eax +
push offset unk_103BCDC  +
push offset unk_103BCE0  +
push offset unk_103BCD8  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_103BCE8 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_20] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:__imp_InterlockedCompareExchange  +
cmp eax ebx +
jz loc_102C3CE  +
cmp eax esi +
jnz loc_102C3C1  +
xor esi esi +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_102C3D1  +
push 3E8h  +
call ds:Sleep  +
jmp loc_102C3A8  +
xor esi esi +
inc esi  +
mov eax dword_103C294 +
cmp eax esi +
jnz loc_102C3E4  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_102C413  +
mov eax dword_103C294 +
test eax eax +
jnz loc_102C40D  +
mov dword_103C294 esi +
push offset dword_1001628  +
push offset dword_100161C  +
call sub_102C30A  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102C413  +
jmp loc_102C537  +
mov dword_103BCF4 esi +
mov eax dword_103C294 +
cmp eax esi +
jnz loc_102C437  +
push offset dword_1001618  +
push offset dword_10015FC  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_103C294 2 +
cmp [ebp+var_20] ebx +
jnz loc_102C444  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_103C2A4 ebx +
jz loc_102C465  +
push offset dword_103C2A4  +
call sub_102CB89  +
pop ecx  +
test eax eax +
jz loc_102C465  +
push ebx  +
push 2  +
push ebx  +
call dword_103C2A4  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_102C537  +
mov eax [eax] +
mov [ebp+var_24] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
ja $LN58  +
cmp cx bx +
jz loc_102C48A  +
cmp [ebp+var_1C] ebx +
jnz $LN58  +
movzx ecx word ptr [eax] +
cmp cx bx +
jz loc_102C49F  +
cmp cx 20h +
ja loc_102C49F  +
inc eax  +
inc eax  +
mov [ebp+var_24] eax +
jmp loc_102C48A  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_102C4AB  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_102C4AE  +
push 0Ah  +
pop ecx  +
push ecx  +
push eax  +
push ebx  +
push offset __ImageBase  +
call _wWinMain@16  +
mov dword_103BCF0 eax +
cmp dword_103BCE4 ebx +
jnz $LN59  +
push eax  +
call ds:exit  +
cmp cx 22h +
jnz loc_102C4E0  +
xor ecx ecx +
cmp [ebp+var_1C] ebx +
setz cl  +
mov [ebp+var_1C] ecx +
inc eax  +
inc eax  +
jmp loc_102C474  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-28h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_103BCF0 eax +
xor ebx ebx +
cmp dword_103BCE4 ebx +
jnz $LN59  +
push eax  +
call ds:_exit  +
cmp dword_103BCF4 ebx +
jnz loc_102C522  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_103BCF0 +
jmp loc_102C543  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp word ptr ds:__ImageBase ax +
jz loc_102C560  +
xor eax eax +
jmp loc_102C5AD  +
mov eax ds:dword_100003C +
lea eax __ImageBase[eax] +
cmp dword ptr [eax] 4550h +
jnz loc_102C55C  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_102C59A  +
cmp ecx 20Bh +
jnz loc_102C55C  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_102C55C  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_102C5A8  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_102C55C  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_103BCE4 eax +
call sub_102CC97  +
push eax  +
call ds:__set_app_type  +
or dword_103C29C 0FFFFFFFFh +
or dword_103C2A0 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_103BD04 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_103BD00 +
mov [eax] ecx +
call sub_102CC29  +
cmp dword_103B468 0 +
jnz loc_102C606  +
push offset sub_102CC29  +
call ds:__setusermatherr  +
pop ecx  +
call sub_102CC11  +
xor eax eax +
retn   +
***
call sub_102CCD6  +
jmp ___tmainCRTStartup  +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
dec [ebp+arg_8]  +
js loc_102C689  +
mov ecx [ebp+arg_0] +
sub ecx [ebp+arg_4] +
mov [ebp+arg_0] ecx +
call [ebp+arg_C]  +
jmp loc_102C649  +
mov eax [ebp-14h] +
mov [ebp-1Ch] eax +
mov eax [ebp-1Ch] +
mov eax [eax] +
mov [ebp-20h] eax +
mov eax [ebp-20h] +
cmp dword ptr [eax] 0E06D7363h +
jz loc_102C680  +
mov dword ptr [ebp-24h] 0 +
mov eax [ebp-24h] +
retn   +
call ds:?terminate@@YAXXZ  +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 10h  +
***
call __SEH_prolog4  +
cmp dword ptr [ebp-1Ch] 0 +
jnz $LN9  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_102C639  +
retn   +
***
cmp ecx dword_103B444 +
jnz loc_102C71C  +
retn 0  +
jmp loc_102CD6C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_102C74C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
push esi  +
xor esi esi +
cmp ecx esi +
jbe loc_102C814  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  ecx +
cmp eax [ebp+arg_8] +
jnb loc_102C814  +
call _errno  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 0Ch +
call sub_102CF46  +
add esp 14h +
xor eax eax +
jmp loc_102C823  +
imul ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_0]  +
call realloc  +
pop ecx  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
cmp dword ptr [ebp-20h] 0 +
jnz $LN10_0  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_102C639  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_102C711  +
push offset dword_103B444  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_102C98E  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
push offset loc_102C8AD  +
push large dword ptr fs:0  +
mov eax [esp+10h] +
mov [esp+10h] ebp +
lea ebp [esp+10h] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor [ebp-4] eax +
xor eax ebp +
mov [ebp-1Ch] eax +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_102C711  +
jmp __SEH_epilog4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_102CACD  +
cmp dword ptr [eax+10h] 3 +
jnz loc_102CACD  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_102CAC7  +
cmp eax 19930521h +
jz loc_102CAC7  +
cmp eax 19930522h +
jz loc_102CAC7  +
cmp eax 1994000h +
jnz loc_102CACD  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push offset loc_102CA90  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_102CB16  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_102CB12  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_102CB7D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_102CB75  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_102CB7F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_102CB65  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi offset __ImageBase +
push esi  +
call sub_102CB00  +
pop ecx  +
test eax eax +
jz loc_102CBE6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_102CB40  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102CBE6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_102CBEF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_102CC8A  +
cmp ecx 0FFFFFFFFh +
jz loc_102CC8A  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_102CC83  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_102CC83  +
cmp edx 10000000h +
jnb loc_102CC83  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_102CC83  +
jmp loc_102CC7E  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_102CCCC  +
push eax  +
call sub_102CC31  +
test eax eax +
jz loc_102CCCC  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_102CCC1  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_102CCCC  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_103B444 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_102CD08  +
test eax ebx +
jz loc_102CD08  +
not eax  +
mov dword_103B448 eax +
jmp loc_102CD63  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_102CD4F  +
test dword_103B444 ebx +
jnz loc_102CD54  +
mov esi 0BB40E64Fh +
mov dword_103B444 esi +
not esi  +
mov dword_103B448 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_103BE08 eax +
mov dword_103BE04 ecx +
mov dword_103BE00 edx +
mov dword_103BDFC ebx +
mov dword_103BDF8 esi +
mov dword_103BDF4 edi +
mov word_103BE20 ss +
mov word_103BE14 cs +
mov word_103BDF0 ds +
mov word_103BDEC es +
mov word_103BDE8 fs +
mov word_103BDE4 gs +
pushf   +
pop dword_103BE18  +
mov eax [ebp+0] +
mov dword_103BE0C eax +
mov eax [ebp+4] +
mov dword_103BE10 eax +
lea eax [ebp+8] +
mov dword_103BE1C eax +
mov eax [ebp-320h] +
mov dword_103BD58 10001h +
mov eax dword_103BE10 +
mov dword_103BD14 eax +
mov dword_103BD08 0C0000409h +
mov dword_103BD0C 1 +
mov eax dword_103B444 +
mov [ebp-328h] eax +
mov eax dword_103B448 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
push ecx  +
lea ecx [esp+4] +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2D0h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_2D0] 10001h +
mov [ebp+var_20C] eax +
mov eax [eax-4] +
push offset OutputString  +
mov [ebp+var_21C] eax +
call ds:OutputDebugStringA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_102CE9B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push 10h  +
lea eax [ebp-8] +
push eax  +
mov ecx [ebp+8] +
push ecx  +
call wcstol  +
add esp 0Ch +
mov [ebp-4] eax +
movzx edx word ptr [ebp-4] +
mov eax [ebp+0Ch] +
movzx ecx word ptr [eax] +
cmp edx ecx +
jnz loc_102D0D9  +
mov edx [ebp+0Ch] +
mov dword ptr [edx+4] 1 +
xor eax eax +
jmp loc_102D0DE  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
xor eax eax +
mov word ptr [ebp+var_8] ax +
xor ecx ecx +
mov [ebp+var_4] ecx +
mov dx [ebp+arg_0] +
mov word ptr [ebp+var_8] dx +
lea eax [ebp+var_8] +
push eax  +
push 0  +
push offset loc_102D0A0  +
call ds:EnumUILanguagesW  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_8] eax +
cmp Target 0 +
jnz loc_102D1BC  +
mov [ebp+var_4] 0 +
call ds:GetUserDefaultUILanguage  +
mov word_103C034 ax +
movzx eax word_103C034 +
test eax eax +
jz loc_102D1A6  +
push 10h  +
lea ecx [ebp+LCData] +
push ecx  +
push 58h  +
movzx edx word_103C034 +
push edx  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_102D1A6  +
movzx eax [ebp+var_1A] +
and eax 800h +
jz loc_102D1A6  +
movzx ecx word_103C034 +
push ecx  +
call sub_102D0F0  +
test eax eax +
jz loc_102D1A6  +
mov [ebp+var_4] 1 +
mov edx [ebp+var_4] +
neg edx  +
sbb edx edx +
add edx 2 +
push edx  +
push offset Target  +
call ds:InterlockedExchange  +
cmp Target 1 +
jnz loc_102D1D8  +
cmp [ebp+arg_0] 0 +
jz loc_102D1D8  +
mov eax [ebp+arg_0] +
mov cx word_103C034 +
mov [eax] cx +
xor eax eax +
cmp Target 1 +
setz al  +
mov ecx [ebp+var_8] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024C10  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006DBC +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+28h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+54h] 0 +
xor ecx ecx +
mov edx [ebp+var_4] +
add edx 34h +
mov [edx] ecx +
mov [edx+4] ecx +
mov [edx+8] ecx +
mov [edx+0Ch] ecx +
xor eax eax +
mov ecx [ebp+var_4] +
add ecx 44h +
mov [ecx] eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov edx [ebp+var_4] +
mov dword ptr [edx+30h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+2Ch] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_102D2A3  +
jmp loc_102D3FF  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_102D2DD  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_1031C60  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102D2DD  +
mov eax 1 +
jmp loc_102D401  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_102D317  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_102DA20  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102D317  +
mov eax 1 +
jmp loc_102D401  +
cmp dword ptr [ebp+0Ch] 318h +
jnz loc_102D354  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102DA20  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102D354  +
mov eax 1 +
jmp loc_102D401  +
cmp dword ptr [ebp+0Ch] 0Ch +
jnz loc_102D38B  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102D520  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102D38B  +
mov eax 1 +
jmp loc_102D401  +
cmp dword ptr [ebp+0Ch] 128h +
jnz loc_102D3C5  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102FB40  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102D3C5  +
mov eax 1 +
jmp loc_102D401  +
cmp dword ptr [ebp+0Ch] 31Ah +
jnz loc_102D3FF  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102DD80  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102D3FF  +
mov eax 1 +
jmp loc_102D401  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_102D450  +
mov eax [ebp+8] +
and eax 1 +
jz loc_102D435  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10364B8  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov eax [ebp+var_18] +
mov dword ptr [eax] offset off_1006DBC +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_18] +
mov edx [ecx+24h] +
mov [ebp+var_10] edx +
mov eax [ebp+var_10] +
push eax  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov ecx [ebp+var_18] +
mov dword ptr [ecx+24h] 0 +
mov edx [ebp+var_18] +
mov eax [edx+28h] +
mov [ebp+var_14] eax +
mov ecx [ebp+var_14] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov edx [ebp+var_18] +
mov dword ptr [edx+28h] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_18] +
call sub_1014040  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push offset aStatic  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
call ds:OpenThemeData  +
mov edx [ebp+var_4] +
mov [edx+58h] eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1011530  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_8] +
call sub_102D570  +
push 1  +
push 0  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1010530  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 9Ch +
mov [ebp+var_6C] ecx +
mov [ebp+lpString] 0 +
mov [ebp+var_40] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_8] 0 +
mov eax [ebp+var_6C] +
mov ecx [eax+24h] +
mov [ebp+var_48] ecx +
mov edx [ebp+var_48] +
push edx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp+var_6C] +
mov dword ptr [eax+24h] 0 +
mov ecx [ebp+var_6C] +
mov edx [ecx+28h] +
mov [ebp+var_4C] edx +
mov eax [ebp+var_4C] +
push eax  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov ecx [ebp+var_6C] +
mov dword ptr [ecx+28h] 0 +
xor edx edx +
mov eax [ebp+var_6C] +
add eax 34h +
mov [eax] edx +
mov [eax+4] edx +
mov [eax+8] edx +
mov [eax+0Ch] edx +
xor ecx ecx +
mov edx [ebp+var_6C] +
add edx 44h +
mov [edx] ecx +
mov [edx+4] ecx +
mov [edx+8] ecx +
mov [edx+0Ch] ecx +
mov ecx [ebp+var_6C] +
add ecx 4 +
call sub_100FBB0  +
mov [ebp+hDC] eax +
mov ecx [ebp+var_6C] +
add ecx 4 +
call sub_102A940  +
mov [ebp+var_28] eax +
mov eax [ebp+var_28] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SelectObject  +
mov [ebp+var_3C] eax +
mov ecx [ebp+var_6C] +
add ecx 4 +
call sub_102DDE0  +
add eax 1 +
mov [ebp+nMaxCount] eax +
cmp [ebp+nMaxCount] 1 +
jnz loc_102D64C  +
jmp loc_102D9BA  +
jmp loc_102D9BA  +
xor ecx ecx +
mov eax [ebp+nMaxCount] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_50] eax +
mov eax [ebp+var_50] +
mov [ebp+var_40] eax +
xor ecx ecx +
mov eax [ebp+nMaxCount] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_54] eax +
mov eax [ebp+var_54] +
mov [ebp+lpString] eax +
cmp [ebp+var_40] 0 +
jz loc_102D6A2  +
cmp [ebp+lpString] 0 +
jnz loc_102D6AC  +
jmp loc_102D9BA  +
jmp loc_102D9BA  +
mov ecx [ebp+nMaxCount] +
push ecx  +
mov edx [ebp+var_40] +
push edx  +
mov ecx [ebp+var_6C] +
add ecx 4 +
call sub_1022DB0  +
mov eax [ebp+nMaxCount] +
push eax  +
mov ecx [ebp+lpString] +
push ecx  +
mov ecx [ebp+var_6C] +
add ecx 4 +
call sub_1022DB0  +
lea edx [ebp+rcSrc] +
push edx  +
mov ecx [ebp+var_6C] +
add ecx 4 +
call sub_100D6B0  +
push offset pszTrimChars  +
mov eax [ebp+lpString] +
push eax  +
call ds:StrTrimW  +
mov ecx [ebp+lpString] +
mov [ebp+var_70] ecx +
mov edx [ebp+var_70] +
add edx 2 +
mov [ebp+var_74] edx +
mov eax [ebp+var_70] +
mov cx [eax] +
mov [ebp+var_76] cx +
add [ebp+var_70] 2 +
cmp [ebp+var_76] 0 +
jnz loc_102D6FF  +
mov edx [ebp+var_70] +
sub edx [ebp+var_74] +
sar edx 1 +
mov [ebp+var_7C] edx +
mov eax [ebp+var_7C] +
mov ecx [ebp+lpString] +
lea edx [ecx+eax*2] +
mov [ebp+psz] edx +
xor eax eax +
mov [ebp+Rect.left] eax +
mov [ebp+Rect.top] eax +
mov [ebp+Rect.right] eax +
mov [ebp+Rect.bottom] eax +
mov ecx [ebp+lpString] +
mov [ebp+var_80] ecx +
mov edx [ebp+var_80] +
add edx 2 +
mov [ebp+var_84] edx +
mov eax [ebp+var_80] +
mov cx [eax] +
mov [ebp+var_86] cx +
add [ebp+var_80] 2 +
cmp [ebp+var_86] 0 +
jnz loc_102D74B  +
mov edx [ebp+var_80] +
sub edx [ebp+var_84] +
sar edx 1 +
mov [ebp+nCount] edx +
push 0C00h  +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+nCount] +
push ecx  +
mov edx [ebp+lpString] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:DrawTextW  +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
mov edx [ebp+rcSrc.right] +
sub edx [ebp+rcSrc.left] +
sub edx 4 +
cmp ecx edx +
jge loc_102D7B1  +
mov [ebp+var_20] 1 +
jmp loc_102D7F2  +
mov [ebp+var_8] 1 +
mov eax [ebp+psz] +
cmp eax [ebp+lpString] +
jbe loc_102D7DE  +
mov ecx [ebp+psz] +
movzx edx word ptr [ecx] +
push edx  +
call iswspace  +
add esp 4 +
test eax eax +
jnz loc_102D7DE  +
mov eax [ebp+psz] +
sub eax 2 +
mov [ebp+psz] eax +
jmp loc_102D7B8  +
xor ecx ecx +
mov edx [ebp+psz] +
mov [edx] cx +
mov eax [ebp+psz] +
cmp eax [ebp+lpString] +
ja loc_102D6E1  +
cmp [ebp+var_20] 0 +
jz loc_102D94B  +
mov ecx [ebp+psz] +
sub ecx [ebp+lpString] +
sar ecx 1 +
add ecx 1 +
mov edx [ebp+var_6C] +
mov [edx+2Ch] ecx +
xor ecx ecx +
mov edx [ebp+var_6C] +
mov eax [edx+2Ch] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_58] eax +
mov eax [ebp+var_6C] +
mov ecx [ebp+var_58] +
mov [eax+24h] ecx +
mov edx [ebp+lpString] +
push edx  +
mov eax [ebp+var_6C] +
mov ecx [eax+2Ch] +
push ecx  +
mov edx [ebp+var_6C] +
mov eax [edx+24h] +
push eax  +
call sub_101A9A0  +
lea ecx [ebp+rcSrc] +
push ecx  +
mov edx [ebp+var_6C] +
add edx 34h +
push edx  +
call ds:CopyRect  +
mov eax [ebp+var_6C] +
mov ecx [ebp+Rect.bottom] +
mov [eax+40h] ecx +
cmp [ebp+var_8] 0 +
jz loc_102D949  +
mov edx [ebp+var_6C] +
mov eax [edx+2Ch] +
mov ecx [ebp+var_40] +
lea edx [ecx+eax*2] +
mov [ebp+psz] edx +
push offset pszTrimChars  +
mov eax [ebp+psz] +
push eax  +
call ds:StrTrimW  +
mov ecx [ebp+psz] +
mov [ebp+var_90] ecx +
mov edx [ebp+var_90] +
add edx 2 +
mov [ebp+var_94] edx +
mov eax [ebp+var_90] +
mov cx [eax] +
mov [ebp+var_96] cx +
add [ebp+var_90] 2 +
cmp [ebp+var_96] 0 +
jnz loc_102D8A9  +
mov edx [ebp+var_90] +
sub edx [ebp+var_94] +
sar edx 1 +
mov [ebp+var_9C] edx +
mov eax [ebp+var_9C] +
add eax 1 +
mov ecx [ebp+var_6C] +
mov [ecx+30h] eax +
xor ecx ecx +
mov edx [ebp+var_6C] +
mov eax [edx+30h] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_5C] eax +
mov eax [ebp+var_6C] +
mov ecx [ebp+var_5C] +
mov [eax+28h] ecx +
mov edx [ebp+psz] +
push edx  +
mov eax [ebp+var_6C] +
mov ecx [eax+30h] +
push ecx  +
mov edx [ebp+var_6C] +
mov eax [edx+28h] +
push eax  +
call sub_101A9A0  +
lea ecx [ebp+rcSrc] +
push ecx  +
mov edx [ebp+var_6C] +
add edx 44h +
push edx  +
call ds:CopyRect  +
mov eax [ebp+var_6C] +
mov ecx [ebp+Rect.bottom] +
mov [eax+48h] ecx +
jmp loc_102D9BA  +
mov edx [ebp+var_6C] +
mov dword ptr [edx+54h] 1 +
mov eax [ebp+var_6C] +
mov ecx [ebp+nMaxCount] +
mov [eax+2Ch] ecx +
xor ecx ecx +
mov edx [ebp+var_6C] +
mov eax [edx+2Ch] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_60] eax +
mov eax [ebp+var_6C] +
mov ecx [ebp+var_60] +
mov [eax+24h] ecx +
mov edx [ebp+var_40] +
push edx  +
mov eax [ebp+var_6C] +
mov ecx [eax+2Ch] +
push ecx  +
mov edx [ebp+var_6C] +
mov eax [edx+24h] +
push eax  +
call sub_101A9A0  +
lea ecx [ebp+rcSrc] +
push ecx  +
mov edx [ebp+var_6C] +
add edx 34h +
push edx  +
call ds:CopyRect  +
mov eax [ebp+var_6C] +
mov ecx [ebp+Rect.bottom] +
mov [eax+40h] ecx +
mov edx [ebp+hDC] +
push edx  +
mov ecx [ebp+var_6C] +
add ecx 4 +
call sub_100FBD0  +
mov eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SelectObject  +
mov edx [ebp+lpString] +
mov [ebp+var_64] edx +
mov eax [ebp+var_64] +
push eax  +
call ??_V@YAXPAX@Z  +
add esp 4 +
mov [ebp+lpString] 0 +
mov ecx [ebp+var_40] +
mov [ebp+var_68] ecx +
mov edx [ebp+var_68] +
push edx  +
call ??_V@YAXPAX@Z  +
add esp 4 +
mov [ebp+var_40] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_50] ecx +
cmp [ebp+arg_0] 0Fh +
jnz loc_102DA4F  +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A660  +
mov [ebp+wParam] eax +
jmp loc_102DA55  +
mov ecx [ebp+arg_4] +
mov [ebp+wParam] ecx +
mov edx [ebp+wParam] +
push edx  +
mov ecx [ebp+var_50] +
call sub_102DAA0  +
cmp [ebp+arg_0] 0Fh +
jnz loc_102DA76  +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A690  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov [ebp+var_3C] ecx +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_102A940  +
mov [ebp+var_20] eax +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
call ds:SelectObject  +
mov [ebp+var_24] eax +
mov edx [ebp+var_3C] +
cmp dword ptr [edx+58h] 0 +
jz loc_102DB1B  +
push 8  +
mov eax [ebp+var_3C] +
mov ecx [eax+58h] +
push ecx  +
call ds:GetThemeSysColor  +
mov [ebp+var_28] eax +
push 5  +
mov edx [ebp+var_3C] +
mov eax [edx+58h] +
push eax  +
call ds:GetThemeSysColor  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_28] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
call ds:SetTextColor  +
mov [ebp+var_1C] eax +
mov eax [ebp+var_18] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
call ds:SetBkColor  +
mov [ebp+var_2C] eax +
jmp loc_102DB53  +
push 8  +
call ds:GetSysColor  +
mov [ebp+var_28] eax +
push 5  +
call ds:GetSysColor  +
mov [ebp+var_18] eax +
mov edx [ebp+var_28] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
call ds:SetTextColor  +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_18] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
call ds:SetBkColor  +
mov [ebp+var_2C] eax +
push 2  +
mov eax [ebp+wParam] +
push eax  +
call ds:SetBkMode  +
mov ecx [ebp+var_3C] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
push 138h  +
lea ecx [ebp+var_38] +
push ecx  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
push eax  +
call sub_101A5A0  +
mov [ebp+hbr] eax +
lea edx [ebp+Rect] +
push edx  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_100D6B0  +
mov eax [ebp+var_3C] +
cmp dword ptr [eax+58h] 0 +
jz loc_102DBD8  +
lea ecx [ebp+Rect] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
mov eax [ebp+var_3C] +
mov ecx [eax+4] +
push ecx  +
call ds:DrawThemeParentBackground  +
push 0  +
lea edx [ebp+Rect] +
push edx  +
push 0  +
push 1  +
mov eax [ebp+wParam] +
push eax  +
mov ecx [ebp+var_3C] +
mov edx [ecx+58h] +
push edx  +
call ds:DrawThemeBackground  +
jmp loc_102DBEA  +
mov eax [ebp+hbr] +
push eax  +
lea ecx [ebp+Rect] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
call ds:FillRect  +
mov eax [ebp+var_3C] +
cmp dword ptr [eax+54h] 0 +
jz loc_102DC67  +
mov ecx [ebp+var_3C] +
cmp dword ptr [ecx+24h] 0 +
jz loc_102DC62  +
mov edx [ebp+var_3C] +
cmp dword ptr [edx+58h] 0 +
jz loc_102DC3B  +
mov eax [ebp+var_3C] +
add eax 34h +
push eax  +
push 0  +
push 40801h  +
mov ecx [ebp+var_3C] +
mov edx [ecx+2Ch] +
push edx  +
mov eax [ebp+var_3C] +
mov ecx [eax+24h] +
push ecx  +
push 0  +
push 1  +
mov edx [ebp+wParam] +
push edx  +
mov eax [ebp+var_3C] +
mov ecx [eax+58h] +
push ecx  +
call ds:DrawThemeText  +
mov [ebp+var_30] eax +
jmp loc_102DC62  +
push 40801h  +
mov edx [ebp+var_3C] +
add edx 34h +
push edx  +
mov eax [ebp+var_3C] +
mov ecx [eax+2Ch] +
push ecx  +
mov edx [ebp+var_3C] +
mov eax [edx+24h] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
call ds:DrawTextW  +
mov [ebp+var_30] eax +
jmp loc_102DD3F  +
mov edx [ebp+var_3C] +
cmp dword ptr [edx+24h] 0 +
jz loc_102DCD6  +
mov eax [ebp+var_3C] +
cmp dword ptr [eax+58h] 0 +
jz loc_102DCAF  +
mov ecx [ebp+var_3C] +
add ecx 34h +
push ecx  +
push 0  +
push 801h  +
mov edx [ebp+var_3C] +
mov eax [edx+2Ch] +
push eax  +
mov ecx [ebp+var_3C] +
mov edx [ecx+24h] +
push edx  +
push 0  +
push 1  +
mov eax [ebp+wParam] +
push eax  +
mov ecx [ebp+var_3C] +
mov edx [ecx+58h] +
push edx  +
call ds:DrawThemeText  +
mov [ebp+var_34] eax +
jmp loc_102DCD6  +
push 801h  +
mov eax [ebp+var_3C] +
add eax 34h +
push eax  +
mov ecx [ebp+var_3C] +
mov edx [ecx+2Ch] +
push edx  +
mov eax [ebp+var_3C] +
mov ecx [eax+24h] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
call ds:DrawTextW  +
mov [ebp+var_34] eax +
mov eax [ebp+var_3C] +
cmp dword ptr [eax+28h] 0 +
jz loc_102DD3F  +
mov ecx [ebp+var_3C] +
cmp dword ptr [ecx+58h] 0 +
jz loc_102DD1B  +
mov edx [ebp+var_3C] +
add edx 44h +
push edx  +
push 0  +
push 40801h  +
mov eax [ebp+var_3C] +
mov ecx [eax+30h] +
push ecx  +
mov edx [ebp+var_3C] +
mov eax [edx+28h] +
push eax  +
push 0  +
push 0  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+var_3C] +
mov eax [edx+58h] +
push eax  +
call ds:DrawThemeText  +
jmp loc_102DD3F  +
push 40801h  +
mov ecx [ebp+var_3C] +
add ecx 44h +
push ecx  +
mov edx [ebp+var_3C] +
mov eax [edx+30h] +
push eax  +
mov ecx [ebp+var_3C] +
mov edx [ecx+28h] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
call ds:DrawTextW  +
mov ecx [ebp+var_24] +
push ecx  +
mov edx [ebp+wParam] +
push edx  +
call ds:SelectObject  +
mov eax [ebp+var_2C] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
call ds:SetBkColor  +
mov edx [ebp+var_1C] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
call ds:SetTextColor  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+58h] 0 +
jz loc_102DD9F  +
mov ecx [ebp+var_4] +
mov edx [ecx+58h] +
push edx  +
call ds:CloseThemeData  +
push offset aStatic  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
call ds:OpenThemeData  +
mov edx [ebp+var_4] +
mov [edx+58h] eax +
push 1  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1010530  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:GetWindowTextLengthW  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
mov edx [ebp+hWndTo] +
mov [ecx+4] edx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
mov [eax+28h] ecx +
mov edx [ebp+nIDDlgItem] +
push edx  +
mov eax [ebp+hWndTo] +
push eax  +
call ds:GetDlgItem  +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov edx [ebp+var_4] +
add edx 8 +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
call ds:GetClientRect  +
mov edx [ebp+var_4] +
add edx 18h +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:GetWindowRect  +
push 2  +
mov edx [ebp+var_4] +
add edx 18h +
push edx  +
mov eax [ebp+hWndTo] +
push eax  +
push 0  +
call ds:MapWindowPoints  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov [ebp+var_24] ecx +
mov eax [ebp+var_24] +
add eax 18h +
mov ecx [eax] +
mov [ebp+x] ecx +
mov edx [eax+4] +
mov [ebp-0Ch] edx +
mov ecx [eax+8] +
mov [ebp-8] ecx +
mov edx [eax+0Ch] +
mov [ebp-4] edx +
lea eax [ebp+rc2] +
push eax  +
mov ecx [ebp+var_24] +
mov edx [ecx+4] +
push edx  +
call ds:GetClientRect  +
mov eax [ebp+var_24] +
mov ecx [eax+28h] +
and ecx 2 +
jz loc_102DEFF  +
mov edx [ebp+var_24] +
mov eax [edx+28h] +
and eax 1 +
jnz loc_102DEFF  +
mov ecx [ebp+var_24] +
mov edx [ebp+rc2.right] +
sub edx [ecx+10h] +
add edx [ebp+x] +
mov [ebp+x] edx +
mov eax [ebp+var_24] +
mov ecx [ebp+rc2.right] +
sub ecx [eax+10h] +
add ecx [ebp-8] +
mov [ebp-8] ecx +
jmp loc_102DF29  +
mov edx [ebp+var_24] +
mov eax [edx+28h] +
and eax 2 +
jz loc_102DF29  +
mov ecx [ebp+var_24] +
mov edx [ecx+28h] +
and edx 1 +
jz loc_102DF29  +
mov eax [ebp+var_24] +
mov ecx [ebp+var_24] +
mov edx [eax+10h] +
sub edx [ecx+20h] +
mov eax [ebp+rc2.right] +
sub eax edx +
mov [ebp-8] eax +
mov ecx [ebp+var_24] +
mov edx [ecx+28h] +
and edx 8 +
jz loc_102DF5F  +
mov eax [ebp+var_24] +
mov ecx [eax+28h] +
and ecx 4 +
jnz loc_102DF5F  +
mov edx [ebp+var_24] +
mov eax [ebp+rc2.bottom] +
sub eax [edx+14h] +
add eax [ebp-0Ch] +
mov [ebp-0Ch] eax +
mov ecx [ebp+var_24] +
mov edx [ebp+rc2.bottom] +
sub edx [ecx+14h] +
add edx [ebp-4] +
mov [ebp-4] edx +
jmp loc_102DF89  +
mov eax [ebp+var_24] +
mov ecx [eax+28h] +
and ecx 8 +
jz loc_102DF89  +
mov edx [ebp+var_24] +
mov eax [edx+28h] +
and eax 4 +
jz loc_102DF89  +
mov ecx [ebp+var_24] +
mov edx [ebp+var_24] +
mov eax [ecx+14h] +
sub eax [edx+24h] +
mov ecx [ebp+rc2.bottom] +
sub ecx eax +
mov [ebp-4] ecx +
lea edx [ebp+rc2] +
push edx  +
lea eax [ebp+x] +
push eax  +
call ds:EqualRect  +
test eax eax +
jnz loc_102DFC5  +
push 16h  +
mov ecx [ebp-4] +
sub ecx [ebp-0Ch] +
push ecx  +
mov edx [ebp-8] +
sub edx [ebp+x] +
push edx  +
mov eax [ebp-0Ch] +
push eax  +
mov ecx [ebp+x] +
push ecx  +
push 0  +
mov edx [ebp+var_24] +
mov eax [edx] +
push eax  +
mov ecx [ebp+hWinPosInfo] +
push ecx  +
call ds:DeferWindowPos  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_102E070  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006DF0 +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_10227F0  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+18h] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+14h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+20h] 0FA0h +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+1Ch] 0FA0h +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_102E090  +
mov eax [ebp+arg_0] +
and eax 1 +
jz loc_102E055  +
mov ecx [ebp+var_4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006DF8 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_10364EB  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov eax [ebp+var_18] +
mov dword ptr [eax] offset off_1006DF0 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
jmp loc_102E0DC  +
mov ecx [ebp+var_10] +
add ecx 1 +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_1022700  +
cmp [ebp+var_10] eax +
jnb loc_102E10E  +
mov edx [ebp+var_10] +
push edx  +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_102E4A0  +
mov eax [eax] +
mov [ebp+var_14] eax +
mov ecx [ebp+var_14] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
jmp loc_102E0D3  +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_102E3E0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_102E4E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_103651B  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_20] ecx +
cmp [ebp+arg_0] 0 +
jz loc_102E176  +
cmp [ebp+arg_4] 0 +
jnz loc_102E180  +
mov eax 80004005h +
jmp loc_102E224  +
mov [ebp+var_10] 0 +
jmp loc_102E192  +
mov eax [ebp+var_10] +
add eax 1 +
mov [ebp+var_10] eax +
mov ecx [ebp+var_10] +
cmp ecx [ebp+arg_4] +
jge loc_102E222  +
push 2Ch  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_1C] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_1C] 0 +
jz loc_102E1E7  +
mov edx [ebp+var_10] +
mov eax [ebp+arg_0] +
mov ecx [eax+edx*8+4] +
push ecx  +
mov edx [ebp+var_20] +
mov eax [edx] +
mov ecx [ebp+var_20] +
mov edx [eax] +
call edx  +
push eax  +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+eax*8] +
push edx  +
mov ecx [ebp+var_1C] +
call sub_102DE00  +
mov [ebp+var_24] eax +
jmp loc_102E1EE  +
mov [ebp+var_24] 0 +
mov eax [ebp+var_24] +
mov [ebp+var_18] eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_18] +
mov [ebp+var_14] ecx +
cmp [ebp+var_14] 0 +
jnz loc_102E20E  +
mov eax 8007000Eh +
jmp loc_102E224  +
lea edx [ebp+var_14] +
push edx  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_102E400  +
jmp loc_102E189  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+14h] ecx +
mov edx [ebp+var_4] +
mov eax [ebp+arg_4] +
mov [edx+18h] eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+1Ch] ecx +
mov edx [ebp+var_4] +
mov eax [ebp+arg_4] +
mov [edx+20h] eax +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
cmp off_103B010 offset off_103B010 +
jz loc_102E302  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_102E302  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_102E302  +
push offset dword_1006DE0  +
push 0Ah  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_10] 1 +
jmp loc_102E309  +
mov [ebp+var_10] 0 +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_1022700  +
push eax  +
call ds:BeginDeferWindowPos  +
mov [ebp+hWinPosInfo] eax +
cmp [ebp+hWinPosInfo] 0 +
jz loc_102E36C  +
mov [ebp+var_8] 0 +
jmp loc_102E336  +
mov edx [ebp+var_8] +
add edx 1 +
mov [ebp+var_8] edx +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_1022700  +
cmp [ebp+var_8] eax +
jnb loc_102E362  +
mov eax [ebp+hWinPosInfo] +
push eax  +
mov ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_102E4A0  +
mov ecx [eax] +
call sub_102DE90  +
jmp loc_102E32D  +
mov edx [ebp+hWinPosInfo] +
push edx  +
call ds:EndDeferWindowPos  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_8] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_8] +
mov eax [edx+14h] +
mov [ecx+18h] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_8] +
mov eax [edx+18h] +
mov [ecx+1Ch] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_8] +
mov eax [edx+1Ch] +
mov [ecx+20h] eax +
mov ecx [ebp+var_4] +
mov edx [ebp+var_8] +
mov eax [edx+20h] +
mov [ecx+24h] eax +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push 0FFFFFFFFh  +
push 0  +
mov ecx [ebp+var_4] +
call sub_102E520  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+4] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_10] +
mov eax [ebp+var_4] +
cmp eax [edx+8] +
jb loc_102E443  +
mov ecx [ebp+var_4] +
add ecx 1 +
push ecx  +
mov ecx [ebp+var_10] +
call sub_102E640  +
mov [ebp+var_5] al +
movzx edx [ebp+var_5] +
test edx edx +
jnz loc_102E443  +
push 8007000Eh  +
call sub_1007F50  +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edx [ebp+var_4] +
lea eax [ecx+edx*4] +
push eax  +
push 4  +
call sub_101B180  +
add esp 8 +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_102E474  +
mov ecx [ebp+var_C] +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov [ecx] eax +
mov ecx [ebp+var_C] +
mov [ebp+var_14] ecx +
jmp loc_102E47B  +
mov [ebp+var_14] 0 +
mov edx [ebp+var_10] +
mov eax [edx+4] +
add eax 1 +
mov ecx [ebp+var_10] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
cmp ecx [eax+4] +
jb loc_102E4BE  +
push 80070057h  +
call sub_1007F50  +
mov edx [ebp+var_4] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
lea eax [eax+ecx*4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 0 +
jz loc_102E511  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call sub_102E790  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call free  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
cmp [ebp+arg_4] 0FFFFFFFFh +
jz loc_102E53A  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_4] +
mov [eax+0Ch] ecx +
cmp [ebp+arg_0] 0 +
jnz loc_102E58A  +
mov edx [ebp+var_8] +
cmp dword ptr [edx] 0 +
jz loc_102E571  +
mov eax [ebp+var_8] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+var_8] +
mov eax [edx] +
push eax  +
call sub_102E790  +
mov ecx [ebp+var_8] +
mov edx [ecx] +
push edx  +
call free  +
add esp 4 +
mov eax [ebp+var_8] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+4] 0 +
mov edx [ebp+var_8] +
mov dword ptr [edx+8] 0 +
jmp loc_102E633  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_0] +
cmp ecx [eax+8] +
ja loc_102E5F1  +
mov edx [ebp+var_8] +
mov eax [ebp+arg_0] +
cmp eax [edx+4] +
jbe loc_102E5C0  +
mov ecx [ebp+var_8] +
mov edx [ebp+arg_0] +
sub edx [ecx+4] +
push edx  +
mov eax [ebp+var_8] +
mov ecx [eax+4] +
mov edx [ebp+var_8] +
mov eax [edx] +
lea ecx [eax+ecx*4] +
push ecx  +
call sub_102E7F0  +
jmp loc_102E5E6  +
mov edx [ebp+var_8] +
mov eax [edx+4] +
cmp eax [ebp+arg_0] +
jbe loc_102E5E6  +
mov ecx [ebp+var_8] +
mov edx [ecx+4] +
sub edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_8] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
lea eax [ecx+edx*4] +
push eax  +
call sub_102E790  +
mov ecx [ebp+var_8] +
mov edx [ebp+arg_0] +
mov [ecx+4] edx +
jmp loc_102E633  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_8] +
call sub_102E640  +
mov [ebp+var_1] al +
movzx ecx [ebp+var_1] +
test ecx ecx +
jnz loc_102E60C  +
xor al al +
jmp loc_102E635  +
mov edx [ebp+var_8] +
mov eax [ebp+arg_0] +
sub eax [edx+4] +
push eax  +
mov ecx [ebp+var_8] +
mov edx [ecx+4] +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ecx+edx*4] +
push edx  +
call sub_102E7F0  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
mov al 1 +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
mov ecx [ebp+arg_0] +
cmp ecx [eax+8] +
jbe loc_102E774  +
mov edx [ebp+var_14] +
cmp dword ptr [edx] 0 +
jnz loc_102E6B4  +
mov eax [ebp+var_14] +
mov ecx [eax+0Ch] +
cmp ecx [ebp+arg_0] +
jbe loc_102E678  +
mov edx [ebp+var_14] +
mov eax [edx+0Ch] +
mov [ebp+var_18] eax +
jmp loc_102E67E  +
mov ecx [ebp+arg_0] +
mov [ebp+var_18] ecx +
mov edx [ebp+var_18] +
mov [ebp+var_4] edx +
push 4  +
mov eax [ebp+var_4] +
push eax  +
call calloc  +
add esp 8 +
mov ecx [ebp+var_14] +
mov [ecx] eax +
mov edx [ebp+var_14] +
cmp dword ptr [edx] 0 +
jnz loc_102E6A6  +
xor al al +
jmp loc_102E776  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_4] +
mov [eax+8] ecx +
jmp loc_102E774  +
mov edx [ebp+var_14] +
mov eax [edx+0Ch] +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jnz loc_102E702  +
mov ecx [ebp+var_14] +
mov edx [ecx+4] +
shr edx 3 +
mov [ebp+var_10] edx +
cmp [ebp+var_10] 4 +
jnb loc_102E6DE  +
mov [ebp+var_1C] 4 +
jmp loc_102E6FC  +
cmp [ebp+var_10] 400h +
jbe loc_102E6F0  +
mov [ebp+var_20] 400h +
jmp loc_102E6F6  +
mov eax [ebp+var_10] +
mov [ebp+var_20] eax +
mov ecx [ebp+var_20] +
mov [ebp+var_1C] ecx +
mov edx [ebp+var_1C] +
mov [ebp+var_10] edx +
mov eax [ebp+var_14] +
mov ecx [eax+8] +
add ecx [ebp+var_10] +
cmp [ebp+arg_0] ecx +
jnb loc_102E71E  +
mov edx [ebp+var_14] +
mov eax [edx+8] +
add eax [ebp+var_10] +
mov [ebp+var_8] eax +
jmp loc_102E724  +
mov ecx [ebp+arg_0] +
mov [ebp+var_8] ecx +
push 4  +
mov edx [ebp+var_8] +
push edx  +
call calloc  +
add esp 8 +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_102E73F  +
xor al al +
jmp loc_102E776  +
mov eax [ebp+var_14] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+var_14] +
mov eax [edx] +
push eax  +
mov ecx [ebp+var_C] +
push ecx  +
call sub_102E7C0  +
mov edx [ebp+var_14] +
mov eax [edx] +
push eax  +
call free  +
add esp 4 +
mov ecx [ebp+var_14] +
mov edx [ebp+var_C] +
mov [ecx] edx +
mov eax [ebp+var_14] +
mov ecx [ebp+var_8] +
mov [eax+8] ecx +
mov al 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] 0 +
jmp loc_102E7A8  +
mov eax [ebp+var_4] +
add eax 1 +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
cmp ecx [ebp+arg_4] +
jnb loc_102E7B2  +
jmp loc_102E79F  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
shl eax 2 +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_8] +
shl edx 2 +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_10229F0  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036540  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_14] 0 +
mov [ebp+var_4] 0 +
mov [ebp+var_14] 0 +
jmp loc_102E83E  +
mov eax [ebp+var_14] +
add eax 1 +
mov [ebp+var_14] eax +
mov ecx [ebp+var_14] +
cmp ecx [ebp+arg_4] +
jnb loc_102E865  +
mov edx [ebp+var_14] +
mov eax [ebp+arg_0] +
lea ecx [eax+edx*4] +
push ecx  +
push 4  +
call sub_101B180  +
add esp 8 +
mov [ebp+var_1C] eax +
mov edx [ebp+var_1C] +
mov [ebp+var_18] edx +
jmp loc_102E835  +
jmp loc_102E88E  +
cmp dword ptr [ebp-14h] 0 +
jbe loc_102E878  +
mov eax [ebp-14h] +
sub eax 1 +
mov [ebp-14h] eax +
jmp loc_102E867  +
push 0  +
push 0  +
call _CxxThrowException  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_102E895 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006DFC +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+34h] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+38h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+3Ch] 0 +
mov ecx [ebp+var_4] +
mov byte ptr [ecx+40h] 0 +
push 30h  +
push 0  +
mov edx [ebp+var_4] +
add edx 4 +
push edx  +
call memset  +
add esp 0Ch +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_102E950  +
mov eax [ebp+8] +
and eax 1 +
jz loc_102E935  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006DFC +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_14] +
mov [eax+3Ch] ecx +
mov edx [ebp+var_8] +
mov eax [ebp+arg_0] +
mov [edx+34h] eax +
cmp [ebp+arg_14] 0 +
jnz loc_102EA06  +
push 0  +
mov ecx [ebp+hInstance] +
push ecx  +
push 0  +
mov edx [ebp+hWnd] +
push edx  +
push 80000000h  +
push 80000000h  +
push 80000000h  +
push 80000000h  +
push 80000003h  +
push 0  +
push offset ClassName  +
push 8  +
call ds:CreateWindowExW  +
mov ecx [ebp+var_8] +
mov [ecx+38h] eax +
mov edx [ebp+var_8] +
mov eax [edx+38h] +
push eax  +
call ds:IsWindow  +
test eax eax +
jnz loc_102E9E8  +
mov eax 80004005h +
jmp loc_102EAE2  +
push 13h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
mov ecx [ebp+var_8] +
mov edx [ecx+38h] +
push edx  +
call ds:SetWindowPos  +
jmp loc_102EAC7  +
push 0  +
mov eax [ebp+hInstance] +
push eax  +
push 0  +
push 0  +
push 80000000h  +
push 80000000h  +
push 80000000h  +
push 80000000h  +
push 80000000h  +
push offset WindowName  +
push offset ClassName  +
push 8  +
call ds:CreateWindowExW  +
mov ecx [ebp+var_8] +
mov [ecx+38h] eax +
mov edx [ebp+var_8] +
mov eax [edx+38h] +
push eax  +
call ds:IsWindow  +
test eax eax +
jnz loc_102EA5C  +
mov eax 80004005h +
jmp loc_102EAE2  +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+4] 30h +
mov edx [ebp+var_8] +
mov dword ptr [edx+8] 0A0h +
mov eax [ebp+var_8] +
mov ecx [ebp+hWnd] +
mov [eax+0Ch] ecx +
mov edx [ebp+hWnd] +
push edx  +
call ds:GetParent  +
mov ecx [ebp+var_8] +
mov [ecx+10h] eax +
mov edx [ebp+var_8] +
mov eax [ebp+hInstance] +
mov [edx+24h] eax +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+28h] 0 +
mov edx [ebp+var_8] +
add edx 4 +
push edx  +
push 0  +
push 432h  +
mov eax [ebp+var_8] +
mov ecx [eax+38h] +
push ecx  +
call ds:SendMessageW  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_102EAC7  +
mov eax 80004005h +
jmp loc_102EAE2  +
push 13h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
mov edx [ebp+var_8] +
mov eax [edx+38h] +
push eax  +
call ds:SetWindowPos  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov [ebp+var_38] ecx +
mov [ebp+lParam] 0 +
push 2Ch  +
push 0  +
lea eax [ebp+var_30] +
push eax  +
call memset  +
add esp 0Ch +
lea ecx [ebp+rcSrc] +
push ecx  +
lea edx [ebp+rcDst] +
push edx  +
call ds:CopyRect  +
mov [ebp+lParam] 30h +
mov [ebp+var_30] 10h +
mov eax [ebp+arg_0] +
mov [ebp+var_2C] eax +
mov ecx [ebp+arg_4] +
mov [ebp+var_28] ecx +
mov edx [ebp+arg_18] +
mov [ebp+var_10] edx +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 432h  +
mov ecx [ebp+var_38] +
mov edx [ecx+38h] +
push edx  +
call ds:SendMessageW  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_102EB77  +
push 0  +
push 1  +
push 401h  +
mov eax [ebp+var_38] +
mov ecx [eax+38h] +
push ecx  +
call ds:SendMessageW  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+hWnd] +
push ecx  +
call ds:GetClientRect  +
mov edx [ebp+arg_8] +
push edx  +
sub esp 10h +
mov eax esp +
mov ecx [ebp+Rect.left] +
mov [eax] ecx +
mov edx [ebp+Rect.top] +
mov [eax+4] edx +
mov ecx [ebp+Rect.right] +
mov [eax+8] ecx +
mov edx [ebp+Rect.bottom] +
mov [eax+0Ch] edx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hWnd] +
push ecx  +
mov ecx [ebp+var_14] +
call sub_102EAF0  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_18] ecx +
mov eax [ebp+nIDDlgItem] +
push eax  +
mov ecx [ebp+hWndTo] +
push ecx  +
call ds:GetDlgItem  +
mov [ebp+hWndFrom] eax +
cmp [ebp+hWndFrom] 0 +
jnz loc_102EC16  +
xor eax eax +
jmp loc_102EC66  +
lea edx [ebp+Points] +
push edx  +
mov eax [ebp+hWndFrom] +
push eax  +
call ds:GetClientRect  +
push 2  +
lea ecx [ebp+Points] +
push ecx  +
mov edx [ebp+hWndTo] +
push edx  +
mov eax [ebp+hWndFrom] +
push eax  +
call ds:MapWindowPoints  +
push 0FFFFFFFFh  +
sub esp 10h +
mov ecx esp +
mov edx [ebp+Points.x] +
mov [ecx] edx +
mov eax [ebp+Points.y] +
mov [ecx+4] eax +
mov edx [ebp-8] +
mov [ecx+8] edx +
mov eax [ebp-4] +
mov [ecx+0Ch] eax +
mov ecx [ebp+nIDDlgItem] +
push ecx  +
mov edx [ebp+hWndTo] +
push edx  +
mov ecx [ebp+var_18] +
call sub_102EAF0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_4] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx] +
push eax  +
lea ecx [ebp+Point] +
call sub_102EE60  +
mov ecx [ebp+arg_4] +
mov edx [ecx+0Ch] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
push ecx  +
lea ecx [ebp+var_8] +
call sub_102EE60  +
lea edx [ebp+Point] +
push edx  +
mov eax [ebp+hWnd] +
push eax  +
call ds:ClientToScreen  +
lea ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+hWnd] +
push edx  +
call ds:ClientToScreen  +
mov eax [ebp+arg_4] +
mov ecx [ebp+Point.x] +
mov [eax] ecx +
mov edx [ebp+arg_4] +
mov eax [ebp+Point.y] +
mov [edx+4] eax +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_8] +
mov [ecx+8] edx +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
mov [eax+0Ch] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+pvParam] 1 +
push 0  +
lea eax [ebp+pvParam] +
push eax  +
push 0  +
push 1042h  +
call ds:SystemParametersInfoW  +
xor eax eax +
cmp [ebp+pvParam] 0 +
setz al  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov [ebp+var_C] 0 +
mov [ebp+var_8] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_102ED63  +
xor eax eax +
jmp loc_102EE4B  +
mov eax [ebp+arg_0] +
mov [ebp+var_18] eax +
mov ecx [ebp+var_18] +
add ecx 2 +
mov [ebp+var_1C] ecx +
mov edx [ebp+var_18] +
mov ax [edx] +
mov [ebp+var_1E] ax +
add [ebp+var_18] 2 +
cmp [ebp+var_1E] 0 +
jnz loc_102ED72  +
mov ecx [ebp+var_18] +
sub ecx [ebp+var_1C] +
sar ecx 1 +
mov [ebp+var_24] ecx +
mov edx [ebp+var_24] +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 0 +
jbe loc_102EE48  +
mov eax [ebp+arg_0] +
mov [ebp+var_10] eax +
mov ecx [ebp+var_10] +
movzx edx word ptr [ecx] +
test edx edx +
jz loc_102EDD1  +
mov eax [ebp+var_10] +
movzx ecx word ptr [eax] +
cmp ecx 26h +
jnz loc_102EDC6  +
mov edx [ebp+var_8] +
add edx 1 +
mov [ebp+var_8] edx +
mov eax [ebp+var_10] +
add eax 2 +
mov [ebp+var_10] eax +
jmp loc_102EDA8  +
mov ecx [ebp+var_4] +
add ecx [ebp+var_8] +
lea edx [ecx+ecx+2] +
push edx  +
call ds:CoTaskMemAlloc  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_102EE48  +
mov eax [ebp+arg_0] +
mov [ebp+var_10] eax +
mov ecx [ebp+var_C] +
mov [ebp+var_14] ecx +
mov edx [ebp+var_10] +
movzx eax word ptr [edx] +
test eax eax +
jz loc_102EE40  +
mov ecx [ebp+var_10] +
movzx edx word ptr [ecx] +
cmp edx 26h +
jnz loc_102EE20  +
mov eax 26h +
mov ecx [ebp+var_14] +
mov [ecx] ax +
mov edx [ebp+var_14] +
add edx 2 +
mov [ebp+var_14] edx +
mov eax [ebp+var_14] +
mov ecx [ebp+var_10] +
mov dx [ecx] +
mov [eax] dx +
mov eax [ebp+var_14] +
add eax 2 +
mov [ebp+var_14] eax +
mov ecx [ebp+var_10] +
add ecx 2 +
mov [ebp+var_10] ecx +
jmp loc_102EDF7  +
xor edx edx +
mov eax [ebp+var_14] +
mov [eax] dx +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov edx [ebp+var_4] +
mov eax [ebp+arg_4] +
mov [edx+4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024C10  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006E24 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+28h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+2Ch] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+30h] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+34h] 24h +
mov eax [ebp+var_4] +
mov dword ptr [eax+38h] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+3Ch] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+40h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+54h] 0 +
xor ecx ecx +
mov edx [ebp+var_4] +
add edx 44h +
mov [edx] ecx +
mov [edx+4] ecx +
mov [edx+8] ecx +
mov [edx+0Ch] ecx +
push 7F89h  +
push 0  +
call ds:LoadCursorW  +
mov ecx [ebp+var_4] +
mov [ecx+28h] eax +
push 7F00h  +
push 0  +
call ds:LoadCursorW  +
mov edx [ebp+var_4] +
mov [edx+2Ch] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_102EF73  +
jmp loc_102F0D2  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_102EFAD  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_102F1E0  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102EFAD  +
mov eax 1 +
jmp loc_102F0D4  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_102EFE7  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_102F2A0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102EFE7  +
mov eax 1 +
jmp loc_102F0D4  +
cmp dword ptr [ebp+0Ch] 200h +
jnz loc_102F024  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102F9E0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102F024  +
mov eax 1 +
jmp loc_102F0D4  +
cmp dword ptr [ebp+0Ch] 202h +
jnz loc_102F05E  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102FB00  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102F05E  +
mov eax 1 +
jmp loc_102F0D4  +
cmp dword ptr [ebp+0Ch] 31Ah +
jnz loc_102F098  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102FB80  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102F098  +
mov eax 1 +
jmp loc_102F0D4  +
cmp dword ptr [ebp+0Ch] 128h +
jnz loc_102F0D2  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_102FB40  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102F0D2  +
mov eax 1 +
jmp loc_102F0D4  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_102F120  +
mov eax [ebp+8] +
and eax 1 +
jz loc_102F105  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006E24 +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+24h] 0 +
jz loc_102F152  +
mov edx [ebp+var_4] +
mov eax [edx+24h] +
push eax  +
call ds:DeleteObject  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+24h] 0 +
mov edx [ebp+var_4] +
cmp dword ptr [edx+54h] 0 +
jz loc_102F168  +
mov eax [ebp+var_4] +
mov ecx [eax+54h] +
push ecx  +
call ds:CloseThemeData  +
mov ecx [ebp+var_4] +
call sub_1014040  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] 2 +
jnz loc_102F199  +
mov eax [ebp+var_4] +
mov dword ptr [eax+38h] 1 +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+38h] 0 +
jz loc_102F1BC  +
push offset aFlyout  +
mov edx [ebp+var_4] +
mov eax [edx+4] +
push eax  +
call ds:OpenThemeData  +
mov ecx [ebp+var_4] +
mov [ecx+54h] eax +
jmp loc_102F1D4  +
push offset aLink  +
mov edx [ebp+var_4] +
mov eax [edx+4] +
push eax  +
call ds:OpenThemeData  +
mov ecx [ebp+var_4] +
mov [ecx+54h] eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov [ebp+var_20] ecx +
mov eax [ebp+arg_4] +
mov [ebp+hdc] eax +
lea ecx [ebp+Rect] +
push ecx  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_100D6B0  +
mov edx [ebp+var_20] +
cmp dword ptr [edx+54h] 0 +
jz loc_102F222  +
lea eax [ebp+Rect] +
push eax  +
push 4  +
mov ecx [ebp+hdc] +
push ecx  +
mov edx [ebp+var_20] +
mov eax [edx+4] +
push eax  +
call ds:DrawThemeParentBackgroundEx  +
jmp loc_102F284  +
mov ecx [ebp+var_20] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
push 138h  +
lea ecx [ebp+var_1C] +
push ecx  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:SendMessageW  +
mov [ebp+hbr] eax +
mov edx [ebp+hbr] +
push edx  +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+hdc] +
push ecx  +
call ds:FillRect  +
mov edx [ebp+var_20] +
cmp dword ptr [edx+30h] 0 +
jz loc_102F284  +
mov eax [ebp+var_20] +
mov ecx [eax+30h] +
push ecx  +
push 6  +
lea edx [ebp+Rect] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
call ds:DrawEdge  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10Ch +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_104] ecx +
mov [ebp+lpString] 0 +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_104] +
add ecx 4 +
call sub_101A660  +
mov [ebp+hDC] eax +
mov ecx [ebp+var_104] +
add ecx 4 +
call sub_102DDE0  +
add eax 1 +
mov [ebp+nMaxCount] eax +
xor ecx ecx +
mov eax [ebp+nMaxCount] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_FC] eax +
mov eax [ebp+var_FC] +
mov [ebp+lpString] eax +
cmp [ebp+lpString] 0 +
jz loc_102F76B  +
mov ecx [ebp+var_104] +
add ecx 4 +
call sub_102FBD0  +
mov [ebp+var_58] eax +
mov [ebp+var_70] 0 +
mov ecx [ebp+nMaxCount] +
push ecx  +
mov edx [ebp+lpString] +
push edx  +
mov ecx [ebp+var_104] +
add ecx 4 +
call sub_1022DB0  +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_104] +
add ecx 4 +
call sub_100D6B0  +
push 1  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SetBkMode  +
push 0  +
push 0  +
push 129h  +
mov ecx [ebp+var_104] +
add ecx 4 +
call sub_101A540  +
mov [ebp+var_74] eax +
mov edx [ebp+var_74] +
and edx 2 +
xor eax eax +
cmp edx 2 +
setz al  +
mov [ebp+var_6C] eax +
mov ecx [ebp+var_104] +
mov edx [ecx+34h] +
and edx 800h +
jz loc_102F3AF  +
mov [ebp+var_6C] 0 +
mov eax [ebp+var_104] +
cmp dword ptr [eax+54h] 0 +
jz loc_102F47D  +
cmp [ebp+var_58] 0 +
jz loc_102F47D  +
mov ecx [ebp+var_104] +
cmp dword ptr [ecx+38h] 0 +
jz loc_102F427  +
lea edx [ebp+Rect] +
push edx  +
push 0  +
mov eax [ebp+var_6C] +
neg eax  +
sbb eax eax +
and eax 100000h +
mov ecx [ebp+var_104] +
or eax [ecx+34h] +
push eax  +
mov edx [ebp+nMaxCount] +
sub edx 1 +
push edx  +
mov eax [ebp+lpString] +
push eax  +
mov ecx [ebp+var_104] +
xor edx edx +
cmp dword ptr [ecx+3Ch] 0 +
setnz dl  +
add edx 1 +
push edx  +
push 4  +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_104] +
mov edx [ecx+54h] +
push edx  +
call ds:DrawThemeText  +
jmp loc_102F478  +
lea eax [ebp+Rect] +
push eax  +
push 0  +
mov ecx [ebp+var_6C] +
neg ecx  +
sbb ecx ecx +
and ecx 100000h +
mov edx [ebp+var_104] +
or ecx [edx+34h] +
push ecx  +
mov eax [ebp+nMaxCount] +
sub eax 1 +
push eax  +
mov ecx [ebp+lpString] +
push ecx  +
mov edx [ebp+var_104] +
xor eax eax +
cmp dword ptr [edx+3Ch] 0 +
setnz al  +
add eax 1 +
push eax  +
push 1  +
mov ecx [ebp+hDC] +
push ecx  +
mov edx [ebp+var_104] +
mov eax [edx+54h] +
push eax  +
call ds:DrawThemeText  +
jmp loc_102F5A2  +
push 8  +
call ds:GetSysColor  +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SetTextColor  +
mov [ebp+var_78] eax +
mov edx [ebp+var_104] +
cmp dword ptr [edx+24h] 0 +
jnz loc_102F50F  +
mov eax [ebp+var_104] +
cmp dword ptr [eax+3Ch] 0 +
jz loc_102F50F  +
mov [ebp+var_D8.lfHeight] 0 +
push 58h  +
push 0  +
lea ecx [ebp+var_D8.lfWidth] +
push ecx  +
call memset  +
add esp 0Ch +
lea edx [ebp+var_D8] +
push edx  +
push 5Ch  +
push 0  +
push 0  +
push 31h  +
mov eax [ebp+var_104] +
mov ecx [eax+4] +
push ecx  +
call ds:SendMessageW  +
push eax  +
call ds:GetObjectW  +
test eax eax +
jle loc_102F50F  +
mov [ebp+var_D8.lfUnderline] 1 +
lea edx [ebp+var_D8] +
push edx  +
call ds:CreateFontIndirectW  +
mov ecx [ebp+var_104] +
mov [ecx+24h] eax +
mov edx [ebp+var_104] +
cmp dword ptr [edx+24h] 0 +
jz loc_102F540  +
mov eax [ebp+var_104] +
cmp dword ptr [eax+3Ch] 0 +
jz loc_102F540  +
mov ecx [ebp+var_104] +
mov edx [ecx+24h] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:SelectObject  +
mov [ebp+var_70] eax +
jmp loc_102F564  +
push 0  +
push 0  +
push 31h  +
mov ecx [ebp+var_104] +
mov edx [ecx+4] +
push edx  +
call ds:SendMessageW  +
push eax  +
mov eax [ebp+hDC] +
push eax  +
call ds:SelectObject  +
mov [ebp+var_70] eax +
mov ecx [ebp+var_6C] +
neg ecx  +
sbb ecx ecx +
and ecx 100000h +
mov edx [ebp+var_104] +
or ecx [edx+34h] +
push ecx  +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+nMaxCount] +
sub ecx 1 +
push ecx  +
mov edx [ebp+lpString] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:DrawTextW  +
mov ecx [ebp+var_78] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:SetTextColor  +
mov eax [ebp+var_104] +
cmp dword ptr [eax+4Ch] 0 +
jnz loc_102F71A  +
lea ecx [ebp+Rect] +
push ecx  +
lea edx [ebp+rcDst] +
push edx  +
call ds:CopyRect  +
mov [ebp+var_E4] 0 +
mov [ebp+var_E8] 0 +
lea eax [ebp+rcDst] +
push eax  +
mov ecx [ebp+var_58] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
mov eax [ebp+lpString] +
push eax  +
mov ecx [ebp+var_104] +
call sub_102F7A0  +
mov ecx [ebp+var_104] +
cmp dword ptr [ecx+54h] 0 +
jz loc_102F63F  +
cmp [ebp+var_58] 0 +
jz loc_102F63F  +
mov edx [ebp+var_104] +
cmp dword ptr [edx+38h] 0 +
jz loc_102F629  +
mov [ebp+var_E4] 0FFFFFFFCh +
mov [ebp+var_E8] 3 +
jmp loc_102F63D  +
mov [ebp+var_E4] 0FFFFFFFEh +
mov [ebp+var_E8] 2 +
jmp loc_102F653  +
mov [ebp+var_E4] 0FFFFFFFDh +
mov [ebp+var_E8] 3 +
mov eax [ebp+var_104] +
mov ecx [eax+34h] +
and ecx 1 +
jz loc_102F677  +
mov eax [ebp+Rect.right] +
sub eax [ebp+rcDst.right] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_108] eax +
jmp loc_102F681  +
mov [ebp+var_108] 0 +
mov edx [ebp+var_108] +
mov [ebp+var_E0] edx +
mov eax [ebp+var_104] +
mov ecx [eax+34h] +
and ecx 4 +
jz loc_102F6B1  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+rcDst.bottom] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_10C] eax +
jmp loc_102F6BB  +
mov [ebp+var_10C] 0 +
mov edx [ebp+var_10C] +
mov [ebp+dy] edx +
lea eax [ebp+rcDst] +
push eax  +
mov ecx [ebp+var_104] +
add ecx 44h +
push ecx  +
call ds:CopyRect  +
mov edx [ebp+dy] +
push edx  +
mov eax [ebp+var_E0] +
push eax  +
mov ecx [ebp+var_104] +
add ecx 44h +
push ecx  +
call ds:OffsetRect  +
mov edx [ebp+var_E4] +
push edx  +
mov eax [ebp+var_E8] +
push eax  +
mov ecx [ebp+var_104] +
add ecx 44h +
push ecx  +
call ds:InflateRect  +
call ds:GetFocus  +
mov edx [ebp+var_104] +
cmp eax [edx+4] +
jnz loc_102F73F  +
mov eax [ebp+var_104] +
add eax 44h +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:DrawFocusRect  +
cmp [ebp+var_70] 0 +
jz loc_102F753  +
mov edx [ebp+var_70] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:SelectObject  +
mov ecx [ebp+lpString] +
mov [ebp+var_100] ecx +
mov edx [ebp+var_100] +
push edx  +
call ??_V@YAXPAX@Z  +
add esp 4 +
lea eax [ebp+Paint] +
push eax  +
mov ecx [ebp+var_104] +
add ecx 4 +
call sub_101A690  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov [ebp+var_44] ecx +
mov eax [ebp+var_44] +
cmp dword ptr [eax+54h] 0 +
jz loc_102F86F  +
cmp [ebp+arg_8] 0 +
jz loc_102F86F  +
mov [ebp+var_40] 0 +
push 3Ch  +
push 0  +
lea ecx [ebp+var_3C] +
push ecx  +
call memset  +
add esp 0Ch +
mov [ebp+var_40] 40h +
mov [ebp+var_3C] 200h +
mov edx [ebp+var_44] +
cmp dword ptr [edx+38h] 0 +
jz loc_102F82F  +
lea eax [ebp+var_40] +
push eax  +
mov ecx [ebp+lpRect] +
push ecx  +
mov edx [ebp+var_44] +
mov eax [edx+34h] +
or eax 400h +
push eax  +
push 0FFFFFFFFh  +
mov ecx [ebp+lpString] +
push ecx  +
mov edx [ebp+var_44] +
xor eax eax +
cmp dword ptr [edx+3Ch] 0 +
setnz al  +
add eax 1 +
push eax  +
push 4  +
mov ecx [ebp+hDC] +
push ecx  +
mov edx [ebp+var_44] +
mov eax [edx+54h] +
push eax  +
call ds:DrawThemeTextEx  +
jmp loc_102F86D  +
lea ecx [ebp+var_40] +
push ecx  +
mov edx [ebp+lpRect] +
push edx  +
mov eax [ebp+var_44] +
mov ecx [eax+34h] +
or ecx 400h +
push ecx  +
push 0FFFFFFFFh  +
mov edx [ebp+lpString] +
push edx  +
mov eax [ebp+var_44] +
xor ecx ecx +
cmp dword ptr [eax+3Ch] 0 +
setnz cl  +
add ecx 1 +
push ecx  +
push 1  +
mov edx [ebp+hDC] +
push edx  +
mov eax [ebp+var_44] +
mov ecx [eax+54h] +
push ecx  +
call ds:DrawThemeTextEx  +
jmp loc_102F88F  +
mov edx [ebp+var_44] +
mov eax [edx+34h] +
or eax 400h +
push eax  +
mov ecx [ebp+lpRect] +
push ecx  +
push 0FFFFFFFFh  +
mov edx [ebp+lpString] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:DrawTextW  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov [ebp+var_30] ecx +
mov [ebp+lpString] 0 +
mov [ebp+hDC] 0 +
mov [ebp+Rect.left] 0 +
mov [ebp+Rect.top] 0 +
mov [ebp+Rect.right] 0 +
mov [ebp+Rect.bottom] 0 +
mov ecx [ebp+var_30] +
add ecx 4 +
call sub_102FBD0  +
mov [ebp+var_4] eax +
mov [ebp+var_20] 0 +
push 0  +
call ds:CreateCompatibleDC  +
mov [ebp+hDC] eax +
mov eax [ebp+var_30] +
cmp dword ptr [eax+54h] 0 +
jz loc_102F904  +
cmp [ebp+var_4] 0 +
jnz loc_102F925  +
push 0  +
push 0  +
push 31h  +
mov ecx [ebp+var_30] +
mov edx [ecx+4] +
push edx  +
call ds:SendMessageW  +
push eax  +
mov eax [ebp+hDC] +
push eax  +
call ds:SelectObject  +
mov [ebp+var_20] eax +
mov ecx [ebp+var_30] +
add ecx 4 +
call sub_102DDE0  +
add eax 1 +
mov [ebp+nMaxCount] eax +
xor ecx ecx +
mov eax [ebp+nMaxCount] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
add esp 4 +
mov [ebp+var_28] eax +
mov eax [ebp+var_28] +
mov [ebp+lpString] eax +
cmp [ebp+lpString] 0 +
jz loc_102F98C  +
mov ecx [ebp+nMaxCount] +
push ecx  +
mov edx [ebp+lpString] +
push edx  +
mov ecx [ebp+var_30] +
add ecx 4 +
call sub_1022DB0  +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
mov eax [ebp+lpString] +
push eax  +
mov ecx [ebp+var_30] +
call sub_102F7A0  +
mov ecx [ebp+lpString] +
mov [ebp+var_2C] ecx +
mov edx [ebp+var_2C] +
push edx  +
call ??_V@YAXPAX@Z  +
add esp 4 +
cmp [ebp+hDC] 0 +
jz loc_102F9C2  +
cmp [ebp+var_20] 0 +
jz loc_102F9B8  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SelectObject  +
mov edx [ebp+hDC] +
push edx  +
call ds:DeleteDC  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov [ebp+var_24] ecx +
mov eax [ebp+arg_8] +
and eax 0FFFFh +
movsx ecx ax +
mov [ebp+pt.x] ecx +
mov edx [ebp+arg_8] +
shr edx 10h +
and edx 0FFFFh +
movsx eax dx +
mov [ebp+pt.y] eax +
mov ecx [ebp+var_24] +
mov edx [ecx+3Ch] +
mov [ebp+var_10] edx +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_102FBD0  +
mov [ebp+var_4] eax +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_100D6B0  +
cmp [ebp+var_4] 0 +
jz loc_102FA88  +
mov ecx [ebp+pt.y] +
push ecx  +
mov edx [ebp+pt.x] +
push edx  +
lea eax [ebp+Rect] +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_102FA88  +
mov ecx [ebp+var_24] +
cmp dword ptr [ecx+40h] 0 +
jnz loc_102FA6B  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_10102B0  +
mov edx [ebp+var_24] +
mov dword ptr [edx+40h] 1 +
mov eax [ebp+pt.y] +
push eax  +
mov ecx [ebp+pt.x] +
push ecx  +
mov edx [ebp+var_24] +
add edx 44h +
push edx  +
call ds:PtInRect  +
mov ecx [ebp+var_24] +
mov [ecx+3Ch] eax +
jmp loc_102FAA2  +
call ds:ReleaseCapture  +
mov edx [ebp+var_24] +
mov dword ptr [edx+40h] 0 +
mov eax [ebp+var_24] +
mov dword ptr [eax+3Ch] 0 +
mov ecx [ebp+var_24] +
mov edx [ecx+3Ch] +
cmp edx [ebp+var_10] +
jz loc_102FAEC  +
push 1  +
push 0  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_1010530  +
mov eax [ebp+var_24] +
cmp dword ptr [eax+28h] 0 +
jz loc_102FAEC  +
mov ecx [ebp+var_24] +
cmp dword ptr [ecx+3Ch] 0 +
jz loc_102FAD9  +
mov edx [ebp+var_24] +
mov eax [edx+28h] +
mov [ebp+hCursor] eax +
jmp loc_102FAE2  +
mov ecx [ebp+var_24] +
mov edx [ecx+2Ch] +
mov [ebp+hCursor] edx +
mov eax [ebp+hCursor] +
push eax  +
call ds:SetCursor  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+3Ch] 0 +
jnz loc_102FB21  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
jmp loc_102FB2F  +
jmp loc_102FB2F  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1011530  +
mov [ebp+var_4] eax +
push 1  +
push 0  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1010530  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+54h] 0 +
jz loc_102FB9F  +
mov ecx [ebp+var_4] +
mov edx [ecx+54h] +
push edx  +
call ds:CloseThemeData  +
push offset aLink  +
push 0  +
call ds:OpenThemeData  +
mov ecx [ebp+var_4] +
mov [ecx+54h] eax +
push 1  +
push 0  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1010530  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:IsWindowEnabled  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1024C10  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006E60 +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_0] +
mov [ecx+2Ch] edx +
mov eax [ebp+var_4] +
mov dword ptr [eax+34h] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+38h] 0FFFFFFFFh +
mov ecx [ebp+var_4] +
add ecx 40h +
call sub_101CBA0  +
mov edx [ebp+var_4] +
mov dword ptr [edx+44h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+48h] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+4Ch] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+50h] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_102FC93  +
jmp loc_102FDCC  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_102FCCD  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_1030380  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102FCCD  +
mov eax 1 +
jmp loc_102FDCE  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_102FD0C  +
mov eax [ebp+14h] +
cmp dword ptr [eax+8] 0FFFFFFF4h +
jnz loc_102FD0C  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp-8] +
call sub_1030430  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102FD0C  +
mov eax 1 +
jmp loc_102FDCE  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_102FD4E  +
mov edx [ebp+14h] +
cmp dword ptr [edx+8] 0FFFFFD31h +
jnz loc_102FD4E  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-8] +
call sub_1030220  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102FD4E  +
mov eax 1 +
jmp loc_102FDCE  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_102FD8D  +
mov edx [ebp+14h] +
cmp dword ptr [edx+8] 0FFFFFDF7h +
jnz loc_102FD8D  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-8] +
call sub_1030290  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102FD8D  +
mov eax 1 +
jmp loc_102FDCE  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_102FDCC  +
mov edx [ebp+14h] +
cmp dword ptr [edx+8] 0FFFFFDF6h +
jnz loc_102FDCC  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-8] +
call sub_1030310  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_102FDCC  +
mov eax 1 +
jmp loc_102FDCE  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_102FE20  +
mov eax [ebp+8] +
and eax 1 +
jz loc_102FE05  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006E60 +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+50h] 0 +
jz loc_102FE52  +
mov edx [ebp+var_4] +
mov eax [edx+50h] +
push eax  +
call ds:DwmUnregisterThumbnail  +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+50h] 0 +
mov edx [ebp+var_4] +
cmp dword ptr [edx+3Ch] 0 +
jz loc_102FE68  +
mov eax [ebp+var_4] +
mov ecx [eax+3Ch] +
push ecx  +
call ds:ImageList_Destroy  +
mov ecx [ebp+var_4] +
add ecx 40h +
call sub_101AD70  +
mov ecx [ebp+var_4] +
call sub_1014040  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+30h] ecx +
push 0  +
push 0  +
push 423h  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A540  +
mov edx [ebp+var_4] +
mov [edx+48h] eax +
mov eax [ebp+var_4] +
cmp dword ptr [eax+48h] 0 +
jz loc_102FEE7  +
push 0FFFFFFF0h  +
mov ecx [ebp+var_4] +
mov edx [ecx+48h] +
push edx  +
call ds:GetWindowLongW  +
or eax 2 +
push eax  +
push 0FFFFFFF0h  +
mov eax [ebp+var_4] +
mov ecx [eax+48h] +
push ecx  +
call ds:SetWindowLongW  +
push 0  +
push 2  +
push 0A021h  +
mov edx [ebp+var_4] +
mov eax [edx+30h] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx+30h] +
push edx  +
call ds:ImageList_Create  +
mov ecx [ebp+var_4] +
mov [ecx+3Ch] eax +
mov edx [ebp+arg_0] +
and edx 0FFFFh +
movzx eax dx +
mov ecx [ebp+arg_0] +
and ecx 0FFFFh +
movzx edx cx +
shl edx 10h +
or eax edx +
push eax  +
push 0  +
push 41Fh  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A540  +
mov eax [ebp+var_4] +
mov ecx [eax+3Ch] +
push ecx  +
push 0  +
push 430h  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A540  +
push 0  +
push 14h  +
push 41Eh  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A540  +
push 0  +
push 0  +
push 455h  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A540  +
or eax 80h +
push eax  +
push 0  +
push 454h  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A540  +
push 1  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A6C0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_2C] eax +
mov [ebp+var_44] ecx +
mov eax [ebp+var_44] +
mov ecx [ebp+hicon] +
mov [eax+24h] ecx +
cmp [ebp+hicon] 0 +
jz loc_1030107  +
mov edx [ebp+hicon] +
push edx  +
mov eax [ebp+var_44] +
mov ecx [eax+38h] +
push ecx  +
mov edx [ebp+var_44] +
mov eax [edx+3Ch] +
push eax  +
call ds:ImageList_ReplaceIcon  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_44] +
cmp dword ptr [ecx+38h] 0FFFFFFFFh +
jz loc_1030073  +
mov edx [ebp+var_44] +
mov eax [ebp+var_4] +
mov [edx+38h] eax +
cmp [ebp+var_4] 0FFFFFFFFh +
jz loc_103006E  +
mov [ebp+lParam] 0 +
xor ecx ecx +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
mov [ebp+lParam] 20h +
mov [ebp+var_20] 1 +
mov ecx [ebp+var_44] +
add ecx 4 +
call sub_1031020  +
mov [ebp+var_1C] eax +
mov edx [ebp+var_44] +
mov eax [edx+38h] +
mov [ebp+var_18] eax +
lea ecx [ebp+lParam] +
push ecx  +
mov ecx [ebp+var_44] +
add ecx 4 +
call sub_1031020  +
push eax  +
push 440h  +
mov ecx [ebp+var_44] +
add ecx 4 +
call sub_101A540  +
jmp loc_1030105  +
mov edx [ebp+hicon] +
push edx  +
mov eax [ebp+var_44] +
mov ecx [eax+38h] +
push ecx  +
mov edx [ebp+var_44] +
mov eax [edx+3Ch] +
push eax  +
call ds:ImageList_ReplaceIcon  +
mov ecx [ebp+var_44] +
mov [ecx+38h] eax +
mov edx [ebp+var_44] +
mov eax [edx+38h] +
mov [ebp+var_28] eax +
cmp [ebp+var_28] 0FFFFFFFFh +
jz loc_1030105  +
mov [ebp+var_40] 0 +
xor ecx ecx +
mov [ebp+var_3C] ecx +
mov [ebp+var_38] ecx +
mov [ebp+var_34] ecx +
mov [ebp+var_30] ecx +
mov ecx [ebp+var_44] +
add ecx 4 +
call sub_1031020  +
mov [ebp+var_3C] eax +
mov edx [ebp+var_44] +
mov eax [edx+38h] +
mov [ebp+var_40] eax +
mov byte ptr [ebp+var_38] 4 +
mov byte ptr [ebp+var_38+1] 0 +
mov [ebp+var_34] 0 +
lea ecx [ebp+var_40] +
push ecx  +
push 1  +
push 444h  +
mov ecx [ebp+var_44] +
add ecx 4 +
call sub_101A540  +
push 0  +
push 0  +
push 421h  +
mov ecx [ebp+var_44] +
add ecx 4 +
call sub_101A540  +
jmp loc_1030142  +
mov edx [ebp+var_44] +
cmp dword ptr [edx+38h] 0FFFFFFFFh +
jz loc_1030142  +
push 0  +
push 0  +
push 416h  +
mov ecx [ebp+var_44] +
add ecx 4 +
call sub_101A540  +
mov eax [ebp+var_44] +
mov ecx [eax+38h] +
push ecx  +
mov edx [ebp+var_44] +
mov eax [edx+3Ch] +
push eax  +
call ds:ImageList_Remove  +
mov ecx [ebp+var_44] +
mov dword ptr [ecx+38h] 0FFFFFFFFh +
mov ecx [ebp+var_2C] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpString] +
push eax  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_101A5D0  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036568  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_102ED40  +
push eax  +
lea ecx [ebp+var_10] +
call sub_10201A0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_10] +
call sub_1024680  +
push eax  +
mov ecx [ebp+var_18] +
add ecx 40h +
call sub_101AF20  +
mov [ebp+var_14] 1 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_101F930  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 0 +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_1031020  +
mov edx [ebp+var_4] +
cmp [edx+4] eax +
jnz loc_1030282  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
mov edx [eax] +
cmp edx [ecx+4] +
jnz loc_1030282  +
mov ecx [ebp+var_8] +
add ecx 40h +
call sub_1024680  +
push eax  +
mov eax [ebp+var_4] +
mov ecx [eax+10h] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx+0Ch] +
push eax  +
call sub_101A9A0  +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_14] +
cmp dword ptr [ecx+44h] 0 +
jz loc_10302F4  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_1031020  +
cmp [ebp+arg_0] eax +
jnz loc_10302F4  +
mov ecx [ebp+var_14] +
call sub_1030F70  +
test eax eax +
jz loc_10302E4  +
lea edx [ebp+rc] +
push edx  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101A600  +
lea eax [ebp+rc] +
push eax  +
mov ecx [ebp+var_14] +
call sub_1030BB0  +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 1 +
mov eax 1 +
jmp loc_10302F6  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+44h] 0 +
jz loc_103036E  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1031020  +
cmp [ebp+arg_0] eax +
jnz loc_103036E  +
mov ecx [ebp+var_4] +
call sub_1030F10  +
push 0FFFFFFF0h  +
mov edx [ebp+var_4] +
mov eax [edx+48h] +
push eax  +
call ds:GetWindowLongW  +
and eax 0 +
push eax  +
push 0FFFFFFF0h  +
mov ecx [ebp+var_4] +
mov edx [ecx+48h] +
push edx  +
call ds:SetWindowLongW  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
cmp off_103B010 offset off_103B010 +
jz loc_10303DF  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_10303DF  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_10303DF  +
push offset dword_1006E50  +
push 0Ah  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_1C] 1 +
jmp loc_10303E6  +
mov [ebp+var_1C] 0 +
lea edx [ebp+Rect] +
push edx  +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_100D6B0  +
lea eax [ebp+Rect] +
push eax  +
push 4  +
mov ecx [ebp+var_14] +
push ecx  +
mov edx [ebp+var_18] +
mov eax [edx+4] +
push eax  +
call ds:DrawThemeParentBackgroundEx  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov [ebp+var_3C] ecx +
mov [ebp+var_8] 0 +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp off_103B010 offset off_103B010 +
jz loc_1030496  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_1030496  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_1030496  +
push offset dword_1006E50  +
push 0Ch  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_40] 1 +
jmp loc_103049D  +
mov [ebp+var_40] 0 +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_1031020  +
cmp [ebp+arg_0] eax +
jnz loc_103095F  +
mov edx [ebp+var_4] +
mov eax [ebp+var_3C] +
mov ecx [edx] +
cmp ecx [eax+48h] +
jz loc_10307D9  +
mov edx [ebp+var_4] +
mov [ebp+var_C] edx +
mov eax [ebp+var_C] +
mov ecx [eax+0Ch] +
mov [ebp+var_44] ecx +
cmp [ebp+var_44] 1 +
jz loc_10304F6  +
cmp [ebp+var_44] 10001h +
jz loc_1030643  +
cmp [ebp+var_44] 10002h +
jz loc_103064D  +
jmp loc_1030779  +
cmp off_103B010 offset off_103B010 +
jz loc_103054B  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_103054B  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_103054B  +
mov eax [ebp+var_3C] +
mov ecx [eax+4] +
push ecx  +
push offset dword_1006E50  +
push 0Dh  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1018920  +
mov [ebp+var_48] 1 +
jmp loc_1030552  +
mov [ebp+var_48] 0 +
mov edx [ebp+var_C] +
mov eax [edx+10h] +
mov [ebp+hDC] eax +
mov [ebp+var_10] 80004005h +
call ds:IsThemeActive  +
test eax eax +
jz loc_1030589  +
mov ecx [ebp+var_C] +
add ecx 14h +
push ecx  +
push 4  +
mov edx [ebp+hDC] +
push edx  +
mov eax [ebp+var_3C] +
mov ecx [eax+4] +
push ecx  +
call ds:DrawThemeParentBackgroundEx  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jz loc_10305D4  +
mov edx [ebp+var_3C] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
push 138h  +
lea edx [ebp+var_38] +
push edx  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:SendMessageW  +
mov [ebp+hbr] eax +
mov eax [ebp+hbr] +
push eax  +
mov ecx [ebp+var_C] +
add ecx 14h +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:FillRect  +
mov eax [ebp+var_3C] +
cmp dword ptr [eax+34h] 0 +
jnz loc_1030639  +
cmp off_103B010 offset off_103B010 +
jz loc_103062B  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_103062B  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_103062B  +
push offset dword_1006E50  +
push 0Eh  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_4C] 1 +
jmp loc_1030632  +
mov [ebp+var_4C] 0 +
xor eax eax +
jmp loc_10309C0  +
mov eax 70h +
jmp loc_10309C0  +
mov eax 30h +
jmp loc_10309C0  +
cmp off_103B010 offset off_103B010 +
jz loc_10306A2  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_10306A2  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_10306A2  +
mov eax [ebp+var_3C] +
mov ecx [eax+4] +
push ecx  +
push offset dword_1006E50  +
push 0Fh  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1018920  +
mov [ebp+var_50] 1 +
jmp loc_10306A9  +
mov [ebp+var_50] 0 +
lea edx [ebp+lParam] +
push edx  +
push 0  +
push 41Dh  +
mov ecx [ebp+var_3C] +
add ecx 4 +
call sub_101A540  +
mov eax [ebp+var_28] +
sub eax [ebp+lParam] +
mov ecx [ebp+var_3C] +
sub eax [ecx+30h] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+lParam] +
mov [ebp+y] eax +
mov eax [ebp+var_24] +
sub eax [ebp+var_2C] +
mov edx [ebp+var_3C] +
sub eax [edx+30h] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_2C] +
mov [ebp+x] eax +
mov eax [ebp+var_3C] +
mov ecx [eax+34h] +
shl ecx 8 +
or ecx 1 +
push ecx  +
mov edx [ebp+y] +
push edx  +
mov eax [ebp+x] +
push eax  +
mov ecx [ebp+var_C] +
mov edx [ecx+10h] +
push edx  +
mov eax [ebp+var_3C] +
mov ecx [eax+38h] +
push ecx  +
mov edx [ebp+var_3C] +
mov eax [edx+3Ch] +
push eax  +
call ds:ImageList_Draw  +
cmp off_103B010 offset off_103B010 +
jz loc_103076B  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_103076B  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_103076B  +
push offset dword_1006E50  +
push 10h  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_54] 1 +
jmp loc_1030772  +
mov [ebp+var_54] 0 +
xor eax eax +
jmp loc_10309C0  +
cmp off_103B010 offset off_103B010 +
jz loc_10307C6  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_10307C6  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_10307C6  +
push offset dword_1006E50  +
push 11h  +
mov eax off_103B010 +
mov ecx [eax+14h] +
push ecx  +
mov edx [eax+10h] +
push edx  +
call sub_1016950  +
mov [ebp+var_58] 1 +
jmp loc_10307CD  +
mov [ebp+var_58] 0 +
xor eax eax +
jmp loc_10309C0  +
jmp loc_103095D  +
mov eax [ebp+var_4] +
mov [ebp+var_34] eax +
mov ecx [ebp+var_34] +
mov edx [ecx+0Ch] +
mov [ebp+var_5C] edx +
cmp [ebp+var_5C] 1 +
jz loc_1030800  +
cmp [ebp+var_5C] 10001h +
jz loc_1030894  +
jmp loc_1030905  +
mov eax [ebp+var_3C] +
cmp dword ptr [eax+44h] 0 +
jz loc_1030839  +
push 0FFFFFFF0h  +
mov ecx [ebp+var_3C] +
mov edx [ecx+48h] +
push edx  +
call ds:GetWindowLongW  +
or eax 40000h +
push eax  +
push 0FFFFFFF0h  +
mov eax [ebp+var_3C] +
mov ecx [eax+48h] +
push ecx  +
call ds:SetWindowLongW  +
mov eax 20h +
jmp loc_10309C0  +
jmp loc_1030894  +
cmp off_103B010 offset off_103B010 +
jz loc_1030886  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_1030886  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_1030886  +
push offset dword_1006E50  +
push 12h  +
mov eax off_103B010 +
mov ecx [eax+14h] +
push ecx  +
mov edx [eax+10h] +
push edx  +
call sub_1016950  +
mov [ebp+var_60] 1 +
jmp loc_103088D  +
mov [ebp+var_60] 0 +
xor eax eax +
jmp loc_10309C0  +
mov eax [ebp+var_3C] +
cmp dword ptr [eax+44h] 0 +
jz loc_10308A9  +
mov eax 4 +
jmp loc_10309C0  +
jmp loc_1030905  +
cmp off_103B010 offset off_103B010 +
jz loc_10308F7  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_10308F7  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_10308F7  +
push offset dword_1006E50  +
push 13h  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_64] 1 +
jmp loc_10308FE  +
mov [ebp+var_64] 0 +
xor eax eax +
jmp loc_10309C0  +
cmp off_103B010 offset off_103B010 +
jz loc_1030952  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_1030952  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_1030952  +
push offset dword_1006E50  +
push 14h  +
mov eax off_103B010 +
mov ecx [eax+14h] +
push ecx  +
mov edx [eax+10h] +
push edx  +
call sub_1016950  +
mov [ebp+var_68] 1 +
jmp loc_1030959  +
mov [ebp+var_68] 0 +
xor eax eax +
jmp loc_10309C0  +
jmp loc_1030968  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 0 +
cmp off_103B010 offset off_103B010 +
jz loc_10309B6  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_10309B6  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_10309B6  +
push offset dword_1006E50  +
push 15h  +
mov edx off_103B010 +
mov eax [edx+14h] +
push eax  +
mov ecx [edx+10h] +
push ecx  +
call sub_1016950  +
mov [ebp+var_6C] 1 +
jmp loc_10309BD  +
mov [ebp+var_6C] 0 +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
cmp [ebp+hWnd] 0 +
jnz loc_1030A1E  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+50h] 0 +
jz loc_1030A12  +
mov ecx [ebp+var_8] +
mov edx [ecx+50h] +
push edx  +
call ds:DwmUnregisterThumbnail  +
mov eax [ebp+var_8] +
mov dword ptr [eax+50h] 0 +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+44h] 0 +
mov edx [ebp+var_8] +
mov dword ptr [edx+44h] 0 +
jmp loc_1030A66  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+48h] 0 +
jz loc_1030A38  +
mov ecx [ebp+var_8] +
mov edx [ecx+48h] +
push edx  +
call ds:IsWindow  +
test eax eax +
jnz loc_1030A43  +
mov [ebp+var_4] 80004005h +
jmp loc_1030A66  +
jmp loc_1030A66  +
mov eax [ebp+hWnd] +
push eax  +
mov ecx [ebp+var_8] +
call sub_1030A80  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1030A5C  +
jmp loc_1030A66  +
jmp loc_1030A66  +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+44h] 1 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov [ebp+var_4C] ecx +
mov [ebp+var_C] 0 +
mov eax [ebp+var_4C] +
mov ecx [eax+48h] +
push ecx  +
call ds:GetDC  +
mov [ebp+hDC] eax +
lea ecx [ebp+var_44] +
call sub_1020530  +
mov edx [ebp+hWnd] +
push edx  +
call ds:IsWindow  +
test eax eax +
jnz loc_1030AC9  +
mov [ebp+var_C] 80070057h +
jmp loc_1030B94  +
jmp loc_1030B94  +
mov eax [ebp+var_4C] +
mov ecx [ebp+hWnd] +
mov [eax+4Ch] ecx +
mov edx [ebp+hDC] +
push edx  +
lea ecx [ebp+var_44] +
call sub_101E530  +
push 78h  +
lea ecx [ebp+var_44] +
call sub_101CA00  +
mov ecx [ebp+var_4C] +
mov [ecx+54h] eax +
push 78h  +
lea ecx [ebp+var_44] +
call sub_101CA00  +
mov edx [ebp+var_4C] +
mov [edx+58h] eax +
push 3  +
lea ecx [ebp+var_44] +
call sub_101CA00  +
mov ecx [ebp+var_4C] +
mov [ecx+5Ch] eax +
push 3  +
lea ecx [ebp+var_44] +
call sub_101CA00  +
mov edx [ebp+var_4C] +
mov [edx+60h] eax +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_4C] +
mov edx [ecx+48h] +
push edx  +
call ds:ReleaseDC  +
mov eax [ebp+var_4C] +
add eax 50h +
push eax  +
mov ecx [ebp+var_4C] +
mov edx [ecx+4Ch] +
push edx  +
mov eax [ebp+var_4C] +
mov ecx [eax+48h] +
push ecx  +
call ds:DwmRegisterThumbnail  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jge loc_1030B57  +
jmp loc_1030B94  +
jmp loc_1030B94  +
push 2Dh  +
push 0  +
lea edx [ebp+var_3C] +
push edx  +
call memset  +
add esp 0Ch +
mov [ebp+var_3C] 1Ch +
mov [ebp+var_18] 0FFh +
mov [ebp+var_13] 1 +
mov [ebp+var_17] 0 +
lea eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+var_4C] +
mov edx [ecx+50h] +
push edx  +
call ds:DwmUpdateThumbnailProperties  +
mov [ebp+var_C] eax +
mov eax [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2DCh +
mov [ebp+var_2BC] ecx +
mov [ebp+var_58] 0 +
mov [ebp+var_54] 0 +
mov [ebp+var_50] 0 +
cmp [ebp+lprc] 0 +
jnz loc_1030BED  +
mov [ebp+var_50] 80070057h +
jmp loc_1030EFC  +
jmp loc_1030EFC  +
mov eax [ebp+var_2BC] +
cmp dword ptr [eax+50h] 0 +
jnz loc_1030C0A  +
mov [ebp+var_50] 80004005h +
jmp loc_1030EFC  +
jmp loc_1030EFC  +
lea ecx [ebp+var_58] +
push ecx  +
mov edx [ebp+var_2BC] +
mov eax [edx+50h] +
push eax  +
call ds:DwmQueryThumbnailSourceSize  +
mov [ebp+var_50] eax +
cmp [ebp+var_50] 0 +
jge loc_1030C31  +
jmp loc_1030EFC  +
jmp loc_1030EFC  +
cmp [ebp+var_58] 0 +
jle loc_1030C3D  +
cmp [ebp+var_54] 0 +
jg loc_1030C47  +
jmp loc_1030EFC  +
jmp loc_1030EFC  +
lea ecx [ebp+Rect] +
push ecx  +
call ds:SetRectEmpty  +
push 0FFFFFFECh  +
mov edx [ebp+var_2BC] +
mov eax [edx+48h] +
push eax  +
call sub_1009020  +
push eax  +
push 0  +
push 0FFFFFFF0h  +
mov ecx [ebp+var_2BC] +
mov edx [ecx+48h] +
push edx  +
call sub_1009020  +
or eax 40000h +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call ds:AdjustWindowRectEx  +
mov ecx [ebp+var_58] +
cmp ecx [ebp+var_54] +
jl loc_1030C9F  +
mov edx [ebp+var_2BC] +
mov eax [edx+54h] +
mov [ebp+var_2C0] eax +
jmp loc_1030CBF  +
mov ecx [ebp+var_2BC] +
fild  dword ptr [ecx+58h] +
fimul  [ebp+var_58] +
fidiv  [ebp+var_54] +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_2C0] eax +
mov edx [ebp+var_2C0] +
mov [ebp+xRight] edx +
mov eax [ebp+var_54] +
cmp eax [ebp+var_58] +
jl loc_1030CE1  +
mov ecx [ebp+var_2BC] +
mov edx [ecx+58h] +
mov [ebp+var_2C4] edx +
jmp loc_1030D01  +
mov eax [ebp+var_2BC] +
fild  dword ptr [eax+54h] +
fimul  [ebp+var_54] +
fidiv  [ebp+var_58] +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_2C4] eax +
mov ecx [ebp+var_2C4] +
mov [ebp+yBottom] ecx +
mov edx [ebp+Rect.right] +
sub edx [ebp+Rect.left] +
add edx [ebp+xRight] +
mov [ebp+var_4] edx +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
add eax [ebp+yBottom] +
mov [ebp+cy] eax +
mov ecx [ebp+lprc] +
mov eax [ecx] +
mov edx [ebp+lprc] +
add eax [edx+8] +
sub eax [ebp+var_4] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+X] eax +
mov eax [ebp+lprc] +
mov ecx [ebp+var_2BC] +
mov edx [eax+4] +
sub edx [ecx+60h] +
sub edx [ebp+cy] +
mov [ebp+Y] edx +
push 2  +
mov eax [ebp+lprc] +
push eax  +
call ds:MonitorFromRect  +
mov [ebp+hMonitor] eax +
mov [ebp+rcSrc.left] 28h +
lea ecx [ebp+rcSrc] +
push ecx  +
mov edx [ebp+hMonitor] +
push edx  +
call ds:GetMonitorInfoW  +
lea eax [ebp+rcSrc.top] +
push eax  +
lea ecx [ebp+rcDst] +
push ecx  +
call ds:CopyRect  +
mov edx [ebp+rcDst.right] +
sub edx [ebp+var_4] +
cmp [ebp+X] edx +
jge loc_1030D9E  +
mov eax [ebp+X] +
mov [ebp+var_2C8] eax +
jmp loc_1030DAA  +
mov ecx [ebp+rcDst.right] +
sub ecx [ebp+var_4] +
mov [ebp+var_2C8] ecx +
mov edx [ebp+var_2C8] +
cmp edx [ebp+rcDst.left] +
jle loc_1030DE5  +
mov eax [ebp+rcDst.right] +
sub eax [ebp+var_4] +
cmp [ebp+X] eax +
jge loc_1030DCB  +
mov ecx [ebp+X] +
mov [ebp+var_2CC] ecx +
jmp loc_1030DD7  +
mov edx [ebp+rcDst.right] +
sub edx [ebp+var_4] +
mov [ebp+var_2CC] edx +
mov eax [ebp+var_2CC] +
mov [ebp+var_2D0] eax +
jmp loc_1030DEE  +
mov ecx [ebp+rcDst.left] +
mov [ebp+var_2D0] ecx +
mov edx [ebp+var_2D0] +
mov [ebp+X] edx +
mov eax [ebp+rcDst.bottom] +
sub eax [ebp+cy] +
cmp [ebp+Y] eax +
jge loc_1030E0D  +
mov ecx [ebp+Y] +
mov [ebp+var_2D4] ecx +
jmp loc_1030E19  +
mov edx [ebp+rcDst.bottom] +
sub edx [ebp+cy] +
mov [ebp+var_2D4] edx +
mov eax [ebp+var_2D4] +
cmp eax [ebp+rcDst.top] +
jle loc_1030E54  +
mov ecx [ebp+rcDst.bottom] +
sub ecx [ebp+cy] +
cmp [ebp+Y] ecx +
jge loc_1030E3A  +
mov edx [ebp+Y] +
mov [ebp+var_2D8] edx +
jmp loc_1030E46  +
mov eax [ebp+rcDst.bottom] +
sub eax [ebp+cy] +
mov [ebp+var_2D8] eax +
mov ecx [ebp+var_2D8] +
mov [ebp+var_2DC] ecx +
jmp loc_1030E5D  +
mov edx [ebp+rcDst.top] +
mov [ebp+var_2DC] edx +
mov eax [ebp+var_2DC] +
mov [ebp+Y] eax +
push 210h  +
mov ecx [ebp+cy] +
push ecx  +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+Y] +
push eax  +
mov ecx [ebp+X] +
push ecx  +
push 0  +
mov edx [ebp+var_2BC] +
mov eax [edx+48h] +
push eax  +
call ds:SetWindowPos  +
push 2Dh  +
push 0  +
lea ecx [ebp+var_88] +
push ecx  +
call memset  +
add esp 0Ch +
mov edx [ebp+yBottom] +
push edx  +
mov eax [ebp+xRight] +
push eax  +
push 0  +
push 0  +
lea ecx [ebp+rc] +
push ecx  +
call ds:SetRect  +
mov [ebp+var_88] 9 +
mov edx [ebp+rc.left] +
mov [ebp+var_84] edx +
mov eax [ebp+rc.top] +
mov [ebp+var_80] eax +
mov ecx [ebp+rc.right] +
mov [ebp+var_7C] ecx +
mov edx [ebp+rc.bottom] +
mov [ebp+var_78] edx +
mov [ebp+var_63] 1 +
lea eax [ebp+var_88] +
push eax  +
mov ecx [ebp+var_2BC] +
mov edx [ecx+50h] +
push edx  +
call ds:DwmUpdateThumbnailProperties  +
mov [ebp+var_50] eax +
mov eax [ebp+var_50] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov [ebp+var_38] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+var_38] +
cmp dword ptr [eax+50h] 0 +
jz loc_1030F4A  +
mov [ebp+var_34] 8 +
mov [ebp+var_F] 0 +
lea ecx [ebp+var_34] +
push ecx  +
mov edx [ebp+var_38] +
mov eax [edx+50h] +
push eax  +
call ds:DwmUpdateThumbnailProperties  +
push 0  +
mov ecx [ebp+var_38] +
mov edx [ecx+48h] +
push edx  +
call ds:ShowWindow  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 1 +
mov eax [ebp+var_14] +
mov ecx [eax+4Ch] +
mov [ebp+hWnd] ecx +
push 0  +
lea edx [ebp+hWnd] +
push edx  +
push 41Ch  +
lea eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_100E190  +
mov ecx [eax] +
push ecx  +
call ds:SendMessageW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 1 +
jnz loc_1031006  +
mov edx [ebp+var_14] +
cmp dword ptr [edx+50h] 0 +
jz loc_1030FE1  +
mov eax [ebp+var_14] +
mov ecx [eax+50h] +
push ecx  +
call ds:DwmUnregisterThumbnail  +
mov edx [ebp+var_14] +
mov dword ptr [edx+50h] 0 +
mov eax [ebp+var_14] +
mov dword ptr [eax+44h] 0 +
mov ecx [ebp+hWnd] +
push ecx  +
mov ecx [ebp+var_14] +
call sub_1030A80  +
test eax eax +
jl loc_1030FFD  +
mov edx [ebp+var_14] +
mov dword ptr [edx+44h] 1 +
jmp loc_1031004  +
mov [ebp+var_4] 0 +
jmp loc_1031013  +
cmp [ebp+var_8] 0 +
jz loc_1031013  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call ds:GetDlgCtrlID  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 80D0D0D0h +
push offset aButton  +
push 0  +
call ds:OpenThemeData  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_10310CF  +
lea ecx [ebp+var_8] +
push ecx  +
push 0EEEh  +
push 1  +
push 4  +
mov edx [ebp+var_4] +
push edx  +
call ds:GetThemeColor  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_10310C5  +
cmp [ebp+arg_4] 0 +
jz loc_10310BD  +
mov eax [ebp+var_8] +
and eax 0FF0000h +
shr eax 10h +
or eax 0FF000000h +
mov ecx [ebp+var_8] +
and ecx 0FF00h +
or eax ecx +
mov edx [ebp+var_8] +
and edx 0FFh +
shl edx 10h +
or eax edx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
jmp loc_10310C5  +
mov edx [ebp+arg_0] +
mov eax [ebp+var_8] +
mov [edx] eax +
mov ecx [ebp+var_4] +
push ecx  +
call ds:CloseThemeData  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0FF339933h +
mov ecx [ebp+arg_4] +
mov dword ptr [ecx] 0FF33CC33h +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_1024C10  +
mov eax [ebp+var_8] +
mov dword ptr [eax] offset off_1006E80 +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+24h] 0 +
mov edx [ebp+var_8] +
mov dword ptr [edx+28h] 0 +
mov eax [ebp+var_8] +
mov dword ptr [eax+2Ch] 0 +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+30h] 0 +
mov edx [ebp+var_8] +
mov dword ptr [edx+34h] 0 +
mov eax [ebp+var_8] +
mov dword ptr [eax+68h] 0 +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+6Ch] 0 +
mov edx [ebp+var_8] +
mov dword ptr [edx+70h] 0FF00h +
mov eax [ebp+var_8] +
mov dword ptr [eax+74h] 80D0D0D0h +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+7Ch] 0 +
mov edx [ebp+var_8] +
mov dword ptr [edx+80h] 0 +
mov eax [ebp+var_8] +
mov dword ptr [eax+88h] 0 +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+8Ch] 0 +
mov edx [ebp+var_8] +
fld1   +
fstp  dword ptr [edx+0ACh] +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_100E090  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
and eax 2 +
xor ecx ecx +
cmp eax 2 +
setz cl  +
mov edx [ebp+var_8] +
mov [edx+7Ch] ecx +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-8] ecx +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+1Ch] +
mov [ebp-0Ch] eax +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_1031213  +
jmp loc_103168A  +
cmp dword ptr [ebp+0Ch] 432h +
jnz loc_1031250  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-4] +
push ecx  +
mov edx [ebp+14h] +
push edx  +
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp-8] +
call sub_1031A50  +
mov edx [ebp+18h] +
mov [edx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1031250  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 433h +
jnz loc_103128D  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov eax [ebp+0Ch] +
push eax  +
mov ecx [ebp-8] +
call sub_1031AA0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_103128D  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 434h +
jnz loc_10312CA  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1031B10  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10312CA  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 435h +
jnz loc_1031307  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1031BA0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1031307  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 437h +
jnz loc_1031344  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1031D40  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1031344  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 438h +
jnz loc_1031381  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1031EC0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1031381  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 406h +
jnz loc_10313BE  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1031C00  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10313BE  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 14h +
jnz loc_10313F8  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1031C60  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10313F8  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_1031432  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10330C0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1031432  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 318h +
jnz loc_103146F  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10331A0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_103146F  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 2 +
jnz loc_10314A9  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10333D0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10314A9  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 100h +
jnz loc_10314E6  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10334A0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10314E6  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 20Ah +
jnz loc_1031523  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1033510  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1031523  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 200h +
jnz loc_1031560  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1033570  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1031560  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 2A3h +
jnz loc_103159D  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1033640  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_103159D  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 201h +
jnz loc_10315DA  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1033510  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_10315DA  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 31Ah +
jnz loc_1031614  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_10336A0  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1031614  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 5 +
jnz loc_103164B  +
mov dword ptr [ebp-4] 1 +
lea edx [ebp-4] +
push edx  +
mov eax [ebp+14h] +
push eax  +
mov ecx [ebp+10h] +
push ecx  +
mov edx [ebp+0Ch] +
push edx  +
mov ecx [ebp-8] +
call sub_1033700  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_103164B  +
mov eax 1 +
jmp loc_103168C  +
cmp dword ptr [ebp+0Ch] 4Eh +
jnz loc_103168A  +
mov edx [ebp+14h] +
cmp dword ptr [edx+8] 0FFFFFDEEh +
jnz loc_103168A  +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-4] +
push eax  +
mov ecx [ebp+14h] +
push ecx  +
mov edx [ebp+10h] +
push edx  +
mov ecx [ebp-8] +
call sub_1033750  +
mov ecx [ebp+18h] +
mov [ecx] eax +
cmp dword ptr [ebp-4] 0 +
jz loc_103168A  +
mov eax 1 +
jmp loc_103168C  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1015920  +
mov eax [ebp+8] +
and eax 1 +
jz loc_10316C5  +
mov ecx [ebp-4] +
push ecx  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_18] ecx +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_100FBB0  +
mov [ebp+hDC] eax +
lea ecx [ebp+var_10] +
call sub_1020530  +
mov eax [ebp+hDC] +
push eax  +
lea ecx [ebp+var_10] +
call sub_101E530  +
mov ecx [ebp+var_18] +
fld  ds:flt_1006EB0 +
fstp  dword ptr [ecx+0B0h] +
push ecx  +
fld  ds:flt_1006EAC +
fstp  [esp+1Ch+var_1C] +
lea ecx [ebp+var_10] +
call sub_1031890  +
mov edx [ebp+var_18] +
fstp  dword ptr [edx+0B4h] +
push ecx  +
fld1   +
fstp  [esp+1Ch+var_1C] +
lea ecx [ebp+var_10] +
call sub_1031890  +
mov eax [ebp+var_18] +
fstp  dword ptr [eax+0C0h] +
push ecx  +
fld  ds:flt_1006EA8 +
fstp  [esp+1Ch+var_1C] +
lea ecx [ebp+var_10] +
call sub_1031890  +
mov ecx [ebp+var_18] +
fstp  dword ptr [ecx+0B8h] +
push ecx  +
fld  ds:flt_1006EA4 +
fstp  [esp+1Ch+var_1C] +
lea ecx [ebp+var_10] +
call sub_1031890  +
mov edx [ebp+var_18] +
fstp  dword ptr [edx+0BCh] +
push ecx  +
fld  ds:flt_1006EA8 +
fstp  [esp+1Ch+var_1C] +
lea ecx [ebp+var_10] +
call sub_1031890  +
mov eax [ebp+var_18] +
fstp  dword ptr [eax+0C4h] +
mov ecx [ebp+hDC] +
push ecx  +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_100FBD0  +
push offset aTrackbar  +
mov edx [ebp+var_18] +
mov eax [edx+4] +
push eax  +
call ds:OpenThemeData  +
mov ecx [ebp+var_18] +
mov [ecx+2Ch] eax +
mov ecx [ebp+var_18] +
add ecx 4 +
call sub_100E090  +
mov [ebp+var_8] eax +
mov edx [ebp+var_8] +
and edx 2 +
xor eax eax +
cmp edx 2 +
setz al  +
mov ecx [ebp+var_18] +
mov [ecx+7Ch] eax +
mov edx [ebp+var_8] +
and edx 8 +
jz loc_103180B  +
mov eax [ebp+var_18] +
mov ecx [eax+7Ch] +
neg ecx  +
sbb ecx ecx +
and ecx 3 +
add ecx 3 +
mov edx [ebp+var_18] +
mov [edx+80h] ecx +
jmp loc_103184A  +
mov eax [ebp+var_8] +
and eax 4 +
jz loc_103182E  +
mov ecx [ebp+var_18] +
xor edx edx +
cmp dword ptr [ecx+7Ch] 0 +
setnz dl  +
lea edx [edx+edx+5] +
mov eax [ebp+var_18] +
mov [eax+80h] edx +
jmp loc_103184A  +
mov ecx [ebp+var_18] +
xor edx edx +
cmp dword ptr [ecx+7Ch] 0 +
setnz dl  +
lea edx ds:4[edx*4] +
mov eax [ebp+var_18] +
mov [eax+80h] edx +
mov ecx [ebp+var_18] +
call sub_10318C0  +
mov ecx [ebp+var_18] +
mov dword ptr [ecx+28h] 1 +
mov edx [ebp+var_18] +
mov dword ptr [edx+24h] 1 +
push 1  +
mov eax [ebp+var_18] +
add eax 74h +
push eax  +
call sub_1031040  +
push 0  +
mov ecx [ebp+var_18] +
add ecx 78h +
push ecx  +
call sub_1031040  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_4] ecx +
fld  [ebp+arg_0] +
mov eax [ebp+var_4] +
fmul  dword ptr [eax+4] +
fdiv  ds:dbl_1002248 +
fstp  [ebp+var_8] +
fld  [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_14] ecx +
mov eax [ebp+var_14] +
add eax 38h +
push eax  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_100D6B0  +
lea ecx [ebp+lParam] +
push ecx  +
push 0  +
push 41Ah  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101A540  +
mov edx [ebp+var_14] +
cmp dword ptr [edx+7Ch] 0 +
jz loc_103198C  +
mov eax [ebp+var_14] +
fld  dword ptr [eax+0C4h] +
call _ftol2_sse  +
mov ecx [ebp-0Ch] +
sub ecx eax +
mov edx [ebp+var_14] +
mov [edx+48h] ecx +
mov eax [ebp+var_14] +
fld  dword ptr [eax+0C4h] +
call _ftol2_sse  +
mov ecx [ebp-4] +
sub ecx eax +
mov edx [ebp+var_14] +
mov [edx+50h] ecx +
mov eax [ebp+var_14] +
fld  dword ptr [eax+0B4h] +
call _ftol2_sse  +
add eax [ebp+lParam] +
mov ecx [ebp+var_14] +
mov [ecx+4Ch] eax +
mov edx [ebp+var_14] +
fld  dword ptr [edx+0B4h] +
call _ftol2_sse  +
mov ecx [ebp-8] +
sub ecx eax +
mov edx [ebp+var_14] +
mov [edx+54h] ecx +
mov eax [ebp+var_14] +
cmp dword ptr [eax+6Ch] 0 +
jz loc_1031987  +
mov ecx [ebp+var_14] +
fld  dword ptr [ecx+0B8h] +
call _ftol2_sse  +
mov edx [ebp+var_14] +
mov ecx [edx+48h] +
sub ecx eax +
mov edx [ebp+var_14] +
mov [edx+48h] ecx +
jmp loc_1031A2A  +
lea eax [ebp+lParam] +
push eax  +
mov ecx [ebp+var_14] +
add ecx 48h +
push ecx  +
call ds:CopyRect  +
mov edx [ebp+var_14] +
fld  dword ptr [edx+0C4h] +
call _ftol2_sse  +
mov ecx [ebp+var_14] +
add eax [ecx+4Ch] +
mov edx [ebp+var_14] +
mov [edx+4Ch] eax +
mov eax [ebp+var_14] +
fld  dword ptr [eax+0C4h] +
call _ftol2_sse  +
mov ecx [ebp+var_14] +
add eax [ecx+54h] +
mov edx [ebp+var_14] +
mov [edx+54h] eax +
mov eax [ebp+var_14] +
fld  dword ptr [eax+0B4h] +
call _ftol2_sse  +
mov ecx [ebp+var_14] +
add eax [ecx+48h] +
mov edx [ebp+var_14] +
mov [edx+48h] eax +
mov eax [ebp+var_14] +
fld  dword ptr [eax+0B4h] +
call _ftol2_sse  +
mov ecx [ebp+var_14] +
mov edx [ecx+50h] +
sub edx eax +
mov eax [ebp+var_14] +
mov [eax+50h] edx +
mov ecx [ebp+var_14] +
cmp dword ptr [ecx+6Ch] 0 +
jz loc_1031A2A  +
mov edx [ebp+var_14] +
fld  dword ptr [edx+0B8h] +
call _ftol2_sse  +
mov ecx [ebp+var_14] +
add eax [ecx+54h] +
mov edx [ebp+var_14] +
mov [edx+54h] eax +
mov eax [ebp+var_14] +
add eax 58h +
push eax  +
push 0  +
push 419h  +
mov ecx [ebp+var_14] +
add ecx 4 +
call sub_101A540  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_8] +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] ecx +
mov edx [ebp+var_C] +
mov eax [ebp+var_8] +
mov [edx+68h] eax +
cmp [ebp+var_4] 0 +
jz loc_1031A85  +
push 0  +
push 0  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_1010530  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
mov ecx [eax+6Ch] +
mov [ebp+var_8] ecx +
mov edx [ebp+arg_4] +
mov [ebp+var_4] edx +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_8] +
mov [eax+6Ch] ecx +
mov edx [ebp+var_C] +
mov eax [edx+6Ch] +
cmp eax [ebp+var_8] +
jz loc_1031AEB  +
mov ecx [ebp+var_C] +
call sub_10318C0  +
cmp [ebp+var_4] 0 +
jz loc_1031AEB  +
push 0  +
push 0  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_1010530  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+34h] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_10] +
mov eax [edx+30h] +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] ecx +
mov edx [ebp+arg_8] +
shr edx 10h +
and edx 0FFFFh +
movzx eax dx +
mov ecx [ebp+var_10] +
mov [ecx+30h] eax +
mov edx [ebp+arg_8] +
and edx 0FFFFh +
movzx eax dx +
mov ecx [ebp+var_10] +
mov [ecx+34h] eax +
cmp [ebp+var_4] 0 +
jz loc_1031B85  +
mov edx [ebp+var_10] +
mov eax [edx+30h] +
cmp eax [ebp+var_8] +
jnz loc_1031B76  +
mov ecx [ebp+var_10] +
mov edx [ecx+34h] +
cmp edx [ebp+var_C] +
jz loc_1031B85  +
push 0  +
push 0  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1010530  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
mov ecx [eax+70h] +
mov [ebp+var_8] ecx +
mov edx [ebp+arg_4] +
mov [ebp+var_4] edx +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_8] +
mov [eax+70h] ecx +
cmp [ebp+var_4] 0 +
jz loc_1031BE8  +
mov edx [ebp+var_C] +
mov eax [edx+70h] +
cmp eax [ebp+var_8] +
jz loc_1031BE8  +
push 0  +
mov ecx [ebp+var_C] +
add ecx 48h +
push ecx  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_1010530  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lParam] +
and eax 0FFFFh +
movsx ecx ax +
mov edx [ebp+var_4] +
mov [edx+0A4h] ecx +
mov eax [ebp+lParam] +
shr eax 10h +
and eax 0FFFFh +
movsx ecx ax +
mov edx [ebp+var_4] +
mov [edx+0A8h] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov ecx [ebp+var_4] +
call sub_1011530  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_C] +
mov edx [ebp+var_C] +
mov eax [ecx+0A8h] +
cmp eax [edx+0A4h] +
jnz loc_1031CBB  +
mov eax [ebp+var_4] +
jmp loc_1031D34  +
mov ecx [ebp+var_C] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_1031CCF  +
mov edx [ebp+arg_C] +
sub edx [ebp+arg_4] +
mov [ebp+var_8] edx +
jmp loc_1031CD8  +
mov eax [ebp+arg_8] +
sub eax [ebp+arg_0] +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_1031CE5  +
mov [ebp+var_8] 1 +
mov ecx [ebp+var_C] +
mov edx [ebp+var_C] +
mov eax [ecx+0A8h] +
sub eax [edx+0A4h] +
push eax  +
mov ecx [ebp+var_C] +
fld  dword ptr [ecx+0BCh] +
call _ftol2_sse  +
mov edx [ebp+var_8] +
sub edx eax +
push edx  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_10] +
sub ecx [eax+0A4h] +
push ecx  +
call ds:MulDiv  +
mov esi eax +
add esi [ebp+var_4] +
mov edx [ebp+var_C] +
fld  dword ptr [edx+0C0h] +
call _ftol2_sse  +
add eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_8] +
mov [ebp+var_C] eax +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+8Ch] 1 +
mov edx [ebp+var_10] +
mov eax [ebp+var_C] +
mov [edx+90h] eax +
mov ecx [ebp+var_10] +
mov edx [ebp+var_10] +
mov eax [ecx+60h] +
sub eax [edx+58h] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
mov edx [ebp+var_10] +
mov eax [ecx+64h] +
sub eax [edx+5Ch] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_1031E0E  +
mov edx [ebp+var_C] +
push edx  +
mov eax [ebp+var_10] +
add eax 48h +
sub esp 10h +
mov ecx esp +
mov edx [eax] +
mov [ecx] edx +
mov edx [eax+4] +
mov [ecx+4] edx +
mov edx [eax+8] +
mov [ecx+8] edx +
mov eax [eax+0Ch] +
mov [ecx+0Ch] eax +
mov ecx [ebp+var_10] +
call sub_1031C90  +
mov ecx eax +
mov eax [ebp+var_8] +
cdq   +
sub eax edx +
sar eax 1 +
sub ecx eax +
mov edx [ebp+var_10] +
mov [edx+98h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+98h] +
add ecx [ebp+var_8] +
mov edx [ebp+var_10] +
mov [edx+0A0h] ecx +
mov eax [ebp+var_10] +
mov ecx [ebp+var_10] +
mov edx [ecx+58h] +
mov [eax+94h] edx +
mov eax [ebp+var_10] +
mov ecx [eax+94h] +
add ecx [ebp+var_4] +
mov edx [ebp+var_10] +
mov [edx+9Ch] ecx +
jmp loc_1031E89  +
mov eax [ebp+var_C] +
push eax  +
mov ecx [ebp+var_10] +
add ecx 48h +
sub esp 10h +
mov edx esp +
mov eax [ecx] +
mov [edx] eax +
mov eax [ecx+4] +
mov [edx+4] eax +
mov eax [ecx+8] +
mov [edx+8] eax +
mov ecx [ecx+0Ch] +
mov [edx+0Ch] ecx +
mov ecx [ebp+var_10] +
call sub_1031C90  +
mov ecx eax +
mov eax [ebp+var_4] +
cdq   +
sub eax edx +
sar eax 1 +
sub ecx eax +
mov edx [ebp+var_10] +
mov [edx+94h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax+94h] +
add ecx [ebp+var_4] +
mov edx [ebp+var_10] +
mov [edx+9Ch] ecx +
mov eax [ebp+var_10] +
mov ecx [ebp+var_10] +
mov edx [ecx+5Ch] +
mov [eax+98h] edx +
mov eax [ebp+var_10] +
mov ecx [eax+0A0h] +
add ecx [ebp+var_8] +
mov edx [ebp+var_10] +
mov [edx+0A0h] ecx +
push 0  +
mov eax [ebp+var_10] +
add eax 94h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1010530  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax+8Ch] 0 +
push 0  +
mov ecx [ebp+var_4] +
add ecx 94h +
push ecx  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1010530  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_1C] 0 +
mov [ebp+var_4] 0 +
xor eax eax +
mov [ebp-3] ax +
mov [ebp+var_1] al +
mov [ebp+var_18] 10h +
xor ecx ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_4] 0 +
fld  [ebp+arg_C] +
fmul  ds:dbl_1006EB8 +
call _ftol2_sse  +
mov [ebp-2] al +
lea edx [ebp+var_4] +
mov [ebp+var_C] edx +
lea eax [ebp+hDC] +
push eax  +
lea ecx [ebp+var_18] +
push ecx  +
push 2  +
mov edx [ebp+lprc] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call ds:BeginBufferedPaint  +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] 0 +
jz loc_1031FA9  +
mov ecx [ebp+hbr] +
push ecx  +
mov edx [ebp+lprc] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:FillRect  +
push 0FFh  +
push 0  +
mov ecx [ebp+var_1C] +
push ecx  +
call ds:BufferedPaintSetAlpha  +
push 1  +
mov edx [ebp+var_1C] +
push edx  +
call ds:EndBufferedPaint  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov [ebp+var_20] ecx +
mov ecx [ebp+var_20] +
call sub_1032060  +
test eax eax +
jz loc_103204E  +
push 0  +
push 0  +
push 129h  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_101A540  +
mov [ebp+var_18] ax +
movzx eax [ebp+var_18] +
and eax 1 +
neg eax  +
sbb eax eax +
neg eax  +
mov [ebp+var_14] eax +
jnz loc_103204E  +
push 14h  +
call ds:GetSysColor  +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:SetBkColor  +
lea edx [ebp+Rect] +
push edx  +
mov ecx [ebp+var_20] +
add ecx 4 +
call sub_100D6B0  +
push 14h  +
call ds:GetSysColorBrush  +
mov [ebp+hbr] eax +
mov eax [ebp+hbr] +
push eax  +
lea ecx [ebp+Rect] +
push ecx  +
mov edx [ebp+hDC] +
push edx  +
call ds:FrameRect  +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:DrawFocusRect  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
call ds:GetFocus  +
mov ecx [ebp+var_4] +
xor edx edx +
cmp eax [ecx+4] +
setz dl  +
mov eax edx +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov [ebp+var_58] ecx +
mov eax [ebp+var_58] +
mov ecx [eax+4] +
mov [ebp+lParam] ecx +
push 0FFFFFFF4h  +
mov ecx [ebp+var_58] +
add ecx 4 +
call sub_10337D0  +
mov [ebp+wParam] eax +
mov [ebp+var_2C] 0FFFFFFF4h +
mov [ebp+var_28] 4 +
mov edx [ebp+hDC] +
mov [ebp+var_24] edx +
mov eax [ebp+var_58] +
add eax 38h +
push eax  +
lea ecx [ebp+rcDst] +
push ecx  +
call ds:CopyRect  +
mov [ebp+var_10] 0 +
mov [ebp+var_C] 20h +
mov [ebp+var_8] 0 +
lea edx [ebp+lParam] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
push 4Eh  +
lea ecx [ebp+var_50] +
push ecx  +
mov ecx [ebp+var_58] +
add ecx 4 +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
push eax  +
call sub_101A5A0  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 4 +
jz loc_10321FC  +
mov ecx [ebp+var_58] +
add ecx 4 +
call sub_101A520  +
and eax 20h +
jz loc_10321B7  +
cmp off_103B010 offset off_103B010 +
jz loc_1032182  +
mov edx off_103B010 +
mov eax [edx+1Ch] +
and eax 20000000h +
jz loc_1032182  +
mov ecx off_103B010 +
movzx edx byte ptr [ecx+19h] +
cmp edx 4 +
jl loc_1032182  +
push offset dword_1006E70  +
push 0Ah  +
mov eax off_103B010 +
mov ecx [eax+14h] +
push ecx  +
mov edx [eax+10h] +
push edx  +
call sub_1016950  +
mov [ebp+var_5C] 1 +
jmp loc_1032189  +
mov [ebp+var_5C] 0 +
push 5  +
call ds:GetSysColorBrush  +
mov [ebp+hbr] eax +
lea eax [ebp+Rect] +
push eax  +
mov ecx [ebp+var_58] +
add ecx 4 +
call sub_100D6B0  +
mov ecx [ebp+hbr] +
push ecx  +
lea edx [ebp+Rect] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
call ds:FillRect  +
jmp loc_10321FC  +
mov ecx [ebp+var_58] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
push 138h  +
lea ecx [ebp+var_54] +
push ecx  +
mov ecx [ebp+var_58] +
add ecx 4 +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:SendMessageW  +
mov [ebp+var_4C] eax +
mov edx [ebp+var_4C] +
push edx  +
mov eax [ebp+var_58] +
add eax 38h +
push eax  +
mov ecx [ebp+hDC] +
push ecx  +
call ds:FillRect  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov [ebp+var_24] ecx +
mov eax [ebp+var_24] +
fld  dword ptr [eax+0ACh] +
fcomp  ds:dbl_10026B8 +
fnstsw  ax +
test ah 5 +
jp loc_1032315  +
mov ecx [ebp+var_24] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
push 138h  +
lea ecx [ebp+var_20] +
push ecx  +
mov ecx [ebp+var_24] +
add ecx 4 +
call sub_100E190  +
mov ecx eax +
call sub_1024680  +
push eax  +
call ds:SendMessageW  +
mov [ebp+hbr] eax +
mov edx [ebp+var_24] +
add edx 38h +
push edx  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
mov ecx [ebp+var_24] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_10322BE  +
mov edx [ebp+var_24] +
mov eax [ebp+var_24] +
mov ecx [edx+54h] +
sub ecx [eax+4Ch] +
sub ecx 2 +
mov [ebp+var_28] ecx +
fild  [ebp+var_28] +
mov edx [ebp+var_24] +
fmul  dword ptr [edx+0ACh] +
fadd  ds:dbl_1002368 +
fstp  [ebp+var_18] +
fld  [ebp+var_18] +
call _ftol2_sse  +
mov ecx [ebp+var_24] +
mov edx [ecx+54h] +
sub edx eax +
sub edx 1 +
mov [ebp+rc.bottom] edx +
jmp loc_10322FA  +
mov eax [ebp+var_24] +
mov ecx [ebp+var_24] +
mov edx [eax+54h] +
sub edx [ecx+4Ch] +
sub edx 2 +
mov [ebp+var_2C] edx +
fild  [ebp+var_2C] +
mov eax [ebp+var_24] +
fmul  dword ptr [eax+0ACh] +
fadd  ds:dbl_1002368 +
fstp  [ebp+var_1C] +
fld  [ebp+var_1C] +
call _ftol2_sse  +
mov ecx [ebp+var_24] +
mov edx [ecx+48h] +
lea eax [edx+eax+1] +
mov [ebp+rc.left] eax +
push ecx  +
fld  ds:flt_1006EC0 +
fstp  [esp+30h+var_30] +
mov ecx [ebp+hbr] +
push ecx  +
lea edx [ebp+rc] +
push edx  +
mov eax [ebp+wParam] +
push eax  +
call sub_1031F10  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10365A0  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_58] ecx +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_14] +
call sub_1033DB0  +
mov [ebp+var_4] 0 +
push ecx  +
fld1   +
fstp  [esp+68h+var_68] +
push 80A0A0A0h  +
lea ecx [ebp+var_50] +
call sub_1007F90  +
push eax  +
lea ecx [ebp+var_1C] +
call sub_1033C10  +
mov byte ptr [ebp+var_4] 1 +
push 4  +
lea ecx [ebp+var_14] +
call sub_1033E10  +
mov ecx [ebp+var_58] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_1032489  +
mov edx [ebp+var_58] +
mov eax [ebp+var_58] +
mov ecx [edx+54h] +
sub ecx [eax+4Ch] +
mov [ebp+var_5C] ecx +
fild  [ebp+var_5C] +
mov edx [ebp+var_58] +
fsub  dword ptr [edx+0C0h] +
fmul  [ebp+arg_4] +
fadd  ds:dbl_1002368 +
fstp  [ebp+var_20] +
mov eax [ebp+var_58] +
fild  dword ptr [eax+50h] +
fstp  [ebp+var_28] +
mov ecx [ebp+var_58] +
fild  dword ptr [ecx+40h] +
mov edx [ebp+var_58] +
fsub  dword ptr [edx+0B4h] +
fstp  [ebp+var_2C] +
mov eax [ebp+var_58] +
fild  dword ptr [eax+54h] +
mov ecx [ebp+var_58] +
fsub  dword ptr [ecx+0B8h] +
fstp  [ebp+var_30] +
mov edx [ebp+var_58] +
fild  dword ptr [edx+54h] +
fsub  [ebp+var_20] +
mov eax [ebp+var_58] +
fadd  dword ptr [eax+0C0h] +
fstp  [ebp+var_34] +
fld  [ebp+var_30] +
fadd  [ebp+var_34] +
fdiv  ds:dbl_1006EC8 +
fstp  [ebp+var_24] +
push ecx  +
fld  [ebp+var_30] +
fstp  [esp+68h+var_68] +
push ecx  +
fld  [ebp+var_2C] +
fstp  [esp+6Ch+var_6C] +
push ecx  +
fld  [ebp+var_30] +
fstp  [esp+70h+var_70] +
push ecx  +
fld  [ebp+var_28] +
fstp  [esp+74h+var_74] +
lea ecx [ebp+var_1C] +
push ecx  +
lea ecx [ebp+var_14] +
call sub_1033E40  +
push ecx  +
fld  [ebp+var_24] +
fstp  [esp+68h+var_68] +
push ecx  +
fld  [ebp+var_2C] +
fstp  [esp+6Ch+var_6C] +
push ecx  +
fld  [ebp+var_24] +
fstp  [esp+70h+var_70] +
push ecx  +
fld  [ebp+var_28] +
fstp  [esp+74h+var_74] +
lea edx [ebp+var_1C] +
push edx  +
lea ecx [ebp+var_14] +
call sub_1033E40  +
push ecx  +
fld  [ebp+var_34] +
fstp  [esp+68h+var_68] +
push ecx  +
fld  [ebp+var_2C] +
fstp  [esp+6Ch+var_6C] +
push ecx  +
fld  [ebp+var_34] +
fstp  [esp+70h+var_70] +
push ecx  +
fld  [ebp+var_28] +
fstp  [esp+74h+var_74] +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_14] +
call sub_1033E40  +
jmp loc_1032570  +
mov ecx [ebp+var_58] +
mov edx [ebp+var_58] +
mov eax [ecx+50h] +
sub eax [edx+48h] +
mov [ebp+var_60] eax +
fild  [ebp+var_60] +
mov ecx [ebp+var_58] +
fsub  dword ptr [ecx+0C0h] +
fmul  [ebp+arg_4] +
fadd  ds:dbl_1002368 +
fstp  [ebp+var_38] +
mov edx [ebp+var_58] +
fild  dword ptr [edx+4Ch] +
fstp  [ebp+var_3C] +
mov eax [ebp+var_58] +
fild  dword ptr [eax+3Ch] +
fstp  [ebp+var_44] +
mov ecx [ebp+var_58] +
fild  dword ptr [ecx+48h] +
mov edx [ebp+var_58] +
fadd  dword ptr [edx+0C0h] +
fstp  [ebp+var_48] +
mov eax [ebp+var_58] +
fild  dword ptr [eax+48h] +
fadd  [ebp+var_38] +
mov ecx [ebp+var_58] +
fsub  dword ptr [ecx+0C0h] +
fstp  [ebp+var_4C] +
fld  [ebp+var_48] +
fadd  [ebp+var_4C] +
fdiv  ds:dbl_1006EC8 +
fstp  [ebp+var_40] +
push ecx  +
fld  [ebp+var_3C] +
fstp  [esp+68h+var_68] +
push ecx  +
fld  [ebp+var_48] +
fstp  [esp+6Ch+var_6C] +
push ecx  +
fld  [ebp+var_44] +
fstp  [esp+70h+var_70] +
push ecx  +
fld  [ebp+var_48] +
fstp  [esp+74h+var_74] +
lea edx [ebp+var_1C] +
push edx  +
lea ecx [ebp+var_14] +
call sub_1033E40  +
push ecx  +
fld  [ebp+var_3C] +
fstp  [esp+68h+var_68] +
push ecx  +
fld  [ebp+var_40] +
fstp  [esp+6Ch+var_6C] +
push ecx  +
fld  [ebp+var_44] +
fstp  [esp+70h+var_70] +
push ecx  +
fld  [ebp+var_40] +
fstp  [esp+74h+var_74] +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_14] +
call sub_1033E40  +
push ecx  +
fld  [ebp+var_3C] +
fstp  [esp+68h+var_68] +
push ecx  +
fld  [ebp+var_4C] +
fstp  [esp+6Ch+var_6C] +
push ecx  +
fld  [ebp+var_44] +
fstp  [esp+70h+var_70] +
push ecx  +
fld  [ebp+var_4C] +
fstp  [esp+74h+var_74] +
lea ecx [ebp+var_1C] +
push ecx  +
lea ecx [ebp+var_14] +
call sub_1033E40  +
mov [ebp+var_54] 1 +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_1033C60  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_1033DF0  +
mov eax [ebp+var_54] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10365D8  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_58] ecx +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_2C] +
call sub_1033DB0  +
mov [ebp+var_4] 0 +
mov ecx [ebp+arg_4] +
push ecx  +
lea ecx [ebp+var_38] +
call sub_1033890  +
mov byte ptr [ebp+var_4] 1 +
push 0  +
lea ecx [ebp+var_1C] +
call sub_1033C80  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_50] +
call sub_1033830  +
lea ecx [ebp+var_24] +
call sub_1033830  +
lea ecx [ebp+var_48] +
call sub_1033830  +
lea ecx [ebp+var_40] +
call sub_1033830  +
mov edx [ebp+var_58] +
cmp dword ptr [edx+7Ch] 0 +
jz loc_10326CA  +
mov eax [ebp+var_58] +
mov ecx [ebp+var_58] +
mov edx [eax+54h] +
sub edx [ecx+4Ch] +
mov [ebp+var_5C] edx +
fild  [ebp+var_5C] +
mov eax [ebp+var_58] +
fsub  dword ptr [eax+0B8h] +
fstp  [ebp+var_60] +
fld  [ebp+var_60] +
fmul  [ebp+arg_8] +
fstp  [ebp+var_14] +
mov ecx [ebp+var_58] +
fld  dword ptr [ecx+0B0h] +
mov edx [ebp+var_58] +
fadd  dword ptr [edx+0C4h] +
fmul  [ebp+arg_8] +
fadd  ds:dbl_10026B8 +
fstp  [ebp+var_10] +
mov eax [ebp+var_58] +
fild  dword ptr [eax+50h] +
fstp  [ebp+var_50] +
mov ecx [ebp+var_58] +
fild  dword ptr [ecx+54h] +
fsub  ds:dbl_10026B8 +
fstp  [ebp+var_4C] +
fld  [ebp+var_50] +
fstp  [ebp+var_24] +
fld  [ebp+var_4C] +
fsub  [ebp+var_14] +
fstp  [ebp+var_20] +
fld  [ebp+var_50] +
fadd  [ebp+var_10] +
fstp  [ebp+var_48] +
fld  [ebp+var_20] +
fstp  [ebp+var_44] +
fld  [ebp+var_50] +
fadd  ds:dbl_10026B8 +
fstp  [ebp+var_40] +
fld  [ebp+var_4C] +
fstp  [ebp+var_3C] +
jmp loc_1032757  +
mov edx [ebp+var_58] +
mov eax [ebp+var_58] +
mov ecx [edx+50h] +
sub ecx [eax+48h] +
mov [ebp+var_64] ecx +
fild  [ebp+var_64] +
mov edx [ebp+var_58] +
fsub  dword ptr [edx+0B8h] +
fstp  [ebp+var_68] +
fld  [ebp+var_68] +
fmul  [ebp+arg_8] +
fstp  [ebp+var_10] +
mov eax [ebp+var_58] +
fld  dword ptr [eax+0B0h] +
mov ecx [ebp+var_58] +
fadd  dword ptr [ecx+0C4h] +
fmul  [ebp+arg_8] +
fadd  ds:dbl_10026B8 +
fstp  [ebp+var_14] +
mov edx [ebp+var_58] +
fild  dword ptr [edx+48h] +
fstp  [ebp+var_50] +
mov eax [ebp+var_58] +
fild  dword ptr [eax+4Ch] +
fsub  ds:dbl_10026B8 +
fstp  [ebp+var_4C] +
fld  [ebp+var_50] +
fadd  [ebp+var_10] +
fstp  [ebp+var_24] +
fld  [ebp+var_4C] +
fstp  [ebp+var_20] +
fld  [ebp+var_24] +
fstp  [ebp+var_48] +
fld  [ebp+var_4C] +
fsub  [ebp+var_14] +
fstp  [ebp+var_44] +
fld  [ebp+var_50] +
fstp  [ebp+var_40] +
fld  [ebp+var_4C] +
fsub  ds:dbl_10026B8 +
fstp  [ebp+var_3C] +
lea ecx [ebp+var_24] +
push ecx  +
lea edx [ebp+var_50] +
push edx  +
lea ecx [ebp+var_1C] +
call sub_1033CE0  +
lea eax [ebp+var_48] +
push eax  +
lea ecx [ebp+var_24] +
push ecx  +
lea ecx [ebp+var_1C] +
call sub_1033CE0  +
lea edx [ebp+var_40] +
push edx  +
lea eax [ebp+var_48] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_1033CE0  +
lea ecx [ebp+var_50] +
push ecx  +
lea edx [ebp+var_40] +
push edx  +
lea ecx [ebp+var_1C] +
call sub_1033CE0  +
push 4  +
lea ecx [ebp+var_2C] +
call sub_1033E10  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_38] +
push ecx  +
lea ecx [ebp+var_2C] +
call sub_1033EE0  +
mov [ebp+var_54] 1 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_1C] +
call sub_1033CC0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_38] +
call sub_1033BF0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_2C] +
call sub_1033DF0  +
mov eax [ebp+var_54] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036618  +
mov eax large fs:0 +
push eax  +
sub esp 98h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_8C] ecx +
fild  [ebp+arg_4] +
fdiv  ds:dbl_1002168 +
fstp  [ebp+var_10] +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_18] +
call sub_1033DB0  +
mov [ebp+var_4] 0 +
push 4  +
lea ecx [ebp+var_18] +
call sub_1033E10  +
mov ecx [ebp+var_8C] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_1032995  +
mov edx [ebp+var_8C] +
mov eax [ebp+var_8C] +
mov ecx [edx+50h] +
sub ecx [eax+48h] +
mov [ebp+var_90] ecx +
fild  [ebp+var_90] +
mov edx [ebp+var_8C] +
fsub  dword ptr [edx+0B8h] +
fstp  [ebp+var_1C] +
mov eax [ebp+var_8C] +
mov ecx [ebp+var_8C] +
mov edx [eax+54h] +
sub edx [ecx+4Ch] +
mov [ebp+var_94] edx +
fild  [ebp+var_94] +
mov eax [ebp+var_8C] +
fsub  dword ptr [eax+0B8h] +
fstp  [ebp+var_98] +
fld  [ebp+var_98] +
fmul  [ebp+var_10] +
fstp  [ebp+var_20] +
mov ecx [ebp+var_8C] +
fild  dword ptr [ecx+48h] +
fadd  ds:dbl_10026B8 +
fstp  [ebp+var_30] +
mov edx [ebp+var_8C] +
fild  dword ptr [edx+54h] +
fsub  [ebp+var_20] +
fsub  ds:dbl_10026B8 +
fstp  [ebp+var_34] +
fld  [ebp+var_34] +
fadd  [ebp+var_20] +
fstp  [ebp+var_24] +
push ecx  +
fld  [ebp+var_24] +
fstp  [esp+0ACh+var_AC] +
push ecx  +
fld  [ebp+var_30] +
fstp  [esp+0B0h+var_B0] +
lea ecx [ebp+var_48] +
call sub_1033860  +
push ecx  +
fld  [ebp+var_34] +
fstp  [esp+0ACh+var_AC] +
push ecx  +
fld  [ebp+var_30] +
fstp  [esp+0B0h+var_B0] +
lea ecx [ebp+var_2C] +
call sub_1033860  +
mov eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+var_7C] +
call sub_1007F90  +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
lea ecx [ebp+var_80] +
call sub_1007F90  +
push eax  +
lea edx [ebp+var_2C] +
push edx  +
lea eax [ebp+var_48] +
push eax  +
lea ecx [ebp+var_40] +
call sub_1033B50  +
mov byte ptr [ebp+var_4] 1 +
push ecx  +
fld  [ebp+var_20] +
fstp  [esp+0ACh+var_AC] +
push ecx  +
fld  [ebp+var_1C] +
fstp  [esp+0B0h+var_B0] +
push ecx  +
fld  [ebp+var_34] +
fstp  [esp+0B4h+var_B4] +
push ecx  +
fld  [ebp+var_30] +
fstp  [esp+0B8h+var_B8] +
lea ecx [ebp+var_40] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_1033E90  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_40] +
call sub_1033BF0  +
jmp loc_1032ABF  +
mov edx [ebp+var_8C] +
mov eax [ebp+var_8C] +
mov ecx [edx+50h] +
sub ecx [eax+48h] +
mov [ebp+var_9C] ecx +
fild  [ebp+var_9C] +
mov edx [ebp+var_8C] +
fsub  dword ptr [edx+0B8h] +
fstp  [ebp+var_A0] +
fld  [ebp+var_A0] +
fmul  [ebp+var_10] +
fstp  [ebp+var_4C] +
mov eax [ebp+var_8C] +
mov ecx [ebp+var_8C] +
mov edx [eax+54h] +
sub edx [ecx+4Ch] +
mov [ebp+var_A4] edx +
fild  [ebp+var_A4] +
mov eax [ebp+var_8C] +
fsub  dword ptr [eax+0B8h] +
fstp  [ebp+var_50] +
mov ecx [ebp+var_8C] +
fild  dword ptr [ecx+48h] +
fadd  ds:dbl_10026B8 +
fstp  [ebp+var_5C] +
mov edx [ebp+var_8C] +
fild  dword ptr [edx+4Ch] +
fadd  ds:dbl_10026B8 +
fstp  [ebp+var_64] +
fld  [ebp+var_5C] +
fadd  [ebp+var_4C] +
fstp  [ebp+var_60] +
push ecx  +
fld  [ebp+var_64] +
fstp  [esp+0ACh+var_AC] +
push ecx  +
fld  [ebp+var_5C] +
fstp  [esp+0B0h+var_B0] +
lea ecx [ebp+var_78] +
call sub_1033860  +
push ecx  +
fld  [ebp+var_64] +
fstp  [esp+0ACh+var_AC] +
push ecx  +
fld  [ebp+var_60] +
fstp  [esp+0B0h+var_B0] +
lea ecx [ebp+var_58] +
call sub_1033860  +
mov eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+var_84] +
call sub_1007F90  +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
lea ecx [ebp+var_88] +
call sub_1007F90  +
push eax  +
lea edx [ebp+var_58] +
push edx  +
lea eax [ebp+var_78] +
push eax  +
lea ecx [ebp+var_70] +
call sub_1033B50  +
mov byte ptr [ebp+var_4] 2 +
push ecx  +
fld  [ebp+var_50] +
fstp  [esp+0ACh+var_AC] +
push ecx  +
fld  [ebp+var_4C] +
fstp  [esp+0B0h+var_B0] +
push ecx  +
fld  [ebp+var_64] +
fstp  [esp+0B4h+var_B4] +
push ecx  +
fld  [ebp+var_5C] +
fstp  [esp+0B8h+var_B8] +
lea ecx [ebp+var_70] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_1033E90  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_70] +
call sub_1033BF0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_1033DF0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
cmp dword ptr [eax+34h] 0 +
jle loc_1032B2F  +
push 10h  +
call ds:GetSysColor  +
or eax 80000000h +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+var_4] +
push edx  +
mov eax [ebp+var_10] +
mov ecx [eax+34h] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_10] +
call sub_1032800  +
mov eax [ebp+var_10] +
cmp dword ptr [eax+68h] 0 +
jnz loc_1032B69  +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+30h] 0 +
jle loc_1032B69  +
lea edx [ebp+var_C] +
push edx  +
lea eax [ebp+var_8] +
push eax  +
call sub_10310E0  +
mov ecx [ebp+var_C] +
push ecx  +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_10] +
mov ecx [eax+30h] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_10] +
call sub_1032800  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
add eax 58h +
push eax  +
push 0  +
push 419h  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_101A540  +
mov ecx [ebp+var_C] +
cmp dword ptr [ecx+2Ch] 0 +
jz loc_1032BE4  +
mov edx [ebp+var_C] +
xor eax eax +
cmp dword ptr [edx+7Ch] 0 +
setnz al  +
add eax 1 +
mov [ebp+var_8] eax +
push 0  +
mov ecx [ebp+var_C] +
add ecx 48h +
push ecx  +
push 1  +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
mov ecx [ebp+var_C] +
mov edx [ecx+2Ch] +
push edx  +
call ds:DrawThemeBackground  +
mov [ebp+var_4] eax +
jmp loc_1032C0A  +
push 0Fh  +
push 0Ah  +
mov eax [ebp+var_C] +
add eax 48h +
push eax  +
mov ecx [ebp+hdc] +
push ecx  +
call ds:DrawEdge  +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 9Ch +
mov [ebp+var_4] 1 +
push 8  +
call ds:GetStockObject  +
push eax  +
mov eax [ebp+hdc] +
push eax  +
call ds:SelectObject  +
mov [ebp+var_C] eax +
push 0Fh  +
call ds:GetSysColorBrush  +
push eax  +
mov ecx [ebp+hdc] +
push ecx  +
call ds:SelectObject  +
mov [ebp+var_8] eax +
cmp [ebp+arg_8] 0 +
jz loc_1032DB1  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov ecx [edx+0Ch] +
sub ecx [eax+4] +
mov [ebp+var_98] ecx +
fild  [ebp+var_98] +
fdiv  ds:dbl_1006EC8 +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_10] eax +
mov edx [ebp+arg_4] +
mov eax [edx+8] +
sub eax [ebp+var_10] +
mov [ebp+xRight] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx+4] +
add edx [ebp+var_10] +
mov [ebp+yTop] edx +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov [ebp+var_50.x] ecx +
mov edx [ebp+arg_4] +
mov eax [edx+4] +
mov [ebp+var_50.y] eax +
mov ecx [ebp+xRight] +
mov [ebp+var_48] ecx +
mov edx [ebp+arg_4] +
mov eax [edx+4] +
mov [ebp+var_44] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx+8] +
mov [ebp+var_40] edx +
mov eax [ebp+yTop] +
mov [ebp+var_3C] eax +
mov ecx [ebp+xRight] +
mov [ebp+var_38] ecx +
mov edx [ebp+arg_4] +
mov eax [edx+0Ch] +
mov [ebp+var_34] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
mov [ebp+var_30] edx +
mov eax [ebp+arg_4] +
mov ecx [eax+0Ch] +
mov [ebp+var_2C] ecx +
push 5  +
lea edx [ebp+var_50] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
call ds:Polygon  +
mov ecx [ebp+yTop] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx+8] +
push eax  +
mov ecx [ebp+arg_4] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+xRight] +
push eax  +
lea ecx [ebp+qrc] +
push ecx  +
call ds:SetRect  +
push 101Ch  +
push 5  +
lea edx [ebp+qrc] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
call ds:DrawEdge  +
mov ecx [ebp+arg_4] +
mov edx [ecx+0Ch] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
push ecx  +
mov edx [ebp+yTop] +
push edx  +
mov eax [ebp+xRight] +
push eax  +
lea ecx [ebp+qrc] +
push ecx  +
call ds:SetRect  +
push 1019h  +
push 5  +
lea edx [ebp+qrc] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
call ds:DrawEdge  +
mov ecx [ebp+arg_4] +
mov edx [ecx+0Ch] +
push edx  +
mov eax [ebp+xRight] +
push eax  +
mov ecx [ebp+arg_4] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push ecx  +
lea edx [ebp+qrc] +
push edx  +
call ds:SetRect  +
push 100Bh  +
push 5  +
lea eax [ebp+qrc] +
push eax  +
mov ecx [ebp+hdc] +
push ecx  +
call ds:DrawEdge  +
jmp loc_1032F0B  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov ecx [edx+8] +
sub ecx [eax] +
mov [ebp+var_9C] ecx +
fild  [ebp+var_9C] +
fdiv  ds:dbl_1006EC8 +
fadd  ds:dbl_1002368 +
call _ftol2_sse  +
mov [ebp+var_94] eax +
mov edx [ebp+arg_4] +
mov eax [edx+8] +
sub eax [ebp+var_94] +
mov [ebp+xLeft] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx+4] +
add edx [ebp+var_94] +
mov [ebp+yBottom] edx +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov [ebp+var_90.x] ecx +
mov edx [ebp+arg_4] +
mov eax [edx+0Ch] +
mov [ebp+var_90.y] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
mov [ebp+var_88] edx +
mov eax [ebp+yBottom] +
mov [ebp+var_84] eax +
mov ecx [ebp+xLeft] +
mov [ebp+var_80] ecx +
mov edx [ebp+arg_4] +
mov eax [edx+4] +
mov [ebp+var_7C] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx+8] +
mov [ebp+var_78] edx +
mov eax [ebp+yBottom] +
mov [ebp+var_74] eax +
mov ecx [ebp+arg_4] +
mov edx [ecx+8] +
mov [ebp+var_70] edx +
mov eax [ebp+arg_4] +
mov ecx [eax+0Ch] +
mov [ebp+var_6C] ecx +
push 5  +
lea edx [ebp+var_90] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
call ds:Polygon  +
mov ecx [ebp+yBottom] +
push ecx  +
mov edx [ebp+xLeft] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx] +
push eax  +
lea ecx [ebp+rc] +
push ecx  +
call ds:SetRect  +
push 1016h  +
push 5  +
lea edx [ebp+rc] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
call ds:DrawEdge  +
mov ecx [ebp+yBottom] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx+8] +
push eax  +
mov ecx [ebp+arg_4] +
mov edx [ecx+4] +
push edx  +
mov eax [ebp+xLeft] +
push eax  +
lea ecx [ebp+rc] +
push ecx  +
call ds:SetRect  +
push 101Ch  +
push 5  +
lea edx [ebp+rc] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
call ds:DrawEdge  +
mov ecx [ebp+arg_4] +
mov edx [ecx+0Ch] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
push ecx  +
mov edx [ebp+yBottom] +
push edx  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push ecx  +
lea edx [ebp+rc] +
push edx  +
call ds:SetRect  +
push 100Dh  +
push 5  +
lea eax [ebp+rc] +
push eax  +
mov ecx [ebp+hdc] +
push ecx  +
call ds:DrawEdge  +
mov edx [ebp+var_C] +
push edx  +
mov eax [ebp+hdc] +
push eax  +
call ds:SelectObject  +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+hdc] +
push edx  +
call ds:SelectObject  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov [ebp+var_24] ecx +
mov [ebp+var_4] 0 +
cmp [ebp+arg_14] 0 +
jz loc_1033048  +
mov [ebp+var_20] 0 +
mov [ebp+var_8] 0 +
xor eax eax +
mov [ebp-7] ax +
mov [ebp+var_5] al +
mov [ebp+var_1C] 10h +
xor ecx ecx +
mov [ebp+var_18] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_8] 0 +
mov byte ptr [ebp-6] 80h +
lea edx [ebp+var_8] +
mov [ebp+var_10] edx +
lea eax [ebp+hdc] +
push eax  +
lea ecx [ebp+var_1C] +
push ecx  +
push 2  +
lea edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call ds:BeginBufferedPaint  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jz loc_1033048  +
push 0CC0020h  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+arg_10] +
sub ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_C] +
sub edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+hdc] +
push edx  +
call ds:BitBlt  +
mov eax [ebp+var_24] +
cmp dword ptr [eax+2Ch] 0 +
jz loc_1033017  +
push 0  +
lea ecx [ebp+arg_4] +
push ecx  +
push 1  +
mov edx [ebp+var_24] +
mov eax [edx+80h] +
push eax  +
mov ecx [ebp+hdc] +
push ecx  +
mov edx [ebp+var_24] +
mov eax [edx+2Ch] +
push eax  +
call ds:DrawThemeBackground  +
mov [ebp+var_4] eax +
jmp loc_103303C  +
mov ecx [ebp+var_24] +
mov edx [ecx+7Ch] +
push edx  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hdc] +
push ecx  +
call sub_1032C20  +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
mov [ebp+var_4] eax +
push 1  +
mov edx [ebp+var_20] +
push edx  +
call ds:EndBufferedPaint  +
cmp [ebp+arg_14] 0 +
jz loc_1033054  +
cmp [ebp+var_4] 0 +
jge loc_10330B2  +
mov eax [ebp+var_24] +
cmp dword ptr [eax+2Ch] 0 +
jz loc_103308D  +
push 0  +
lea ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+var_24] +
mov eax [edx+84h] +
push eax  +
mov ecx [ebp+var_24] +
mov edx [ecx+80h] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_24] +
mov edx [ecx+2Ch] +
push edx  +
call ds:DrawThemeBackground  +
mov [ebp+var_4] eax +
jmp loc_10330B2  +
mov eax [ebp+var_24] +
mov ecx [eax+7Ch] +
push ecx  +
lea edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_1032C20  +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_50] ecx +
cmp off_103B010 offset off_103B010 +
jz loc_1033129  +
mov eax off_103B010 +
mov ecx [eax+1Ch] +
and ecx 20000000h +
jz loc_1033129  +
mov edx off_103B010 +
movzx eax byte ptr [edx+19h] +
cmp eax 4 +
jl loc_1033129  +
mov ecx [ebp+var_50] +
mov edx [ecx+4] +
push edx  +
push offset dword_1006E70  +
push 0Bh  +
mov eax off_103B010 +
mov ecx [eax+14h] +
push ecx  +
mov edx [eax+10h] +
push edx  +
call sub_1018920  +
mov [ebp+var_54] 1 +
jmp loc_1033130  +
mov [ebp+var_54] 0 +
mov eax [ebp+var_50] +
cmp dword ptr [eax+24h] 0 +
jnz loc_1033141  +
mov ecx [ebp+var_50] +
call sub_10316E0  +
lea ecx [ebp+Paint] +
push ecx  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A660  +
mov [ebp+var_4C] eax +
lea edx [ebp+Paint.rcPaint] +
push edx  +
mov eax [ebp+var_4C] +
push eax  +
mov ecx [ebp+var_50] +
call sub_1033240  +
lea ecx [ebp+Paint] +
push ecx  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_101A690  +
push 0  +
mov ecx [ebp+var_50] +
add ecx 4 +
call sub_1033800  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 1 +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp off_103B010 offset off_103B010 +
jz loc_1033206  +
mov ecx off_103B010 +
mov edx [ecx+1Ch] +
and edx 20000000h +
jz loc_1033206  +
mov eax off_103B010 +
movzx ecx byte ptr [eax+19h] +
cmp ecx 4 +
jl loc_1033206  +
mov edx [ebp+var_8] +
mov eax [edx+4] +
push eax  +
push offset dword_1006E70  +
push 0Ch  +
mov ecx off_103B010 +
mov edx [ecx+14h] +
push edx  +
mov eax [ecx+10h] +
push eax  +
call sub_1018920  +
mov [ebp+var_C] 1 +
jmp loc_103320D  +
mov [ebp+var_C] 0 +
push 0  +
mov ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_1033240  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+var_10] +
cmp dword ptr [eax+28h] 0 +
jz loc_1033277  +
lea ecx [ebp+hDC] +
push ecx  +
push 0  +
push 2  +
mov edx [ebp+var_10] +
add edx 38h +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call ds:BeginBufferedPaint  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_1033283  +
mov ecx [ebp+arg_0] +
mov [ebp+hDC] ecx +
mov ecx [ebp+var_10] +
call sub_1033410  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_10] +
call sub_1032090  +
mov ecx [ebp+var_10] +
push ecx  +
fld  dword ptr [ecx+0ACh] +
fstp  [esp+2Ch+var_2C] +
mov edx [ebp+hDC] +
push edx  +
mov ecx [ebp+var_10] +
call sub_1032320  +
push ecx  +
fld1   +
fstp  [esp+2Ch+var_2C] +
mov eax [ebp+var_10] +
mov ecx [eax+74h] +
push ecx  +
lea ecx [ebp+var_C] +
call sub_1007F90  +
push eax  +
mov edx [ebp+hDC] +
push edx  +
mov ecx [ebp+var_10] +
call sub_10325B0  +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_10] +
call sub_1032B80  +
mov ecx [ebp+hDC] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_1032210  +
mov edx [ebp+var_10] +
cmp dword ptr [edx+6Ch] 0 +
jz loc_1033303  +
mov eax [ebp+hDC] +
push eax  +
mov ecx [ebp+var_10] +
call sub_1032AF0  +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+68h] 0 +
jz loc_103331E  +
mov edx [ebp+var_10] +
cmp dword ptr [edx+28h] 0 +
jz loc_103331E  +
mov [ebp+var_14] 1 +
jmp loc_1033325  +
mov [ebp+var_14] 0 +
mov eax [ebp+var_14] +
push eax  +
mov ecx [ebp+var_10] +
add ecx 58h +
sub esp 10h +
mov edx esp +
mov eax [ecx] +
mov [edx] eax +
mov eax [ecx+4] +
mov [edx+4] eax +
mov eax [ecx+8] +
mov [edx+8] eax +
mov ecx [ecx+0Ch] +
mov [edx+0Ch] ecx +
mov edx [ebp+hDC] +
push edx  +
mov ecx [ebp+var_10] +
call sub_1032F40  +
mov eax [ebp+var_10] +
cmp dword ptr [eax+8Ch] 0 +
jz loc_1033398  +
mov ecx [ebp+var_10] +
mov edx [ecx+28h] +
push edx  +
mov eax [ebp+var_10] +
add eax 94h +
sub esp 10h +
mov ecx esp +
mov edx [eax] +
mov [ecx] edx +
mov edx [eax+4] +
mov [ecx+4] edx +
mov edx [eax+8] +
mov [ecx+8] edx +
mov eax [eax+0Ch] +
mov [ecx+0Ch] eax +
mov ecx [ebp+hDC] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_1032F40  +
mov edx [ebp+hDC] +
push edx  +
mov ecx [ebp+var_10] +
call sub_1031FC0  +
cmp [ebp+var_4] 0 +
jz loc_10333B6  +
push 1  +
mov eax [ebp+var_4] +
push eax  +
call ds:EndBufferedPaint  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+2Ch] 0 +
jz loc_10333EF  +
mov ecx [ebp+var_4] +
mov edx [ecx+2Ch] +
push edx  +
call ds:CloseThemeData  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
mov ecx [eax+84h] +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_102FBD0  +
test eax eax +
jnz loc_1033445  +
mov edx [ebp+var_8] +
mov dword ptr [edx+84h] 5 +
jmp loc_1033488  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+88h] 0 +
jz loc_1033460  +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+84h] 2 +
jmp loc_1033488  +
mov ecx [ebp+var_8] +
call sub_1032060  +
test eax eax +
jz loc_103347B  +
mov edx [ebp+var_8] +
mov dword ptr [edx+84h] 4 +
jmp loc_1033488  +
mov eax [ebp+var_8] +
mov dword ptr [eax+84h] 1 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 21h +
jb loc_10334F3  +
cmp [ebp+var_C] 28h +
jbe loc_10334BF  +
jmp loc_10334F3  +
mov ecx [ebp+var_8] +
cmp dword ptr [ecx+68h] 0 +
jz loc_10334F3  +
mov edx [ebp+var_8] +
mov dword ptr [edx+68h] 0 +
push 0  +
push 0  +
push 436h  +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_100E190  +
mov ecx [eax] +
push ecx  +
call ds:SendMessageW  +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
cmp dword ptr [eax+68h] 0 +
jz loc_103354F  +
mov ecx [ebp+var_8] +
mov dword ptr [ecx+68h] 0 +
push 0  +
push 0  +
push 436h  +
lea edx [ebp+var_4] +
push edx  +
mov ecx [ebp+var_8] +
add ecx 4 +
call sub_100E190  +
mov eax [eax] +
push eax  +
call ds:SendMessageW  +
mov ecx [ebp+arg_C] +
mov dword ptr [ecx] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_8] +
and eax 0FFFFh +
movsx ecx ax +
mov [ebp+pt.x] ecx +
mov edx [ebp+arg_8] +
shr edx 10h +
and edx 0FFFFh +
movsx eax dx +
mov [ebp+pt.y] eax +
mov ecx [ebp+pt.y] +
push ecx  +
mov edx [ebp+pt.x] +
push edx  +
mov eax [ebp+var_10] +
add eax 58h +
push eax  +
call ds:PtInRect  +
mov ecx [ebp+var_10] +
mov [ecx+88h] eax +
mov ecx [ebp+var_10] +
call sub_1033410  +
mov edx [ebp+var_10] +
cmp eax [edx+84h] +
jz loc_10335E0  +
push 1  +
mov eax [ebp+var_10] +
add eax 58h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_1010530  +
mov ecx [ebp+arg_4] +
and ecx 1 +
jz loc_103361C  +
mov edx [ebp+var_10] +
cmp dword ptr [edx+68h] 0 +
jz loc_103361C  +
mov eax [ebp+var_10] +
mov dword ptr [eax+68h] 0 +
push 0  +
push 0  +
push 436h  +
lea ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_100E190  +
mov edx [eax] +
push edx  +
call ds:SendMessageW  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax+88h] 0 +
mov ecx [ebp+var_4] +
call sub_1033410  +
mov ecx [ebp+var_4] +
cmp eax [ecx+84h] +
jz loc_103367D  +
push 1  +
mov edx [ebp+var_4] +
add edx 58h +
push edx  +
mov ecx [ebp+var_4] +
add ecx 4 +
call sub_1010530  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+2Ch] 0 +
jz loc_10336BF  +
mov ecx [ebp+var_4] +
mov edx [ecx+2Ch] +
push edx  +
call ds:CloseThemeData  +
push offset aTrackbar_0  +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
push ecx  +
call ds:OpenThemeData  +
mov edx [ebp+var_4] +
mov [edx+2Ch] eax +
push 1  +
mov eax [ebp+var_4] +
add eax 74h +
push eax  +
call sub_1031040  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+lParam] +
push eax  +
mov ecx [ebp+wParam] +
push ecx  +
mov edx [ebp+Msg] +
push edx  +
mov ecx [ebp+var_8] +
call sub_1011530  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_8] +
call sub_10318C0  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
push 0  +
push 0  +
push 400h  +
mov ecx [ebp+var_C] +
add ecx 4 +
call sub_101A540  +
mov [ebp+var_8] eax +
mov ecx [ebp+var_C] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_1033792  +
mov edx [ebp+var_C] +
mov eax [edx+0A8h] +
sub eax [ebp+var_8] +
mov [ebp+var_10] eax +
jmp loc_1033798  +
mov ecx [ebp+var_8] +
mov [ebp+var_10] ecx +
mov edx [ebp+var_10] +
push edx  +
push offset aD  +
push 50h  +
mov eax [ebp+var_4] +
add eax 10h +
push eax  +
call sub_101A9F0  +
add esp 10h +
mov ecx [ebp+arg_8] +
mov dword ptr [ecx] 1 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+nIndex] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call sub_1009020  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+lpRect] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call ds:ValidateRect  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
fldz   +
fstp  dword ptr [eax+4] +
mov ecx [ebp+var_4] +
fldz   +
fstp  dword ptr [ecx] +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
fld  [ebp+arg_0] +
fstp  dword ptr [eax] +
mov ecx [ebp+var_4] +
fld  [ebp+arg_4] +
fstp  dword ptr [ecx+4] +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036678  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov ecx [ebp+var_14] +
call sub_1033A50  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_14] +
mov dword ptr [eax] offset off_1006EF4 +
mov [ebp+var_10] 0 +
lea ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_1024680  +
push eax  +
call GdipCreateSolidFill  +
mov edx [ebp+var_14] +
mov [edx+8] eax +
mov eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_14] +
call sub_1022720  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006EEC +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
push edx  +
call GdipDeleteBrush  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_103664A  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-20h] ecx +
mov dword ptr [ebp-14h] 0 +
lea eax [ebp-14h] +
push eax  +
mov ecx [ebp-20h] +
mov edx [ecx+4] +
push edx  +
call GdipCloneBrush  +
push eax  +
mov ecx [ebp-20h] +
call sub_1033AC0  +
push 0Ch  +
call sub_1033A30  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_10339C9  +
mov eax [ebp-20h] +
mov ecx [eax+8] +
push ecx  +
mov edx [ebp-14h] +
push edx  +
mov ecx [ebp-1Ch] +
call sub_1033A80  +
mov [ebp-24h] eax +
jmp loc_10339D0  +
mov dword ptr [ebp-24h] 0 +
mov eax [ebp-24h] +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-18h] +
mov [ebp-10h] ecx +
cmp dword ptr [ebp-10h] 0 +
jnz loc_10339F2  +
mov edx [ebp-14h] +
push edx  +
call GdipDeleteBrush  +
mov eax [ebp-10h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push eax  +
call GdipFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push eax  +
call GdipAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006EEC +
push 6  +
mov ecx [ebp+var_4] +
call sub_1033AC0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_1006EEC +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_4] +
mov [ecx+8] edx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_1022720  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] 0 +
jz loc_1033ADF  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+8] ecx +
mov eax [ebp+arg_0] +
jmp loc_1033AE2  +
jmp loc_1033AE2  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1033920  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1033B12  +
mov ecx [ebp-4] +
push ecx  +
call sub_1033A10  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp-4] ecx +
mov ecx [ebp-4] +
call sub_1033BF0  +
mov eax [ebp+8] +
and eax 1 +
jz loc_1033B42  +
mov ecx [ebp-4] +
push ecx  +
call sub_1033A10  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036678  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov ecx [ebp+var_14] +
call sub_1033A50  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_14] +
mov dword ptr [eax] offset off_1006EF4 +
mov [ebp+var_10] 0 +
lea ecx [ebp+var_10] +
push ecx  +
push 0  +
mov ecx [ebp+arg_C] +
call sub_1024680  +
push eax  +
mov ecx [ebp+arg_8] +
call sub_1024680  +
push eax  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call GdipCreateLineBrush  +
mov ecx [ebp+var_14] +
mov [ecx+8] eax +
mov edx [ebp+var_10] +
push edx  +
mov ecx [ebp+var_14] +
call sub_1022720  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_1033920  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_8] +
push ecx  +
mov edx [ebp+var_4] +
push edx  +
push ecx  +
fld  [ebp+arg_4] +
fstp  [esp+14h+var_14] +
mov ecx [ebp+arg_0] +
call sub_1024680  +
push eax  +
call GdipCreatePen1  +
mov ecx [ebp+var_8] +
mov [ecx+4] eax +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call GdipDeletePen  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call GdipCreatePath  +
mov ecx [ebp+var_4] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call GdipDeletePath  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push ecx  +
fld  dword ptr [eax+4] +
fstp  [esp+8+var_8] +
mov ecx [ebp+arg_4] +
push ecx  +
fld  dword ptr [ecx] +
fstp  [esp+0Ch+var_C] +
mov edx [ebp+arg_0] +
push ecx  +
fld  dword ptr [edx+4] +
fstp  [esp+10h+var_10] +
mov eax [ebp+arg_0] +
push ecx  +
fld  dword ptr [eax] +
fstp  [esp+14h+var_14] +
mov ecx [ebp+var_4] +
call sub_1033D30  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push ecx  +
fld  [ebp+arg_C] +
fstp  [esp+8+var_8] +
push ecx  +
fld  [ebp+arg_8] +
fstp  [esp+0Ch+var_C] +
push ecx  +
fld  [ebp+arg_4] +
fstp  [esp+10h+var_10] +
push ecx  +
fld  [ebp+arg_0] +
fstp  [esp+14h+var_14] +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call GdipAddPathLine  +
push eax  +
mov ecx [ebp+var_4] +
call sub_1033D80  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] 0 +
jz loc_1033D9F  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
mov eax [ebp+arg_0] +
jmp loc_1033DA2  +
jmp loc_1033DA2  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call GdipCreateFromHDC  +
mov edx [ebp+var_8] +
mov [edx+4] eax +
mov eax [ebp+var_4] +
push eax  +
mov ecx [ebp+var_8] +
call sub_1033F20  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ecx  +
call GdipDeleteGraphics  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call GdipSetSmoothingMode  +
push eax  +
mov ecx [ebp+var_4] +
call sub_1033D80  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push ecx  +
fld  [ebp+arg_10] +
fstp  [esp+8+var_8] +
push ecx  +
fld  [ebp+arg_C] +
fstp  [esp+0Ch+var_C] +
push ecx  +
fld  [ebp+arg_8] +
fstp  [esp+10h+var_10] +
push ecx  +
fld  [ebp+arg_4] +
fstp  [esp+14h+var_14] +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call GdipDrawLine  +
push eax  +
mov ecx [ebp+var_4] +
call sub_1033D80  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
push ecx  +
fld  [ebp+arg_10] +
fstp  [esp+8+var_8] +
push ecx  +
fld  [ebp+arg_C] +
fstp  [esp+0Ch+var_C] +
push ecx  +
fld  [ebp+arg_8] +
fstp  [esp+10h+var_10] +
push ecx  +
fld  [ebp+arg_4] +
fstp  [esp+14h+var_14] +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
push ecx  +
mov edx [ebp+var_4] +
mov eax [edx] +
push eax  +
call GdipFillRectangle  +
push eax  +
mov ecx [ebp+var_4] +
call sub_1033D80  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx+4] +
push eax  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push edx  +
call GdipFillPath  +
push eax  +
mov ecx [ebp+var_4] +
call sub_1033D80  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10366A8  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea ecx [ebp+var_18] +
call sub_1012550  +
mov [ebp+var_4] 0 +
mov [ebp+pv] 0 +
mov [ebp+var_1C] 1 +
mov [ebp+var_10] 1 +
lea eax [ebp+pvar] +
push eax  +
call sub_1023100  +
push 17h  +
push 0  +
push offset stru_1006EFC  +
lea ecx [ebp+var_18] +
call sub_1034B30  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_1033FB3  +
jmp loc_1034139  +
lea ecx [ebp+pv] +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [eax+14h] +
call edx  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_1033FD3  +
jmp loc_1034139  +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_3C] eax +
lea eax [ebp+pvar] +
push eax  +
push offset dword_100179C  +
push 0  +
mov ecx [ebp+pv] +
push ecx  +
mov edx [ebp+var_3C] +
push edx  +
mov eax [ebp+var_3C] +
mov ecx [eax] +
mov edx [ecx+2Ch] +
call edx  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_1034009  +
jmp loc_1034139  +
movzx eax [ebp+pvar.vt] +
cmp eax 0Bh +
jz loc_103401B  +
movzx ecx [ebp+pvar.vt] +
cmp ecx 13h +
jnz loc_1034022  +
movzx edx word ptr [ebp+pvar.anonymous_0] +
mov [ebp+var_1C] edx +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantClear  +
mov ecx [ebp+var_1C] +
cmp ecx [ebp+arg_4] +
jz loc_103407B  +
mov edx 13h +
mov [ebp+pvar.vt] dx +
mov ax word ptr [ebp+arg_4] +
mov word ptr [ebp+pvar.anonymous_0] ax +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_40] eax +
lea ecx [ebp+pvar] +
push ecx  +
push offset dword_100179C  +
push 0  +
mov edx [ebp+pv] +
push edx  +
mov eax [ebp+var_40] +
push eax  +
mov ecx [ebp+var_40] +
mov edx [ecx] +
mov eax [edx+30h] +
call eax  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_103407B  +
jmp loc_1034139  +
cmp [ebp+arg_8] 0 +
jz loc_1034089  +
mov ecx [ebp+arg_8] +
mov edx [ebp+var_1C] +
mov [ecx] edx +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_44] eax +
lea eax [ebp+pvar] +
push eax  +
push offset dword_10017B0  +
push 0  +
mov ecx [ebp+pv] +
push ecx  +
mov edx [ebp+var_44] +
push edx  +
mov eax [ebp+var_44] +
mov ecx [eax] +
mov edx [ecx+2Ch] +
call edx  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_10340BC  +
jmp loc_1034139  +
movzx eax [ebp+pvar.vt] +
cmp eax 0Bh +
jz loc_10340CE  +
movzx ecx [ebp+pvar.vt] +
cmp ecx 13h +
jnz loc_10340D5  +
movzx edx word ptr [ebp+pvar.anonymous_0] +
mov [ebp+var_10] edx +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantClear  +
mov ecx [ebp+var_10] +
cmp ecx [ebp+arg_C] +
jz loc_103412B  +
mov edx 13h +
mov [ebp+pvar.vt] dx +
mov ax word ptr [ebp+arg_C] +
mov word ptr [ebp+pvar.anonymous_0] ax +
lea ecx [ebp+var_18] +
call sub_1024680  +
mov [ebp+var_48] eax +
lea ecx [ebp+pvar] +
push ecx  +
push offset dword_10017B0  +
push 0  +
mov edx [ebp+pv] +
push edx  +
mov eax [ebp+var_48] +
push eax  +
mov ecx [ebp+var_48] +
mov edx [ecx] +
mov eax [edx+30h] +
call eax  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] 0 +
jge loc_103412B  +
jmp loc_1034139  +
cmp [ebp+arg_10] 0 +
jz loc_1034139  +
mov ecx [ebp+arg_10] +
mov edx [ebp+var_10] +
mov [ecx] edx +
cmp [ebp+pv] 0 +
jz loc_1034150  +
mov eax [ebp+pv] +
push eax  +
call ds:CoTaskMemFree  +
mov [ebp+pv] 0 +
mov ecx [ebp+var_20] +
mov [ebp+var_38] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_18] +
call sub_1023C70  +
mov eax [ebp+var_38] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10366E0  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
push esi  +
mov eax dword_103B444 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea ecx [ebp+var_20] +
call sub_1012550  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_1012550  +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+var_30] 1 +
mov [ebp+var_44] 1 +
xor eax eax +
cmp [ebp+arg_10] 0 +
setnz al  +
mov [ebp+var_28] eax +
mov ecx [ebp+arg_10] +
neg ecx  +
sbb ecx ecx +
and ecx 80000000h +
add ecx 80000000h +
mov [ebp+var_2C] ecx +
lea ecx [ebp+var_20] +
call sub_10114A0  +
push eax  +
push 0  +
push 17h  +
push offset dword_1006F1C  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [eax+0Ch] +
call edx  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_1034221  +
jmp loc_10344C5  +
cmp [ebp+arg_10] 0 +
jz loc_103424A  +
lea eax [ebp+var_44] +
push eax  +
push 1  +
lea ecx [ebp+var_30] +
push ecx  +
push 1  +
mov edx [ebp+arg_0] +
push edx  +
call sub_1033F40  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_103424A  +
jmp loc_10344C5  +
cmp [ebp+arg_14] 0 +
jz loc_1034290  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_4C] eax +
push offset dword_10017C4  +
mov eax [ebp+arg_4] +
push eax  +
push 0  +
push 0  +
push 0  +
push 1E8480h  +
mov ecx [ebp+var_2C] +
or ecx 10000h +
push ecx  +
mov edx [ebp+var_28] +
push edx  +
mov eax [ebp+var_4C] +
push eax  +
mov ecx [ebp+var_4C] +
mov edx [ecx] +
mov eax [edx+0Ch] +
call eax  +
mov [ebp+var_3C] eax +
jmp loc_10342C5  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_50] eax +
push 0  +
mov ecx [ebp+arg_4] +
push ecx  +
push 0  +
push 0  +
push 0  +
push 1E8480h  +
mov edx [ebp+var_2C] +
push edx  +
mov eax [ebp+var_28] +
push eax  +
mov ecx [ebp+var_50] +
push ecx  +
mov edx [ebp+var_50] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_10342D0  +
jmp loc_10344C5  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_54] eax +
lea ecx [ebp+var_1C] +
call sub_10114A0  +
push eax  +
push offset dword_1006F0C  +
mov edx [ebp+var_54] +
push edx  +
mov eax [ebp+var_54] +
mov ecx [eax] +
mov edx [ecx+38h] +
call edx  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_1034305  +
jmp loc_10344C5  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_58] eax +
lea eax [ebp+var_24] +
push eax  +
mov ecx [ebp+var_58] +
push ecx  +
mov edx [ebp+var_58] +
mov eax [edx] +
mov ecx [eax+10h] +
call ecx  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_1034330  +
jmp loc_10344C5  +
mov edx [ebp+var_24] +
shr edx 1 +
mov [ebp+var_24] edx +
mov ecx [ebp+var_24] +
shr ecx 1 +
mov edx [ebp+arg_4] +
mov eax [edx+4] +
xor edx edx +
mov esi 3E8h +
div  esi +
mov esi eax +
mov eax ecx +
xor edx edx +
div  esi +
mov [ebp+dwMilliseconds] eax +
cmp [ebp+dwMilliseconds] 0 +
jnz loc_1034366  +
mov eax [ebp+dwMilliseconds] +
add eax 1 +
mov [ebp+dwMilliseconds] eax +
mov [ebp+var_40] 0 +
mov ecx [ebp+arg_C] +
mov [ebp+var_18] ecx +
cmp [ebp+var_18] 0 +
jbe loc_10344A9  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_5C] eax +
lea edx [ebp+var_10] +
push edx  +
mov eax [ebp+var_5C] +
push eax  +
mov ecx [ebp+var_5C] +
mov edx [ecx] +
mov eax [edx+18h] +
call eax  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_10343A8  +
jmp loc_10344C5  +
mov ecx [ebp+var_24] +
sub ecx [ebp+var_10] +
cmp ecx [ebp+var_18] +
jnb loc_10343BE  +
mov edx [ebp+var_24] +
sub edx [ebp+var_10] +
mov [ebp+var_60] edx +
jmp loc_10343C4  +
mov eax [ebp+var_18] +
mov [ebp+var_60] eax +
mov ecx [ebp+var_60] +
mov [ebp+var_38] ecx +
lea ecx [ebp+var_1C] +
call sub_1024680  +
mov [ebp+var_64] eax +
lea edx [ebp+var_14] +
push edx  +
mov eax [ebp+var_38] +
push eax  +
mov ecx [ebp+var_64] +
push ecx  +
mov edx [ebp+var_64] +
mov eax [edx] +
mov ecx [eax+0Ch] +
call ecx  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_10343F9  +
jmp loc_10344C5  +
mov edx [ebp+arg_4] +
movzx eax word ptr [edx+0Ch] +
imul eax [ebp+var_38] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+var_14] +
push edx  +
call memcpy  +
add esp 0Ch +
lea ecx [ebp+var_1C] +
call sub_1024680  +
mov [ebp+var_68] eax +
push 0  +
mov eax [ebp+var_38] +
push eax  +
mov ecx [ebp+var_68] +
push ecx  +
mov edx [ebp+var_68] +
mov eax [edx] +
mov ecx [eax+10h] +
call ecx  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_1034442  +
jmp loc_10344C5  +
cmp [ebp+var_40] 0 +
jnz loc_1034473  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_6C] eax +
mov edx [ebp+var_6C] +
mov eax [edx] +
mov ecx [ebp+var_6C] +
push ecx  +
mov edx [eax+28h] +
call edx  +
mov [ebp+var_3C] eax +
cmp [ebp+var_3C] 0 +
jge loc_103446C  +
jmp loc_10344C5  +
mov [ebp+var_40] 1 +
mov eax [ebp+var_18] +
sub eax [ebp+var_38] +
mov [ebp+var_18] eax +
mov ecx [ebp+arg_4] +
movzx edx word ptr [ecx+0Ch] +
imul edx [ebp+var_38] +
add edx [ebp+arg_8] +
mov [ebp+arg_8] edx +
mov eax [ebp+dwMilliseconds] +
push eax  +
mov ecx [ebp+hHandle] +
push ecx  +
call ds:WaitForSingleObject  +
cmp eax 102h +
jz loc_10344A4  +
jmp loc_10344A9  +
jmp loc_1034373  +
lea ecx [ebp+var_20] +
call sub_1024680  +
mov [ebp+var_70] eax +
mov edx [ebp+var_70] +
mov eax [edx] +
mov ecx [ebp+var_70] +
push ecx  +
mov edx [eax+2Ch] +
call edx  +
mov [ebp+var_3C] eax +
cmp [ebp+var_30] 0 +
jz loc_10344D1  +
cmp [ebp+var_44] 0 +
jnz loc_10344E6  +
push 0  +
mov eax [ebp+var_44] +
push eax  +
push 0  +
mov ecx [ebp+var_30] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_1033F40  +
mov eax [ebp+var_3C] +
mov [ebp+var_48] eax +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_1023C70  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_20] +
call sub_1023C70  +
mov eax [ebp+var_48] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_1036708  +
mov eax large fs:0 +
push eax  +
sub esp 258h +
mov eax dword_103B444 +
xor eax ebp +
mov [ebp+var_14] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea ecx [ebp+pch] +
call sub_1034680  +
mov [ebp+var_4] 0 +
mov eax [ebp+pszFileName] +
push eax  +
call ds:PathFindExtensionW  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jz loc_10345A6  +
push offset a_wav  +
mov ecx [ebp+var_10] +
push ecx  +
call _wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_10345A6  +
lea edx [ebp+pch] +
push edx  +
mov eax [ebp+pszFileName] +
push eax  +
call sub_10348F0  +
mov [ebp+var_50] eax +
jmp loc_1034607  +
mov ecx [ebp+pszFileName] +
push ecx  +
push 208h  +
lea edx [ebp+LibFileName] +
push edx  +
call sub_1024720  +
mov [ebp+var_50] eax +
cmp [ebp+var_50] 0 +
jge loc_10345C6  +
jmp loc_1034633  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:PathParseIconLocationW  +
mov [ebp+var_260] eax +
cmp [ebp+var_260] 0 +
jl loc_10345EB  +
mov [ebp+var_50] 80070057h +
jmp loc_1034633  +
lea ecx [ebp+pch] +
push ecx  +
mov edx [ebp+var_260] +
neg edx  +
push edx  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_1034970  +
mov [ebp+var_50] eax +
cmp [ebp+var_50] 0 +
jge loc_103460F  +
jmp loc_1034633  +
mov ecx [ebp+hHandle] +
push ecx  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+var_1C] +
push ecx  +
mov edx [ebp+var_24] +
push edx  +
lea eax [ebp+pch] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1034180  +
mov [ebp+var_50] eax +
mov edx [ebp+var_50] +
mov [ebp+var_264] edx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+pch] +
call sub_10346E0  +
mov eax [ebp+var_264] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_102C711  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor eax eax +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov [ecx+10h] eax +
mov [ecx+14h] eax +
mov [ecx+18h] eax +
mov [ecx+1Ch] eax +
mov [ecx+20h] eax +
mov [ecx+24h] eax +
mov edx [ebp+var_4] +
mov dword ptr [edx+28h] 0 +
mov eax [ebp+var_4] +
mov dword ptr [eax+2Ch] 0 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+30h] 0 +
mov edx [ebp+var_4] +
mov dword ptr [edx+34h] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp dword ptr [eax+28h] 0 +
jz loc_1034709  +
mov ecx [ebp+var_4] +
mov edx [ecx+28h] +
push edx  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_4] +
mov dword ptr [eax+28h] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov [ebp+var_34] 0 +
xor eax eax +
mov [ebp+pmmckiParent.ckid] eax +
mov [ebp+pmmckiParent.cksize] eax +
mov [ebp+pmmckiParent.fccType] eax +
mov [ebp+pmmckiParent.dwDataOffset] eax +
mov [ebp+pmmckiParent.dwFlags] eax +
mov [ebp+pmmckiParent.fccType] 45564157h +
push 20h  +
push 0  +
lea ecx [ebp+pmmckiParent] +
push ecx  +
mov edx [ebp+hmmio] +
push edx  +
call mmioDescend  +
mov [ebp+var_30] eax +
cmp [ebp+var_30] 0 +
jz loc_1034778  +
mov eax [ebp+var_30] +
push eax  +
call sub_100F570  +
mov [ebp+var_34] eax +
jmp loc_10348D7  +
jmp loc_10348D7  +
xor ecx ecx +
mov [ebp+cb] ecx +
mov [ebp-10h] ecx +
mov [ebp-0Ch] ecx +
mov [ebp-8] ecx +
mov [ebp-4] ecx +
mov [ebp+cb] 20746D66h +
push 10h  +
lea edx [ebp+pmmckiParent] +
push edx  +
lea eax [ebp+cb] +
push eax  +
mov ecx [ebp+hmmio] +
push ecx  +
call mmioDescend  +
mov [ebp+var_30] eax +
cmp [ebp+var_30] 0 +
jz loc_10347C3  +
mov edx [ebp+var_30] +
push edx  +
call sub_100F570  +
mov [ebp+var_34] eax +
jmp loc_10348D7  +
jmp loc_10348D7  +
cmp dword ptr [ebp-10h] 28h +
jbe loc_10347DD  +
push 0Bh  +
call sub_100F570  +
mov [ebp+var_34] eax +
jmp loc_10348D7  +
jmp loc_10348D7  +
mov eax [ebp-10h] +
push eax  +
mov ecx [ebp+pch] +
push ecx  +
mov edx [ebp+hmmio] +
push edx  +
call mmioRead  +
mov [ebp+var_18] eax +
mov eax [ebp+var_18] +
cmp eax [ebp-10h] +
jz loc_103480B  +
mov [ebp+var_34] 8007000Eh +
jmp loc_10348D7  +
jmp loc_10348D7  +
mov [ebp+cb] 61746164h +
push 10h  +
lea ecx [ebp+pmmckiParent] +
push ecx  +
lea edx [ebp+cb] +
push edx  +
mov eax [ebp+hmmio] +
push eax  +
call mmioDescend  +
mov [ebp+var_30] eax +
cmp [ebp+var_30] 0 +
jz loc_1034845  +
mov ecx [ebp+var_30] +
push ecx  +
call sub_100F570  +
mov [ebp+var_34] eax +
jmp loc_10348D7  +
jmp loc_10348D7  +
mov edx [ebp-10h] +
push edx  +
call ds:CoTaskMemAlloc  +
mov ecx [ebp+pch] +
mov [ecx+28h] eax +
mov edx [ebp+pch] +
cmp dword ptr [edx+28h] 0 +
jnz loc_1034869  +
mov [ebp+var_34] 8007000Eh +
jmp loc_10348D7  +
jmp loc_10348D7  +
mov eax [ebp-10h] +
push eax  +
mov ecx [ebp+pch] +
mov edx [ecx+28h] +
push edx  +
mov eax [ebp+hmmio] +
push eax  +
call mmioRead  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_18] +
cmp ecx [ebp-10h] +
jz loc_1034894  +
mov [ebp+var_34] 8007000Eh +
jmp loc_10348D7  +
jmp loc_10348D7  +
mov edx [ebp+pch] +
movzx eax word ptr [edx+0Ch] +
not eax  +
and eax [ebp+var_18] +
mov ecx [ebp+pch] +
mov [ecx+2Ch] eax +
mov edx [ebp+pch] +
movzx ecx word ptr [edx+0Ch] +
mov edx [ebp+pch] +
mov eax [edx+2Ch] +
xor edx edx +
div  ecx +
mov ecx [ebp+pch] +
mov [ecx+30h] eax +
mov edx [ebp+pch] +
mov eax [edx+2Ch] +
imul eax eax +
mov ecx [ebp+pch] +
xor edx edx +
div  dword ptr [ecx+8] +
mov edx [ebp+pch] +
mov [edx+34h] eax +
mov eax [ebp+var_34] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov [ebp+var_8] 0 +
mov [ebp+hmmio] 0 +
push 48h  +
push 0  +
lea eax [ebp+pmmioinfo] +
push eax  +
call memset  +
add esp 0Ch +
push 0  +
lea ecx [ebp+pmmioinfo] +
push ecx  +
mov edx [ebp+pszFileName] +
push edx  +
call mmioOpenW  +
mov [ebp+hmmio] eax +
cmp [ebp+hmmio] 0 +
jnz loc_103493F  +
mov eax [ebp+pmmioinfo.wErrorRet] +
push eax  +
call sub_100F570  +
mov [ebp+var_8] eax +
jmp loc_103494F  +
jmp loc_103494F  +
mov ecx [ebp+pch] +
push ecx  +
mov edx [ebp+hmmio] +
push edx  +
call sub_1034720  +
mov [ebp+var_8] eax +
cmp [ebp+hmmio] 0 +
jz loc_1034961  +
push 0  +
mov eax [ebp+hmmio] +
push eax  +
call mmioClose  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
push 2  +
push 0  +
mov eax [ebp+lpLibFileName] +
push eax  +
call ds:LoadLibraryExW  +
mov [ebp+hModule] eax +
cmp [ebp+hModule] 0 +
jnz loc_10349A2  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_8] eax +
jmp loc_10349C0  +
jmp loc_10349C0  +
mov ecx [ebp+pch] +
push ecx  +
mov edx dword ptr [ebp+arg_4] +
push edx  +
mov eax [ebp+hModule] +
push eax  +
call sub_10349D0  +
mov [ebp+var_8] eax +
mov ecx [ebp+hModule] +
push ecx  +
call ds:__imp_FreeLibrary  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov [ebp+var_5C] 0 +
mov [ebp+hmmio] 0 +
mov [ebp+hResInfo] 0 +
mov [ebp+hResData] 0 +
mov [ebp+var_C] 0 +
push offset Type  +
movzx eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call ds:FindResourceW  +
mov [ebp+hResInfo] eax +
cmp [ebp+hResInfo] 0 +
jnz loc_1034A31  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_5C] eax +
jmp loc_1034AF3  +
jmp loc_1034AF3  +
mov edx [ebp+hResInfo] +
push edx  +
mov eax [ebp+hModule] +
push eax  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
cmp [ebp+hResData] 0 +
jnz loc_1034A61  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_5C] eax +
jmp loc_1034AF3  +
jmp loc_1034AF3  +
mov ecx [ebp+hResData] +
push ecx  +
call ds:LockResource  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jnz loc_1034A87  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_5C] eax +
jmp loc_1034AF3  +
jmp loc_1034AF3  +
push 48h  +
push 0  +
lea edx [ebp+pmmioinfo] +
push edx  +
call memset  +
add esp 0Ch +
mov eax [ebp+var_C] +
mov [ebp+pmmioinfo.pchBuffer] eax +
mov [ebp+pmmioinfo.fccIOProc] 204D454Dh +
mov ecx [ebp+hResInfo] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
call ds:SizeofResource  +
mov [ebp+pmmioinfo.cchBuffer] eax +
mov [ebp+pmmioinfo.adwInfo] 0 +
push 0  +
lea eax [ebp+pmmioinfo] +
push eax  +
push 0  +
call mmioOpenW  +
mov [ebp+hmmio] eax +
cmp [ebp+hResData] 0 +
jnz loc_1034AE3  +
mov ecx [ebp+pmmioinfo.wErrorRet] +
push ecx  +
call sub_100F570  +
mov [ebp+var_5C] eax +
jmp loc_1034AF3  +
jmp loc_1034AF3  +
mov edx [ebp+pch] +
push edx  +
mov eax [ebp+hmmio] +
push eax  +
call sub_1034720  +
mov [ebp+var_5C] eax +
cmp [ebp+hmmio] 0 +
jz loc_1034B05  +
push 0  +
mov ecx [ebp+hmmio] +
push ecx  +
call mmioClose  +
mov edx [ebp+hmmio] +
cmp edx [ebp+hResData] +
jz loc_1034B17  +
mov eax [ebp+hResData] +
push eax  +
call ds:FreeResource  +
mov eax [ebp+var_5C] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+ppv] ecx +
mov eax [ebp+ppv] +
push eax  +
push offset stru_1006F44  +
mov ecx [ebp+dwClsContext] +
push ecx  +
mov edx [ebp+pUnkOuter] +
push edx  +
mov eax [ebp+rclsid] +
push eax  +
call ds:CoCreateInstance  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_8] 0 +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_1034B89  +
mov [ebp+var_8] 80070057h +
jmp loc_1034BFA  +
jmp loc_1034BFA  +
mov ecx [ebp+arg_0] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_C] +
add edx 2 +
mov [ebp+var_10] edx +
mov eax [ebp+var_C] +
mov cx [eax] +
mov [ebp+var_12] cx +
add [ebp+var_C] 2 +
cmp [ebp+var_12] 0 +
jnz loc_1034B98  +
mov edx [ebp+var_C] +
sub edx [ebp+var_10] +
sar edx 1 +
mov [ebp+var_18] edx +
mov eax [ebp+var_18] +
lea ecx [eax+eax+2] +
mov [ebp+cb] ecx +
mov edx [ebp+cb] +
push edx  +
call ds:CoTaskMemAlloc  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov edx [ebp+arg_4] +
cmp dword ptr [edx] 0 +
jnz loc_1034BE4  +
mov [ebp+var_8] 8007000Eh +
jmp loc_1034BFA  +
jmp loc_1034BFA  +
mov eax [ebp+cb] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx] +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [ebp+var_10] 0 +
mov [ebp+var_8] 0 +
mov [ebp+hLibModule] 0 +
mov eax [ebp+lpSrc] +
movzx ecx word ptr [eax] +
cmp ecx 40h +
jnz loc_1034C41  +
mov edx [ebp+lpSrc] +
add edx 2 +
mov [ebp+lpSrc] edx +
mov eax [ebp+lpSrc] +
push eax  +
push 10Eh  +
push offset pszPath  +
call sub_1034E10  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_1034C67  +
jmp loc_1034DDF  +
jmp loc_1034DDF  +
push offset pszPath  +
call ds:PathFindExtensionW  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_1034CEF  +
push offset a_ico  +
mov ecx [ebp+var_4] +
push ecx  +
call _wcsicmp  +
add esp 8 +
test eax eax +
jnz loc_1034CEF  +
mov edx [ebp+arg_4] +
mov dword ptr [edx] 0FFFFFFFFh +
push 10h  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
push 1  +
push offset pszPath  +
push 0  +
call ds:LoadImageW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_1034CCB  +
push offset pszPath  +
push 0  +
call ds:LoadIconW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_1034CEA  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_10] eax +
jmp loc_1034DDF  +
jmp loc_1034DDF  +
jmp loc_1034DDF  +
mov edx [ebp+arg_4] +
cmp dword ptr [edx] 0 +
jge loc_1034D9C  +
push 2  +
push 0  +
push offset pszPath  +
call ds:LoadLibraryExW  +
mov [ebp+hLibModule] eax +
cmp [ebp+hLibModule] 0 +
jnz loc_1034D2C  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_10] eax +
jmp loc_1034DDF  +
jmp loc_1034DDF  +
mov eax [ebp+arg_4] +
mov eax [eax] +
cdq   +
xor eax edx +
sub eax edx +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
lea edx [ebp+var_8] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_4] +
movzx eax word ptr [edx] +
push eax  +
mov ecx [ebp+hLibModule] +
push ecx  +
call ds:COMCTL32_381  +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jge loc_1034D9A  +
push 0  +
mov edx [ebp+arg_C] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
push 1  +
mov ecx [ebp+arg_4] +
movzx edx word ptr [ecx] +
push edx  +
mov eax [ebp+hLibModule] +
push eax  +
call ds:LoadImageW  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_1034D9A  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_10] eax +
jmp loc_1034DDF  +
jmp loc_1034DDF  +
jmp loc_1034DDF  +
push 0  +
push 1  +
lea ecx [ebp+var_18] +
push ecx  +
lea edx [ebp+var_8] +
push edx  +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_4] +
mov eax [edx] +
push eax  +
push offset pszPath  +
call ds:PrivateExtractIconsW  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] 0 +
jz loc_1034DD0  +
cmp [ebp+var_14] 0FFFFFFFFh +
jnz loc_1034DDF  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_10] eax +
mov ecx [ebp+arg_8] +
mov edx [ebp+var_8] +
mov [ecx] edx +
cmp [ebp+hLibModule] 0 +
jz loc_1034DFE  +
mov eax [ebp+hLibModule] +
push eax  +
call ds:__imp_FreeLibrary  +
mov [ebp+hLibModule] 0 +
mov eax [ebp+var_10] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov [ebp+var_8] 0 +
cmp [ebp+lpDst] 0 +
jnz loc_1034E30  +
mov [ebp+var_8] 80004003h +
jmp loc_1034E80  +
jmp loc_1034E80  +
cmp [ebp+lpSrc] 0 +
jnz loc_1034E41  +
mov [ebp+var_8] 80004003h +
jmp loc_1034E80  +
jmp loc_1034E80  +
mov eax [ebp+nSize] +
push eax  +
mov ecx [ebp+lpDst] +
push ecx  +
mov edx [ebp+lpSrc] +
push edx  +
call ds:ExpandEnvironmentStringsW  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_1034E6F  +
call ds:__imp_GetLastError  +
push eax  +
call sub_100F570  +
mov [ebp+var_8] eax +
jmp loc_1034E80  +
jmp loc_1034E80  +
mov eax [ebp+lpDst] +
movzx ecx word ptr [eax] +
test ecx ecx +
jnz loc_1034E80  +
mov [ebp+var_8] 8007007Ah +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov [ebp+var_4] offset aWindirSystem32 +
lea eax [ebp+pvar] +
push eax  +
call sub_1023100  +
lea ecx [ebp+pvar] +
push ecx  +
push offset dword_10016C0  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [eax+14h] +
call edx  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jge loc_1034ECC  +
jmp loc_1034F31  +
jmp loc_1034F31  +
movzx eax [ebp+pvar.vt] +
cmp eax 13h +
jnz loc_1034F31  +
mov ecx dword ptr [ebp+pvar.anonymous_0] +
mov [ebp+var_1C] ecx +
mov edx [ebp+var_1C] +
sub edx 1 +
mov [ebp+var_1C] edx +
cmp [ebp+var_1C] 9 +
ja loc_1034F31  +
mov eax [ebp+var_1C] +
jmp ds:off_1034F44[eax*4]  +
mov [ebp+var_4] offset aWindirSystem32 +
jmp loc_1034F31  +
mov [ebp+var_4] offset aWindirSystem_0 +
jmp loc_1034F31  +
mov [ebp+var_4] offset aWindirSystem_1 +
jmp loc_1034F31  +
mov [ebp+var_4] offset aWindirSystem_2 +
jmp loc_1034F31  +
mov [ebp+var_4] offset aWindirSystem_3 +
jmp loc_1034F31  +
mov [ebp+var_4] offset aWindirSystem_4 +
jmp loc_1034F31  +
mov [ebp+var_4] offset aWindirSystem_5 +
lea ecx [ebp+pvar] +
push ecx  +
call ds:PropVariantClear  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
lea ecx [ebp-1Ch] +
jmp sub_1023C70  +
***
mov eax dword_103B5B8 +
and eax 0FFFFFFFEh +
mov dword_103B5B8 eax +
retn   +
***
retn   +
***
lea ecx [ebp-1Ch] +
jmp sub_1023C70  +
***
lea ecx [ebp-2Ch] +
jmp sub_1023C70  +
***
retf 0FF64h  +
***
lea ecx [ebp-1Ch] +
jmp sub_1028220  +
***
mov eax dword_103B808 +
and eax 0FFFFFFFEh +
mov dword_103B808 eax +
retn   +
***
mov eax dword_103BBFC +
and eax 0FFFFFFFEh +
mov dword_103BBFC eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx offset unk_103B5AC +
call sub_1020530  +
pop ebp  +
retn   +
***
mov ecx offset unk_103BC00 +
call sub_102BD8C  +
push offset byte_10367D9  +
call sub_102CA18  +
pop ecx  +
retn   +
***
call sub_102CA18  +
pop ecx  +
retn   +
***
call ds:GetProcessHeap  +
push offset loc_10367F7  +
mov dword_103BC68 offset off_10027A4 +
mov dword_103BC6C eax +
mov byte_103BC70 0 +
call sub_102CA18  +
pop ecx  +
retn   +
***
mov edx [edi-1] +
jmp fword ptr [eax+6]  +
***
mov ecx offset dword_103BC68 +
jmp sub_102BE74  +
***
retn   +
***
retf   +
***
retf   +
***
jns $+2  +
retf 4802h  +
***
