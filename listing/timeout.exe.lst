mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call ds:time  +
xor eax eax +
pop ecx  +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi 1F5h +
push esi  +
call sub_1003774  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1002866  +
inc esi  +
cmp esi 20Ch +
jbe loc_1001378  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 114h +
mov eax dword_1007008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov esi offset aNobreak +
lea edi [ebp+var_14] +
movs   +
movs   +
mov [ebp+var_108] eax +
mov eax [ebp+arg_C] +
push 8  +
movs   +
mov [ebp+var_110] eax +
mov ebx offset aParser2 +
push ebx  +
lea eax [ebp+dwErrCode] +
push eax  +
mov [ebp+var_10C] 74h +
movs   +
mov [ebp+var_114] 3Fh +
call sub_100279D  +
xor esi esi +
lea eax [ebp+var_114] +
mov [ebp+var_E4] eax +
mov eax [ebp+arg_8] +
push 8  +
mov [ebp+var_D8] eax +
xor edi edi +
push ebx  +
lea eax [ebp+var_B4] +
inc edi  +
push eax  +
mov [ebp+var_FC] 0Ah +
mov [ebp+var_E0] esi +
mov [ebp+var_DC] esi +
mov [ebp+var_F4] 20000h +
mov [ebp+var_F0] esi +
mov [ebp+var_EC] edi +
mov [ebp+var_E8] esi +
mov [ebp+var_D4] 0FEh +
mov [ebp+var_D0] esi +
mov [ebp+var_CC] esi +
mov [ebp+var_C8] esi +
mov [ebp+var_C4] esi +
mov [ebp+var_C0] esi +
mov [ebp+var_BC] esi +
call sub_100279D  +
lea eax [ebp+var_10C] +
mov [ebp+var_94] eax +
mov eax [ebp+arg_10] +
push 8  +
mov [ebp+var_88] eax +
push ebx  +
lea eax [ebp+var_64] +
push eax  +
mov [ebp+var_AC] edi +
mov [ebp+var_90] esi +
mov [ebp+var_8C] esi +
mov [ebp+var_A4] 400C0h +
mov [ebp+var_A0] esi +
mov [ebp+var_9C] edi +
mov [ebp+var_98] esi +
mov [ebp+var_84] 0FEh +
mov [ebp+var_80] esi +
mov [ebp+var_7C] esi +
mov [ebp+var_78] esi +
mov [ebp+var_74] esi +
mov [ebp+var_70] esi +
mov [ebp+var_6C] esi +
call sub_100279D  +
lea eax [ebp+var_14] +
mov [ebp+var_44] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_5C] 0Ah +
mov [ebp+var_40] esi +
mov [ebp+var_3C] esi +
mov [ebp+var_54] esi +
mov [ebp+var_50] esi +
mov [ebp+var_4C] edi +
mov [ebp+var_48] esi +
mov [ebp+var_38] eax +
push esi  +
lea eax [ebp+dwErrCode] +
push eax  +
push 3  +
push 0FFFFFFFFh  +
push [ebp+var_108]  +
mov [ebp+var_34] 0FEh +
push [ebp+arg_0]  +
mov [ebp+var_30] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_28] esi +
mov [ebp+var_24] esi +
mov [ebp+var_20] esi +
mov [ebp+var_1C] esi +
call sub_10046FD  +
test eax eax +
jz loc_100155C  +
mov eax [ebp+var_98] +
mov ecx [ebp+var_110] +
mov [ecx] eax +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005712  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_10015A8  +
push offset String  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1002866  +
call sub_10026FA  +
push 0  +
push 0  +
call ds:SetConsoleCtrlHandler  +
push 1  +
call ds:ExitProcess  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor edi edi +
push 0FFFFFFF6h  +
inc edi  +
call ds:GetStdHandle  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_10015EA  +
push esi  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_10015EA  +
lea eax [ebp+Mode] +
push eax  +
push esi  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_10015EA  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100160B  +
cmp ecx 7FFFFFFFh +
jbe loc_1001610  +
mov eax 80070057h +
test eax eax +
jl loc_100164D  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100163D  +
cmp eax esi +
ja loc_100163D  +
jnz loc_1001648  +
jmp loc_1001642  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48Ch +
mov eax dword_1007008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi 1F8h +
push esi  +
mov [ebp+var_424] eax +
lea eax [ebp+var_214] +
push ebx  +
push eax  +
mov [ebp+var_418] ebx +
mov [ebp+var_448] ebx +
mov [ebp+var_420] ebx +
mov [ebp+var_438] ebx +
mov dword ptr [ebp+String] ebx +
call memset  +
xor eax eax +
mov dword ptr [ebp+var_1C] ebx +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
push esi  +
stos   +
lea eax [ebp+var_410] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_41C] ebx +
mov dword ptr [ebp+var_414] ebx +
call memset  +
add esp 18h +
xor eax eax +
push 9  +
mov [ebp+dwCursorPosition.X] ax +
lea edi [ebp+dwCursorPosition.Y] +
stos   +
pop ecx  +
mov [ebp+Buffer.EventType] ax +
lea edi [ebp+Buffer.Event] +
push ebx  +
mov [ebp+lpString] ebx +
mov [ebp+hConsoleOutput] ebx +
mov [ebp-428h] ebx +
mov [ebp+NumberOfEventsRead] ebx +
stos   +
call ds:SetThreadUILanguage  +
push ebx  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push ebx  +
call ds:HeapSetInformation  +
cmp [ebp+var_424] ebx +
jnz loc_100174F  +
push 57h  +
call ds:SetLastError  +
call sub_1001E85  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100378C  +
jmp loc_1001C95  +
lea eax [ebp+var_420] +
push eax  +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+var_448] +
push eax  +
lea eax [ebp+var_438] +
push eax  +
push [ebp+var_424]  +
push [ebp+arg_0]  +
call sub_100139E  +
test eax eax +
jnz loc_1001796  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100378C  +
jmp loc_1001C90  +
cmp [ebp+var_448] ebx +
jnz loc_10017B6  +
cmp [ebp+var_420] ebx +
jnz loc_10017AE  +
cmp [ebp+var_438] ebx +
jz loc_10017C4  +
cmp [ebp+var_420] edi +
jz loc_10017C4  +
cmp [ebp+var_438] edi +
jnz loc_10017F3  +
cmp [ebp+arg_0] 2 +
jbe loc_10017EC  +
push 9Bh  +
call sub_1003774  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1002866  +
mov ebx edi +
call sub_10026FA  +
mov eax ebx +
jmp loc_1001C97  +
call sub_1001370  +
jmp loc_10017E0  +
mov esi ds:_errno +
call esi  +
mov [eax] ebx +
push 0Ah  +
lea eax [ebp+lpString] +
push eax  +
lea eax [ebp+var_414] +
push eax  +
call ds:wcstol  +
add esp 0Ch +
mov [ebp+var_43C] eax +
cmp [ebp+lpString] ebx +
jz loc_1001838  +
push ebx  +
push [ebp+lpString]  +
call sub_100207B  +
test eax eax +
jnz loc_1001C76  +
call esi  +
cmp dword ptr [eax] 22h +
jz loc_1001C76  +
mov eax [ebp+var_43C] +
inc eax  +
cmp eax 186A0h +
ja loc_1001C76  +
lea eax [ebp+var_418] +
push eax  +
call sub_1001355  +
test eax eax +
jz loc_10017DE  +
mov esi ds:SetConsoleCtrlHandler +
cmp [ebp+var_420] edi +
jnz loc_10018A5  +
push edi  +
push offset HandlerRoutine  +
call esi  +
test eax eax +
jnz loc_10018A5  +
push 10001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100378C  +
call sub_10026FA  +
push ebx  +
push ebx  +
call esi  +
jmp loc_1001C95  +
call sub_10015B3  +
cmp eax edi +
jnz loc_10018CA  +
push 259h  +
call sub_1003774  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1002866  +
jmp loc_1001897  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
mov edi eax +
lea eax [ebp-428h] +
push eax  +
push edi  +
mov [ebp+hConsoleInput] edi +
call ds:GetConsoleMode  +
test eax eax +
jnz loc_1001911  +
push 10001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100378C  +
call sub_10026FA  +
push ebx  +
push ebx  +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1001C97  +
and dword ptr [ebp-428h] 0FFFFFFE1h +
push dword ptr [ebp-428h]  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_10018EC  +
lea eax [ebp+NumberOfEventsRead] +
push eax  +
push edi  +
call ds:GetNumberOfConsoleInputEvents  +
test eax eax +
jz loc_10018EC  +
push edi  +
call ds:FlushConsoleInputBuffer  +
test eax eax +
jz loc_10018EC  +
mov edi [ebp+var_43C] +
cmp edi 0FFFFFFFFh +
jnz loc_100198E  +
cmp [ebp+var_420] ebx +
jnz loc_1001960  +
push 97h  +
jmp loc_1001965  +
push 9Dh  +
call sub_1003774  +
mov edi ds:__iob_func +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_1002866  +
mov eax [ebp+var_418] +
inc eax  +
mov [ebp+var_424] eax +
jmp loc_1001AE1  +
mov eax [ebp+var_418] +
add eax edi +
cmp edi 0Ah +
mov [ebp+var_424] eax +
jge loc_10019AD  +
mov dword ptr [ebp+var_41C] 1 +
jmp loc_10019E6  +
cmp edi 64h +
jge loc_10019BE  +
mov dword ptr [ebp+var_41C] 2 +
jmp loc_10019E6  +
cmp edi 3E8h +
jge loc_10019D2  +
mov dword ptr [ebp+var_41C] 3 +
jmp loc_10019E6  +
xor eax eax +
cmp edi 2710h +
setnl al  +
add eax 4 +
mov dword ptr [ebp+var_41C] eax +
push 0Ch  +
push dword ptr [ebp+var_41C]  +
lea eax [ebp+var_1C] +
push offset asc_10011DC  +
push eax  +
call sub_1002D58  +
test eax eax +
jnz loc_1001A0A  +
push 20001h  +
jmp loc_10018F1  +
mov ecx 1FCh +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001A15  +
push edi  +
push dword ptr [ebp+var_41C]  +
push 98h  +
call sub_1003774  +
push eax  +
lea eax [ebp+String] +
push 0FEh  +
push eax  +
call sub_10015F5  +
add esp 14h +
cmp eax ebx +
jge loc_1001A59  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_1001E85  +
jmp loc_10018EC  +
mov edi ds:__iob_func +
lea eax [ebp+String] +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_1002866  +
push 16h  +
pop ecx  +
lea eax [ebp+ConsoleScreenBufferInfo] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001A7A  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov [ebp+hConsoleOutput] eax +
cmp eax ebx +
jz loc_1001AA0  +
lea ecx [ebp+ConsoleScreenBufferInfo] +
push ecx  +
push eax  +
call ds:GetConsoleScreenBufferInfo  +
mov ax [ebp+ConsoleScreenBufferInfo.dwCursorPosition.X] +
mov [ebp+dwCursorPosition.X] ax +
mov ax [ebp+ConsoleScreenBufferInfo.dwCursorPosition.Y] +
mov [ebp+dwCursorPosition.Y] ax +
cmp [ebp+var_420] ebx +
jnz loc_1001ACB  +
push 0A0h  +
jmp loc_1001AD0  +
push 9Fh  +
call sub_1003774  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_1002866  +
lea eax [ebp+NumberOfEventsRead] +
push eax  +
push 2  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleInput]  +
call ds:PeekConsoleInputW  +
test eax eax +
jz loc_1001C6A  +
cmp [ebp+NumberOfEventsRead] ebx +
jbe loc_1001B84  +
lea eax [ebp+NumberOfEventsRead] +
push eax  +
push 2  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleInput]  +
call ds:ReadConsoleInputW  +
test eax eax +
jz loc_1001C6A  +
push 10h  +
pop eax  +
cmp ax [ebp+Buffer.EventType] +
jz loc_1001B84  +
push 11h  +
pop eax  +
cmp ax word ptr [ebp+Buffer.Event+6] +
jz loc_1001B84  +
cmp ax word ptr [ebp+Buffer.Event+8] +
jz loc_1001B84  +
cmp dword ptr [ebp+Buffer.Event+0Ch] 1 +
jz loc_1001B84  +
cmp dword ptr [ebp+Buffer.Event+0Ch] 4 +
jz loc_1001B84  +
cmp dword ptr [ebp+Buffer.Event] ebx +
jz loc_1001B84  +
push 12h  +
pop eax  +
cmp ax word ptr [ebp+Buffer.Event+6] +
jz loc_1001B84  +
cmp [ebp+var_420] ebx +
jz loc_1001C3E  +
cmp [ebp+var_43C] 0FFFFFFFFh +
jz loc_1001C24  +
mov eax [ebp+var_418] +
mov [ebp+var_44C] eax +
lea eax [ebp+var_418] +
push eax  +
call sub_1001355  +
test eax eax +
jz loc_1001900  +
mov edx [ebp+var_418] +
cmp [ebp+var_44C] edx +
jz loc_1001C24  +
mov ecx 1FCh +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001BCA  +
mov eax [ebp+var_424] +
sub eax edx +
push eax  +
push dword ptr [ebp+var_41C]  +
lea eax [ebp+var_1C] +
push eax  +
push offset aSLu  +
lea eax [ebp+String] +
push 0FEh  +
push eax  +
call sub_10015F5  +
add esp 18h +
cmp eax ebx +
jl loc_1001C5B  +
push dword ptr [ebp+dwCursorPosition.X]  +
push [ebp+hConsoleOutput]  +
call ds:SetConsoleCursorPosition  +
lea eax [ebp+String] +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_1002866  +
push 64h  +
call ds:Sleep  +
mov eax [ebp+var_424] +
cmp [ebp+var_418] eax +
jl loc_1001AE1  +
push offset String  +
call edi  +
add eax 20h +
push eax  +
call sub_1002866  +
call sub_10026FA  +
push ebx  +
push ebx  +
call esi  +
xor eax eax +
jmp loc_1001C97  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_1001E85  +
push 10001h  +
call edi  +
jmp loc_10018F7  +
push 258h  +
call sub_1003774  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1002866  +
call sub_10026FA  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005712  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_1007028 edi +
jnz loc_1001CE4  +
push dword_1007030  +
call sub_1004A64  +
test eax eax +
jnz loc_1001CE0  +
call ds:GetLastError  +
test eax eax +
jnz loc_1001D78  +
push 42Bh  +
jmp loc_1001D72  +
mov eax edi +
pop edi  +
retn   +
cmp dword_1007030 0 +
jnz loc_1001CC8  +
call sub_1004A85  +
push eax  +
mov dword_1007030 eax +
call sub_1004A64  +
test eax eax +
jz loc_1001D66  +
push 0  +
push offset dword_10011E4  +
push dword_1007030  +
call sub_1004DA7  +
test eax eax +
jnz loc_1001D66  +
push 3  +
push dword_1007030  +
call sub_1004F72  +
cmp eax edi +
jnz loc_1001D66  +
push 3  +
push dword_1007030  +
call sub_1004F72  +
cmp eax 2 +
jnz loc_1001D66  +
push 3  +
push dword_1007030  +
call sub_1004F72  +
cmp eax 3 +
jnz loc_1001D66  +
push 0  +
mov dword_1007028 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1001D78  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1007028 0 +
push esi  +
jz loc_1001DE6  +
push 3  +
push dword_1007030  +
call sub_10050CD  +
cmp eax [ebp+arg_0] +
jbe loc_1001DE6  +
push [ebp+arg_0]  +
push 3  +
push dword_1007030  +
call sub_1005364  +
test eax eax +
jz loc_1001DE6  +
push [ebp+arg_0]  +
push 3  +
push dword_1007030  +
call sub_1005169  +
mov esi eax +
test esi esi +
jz loc_1001DE6  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1001DE6  +
mov eax [esi+0Ch] +
jmp loc_1001DE8  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_1007030 +
test eax eax +
jz loc_1001E13  +
push eax  +
call sub_1004A64  +
test eax eax +
jz loc_1001E13  +
push 0  +
push dword_1007030  +
call sub_100513A  +
retn   +
mov eax offset dword_10011E4 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1001E47  +
call esi  +
test eax eax +
jnz loc_1001E43  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1001E7A  +
call sub_1001CAB  +
test eax eax +
jz loc_1001E43  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_1007030  +
call sub_1005222  +
test eax eax +
jnz loc_1001E70  +
call esi  +
test eax eax +
jnz loc_1001E43  +
push 8  +
jmp loc_1001E3D  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1001CAB  +
test eax eax +
jz loc_1001F04  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1001EDE  +
cmp [ebp+hMem] edi +
jz loc_1001EF6  +
push [ebp+hMem]  +
call sub_1001E1E  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1001F02  +
cmp [ebp+hMem] edi +
jz loc_1001EF6  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1001EF6  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1001F00  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1001E85  +
test eax eax +
jz loc_1001F2E  +
call sub_1001DF2  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1002866  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1007008 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_1007000 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_1007004 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_1007034 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1005712  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1001FF4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1001FF0  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1002071  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1002065  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1002065  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_100206D  +
sub edi 0 +
jz loc_1002041  +
dec edi  +
jz loc_100203D  +
dec edi  +
jnz loc_100206D  +
push 0FFFFFFF4h  +
jmp loc_1002043  +
push 0FFFFFFF5h  +
jmp loc_1002043  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_100206D  +
cmp eax 0FFFFFFFFh +
jz loc_100206D  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100206F  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_100208A  +
xor eax eax +
jmp loc_1002093  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_10020DA  +
cmp [ebp+lpString2] 0 +
jz loc_10020DA  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_10020C0  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_10020EE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10020EC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1002135  +
cmp [ebp+lpString2] 0 +
jz loc_1002135  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_100211B  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1002149  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002147  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_100216B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100218D  +
push 57h  +
jmp loc_1002187  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_100218D  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_100218F  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_10021BE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002232  +
push 57h  +
call ds:SetLastError  +
jmp loc_1002232  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1002232  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1002234  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1002219  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1002219  +
push 570h  +
call ds:SetLastError  +
call sub_1001E85  +
jmp loc_100222B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100222B  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1002263  +
call ds:GetLastError  +
test eax eax +
jnz loc_100225E  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1002285  +
push [ebp+lpMem]  +
call sub_1002152  +
test eax eax +
jz loc_100225E  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_100225E  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10022BE  +
cmp [ebp+arg_4] eax +
jz loc_10022BA  +
mov dl [ebx] +
test dl dl +
jz loc_10022BA  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10022A2  +
test esi esi +
jnz loc_10022C5  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10022D1  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1002312  +
cmp [ebp+arg_4] eax +
jz loc_100230E  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_100230E  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10022F1  +
test esi esi +
jnz loc_100231A  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002328  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100235D  +
cmp eax esi +
ja loc_100235D  +
jz loc_1002362  +
jmp loc_100236A  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002373  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_100239B  +
call ds:GetLastError  +
test eax eax +
jnz loc_10023DE  +
push 57h  +
jmp loc_10023D8  +
push 0  +
push esi  +
call sub_100207B  +
test eax eax +
jz loc_10023D3  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_10023D3  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_10023C3  +
call ds:StrChrIW  +
jmp loc_10023C9  +
call ds:StrChrW  +
test eax eax +
jz loc_10023D3  +
sub eax esi +
sar eax 1 +
jmp loc_10023E1  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1002452  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1002452  +
push 0  +
push edi  +
call sub_100207B  +
push 0  +
push ebx  +
mov esi eax +
call sub_100207B  +
test eax eax +
jz loc_1002445  +
test esi esi +
jz loc_1002445  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_1002445  +
sub esi ecx +
cmp esi eax +
jb loc_1002445  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_100243B  +
call ds:StrStrIW  +
jmp loc_1002441  +
call ds:StrStrW  +
test eax eax +
jnz loc_100244C  +
push 490h  +
jmp loc_100245E  +
sub eax edi +
sar eax 1 +
jmp loc_1002467  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002464  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1002496  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002492  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10024E4  +
cmp dword ptr [esi] 0 +
jnz loc_10024A0  +
xor eax eax +
inc eax  +
jmp loc_10024E4  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_10024C4  +
push dword ptr [esi]  +
call sub_1002241  +
cmp eax 0FFFFFFFFh +
jnz loc_10024C8  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10024E3  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_10025B3  +
mov eax [esi] +
cmp eax edi +
jz loc_10025B3  +
cmp [ebp+dwBytes] edi +
jnz loc_1002521  +
push esi  +
call sub_1002473  +
jmp loc_10025C7  +
push eax  +
call sub_1002152  +
test eax eax +
jnz loc_1002532  +
mov [esi] edi +
jmp loc_10025C5  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_10025C5  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_1002570  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002567  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10025C5  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_10025C7  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1002555  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1002555  +
push 570h  +
call ds:SetLastError  +
call sub_1001E85  +
jmp loc_1002567  +
call ds:GetLastError  +
test eax eax +
jnz loc_10025C5  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10025EA  +
cmp edx 7FFFFFFFh +
jbe loc_10025EF  +
mov eax 80070057h +
test eax eax +
jl loc_1002605  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_100228E  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1002624  +
cmp edx 7FFFFFFFh +
jbe loc_1002629  +
mov eax 80070057h +
test eax eax +
jl loc_100263F  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10022DD  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_1002661  +
cmp edx ebx +
jbe loc_1002666  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_100269D  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_100268A  +
cmp [eax] cx +
jz loc_1002686  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_100267C  +
cmp esi ecx +
jnz loc_1002693  +
mov [ebp+arg_4] 80070057h +
jmp loc_1002697  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_100269F  +
xor ecx ecx +
test eax eax +
jl loc_10026B3  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_10022DD  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10026D3  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10026D8  +
mov eax 80070057h +
test eax eax +
jl loc_10026F1  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1002334  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_1007030  +
call sub_1004A64  +
cmp eax 1 +
jnz loc_1002784  +
push edi  +
push 3  +
push dword_1007030  +
call sub_10050CD  +
mov edi eax +
test edi edi +
jz loc_1002779  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_1007030  +
call sub_1005364  +
cmp eax 10000h +
jnz loc_1002772  +
push esi  +
push 3  +
push dword_1007030  +
call sub_1005169  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1002772  +
add eax 0Ch +
push eax  +
call sub_1002473  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002473  +
push esi  +
push 3  +
push dword_1007030  +
call sub_1005096  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1002728  +
pop esi  +
push offset dword_1007030  +
call sub_1004AFA  +
pop edi  +
cmp dword_100702C 1 +
jnz loc_1002793  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10027D0  +
cmp [ebp+arg_4] 0 +
jz loc_10027D0  +
cmp [ebp+arg_8] 0 +
jle loc_10027D0  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10025D4  +
test eax eax +
jge loc_10027D6  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10027D2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1002813  +
cmp [ebp+arg_4] 0 +
jz loc_1002813  +
cmp [ebp+arg_8] 0 +
jle loc_1002813  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100260E  +
test eax eax +
jge loc_1002819  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1002815  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1002856  +
cmp [ebp+arg_4] 0 +
jz loc_1002856  +
cmp [ebp+arg_8] 0 +
jle loc_1002856  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1002648  +
test eax eax +
jge loc_100285C  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1002858  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_1002AAB  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_1002AAB  +
push [ebp+hConsoleOutput]  +
call sub_1001FCD  +
cmp eax 1 +
jnz loc_1002998  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_10028AF  +
push 0FFFFFFF5h  +
jmp loc_10028BF  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1002980  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_100207B  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_10028F3  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1002958  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_100297C  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_100207B  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1002958  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_100292A  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1002960  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1002960  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_100291A  +
xor eax eax +
inc eax  +
jmp loc_1002ABF  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1001F0C  +
call sub_10026FA  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1002966  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002ABD  +
push 42Bh  +
jmp loc_1002AB7  +
push edi  +
push ebx  +
call sub_100207B  +
push 100h  +
push edi  +
mov esi offset unk_1007040 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_1002958  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_10029D8  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1002A35  +
cmp eax ebx +
jbe loc_1002A43  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_1002A15  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_1002A18  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_10029E1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002A35  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1002969  +
cmp eax [ebp+cchWideChar] +
jnb loc_1002A4B  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1002A35  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_10029C3  +
jmp loc_1002958  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002ABD  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1002AE3  +
cmp [ebp+arg_8] 0 +
jnz loc_1002AE3  +
xor eax eax +
jmp loc_1002C37  +
call sub_1001CAB  +
test eax eax +
jz loc_1002ADC  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_1007030  +
call sub_10050CD  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_1002B30  +
push esi  +
push dword_1007030  +
call sub_1005101  +
test eax eax +
jz loc_1002BFB  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_1004FED  +
cmp eax 0FFFFFFFFh +
jz loc_1002BFB  +
push ebx  +
push esi  +
push dword_1007030  +
call sub_1005364  +
mov edi offset aBuffer +
test eax eax +
jz loc_1002B7E  +
push ebx  +
push esi  +
push dword_1007030  +
call sub_1005169  +
mov esi eax +
test esi esi +
jz loc_1002BFB  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1002BFB  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1002BBD  +
mov edi [ebp+arg_8] +
jmp loc_1002BC8  +
push 10h  +
call sub_1002198  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1002BFB  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_100279D  +
push esi  +
push ebx  +
push 3  +
push dword_1007030  +
call sub_10052CB  +
test eax eax +
jnz loc_1002B5D  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1002473  +
jmp loc_1002BFB  +
push 0  +
push ebx  +
call sub_100207B  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_1002BDE  +
cmp edi 100h +
jbe loc_1002BF5  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1002BF5  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1002BFF  +
call sub_1002198  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1002BFB  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1002C0A  +
xor eax eax +
jmp loc_1002C34  +
lea eax [esi+0Ch] +
push eax  +
call sub_10024EE  +
jmp loc_1002BEE  +
test ebx ebx +
jz loc_1002C1A  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10027E0  +
jmp loc_1002C31  +
cmp [ebp+arg_C] 1 +
jnz loc_1002C31  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1007008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_10011F4 +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_1002D3D  +
push eax  +
push ebx  +
call sub_100207B  +
test eax eax +
jz loc_1002D3D  +
cmp [ebp+lpStart] 0 +
jz loc_1002C9C  +
push 0  +
push [ebp+lpStart]  +
call sub_100207B  +
test eax eax +
jnz loc_1002CA2  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_1002CB1  +
cmp edi 1 +
jnz loc_1002CD3  +
cmp word ptr [ebx] 0 +
jz loc_1002CD0  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1002CD0  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1002CB7  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_1002CDD  +
cmp edi 2 +
jnz loc_1002D1F  +
cmp edi 2 +
jnz loc_1002CE4  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1002D1F  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1002D05  +
cmp [ebp+var_14] 0 +
jnz loc_1002D09  +
mov [ebp+var_14] esi +
jmp loc_1002D09  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1002CEC  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_1002D1F  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_1002D39  +
push 0  +
push [ebp+var_18]  +
call sub_100207B  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_10027E0  +
mov eax ebx +
jmp loc_1002D42  +
mov eax offset dword_10011E4 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005712  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1002D9A  +
cmp [ebp+arg_4] edi +
jz loc_1002D9A  +
push [ebp+arg_C]  +
push offset dword_10011E4  +
push esi  +
call sub_10027E0  +
cmp [ebp+arg_8] edi +
jbe loc_1002D96  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
call sub_1002823  +
test eax eax +
jz loc_1002D96  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_1002D80  +
mov eax esi +
jmp loc_1002DB1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002DAC  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_10011E4 +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1002DDF  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002DDB  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1002E46  +
cmp [ebp+arg_0] esi +
jnz loc_1002DF1  +
push [ebp+arg_4]  +
call sub_1001E1E  +
xor eax eax +
inc eax  +
jmp loc_1002E46  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_1002ACB  +
mov edi eax +
test edi edi +
jz loc_1002E31  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_10026BE  +
cmp eax 8007007Ah +
jz loc_1002DF2  +
test eax eax +
jge loc_1002E3F  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1002E45  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002E2D  +
push 8  +
jmp loc_1002E27  +
push edi  +
call sub_1001E1E  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_1002E7B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002E71  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_10011E4 +
jmp loc_1002F88  +
call sub_1001CAB  +
test eax eax +
jz loc_1002E71  +
push esi  +
push 1  +
push dword_1007030  +
call sub_10050CD  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1002ED8  +
push 1  +
push dword_1007030  +
call sub_1005101  +
cmp eax ebx +
jz loc_1002EBC  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_1004FED  +
cmp eax 0FFFFFFFFh +
jnz loc_1002ED8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002ECE  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_10011E4 +
jmp loc_1002F87  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_1002ACB  +
mov edi eax +
cmp edi ebx +
jz loc_1002F4C  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_1002F2F  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_1002F5E  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_1002F5E  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1002EDE  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_1007030  +
call sub_1005305  +
test eax eax +
jnz loc_1002F65  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002F5E  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_10011E4 +
jmp loc_1002F86  +
cmp [ebp+lpString] ebx +
jz loc_1002F76  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_1007030  +
call sub_10051A0  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_1003137  +
push ebx  +
push [ebp+lpString]  +
call sub_100207B  +
test eax eax +
jz loc_1003137  +
call sub_1001CAB  +
test eax eax +
jz loc_1003149  +
call sub_1001CAB  +
test eax eax +
jz loc_10030F1  +
push 3  +
pop esi  +
push esi  +
push dword_1007030  +
call sub_10050CD  +
mov edi eax +
cmp edi ebx +
ja loc_1003014  +
push esi  +
push dword_1007030  +
call sub_1005101  +
cmp eax ebx +
jz loc_10030F1  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1004FED  +
cmp eax 0FFFFFFFFh +
jz loc_10030F1  +
push ebx  +
push esi  +
push dword_1007030  +
call sub_1005364  +
mov edi offset aBuffer +
test eax eax +
jz loc_100308C  +
push ebx  +
push esi  +
push dword_1007030  +
call sub_1005169  +
mov esi eax +
cmp esi ebx +
jz loc_10030F1  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10030F1  +
push ebx  +
push [ebp+lpString]  +
call sub_100207B  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1003078  +
cmp edi 100h +
jbe loc_10030D9  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_10030D9  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_10030C9  +
call sub_1002198  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_10030D4  +
push 10h  +
call sub_1002198  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10030F1  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100279D  +
push esi  +
push ebx  +
push 3  +
push dword_1007030  +
call sub_10052CB  +
test eax eax +
jnz loc_1003041  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002473  +
jmp loc_10030F1  +
lea eax [esi+0Ch] +
push eax  +
call sub_10024EE  +
test eax eax +
jz loc_10030F1  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10030F1  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10027E0  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10030FF  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003149  +
push 8  +
jmp loc_1003143  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1003137  +
cmp [ebp+var_4] ebx +
jz loc_1003132  +
push ebx  +
push [ebp+var_4]  +
call sub_100207B  +
test eax eax +
jnz loc_1003137  +
fld  qword ptr [ebp-0Ch] +
jmp loc_100314B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003149  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_1002F92  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_1003340  +
cmp [ebp+lpString] ebx +
jz loc_1003340  +
call sub_1001CAB  +
test eax eax +
jz loc_1003352  +
call sub_1001CAB  +
test eax eax +
jz loc_10032D6  +
push 3  +
pop esi  +
push esi  +
push dword_1007030  +
call sub_10050CD  +
mov edi eax +
cmp edi ebx +
ja loc_10031F9  +
push esi  +
push dword_1007030  +
call sub_1005101  +
cmp eax ebx +
jz loc_10032D6  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1004FED  +
cmp eax 0FFFFFFFFh +
jz loc_10032D6  +
push ebx  +
push esi  +
push dword_1007030  +
call sub_1005364  +
mov edi offset aBuffer +
test eax eax +
jz loc_1003271  +
push ebx  +
push esi  +
push dword_1007030  +
call sub_1005169  +
mov esi eax +
cmp esi ebx +
jz loc_10032D6  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10032D6  +
push ebx  +
push [ebp+lpString]  +
call sub_100207B  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100325D  +
cmp edi 100h +
jbe loc_10032BE  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_10032BE  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_10032AE  +
call sub_1002198  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_10032B9  +
push 10h  +
call sub_1002198  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10032D6  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100279D  +
push esi  +
push ebx  +
push 3  +
push dword_1007030  +
call sub_10052CB  +
test eax eax +
jnz loc_1003226  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002473  +
jmp loc_10032D6  +
lea eax [esi+0Ch] +
push eax  +
call sub_10024EE  +
test eax eax +
jz loc_10032D6  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10032D6  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10027E0  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10032E4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003352  +
push 8  +
jmp loc_100334C  +
push 3  +
push ebx  +
push esi  +
call sub_1002C40  +
push ebx  +
push esi  +
call sub_100207B  +
test eax eax +
jz loc_1003340  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_1003318  +
call ds:wcstol  +
jmp loc_100331E  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1003340  +
cmp [ebp+var_4] ebx +
jz loc_100333C  +
push ebx  +
push [ebp+var_4]  +
call sub_100207B  +
test eax eax +
jnz loc_1003340  +
mov eax esi +
jmp loc_1003354  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003352  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_1003523  +
cmp [ebp+lpString] ebx +
jz loc_1003523  +
call sub_1001CAB  +
test eax eax +
jz loc_10034AF  +
push 3  +
pop esi  +
push esi  +
push dword_1007030  +
call sub_10050CD  +
mov edi eax +
cmp edi ebx +
ja loc_10033D2  +
push esi  +
push dword_1007030  +
call sub_1005101  +
cmp eax ebx +
jz loc_10034AF  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1004FED  +
cmp eax 0FFFFFFFFh +
jz loc_10034AF  +
push ebx  +
push esi  +
push dword_1007030  +
call sub_1005364  +
mov edi offset aBuffer +
test eax eax +
jz loc_100344A  +
push ebx  +
push esi  +
push dword_1007030  +
call sub_1005169  +
mov esi eax +
cmp esi ebx +
jz loc_10034AF  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10034AF  +
push ebx  +
push [ebp+lpString]  +
call sub_100207B  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1003436  +
cmp edi 100h +
jbe loc_1003497  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1003497  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1003487  +
call sub_1002198  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1003492  +
push 10h  +
call sub_1002198  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10034AF  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100279D  +
push esi  +
push ebx  +
push 3  +
push dword_1007030  +
call sub_10052CB  +
test eax eax +
jnz loc_10033FF  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002473  +
jmp loc_10034AF  +
lea eax [esi+0Ch] +
push eax  +
call sub_10024EE  +
test eax eax +
jz loc_10034AF  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10034AF  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10027E0  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10034BD  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003535  +
push 8  +
jmp loc_100352F  +
push 3  +
push ebx  +
push esi  +
call sub_1002C40  +
push ebx  +
push esi  +
call sub_100207B  +
test eax eax +
jz loc_1003535  +
cmp [ebp+arg_8] ebx +
jnz loc_10034DC  +
cmp word ptr [esi] 2Dh +
jz loc_1003535  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10034FC  +
call ds:wcstol  +
jmp loc_1003502  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1003535  +
cmp [ebp+var_4] ebx +
jz loc_100351E  +
push ebx  +
push [ebp+var_4]  +
call sub_100207B  +
test eax eax +
jnz loc_1003535  +
xor eax eax +
inc eax  +
jmp loc_1003537  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003535  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_1003601  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_1003601  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_100207B  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_1002ACB  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1003592  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003613  +
push 8  +
jmp loc_100360D  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_100207B  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_1002ACB  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1003580  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_0 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_10015F5  +
add esp 10h +
test eax eax +
jge loc_10035D1  +
movzx eax ax +
push eax  +
jmp loc_100360D  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_10015F5  +
add esp 10h +
test eax eax +
jl loc_10035CB  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_10023EB  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_1003615  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003613  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_1003728  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_1003728  +
cmp [ebp+arg_4] ebx +
jnz loc_1003653  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1002866  +
jmp loc_100373C  +
cmp [ebp+arg_8] ebx +
jnz loc_10036E8  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_1002ACB  +
mov edi eax +
test edi edi +
jz loc_10036D5  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_10036C5  +
call ds:GetLastError  +
test eax eax +
jz loc_10036E3  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_100373A  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_1003660  +
push edi  +
jmp loc_1003646  +
call ds:GetLastError  +
test eax eax +
jnz loc_100373A  +
push 8  +
jmp loc_1003734  +
xor eax eax +
inc eax  +
jmp loc_100373C  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_1002ACB  +
mov edi eax +
test edi edi +
jz loc_10036D5  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_10026BE  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_10036E8  +
test eax eax +
jge loc_10036CF  +
movzx eax ax +
push eax  +
jmp loc_1003734  +
call ds:GetLastError  +
test eax eax +
jnz loc_100373A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_100703C  +
mov eax dword_100703C +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_1002E4E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_1003745  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1003808  +
test [ebp+arg_4] 0F0000h +
jz loc_1003808  +
test [ebp+arg_4] 10000h +
jz loc_10037B0  +
call sub_1001E85  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_10037C2  +
push 1389h  +
jmp loc_10037E1  +
test al 4 +
jz loc_10037CD  +
push 138Ah  +
jmp loc_10037E1  +
test al 2 +
jz loc_10037D8  +
push 138Ch  +
jmp loc_10037E1  +
test al 8 +
jz loc_10037F7  +
push 138Bh  +
call sub_1003774  +
push eax  +
push offset aS_1  +
push ebx  +
push ebx  +
push esi  +
call sub_1003621  +
add esp 14h +
call sub_1001DF2  +
push eax  +
push esi  +
call sub_1002866  +
mov eax ebx +
pop ebx  +
jmp loc_100381C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100381A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1003854  +
call ds:GetLastError  +
test eax eax +
jnz loc_100384C  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_100384C  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_1001210  +
call sub_1002380  +
cmp eax 0FFFFFFFFh +
jz loc_100384C  +
xor eax eax +
inc eax  +
jmp loc_100384E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_10038A2  +
movzx eax ds:byte_10038B1[eax] +
jmp ds:off_10038A9[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_10038A4  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_1003945  +
cmp [ebp+arg_4] ebx +
jnz loc_1003945  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1002380  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_10038FF  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_100207B  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_1002ACB  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_1003922  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003953  +
push 8  +
jmp loc_1003951  +
lea ecx [esi+1] +
push ecx  +
push offset asc_1001220  +
push eax  +
call sub_10027E0  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_1002823  +
mov eax [ebp+arg_4] +
jmp loc_1003955  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003953  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_100399A  +
cmp ecx edi +
jnz loc_100399A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003993  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_1003BFD  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1003985  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_1003BF9  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_1003C03  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset String2  +
push eax  +
call sub_10020F7  +
test eax eax +
jnz loc_1003AB5  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_1003AB5  +
cmp [edi+4] ebx +
jnz loc_1003AB5  +
cmp [edi+8] ebx +
jnz loc_1003AB5  +
cmp [edi+0Ch] ebx +
jnz loc_1003AB5  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1003A30  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_1003AB5  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_1003AB5  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_1003A45  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_1003AB5  +
mov edx eax +
or edx ecx +
jz loc_1003A56  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_1003AB5  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_1003A6B  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_1003AB5  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_1003A77  +
xor eax eax +
or ebx eax +
jnz loc_1003AB5  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_1003AB5  +
jmp ds:off_1003C25[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_1003ACE  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1003AB5  +
cmp [edi-10h] ecx +
jnz loc_1003AB5  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_1003AED  +
cmp eax 2 +
jnb loc_1003AED  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003AC7  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1003BFC  +
mov eax [edi-10h] +
test eax eax +
jz loc_1003AB5  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_1003AED  +
push dword ptr [eax]  +
call sub_1004A64  +
test eax eax +
jz loc_1003AB5  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1003AFD  +
cmp [edi-14h] ecx +
jz loc_1003AB5  +
xor eax eax +
or ebx eax +
jnz loc_1003BE3  +
cmp dword ptr [edi-24h] 1 +
jnz loc_1003AB5  +
and esi 20h +
or esi eax +
jnz loc_1003AB5  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_1003BE3  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_1003AB5  +
jmp loc_1003BE3  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_1003C1B  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_1003AB5  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_1003AB5  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_1003AB5  +
mov edx [edi-10h] +
test edx edx +
jz loc_1003AB5  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_1003B8B  +
push dword ptr [edx]  +
call sub_1004A64  +
test eax eax +
jz loc_1003AB5  +
jmp loc_1003BE3  +
cmp dword ptr [edi-24h] 1 +
ja loc_1003AB5  +
and esi 20h +
xor eax eax +
jmp loc_1003BDB  +
cmp dword ptr [edi-8] 0 +
jz loc_1003AB5  +
cmp dword ptr [edi-4] 0 +
jnz loc_1003BE3  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_1003BE3  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_1003AB5  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_1003AB5  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_1003AB5  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_10039B4  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003AC7  +
push 42Bh  +
jmp loc_1003AC1  +
push 78h  +
jmp loc_1003AC1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_1003C98  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003C8C  +
push 57h  +
call ebx  +
call sub_1001E85  +
xor eax eax +
jmp loc_10041FC  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_10041E6  +
cmp eax edi +
jz loc_10041E6  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_1003D37  +
cmp [ebp+lpString2] 0 +
jnz loc_1003D37  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_1003D37  +
cmp dword ptr [ebp+lpString] edx +
jz loc_1003D15  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1003D15  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1003774  +
push eax  +
push 2  +
call sub_1002DBC  +
add esp 10h +
jmp loc_1003D2B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003D26  +
push 42Bh  +
call ebx  +
call sub_1001E85  +
push 800401E4h  +
call ebx  +
jmp loc_10041F9  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_1003D4F  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_1003D5A  +
jmp loc_10041E6  +
cmp dword ptr [esi+24h] 0 +
jz loc_1003D60  +
cmp ecx 9 +
jz loc_1003D60  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_10041E6  +
jmp ds:off_1004202[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1003DCE  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_1003DCE  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_1002ACB  +
test eax eax +
jnz loc_1003DAE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10041F4  +
push 8  +
call ds:SetLastError  +
jmp loc_10041F4  +
push 3  +
push offset asc_10011F4  +
push eax  +
call sub_1002C40  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_10041F4  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1003E49  +
test ebx ebx +
jz loc_10041E1  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_1003543  +
test eax eax +
jnz loc_1003E49  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1003E20  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1003E20  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1003774  +
push eax  +
push 3  +
call sub_1002DBC  +
add esp 14h +
jmp loc_1003E39  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1003774  +
push eax  +
push 2  +
call sub_1002DBC  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_10041F9  +
test ebx ebx +
jz loc_10041E1  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1003EA2  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1003EA2  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1003E88  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1003E88  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_1003E29  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1003774  +
push eax  +
push 1  +
call sub_1002DBC  +
add esp 0Ch +
jmp loc_1003E39  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_1003EF2  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_1003ED5  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1005427  +
cmp eax 0FFFFFFFFh +
jnz loc_10041E1  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1004DA7  +
cmp eax 0FFFFFFFFh +
jnz loc_10041E1  +
jmp loc_1003D93  +
cmp [ebp+var_C] ecx +
jz loc_1003F31  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_1003F31  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1003F22  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1003F22  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_1003E29  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1003E90  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_1003F5B  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1002198  +
test eax eax +
jz loc_1003D93  +
mov [esi+2Ch] eax +
jmp loc_1003F61  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_10027E0  +
jmp loc_10041E1  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_10041E1  +
push 0  +
push ebx  +
call sub_100207B  +
test eax eax +
jz loc_100403A  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_1003360  +
test eax eax +
jz loc_100403A  +
push 0Ah  +
push ebx  +
call sub_100317A  +
cmp [ebp+var_C] 1 +
jnz loc_1003FBC  +
mov dword ptr [ebp+String2] eax +
jmp loc_1003FBF  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1004024  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_1003FFD  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1003FEA  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100539B  +
jmp loc_1003FF4  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_10053BE  +
cmp eax 0FFFFFFFFh +
jnz loc_10041E1  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1004015  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_1004E1E  +
jmp loc_1003EE4  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_1004E73  +
jmp loc_1003EE4  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_1004033  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_10041E1  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_100404C  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_10040A0  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100406E  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100406E  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_1003E29  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1003E90  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_10041E1  +
push ebx  +
call sub_1003157  +
test eax eax +
jnz loc_10040D9  +
and edi 10h +
or edi eax +
jz loc_10040AA  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_10040AA  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_10041FB  +
cmp dword ptr [ebp+lpString] eax +
jz loc_10040CC  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10040CC  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_1003E29  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1003E90  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_10040EA  +
call sub_1002F92  +
fstp  [ebp+var_18] +
jmp loc_10040F2  +
call sub_1002F92  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1004168  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_1004139  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1004122  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_10053E1  +
jmp loc_1004130  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1005404  +
cmp eax 0FFFFFFFFh +
jnz loc_10041E1  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1004155  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1004EC8  +
jmp loc_1003EE4  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1004F1D  +
jmp loc_1003EE4  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_1004178  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_10041E1  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_10041E1  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_10041FB  +
cmp [ebp+lpString2] 0 +
jz loc_10041D8  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_10041B9  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10041B9  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_1003E29  +
call ds:GetLastError  +
test eax eax +
jnz loc_10041CE  +
push 42Bh  +
call ds:SetLastError  +
call sub_1001E85  +
jmp loc_1003E39  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_10041FB  +
call ds:GetLastError  +
test eax eax +
jnz loc_10041F4  +
push 57h  +
call ebx  +
call sub_1001E85  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_10042F0  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_10042F0  +
cmp [ebp+arg_8] edi +
jz loc_10042F0  +
push [ebp+arg_8]  +
call sub_1003826  +
test eax eax +
jnz loc_1004275  +
push 490h  +
jmp loc_10042FC  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_100426B  +
add esi 20h +
jmp loc_1004284  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_10042D1  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_100429C  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_10042C1  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_10042C1  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_1003543  +
cmp eax 1 +
jz loc_10042EB  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_1004282  +
jmp loc_100426B  +
call ds:GetLastError  +
test eax eax +
jnz loc_10042E2  +
push 42Bh  +
call ebx  +
call sub_1001E85  +
xor eax eax +
jmp loc_1004301  +
mov eax [ebp+arg_4] +
jmp loc_1004301  +
call ds:GetLastError  +
test eax eax +
jnz loc_10042FE  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_10043E5  +
cmp [ebp+arg_4] edi +
jz loc_10043E5  +
cmp [ebp+lpString] edi +
jz loc_10043E5  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_10043E5  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1002380  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_10043F6  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_1002ACB  +
mov [esi] eax +
test eax eax +
jnz loc_100439C  +
call ds:GetLastError  +
test eax eax +
jnz loc_10043F3  +
push 8  +
call ds:SetLastError  +
jmp loc_10043F3  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_1002ACB  +
mov [esi+4] eax +
test eax eax +
jz loc_1004388  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_10027E0  +
test edi edi +
jz loc_10043D6  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_10027E0  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100422F  +
jmp loc_10043F6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10043F3  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_1004481  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_1004481  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1001DF2  +
test eax eax +
jnz loc_1004432  +
push 7  +
call sub_1001D81  +
jmp loc_100443E  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_1002ACB  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1004481  +
test ebx ebx +
jbe loc_100446B  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_1004465  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_1004465  +
push esi  +
call sub_1002473  +
add esi 50h +
dec ebx  +
jnz loc_100444C  +
push [ebp+arg_0]  +
call sub_1001E1E  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_1004483  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_1002ACB  +
mov ebx eax +
cmp ebx edi +
jz loc_1004512  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_1004524  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_10044BB  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_100452B  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_1004524  +
call esi  +
test eax eax +
jnz loc_1004524  +
push 57h  +
jmp loc_100451E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004524  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10046F1  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1002198  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_1004524  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_1004558  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1002473  +
jmp loc_1004524  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_100454D  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_1002ACB  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_100454D  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_10015F5  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_10045CF  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_100458D  +
cmp dword ptr [ebp+lpString] edi +
jz loc_100454D  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_100207B  +
cmp eax 4 +
ja loc_1004607  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1002473  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004524  +
push 42Bh  +
jmp loc_100451E  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_10023EB  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_1004641  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_10011E0 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_1004691  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_1002ACB  +
mov esi eax +
cmp esi edi +
jnz loc_1004678  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1002473  +
jmp loc_1004512  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS  +
push [ebp+dwLen]  +
push esi  +
call sub_10015F5  +
add esp 14h +
jmp loc_10046B1  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_100469F  +
push 7  +
call sub_1001D81  +
jmp loc_10046AB  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_1002ACB  +
mov esi eax +
cmp esi edi +
jz loc_100466A  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_1002ACB  +
mov esi eax +
cmp esi edi +
jz loc_100466A  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1003774  +
push eax  +
push 50h  +
push esi  +
call sub_10015F5  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_1002473  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_1004773  +
cmp [ebp+arg_4] ebx +
jz loc_1004773  +
cmp [ebp+arg_C] ebx +
jz loc_1004773  +
cmp [ebp+dwErrCode] ebx +
jz loc_1004773  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_1004773  +
call sub_1001F37  +
test eax eax +
jnz loc_1004753  +
push 157Fh  +
call sub_1003774  +
push eax  +
call sub_1001E1E  +
push 47Eh  +
call edi  +
jmp loc_100477C  +
call sub_1001CAB  +
test eax eax +
jz loc_1004777  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_100479B  +
cmp eax [ebp+arg_C] +
jl loc_1004785  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004777  +
push 57h  +
call edi  +
call sub_1001E85  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_10038C0  +
mov esi eax +
cmp esi ebx +
jz loc_1004777  +
push esi  +
call sub_100448E  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_1004777  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_1003961  +
test eax eax +
jz loc_1004777  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_10048FD  +
jmp loc_10047D2  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_10047EB  +
mov edi [ecx+4] +
jmp loc_10047ED  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100422F  +
cmp eax 0FFFFFFFFh +
jnz loc_1004832  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100430D  +
cmp eax 0FFFFFFFFh +
jnz loc_1004825  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_100493A  +
mov edi ebx +
xor ebx ebx +
jmp loc_100482B  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_100496D  +
test edi edi +
jz loc_100488D  +
cmp [ebp+arg_8] 2 +
jnz loc_100488D  +
push dword ptr [esi+8]  +
call sub_1003881  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_1004888  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100422F  +
cmp eax 0FFFFFFFFh +
jnz loc_100487F  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100430D  +
cmp eax 0FFFFFFFFh +
jz loc_100488D  +
mov [ebp+arg_8] 1 +
jmp loc_100488B  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_1003C52  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_10049E6  +
mov eax [esi+18h] +
test eax eax +
jz loc_10048C8  +
cmp eax [esi+1Ch] +
jz loc_100498B  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_10048E1  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_10047CF  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_100492F  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_100492F  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_10049D0  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_1004926  +
cmp [ecx+1Ch] ebx +
jz loc_10049F6  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_1004907  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_100477E  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1003774  +
push eax  +
push esi  +
call sub_1002DBC  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1004402  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100477C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004777  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_1004777  +
test ebx ebx +
jz loc_10049B8  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_10049B8  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1003774  +
push eax  +
push 3  +
call sub_1002DBC  +
add esp 14h +
jmp loc_1004952  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1003774  +
push eax  +
push 2  +
jmp loc_100494A  +
call ds:GetLastError  +
test eax eax +
jnz loc_10049E1  +
push 42Bh  +
call edi  +
call sub_1001E85  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1004402  +
jmp loc_100477C  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_1004A10  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_10049D0  +
mov edi [ecx+24h] +
jmp loc_1004A28  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_1004A26  +
push ebx  +
push eax  +
call sub_10038C0  +
mov edi eax +
test edi edi +
jnz loc_1004A2C  +
jmp loc_10049E1  +
mov edi ecx +
test edi edi +
jz loc_1004A42  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_1004A42  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_10049C3  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1003774  +
push eax  +
push 1  +
call sub_1002DBC  +
add esp 0Ch +
jmp loc_1004952  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1004A7A  +
cmp dword ptr [eax] 9 +
jnz loc_1004A7A  +
xor eax eax +
inc eax  +
jmp loc_1004A7C  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_1004A95  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1004A64  +
test eax eax +
jz loc_1004AF0  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1004AE4  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_1004BF1  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1002473  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_1004AC8  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_1004A64  +
test eax eax +
jz loc_1004B1B  +
push ecx  +
call sub_1004AAA  +
push esi  +
call sub_1002473  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1004A64  +
test eax eax +
jz loc_1004B3A  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1004A64  +
test eax eax +
jnz loc_1004B59  +
xor eax eax +
jmp loc_1004B7E  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_1004B55  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_1004B74  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_1004B6C  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1004B7D  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1004A64  +
test eax eax +
jnz loc_1004B9F  +
or eax 0FFFFFFFFh +
jmp loc_1004BE7  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_1004B9A  +
push 14h  +
call sub_1002198  +
test eax eax +
jz loc_1004B9A  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_1004BDA  +
mov [esi+8] eax +
jmp loc_1004BE0  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1004C65  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_1004C30  +
jz loc_1004C4C  +
cmp eax 20000h +
jz loc_1004C4C  +
cmp eax 30000h +
jz loc_1004C4C  +
cmp eax 40000h +
jz loc_1004C4C  +
cmp eax 50000h +
jz loc_1004C4C  +
cmp eax 60000h +
jz loc_1004C4C  +
jmp loc_1004C65  +
cmp eax 80000h +
jz loc_1004C57  +
cmp eax 90000h +
jz loc_1004C4C  +
cmp eax 0A0000h +
jz loc_1004C4C  +
cmp eax 0B0000h +
jnz loc_1004C65  +
add edx 0Ch +
push edx  +
call sub_1002473  +
jmp loc_1004C65  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_1004AFA  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_1004A64  +
test eax eax +
jnz loc_1004C89  +
or eax 0FFFFFFFFh +
jmp loc_1004D98  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_1004D93  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_1004D83  +
mov ecx 70000h +
cmp eax ecx +
ja loc_1004D17  +
jz loc_1004D05  +
cmp eax 20000h +
jz loc_1004CE9  +
cmp eax 30000h +
jz loc_1004D7A  +
cmp eax 40000h +
jz loc_1004D7A  +
cmp eax 60000h +
jnz loc_1004D83  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_1004D0C  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_100209C  +
test eax eax +
jz loc_1004D9D  +
mov edx [ebp+arg_0] +
jmp loc_1004D83  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_1004D83  +
mov eax edx +
jmp loc_1004D96  +
cmp eax 90000h +
jz loc_1004D7A  +
cmp eax 0A0000h +
jz loc_1004D3D  +
cmp eax 0B0000h +
jnz loc_1004D83  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_1004D83  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_1004D81  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_1004D83  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_1004D83  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_1004D83  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1004D83  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_1004D83  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_1004D81  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_1004D13  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_1004C9F  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_1004D96  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1004A64  +
test eax eax +
jnz loc_1004DC2  +
or eax 0FFFFFFFFh +
jmp locret_1004E15  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1004DD5  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1002198  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1004E10  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_10027E0  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1004B87  +
cmp eax 0FFFFFFFFh +
jnz loc_1004E13  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002473  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1004A64  +
test eax eax +
jz loc_1004E67  +
push 4  +
call sub_1002198  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1004E67  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1004B87  +
cmp eax 0FFFFFFFFh +
jnz locret_1004E6A  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002473  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1004A64  +
test eax eax +
jz loc_1004EBC  +
push 4  +
call sub_1002198  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1004EBC  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1004B87  +
cmp eax 0FFFFFFFFh +
jnz locret_1004EBF  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002473  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1004A64  +
test eax eax +
jz loc_1004F11  +
push 4  +
call sub_1002198  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1004F11  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1004B87  +
cmp eax 0FFFFFFFFh +
jnz locret_1004F14  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002473  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1004A64  +
test eax eax +
jz loc_1004F66  +
push 8  +
call sub_1002198  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1004F66  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1004B87  +
cmp eax 0FFFFFFFFh +
jnz locret_1004F69  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002473  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_1004A64  +
test eax eax +
jz loc_1004FE0  +
call sub_1004A85  +
push eax  +
mov [ebp+var_4] eax +
call sub_1004A64  +
test eax eax +
jz loc_1004FE0  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_1004FBA  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_1004B87  +
cmp eax 0FFFFFFFFh +
jz loc_1004FBA  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1004FA4  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_1004FD7  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_1004B87  +
cmp eax 0FFFFFFFFh +
jnz loc_1004FE3  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004AFA  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_1004A64  +
test eax eax +
jnz loc_1005003  +
or eax 0FFFFFFFFh +
jmp loc_1005027  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_1005024  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_1004B87  +
cmp eax 0FFFFFFFFh +
jz loc_1005024  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100500B  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_1004B43  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100508C  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1005069  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_100506F  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_1005077  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_1004BF1  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002473  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_10050C2  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10050C2  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1005030  +
jmp loc_10050C4  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_10050F6  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10050F6  +
push dword ptr [eax+0Ch]  +
call sub_1004B25  +
jmp loc_10050F8  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jnz loc_100511B  +
xor eax eax +
jmp loc_1005131  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_100512E  +
cmp ecx 80000h +
jnz loc_1005117  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jnz loc_1005154  +
xor eax eax +
jmp loc_1005160  +
cmp dword ptr [eax+4] 20000h +
jnz loc_1005150  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_1005195  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1005195  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1005101  +
jmp loc_1005197  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_10051CC  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10051CC  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100513A  +
jmp loc_10051CE  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_10051E8  +
xor eax eax +
jmp loc_1005218  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_10051E4  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_100520B  +
test ecx ecx +
jz loc_100520F  +
jmp loc_10051E4  +
test ecx ecx +
jnz loc_1005212  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
mov esi eax +
cmp esi edi +
jnz loc_1005241  +
xor eax eax +
jmp loc_10052C0  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_1005252  +
cmp eax edi +
jnz loc_10052A7  +
cmp [ebp+arg_C] edi +
jnz loc_1005263  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_1005287  +
lea edi [eax+eax] +
push edi  +
call sub_1002198  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_10052A7  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_10052AE  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_10052AE  +
lea edi [esi+0Ch] +
push edi  +
call sub_1002473  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1002198  +
mov [edi] eax +
test eax eax +
jnz loc_10052AB  +
xor eax eax +
jmp loc_10052BF  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10027E0  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_10052FA  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10052FA  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10051D7  +
jmp loc_10052FC  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_1005337  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1005337  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1005222  +
jmp loc_1005339  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_100535B  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B43  +
test eax eax +
jz loc_1005390  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1005390  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1005342  +
jmp loc_1005392  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1004C6E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1004C6E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1004C6E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1004C6E  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1004C6E  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_100548B  +
test eax eax +
jnz loc_1005490  +
mov ecx [esi] +
test ecx ecx +
jz loc_1005488  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_100547C  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1007164 +
push offset dword_1007154  +
push dword_1007160  +
mov dword_1007154 eax +
push offset dword_1007144  +
push offset dword_1007148  +
push offset dword_1007140  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1007150 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1005518  +
cmp eax esi +
jnz loc_100550B  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_100551B  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10054F2  +
xor esi esi +
inc esi  +
mov eax dword_1007498 +
cmp eax esi +
jnz loc_100552E  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1005569  +
mov eax dword_1007498 +
test eax eax +
jnz loc_1005563  +
mov dword_1007498 esi +
push offset dword_1001180  +
push offset dword_1001174  +
call sub_100546F  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005569  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1005633  +
mov dword_100715C esi +
mov eax dword_1007498 +
cmp eax esi +
jnz loc_100558D  +
push offset dword_1001170  +
push offset dword_1001168  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1007498 2 +
cmp [ebp+var_1C] ebx +
jnz loc_100559A  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10074A0 ebx +
jz loc_10055BB  +
push offset dword_10074A0  +
call sub_10058B9  +
pop ecx  +
test eax eax +
jz loc_10055BB  +
push ebx  +
push 2  +
push ebx  +
call dword_10074A0  +
push dword_1007144  +
push dword_1007148  +
push dword_1007140  +
call sub_1001654  +
add esp 0Ch +
mov dword_1007158 eax +
cmp dword_100714C ebx +
jnz loc_1005619  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1007158 eax +
xor ebx ebx +
cmp dword_100714C ebx +
jnz loc_1005619  +
push eax  +
call ds:_exit  +
cmp dword_100715C ebx +
jnz loc_1005627  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1007158 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1005650  +
xor eax eax +
jmp loc_100569D  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100564C  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_100568A  +
cmp ecx 20Bh +
jnz loc_100564C  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100564C  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1005698  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100564C  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100714C eax +
call sub_10059C7  +
push eax  +
call ds:__set_app_type  +
or dword_1007490 0FFFFFFFFh +
or dword_1007494 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100716C +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1007168 +
mov [eax] ecx +
call sub_1005959  +
cmp dword_1007018 0 +
jnz loc_10056F6  +
push offset sub_1005959  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1005941  +
xor eax eax +
retn   +
***
call sub_1005A06  +
jmp sub_10054D0  +
***
cmp ecx dword_1007008 +
jnz loc_100571D  +
retn 0  +
jmp loc_1005A9C  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1005712  +
push offset dword_1007008  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1005802  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1005802  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10057FC  +
cmp eax 19930521h +
jz loc_10057FC  +
cmp eax 19930522h +
jz loc_10057FC  +
cmp eax 1994000h +
jnz loc_1005802  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_10057C4+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1005846  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1005842  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10058AD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10058A5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10058AF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1005895  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1005830  +
pop ecx  +
test eax eax +
jz loc_1005916  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1005870  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005916  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100591F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10059BA  +
cmp ecx 0FFFFFFFFh +
jz loc_10059BA  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10059B3  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10059B3  +
cmp edx 10000000h +
jnb loc_10059B3  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10059B3  +
jmp loc_10059AE  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10059FC  +
push eax  +
call sub_1005961  +
test eax eax +
jz loc_10059FC  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10059F1  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10059FC  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1007008 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1005A38  +
test eax ebx +
jz loc_1005A38  +
not eax  +
mov dword_100700C eax +
jmp loc_1005A93  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1005A7F  +
test dword_1007008 ebx +
jnz loc_1005A84  +
mov esi 0BB40E64Fh +
mov dword_1007008 esi +
not esi  +
mov dword_100700C esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1007270 eax +
mov dword_100726C ecx +
mov dword_1007268 edx +
mov dword_1007264 ebx +
mov dword_1007260 esi +
mov dword_100725C edi +
mov word_1007288 ss +
mov word_100727C cs +
mov word_1007258 ds +
mov word_1007254 es +
mov word_1007250 fs +
mov word_100724C gs +
pushf   +
pop dword_1007280  +
mov eax [ebp+0] +
mov dword_1007274 eax +
mov eax [ebp+4] +
mov dword_1007278 eax +
lea eax [ebp+8] +
mov dword_1007284 eax +
mov eax [ebp-320h] +
mov dword_10071C0 10001h +
mov eax dword_1007278 +
mov dword_100717C eax +
mov dword_1007170 0C0000409h +
mov dword_1007174 1 +
mov eax dword_1007008 +
mov [ebp-328h] eax +
mov eax dword_100700C +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
retf   +
***
