retn 122h  +
***
retn   +
***
retf 22h  +
***
retf   +
***
jmp loc_401824  +
inc eax  +
mov eax 11F00040h +
retn 33h  +
***
retn   +
***
retf 33h  +
***
retf   +
***
jmp loc_40202C  +
inc eax  +
mov eax 11F00040h +
mov cl 4Fh +
pop edi  +
aad  9Fh +
fcmove st st(6) +
mov ds:9AEA8A59h eax +
leave   +
loopne loc_402368  +
inc eax  +
xchg ebx ebp +
jnz near ptr aLocalizedstrin+10h  +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_402310 +
mov edi offset pclsid +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov dword_40F3D0 offset loc_407580 +
mov dword_40F3B8 offset loc_4075B0 +
mov dword_40F3CC offset loc_4075C0 +
mov dword_40F3B4 offset loc_407630 +
mov dword_40F3AC offset loc_407680 +
retn   +
***
mov ecx offset dword_40F468 +
call sub_403CF8  +
push offset loc_40E480  +
call sub_40E070  +
pop ecx  +
retn   +
***
mov eax ds:RegisterTypeLib +
mov dword_40F484 eax +
retn   +
***
mov eax ds:UnRegisterTypeLib +
mov dword_40F488 eax +
retn   +
***
push offset byte_40E4A0  +
call sub_40E070  +
pop ecx  +
retn   +
***
push offset loc_40E4B0  +
call sub_40E070  +
pop ecx  +
retn   +
***
mov dword_40F3B0 offset sub_40D090 +
mov dword_40F4C8 offset off_40F000 +
mov dword_40F4CC offset unk_40F4F0 +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
inc dword_40F01C  +
or eax 0FFFFFFFFh +
xadd dword_40F01C eax +
jz sub_403A4E  +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 4 +
inc dword ptr [eax]  +
mov eax [eax] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
or eax 0FFFFFFFFh +
lea ecx [edi+4] +
mov esi [ecx] +
dec esi  +
xadd [ecx] eax +
jnz loc_403AED  +
xor esi esi +
mov dword ptr [edi] offset off_401008 +
call sub_40A0BD  +
push edi  +
call sub_4035CE  +
pop ecx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_403B12  +
call sub_409D8F  +
jmp loc_403B17  +
call sub_409D5A  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
push ebx  +
push esi  +
xor ebx ebx +
mov esi offset riid +
push edi  +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [esi+ecx*4] +
jnz loc_403B44  +
inc ecx  +
cmp ecx 4 +
jnz loc_403B34  +
jmp loc_403B59  +
mov esi offset dword_402300 +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [esi+ecx*4] +
jnz loc_403B80  +
inc ecx  +
cmp ecx 4 +
jnz loc_403B4B  +
mov ecx [ebp+8] +
mov edi esp +
mov eax [ebp+10h] +
push ecx  +
mov [eax] ecx +
mov eax [ecx] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_41036C  +
call esi  +
cmp edi esp +
jz loc_403B7E  +
mov ecx 4 +
int 29h  +
jmp loc_403B8A  +
mov ecx [ebp+10h] +
mov [ecx] ebx +
mov ebx 80004002h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+14h] +
and dword ptr [eax] 0 +
mov eax 80040110h +
jmp loc_403C4F  +
mov dword ptr [ebx] offset off_40102C +
mov dword ptr [ebx+4] offset off_40101C +
mov dword ptr [ebx+8] offset off_40103C +
inc dword_40F380  +
xor eax eax +
mov dword ptr [ebx+0Ch] 1 +
mov [ebx+10h] eax +
mov [ebx+14h] eax +
mov [ebx+18h] eax +
call sub_409D8F  +
mov esi [ebx] +
mov edi esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
mov ecx [esi] +
push ebx  +
call ds:off_41036C  +
call dword ptr [esi]  +
cmp edi esp +
jz loc_403C2B  +
mov ecx 4 +
int 29h  +
mov ebx eax +
mov edi esp +
mov eax [ebp-4] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_41036C  +
call esi  +
cmp edi esp +
jz loc_403C4D  +
mov ecx 4 +
int 29h  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
mov edi edi +
call sub_40E3B8  +
xor eax eax +
xor eax eax +
mov edi edi +
xor eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 47Ch +
mov eax dword_40F014 +
xor eax esp +
mov [esp+47Ch+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
push 210h  +
mov [esp+48Ch+var_47C] eax +
mov esi edx +
lea eax [esp+48Ch+CommandLine] +
mov ebx ecx +
push 0  +
push eax  +
call memset  +
push 44h  +
lea eax [esp+498h+StartupInfo] +
push 0  +
push eax  +
call memset  +
xor eax eax +
lea edi [esp+4A0h+hObject] +
stos   +
add esp 18h +
mov ecx ebx +
stos   +
stos   +
stos   +
call sub_403D45  +
test eax eax +
jnz loc_405119  +
mov esi 8007000Eh +
jmp loc_40529B  +
cmp dword ptr [ebx+1Ch] 6 +
jge loc_405129  +
mov esi 8007139Fh +
jmp loc_40529B  +
test esi esi +
jz loc_405296  +
cmp [ebp+arg_0] 0 +
jz loc_405296  +
mov edi [esp+488h+var_47C] +
test edi edi +
jz loc_405296  +
mov eax [ebx+24h] +
mov cx [esi] +
cmp cx [eax] +
jnz loc_405170  +
test cx cx +
jz loc_40516C  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_405170  +
add esi 4 +
add eax 4 +
test cx cx +
jnz loc_40514A  +
xor eax eax +
jmp loc_405175  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_405183  +
mov esi 80070005h +
jmp loc_40529B  +
push [ebp+arg_0]  +
mov edx 104h +
lea ecx [esp+48Ch+FileName] +
call sub_403C5C  +
test eax eax +
js loc_405296  +
lea ecx [esp+488h+FileName] +
call sub_408ECF  +
lea ecx [esp+488h+FileName] +
call sub_408E67  +
test eax eax +
js loc_405296  +
lea ecx [esp+488h+FileName] +
call sub_408F9A  +
test eax eax +
js loc_405296  +
push ecx  +
lea eax [esp+48Ch+FileName] +
mov ecx ebx +
push eax  +
call sub_403EDE  +
mov esi eax +
test esi esi +
js loc_40529B  +
cmp dword ptr [ebx+54h] 0 +
jnz loc_4051F1  +
lea ecx [esp+488h+FileName] +
call sub_40950A  +
test eax eax +
jz loc_405179  +
mov ecx 108h +
lea eax [esp+488h+CommandLine] +
push ecx  +
mov edx ecx +
lea ecx [esp+48Ch+FileName] +
push eax  +
call sub_40A7FB  +
mov esi eax +
test esi esi +
js loc_40529B  +
cmp [ebp+arg_4] 0 +
jz loc_405236  +
push offset aRegserver  +
mov edx 108h +
lea ecx [esp+48Ch+CommandLine] +
call sub_403510  +
mov esi eax +
test esi esi +
js loc_40529B  +
xor ecx ecx +
mov [esp+488h+StartupInfo.cb] 44h +
lea eax [esp+488h+hObject] +
push eax  +
lea eax [esp+48Ch+StartupInfo] +
push eax  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
lea eax [esp+4A8h+CommandLine] +
push eax  +
push ecx  +
call ds:CreateProcessW  +
test eax eax +
jnz loc_40527A  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_40529B  +
movzx esi si +
or esi 80070000h +
jmp loc_40529B  +
push edi  +
lea eax [esp+48Ch+hObject] +
mov ecx ebx +
push eax  +
call sub_403F37  +
mov esi eax +
test esi esi +
js loc_40529B  +
mov dword ptr [ebx+1Ch] 8 +
jmp loc_40529B  +
mov esi 80070057h +
cmp dword ptr [esp+14h] 0 +
jz loc_4052AC  +
push dword ptr [esp+14h]  +
call ds:CloseHandle  +
cmp [esp+488h+hObject] 0 +
jz loc_4052BD  +
push [esp+488h+hObject]  +
call ds:CloseHandle  +
mov ecx ebx +
call sub_403D59  +
mov ecx [esp+488h+var_4] +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_40DE60  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
call sub_403DB1  +
lea ecx [esi+60h] +
cmp byte ptr [ecx] 0 +
jz loc_406881  +
call sub_407E5F  +
cmp dword ptr [esi] 0 +
jz loc_406890  +
lea eax [esi+4] +
push eax  +
call ds:DeleteCriticalSection  +
push esi  +
call sub_4035CE  +
pop ecx  +
mov eax esi +
pop esi  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov edi offset riid +
push 4  +
mov ecx ebx +
pop esi  +
mov eax [edx+ecx*4] +
cmp eax [edi+ecx*4] +
jnz loc_4068C6  +
inc ecx  +
cmp ecx esi +
jnz loc_4068B7  +
jmp loc_4068F0  +
mov edi offset dword_402350 +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [edi+ecx*4] +
jnz loc_4068DC  +
inc ecx  +
cmp ecx esi +
jnz loc_4068CD  +
jmp loc_4068F0  +
mov edi offset dword_402360 +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [edi+ecx*4] +
jnz loc_406925  +
inc ecx  +
cmp ecx esi +
jnz loc_4068E3  +
mov edx [ebp+8] +
mov ecx edx +
neg ecx  +
sbb ecx ecx +
lea eax [edx+8] +
and ecx eax +
mov eax [ebp+10h] +
mov edi esp +
push edx  +
mov [eax] ecx +
mov eax [edx] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_41036C  +
call esi  +
cmp edi esp +
jz loc_406920  +
mov ecx 4 +
int 29h  +
jmp loc_4069B7  +
mov edi (offset loc_40236F+1) +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [edi+ecx*4] +
jnz loc_40695F  +
inc ecx  +
cmp ecx esi +
jnz loc_40692C  +
mov ecx [ebp+8] +
cmp dword_40F37C ebx +
jnz loc_406949  +
cmp [ecx+14h] ebx +
jz loc_406953  +
cmp [ecx+14h] ebx +
jz loc_4069A1  +
cmp [ecx+18h] ebx +
jnz loc_4069A1  +
mov eax [ebp+10h] +
mov edi esp +
push ecx  +
mov [eax] ecx +
mov eax [ecx] +
jmp loc_406908  +
***
mov edi offset dword_402330 +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [edi+ecx*4] +
jnz loc_4069AD  +
inc ecx  +
cmp ecx esi +
jnz loc_406966  +
call sub_408CF3  +
test eax eax +
jnz loc_4069A1  +
cmp dword_40F37C ebx +
jnz loc_40698C  +
cmp dword_40F38C ebx +
jz loc_4069A1  +
mov edx [ebp+8] +
cmp [edx+14h] ebx +
jz loc_406999  +
cmp [edx+18h] ebx +
jz loc_4069A1  +
lea ecx [edx+4] +
jmp loc_4068FE  +
***
mov eax [ebp+10h] +
mov [eax] ebx +
mov ebx 80004005h +
jmp loc_4069B7  +
mov ecx [ebp+10h] +
mov [ecx] ebx +
mov ebx 80004002h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 0Ch +
inc dword ptr [eax]  +
mov eax [eax] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
or eax 0FFFFFFFFh +
push edi  +
lea ecx [esi+0Ch] +
mov edi [ecx] +
dec edi  +
xadd [ecx] eax +
jnz loc_406A30  +
mov ecx [esi+10h] +
xor edi edi +
mov dword ptr [esi] offset off_40102C +
mov dword ptr [esi+4] offset off_40101C +
mov dword ptr [esi+8] offset off_40103C +
test ecx ecx +
jz loc_406A1C  +
push ecx  +
call sub_406868  +
mov [esi+10h] edi +
call sub_40A0BD  +
call sub_409D5A  +
push esi  +
call sub_4035CE  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+18h] 0 +
jz loc_406A56  +
mov eax 80004005h +
jmp loc_406AB0  +
and dword ptr [esi+18h] 0 +
mov ecx [esi+10h] +
mov dword ptr [esi+14h] 1 +
test ecx ecx +
jz loc_406A6E  +
push ecx  +
call sub_406868  +
push 164h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
test eax eax +
jz loc_406AB5  +
mov ecx eax +
call sub_403D6D  +
mov [esi+10h] eax +
test eax eax +
jz loc_406AAB  +
push dword ptr [ebp+14h]  +
mov edx [esi+18h] +
mov ecx eax +
push 0  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_404402  +
jmp loc_406AB0  +
mov eax 8007000Eh +
pop esi  +
pop ebp  +
retn 10h  +
***
call sub_40A5A6  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+10h] 0 +
jz loc_406AD5  +
cmp dword ptr [esi+14h] 0 +
jz loc_406AE7  +
cmp dword_40F37C 0 +
jnz loc_406AEE  +
cmp dword_40F38C 0 +
jnz loc_406AEE  +
mov eax 80004005h +
jmp loc_406B54  +
xor eax eax +
inc eax  +
cmp dword ptr [ebp+14h] 0 +
mov [esi+10h] eax +
mov [esi+14h] eax +
jnz loc_406B04  +
mov eax 80070057h +
jmp loc_406B54  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_406B11  +
push ecx  +
call sub_406868  +
push 164h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
test eax eax +
jz loc_406B59  +
mov ecx eax +
call sub_403D6D  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_406B4F  +
push dword ptr [ebp+18h]  +
mov edx [esi+14h] +
mov ecx eax +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_404402  +
jmp loc_406B54  +
mov eax 8007000Eh +
pop esi  +
pop ebp  +
retn 14h  +
***
call sub_40A5A6  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx 80004005h +
cmp dword ptr [eax+8] 0 +
jz loc_406B9E  +
push dword ptr [ebp+34h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+30h]  +
mov ecx [eax+8] +
push dword ptr [ebp+2Ch]  +
push dword ptr [ebp+28h]  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_4045CE  +
mov ecx eax +
mov eax ecx +
pop ebp  +
retn 30h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx 80004005h +
cmp dword ptr [eax+8] 0 +
jz loc_406BE5  +
push dword ptr [ebp+28h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+24h]  +
mov ecx [eax+8] +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_404C26  +
mov ecx eax +
mov eax ecx +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406C20  +
push dword ptr [ebp+24h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_404E89  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406C57  +
push dword ptr [ebp+18h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_4050AB  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406C86  +
push dword ptr [ebp+14h]  +
mov edx [ebp+0Ch] +
push 0  +
push dword ptr [ebp+10h]  +
call sub_40569E  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406CB7  +
push dword ptr [ebp+18h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_40569E  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406CE1  +
push dword ptr [ebp+10h]  +
mov edx [ebp+0Ch] +
call sub_4057DB  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406D17  +
push dword ptr [ebp+18h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_405922  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx 80004005h +
cmp dword ptr [eax+8] 0 +
jz loc_406D75  +
sub esp 0Ch +
mov edx [ebp+0Ch] +
mov ecx [eax+8] +
push dword ptr [ebp+4Ch]  +
push dword ptr [ebp+48h]  +
push 0  +
push dword ptr [ebp+44h]  +
push dword ptr [ebp+40h]  +
push dword ptr [ebp+3Ch]  +
push dword ptr [ebp+38h]  +
push dword ptr [ebp+34h]  +
push dword ptr [ebp+30h]  +
push dword ptr [ebp+2Ch]  +
push dword ptr [ebp+28h]  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_405A7E  +
mov ecx eax +
mov eax ecx +
pop ebp  +
retn 54h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx 80004005h +
cmp dword ptr [eax+8] 0 +
jz loc_406DD6  +
sub esp 0Ch +
mov edx [ebp+0Ch] +
mov ecx [eax+8] +
push dword ptr [ebp+50h]  +
push dword ptr [ebp+4Ch]  +
push dword ptr [ebp+48h]  +
push dword ptr [ebp+44h]  +
push dword ptr [ebp+40h]  +
push dword ptr [ebp+3Ch]  +
push dword ptr [ebp+38h]  +
push dword ptr [ebp+34h]  +
push dword ptr [ebp+30h]  +
push dword ptr [ebp+2Ch]  +
push dword ptr [ebp+28h]  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_405A7E  +
mov ecx eax +
mov eax ecx +
pop ebp  +
retn 58h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406E0D  +
push dword ptr [ebp+20h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_40617E  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406E44  +
push dword ptr [ebp+14h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+10h]  +
call sub_40649E  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406E74  +
push dword ptr [ebp+14h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+10h]  +
call sub_4065D9  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406EA1  +
push dword ptr [ebp+10h]  +
mov edx [ebp+0Ch] +
call sub_4066AF  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406ED4  +
push dword ptr [ebp+14h]  +
mov edx [ebp+0Ch] +
push dword ptr [ebp+10h]  +
call sub_4067C0  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx 80004005h +
push edi  +
mov edi [eax+8] +
test edi edi +
jz loc_406F2A  +
push esi  +
mov esi [ebp+0Ch] +
mov ecx 80070005h +
xor edx edx +
mov eax [esi+edx*4] +
cmp eax [edi+edx*4+30h] +
jnz loc_406F29  +
inc edx  +
cmp edx 4 +
jnz loc_406F00  +
cmp dword ptr [ebp+14h] 0 +
push dword ptr [ebp+10h]  +
push esi  +
jnz loc_406F21  +
call ds:iertutil_200  +
jmp loc_406F27  +
call ds:iertutil_201  +
mov ecx eax +
pop esi  +
mov eax ecx +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx 80004005h +
mov ecx [eax+8] +
test ecx ecx +
jz loc_406F5E  +
mov edx [ebp+0Ch] +
call sub_406758  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 8 +
jmp loc_4069C0  +
***
sub dword ptr [esp+4] 4 +
jmp loc_4068A0  +
***
sub dword ptr [esp+4] 8 +
jmp loc_4068A0  +
***
sub dword ptr [esp+4] 4 +
jmp loc_4069E0  +
***
sub dword ptr [esp+4] 8 +
jmp loc_4069E0  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetLastError  +
test eax eax +
jnz loc_407464  +
inc eax  +
test eax eax +
jg loc_407472  +
call ds:GetLastError  +
test eax eax +
jnz locret_407485  +
inc eax  +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_40747D  +
inc eax  +
movzx eax ax +
or eax 80070000h +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 110h +
mov eax dword_40F014 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_110] ecx +
mov [ebp+hModule] edi +
test esi esi +
jz loc_4074FF  +
lea eax [ebp+hModule] +
push eax  +
push esi  +
push 6  +
call ds:GetModuleHandleExW  +
test eax eax +
jnz loc_4074F3  +
test ebx ebx +
jz loc_40752A  +
mov [ebx] edi +
jmp loc_40752A  +
mov edi [ebp+hModule] +
mov ecx [ebp+var_110] +
test ebx ebx +
jz loc_40750F  +
mov eax esi +
sub eax edi +
neg esi  +
sbb esi esi +
and esi eax +
mov [ebx] esi +
test ecx ecx +
jz loc_40756A  +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
push edi  +
call ds:GetModuleFileNameA  +
test eax eax +
jnz loc_40752E  +
xor al al +
jmp loc_40756C  +
lea ecx [ebp+Filename] +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_407537  +
sub ecx edx +
lea eax [ebp+Filename] +
add eax ecx +
jmp loc_407551  +
cmp byte ptr [eax-1] 5Ch +
jz loc_40755B  +
dec eax  +
lea ecx [ebp+Filename] +
cmp eax ecx +
ja loc_40754A  +
mov edx [ebp+arg_C] +
mov ecx [ebp+var_110] +
push eax  +
call sub_406FF8  +
mov al 1 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40DE60  +
leave   +
retn 10h  +
***
cmp byte_40F3DC 0 +
push esi  +
mov esi offset unk_40F3E8 +
jnz loc_4075A5  +
push 40h  +
push esi  +
push 0  +
push offset sub_407490  +
call sub_4074A4  +
mov byte_40F3DC 1 +
mov eax esi +
pop esi  +
retn   +
***
jmp ds:DebugBreak  +
***
mov eax dword_40F428 +
test eax eax +
jnz locret_407623  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
mov dword_40F428 eax +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov edi dword_40F3E0 +
test edi edi +
jnz loc_40765F  +
push offset aRtldllshutdown  +
call sub_40760A  +
push eax  +
call ds:GetProcAddress  +
mov edi eax +
mov dword_40F3E0 edi +
test edi edi +
jnz loc_40765F  +
xor al al +
jmp loc_407676  +
mov ecx edi +
call ds:off_41036C  +
mov esi esp +
call edi  +
cmp esi esp +
jz loc_407676  +
mov ecx 4 +
int 29h  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax ecx +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 108h +
mov eax dword_40F014 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi edx +
mov ebx ecx +
xor edi edi +
jmp loc_407E48  +
cmp dword ptr [esi+8] 0 +
jnz loc_407E45  +
cmp dword ptr [esi] 0 +
jz loc_407E45  +
push 104h  +
lea eax [ebp+FileName] +
push 0  +
push eax  +
call memset  +
mov edx [esi] +
lea eax [ebp+FileName] +
add esp 0Ch +
mov ecx 104h +
push ecx  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_407C0D  +
test eax eax +
jz loc_407E42  +
push 80h  +
lea eax [ebp+FileName] +
push eax  +
call ds:SetFileAttributesA  +
test eax eax +
jz loc_407E42  +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileA  +
test eax eax +
jnz loc_407E45  +
xor edi edi +
inc edi  +
mov esi [esi+4] +
test esi esi +
jnz loc_407DDF  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40DE60  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
jmp loc_408EE0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
mov ebx ecx +
push edi  +
mov [ebp+ppSM] esi +
cmp [ebp+arg_0] esi +
jz loc_409803  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov edi eax +
test edi edi +
jz loc_4097FC  +
push esi  +
lea eax [ebp+ppSM] +
push eax  +
push esi  +
call ds:CoInternetCreateSecurityManager  +
mov esi eax +
test esi esi +
js loc_4097F3  +
mov ecx [ebp+ppSM] +
mov [ebx+0Ch] ecx +
mov [ebx+8] edi +
jmp loc_409808  +
push edi  +
call ds:SysFreeString  +
jmp loc_409808  +
mov esi 8007000Eh +
jmp loc_409808  +
mov esi 80070057h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
push ebx  +
push esi  +
xor ebx ebx +
mov esi offset riid +
push edi  +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [esi+ecx*4] +
jnz loc_409844  +
inc ecx  +
cmp ecx 4 +
jnz loc_409834  +
jmp loc_409859  +
mov esi offset dword_402320 +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [esi+ecx*4] +
jnz loc_409880  +
inc ecx  +
cmp ecx 4 +
jnz loc_40984B  +
mov ecx [ebp+8] +
mov edi esp +
mov eax [ebp+10h] +
push ecx  +
mov [eax] ecx +
mov eax [ecx] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_41036C  +
call esi  +
cmp edi esp +
jz loc_40987E  +
mov ecx 4 +
int 29h  +
jmp loc_40988A  +
mov ecx [ebp+10h] +
mov [ecx] ebx +
mov ebx 80004002h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
cmp dword ptr [ebx+8] 0 +
mov dword ptr [ebx] offset off_40108C +
jz loc_4098E3  +
push dword ptr [ebx+8]  +
call ds:SysFreeString  +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_409907  +
mov eax [ecx] +
mov edi esp +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_41036C  +
call esi  +
cmp edi esp +
jz loc_409907  +
mov ecx 4 +
int 29h  +
push ebx  +
call sub_4035CE  +
pop ecx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx 80004005h +
mov edx [eax+8] +
test edx edx +
jz loc_40995D  +
push esi  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_40995C  +
mov eax [ebp+10h] +
test eax eax +
jz loc_40995C  +
cmp dword ptr [eax] 200h +
jb loc_40995C  +
push dword ptr [ebp+14h]  +
push eax  +
push dword ptr [ebp+0Ch]  +
push edx  +
push esi  +
call ds:urlmon_519  +
mov ecx eax +
pop esi  +
mov eax ecx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx 80004005h +
push esi  +
push edi  +
mov edx [eax+8] +
test edx edx +
jz loc_4099C1  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4099C1  +
mov esi [eax] +
mov edi esp +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
mov ecx [esi+1Ch] +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edx  +
push eax  +
call ds:off_41036C  +
call dword ptr [esi+1Ch]  +
cmp edi esp +
jz loc_4099BF  +
mov ecx 4 +
int 29h  +
mov ecx eax +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx 80004005h +
push esi  +
push edi  +
mov edx [eax+8] +
test edx edx +
jz loc_409A1E  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_409A1E  +
mov esi [eax] +
mov edi esp +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
mov ecx [esi+20h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edx  +
push eax  +
call ds:off_41036C  +
call dword ptr [esi+20h]  +
cmp edi esp +
jz loc_409A1C  +
mov ecx 4 +
int 29h  +
mov ecx eax +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
inc eax  +
xadd dword_40F01C eax +
jnz loc_409DA8  +
inc dword_40F01C  +
call sub_403970  +
mov eax dword_40F01C +
retn   +
***
mov edi edi +
or eax 0FFFFFFFFh +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40E3B8  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
mov edi offset CriticalSection +
xor esi esi +
push edi  +
call ds:EnterCriticalSection  +
cmp dword_40F494 esi +
jz loc_40AAD0  +
call sub_40AF3C  +
mov esi eax +
test esi esi +
jnz loc_40AAD0  +
call ds:GetCurrentThread  +
mov ecx eax +
call sub_40B3AA  +
mov edx offset loc_40AAE0 +
mov ecx offset dword_40F484 +
call sub_40B68E  +
mov edx offset loc_40AAF0 +
mov ecx offset dword_40F488 +
call sub_40B68E  +
call sub_40B17B  +
mov esi eax +
neg eax  +
sbb eax eax +
and dword_40F494 eax +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:OLEAUT32_442  +
***
call sub_40E3B8  +
mov al [ecx] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_40F014 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_48] +
push esi  +
xor esi esi +
mov [ebp+var_54] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_60] esi +
mov [ebp+var_5C] esi +
mov [ebp+var_58] esi +
push edi  +
test eax eax +
jnz loc_40B7E0  +
lea eax [ebp+var_4C] +
mov [ebp+var_50] eax +
mov [ebp+var_48] esi +
mov [eax] esi +
test ecx ecx +
jnz loc_40B7EF  +
lea ecx [ebp+var_44] +
test edx edx +
jnz loc_40B7FD  +
push 0Dh  +
call ds:SetLastError  +
jmp loc_40B829  +
movzx eax byte ptr [edx] +
mov edi esp +
push edx  +
push ecx  +
lea esi dword_4018B0[eax*8] +
push esi  +
mov esi [esi+4] +
mov ecx esi +
call ds:off_41036C  +
lea ecx [ebp+var_60] +
call esi  +
cmp edi esp +
jz loc_40B827  +
mov ecx 4 +
int 29h  +
mov esi eax +
mov ecx [ebp+var_4] +
mov eax esi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_40DE60  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
sub esp 0Ch +
mov edx [edx] +
push ebx  +
mov ebx ecx +
push esi  +
mov esi edx +
push edi  +
test edx 20000000h +
jz loc_40B867  +
cmp dword ptr [ebx+4] 0 +
jz loc_40B86C  +
shr esi 0Ch +
jmp loc_40B86F  +
cmp dword ptr [ebx] 0 +
jmp loc_40B860  +
shr esi 8 +
mov ecx edx +
and esi 0Fh +
shl ecx 8 +
mov eax esi +
sar ecx 1Ch +
mov edi esi +
sub eax ecx +
shr edx 10h +
mov [ebp+var_C] ecx +
mov [ebp+var_8] eax +
and edx 0Fh +
jbe loc_40B8D5  +
mov eax [ebp+arg_8] +
mov al [edx+eax] +
mov [ebp+var_1] al +
movzx eax al +
mov al ds:byte_402D40[eax] +
movzx edi al +
and edi 0Fh +
add edi esi +
test al 10h +
jz loc_40B8D5  +
mov eax [ebp+arg_8] +
mov al [edx+eax+1] +
and al 7 +
cmp al 5 +
jnz loc_40B8CE  +
mov al [ebp+var_1] +
and al 0C0h +
jz loc_40B8CB  +
cmp al 40h +
jnz loc_40B8C7  +
inc edi  +
jmp loc_40B8CE  +
cmp al 80h +
jnz loc_40B8CE  +
add edi 4 +
mov eax edi +
sub eax ecx +
mov [ebp+var_8] eax +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call memcpy  +
mov eax [ebp+var_C] +
add esp 0Ch +
test eax eax +
jz loc_40B905  +
push [ebp+var_8]  +
mov ecx ebx +
push eax  +
push esi  +
mov esi [ebp+arg_8] +
push esi  +
push [ebp+arg_4]  +
call sub_40BA05  +
mov ecx [ebx+0Ch] +
mov [ecx] eax +
jmp loc_40B908  +
mov esi [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
test eax 40000000h +
jz loc_40B91B  +
mov eax [ebx+10h] +
neg dword ptr [eax]  +
mov eax [ecx] +
test eax 10000000h +
jz loc_40B928  +
mov eax [ebx+0Ch] +
or dword ptr [eax] 0FFFFFFFFh +
lea eax [edi+esi] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+10h] +
mov eax ecx +
push edi  +
mov edi [ebp+0Ch] +
push esi  +
push edi  +
push dword ptr [ebp+8]  +
mov [ebp-4] eax +
call sub_40B840  +
lea edx [esi+1] +
mov ebx esp +
movzx eax byte ptr [edx] +
push edx  +
lea esi dword_4018B0[eax*8] +
lea eax [edi+1] +
push eax  +
push esi  +
mov esi [esi+4] +
mov ecx esi +
call ds:off_41036C  +
mov ecx [ebp-4] +
call esi  +
cmp ebx esp +
jz loc_40B98E  +
mov ecx 4 +
int 29h  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_10] +
xor edx edx +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_C] +
sub eax 1 +
jz loc_40BA3B  +
sub eax 1 +
jz loc_40BA35  +
dec eax  +
sub eax 1 +
jz loc_40BA30  +
sub eax 4 +
jnz loc_40BA3F  +
mov edx [esi+edi] +
jmp loc_40BA3F  +
movsx edx word ptr [esi+edi] +
jmp loc_40BA3F  +
movsx edx byte ptr [esi+edi] +
mov eax [ebp+arg_4] +
lea ecx [edx+eax] +
sub edx esi +
add ecx [ebp+arg_8] +
add edx eax +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_10] +
sub ecx 1 +
jz loc_40BA8B  +
sub ecx 1 +
jz loc_40BA6C  +
dec ecx  +
sub ecx 1 +
jz loc_40BA67  +
sub ecx 4 +
jnz loc_40BAA1  +
mov [esi+edi] edx +
jmp loc_40BAA1  +
mov [esi+edi] dx +
cmp edx 0FFFF8000h +
jl loc_40BA80  +
cmp edx 7FFFh +
jle loc_40BAA1  +
mov eax [ebx+10h] +
mov dword ptr [eax] 2 +
jmp loc_40BAA1  +
mov [esi+edi] dl +
cmp edx 0FFFFFF80h +
jl loc_40BA98  +
cmp edx 7Fh +
jle loc_40BAA1  +
mov ecx [ebx+10h] +
mov dword ptr [ecx] 3 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+10h] +
mov eax ecx +
push edi  +
mov edi [ebp+0Ch] +
push esi  +
push edi  +
push dword ptr [ebp+8]  +
mov [ebp-4] eax +
call sub_40B840  +
lea edx [esi+1] +
mov ebx esp +
movzx eax byte ptr [edx] +
push edx  +
lea esi dword_4010A8[eax*8] +
lea eax [edi+1] +
push eax  +
push esi  +
mov esi [esi+4] +
mov ecx esi +
call ds:off_41036C  +
mov ecx [ebp-4] +
call esi  +
cmp ebx esp +
jz loc_40BB0E  +
mov ecx 4 +
int 29h  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov dword ptr [ecx] 1 +
pop ebp  +
jmp loc_40B940  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov dword ptr [ecx+4] 1 +
pop ebp  +
jmp loc_40B940  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
sub esp 10h +
test byte ptr [eax+1] 38h +
push eax  +
push dword ptr [ebp+0Ch]  +
jnz loc_40BB88  +
mov dword ptr [ebp-8] 10133F6h +
lea eax [ebp-8] +
mov dword ptr [ebp-4] offset sub_40B840 +
jmp loc_40BB99  +
mov dword ptr [ebp-10h] 122F6h +
lea eax [ebp-10h] +
mov dword ptr [ebp-0Ch] offset sub_40B840 +
push eax  +
call sub_40B840  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
sub esp 10h +
test byte ptr [eax+1] 38h +
push eax  +
push dword ptr [ebp+0Ch]  +
jnz loc_40BBD8  +
mov dword ptr [ebp-8] 40146F7h +
lea eax [ebp-8] +
mov dword ptr [ebp-4] offset sub_40B840 +
jmp loc_40BBE9  +
mov dword ptr [ebp-10h] 122F7h +
lea eax [ebp-10h] +
mov dword ptr [ebp-0Ch] offset sub_40B840 +
push eax  +
call sub_40B840  +
leave   +
retn 0Ch  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
test ecx ecx +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea ecx [ebp+var_4] +
call sub_40BE7F  +
test eax eax +
jnz loc_40BFC8  +
leave   +
retn   +
push esi  +
push 4000h  +
push 0  +
push offset aComctl32_dll  +
call ds:LoadLibraryExW  +
mov ecx [ebp+var_4] +
mov esi eax +
call sub_40BECA  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov ecx dword_40F4C0 +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
xor eax eax +
xor eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
test ecx ecx +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_40F014 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov ebx edx +
xor esi esi +
push ecx  +
push 40h  +
mov [ebx] esi +
call ds:GetCurrentProcessId  +
push eax  +
push offset aLocalSm0DDHs  +
lea eax [ebp+var_20C] +
push 104h  +
push eax  +
call sub_403C91  +
add esp 18h +
mov [ebp+hObject] esi +
lea eax [ebp+var_20C] +
push 1F0001h  +
push esi  +
push eax  +
push esi  +
call ds:CreateMutexExW  +
push eax  +
lea ecx [ebp+hObject] +
call sub_40D603  +
cmp [ebp+hObject] esi +
jnz loc_40D6AE  +
call sub_40C3A4  +
mov esi eax +
jmp loc_40D761  +
push edi  +
sub esp 0Ch +
lea eax [ebp+hMutex] +
lea ecx [ebp+hObject] +
push eax  +
call sub_40DA1B  +
push ecx  +
lea eax [ebp+var_220] +
mov [ebp+var_220] esi +
push eax  +
lea ecx [ebp+var_20C] +
mov [ebp+var_21C] esi +
mov edi esi +
call sub_40CB53  +
mov esi eax +
test esi esi +
jns loc_40D6FC  +
push esi  +
push ecx  +
mov ecx [ebp+4] +
push 62h  +
pop edx  +
call sub_40C8BD  +
mov eax edi +
jmp loc_40D704  +
mov eax [ebp+var_220] +
xor esi esi +
test esi esi +
jns loc_40D717  +
push esi  +
push ecx  +
mov ecx [ebp+4] +
push 6Bh  +
pop edx  +
call sub_40C8BD  +
jmp loc_40D71E  +
mov edi eax +
shl edi 2 +
xor esi esi +
test esi esi +
jns loc_40D729  +
mov edx 126h +
jmp loc_40D78E  +
test edi edi +
jz loc_40D771  +
mov [ebx] edi +
mov ecx [edi] +
mov eax [ebx] +
inc ecx  +
mov [eax] ecx +
xor esi esi +
cmp [ebp+hMutex] 0 +
pop edi  +
jz loc_40D74D  +
push [ebp+hMutex]  +
call sub_40C959  +
cmp [ebp+hObject] 0 +
jz loc_40D761  +
push [ebp+hObject]  +
call sub_40C934  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40DE60  +
leave   +
retn   +
push ebx  +
lea edx [ebp+hObject] +
lea ecx [ebp+var_20C] +
call sub_40D896  +
mov esi eax +
test esi esi +
jns loc_40D736  +
mov edx 12Eh +
push esi  +
push ecx  +
mov ecx [ebp+4] +
call sub_40C8BD  +
jmp loc_40D738  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi edx +
mov esi ecx +
cmp esi edi +
jz loc_40DB1B  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_40DB1B  +
cmp byte ptr [ecx] 0 +
jz loc_40DB1B  +
mov edx ecx +
lea ebx [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_40DAEE  +
sub edx ebx +
sub edi esi +
lea ebx [edx+1] +
cmp edi ebx +
jb loc_40DB1B  +
push ebx  +
push ecx  +
push edi  +
push esi  +
call ds:memcpy_s  +
mov eax [ebp+arg_4] +
add esp 10h +
test eax eax +
jz loc_40DB16  +
mov [eax] esi +
lea eax [ebx+esi] +
jmp loc_40DB27  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_40DB25  +
and dword ptr [eax] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
call sub_40DDDF  +
push 2  +
mov dword_40F048 eax +
call sub_40E168  +
push eax  +
call ds:__set_app_type  +
or dword_40F520 0FFFFFFFFh +
or dword_40F524 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_40F378 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_40F36C +
mov [eax] ecx +
call sub_40E1B0  +
cmp dword_40F010 0 +
jnz loc_40DB8E  +
push offset sub_40E1B0  +
call ds:__setusermatherr  +
pop ecx  +
call sub_40E39D  +
xor eax eax +
retn   +
***
mov eax dword_40F374 +
push offset dword_40F04C  +
push dword_40F370  +
mov dword_40F04C eax +
push offset unk_40F040  +
push offset unk_40F03C  +
push offset unk_40F038  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_40F044 eax +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov dword_40F030 eax +
cmp dword_40F048 0 +
jnz loc_40DD83  +
push eax  +
call ds:_exit  +
***
mov edi edi +
mov eax 5A4Dh +
cmp ds:400000h ax +
jnz loc_40DE42  +
mov ecx ds:40003Ch +
cmp dword ptr [ecx+400000h] 4550h +
jnz loc_40DE42  +
movzx eax word ptr [ecx+400018h] +
mov edx 10Bh +
cmp ax dx +
jz loc_40DE2F  +
mov edx 20Bh +
cmp ax dx +
jnz loc_40DE42  +
cmp dword ptr [ecx+400084h] 0Eh +
jbe loc_40DE42  +
xor eax eax +
cmp [ecx+4000F8h] eax +
setnz al  +
retn   +
cmp dword ptr [ecx+400074h] 0Eh +
jbe loc_40DE42  +
xor eax eax +
cmp [ecx+4000E8h] eax +
jmp loc_40DE2B  +
xor eax eax +
retn   +
***
call sub_40E305  +
jmp loc_40DBD3  +
***
cmp ecx dword_40F014 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push [ebp+ExceptionInfo]  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
pop ebp  +
retn   +
***
call sub_40E3B8  +
pop ecx  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_40E0CD  +
cmp dword ptr [eax+10h] 3 +
jnz loc_40E0CD  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_40E0C7  +
cmp eax 19930521h +
jz loc_40E0C7  +
cmp eax 19930522h +
jz loc_40E0C7  +
cmp eax 1994000h +
jnz loc_40E0CD  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
call sub_40E3B8  +
mov edi edi +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_40E1FE  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_40E1F6  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_40E200  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_40E1E6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFEh  +
push offset dword_40E5B8  +
push offset sub_40DE70  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_40F014 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_40E2D0  +
add esp 4 +
test eax eax +
jz loc_40E2B1  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_40E1C0  +
add esp 8 +
test eax eax +
jz loc_40E2B1  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call ds:_controlfp  +
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_40F014 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
sub ecx eax +
cmp dword_40F468 0 +
jz locret_40E494  +
push offset stru_40F46C  +
call ds:DeleteCriticalSection  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov dword ptr [ebp-4] offset unk_40F4F0 +
mov ebx offset unk_40F518 +
push esi  +
mov esi [ebp-4] +
cmp esi ebx +
jz loc_40E4F1  +
push edi  +
mov edi [esi] +
jmp loc_40E4E3  +
push edi  +
mov edi [edi+4] +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
test edi edi +
jnz loc_40E4D0  +
mov [esi] edi +
add esi 4 +
cmp esi ebx +
jnz loc_40E4CC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
