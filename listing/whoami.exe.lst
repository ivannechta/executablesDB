mov edi edi +
push esi  +
push edi  +
push 65h  +
pop esi  +
push 41h  +
pop edi  +
push esi  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
inc esi  +
dec edi  +
jnz loc_100151F  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3B4h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi offset aUser +
lea edi [ebp+var_30] +
movs   +
movs   +
movs   +
mov esi offset aGroups +
lea edi [ebp+var_58] +
movs   +
movs   +
movs   +
movs   +
mov esi offset aLogonid +
lea edi [ebp+var_68] +
movs   +
movs   +
movs   +
movs   +
mov esi offset aPriv +
lea edi [ebp+var_48] +
movs   +
movs   +
movs   +
mov eax [ebp+arg_4] +
mov esi offset aFqdn +
lea edi [ebp+var_3C] +
movs   +
movs   +
movs   +
mov esi offset aFo +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aNh +
lea edi [ebp+var_24] +
movs   +
movs   +
push 7  +
pop ecx  +
mov [ebp+var_3B0] eax +
mov eax [ebp+arg_28] +
mov esi offset aTableListCsv +
lea edi [ebp+var_88] +
movs   +
mov [ebp+var_3AC] eax +
mov eax ds:dword_1001200 +
mov [ebp+var_14] eax +
mov eax ds:dword_1001204 +
mov [ebp+var_10] eax +
mov eax ds:dword_10011F8 +
mov [ebp+var_C] eax +
mov eax ds:dword_10011FC +
movs   +
push 8  +
mov [ebp+var_8] eax +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
mov [ebp+var_3B4] 3Fh +
call sub_100532E  +
xor esi esi +
lea eax [ebp+var_3B4] +
xor ebx ebx +
mov [ebp+var_388] eax +
mov eax [ebp+arg_2C] +
inc ebx  +
mov [ebp+var_3A0] 0Ah +
mov [ebp+var_384] esi +
mov [ebp+var_380] esi +
mov [ebp+var_398] 20000h +
mov [ebp+var_394] esi +
mov [ebp+var_390] ebx +
mov [ebp+var_38C] esi +
mov [ebp+var_37C] eax +
mov [ebp+var_378] esi +
mov [ebp+var_374] esi +
mov [ebp+var_370] esi +
mov [ebp+var_36C] esi +
push 8  +
push edi  +
lea eax [ebp+var_358] +
push eax  +
mov [ebp+var_368] esi +
mov [ebp+var_364] esi +
mov [ebp+var_360] esi +
call sub_100532E  +
lea eax [ebp+var_30] +
mov [ebp+var_338] eax +
mov eax [ebp+arg_8] +
push 8  +
mov [ebp+var_32C] eax +
push edi  +
lea eax [ebp+var_308] +
push eax  +
mov [ebp+var_350] 0Ah +
mov [ebp+var_334] esi +
mov [ebp+var_330] esi +
mov [ebp+var_348] esi +
mov [ebp+var_344] esi +
mov [ebp+var_340] ebx +
mov [ebp+var_33C] esi +
mov [ebp+var_328] esi +
mov [ebp+var_324] esi +
mov [ebp+var_320] esi +
mov [ebp+var_31C] esi +
mov [ebp+var_318] esi +
mov [ebp+var_314] esi +
mov [ebp+var_310] esi +
call sub_100532E  +
lea eax [ebp+var_58] +
mov [ebp+var_2E8] eax +
mov eax [ebp+arg_C] +
push 8  +
mov [ebp+var_2DC] eax +
push edi  +
lea eax [ebp+var_2B8] +
push eax  +
mov [ebp+var_300] 0Ah +
mov [ebp+var_2E4] esi +
mov [ebp+var_2E0] esi +
mov [ebp+var_2F8] esi +
mov [ebp+var_2F4] esi +
mov [ebp+var_2F0] ebx +
mov [ebp+var_2EC] esi +
mov [ebp+var_2D8] esi +
mov [ebp+var_2D4] esi +
mov [ebp+var_2D0] esi +
mov [ebp+var_2CC] esi +
mov [ebp+var_2C8] esi +
mov [ebp+var_2C4] esi +
mov [ebp+var_2C0] esi +
call sub_100532E  +
lea eax [ebp+var_68] +
mov [ebp+var_298] eax +
mov eax [ebp+arg_14] +
push 8  +
mov [ebp+var_28C] eax +
push edi  +
lea eax [ebp+var_268] +
push eax  +
mov [ebp+var_2B0] 0Ah +
mov [ebp+var_294] esi +
mov [ebp+var_290] esi +
mov [ebp+var_2A8] esi +
mov [ebp+var_2A4] esi +
mov [ebp+var_2A0] ebx +
mov [ebp+var_29C] esi +
mov [ebp+var_288] esi +
mov [ebp+var_284] esi +
mov [ebp+var_280] esi +
mov [ebp+var_27C] esi +
mov [ebp+var_278] esi +
mov [ebp+var_274] esi +
mov [ebp+var_270] esi +
call sub_100532E  +
lea eax [ebp+var_48] +
mov [ebp+var_260] 0Ah +
mov [ebp+var_248] eax +
mov [ebp+var_244] esi +
mov eax [ebp+arg_10] +
push 8  +
mov [ebp+var_23C] eax +
push edi  +
lea eax [ebp+var_218] +
push eax  +
mov [ebp+var_240] esi +
mov [ebp+var_258] esi +
mov [ebp+var_254] esi +
mov [ebp+var_250] ebx +
mov [ebp+var_24C] esi +
mov [ebp+var_238] esi +
mov [ebp+var_234] esi +
mov [ebp+var_230] esi +
mov [ebp+var_22C] esi +
mov [ebp+var_228] esi +
mov [ebp+var_224] esi +
mov [ebp+var_220] esi +
call sub_100532E  +
lea eax [ebp+var_14] +
mov [ebp+var_1F8] eax +
mov eax [ebp+arg_18] +
push 8  +
mov [ebp+var_1EC] eax +
push edi  +
lea eax [ebp+var_1C8] +
push eax  +
mov [ebp+var_210] 0Ah +
mov [ebp+var_1F4] esi +
mov [ebp+var_1F0] esi +
mov [ebp+var_208] esi +
mov [ebp+var_204] esi +
mov [ebp+var_200] ebx +
mov [ebp+var_1FC] esi +
mov [ebp+var_1E8] esi +
mov [ebp+var_1E4] esi +
mov [ebp+var_1E0] esi +
mov [ebp+var_1DC] esi +
mov [ebp+var_1D8] esi +
mov [ebp+var_1D4] esi +
mov [ebp+var_1D0] esi +
call sub_100532E  +
lea eax [ebp+var_C] +
mov [ebp+var_1A8] eax +
mov eax [ebp+arg_1C] +
push 8  +
mov [ebp+var_19C] eax +
push edi  +
lea eax [ebp+var_178] +
push eax  +
mov [ebp+var_1C0] 0Ah +
mov [ebp+var_1A4] esi +
mov [ebp+var_1A0] esi +
mov [ebp+var_1B8] esi +
mov [ebp+var_1B4] esi +
mov [ebp+var_1B0] ebx +
mov [ebp+var_1AC] esi +
mov [ebp+var_198] esi +
mov [ebp+var_194] esi +
mov [ebp+var_190] esi +
mov [ebp+var_18C] esi +
mov [ebp+var_188] esi +
mov [ebp+var_184] esi +
mov [ebp+var_180] esi +
call sub_100532E  +
lea eax [ebp+var_3C] +
mov [ebp+var_158] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_170] 0Ah +
mov [ebp+var_154] esi +
mov [ebp+var_150] esi +
mov [ebp+var_168] esi +
mov [ebp+var_164] esi +
mov [ebp+var_160] ebx +
mov [ebp+var_15C] esi +
mov [ebp+var_14C] eax +
mov [ebp+var_148] esi +
mov [ebp+var_144] esi +
mov [ebp+var_140] esi +
mov [ebp+var_13C] esi +
mov [ebp+var_138] esi +
push 8  +
push edi  +
lea eax [ebp+var_128] +
push eax  +
mov [ebp+var_134] esi +
mov [ebp+var_130] esi +
call sub_100532E  +
lea eax [ebp+var_1C] +
mov [ebp+var_108] eax +
lea eax [ebp+var_88] +
mov [ebp+var_100] eax +
mov eax [ebp+arg_24] +
push 8  +
mov [ebp+var_FC] eax +
push edi  +
lea eax [ebp+var_D8] +
push eax  +
mov [ebp+var_120] ebx +
mov [ebp+var_104] esi +
mov [ebp+var_118] 0C2h +
mov [ebp+var_114] esi +
mov [ebp+var_110] ebx +
mov [ebp+var_10C] esi +
mov [ebp+var_F8] 0FEh +
mov [ebp+var_F4] esi +
mov [ebp+var_F0] esi +
mov [ebp+var_EC] esi +
mov [ebp+var_E8] esi +
mov [ebp+var_E4] esi +
mov [ebp+var_E0] esi +
call sub_100532E  +
push 0Ah  +
pop eax  +
lea ecx [ebp+var_24] +
mov [ebp+var_B8] ecx +
mov ecx [ebp+arg_30] +
push esi  +
mov [ebp+var_AC] ecx +
lea ecx [ebp+dwErrCode] +
push ecx  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+var_3B0]  +
mov [ebp+var_D0] eax +
push [ebp+arg_0]  +
mov [ebp+var_B4] esi +
mov [ebp+var_B0] esi +
mov [ebp+var_C8] esi +
mov [ebp+var_C4] esi +
mov [ebp+var_C0] ebx +
mov [ebp+var_BC] esi +
mov [ebp+var_A8] esi +
mov [ebp+var_A4] esi +
mov [ebp+var_A0] esi +
mov [ebp+var_9C] esi +
mov [ebp+var_98] esi +
mov [ebp+var_94] esi +
mov [ebp+var_90] esi +
call sub_10073F6  +
test eax eax +
jnz loc_1001B06  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1006485  +
call sub_100525E  +
xor eax eax +
jmp loc_1001B16  +
mov eax [ebp+var_10C] +
mov ecx [ebp+var_3AC] +
mov [ecx] eax +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 34h  +
***
call __EH_prolog3_GS  +
mov esi [ebp+0Ch] +
lea ecx [ebp-260h] +
call sub_10031D2  +
xor ebx ebx +
mov [ebp-4] ebx +
push ebx  +
push ebx  +
push 1  +
push ebx  +
mov [ebp-218h] ebx +
mov [ebp-220h] ebx +
mov [ebp-21Ch] ebx +
mov [ebp-22Ch] ebx +
mov [ebp-224h] ebx +
mov [ebp-234h] ebx +
mov [ebp-228h] ebx +
mov [ebp-238h] ebx +
mov [ebp-23Ch] ebx +
xor edi edi +
mov [ebp-210h] ebx +
mov [ebp-230h] ebx +
call ds:HeapSetInformation  +
push ebx  +
call ds:SetThreadUILanguage  +
mov ecx 0FEh +
lea eax [ebp-20Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001BAF  +
cmp esi ebx +
jnz loc_1001BF1  +
push 57h  +
call ds:SetLastError  +
call sub_1004973  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1006485  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-260h] +
call sub_1003896  +
xor eax eax +
inc eax  +
call sub_10042C9  +
retn   +
lea eax [ebp-230h] +
push eax  +
lea eax [ebp-234h] +
push eax  +
lea eax [ebp-210h] +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
lea eax [ebp-238h] +
push eax  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-224h] +
push eax  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
lea eax [ebp-220h] +
push eax  +
lea eax [ebp-218h] +
push eax  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1001540  +
cmp eax ebx +
jnz loc_1001C52  +
call sub_100525E  +
jmp loc_1001BD9  +
xor esi esi +
inc esi  +
cmp [ebp-234h] esi +
jnz loc_1001C67  +
cmp dword ptr [ebp+8] 2 +
ja loc_1001DB7  +
cmp [ebp-218h] ebx +
jz loc_1001C71  +
mov edi esi +
mov eax [ebp-238h] +
mov ecx [ebp-210h] +
cmp [ebp-220h] ebx +
jz loc_1001C8C  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001CFC  +
cmp [ebp-22Ch] ebx +
jz loc_1001C9B  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001CFC  +
cmp [ebp-21Ch] ebx +
jz loc_1001CAA  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001CFC  +
cmp [ebp-224h] ebx +
jz loc_1001CB9  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001CFC  +
cmp [ebp-234h] ebx +
jz loc_1001CC8  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001CFC  +
cmp [ebp-228h] ebx +
jz loc_1001CD7  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001CFC  +
cmp eax ebx +
jz loc_1001CE2  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001CFC  +
cmp [ebp-230h] ebx +
jz loc_1001CF1  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001CFC  +
cmp ecx ebx +
jz loc_1001D09  +
mov edx edi +
inc edi  +
test edx edx +
jz loc_1001D09  +
cmp edi ebx +
jnz loc_1001D09  +
cmp [ebp+8] esi +
ja loc_1001DB7  +
cmp [ebp-218h] ebx +
jz loc_1001D18  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001D5F  +
cmp [ebp-220h] ebx +
jz loc_1001D27  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001D5F  +
cmp [ebp-22Ch] ebx +
jz loc_1001D36  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001D5F  +
cmp [ebp-21Ch] ebx +
jz loc_1001D45  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001D5F  +
cmp [ebp-228h] ebx +
jz loc_1001D54  +
mov edx edi +
inc edi  +
test edx edx +
jnz loc_1001D5F  +
cmp eax ebx +
jz loc_1001D6B  +
mov edx edi +
inc edi  +
test edx edx +
jz loc_1001D6B  +
cmp edi ebx +
jbe loc_1001D6B  +
cmp [ebp-224h] esi +
jz loc_1001DB7  +
cmp [ebp-228h] ebx +
jz loc_1001D7D  +
cmp eax ebx +
jnz loc_1001DB7  +
cmp dword ptr [ebp+8] 2 +
ja loc_1001DB7  +
cmp eax ebx +
jz loc_1001D87  +
cmp dword ptr [ebp+8] 2 +
ja loc_1001DB7  +
cmp [ebp-22Ch] ebx +
jz loc_1001D95  +
cmp dword ptr [ebp+8] 2 +
ja loc_1001DB7  +
push 3  +
pop edi  +
cmp ecx esi +
jnz loc_1001DA1  +
cmp [ebp+8] edi +
jz loc_1001DB7  +
cmp [ebp-230h] esi +
jnz loc_1001DEB  +
cmp ecx esi +
jnz loc_1001E96  +
cmp dword ptr [ebp+8] 4 +
jnz loc_1001DF3  +
push 12Eh  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10053F7  +
call sub_100525E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-260h] +
call sub_1003896  +
mov eax esi +
jmp loc_1001BEB  +
cmp ecx esi +
jnz loc_1001E96  +
push ebx  +
push esi  +
push offset String2  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1004B8A  +
test eax eax +
jnz loc_1001E1F  +
mov [ebp-210h] esi +
cmp [ebp-230h] esi +
jnz loc_1001E65  +
push 14Bh  +
jmp loc_1001DBC  +
push ebx  +
push esi  +
push offset aTable  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1004B8A  +
test eax eax +
jz loc_1001E96  +
push ebx  +
push esi  +
push offset aCsv  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1004B8A  +
test eax eax +
jnz loc_1001E8C  +
mov [ebp-210h] edi +
cmp [ebp-230h] esi +
jnz loc_1001E65  +
or dword ptr [ebp-210h] 1000h +
lea ecx [ebp-260h] +
call sub_100323C  +
test eax eax +
jz loc_1001EA2  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1006485  +
jmp loc_1001DD0  +
push 133h  +
jmp loc_1001DBC  +
mov dword ptr [ebp-210h] 2 +
jmp loc_1001E53  +
cmp [ebp-228h] esi +
jnz loc_1001EB4  +
cmp dword ptr [ebp+8] 2 +
jnz loc_1001EB4  +
mov eax esi +
jmp loc_1001EC6  +
cmp [ebp-238h] esi +
jnz loc_1001EC4  +
push 2  +
pop eax  +
cmp [ebp+8] eax +
jz loc_1001EC6  +
mov eax ebx +
mov [ebp-214h] ebx +
cmp [ebp-218h] ebx +
jz loc_1001EDA  +
mov [ebp-214h] esi +
cmp [ebp-220h] ebx +
jz loc_1001EF2  +
mov ecx [ebp-214h] +
inc dword ptr [ebp-214h]  +
test ecx ecx +
jnz loc_1001F1A  +
cmp [ebp-21Ch] ebx +
jz loc_1001F12  +
mov ecx [ebp-214h] +
inc dword ptr [ebp-214h]  +
test ecx ecx +
jz loc_1001F12  +
cmp [ebp-214h] esi +
ja loc_1001F1A  +
cmp [ebp-224h] esi +
jnz loc_1001F3A  +
mov [ebp-23Ch] esi +
cmp [ebp-224h] esi +
jnz loc_1001F3A  +
mov [ebp-218h] esi +
mov [ebp-220h] esi +
mov [ebp-21Ch] esi +
cmp [ebp-218h] esi +
jz loc_1001F4B  +
cmp eax 2 +
jz loc_1001F4B  +
cmp eax esi +
jnz loc_1001F65  +
push eax  +
push dword ptr [ebp-210h]  +
lea ecx [ebp-260h] +
call sub_100379E  +
cmp eax ebx +
jnz loc_1001DD0  +
xor edi edi +
inc edi  +
mov esi offset String +
cmp [ebp-220h] edi +
jnz loc_1001FE2  +
cmp [ebp-23Ch] edi +
jnz loc_1001F8C  +
mov eax ds:_iob +
push esi  +
add eax 20h +
push eax  +
call sub_10053F7  +
push dword ptr [ebp-210h]  +
lea ecx [ebp-260h] +
call sub_1003937  +
cmp eax ebx +
jz loc_1001FE2  +
call ds:GetLastError  +
cmp eax 8007000Eh +
jz loc_1001FC7  +
push 1E8h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10053F7  +
call sub_100525E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-260h] +
call sub_1003896  +
mov eax edi +
jmp loc_1001BEB  +
cmp [ebp-22Ch] edi +
jnz loc_100200E  +
lea ecx [ebp-260h] +
call sub_10032A2  +
cmp eax ebx +
jz loc_100200E  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1006485  +
jmp loc_1001FC7  +
cmp [ebp-21Ch] edi +
jnz loc_1002049  +
cmp [ebp-23Ch] edi +
jnz loc_100202D  +
mov eax ds:_iob +
push esi  +
add eax 20h +
push eax  +
call sub_10053F7  +
push dword ptr [ebp-210h]  +
lea ecx [ebp-260h] +
call sub_1003320  +
cmp eax ebx +
jz loc_1002049  +
mov esi edi +
jmp loc_1001E74  +
cmp [ebp-234h] edi +
jnz loc_100205D  +
call sub_1001515  +
xor esi esi +
jmp loc_1001DD0  +
mov eax [ebp-214h] +
cmp [ebp-218h] ebx +
jz loc_1002072  +
mov ecx eax +
inc eax  +
test ecx ecx +
jnz loc_1002056  +
cmp [ebp-220h] ebx +
jz loc_1002081  +
mov ecx eax +
inc eax  +
test ecx ecx +
jnz loc_1002056  +
cmp [ebp-22Ch] ebx +
jz loc_1002090  +
mov ecx eax +
inc eax  +
test ecx ecx +
jnz loc_1002056  +
cmp [ebp-21Ch] ebx +
jz loc_100209F  +
mov ecx eax +
inc eax  +
test ecx ecx +
jnz loc_1002056  +
cmp [ebp-224h] ebx +
jz loc_10020AE  +
mov ecx eax +
inc eax  +
test ecx ecx +
jnz loc_1002056  +
cmp [ebp-234h] ebx +
jz loc_10020BD  +
mov ecx eax +
inc eax  +
test ecx ecx +
jnz loc_1002056  +
cmp [ebp-228h] ebx +
jz loc_10020CC  +
mov ecx eax +
inc eax  +
test ecx ecx +
jnz loc_1002056  +
cmp [ebp-238h] ebx +
jz loc_10020DF  +
mov ecx eax +
inc eax  +
test ecx ecx +
jnz loc_1002056  +
cmp eax ebx +
jnz loc_1002056  +
cmp [ebp+8] edi +
jnz loc_1002056  +
push 3  +
push dword ptr [ebp-210h]  +
lea ecx [ebp-260h] +
call sub_100379E  +
cmp eax ebx +
jz loc_1002056  +
jmp loc_1002042  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov [eax] edx +
mov edx [ecx+4] +
mov [eax+4] edx +
mov ecx [ecx+8] +
mov [eax+8] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor edx edx +
mov esi 0FEh +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+cbName] edx +
mov ebx esi +
lea eax [ebp+Name] +
mov [eax] dl +
inc eax  +
dec ebx  +
jnz loc_1002168  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+Name] +
push eax  +
push ecx  +
push edx  +
mov [ebp+cbName] esi +
call ds:LookupPrivilegeNameW  +
test eax eax +
jnz loc_1002196  +
call ds:GetLastError  +
jmp loc_10021A6  +
push esi  +
lea eax [ebp+Name] +
push eax  +
push edi  +
call sub_1005371  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 208h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+lpName] +
push ebx  +
push esi  +
xor edx edx +
mov esi 0FEh +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+cbDisplayName] edx +
mov [ebp+LanguageId] edx +
mov ebx esi +
lea eax [ebp+DisplayName] +
mov [eax] dl +
inc eax  +
dec ebx  +
jnz loc_10021F5  +
lea eax [ebp+LanguageId] +
push eax  +
lea eax [ebp+cbDisplayName] +
push eax  +
lea eax [ebp+DisplayName] +
push eax  +
push ecx  +
push edx  +
mov [ebp+cbDisplayName] esi +
call ds:LookupPrivilegeDisplayNameW  +
test eax eax +
jnz loc_100222A  +
call ds:GetLastError  +
jmp loc_100223A  +
push esi  +
lea eax [ebp+DisplayName] +
push eax  +
push edi  +
call sub_1005371  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 8  +
***
movzx eax byte ptr [ecx+8] +
shr eax 1 +
and eax 1 +
retn   +
***
mov eax ecx +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
retn   +
***
cmp dword ptr [ecx+4] 0 +
jz locret_100227F  +
cmp dword ptr [ecx] 0 +
jz locret_100227F  +
push ecx  +
call sub_1004F9C  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+pSourceSid]  +
mov esi ecx +
call ds:GetLengthSid  +
mov edi eax +
push edi  +
call sub_1004C86  +
mov [esi] eax +
test eax eax +
jnz loc_10022AD  +
call ds:GetLastError  +
jmp loc_10022C5  +
push [ebp+pSourceSid]  +
mov dword ptr [esi+4] 1 +
push eax  +
push edi  +
call ds:CopySid  +
test eax eax +
jz loc_10022A5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push edi  +
lea eax [ebp+hObject] +
push eax  +
xor edi edi +
push 68h  +
mov [ebp+hObject] edi +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_10022FE  +
call sub_1004973  +
xor eax eax +
jmp loc_1002365  +
lea eax [ebp+Luid] +
push eax  +
push offset Name  +
push edi  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jnz loc_1002322  +
call sub_1004973  +
push [ebp+hObject]  +
call ds:CloseHandle  +
jmp loc_10022FA  +
mov eax [ebp+Luid.LowPart] +
push esi  +
push edi  +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
push edi  +
push 10h  +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
lea eax [ebp+NewState] +
push eax  +
push edi  +
push [ebp+hObject]  +
xor esi esi +
inc esi  +
mov [ebp+NewState.PrivilegeCount] esi +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_1002359  +
call sub_1004973  +
xor esi esi +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax esi +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1002383  +
cmp ecx 7FFFFFFFh +
jbe loc_1002388  +
mov eax 80070057h +
test eax eax +
jl loc_10023C5  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10023B5  +
cmp eax esi +
ja loc_10023B5  +
jnz loc_10023C0  +
jmp loc_10023BA  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40Ch +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_40C] eax +
xor ebx ebx +
push edi  +
mov eax 0FEh +
mov edi ecx +
mov [ebp+cbName] ebx +
mov [ebp+cbReferencedDomainName] ebx +
mov edx eax +
lea ecx [ebp+String] +
mov [ecx] bl +
inc ecx  +
dec edx  +
jnz loc_100240D  +
mov edx eax +
lea ecx [ebp+ReferencedDomainName] +
mov [ecx] bl +
inc ecx  +
dec edx  +
jnz loc_100241B  +
mov ecx edi +
mov [ebp+cbName] eax +
mov [ebp+cbReferencedDomainName] eax +
call sub_10022D0  +
test eax eax +
jnz loc_1002443  +
call ds:GetLastError  +
jmp loc_100250E  +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+String] +
push eax  +
push dword ptr [edi]  +
push ebx  +
call ds:LookupAccountSidW  +
test eax eax +
jnz loc_10024B0  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1004B69  +
test eax eax +
jnz loc_100248E  +
push [ebp+arg_4]  +
push offset asc_10012C8  +
jmp loc_10024F8  +
push ebx  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call sub_1004B69  +
test eax eax +
jz loc_10024B0  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1004B69  +
test eax eax +
jnz loc_1002438  +
push ebx  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call sub_1004B69  +
push [ebp+arg_4]  +
test eax eax +
jz loc_10024F1  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
push esi  +
call sub_1005371  +
push [ebp+arg_4]  +
push offset asc_10012C4  +
push esi  +
call sub_10053B4  +
push [ebp+arg_4]  +
lea eax [ebp+String] +
push eax  +
push esi  +
call sub_10053B4  +
jmp loc_10024FE  +
lea eax [ebp+String] +
push eax  +
push esi  +
call sub_1005371  +
mov eax [ebp+peUse] +
mov ecx [ebp+var_40C] +
mov [ecx] eax +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 408h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov ebx ecx +
mov esi 0FEh +
mov [ebp+var_400] eax +
mov [ebp+var_408] ebx +
mov ecx esi +
lea eax [ebp+var_3FC] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1002559  +
mov ecx esi +
lea eax [ebp+var_200] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1002568  +
mov eax [ebx] +
test eax eax +
jnz loc_100257D  +
xor eax eax +
inc eax  +
jmp loc_10026F2  +
push eax  +
call ds:IsValidSid  +
test eax eax +
jnz loc_10025A3  +
push 132h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10053F7  +
jmp loc_1002575  +
push esi  +
push offset aS1  +
lea eax [ebp+var_200] +
push eax  +
call sub_1005371  +
push dword ptr [ebx]  +
call ds:GetSidIdentifierAuthority  +
test eax eax +
jnz loc_10025CC  +
call ds:GetLastError  +
jmp loc_10026F2  +
mov cl [eax] +
test cl cl +
jnz loc_100260E  +
cmp [eax+1] cl +
jnz loc_100260E  +
movzx ecx byte ptr [eax+2] +
movzx edx byte ptr [eax+3] +
shl ecx 8 +
add ecx edx +
movzx edx byte ptr [eax+4] +
movzx eax byte ptr [eax+5] +
shl ecx 8 +
add ecx edx +
shl ecx 8 +
add ecx eax +
push ecx  +
push offset aLu  +
lea eax [ebp+var_3FC] +
push esi  +
push eax  +
call sub_100236D  +
add esp 10h +
jmp loc_1002640  +
movzx edx byte ptr [eax+5] +
push edx  +
movzx edx byte ptr [eax+4] +
push edx  +
movzx edx byte ptr [eax+3] +
push edx  +
movzx edx byte ptr [eax+2] +
movzx eax byte ptr [eax+1] +
push edx  +
push eax  +
movzx eax cl +
push eax  +
push offset a0x02hx02hx02hx  +
lea eax [ebp+var_3FC] +
push esi  +
push eax  +
call sub_100236D  +
add esp 24h +
push edi  +
push esi  +
mov edi offset asc_10012D0 +
push edi  +
lea eax [ebp+var_200] +
push eax  +
call sub_10053B4  +
push esi  +
lea eax [ebp+var_3FC] +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_10053B4  +
push dword ptr [ebx]  +
call ds:GetSidSubAuthorityCount  +
mov [ebp+var_404] eax +
test eax eax +
jz loc_1002702  +
xor bl bl +
cmp [eax] bl +
jbe loc_10026DC  +
movzx eax bl +
push eax  +
mov eax [ebp+var_408] +
push dword ptr [eax]  +
call ds:GetSidSubAuthority  +
test eax eax +
jz loc_1002702  +
push 0Ah  +
lea ecx [ebp+var_3FC] +
push ecx  +
push dword ptr [eax]  +
call ds:_ultow  +
add esp 0Ch +
push esi  +
push edi  +
lea eax [ebp+var_200] +
push eax  +
call sub_10053B4  +
push esi  +
lea eax [ebp+var_3FC] +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_10053B4  +
mov eax [ebp+var_404] +
inc bl  +
cmp bl [eax] +
jb loc_1002684  +
push esi  +
lea eax [ebp+var_200] +
push eax  +
push [ebp+var_400]  +
call sub_1005371  +
xor eax eax +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 4  +
call ds:GetLastError  +
jmp loc_10026F1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1002524  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B30h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi 0FEh +
mov edi ecx +
mov [ebp+nSize] ebx +
mov [ebp+var_B30] ebx +
mov [ebp+lpString] ebx +
mov ecx esi +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100275A  +
mov ecx esi +
lea eax [ebp+var_5F8] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002768  +
mov ecx esi +
lea eax [ebp+sz] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002776  +
call sub_100861A  +
mov [ebp+var_B24] eax +
cmp eax ebx +
jnz loc_10027C2  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1004973  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1006485  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 8  +
cmp [ebp+arg_4] 2 +
mov [ebp+nSize] esi +
jnz loc_10028D5  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+sz] +
xor esi esi +
push eax  +
inc esi  +
push esi  +
call GetUserNameExW  +
test al al +
jnz loc_10028AB  +
mov eax [ebp+nSize] +
add eax eax +
push eax  +
call sub_1004C86  +
mov [ebp+lpString] eax +
cmp eax ebx +
jnz loc_1002820  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1006485  +
mov eax esi +
jmp loc_10027B1  +
lea ecx [ebp+nSize] +
push ecx  +
push eax  +
push esi  +
call GetUserNameExW  +
test al al +
jnz loc_1002865  +
push 149h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10053F7  +
lea eax [ebp+var_B24] +
push eax  +
call sub_100868F  +
lea eax [ebp+lpString] +
push eax  +
call sub_1004F9C  +
jmp loc_100281C  +
mov eax ds:_iob +
push [ebp+lpString]  +
add eax 20h +
push eax  +
call sub_10053F7  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_10053F7  +
lea eax [ebp+lpString] +
push eax  +
call sub_1004F9C  +
lea eax [ebp+var_B24] +
push eax  +
call sub_100868F  +
xor eax eax +
jmp loc_10027B1  +
lea eax [ebp+sz] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_10053F7  +
jmp loc_1002898  +
cmp [ebp+arg_4] 1 +
jnz loc_10029DE  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+sz] +
push eax  +
push 8  +
call GetUserNameExW  +
test al al +
jnz loc_100299B  +
mov eax [ebp+nSize] +
add eax eax +
push eax  +
call sub_1004C86  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_100279B  +
lea ecx [ebp+nSize] +
push ecx  +
push eax  +
push 8  +
call GetUserNameExW  +
test al al +
jnz loc_1002966  +
push 14Ah  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10053F7  +
xor ebx ebx +
inc ebx  +
lea eax [ebp+var_B24] +
push eax  +
call sub_100868F  +
lea eax [ebp+lpString] +
push eax  +
call sub_1004F9C  +
mov eax ebx +
jmp loc_10027B1  +
push [ebp+lpString]  +
call ds:CharLowerW  +
mov eax ds:_iob +
push [ebp+lpString]  +
add eax 20h +
push eax  +
call sub_10053F7  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_10053F7  +
jmp loc_1002947  +
lea eax [ebp+sz] +
push eax  +
call ds:CharLowerW  +
lea eax [ebp+sz] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_10053F7  +
lea eax [ebp+var_B24] +
push eax  +
call sub_100868F  +
jmp loc_100295F  +
lea eax [ebp+var_B30] +
push eax  +
push esi  +
lea eax [ebp+String] +
push eax  +
mov ecx edi +
call sub_10023CC  +
mov esi eax +
cmp esi ebx +
jz loc_1002A11  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1006485  +
mov ebx esi +
jmp loc_10029D0  +
lea eax [ebp+String] +
push eax  +
call ds:CharLowerW  +
cmp [ebp+arg_4] 3 +
jz loc_1002A3A  +
lea eax [ebp+var_5F8] +
push eax  +
mov ecx edi +
call sub_1002524  +
cmp eax ebx +
jz loc_1002A3A  +
mov ebx eax +
jmp loc_10029D0  +
lea eax [ebp+String] +
push eax  +
call sub_1004F61  +
mov esi eax +
lea eax [ebp+var_5F8] +
push eax  +
call sub_1004F61  +
push 190h  +
mov [ebp+var_B30] eax +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax esi +
jbe loc_1002A70  +
mov esi eax +
push 191h  +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax [ebp+var_B30] +
jbe loc_1002A8E  +
mov [ebp+var_B30] eax +
push 1FCh  +
lea eax [ebp+var_B1C] +
push ebx  +
push eax  +
mov [ebp+var_B20] ebx +
call memset  +
mov [ebp+var_920] esi +
mov [ebp+var_91C] 10h +
mov esi offset aS +
lea edi [ebp+var_918] +
movs   +
push 7Ch  +
lea eax [ebp+var_912] +
push ebx  +
push eax  +
movs   +
call memset  +
push 1FCh  +
lea eax [ebp+var_888] +
push ebx  +
push eax  +
mov [ebp+var_894] ebx +
mov [ebp+var_890] ebx +
mov [ebp+var_88C] ebx +
call memset  +
mov eax [ebp+var_B30] +
mov [ebp+var_68C] eax +
mov [ebp+var_688] 10h +
mov esi offset aS +
lea edi [ebp+var_684] +
movs   +
push 7Ch  +
lea eax [ebp+var_67E] +
push ebx  +
push eax  +
movs   +
call memset  +
add esp 30h +
cmp [ebp+arg_4] 3 +
mov [ebp+var_600] ebx +
mov [ebp+var_5FC] ebx +
jnz loc_1002B66  +
push 0FEh  +
push 190h  +
call sub_100646D  +
push eax  +
lea eax [ebp+var_B20] +
push eax  +
call sub_1005371  +
lea eax [ebp+String] +
jmp loc_10029AE  +
mov edi 190h +
lea esi [ebp+var_B20] +
push 0FEh  +
push edi  +
call sub_100646D  +
push eax  +
push esi  +
call sub_1005371  +
inc edi  +
add esi 294h +
cmp edi 191h +
jbe loc_1002B71  +
push 2  +
push [ebp+var_B24]  +
call sub_1008B07  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push ebx  +
push ebx  +
push [ebp+var_B24]  +
call sub_100904F  +
push ebx  +
lea eax [ebp+var_5F8] +
push eax  +
push 1  +
push ebx  +
push [ebp+var_B24]  +
call sub_100904F  +
cmp [ebp+arg_0] 3 +
jz loc_1002C1E  +
test [ebp+arg_0] 1000h +
jnz loc_1002C1E  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_10053F7  +
push 144h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
push 1E3h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
push [ebp+var_B24]  +
lea eax [ebp+var_B20] +
push [ebp+arg_0]  +
push eax  +
push 2  +
call sub_10085D0  +
jmp loc_10029D0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
call sub_10023CC  +
mov edi eax +
test edi edi +
jz loc_1002C79  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1006485  +
mov eax edi +
jmp loc_1002C91  +
push [ebp+arg_8]  +
mov ecx esi +
call sub_1002524  +
test eax eax +
jnz loc_1002C91  +
mov eax [ebp+arg_C] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1002CAE  +
push eax  +
call ds:CloseHandle  +
lea eax [esi+4] +
cmp dword ptr [eax] 0 +
pop esi  +
jz locret_1002CBD  +
push eax  +
call sub_1004F9C  +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
mov esi ds:GetTokenInformation +
lea eax [ebp-14h] +
push eax  +
xor ebx ebx +
push ebx  +
push ebx  +
push 3  +
push dword ptr [edi]  +
mov [ebp-14h] ebx +
call esi  +
cmp [ebp-14h] ebx +
jnz loc_1002CF8  +
call ds:GetLastError  +
jmp loc_1002DB4  +
push dword ptr [ebp-14h]  +
call sub_1004C86  +
mov [ebp-10h] eax +
cmp eax ebx +
jnz loc_1002D0F  +
push 8  +
pop eax  +
jmp loc_1002DB4  +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp-14h]  +
push eax  +
push 3  +
push dword ptr [edi]  +
call esi  +
cmp eax ebx +
jnz loc_1002D2C  +
lea eax [ebp-10h] +
push eax  +
call sub_1004F9C  +
jmp loc_1002CED  +
mov eax [ebp-10h] +
mov eax [eax] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
shl eax 2 +
push eax  +
call sub_1004C86  +
mov esi [ebp+8] +
mov [esi] eax +
cmp eax ebx +
jnz loc_1002D53  +
lea eax [ebp-10h] +
push eax  +
call sub_1004F9C  +
jmp loc_1002D07  +
mov ecx [ebp-10h] +
xor eax eax +
xor edi edi +
cmp ax [ecx] +
jnb loc_1002DA9  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp+0Ch] ecx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_1002D88  +
mov edx [ebp-10h] +
movzx eax di +
imul eax eax +
lea eax [eax+edx+4] +
push eax  +
call sub_1002115  +
jmp loc_1002D8A  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [esi] +
movzx ecx di +
shl ecx 2 +
mov [ecx+edx] eax +
mov eax [esi] +
cmp [ecx+eax] ebx +
jz loc_1002D21  +
mov eax [ebp-10h] +
inc edi  +
cmp di [eax] +
jb loc_1002D5F  +
lea eax [ebp-10h] +
push eax  +
call sub_1004F9C  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+dwBytes] 0 +
push esi  +
mov esi ds:GetTokenInformation +
push edi  +
lea eax [ebp+dwBytes] +
push eax  +
push 0  +
push 0  +
mov edi ecx +
push 1  +
push dword ptr [edi]  +
call esi  +
cmp [ebp+dwBytes] 0 +
jnz loc_1002DF2  +
call ds:GetLastError  +
jmp loc_1002E3D  +
push [ebp+dwBytes]  +
call sub_1004C86  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1002E06  +
push 8  +
pop eax  +
jmp loc_1002E3D  +
lea ecx [ebp+dwBytes] +
push ecx  +
push [ebp+dwBytes]  +
push eax  +
push 1  +
push dword ptr [edi]  +
call esi  +
test eax eax +
jnz loc_1002E23  +
lea eax [ebp+var_8] +
push eax  +
call sub_1004F9C  +
jmp loc_1002DEA  +
mov eax [ebp+var_8] +
push dword ptr [eax]  +
mov ecx [ebp+arg_0] +
call sub_1002285  +
mov esi eax +
lea eax [ebp+var_8] +
push eax  +
call sub_1004F9C  +
mov eax esi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
xor edx edx +
test ecx ecx +
jbe loc_1002E6B  +
add eax 8 +
test dword ptr [eax] 0C0000000h +
jnz loc_1002E71  +
inc edx  +
add eax 8 +
cmp edx ecx +
jb loc_1002E5B  +
xor eax eax +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1002E6D  +
***
mov edi edi +
push ecx  +
push 18h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1002E97  +
jmp ds:GetLastError  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 400h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi 1FCh +
mov [ebp+var_400] eax +
push edi  +
xor ecx ecx +
mov edx esi +
lea eax [ebp+var_3FC] +
mov [eax] cl +
inc eax  +
dec edx  +
jnz loc_1002ECF  +
xor ebx ebx +
inc ebx  +
test byte ptr [ebp+arg_0] bl +
jz loc_1002EF7  +
push esi  +
push 1FEh  +
call sub_100646D  +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
mov ecx ebx +
test byte ptr [ebp+arg_0] 2 +
mov edi offset asc_1001334 +
jz loc_1002F2E  +
cmp ecx ebx +
jnz loc_1002F14  +
push esi  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
push esi  +
push 1FFh  +
call sub_100646D  +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
mov ecx ebx +
test byte ptr [ebp+arg_0] 4 +
jz loc_1002F60  +
cmp ecx ebx +
jnz loc_1002F46  +
push esi  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
push esi  +
push 200h  +
call sub_100646D  +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
mov ecx ebx +
test byte ptr [ebp+arg_0] 8 +
jz loc_1002F92  +
cmp ecx ebx +
jnz loc_1002F78  +
push esi  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
push esi  +
push 201h  +
call sub_100646D  +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
mov ecx ebx +
test byte ptr [ebp+arg_0] 10h +
jz loc_1002FC4  +
cmp ecx ebx +
jnz loc_1002FAA  +
push esi  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
push esi  +
push 202h  +
call sub_100646D  +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
mov ecx ebx +
test [ebp+arg_0] 20000000h +
jz loc_1002FF7  +
cmp ecx ebx +
jnz loc_1002FDF  +
push esi  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
push esi  +
push 204h  +
call sub_100646D  +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10053B4  +
push [ebp+arg_8]  +
lea eax [ebp+var_3FC] +
push eax  +
push [ebp+var_400]  +
call sub_1005371  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov ebx ecx +
mov esi ds:GetTokenInformation +
lea eax [ebp-14h] +
push eax  +
xor edi edi +
push edi  +
push edi  +
push 2  +
push dword ptr [ebx]  +
mov [ebp-14h] edi +
call esi  +
cmp [ebp-14h] edi +
jnz loc_1003057  +
call ds:GetLastError  +
jmp loc_10031C5  +
push dword ptr [ebp-14h]  +
call sub_1004C86  +
mov [ebp-10h] eax +
cmp eax edi +
jnz loc_1003077  +
lea eax [ebp-10h] +
push eax  +
call sub_1004F9C  +
push 8  +
pop eax  +
jmp loc_10031C5  +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp-14h]  +
push eax  +
push 2  +
push dword ptr [ebx]  +
call esi  +
cmp eax edi +
jnz loc_1003094  +
lea eax [ebp-10h] +
push eax  +
call sub_1004F9C  +
jmp loc_100304C  +
mov eax [ebp-10h] +
movzx edi word ptr [eax] +
mov esi [ebp+10h] +
push eax  +
mov ecx ebx +
mov [esi] edi +
call sub_1002E48  +
test eax eax +
jz loc_10030B0  +
dec edi  +
mov [esi] edi +
jmp loc_10030B6  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
mov eax [esi] +
shl eax 2 +
push eax  +
call sub_1004C86  +
mov ecx [ebp+8] +
xor edi edi +
mov [ecx] eax +
cmp eax edi +
jz loc_1003066  +
mov [ebp+10h] edi +
cmp [esi] edi +
jbe loc_1003119  +
push 8  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-18h] eax +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_10030EF  +
mov ecx eax +
call unknown_libname_1  +
jmp loc_10030F1  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp+8] +
mov ecx edi +
mov edi [edx] +
shl ecx 2 +
mov [ecx+edi] eax +
mov eax [edx] +
cmp dword ptr [ecx+eax] 0 +
jz loc_1003089  +
inc dword ptr [ebp+10h]  +
movzx edi word ptr [ebp+10h] +
cmp edi [esi] +
jb loc_10030D3  +
mov eax [ebp-10h] +
mov eax [eax] +
lea eax ds:0Ah[eax*4] +
push eax  +
call sub_1004C86  +
mov [ebx+4] eax +
test eax eax +
jz loc_1003066  +
mov eax [ebp-10h] +
xor esi esi +
xor edi edi +
cmp [eax] esi +
jbe loc_10031B3  +
mov eax [eax+esi*8+8] +
mov ecx [ebx+4] +
mov [ecx+esi*4] eax +
mov eax [ebp-10h] +
lea eax [eax+esi*8] +
test dword ptr [eax+8] 0C0000000h +
jz loc_1003197  +
push 8  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+10h] eax +
mov dword ptr [ebp-4] 1 +
test eax eax +
jz loc_1003179  +
mov ecx eax +
call unknown_libname_1  +
jmp loc_100317B  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
test eax eax +
jz loc_1003089  +
mov ecx [ebp-10h] +
push dword ptr [ecx+esi*8+4]  +
mov ecx eax +
jmp loc_10031A6  +
mov edx [ebp+8] +
mov edx [edx] +
push dword ptr [eax+4]  +
movzx ecx di +
mov ecx [edx+ecx*4] +
inc edi  +
call sub_1002285  +
mov eax [ebp-10h] +
inc esi  +
cmp esi [eax] +
jb loc_1003141  +
mov eax [ebx+4] +
and dword ptr [eax+esi*4] 0 +
lea eax [ebp-10h] +
push eax  +
call sub_1004F9C  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call unknown_libname_1  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+0Ch] +
call unknown_libname_1  +
mov byte ptr [ebp-4] 1 +
mov [esi+14h] edi +
mov [esi+8] edi +
mov [esi+18h] edi +
mov [esi+1Ch] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100226E  +
test [ebp+arg_0] 1 +
jz loc_1003230  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1002E7B  +
test eax eax +
jz loc_1003262  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1006485  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
lea eax [esi+0Ch] +
push eax  +
mov ecx esi +
call sub_1002DC1  +
test eax eax +
jnz loc_100324A  +
lea eax [esi+1Ch] +
push eax  +
lea eax [esi+14h] +
push eax  +
lea eax [esi+18h] +
push eax  +
mov ecx esi +
call sub_1003022  +
test eax eax +
jnz loc_100324A  +
lea eax [esi+20h] +
push eax  +
lea eax [esi+8] +
push eax  +
mov ecx esi +
call sub_1002CC3  +
test eax eax +
jnz loc_100324A  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 200h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx 0FEh +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec edx  +
jnz loc_10032C2  +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_100330C  +
lea eax [ebp+String] +
push eax  +
call sub_100270F  +
test eax eax +
jnz loc_100330F  +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_10053F7  +
xor eax eax +
jmp loc_100330F  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100421C  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0DCCh +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
xor ebx ebx +
mov ecx 0FEh +
mov [ebp+var_DCC] edi +
mov [ebp+var_DB8] ebx +
mov [ebp+var_DC4] ebx +
mov [ebp+var_DC8] ebx +
mov edx ecx +
lea eax [ebp+Name] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1003361  +
mov edx ecx +
lea eax [ebp+var_5F8] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_100336F  +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100337B  +
mov [ebp+var_DBC] ebx +
cmp [edi+20h] ebx +
jbe loc_1003469  +
xor eax eax +
mov esi eax +
mov eax [edi+8] +
shl esi 2 +
mov ecx [esi+eax] +
call sub_1002250  +
push 0FEh  +
cmp eax 1 +
jnz loc_10033B3  +
push 142h  +
jmp loc_10033B8  +
push 143h  +
call sub_100646D  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1005371  +
lea eax [ebp+Name] +
push eax  +
mov eax [edi+8] +
mov ecx [esi+eax] +
call sub_1002138  +
cmp eax ebx +
jnz loc_1003788  +
lea eax [ebp+var_5F8] +
push eax  +
lea eax [ebp+Name] +
push eax  +
mov eax [edi+8] +
mov ecx [esi+eax] +
call sub_10021BC  +
cmp eax ebx +
jnz loc_1003788  +
lea eax [ebp+String] +
push eax  +
call sub_1004F61  +
cmp [ebp+var_DB8] eax +
jnb loc_100341F  +
mov [ebp+var_DB8] eax +
lea eax [ebp+Name] +
push eax  +
call sub_1004F61  +
cmp [ebp+var_DC4] eax +
jnb loc_1003439  +
mov [ebp+var_DC4] eax +
lea eax [ebp+var_5F8] +
push eax  +
call sub_1004F61  +
cmp [ebp+var_DC8] eax +
jnb loc_1003453  +
mov [ebp+var_DC8] eax +
inc [ebp+var_DBC]  +
movzx eax word ptr [ebp+var_DBC] +
cmp eax [edi+20h] +
jb loc_1003392  +
push 1C5h  +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax [ebp+var_DC4] +
jbe loc_1003487  +
mov [ebp+var_DC4] eax +
push 1C6h  +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax [ebp+var_DC8] +
jbe loc_10034A5  +
mov [ebp+var_DC8] eax +
push 1C7h  +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax [ebp+var_DB8] +
jbe loc_10034C3  +
mov [ebp+var_DB8] eax +
call sub_100861A  +
push 1FCh  +
mov [ebp+var_DC0] eax +
lea eax [ebp+var_DB0] +
push ebx  +
push eax  +
mov [ebp+var_DB4] ebx +
call memset  +
mov eax [ebp+var_DC4] +
mov [ebp+var_BB4] eax +
mov [ebp+var_BB0] 10h +
mov esi offset aS +
lea edi [ebp+var_BAC] +
movs   +
push 7Ch  +
lea eax [ebp+var_BA6] +
push ebx  +
push eax  +
movs   +
call memset  +
push 1FCh  +
lea eax [ebp+var_B1C] +
push ebx  +
push eax  +
mov [ebp+var_B28] ebx +
mov [ebp+var_B24] ebx +
mov [ebp+var_B20] ebx +
call memset  +
mov eax [ebp+var_DC8] +
mov [ebp+var_920] eax +
mov [ebp+var_91C] 10h +
mov esi offset aS +
lea edi [ebp+var_918] +
movs   +
push 7Ch  +
lea eax [ebp+var_912] +
push ebx  +
push eax  +
movs   +
call memset  +
push 1FCh  +
lea eax [ebp+var_888] +
push ebx  +
push eax  +
mov [ebp+var_894] ebx +
mov [ebp+var_890] ebx +
mov [ebp+var_88C] ebx +
call memset  +
mov eax [ebp+var_DB8] +
mov [ebp+var_68C] eax +
mov [ebp+var_688] 10h +
mov esi offset aS +
lea edi [ebp+var_684] +
movs   +
push 7Ch  +
lea eax [ebp+var_67E] +
push ebx  +
push eax  +
movs   +
call memset  +
add esp 48h +
mov [ebp+var_600] ebx +
mov [ebp+var_5FC] ebx +
mov edi 1C5h +
lea esi [ebp+var_DB4] +
push 0FEh  +
push edi  +
call sub_100646D  +
push eax  +
push esi  +
call sub_1005371  +
inc edi  +
add esi 294h +
cmp edi 1C7h +
jbe loc_10035E1  +
mov esi [ebp+var_DCC] +
mov [ebp+var_DBC] ebx +
mov [ebp+var_DB8] ebx +
cmp [esi+20h] ebx +
jbe loc_100370B  +
xor eax eax +
mov edi eax +
mov eax [esi+8] +
shl edi 2 +
mov ecx [edi+eax] +
call sub_1002250  +
push 0FEh  +
cmp eax 1 +
jnz loc_1003640  +
push 142h  +
jmp loc_1003645  +
push 143h  +
call sub_100646D  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1005371  +
lea eax [ebp+Name] +
push eax  +
mov eax [esi+8] +
mov ecx [edi+eax] +
call sub_1002138  +
cmp eax ebx +
jnz loc_1003778  +
lea eax [ebp+var_5F8] +
push eax  +
lea eax [ebp+Name] +
push eax  +
mov eax [esi+8] +
mov ecx [edi+eax] +
call sub_10021BC  +
cmp eax ebx +
jnz loc_1003778  +
push 3  +
push [ebp+var_DC0]  +
call sub_1008B07  +
push ebx  +
lea eax [ebp+Name] +
push eax  +
push ebx  +
push [ebp+var_DB8]  +
push [ebp+var_DC0]  +
call sub_100904F  +
push ebx  +
lea eax [ebp+var_5F8] +
push eax  +
push 1  +
push [ebp+var_DB8]  +
push [ebp+var_DC0]  +
call sub_100904F  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 2  +
push [ebp+var_DB8]  +
push [ebp+var_DC0]  +
call sub_100904F  +
inc [ebp+var_DBC]  +
movzx eax word ptr [ebp+var_DBC] +
inc [ebp+var_DB8]  +
cmp eax [esi+20h] +
jb loc_100361F  +
cmp [ebp+arg_0] 3 +
jz loc_100375F  +
test [ebp+arg_0] 1000h +
jnz loc_100375F  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_10053F7  +
push 147h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
push 1E6h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
push [ebp+var_DC0]  +
lea eax [ebp+var_DB4] +
push [ebp+arg_0]  +
push eax  +
push 3  +
call sub_10085D0  +
jmp loc_100377A  +
mov ebx eax +
lea eax [ebp+var_DC0] +
push eax  +
call sub_100868F  +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 0Ch +
pop ebp  +
jmp loc_100271F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3FCh +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax 1FCh +
push esi  +
mov esi [ebp+arg_4] +
mov edx eax +
lea ecx [ebp+var_3FC] +
mov byte ptr [ecx] 0 +
inc ecx  +
dec edx  +
jnz loc_10037D7  +
mov ecx [ebp+arg_0] +
dec ecx  +
cmp ecx 9 +
ja loc_1003832  +
jmp ds:off_1003869[ecx*4]  +
push eax  +
push 1F4h  +
jmp loc_1003838  +
push eax  +
push 1F5h  +
jmp loc_1003838  +
push eax  +
push 1F6h  +
jmp loc_1003838  +
push eax  +
push 1F7h  +
jmp loc_1003838  +
push eax  +
push 1F8h  +
jmp loc_1003838  +
push eax  +
push 1F9h  +
jmp loc_1003838  +
push eax  +
push 1FAh  +
jmp loc_1003838  +
push eax  +
push eax  +
jmp loc_1003838  +
push eax  +
push 1FDh  +
jmp loc_1003838  +
push eax  +
push 1FBh  +
call sub_100646D  +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_1005371  +
push [ebp+arg_8]  +
lea eax [ebp+var_3FC] +
push eax  +
push esi  +
call sub_1005371  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100421C  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor eax eax +
inc eax  +
mov [ebp-4] eax +
mov ecx [esi+14h] +
xor ebx ebx +
cmp ecx ebx +
jz loc_10038BC  +
push eax  +
call sub_1003216  +
lea edi [esi+8] +
cmp [edi] ebx +
jz loc_10038E4  +
xor eax eax +
cmp [esi+20h] eax +
jbe loc_10038DE  +
mov ecx [edi] +
push dword ptr [ecx+eax*4]  +
call ??3@YAXPAX@Z  +
inc ebx  +
movzx eax bx +
pop ecx  +
cmp eax [esi+20h] +
jb loc_10038CA  +
push edi  +
call sub_1004F9C  +
lea edi [esi+18h] +
xor ebx ebx +
cmp [edi] ebx +
jz loc_1003915  +
xor eax eax +
cmp [esi+1Ch] eax +
jbe loc_100390F  +
mov ecx [edi] +
mov eax [ecx+eax*4] +
test eax eax +
jz loc_1003906  +
push 1  +
mov ecx eax +
call sub_1003216  +
inc ebx  +
movzx eax bx +
cmp eax [esi+1Ch] +
jb loc_10038F4  +
push edi  +
call sub_1004F9C  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+0Ch] +
call sub_100226E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1002C9C  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1C50h +
call __alloca_probe  +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor esi esi +
mov ebx 1FCh +
push edi  +
mov [ebp+var_1C44] ecx +
mov [ebp+var_1C34] esi +
mov [ebp+var_1C48] esi +
mov [ebp+dwMessageId] esi +
mov [ebp+var_1C4C] esi +
mov [ebp+var_1C50] esi +
mov edx ebx +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec edx  +
jnz loc_1003986  +
mov edi 0FEh +
mov edx edi +
lea eax [ebp+var_200] +
mov byte ptr [eax] 0 +
inc eax  +
dec edx  +
jnz loc_100399A  +
mov edx edi +
lea eax [ebp+var_5F8] +
mov byte ptr [eax] 0 +
inc eax  +
dec edx  +
jnz loc_10039A9  +
mov edx edi +
lea eax [ebp+var_3FC] +
mov byte ptr [eax] 0 +
inc eax  +
dec edx  +
jnz loc_10039B8  +
mov edx ebx +
lea eax [ebp+var_DE8] +
mov byte ptr [eax] 0 +
inc eax  +
dec edx  +
jnz loc_10039C7  +
mov edx ebx +
lea eax [ebp+var_11E0] +
mov byte ptr [eax] 0 +
inc eax  +
dec edx  +
jnz loc_10039D6  +
mov [ebp+var_1C40] esi +
cmp [ecx+1Ch] esi +
jbe loc_1003B24  +
xor eax eax +
jmp loc_10039F2  +
mov ecx esi +
mov esi eax +
lea eax [ebp+var_1C50] +
push eax  +
lea eax [ebp+var_200] +
push eax  +
push ebx  +
lea eax [ebp+String] +
push eax  +
mov eax [ecx+18h] +
shl esi 2 +
mov ecx [esi+eax] +
call sub_1002C3F  +
test eax eax +
jnz loc_1003D67  +
mov ecx [ebp+var_1C44] +
push ebx  +
lea eax [ebp+var_DE8] +
push eax  +
mov eax [ecx+4] +
push dword ptr [eax+esi]  +
call sub_1002E9F  +
push edi  +
lea eax [ebp+var_DE8] +
push eax  +
lea eax [ebp+var_5F8] +
push eax  +
call sub_1005371  +
mov esi [ebp+var_1C44] +
push ebx  +
lea eax [ebp+var_11E0] +
push eax  +
push [ebp+var_1C50]  +
mov ecx esi +
call sub_10037B1  +
push edi  +
lea eax [ebp+var_11E0] +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_1005371  +
push 0  +
push offset a513  +
lea eax [ebp+var_200] +
push eax  +
call sub_1005301  +
test eax eax +
jnz loc_1003B0C  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1004B69  +
test eax eax +
jz loc_1003B0C  +
lea eax [ebp+String] +
push eax  +
call sub_1004F61  +
cmp [ebp+var_1C34] eax +
jnb loc_1003ABE  +
mov [ebp+var_1C34] eax +
lea eax [ebp+var_3FC] +
push eax  +
call sub_1004F61  +
cmp [ebp+var_1C4C] eax +
jnb loc_1003AD8  +
mov [ebp+var_1C4C] eax +
lea eax [ebp+var_200] +
push eax  +
call sub_1004F61  +
cmp [ebp+var_1C48] eax +
jnb loc_1003AF2  +
mov [ebp+var_1C48] eax +
lea eax [ebp+var_5F8] +
push eax  +
call sub_1004F61  +
cmp [ebp+dwMessageId] eax +
jnb loc_1003B0C  +
mov [ebp+dwMessageId] eax +
inc [ebp+var_1C40]  +
movzx eax word ptr [ebp+var_1C40] +
cmp eax [esi+1Ch] +
jb loc_10039F0  +
xor esi esi +
push 1A4h  +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax [ebp+var_1C34] +
jbe loc_1003B42  +
mov [ebp+var_1C34] eax +
push 1A5h  +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax [ebp+var_1C4C] +
jbe loc_1003B60  +
mov [ebp+var_1C4C] eax +
push 1A6h  +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax [ebp+var_1C48] +
jbe loc_1003B7E  +
mov [ebp+var_1C48] eax +
push 1A7h  +
call sub_100646D  +
push eax  +
call sub_1004F61  +
cmp eax [ebp+dwMessageId] +
jbe loc_1003B9C  +
mov [ebp+dwMessageId] eax +
push ebx  +
lea eax [ebp+var_1C2C] +
push esi  +
push eax  +
mov [ebp+var_1C30] esi +
call memset  +
mov eax [ebp+var_1C34] +
mov [ebp+var_1A30] eax +
mov [ebp+var_1A2C] 10h +
mov esi offset aS +
lea edi [ebp+var_1A28] +
movs   +
movs   +
push 7Ch  +
xor esi esi +
lea eax [ebp+var_1A22] +
push esi  +
push eax  +
call memset  +
push ebx  +
lea eax [ebp+var_1998] +
push esi  +
push eax  +
mov [ebp+var_19A4] esi +
mov [ebp+var_19A0] esi +
mov [ebp+var_199C] esi +
call memset  +
mov eax [ebp+var_1C4C] +
mov [ebp+var_179C] eax +
mov [ebp+var_1798] 10h +
mov esi offset aS +
lea edi [ebp+var_1794] +
movs   +
movs   +
push 7Ch  +
xor esi esi +
lea eax [ebp+var_178E] +
push esi  +
push eax  +
call memset  +
push ebx  +
lea eax [ebp+var_1704] +
push esi  +
push eax  +
mov [ebp+var_1710] esi +
mov [ebp+var_170C] esi +
mov [ebp+var_1708] esi +
call memset  +
mov eax [ebp+var_1C48] +
mov [ebp+var_1508] eax +
mov [ebp+var_1504] 10h +
mov esi offset aS +
lea edi [ebp+var_1500] +
movs   +
movs   +
push 7Ch  +
xor esi esi +
lea eax [ebp+var_14FA] +
push esi  +
push eax  +
call memset  +
add esp 48h +
push ebx  +
lea eax [ebp+var_1470] +
push esi  +
push eax  +
mov [ebp+var_147C] esi +
mov [ebp+var_1478] esi +
mov [ebp+var_1474] esi +
call memset  +
mov eax [ebp+dwMessageId] +
mov [ebp+var_1274] eax +
mov [ebp+var_1270] 10h +
mov esi offset aS +
lea edi [ebp+var_126C] +
movs   +
movs   +
push 7Ch  +
xor edi edi +
push edi  +
lea eax [ebp+var_1266] +
push eax  +
call memset  +
add esp 18h +
mov [ebp+var_11E8] edi +
mov [ebp+var_11E4] edi +
mov [ebp+dwMessageId] 1A4h +
lea esi [ebp+var_1C30] +
push 0FEh  +
push [ebp+dwMessageId]  +
call sub_100646D  +
push eax  +
push esi  +
call sub_1005371  +
inc [ebp+dwMessageId]  +
add esi 294h +
cmp [ebp+dwMessageId] 1A7h +
jbe loc_1003D06  +
call sub_100861A  +
mov [ebp+var_1C3C] eax +
cmp eax edi +
jnz loc_1003D7B  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1004973  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1006485  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 4  +
mov esi [ebp+var_1C44] +
mov [ebp+var_1C40] edi +
mov [ebp+var_1C34] edi +
cmp [esi+1Ch] edi +
jbe loc_1003EF1  +
xor eax eax +
lea ecx [ebp+var_1C50] +
push ecx  +
lea ecx [ebp+var_200] +
push ecx  +
push ebx  +
lea ecx [ebp+String] +
push ecx  +
mov ecx [esi+18h] +
shl eax 2 +
mov ecx [eax+ecx] +
mov [ebp+var_1C44] eax +
call sub_1002C3F  +
test eax eax +
jnz loc_1003F5E  +
mov ecx [ebp+var_1C44] +
push ebx  +
lea eax [ebp+var_DE8] +
push eax  +
mov eax [esi+4] +
push dword ptr [eax+ecx]  +
mov ecx esi +
call sub_1002E9F  +
push 0FEh  +
lea eax [ebp+var_DE8] +
push eax  +
lea eax [ebp+var_5F8] +
push eax  +
call sub_1005371  +
push ebx  +
lea eax [ebp+var_11E0] +
push eax  +
push [ebp+var_1C50]  +
mov ecx esi +
call sub_10037B1  +
push 0FEh  +
lea eax [ebp+var_11E0] +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_1005371  +
push edi  +
push offset a513  +
lea eax [ebp+var_200] +
push eax  +
call sub_1005301  +
test eax eax +
jnz loc_1003ECF  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004B69  +
test eax eax +
jz loc_1003ECF  +
push 4  +
push [ebp+var_1C3C]  +
call sub_1008B07  +
push edi  +
lea eax [ebp+String] +
push eax  +
push edi  +
push [ebp+var_1C34]  +
push [ebp+var_1C3C]  +
call sub_100904F  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
push 1  +
push [ebp+var_1C34]  +
push [ebp+var_1C3C]  +
call sub_100904F  +
push edi  +
lea eax [ebp+var_200] +
push eax  +
push 2  +
push [ebp+var_1C34]  +
push [ebp+var_1C3C]  +
call sub_100904F  +
push edi  +
lea eax [ebp+var_5F8] +
push eax  +
push 3  +
push [ebp+var_1C34]  +
push [ebp+var_1C3C]  +
call sub_100904F  +
jmp loc_1003ED5  +
dec [ebp+var_1C34]  +
inc [ebp+var_1C40]  +
movzx eax word ptr [ebp+var_1C40] +
inc [ebp+var_1C34]  +
cmp eax [esi+1Ch] +
jb loc_1003D98  +
cmp [ebp+arg_0] 3 +
jz loc_1003F45  +
test [ebp+arg_0] 1000h +
jnz loc_1003F45  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_10053F7  +
push 145h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
push 1E4h  +
call sub_100646D  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_10053F7  +
push [ebp+var_1C3C]  +
lea eax [ebp+var_1C30] +
push [ebp+arg_0]  +
push eax  +
push 4  +
call sub_10085D0  +
jmp loc_1003F61  +
xor edi edi +
inc edi  +
lea eax [ebp+var_1C3C] +
push eax  +
call sub_100868F  +
mov eax edi +
jmp loc_1003D6A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1003F95  +
test eax eax +
jnz loc_1003F9A  +
mov ecx [esi] +
test ecx ecx +
jz loc_1003F92  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1003F86  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100A054 +
push offset dword_100A044  +
push dword_100A050  +
mov dword_100A044 eax +
push offset dword_100A034  +
push offset dword_100A038  +
push offset dword_100A030  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_100A040 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1004022  +
cmp eax esi +
jnz loc_1004015  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1004025  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1003FFC  +
xor esi esi +
inc esi  +
mov eax dword_100A4A0 +
cmp eax esi +
jnz loc_1004038  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1004073  +
mov eax dword_100A4A0 +
test eax eax +
jnz loc_100406D  +
mov dword_100A4A0 esi +
push offset dword_10011C4  +
push offset dword_10011B8  +
call sub_1003F79  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1004073  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_100413D  +
mov dword_100A04C esi +
mov eax dword_100A4A0 +
cmp eax esi +
jnz loc_1004097  +
push offset dword_10011B4  +
push offset dword_10011AC  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100A4A0 2 +
cmp [ebp+var_1C] ebx +
jnz loc_10040A4  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100A4A8 ebx +
jz loc_10040C5  +
push offset dword_100A4A8  +
call sub_1004439  +
pop ecx  +
test eax eax +
jz loc_10040C5  +
push ebx  +
push 2  +
push ebx  +
call dword_100A4A8  +
push dword_100A034  +
push dword_100A038  +
push dword_100A030  +
call sub_1001B2C  +
add esp 0Ch +
mov dword_100A048 eax +
cmp dword_100A03C ebx +
jnz loc_1004123  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_100A048 eax +
xor ebx ebx +
cmp dword_100A03C ebx +
jnz loc_1004123  +
push eax  +
call ds:_exit  +
cmp dword_100A04C ebx +
jnz loc_1004131  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100A048 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100415A  +
xor eax eax +
jmp loc_10041A7  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1004156  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1004194  +
cmp ecx 20Bh +
jnz loc_1004156  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1004156  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_10041A2  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1004156  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100A03C eax +
call sub_10045D2  +
push eax  +
call ds:__set_app_type  +
or dword_100A498 0FFFFFFFFh +
or dword_100A49C 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100A05C +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100A058 +
mov [eax] ecx +
call sub_1004564  +
cmp dword_100A018 0 +
jnz loc_1004200  +
push offset sub_1004564  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100454C  +
xor eax eax +
retn   +
***
call sub_1004611  +
jmp sub_1003FDA  +
***
cmp ecx dword_100A000 +
jnz loc_1004227  +
retn 0  +
jmp loc_10046A7  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100A000 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100A000 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_100421C  +
jmp __EH_epilog3  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100437D  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100437D  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1004377  +
cmp eax 19930521h +
jz loc_1004377  +
cmp eax 19930522h +
jz loc_1004377  +
cmp eax 1994000h +
jnz loc_100437D  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push offset loc_1004340  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10043C6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10043C2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100442D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1004425  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100442F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1004415  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_10043B0  +
pop ecx  +
test eax eax +
jz loc_1004496  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10043F0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1004496  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100449F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_100421C  +
push offset dword_100A000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10045C5  +
cmp ecx 0FFFFFFFFh +
jz loc_10045C5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10045BE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10045BE  +
cmp edx 10000000h +
jnb loc_10045BE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10045BE  +
jmp loc_10045B9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1004607  +
push eax  +
call sub_100456C  +
test eax eax +
jz loc_1004607  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10045FC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1004607  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100A000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1004643  +
test eax ebx +
jz loc_1004643  +
not eax  +
mov dword_100A004 eax +
jmp loc_100469E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100468A  +
test dword_100A000 ebx +
jnz loc_100468F  +
mov esi 0BB40E64Fh +
mov dword_100A000 esi +
not esi  +
mov dword_100A004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_100A160 eax +
mov dword_100A15C ecx +
mov dword_100A158 edx +
mov dword_100A154 ebx +
mov dword_100A150 esi +
mov dword_100A14C edi +
mov word_100A178 ss +
mov word_100A16C cs +
mov word_100A148 ds +
mov word_100A144 es +
mov word_100A140 fs +
mov word_100A13C gs +
pushf   +
pop dword_100A170  +
mov eax [ebp+0] +
mov dword_100A164 eax +
mov eax [ebp+4] +
mov dword_100A168 eax +
lea eax [ebp+8] +
mov dword_100A174 eax +
mov eax [ebp-320h] +
mov dword_100A0B0 10001h +
mov eax dword_100A168 +
mov dword_100A06C eax +
mov dword_100A060 0C0000409h +
mov dword_100A064 1 +
mov eax dword_100A000 +
mov [ebp-328h] eax +
mov eax dword_100A004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_100A380 edi +
jnz loc_10047D2  +
push dword_100A388  +
call sub_10085F9  +
test eax eax +
jnz loc_10047CE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004866  +
push 42Bh  +
jmp loc_1004860  +
mov eax edi +
pop edi  +
retn   +
cmp dword_100A388 0 +
jnz loc_10047B6  +
call sub_100861A  +
push eax  +
mov dword_100A388 eax +
call sub_10085F9  +
test eax eax +
jz loc_1004854  +
push 0  +
push offset dword_1001358  +
push dword_100A388  +
call sub_100893C  +
test eax eax +
jnz loc_1004854  +
push 3  +
push dword_100A388  +
call sub_1008B07  +
cmp eax edi +
jnz loc_1004854  +
push 3  +
push dword_100A388  +
call sub_1008B07  +
cmp eax 2 +
jnz loc_1004854  +
push 3  +
push dword_100A388  +
call sub_1008B07  +
cmp eax 3 +
jnz loc_1004854  +
push 0  +
mov dword_100A380 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1004866  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_100A380 0 +
push esi  +
jz loc_10048D4  +
push 3  +
push dword_100A388  +
call sub_1008C62  +
cmp eax [ebp+arg_0] +
jbe loc_10048D4  +
push [ebp+arg_0]  +
push 3  +
push dword_100A388  +
call sub_10090E8  +
test eax eax +
jz loc_10048D4  +
push [ebp+arg_0]  +
push 3  +
push dword_100A388  +
call sub_1008E1A  +
mov esi eax +
test esi esi +
jz loc_10048D4  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10048D4  +
mov eax [esi+0Ch] +
jmp loc_10048D6  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_100A388 +
test eax eax +
jz loc_1004901  +
push eax  +
call sub_10085F9  +
test eax eax +
jz loc_1004901  +
push 0  +
push dword_100A388  +
call sub_1008CCF  +
retn   +
mov eax offset dword_1001358 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1004935  +
call esi  +
test eax eax +
jnz loc_1004931  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1004968  +
call sub_1004799  +
test eax eax +
jz loc_1004931  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_100A388  +
call sub_1008F0A  +
test eax eax +
jnz loc_100495E  +
call esi  +
test eax eax +
jnz loc_1004931  +
push 8  +
jmp loc_100492B  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1004799  +
test eax eax +
jz loc_10049F2  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_10049CC  +
cmp [ebp+hMem] edi +
jz loc_10049E4  +
push [ebp+hMem]  +
call sub_100490C  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_10049F0  +
cmp [ebp+hMem] edi +
jz loc_10049E4  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_10049E4  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_10049EE  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1004973  +
test eax eax +
jz loc_1004A1C  +
call sub_10048E0  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_100A01C +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_100A020 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_100A38C +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100421C  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1004AE2  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004ADE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1004B5F  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1004B53  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1004B53  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1004B5B  +
sub edi 0 +
jz loc_1004B2F  +
dec edi  +
jz loc_1004B2B  +
dec edi  +
jnz loc_1004B5B  +
push 0FFFFFFF4h  +
jmp loc_1004B31  +
push 0FFFFFFF5h  +
jmp loc_1004B31  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1004B5B  +
cmp eax 0FFFFFFFFh +
jz loc_1004B5B  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1004B5D  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1004B78  +
xor eax eax +
jmp loc_1004B81  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1004BC8  +
cmp [ebp+lpString2] 0 +
jz loc_1004BC8  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1004BAE  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1004BDC  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004BDA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1004C23  +
cmp [ebp+lpString2] 0 +
jz loc_1004C23  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1004C09  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1004C37  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004C35  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1004C59  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004C7B  +
push 57h  +
jmp loc_1004C75  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1004C7B  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1004C7D  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1004CAC  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004D20  +
push 57h  +
call ds:SetLastError  +
jmp loc_1004D20  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1004D20  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1004D22  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1004D07  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1004D07  +
push 570h  +
call ds:SetLastError  +
call sub_1004973  +
jmp loc_1004D19  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004D19  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1004D51  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004D4C  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1004D73  +
push [ebp+lpMem]  +
call sub_1004C40  +
test eax eax +
jz loc_1004D4C  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1004D4C  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1004DAC  +
cmp [ebp+arg_4] eax +
jz loc_1004DA8  +
mov dl [ebx] +
test dl dl +
jz loc_1004DA8  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1004D90  +
test esi esi +
jnz loc_1004DB3  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1004DBF  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1004E00  +
cmp [ebp+arg_4] eax +
jz loc_1004DFC  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1004DFC  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1004DDF  +
test esi esi +
jnz loc_1004E08  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1004E16  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1004E4B  +
cmp eax esi +
ja loc_1004E4B  +
jz loc_1004E50  +
jmp loc_1004E58  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1004E61  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1004E89  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004ECC  +
push 57h  +
jmp loc_1004EC6  +
push 0  +
push esi  +
call sub_1004B69  +
test eax eax +
jz loc_1004EC1  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_1004EC1  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_1004EB1  +
call ds:StrChrIW  +
jmp loc_1004EB7  +
call ds:StrChrW  +
test eax eax +
jz loc_1004EC1  +
sub eax esi +
sar eax 1 +
jmp loc_1004ECF  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1004F40  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1004F40  +
push 0  +
push edi  +
call sub_1004B69  +
push 0  +
push ebx  +
mov esi eax +
call sub_1004B69  +
test eax eax +
jz loc_1004F33  +
test esi esi +
jz loc_1004F33  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_1004F33  +
sub esi ecx +
cmp esi eax +
jb loc_1004F33  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_1004F29  +
call ds:StrStrIW  +
jmp loc_1004F2F  +
call ds:StrStrW  +
test eax eax +
jnz loc_1004F3A  +
push 490h  +
jmp loc_1004F4C  +
sub eax edi +
sar eax 1 +
jmp loc_1004F55  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004F52  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString] esi +
jz loc_1004F90  +
push esi  +
push [ebp+lpString]  +
call sub_1004B69  +
test eax eax +
jz loc_1004F90  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
dec eax  +
jmp loc_1004F92  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1004FBF  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004FBB  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100500D  +
cmp dword ptr [esi] 0 +
jnz loc_1004FC9  +
xor eax eax +
inc eax  +
jmp loc_100500D  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_1004FED  +
push dword ptr [esi]  +
call sub_1004D2F  +
cmp eax 0FFFFFFFFh +
jnz loc_1004FF1  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100500C  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_10050DC  +
mov eax [esi] +
cmp eax edi +
jz loc_10050DC  +
cmp [ebp+dwBytes] edi +
jnz loc_100504A  +
push esi  +
call sub_1004F9C  +
jmp loc_10050F0  +
push eax  +
call sub_1004C40  +
test eax eax +
jnz loc_100505B  +
mov [esi] edi +
jmp loc_10050EE  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_10050EE  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_1005099  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005090  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10050EE  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_10050F0  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_100507E  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_100507E  +
push 570h  +
call ds:SetLastError  +
call sub_1004973  +
jmp loc_1005090  +
call ds:GetLastError  +
test eax eax +
jnz loc_10050EE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1005113  +
cmp edx 7FFFFFFFh +
jbe loc_1005118  +
mov eax 80070057h +
test eax eax +
jl loc_100512E  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1004D7C  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100514D  +
cmp edx 7FFFFFFFh +
jbe loc_1005152  +
mov eax 80070057h +
test eax eax +
jl loc_1005168  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1004DCB  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_100518A  +
cmp edx ebx +
jbe loc_100518F  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_10051C6  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_10051B3  +
cmp [eax] cx +
jz loc_10051AF  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_10051A5  +
cmp esi ecx +
jnz loc_10051BC  +
mov [ebp+arg_4] 80070057h +
jmp loc_10051C0  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_10051C8  +
xor ecx ecx +
test eax eax +
jl loc_10051DC  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1004DCB  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10051FC  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1005201  +
mov eax 80070057h +
test eax eax +
jl loc_100521A  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1004E22  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1005238  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_100523D  +
mov eax 80070057h +
test eax eax +
jl loc_1005257  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_1004E22  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_100A388  +
call sub_10085F9  +
cmp eax 1 +
jnz loc_10052E8  +
push edi  +
push 3  +
push dword_100A388  +
call sub_1008C62  +
mov edi eax +
test edi edi +
jz loc_10052DD  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_100A388  +
call sub_10090E8  +
cmp eax 10000h +
jnz loc_10052D6  +
push esi  +
push 3  +
push dword_100A388  +
call sub_1008E1A  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10052D6  +
add eax 0Ch +
push eax  +
call sub_1004F9C  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004F9C  +
push esi  +
push 3  +
push dword_100A388  +
call sub_1008C2B  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_100528C  +
pop esi  +
push offset dword_100A388  +
call sub_100868F  +
pop edi  +
cmp dword_100A384 1 +
jnz loc_10052F7  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_1004ED9  +
cmp eax 0FFFFFFFFh +
jnz loc_1005321  +
xor eax eax +
jmp loc_1005324  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1005361  +
cmp [ebp+arg_4] 0 +
jz loc_1005361  +
cmp [ebp+arg_8] 0 +
jle loc_1005361  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10050FD  +
test eax eax +
jge loc_1005367  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1005363  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10053A4  +
cmp [ebp+arg_4] 0 +
jz loc_10053A4  +
cmp [ebp+arg_8] 0 +
jle loc_10053A4  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1005137  +
test eax eax +
jge loc_10053AA  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10053A6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10053E7  +
cmp [ebp+arg_4] 0 +
jz loc_10053E7  +
cmp [ebp+arg_8] 0 +
jle loc_10053E7  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1005171  +
test eax eax +
jge loc_10053ED  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10053E9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_100563C  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_100563C  +
push [ebp+hConsoleOutput]  +
call sub_1004ABB  +
cmp eax 1 +
jnz loc_1005529  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1005440  +
push 0FFFFFFF5h  +
jmp loc_1005450  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1005511  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1004B69  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_1005484  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_10054E9  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_100550D  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1004B69  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_10054E9  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_10054BB  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_10054F1  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_10054F1  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_10054AB  +
xor eax eax +
inc eax  +
jmp loc_1005650  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_10049FA  +
call sub_100525E  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_10054F7  +
call ds:GetLastError  +
test eax eax +
jnz loc_100564E  +
push 42Bh  +
jmp loc_1005648  +
push edi  +
push ebx  +
call sub_1004B69  +
push 100h  +
push edi  +
mov esi offset unk_100A398 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_10054E9  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_1005569  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_10055C6  +
cmp eax ebx +
jbe loc_10055D4  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_10055A6  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_10055A9  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_1005572  +
call ds:GetLastError  +
test eax eax +
jnz loc_10055C6  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_10054FA  +
cmp eax [ebp+cchWideChar] +
jnb loc_10055DC  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_10055C6  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS_0  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_1005554  +
jmp loc_10054E9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100564E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1005674  +
cmp [ebp+arg_8] 0 +
jnz loc_1005674  +
xor eax eax +
jmp loc_10057C8  +
call sub_1004799  +
test eax eax +
jz loc_100566D  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_100A388  +
call sub_1008C62  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_10056C1  +
push esi  +
push dword_100A388  +
call sub_1008C96  +
test eax eax +
jz loc_100578C  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_1008B82  +
cmp eax 0FFFFFFFFh +
jz loc_100578C  +
push ebx  +
push esi  +
push dword_100A388  +
call sub_10090E8  +
mov edi offset aBuffer +
test eax eax +
jz loc_100570F  +
push ebx  +
push esi  +
push dword_100A388  +
call sub_1008E1A  +
mov esi eax +
test esi esi +
jz loc_100578C  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100578C  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_100574E  +
mov edi [ebp+arg_8] +
jmp loc_1005759  +
push 10h  +
call sub_1004C86  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_100578C  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_100532E  +
push esi  +
push ebx  +
push 3  +
push dword_100A388  +
call sub_1009015  +
test eax eax +
jnz loc_10056EE  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1004F9C  +
jmp loc_100578C  +
push 0  +
push ebx  +
call sub_1004B69  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_100576F  +
cmp edi 100h +
jbe loc_1005786  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1005786  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1005790  +
call sub_1004C86  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100578C  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_100579B  +
xor eax eax +
jmp loc_10057C5  +
lea eax [esi+0Ch] +
push eax  +
call sub_1005017  +
jmp loc_100577F  +
test ebx ebx +
jz loc_10057AB  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_1005371  +
jmp loc_10057C2  +
cmp [ebp+arg_C] 1 +
jnz loc_10057C2  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_100136C +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_10058CE  +
push eax  +
push ebx  +
call sub_1004B69  +
test eax eax +
jz loc_10058CE  +
cmp [ebp+lpStart] 0 +
jz loc_100582D  +
push 0  +
push [ebp+lpStart]  +
call sub_1004B69  +
test eax eax +
jnz loc_1005833  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_1005842  +
cmp edi 1 +
jnz loc_1005864  +
cmp word ptr [ebx] 0 +
jz loc_1005861  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1005861  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1005848  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_100586E  +
cmp edi 2 +
jnz loc_10058B0  +
cmp edi 2 +
jnz loc_1005875  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_10058B0  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1005896  +
cmp [ebp+var_14] 0 +
jnz loc_100589A  +
mov [ebp+var_14] esi +
jmp loc_100589A  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_100587D  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_10058B0  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_10058CA  +
push 0  +
push [ebp+var_18]  +
call sub_1004B69  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_1005371  +
mov eax ebx +
jmp loc_10058D3  +
mov eax offset dword_1001358 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_100592B  +
cmp [ebp+arg_4] edi +
jz loc_100592B  +
push [ebp+arg_C]  +
push offset dword_1001358  +
push esi  +
call sub_1005371  +
cmp [ebp+arg_8] edi +
jbe loc_1005927  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
call sub_10053B4  +
test eax eax +
jz loc_1005927  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_1005911  +
mov eax esi +
jmp loc_1005942  +
call ds:GetLastError  +
test eax eax +
jnz loc_100593D  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001358 +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1005970  +
call ds:GetLastError  +
test eax eax +
jnz loc_100596C  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10059D7  +
cmp [ebp+arg_0] esi +
jnz loc_1005982  +
push [ebp+arg_4]  +
call sub_100490C  +
xor eax eax +
inc eax  +
jmp loc_10059D7  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_100565C  +
mov edi eax +
test edi edi +
jz loc_10059C2  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_10051E7  +
cmp eax 8007007Ah +
jz loc_1005983  +
test eax eax +
jge loc_10059D0  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10059D6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10059BE  +
push 8  +
jmp loc_10059B8  +
push edi  +
call sub_100490C  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_1005A0C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005A02  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001358 +
jmp loc_1005B19  +
call sub_1004799  +
test eax eax +
jz loc_1005A02  +
push esi  +
push 1  +
push dword_100A388  +
call sub_1008C62  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1005A69  +
push 1  +
push dword_100A388  +
call sub_1008C96  +
cmp eax ebx +
jz loc_1005A4D  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_1008B82  +
cmp eax 0FFFFFFFFh +
jnz loc_1005A69  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005A5F  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001358 +
jmp loc_1005B18  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_100565C  +
mov edi eax +
cmp edi ebx +
jz loc_1005ADD  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_1005AC0  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_1005AEF  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_1005AEF  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1005A6F  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_100A388  +
call sub_100904F  +
test eax eax +
jnz loc_1005AF6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005AEF  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001358 +
jmp loc_1005B17  +
cmp [ebp+lpString] ebx +
jz loc_1005B07  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_100A388  +
call sub_1008E51  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_1005CC8  +
push ebx  +
push [ebp+lpString]  +
call sub_1004B69  +
test eax eax +
jz loc_1005CC8  +
call sub_1004799  +
test eax eax +
jz loc_1005CDA  +
call sub_1004799  +
test eax eax +
jz loc_1005C82  +
push 3  +
pop esi  +
push esi  +
push dword_100A388  +
call sub_1008C62  +
mov edi eax +
cmp edi ebx +
ja loc_1005BA5  +
push esi  +
push dword_100A388  +
call sub_1008C96  +
cmp eax ebx +
jz loc_1005C82  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1008B82  +
cmp eax 0FFFFFFFFh +
jz loc_1005C82  +
push ebx  +
push esi  +
push dword_100A388  +
call sub_10090E8  +
mov edi offset aBuffer +
test eax eax +
jz loc_1005C1D  +
push ebx  +
push esi  +
push dword_100A388  +
call sub_1008E1A  +
mov esi eax +
cmp esi ebx +
jz loc_1005C82  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1005C82  +
push ebx  +
push [ebp+lpString]  +
call sub_1004B69  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1005C09  +
cmp edi 100h +
jbe loc_1005C6A  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1005C6A  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1005C5A  +
call sub_1004C86  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1005C65  +
push 10h  +
call sub_1004C86  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1005C82  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100532E  +
push esi  +
push ebx  +
push 3  +
push dword_100A388  +
call sub_1009015  +
test eax eax +
jnz loc_1005BD2  +
lea eax [ebp+var_8] +
push eax  +
call sub_1004F9C  +
jmp loc_1005C82  +
lea eax [esi+0Ch] +
push eax  +
call sub_1005017  +
test eax eax +
jz loc_1005C82  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1005C82  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1005371  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1005C90  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005CDA  +
push 8  +
jmp loc_1005CD4  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1005CC8  +
cmp [ebp+var_4] ebx +
jz loc_1005CC3  +
push ebx  +
push [ebp+var_4]  +
call sub_1004B69  +
test eax eax +
jnz loc_1005CC8  +
fld  qword ptr [ebp-0Ch] +
jmp loc_1005CDC  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005CDA  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_1005B23  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_1005ED1  +
cmp [ebp+lpString] ebx +
jz loc_1005ED1  +
call sub_1004799  +
test eax eax +
jz loc_1005EE3  +
call sub_1004799  +
test eax eax +
jz loc_1005E67  +
push 3  +
pop esi  +
push esi  +
push dword_100A388  +
call sub_1008C62  +
mov edi eax +
cmp edi ebx +
ja loc_1005D8A  +
push esi  +
push dword_100A388  +
call sub_1008C96  +
cmp eax ebx +
jz loc_1005E67  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1008B82  +
cmp eax 0FFFFFFFFh +
jz loc_1005E67  +
push ebx  +
push esi  +
push dword_100A388  +
call sub_10090E8  +
mov edi offset aBuffer +
test eax eax +
jz loc_1005E02  +
push ebx  +
push esi  +
push dword_100A388  +
call sub_1008E1A  +
mov esi eax +
cmp esi ebx +
jz loc_1005E67  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1005E67  +
push ebx  +
push [ebp+lpString]  +
call sub_1004B69  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1005DEE  +
cmp edi 100h +
jbe loc_1005E4F  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1005E4F  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1005E3F  +
call sub_1004C86  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1005E4A  +
push 10h  +
call sub_1004C86  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1005E67  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100532E  +
push esi  +
push ebx  +
push 3  +
push dword_100A388  +
call sub_1009015  +
test eax eax +
jnz loc_1005DB7  +
lea eax [ebp+var_8] +
push eax  +
call sub_1004F9C  +
jmp loc_1005E67  +
lea eax [esi+0Ch] +
push eax  +
call sub_1005017  +
test eax eax +
jz loc_1005E67  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1005E67  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1005371  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1005E75  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005EE3  +
push 8  +
jmp loc_1005EDD  +
push 3  +
push ebx  +
push esi  +
call sub_10057D1  +
push ebx  +
push esi  +
call sub_1004B69  +
test eax eax +
jz loc_1005ED1  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_1005EA9  +
call ds:wcstol  +
jmp loc_1005EAF  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1005ED1  +
cmp [ebp+var_4] ebx +
jz loc_1005ECD  +
push ebx  +
push [ebp+var_4]  +
call sub_1004B69  +
test eax eax +
jnz loc_1005ED1  +
mov eax esi +
jmp loc_1005EE5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005EE3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10060B4  +
cmp [ebp+lpString] ebx +
jz loc_10060B4  +
call sub_1004799  +
test eax eax +
jz loc_1006040  +
push 3  +
pop esi  +
push esi  +
push dword_100A388  +
call sub_1008C62  +
mov edi eax +
cmp edi ebx +
ja loc_1005F63  +
push esi  +
push dword_100A388  +
call sub_1008C96  +
cmp eax ebx +
jz loc_1006040  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1008B82  +
cmp eax 0FFFFFFFFh +
jz loc_1006040  +
push ebx  +
push esi  +
push dword_100A388  +
call sub_10090E8  +
mov edi offset aBuffer +
test eax eax +
jz loc_1005FDB  +
push ebx  +
push esi  +
push dword_100A388  +
call sub_1008E1A  +
mov esi eax +
cmp esi ebx +
jz loc_1006040  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1006040  +
push ebx  +
push [ebp+lpString]  +
call sub_1004B69  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1005FC7  +
cmp edi 100h +
jbe loc_1006028  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1006028  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1006018  +
call sub_1004C86  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1006023  +
push 10h  +
call sub_1004C86  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1006040  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100532E  +
push esi  +
push ebx  +
push 3  +
push dword_100A388  +
call sub_1009015  +
test eax eax +
jnz loc_1005F90  +
lea eax [ebp+var_8] +
push eax  +
call sub_1004F9C  +
jmp loc_1006040  +
lea eax [esi+0Ch] +
push eax  +
call sub_1005017  +
test eax eax +
jz loc_1006040  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1006040  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1005371  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100604E  +
call ds:GetLastError  +
test eax eax +
jnz loc_10060C6  +
push 8  +
jmp loc_10060C0  +
push 3  +
push ebx  +
push esi  +
call sub_10057D1  +
push ebx  +
push esi  +
call sub_1004B69  +
test eax eax +
jz loc_10060C6  +
cmp [ebp+arg_8] ebx +
jnz loc_100606D  +
cmp word ptr [esi] 2Dh +
jz loc_10060C6  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_100608D  +
call ds:wcstol  +
jmp loc_1006093  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10060C6  +
cmp [ebp+var_4] ebx +
jz loc_10060AF  +
push ebx  +
push [ebp+var_4]  +
call sub_1004B69  +
test eax eax +
jnz loc_10060C6  +
xor eax eax +
inc eax  +
jmp loc_10060C8  +
call ds:GetLastError  +
test eax eax +
jnz loc_10060C6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_1006192  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_1006192  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1004B69  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_100565C  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1006123  +
call ds:GetLastError  +
test eax eax +
jnz loc_10061A4  +
push 8  +
jmp loc_100619E  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1004B69  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_100565C  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1006111  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_1 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1005223  +
add esp 10h +
test eax eax +
jge loc_1006162  +
movzx eax ax +
push eax  +
jmp loc_100619E  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1005223  +
add esp 10h +
test eax eax +
jl loc_100615C  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1004ED9  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_10061A6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10061A4  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
lea edi [ebp+var_8] +
mov dword ptr [ebp+String] esi +
mov [ebp+var_18] ecx +
stos   +
cmp ecx esi +
jnz loc_10061F8  +
call ds:GetLastError  +
test eax eax +
jnz loc_10061EE  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001358 +
jmp loc_1006305  +
push ecx  +
call sub_1004F61  +
mov [ebp+var_14] eax +
cmp eax [ebp+arg_4] +
ja loc_1006209  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
lea edi [eax+0Ah] +
push edi  +
push esi  +
push esi  +
call sub_100565C  +
mov [ebp+var_10] eax +
cmp eax esi +
jz loc_1006237  +
mov eax [ebp+arg_4] +
cmp [ebp+var_14] eax +
jnb loc_1006292  +
push ebx  +
push edi  +
push esi  +
push ebx  +
call sub_100565C  +
mov esi eax +
test esi esi +
jnz loc_1006253  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006249  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001358 +
jmp loc_1006304  +
mov eax [ebp+arg_4] +
sub eax [ebp+var_14] +
push edi  +
push eax  +
push offset asc_1001380  +
push esi  +
call sub_10058E9  +
push edi  +
cmp [ebp+arg_8] ebx +
jnz loc_100627B  +
push esi  +
push [ebp+var_10]  +
call sub_1005371  +
push edi  +
push [ebp+var_18]  +
jmp loc_1006288  +
push [ebp+var_18]  +
push [ebp+var_10]  +
call sub_1005371  +
push edi  +
push esi  +
push [ebp+var_10]  +
call sub_10053B4  +
jmp loc_10062F1  +
xor ebx ebx +
cmp eax esi +
jbe loc_10062F1  +
mov eax [ebp+var_18] +
mov [ebp+var_14] eax +
push 2  +
push [ebp+var_14]  +
lea eax [ebp+String] +
push eax  +
call sub_1005371  +
lea eax [ebp+String] +
push eax  +
call sub_1004F61  +
mov esi eax +
add esi ebx +
cmp esi [ebp+arg_4] +
ja loc_10062D6  +
push edi  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_10]  +
call sub_10053B4  +
add [ebp+var_14] 2 +
mov ebx esi +
cmp esi [ebp+arg_4] +
jb loc_100629E  +
cmp ebx [ebp+arg_4] +
jnb loc_10062F1  +
mov esi [ebp+arg_4] +
sub esi ebx +
push edi  +
push offset asc_1001380  +
push [ebp+var_10]  +
call sub_10053B4  +
dec esi  +
jnz loc_10062E0  +
mov eax [ebp+arg_4] +
inc eax  +
push eax  +
push [ebp+var_10]  +
push [ebp+var_18]  +
call sub_1005371  +
mov eax [ebp+var_18] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100421C  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_1006421  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_1006421  +
cmp [ebp+arg_4] ebx +
jnz loc_100634C  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
jmp loc_1006435  +
cmp [ebp+arg_8] ebx +
jnz loc_10063E1  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_100565C  +
mov edi eax +
test edi edi +
jz loc_10063CE  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_10063BE  +
call ds:GetLastError  +
test eax eax +
jz loc_10063DC  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_1006433  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_1006359  +
push edi  +
jmp loc_100633F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006433  +
push 8  +
jmp loc_100642D  +
xor eax eax +
inc eax  +
jmp loc_1006435  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_100565C  +
mov edi eax +
test edi edi +
jz loc_10063CE  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_10051E7  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_10063E1  +
test eax eax +
jge loc_10063C8  +
movzx eax ax +
push eax  +
jmp loc_100642D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006433  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_100A394  +
mov eax dword_100A394 +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_10059DF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_100643E  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1006501  +
test [ebp+arg_4] 0F0000h +
jz loc_1006501  +
test [ebp+arg_4] 10000h +
jz loc_10064A9  +
call sub_1004973  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_10064BB  +
push 1389h  +
jmp loc_10064DA  +
test al 4 +
jz loc_10064C6  +
push 138Ah  +
jmp loc_10064DA  +
test al 2 +
jz loc_10064D1  +
push 138Ch  +
jmp loc_10064DA  +
test al 8 +
jz loc_10064F0  +
push 138Bh  +
call sub_100646D  +
push eax  +
push offset aS_2  +
push ebx  +
push ebx  +
push esi  +
call sub_100631A  +
add esp 14h +
call sub_10048E0  +
push eax  +
push esi  +
call sub_10053F7  +
mov eax ebx +
pop ebx  +
jmp loc_1006515  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006513  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_100654D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006545  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1006545  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_100138C  +
call sub_1004E6E  +
cmp eax 0FFFFFFFFh +
jz loc_1006545  +
xor eax eax +
inc eax  +
jmp loc_1006547  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_100659B  +
movzx eax ds:byte_10065AA[eax] +
jmp ds:off_10065A2[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_100659D  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_100663E  +
cmp [ebp+arg_4] ebx +
jnz loc_100663E  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1004E6E  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_10065F8  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1004B69  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_100565C  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_100661B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100664C  +
push 8  +
jmp loc_100664A  +
lea ecx [esi+1] +
push ecx  +
push offset asc_1001348  +
push eax  +
call sub_1005371  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_10053B4  +
mov eax [ebp+arg_4] +
jmp loc_100664E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100664C  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_1006693  +
cmp ecx edi +
jnz loc_1006693  +
call ds:GetLastError  +
test eax eax +
jnz loc_100668C  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_10068F6  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_100667E  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_10068F2  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_10068FC  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_1004BE5  +
test eax eax +
jnz loc_10067AE  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_10067AE  +
cmp [edi+4] ebx +
jnz loc_10067AE  +
cmp [edi+8] ebx +
jnz loc_10067AE  +
cmp [edi+0Ch] ebx +
jnz loc_10067AE  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1006729  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_10067AE  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_10067AE  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_100673E  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_10067AE  +
mov edx eax +
or edx ecx +
jz loc_100674F  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_10067AE  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_1006764  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_10067AE  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_1006770  +
xor eax eax +
or ebx eax +
jnz loc_10067AE  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_10067AE  +
jmp ds:off_100691E[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_10067C7  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_10067AE  +
cmp [edi-10h] ecx +
jnz loc_10067AE  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_10067E6  +
cmp eax 2 +
jnb loc_10067E6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10067C0  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10068F5  +
mov eax [edi-10h] +
test eax eax +
jz loc_10067AE  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_10067E6  +
push dword ptr [eax]  +
call sub_10085F9  +
test eax eax +
jz loc_10067AE  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_10067F6  +
cmp [edi-14h] ecx +
jz loc_10067AE  +
xor eax eax +
or ebx eax +
jnz loc_10068DC  +
cmp dword ptr [edi-24h] 1 +
jnz loc_10067AE  +
and esi 20h +
or esi eax +
jnz loc_10067AE  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_10068DC  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_10067AE  +
jmp loc_10068DC  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_1006914  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_10067AE  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_10067AE  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_10067AE  +
mov edx [edi-10h] +
test edx edx +
jz loc_10067AE  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_1006884  +
push dword ptr [edx]  +
call sub_10085F9  +
test eax eax +
jz loc_10067AE  +
jmp loc_10068DC  +
cmp dword ptr [edi-24h] 1 +
ja loc_10067AE  +
and esi 20h +
xor eax eax +
jmp loc_10068D4  +
cmp dword ptr [edi-8] 0 +
jz loc_10067AE  +
cmp dword ptr [edi-4] 0 +
jnz loc_10068DC  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_10068DC  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_10067AE  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_10067AE  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_10067AE  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_10066AD  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_10067C0  +
push 42Bh  +
jmp loc_10067BA  +
push 78h  +
jmp loc_10067BA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_1006991  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006985  +
push 57h  +
call ebx  +
call sub_1004973  +
xor eax eax +
jmp loc_1006EF5  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_1006EDF  +
cmp eax edi +
jz loc_1006EDF  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_1006A30  +
cmp [ebp+lpString2] 0 +
jnz loc_1006A30  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_1006A30  +
cmp dword ptr [ebp+lpString] edx +
jz loc_1006A0E  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006A0E  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_100646D  +
push eax  +
push 2  +
call sub_100594D  +
add esp 10h +
jmp loc_1006A24  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006A1F  +
push 42Bh  +
call ebx  +
call sub_1004973  +
push 800401E4h  +
call ebx  +
jmp loc_1006EF2  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_1006A48  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_1006A53  +
jmp loc_1006EDF  +
cmp dword ptr [esi+24h] 0 +
jz loc_1006A59  +
cmp ecx 9 +
jz loc_1006A59  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_1006EDF  +
jmp ds:off_1006EFB[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1006AC7  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_1006AC7  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_100565C  +
test eax eax +
jnz loc_1006AA7  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006EED  +
push 8  +
call ds:SetLastError  +
jmp loc_1006EED  +
push 3  +
push offset asc_100136C  +
push eax  +
call sub_10057D1  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_1006EED  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1006B42  +
test ebx ebx +
jz loc_1006EDA  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_10060D4  +
test eax eax +
jnz loc_1006B42  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1006B19  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006B19  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_100646D  +
push eax  +
push 3  +
call sub_100594D  +
add esp 14h +
jmp loc_1006B32  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_100646D  +
push eax  +
push 2  +
call sub_100594D  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1006EF2  +
test ebx ebx +
jz loc_1006EDA  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1006B9B  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1006B9B  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1006B81  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1006B81  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_1006B22  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_100646D  +
push eax  +
push 1  +
call sub_100594D  +
add esp 0Ch +
jmp loc_1006B32  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_1006BEB  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_1006BCE  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_10091AB  +
cmp eax 0FFFFFFFFh +
jnz loc_1006EDA  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100893C  +
cmp eax 0FFFFFFFFh +
jnz loc_1006EDA  +
jmp loc_1006A8C  +
cmp [ebp+var_C] ecx +
jz loc_1006C2A  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_1006C2A  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1006C1B  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1006C1B  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_1006B22  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1006B89  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_1006C54  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1004C86  +
test eax eax +
jz loc_1006A8C  +
mov [esi+2Ch] eax +
jmp loc_1006C5A  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_1005371  +
jmp loc_1006EDA  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_1006EDA  +
push 0  +
push ebx  +
call sub_1004B69  +
test eax eax +
jz loc_1006D33  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_1005EF1  +
test eax eax +
jz loc_1006D33  +
push 0Ah  +
push ebx  +
call sub_1005D0B  +
cmp [ebp+var_C] 1 +
jnz loc_1006CB5  +
mov dword ptr [ebp+String2] eax +
jmp loc_1006CB8  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1006D1D  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_1006CF6  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1006CE3  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100911F  +
jmp loc_1006CED  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_1009142  +
cmp eax 0FFFFFFFFh +
jnz loc_1006EDA  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1006D0E  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_10089B3  +
jmp loc_1006BDD  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_1008A08  +
jmp loc_1006BDD  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_1006D2C  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_1006EDA  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_1006D45  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_1006D99  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1006D67  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006D67  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_1006B22  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1006B89  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1006EDA  +
push ebx  +
call sub_1005CE8  +
test eax eax +
jnz loc_1006DD2  +
and edi 10h +
or edi eax +
jz loc_1006DA3  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_1006DA3  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1006EF4  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1006DC5  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006DC5  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_1006B22  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1006B89  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_1006DE3  +
call sub_1005B23  +
fstp  [ebp+var_18] +
jmp loc_1006DEB  +
call sub_1005B23  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1006E61  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_1006E32  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1006E1B  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1009165  +
jmp loc_1006E29  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1009188  +
cmp eax 0FFFFFFFFh +
jnz loc_1006EDA  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1006E4E  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1008A5D  +
jmp loc_1006BDD  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1008AB2  +
jmp loc_1006BDD  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_1006E71  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_1006EDA  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_1006EDA  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_1006EF4  +
cmp [ebp+lpString2] 0 +
jz loc_1006ED1  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1006EB2  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006EB2  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_1006B22  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006EC7  +
push 42Bh  +
call ds:SetLastError  +
call sub_1004973  +
jmp loc_1006B32  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_1006EF4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006EED  +
push 57h  +
call ebx  +
call sub_1004973  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1006FE9  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_1006FE9  +
cmp [ebp+arg_8] edi +
jz loc_1006FE9  +
push [ebp+arg_8]  +
call sub_100651F  +
test eax eax +
jnz loc_1006F6E  +
push 490h  +
jmp loc_1006FF5  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_1006F64  +
add esi 20h +
jmp loc_1006F7D  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_1006FCA  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_1006F95  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_1006FBA  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_1006FBA  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_10060D4  +
cmp eax 1 +
jz loc_1006FE4  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_1006F7B  +
jmp loc_1006F64  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006FDB  +
push 42Bh  +
call ebx  +
call sub_1004973  +
xor eax eax +
jmp loc_1006FFA  +
mov eax [ebp+arg_4] +
jmp loc_1006FFA  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006FF7  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_10070DE  +
cmp [ebp+arg_4] edi +
jz loc_10070DE  +
cmp [ebp+lpString] edi +
jz loc_10070DE  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_10070DE  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1004E6E  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_10070EF  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_100565C  +
mov [esi] eax +
test eax eax +
jnz loc_1007095  +
call ds:GetLastError  +
test eax eax +
jnz loc_10070EC  +
push 8  +
call ds:SetLastError  +
jmp loc_10070EC  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_100565C  +
mov [esi+4] eax +
test eax eax +
jz loc_1007081  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1005371  +
test edi edi +
jz loc_10070CF  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_1005371  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006F28  +
jmp loc_10070EF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10070EC  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_100717A  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_100717A  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_10048E0  +
test eax eax +
jnz loc_100712B  +
push 7  +
call sub_100486F  +
jmp loc_1007137  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_100565C  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100717A  +
test ebx ebx +
jbe loc_1007164  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_100715E  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_100715E  +
push esi  +
call sub_1004F9C  +
add esi 50h +
dec ebx  +
jnz loc_1007145  +
push [ebp+arg_0]  +
call sub_100490C  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_100717C  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_100565C  +
mov ebx eax +
cmp ebx edi +
jz loc_100720B  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_100721D  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_10071B4  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_1007224  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_100721D  +
call esi  +
test eax eax +
jnz loc_100721D  +
push 57h  +
jmp loc_1007217  +
call ds:GetLastError  +
test eax eax +
jnz loc_100721D  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10073EA  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1004C86  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_100721D  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_1007251  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1004F9C  +
jmp loc_100721D  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_1007246  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_100565C  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_1007246  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1005223  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_10072C8  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_1007286  +
cmp dword ptr [ebp+lpString] edi +
jz loc_1007246  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1004B69  +
cmp eax 4 +
ja loc_1007300  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1004F9C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100721D  +
push 42Bh  +
jmp loc_1007217  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1004ED9  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_100733A  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_1001354 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_100738A  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_100565C  +
mov esi eax +
cmp esi edi +
jnz loc_1007371  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1004F9C  +
jmp loc_100720B  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS  +
push [ebp+dwLen]  +
push esi  +
call sub_1005223  +
add esp 14h +
jmp loc_10073AA  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_1007398  +
push 7  +
call sub_100486F  +
jmp loc_10073A4  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_100565C  +
mov esi eax +
cmp esi edi +
jz loc_1007363  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_100565C  +
mov esi eax +
cmp esi edi +
jz loc_1007363  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_100646D  +
push eax  +
push 50h  +
push esi  +
call sub_1005223  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_1004F9C  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_100746C  +
cmp [ebp+arg_4] ebx +
jz loc_100746C  +
cmp [ebp+arg_C] ebx +
jz loc_100746C  +
cmp [ebp+dwErrCode] ebx +
jz loc_100746C  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_100746C  +
call sub_1004A25  +
test eax eax +
jnz loc_100744C  +
push 157Fh  +
call sub_100646D  +
push eax  +
call sub_100490C  +
push 47Eh  +
call edi  +
jmp loc_1007475  +
call sub_1004799  +
test eax eax +
jz loc_1007470  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_1007494  +
cmp eax [ebp+arg_C] +
jl loc_100747E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007470  +
push 57h  +
call edi  +
call sub_1004973  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_10065B9  +
mov esi eax +
cmp esi ebx +
jz loc_1007470  +
push esi  +
call sub_1007187  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_1007470  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_100665A  +
test eax eax +
jz loc_1007470  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_10075F6  +
jmp loc_10074CB  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_10074E4  +
mov edi [ecx+4] +
jmp loc_10074E6  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1006F28  +
cmp eax 0FFFFFFFFh +
jnz loc_100752B  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1007006  +
cmp eax 0FFFFFFFFh +
jnz loc_100751E  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_1007633  +
mov edi ebx +
xor ebx ebx +
jmp loc_1007524  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_1007666  +
test edi edi +
jz loc_1007586  +
cmp [ebp+arg_8] 2 +
jnz loc_1007586  +
push dword ptr [esi+8]  +
call sub_100657A  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_1007581  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1006F28  +
cmp eax 0FFFFFFFFh +
jnz loc_1007578  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1007006  +
cmp eax 0FFFFFFFFh +
jz loc_1007586  +
mov [ebp+arg_8] 1 +
jmp loc_1007584  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_100694B  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_10076DF  +
mov eax [esi+18h] +
test eax eax +
jz loc_10075C1  +
cmp eax [esi+1Ch] +
jz loc_1007684  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_10075DA  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_10074C8  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_1007628  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_1007628  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_10076C9  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_100761F  +
cmp [ecx+1Ch] ebx +
jz loc_10076EF  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_1007600  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_1007477  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_100646D  +
push eax  +
push esi  +
call sub_100594D  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10070FB  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1007475  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007470  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_1007470  +
test ebx ebx +
jz loc_10076B1  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_10076B1  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_100646D  +
push eax  +
push 3  +
call sub_100594D  +
add esp 14h +
jmp loc_100764B  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_100646D  +
push eax  +
push 2  +
jmp loc_1007643  +
call ds:GetLastError  +
test eax eax +
jnz loc_10076DA  +
push 42Bh  +
call edi  +
call sub_1004973  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10070FB  +
jmp loc_1007475  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_1007709  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_10076C9  +
mov edi [ecx+24h] +
jmp loc_1007721  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_100771F  +
push ebx  +
push eax  +
call sub_10065B9  +
mov edi eax +
test edi edi +
jnz loc_1007725  +
jmp loc_10076DA  +
mov edi ecx +
test edi edi +
jz loc_100773B  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100773B  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_10076BC  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_100646D  +
push eax  +
push 1  +
call sub_100594D  +
add esp 0Ch +
jmp loc_100764B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+lpString] +
push edi  +
xor edi edi +
cmp ebx edi +
jz loc_10078BD  +
push esi  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_10078BC  +
cmp [ebp+hConsoleOutput] edi +
jz loc_10078BC  +
push ebx  +
call sub_1004F61  +
mov [ebp+lpString] eax +
cmp eax esi +
jnb loc_1007798  +
mov [ebp+lpString] esi +
mov eax [ebp+lpString] +
push 1  +
add eax 5 +
push eax  +
push edi  +
push 15h  +
call sub_100565C  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_10077DA  +
call ds:GetLastError  +
test eax eax +
jnz loc_10077C2  +
push 8  +
call ds:SetLastError  +
call sub_1004973  +
push ebx  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push offset dword_1001438  +
jmp loc_10078B6  +
mov [ebp+var_4] edi +
cmp [ebp+arg_8] edi +
jz loc_10077ED  +
push [ebp+arg_8]  +
call sub_1004F61  +
mov [ebp+var_4] eax +
xor esi esi +
cmp [ebp+arg_8] edi +
jz loc_1007883  +
push esi  +
push [ebp+arg_8]  +
push ebx  +
call sub_1005301  +
cmp eax edi +
jz loc_1007883  +
push eax  +
call sub_1004F61  +
mov edi [ebp+var_4] +
push ebx  +
sub edi eax +
call sub_1004F61  +
add eax edi +
cmp eax [ebp+arg_C] +
jnb loc_1007824  +
mov esi eax +
xor edi edi +
jmp loc_10077EF  +
test esi esi +
jz loc_100782D  +
cmp eax [ebp+arg_C] +
jnz loc_1007830  +
mov esi [ebp+arg_C] +
lea eax [esi+1] +
cmp [ebp+lpString] eax +
ja loc_100783B  +
mov eax [ebp+lpString] +
mov edi [ebp+var_8] +
push eax  +
push ebx  +
push edi  +
call sub_1005371  +
push 0  +
push [ebp+arg_C]  +
push edi  +
call sub_10061B2  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push edi  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push ebx  +
push edi  +
call sub_1005371  +
push ebx  +
call sub_1004F61  +
cmp eax esi +
push ebx  +
jle loc_10078A9  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
lea eax [edi+esi*2] +
push eax  +
jmp loc_10078B6  +
cmp esi edi +
jz loc_100782D  +
push ebx  +
call sub_1004F61  +
sub eax esi +
cmp eax [ebp+arg_C] +
ja loc_100782D  +
push ebx  +
call sub_1004F61  +
cmp eax [ebp+arg_C] +
jg loc_1007830  +
push ebx  +
call sub_1004F61  +
mov esi eax +
jmp loc_1007830  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push offset dword_1001364  +
push ebx  +
call sub_1005371  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
push 16h  +
call sub_100486F  +
mov edi eax +
test edi edi +
jz loc_10079AE  +
cmp [ebp+arg_8] 0 +
jz loc_10079AE  +
push ebx  +
push esi  +
push edi  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push offset dword_1001438  +
push edi  +
call sub_1005371  +
push [ebp+arg_0]  +
call sub_10086BA  +
mov ebx [ebp+lpMem] +
push 1  +
lea esi [ebx+5] +
push esi  +
push 0  +
push 13h  +
mov [ebp+var_4] eax +
call sub_100565C  +
push 1  +
push esi  +
xor esi esi +
push esi  +
push 14h  +
mov [ebp+lpMem] eax +
call sub_100565C  +
mov dword ptr [ebp+var_8] eax +
cmp [ebp+lpMem] esi +
jz loc_10079AC  +
cmp eax esi +
jz loc_10079AC  +
push [ebp+lpString]  +
call sub_1004F61  +
mov [ebp+var_C] eax +
cmp [ebp+var_4] esi +
jbe loc_10079AC  +
push ebx  +
push dword ptr [ebp+var_8]  +
push esi  +
push [ebp+arg_0]  +
call sub_10091CF  +
push dword ptr [ebp+var_8]  +
push [ebp+arg_8]  +
push [ebp+lpMem]  +
call sub_1004D2F  +
shr eax 1 +
dec eax  +
push eax  +
push [ebp+lpMem]  +
call sub_1005223  +
add esp 10h +
push edi  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
push edi  +
call sub_10053B4  +
inc esi  +
cmp esi [ebp+var_4] +
jnb loc_10079AC  +
cmp ebx [ebp+var_C] +
jb loc_10079AC  +
push edi  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push edi  +
call sub_10053B4  +
sub ebx [ebp+var_C] +
cmp esi [ebp+var_4] +
jb loc_100794B  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov ebx [ebp+arg_0] +
mov esi offset aS +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aD +
lea edi [ebp+var_14] +
movs   +
movs   +
mov esi offset aF +
lea edi [ebp+var_C] +
movs   +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
push 16h  +
mov [ebp+lpString] eax +
movs   +
call sub_100486F  +
mov esi eax +
mov [ebp+lpMem] esi +
test ebx ebx +
jz loc_1007B38  +
test esi esi +
jz loc_1007B38  +
xor eax eax +
lea edi [ebp+Time] +
stos   +
stos   +
stos   +
push esi  +
stos   +
call sub_1004D2F  +
shr eax 1 +
push eax  +
mov edi offset dword_1001438 +
push edi  +
push esi  +
call sub_1005371  +
mov ecx [ebx+204h] +
mov eax ecx +
push 10h  +
and eax 0FF0h +
pop edx  +
sub eax edx +
jz loc_1007BF7  +
sub eax edx +
jz loc_1007BB9  +
sub eax edx +
jz loc_1007B73  +
sub eax edx +
jz loc_1007B49  +
sub eax 20h +
jz loc_1007AAC  +
sub eax 20h +
jz loc_1007A86  +
push esi  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push edi  +
push esi  +
call sub_1005371  +
jmp loc_1007B07  +
mov ecx [ebx+28Ch] +
test ecx ecx +
jz loc_1007B38  +
mov eax [ebx+290h] +
test eax eax +
jnz loc_1007AA0  +
mov eax ebx +
push esi  +
push eax  +
push [ebp+var_20]  +
push [ebp+arg_4]  +
call ecx  +
jmp loc_1007B07  +
push [ebp+arg_4]  +
lea eax [ebp+var_48] +
push [ebp+var_20]  +
push eax  +
call sub_1008DA3  +
mov esi eax +
lea edi [ebp+Time] +
movs   +
push 0FEh  +
push [ebp+lpMem]  +
movs   +
push 0  +
lea eax [ebp+Time] +
push eax  +
movs   +
push 80000000h  +
push 400h  +
movs   +
call ds:GetTimeFormatW  +
test eax eax +
jnz loc_1007B04  +
call sub_1004973  +
push [ebp+lpMem]  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
call sub_10048E0  +
push eax  +
push [ebp+lpMem]  +
call sub_1005371  +
mov esi [ebp+lpMem] +
push esi  +
call ds:lstrlenW  +
test eax eax +
jnz loc_1007B38  +
test dword ptr [ebx+204h] 100000h +
jz loc_1007B38  +
push esi  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push 138Dh  +
call sub_100646D  +
push eax  +
push esi  +
call sub_1005371  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 10h  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_1007B5A  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_1007C16  +
call sub_1008D6E  +
jmp loc_1007B9B  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_1007B84  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_1007C16  +
call sub_1008D39  +
push ecx  +
push ecx  +
fstp  [esp+5Ch+var_5C] +
push edi  +
push esi  +
call sub_1004D2F  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1005223  +
add esp 14h +
jmp loc_1007B07  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_1007BCA  +
lea edi [ebp+var_14] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_1007C16  +
call sub_1008CFE  +
push eax  +
push edi  +
push esi  +
call sub_1004D2F  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1005223  +
add esp 10h +
jmp loc_1007B07  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_1007C08  +
lea edi [ebp+var_1C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jz loc_1007C38  +
call sub_1008C96  +
test eax eax +
jz loc_1007B38  +
push [ebp+lpString]  +
push edi  +
push dword ptr [ebx+200h]  +
push eax  +
call sub_10078C8  +
jmp loc_1007B07  +
call sub_1008CCF  +
test eax eax +
jz loc_1007B38  +
jmp loc_1007BDD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_10080AE  +
mov esi [ebp+arg_8] +
cmp esi edi +
jz loc_10080AE  +
push 1  +
mov ebx 1000h +
push ebx  +
push edi  +
push 16h  +
call sub_100565C  +
mov [ebp+lpMem] eax +
call sub_100861A  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_10080A0  +
cmp [ebp+lpMem] edi +
jz loc_10080A0  +
test [ebp+arg_C] ebx +
jnz loc_1007DA0  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp eax edi +
jbe loc_1007D32  +
add esi 204h +
mov [ebp+arg_C] eax +
mov eax [esi] +
test eax ebx +
jnz loc_1007D27  +
xor edi edi +
test eax 10000h +
jnz loc_1007CDE  +
and eax 0FF0h +
cmp eax 20h +
jz loc_1007CDE  +
cmp eax 30h +
jz loc_1007CDE  +
cmp eax 40h +
jnz loc_1007CE1  +
xor edi edi +
inc edi  +
cmp ecx 1 +
jnz loc_1007CF3  +
push offset asc_1001380  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push [ebp+lpMem]  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
lea eax [esi-204h] +
push eax  +
push [ebp+lpMem]  +
call sub_1005371  +
push edi  +
push dword ptr [esi-4]  +
push [ebp+lpMem]  +
call sub_10061B2  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
xor ecx ecx +
inc ecx  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_1007CBB  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
mov edi [ebp+arg_4] +
xor eax eax +
test edi edi +
jbe loc_1007D93  +
mov esi [ebp+arg_8] +
add esi 200h +
test [esi+4] ebx +
jnz loc_1007D8A  +
cmp eax 1 +
jnz loc_1007D68  +
push offset asc_1001380  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
mov eax [esi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_100144C  +
push [ebp+lpMem]  +
call sub_10058E9  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
xor eax eax +
inc eax  +
add esi 294h +
dec edi  +
jnz loc_1007D51  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push [ebp+arg_10]  +
call sub_10086BA  +
and [ebp+var_14] 0 +
mov [ebp+var_1C] eax +
test eax eax +
jbe loc_1008095  +
push [ebp+lpMem]  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push offset dword_1001438  +
push [ebp+lpMem]  +
call sub_1005371  +
push [ebp+var_14]  +
push [ebp+arg_10]  +
call sub_1008C96  +
xor ecx ecx +
mov [ebp+var_18] eax +
cmp eax ecx +
jz loc_1008086  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_1007F1B  +
mov esi [ebp+arg_8] +
add esi 200h +
mov eax [esi+4] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax 1000h +
jnz loc_1007F06  +
test eax 88000h +
jz loc_1007E2B  +
mov eax [esi] +
push [ebp+lpMem]  +
inc ebx  +
mov [ebp+var_10] eax +
call sub_1004D2F  +
shr eax 1 +
mov [esi] eax +
mov edi offset asc_1001334 +
push edi  +
push [ebp+var_18]  +
lea eax [esi-200h] +
push [ebp+arg_C]  +
push eax  +
call sub_10079B8  +
xor ecx ecx +
test ebx ebx +
jnz loc_1007E75  +
mov eax [esi+4] +
test eax 10000h +
jnz loc_1007E67  +
and eax 0FF0h +
cmp eax 20h +
jz loc_1007E67  +
cmp eax 30h +
jz loc_1007E67  +
cmp eax 40h +
jnz loc_1007E6A  +
xor ecx ecx +
inc ecx  +
push ecx  +
push dword ptr [esi]  +
push [ebp+lpMem]  +
call sub_10061B2  +
cmp ebx 1 +
jnz loc_1007E7F  +
mov eax [ebp+var_10] +
mov [esi] eax +
cmp [ebp+var_C] 1 +
jnz loc_1007E92  +
push offset asc_1001380  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
test dword ptr [esi+4] 8000h +
jz loc_1007EF4  +
push dword ptr [esi]  +
push edi  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100775D  +
push [ebp+lpMem]  +
call sub_1004F61  +
test eax eax +
jz loc_1007EFF  +
push 3  +
push [ebp+var_8]  +
call sub_1008B07  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_1007EFF  +
push [ebp+arg_C]  +
push 0  +
push ebx  +
push [ebp+var_8]  +
call sub_100908C  +
push 0  +
push [ebp+lpMem]  +
push 2  +
push ebx  +
push [ebp+var_8]  +
call sub_100904F  +
push 0  +
push edi  +
push 1  +
push ebx  +
push [ebp+var_8]  +
call sub_100904F  +
jmp loc_1007EFF  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
mov [ebp+var_C] 1 +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_1007DFF  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push [ebp+var_8]  +
call sub_10086BA  +
mov [ebp+var_10] eax +
jmp loc_100807E  +
and [ebp+var_C] 0 +
and [ebp+arg_C] 0 +
or edi 0FFFFFFFFh +
test eax eax +
jbe loc_100806E  +
jmp loc_1007F50  +
mov edi [ebp+var_18] +
push 0  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_1008E88  +
mov esi eax +
lea eax [edi+1] +
cmp eax esi +
jnb loc_1007FC7  +
mov edx [ebp+arg_8] +
mov ecx eax +
imul ecx ecx +
mov ebx esi +
lea edi [ecx+edx+200h] +
sub ebx eax +
test dword ptr [edi+4] 1000h +
jnz loc_1007FBE  +
cmp [ebp+var_C] 1 +
jnz loc_1007F98  +
push offset asc_1001380  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
mov eax [edi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_1001380  +
push [ebp+lpMem]  +
call sub_10058E9  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
mov [ebp+var_C] 1 +
add edi 294h +
dec ebx  +
jnz loc_1007F7C  +
cmp [ebp+var_C] 1 +
mov [ebp+var_18] esi +
jnz loc_1007FDD  +
push offset asc_1001380  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_1008E51  +
push 1  +
push [ebp+arg_C]  +
mov edi eax +
push [ebp+var_8]  +
call sub_1008E51  +
mov ebx eax +
test edi edi +
jz loc_100805F  +
test ebx ebx +
jz loc_100805F  +
push [ebp+lpMem]  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push edi  +
mov edi [ebp+lpMem] +
push edi  +
call sub_1005371  +
imul esi esi +
mov eax [ebp+arg_8] +
push dword ptr [esi+eax+200h]  +
push ebx  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100775D  +
push edi  +
call sub_1004F61  +
test eax eax +
jnz loc_100804F  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_1008BC5  +
dec [ebp+arg_C]  +
dec [ebp+var_10]  +
jmp loc_100805F  +
push 0  +
push edi  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100904F  +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
cmp eax [ebp+var_10] +
jb loc_1007F4D  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_1007F38  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_1C] +
jb loc_1007DB7  +
lea eax [ebp+var_8] +
push eax  +
call sub_100868F  +
jmp loc_10080C5  +
call ds:GetLastError  +
test eax eax +
jnz loc_10080C0  +
push 8  +
jmp loc_10080BA  +
call ds:GetLastError  +
test eax eax +
jnz loc_10080C0  +
push 57h  +
call ds:SetLastError  +
call sub_1004973  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
push 7Ch  +
mov [ebp+var_9C] eax +
lea eax [ebp+var_80] +
push ebx  +
push eax  +
mov [ebp+hConsoleOutput] esi +
mov [ebp+var_A8] edi +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_1008367  +
cmp edi ebx +
jz loc_1008367  +
push 1  +
push 1000h  +
push ebx  +
push 16h  +
call sub_100565C  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jnz loc_100815B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008379  +
push 8  +
jmp loc_1008373  +
mov esi [ebp+arg_4] +
and [ebp+var_90] 0 +
test esi esi +
jbe loc_1008186  +
push edi  +
call sub_1004F61  +
cmp [ebp+var_90] eax +
jnb loc_100817D  +
mov [ebp+var_90] eax +
add edi 294h +
dec esi  +
jnz loc_1008169  +
push [ebp+var_9C]  +
call sub_10086BA  +
and [ebp+var_8C] 0 +
mov [ebp+var_A4] eax +
test eax eax +
jbe loc_100837E  +
mov edi offset String +
push [ebp+var_8C]  +
push [ebp+var_9C]  +
call sub_1008C96  +
mov [ebp+var_AC] eax +
test eax eax +
jz loc_100834D  +
and [ebp+var_94] 0 +
cmp [ebp+arg_4] 0 +
jbe loc_1008332  +
mov esi [ebp+var_A8] +
add esi 200h +
push ebx  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push offset dword_1001438  +
push ebx  +
call sub_1005371  +
test dword ptr [esi+4] 1000h +
jnz loc_1008317  +
lea eax [esi-200h] +
push eax  +
push offset aS_3  +
push ebx  +
call sub_1004D2F  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1005223  +
mov eax [ebp+var_90] +
add esp 10h +
push 0  +
add eax 2 +
push eax  +
push ebx  +
call sub_10061B2  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push [ebp+lpMem]  +
mov ebx [esi] +
call sub_1004D2F  +
push edi  +
push [ebp+var_AC]  +
shr eax 1 +
push [ebp+var_94]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_10079B8  +
push edi  +
push [ebp+lpMem]  +
mov [esi] ebx +
mov ebx ds:wcstok +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_1008305  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push edi  +
push 0  +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_1008305  +
push [ebp+lpMem]  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push offset asc_1001380  +
lea eax [ebp+String] +
push eax  +
call sub_1005371  +
mov eax [ebp+var_90] +
push 0  +
add eax 2 +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10061B2  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
lea eax [ebp+String] +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
jmp loc_100828C  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
mov ebx [ebp+lpMem] +
inc [ebp+var_94]  +
mov eax [ebp+var_94] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_10081E7  +
mov eax [ebp+var_8C] +
inc eax  +
cmp eax [ebp+var_A4] +
jnb loc_100834D  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
inc [ebp+var_8C]  +
mov eax [ebp+var_8C] +
cmp eax [ebp+var_A4] +
jb loc_10081AB  +
jmp loc_100837E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008379  +
push 57h  +
call ds:SetLastError  +
call sub_1004973  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
cmp [ebp+hConsoleOutput] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_1008548  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_1008548  +
push 1  +
mov edi 1000h +
push edi  +
push 0  +
push 16h  +
call sub_100565C  +
mov ebx eax +
mov [ebp+lpString] ebx +
test ebx ebx +
jnz loc_10083E3  +
call ds:GetLastError  +
test eax eax +
jnz loc_100855A  +
push 8  +
jmp loc_1008554  +
test [ebp+arg_C] edi +
jnz loc_100844B  +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jbe loc_100843E  +
mov [ebp+arg_C] ecx +
test [esi+204h] edi +
jnz loc_1008433  +
cmp eax 1 +
jnz loc_100840E  +
push offset asc_1001468  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push esi  +
push offset aS_4  +
push ebx  +
call sub_1004D2F  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1005223  +
add esp 10h +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
xor eax eax +
inc eax  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_10083F4  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push [ebp+arg_10]  +
call sub_10086BA  +
and [ebp+var_8] 0 +
mov [ebp+var_14] eax +
test eax eax +
jbe loc_100855F  +
mov ebx offset asc_1001458 +
push [ebp+var_8]  +
push [ebp+arg_10]  +
call sub_1008C96  +
xor ecx ecx +
mov [ebp+var_10] eax +
cmp eax ecx +
jz loc_1008537  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_100852A  +
mov esi [ebp+arg_8] +
add esi 200h +
push [ebp+lpString]  +
call sub_1004D2F  +
shr eax 1 +
push eax  +
push offset dword_1001438  +
push [ebp+lpString]  +
call sub_1005371  +
test [esi+4] edi +
jnz loc_1008515  +
push [ebp+lpString]  +
mov edi [esi] +
call sub_1004D2F  +
push offset asc_1001468  +
push [ebp+var_10]  +
shr eax 1 +
push [ebp+arg_C]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_10079B8  +
mov [esi] edi +
xor edi edi +
inc edi  +
cmp [ebp+var_C] edi +
jnz loc_10084F0  +
push offset asc_1001468  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
mov [ebp+var_C] edi +
mov edi 1000h +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_1008497  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_10053F7  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jb loc_1008467  +
jmp loc_100855F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100855A  +
push 57h  +
call ds:SetLastError  +
call sub_1004973  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hConsoleOutput] +
test esi esi +
jz loc_10085C6  +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_10085C6  +
mov ecx [ebp+arg_C] +
mov eax ecx +
and eax 0Fh +
dec eax  +
jz loc_10085B0  +
dec eax  +
jz loc_10085A0  +
dec eax  +
jnz loc_10085BE  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_1008394  +
jmp loc_10085BE  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_1007C4C  +
jmp loc_10085BE  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_10080D1  +
push esi  +
call ds:fflush  +
pop ecx  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100856B  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100860F  +
cmp dword ptr [eax] 9 +
jnz loc_100860F  +
xor eax eax +
inc eax  +
jmp loc_1008611  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_100862A  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10085F9  +
test eax eax +
jz loc_1008685  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1008679  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_1008786  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1004F9C  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_100865D  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_10085F9  +
test eax eax +
jz loc_10086B0  +
push ecx  +
call sub_100863F  +
push esi  +
call sub_1004F9C  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10085F9  +
test eax eax +
jz loc_10086CF  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10085F9  +
test eax eax +
jnz loc_10086EE  +
xor eax eax +
jmp loc_1008713  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_10086EA  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_1008709  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_1008701  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1008712  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10085F9  +
test eax eax +
jnz loc_1008734  +
or eax 0FFFFFFFFh +
jmp loc_100877C  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_100872F  +
push 14h  +
call sub_1004C86  +
test eax eax +
jz loc_100872F  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_100876F  +
mov [esi+8] eax +
jmp loc_1008775  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_10087FA  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_10087C5  +
jz loc_10087E1  +
cmp eax 20000h +
jz loc_10087E1  +
cmp eax 30000h +
jz loc_10087E1  +
cmp eax 40000h +
jz loc_10087E1  +
cmp eax 50000h +
jz loc_10087E1  +
cmp eax 60000h +
jz loc_10087E1  +
jmp loc_10087FA  +
cmp eax 80000h +
jz loc_10087EC  +
cmp eax 90000h +
jz loc_10087E1  +
cmp eax 0A0000h +
jz loc_10087E1  +
cmp eax 0B0000h +
jnz loc_10087FA  +
add edx 0Ch +
push edx  +
call sub_1004F9C  +
jmp loc_10087FA  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_100868F  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_10085F9  +
test eax eax +
jnz loc_100881E  +
or eax 0FFFFFFFFh +
jmp loc_100892D  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_1008928  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_1008918  +
mov ecx 70000h +
cmp eax ecx +
ja loc_10088AC  +
jz loc_100889A  +
cmp eax 20000h +
jz loc_100887E  +
cmp eax 30000h +
jz loc_100890F  +
cmp eax 40000h +
jz loc_100890F  +
cmp eax 60000h +
jnz loc_1008918  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_10088A1  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1004B8A  +
test eax eax +
jz loc_1008932  +
mov edx [ebp+arg_0] +
jmp loc_1008918  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_1008918  +
mov eax edx +
jmp loc_100892B  +
cmp eax 90000h +
jz loc_100890F  +
cmp eax 0A0000h +
jz loc_10088D2  +
cmp eax 0B0000h +
jnz loc_1008918  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_1008918  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_1008916  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_1008918  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_1008918  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_1008918  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1008918  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_1008918  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_1008916  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_10088A8  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_1008834  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_100892B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10085F9  +
test eax eax +
jnz loc_1008957  +
or eax 0FFFFFFFFh +
jmp locret_10089AA  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100896A  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1004C86  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10089A5  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_1005371  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100871C  +
cmp eax 0FFFFFFFFh +
jnz loc_10089A8  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004F9C  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10085F9  +
test eax eax +
jz loc_10089FC  +
push 4  +
call sub_1004C86  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10089FC  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100871C  +
cmp eax 0FFFFFFFFh +
jnz locret_10089FF  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004F9C  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10085F9  +
test eax eax +
jz loc_1008A51  +
push 4  +
call sub_1004C86  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008A51  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100871C  +
cmp eax 0FFFFFFFFh +
jnz locret_1008A54  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004F9C  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10085F9  +
test eax eax +
jz loc_1008AA6  +
push 4  +
call sub_1004C86  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008AA6  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100871C  +
cmp eax 0FFFFFFFFh +
jnz locret_1008AA9  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004F9C  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10085F9  +
test eax eax +
jz loc_1008AFB  +
push 8  +
call sub_1004C86  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008AFB  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100871C  +
cmp eax 0FFFFFFFFh +
jnz locret_1008AFE  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004F9C  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_10085F9  +
test eax eax +
jz loc_1008B75  +
call sub_100861A  +
push eax  +
mov [ebp+var_4] eax +
call sub_10085F9  +
test eax eax +
jz loc_1008B75  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_1008B4F  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_100871C  +
cmp eax 0FFFFFFFFh +
jz loc_1008B4F  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1008B39  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_1008B6C  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_100871C  +
cmp eax 0FFFFFFFFh +
jnz loc_1008B78  +
lea eax [ebp+var_4] +
push eax  +
call sub_100868F  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_10085F9  +
test eax eax +
jnz loc_1008B98  +
or eax 0FFFFFFFFh +
jmp loc_1008BBC  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_1008BB9  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_100871C  +
cmp eax 0FFFFFFFFh +
jz loc_1008BB9  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1008BA0  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_10086D8  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008C21  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1008BFE  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_1008C04  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_1008C0C  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_1008786  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004F9C  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1008C57  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008C57  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008BC5  +
jmp loc_1008C59  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1008C8B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008C8B  +
push dword ptr [eax+0Ch]  +
call sub_10086BA  +
jmp loc_1008C8D  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jnz loc_1008CB0  +
xor eax eax +
jmp loc_1008CC6  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_1008CC3  +
cmp ecx 80000h +
jnz loc_1008CAC  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jnz loc_1008CE9  +
xor eax eax +
jmp loc_1008CF5  +
cmp dword ptr [eax+4] 20000h +
jnz loc_1008CE5  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jnz loc_1008D18  +
xor eax eax +
jmp loc_1008D30  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_1008D2B  +
cmp ecx 30000h +
jnz loc_1008D14  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jnz loc_1008D57  +
fld  ds:flt_100146C +
jmp loc_1008D65  +
cmp dword ptr [eax+4] 60000h +
jnz loc_1008D4F  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jnz loc_1008D8C  +
fld  ds:dbl_1001470 +
jmp loc_1008D9A  +
cmp dword ptr [eax+4] 70000h +
jnz loc_1008D84  +
mov eax [eax+0Ch] +
fld  qword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor eax eax +
lea edi [ebp+FileTime] +
stos   +
stos   +
xor eax eax +
mov edi ebx +
stos   +
stos   +
push 0  +
push [ebp+arg_8]  +
stos   +
push [ebp+arg_4]  +
stos   +
call sub_10086D8  +
test eax eax +
jz loc_1008E0D  +
mov edx [eax+4] +
mov ecx 0A0000h +
cmp edx ecx +
jz loc_1008DE7  +
cmp edx 0B0000h +
jnz loc_1008E0D  +
cmp edx ecx +
jnz loc_1008DF4  +
push esi  +
mov esi [eax+0Ch] +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
pop esi  +
jmp loc_1008E0D  +
mov eax [eax+0Ch] +
mov ecx [eax] +
mov [ebp+FileTime.dwLowDateTime] ecx +
mov eax [eax+4] +
mov [ebp+FileTime.dwHighDateTime] eax +
push ebx  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1008E46  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008E46  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008C96  +
jmp loc_1008E48  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1008E7D  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008E7D  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008CCF  +
jmp loc_1008E7F  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1008EB4  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008EB4  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008CFE  +
jmp loc_1008EB6  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1008ED0  +
xor eax eax +
jmp loc_1008F00  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1008ECC  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_1008EF3  +
test ecx ecx +
jz loc_1008EF7  +
jmp loc_1008ECC  +
test ecx ecx +
jnz loc_1008EFA  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
mov esi eax +
cmp esi edi +
jnz loc_1008F29  +
xor eax eax +
jmp loc_1008FA8  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_1008F3A  +
cmp eax edi +
jnz loc_1008F8F  +
cmp [ebp+arg_C] edi +
jnz loc_1008F4B  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_1008F6F  +
lea edi [eax+eax] +
push edi  +
call sub_1004C86  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1008F8F  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_1008F96  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_1008F96  +
lea edi [esi+0Ch] +
push edi  +
call sub_1004F9C  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1004C86  +
mov [edi] eax +
test eax eax +
jnz loc_1008F93  +
xor eax eax +
jmp loc_1008FA7  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1005371  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
mov esi eax +
test esi esi +
jnz loc_1008FD0  +
xor eax eax +
jmp loc_100900B  +
mov eax [esi+4] +
cmp eax 40000h +
jz loc_1008FE0  +
test eax eax +
jz loc_1008FE4  +
jmp loc_1008FCC  +
test eax eax +
jnz loc_1009000  +
push 4  +
call sub_1004C86  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1008FCC  +
mov dword ptr [esi+4] 40000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1009044  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1009044  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008EBF  +
jmp loc_1009046  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1009081  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1009081  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008F0A  +
jmp loc_1009083  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_10090BB  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10090BB  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008FB3  +
jmp loc_10090BD  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_10090DF  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10086D8  +
test eax eax +
jz loc_1009114  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1009114  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10090C6  +
jmp loc_1009116  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1008803  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1008803  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1008803  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1008803  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1008803  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_100A000 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_204] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push 1FAh  +
lea eax [ebp+var_200] +
push 0  +
push eax  +
call memset  +
mov ebx [ebp+arg_C] +
add esp 0Ch +
test ebx ebx +
jnz loc_1009218  +
xor eax eax +
jmp loc_10092CC  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_10086D8  +
mov esi eax +
test esi esi +
jz loc_1009211  +
push ebx  +
push offset dword_1001438  +
push edi  +
call sub_1005371  +
mov eax [esi+4] +
cmp eax 20000h +
jz loc_10092BB  +
cmp eax 30000h +
jz loc_10092AF  +
cmp eax 40000h +
jz loc_100928F  +
cmp eax 60000h +
jz loc_1009288  +
cmp eax 70000h +
jnz loc_10092C5  +
mov eax [esi+0Ch] +
fld  qword ptr [eax] +
push ecx  +
push ecx  +
fstp  [esp+218h+var_218] +
push offset aF  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1005223  +
add esp 14h +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
jmp loc_10092BF  +
mov eax [esi+0Ch] +
fld  dword ptr [eax] +
jmp loc_1009260  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLu  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1005223  +
add esp 10h +
jmp loc_100927E  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLd  +
jmp loc_1009299  +
push ebx  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_1005371  +
push edi  +
call ds:lstrlenW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100421C  +
leave   +
retn 10h  +
***
retn 98h  +
***
retf   +
***
