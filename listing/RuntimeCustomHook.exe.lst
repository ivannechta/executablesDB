push 0  +
push offset unk_44EABC  +
mov ecx offset dword_4589B0 +
call loc_402B00  +
push offset loc_441360  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
mov ecx offset dword_4589C8 +
call loc_402B00  +
push offset loc_4413F0  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
mov ecx offset dword_4589E0 +
call loc_402B00  +
push offset loc_441450  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
mov ecx offset dword_4589F8 +
call loc_402B00  +
push offset loc_4414B0  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
mov ecx offset dword_458A10 +
call loc_402B00  +
push offset loc_441510  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
mov ecx offset dword_458A28 +
call loc_402B00  +
push offset loc_441570  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
mov ecx offset unk_4590E0 +
call sub_41A3B3  +
push offset byte_441600  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
mov ecx offset unk_4592E0 +
call sub_41A3B3  +
push offset byte_441640  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
mov ecx offset unk_4596FC +
call sub_41C6DD  +
push offset loc_441650  +
call sub_41B8A3  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_442724 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41CC7C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ecx+4] +
mov eax offset aUnknownExcepti +
test ecx ecx +
cmovnz eax ecx +
retn   +
***
push esi  +
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_442724 +
push eax  +
call sub_41CCDF  +
pop ecx  +
retn   +
***
xorps xmm0 xmm0 +
mov eax ecx +
movq qword ptr [ecx+4] xmm0 +
mov dword ptr [ecx+4] offset aBadArrayNewLen +
mov dword ptr [ecx] offset off_44277C +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea ecx [ebp-0Ch] +
call sub_401200  +
push offset unk_456CC4  +
lea eax [ebp-0Ch] +
push eax  +
call sub_41D1A3  +
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_442724 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41CC7C  +
add esp 8 +
mov dword ptr [esi] offset off_44277C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_442724 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41CC7C  +
add esp 8 +
mov dword ptr [esi] offset off_442730 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aMapSetTooLong  +
call sub_41A1CA  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FA38  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi edx +
mov edi [ebp+8] +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
mov [ebp-4] eax +
mov [ebp-30h] eax +
mov [ebp-34h] eax +
lea eax [ebp-28h] +
cmp eax ecx +
jz loc_40133A  +
cmp dword ptr [ecx+14h] 8 +
mov eax ecx +
jb loc_40132E  +
mov eax [ecx] +
push dword ptr [ecx+10h]  +
lea ecx [ebp-28h] +
push eax  +
call loc_402B00  +
push ecx  +
mov edx esi +
lea ecx [ebp-28h] +
call loc_411080  +
add esp 4 +
test al al +
jnz loc_401350  +
xor bl bl +
jmp loc_401375  +
push ecx  +
lea eax [ebp-2Ch] +
mov dword ptr [ebp-2Ch] 0 +
push eax  +
push ecx  +
lea eax [ebp-30h] +
mov edx edi +
push eax  +
push ecx  +
lea eax [ebp-34h] +
push eax  +
lea ecx [ebp-28h] +
call loc_411420  +
add esp 18h +
mov bl 1 +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_4013AB  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4013A1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4013C9  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FCC1  +
mov eax large fs:0 +
push eax  +
sub esp 444h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+0Ch] +
xorps xmm0 xmm0 +
mov dword ptr [ebp-418h] 0 +
movlpd oword ptr [ebp-220h] xmm0 +
push 40h  +
mov dword ptr [ebp-220h] 0 +
mov dword ptr [ebp-21Ch] 0 +
call sub_41B637  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [ebp-220h] eax +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
movq qword ptr [ebp-250h] xmm0 +
push 40h  +
mov dword ptr [ebp-248h] 0 +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 0 +
call sub_41B637  +
add esp 8 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [ebp-250h] eax +
mov dword ptr [ebp-248h] 0 +
push esi  +
push dword ptr [ebp+8]  +
lea ecx [ebp-250h] +
mov byte ptr [ebp-4] 1 +
call loc_40F1E0  +
lea eax [ebp-250h] +
push eax  +
lea ecx [ebp-220h] +
call loc_4027F0  +
push 110h  +
lea eax [ebp-410h] +
push 0  +
push eax  +
call sub_41DD10  +
add esp 8 +
lea ecx [ebp-410h] +
call loc_408200  +
push ecx  +
lea ecx [ebp-410h] +
mov byte ptr [ebp-4] 2 +
call loc_40DEC0  +
sub esp 8 +
lea ecx [ebp-410h] +
call loc_40E1B0  +
lea eax [ebp-410h] +
push eax  +
call sub_403590  +
mov ecx eax +
call loc_403630  +
push 80h  +
lea eax [ebp-300h] +
push 0  +
push eax  +
call sub_41DD10  +
add esp 0Ch +
mov dword ptr [ebp-300h] offset off_4525A4 +
xor eax eax +
mov dword ptr [ebp-2E8h] 0 +
mov dword ptr [ebp-2E4h] 7 +
mov [ebp-2F8h] ax +
mov [ebp-2D0h] eax +
mov dword ptr [ebp-2CCh] 7 +
mov [ebp-2E0h] ax +
mov [ebp-2B8h] eax +
mov dword ptr [ebp-2B4h] 7 +
mov [ebp-2C8h] ax +
mov [ebp-2A0h] eax +
mov dword ptr [ebp-29Ch] 7 +
mov [ebp-2B0h] ax +
mov [ebp-288h] eax +
mov dword ptr [ebp-284h] 7 +
mov [ebp-298h] ax +
push 11h  +
push offset aRuntimecustomh  +
lea ecx [ebp-298h] +
mov byte ptr [ebp-4] 7 +
call loc_402B00  +
push 0  +
push offset unk_44EABC  +
lea ecx [ebp-2F8h] +
call loc_402B00  +
push 3  +
push offset aAds  +
lea ecx [ebp-2E0h] +
call loc_402B00  +
push 11h  +
push offset aRuntimecustomh  +
lea ecx [ebp-2C8h] +
call loc_402B00  +
push 0  +
push offset unk_44EABC  +
lea ecx [ebp-2B0h] +
call loc_402B00  +
call sub_403590  +
mov [ebp-2FCh] eax +
mov byte ptr [ebp-4] 8 +
cmp dword ptr [ebp-21Ch] 0 +
jnz loc_40163D  +
lea eax [ebp-300h] +
push offset aNoInstallation  +
push eax  +
call sub_40EC40  +
add esp 8 +
xor esi esi +
jmp loc_402486  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-23Ch] 0 +
movq qword ptr [ebp-244h] xmm0 +
mov dword ptr [ebp-244h] 0 +
mov dword ptr [ebp-240h] 0 +
mov dword ptr [ebp-23Ch] 0 +
xor eax eax +
mov dword ptr [ebp-270h] 0 +
mov dword ptr [ebp-26Ch] 7 +
mov [ebp-280h] ax +
push 104h  +
lea eax [ebp-218h] +
mov byte ptr [ebp-4] 0Ah +
push eax  +
push 0  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_40246D  +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jz loc_40246D  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
push offset aInstallingVcre  +
push eax  +
call sub_40EC40  +
add esp 8 +
mov dword ptr [ebp-420h] 0 +
xor eax eax +
mov dword ptr [ebp-41Ch] 7 +
lea ecx [ebp-430h] +
mov [ebp-430h] ax +
push 2  +
push offset aQ  +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 0Bh +
push eax  +
lea ecx [ebp-244h] +
call sub_4028A0  +
lea ecx [ebp-430h] +
mov byte ptr [ebp-4] 0Ah +
call loc_4029B0  +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aNorestart  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 0Ch +
push eax  +
lea ecx [ebp-244h] +
call sub_4028A0  +
lea ecx [ebp-430h] +
mov byte ptr [ebp-4] 0Ah +
call loc_4029B0  +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aVc10_win32  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 0Dh +
push eax  +
lea ecx [ebp-220h] +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
lea ecx [ebp-430h] +
mov byte ptr [ebp-4] 0Ah +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_40187D  +
push offset aF0c3e5d11ade32  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401869  +
push offset aVc1032bitVcred  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 0Eh +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
push offset aVcredist201032  +
jmp loc_40186E  +
push offset aVcredist2010_0  +
lea eax [ebp-300h] +
push eax  +
call sub_40EC40  +
add esp 8 +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aVc10_win64  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 0Fh +
push eax  +
lea ecx [ebp-220h] +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
lea ecx [ebp-430h] +
mov byte ptr [ebp-4] 0Ah +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_40194C  +
push offset a1d8e6291B0d535  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401938  +
push offset aVc1064bitVcred  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 10h +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
push offset aVcredist201064  +
jmp loc_40193D  +
push offset aVcredist2010_1  +
lea eax [ebp-300h] +
push eax  +
call sub_40EC40  +
add esp 8 +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aVc11_win32  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 11h +
push eax  +
lea ecx [ebp-220h] +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
lea ecx [ebp-430h] +
mov byte ptr [ebp-4] 0Ah +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_401A2B  +
push offset aBd95a8cd1d9f35  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401A17  +
push offset aB175520c86a235  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401A17  +
push offset aVc1232bitVcred  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 12h +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
push offset aVcredist201232  +
jmp loc_401A1C  +
push offset aVcredist2012_0  +
lea eax [ebp-300h] +
push eax  +
call sub_40EC40  +
add esp 8 +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aVc11_win64  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 13h +
push eax  +
lea ecx [ebp-220h] +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
lea ecx [ebp-430h] +
mov byte ptr [ebp-4] 0Ah +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_401B0A  +
push offset aCf2bea3c26ea32  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401AF6  +
push offset a37b8f9c703fb32  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401AF6  +
push offset aVc1264bitVcred  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 14h +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
push offset aVcredist201264  +
jmp loc_401AFB  +
push offset aVcredist2012_1  +
lea eax [ebp-300h] +
push eax  +
call sub_40EC40  +
add esp 8 +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aVc12_win32  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 15h +
push eax  +
lea ecx [ebp-220h] +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
lea ecx [ebp-430h] +
mov byte ptr [ebp-4] 0Ah +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_401BE9  +
push offset a8122dab1Ed4d36  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401BD5  +
push offset aD401961d3a203a  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401BD5  +
push offset aVc1332bitVcred  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 16h +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
push offset aVcredist201332  +
jmp loc_401BDA  +
push offset aVcredist2013_0  +
lea eax [ebp-300h] +
push eax  +
call sub_40EC40  +
add esp 8 +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aVc12_win64  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 17h +
push eax  +
lea ecx [ebp-220h] +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
lea ecx [ebp-430h] +
mov byte ptr [ebp-4] 0Ah +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_401CC8  +
push offset a53cf6934A98d3d  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401CB4  +
push offset a010792ba551a3a  +
call ds:MsiQueryProductStateW  +
cmp eax 5 +
jz loc_401CB4  +
push offset aVc1364bitVcred  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 18h +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
push offset aVcredist201364  +
jmp loc_401CB9  +
push offset aVcredist2013_1  +
lea eax [ebp-300h] +
push eax  +
call sub_40EC40  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-228h] 0 +
mov dword ptr [ebp-224h] 7 +
mov [ebp-238h] ax +
mov byte ptr [ebp-4] 19h +
lea ecx [ebp-268h] +
push 0Dh  +
push offset a14_23_27820_0  +
mov [ebp-258h] eax +
mov dword ptr [ebp-254h] 7 +
mov [ebp-268h] ax +
call loc_402B00  +
mov byte ptr [ebp-4] 1Ah +
lea ecx [ebp-44Ch] +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-43Ch] 0 +
push offset aVc14_win32  +
mov dword ptr [ebp-438h] 7 +
mov [ebp-44Ch] ax +
call loc_402B00  +
lea eax [ebp-44Ch] +
mov byte ptr [ebp-4] 1Bh +
mov ebx 1 +
lea ecx [ebp-220h] +
push eax  +
mov [ebp-418h] ebx +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
test al al +
jnz loc_401DE0  +
push 0Ch  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aVc14_1_win32  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov dword ptr [ebp-4] 1Ch +
mov ebx 3 +
lea ecx [ebp-220h] +
push eax  +
mov [ebp-418h] ebx +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
mov byte ptr [ebp-411h] 0 +
test al al +
jz loc_401DE7  +
mov byte ptr [ebp-411h] 1 +
test bl 2 +
jz loc_401DFA  +
lea ecx [ebp-430h] +
and ebx 0FFFFFFFDh +
call loc_4029B0  +
lea ecx [ebp-44Ch] +
mov dword ptr [ebp-4] 1Ah +
and ebx 0FFFFFFFEh +
call loc_4029B0  +
cmp byte ptr [ebp-411h] 0 +
jz loc_401FA0  +
sub esp 18h +
mov byte ptr [ebp-411h] 1 +
mov ecx esp +
mov [ebp-418h] esp +
lea esi [ebp-238h] +
push offset off_44F38C  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 1Dh +
mov ecx esp +
mov [ebp-450h] esp +
push offset aVersion  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 1Eh +
mov ecx esp +
push offset aHkey_local_m_1  +
call sub_402A10  +
mov dl [ebp-411h] +
mov ecx esi +
mov byte ptr [ebp-4] 1Ah +
call loc_410730  +
add esp 48h +
cmp dword ptr [ebp-228h] 0 +
jnz loc_401EEC  +
sub esp 18h +
mov byte ptr [ebp-411h] 1 +
mov ecx esp +
mov [ebp-434h] esp +
push offset off_44F38C  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 1Fh +
mov ecx esp +
mov [ebp-450h] esp +
push offset aVersion  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 20h +
mov ecx esp +
push offset aHkey_local_m_2  +
call sub_402A10  +
mov dl [ebp-411h] +
mov ecx esi +
mov byte ptr [ebp-4] 1Ah +
call loc_410730  +
add esp 48h +
cmp dword ptr [ebp-228h] 0 +
jz loc_401EFA  +
sub esp 8 +
lea ecx [ebp-238h] +
call sub_402970  +
sub esp 18h +
lea eax [ebp-268h] +
mov ecx esp +
push eax  +
call sub_402A60  +
lea ecx [ebp-238h] +
call loc_411EB0  +
add esp 18h +
test eax eax +
jns loc_401F77  +
push offset aVc1432bitVcred  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 21h +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 1Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
cmp dword ptr [ebp-254h] 8 +
lea eax [ebp-268h] +
cmovnb eax [ebp-268h] +
push eax  +
push offset aVcredist201520  +
jmp loc_401F91  +
cmp dword ptr [ebp-224h] 8 +
lea eax [ebp-238h] +
cmovnb eax [ebp-238h] +
push eax  +
push offset aVcredist2015_0  +
lea eax [ebp-300h] +
push eax  +
call sub_40E5E0  +
add esp 0Ch +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
push offset aVc14_win64  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
call loc_402B00  +
lea eax [ebp-430h] +
mov byte ptr [ebp-4] 22h +
or ebx 4 +
lea ecx [ebp-220h] +
push eax  +
mov [ebp-418h] ebx +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
test al al +
jnz loc_402066  +
push 0Ch  +
xor eax eax +
mov dword ptr [ebp-43Ch] 0 +
push offset aVc14_1_win64  +
lea ecx [ebp-44Ch] +
mov dword ptr [ebp-438h] 7 +
mov [ebp-44Ch] ax +
call loc_402B00  +
lea eax [ebp-44Ch] +
mov dword ptr [ebp-4] 23h +
or ebx 8 +
lea ecx [ebp-220h] +
push eax  +
mov [ebp-418h] ebx +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
mov byte ptr [ebp-411h] 0 +
test al al +
jz loc_40206D  +
mov byte ptr [ebp-411h] 1 +
test bl 8 +
jz loc_40207D  +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
lea ecx [ebp-430h] +
mov dword ptr [ebp-4] 1Ah +
call loc_4029B0  +
cmp byte ptr [ebp-411h] 0 +
jz loc_40222F  +
cmp dword ptr [ebp-224h] 8 +
lea eax [ebp-238h] +
mov dword ptr [ebp-228h] 0 +
lea esi [ebp-238h] +
cmovnb eax [ebp-238h] +
mov bl 1 +
sub esp 18h +
xor ecx ecx +
mov [ebp-434h] esp +
mov [eax] cx +
mov ecx esp +
push offset off_44F38C  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 24h +
mov ecx esp +
mov [ebp-450h] esp +
push offset aVersion  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 25h +
mov ecx esp +
push offset aHkey_local_m_3  +
call sub_402A10  +
mov dl bl +
mov byte ptr [ebp-4] 1Ah +
mov ecx esi +
call loc_410730  +
add esp 48h +
cmp dword ptr [ebp-228h] 0 +
jnz loc_40217B  +
sub esp 18h +
mov ecx esp +
mov [ebp-434h] esp +
push offset off_44F38C  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 26h +
mov ecx esp +
mov [ebp-450h] esp +
push offset aVersion  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 27h +
mov ecx esp +
push offset aHkey_local_m_4  +
call sub_402A10  +
mov dl bl +
mov byte ptr [ebp-4] 1Ah +
mov ecx esi +
call loc_410730  +
add esp 48h +
cmp dword ptr [ebp-228h] 0 +
jz loc_402189  +
sub esp 8 +
lea ecx [ebp-238h] +
call sub_402970  +
sub esp 18h +
lea eax [ebp-268h] +
mov ecx esp +
push eax  +
call sub_402A60  +
lea ecx [ebp-238h] +
call loc_411EB0  +
add esp 18h +
test eax eax +
jns loc_402206  +
push offset aVc1464bitVcred  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 28h +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 1Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
cmp dword ptr [ebp-254h] 8 +
lea eax [ebp-268h] +
cmovnb eax [ebp-268h] +
push eax  +
push offset aVcredist2015_1  +
jmp loc_402220  +
cmp dword ptr [ebp-224h] 8 +
lea eax [ebp-238h] +
cmovnb eax [ebp-238h] +
push eax  +
push offset aVcredist2015_2  +
lea eax [ebp-300h] +
push eax  +
call sub_40E5E0  +
add esp 0Ch +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-43Ch] 0 +
push offset aVc14_winarm64  +
lea ecx [ebp-44Ch] +
mov dword ptr [ebp-438h] 7 +
mov [ebp-44Ch] ax +
call loc_402B00  +
lea eax [ebp-44Ch] +
mov byte ptr [ebp-4] 29h +
push eax  +
lea ecx [ebp-220h] +
call loc_4026C0  +
mov edx offset a1 +
mov ecx eax +
call loc_402D30  +
lea ecx [ebp-44Ch] +
mov byte ptr [ebp-4] 1Ah +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_40242C  +
cmp dword ptr [ebp-224h] 8 +
lea eax [ebp-238h] +
mov dword ptr [ebp-228h] 0 +
lea esi [ebp-238h] +
cmovnb eax [ebp-238h] +
mov bl 1 +
sub esp 18h +
xor ecx ecx +
mov [ebp-434h] esp +
mov [eax] cx +
mov ecx esp +
push offset off_44F38C  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 2Ah +
mov ecx esp +
mov [ebp-450h] esp +
push offset aVersion  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 2Bh +
mov ecx esp +
push offset aHkey_local_m_5  +
call sub_402A10  +
mov dl bl +
mov byte ptr [ebp-4] 1Ah +
mov ecx esi +
call loc_410730  +
add esp 48h +
cmp dword ptr [ebp-228h] 0 +
jnz loc_402378  +
sub esp 18h +
mov ecx esp +
mov [ebp-434h] esp +
push offset off_44F38C  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 2Ch +
mov ecx esp +
mov [ebp-450h] esp +
push offset aVersion  +
call sub_402A10  +
sub esp 18h +
mov byte ptr [ebp-4] 2Dh +
mov ecx esp +
push offset aHkey_local_m_6  +
call sub_402A10  +
mov dl bl +
mov byte ptr [ebp-4] 1Ah +
mov ecx esi +
call loc_410730  +
add esp 48h +
cmp dword ptr [ebp-228h] 0 +
jz loc_402386  +
sub esp 8 +
lea ecx [ebp-238h] +
call sub_402970  +
sub esp 18h +
lea eax [ebp-268h] +
mov ecx esp +
push eax  +
call sub_402A60  +
lea ecx [ebp-238h] +
call loc_411EB0  +
add esp 18h +
test eax eax +
jns loc_402403  +
push offset aVc14Winarm64bi  +
lea ecx [ebp-44Ch] +
call sub_402A10  +
lea eax [ebp-244h] +
mov byte ptr [ebp-4] 2Eh +
push eax  +
lea edx [ebp-44Ch] +
lea ecx [ebp-280h] +
call loc_4012D0  +
add esp 4 +
mov byte ptr [ebp-4] 1Ah +
lea ecx [ebp-44Ch] +
call loc_4029B0  +
cmp dword ptr [ebp-254h] 8 +
lea eax [ebp-268h] +
cmovnb eax [ebp-268h] +
push eax  +
push offset aVcredist2015_1  +
jmp loc_40241D  +
cmp dword ptr [ebp-224h] 8 +
lea eax [ebp-238h] +
cmovnb eax [ebp-238h] +
push eax  +
push offset aVcredist2015_2  +
lea eax [ebp-300h] +
push eax  +
call sub_40E5E0  +
add esp 0Ch +
lea eax [ebp-300h] +
push offset aInstallingVc_0  +
push eax  +
call sub_40EC40  +
add esp 8 +
lea eax [ebp-410h] +
push eax  +
call sub_403590  +
mov ecx eax +
call sub_403840  +
lea ecx [ebp-268h] +
xor esi esi +
call loc_4029B0  +
lea ecx [ebp-238h] +
call loc_4029B0  +
jmp loc_402470  +
or esi 0FFFFFFFFh +
lea ecx [ebp-280h] +
call loc_4029B0  +
lea ecx [ebp-244h] +
call loc_402900  +
lea ecx [ebp-300h] +
call loc_402530  +
lea ecx [ebp-410h] +
call loc_4054F0  +
mov eax [ebp-250h] +
push dword ptr [eax+4]  +
lea eax [ebp-250h] +
push eax  +
mov ecx eax +
call sub_402F00  +
push 40h  +
push dword ptr [ebp-250h]  +
call sub_41B8B8  +
mov eax [ebp-220h] +
add esp 8 +
push dword ptr [eax+4]  +
lea eax [ebp-220h] +
push eax  +
mov ecx eax +
call sub_402F00  +
push 40h  +
push dword ptr [ebp-220h]  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi] +
push dword ptr [eax+4]  +
push esi  +
call sub_402F00  +
push 40h  +
push dword ptr [esi]  +
call sub_41B8B8  +
add esp 8 +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+7Ch] +
cmp ecx 8 +
jb loc_40256D  +
mov eax [esi+68h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_402563  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4026B3  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 7 +
mov [esi+68h] ax +
mov ecx [esi+64h] +
cmp ecx 8 +
jb loc_4025BB  +
mov eax [esi+50h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4025B1  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4026B3  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+60h] 0 +
mov dword ptr [esi+64h] 7 +
mov [esi+50h] ax +
mov ecx [esi+4Ch] +
cmp ecx 8 +
jb loc_402609  +
mov eax [esi+38h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4025FF  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4026B3  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+48h] 0 +
mov dword ptr [esi+4Ch] 7 +
mov [esi+38h] ax +
mov ecx [esi+34h] +
cmp ecx 8 +
jb loc_402653  +
mov eax [esi+20h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_402649  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4026B3  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 7 +
mov [esi+20h] ax +
mov ecx [esi+1Ch] +
cmp ecx 8 +
jb loc_40269D  +
mov eax [esi+8] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_402693  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4026B3  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 7 +
mov [esi+8] ax +
pop esi  +
retn   +
***
call sub_42071A  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FCF8  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 18h +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-14h] ecx +
mov edi [ebx+8] +
lea eax [ebp-20h] +
push edi  +
push eax  +
call sub_403280  +
mov esi [ebp-18h] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_402744  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_402720  +
mov edx [esi+10h] +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_40272A  +
mov ecx [edi] +
push dword ptr [esi+20h]  +
push edx  +
mov edx [edi+10h] +
call loc_403530  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_4027CE  +
mov eax [ebp-14h] +
cmp dword ptr [eax+4] 3FFFFFFh +
jz loc_4027E7  +
mov esi [eax] +
mov [ebp-28h] eax +
mov dword ptr [ebp-4] 0 +
push 40h  +
mov dword ptr [ebp-24h] 0 +
call sub_41B637  +
add esp 4 +
xor ecx ecx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+24h] 0 +
movups xmm0 oword ptr [edi] +
push eax  +
push dword ptr [ebp-1Ch]  +
movups oword ptr [eax+10h] xmm0 +
movq xmm0 qword ptr [edi+10h] +
push dword ptr [ebp-20h]  +
movq qword ptr [eax+20h] xmm0 +
mov [edi] cx +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 7 +
mov [eax+38h] ecx +
mov [eax+28h] cx +
mov dword ptr [eax+3Ch] 7 +
mov [eax] esi +
mov [eax+4] esi +
mov [eax+8] esi +
mov [eax+0Ch] cx +
mov ecx [ebp-14h] +
call sub_402F50  +
mov esi eax +
lea eax [esi+28h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 4  +
***
call loc_4012C0  +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
push edi  +
mov edi ecx +
cmp edi ebx +
jz loc_402891  +
push esi  +
mov esi [edi] +
push dword ptr [esi+4]  +
push edi  +
call sub_402F00  +
push dword ptr [ebp-4]  +
mov [esi+4] esi +
mov ecx edi +
mov [esi] esi +
mov [esi+8] esi +
push dword ptr [edi]  +
mov dword ptr [edi+4] 0 +
mov eax [ebx] +
push dword ptr [eax+4]  +
call sub_403310  +
mov ecx [edi] +
mov [ecx+4] eax +
mov esi [edi] +
mov eax [ebx+4] +
mov [edi+4] eax +
mov edx [esi+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_402889  +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40285C  +
mov eax [ecx] +
mov edx ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_402850  +
mov [esi] edx +
mov edx [edi] +
mov ecx [edx+4] +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40287B  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_402870  +
pop esi  +
mov eax edi +
mov [edx+8] ecx +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov [esi] esi +
mov eax [edi] +
pop esi  +
mov [eax+8] eax +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ecx+4] +
cmp edx [ecx+8] +
jz loc_4028E7  +
mov eax [ebp+arg_0] +
mov dword ptr [edx+10h] 0 +
mov dword ptr [edx+14h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [edx] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [edx+10h] xmm0 +
xor edx edx +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] dx +
add dword ptr [ecx+4] 18h +
pop ebp  +
retn 4  +
push [ebp+arg_0]  +
push edx  +
call loc_402D80  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_402965  +
mov edx [esi+4] +
push ecx  +
call loc_402E90  +
mov eax [esi+8] +
add esp 4 +
mov ecx [esi] +
sub eax ecx +
sar eax 3 +
imul eax eax +
lea edx [eax+eax*2] +
shl edx 3 +
cmp edx 1000h +
jb loc_402947  +
push edi  +
mov edi [ecx-4] +
add edx 23h +
sub ecx edi +
lea eax [ecx-4] +
cmp eax 1Fh +
ja loc_402967  +
mov ecx edi +
pop edi  +
push edx  +
push ecx  +
call sub_41B8B8  +
mov dword ptr [esi] 0 +
add esp 8 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
call sub_42071A  +
push esi  +
mov esi ecx +
mov edx 1 +
mov eax esi +
mov ecx [esi+10h] +
cmp ecx edx +
cmovb edx ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_40298D  +
mov eax [esi] +
sub ecx edx +
mov [esi+10h] ecx +
lea ecx ds:2[ecx*2] +
push ecx  +
lea ecx [eax+edx*2] +
push ecx  +
push eax  +
call loc_41D790  +
add esp 0Ch +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_4029E8  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4029DE  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4029FD  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
pop esi  +
retn   +
***
call sub_42071A  +
mov edx [ebp+arg_0] +
xor eax eax +
push esi  +
mov esi ecx +
mov ecx edx +
push edi  +
mov dword ptr [esi+10h] 0 +
lea edi [ecx+2] +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402A32  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_402B00  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [edi+14h] 8 +
mov eax [edi+10h] +
mov [ebp+var_4] eax +
jb loc_402A88  +
mov edi [edi] +
cmp eax 8 +
jnb loc_402AA9  +
movups xmm0 oword ptr [edi] +
mov ebx 7 +
pop edi  +
movups oword ptr [esi] xmm0 +
mov [esi+10h] eax +
mov eax esi +
mov [esi+14h] ebx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ebx eax +
mov eax 7FFFFFFEh +
or ebx 7 +
cmp ebx eax +
cmova ebx eax +
lea eax [ebx+1] +
push eax  +
call loc_402C90  +
mov ecx eax +
mov eax [ebp+var_4] +
mov [esi] ecx +
lea eax ds:2[eax*2] +
push eax  +
push edi  +
push ecx  +
call loc_41D210  +
mov eax [ebp+var_4] +
add esp 0Ch +
mov [esi+10h] eax +
mov eax esi +
mov [esi+14h] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+0Ch] +
mov edx [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp-0Ch] edx +
mov [ebp-8] eax +
mov ebx [edi+14h] +
cmp eax ebx +
ja loc_402B50  +
mov [ebp-4] edi +
cmp ebx 8 +
jb loc_402B2B  +
mov ecx [edi] +
mov [ebp-4] ecx +
lea esi [eax+eax] +
mov [edi+10h] eax +
push esi  +
push edx  +
push ecx  +
call loc_41D790  +
mov eax [ebp-4] +
add esp 0Ch +
xor ecx ecx +
mov [esi+eax] cx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp eax 7FFFFFFEh +
ja loc_402C0F  +
mov esi eax +
or esi 7 +
cmp esi 7FFFFFFEh +
jbe loc_402B6F  +
mov esi 7FFFFFFEh +
jmp loc_402B8D  +
mov ecx ebx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp ebx eax +
jbe loc_402B85  +
mov esi 7FFFFFFEh +
jmp loc_402B8D  +
lea eax [ecx+ebx] +
cmp esi eax +
cmovb esi eax +
xor ecx ecx +
mov eax esi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx edi +
call loc_402C90  +
mov ecx [ebp-8] +
mov [edi+14h] esi +
mov [ebp-4] eax +
mov [edi+10h] ecx +
lea esi [ecx+ecx] +
push esi  +
push dword ptr [ebp-0Ch]  +
push eax  +
call loc_41D210  +
mov eax [ebp-4] +
xor ecx ecx +
add esp 0Ch +
mov [esi+eax] cx +
cmp ebx 8 +
jb loc_402BFD  +
mov eax [edi] +
lea ebx ds:2[ebx*2] +
cmp ebx 1000h +
jb loc_402BF0  +
mov ecx [eax-4] +
add ebx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402C0A  +
mov eax ecx +
push ebx  +
push eax  +
call sub_41B8B8  +
mov eax [ebp-4] +
add esp 8 +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_42071A  +
call loc_403250  +
mov edx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+arg_0] +
call loc_402E90  +
add esp 4 +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
lea edx [eax+eax*2] +
shl edx 3 +
cmp edx 1000h +
jb loc_402C6B  +
push esi  +
mov esi [ecx-4] +
add edx 23h +
sub ecx esi +
lea eax [ecx-4] +
cmp eax 1Fh +
ja loc_402C79  +
mov ecx esi +
pop esi  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
pop ebp  +
retn 8  +
***
call sub_42071A  +
push offset aInvalidStringP  +
call sub_41A1EA  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 7FFFFFFFh +
ja loc_402CE0  +
add eax eax +
cmp eax 1000h +
jb loc_402CC9  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_402CE0  +
push ecx  +
call sub_41B637  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_402CE5  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
test eax eax +
jz loc_402CDA  +
push eax  +
call sub_41B637  +
add esp 4 +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
call loc_401220  +
call sub_42071A  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
lea edx [eax+eax] +
cmp edx 1000h +
jb loc_402D18  +
push esi  +
mov esi [ecx-4] +
add edx 23h +
sub ecx esi +
lea eax [ecx-4] +
cmp eax 1Fh +
ja loc_402D26  +
mov ecx esi +
pop esi  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
pop ebp  +
retn 8  +
***
call sub_42071A  +
push esi  +
mov esi edx +
push edi  +
lea edi [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_402D37  +
sub esi edi +
mov edi ecx +
sar esi 1 +
cmp dword ptr [ecx+14h] 8 +
jb loc_402D50  +
mov edi [ecx] +
mov ecx [ecx+10h] +
cmp ecx esi +
jnz loc_402D76  +
test ecx ecx +
jz loc_402D71  +
sub edi edx +
mov ax [edi+edx] +
cmp ax [edx] +
jnz loc_402D76  +
add edx 2 +
sub ecx 1 +
jnz loc_402D60  +
pop edi  +
mov al 1 +
pop esi  +
retn   +
***
pop edi  +
xor al al +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov edx [ebp+8] +
mov eax 2AAAAAABh +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov ecx [ebx] +
sub edx ecx +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-4] eax +
mov eax [ebx+4] +
sub eax ecx +
sar eax 3 +
imul edi eax +
cmp edi 0AAAAAAAh +
jz loc_402E7C  +
mov eax [ebx+8] +
inc edi  +
sub eax ecx +
sar eax 3 +
imul edx eax +
mov eax 0AAAAAAAh +
mov ecx edx +
shr ecx 1 +
sub eax ecx +
cmp edx eax +
jbe loc_402DE2  +
mov esi edi +
jmp loc_402DEA  +
lea esi [ecx+edx] +
cmp esi edi +
cmovb esi edi +
push esi  +
call loc_4031F0  +
mov ecx [ebp-4] +
mov [ebp-8] eax +
lea ecx [ecx+ecx*2] +
lea edx [eax+ecx*8] +
mov ecx [ebp+0Ch] +
mov dword ptr [edx+10h] 0 +
mov dword ptr [edx+14h] 0 +
mov [ebp-4] edx +
movups xmm0 oword ptr [ecx] +
movups oword ptr [edx] xmm0 +
movq xmm0 qword ptr [ecx+10h] +
movq qword ptr [edx+10h] xmm0 +
xor edx edx +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] dx +
mov ecx [ebp+8] +
mov edx [ebx+4] +
push ecx  +
push eax  +
cmp ecx edx +
jnz loc_402E43  +
mov ecx [ebx] +
jmp loc_402E5C  +
mov edx ecx +
mov ecx [ebx] +
call sub_403430  +
mov eax [ebp-4] +
add esp 4 +
mov edx [ebx+4] +
add eax 18h +
mov ecx [ebp+8] +
push eax  +
call sub_403430  +
add esp 8 +
mov ecx ebx +
push esi  +
push edi  +
push dword ptr [ebp-8]  +
call loc_403170  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_403160  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi edx +
mov esi ecx +
cmp esi edi +
jz loc_402EEF  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_402ED5  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_402ECB  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402EF3  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
add esi 18h +
cmp esi edi +
jnz loc_402EA0  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
call sub_42071A  +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
mov [ebp+var_4] eax +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_402F44  +
push edi  +
push dword ptr [esi+8]  +
mov ecx ebx +
push eax  +
call sub_402F00  +
mov edi esi +
mov esi [esi] +
lea ecx [edi+10h] +
call loc_403490  +
push 40h  +
push edi  +
call sub_41B8B8  +
mov eax [ebp+var_4] +
add esp 8 +
cmp byte ptr [esi+0Dh] 0 +
jz loc_402F18  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 8 +
mov edx [ebp+arg_0] +
mov eax ecx +
mov [ebp+var_4] eax +
mov ecx [eax] +
inc dword ptr [eax+4]  +
mov eax [ebp+arg_8] +
mov [ebp+var_8] ecx +
mov [eax+4] edx +
cmp edx ecx +
jnz loc_402F82  +
mov [ecx] eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov byte ptr [eax+0Ch] 1 +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp [ebp+arg_4] 0 +
jnz loc_402F95  +
mov [edx+8] eax +
cmp edx [ecx+8] +
jnz loc_402F9D  +
mov [ecx+8] eax +
jmp loc_402F9D  +
mov [edx] eax +
cmp edx [ecx] +
jnz loc_402F9D  +
mov [ecx] eax +
mov edx eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_403145  +
push ebx  +
push esi  +
push edi  +
nop   +
mov ecx [edx+4] +
lea edi [edx+4] +
mov esi [ecx+4] +
lea ebx [ecx+4] +
mov eax [esi] +
cmp ecx eax +
jnz loc_403080  +
mov eax [esi+8] +
cmp byte ptr [eax+0Ch] 0 +
jz loc_403086  +
mov esi [ecx+8] +
cmp edx esi +
jnz loc_403021  +
mov eax [esi] +
mov edx ecx +
mov [edx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_402FEC  +
mov [eax+4] edx +
mov eax [ebx] +
mov [esi+4] eax +
mov eax [ebp+var_4] +
mov eax [eax] +
cmp edx [eax+4] +
jnz loc_403006  +
mov [eax+4] esi +
mov edi ebx +
mov [esi] edx +
mov [ebx] esi +
jmp loc_403023  +
mov eax [ebx] +
cmp edx [eax] +
jnz loc_403016  +
mov [eax] esi +
mov edi ebx +
mov [esi] edx +
mov [ebx] esi +
jmp loc_403023  +
mov [eax+8] esi +
mov edi ebx +
mov [esi] edx +
mov [ebx] esi +
jmp loc_403023  +
mov esi ecx +
mov byte ptr [esi+0Ch] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [edi] +
mov ecx [eax+4] +
mov esi [ecx] +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403048  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp+var_4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_403063  +
mov [eax+4] esi +
mov [esi+8] ecx +
jmp loc_40312F  +
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_403076  +
mov [eax+8] esi +
mov [esi+8] ecx +
jmp loc_40312F  +
mov [eax] esi +
mov [esi+8] ecx +
jmp loc_40312F  +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_4030A1  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [eax+0Ch] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [edi] +
mov edx [eax+4] +
jmp loc_403132  +
mov eax [ecx] +
cmp edx eax +
jnz loc_4030E5  +
mov edx ecx +
mov ecx eax +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4030BC  +
mov [eax+4] edx +
mov eax [ebx] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov eax [eax] +
cmp edx [eax+4] +
jnz loc_4030D0  +
mov [eax+4] ecx +
jmp loc_4030DE  +
mov eax [ebx] +
cmp edx [eax+8] +
jnz loc_4030DC  +
mov [eax+8] ecx +
jmp loc_4030DE  +
mov [eax] ecx +
mov [ecx+8] edx +
mov edi ebx +
mov [ebx] ecx +
mov byte ptr [ecx+0Ch] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [edi] +
mov ecx [eax+4] +
mov esi [ecx+8] +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40310A  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp+var_4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_40311F  +
mov [eax+4] esi +
jmp loc_40312D  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_40312A  +
mov [eax] esi +
jmp loc_40312D  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov eax [edx+4] +
cmp byte ptr [eax+0Ch] 0 +
jz loc_402FB0  +
mov ecx [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ecx+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+arg_8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push offset aVectorTTooLong  +
call sub_41A1CA  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_4031C4  +
mov edx [esi+4] +
push ecx  +
call loc_402E90  +
mov eax [esi+8] +
add esp 4 +
mov ecx [esi] +
sub eax ecx +
sar eax 3 +
imul eax eax +
lea edx [eax+eax*2] +
shl edx 3 +
cmp edx 1000h +
jb loc_4031BA  +
push edi  +
mov edi [ecx-4] +
add edx 23h +
sub ecx edi +
lea eax [ecx-4] +
cmp eax 1Fh +
ja loc_4031E6  +
mov ecx edi +
pop edi  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp+8] +
mov eax [ebp+0Ch] +
mov [esi] ecx +
lea eax [eax+eax*2] +
lea eax [ecx+eax*8] +
mov [esi+4] eax +
mov eax [ebp+10h] +
lea eax [eax+eax*2] +
lea eax [ecx+eax*8] +
mov [esi+8] eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 0AAAAAAAh +
ja loc_403244  +
lea eax [eax+eax*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_40322D  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_403244  +
push ecx  +
call sub_41B637  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_403249  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
test eax eax +
jz loc_40323E  +
push eax  +
call sub_41B637  +
add esp 4 +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
call loc_401220  +
call sub_42071A  +
push offset aStringTooLong  +
call sub_41A1CA  +
mov eax [ecx+4] +
test eax eax +
jz locret_403272  +
push 40h  +
push eax  +
call sub_41B8B8  +
add esp 8 +
retn   +
***
mov eax [ecx] +
sub esp 8 +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi [ebp+arg_0] +
cmp byte ptr [esi+0Dh] 0 +
mov [edi] esi +
mov dword ptr [edi+4] 0 +
mov [edi+8] eax +
jnz loc_4032FA  +
push ebx  +
mov ebx [ebp+arg_4] +
mov ecx [ebx+14h] +
mov eax [ebx+10h] +
mov [ebp+var_8] ecx +
mov [ebp+var_4] eax +
mov [edi] esi +
mov eax ebx +
cmp ecx 8 +
jb loc_4032BD  +
mov eax [ebx] +
cmp dword ptr [esi+24h] 8 +
lea ecx [esi+10h] +
jb loc_4032C9  +
mov ecx [esi+10h] +
push [ebp+var_4]  +
mov edx [esi+20h] +
push eax  +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_4032E3  +
mov esi [esi+8] +
xor eax eax +
jmp loc_4032ED  +
mov [edi+8] esi +
mov eax 1 +
mov esi [esi] +
mov ecx [ebp+var_8] +
mov [edi+4] eax +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4032B2  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43FD30  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_20] ecx +
mov edx [ebp+arg_0] +
mov al [ebp+arg_8] +
mov byte ptr [ebp+var_1C] al +
mov eax [ecx] +
cmp byte ptr [edx+0Dh] 0 +
mov [ebp+var_24] ecx +
mov [ebp+var_18] edx +
mov [ebp+var_14] eax +
jnz loc_4033F4  +
lea edi [edx+10h] +
mov [ebp+var_2C] ecx +
mov [ebp+var_4] 0 +
push 40h  +
mov [ebp+var_28] 0 +
call sub_41B637  +
mov ebx eax +
add esp 4 +
mov [ebp+var_28] ebx +
lea esi [ebx+10h] +
push edi  +
mov ecx esi +
mov [ebp+var_30] esi +
call sub_402A60  +
lea eax [edi+18h] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea ecx [esi+18h] +
call sub_402A60  +
mov ecx [ebp+var_14] +
mov edi [ebp+var_18] +
mov eax [ebp+arg_4] +
mov esi [ebp+var_20] +
mov [ebx] ecx +
mov [ebx+8] ecx +
mov word ptr [ebx+0Ch] 0 +
mov [ebx+4] eax +
mov al [edi+0Ch] +
mov [ebx+0Ch] al +
cmp byte ptr [ecx+0Dh] 0 +
mov [ebp+var_4] 2 +
push [ebp+var_1C]  +
cmovnz ecx ebx +
push ebx  +
push dword ptr [edi]  +
mov [ebp+var_14] ecx +
mov [ebp+var_18] ecx +
mov ecx esi +
call sub_403310  +
push [ebp+var_1C]  +
mov [ebx] eax +
mov ecx esi +
push ebx  +
push dword ptr [edi+8]  +
call sub_403310  +
mov [ebx+8] eax +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
cmp ecx edx +
jz loc_40347D  +
mov eax esi +
sub eax ecx +
push edi  +
mov dword ptr [esi+10h] 0 +
xor edi edi +
mov dword ptr [eax+ecx+14h] 0 +
movups xmm0 oword ptr [ecx] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ecx+10h] +
movq qword ptr [esi+10h] xmm0 +
add esi 18h +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] di +
add ecx 18h +
cmp ecx edx +
jnz loc_403440  +
pop edi  +
push ecx  +
mov edx esi +
mov ecx esi +
call loc_402E90  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+2Ch] +
cmp ecx 8 +
jb loc_4034C9  +
mov eax [esi+18h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4034BF  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403527  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 7 +
mov [esi+18h] ax +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_403512  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_403508  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403527  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
pop esi  +
retn   +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov ebx edx +
mov edi ecx +
mov ecx [ebp+0Ch] +
mov esi ebx +
cmp ecx ebx +
cmovb esi ecx +
test esi esi +
jz loc_403567  +
sub edi eax +
movzx ecx word ptr [edi+eax] +
movzx edx word ptr [eax] +
cmp cx dx +
jnz loc_403573  +
add eax 2 +
sub esi 1 +
jnz loc_403550  +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jbe loc_40357E  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn   +
***
sbb eax eax +
pop edi  +
and eax 0FFFFFFFEh +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn   +
***
pop edi  +
sbb eax eax +
pop esi  +
neg eax  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43FD5C  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_45A014 +
cmp eax [ecx+4] +
jg loc_4035DC  +
mov eax offset dword_45A018 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_45A014  +
call sub_41BCAA  +
add esp 4 +
cmp dword_45A014 0FFFFFFFFh +
jnz loc_4035C8  +
push 34h  +
mov [ebp+var_4] 0 +
call sub_41B637  +
push offset loc_4413C0  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov dword_45A018 eax +
call sub_41B8A3  +
push offset dword_45A014  +
call sub_41BC60  +
add esp 0Ch +
jmp loc_4035C8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FD88  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+8] +
mov [ebp-20h] edi +
test edi edi +
jnz loc_40366E  +
xor al al +
jmp loc_40380E  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov [ebp-21h] al +
test al al +
jz loc_40380B  +
lea eax [edi+4] +
mov ecx ebx +
push eax  +
lea eax [ebp-28h] +
push eax  +
call sub_403DC0  +
mov eax [eax] +
cmp eax [ebx] +
jnz loc_4037C1  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-14h] 0 +
movq qword ptr [ebp-1Ch] xmm0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
lea eax [ebp-20h] +
mov dword ptr [ebp-4] 0 +
push eax  +
push 0  +
lea ecx [ebp-1Ch] +
call loc_403E30  +
lea eax [edi+4] +
mov ecx ebx +
push eax  +
call sub_403CC0  +
mov edi eax +
lea eax [ebp-1Ch] +
cmp edi eax +
jz loc_4037B7  +
mov eax [ebp-18h] +
sub eax [ebp-1Ch] +
mov ecx [edi+8] +
mov ebx eax +
mov esi [edi] +
sub ecx esi +
sar ebx 2 +
sar ecx 2 +
mov [ebp-20h] eax +
cmp ebx ecx +
jbe loc_4037A2  +
cmp ebx 3FFFFFFFh +
ja loc_40382C  +
mov edx ecx +
mov eax 3FFFFFFFh +
shr edx 1 +
sub eax edx +
cmp ecx eax +
ja loc_403749  +
lea eax [ecx+edx] +
cmp eax ebx +
cmovb eax ebx +
mov ebx eax +
test esi esi +
jz loc_40378C  +
shl ecx 2 +
cmp ecx 1000h +
jb loc_40376E  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_403831  +
mov esi edx +
push ecx  +
push esi  +
call sub_41B8B8  +
mov dword ptr [edi] 0 +
add esp 8 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
push ebx  +
call loc_403F40  +
mov esi eax +
mov eax [ebp-20h] +
mov [edi] esi +
mov [edi+4] esi +
lea ecx [esi+ebx*4] +
mov [edi+8] ecx +
push eax  +
push dword ptr [ebp-1Ch]  +
push esi  +
call loc_41D790  +
mov eax [ebp-20h] +
add esp 0Ch +
add eax esi +
mov [edi+4] eax +
lea ecx [ebp-1Ch] +
call loc_403C60  +
jmp loc_40380B  +
mov ecx [eax+2Ch] +
lea ebx [eax+28h] +
mov eax [ebx] +
cmp eax ecx +
jz loc_4037DB  +
cmp edi [eax] +
jz loc_40380B  +
add eax 4 +
cmp eax ecx +
jnz loc_4037D0  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
mov eax [ebx+4] +
cmp eax [ebx+8] +
jz loc_4037FF  +
mov [eax] edi +
add dword ptr [ebx+4] 4 +
jmp loc_40380B  +
lea ecx [ebp-20h] +
push ecx  +
push eax  +
mov ecx ebx +
call loc_403E30  +
mov al [ebp-21h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_403160  +
call sub_42071A  +
sub esp 18h +
push edi  +
mov edi [ebp+arg_0] +
mov eax ecx +
mov [ebp+var_8] eax +
test edi edi +
jnz loc_40385C  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
push ebx  +
push esi  +
lea esi [edi+4] +
mov [ebp+var_1] 0 +
push esi  +
lea ecx [ebp+var_18] +
push ecx  +
mov ecx eax +
call sub_403280  +
mov ebx [ebp+var_10] +
mov [ebp+var_C] ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_4038AD  +
cmp dword ptr [ebx+24h] 8 +
lea edx [ebx+10h] +
jb loc_403889  +
mov edx [ebx+10h] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_403893  +
mov ecx [esi] +
push dword ptr [ebx+20h]  +
push edx  +
mov edx [esi+10h] +
call loc_403530  +
add esp 8 +
test eax eax +
js loc_4038AD  +
mov eax [ebp+var_8] +
mov eax [eax] +
jmp loc_4038B7  +
mov eax [ebp+var_8] +
mov ebx [eax] +
mov eax ebx +
mov [ebp+var_C] ebx +
cmp ebx eax +
jnz loc_4038C6  +
pop esi  +
pop ebx  +
mov al 1 +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov esi [ebx+28h] +
mov eax [ebx+2Ch] +
cmp esi eax +
jz loc_4039C5  +
mov ebx [esi] +
cmp edi ebx +
jz loc_4038ED  +
add esi 4 +
cmp esi eax +
jnz loc_4038D4  +
mov al [ebp+var_1] +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
lea edi [ebx+74h] +
push edi  +
call ds:EnterCriticalSection  +
dec dword ptr [ebx+70h]  +
push edi  +
call ds:LeaveCriticalSection  +
mov edi [esi] +
mov [ebp+var_1] 1 +
cmp dword ptr [edi+70h] 0 +
jnz loc_403980  +
mov eax [edi] +
mov ebx [eax+0Ch] +
cmp eax offset off_452548 +
jnz loc_4039D1  +
mov eax [edi+68h] +
test eax eax +
jz loc_403937  +
cmp eax 0FFFFFFFFh +
jz loc_403937  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [edi+68h] 0 +
mov eax [edi+90h] +
test eax eax +
jz loc_403978  +
mov ecx [eax] +
test ecx ecx +
jz loc_403959  +
cmp ecx 0FFFFFFFFh +
jz loc_403959  +
push ecx  +
call ds:CloseHandle  +
mov eax [edi+90h] +
test eax eax +
jz loc_40396E  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [edi+90h] 0 +
mov byte ptr [edi+6Dh] 0 +
mov [ebp+var_1] 1 +
mov edi [ebp+var_C] +
lea edx [esi+4] +
mov ecx [edi+2Ch] +
sub ecx edx +
push ecx  +
push edx  +
push esi  +
call loc_41D790  +
add dword ptr [edi+2Ch] 0FFFFFFFCh +
add esp 0Ch +
mov eax [edi+2Ch] +
sub eax [edi+28h] +
test eax 0FFFFFFFCh +
jnz loc_4039C5  +
mov ecx [ebp+var_8] +
push edi  +
call loc_404020  +
mov esi eax +
lea ecx [esi+10h] +
call loc_4043F0  +
push 34h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov al [ebp+var_1] +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx ebx +
call ds:off_442218  +
mov ecx edi +
call ebx  +
mov [ebp+var_1] al +
jmp loc_403980  +
***
sub esp 4Ch +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_20] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_14] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_24] +
mov [ebp+var_8] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
test edx edx +
jz loc_403B06  +
mov ecx edx +
mov [ebp+var_2C] 0 +
xor eax eax +
mov [ebp+var_28] 7 +
mov word ptr [ebp+var_3C] ax +
lea edi [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_403A50  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp+var_3C] +
call loc_402B00  +
lea eax [ebp+var_3C] +
mov ecx esi +
push eax  +
lea eax [ebp+var_48] +
push eax  +
call sub_403280  +
mov ebx [ebp+var_40] +
mov [ebp+var_4] ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_403AAE  +
cmp dword ptr [ebx+24h] 8 +
lea edx [ebx+10h] +
jb loc_403A90  +
mov edx [ebx+10h] +
push dword ptr [ebx+20h]  +
cmp [ebp+var_28] 8 +
lea ecx [ebp+var_3C] +
push edx  +
cmovnb ecx [ebp+var_3C] +
mov edx [ebp+var_2C] +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_403AB3  +
mov ebx [esi] +
mov [ebp+var_4] ebx +
lea ecx [ebp+var_3C] +
call loc_4029B0  +
cmp ebx [esi] +
jz loc_403B06  +
mov esi [ebx+28h] +
cmp esi [ebx+2Ch] +
jz loc_403B06  +
mov ebx [esi] +
push 1  +
push 0  +
push 0  +
push [ebp+var_8]  +
mov edi [ebx] +
push [ebp+var_C]  +
push [ebp+var_10]  +
mov edi [edi+14h] +
mov ecx edi +
push [ebp+var_14]  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
push [ebp+var_24]  +
push [ebp+arg_4]  +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov eax [ebp+var_4] +
add esi 4 +
cmp esi [eax+2Ch] +
jnz loc_403AC7  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax [ebp+10h] +
mov edx [ebp+8] +
mov [esp+24h] eax +
mov eax [ebp+14h] +
mov [esp+20h] eax +
mov eax [ebp+18h] +
mov [esp+1Ch] eax +
mov eax [ebp+1Ch] +
mov [esp+18h] eax +
mov eax [ebp+20h] +
mov [esp+14h] eax +
mov eax [ebp+24h] +
mov [esp+10h] eax +
mov eax [ebp+28h] +
mov [esp+0Ch] eax +
mov eax [ebp+2Ch] +
mov [esp+8] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
test edx edx +
jz loc_403C4A  +
mov ecx edx +
mov dword ptr [esp+44h] 0 +
xor eax eax +
mov dword ptr [esp+48h] 7 +
mov [esp+34h] ax +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_403B80  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [esp+3Ch] +
call loc_402B00  +
lea eax [esp+34h] +
mov ecx esi +
push eax  +
lea eax [esp+50h] +
push eax  +
call sub_403280  +
mov ebx [esp+54h] +
mov [esp+10h] ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_403BE7  +
cmp dword ptr [ebx+24h] 8 +
lea edx [ebx+10h] +
jb loc_403BC5  +
mov edx [ebx+10h] +
push dword ptr [ebx+20h]  +
cmp dword ptr [esp+4Ch] 8 +
lea ecx [esp+38h] +
push edx  +
cmovnb ecx [esp+3Ch] +
mov edx [esp+4Ch] +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_403BED  +
mov ebx [esi] +
mov [esp+10h] ebx +
lea ecx [esp+34h] +
call loc_4029B0  +
cmp ebx [esi] +
jz loc_403C4A  +
mov esi [ebx+28h] +
cmp esi [ebx+2Ch] +
jz loc_403C4A  +
mov ebx [esi] +
push 1  +
push 0  +
push 0  +
push dword ptr [esp+20h]  +
mov edi [ebx] +
push dword ptr [esp+28h]  +
push dword ptr [esp+30h]  +
mov edi [edi+10h] +
mov ecx edi +
push dword ptr [esp+38h]  +
push dword ptr [esp+40h]  +
push dword ptr [esp+48h]  +
push dword ptr [esp+50h]  +
push dword ptr [esp+58h]  +
push dword ptr [ebp+0Ch]  +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov eax [esp+10h] +
add esi 4 +
cmp esi [eax+2Ch] +
jnz loc_403C02  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_403CA9  +
mov ecx [esi+8] +
sub ecx eax +
and ecx 0FFFFFFFCh +
cmp ecx 1000h +
jb loc_403C8B  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403CAB  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
mov dword ptr [esi] 0 +
add esp 8 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
call sub_42071A  +
push 0FFFFFFFFh  +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
lea eax [ebp+var_C] +
push edi  +
push esi  +
push eax  +
mov ebx ecx +
call sub_403280  +
mov edi [ebp+var_4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_403E18  +
cmp dword ptr [edi+24h] 8 +
lea edx [edi+10h] +
jb loc_403DED  +
mov edx [edi+10h] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_403DF7  +
mov ecx [esi] +
push dword ptr [edi+20h]  +
push edx  +
mov edx [esi+10h] +
call loc_403530  +
add esp 8 +
test eax eax +
js loc_403E18  +
mov eax [ebp+arg_0] +
mov [eax] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov ecx [ebx] +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov [ebp-0Ch] ebx +
push edi  +
mov edx [esi] +
sub ebx edx +
mov eax [esi+4] +
sub eax edx +
sar ebx 2 +
sar eax 2 +
cmp eax 3FFFFFFFh +
jz loc_403F35  +
mov ecx [esi+8] +
lea edi [eax+1] +
sub ecx edx +
mov [ebp-10h] edi +
sar ecx 2 +
mov eax 3FFFFFFFh +
mov edx ecx +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_403E7F  +
mov eax edi +
mov [ebp-8] edi +
jmp loc_403E8A  +
lea eax [edx+ecx] +
cmp eax edi +
cmovb eax edi +
mov [ebp-8] eax +
push eax  +
call loc_403F40  +
mov ecx [ebp+0Ch] +
mov edi eax +
lea eax [edi+ebx*4] +
mov ebx [ebp-0Ch] +
mov [ebp-4] eax +
mov ecx [ecx] +
mov [eax] ecx +
mov eax [esi+4] +
mov ecx [esi] +
cmp ebx eax +
jnz loc_403EBD  +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call loc_41D790  +
mov ebx [ebp-4] +
add esp 0Ch +
jmp loc_403EDF  +
mov eax ebx +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call loc_41D790  +
mov eax [esi+4] +
sub eax ebx +
push eax  +
push ebx  +
mov ebx [ebp-4] +
lea eax [ebx+4] +
push eax  +
call loc_41D790  +
add esp 18h +
mov eax [esi] +
test eax eax +
jz loc_403F11  +
mov ecx [esi+8] +
sub ecx eax +
and ecx 0FFFFFFFCh +
cmp ecx 1000h +
jb loc_403F07  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403F30  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-10h] +
mov eax ebx +
mov [esi] edi +
lea ecx [edi+ecx*4] +
mov [esi+4] ecx +
mov ecx [ebp-8] +
lea ecx [edi+ecx*4] +
pop edi  +
mov [esi+8] ecx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_42071A  +
call loc_403160  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 3FFFFFFFh +
ja loc_403F91  +
shl eax 2 +
cmp eax 1000h +
jb loc_403F7A  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_403F91  +
push ecx  +
call sub_41B637  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_403F96  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
test eax eax +
jz loc_403F8B  +
push eax  +
call sub_41B637  +
add esp 4 +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
call loc_401220  +
call sub_42071A  +
mov eax [ecx+4] +
test eax eax +
jz locret_403FB2  +
push 34h  +
push eax  +
call sub_41B8B8  +
add esp 8 +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
mov edx [esi] +
mov edi [edx+8] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_403FF1  +
mov eax [edx+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403FEA  +
cmp edx [eax+8] +
jnz loc_403FEA  +
mov [esi] eax +
mov edx eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403FD8  +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
mov ecx [edi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40400C  +
mov eax [ecx] +
mov edi ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_404000  +
mov [esi] edi +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov ebx ecx +
mov [ebp-4] eax +
push edi  +
lea ecx [ebp+8] +
call loc_403FC0  +
mov edx [ebp-4] +
mov eax [edx] +
mov edi [edx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40405F  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_404051  +
mov edi eax +
jmp loc_40405F  +
mov ecx [ebp+8] +
mov edi [ecx+8] +
cmp ecx edx +
jnz loc_4040EA  +
cmp byte ptr [edi+0Dh] 0 +
mov esi [edx+4] +
jnz loc_40406B  +
mov [edi+4] esi +
mov eax [ebx] +
cmp [eax+4] edx +
jnz loc_404077  +
mov [eax+4] edi +
jmp loc_404082  +
cmp [esi] edx +
jnz loc_40407F  +
mov [esi] edi +
jmp loc_404082  +
mov [esi+8] edi +
mov eax [ebx] +
cmp [eax] edx +
jnz loc_4040B3  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_404092  +
mov edx esi +
jmp loc_4040AE  +
mov ecx [edi] +
mov edx edi +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4040AE  +
mov eax [ecx] +
mov edx ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4040A0  +
mov eax [ebx] +
mov [eax] edx +
mov edx [ebp-4] +
mov eax [ebx] +
cmp [eax+8] edx +
jnz loc_4040E5  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_4040CA  +
mov ecx esi +
mov [eax+8] ecx +
mov dl [edx+0Ch] +
jmp loc_404146  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4040E0  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4040D5  +
mov eax [ebx] +
mov [eax+8] ecx +
mov dl [edx+0Ch] +
jmp loc_404146  +
mov [eax+4] ecx +
mov eax [edx] +
mov [ecx] eax +
cmp ecx [edx+8] +
jnz loc_4040FA  +
mov esi ecx +
jmp loc_404114  +
cmp byte ptr [edi+0Dh] 0 +
mov esi [ecx+4] +
jnz loc_404106  +
mov [edi+4] esi +
mov [esi] edi +
mov eax [edx+8] +
mov [ecx+8] eax +
mov eax [edx+8] +
mov [eax+4] ecx +
mov eax [ebx] +
cmp [eax+4] edx +
jnz loc_404120  +
mov [eax+4] ecx +
jmp loc_40412E  +
mov eax [edx+4] +
cmp [eax] edx +
jnz loc_40412B  +
mov [eax] ecx +
jmp loc_40412E  +
mov [eax+8] ecx +
mov eax [edx+4] +
mov dl [ecx+0Ch] +
mov [ecx+4] eax +
mov eax [ebp-4] +
mov al [eax+0Ch] +
mov [ecx+0Ch] al +
mov eax [ebp-4] +
mov [eax+0Ch] dl +
cmp dl 1 +
jnz loc_404295  +
mov eax [ebx] +
cmp edi [eax+4] +
jz loc_404291  +
mov byte ptr [edi+0Ch] 1 +
mov ecx [ebx+4] +
mov eax [ebp-4] +
test ecx ecx +
jz loc_4042A3  +
dec ecx  +
mov [ebx+4] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi [edx] +
mov eax [esi+8] +
mov [edx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4042FA  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [ecx] +
cmp edx [eax+4] +
jnz loc_404315  +
mov [eax+4] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_40432B  +
mov [eax+8] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
mov [eax] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi [edx+8] +
mov eax [esi] +
mov [edx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40435A  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [ecx] +
cmp edx [eax+4] +
jnz loc_404374  +
mov [eax+4] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_404387  +
mov [eax] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
mov [eax+8] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
mov [ebp+var_4] eax +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4043E4  +
push edi  +
push dword ptr [esi+8]  +
mov ecx ebx +
push eax  +
call sub_4043A0  +
mov edi esi +
mov esi [esi] +
lea ecx [edi+10h] +
call loc_4043F0  +
push 34h  +
push edi  +
call sub_41B8B8  +
mov eax [ebp+var_4] +
add esp 8 +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4043B8  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov eax [esi+18h] +
test eax eax +
jz loc_40443B  +
mov ecx [esi+20h] +
sub ecx eax +
and ecx 0FFFFFFFCh +
cmp ecx 1000h +
jb loc_40441C  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404485  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
mov dword ptr [esi+18h] 0 +
add esp 8 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_404470  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_404466  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404485  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
pop esi  +
retn   +
***
call sub_42071A  +
retn   +
***
and esp 0FFFFFFF8h +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_0]  +
push edx  +
push ecx  +
call sub_404490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_423144  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_C] +
mov edx [ebp+arg_4] +
push eax  +
push ecx  +
push [ebp+arg_8]  +
call sub_4044A0  +
add esp 0Ch +
pop ecx  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_404490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_4230FC  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_C] +
push ecx  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_4044F0  +
add esp 14h +
pop ecx  +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_C] +
push esi  +
mov esi ecx +
mov [ebp+var_C] edx +
lea ecx [esi+4] +
mov [ebp+var_8] 1 +
push ecx  +
xorps xmm0 xmm0 +
mov dword ptr [esi] offset off_442724 +
push eax  +
movq qword ptr [ecx] xmm0 +
call sub_41CC7C  +
mov ecx [ebp+var_4] +
add esp 8 +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_442724 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41CC7C  +
add esp 8 +
mov dword ptr [esi] offset off_442770 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [eax] edx +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
sub esp 8 +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
mov edi [eax+0Ch] +
cmp edi offset sub_4045E0 +
jnz loc_40464E  +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
lea eax [ebp+var_8] +
mov [ebp+var_4] esi +
mov esi [ebp+arg_4] +
mov ecx [eax+4] +
mov edx [esi+4] +
mov ecx [ecx+4] +
cmp ecx [edx+4] +
jnz loc_404644  +
mov eax [eax] +
cmp eax [esi] +
jnz loc_404644  +
pop edi  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
mov ecx edi +
push eax  +
call ds:off_442218  +
mov ecx esi +
call edi  +
jmp loc_404623  +
***
mov eax [ecx+4] +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi+4] +
cmp eax [edx+4] +
jnz loc_404690  +
mov eax [esi] +
cmp eax [ebp+arg_4] +
jnz loc_404690  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
push offset unk_459FE0  +
push offset sub_40CEE0  +
push offset unk_459FD4  +
mov esi ecx +
call sub_41A457  +
add esp 0Ch +
test eax eax +
jz loc_4046CF  +
mov dword ptr [esi] 1 +
mov eax esi +
mov dword ptr [esi+4] offset unk_459FE0 +
pop esi  +
retn   +
***
call sub_423646  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FDF0  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 68h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-24h] edi +
mov eax [ebx+8] +
lea ecx [ebp-48h] +
mov esi [ebx+0Ch] +
mov [ebp-30h] eax +
mov eax [ebx+10h] +
push eax  +
mov [ebp-2Ch] esi +
mov [ebp-24h] edi +
call sub_4097B0  +
mov eax [ebx+8] +
mov [ebp-24h] eax +
mov eax [ebx+0Ch] +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp-38h] 0 +
jz loc_404766  +
push 2  +
push offset unk_45261C  +
lea ecx [ebp-48h] +
call loc_40A850  +
mov eax [esi] +
lea ecx [ebp-60h] +
push dword ptr [ebp-24h]  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx [ebp-2Ch] +
call esi  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-60h] +
cmp dword ptr [ebp-4Ch] 10h +
lea ecx [ebp-48h] +
push dword ptr [ebp-50h]  +
cmovnb eax [ebp-60h] +
push eax  +
call loc_40A850  +
mov edx [ebp-4Ch] +
cmp edx 10h +
jb loc_4047CE  +
mov ecx [ebp-60h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_4047C4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40488F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
movups xmm1 oword ptr [ebp-48h] +
lea ecx [ebp-78h] +
mov dword ptr [edi] offset off_442724 +
movq xmm0 qword ptr [ebp-38h] +
movq qword ptr [ebp-68h] xmm0 +
xorps xmm0 xmm0 +
cmp dword ptr [ebp-64h] 10h +
movd eax xmm1 +
movq qword ptr [edi+4] xmm0 +
movups oword ptr [ebp-78h] xmm1 +
cmovnb ecx eax +
mov dword ptr [ebp-38h] 0 +
lea eax [edi+4] +
mov dword ptr [ebp-34h] 0Fh +
push eax  +
lea eax [ebp-20h] +
mov byte ptr [ebp-48h] 0 +
push eax  +
mov [ebp-20h] ecx +
mov byte ptr [ebp-1Ch] 1 +
call sub_41CC7C  +
mov edx [ebp-64h] +
add esp 8 +
mov dword ptr [edi] offset off_442770 +
cmp edx 10h +
jb loc_40485B  +
mov ecx [ebp-78h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_404851  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404894  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebx+8] +
mov eax edi +
mov [edi+0Ch] ecx +
mov ecx [ebx+0Ch] +
mov dword ptr [edi] offset off_442788 +
mov [edi+10h] ecx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 0Ch  +
***
call sub_42071A  +
call sub_42071A  +
push esi  +
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_442724 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_41CC7C  +
mov dword ptr [edi] offset off_442788 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_442794 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_442724 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_41CC7C  +
mov dword ptr [edi] offset off_442788 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
mov [ebp-4] esi +
cmp eax 1 +
jnz loc_4049BB  +
push 15h  +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
mov dword ptr [esi+14h] 0Fh +
push offset aIostreamStream  +
mov byte ptr [esi] 0 +
call loc_40A5D0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
push eax  +
call sub_41A918  +
mov edx eax +
mov dword ptr [esi+10h] 0 +
mov ecx edx +
mov dword ptr [esi+14h] 0Fh +
add esp 4 +
mov byte ptr [esi] 0 +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4049E0  +
sub ecx edi +
push ecx  +
push edx  +
mov ecx esi +
call loc_40A5D0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_404A17  +
push 8  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4427B0 +
jz loc_404A3D  +
push 4  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FE6A  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
push 0  +
call sub_41A3E0  +
mov dword ptr [ebp-4] 0 +
mov dword ptr [esi+4] 0 +
mov byte ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov byte ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov [esi+18h] ax +
mov [esi+1Ch] eax +
mov [esi+20h] ax +
mov [esi+24h] eax +
mov [esi+28h] al +
mov [esi+2Ch] eax +
mov [esi+30h] al +
mov eax [ebp+8] +
mov byte ptr [ebp-4] 6 +
test eax eax +
jz loc_404AE6  +
push eax  +
push esi  +
call sub_41A714  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aBadLocaleName  +
call sub_41A20A  +
push 0FFFFFFFFh  +
push offset loc_43FE90  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
call sub_41A75F  +
mov eax [esi+2Ch] +
add esp 4 +
test eax eax +
jz loc_404B3E  +
push eax  +
call sub_424926  +
add esp 4 +
mov dword ptr [esi+2Ch] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_404B55  +
push eax  +
call sub_424926  +
add esp 4 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_404B6C  +
push eax  +
call sub_424926  +
add esp 4 +
mov dword ptr [esi+1Ch] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_404B83  +
push eax  +
call sub_424926  +
add esp 4 +
mov dword ptr [esi+14h] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_404B9A  +
push eax  +
call sub_424926  +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_404BB1  +
push eax  +
call sub_424926  +
add esp 4 +
mov ecx esi +
mov dword ptr [esi+4] 0 +
call sub_41A438  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [ecx] offset off_4427B0 +
retn   +
***
test edi edi +
jz loc_404C43  +
mov eax [edi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_404C42  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 24h +
mov eax dword_458018 +
xor eax esp +
mov [esp+20h] eax +
mov edx [ebp+10h] +
xorps xmm0 xmm0 +
push ebx  +
mov ebx [ebp+8] +
mov ecx ebx +
push esi  +
push edi  +
mov [esp+0Ch] ebx +
mov [esp+10h] edx +
lea esi [ecx+1] +
movlpd oword ptr [esp+1Ch] xmm0 +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_404C83  +
sub ecx esi +
xor esi esi +
lea eax [ecx+1] +
mov [esp+14h] eax +
mov edi eax +
test eax eax +
jz loc_404CC8  +
inc esi  +
push 2  +
push esi  +
call sub_42076B  +
add esp 8 +
mov [esp+0Ch] eax +
test eax eax +
jz loc_404D30  +
xorps xmm0 xmm0 +
mov edi eax +
movlpd oword ptr [esp+24h] xmm0 +
test esi esi +
jz loc_404D19  +
xor ecx ecx +
mov [edi] cx +
mov ecx [esp+2Ch] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41A1AD  +
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_41A93D  +
add esp 8 +
test [ebp+arg_0] ax +
setnz al  +
pop ebp  +
retn 8  +
***
mov edx [ebp+lpCharType] +
lea eax [ecx+8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+lpSrcStr] +
push eax  +
push edx  +
push esi  +
push edi  +
call sub_41A95D  +
add esp 10h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
cmp esi [ebp+arg_8] +
jz loc_404DD8  +
push edi  +
mov edi [ebx] +
movzx ecx word ptr [esi] +
cmp edi offset off_4436F8 +
jnz loc_404DE0  +
lea eax [ebx+8] +
push eax  +
push ecx  +
call sub_41A93D  +
mov ecx [ebp+arg_0] +
add esp 8 +
test ax cx +
setnz al  +
test al al +
jnz loc_404DCF  +
add esi 2 +
cmp esi [ebp+arg_8] +
jnz loc_404DA0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov edi [edi+10h] +
push ecx  +
push [ebp+arg_0]  +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
jmp loc_404DC3  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
cmp esi [ebp+arg_8] +
jz loc_404E48  +
push edi  +
mov edi [ebx] +
movzx ecx word ptr [esi] +
cmp edi offset off_4436F8 +
jnz loc_404E50  +
lea eax [ebx+8] +
push eax  +
push ecx  +
call sub_41A93D  +
mov ecx [ebp+arg_0] +
add esp 8 +
test ax cx +
setnz al  +
test al al +
jz loc_404E3F  +
add esi 2 +
cmp esi [ebp+arg_8] +
jnz loc_404E10  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov edi [edi+10h] +
push ecx  +
push [ebp+arg_0]  +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
jmp loc_404E33  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_41A97C  +
add esp 8 +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_404EBB  +
push ebx  +
lea ebx [ecx+8] +
movzx eax word ptr [esi] +
push ebx  +
push eax  +
call sub_41A97C  +
mov [esi] ax +
add esp 8 +
add esi 2 +
cmp esi edi +
jnz loc_404EA3  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_41AB16  +
add esp 8 +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_404F1B  +
push ebx  +
lea ebx [ecx+8] +
movzx eax word ptr [esi] +
push ebx  +
push eax  +
call sub_41AB16  +
mov [esi] ax +
add esp 8 +
add esi 2 +
cmp esi edi +
jnz loc_404F03  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
sub esp 14h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
mov al [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [ebp-8] al +
lea eax [ecx+18h] +
push eax  +
lea eax [ebp+WideCharStr] +
movlpd oword ptr [ebp+WideCharStr] xmm0 +
push eax  +
push 1  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
call sub_41A22A  +
movzx ecx word ptr [ebp-0Ch] +
add esp 14h +
test eax eax +
mov edx 0FFFFh +
cmovs ecx edx +
mov ax cx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+18h] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+10h] +
cmp esi ebx +
jz loc_405008  +
add ecx 18h +
mov [esp+10h] ecx +
mov ecx [esp+24h] +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 14h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ecx+18h] +
xorps xmm0 xmm0 +
push eax  +
lea eax [ebp+MultiByteStr] +
movlpd oword ptr [ebp+MultiByteStr] xmm0 +
push eax  +
push dword ptr [ebp+WideCharStr]  +
lea eax [ebp-0Ch] +
push eax  +
call sub_41AABA  +
movzx ecx [ebp+arg_4] +
add esp 10h +
movzx edx byte ptr [ebp-0Ch] +
cmp eax 1 +
cmovnz edx ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
mov al dl +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+18h] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+14h] +
cmp esi ebx +
jz loc_4050E0  +
add ecx 18h +
mov [esp+10h] ecx +
mov ecx [esp+24h] +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_4436F8 +
jz loc_40511D  +
push dword ptr [esi+0Ch]  +
call sub_424926  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_424926  +
add esp 4 +
mov dword ptr [esi] offset off_4427B0 +
test [ebp+arg_0] 1 +
jz loc_40513F  +
push 44h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FEB8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [ebp+0Ch] +
mov edx [ebp+8] +
mov ecx edx +
mov [ebp-10h] esi +
mov dword ptr [ebp-18h] 0 +
mov edi [eax] +
mov ebx [eax+4] +
lea eax [ecx+1] +
mov dword ptr [ebp-14h] 0Fh +
mov byte ptr [ebp-28h] 0 +
mov [ebp-10h] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4051A5  +
sub ecx [ebp-10h] +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_40A5D0  +
lea eax [ebp-28h] +
mov dword ptr [ebp-4] 0 +
push eax  +
push ebx  +
push edi  +
mov ecx esi +
call loc_4046E0  +
mov edx [ebp-14h] +
cmp edx 10h +
jb loc_4051FD  +
mov ecx [ebp-28h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_4051F3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_405219  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [esi] offset off_452578 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax [ebp+8] +
sub esp 1Ch +
and eax 17h +
mov [ecx+0Ch] eax +
mov ecx [ecx+10h] +
push esi  +
and ecx eax +
jz loc_405242  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_405252  +
jmp loc_405249  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0  +
push 0  +
call sub_41D1A3  +
test cl 4 +
jz loc_40525E  +
mov esi offset aIos_baseBadbit +
jmp loc_40526E  +
test cl 2 +
mov esi offset aIos_baseFailbi +
mov eax offset aIos_baseEofbit +
cmovz esi eax +
lea ecx [esp+4] +
call loc_4046A0  +
push eax  +
push esi  +
lea ecx [esp+14h] +
call loc_405150  +
push offset unk_456D28  +
lea eax [esp+10h] +
push eax  +
call sub_41D1A3  +
push 0FFFFFFFFh  +
push offset loc_43FEE0  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0  +
push 0  +
mov dword ptr [edi+30h] 0 +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 201h +
mov dword ptr [edi+18h] 6 +
mov dword ptr [edi+1Ch] 0 +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
call loc_405220  +
push 8  +
call sub_41B637  +
mov esi eax +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
push 1  +
mov [ebp+var_4] 0 +
call sub_41A614  +
mov [esi+4] eax +
add esp 8 +
mov [edi+30h] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_442724 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_41CC7C  +
mov dword ptr [edi] offset off_442788 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_452578 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push esi  +
mov esi ecx +
call loc_4054F0  +
test [ebp+arg_0] 1 +
jz loc_40541F  +
push 110h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
mov ecx [edi+34h] +
cmp ecx 8 +
jb loc_40546D  +
mov eax [edi+20h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_405463  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4054E9  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
push esi  +
xor eax eax +
mov dword ptr [edi+30h] 0 +
lea esi [edi+18h] +
mov dword ptr [edi+34h] 7 +
mov [edi+20h] ax +
mov ecx esi +
mov eax [esi] +
push dword ptr [eax+4]  +
push esi  +
call sub_402F00  +
push 40h  +
push dword ptr [esi]  +
call sub_41B8B8  +
mov ecx [edi+14h] +
add esp 8 +
pop esi  +
cmp ecx 8 +
jb loc_4054D4  +
mov eax [edi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4054CA  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4054E9  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
pop edi  +
retn   +
***
call sub_42071A  +
push esi  +
mov esi ecx +
mov eax [esi+68h] +
mov dword ptr [esi] offset off_452548 +
test eax eax +
jz loc_40550E  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+68h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_40554F  +
mov ecx [eax] +
test ecx ecx +
jz loc_405530  +
cmp ecx 0FFFFFFFFh +
jz loc_405530  +
push ecx  +
call ds:CloseHandle  +
mov eax [esi+90h] +
test eax eax +
jz loc_405545  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [esi+90h] 0 +
lea ecx [esi+100h] +
call loc_402900  +
mov ecx [esi+0E8h] +
cmp ecx 8 +
jb loc_405596  +
mov eax [esi+0D4h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40558C  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4055C6  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0E4h] 0 +
lea ecx [esi+94h] +
mov dword ptr [esi+0E8h] 7 +
mov [esi+0D4h] ax +
call loc_405430  +
mov ecx esi +
pop esi  +
jmp loc_40DCF0  +
***
call sub_42071A  +
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+0Ch+var_4] eax +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [ebx+8Ch] 1 +
jnz loc_405672  +
xor eax eax +
cmp dword ptr [ebx+60h] 8 +
mov word ptr [esp+18h+Buffer] ax +
mov [esp+18h+NumberOfBytesWritten] eax +
lea eax [ebx+4Ch] +
jb loc_40560B  +
mov eax [eax] +
push offset aRbCcsUtf8  +
push eax  +
lea eax [esp+20h+NumberOfBytesWritten] +
push eax  +
call sub_4234B8  +
mov eax [esp+24h+NumberOfBytesWritten] +
add esp 0Ch +
test eax eax +
jz loc_405672  +
push eax  +
push 2  +
lea eax [esp+20h+Buffer] +
push 1  +
push eax  +
call sub_424C21  +
push [esp+28h+NumberOfBytesWritten]  +
call sub_423576  +
mov ax word ptr [esp+2Ch+Buffer] +
add esp 14h +
cmp al 0FFh +
jnz loc_40564F  +
cmp ah 0FEh +
jz loc_405672  +
cmp ah 0FFh +
jnz loc_405658  +
cmp al 0FEh +
jz loc_405672  +
mov eax [edi] +
test eax eax +
jz loc_40566B  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [edi] 0 +
mov ecx ebx +
call loc_407ED0  +
lea esi [ebx+4Ch] +
push ecx  +
mov ecx esi +
call loc_415720  +
add esp 4 +
test eax eax +
jz loc_40569E  +
cmp eax 1 +
jnz loc_4056F0  +
push ecx  +
mov ecx esi +
call sub_411140  +
add esp 4 +
test al al +
jz loc_4056F0  +
mov dword ptr [edi] 0FFFFFFFFh +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_4056A8  +
mov eax [esi] +
push 0  +
push 200080h  +
push 3  +
push 0  +
push 3  +
push 40000000h  +
push eax  +
call ds:CreateFileW  +
mov [edi] eax +
cmp eax 0FFFFFFFFh +
jnz loc_405747  +
cmp dword ptr [esi+14h] 8 +
jb loc_4056D0  +
mov esi [esi] +
push 0  +
push 200080h  +
push 1  +
push 0  +
push 3  +
push 40000000h  +
push esi  +
call ds:CreateFileW  +
mov [edi] eax +
cmp eax 0FFFFFFFFh +
jnz loc_405706  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+0Ch+var_4] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [ebx+8Ch] 1 +
push 0  +
jnz loc_405728  +
mov ecx 0FEFFh +
mov word ptr [esp+1Ch+Buffer] cx +
lea ecx [esp+1Ch+NumberOfBytesWritten] +
push ecx  +
push 2  +
lea ecx [esp+24h+Buffer] +
jmp loc_40573F  +
lea ecx [esp+1Ch+NumberOfBytesWritten] +
mov word ptr [esp+1Ch+Buffer] 0BBEFh +
push ecx  +
mov byte ptr [esp+20h+Buffer+2] 0BFh +
lea ecx [esp+20h+Buffer] +
push 3  +
push ecx  +
push eax  +
call ds:WriteFile  +
mov ecx [esp+18h+var_4] +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FF36  +
mov eax large fs:0 +
push eax  +
sub esp 254h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
lea eax [ebp-218h] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
lea eax [ebp-218h] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_40584B  +
lea ecx [ebp-218h] +
mov [ebp-238h] eax +
mov dword ptr [ebp-234h] 7 +
lea edx [ecx+2] +
mov [ebp-248h] ax +
add bh bh +
adc eax offset SHCreateDirectoryExW +
test eax eax +
jz loc_405833  +
cmp eax 0B7h +
jz loc_405833  +
cmp eax 50h +
jnz loc_405835  +
mov bl 1 +
lea ecx [ebp-248h] +
call loc_4029B0  +
test bl bl +
jnz loc_40584B  +
xor al al +
jmp loc_4059A2  +
xor eax eax +
mov dword ptr [ebp-220h] 0 +
lea ecx [ebp-218h] +
mov dword ptr [ebp-21Ch] 7 +
mov [ebp-230h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_405871  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_402B00  +
mov ecx esi +
mov dword ptr [ebp-4] 0 +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4058C0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-260h] +
call loc_402B00  +
lea edx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-230h] +
call loc_412EA0  +
mov byte ptr [ebp-4] 0 +
mov bl al +
mov edx [ebp-24Ch] +
cmp edx 8 +
jb loc_405937  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40592D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4059C0  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
test bl bl +
jz loc_405964  +
lea ecx [edi+4Ch] +
lea eax [ebp-230h] +
cmp ecx eax +
jz loc_405962  +
cmp dword ptr [ebp-21Ch] 8 +
push dword ptr [ebp-220h]  +
cmovnb eax [ebp-230h] +
push eax  +
call loc_402B00  +
mov bl 1 +
mov edx [ebp-21Ch] +
cmp edx 8 +
jb loc_4059A0  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_405996  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4059C5  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_42071A  +
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43FF68  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [esi+6Ch] 0 +
jnz loc_405A0A  +
xor al al +
jmp loc_405BC4  +
lea eax [esi+4Ch] +
push eax  +
lea ecx [ebp-38h] +
call sub_402A60  +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp-28h] 0 +
jnz loc_405A3A  +
cmp dword ptr [esi+48h] 8 +
lea eax [esi+34h] +
jb loc_405A2E  +
mov eax [eax] +
push eax  +
mov ecx esi +
call loc_405760  +
test al al +
jz loc_405A4F  +
cmp dword ptr [esi+68h] 0 +
lea eax [esi+68h] +
jnz loc_405A56  +
push eax  +
mov ecx esi +
call sub_4055D0  +
test al al +
jnz loc_405A56  +
xor bl bl +
jmp loc_405BBA  +
cmp dword ptr [esi+90h] 0 +
jnz loc_405A7E  +
push 4  +
call sub_41B637  +
add esp 4 +
mov [ebp-54h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax] 0 +
mov [esi+90h] eax +
cmp dword ptr [esi+48h] 8 +
lea edx [esi+34h] +
jb loc_405A89  +
mov edx [edx] +
mov ecx edx +
mov dword ptr [ebp-40h] 0 +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_405AA2  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-50h] +
call loc_402B00  +
mov edi [esi+90h] +
cmp dword ptr [edi] 0 +
jnz loc_405B05  +
cmp dword ptr [ebp-3Ch] 8 +
lea eax [ebp-50h] +
cmovnb eax [ebp-50h] +
push eax  +
push 0  +
push 0  +
call ds:CreateMutexW  +
mov [edi] eax +
test eax eax +
jnz loc_405B05  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_405B05  +
cmp dword ptr [ebp-3Ch] 8 +
lea eax [ebp-50h] +
cmovnb eax [ebp-50h] +
push eax  +
push 0  +
push 0  +
call ds:OpenMutexW  +
mov [edi] eax +
mov edx [ebp-3Ch] +
cmp edx 8 +
jb loc_405B3F  +
mov ecx [ebp-50h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_405B35  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_405BE0  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
lea eax [ebp-20h] +
push eax  +
call sub_4257BC  +
mov ecx [ebp-20h] +
add esp 4 +
cmp byte ptr [esi+0D1h] 0 +
mov eax [ebp-1Ch] +
mov [esi+0F0h] ecx +
mov [esi+0F4h] eax +
mov [esi+0F8h] ecx +
mov [esi+0FCh] eax +
jz loc_405BAD  +
mov eax [esi+90h] +
mov eax [eax] +
test eax eax +
jz loc_405BAD  +
push 7D0h  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_405B95  +
cmp eax 80h +
jnz loc_405BAD  +
push ecx  +
mov ecx esi +
call loc_413350  +
mov eax [esi+90h] +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
jmp loc_405BB4  +
mov byte ptr [esi+0D1h] 0 +
mov byte ptr [esi+6Dh] 1 +
mov bl 1 +
lea ecx [ebp-38h] +
call loc_4029B0  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
mov eax [esi+68h] +
test eax eax +
jz loc_405C0D  +
cmp eax 0FFFFFFFFh +
jz loc_405C0D  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+68h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_405C4E  +
mov ecx [eax] +
test ecx ecx +
jz loc_405C2F  +
cmp ecx 0FFFFFFFFh +
jz loc_405C2F  +
push ecx  +
call ds:CloseHandle  +
mov eax [esi+90h] +
test eax eax +
jz loc_405C44  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [esi+90h] 0 +
mov byte ptr [esi+6Dh] 0 +
mov al 1 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ebx ecx +
mov esi edi +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_405C80  +
push 2  +
push 0  +
push 0  +
push dword ptr [ebx+68h]  +
sub esi ecx +
sar esi 1 +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp-8] +
mov dword ptr [ebp-8] 0 +
push eax  +
add esi esi +
push esi  +
push edi  +
push dword ptr [ebx+68h]  +
call ds:WriteFile  +
push 0  +
lea eax [ebp-8] +
mov dword ptr [ebp-8] 0 +
push eax  +
push 4  +
push offset asc_4526C8  +
push dword ptr [ebx+68h]  +
call ds:WriteFile  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ebx +
push edi  +
mov edi ecx +
lea ecx [esi+1] +
and esp 0FFFFFFF8h +
sub esp 25Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+25Ch+var_4] eax +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
mov [esp+264h+var_254] eax +
mov eax edx +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_4] +
or eax ecx +
mov [esp+268h+var_248] edi +
jnz loc_405DC0  +
lea eax [esp+268h+var_240] +
push eax  +
call sub_4257BC  +
mov ebx [esp+26Ch+var_23C] +
add esp 4 +
mov esi [esp+268h+var_240] +
jmp loc_405E52  +
mov edi edx +
mov ebx 1A9FBE77h +
mov eax edi +
mov [esp+268h+var_258] edi +
mul  ebx +
mov [esp+268h+var_250] eax +
mov esi edx +
mov eax edi +
mov edx 624DD2Fh +
mul  edx +
mov edi eax +
mov [esp+268h+var_25C] edx +
mov eax ecx +
mul  ebx +
mov ecx eax +
mov ebx edx +
mov eax [ebp+arg_4] +
mov edx 624DD2Fh +
mul  edx +
add ecx esi +
mov esi [esp+268h+var_258] +
mov [esp+268h+var_250] eax +
adc ebx 0 +
add edi ecx +
mov ecx [esp+268h+var_25C] +
adc ecx 0 +
mov [esp+268h+var_240] edi +
xor eax eax +
mov edi [esp+268h+var_248] +
add ebx ecx +
mov ecx [esp+268h+var_250] +
adc eax eax +
add ecx ebx +
mov ebx [ebp+arg_4] +
adc edx eax +
sub esi ecx +
sbb ebx edx +
shrd esi ebx +
shr ebx 1 +
add esi ecx +
mov ecx [ebp+arg_0] +
adc ebx edx +
shrd esi ebx +
imul eax esi +
shr ebx 9 +
mov [esp+268h+var_240] esi +
mov [esp+268h+var_23C] ebx +
sub ecx eax +
mov [esp+268h+var_238] cx +
lea eax [esp+268h+var_248] +
mov [esp+268h+var_248] esi +
push eax  +
lea eax [esp+26Ch+var_22C] +
mov [esp+26Ch+var_244] ebx +
push eax  +
mov [edi+0F8h] esi +
mov [edi+0FCh] ebx +
call sub_4233F7  +
lea eax [esp+270h+var_22C] +
push eax  +
push offset aXX  +
lea eax [esp+278h+var_208] +
push 100h  +
push eax  +
call sub_424907  +
movzx eax [esp+280h+var_238] +
push eax  +
lea eax [esp+284h+var_208] +
push eax  +
push offset aS_3d  +
push 100h  +
push [esp+290h+var_254]  +
call sub_4044D0  +
mov ecx [esp+294h+var_4] +
add esp 2Ch +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43FF00  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea esi [ecx+68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_452570 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+esi-6Ch] eax +
lea ecx [esi-50h] +
call loc_408D70  +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_4524B8 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-6Ch] eax +
mov eax [esi-58h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-58h] offset off_4524C0 +
mov eax [esi-58h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-5Ch] eax +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_45248C +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-6Ch] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_4524B0 +
call sub_41A862  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440040  +
mov eax large fs:0 +
push eax  +
sub esp 37Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-2F8h] ecx +
mov eax [ebp+14h] +
mov esi [ebp+2Ch] +
mov ecx esi +
mov edi [ebp+30h] +
mov [ebp-32Ch] eax +
mov eax [ebp+18h] +
mov [ebp-330h] eax +
lea edx [ecx+2] +
mov eax [ebp+1Ch] +
mov [ebp-334h] eax +
mov eax [ebp+20h] +
mov [ebp-338h] eax +
mov eax [ebp+24h] +
mov [ebp-33Ch] eax +
mov eax [ebp+28h] +
mov [ebp-340h] eax +
xor eax eax +
mov [ebp-2DCh] edi +
mov dword ptr [ebp-218h] 0 +
mov dword ptr [ebp-214h] 7 +
mov [ebp-228h] ax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_406027  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-228h] +
call loc_402B00  +
mov ecx [ebp-2F8h] +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-4] 0 +
push dword ptr [ebp+8]  +
call sub_405D70  +
push offset aEyj  +
push esi  +
call loc_41CEEB  +
add esp 8 +
test eax eax +
jz loc_40609F  +
push offset a_eyj  +
push eax  +
call loc_41CEEB  +
add esp 8 +
test eax eax +
jz loc_40609F  +
push 27h  +
push offset aFoundAccessDev  +
lea ecx [ebp-228h] +
mov esi 28h +
call loc_402B00  +
jmp loc_4060B5  +
mov ecx [ebp-2F8h] +
lea eax [ebp-228h] +
push eax  +
push esi  +
call loc_414140  +
mov esi [ebp+10h] +
lea eax [esi-0Ah] +
cmp eax 3Ch +
ja loc_406153  +
movzx eax ds:byte_4069E4[eax] +
jmp ds:off_4069C4[eax*4]  +
push offset aFatal  +
lea ecx [ebp-310h] +
call sub_402A10  +
jmp loc_406182  +
push offset aError  +
lea ecx [ebp-310h] +
call sub_402A10  +
jmp loc_406182  +
push offset aWarn  +
lea ecx [ebp-310h] +
call sub_402A10  +
jmp loc_406182  +
push offset aInfo  +
lea ecx [ebp-310h] +
call sub_402A10  +
jmp loc_406182  +
push offset off_4527A8  +
lea ecx [ebp-310h] +
call sub_402A10  +
jmp loc_406182  +
push offset aTrace  +
lea ecx [ebp-310h] +
call sub_402A10  +
jmp loc_406182  +
push offset aNone  +
lea ecx [ebp-310h] +
call sub_402A10  +
jmp loc_406182  +
push 3  +
xor eax eax +
mov dword ptr [ebp-300h] 0 +
push offset aAll  +
lea ecx [ebp-310h] +
mov dword ptr [ebp-2FCh] 7 +
mov [ebp-310h] ax +
call loc_402B00  +
mov esi [ebp-2F8h] +
lea edx [ebp-210h] +
add esi 1Ch +
mov byte ptr [ebp-4] 1 +
push esi  +
lea ecx [ebp-2F4h] +
call loc_40BF50  +
add esp 4 +
push 1  +
push offset asc_45275C  +
mov ecx eax +
mov byte ptr [ebp-4] 2 +
call loc_40BBF0  +
mov dword ptr [ebp-360h] 0 +
xor ecx ecx +
mov dword ptr [ebp-35Ch] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-370h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-360h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
lea eax [ebp-310h] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea edx [ebp-370h] +
lea ecx [ebp-388h] +
call sub_40C170  +
add esp 4 +
push 1  +
push offset asc_452758  +
mov ecx eax +
mov byte ptr [ebp-4] 4 +
call loc_40BBF0  +
mov dword ptr [ebp-348h] 0 +
xor ecx ecx +
mov dword ptr [ebp-344h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-358h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-348h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 5 +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_406271  +
mov eax [esi] +
push dword ptr [esi+10h]  +
lea ecx [ebp-358h] +
push eax  +
call loc_40BBF0  +
xor ecx ecx +
movups xmm1 oword ptr [eax] +
movq xmm0 qword ptr [eax+10h] +
movups oword ptr [ebp-328h] xmm1 +
mov dword ptr [eax+10h] 0 +
movq qword ptr [ebp-318h] xmm0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-328h] +
cmp dword ptr [ebp-314h] 8 +
push dword ptr [ebp-318h]  +
movd eax xmm1 +
cmovnb ecx eax +
push ecx  +
mov ecx edi +
call loc_40BBF0  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-314h] +
cmp edx 8 +
jb loc_406314  +
mov ecx [ebp-328h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40630A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406994  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-344h] +
cmp edx 8 +
jb loc_406358  +
mov ecx [ebp-358h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40634E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406994  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-374h] +
mov dword ptr [ebp-348h] 0 +
mov dword ptr [ebp-344h] 7 +
mov [ebp-358h] ax +
cmp edx 8 +
jb loc_4063B9  +
mov ecx [ebp-388h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4063AF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406994  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-35Ch] +
mov dword ptr [ebp-378h] 0 +
mov dword ptr [ebp-374h] 7 +
mov [ebp-388h] ax +
cmp edx 8 +
jb loc_40641A  +
mov ecx [ebp-370h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_406410  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406994  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-2E0h] +
mov dword ptr [ebp-360h] 0 +
mov dword ptr [ebp-35Ch] 7 +
mov [ebp-370h] ax +
cmp edx 8 +
jb loc_40647B  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_406471  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406994  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2E4h] 0 +
mov [ebp-4] al +
mov edx [ebp-2FCh] +
mov dword ptr [ebp-2E0h] 7 +
mov [ebp-2F4h] ax +
cmp edx 8 +
jb loc_4064DB  +
mov ecx [ebp-310h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4064D1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406994  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-32Ch] +
lea ecx [ebp-2F4h] +
mov edi offset unk_44EABC +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 7 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_40650A  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2E0h] +
cmp edx 8 +
jb loc_40655D  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_406553  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406999  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-330h] +
lea ecx [ebp-2F4h] +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 8 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_406587  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2E0h] +
cmp edx 8 +
jb loc_4065DA  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4065D0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40699E  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-334h] +
lea ecx [ebp-2F4h] +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 9 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_406604  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2E0h] +
cmp edx 8 +
jb loc_406657  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40664D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4069A3  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-338h] +
lea ecx [ebp-2F4h] +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 0Ah +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_406681  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2E0h] +
cmp edx 8 +
jb loc_4066D4  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4066CA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4069A8  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-33Ch] +
lea ecx [ebp-2F4h] +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 0Bh +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_4066FE  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2E0h] +
cmp edx 8 +
jb loc_406751  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_406747  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4069AD  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-340h] +
lea ecx [ebp-2F4h] +
test eax eax +
push esi  +
cmovnz edi eax +
mov edx edi +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 0Ch +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_40677B  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
mov edi [ebp-2DCh] +
push ecx  +
mov ecx edi +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2E0h] +
cmp edx 8 +
jb loc_4067D0  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4067C6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4069B2  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 0B0h  +
lea eax [ebp-2D8h] +
push 0  +
push eax  +
call sub_41DD10  +
add esp 4 +
lea ecx [ebp-2D8h] +
call sub_409210  +
mov byte ptr [ebp-4] 0Dh +
call ds:GetCurrentThreadId  +
push eax  +
lea ecx [ebp-2C8h] +
call sub_409390  +
lea eax [ebp-2F4h] +
push eax  +
lea ecx [ebp-2C0h] +
call sub_40A490  +
lea ecx [ebp-2D8h] +
call sub_405ED0  +
mov byte ptr [ebp-4] 0Eh +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_406832  +
mov eax [esi] +
push dword ptr [esi+10h]  +
lea ecx [ebp-2F4h] +
push eax  +
call loc_40BBF0  +
xor ecx ecx +
movups xmm1 oword ptr [eax] +
movq xmm0 qword ptr [eax+10h] +
movups oword ptr [ebp-328h] xmm1 +
mov dword ptr [eax+10h] 0 +
movq qword ptr [ebp-318h] xmm0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 0Fh +
lea ecx [ebp-328h] +
cmp dword ptr [ebp-314h] 8 +
push dword ptr [ebp-318h]  +
movd eax xmm1 +
cmovnb ecx eax +
push ecx  +
mov ecx edi +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0Eh +
mov edx [ebp-314h] +
cmp edx 8 +
jb loc_4068D5  +
mov ecx [ebp-328h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4068CB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4069B7  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2E0h] +
cmp edx 8 +
jb loc_406919  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40690F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4069B7  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
cmp dword ptr [ebp-214h] 8 +
lea eax [ebp-228h] +
push dword ptr [ebp-218h]  +
cmovnb eax [ebp-228h] +
mov ecx edi +
push eax  +
call loc_40BBF0  +
mov edx [ebp-214h] +
cmp edx 8 +
jb loc_406977  +
mov ecx [ebp-228h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40696D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4069BC  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
push 0FFFFFFFFh  +
push offset loc_440086  +
mov eax large fs:0 +
push eax  +
mov eax 2058h +
call sub_41C6B0  +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ebx [ebp+arg_10] +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_C] +
mov edi [ebp+arg_20] +
mov [ebp+var_2054] ebx +
mov ebx [ebp+arg_14] +
mov [ebp+var_205C] ebx +
mov ebx [ebp+arg_18] +
mov [ebp+var_2058] ebx +
mov ebx [ebp+arg_1C] +
mov [ebp+var_2050] ebx +
mov ebx [ebp+arg_0] +
mov [ebp+var_204C] eax +
mov [ebp+var_2048] ecx +
mov [ebp+var_2044] edx +
cmp [esi+64h] ebx +
jg loc_406CA5  +
mov bl [ebp+arg_2C] +
test bl bl +
jz loc_406B50  +
mov ecx [esi+90h] +
test ecx ecx +
jz loc_406B32  +
cmp byte ptr [esi+0D1h] 0 +
jz loc_406B32  +
sub esp 8 +
call sub_4156F0  +
test al al +
jz loc_406B32  +
mov ecx [esi+0F8h] +
sub ecx [esi+0F0h] +
mov eax [esi+0FCh] +
sbb eax [esi+0F4h] +
js loc_406B3E  +
jg loc_406B00  +
cmp ecx 384h +
jb loc_406B3E  +
push ecx  +
mov ecx esi +
call loc_413350  +
mov ecx [ebp+var_2048] +
mov edx [ebp+var_2044] +
test al al +
jz loc_406B4A  +
mov eax [esi+0F8h] +
mov [esi+0F0h] eax +
mov eax [esi+0FCh] +
mov [esi+0F4h] eax +
jmp loc_406B4A  +
mov byte ptr [esi+0D1h] 0 +
jmp loc_406CA5  +
mov edx [ebp+var_2044] +
mov ecx [ebp+var_2048] +
mov eax [ebp+var_204C] +
cmp byte ptr [esi+0D0h] 0 +
jz loc_406B6F  +
push 0  +
push 0  +
push [ebp+var_2054]  +
push edx  +
push ecx  +
push eax  +
push 1Eh  +
mov ecx esi +
call loc_4145A0  +
xor eax eax +
mov [ebp+var_2018] 0 +
mov [ebp+var_2014] 7 +
mov word ptr [ebp+var_2028] ax +
mov [ebp+var_4] eax +
test edi edi +
jnz loc_406B9B  +
mov eax [ebp+var_2050] +
jmp loc_406BCA  +
push edi  +
push 0  +
push [ebp+var_2050]  +
lea eax [ebp+var_2010] +
push 0FFFFFFFFh  +
push 0FFFh  +
push eax  +
call sub_404490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_4230D5  +
add esp 20h +
lea eax [ebp+var_2010] +
lea ecx [ebp+var_2028] +
push ecx  +
push eax  +
push [ebp+var_2058]  +
mov ecx esi +
push [ebp+var_205C]  +
push [ebp+var_2054]  +
push [ebp+var_2044]  +
push [ebp+var_2048]  +
push [ebp+var_204C]  +
push [ebp+arg_0]  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
call loc_405F90  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_406C68  +
mov [ebp+var_2030] 0 +
mov [ebp+var_202C] 0Fh +
mov byte ptr [ebp+var_2040] 0 +
lea edx [ebp+var_2040] +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_2028] +
call sub_412AE0  +
cmp [ebp+var_202C] 10h +
lea eax [ebp+var_2040] +
mov ecx esi +
cmovnb eax [ebp+var_2040] +
push eax  +
call loc_405CF0  +
lea ecx [ebp+var_2040] +
call loc_409760  +
jmp loc_406C84  +
cmp [ebp+var_2014] 8 +
lea eax [ebp+var_2028] +
mov ecx esi +
cmovnb eax [ebp+var_2028] +
push eax  +
call loc_405C60  +
test bl bl +
jz loc_406C9A  +
mov eax [esi+90h] +
test eax eax +
jz loc_406C9A  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
lea ecx [ebp+var_2028] +
call loc_4029B0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44018C  +
mov eax large fs:0 +
push eax  +
sub esp 5ECh +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
xorps xmm0 xmm0 +
mov dword ptr [ebp-5B0h] 0 +
movlpd oword ptr [ebp-268h] xmm0 +
push 2Ch  +
mov dword ptr [ebp-268h] 0 +
mov dword ptr [ebp-264h] 0 +
call sub_41B637  +
add esp 4 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [ebp-268h] eax +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
movq qword ptr [ebp-248h] xmm0 +
mov dword ptr [ebp-240h] 0 +
mov dword ptr [ebp-248h] 0 +
mov dword ptr [ebp-244h] 0 +
mov dword ptr [ebp-240h] 0 +
movq qword ptr [ebp-224h] xmm0 +
mov dword ptr [ebp-21Ch] 0 +
mov dword ptr [ebp-224h] 0 +
mov dword ptr [ebp-220h] 0 +
mov dword ptr [ebp-21Ch] 0 +
xor eax eax +
mov dword ptr [ebp-288h] 0 +
mov dword ptr [ebp-284h] 7 +
mov [ebp-298h] ax +
mov [ebp-2B8h] eax +
mov dword ptr [ebp-2B4h] 7 +
mov [ebp-2C8h] ax +
mov [ebp-300h] eax +
mov dword ptr [ebp-2FCh] 7 +
mov [ebp-310h] ax +
mov [ebp-330h] eax +
mov dword ptr [ebp-32Ch] 7 +
mov [ebp-340h] ax +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-2F8h] +
push eax  +
push offset unk_44EABC  +
mov [ebp-2E8h] eax +
mov dword ptr [ebp-2E4h] 7 +
mov [ebp-2F8h] ax +
call loc_402B00  +
add esi 4Ch +
mov byte ptr [ebp-4] 7 +
push esi  +
lea ecx [ebp-2B0h] +
call sub_402A60  +
lea edx [ebp-340h] +
mov byte ptr [ebp-4] 8 +
mov ecx esi +
call loc_413110  +
cmp dword ptr [ebp-29Ch] 8 +
lea eax [ebp-2B0h] +
cmovnb eax [ebp-2B0h] +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_424D5C  +
add esp 0Ch +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveExtensionW  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_406EA1  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-2B0h] +
call loc_402B00  +
xor edi edi +
mov esi edi +
xor eax eax +
mov dword ptr [ebp-270h] 0 +
push eax  +
push offset unk_44EABC  +
lea ecx [ebp-280h] +
mov dword ptr [ebp-26Ch] 7 +
mov [ebp-280h] ax +
call loc_402B00  +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
mov edx edi +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-260h] +
call sub_412C40  +
lea eax [ebp-260h] +
mov edx offset asc_452760 +
push eax  +
lea ecx [ebp-358h] +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-2B0h] +
cmp dword ptr [ebp-29Ch] 8 +
push dword ptr [ebp-2A0h]  +
cmovnb ecx [ebp-2B0h] +
push ecx  +
push ecx  +
mov ecx eax +
call loc_40CCE0  +
xor ecx ecx +
or esi 1 +
mov [ebp-5B0h] esi +
movups xmm0 oword ptr [eax] +
movq xmm1 qword ptr [eax+10h] +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov edx [ebp-26Ch] +
movq qword ptr [ebp-5E0h] xmm1 +
movups oword ptr [ebp-234h] xmm0 +
cmp edx 8 +
jb loc_406FEF  +
mov ecx [ebp-280h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_406FD6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
movups xmm0 oword ptr [ebp-234h] +
add esp 8 +
movq xmm1 qword ptr [ebp-5E0h] +
mov byte ptr [ebp-4] 0Ah +
mov edx [ebp-344h] +
movq qword ptr [ebp-270h] xmm1 +
movups oword ptr [ebp-280h] xmm0 +
cmp edx 8 +
jb loc_407042  +
mov ecx [ebp-358h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407038  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2D0h] 0 +
push eax  +
push offset unk_44EABC  +
lea ecx [ebp-2E0h] +
mov dword ptr [ebp-2CCh] 7 +
mov [ebp-2E0h] ax +
call loc_402B00  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-280h] +
push dword ptr [ebp-5DCh]  +
cmp dword ptr [ebp-26Ch] 8 +
mov edx [ebp-270h] +
cmovnb ecx [ebp-280h] +
push 1  +
push offset asc_452764  +
push ecx  +
call loc_40C4A0  +
mov esi eax +
mov dword ptr [ebp-5C8h] 0 +
xor eax eax +
mov dword ptr [ebp-5C4h] 7 +
add esp 10h +
mov [ebp-5D8h] ax +
cmp [ebp-270h] esi +
lea eax [ebp-280h] +
mov edx esi +
lea ecx [ebp-5D8h] +
cmovb edx [ebp-270h] +
cmp dword ptr [ebp-26Ch] 8 +
push edx  +
cmovnb eax [ebp-280h] +
push eax  +
call loc_402B00  +
mov edx [ebp-2E4h] +
cmp edx 8 +
jb loc_407133  +
mov ecx [ebp-2F8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407129  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
movups xmm0 oword ptr [ebp-5D8h] +
xor eax eax +
lea edx [esi+1] +
mov [ebp-5D8h] ax +
mov eax [ebp-270h] +
movups oword ptr [ebp-2F8h] xmm0 +
movq xmm0 qword ptr [ebp-5C8h] +
movq qword ptr [ebp-2E8h] xmm0 +
mov dword ptr [ebp-5C8h] 0 +
mov dword ptr [ebp-5C4h] 7 +
cmp eax edx +
jb loc_407E91  +
sub eax edx +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebp-26Ch] 8 +
lea eax [ebp-280h] +
cmovnb eax [ebp-280h] +
push ecx  +
lea ecx [ebp-5D8h] +
lea eax [eax+edx*2] +
push eax  +
call loc_402B00  +
mov edx [ebp-2CCh] +
cmp edx 8 +
jb loc_4071EE  +
mov ecx [ebp-2E0h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4071E4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push dword ptr [ebp-5DCh]  +
movups xmm0 oword ptr [ebp-5D8h] +
cmp dword ptr [ebp-29Ch] 8 +
lea ecx [ebp-2B0h] +
mov edx [ebp-2A0h] +
cmovnb ecx [ebp-2B0h] +
push 1  +
movups oword ptr [ebp-2E0h] xmm0 +
push offset asc_452764  +
movq xmm0 qword ptr [ebp-5C8h] +
push ecx  +
movq qword ptr [ebp-2D0h] xmm0 +
call loc_40C4A0  +
add esp 10h +
mov dword ptr [ebp-5C8h] 0 +
mov dword ptr [ebp-5C4h] 7 +
lea edx [eax+1] +
xor eax eax +
mov [ebp-5D8h] ax +
mov eax [ebp-2A0h] +
cmp eax edx +
jb loc_407E91  +
sub eax edx +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebp-29Ch] 8 +
lea eax [ebp-2B0h] +
cmovnb eax [ebp-2B0h] +
push ecx  +
lea ecx [ebp-5D8h] +
lea eax [eax+edx*2] +
push eax  +
call loc_402B00  +
mov esi [ebp-5B0h] +
mov eax [ebp-2B4h] +
or esi 0Eh +
cmp eax 8 +
jb loc_4072E2  +
mov ecx [ebp-2C8h] +
lea edx ds:2[eax*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4072D8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
movups xmm0 oword ptr [ebp-5D8h] +
mov eax [ebp-244h] +
lea ecx [ebp-2E0h] +
push ecx  +
movups oword ptr [ebp-2C8h] xmm0 +
movq xmm0 qword ptr [ebp-5C8h] +
movq qword ptr [ebp-2B8h] xmm0 +
cmp eax [ebp-240h] +
jz loc_407325  +
mov ecx eax +
call sub_402A60  +
add dword ptr [ebp-244h] 18h +
jmp loc_407331  +
push eax  +
lea ecx [ebp-248h] +
call loc_40C360  +
mov byte ptr [ebp-4] 0Ah +
mov edx [ebp-2CCh] +
cmp edx 8 +
jb loc_407375  +
mov ecx [ebp-2E0h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40736B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 9 +
mov edx [ebp-24Ch] +
cmp edx 8 +
jb loc_4073B9  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4073AF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 8 +
mov edx [ebp-26Ch] +
cmp edx 8 +
jb loc_4073FD  +
mov ecx [ebp-280h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4073F3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
dec edi  +
cmp edi 0FFFFFFFEh +
jg loc_406ED0  +
cmp dword ptr [ebp-5C4h] 8 +
lea eax [ebp-2C8h] +
push dword ptr [ebp-5C8h]  +
cmovnb eax [ebp-5D8h] +
lea ecx [ebp-310h] +
push eax  +
call loc_402B00  +
cmp dword ptr [ebp-2FCh] 8 +
lea eax [ebp-310h] +
cmovnb eax [ebp-310h] +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_424D5C  +
add esp 0Ch +
lea eax [ebp-340h] +
cmp dword ptr [ebp-32Ch] 8 +
cmovnb eax [ebp-340h] +
push eax  +
lea eax [ebp-218h] +
push eax  +
call ds:PathAddExtensionW  +
test eax eax +
jz loc_4074A7  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_407485  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-310h] +
call loc_402B00  +
push offset asc_452764  +
lea edx [ebp-2F8h] +
lea ecx [ebp-5F8h] +
call loc_40C030  +
add esp 4 +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-2C8h] +
cmp dword ptr [ebp-2B4h] 8 +
push dword ptr [ebp-2B8h]  +
cmovnb ecx [ebp-2C8h] +
push ecx  +
mov ecx eax +
call loc_40BBF0  +
mov dword ptr [ebp-5C8h] 0 +
xor ecx ecx +
mov dword ptr [ebp-5C4h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-5D8h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-5C8h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
push 1  +
push offset asc_452768  +
lea ecx [ebp-5D8h] +
mov byte ptr [ebp-4] 0Eh +
call loc_40BBF0  +
mov dword ptr [ebp-318h] 0 +
xor ecx ecx +
mov dword ptr [ebp-314h] 0 +
or esi 30h +
mov [ebp-5B0h] esi +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-328h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-318h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 10h +
mov edx [ebp-5C4h] +
cmp edx 8 +
jb loc_4075C5  +
mov ecx [ebp-5D8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4075BB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5C8h] 0 +
mov dword ptr [ebp-5C4h] 7 +
mov [ebp-5D8h] ax +
mov byte ptr [ebp-4] 11h +
mov edx [ebp-5E4h] +
cmp edx 8 +
jb loc_407626  +
mov ecx [ebp-5F8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40761C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5E8h] 0 +
cmp dword ptr [ebp-314h] 8 +
lea ecx [ebp-5A8h] +
mov [ebp-5F8h] ax +
lea eax [ebp-328h] +
cmovnb eax [ebp-328h] +
push ecx  +
push eax  +
mov dword ptr [ebp-5E4h] 7 +
call ds:FindFirstFileW  +
mov [ebp-5DCh] eax +
cmp eax 0FFFFFFFFh +
jnz loc_407680  +
call ds:GetLastError  +
jmp loc_407DE8  +
lea ecx [ebp-57Ch] +
mov byte ptr [ebp-5A9h] 0 +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_407690  +
sub ecx edx +
lea eax [ebp-57Ch] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-298h] +
call loc_402B00  +
mov ecx offset a__0 +
lea eax [ebp-57Ch] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4076E6  +
test dx dx +
jz loc_4076E2  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4076E6  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_4076C0  +
xor eax eax +
jmp loc_4076EB  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_407C64  +
mov ecx offset a___1 +
lea eax [ebp-57Ch] +
nop   +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_407726  +
test dx dx +
jz loc_407722  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_407726  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_407700  +
xor eax eax +
jmp loc_40772B  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_407C64  +
mov eax [ebp-244h] +
xor ecx ecx +
sub eax [ebp-248h] +
sar eax 3 +
imul eax eax +
mov [ebp-5BCh] ecx +
test eax eax +
jz loc_407C42  +
xor edx edx +
mov [ebp-5C0h] edx +
cmp eax ecx +
jbe loc_407E9B  +
mov edi [ebp-248h] +
add edi edx +
mov dword ptr [ebp-22Ch] 0 +
mov dword ptr [ebp-228h] 0 +
cmp dword ptr [edi+14h] 8 +
mov eax [edi+10h] +
mov [ebp-5B8h] eax +
jb loc_407795  +
mov edi [edi] +
cmp eax 8 +
jnb loc_4077B7  +
movups xmm0 oword ptr [edi] +
mov edi [ebp-5B8h] +
mov esi 7 +
mov [ebp-22Ch] eax +
movups oword ptr [ebp-23Ch] xmm0 +
jmp loc_407803  +
mov esi eax +
lea ecx [ebp-23Ch] +
or esi 7 +
mov eax 7FFFFFFEh +
cmp esi 7FFFFFFEh +
cmova esi eax +
lea eax [esi+1] +
push eax  +
call loc_402C90  +
mov ecx [ebp-5B8h] +
mov [ebp-23Ch] eax +
lea ecx ds:2[ecx*2] +
push ecx  +
push edi  +
push eax  +
call loc_41D210  +
mov edi [ebp-5B8h] +
add esp 0Ch +
mov [ebp-22Ch] edi +
mov [ebp-228h] esi +
mov byte ptr [ebp-4] 12h +
lea eax [ebp-2C8h] +
cmp dword ptr [ebp-2B4h] 8 +
lea ecx [ebp-298h] +
push dword ptr [ebp-2B8h]  +
cmovnb eax [ebp-2C8h] +
cmp dword ptr [ebp-284h] 8 +
mov edx [ebp-288h] +
cmovnb ecx [ebp-298h] +
push eax  +
push 0  +
call loc_40C5D0  +
add esp 0Ch +
test eax eax +
jnz loc_407936  +
cmp [ebp-288h] edi +
lea ecx [ebp-260h] +
mov [ebp-250h] eax +
cmovb edi [ebp-288h] +
cmp dword ptr [ebp-284h] 8 +
mov [ebp-260h] ax +
lea eax [ebp-298h] +
cmovnb eax [ebp-298h] +
push edi  +
push eax  +
mov byte ptr [ebp-5A9h] 1 +
mov dword ptr [ebp-24Ch] 7 +
call loc_402B00  +
or dword ptr [ebp-5B0h] 40h +
lea ecx [ebp-23Ch] +
cmp dword ptr [ebp-228h] 8 +
lea eax [ebp-260h] +
cmovnb ecx [ebp-23Ch] +
cmp dword ptr [ebp-24Ch] 8 +
push ecx  +
cmovnb eax [ebp-260h] +
push eax  +
call ds:lstrcmpW  +
mov edx [ebp-24Ch] +
test eax eax +
setz al  +
mov [ebp-5B1h] al +
cmp edx 8 +
jb loc_407928  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407918  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
mov al [ebp-5B1h] +
add esp 8 +
test al al +
jnz loc_407B38  +
mov esi [ebp-228h] +
mov byte ptr [ebp-4] 11h +
cmp esi 8 +
jb loc_407974  +
mov ecx [ebp-23Ch] +
lea esi ds:2[esi*2] +
mov eax ecx +
cmp esi 1000h +
jb loc_40796A  +
mov ecx [ecx-4] +
add esi 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push esi  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-244h] +
sub eax [ebp-248h] +
mov ecx [ebp-5BCh] +
mov edx [ebp-5C0h] +
inc ecx  +
sar eax 3 +
add edx 18h +
imul eax eax +
mov [ebp-5BCh] ecx +
mov [ebp-5C0h] edx +
cmp eax ecx +
ja loc_407768  +
mov al [ebp-5A9h] +
cmp al 1 +
jnz loc_407C64  +
cmp dword ptr [ebp-2FCh] 8 +
lea ecx [ebp-310h] +
lea eax [ebp-298h] +
cmovnb ecx [ebp-310h] +
cmp dword ptr [ebp-284h] 8 +
push ecx  +
cmovnb eax [ebp-298h] +
push eax  +
call ds:lstrcmpW  +
test eax eax +
jz loc_407B7C  +
push offset asc_452764  +
lea edx [ebp-2F8h] +
lea ecx [ebp-23Ch] +
call loc_40C030  +
add esp 4 +
mov esi eax +
mov byte ptr [ebp-4] 13h +
lea edx [ebp-298h] +
cmp dword ptr [ebp-284h] 8 +
cmovnb edx [ebp-298h] +
mov ecx edx +
lea edi [ecx+2] +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-260h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-250h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 11h +
mov edx [ebp-228h] +
cmp edx 8 +
jb loc_407AD4  +
mov ecx [ebp-23Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407ACA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
cmp dword ptr [ebp-24Ch] 8 +
lea eax [ebp-260h] +
cmovnb eax [ebp-260h] +
push eax  +
call ds:DeleteFileW  +
mov edx [ebp-24Ch] +
cmp edx 8 +
jb loc_407C64  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407B29  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
jmp loc_407C64  +
mov byte ptr [ebp-4] 11h +
mov edx [ebp-228h] +
cmp edx 8 +
jb loc_407B7C  +
mov ecx [ebp-23Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407B72  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407E96  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al [ebp-5A9h] +
cmp al 1 +
jnz loc_407C64  +
push offset asc_452764  +
lea edx [ebp-2F8h] +
lea ecx [ebp-260h] +
call loc_40C030  +
add esp 4 +
mov esi eax +
mov byte ptr [ebp-4] 14h +
lea edx [ebp-298h] +
cmp dword ptr [ebp-284h] 8 +
cmovnb edx [ebp-298h] +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_407BC2  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_40BBF0  +
or dword ptr [ebp-5B0h] 100h +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-358h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-348h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
lea ecx [ebp-260h] +
mov byte ptr [ebp-4] 16h +
call loc_4029B0  +
mov eax [ebp-220h] +
lea ecx [ebp-358h] +
push ecx  +
cmp eax [ebp-21Ch] +
jz loc_407C49  +
mov ecx eax +
call sub_402A60  +
add dword ptr [ebp-220h] 18h +
jmp loc_407C55  +
mov al cl +
jmp loc_407B82  +
***
push eax  +
lea ecx [ebp-224h] +
call loc_40C360  +
lea ecx [ebp-358h] +
mov byte ptr [ebp-4] 11h +
call loc_4029B0  +
lea eax [ebp-5A8h] +
push eax  +
push dword ptr [ebp-5DCh]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_407680  +
mov edx [ebp-220h] +
mov eax edx +
mov ecx [ebp-224h] +
sub eax ecx +
push dword ptr [ebp-5DCh]  +
sar eax 3 +
imul eax eax +
push eax  +
call loc_40CFF0  +
mov eax [ebp-220h] +
mov ecx 3 +
mov esi [ebp-224h] +
add esp 8 +
sub eax esi +
mov [ebp-5BCh] ecx +
sar eax 3 +
imul edx eax +
cmp edx ecx +
jbe loc_407DE8  +
xor edi edi +
mov [ebp-5B8h] edi +
lea eax [ecx-3] +
cmp edx eax +
jbe loc_407E9B  +
add edi esi +
mov dword ptr [ebp-22Ch] 0 +
mov dword ptr [ebp-228h] 0 +
cmp dword ptr [edi+14h] 8 +
mov eax [edi+10h] +
mov [ebp-5C0h] eax +
jb loc_407D12  +
mov edi [edi] +
cmp eax 8 +
jnb loc_407D39  +
movups xmm0 oword ptr [edi] +
mov [ebp-22Ch] eax +
lea eax [ebp-23Ch] +
mov dword ptr [ebp-228h] 7 +
movups oword ptr [ebp-23Ch] xmm0 +
jmp loc_407D9B  +
mov esi eax +
lea ecx [ebp-23Ch] +
or esi 7 +
mov eax 7FFFFFFEh +
cmp esi 7FFFFFFEh +
cmova esi eax +
lea eax [esi+1] +
push eax  +
call loc_402C90  +
mov ecx [ebp-5C0h] +
mov [ebp-23Ch] eax +
lea ecx ds:2[ecx*2] +
push ecx  +
push edi  +
push eax  +
call loc_41D210  +
mov eax [ebp-5C0h] +
add esp 0Ch +
mov [ebp-22Ch] eax +
cmp esi 8 +
lea eax [ebp-23Ch] +
mov [ebp-228h] esi +
cmovnb eax [ebp-23Ch] +
push eax  +
call ds:DeleteFileW  +
lea ecx [ebp-23Ch] +
call loc_4029B0  +
mov eax [ebp-220h] +
mov esi [ebp-224h] +
sub eax esi +
mov ecx [ebp-5BCh] +
mov edi [ebp-5B8h] +
inc ecx  +
sar eax 3 +
add edi 18h +
imul edx eax +
mov [ebp-5BCh] ecx +
mov [ebp-5B8h] edi +
cmp ecx edx +
jb loc_407CE0  +
lea ecx [ebp-328h] +
call loc_4029B0  +
lea ecx [ebp-2B0h] +
call loc_4029B0  +
lea ecx [ebp-2F8h] +
call loc_4029B0  +
lea ecx [ebp-340h] +
call loc_4029B0  +
lea ecx [ebp-310h] +
call loc_4029B0  +
lea ecx [ebp-2C8h] +
call loc_4029B0  +
lea ecx [ebp-298h] +
call loc_4029B0  +
lea ecx [ebp-224h] +
call loc_402900  +
lea ecx [ebp-248h] +
call loc_402900  +
mov eax [ebp-268h] +
push dword ptr [eax+4]  +
lea eax [ebp-268h] +
push eax  +
mov ecx eax +
call loc_40CF00  +
push 2Ch  +
push dword ptr [ebp-268h]  +
call sub_41B8B8  +
add esp 8 +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_402C80  +
call sub_42071A  +
call loc_40A5C0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4401EC  +
mov eax large fs:0 +
push eax  +
sub esp 26Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
lea esi [edi+4Ch] +
push esi  +
lea ecx [ebp-230h] +
call sub_402A60  +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-230h] +
cmp dword ptr [ebp-21Ch] 8 +
cmovnb eax [ebp-230h] +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_424D5C  +
add esp 0Ch +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveExtensionW  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_407F55  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_402B00  +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
lea ecx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
call loc_412D80  +
lea eax [ebp-260h] +
mov edx offset asc_452760 +
push eax  +
lea ecx [ebp-278h] +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 2 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_407FCB  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-230h] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-264h] +
cmp edx 8 +
jb loc_40801E  +
mov ecx [ebp-278h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_408014  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4081E6  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
lea edx [ebp-248h] +
mov byte ptr [ebp-4] 3 +
mov ecx esi +
call loc_413110  +
lea edx [ebp-248h] +
lea ecx [ebp-230h] +
call loc_412F40  +
cmp dword ptr [ebp-21Ch] 8 +
lea eax [ebp-230h] +
cmovnb eax [ebp-230h] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_4080F1  +
push ecx  +
mov ecx esi +
call loc_415720  +
add esp 4 +
test eax eax +
jnz loc_4080F1  +
cmp [esi+10h] eax +
jz loc_4080F1  +
cmp [ebp-220h] eax +
jz loc_4080F1  +
cmp dword ptr [ebp-21Ch] 8 +
lea eax [ebp-230h] +
cmovnb eax [ebp-230h] +
cmp dword ptr [esi+14h] 8 +
jb loc_4080B5  +
mov esi [esi] +
push eax  +
push esi  +
call sub_425625  +
add esp 8 +
test eax eax +
jnz loc_4080F1  +
lea ecx [edi+0D4h] +
lea eax [ebp-230h] +
cmp ecx eax +
jz loc_4080ED  +
cmp dword ptr [ebp-21Ch] 8 +
push dword ptr [ebp-220h]  +
cmovnb eax [ebp-230h] +
push eax  +
call loc_402B00  +
mov bl 1 +
jmp loc_4080F3  +
xor bl bl +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_408133  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_408129  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4081EB  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-24Ch] +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
cmp edx 8 +
jb loc_40818C  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_408182  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4081EB  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-21Ch] +
cmp edx 8 +
jb loc_4081C8  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4081BE  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4081EB  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44028E  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
mov [ebp-14h] esi +
mov [ebp-30h] esi +
lea ebx [esi+4] +
mov dword ptr [esi] offset off_452584 +
xor eax eax +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 7 +
mov [ebx] ax +
mov [ebp-4] eax +
mov [esi+2Ch] eax +
mov dword ptr [esi+30h] 7 +
mov [esi+1Ch] ax +
mov [esi+44h] eax +
mov dword ptr [esi+48h] 7 +
mov [esi+34h] ax +
mov [esi+5Ch] eax +
mov dword ptr [esi+60h] 7 +
mov [esi+4Ch] ax +
mov byte ptr [ebp-4] 3 +
call sub_40DE50  +
mov dword ptr [ebp-4] 4 +
lea edi [esi+94h] +
mov dword ptr [esi] offset off_452548 +
xor eax eax +
mov [ebp-14h] edi +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
lea esi [edi+18h] +
mov byte ptr [ebp-4] 5 +
push 40h  +
mov [ebp-34h] esi +
mov [esi] eax +
mov [esi+4] eax +
call sub_41B637  +
add esp 4 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [esi] eax +
xor eax eax +
mov dword ptr [edi+30h] 0 +
mov dword ptr [edi+34h] 7 +
mov [edi+20h] ax +
mov esi [ebp-10h] +
mov [esi+0E4h] eax +
mov dword ptr [esi+0E8h] 7 +
mov [esi+0D4h] ax +
mov [esi+100h] eax +
mov [esi+104h] eax +
mov [esi+108h] eax +
mov byte ptr [ebp-4] 8 +
lea ecx [ebp-2Ch] +
push 11h  +
push offset aRuntimecusto_0  +
mov [esi+90h] eax +
mov byte ptr [esi+0D1h] 1 +
mov [esi+68h] eax +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 0Fh +
mov [ebp-2Ch] al +
call loc_40A5D0  +
mov edx ebx +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-2Ch] +
call loc_412B80  +
mov byte ptr [ebp-4] 8 +
mov edx [ebp-18h] +
cmp edx 10h +
jb loc_408389  +
mov ecx [ebp-2Ch] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40837F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4083B4  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx esi +
call loc_4138F0  +
mov ecx esi +
call loc_414960  +
mov byte ptr [esi+0D0h] 0 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_42071A  +
push 0FFFFFFFFh  +
push offset loc_440308  +
mov eax large fs:0 +
push eax  +
mov eax 109Ch +
call sub_41C6B0  +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov edi [ebp+arg_14] +
mov ebx [ebp+arg_18] +
mov [ebp+var_109C] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1098] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_1094] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_10A0] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_1090] ecx +
mov [ebp+var_108C] edx +
cmp [esi+64h] eax +
jg loc_408807  +
cmp [ebp+arg_2C] 0 +
jz loc_4084D3  +
mov ecx [esi+90h] +
test ecx ecx +
jz loc_4084BB  +
cmp byte ptr [esi+0D1h] 0 +
jz loc_4084BB  +
sub esp 8 +
call sub_4156F0  +
test al al +
jz loc_4084BB  +
mov ecx [esi+0F8h] +
sub ecx [esi+0F0h] +
mov eax [esi+0FCh] +
sbb eax [esi+0F4h] +
js loc_4084C7  +
jg loc_408489  +
cmp ecx 384h +
jb loc_4084C7  +
push ecx  +
mov ecx esi +
call loc_413350  +
mov ecx [ebp+var_1090] +
mov edx [ebp+var_108C] +
test al al +
jz loc_4084D3  +
mov eax [esi+0F8h] +
mov [esi+0F0h] eax +
mov eax [esi+0FCh] +
mov [esi+0F4h] eax +
jmp loc_4084D3  +
mov byte ptr [esi+0D1h] 0 +
jmp loc_408807  +
mov edx [ebp+var_108C] +
mov ecx [ebp+var_1090] +
cmp byte ptr [esi+0D0h] 0 +
jz loc_4084F7  +
push 0  +
push 0  +
push [ebp+var_1098]  +
push [ebp+var_109C]  +
push edx  +
push ecx  +
push 1Eh  +
mov ecx esi +
call loc_4145A0  +
xor eax eax +
mov [ebp+var_1060] 0 +
mov [ebp+var_105C] 7 +
mov word ptr [ebp+var_1070] ax +
mov [ebp+var_4] eax +
mov [ebp+var_1048] eax +
mov [ebp+var_1044] 7 +
mov word ptr [ebp+var_1058] ax +
mov [ebp+var_1030] eax +
mov [ebp+var_102C] 7 +
mov word ptr [ebp+var_1040] ax +
mov [ebp+var_1078] eax +
mov [ebp+var_1074] 7 +
mov word ptr [ebp+var_1088] ax +
mov byte ptr [ebp+var_4] 3 +
test edi edi +
jz loc_4085BC  +
mov ecx edi +
mov [ebp+var_1018] eax +
mov [ebp+var_1014] 0Fh +
mov byte ptr [ebp+var_1028] al +
lea edx [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_408580  +
sub ecx edx +
push ecx  +
push edi  +
lea ecx [ebp+var_1028] +
call loc_40A5D0  +
lea edx [ebp+var_1070] +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_1028] +
call loc_412B80  +
lea ecx [ebp+var_1028] +
mov byte ptr [ebp+var_4] 3 +
call loc_409760  +
jmp loc_4085CE  +
push 0  +
push offset unk_44EABC  +
lea ecx [ebp+var_1070] +
call loc_402B00  +
test ebx ebx +
jz loc_40862E  +
mov ecx ebx +
mov [ebp+var_1018] 0 +
mov [ebp+var_1014] 0Fh +
mov byte ptr [ebp+var_1028] 0 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4085F2  +
sub ecx edx +
push ecx  +
push ebx  +
lea ecx [ebp+var_1028] +
call loc_40A5D0  +
lea edx [ebp+var_1058] +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_1028] +
call loc_412B80  +
lea ecx [ebp+var_1028] +
mov byte ptr [ebp+var_4] 3 +
call loc_409760  +
jmp loc_408640  +
push 0  +
push offset unk_44EABC  +
lea ecx [ebp+var_1058] +
call loc_402B00  +
mov eax [ebp+var_10A0] +
test eax eax +
jnz loc_408652  +
mov edx [ebp+var_1094] +
jmp loc_408681  +
push eax  +
push 0  +
push [ebp+var_1094]  +
lea eax [ebp+var_1010] +
push 0FFFFFFFFh  +
push 0FFFh  +
push eax  +
call sub_404490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_4230AE  +
add esp 20h +
lea edx [ebp+var_1010] +
mov ecx edx +
mov [ebp+var_1018] 0 +
mov [ebp+var_1014] 0Fh +
mov byte ptr [ebp+var_1028] 0 +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4086A1  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp+var_1028] +
call loc_40A5D0  +
lea edx [ebp+var_1088] +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_1028] +
call loc_412B80  +
lea ecx [ebp+var_1028] +
mov byte ptr [ebp+var_4] 3 +
call loc_409760  +
cmp [ebp+var_1074] 8 +
lea edx [ebp+var_1088] +
lea ecx [ebp+var_1058] +
cmovnb edx [ebp+var_1088] +
lea edi [ebp+var_1040] +
cmp [ebp+var_1044] 8 +
lea eax [ebp+var_1070] +
push edi  +
cmovnb ecx [ebp+var_1058] +
cmp [ebp+var_105C] 8 +
push edx  +
cmovnb eax [ebp+var_1070] +
push ecx  +
push eax  +
push [ebp+var_1098]  +
mov ecx esi +
push [ebp+var_109C]  +
push [ebp+var_108C]  +
push [ebp+var_1090]  +
push [ebp+arg_0]  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
call loc_405F90  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_4087A7  +
mov [ebp+var_1018] 0 +
mov [ebp+var_1014] 0Fh +
mov byte ptr [ebp+var_1028] 0 +
lea edx [ebp+var_1028] +
mov byte ptr [ebp+var_4] 7 +
mov ecx edi +
call sub_412AE0  +
cmp [ebp+var_1014] 10h +
lea eax [ebp+var_1028] +
mov ecx esi +
cmovnb eax [ebp+var_1028] +
push eax  +
call loc_405CF0  +
lea ecx [ebp+var_1028] +
call loc_409760  +
jmp loc_4087C3  +
cmp [ebp+var_102C] 8 +
lea eax [ebp+var_1040] +
mov ecx esi +
cmovnb eax [ebp+var_1040] +
push eax  +
call loc_405C60  +
cmp [ebp+arg_2C] 0 +
jz loc_4087DB  +
mov eax [esi+90h] +
test eax eax +
jz loc_4087DB  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
lea ecx [ebp+var_1088] +
call loc_4029B0  +
lea ecx [ebp+var_1040] +
call loc_4029B0  +
lea ecx [ebp+var_1058] +
call loc_4029B0  +
lea ecx [ebp+var_1070] +
call loc_4029B0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
add ebx [ebp+arg_C] +
push esi  +
adc eax [ebp+arg_10] +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_8] esi +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+28h+var_C] eax +
mov eax [edi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_40886F  +
cmp [edi+38h] ecx +
jnb loc_40886F  +
mov [edi+38h] ecx +
mov eax [edi+0Ch] +
mov edx [eax] +
mov eax [edi+38h] +
mov [esp+28h+var_14] eax +
sub eax edx +
sar eax 1 +
mov [esp+28h+var_18] edx +
cdq   +
cmp [esp+28h+var_10] edx +
ja loc_408938  +
jb loc_408898  +
cmp ebx eax +
ja loc_408938  +
mov edx [ebp+arg_1C] +
mov eax ebx +
or eax [esp+28h+var_10] +
jz loc_4088BC  +
test dl 1 +
jz loc_4088B3  +
cmp [esp+28h+var_C] 0 +
jz loc_408938  +
test dl 2 +
jz loc_4088BC  +
test ecx ecx +
jz loc_408938  +
mov eax [esp+28h+var_18] +
lea eax [eax+ebx*2] +
test dl 1 +
jz loc_4088F7  +
cmp [esp+28h+var_C] 0 +
jz loc_4088F7  +
mov edx [edi+1Ch] +
mov esi [esp+28h+var_18] +
mov [edx] eax +
mov eax [esp+28h+var_14] +
lea edx [esi+ebx*2] +
mov esi [esp+28h+var_8] +
sub eax edx +
sar eax 1 +
mov [esp+28h+var_14] eax +
mov eax [edi+2Ch] +
mov edx [esp+28h+var_14] +
mov [eax] edx +
mov edx [ebp+arg_1C] +
test dl 2 +
jz loc_40892D  +
test ecx ecx +
jz loc_40892D  +
mov eax [edi+30h] +
mov edx [esp+28h+var_18] +
mov esi edx +
mov ecx [eax] +
mov eax [edi+20h] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [edi+10h] +
mov [eax] edx +
lea edx [esi+ebx*2] +
mov eax [edi+20h] +
sub ecx edx +
mov esi [esp+28h+var_8] +
sar ecx 1 +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
mov eax [esp+28h+var_10] +
mov [esi] ebx +
mov [esi+4] eax +
jmp loc_408945  +
mov dword ptr [esi] 0FFFFFFFFh +
mov dword ptr [esi+4] 0FFFFFFFFh +
mov dword ptr [esi+8] 0 +
xorps xmm0 xmm0 +
mov dword ptr [esi+0Ch] 0 +
mov eax esi +
pop edi  +
movq qword ptr [esi+10h] xmm0 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
sub esp 24h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+1Ch] +
mov eax [eax] +
mov [esp+30h+var_20] eax +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_408998  +
cmp [esi+38h] ecx +
jnb loc_408998  +
mov [esi+38h] ecx +
mov eax [esi+0Ch] +
mov ebx [ebp+arg_10] +
mov edx [eax] +
mov eax [esi+38h] +
mov edi eax +
mov [esp+30h+var_1C] eax +
sub edi edx +
mov eax [ebp+arg_C] +
sar edi 1 +
mov [esp+30h+var_C] edx +
mov [esp+30h+var_8] edi +
sub eax 0 +
jz loc_408A23  +
sub eax 1 +
jz loc_4089D4  +
sub eax 1 +
jnz loc_408AE6  +
mov eax edi +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_408A34  +
mov eax ebx +
and eax 3 +
cmp al 3 +
jz loc_408AE6  +
test bl 1 +
jz loc_408A01  +
mov eax [esp+30h+var_20] +
test eax eax +
jnz loc_4089F6  +
test edx edx +
jnz loc_408AE6  +
sub eax edx +
sar eax 1 +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_408A34  +
test bl 2 +
jz loc_408AE6  +
test ecx ecx +
jnz loc_408A16  +
test edx edx +
jnz loc_408AE6  +
mov eax ecx +
sub eax edx +
sar eax 1 +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_408A34  +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+18h] xmm0 +
mov eax [esp+30h+var_14] +
mov edi [esp+30h+var_18] +
add edi [ebp+arg_4] +
adc eax [ebp+arg_8] +
mov [esp+30h+var_18] eax +
mov eax [esp+30h+var_8] +
cdq   +
cmp [esp+30h+var_18] edx +
ja loc_408AE6  +
jb loc_408A57  +
cmp edi eax +
ja loc_408AE6  +
mov eax edi +
or eax [esp+30h+var_18] +
jz loc_408A74  +
test bl 1 +
jz loc_408A6B  +
cmp [esp+30h+var_20] 0 +
jz loc_408AE6  +
test bl 2 +
jz loc_408A74  +
test ecx ecx +
jz loc_408AE6  +
mov edx [esp+30h+var_C] +
lea eax [edx+edi*2] +
mov [esp+30h+var_8] eax +
test bl 1 +
jz loc_408AAB  +
cmp [esp+30h+var_20] 0 +
jz loc_408AAB  +
mov edx [esi+1Ch] +
mov [edx] eax +
mov eax [esp+30h+var_1C] +
sub eax [esp+30h+var_8] +
sar eax 1 +
mov [esp+30h+var_1C] eax +
mov eax [esi+2Ch] +
mov edx [esp+30h+var_1C] +
mov [eax] edx +
mov edx [esp+30h+var_C] +
test bl 2 +
jz loc_408AD8  +
test ecx ecx +
jz loc_408AD8  +
mov eax [esi+30h] +
mov ecx [eax] +
mov eax [esi+20h] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+10h] +
mov [eax] edx +
mov eax [esi+20h] +
mov edx [esp+30h+var_8] +
sub ecx edx +
sar ecx 1 +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [ebp+arg_0] +
mov ecx [esp+30h+var_18] +
mov [eax] edi +
mov [eax+4] ecx +
jmp loc_408AF6  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0FFFFFFFFh +
pop edi  +
xorps xmm0 xmm0 +
mov dword ptr [eax+8] 0 +
pop esi  +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+1Ch] +
mov esi [edi] +
test esi esi +
jz loc_408B75  +
mov ecx [edx+2Ch] +
mov ecx [ecx] +
lea ecx [esi+ecx*2] +
cmp esi ecx +
jnb loc_408B3F  +
mov ax [esi] +
pop edi  +
pop esi  +
retn   +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_408B75  +
test byte ptr [edx+3Ch] 4 +
jnz loc_408B75  +
mov ecx [edx+38h] +
cmp ecx eax +
cmovb ecx eax +
cmp ecx esi +
jbe loc_408B75  +
mov [edx+38h] ecx +
mov eax [edi] +
sub ecx eax +
mov [edi] eax +
mov eax [edx+2Ch] +
sar ecx 1 +
pop edi  +
pop esi  +
mov [eax] ecx +
mov eax [edx+1Ch] +
mov eax [eax] +
mov ax [eax] +
retn   +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
***
mov edx ecx +
push esi  +
push edi  +
mov edi 0FFFFh +
mov eax [edx+1Ch] +
mov esi [eax] +
test esi esi +
jz loc_408BDA  +
mov eax [edx+0Ch] +
cmp esi [eax] +
jbe loc_408BDA  +
mov cx [ebp+arg_0] +
cmp di cx +
jz loc_408BB1  +
cmp cx [esi-2] +
jz loc_408BB1  +
test byte ptr [edx+3Ch] 2 +
jnz loc_408BDA  +
mov eax [edx+2Ch] +
inc dword ptr [eax]  +
mov eax [edx+1Ch] +
add dword ptr [eax] 0FFFFFFFEh +
cmp di cx +
jz loc_408BC9  +
mov eax [edx+1Ch] +
mov eax [eax] +
mov [eax] cx +
xor edx edx +
movzx eax cx +
cmp cx di +
pop edi  +
cmovz eax edx +
pop esi  +
pop ebp  +
retn 4  +
mov ax di +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 0Ch +
mov eax 0FFFFh +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
test byte ptr [edi+3Ch] 2 +
jnz loc_408D60  +
mov bx [ebp+arg_0] +
cmp ax bx +
jnz loc_408C1E  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [edi+20h] +
mov edx [edi+30h] +
mov eax [eax] +
mov esi [edx] +
mov [ebp+var_4] eax +
lea ecx [eax+esi*2] +
test eax eax +
jz loc_408C5A  +
cmp eax ecx +
jnb loc_408C5A  +
lea ecx [esi-1] +
mov [edx] ecx +
mov edx [edi+20h] +
mov esi [edx] +
lea ecx [esi+2] +
mov [edx] ecx +
lea ecx [eax+2] +
mov [esi] bx +
mov ax bx +
mov [edi+38h] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [edi+0Ch] +
xor ebx ebx +
mov eax [eax] +
mov [ebp+var_C] eax +
cmp [ebp+var_4] ebx +
jz loc_408C94  +
mov ebx ecx +
sub ebx eax +
sar ebx 1 +
cmp ebx 20h +
jb loc_408C94  +
cmp ebx 3FFFFFFFh +
jnb loc_408C81  +
lea eax [ebx+ebx] +
jmp loc_408C99  +
cmp ebx 7FFFFFFFh +
jnb loc_408D5B  +
mov eax 7FFFFFFFh +
jmp loc_408C99  +
mov eax 20h +
lea ecx [edi+40h] +
mov [ebp+var_8] eax +
push eax  +
call loc_402C90  +
lea esi [ebx+ebx] +
mov [ebp+var_4] eax +
push esi  +
push [ebp+var_C]  +
push eax  +
call loc_41D210  +
mov edx [ebp+var_4] +
add esp 0Ch +
mov ecx [ebp+var_8] +
add edx esi +
mov esi [ebp+var_4] +
add ecx ecx +
sub ecx edx +
add ecx esi +
lea eax [edx+2] +
sar ecx 1 +
mov [edi+38h] eax +
mov eax [edi+10h] +
mov [eax] esi +
mov eax [edi+20h] +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
test byte ptr [edi+3Ch] 4 +
jz loc_408CFD  +
mov eax [edi+0Ch] +
mov [eax] esi +
mov eax [edi+1Ch] +
sar esi 1 +
mov dword ptr [eax] 0 +
mov eax [edi+2Ch] +
mov [eax] esi +
jmp loc_408D20  +
mov eax [edi+1Ch] +
mov edx [edi+38h] +
mov eax [eax] +
sub eax [ebp+var_C] +
sar eax 1 +
lea ecx [esi+eax*2] +
mov eax [edi+0Ch] +
sub edx ecx +
sar edx 1 +
mov [eax] esi +
mov eax [edi+1Ch] +
mov [eax] ecx +
mov eax [edi+2Ch] +
mov [eax] edx +
mov eax [edi+3Ch] +
test al 1 +
jz loc_408D36  +
push ebx  +
push [ebp+var_C]  +
lea ecx [edi+40h] +
call loc_402CF0  +
mov eax [edi+3Ch] +
or eax 1 +
mov [edi+3Ch] eax +
mov eax [edi+30h] +
dec dword ptr [eax]  +
mov ecx [edi+20h] +
pop edi  +
pop esi  +
pop ebx  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov ax [ebp+arg_0] +
mov [edx] ax +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax 0FFFFh +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi ecx +
test byte ptr [esi+3Ch] 1 +
mov dword ptr [esi] offset off_4524C8 +
jz loc_408DD2  +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_408D93  +
mov eax [esi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
jmp loc_408DA0  +
mov eax [esi+2Ch] +
mov ecx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+0Ch] +
mov eax [eax] +
sub ecx eax +
and ecx 0FFFFFFFEh +
cmp ecx 1000h +
jb loc_408DC8  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_408E60  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov ebx [esi+34h] +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi] offset off_452508 +
test ebx ebx +
jz loc_408E5D  +
push edi  +
mov edi [ebx+4] +
test edi edi +
jz loc_408E51  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_408E51  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
push 8  +
push ebx  +
call sub_41B8B8  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call sub_42071A  +
retn   +
***
retn 0Ch  +
***
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0FFFFFFFFh +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebp  +
retn 20h  +
***
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0FFFFFFFFh +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_10] edx +
mov ecx ebx +
mov [esp+18h+var_4] ecx +
push esi  +
mov esi [ebp+arg_4] +
mov eax esi +
mov [esp+1Ch+var_8] eax +
push edi  +
test ebx ebx +
jl loc_408FE5  +
jg loc_408F36  +
test esi esi +
jz loc_408FE5  +
mov ecx edx +
call sub_40A550  +
mov edi eax +
mov eax edx +
mov [esp+20h+var_C] eax +
test eax eax +
jl loc_408F91  +
jg loc_408F4F  +
test edi edi +
jz loc_408F91  +
cmp ebx eax +
jg loc_408F5F  +
jl loc_408F59  +
cmp esi edi +
jnb loc_408F5F  +
mov edi esi +
mov [esp+20h+var_C] ebx +
mov ecx [esp+20h+var_10] +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
mov eax [ecx+20h] +
push dword ptr [eax]  +
call loc_41D210  +
mov edx [esp+2Ch+var_10] +
lea ecx [edi+edi] +
add esp 0Ch +
sub esi edi +
sbb ebx [esp+20h+var_C] +
mov eax [edx+30h] +
sub [eax] edi +
mov eax [edx+20h] +
add [eax] ecx +
jmp loc_408FC8  +
mov ecx [esp+20h+var_10] +
mov eax [ebp+arg_0] +
mov ecx [ecx] +
movzx eax word ptr [eax] +
push eax  +
mov edi [ecx+0Ch] +
mov ecx edi +
call ds:off_442218  +
mov ecx [esp+24h+var_10] +
call edi  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_408FDD  +
mov edx [esp+24h+var_14] +
add esi 0FFFFFFFFh +
mov ecx 2 +
adc ebx 0FFFFFFFFh +
add [ebp+arg_0] ecx +
test ebx ebx +
jg loc_408F36  +
jl loc_408FDD  +
test esi esi +
jnz loc_408F36  +
mov eax [esp+24h+var_C] +
mov ecx [esp+24h+var_8] +
sub eax esi +
pop edi  +
sbb ecx ebx +
pop esi  +
mov edx ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
mov eax esi +
mov [esp+24h+var_8] eax +
push edi  +
mov edi ecx +
mov ecx ebx +
mov [esp+28h+var_18] edi +
mov [esp+28h+var_4] ecx +
test ebx ebx +
jl loc_409117  +
jg loc_409036  +
test esi esi +
jz loc_409117  +
mov ecx edi +
call sub_40A570  +
mov ecx edx +
mov [esp+28h+var_14] eax +
mov [esp+28h+var_10] ecx +
test ecx ecx +
jl loc_409097  +
jg loc_409051  +
test eax eax +
jz loc_409097  +
cmp ebx ecx +
jg loc_409065  +
jl loc_40905B  +
cmp esi eax +
jnb loc_409065  +
mov eax esi +
mov [esp+28h+var_14] esi +
mov [esp+28h+var_10] ebx +
mov ecx [ebp+arg_0] +
add eax eax +
push eax  +
mov [esp+2Ch+var_C] eax +
mov eax [edi+1Ch] +
push dword ptr [eax]  +
push ecx  +
call loc_41D210  +
mov ecx [esp+34h+var_14] +
add esp 0Ch +
mov eax [edi+2Ch] +
sub esi ecx +
sbb ebx [esp+28h+var_10] +
sub [eax] ecx +
mov eax [edi+1Ch] +
mov ecx [esp+28h+var_C] +
add [eax] ecx +
jmp loc_4090FA  +
mov ecx [edi] +
mov [esp+28h+var_C] ecx +
mov eax [ecx+1Ch] +
cmp eax offset sub_409140 +
jnz loc_409126  +
mov edi [ecx+18h] +
mov ecx edi +
call ds:off_442218  +
mov ecx [esp+28h+var_18] +
call edi  +
mov edi [esp+28h+var_18] +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_4090CA  +
mov eax ecx +
jmp loc_4090DC  +
mov eax [edi+2Ch] +
dec dword ptr [eax]  +
mov ecx [edi+1Ch] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
movzx eax ax +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_40910F  +
mov ecx [ebp+arg_0] +
add esi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [ecx] ax +
mov ecx 2 +
add [ebp+arg_0] ecx +
test ebx ebx +
jg loc_409036  +
jl loc_40910F  +
test esi esi +
jnz loc_409036  +
mov eax [esp+28h+var_8] +
mov ecx [esp+28h+var_4] +
sub eax esi +
pop edi  +
sbb ecx ebx +
pop esi  +
mov edx ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx eax +
call ds:off_442218  +
mov eax [esp+28h+var_C] +
mov ecx edi +
call dword ptr [eax+1Ch]  +
jmp loc_4090DC  +
***
mov edi ecx +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_409164  +
pop edi  +
mov eax ecx +
pop esi  +
retn   +
mov eax [edi+2Ch] +
dec dword ptr [eax]  +
mov ecx [edi+1Ch] +
pop edi  +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
retn   +
***
retn   +
***
xor edx edx +
retn   +
***
mov eax 0FFFFh +
retn 4  +
***
push edi  +
mov edi [ecx+34h] +
mov dword ptr [ecx] offset off_452508 +
test edi edi +
jz loc_40920D  +
push ebx  +
mov ebx [edi+4] +
test ebx ebx +
jz loc_409201  +
mov eax [ebx] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx ebx +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_409200  +
mov ecx [ebx] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx ebx +
call esi  +
pop esi  +
push 8  +
push edi  +
call sub_41B8B8  +
add esp 8 +
pop ebx  +
pop edi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_440362  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] 0 +
lea esi [ebx+10h] +
mov dword ptr [ebx] offset unk_45280C +
mov dword ptr [esi] offset unk_452814 +
mov dword ptr [ebx+68h] offset off_452484 +
mov [ebp+var_4] 0 +
lea edi [ebx+18h] +
mov eax [ebx] +
mov [ebp+var_10] 1 +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_45248C +
mov eax [ebx] +
mov ecx [eax+4] +
push ecx  +
push edi  +
lea eax [ecx-18h] +
mov [ecx+ebx-4] eax +
mov eax [ebx] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov ecx [eax+4] +
add ecx ebx +
call sub_40BE00  +
mov [ebp+var_18] esi +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4524C0 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-4] eax +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_4524B8 +
mov eax [ebx] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+ebx-4] eax +
mov [ebp+var_4] 5 +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_452570 +
mov eax [ebx] +
mov ecx [eax+4] +
mov [ebp+var_18] edi +
lea eax [ecx-68h] +
mov [ecx+ebx-4] eax +
mov ecx edi +
call sub_40B9D0  +
mov dword ptr [edi] offset off_4524C8 +
mov eax ebx +
mov dword ptr [edi+38h] 0 +
mov dword ptr [edi+3Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-20h] offset off_4524B8 +
mov eax [ecx-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+ecx-24h] eax +
lea edx [ecx-8] +
mov eax [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_4524C0 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov eax [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_45248C +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_440390  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_14] ebx +
xor esi esi +
lea ecx [ebp+var_24] +
push ebx  +
mov [ebp+var_1C] esi +
call sub_40A3D0  +
mov [ebp+var_4] esi +
cmp [ebp+var_20] 0 +
jz loc_4094B2  +
mov eax [ebx] +
mov eax [eax+4] +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_28] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
call sub_40C1F0  +
mov edi [ebp+var_28] +
add esp 4 +
mov [ebp+var_18] eax +
test edi edi +
jz loc_40943E  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40943E  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
push [ebp+arg_0]  +
mov edi [ebp+var_18] +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebx] +
mov esi [edi] +
mov ecx [eax+4] +
movzx eax word ptr [ecx+ebx+40h] +
add ecx ebx +
mov esi [esi+20h] +
push eax  +
push ecx  +
mov byte ptr [ebp+var_2C] 0 +
lea eax [ebp+var_2C] +
push dword ptr [ecx+38h]  +
mov ecx esi +
push [ebp+var_2C]  +
push eax  +
call ds:off_442218  +
mov ecx edi +
call esi  +
xor esi esi +
mov edx 4 +
cmp byte ptr [ebp+var_2C] 0 +
mov [ebp+var_4] 0 +
cmovnz esi edx +
jmp loc_4094B7  +
mov edx [ebp-14h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40A590  +
mov eax offset loc_4094A5 +
retn   +
mov ebx [ebp-14h] +
mov esi [ebp-1Ch] +
mov dword ptr [ebp-4] 0 +
mov edx 4 +
mov eax [ebx] +
push 0  +
mov ecx [eax+4] +
xor eax eax +
add ecx ebx +
cmp [ecx+38h] eax +
cmovnz edx eax +
or edx [ecx+0Ch] +
or edx esi +
push edx  +
call loc_405220  +
mov [ebp+var_4] 4 +
call sub_41A82A  +
test al al +
jnz loc_4094EB  +
mov ecx [ebp+var_24] +
call sub_40BB50  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_24] +
mov eax [ecx] +
mov eax [eax+4] +
mov esi [eax+ecx+38h] +
test esi esi +
jz loc_40950C  +
mov eax [esi] +
mov edi [eax+8] +
cmp edi offset nullsub_1 +
jnz loc_409522  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edi +
call ds:off_442218  +
mov ecx esi +
call edi  +
jmp loc_40950C  +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_45248C +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4403B0  +
mov eax large fs:0 +
push eax  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_4524B0 +
call sub_41A862  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_4095B2  +
push eax  +
call sub_424926  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
mov eax edx +
push esi  +
push edi  +
mov esi ecx +
lea edi [eax+2] +
nop   +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4095D0  +
sub eax edi +
mov ecx esi +
sar eax 1 +
push eax  +
push edx  +
call loc_402B00  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp esi edi +
jz loc_409663  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_409633  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_409629  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40966B  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
movups xmm0 oword ptr [edi] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
mov [edi+10h] eax +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
xor eax eax +
push edi  +
mov edi ecx +
mov [ebp-8] edi +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
cmp ebx 7 +
ja loc_4096DA  +
mov [edi+10h] ebx +
test ebx ebx +
jz loc_4096CA  +
mov eax [ebp+0Ch] +
mov ecx ebx +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov edi [ebp-8] +
xor eax eax +
mov [edi+ebx*2] ax +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp ebx 7FFFFFFEh +
ja loc_409752  +
mov eax ebx +
or eax 7 +
cmp eax 7FFFFFFEh +
jbe loc_4096F5  +
mov eax 7FFFFFFEh +
jmp loc_4096FF  +
mov ecx 0Ah +
cmp eax ecx +
cmovb eax ecx +
xor ecx ecx +
mov [ebp-4] eax +
add eax 1 +
push esi  +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx edi +
call loc_402C90  +
mov esi eax +
mov [edi+10h] ebx +
mov eax [ebp-4] +
mov ecx ebx +
mov [edi+14h] eax +
mov edi esi +
mov eax [ebp+0Ch] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov edi [ebp-8] +
xor eax eax +
mov [esi+ebx*2] ax +
mov eax edi +
mov [edi] esi +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_403250  +
push esi  +
mov esi ecx +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_409792  +
mov eax [esi] +
inc ecx  +
cmp ecx 1000h +
jb loc_409788  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4097A5  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
call sub_42071A  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [edi+14h] 10h +
mov eax [edi+10h] +
mov [ebp+var_4] eax +
jb loc_4097D8  +
mov edi [edi] +
cmp eax 10h +
jnb loc_4097F9  +
movups xmm0 oword ptr [edi] +
mov ebx 0Fh +
pop edi  +
movups oword ptr [esi] xmm0 +
mov [esi+10h] eax +
mov eax esi +
mov [esi+14h] ebx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ebx eax +
mov eax 7FFFFFFFh +
or ebx 0Fh +
cmp ebx eax +
cmova ebx eax +
lea eax [ebx+1] +
push eax  +
call loc_40A9D0  +
mov ecx eax +
mov eax [ebp+var_4] +
inc eax  +
mov [esi] ecx +
push eax  +
push edi  +
push ecx  +
call loc_41D210  +
mov eax [ebp+var_4] +
add esp 0Ch +
mov [esi+10h] eax +
mov eax esi +
mov [esi+14h] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call loc_408D70  +
test [ebp+arg_0] 1 +
jz loc_40985C  +
push 44h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push edi  +
mov edi ecx +
mov ebx [edi+34h] +
mov dword ptr [edi] offset off_452508 +
test ebx ebx +
jz loc_4098C8  +
mov eax [ebx+4] +
mov [ebp+var_4] eax +
test eax eax +
jz loc_4098BD  +
mov eax [eax] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx [ebp+var_4] +
call esi  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_4098BC  +
mov ecx [eax] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx [ebp+var_4] +
call esi  +
pop esi  +
push 8  +
push ebx  +
call sub_41B8B8  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_4098D9  +
push 38h  +
push edi  +
call sub_41B8B8  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-68h] +
mov ecx esi +
call sub_405ED0  +
test [ebp+arg_0] 1 +
jz loc_409912  +
push 0B0h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4403D0  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi-20h] +
lea edi [esi-20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-20h] offset off_4524B8 +
mov eax [edi] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+esi-24h] eax +
mov eax [esi-10h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-10h] offset off_4524C0 +
mov eax [esi-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-14h] eax +
mov eax [esi-20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-20h] offset off_45248C +
mov eax [esi-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-24h] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_4524B0 +
call sub_41A862  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4099C0  +
push 68h  +
push edi  +
call sub_41B8B8  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43FF00  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx-8] +
lea esi [ecx-8] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_4524C0 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_4524B0 +
call sub_41A862  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_409A47  +
push 50h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43FF00  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx-18h] +
lea esi [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_45248C +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_4524B0 +
call sub_41A862  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_409AC7  +
push 60h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+4Ch+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push eax  +
push offset aP  +
lea eax [esp+60h+var_48] +
mov edi ecx +
push 40h  +
push eax  +
call sub_404530  +
push eax  +
lea eax [esp+6Ch+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40AC90  +
mov ecx [esp+88h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4403F8  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-44h] ecx +
mov eax [ebp+8] +
xor edx edx +
mov esi [ebp+14h] +
mov edi 0Fh +
mov [ebp-48h] eax +
mov [ebp-40h] esi +
mov [ebp-20h] edx +
mov [ebp-1Ch] edi +
mov [ebp-30h] dl +
mov [ebp-4] edx +
mov eax [esi+14h] +
mov ecx [esi+18h] +
and eax 3000h +
mov esi [esi+1Ch] +
mov [ebp-3Ch] ecx +
test esi esi +
jg loc_409C28  +
jl loc_409C17  +
test ecx ecx +
jnz loc_409C28  +
cmp eax 2000h +
jz loc_409C28  +
mov ecx 6 +
xor esi esi +
mov [ebp-3Ch] ecx +
mov [ebp-34h] esi +
mov esi ecx +
cmp eax 2000h +
jnz loc_409C8A  +
movsd xmm1 qword ptr [ebp+1Ch] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_453B50 +
comisd xmm0 ds:qword_453B40 +
jbe loc_409C8A  +
lea eax [ebp-34h] +
push eax  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
call sub_424941  +
mov eax [ebp-34h] +
add esp 0Ch +
cdq   +
fstp  st +
xor eax edx +
mov edi [ebp-1Ch] +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx [ebp-20h] +
add esi eax +
xor ecx ecx +
add esi 32h +
setb cl  +
neg ecx  +
or ecx esi +
cmp ecx edx +
ja loc_409CAD  +
cmp edi 10h +
mov [ebp-20h] ecx +
lea eax [ebp-30h] +
cmovnb eax [ebp-30h] +
mov byte ptr [eax+ecx] 0 +
jmp loc_409CBA  +
sub ecx edx +
push 0  +
push ecx  +
lea ecx [ebp-30h] +
call loc_40A6D0  +
cmp dword ptr [ebp-1Ch] 10h +
lea edi [ebp-30h] +
movsd xmm0 qword ptr [ebp+1Ch] +
cmovnb edi [ebp-30h] +
sub esp 8 +
mov eax [ebp-40h] +
mov esi [ebp-20h] +
movsd qword ptr [esp] xmm0 +
push dword ptr [ebp-3Ch]  +
push dword ptr [eax+14h]  +
lea eax [ebp-18h] +
push 4Ch  +
push eax  +
push dword ptr [ebp-44h]  +
call sub_40B8B0  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_404530  +
cmp dword ptr [ebp-1Ch] 10h +
lea ecx [ebp-30h] +
mov esi [ebp-48h] +
cmovnb ecx [ebp-30h] +
push eax  +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
push dword ptr [ebp-44h]  +
call loc_40B2C0  +
mov edx [ebp-1Ch] +
add esp 38h +
cmp edx 10h +
jb loc_409D4F  +
mov ecx [ebp-30h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_409D45  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_409D6E  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4403F8  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-44h] ecx +
mov eax [ebp+8] +
xor edx edx +
mov esi [ebp+14h] +
mov edi 0Fh +
mov [ebp-48h] eax +
mov [ebp-40h] esi +
mov [ebp-20h] edx +
mov [ebp-1Ch] edi +
mov [ebp-30h] dl +
mov [ebp-4] edx +
mov eax [esi+14h] +
mov ecx [esi+18h] +
and eax 3000h +
mov esi [esi+1Ch] +
mov [ebp-3Ch] ecx +
test esi esi +
jg loc_409DF8  +
jl loc_409DE7  +
test ecx ecx +
jnz loc_409DF8  +
cmp eax 2000h +
jz loc_409DF8  +
mov ecx 6 +
xor esi esi +
mov [ebp-3Ch] ecx +
mov [ebp-34h] esi +
mov esi ecx +
cmp eax 2000h +
jnz loc_409E5A  +
movsd xmm1 qword ptr [ebp+1Ch] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_453B50 +
comisd xmm0 ds:qword_453B40 +
jbe loc_409E5A  +
lea eax [ebp-34h] +
push eax  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
call sub_424941  +
mov eax [ebp-34h] +
add esp 0Ch +
cdq   +
fstp  st +
xor eax edx +
mov edi [ebp-1Ch] +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx [ebp-20h] +
add esi eax +
xor ecx ecx +
add esi 32h +
setb cl  +
neg ecx  +
or ecx esi +
cmp ecx edx +
ja loc_409E7D  +
cmp edi 10h +
mov [ebp-20h] ecx +
lea eax [ebp-30h] +
cmovnb eax [ebp-30h] +
mov byte ptr [eax+ecx] 0 +
jmp loc_409E8A  +
sub ecx edx +
push 0  +
push ecx  +
lea ecx [ebp-30h] +
call loc_40A6D0  +
cmp dword ptr [ebp-1Ch] 10h +
lea edi [ebp-30h] +
movsd xmm0 qword ptr [ebp+1Ch] +
cmovnb edi [ebp-30h] +
sub esp 8 +
mov eax [ebp-40h] +
mov esi [ebp-20h] +
movsd qword ptr [esp] xmm0 +
push dword ptr [ebp-3Ch]  +
push dword ptr [eax+14h]  +
lea eax [ebp-18h] +
push 0  +
push eax  +
push dword ptr [ebp-44h]  +
call sub_40B8B0  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_404530  +
cmp dword ptr [ebp-1Ch] 10h +
lea ecx [ebp-30h] +
mov esi [ebp-48h] +
cmovnb ecx [ebp-30h] +
push eax  +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
push dword ptr [ebp-44h]  +
call loc_40B2C0  +
mov edx [ebp-1Ch] +
add esp 38h +
cmp edx 10h +
jb loc_409F1F  +
mov ecx [ebp-30h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_409F15  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_409F3E  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_42071A  +
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_458018 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLu  +
push eax  +
push edi  +
call sub_40B230  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_404530  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40AC90  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_458018 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLd  +
push eax  +
push edi  +
call sub_40B230  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_404530  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40AC90  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_458018 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLu_0  +
push eax  +
push edi  +
call sub_40B230  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_404530  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40AC90  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_458018 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLd_0  +
push eax  +
push edi  +
call sub_40B230  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_404530  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40AC90  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_440430  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_30] edi +
mov ebx [ebp+arg_C] +
movzx edx [ebp+arg_10] +
mov ecx [ebp+arg_0] +
mov [ebp+var_38] ecx +
test dword ptr [ebx+14h] 4000h +
mov [ebp+var_34] edx +
jnz loc_40A1D0  +
movzx eax [ebp+arg_14] +
mov esi [edi] +
push eax  +
push edx  +
push ebx  +
push [ebp+arg_8]  +
mov esi [esi+24h] +
push [ebp+arg_4]  +
push ecx  +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov eax [ebp+var_38] +
jmp loc_40A32E  +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_3C] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_40] +
mov [ebp+var_4] 0 +
push eax  +
call sub_40C660  +
mov edi eax +
add esp 4 +
mov eax [ebp+var_3C] +
mov [ebp+var_2C] edi +
test eax eax +
jz loc_40A236  +
mov edx [eax] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx [ebp+var_3C] +
call esi  +
mov edi eax +
test edi edi +
jz loc_40A233  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi [ebp+var_2C] +
xor eax eax +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 7 +
mov word ptr [ebp+var_28] ax +
cmp [ebp+arg_14] 0 +
lea eax [ebp+var_58] +
mov [ebp+var_4] 1 +
mov esi [edi] +
push eax  +
jz loc_40A262  +
mov esi [esi+1Ch] +
jmp loc_40A265  +
mov esi [esi+18h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_58] +
push eax  +
lea ecx [ebp+var_28] +
call loc_4095F0  +
lea ecx [ebp+var_58] +
call loc_4029B0  +
cmp dword ptr [ebx+24h] 0 +
mov esi [ebx+20h] +
mov edi [ebp+var_18] +
jl loc_40A29F  +
jg loc_40A297  +
test esi esi +
jz loc_40A29F  +
cmp esi edi +
jbe loc_40A29F  +
sub esi edi +
jmp loc_40A2A1  +
xor esi esi +
mov eax [ebx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_40A2D6  +
push esi  +
push [ebp+var_34]  +
lea eax [ebp+var_40] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push [ebp+var_30]  +
call sub_40AB70  +
add esp 18h +
xor esi esi +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
mov edx [eax+4] +
mov [ebp+arg_8] edx +
jmp loc_40A2DC  +
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_4] +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
push edi  +
cmovnb eax [ebp+var_28] +
mov edi [ebp+var_30] +
push eax  +
push edx  +
push ecx  +
lea eax [ebp+var_40] +
push eax  +
push edi  +
call sub_40ABF0  +
push esi  +
push [ebp+var_34]  +
mov esi [ebp+var_38] +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push edi  +
mov [ebp+arg_8] eax +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
call sub_40AB70  +
add esp 30h +
lea ecx [ebp+var_28] +
call loc_4029B0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_4403D0  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_41A82A  +
test al al +
jnz loc_40A386  +
mov ecx [esi] +
call sub_40BB50  +
mov [ebp+var_4] 0 +
mov ecx [esi] +
mov eax [ecx] +
mov eax [eax+4] +
mov edi [eax+ecx+38h] +
test edi edi +
jz loc_40A3A9  +
mov eax [edi] +
mov esi [eax+8] +
cmp esi offset nullsub_1 +
jnz loc_40A3BA  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_40A3A9  +
***
push 0FFFFFFFFh  +
push offset loc_440468  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov edi [ebp+arg_0] +
mov [esi] edi +
mov edx [edi] +
mov eax [edx+4] +
mov ebx [eax+edi+38h] +
test ebx ebx +
jz loc_40A41E  +
mov eax [ebx] +
mov eax [eax+4] +
mov [ebp+var_10] eax +
cmp eax offset nullsub_1 +
jnz loc_40A470  +
mov [ebp+var_4] 0 +
mov eax [edx+4] +
cmp dword ptr [eax+edi+0Ch] 0 +
lea ecx [eax+edi] +
jz loc_40A436  +
xor al al +
jmp loc_40A457  +
mov ecx [ecx+3Ch] +
test ecx ecx +
jz loc_40A455  +
cmp ecx edi +
jz loc_40A455  +
call sub_40BAA0  +
mov eax [edi] +
mov eax [eax+4] +
cmp dword ptr [eax+edi+0Ch] 0 +
setz al  +
jmp loc_40A457  +
mov al 1 +
mov [esi+4] al +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx eax +
call ds:off_442218  +
mov ecx ebx +
call [ebp+var_10]  +
mov edx [edi] +
jmp loc_40A41E  +
***
push 0FFFFFFFFh  +
push offset loc_4404A9  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] 0 +
xor eax eax +
mov esi [ebp+arg_0] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov [ebp+var_4] eax +
mov ecx [edi+3Ch] +
mov [ebp+var_10] 1 +
test cl 2 +
jnz loc_40A504  +
mov eax [edi+20h] +
mov ebx [eax] +
test ebx ebx +
jz loc_40A504  +
cmp ebx [edi+38h] +
mov eax [edi+10h] +
cmovb ebx [edi+38h] +
mov edx [eax] +
sub ebx edx +
sar ebx 1 +
push ebx  +
push edx  +
jmp loc_40A526  +
test cl 4 +
jnz loc_40A52D  +
mov eax [edi+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_40A52D  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+2Ch] +
mov eax [eax] +
add eax eax +
sub eax ecx +
add eax edx +
sar eax 1 +
push eax  +
push ecx  +
mov ecx esi +
call loc_402B00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_40A55F  +
mov eax [ecx+30h] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_40A57F  +
mov eax [ecx+2Ch] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
push [ebp+arg_4]  +
xor edx edx +
mov eax 4 +
cmp [ecx+38h] edx +
cmovnz eax edx +
or eax [ecx+0Ch] +
or eax [ebp+arg_0] +
push eax  +
call loc_405220  +
pop ebp  +
retn 8  +
***
push offset aInvalidVectorT  +
call sub_41A1EA  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-4] eax +
push edi  +
mov edi [ebp+0Ch] +
mov ecx [esi+14h] +
mov [ebp-0Ch] ecx +
cmp edi ecx +
ja loc_40A614  +
mov ebx esi +
cmp ecx 10h +
jb loc_40A5F7  +
mov ebx [esi] +
push edi  +
push eax  +
push ebx  +
mov [esi+10h] edi +
call loc_41D790  +
add esp 0Ch +
mov byte ptr [edi+ebx] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp edi 7FFFFFFFh +
ja loc_40A6C6  +
mov ebx edi +
or ebx 0Fh +
cmp ebx 7FFFFFFFh +
jbe loc_40A634  +
mov ebx 7FFFFFFFh +
jmp loc_40A652  +
mov edx ecx +
mov eax 7FFFFFFFh +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_40A64A  +
mov ebx 7FFFFFFFh +
jmp loc_40A652  +
lea eax [edx+ecx] +
cmp ebx eax +
cmovb ebx eax +
xor ecx ecx +
mov eax ebx +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_40A9D0  +
push edi  +
push dword ptr [ebp-4]  +
mov [ebp-8] eax +
push eax  +
mov [esi+10h] edi +
mov [esi+14h] ebx +
call loc_41D210  +
mov ebx [ebp-8] +
add esp 0Ch +
mov ecx [ebp-0Ch] +
mov byte ptr [edi+ebx] 0 +
cmp ecx 10h +
jb loc_40A6B4  +
mov eax [esi] +
inc ecx  +
cmp ecx 1000h +
jb loc_40A6AA  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40A6C1  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
pop edi  +
mov [esi] ebx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_42071A  +
call loc_403250  +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov dl [ebp+0Ch] +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov [ebp-5] dl +
push edi  +
mov ecx [esi+14h] +
mov eax ecx +
mov edi [esi+10h] +
sub eax edi +
mov [ebp-18h] edi +
mov [ebp-0Ch] ecx +
cmp ebx eax +
ja loc_40A732  +
mov [ebp-4] esi +
lea eax [ebx+edi] +
mov [esi+10h] eax +
mov eax esi +
cmp ecx 10h +
jb loc_40A70D  +
mov eax [esi] +
mov [ebp-4] eax +
movsx ecx dl +
push ebx  +
push ecx  +
lea ecx [eax+edi] +
push ecx  +
call sub_41DD10  +
mov ecx [ebp-4] +
add esp 0Ch +
add ecx ebx +
mov eax esi +
mov byte ptr [ecx+edi] 0 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax 7FFFFFFFh +
sub eax edi +
cmp eax ebx +
jb loc_40A83E  +
lea edx [edi+ebx] +
or edx 0Fh +
cmp edx 7FFFFFFFh +
jbe loc_40A756  +
mov edx 7FFFFFFFh +
jmp loc_40A77A  +
mov eax ecx +
shr eax 1 +
mov [ebp-4] eax +
mov eax 7FFFFFFFh +
sub eax [ebp-4] +
cmp ecx eax +
jbe loc_40A770  +
mov edx 7FFFFFFFh +
jmp loc_40A77A  +
mov eax [ebp-4] +
add eax ecx +
cmp edx eax +
cmovb edx eax +
xor ecx ecx +
mov [ebp-4] edx +
add edx 1 +
setb cl  +
neg ecx  +
or ecx edx +
push ecx  +
mov ecx esi +
call loc_40A9D0  +
lea ecx [edi+ebx] +
mov [ebp-1Ch] eax +
mov [esi+10h] ecx +
mov ecx [ebp-4] +
mov [esi+14h] ecx +
movsx ecx byte ptr [ebp-5] +
mov [ebp-4] ecx +
lea ecx [eax+edi] +
mov [ebp-10h] ecx +
add ecx ebx +
cmp dword ptr [ebp-0Ch] 10h +
mov [ebp-14h] ecx +
jb loc_40A811  +
push dword ptr [ebp-18h]  +
mov edi [esi] +
push edi  +
push eax  +
call loc_41D210  +
push ebx  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-10h]  +
call sub_41DD10  +
mov eax [ebp-14h] +
add esp 18h +
mov ecx [ebp-0Ch] +
inc ecx  +
mov byte ptr [eax] 0 +
cmp ecx 1000h +
jb loc_40A7F7  +
mov edx [edi-4] +
add ecx 23h +
sub edi edx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_40A843  +
mov edi edx +
push ecx  +
push edi  +
call sub_41B8B8  +
mov eax [ebp-1Ch] +
add esp 8 +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push eax  +
call loc_41D210  +
push ebx  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-10h]  +
call sub_41DD10  +
mov eax [ebp-14h] +
add esp 18h +
mov byte ptr [eax] 0 +
mov eax [ebp-1Ch] +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_403250  +
call sub_42071A  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov edx [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-0Ch] edx +
push edi  +
mov edi [ebp+0Ch] +
mov [ebp-14h] edi +
mov ecx [esi+14h] +
mov eax ecx +
mov ebx [esi+10h] +
sub eax ebx +
mov [ebp-8] ecx +
cmp edi eax +
ja loc_40A8AF  +
mov [ebp-4] esi +
lea eax [edi+ebx] +
mov [esi+10h] eax +
mov eax esi +
cmp ecx 10h +
jb loc_40A88D  +
mov eax [esi] +
mov [ebp-4] eax +
push edi  +
push edx  +
lea ecx [eax+ebx] +
push ecx  +
call loc_41D790  +
mov ecx [ebp-4] +
add esp 0Ch +
add ecx edi +
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [ecx+ebx] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax 7FFFFFFFh +
sub eax ebx +
cmp eax edi +
jb loc_40A9B6  +
lea edx [edi+ebx] +
or edx 0Fh +
cmp edx 7FFFFFFFh +
jbe loc_40A8D3  +
mov edx 7FFFFFFFh +
jmp loc_40A8F7  +
mov eax ecx +
shr eax 1 +
mov [ebp-4] eax +
mov eax 7FFFFFFFh +
sub eax [ebp-4] +
cmp ecx eax +
jbe loc_40A8ED  +
mov edx 7FFFFFFFh +
jmp loc_40A8F7  +
mov eax [ebp-4] +
add eax ecx +
cmp edx eax +
cmovb edx eax +
xor ecx ecx +
mov [ebp-4] edx +
add edx 1 +
setb cl  +
neg ecx  +
or ecx edx +
push ecx  +
mov ecx esi +
call loc_40A9D0  +
lea ecx [edi+ebx] +
mov [ebp-18h] eax +
mov [esi+10h] ecx +
mov ecx [ebp-4] +
mov [esi+14h] ecx +
lea ecx [eax+ebx] +
mov [ebp-4] ecx +
lea ecx [edi+eax] +
add ecx ebx +
cmp dword ptr [ebp-8] 10h +
mov [ebp-10h] ecx +
push ebx  +
jb loc_40A98A  +
mov edi [esi] +
push edi  +
push eax  +
call loc_41D210  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-4]  +
call loc_41D210  +
mov eax [ebp-10h] +
add esp 18h +
mov ecx [ebp-8] +
inc ecx  +
mov byte ptr [eax] 0 +
cmp ecx 1000h +
jb loc_40A970  +
mov edx [edi-4] +
add ecx 23h +
sub edi edx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_40A9BB  +
mov edi edx +
push ecx  +
push edi  +
call sub_41B8B8  +
mov eax [ebp-18h] +
add esp 8 +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push eax  +
call loc_41D210  +
push edi  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-4]  +
call loc_41D210  +
mov eax [ebp-10h] +
add esp 18h +
mov byte ptr [eax] 0 +
mov eax [ebp-18h] +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_403250  +
call sub_42071A  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 1000h +
jb loc_40AA00  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_40AA17  +
push ecx  +
call sub_41B637  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_40AA1C  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
test eax eax +
jz loc_40AA11  +
push eax  +
call sub_41B637  +
add esp 4 +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
call loc_401220  +
call sub_42071A  +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4427B0 +
jz loc_40AA4D  +
push 8  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+14h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov ecx edx +
push edi  +
mov [ebp+var_4] esi +
mov dword ptr [esi+10h] 0 +
lea edi [ecx+2] +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40AA87  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_402B00  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+10h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov ecx edx +
push edi  +
mov [ebp+var_4] esi +
mov dword ptr [esi+10h] 0 +
lea edi [ecx+2] +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40AAD7  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_402B00  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+8] +
mov ecx edx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_4] esi +
lea edi [ecx+1] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov byte ptr [esi] 0 +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40AB25  +
sub ecx edi +
push ecx  +
push edx  +
mov ecx esi +
call loc_40A5D0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
push ecx  +
sub esp 0Ch +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_14] +
mov [ebp+var_C] eax +
push esi  +
mov esi [ebp+arg_10] +
mov [ebp+var_4] esi +
push edi  +
mov edi [ebp+arg_C] +
test ebx ebx +
jz loc_40AC77  +
nop   +
test edi edi +
jz loc_40AC65  +
mov eax [edi+20h] +
movzx edx word ptr [esi] +
mov [ebp+var_8] edx +
cmp dword ptr [eax] 0 +
jz loc_40AC40  +
mov ecx [edi+30h] +
mov eax [ecx] +
test eax eax +
jle loc_40AC40  +
dec eax  +
mov [ecx] eax +
mov ecx [edi+20h] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov eax [ebp+var_8] +
mov [edx] ax +
jmp loc_40AC55  +
mov eax [edi] +
push edx  +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov esi [ebp+var_4] +
mov edi [ebp+arg_C] +
mov ecx 0FFFFh +
movzx eax ax +
cmp cx ax +
jnz loc_40AC69  +
mov byte ptr [ebp+arg_8] 1 +
add esi 2 +
mov [ebp+var_4] esi +
sub ebx 1 +
jnz loc_40AC10  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_8] +
mov [eax+4] edi +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4404F0  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+24h] +
mov eax [ebp+0Ch] +
mov esi [ebp+18h] +
mov edx [ebp+20h] +
mov [ebp-70h] eax +
mov [ebp-60h] esi +
mov [ebp-5Ch] edx +
mov [ebp-44h] ebx +
test ebx ebx +
jz loc_40ACE8  +
mov al [edx] +
cmp al 2Bh +
jz loc_40ACE1  +
cmp al 2Dh +
jnz loc_40ACE8  +
mov ecx 1 +
jmp loc_40ACEA  +
xor ecx ecx +
mov eax [esi+14h] +
and eax 0E00h +
mov [ebp-48h] ecx +
cmp eax 800h +
jnz loc_40AD1A  +
lea eax [ecx+2] +
cmp eax ebx +
ja loc_40AD1A  +
cmp byte ptr [edx+ecx] 30h +
jnz loc_40AD1A  +
mov cl [edx+ecx+1] +
cmp cl 78h +
jz loc_40AD17  +
cmp cl 58h +
jnz loc_40AD1A  +
mov [ebp-48h] eax +
mov eax [esi+30h] +
mov edi [eax+4] +
mov [ebp-4Ch] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp-50h] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_40C930  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add esp 4 +
mov edi [ebp-4Ch] +
mov [ebp-58h] eax +
test edi edi +
jz loc_40AD81  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40AD81  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
push 0  +
push ebx  +
lea ecx [ebp-28h] +
call loc_409680  +
mov ecx [ebp-5Ch] +
lea eax [ebp-28h] +
mov edi [ebp-58h] +
mov dword ptr [ebp-4] 1 +
cmp dword ptr [ebp-14h] 8 +
cmovnb eax [ebp-28h] +
push eax  +
lea eax [ecx+ebx] +
push eax  +
mov eax [edi] +
push ecx  +
mov esi [eax+2Ch] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edx [ebp-60h] +
mov eax [edx+30h] +
mov edi [eax+4] +
mov [ebp-4Ch] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp-50h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_40C660  +
mov byte ptr [ebp-4] 1 +
add esp 4 +
mov edi [ebp-4Ch] +
mov ebx eax +
test edi edi +
jz loc_40AE1E  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40AE1E  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp-40h] +
push eax  +
mov eax [ebx] +
mov esi [eax+14h] +
mov ecx esi +
call ds:off_442218  +
mov ecx ebx +
call esi  +
mov byte ptr [ebp-4] 3 +
lea edi [ebp-40h] +
cmp dword ptr [ebp-2Ch] 10h +
cmovnb edi [ebp-40h] +
mov [ebp-5Ch] edi +
mov al [edi] +
cmp al 7Fh +
jz loc_40B041  +
test al al +
jle loc_40B041  +
mov esi [ebx] +
cmp esi offset off_4437A4 +
jnz loc_40AE67  +
movzx ecx word ptr [ebx+0Eh] +
jmp loc_40AE7B  +
mov esi [esi+10h] +
mov ecx esi +
call ds:off_442218  +
mov ecx ebx +
call esi  +
movzx ecx ax +
mov al [edi] +
mov [ebp-54h] ecx +
cmp al 7Fh +
jz loc_40B041  +
mov ebx [ebp-28h] +
mov edi [ebp-48h] +
test al al +
jle loc_40B047  +
mov ecx [ebp-44h] +
movsx edx al +
mov eax ecx +
sub eax edi +
cmp edx eax +
jnb loc_40B047  +
mov edi [ebp-18h] +
sub ecx edx +
mov [ebp-44h] ecx +
cmp edi ecx +
jb loc_40B21C  +
mov edx [ebp-14h] +
mov eax edx +
sub eax edi +
mov [ebp-68h] edx +
cmp eax 1 +
jb loc_40AF03  +
lea eax [edi+1] +
cmp edx 8 +
mov [ebp-18h] eax +
lea eax [ebp-28h] +
cmovnb eax ebx +
sub edi ecx +
lea esi [eax+ecx*2] +
lea eax ds:2[edi*2] +
push eax  +
lea eax [esi+2] +
push esi  +
push eax  +
call loc_41D790  +
mov eax [ebp-54h] +
movzx ecx ax +
mov [esi] cx +
mov ebx [ebp-28h] +
jmp loc_40B022  +
mov eax 7FFFFFFEh +
sub eax edi +
cmp eax 1 +
jb loc_40B217  +
lea esi [edi+1] +
or esi 7 +
cmp esi 7FFFFFFEh +
jbe loc_40AF28  +
mov esi 7FFFFFFEh +
jmp loc_40AF46  +
mov ecx edx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp edx eax +
jbe loc_40AF3E  +
mov esi 7FFFFFFEh +
jmp loc_40AF46  +
lea eax [edx+ecx] +
cmp esi eax +
cmovb esi eax +
xor ecx ecx +
mov eax esi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
lea ecx [ebp-28h] +
call loc_402C90  +
mov ebx eax +
mov [ebp-14h] esi +
lea eax [edi+1] +
mov [ebp-18h] eax +
mov eax [ebp-44h] +
sub edi eax +
lea ecx [eax+eax] +
lea eax ds:2[edi*2] +
mov [ebp-58h] ecx +
mov edi [ebp-68h] +
lea esi [ebx+ecx] +
mov [ebp-64h] eax +
lea eax [esi+2] +
mov [ebp-6Ch] esi +
mov [ebp-4Ch] eax +
push ecx  +
cmp edi 8 +
jb loc_40AFF4  +
mov esi [ebp-28h] +
push esi  +
push ebx  +
call loc_41D210  +
mov eax [ebp-6Ch] +
add esp 0Ch +
mov edx [ebp-54h] +
movzx ecx dx +
push dword ptr [ebp-64h]  +
mov [eax] cx +
mov eax [ebp-58h] +
add eax esi +
push eax  +
mov eax [ebp-4Ch] +
push eax  +
call loc_41D210  +
lea edi ds:2[edi*2] +
add esp 0Ch +
cmp edi 1000h +
jb loc_40AFE5  +
mov ecx [esi-4] +
add edi 23h +
sub esi ecx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_40B221  +
mov esi ecx +
push edi  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov [ebp-28h] ebx +
jmp loc_40B025  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
call loc_41D210  +
mov ecx [ebp-54h] +
add esp 0Ch +
movzx eax cx +
lea ecx [ebp-28h] +
mov [esi] ax +
mov eax [ebp-58h] +
push dword ptr [ebp-64h]  +
add eax ecx +
push eax  +
lea eax [esi+2] +
push eax  +
call loc_41D210  +
mov [ebp-28h] ebx +
add esp 0Ch +
mov edi [ebp-5Ch] +
cmp byte ptr [edi+1] 0 +
lea eax [edi+1] +
cmovg edi eax +
mov [ebp-5Ch] edi +
mov al [edi] +
cmp al 7Fh +
jnz loc_40AE90  +
jmp loc_40B044  +
mov ebx [ebp-28h] +
mov edi [ebp-48h] +
mov ecx [ebp-60h] +
mov eax [ebp-18h] +
mov [ebp-44h] eax +
cmp dword ptr [ecx+24h] 0 +
mov esi [ecx+20h] +
jl loc_40B067  +
jg loc_40B05F  +
test esi esi +
jz loc_40B067  +
cmp esi eax +
jbe loc_40B067  +
sub esi eax +
jmp loc_40B069  +
xor esi esi +
mov eax [ecx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_40B104  +
cmp eax 100h +
jz loc_40B0C3  +
mov ebx [ebp+8] +
lea eax [ebp-50h] +
push esi  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40AB70  +
xor esi esi +
cmp dword ptr [ebp-14h] 8 +
push edi  +
mov edx [eax] +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-50h] +
mov [ebp+14h] ecx +
push eax  +
push ebx  +
call sub_40ABF0  +
add esp 30h +
jmp loc_40B126  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
push edi  +
cmovnb eax ebx +
mov ebx [ebp+8] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40ABF0  +
push esi  +
push dword ptr [ebp+1Ch]  +
mov ecx [eax] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
mov [ebp+14h] eax +
lea eax [ebp-50h] +
push ecx  +
push eax  +
push ebx  +
call sub_40AB70  +
add esp 30h +
xor esi esi +
jmp loc_40B126  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
push edi  +
cmovnb eax ebx +
mov ebx [ebp+8] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40ABF0  +
add esp 18h +
mov edx [eax] +
cmp dword ptr [ebp-14h] 8 +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
sub [ebp-44h] edi +
push dword ptr [ebp-44h]  +
mov [ebp+14h] ecx +
lea eax [eax+edi*2] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-50h] +
push eax  +
push ebx  +
call sub_40ABF0  +
mov edx [ebp-60h] +
push esi  +
push dword ptr [ebp+1Ch]  +
mov ecx [eax] +
mov esi [ebp-70h] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+14h] eax +
mov dword ptr [edx+20h] 0 +
mov dword ptr [edx+24h] 0 +
call sub_40AB70  +
mov edx [ebp-2Ch] +
add esp 30h +
cmp edx 10h +
jb loc_40B1B1  +
mov ecx [ebp-40h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40B1A7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B221  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-14h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0Fh +
mov byte ptr [ebp-40h] 0 +
cmp edx 8 +
jb loc_40B1F9  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B1EF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B221  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_403250  +
call loc_402C80  +
call sub_42071A  +
mov eax [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov byte ptr [esi] 25h +
lea ecx [esi+1] +
test al 20h +
jz loc_40B249  +
mov byte ptr [ecx] 2Bh +
inc ecx  +
test al 8 +
jz loc_40B251  +
mov byte ptr [ecx] 23h +
inc ecx  +
mov edi [ebp+arg_8] +
lea edx [ecx+1] +
push ebx  +
mov bl [edi] +
cmp bl 4Ch +
jz loc_40B263  +
mov [ecx] bl +
jmp loc_40B26E  +
mov byte ptr [ecx] 49h +
mov word ptr [edx] 3436h +
add edx 2 +
mov ecx eax +
and ecx 0E00h +
pop ebx  +
cmp ecx 400h +
jnz loc_40B28D  +
mov al 6Fh +
mov [edx] al +
mov eax esi +
pop edi  +
mov byte ptr [edx+1] 0 +
pop esi  +
pop ebp  +
retn   +
cmp ecx 800h +
jz loc_40B2A4  +
mov al [edi+1] +
mov [edx] al +
mov eax esi +
pop edi  +
mov byte ptr [edx+1] 0 +
pop esi  +
pop ebp  +
retn   +
shl al 3 +
not al  +
and al 20h +
or al 58h +
mov [edx] al +
mov eax esi +
pop edi  +
mov byte ptr [edx+1] 0 +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440540  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+24h] +
mov eax [ebp+0Ch] +
mov edi [ebp+18h] +
mov esi [ebp+20h] +
mov [ebp-74h] eax +
mov [ebp-68h] edi +
mov [ebp-58h] esi +
test ebx ebx +
jz loc_40B315  +
mov al [esi] +
cmp al 2Bh +
jz loc_40B30E  +
cmp al 2Dh +
jnz loc_40B315  +
mov ecx 1 +
jmp loc_40B317  +
xor ecx ecx +
mov eax [edi+14h] +
and eax 3000h +
mov [ebp-54h] ecx +
cmp eax 3000h +
jz loc_40B330  +
mov edx offset aEe +
jmp loc_40B353  +
lea eax [ecx+2] +
mov edx offset aPp +
cmp eax ebx +
ja loc_40B353  +
cmp byte ptr [esi+ecx] 30h +
jnz loc_40B353  +
mov cl [esi+ecx+1] +
cmp cl 78h +
jz loc_40B350  +
cmp cl 58h +
jnz loc_40B353  +
mov [ebp-54h] eax +
push edx  +
push esi  +
call sub_423600  +
mov [ebp-60h] eax +
mov eax 2Eh +
mov [ebp-14h] ax +
call sub_423682  +
mov eax [eax] +
mov al [eax] +
mov [ebp-14h] al +
lea eax [ebp-14h] +
push eax  +
push esi  +
call sub_423600  +
mov [ebp-5Ch] eax +
add esp 10h +
mov eax [edi+30h] +
mov edi [eax+4] +
mov [ebp-4Ch] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp-50h] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_40C930  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add esp 4 +
mov edi [ebp-4Ch] +
mov [ebp-64h] eax +
test edi edi +
jz loc_40B3E9  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40B3E9  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
push 0  +
push ebx  +
lea ecx [ebp-2Ch] +
call loc_409680  +
mov ecx [ebp-58h] +
lea eax [ebp-2Ch] +
mov edi [ebp-64h] +
mov dword ptr [ebp-4] 1 +
cmp dword ptr [ebp-18h] 8 +
cmovnb eax [ebp-2Ch] +
push eax  +
lea eax [ecx+ebx] +
push eax  +
mov eax [edi] +
push ecx  +
mov esi [eax+2Ch] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edx [ebp-68h] +
mov eax [edx+30h] +
mov edi [eax+4] +
mov [ebp-4Ch] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp-50h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_40C660  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-4Ch] +
add esp 4 +
test eax eax +
jz loc_40B489  +
mov eax [eax] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx [ebp-4Ch] +
call esi  +
mov [ebp-58h] eax +
test eax eax +
jz loc_40B489  +
mov eax [eax] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx [ebp-58h] +
call esi  +
lea eax [ebp-44h] +
push eax  +
mov eax [edi] +
mov esi [eax+14h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov byte ptr [ebp-4] 3 +
mov esi [edi] +
cmp esi offset off_4437A4 +
jnz loc_40B4B2  +
movzx eax word ptr [edi+0Eh] +
jmp loc_40B4C4  +
mov esi [esi+10h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
movzx eax ax +
mov ecx [ebp-5Ch] +
mov [ebp-48h] eax +
cmp ecx ebx +
jz loc_40B504  +
mov esi [edi] +
cmp esi offset off_4437A4 +
jnz loc_40B4DE  +
movzx edx word ptr [edi+0Ch] +
jmp loc_40B4F3  +
mov esi [esi+0Ch] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov ecx [ebp-5Ch] +
movzx edx ax +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
cmp ecx ebx +
mov [eax+ecx*2] dx +
cmovz ecx [ebp-60h] +
lea eax [ebp-44h] +
cmp dword ptr [ebp-30h] 10h +
mov ebx [ebp-2Ch] +
cmovnb eax [ebp-44h] +
mov [ebp-58h] eax +
mov al [eax] +
cmp al 7Fh +
jz loc_40B6CC  +
mov edi [ebp-54h] +
test al al +
jle loc_40B6CF  +
movsx edx al +
mov eax ecx +
sub eax edi +
cmp edx eax +
jnb loc_40B6CF  +
mov edi [ebp-1Ch] +
sub ecx edx +
mov [ebp-5Ch] ecx +
cmp edi ecx +
jb loc_40B8A4  +
mov edx [ebp-18h] +
mov eax edx +
sub eax edi +
mov [ebp-6Ch] edx +
cmp eax 1 +
jb loc_40B596  +
lea eax [edi+1] +
cmp edx 8 +
mov [ebp-1Ch] eax +
lea eax [ebp-2Ch] +
cmovnb eax ebx +
sub edi ecx +
lea esi [eax+ecx*2] +
lea eax ds:2[edi*2] +
push eax  +
lea eax [esi+2] +
push esi  +
push eax  +
call loc_41D790  +
mov ecx [ebp-48h] +
add esp 0Ch +
movzx eax cx +
mov [esi] ax +
mov ebx [ebp-2Ch] +
jmp loc_40B6AF  +
mov eax 7FFFFFFEh +
sub eax edi +
cmp eax 1 +
jb loc_40B89F  +
lea esi [edi+1] +
or esi 7 +
cmp esi 7FFFFFFEh +
jbe loc_40B5BB  +
mov esi 7FFFFFFEh +
jmp loc_40B5D9  +
mov ecx edx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp edx eax +
jbe loc_40B5D1  +
mov esi 7FFFFFFEh +
jmp loc_40B5D9  +
lea eax [edx+ecx] +
cmp esi eax +
cmovb esi eax +
xor ecx ecx +
mov eax esi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
lea ecx [ebp-2Ch] +
call loc_402C90  +
mov ebx eax +
mov [ebp-18h] esi +
lea eax [edi+1] +
mov [ebp-1Ch] eax +
mov eax [ebp-5Ch] +
sub edi eax +
lea ecx [eax+eax] +
lea eax ds:2[edi*2] +
mov [ebp-64h] ecx +
mov edi [ebp-6Ch] +
lea esi [ebx+ecx] +
mov [ebp-60h] eax +
lea eax [esi+2] +
mov [ebp-70h] esi +
mov [ebp-4Ch] eax +
push ecx  +
cmp edi 8 +
jb loc_40B681  +
mov esi [ebp-2Ch] +
push esi  +
push ebx  +
call loc_41D210  +
mov eax [ebp-70h] +
mov edx [ebp-48h] +
push dword ptr [ebp-60h]  +
movzx ecx dx +
mov [eax] cx +
mov eax [ebp-64h] +
add eax esi +
push eax  +
mov eax [ebp-4Ch] +
push eax  +
call loc_41D210  +
lea edi ds:2[edi*2] +
add esp 18h +
cmp edi 1000h +
jb loc_40B675  +
mov ecx [esi-4] +
add edi 23h +
sub esi ecx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_40B8A9  +
mov esi ecx +
push edi  +
push esi  +
call sub_41B8B8  +
add esp 8 +
jmp loc_40B6AC  +
lea eax [ebp-2Ch] +
push eax  +
push ebx  +
call loc_41D210  +
mov ecx [ebp-48h] +
push dword ptr [ebp-60h]  +
movzx eax cx +
lea ecx [ebp-2Ch] +
mov [esi] ax +
mov eax [ebp-64h] +
add eax ecx +
push eax  +
lea eax [esi+2] +
push eax  +
call loc_41D210  +
add esp 18h +
mov [ebp-2Ch] ebx +
mov edx [ebp-58h] +
cmp byte ptr [edx+1] 0 +
lea eax [edx+1] +
mov ecx [ebp-5Ch] +
cmovg edx eax +
mov [ebp-58h] edx +
mov al [edx] +
cmp al 7Fh +
jnz loc_40B523  +
mov edi [ebp-54h] +
mov ecx [ebp-68h] +
mov eax [ebp-1Ch] +
mov [ebp-48h] eax +
cmp dword ptr [ecx+24h] 0 +
mov esi [ecx+20h] +
jl loc_40B6EF  +
jg loc_40B6E7  +
test esi esi +
jz loc_40B6EF  +
cmp esi eax +
jbe loc_40B6EF  +
sub esi eax +
jmp loc_40B6F1  +
xor esi esi +
mov eax [ecx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_40B78C  +
cmp eax 100h +
jz loc_40B74B  +
mov ebx [ebp+8] +
lea eax [ebp-50h] +
push esi  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40AB70  +
xor esi esi +
cmp dword ptr [ebp-18h] 8 +
push edi  +
mov edx [eax] +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-50h] +
mov [ebp+14h] ecx +
push eax  +
push ebx  +
call sub_40ABF0  +
add esp 30h +
jmp loc_40B7AE  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push edi  +
cmovnb eax ebx +
mov ebx [ebp+8] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40ABF0  +
push esi  +
push dword ptr [ebp+1Ch]  +
mov ecx [eax] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
mov [ebp+14h] eax +
lea eax [ebp-50h] +
push ecx  +
push eax  +
push ebx  +
call sub_40AB70  +
add esp 30h +
xor esi esi +
jmp loc_40B7AE  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push edi  +
cmovnb eax ebx +
mov ebx [ebp+8] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40ABF0  +
add esp 18h +
mov edx [eax] +
cmp dword ptr [ebp-18h] 8 +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
sub [ebp-48h] edi +
push dword ptr [ebp-48h]  +
mov [ebp+14h] ecx +
lea eax [eax+edi*2] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-50h] +
push eax  +
push ebx  +
call sub_40ABF0  +
mov edx [ebp-68h] +
push esi  +
push dword ptr [ebp+1Ch]  +
mov ecx [eax] +
mov esi [ebp-74h] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+14h] eax +
mov dword ptr [edx+20h] 0 +
mov dword ptr [edx+24h] 0 +
call sub_40AB70  +
mov edx [ebp-30h] +
add esp 30h +
cmp edx 10h +
jb loc_40B839  +
mov ecx [ebp-44h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40B82F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B8A9  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-18h] +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 0Fh +
mov byte ptr [ebp-44h] 0 +
cmp edx 8 +
jb loc_40B881  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B877  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B8A9  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_403250  +
call loc_402C80  +
call sub_42071A  +
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test dl 20h +
jz loc_40B8C9  +
mov byte ptr [eax] 2Bh +
inc eax  +
test dl 10h +
jz loc_40B8D2  +
mov byte ptr [eax] 23h +
inc eax  +
mov cl [ebp+arg_8] +
mov word ptr [eax] 2A2Eh +
add eax 2 +
test cl cl +
jz loc_40B8E4  +
mov [eax] cl +
inc eax  +
mov ecx edx +
and ecx 3000h +
test dl 4 +
jz loc_40B929  +
cmp ecx 2000h +
jz loc_40B931  +
cmp ecx 3000h +
jnz loc_40B90E  +
mov cl 41h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:45h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 2000h +
jnz loc_40B93E  +
mov cl 66h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 3000h +
jnz loc_40B953  +
mov cl 61h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:65h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_440570  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov edi [eax+ecx+38h] +
test edi edi +
jz loc_40B9B0  +
mov eax [edi] +
mov esi [eax+8] +
cmp esi offset nullsub_1 +
jnz loc_40B9C1  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_40B9B0  +
***
push 0FFFFFFFFh  +
push offset loc_440590  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_10] eax +
push 8  +
mov dword ptr [eax] offset off_452508 +
call sub_41B637  +
mov esi eax +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
push 1  +
mov [ebp+var_4] 0 +
call sub_41A614  +
mov [esi+4] eax +
add esp 8 +
mov eax [ebp+var_10] +
lea edi [eax+14h] +
lea ecx [eax+18h] +
lea edx [eax+24h] +
mov [eax+34h] esi +
lea ebx [eax+4] +
mov [eax+0Ch] ebx +
lea esi [eax+8] +
mov [eax+10h] esi +
mov [eax+1Ch] edi +
mov [eax+20h] ecx +
mov [eax+2Ch] edx +
add eax 28h +
mov [ebp+var_14] ebx +
mov ebx [ebp+var_10] +
mov [ebx+30h] eax +
mov ebx [ebp+var_14] +
mov dword ptr [esi] 0 +
mov dword ptr [ecx] 0 +
mov dword ptr [eax] 0 +
mov eax [ebp+var_10] +
mov dword ptr [ebx] 0 +
mov dword ptr [edi] 0 +
mov dword ptr [edx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4405B8  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov eax [eax+4] +
mov edi [eax+esi+38h] +
test edi edi +
jz loc_40BB05  +
push esi  +
lea ecx [ebp+var_18] +
call sub_40A3D0  +
mov [ebp+var_4] 0 +
cmp [ebp+var_14] 0 +
jz loc_40BAFD  +
mov eax [edi] +
mov ebx [eax+34h] +
cmp ebx offset sub_408E80 +
jnz loc_40BB23  +
lea ecx [ebp+var_18] +
call sub_40A350  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx ebx +
call ds:off_442218  +
mov ecx edi +
call ebx  +
cmp eax 0FFFFFFFFh +
jnz loc_40BAFD  +
mov eax [esi] +
push 0  +
mov ecx [eax+4] +
add ecx esi +
mov edx [ecx+0Ch] +
or edx 4 +
push edx  +
call loc_405220  +
jmp loc_40BAFD  +
***
push 0FFFFFFFFh  +
push offset loc_4405E0  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_40BBA6  +
test byte ptr [eax+esi+14h] 2 +
jz loc_40BBA6  +
mov ebx [eax+esi+38h] +
mov eax [ebx] +
mov edi [eax+34h] +
cmp edi offset sub_408E80 +
jnz loc_40BBBE  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax offset loc_40BBA6 +
retn   +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
cmp eax 0FFFFFFFFh +
jnz loc_40BBA6  +
mov eax [esi] +
push 0  +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 4 +
push eax  +
call loc_405220  +
jmp loc_40BBA6  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-14h] eax +
mov ecx [ebp+0Ch] +
push edi  +
mov [ebp-8] ecx +
mov ebx [esi+14h] +
mov eax ebx +
mov edx [esi+10h] +
sub eax edx +
mov [ebp-4] edx +
cmp ecx eax +
ja loc_40BC50  +
lea eax [ecx+edx] +
mov edi esi +
mov [ebp-10h] eax +
mov [esi+10h] eax +
cmp ebx 8 +
jb loc_40BC2A  +
mov edi [esi] +
add ecx ecx +
push ecx  +
push dword ptr [ebp-14h]  +
lea ecx [edi+edx*2] +
push ecx  +
call loc_41D790  +
mov eax [ebp-10h] +
add esp 0Ch +
xor ecx ecx +
mov [edi+eax*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax 7FFFFFFEh +
sub eax edx +
cmp eax ecx +
jb loc_40BD73  +
lea eax [ecx+edx] +
mov edi eax +
mov [ebp-0Ch] eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_40BC79  +
mov edi 7FFFFFFEh +
jmp loc_40BC97  +
mov ecx ebx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp ebx eax +
jbe loc_40BC8F  +
mov edi 7FFFFFFEh +
jmp loc_40BC97  +
lea eax [ecx+ebx] +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
mov eax edi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_402C90  +
mov ecx [ebp-8] +
mov edx [ebp-4] +
mov [ebp-10h] eax +
mov eax [ebp-0Ch] +
mov [esi+10h] eax +
lea eax [ecx+ecx] +
mov [ebp-8] eax +
mov eax [ebp-10h] +
mov [esi+14h] edi +
lea edi [edx+edx] +
lea edx [edi+eax] +
mov [ebp-0Ch] edx +
mov edx [ebp-4] +
add ecx edx +
lea ecx [eax+ecx*2] +
mov [ebp-4] ecx +
cmp ebx 8 +
jb loc_40BD42  +
mov edi [esi] +
lea ecx [edx+edx] +
push ecx  +
push edi  +
push eax  +
call loc_41D210  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-0Ch]  +
call loc_41D210  +
mov eax [ebp-4] +
lea ebx ds:2[ebx*2] +
xor ecx ecx +
add esp 18h +
mov [eax] cx +
cmp ebx 1000h +
jb loc_40BD28  +
mov ecx [edi-4] +
add ebx 23h +
sub edi ecx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_40BD78  +
mov edi ecx +
push ebx  +
push edi  +
call sub_41B8B8  +
mov eax [ebp-10h] +
add esp 8 +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push eax  +
call loc_41D210  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-0Ch]  +
call loc_41D210  +
mov eax [ebp-4] +
add esp 18h +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp-10h] +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_403250  +
call sub_42071A  +
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_4437A4 +
call sub_424926  +
push dword ptr [esi+10h]  +
call sub_424926  +
push dword ptr [esi+14h]  +
call sub_424926  +
add esp 0Ch +
mov dword ptr [esi] offset off_4427B0 +
test [ebp+arg_0] 1 +
jz loc_40BDBE  +
push 18h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi ecx +
mov esi [edi] +
cmp esi offset off_4437A4 +
jnz loc_40BDE8  +
movzx eax word ptr [edi+0Eh] +
pop edi  +
pop esi  +
retn   +
pop edi  +
pop esi  +
retn   +
mov esi [esi+10h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
movzx eax ax +
jmp loc_40BDE5  +
***
push 0FFFFFFFFh  +
push offset loc_440608  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
call sub_4052A0  +
mov eax [ebp+arg_0] +
mov [ebx+38h] eax +
mov eax [ebx+30h] +
mov dword ptr [ebx+3Ch] 0 +
mov edi [eax+4] +
mov [ebp+var_28] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_2C] +
mov [ebp+var_4] 0 +
push eax  +
call sub_40C930  +
mov esi eax +
add esp 4 +
mov ecx [esi] +
mov edi [ecx+30h] +
cmp ecx offset off_4436F8 +
jnz loc_40BF2B  +
lea eax [esi+18h] +
mov byte ptr [ebp-14h] 20h +
push eax  +
lea eax [ebp+WideCharStr] +
xorps xmm0 xmm0 +
push eax  +
push 1  +
lea eax [ebp-14h] +
movlpd oword ptr [ebp+WideCharStr] xmm0 +
push eax  +
lea eax [ebp-18h] +
push eax  +
call sub_41A22A  +
movzx ecx word ptr [ebp-18h] +
add esp 14h +
test eax eax +
mov edx 0FFFFh +
cmovs ecx edx +
movzx eax cx +
mov [ebp+var_4] 0FFFFFFFFh +
mov edi [ebp+var_28] +
mov [ebp+var_24] eax +
test edi edi +
jz loc_40BEF0  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40BEF0  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
cmp dword ptr [ebx+38h] 0 +
mov eax [ebp+var_24] +
mov [ebx+40h] ax +
jnz loc_40BF0D  +
mov eax [ebx+0Ch] +
mov ecx ebx +
push 0  +
or eax 4 +
push eax  +
call loc_405220  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 8  +
push 20h  +
mov ecx edi +
call ds:off_442218  +
mov ecx esi +
call edi  +
movzx eax ax +
jmp loc_40BEB6  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440649  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp-18h] esi +
mov dword ptr [ebp-10h] 0 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov [ebp-4] eax +
mov eax ebx +
mov dword ptr [ebp-10h] 1 +
lea edx [eax+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40BFE0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push ebx  +
mov ecx esi +
call loc_40BBF0  +
cmp dword ptr [edi+14h] 8 +
jb loc_40C000  +
mov edi [edi] +
mov eax [ebp-14h] +
mov ecx esi +
push dword ptr [eax]  +
push edi  +
call loc_40BBF0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440689  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [ebp-10h] 0 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ecx [ebp+8] +
mov [ebp-4] eax +
mov dword ptr [ebp-10h] 1 +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40C0D0  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_40BBF0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp+var_4] esi +
lea ebx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40C111  +
sub eax ebx +
mov ecx edx +
sar eax 1 +
push eax  +
push [ebp+arg_0]  +
call loc_40BBF0  +
mov dword ptr [esi+10h] 0 +
xor ecx ecx +
mov dword ptr [esi+14h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push 0FFFFFFFFh  +
push offset loc_4406CF  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_1C] +
push 0  +
mov [ebp+var_18] esi +
call sub_41A3E0  +
mov [ebp+var_4] 0 +
mov edi dword_45A024 +
mov ebx dword_459FF0 +
test edi edi +
jnz loc_40C271  +
push edi  +
lea ecx [ebp+var_14] +
call sub_41A3E0  +
cmp dword_45A024 edi +
jnz loc_40C263  +
mov eax dword_4591A8 +
inc eax  +
mov dword_4591A8 eax +
mov dword_45A024 eax +
lea ecx [ebp+var_14] +
call sub_41A438  +
mov edi dword_45A024 +
mov ecx [esi+4] +
cmp edi [ecx+0Ch] +
jnb loc_40C289  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_40C321  +
jmp loc_40C28B  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_40C2A1  +
call sub_41A60E  +
cmp edi [eax+0Ch] +
jnb loc_40C2A5  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_40C321  +
test ebx ebx +
jz loc_40C2AD  +
mov esi ebx +
jmp loc_40C321  +
push 8  +
call sub_41B637  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_18] +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_40C2D6  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_40C2DB  +
lea eax [ecx+1Ch] +
jmp loc_40C2DB  +
mov eax offset unk_45261F +
push eax  +
lea ecx [ebp+var_50] +
call loc_404A50  +
lea ebx [esi+4] +
mov dword ptr [esi] offset off_443774 +
lea ecx [ebp+var_50] +
mov dword ptr [ebx] 0 +
call sub_404B00  +
mov [ebp+var_18] esi +
push esi  +
mov byte ptr [ebp+var_4] 2 +
call sub_41A5E2  +
mov eax [esi] +
add esp 4 +
mov edi [eax+4] +
cmp edi offset dword_404BD0 +
jnz loc_40C347  +
inc dword ptr [ebx]  +
mov dword_459FF0 esi +
lea ecx [ebp+var_1C] +
call sub_41A438  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx edi +
call ds:off_442218  +
mov ecx esi +
call edi  +
jmp loc_40C31B  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440700  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx ecx +
mov esi [ebx] +
mov eax 2AAAAAABh +
mov edx [ebp+8] +
sub edx esi +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-14h] eax +
mov eax [ebx+4] +
sub eax esi +
sar eax 3 +
imul eax eax +
mov [ebp-1Ch] eax +
cmp eax 0AAAAAAAh +
jz loc_40C48F  +
lea ecx [eax+1] +
mov eax [ebx+8] +
sub eax esi +
sar eax 3 +
imul esi eax +
mov eax 0AAAAAAAh +
mov edx esi +
shr edx 1 +
sub eax edx +
cmp esi eax +
jbe loc_40C3EB  +
mov esi ecx +
mov [ebp-18h] ecx +
jmp loc_40C3F5  +
add esi edx +
cmp esi ecx +
cmovb esi ecx +
mov [ebp-18h] esi +
push esi  +
call loc_4031F0  +
push dword ptr [ebp+0Ch]  +
mov edi eax +
mov dword ptr [ebp-4] 0 +
mov eax [ebp-14h] +
mov [ebp-24h] edi +
lea ecx [eax+eax*2] +
lea eax [edi+ecx*8] +
lea ecx [eax+18h] +
mov [ebp-20h] eax +
mov [ebp-14h] ecx +
mov ecx eax +
call sub_402A60  +
mov ecx [ebx] +
mov edx [ebx+4] +
mov eax [ebp+8] +
push ecx  +
push edi  +
cmp eax edx +
jz loc_40C444  +
mov edx eax +
call sub_403430  +
mov edx [ebx+4] +
add esp 4 +
mov ecx [ebp+8] +
push dword ptr [ebp-14h]  +
call sub_403430  +
mov ecx [ebp-1Ch] +
add esp 8 +
inc ecx  +
push esi  +
push ecx  +
push edi  +
mov ecx ebx +
call loc_403170  +
mov eax [ebp-20h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp-14h] +
push eax  +
push eax  +
call sub_402C20  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-24h]  +
call loc_402C40  +
push 0  +
push 0  +
call sub_41D1A3  +
call loc_403160  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 10Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+108h] eax +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+10h] +
mov [esp+4] eax +
push esi  +
mov esi edx +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_40C5B3  +
test esi esi +
jz loc_40C5B3  +
push 100h  +
lea eax [esp+14h] +
push 0  +
push eax  +
call sub_41DD10  +
mov ecx [esp+18h] +
add esp 0Ch +
dec esi  +
lea eax [ecx+ebx*2] +
push eax  +
push ecx  +
lea ecx [esp+18h] +
call sub_40CB00  +
test al al +
jnz loc_40C56B  +
or eax 0FFFFFFFFh +
cmp esi eax +
cmovb eax esi +
lea edx [edi+eax*2] +
mov eax [esp+0Ch] +
mov ecx ebx +
test ebx ebx +
jz loc_40C52D  +
movzx esi word ptr [edx] +
nop   +
cmp [eax] si +
jz loc_40C536  +
add eax 2 +
sub ecx 1 +
jnz loc_40C520  +
cmp edx edi +
jz loc_40C551  +
sub edx 2 +
jmp loc_40C511  +
***
sub edx edi +
sar edx 1 +
mov eax edx +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+108h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
or edx 0FFFFFFFFh +
mov eax edx +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+108h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
or eax 0FFFFFFFFh +
mov edx 100h +
cmp esi eax +
cmovb eax esi +
lea ecx [edi+eax*2] +
mov ecx [esp+114h] +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov esi ecx +
mov [ebp-8] esi +
push edi  +
cmp ebx edx +
ja loc_40C61D  +
mov eax [ebp+8] +
sub edx ebx +
cmp eax edx +
ja loc_40C61D  +
test ebx ebx +
jz loc_40C620  +
lea ecx [edx+1] +
lea ecx [esi+ecx*2] +
mov [ebp-4] ecx +
lea eax [esi+eax*2] +
nop   +
sub ecx eax +
sar ecx 1 +
jz loc_40C61D  +
mov edx [ebp+0Ch] +
movzx edx word ptr [edx] +
cmp [eax] dx +
jz loc_40C627  +
add eax 2 +
sub ecx 1 +
jnz loc_40C610  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+0Ch] +
mov esi ebx +
mov edx ecx +
test ebx ebx +
jz loc_40C647  +
mov edi eax +
sub edi ecx +
mov cx [edi+edx] +
cmp cx [edx] +
jnz loc_40C653  +
add edx 2 +
sub esi 1 +
jnz loc_40C636  +
sub eax [ebp-8] +
pop edi  +
pop esi  +
sar eax 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp-4] +
add eax 2 +
jmp loc_40C600  +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44076B  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 118h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebx+8] +
lea ecx [ebp-30h] +
push 0  +
mov [ebp-28h] esi +
mov dword ptr [ebp-20h] 0 +
call sub_41A3E0  +
mov dword ptr [ebp-4] 0 +
mov edi dword_45A020 +
mov eax dword_459FE8 +
mov [ebp-24h] eax +
test edi edi +
jnz loc_40C700  +
push edi  +
lea ecx [ebp-20h] +
call sub_41A3E0  +
cmp dword_45A020 edi +
jnz loc_40C6F2  +
mov eax dword_4591A8 +
inc eax  +
mov dword_4591A8 eax +
mov dword_45A020 eax +
lea ecx [ebp-20h] +
call sub_41A438  +
mov edi dword_45A020 +
mov ecx [esi+4] +
cmp edi [ecx+0Ch] +
jnb loc_40C718  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_40C8EC  +
jmp loc_40C71A  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_40C730  +
call sub_41A60E  +
cmp edi [eax+0Ch] +
jnb loc_40C738  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_40C8EC  +
mov eax [ebp-24h] +
test eax eax +
jz loc_40C746  +
mov esi eax +
jmp loc_40C8EC  +
push 18h  +
call sub_41B637  +
mov esi eax +
add esp 4 +
mov [ebp-24h] esi +
mov byte ptr [ebp-4] 1 +
xorps xmm0 xmm0 +
mov ecx [ebp-28h] +
movups oword ptr [esi] xmm0 +
movq qword ptr [esi+10h] xmm0 +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_40C77A  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_40C77F  +
lea eax [ecx+1Ch] +
jmp loc_40C77F  +
mov eax offset unk_45261F +
push eax  +
lea ecx [ebp-98h] +
call loc_404A50  +
mov dword ptr [ebp-20h] 1 +
mov dword ptr [esi+4] 0 +
mov dword ptr [ebp-4] 3 +
mov dword ptr [esi] offset off_4437A4 +
call sub_423682  +
lea eax [ebp-0C8h] +
push eax  +
call sub_41AA47  +
add esp 4 +
mov [ebp-28h] esi +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-64h] xmm0 +
movups xmm0 oword ptr [eax+10h] +
movups oword ptr [ebp-54h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [ebp-44h] xmm0 +
mov eax [eax+28h] +
mov [ebp-3Ch] eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
lea eax [ebp-0F8h] +
mov byte ptr [ebp-4] 4 +
push eax  +
call sub_41AA47  +
add esp 4 +
lea eax [ebp-124h] +
push eax  +
push 0  +
push offset unk_45261F  +
call loc_40CFA0  +
add esp 0Ch +
mov [esi+8] eax +
lea eax [ebp-64h] +
push eax  +
push 0  +
push offset aFalse  +
call loc_404C50  +
add esp 0Ch +
mov [esi+10h] eax +
lea eax [ebp-64h] +
push eax  +
push 0  +
push offset aTrue  +
call loc_404C50  +
mov [esi+14h] eax +
add esp 0Ch +
xor eax eax +
mov byte ptr [ebp-18h] 2Eh +
mov [ebp-24h] ax +
xorps xmm0 xmm0 +
lea eax [ebp-64h] +
movlpd oword ptr [ebp-2Ch] xmm0 +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push 1  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
call sub_41A22A  +
movzx eax word ptr [ebp-24h] +
add esp 14h +
mov [esi+0Ch] ax +
xorps xmm0 xmm0 +
xor eax eax +
mov byte ptr [ebp-1Ch] 2Ch +
mov [ebp-20h] ax +
lea eax [ebp-64h] +
push eax  +
lea eax [ebp-38h] +
movlpd oword ptr [ebp-38h] xmm0 +
push eax  +
push 1  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-20h] +
push eax  +
call sub_41A22A  +
movzx eax word ptr [ebp-20h] +
add esp 14h +
mov [esi+0Eh] ax +
lea ecx [ebp-98h] +
mov dword ptr [ebp-4] 0 +
call sub_404B00  +
mov [ebp-28h] esi +
push esi  +
mov byte ptr [ebp-4] 6 +
call sub_41A5E2  +
mov eax [esi] +
add esp 4 +
mov edi [eax+4] +
cmp edi offset dword_404BD0 +
jnz loc_40C914  +
lea eax [esi+4] +
inc dword ptr [eax]  +
mov dword_459FE8 esi +
lea ecx [ebp-30h] +
call sub_41A438  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
mov ecx edi +
call ds:off_442218  +
mov ecx esi +
call edi  +
jmp loc_40C8E6  +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4407BF  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 90h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebx+8] +
lea ecx [ebp-20h] +
push 0  +
mov [ebp-18h] esi +
call sub_41A3E0  +
mov dword ptr [ebp-4] 0 +
mov edi dword_4591BC +
mov eax dword_459FEC +
mov [ebp-24h] eax +
test edi edi +
jnz loc_40C9C9  +
push edi  +
lea ecx [ebp-1Ch] +
call sub_41A3E0  +
cmp dword_4591BC edi +
jnz loc_40C9BB  +
mov eax dword_4591A8 +
inc eax  +
mov dword_4591A8 eax +
mov dword_4591BC eax +
lea ecx [ebp-1Ch] +
call sub_41A438  +
mov edi dword_4591BC +
mov ecx [esi+4] +
cmp edi [ecx+0Ch] +
jnb loc_40C9E1  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_40CAC5  +
jmp loc_40C9E3  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_40C9F9  +
call sub_41A60E  +
cmp edi [eax+0Ch] +
jnb loc_40CA01  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_40CAC5  +
mov eax [ebp-24h] +
test eax eax +
jz loc_40CA0F  +
mov esi eax +
jmp loc_40CAC5  +
push 44h  +
call sub_41B637  +
mov esi eax +
add esp 4 +
mov [ebp-24h] esi +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-18h] +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_40CA38  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_40CA3D  +
lea eax [ecx+1Ch] +
jmp loc_40CA3D  +
mov eax offset unk_45261F +
push eax  +
lea ecx [ebp-6Ch] +
call loc_404A50  +
lea eax [ebp-38h] +
mov dword ptr [esi+4] 0 +
push eax  +
mov dword ptr [esi] offset off_4436F8 +
call sub_41A9DC  +
add esp 4 +
movups xmm0 oword ptr [eax] +
lea eax [ebp-0A0h] +
push eax  +
movups oword ptr [esi+8] xmm0 +
call sub_41AA47  +
add esp 4 +
lea ecx [ebp-6Ch] +
movups xmm0 oword ptr [eax] +
movups oword ptr [esi+18h] xmm0 +
movups xmm0 oword ptr [eax+10h] +
movups oword ptr [esi+28h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [esi+38h] xmm0 +
mov eax [eax+28h] +
mov [esi+40h] eax +
call sub_404B00  +
mov [ebp-18h] esi +
push esi  +
mov byte ptr [ebp-4] 2 +
call sub_41A5E2  +
mov eax [esi] +
add esp 4 +
mov edi [eax+4] +
cmp edi offset dword_404BD0 +
jnz loc_40CAED  +
lea eax [esi+4] +
inc dword ptr [eax]  +
mov dword_459FEC esi +
lea ecx [ebp-20h] +
call sub_41A438  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
mov ecx edi +
call ds:off_442218  +
mov ecx esi +
call edi  +
jmp loc_40CABF  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
cmp edx esi +
jz loc_40CB2A  +
mov edi 100h +
movzx eax word ptr [edx] +
cmp ax di +
jnb loc_40CB32  +
movzx eax al +
add edx 2 +
mov byte ptr [eax+ecx] 1 +
cmp edx esi +
jnz loc_40CB14  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ecx] +
test edi edi +
jz loc_40CB5B  +
mov eax [edi] +
push esi  +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov edx [esi+10h] +
mov [ebp-8] edx +
cmp edx edi +
ja loc_40CCC6  +
push ebx  +
mov ebx [esi+14h] +
cmp ebx edi +
jz loc_40CCC5  +
jnb loc_40CC72  +
mov ecx edi +
mov eax 7FFFFFFEh +
sub ecx edx +
sub eax edx +
cmp eax ecx +
jb loc_40CCD3  +
mov edx edi +
or edx 7 +
cmp edx 7FFFFFFEh +
jbe loc_40CBB4  +
mov edx 7FFFFFFEh +
jmp loc_40CBD2  +
mov ecx ebx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp ebx eax +
jbe loc_40CBCA  +
mov edx 7FFFFFFEh +
jmp loc_40CBD2  +
lea eax [ecx+ebx] +
cmp edx eax +
cmovb edx eax +
xor ecx ecx +
mov [ebp-4] edx +
add edx 1 +
setb cl  +
neg ecx  +
or ecx edx +
push ecx  +
mov ecx esi +
call loc_402C90  +
mov ecx [ebp-4] +
mov [esi+14h] ecx +
mov ecx [ebp-8] +
mov [ebp-0Ch] eax +
mov [esi+10h] edi +
lea ecx ds:2[ecx*2] +
push ecx  +
cmp ebx 8 +
jb loc_40CC54  +
mov edi [esi] +
push edi  +
push eax  +
call loc_41D210  +
lea ebx ds:2[ebx*2] +
add esp 0Ch +
cmp ebx 1000h +
jb loc_40CC36  +
mov ecx [edi-4] +
add ebx 23h +
sub edi ecx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_40CCCE  +
mov edi ecx +
push ebx  +
push edi  +
call sub_41B8B8  +
mov eax [ebp-0Ch] +
add esp 8 +
mov [esi] eax +
mov eax [ebp-8] +
mov [esi+10h] eax +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push eax  +
call loc_41D210  +
mov eax [ebp-0Ch] +
add esp 0Ch +
mov [esi] eax +
mov eax [ebp-8] +
mov [esi+10h] eax +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp edi 8 +
jnb loc_40CCC5  +
cmp ebx 8 +
jb loc_40CCC5  +
mov edi [esi] +
lea eax ds:2[edx*2] +
push eax  +
push edi  +
push esi  +
call loc_41D210  +
mov eax [esi+14h] +
add esp 0Ch +
lea ecx ds:2[eax*2] +
cmp ecx 1000h +
jb loc_40CCB4  +
mov edx [edi-4] +
add ecx 23h +
sub edi edx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_40CCCE  +
mov edi edx +
push ecx  +
push edi  +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [esi+14h] 7 +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_42071A  +
call loc_403250  +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi ecx +
mov [ebp-10h] esi +
mov [ebp-8] ebx +
mov ecx [edi+14h] +
mov eax ecx +
mov edx [edi+10h] +
sub eax edx +
mov [ebp-14h] edx +
mov [ebp-0Ch] ecx +
cmp esi eax +
ja loc_40CD9B  +
cmp dword ptr [ebp-0Ch] 8 +
lea eax [esi+edx] +
mov [edi+10h] eax +
mov ecx edi +
mov [ebp-4] edi +
jb loc_40CD25  +
mov ecx [edi] +
mov [ebp-4] ecx +
lea eax [esi+esi] +
mov [ebp-0Ch] eax +
add eax ebx +
cmp eax ecx +
jbe loc_40CD49  +
lea eax [ecx+edx*2] +
cmp ebx eax +
ja loc_40CD49  +
cmp ecx ebx +
ja loc_40CD40  +
xor ebx ebx +
jmp loc_40CD4B  +
mov ebx ecx +
sub ebx [ebp-8] +
sar ebx 1 +
jmp loc_40CD4B  +
mov ebx esi +
lea eax ds:2[edx*2] +
push eax  +
mov eax [ebp-0Ch] +
push ecx  +
add eax ecx +
push eax  +
call loc_41D790  +
lea esi [ebx+ebx] +
push esi  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
call loc_41D210  +
mov eax [ebp-10h] +
mov ecx eax +
sub ecx ebx +
add ecx ecx +
push ecx  +
lea ecx [eax+ebx] +
mov eax [ebp-8] +
lea ecx [eax+ecx*2] +
push ecx  +
mov ecx [ebp-4] +
add ecx esi +
push ecx  +
call loc_41D210  +
add esp 24h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax 7FFFFFFEh +
sub eax edx +
cmp eax esi +
jb loc_40CEA3  +
lea eax [esi+edx] +
mov edx eax +
mov [ebp-10h] eax +
or edx 7 +
cmp edx 7FFFFFFEh +
jbe loc_40CDC4  +
mov edx 7FFFFFFEh +
jmp loc_40CDE8  +
mov eax ecx +
shr eax 1 +
mov [ebp-4] eax +
mov eax 7FFFFFFEh +
sub eax [ebp-4] +
cmp ecx eax +
jbe loc_40CDDE  +
mov edx 7FFFFFFEh +
jmp loc_40CDE8  +
mov eax [ebp-4] +
add eax ecx +
cmp edx eax +
cmovb edx eax +
xor ecx ecx +
mov [ebp-4] edx +
add edx 1 +
setb cl  +
neg ecx  +
or ecx edx +
push ecx  +
mov ecx edi +
call loc_402C90  +
cmp dword ptr [ebp-0Ch] 8 +
lea edx [esi+esi] +
mov ecx [ebp-10h] +
mov [edi+10h] ecx +
mov ecx [ebp-4] +
lea esi [eax+esi*2] +
mov [edi+14h] ecx +
mov ecx [ebp-14h] +
push edx  +
push ebx  +
mov [ebp-8] eax +
lea ecx ds:2[ecx*2] +
mov [ebp-14h] esi +
mov [ebp-4] ecx +
push eax  +
jb loc_40CE81  +
mov esi [edi] +
call loc_41D210  +
push dword ptr [ebp-4]  +
push esi  +
push dword ptr [ebp-14h]  +
call loc_41D210  +
mov eax [ebp-0Ch] +
add esp 18h +
lea ecx ds:2[eax*2] +
cmp ecx 1000h +
jb loc_40CE67  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_40CEA8  +
mov esi edx +
push ecx  +
push esi  +
call sub_41B8B8  +
mov eax [ebp-8] +
add esp 8 +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call loc_41D210  +
push dword ptr [ebp-4]  +
push edi  +
push esi  +
call loc_41D210  +
mov eax [ebp-8] +
add esp 18h +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call loc_403250  +
call sub_42071A  +
push esi  +
mov esi [ecx] +
test esi esi +
jz loc_40CED2  +
push dword ptr [esi+8]  +
call sub_424926  +
push dword ptr [esi+10h]  +
call sub_424926  +
push dword ptr [esi+14h]  +
call sub_424926  +
add esp 0Ch +
pop esi  +
retn   +
***
mov eax [ebp+arg_4] +
mov dword ptr [eax] offset off_452494 +
mov dword ptr [eax+4] 5 +
mov eax 1 +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
push ebx  +
push edi  +
mov edi [ebp+0Ch] +
mov ebx ecx +
mov [ebp-4] eax +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_40CF88  +
push esi  +
push dword ptr [edi+8]  +
mov ecx ebx +
push eax  +
call loc_40CF00  +
mov esi edi +
mov edi [edi] +
mov ecx [esi+24h] +
cmp ecx 8 +
jb loc_40CF5D  +
mov eax [esi+10h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40CF53  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40CF90  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+20h] 0 +
push 2Ch  +
push esi  +
mov dword ptr [esi+24h] 7 +
mov [esi+10h] ax +
call sub_41B8B8  +
add esp 8 +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_40CF87  +
mov eax [ebp-4] +
jmp loc_40CF18  +
***
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40CFB0  +
push esi  +
sub eax edx +
push edi  +
push 1  +
lea edi [eax+1] +
push edi  +
call sub_42076B  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_40CFE6  +
test edi edi +
jz loc_40CFE0  +
push edi  +
push dword ptr [ebp+8]  +
push esi  +
call loc_41D210  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
call sub_41A1AD  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF0h +
sub esp 48h +
mov eax dword_458018 +
xor eax esp +
mov [esp+44h] eax +
push esi  +
mov esi ecx +
mov [esp+14h] edx +
mov ecx [ebp+0Ch] +
mov eax edx +
sub eax esi +
sar eax 3 +
imul eax eax +
push edi  +
cmp eax 20h +
jle loc_40D0B8  +
mov edi [ebp+8] +
test edi edi +
jle loc_40D0D9  +
push ecx  +
push edx  +
mov edx esi +
lea ecx [esp+18h] +
call loc_40D290  +
mov ecx [esp+20h] +
mov eax edi +
sar eax 2 +
add esp 8 +
sar edi 1 +
add edi eax +
mov eax ecx +
sub eax [esp+14h] +
sar eax 3 +
imul edx eax +
mov eax [esp+10h] +
sub eax esi +
sar eax 3 +
imul eax eax +
cmp eax edx +
mov eax [ebp+0Ch] +
push eax  +
push edi  +
jge loc_40D089  +
mov edx [esp+18h] +
mov ecx esi +
call loc_40CFF0  +
mov esi [esp+1Ch] +
mov edx [esp+20h] +
jmp loc_40D09C  +
mov edx ecx +
mov ecx [esp+1Ch] +
call loc_40CFF0  +
mov edx [esp+18h] +
mov [esp+20h] edx +
mov ecx [ebp+0Ch] +
mov eax edx +
sub eax esi +
add esp 8 +
sar eax 3 +
imul eax eax +
cmp eax 20h +
jg loc_40D028  +
cmp eax 2 +
jl loc_40D0C8  +
push ecx  +
mov ecx esi +
call loc_40D690  +
add esp 4 +
pop edi  +
pop esi  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp eax 20h +
jle loc_40D0B8  +
mov eax edx +
sub eax esi +
sar eax 3 +
imul ecx eax +
mov edi ecx +
mov [esp+10h] ecx +
sar edi 1 +
test edi edi +
jle loc_40D195  +
lea eax [edi+edi*2] +
lea eax [esi+eax*8] +
movups xmm0 oword ptr [eax-18h] +
sub eax 18h +
xor edx edx +
push dword ptr [ebp+0Ch]  +
movups oword ptr [esp+24h] xmm0 +
mov [esp+20h] eax +
dec edi  +
movq xmm0 qword ptr [eax+10h] +
mov [eax] dx +
mov edx edi +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
lea eax [esp+24h] +
push eax  +
push ecx  +
mov ecx esi +
movq qword ptr [esp+3Ch] xmm0 +
call loc_40D970  +
mov edx [esp+40h] +
add esp 0Ch +
cmp edx 8 +
jb loc_40D181  +
mov ecx [esp+20h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40D177  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D27C  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [esp+1Ch] +
mov ecx [esp+10h] +
test edi edi +
jg loc_40D101  +
mov edx [esp+18h] +
cmp ecx 2 +
jl loc_40D0C8  +
mov eax 0FFFFFFECh +
lea edi [edx-18h] +
sub eax esi +
mov [esp+10h] eax +
mov eax 18h +
sub eax esi +
mov [esp+1Ch] eax +
cmp ecx 2 +
jl loc_40D24D  +
movups xmm0 oword ptr [edi] +
xor eax eax +
mov ecx edi +
push esi  +
movups oword ptr [esp+24h] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esp+34h] xmm0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
call loc_4095F0  +
push dword ptr [ebp+0Ch]  +
lea eax [esp+24h] +
xor edx edx +
push eax  +
mov eax [esp+18h] +
mov ecx esi +
add eax 14h +
add eax edi +
sar eax 3 +
imul eax eax +
push eax  +
call loc_40D970  +
mov edx [esp+40h] +
add esp 0Ch +
cmp edx 8 +
jb loc_40D24D  +
mov ecx [esp+20h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40D243  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D27C  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [esp+1Ch] +
sub edi 18h +
lea eax [eax+edi] +
sar eax 3 +
imul eax eax +
mov ecx eax +
cmp eax 2 +
jge loc_40D1B7  +
mov ecx [esp+4Ch] +
pop edi  +
pop esi  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-4] eax +
mov al [ebp+0Ch] +
mov [ebp-8] al +
push ebx  +
push esi  +
mov [ebp-1Ch] ecx +
mov ecx [ebp+8] +
mov eax ecx +
push edi  +
mov edi edx +
mov [ebp-10h] ecx +
sub eax edi +
mov [ebp-14h] edi +
sar eax 3 +
add ecx 0FFFFFFE8h +
imul eax eax +
sar eax 1 +
lea eax [eax+eax*2] +
lea esi [edi+eax*8] +
mov eax ecx +
sub eax edi +
sar eax 3 +
imul eax eax +
cmp eax 28h +
jle loc_40D34B  +
inc eax  +
sar eax 3 +
lea ebx [eax+eax*2] +
lea ecx [eax+eax*2] +
shl ebx 3 +
mov eax [ebp-14h] +
shl ecx 4 +
add eax ecx +
mov [ebp-0Ch] ecx +
mov ecx [ebp-14h] +
lea edx [edi+ebx] +
mov edi [ebp-8] +
push edi  +
push eax  +
mov [ebp-18h] edx +
call sub_40DB90  +
lea eax [ebx+esi] +
mov ecx esi +
push edi  +
push eax  +
sub ecx ebx +
mov edx esi +
call sub_40DB90  +
mov eax [ebp-10h] +
add eax 0FFFFFFE8h +
mov edi eax +
sub edi ebx +
mov ebx [ebp-8] +
push ebx  +
push eax  +
sub eax [ebp-0Ch] +
mov edx edi +
mov ecx eax +
call sub_40DB90  +
mov ecx [ebp-18h] +
mov edx esi +
push ebx  +
push edi  +
call sub_40DB90  +
mov edi [ebp-14h] +
add esp 20h +
jmp loc_40D35B  +
push dword ptr [ebp-8]  +
mov edx esi +
push ecx  +
mov ecx edi +
call sub_40DB90  +
add esp 8 +
lea ebx [esi+18h] +
mov [ebp-0Ch] ebx +
cmp edi esi +
jnb loc_40D3CB  +
mov ebx [ebp-14h] +
lea edi [esi-18h] +
mov ebx [ebp-0Ch] +
mov ecx [ebp-10h] +
cmp ebx ecx +
jnb loc_40D433  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_40D3DC  +
mov eax [esi] +
mov edi [ebx+14h] +
mov ecx ebx +
cmp edi 8 +
jb loc_40D3E8  +
mov ecx [ebx] +
push dword ptr [esi+10h]  +
mov edx [ebx+10h] +
push eax  +
call loc_403530  +
add esp 8 +
test eax eax +
js loc_40D42D  +
mov eax ebx +
cmp edi 8 +
jb loc_40D404  +
mov eax [ebx] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_40D40E  +
mov ecx [esi] +
push dword ptr [ebx+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_403530  +
mov ecx [ebp-10h] +
add esp 8 +
test eax eax +
js loc_40D430  +
add ebx 18h +
cmp ebx ecx +
jb loc_40D3D2  +
jmp loc_40D430  +
mov ecx [ebp-10h] +
mov [ebp-0Ch] ebx +
mov edi ebx +
mov eax esi +
mov [ebp-8] eax +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_40D4EA  +
mov eax [esi] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_40D4F4  +
mov ecx [ebx] +
push dword ptr [esi+10h]  +
mov edx [ebx+10h] +
push eax  +
call loc_403530  +
add esp 8 +
test eax eax +
js loc_40D555  +
cmp dword ptr [ebx+14h] 8 +
mov eax ebx +
jb loc_40D511  +
mov eax [ebx] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_40D51B  +
mov ecx [esi] +
push dword ptr [ebx+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_403530  +
add esp 8 +
test eax eax +
js loc_40D56E  +
sub esi 18h +
cmp esi ebx +
jz loc_40D555  +
movups xmm0 oword ptr [ebx] +
movups xmm1 oword ptr [esi] +
movq xmm2 qword ptr [esi+10h] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebx+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [ebx] xmm1 +
movq qword ptr [ebx+10h] xmm2 +
mov eax [ebp-8] +
sub ebx 18h +
mov ecx [ebp-14h] +
sub eax 18h +
mov [ebp-8] eax +
cmp ecx eax +
jb loc_40D4E0  +
jmp loc_40D574  +
mov eax [ebp-8] +
mov ecx [ebp-14h] +
cmp eax ecx +
mov ecx [ebp-10h] +
jnz loc_40D5DB  +
cmp edi ecx +
jz loc_40D665  +
mov ebx [ebp-0Ch] +
cmp ebx edi +
jz loc_40D5AA  +
movups xmm0 oword ptr [ebx] +
movups xmm1 oword ptr [esi] +
movq xmm2 qword ptr [esi+10h] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebx+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [ebx] xmm1 +
movq qword ptr [ebx+10h] xmm2 +
movups xmm0 oword ptr [edi] +
add ebx 18h +
movups xmm1 oword ptr [esi] +
mov [ebp-0Ch] ebx +
movq xmm2 qword ptr [esi+10h] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
add esi 18h +
movups oword ptr [edi] xmm1 +
movq qword ptr [edi+10h] xmm2 +
add edi 18h +
jmp near ptr dword_40D43C+4  +
***
add eax 0FFFFFFE8h +
mov [ebp-8] eax +
cmp edi ecx +
jnz loc_40D63A  +
sub esi 18h +
cmp eax esi +
jz loc_40D60C  +
movups xmm0 oword ptr [esi] +
movups xmm1 oword ptr [eax] +
movq xmm2 qword ptr [eax+10h] +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [eax+10h] xmm0 +
movups oword ptr [esi] xmm1 +
movq qword ptr [esi+10h] xmm2 +
mov ebx [ebp-0Ch] +
movups xmm1 oword ptr [esi] +
sub ebx 18h +
movq xmm2 qword ptr [esi+10h] +
mov [ebp-0Ch] ebx +
movups xmm0 oword ptr [ebx] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebx+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [ebx] xmm1 +
movq qword ptr [ebx+10h] xmm2 +
jmp near ptr dword_40D43C+4  +
***
movups xmm0 oword ptr [eax] +
mov ebx [ebp-0Ch] +
movups xmm1 oword ptr [edi] +
movq xmm2 qword ptr [edi+10h] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [edi+10h] xmm0 +
add edi 18h +
movups oword ptr [eax] xmm1 +
movq qword ptr [eax+10h] xmm2 +
jmp loc_40D437  +
***
mov eax [ebp-1Ch] +
mov ecx [ebp-0Ch] +
pop edi  +
mov [eax+4] ecx +
mov ecx [ebp-4] +
mov [eax] esi +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-8] eax +
push ebx  +
mov ebx ecx +
mov [ebp-30h] edx +
mov [ebp-28h] ebx +
push esi  +
push edi  +
cmp ebx edx +
jz loc_40D94F  +
lea eax [ebx+18h] +
mov [ebp-24h] eax +
cmp eax edx +
jz loc_40D94F  +
movups xmm0 oword ptr [eax] +
lea esi [eax+14h] +
xor ecx ecx +
movq xmm1 qword ptr [eax+10h] +
mov edi eax +
mov dword ptr [eax+10h] 0 +
mov [eax] cx +
mov eax ebx +
mov dword ptr [esi] 7 +
cmp dword ptr [ebx+14h] 8 +
movups oword ptr [ebp-4Ch] xmm0 +
movups oword ptr [ebp-20h] xmm0 +
movq qword ptr [ebp-3Ch] xmm1 +
movq qword ptr [ebp-10h] xmm1 +
jb loc_40D6FC  +
mov eax [ebx] +
cmp dword ptr [ebp-0Ch] 8 +
lea ecx [ebp-20h] +
push dword ptr [ebx+10h]  +
movd edx xmm0 +
push eax  +
mov [ebp-2Ch] edx +
cmovnb ecx edx +
mov edx [ebp-10h] +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_40D810  +
mov eax [ebp-24h] +
lea edi [eax+18h] +
cmp ebx eax +
jz loc_40D7B6  +
mov eax [ebp-28h] +
lea esi [esi-18h] +
sub edi 18h +
lea ebx [esi-14h] +
cmp edi ebx +
jz loc_40D7AF  +
mov ecx [esi+18h] +
cmp ecx 8 +
jb loc_40D77B  +
mov eax [edi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40D771  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D962  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [esi+14h] 0 +
xor eax eax +
mov [edi] ax +
mov dword ptr [esi+18h] 7 +
movups xmm0 oword ptr [esi-14h] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [esi-4] +
movq qword ptr [edi+10h] xmm0 +
mov [esi-4] eax +
mov [esi-14h] ax +
mov eax [ebp-28h] +
mov dword ptr [esi] 7 +
cmp eax ebx +
jnz loc_40D735  +
mov ebx [ebp-28h] +
lea eax [ebp-20h] +
cmp ebx eax +
jz loc_40D905  +
mov ecx [ebx+14h] +
cmp ecx 8 +
jb loc_40D7FA  +
mov eax [ebx] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40D7F0  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D962  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
movups xmm0 oword ptr [ebp-4Ch] +
movups oword ptr [ebx] xmm0 +
movq xmm0 qword ptr [ebp-3Ch] +
movq qword ptr [ebx+10h] xmm0 +
jmp loc_40D93B  +
mov esi [ebp-24h] +
sub esi 18h +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_40D820  +
mov eax [esi] +
cmp dword ptr [ebp-0Ch] 8 +
lea ecx [ebp-20h] +
push dword ptr [esi+10h]  +
cmovnb ecx [ebp-2Ch] +
mov edx [ebp-10h] +
push eax  +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_40D8B2  +
cmp edi esi +
jz loc_40D8AB  +
mov ecx [edi+14h] +
cmp ecx 8 +
jb loc_40D87B  +
mov eax [edi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40D871  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D962  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [edi+10h] 0 +
xor eax eax +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
movups xmm0 oword ptr [esi] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [edi+10h] xmm0 +
mov [esi+10h] eax +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov edi esi +
jmp loc_40D813  +
***
lea eax [ebp-20h] +
cmp edi eax +
jz loc_40D905  +
mov ecx [edi+14h] +
cmp ecx 8 +
jb loc_40D8F2  +
mov eax [edi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40D8E8  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D962  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
movups xmm0 oword ptr [ebp-4Ch] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [ebp-3Ch] +
movq qword ptr [edi+10h] xmm0 +
jmp loc_40D93B  +
mov eax [ebp-0Ch] +
cmp eax 8 +
jb loc_40D93B  +
mov edx [ebp-2Ch] +
lea ecx ds:2[eax*2] +
mov eax edx +
cmp ecx 1000h +
jb loc_40D931  +
mov edx [edx-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D962  +
push ecx  +
push edx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-24h] +
mov edx [ebp-30h] +
add eax 18h +
mov [ebp-24h] eax +
cmp eax edx +
jnz loc_40D6C1  +
mov ecx [ebp-8] +
mov eax edx +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov edi edx +
mov [ebp-10h] eax +
mov edx [ebp+8] +
mov esi edi +
mov [ebp-8] edi +
mov ebx edi +
mov [ebp-4] ecx +
mov [ebp-18h] edx +
lea eax [edx-1] +
mov [ebp-0Ch] esi +
mov [ebp-1Ch] eax +
sar eax 1 +
mov [ebp-14h] eax +
cmp edi eax +
jge loc_40DA81  +
add ebx ebx +
lea eax [ebx+ebx*2] +
cmp dword ptr [ecx+eax*8+2Ch] 8 +
lea esi [ecx+eax*8] +
lea edx [ecx+eax*8] +
lea eax [esi+18h] +
jb loc_40D9C8  +
mov eax [esi+18h] +
cmp dword ptr [edx+44h] 8 +
lea ecx [edx+30h] +
jb loc_40D9D4  +
mov ecx [edx+30h] +
push dword ptr [esi+28h]  +
mov edx [edx+40h] +
push eax  +
call loc_403530  +
mov ecx [ebp-4] +
add esp 8 +
sar eax 1Fh +
add eax 2 +
add ebx eax +
lea eax [ebx+ebx*2] +
lea edi [ecx+eax*8] +
mov eax [ebp-8] +
lea eax [eax+eax*2] +
lea esi [ecx+eax*8] +
cmp esi edi +
jz loc_40DA6D  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40DA3A  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40DA30  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40DB81  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-4] +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
movups xmm0 oword ptr [edi] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
mov [edi+10h] eax +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
mov eax [ebp-14h] +
mov [ebp-8] ebx +
cmp ebx eax +
jl loc_40D9B0  +
mov edx [ebp-18h] +
mov esi [ebp-0Ch] +
mov edi ebx +
cmp ebx eax +
jnz loc_40DAA2  +
test dl 1 +
jnz loc_40DAA2  +
dec edx  +
lea eax [edx+edx*2] +
lea eax [ecx+eax*8] +
push eax  +
lea eax [ebx+ebx*2] +
lea ecx [ecx+eax*8] +
call loc_4095F0  +
mov edi [ebp-1Ch] +
lea ebx [edi-1] +
sar ebx 1 +
cmp esi edi +
jge loc_40DB69  +
mov ecx [ebp-4] +
mov edx [ebp-10h] +
lea eax [ebx+ebx*2] +
lea esi [ecx+eax*8] +
mov eax edx +
cmp dword ptr [edx+14h] 8 +
jb loc_40DAC5  +
mov eax [edx] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_40DACF  +
mov ecx [esi] +
push dword ptr [edx+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_40DB69  +
mov ecx [ebp-4] +
lea eax [edi+edi*2] +
lea edi [ecx+eax*8] +
cmp edi esi +
jz loc_40DB5B  +
mov ecx [edi+14h] +
cmp ecx 8 +
jb loc_40DB28  +
mov eax [edi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40DB1E  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40DB81  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-4] +
xor eax eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
movups xmm0 oword ptr [esi] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [edi+10h] xmm0 +
mov [esi+10h] eax +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov edi ebx +
dec ebx  +
sar ebx 1 +
cmp [ebp-0Ch] edi +
jl loc_40DAB2  +
mov ecx [ebp-4] +
lea eax [edi+edi*2] +
push dword ptr [ebp-10h]  +
lea ecx [ecx+eax*8] +
call loc_4095F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_40DBA7  +
mov eax [edi] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_40DBB1  +
mov ecx [esi] +
push dword ptr [edi+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_40DBE4  +
movups xmm0 oword ptr [edi] +
movups xmm1 oword ptr [esi] +
movq xmm2 qword ptr [esi+10h] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [edi] xmm1 +
movq qword ptr [edi+10h] xmm2 +
mov eax [esi+14h] +
mov edx esi +
cmp eax 8 +
jb loc_40DBF0  +
mov edx [esi] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_40DBFA  +
mov ecx [ebx] +
push dword ptr [esi+10h]  +
push edx  +
mov edx [ebx+10h] +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_40DC6C  +
movups xmm0 oword ptr [esi] +
mov eax edi +
movups xmm1 oword ptr [ebx] +
movq xmm2 qword ptr [ebx+10h] +
movups oword ptr [ebx] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [ebx+10h] xmm0 +
movups oword ptr [esi] xmm1 +
movq qword ptr [esi+10h] xmm2 +
cmp dword ptr [edi+14h] 8 +
jb loc_40DC37  +
mov eax [edi] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_40DC41  +
mov ecx [esi] +
push dword ptr [edi+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_403530  +
add esp 8 +
test eax eax +
jns loc_40DC6C  +
movups xmm0 oword ptr [edi] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [edi] xmm1 +
movq qword ptr [edi+10h] xmm2 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
sub ecx [ecx-4] +
jmp sub_4098F0  +
***
sub ecx [ecx-4] +
jmp sub_409920  +
***
sub ecx [ecx-4] +
jmp sub_4099E0  +
***
sub ecx [ecx-4] +
jmp sub_409A60  +
***
push esi  +
mov esi ecx +
call loc_40DCF0  +
test [ebp+arg_0] 1 +
jz loc_40DCDF  +
push 90h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea eax [esi+74h] +
mov dword ptr [esi] offset off_452584 +
push eax  +
mov dword ptr [esi+70h] 0 +
call ds:DeleteCriticalSection  +
mov ecx [esi+60h] +
cmp ecx 8 +
jb loc_40DD44  +
mov eax [esi+4Ch] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40DD3A  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40DE3C  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+5Ch] 0 +
mov dword ptr [esi+60h] 7 +
mov [esi+4Ch] ax +
mov ecx [esi+48h] +
cmp ecx 8 +
jb loc_40DD92  +
mov eax [esi+34h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40DD88  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40DE3C  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+44h] 0 +
mov dword ptr [esi+48h] 7 +
mov [esi+34h] ax +
mov ecx [esi+30h] +
cmp ecx 8 +
jb loc_40DDDC  +
mov eax [esi+1Ch] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40DDD2  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40DE3C  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 7 +
mov [esi+1Ch] ax +
mov ecx [esi+18h] +
cmp ecx 8 +
jb loc_40DE26  +
mov eax [esi+4] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40DE1C  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40DE3C  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 7 +
mov [esi+4] ax +
pop esi  +
retn   +
***
call sub_42071A  +
push 3  +
push offset asc_45281C  +
lea ecx [esi+1Ch] +
call loc_402B00  +
push 8  +
push offset aOobe_log  +
lea ecx [esi+34h] +
call loc_402B00  +
push 0  +
push offset unk_44EABC  +
lea ecx [esi+4Ch] +
call loc_402B00  +
push ecx  +
mov ecx esi +
mov byte ptr [esi+6Ch] 1 +
call loc_40DEC0  +
lea eax [esi+74h] +
mov dword ptr [esi+70h] 0 +
push eax  +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+8Ch] 1 +
mov byte ptr [esi+6Dh] 0 +
call ds:InitializeCriticalSection  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440832  +
mov eax large fs:0 +
push eax  +
sub esp 254h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
xor eax eax +
mov dword ptr [edi+64h] 1Eh +
mov dword ptr [ebp-220h] 0 +
mov dword ptr [ebp-21Ch] 7 +
mov [ebp-230h] ax +
mov [ebp-4] eax +
lea eax [ebp-218h] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_40E142  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
add [eax+38h] ch +
sub [ebp+0] al +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
call loc_402B00  +
lea edx [ebp-260h] +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-248h] +
call loc_412FE0  +
lea ecx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_40E137  +
lea edx [ebp-248h] +
lea ecx [ebp-230h] +
call loc_412EA0  +
test al al +
jz loc_40E137  +
cmp dword ptr [ebp-21Ch] 8 +
lea eax [ebp-230h] +
cmovnb eax [ebp-230h] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_40E0D2  +
push offset a_debug  +
lea ecx [ebp-260h] +
call sub_402A10  +
lea edx [ebp-260h] +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-230h] +
call loc_412FE0  +
lea ecx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_40E076  +
cmp dword ptr [ebp-21Ch] 8 +
lea eax [ebp-230h] +
cmovnb eax [ebp-230h] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jnz loc_40E076  +
mov eax 14h +
mov [edi+64h] eax +
jmp loc_40E137  +
lea ecx [ebp-230h] +
call sub_413080  +
test al al +
jz loc_40E137  +
push offset aAsu_trace  +
lea ecx [ebp-260h] +
call sub_402A10  +
lea edx [ebp-260h] +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-230h] +
call loc_412EA0  +
lea ecx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_40E137  +
lea ecx [ebp-230h] +
call sub_412E80  +
test al al +
jz loc_40E0DC  +
mov eax 0Ah +
mov [edi+64h] eax +
jmp loc_40E137  +
lea ecx [ebp-230h] +
call sub_413080  +
test al al +
jz loc_40E137  +
push offset aAsu_debug  +
lea ecx [ebp-260h] +
call sub_402A10  +
lea edx [ebp-260h] +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-230h] +
call loc_412EA0  +
lea ecx [ebp-260h] +
mov bl al +
call loc_4029B0  +
test bl bl +
jz loc_40E137  +
lea ecx [ebp-230h] +
call sub_412E80  +
test al al +
jz loc_40E137  +
mov dword ptr [edi+64h] 14h +
lea ecx [ebp-248h] +
call loc_4029B0  +
mov edx [ebp-21Ch] +
cmp edx 8 +
jb loc_40E17E  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40E174  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40E19C  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44086B  +
mov eax large fs:0 +
push eax  +
sub esp 240h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
lea eax [ebp-218h] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_40E21F  +
lea edx [ebp-218h] +
lea ecx [edx+2] +
nop   +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_40E200  +
sub edx ecx +
lea eax [ebp-218h] +
sar edx 1 +
lea ecx [edi+4Ch] +
push edx  +
push eax  +
call loc_402B00  +
push 11h  +
push offset aCreativecloudA  +
lea ecx [edi+4Ch] +
call loc_40BBF0  +
cmp dword ptr [edi+60h] 8 +
lea esi [edi+4Ch] +
mov edx esi +
jb loc_40E23B  +
mov edx [esi] +
mov ecx edx +
mov dword ptr [ebp-224h] 0 +
xor eax eax +
mov dword ptr [ebp-220h] 7 +
mov [ebp-234h] ax +
lea ebx [ecx+2] +
mov ecx edi +
call esi  +
mov [edi+6Ch] al +
jmp loc_40E4B9  +
lea eax [ebp-21Ch] +
push eax  +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov [edi+6Ch] al +
test al al +
jz loc_40E4AE  +
mov eax [ebp-21Ch] +
test eax eax +
jz loc_40E4AE  +
push eax  +
call ds:CloseHandle  +
mov al [edi+6Ch] +
jmp loc_40E4B9  +
mov byte ptr [edi+6Ch] 0 +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_4] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [esp+10h+var_4] ecx +
jz loc_40E555  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
jb loc_40E502  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_40E50D  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_40E518  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40E523  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40E52E  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_4]  +
mov ecx [esp+20h+var_4] +
push offset unk_44EABC  +
push offset unk_44EABC  +
push eax  +
mov ecx [ecx+4] +
push edx  +
push esi  +
push edi  +
push 0Ah  +
push ebx  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_4] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [esp+10h+var_4] ecx +
jz loc_40E5D5  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
jb loc_40E582  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_40E58D  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_40E598  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40E5A3  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40E5AE  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_4]  +
mov ecx [esp+20h+var_4] +
push offset unk_44EABC  +
push offset unk_44EABC  +
push eax  +
mov ecx [ecx+4] +
push edx  +
push esi  +
push edi  +
push 14h  +
push ebx  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
test eax eax +
jz loc_40E603  +
lea edx [ebp+arg_8] +
push edx  +
push eax  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push 1Eh  +
call sub_40E860  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [esp+18h+var_4] ecx +
jz loc_40E697  +
test eax eax +
lea esi [ecx+50h] +
mov edx offset unk_44EABC +
cmovnz edx eax +
cmp dword ptr [esi+14h] 8 +
mov [esp+18h+var_8] edx +
jb loc_40E645  +
mov esi [esi] +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40E650  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40E65B  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40E666  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40E671  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_C] +
push ecx  +
push [ebp+arg_8]  +
mov ecx [esp+28h+var_4] +
push offset unk_44EABC  +
push [esp+2Ch+var_8]  +
mov ecx [ecx+4] +
push esi  +
push eax  +
push edx  +
push edi  +
push 28h  +
push ebx  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [esp+18h+var_4] ecx +
jz loc_40E727  +
test eax eax +
lea esi [ecx+50h] +
mov edx offset unk_44EABC +
cmovnz edx eax +
cmp dword ptr [esi+14h] 8 +
mov [esp+18h+var_8] edx +
jb loc_40E6D5  +
mov esi [esi] +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40E6E0  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40E6EB  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40E6F6  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40E701  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_C] +
push ecx  +
push [ebp+arg_8]  +
mov ecx [esp+28h+var_4] +
push offset unk_44EABC  +
push [esp+2Ch+var_8]  +
mov ecx [ecx+4] +
push esi  +
push eax  +
push edx  +
push edi  +
push 32h  +
push ebx  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [esp+18h+var_4] ecx +
jz loc_40E7B7  +
test eax eax +
lea esi [ecx+50h] +
mov edx offset unk_44EABC +
cmovnz edx eax +
cmp dword ptr [esi+14h] 8 +
mov [esp+18h+var_8] edx +
jb loc_40E765  +
mov esi [esi] +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40E770  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40E77B  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40E786  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40E791  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_C] +
push ecx  +
push [ebp+arg_8]  +
mov ecx [esp+28h+var_4] +
push offset unk_44EABC  +
push [esp+2Ch+var_8]  +
mov ecx [ecx+4] +
push esi  +
push eax  +
push edx  +
push edi  +
push 3Ch  +
push ebx  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_10] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_C] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [esp+18h+var_4] ecx +
jz loc_40E855  +
mov ebx offset unk_44EABC +
test edx edx +
mov esi ebx +
cmovnz esi edx +
test eax eax +
mov [esp+18h+var_8] esi +
cmovnz ebx eax +
cmp dword ptr [ecx+64h] 8 +
mov [esp+18h+var_C] ebx +
lea ebx [ecx+50h] +
jb loc_40E803  +
mov ebx [ebx] +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40E80E  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40E819  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_40E824  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_40E82F  +
mov edi [edi] +
sub esp 8 +
lea ecx [ebp+arg_14] +
push ecx  +
push [ebp+arg_10]  +
mov ecx [esp+28h+var_4] +
push [esp+28h+var_C]  +
push [esp+2Ch+var_8]  +
mov ecx [ecx+4] +
push ebx  +
push eax  +
push edx  +
push esi  +
push [ebp+arg_4]  +
push edi  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
push ebx  +
push esi  +
push edi  +
jb loc_40E875  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_40E880  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_40E88B  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40E896  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40E8A1  +
mov ebx [ebx] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push edx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_40E941  +
test ebx ebx +
jz loc_40E941  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40E8F9  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40E904  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_40E90F  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_40E91A  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset unk_44EABC  +
push offset unk_44EABC  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 0Ah  +
push edi  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_40E9C1  +
test ebx ebx +
jz loc_40E9C1  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40E979  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40E984  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_40E98F  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_40E99A  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset unk_44EABC  +
push offset unk_44EABC  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 14h  +
push edi  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_40EA41  +
test ebx ebx +
jz loc_40EA41  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40E9F9  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40EA04  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_40EA0F  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_40EA1A  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset unk_44EABC  +
push offset unk_44EABC  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 1Eh  +
push edi  +
call sub_4039F0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_40EA7D  +
test eax eax +
jz loc_40EA7D  +
test edx edx +
jz loc_40EA7D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 28h  +
call sub_40EAE0  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_40EAAD  +
test eax eax +
jz loc_40EAAD  +
test edx edx +
jz loc_40EAAD  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 32h  +
call sub_40EAE0  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_40EADD  +
test eax eax +
jz loc_40EADD  +
test edx edx +
jz loc_40EADD  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 3Ch  +
call sub_40EAE0  +
pop edi  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
push esi  +
push edi  +
jb loc_40EAF3  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40EAFE  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_40EB09  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_40EB14  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push offset unk_44EABC  +
push [ebp+arg_4]  +
push [ebp+arg_C]  +
push eax  +
push edx  +
push esi  +
push [ebp+arg_0]  +
push edi  +
call sub_4039F0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_4] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [esp+10h+var_4] ecx +
jz loc_40EBB5  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
jb loc_40EB62  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_40EB6D  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_40EB78  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40EB83  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40EB8E  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_4]  +
mov ecx [esp+20h+var_4] +
push offset unk_45261F  +
push offset unk_45261F  +
push eax  +
mov ecx [ecx+4] +
push edx  +
push esi  +
push edi  +
push 0Ah  +
push ebx  +
call loc_403B10  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_4] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [esp+10h+var_4] ecx +
jz loc_40EC35  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
jb loc_40EBE2  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_40EBED  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_40EBF8  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40EC03  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40EC0E  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_4]  +
mov ecx [esp+20h+var_4] +
push offset unk_45261F  +
push offset unk_45261F  +
push eax  +
mov ecx [ecx+4] +
push edx  +
push esi  +
push edi  +
push 14h  +
push ebx  +
call loc_403B10  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
test eax eax +
jz loc_40EC63  +
lea edx [ebp+arg_8] +
push edx  +
push eax  +
push offset unk_45261F  +
push offset unk_45261F  +
push 1Eh  +
call sub_40F140  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [esp+18h+var_4] ecx +
jz loc_40ECF7  +
test eax eax +
lea esi [ecx+50h] +
mov edx offset unk_45261F +
cmovnz edx eax +
cmp dword ptr [esi+14h] 8 +
mov [esp+18h+var_8] edx +
jb loc_40ECA5  +
mov esi [esi] +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40ECB0  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40ECBB  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40ECC6  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40ECD1  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_C] +
push ecx  +
push [ebp+arg_8]  +
mov ecx [esp+28h+var_4] +
push offset unk_45261F  +
push [esp+2Ch+var_8]  +
mov ecx [ecx+4] +
push esi  +
push eax  +
push edx  +
push edi  +
push 28h  +
push ebx  +
call loc_403B10  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [esp+18h+var_4] ecx +
jz loc_40ED87  +
test eax eax +
lea esi [ecx+50h] +
mov edx offset unk_45261F +
cmovnz edx eax +
cmp dword ptr [esi+14h] 8 +
mov [esp+18h+var_8] edx +
jb loc_40ED35  +
mov esi [esi] +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40ED40  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40ED4B  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40ED56  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40ED61  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_C] +
push ecx  +
push [ebp+arg_8]  +
mov ecx [esp+28h+var_4] +
push offset unk_45261F  +
push [esp+2Ch+var_8]  +
mov ecx [ecx+4] +
push esi  +
push eax  +
push edx  +
push edi  +
push 32h  +
push ebx  +
call loc_403B10  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [esp+18h+var_4] ecx +
jz loc_40EE17  +
test eax eax +
lea esi [ecx+50h] +
mov edx offset unk_45261F +
cmovnz edx eax +
cmp dword ptr [esi+14h] 8 +
mov [esp+18h+var_8] edx +
jb loc_40EDC5  +
mov esi [esi] +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40EDD0  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40EDDB  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40EDE6  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40EDF1  +
mov ebx [ebx] +
sub esp 8 +
lea ecx [ebp+arg_C] +
push ecx  +
push [ebp+arg_8]  +
mov ecx [esp+28h+var_4] +
push offset unk_45261F  +
push [esp+2Ch+var_8]  +
mov ecx [ecx+4] +
push esi  +
push eax  +
push edx  +
push edi  +
push 3Ch  +
push ebx  +
call loc_403B10  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_40EE49  +
test eax eax +
jz loc_40EE49  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_45261F  +
push 0Ah  +
call loc_40EF40  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_40EE79  +
test eax eax +
jz loc_40EE79  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_45261F  +
push 14h  +
call loc_40EF40  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_40EEA9  +
test eax eax +
jz loc_40EEA9  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_45261F  +
push 1Eh  +
call loc_40EF40  +
pop esi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_40EEDD  +
test eax eax +
jz loc_40EEDD  +
test edx edx +
jz loc_40EEDD  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 28h  +
call loc_40EF40  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_40EF0D  +
test eax eax +
jz loc_40EF0D  +
test edx edx +
jz loc_40EF0D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 32h  +
call loc_40EF40  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_40EF3D  +
test eax eax +
jz loc_40EF3D  +
test edx edx +
jz loc_40EF3D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 3Ch  +
call loc_40EF40  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4408B0  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebp+0Ch] +
mov edx [ebp+14h] +
mov [ebp-34h] eax +
mov eax [ebp+18h] +
mov [ebp-30h] eax +
mov eax [ebp+1Ch] +
mov [ebp-2Ch] eax +
test edx edx +
jz loc_40F06D  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
mov ecx edx +
mov [ebp-4] eax +
mov [ebp-3Ch] eax +
mov dword ptr [ebp-38h] 0Fh +
mov [ebp-4Ch] al +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40EFB3  +
sub ecx esi +
push ecx  +
push edx  +
lea ecx [ebp-4Ch] +
call loc_40A5D0  +
lea edx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-4Ch] +
call loc_412B80  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-38h] +
cmp edx 10h +
jb loc_40F00D  +
mov ecx [ebp-4Ch] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40F003  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40F08B  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
lea edi [ebx+38h] +
cmovnb ecx [ebp-28h] +
cmp dword ptr [edi+14h] 8 +
jb loc_40F023  +
mov edi [edi] +
cmp dword ptr [ebx+34h] 8 +
lea eax [ebx+20h] +
jb loc_40F02E  +
mov eax [eax] +
cmp dword ptr [ebx+1Ch] 8 +
lea edx [ebx+8] +
jb loc_40F039  +
mov edx [edx] +
cmp dword ptr [ebx+7Ch] 8 +
lea esi [ebx+68h] +
jb loc_40F044  +
mov esi [esi] +
sub esp 8 +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
push offset unk_45261F  +
push dword ptr [ebp-34h]  +
push ecx  +
mov ecx [ebx+4] +
push edi  +
push eax  +
push edx  +
push dword ptr [ebp+8]  +
push esi  +
call loc_403B10  +
lea ecx [ebp-28h] +
call loc_4029B0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
call sub_42071A  +
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_10] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_C] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [esp+18h+var_4] ecx +
jz loc_40F135  +
mov ebx offset unk_45261F +
test edx edx +
mov esi ebx +
cmovnz esi edx +
test eax eax +
mov [esp+18h+var_8] esi +
cmovnz ebx eax +
cmp dword ptr [ecx+64h] 8 +
mov [esp+18h+var_C] ebx +
lea ebx [ecx+50h] +
jb loc_40F0E3  +
mov ebx [ebx] +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_40F0EE  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_40F0F9  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_40F104  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_40F10F  +
mov edi [edi] +
sub esp 8 +
lea ecx [ebp+arg_14] +
push ecx  +
push [ebp+arg_10]  +
mov ecx [esp+28h+var_4] +
push [esp+28h+var_C]  +
push [esp+2Ch+var_8]  +
mov ecx [ecx+4] +
push ebx  +
push eax  +
push edx  +
push esi  +
push [ebp+arg_4]  +
push edi  +
call loc_403B10  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
push ebx  +
push esi  +
push edi  +
jb loc_40F155  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_40F160  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_40F16B  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_40F176  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_40F181  +
mov ebx [ebx] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push edx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call loc_403B10  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ecx  +
call ds:InitializeCriticalSectionEx  +
test eax eax +
jnz loc_40F1D2  +
call ds:GetLastError  +
test eax eax +
jle locret_40F1D4  +
movzx eax ax +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4408F8  +
mov eax large fs:0 +
push eax  +
sub esp 7Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-5Ch] ebx +
mov eax [ebx+8] +
mov edx [ebp+0Ch] +
mov edi [ebp+8] +
mov [ebp-60h] edx +
test eax eax +
jz loc_40F23A  +
mov esi [eax] +
push edi  +
push offset aParsingTheComm  +
push offset aCommandlinepar  +
mov esi [esi+34h] +
push offset unk_44EABC  +
push 1Eh  +
push eax  +
jmp loc_40F290  +
mov esi dword_459FFC +
test esi esi +
jz loc_40F26F  +
push edi  +
push offset aParsingTheComm  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 1Eh  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 1Ch +
jmp loc_40F29D  +
mov eax dword_45A000 +
test eax eax +
jz loc_40F2AB  +
push edi  +
push offset aParsingTheComm  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
push 1Eh  +
push eax  +
mov eax [eax] +
mov esi [eax+34h] +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
mov esi dword_459FFC +
mov eax dword_45A000 +
mov edx [ebp-60h] +
mov ecx [ebx+8] +
test edi edi +
jg loc_40F331  +
test ecx ecx +
jz loc_40F2CD  +
mov esi [ecx] +
push edi  +
push offset aArgumentCountI  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
push 32h  +
push ecx  +
jmp loc_40F31A  +
test esi esi +
jz loc_40F301  +
push edi  +
push offset aArgumentCountI  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 1Ch +
xor al al +
jmp loc_40F57D  +
test eax eax +
jz loc_40F32A  +
mov esi [eax] +
push edi  +
push offset aArgumentCountI  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
push 32h  +
push eax  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
xor al al +
jmp loc_40F57D  +
test ecx ecx +
jz loc_40F350  +
push dword ptr [edx]  +
mov esi [ecx] +
push offset aFirstCommandLi  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
mov esi [esi+34h] +
push 14h  +
push ecx  +
jmp loc_40F39D  +
test esi esi +
jz loc_40F380  +
push dword ptr [edx]  +
mov ecx esi +
push offset aFirstCommandLi  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 14h  +
call ds:off_442218  +
call esi  +
add esp 1Ch +
jmp loc_40F3AA  +
test eax eax +
jz loc_40F3AA  +
push dword ptr [edx]  +
push offset aFirstCommandLi  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
push 14h  +
push eax  +
mov eax [eax] +
mov esi [eax+34h] +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
mov eax 1 +
mov [ebp-7Ch] eax +
cmp edi eax +
jle loc_40F57B  +
mov ecx [ebx+8] +
test ecx ecx +
jnz loc_40F451  +
mov esi dword_459FFC +
test esi esi +
jz loc_40F447  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
mov ecx esi +
cmovnb eax [ebp-28h] +
push eax  +
push offset aArgumentSpecif  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 14h  +
call ds:off_442218  +
call esi  +
add esp 1Ch +
jmp loc_40F481  +
mov ecx dword_45A000 +
test ecx ecx +
jz loc_40F481  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
mov eax [ecx] +
push offset aArgumentSpecif  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
mov esi [eax+34h] +
push 14h  +
push ecx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
xor eax eax +
mov dword ptr [ebp-68h] 0 +
mov ecx 4 +
mov [ebp-78h] ax +
cmp [ebp-18h] ecx +
lea eax [ebp-28h] +
mov dword ptr [ebp-64h] 7 +
cmovb ecx [ebp-18h] +
cmp dword ptr [ebp-14h] 8 +
push ecx  +
cmovnb eax [ebp-28h] +
lea ecx [ebp-78h] +
push eax  +
call loc_402B00  +
cmp dword ptr [ebp-64h] 8 +
lea esi [ebp-78h] +
mov edi [ebp-78h] +
cmovnb esi edi +
cmp dword ptr [ebp-68h] 4 +
jnz loc_40F4EA  +
mov ecx offset aPsn +
mov edx 4 +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_40F4EA  +
add ecx 2 +
sub edx 1 +
jnz loc_40F4D5  +
mov bl 1 +
jmp loc_40F4EC  +
xor bl bl +
mov eax [ebp-64h] +
cmp eax 8 +
jb loc_40F523  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_40F519  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push ecx  +
push edi  +
call sub_41B8B8  +
add esp 8 +
test bl bl +
jz loc_40F59B  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_40F568  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40F55E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ebx [ebp-5Ch] +
mov eax [ebp-7Ch] +
inc eax  +
mov [ebp-7Ch] eax +
cmp eax [ebp+8] +
jl near ptr dword_40F3BC+4  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push dword ptr [ebp-7Ch]  +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
mov edx [ebp-18h] +
cmovnb ecx [ebp-28h] +
push 1  +
push offset asc_452B24  +
push ecx  +
call loc_40FF30  +
mov esi eax +
add esp 10h +
cmp esi 0FFFFFFFFh +
jnz loc_40F695  +
mov ebx [ebp-5Ch] +
mov ecx [ebx+8] +
test ecx ecx +
jnz loc_40F61B  +
mov esi dword_459FFC +
test esi esi +
jz loc_40F611  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
mov ecx esi +
cmovnb eax [ebp-28h] +
push eax  +
push offset aTheArgumentDoe  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
call ds:off_442218  +
call esi  +
add esp 1Ch +
jmp loc_40F64B  +
mov ecx dword_45A000 +
test ecx ecx +
jz loc_40F64B  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
mov eax [ecx] +
push offset aTheArgumentDoe  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
mov esi [eax+34h] +
push 32h  +
push ecx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_40F56B  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40F686  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
jmp loc_40F56B  +
***
xor eax eax +
mov dword ptr [ebp-30h] 0 +
cmp [ebp-18h] esi +
mov ecx esi +
mov [ebp-40h] ax +
lea eax [ebp-28h] +
cmovb ecx [ebp-18h] +
cmp dword ptr [ebp-14h] 8 +
push ecx  +
cmovnb eax [ebp-28h] +
lea ecx [ebp-40h] +
push eax  +
mov dword ptr [ebp-2Ch] 7 +
call loc_402B00  +
mov byte ptr [ebp-4] 1 +
xor eax eax +
inc esi  +
mov [ebp-58h] ax +
mov eax [ebp-18h] +
mov dword ptr [ebp-48h] 0 +
mov dword ptr [ebp-44h] 7 +
cmp eax esi +
jb loc_40FE1A  +
sub eax esi +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push ecx  +
lea ecx [ebp-58h] +
lea eax [eax+esi*2] +
push eax  +
call loc_402B00  +
mov byte ptr [ebp-4] 2 +
xor eax eax +
mov ecx 2 +
mov [ebp-78h] ax +
cmp [ebp-30h] ecx +
lea eax [ebp-40h] +
mov dword ptr [ebp-68h] 0 +
cmovb ecx [ebp-30h] +
cmp dword ptr [ebp-2Ch] 8 +
push ecx  +
cmovnb eax [ebp-40h] +
lea ecx [ebp-78h] +
push eax  +
mov dword ptr [ebp-64h] 7 +
call loc_402B00  +
cmp dword ptr [ebp-64h] 8 +
lea esi [ebp-78h] +
mov edi [ebp-78h] +
cmovnb esi edi +
cmp dword ptr [ebp-68h] 2 +
jnz loc_40F77B  +
mov ecx offset asc_452B74 +
mov edx 2 +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_40F77B  +
add ecx 2 +
sub edx 1 +
jnz loc_40F766  +
xor bl bl +
jmp loc_40F77D  +
mov bl 1 +
mov eax [ebp-64h] +
cmp eax 8 +
jb loc_40F7B4  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_40F7AA  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push ecx  +
push edi  +
call sub_41B8B8  +
add esp 8 +
test bl bl +
jz loc_40F91A  +
mov ebx [ebp-5Ch] +
mov eax [ebx+8] +
test eax eax +
jz loc_40F7DF  +
mov esi [eax] +
push offset aTheIsNotThereF  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
mov esi [esi+34h] +
push 32h  +
push eax  +
jmp loc_40F833  +
mov esi dword_459FFC +
test esi esi +
jz loc_40F813  +
push offset aTheIsNotThereF  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
jmp loc_40F840  +
mov eax dword_45A000 +
test eax eax +
jz loc_40F840  +
push offset aTheIsNotThereF  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
push 32h  +
push eax  +
mov eax [eax] +
mov esi [eax+34h] +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 14h +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_40F87E  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40F874  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_40F8BC  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40F8B2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-14h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
cmp edx 8 +
jb loc_40F56B  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40F90B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
jmp loc_40F56B  +
***
xor eax eax +
mov dword ptr [ebp-68h] 0 +
mov [ebp-78h] ax +
mov eax [ebp-30h] +
mov dword ptr [ebp-64h] 7 +
cmp eax 2 +
jb loc_40FE1A  +
add eax 0FFFFFFFEh +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebp-2Ch] 8 +
lea eax [ebp-40h] +
cmovnb eax [ebp-40h] +
push ecx  +
add eax 4 +
lea ecx [ebp-78h] +
push eax  +
call loc_402B00  +
lea eax [ebp-78h] +
push eax  +
lea ecx [ebp-40h] +
call loc_4095F0  +
mov edx [ebp-64h] +
cmp edx 8 +
jb loc_40F9A4  +
mov ecx [ebp-78h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40F99A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
cmp dword ptr [ebp-30h] 0 +
jz loc_40FCC4  +
mov esi [ebp-48h] +
test esi esi +
jz loc_40FCC4  +
mov ecx [ebp-5Ch] +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-88h] +
push eax  +
call sub_403280  +
mov ebx [ebp-80h] +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_40FBC4  +
cmp dword ptr [ebx+24h] 8 +
lea edx [ebx+10h] +
jb loc_40F9E5  +
mov edx [ebx+10h] +
mov edi [ebp-2Ch] +
lea ecx [ebp-40h] +
push dword ptr [ebx+20h]  +
mov esi [ebp-40h] +
cmp edi 8 +
push edx  +
mov edx [ebp-30h] +
cmovnb ecx esi +
call loc_403530  +
shr eax 1Fh +
add esp 8 +
test al al +
jnz loc_40FBC1  +
mov eax [ebp-5Ch] +
cmp ebx [eax] +
jz loc_40FBC1  +
mov ebx eax +
mov ecx [ebx+8] +
test ecx ecx +
jz loc_40FA5B  +
cmp edi 8 +
lea eax [ebp-40h] +
cmovnb eax esi +
push eax  +
mov eax [ecx] +
push offset aTheArgumentSAl  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
mov esi [eax+34h] +
push 32h  +
push ecx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
mov edi [ebp-2Ch] +
add esp 18h +
mov esi [ebp-40h] +
jmp loc_40FAE7  +
mov ebx dword_459FFC +
test ebx ebx +
jz loc_40FAA2  +
cmp edi 8 +
lea eax [ebp-40h] +
mov ecx ebx +
cmovnb eax esi +
push eax  +
push offset aTheArgumentSAl  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
call ds:off_442218  +
call ebx  +
mov edi [ebp-2Ch] +
add esp 1Ch +
mov esi [ebp-40h] +
mov ebx [ebp-5Ch] +
jmp loc_40FAE7  +
mov ecx dword_45A000 +
test ecx ecx +
jz loc_40FAE5  +
cmp edi 8 +
lea eax [ebp-40h] +
cmovnb eax esi +
push eax  +
mov eax [ecx] +
push offset aTheArgumentSAl  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
mov esi [eax+34h] +
push 32h  +
push ecx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
mov edi [ebp-2Ch] +
add esp 18h +
mov esi [ebp-40h] +
mov ebx [ebp-5Ch] +
jmp loc_40FAE7  +
mov ebx eax +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_40FB2B  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40FB1B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
mov edi [ebp-2Ch] +
add esp 8 +
mov esi [ebp-40h] +
mov byte ptr [ebp-4] 0 +
cmp edi 8 +
jb loc_40FB63  +
lea edi ds:2[edi*2] +
mov eax esi +
cmp edi 1000h +
jb loc_40FB59  +
mov esi [esi-4] +
add edi 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edi  +
push esi  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-14h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
cmp edx 8 +
jb loc_40F56B  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40FBB2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
jmp loc_40F56B  +
***
mov esi [ebp-48h] +
mov ebx [ebp-5Ch] +
lea eax [ebp-40h] +
push eax  +
mov ecx ebx +
call loc_40FE30  +
lea ecx [ebp-58h] +
cmp eax ecx +
jz loc_40FBEA  +
cmp dword ptr [ebp-44h] 8 +
push esi  +
cmovnb ecx [ebp-58h] +
push ecx  +
mov ecx eax +
call loc_402B00  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_40FC28  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40FC1E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_40FC66  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40FC5C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-14h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
cmp edx 8 +
jb loc_40F56B  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40FCB5  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
jmp loc_40F56B  +
***
mov ebx [ebp-5Ch] +
mov ecx [ebx+8] +
test ecx ecx +
jnz loc_40FD18  +
mov esi dword_459FFC +
test esi esi +
jz loc_40FD0E  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
mov ecx esi +
cmovnb eax [ebp-28h] +
push eax  +
push offset aTheArgumentKey  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
call ds:off_442218  +
call esi  +
add esp 1Ch +
jmp loc_40FD48  +
mov ecx dword_45A000 +
test ecx ecx +
jz loc_40FD48  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
mov eax [ecx] +
push offset aTheArgumentKey  +
push offset aCommandlinepar  +
push offset unk_44EABC  +
mov esi [eax+34h] +
push 32h  +
push ecx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_40FD86  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40FD7C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_40FDC0  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40FDB6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-14h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
cmp edx 8 +
jb loc_40F56B  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40FE0B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FE1F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
jmp loc_40F56B  +
***
call loc_402C80  +
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440930  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-14h] edi +
mov ebx [ebp+8] +
lea eax [ebp-28h] +
push ebx  +
push eax  +
mov [ebp-10h] ebx +
call sub_403280  +
mov esi [ebp-20h] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_40FEA2  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_40FE82  +
mov edx [esi+10h] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_40FE8C  +
mov ecx [ebx] +
push dword ptr [esi+20h]  +
push edx  +
mov edx [ebx+10h] +
call loc_403530  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_40FF10  +
cmp dword ptr [edi+4] 3FFFFFFh +
jz loc_40FF27  +
mov ebx [edi] +
mov [ebp-1Ch] edi +
mov dword ptr [ebp-4] 0 +
push 40h  +
mov dword ptr [ebp-18h] 0 +
call sub_41B637  +
mov edi eax +
add esp 4 +
mov [ebp-18h] edi +
push dword ptr [ebp-10h]  +
lea ecx [edi+10h] +
mov dword ptr [ebp-4] 1 +
call sub_402A60  +
mov ecx [ebp-14h] +
xor eax eax +
push edi  +
push dword ptr [ebp-24h]  +
mov dword ptr [edi+38h] 0 +
push dword ptr [ebp-28h]  +
mov dword ptr [edi+3Ch] 7 +
mov [edi+28h] ax +
mov [edi] ebx +
mov [edi+4] ebx +
mov [edi+8] ebx +
mov [edi+0Ch] ax +
call sub_402F50  +
mov esi eax +
lea eax [esi+28h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_4012C0  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 114h +
mov eax dword_458018 +
xor eax esp +
mov [esp+110h] eax +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+10h] +
mov [esp+0Ch] eax +
push esi  +
mov esi edx +
push edi  +
mov edi ecx +
mov [esp+10h] edi +
test ebx ebx +
jz loc_410026  +
test esi esi +
jz loc_410026  +
push 100h  +
lea eax [esp+1Ch] +
push 0  +
push eax  +
call sub_41DD10  +
lea edi [edi+esi*2] +
add esp 0Ch +
mov esi [esp+14h] +
lea ecx [esp+18h] +
lea eax [esi+ebx*2] +
push eax  +
push esi  +
call sub_40CB00  +
mov edx [esp+10h] +
test al al +
jnz loc_40FFFF  +
cmp edx edi +
jnb loc_40FFC8  +
mov ecx ebx +
mov eax esi +
test ebx ebx +
jz loc_40FFC1  +
movzx esi word ptr [edx] +
nop   +
cmp [eax] si +
jz loc_40FFE2  +
add eax 2 +
sub ecx 1 +
jnz loc_40FFB0  +
mov esi [esp+14h] +
add edx 2 +
cmp edx edi +
jb loc_40FFA4  +
or edx 0FFFFFFFFh +
mov eax edx +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+110h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
sub edx [esp+10h] +
sar edx 1 +
mov eax edx +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+110h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx edx +
cmp edx edi +
jnb loc_410026  +
mov esi 100h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+110h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
sub ecx edx +
sar ecx 1 +
pop edi  +
mov eax ecx +
mov ecx [esp+118h] +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_8] +
push ecx  +
push 0  +
push [ebp+arg_4]  +
push 0FFFFFFFFh  +
push eax  +
call sub_404490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_423120  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push offset ProcName  +
push offset ModuleName  +
mov [ebp+var_C] edx +
mov edi ecx +
xor bl bl +
mov [ebp+var_8] 0 +
call ds:GetModuleHandleW  +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_410188  +
lea eax [ebp+var_8] +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
mov ecx esi +
call ds:off_442218  +
call esi  +
test eax eax +
jz loc_410105  +
cmp [ebp+var_8] 1 +
mov eax 20h +
mov ecx 40h +
mov bl 1 +
cmovz eax ecx +
mov [edi] eax +
jmp loc_4101E9  +
cmp dword_459FFC 0 +
jz loc_410148  +
call ds:GetLastError  +
mov esi dword_459FFC +
mov ecx esi +
push eax  +
push offset aInside_getosde  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aOsutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_442218  +
call esi  +
add esp 1Ch +
jmp loc_4101E9  +
cmp dword_45A000 0 +
jz loc_4101E9  +
call ds:GetLastError  +
mov ecx dword_45A000 +
push eax  +
push offset aInside_getosde  +
push offset aOsutils  +
mov esi [ecx] +
push offset unk_44EABC  +
push 32h  +
push ecx  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
jmp loc_4101E9  +
mov esi dword_459FFC +
test esi esi +
jz loc_4101BC  +
push offset aInside_getos_0  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aOsutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
jmp loc_4101E9  +
mov eax dword_45A000 +
test eax eax +
jz loc_4101E9  +
mov esi [eax] +
push offset aInside_getos_0  +
push offset aOsutils  +
push offset unk_44EABC  +
mov esi [esi+34h] +
mov ecx esi +
push 32h  +
push eax  +
call ds:off_442218  +
call esi  +
add esp 14h +
mov eax [ebp+var_C] +
xor ecx ecx +
cmp dword ptr [edi] 20h +
pop edi  +
setnz cl  +
mov [eax] ecx +
mov al bl +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push offset aIswow64proce_0  +
push offset ModuleName  +
mov edi edx +
mov ebx ecx +
call ds:GetModuleHandleW  +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_4102DB  +
mov esi dword_459FFC +
test esi esi +
jz loc_410294  +
push offset aInside_getos_1  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aOsutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
mov edx edi +
mov ecx ebx +
call sub_410090  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
mov eax dword_45A000 +
test eax eax +
jz loc_4102C1  +
mov esi [eax] +
push offset aInside_getos_1  +
push offset aOsutils  +
push offset unk_44EABC  +
mov esi [esi+34h] +
mov ecx esi +
push 32h  +
push eax  +
call ds:off_442218  +
call esi  +
add esp 14h +
mov edx edi +
mov ecx ebx +
call sub_410090  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
mov ecx esi +
call ds:off_442218  +
call esi  +
test eax eax +
jnz loc_4103A7  +
cmp dword_459FFC eax +
jz loc_410353  +
call ds:GetLastError  +
mov esi dword_459FFC +
mov ecx esi +
push eax  +
push offset aInside_getos_2  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aOsutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_442218  +
call esi  +
add esp 1Ch +
mov edx edi +
mov ecx ebx +
call sub_410090  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
cmp dword_45A000 0 +
jz loc_41038D  +
call ds:GetLastError  +
mov ecx dword_45A000 +
push eax  +
push offset aInside_getos_2  +
push offset aOsutils  +
mov esi [ecx] +
push offset unk_44EABC  +
push 32h  +
push ecx  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
mov edx edi +
mov ecx ebx +
call sub_410090  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
cmp word ptr [ebp+var_8] 0 +
jz loc_4103B4  +
mov dword ptr [ebx] 40h +
mov cx word ptr [ebp+var_C] +
mov eax 0AA64h +
cmp cx ax +
jnz loc_4103DB  +
mov dword ptr [edi] 2 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov edx 8664h +
cmp cx dx +
mov ecx [ebp+var_4] +
setz al  +
xor ecx ebp +
mov [edi] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 12Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+128h] eax +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov [esp+0Ch] ebx +
mov esi 4 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
push 110h  +
lea eax [esp+18h] +
mov dword ptr [esp+14h] 11Ch +
push 0  +
push eax  +
call sub_41DD10  +
add esp 0Ch +
xor eax eax +
mov [esp+126h] ax +
mov [esp+128h] eax +
push 3  +
push 20h  +
push 3  +
push 1  +
push 3  +
push 2  +
push eax  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
movzx ecx si +
lea eax [esp+18h] +
mov [esp+1Ch] ecx +
xor ecx ecx +
push 23h  +
push eax  +
mov dword ptr [esp+28h] 0 +
mov [esp+134h] cx +
call ds:VerifyVersionInfoW  +
test eax eax +
jz loc_4104C9  +
inc esi  +
cmp esi 0Fh +
jl loc_410440  +
jmp loc_4104CE  +
lea eax [esi-1] +
mov [ebx] eax +
mov edi 1 +
movzx esi word ptr [ebx] +
lea eax [esp+14h] +
push 110h  +
push 0  +
push eax  +
mov dword ptr [esp+1Ch] 11Ch +
call sub_41DD10  +
add esp 0Ch +
xor eax eax +
mov [esp+126h] ax +
mov [esp+128h] eax +
push 3  +
push 20h  +
push 3  +
push 1  +
push 3  +
push 2  +
push eax  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
mov ecx esi +
mov [esp+18h] ecx +
push eax  +
movzx ecx di +
lea eax [esp+18h] +
mov [esp+20h] ecx +
xor ecx ecx +
push 23h  +
push eax  +
mov [esp+134h] cx +
call ds:VerifyVersionInfoW  +
test eax eax +
jz loc_41055D  +
inc edi  +
cmp edi 0Ah +
jl loc_4104D3  +
jmp loc_410563  +
lea eax [edi-1] +
mov [ebx+4] eax +
mov ebx 1 +
mov eax [esp+0Ch] +
push 110h  +
push 0  +
mov dword ptr [esp+18h] 11Ch +
movzx edi word ptr [eax+4] +
movzx esi word ptr [eax] +
lea eax [esp+1Ch] +
push eax  +
call sub_41DD10  +
add esp 0Ch +
xor eax eax +
mov [esp+126h] ax +
mov [esp+128h] eax +
push 3  +
push 20h  +
push 3  +
push 1  +
push 3  +
push 2  +
push eax  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
mov ecx esi +
mov [esp+12Ch] bx +
mov [esp+1Ch] ecx +
lea eax [esp+18h] +
push 23h  +
mov ecx edi +
push eax  +
mov [esp+28h] ecx +
call ds:VerifyVersionInfoW  +
test eax eax +
jz loc_410614  +
inc ebx  +
cmp ebx 0Ah +
jl loc_410570  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+128h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [esp+0Ch] +
lea eax [ebx-1] +
pop edi  +
pop esi  +
pop ebx  +
mov [ecx+8] eax +
mov al 1 +
mov ecx [esp+128h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 340h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
lea eax [ebp+VersionInformation] +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
push eax  +
mov esi ecx +
call ds:GetVersionExW  +
test eax eax +
jnz loc_410682  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
push 208h  +
lea eax [ebp+var_20C] +
push 0  +
push eax  +
call sub_41DD10  +
push [ebp+VersionInformation.dwBuildNumber]  +
lea eax [ebp+var_20C] +
push offset aD  +
push eax  +
call sub_410060  +
add esp 18h +
mov [ebp+var_330] 0 +
xor eax eax +
mov [ebp+var_32C] 7 +
lea edx [ebp+var_20C] +
mov word ptr [ebp+var_340] ax +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_4106D5  +
sub edx ecx +
lea eax [ebp+var_20C] +
sar edx 1 +
lea ecx [ebp+var_340] +
push edx  +
push eax  +
call loc_402B00  +
lea eax [ebp+var_340] +
mov ecx esi +
push eax  +
call loc_4095F0  +
lea ecx [ebp+var_340] +
call loc_4029B0  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440989  +
mov eax large fs:0 +
push eax  +
mov eax 5050h +
call sub_41C6B0  +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-5041h] dl +
mov edi ecx +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-5018h] 0 +
movq qword ptr [ebp-5020h] xmm0 +
mov dword ptr [ebp-5020h] 0 +
mov dword ptr [ebp-501Ch] 0 +
mov dword ptr [ebp-5018h] 0 +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-505Ch] +
push 1  +
xor eax eax +
mov dword ptr [ebp-504Ch] 0 +
push offset asc_452764  +
mov dword ptr [ebp-5048h] 7 +
mov [ebp-505Ch] ax +
call loc_402B00  +
lea eax [ebp-505Ch] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea edx [ebp+8] +
lea ecx [ebp-5020h] +
call loc_4118B0  +
mov byte ptr [ebp-4] 3 +
add esp 4 +
mov edx [ebp-5048h] +
cmp edx 8 +
jb loc_410837  +
mov ecx [ebp-505Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41082D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_410DE6  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-501Ch] +
mov eax ecx +
mov esi [ebp-5020h] +
sub eax esi +
jnz loc_410875  +
lea eax [ebp+8] +
push eax  +
cmp ecx [ebp-5018h] +
jz loc_410863  +
call sub_402A60  +
add dword ptr [ebp-501Ch] 18h +
jmp loc_41086F  +
push ecx  +
lea ecx [ebp-5020h] +
call loc_40C360  +
mov esi [ebp-5020h] +
cmp dword ptr [esi+14h] 8 +
mov ebx esi +
jb loc_41087F  +
mov ebx [esi] +
cmp dword ptr [esi+10h] 11h +
jnz loc_4108AC  +
mov ecx offset aHkey_classes_r +
mov edx 11h +
sub ebx ecx +
mov ax [ebx+ecx] +
cmp ax [ecx] +
jnz loc_4108AC  +
add ecx 2 +
sub edx 1 +
jnz loc_410891  +
mov esi 80000000h +
jmp loc_410952  +
mov edx offset aHkey_current_u +
mov ecx esi +
call loc_402D30  +
test al al +
jz loc_4108C6  +
mov esi 80000001h +
jmp loc_410952  +
mov edx offset aHkey_local_mac +
mov ecx esi +
call loc_402D30  +
test al al +
jz loc_4108DD  +
mov esi 80000002h +
jmp loc_410952  +
mov edx offset aHkey_users +
mov ecx esi +
call loc_402D30  +
test al al +
jz loc_4108F4  +
mov esi 80000003h +
jmp loc_410952  +
mov edx offset aHkey_current_c +
mov ecx esi +
call loc_402D30  +
test al al +
jz loc_41090B  +
mov esi 80000005h +
jmp loc_410952  +
mov edx offset aHkey_performan +
mov ecx esi +
call loc_402D30  +
test al al +
jz loc_410922  +
mov esi 80000004h +
jmp loc_410952  +
mov edx offset aHkey_perform_0 +
mov ecx esi +
call loc_402D30  +
test al al +
jz loc_410939  +
mov esi 80000060h +
jmp loc_410952  +
mov edx offset aHkey_perform_1 +
mov ecx esi +
call loc_402D30  +
test al al +
jz loc_410CE4  +
mov esi 80000050h +
xor eax eax +
mov dword ptr [ebp-502Ch] 0 +
mov dword ptr [ebp-5028h] 7 +
mov [ebp-503Ch] ax +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp+8] +
push dword ptr [ebp-5014h]  +
cmp dword ptr [ebp+1Ch] 8 +
mov edx [ebp+18h] +
cmovnb ecx [ebp+8] +
push 1  +
push offset asc_452764  +
push ecx  +
call loc_40FF30  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_410A0A  +
lea edx [eax+1] +
mov dword ptr [ebp-504Ch] 0 +
xor eax eax +
mov dword ptr [ebp-5048h] 7 +
mov [ebp-505Ch] ax +
mov eax [ebp+18h] +
cmp eax edx +
jb loc_410DE1  +
sub eax edx +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebp+1Ch] 8 +
lea eax [ebp+8] +
cmovnb eax [ebp+8] +
push ecx  +
lea ecx [ebp-505Ch] +
lea eax [eax+edx*2] +
push eax  +
call loc_402B00  +
lea eax [ebp-505Ch] +
push eax  +
lea ecx [ebp-503Ch] +
call loc_4095F0  +
lea ecx [ebp-505Ch] +
call loc_4029B0  +
cmp byte ptr [ebp-5041h] 0 +
lea ecx [ebp-5040h] +
lea eax [ebp-503Ch] +
push ecx  +
jz loc_410A27  +
push 20019h  +
jmp loc_410A2C  +
push 20119h  +
cmp dword ptr [ebp-5028h] 8 +
push 0  +
cmovnb eax [ebp-503Ch] +
push eax  +
push esi  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_410AB8  +
mov esi dword_459FFC +
test esi esi +
jz loc_410A82  +
push eax  +
push offset aGetregistryval  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aOsutils  +
push offset aOobeutils  +
push 28h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 1Ch +
xor bl bl +
jmp loc_410C85  +
mov ecx dword_45A000 +
test ecx ecx +
jz loc_410AB1  +
mov esi [ecx] +
push eax  +
push offset aGetregistryval  +
push offset aOsutils  +
mov esi [esi+34h] +
push offset unk_44EABC  +
push 28h  +
push ecx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
xor bl bl +
jmp loc_410C85  +
mov edx offset off_453184 +
lea ecx [ebp+38h] +
xor bl bl +
call loc_402D30  +
lea ecx [ebp-5014h] +
test al al +
push ecx  +
lea eax [ebp+20h] +
jz loc_410B27  +
cmp dword ptr [ebp+34h] 8 +
lea ecx [ebp-5024h] +
push ecx  +
cmovnb eax [ebp+20h] +
push 0  +
push 0  +
push eax  +
push dword ptr [ebp-5040h]  +
mov dword ptr [ebp-5014h] 4 +
mov dword ptr [ebp-5024h] 0 +
call ds:RegQueryValueExW  +
mov ecx eax +
test ecx ecx +
jnz loc_410B82  +
push eax  +
push dword ptr [ebp-5024h]  +
mov ecx edi +
call sub_4158A0  +
add esp 8 +
mov bl 1 +
jmp loc_410BE5  +
cmp dword ptr [ebp+34h] 8 +
lea ecx [ebp-5010h] +
push ecx  +
cmovnb eax [ebp+20h] +
push 0  +
push 0  +
push eax  +
push dword ptr [ebp-5040h]  +
mov dword ptr [ebp-5014h] 5000h +
call ds:RegQueryValueExW  +
mov ecx eax +
test ecx ecx +
jnz loc_410B82  +
lea ecx [ebp-5010h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_410B60  +
sub ecx edx +
lea eax [ebp-5010h] +
sar ecx 1 +
push ecx  +
push eax  +
mov ecx edi +
call loc_402B00  +
mov bl 1 +
jmp loc_410BE5  +
mov esi dword_459FFC +
test esi esi +
jz loc_410BB7  +
push ecx  +
push offset aGetregistryv_0  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aOsutils  +
push offset aOobeutils  +
push 28h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 1Ch +
jmp loc_410BE5  +
mov eax dword_45A000 +
test eax eax +
jz loc_410BE5  +
mov esi [eax] +
push ecx  +
push offset aGetregistryv_0  +
push offset aOsutils  +
mov esi [esi+34h] +
mov ecx esi +
push offset unk_44EABC  +
push 28h  +
push eax  +
call ds:off_442218  +
call esi  +
add esp 18h +
push dword ptr [ebp-5040h]  +
call ds:RegCloseKey  +
cmp dword_459FFC 0 +
jz loc_410C3E  +
cmp dword ptr [edi+14h] 8 +
jb loc_410C02  +
mov edi [edi] +
call ds:GetLastError  +
mov esi dword_459FFC +
mov ecx esi +
push eax  +
push edi  +
movzx eax bl +
push eax  +
push offset aGetregistryv_1  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aOsutils  +
push offset aOobeutils  +
push 0Ah  +
call ds:off_442218  +
call esi  +
add esp 24h +
jmp loc_410C85  +
cmp dword_45A000 0 +
jz loc_410C85  +
call ds:GetLastError  +
cmp dword ptr [edi+14h] 8 +
jb loc_410C55  +
mov edi [edi] +
mov ecx dword_45A000 +
push eax  +
push edi  +
movzx eax bl +
mov esi [ecx] +
push eax  +
push offset aGetregistryv_1  +
push offset aOsutils  +
mov esi [esi+34h] +
push offset unk_44EABC  +
push 0Ah  +
push ecx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 20h +
mov edx [ebp-5028h] +
cmp edx 8 +
jb loc_410CC5  +
mov ecx [ebp-503Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_410CBB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_410DE6  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-502Ch] 0 +
mov dword ptr [ebp-5028h] 7 +
mov [ebp-503Ch] ax +
jmp loc_410CE6  +
xor bl bl +
lea ecx [ebp-5020h] +
call loc_402900  +
mov edx [ebp+1Ch] +
cmp edx 8 +
jb loc_410D2B  +
mov ecx [ebp+8] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_410D21  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_410DE6  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp+34h] +
xor eax eax +
mov dword ptr [ebp+18h] 0 +
mov dword ptr [ebp+1Ch] 7 +
mov [ebp+8] ax +
cmp edx 8 +
jb loc_410D79  +
mov ecx [ebp+20h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_410D6F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_410DE6  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp+4Ch] +
xor eax eax +
mov dword ptr [ebp+30h] 0 +
mov dword ptr [ebp+34h] 7 +
mov [ebp+20h] ax +
cmp edx 8 +
jb loc_410DC3  +
mov ecx [ebp+38h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_410DB9  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_410DE6  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_402C80  +
call sub_42071A  +
push 0FFFFFFFFh  +
push offset loc_4409D0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea edx [ebp+var_18] +
lea ecx [ebp+var_14] +
call sub_410210  +
cmp [ebp+var_14] 20h +
jnz loc_410E7D  +
mov esi dword_459FFC +
test esi esi +
jz loc_410E66  +
push offset aInsideGetacc64  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
xor al al +
jmp loc_410F8A  +
mov eax dword_45A000 +
test eax eax +
jz loc_410F76  +
push offset aInsideGetacc64  +
jmp loc_410F57  +
sub esp 18h +
xor eax eax +
mov ecx esp +
mov [ebp+var_18] esp +
xor bl bl +
push 6  +
push offset off_44F38C  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_402B00  +
sub esp 18h +
mov [ebp+var_4] 0 +
mov ecx esp +
mov [ebp+var_14] esp +
xor eax eax +
push 0Fh  +
push offset aProgramfilesdi  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_402B00  +
sub esp 18h +
mov byte ptr [ebp+var_4] 1 +
mov ecx esp +
xor eax eax +
push 3Ch  +
push offset aHkey_local_m_0  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_402B00  +
mov dl bl +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx esi +
call loc_410730  +
add esp 48h +
test al al +
jnz loc_410F7A  +
mov esi dword_459FFC +
test esi esi +
jz loc_410F49  +
push offset aInsideGetacc_0  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 18h +
xor al al +
jmp loc_410F8A  +
mov eax dword_45A000 +
test eax eax +
jz loc_410F76  +
push offset aInsideGetacc_0  +
mov esi [eax] +
push offset aFileutils  +
push offset unk_44EABC  +
push 32h  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
call ds:off_442218  +
call esi  +
add esp 14h +
xor al al +
jmp loc_410F8A  +
push 1Bh  +
push offset aAdobeAdobeCrea  +
mov ecx esi +
call loc_40BBF0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edi [ebx+10h] +
test edi edi +
jz loc_41103F  +
xor ecx ecx +
lea eax [edi+1] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_424F1B  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_41103F  +
cmp dword ptr [ebx+14h] 8 +
mov eax ebx +
jb loc_410FEC  +
mov eax [ebx] +
push eax  +
lea eax [edi+1] +
push eax  +
push esi  +
call sub_424D5C  +
lea eax [edi-1] +
add esp 0Ch +
cmp word ptr [esi+eax*2] 5Ch +
lea eax [esi+eax*2] +
jnz loc_41102B  +
xor ecx ecx +
mov [eax] cx +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_411011  +
sub eax edx +
sar eax 1 +
dec eax  +
cmp word ptr [esi+eax*2] 5Ch +
lea eax [esi+eax*2] +
jz loc_411007  +
push esi  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_411045  +
push esi  +
call sub_41BD85  +
add esp 4 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
retn   +
***
mov ecx esi +
lea edx [ecx+2] +
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_41112B  +
mov eax [esi+10h] +
test eax eax +
jz loc_41112B  +
add ecx 0Bh +
mov edx 2 +
add eax ecx +
xor ecx ecx +
mov [ebp-8] eax +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_424F1B  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_41112B  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_4110D4  +
mov eax [edi] +
push eax  +
push dword ptr [ebp-8]  +
push ebx  +
call sub_424D5C  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_4110E9  +
mov esi [esi] +
push esi  +
push ebx  +
call ds:PathAppendW  +
mov ecx ebx +
cmp eax 1 +
setz byte ptr [ebp-1]  +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_411100  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push ebx  +
mov ecx edi +
call loc_402B00  +
push ebx  +
call sub_424926  +
mov al [ebp-1] +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_41114D  +
mov eax [edi] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_4112FB  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_411166  +
mov eax [edi] +
push eax  +
call ds:PathIsDirectoryW  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_411177  +
mov eax [edi] +
push ebx  +
push esi  +
push eax  +
call ds:DeleteFileW  +
cmp eax 1 +
setz bl  +
jz loc_41125D  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_41125D  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_4111A5  +
mov eax [edi] +
push eax  +
call ds:GetFileAttributesW  +
mov edx eax +
test dl 1 +
jz loc_41125D  +
mov esi dword_459FFC +
test esi esi +
jz loc_4111F7  +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_4111CB  +
mov ecx [edi] +
push edx  +
push ecx  +
push offset aFileSIsWithRea  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aFileutils  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 20h +
jmp loc_411230  +
mov eax dword_45A000 +
test eax eax +
jz loc_411230  +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_41120A  +
mov ecx [edi] +
mov esi [eax] +
push edx  +
push ecx  +
push offset aFileSIsWithRea  +
mov esi [esi+34h] +
mov ecx esi +
push offset aFileutils  +
push offset unk_44EABC  +
push 14h  +
push eax  +
call ds:off_442218  +
call esi  +
add esp 1Ch +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_41123A  +
mov eax [edi] +
push 80h  +
push eax  +
call ds:SetFileAttributesW  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_411250  +
mov eax [edi] +
push eax  +
call ds:DeleteFileW  +
cmp eax 1 +
setz bl  +
test bl bl +
jnz loc_4112F5  +
cmp dword_459FFC 0 +
jz loc_4112B2  +
cmp dword ptr [edi+14h] 8 +
jb loc_411276  +
mov edi [edi] +
call ds:GetLastError  +
mov esi dword_459FFC +
mov ecx esi +
push eax  +
push edi  +
push offset aFailedToDelete  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_442218  +
call esi  +
add esp 20h +
mov al bl +
pop esi  +
pop ebx  +
pop edi  +
retn   +
cmp dword_45A000 0 +
jz loc_4112F5  +
call ds:GetLastError  +
cmp dword ptr [edi+14h] 8 +
jb loc_4112C9  +
mov edi [edi] +
mov ecx dword_45A000 +
push eax  +
push edi  +
push offset aFailedToDelete  +
mov esi [ecx] +
push offset aFileutils  +
push offset unk_44EABC  +
push 32h  +
mov esi [esi+34h] +
push ecx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 1Ch +
pop esi  +
mov al bl +
pop ebx  +
pop edi  +
retn   +
mov al 1 +
pop edi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_440A10  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_2C] esi +
push edx  +
lea ecx [ebp+var_28] +
mov [ebp+var_2C] esi +
call sub_402A60  +
mov [ebp+var_4] 0 +
mov ecx dword ptr [ebp+var_18] +
test ecx ecx +
jz loc_4113C9  +
cmp dword ptr [ebp+var_18+4] 8 +
lea eax [ebp+var_28] +
cmovnb eax dword ptr [ebp+var_28] +
cmp word ptr [eax] 22h +
jz loc_4113C9  +
cmp dword ptr [ebp+var_18+4] 8 +
lea edx [ebp+var_28] +
cmovnb edx dword ptr [ebp+var_28] +
test ecx ecx +
jz loc_4113C9  +
mov eax edx +
nop   +
cmp word ptr [eax] 20h +
jz loc_411380  +
add eax 2 +
sub ecx 1 +
jnz loc_411370  +
jmp loc_4113C9  +
sub eax edx +
sar eax 1 +
cmp eax 0FFFFFFFFh +
jz loc_4113C9  +
lea eax [ebp+var_28] +
mov edx offset asc_45359C +
push eax  +
lea ecx [ebp+var_5C] +
call loc_40BF50  +
push offset asc_45359C  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_44] +
call sub_40C100  +
add esp 8 +
lea ecx [ebp+var_28] +
push eax  +
call loc_4095F0  +
lea ecx [ebp+var_44] +
call loc_4029B0  +
lea ecx [ebp+var_5C] +
call loc_4029B0  +
movups xmm0 oword ptr [ebp+var_28] +
mov dword ptr [esi+10h] 0 +
lea ecx [ebp+var_28] +
mov dword ptr [esi+14h] 0 +
xor eax eax +
movups oword ptr [esi] xmm0 +
mov word ptr [ebp+var_28] ax +
movq xmm0 [ebp+var_18] +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [ebp+var_18] eax +
mov dword ptr [ebp+var_18+4] 7 +
call loc_4029B0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440A71  +
mov eax large fs:0 +
push eax  +
sub esp 0D0h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-0A8h] ecx +
mov eax [ebp+8] +
mov [ebp-0A0h] eax +
mov eax [ebp+10h] +
mov [ebp-0ACh] eax +
mov eax [ebp+18h] +
mov [ebp-14h] eax +
xor eax eax +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
mov [ebp-4] eax +
mov esi [edx] +
mov edi [edx+4] +
mov edx ecx +
lea ecx [ebp-0C4h] +
call sub_411300  +
mov byte ptr [ebp-4] 1 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_4114A2  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-44h] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-0B0h] +
cmp edx 8 +
jb loc_4114F2  +
mov ecx [ebp-0C4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4114E8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41189D  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
cmp esi edi +
jz loc_41163F  +
push 1  +
push offset asc_452760  +
lea ecx [ebp-44h] +
call loc_40BBF0  +
cmp dword ptr [esi+14h] 8 +
mov edx esi +
jb loc_411519  +
mov edx [esi] +
xor eax eax +
mov dword ptr [ebp-0CCh] 0 +
mov [ebp-0DCh] ax +
mov eax edx +
mov dword ptr [ebp-0C8h] 7 +
lea ecx [eax+2] +
mov [ebp-0A4h] ecx +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_411541  +
sub eax [ebp-0A4h] +
lea ecx [ebp-0DCh] +
sar eax 1 +
push eax  +
push edx  +
call loc_402B00  +
lea edx [ebp-0DCh] +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-0C4h] +
call sub_411300  +
mov byte ptr [ebp-4] 3 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_411584  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-44h] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-0B0h] +
cmp edx 8 +
jb loc_4115D4  +
mov ecx [ebp-0C4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4115CA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41189D  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-0B4h] 0 +
mov [ebp-4] al +
mov edx [ebp-0C8h] +
mov dword ptr [ebp-0B0h] 7 +
mov [ebp-0C4h] ax +
cmp edx 8 +
jb loc_411634  +
mov ecx [ebp-0DCh] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41162A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41189D  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
add esi 18h +
cmp esi edi +
jnz loc_411500  +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
mov ecx [ebp-0A8h] +
lea eax [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
cmp eax ecx +
jz loc_41167A  +
cmp dword ptr [ecx+14h] 8 +
mov eax ecx +
jb loc_41166E  +
mov eax [ecx] +
push dword ptr [ecx+10h]  +
lea ecx [ebp-2Ch] +
push eax  +
call loc_402B00  +
lea ecx [ebp-2Ch] +
call loc_410FB0  +
test al al +
jnz loc_4116A0  +
call ds:GetLastError  +
mov edx [ebp-0A0h] +
mov byte ptr [ebp-99h] 0 +
mov [edx] eax +
jmp loc_4117FC  +
cmp dword ptr [ebp-18h] 8 +
lea edx [ebp-98h] +
push edx  +
lea edx [ebp-88h] +
mov dword ptr [ebp-88h] 44h +
push edx  +
lea eax [ebp-2Ch] +
xorps xmm0 xmm0 +
cmovnb eax [ebp-2Ch] +
lea ecx [ebp-44h] +
cmp dword ptr [ebp-30h] 8 +
push eax  +
mov eax [ebp-14h] +
cmovnb ecx [ebp-44h] +
push 0  +
movlpd oword ptr [ebp-84h] xmm0 +
push dword ptr [eax]  +
movlpd oword ptr [ebp-7Ch] xmm0 +
push 0  +
push 0  +
push 0  +
push ecx  +
push 0  +
movlpd oword ptr [ebp-74h] xmm0 +
movlpd oword ptr [ebp-6Ch] xmm0 +
movlpd oword ptr [ebp-64h] xmm0 +
movlpd oword ptr [ebp-5Ch] xmm0 +
movlpd oword ptr [ebp-54h] xmm0 +
movlpd oword ptr [ebp-4Ch] xmm0 +
movups oword ptr [ebp-98h] xmm0 +
call ds:CreateProcessW  +
test eax eax +
jnz loc_4117A8  +
call ds:GetLastError  +
mov edx [ebp-0A0h] +
mov ecx eax +
mov esi dword_459FFC +
mov [edx] ecx +
test esi esi +
jz loc_411771  +
push ecx  +
push offset aCreateprocessF  +
push offset unk_44EABC  +
push offset unk_44EABC  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 1Ch +
mov byte ptr [ebp-99h] 0 +
jmp loc_4117FC  +
mov eax dword_45A000 +
test eax eax +
jz loc_41179F  +
mov esi [eax] +
push ecx  +
push offset aCreateprocessF  +
push offset aProcessutils  +
mov esi [esi+34h] +
mov ecx esi +
push offset unk_44EABC  +
push 32h  +
push eax  +
call ds:off_442218  +
call esi  +
add esp 18h +
mov byte ptr [ebp-99h] 0 +
jmp loc_4117FC  +
push 0FFFFFFFFh  +
push dword ptr [ebp-98h]  +
call ds:WaitForSingleObject  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-98h]  +
call ds:GetExitCodeProcess  +
mov ecx [ebp-0ACh] +
mov eax [ebp-14h] +
push dword ptr [ebp-98h]  +
mov [ecx] eax +
call ds:CloseHandle  +
push dword ptr [ebp-94h]  +
call ds:CloseHandle  +
mov edx [ebp-0A0h] +
mov byte ptr [ebp-99h] 1 +
mov dword ptr [edx] 0 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_411832  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411828  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4118A2  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-30h] +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
cmp edx 8 +
jb loc_41187C  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411872  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4118A2  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al [ebp-99h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440AA8  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-38h] edx +
mov edi ecx +
mov eax [ebp+8] +
mov edx [edi+4] +
push ecx  +
mov ecx [edi] +
mov [ebp-40h] eax +
call loc_402E90  +
mov eax [edi] +
xor ecx ecx +
mov edx [ebp-40h] +
add esp 4 +
mov [edi+4] eax +
mov eax [ebp-38h] +
mov [ebp-2Ch] edx +
mov esi [eax+10h] +
cmp ecx esi +
sbb ecx ecx +
neg ecx  +
dec ecx  +
cmp dword ptr [edx+14h] 8 +
mov [ebp-3Ch] ecx +
jb loc_41191B  +
mov ecx [edx] +
mov [ebp-2Ch] ecx +
mov ecx [eax+14h] +
mov [ebp-34h] ecx +
cmp ecx 8 +
jb loc_411928  +
mov eax [eax] +
push dword ptr [edx+10h]  +
mov edx esi +
mov ecx eax +
push dword ptr [ebp-2Ch]  +
push 0  +
call loc_40C5D0  +
mov ecx 7 +
mov [ebp-2Ch] eax +
xor edx edx +
mov dword ptr [ebp-18h] 0 +
add esp 0Ch +
mov [ebp-14h] ecx +
mov [ebp-28h] dx +
mov [ebp-4] edx +
cmp eax 0FFFFFFFFh +
jz loc_411A61  +
mov edx [ebp-34h] +
xor eax eax +
mov [ebp-58h] ax +
mov eax [ebp-3Ch] +
mov dword ptr [ebp-48h] 0 +
mov dword ptr [ebp-44h] 7 +
cmp esi eax +
jb loc_411B3D  +
mov ecx [ebp-2Ch] +
sub esi eax +
sub ecx eax +
cmp esi ecx +
cmovb ecx esi +
mov esi [ebp-38h] +
cmp edx 8 +
jb loc_41199A  +
mov edx [esi] +
jmp loc_41199C  +
mov edx esi +
push ecx  +
lea eax [edx+eax*2] +
push eax  +
lea ecx [ebp-58h] +
call loc_402B00  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_4119E3  +
mov ecx [ebp-28h] +
lea edx ds:2[eax*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4119D9  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411B42  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
movups xmm0 oword ptr [ebp-58h] +
mov eax [edi+4] +
lea ecx [ebp-28h] +
push ecx  +
movups oword ptr [ebp-28h] xmm0 +
movq xmm0 qword ptr [ebp-48h] +
movq qword ptr [ebp-18h] xmm0 +
cmp eax [edi+8] +
jz loc_411A0E  +
mov ecx eax +
call sub_402A60  +
add dword ptr [edi+4] 18h +
jmp loc_411A16  +
push eax  +
mov ecx edi +
call loc_40C360  +
mov ecx [ebp-40h] +
mov edx ecx +
mov eax [ecx+10h] +
mov [ebp-30h] eax +
add eax [ebp-2Ch] +
cmp dword ptr [ecx+14h] 8 +
mov [ebp-3Ch] eax +
jb loc_411A2F  +
mov edx [ecx] +
mov ecx [esi+14h] +
mov [ebp-34h] ecx +
cmp ecx 8 +
jb loc_411A3E  +
mov ecx [esi] +
jmp loc_411A40  +
mov ecx esi +
push dword ptr [ebp-30h]  +
mov esi [esi+10h] +
push edx  +
push eax  +
mov edx esi +
call loc_40C5D0  +
add esp 0Ch +
mov [ebp-2Ch] eax +
cmp eax 0FFFFFFFFh +
jnz loc_411960  +
mov ecx [ebp-14h] +
test esi esi +
jz loc_411ADF  +
xor eax eax +
mov dword ptr [ebp-48h] 0 +
mov [ebp-58h] ax +
mov eax [ebp-3Ch] +
mov dword ptr [ebp-44h] 7 +
cmp esi eax +
jb loc_411B3D  +
mov edx [ebp-38h] +
sub esi eax +
or ecx 0FFFFFFFFh +
cmp esi 0FFFFFFFFh +
cmovb ecx esi +
cmp dword ptr [ebp-34h] 8 +
jb loc_411A9A  +
mov edx [edx] +
push ecx  +
lea eax [edx+eax*2] +
push eax  +
lea ecx [ebp-58h] +
call loc_402B00  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-28h] +
call loc_4095F0  +
lea ecx [ebp-58h] +
call loc_4029B0  +
mov eax [edi+4] +
lea ecx [ebp-28h] +
push ecx  +
cmp eax [edi+8] +
jz loc_411AD4  +
mov ecx eax +
call sub_402A60  +
add dword ptr [edi+4] 18h +
jmp loc_411ADC  +
push eax  +
mov ecx edi +
call loc_40C360  +
mov ecx [ebp-14h] +
mov eax [edi+4] +
sub eax [edi] +
sar eax 3 +
imul esi eax +
cmp ecx 8 +
jb loc_411B20  +
lea edx ds:2[ecx*2] +
mov ecx [ebp-28h] +
mov eax ecx +
cmp edx 1000h +
jb loc_411B16  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411B42  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_402C80  +
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440B15  +
mov eax large fs:0 +
push eax  +
sub esp 0F0h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
mov [ebp-0E8h] edi +
mov [ebp-0FCh] edi +
xorps xmm0 xmm0 +
mov dword ptr [ebp-0F0h] 0 +
movq qword ptr [ebp-1Ch] xmm0 +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-3Ch] +
push 1  +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push offset a__0  +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_402B00  +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 2 +
push eax  +
mov edx esi +
lea ecx [ebp-1Ch] +
call loc_4118B0  +
mov byte ptr [ebp-4] 1 +
add esp 4 +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_411C39  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411C2F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411EA7  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xorps xmm0 xmm0 +
movq qword ptr [edi] xmm0 +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov eax [ebp-18h] +
mov ecx [ebp-1Ch] +
sub eax ecx +
sar eax 3 +
imul eax eax +
mov dword ptr [ebp-0F0h] 1 +
mov dword ptr [ebp-0ECh] 0 +
test eax eax +
jz loc_411E81  +
xor edx edx +
mov [ebp-0E8h] edx +
mov eax [ecx+edx+10h] +
lea esi [ecx+edx] +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp-24h] xmm0 +
test eax eax +
jz loc_411E18  +
mov ebx [esi+14h] +
mov ecx esi +
cmp ebx 8 +
jb loc_411CB3  +
mov ecx [esi] +
push 2  +
push offset a0x  +
push 0  +
mov edx eax +
call loc_40C5D0  +
add esp 0Ch +
test eax eax +
jz loc_411D00  +
mov ecx esi +
cmp ebx 8 +
jb loc_411CD3  +
mov ecx [esi] +
mov edx [esi+10h] +
push 2  +
push offset a0x_0  +
push 0  +
call loc_40C5D0  +
add esp 0Ch +
test eax eax +
jz loc_411D00  +
cmp ebx 8 +
jb loc_411CF2  +
mov esi [esi] +
push esi  +
call sub_429C58  +
add esp 4 +
jmp loc_411E1E  +
push esi  +
lea ecx [ebp-3Ch] +
call sub_402A60  +
push 0A8h  +
lea eax [ebp-0E4h] +
mov byte ptr [ebp-4] 3 +
push 0  +
push eax  +
call sub_41DD10  +
add esp 4 +
lea eax [ebp-3Ch] +
lea ecx [ebp-0E4h] +
push eax  +
call loc_4159D0  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-0D0h] +
mov eax [ebp-0E4h] +
mov eax [eax+4] +
add ecx eax +
mov eax [ecx] +
and eax 0FFFFF9FFh +
or eax 800h +
mov [ecx] eax +
lea eax [ebp-24h] +
push eax  +
lea ecx [ebp-0E4h] +
call sub_415E10  +
mov eax [ebp-0E4h] +
mov eax [eax+4] +
mov dword ptr [ebp+eax-0E4h] offset off_452618 +
mov eax [ebp-0E4h] +
mov ecx [eax+4] +
lea eax [ecx-60h] +
mov [ebp+ecx-0E8h] eax +
lea ecx [ebp-0D4h] +
call loc_408D70  +
mov eax [ebp-0E4h] +
mov eax [eax+4] +
mov dword ptr [ebp+eax-0E4h] offset off_45248C +
mov eax [ebp-0E4h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ebp+ecx-0E8h] eax +
lea eax [ebp-84h] +
mov byte ptr [ebp-4] 5 +
push eax  +
mov dword ptr [ebp-84h] offset off_4524B0 +
call sub_41A862  +
mov byte ptr [ebp-4] 1 +
add esp 4 +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_411E18  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411E0E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411EA7  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-24h] +
mov edx [ebp-20h] +
mov ecx [edi+4] +
mov [ebp-0F8h] eax +
mov [ebp-0F4h] edx +
cmp ecx [edi+8] +
jz loc_411E3D  +
mov [ecx] eax +
mov [ecx+4] edx +
add dword ptr [edi+4] 8 +
jmp loc_411E4C  +
lea eax [ebp-0F8h] +
push eax  +
push ecx  +
mov ecx edi +
call loc_412210  +
mov eax [ebp-18h] +
mov ecx [ebp-1Ch] +
sub eax ecx +
mov ebx [ebp-0ECh] +
mov edx [ebp-0E8h] +
inc ebx  +
sar eax 3 +
add edx 18h +
imul eax eax +
mov [ebp-0ECh] ebx +
mov [ebp-0E8h] edx +
cmp ebx eax +
jb loc_411C90  +
lea ecx [ebp-1Ch] +
call loc_402900  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440B50  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
mov edx ecx +
movq qword ptr [ebp-28h] xmm0 +
lea ecx [ebp-28h] +
mov dword ptr [ebp-20h] 0 +
call loc_411B50  +
mov byte ptr [ebp-4] 1 +
lea edx [ebp+8] +
xorps xmm0 xmm0 +
mov dword ptr [ebp-14h] 0 +
lea ecx [ebp-1Ch] +
movq qword ptr [ebp-1Ch] xmm0 +
call loc_411B50  +
mov eax [ebp-24h] +
xor edx edx +
mov esi [ebp-28h] +
sub eax esi +
mov edi [ebp-1Ch] +
sar eax 3 +
mov [ebp-2Ch] eax +
test eax eax +
mov eax [ebp-18h] +
jz loc_411F64  +
sub eax edi +
mov ebx edi +
sar eax 3 +
mov ecx esi +
mov [ebp-30h] eax +
sub ebx esi +
cmp edx eax +
jnb loc_411F61  +
mov eax [ebx+ecx] +
cmp eax [ecx] +
jnz loc_411F74  +
mov eax [ebx+ecx+4] +
cmp eax [ecx+4] +
jnz loc_411F74  +
mov eax [ebp-30h] +
inc edx  +
add ecx 8 +
cmp edx [ebp-2Ch] +
jb loc_411F41  +
mov eax [ebp-18h] +
mov ecx [ebp-2Ch] +
sub eax edi +
sar eax 3 +
cmp ecx eax +
jnz loc_411F94  +
xor ebx ebx +
jmp loc_411F9A  +
mov eax [edi+edx*8+4] +
cmp eax [esi+edx*8+4] +
jl loc_411F8D  +
jg loc_411F88  +
mov eax [edi+edx*8] +
cmp eax [esi+edx*8] +
jbe loc_411F8D  +
or ebx 0FFFFFFFFh +
jmp loc_411F9A  +
mov ebx 1 +
jmp loc_411F9A  +
sbb ebx ebx +
and ebx 0FFFFFFFEh +
inc ebx  +
test edi edi +
jz loc_411FE6  +
mov ecx [ebp-14h] +
mov eax edi +
sub ecx edi +
and ecx 0FFFFFFF8h +
cmp ecx 1000h +
jb loc_411FC4  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41207F  +
push ecx  +
push edi  +
call sub_41B8B8  +
mov esi [ebp-28h] +
add esp 8 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
test esi esi +
jz loc_41202B  +
mov ecx [ebp-20h] +
mov eax esi +
sub ecx esi +
and ecx 0FFFFFFF8h +
cmp ecx 1000h +
jb loc_41200C  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41207F  +
push ecx  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 0 +
mov dword ptr [ebp-20h] 0 +
mov edx [ebp+1Ch] +
cmp edx 8 +
jb loc_412061  +
mov ecx [ebp+8] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_412057  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41207F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
add esp 8 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+14h] +
mov edi [esi+10h] +
mov [ebp-4] ecx +
cmp edi ecx +
jnb loc_412127  +
lea eax [edi+1] +
mov [esi+10h] eax +
cmp ecx 10h +
jb loc_412114  +
mov esi [esi] +
mov al [ebp+8] +
mov [esi+edi] al +
mov byte ptr [esi+edi+1] 0 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx 7FFFFFFFh +
mov eax edx +
sub eax edi +
cmp eax 1 +
jb loc_4121FE  +
push ebx  +
lea ebx [edi+1] +
or ebx 0Fh +
cmp ebx edx +
jbe loc_412148  +
mov ebx edx +
jmp loc_412160  +
mov eax ecx +
shr eax 1 +
sub edx eax +
cmp ecx edx +
jbe loc_412159  +
mov ebx 7FFFFFFFh +
jmp loc_412160  +
add eax ecx +
cmp ebx eax +
cmovb ebx eax +
xor ecx ecx +
mov eax ebx +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_40A9D0  +
cmp dword ptr [ebp-4] 10h +
lea ecx [edi+1] +
mov [esi+14h] ebx +
mov [ebp-8] eax +
lea ebx [eax+edi] +
mov [esi+10h] ecx +
mov [ebp-0Ch] ebx +
push edi  +
jb loc_4121DD  +
mov ebx [esi] +
push ebx  +
push eax  +
call loc_41D210  +
mov ecx [ebp-0Ch] +
add esp 0Ch +
mov al [ebp+8] +
mov [ecx] al +
mov byte ptr [ecx+1] 0 +
mov ecx [ebp-4] +
inc ecx  +
cmp ecx 1000h +
jb loc_4121C5  +
mov edx [ebx-4] +
add ecx 23h +
sub ebx edx +
lea eax [ebx-4] +
cmp eax 1Fh +
ja loc_412203  +
mov ebx edx +
push ecx  +
push ebx  +
call sub_41B8B8  +
mov eax [ebp-8] +
add esp 8 +
mov [esi] eax +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push eax  +
call loc_41D210  +
mov al [ebp+8] +
add esp 0Ch +
mov [ebx] al +
mov eax [ebp-8] +
mov byte ptr [ebx+1] 0 +
pop ebx  +
pop edi  +
mov [esi] eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_403250  +
call sub_42071A  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp-8] eax +
mov edx [edi] +
sub eax edx +
sar eax 3 +
mov [ebp-4] eax +
mov eax [edi+4] +
sub eax edx +
sar eax 3 +
cmp eax 1FFFFFFFh +
jz loc_412363  +
mov ecx [edi+8] +
lea ebx [eax+1] +
sub ecx edx +
mov [ebp-0Ch] ebx +
sar ecx 3 +
mov eax 1FFFFFFFh +
mov edx ecx +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_41225F  +
mov eax ebx +
jmp loc_412267  +
lea eax [edx+ecx] +
cmp eax ebx +
cmovb eax ebx +
cmp eax 1FFFFFFFh +
ja loc_41235E  +
lea ebx ds:0[eax*8] +
cmp ebx 1000h +
jb loc_4122A8  +
lea eax [ebx+23h] +
cmp eax ebx +
jbe loc_41235E  +
push eax  +
call sub_41B637  +
add esp 4 +
test eax eax +
jz loc_412368  +
lea esi [eax+23h] +
and esi 0FFFFFFE0h +
mov [esi-4] eax +
jmp loc_4122BB  +
test ebx ebx +
jz loc_4122B9  +
push ebx  +
call sub_41B637  +
add esp 4 +
mov esi eax +
jmp loc_4122BB  +
xor esi esi +
mov eax [ebp-4] +
mov ecx [ebp+0Ch] +
lea edx [esi+eax*8] +
mov [ebp-4] edx +
mov eax [ecx] +
mov [edx] eax +
mov eax [ecx+4] +
mov [edx+4] eax +
mov eax [edi+4] +
mov edx [ebp-8] +
mov ecx [edi] +
cmp edx eax +
jnz loc_4122EC  +
sub eax ecx +
push eax  +
push ecx  +
push esi  +
call loc_41D790  +
add esp 0Ch +
jmp loc_41230F  +
sub edx ecx +
push edx  +
push ecx  +
push esi  +
call loc_41D790  +
mov eax [edi+4] +
mov ecx [ebp-8] +
sub eax ecx +
push eax  +
mov eax [ebp-4] +
push ecx  +
add eax 8 +
push eax  +
call loc_41D790  +
add esp 18h +
mov eax [edi] +
test eax eax +
jz loc_412341  +
mov ecx [edi+8] +
sub ecx eax +
and ecx 0FFFFFFF8h +
cmp ecx 1000h +
jb loc_412337  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412368  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-0Ch] +
mov [edi] esi +
lea ecx [esi+eax*8] +
mov eax [ebp-4] +
mov [edi+4] ecx +
lea ecx [ebx+esi] +
mov [edi+8] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_401220  +
call loc_403160  +
call sub_42071A  +
push 0FFFFFFFFh  +
push offset loc_440B98  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_1C] edx +
mov ebx ecx +
mov [ebp+var_20] ebx +
mov eax [ebx] +
xor esi esi +
mov [ebp+var_2C] esi +
mov [ebp+var_11] 0 +
mov [ebp+var_34] ebx +
mov eax [eax+4] +
mov eax [eax+ebx+38h] +
mov [ebp+var_18] eax +
test eax eax +
jz loc_4123D0  +
mov eax [eax] +
mov edi [eax+4] +
cmp edi offset nullsub_1 +
jnz loc_4125CE  +
push ecx  +
mov ecx ebx +
mov [ebp+var_4] 0 +
call sub_4128F0  +
mov [ebp+var_30] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_412557  +
mov eax [ebx] +
mov eax [eax+4] +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_24] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_28] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
call sub_40C930  +
mov edi [ebp+var_24] +
add esp 4 +
mov [ebp+var_18] eax +
test edi edi +
jz loc_412454  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_412454  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov eax [ebp+var_1C] +
mov ecx eax +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_412468  +
mov ecx [eax] +
xor eax eax +
mov byte ptr [ebp+var_4] 3 +
mov [ecx] ax +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+24h] 0 +
mov edi [eax+ebx+20h] +
jl loc_41248F  +
jg loc_412487  +
test edi edi +
jz loc_41248F  +
cmp edi 7FFFFFFEh +
jb loc_412494  +
mov edi 7FFFFFFEh +
mov ecx [eax+ebx+38h] +
mov [ebp+var_24] ecx +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_4124B1  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_4124B1  +
movzx eax word ptr [edx] +
jmp loc_4124C6  +
mov eax [ecx] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_442218  +
mov ecx [ebp+var_24] +
call esi  +
movzx eax ax +
movzx esi ax +
mov eax 0FFFFh +
test edi edi +
jz loc_41252D  +
cmp ax si +
jnz loc_4124DE  +
mov esi 1 +
jmp loc_412550  +
mov edx [ebp+var_18] +
mov eax [edx] +
mov ecx [eax+10h] +
mov [ebp+var_24] ecx +
cmp eax offset off_4436F8 +
jnz loc_4125E0  +
lea eax [edx+8] +
push eax  +
push esi  +
call sub_41A93D  +
add esp 8 +
test al 48h +
setnz al  +
test al al +
jnz loc_41252D  +
mov ecx [ebp+var_1C] +
push esi  +
call loc_412730  +
mov eax [ebx] +
dec edi  +
mov [ebp+var_11] 1 +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
call sub_412680  +
movzx eax ax +
mov esi eax +
jmp loc_4124C9  +
xor esi esi +
jmp loc_412550  +
mov edx [ebp-20h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40A590  +
mov eax offset loc_41254A +
retn   +
mov ebx [ebp-20h] +
mov esi [ebp-2Ch] +
mov [ebp+var_4] 1 +
cmp [ebp+var_11] 0 +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [eax+ebx+20h] 0 +
mov dword ptr [eax+ebx+24h] 0 +
jnz loc_412575  +
or esi 2 +
mov eax [ebx] +
xor edx edx +
push 0  +
mov ecx [eax+4] +
mov eax 4 +
add ecx ebx +
cmp [ecx+38h] edx +
cmovnz eax edx +
or eax [ecx+0Ch] +
or eax esi +
push eax  +
call loc_405220  +
mov [ebp+var_4] 5 +
mov edi [ebp+var_34] +
mov eax [edi] +
mov eax [eax+4] +
mov edi [eax+edi+38h] +
test edi edi +
jz loc_4125BA  +
mov eax [edi] +
mov esi [eax+8] +
cmp esi offset nullsub_1 +
jnz loc_4125F6  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx edi +
call ds:off_442218  +
mov ecx [ebp+var_18] +
call edi  +
jmp loc_4123D0  +
push esi  +
push 48h  +
call ds:off_442218  +
mov eax [ebp+var_18] +
mov ecx eax +
call [ebp+var_24]  +
jmp loc_412506  +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_4125BA  +
***
push 0FFFFFFFFh  +
push offset loc_4403D0  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov edi [eax+ecx+38h] +
test edi edi +
jz loc_412657  +
mov eax [edi] +
mov esi [eax+8] +
cmp esi offset nullsub_1 +
jnz loc_412668  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_412657  +
***
mov eax [edi+1Ch] +
mov eax [edi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_412709  +
mov eax [edi+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_412709  +
movzx eax word ptr [ecx] +
pop edi  +
retn   +
mov eax [edi] +
push esi  +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
pop esi  +
movzx eax ax +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi+14h] +
mov ebx [esi+10h] +
mov [ebp-8] ecx +
cmp ebx ecx +
jnb loc_41276B  +
lea eax [ebx+1] +
mov [esi+10h] eax +
cmp ecx 8 +
jb loc_412754  +
mov esi [esi] +
mov ax [ebp+8] +
mov [esi+ebx*2] ax +
xor eax eax +
mov [esi+ebx*2+2] ax +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx 7FFFFFFEh +
mov eax edx +
sub eax ebx +
cmp eax 1 +
jb loc_412852  +
push edi  +
lea edi [ebx+1] +
or edi 7 +
cmp edi edx +
jbe loc_41278C  +
mov edi edx +
jmp loc_4127A4  +
mov eax ecx +
shr eax 1 +
sub edx eax +
cmp ecx edx +
jbe loc_41279D  +
mov edi 7FFFFFFEh +
jmp loc_4127A4  +
add eax ecx +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
mov eax edi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_402C90  +
lea ecx [ebx+1] +
mov [esi+14h] edi +
mov [esi+10h] ecx +
lea ecx [ebx+ebx] +
mov ebx [ebp-8] +
mov [ebp-4] eax +
lea edi [ecx+eax] +
mov [ebp-0Ch] edi +
push ecx  +
cmp ebx 8 +
jb loc_41282D  +
mov edi [esi] +
push edi  +
push eax  +
call loc_41D210  +
mov ecx [ebp-0Ch] +
lea ebx ds:2[ebx*2] +
mov ax [ebp+8] +
add esp 0Ch +
mov [ecx] ax +
xor eax eax +
mov [ecx+2] ax +
cmp ebx 1000h +
jb loc_412815  +
mov ecx [edi-4] +
add ebx 23h +
sub edi ecx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_412857  +
mov edi ecx +
push ebx  +
push edi  +
call sub_41B8B8  +
mov eax [ebp-4] +
add esp 8 +
mov [esi] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push eax  +
call loc_41D210  +
mov ax [ebp+8] +
add esp 0Ch +
mov [edi] ax +
xor eax eax +
mov [edi+2] ax +
mov eax [ebp-4] +
pop edi  +
mov [esi] eax +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_403250  +
call sub_42071A  +
mov eax [edi+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_412886  +
mov ecx [edi+2Ch] +
mov eax [ecx] +
test eax eax +
jle loc_412886  +
dec eax  +
mov [ecx] eax +
mov ecx [edi+1Ch] +
pop edi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
retn   +
mov eax [edi] +
push esi  +
mov esi [eax+1Ch] +
cmp esi offset sub_409140 +
jnz loc_4128D3  +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_4128B5  +
mov eax ecx +
pop esi  +
movzx eax ax +
pop edi  +
retn   +
mov eax [edi+2Ch] +
pop esi  +
dec dword ptr [eax]  +
mov ecx [edi+1Ch] +
pop edi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
movzx eax ax +
retn   +
pop esi  +
movzx eax ax +
pop edi  +
retn   +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_4128CD  +
***
push 0FFFFFFFFh  +
push offset loc_440BC8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_18] ebx +
mov edx [ebx] +
mov eax [edx+4] +
mov esi [eax+ebx+0Ch] +
lea ecx [eax+ebx] +
test esi esi +
jz loc_41295F  +
xor eax eax +
cmp [ecx+38h] eax +
push 0  +
setz al  +
lea eax ds:2[eax*4] +
or eax esi +
push eax  +
call loc_405220  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx [ecx+3Ch] +
test ecx ecx +
jz loc_41296D  +
call sub_40BAA0  +
mov edx [ebx] +
xor al al +
mov [ebp+var_11] al +
mov eax [edx+4] +
test byte ptr [eax+ebx+14h] 1 +
jz loc_412A61  +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_1C] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_20] +
mov [ebp+var_4] 0 +
push eax  +
call sub_40C930  +
add esp 4 +
lea ecx [ebp+var_20] +
mov edi eax +
call sub_404C10  +
mov [ebp+var_4] 1 +
mov ecx [ebx] +
mov ecx [ecx+4] +
mov ecx [ecx+ebx+38h] +
call sub_4126F0  +
movzx eax ax +
mov ecx eax +
mov eax 0FFFFh +
cmp ax cx +
jnz loc_4129E0  +
mov al 1 +
jmp loc_412A35  +
mov eax [edi] +
mov esi [eax+10h] +
cmp eax offset off_4436F8 +
jnz loc_412A82  +
lea eax [edi+8] +
push eax  +
push ecx  +
call sub_41A93D  +
add esp 8 +
test al 48h +
setnz al  +
test al al +
jz loc_412A32  +
mov eax [ebx] +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
call sub_412680  +
jmp loc_4129CD  +
mov edx [ebp-18h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40A590  +
mov eax offset loc_412A2F +
retn   +
mov ebx [ebp-18h] +
mov al [ebp+var_11] +
mov [ebp+var_4] 0FFFFFFFFh +
test al al +
jz loc_412A61  +
mov eax [ebx] +
push 0  +
mov ecx [eax+4] +
xor eax eax +
add ecx ebx +
cmp [ecx+38h] eax +
setz al  +
lea eax ds:3[eax*4] +
or eax [ecx+0Ch] +
push eax  +
call loc_405220  +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
setz al  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push ecx  +
push 48h  +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_412A02  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_442724 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41CC7C  +
add esp 8 +
mov dword ptr [esi] offset off_44274C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp+var_4] edx +
push edi  +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_412AF6  +
mov eax [esi] +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
lea ebx [eax+1] +
push ebx  +
call sub_41BD8A  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+14h] 8 +
jb loc_412B24  +
mov esi [esi] +
push 0  +
push 0  +
push ebx  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_412B50  +
push edi  +
call sub_41BD85  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_412B55  +
sub ecx edx +
push ecx  +
mov ecx [ebp+var_4] +
push edi  +
call loc_40A5D0  +
push edi  +
call sub_41BD85  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-4] edx +
push edi  +
mov eax esi +
cmp dword ptr [esi+14h] 10h +
jb loc_412B96  +
mov eax [esi] +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov ebx eax +
xor ecx ecx +
mov edx 2 +
lea eax [ebx+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_424F1B  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_412BF5  +
cmp dword ptr [esi+14h] 10h +
jb loc_412BD6  +
mov esi [esi] +
push ebx  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jg loc_412BFE  +
push edi  +
call sub_424926  +
add esp 4 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx edi +
xor eax eax +
mov [edi+ebx*2] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_412C10  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [ebp-4] +
push edi  +
call loc_402B00  +
push edi  +
call sub_424926  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF0h +
sub esp 448h +
mov eax dword_458018 +
xor eax esp +
mov [esp+448h+var_4] eax +
push esi  +
push edi  +
lea eax [esp+450h+Date] +
mov esi edx +
push eax  +
mov edi ecx +
call ds:GetLocalTime  +
movaps xmm0 oword ptr [esp+450h+Date.wYear] +
lea eax [esp+450h+FileTime] +
push eax  +
lea eax [esp+454h+var_420] +
movaps oword ptr [esp+454h+var_420] xmm0 +
push eax  +
call ds:SystemTimeToFileTime  +
imul eax esi +
mov edx [esp+450h+FileTime.dwHighDateTime] +
mov ecx [esp+450h+FileTime.dwLowDateTime] +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
divsd xmm0 ds:qword_453B30 +
movsd [esp+450h+var_448] xmm0 +
call loc_43EE20  +
addsd xmm0 [esp+450h+var_448] +
call loc_43ECC9  +
mov [esp+450h+FileTime.dwLowDateTime] eax +
lea eax [esp+450h+var_420] +
push eax  +
lea eax [esp+454h+FileTime] +
mov [esp+454h+FileTime.dwHighDateTime] edx +
push eax  +
call ds:FileTimeToSystemTime  +
movaps xmm0 oword ptr [esp+450h+var_420] +
lea eax [esp+450h+DateStr] +
push 100h  +
push eax  +
push offset Format  +
lea eax [esp+45Ch+Date] +
movaps oword ptr [esp+45Ch+Date.wYear] xmm0 +
push eax  +
push 0  +
push 400h  +
call ds:GetDateFormatW  +
lea eax [esp+450h+DateStr] +
push eax  +
push offset aS  +
lea eax [esp+458h+var_408] +
push 100h  +
push eax  +
call sub_4044D0  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jnz loc_412D39  +
xor al al +
pop edi  +
pop esi  +
mov ecx [esp+448h+var_4] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
lea edx [esp+450h+var_408] +
lea esi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_412D40  +
sub edx esi +
lea eax [esp+450h+var_408] +
sar edx 1 +
mov ecx edi +
push edx  +
push eax  +
call loc_402B00  +
mov ecx [esp+458h+var_C] +
mov al 1 +
pop edi  +
pop esi  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 61Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+618h] eax +
push esi  +
lea eax [esp+8] +
mov esi ecx +
push eax  +
call ds:GetLocalTime  +
push 100h  +
lea eax [esp+21Ch] +
push eax  +
push offset aHhMmSs  +
lea eax [esp+14h] +
push eax  +
push 8  +
push 400h  +
call ds:GetTimeFormatW  +
push 100h  +
lea eax [esp+41Ch] +
push eax  +
push offset Format  +
lea eax [esp+14h] +
push eax  +
push 0  +
push 400h  +
call ds:GetDateFormatW  +
lea eax [esp+218h] +
push eax  +
lea eax [esp+41Ch] +
push eax  +
push offset aSS  +
lea eax [esp+24h] +
push 100h  +
push eax  +
call sub_4044D0  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_412E31  +
xor al al +
pop esi  +
mov ecx [esp+618h] +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [esp+18h] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_412E40  +
sub eax edx +
mov ecx esi +
sar eax 1 +
push eax  +
lea eax [esp+1Ch] +
push eax  +
call loc_402B00  +
mov ecx [esp+61Ch] +
mov al 1 +
pop esi  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+14h] 8 +
jb loc_412E88  +
mov ecx [ecx] +
push ecx  +
call ds:PathFileExistsW  +
cmp eax 1 +
setz al  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_412EC3  +
mov eax [edi] +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_424D5C  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_412EE0  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathAppendW  +
mov esi eax +
test esi esi +
jz loc_412F1E  +
lea edx [ebp-20Ch] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_412F00  +
sub edx ecx +
lea eax [ebp-20Ch] +
sar edx 1 +
mov ecx edi +
push edx  +
push eax  +
call loc_402B00  +
mov ecx [ebp-4] +
cmp esi 1 +
pop edi  +
setz al  +
xor ecx ebp +
pop esi  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_412F63  +
mov eax [edi] +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_424D5C  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_412F80  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathAddExtensionW  +
test eax eax +
jnz loc_412FA4  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
lea edx [ebp-20Ch] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_412FB0  +
sub edx ecx +
lea eax [ebp-20Ch] +
sar edx 1 +
mov ecx edi +
push edx  +
push eax  +
call loc_402B00  +
mov ecx [ebp-4] +
mov al 1 +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_413003  +
mov eax [edi] +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_424D5C  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_413020  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathRenameExtensionW  +
test eax eax +
jnz loc_413044  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
lea edx [ebp-20Ch] +
lea ecx [edx+2] +
sub esp 20Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_4130A0  +
mov eax [esi] +
push eax  +
lea eax [ebp+pszPath] +
push 104h  +
push eax  +
call sub_424D5C  +
add esp 0Ch +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_4130D7  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
lea edx [ebp+pszPath] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_4130E0  +
sub edx ecx +
lea eax [ebp+pszPath] +
sar edx 1 +
mov ecx esi +
push edx  +
push eax  +
call loc_402B00  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
sub esp 8 +
mov edi edx +
mov esi ecx +
call loc_4132D0  +
mov edx eax +
cmp edx 0FFFFFFFFh +
jnz loc_413133  +
xor al al +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [esi+10h] +
xor eax eax +
mov dword ptr [ebp-8] 0 +
mov dword ptr [ebp-4] 7 +
mov [ebp-18h] ax +
cmp ecx edx +
jb loc_413187  +
mov eax ecx +
sub eax edx +
cmp eax ecx +
cmovb ecx eax +
cmp dword ptr [esi+14h] 8 +
jb loc_41315F  +
mov esi [esi] +
push ecx  +
lea eax [esi+edx*2] +
push eax  +
lea ecx [ebp-18h] +
call loc_402B00  +
lea eax [ebp-18h] +
mov ecx edi +
push eax  +
call loc_4095F0  +
lea ecx [ebp-18h] +
call loc_4029B0  +
pop edi  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_402C80  +
mov eax 200Ch +
call sub_41C6B0  +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov esi edx +
mov edi ecx +
push ecx  +
mov ecx esi +
call loc_415720  +
add esp 4 +
test eax eax +
jz loc_4131E2  +
cmp eax 2 +
jz loc_4131D0  +
push ecx  +
mov ecx esi +
call sub_411140  +
add esp 4 +
test al al +
jnz loc_4131E2  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
push ebx  +
xor ebx ebx +
cmp dword ptr [edi+14h] 8 +
jb loc_4131ED  +
mov edi [edi] +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 0C0000000h  +
push edi  +
call ds:CreateFileW  +
cmp dword ptr [esi+14h] 8 +
mov edi eax +
jb loc_413210  +
mov esi [esi] +
push 0  +
push 200080h  +
push 4  +
push 0  +
push 0  +
push 40000000h  +
push esi  +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_413250  +
push edi  +
call ds:CloseHandle  +
pop ebx  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
push 0  +
lea eax [ebp+nNumberOfBytesToWrite] +
push eax  +
push 1000h  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call ds:ReadFile  +
test eax eax +
jz loc_41328F  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call ds:WriteFile  +
jmp loc_413297  +
call ds:GetLastError  +
mov ebx eax +
cmp [ebp+nNumberOfBytesToWrite] 1000h +
jz loc_413250  +
push edi  +
call ds:CloseHandle  +
push esi  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
test ebx ebx +
pop ebx  +
setz al  +
xor ecx ebp +
pop edi  +
pop esi  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+14h] 8 +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
jb loc_4132DD  +
mov ebx [ecx] +
mov eax [ecx+10h] +
cmp eax 1 +
jb loc_413339  +
dec eax  +
or ecx 0FFFFFFFFh +
cmp eax ecx +
cmovb ecx eax +
lea edi [ebx+ecx*2] +
mov esi edi +
sub esi offset a__0 +
cmp word ptr [edi] 2Eh +
jnz loc_41332D  +
mov edx 1 +
mov eax offset a__0 +
mov cx [esi+eax] +
cmp cx [eax] +
jnz loc_41332D  +
add eax 2 +
sub edx 1 +
jnz loc_413310  +
sub edi ebx +
sar edi 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn 8  +
***
cmp edi ebx +
jz loc_413339  +
sub edi 2 +
sub esi 2 +
jmp loc_413300  +
***
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440C27  +
mov eax large fs:0 +
push eax  +
sub esp 484h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-48Ch] edi +
xor eax eax +
mov dword ptr [ebp-438h] 0 +
mov dword ptr [ebp-434h] 7 +
mov [ebp-448h] ax +
mov [ebp-4] eax +
lea ecx [ebp-460h] +
push 1  +
push offset asc_452764  +
mov [ebp-450h] eax +
mov dword ptr [ebp-44Ch] 7 +
mov [ebp-460h] ax +
call loc_402B00  +
mov byte ptr [ebp-4] 1 +
lea edx [ebp-460h] +
cmp dword ptr [ebp-44Ch] 8 +
lea esi [edi+4Ch] +
cmovnb edx [ebp-460h] +
mov ecx edx +
lea eax [ecx+2] +
mov [ebp-484h] eax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4133F4  +
sub ecx [ebp-484h] +
mov eax esi +
sar ecx 1 +
cmp dword ptr [esi+14h] 8 +
jb loc_413411  +
mov eax [esi] +
push dword ptr [ebp-490h]  +
push ecx  +
push edx  +
mov edx [esi+10h] +
push ecx  +
mov ecx eax +
call loc_40C4A0  +
mov edx eax +
mov dword ptr [ebp-418h] 0 +
xor eax eax +
mov dword ptr [ebp-414h] 7 +
add esp 10h +
mov [ebp-428h] ax +
cmp [esi+10h] edx +
mov eax esi +
cmovb edx [esi+10h] +
cmp dword ptr [esi+14h] 8 +
jb loc_413457  +
mov eax [esi] +
push edx  +
push eax  +
lea ecx [ebp-428h] +
call loc_402B00  +
lea eax [ebp-428h] +
push eax  +
lea ecx [ebp-448h] +
call loc_4095F0  +
mov edx [ebp-414h] +
cmp edx 8 +
jb loc_4134B6  +
mov ecx [ebp-428h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4134AC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4138DC  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
lea eax [ebp-460h] +
push eax  +
lea edx [ebp-448h] +
lea ecx [ebp-478h] +
call sub_415640  +
add esp 4 +
push 9  +
push offset aAsu_trace  +
mov ecx eax +
mov byte ptr [ebp-4] 2 +
call loc_40BBF0  +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-428h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
mov [eax] cx +
lea ecx [ebp-448h] +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
lea eax [ebp-428h] +
push eax  +
movq qword ptr [ebp-418h] xmm0 +
call loc_4095F0  +
mov edx [ebp-414h] +
cmp edx 8 +
jb loc_41355F  +
mov ecx [ebp-428h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413555  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4138D7  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-464h] +
cmp edx 8 +
jb loc_4135A3  +
mov ecx [ebp-478h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413599  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4138D7  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [edi+64h] +
cmp eax 0Ah +
jz loc_4135BE  +
cmp eax 14h +
jz loc_4135B7  +
mov edi 0A00000h +
jmp loc_4135C3  +
mov edi 1400000h +
jmp loc_4135C3  +
mov edi 3200000h +
push 400h  +
lea eax [ebp-410h] +
push 0  +
push eax  +
call sub_41DD10  +
cmp dword ptr [ebp-434h] 8 +
lea eax [ebp-448h] +
push offset aRbCcsUtf8  +
cmovnb eax [ebp-448h] +
push eax  +
lea eax [ebp-47Ch] +
mov dword ptr [ebp-47Ch] 0 +
push eax  +
call sub_4234B8  +
mov eax [ebp-47Ch] +
add esp 18h +
test eax eax +
jz loc_413632  +
push eax  +
push 9  +
lea eax [ebp-410h] +
push 1  +
push eax  +
call sub_424C21  +
push dword ptr [ebp-47Ch]  +
call sub_423576  +
add esp 14h +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
mov byte ptr [ebp-47Dh] 0 +
jb loc_413643  +
mov eax [esi] +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebp-490h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_413673  +
mov byte ptr [ebp-47Dh] 0 +
jmp loc_41383C  +
lea ecx [ebp-430h] +
push ecx  +
push eax  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_4136A6  +
mov eax [ebp-430h] +
mov [ebp-484h] eax +
mov eax [ebp-42Ch] +
mov [ebp-488h] eax +
mov byte ptr [ebp-47Dh] 1 +
jmp loc_4136BE  +
mov eax [ebp-42Ch] +
mov [ebp-488h] eax +
mov eax [ebp-430h] +
mov [ebp-484h] eax +
push dword ptr [ebp-490h]  +
call ds:CloseHandle  +
cmp byte ptr [ebp-47Dh] 0 +
jz loc_41383C  +
cmp dword ptr [ebp-488h] 0 +
jl loc_41383C  +
jg loc_4136F2  +
cmp [ebp-484h] edi +
jb loc_41383C  +
mov eax [ebp-48Ch] +
lea edi [eax+68h] +
mov byte ptr [eax+0D0h] 1 +
mov eax [edi] +
test eax eax +
jz loc_41370F  +
push eax  +
call ds:CloseHandle  +
push esi  +
lea ecx [ebp-478h] +
call sub_402A60  +
lea ecx [ebp-478h] +
mov byte ptr [ebp-4] 3 +
call loc_4194C0  +
push ecx  +
lea edx [ebp-478h] +
mov ecx esi +
call sub_413190  +
add esp 4 +
test al al +
jz loc_413796  +
push ecx  +
mov ecx esi +
call loc_415720  +
add esp 4 +
test eax eax +
jz loc_413762  +
cmp eax 2 +
jz loc_413796  +
push ecx  +
mov ecx esi +
call sub_411140  +
add esp 4 +
test al al +
jz loc_413796  +
cmp dword ptr [esi+14h] 8 +
jb loc_41376A  +
mov esi [esi] +
push 0  +
push 200080h  +
push 5  +
push 0  +
push 3  +
push 40000000h  +
push esi  +
call ds:CreateFileW  +
mov [edi] eax +
test eax eax +
jz loc_413796  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [edi] 0 +
mov esi [ebp-48Ch] +
mov ecx esi +
push edi  +
call sub_4055D0  +
push 8  +
push offset aKeeplogs  +
lea ecx [ebp-428h] +
mov [ebp-47Dh] al +
mov dword ptr [ebp-418h] 0 +
mov dword ptr [ebp-414h] 0Fh +
mov byte ptr [ebp-428h] 0 +
call loc_40A5D0  +
mov byte ptr [ebp-4] 4 +
lea eax [ebp-428h] +
cmp dword ptr [ebp-414h] 10h +
lea ecx [ebp-410h] +
cmovnb eax [ebp-428h] +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_413815  +
test dl dl +
jz loc_413811  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_413815  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_4137F5  +
xor eax eax +
jmp loc_41381A  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_413826  +
push ecx  +
mov ecx esi +
call loc_406CD0  +
lea ecx [ebp-428h] +
call loc_409760  +
lea ecx [ebp-478h] +
call loc_4029B0  +
mov edx [ebp-44Ch] +
cmp edx 8 +
jb loc_413878  +
mov ecx [ebp-460h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41386E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4138DC  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-434h] +
cmp edx 8 +
jb loc_4138B4  +
mov ecx [ebp-448h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4138AA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4138DC  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al [ebp-47Dh] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_42071A  +
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440C98  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push esi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aProxyusername  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
add esi 100h +
mov dword ptr [ebp-4] 0 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413972  +
movups xmm0 oword ptr [ebp-24h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-24h] ax +
jmp loc_413981  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_4139BF  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4139B5  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aProxyUser  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
mov dword ptr [ebp-4] 1 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413A13  +
movups xmm0 oword ptr [ebp-24h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-24h] ax +
jmp loc_413A22  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_413A60  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413A56  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 9  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aProxyuser  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
mov dword ptr [ebp-4] 2 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413AB4  +
movups xmm0 oword ptr [ebp-24h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-24h] ax +
jmp loc_413AC3  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_413B01  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413AF7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 4  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aUser  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
mov dword ptr [ebp-4] 3 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413B55  +
movups xmm0 oword ptr [ebp-24h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-24h] ax +
jmp loc_413B64  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_413BA2  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413B98  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 8  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aUsername  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
mov dword ptr [ebp-4] 4 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413BF6  +
movups xmm0 oword ptr [ebp-24h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-24h] ax +
jmp loc_413C05  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_413C43  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413C39  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 0Eh  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aProxyPassword  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
mov dword ptr [ebp-4] 5 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413C97  +
movups xmm0 oword ptr [ebp-24h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-24h] ax +
jmp loc_413CA6  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_413CE4  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413CDA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aProxypassword  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
mov dword ptr [ebp-4] 6 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413D38  +
movups xmm0 oword ptr [ebp-24h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-24h] ax +
jmp loc_413D47  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_413D85  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413D7B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 8  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aPassword  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
mov dword ptr [ebp-4] 7 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413DD9  +
movups xmm0 oword ptr [ebp-24h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-24h] ax +
jmp loc_413DE8  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_413E26  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413E1C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 9  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aProxypass  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_402B00  +
mov dword ptr [ebp-4] 8 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_413E7D  +
movups xmm0 oword ptr [ebp-24h] +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-14h] +
movq qword ptr [eax+10h] xmm0 +
add dword ptr [esi+4] 18h +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_413EBF  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413EB5  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413ECF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440CD8  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
xor edx edx +
mov eax [ebp+0Ch] +
mov edi [ebp+10h] +
mov ecx [ebp+14h] +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] dx +
mov [ebp-4] edx +
mov ecx [ecx] +
mov eax [eax] +
add ecx eax +
xor eax eax +
mov [ebp-30h] edx +
cmp [esi+10h] ecx +
mov [ebp-40h] ax +
mov eax esi +
cmovb ecx [esi+10h] +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [ebp-2Ch] 7 +
jb loc_413F54  +
mov eax [esi] +
push ecx  +
push eax  +
lea ecx [ebp-40h] +
call loc_402B00  +
push 4  +
push offset asc_4536FC  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 1 +
call loc_40BBF0  +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-58h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
mov [eax] cx +
lea ecx [ebp-28h] +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
lea eax [ebp-58h] +
push eax  +
movq qword ptr [ebp-48h] xmm0 +
call loc_4095F0  +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_413FDB  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413FD1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414122  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_414019  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41400F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414122  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [edi] +
xor eax eax +
mov [ebp-40h] ax +
mov eax [esi+10h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
cmp eax ecx +
jb loc_414127  +
sub eax ecx +
or edx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb edx eax +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_41404F  +
mov eax [esi] +
lea eax [eax+ecx*2] +
push edx  +
push eax  +
lea ecx [ebp-40h] +
call loc_402B00  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-40h] +
cmp dword ptr [ebp-2Ch] 8 +
lea ecx [ebp-28h] +
push dword ptr [ebp-30h]  +
cmovnb eax [ebp-40h] +
push eax  +
call loc_40BBF0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_4140B5  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4140AB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41412C  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
lea eax [ebp-28h] +
cmp esi eax +
jz loc_4140CF  +
cmp dword ptr [ebp-14h] 8 +
mov ecx esi +
push dword ptr [ebp-18h]  +
cmovnb eax [ebp-28h] +
push eax  +
call loc_402B00  +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_414105  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4140FB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41412C  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call sub_42071A  +
call loc_402C80  +
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440D20  +
mov eax large fs:0 +
push eax  +
sub esp 94h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-84h] ecx +
mov esi [ebp+8] +
mov edx esi +
mov eax [ebp+0Ch] +
mov [ebp-88h] eax +
xor eax eax +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
lea ecx [edx+2] +
mov [ebp-40h] ax +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_4141A0  +
sub edx ecx +
lea ecx [ebp-40h] +
sar edx 1 +
push edx  +
push esi  +
call loc_402B00  +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-40h] +
cmp dword ptr [ebp-2Ch] 8 +
lea ecx [ebp-40h] +
mov edx [ebp-40h] +
lea esi [ebp-40h] +
cmovnb eax edx +
cmovnb ecx edx +
mov [ebp-74h] eax +
cmovnb esi edx +
mov eax [ebp-30h] +
lea eax [ecx+eax*2] +
mov [ebp-78h] eax +
cmp esi eax +
jz loc_414208  +
mov edi [ebp-74h] +
sub edi esi +
nop   +
movzx eax word ptr [esi] +
push eax  +
call sub_4252F5  +
mov [edi+esi] ax +
add esp 4 +
add esi 2 +
cmp esi [ebp-78h] +
jnz loc_4141F0  +
mov eax [ebp-84h] +
mov esi [eax+100h] +
cmp esi [eax+104h] +
jz loc_41453E  +
cmp dword ptr [esi+14h] 8 +
mov edx 7FFFFFFEh +
mov eax [esi+10h] +
mov ecx esi +
mov [ebp-74h] eax +
mov [ebp-78h] esi +
jb loc_41423B  +
mov ecx [esi] +
mov [ebp-78h] ecx +
cmp eax 8 +
jnb loc_414250  +
movups xmm0 oword ptr [ecx] +
mov dword ptr [ebp-5Ch] 7 +
movups oword ptr [ebp-70h] xmm0 +
jmp loc_41428A  +
mov edi eax +
lea ecx [ebp-70h] +
or edi 7 +
cmp edi 7FFFFFFEh +
cmova edi edx +
lea eax [edi+1] +
push eax  +
call loc_402C90  +
mov ecx [ebp-74h] +
mov [ebp-70h] eax +
lea ecx ds:2[ecx*2] +
push ecx  +
push dword ptr [ebp-78h]  +
push eax  +
call loc_41D210  +
mov eax [ebp-74h] +
add esp 0Ch +
mov [ebp-5Ch] edi +
mov [ebp-60h] eax +
push offset asc_453708  +
lea edx [ebp-70h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-28h] +
call loc_40C030  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 2 +
push eax  +
mov edx offset asc_45370C +
lea ecx [ebp-58h] +
call loc_40BF50  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 3 +
push eax  +
mov edx offset asc_453714 +
lea ecx [ebp-0A0h] +
call loc_40BF50  +
mov edi eax +
add esp 0Ch +
lea eax [ebp-28h] +
cmp eax edi +
jz loc_414346  +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_414314  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41430A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414591  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov dword ptr [ebp-18h] 0 +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
movups xmm0 oword ptr [edi] +
movups oword ptr [ebp-28h] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [ebp-18h] xmm0 +
mov [edi+10h] eax +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
mov edx [ebp-8Ch] +
cmp edx 8 +
jb loc_414386  +
mov ecx [ebp-0A0h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41437C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414591  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
mov edi [ebp-28h] +
lea ecx [ebp-40h] +
push dword ptr [ebp-18h]  +
mov edx [ebp-30h] +
cmovnb eax edi +
cmp dword ptr [ebp-2Ch] 8 +
push eax  +
cmovnb ecx [ebp-40h] +
push 0  +
mov [ebp-74h] edi +
call loc_40C5D0  +
mov ecx [ebp-58h] +
add esp 0Ch +
mov [ebp-78h] eax +
cmp eax 0FFFFFFFFh +
jz loc_414456  +
cmp dword ptr [ebp-44h] 8 +
lea edi [ebp-58h] +
push dword ptr [ebp-48h]  +
mov edx [ebp-30h] +
cmovnb edi ecx +
cmp dword ptr [ebp-2Ch] 8 +
mov [ebp-7Ch] ecx +
lea ecx [ebp-40h] +
cmovnb ecx [ebp-40h] +
push edi  +
push 0  +
call loc_40C5D0  +
add esp 0Ch +
mov [ebp-80h] eax +
cmp eax 0FFFFFFFFh +
jz loc_414450  +
mov edi [ebp-78h] +
mov edx [ebp-18h] +
lea ecx [edx+edi] +
cmp ecx eax +
jz loc_414448  +
mov [ebp-78h] eax +
lea eax [ebp-74h] +
push eax  +
lea eax [ebp-78h] +
mov [ebp-74h] edx +
push eax  +
lea eax [ebp-7Ch] +
mov [ebp-7Ch] edi +
push eax  +
push dword ptr [ebp-88h]  +
call loc_413EE0  +
mov eax [ebp-18h] +
mov [ebp-7Ch] eax +
mov eax [ebp-80h] +
mov [ebp-80h] eax +
lea eax [ebp-7Ch] +
push eax  +
lea eax [ebp-80h] +
mov [ebp-74h] edi +
push eax  +
lea eax [ebp-74h] +
push eax  +
lea eax [ebp-40h] +
push eax  +
call loc_413EE0  +
mov edi [ebp-28h] +
jmp loc_414453  +
mov edi [ebp-74h] +
mov ecx [ebp-7Ch] +
jmp loc_414456  +
mov edi [ebp-74h] +
mov ecx [ebp-58h] +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-44h] +
cmp eax 8 +
jb loc_414494  +
lea edx ds:2[eax*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_414487  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414591  +
push edx  +
push ecx  +
call sub_41B8B8  +
mov edi [ebp-28h] +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-58h] ax +
mov eax [ebp-14h] +
mov dword ptr [ebp-48h] 0 +
mov dword ptr [ebp-44h] 7 +
cmp eax 8 +
jb loc_4144E3  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_4144D9  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414591  +
push ecx  +
push edi  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov [ebp-4] al +
mov edx [ebp-5Ch] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
cmp edx 8 +
jb loc_414530  +
mov ecx [ebp-70h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_414526  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414591  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-84h] +
add esi 18h +
jmp loc_414214  +
***
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_414574  +
mov edx [ebp-40h] +
lea ecx ds:2[eax*2] +
mov eax edx +
cmp ecx 1000h +
jb loc_41456A  +
mov edx [edx-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414591  +
push ecx  +
push edx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440D79  +
mov eax large fs:0 +
push eax  +
sub esp 7Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-84h] ebx +
mov eax [ebp+0Ch] +
mov edi [ebp+1Ch] +
mov [ebp-7Ch] eax +
mov eax [ebp+10h] +
mov [ebp-78h] eax +
mov eax [ebp+14h] +
mov [ebp-74h] eax +
mov eax [ebp+18h] +
mov [ebp-70h] eax +
xor eax eax +
mov [ebp-80h] eax +
mov [ebp-6Ch] eax +
mov [ebx+0D0h] al +
mov [ebp-40h] eax +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
mov [ebp-4] eax +
push 40h  +
mov [ebp-38h] eax +
mov [ebp-34h] eax +
call sub_41B637  +
add esp 4 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [ebp-38h] eax +
xor eax eax +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 7 +
mov [ebp-30h] ax +
mov dword ptr [ebp-4] 1 +
test edi edi +
jz loc_414703  +
cmp [edi+38h] al +
jnz loc_414664  +
push edi  +
lea ecx [ebp-50h] +
call sub_414900  +
jmp loc_414758  +
mov eax [edi+10h] +
test eax eax +
jz loc_414688  +
lea edx [ebx+94h] +
cmp edx edi +
jz loc_414688  +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_41467F  +
mov ecx [edi] +
push eax  +
push ecx  +
mov ecx edx +
call loc_402B00  +
mov ecx [edi+18h] +
mov eax [ecx] +
mov [ebp-14h] eax +
cmp eax ecx +
jz loc_4146DD  +
lea ecx [ebx+0ACh] +
mov ebx ecx +
add eax 10h +
mov ecx ebx +
push eax  +
lea esi [eax+18h] +
call loc_40FE30  +
cmp eax esi +
jz loc_4146C7  +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_4146BC  +
mov ecx [esi] +
push dword ptr [esi+10h]  +
push ecx  +
mov ecx eax +
call loc_402B00  +
lea ecx [ebp-14h] +
call loc_403FC0  +
mov eax [ebp-14h] +
cmp eax [edi+18h] +
jnz loc_4146A0  +
mov ebx [ebp-84h] +
cmp dword ptr [edi+30h] 0 +
jz loc_414703  +
add edi 20h +
lea ecx [ebx+0B4h] +
cmp ecx edi +
jz loc_414703  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_4146FA  +
mov eax [edi] +
push dword ptr [edi+10h]  +
push eax  +
call loc_402B00  +
lea esi [ebx+94h] +
lea eax [ebp-50h] +
cmp eax esi +
jz loc_414726  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_41471A  +
mov eax [esi] +
push dword ptr [esi+10h]  +
lea ecx [ebp-50h] +
push eax  +
call loc_402B00  +
lea eax [esi+18h] +
push eax  +
lea ecx [ebp-38h] +
call loc_4027F0  +
lea eax [esi+20h] +
lea ecx [ebp-30h] +
cmp ecx eax +
jz loc_414752  +
cmp dword ptr [eax+14h] 8 +
mov ecx eax +
jb loc_414746  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-30h] +
call loc_402B00  +
mov al [esi+38h] +
mov [ebp-18h] al +
cmp dword ptr [ebp-40h] 0 +
mov esi [ebp+8] +
mov edi [ebp+20h] +
jz loc_41478F  +
cmp dword ptr [ebp-3Ch] 8 +
lea eax [ebp-50h] +
push edi  +
cmovnb eax [ebp-50h] +
mov ecx ebx +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push dword ptr [ebp-70h]  +
push dword ptr [ebp-74h]  +
push dword ptr [ebp-78h]  +
push dword ptr [ebp-7Ch]  +
push esi  +
call sub_406A30  +
mov ecx [ebp-38h] +
mov eax [ecx] +
mov [ebp-14h] eax +
cmp eax ecx +
jz loc_414898  +
nop   +
lea edi [eax+10h] +
lea esi [edi+18h] +
mov byte ptr [ebp-4] 2 +
lea ebx [edi+10h] +
xor eax eax +
mov dword ptr [ebp-58h] 0 +
mov [ebp-68h] ax +
lea ecx [ebp-68h] +
mov eax [ebp-6Ch] +
or eax 1 +
mov dword ptr [ebp-54h] 7 +
mov [ebp-6Ch] eax +
mov [ebp-80h] eax +
lea eax [esi+10h] +
mov [ebp-88h] eax +
mov eax [eax] +
add eax [ebx] +
push eax  +
call loc_40CB60  +
cmp dword ptr [edi+14h] 8 +
jb loc_4147EB  +
mov edi [edi] +
push dword ptr [ebx]  +
lea ecx [ebp-68h] +
push edi  +
call loc_40BBF0  +
cmp dword ptr [esi+14h] 8 +
jb loc_4147FE  +
mov esi [esi] +
mov eax [ebp-88h] +
lea ecx [ebp-68h] +
push dword ptr [eax]  +
push esi  +
call loc_40BBF0  +
mov edi [ebp+20h] +
lea eax [ebp-68h] +
cmp dword ptr [ebp-54h] 8 +
push edi  +
cmovnb eax [ebp-68h] +
push 0  +
mov esi [ebp+8] +
mov ebx [ebp-84h] +
mov ecx ebx +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push dword ptr [ebp-70h]  +
push dword ptr [ebp-74h]  +
push dword ptr [ebp-78h]  +
push dword ptr [ebp-7Ch]  +
push esi  +
call sub_406A30  +
and dword ptr [ebp-6Ch] 0FFFFFFFEh +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-54h] +
cmp edx 8 +
jb loc_414884  +
mov ecx [ebp-68h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41487A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4148EF  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
lea ecx [ebp-14h] +
call loc_403FC0  +
mov eax [ebp-14h] +
cmp eax [ebp-38h] +
jnz loc_4147A0  +
cmp dword ptr [ebp-20h] 0 +
jz loc_4148C9  +
cmp dword ptr [ebp-1Ch] 8 +
lea eax [ebp-30h] +
push edi  +
cmovnb eax [ebp-30h] +
mov ecx ebx +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push dword ptr [ebp-70h]  +
push dword ptr [ebp-74h]  +
push dword ptr [ebp-78h]  +
push dword ptr [ebp-7Ch]  +
push esi  +
call sub_406A30  +
lea ecx [ebp-50h] +
call loc_405430  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_42071A  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp edi esi +
jz loc_414921  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_414918  +
mov eax [esi] +
push dword ptr [esi+10h]  +
push eax  +
call loc_402B00  +
lea eax [esi+18h] +
push eax  +
lea ecx [edi+18h] +
call loc_4027F0  +
lea eax [esi+20h] +
lea ecx [edi+20h] +
cmp ecx eax +
jz loc_41494A  +
cmp dword ptr [eax+14h] 8 +
mov edx eax +
jb loc_414941  +
mov edx [eax] +
push dword ptr [eax+10h]  +
push edx  +
call loc_402B00  +
mov al [esi+38h] +
mov [edi+38h] al +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440E60  +
mov eax large fs:0 +
push eax  +
sub esp 2F8h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-304h] edi +
xor eax eax +
mov dword ptr [ebp-2A0h] 0 +
mov dword ptr [ebp-29Ch] 7 +
mov [ebp-2B0h] ax +
mov [ebp-4] eax +
mov [ebp-224h] eax +
mov dword ptr [ebp-220h] 7 +
mov [ebp-234h] ax +
mov [ebp-270h] eax +
mov dword ptr [ebp-26Ch] 7 +
mov [ebp-280h] ax +
mov [ebp-2B8h] eax +
mov dword ptr [ebp-2B4h] 7 +
mov [ebp-2C8h] ax +
mov [ebp-288h] eax +
mov dword ptr [ebp-284h] 7 +
mov [ebp-298h] ax +
lea ecx [ebp-280h] +
mov byte ptr [ebp-4] 4 +
call loc_419C20  +
lea ecx [ebp-2D8h] +
call loc_410400  +
push 7  +
push offset aUnknown  +
lea ecx [ebp-234h] +
call loc_402B00  +
mov eax [ebp-2D8h] +
add eax 0FFFFFFFCh +
cmp eax 6 +
ja loc_414B3B  +
jmp ds:off_415620[eax*4]  +
push 0Ah  +
push offset aWindows10  +
jmp loc_414B42  +
mov eax [ebp-2D4h] +
cmp eax 3 +
jnz loc_414A7A  +
push 0Bh  +
push offset aWindows8_1  +
jmp loc_414B42  +
cmp eax 2 +
jnz loc_414A94  +
push offset aWindows8  +
lea ecx [ebp-234h] +
call sub_4095C0  +
jmp loc_414B4D  +
cmp eax 1 +
jnz loc_414AAE  +
push offset aWindows7  +
lea ecx [ebp-234h] +
call sub_4095C0  +
jmp loc_414B4D  +
test eax eax +
jnz loc_414B4D  +
push offset aWindowsVista  +
lea ecx [ebp-234h] +
call sub_4095C0  +
jmp loc_414B4D  +
mov eax [ebp-2D4h] +
cmp eax 2 +
jz loc_414AF1  +
cmp eax 1 +
jz loc_414AF1  +
test eax eax +
jnz loc_414B4D  +
push offset aWindows2000  +
lea ecx [ebp-234h] +
call sub_4095C0  +
jmp loc_414B4D  +
push 0Ah  +
push offset aWindowsXp  +
jmp loc_414B42  +
mov eax [ebp-2D4h] +
cmp eax 5Ah +
jnz loc_414B0E  +
push 0Ah  +
push offset aWindowsMe  +
jmp loc_414B42  +
cmp eax 0Ah +
jnz loc_414B25  +
push offset aWindows98  +
lea ecx [ebp-234h] +
call sub_4095C0  +
jmp loc_414B4D  +
test eax eax +
jnz loc_414B4D  +
push offset aWindows95  +
lea ecx [ebp-234h] +
call sub_4095C0  +
jmp loc_414B4D  +
push 7  +
push offset aUnknown  +
lea ecx [ebp-234h] +
call loc_402B00  +
lea edx [ebp-2B0h] +
lea ecx [ebp-2D8h] +
call loc_419770  +
lea edx [ebp-2CCh] +
lea ecx [ebp-300h] +
call sub_410210  +
push dword ptr [ebp-300h]  +
lea eax [ebp-210h] +
push offset aD  +
push 100h  +
push eax  +
call sub_4044D0  +
add esp 10h +
mov dword ptr [ebp-2ECh] 0 +
xor eax eax +
mov dword ptr [ebp-2E8h] 7 +
lea ecx [ebp-210h] +
mov [ebp-2FCh] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_414BB4  +
sub ecx edx +
lea eax [ebp-210h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-2FCh] +
call loc_402B00  +
mov edx [ebp-2E8h] +
cmp edx 8 +
jb loc_414C16  +
mov ecx [ebp-2FCh] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_414C0C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415619  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-240h] 0 +
mov dword ptr [ebp-23Ch] 7 +
mov [ebp-250h] ax +
mov [ebp-258h] eax +
mov dword ptr [ebp-254h] 7 +
mov [ebp-268h] ax +
lea edx [ebp-2CCh] +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-21Ch] +
call sub_410210  +
cmp dword ptr [ebp-2CCh] 2 +
jnz loc_414C75  +
lea ecx [ebp-250h] +
call sub_410DF0  +
jmp loc_414CC9  +
push 0  +
push 26h  +
lea eax [ebp-218h] +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_414CC9  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_414C95  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-250h] +
call loc_402B00  +
push 1Bh  +
push offset aAdobeAdobeCrea  +
lea ecx [ebp-250h] +
call loc_40BBF0  +
push 16h  +
xor eax eax +
mov dword ptr [ebp-2D4h] 0 +
push offset aAccCreativeClo  +
lea ecx [ebp-2E4h] +
mov dword ptr [ebp-2D0h] 7 +
mov [ebp-2E4h] ax +
call loc_402B00  +
push ecx  +
lea edx [ebp-2E4h] +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-250h] +
call loc_411080  +
mov byte ptr [ebp-4] 6 +
add esp 4 +
mov edx [ebp-2D0h] +
cmp edx 8 +
jb loc_414D55  +
mov ecx [ebp-2E4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_414D4B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4155F6  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
cmp dword ptr [ebp-23Ch] 8 +
lea eax [ebp-250h] +
cmovnb eax [ebp-250h] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_414F6D  +
lea eax [ebp-250h] +
push eax  +
lea ecx [ebp-2E4h] +
call sub_402A60  +
mov byte ptr [ebp-4] 8 +
lea ecx [ebp-238h] +
xor bl bl +
mov dword ptr [ebp-238h] 0 +
cmp dword ptr [ebp-2D0h] 8 +
lea eax [ebp-2E4h] +
push ecx  +
cmovnb eax [ebp-2E4h] +
push eax  +
mov dword ptr [ebp-21Ch] 0 +
mov dword ptr [ebp-2CCh] 0 +
call ds:GetFileVersionInfoSizeW  +
push 208h  +
mov esi eax +
lea eax [ebp-218h] +
push 0  +
push eax  +
call sub_41DD10  +
add esp 0Ch +
test esi esi +
jz loc_414EA7  +
push esi  +
call sub_41BD8A  +
add esp 4 +
lea ecx [ebp-2E4h] +
cmp dword ptr [ebp-2D0h] 8 +
mov edi eax +
cmovnb ecx [ebp-2E4h] +
push edi  +
push esi  +
push dword ptr [ebp-238h]  +
push ecx  +
call ds:GetFileVersionInfoW  +
test eax eax +
jz loc_414E98  +
lea eax [ebp-21Ch] +
push eax  +
lea eax [ebp-2CCh] +
push eax  +
push offset asc_452764  +
push edi  +
call ds:VerQueryValueW  +
test eax eax +
jz loc_414E98  +
cmp dword ptr [ebp-21Ch] 0 +
jz loc_414E98  +
mov eax [ebp-2CCh] +
cmp dword ptr [eax] 0FEEF04BDh +
jnz loc_414E98  +
movzx esi word ptr [eax+0Ah] +
movzx edx word ptr [eax+8] +
movzx ecx word ptr [eax+0Eh] +
movzx eax word ptr [eax+0Ch] +
push eax  +
push ecx  +
push edx  +
push esi  +
push offset aD_D_D_D  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_4044D0  +
add esp 1Ch +
lea eax [ebp-218h] +
lea ecx [ebp-268h] +
push eax  +
call sub_4095C0  +
mov bl 1 +
push edi  +
call sub_41BD85  +
mov edi [ebp-304h] +
add esp 4 +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2D0h] +
cmp edx 8 +
jb loc_414EEB  +
mov ecx [ebp-2E4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_414EE1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4155FB  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
test bl bl +
jz loc_414F6D  +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-2ECh] 0 +
push offset aAccVersion  +
lea ecx [ebp-2FCh] +
mov dword ptr [ebp-2E8h] 7 +
mov [ebp-2FCh] ax +
call loc_402B00  +
lea eax [ebp-2FCh] +
mov byte ptr [ebp-4] 9 +
push eax  +
lea ecx [edi+0ACh] +
call loc_4026C0  +
lea ecx [ebp-268h] +
cmp eax ecx +
jz loc_414F5E  +
cmp dword ptr [ebp-254h] 8 +
push dword ptr [ebp-258h]  +
cmovnb ecx [ebp-268h] +
push ecx  +
mov ecx eax +
call loc_402B00  +
lea ecx [ebp-2FCh] +
mov byte ptr [ebp-4] 6 +
call loc_4029B0  +
push 4Eh  +
push offset asc_453768  +
lea ecx [edi+94h] +
call loc_402B00  +
push 9  +
xor eax eax +
mov dword ptr [ebp-2D4h] 0 +
push offset aOsName  +
lea ecx [ebp-2E4h] +
mov dword ptr [ebp-2D0h] 7 +
mov [ebp-2E4h] ax +
call loc_402B00  +
mov byte ptr [ebp-4] 0Ah +
lea eax [ebp-2E4h] +
cmp dword ptr [ebp-220h] 8 +
lea ebx [edi+0ACh] +
lea esi [ebp-234h] +
mov ecx ebx +
cmovnb esi [ebp-234h] +
push eax  +
call loc_4026C0  +
mov edx esi +
lea edi [edx+2] +
nop   +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_414FE0  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_402B00  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2D0h] +
cmp edx 8 +
jb loc_41503C  +
mov ecx [ebp-2E4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_415032  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415600  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 0Ch  +
xor eax eax +
mov dword ptr [ebp-2D4h] 0 +
push offset aOsVersion  +
lea ecx [ebp-2E4h] +
mov dword ptr [ebp-2D0h] 7 +
mov [ebp-2E4h] ax +
call loc_402B00  +
mov byte ptr [ebp-4] 0Bh +
lea eax [ebp-2E4h] +
cmp dword ptr [ebp-29Ch] 8 +
lea esi [ebp-2B0h] +
push eax  +
cmovnb esi [ebp-2B0h] +
mov ecx ebx +
call loc_4026C0  +
mov edx esi +
lea edi [edx+2] +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_415096  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_402B00  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2D0h] +
cmp edx 8 +
jb loc_4150F2  +
mov ecx [ebp-2E4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4150E8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415605  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 0Bh  +
xor eax eax +
mov dword ptr [ebp-2D4h] 0 +
push offset aOsLocale  +
lea ecx [ebp-2E4h] +
mov dword ptr [ebp-2D0h] 7 +
mov [ebp-2E4h] ax +
call loc_402B00  +
mov byte ptr [ebp-4] 0Ch +
lea eax [ebp-2E4h] +
cmp dword ptr [ebp-26Ch] 8 +
lea esi [ebp-280h] +
push eax  +
cmovnb esi [ebp-280h] +
mov ecx ebx +
call loc_4026C0  +
mov edx esi +
lea edi [edx+2] +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_415150  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_402B00  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2D0h] +
cmp edx 8 +
jb loc_4151AC  +
mov ecx [ebp-2E4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4151A2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41560A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
push 5  +
xor eax eax +
mov dword ptr [ebp-2ECh] 0 +
push offset aBit  +
lea ecx [ebp-2FCh] +
mov dword ptr [ebp-2E8h] 7 +
mov [ebp-2FCh] ax +
call loc_402B00  +
mov byte ptr [ebp-4] 0Dh +
lea eax [ebp-210h] +
push dword ptr [ebp-300h]  +
push offset aD  +
push 100h  +
push eax  +
call sub_4044D0  +
add esp 10h +
mov dword ptr [ebp-2D4h] 0 +
xor eax eax +
mov dword ptr [ebp-2D0h] 7 +
lea ecx [ebp-210h] +
mov [ebp-2E4h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_415224  +
sub ecx edx +
lea eax [ebp-210h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-2E4h] +
call loc_402B00  +
mov byte ptr [ebp-4] 0Eh +
lea eax [ebp-2FCh] +
cmp dword ptr [ebp-2D0h] 8 +
lea esi [ebp-2E4h] +
push eax  +
cmovnb esi [ebp-2E4h] +
mov ecx ebx +
call loc_4026C0  +
mov edx esi +
lea edi [edx+2] +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_415271  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_402B00  +
mov byte ptr [ebp-4] 0Dh +
mov edx [ebp-2D0h] +
cmp edx 8 +
jb loc_4152CD  +
mov ecx [ebp-2E4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4152C3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41560F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2E8h] +
cmp edx 8 +
jb loc_415311  +
mov ecx [ebp-2FCh] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_415307  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41560F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
lea ecx [ebp-298h] +
call sub_410640  +
push 12h  +
xor eax eax +
mov dword ptr [ebp-2ECh] 0 +
push offset aOsBuildVersion  +
lea ecx [ebp-2FCh] +
mov dword ptr [ebp-2E8h] 7 +
mov [ebp-2FCh] ax +
call loc_402B00  +
mov byte ptr [ebp-4] 0Fh +
lea eax [ebp-2FCh] +
cmp dword ptr [ebp-284h] 8 +
lea esi [ebp-298h] +
push eax  +
cmovnb esi [ebp-298h] +
mov ecx ebx +
call loc_4026C0  +
mov edx esi +
lea edi [edx+2] +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_415376  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_402B00  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2E8h] +
cmp edx 8 +
jb loc_4153D2  +
mov ecx [ebp-2FCh] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4153C8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415614  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-304h] +
push 4Eh  +
push offset asc_453768  +
add ecx 0B4h +
call loc_402B00  +
mov edx [ebp-254h] +
cmp edx 8 +
jb loc_41542A  +
mov ecx [ebp-268h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_415420  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415619  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-23Ch] +
xor eax eax +
mov dword ptr [ebp-258h] 0 +
mov dword ptr [ebp-254h] 7 +
mov [ebp-268h] ax +
cmp edx 8 +
jb loc_415487  +
mov ecx [ebp-250h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41547D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415619  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-284h] +
xor eax eax +
mov dword ptr [ebp-240h] 0 +
mov dword ptr [ebp-23Ch] 7 +
mov [ebp-250h] ax +
cmp edx 8 +
jb loc_4154E4  +
mov ecx [ebp-298h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4154DA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415619  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-26Ch] +
cmp edx 8 +
jb loc_415524  +
mov ecx [ebp-280h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41551A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415619  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-220h] +
xor eax eax +
mov dword ptr [ebp-270h] 0 +
mov dword ptr [ebp-26Ch] 7 +
mov [ebp-280h] ax +
cmp edx 8 +
jb loc_415581  +
mov ecx [ebp-234h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_415577  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415619  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-29Ch] +
xor eax eax +
mov dword ptr [ebp-224h] 0 +
mov dword ptr [ebp-220h] 7 +
mov [ebp-234h] ax +
cmp edx 8 +
jb loc_4155DA  +
mov ecx [ebp-2B0h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4155D0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415619  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
call sub_42071A  +
nop   +
push 0FFFFFFFFh  +
push offset loc_440EA9  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp+var_1C] esi +
mov [ebp+var_10] 0 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov edi [ebp+arg_0] +
lea ecx [ebx+10h] +
mov [ebp+var_4] eax +
mov [ebp+var_14] ecx +
mov [ebp+var_10] 1 +
lea eax [edi+10h] +
mov [ebp+var_18] eax +
mov eax [eax] +
add eax [ecx] +
mov ecx esi +
push eax  +
call loc_40CB60  +
cmp dword ptr [ebx+14h] 8 +
jb loc_4156B6  +
mov ebx [ebx] +
mov eax [ebp+var_14] +
mov ecx esi +
push dword ptr [eax]  +
push ebx  +
call loc_40BBF0  +
cmp dword ptr [edi+14h] 8 +
jb loc_4156CB  +
mov edi [edi] +
mov eax [ebp+var_18] +
mov ecx esi +
push dword ptr [eax]  +
push edi  +
call loc_40BBF0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx] +
test eax eax +
jz loc_415712  +
push 7D0h  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_41570D  +
cmp eax 80h +
jnz loc_415712  +
mov al 1 +
retn 8  +
xor al al +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440EE0  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_415757  +
mov eax [esi] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_415774  +
test eax 400h +
jz loc_415774  +
mov eax 1 +
jmp loc_4157F3  +
push esi  +
lea ecx [ebp-2Ch] +
call sub_402A60  +
push esi  +
lea ecx [ebp-44h] +
mov dword ptr [ebp-4] 0 +
call sub_402A60  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 1 +
call loc_410FB0  +
test al al +
jz loc_4157E1  +
mov cx [esi+eax] +
cmp cx [eax] +
jnz loc_41580F  +
add eax 2 +
sub edx 1 +
jnz loc_4157D0  +
lea ecx [ebp-44h] +
call loc_4029B0  +
lea ecx [ebp-2Ch] +
call loc_4029B0  +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp edi 8 +
lea eax [ebp-2Ch] +
cmovnb eax ebx +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_41582B  +
test eax 400h +
jnz loc_415854  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push dword ptr [ebp-1Ch]  +
cmovnb eax [ebp-2Ch] +
lea ecx [ebp-44h] +
push eax  +
call loc_402B00  +
lea ecx [ebp-2Ch] +
call loc_410FB0  +
test al al +
jnz near ptr dword_4157A0  +
jmp loc_4157E1  +
***
lea ecx [ebp-44h] +
call loc_4029B0  +
lea ecx [ebp-2Ch] +
call loc_4029B0  +
mov eax 2 +
jmp loc_4157F3  +
***
and esp 0FFFFFFC0h +
push 0FFFFFFFFh  +
push offset loc_440F1B  +
mov eax large fs:0 +
push eax  +
sub esp 0B4h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0B0h  +
lea eax [ebp+var_C0] +
push 0  +
push eax  +
call sub_41DD10  +
add esp 4 +
lea ecx [ebp+var_C0] +
call sub_409210  +
push [ebp+arg_4]  +
lea ecx [ebp+var_B0] +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
call sub_415B20  +
mov edx esi +
lea ecx [ebp+var_C0] +
call sub_412370  +
lea ecx [ebp+var_C0] +
call sub_405ED0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43FF00  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea esi [ecx+60h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-60h] offset off_452618 +
mov eax [esi-60h] +
mov ecx [eax+4] +
lea eax [ecx-60h] +
mov [ecx+esi-64h] eax +
lea ecx [esi-50h] +
call loc_408D70  +
mov eax [esi-60h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-60h] offset off_45248C +
mov eax [esi-60h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-64h] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_4524B0 +
call sub_41A862  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_440F7F  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-18h] esi +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [esi] offset unk_4538DC +
mov dword ptr [esi+60h] offset off_452484 +
mov dword ptr [ebp-4] 0 +
lea ebx [esi+10h] +
mov eax [esi] +
mov dword ptr [ebp-14h] 1 +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_45248C +
mov eax [esi] +
mov ecx [eax+4] +
push ecx  +
push ebx  +
lea eax [ecx-18h] +
mov [ecx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov ecx [eax+4] +
add ecx esi +
call sub_40BE00  +
mov dword ptr [ebp-4] 2 +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_452618 +
mov eax [esi] +
mov ecx [eax+4] +
mov [ebp-1Ch] ebx +
lea eax [ecx-60h] +
mov [ecx+esi-4] eax +
mov ecx ebx +
call sub_40B9D0  +
mov ecx [ebp+8] +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebx] offset off_4524C8 +
cmp dword ptr [ecx+14h] 8 +
mov eax [ecx+10h] +
mov [ebp-10h] eax +
jb loc_415A9D  +
mov ecx [ecx] +
mov [ebp+8] ecx +
mov ecx 2 +
cmp eax 7FFFFFFFh +
ja loc_415B0D  +
test eax eax +
jz loc_415AED  +
push eax  +
lea ecx [ebx+40h] +
call loc_402C90  +
mov edi eax +
mov eax [ebp-10h] +
lea esi [eax+eax] +
push esi  +
push dword ptr [ebp+8]  +
push edi  +
call loc_41D210  +
mov eax [ebx+0Ch] +
lea ecx [esi+edi] +
mov esi [ebp-18h] +
add esp 0Ch +
mov [ebx+38h] ecx +
mov ecx [ebp-10h] +
mov [eax] edi +
mov eax [ebx+1Ch] +
mov [eax] edi +
mov eax [ebx+2Ch] +
mov [eax] ecx +
mov ecx 3 +
jmp loc_415AF4  +
mov dword ptr [ebx+38h] 0 +
mov [ebx+3Ch] ecx +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_41A1AD  +
push 0FFFFFFFFh  +
push offset loc_440FB0  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_14] ebx +
xor esi esi +
lea ecx [ebp+var_24] +
push ebx  +
mov [ebp+var_1C] esi +
call sub_40A3D0  +
mov [ebp+var_4] esi +
cmp [ebp+var_20] 0 +
jz loc_415C45  +
mov eax [ebx] +
mov eax [eax+4] +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_28] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
call sub_40C1F0  +
mov edi [ebp+var_28] +
add esp 4 +
mov [ebp+var_18] eax +
test edi edi +
jz loc_415BCE  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_415BCE  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
push [ebp+arg_4]  +
mov edi [ebp+var_18] +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebx] +
mov esi [edi] +
mov ecx [eax+4] +
movzx eax word ptr [ecx+ebx+40h] +
add ecx ebx +
mov esi [esi+1Ch] +
push eax  +
push ecx  +
mov byte ptr [ebp+var_2C] 0 +
lea eax [ebp+var_2C] +
push dword ptr [ecx+38h]  +
mov ecx esi +
push [ebp+var_2C]  +
push eax  +
call ds:off_442218  +
mov ecx edi +
call esi  +
xor esi esi +
mov edx 4 +
cmp byte ptr [ebp+var_2C] 0 +
mov [ebp+var_4] 0 +
cmovnz esi edx +
jmp loc_415C4A  +
mov edx [ebp-14h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40A590  +
mov eax offset loc_415C38 +
retn   +
mov ebx [ebp-14h] +
mov esi [ebp-1Ch] +
mov dword ptr [ebp-4] 0 +
mov edx 4 +
mov eax [ebx] +
push 0  +
mov ecx [eax+4] +
xor eax eax +
add ecx ebx +
cmp [ecx+38h] eax +
cmovnz edx eax +
or edx [ecx+0Ch] +
or edx esi +
push edx  +
call loc_405220  +
mov [ebp+var_4] 4 +
call sub_41A82A  +
test al al +
jnz loc_415C7E  +
mov ecx [ebp+var_24] +
call sub_40BB50  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_24] +
mov eax [ecx] +
mov eax [eax+4] +
mov esi [eax+ecx+38h] +
test esi esi +
jz loc_415C9F  +
mov eax [esi] +
mov edi [eax+8] +
cmp edi offset nullsub_1 +
jnz loc_415CB5  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx edi +
call ds:off_442218  +
mov ecx esi +
call edi  +
jmp loc_415C9F  +
***
push esi  +
lea esi [ecx-60h] +
mov ecx esi +
call sub_415940  +
test [ebp+arg_0] 1 +
jz loc_415CF2  +
push 0A8h  +
push esi  +
call sub_41B8B8  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov al [ebp+0Ch] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-1] al +
push edi  +
mov edi [ebp+8] +
mov ecx [esi+14h] +
mov [ebp-0Ch] ecx +
cmp edi ecx +
ja loc_415D47  +
mov ebx esi +
cmp ecx 10h +
jb loc_415D27  +
mov ebx [esi] +
push edi  +
movsx ecx al +
push ecx  +
push ebx  +
mov [esi+10h] edi +
call sub_41DD10  +
add esp 0Ch +
mov byte ptr [edi+ebx] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp edi 7FFFFFFFh +
ja loc_415DFD  +
mov ebx edi +
or ebx 0Fh +
cmp ebx 7FFFFFFFh +
jbe loc_415D67  +
mov ebx 7FFFFFFFh +
jmp loc_415D85  +
mov edx ecx +
mov eax 7FFFFFFFh +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_415D7D  +
mov ebx 7FFFFFFFh +
jmp loc_415D85  +
lea eax [edx+ecx] +
cmp ebx eax +
cmovb ebx eax +
xor ecx ecx +
mov eax ebx +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_40A9D0  +
movsx ecx byte ptr [ebp-1] +
push edi  +
push ecx  +
push eax  +
mov [ebp-8] eax +
mov [esi+10h] edi +
mov [esi+14h] ebx +
call sub_41DD10  +
mov ebx [ebp-8] +
add esp 0Ch +
mov eax [ebp-0Ch] +
mov byte ptr [edi+ebx] 0 +
cmp eax 10h +
jb loc_415DEB  +
lea ecx [eax+1] +
mov eax [esi] +
cmp ecx 1000h +
jb loc_415DE1  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_415DF8  +
mov eax edx +
push ecx  +
push eax  +
call sub_41B8B8  +
add esp 8 +
pop edi  +
mov [esi] ebx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_42071A  +
call loc_403250  +
push 0FFFFFFFFh  +
push offset loc_440FE8  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov eax [ebp+arg_0] +
mov [ebp+var_18] 0 +
mov [ebp+var_20] eax +
mov eax [ebx] +
mov [ebp+var_1C] ebx +
mov [ebp+var_48] ebx +
mov eax [eax+4] +
mov edi [eax+ebx+38h] +
test edi edi +
jz loc_415E71  +
mov eax [edi] +
mov esi [eax+4] +
cmp esi offset nullsub_1 +
jnz loc_415FCC  +
push ecx  +
mov ecx ebx +
mov [ebp+var_4] 0 +
call sub_4128F0  +
mov [ebp+var_44] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_415F69  +
mov eax [ebx] +
mov eax [eax+4] +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_3C] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov byte ptr [ebp+var_4] 3 +
xor ecx ecx +
mov eax [ebx] +
mov byte ptr [ebp+var_2C] 1 +
mov word ptr [ebp+var_2C+2] cx +
mov eax [eax+4] +
add eax ebx +
mov [ebp+var_24] eax +
mov eax [eax+38h] +
test eax eax +
mov [ebp+var_28] eax +
setz byte ptr [ebp+var_34]  +
xor eax eax +
mov word ptr [ebp+var_34+2] ax +
lea eax [ebp+var_40] +
push eax  +
call sub_418F70  +
add esp 4 +
mov edi eax +
lea eax [ebp+var_18] +
push [ebp+var_20]  +
mov esi [edi] +
push eax  +
push [ebp+var_24]  +
lea eax [ebp+var_50] +
push [ebp+var_2C]  +
mov esi [esi+20h] +
mov ecx esi +
push 0  +
push [ebp+var_34]  +
push [ebp+var_28]  +
push eax  +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi [ebp+var_3C] +
test edi edi +
jz loc_415F62  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_415F62  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_415F62  +
mov edx [ebp-1Ch] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40A590  +
mov eax offset loc_415F5F +
retn   +
mov ebx [ebp-1Ch] +
mov [ebp+var_4] 1 +
mov eax [ebx] +
xor edx edx +
push 0  +
mov ecx [eax+4] +
mov eax 4 +
add ecx ebx +
cmp [ecx+38h] edx +
cmovnz eax edx +
or eax [ecx+0Ch] +
or eax [ebp+var_18] +
push eax  +
call loc_405220  +
mov [ebp+var_4] 5 +
mov eax [ebx] +
mov eax [eax+4] +
mov edi [eax+ebx+38h] +
test edi edi +
jz loc_415FAC  +
mov eax [edi] +
mov esi [eax+8] +
cmp esi offset nullsub_1 +
jnz loc_415FDD  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_415E71  +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
jmp loc_415FAC  +
***
push 0FFFFFFFFh  +
push offset loc_441018  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebp+arg_0] +
mov [ebp+var_48] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_44] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_14] +
mov eax [eax+30h] +
mov edi [eax+4] +
mov [ebp+var_34] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_38] +
mov [ebp+var_4] 0 +
push eax  +
push 800h  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push ebx  +
call loc_417CF0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov edi [ebp+var_34] +
mov ebx eax +
test edi edi +
jz loc_4160AA  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_4160AA  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
cmp byte ptr [ebp+var_30] 0 +
jz loc_416105  +
lea eax [ebp+var_34] +
push eax  +
push ebx  +
lea eax [ebp+var_3C] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_41ACED  +
mov ecx [ebp+var_40] +
add esp 10h +
mov [ecx] eax +
lea eax [ebp+var_30] +
cmp [ebp+var_3C] eax +
jz loc_416108  +
cmp [ebp+var_34] 0 +
jnz loc_416108  +
mov ebx [ebp+var_44] +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_4160E9  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_4160F7  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_416119  +
cmp [ebp+arg_C] eax +
jz loc_41611F  +
jmp loc_416122  +
mov ecx [ebp+var_40] +
mov ebx [ebp+var_44] +
mov dword ptr [ebx] 2 +
mov dword ptr [ecx] 0 +
jmp loc_4160DB  +
cmp [ebp+arg_C] 0 +
jz loc_416122  +
or dword ptr [ebx] 1 +
mov edx [ebp+var_48] +
mov ecx [ebp+arg_8] +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFC0h +
sub esp 374h +
mov eax dword_458018 +
xor eax esp +
mov [esp+374h+var_4] eax +
mov eax [ebp+arg_1C] +
mov edx [ebp+arg_14] +
mov [esp+374h+var_338] eax +
mov eax [ebp+arg_C] +
mov [esp+374h+var_328] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov [esp+378h+var_324] eax +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_18] +
mov [esp+37Ch+var_330] eax +
mov eax [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
mov [esp+380h+var_32C] eax +
lea eax [esp+380h+var_340] +
push eax  +
push edx  +
lea eax [esp+388h+var_328] +
mov [esp+388h+var_344] edi +
push eax  +
lea eax [esp+38Ch+var_330] +
mov [esp+38Ch+var_348] esi +
push eax  +
lea eax [esp+390h+var_320] +
mov [esp+390h+var_340] 3B9ACA00h +
push eax  +
push ecx  +
call loc_4171E0  +
add esp 18h +
mov ebx eax +
cmp byte ptr [esp+380h+var_320] 0 +
jnz loc_4161E4  +
xorps xmm0 xmm0 +
mov dword ptr [esi] 2 +
movsd [esp+380h+var_350] xmm0 +
jmp loc_41628B  +
call sub_424F08  +
mov edi eax +
lea eax [esp+380h+var_334] +
push eax  +
lea eax [esp+384h+var_320] +
push eax  +
mov esi [edi] +
mov dword ptr [edi] 0 +
call sub_428CBA  +
mov eax [edi] +
add esp 8 +
mov [esp+380h+var_33C] eax +
mov [edi] esi +
fstp  [esp+380h+var_350] +
test ebx ebx +
jz loc_416236  +
movsd xmm0 ds:qword_453B38 +
movd xmm1 ebx +
cvtdq2pd xmm1 xmm1 +
call sub_43EEE0  +
mulsd xmm0 [esp+380h+var_350] +
mov eax [esp+380h+var_33C] +
jmp loc_41623C  +
movsd xmm0 [esp+380h+var_350] +
lea ecx [esp+380h+var_320] +
movsd [esp+380h+var_350] xmm0 +
cmp [esp+380h+var_334] ecx +
jz loc_4162C0  +
test eax eax +
jnz loc_4162C0  +
mov eax [esp+380h+var_340] +
cmp eax 3B9ACA00h +
jz loc_416283  +
test eax eax +
jz loc_416283  +
shl eax 2 +
push eax  +
sub esp 8 +
movsd [esp+38Ch+var_38C] xmm0 +
call sub_429D15  +
fstp  [esp+38Ch+var_350] +
movsd xmm0 [esp+38Ch+var_350] +
add esp 0Ch +
movsd [esp+380h+var_350] xmm0 +
mov esi [esp+380h+var_348] +
mov edi [esp+380h+var_344] +
mov ebx [esp+380h+var_32C] +
test bl bl +
jnz loc_4162A0  +
lea ecx [esp+380h+var_330] +
call sub_418F10  +
mov ebx [esp+380h+var_32C] +
cmp byte ptr [esp+380h+var_324] 0 +
jnz loc_4162B0  +
lea ecx [esp+380h+var_328] +
call sub_418F10  +
mov eax [esp+380h+var_330] +
test eax eax +
jnz loc_4162D5  +
cmp [esp+380h+var_328] eax +
jz loc_4162DC  +
jmp loc_4162DF  +
mov esi [esp+380h+var_348] +
xorps xmm0 xmm0 +
movsd [esp+380h+var_350] xmm0 +
mov dword ptr [esi] 2 +
jmp loc_416287  +
cmp [esp+380h+var_328] 0 +
jz loc_4162DF  +
or dword ptr [esi] 1 +
mov ecx [esp+380h+var_338] +
movsd xmm0 [esp+380h+var_350] +
movsd qword ptr [ecx] xmm0 +
mov ecx [esp+380h+var_4] +
mov [edi] eax +
mov eax edi +
mov [edi+4] ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFC0h +
sub esp 374h +
mov eax dword_458018 +
xor eax esp +
mov [esp+374h+var_4] eax +
mov edx [ebp+arg_1C] +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_18] +
push esi  +
push edi  +
mov [esp+380h+var_334] eax +
mov eax [ebp+arg_14] +
mov [esp+380h+var_340] edx +
lea edx [esp+380h+var_344] +
push edx  +
push eax  +
lea eax [ebp+arg_C] +
mov [esp+388h+var_344] 3B9ACA00h +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esp+390h+var_320] +
push eax  +
push ecx  +
call loc_4171E0  +
add esp 18h +
mov [esp+380h+var_33C] eax +
cmp byte ptr [esp+380h+var_320] 0 +
jz loc_41640D  +
call sub_424F08  +
mov edi eax +
lea eax [esp+380h+var_324] +
push eax  +
lea eax [esp+384h+var_320] +
push eax  +
mov esi [edi] +
mov dword ptr [edi] 0 +
call sub_428CBA  +
mov ecx [edi] +
add esp 8 +
mov eax [esp+380h+var_33C] +
mov [esp+380h+var_338] ecx +
mov [edi] esi +
fstp  [esp+380h+var_330] +
test eax eax +
jz loc_4163CA  +
movsd xmm0 ds:qword_453B38 +
movd xmm1 eax +
cvtdq2pd xmm1 xmm1 +
call sub_43EEE0  +
mulsd xmm0 [esp+380h+var_330] +
mov ecx [esp+380h+var_338] +
jmp loc_4163D0  +
movsd xmm0 [esp+380h+var_330] +
mov esi [esp+380h+var_340] +
lea eax [esp+380h+var_320] +
movsd qword ptr [esi] xmm0 +
cmp [esp+380h+var_324] eax +
jz loc_416411  +
test ecx ecx +
jnz loc_416411  +
mov eax [esp+380h+var_344] +
cmp eax 3B9ACA00h +
jz loc_41641E  +
test eax eax +
jz loc_41641E  +
shl eax 2 +
push eax  +
sub esp 8 +
movsd [esp+38Ch+var_38C] xmm0 +
call sub_429D15  +
fstp  qword ptr [esi] +
add esp 0Ch +
jmp loc_41641E  +
mov esi [esp+380h+var_340] +
xorps xmm0 xmm0 +
mov dword ptr [ebx] 2 +
movsd qword ptr [esi] xmm0 +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_41642C  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_41643A  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_416448  +
cmp [ebp+arg_C] eax +
jz loc_41644E  +
jmp loc_416451  +
cmp [ebp+arg_C] 0 +
jz loc_416451  +
or dword ptr [ebx] 1 +
mov edx [esp+380h+var_334] +
mov ecx [ebp+arg_8] +
pop edi  +
pop esi  +
mov [edx+4] ecx +
mov ecx [esp+378h+var_4] +
pop ebx  +
mov [edx] eax +
xor ecx esp +
mov eax edx +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
sub esp 33Ch +
mov eax dword_458018 +
xor eax esp +
mov [esp+33Ch+var_4] eax +
mov edx [ebp+arg_1C] +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_18] +
push esi  +
push edi  +
mov [esp+348h+var_328] eax +
mov eax [ebp+arg_14] +
mov [esp+348h+var_334] edx +
lea edx [esp+348h+var_338] +
push edx  +
push eax  +
lea eax [ebp+arg_C] +
mov [esp+350h+var_338] 3B9ACA00h +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esp+358h+var_320] +
push eax  +
push ecx  +
call loc_4171E0  +
add esp 18h +
mov [esp+348h+var_330] eax +
cmp byte ptr [esp+348h+var_320] 0 +
jz loc_416581  +
call sub_424F08  +
mov edi eax +
lea eax [esp+348h+var_324] +
push eax  +
lea eax [esp+34Ch+var_320] +
push eax  +
mov esi [edi] +
mov dword ptr [edi] 0 +
call sub_428CD1  +
mov ecx [edi] +
add esp 8 +
mov eax [esp+348h+var_330] +
mov [esp+348h+var_32C] ecx +
mov [edi] esi +
fstp  [esp+348h+var_33C] +
test eax eax +
jz loc_416540  +
movsd xmm0 ds:qword_453B38 +
movd xmm1 eax +
cvtdq2ps xmm1 xmm1 +
cvtps2pd xmm1 xmm1 +
call sub_43EEE0  +
mov ecx [esp+348h+var_32C] +
cvtsd2ss xmm0 xmm0 +
mulss xmm0 [esp+348h+var_33C] +
jmp loc_416546  +
movss xmm0 [esp+348h+var_33C] +
mov esi [esp+348h+var_334] +
lea eax [esp+348h+var_320] +
movss dword ptr [esi] xmm0 +
cmp [esp+348h+var_324] eax +
jz loc_416585  +
test ecx ecx +
jnz loc_416585  +
mov eax [esp+348h+var_338] +
cmp eax 3B9ACA00h +
jz loc_416591  +
test eax eax +
jz loc_416591  +
shl eax 2 +
push eax  +
push ecx  +
movss [esp+350h+var_350] xmm0 +
call sub_415870  +
fstp  dword ptr [esi] +
add esp 8 +
jmp loc_416591  +
mov esi [esp+348h+var_334] +
mov dword ptr [ebx] 2 +
mov dword ptr [esi] 0 +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_41659F  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_4165AD  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_4165BB  +
cmp [ebp+arg_C] eax +
jz loc_4165C1  +
jmp loc_4165C4  +
cmp [ebp+arg_C] 0 +
jz loc_4165C4  +
or dword ptr [ebx] 1 +
mov edx [esp+348h+var_328] +
mov ecx [ebp+arg_8] +
pop edi  +
pop esi  +
mov [edx+4] ecx +
mov ecx [esp+340h+var_4] +
pop ebx  +
mov [edx] eax +
xor ecx esp +
mov eax edx +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_441018  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_14] +
mov [ebp+var_48] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_44] eax +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_34] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_38] +
mov [ebp+var_4] 0 +
push eax  +
push dword ptr [ebx+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+var_3C]  +
call loc_417CF0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov edi [ebp+var_34] +
mov ebx eax +
test edi edi +
jz loc_4166AB  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_4166AB  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
cmp byte ptr [ebp+var_30] 0 +
jnz loc_4166CC  +
mov ebx [ebp+var_40] +
mov eax [ebp+var_44] +
mov dword ptr [ebx] 2 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
jmp loc_416705  +
lea eax [ebp+var_34] +
push eax  +
push ebx  +
lea eax [ebp+var_3C] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_41AE60  +
mov ecx [ebp+var_44] +
add esp 10h +
mov [ecx] eax +
lea eax [ebp+var_30] +
mov [ecx+4] edx +
cmp [ebp+var_3C] eax +
jz loc_4166F7  +
cmp [ebp+var_34] 0 +
jz loc_416702  +
mov ebx [ebp+var_40] +
mov dword ptr [ebx] 2 +
jmp loc_416705  +
mov ebx [ebp+var_40] +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_416713  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_416721  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_41672F  +
cmp [ebp+arg_C] eax +
jz loc_416735  +
jmp loc_416738  +
cmp [ebp+arg_C] 0 +
jz loc_416738  +
or dword ptr [ebx] 1 +
mov edx [ebp+var_48] +
mov ecx [ebp+arg_8] +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_441018  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_14] +
mov [ebp+var_48] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_44] eax +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_34] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_38] +
mov [ebp+var_4] 0 +
push eax  +
push dword ptr [ebx+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+var_3C]  +
call loc_417CF0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov edi [ebp+var_34] +
mov ebx eax +
test edi edi +
jz loc_41682B  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41682B  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
cmp byte ptr [ebp+var_30] 0 +
jnz loc_41684C  +
mov ebx [ebp+var_40] +
mov eax [ebp+var_44] +
mov dword ptr [ebx] 2 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
jmp loc_416885  +
lea eax [ebp+var_34] +
push eax  +
push ebx  +
lea eax [ebp+var_3C] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_41AB7A  +
mov ecx [ebp+var_44] +
add esp 10h +
mov [ecx] eax +
lea eax [ebp+var_30] +
mov [ecx+4] edx +
cmp [ebp+var_3C] eax +
jz loc_416877  +
cmp [ebp+var_34] 0 +
jz loc_416882  +
mov ebx [ebp+var_40] +
mov dword ptr [ebx] 2 +
jmp loc_416885  +
mov ebx [ebp+var_40] +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_416893  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_4168A1  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_4168AF  +
cmp [ebp+arg_C] eax +
jz loc_4168B5  +
jmp loc_4168B8  +
cmp [ebp+arg_C] 0 +
jz loc_4168B8  +
or dword ptr [ebx] 1 +
mov edx [ebp+var_48] +
mov ecx [ebp+arg_8] +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_441018  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_14] +
mov [ebp+var_48] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_44] eax +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_34] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_38] +
mov [ebp+var_4] 0 +
push eax  +
push dword ptr [ebx+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+var_3C]  +
call loc_417CF0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov edi [ebp+var_34] +
mov ebx eax +
test edi edi +
jz loc_4169AB  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_4169AB  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
cmp byte ptr [ebp+var_30] 0 +
jnz loc_4169C5  +
mov ebx [ebp+var_40] +
mov ecx [ebp+var_44] +
mov dword ptr [ebx] 2 +
mov dword ptr [ecx] 0 +
jmp loc_4169FB  +
lea eax [ebp+var_34] +
push eax  +
push ebx  +
lea eax [ebp+var_3C] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_41ACED  +
mov ecx [ebp+var_44] +
add esp 10h +
mov [ecx] eax +
lea eax [ebp+var_30] +
cmp [ebp+var_3C] eax +
jz loc_4169ED  +
cmp [ebp+var_34] 0 +
jz loc_4169F8  +
mov ebx [ebp+var_40] +
mov dword ptr [ebx] 2 +
jmp loc_4169FB  +
mov ebx [ebp+var_40] +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_416A09  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_416A17  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_416A25  +
cmp [ebp+arg_C] eax +
jz loc_416A2B  +
jmp loc_416A2E  +
cmp [ebp+arg_C] 0 +
jz loc_416A2E  +
or dword ptr [ebx] 1 +
mov edx [ebp+var_48] +
mov ecx [ebp+arg_8] +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_441018  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_14] +
mov [ebp+var_48] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_44] eax +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_34] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_38] +
mov [ebp+var_4] 0 +
push eax  +
push dword ptr [ebx+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+var_3C]  +
call loc_417CF0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov edi [ebp+var_34] +
mov ebx eax +
test edi edi +
jz loc_416B1B  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_416B1B  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
cmp byte ptr [ebp+var_30] 0 +
jnz loc_416B35  +
mov ebx [ebp+var_40] +
mov ecx [ebp+var_44] +
mov dword ptr [ebx] 2 +
mov dword ptr [ecx] 0 +
jmp loc_416B6B  +
lea eax [ebp+var_34] +
push eax  +
push ebx  +
lea eax [ebp+var_3C] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_41AC48  +
mov ecx [ebp+var_44] +
add esp 10h +
mov [ecx] eax +
lea eax [ebp+var_30] +
cmp [ebp+var_3C] eax +
jz loc_416B5D  +
cmp [ebp+var_34] 0 +
jz loc_416B68  +
mov ebx [ebp+var_40] +
mov dword ptr [ebx] 2 +
jmp loc_416B6B  +
mov ebx [ebp+var_40] +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_416B79  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_416B87  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_416B95  +
cmp [ebp+arg_C] eax +
jz loc_416B9B  +
jmp loc_416B9E  +
cmp [ebp+arg_C] 0 +
jz loc_416B9E  +
or dword ptr [ebx] 1 +
mov edx [ebp+var_48] +
mov ecx [ebp+arg_8] +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_441048  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4C] ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_14] +
mov [ebp+var_58] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_50] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_54] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_38] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_34] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_3C] eax +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_44] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_48] +
mov [ebp+var_4] 0 +
push eax  +
push dword ptr [ebx+14h]  +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+var_4C]  +
call loc_417CF0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov edi [ebp+var_44] +
mov ebx eax +
test edi edi +
jz loc_416CA3  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_416CA3  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
cmp byte ptr [ebp+var_30] 0 +
jnz loc_416CB6  +
mov ebx [ebp+var_50] +
xor esi esi +
mov dword ptr [ebx] 2 +
jmp loc_416CE9  +
lea eax [ebp+var_44] +
push eax  +
push ebx  +
lea eax [ebp+var_4C] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_41ACED  +
mov esi eax +
add esp 10h +
lea eax [ebp+var_30] +
cmp [ebp+var_4C] eax +
jz loc_416CDB  +
cmp [ebp+var_44] 0 +
jz loc_416CE6  +
mov ebx [ebp+var_50] +
mov dword ptr [ebx] 2 +
jmp loc_416CE9  +
mov ebx [ebp+var_50] +
cmp byte ptr [ebp+var_3C] 0 +
jnz loc_416CF7  +
lea ecx [ebp+var_40] +
call sub_418F10  +
cmp byte ptr [ebp+var_34] 0 +
jnz loc_416D05  +
lea ecx [ebp+var_38] +
call sub_418F10  +
mov eax [ebp+var_40] +
test eax eax +
jnz loc_416D13  +
cmp [ebp+var_38] eax +
jz loc_416D19  +
jmp loc_416D1C  +
cmp [ebp+var_38] 0 +
jz loc_416D1C  +
or dword ptr [ebx] 1 +
mov ecx [ebp+var_54] +
mov [ecx] esi +
mov ecx [ebp+var_58] +
mov [ecx] eax +
mov eax [ebp+var_3C] +
mov [ecx+4] eax +
mov eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_441018  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_14] +
mov [ebp+var_48] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_44] eax +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_34] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_38] +
mov [ebp+var_4] 0 +
push eax  +
push dword ptr [ebx+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+var_3C]  +
call loc_417CF0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov edi [ebp+var_34] +
mov ecx eax +
mov [ebp+var_3C] ecx +
test edi edi +
jz loc_416E11  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_416E0E  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_3C] +
mov al byte ptr [ebp+var_30] +
test al al +
jnz loc_416E2B  +
mov ebx [ebp+var_40] +
xor ecx ecx +
mov eax [ebp+var_44] +
mov dword ptr [ebx] 2 +
mov [eax] cx +
jmp loc_416E85  +
cmp al 2Dh +
lea edx [ebp+var_30] +
lea eax [ebp+var_34] +
push eax  +
push ecx  +
lea eax [ebp+var_3C] +
setz bl  +
lea esi [ebp+var_30+1] +
cmovnz esi edx +
push eax  +
push esi  +
call sub_41ACED  +
mov ecx [ebp+var_44] +
mov edx eax +
add esp 10h +
movzx eax dx +
mov [ecx] ax +
cmp [ebp+var_3C] esi +
jz loc_416E74  +
cmp [ebp+var_34] 0 +
jnz loc_416E74  +
cmp edx 0FFFFh +
ja loc_416E74  +
test bl bl +
mov ebx [ebp+var_40] +
jz loc_416E85  +
neg eax  +
jmp loc_416E82  +
mov ebx [ebp+var_40] +
mov eax 0FFFFh +
mov dword ptr [ebx] 2 +
mov [ecx] ax +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_416E93  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_416EA1  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_416EAF  +
cmp [ebp+arg_C] eax +
jz loc_416EB5  +
jmp loc_416EB8  +
cmp [ebp+arg_C] 0 +
jz loc_416EB8  +
or dword ptr [ebx] 1 +
mov edx [ebp+var_48] +
mov ecx [ebp+arg_8] +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_441098  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_50] ecx +
mov ecx [ebp+arg_14] +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_1C] +
mov [ebp+var_5C] eax +
mov edi [ecx+30h] +
mov eax [ebp+arg_18] +
test dword ptr [ecx+14h] 4000h +
mov [ebp+var_58] eax +
mov edi [edi+4] +
mov [ebp+var_34] ecx +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
jz loc_4170C4  +
mov [ebp+var_50] edi +
call ds:off_442218  +
mov ecx edi +
call esi  +
lea eax [ebp+var_54] +
mov [ebp+var_4] 0 +
push eax  +
call sub_40C660  +
mov edi [ebp+var_50] +
add esp 4 +
mov [ebp+var_34] eax +
test edi edi +
jz loc_416FA0  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_416FA0  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
xor eax eax +
mov [ebp+var_38] 7 +
mov [ebp+var_3C] 1 +
mov [ebp+var_4C] eax +
mov [ebp+var_4] 1 +
lea eax [ebp+var_74] +
mov edi [ebp+var_34] +
push eax  +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov byte ptr [ebp+var_4] 2 +
lea eax [ebp+var_74] +
cmp [ebp+var_60] 8 +
lea ecx [ebp+var_4C] +
push [ebp+var_64]  +
cmovnb eax [ebp+var_74] +
push eax  +
call loc_40BBF0  +
lea ecx [ebp+var_74] +
mov byte ptr [ebp+var_4] 1 +
call loc_4029B0  +
push 0  +
lea ecx [ebp+var_4C] +
call loc_412730  +
lea eax [ebp+var_74] +
push eax  +
mov eax [edi] +
mov esi [eax+1Ch] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebp+var_74] +
cmp [ebp+var_60] 8 +
lea ecx [ebp+var_4C] +
push [ebp+var_64]  +
cmovnb eax [ebp+var_74] +
push eax  +
call loc_40BBF0  +
lea ecx [ebp+var_74] +
mov byte ptr [ebp+var_4] 1 +
call loc_4029B0  +
cmp [ebp+var_38] 8 +
lea eax [ebp+var_4C] +
cmovnb eax [ebp+var_4C] +
push eax  +
push 2  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call loc_4190E0  +
add esp 10h +
sub eax 0 +
jz loc_41707A  +
sub eax 1 +
jz loc_417075  +
mov eax [ebp+var_58] +
mov byte ptr [ebx] 0 +
mov dword ptr [eax] 2 +
jmp loc_41707D  +
mov byte ptr [ebx] 1 +
jmp loc_41707D  +
mov byte ptr [ebx] 0 +
lea ecx [ebp+var_4C] +
mov [ebp+var_4] 0FFFFFFFFh +
call loc_4029B0  +
mov ebx [ebp+var_58] +
cmp byte ptr [ebp+arg_8] 0 +
jnz loc_41709D  +
lea ecx [ebp+arg_4] +
call sub_418F10  +
cmp [ebp+arg_10] 0 +
jnz loc_4170AB  +
lea ecx [ebp+arg_C] +
call sub_418F10  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_4171A9  +
cmp [ebp+arg_C] ecx +
jz loc_4171AF  +
jmp loc_4171B2  +
mov [ebp+var_78] edi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov [ebp+var_4] 4 +
lea eax [ebp+var_7C] +
push eax  +
mov eax [ebp+var_34] +
push dword ptr [eax+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+var_50]  +
call loc_417CF0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov edi [ebp+var_78] +
mov [ebp+var_34] eax +
test edi edi +
jz loc_417136  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_417133  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov eax [ebp+var_34] +
cmp byte ptr [ebp+var_30] 0 +
jnz loc_41714D  +
mov byte ptr [ebx] 0 +
mov ebx [ebp+var_58] +
mov dword ptr [ebx] 2 +
jmp loc_41708F  +
lea ecx [ebp+var_34] +
push ecx  +
push eax  +
lea eax [ebp+var_50] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_41AC48  +
mov ecx eax +
add esp 10h +
lea eax [ebp+var_30] +
cmp [ebp+var_50] eax +
jz loc_417198  +
cmp [ebp+var_34] 0 +
jnz loc_417198  +
test ecx ecx +
setnz al  +
mov [ebx] al +
test ecx ecx +
jz loc_41708C  +
mov ebx [ebp+var_58] +
cmp ecx 1 +
jz loc_41708F  +
mov dword ptr [ebx] 2 +
jmp loc_41708F  +
mov byte ptr [ebx] 1 +
mov ebx [ebp+var_58] +
mov dword ptr [ebx] 2 +
jmp loc_41708F  +
cmp [ebp+arg_C] 0 +
jz loc_4171B2  +
or dword ptr [ebx] 1 +
mov eax [ebp+var_5C] +
mov [eax] ecx +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4410E6  +
mov eax large fs:0 +
push eax  +
sub esp 94h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ecx [ebp+18h] +
mov edi [ebp+0Ch] +
mov edx [ebp+14h] +
mov ebx [ebp+1Ch] +
mov eax [ecx+14h] +
mov esi [ebp+10h] +
and eax 3000h +
mov [ebp-8Ch] edi +
mov [ebp-88h] edx +
mov [ebp-78h] ecx +
mov [ebp-9Ch] ebx +
cmp eax 3000h +
jnz loc_417256  +
push ebx  +
push ecx  +
push edx  +
push esi  +
push edi  +
push dword ptr [ebp+8]  +
call loc_418300  +
add esp 18h +
jmp loc_417CCE  +
mov eax [ecx+30h] +
mov ebx [eax+4] +
mov [ebp-90h] ebx +
mov eax [ebx] +
mov edi [eax+4] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
lea eax [ebp-94h] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_40C660  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add esp 4 +
mov ebx [ebp-90h] +
mov [ebp-84h] eax +
test ebx ebx +
jz loc_4172C9  +
mov edx [ebx] +
mov edi [edx+8] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_4172C9  +
mov ecx [ebx] +
push 1  +
mov edi [ecx] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov ebx [ebp-84h] +
lea eax [ebp-60h] +
push eax  +
mov eax [ebx] +
mov edi [eax+14h] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov eax [ebp-8Ch] +
mov [ebp-68h] eax +
xor al al +
mov [ebp-7Ch] eax +
mov eax [ebp-78h] +
mov dword ptr [ebp-4] 1 +
mov byte ptr [ebp-69h] 0 +
mov eax [eax+30h] +
mov ebx [eax+4] +
mov [ebp-90h] ebx +
mov eax [ebx] +
mov edi [eax+4] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
lea eax [ebp-94h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_40C930  +
mov byte ptr [ebp-4] 1 +
add esp 4 +
mov ebx [ebp-90h] +
mov [ebp-78h] eax +
test ebx ebx +
jz loc_41736A  +
mov edx [ebx] +
mov edi [edx+8] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_41736A  +
mov ecx [ebx] +
push 1  +
mov edi [ecx] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov ebx [ebp-78h] +
lea eax [ebp-30h] +
push eax  +
push offset unk_4538DB  +
push offset a0123456789Ee  +
mov eax [ebx] +
mov edi [eax+2Ch] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
cmp byte ptr [esi+4] 0 +
jnz loc_417399  +
mov ecx esi +
call sub_418F10  +
mov ebx [ebp-88h] +
cmp byte ptr [ebx+4] 0 +
jnz loc_4173AC  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_417429  +
test eax eax +
jnz loc_41742D  +
mov edi [ebp-68h] +
xor eax eax +
mov byte ptr [edi] 30h +
mov [ebp-74h] eax +
xor cl cl +
mov [ebp-70h] eax +
mov edx 300h +
mov eax [ebp-9Ch] +
mov [ebp-78h] edi +
inc edi  +
mov [ebp-61h] cl +
mov ecx 24h +
mov [ebp-68h] edi +
cmp dword ptr [eax] 3B9ACA00h +
lea eax [ebp-60h] +
cmovz ecx edx +
cmp dword ptr [ebp-4Ch] 10h +
mov [ebp-90h] ecx +
cmovnb eax [ebp-60h] +
mov [ebp-80h] eax +
mov al [eax] +
cmp al 7Fh +
jz loc_4176D0  +
test al al +
jle loc_4176D0  +
cmp dword ptr [ebp-50h] 0 +
jnz loc_4174B2  +
mov dword ptr [ebp-98h] 0 +
jmp loc_4174C6  +
test eax eax +
jnz loc_4173B7  +
cmp byte ptr [esi+4] 0 +
jnz loc_41743A  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-1Ah] +
jnz loc_41747F  +
mov eax [ebp-8Ch] +
mov byte ptr [eax] 2Bh +
lea edi [eax+1] +
mov ecx [esi] +
test ecx ecx +
jz loc_41746F  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_41746F  +
xor al al +
mov [esi+4] al +
jmp loc_4173BA  +
***
mov al 1 +
mov dword ptr [esi] 0 +
mov [esi+4] al +
jmp loc_4173BA  +
***
cmp byte ptr [esi+4] 0 +
jnz loc_417490  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-1Ch] +
jnz loc_4173B7  +
mov eax [ebp-8Ch] +
mov ecx esi +
mov byte ptr [eax] 2Dh +
lea edi [eax+1] +
call sub_4182D0  +
jmp loc_4173BA  +
***
mov ecx [ebp-84h] +
call sub_40BDD0  +
movzx eax ax +
mov [ebp-98h] eax +
push 0  +
push 1  +
lea ecx [ebp-48h] +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-34h] 0Fh +
mov byte ptr [ebp-48h] 0 +
call loc_415D00  +
mov byte ptr [ebp-4] 3 +
xor edi edi +
mov al [esi+4] +
test al al +
jnz loc_4174FB  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_417508  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_417582  +
test eax eax +
jnz loc_417586  +
mov edx [ebp-48h] +
test edi edi +
jz loc_417530  +
cmp dword ptr [ebp-34h] 10h +
lea eax [ebp-48h] +
cmovnb eax edx +
cmp byte ptr [eax+edi] 0 +
jle loc_417693  +
inc edi  +
nop   +
mov eax [ebp-80h] +
test edi edi +
jz loc_417697  +
mov cl [eax] +
cmp cl 7Fh +
jz loc_417697  +
sub edi 1 +
jz loc_41755E  +
cmp dword ptr [ebp-34h] 10h +
lea eax [ebp-48h] +
cmovnb eax edx +
cmp cl [eax+edi] +
jnz loc_417693  +
test edi edi +
jnz loc_417574  +
cmp dword ptr [ebp-34h] 10h +
lea eax [ebp-48h] +
cmovnb eax edx +
cmp cl [eax] +
jl loc_417693  +
mov eax [ebp-80h] +
inc eax  +
cmp byte ptr [eax] 0 +
jle loc_417530  +
mov [ebp-80h] eax +
jmp loc_417533  +
***
test eax eax +
jnz loc_417513  +
cmp byte ptr [esi+4] 0 +
jnz loc_417593  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
lea eax [ebp-30h] +
or ah 38h +
inc ebp  +
add [eax-76BDBEFFh] cl +
dec ebp  +
cwde   +
mov [ebp-74h] edx +
mov ecx [ebp-34h] +
lea eax [ebp-48h] +
mov edx [ebp-48h] +
cmp ecx 10h +
cmovnb eax edx +
cmp byte ptr [eax+edi] 7Fh +
jz loc_417662  +
cmp ecx 10h +
lea eax [ebp-48h] +
cmovnb eax edx +
inc byte ptr [eax+edi]  +
jmp loc_417662  +
cmp dword ptr [ebp-34h] 10h +
lea eax [ebp-48h] +
cmovnb eax [ebp-48h] +
cmp byte ptr [eax+edi] 0 +
jz loc_417513  +
cmp word ptr [ebp-98h] 0 +
jz loc_417513  +
cmp byte ptr [esi+4] 0 +
jnz loc_417646  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-98h] +
jnz loc_417513  +
push 0  +
lea ecx [ebp-48h] +
call loc_4120F0  +
inc edi  +
mov ecx [esi] +
test ecx ecx +
jz loc_417682  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_417682  +
mov byte ptr [esi+4] 0 +
xor al al +
jmp loc_4174F0  +
***
mov dword ptr [esi] 0 +
mov al 1 +
mov byte ptr [esi+4] 1 +
jmp loc_4174F0  +
***
mov byte ptr [ebp-69h] 1 +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-34h] +
cmp eax 10h +
jb loc_4176F9  +
lea ecx [eax+1] +
mov eax edx +
cmp ecx 1000h +
jb loc_4176C4  +
mov edx [edx-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_417CEA  +
push ecx  +
push edx  +
call sub_41B8B8  +
add esp 8 +
jmp loc_4176F9  +
mov al [esi+4] +
test al al +
jnz loc_4176DE  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_4176EB  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_41772B  +
test eax eax +
jnz loc_41772F  +
mov [ebp-68h] edi +
cmp byte ptr [esi+4] 0 +
jnz loc_417706  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_417713  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_4177C1  +
test eax eax +
jz loc_417856  +
jmp loc_4177C9  +
test eax eax +
jnz loc_4176F6  +
cmp byte ptr [esi+4] 0 +
jnz loc_41773C  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
lea eax [ebp-30h] +
cmp [eax] cx +
jz loc_417752  +
add eax 2 +
lea edx [ebp-14h] +
cmp eax edx +
jnz loc_417743  +
lea ecx [ebp-30h] +
sub eax ecx +
sar eax 1 +
cmp eax 0Ah +
jnb loc_4176F6  +
mov edx [ebp-74h] +
cmp [ebp-90h] edx +
jg loc_417777  +
inc dword ptr [ebp-70h]  +
test eax eax +
jz loc_41778C  +
mov al 1 +
mov [ebp-7Ch] eax +
jmp loc_41778C  +
test eax eax +
jnz loc_41777F  +
test edx edx +
jz loc_41778C  +
mov al byte ptr ds:a0123456789Ee[eax] +
mov [edi] al +
inc edi  +
inc edx  +
mov [ebp-74h] edx +
mov ecx [esi] +
mov byte ptr [ebp-61h] 1 +
test ecx ecx +
jz loc_4177B0  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4177B0  +
mov byte ptr [esi+4] 0 +
xor al al +
jmp loc_4176D3  +
***
mov dword ptr [esi] 0 +
mov al 1 +
mov byte ptr [esi+4] 1 +
jmp loc_4176D3  +
***
test eax eax +
jnz loc_417856  +
cmp byte ptr [esi+4] 0 +
jnz loc_4177D6  +
mov ecx esi +
call sub_418F10  +
mov eax [ebp-84h] +
movzx ebx word ptr [esi+6] +
mov edi [eax] +
cmp edi offset off_4437A4 +
jnz loc_4177F0  +
movzx eax word ptr [eax+0Ch] +
jmp loc_417806  +
mov edi [edi+0Ch] +
mov ecx edi +
call ds:off_442218  +
mov ecx [ebp-84h] +
call edi  +
movzx eax ax +
cmp bx ax +
jnz loc_417850  +
call sub_423682  +
mov edi [ebp-68h] +
mov eax [eax] +
mov al [eax] +
mov [edi] al +
inc edi  +
mov ecx [esi] +
mov [ebp-68h] edi +
test ecx ecx +
jz loc_41783E  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_41783E  +
mov ebx [ebp-88h] +
mov byte ptr [esi+4] 0 +
jmp loc_417859  +
mov ebx [ebp-88h] +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_417859  +
mov ebx [ebp-88h] +
mov edi [ebp-68h] +
mov eax [ebp-9Ch] +
cmp dword ptr [eax] 3B9ACA00h +
jz loc_4178B0  +
cmp dword ptr [ebp-74h] 0 +
jnz loc_4178B0  +
mov edi [ebp-70h] +
cmp byte ptr [esi+4] 0 +
jnz loc_41787D  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_41788A  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_417918  +
test eax eax +
jnz loc_417920  +
mov [ebp-70h] edi +
test edi edi +
mov edi [ebp-68h] +
jns loc_4178B0  +
mov byte ptr [edi] 30h +
inc edi  +
inc dword ptr [ebp-70h]  +
nop   +
cmp byte ptr [esi+4] 0 +
jnz loc_4178BD  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_4178CA  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_41796D  +
test eax eax +
jnz loc_417975  +
cmp byte ptr [ebp-7Ch] 0 +
mov [ebp-68h] edi +
jz loc_417A1C  +
dec edi  +
cmp edi [ebp-78h] +
jz loc_417A16  +
call sub_423682  +
mov cl [edi] +
mov eax [eax] +
cmp cl [eax] +
jz loc_41790D  +
cmp cl 39h +
jnz loc_417A0D  +
mov byte ptr [edi] 30h +
dec edi  +
cmp edi [ebp-78h] +
jnz loc_4178F4  +
jmp loc_417A16  +
test eax eax +
jnz loc_41789D  +
cmp byte ptr [esi+4] 0 +
jnz loc_41792D  +
mov ecx esi +
call sub_418F10  +
mov ax [esi+6] +
cmp ax [ebp-30h] +
jnz loc_41789D  +
mov ecx [esi] +
dec edi  +
mov byte ptr [ebp-61h] 1 +
test ecx ecx +
jz loc_41795E  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_41795E  +
mov byte ptr [esi+4] 0 +
jmp loc_417870  +
***
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_417870  +
***
test eax eax +
jnz loc_4178DD  +
cmp byte ptr [esi+4] 0 +
jnz loc_417982  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
lea eax [ebp-30h] +
cmp [eax] cx +
jz loc_41799F  +
add eax 2 +
lea edx [ebp-14h] +
cmp eax edx +
jnz loc_417990  +
lea ecx [ebp-30h] +
sub eax ecx +
sar eax 1 +
cmp eax 0Ah +
jnb loc_4178DD  +
mov ecx [ebp-74h] +
cmp ecx [ebp-90h] +
jge loc_4179C9  +
mov al byte ptr ds:a0123456789Ee[eax] +
mov [edi] al +
inc edi  +
inc ecx  +
mov [ebp-74h] ecx +
jmp loc_4179DC  +
mov ecx [ebp-7Ch] +
test eax eax +
movzx ecx cl +
mov eax 1 +
cmovnz ecx eax +
mov [ebp-7Ch] ecx +
mov ecx [esi] +
mov byte ptr [ebp-61h] 1 +
test ecx ecx +
jz loc_4179FE  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4179FE  +
mov byte ptr [esi+4] 0 +
jmp loc_4178B0  +
***
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_4178B0  +
***
inc cl  +
mov [edi] cl +
cmp edi [ebp-78h] +
jnz loc_417A1C  +
inc dword ptr [ebp-70h]  +
mov byte ptr [edi] 31h +
mov al [ebp-61h] +
test al al +
jz loc_417A4B  +
cmp byte ptr [esi+4] 0 +
jnz loc_417A30  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_417A3D  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_417A64  +
test eax eax +
jnz loc_417A68  +
mov al [ebp-61h] +
cmp byte ptr [ebp-69h] 0 +
jnz loc_417A59  +
test al al +
jnz loc_417C95  +
mov eax [ebp-8Ch] +
jmp loc_417C98  +
test eax eax +
jnz loc_417A48  +
cmp byte ptr [esi+4] 0 +
jnz loc_417A75  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-16h] +
jz loc_417A96  +
cmp byte ptr [esi+4] 0 +
jnz loc_417A90  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-18h] +
jnz loc_417A48  +
mov eax [ebp-68h] +
mov byte ptr [eax] 65h +
inc eax  +
mov ecx [esi] +
mov [ebp-68h] eax +
test ecx ecx +
jz loc_417AB9  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_417AB9  +
xor al al +
jmp loc_417AC1  +
mov dword ptr [esi] 0 +
mov al 1 +
xor cl cl +
mov [esi+4] al +
xor edi edi +
mov [ebp-61h] cl +
test al al +
jnz loc_417AD6  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_417AE3  +
mov ecx ebx +
call sub_418F10  +
mov eax [ebx] +
cmp [esi] edi +
jnz loc_417AF3  +
test eax eax +
jz loc_417B85  +
jmp loc_417AFB  +
test eax eax +
jnz loc_417B85  +
mov al [esi+4] +
test al al +
jnz loc_417B0C  +
mov ecx esi +
call sub_418F10  +
mov al [esi+4] +
movzx ecx word ptr [esi+6] +
cmp cx [ebp-1Ah] +
jnz loc_417B45  +
mov eax [ebp-68h] +
mov byte ptr [eax] 2Bh +
inc eax  +
mov ecx [esi] +
mov [ebp-68h] eax +
test ecx ecx +
jz loc_417B3C  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_417B3C  +
xor al al +
mov [esi+4] al +
jmp loc_417B85  +
mov al 1 +
mov [esi] edi +
mov [esi+4] al +
jmp loc_417B85  +
test al al +
jnz loc_417B54  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
cmp cx [ebp-1Ch] +
jnz loc_417B85  +
mov eax [ebp-68h] +
mov byte ptr [eax] 2Dh +
inc eax  +
mov [ebp-68h] eax +
mov ecx [esi] +
test ecx ecx +
jz loc_417B7F  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_417B7F  +
mov byte ptr [esi+4] 0 +
jmp loc_417B85  +
mov byte ptr [esi+4] 1 +
mov [esi] edi +
cmp byte ptr [esi+4] 0 +
jnz loc_417B92  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_417B9F  +
mov ecx ebx +
call sub_418F10  +
mov eax [ebx] +
cmp [esi] edi +
jnz loc_417BEB  +
test eax eax +
jnz loc_417BEF  +
cmp byte ptr [ebp-61h] 0 +
jz loc_417BC0  +
mov eax [ebp-68h] +
mov byte ptr [eax] 30h +
inc eax  +
mov [ebp-68h] eax +
cmp byte ptr [esi+4] 0 +
jnz loc_417BCD  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_417BDA  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_417C0F  +
test eax eax +
jz loc_417A48  +
jmp loc_417C17  +
test eax eax +
jnz loc_417BA9  +
cmp byte ptr [esi+4] 0 +
jnz loc_417BFC  +
mov ecx esi +
call sub_418F10  +
mov ax [esi+6] +
cmp ax [ebp-30h] +
jnz loc_417BA9  +
mov byte ptr [ebp-61h] 1 +
jmp loc_417B64  +
***
test eax eax +
jnz loc_417A48  +
cmp byte ptr [esi+4] 0 +
jnz loc_417C24  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
lea eax [ebp-30h] +
or ah 38h +
inc ebp  +
add [eax+4D894101h] cl +
cwde   +
inc edi  +
mov ecx [esi] +
mov byte ptr [ebp-61h] 1 +
test ecx ecx +
jz loc_417C86  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_417C86  +
mov byte ptr [esi+4] 0 +
jmp loc_417BC0  +
***
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_417BC0  +
***
mov eax [ebp-68h] +
mov edx [ebp-4Ch] +
mov byte ptr [eax] 0 +
cmp edx 10h +
jb loc_417CCB  +
mov ecx [ebp-60h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_417CC1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_417CEA  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-70h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
int 3  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_441120  +
mov eax large fs:0 +
push eax  +
sub esp 8Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+0Ch] +
mov ebx [ebp+10h] +
mov [ebp-98h] eax +
mov eax [ebp+14h] +
mov [ebp-90h] eax +
mov eax [ebp+1Ch] +
push eax  +
mov [ebp-8Ch] eax +
call sub_40C660  +
mov edi eax +
add esp 4 +
lea eax [ebp-78h] +
mov ecx [edi] +
push eax  +
mov esi [ecx+14h] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp-68h] 0 +
jnz loc_417D75  +
mov dword ptr [ebp-94h] 0 +
jmp loc_417D92  +
mov eax [edi] +
mov esi [eax+10h] +
cmp eax offset off_4437A4 +
jnz loc_4182AD  +
movzx eax word ptr [edi+0Eh] +
movzx eax ax +
mov [ebp-94h] eax +
push dword ptr [ebp-8Ch]  +
call sub_40C930  +
mov edi eax +
add esp 4 +
lea eax [ebp-48h] +
mov ecx [edi] +
push eax  +
push offset unk_4538CB  +
push offset a0123456789abcd  +
mov esi [ecx+2Ch] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
cmp byte ptr [ebx+4] 0 +
mov esi [ebp-98h] +
mov [ebp-84h] esi +
jnz loc_417DDA  +
mov ecx ebx +
call sub_418F10  +
mov edi [ebp-90h] +
cmp byte ptr [edi+4] 0 +
jnz loc_417DED  +
mov ecx edi +
call sub_418F10  +
cmp dword ptr [ebx] 0 +
mov eax [edi] +
jnz loc_417DFE  +
test eax eax +
jz loc_417E9C  +
jmp loc_417E06  +
test eax eax +
jnz loc_417E9C  +
mov al [ebx+4] +
test al al +
jnz loc_417E17  +
mov ecx ebx +
call sub_418F10  +
mov al [ebx+4] +
movzx ecx word ptr [ebx+6] +
cmp cx [ebp-1Ah] +
jnz loc_417E56  +
mov byte ptr [esi] 2Bh +
lea eax [esi+1] +
mov ecx [ebx] +
mov [ebp-84h] eax +
test ecx ecx +
jz loc_417E49  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_417E49  +
xor al al +
mov [ebx+4] al +
jmp loc_417E9C  +
mov al 1 +
mov dword ptr [ebx] 0 +
mov [ebx+4] al +
jmp loc_417E9C  +
test al al +
jnz loc_417E65  +
mov ecx ebx +
call sub_418F10  +
movzx ecx word ptr [ebx+6] +
cmp cx [ebp-1Ch] +
jnz loc_417E9C  +
mov byte ptr [esi] 2Dh +
lea eax [esi+1] +
mov ecx [ebx] +
mov [ebp-84h] eax +
test ecx ecx +
jz loc_417E92  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_417E92  +
mov byte ptr [ebx+4] 0 +
jmp loc_417E9C  +
mov dword ptr [ebx] 0 +
mov byte ptr [ebx+4] 1 +
mov esi [ebp+18h] +
and esi 0E00h +
cmp esi 400h +
jnz loc_417EB4  +
mov esi 8 +
jmp loc_417ECA  +
cmp esi 800h +
jnz loc_417EC3  +
mov esi 10h +
jmp loc_417ECA  +
neg esi  +
sbb esi esi +
and esi 0Ah +
xor al al +
mov [ebp-88h] esi +
mov [ebp-79h] al +
mov [ebp-80h] al +
mov [ebp-7Ah] al +
cmp [ebx+4] al +
jnz loc_417EE7  +
mov ecx ebx +
call sub_418F10  +
cmp byte ptr [edi+4] 0 +
jnz loc_417EF4  +
mov ecx edi +
call sub_418F10  +
cmp dword ptr [ebx] 0 +
mov eax [edi] +
jnz loc_417F2A  +
test eax eax +
jnz loc_417F2E  +
test esi esi +
jz loc_418008  +
cmp esi 0Ah +
jz loc_418008  +
mov ecx 8 +
mov eax 16h +
cmp esi ecx +
cmovz eax ecx +
mov [ebp-8Ch] eax +
jmp loc_418012  +
test eax eax +
jnz loc_417EFF  +
cmp byte ptr [ebx+4] 0 +
jnz loc_417F3B  +
mov ecx ebx +
call sub_418F10  +
movzx eax word ptr [ebx+6] +
cmp ax [ebp-48h] +
jnz loc_417EFF  +
mov ecx [ebx] +
mov al 1 +
mov [ebp-79h] al +
mov [ebp-80h] al +
test ecx ecx +
jz loc_417F66  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_417F66  +
xor al al +
jmp loc_417F6E  +
mov dword ptr [ebx] 0 +
mov al 1 +
mov [ebx+4] al +
test al al +
jnz loc_417F7C  +
mov ecx ebx +
call sub_418F10  +
cmp byte ptr [edi+4] 0 +
jnz loc_417F89  +
mov ecx edi +
call sub_418F10  +
cmp dword ptr [ebx] 0 +
mov eax [edi] +
jnz loc_417FAC  +
test eax eax +
jnz loc_417FB0  +
test esi esi +
jnz loc_417F07  +
mov esi 8 +
mov [ebp-88h] esi +
jmp loc_417F10  +
***
test eax eax +
jnz loc_417F94  +
mov al [ebx+4] +
test al al +
jnz loc_417FC1  +
mov ecx ebx +
call sub_418F10  +
mov al [ebx+4] +
movzx ecx word ptr [ebx+6] +
cmp cx [ebp-16h] +
jz loc_417FE0  +
test al al +
jnz loc_417FDA  +
mov ecx ebx +
call sub_418F10  +
movzx ecx word ptr [ebx+6] +
cmp cx [ebp-18h] +
jnz loc_417F94  +
test esi esi +
jz loc_417FE9  +
cmp esi 10h +
jnz loc_417F94  +
xor al al +
mov esi 10h +
mov ecx ebx +
mov [ebp-88h] esi +
mov [ebp-79h] al +
mov [ebp-80h] al +
call sub_4182D0  +
jmp loc_417F10  +
***
mov dword ptr [ebp-8Ch] 0Ah +
push dword ptr [ebp-80h]  +
lea ecx [ebp-60h] +
mov dword ptr [ebp-50h] 0 +
push 1  +
mov dword ptr [ebp-4Ch] 0Fh +
mov byte ptr [ebp-60h] 0 +
call loc_415D00  +
mov byte ptr [ebp-4] 1 +
xor esi esi +
mov edi [ebp-60h] +
mov al byte ptr ds:a0123456789abcd[eax] +
mov [ecx] al +
jnz loc_41814E  +
cmp al 30h +
jz loc_418166  +
mov eax [ebp-98h] +
add eax 1Fh +
cmp ecx eax +
jnb loc_418166  +
inc ecx  +
mov byte ptr [ebp-7Ah] 1 +
mov [ebp-84h] ecx +
mov ecx [ebp-4Ch] +
lea eax [ebp-60h] +
cmp ecx 10h +
mov byte ptr [ebp-79h] 1 +
cmovnb eax edi +
cmp byte ptr [eax+esi] 7Fh +
jz loc_4181D8  +
cmp ecx 10h +
lea eax [ebp-60h] +
cmovnb eax edi +
inc byte ptr [eax+esi]  +
jmp loc_4181D5  +
inc esi  +
mov edi [ebp-60h] +
mov ecx [ebx] +
test ecx ecx +
jz loc_4181F6  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4181F6  +
mov byte ptr [ebx+4] 0 +
jmp near ptr dword_41803C+4  +
***
mov dword ptr [ebx] 0 +
mov byte ptr [ebx+4] 1 +
jmp near ptr dword_41803C+4  +
***
retn   +
***
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
movzx eax ax +
jmp loc_417D89  +
***
mov ecx [esi] +
test ecx ecx +
jz loc_4182F1  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4182F1  +
xor al al +
mov [esi+4] al +
mov eax esi +
pop esi  +
retn   +
mov al 1 +
mov dword ptr [esi] 0 +
mov [esi+4] al +
mov eax esi +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_441176  +
mov eax large fs:0 +
push eax  +
sub esp 0ACh +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+0Ch] +
mov esi [ebp+10h] +
mov [ebp-0A0h] eax +
mov eax [ebp+14h] +
mov [ebp-9Ch] eax +
mov eax [ebp+1Ch] +
mov [ebp-0B4h] eax +
mov eax [ebp+18h] +
mov eax [eax+30h] +
mov ebx [eax+4] +
mov [ebp-0A4h] ebx +
mov eax [ebx] +
mov edi [eax+4] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
lea eax [ebp-0A8h] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_40C660  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add esp 4 +
mov ebx [ebp-0A4h] +
mov [ebp-94h] eax +
test ebx ebx +
jz loc_4183C2  +
mov edx [ebx] +
mov edi [edx+8] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_4183C2  +
mov ecx [ebx] +
push 1  +
mov edi [ecx] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov ebx [ebp-94h] +
lea eax [ebp-7Ch] +
push eax  +
mov eax [ebx] +
mov edi [eax+14h] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov eax [ebp+18h] +
mov dword ptr [ebp-4] 1 +
mov eax [eax+30h] +
mov ebx [eax+4] +
mov [ebp-0ACh] ebx +
mov eax [ebx] +
mov edi [eax+4] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
lea eax [ebp-0B0h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_40C930  +
mov byte ptr [ebp-4] 1 +
add esp 4 +
mov ebx [ebp-0ACh] +
mov [ebp-0A4h] eax +
test ebx ebx +
jz loc_418454  +
mov edx [ebx] +
mov edi [edx+8] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_418454  +
mov ecx [ebx] +
push 1  +
mov edi [ecx] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
mov ebx [ebp-0A4h] +
lea eax [ebp-4Ch] +
push eax  +
push offset unk_45390D  +
push offset a0123456789ab_0  +
mov eax [ebx] +
mov edi [eax+2Ch] +
mov ecx edi +
call ds:off_442218  +
mov ecx ebx +
call edi  +
cmp byte ptr [esi+4] 0 +
mov edi [ebp-0A0h] +
mov byte ptr [ebp-85h] 0 +
jnz loc_418493  +
mov ecx esi +
call sub_418F10  +
mov ebx [ebp-9Ch] +
cmp byte ptr [ebx+4] 0 +
jnz loc_4184A6  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_4184B7  +
test eax eax +
jz loc_41854D  +
jmp loc_4184BF  +
test eax eax +
jnz loc_41854D  +
mov al [esi+4] +
test al al +
jnz loc_4184D0  +
mov ecx esi +
call sub_418F10  +
mov al [esi+4] +
movzx ecx word ptr [esi+6] +
cmp cx [ebp-1Eh] +
jnz loc_41850B  +
mov eax edi +
mov byte ptr [eax] 2Bh +
lea edi [eax+1] +
mov ecx [esi] +
test ecx ecx +
jz loc_4184FE  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4184FE  +
xor al al +
mov [esi+4] al +
jmp loc_41854D  +
mov al 1 +
mov dword ptr [esi] 0 +
mov [esi+4] al +
jmp loc_41854D  +
test al al +
jnz loc_41851A  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
cmp cx [ebp-20h] +
jnz loc_41854D  +
mov eax edi +
mov byte ptr [eax] 2Dh +
lea edi [eax+1] +
mov ecx [esi] +
test ecx ecx +
jz loc_418543  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418543  +
mov byte ptr [esi+4] 0 +
jmp loc_41854D  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov word ptr [edi] 7830h +
xor eax eax +
add edi 2 +
mov dword ptr [ebp-90h] 0 +
xor cl cl +
mov [ebp-84h] edi +
mov [ebp-7Dh] cl +
mov [ebp-8Ch] eax +
cmp [esi+4] al +
jnz loc_41857E  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_41858B  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_418598  +
test eax eax +
jz loc_4185FE  +
jmp loc_41859C  +
test eax eax +
jnz loc_4185FE  +
cmp byte ptr [esi+4] 0 +
jnz loc_4185A9  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-4Ch] +
jnz loc_4185FE  +
mov ecx [esi] +
test ecx ecx +
jz loc_4185CC  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4185CC  +
xor al al +
jmp loc_4185D4  +
mov dword ptr [esi] 0 +
mov al 1 +
mov [esi+4] al +
test al al +
jnz loc_4185E2  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_4185EF  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_418652  +
test eax eax +
jnz loc_418656  +
mov byte ptr [ebp-7Dh] 1 +
mov ecx [ebp-0B4h] +
mov eax 24h +
mov edx 300h +
cmp dword ptr [ecx] 3B9ACA00h +
cmovz eax edx +
cmp dword ptr [ebp-68h] 10h +
mov [ebp-0A4h] eax +
lea eax [ebp-7Ch] +
cmovnb eax [ebp-7Ch] +
mov [ebp-98h] eax +
mov al [eax] +
cmp al 7Fh +
jz loc_41892B  +
test al al +
jle loc_41892B  +
cmp dword ptr [ebp-6Ch] 0 +
jnz loc_418694  +
mov dword ptr [ebp-0ACh] 0 +
jmp loc_4186C8  +
test eax eax +
jnz loc_4185FA  +
cmp byte ptr [esi+4] 0 +
jnz loc_418663  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-1Ah] +
jz loc_418688  +
cmp byte ptr [esi+4] 0 +
jnz loc_41867E  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-1Ch] +
jnz loc_4185FA  +
mov ecx esi +
call sub_4182D0  +
jmp loc_4185FE  +
***
mov ecx [ebp-94h] +
mov eax [ecx] +
mov edi [eax+10h] +
cmp eax offset off_4437A4 +
jnz loc_4186AC  +
movzx eax word ptr [ecx+0Eh] +
jmp loc_4186BF  +
mov ecx edi +
call ds:off_442218  +
mov ecx [ebp-94h] +
call edi  +
movzx eax ax +
movzx eax ax +
mov [ebp-0ACh] eax +
push 0  +
push 1  +
lea ecx [ebp-64h] +
mov dword ptr [ebp-54h] 0 +
mov dword ptr [ebp-50h] 0Fh +
mov byte ptr [ebp-64h] 0 +
call loc_415D00  +
mov byte ptr [ebp-4] 3 +
xor edi edi +
mov al [esi+4] +
nop   +
test al al +
jnz loc_4186FB  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418708  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_41878B  +
test eax eax +
jnz loc_41878F  +
mov edx [ebp-64h] +
test edi edi +
jz loc_418730  +
cmp dword ptr [ebp-50h] 10h +
lea eax [ebp-64h] +
cmovnb eax edx +
cmp byte ptr [eax+edi] 0 +
jle loc_41889C  +
inc edi  +
nop   +
mov eax [ebp-98h] +
test edi edi +
jz loc_4188A3  +
mov cl [eax] +
cmp cl 7Fh +
jz loc_4188A3  +
sub edi 1 +
jz loc_418761  +
cmp dword ptr [ebp-50h] 10h +
lea eax [ebp-64h] +
cmovnb eax edx +
cmp cl [eax+edi] +
jnz loc_41889C  +
test edi edi +
jnz loc_418777  +
cmp dword ptr [ebp-50h] 10h +
lea eax [ebp-64h] +
cmovnb eax edx +
cmp cl [eax] +
jl loc_41889C  +
mov eax [ebp-98h] +
inc eax  +
cmp byte ptr [eax] 0 +
jle loc_418730  +
mov [ebp-98h] eax +
jmp loc_418736  +
***
test eax eax +
jnz loc_418713  +
cmp byte ptr [esi+4] 0 +
jnz loc_41879C  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
lea eax [ebp-4Ch] +
cmp [eax] cx +
jz loc_4187B2  +
add eax 2 +
lea edx [ebp-14h] +
cmp eax edx +
jnz loc_4187A3  +
lea ecx [ebp-4Ch] +
sub eax ecx +
sar eax 1 +
cmp eax 16h +
jnb loc_41881F  +
mov edx [ebp-90h] +
mov byte ptr [ebp-7Dh] 1 +
cmp [ebp-0A4h] edx +
jg loc_4187D8  +
inc dword ptr [ebp-8Ch]  +
jmp loc_4187FC  +
test eax eax +
jnz loc_4187E0  +
test edx edx +
jz loc_4187FC  +
mov ecx [ebp-84h] +
mov al byte ptr ds:a0123456789ab_0[eax] +
mov [ecx] al +
inc ecx  +
inc edx  +
mov [ebp-84h] ecx +
mov [ebp-90h] edx +
mov ecx [ebp-50h] +
lea eax [ebp-64h] +
mov edx [ebp-64h] +
cmp ecx 10h +
cmovnb eax edx +
cmp byte ptr [eax+edi] 7Fh +
jz loc_41886B  +
cmp ecx 10h +
lea eax [ebp-64h] +
cmovnb eax edx +
inc byte ptr [eax+edi]  +
jmp loc_41886B  +
cmp dword ptr [ebp-50h] 10h +
lea eax [ebp-64h] +
cmovnb eax [ebp-64h] +
cmp byte ptr [eax+edi] 0 +
jz loc_418713  +
cmp word ptr [ebp-0ACh] 0 +
jz loc_418713  +
cmp byte ptr [esi+4] 0 +
jnz loc_41884F  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-0ACh] +
jnz loc_418713  +
push 0  +
lea ecx [ebp-64h] +
call loc_4120F0  +
inc edi  +
mov ecx [esi] +
test ecx ecx +
jz loc_41888B  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_41888B  +
mov byte ptr [esi+4] 0 +
xor al al +
jmp loc_4186F0  +
***
mov dword ptr [esi] 0 +
mov al 1 +
mov byte ptr [esi+4] 1 +
jmp loc_4186F0  +
***
mov byte ptr [ebp-85h] 1 +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-50h] +
cmp eax 10h +
jb loc_4188DA  +
lea ecx [eax+1] +
mov eax edx +
cmp ecx 1000h +
jb loc_4188D0  +
mov edx [edx-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_418F00  +
push ecx  +
push edx  +
call sub_41B8B8  +
add esp 8 +
mov edi [ebp-84h] +
cmp byte ptr [ebp-7Dh] 0 +
jz loc_4188F9  +
cmp dword ptr [ebp-90h] 0 +
jnz loc_4188F9  +
mov byte ptr [edi] 30h +
inc edi  +
mov [ebp-84h] edi +
cmp byte ptr [esi+4] 0 +
jnz loc_418906  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418913  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_4189F1  +
test eax eax +
jz loc_418A8C  +
jmp loc_4189F9  +
mov al [esi+4] +
nop   +
test al al +
jnz loc_41893B  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418948  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_41895B  +
test eax eax +
jnz loc_41895F  +
mov [ebp-84h] edi +
jmp loc_4188E0  +
***
test eax eax +
jnz loc_418953  +
cmp byte ptr [esi+4] 0 +
jnz loc_41896C  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
lea eax [ebp-4Ch] +
cmp [eax] cx +
jz loc_418982  +
add eax 2 +
lea edx [ebp-14h] +
cmp eax edx +
jnz loc_418973  +
lea ecx [ebp-4Ch] +
sub eax ecx +
sar eax 1 +
cmp eax 16h +
jnb loc_418953  +
mov ecx [ebp-90h] +
cmp [ebp-0A4h] ecx +
jg loc_4189A4  +
inc dword ptr [ebp-8Ch]  +
jmp loc_4189BC  +
test eax eax +
jnz loc_4189AC  +
test ecx ecx +
jz loc_4189BC  +
mov al byte ptr ds:a0123456789ab_0[eax] +
mov [edi] al +
inc edi  +
inc ecx  +
mov [ebp-90h] ecx +
mov ecx [esi] +
mov byte ptr [ebp-7Dh] 1 +
test ecx ecx +
jz loc_4189E0  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4189E0  +
mov byte ptr [esi+4] 0 +
xor al al +
jmp loc_418930  +
***
mov dword ptr [esi] 0 +
mov al 1 +
mov byte ptr [esi+4] 1 +
jmp loc_418930  +
***
test eax eax +
jnz loc_418A8C  +
cmp byte ptr [esi+4] 0 +
jnz loc_418A06  +
mov ecx esi +
call sub_418F10  +
mov eax [ebp-94h] +
movzx ebx word ptr [esi+6] +
mov edi [eax] +
cmp edi offset off_4437A4 +
jnz loc_418A20  +
movzx eax word ptr [eax+0Ch] +
jmp loc_418A36  +
mov edi [edi+0Ch] +
mov ecx edi +
call ds:off_442218  +
mov ecx [ebp-94h] +
call edi  +
movzx eax ax +
cmp bx ax +
jnz loc_418A86  +
call sub_423682  +
mov edi [ebp-84h] +
mov eax [eax] +
mov al [eax] +
mov [edi] al +
inc edi  +
mov ecx [esi] +
mov [ebp-84h] edi +
test ecx ecx +
jz loc_418A74  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418A74  +
mov ebx [ebp-9Ch] +
mov byte ptr [esi+4] 0 +
jmp loc_418A92  +
mov ebx [ebp-9Ch] +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_418A92  +
mov ebx [ebp-9Ch] +
mov edi [ebp-84h] +
cmp dword ptr [ebp-90h] 0 +
jnz loc_418AE8  +
mov edi [ebp-8Ch] +
cmp byte ptr [esi+4] 0 +
jnz loc_418AAE  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418ABB  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_418B6E  +
test eax eax +
jnz loc_418B76  +
mov [ebp-8Ch] edi +
test edi edi +
mov edi [ebp-84h] +
jns loc_418AE8  +
mov byte ptr [edi] 30h +
inc edi  +
inc dword ptr [ebp-8Ch]  +
cmp byte ptr [esi+4] 0 +
jnz loc_418AF5  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418B02  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_418BC3  +
test eax eax +
jnz loc_418BCB  +
mov al [ebp-7Dh] +
mov [ebp-84h] edi +
test al al +
jz loc_418B52  +
cmp byte ptr [esi+4] 0 +
jnz loc_418B2F  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418B3C  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_418C4E  +
test eax eax +
jnz loc_418C56  +
mov al [ebp-7Dh] +
cmp byte ptr [ebp-85h] 0 +
jnz loc_418B63  +
test al al +
jnz loc_418E9B  +
mov eax [ebp-0A0h] +
jmp loc_418EA1  +
test eax eax +
jnz loc_418ACE  +
cmp byte ptr [esi+4] 0 +
jnz loc_418B83  +
mov ecx esi +
call sub_418F10  +
mov ax [esi+6] +
cmp ax [ebp-4Ch] +
jnz loc_418ACE  +
mov ecx [esi] +
dec edi  +
mov byte ptr [ebp-7Dh] 1 +
test ecx ecx +
jz loc_418BB4  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418BB4  +
mov byte ptr [esi+4] 0 +
jmp loc_418AA1  +
***
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_418AA1  +
***
test eax eax +
jnz loc_418B15  +
cmp byte ptr [esi+4] 0 +
jnz loc_418BD8  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
lea eax [ebp-4Ch] +
nop   +
cmp [eax] cx +
jz loc_418BEF  +
add eax 2 +
lea edx [ebp-14h] +
cmp eax edx +
jnz loc_418BE0  +
lea ecx [ebp-4Ch] +
sub eax ecx +
sar eax 1 +
cmp eax 16h +
jnb loc_418B15  +
mov ecx [ebp-90h] +
cmp ecx [ebp-0A4h] +
jge loc_418C1D  +
mov al byte ptr ds:a0123456789ab_0[eax] +
mov [edi] al +
inc edi  +
inc ecx  +
mov [ebp-90h] ecx +
mov ecx [esi] +
mov byte ptr [ebp-7Dh] 1 +
test ecx ecx +
jz loc_418C3F  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418C3F  +
mov byte ptr [esi+4] 0 +
jmp loc_418AE8  +
***
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_418AE8  +
***
test eax eax +
jnz loc_418B4F  +
cmp byte ptr [esi+4] 0 +
jnz loc_418C63  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-16h] +
jz loc_418C88  +
cmp byte ptr [esi+4] 0 +
jnz loc_418C7E  +
mov ecx esi +
call sub_418F10  +
movzx eax word ptr [esi+6] +
cmp ax [ebp-18h] +
jnz loc_418B4F  +
mov byte ptr [edi] 70h +
inc edi  +
mov ecx [esi] +
mov [ebp-84h] edi +
test ecx ecx +
jz loc_418CAB  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418CAB  +
xor al al +
jmp loc_418CB3  +
mov dword ptr [esi] 0 +
mov al 1 +
xor cl cl +
mov [esi+4] al +
xor edi edi +
mov [ebp-7Dh] cl +
test al al +
jnz loc_418CC8  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418CD5  +
mov ecx ebx +
call sub_418F10  +
mov eax [ebx] +
cmp [esi] edi +
jnz loc_418CE5  +
test eax eax +
jz loc_418D83  +
jmp loc_418CED  +
test eax eax +
jnz loc_418D83  +
mov al [esi+4] +
test al al +
jnz loc_418CFE  +
mov ecx esi +
call sub_418F10  +
mov al [esi+4] +
movzx ecx word ptr [esi+6] +
cmp cx [ebp-1Eh] +
jnz loc_418D3D  +
mov eax [ebp-84h] +
mov byte ptr [eax] 2Bh +
inc eax  +
mov ecx [esi] +
mov [ebp-84h] eax +
test ecx ecx +
jz loc_418D34  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418D34  +
xor al al +
mov [esi+4] al +
jmp loc_418D83  +
mov al 1 +
mov [esi] edi +
mov [esi+4] al +
jmp loc_418D83  +
test al al +
jnz loc_418D4C  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
cmp cx [ebp-20h] +
jnz loc_418D83  +
mov eax [ebp-84h] +
mov byte ptr [eax] 2Dh +
inc eax  +
mov [ebp-84h] eax +
mov ecx [esi] +
test ecx ecx +
jz loc_418D7D  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418D7D  +
mov byte ptr [esi+4] 0 +
jmp loc_418D83  +
mov byte ptr [esi+4] 1 +
mov [esi] edi +
cmp byte ptr [esi+4] 0 +
jnz loc_418D90  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418D9D  +
mov ecx ebx +
call sub_418F10  +
mov eax [ebx] +
cmp [esi] edi +
jnz loc_418DEB  +
test eax eax +
jnz loc_418DEF  +
cmp byte ptr [ebp-7Dh] 0 +
jz loc_418DC0  +
mov eax [ebp-84h] +
mov byte ptr [eax] 30h +
inc eax  +
mov [ebp-84h] eax +
cmp byte ptr [esi+4] 0 +
jnz loc_418DCD  +
mov ecx esi +
call sub_418F10  +
cmp byte ptr [ebx+4] 0 +
jnz loc_418DDA  +
mov ecx ebx +
call sub_418F10  +
cmp dword ptr [esi] 0 +
mov eax [ebx] +
jnz loc_418E0F  +
test eax eax +
jz loc_418B4F  +
jmp loc_418E17  +
test eax eax +
jnz loc_418DA7  +
cmp byte ptr [esi+4] 0 +
jnz loc_418DFC  +
mov ecx esi +
call sub_418F10  +
mov ax [esi+6] +
cmp ax [ebp-4Ch] +
jnz loc_418DA7  +
mov byte ptr [ebp-7Dh] 1 +
jmp loc_418D62  +
***
test eax eax +
jnz loc_418B4F  +
cmp byte ptr [esi+4] 0 +
jnz loc_418E24  +
mov ecx esi +
call sub_418F10  +
movzx ecx word ptr [esi+6] +
lea eax [ebp-4Ch] +
mov [ecx] al +
inc ecx  +
mov [ebp-84h] ecx +
inc edi  +
mov ecx [esi] +
mov byte ptr [ebp-7Dh] 1 +
test ecx ecx +
jz loc_418E8C  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418E8C  +
mov byte ptr [esi+4] 0 +
jmp loc_418DC0  +
***
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_418DC0  +
***
mov eax [ebp-84h] +
mov ecx [ebp-0B4h] +
mov edx [ebp-68h] +
mov byte ptr [eax] 0 +
mov eax [ebp-8Ch] +
mov [ecx] eax +
cmp edx 10h +
jb loc_418EE2  +
mov ecx [ebp-7Ch] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_418ED8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_418F00  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
mov edi ecx +
mov ebx [edi] +
test ebx ebx +
jz loc_418F5E  +
mov eax [ebx+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_418F30  +
mov eax [ebx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_418F30  +
movzx eax word ptr [ecx] +
jmp loc_418F46  +
mov eax [ebx] +
push esi  +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_442218  +
mov ecx ebx +
call esi  +
movzx eax ax +
pop esi  +
movzx eax ax +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_418F5E  +
mov [edi+6] ax +
mov byte ptr [edi+4] 1 +
pop edi  +
pop ebx  +
retn   +
movzx eax word ptr [edi+6] +
mov dword ptr [edi] 0 +
mov byte ptr [edi+4] 1 +
pop edi  +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4406CF  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_1C] +
push 0  +
mov [ebp+var_18] esi +
call sub_41A3E0  +
mov [ebp+var_4] 0 +
mov edi dword_45A034 +
mov ebx dword_45A010 +
test edi edi +
jnz loc_418FF1  +
push edi  +
lea ecx [ebp+var_14] +
call sub_41A3E0  +
cmp dword_45A034 edi +
jnz loc_418FE3  +
mov eax dword_4591A8 +
inc eax  +
mov dword_4591A8 eax +
mov dword_45A034 eax +
lea ecx [ebp+var_14] +
call sub_41A438  +
mov edi dword_45A034 +
mov ecx [esi+4] +
cmp edi [ecx+0Ch] +
jnb loc_419009  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4190A1  +
jmp loc_41900B  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_419021  +
call sub_41A60E  +
cmp edi [eax+0Ch] +
jnb loc_419025  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4190A1  +
test ebx ebx +
jz loc_41902D  +
mov esi ebx +
jmp loc_4190A1  +
push 8  +
call sub_41B637  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_18] +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_419056  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_41905B  +
lea eax [ecx+1Ch] +
jmp loc_41905B  +
mov eax offset unk_45261F +
push eax  +
lea ecx [ebp+var_50] +
call loc_404A50  +
lea ebx [esi+4] +
mov dword ptr [esi] offset off_443738 +
lea ecx [ebp+var_50] +
mov dword ptr [ebx] 0 +
call sub_404B00  +
mov [ebp+var_18] esi +
push esi  +
mov byte ptr [ebp+var_4] 2 +
call sub_41A5E2  +
mov eax [esi] +
add esp 4 +
mov edi [eax+4] +
cmp edi offset dword_404BD0 +
jnz loc_4190C7  +
inc dword ptr [ebx]  +
mov dword_45A010 esi +
lea ecx [ebp+var_1C] +
call sub_41A438  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx edi +
call ds:off_442218  +
mov ecx esi +
call edi  +
jmp loc_41909B  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4411A8  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi [ebp+14h] +
xor ecx ecx +
mov esi [ebp+0Ch] +
mov ebx [ebp+8] +
mov eax [ebp+10h] +
mov [ebp-48h] esi +
movzx esi word ptr [edi] +
mov [ebp-44h] ebx +
mov [ebp-40h] eax +
test si si +
jz loc_41914E  +
mov edx esi +
mov ebx eax +
nop   +
cmp dx si +
lea eax [ebx+1] +
movzx edx word ptr [edi+ecx*2+2] +
lea ecx [ecx+1] +
cmovnz eax ebx +
mov ebx eax +
test dx dx +
jnz loc_419130  +
mov [ebp-40h] ebx +
mov ebx [ebp-44h] +
push 0  +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0Fh +
mov byte ptr [ebp-28h] 0 +
call loc_415D00  +
mov dword ptr [ebp-4] 0 +
mov eax [ebp-14h] +
mov ecx [ebp-28h] +
mov dword ptr [ebp-44h] 0FFFFFFFEh +
mov dword ptr [ebp-30h] 1 +
mov [ebp-34h] eax +
mov [ebp-38h] ecx +
xor edx edx +
mov byte ptr [ebp-29h] 0 +
xor esi esi +
mov [ebp-3Ch] edx +
cmp [ebp-40h] edx +
jbe loc_4192E5  +
movzx eax word ptr [edi+esi*2] +
test ax ax +
jz loc_4191C3  +
movzx ecx word ptr [edi] +
cmp ax cx +
jz loc_4191C0  +
movzx eax word ptr [edi+esi*2+2] +
inc esi  +
test ax ax +
jnz loc_4191B0  +
mov ecx [ebp-38h] +
cmp dword ptr [ebp-34h] 10h +
lea eax [ebp-28h] +
cmovnb eax ecx +
cmp byte ptr [eax+edx] 0 +
jz loc_4191E8  +
cmp dword ptr [ebp-34h] 10h +
lea eax [ebp-28h] +
cmovnb eax ecx +
movsx eax byte ptr [eax+edx] +
add esi eax +
jmp loc_4192A8  +
add esi [ebp-30h] +
movzx eax word ptr [edi+esi*2] +
cmp ax [edi] +
jz loc_419276  +
test ax ax +
jz loc_419276  +
cmp byte ptr [ebx+4] 0 +
jnz loc_41920A  +
mov ecx ebx +
call sub_418F10  +
mov eax [ebp-48h] +
cmp byte ptr [eax+4] 0 +
jnz loc_41921D  +
mov ecx eax +
call sub_418F10  +
mov eax [ebp-48h] +
cmp dword ptr [ebx] 0 +
mov eax [eax] +
jnz loc_41924E  +
test eax eax +
jnz loc_419252  +
cmp dword ptr [ebp-34h] 10h +
lea edx [ebp-28h] +
mov eax [ebp-30h] +
mov ecx 7Fh +
cmovnb edx [ebp-38h] +
cmp [ebp-30h] ecx +
movzx eax al +
cmovb ecx eax +
mov eax [ebp-3Ch] +
mov [edx+eax] cl +
mov edx eax +
jmp loc_41929C  +
test eax eax +
jnz loc_419228  +
cmp byte ptr [ebx+4] 0 +
jnz loc_41925F  +
mov ecx ebx +
call sub_418F10  +
mov ax [edi+esi*2] +
cmp ax [ebx+6] +
jnz loc_419228  +
mov edx [ebp-3Ch] +
mov al 1 +
mov ecx [ebp-38h] +
mov [ebp-29h] al +
jmp loc_4192AB  +
cmp dword ptr [ebp-34h] 10h +
lea edx [ebp-28h] +
mov eax [ebp-30h] +
cmovnb edx ecx +
movzx eax al +
mov ecx 7Fh +
cmp [ebp-30h] ecx +
cmovb ecx eax +
mov eax [ebp-3Ch] +
mov [edx+eax] cl +
mov edx eax +
mov [ebp-44h] edx +
mov ecx [ebp-28h] +
mov eax [ebp-14h] +
mov [ebp-38h] ecx +
mov [ebp-34h] eax +
mov al [ebp-29h] +
inc edx  +
mov [ebp-3Ch] edx +
cmp edx [ebp-40h] +
jb loc_4191A4  +
test al al +
jz loc_4192E5  +
cmp byte ptr [ebx+4] 0 +
jnz loc_4192C9  +
mov ecx ebx +
call sub_418F10  +
mov esi [ebp-48h] +
cmp byte ptr [esi+4] 0 +
jnz loc_4192D9  +
mov ecx esi +
call sub_418F10  +
mov ecx [ebx] +
mov eax [esi] +
test ecx ecx +
jnz loc_41930F  +
test eax eax +
jnz loc_419313  +
mov eax [ebp-34h] +
cmp eax 10h +
jb loc_419361  +
mov edx [ebp-38h] +
lea ecx [eax+1] +
mov eax edx +
cmp ecx 1000h +
jb loc_419357  +
mov edx [edx-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419380  +
jmp loc_419357  +
test eax eax +
jnz loc_4192E5  +
inc dword ptr [ebp-30h]  +
test ecx ecx +
jz loc_41933D  +
call sub_412860  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_41933D  +
mov ecx [ebp-38h] +
xor al al +
mov [ebx+4] al +
mov dword ptr [ebp-44h] 0FFFFFFFFh +
jmp loc_419190  +
***
mov ecx [ebp-38h] +
mov al 1 +
mov dword ptr [ebx] 0 +
mov [ebx+4] al +
mov dword ptr [ebp-44h] 0FFFFFFFFh +
jmp loc_419190  +
***
push ecx  +
push edx  +
call sub_41B8B8  +
add esp 8 +
mov eax [ebp-44h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
sub ecx [ecx-4] +
jmp sub_415CD0  +
***
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
lea eax [ecx+4] +
push eax  +
call sub_41D167  +
add esp 8 +
test eax eax +
setz al  +
pop ebp  +
retn 4  +
***
sub esp 0Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_C] +
push esi  +
mov esi ecx +
mov [ebp+var_C] edx +
lea ecx [esi+4] +
mov [ebp+var_8] 1 +
push ecx  +
xorps xmm0 xmm0 +
mov dword ptr [esi] offset off_442724 +
push eax  +
movq qword ptr [ecx] xmm0 +
call sub_41CC7C  +
mov ecx [ebp+var_4] +
add esp 8 +
mov dword ptr [esi] offset off_442764 +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 0Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_C] +
push esi  +
mov esi ecx +
mov [ebp+var_C] edx +
lea ecx [esi+4] +
mov [ebp+var_8] 1 +
push ecx  +
xorps xmm0 xmm0 +
mov dword ptr [esi] offset off_442724 +
push eax  +
movq qword ptr [ecx] xmm0 +
call sub_41CC7C  +
mov ecx [ebp+var_4] +
add esp 8 +
mov dword ptr [esi] offset off_442770 +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_442724 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41CC7C  +
add esp 8 +
mov dword ptr [esi] offset off_442764 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4411FC  +
mov eax large fs:0 +
push eax  +
sub esp 26Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
lea ecx [ebp-230h] +
call sub_402A60  +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-230h] +
cmp dword ptr [ebp-21Ch] 8 +
cmovnb eax [ebp-230h] +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_424D5C  +
add esp 0Ch +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveExtensionW  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419540  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_402B00  +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
lea ecx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
call loc_412D80  +
lea eax [ebp-260h] +
mov edx offset asc_452760 +
push eax  +
lea ecx [ebp-278h] +
call loc_40BF50  +
add esp 4 +
mov byte ptr [ebp-4] 2 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_4195B6  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-230h] +
call loc_40BBF0  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-264h] +
cmp edx 8 +
jb loc_419609  +
mov ecx [ebp-278h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4195FF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41975F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
lea edx [ebp-248h] +
mov byte ptr [ebp-4] 3 +
mov ecx esi +
call loc_413110  +
lea edx [ebp-248h] +
lea ecx [ebp-230h] +
call loc_412F40  +
lea eax [ebp-230h] +
cmp esi eax +
jz loc_41966E  +
cmp dword ptr [ebp-21Ch] 8 +
mov ecx esi +
push dword ptr [ebp-220h]  +
cmovnb eax [ebp-230h] +
push eax  +
call loc_402B00  +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_4196AE  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4196A4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419764  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-24Ch] +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
cmp edx 8 +
jb loc_419707  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4196FD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419764  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-21Ch] +
cmp edx 8 +
jb loc_419743  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419739  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419764  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
call sub_42071A  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44128A  +
mov eax large fs:0 +
push eax  +
sub esp 164h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-110h] edx +
mov eax ecx +
mov [ebp-10Ch] eax +
xor ecx ecx +
mov dword ptr [ebp-48h] 0 +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] cx +
mov [ebp-4] ecx +
mov [ebp-30h] ecx +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] cx +
mov [ebp-18h] ecx +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] cx +
mov byte ptr [ebp-4] 2 +
mov eax [eax] +
cdq   +
push 0B0h  +
mov edi eax +
mov esi edx +
push ecx  +
lea eax [ebp-108h] +
push eax  +
call sub_41DD10  +
add esp 4 +
lea ecx [ebp-108h] +
call sub_409210  +
push esi  +
push edi  +
lea ecx [ebp-0F8h] +
mov byte ptr [ebp-4] 3 +
call sub_415B20  +
lea edx [ebp-58h] +
lea ecx [ebp-108h] +
call sub_412370  +
lea ecx [ebp-108h] +
mov byte ptr [ebp-4] 2 +
call sub_405ED0  +
mov eax [ebp-10Ch] +
push 0B0h  +
push 0  +
mov eax [eax+4] +
cdq   +
mov edi eax +
mov esi edx +
lea eax [ebp-108h] +
push eax  +
call sub_41DD10  +
add esp 4 +
lea ecx [ebp-108h] +
call sub_409210  +
push esi  +
push edi  +
lea ecx [ebp-0F8h] +
mov byte ptr [ebp-4] 4 +
call sub_415B20  +
lea edx [ebp-40h] +
lea ecx [ebp-108h] +
call sub_412370  +
lea ecx [ebp-108h] +
mov byte ptr [ebp-4] 2 +
call sub_405ED0  +
mov eax [ebp-10Ch] +
push 0B0h  +
push 0  +
mov eax [eax+8] +
cdq   +
mov edi eax +
mov esi edx +
lea eax [ebp-108h] +
push eax  +
call sub_41DD10  +
add esp 4 +
lea ecx [ebp-108h] +
call sub_409210  +
push esi  +
mov byte ptr [ebp-4] 5 +
push edi  +
lea ecx [ebp-0F8h] +
call sub_415B20  +
lea edx [ebp-28h] +
lea ecx [ebp-108h] +
call sub_412370  +
lea ecx [ebp-108h] +
mov byte ptr [ebp-4] 2 +
call sub_405ED0  +
push offset a__0  +
lea edx [ebp-58h] +
lea ecx [ebp-170h] +
call loc_40C030  +
add esp 4 +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-40h] +
cmp dword ptr [ebp-2Ch] 8 +
push dword ptr [ebp-30h]  +
cmovnb ecx [ebp-40h] +
push ecx  +
mov ecx eax +
call loc_40BBF0  +
mov dword ptr [ebp-130h] 0 +
xor ecx ecx +
mov dword ptr [ebp-12Ch] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-140h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-130h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
push 1  +
push offset a__0  +
lea ecx [ebp-140h] +
mov byte ptr [ebp-4] 7 +
call loc_40BBF0  +
mov dword ptr [ebp-118h] 0 +
xor ecx ecx +
mov dword ptr [ebp-114h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-128h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-118h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 8 +
lea eax [ebp-28h] +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-128h] +
push dword ptr [ebp-18h]  +
cmovnb eax [ebp-28h] +
push eax  +
call loc_40BBF0  +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-158h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
mov [eax] cx +
mov ecx [ebp-110h] +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
lea eax [ebp-158h] +
push eax  +
movq qword ptr [ebp-148h] xmm0 +
call loc_4095F0  +
mov edx [ebp-144h] +
cmp edx 8 +
jb loc_419A4D  +
mov ecx [ebp-158h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419A43  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419C0A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-114h] +
cmp edx 8 +
jb loc_419A8D  +
mov ecx [ebp-128h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419A83  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419C0A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-12Ch] +
xor eax eax +
mov dword ptr [ebp-118h] 0 +
mov dword ptr [ebp-114h] 7 +
mov [ebp-128h] ax +
cmp edx 8 +
jb loc_419AEA  +
mov ecx [ebp-140h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419AE0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419C0A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-15Ch] +
xor eax eax +
mov dword ptr [ebp-130h] 0 +
mov dword ptr [ebp-12Ch] 7 +
mov [ebp-140h] ax +
cmp edx 8 +
jb loc_419B47  +
mov ecx [ebp-170h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419B3D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419C0A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_419B81  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419B77  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419C0F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_419BB7  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419BAD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419C0F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_419BED  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419BE3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419C0F  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42071A  +
call sub_42071A  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4412C8  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 48h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-3Ch] esi +
xor eax eax +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 7 +
mov [ebp-30h] ax +
mov [ebp-4] eax +
lea eax [ebp-38h] +
push eax  +
push 20019h  +
push 0  +
push offset aSoftwareAdobeA  +
push 80000001h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_419D1F  +
mov [ebp-18h] eax +
mov [ebp-34h] eax +
lea eax [ebp-34h] +
push eax  +
push 0  +
lea eax [ebp-18h] +
push eax  +
push 0  +
push offset aCclangpref  +
push dword ptr [ebp-38h]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_419D16  +
mov eax [ebp-34h] +
test eax eax +
jz loc_419D16  +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_41BD8A  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_419D16  +
lea eax [ebp-34h] +
push eax  +
push edi  +
lea eax [ebp-18h] +
push eax  +
push 0  +
push offset aCclangpref  +
push dword ptr [ebp-38h]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_419D0D  +
push edi  +
lea ecx [ebp-30h] +
call sub_4095C0  +
push edi  +
call sub_41BD85  +
add esp 4 +
push dword ptr [ebp-38h]  +
call ds:RegCloseKey  +
movups xmm0 oword ptr [ebp-30h] +
xor eax eax +
lea ecx [ebp-30h] +
movups oword ptr [ebp-54h] xmm0 +
movq xmm0 qword ptr [ebp-20h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-30h] ax +
mov dword ptr [ebp-1Ch] 7 +
mov [ebp-20h] eax +
movq qword ptr [ebp-44h] xmm0 +
call loc_4029B0  +
lea eax [ebp-54h] +
mov ecx esi +
push eax  +
call loc_4095F0  +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_419D95  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419D8B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41A079  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
cmp dword ptr [esi+10h] 0 +
jnz loc_41A059  +
call ds:GetUserDefaultUILanguage  +
movzx esi ax +
mov edi esi +
and edi 3FFh +
call ds:GetUserDefaultLangID  +
movzx eax ax +
mov edx eax +
shr si 0Ah +
shr ax 0Ah +
and edx 3FFh +
movzx ecx ax +
cmp dx di +
movzx eax si +
cmovnz ecx eax +
lea eax [edi-1] +
movzx ecx cx +
cmp eax 26h +
ja loc_41A04A  +
jmp ds:off_41A080[eax*4]  +
cmp ecx 2 +
mov edx offset aEn_gb +
mov ecx [ebp-3Ch] +
mov eax offset aEn_us +
cmovz eax edx +
push eax  +
call sub_4095C0  +
jmp loc_41A059  +
cmp ecx 5 +
jz loc_419E1D  +
cmp ecx 7 +
jz loc_419E1D  +
mov eax offset aEn_ae +
cmp ecx 6 +
jnz loc_419E22  +
mov eax offset aFr_ma +
mov ecx [ebp-3Ch] +
push eax  +
call sub_4095C0  +
jmp loc_41A059  +
cmp ecx 3 +
mov edx offset aFr_ca +
mov ecx [ebp-3Ch] +
mov eax offset aFr_fr +
cmovz eax edx +
push eax  +
call sub_4095C0  +
jmp loc_41A059  +
cmp ecx 2 +
mov edx offset aEs_mx +
mov ecx [ebp-3Ch] +
mov eax offset aEs_es +
cmovz eax edx +
push eax  +
call sub_4095C0  +
jmp loc_41A059  +
cmp ecx 2 +
jz loc_419E7B  +
mov eax offset aZh_tw +
cmp ecx 4 +
jnz loc_419E80  +
mov eax offset aZh_cn +
mov ecx [ebp-3Ch] +
push eax  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aEn_il  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aDa_dk  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aNl_nl  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aFi_fi  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aDe_de  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aIt_it  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aJa_jp  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aKo_kr  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aSv_se  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aPl_pl  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aCs_cz  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aTr_tr  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aEl_gr  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aRu_ru  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aRo_ro  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aHr_hr  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aLv_lv  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aEt_ee  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aSk_sk  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aSl_si  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aHu_hu  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aNb_no  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aBg_bg  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aUk_ua  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aPt_br  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push offset aLt_lt  +
call sub_4095C0  +
jmp loc_41A059  +
mov ecx [ebp-3Ch] +
push 5  +
push offset aEn_us  +
call loc_402B00  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41B626  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
call sub_42071A  +
nop   +
and dword ptr [ecx+4] 0 +
mov eax ecx +
and dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] offset aBadAllocation +
mov dword ptr [ecx] offset off_442730 +
retn   +
***
push esi  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_404550  +
mov dword ptr [esi] offset off_442758 +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
push esi  +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
push ecx  +
mov cl [ebp+arg_4] +
xor eax eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jnz loc_41A3F6  +
call sub_42A378  +
jmp loc_41A40A  +
cmp eax 8 +
jge loc_41A40A  +
imul eax eax +
add eax offset stru_4590E8 +
push eax  +
call sub_41B066  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push 0  +
push ecx  +
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41A4DE  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push ebx  +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_0] +
cmp [ebx] edi +
jz loc_41A5AD  +
cmp dword ptr [ebx] 0 +
jz loc_41A57C  +
push dword ptr [ebx]  +
call sub_424926  +
pop ecx  +
and dword ptr [ebx] 0 +
test edi edi +
jz loc_41A5AD  +
cmp byte ptr [edi] 0 +
push esi  +
mov esi edi +
jz loc_41A591  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_41A58B  +
sub esi edi +
inc esi  +
push esi  +
call sub_424F1B  +
mov [ebx] eax +
pop ecx  +
test eax eax +
jz loc_41A5AC  +
push esi  +
push edi  +
push eax  +
call loc_41D210  +
add esp 0Ch +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
push ecx  +
call sub_41BFB4  +
push ecx  +
push 0  +
mov eax [ebp+arg_0] +
push ecx  +
cmp byte_4591D8 0 +
mov eax [ebp+arg_0] +
push edi  +
mov edi [eax] +
test edi edi +
jz loc_41A7FC  +
mov eax [edi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41A7FB  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_442218  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
mov ecx [ebp+arg_0] +
push ecx  +
push [ebp+lpCharType]  +
push ecx  +
push ebx  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
sub esp 14h +
mov eax [ebp+arg_C] +
push [ebp+lpCriticalSection]  +
push 0  +
push [ebp+lpCriticalSection]  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
call ds:GetModuleHandleW  +
push esi  +
push esi  +
mov esi dword_459228 +
test esi esi +
jz loc_41B3F7  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+dwSpinCount]  +
push [ebp+lpCriticalSection]  +
call ds:off_442218  +
call esi  +
jmp loc_41B406  +
push [ebp+dwSpinCount]  +
push [ebp+lpCriticalSection]  +
call ds:InitializeCriticalSectionAndSpinCount  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn   +
***
cmp dword_458008 0 +
push esi  +
mov eax [ebp+arg_0] +
push ebx  +
cmp [ebp+arg_0] 0 +
push esi  +
push ecx  +
cmp ecx dword_458018 +
jmp loc_41B649  +
mov eax [ebp+arg_0] +
test eax eax +
cmp [ebp+arg_0] 0 +
cmp byte_459379 0 +
call sub_41C4E0  +
call sub_41C300  +
cmp byte_459378 0 +
cmp dword_45937C 0FFFFFFFFh +
push [ebp+arg_0]  +
push [ebp+arg_0]  +
call sub_41BD80  +
pop ecx  +
pop ebp  +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_44587C +
jz loc_41B8EC  +
push 0Ch  +
push esi  +
call sub_41B8B8  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push 1  +
call sub_42C406  +
call sub_41C5D3  +
push eax  +
call sub_42C527  +
call sub_408E80  +
mov esi eax +
call sub_42DDEA  +
push 1  +
mov [eax] esi +
call sub_41B716  +
add esp 0Ch +
pop esi  +
test al al +
jz loc_41B9A3  +
fnclex   +
call sub_41C64F  +
push offset sub_41C680  +
call sub_41B8A3  +
call sub_41C2FC  +
push eax  +
call sub_42BA76  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41B9A3  +
call sub_41C5D9  +
call sub_41C637  +
test eax eax +
jz loc_41B96B  +
push offset sub_408E80  +
call sub_42C472  +
pop ecx  +
call nullsub_1  +
call nullsub_1  +
call sub_41C5F3  +
call sub_408E80  +
push eax  +
call loc_42CC17  +
pop ecx  +
call sub_41C5F0  +
test al al +
jz loc_41B994  +
call sub_42BF40  +
call sub_408E80  +
call sub_41C426  +
test eax eax +
jnz loc_41B9A3  +
retn   +
***
push 7  +
call sub_41C30C  +
call sub_41C61A  +
xor eax eax +
retn   +
***
call sub_41C46E  +
call sub_408E80  +
push eax  +
call sub_42DDBB  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_41C42B  +
test al al +
jz loc_41BB4B  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_41BB24  +
call sub_42B6F3  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push 7  +
call sub_41C30C  +
push esi  +
call sub_42B74D  +
push dword ptr [ebp-20h]  +
call sub_42B711  +
***
call sub_41C588  +
jmp loc_41B9D2  +
***
call loc_41BB97  +
push 0  +
call sub_41B716  +
pop ecx  +
test al al +
jz loc_41BB8F  +
push offset loc_41BC20  +
call sub_41B8A3  +
pop ecx  +
xor eax eax +
retn   +
push 7  +
call sub_41C30C  +
int 3  +
***
push esi  +
push edi  +
push 0FA0h  +
push offset CriticalSection  +
call ds:InitializeCriticalSectionAndSpinCount  +
push offset aApiMsWinCoreSy  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jnz loc_41BBCB  +
push offset aKernel32_dll  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jz loc_41BC11  +
push offset aSleepcondition  +
push esi  +
call ds:GetProcAddress  +
push offset aWakeallconditi  +
push esi  +
mov edi eax +
call ds:GetProcAddress  +
test edi edi +
jz loc_41BBFB  +
test eax eax +
jz loc_41BBFB  +
mov dword_4593B4 edi +
mov dword_4593B8 eax +
pop edi  +
pop esi  +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov hEvent eax +
test eax eax +
jnz loc_41BBF8  +
push 7  +
call sub_41C30C  +
push esi  +
push esi  +
push esi  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jnz loc_41BCD2  +
or dword ptr [esi] 0FFFFFFFFh +
jmp loc_41BCF1  +
push 64h  +
call sub_41BD32  +
pop ecx  +
jmp loc_41BCBE  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_41BCC8  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_458010 +
mov [ecx+4] eax +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
pop ebp  +
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
mov ecx [ebp-0Ch] +
mov ecx [ebp-10h] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_458018 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_41C079  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_41C0C2  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_41C103  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_41C0D0  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_41C0FE  +
cmp edx [esp+arg_4] +
ja loc_41C0FE  +
jb loc_41C0FF  +
cmp eax [esp+arg_0] +
jbe loc_41C0FF  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41C6B0  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41C6B0  +
***
push ebp  +
mov ebp esp +
and dword_4596DC 0 +
sub esp 24h +
or dword_458030 1 +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_41C2F8  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
push ebx  +
push esi  +
push edi  +
xor ecx ecx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-1Ch] +
mov [ebp-0Ch] eax +
xor edi 6C65746Eh +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-20h] +
xor eax 756E6547h +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
or eax edi +
or eax [ebp-8] +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_41C209  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_41C1F8  +
cmp eax 20660h +
jz loc_41C1F8  +
cmp eax 20670h +
jz loc_41C1F8  +
cmp eax 30650h +
jz loc_41C1F8  +
cmp eax 30660h +
jz loc_41C1F8  +
cmp eax 30670h +
jnz loc_41C209  +
mov edi dword_4596E0 +
or edi 1 +
mov dword_4596E0 edi +
jmp loc_41C20F  +
mov edi dword_4596E0 +
mov ecx [ebp-1Ch] +
push 7  +
pop eax  +
mov [ebp-4] ecx +
cmp [ebp-0Ch] eax +
jl loc_41C24C  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov ecx [ebp-4] +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_41C24F  +
or edi 2 +
mov dword_4596E0 edi +
jmp loc_41C24F  +
mov ebx [ebp-10h] +
mov eax dword_458030 +
or eax 2 +
mov dword_4596DC 1 +
mov dword_458030 eax +
test ecx 100000h +
jz loc_41C2F5  +
or eax 4 +
mov dword_4596DC 2 +
mov dword_458030 eax +
test ecx 8000000h +
jz loc_41C2F5  +
test ecx 10000000h +
jz loc_41C2F5  +
xor ecx ecx +
xor eax eax +
sub esp 324h +
test eax eax +
retn   +
***
push esi  +
and dword_4596E4 0 +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
sub esp 14h +
mov ecx dword_458018 +
retn   +
***
push 0  +
call sub_404490  +
xor eax eax +
mov esi offset unk_454F10 +
mov ebx offset unk_454F10 +
cmp esi ebx +
jnb loc_41C678  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_41C670  +
mov ecx edi +
call ds:off_442218  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_41C660  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov esi offset unk_454F18 +
mov ebx offset unk_454F18 +
cmp esi ebx +
jnb loc_41C6A9  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_41C6A1  +
mov ecx edi +
call ds:off_442218  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_41C691  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
sub ecx eax +
call sub_41C730  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_41DD10  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+2Ch] +
pop esi  +
jmp $+5  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_41C77C  +
push dword ptr [esi]  +
call sub_424926  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi] offset off_445964 +
mov eax [edx+4] +
mov [edi+4] eax +
mov ecx [edx+8] +
mov [edi+8] ecx +
mov dword ptr [edi+0Ch] 0 +
test ecx ecx +
jz loc_41C7C8  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_4] +
mov dword ptr [edi] offset off_445964 +
mov [edi+4] eax +
mov [edi+8] ecx +
mov dword ptr [edi+0Ch] 0 +
test ecx ecx +
jz loc_41C80B  +
cmp [ebp+arg_8] 0 +
jz loc_41C80B  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_442218  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [edi+8] +
mov dword ptr [edi] offset off_445964 +
test ecx ecx +
jz loc_41C842  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
pop edi  +
test eax eax +
jz locret_41C851  +
push eax  +
call ds:LocalFree  +
retn   +
***
push edi  +
mov edi ecx +
mov ecx [edi+8] +
mov dword ptr [edi] offset off_445964 +
test ecx ecx +
jz loc_41C885  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_442218  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_41C893  +
push eax  +
call ds:LocalFree  +
test [ebp+arg_0] 1 +
jz loc_41C8A4  +
push 10h  +
push edi  +
call sub_41B8B8  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
sub esp 10h +
push ecx  +
sub esp 18h +
sub esp 40h +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
push ecx  +
push ebx  +
cld   +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
xor ecx [ebp+arg_4] +
call sub_41B626  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 66h +
jz loc_41CBD9  +
mov eax [ebp+arg_4] +
mov dword ptr [eax+24h] 1 +
xor eax eax +
inc eax  +
jmp loc_41CC43  +
jmp loc_41CC43  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+18h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+14h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push [ebp+arg_0]  +
call sub_41F9C2  +
add esp 20h +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+24h] 0 +
jnz loc_41CC17  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_41CAB9  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 123h  +
call sub_41C9A3  +
add esp 1Ch +
mov eax [ebp+var_4] +
mov ebx [ebp+arg_4] +
mov esp [ebx+1Ch] +
mov ebp [ebx+20h] +
jmp eax  +
xor eax eax +
inc eax  +
pop ebx  +
leave   +
retn   +
***
push edi  +
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+4] 0 +
jz loc_41CCF4  +
push dword ptr [esi]  +
call sub_424926  +
pop ecx  +
and dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
pop esi  +
pop ebp  +
retn   +
***
call sub_41C4E0  +
mov ecx [ebp+arg_0] +
cmp [ebp+arg_4] 0 +
call sub_41F0CC  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_41F0CC  +
call sub_41F0CC  +
add eax 14h +
retn   +
***
push esi  +
mov esi dword_459764 +
test esi esi +
jz loc_41CEE5  +
mov ecx esi +
call ds:off_442218  +
call esi  +
call sub_42AE29  +
int 3  +
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi [ebx+0Ch] +
xor eax eax +
movzx ecx word ptr [edi] +
mov [ebp-8] ecx +
cmp ax cx +
jnz loc_41CF1D  +
cmp dword_4596DC 1 +
jle loc_41D014  +
mov eax edi +
and eax 0FFFh +
push 2  +
pop esi  +
cmp eax 0FF0h +
ja loc_41CF40  +
movups xmm0 oword ptr [edi] +
jmp loc_41CF6B  +
push 8  +
pxor xmm0 xmm0 +
movzx ecx cx +
pop edx  +
movzx eax cx +
psrldq xmm0 2 +
pinsrw xmm0 eax +
xor eax eax +
cmp ax cx +
jz loc_41CF63  +
add edi esi +
movzx ecx word ptr [edi] +
sub edx 1 +
jnz loc_41CF4A  +
mov ecx [ebp-8] +
mov edx [ebx+8] +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41CFD7  +
add edx 10h +
mov ecx [ebp-8] +
jmp loc_41CF6E  +
***
lea edx [edx+ecx*2] +
mov ecx [ebx+0Ch] +
mov edi edx +
mov eax edi +
mov [ebp-4] ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41CFEE  +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41CFEE  +
movups xmm1 oword ptr [ecx] +
cmp ah [ebx+0Fh] +
or eax 41783C71h +
mov ecx [ebp-4] +
add edi 10h +
add ecx 10h +
jmp loc_41CFA0  +
***
cmp ax cx +
jz loc_41CF9B  +
add edx esi +
jmp loc_41CF6E  +
***
cmp [edi] ax +
jnz loc_41D006  +
add edi esi +
add ecx esi +
jmp loc_41CFA0  +
***
add edx esi +
jmp loc_41CF87  +
***
add ecx 10h +
jmp loc_41D035  +
***
add edx 10h +
add edi 10h +
jmp loc_41D082  +
***
cmp [edx] ax +
jnz loc_41D0E9  +
add edx esi +
add edi esi +
jmp loc_41D082  +
***
mov edi [ebx+0Ch] +
add ecx esi +
jmp loc_41D035  +
***
mov eax [ebp+arg_0] +
sub esp 10h +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
mov ebx 19930520h +
mov [ebp+var_10] eax +
test edi edi +
jz loc_41D1ED  +
test byte ptr [edi] 10h +
jz loc_41D1DF  +
mov ecx [eax] +
sub ecx 4 +
push esi  +
push ecx  +
mov eax [ecx] +
mov esi [eax+20h] +
mov ecx esi +
mov edi [eax+18h] +
call ds:off_442218  +
call esi  +
mov eax [ebp+var_10] +
pop esi  +
test edi edi +
jz loc_41D1ED  +
test byte ptr [edi] 8 +
jz loc_41D1ED  +
mov ebx 1994000h +
mov [ebp+var_8] eax +
lea eax [ebp+Arguments] +
push eax  +
push 3  +
push 1  +
push 0E06D7363h  +
mov [ebp+Arguments] ebx +
mov [ebp+var_4] edi +
call ds:RaiseException  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_41D230  +
cmp edi eax +
jb loc_41D4C4  +
cmp ecx 20h +
jb loc_41D70B  +
cmp ecx 80h +
jnb loc_41D254  +
bt dword_458030 1 +
jb loc_41D6DD  +
jmp loc_41D437  +
bt dword_4596E0 1 +
jnb loc_41D267  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_41D280  +
bt dword_458030 1 +
jb loc_41D660  +
bt dword_4596E0 0 +
jnb loc_41D437  +
test edi 3 +
jnz loc_41D437  +
test esi 3 +
jnz loc_41D452  +
bt edi 2 +
jnb loc_41D2B9  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_41D2D0  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_41D33D  +
bt esi 3 +
jnb loc_41D396  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_41D3EC  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_41D404  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_41D3EC  +
***
bt ecx 2 +
jnb loc_41D417  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_41D42E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_41D474[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_41D452  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_41D43F  +
mov edx ecx +
cmp ecx 20h +
jb loc_41D70B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_41D474[edx*4]  +
jmp dword ptr ds:loc_41D484[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_41D624  +
bt dword_458030 1 +
jb loc_41D575  +
test edi 3 +
jz loc_41D4FD  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_41D4F0  +
cmp ecx 20h +
jb loc_41D624  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_41D520[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_41D58C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_41D57D  +
cmp ecx 80h +
jb loc_41D5FC  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_41D58C  +
cmp ecx 20h +
jb loc_41D624  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_41D601  +
test ecx 0FFFFFFFCh +
jz loc_41D641  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_41D62C  +
test ecx ecx +
jz loc_41D654  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_41D645  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_41D660  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_41D750  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_41D6DD  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_41D680  +
test ecx ecx +
jz loc_41D740  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_41D70B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_41D6F0  +
and ecx 1Fh +
jz loc_41D740  +
mov eax ecx +
shr ecx 2 +
jz loc_41D726  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_41D717  +
mov ecx eax +
and ecx 3 +
jz loc_41D740  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41D72D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_41D76C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41D763  +
shr eax 2 +
jz loc_41D77E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_41D771  +
pop ecx  +
jmp loc_41D66D  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_41D7B0  +
cmp edi eax +
jb loc_41DA44  +
cmp ecx 20h +
jb loc_41DC8B  +
cmp ecx 80h +
jnb loc_41D7D4  +
bt dword_458030 1 +
jb loc_41DC5D  +
jmp loc_41D9B7  +
bt dword_4596E0 1 +
jnb loc_41D7E7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_41D800  +
bt dword_458030 1 +
jb loc_41DBE0  +
bt dword_4596E0 0 +
jnb loc_41D9B7  +
test edi 3 +
jnz loc_41D9B7  +
test esi 3 +
jnz loc_41D9D2  +
bt edi 2 +
jnb loc_41D839  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_41D850  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_41D8BD  +
bt esi 3 +
jnb loc_41D916  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_41D96C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_41D984  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_41D96C  +
***
bt ecx 2 +
jnb loc_41D997  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_41D9AE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_41D9F4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_41D9D2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_41D9BF  +
mov edx ecx +
cmp ecx 20h +
jb loc_41DC8B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_41D9F4[edx*4]  +
jmp dword ptr ds:loc_41DA04[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_41DBA4  +
bt dword_458030 1 +
jb loc_41DAF5  +
test edi 3 +
jz loc_41DA7D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_41DA70  +
cmp ecx 20h +
jb loc_41DBA4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_41DAA0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_41DB0C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_41DAFD  +
cmp ecx 80h +
jb loc_41DB7C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_41DB0C  +
cmp ecx 20h +
jb loc_41DBA4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_41DB81  +
test ecx 0FFFFFFFCh +
jz loc_41DBC1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_41DBAC  +
test ecx ecx +
jz loc_41DBD4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_41DBC5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_41DBE0  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_41DCD0  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_41DC5D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_41DC00  +
test ecx ecx +
jz loc_41DCC0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_41DC8B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_41DC70  +
and ecx 1Fh +
jz loc_41DCC0  +
mov eax ecx +
shr ecx 2 +
jz loc_41DCA6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_41DC97  +
mov ecx eax +
and ecx 3 +
jz loc_41DCC0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41DCAD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_41DCEC  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41DCE3  +
shr eax 2 +
jz loc_41DCFE  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_41DCF1  +
pop ecx  +
jmp loc_41DBED  +
***
mov ecx [esp+arg_8] +
call sub_41F16C  +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz locret_41DE7D  +
cmp [ecx+18h] eax +
setnle al  +
retn   +
***
mov eax [esp+arg_8] +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_41EE4A  +
sub eax 1 +
jz loc_41EE3C  +
sub eax 1 +
jz loc_41EE22  +
sub eax 1 +
jz loc_41EDF6  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_41EDA3  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_41E28B  +
mov eax [esi] +
cmp eax [edx] +
jz loc_41DFC8  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jnz loc_41DF9C  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jnz loc_41DF9C  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_41DFAC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41DFCA  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_41DFCA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DFCA  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_41E029  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jnz loc_41DFFD  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jnz loc_41DFFD  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_41E00D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E02B  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_41E02B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E02B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_41E08A  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jnz loc_41E05E  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jnz loc_41E05E  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_41E06E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E08C  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_41E08C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E08C  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_41E0EB  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jnz loc_41E0BF  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jnz loc_41E0BF  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_41E0CF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E0ED  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_41E0ED  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E0ED  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_41E14D  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jnz loc_41E121  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jnz loc_41E121  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_41E131  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E14F  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_41E14F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E14F  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_41E1AE  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jnz loc_41E182  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jnz loc_41E182  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_41E192  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E1B0  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_41E1B0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E1B0  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_41E20F  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jnz loc_41E1E3  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jnz loc_41E1E3  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_41E1F3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E211  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_41E211  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E211  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_41E270  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jnz loc_41E244  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jnz loc_41E244  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_41E254  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E272  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_41E272  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E272  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_41DF74  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_41E53F  +
jmp ds:off_41EE51[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_41E2F6  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_41E2CA  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_41E2CA  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_41E2DA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E2F8  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_41E2F8  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E2F8  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_41E357  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_41E32B  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_41E32B  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_41E33B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E359  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_41E359  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E359  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_41E3B8  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_41E38C  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_41E38C  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_41E39C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E3BA  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_41E3BA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E3BA  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_41E419  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_41E3ED  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jnz loc_41E3ED  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_41E3FD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E41B  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_41E41B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E41B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_41E47B  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jnz loc_41E44F  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_41E44F  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_41E45F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E47D  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_41E47D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E47D  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_41E4DC  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_41E4B0  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_41E4B0  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_41E4C0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E4DE  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_41E4DE  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E4DE  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_41E539  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_41E50D  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_41E50D  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_41E51D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E53B  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_41E53B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E53B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_41EE4C  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_41E5A0  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_41E574  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_41E574  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_41E584  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E5A2  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_41E5A2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E5A2  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_41E5FD  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_41E5D1  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_41E5D1  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_41E5E1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E5FF  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_41E5FF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E5FF  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_41E65E  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_41E632  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_41E632  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_41E642  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E660  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_41E660  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E660  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_41E6BF  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_41E693  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_41E693  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_41E6A3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E6C1  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_41E6C1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E6C1  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_41E720  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_41E6F4  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jnz loc_41E6F4  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_41E704  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E722  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_41E722  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E722  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_41E782  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_41E756  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_41E756  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_41E766  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E784  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_41E784  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E784  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_41E7E3  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_41E7B7  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_41E7B7  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_41E7C7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E7E5  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_41E7E5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E7E5  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_41E541  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E541  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_41E867  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_41E83B  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_41E83B  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_41E84B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E869  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_41E869  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E869  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_41E8C8  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_41E89C  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_41E89C  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_41E8AC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E8CA  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_41E8CA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E8CA  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_41E929  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_41E8FD  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_41E8FD  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_41E90D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E92B  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_41E92B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E92B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_41E98A  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_41E95E  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_41E95E  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_41E96E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E98C  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_41E98C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E98C  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_41E9EB  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_41E9BF  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_41E9BF  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_41E9CF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E9ED  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_41E9ED  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E9ED  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_41EA4D  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jnz loc_41EA21  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_41EA21  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_41EA31  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41EA4F  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_41EA4F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41EA4F  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_41EAAE  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_41EA82  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_41EA82  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_41EA92  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41EAB0  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_41EAB0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41EAB0  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_41E53F  +
jmp loc_41ED80  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_41EB23  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jnz loc_41EAF7  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_41EAF7  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_41EB07  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41EB25  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_41EB25  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41EB25  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_41EB84  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_41EB58  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_41EB58  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_41EB68  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41EB86  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_41EB86  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41EB86  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_41EBE5  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_41EBB9  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_41EBB9  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_41EBC9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41EBE7  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_41EBE7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41EBE7  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_41EC46  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_41EC1A  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_41EC1A  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_41EC2A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41EC48  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_41EC48  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41EC48  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_41ECA8  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jnz loc_41EC7C  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_41EC7C  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_41EC8C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41ECAA  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_41ECAA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41ECAA  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_41ED09  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_41ECDD  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jnz loc_41ECDD  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_41ECED  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41ED0B  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_41ED0B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41ED0B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_41ED6A  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_41ED3E  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_41ED3E  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_41ED4E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41ED6C  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_41ED6C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41ED6C  +
xor ecx ecx +
test ecx ecx +
jnz loc_41E541  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_41ED90  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_41E7ED  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41E541  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jnz loc_41EDC8  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jnz loc_41EDC8  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_41EDD8  +
xor ecx ecx +
test esi esi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41EDF2  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_41EDF2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_41EE4C  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_41EE12  +
movzx edx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
sub edx eax +
jz loc_41EE18  +
xor ecx ecx +
test edx edx +
jmp loc_41EDCC  +
movzx ecx byte ptr [ecx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_41EDE0  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_41EE12  +
movzx ecx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_41EDE0  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_41EDE0  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_41FFC9  +
cmp [ebp+arg_0] 0 +
jnz loc_41EF03  +
call sub_41F1D6  +
call sub_420005  +
mov al 1 +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_41EF2F  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_41B626  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_41B626  +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov byte ptr [ebp-1] 0 +
push dword ptr [ebx]  +
mov dword ptr [ebp-0Ch] 1 +
call sub_43EAB2  +
mov [ebx] eax +
mov ebx [ebp+0Ch] +
mov eax [ebx+8] +
lea esi [ebx+10h] +
xor eax dword_458018 +
push esi  +
push eax  +
mov [ebp-10h] esi +
mov [ebp-8] eax +
call sub_41EF10  +
push dword ptr [ebp+10h]  +
call sub_41FF6C  +
mov eax [ebp+8] +
add esp 10h +
mov edi [ebx+0Ch] +
test byte ptr [eax+4] 66h +
jnz loc_41EFFD  +
mov [ebp-1Ch] eax +
mov eax [ebp+10h] +
mov [ebp-18h] eax +
lea eax [ebp-1Ch] +
mov [ebx-4] eax +
cmp edi 0FFFFFFFEh +
jz loc_41F020  +
mov ecx [ebp-8] +
lea eax [edi+2] +
lea eax [edi+eax*2] +
mov ebx [ecx+eax*4] +
lea eax [ecx+eax*4] +
mov ecx [eax+4] +
mov [ebp-14h] eax +
test ecx ecx +
jz loc_41EFE4  +
mov edx esi +
call sub_420140  +
mov cl 1 +
mov [ebp-1] cl +
test eax eax +
js loc_41EFF4  +
jg loc_41F02A  +
jmp loc_41EFE7  +
mov cl [ebp-1] +
mov edi ebx +
cmp ebx 0FFFFFFFEh +
jnz loc_41EFB7  +
test cl cl +
jz loc_41F020  +
jmp loc_41F014  +
mov dword ptr [ebp-0Ch] 0 +
jmp loc_41F014  +
cmp edi 0FFFFFFFEh +
jz loc_41F020  +
push offset dword_458018  +
push esi  +
mov edx 0FFFFFFFEh +
mov ecx ebx +
call sub_420190  +
push esi  +
push dword ptr [ebp-8]  +
call sub_41EF10  +
add esp 8 +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_41F06D  +
cmp ds:off_445968 0 +
jz loc_41F06D  +
push offset off_445968  +
call sub_43E030  +
add esp 4 +
test eax eax +
jz loc_41F06A  +
mov esi ds:off_445968 +
mov ecx esi +
push 1  +
push dword ptr [ebp+8]  +
call ds:off_442218  +
call esi  +
mov esi [ebp-10h] +
add esp 8 +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov edx eax +
call sub_420174  +
mov eax [ebp+0Ch] +
cmp [eax+0Ch] edi +
jz loc_41F091  +
push offset dword_458018  +
push esi  +
mov edx edi +
mov ecx eax +
call sub_420190  +
mov eax [ebp+0Ch] +
push esi  +
push dword ptr [ebp-8]  +
mov [eax+0Ch] ebx +
call sub_41EF10  +
mov ecx [ebp-14h] +
add esp 8 +
mov edx esi +
mov ecx [ecx+8] +
call sub_420158  +
mov eax [ebp+arg_0] +
call sub_41F0DA  +
cmp dwTlsIndex 0FFFFFFFFh +
cmp dwTlsIndex 0FFFFFFFFh +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
call sub_41C4E0  +
call sub_41C4E0  +
mov esp [ebp-18h] +
cmp [ebp+arg_18] 0 +
sub esp 68h +
sub esp 38h +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_8]  +
call sub_41FF6C  +
pop ecx  +
call sub_41F0CC  +
mov ecx [ebp+arg_10] +
xor esi esi +
mov edx [ebp+arg_0] +
mov ebx 1FFFFFFFh +
mov edi 19930522h +
cmp [eax+20h] esi +
jnz loc_41FA0F  +
cmp dword ptr [edx] 0E06D7363h +
jz loc_41FA0F  +
cmp dword ptr [edx] 80000026h +
jz loc_41FA0F  +
mov eax [ecx] +
and eax ebx +
cmp eax edi +
jb loc_41FA0F  +
test byte ptr [ecx+20h] 1 +
jnz loc_41FABC  +
test byte ptr [edx+4] 66h +
jz loc_41FA3B  +
cmp [ecx+4] esi +
jz loc_41FABC  +
cmp [ebp+arg_14] esi +
jnz loc_41FABC  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
call sub_41FD4B  +
add esp 0Ch +
jmp loc_41FABC  +
cmp [ecx+0Ch] esi +
jnz loc_41FA5E  +
mov eax [ecx] +
and eax ebx +
cmp eax 19930521h +
jb loc_41FA50  +
cmp [ecx+1Ch] esi +
jnz loc_41FA5E  +
cmp eax edi +
jb loc_41FABC  +
mov eax [ecx+20h] +
shr eax 2 +
test al 1 +
jz loc_41FABC  +
cmp dword ptr [edx] 0E06D7363h +
jnz loc_41FAA0  +
cmp dword ptr [edx+10h] 3 +
jb loc_41FAA0  +
cmp [edx+14h] edi +
jbe loc_41FAA0  +
mov eax [edx+1Ch] +
mov esi [eax+8] +
test esi esi +
jz loc_41FAA0  +
movzx eax [ebp+arg_1C] +
push eax  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push ecx  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call ds:off_442218  +
call esi  +
add esp 20h +
jmp loc_41FABF  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push dword ptr [ebp+arg_1C]  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call sub_41F448  +
add esp 20h +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
and dword ptr [ecx+4] 0 +
call sub_41C4E0  +
mov eax [ebp-30h] +
call sub_41C01F  +
push 0FFFFFFFFh  +
call sub_41C4E0  +
call sub_41F0CC  +
cmp dword ptr [eax+18h] 0 +
jle locret_41FE44  +
call sub_41F0CC  +
dec dword ptr [eax+18h]  +
retn   +
***
sub esp 18h +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
mov eax [ebp+arg_0] +
mov eax [eax+1Ch] +
pop ebp  +
retn   +
***
sub esp 4 +
mov eax ds:off_442218 +
mov eax ds:off_442218 +
mov edi offset stru_4597A4 +
test esi esi +
jz loc_420030  +
imul eax esi +
push edi  +
lea edi dword_45978C[eax] +
push edi  +
call ds:DeleteCriticalSection  +
dec dword_4597BC  +
sub edi 18h +
sub esi 1 +
jnz loc_42001A  +
pop edi  +
mov al 1 +
pop esi  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_420115  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_41B626  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_420040  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
push ebx  +
mov ebp edx +
xor eax eax +
xor ebx ebx +
xor edx edx +
xor esi esi +
xor edi edi +
call ecx  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov ebp edx +
mov esi ecx +
mov eax ecx +
push 1  +
call sub_42053C  +
xor eax eax +
xor ebx ebx +
xor ecx ecx +
xor edx edx +
xor edi edi +
jmp esi  +
***
push ebx  +
push esi  +
push edi  +
push 0  +
push edx  +
push offset loc_420189  +
push ecx  +
call ds:RtlUnwind  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edx  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov esi [eax+4] +
mov eax [ebp+arg_8] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_420439  +
push dword ptr [ebp+8]  +
call ds:RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_420441  +
push large dword ptr fs:0  +
mov eax dword_458018 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_4204F8  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_4204CB  +
cmp esi [esp+18h+arg_4] +
jbe loc_4204F8  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_4204F6  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_42053C  +
mov eax [ebx+esi*4+8] +
call sub_42055B  +
jmp loc_4204AF  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_420441 +
jnz locret_42052C  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_42052C  +
mov eax 1 +
retn   +
***
mov ebx offset unk_458080 +
jmp loc_420547  +
***
mov ebx offset unk_458080 +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0FFFFFFFFh +
push edi  +
jz loc_420583  +
push [ebp+arg_0]  +
call sub_41C4D6  +
pop ecx  +
push 50h  +
lea eax [ebp+var_320] +
push 0  +
push eax  +
call sub_41DD10  +
push 2CCh  +
lea eax [ebp+var_2D0] +
push 0  +
push eax  +
call sub_41DD10  +
lea eax [ebp+var_320] +
add esp 18h +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_20C] eax +
mov [ebp+var_2D0] 10001h +
mov eax [eax-4] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_320] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_31C] eax +
mov eax [ebp+4] +
mov [ebp+var_314] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov edi eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_42068A  +
test edi edi +
jnz loc_42068A  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_42068A  +
push [ebp+arg_0]  +
call sub_41C4D6  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_41B626  +
leave   +
retn   +
mov edi edi +
xor eax eax +
mov edi edi +
test eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_0] +
mov byte ptr [edi+0Ch] 0 +
lea ebx [edi+4] +
test ecx ecx +
jz loc_42143F  +
mov eax [ecx] +
mov [ebx] eax +
mov eax [ecx+4] +
jmp loc_421454  +
cmp dword_459BBC 0 +
jnz loc_421459  +
mov eax off_458280 +
mov [ebx] eax +
mov eax off_458284 +
mov [ebx+4] eax +
jmp loc_42149A  +
push esi  +
call sub_42E279  +
mov [edi] eax +
lea esi [edi+8] +
push ebx  +
push eax  +
mov ecx [eax+4Ch] +
mov [ebx] ecx +
mov ecx [eax+48h] +
mov [esi] ecx +
call sub_42E893  +
push esi  +
push dword ptr [edi]  +
call sub_42E8C0  +
mov ecx [edi] +
add esp 10h +
mov eax [ecx+350h] +
pop esi  +
test al 2 +
jnz loc_42149A  +
or eax 2 +
mov [ecx+350h] eax +
mov byte ptr [edi+0Ch] 1 +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_422DB6  +
test al al +
jz loc_421787  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_42183F  +
call sub_424F08  +
mov dword ptr [eax] 16h +
call sub_42070A  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_42181D  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_421830  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_421550  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_421777  +
cmp eax 7 +
ja loc_421787  +
jmp ds:off_42185B[eax*4]  +
mov ecx esi +
call sub_421B39  +
jmp loc_421815  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_42181D  +
mov ecx esi +
call sub_421ABF  +
jmp loc_421815  +
mov ecx esi +
call sub_4223CA  +
jmp loc_421815  +
mov [esi+28h] ebx +
jmp loc_42181D  +
mov ecx esi +
call sub_421C20  +
jmp loc_421815  +
mov ecx esi +
call sub_421C6D  +
jmp loc_421815  +
mov ecx esi +
call sub_421F33  +
test al al +
jz loc_421787  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_421798  +
inc dword ptr [esi+10h]  +
mov ecx esi +
call sub_422DD1  +
test al al +
jz loc_421787  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_42178D  +
mov eax [esi+18h] +
jmp loc_42178A  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_422DB6  +
test al al +
jz loc_4218AB  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_421968  +
call sub_424F08  +
mov dword ptr [eax] 16h +
call sub_42070A  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_421942  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_421959  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_421590  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_42189B  +
cmp eax 7 +
ja loc_4218AB  +
jmp ds:off_421983[eax*4]  +
mov ecx esi +
call sub_421B58  +
jmp loc_42193A  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_421942  +
mov ecx esi +
call sub_421AFC  +
jmp loc_42193A  +
mov ecx esi +
call sub_4223F5  +
jmp loc_42193A  +
mov [esi+28h] ebx +
jmp loc_421942  +
mov ecx esi +
call sub_421C46  +
jmp loc_42193A  +
mov ecx esi +
call sub_421DBB  +
jmp loc_42193A  +
mov ecx esi +
call sub_422165  +
test al al +
jz loc_4218AB  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_4218BC  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_422DD1  +
test al al +
jz loc_4218AB  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_4218B1  +
mov eax [esi+18h] +
jmp loc_4218AE  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_422DB6  +
test al al +
jz loc_4219D3  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_421A81  +
call sub_424F08  +
mov dword ptr [eax] 16h +
call sub_42070A  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_421A6A  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_421A81  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_4215D2  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_4219C3  +
cmp eax 7 +
ja loc_4219D3  +
jmp ds:off_421A9F[eax*4]  +
mov ecx esi +
call sub_421B58  +
jmp loc_421A62  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_421A6A  +
mov ecx esi +
call sub_421AFC  +
jmp loc_421A62  +
mov ecx esi +
call sub_4223F5  +
jmp loc_421A62  +
mov [esi+28h] ebx +
jmp loc_421A6A  +
mov ecx esi +
call sub_421C46  +
jmp loc_421A62  +
mov ecx esi +
call sub_421DBB  +
jmp loc_421A62  +
mov ecx esi +
call sub_422165  +
test al al +
jz loc_4219D3  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_4219E4  +
add dword ptr [esi+10h] 2 +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_4219D9  +
mov eax [esi+18h] +
jmp loc_4219D6  +
***
movsx eax byte ptr [ecx+31h] +
movzx eax word ptr [ecx+32h] +
call sub_421B77  +
call sub_421BA1  +
mov edi edi +
lea edx [ecx+18h] +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov al [ecx+31h] +
movzx edx word ptr [ecx+32h] +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_42244E  +
movzx eax ds:byte_422469[eax] +
jmp ds:off_422455[eax*4]  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
pop eax  +
pop ebp  +
retn   +
push 4  +
jmp loc_422443  +
push 8  +
jmp loc_422443  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_420E4E  +
add esp 1Ch +
pop ebp  +
retn   +
***
mov edi edi +
call sub_41C4E0  +
test esi esi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
retn   +
***
push esi  +
call sub_41C4E0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
push esi  +
call sub_423735  +
add esp 0Ch +
test eax eax +
jnz loc_4237EB  +
lea eax [esi-1] +
jmp loc_4237F2  +
mov eax esi +
jg loc_4237F2  +
lea eax [esi+1] +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov edx [ebp+0Ch] +
push ebx  +
movzx eax dx +
push esi  +
push edi  +
cmp eax 5Ah +
jbe loc_423D71  +
cmp eax 6Eh +
ja loc_423B09  +
jz loc_423AFC  +
cmp eax 65h +
jbe loc_4238E6  +
sub eax 67h +
jz loc_4238A8  +
sub eax 1 +
jnz loc_423837  +
push 62h  +
pop edx  +
push edx  +
pop eax  +
jmp loc_42380E  +
***
dec eax  +
sub eax 1 +
jz loc_42387D  +
sub eax 3 +
jnz loc_423AB7  +
mov eax [ebp+10h] +
mov ecx [eax+10h] +
cmp ecx 0Bh +
ja loc_423AA7  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
lea eax [ecx+1] +
push eax  +
call sub_42420D  +
add esp 14h +
jmp loc_4241D9  +
mov eax [ebp+10h] +
mov ecx [eax+1Ch] +
cmp ecx 16Dh +
ja loc_423AA7  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 3  +
jmp loc_42386C  +
***
mov ecx [ebp+10h] +
mov edx [ecx+14h] +
lea eax [edx+76Ch] +
cmp eax 270Fh +
ja loc_423AA7  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [ecx+1Ch]  +
push dword ptr [ecx+18h]  +
push edx  +
call sub_4237CA  +
add esp 0Ch +
add eax 76Ch +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
push edx  +
jmp loc_423870  +
***
jz loc_423AD0  +
sub eax 61h +
jz loc_423A9C  +
sub eax 1 +
jz loc_423A74  +
sub eax 1 +
jz loc_42393B  +
sub eax 1 +
jnz loc_423AB7  +
mov eax [ebp+10h] +
mov ecx [eax+0Ch] +
lea eax [ecx-1] +
cmp eax 1Eh +
ja loc_423AA7  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push ecx  +
jmp loc_423870  +
***
mov ebx [ebp+1Ch] +
mov eax [ebp+20h] +
cmp ebx offset off_447CD8 +
jnz loc_423A2A  +
test al al +
jnz loc_423A2A  +
mov edi [ebp+18h] +
xor esi esi +
push esi  +
push ebx  +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 61h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 1Ch +
test al al +
jnz loc_423985  +
call sub_424F08  +
mov dword ptr [eax] 16h +
jmp loc_423AB7  +
push edi  +
push ebx  +
push offset asc_452760  +
call sub_42430D  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 62h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jz loc_423975  +
push edi  +
push ebx  +
push offset asc_452760  +
call sub_42430D  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 65h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jz loc_423975  +
push edi  +
push ebx  +
push offset asc_452760  +
call sub_42430D  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 54h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jz loc_423975  +
push edi  +
push ebx  +
push offset asc_452760  +
call sub_42430D  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jnz loc_4241D9  +
jmp loc_423975  +
***
push ebx  +
push dword ptr [ebp+18h]  +
movzx eax al +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_42433E  +
add esp 18h +
test al al +
jz loc_423975  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_452760  +
call sub_42430D  +
push ebx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
push dword ptr [ebp+8]  +
call sub_42433E  +
add esp 24h +
jmp loc_423A1D  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
cmp ecx 0Bh +
ja loc_423AA7  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0ECh]  +
call sub_42430D  +
add esp 0Ch +
jmp loc_4241D9  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
cmp ecx 6 +
jbe loc_423ABE  +
call sub_424F08  +
mov dword ptr [eax] 16h +
call sub_42070A  +
xor al al +
jmp loc_4241DB  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0B4h]  +
jmp loc_423A8F  +
***
mov eax [ebp+10h] +
mov edx [eax+0Ch] +
lea eax [edx-1] +
cmp eax 1Eh +
ja loc_423AA7  +
mov cl [ebp+20h] +
xor cl 1 +
shl cl 5 +
movsx cx cl +
movzx ecx cx +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_4238E3  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_4464A0  +
jmp loc_423A8F  +
***
cmp eax 77h +
ja loc_423C65  +
jz loc_423B2E  +
sub eax 70h +
jz loc_423C34  +
dec eax  +
sub eax 1 +
jz loc_423B76  +
dec eax  +
sub eax 1 +
jz loc_423B66  +
sub eax 1 +
jnz loc_423AB7  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
cmp ecx 6 +
ja loc_423AA7  +
test ecx ecx +
jnz loc_423B4A  +
cmp dx 75h +
jnz loc_423B4A  +
push 7  +
pop ecx  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 1  +
jmp loc_423935  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_4464A4  +
jmp loc_423A8F  +
***
mov esi [ebp+1Ch] +
push dword ptr [ebp+20h]  +
push esi  +
cmp esi offset off_447CD8 +
jnz loc_423C19  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 49h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 1Ch +
test al al +
jz loc_423975  +
push edi  +
push ebx  +
push offset asc_453420  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jz loc_423975  +
push edi  +
push ebx  +
push offset asc_453420  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 53h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jz loc_423975  +
push edi  +
push ebx  +
push offset asc_452760  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 70h  +
jmp loc_423A12  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 58h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 1Ch +
jmp loc_423A1D  +
***
mov eax [ebp+10h] +
mov eax [eax+8] +
cmp eax 17h +
ja loc_423AA7  +
cmp eax 0Bh +
mov eax [ebp+1Ch] +
jg loc_423C53  +
mov eax [eax+14Ch] +
jmp loc_423C59  +
mov eax [eax+150h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push eax  +
jmp loc_423A8F  +
***
sub eax 78h +
jz loc_423D50  +
sub eax 1 +
jz loc_423D1D  +
sub eax 1 +
jnz loc_423AB7  +
call sub_42FCE5  +
lea eax [ebp-4] +
xor esi esi +
push eax  +
mov [ebp-4] esi +
call sub_42F54B  +
pop ecx  +
test eax eax +
jnz loc_423AA7  +
mov eax [ebp+10h] +
cmp [eax+20h] esi +
jz loc_423CC4  +
lea eax [ebp-8] +
mov [ebp-8] esi +
push eax  +
call sub_42F51F  +
pop ecx  +
test eax eax +
jnz loc_423AA7  +
mov ecx [ebp-4] +
add ecx [ebp-8] +
mov [ebp-4] ecx +
jmp loc_423CC7  +
mov ecx [ebp-4] +
mov eax ecx +
cdq   +
xor eax edx +
sub eax edx +
cdq   +
push 3Ch  +
pop esi  +
idiv  esi +
cdq   +
idiv  esi +
test ecx ecx +
mov ecx offset asc_4538A0 +
mov edi edx +
mov esi eax +
js loc_423CE9  +
mov ecx offset asc_453894 +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push ecx  +
call sub_42430D  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
call sub_42420D  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push edi  +
call sub_42420D  +
add esp 34h +
jmp loc_4241D9  +
mov eax [ebp+10h] +
mov eax [eax+14h] +
add eax 76Ch +
cmp eax 270Fh +
ja loc_423AA7  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movzx ecx cl +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_4238DD  +
***
push dword ptr [ebp+1Ch]  +
movzx eax byte ptr [ebp+20h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_42433E  +
add esp 18h +
jmp loc_423A1D  +
***
jz loc_42416E  +
cmp eax 4Dh +
ja loc_423FC3  +
jz loc_423FB5  +
cmp eax 44h +
ja loc_423EAF  +
jz loc_423E42  +
sub eax 25h +
jz loc_423E32  +
sub eax 1Ch +
jz loc_423E0E  +
sub eax 1 +
jz loc_423DEA  +
sub eax 1 +
jnz loc_423AB7  +
mov eax [ebp+10h] +
mov eax [eax+14h] +
add eax 76Ch +
cmp eax 270Fh +
ja loc_423AA7  +
cmp byte ptr [ebp+20h] 0 +
cdq   +
setnz cl  +
dec cl  +
and cl 30h +
movzx ecx cl +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push 64h  +
pop ecx  +
idiv  ecx +
jmp loc_42386F  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
cmp ecx 0Bh +
ja loc_423AA7  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+11Ch]  +
jmp loc_423A8F  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
cmp ecx 6 +
ja loc_423AA7  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0D0h]  +
jmp loc_423A8F  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_4464A8  +
jmp loc_423A8F  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 1Ch +
test al al +
jz loc_423975  +
push esi  +
push edi  +
mov ebx offset asc_45389C +
push ebx  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jz loc_423975  +
push esi  +
push edi  +
push ebx  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 79h  +
jmp loc_423A12  +
***
sub eax 46h +
jz loc_423F48  +
sub eax 1 +
jz loc_423F0E  +
sub eax 1 +
jz loc_423EFA  +
sub eax 1 +
jnz loc_423AB7  +
mov eax [ebp+10h] +
mov eax [eax+8] +
cmp eax 17h +
ja loc_423AA7  +
push 0Ch  +
cdq   +
pop ecx  +
idiv  ecx +
test edx edx +
jnz loc_423EE6  +
mov edx ecx +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
jmp loc_423AEF  +
***
mov eax [ebp+10h] +
mov ecx [eax+8] +
cmp ecx 17h +
jbe loc_42391E  +
jmp loc_423AA7  +
***
mov ecx [ebp+10h] +
mov edx [ecx+14h] +
lea eax [edx+76Ch] +
cmp eax 270Fh +
ja loc_423AA7  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 4  +
push dword ptr [ecx+1Ch]  +
push dword ptr [ecx+18h]  +
push edx  +
call sub_4237CA  +
add esp 0Ch +
add eax 76Ch +
jmp loc_42386F  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 1Ch +
test al al +
jz loc_423975  +
push esi  +
push edi  +
mov ebx offset asc_453894 +
push ebx  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jz loc_423975  +
push esi  +
push edi  +
push ebx  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
jmp loc_423A12  +
***
mov eax [ebp+10h] +
mov ecx [eax+4] +
cmp ecx 3Bh +
jmp loc_423F03  +
***
push 7  +
sub eax 52h +
pop edi  +
cmp eax edi +
ja loc_423AB7  +
jmp ds:off_4241ED[eax*4]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 1Ch +
test al al +
jz loc_423975  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_453420  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 4Dh  +
jmp loc_423A12  +
***
mov eax [ebp+10h] +
mov ecx [eax] +
cmp ecx 3Ch +
jmp loc_423F03  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 1Ch +
test al al +
jz loc_423975  +
push esi  +
push edi  +
mov ebx offset asc_453420 +
push ebx  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_4237F5  +
add esp 28h +
test al al +
jz loc_423975  +
push esi  +
push edi  +
push ebx  +
call sub_42430D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 53h  +
jmp loc_423A12  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
cmp ecx 6 +
ja loc_423AA7  +
cmp dx 57h +
jnz loc_4240BB  +
test ecx ecx +
jnz loc_4240BA  +
push 6  +
pop ecx  +
jmp loc_4240BB  +
dec ecx  +
mov eax [eax+1Ch] +
cmp eax 16Dh +
ja loc_423AA7  +
xor esi esi +
cmp eax ecx +
jl loc_4240D9  +
cdq   +
idiv  edi +
mov esi eax +
cmp edx ecx +
jl loc_4240D9  +
inc esi  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movzx eax cl +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
jmp loc_423870  +
***
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
mov eax [ebp+10h] +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_4236EC  +
add esp 0Ch +
jmp loc_42386F  +
***
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
jmp loc_423D61  +
***
mov eax [ebp+10h] +
mov eax [eax+14h] +
lea ecx [eax+76Ch] +
cmp ecx 270Fh +
ja loc_423AA7  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 4  +
jmp loc_423935  +
***
call sub_42FCE5  +
xor esi esi +
mov [ebp-8] esi +
call sub_42F4ED  +
mov ecx [ebp+10h] +
push dword ptr [ebp+8]  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
mov ecx [ecx+20h] +
neg ecx  +
push 0FFFFFFFFh  +
sbb ecx ecx +
and ecx 4 +
mov eax [eax+ecx] +
push eax  +
push dword ptr [edi]  +
lea eax [ebp-8] +
push dword ptr [ebx]  +
push eax  +
call sub_430934  +
add esp 18h +
test eax eax +
jz loc_4241B7  +
cmp eax 16h +
jz loc_4241E0  +
cmp eax 22h +
jz loc_4241E0  +
cmp eax 50h +
jnz loc_4241C6  +
mov eax [edi] +
add eax eax +
add [ebx] eax +
mov [edi] esi +
jmp loc_4241D9  +
mov ecx [ebp-8] +
xor eax eax +
inc eax  +
sub eax ecx +
add [edi] eax +
lea eax ds:0FFFFFFFEh[ecx*2] +
add [ebx] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_420737  +
lea ecx [ecx+0] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42E3D0  +
call sub_42E3D0  +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_42E571  +
***
mov eax dword_4597EC +
push esi  +
push 3  +
pop esi  +
test eax eax +
jnz loc_424F44  +
mov eax 200h +
jmp loc_424F4A  +
cmp eax esi +
jge loc_424F4F  +
mov eax esi +
mov dword_4597EC eax +
push 4  +
push eax  +
call sub_42E4DA  +
push 0  +
mov dword_4597F0 eax +
call sub_42E537  +
add esp 0Ch +
cmp dword_4597F0 0 +
jnz loc_424F9A  +
push 4  +
push esi  +
mov dword_4597EC esi +
call sub_42E4DA  +
push 0  +
mov dword_4597F0 eax +
call sub_42E537  +
add esp 0Ch +
cmp dword_4597F0 0 +
jnz loc_424F9A  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push edi  +
xor edi edi +
mov esi offset unk_4580F8 +
push 0  +
push 0FA0h  +
lea eax [esi+20h] +
push eax  +
call sub_4310C5  +
mov eax dword_4597F0 +
mov edx edi +
sar edx 6 +
mov [eax+edi*4] esi +
mov eax edi +
and eax 3Fh +
imul ecx eax +
mov eax dword_459BE0[edx*4] +
mov eax [eax+ecx+18h] +
cmp eax 0FFFFFFFFh +
jz loc_424FE0  +
cmp eax 0FFFFFFFEh +
jz loc_424FE0  +
test eax eax +
jnz loc_424FE7  +
mov dword ptr [esi+10h] 0FFFFFFFEh +
add esi 38h +
inc edi  +
cmp esi offset dword_4581A0 +
jnz loc_424FA2  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 2  +
push [ebp+lpNewFileName]  +
push [ebp+lpExistingFileName]  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_42564E  +
call ds:GetLastError  +
push eax  +
call sub_424ED2  +
pop ecx  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
cmp eax 9 +
ja loc_4261F5  +
jmp ds:off_42624E[eax*4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_425972  +
pop ecx  +
pop ecx  +
jmp loc_4261F8  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_4259B4  +
jmp loc_42612E  +
mov eax [ebp+arg_4] +
movzx ecx byte ptr [eax+308h] +
mov eax 80000000h +
neg ecx  +
sbb ecx ecx +
and ecx eax +
and ecx eax +
mov eax [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
jmp loc_4261F8  +
mov eax [ebp+arg_4] +
xor edx edx +
mov ecx [ebp+arg_8] +
mov esi 7F800000h +
cmp [eax+308h] dl +
mov eax [ecx] +
setz dl  +
and eax esi +
dec edx  +
and edx 80000000h +
add edx esi +
or edx eax +
and edx 0FF800000h +
mov [ecx] edx +
jmp loc_42615E  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setz cl  +
dec ecx  +
and ecx 80000000h +
add ecx 7FFFFFFFh +
jmp loc_426159  +
mov eax [ebp+arg_4] +
xor edx edx +
mov ecx [ebp+arg_8] +
mov esi 7F800000h +
cmp [eax+308h] dl +
mov eax [ecx] +
setz dl  +
and eax esi +
dec edx  +
and edx 80000000h +
add edx esi +
or edx eax +
and edx 0FF800001h +
or edx 1 +
jmp loc_426190  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 0FFC00000h +
jmp loc_42615E  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
push 2  +
movzx ecx byte ptr [eax+308h] +
mov eax 80000000h +
neg ecx  +
sbb ecx ecx +
and ecx eax +
and ecx eax +
mov eax [ebp+arg_8] +
mov [eax] ecx +
pop eax  +
jmp loc_4261F8  +
mov eax [ebp+arg_4] +
xor edx edx +
mov ecx [ebp+arg_8] +
mov esi 7F800000h +
push 3  +
cmp [eax+308h] dl +
mov eax [ecx] +
setz dl  +
and eax esi +
dec edx  +
and edx 80000000h +
add edx esi +
or edx eax +
and edx 0FF800000h +
mov [ecx] edx +
jmp loc_426219  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 9 +
ja loc_426330  +
jmp ds:off_426372[eax*4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_425993  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_4259D5  +
jmp loc_426299  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
mov [eax+4] ecx +
xor eax eax +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7FF00000h +
jmp loc_4262BB  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
mov eax [ebp+arg_8] +
setnz cl  +
shl ecx 1Fh +
or ecx 7FFFFFFFh +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_4262C1  +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_4257C7  +
pop ecx  +
pop ecx  +
jmp loc_4262C4  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
mov dword ptr [eax+4] 0FFF80000h +
jmp loc_4262C4  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
push 2  +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
mov [eax+4] ecx +
pop eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
push 3  +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7FF00000h +
jmp loc_426348  +
***
mov edi edi +
cmp byte ptr [ecx+4] 0 +
cmp byte ptr [ecx+4] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+4] 0 +
jz loc_428750  +
or eax 0FFFFFFFFh +
mov edx 0FFFFFh +
retn   +
mov eax 7FFFFFh +
xor edx edx +
retn   +
***
mov edi edi +
cmp byte ptr [ecx+4] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi 0FFFFh +
push edi  +
push 133Fh  +
call sub_431C88  +
fld  [ebp+arg_0] +
mov esi eax +
pop ecx  +
pop ecx  +
movzx ecx word ptr [ebp+arg_0+6] +
mov eax 7FF0h +
and ecx eax +
cmp cx ax +
jnz loc_429DBC  +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
call sub_431B99  +
pop ecx  +
pop ecx  +
test eax eax +
jle loc_429D90  +
cmp eax 2 +
jle loc_429DC9  +
cmp eax 3 +
jnz loc_429D90  +
fild  [ebp+arg_8] +
sub esp 10h +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  [esp+24h+var_1C] +
fld  [ebp+arg_0] +
fstp  [esp+24h+var_24] +
call sub_4316A5  +
push edi  +
push esi  +
fstp  [ebp+var_C] +
call sub_431C88  +
add esp 18h +
fld  [ebp+var_C] +
jmp loc_429F03  +
fld  [ebp+arg_0] +
fld  ds:dbl_4464B0 +
fadd st st(1) +
push esi  +
sub esp 18h +
fstp  [esp+30h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp+8] +
fstp  [esp+30h+var_30] +
push 19h  +
push 8  +
jmp loc_429EFB  +
fldz   +
fucomp  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_429DDA  +
fstp  st +
push edi  +
push esi  +
call sub_431C88  +
fld  [ebp+arg_0] +
pop ecx  +
pop ecx  +
jmp loc_429F03  +
lea eax [ebp+var_4] +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+20h+var_24+4] +
call sub_431A9A  +
mov ecx [ebp+arg_8] +
add esp 0Ch +
mov edx [ebp+var_4] +
test ecx ecx +
jns loc_429E02  +
mov eax 80000000h +
sub eax ecx +
cmp edx eax +
jl loc_429E5A  +
jmp loc_429E11  +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp edx eax +
jg loc_429EC9  +
lea eax [edx+ecx] +
cmp eax 0A00h +
jg loc_429EC9  +
cmp eax 400h +
jle loc_429E53  +
add eax 0FFFFFA00h +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+20h+var_24+4] +
call sub_431B6C  +
add esp 0Ch +
push esi  +
sub esp 18h +
fstp  [esp+30h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp+8] +
jmp loc_429EF1  +
cmp eax 0FFFFF603h +
jge loc_429E7F  +
fldz   +
fmulp st(1) st +
push esi  +
sub esp 18h +
fstp  [esp+30h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp+8] +
fld  [ebp+arg_0] +
fstp  [esp+30h+var_30] +
push 19h  +
push 12h  +
jmp loc_429EFB  +
cmp eax 0FFFFFC03h +
jge loc_429EAC  +
add eax 600h +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+20h+var_24+4] +
call sub_431B6C  +
add esp 0Ch +
push esi  +
sub esp 18h +
fstp  [esp+30h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
jmp loc_429E6F  +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+20h+var_24+4] +
call sub_431B6C  +
push edi  +
push esi  +
fstp  [ebp+var_C] +
call sub_431C88  +
add esp 14h +
jmp loc_429D88  +
push esi  +
sub esp 10h +
fstp  [esp+28h+var_24+4] +
fld  ds:dbl_448938 +
fstp  qword ptr [esp] +
call sub_432DA6  +
fstp  [esp+28h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp] +
push ecx  +
push ecx  +
fld  [ebp+arg_0] +
fstp  [esp+30h+var_30] +
push 19h  +
push 11h  +
call sub_4313D8  +
add esp 24h +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi 190h +
push edi  +
lea ecx [eax-1] +
add eax 12Bh +
cdq   +
idiv  esi +
push 64h  +
mov esi eax +
mov eax ecx +
cdq   +
pop edi  +
idiv  edi +
pop edi  +
sub esi eax +
mov eax ecx +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
add eax 0FFFFFFEFh +
add eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 0FFFFh +
sub esp 14h +
cmp [ebp+SrcStr] ax +
jz locret_42A2C5  +
push [ebp+arg_4]  +
lea ecx [ebp+var_14] +
call sub_42141F  +
mov cx [ebp+SrcStr] +
mov edx 100h +
cmp cx dx +
jnb loc_42A279  +
movzx edx cl +
test ds:byte_447782[edx*2] 1 +
jz loc_42A271  +
mov eax [ebp+var_10] +
mov eax [eax+94h] +
movzx eax byte ptr [eax+edx] +
jmp loc_42A274  +
movzx eax cl +
movzx eax ax +
jmp loc_42A289  +
mov eax [ebp+var_10] +
mov eax [eax+0A8h] +
test eax eax +
jnz loc_42A28E  +
movzx eax cx +
movzx eax ax +
jmp loc_42A2AC  +
push 1  +
lea ecx [ebp+DestStr] +
push ecx  +
push 1  +
lea ecx [ebp+SrcStr] +
push ecx  +
push edx  +
push eax  +
call sub_432B90  +
add esp 18h +
test eax eax +
jnz loc_42A2B1  +
movzx eax [ebp+SrcStr] +
movzx eax ax +
jmp loc_42A2B5  +
movzx eax [ebp+DestStr] +
cmp [ebp+var_8] 0 +
jz locret_42A2C5  +
mov ecx [ebp+var_14] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset unk_459800 +
push eax  +
call ds:EnterCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_431220  +
push 4  +
call sub_42A311  +
pop ecx  +
retn   +
***
call sub_41C4E0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
call sub_42E279  +
mov ecx [eax+4Ch] +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_42E893  +
mov eax [ebp+var_4] +
pop ecx  +
pop ecx  +
mov eax [eax+4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov [ebp+var_34] esi +
mov edi ebx +
mov [ebp+var_1C] ebx +
mov ecx [esi+0A8h] +
mov [ebp+var_20] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_58] esi +
mov [ebp+var_54] ebx +
test ecx ecx +
jz loc_42AB93  +
lea eax [esi+8] +
mov [ebp+lpMem] ebx +
cmp [eax] ebx +
jnz loc_42A7E2  +
push eax  +
push 1004h  +
push ecx  +
lea eax [ebp+var_58] +
push ebx  +
push eax  +
call sub_4332C0  +
add esp 14h +
test eax eax +
jnz loc_42AB62  +
push 4  +
push 1  +
call sub_42E4DA  +
push ebx  +
mov [ebp+lpMem] eax +
call sub_42E537  +
push 2  +
mov edi 180h +
push edi  +
call sub_42E4DA  +
push ebx  +
mov [ebp+var_1C] eax +
call sub_42E537  +
push 1  +
push edi  +
call sub_42E4DA  +
mov edi eax +
push ebx  +
mov [ebp+var_28] edi +
call sub_42E537  +
push 1  +
push 180h  +
call sub_42E4DA  +
push ebx  +
mov [ebp+var_20] eax +
call sub_42E537  +
push 1  +
push 101h  +
call sub_42E4DA  +
push ebx  +
mov [ebp+var_24] eax +
call sub_42E537  +
add esp 3Ch +
cmp [ebp+lpMem] ebx +
jz loc_42AB62  +
cmp [ebp+var_1C] ebx +
jz loc_42AB62  +
mov ecx [ebp+var_24] +
test ecx ecx +
jz loc_42AB62  +
test edi edi +
jz loc_42AB62  +
cmp [ebp+var_20] ebx +
jz loc_42AB62  +
mov eax ebx +
mov [eax+ecx] al +
inc eax  +
cmp eax 100h +
jl loc_42A87A  +
lea eax [ebp+CPInfo] +
push eax  +
push dword ptr [esi+8]  +
call ds:GetCPInfo  +
test eax eax +
jz loc_42AB62  +
mov eax [ebp+CPInfo.MaxCharSize] +
cmp eax 5 +
ja loc_42AB62  +
movzx eax ax +
mov [ebp+var_38] eax +
cmp eax 1 +
jbe loc_42A905  +
cmp dword ptr [esi+8] 0FDE9h +
jnz loc_42A8D2  +
mov eax [ebp+var_24] +
push 80h  +
sub eax 0FFFFFF80h +
push 20h  +
push eax  +
call sub_41DD10  +
add esp 0Ch +
jmp loc_42A905  +
lea edx [ebp+CPInfo.LeadByte] +
cmp [ebp+CPInfo.LeadByte] bl +
jz loc_42A905  +
mov ecx [ebp+var_24] +
mov al [edx+1] +
test al al +
jz loc_42A902  +
movzx esi byte ptr [edx] +
movzx eax al +
cmp esi eax +
ja loc_42A8FB  +
mov byte ptr [esi+ecx] 20h +
inc esi  +
movzx eax byte ptr [edx+1] +
cmp esi eax +
jle loc_42A8EE  +
add edx 2 +
cmp [edx] bl +
jnz loc_42A8DD  +
mov esi [ebp+var_34] +
mov ecx [ebp+var_24] +
lea eax [edi+81h] +
push ebx  +
push dword ptr [esi+8]  +
mov edx 0FFh +
inc ecx  +
push edx  +
push eax  +
push edx  +
push ecx  +
push 100h  +
push dword ptr [esi+0A8h]  +
mov [ebp+lpMultiByteStr] ecx +
push ebx  +
call sub_432B47  +
add esp 24h +
test eax eax +
jz loc_42AB62  +
mov eax [ebp+var_20] +
mov ecx 0FFh +
push ebx  +
push dword ptr [esi+8]  +
add eax 81h +
push ecx  +
push eax  +
push ecx  +
push [ebp+lpMultiByteStr]  +
push 200h  +
push dword ptr [esi+0A8h]  +
push ebx  +
call sub_432B47  +
add esp 24h +
test eax eax +
jz loc_42AB62  +
mov eax [ebp+var_1C] +
push ebx  +
push dword ptr [esi+8]  +
add eax 100h +
push eax  +
push 100h  +
push [ebp+var_24]  +
mov [ebp+var_44] eax +
push 1  +
push ebx  +
call sub_433470  +
add esp 1Ch +
test eax eax +
jz loc_42AB62  +
mov eax [ebp+var_1C] +
xor edx edx +
cmp [ebp+var_38] 1 +
lea ecx [eax+0FEh] +
mov [ecx] dx +
mov edx [ebp+var_28] +
mov [ebp+var_48] ecx +
mov ecx [ebp+var_20] +
lea edi [edx+80h] +
mov [edx+7Fh] bl +
mov [ebp+var_4C] edi +
mov [ecx+7Fh] bl +
mov [edi] bl +
lea edi [ecx+80h] +
mov [ebp+var_50] edi +
mov [edi] bl +
jbe loc_42AAA0  +
cmp dword ptr [esi+8] 0FDE9h +
jnz loc_42AA36  +
add eax 200h +
mov edi ecx +
mov [ebp+var_28] eax +
lea ecx [edx+100h] +
push 0FFFFFF80h  +
mov esi 0FFFFFEBEh +
sub edi edx +
pop eax  +
sub esi edx +
sub eax edx +
mov [ebp+lpMultiByteStr] eax +
lea eax [esi+ecx] +
push 32h  +
pop ebx  +
cmp ebx eax +
mov ebx [ebp+var_28] +
sbb eax eax +
add [ebp+var_28] 2 +
and eax 0FFFF8000h +
add eax 8000h +
mov [ebx] ax +
mov ebx [ebp+lpMultiByteStr] +
lea eax [ecx+ebx] +
mov [ecx] al +
mov [edi+ecx] al +
inc ecx  +
lea eax [ebx+ecx] +
cmp eax 0FFh +
jle loc_42AA00  +
jmp loc_42AA9E  +
lea edi [ebp+CPInfo.LeadByte] +
cmp [ebp+CPInfo.LeadByte] bl +
jz loc_42AAA0  +
mov ebx [ebp+var_1C] +
mov al [edi+1] +
test al al +
jz loc_42AA9E  +
movzx esi byte ptr [edi] +
movzx eax al +
mov [ebp+var_3C] esi +
cmp esi eax +
ja loc_42AA96  +
sub ebx 0FFFFFF00h +
mov [ebp+lpMultiByteStr] edx +
lea eax [ecx+80h] +
add eax esi +
sub edx ecx +
mov ecx [ebp+var_3C] +
lea esi [ebx+esi*2] +
mov [ebp+var_40] eax +
mov ebx eax +
mov eax 8000h +
mov [esi] ax +
lea esi [esi+2] +
mov [edx+ebx] cl +
mov [ebx] cl +
inc ecx  +
movzx eax byte ptr [edi+1] +
inc ebx  +
cmp ecx eax +
jle loc_42AA73  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_20] +
mov ebx [ebp+var_1C] +
add edi 2 +
cmp byte ptr [edi] 0 +
jnz loc_42AA41  +
xor ebx ebx +
mov eax [ebp+var_1C] +
mov edi eax +
push 3Fh  +
pop ecx  +
push 1Fh  +
lea esi [eax+200h] +
mov eax [ebp+var_20] +
movs   +
pop ecx  +
push 1Fh  +
movs   +
lea esi [edx+100h] +
mov edi edx +
movs   +
pop ecx  +
movs   +
movs   +
lea esi [eax+100h] +
mov edi eax +
movs   +
movs   +
movs   +
mov esi [ebp+var_34] +
mov ecx [esi+8Ch] +
test ecx ecx +
jz loc_42AB2B  +
or eax 0FFFFFFFFh +
xadd [ecx] eax +
jnz loc_42AB2B  +
mov eax [esi+90h] +
sub eax 0FEh +
push eax  +
call sub_42E537  +
mov eax [esi+94h] +
mov edi 80h +
sub eax edi +
push eax  +
call sub_42E537  +
mov eax [esi+98h] +
sub eax edi +
push eax  +
call sub_42E537  +
push dword ptr [esi+8Ch]  +
call sub_42E537  +
add esp 10h +
mov eax [ebp+lpMem] +
mov dword ptr [eax] 1 +
mov [esi+8Ch] eax +
mov eax [ebp+var_44] +
mov [esi] eax +
mov eax [ebp+var_48] +
mov [esi+90h] eax +
mov eax [ebp+var_4C] +
mov [esi+94h] eax +
mov eax [ebp+var_50] +
mov [esi+98h] eax +
mov eax [ebp+var_38] +
mov [esi+4] eax +
jmp loc_42AB86  +
push [ebp+lpMem]  +
call sub_42E537  +
push [ebp+var_1C]  +
call sub_42E537  +
push edi  +
call sub_42E537  +
push [ebp+var_20]  +
call sub_42E537  +
xor ebx ebx +
add esp 10h +
inc ebx  +
push [ebp+var_24]  +
call sub_42E537  +
pop ecx  +
mov eax ebx +
jmp loc_42ABCF  +
mov eax [esi+8Ch] +
test eax eax +
jz loc_42ABA0  +
dec dword ptr [eax]  +
mov [esi+8Ch] ebx +
xor eax eax +
mov [esi+90h] ebx +
mov dword ptr [esi] offset asc_447280 +
mov dword ptr [esi+94h] offset unk_447500 +
mov dword ptr [esi+98h] offset unk_447680 +
mov dword ptr [esi+4] 1 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41B626  +
leave   +
retn   +
***
jmp loc_4335F0  +
***
lea edx [esp+arg_8] +
fld  st +
call sub_4349CD  +
test eax eax +
jz loc_42AE3A  +
push 16h  +
call sub_434A1B  +
pop ecx  +
test byte_4581B0 2 +
jz loc_42AE65  +
push 17h  +
call ds:__imp_IsProcessorFeaturePresent  +
test eax eax +
jz loc_42AE54  +
push 7  +
pop ecx  +
int 29h  +
push 1  +
push 40000015h  +
push 3  +
call sub_42055E  +
add esp 0Ch +
push 3  +
call sub_42B711  +
int 3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_4596DC +
push esi  +
push edi  +
cmp eax 5 +
jl loc_42AEF8  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_42AE9A  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_42AEAD  +
cmp byte ptr [eax] 0 +
jz loc_42AEAD  +
inc eax  +
cmp eax ecx +
jnz loc_42AEA3  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_42AF89  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFE0h +
add edi eax +
cmp eax 1 +
jl loc_42AF6F  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_42AF19  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_42AF2C  +
cmp byte ptr [eax] 0 +
jz loc_42AF2C  +
inc eax  +
cmp eax ecx +
jnz loc_42AF22  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_42AF89  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFF0h +
xorps xmm1 xmm1 +
add edi eax +
cmp eax edi +
jz loc_42AF5A  +
movups xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_42AF5A  +
add ecx 10h +
cmp ecx edi +
jnz loc_42AF44  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_42AF67  +
cmp byte ptr [ecx] 0 +
jz loc_42AF6B  +
inc ecx  +
cmp ecx eax +
jnz loc_42AF61  +
sub ecx esi +
jmp loc_42AF89  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_42AF87  +
cmp byte ptr [ecx] 0 +
jz loc_42AF87  +
inc ecx  +
cmp ecx eax +
jnz loc_42AF7D  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_4596DC +
push esi  +
push edi  +
cmp eax 5 +
jl loc_42B05B  +
mov ecx [ebp+8] +
test cl 1 +
jz loc_42AFCD  +
mov edx ecx +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
shr edx 1 +
cmp eax edx +
jnb loc_42AFE8  +
mov edx eax +
mov esi [ebp+8] +
lea edi [ecx+edx*2] +
xor eax eax +
cmp esi edi +
jz loc_42B000  +
cmp [ecx] ax +
jz loc_42B000  +
add ecx 2 +
cmp ecx edi +
jnz loc_42AFF4  +
sub ecx esi +
sar ecx 1 +
cmp ecx edx +
jnz loc_42B139  +
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
and eax 0FFFFFFE0h +
add eax ecx +
leave   +
lea ecx [esi+eax*2] +
jmp loc_42B031  +
cmp edi ecx +
jnz near ptr word_42B022  +
mov eax [ebp+0Ch] +
lea ecx [esi+eax*2] +
cmp edi ecx +
jz loc_42B04D  +
xor eax eax +
cmp [edi] ax +
jz loc_42B04D  +
add edi 2 +
cmp edi ecx +
jnz loc_42B041  +
mov ecx edi +
sub ecx esi +
sar ecx 1 +
mov eax [ebp+0Ch] +
mov esi ecx +
lea edx [ecx+eax*2] +
cmp esi edx +
jz loc_42AFC6  +
xor eax eax +
cmp [ecx] ax +
jz loc_42AFC6  +
add ecx 2 +
cmp ecx edx +
jnz loc_42B07E  +
jmp loc_42AFC6  +
***
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
xorps xmm1 xmm1 +
and eax 0FFFFFFF0h +
add eax ecx +
lea ecx [esi+eax*2] +
jmp loc_42B0F5  +
movups xmm0 oword ptr [edi] +
pcmpeqw xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_42B0F9  +
add edi 10h +
cmp edi ecx +
jnz loc_42B0E3  +
mov eax [ebp+0Ch] +
lea ecx [esi+eax*2] +
cmp edi ecx +
jz loc_42B111  +
xor eax eax +
cmp [edi] ax +
jz loc_42B111  +
add edi 2 +
cmp edi ecx +
jnz loc_42B105  +
mov ecx edi +
jmp loc_42AFC6  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
call sub_42E571  +
pop ecx  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF4h +
add eax 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
call sub_41C4E0  +
pop ecx  +
mov edi edi +
call sub_41C4E0  +
mov eax [ebp+10h] +
mov edi edi +
call sub_41C4E0  +
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_42B6D3  +
push esi  +
push offset aCorexitprocess  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_42B6D2  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_442218  +
call esi  +
pop esi  +
cmp [ebp+hLibModule] 0 +
jz locret_42B6E2  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
leave   +
retn   +
***
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+uExitCode]  +
call sub_42B5EB  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_459B74 +
mov eax dword_459B78 +
cmp dword_459B74 0 +
cmp dword_459B78 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi dword_459B74 +
test edi edi +
jz loc_42BE7F  +
mov eax [edi] +
test eax eax +
jz loc_42BE74  +
xor ebx ebx +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
push ebx  +
call sub_434C16  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jz loc_42BE7F  +
push 2  +
push ebx  +
call sub_42E4DA  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_42BE78  +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
push dword ptr [edi]  +
xor ebx ebx +
push ebx  +
push ebx  +
call sub_434C16  +
add esp 18h +
test eax eax +
jz loc_42BE78  +
push ebx  +
push esi  +
call sub_436234  +
push ebx  +
call sub_42E537  +
add edi 4 +
add esp 0Ch +
mov eax [edi] +
test eax eax +
jnz loc_42BE20  +
xor eax eax +
jmp loc_42BE82  +
push esi  +
call sub_42E537  +
pop ecx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
jmp loc_42BEA5  +
mov ecx [ebp+8] +
push esi  +
call ds:off_442218  +
call dword ptr [ebp+8]  +
pop ecx  +
add esi 4 +
cmp esi edi +
jnz loc_42BE94  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp eax dword_459B80 +
jz loc_42BEC9  +
push eax  +
call sub_42BD57  +
pop ecx  +
pop ebp  +
retn   +
***
cmp bh 0FFh +
jmp fword ptr (byte_4417FF-44182Fh)[eax]  +
***
mov eax dword_459B7C +
call sub_41C4E0  +
mov eax [ebp+10h] +
call sub_41C4E0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
lea eax [ebp+arg_0] +
mov [ebp+var_14] eax +
lea ecx [ebp-1] +
push 2  +
lea eax [ebp+arg_4] +
mov [ebp+var_10] eax +
pop eax  +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_42BFA0  +
leave   +
retn   +
***
mov dword_459BDC offset off_4581C8 +
mov al 1 +
retn   +
***
mov [esp+4+var_4] offset unk_459B90 +
call sub_42C241  +
pop ecx  +
mov al 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push offset dword_459FA8  +
lea ecx [ebp-1] +
call sub_42C390  +
mov al 1 +
leave   +
retn   +
***
mov edi edi +
call sub_43626A  +
mov edi edi +
mov edi edi +
mov eax dword_458018 +
mov ecx eax +
xor eax dword_459BA0 +
and ecx 1Fh +
ror eax cl +
test eax eax +
setnz al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov dword_459BA0 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi eax +
and eax 3Fh +
sar edi 6 +
imul edx eax +
mov esi dword_459BE0[edi*4] +
mov al [esi+edx+28h] +
mov bl [esi+edx+29h] +
movzx ecx al +
and ecx 80h +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_4] +
cmp ecx 4000h +
jz loc_42C5F1  +
cmp ecx 8000h +
jz loc_42C5E9  +
cmp ecx 10000h +
jz loc_42C5D5  +
cmp ecx 20000h +
jz loc_42C5D5  +
cmp ecx 40000h +
jnz loc_42C603  +
or al 80h +
mov [esi+edx+28h] al +
mov eax dword_459BE0[edi*4] +
mov byte ptr [eax+edx+29h] 1 +
jmp loc_42C603  +
or al 80h +
mov [esi+edx+28h] al +
mov eax dword_459BE0[edi*4] +
mov byte ptr [eax+edx+29h] 2 +
jmp loc_42C603  +
and al 7Fh +
mov [esi+edx+28h] al +
jmp loc_42C603  +
or al 80h +
mov [esi+edx+28h] al +
mov ecx dword_459BE0[edi*4] +
mov byte ptr [ecx+edx+29h] 0 +
cmp [ebp+var_4] 0 +
jnz loc_42C610  +
mov eax 8000h +
jmp loc_42C62E  +
test bl bl +
jnz loc_42C61B  +
mov eax 4000h +
jmp loc_42C62E  +
xor eax eax +
cmp bl 1 +
setnz al  +
dec eax  +
and eax 30000h +
add eax 10000h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call ds:GetCommandLineA  +
call sub_41C4E0  +
mov eax [ebp+10h] +
call sub_41C4E0  +
mov eax [ebp+10h] +
call sub_41C4E0  +
mov eax [ebp+10h] +
mov edi edi +
cmp byte ptr [ecx+0Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov ecx offset dword_459BBC +
inc eax  +
xchg eax [ecx] +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_459BC0 +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_42DE77  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  esi +
cmp eax [ebp+arg_8] +
jnb loc_42DE77  +
call sub_424F08  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_42DEB9  +
push ebx  +
mov ebx [ebp+lpMem] +
push edi  +
test ebx ebx +
jz loc_42DE8B  +
push ebx  +
call sub_438F54  +
pop ecx  +
mov edi eax +
jmp loc_42DE8D  +
xor edi edi +
imul esi [ebp+arg_8] +
push esi  +
push ebx  +
call sub_433573  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_42DEB5  +
cmp edi esi +
jnb loc_42DEB5  +
sub esi edi +
lea eax [ebx+edi] +
push esi  +
push 0  +
push eax  +
call sub_41DD10  +
add esp 0Ch +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
test eax eax +
jz loc_42DF26  +
inc edx  +
sub ebx 1 +
jbe loc_42DF26  +
test dl 3 +
jnz loc_42DEE0  +
lea eax [ecx+edx] +
and eax 0FFFh +
cmp eax 0FFCh +
ja loc_42DEE0  +
mov eax [ecx+edx] +
cmp eax [edx] +
jnz loc_42DEE0  +
sub ebx 4 +
jbe loc_42DF26  +
lea esi [eax-1010101h] +
add edx 4 +
not eax  +
and eax esi +
test eax 80808080h +
jz loc_42DEF7  +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
call sub_41C4E0  +
mov eax [ebp+10h] +
call sub_41C4E0  +
mov eax [ebp+10h] +
call sub_41C4E0  +
mov eax [ebp+10h] +
call sub_41C4E0  +
mov eax [ebp+10h] +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
push 43h  +
mov [eax+18h] ecx +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset unk_4479A0 +
mov eax [ebp+arg_0] +
mov [eax+350h] ecx +
mov eax [ebp+arg_0] +
pop ecx  +
push 5  +
mov dword ptr [eax+48h] offset unk_458480 +
mov eax [ebp+arg_0] +
mov [eax+6Ch] cx +
mov eax [ebp+arg_0] +
mov [eax+172h] cx +
lea ecx [ebp-1] +
mov eax [ebp+arg_0] +
and dword ptr [eax+34Ch] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_10] eax +
pop eax  +
mov [ebp+var_8] eax +
mov [ebp+var_14] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_42DF38  +
lea eax [ebp+arg_0] +
mov [ebp+var_C] eax +
lea ecx [ebp-1] +
push 4  +
lea eax [ebp+arg_4] +
mov [ebp+var_8] eax +
pop eax  +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_42E04A  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_4581C0 +
mov edi edi +
push ebx  +
push esi  +
push edi  +
call ds:GetLastError  +
mov esi eax +
mov eax dword_4581C0 +
cmp eax 0FFFFFFFFh +
jz loc_42E403  +
push eax  +
call sub_430EEE  +
mov edi eax +
test edi edi +
jz loc_42E3FE  +
cmp edi 0FFFFFFFFh +
jnz loc_42E470  +
xor ebx ebx +
mov edi ebx +
jmp loc_42E472  +
mov eax dword_4581C0 +
push 0FFFFFFFFh  +
push eax  +
call sub_430F2D  +
test eax eax +
jz loc_42E3F8  +
push 364h  +
push 1  +
call sub_42E4DA  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_42E43A  +
xor ebx ebx +
push ebx  +
push dword_4581C0  +
call sub_430F2D  +
push ebx  +
call sub_42E537  +
pop ecx  +
jmp loc_42E3FA  +
push edi  +
push dword_4581C0  +
call sub_430F2D  +
test eax eax +
jnz loc_42E45B  +
xor ebx ebx +
push ebx  +
push dword_4581C0  +
call sub_430F2D  +
push edi  +
jmp loc_42E432  +
push offset dword_459BDC  +
push edi  +
call sub_42E0A4  +
push 0  +
call sub_42E537  +
add esp 0Ch +
mov ebx edi +
push esi  +
call ds:SetLastError  +
neg edi  +
sbb edi edi +
and edi ebx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov dword_4581C0 eax +
cmp eax 0FFFFFFFFh +
jnz loc_42E4A7  +
xor al al +
retn   +
call sub_42E3D0  +
test eax eax +
jnz loc_42E4B9  +
push eax  +
call sub_42E4C0  +
pop ecx  +
jmp loc_42E4A4  +
mov al 1 +
retn   +
***
mov eax dword_4581C0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_458018 +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_459BE0[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_42F392  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_42F392  +
or byte ptr [esi+28h] 80h +
jmp loc_42F40B  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_42F3AD  +
sub eax 1 +
jz loc_42F3A9  +
sub eax 1 +
push 0FFFFFFF4h  +
jmp loc_42F3AF  +
push 0FFFFFFF5h  +
jmp loc_42F3AF  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_42F3CB  +
test ebx ebx +
jz loc_42F3CB  +
push ebx  +
call ds:GetFileType  +
jmp loc_42F3CD  +
xor eax eax +
test eax eax +
jz loc_42F3ED  +
movzx eax al +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_42F3E2  +
or byte ptr [esi+28h] 40h +
jmp loc_42F40B  +
cmp eax 3 +
jnz loc_42F40B  +
or byte ptr [esi+28h] 8 +
jmp loc_42F40B  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax dword_4597F0 +
test eax eax +
jz loc_42F40B  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_42F36C  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call sub_41C4E0  +
pop ecx  +
mov edi edi +
push esi  +
xor esi esi +
mov eax dword_459BE0[esi] +
test eax eax +
jz loc_42F49D  +
push eax  +
call sub_43637E  +
and dword_459BE0[esi] 0 +
pop ecx  +
add esi 4 +
cmp esi 200h +
jb loc_42F485  +
mov al 1 +
pop esi  +
retn   +
***
mov dword_459DE4 7080h +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
call sub_41C4E0  +
pop ecx  +
call sub_41C4E0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi esi +
push 2  +
pop edx  +
push 20h  +
stos   +
pop ebx  +
stos   +
stos   +
mov edi [ebp+arg_4] +
mov eax dword_459BC4 +
mov [esi+4] eax +
movzx eax word ptr [edi] +
mov ecx eax +
cmp ax bx +
jnz loc_42FF36  +
add edi edx +
movzx eax word ptr [edi] +
cmp ax bx +
jz loc_42FF2A  +
mov ecx eax +
movzx eax cx +
cmp eax 61h +
jz loc_42FF5E  +
cmp eax 72h +
jz loc_42FF55  +
cmp cx 77h +
jnz loc_430150  +
mov dword ptr [esi] 301h +
jmp loc_42FF64  +
mov dword ptr [esi+4] 1 +
jmp loc_42FF67  +
mov dword ptr [esi] 109h +
mov [esi+4] edx +
add edi edx +
mov cl 1 +
xor eax eax +
push 0Ah  +
mov byte ptr [ebp+var_2+1] al +
mov bl al +
mov byte ptr [ebp+var_2] al +
mov bh al +
pop edx  +
movzx eax word ptr [edi] +
test ax ax +
jz loc_430062  +
cmp eax 53h +
ja loc_42FFF0  +
jz loc_42FFE3  +
sub eax 20h +
jz loc_43004E  +
sub eax 0Bh +
jz loc_42FFD6  +
sub eax 1 +
jz loc_42FFD0  +
sub eax 18h +
jz loc_42FFC8  +
sub eax edx +
jz loc_42FFBB  +
sub eax 4 +
jnz loc_430150  +
test bl bl +
jnz loc_42FFD2  +
or dword ptr [esi] 10h +
jmp loc_42FFEA  +
or dword ptr [esi] 80h +
mov cl 1 +
jmp loc_43004E  +
push esi  +
call sub_4301EA  +
jmp loc_430048  +
mov bh 1 +
xor cl cl +
jmp loc_43004E  +
lea eax [ebp+var_2] +
push eax  +
push esi  +
call sub_430288  +
pop ecx  +
jmp loc_430048  +
test bl bl +
jnz loc_42FFD2  +
or dword ptr [esi] 20h +
mov bl 1 +
mov cl bl +
jmp loc_43004E  +
sub eax 54h +
jz loc_430042  +
sub eax 0Eh +
jz loc_43003A  +
sub eax 1 +
jz loc_43002E  +
sub eax 0Bh +
jz loc_430022  +
sub eax 6 +
jz loc_43001A  +
sub eax 4 +
jnz loc_430150  +
push esi  +
call sub_4302DE  +
jmp loc_430048  +
push esi  +
call sub_4302BE  +
jmp loc_430048  +
lea eax [ebp+var_2+1] +
push eax  +
push esi  +
call sub_430266  +
jmp loc_42FFE0  +
lea eax [ebp+var_2+1] +
push eax  +
push esi  +
call sub_430244  +
jmp loc_42FFE0  +
push esi  +
call sub_430224  +
jmp loc_430048  +
push esi  +
call sub_430205  +
pop ecx  +
push 0Ah  +
pop edx  +
mov cl al +
movzx eax cl +
neg eax  +
sbb eax eax +
and eax 2 +
add edi eax +
test cl cl +
jnz loc_42FF7A  +
test bh bh +
jz loc_430069  +
add edi 2 +
push 20h  +
pop eax  +
jmp loc_430071  +
add edi 2 +
cmp [edi] ax +
jz loc_43006E  +
test bh bh +
jnz loc_43008E  +
xor eax eax +
cmp [edi] ax +
jnz loc_430150  +
mov byte ptr [esi+8] 1 +
jmp loc_430160  +
push 3  +
push offset aCcs  +
push edi  +
call sub_425493  +
add esp 0Ch +
test eax eax +
jnz loc_430150  +
add edi 6 +
push 20h  +
pop ebx  +
movzx eax word ptr [edi] +
mov ecx eax +
cmp ax bx +
jnz loc_4300C3  +
add edi 2 +
movzx eax word ptr [edi] +
cmp ax bx +
jz loc_4300B6  +
mov ecx eax +
cmp cx 3Dh +
jnz loc_430150  +
add edi 2 +
cmp [edi] bx +
jz loc_4300CD  +
push 5  +
push offset aUtf8  +
push edi  +
call sub_425374  +
add esp 0Ch +
test eax eax +
jnz loc_4300F3  +
or dword ptr [esi] 40000h +
push 0Ah  +
jmp loc_43012D  +
push 8  +
push offset aUtf16leunicode  +
push edi  +
call sub_425374  +
add esp 0Ch +
test eax eax +
jnz loc_430111  +
or dword ptr [esi] 20000h +
push 10h  +
jmp loc_43012D  +
push 7  +
push (offset aUtf16leunicode+10h)  +
push edi  +
call sub_425374  +
add esp 0Ch +
test eax eax +
jnz loc_430150  +
or dword ptr [esi] 10000h +
push 0Eh  +
pop eax  +
lea ecx [edi+eax] +
movzx eax word ptr [ecx] +
mov edx eax +
cmp ax bx +
jnz loc_430148  +
lea ecx [ecx+2] +
movzx eax word ptr [ecx] +
cmp ax bx +
jz loc_43013B  +
mov edx eax +
test dx dx +
jmp loc_43007F  +
call sub_424F08  +
mov dword ptr [eax] 16h +
call sub_42070A  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
mov eax [ebp+10h] +
call sub_41C4E0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_10]  +
push [ebp+lpMultiByteStr]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_430934  +
add esp 18h +
pop ebp  +
retn   +
***
mov edi edi +
call sub_41C4E0  +
mov ecx [ebp+10h] +
push dword ptr [ecx]  +
call sub_42A361  +
pop ecx  +
retn   +
***
push offset aArefileapisans  +
push offset aComparestringe  +
push offset aEnumsystemloca  +
push offset aGetdateformate  +
push offset aGetlocaleinfoe  +
push offset aGettimeformate  +
push offset aGetuserdefault  +
push offset aIsvalidlocalen  +
push offset aLcidtolocalena  +
push offset aLcmapstringex  +
push offset aLocalenametolc  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_430B12  +
call sub_430AF8  +
call sub_430B12  +
call sub_430B2C  +
call sub_430B46  +
call sub_430B60  +
call sub_430B7A  +
call sub_430B94  +
call sub_430BAE  +
call sub_430BE2  +
call sub_430BC8  +
jmp sub_430BFC  +
***
mov ecx offset dword_459F88 +
mov eax offset unk_459F00 +
xor edx edx +
cmp ecx eax +
push esi  +
mov esi dword_458018 +
sbb ecx ecx +
and ecx 0FFFFFFDEh +
add ecx 22h +
inc edx  +
mov [eax] esi +
lea eax [eax+4] +
cmp edx ecx +
jnz loc_43127D  +
mov al 1 +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
cmp ebx 0FFFFFFFEh +
jnz loc_43235D  +
call sub_424EF5  +
and dword ptr [eax] 0 +
call sub_424F08  +
mov dword ptr [eax] 9 +
jmp loc_4326DC  +
test ebx ebx +
js loc_4326C4  +
cmp ebx dword_459DE0 +
jnb loc_4326C4  +
mov eax ebx +
mov ecx ebx +
sar ecx 6 +
and eax 3Fh +
imul edi eax +
mov [ebp+var_8] ecx +
mov eax dword_459BE0[ecx*4] +
xor ecx ecx +
inc ecx  +
mov [ebp+var_10] edi +
mov [ebp+var_20] ecx +
mov dl [eax+edi+28h] +
test dl cl +
jz loc_4326C4  +
mov ecx [ebp+arg_8] +
cmp ecx 7FFFFFFFh +
jbe loc_4323C0  +
call sub_424EF5  +
and dword ptr [eax] 0 +
call sub_424F08  +
mov dword ptr [eax] 16h +
jmp loc_4326D7  +
test ecx ecx +
jz loc_4326C0  +
test dl 2 +
jnz loc_4326C0  +
cmp [ebp+lpWideCharStr] 0 +
jz loc_4323A8  +
mov edx [eax+edi+18h] +
mov [ebp+hFile] edx +
mov dl [eax+edi+29h] +
mov [ebp+var_1] dl +
push esi  +
movsx edx dl +
xor esi esi +
sub edx 1 +
jz loc_43243F  +
sub edx 1 +
jz loc_432403  +
mov edx [ebp+lpWideCharStr] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov [ebp+lpBuffer] edx +
jmp loc_4324C3  +
mov eax ecx +
not eax  +
test al 1 +
jnz loc_432427  +
call sub_424EF5  +
and [eax] esi +
call sub_424F08  +
mov dword ptr [eax] 16h +
call sub_42070A  +
jmp loc_4325F7  +
mov edi [ebp+var_8] +
mov edx [ebp+lpWideCharStr] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov [ebp+lpBuffer] edx +
mov eax dword_459BE0[edi*4] +
jmp loc_4324C3  +
mov eax ecx +
not eax  +
test al 1 +
jz loc_43240B  +
push 4  +
pop eax  +
shr ecx 1 +
mov [ebp+nNumberOfBytesToRead] eax +
cmp ecx eax +
jb loc_432458  +
mov eax ecx +
mov [ebp+nNumberOfBytesToRead] ecx +
push eax  +
call sub_42E571  +
push 0  +
mov esi eax +
call sub_42E537  +
push 0  +
call sub_42E537  +
add esp 0Ch +
mov [ebp+lpBuffer] esi +
test esi esi +
jnz loc_432493  +
call sub_424F08  +
mov dword ptr [eax] 0Ch +
call sub_424EF5  +
mov dword ptr [eax] 8 +
jmp loc_4325F7  +
push 1  +
push 0  +
push 0  +
push ebx  +
call sub_432C4A  +
mov ecx [ebp+var_8] +
add esp 10h +
mov ecx dword_459BE0[ecx*4] +
mov [edi+ecx+20h] eax +
mov eax [ebp+var_8] +
mov [edi+ecx+24h] edx +
mov edx esi +
mov ecx [ebp+nNumberOfBytesToRead] +
mov eax dword_459BE0[eax*4] +
mov ebx [ebp+var_10] +
xor edi edi +
mov [ebp+var_24] edx +
test byte ptr [ebx+eax+28h] 48h +
mov ebx [ebp+arg_0] +
jz loc_432598  +
mov ebx [ebp+var_10] +
mov al [ebx+eax+2Ah] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_432598  +
test ecx ecx +
jz loc_432598  +
mov ebx [ebp+var_10] +
inc edi  +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
cmp [ebp+var_1] 0 +
mov [ebp+lpBuffer] edx +
mov [ebp+nNumberOfBytesToRead] ecx +
mov eax dword_459BE0[eax*4] +
mov byte ptr [ebx+eax+2Ah] 0Ah +
mov ebx [ebp+arg_0] +
jz loc_432598  +
mov eax [ebp+var_8] +
mov ebx [ebp+var_10] +
mov eax dword_459BE0[eax*4] +
mov al [ebx+eax+2Bh] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_432598  +
test ecx ecx +
jz loc_432598  +
mov ebx [ebp+var_10] +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
cmp [ebp+var_1] 1 +
push 2  +
mov [ebp+lpBuffer] edx +
mov eax dword_459BE0[eax*4] +
pop edi  +
mov [ebp+nNumberOfBytesToRead] ecx +
mov byte ptr [ebx+eax+2Bh] 0Ah +
mov ebx [ebp+arg_0] +
jnz loc_432598  +
mov eax [ebp+var_8] +
mov ebx [ebp+var_10] +
mov eax dword_459BE0[eax*4] +
mov al [ebx+eax+2Ch] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_432598  +
test ecx ecx +
jz loc_432598  +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
mov [ebp+nNumberOfBytesToRead] ecx +
mov ecx [ebp+var_10] +
push 3  +
mov eax dword_459BE0[eax*4] +
mov [ebp+lpBuffer] edx +
pop edi  +
mov byte ptr [ecx+eax+2Ch] 0Ah +
push ebx  +
call sub_43A5CD  +
pop ecx  +
test eax eax +
jz loc_432614  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_10] +
mov eax dword_459BE0[eax*4] +
cmp byte ptr [ecx+eax+28h] 0 +
jge loc_432614  +
lea eax [ebp+Mode] +
push eax  +
push [ebp+hFile]  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_432614  +
cmp [ebp+var_1] 2 +
jnz loc_432618  +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov eax [ebp+nNumberOfBytesToRead] +
shr eax 1 +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:ReadConsoleW  +
test eax eax +
jnz loc_432609  +
call ds:GetLastError  +
push eax  +
call sub_424ED2  +
pop ecx  +
or edi 0FFFFFFFFh +
push esi  +
call sub_42E537  +
pop ecx  +
mov eax edi +
pop esi  +
jmp loc_4326DF  +
mov eax [ebp+NumberOfBytesRead] +
mov ecx [ebp+arg_8] +
lea edi [edi+eax*2] +
jmp loc_43263D  +
mov byte ptr [ebp+var_20] 0 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov eax [ebp+nNumberOfBytesToRead] +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:ReadFile  +
test eax eax +
jz loc_43268C  +
mov ecx [ebp+arg_8] +
cmp [ebp+NumberOfBytesRead] ecx +
ja loc_43268C  +
add edi [ebp+NumberOfBytesRead] +
mov eax [ebp+var_8] +
mov edx [ebp+var_10] +
mov eax dword_459BE0[eax*4] +
cmp byte ptr [edx+eax+28h] 0 +
jge loc_4325FA  +
cmp [ebp+var_1] 2 +
jz loc_43266E  +
shr ecx 1 +
push ecx  +
push [ebp+lpWideCharStr]  +
push edi  +
push [ebp+lpBuffer]  +
push ebx  +
call sub_43204D  +
add esp 14h +
mov edi eax +
jmp loc_4325FA  +
shr edi 1 +
cmp byte ptr [ebp+var_20] 0 +
push edi  +
push [ebp+var_24]  +
push ebx  +
jz loc_432685  +
call sub_4321A4  +
add esp 0Ch +
jmp loc_43266A  +
call sub_431E7C  +
jmp loc_432680  +
call ds:GetLastError  +
push 5  +
pop edi  +
cmp eax edi +
jnz loc_4326B0  +
call sub_424F08  +
mov dword ptr [eax] 9 +
call sub_424EF5  +
mov [eax] edi +
jmp loc_4325F7  +
cmp eax 6Dh +
jnz loc_4325F0  +
xor edi edi +
jmp loc_4325FA  +
xor eax eax +
jmp loc_4326DF  +
call sub_424EF5  +
and dword ptr [eax] 0 +
call sub_424F08  +
mov dword ptr [eax] 9 +
call sub_42070A  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_4326E3  +
***
mov eax dword_4597F0 +
mov eax [eax+esi*4] +
test eax eax +
jz loc_4328F8  +
mov eax [eax+0Ch] +
nop   +
shr eax 0Dh +
test al 1 +
jz loc_4328CF  +
mov eax dword_4597F0 +
push dword ptr [eax+esi*4]  +
call sub_423576  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_4328CF  +
inc dword ptr [ebp-1Ch]  +
mov eax dword_4597F0 +
mov eax [eax+esi*4] +
add eax 20h +
push eax  +
call ds:DeleteCriticalSection  +
mov eax dword_4597F0 +
push dword ptr [eax+esi*4]  +
call sub_42E537  +
pop ecx  +
mov eax dword_4597F0 +
and dword ptr [eax+esi*4] 0 +
inc esi  +
jmp loc_432897  +
***
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_43C2DE  +
mov edi edi +
mov edi edi +
call sub_41BFE8  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_43358B  +
push [ebp+arg_4]  +
call sub_42E571  +
pop ecx  +
jmp loc_4335AF  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_43359C  +
push edi  +
call sub_42E537  +
pop ecx  +
jmp loc_4335AC  +
cmp esi 0FFFFFFE0h +
jbe loc_4335C6  +
call sub_424F08  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_42DDB4  +
test eax eax +
jz loc_4335A1  +
push esi  +
call sub_42B2B1  +
pop ecx  +
test eax eax +
jz loc_4335A1  +
push esi  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapReAlloc  +
test eax eax +
jz loc_4335B2  +
jmp loc_4335AE  +
***
mov dword_45A04C eax +
xor eax eax +
retn   +
***
movlpd xmm0 oword ptr [esp+arg_0] +
movlpd xmm7 oword ptr ds:oword_4489E0 +
movlpd xmm2 oword ptr ds:oword_4489F0 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_44A858[eax*4] +
movlpd xmm5 oword ptr ds:oword_44A858[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_44AC70[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_433957  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_448A30+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_4489E0 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_44B480[eax*4] +
mulsd xmm5 ds:qword_44B480[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_44B890[eax*4] +
orpd xmm4 oword ptr ds:oword_4489F0 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_448A30+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_448A40 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_44C0A0[eax*4] +
mulsd xmm2 ds:qword_44C0A0[eax*4] +
addpd xmm6 oword ptr ds:oword_44C8B0[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_448A30+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_433CC8  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_43408A  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_448A30+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_44D8C0 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_44D8D0 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_433E0E  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_4489D0 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_4489D0 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_44D8E0[eax] +
movapd xmm6 oword ptr ds:oword_448A10 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_448A30 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_448A20 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
sub esp 10h +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
movlpd oword ptr [esp+4] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm3 oword ptr ds:oword_448A00 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_433A60  +
or eax ecx +
cmp eax 0 +
jz loc_433D85  +
cmp edx 0 +
jge loc_433A9F  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_433B88  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_433C81  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_448A00 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_448A60 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_433AA4  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_4489E0 +
movlpd xmm2 oword ptr ds:oword_4489F0 +
jmp loc_433686  +
movlpd xmm7 oword ptr [esp+arg_0] +
movlpd xmm4 oword ptr [esp+arg_0] +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_433CFD  +
ja loc_433C6F  +
cmp edx 0 +
ja loc_433C6F  +
jmp loc_433CFD  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_4489E0 +
movlpd xmm2 oword ptr ds:oword_4489F0 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_433B2A  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_448A00 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_44A858[eax*4] +
movlpd xmm5 oword ptr ds:oword_44A858[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_44AC70[eax*4] +
mov edx 43E7Fh +
jmp loc_433686  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_433AD8  +
mov edx dword ptr [esp+arg_0+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_433B77  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_4489F0 +
movlpd xmm2 oword ptr [esp+arg_0] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_433DDE  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_433C29  +
fldz   +
retn   +
movlpd xmm3 oword ptr ds:oword_4489E0 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_433C6F  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_433C53  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_433C37  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_448A00 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_433C37  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_433C30  +
fld  qword ptr ds:oword_448A60 +
retn   +
fld  ds:dbl_448A58 +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_433D6F  +
fldz   +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_433D6F  +
fldz   +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_433DDE  +
movlpd xmm2 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_433B2A  +
movlpd xmm1 oword ptr ds:oword_448A40+8 +
movlpd xmm0 oword ptr ds:oword_448A80 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_433DDE  +
movlpd xmm4 oword ptr [esp+arg_0] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_433CFD  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_433DDB  +
cmp edx 0BFF00000h +
jnz loc_433CFD  +
fld1   +
retn   +
movlpd xmm3 oword ptr ds:oword_4489E0 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_433D76  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+arg_0] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_433DDB  +
cmp eax 0 +
jz loc_433D5B  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_433D6F  +
fldz   +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_433D6F  +
fldz   +
retn   +
fld  ds:dbl_448A50 +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_433DDE  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_4489F0 +
mov edx 1Ah +
cmp eax 0 +
jz loc_433DDE  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_433DDE  +
jb loc_433DCA  +
cmp ecx 0 +
ja loc_433DDE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
fld1   +
retn   +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 18h +
mov [esp+1Ch+var_18] edx +
sub edx 8 +
mov [esp+1Ch+var_1C] edx +
call sub_43C673  +
fld  qword ptr [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
cmp eax 0 +
jle loc_433E3B  +
cmp eax 40000h +
jnb loc_43405A  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_433E61  +
cmp eax 0FFFC0200h +
jle loc_434037  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_4489D0 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_4489D0 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_44D8E0[eax] +
movapd xmm6 oword ptr ds:oword_448A10 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_448A30 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+8+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_448A20 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_433FED  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_433DDE  +
mov edx 19h +
cmp eax 0 +
jz loc_433DDE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_433DDE  +
mov edx 19h +
cmp eax 0 +
jz loc_433DDE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_448A70+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_433DDE  +
mov edx 18h +
cmp ecx 0 +
jz loc_434079  +
movlpd xmm0 oword ptr ds:oword_448A60+8 +
mulsd xmm0 qword ptr ds:oword_448A70 +
jmp loc_433DDE  +
movlpd xmm0 oword ptr ds:oword_448A70 +
mulsd xmm0 xmm0 +
jmp loc_433DDE  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_4337D8  +
cmp eax 80000000h +
jb loc_4340DE  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+arg_0] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_434037  +
jmp loc_43405A  +
***
mov byte ptr [ebp-90h] 0FEh +
or ch ch +
jnz loc_434165  +
fxch  st(1) +
fyl2x   +
jmp loc_43413D  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_43426D  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_434153  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_43415A  +
fscale   +
or ch ch +
jz loc_434160  +
fchs   +
jmp loc_434434  +
***
call sub_4342B0  +
or eax eax +
jz loc_434182  +
xor ch ch +
cmp eax 2 +
jz loc_434177  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_43411D  +
***
jmp loc_43446D  +
***
jmp loc_434530  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_448A90 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_434182  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_448A9A +
retn   +
***
or cl cl +
jnz loc_43421A  +
retn   +
***
fldlg2   +
jmp loc_4341CE  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_434182  +
fyl2x   +
retn   +
***
jmp loc_43446D  +
***
call sub_4342B0  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_4341F7  +
fldz   +
cmp eax 1 +
jnz locret_4341F6  +
or ch ch +
jz locret_4341F6  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_448A90 +
cmp eax 1 +
jnz locret_4341F6  +
or ch ch +
jz locret_4341F6  +
fchs   +
jmp locret_4341F6  +
***
fstp  st +
***
jmp loc_43445A  +
***
fstp  st +
jmp loc_434532  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_434242  +
fstp  st +
fld  ds:tbyte_448A90 +
or ch ch +
jz locret_434241  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_43445A  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_4342D6  +
fld  st +
fmul  ds:dbl_448AC2 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_4342DD  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_4342D5  +
mov eax 2 +
jmp locret_4342D5  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_4347D4  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_434315  +
jmp sub_434543  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_434337  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_43433B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_448B1E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_442218  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_4343AC  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_4343B0  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_448B1E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_442218  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
call sub_434543  +
***
fxch  st(1) +
lea esp [esp+0] +
lea ecx [ecx+0] +
fstp  st +
lea esp [esp+0] +
lea esp [esp+0] +
retn   +
***
call sub_434543  +
jmp loc_434440  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_43446C  +
fchs   +
retn   +
***
fld1   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_43449D  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_448B0E +
retn   +
***
jmp loc_4344B0  +
fxch  st(1) +
lea esp [esp+0] +
lea esp [esp+0] +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4344DE  +
mov byte ptr [ebp-90h] 0 +
jmp loc_4344E5  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_434525  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_434525  +
mov byte ptr [ebp-90h] 0 +
jmp loc_43452C  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_448B04 +
or ch ch +
jz loc_434560  +
fchs   +
or cl cl +
jz locret_43456C  +
fld  ds:dbl_448B16 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_434573  +
fchs   +
retn   +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov [ebp+var_20] eax +
fstp  [ebp+var_8] +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [ebp+var_18] eax +
mov [ebp+var_14] ecx +
lea eax [ebp+arg_0] +
lea ecx [ebp+var_20] +
push eax  +
push ecx  +
push edx  +
call sub_43C867  +
add esp 0Ch +
fld  [ebp+var_8] +
cmp word ptr [ebp+arg_0] 27Fh +
jz locret_4345D1  +
fldcw  word ptr [ebp+arg_0] +
leave   +
retn   +
***
fld  st +
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_434679  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+4+var_4] 27Fh +
jz loc_434689  +
fldcw  [esp+4+var_4] +
pop edx  +
retn   +
***
mov ax [esp+0] +
cmp ax 27Fh +
jz loc_4346B3  +
and ax 20h +
jz loc_4346B0  +
fstsw  ax +
and ax 20h +
jz loc_4346B0  +
mov eax 8 +
call sub_434597  +
pop edx  +
retn   +
fldcw  word ptr [esp+0] +
pop edx  +
retn   +
***
sub esp 8 +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push 3  +
pop eax  +
mov [ebp+var_8] eax +
lea ecx [ebp-1] +
mov [ebp+var_C] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp-1] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_4348FF  +
leave   +
retn   +
***
call sub_42E279  +
call sub_41C4E0  +
mov esi [ebp+8] +
cmp byte ptr [ebp-19h] 0 +
jz locret_434BBF  +
push 3  +
call sub_42A361  +
pop ecx  +
mov edx [ebp-20h] +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_0] +
jbe loc_434D82  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
retn   +
***
mov eax esi +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
call sub_42AE29  +
***
cmp byte_459FB0 0 +
push eax  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
test esi esi +
jnz loc_435B0D  +
xor edi edi +
jmp loc_435B44  +
push ebx  +
push esi  +
call sub_435A3E  +
mov ebx eax +
sub ebx esi +
and ebx 0FFFFFFFEh +
push ebx  +
call sub_42E571  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_435B34  +
push ebx  +
push esi  +
push edi  +
call loc_41D210  +
add esp 0Ch +
push 0  +
call sub_42E537  +
pop ecx  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
mov edi edi +
mov edi edi +
mov eax dword_459B74 +
mov eax dword_459B78 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_435D87  +
***
call ds:GetProcessHeap  +
test eax eax +
mov hHeap eax +
setnz al  +
retn   +
***
and hHeap 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_436832  +
mov eax [esi+0Ch] +
cmp eax off_45809C +
jz loc_43675A  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+10h] +
cmp eax off_4580A0 +
jz loc_43676C  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+14h] +
cmp eax off_4580A4 +
jz loc_43677E  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+18h] +
cmp eax off_4580A8 +
jz loc_436790  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+1Ch] +
cmp eax off_4580AC +
jz loc_4367A2  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+20h] +
cmp eax off_4580B0 +
jz loc_4367B4  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+24h] +
cmp eax off_4580B4 +
jz loc_4367C6  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+38h] +
cmp eax off_4580C8 +
jz loc_4367D8  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+3Ch] +
cmp eax off_4580CC +
jz loc_4367EA  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+40h] +
cmp eax off_4580D0 +
jz loc_4367FC  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+44h] +
cmp eax off_4580D4 +
jz loc_43680E  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+48h] +
cmp eax off_4580D8 +
jz loc_436820  +
push eax  +
call sub_42E537  +
pop ecx  +
mov eax [esi+4Ch] +
cmp eax off_4580DC +
jz loc_436832  +
push eax  +
call sub_42E537  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_437204  +
push 7  +
push esi  +
call sub_436E6F  +
lea eax [esi+1Ch] +
push 7  +
push eax  +
call sub_436E6F  +
lea eax [esi+38h] +
push 0Ch  +
push eax  +
call sub_436E6F  +
lea eax [esi+68h] +
push 0Ch  +
push eax  +
call sub_436E6F  +
lea eax [esi+98h] +
push 2  +
push eax  +
call sub_436E6F  +
push dword ptr [esi+0A0h]  +
call sub_42E537  +
push dword ptr [esi+0A4h]  +
call sub_42E537  +
push dword ptr [esi+0A8h]  +
call sub_42E537  +
lea eax [esi+0B4h] +
push 7  +
push eax  +
call sub_436E6F  +
lea eax [esi+0D0h] +
push 7  +
push eax  +
call sub_436E6F  +
add esp 44h +
lea eax [esi+0ECh] +
push 0Ch  +
push eax  +
call sub_436E6F  +
lea eax [esi+11Ch] +
push 0Ch  +
push eax  +
call sub_436E6F  +
lea eax [esi+14Ch] +
push 2  +
push eax  +
call sub_436E6F  +
push dword ptr [esi+154h]  +
call sub_42E537  +
push dword ptr [esi+158h]  +
call sub_42E537  +
push dword ptr [esi+15Ch]  +
call sub_42E537  +
push dword ptr [esi+160h]  +
call sub_42E537  +
add esp 28h +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
cmp [ebx+0B4h] edi +
jnz loc_43722C  +
mov esi offset off_447CD8 +
jmp loc_437272  +
push 164h  +
push 1  +
call sub_42E4DA  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_437256  +
push ebx  +
push esi  +
call sub_436EA7  +
pop ecx  +
pop ecx  +
test al al +
jnz loc_437261  +
push esi  +
call sub_437123  +
pop ecx  +
mov edi esi +
push edi  +
call sub_42E537  +
xor eax eax +
inc eax  +
jmp loc_437285  +
push edi  +
mov dword ptr [esi+0B0h] 1 +
call sub_42E537  +
pop ecx  +
push dword ptr [ebx+9Ch]  +
call sub_437643  +
mov [ebx+9Ch] esi +
xor eax eax +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor edx edx +
test ecx ecx +
jnz loc_437949  +
xor eax eax +
pop ebp  +
retn   +
movzx eax word ptr [ecx] +
add ecx 2 +
cmp ax 41h +
jb loc_43795B  +
cmp ax 5Ah +
jbe loc_437964  +
add eax 0FFFFFF9Fh +
cmp ax 19h +
ja loc_437967  +
inc edx  +
jmp loc_437949  +
mov eax edx +
pop ebp  +
retn   +
***
and [esi+58h] eax +
inc eax  +
jmp loc_437C33  +
and [esi+58h] ebx +
jmp loc_437ADC  +
mov [esi+58h] ebx +
xor eax eax +
inc eax  +
jmp loc_437C32  +
test byte ptr [esi+58h] 1 +
jnz loc_437AA0  +
push edi  +
call sub_437E05  +
pop ecx  +
test eax eax +
jz loc_437AA0  +
or dword ptr [esi+58h] 1 +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_437AFE  +
jmp loc_437A7E  +
***
mov eax [esi+58h] +
shr eax 2 +
not eax  +
and eax 1 +
pop ebx  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41B626  +
leave   +
retn 0Ch  +
***
and [esi+58h] eax +
inc eax  +
jmp loc_437CF4  +
or dword ptr [esi+58h] 4 +
pop ebx  +
mov eax [esi+58h] +
shr eax 2 +
not eax  +
and eax 1 +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41B626  +
leave   +
retn 0Ch  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
xor edx edx +
push edi  +
inc edx  +
xor edi edi +
test esi esi +
js loc_437EB4  +
push ebx  +
test edx edx +
jz loc_437EB3  +
lea eax [edi+esi] +
cdq   +
sub eax edx +
mov ebx eax +
mov eax [ebp+arg_0] +
sar ebx 1 +
imul ecx ebx +
mov [ebp+var_4] ecx +
push dword ptr [ecx+eax]  +
mov eax [ebp+arg_8] +
push dword ptr [eax]  +
call sub_4250F0  +
mov edx eax +
pop ecx  +
pop ecx  +
test edx edx +
jnz loc_437EA5  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
add eax 4 +
add ecx eax +
mov eax [ebp+arg_8] +
mov [eax] ecx +
jmp loc_437EAF  +
jns loc_437EAC  +
lea esi [ebx-1] +
jmp loc_437EAF  +
lea edi [ebx+1] +
cmp edi esi +
jle loc_437E67  +
pop ebx  +
xor eax eax +
test edx edx +
pop edi  +
setz al  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
call sub_42E279  +
xor ecx ecx +
xor edx edx +
mov [ebp-8] edx +
lea esi [eax+50h] +
lea eax [esi+250h] +
mov [esi+8] edx +
mov [eax] cx +
lea edi [esi+4] +
mov [ebp-4] eax +
mov ecx ebx +
lea eax [ebx+80h] +
mov [esi] ebx +
mov [edi] eax +
cmp [eax] dx +
jz loc_437F12  +
push edi  +
push 16h  +
push offset off_448EA0  +
call sub_437E52  +
mov ecx [esi] +
add esp 0Ch +
xor edx edx +
push esi  +
cmp [ecx] dx +
jz loc_437F5F  +
mov eax [edi] +
cmp [eax] dx +
jz loc_437F26  +
call sub_437845  +
jmp loc_437F2B  +
call sub_4378DE  +
xor eax eax +
pop ecx  +
cmp [esi+8] eax +
jnz loc_437F65  +
push esi  +
push 40h  +
push offset off_448B90  +
call sub_437E52  +
add esp 0Ch +
test eax eax +
jz loc_437F65  +
mov eax [edi] +
xor ecx ecx +
push esi  +
cmp [eax] cx +
jz loc_437F58  +
call sub_437845  +
jmp loc_437F64  +
call sub_4378DE  +
jmp loc_437F64  +
call sub_4377BE  +
pop ecx  +
xor edi edi +
cmp [esi+8] edi +
jz loc_4380A6  +
lea eax [ebx+100h] +
cmp [ebx] di +
jnz loc_437F88  +
cmp [eax] di +
jnz loc_437F88  +
call ds:GetACP  +
jmp loc_437F91  +
push esi  +
push eax  +
call sub_437D0F  +
pop ecx  +
pop ecx  +
mov esi eax +
test esi esi +
jz loc_4380A6  +
cmp esi 0FDE8h +
jz loc_4380A6  +
movzx eax si +
push eax  +
call ds:IsValidCodePage  +
test eax eax +
jz loc_4380A6  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_437FC2  +
mov [eax] esi +
mov edi [ebp+10h] +
test edi edi +
jz loc_4380A1  +
mov ecx [ebp-4] +
lea ebx [edi+120h] +
xor eax eax +
mov [ebx] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-8] +
jnz loc_437FDE  +
sub ecx edx +
sar ecx 1 +
lea eax [ecx+1] +
push eax  +
push dword ptr [ebp-4]  +
push 55h  +
push ebx  +
call sub_429FD2  +
add esp 10h +
test eax eax +
jnz loc_4380AD  +
push 40h  +
push edi  +
push 1001h  +
push ebx  +
call sub_430FC6  +
test eax eax +
jz loc_4380A6  +
push 40h  +
lea ebx [edi+80h] +
push ebx  +
push 1002h  +
lea eax [edi+120h] +
push eax  +
call sub_430FC6  +
test eax eax +
jz loc_4380A6  +
push 5Fh  +
push ebx  +
call sub_43E9EB  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_438058  +
push 2Eh  +
push ebx  +
call sub_43E9EB  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_43806D  +
push 40h  +
push ebx  +
push 7  +
lea eax [edi+120h] +
push eax  +
call sub_430FC6  +
test eax eax +
jz loc_4380A6  +
add edi 100h +
cmp esi 0FDE9h +
jnz loc_438093  +
push 5  +
push offset aUtf8_0  +
push 10h  +
push edi  +
call sub_429FD2  +
add esp 10h +
test eax eax +
jnz loc_4380AD  +
jmp loc_4380A1  +
push 0Ah  +
push 10h  +
push edi  +
push esi  +
call sub_4255F2  +
add esp 10h +
xor eax eax +
inc eax  +
jmp loc_4380A8  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_420737  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor edx edx +
movzx eax word ptr [ecx] +
add ecx 2 +
cmp ax 41h +
jb loc_4382C8  +
cmp ax 5Ah +
jbe loc_4382D1  +
add eax 0FFFFFF9Fh +
cmp ax 19h +
ja loc_4382D4  +
inc edx  +
jmp loc_4382B6  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0FCh +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
call sub_42E279  +
mov ebx eax +
call sub_42E279  +
push esi  +
mov edi [eax+34Ch] +
call sub_438615  +
pop ecx  +
mov ecx [ebx+64h] +
mov esi eax +
neg ecx  +
lea eax [ebp+LCData] +
push 78h  +
sbb ecx ecx +
and ecx 0FFFFF005h +
push eax  +
add ecx 1002h +
push ecx  +
push esi  +
call ds:GetLocaleInfoW  +
and [ebp+var_F8] 0 +
test eax eax +
jz loc_43851D  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+54h]  +
call sub_4250F0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_438417  +
push 78h  +
lea eax [ebp+LCData] +
push eax  +
mov eax [ebx+60h] +
neg eax  +
sbb eax eax +
and eax 0FFFFF002h +
add eax 1001h +
push eax  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_43851D  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_4250F0  +
pop ecx  +
pop ecx  +
mov ecx [edi] +
test eax eax +
jnz loc_4383B0  +
or ecx 304h +
mov [edi+4] esi +
mov [edi] ecx +
jmp loc_438414  +
test cl 2 +
jnz loc_438417  +
cmp dword ptr [ebx+5Ch] 0 +
jz loc_4383FD  +
push dword ptr [ebx+5Ch]  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_425374  +
add esp 0Ch +
test eax eax +
jnz loc_4383FD  +
or dword ptr [edi] 2 +
mov [edi+8] esi +
mov ecx [ebx+50h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax word ptr [ebp+var_F8] +
jnz loc_4383E0  +
sub ecx edx +
sar ecx 1 +
cmp ecx [ebx+5Ch] +
jnz loc_438417  +
mov [edi+4] esi +
jmp loc_438417  +
mov edx [edi] +
test dl 1 +
jnz loc_438417  +
push esi  +
call sub_438747  +
pop ecx  +
test eax eax +
jz loc_438417  +
or edx 1 +
mov [edi] edx +
mov [edi+8] esi +
mov eax [edi] +
mov ecx 300h +
and eax ecx +
cmp eax ecx +
jz loc_438511  +
push 78h  +
lea eax [ebp+LCData] +
push eax  +
mov eax [ebx+60h] +
neg eax  +
sbb eax eax +
and eax 0FFFFF002h +
add eax 1001h +
push eax  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_43851D  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_4250F0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4384D1  +
mov ecx [edi] +
or ecx 200h +
mov [edi] ecx +
cmp [ebx+60h] eax +
jz loc_438486  +
or ecx 100h +
mov [edi] ecx +
cmp [edi+4] eax +
jmp loc_43850C  +
cmp [ebx+5Ch] eax +
jz loc_438476  +
mov edx [ebx+50h] +
lea eax [edx+2] +
mov [ebp+var_FC] eax +
mov ax [edx] +
add edx 2 +
cmp ax word ptr [ebp+var_F8] +
jnz loc_438497  +
sub edx [ebp+var_FC] +
sar edx 1 +
cmp edx [ebx+5Ch] +
jnz loc_4384CD  +
push edi  +
push 1  +
push esi  +
call sub_43876C  +
add esp 0Ch +
test eax eax +
jz loc_438511  +
or dword ptr [edi] 100h +
xor eax eax +
jmp loc_43847E  +
xor eax eax +
jmp loc_438476  +
xor eax eax +
cmp [ebx+60h] eax +
jnz loc_438511  +
cmp [ebx+5Ch] eax +
jz loc_438511  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_4250F0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_438511  +
push edi  +
xor ebx ebx +
push ebx  +
push esi  +
call sub_43876C  +
add esp 0Ch +
test eax eax +
jz loc_438511  +
or dword ptr [edi] 100h +
cmp [edi+4] ebx +
jnz loc_438511  +
mov [edi+4] esi +
mov eax [edi] +
shr eax 2 +
not eax  +
and eax 1 +
jmp loc_438522  +
xor eax eax +
mov [edi] eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41B626  +
leave   +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
call sub_42BEEB  +
mov edi eax +
test edi edi +
jz loc_43A683  +
cmp [ebp+arg_0] 0 +
jz loc_43A683  +
mov esi [ebp+arg_0] +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_43A642  +
sub esi ecx +
jmp loc_43A67D  +
mov edx ecx +
lea eax [edx+1] +
mov [ebp+var_4] eax +
mov al [edx] +
inc edx  +
test al al +
jnz loc_43A655  +
sub edx [ebp+var_4] +
cmp edx esi +
jbe loc_43A67A  +
cmp byte ptr [ecx+esi] 3Dh +
jnz loc_43A67A  +
push esi  +
push [ebp+arg_0]  +
push ecx  +
call sub_43CF9C  +
add esp 0Ch +
test eax eax +
jz loc_43A689  +
add edi 4 +
mov ecx [edi] +
test ecx ecx +
jnz loc_43A64D  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn   +
mov eax [edi] +
inc eax  +
add eax esi +
jmp loc_43A685  +
***
pop ecx  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_43A690  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_43A7A0  +
***
mov edi edi +
call sub_41C4E0  +
cmp dword ptr [ebp-20h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41C4E0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
fld  [ebp+arg_0] +
frndint   +
fstp  [ebp+var_8] +
fld  [ebp+var_8] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_43C9C6  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_43C9C5  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_43C9B0  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_458018 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_104] esi +
mov [ebp+var_108] ebx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_100] edi +
test esi esi +
jnz loc_43CA2F  +
test ecx ecx +
jz loc_43CA2F  +
call sub_424F08  +
mov dword ptr [eax] 16h +
call sub_42070A  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41B626  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_43CA0E  +
test ebx ebx +
jz loc_43CA0E  +
mov [ebp+var_10C] 0 +
cmp ecx 2 +
jb loc_43CA1E  +
dec ecx  +
imul ecx edi +
add ecx esi +
mov [ebp+var_FC] ecx +
mov eax ecx +
xor edx edx +
sub eax esi +
div  edi +
lea edi [eax+1] +
cmp edi 8 +
ja loc_43CB42  +
mov edi [ebp+var_100] +
cmp ecx esi +
jbe loc_43CB15  +
lea edx [edi+esi] +
mov [ebp+var_114] edx +
lea ecx [ecx+0] +
mov eax esi +
mov esi edx +
mov [ebp+var_F8] eax +
cmp esi ecx +
ja loc_43CABF  +
mov edi edi +
push eax  +
push esi  +
mov ecx ebx +
call ds:off_442218  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_43CAAD  +
mov eax esi +
mov [ebp+var_F8] eax +
jmp loc_43CAB3  +
mov eax [ebp+var_F8] +
mov ecx [ebp+var_FC] +
add esi edi +
cmp esi ecx +
jbe loc_43CA90  +
mov edx ecx +
cmp eax ecx +
jz loc_43CAF9  +
sub eax ecx +
mov ebx edi +
mov [ebp+var_F8] eax +
nop   +
mov cl [eax+edx] +
lea edx [edx+1] +
mov esi [ebp+var_F8] +
mov al [edx-1] +
mov [esi+edx-1] al +
mov eax esi +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_43CAD0  +
mov ebx [ebp+var_108] +
mov ecx [ebp+var_FC] +
mov esi [ebp+var_104] +
sub ecx edi +
mov edx [ebp+var_114] +
mov [ebp+var_FC] ecx +
cmp ecx esi +
ja loc_43CA80  +
mov ecx [ebp+var_10C] +
mov eax ecx +
dec ecx  +
mov [ebp+var_10C] ecx +
test eax eax +
jle loc_43CA1E  +
mov esi [ebp+ecx*4+var_7C] +
mov ecx [ebp+ecx*4+var_F4] +
mov [ebp+var_104] esi +
jmp loc_43CA4C  +
mov esi [ebp+var_100] +
mov ecx ebx +
mov eax [ebp+var_104] +
shr edi 1 +
imul edi esi +
add edi eax +
push edi  +
push eax  +
call ds:off_442218  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_43CB78  +
push esi  +
push edi  +
push [ebp+var_104]  +
call sub_43C990  +
add esp 0Ch +
push [ebp+var_FC]  +
mov ecx ebx +
push [ebp+var_104]  +
call ds:off_442218  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_43CBAA  +
push esi  +
push [ebp+var_FC]  +
push [ebp+var_104]  +
call sub_43C990  +
add esp 0Ch +
push [ebp+var_FC]  +
mov ecx ebx +
push edi  +
call ds:off_442218  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_43CBD2  +
push esi  +
push [ebp+var_FC]  +
push edi  +
call sub_43C990  +
add esp 0Ch +
mov eax [ebp+var_FC] +
mov ebx eax +
mov esi [ebp+var_104] +
mov edx [ebp+var_100] +
mov [ebp+var_F8] eax +
lea esp [esp+0] +
cmp edi esi +
jbe loc_43CC2B  +
add esi edx +
mov [ebp+var_110] esi +
cmp esi edi +
jnb loc_43CC25  +
mov ecx [ebp+var_108] +
push edi  +
push esi  +
call ds:off_442218  +
call [ebp+var_108]  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
jle loc_43CBF4  +
cmp edi esi +
ja loc_43CC62  +
mov eax [ebp+var_FC] +
mov ebx [ebp+var_108] +
add esi edx +
cmp esi eax +
ja loc_43CC56  +
push edi  +
push esi  +
mov ecx ebx +
call ds:off_442218  +
call ebx  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_FC] +
jle loc_43CC31  +
mov ebx [ebp+var_F8] +
mov [ebp+var_110] esi +
mov esi [ebp+var_108] +
jmp loc_43CC70  +
mov edx [ebp+var_100] +
mov eax ebx +
sub ebx edx +
mov [ebp+var_F8] eax +
cmp ebx edi +
jbe loc_43CCA3  +
push edi  +
push ebx  +
mov ecx esi +
call ds:off_442218  +
call esi  +
add esp 8 +
test eax eax +
jg loc_43CC70  +
mov edx [ebp+var_100] +
mov eax [ebp+var_F8] +
mov esi [ebp+var_110] +
mov [ebp+var_F8] ebx +
cmp ebx esi +
jb loc_43CD0C  +
mov [ebp+var_11C] edx +
mov [ebp+var_118] ebx +
jz loc_43CCF7  +
sub esi ebx +
mov edx ebx +
mov ebx [ebp+var_11C] +
jmp loc_43CCD0  +
mov al [edx] +
lea edx [edx+1] +
mov cl [esi+edx-1] +
mov [esi+edx-1] al +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_43CCD0  +
mov esi [ebp+var_110] +
mov ebx [ebp+var_F8] +
mov edx [ebp+var_100] +
mov eax [ebp+var_FC] +
cmp edi ebx +
jnz loc_43CBF0  +
mov edi esi +
jmp loc_43CBF0  +
cmp edi eax +
jnb loc_43CD45  +
mov ebx [ebp+var_108] +
sub eax edx +
mov [ebp+var_F8] eax +
cmp eax edi +
jbe loc_43CD45  +
push edi  +
push eax  +
mov ecx ebx +
call ds:off_442218  +
call ebx  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jz loc_43CD16  +
cmp edi eax +
jb loc_43CD80  +
mov ebx [ebp+var_108] +
mov esi [ebp+var_100] +
sub eax esi +
mov [ebp+var_F8] eax +
cmp eax [ebp+var_104] +
jbe loc_43CD7A  +
push edi  +
push eax  +
mov ecx ebx +
call ds:off_442218  +
call ebx  +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jz loc_43CD51  +
mov esi [ebp+var_110] +
mov edx [ebp+var_FC] +
mov ecx edx +
mov edi [ebp+var_104] +
sub ecx esi +
sub eax edi +
cmp eax ecx +
jl loc_43CDD7  +
mov eax [ebp+var_F8] +
cmp edi eax +
jnb loc_43CDB8  +
mov ecx [ebp+var_10C] +
mov [ebp+ecx*4+var_7C] edi +
mov [ebp+ecx*4+var_F4] eax +
inc ecx  +
mov [ebp+var_10C] ecx +
mov ecx [ebp+var_FC] +
mov edi [ebp+var_100] +
cmp esi ecx +
jnb loc_43CB15  +
mov [ebp+var_104] esi +
jmp loc_43CA52  +
cmp esi edx +
jnb loc_43CDF3  +
mov eax [ebp+var_10C] +
mov [ebp+eax*4+var_7C] esi +
mov [ebp+eax*4+var_F4] edx +
inc eax  +
mov [ebp+var_10C] eax +
mov eax [ebp+var_F8] +
mov esi [ebp+var_104] +
mov edi [ebp+var_100] +
cmp esi eax +
jnb loc_43CB15  +
mov ecx eax +
jmp loc_43CA4C  +
***
add edx 1 +
bts [esp] eax +
jmp loc_43CE34  +
***
call sub_4357F0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_43D2C9  +
pop ecx  +
test eax eax +
jnz loc_43D379  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_43D2E6  +
pop ecx  +
test eax eax +
jnz loc_43D379  +
call sub_438AD7  +
xor eax eax +
leave   +
retn   +
xor eax eax +
inc eax  +
leave   +
retn   +
***
cmp dword_45A04C 0 +
jz loc_43D3BB  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_43D3B0  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_43D3BB  +
jmp sub_43DBD0  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_434668  +
call sub_43D3D8  +
add esp 0Ch +
retn   +
***
jz loc_43D42B  +
cmp dword_45A04C 0 +
jz loc_43DE60  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_43D4C4  +
fnstcw  word ptr [esp+8+var_8] +
mov ax word ptr [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_43DE60  +
jmp $+2  +
movq xmm0 [esp+arg_0] +
movapd xmm2 oword ptr ds:oword_44E100 +
movapd xmm1 xmm0 +
movapd xmm7 xmm0 +
psrlq xmm0 34h +
movd eax xmm0 +
andpd xmm0 oword ptr ds:oword_44E120 +
psubd xmm2 xmm0 +
psrlq xmm1 xmm2 +
test eax 800h +
jz loc_43D552  +
cmp eax 0BFFh +
jl loc_43D58A  +
psllq xmm1 xmm2 +
cmp eax 0C32h +
jg loc_43D523  +
movq [esp+arg_0] xmm1 +
fld  [esp+arg_0] +
retn   +
ucomisd xmm7 xmm7 +
jnp loc_43D54D  +
mov edx 3ECh +
sub esp 10h +
mov [esp+10h+var_4] edx +
mov edx esp +
add edx 14h +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] edx +
call sub_43C673  +
add esp 10h +
fld  [esp+arg_0] +
retn   +
movq xmm0 [esp+arg_0] +
psllq xmm1 xmm2 +
movapd xmm3 xmm0 +
cmppd xmm0 xmm1 +
cmp eax 3FFh +
jl loc_43D591  +
cmp eax 432h +
jg loc_43D523  +
andpd xmm0 oword ptr ds:oword_44E0F0 +
addsd xmm1 xmm0 +
movq [esp+arg_0] xmm1 +
fld  [esp+arg_0] +
retn   +
fld  ds:dbl_44E130 +
retn   +
cmppd xmm3 oword ptr ds:oword_44E110 +
andpd xmm3 oword ptr ds:oword_44E0F0 +
movq [esp+arg_0] xmm3 +
fld  [esp+arg_0] +
retn   +
***
push edi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_43DBEE  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_44E140 +
movapd xmm2 oword ptr ds:oword_44E150 +
movapd xmm3 oword ptr ds:oword_44E1B0 +
movapd xmm4 oword ptr ds:oword_44E160 +
movapd xmm6 oword ptr ds:oword_44E170 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_44E660[eax] +
movapd xmm7 oword ptr ds:oword_44E250[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_43DD46  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_44E200 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_44E210 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_44E220 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_44E180 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_44E190[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_44E230 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_44E1C0 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_43DDAB  +
cmp ecx 0FFFFFFFFh +
jz loc_43DDC6  +
cmp ecx 7FEh +
ja loc_43DDDC  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_44E140 +
movapd xmm2 oword ptr ds:oword_44E1B0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_43DDA4  +
fld  ds:dbl_44E1E8 +
retn   +
mov edx 3E9h +
jmp loc_43DDFA  +
movlpd xmm2 oword ptr ds:oword_44E1B0 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_44E1E0 +
mov edx 8 +
jmp loc_43DDFA  +
movlpd xmm1 oword ptr ds:oword_44E1D0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_43DBF3  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_43DE27  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_43C673  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_43DDED  +
mov edx 3E9h +
jmp loc_43DDFA  +
***
lea esp [esp+0] +
jmp loc_43DE60  +
***
xor eax eax +
mov ecx hObject +
cmp ecx 0FFFFFFFEh +
jnz loc_43DF4A  +
call sub_43DF15  +
mov ecx hObject +
xor eax eax +
cmp ecx 0FFFFFFFFh +
setnz al  +
retn   +
***
mov eax hObject +
mov edi edi +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_43E01C  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_43E014  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_43E01E  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_43E004  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_456C60  +
push offset loc_41EF50  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_458018 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_43E0F0  +
add esp 4 +
test eax eax +
jz loc_43E0CF  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_43DFE0  +
add esp 8 +
test eax eax +
jz loc_43E0CF  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jnz loc_43E11F  +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_43E11F  +
mov ecx 10Bh +
cmp [eax+18h] cx +
jnz loc_43E11F  +
mov eax 1 +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_43E161  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_43E1A8  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_43E16F  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_43E19D  +
cmp edx [esp+arg_4] +
ja loc_43E19D  +
jb loc_43E1A6  +
cmp eax [esp+arg_0] +
jbe loc_43E1A6  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_43E1F1  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_43E20D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_43E229  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_43E26A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_43E237  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_43E265  +
cmp edx [esp+arg_4] +
ja loc_43E265  +
jb loc_43E266  +
cmp eax [esp+arg_0] +
jbe loc_43E266  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_43E274  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_43E2A0  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_43E2BB  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_43E2DA  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
dec edi  +
jns loc_43E326  +
jmp loc_43E32D  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_43E2E8  +
div  ecx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_43E313  +
cmp edx [esp+arg_4] +
ja loc_43E313  +
jb loc_43E31B  +
cmp eax [esp+arg_0] +
jbe loc_43E31B  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec edi  +
jns loc_43E32D  +
neg edx  +
neg eax  +
sbb edx 0 +
pop edi  +
pop ebx  +
retn 10h  +
***
or eax eax +
jnz loc_43E361  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
jmp loc_43E3B1  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_43E36F  +
div  ebx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_43E39A  +
cmp edx [esp+arg_4] +
ja loc_43E39A  +
jb loc_43E3A2  +
cmp eax [esp+arg_0] +
jbe loc_43E3A2  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
retn 10h  +
***
cmp cl 40h +
jnb loc_43E3DA  +
cmp cl 20h +
jnb loc_43E3D0  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
jnb loc_43E3FA  +
cmp cl 20h +
jnb loc_43E3F0  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_43E424  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_43E440  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_43E46C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_43E4B3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_43E47A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_43E4A8  +
cmp edx [esp+arg_4] +
ja loc_43E4A8  +
jb loc_43E4B1  +
cmp eax [esp+arg_0] +
jbe loc_43E4B1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_43E4C5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_43E4D9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp dword_4596DC 2 +
jl loc_43E4F1  +
sub esp 4 +
fisttp  dword ptr [esp] +
pop eax  +
retn   +
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  [esp+14h+var_14] +
mov eax dword ptr [esp+14h+var_14+4] +
movzx ecx word ptr [esp+14h+var_14+8] +
btr ecx 0Fh +
sbb edx edx +
cmp cx 3FFFh +
jb loc_43E534  +
test eax eax +
jns loc_43E54F  +
cmp cx 401Eh +
jnb loc_43E53C  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
shr eax cl +
xor eax edx +
sub eax edx +
leave   +
retn   +
frndint   +
fstp  st +
xor eax eax +
leave   +
retn   +
ja loc_43E54F  +
test edx edx +
jns loc_43E54F  +
cmp eax 80000000h +
jnz loc_43E54F  +
frndint   +
fstp  st +
leave   +
retn   +
fcomp  ds:flt_44EA78 +
leave   +
mov eax 80000000h +
retn   +
***
cmp dword_4596DC 2 +
jl loc_43E5A7  +
fldz   +
fucomip st st(1) +
jp loc_43E59B  +
ja loc_43E58C  +
fld  ds:flt_44EA70 +
fucomip st st(1) +
jbe loc_43E59B  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov esp ecx +
retn   +
***
fabs   +
fld1   +
fucomip st st(1) +
jbe loc_43E59B  +
fisttp  dword ptr [esp-4] +
xor eax eax +
retn   +
***
fcomp  ds:flt_44EA78 +
mov eax 0FFFFFFFFh +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
jb loc_43E5E6  +
cmp cx 3FFFh +
jb loc_43E5ED  +
test eax eax +
jns loc_43E5F5  +
cmp cx 401Fh +
jnb loc_43E5F5  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
shr eax cl +
leave   +
retn   +
***
cmp cx 3FFFh +
jnb loc_43E5F5  +
frndint   +
fstp  st +
xor eax eax +
leave   +
retn   +
***
fcomp  ds:flt_44EA78 +
leave   +
mov eax 0FFFFFFFFh +
retn   +
***
cmp dword_4596DC 2 +
jl loc_43E62E  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
cmp cx 3FFFh +
jb loc_43E689  +
test edx edx +
jns loc_43E6AC  +
cmp cx 403Eh +
jnb loc_43E693  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
cmp cl 20h +
jb loc_43E673  +
mov eax edx +
xor edx edx +
shrd eax edx +
shr edx cl +
cmp word ptr [esp+8] 0 +
jge locret_43E687  +
neg eax  +
adc edx 0 +
neg edx  +
leave   +
retn   +
***
frndint   +
fstp  st +
xor eax eax +
xor edx edx +
leave   +
retn   +
***
lea ecx ds:0[edx*2] +
ja loc_43E6AC  +
or ecx eax +
jnz loc_43E6AC  +
cmp word ptr [esp+8] 0 +
jge loc_43E6AC  +
fstp  st +
leave   +
retn   +
***
fcomp  ds:flt_44EA78 +
leave   +
mov edx 80000000h +
xor eax eax +
retn   +
***
jmp loc_43E6C0  +
cmp dword_4596DC 2 +
jl loc_43E70C  +
fldz   +
fucomip st st(1) +
jp loc_43E6FF  +
ja loc_43E6F0  +
fld  ds:flt_44EA74 +
fucomip st st(1) +
jbe loc_43E70C  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
retn   +
***
fabs   +
fld1   +
fucomip st st(1) +
jbe loc_43E6FF  +
fisttp  dword ptr [esp-4] +
xor eax eax +
retn   +
***
fcomp  ds:flt_44EA78 +
mov eax 0FFFFFFFFh +
cdq   +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
jb loc_43E75A  +
cmp cx 3FFFh +
jb loc_43E761  +
test edx edx +
jns loc_43E76B  +
cmp cx 403Fh +
jnb loc_43E76B  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
cmp cl 20h +
jb loc_43E753  +
mov eax edx +
xor edx edx +
shrd eax edx +
shr edx cl +
leave   +
retn   +
***
cmp cx 3FFFh +
jnb loc_43E76B  +
frndint   +
fstp  st +
xor eax eax +
xor edx edx +
leave   +
retn   +
***
fcomp  ds:flt_44EA78 +
leave   +
mov eax 0FFFFFFFFh +
cdq   +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_4596DC 1 +
jb loc_43E88E  +
mov edi [ebp+8] +
ja loc_43E80D  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_43E7ED  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_43E7BD  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_43E84E  +
xor eax eax +
test edi 0Fh +
jz loc_43E834  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_43E84B  +
inc edi  +
test edi 0Fh +
jnz loc_43E81F  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_43E887  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_43E873  +
bsf edx edi +
add eax edx +
jmp loc_43E84B  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_43E8B1  +
xor eax eax +
jmp loc_43E8B3  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
cmp dword_4596DC 1 +
push ecx  +
push ecx  +
cmp dword_4596DC 1 +
jl loc_43EB25  +
cmp [ebp+arg_0] 0C00002B4h +
jz loc_43EAD1  +
cmp [ebp+arg_0] 0C00002B5h +
jnz loc_43EB25  +
stmxcsr [ebp+var_4]  +
mov eax [ebp+var_4] +
xor eax 3Fh +
test al 81h +
jz loc_43EB1E  +
test eax 204h +
jnz loc_43EAED  +
mov eax 0C000008Eh +
leave   +
retn   +
test eax 102h +
jz loc_43EB1E  +
test eax 408h +
jnz loc_43EB02  +
mov eax 0C0000091h +
leave   +
retn   +
test eax 810h +
jnz loc_43EB10  +
mov eax 0C0000093h +
leave   +
retn   +
test eax 1020h +
jnz loc_43EB25  +
mov eax 0C000008Fh +
leave   +
retn   +
mov eax 0C0000090h +
leave   +
retn   +
mov eax [ebp+arg_0] +
leave   +
retn   +
***
cmc   +
sbb eax eax +
retn   +
***
cvttps2pi mm1 ds:qword_453B60 +
cmc   +
sbb eax eax +
cdq   +
retn   +
***
or eax offset qword_453B60 +
mov edx 80000000h +
xor eax eax +
retn   +
***
or eax (offset qword_453B60+4) +
shrd eax edx +
bts eax 1Fh +
retn   +
***
cmp edx 3FF00000h +
jnb loc_43ECBD  +
cvttsd2si eax xmm0 +
xor eax eax +
retn   +
***
cvttss2si ecx dword ptr ds:qword_453B60 +
xor eax eax +
dec eax  +
retn   +
***
cmp dword_4596DC 6 +
jl loc_43ECE7  +
retn 0C301h  +
***
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
movsd qword ptr [esp] xmm0 +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
btr edx 1Fh +
jb loc_43ED4D  +
cmp edx 41E00000h +
jnb loc_43ED12  +
cvttsd2si eax xmm0 +
xor edx edx +
retn   +
***
mov ecx edx +
bts edx 14h +
shr ecx 14h +
and edx 1FFFFFh +
sub ecx 433h +
jge loc_43ED42  +
neg ecx  +
push ebx  +
xor ebx ebx +
shrd ebx eax +
jz loc_43ED3B  +
cvttss2si ebx dword ptr ds:qword_453B60+4 +
pop ebx  +
shrd eax edx +
shr edx cl +
retn   +
***
cmp ecx 0Ch +
jnb loc_43ED5E  +
shld edx eax +
shl eax cl +
retn   +
***
cmp edx 3FF00000h +
jnb loc_43ED5E  +
cvttsd2si eax xmm0 +
xor eax eax +
xor edx edx +
retn   +
***
cvttss2si ecx dword ptr ds:qword_453B60 +
xor eax eax +
dec eax  +
cdq   +
retn   +
***
pop ebx  +
shrd eax edx +
shr edx cl +
retn   +
***
shld edx eax +
shl eax cl +
retn   +
***
mov edx 80000000h +
xor eax eax +
retn   +
***
cmp dword_4596DC 6 +
jl loc_43EE3A  +
xorps xmm0 xmm0 +
cvtsi2sd xmm0 ecx +
shr ecx 1Fh +
addsd xmm0 ds:qword_453B68[ecx*8] +
test edx edx +
jz locret_43EE70  +
xorps xmm1 xmm1 +
cvtsi2sd xmm1 edx +
shr edx 1Fh +
addsd xmm1 ds:qword_453B68[edx*8] +
mulsd xmm1 qword ptr ds:oword_453B70 +
addsd xmm0 xmm1 +
retn   +
***
mulps xmm1 oword ptr ds:oword_453B70 +
addsd xmm0 ds:qword_453B68[ecx*8] +
addsd xmm0 xmm1 +
retn   +
***
sub esp 10h +
stmxcsr dword ptr [esp+10h+var_10+4]  +
mov eax dword ptr [esp+10h+var_10+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_43FA0B  +
fnstcw  word ptr [esp+10h+var_10] +
mov ax word ptr [esp+10h+var_10] +
and ax 7Fh +
cmp ax 7Fh +
jnz loc_43FA0B  +
movlpd oword ptr [esp+10h+var_10] xmm0 +
movlpd oword ptr [esp+10h+var_10+8] xmm1 +
movlpd xmm7 oword ptr ds:oword_453B90 +
movlpd xmm2 oword ptr ds:oword_453BA0 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_44A858[eax*4] +
movlpd xmm5 oword ptr ds:oword_44A858[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_44AC70[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_43F257  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_453BE0+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_453B90 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_44B480[eax*4] +
mulsd xmm5 ds:qword_44B480[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_44B890[eax*4] +
orpd xmm4 oword ptr ds:oword_453BA0 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_453BE0+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_453BF0 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_44C0A0[eax*4] +
mulsd xmm2 ds:qword_44C0A0[eax*4] +
addpd xmm6 oword ptr ds:oword_44C8B0[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_453BE0+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_43F5D8  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_43F994  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_453BE0+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_44D8C0 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_44D8D0 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_43F732  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_453B80 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_453B80 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_44D8E0[eax] +
movapd xmm6 oword ptr ds:oword_453BC0 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_453BE0 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+10h+var_10+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_453BD0 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
movlpd xmm3 oword ptr ds:oword_453BB0 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_43F35E  +
or eax ecx +
cmp eax 0 +
jz loc_43F6AB  +
cmp edx 0 +
jge loc_43F39A  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_43F487  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_43F592  +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
movapd xmm2 xmm1 +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_453BB0 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_453C10 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_43F39F  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_453B90 +
movlpd xmm2 oword ptr ds:oword_453BA0 +
jmp loc_43EF93  +
movlpd xmm7 oword ptr [esp+10h+var_10] +
movapd xmm4 xmm7 +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_43F615  +
ja loc_43F580  +
cmp edx 0 +
ja loc_43F580  +
jmp loc_43F615  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_453B90 +
movlpd xmm2 oword ptr ds:oword_453BA0 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_43F425  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_453BB0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_44A858[eax*4] +
movlpd xmm5 oword ptr ds:oword_44A858[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_44AC70[eax*4] +
mov edx 43E7Fh +
jmp loc_43EF93  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_43F3D3  +
mov edx dword ptr [esp+10h+var_10+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_43F471  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_453BA0 +
movlpd xmm2 oword ptr [esp+10h+var_10] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_43F700  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_43F526  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
movlpd xmm3 oword ptr ds:oword_453B90 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_43F580  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_43F55F  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_43F53E  +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
movapd xmm2 xmm1 +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_453BB0 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_43F53E  +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_43F532  +
movlpd xmm0 oword ptr ds:oword_453C10 +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_453C00+8 +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_43F690  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_43F690  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_43F700  +
movlpd xmm2 oword ptr [esp+10h+var_10] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_43F425  +
movlpd xmm1 oword ptr ds:oword_453BF0+8 +
movlpd xmm0 oword ptr ds:unk_453C30 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_43F700  +
movlpd xmm4 oword ptr [esp+10h+var_10] +
movlpd xmm2 oword ptr [esp+10h+var_10+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_43F615  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_43F6F4  +
cmp edx 0BFF00000h +
jnz loc_43F615  +
movlpd xmm0 oword ptr ds:oword_453BA0 +
add esp 10h +
retn   +
movlpd xmm3 oword ptr ds:oword_453B90 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_43F69C  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+10h+var_10] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_43F6F4  +
cmp eax 0 +
jz loc_43F677  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_43F690  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_43F690  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_453C00 +
add esp 10h +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_43F700  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_453BA0 +
mov edx 1Ah +
cmp eax 0 +
jz loc_43F700  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_43F700  +
jb loc_43F6F0  +
cmp ecx 0 +
ja loc_43F700  +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_44A858 +
add esp 10h +
retn   +
sub esp 18h +
movlpd oword ptr [esp+10h] xmm0 +
mov [esp+28h+var_1C] edx +
mov edx esp +
add edx 10h +
mov [esp+28h+var_20] edx +
add edx 10h +
mov [esp+28h+var_24] edx +
sub edx 8 +
mov [esp+28h+var_28] edx +
call sub_43C673  +
movlpd xmm0 oword ptr [esp+10h] +
add esp 28h +
retn   +
cmp eax 0 +
jle loc_43F75F  +
cmp eax 40000h +
jnb loc_43F964  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_43F785  +
cmp eax 0FFFC0200h +
jle loc_43F941  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_453B80 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_453B80 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_44D8E0[eax] +
movapd xmm6 oword ptr ds:oword_453BC0 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_453BE0 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+18h+var_10+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_453BD0 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_43F904  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_43F700  +
mov edx 19h +
cmp eax 0 +
jz loc_43F700  +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_43F700  +
mov edx 19h +
cmp eax 0 +
jz loc_43F700  +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_453C20+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_43F700  +
mov edx 18h +
cmp ecx 0 +
jz loc_43F983  +
movlpd xmm0 oword ptr ds:oword_453C10+8 +
mulsd xmm0 qword ptr ds:oword_453C20 +
jmp loc_43F700  +
movlpd xmm0 oword ptr ds:oword_453C20 +
mulsd xmm0 xmm0 +
jmp loc_43F700  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_43F0E5  +
cmp eax 80000000h +
jb loc_43F9DB  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+10h+var_10] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_43F941  +
jmp loc_43F964  +
movq qword ptr [esp+10h+var_10] xmm0 +
movq qword ptr [esp+10h+var_10+8] xmm1 +
call sub_42AC34  +
fstp  qword ptr [esp+10h+var_10] +
movq xmm0 qword ptr [esp+10h+var_10] +
add esp 10h +
retn   +
***
lea ecx [ebp-28h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_454F28 +
jmp loc_41CC46  +
***
lea ecx [ebp-220h] +
lea ecx [ebp-250h] +
lea ecx [ebp-410h] +
lea ecx [ebp-2F8h] +
lea ecx [ebp-2E0h] +
lea ecx [ebp-2C8h] +
lea ecx [ebp-2B0h] +
lea ecx [ebp-298h] +
lea ecx [ebp-300h] +
lea ecx [ebp-244h] +
lea ecx [ebp-280h] +
lea ecx [ebp-430h] +
lea ecx [ebp-430h] +
lea ecx [ebp-430h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-430h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-430h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-430h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-430h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-430h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-238h] +
lea ecx [ebp-268h] +
mov eax [ebp-418h] +
mov eax [ebp-418h] +
mov ecx [ebp-418h] +
mov ecx [ebp-450h] +
mov ecx [ebp-434h] +
mov ecx [ebp-450h] +
lea ecx [ebp-44Ch] +
mov eax [ebp-418h] +
mov eax [ebp-418h] +
mov ecx [ebp-434h] +
mov ecx [ebp-450h] +
mov ecx [ebp-434h] +
mov ecx [ebp-450h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-44Ch] +
mov ecx [ebp-434h] +
mov ecx [ebp-450h] +
mov ecx [ebp-434h] +
mov ecx [ebp-450h] +
lea ecx [ebp-44Ch] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-450h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_454F58 +
jmp loc_41CC46  +
***
lea ecx [ebp-28h] +
jmp loc_403260  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4550F8 +
jmp loc_41CC46  +
***
lea ecx [ebp-2Ch] +
mov ecx [ebp-30h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455124 +
jmp loc_41CC46  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_45518C +
jmp loc_41CC46  +
***
lea ecx [ebp-1Ch] +
jmp loc_403C60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4551B8 +
jmp loc_41CC46  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-1Ch] +
jmp loc_403FA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4551E4 +
jmp loc_41CC46  +
***
lea ecx [ebp-48h] +
lea ecx [ebp-60h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455218 +
jmp loc_41CC46  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 2Ch +
jmp loc_4095A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_45524C +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4552A8 +
jmp loc_41CC46  +
***
lea ecx [ebp-28h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4552CC +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4552F8 +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455324 +
jmp loc_41CC46  +
***
lea ecx [ebp-230h] +
lea ecx [ebp-260h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-264h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455350 +
jmp loc_41CC46  +
***
lea ecx [ebp-38h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455384 +
jmp loc_41CC46  +
***
lea ecx [ebp-228h] +
lea ecx [ebp-310h] +
lea ecx [ebp-2F4h] +
lea ecx [ebp-370h] +
lea ecx [ebp-388h] +
lea ecx [ebp-358h] +
lea ecx [ebp-328h] +
lea ecx [ebp-2F4h] +
lea ecx [ebp-2F4h] +
lea ecx [ebp-2F4h] +
lea ecx [ebp-2F4h] +
lea ecx [ebp-2F4h] +
lea ecx [ebp-2F4h] +
lea ecx [ebp-2D8h] +
lea ecx [ebp-2F4h] +
lea ecx [ebp-328h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-388h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4553B0 +
jmp loc_41CC46  +
***
lea ecx [ebp-2028h] +
lea ecx [ebp-2040h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2068h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455458 +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5F8h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455490 +
jmp loc_41CC46  +
***
lea ecx [ebp-230h] +
lea ecx [ebp-260h] +
lea ecx [ebp-278h] +
lea ecx [ebp-248h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-27Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455570 +
jmp loc_41CC46  +
***
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-14h] +
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
lea ecx [ebp-2Ch] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4555B8 +
jmp loc_41CC46  +
***
lea ecx [ebp-1070h] +
lea ecx [ebp-1058h] +
lea ecx [ebp-1040h] +
lea ecx [ebp-1088h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
jmp loc_409760  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 20h +
jmp loc_409330  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455698 +
jmp loc_41CC46  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-2Ch] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4556EC +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455324 +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455324 +
jmp loc_41CC46  +
***
lea ecx [ebp-30h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455764 +
jmp loc_41CC46  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455790 +
jmp loc_41CC46  +
***
mov ecx [ebp-14h] +
jmp sub_40B970  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4557C4 +
jmp loc_41CC46  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4404A8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp loc_4029B0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4557F0 +
jmp loc_41CC46  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-28h] +
lea ecx [ebp-50h] +
lea ecx [ebp-40h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_45581C +
jmp loc_41CC46  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-50h] +
lea ecx [ebp-44h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455860 +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4552A8 +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4552F8 +
jmp loc_41CC46  +
***
lea ecx [ebp-18h] +
jmp sub_40A350  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4558A4 +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4558D0 +
jmp loc_41CC46  +
***
lea ecx [ebp-2Ch] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455928 +
jmp loc_41CC46  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_440648  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-18h] +
jmp loc_4029B0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455954 +
jmp loc_41CC46  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_440688  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp loc_4029B0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455980 +
jmp loc_41CC46  +
***
lea ecx [ebp-1Ch] +
push eax  +
lea ecx [ebp-18h] +
jmp loc_40CB40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4559AC +
jmp loc_41CC46  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4559E8 +
jmp loc_41CC46  +
***
lea ecx [ebp-30h] +
push eax  +
mov eax [ebp-20h] +
mov ecx [ebp-24h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
jmp loc_40CB40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-128h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455A40 +
jmp loc_41CC46  +
***
lea ecx [ebp-20h] +
push eax  +
lea ecx [ebp-18h] +
jmp loc_40CB40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A0h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455A9C +
jmp loc_41CC46  +
***
lea ecx [ebp-230h] +
lea ecx [ebp-248h] +
lea ecx [ebp-260h] +
lea ecx [ebp-260h] +
lea ecx [ebp-260h] +
lea ecx [ebp-260h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-264h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455AD8 +
jmp loc_41CC46  +
***
lea ecx [ebp-24Ch] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-250h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455B2C +
jmp loc_41CC46  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-4Ch] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455B58 +
jmp loc_41CC46  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-58h] +
jmp loc_4029B0  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-1Ch] +
jmp loc_403260  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455BC8 +
jmp loc_41CC46  +
***
lea ecx [ebp+38h] +
lea ecx [ebp+20h] +
lea ecx [ebp+8] +
lea ecx [ebp-5020h] +
lea ecx [ebp-505Ch] +
lea ecx [ebp-503Ch] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5060h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455BFC +
jmp loc_41CC46  +
***
mov ecx [ebp-18h] +
mov ecx [ebp-14h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455C50 +
jmp loc_41CC46  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-5Ch] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455C84 +
jmp loc_41CC46  +
***
lea ecx [ebp-44h] +
lea ecx [ebp-0C4h] +
lea ecx [ebp-0DCh] +
lea ecx [ebp-0C4h] +
lea ecx [ebp-2Ch] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0DCh] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455CB8 +
jmp loc_41CC46  +
***
lea ecx [ebp-28h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455D04 +
jmp loc_41CC46  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-3Ch] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-100h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455D30 +
jmp loc_41CC46  +
***
lea ecx [ebp+8] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455D84 +
jmp loc_41CC46  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-34h] +
lea ecx [ebp-28h] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455DB8 +
jmp loc_41CC46  +
***
lea ecx [ebp-20h] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455E30 +
jmp loc_41CC46  +
***
lea ecx [ebp-448h] +
lea ecx [ebp-460h] +
lea ecx [ebp-478h] +
lea ecx [ebp-478h] +
lea ecx [ebp-428h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-490h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455E90 +
jmp loc_41CC46  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455EE0 +
jmp loc_41CC46  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-40h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455F50 +
jmp loc_41CC46  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-70h] +
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A0h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455F8C +
jmp loc_41CC46  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-50h] +
mov eax [ebp-80h] +
and eax 1 +
jz locret_440D78  +
and dword ptr [ebp-80h] 0FFFFFFFEh +
lea ecx [ebp-68h] +
jmp loc_4029B0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_455FD0 +
jmp loc_41CC46  +
***
lea ecx [ebp-2B0h] +
lea ecx [ebp-234h] +
lea ecx [ebp-280h] +
lea ecx [ebp-2C8h] +
lea ecx [ebp-298h] +
lea ecx [ebp-250h] +
lea ecx [ebp-268h] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-2FCh] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-2FCh] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-2FCh] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-308h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456010 +
jmp loc_41CC46  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_440EA8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-1Ch] +
jmp loc_4029B0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4560B8 +
jmp loc_41CC46  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4560E4 +
jmp loc_41CC46  +
***
lea ecx [ebp-0C0h] +
jmp sub_405ED0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0BCh] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456118 +
jmp loc_41CC46  +
***
mov eax [ebp-14h] +
mov ecx [ebp-18h] +
mov ecx [ebp-1Ch] +
jmp loc_4091C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456144 +
jmp loc_41CC46  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-2Ch] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456188 +
jmp loc_41CC46  +
***
lea ecx [ebp-48h] +
lea ecx [ebp-48h] +
lea ecx [ebp-40h] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456200 +
jmp loc_41CC46  +
***
lea ecx [ebp-38h] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456278 +
jmp loc_41CC46  +
***
lea ecx [ebp-48h] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4562A4 +
jmp loc_41CC46  +
***
lea ecx [ebp-54h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-74h] +
lea ecx [ebp-7Ch] +
jmp sub_404C10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4562D0 +
jmp loc_41CC46  +
***
lea ecx [ebp-94h] +
lea ecx [ebp-60h] +
lea ecx [ebp-94h] +
lea ecx [ebp-48h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A4h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_45631C +
jmp loc_41CC46  +
***
lea ecx [ebp-78h] +
lea ecx [ebp-60h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-9Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456360 +
jmp loc_41CC46  +
***
lea ecx [ebp-0A8h] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-0B0h] +
lea ecx [ebp-64h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0BCh] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456394 +
jmp loc_41CC46  +
***
lea ecx [ebp-28h] +
jmp loc_409760  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_4563D8 +
jmp loc_41CC46  +
***
lea ecx [ebp-230h] +
lea ecx [ebp-260h] +
lea ecx [ebp-278h] +
lea ecx [ebp-248h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-274h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456404 +
jmp loc_41CC46  +
***
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
lea ecx [ebp-108h] +
lea ecx [ebp-108h] +
lea ecx [ebp-108h] +
lea ecx [ebp-170h] +
lea ecx [ebp-140h] +
lea ecx [ebp-128h] +
jmp loc_4029B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-170h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456448 +
jmp loc_41CC46  +
***
lea ecx [ebp-30h] +
jmp loc_4029B0  +
***
lea ecx [ebp-10h] +
jmp sub_41A438  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456580 +
jmp loc_41CC46  +
***
lea ecx [ebp-3Ch] +
jmp loc_4214A2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_41B626  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41B626  +
mov eax offset unk_456ADC +
jmp loc_41CC46  +
***
mov edx dword_4589C4 +
cmp edx 8 +
jb loc_4413A0  +
mov ecx dword_4589B0 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_441396  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_42071A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword_4589C0 0 +
mov dword_4589C4 7 +
mov word ptr dword_4589B0 ax +
retn   +
***
mov eax dword_45A018 +
mov ecx offset dword_45A018 +
push dword ptr [eax+4]  +
push offset dword_45A018  +
call sub_4043A0  +
push 34h  +
push dword_45A018  +
call sub_41B8B8  +
add esp 8 +
retn   +
***
mov edx dword_4589DC +
cmp edx 8 +
jb loc_441430  +
mov ecx dword_4589C8 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_441426  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_42071A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword_4589D8 0 +
mov dword_4589DC 7 +
mov word ptr dword_4589C8 ax +
retn   +
***
mov edx dword_4589F4 +
cmp edx 8 +
jb loc_441490  +
mov ecx dword_4589E0 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_441486  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_42071A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword_4589F0 0 +
mov dword_4589F4 7 +
mov word ptr dword_4589E0 ax +
retn   +
***
mov edx dword_458A0C +
cmp edx 8 +
jb loc_4414F0  +
mov ecx dword_4589F8 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4414E6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_42071A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword_458A08 0 +
mov dword_458A0C 7 +
mov word ptr dword_4589F8 ax +
retn   +
***
mov edx dword_458A24 +
cmp edx 8 +
jb loc_441550  +
mov ecx dword_458A10 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_441546  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_42071A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword_458A20 0 +
mov dword_458A24 7 +
mov word ptr dword_458A10 ax +
retn   +
***
mov edx dword_458A3C +
cmp edx 8 +
jb loc_4415B0  +
mov ecx dword_458A28 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4415A6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_42071A  +
push edx  +
push ecx  +
call sub_41B8B8  +
add esp 8 +
xor eax eax +
mov dword_458A38 0 +
mov dword_458A3C 7 +
mov word ptr dword_458A28 ax +
retn   +
***
mov ecx [eax] +
push eax  +
mov dword_45A004 ecx +
call sub_41BD80  +
mov eax dword_45A004 +
add esp 4 +
test eax eax +
jnz loc_4415E0  +
retn   +
***
mov ecx offset unk_4591CC +
jmp loc_41A4E1  +
***
mov ecx offset unk_4591C4 +
jmp sub_404C10  +
***
mov ecx offset unk_4592E1 +
jmp loc_41B409  +
***
mov ecx offset unk_4596FC +
jmp loc_41C753  +
***
push offset unk_458058  +
call ds:VariantClear  +
retn   +
***
