mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
mov [ebp+cchBuffer] 1FFh +
cmp hSCManager esi +
jnz loc_1001715  +
push 80000000h  +
push esi  +
push esi  +
call ds:OpenSCManagerW  +
mov hSCManager eax +
cmp eax esi +
jz loc_10033B7  +
lea eax [ebp+cchBuffer] +
push eax  +
mov esi offset ServiceName +
push esi  +
push [ebp+lpDisplayName]  +
push hSCManager  +
call ds:GetServiceKeyNameW  +
test eax eax +
mov eax [ebp+lpDisplayName] +
jz loc_1001737  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp off_1019FA0 esi +
jz loc_1001774  +
mov eax offset off_1019FA0 +
push [ebp+arg_0]  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100177B  +
inc esi  +
lea eax off_1019FA0[esi*8] +
cmp dword ptr [eax] 0 +
jnz loc_1001756  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
mov eax dword_1019FA4[esi*8] +
jmp loc_1001776  +
***
push offset dword_1019024  +
push dword_1020084  +
mov dword_1019024 eax +
push offset dword_1019068  +
push offset dword_101906C  +
push offset dword_1019064  +
call ds:__getmainargs  +
add esp 14h +
mov dword_1019020 eax +
retn   +
***
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_1019000 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1019000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jnz loc_10034DB  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_10018D0  +
test dword_1019000 ebx +
jz loc_10018D0  +
mov dword_1019000 esi +
not esi  +
mov dword_1019004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
mov esi 0BB40E64Fh +
jmp loc_10018BD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1001904  +
mov eax [ebp+arg_0] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10018ED  +
sub eax edx +
jz loc_1001904  +
mov ecx eax +
mov eax [ebp+arg_0] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_10018FD  +
pop ebp  +
retn 4  +
***
mov ax word ptr dword_101902C +
cmp word_101F80A[edi] ax +
jz loc_1001B53  +
movsx eax word_101F808[edi] +
mov [ebp+arg_0] eax +
jmp loc_1001B21  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
add eax edi +
inc [ebp+arg_14]  +
jmp loc_100197E  +
***
cmp cx 9 +
jz loc_1001A6F  +
cmp word ptr [eax] 0 +
jz loc_1001933  +
test ebx ebx +
jz loc_100196D  +
cmp ebx [ebp+var_4] +
jnb loc_100196D  +
mov [ebx] esi +
add ebx 4 +
mov [ebp+arg_4] ebx +
mov ecx [ebp+arg_C] +
inc dword ptr [ecx]  +
xor ecx ecx +
mov [ebp+arg_0] 1 +
mov [ebp+arg_14] ecx +
cmp word ptr [eax] 5Ch +
jz loc_100193A  +
cmp word ptr [eax] 22h +
jz loc_1003540  +
cmp word ptr [ebp+arg_14] cx +
jnz loc_1003584  +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_10019C7  +
cmp [ebp+arg_10] 0 +
jnz loc_10019B2  +
cmp cx 20h +
jz loc_10019C7  +
cmp cx 9 +
jz loc_10019C7  +
cmp [ebp+arg_0] 0 +
jz loc_10019C3  +
test esi esi +
jz loc_10019C1  +
mov [esi] cx +
add esi edi +
add [edx] edi +
add eax edi +
jmp loc_1001972  +
test esi esi +
jz loc_10019D2  +
xor ecx ecx +
mov [esi] cx +
add esi edi +
add [edx] edi +
mov ebx [ebp+arg_4] +
jmp loc_1001A58  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_14] +
mov edx [ebp+arg_10] +
and dword ptr [edx] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
shr eax 2 +
lea ecx [ebx+eax*4-4] +
mov eax [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_8] +
mov dword ptr [eax] 1 +
mov eax [ebp+arg_0] +
push edi  +
mov [ebp+var_4] ecx +
test ebx ebx +
jz loc_1001A1C  +
cmp ebx ecx +
jnb loc_1001A1C  +
mov [ebx] esi +
add ebx 4 +
mov [ebp+arg_4] ebx +
cmp word ptr [eax] 22h +
push 2  +
pop edi  +
jz loc_10034F9  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
add [edx] edi +
test esi esi +
jnz loc_1001A80  +
movzx ecx word ptr [eax] +
add eax edi +
cmp cx 20h +
ja loc_1001A30  +
test cx cx +
jz loc_1003539  +
test esi esi +
jz loc_1001A54  +
xor ecx ecx +
mov [esi-2] cx +
and [ebp+arg_10] 0 +
cmp word ptr [eax] 0 +
jz loc_1001933  +
movzx ecx word ptr [eax] +
cmp cx 20h +
jnz loc_100194C  +
add eax edi +
jmp loc_1001A62  +
mov cx [eax] +
mov [esi] cx +
add esi edi +
jmp loc_1001A36  +
***
cmp ebx 27h +
jnb loc_1002A65  +
test ebx ebx +
jl loc_1001B82  +
movsx eax word_101F808[edi] +
push ebx  +
push esi  +
push eax  +
call sub_1001AFA  +
mov dword_101A040[ebx*4] eax +
test eax eax +
jnz loc_1002A6F  +
cmp esi [ebp+var_4] +
jz loc_100192A  +
sub esi 4 +
mov eax [esi] +
lea eax dword_101A0E0[eax*8] +
mov ecx [eax+4] +
mov dword_1019050 eax +
mov eax [eax] +
sub esi 4 +
mov dword_101902C ecx +
mov dword_1019030 eax +
mov ebx [esi] +
sub esi 4 +
mov eax [esi] +
mov [ebp+arg_0] eax +
jmp loc_1001B85  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
mov ecx ebx +
shl ecx 2 +
push edi  +
mov [ebp+var_4] esi +
mov [ebp+arg_4] ebx +
mov [ebp+arg_8] ecx +
mov dword_101A040[ecx] 1 +
mov edi [ebp+arg_0] +
add edi edi +
movzx eax word_101F398[edi] +
dec eax  +
cmp eax 0Ah +
ja loc_1001B82  +
jmp ds:off_1002AEB[eax*4]  +
movzx eax word_101F39A[edi] +
cmp eax 3 +
jz loc_1001908  +
cmp eax 4 +
jz loc_1001908  +
cmp esi offset unk_101B32C +
jnb loc_1002A5B  +
movsx eax word_101F808[edi] +
mov [esi] eax +
add esi 4 +
mov [esi] ebx +
mov eax dword_1019050 +
sub eax offset dword_101A0E0 +
add esi 4 +
sar eax 3 +
mov [esi] eax +
add esi 4 +
inc [ebp+arg_0]  +
mov ecx [ebp+arg_8] +
jmp loc_1001B21  +
cmp ebx 28h +
jnb loc_1002AAC  +
cmp ebx 27h +
jnb loc_1001BA9  +
test ebx ebx +
jl loc_1001BA9  +
mov eax dword_1019030 +
mov dword_101A040[ebx*4] eax +
inc ebx  +
mov ax word ptr dword_101902C +
cmp word_101F808[edi] ax +
jnz loc_1001AB9  +
call sub_1001BC8  +
jmp loc_1001B82  +
***
add dword_1019050 8 +
push esi  +
mov esi dword_1019050 +
cmp esi offset unk_101A180 +
jnb loc_10034EF  +
cmp esi dword_1019054 +
jbe loc_1001BF8  +
push esi  +
call off_101FC78  +
add dword_1019054 8 +
mov eax [esi+4] +
mov dword_101902C eax +
mov eax [esi] +
mov dword_1019030 eax +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov dword_1019028 esi +
cmp esi 834h +
jnb loc_1001CCC  +
push 0Ah  +
lea eax [ebp+var_54] +
push eax  +
push esi  +
call ds:_ultow  +
mov ebx esi +
add esp 0Ch +
mov dword_1019DD8 eax +
mov [ebp+arg_4] 1 +
mov esi 0DAEh +
lea eax [ebp+var_58] +
push eax  +
push offset aNetmsg  +
push esi  +
mov edi 800h +
push edi  +
mov esi offset Buffer +
push esi  +
push [ebp+arg_4]  +
push offset dword_1019DD8  +
call sub_1001EAF  +
push 1  +
push esi  +
push hConsoleHandle  +
call sub_1001CDF  +
test ebx ebx +
jz loc_1001CBB  +
lea eax [ebp+var_58] +
push eax  +
push offset aBase  +
push ebx  +
push edi  +
push esi  +
push 9  +
push offset off_1019DAC  +
call sub_1001EAF  +
push 1  +
push esi  +
push hConsoleHandle  +
call sub_1001CDF  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 8  +
cmp esi 170Bh +
ja loc_1001C3D  +
jmp loc_1001C60  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpWideCharStr] +
mov eax esi +
lea edx [eax+2] +
nop   +
nop   +
nop   +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1001CF0  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
push [ebp+hConsoleHandle]  +
call sub_1001D43  +
cmp [ebp+arg_8] 0 +
jz loc_1001D31  +
nop   +
nop   +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1001D36  +
cmp ax 0Ah +
jz loc_1001D22  +
inc esi  +
inc esi  +
jmp loc_1001D10  +
push 2  +
push offset WideCharStr  +
push [ebp+hConsoleHandle]  +
call sub_1001D43  +
pop esi  +
pop ebp  +
retn 0Ch  +
cmp word ptr [esi] 0Ah +
jz loc_1001D22  +
jmp loc_1001D31  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+hConsoleHandle]  +
call sub_1001D76  +
test eax eax +
jz loc_100369B  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+NumberOfBytesWritten]  +
push [ebp+lpWideCharStr]  +
push [ebp+hConsoleHandle]  +
call ds:WriteConsoleW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+hConsoleHandle]  +
call ds:GetFileType  +
and eax 0FFFF7FFFh +
cmp eax 2 +
jnz loc_1001DA7  +
lea eax [ebp+Mode] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_1001DA7  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
xor eax eax +
jmp locret_1001DA3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1019034 +
mov eax dword_101A6F0[eax*4] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi] eax +
test eax eax +
jnz loc_1001DD6  +
or eax 0FFFFFFFFh +
mov [esi+4] eax +
pop esi  +
pop ebp  +
retn 4  +
inc dword_1019034  +
cmp off_101A184 0 +
push edi  +
mov edi offset unk_101A180 +
jz loc_1001E0A  +
nop   +
nop   +
nop   +
nop   +
nop   +
push dword ptr [esi]  +
push dword ptr [edi+4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1001E10  +
add edi 8 +
cmp dword ptr [edi+4] 0 +
jnz loc_1001DF0  +
push 0FFFFFFFEh  +
pop eax  +
pop edi  +
jmp loc_1001DCE  +
mov eax [edi] +
jmp loc_1001E0D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp NetApiBufferAllocate  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp NetApiBufferFree  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp esi [ebp+arg_4] +
jnb loc_1001E6A  +
test eax eax +
jnz loc_1001E6A  +
mov ecx [esi] +
test ecx ecx +
jz loc_1001E65  +
call ecx  +
add esi 4 +
jmp loc_1001E54  +
pop esi  +
pop ebp  +
retn   +
***
mov edi offset unk_101A4E8 +
test eax eax +
jnz loc_10035C8  +
push esi  +
push 104h  +
push edi  +
call wcscpy_s  +
add esp 0Ch +
push esi  +
call ds:LoadLibraryW  +
mov lpSource eax +
test eax eax +
jz loc_100360E  +
mov edi [ebp+var_54] +
mov ecx 2800h +
jmp loc_1001F2F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_4C] 0 +
cmp [ebp+nSize] 0 +
push ebx  +
mov ebx [ebp+arg_18] +
push esi  +
mov esi [ebp+arg_14] +
push edi  +
mov edi [ebp+lpBuffer] +
mov [ebp+Arguments] eax +
mov [ebp+var_54] edi +
mov [ebp+var_58] esi +
jz loc_1001EE8  +
xor eax eax +
mov [edi] ax +
cmp [ebp+arg_4] 64h +
ja loc_10035C0  +
mov ecx offset aBase +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1001F6D  +
test dx dx +
jz loc_1001F1B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1001F6D  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1001EF9  +
xor eax eax +
test eax eax +
mov eax lpSource +
jnz loc_1001E6D  +
mov ecx 3000h +
cmp [ebp+arg_4] 0 +
jz loc_1003618  +
push [ebp+Arguments]  +
mov esi ds:FormatMessageW +
push [ebp+nSize]  +
push edi  +
push 0  +
push [ebp+dwMessageId]  +
push eax  +
push ecx  +
call esi  +
mov [ebx] eax +
test eax eax +
jz loc_1003623  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 1Ch  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
jmp loc_1001F1D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi offset a_ocp +
lea edi [ebp+var_10] +
movs   +
movs   +
xor ebx ebx +
xor eax eax +
lea edi [ebp+var_B] +
stos   +
push ebx  +
push ebx  +
stos   +
push 1  +
push ebx  +
mov [ebp+var_18] ebx +
stos   +
call ds:HeapSetInformation  +
mov edi ds:GetLastError +
test eax eax +
jz loc_1002E8F  +
mov eax [ebp+arg_0] +
mov dword_1019008 eax +
mov eax [ebp+arg_4] +
mov dword_101900C eax +
call ds:GetConsoleOutputCP  +
mov esi eax +
push offset CPInfo  +
push esi  +
call ds:GetCPInfo  +
push ebx  +
call ds:SetThreadUILanguage  +
cmp esi ebx +
jz loc_1002002  +
push esi  +
push offset dword_1002118  +
lea eax [ebp+var_10] +
push 0Ch  +
push eax  +
call sprintf_s  +
add esp 10h +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
call ds:setlocale  +
mov esi ds:GetStdHandle +
pop ecx  +
pop ecx  +
push 0FFFFFFF5h  +
call esi  +
mov dword_1019038 eax +
cmp eax 0FFFFFFFFh +
jz loc_1002E9C  +
push 0FFFFFFF4h  +
call esi  +
mov hConsoleHandle eax +
cmp eax 0FFFFFFFFh +
jz loc_1002EA9  +
lea eax [ebp+arg_0] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call sub_1002C79  +
mov dword_101903C eax +
cmp eax ebx +
jz loc_1002EB6  +
add dword_101903C 4 +
dec [ebp+arg_0]  +
mov [ebp+var_1C] ebx +
mov [ebp+var_14] ebx +
jz loc_10020BE  +
mov edi ds:_wcsnicmp +
mov ebx 0DAFh +
mov eax dword_101903C +
mov ecx [eax] +
cmp word ptr [ecx] 2Fh +
jz loc_1002EC2  +
mov eax 100h +
cmp word ptr [ebp+var_14] ax +
jge loc_1002F7D  +
movsx eax word ptr [ebp+var_14] +
inc [ebp+var_14]  +
mov dword_101A6F0[eax*4] ecx +
mov cx word ptr [ebp+var_18] +
mov word_101A2E8[eax*2] cx +
add dword_101903C 4 +
inc [ebp+var_18]  +
dec [ebp+arg_0]  +
jnz loc_1002073  +
xor ebx ebx +
push ebx  +
push 2000h  +
push offset unk_101D340  +
call sub_1002121  +
push ebx  +
push 1000h  +
push offset word_101C340  +
call sub_1002121  +
push 4000h  +
push ds:_iob  +
call ds:_fileno  +
pop ecx  +
push eax  +
call ds:_setmode  +
pop ecx  +
pop ecx  +
call sub_1002C30  +
push ebx  +
call sub_1002992  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push 10h  +
call sub_1001E19  +
test eax eax +
jnz loc_1002E78  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
mov [eax+8] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
mov [eax+0Ch] ecx +
mov eax [ebp+var_4] +
and dword ptr [eax+4] 0 +
mov eax dword_1019010 +
test eax eax +
jnz loc_1002170  +
mov eax [ebp+var_4] +
mov dword_1019010 eax +
leave   +
retn 0Ch  +
cmp dword ptr [eax+4] 0 +
jnz loc_100217E  +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
jmp locret_100216C  +
mov eax [eax+4] +
jmp loc_1002170  +
***
call sub_100184D  +
push 10h  +
push offset dword_1002278  +
call sub_10017FB  +
xor ebx ebx +
mov [ebp-4] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp-1Ch] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jnz loc_10033C8  +
xor esi esi +
inc esi  +
mov eax dword_101904C +
cmp eax esi +
jz loc_10033E7  +
mov eax dword_101904C +
test eax eax +
jnz loc_1002251  +
mov dword_101904C esi +
push offset dword_1002274  +
push offset dword_1002268  +
call sub_1001E49  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10033F4  +
mov eax dword_101904C +
cmp eax esi +
jnz loc_100221C  +
push offset dword_1002264  +
push offset dword_100225C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_101904C 2 +
cmp [ebp-1Ch] ebx +
jnz loc_1002229  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1020094 ebx +
jnz loc_1003405  +
push dword_1019068  +
push dword_101906C  +
push dword_1019064  +
call sub_1001F79  +
jmp loc_1003427  +
mov dword_10223E8 esi +
jmp loc_10021F8  +
***
inc dword ptr [ebx+1FC743Dh]  +
add [eax] eax +
jz loc_10034B4  +
call sub_1002343  +
xor eax eax +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
call sub_10040C3  +
jmp loc_1002813  +
call sub_10044D5  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1005453  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100551A  +
jmp loc_1002813  +
call sub_1004829  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1004FDB  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1005015  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call ds:_wcsupr  +
pop ecx  +
push eax  +
call sub_100530F  +
jmp loc_1002813  +
push 0  +
call sub_1005885  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
jmp loc_10023CE  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_10055E1  +
jmp loc_1002813  +
call sub_10060E0  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1006270  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1005DE1  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1005AD6  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1005C6C  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1005E68  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1005FA4  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_10119CF  +
jmp loc_1002813  +
push 2  +
jmp loc_1002699  +
push 1  +
jmp loc_1002699  +
push 2  +
push 1  +
jmp loc_100269B  +
push 1  +
jmp loc_100247A  +
call sub_100649F  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1006605  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1006AE2  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_10067DF  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100695E  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1006B67  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1006DB0  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call ds:_wcsupr  +
pop ecx  +
push eax  +
call sub_1005355  +
jmp loc_1002813  +
push 0  +
push 0  +
call sub_10088EB  +
jmp loc_1002813  +
push 1  +
jmp loc_1002509  +
push 1  +
push 1  +
call sub_1008644  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push 0  +
push dword ptr [eax+4]  +
jmp loc_100250B  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100886F  +
jmp loc_1002813  +
call sub_1009882  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100A61D  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100A91A  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push 0  +
push 0  +
push dword ptr [eax+4]  +
call sub_100A38B  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1009B45  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100A83B  +
jmp loc_1002813  +
call sub_100AAE2  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
jmp loc_1002806  +
call sub_100AD63  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call ds:_wcsupr  +
pop ecx  +
push eax  +
call sub_100B791  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call ds:_wcsupr  +
pop ecx  +
push eax  +
call sub_100B9EF  +
jmp loc_1002813  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100C601  +
jmp loc_1002813  +
push 0  +
jmp loc_10025F3  +
push 1  +
call sub_100C629  +
jmp loc_1002813  +
push 0  +
jmp loc_1002609  +
push 1  +
push 1  +
call sub_100C66C  +
jmp loc_1002813  +
push 1  +
push 0  +
jmp loc_100261B  +
push 0  +
jmp loc_1002619  +
push 0  +
jmp loc_1002627  +
call sub_100CF09  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100D5A1  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_100C704  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push 0  +
push dword ptr [eax+4]  +
call sub_100E540  +
jmp loc_1002813  +
mov eax [ebp+arg_4] +
push 0  +
push dword ptr [eax+4]  +
jmp loc_100268D  +
mov eax [ebp+arg_4] +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
jmp loc_1002665  +
mov eax [ebp+arg_4] +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_100E902  +
jmp loc_1002813  +
push 0  +
push 0  +
call sub_1011D71  +
jmp loc_1002813  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 4Fh +
ja loc_1002813  +
jmp ds:off_10026A5[eax*4]  +
mov eax [ebp+arg_4] +
push 0  +
push dword ptr [eax+4]  +
call ds:_wcsupr  +
pop ecx  +
push eax  +
call sub_100281E  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpDisplayName]  +
call sub_10016E3  +
mov esi eax +
push esi  +
call sub_1001741  +
dec eax  +
jz loc_100339D  +
dec eax  +
jz loc_1003384  +
dec eax  +
jz loc_100336A  +
dec eax  +
jz loc_1003351  +
dec eax  +
jz loc_1003338  +
push 0  +
push esi  +
call sub_1002869  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpServiceName] +
mov ecx lpDateStr +
mov dword_1019014 eax +
xor eax eax +
push ebx  +
mov [ecx] ax +
xor ebx ebx +
push esi  +
mov esi lpDateStr +
cmp dword_101FC80 eax +
jnz loc_10032EF  +
xor eax eax +
mov [esi] ax +
sub esi lpDateStr +
sar esi 1 +
push esi  +
push [ebp+lpServiceName]  +
call sub_10028B8  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor edi edi +
mov [ebp+var_8] ebx +
mov [ebp+var_C] 1 +
cmp [ebp+Buffer] ebx +
jnz loc_10028EB  +
mov ecx lpDateStr +
xor eax eax +
mov [ecx] ax +
mov ecx lpDateStr +
mov [ecx+2] ax +
mov esi [ebp+lpServiceName] +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
push esi  +
push ebx  +
call NetServiceControl  +
cmp eax ebx +
jnz loc_1002FEE  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and eax 3 +
cmp eax 2 +
jz loc_1002FF9  +
cmp eax 1 +
jz loc_1002FF9  +
lea eax [ebp+bufptr] +
push eax  +
push lpDateStr  +
push esi  +
call sub_1002D57  +
cmp eax ebx +
jz loc_10030B2  +
cmp dword_1020080 ebx +
jnz loc_1003016  +
push eax  +
call sub_100295A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
jmp loc_10030B2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call sub_1002972  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001C11  +
push 2  +
call sub_1002992  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_1019028 +
lea ecx [eax-834h] +
cmp ecx 0ED7h +
jbe loc_10029C1  +
push [ebp+arg_0]  +
call sub_1002B42  +
jmp loc_1002A11  +
push esi  +
push 0Ah  +
lea ecx [ebp+var_54] +
push ecx  +
push eax  +
call ds:_ultow  +
add esp 0Ch +
mov dword_1019DD8 eax +
lea eax [ebp+var_58] +
push eax  +
push offset aNetmsg  +
push 0DBAh  +
push 800h  +
mov esi offset Buffer +
push esi  +
push 1  +
push offset dword_1019DD8  +
call sub_1001EAF  +
test eax eax +
jnz loc_1002A0E  +
push 1  +
push esi  +
push hConsoleHandle  +
call sub_1001CDF  +
pop esi  +
jmp loc_10029B7  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
cmp ebx 28h +
jnb loc_1002AA5  +
cmp ebx 27h +
jnb loc_1002A49  +
test ebx ebx +
jl loc_1002A49  +
mov eax dword_1019030 +
mov dword_101A040[ebx*4] eax +
inc ebx  +
cmp dword_101902C 0FFFFFFFFh +
jnz loc_1001BBC  +
jmp loc_1001AB9  +
call sub_1012546  +
jmp loc_1001B5F  +
call sub_1012546  +
jmp loc_1001B82  +
inc ebx  +
jmp loc_1001B82  +
movsx eax word_101F808[edi] +
cmp dword_101902C eax +
jnz loc_1001AB9  +
jmp loc_1001B82  +
movsx eax word_101F808[edi] +
push off_1020390[eax*4]  +
call sub_1012229  +
jmp loc_1002B30  +
call sub_1012546  +
jmp loc_1002A33  +
call sub_1012546  +
jmp loc_1001B93  +
lea eax dword_101A040[ecx] +
push eax  +
movsx eax word_101F808[edi] +
push eax  +
call sub_1006FBE  +
jmp loc_1002B30  +
cmp [ebp+arg_4] 28h +
jnb loc_1001B82  +
cmp [ebp+arg_4] 0 +
jl loc_1001B82  +
mov eax dword_101A040[ecx] +
jmp loc_100192C  +
***
lea eax dword_101A040[ecx] +
push eax  +
movsx eax word_101F808[edi] +
push eax  +
call sub_10027EA  +
jmp loc_1001B82  +
test eax eax +
jnz loc_1001B82  +
jmp loc_1001AB9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1002B5B  +
push [ebp+arg_0]  +
call ds:exit  +
***
mov edi edi +
push esi  +
mov esi dword_1019010 +
test esi esi +
jz loc_1002B92  +
push edi  +
push dword ptr [esi+8]  +
push 0  +
push dword ptr [esi]  +
call memset  +
mov edi [esi+4] +
add esp 0Ch +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1002E83  +
push esi  +
call sub_1001E31  +
mov esi edi +
test edi edi +
jnz loc_1002B69  +
pop edi  +
and dword_1019010 0 +
xor esi esi +
mov eax dword_101A6F0[esi] +
test eax eax +
jz loc_1002BB6  +
push eax  +
call sub_1002BEA  +
add esi 4 +
cmp esi 400h +
jb loc_1002B9B  +
xor esi esi +
inc esi  +
cmp dword_1019008 esi +
jbe loc_1002BD7  +
mov eax dword_101900C +
push dword ptr [eax+esi*4]  +
call sub_10018DC  +
inc esi  +
cmp esi dword_1019008 +
jb loc_1002BC1  +
call ds:GetCommandLineW  +
push eax  +
call sub_1002BEA  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1002C27  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
nop   +
nop   +
nop   +
nop   +
nop   +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1002C00  +
sub eax edx +
sar eax 1 +
jz loc_1002C27  +
add eax eax +
mov ecx [ebp+arg_0] +
jz loc_1002C27  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1002C20  +
pop ebp  +
retn 4  +
***
call sub_1002C49  +
push 0  +
push offset unk_101AF00  +
push 0  +
call sub_1001AFA  +
retn   +
***
mov eax offset dword_101A0E0 +
push eax  +
mov dword_1019050 eax +
mov dword_1019054 eax +
call off_101FC78  +
mov eax dword_101A0E4 +
mov dword_101902C eax +
mov eax dword_101A0E0 +
mov dword_1019030 eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_100359E  +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
push edi  +
call ds:GetModuleFileNameW  +
cmp [ebx] di +
jz loc_10035AB  +
mov [ebp+var_210] ebx +
push edi  +
lea eax [ebp+var_214] +
push eax  +
push esi  +
push edi  +
push edi  +
push [ebp+var_210]  +
call sub_10019DE  +
mov ecx [ebp+var_214] +
mov eax [esi] +
or edx 0FFFFFFFFh +
sub edx ecx +
shr edx 2 +
lea ebx [ecx+eax*4] +
cmp eax edx +
jnb loc_1002D3C  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov edi eax +
test edi edi +
jz loc_10035BC  +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
mov eax [esi] +
push esi  +
lea eax [edi+eax*4] +
push eax  +
push edi  +
push [ebp+var_210]  +
call sub_10019DE  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 8  +
xor eax eax +
jmp loc_1002D2B  +
***
cmp ecx dword_1019000 +
jnz loc_1010179  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
push 19h  +
pop esi  +
mov [ebp+argc] edi +
mov [ebp+var_8] edi +
cmp ebx edi +
jz loc_1002D7C  +
cmp [ebx] di +
jnz loc_1002F88  +
push [ebp+bufptr]  +
push edi  +
push [ebp+argc]  +
push [ebp+service]  +
push 0  +
call NetServiceInstall  +
mov esi eax +
push edi  +
call ds:free  +
pop ecx  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1002DE4  +
push eax  +
call sub_1002DEE  +
test eax eax +
jz loc_1002DE4  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jz loc_10034D6  +
cmp ax 3 +
jnz loc_1002DE4  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
pop ebp  +
retn   +
***
call sub_10017FB  +
xor eax eax +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1002E3D  +
cmp ecx 0FFFFFFFFh +
jz loc_1002E3D  +
and [ebp-4] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1002E36  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1002E36  +
cmp edx 10000000h +
jnb loc_1002E36  +
lea eax [edx+ecx] +
mov [ebp-1Ch] eax +
cmp dword ptr [eax] 4550h +
jnz loc_10034CC  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_1002E64  +
retn 4  +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
push eax  +
call sub_100295A  +
jmp loc_100213A  +
***
push dword ptr [esi]  +
call sub_1001E31  +
jmp loc_1002B85  +
***
call edi  +
push eax  +
call sub_10108F6  +
jmp loc_1001FBF  +
call edi  +
push eax  +
call sub_100295A  +
jmp loc_1002027  +
call edi  +
push eax  +
call sub_100295A  +
jmp loc_1002039  +
push 8  +
call sub_100295A  +
jmp loc_1002056  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1002EC7  +
sub eax esi +
sar eax 1 +
movzx eax ax +
cmp ax 1 +
jle loc_1002F4B  +
movsx esi ax +
push esi  +
push ecx  +
push offset aYes  +
call edi  +
add esp 0Ch +
test eax eax +
jnz loc_1002F13  +
cmp dword_1021AD0 2 +
jnz loc_1002F04  +
push 0DB6h  +
call sub_100295A  +
mov dword_1021AD0 1 +
jmp loc_10020AD  +
mov eax dword_101903C +
push esi  +
push dword ptr [eax]  +
push offset aNo  +
call edi  +
add esp 0Ch +
test eax eax +
jnz loc_1002F4B  +
cmp dword_1021AD0 1 +
jnz loc_1002F3C  +
push 0DB6h  +
call sub_100295A  +
mov dword_1021AD0 2 +
jmp loc_10020AD  +
mov eax 100h +
cmp word ptr [ebp+var_1C] ax +
jge loc_1002F7D  +
movsx eax word ptr [ebp+var_1C] +
mov ecx dword_101903C +
mov ecx [ecx] +
inc [ebp+var_1C]  +
mov dword_101FC80[eax*4] ecx +
mov cx word ptr [ebp+var_18] +
mov word_10218D0[eax*2] cx +
jmp loc_10020AD  +
push ebx  +
call sub_100295A  +
jmp loc_10020AD  +
***
push 64h  +
call ds:malloc  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_1002F9F  +
push 8  +
pop eax  +
jmp loc_1002D99  +
mov eax [ebp+argc] +
inc [ebp+argc]  +
mov [edi+eax*4] ebx +
cmp [ebp+argc] esi +
jb loc_1002FC4  +
add esi esi +
mov eax esi +
shl eax 2 +
push eax  +
push edi  +
call ds:realloc  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002FE6  +
mov edi eax +
mov ax [ebx] +
inc ebx  +
inc ebx  +
test ax ax +
jnz loc_1002FC4  +
cmp [ebx] ax +
jnz loc_1002FDA  +
mov [ebp+var_8] 1 +
cmp [ebp+var_8] 0 +
jnz loc_1002D7C  +
jmp loc_1002F9F  +
push 8  +
pop esi  +
jmp loc_1002D8F  +
***
push eax  +
call sub_100295A  +
jmp loc_100291E  +
push esi  +
call sub_100F4DF  +
push eax  +
push 0DCDh  +
call sub_1010933  +
push 2  +
call sub_1002992  +
jmp loc_100291E  +
cmp eax 886h +
jnz loc_1002942  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
push esi  +
push ebx  +
call NetServiceControl  +
cmp eax ebx +
jz loc_1003063  +
cmp eax 888h +
jnz loc_100305D  +
push 0FA0h  +
call ds:Sleep  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
push esi  +
push ebx  +
call NetServiceControl  +
cmp eax ebx +
jz loc_1003063  +
push eax  +
call sub_100295A  +
mov edi [ebp+Buffer] +
lea esi [edi+4] +
mov eax [esi] +
and eax 3 +
cmp al 3 +
jnz loc_1003078  +
push edi  +
jmp loc_10032E3  +
push 1Ch  +
call sub_101250D  +
mov [ebp+bufptr] eax +
cmp eax ebx +
jnz loc_100308D  +
push 8  +
call sub_100295A  +
mov eax [esi] +
mov ecx [ebp+bufptr] +
mov esi [ebp+lpServiceName] +
mov [ecx+4] eax +
mov eax [edi+8] +
mov ecx [ebp+bufptr] +
mov [ecx+8] eax +
mov eax [edi+14h] +
mov ecx [ebp+bufptr] +
xor edi edi +
mov [ecx+14h] eax +
inc edi  +
jmp loc_1002948  +
mov eax [ebp+bufptr] +
mov ecx [eax+4] +
and ecx 3 +
jnz loc_1003112  +
movzx ecx word ptr [eax+0Ah] +
movzx esi word ptr [eax+8] +
push [ebp+lpServiceName]  +
mov [eax+8] ecx +
mov eax [ebp+bufptr] +
movzx edi word ptr [eax+8] +
call sub_100F4DF  +
push 1  +
push 0DC3h  +
mov dword_1019DD8 eax +
call sub_1001C11  +
mov eax 42Ah +
cmp si ax +
mov eax [ebp+bufptr] +
jnz loc_10030FF  +
push dword ptr [eax+14h]  +
call sub_100BC71  +
jmp loc_1003109  +
push dword ptr [eax+10h]  +
push esi  +
push edi  +
call sub_100BA38  +
push 2  +
call sub_1002992  +
jmp loc_1003138  +
cmp ecx 1 +
jz loc_100311C  +
cmp ecx 2 +
jnz loc_1003138  +
push esi  +
call sub_100F4DF  +
push eax  +
cmp edi ebx +
jz loc_100312E  +
push 0DD8h  +
jmp loc_1003133  +
push 0DC2h  +
call sub_1010933  +
mov esi 1000h +
push esi  +
call sub_101250D  +
mov [ebp+Buffer] eax +
cmp eax ebx +
jnz loc_1003151  +
push 8  +
call sub_100295A  +
push esi  +
push lpDateStr  +
push [ebp+Buffer]  +
call memcpy  +
mov esi [ebp+Buffer] +
mov ecx [ebp+bufptr] +
mov ecx [ecx+4] +
lea eax [esi+4] +
mov [eax] ecx +
mov ecx [ebp+bufptr] +
mov ecx [ecx+8] +
mov [esi+8] ecx +
mov ecx [ebp+bufptr] +
mov ecx [ecx+14h] +
movzx ebx byte ptr [esi+8] +
mov [esi+14h] ecx +
mov eax [eax] +
and eax 3 +
add esp 0Ch +
mov [ebp+var_10] 8 +
cmp al 3 +
jz loc_1003250  +
mov edi 9C4h +
movzx eax word ptr [ebp+var_8] +
inc [ebp+var_8]  +
cmp eax [ebp+var_10] +
jnb loc_1003250  +
call sub_1010892  +
mov eax [esi+4] +
and al 3 +
cmp al 1 +
jnz loc_10031F5  +
test dword ptr [esi+8] 10000h +
jz loc_10031F5  +
cmp [ebp+var_C] 0 +
jz loc_10031F5  +
mov eax [esi+8] +
movzx ecx byte ptr [esi+9] +
shr eax 0Ch +
and eax 0FF00h +
or eax ecx +
imul eax eax +
cmp eax edi +
jbe loc_10031F7  +
imul eax eax +
xor edx edx +
mov ecx edi +
div  ecx +
and [ebp+var_8] 0 +
mov [ebp+var_10] eax +
mov eax edi +
push eax  +
call ds:Sleep  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
lea eax [ebp+Buffer] +
push eax  +
xor esi esi +
push esi  +
push esi  +
push [ebp+lpServiceName]  +
push esi  +
call NetServiceControl  +
cmp eax esi +
jz loc_1003221  +
push eax  +
call sub_100295A  +
mov esi [ebp+Buffer] +
mov ecx [esi+4] +
and ecx 3 +
jz loc_1003250  +
movzx eax byte ptr [esi+8] +
cmp eax ebx +
jz loc_1003243  +
and [ebp+var_8] 0 +
mov [ebp+var_C] 1 +
mov ebx eax +
jmp loc_1003247  +
and [ebp+var_C] 0 +
cmp ecx 3 +
jnz loc_10031A0  +
call sub_10108A7  +
mov eax [esi+4] +
and eax 3 +
cmp al 3 +
jz loc_10032C5  +
movzx eax word ptr [esi+0Ah] +
movzx edi word ptr [esi+8] +
mov [esi+8] eax +
movzx ebx ax +
mov eax [esi+14h] +
mov [ebp+var_10] eax +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
push 3  +
push [ebp+lpServiceName]  +
push 0  +
call NetServiceControl  +
push [ebp+lpServiceName]  +
call sub_100F4DF  +
push 1  +
push 0DC3h  +
mov dword_1019DD8 eax +
call sub_1001C11  +
mov eax 42Ah +
cmp di ax +
jnz loc_10032B2  +
push [ebp+var_10]  +
call sub_100BC71  +
jmp loc_10032BC  +
push dword ptr [esi+10h]  +
push edi  +
push ebx  +
call sub_100BA38  +
push 2  +
call sub_1002992  +
jmp loc_10032D8  +
push [ebp+lpServiceName]  +
call sub_100F4DF  +
push eax  +
push 0DC4h  +
call sub_1010933  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov eax offset dword_101FC80 +
mov eax [eax] +
cmp word ptr [eax] 0 +
jz loc_1003325  +
push eax  +
mov eax esi +
sub eax lpDateStr +
mov ecx 1000h +
sar eax 1 +
sub ecx eax +
push ecx  +
push esi  +
call wcscpy_s  +
push 0  +
push esi  +
call ds:wcschr  +
add esp 14h +
inc eax  +
inc eax  +
mov esi eax +
inc ebx  +
lea eax dword_101FC80[ebx*4] +
cmp dword ptr [eax] 0 +
jz loc_1002897  +
jmp loc_10032F4  +
***
push offset off_1020E68  +
push 0  +
call sub_10122E4  +
push 0  +
push off_102096C  +
jmp loc_100285A  +
push offset off_101F360  +
push 0  +
call sub_10122E4  +
push 0  +
push off_1020968  +
jmp loc_100285A  +
push offset off_1021148  +
push 0  +
call sub_10122E4  +
push [ebp+arg_4]  +
push bufptr  +
jmp loc_100285A  +
push offset off_1020EB0  +
push 0  +
call sub_10122E4  +
push [ebp+arg_4]  +
call sub_100ABBB  +
jmp loc_100285F  +
push offset off_1020FE8  +
push 0  +
call sub_10122E4  +
push [ebp+arg_4]  +
push off_102095C  +
jmp loc_100285A  +
***
call ds:GetLastError  +
push eax  +
call sub_100295A  +
jmp loc_1001715  +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_10223E4 eax +
xor ebx ebx +
cmp dword_101901C ebx +
jnz loc_100346E  +
push eax  +
call ds:_exit  +
***
cmp dword_10223E8 ebx +
jnz loc_100347C  +
call ds:_cexit  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax dword_10223E4 +
call sub_1002E64  +
retn   +
***
push (offset dword_1001840+5)  +
call ds:__setusermatherr  +
pop ecx  +
jmp loc_1002332  +
***
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
***
xor eax eax +
mov [ebp-1Ch] eax +
jmp loc_1002E36  +
***
push 2  +
pop eax  +
pop ebp  +
retn   +
***
test eax ebx +
jz loc_1001876  +
not eax  +
mov dword_1019004 eax +
jmp loc_10018CC  +
***
call sub_1012546  +
jmp loc_1001BE2  +
***
add eax edi +
jmp loc_1003512  +
test cx cx +
jz loc_100351B  +
add [edx] edi +
test esi esi +
jz loc_1003510  +
mov cx [eax] +
mov [esi] cx +
add esi edi +
add eax edi +
movzx ecx word ptr [eax] +
cmp cx 22h +
jnz loc_10034FD  +
add [edx] edi +
test esi esi +
jz loc_1003528  +
xor ecx ecx +
mov [esi] cx +
add esi edi +
cmp word ptr [eax] 22h +
jnz loc_1001A54  +
add eax edi +
jmp loc_1001A54  +
sub eax edi +
jmp loc_1001A54  +
movzx ebx word ptr [ebp+arg_14] +
and ebx 80000001h +
jns loc_1003551  +
dec ebx  +
or ebx 0FFFFFFFEh +
inc ebx  +
jnz loc_100357B  +
cmp [ebp+arg_10] ecx +
jz loc_100356B  +
lea ecx [eax+2] +
cmp word ptr [ecx] 22h +
jnz loc_1003565  +
mov eax ecx +
jmp loc_100356E  +
and [ebp+arg_0] 0 +
jmp loc_100356E  +
mov [ebp+arg_0] ecx +
xor ecx ecx +
cmp [ebp+arg_10] ecx +
setz cl  +
mov [ebp+arg_10] ecx +
xor ecx ecx +
shr word ptr [ebp+arg_14] 1 +
jmp loc_100198E  +
add [ebp+arg_14] 0FFFFh +
cmp esi ecx +
jz loc_1003597  +
push 5Ch  +
pop ebx  +
mov [esi] bx +
add esi edi +
add [edx] edi +
jmp loc_100198E  +
***
push 57h  +
call ds:SetLastError  +
jmp loc_1002D3C  +
lea eax [ebp+Filename] +
mov [ebp+var_210] eax +
jmp loc_1002CC3  +
push 8  +
jmp loc_10035A0  +
***
push 57h  +
pop eax  +
jmp loc_1001F5C  +
mov edx esi +
mov ecx edi +
mov si [ecx] +
cmp si [edx] +
jnz loc_10035F2  +
test si si +
jz loc_10035EE  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_10035F2  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_10035CC  +
xor ecx ecx +
jmp loc_10035F7  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_1001E9D  +
push eax  +
call ds:FreeLibrary  +
mov esi [ebp+var_58] +
jmp loc_1001E7A  +
mov eax 13Eh +
jmp loc_1001F5C  +
or ecx 200h +
jmp loc_1001F39  +
mov ecx [ebp+var_54] +
mov [ecx] ax +
call ds:GetLastError  +
mov edi 13Dh +
mov [ebp+var_4C] eax +
cmp eax edi +
jnz loc_1001F59  +
push 10h  +
lea eax [ebp+var_48] +
push eax  +
push [ebp+dwMessageId]  +
call ds:_ultow  +
mov eax [ebp+Arguments] +
add esp 0Ch +
test eax eax +
jz loc_1003669  +
cmp [ebp+arg_4] 1 +
lea ecx [ebp+var_48] +
mov [eax] ecx +
jbe loc_1003669  +
mov ecx [ebp+var_58] +
mov [eax+4] ecx +
push eax  +
push [ebp+nSize]  +
push [ebp+var_54]  +
push 0  +
push edi  +
push lpSource  +
push 3000h  +
call esi  +
cmp [ebp+arg_4] 1 +
mov [ebx] eax +
jbe loc_1003693  +
mov eax [ebp+Arguments] +
test eax eax +
jz loc_1003693  +
and dword ptr [eax+4] 0 +
mov [ebp+var_4C] edi +
jmp loc_1001F59  +
***
mov eax [ebp+NumberOfBytesWritten] +
push esi  +
push edi  +
add eax eax +
push eax  +
xor esi esi +
push esi  +
call ds:LocalAlloc  +
mov edi eax +
cmp edi esi +
jz loc_10036E7  +
mov eax [ebp+NumberOfBytesWritten] +
push esi  +
push esi  +
lea ecx [eax+eax] +
push ecx  +
push edi  +
push eax  +
push [ebp+lpWideCharStr]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfBytesWritten] eax +
cmp eax esi +
jz loc_10036E0  +
push esi  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
push edi  +
push [ebp+hConsoleHandle]  +
call ds:WriteFile  +
push edi  +
call ds:LocalFree  +
pop edi  +
pop esi  +
jmp loc_1001D6D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov ecx [ebp+arg_10] +
xor eax eax +
mov [ecx] eax +
mov [ebp+var_10] eax +
cmp dword_101FC80 eax +
jz locret_10040BA  +
push ebx  +
push esi  +
push edi  +
mov edi offset dword_101FC80 +
mov esi 0F70h +
mov ebx [edi] +
mov ecx offset aDomain +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003CA3  +
test dx dx +
jz loc_1003C9F  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003CA3  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1003C7D  +
xor eax eax +
jmp loc_1003CA8  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10040A1  +
push ebx  +
call sub_1010270  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1003CC7  +
push 0DB1h  +
call sub_100295A  +
mov eax [edi] +
mov edi offset aForcelogoff +
push 4  +
mov [ebp+var_8] eax +
mov ecx edi +
pop ebx  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003CFA  +
test dx dx +
jz loc_1003CF6  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003CFA  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1003CD6  +
xor eax eax +
jmp loc_1003CFF  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1003D58  +
mov eax [ebp+arg_C] +
or word ptr [eax] 1 +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_4]  +
call sub_1010C1E  +
test eax eax +
jnz loc_1003D2C  +
cmp [ebp+var_C] 2 +
jnz loc_1003D2C  +
mov eax [ebp+arg_0] +
or dword ptr [eax+0Ch] 0FFFFFFFFh +
jmp loc_1004097  +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_10103FF  +
mov ebx [ebp+arg_0] +
mov [ebx+0Ch] eax +
cmp eax 4444444h +
jbe loc_1003D4A  +
push edi  +
push esi  +
call sub_101081B  +
mov eax [ebx+0Ch] +
imul eax eax +
mov [ebx+0Ch] eax +
jmp loc_1004097  +
mov eax [ebp+var_8] +
mov edi offset aUniquepw +
mov ecx edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003D86  +
test dx dx +
jz loc_1003D82  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003D86  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1003D62  +
xor eax eax +
jmp loc_1003D8B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1003DAE  +
mov eax [ebp+arg_C] +
or word ptr [eax] 1 +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_10103CB  +
mov ecx [ebp+arg_0] +
movzx eax ax +
mov [ecx+10h] eax +
cmp eax 18h +
jmp loc_1003E03  +
mov eax [ebp+var_8] +
mov edi offset aMinpwlen +
mov ecx edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003DDC  +
test dx dx +
jz loc_1003DD8  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003DDC  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1003DB8  +
xor eax eax +
jmp loc_1003DE1  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1003E15  +
mov eax [ebp+arg_C] +
or word ptr [eax] 1 +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_10103CB  +
mov ecx [ebp+arg_0] +
movzx eax ax +
mov [ecx] eax +
cmp eax 100h +
jbe loc_1004097  +
push edi  +
push esi  +
call sub_101081B  +
jmp loc_1004097  +
mov eax [ebp+var_8] +
mov edi offset aMinpwage +
mov ecx edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003E43  +
test dx dx +
jz loc_1003E3F  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003E43  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1003E1F  +
xor eax eax +
jmp loc_1003E48  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1003E89  +
mov eax [ebp+arg_C] +
xor ecx ecx +
push edi  +
inc ecx  +
or [eax] cx +
mov eax [ebp+arg_10] +
push esi  +
push [ebp+var_4]  +
mov [eax] ecx +
call sub_10103FF  +
mov ebx [ebp+arg_0] +
mov [ebx+8] eax +
cmp eax 3E7h +
jbe loc_1003E78  +
push edi  +
push esi  +
call sub_101081B  +
mov eax [ebx+8] +
imul eax eax +
mov [ebx+8] eax +
jmp loc_1004097  +
mov eax [ebp+var_8] +
mov edi offset aMaxpwage +
mov ecx edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003EB7  +
test dx dx +
jz loc_1003EB3  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003EB7  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1003E93  +
xor eax eax +
jmp loc_1003EBC  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1003F1A  +
mov eax [ebp+arg_C] +
xor ecx ecx +
inc ecx  +
or [eax] cx +
mov eax [ebp+arg_10] +
push offset aUnlimited  +
push [ebp+var_4]  +
mov [eax] ecx +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1003EEE  +
mov eax [ebp+arg_0] +
or dword ptr [eax+4] 0FFFFFFFFh +
jmp loc_1004097  +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_10103FF  +
mov ebx [ebp+arg_0] +
mov [ebx+4] eax +
cmp eax 3E7h +
jbe loc_1003F0C  +
push edi  +
push esi  +
call sub_101081B  +
mov eax [ebx+4] +
imul eax eax +
jmp loc_1004022  +
mov eax [ebp+var_8] +
mov edi offset aLockoutduratio +
mov ecx edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003F48  +
test dx dx +
jz loc_1003F44  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003F48  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1003F24  +
xor eax eax +
jmp loc_1003F4D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1003FA2  +
mov eax [ebp+arg_C] +
or word ptr [eax] 8 +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_4]  +
call sub_1010C1E  +
test eax eax +
jnz loc_1003F79  +
cmp [ebp+var_C] 2 +
jnz loc_1003F79  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_1004097  +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_10103FF  +
mov ebx [ebp+arg_8] +
mov [ebx] eax +
cmp eax 4444444h +
jbe loc_1003F96  +
push edi  +
push esi  +
call sub_101081B  +
mov eax [ebx] +
imul eax eax +
mov [ebx] eax +
jmp loc_1004097  +
mov eax [ebp+var_8] +
mov edi offset aLockoutwindow +
mov ecx edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003FD0  +
test dx dx +
jz loc_1003FCC  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003FD0  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1003FAC  +
xor eax eax +
jmp loc_1003FD5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1004027  +
mov eax [ebp+arg_C] +
or word ptr [eax] 8 +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_4]  +
call sub_1010C1E  +
test eax eax +
jnz loc_1003FFE  +
cmp [ebp+var_C] 2 +
jnz loc_1003FFE  +
mov eax [ebp+arg_8] +
jmp loc_1003EE5  +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_10103FF  +
mov ebx [ebp+arg_8] +
mov [ebx+4] eax +
cmp eax 4444444h +
jbe loc_100401C  +
push edi  +
push esi  +
call sub_101081B  +
mov eax [ebx+4] +
imul eax eax +
mov [ebx+4] eax +
jmp loc_1004097  +
mov eax [ebp+var_8] +
mov edi offset aLockoutthresho +
mov ecx edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1004055  +
test dx dx +
jz loc_1004051  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1004055  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1004031  +
xor eax eax +
jmp loc_100405A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1004097  +
mov eax [ebp+arg_C] +
or word ptr [eax] 8 +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_4]  +
call sub_1010C1E  +
test eax eax +
jnz loc_1004084  +
cmp [ebp+var_C] 2 +
jnz loc_1004084  +
mov eax [ebp+arg_8] +
and dword ptr [eax+8] 0 +
jmp loc_1004097  +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_10103CB  +
mov ecx [ebp+arg_8] +
movzx eax ax +
mov [ecx+8] eax +
mov ecx [ebp+var_4] +
push 3Ah  +
pop eax  +
mov [ecx-2] ax +
inc [ebp+var_10]  +
mov edi [ebp+var_10] +
lea edi dword_101FC80[edi*4] +
cmp dword ptr [edi] 0 +
jnz loc_1003C74  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax esi +
jz loc_10040F9  +
push eax  +
call sub_100295A  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+servername] +
push eax  +
call NetUserModalsGet  +
cmp eax esi +
jz loc_1004117  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_224] +
push eax  +
push 1  +
lea eax [ebp+servername] +
push eax  +
call NetUserModalsGet  +
cmp eax esi +
jz loc_1004136  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_21C] +
push eax  +
push 3  +
lea eax [ebp+servername] +
push eax  +
call NetUserModalsGet  +
cmp eax esi +
jz loc_1004155  +
push eax  +
call sub_100295A  +
mov ecx [ebp+Buffer] +
mov eax [ecx+4] +
push ebx  +
push edi  +
mov edi 15180h +
cmp eax 0FFFFFFFFh +
jz loc_1004176  +
xor edx edx +
mov ebx edi +
div  ebx +
mov [ebp+var_220] eax +
mov eax [ecx+8] +
xor edx edx +
div  edi +
push 3Ch  +
xor edx edx +
mov ebx eax +
mov eax [ecx+0Ch] +
pop ecx  +
div  ecx +
mov edi eax +
lea eax [ebp+var_214] +
push eax  +
push offset unk_1020098  +
push 13h  +
call sub_1010ADF  +
mov eax [ebp+Buffer] +
add [ebp+var_214] 5 +
cmp dword ptr [eax+0Ch] 0FFFFFFFFh +
jnz loc_10041D9  +
push dword_10200DC  +
push esi  +
push dword_102009C  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020994  +
jmp loc_10041FA  +
push edi  +
push esi  +
push dword_102009C  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_102099C  +
call sub_1010562  +
add esp 14h +
push ebx  +
push esi  +
push dword_10200A4  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_102099C  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
cmp dword ptr [eax+4] 0FFFFFFFFh +
pop edi  +
pop ebx  +
jnz loc_1004261  +
push dword_10200D4  +
push esi  +
push dword_10200AC  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020994  +
jmp loc_1004287  +
push [ebp+var_220]  +
push esi  +
push dword_10200AC  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_102099C  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax]  +
push esi  +
push dword_10200B4  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020998  +
call sub_1010562  +
mov eax [ebp+Buffer] +
mov eax [eax+10h] +
add esp 14h +
cmp eax esi +
jnz loc_10042F4  +
push dword_10200E4  +
push esi  +
push dword_10200BC  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020994  +
jmp loc_1004315  +
push eax  +
push esi  +
push dword_10200BC  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020998  +
call sub_1010562  +
mov eax [ebp+var_21C] +
mov eax [eax+8] +
add esp 14h +
cmp eax esi +
jnz loc_1004352  +
push dword_10200DC  +
push esi  +
push dword_102011C  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020994  +
jmp loc_1004373  +
push eax  +
push esi  +
push dword_102011C  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020998  +
call sub_1010562  +
mov eax [ebp+var_21C] +
mov eax [eax] +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_10043B0  +
push dword_10200DC  +
push esi  +
push dword_1020124  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020994  +
jmp loc_10043D8  +
push 3Ch  +
pop ecx  +
xor edx edx +
div  ecx +
push eax  +
push esi  +
push dword_1020124  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_102099C  +
call sub_1010562  +
mov eax [ebp+var_21C] +
mov eax [eax+4] +
add esp 14h +
push 3Ch  +
pop ecx  +
xor edx edx +
div  ecx +
push eax  +
push esi  +
push dword_102012C  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_102099C  +
call sub_1010562  +
mov eax [ebp+var_224] +
mov eax [eax] +
add esp 14h +
cmp eax 1 +
jbe loc_1004467  +
cmp eax 2 +
jz loc_1004460  +
cmp eax 3 +
jnz loc_100446E  +
cmp word ptr [ebp+servername] si +
jnz loc_1004459  +
call sub_10078D8  +
test eax eax +
jz loc_1004459  +
call sub_10078F8  +
test eax eax +
jz loc_1004452  +
mov eax dword_1020114 +
jmp loc_1004474  +
mov eax dword_102010C +
jmp loc_1004474  +
mov eax dword_10200FC +
jmp loc_1004474  +
mov eax dword_1020104 +
jmp loc_1004474  +
mov eax dword_10200EC +
jmp loc_1004474  +
mov eax [ebp+var_220] +
push eax  +
push esi  +
push dword_10200C4  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push esi  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push [ebp+var_224]  +
call NetApiBufferFree  +
push [ebp+var_21C]  +
call NetApiBufferFree  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 244h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
lea eax [ebp+var_24] +
mov [ebp+Buffer] eax +
push edi  +
lea eax [ebp+var_10] +
mov [ebp+buf] eax +
lea eax [ebp+var_240] +
push eax  +
lea eax [ebp+var_234] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_134] +
push eax  +
lea eax [ebp+var_24] +
xor edi edi +
push eax  +
mov [ebp+var_234] edi +
call sub_1003C49  +
test byte ptr [ebp+var_234] 9 +
jz loc_1004550  +
push 1  +
push edi  +
push edi  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax edi +
jz loc_1004550  +
push eax  +
call sub_100295A  +
test byte ptr [ebp+var_234] 1 +
jz loc_100458F  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
lea eax [ebp+servername] +
push eax  +
call NetUserModalsGet  +
mov esi eax +
cmp esi edi +
jz loc_100458F  +
cmp esi 35h +
jnz loc_1004589  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
test byte ptr [ebp+var_234] 8 +
jz loc_10045CF  +
lea eax [ebp+buf] +
push eax  +
push 3  +
lea eax [ebp+servername] +
push eax  +
call NetUserModalsGet  +
mov esi eax +
cmp esi edi +
jz loc_10045CF  +
cmp esi 35h +
jnz loc_10045C9  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
lea eax [ebp+var_240] +
push eax  +
lea eax [ebp+var_234] +
push eax  +
push [ebp+buf]  +
lea eax [ebp+var_134] +
push eax  +
push [ebp+Buffer]  +
call sub_1003C49  +
test byte ptr [ebp+var_234] 1 +
jz loc_1004690  +
cmp [ebp+var_240] edi +
jz loc_1004622  +
mov eax [ebp+Buffer] +
mov ecx [eax+4] +
cmp ecx [eax+8] +
jnb loc_1004622  +
push 0EE8h  +
call sub_100295A  +
lea eax [ebp+parm_err] +
push eax  +
push [ebp+Buffer]  +
lea eax [ebp+servername] +
push edi  +
push eax  +
call NetUserModalsSet  +
mov esi eax +
cmp esi edi +
jz loc_1004685  +
cmp esi 35h +
jz loc_100464E  +
cmp esi 57h +
jnz loc_100467F  +
jmp loc_100465F  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
cmp [ebp+parm_err] 1 +
jnz loc_1004679  +
push offset aMinpwlen  +
push 0F70h  +
call sub_101081B  +
jmp loc_100467F  +
push esi  +
call sub_100295A  +
push esi  +
call sub_100295A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
test byte ptr [ebp+var_234] 8 +
jz loc_10046DB  +
push edi  +
push [ebp+buf]  +
lea eax [ebp+servername] +
push 3  +
push eax  +
call NetUserModalsSet  +
mov esi eax +
cmp esi edi +
jz loc_10046D0  +
cmp esi 35h +
jnz loc_10046CA  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
push [ebp+buf]  +
call NetApiBufferFree  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
xor ebx ebx +
push offset SubKey  +
push 80000002h  +
mov [ebp+hKey] ebx +
mov [ebp+Buffer] ebx +
mov [ebp+cbData] ebx +
mov [ebp+Type] 1 +
call ds:RegOpenKeyW  +
test eax eax +
jnz loc_1004792  +
push esi  +
mov esi ds:RegQueryValueExW +
push edi  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+Buffer]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
mov edi offset ValueName +
push edi  +
push [ebp+hKey]  +
call esi  +
cmp eax ebx +
jz loc_1004750  +
cmp eax 0EAh +
jnz loc_1004787  +
cmp [ebp+Type] 1 +
jnz loc_1004787  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+cbData]  +
call NetApiBufferAllocate  +
test eax eax +
jnz loc_1004787  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+Buffer]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push edi  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jz loc_1004787  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
mov [ebp+Buffer] ebx +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
pop esi  +
mov eax [ebp+Buffer] +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1004820  +
pop ebp  +
jmp NetApiBufferFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor ebx ebx +
push ebx  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
push ebx  +
call NetServiceEnum  +
cmp eax ebx +
jz loc_1004856  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] ebx +
jnz loc_1004860  +
call sub_1010959  +
push 111Ah  +
call sub_10108F6  +
mov esi [ebp+Buffer] +
cmp [ebp+entriesread] ebx +
jbe loc_10048BF  +
push edi  +
xor edi edi +
cmp off_10201A0 edi +
jz loc_10048B5  +
mov eax offset off_10201A0 +
push dword ptr [esi]  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10048A1  +
inc edi  +
lea eax off_10201A0[edi*4] +
cmp dword ptr [eax] 0 +
jz loc_10048B5  +
jmp loc_1004882  +
push dword ptr [esi+18h]  +
push offset aFws  +
call sub_1010562  +
pop ecx  +
pop ecx  +
call sub_10108A7  +
inc ebx  +
add esi 1Ch +
cmp ebx [ebp+entriesread] +
jb loc_1004873  +
pop edi  +
call sub_10108A7  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push lpServiceName  +
xor edi edi +
mov [ebp+var_224] 104h +
mov [ebp+var_218] edi +
call sub_100A9CD  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
call sub_1010F03  +
cmp eax edi +
jz loc_1004927  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_224] +
push eax  +
lea eax [ebp+var_210] +
push eax  +
push 3  +
call ds:GetComputerNameExW  +
mov ebx eax +
lea eax [ebp+var_218] +
push eax  +
push 1  +
push edi  +
call DsRoleGetPrimaryDomainInformation  +
mov [ebp+var_220] eax +
lea eax [ebp+var_21C] +
push eax  +
push offset unk_10201F8  +
push 13h  +
call sub_1010ADF  +
mov esi [ebp+var_21C] +
lea eax [ebp+var_21C] +
push eax  +
push offset unk_10201B0  +
push 9  +
add esi 5 +
call sub_1010ADF  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0Ch]  +
push edi  +
push dword_10201FC  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push offset a_WsFws  +
call sub_1010562  +
add esp 14h +
cmp ebx edi +
jz loc_10049D2  +
lea eax [ebp+var_210] +
push eax  +
push edi  +
push dword_1020204  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
mov eax [ebp+Buffer] +
push dword ptr [eax+10h]  +
push edi  +
push dword_102020C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
push edi  +
push dword_102028C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push offset a_Ws  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 10h +
push 1  +
push dword ptr [eax+20h]  +
call sub_100728C  +
call sub_10046F3  +
mov ebx eax +
cmp ebx edi +
jnz loc_1004A3B  +
mov eax dword_10201F4 +
push eax  +
push edi  +
push dword_1020214  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push offset a_Ws0_31ws  +
call sub_1010562  +
add esp 14h +
push ebx  +
call sub_100480F  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+14h]  +
push edi  +
push dword_1020224  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
cmp [ebp+var_220] edi +
jnz loc_1004ACB  +
mov eax [ebp+var_218] +
cmp [eax+0Ch] edi +
jz loc_1004AC5  +
push dword ptr [eax+0Ch]  +
push edi  +
push dword_1020234  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+var_218] +
add esp 14h +
push eax  +
call DsRoleFreeMemory  +
mov eax [ebp+Buffer] +
push dword ptr [eax+84h]  +
push edi  +
push dword_102022C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+24h]  +
push edi  +
push dword_102023C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020998  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+2Ch]  +
push edi  +
push dword_1020244  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020998  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+28h]  +
push edi  +
push dword_102024C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_102099C  +
call sub_1010562  +
add esp 14h +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push bufptr  +
call sub_100A9CD  +
lea eax [ebp+Buffer] +
push eax  +
push 3  +
xor edi edi +
push edi  +
call sub_1011811  +
cmp eax edi +
jz loc_1004BC0  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_8] +
push eax  +
push offset unk_1020290  +
push 10h  +
call sub_1010ADF  +
mov esi [ebp+var_8] +
lea eax [ebp+var_8] +
push eax  +
push offset unk_10201B0  +
push 9  +
add esi 5 +
call sub_1010ADF  +
mov eax [ebp+Buffer] +
push dword ptr [eax]  +
push edi  +
push dword_1020294  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push offset a_WsFws  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+10h]  +
push edi  +
push dword_102029C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
call sub_10046F3  +
mov ebx eax +
cmp ebx edi +
jnz loc_1004C41  +
mov eax dword_10201F4 +
push eax  +
push edi  +
push dword_10202AC  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push offset a_Ws0_31ws  +
call sub_1010562  +
add esp 14h +
push ebx  +
call sub_100480F  +
push edi  +
push dword_10202BC  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push offset a_Ws  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 10h +
push edi  +
push dword ptr [eax+38h]  +
call sub_100728C  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
cmp [eax+3Ch] edi +
mov eax dword_10201B4 +
jnz loc_1004CA5  +
mov eax dword_10201BC +
push eax  +
push edi  +
push dword_10202C4  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020994  +
call sub_1010562  +
mov eax [ebp+Buffer] +
mov ecx dword_1020310 +
mov eax [ecx+eax] +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_1004CF4  +
push eax  +
mov eax dword_1020314 +
push edi  +
push dword_1020294[eax*8]  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_102099C  +
jmp loc_1004D16  +
push dword_102030C  +
mov eax dword_1020314 +
push edi  +
push dword_1020294[eax*8]  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
mov ecx dword_1020338 +
add esp 14h +
push dword ptr [ecx+eax]  +
mov eax dword_102033C +
push edi  +
push dword_1020294[eax*8]  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_102099C  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
mov eax [ebp+Buffer] +
mov eax [eax+24h] +
cmp eax 0FFFFFFFFh +
jnz loc_1004D76  +
push eax  +
push edi  +
push dword_1020304  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push offset a_WsD  +
jmp loc_1004D8D  +
push eax  +
push edi  +
push dword_1020304  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020998  +
call sub_1010562  +
add esp 14h +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push bufptr  +
call sub_100A9CD  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
xor esi esi +
push esi  +
call sub_1011811  +
cmp eax esi +
jz loc_1004DD8  +
push eax  +
call sub_100295A  +
mov [ebp+var_C] esi +
cmp dword_101FC80 esi +
jz loc_1004FA2  +
push ebx  +
push edi  +
push 4  +
mov esi offset dword_101FC80 +
pop ebx  +
mov edi [esi] +
mov ecx offset aHidden +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1004E1E  +
test dx dx +
jz loc_1004E1A  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1004E1E  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1004DFA  +
xor eax eax +
jmp loc_1004E23  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1004E36  +
mov eax [ebp+Buffer] +
mov dword ptr [eax+3Ch] 1 +
jmp loc_1004F89  +
push edi  +
call sub_1010270  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1004E4D  +
push 0DB1h  +
call sub_100295A  +
mov esi [esi] +
mov edi offset aAutodisconnect +
mov ecx edi +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1004E7C  +
test dx dx +
jz loc_1004E78  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1004E7C  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1004E58  +
xor eax eax +
jmp loc_1004E81  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1004EE2  +
mov eax [ebp+var_8] +
mov ecx offset a1 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1004EB1  +
test dx dx +
jz loc_1004EAD  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1004EB1  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1004E8D  +
xor eax eax +
jmp loc_1004EB6  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1004EC6  +
mov eax [ebp+Buffer] +
or dword ptr [eax+24h] 0FFFFFFFFh +
jmp loc_1004F89  +
push edi  +
push 0F70h  +
push [ebp+var_8]  +
call sub_10103CB  +
mov ecx [ebp+Buffer] +
movzx eax ax +
mov [ecx+24h] eax +
jmp loc_1004F89  +
mov ecx offset aSrvcomment +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1004F0D  +
test dx dx +
jz loc_1004F09  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1004F0D  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1004EE9  +
xor eax eax +
jmp loc_1004F12  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1004F21  +
mov eax [ebp+Buffer] +
mov ecx [ebp+var_8] +
mov [eax+10h] ecx +
jmp loc_1004F89  +
mov edi offset aHidden +
mov ecx edi +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1004F4E  +
test dx dx +
jz loc_1004F4A  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1004F4E  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_1004F2A  +
xor eax eax +
jmp loc_1004F53  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1004F89  +
mov esi [ebp+var_8] +
push esi  +
call ds:_wcsupr  +
movzx eax word ptr [esi] +
pop ecx  +
cmp ax 59h +
jz loc_1004E27  +
cmp ax 4Eh +
jnz loc_1004F7E  +
mov eax [ebp+Buffer] +
and dword ptr [eax+3Ch] 0 +
jmp loc_1004F89  +
push edi  +
push 0F70h  +
call sub_101081B  +
inc [ebp+var_C]  +
movzx esi word ptr [ebp+var_C] +
lea esi dword_101FC80[esi*4] +
cmp dword ptr [esi] 0 +
jnz loc_1004DF1  +
pop edi  +
pop ebx  +
push [ebp+Buffer]  +
call sub_1011950  +
mov esi eax +
test esi esi +
jz loc_1004FBE  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push esi  +
call sub_100295A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpDisplayName]  +
call sub_10016E3  +
push eax  +
call sub_1001741  +
dec eax  +
dec eax  +
jz loc_1005007  +
dec eax  +
jz loc_1005000  +
push 0  +
push 0  +
call sub_1011D71  +
jmp loc_100500C  +
call sub_1004B93  +
jmp loc_100500C  +
call sub_10048DA  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpDisplayName]  +
call sub_10016E3  +
push eax  +
call sub_1001741  +
cmp eax 3 +
jz loc_1005038  +
push 0  +
push 0  +
call sub_1011D71  +
jmp loc_1005049  +
push offset off_1020DC8  +
push 0  +
call sub_10122E4  +
call sub_1004DAC  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push bufptr  +
xor esi esi +
push [ebp+lpServiceName]  +
mov [ebp+var_8] esi +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10050A9  +
push edi  +
push esi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push esi  +
push esi  +
push esi  +
call NetSessionEnum  +
mov edi eax +
cmp edi 5 +
jnz loc_100509C  +
push eax  +
call sub_100295A  +
cmp edi esi +
pop edi  +
jnz loc_10050A9  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
lea eax [ebp+Buffer] +
push eax  +
movzx eax [ebp+arg_4] +
push eax  +
push 2  +
push [ebp+lpServiceName]  +
push esi  +
call NetServiceControl  +
cmp eax esi +
jz loc_10050C7  +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and al 0Ch +
cmp al 4 +
jnz loc_10050E6  +
push [ebp+lpServiceName]  +
call sub_100F4DF  +
push eax  +
push 0DD4h  +
call sub_1010933  +
mov eax [ebp+Buffer] +
test byte ptr [eax+4] 0Ch +
jz loc_100513D  +
mov eax [ebp+var_8] +
inc [ebp+var_8]  +
cmp eax 8 +
jge loc_100513D  +
call sub_1010892  +
push 9C4h  +
call ds:Sleep  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
push esi  +
push [ebp+lpServiceName]  +
push esi  +
call NetServiceControl  +
cmp eax esi +
jz loc_100512B  +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and eax 0Ch +
cmp eax 0Ch +
jz loc_100513D  +
cmp eax esi +
jnz loc_10050EF  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
test byte ptr [eax+4] 0Ch +
pop esi  +
push [ebp+lpServiceName]  +
jz loc_1005161  +
call sub_100F4DF  +
push eax  +
push 0DD2h  +
call sub_101081B  +
jmp loc_1005171  +
call sub_100F4DF  +
push eax  +
push 0DD0h  +
call sub_1010933  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push bufptr  +
xor esi esi +
push [ebp+lpServiceName]  +
mov [ebp+var_8] esi +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10051DA  +
push edi  +
push esi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push esi  +
push esi  +
push esi  +
call NetSessionEnum  +
mov edi eax +
cmp edi 5 +
jnz loc_10051CD  +
push eax  +
call sub_100295A  +
cmp edi esi +
pop edi  +
jnz loc_10051DA  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
lea eax [ebp+Buffer] +
push eax  +
movzx eax [ebp+arg_4] +
push eax  +
push 1  +
push [ebp+lpServiceName]  +
push esi  +
call NetServiceControl  +
cmp eax esi +
jz loc_10051F8  +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
push 0Ch  +
pop ebx  +
and al bl +
cmp al 8 +
jnz loc_100521A  +
push [ebp+lpServiceName]  +
call sub_100F4DF  +
push eax  +
push 0DD5h  +
call sub_1010933  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and eax ebx +
cmp al bl +
jz loc_1005270  +
mov eax [ebp+var_8] +
inc [ebp+var_8]  +
cmp eax 8 +
jge loc_1005270  +
call sub_1010892  +
push 9C4h  +
call ds:Sleep  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
push esi  +
push [ebp+lpServiceName]  +
push esi  +
call NetServiceControl  +
cmp eax esi +
jz loc_1005262  +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and eax ebx +
jz loc_1005270  +
cmp eax ebx +
jnz loc_1005226  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and eax ebx +
pop esi  +
cmp al bl +
pop ebx  +
push [ebp+lpServiceName]  +
jz loc_1005298  +
call sub_100F4DF  +
push eax  +
push 0DD3h  +
call sub_101081B  +
jmp loc_10052A8  +
call sub_100F4DF  +
push eax  +
push 0DD1h  +
call sub_1010933  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
leave   +
retn 8  +
***
call sub_1005052  +
retn   +
***
call sub_1005182  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+lpServiceName]  +
call sub_1005052  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+lpServiceName]  +
call sub_1005182  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpDisplayName]  +
call sub_10016E3  +
mov esi eax +
push esi  +
call sub_1001741  +
dec eax  +
jz loc_1005340  +
dec eax  +
jz loc_1005339  +
dec eax  +
jz loc_1005331  +
push esi  +
jmp loc_1005346  +
push bufptr  +
jmp loc_1005346  +
call sub_10052B9  +
jmp loc_100534B  +
push off_102095C  +
call sub_10052DF  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpDisplayName]  +
call sub_10016E3  +
mov esi eax +
push esi  +
call sub_1001741  +
dec eax  +
jz loc_1005386  +
dec eax  +
jz loc_100537F  +
dec eax  +
jz loc_1005377  +
push esi  +
jmp loc_100538C  +
push bufptr  +
jmp loc_100538C  +
call sub_10052CC  +
jmp loc_1005391  +
push off_102095C  +
call sub_10052F7  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push 0Eh  +
push esi  +
lea eax [ebp+var_24] +
push 0Fh  +
push eax  +
call wcsncpy_s  +
xor eax eax +
mov [ebp+var_8] ax +
lea eax [ebp+var_24] +
push eax  +
call ds:_wcslwr  +
push offset asc_1003744  +
push 104h  +
push esi  +
call wcscat_s  +
xor ecx ecx +
add esp 20h +
mov [ebp+var_3C] ecx +
mov [ebp+var_34] ecx +
mov [ebp+var_30] ecx +
mov [ebp+var_28] ecx +
lea eax [ebp+var_24] +
lea ecx [ebp+parm_err] +
push ecx  +
mov [ebp+var_40] eax +
xor eax eax +
lea ecx [ebp+buf] +
inc eax  +
push ecx  +
push eax  +
push edi  +
mov dword ptr [ebp+buf] esi +
mov [ebp+var_38] eax +
mov [ebp+var_2C] 1001h +
call NetUserAdd  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset asc_1003744  +
push 104h  +
push [ebp+arg_4]  +
call wcscat_s  +
add esp 0Ch +
pop ebp  +
jmp NetUserDel  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push 20Ah  +
push eax  +
mov word ptr [ebp+var_210] ax +
lea eax [ebp+var_210+2] +
push eax  +
call memset  +
push 104h  +
push esi  +
lea eax [ebp+var_210] +
push 106h  +
push eax  +
call wcsncpy_s  +
add esp 1Ch +
call sub_100F48B  +
push 1  +
push 0  +
push 0  +
push 105h  +
lea eax [ebp+var_41C] +
push eax  +
call sub_100F2B3  +
test eax eax +
jz loc_10054C7  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_41C] +
push eax  +
call sub_100539B  +
mov esi eax +
test esi esi +
jz loc_1005501  +
cmp esi 8B0h +
jnz loc_10054F9  +
lea eax [ebp+var_210] +
push eax  +
push 0EC6h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
jmp loc_1005506  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push 20Ah  +
push eax  +
mov word ptr [ebp+var_210] ax +
lea eax [ebp+var_210+2] +
push eax  +
call memset  +
push 104h  +
push esi  +
lea eax [ebp+var_210] +
push 106h  +
push eax  +
call wcsncpy_s  +
add esp 1Ch +
call sub_100F48B  +
push 1  +
push 0  +
push 0  +
push 105h  +
lea eax [ebp+var_41C] +
push eax  +
call sub_100F2B3  +
test eax eax +
jz loc_100558E  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_41C] +
push eax  +
call sub_100542E  +
mov esi eax +
test esi esi +
jz loc_10055C8  +
cmp esi 8ADh +
jnz loc_10055C0  +
lea eax [ebp+var_210] +
push eax  +
push 0EC5h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
jmp loc_10055CD  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push bufptr  +
call sub_100A9CD  +
lea eax [ebp+fileid] +
push eax  +
push [ebp+arg_0]  +
call sub_1010326  +
test ax ax +
jz loc_100560D  +
push 0F78h  +
call sub_100295A  +
push [ebp+fileid]  +
push 0  +
call NetFileClose  +
test eax eax +
jz loc_1005621  +
push eax  +
call sub_100295A  +
call sub_10108DE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_4] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1005645  +
mov esi [ebp+arg_8] +
sub eax edx +
sar eax 1 +
mov [ebp+var_C] eax +
cmp esi eax +
jb loc_100566F  +
push edi  +
push esi  +
push [ebp+arg_4]  +
call wcscpy_s  +
add esp 0Ch +
jmp loc_1005787  +
push ebx  +
push 3  +
pop ebx  +
push ebx  +
push edi  +
push esi  +
push [ebp+arg_4]  +
call wcsncpy_s  +
lea eax [edi+6] +
mov edi ds:wcsncmp +
push 1  +
push offset asc_1003740  +
push eax  +
mov [ebp+var_8] eax +
call edi  +
add esp 1Ch +
test eax eax +
jz loc_10056CE  +
mov eax esi +
shr eax 1 +
add eax 0FFFFFFFAh +
mov [ebp+var_10] eax +
mov eax [ebp+var_8] +
mov [ebp+arg_8] eax +
mov eax [ebp+var_4] +
cmp eax [ebp+var_10] +
jnb loc_10056CE  +
add [ebp+arg_8] 2 +
inc [ebp+var_4]  +
push 1  +
push offset asc_1003740  +
push [ebp+arg_8]  +
inc ebx  +
call edi  +
add esp 0Ch +
test eax eax +
jnz loc_10056AB  +
mov eax [ebp+var_4] +
inc eax  +
push eax  +
push [ebp+var_8]  +
lea eax [esi-3] +
push eax  +
mov eax [ebp+arg_4] +
add eax 6 +
push eax  +
call wcsncpy_s  +
mov edi [ebp+var_4] +
add edi 4 +
mov eax esi +
sub eax edi +
push offset a___  +
push eax  +
mov eax [ebp+arg_4] +
lea eax [eax+edi*2] +
push eax  +
call wcscpy_s  +
mov ecx [ebp+var_C] +
add esp 1Ch +
add edi 3 +
and [ebp+arg_8] 0 +
lea edx [ecx+3] +
jmp loc_100575B  +
mov eax [ebp+arg_0] +
inc ebx  +
lea eax [eax+ebx*2] +
cmp word ptr [eax] 0 +
jz loc_1005749  +
push 1  +
push offset asc_1003740  +
push eax  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_1005746  +
mov eax [ebp+arg_0] +
inc ebx  +
inc [ebp+arg_8]  +
lea eax [eax+ebx*2] +
cmp word ptr [eax] 0 +
jnz loc_1005721  +
mov ecx [ebp+var_C] +
mov eax [ebp+arg_0] +
cmp word ptr [eax+ebx*2] 0 +
jz loc_1005764  +
mov edx ecx +
sub edx [ebp+arg_8] +
add edx 3 +
lea eax [esi-1] +
cmp edx eax +
jbe loc_100576D  +
jmp loc_1005714  +
mov eax [ebp+var_4] +
sub ecx esi +
lea ebx [ecx+eax+7] +
mov eax [ebp+arg_0] +
lea eax [eax+ebx*2] +
push eax  +
mov eax [ebp+arg_4] +
sub esi edi +
lea eax [eax+edi*2] +
push esi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
test ecx ecx +
jbe loc_1005843  +
push ebx  +
push esi  +
push edi  +
lea esi [eax+0Ch] +
mov [ebp+var_64] ecx +
mov edi offset aFws_0 +
push dword ptr [esi-0Ch]  +
push offset a10lu  +
call sub_1010562  +
pop ecx  +
pop ecx  +
mov ecx [esi] +
mov eax ecx +
lea edx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
test bx bx +
jnz loc_10057E1  +
sub eax edx +
sar eax 1 +
cmp eax 27h +
ja loc_10057F9  +
push 0  +
push ecx  +
jmp loc_100580B  +
push 27h  +
lea eax [ebp+var_60] +
push eax  +
push ecx  +
call sub_100562F  +
push 0  +
lea eax [ebp+var_60] +
push eax  +
push 28h  +
call sub_10108BB  +
push eax  +
push edi  +
call sub_1010562  +
pop ecx  +
pop ecx  +
push dword ptr [esi-4]  +
push 0  +
push dword ptr [esi+4]  +
push 14h  +
call sub_10108BB  +
push eax  +
push offset aFws6u  +
call sub_1010562  +
add esp 0Ch +
add esi 14h +
dec [ebp+var_64]  +
jnz loc_10057CB  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push bufptr  +
mov edi [ebp+arg_0] +
call sub_100A9CD  +
xor esi esi +
cmp edi esi +
jnz loc_100597C  +
lea eax [ebp+resume_handle] +
push eax  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 3  +
push esi  +
push esi  +
push esi  +
mov [ebp+resume_handle] esi +
call NetFileEnum  +
mov edi eax +
mov ebx 0EAh +
cmp edi esi +
jz loc_10058FB  +
cmp edi ebx +
jz loc_10058FB  +
push edi  +
call sub_100295A  +
cmp [ebp+entriesread] esi +
jnz loc_1005908  +
call sub_1010959  +
call sub_10108A7  +
push 1284h  +
call sub_10108F6  +
call sub_1010842  +
jmp loc_1005956  +
lea eax [ebp+resume_handle] +
push eax  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 3  +
push esi  +
push esi  +
push esi  +
call NetFileEnum  +
mov edi eax +
cmp edi esi +
jz loc_1005956  +
cmp edi ebx +
jz loc_1005956  +
push edi  +
call sub_100295A  +
push [ebp+entriesread]  +
push [ebp+Buffer]  +
call sub_100579D  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
cmp edi esi +
jz loc_1005ABB  +
jmp loc_100591E  +
lea eax [ebp+fileid] +
push eax  +
push edi  +
call sub_1010326  +
test ax ax +
jz loc_1005998  +
push 0F78h  +
call sub_100295A  +
lea eax [ebp+bufptr] +
push eax  +
push 3  +
push [ebp+fileid]  +
push esi  +
call NetFileGetInfo  +
cmp eax esi +
jz loc_10059B7  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_80] +
push eax  +
push offset unk_1020348  +
push 5  +
call sub_1010ADF  +
add [ebp+var_80] 5 +
mov eax [ebp+bufptr] +
push dword ptr [eax]  +
push esi  +
push dword_102034C  +
push [ebp+var_80]  +
call sub_10108BB  +
push eax  +
push [ebp+var_80]  +
push esi  +
push off_102099C  +
call sub_1010562  +
mov eax [ebp+bufptr] +
add esp 14h +
push dword ptr [eax+10h]  +
push esi  +
push dword_102036C  +
push [ebp+var_80]  +
call sub_10108BB  +
push eax  +
push [ebp+var_80]  +
push esi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+bufptr] +
add esp 14h +
push dword ptr [eax+8]  +
push esi  +
push dword_1020354  +
push [ebp+var_80]  +
call sub_10108BB  +
push eax  +
push [ebp+var_80]  +
push esi  +
push off_1020998  +
call sub_1010562  +
mov eax [ebp+bufptr] +
add esp 14h +
push dword ptr [eax+0Ch]  +
push esi  +
push dword_1020364  +
push [ebp+var_80]  +
call sub_10108BB  +
push eax  +
push [ebp+var_80]  +
push esi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push 3Ch  +
lea eax [ebp+var_7C] +
push eax  +
mov eax [ebp+bufptr] +
push dword ptr [eax+4]  +
call sub_100F155  +
lea eax [ebp+var_7C] +
push eax  +
push esi  +
push dword_102035C  +
push [ebp+var_80]  +
call sub_10108BB  +
push eax  +
push [ebp+var_80]  +
push esi  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
push [ebp+bufptr]  +
call NetApiBufferFree  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
call sub_100F48B  +
xor ebx ebx +
mov dword ptr [ebp+buf] esi +
mov [ebp+var_218] ebx +
mov [ebp+var_214] ebx +
cmp dword_101FC80 ebx +
jz loc_1005BFB  +
mov esi offset dword_101FC80 +
push edi  +
mov edi [esi] +
mov ecx offset aAdd +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1005B4A  +
cmp dx bx +
jz loc_1005B46  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1005B4A  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_1005B24  +
xor eax eax +
jmp loc_1005B4F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jz loc_1005BDF  +
mov ecx offset aDomain +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1005B84  +
cmp dx bx +
jz loc_1005B80  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1005B84  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_1005B5E  +
xor eax eax +
jmp loc_1005B89  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jz loc_1005BDF  +
push edi  +
call sub_1010270  +
mov edi eax +
cmp edi ebx +
jnz loc_1005BA3  +
push 0DB1h  +
call sub_100295A  +
mov eax [esi] +
mov ecx offset aComment +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1005BD0  +
cmp dx bx +
jz loc_1005BCC  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1005BD0  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_1005BAA  +
xor eax eax +
jmp loc_1005BD5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_1005BDF  +
mov [ebp+var_218] edi +
inc [ebp+var_214]  +
mov esi [ebp+var_214] +
lea esi dword_101FC80[esi*4] +
cmp [esi] ebx +
jnz loc_1005B1B  +
pop edi  +
push 1  +
push ebx  +
push ebx  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax ebx +
jz loc_1005C1A  +
push eax  +
call sub_100295A  +
push ebx  +
lea eax [ebp+buf] +
push eax  +
push 1  +
lea eax [ebp+servername] +
push eax  +
call NetGroupAdd  +
mov esi eax +
cmp esi ebx +
jz loc_1005C52  +
cmp esi 35h +
jnz loc_1005C4C  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+groupname] eax +
mov dword ptr [ebp+buf] ebx +
call sub_100F48B  +
mov [ebp+var_218] ebx +
cmp dword_101FC80 ebx +
jz loc_1005D57  +
mov esi offset dword_101FC80 +
push edi  +
mov edi [esi] +
mov ecx offset aDomain +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1005CE0  +
cmp dx bx +
jz loc_1005CDC  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1005CE0  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_1005CBA  +
xor eax eax +
jmp loc_1005CE5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jz loc_1005D3B  +
push edi  +
call sub_1010270  +
mov edi eax +
cmp edi ebx +
jnz loc_1005CFF  +
push 0DB1h  +
call sub_100295A  +
mov eax [esi] +
mov ecx offset aComment +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1005D2C  +
cmp dx bx +
jz loc_1005D28  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1005D2C  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_1005D06  +
xor eax eax +
jmp loc_1005D31  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_1005D3B  +
mov dword ptr [ebp+buf] edi +
inc [ebp+var_218]  +
mov esi [ebp+var_218] +
lea esi dword_101FC80[esi*4] +
cmp [esi] ebx +
jnz loc_1005CB1  +
pop edi  +
push 1  +
push ebx  +
push ebx  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax ebx +
jz loc_1005D76  +
push eax  +
call sub_100295A  +
mov eax dword ptr [ebp+buf] +
cmp eax ebx +
jz loc_1005DC7  +
push ebx  +
mov dword ptr [ebp+buf] eax +
lea eax [ebp+buf] +
push eax  +
push 3EAh  +
push [ebp+groupname]  +
lea eax [ebp+servername] +
push eax  +
call NetGroupSetInfo  +
mov esi eax +
cmp esi ebx +
jz loc_1005DC7  +
cmp esi 35h +
jnz loc_1005DC1  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
call sub_100F48B  +
push 1  +
push 0  +
push 0  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
test eax eax +
jz loc_1005E20  +
push eax  +
call sub_100295A  +
push esi  +
lea eax [ebp+servername] +
push eax  +
call NetGroupDel  +
mov esi eax +
test esi esi +
jz loc_1005E4F  +
cmp esi 35h +
jnz loc_1005E49  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_214] ebx +
call sub_100F48B  +
push 1  +
push ebx  +
push ebx  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax ebx +
jz loc_1005EAE  +
push eax  +
call sub_100295A  +
mov [ebp+var_218] 2 +
cmp dword_101A6F8 ebx +
jz loc_1005F8A  +
push esi  +
mov esi offset dword_101A6F8 +
push dword ptr [esi]  +
lea eax [ebp+servername] +
push edi  +
push eax  +
call NetGroupAddUser  +
mov ecx eax +
sub ecx ebx +
jz loc_1005F42  +
sub ecx 35h +
jz loc_1005F31  +
sub ecx 46h +
jz loc_1005F28  +
sub ecx 832h +
jz loc_1005F1F  +
sub ecx 0Fh +
jz loc_1005EFE  +
push eax  +
call sub_100295A  +
jmp loc_1005F42  +
push 2  +
mov dword_1019DDC edi +
push 0EAAh  +
mov eax [esi] +
mov dword_1019DD8 eax +
call sub_1001C11  +
inc [ebp+var_214]  +
jmp loc_1005F42  +
push 1  +
push 0EABh  +
jmp loc_1005F0B  +
push 1  +
push 0E9Eh  +
jmp loc_1005F0B  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
inc [ebp+var_218]  +
mov esi [ebp+var_218] +
lea esi dword_101A6F0[esi*4] +
cmp [esi] ebx +
jnz loc_1005ECA  +
pop esi  +
cmp [ebp+var_214] ebx +
jz loc_1005F8A  +
mov eax [ebp+var_218] +
add eax 0FFFFFFFEh +
cmp [ebp+var_214] eax +
jge loc_1005F81  +
push 0DB0h  +
call sub_10108F6  +
push 1  +
call sub_1002992  +
jmp loc_1005F8F  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_214] ebx +
call sub_100F48B  +
push 1  +
push ebx  +
push ebx  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax ebx +
jz loc_1005FEA  +
push eax  +
call sub_100295A  +
mov [ebp+var_218] 2 +
cmp dword_101A6F8 ebx +
jz loc_10060C6  +
push esi  +
mov esi offset dword_101A6F8 +
push dword ptr [esi]  +
lea eax [ebp+servername] +
push edi  +
push eax  +
call NetGroupDelUser  +
mov ecx eax +
sub ecx ebx +
jz loc_100607E  +
sub ecx 35h +
jz loc_100606D  +
sub ecx 46h +
jz loc_1006064  +
sub ecx 832h +
jz loc_100605B  +
sub ecx 10h +
jz loc_100603A  +
push eax  +
call sub_100295A  +
jmp loc_100607E  +
push 2  +
mov dword_1019DDC edi +
push 0EA9h  +
mov eax [esi] +
mov dword_1019DD8 eax +
call sub_1001C11  +
inc [ebp+var_214]  +
jmp loc_100607E  +
push 1  +
push 0EABh  +
jmp loc_1006047  +
push 1  +
push 0E9Eh  +
jmp loc_1006047  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
inc [ebp+var_218]  +
mov esi [ebp+var_218] +
lea esi dword_101A6F0[esi*4] +
cmp [esi] ebx +
jnz loc_1006006  +
pop esi  +
cmp [ebp+var_214] ebx +
jz loc_10060C6  +
mov eax [ebp+var_218] +
add eax 0FFFFFFFEh +
cmp [ebp+var_214] eax +
jge loc_10060BD  +
push 0DB0h  +
call sub_10108F6  +
push 1  +
call sub_1002992  +
jmp loc_10060CB  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 430h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov [ebp+var_428] ebx +
call sub_100F48B  +
lea eax [ebp+Buffer] +
push eax  +
push 0Ah  +
call sub_1010F03  +
mov esi 105h +
test eax eax +
jz loc_1006131  +
xor eax eax +
mov [ebp+var_428] 1 +
mov word ptr [ebp+var_41C] ax +
jmp loc_1006154  +
mov eax [ebp+Buffer] +
push dword ptr [eax]  +
lea eax [ebp+var_41C] +
push esi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax ebx +
jz loc_100616E  +
push eax  +
call sub_100295A  +
push ebx  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+bufptr] +
push eax  +
push ebx  +
lea eax [ebp+servername] +
push eax  +
call NetGroupEnum  +
cmp eax ebx +
jz loc_100619D  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] ebx +
jnz loc_10061AA  +
call sub_1010959  +
push offset sub_100CCE1  +
push 4  +
push [ebp+entriesread]  +
push [ebp+bufptr]  +
call ds:qsort  +
add esp 10h +
call sub_10108A7  +
cmp word ptr [ebp+servername] bx +
jz loc_10061F1  +
lea eax [ebp+servername] +
push offset asc_1003740  +
push eax  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
lea eax [ebp+eax*2+servername] +
jmp loc_10061F7  +
lea eax [ebp+var_41C] +
push eax  +
push 1130h  +
call sub_1010933  +
call sub_1010842  +
mov edi [ebp+bufptr] +
xor esi esi +
cmp [ebp+entriesread] ebx +
jbe loc_1006233  +
push ebx  +
push dword ptr [edi]  +
push offset aFws_1  +
call sub_1010562  +
add esp 0Ch +
inc esi  +
add edi 4 +
cmp esi [ebp+entriesread] +
jb loc_1006217  +
cmp [ebp+var_428] ebx +
pop edi  +
pop esi  +
pop ebx  +
jz loc_100624F  +
push 0DB0h  +
call sub_10108F6  +
push 1  +
call sub_1002992  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
call sub_100F48B  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax esi +
jz loc_10062B0  +
push eax  +
call sub_100295A  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push edi  +
lea eax [ebp+servername] +
push eax  +
call NetGroupGetInfo  +
cmp eax esi +
jz loc_1006308  +
cmp eax 8BAh +
jz loc_10062D9  +
push eax  +
call sub_100295A  +
jmp loc_1006308  +
mov eax [ebp+Buffer] +
push esi  +
push 3  +
push 101h  +
push dword ptr [eax]  +
push edi  +
call NetpwNameCanonicalize  +
cmp eax esi +
jz loc_10062F9  +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
mov ecx off_1020954 +
mov [eax+4] ecx +
lea eax [ebp+var_218] +
push eax  +
push offset unk_1020370  +
push 2  +
call sub_1010ADF  +
add [ebp+var_218] 5 +
mov eax [ebp+Buffer] +
push dword ptr [eax]  +
push esi  +
push dword_1020374  +
push [ebp+var_218]  +
call sub_10108BB  +
push eax  +
push [ebp+var_218]  +
push esi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+4]  +
push esi  +
push dword_102037C  +
push [ebp+var_218]  +
call sub_10108BB  +
push eax  +
push [ebp+var_218]  +
push esi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push esi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
push edi  +
lea eax [ebp+servername] +
push eax  +
call NetGroupGetUsers  +
cmp eax esi +
jz loc_10063BE  +
push eax  +
call sub_100295A  +
push offset sub_100CCE1  +
push 4  +
push [ebp+entriesread]  +
push [ebp+Buffer]  +
call ds:qsort  +
add esp 10h +
call sub_10108A7  +
push 1133h  +
call sub_10108F6  +
call sub_1010842  +
mov ebx [ebp+Buffer] +
xor edi edi +
cmp [ebp+entriesread] esi +
jbe loc_1006433  +
push esi  +
push dword ptr [ebx]  +
push 19h  +
call sub_10108BB  +
push eax  +
push offset aFws_0  +
call sub_1010562  +
pop ecx  +
pop ecx  +
inc edi  +
push 3  +
xor edx edx +
mov eax edi +
pop ecx  +
div  ecx +
test edx edx +
jnz loc_1006428  +
call sub_10108A7  +
add ebx 4 +
cmp edi [ebp+entriesread] +
jb loc_10063FE  +
push 3  +
pop ecx  +
mov eax edi +
xor edx edx +
div  ecx +
pop edi  +
pop esi  +
pop ebx  +
test edx edx +
jz loc_1006448  +
call sub_10108A7  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_10073C3  +
call sub_10074D5  +
pop ebp  +
jmp sub_100295A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_10073C3  +
call sub_10074D5  +
pop ebp  +
jmp sub_101081B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 0Ah  +
call sub_1010F03  +
xor edi edi +
cmp eax edi +
jz loc_10064D0  +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
push dword ptr [eax]  +
mov esi 105h +
lea eax [ebp+var_41C] +
push esi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push edi  +
push edi  +
push edi  +
push esi  +
lea eax [ebp+var_210] +
push eax  +
call sub_100F2B3  +
cmp eax edi +
jz loc_1006512  +
push eax  +
call sub_100295A  +
push 1  +
lea eax [ebp+var_210] +
push eax  +
call sub_1007918  +
cmp eax edi +
jz loc_100652A  +
push eax  +
call sub_100646B  +
lea eax [ebp+var_424] +
push eax  +
lea eax [ebp+var_420] +
push eax  +
call sub_100833B  +
cmp eax edi +
jz loc_1006547  +
push eax  +
call sub_100646B  +
push offset sub_100CCE1  +
push 8  +
push [ebp+var_424]  +
push [ebp+var_420]  +
call ds:qsort  +
add esp 10h +
call sub_10108A7  +
cmp word ptr [ebp+var_210] di +
jz loc_100658E  +
lea eax [ebp+var_210] +
push offset asc_1003740  +
push eax  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
lea eax [ebp+eax*2+var_210] +
jmp loc_1006594  +
lea eax [ebp+var_41C] +
push eax  +
push 1135h  +
call sub_1010933  +
call sub_1010842  +
mov esi [ebp+var_420] +
cmp [ebp+var_424] edi +
jbe loc_10065CC  +
push dword ptr [esi]  +
push offset aFws_1  +
call sub_1010562  +
inc edi  +
pop ecx  +
add esi 8 +
pop ecx  +
cmp edi [ebp+var_424] +
jb loc_10065B2  +
push [ebp+var_424]  +
push [ebp+var_420]  +
call sub_1007429  +
push [ebp+var_420]  +
call sub_1001E31  +
call sub_10073C3  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
mov [ebp+var_224] esi +
call sub_100F2B3  +
cmp eax edi +
jz loc_1006645  +
push eax  +
call sub_100295A  +
push 1  +
lea eax [ebp+var_210] +
push eax  +
call sub_1007918  +
cmp eax edi +
jz loc_100665D  +
push eax  +
call sub_100646B  +
push 3  +
push 0Ch  +
push esi  +
call sub_10083E0  +
cmp eax edi +
jz loc_1006671  +
push eax  +
call sub_100646B  +
lea eax [ebp+var_224] +
push eax  +
call sub_10074F1  +
cmp eax edi +
jz loc_1006687  +
push eax  +
call sub_100646B  +
lea eax [ebp+var_214] +
push eax  +
push offset unk_1020380  +
push 2  +
call sub_1010ADF  +
push [ebp+var_224]  +
add [ebp+var_214] 5 +
push edi  +
push dword_1020384  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+var_220] +
add esp 14h +
cmp eax edi +
jnz loc_10066DE  +
mov eax offset username +
push eax  +
push edi  +
push dword_102038C  +
push [ebp+var_214]  +
call sub_10108BB  +
push eax  +
push [ebp+var_214]  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
cmp [ebp+var_220] edi +
jz loc_100671A  +
push [ebp+var_220]  +
call sub_1001E31  +
lea eax [ebp+var_21C] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1007C21  +
cmp eax edi +
jz loc_1006737  +
push eax  +
call sub_100646B  +
push offset sub_100CCE1  +
push 4  +
push [ebp+var_21C]  +
push [ebp+Buffer]  +
call ds:qsort  +
add esp 10h +
call sub_10108A7  +
push 1138h  +
call sub_10108F6  +
call sub_1010842  +
xor esi esi +
cmp [ebp+var_21C] edi +
jbe loc_100678F  +
mov eax [ebp+Buffer] +
push dword ptr [eax+esi*4]  +
push offset aFws_2  +
call sub_1010562  +
inc esi  +
pop ecx  +
pop ecx  +
cmp esi [ebp+var_21C] +
jb loc_1006771  +
push [ebp+var_21C]  +
push [ebp+Buffer]  +
call sub_100785B  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10073C3  +
call sub_10074D5  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
mov [ebp+var_21C] eax +
mov [ebp+var_218] esi +
mov [ebp+var_214] esi +
cmp dword_101FC80 esi +
jz loc_10068F3  +
push ebx  +
push edi  +
mov esi offset dword_101FC80 +
mov ebx offset aComment +
mov edi [esi] +
mov ecx offset aAdd +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1006853  +
test dx dx +
jz loc_100684F  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1006853  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_100682D  +
xor eax eax +
jmp loc_1006858  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10068D2  +
mov ecx offset aDomain +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1006889  +
test dx dx +
jz loc_1006885  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1006889  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1006863  +
xor eax eax +
jmp loc_100688E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10068D2  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1006897  +
sub eax edx +
sar eax 1 +
push eax  +
push ebx  +
push edi  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_10068D2  +
push dword ptr [esi]  +
call sub_1010270  +
mov esi eax +
test esi esi +
jnz loc_10068CC  +
push 0DB1h  +
call sub_100295A  +
mov [ebp+var_218] esi +
inc [ebp+var_214]  +
movzx esi word ptr [ebp+var_214] +
lea esi dword_101FC80[esi*4] +
cmp dword ptr [esi] 0 +
jnz loc_1006824  +
pop edi  +
xor esi esi +
pop ebx  +
push 1  +
push esi  +
push esi  +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
call sub_100F2B3  +
cmp eax esi +
jz loc_1006912  +
push eax  +
call sub_100295A  +
push 2  +
lea eax [ebp+var_210] +
push eax  +
call sub_1007918  +
cmp eax esi +
jz loc_100692A  +
push eax  +
call sub_100646B  +
lea eax [ebp+var_21C] +
push eax  +
call sub_10082CC  +
cmp eax esi +
pop esi  +
jz loc_1006941  +
push eax  +
call sub_100646B  +
call sub_10073C3  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_21C] esi +
mov [ebp+var_220] edi +
mov [ebp+var_218] edi +
mov [ebp+var_224] esi +
mov [ebp+var_214] edi +
cmp dword_101FC80 edi +
jz loc_1006A4D  +
push ebx  +
mov edi offset dword_101FC80 +
mov ebx offset aComment +
mov esi [edi] +
mov ecx offset aDomain +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10069DE  +
test dx dx +
jz loc_10069DA  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10069DE  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_10069B8  +
xor eax eax +
jmp loc_10069E3  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1006A27  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10069EC  +
sub eax edx +
sar eax 1 +
push eax  +
push ebx  +
push esi  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_1006A27  +
push dword ptr [edi]  +
call sub_1010270  +
mov esi eax +
test esi esi +
jnz loc_1006A21  +
push 0DB1h  +
call sub_100295A  +
mov [ebp+var_218] esi +
inc [ebp+var_214]  +
movzx edi word ptr [ebp+var_214] +
lea edi dword_101FC80[edi*4] +
cmp dword ptr [edi] 0 +
jnz loc_10069AF  +
mov esi [ebp+var_21C] +
xor edi edi +
pop ebx  +
push 1  +
push edi  +
push edi  +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
call sub_100F2B3  +
cmp eax edi +
jz loc_1006A6C  +
push eax  +
call sub_100295A  +
push 2  +
lea eax [ebp+var_210] +
push eax  +
call sub_1007918  +
cmp eax edi +
jz loc_1006A84  +
push eax  +
call sub_100646B  +
push 3  +
push 10h  +
push esi  +
call sub_10083E0  +
cmp eax edi +
jz loc_1006A98  +
push eax  +
call sub_100646B  +
mov eax [ebp+var_218] +
cmp eax edi +
jz loc_1006ABE  +
mov [ebp+var_220] eax +
lea eax [ebp+var_224] +
push eax  +
call sub_1007D09  +
cmp eax edi +
jz loc_1006ABE  +
push eax  +
call sub_100646B  +
call sub_10073C3  +
call sub_10074D5  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 1  +
push 0  +
push 0  +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
call sub_100F2B3  +
test eax eax +
jz loc_1006B1C  +
push eax  +
call sub_100295A  +
push 2  +
lea eax [ebp+var_210] +
push eax  +
call sub_1007918  +
test eax eax +
jz loc_1006B34  +
push eax  +
call sub_100646B  +
push esi  +
call sub_100859B  +
pop esi  +
test eax eax +
jz loc_1006B45  +
push eax  +
call sub_100646B  +
call sub_10073C3  +
call sub_10074D5  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 22Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push 1  +
push ebx  +
push ebx  +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
mov [ebp+var_22C] esi +
mov [ebp+var_214] ebx +
mov [ebp+var_21C] ebx +
mov [ebp+var_218] ebx +
mov [ebp+var_224] ebx +
call sub_100F2B3  +
cmp eax ebx +
jz loc_1006BC0  +
push eax  +
call sub_100295A  +
push edi  +
push 2  +
pop edi  +
push edi  +
lea eax [ebp+var_210] +
push eax  +
call sub_1007918  +
cmp eax ebx +
jz loc_1006BDB  +
push eax  +
call sub_100646B  +
push 3  +
push 1  +
push esi  +
call sub_10083E0  +
cmp eax ebx +
jz loc_1006C03  +
cmp eax 0F7Bh +
jnz loc_1006BFD  +
push esi  +
push 0EC4h  +
call sub_1006485  +
jmp loc_1006C03  +
push eax  +
call sub_100646B  +
mov [ebp+var_220] edi +
cmp dword_101A6F8 ebx +
jz loc_1006D4A  +
mov esi offset dword_101A6F8 +
mov [ebp+var_228] 8 +
mov edi [esi] +
push 40h  +
push edi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1006C8B  +
cmp [ebp+var_218] ebx +
jnz loc_1006C54  +
lea eax [ebp+var_218] +
push eax  +
push ebx  +
push ebx  +
call ds:DsBindW  +
cmp [ebp+var_218] ebx +
jz loc_1006C8B  +
lea eax [ebp+var_21C] +
push eax  +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 2  +
push 8  +
push ebx  +
push [ebp+var_218]  +
call ds:DsCrackNamesW  +
test eax eax +
jnz loc_1006C8E  +
mov eax [ebp+var_21C] +
cmp [eax] esi +
jnz loc_1006C8E  +
mov eax [eax+4] +
cmp [eax] ebx +
jnz loc_1006C8E  +
mov edi [eax+8] +
jmp loc_1006C8E  +
xor esi esi +
inc esi  +
push edi  +
call sub_100840C  +
mov ecx eax +
sub ecx ebx +
jz loc_1006D07  +
sub ecx 7Bh +
jz loc_1006CFF  +
sub ecx 832h +
jz loc_1006CF7  +
sub ecx 0Fh +
jz loc_1006CD2  +
sub ecx 6BFh +
jz loc_1006CF7  +
mov ecx [ebp+var_228] +
cmp dword_101A6F4[ecx] ebx +
jnz loc_1006D0D  +
cmp [ebp+var_224] ebx +
jnz loc_1006D0D  +
push eax  +
call sub_100646B  +
jmp loc_1006D0D  +
mov eax [ebp+var_22C] +
push 2  +
mov dword_1019DDC eax +
push 0EC3h  +
mov dword_1019DD8 edi +
call sub_1001C11  +
inc [ebp+var_214]  +
jmp loc_1006D0D  +
push esi  +
push 0EC7h  +
jmp loc_1006CE4  +
push esi  +
push 0E9Eh  +
jmp loc_1006CE4  +
mov [ebp+var_224] esi +
cmp [ebp+var_21C] ebx +
jz loc_1006D27  +
push [ebp+var_21C]  +
call ds:DsFreeNameResultW  +
mov [ebp+var_21C] ebx +
inc [ebp+var_220]  +
mov esi [ebp+var_220] +
shl esi 2 +
mov [ebp+var_228] esi +
lea esi dword_101A6F0[esi] +
cmp [esi] ebx +
jnz loc_1006C24  +
pop edi  +
cmp [ebp+var_218] ebx +
jz loc_1006D60  +
lea eax [ebp+var_218] +
push eax  +
call ds:DsUnBindW  +
call sub_10073C3  +
call sub_10074D5  +
cmp [ebp+var_214] ebx +
pop esi  +
pop ebx  +
jz loc_1006D98  +
mov eax [ebp+var_220] +
add eax 0FFFFFFFEh +
cmp [ebp+var_214] eax +
jge loc_1006D8F  +
push 0DB0h  +
call sub_10108F6  +
push 1  +
call sub_1002992  +
jmp loc_1006D9D  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push 1  +
push ebx  +
push ebx  +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
mov [ebp+var_224] esi +
mov [ebp+var_214] ebx +
mov [ebp+var_21C] ebx +
mov [ebp+var_218] ebx +
call sub_100F2B3  +
cmp eax ebx +
jz loc_1006E03  +
push eax  +
call sub_100295A  +
push edi  +
push 2  +
pop edi  +
push edi  +
lea eax [ebp+var_210] +
push eax  +
call sub_1007918  +
cmp eax ebx +
jz loc_1006E1E  +
push eax  +
call sub_100646B  +
push 3  +
push edi  +
push esi  +
call sub_10083E0  +
cmp eax ebx +
jz loc_1006E45  +
cmp eax 0F7Bh +
jnz loc_1006E3F  +
push esi  +
push 0EC4h  +
call sub_1006485  +
jmp loc_1006E45  +
push eax  +
call sub_100646B  +
mov [ebp+var_220] edi +
cmp dword_101A6F8 ebx +
jz loc_1006F58  +
mov edi offset dword_101A6F8 +
mov esi [edi] +
push 40h  +
push esi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1006EC0  +
cmp [ebp+var_218] ebx +
jnz loc_1006E8C  +
lea eax [ebp+var_218] +
push eax  +
push ebx  +
push ebx  +
call ds:DsBindW  +
cmp [ebp+var_218] ebx +
jz loc_1006EC0  +
lea eax [ebp+var_21C] +
push eax  +
push edi  +
push 1  +
push 2  +
push 8  +
push ebx  +
push [ebp+var_218]  +
call ds:DsCrackNamesW  +
test eax eax +
jnz loc_1006EC0  +
mov eax [ebp+var_21C] +
cmp dword ptr [eax] 1 +
jnz loc_1006EC0  +
mov eax [eax+4] +
cmp [eax] ebx +
jnz loc_1006EC0  +
mov esi [eax+8] +
push esi  +
call sub_100846F  +
mov ecx eax +
sub ecx ebx +
jz loc_1006F23  +
sub ecx 7Bh +
jz loc_1006F0B  +
sub ecx 832h +
jz loc_1006F02  +
sub ecx 10h +
jz loc_1006EEE  +
sub ecx 6BEh +
jz loc_1006F02  +
push eax  +
call sub_100646B  +
jmp loc_1006F23  +
mov eax [ebp+var_224] +
push 2  +
mov dword_1019DDC eax +
push 0EA9h  +
jmp loc_1006F12  +
push 1  +
push 0EC7h  +
jmp loc_1006F12  +
push 1  +
push 0E9Eh  +
mov dword_1019DD8 esi +
call sub_1001C11  +
inc [ebp+var_214]  +
cmp [ebp+var_21C] ebx +
jz loc_1006F3D  +
push [ebp+var_21C]  +
call ds:DsFreeNameResultW  +
mov [ebp+var_21C] ebx +
inc [ebp+var_220]  +
mov edi [ebp+var_220] +
lea edi dword_101A6F0[edi*4] +
cmp [edi] ebx +
jnz loc_1006E5C  +
pop edi  +
cmp [ebp+var_218] ebx +
jz loc_1006F6E  +
lea eax [ebp+var_218] +
push eax  +
call ds:DsUnBindW  +
call sub_10073C3  +
call sub_10074D5  +
cmp [ebp+var_214] ebx +
pop esi  +
pop ebx  +
jz loc_1006FA6  +
mov eax [ebp+var_220] +
add eax 0FFFFFFFEh +
cmp [ebp+var_214] eax +
jge loc_1006F9D  +
push 0DB0h  +
call sub_10108F6  +
push 1  +
call sub_1002992  +
jmp loc_1006FAB  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 44h +
ja loc_100716D  +
jmp ds:off_1007173[eax*4]  +
push offset off_1020D08  +
push 0  +
call sub_10122E4  +
jmp loc_100716F  +
push offset aDomain  +
call sub_1012264  +
jmp loc_100716F  +
push offset off_1020D8C  +
jmp loc_1006FDB  +
call sub_101217A  +
jmp loc_100716F  +
push offset unk_10223F0  +
jmp loc_1006FDB  +
call sub_1012169  +
jmp loc_100716F  +
push offset off_1020DF8  +
jmp loc_1006FDB  +
push offset off_10212F0  +
jmp loc_1006FDB  +
push offset aDomain  +
call sub_1012299  +
jmp loc_100716F  +
push offset off_101F348  +
jmp loc_1006FDB  +
push offset off_1020CE0  +
jmp loc_1006FDB  +
push offset off_1020E10  +
jmp loc_1006FDB  +
push offset off_101F378  +
jmp loc_1006FDB  +
push offset off_1021338  +
jmp loc_1006FDB  +
push offset off_10211D0  +
jmp loc_1006FDB  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012801  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_10127CC  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012836  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_101289F  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012CF1  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_10125BD  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012699  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_10126E4  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_10128F2  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_10127AD  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012B33  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012B55  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012C1D  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012C79  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012D56  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012DA4  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012A73  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012ABB  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012CD2  +
jmp loc_100716F  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
call sub_1012CD2  +
jmp loc_100716F  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+Buffer] ebx +
cmp [ebp+entriesread] ebx +
jnz loc_1007316  +
push ebx  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
call NetServerTransportEnum  +
cmp eax ebx +
jz loc_10072CC  +
cmp eax 4CFh +
jnz loc_10072C6  +
mov [ebp+entriesread] ebx +
jmp loc_10072CC  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] ebx +
jbe loc_1007394  +
mov esi [ebp+Buffer] +
mov edi ds:wcschr +
add esi 4 +
push 5Ch  +
push dword ptr [esi]  +
call edi  +
add eax 2 +
push 5Ch  +
push eax  +
mov [esi] eax +
call edi  +
push dword ptr [esi+0Ch]  +
add eax 2 +
push eax  +
push offset aSS  +
mov [esi] eax +
call sub_1010562  +
add esp 1Ch +
inc ebx  +
add esi 14h +
cmp ebx [ebp+entriesread] +
jnb loc_1007394  +
jmp loc_10072E1  +
cmp [ebp+entriesread] 1 +
jnz loc_100738A  +
push ebx  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
call NetWkstaTransportEnum  +
cmp eax ebx +
jz loc_1007348  +
cmp eax 4CFh +
jnz loc_1007342  +
mov [ebp+entriesread] ebx +
jmp loc_1007348  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] ebx +
jbe loc_1007394  +
mov esi [ebp+Buffer] +
mov edi ds:wcschr +
add esi 8 +
push 5Ch  +
push dword ptr [esi]  +
call edi  +
add eax 2 +
push 5Ch  +
push eax  +
mov [esi] eax +
call edi  +
push dword ptr [esi+4]  +
add eax 2 +
push eax  +
push offset aSS  +
mov [esi] eax +
call sub_1010562  +
add esp 1Ch +
inc ebx  +
add esi 14h +
cmp ebx [ebp+entriesread] +
jnb loc_1007394  +
jmp loc_1007359  +
push 85Ch  +
call sub_100295A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108A7  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov eax dword_1021AD4 +
test eax eax +
jz loc_10073D9  +
push eax  +
call SamCloseHandle  +
and dword_1021AD4 0 +
mov eax dword_1021AD8 +
test eax eax +
jz loc_10073EF  +
push eax  +
call SamCloseHandle  +
and dword_1021AD8 0 +
mov eax ObjectHandle +
test eax eax +
jz loc_1007405  +
push eax  +
call LsaClose  +
and ObjectHandle 0 +
mov eax pSid2 +
test eax eax +
jz loc_1014216  +
push eax  +
call sub_1001E31  +
and pSid2 0 +
jmp loc_1014216  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_1007454  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
dec [ebp+arg_4]  +
test eax eax +
jz loc_100744D  +
push eax  +
call sub_1001E31  +
and dword ptr [esi] 0 +
add esi 8 +
cmp [ebp+arg_4] 0 +
jnz loc_1007438  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
xor edi edi +
dec eax  +
jz loc_10074A6  +
dec eax  +
mov esi offset dword_1021ADC +
jz loc_1007497  +
dec eax  +
jz loc_100747E  +
mov eax 85Ch +
jmp loc_10074CA  +
push esi  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push dword_1021AD4  +
call SamOpenAlias  +
cmp eax 0C0000151h +
jnz loc_10074BC  +
push esi  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push dword_1021AD8  +
jmp loc_10074B7  +
push offset dword_1021ADC  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push dword_1021AD4  +
call SamOpenAlias  +
test eax eax +
jge loc_10074C8  +
push eax  +
call sub_1014393  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax dword_1021ADC +
test eax eax +
jz loc_10074E4  +
push eax  +
call SamCloseHandle  +
and dword_1021ADC 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
and dword ptr [ebx+4] 0 +
lea eax [ebp+var_4] +
push eax  +
push 3  +
push dword_1021ADC  +
call SamQueryInformationAlias  +
test eax eax +
jge loc_100751C  +
push eax  +
call sub_1014393  +
jmp loc_100756B  +
push esi  +
push edi  +
mov edi [ebp+var_4] +
movzx esi word ptr [edi] +
lea eax [ebp+arg_0] +
inc esi  +
push eax  +
inc esi  +
push esi  +
call sub_1001E19  +
test eax eax +
jnz loc_1007569  +
movzx eax word ptr [edi] +
shr eax 1 +
push eax  +
push dword ptr [edi+4]  +
shr esi 1 +
push esi  +
push [ebp+arg_0]  +
call wcsncpy_s  +
movzx eax word ptr [edi] +
mov edx [ebp+arg_0] +
shr eax 1 +
xor ecx ecx +
add esp 10h +
mov [edx+eax*2] cx +
push [ebp+var_4]  +
call SamFreeMemory  +
mov eax [ebp+arg_0] +
mov [ebx+4] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+pSourceSid]  +
mov edi ds:GetSidSubAuthorityCount +
call edi  +
test eax eax +
jz loc_10075E5  +
mov al [eax] +
inc al  +
movzx eax al +
push eax  +
call ds:GetSidLengthRequired  +
mov esi [ebp+arg_8] +
mov ebx eax +
push esi  +
push ebx  +
call sub_1001E19  +
test eax eax +
jnz loc_10075EB  +
push [ebp+pSourceSid]  +
push dword ptr [esi]  +
push ebx  +
call ds:CopySid  +
push dword ptr [esi]  +
test eax eax +
jnz loc_10075CB  +
call sub_1001E31  +
and dword ptr [esi] 0 +
mov eax 85Ch +
jmp loc_10075EB  +
call edi  +
inc byte ptr [eax]  +
movzx eax byte ptr [eax] +
dec eax  +
push eax  +
push dword ptr [esi]  +
call ds:GetSidSubAuthority  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
xor eax eax +
jmp loc_10075EB  +
call ds:GetLastError  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp [ebp+arg_8] 0 +
mov eax dword_1021AD4 +
jnz loc_100760E  +
mov eax dword_1021AD8 +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
push 1  +
push eax  +
call SamLookupIdsInDomain  +
test eax eax +
jge loc_1007641  +
push eax  +
call sub_1014393  +
cmp eax 8ACh +
jz loc_100763A  +
cmp eax 8ADh +
jnz locret_10076B8  +
mov eax 0F7Bh +
jmp locret_10076B8  +
mov eax [ebp+var_8] +
mov eax [eax] +
push esi  +
push edi  +
test eax eax +
jle loc_100769F  +
cmp eax 2 +
jle loc_1007659  +
add eax 0FFFFFFFCh +
cmp eax 1 +
ja loc_100769F  +
mov eax [ebp+var_4] +
movzx esi word ptr [eax] +
lea eax [ebp+arg_8] +
push eax  +
lea esi [esi+esi+2] +
push esi  +
call sub_1001E19  +
mov edi eax +
test edi edi +
jnz loc_10076A4  +
push esi  +
push eax  +
push [ebp+arg_8]  +
call memset  +
mov eax esi +
shr eax 1 +
dec eax  +
push eax  +
mov eax [ebp+var_4] +
push dword ptr [eax+4]  +
push esi  +
push [ebp+arg_8]  +
call wcsncpy_s  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
add esp 1Ch +
mov [eax] ecx +
jmp loc_10076A4  +
mov edi 0F7Bh +
push [ebp+var_4]  +
call SamFreeMemory  +
push [ebp+var_8]  +
call SamFreeMemory  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+ReferencedDomains] +
push eax  +
lea eax [ebp+Sids] +
push eax  +
push 1  +
push ObjectHandle  +
call LsaLookupSids  +
test eax eax +
jge loc_100771A  +
push eax  +
call sub_1014393  +
cmp eax 6FCh +
jb loc_1007715  +
cmp eax 6FDh +
jbe loc_1007710  +
cmp eax 8ABh +
jbe loc_1007715  +
cmp eax 8ADh +
jbe loc_1007710  +
cmp eax 2019h +
jnz loc_1007715  +
mov eax 0F7Bh +
pop esi  +
leave   +
retn 8  +
mov eax [ebp+Buffer] +
mov ecx [eax] +
test ecx ecx +
jle loc_1007710  +
cmp ecx 2 +
jle loc_1007730  +
add ecx 0FFFFFFFCh +
cmp ecx 1 +
ja loc_1007710  +
mov esi [eax+0Ch] +
test esi esi +
jl loc_1007710  +
imul esi esi +
push ebx  +
movzx ebx word ptr [eax+4] +
mov eax [ebp+ReferencedDomains] +
mov eax [eax+4] +
push edi  +
movzx edi word ptr [eax+esi] +
lea eax [ebp+var_4] +
mov [ebp+var_14] edi +
push eax  +
lea edi [edi+ebx+4] +
push edi  +
call sub_1001E19  +
mov [ebp+var_C] eax +
test eax eax +
jnz loc_1007802  +
push edi  +
push eax  +
push [ebp+var_4]  +
call memset  +
mov eax [ebp+ReferencedDomains] +
mov eax [eax+4] +
shr edi 1 +
add eax esi +
add esp 0Ch +
cmp word ptr [eax] 0 +
mov [ebp+var_C] edi +
jz loc_10077DF  +
push pSid2  +
mov edi ds:EqualSid +
push dword ptr [eax+8]  +
call edi  +
test eax eax +
jnz loc_10077DF  +
mov eax [ebp+ReferencedDomains] +
push dword_10190AC  +
mov eax [eax+4] +
push dword ptr [eax+esi+8]  +
call edi  +
test eax eax +
jnz loc_10077DF  +
mov eax [ebp+var_14] +
shr eax 1 +
push eax  +
mov eax [ebp+ReferencedDomains] +
mov eax [eax+4] +
push dword ptr [eax+esi+4]  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call wcsncpy_s  +
push offset asc_1003740  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call wcscat_s  +
add esp 1Ch +
mov eax [ebp+Buffer] +
shr ebx 1 +
push ebx  +
push dword ptr [eax+8]  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call wcsncat_s  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
add esp 10h +
and [ebp+var_C] 0 +
mov [eax] ecx +
push [ebp+Buffer]  +
call LsaFreeMemory  +
push [ebp+ReferencedDomains]  +
call LsaFreeMemory  +
mov eax [ebp+var_C] +
pop edi  +
pop ebx  +
jmp loc_1007715  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax edx +
lea ecx [eax+2] +
push esi  +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_100782F  +
sub eax ecx +
mov ecx [ebp+arg_4] +
sar eax 1 +
add eax eax +
mov [ecx] ax +
add eax 2 +
mov [ecx+2] ax +
mov [ecx+4] edx +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_100787E  +
push esi  +
mov esi [ebp+arg_0] +
push dword ptr [esi]  +
dec [ebp+arg_4]  +
call sub_1001E31  +
add esi 4 +
cmp [ebp+arg_4] 0 +
jnz loc_100786A  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
push 1  +
push [ebp+arg_4]  +
call SamLookupNamesInDomain  +
test eax eax +
jge loc_10078A9  +
xor eax eax +
jmp loc_10078CF  +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
cmp [eax] esi +
mov eax [ebp+arg_4] +
jz loc_10078BE  +
mov ecx [eax] +
cmp ecx [ebp+arg_8] +
jnz loc_10078BE  +
inc esi  +
push eax  +
call SamFreeMemory  +
push [ebp+arg_0]  +
call SamFreeMemory  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call ds:RtlGetNtProductType  +
xor eax eax +
cmp [ebp+var_4] 2 +
setnz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call ds:RtlGetNtProductType  +
xor eax eax +
cmp [ebp+var_4] 3 +
setz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push 2  +
pop eax  +
mov [ebp+SystemName.Length] ax +
lea eax [ebp+SystemName] +
push eax  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_8] esi +
mov [ebp+Buffer] esi +
mov [ebp+SystemName.Buffer] offset username +
call sub_1007821  +
cmp eax esi +
jnz loc_1007AE6  +
mov eax [ebp+arg_4] +
dec eax  +
jz loc_1007965  +
dec eax  +
jz loc_100795C  +
push 57h  +
pop eax  +
jmp loc_1007AE6  +
mov [ebp+arg_0] 203C5h +
jmp loc_100796C  +
mov [ebp+arg_0] 20385h +
push ebx  +
push edi  +
push 18h  +
pop edi  +
push offset ObjectHandle  +
push 20801h  +
lea eax [ebp+ObjectAttributes] +
push eax  +
lea eax [ebp+SystemName] +
push eax  +
mov [ebp+ObjectAttributes.Length] edi +
mov [ebp+ObjectAttributes.RootDirectory] esi +
mov [ebp+ObjectAttributes.Attributes] esi +
mov [ebp+ObjectAttributes.ObjectName] esi +
mov [ebp+ObjectAttributes.SecurityDescriptor] esi +
mov [ebp+ObjectAttributes.SecurityQualityOfService] esi +
call LsaOpenPolicy  +
cmp eax esi +
jl loc_1007A65  +
lea eax [ebp+Buffer] +
push eax  +
push 5  +
push ObjectHandle  +
call LsaQueryInformationPolicy  +
cmp eax esi +
jl loc_1007A65  +
lea eax [ebp+ObjectAttributes] +
push eax  +
push 20031h  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+SystemName] +
push eax  +
mov [ebp+ObjectAttributes.Length] edi +
mov [ebp+ObjectAttributes.RootDirectory] esi +
mov [ebp+ObjectAttributes.Attributes] esi +
mov [ebp+ObjectAttributes.ObjectName] esi +
mov [ebp+ObjectAttributes.SecurityDescriptor] esi +
mov [ebp+ObjectAttributes.SecurityQualityOfService] esi +
call SamConnect  +
cmp eax esi +
jl loc_1007A65  +
mov eax [ebp+Buffer] +
push dword ptr [eax+8]  +
call ds:GetLengthSid  +
mov edi eax +
push offset pSid2  +
push edi  +
call sub_1001E19  +
mov ebx eax +
cmp ebx esi +
jnz loc_1007A6D  +
mov eax [ebp+Buffer] +
push dword ptr [eax+8]  +
push pSid2  +
push edi  +
call ds:CopySid  +
test eax eax +
jnz loc_1007A25  +
call ds:GetLastError  +
jmp loc_1007A6B  +
mov eax [ebp+Buffer] +
push offset dword_1021AD8  +
push dword ptr [eax+8]  +
push [ebp+arg_0]  +
push [ebp+var_8]  +
call SamOpenDomain  +
cmp eax esi +
jl loc_1007A65  +
push esi  +
call sub_101431E  +
cmp eax esi +
jl loc_1007A65  +
push offset dword_1021AD4  +
push dword_10190AC  +
push 20385h  +
push [ebp+var_8]  +
call SamOpenDomain  +
cmp eax esi +
jge loc_1007AC3  +
push eax  +
call sub_1014393  +
mov ebx eax +
mov eax dword_1021AD4 +
cmp eax esi +
jz loc_1007A82  +
push eax  +
call SamCloseHandle  +
mov dword_1021AD4 esi +
mov eax dword_1021AD8 +
cmp eax esi +
jz loc_1007A97  +
push eax  +
call SamCloseHandle  +
mov dword_1021AD8 esi +
mov eax ObjectHandle +
cmp eax esi +
jz loc_1007AAC  +
push eax  +
call LsaClose  +
mov ObjectHandle esi +
mov eax pSid2 +
cmp eax esi +
jz loc_1007AC5  +
push eax  +
call sub_1001E31  +
mov pSid2 esi +
jmp loc_1007AC5  +
xor ebx ebx +
cmp [ebp+Buffer] esi +
jz loc_1007AD5  +
push [ebp+Buffer]  +
call LsaFreeMemory  +
mov [ebp+Buffer] esi +
cmp [ebp+var_8] esi +
jz loc_1007AE2  +
push [ebp+var_8]  +
call SamCloseHandle  +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov edi [eax] +
mov eax [ebp+NewBuffer] +
mov eax [eax] +
xor ebx ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_8] edi +
lea esi [eax+edi*8] +
lea eax [ebp+var_14] +
push eax  +
push 3E80h  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+arg_0]  +
call SamEnumerateAliasesInDomain  +
cmp eax ebx +
mov [ebp+var_1C] eax +
jl loc_1007BED  +
mov [ebp+var_C] ebx +
cmp [ebp+var_14] ebx +
jbe loc_1007BC7  +
mov ebx [ebp+var_4] +
add ebx 4 +
mov ecx [ebp+arg_C] +
mov eax [ecx] +
cmp edi eax +
jb loc_1007B73  +
mov esi [ebp+NewBuffer] +
add eax eax +
mov [ecx] eax +
push esi  +
shl eax 3 +
push eax  +
call sub_101252A  +
mov [ebp+var_10] eax +
test eax eax +
jnz loc_1007BFE  +
mov eax [esi] +
lea esi [eax+edi*8] +
movzx edi word ptr [ebx] +
shr edi 1 +
inc edi  +
push esi  +
lea eax [edi+edi] +
push eax  +
call sub_1001E19  +
mov [ebp+var_10] eax +
test eax eax +
jnz loc_1007BFB  +
movzx eax word ptr [ebx] +
shr eax 1 +
push eax  +
push dword ptr [ebx+4]  +
push edi  +
push dword ptr [esi]  +
call wcsncpy_s  +
movzx eax word ptr [ebx] +
mov ecx [esi] +
shr eax 1 +
xor edx edx +
mov [ecx+eax*2] dx +
and [esi+4] edx +
add esp 10h +
inc [ebp+var_8]  +
mov edi [ebp+var_8] +
add esi 8 +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
add ebx 0Ch +
cmp eax [ebp+var_14] +
jb loc_1007B49  +
xor ebx ebx +
push [ebp+var_4]  +
call SamFreeMemory  +
cmp [ebp+var_1C] 105h +
mov [ebp+var_4] ebx +
jz loc_1007B13  +
mov eax [ebp+arg_8] +
mov [eax] edi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
push eax  +
call sub_1014393  +
mov [ebp+var_10] eax +
mov [ebp+var_4] ebx +
jmp loc_1007C0C  +
mov edi [ebp+var_8] +
cmp [ebp+var_4] 0 +
jz loc_1007C0C  +
push [ebp+var_4]  +
call SamFreeMemory  +
mov eax [ebp+NewBuffer] +
push edi  +
push dword ptr [eax]  +
call sub_1007429  +
mov eax [ebp+var_10] +
jmp loc_1007BE6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push dword_1021ADC  +
xor esi esi +
mov [ebp+var_4] esi +
mov [ebp+var_10] esi +
call SamGetMembersInAlias  +
cmp eax esi +
jge loc_1007C54  +
push eax  +
call sub_1014393  +
jmp loc_1007CDF  +
push edi  +
lea eax [ebp+var_14] +
push eax  +
mov eax [ebp+var_4] +
shl eax 2 +
push eax  +
call sub_1001E19  +
mov edi eax +
cmp edi esi +
jz loc_1007C77  +
push [ebp+var_8]  +
call SamFreeMemory  +
mov eax edi +
jmp loc_1007CDE  +
mov eax [ebp+var_4] +
push ebx  +
shl eax 2 +
push eax  +
push esi  +
push [ebp+var_14]  +
call memset  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_8] +
add esp 0Ch +
mov [ebp+var_C] ebx +
cmp [ebp+var_4] esi +
jbe loc_1007CC3  +
push [ebp+var_C]  +
push dword ptr [edi]  +
call sub_10076C1  +
mov [ebp+var_18] eax +
test eax eax +
jz loc_1007CB6  +
cmp eax 0F7Bh +
jnz loc_1007CED  +
inc [ebp+var_10]  +
jmp loc_1007CBA  +
add [ebp+var_C] 4 +
inc esi  +
add edi 4 +
cmp esi [ebp+var_4] +
jb loc_1007C99  +
push [ebp+var_8]  +
call SamFreeMemory  +
mov eax [ebp+var_4] +
sub eax [ebp+var_10] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov eax [ebp+arg_0] +
mov [eax] ebx +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
dec esi  +
push dword ptr [ebx+esi*4]  +
call sub_1001E31  +
test esi esi +
jnz loc_1007CE4  +
push [ebp+var_8]  +
call SamFreeMemory  +
push ebx  +
call sub_1001E31  +
mov eax [ebp+var_18] +
jmp loc_1007CDD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+4] 0 +
jnz loc_1007D1C  +
xor eax eax +
jmp loc_1007D70  +
lea eax [ebp+arg_0] +
push eax  +
push 8  +
call sub_1001E19  +
test eax eax +
jnz loc_1007D70  +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call sub_1007821  +
mov esi eax +
test esi esi +
jz loc_1007D46  +
push [ebp+arg_0]  +
call sub_1001E31  +
jmp loc_1007D6E  +
push edi  +
push [ebp+arg_0]  +
push 3  +
push dword_1021ADC  +
call SamSetInformationAlias  +
push [ebp+arg_0]  +
mov edi eax +
call sub_1001E31  +
test edi edi +
jge loc_1007D6D  +
push edi  +
call sub_1014393  +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+Buffer] +
push edi  +
mov edi [ebp+pDestinationSid] +
lea eax [ebp+var_C] +
push eax  +
push [ebp+nDestinationSidLength]  +
xor ebx ebx +
mov [esi] ebx +
mov dword ptr [edi] 8 +
call sub_1007821  +
cmp eax ebx +
jnz loc_1007E3E  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push 1  +
push ebx  +
push ObjectHandle  +
call LsaLookupNames2  +
cmp eax ebx +
jge loc_1007DD6  +
cmp eax 0C0000073h +
jz loc_1007DDE  +
push eax  +
call sub_1014393  +
jmp loc_1007E3E  +
mov eax [ebp+Buffer] +
cmp [eax+8] ebx +
jge loc_1007DE5  +
mov eax 0F7Bh +
jmp loc_1007E3E  +
push dword ptr [eax+4]  +
call ds:RtlLengthSid  +
lea ecx [ebp+pDestinationSid] +
push ecx  +
push eax  +
mov [ebp+nDestinationSidLength] eax +
call sub_1001E19  +
mov ebx eax +
test ebx ebx +
jnz loc_1007E2C  +
mov eax [ebp+Buffer] +
push dword ptr [eax+4]  +
push [ebp+pDestinationSid]  +
push [ebp+nDestinationSidLength]  +
call ds:CopySid  +
test eax eax +
jnz loc_1007E1E  +
mov ebx 85Ch +
jmp loc_1007E2C  +
mov eax [ebp+pDestinationSid] +
mov [esi] eax +
mov eax [ebp+Buffer] +
mov eax [eax] +
mov [edi] eax +
xor ebx ebx +
push [ebp+Buffer]  +
call LsaFreeMemory  +
push [ebp+var_4]  +
call LsaFreeMemory  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
xor esi esi +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_1C] esi +
mov [ebp+ReferencedDomains] esi +
mov [ebp+var_14] esi +
mov [ebp+Buffer] esi +
mov [ebp+NewBuffer] esi +
mov [ebp+var_18] 104h +
mov [ebp+var_4] esi +
mov [ebp+var_C] esi +
call sub_1007821  +
mov ebx eax +
cmp ebx esi +
jnz loc_10080CA  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push 1  +
push dword_1021AD8  +
call SamLookupNamesInDomain  +
test eax eax +
jl loc_1007EC1  +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 4 +
jz loc_1007FFE  +
push [ebp+var_C]  +
call SamFreeMemory  +
push [ebp+var_4]  +
call SamFreeMemory  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push 1  +
push dword_1021AD4  +
call SamLookupNamesInDomain  +
test eax eax +
jl loc_1007EFA  +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 4 +
jz loc_1007FFE  +
push [ebp+var_C]  +
call SamFreeMemory  +
push [ebp+var_4]  +
call SamFreeMemory  +
lea eax [ebp+NewBuffer] +
push eax  +
mov eax [ebp+var_18] +
lea eax [eax+eax+2] +
push eax  +
call sub_1001E19  +
mov ebx eax +
cmp ebx esi +
jnz loc_1008089  +
push edi  +
mov edi ds:GetComputerNameExW +
lea eax [ebp+var_18] +
push eax  +
push [ebp+NewBuffer]  +
push 2  +
call edi  +
test eax eax +
jnz loc_1007F73  +
mov esi ds:GetLastError +
call esi  +
mov ebx eax +
cmp ebx 0EAh +
jnz loc_1007F69  +
lea eax [ebp+NewBuffer] +
push eax  +
mov eax [ebp+var_18] +
add eax eax +
push eax  +
call sub_101252A  +
mov ebx eax +
test ebx ebx +
jnz loc_1008086  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+NewBuffer]  +
push 2  +
call edi  +
test eax eax +
jnz loc_1007F71  +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_1008086  +
xor esi esi +
lea eax [ebp+Names] +
push eax  +
push [ebp+NewBuffer]  +
call sub_1007821  +
mov ebx eax +
cmp ebx esi +
jnz loc_1008088  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+ReferencedDomains] +
push eax  +
lea eax [ebp+Names] +
push eax  +
push 1  +
push ObjectHandle  +
call LsaLookupNames  +
test eax eax +
jl loc_1008088  +
mov eax [ebp+Buffer] +
cmp eax esi +
jz loc_100807F  +
cmp dword ptr [eax] 3 +
jnz loc_100807F  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push 1  +
push ObjectHandle  +
call LsaLookupNames  +
cmp eax esi +
jge loc_100801D  +
cmp eax 0C0000073h +
jz loc_100807F  +
cmp eax 0C000018Ch +
jz loc_100807F  +
push eax  +
call sub_1014393  +
mov ebx eax +
jmp loc_1008088  +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov edx [ebp+arg_4] +
push eax  +
mov [edx] ecx +
call SamFreeMemory  +
push [ebp+var_4]  +
call SamFreeMemory  +
xor eax eax +
jmp loc_10080CC  +
mov ecx [ebp+var_14] +
cmp ecx esi +
jz loc_100807F  +
mov eax [ecx] +
cmp eax 3 +
jz loc_100807F  +
cmp eax 7 +
jz loc_100807F  +
cmp eax 8 +
jz loc_100807F  +
mov edi [ebp+var_1C] +
cmp edi esi +
jz loc_100807F  +
mov edx [ebp+ReferencedDomains] +
cmp edx esi +
jz loc_100807F  +
mov ecx [ecx+8] +
cmp ecx [edi] +
jnb loc_100807F  +
mov eax [ebp+Buffer] +
mov eax [eax+8] +
cmp eax [edx] +
jnb loc_100807F  +
mov edx [edx+4] +
imul eax eax +
imul ecx ecx +
push dword ptr [eax+edx+8]  +
mov eax [edi+4] +
push dword ptr [ecx+eax+8]  +
call ds:EqualSid  +
test eax eax +
jz loc_100807F  +
mov eax [ebp+var_14] +
mov eax [eax+4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_1008088  +
mov ebx 560h +
jmp loc_1008088  +
xor esi esi +
pop edi  +
cmp [ebp+Buffer] esi +
jz loc_1008096  +
push [ebp+Buffer]  +
call LsaFreeMemory  +
cmp [ebp+var_14] esi +
jz loc_10080A3  +
push [ebp+var_14]  +
call LsaFreeMemory  +
cmp [ebp+var_1C] esi +
jz loc_10080B0  +
push [ebp+var_1C]  +
call LsaFreeMemory  +
cmp [ebp+ReferencedDomains] esi +
jz loc_10080BD  +
push [ebp+ReferencedDomains]  +
call LsaFreeMemory  +
cmp [ebp+NewBuffer] esi +
jz loc_10080CA  +
push [ebp+NewBuffer]  +
call sub_1001E31  +
mov eax ebx +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+arg_4] +
push esi  +
xor esi esi +
mov [eax] esi +
mov eax [ebp+arg_8] +
mov [eax] esi +
lea eax [ebp+pDestinationSid] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+pDestinationSid]  +
mov [ebp+Buffer] esi +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
mov [ebp+var_4] esi +
mov [ebp+var_8] esi +
call sub_1007D7A  +
cmp eax esi +
jnz loc_10082B0  +
push edi  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push dword_1021AD8  +
call SamGetAliasMembership  +
cmp eax esi +
jge loc_100813E  +
push eax  +
call sub_1014393  +
mov edi eax +
jmp loc_1008286  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push dword_1021AD4  +
call SamGetAliasMembership  +
cmp eax esi +
jl loc_1008131  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
add eax ecx +
cmp eax esi +
jnz loc_100816E  +
xor edi edi +
jmp loc_1008286  +
lea ecx [ebp+var_1C] +
push ecx  +
shl eax 2 +
push eax  +
call sub_1001E19  +
mov edi eax +
cmp edi esi +
jnz loc_1008286  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
add ecx eax +
push ebx  +
shl ecx 2 +
push ecx  +
push esi  +
push [ebp+var_1C]  +
call memset  +
mov eax [ebp+var_1C] +
mov ebx [ebp+var_18] +
add esp 0Ch +
mov [ebp+var_C] eax +
mov [ebp+pDestinationSid] eax +
cmp [ebp+var_4] esi +
jbe loc_10081FA  +
lea eax [ebp+Sids] +
push eax  +
push dword ptr [ebx]  +
push pSid2  +
call sub_1007575  +
mov edi eax +
test edi edi +
jnz loc_1008283  +
push [ebp+pDestinationSid]  +
push [ebp+Sids]  +
call sub_10076C1  +
mov edi eax +
test edi edi +
jz loc_10081E5  +
cmp edi 0F7Bh +
jz loc_10081E9  +
jmp loc_100824A  +
add [ebp+pDestinationSid] 4 +
push [ebp+Sids]  +
call sub_1001E31  +
inc esi  +
add ebx 4 +
cmp esi [ebp+var_4] +
jb loc_10081AF  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_4] +
mov ebx [ebp+var_14] +
add eax ecx +
cmp esi eax +
jnb loc_1008274  +
lea eax [ebp+Sids] +
push eax  +
push dword ptr [ebx]  +
push dword_10190AC  +
call sub_1007575  +
mov edi eax +
test edi edi +
jnz loc_1008283  +
push [ebp+pDestinationSid]  +
push [ebp+Sids]  +
call sub_10076C1  +
mov edi eax +
test edi edi +
jz loc_1008258  +
cmp edi 0F7Bh +
jz loc_100825C  +
jmp loc_10082C1  +
mov eax [ebp+var_C] +
dec esi  +
push dword ptr [eax+esi*4]  +
call sub_1001E31  +
test esi esi +
jnz loc_100823E  +
push [ebp+var_C]  +
call sub_1001E31  +
jmp loc_1008283  +
add [ebp+pDestinationSid] 4 +
push [ebp+Sids]  +
call sub_1001E31  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
inc esi  +
add ecx eax +
add ebx 4 +
cmp esi ecx +
jb loc_1008209  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_C] +
mov [eax] esi +
mov eax [ebp+arg_4] +
mov [eax] ecx +
xor edi edi +
xor esi esi +
pop ebx  +
cmp [ebp+var_14] esi +
jz loc_1008293  +
push [ebp+var_14]  +
call SamFreeMemory  +
cmp [ebp+var_18] esi +
jz loc_10082A0  +
push [ebp+var_18]  +
call SamFreeMemory  +
cmp [ebp+Buffer] esi +
jz loc_10082AD  +
push [ebp+Buffer]  +
call sub_1001E31  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
mov eax [ebp+var_C] +
dec esi  +
push dword ptr [eax+esi*4]  +
call sub_1001E31  +
test esi esi +
jz loc_100824E  +
jmp loc_10082B5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push dword ptr [esi]  +
call sub_1007821  +
test eax eax +
jnz loc_1008331  +
push 4  +
push dword_1021AD4  +
lea eax [ebp+var_8] +
push eax  +
call sub_1007887  +
test eax eax +
jz loc_1008302  +
mov eax 8AFh +
jmp loc_1008331  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_1021ADC  +
push 20013h  +
lea eax [ebp+var_8] +
push eax  +
push dword_1021AD8  +
call SamCreateAliasInDomain  +
test eax eax +
jge loc_100832B  +
push eax  +
call sub_1014393  +
jmp loc_1008331  +
push esi  +
call sub_1007D09  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
mov [ebx] edi +
mov [eax] edi +
lea eax [ebp+NewBuffer] +
push eax  +
mov esi 0FA0h +
push esi  +
mov [ebp+NewBuffer] edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] 1F4h +
call sub_1001E19  +
cmp eax edi +
jnz loc_10083D4  +
push esi  +
push edi  +
push [ebp+NewBuffer]  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+NewBuffer] +
push eax  +
push dword_1021AD4  +
call sub_1007AF0  +
mov esi eax +
cmp esi edi +
jz loc_10083A8  +
push [ebp+NewBuffer]  +
call sub_1001E31  +
mov eax esi +
jmp loc_10083D4  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+NewBuffer] +
push eax  +
push dword_1021AD8  +
call sub_1007AF0  +
mov esi eax +
cmp esi edi +
jnz loc_100839C  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_0] +
mov [ebx] eax +
mov eax [ebp+NewBuffer] +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
call sub_1007E4A  +
test eax eax +
jnz loc_1008403  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100745D  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
lea eax [ebp+pDestinationSid] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+Buffer]  +
mov [ebp+pDestinationSid] 8 +
call sub_1007D7A  +
mov edi eax +
test edi edi +
jnz loc_1008465  +
cmp [ebp+pDestinationSid] 3 +
jnz loc_100843D  +
mov eax 525h +
jmp loc_1008465  +
push esi  +
push [ebp+Buffer]  +
push dword_1021ADC  +
call SamAddMemberToAlias  +
push [ebp+Buffer]  +
mov esi eax +
call sub_1001E31  +
test esi esi +
jge loc_1008462  +
push esi  +
call sub_1014393  +
mov edi eax +
mov eax edi +
pop esi  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+nDestinationSidLength] +
push esi  +
lea eax [ebp+pDestinationSid] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
call sub_1007D7A  +
mov esi eax +
test esi esi +
jnz loc_1008590  +
push edi  +
push [ebp+Buffer]  +
push dword_1021ADC  +
call SamRemoveMemberFromAlias  +
push [ebp+Buffer]  +
mov edi eax +
call sub_1001E31  +
cmp edi 0C0000152h +
jnz loc_1008581  +
push offset asc_1003740  +
push ebx  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008585  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10084D4  +
sub eax edx +
sar eax 1 +
add eax 11h +
lea ecx [ebp+nDestinationSidLength] +
mov [ebp+nSize] eax +
push ecx  +
add eax eax +
push eax  +
call sub_1001E19  +
test eax eax +
jz loc_1008500  +
push 8  +
pop eax  +
jmp loc_100858F  +
mov esi [ebp+nSize] +
lea eax [ebp+nSize] +
push eax  +
push [ebp+nDestinationSidLength]  +
call ds:GetComputerNameW  +
test eax eax +
jnz loc_1008526  +
call ds:GetLastError  +
push [ebp+nDestinationSidLength]  +
mov esi eax +
call sub_1001E31  +
jmp loc_100858D  +
mov ecx [ebp+nSize] +
mov edx [ebp+nDestinationSidLength] +
push 5Ch  +
pop eax  +
mov [edx+ecx*2] ax +
mov eax [ebp+nSize] +
mov ecx [ebp+nDestinationSidLength] +
sub esi eax +
push ebx  +
dec esi  +
lea eax [ecx+eax*2+2] +
push esi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
lea eax [ebp+pDestinationSid] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+nDestinationSidLength]  +
call sub_1007D7A  +
push [ebp+nDestinationSidLength]  +
mov esi eax +
call sub_1001E31  +
test esi esi +
jnz loc_100858D  +
push [ebp+Buffer]  +
push dword_1021ADC  +
call SamRemoveMemberFromAlias  +
push [ebp+Buffer]  +
mov edi eax +
call sub_1001E31  +
test edi edi +
jge loc_100858D  +
push edi  +
call sub_1014393  +
mov esi eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 3  +
push 10000h  +
push [ebp+arg_0]  +
call sub_10083E0  +
mov esi eax +
test esi esi +
jnz loc_10085D6  +
push dword_1021ADC  +
call SamDeleteAlias  +
test eax eax +
jge loc_10085CD  +
push eax  +
call sub_1014393  +
mov esi eax +
and dword_1021ADC 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov eax [ebp+arg_4] +
mov eax [eax] +
test ecx ecx +
jnz loc_10085F9  +
neg eax  +
sbb eax eax +
pop ebp  +
retn   +
test eax eax +
jnz loc_1008600  +
inc eax  +
pop ebp  +
retn   +
push eax  +
push ecx  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+18h] +
mov eax [ebp+arg_4] +
mov eax [eax+18h] +
test ecx ecx +
jnz loc_100862C  +
neg eax  +
sbb eax eax +
pop ebp  +
retn   +
test eax eax +
jnz loc_1008633  +
inc eax  +
pop ebp  +
retn   +
push eax  +
push ecx  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 29Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
push 10E1h  +
push 3Ch  +
lea eax [ebp+var_7C] +
xor edi edi +
push eax  +
mov [ebp+var_294] edi +
mov [ebp+var_298] edi +
call sub_1012E19  +
push edi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
xor esi esi +
inc esi  +
push esi  +
push edi  +
push edi  +
push edi  +
call NetSessionEnum  +
cmp eax 0EAh +
jnz loc_10086AC  +
mov [ebp+var_298] esi +
jmp loc_10086B6  +
cmp eax edi +
jz loc_10086B6  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] edi +
jnz loc_10086D1  +
cmp [ebp+arg_0] edi +
jz loc_100885A  +
call sub_10108DE  +
jmp loc_100885A  +
push ebx  +
push 0E4Ch  +
call sub_10108F6  +
mov esi [ebp+Buffer] +
xor ebx ebx +
cmp [ebp+entriesread] edi +
jbe loc_1008727  +
cmp [esi+8] edi +
jbe loc_10086F7  +
inc [ebp+var_294]  +
mov eax [esi] +
cmp eax edi +
jnz loc_1008700  +
lea eax [ebp+var_7C] +
push edi  +
push eax  +
push 30h  +
call sub_10108BB  +
push eax  +
push offset aFws_0  +
call sub_1010562  +
pop ecx  +
pop ecx  +
call sub_10108A7  +
inc ebx  +
add esi 18h +
cmp ebx [ebp+entriesread] +
jb loc_10086EC  +
push 1  +
push 14A4h  +
call sub_1010970  +
test eax eax +
jnz loc_100873E  +
push 2  +
call sub_1002992  +
cmp [ebp+var_294] edi +
jz loc_10087AB  +
push 0E4Dh  +
call sub_10108F6  +
mov esi [ebp+Buffer] +
xor ebx ebx +
cmp [ebp+entriesread] edi +
jbe loc_1008795  +
cmp [esi+8] edi +
jbe loc_1008789  +
mov eax [esi] +
cmp eax edi +
jnz loc_100876E  +
lea eax [ebp+var_7C] +
push edi  +
push eax  +
push 30h  +
call sub_10108BB  +
push eax  +
push offset aFws_0  +
call sub_1010562  +
pop ecx  +
pop ecx  +
call sub_10108A7  +
inc ebx  +
add esi 18h +
cmp ebx [ebp+entriesread] +
jb loc_1008760  +
push edi  +
push 14A4h  +
call sub_1010970  +
test eax eax +
jnz loc_10087AB  +
push 2  +
call sub_1002992  +
cmp [ebp+arg_4] edi +
jnz loc_10087C0  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
jmp loc_1008859  +
push offset asc_1003854  +
lea eax [ebp+UncClientName] +
push 105h  +
push eax  +
call wcscpy_s  +
mov esi [ebp+Buffer] +
add esp 0Ch +
xor ebx ebx +
cmp [ebp+entriesread] edi +
jbe loc_100882F  +
mov eax [esi] +
cmp eax edi +
jz loc_1008823  +
push eax  +
lea eax [ebp+var_284] +
push 103h  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push edi  +
lea eax [ebp+UncClientName] +
push eax  +
push edi  +
call NetSessionDel  +
cmp eax edi +
jz loc_1008823  +
cmp eax 908h +
jz loc_1008823  +
push eax  +
call sub_100295A  +
inc ebx  +
add esi 18h +
cmp ebx [ebp+entriesread] +
jb loc_10087E9  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
cmp [ebp+arg_0] edi +
jz loc_1008859  +
cmp word ptr [ebp+var_298] di +
jz loc_1008854  +
push 0DB9h  +
call sub_10108F6  +
jmp loc_1008859  +
call sub_10108DE  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push offset username  +
push [ebp+UncClientName]  +
xor esi esi +
push esi  +
call NetSessionGetInfo  +
cmp eax esi +
jz loc_1008896  +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
cmp [eax+8] esi +
jz loc_10088C0  +
push dword ptr [eax]  +
push 0E5Bh  +
call sub_1010933  +
push esi  +
push 14A4h  +
call sub_1010970  +
test eax eax +
jnz loc_10088C0  +
push 2  +
call sub_1002992  +
push esi  +
push [ebp+UncClientName]  +
push esi  +
call NetSessionDel  +
cmp eax esi +
pop esi  +
jz loc_10088D5  +
push eax  +
call sub_100295A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 158h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 10E1h  +
push 3Ch  +
lea eax [ebp+var_C0] +
xor esi esi +
push eax  +
mov [ebp+var_150] esi +
call sub_1012E19  +
cmp edi esi +
jnz loc_1008BB1  +
push esi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+bufptr] +
push eax  +
push 2  +
push esi  +
push esi  +
push esi  +
call NetSessionEnum  +
cmp eax 0EAh +
jnz loc_100895E  +
mov [ebp+var_150] 1 +
jmp loc_1008968  +
cmp eax esi +
jz loc_1008968  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] esi +
jnz loc_1008975  +
call sub_1010959  +
push offset sub_10085E0  +
push 1Ch  +
push [ebp+entriesread]  +
push [ebp+bufptr]  +
call ds:qsort  +
add esp 10h +
call sub_10108A7  +
cmp [ebp+arg_4] esi +
jnz loc_10089AA  +
push 128Eh  +
call sub_10108F6  +
call sub_1010842  +
lea eax [ebp+var_140] +
push eax  +
push offset unk_10203D0  +
push 0Ch  +
call sub_1010ADF  +
add [ebp+var_140] 5 +
mov eax [ebp+bufptr] +
mov [ebp+var_154] esi +
mov [ebp+Buffer] eax +
cmp [ebp+entriesread] esi +
jbe loc_1008E51  +
cmp [eax] esi +
jz loc_1008B85  +
push 21h  +
lea ecx [ebp+var_48] +
push ecx  +
add eax 10h +
push eax  +
call sub_100BF8B  +
mov eax [ebp+Buffer] +
cmp [ebp+arg_4] esi +
jnz loc_1008A89  +
lea ebx [ebp+var_C0] +
cmp [eax+18h] esi +
jz loc_1008A16  +
mov ebx [eax+18h] +
lea edi [ebp+var_C0] +
cmp [eax+4] esi +
jz loc_1008A24  +
mov edi [eax+4] +
push esi  +
lea eax [ebp+var_48] +
push eax  +
push 0FFFFFFF4h  +
call sub_10108BB  +
push eax  +
mov eax [ebp+Buffer] +
push dword ptr [eax+8]  +
lea eax [ebp+var_E4] +
push 12h  +
push eax  +
push ebx  +
push 0FFFFFFEFh  +
call sub_10105A4  +
push eax  +
push 16h  +
lea eax [ebp+var_110] +
push eax  +
push edi  +
push 0FFFFFFEBh  +
call sub_10105A4  +
push eax  +
push 16h  +
lea eax [ebp+var_13C] +
push eax  +
mov eax [ebp+Buffer] +
push dword ptr [eax]  +
push 0FFFFFFEBh  +
call sub_10105A4  +
push eax  +
push offset aFwsFwsFws6uWs  +
call sub_1010562  +
add esp 18h +
jmp loc_1008B85  +
push dword ptr [eax+4]  +
push esi  +
push dword_10203FC  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax]  +
push esi  +
push dword_10203D4  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
test byte ptr [eax+14h] 1 +
mov eax dword_1020424 +
jnz loc_1008AFA  +
mov eax dword_102042C +
push eax  +
push esi  +
push dword_10203E4  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+18h]  +
push esi  +
push dword_10203DC  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
lea eax [ebp+var_48] +
push eax  +
push esi  +
push dword_10203F4  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
inc [ebp+var_154]  +
mov eax [ebp+Buffer] +
mov ecx [ebp+var_154] +
add eax 1Ch +
mov [ebp+Buffer] eax +
cmp ecx [ebp+entriesread] +
jnb loc_1008E51  +
jmp loc_10089E2  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
push offset username  +
push edi  +
push esi  +
call NetSessionGetInfo  +
cmp eax esi +
jz loc_1008BD0  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_140] +
push eax  +
push offset unk_10203D0  +
push 0Ch  +
call sub_1010ADF  +
add [ebp+var_140] 5 +
mov eax [ebp+Buffer] +
push dword ptr [eax+4]  +
push esi  +
push dword_10203FC  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax]  +
push esi  +
push dword_10203D4  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
test byte ptr [eax+14h] 1 +
mov eax dword_1020424 +
jnz loc_1008C61  +
mov eax dword_102042C +
push eax  +
push esi  +
push dword_10203E4  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+18h]  +
push esi  +
push dword_10203DC  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push 21h  +
lea eax [ebp+var_48] +
push eax  +
mov eax [ebp+Buffer] +
add eax 0Ch +
push eax  +
call sub_100BF8B  +
lea eax [ebp+var_48] +
push eax  +
push esi  +
push dword_10203EC  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
push 21h  +
lea eax [ebp+var_48] +
push eax  +
mov eax [ebp+Buffer] +
add eax 10h +
push eax  +
call sub_100BF8B  +
lea eax [ebp+var_48] +
push eax  +
push esi  +
push dword_10203F4  +
push [ebp+var_140]  +
call sub_10108BB  +
push eax  +
push [ebp+var_140]  +
push esi  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
push 1292h  +
call sub_10108F6  +
call sub_1010842  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push esi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+bufptr] +
push eax  +
xor ebx ebx +
inc ebx  +
push ebx  +
push edi  +
push esi  +
call NetConnectionEnum  +
cmp eax 0EAh +
jnz loc_1008D8E  +
mov [ebp+var_150] ebx +
jmp loc_1008D98  +
cmp eax esi +
jz loc_1008D98  +
push eax  +
call sub_100295A  +
push offset sub_1008611  +
push 1Ch  +
push [ebp+entriesread]  +
push [ebp+bufptr]  +
call ds:qsort  +
add esp 10h +
xor ebx ebx +
cmp [ebp+entriesread] esi +
jbe loc_1008E51  +
mov edi [ebp+bufptr] +
add edi 18h +
mov eax [edi] +
cmp eax esi +
jnz loc_1008DD7  +
lea eax [ebp+var_C0] +
push esi  +
push eax  +
push 0Fh  +
call sub_10108BB  +
push eax  +
push offset aFws_0  +
call sub_1010562  +
mov eax [edi-14h] +
sub eax esi +
pop ecx  +
pop ecx  +
jz loc_1008E22  +
dec eax  +
jz loc_1008E0D  +
dec eax  +
jz loc_1008E05  +
dec eax  +
jnz loc_1008E41  +
push dword_102040C  +
jmp loc_1008E13  +
push dword_1020414  +
jmp loc_1008E13  +
push dword_102041C  +
push off_10203C8  +
call sub_1010562  +
pop ecx  +
pop ecx  +
jmp loc_1008E41  +
push dword ptr [edi-10h]  +
push esi  +
push dword_1020404  +
push 9  +
call sub_10108BB  +
push eax  +
push offset aWsU  +
call sub_1010562  +
add esp 0Ch +
inc ebx  +
add edi 1Ch +
cmp ebx [ebp+entriesread] +
jb loc_1008DCB  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
cmp word ptr [ebp+var_150] si +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1008E74  +
push 0DB9h  +
call sub_10108F6  +
jmp loc_1008E79  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [eax] +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [ebp+var_4] eax +
push esi  +
mov eax ebx +
push edi  +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1008EE9  +
mov edi ds:wcschr +
sub eax ecx +
sar eax 1 +
push 24h  +
push ebx  +
mov esi eax +
call edi  +
lea esi [ebx+esi*2-2] +
sub esi eax +
mov eax [ebp+var_4] +
neg esi  +
pop ecx  +
sbb esi esi +
pop ecx  +
inc esi  +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1008F17  +
sub eax ecx +
push 24h  +
push [ebp+var_4]  +
sar eax 1 +
mov [ebp+var_8] eax +
call edi  +
mov edi [ebp+var_4] +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_8] +
lea ecx [edi+ecx*2-2] +
sub ecx eax +
neg ecx  +
sbb ecx ecx +
inc ecx  +
jz loc_1008F4D  +
xor eax eax +
test esi esi +
jnz loc_1008F81  +
inc eax  +
jmp loc_1008F81  +
test esi esi +
jz loc_1008F56  +
or eax 0FFFFFFFFh +
jmp loc_1008F81  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov eax [eax+4] +
mov ecx [ecx+4] +
mov edx 3FFFFFFFh +
and eax edx +
and ecx edx +
cmp eax ecx +
jz loc_1008F77  +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_1008F81  +
push edi  +
push ebx  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov [ebp+var_78] eax +
xor eax eax +
mov dword ptr [esi] 0FFFFh +
push edi  +
mov [ebp+AccessMask] eax +
mov [ebp+var_70] eax +
cmp dword_101FC80 eax +
jz loc_1009318  +
mov edi offset dword_101FC80 +
mov ebx [edi] +
mov ecx offset aUnlimited_0 +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1008FFA  +
test dx dx +
jz loc_1008FF6  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1008FFA  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1008FD4  +
xor eax eax +
jmp loc_1008FFF  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100900F  +
mov eax [ebp+var_78] +
or dword ptr [eax+10h] 0FFFFFFFFh +
jmp loc_1009302  +
mov ecx offset aComm +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100903C  +
test dx dx +
jz loc_1009038  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100903C  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1009016  +
xor eax eax +
jmp loc_1009041  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1009302  +
mov ecx offset aPrint +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1009076  +
test dx dx +
jz loc_1009072  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1009076  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1009050  +
xor eax eax +
jmp loc_100907B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1009302  +
push ebx  +
call sub_1010270  +
mov ebx eax +
test ebx ebx +
jnz loc_1009099  +
push 0DB1h  +
call sub_100295A  +
mov edi [edi] +
mov ecx offset aUsers +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10090C8  +
test dx dx +
jz loc_10090C4  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10090C8  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_10090A2  +
xor eax eax +
jmp loc_10090CD  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100910B  +
push offset aUsers  +
push 0F70h  +
push ebx  +
call sub_10103FF  +
mov ecx [ebp+var_78] +
mov [ecx+10h] eax +
cmp eax 1 +
jb loc_10090F7  +
cmp eax 7FFFh +
jbe loc_1009302  +
push offset aUsers  +
push 0F70h  +
call sub_101081B  +
jmp loc_1009302  +
mov ecx offset aRemark +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1009138  +
test dx dx +
jz loc_1009134  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1009138  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1009112  +
xor eax eax +
jmp loc_100913D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100914C  +
mov eax [ebp+var_78] +
mov [eax+8] ebx +
jmp loc_1009302  +
mov ecx offset aGrant +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1009179  +
test dx dx +
jz loc_1009175  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1009179  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1009153  +
xor eax eax +
jmp loc_100917E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1009191  +
inc [ebp+AccessMask]  +
push 3Ah  +
pop eax  +
mov [ebx-2] ax +
jmp loc_1009302  +
mov ecx offset aCache +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10091BE  +
test dx dx +
jz loc_10091BA  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10091BE  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1009198  +
xor eax eax +
jmp loc_10091C3  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1009302  +
push ebx  +
call ds:_wcsupr  +
mov eax ebx +
pop ecx  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10091D8  +
sub eax edx +
sar eax 1 +
mov edi eax +
jnz loc_10091F9  +
push offset aCache  +
push 0F70h  +
call sub_101081B  +
push dword_10204DC  +
call ds:_wcsupr  +
push dword_10204E4  +
call ds:_wcsupr  +
push dword_10204EC  +
call ds:_wcsupr  +
push dword_10204F4  +
call ds:_wcsupr  +
push dword_1020504  +
call ds:_wcsupr  +
push dword_10204FC  +
call ds:_wcsupr  +
push edi  +
push dword_10204DC  +
push ebx  +
call ds:wcsncmp  +
add esp 24h +
test eax eax +
jz loc_10092FC  +
cmp word ptr [ebx] 59h +
jz loc_10092FC  +
push edi  +
push dword_10204E4  +
push ebx  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_1009280  +
and [esi] eax +
jmp loc_1009302  +
push edi  +
push dword_10204EC  +
push ebx  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_10092FC  +
push edi  +
push dword_10204F4  +
push ebx  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_10092B2  +
mov dword ptr [esi] 20h +
jmp loc_1009302  +
push edi  +
push dword_1020504  +
push ebx  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_10092EA  +
push edi  +
push dword_10204FC  +
push ebx  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_10092E4  +
mov dword ptr [esi] 2000h +
jmp loc_1009302  +
cmp word ptr [ebx] 4Eh +
jnz loc_10092F2  +
mov dword ptr [esi] 30h +
jmp loc_1009302  +
push offset aCache  +
jmp loc_10090FC  +
mov dword ptr [esi] 10h +
inc [ebp+var_70]  +
mov edi [ebp+var_70] +
lea edi dword_101FC80[edi*4] +
cmp dword ptr [edi] 0 +
jnz loc_1008FCB  +
cmp [ebp+arg_8] 0 +
jz loc_1009583  +
mov eax [ebp+AccessMask] +
mov ebx ds:GetLastError +
test eax eax +
jnz loc_1009363  +
lea eax [ebp+cbSid] +
push eax  +
lea eax [ebp+pSid] +
push eax  +
push 0  +
push 1  +
mov [ebp+cbSid] 44h +
call ds:CreateWellKnownSid  +
test eax eax +
jnz loc_1009354  +
call ebx  +
push eax  +
call sub_100295A  +
lea eax [ebp+pSid] +
push eax  +
call ds:GetLengthSid  +
add eax 24h +
jmp loc_1009369  +
imul eax eax +
add eax 1Ch +
push eax  +
push 0  +
mov [ebp+cbSid] eax +
call ds:LocalAlloc  +
mov edi eax +
mov [ebp+pSecurityDescriptor] edi +
test edi edi +
jnz loc_1009385  +
push 8  +
call sub_100295A  +
push 1  +
push edi  +
lea esi [edi+14h] +
call ds:InitializeSecurityDescriptor  +
test eax eax +
jnz loc_100939D  +
call ebx  +
push eax  +
call sub_100295A  +
mov eax [ebp+cbSid] +
push 2  +
add eax 0FFFFFFECh +
push eax  +
push esi  +
call ds:InitializeAcl  +
mov ebx ds:LocalFree +
test eax eax +
jnz loc_10093C6  +
push edi  +
call ebx  +
call ds:GetLastError  +
push eax  +
call sub_100295A  +
xor eax eax +
cmp [ebp+AccessMask] eax +
jnz loc_10093FD  +
lea eax [ebp+pSid] +
push eax  +
push 1200A9h  +
push 2  +
push esi  +
call ds:AddAccessAllowedAce  +
test eax eax +
jnz loc_1009556  +
push [ebp+pSecurityDescriptor]  +
call ebx  +
call ds:GetLastError  +
push eax  +
call sub_100295A  +
jmp loc_1009556  +
mov [ebp+var_70] eax +
cmp dword_101FC80 eax +
jz loc_1009556  +
mov esi offset dword_101FC80 +
push dword ptr [esi]  +
call sub_1010270  +
mov edi eax +
test edi edi +
jz loc_1009540  +
mov esi [esi] +
mov eax offset aGrant +
mov cx [esi] +
cmp cx [eax] +
jnz loc_100944F  +
test cx cx +
jz loc_100944B  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100944F  +
add esi 4 +
add eax 4 +
test cx cx +
jnz loc_1009429  +
xor eax eax +
jmp loc_1009454  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1009540  +
push edi  +
call sub_101029B  +
mov esi eax +
test esi esi +
jnz loc_1009477  +
push offset aGrant  +
push 0F70h  +
call sub_101081B  +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
lea eax [ebp+cbSid] +
push eax  +
lea eax [ebp+pSid] +
push eax  +
push edi  +
push 0  +
mov [ebp+cbSid] 44h +
mov [ebp+cbReferencedDomainName] 10h +
call ds:LookupAccountNameW  +
test eax eax +
jnz loc_10094BA  +
push [ebp+pSecurityDescriptor]  +
call ebx  +
call ds:GetLastError  +
push eax  +
call sub_100295A  +
push dword_102048C  +
mov edi ds:_wcsicmp +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10094D8  +
mov [ebp+AccessMask] 1200A9h +
jmp loc_1009517  +
push dword_1020494  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10094F0  +
mov [ebp+AccessMask] 1301BFh +
jmp loc_1009517  +
push dword_102049C  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1009508  +
mov [ebp+AccessMask] 1F01FFh +
jmp loc_1009517  +
push offset aGrant  +
push 0F70h  +
call sub_101081B  +
mov esi [ebp+pSecurityDescriptor] +
lea eax [ebp+pSid] +
push eax  +
push [ebp+AccessMask]  +
lea eax [esi+14h] +
push 2  +
push eax  +
call ds:AddAccessAllowedAce  +
test eax eax +
jnz loc_1009540  +
push esi  +
call ebx  +
call ds:GetLastError  +
push eax  +
call sub_100295A  +
inc [ebp+var_70]  +
mov esi [ebp+var_70] +
lea esi dword_101FC80[esi*4] +
cmp dword ptr [esi] 0 +
jnz loc_1009411  +
mov esi [ebp+pSecurityDescriptor] +
push 0  +
lea eax [esi+14h] +
push eax  +
push 1  +
push esi  +
call ds:SetSecurityDescriptorDacl  +
test eax eax +
jnz loc_100957B  +
push esi  +
call ebx  +
call ds:GetLastError  +
push eax  +
call sub_100295A  +
mov eax [ebp+var_78] +
mov [eax+24h] esi +
jmp loc_1009593  +
cmp [ebp+AccessMask] 0 +
jz loc_1009593  +
push 0DB1h  +
call sub_100295A  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
push offset aUsers  +
push 14h  +
mov esi offset unk_1021AE8 +
push esi  +
call wcscpy_s  +
mov eax esi +
add esp 0Ch +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10095CE  +
sub eax edx +
sar eax 1 +
mov [ebp+var_C] eax +
mov eax offset aUnlimited_0 +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10095E7  +
and [ebp+var_4] 0 +
sub eax ecx +
sar eax 1 +
cmp dword_101FC80 0 +
mov [ebp+var_10] eax +
jz loc_1009644  +
mov ebx ds:wcsncmp +
mov edi offset dword_101FC80 +
push [ebp+var_C]  +
push esi  +
push dword ptr [edi]  +
call ebx  +
add esp 0Ch +
test eax eax +
jz loc_1009696  +
push [ebp+var_10]  +
push offset aUnlimited_0  +
push dword ptr [edi]  +
call ebx  +
add esp 0Ch +
test eax eax +
jz loc_1009696  +
inc [ebp+var_4]  +
mov edi [ebp+var_4] +
lea edi dword_101FC80[edi*4] +
cmp dword ptr [edi] 0 +
jnz loc_1009610  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
push 0  +
call sub_1011811  +
test eax eax +
jz loc_100965B  +
push eax  +
call sub_100295A  +
push 0  +
push esi  +
call ds:wcschr  +
mov ecx [ebp+Buffer] +
push dword ptr [ecx+34h]  +
mov ecx esi +
push offset aU  +
push 14h  +
sub ecx eax +
pop edx  +
sar ecx 1 +
sub edx ecx +
push edx  +
push eax  +
call swprintf_s  +
mov eax [ebp+var_4] +
add esp 18h +
push [ebp+Buffer]  +
mov dword_101FC80[eax*4] esi +
call NetApiBufferFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
lea eax [ebp+Buffer] +
mov [ebp+var_14] edi +
push eax  +
cmp ebx esi +
jnz loc_1009781  +
push 2  +
push [ebp+netname]  +
push esi  +
call NetShareGetInfo  +
cmp eax esi +
jnz loc_1009813  +
mov eax [ebp+Buffer] +
mov ecx [eax+14h] +
add eax 4 +
and dword ptr [eax] 3FFFFFFFh +
cmp dword ptr [eax] 1 +
mov [ebp+var_18] ecx +
jnz loc_1009755  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 2  +
push esi  +
push esi  +
push 1  +
call sub_100F761  +
cmp eax esi +
jz loc_1009711  +
push eax  +
call sub_100295A  +
mov eax lpDateStr +
mov edi 0FFFFh +
cmp word ptr [ebp+var_8] si +
jz loc_100974F  +
add [ebp+var_8] edi +
movzx ebx word ptr [eax+3Ah] +
lea esi [eax+3Ch] +
test byte ptr [esi+6Ah] 2 +
jz loc_100973B  +
push 0E6Eh  +
call sub_100295A  +
movzx eax bx +
imul eax eax +
add eax esi +
cmp word ptr [ebp+var_8] 0 +
jnz loc_1009721  +
mov ebx [ebp+arg_4] +
xor esi esi +
add [ebp+var_8] edi +
mov edi [ebp+var_14] +
cmp [ebp+var_18] esi +
jz loc_10097E6  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push esi  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push [ebp+netname]  +
cmp ebx esi +
jnz loc_1009792  +
push esi  +
jmp loc_1009796  +
push 1F6h  +
push [ebp+netname]  +
lea eax [ebx+4] +
push eax  +
jmp loc_10096D0  +
lea eax [ebx+4] +
push eax  +
call NetConnectionEnum  +
cmp eax esi +
jz loc_10097A5  +
push eax  +
call sub_100295A  +
mov ecx [ebp+var_10] +
cmp ecx esi +
jbe loc_10097BA  +
mov eax [ebp+Buffer] +
add eax 8 +
add edi [eax] +
add eax 1Ch +
dec ecx  +
jnz loc_10097B2  +
call sub_100F2A3  +
cmp edi esi +
jz loc_10097E6  +
push [ebp+netname]  +
push 0E68h  +
call sub_1010933  +
push esi  +
push 14A6h  +
call sub_1010970  +
test eax eax +
jnz loc_10097E6  +
push 2  +
call sub_1002992  +
push esi  +
push [ebp+netname]  +
cmp ebx esi +
jnz loc_10097F1  +
push esi  +
jmp loc_10097F5  +
add ebx 4 +
push ebx  +
call NetShareDel  +
cmp eax esi +
jz loc_1009804  +
push eax  +
call sub_100295A  +
push [ebp+netname]  +
push 122Ah  +
call sub_1010933  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
push 800h  +
mov esi offset word_101C340 +
push esi  +
push 1  +
push [ebp+arg_0]  +
push 0  +
call sub_10168B9  +
test eax eax +
jz loc_100984E  +
xor eax eax +
mov word_101C340 ax +
jmp loc_1009878  +
mov ecx dword_101C36C +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100985A  +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push ecx  +
push esi  +
call memcpy  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push bufptr  +
mov [ebp+var_2] 1 +
call sub_100A9CD  +
xor ebx ebx +
push ebx  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+bufptr] +
push eax  +
push 2  +
push ebx  +
call NetShareEnum  +
cmp eax ebx +
jz loc_10098BD  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] ebx +
jnz loc_10098C7  +
call sub_1010959  +
push offset sub_1008ECD  +
push 20h  +
push [ebp+entriesread]  +
push [ebp+bufptr]  +
call ds:qsort  +
add esp 10h +
lea eax [ebp+var_1C] +
push eax  +
push offset unk_1020430  +
push 1Ch  +
call sub_1010ADF  +
call sub_10108A7  +
push 127Ah  +
call sub_10108F6  +
call sub_1010842  +
mov [ebp+var_C] ebx +
cmp [ebp+entriesread] ebx +
jbe loc_1009ACE  +
push esi  +
mov esi [ebp+bufptr] +
push edi  +
add esi 18h +
push dword ptr [esi-18h]  +
call sub_10104FB  +
cmp eax 0Ch +
ja loc_100993F  +
push ebx  +
push dword ptr [esi-18h]  +
push 0Ch  +
call sub_10108BB  +
push eax  +
push offset aFws_3  +
call sub_1010562  +
mov edi offset aFws_0 +
jmp loc_1009963  +
push dword ptr [esi-18h]  +
mov edi offset aFws_0 +
push edi  +
call sub_1010562  +
pop ecx  +
pop ecx  +
call sub_10108A7  +
push offset username  +
push offset a12_12fws  +
call sub_1010562  +
and dword ptr [esi-14h] 3FFFFFFFh +
cmp dword ptr [esi-14h] 1 +
pop ecx  +
pop ecx  +
jnz loc_10099AA  +
push dword ptr [esi-18h]  +
call sub_100981F  +
push ebx  +
push offset word_101C340  +
push 0FFFFFFEAh  +
call sub_10108BB  +
push eax  +
push offset aWs  +
call sub_1010562  +
pop ecx  +
pop ecx  +
push ebx  +
push dword_1020434  +
push 8  +
call sub_10108BB  +
push eax  +
push offset aWs  +
jmp loc_10099E1  +
push dword ptr [esi]  +
call sub_10104FB  +
cmp eax 1Fh +
ja loc_10099C8  +
push ebx  +
push dword ptr [esi]  +
push 0FFFFFFE1h  +
call sub_10108BB  +
push eax  +
push offset aFws_3  +
jmp loc_10099E1  +
push dword ptr [esi]  +
push edi  +
call sub_1010562  +
pop ecx  +
pop ecx  +
call sub_10108A7  +
push offset username  +
push offset a44_44fws  +
call sub_1010562  +
mov eax [esi-10h] +
pop ecx  +
pop ecx  +
mov [ebp+var_1] bl +
cmp eax ebx +
jz loc_1009A0D  +
cmp [eax] bx +
jz loc_1009A0D  +
push ebx  +
push eax  +
push 0FFFFFFDEh  +
call sub_10108BB  +
push eax  +
push edi  +
call sub_1010562  +
pop ecx  +
pop ecx  +
mov [ebp+var_1] 1 +
cmp [ebp+var_2] bl +
jz loc_1009AB2  +
lea eax [ebp+Buffer] +
push eax  +
push 3EDh  +
push dword ptr [esi-18h]  +
push ebx  +
call NetShareGetInfo  +
test eax eax +
jnz loc_1009AB2  +
mov eax [ebp+Buffer] +
mov eax [eax] +
and eax 2030h +
cmp eax 10h +
jz loc_1009A68  +
cmp eax 20h +
jz loc_1009A60  +
cmp eax 30h +
jz loc_1009A58  +
cmp eax 2000h +
jnz loc_1009AA8  +
mov edi dword_10204CC +
jmp loc_1009A6E  +
mov edi dword_10204D4 +
jmp loc_1009A6E  +
mov edi dword_10204C4 +
jmp loc_1009A6E  +
mov edi dword_10204BC +
cmp edi ebx +
jz loc_1009AA8  +
cmp [ebp+var_1] 1 +
jnz loc_1009A9B  +
call sub_10108A7  +
push edi  +
push ebx  +
push offset username  +
push 2Dh  +
call sub_10108BB  +
push eax  +
push offset aWsFws  +
call sub_1010562  +
add esp 0Ch +
jmp loc_1009AA8  +
push edi  +
push offset aWs_0  +
call sub_1010562  +
pop ecx  +
pop ecx  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
jmp loc_1009AB5  +
mov [ebp+var_2] bl +
call sub_10108A7  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
add esi 20h +
cmp eax [ebp+entriesread] +
jb loc_1009915  +
pop edi  +
pop esi  +
call sub_10108DE  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 57Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push bufptr  +
xor edi edi +
mov [ebp+qualifier] esi +
mov [ebp+var_560] edi +
mov [ebp+dwAceIndex] edi +
mov [ebp+var_540] edi +
mov [ebp+bDaclPresent] edi +
mov [ebp+pAcl] edi +
call sub_100A9CD  +
lea eax [ebp+bufptr] +
push eax  +
push 1F6h  +
push esi  +
push edi  +
call NetShareGetInfo  +
cmp eax edi +
jz loc_1009BAE  +
push eax  +
call sub_100295A  +
lea eax [ebp+Buffer] +
push eax  +
push 3EDh  +
push esi  +
push edi  +
call NetShareGetInfo  +
xor ebx ebx +
push 10h  +
inc ebx  +
pop ecx  +
test eax eax +
jnz loc_1009C31  +
mov edx [ebp+Buffer] +
mov eax [edx] +
and eax 2030h +
jz loc_1009C1F  +
cmp eax ecx +
jz loc_1009C13  +
cmp eax 20h +
jz loc_1009C07  +
cmp eax 30h +
jz loc_1009BFB  +
cmp eax 2000h +
jnz loc_1009C2B  +
mov [ebp+dwAceIndex] 13h +
jmp loc_1009C25  +
mov [ebp+dwAceIndex] 14h +
jmp loc_1009C25  +
mov [ebp+dwAceIndex] 12h +
jmp loc_1009C25  +
mov [ebp+dwAceIndex] 11h +
jmp loc_1009C25  +
mov [ebp+dwAceIndex] ecx +
mov [ebp+var_540] ebx +
push edx  +
call NetApiBufferFree  +
lea eax [ebp+var_534] +
push eax  +
mov esi offset unk_1020430 +
push esi  +
push 8  +
call sub_1010ADF  +
add [ebp+var_534] 5 +
lea eax [ebp+var_57C] +
push eax  +
push esi  +
push 1Ch  +
call sub_1010ADF  +
mov eax [ebp+bufptr] +
and dword ptr [eax+4] 3FFFFFFFh +
mov eax [ebp+bufptr] +
mov esi offset word_101C340 +
cmp [eax+4] ebx +
jnz loc_1009C81  +
push dword ptr [eax]  +
call sub_100981F  +
jmp loc_1009C92  +
push dword ptr [eax+18h]  +
push 800h  +
push esi  +
call wcscpy_s  +
add esp 0Ch +
mov eax [ebp+bufptr] +
push dword ptr [eax]  +
push edi  +
push dword_102043C  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push esi  +
push edi  +
push dword_1020474  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
push edi  +
push off_1020994  +
call sub_1010562  +
mov eax [ebp+bufptr] +
add esp 14h +
push dword ptr [eax+8]  +
push edi  +
push dword_102047C  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+bufptr] +
mov eax [eax+10h] +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_1009D52  +
push dword_102045C  +
push edi  +
push dword_1020454  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
push edi  +
push off_1020994  +
jmp loc_1009D73  +
push eax  +
push edi  +
push dword_1020454  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
push edi  +
push off_102099C  +
call sub_1010562  +
add esp 14h +
push edi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+var_55C] +
push eax  +
push ebx  +
push [ebp+qualifier]  +
push edi  +
call NetConnectionEnum  +
cmp eax 0EAh +
jnz loc_1009DAF  +
mov [ebp+var_560] ebx +
jmp loc_1009DB9  +
cmp eax edi +
jz loc_1009DB9  +
push eax  +
call sub_100295A  +
push edi  +
push dword_1020464  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
mov ebx offset a_Ws_0 +
push edi  +
push ebx  +
call sub_1010562  +
add esp 10h +
xor esi esi +
cmp [ebp+entriesread] edi +
jbe loc_1009E75  +
mov edi [ebp+var_55C] +
add edi 14h +
test esi esi +
jz loc_1009E24  +
push 3  +
xor edx edx +
mov eax esi +
pop ecx  +
div  ecx +
test edx edx +
jnz loc_1009E24  +
push off_1020954  +
push [ebp+var_534]  +
push [ebp+var_534]  +
push ebx  +
call sub_1010562  +
add esp 10h +
mov eax [edi] +
test eax eax +
jnz loc_1009E2F  +
mov eax dword_10204AC +
push 0  +
push eax  +
push 15h  +
call sub_10108BB  +
push eax  +
push offset aFws_0  +
call sub_1010562  +
pop ecx  +
pop ecx  +
inc esi  +
push 3  +
xor edx edx +
mov eax esi +
pop ecx  +
div  ecx +
test edx edx +
jnz loc_1009E59  +
call sub_10108A7  +
add edi 1Ch +
cmp esi [ebp+entriesread] +
jb loc_1009DF8  +
test esi esi +
jz loc_1009E75  +
push 3  +
xor edx edx +
mov eax esi +
pop ecx  +
div  ecx +
test edx edx +
jz loc_1009E7A  +
call sub_10108A7  +
cmp [ebp+var_540] 1 +
jnz loc_1009EBA  +
mov eax [ebp+dwAceIndex] +
push dword_1020434[eax*8]  +
push 0  +
push dword_102046C  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
push 0  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
cmp [ebp+entriesread] 0 +
jz loc_1009ECE  +
push [ebp+var_55C]  +
call NetApiBufferFree  +
mov eax [ebp+bufptr] +
cmp dword ptr [eax+24h] 0 +
mov esi ds:GetLastError +
jz loc_1009F0A  +
lea ecx [ebp+bDaclDefaulted] +
push ecx  +
lea ecx [ebp+pAcl] +
push ecx  +
lea ecx [ebp+bDaclPresent] +
push ecx  +
push dword ptr [eax+24h]  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jnz loc_1009F0A  +
call esi  +
push eax  +
call sub_100295A  +
cmp [ebp+bDaclPresent] 0 +
jz loc_100A20E  +
mov ecx [ebp+pAcl] +
test ecx ecx +
jz loc_100A20E  +
movzx eax word ptr [ecx+4] +
test ax ax +
jz loc_100A20E  +
and [ebp+dwAceIndex] 0 +
xor edx edx +
cmp dx ax +
jnb loc_100A32C  +
mov edi ds:_wcsupr +
mov ebx ds:_ultow +
mov esi 174h +
lea eax [ebp+pAce] +
push eax  +
push [ebp+dwAceIndex]  +
push ecx  +
call ds:GetAce  +
test eax eax +
jz loc_100A1ED  +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+Name] +
push eax  +
mov eax [ebp+pAce] +
add eax 8 +
push eax  +
push 0  +
mov [ebp+cbName] 100h +
mov [ebp+cbReferencedDomainName] 10h +
call ds:LookupAccountSidW  +
test eax eax +
jz loc_100A1ED  +
cmp [ebp+ReferencedDomainName] 0 +
jz loc_1009FF8  +
mov ecx [ebp+cbReferencedDomainName] +
push 5Ch  +
pop edx  +
lea eax [ecx+ecx] +
mov [ebp+eax+ReferencedDomainName] dx +
lea edx [ebp+Name] +
push edx  +
mov edx 173h +
sub edx ecx +
push edx  +
lea eax [ebp+eax-2EAh] +
jmp loc_100A006  +
lea eax [ebp+Name] +
push eax  +
push esi  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push offset asc_100A380  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
mov eax [ebp+pAce] +
mov cl [eax] +
add esp 0Ch +
test cl cl +
jnz loc_100A0CA  +
mov eax [eax+4] +
test eax eax +
jz loc_100A0AC  +
cmp eax 1200A9h +
jz loc_100A0A4  +
cmp eax 1301BFh +
jz loc_100A09C  +
cmp eax 1F01FFh +
jz loc_100A094  +
push dword_10204AC  +
call edi  +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
push offset a0x  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
lea eax [ebp+ReferencedDomainName] +
add esp 1Ch +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jz loc_100A12D  +
jmp loc_100A084  +
push dword_102049C  +
jmp loc_100A0B2  +
push dword_1020494  +
jmp loc_100A0B2  +
push dword_102048C  +
jmp loc_100A0B2  +
push dword_10204A4  +
call edi  +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
add esp 10h +
jmp loc_100A1AE  +
cmp cl 1 +
jnz loc_100A1AE  +
mov eax [eax+4] +
cmp eax 1200A9h +
jz loc_100A16D  +
cmp eax 1301BFh +
jz loc_100A165  +
cmp eax 1F01FFh +
jz loc_100A15D  +
push dword_10204AC  +
call edi  +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
push offset a0x  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
lea eax [ebp+ReferencedDomainName] +
add esp 1Ch +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100A123  +
sub eax ecx +
sar eax 1 +
lea eax [ebp+eax*2+ReferencedDomainName] +
push 10h  +
push eax  +
mov eax [ebp+pAce] +
push dword ptr [eax+4]  +
call ebx  +
push offset dword_100A370  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
add esp 18h +
jmp loc_100A1AE  +
push dword_102049C  +
jmp loc_100A173  +
push dword_1020494  +
jmp loc_100A173  +
push dword_102048C  +
call edi  +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
push offset dword_100385C  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
push dword_102050C  +
call edi  +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
add esp 2Ch +
cmp [ebp+dwAceIndex] 0 +
mov eax dword_102044C +
jz loc_100A1C1  +
mov eax offset username +
lea ecx [ebp+ReferencedDomainName] +
push ecx  +
push 0  +
push eax  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
push 0  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
mov ecx [ebp+pAcl] +
movzx eax word ptr [ecx+4] +
inc [ebp+dwAceIndex]  +
cmp [ebp+dwAceIndex] eax +
jnb loc_100A32C  +
jmp loc_1009F55  +
lea eax [ebp+var_564] +
push eax  +
lea eax [ebp+Sid] +
push eax  +
xor edi edi +
push edi  +
push 1  +
mov [ebp+cbName] 100h +
mov [ebp+cbReferencedDomainName] 10h +
mov [ebp+var_564] 44h +
call ds:CreateWellKnownSid  +
test eax eax +
jnz loc_100A251  +
call esi  +
push eax  +
call sub_100295A  +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+Name] +
push eax  +
lea eax [ebp+Sid] +
push eax  +
push edi  +
call ds:LookupAccountSidW  +
test eax eax +
jnz loc_100A28E  +
call esi  +
push eax  +
call sub_100295A  +
lea eax [ebp+Name] +
push eax  +
mov esi 174h +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscpy_s  +
mov eax [ebp+cbName] +
mov ecx esi +
sub ecx eax +
push offset asc_100A380  +
push ecx  +
lea eax [ebp+eax*2+ReferencedDomainName] +
push eax  +
call wcscpy_s  +
add esp 18h +
cmp [ebp+bDaclPresent] edi +
jz loc_100A2DF  +
cmp [ebp+pAcl] edi +
jz loc_100A2DF  +
push dword_10204A4  +
jmp loc_100A2E5  +
push dword_102049C  +
call ds:_wcsupr  +
pop ecx  +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push esi  +
push eax  +
call wcscat_s  +
add esp 0Ch +
lea eax [ebp+ReferencedDomainName] +
push eax  +
push edi  +
push dword_102044C  +
push [ebp+var_534]  +
call sub_10108BB  +
push eax  +
push [ebp+var_534]  +
push edi  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
push offset WideCharStr  +
call sub_1010562  +
pop ecx  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
cmp word ptr [ebp+var_560] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_100A35B  +
push 0DB9h  +
call sub_10108F6  +
jmp loc_100A360  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C0h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+var_C0] +
push eax  +
push offset unk_1020430  +
push 1Ch  +
call sub_1010ADF  +
push bufptr  +
call sub_100A9CD  +
push 1000h  +
call sub_101250D  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jnz loc_100A3DD  +
push 8  +
call sub_100295A  +
or dword ptr [esi+10h] 0FFFFFFFFh +
push 3Dh  +
push edi  +
mov dword ptr [esi+0Ch] 3Fh +
mov [esi+8] ebx +
call ds:wcschr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_100A446  +
xor ecx ecx +
mov [eax] cx +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100A404  +
push off_1020974  +
sub eax edx +
sar eax 1 +
push edi  +
lea ebx [edi+eax*2+2] +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100A43C  +
push off_1020978  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100A446  +
push 0EC2h  +
call sub_100295A  +
push 2  +
pop eax  +
mov [esi] edi +
cmp [ebp+arg_8] eax +
jnz loc_100A45F  +
mov [esi+4] eax +
mov dword ptr [esi+0Ch] 7 +
jmp loc_100A4E2  +
test ebx ebx +
jnz loc_100A488  +
push off_1020974  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100A47B  +
and [esi+4] eax +
jmp loc_100A482  +
mov dword ptr [esi+4] 3 +
and dword ptr [esi+18h] 0 +
jmp loc_100A4E5  +
push 0  +
lea eax [ebp+var_BC] +
push eax  +
push ebx  +
call NetpwPathType  +
test eax eax +
jz loc_100A4A5  +
mov [ebp+var_BC] 4010h +
cmp [ebp+var_BC] 4000h +
jnz loc_100A4DE  +
push 3  +
push ebx  +
lea eax [ebp+var_C] +
push 4  +
push eax  +
call wcsncpy_s  +
push offset asc_1003740  +
lea eax [ebp+var_8] +
push 2  +
push eax  +
call wcscpy_s  +
lea eax [ebp+var_C] +
add esp 1Ch +
and dword ptr [esi+4] 0 +
mov [esi+18h] eax +
jmp loc_100A4E5  +
and dword ptr [esi+4] 0 +
mov [esi+18h] ebx +
push 1  +
lea eax [ebp+var_B8] +
push eax  +
push esi  +
mov dword ptr [esi+1Ch] offset username +
call sub_1008F8B  +
push 0  +
push esi  +
push 1F6h  +
push 0  +
call NetShareAdd  +
push dword ptr [esi+24h]  +
mov edi eax +
call ds:LocalFree  +
test edi edi +
jz loc_100A51F  +
push edi  +
call sub_100295A  +
mov edi 0FFFFh +
cmp [ebp+var_B8] edi +
jz loc_100A53C  +
cmp dword ptr [esi+4] 0 +
jz loc_100A542  +
push 0EC8h  +
call sub_100295A  +
cmp dword ptr [esi+4] 0 +
jnz loc_100A589  +
test ebx ebx +
jz loc_100A589  +
mov ax [ebx] +
push 3Ah  +
mov [ebp+RootPathName] ax +
pop eax  +
mov [ebp-0AEh] ax +
push 5Ch  +
pop eax  +
mov [ebp+var_AC] ax +
xor eax eax +
mov [ebp+var_AA] ax +
lea eax [ebp+RootPathName] +
push eax  +
call ds:GetDriveTypeW  +
cmp eax 4 +
jnz loc_100A589  +
push 0E98h  +
call sub_100295A  +
push dword ptr [esi]  +
and dword ptr [esi+20h] 0 +
push 1230h  +
call sub_1010933  +
cmp [ebp+var_B8] edi +
jz loc_100A601  +
lea eax [ebp+Buffer] +
push eax  +
mov edi 3EDh +
push edi  +
push dword ptr [esi]  +
xor ebx ebx +
push ebx  +
call NetShareGetInfo  +
cmp eax ebx +
jz loc_100A5C2  +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
and dword ptr [eax] 0FFFFDFCFh +
mov eax [ebp+Buffer] +
mov ecx [ebp+var_B8] +
or [eax] ecx +
push ebx  +
push [ebp+Buffer]  +
push edi  +
push dword ptr [esi]  +
push ebx  +
call NetShareSetInfo  +
cmp eax ebx +
jz loc_100A5F6  +
push eax  +
call sub_100295A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push esi  +
call NetApiBufferFree  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0CCh +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi dword_101A6F8 +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+device] edi +
mov [ebp+var_B0] ebx +
cmp esi ebx +
jz loc_100A65C  +
push esi  +
call sub_10127CC  +
test eax eax +
jnz loc_100A65C  +
xor esi esi +
push esi  +
push edi  +
call sub_10096A9  +
mov esi eax +
cmp esi ebx +
jz loc_100A825  +
mov edi 906h +
cmp esi edi +
jnz loc_100A6A3  +
push ebx  +
push [ebp+device]  +
push ebx  +
call NetShareDelSticky  +
mov esi eax +
cmp esi ebx +
jnz loc_100A699  +
push [ebp+device]  +
push 1233h  +
jmp loc_100A820  +
cmp esi edi +
jz loc_100A6A9  +
push esi  +
call sub_100295A  +
push esi  +
call sub_100295A  +
push ebx  +
lea eax [ebp+var_C0] +
push eax  +
push [ebp+device]  +
call NetpwPathType  +
cmp eax ebx +
jz loc_100A6C6  +
push eax  +
call sub_100295A  +
cmp [ebp+var_C0] 2006h +
jnz loc_100A6DA  +
mov [ebp+type] ebx +
jmp loc_100A706  +
test [ebp+var_C0] 4000h +
jnz loc_100A6E9  +
push edi  +
jmp loc_100A701  +
lea eax [ebp+type] +
push eax  +
push [ebp+device]  +
push ebx  +
call NetShareCheck  +
cmp eax ebx +
jz loc_100A706  +
push eax  +
call sub_100295A  +
mov [ebp+var_BC] ebx +
cmp [ebp+type] ebx +
jz loc_100A720  +
push 57h  +
call sub_100295A  +
jmp loc_100A80B  +
push ebx  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
push ebx  +
call NetShareEnum  +
cmp eax ebx +
jz loc_100A74A  +
push eax  +
call sub_100295A  +
mov esi [ebp+Buffer] +
xor edi edi +
cmp [ebp+entriesread] ebx +
jbe loc_100A7CB  +
push [ebp+device]  +
push dword ptr [esi+18h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100A7BF  +
push dword ptr [esi]  +
lea eax [ebp+netname] +
push 51h  +
push eax  +
mov [ebp+var_BC] 1 +
call wcscpy_s  +
add esp 0Ch +
call sub_100F2A3  +
push ebx  +
lea eax [ebp+netname] +
push eax  +
call sub_10096A9  +
cmp eax ebx +
jz loc_100A7BF  +
inc [ebp+var_B0]  +
mov [ebp+var_C8] eax +
lea eax [ebp+netname] +
push eax  +
push 0E8Dh  +
call sub_1010933  +
inc edi  +
add esi 20h +
cmp edi [ebp+entriesread] +
jb loc_100A75A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
mov eax [ebp+var_B0] +
cmp eax ebx +
jz loc_100A803  +
cmp eax [ebp+entriesread] +
jnz loc_100A7F0  +
push [ebp+var_C8]  +
jmp loc_100A810  +
push 0DB0h  +
call sub_10108F6  +
push 1  +
call sub_1002992  +
jmp loc_100A815  +
cmp [ebp+var_BC] ebx +
jnz loc_100A815  +
push 0E87h  +
call sub_100295A  +
push [ebp+device]  +
push 122Ah  +
call sub_1010933  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_10] +
push eax  +
push offset unk_1020430  +
push 1Ch  +
call sub_1010ADF  +
lea eax [ebp+Buffer] +
push eax  +
mov ebx 1F6h +
push ebx  +
push [ebp+netname]  +
xor edi edi +
push edi  +
call NetShareGetInfo  +
cmp eax edi +
jz loc_100A875  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_4] +
push eax  +
mov esi 3EDh +
push esi  +
push [ebp+netname]  +
push edi  +
call NetShareGetInfo  +
cmp eax edi +
jz loc_100A892  +
push eax  +
call sub_100295A  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+Buffer]  +
call sub_1008F8B  +
push edi  +
push [ebp+Buffer]  +
push ebx  +
push [ebp+netname]  +
push edi  +
call NetShareSetInfo  +
cmp eax edi +
jz loc_100A8B7  +
push eax  +
call sub_100295A  +
cmp [ebp+var_8] 0FFFFh +
jz loc_100A8F9  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
mov edx eax +
and edx 2030h +
cmp edx [ebp+var_8] +
jz loc_100A8F9  +
and eax 0FFFFDFCFh +
mov [ecx] eax +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
or [eax] ecx +
push edi  +
push [ebp+var_4]  +
push esi  +
push [ebp+netname]  +
push edi  +
call NetShareSetInfo  +
cmp eax edi +
jz loc_100A8F9  +
push eax  +
call sub_100295A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push [ebp+var_4]  +
call NetApiBufferFree  +
call sub_10108DE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
push bufptr  +
call sub_100A9CD  +
mov edi [ebp+netname] +
lea eax [ebp+Buffer] +
push eax  +
xor esi esi +
push esi  +
push edi  +
push esi  +
call NetShareGetInfo  +
cmp eax esi +
jz loc_100A973  +
cmp eax 906h +
jnz loc_100A96B  +
push off_1020974  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100A961  +
call sub_10095A9  +
push esi  +
push esi  +
push edi  +
call sub_100A38B  +
jmp loc_100A988  +
push eax  +
call sub_100295A  +
jmp loc_100A988  +
push edi  +
cmp dword_101FC80 esi +
jz loc_100A983  +
call sub_100A83B  +
jmp loc_100A988  +
call sub_1009B45  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+18h] +
test ecx ecx +
jnz loc_100A9AF  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
mov eax [eax+18h] +
test eax eax +
jnz loc_100A9BC  +
inc eax  +
pop ebp  +
retn   +
push eax  +
push ecx  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax lpServiceName +
push ebx  +
mov ebx [ebp+bufptr] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov ecx ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100AA0C  +
cmp dx di +
jz loc_100AA08  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100AA0C  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_100A9E6  +
xor eax eax +
jmp loc_100AA11  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_100AA4B  +
cmp dword_1021B10 edi +
jz loc_100AA25  +
xor eax eax +
inc eax  +
jmp loc_100AAD6  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call sub_1010F03  +
test eax eax +
jnz loc_100AA4B  +
push [ebp+Buffer]  +
xor esi esi +
inc esi  +
mov dword_1021B10 esi +
call NetApiBufferFree  +
mov eax esi +
jmp loc_100AAD6  +
lea eax [ebp+bufptr] +
push eax  +
push edi  +
push edi  +
push ebx  +
push edi  +
call NetServiceControl  +
xor esi esi +
inc esi  +
cmp eax edi +
jz loc_100AA69  +
cmp eax 888h +
jz loc_100AA92  +
push eax  +
jmp loc_100AA88  +
mov ecx [ebp+bufptr] +
mov eax [ecx+4] +
and eax 3 +
dec eax  +
jz loc_100AA8F  +
dec eax  +
jz loc_100AA83  +
dec eax  +
jnz loc_100AA92  +
push ecx  +
call NetApiBufferFree  +
jmp loc_100AA1D  +
push 0DCDh  +
call sub_100295A  +
jmp loc_100AA92  +
mov [ebp+var_4] esi +
push [ebp+bufptr]  +
call NetApiBufferFree  +
cmp [ebp+var_4] edi +
jnz loc_100AAC6  +
push ebx  +
call sub_100F4DF  +
push eax  +
push 0DC1h  +
call sub_1010933  +
push esi  +
push 14A7h  +
call sub_1010970  +
test eax eax +
jnz loc_100AAC6  +
push 2  +
call sub_1002992  +
push edi  +
push ebx  +
mov dword_1020080 esi +
call sub_10028B8  +
push 2  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
xor edi edi +
push edi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
push edi  +
call NetServiceEnum  +
cmp eax edi +
jz loc_100AB49  +
cmp eax 85Ah +
jz loc_100AB1A  +
push eax  +
call sub_100295A  +
jmp loc_100ABA4  +
push 0E62h  +
call sub_10108F6  +
push 1  +
push 14A8h  +
call sub_1010970  +
test eax eax +
jnz loc_100AB3B  +
push 2  +
call sub_1002992  +
push edi  +
push lpServiceName  +
call sub_10028B8  +
jmp loc_100ABA4  +
push 0DC0h  +
call sub_10108F6  +
push offset sub_100A99B  +
push 1Ch  +
push [ebp+entriesread]  +
push [ebp+Buffer]  +
call ds:qsort  +
add esp 10h +
cmp [ebp+entriesread] edi +
jbe loc_100AB92  +
push esi  +
mov esi [ebp+Buffer] +
add esi 18h +
push dword ptr [esi]  +
push offset aFs  +
call sub_1010562  +
pop ecx  +
pop ecx  +
call sub_10108A7  +
inc edi  +
add esi 1Ch +
cmp edi [ebp+entriesread] +
jb loc_100AB75  +
pop esi  +
call sub_10108A7  +
call sub_10108DE  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx lpDateStr +
xor eax eax +
push ebx  +
push esi  +
mov [ecx] ax +
mov esi lpDateStr +
push edi  +
mov [ebp+var_8] eax +
cmp dword_101FC80 eax +
jz loc_100AC89  +
mov edi offset dword_101FC80 +
mov [ebp+var_4] eax +
cmp off_1020EB0 eax +
jz loc_100AC74  +
mov ecx offset off_1020EB0 +
mov eax dword_1020EB4[eax] +
test eax eax +
jz loc_100AC08  +
mov ecx eax +
jmp loc_100AC0A  +
mov ecx [ecx] +
mov eax ecx +
lea ebx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AC0F  +
sub eax ebx +
sar eax 1 +
push eax  +
push dword ptr [edi]  +
push ecx  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_100AC5E  +
push dword ptr [edi]  +
mov eax esi +
sub eax lpDateStr +
mov ecx 1000h +
sar eax 1 +
sub ecx eax +
push ecx  +
push esi  +
call wcscpy_s  +
mov eax [edi] +
xor ecx ecx +
push ecx  +
push esi  +
mov [eax] cx +
call ds:wcschr  +
add esp 14h +
inc eax  +
inc eax  +
mov esi eax +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
imul eax eax +
lea ecx off_1020EB0[eax] +
cmp dword ptr [ecx] 0 +
jnz loc_100ABFA  +
xor eax eax +
inc [ebp+var_8]  +
mov edi [ebp+var_8] +
lea edi dword_101FC80[edi*4] +
cmp [edi] eax +
jnz loc_100ABEA  +
xor ecx ecx +
mov [esi] cx +
cmp [ebp+arg_0] eax +
jz loc_100AD43  +
mov ebx lpDateStr +
mov edi offset aComputername +
cmp [ebx] ax +
jz loc_100ACDF  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100ACAC  +
sub eax edx +
sar eax 1 +
push eax  +
push ebx  +
push edi  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_100ACDF  +
push 0  +
push ebx  +
call ds:wcschr  +
inc eax  +
inc eax  +
mov ebx eax +
cmp word ptr [ebx] 0 +
pop ecx  +
pop ecx  +
jnz loc_100ACA7  +
cmp ebx esi +
jnz loc_100AD43  +
push edi  +
mov eax esi +
sub eax lpDateStr +
mov edi 1000h +
sar eax 1 +
mov ecx edi +
sub ecx eax +
push ecx  +
push esi  +
call wcscpy_s  +
mov eax esi +
sub eax lpDateStr +
mov ecx edi +
sar eax 1 +
push offset Default  +
sub ecx eax +
push ecx  +
push esi  +
call wcscat_s  +
push [ebp+arg_0]  +
mov eax esi +
sub eax lpDateStr +
sar eax 1 +
sub edi eax +
push edi  +
push esi  +
call wcscat_s  +
push 0  +
push esi  +
call ds:wcschr  +
add esp 2Ch +
inc eax  +
inc eax  +
mov esi eax +
xor eax eax +
mov [esi] ax +
sub esi lpDateStr +
sar esi 1 +
push esi  +
push lpServiceName  +
call sub_10028B8  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor ebx ebx +
push ebx  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
push ebx  +
call NetServiceEnum  +
cmp eax ebx +
jz loc_100AD90  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] ebx +
jnz loc_100AD9A  +
call sub_1010959  +
push 111Bh  +
call sub_10108F6  +
mov esi [ebp+Buffer] +
cmp [ebp+entriesread] ebx +
jbe loc_100ADFC  +
push edi  +
xor edi edi +
cmp off_1020550 edi +
jz loc_100ADF2  +
mov eax offset off_1020550 +
push dword ptr [esi]  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100ADDE  +
inc edi  +
movzx eax di +
lea eax off_1020550[eax*4] +
cmp dword ptr [eax] 0 +
jz loc_100ADF2  +
jmp loc_100ADBC  +
push dword ptr [esi+18h]  +
push offset aFws  +
call sub_1010562  +
pop ecx  +
pop ecx  +
call sub_10108A7  +
inc ebx  +
add esi 1Ch +
cmp ebx [ebp+entriesread] +
jb loc_100ADAD  +
pop edi  +
call sub_10108A7  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+Buffer] +
push eax  +
push 0Ah  +
call sub_1010F03  +
test eax eax +
jz loc_100AE51  +
xor eax eax +
mov word ptr [ebp+var_210] ax +
jmp loc_100AE78  +
mov eax [ebp+Buffer] +
push dword ptr [eax]  +
lea eax [ebp+var_210] +
push 105h  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push esi  +
xor esi esi +
push esi  +
push esi  +
push edi  +
push esi  +
call NetStatisticsGet  +
pop edi  +
cmp eax esi +
pop esi  +
jz loc_100AE90  +
push eax  +
call sub_100295A  +
lea eax [ebp+var_210] +
push eax  +
movzx eax [ebp+arg_4] +
push eax  +
call sub_1010933  +
call sub_10108A7  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AECB  +
and [ebp+var_4] ebx +
sub eax ecx +
mov ecx [ebp+arg_0] +
sar eax 1 +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
sub eax ecx +
mov edx [ebp+var_8] +
cmp [ebp+var_4] edx +
jb loc_100AF02  +
test ebx ebx +
jz loc_100AF3A  +
xor edx edx +
movzx edi word ptr [ecx] +
test di di +
jz loc_100AF0F  +
movzx esi di +
jmp loc_100AF12  +
mov dx [eax+ecx] +
sub dx 30h +
movzx edx dx +
jmp loc_100AEF5  +
push 30h  +
pop esi  +
add esi ebx +
add edx esi +
xor ebx ebx +
cmp dx 39h +
jbe loc_100AF25  +
inc ebx  +
add edx 0FFF6h +
test di di +
jnz loc_100AF30  +
xor esi esi +
mov [ecx+2] si +
inc [ebp+var_4]  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
jmp loc_100AEE7  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_10] 0FFFFFFFFh +
movzx eax [ebp+arg_C] +
jnz loc_100AF77  +
push dword_1020674  +
push 0  +
push dword_10205FC[eax*8]  +
push [ebp+arg_8]  +
call sub_10108BB  +
push eax  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
jmp loc_100AF94  +
push [ebp+arg_10]  +
push 0  +
push dword_10205FC[eax*8]  +
push [ebp+arg_8]  +
call sub_10108BB  +
push eax  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_0]  +
call sub_1010562  +
add esp 14h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_10] 0FFFFFFFFh +
movzx eax [ebp+arg_C] +
jnz loc_100AFD6  +
push dword_10205F4  +
push 0  +
push dword_1020564[eax*8]  +
push [ebp+arg_8]  +
call sub_10108BB  +
push eax  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
jmp loc_100AFF3  +
push [ebp+arg_10]  +
push 0  +
push dword_1020564[eax*8]  +
push [ebp+arg_8]  +
call sub_10108BB  +
push eax  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_0]  +
call sub_1010562  +
add esp 14h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
push [ebp+arg_0]  +
call ds:RtlTimeToSecondsSince1970  +
test al al +
jnz loc_100B023  +
and dword ptr [esi] 0 +
push 57h  +
pop eax  +
jmp loc_100B025  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A4h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi ds:_ultow +
push 0Ah  +
push ebx  +
push [ebp+arg_4]  +
call edi  +
mov esi ds:_wcsrev +
push ebx  +
call esi  +
push 0Ah  +
lea eax [ebp+var_54] +
push eax  +
push 0FFFFFFFFh  +
call edi  +
lea eax [ebp+var_54] +
push eax  +
call esi  +
add esp 20h +
push offset dword_100B0CC  +
lea eax [ebp+var_54] +
push eax  +
call sub_100AEB9  +
test byte ptr [ebp+arg_0] 1 +
jz loc_100B092  +
lea eax [ebp+var_54] +
push eax  +
push ebx  +
call sub_100AEB9  +
shr [ebp+arg_0] 1 +
jz loc_100B0B5  +
lea eax [ebp+var_54] +
push eax  +
lea eax [ebp+var_A4] +
push 28h  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
lea eax [ebp+var_A4] +
push eax  +
jmp loc_100B079  +
push ebx  +
call esi  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_54] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
call sub_100B02F  +
push eax  +
movzx eax [ebp+arg_8] +
push 0  +
push dword_1020564[eax*8]  +
push [ebp+arg_4]  +
call sub_10108BB  +
push eax  +
push [ebp+arg_4]  +
push 0  +
push esi  +
call sub_1010562  +
mov ecx [ebp+var_4] +
add esp 14h +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea eax [ebp+var_98] +
push eax  +
push offset unk_10205F8  +
push 10h  +
call sub_1010ADF  +
push bufptr  +
add [ebp+var_98] 5 +
call sub_100A9CD  +
lea eax [ebp+Buffer] +
push eax  +
push 1210h  +
push bufptr  +
call sub_100AE17  +
push 1Eh  +
lea eax [ebp+DateStr] +
push eax  +
push [ebp+Buffer]  +
call sub_100C1F9  +
lea eax [ebp+DateStr] +
push eax  +
push 1211h  +
call sub_1010933  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+10h]  +
xor edi edi +
push edi  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
mov eax [ebp+Buffer] +
push dword ptr [eax+14h]  +
push 1  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
mov eax [ebp+Buffer] +
push dword ptr [eax+18h]  +
push 2  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
cmp dword ptr [eax+2Ch] 0FFFFFFFFh +
mov esi 200h +
jnz loc_100B235  +
cmp dword ptr [eax+28h] 0FFFFFFFFh +
jnz loc_100B235  +
push dword_1020674  +
jmp loc_100B285  +
test [eax+28h] esi +
jz loc_100B251  +
add [eax+28h] esi +
mov eax [ebp+Buffer] +
cmp [eax+28h] edi +
jnz loc_100B251  +
inc dword ptr [eax+2Ch]  +
mov eax [ebp+Buffer] +
mov ecx [eax+2Ch] +
mov edx [eax+28h] +
shl ecx 16h +
shr edx 0Ah +
or ecx edx +
mov [eax+28h] ecx +
mov eax [ebp+Buffer] +
shr dword ptr [eax+2Ch] 0Ah +
lea eax [ebp+var_90] +
push eax  +
mov eax [ebp+Buffer] +
push dword ptr [eax+28h]  +
push dword ptr [eax+2Ch]  +
call sub_100B02F  +
push eax  +
push edi  +
push dword_1020614  +
push [ebp+var_98]  +
call sub_10108BB  +
push eax  +
push [ebp+var_98]  +
push edi  +
push off_1020994  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jnz loc_100B2C7  +
cmp dword ptr [eax+30h] 0FFFFFFFFh +
jnz loc_100B2C7  +
push dword_1020674  +
jmp loc_100B317  +
test [eax+30h] esi +
jz loc_100B2E3  +
add [eax+30h] esi +
mov eax [ebp+Buffer] +
cmp [eax+30h] edi +
jnz loc_100B2E3  +
inc dword ptr [eax+34h]  +
mov eax [ebp+Buffer] +
mov ecx [eax+34h] +
mov edx [eax+30h] +
shl ecx 16h +
shr edx 0Ah +
or ecx edx +
mov [eax+30h] ecx +
mov eax [ebp+Buffer] +
shr dword ptr [eax+34h] 0Ah +
lea eax [ebp+var_90] +
push eax  +
mov eax [ebp+Buffer] +
push dword ptr [eax+30h]  +
push dword ptr [eax+34h]  +
call sub_100B02F  +
push eax  +
push edi  +
push dword_102061C  +
push [ebp+var_98]  +
call sub_10108BB  +
push eax  +
push [ebp+var_98]  +
push edi  +
push off_1020994  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+38h]  +
push 5  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+24h]  +
push 7  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
mov eax [ebp+Buffer] +
push dword ptr [eax+20h]  +
push 8  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
mov eax [ebp+Buffer] +
push dword ptr [eax+1Ch]  +
push 9  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+4]  +
push 0Ah  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
mov eax [ebp+Buffer] +
push dword ptr [eax+8]  +
push 0Bh  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0Ch]  +
push 0Ch  +
push [ebp+var_98]  +
push off_1020994  +
push off_102099C  +
call sub_100AF46  +
call sub_10108A7  +
push 120Ch  +
call sub_10108F6  +
mov eax [ebp+Buffer] +
push dword ptr [eax+40h]  +
mov eax [ebp+var_98] +
push 0Dh  +
add eax 0FFFFFFFEh +
push eax  +
mov edi offset a_WsWs +
push edi  +
mov esi offset a_WsLu +
push esi  +
call sub_100AF46  +
mov eax [ebp+Buffer] +
push dword ptr [eax+3Ch]  +
mov eax [ebp+var_98] +
push 0Eh  +
add eax 0FFFFFFFEh +
push eax  +
push edi  +
push esi  +
call sub_100AF46  +
call sub_10108A7  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 90h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+var_8C] +
push eax  +
push offset unk_1020560  +
push 13h  +
call sub_1010ADF  +
push lpServiceName  +
add [ebp+var_8C] 5 +
call sub_100A9CD  +
lea eax [ebp+Buffer] +
push eax  +
push 120Fh  +
push lpServiceName  +
call sub_100AE17  +
lea eax [ebp+var_90] +
push eax  +
push [ebp+Buffer]  +
call sub_100B004  +
test eax eax +
lea eax [ebp+var_84] +
jz loc_100B53B  +
push 10E1h  +
push 40h  +
push eax  +
call sub_1012E19  +
test eax eax +
jz loc_100B54A  +
push eax  +
call sub_100295A  +
jmp loc_100B54A  +
push 1Eh  +
push eax  +
lea eax [ebp+var_90] +
push eax  +
call sub_100C1F9  +
push esi  +
push edi  +
lea eax [ebp+var_84] +
push eax  +
push 1211h  +
call sub_1010933  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+8]  +
mov esi offset a_WsWs +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+var_8C]  +
push esi  +
call sub_100B0D5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
push 1  +
push [ebp+var_8C]  +
push esi  +
call sub_100B0D5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+38h]  +
push dword ptr [eax+3Ch]  +
push 2  +
push [ebp+var_8C]  +
push esi  +
call sub_100B0D5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+40h]  +
push dword ptr [eax+44h]  +
push 3  +
push [ebp+var_8C]  +
push esi  +
call sub_100B0D5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+70h]  +
mov edi offset a_WsLu +
push 4  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+84h]  +
push 5  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+98h]  +
push 6  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+9Ch]  +
push 7  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0A0h]  +
push 8  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
mov ecx [eax+0BCh] +
add ecx [eax+0B8h] +
add ecx [eax+0B4h] +
add ecx [eax+0B0h] +
push ecx  +
push 9  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0ACh]  +
push 0Ah  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0C0h]  +
push 0Bh  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0A4h]  +
push 0Ch  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0C4h]  +
push 0Dh  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0A8h]  +
push 0Eh  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
mov ecx [eax+6Ch] +
add ecx [eax+68h] +
push ecx  +
push 0Fh  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0C8h]  +
push 10h  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
mov eax [ebp+Buffer] +
push dword ptr [eax+0CCh]  +
push 11h  +
push [ebp+var_8C]  +
push esi  +
push edi  +
call sub_100AFA5  +
call sub_10108A7  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpDisplayName]  +
call sub_10016E3  +
push eax  +
call sub_1001741  +
dec eax  +
dec eax  +
jz loc_100B7BD  +
dec eax  +
jz loc_100B7B6  +
push 0  +
push 0  +
call sub_1011D71  +
jmp loc_100B7C2  +
call sub_100B133  +
jmp loc_100B7C2  +
call sub_100B4B5  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+service] +
push edi  +
xor ebx ebx +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
push esi  +
push ebx  +
mov [ebp+var_8] ebx +
call NetServiceControl  +
cmp eax ebx +
jz loc_100B7F7  +
push eax  +
call sub_100295A  +
jmp loc_100B822  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and eax 3 +
cmp eax 2 +
jz loc_100B80A  +
cmp eax 1 +
jnz loc_100B822  +
push esi  +
call sub_100F4DF  +
push eax  +
push 0DCDh  +
call sub_1010933  +
push 2  +
call sub_1002992  +
cmp [ebp+arg_4] ebx +
jz loc_100B82D  +
push esi  +
call sub_100F7F3  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push 3  +
push esi  +
push ebx  +
call NetServiceControl  +
mov edi eax +
cmp edi ebx +
jz loc_100B847  +
push edi  +
call sub_100295A  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and al 3 +
cmp al 2 +
jnz loc_100B864  +
push esi  +
call sub_100F4DF  +
push eax  +
push 0DC7h  +
call sub_1010933  +
mov eax [ebp+Buffer] +
test byte ptr [eax+4] 3 +
mov [ebp+var_C] ebx +
mov [ebp+arg_4] 8 +
jz loc_100B928  +
mov esi 9C4h +
mov eax [ebp+var_8] +
inc [ebp+var_8]  +
cmp eax [ebp+arg_4] +
jnb loc_100B925  +
call sub_1010892  +
mov ecx [ebp+Buffer] +
mov edx [ecx+4] +
mov eax [ecx+8] +
and dl 3 +
movzx edi al +
cmp dl 2 +
jnz loc_100B8D8  +
test eax 10000h +
jz loc_100B8D8  +
cmp edi [ebp+var_C] +
jz loc_100B8D8  +
movzx ecx byte ptr [ecx+9] +
shr eax 0Ch +
and eax 0FF00h +
or eax ecx +
imul eax eax +
cmp eax esi +
jbe loc_100B8DA  +
imul eax eax +
xor edx edx +
mov ecx esi +
div  ecx +
mov [ebp+var_8] ebx +
mov [ebp+arg_4] eax +
mov eax esi +
push eax  +
mov [ebp+var_C] edi +
call ds:Sleep  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
push [ebp+service]  +
push ebx  +
call NetServiceControl  +
mov edi eax +
cmp edi ebx +
jz loc_100B90F  +
cmp edi 888h +
jz loc_100B925  +
push edi  +
call sub_100295A  +
mov eax [ebp+Buffer] +
mov eax [eax+4] +
and eax 3 +
cmp eax 3 +
jz loc_100B925  +
cmp eax ebx +
jnz loc_100B880  +
mov esi [ebp+service] +
call sub_10108A7  +
cmp edi ebx +
jnz loc_100B99E  +
mov eax [ebp+Buffer] +
test byte ptr [eax+4] 3 +
jz loc_100B95B  +
push esi  +
call sub_100F4DF  +
push [ebp+Buffer]  +
mov dword_1019DD8 eax +
call NetApiBufferFree  +
push esi  +
call sub_100F4DF  +
push eax  +
push 0DC8h  +
jmp loc_100B9AA  +
cmp [eax+8] ebx +
jz loc_100B998  +
movzx edx word ptr [eax+0Ah] +
movzx ecx word ptr [eax+8] +
mov [eax+8] edx +
mov eax [ebp+Buffer] +
movzx edx word ptr [eax+8] +
mov edi 42Ah +
cmp cx di +
jnz loc_100B98B  +
cmp dx bx +
jz loc_100B98B  +
push dword ptr [eax+14h]  +
call sub_100BC71  +
jmp loc_100B995  +
push dword ptr [eax+10h]  +
push ecx  +
push edx  +
call sub_100BA38  +
mov eax [ebp+Buffer] +
push eax  +
call NetApiBufferFree  +
push esi  +
call sub_100F4DF  +
push eax  +
push 0DC9h  +
call sub_1010933  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call sub_1008644  +
push 1  +
push bufptr  +
call sub_100B7CB  +
retn   +
***
call sub_100F54D  +
push 1  +
push lpServiceName  +
call sub_100B7CB  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpDisplayName]  +
call sub_10016E3  +
mov esi eax +
push esi  +
call sub_1001741  +
dec eax  +
jz loc_100BA21  +
dec eax  +
jz loc_100BA1A  +
dec eax  +
jz loc_100BA13  +
push 1  +
push esi  +
jmp loc_100BA29  +
call sub_100B9BB  +
jmp loc_100BA2E  +
call sub_100B9D7  +
jmp loc_100BA2E  +
push 1  +
push off_102095C  +
call sub_100B7CB  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3D0h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
movzx edi [ebp+arg_0] +
mov eax 0BF1h +
cmp edi eax +
jg loc_100BB2B  +
jz loc_100BC47  +
xor ebx ebx +
cmp edi ebx +
jz loc_100BB20  +
cmp edi 0BEAh +
jle loc_100BC5B  +
cmp edi 0BEDh +
jle loc_100BC4B  +
cmp edi 0BEFh +
jle loc_100BAB9  +
cmp edi 0BF0h +
jnz loc_100BC5B  +
push ebx  +
push edi  +
call sub_1001C11  +
cmp [ebp+arg_4] bx +
jz loc_100BC5B  +
movzx eax [ebp+arg_4] +
push ebx  +
push eax  +
jmp loc_100BC56  +
lea eax [ebp+var_3D0] +
push eax  +
movzx eax [ebp+arg_4] +
push offset aNetmsg  +
push eax  +
mov esi 0F1h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
call sub_1001EAF  +
test eax eax +
jz loc_100BAF1  +
mov dword_1019DD8 offset username +
jmp loc_100BC53  +
lea eax [ebp+Buffer] +
mov dword_1019DD8 eax +
mov eax [ebp+var_3D0] +
cmp eax esi +
jnb loc_100BB15  +
xor ecx ecx +
mov [ebp+eax*2+Buffer] cx +
jmp loc_100BC53  +
xor eax eax +
mov [ebp+var_8] ax +
jmp loc_100BC53  +
push ebx  +
push 0DCEh  +
jmp loc_100BC56  +
cmp edi 0BF2h +
jl loc_100BC5B  +
cmp edi 0BF3h +
jle loc_100BC4B  +
cmp edi 0BF5h +
jle loc_100BC47  +
cmp edi 0BF7h +
jle loc_100BC4B  +
cmp edi 0BF8h +
jnz loc_100BC5B  +
mov eax [ebp+arg_8] +
lea edx [eax+2] +
xor ebx ebx +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100BB6F  +
sub eax edx +
sar eax 1 +
mov edi offset aNetmsg +
mov esi 0F1h +
jz loc_100BB93  +
mov eax [ebp+arg_8] +
mov dword_1019DD8 eax +
jmp loc_100BBE6  +
lea eax [ebp+var_3D0] +
push eax  +
push edi  +
push 10FEh  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
call sub_1001EAF  +
test eax eax +
jz loc_100BBBF  +
mov dword_1019DD8 offset username +
jmp loc_100BBE6  +
lea eax [ebp+Buffer] +
mov dword_1019DD8 eax +
mov eax [ebp+var_3D0] +
cmp eax esi +
jnb loc_100BBE0  +
xor ecx ecx +
mov [ebp+eax*2+Buffer] cx +
jmp loc_100BBE6  +
xor eax eax +
mov [ebp+var_8] ax +
lea eax [ebp+var_3D0] +
push eax  +
movzx eax [ebp+arg_4] +
push edi  +
push eax  +
push esi  +
lea eax [ebp+var_3CC] +
push eax  +
push ebx  +
push ebx  +
call sub_1001EAF  +
test eax eax +
jz loc_100BC12  +
mov dword_1019DDC offset username +
jmp loc_100BC3C  +
lea eax [ebp+var_3CC] +
mov dword_1019DDC eax +
mov eax [ebp+var_3D0] +
cmp eax esi +
jnb loc_100BC33  +
xor ecx ecx +
mov word ptr [ebp+eax*2+var_3CC] cx +
jmp loc_100BC3C  +
xor eax eax +
mov [ebp+var_1EC] ax +
movzx eax [ebp+arg_0] +
push 2  +
jmp loc_100BAB3  +
push 0  +
jmp loc_100BC55  +
mov eax [ebp+arg_8] +
mov dword_1019DD8 eax +
push 1  +
push edi  +
call sub_1001C11  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push 0Ah  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+arg_0]  +
call ds:_ultow  +
add esp 0Ch +
push 1  +
lea eax [ebp+var_54] +
push 0DDBh  +
mov dword_1019DD8 eax +
call sub_1001C11  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_101FC80 +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor edi edi +
test eax eax +
jz loc_100BD18  +
mov esi offset dword_101FC80 +
push offset aRtsdomain  +
push eax  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
cmp eax [esi] +
jz loc_100BCFA  +
inc edi  +
lea esi dword_101FC80[edi*4] +
mov eax [esi] +
test eax eax +
jz loc_100BD18  +
jmp loc_100BCD8  +
mov ebx dword_101FC80[edi*4] +
test ebx ebx +
jz loc_100BD18  +
push 3Ah  +
push ebx  +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_100BD18  +
inc ebx  +
inc ebx  +
push ebx  +
push 20h  +
lea eax [ebp+entriesread] +
push eax  +
lea eax [ebp+bufptr] +
push eax  +
push 64h  +
push 0  +
call sub_1011141  +
test eax eax +
jnz loc_100BD78  +
cmp [ebp+entriesread] eax +
jz loc_100BD7A  +
cmp [ebp+arg_8] eax +
jz loc_100BD44  +
cmp [ebp+entriesread] 1 +
jbe loc_100BD7A  +
add [ebp+bufptr] 4 +
movzx esi [ebp+arg_4] +
mov edi [ebp+arg_0] +
push offset asc_1003854  +
push esi  +
push edi  +
call wcscpy_s  +
mov eax [ebp+bufptr] +
push 0FFFFFFFFh  +
push dword ptr [eax]  +
add esi 0FFFFFFFEh +
push esi  +
add edi 4 +
push edi  +
call wcsncpy_s  +
add esp 1Ch +
push [ebp+bufptr]  +
call NetApiBufferFree  +
jmp loc_100BDB9  +
xor eax eax +
lea ecx [ebp+arg_8] +
push ecx  +
xor ecx ecx +
cmp [ebp+arg_8] eax +
setnz cl  +
add ecx 800h +
push ecx  +
push eax  +
push eax  +
push ebx  +
push eax  +
call ds:DsGetDcNameW  +
test eax eax +
jz loc_100BDA2  +
mov eax 0F48h +
jmp loc_100BDBB  +
mov eax [ebp+arg_8] +
push 0FFFFFFFFh  +
push dword ptr [eax]  +
movzx eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
call wcsncpy_s  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_101FC80 +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_4] edi +
cmp eax edi +
jz loc_100BE25  +
mov esi offset dword_101FC80 +
push offset aDomain  +
push eax  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
cmp eax [esi] +
jz loc_100BE07  +
inc edi  +
lea esi dword_101FC80[edi*4] +
mov eax [esi] +
test eax eax +
jz loc_100BE25  +
jmp loc_100BDE5  +
mov ebx dword_101FC80[edi*4] +
test ebx ebx +
jz loc_100BE25  +
push 3Ah  +
push ebx  +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_100BE25  +
inc ebx  +
inc ebx  +
lea eax [ebp+var_4] +
push eax  +
push 20h  +
xor eax eax +
push eax  +
push eax  +
push ebx  +
push eax  +
call ds:DsGetDcNameW  +
test eax eax +
jnz loc_100BE47  +
mov eax [ebp+var_4] +
mov eax [eax] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
jmp loc_100BE7E  +
test ebx ebx +
jnz loc_100BE6C  +
mov esi [ebp+arg_0] +
push esi  +
push 0Ah  +
call sub_1010F03  +
test eax eax +
jz loc_100BE60  +
push eax  +
call sub_100295A  +
mov eax [esi] +
mov eax [eax+8] +
mov dword_1019DD8 eax +
jmp loc_100BE72  +
mov dword_1019DD8 ebx +
push 1  +
push 0F49h  +
call sub_1002972  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_C] 0FFFFFFFFh +
mov [ebp+var_4] edi +
jz loc_100BEAC  +
mov eax [ebp+arg_0] +
mov eax [eax] +
sub eax [ebp+arg_C] +
jmp loc_100BEBD  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax]  +
call sub_101475E  +
mov eax [ebp+arg_0] +
mov [ebp+arg_C] eax +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
call sub_10145C2  +
mov eax [ebp+var_24] +
mov esi [ebp+cchDate] +
mov ebx [ebp+lpDateStr] +
add eax 76Ch +
mov [ebp+Time.wYear] ax +
mov eax [ebp+var_28] +
inc eax  +
mov [ebp+Time.wMonth] ax +
mov ax [ebp+var_2C] +
mov [ebp+Time.wDay] ax +
mov ax [ebp+var_30] +
mov [ebp+Time.wHour] ax +
mov ax [ebp+var_34] +
mov [ebp+Time.wMinute] ax +
mov ax word ptr [ebp+var_38] +
push esi  +
mov [ebp+Time.wSecond] ax +
xor eax eax +
push ebx  +
push edi  +
mov [ebp+Time.wMilliseconds] ax +
lea eax [ebp+Time] +
push eax  +
push edi  +
mov edi ds:GetUserDefaultLCID +
call edi  +
push eax  +
call ds:GetDateFormatW  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100BF55  +
push 20h  +
pop ecx  +
sub esi eax +
push esi  +
lea ebx [ebx+eax*2] +
push ebx  +
push 0  +
lea eax [ebp+Time] +
push eax  +
push 0  +
mov [ebx-2] cx +
call edi  +
push eax  +
call ds:GetTimeFormatW  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100BF55  +
mov [ebx-2] ax +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
pop edi  +
pop esi  +
add eax ecx +
pop ebx  +
leave   +
retn 10h  +
***
push offset Default  +
push offset KeyName  +
push offset AppName  +
call ds:GetProfileStringW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_8] 20h +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
jnb loc_100BFB6  +
mov eax 84Bh +
jmp loc_100C0BD  +
push edi  +
call sub_100BF69  +
push 13CAh  +
push 8  +
pop edi  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1012E19  +
test eax eax +
jz loc_100BFE4  +
push offset asc_100C14C  +
lea eax [ebp+Buffer] +
push edi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push 13CBh  +
push edi  +
lea eax [ebp+var_34] +
push eax  +
call sub_1012E19  +
test eax eax +
jz loc_100C009  +
push offset aM  +
lea eax [ebp+var_34] +
push edi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push 13C9h  +
push edi  +
lea eax [ebp+var_24] +
push eax  +
call sub_1012E19  +
test eax eax +
jz loc_100C02E  +
push offset aD_0  +
lea eax [ebp+var_24] +
push edi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
mov eax [esi] +
mov ecx 15180h +
xor edx edx +
cmp eax ecx +
jnb loc_100C06C  +
mov ecx 0E10h +
div  ecx +
push 3Ch  +
pop ecx  +
mov esi eax +
mov eax edx +
xor edx edx +
div  ecx +
mov ecx offset ReturnedString +
push edx  +
push ecx  +
push eax  +
push ecx  +
push esi  +
push offset a2_2luWs2_2luWs  +
lea eax [ebp+var_74] +
push 20h  +
push eax  +
call swprintf_s  +
add esp 20h +
jmp loc_100C0A8  +
div  ecx +
mov esi 0E10h +
mov ecx eax +
mov eax edx +
xor edx edx +
div  esi +
mov esi eax +
lea eax [ebp+var_34] +
push eax  +
push 3Ch  +
pop edi  +
mov eax edx +
xor edx edx +
div  edi +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+var_24] +
push eax  +
push ecx  +
push offset a2_2luWs2_2lu_0  +
lea eax [ebp+var_74] +
push 20h  +
push eax  +
call swprintf_s  +
add esp 24h +
lea eax [ebp+var_74] +
push eax  +
movzx eax [ebp+arg_8] +
push eax  +
push ebx  +
call wcscpy_s  +
add esp 0Ch +
xor eax eax +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
movzx cx byte ptr [eax] +
mov [ebp+SystemTime.wHour] cx +
movzx cx byte ptr [eax+1] +
mov [ebp+SystemTime.wMinute] cx +
movzx cx byte ptr [eax+2] +
mov [ebp+SystemTime.wSecond] cx +
movzx cx byte ptr [eax+3] +
imul cx cx +
mov [ebp+SystemTime.wMilliseconds] cx +
movzx cx byte ptr [eax+4] +
mov [ebp+SystemTime.wDay] cx +
movzx cx byte ptr [eax+5] +
mov [ebp+SystemTime.wMonth] cx +
mov cx [eax+6] +
movzx ax byte ptr [eax+0Ah] +
mov [ebp+SystemTime.wDayOfWeek] ax +
lea eax [ebp+arg_0] +
push eax  +
push 1  +
mov [ebp+SystemTime.wYear] cx +
mov [ebp+arg_0] 0Ch +
call sub_101484E  +
test eax eax +
jz loc_100C1C5  +
push 5  +
pop eax  +
jmp locret_100C1F0  +
cmp [ebp+arg_4] 0 +
lea eax [ebp+SystemTime] +
push eax  +
jz loc_100C1E1  +
call ds:SetLocalTime  +
test eax eax +
jnz loc_100C1E9  +
call ds:GetLastError  +
jmp locret_100C1F0  +
call ds:SetSystemTime  +
jmp loc_100C1D5  +
call sub_1014A17  +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push [ebp+cchDate]  +
push [ebp+lpDateStr]  +
push [ebp+arg_0]  +
call sub_100BE8C  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+UncServerName] +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call NetRemoteTOD  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jnz loc_100C262  +
mov eax [ebp+Buffer] +
mov eax [eax] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_4] +
mov esi 1000h +
push esi  +
mov dword ptr [eax] 1 +
push lpDateStr  +
lea eax [ebp+var_10] +
push eax  +
call sub_100C1F9  +
jmp loc_100C350  +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
add edi 4 +
push edi  +
call sub_100FB33  +
test ax ax +
jz loc_100C27C  +
mov eax esi +
jmp loc_100C420  +
lea eax [ebp+var_7] +
push eax  +
lea eax [ebp+var_7+1] +
push eax  +
lea eax [ebp+var_7+2] +
push eax  +
lea eax [ebp+var_7+3] +
push eax  +
lea eax [ebp-3] +
push eax  +
lea eax [ebp-2] +
push eax  +
lea eax [ebp-1] +
push eax  +
push [ebp+var_10]  +
call sub_100FBC4  +
push [ebp+var_10]  +
movzx edi ax +
call sub_100FB7B  +
cmp di bx +
jnz loc_100C275  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
movzx ax [ebp+var_1] +
mov ecx 76Ch +
add ax cx +
mov [ebp+Time.wYear] ax +
movzx ax [ebp+var_2] +
mov [ebp+Time.wMonth] ax +
movzx ax [ebp+var_3] +
mov edi ds:GetUserDefaultLCID +
mov [ebp+Time.wDay] ax +
movzx ax byte ptr [ebp+var_7+3] +
mov [ebp+Time.wHour] ax +
movzx ax byte ptr [ebp+var_7+2] +
mov [ebp+Time.wMinute] ax +
movzx ax byte ptr [ebp+var_7+1] +
mov esi 1000h +
push esi  +
push lpDateStr  +
mov [ebp+Time.wSecond] ax +
xor eax eax +
mov [ebp+Time.wMilliseconds] ax +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
call edi  +
push eax  +
call ds:GetDateFormatW  +
cmp eax ebx +
jz loc_100C34D  +
mov ebx lpDateStr +
push 20h  +
pop edx  +
lea ecx [eax+eax] +
mov [ecx+ebx-2] dx +
mov edx esi +
sub edx eax +
mov eax lpDateStr +
push edx  +
add ecx eax +
push ecx  +
xor ebx ebx +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
call edi  +
push eax  +
call ds:GetTimeFormatW  +
mov edi [ebp+UncServerName] +
mov eax lpDateStr +
push 2  +
push 0F46h  +
mov dword_1019DD8 edi +
mov dword_1019DDC eax +
call sub_1010914  +
mov eax [ebp+arg_4] +
cmp [eax] ebx +
jz loc_100C416  +
mov eax [ebp+Buffer] +
mov eax [eax+18h] +
imul eax eax +
mov [ebp+UncServerName] eax +
call sub_1014A47  +
cmp eax [ebp+UncServerName] +
jz loc_100C416  +
push [ebp+UncServerName]  +
lea eax [ebp+var_10] +
push esi  +
push lpDateStr  +
push eax  +
call sub_100BE8C  +
mov eax lpDateStr +
mov dword_1019DDC eax +
mov eax [ebp+Buffer] +
mov dword_1019DD8 edi +
mov ecx [eax+18h] +
cmp ecx ebx +
mov esi offset word_1021B14 +
jge loc_100C3DE  +
push 3Ch  +
mov eax ecx +
neg eax  +
pop edi  +
cdq   +
idiv  edi +
mov eax ecx +
push edx  +
push 0FFFFFFC4h  +
pop ecx  +
cdq   +
idiv  ecx +
push eax  +
push offset a02u02u  +
jmp loc_100C3EF  +
jle loc_100C3FC  +
push 3Ch  +
mov eax ecx +
pop ecx  +
cdq   +
idiv  ecx +
push edx  +
push eax  +
push offset a02u02u_0  +
push 7  +
push esi  +
call swprintf_s  +
add esp 14h +
jmp loc_100C404  +
xor eax eax +
mov word_1021B14 ax +
push 3  +
push 0F4Ah  +
mov dword_1019DE0 esi +
call sub_1010914  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1021AD0 +
sub esp 1Ch +
push ebx  +
xor ebx ebx +
sub eax ebx +
push esi  +
mov esi [ebp+arg_0] +
jz loc_100C47F  +
dec eax  +
dec eax  +
jnz loc_100C4C2  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 8  +
call sub_101472C  +
push 1000h  +
push lpDateStr  +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
call sub_100C1F9  +
mov eax lpDateStr +
push 1  +
push 0F47h  +
push 2  +
push offset dword_1019DD8  +
mov dword_1019DD8 eax +
mov dword_1019DDC esi +
call sub_1012FAB  +
test eax eax +
jz loc_100C477  +
cmp [ebp+arg_4] ebx +
jz loc_100C52F  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call NetRemoteTOD  +
cmp eax ebx +
jnz loc_100C479  +
mov eax [ebp+Buffer] +
mov cl [eax+8] +
mov [ebp+var_1C] cl +
mov cl [eax+0Ch] +
mov [ebp+var_1B] cl +
mov cl [eax+10h] +
mov [ebp+var_1A] cl +
mov cl [eax+14h] +
mov [ebp+var_19] cl +
mov cl [eax+20h] +
mov [ebp+var_18] cl +
mov cl [eax+24h] +
mov [ebp+var_17] cl +
mov cx [eax+28h] +
mov [ebp+var_16] cx +
mov cx [eax+18h] +
mov [ebp+var_14] cx +
mov cl [eax+2Ch] +
push eax  +
mov [ebp+var_12] cl +
call NetApiBufferFree  +
push ebx  +
lea eax [ebp+var_1C] +
push eax  +
call sub_100C155  +
cmp eax ebx +
jnz loc_100C479  +
jmp loc_100C477  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
add esi 4 +
push esi  +
call sub_100FB33  +
test ax ax +
jz loc_100C54A  +
push 35h  +
pop eax  +
jmp loc_100C479  +
lea eax [ebp+var_5] +
push eax  +
lea eax [ebp-1] +
push eax  +
lea eax [ebp+arg_4+3] +
push eax  +
lea eax [ebp+arg_0+3] +
push eax  +
lea eax [ebp+var_5+3] +
push eax  +
lea eax [ebp+var_5+2] +
push eax  +
lea eax [ebp+var_5+1] +
push eax  +
push [ebp+var_C]  +
call sub_100FBC4  +
push [ebp+var_C]  +
movzx esi ax +
call sub_100FB7B  +
cmp si bx +
jnz loc_100C542  +
mov al byte ptr [ebp+arg_0+3] +
mov [ebp+var_1C] al +
mov al byte ptr [ebp+arg_4+3] +
mov [ebp+var_1B] al +
mov al [ebp+var_1] +
mov [ebp+var_1A] al +
mov al byte ptr [ebp+var_5+3] +
mov [ebp+var_18] al +
mov al byte ptr [ebp+var_5+2] +
mov [ebp+var_17] al +
movzx ax byte ptr [ebp+var_5+1] +
mov ecx 76Ch +
add ax cx +
mov [ebp+var_16] ax +
xor eax eax +
mov [ebp+var_19] bl +
mov [ebp+var_14] ax +
mov [ebp+var_12] bl +
push 1  +
jmp loc_100C519  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+UncServerName]  +
mov [ebp+var_4] 1 +
call sub_100C217  +
test eax eax +
jnz locret_100C5F8  +
cmp [ebp+arg_4] eax +
jz loc_100C5F6  +
push [ebp+var_4]  +
push [ebp+UncServerName]  +
call sub_100C45B  +
test eax eax +
jnz locret_100C5F8  +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+UncServerName]  +
call sub_100C5C5  +
test eax eax +
jz loc_100C61B  +
push eax  +
call sub_100295A  +
call sub_10108DE  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+UncServerName] +
push eax  +
call sub_100BDC7  +
movzx eax ax +
test ax ax +
jz loc_100C649  +
movzx eax ax +
push eax  +
call sub_100295A  +
push [ebp+arg_0]  +
push [ebp+UncServerName]  +
call sub_100C5C5  +
test eax eax +
jz loc_100C65E  +
push eax  +
call sub_100295A  +
call sub_10108DE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 0  +
mov esi 0FFh +
push esi  +
lea eax [ebp+UncServerName] +
push eax  +
call sub_100BCBC  +
test eax eax +
jz loc_100C6A0  +
push eax  +
call sub_100295A  +
push [ebp+arg_0]  +
lea eax [ebp+UncServerName] +
push eax  +
call sub_100C5C5  +
cmp eax 40h +
jz loc_100C6B9  +
cmp eax 35h +
jnz loc_100C6E1  +
push 1  +
push esi  +
lea eax [ebp+UncServerName] +
push eax  +
call sub_100BCBC  +
test eax eax +
jz loc_100C6D2  +
push eax  +
call sub_100295A  +
push [ebp+arg_0]  +
lea eax [ebp+UncServerName] +
push eax  +
call sub_100C5C5  +
pop esi  +
test eax eax +
jz loc_100C6EC  +
push eax  +
call sub_100295A  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 1  +
push 0  +
push 0  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
test eax eax +
jz loc_100C73E  +
push eax  +
call sub_100295A  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
push esi  +
lea eax [ebp+servername] +
push eax  +
call NetUserGetInfo  +
test eax eax +
jnz loc_100C783  +
mov eax [ebp+Buffer] +
test dword ptr [eax+18h] 3800h +
jz loc_100C778  +
push eax  +
call NetApiBufferFree  +
push esi  +
push 0EABh  +
call sub_101081B  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push esi  +
lea eax [ebp+servername] +
push eax  +
call NetUserDel  +
mov esi eax +
test esi esi +
jz loc_100C7B2  +
cmp esi 35h +
jnz loc_100C7AC  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push esi  +
call sub_100295A  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 110h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
push 0FEh  +
push eax  +
mov [ebp+DateStr] ax +
lea eax [ebp-102h] +
push eax  +
mov [ebp+var_10C] offset username +
call memset  +
mov eax [ebp+arg_4] +
cdq   +
mov esi 15180h +
mov ecx esi +
idiv  ecx +
add esp 0Ch +
mov ebx eax +
mov eax dword_1020794[ebx*8] +
mov [ebp+var_110] eax +
lea eax [ebp+var_108] +
push eax  +
add edx 337F9800h +
push edx  +
call sub_1014786  +
mov edi 80h +
push edi  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+var_108] +
push eax  +
call sub_100C1F9  +
cmp [ebp+DateStr] 0 +
lea eax [ebp+DateStr] +
jz loc_100C87A  +
movzx ecx [ebp+DateStr] +
cmp cx 20h +
jnz loc_100C87A  +
inc eax  +
inc eax  +
movzx ecx word ptr [eax] +
test cx cx +
jnz loc_100C86A  +
push 20h  +
push eax  +
call ds:wcschr  +
cmp [ebp+arg_C] 0 +
pop ecx  +
pop ecx  +
mov ecx dword_102071C +
jnz loc_100C897  +
mov ecx [ebp+var_10C] +
push eax  +
push [ebp+var_110]  +
push 0  +
push ecx  +
push [ebp+arg_0]  +
call sub_10108BB  +
push eax  +
push offset aWsWsFws  +
call sub_1010562  +
mov eax [ebp+arg_8] +
cdq   +
idiv  esi +
add esp 10h +
push 7  +
pop ecx  +
mov esi edx +
cdq   +
idiv  ecx +
cmp edx ebx +
jz loc_100C8DC  +
push dword_1020794[edx*8]  +
push offset aWs_1  +
call sub_1010562  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_108] +
push eax  +
add esi 337F9800h +
push esi  +
call sub_1014786  +
push edi  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+var_108] +
push eax  +
call sub_100C1F9  +
cmp [ebp+DateStr] 0 +
pop edi  +
pop esi  +
lea eax [ebp+DateStr] +
pop ebx  +
jz loc_100C92D  +
movzx ecx [ebp+DateStr] +
cmp cx 20h +
jnz loc_100C92D  +
inc eax  +
inc eax  +
movzx ecx word ptr [eax] +
test cx cx +
jnz loc_100C91D  +
push 20h  +
push eax  +
call ds:wcschr  +
push eax  +
push offset aFws_4  +
call sub_1010562  +
mov ecx [ebp+var_4] +
xor ecx ebp +
add esp 10h +
call sub_1002D45  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
call sub_1010C1E  +
test eax eax +
jz loc_100C979  +
push [ebp+arg_4]  +
push 0F70h  +
call sub_101081B  +
xor eax eax +
cmp [ebp+arg_0] 1 +
setz al  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
push [ebp+Buffer]  +
call NetUserModalsGet  +
test eax eax +
jz loc_100C9A9  +
cmp eax 0EAh +
jnz loc_100C9F0  +
call sub_101472C  +
sub eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+Buffer] +
mov [ecx] eax +
mov ecx [edx+4] +
cmp ecx 0FFFFFFFFh +
jnz loc_100C9C9  +
mov ecx [ebp+arg_8] +
or dword ptr [ecx] 0FFFFFFFFh +
jmp loc_100C9D2  +
push edi  +
mov edi [ebp+arg_8] +
add ecx eax +
mov [edi] ecx +
pop edi  +
mov ecx [edx+8] +
cmp ecx 0FFFFFFFFh +
jnz loc_100C9E1  +
mov eax [ebp+arg_C] +
or [eax] ecx +
jmp loc_100C9E8  +
add ecx eax +
mov eax [ebp+arg_C] +
mov [eax] ecx +
push edx  +
call NetApiBufferFree  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx eax +
cdq   +
push ebx  +
xor ebx ebx +
and ecx 7 +
inc ebx  +
and edx 7 +
add eax edx +
shl ebx cl +
mov ecx [ebp+arg_0] +
sar eax 3 +
mov al [eax+ecx] +
test bl al +
push 0  +
pop eax  +
setnz al  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1021FB4 +
test eax eax +
jnz loc_100CAE0  +
push 15h  +
call ds:malloc  +
pop ecx  +
mov dword_1021FB4 eax +
test eax eax +
jnz loc_100CA5B  +
push 85Ch  +
call sub_100295A  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push offset aAll  +
push esi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100CA77  +
or eax 0FFFFFFFFh +
jmp loc_100CACD  +
cmp word ptr [esi] 0 +
jz loc_100CACB  +
mov ecx offset asc_10209C0 +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100CAAA  +
test dx dx +
jz loc_100CAA6  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100CAAA  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_100CA84  +
xor eax eax +
jmp loc_100CAAF  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_100CACB  +
push dword_1021FB4  +
push esi  +
call sub_100F065  +
test eax eax +
jz loc_100CAD9  +
push eax  +
call sub_100295A  +
jmp loc_100CAD9  +
xor eax eax +
mov edi dword_1021FB4 +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax dword_1021FB4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx dword_1020810 +
mov eax offset dword_1020810 +
jmp loc_100CB15  +
cmp ecx 0FFFFFFFFh +
jz loc_100CB59  +
add eax 8 +
mov ecx [eax] +
cmp ecx [ebp+arg_0] +
jnz loc_100CB0B  +
push esi  +
push dword ptr [eax+4]  +
lea eax [ebp+Buffer] +
push 40h  +
xor ecx ecx +
push eax  +
mov [ebp+Buffer] cx +
call sub_1012E19  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+arg_0]  +
mov esi offset unk_1021B28 +
push offset a03dWs  +
push 40h  +
push esi  +
call swprintf_s  +
add esp 14h +
mov eax esi +
pop esi  +
jmp loc_100CB5B  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
push 2  +
push eax  +
mov [ebp+var_22C] offset aUsers_0 +
call sub_1007918  +
test eax eax +
jnz loc_100CCBD  +
push esi  +
push 1  +
push 1  +
push 221h  +
call sub_100745D  +
mov esi eax +
test esi esi +
jnz loc_100CCB5  +
push offset username  +
mov esi 111h +
lea eax [ebp+Buffer] +
push esi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
test ebx ebx +
jz loc_100CC30  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100CBFD  +
sub eax edx +
sar eax 1 +
jz loc_100CC30  +
push ebx  +
lea eax [ebp+Buffer] +
push esi  +
push eax  +
call wcscat_s  +
push offset asc_1003740  +
lea eax [ebp+Buffer] +
push esi  +
push eax  +
call wcscat_s  +
add esp 18h +
push edi  +
lea eax [ebp+Buffer] +
push esi  +
push eax  +
call wcscat_s  +
add esp 0Ch +
lea eax [ebp+Buffer] +
push eax  +
call sub_100840C  +
mov esi eax +
sub eax 7Bh +
jz loc_100CC9E  +
sub eax 832h +
jz loc_100CC95  +
sub eax 0Fh +
jnz loc_100CCB0  +
push 1  +
lea eax [ebp+var_22C] +
push eax  +
push 221h  +
call sub_10075F7  +
test eax eax +
jz loc_100CC81  +
mov [ebp+var_22C] offset aUsers_0 +
mov eax [ebp+var_22C] +
push 2  +
mov dword_1019DDC eax +
push 0EC3h  +
jmp loc_100CCA5  +
push 1  +
push 0EC4h  +
jmp loc_100CCA5  +
push 1  +
push 0E9Eh  +
mov dword_1019DD8 edi +
call sub_1001C11  +
call sub_10074D5  +
call sub_10073C3  +
mov eax esi +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push 0FFFFFFFFh  +
push dword ptr [eax]  +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push dword ptr [eax]  +
push 1  +
call ds:GetUserDefaultLCID  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
call ds:GetTickCount  +
push eax  +
call ds:srand  +
mov eax off_10208E0 +
pop ecx  +
lea edx [eax+2] +
xor esi esi +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_100CD2B  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_4] esi +
mov edi eax +
jle loc_100CD5F  +
call ds:rand  +
cdq   +
idiv  edi +
mov eax off_10208E0 +
mov ecx [ebp+arg_0] +
mov ax [eax+edx*2] +
mov [ecx+esi*2] ax +
inc esi  +
cmp esi [ebp+arg_4] +
jl loc_100CD40  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 918h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
push 904h  +
push 40h  +
mov [ebp+var_80C] ecx +
mov ecx [ebp+arg_C] +
lea edx [ebp+var_918] +
push edx  +
push ecx  +
mov [ebp+var_818] ecx +
mov edi 200h +
push edi  +
lea ecx [ebp+var_804] +
push ecx  +
push offset asc_100CEFC  +
push eax  +
call NetpwListCanonicalize  +
xor ebx ebx +
cmp eax ebx +
jnz loc_100CEE9  +
push esi  +
push 400h  +
lea eax [ebp+var_404] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_804] +
mov [ebp+var_810] eax +
push ebx  +
lea eax [ebp+var_810] +
push eax  +
lea esi [ebp+var_404] +
mov [ebp+var_808] edi +
push ebx  +
jmp loc_100CE84  +
lea eax [ebp+var_404] +
mov [ebp+var_814] eax +
jmp loc_100CE20  +
push 0  +
push 4  +
push eax  +
push ebx  +
call NetpwNameCompare  +
test eax eax +
jz loc_100CE79  +
push 0  +
lea eax [ebp+var_814] +
push eax  +
push 0  +
call NetpwListTraverse  +
test eax eax +
jnz loc_100CE11  +
push ebx  +
push [ebp+var_808]  +
push esi  +
call wcscpy_s  +
mov eax ebx +
add esp 0Ch +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100CE49  +
sub eax ecx +
sar eax 1 +
lea esi [esi+eax*2+2] +
mov eax ebx +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100CE60  +
sub eax ecx +
sar eax 1 +
or ecx 0FFFFFFFFh +
sub ecx eax +
add [ebp+var_808] ecx +
push 0  +
lea eax [ebp+var_810] +
push eax  +
push 0  +
call NetpwListTraverse  +
mov ebx eax +
test ebx ebx +
jnz loc_100CE03  +
movzx esi [ebp+arg_8] +
push edi  +
push 40h  +
lea eax [ebp+var_918] +
push eax  +
push [ebp+var_818]  +
lea eax [ebp+var_404] +
push esi  +
push [ebp+var_80C]  +
push offset username  +
push eax  +
call NetpwListCanonicalize  +
test eax eax +
jnz loc_100CEE8  +
mov eax [ebp+var_80C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100CECC  +
sub eax edx +
sar eax 1 +
cmp eax esi +
sbb eax eax +
and eax 0FFFFF7B5h +
add eax 84Bh +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 438h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
xor edi edi +
push 0Ah  +
mov [ebp+var_42C] edi +
mov [ebp+var_434] edi +
call sub_1010F03  +
mov esi 105h +
test eax eax +
jz loc_100CF5A  +
xor eax eax +
mov [ebp+var_42C] 1 +
mov word ptr [ebp+var_41C] ax +
jmp loc_100CF7D  +
mov eax [ebp+Buffer] +
push dword ptr [eax]  +
lea eax [ebp+var_41C] +
push esi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push edi  +
push edi  +
push edi  +
push esi  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax edi +
jz loc_100CF97  +
push eax  +
call sub_100295A  +
push edi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+bufptr] +
push eax  +
push 300h  +
push edi  +
lea eax [ebp+servername] +
push eax  +
call NetUserEnum  +
cmp eax 0EAh +
jnz loc_100CFD4  +
mov [ebp+var_434] 1 +
jmp loc_100CFDE  +
cmp eax edi +
jz loc_100CFDE  +
push eax  +
call sub_100295A  +
cmp [ebp+entriesread] edi +
jnz loc_100CFEB  +
call sub_1010959  +
push offset sub_100CCE1  +
push 4  +
push [ebp+entriesread]  +
push [ebp+bufptr]  +
call ds:qsort  +
add esp 10h +
call sub_10108A7  +
cmp word ptr [ebp+servername] di +
jz loc_100D032  +
lea eax [ebp+servername] +
push offset asc_1003740  +
push eax  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
lea eax [ebp+eax*2+servername] +
jmp loc_100D038  +
lea eax [ebp+var_41C] +
push eax  +
push 111Ch  +
call sub_1010933  +
call sub_1010842  +
mov esi [ebp+bufptr] +
mov [ebp+var_420] edi +
cmp [ebp+entriesread] edi +
jbe loc_100D0CF  +
push ebx  +
xor ebx ebx +
inc ebx  +
push 24h  +
push dword ptr [esi]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100D08F  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100D073  +
sub eax edx +
sar eax 1 +
cmp eax 1 +
jnz loc_100D08F  +
dec [ebp+var_420]  +
dec ebx  +
jmp loc_100D0B9  +
push 0  +
push dword ptr [esi]  +
push 19h  +
call sub_10108BB  +
push eax  +
push offset aFws_0  +
call sub_1010562  +
pop ecx  +
pop ecx  +
push 3  +
xor edx edx +
mov eax ebx +
pop ecx  +
div  ecx +
test edx edx +
jnz loc_100D0B9  +
call sub_10108A7  +
inc edi  +
inc [ebp+var_420]  +
inc ebx  +
add esi 4 +
cmp edi [ebp+entriesread] +
jb loc_100D060  +
xor edi edi +
pop ebx  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
mov eax [ebp+var_420] +
push 3  +
xor edx edx +
pop ecx  +
div  ecx +
test edx edx +
jz loc_100D0F0  +
call sub_10108A7  +
cmp [ebp+var_42C] edi +
jz loc_100D0FF  +
push 0DB0h  +
jmp loc_100D10C  +
cmp [ebp+var_434] edi +
jz loc_100D11A  +
push 0DB9h  +
call sub_10108F6  +
push 1  +
call sub_1002992  +
jmp loc_100D11F  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
mov [ebp+var_4] 1 +
cmp [ebp+arg_8] esi +
jnz loc_100D175  +
push dword_102074C  +
push esi  +
push dword_102071C  +
push [ebp+arg_0]  +
call sub_10108BB  +
push eax  +
push [ebp+arg_0]  +
push esi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
jmp loc_100D27D  +
push ebx  +
mov ebx 0E88h +
cmp [ebp+arg_4] esi +
jz loc_100D18E  +
mov eax [ebp+arg_4] +
push 7  +
xor edx edx +
pop ecx  +
div  ecx +
test edx edx +
jz loc_100D194  +
push ebx  +
call sub_100295A  +
mov eax [ebp+arg_4] +
push edi  +
push 7  +
xor edx edx +
pop ecx  +
div  ecx +
push 18h  +
xor edx edx +
pop ecx  +
mov esi eax +
div  ecx +
mov edi eax +
test edx edx +
jz loc_100D1B4  +
push ebx  +
call sub_100295A  +
cmp edi 6 +
jbe loc_100D1BF  +
push ebx  +
call sub_100295A  +
xor edx edx +
mov eax 15180h +
div  esi +
mov ebx [ebp+arg_4] +
xor esi esi +
mov [ebp+var_8] eax +
test ebx ebx +
jbe loc_100D251  +
push esi  +
push [ebp+arg_8]  +
call sub_100C9F9  +
test eax eax +
jz loc_100D246  +
mov edi esi +
imul edi [ebp+var_8] +
cmp esi ebx +
jnb loc_100D1FD  +
inc esi  +
cmp esi ebx +
jnb loc_100D1F9  +
push esi  +
push [ebp+arg_8]  +
call sub_100C9F9  +
test eax eax +
jnz loc_100D1E7  +
mov eax esi +
imul eax [ebp+var_8] +
test edi edi +
jnz loc_100D235  +
cmp esi ebx +
jb loc_100D235  +
push dword_102074C  +
push edi  +
push dword_102071C  +
push [ebp+arg_0]  +
call sub_10108BB  +
push eax  +
push [ebp+arg_0]  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
jmp loc_100D242  +
push [ebp+var_4]  +
push eax  +
push edi  +
push [ebp+arg_0]  +
call sub_100C7CB  +
and [ebp+var_4] 0 +
inc esi  +
cmp esi ebx +
jb loc_100D1D4  +
cmp [ebp+var_4] 0 +
jz loc_100D27B  +
push dword_1020764  +
push 0  +
push dword_102071C  +
push [ebp+arg_0]  +
call sub_10108BB  +
push eax  +
push [ebp+arg_0]  +
push 0  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 418h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_100D3AB  +
mov eax edi +
push 2  +
lea edx [eax+2] +
pop ebx  +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100D2B1  +
sub eax edx +
sar eax 1 +
jz loc_100D3AB  +
push offset asc_10209B4  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100D3AB  +
push esi  +
lea eax [ebp+var_418] +
push eax  +
push 208h  +
lea eax [ebp+var_414] +
push eax  +
push edi  +
call sub_100CD6A  +
mov esi offset aWorkstations +
test eax eax +
jz loc_100D309  +
push esi  +
push 0F70h  +
call sub_101081B  +
cmp [ebp+var_418] 8 +
jbe loc_100D31D  +
push esi  +
push 0F6Fh  +
call sub_101081B  +
lea eax [ebp+var_414] +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100D326  +
sub eax edx +
mov ecx edi +
sar eax 1 +
lea edx [ecx+2] +
mov si [ecx] +
add ecx ebx +
test si si +
jnz loc_100D339  +
sub ecx edx +
sar ecx 1 +
pop esi  +
cmp eax ecx +
jbe loc_100D37E  +
lea eax [ebp+var_414] +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100D355  +
sub eax edx +
sar eax 1 +
inc eax  +
push ebx  +
push eax  +
call ds:calloc  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_100D37E  +
push 85Ch  +
call sub_100295A  +
lea eax [ebp+var_414] +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100D387  +
sub eax edx +
sar eax 1 +
lea ecx [ebp+var_414] +
push ecx  +
inc eax  +
push eax  +
push edi  +
call wcscpy_s  +
add esp 0Ch +
mov eax edi +
jmp loc_100D3B0  +
mov eax offset username +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 240h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov [ebp+var_238] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_234] eax +
mov eax [ebp+arg_14] +
push offset username  +
mov [ebp+var_23C] eax +
mov esi 111h +
lea eax [ebp+pDestinationSid] +
push esi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
test edi edi +
jz loc_100D454  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100D421  +
sub eax edx +
sar eax 1 +
jz loc_100D454  +
push edi  +
lea eax [ebp+pDestinationSid] +
push esi  +
push eax  +
call wcscat_s  +
push offset asc_1003740  +
lea eax [ebp+pDestinationSid] +
push esi  +
push eax  +
call wcscat_s  +
add esp 18h +
push [ebp+var_238]  +
lea eax [ebp+pDestinationSid] +
push esi  +
push eax  +
call wcscat_s  +
add esp 0Ch +
push 1  +
push ebx  +
call sub_1007918  +
test eax eax +
jnz loc_100D58B  +
lea eax [ebp+var_230] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+pDestinationSid] +
push eax  +
call sub_10080D7  +
test eax eax +
jz loc_100D4A7  +
call sub_10073C3  +
call sub_10074D5  +
jmp loc_100D58B  +
push offset sub_100CCE1  +
push 4  +
push [ebp+var_230]  +
push [ebp+Buffer]  +
call ds:qsort  +
mov ebx [ebp+arg_4] +
add esp 10h +
push 1Eh  +
pop eax  +
cmp eax ebx +
sbb esi esi +
xor edi edi +
push edi  +
push [ebp+var_23C]  +
inc esi  +
push ebx  +
inc esi  +
call sub_10108BB  +
push eax  +
push ebx  +
push edi  +
push [ebp+var_234]  +
call sub_1010562  +
add esp 10h +
cmp [ebp+var_230] edi +
jbe loc_100D565  +
test edi edi +
jz loc_100D51B  +
xor edx edx +
mov eax edi +
div  esi +
test edx edx +
jnz loc_100D51B  +
push off_1020954  +
push ebx  +
push ebx  +
push [ebp+var_234]  +
call sub_1010562  +
add esp 10h +
mov eax [ebp+Buffer] +
push 0  +
push dword ptr [eax+edi*4]  +
push 15h  +
call sub_10108BB  +
push eax  +
push offset aFws_5  +
call sub_1010562  +
inc edi  +
xor edx edx +
mov eax edi +
div  esi +
pop ecx  +
pop ecx  +
test edx edx +
jnz loc_100D54A  +
call sub_10108A7  +
cmp edi [ebp+var_230] +
jb loc_100D4F7  +
test edi edi +
jz loc_100D565  +
cmp esi 1 +
jle loc_100D56A  +
xor edx edx +
mov eax edi +
div  esi +
test edx edx +
jz loc_100D56A  +
call sub_10108A7  +
push [ebp+var_230]  +
push [ebp+Buffer]  +
call sub_100785B  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
call sub_10073C3  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 580h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
push edi  +
push 10h  +
lea eax [ebp+var_24] +
push eax  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
mov [ebp+username] ebx +
mov [ebp+var_548] edi +
call sub_100F2B3  +
cmp eax edi +
jz loc_100D5EC  +
push eax  +
call sub_100295A  +
lea eax [ebp+Buffer] +
push eax  +
push 3  +
push ebx  +
lea eax [ebp+servername] +
push eax  +
call NetUserGetInfo  +
mov esi eax +
cmp esi edi +
jz loc_100D610  +
cmp esi 0EAh +
jnz loc_100D631  +
mov ecx [ebp+Buffer] +
mov eax [ecx+48h] +
mov ecx [ecx+44h] +
cmp eax edi +
jz loc_100D631  +
push edi  +
push ecx  +
push eax  +
call sub_1014BC4  +
test al al +
jnz loc_100D631  +
mov esi 85Ch +
cmp esi edi +
jz loc_100D63B  +
push esi  +
call sub_100295A  +
mov eax [ebp+Buffer] +
test dword ptr [eax+18h] 3800h +
jz loc_100D655  +
push ebx  +
push 0EABh  +
call sub_101081B  +
lea eax [ebp+var_564] +
push eax  +
push offset unk_1020678  +
push 17h  +
call sub_1010ADF  +
mov esi [ebp+var_564] +
lea eax [ebp+var_56C] +
push eax  +
push offset unk_1020730  +
push 0Ch  +
add esi 5 +
call sub_1010ADF  +
lea eax [ebp+var_56C] +
push eax  +
push offset unk_1020790  +
push 7  +
call sub_1010ADF  +
mov ecx [ebp+Buffer] +
mov edx [ecx+30h] +
mov eax edx +
lea ebx [eax+2] +
mov [ebp+var_540] ebx +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx di +
jnz loc_100D6AB  +
sub eax [ebp+var_540] +
sar eax 1 +
jnz loc_100D6CC  +
mov eax dword_102074C +
mov [ebp+var_540] eax +
jmp loc_100D6D2  +
mov [ebp+var_540] edx +
mov eax [ecx+18h] +
mov edx dword_102073C +
mov ebx dword_1020734 +
test al 2 +
jz loc_100D6ED  +
mov [ebp+var_538] edx +
jmp loc_100D70B  +
test al 10h +
jz loc_100D705  +
mov ebx dword_102077C +
mov [ebp+var_538] ebx +
mov ebx dword_1020734 +
jmp loc_100D70B  +
mov [ebp+var_538] ebx +
mov [ebp+var_53C] edx +
test al 20h +
jnz loc_100D71B  +
mov [ebp+var_53C] ebx +
mov [ebp+var_54C] edx +
test al 40h +
jnz loc_100D72B  +
mov [ebp+var_54C] ebx +
push dword ptr [ecx+58h]  +
call sub_100CAE9  +
mov ebx eax +
mov eax [ebp+Buffer] +
push dword ptr [eax]  +
push edi  +
push dword_102067C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+24h]  +
push edi  +
push dword_1020684  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+14h]  +
push edi  +
push dword_102068C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+28h]  +
push edi  +
push dword_1020694  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push ebx  +
push edi  +
push dword_10206A4  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push [ebp+var_538]  +
push edi  +
push dword_10206BC  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
mov eax [eax+3Ch] +
add esp 14h +
mov [ebp+var_574] eax +
mov ebx 80h +
cmp eax 0FFFFFFFFh +
jz loc_100D849  +
push ebx  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+var_574] +
push eax  +
call sub_100C1F9  +
lea eax [ebp+DateStr] +
push eax  +
jmp loc_100D84F  +
push dword_1020784  +
push edi  +
push dword_10206C4  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
lea eax [ebp+servername] +
push eax  +
lea eax [ebp+var_55C] +
push eax  +
lea eax [ebp+var_554] +
push eax  +
lea eax [ebp+var_570] +
push eax  +
mov eax [ebp+Buffer] +
push dword ptr [eax+8]  +
call sub_100C98B  +
cmp eax edi +
jz loc_100D8A6  +
push eax  +
call sub_100295A  +
push ebx  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+var_570] +
push eax  +
call sub_100C1F9  +
lea eax [ebp+DateStr] +
push eax  +
push edi  +
push dword_10206CC  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
test dword ptr [eax+18h] 10000h +
jnz loc_100D914  +
cmp [ebp+var_554] 0FFFFFFFFh +
jz loc_100D914  +
push ebx  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+var_554] +
push eax  +
call sub_100C1F9  +
lea eax [ebp+DateStr] +
push eax  +
jmp loc_100D91A  +
push dword_1020784  +
push edi  +
push dword_10206D4  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
cmp [ebp+var_55C] 0FFFFFFFFh +
jz loc_100D95E  +
push ebx  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+var_55C] +
push eax  +
call sub_100C1F9  +
lea eax [ebp+DateStr] +
push eax  +
jmp loc_100D964  +
push dword_1020784  +
push edi  +
push dword_10206DC  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push [ebp+var_53C]  +
push edi  +
push dword_1020724  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push [ebp+var_54C]  +
push edi  +
push dword_102072C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
call sub_10108A7  +
push [ebp+var_540]  +
push edi  +
push dword_10206E4  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+1Ch]  +
push edi  +
push dword_10206FC  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+68h]  +
push edi  +
push dword_10206EC  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
push dword ptr [eax+10h]  +
push edi  +
push dword_1020704  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
mov eax [ebp+Buffer] +
add esp 14h +
mov eax [eax+34h] +
mov [ebp+var_560] eax +
cmp eax edi +
jbe loc_100DA98  +
push ebx  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+var_560] +
push eax  +
call sub_100C1F9  +
lea eax [ebp+DateStr] +
push eax  +
jmp loc_100DA9E  +
push dword_102078C  +
push edi  +
push dword_102070C  +
push esi  +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
lea eax [ebp+var_57C] +
push eax  +
lea eax [ebp+var_568] +
push eax  +
mov eax [ebp+Buffer] +
push offset aNwpassword  +
push dword ptr [eax+2Ch]  +
call sub_100FB23  +
test eax eax +
jl loc_100DB31  +
cmp [ebp+hMem] edi +
jz loc_100DB31  +
xor eax eax +
push 0F81h  +
mov word ptr [ebp+var_530] ax +
push 100h  +
lea eax [ebp+var_530] +
push eax  +
call sub_1012E19  +
lea eax [ebp+var_530] +
push eax  +
push dword_102069C  +
push esi  +
push esi  +
push off_1020990  +
call sub_1010562  +
add esp 14h +
push [ebp+hMem]  +
call ds:LocalFree  +
call sub_10108A7  +
mov eax [ebp+Buffer] +
push dword ptr [eax+48h]  +
push dword ptr [eax+44h]  +
push esi  +
call sub_100D132  +
call sub_10108A7  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
push dword_10206F4  +
lea eax [ebp+var_24] +
push offset a_Ws_1  +
push [ebp+username]  +
push eax  +
push esi  +
lea eax [ebp+servername] +
push eax  +
call sub_100D3C5  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+bufptr] +
push eax  +
push edi  +
push [ebp+username]  +
lea eax [ebp+servername] +
push eax  +
call NetUserGetGroups  +
test eax eax +
jz loc_100DBB7  +
mov [ebp+var_548] 1 +
jmp loc_100DC8A  +
push 1Eh  +
pop eax  +
cmp eax esi +
mov eax [ebp+bufptr] +
push edi  +
push dword_1020714  +
sbb ebx ebx +
inc ebx  +
push esi  +
inc ebx  +
mov [ebp+var_53C] eax +
call sub_10108BB  +
push eax  +
push esi  +
push edi  +
push offset a_Ws_1  +
call sub_1010562  +
add esp 10h +
mov [ebp+var_538] edi +
cmp [ebp+entriesread] edi +
jbe loc_100DC85  +
mov eax [ebp+var_538] +
cmp eax edi +
jz loc_100DC22  +
xor edx edx +
div  ebx +
test edx edx +
jnz loc_100DC22  +
push off_1020954  +
push esi  +
push esi  +
push offset a_Ws_1  +
call sub_1010562  +
add esp 10h +
mov eax [ebp+var_53C] +
push edi  +
push dword ptr [eax]  +
push 15h  +
call sub_10108BB  +
push eax  +
push offset aFws_5  +
call sub_1010562  +
mov eax [ebp+var_538] +
inc eax  +
xor edx edx +
mov [ebp+username] eax +
div  ebx +
pop ecx  +
pop ecx  +
test edx edx +
jnz loc_100DC59  +
call sub_10108A7  +
mov eax [ebp+username] +
add [ebp+var_53C] 4 +
mov [ebp+var_538] eax +
cmp eax [ebp+entriesread] +
jb loc_100DBFB  +
cmp eax edi +
jz loc_100DC85  +
cmp ebx 1 +
jle loc_100DC8A  +
xor edx edx +
div  ebx +
test edx edx +
jz loc_100DC8A  +
call sub_10108A7  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
cmp [ebp+var_548] edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_100DCB3  +
push 0DB0h  +
call sub_10108F6  +
push 1  +
call sub_1002992  +
jmp loc_100DCB8  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
xor ecx ecx +
sub esp 18h +
cmp eax ecx +
jz loc_100DCDE  +
mov [eax] ecx +
mov [ebp+var_C] ecx +
cmp dword_101FC80 ecx +
jz locret_100E537  +
push ebx  +
push esi  +
push edi  +
push 4  +
mov edi offset dword_101FC80 +
pop ebx  +
mov esi [edi] +
mov ecx offset aDomain +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DD25  +
test dx dx +
jz loc_100DD21  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DD25  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DD01  +
xor eax eax +
jmp loc_100DD2A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_100E51E  +
mov ecx offset aAdd +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DD5D  +
test dx dx +
jz loc_100DD59  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DD5D  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DD39  +
xor eax eax +
jmp loc_100DD62  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100DD7F  +
cmp [ebp+arg_4] 1 +
jz loc_100E51E  +
push 0DADh  +
call sub_100295A  +
jmp loc_100E51E  +
mov ecx offset aActive +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DDAA  +
test dx dx +
jz loc_100DDA6  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DDAA  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DD86  +
xor eax eax +
jmp loc_100DDAF  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100DDBF  +
mov eax [ebp+arg_0] +
and dword ptr [eax+18h] 0FFFFFFEDh +
jmp loc_100E51E  +
mov ecx offset aRandom +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DDEA  +
test dx dx +
jz loc_100DDE6  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DDEA  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DDC6  +
xor eax eax +
jmp loc_100DDEF  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100DE0A  +
cmp [ebp+arg_C] eax +
jz loc_100E51E  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 8 +
jmp loc_100E51E  +
mov ecx offset aFpnw +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DE35  +
test dx dx +
jz loc_100DE31  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DE35  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DE11  +
xor eax eax +
jmp loc_100DE3A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100DE55  +
cmp [ebp+arg_8] eax +
jz loc_100E51E  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 1 +
jmp loc_100E51E  +
push esi  +
call sub_1010270  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100DE6C  +
push 0DB1h  +
call sub_100295A  +
mov edi [edi] +
mov ecx offset aFullname +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DE99  +
test dx dx +
jz loc_100DE95  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DE99  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DE75  +
xor eax eax +
jmp loc_100DE9E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100DEB0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax+24h] ecx +
jmp loc_100E514  +
mov esi offset aEnablescript +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DEDD  +
test dx dx +
jz loc_100DED9  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DEDD  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DEB9  +
xor eax eax +
jmp loc_100DEE2  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100DF0E  +
push esi  +
push [ebp+var_4]  +
call sub_100C957  +
test eax eax +
jz loc_100DEFF  +
mov eax [ebp+arg_0] +
or dword ptr [eax+18h] 1 +
jmp loc_100E514  +
push 0EBBh  +
call sub_100295A  +
jmp loc_100E514  +
mov esi offset aHomedir +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DF3B  +
test dx dx +
jz loc_100DF37  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DF3B  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DF17  +
xor eax eax +
jmp loc_100DF40  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100DF97  +
mov edi [ebp+var_4] +
cmp [edi] ax +
jz loc_100DF8C  +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
call NetpwPathType  +
test eax eax +
jz loc_100DF66  +
push esi  +
push 0F70h  +
call sub_101081B  +
cmp [ebp+var_8] 2006h +
jz loc_100DF8C  +
cmp [ebp+var_8] 2000h +
jz loc_100DF8C  +
cmp [ebp+var_8] 1000h +
jz loc_100DF8C  +
push esi  +
push 0F70h  +
call sub_101081B  +
mov eax [ebp+arg_0] +
mov [eax+10h] edi +
jmp loc_100E514  +
mov ecx offset aParms +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100DFC2  +
test dx dx +
jz loc_100DFBE  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100DFC2  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DF9E  +
xor eax eax +
jmp loc_100DFC7  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100DFD9  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax+2Ch] ecx +
jmp loc_100E514  +
mov ecx offset aComment +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E004  +
test dx dx +
jz loc_100E000  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E004  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100DFE0  +
xor eax eax +
jmp loc_100E009  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E01B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax+14h] ecx +
jmp loc_100E514  +
mov ecx offset aUsercomment +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E046  +
test dx dx +
jz loc_100E042  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E046  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E022  +
xor eax eax +
jmp loc_100E04B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E05D  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax+28h] ecx +
jmp loc_100E514  +
mov esi offset aScriptpath +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E08A  +
test dx dx +
jz loc_100E086  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E08A  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E066  +
xor eax eax +
jmp loc_100E08F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E0CE  +
mov edi [ebp+var_4] +
test edi edi +
jz loc_100E09F  +
cmp [edi] ax +
jz loc_100E0C3  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
call NetpwPathType  +
test eax eax +
jnz loc_100E0B8  +
cmp [ebp+var_8] 2000h +
jz loc_100E0C3  +
push esi  +
push 0F70h  +
call sub_101081B  +
mov eax [ebp+arg_0] +
mov [eax+1Ch] edi +
jmp loc_100E514  +
mov esi offset aProfilepath +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E0FB  +
test dx dx +
jz loc_100E0F7  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E0FB  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E0D7  +
xor eax eax +
jmp loc_100E100  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E148  +
mov edi [ebp+var_4] +
test edi edi +
jz loc_100E110  +
cmp [edi] ax +
jz loc_100E13D  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
call NetpwPathType  +
test eax eax +
jnz loc_100E132  +
cmp [ebp+var_8] 2006h +
jz loc_100E13D  +
cmp [ebp+var_8] 1000h +
jz loc_100E13D  +
push esi  +
push 0F70h  +
call sub_101081B  +
mov eax [ebp+arg_0] +
mov [eax+68h] edi +
jmp loc_100E514  +
mov esi offset aActive +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E175  +
test dx dx +
jz loc_100E171  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E175  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E151  +
xor eax eax +
jmp loc_100E17A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E1A0  +
push esi  +
push [ebp+var_4]  +
call sub_100C957  +
test eax eax +
mov eax [ebp+arg_0] +
jz loc_100E197  +
and dword ptr [eax+18h] 0FFFFFFEDh +
jmp loc_100E514  +
or dword ptr [eax+18h] 2 +
jmp loc_100E514  +
mov esi offset aFpnw +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E1CD  +
test dx dx +
jz loc_100E1C9  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E1CD  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E1A9  +
xor eax eax +
jmp loc_100E1D2  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E20C  +
push esi  +
push [ebp+var_4]  +
call sub_100C957  +
test eax eax +
mov eax [ebp+arg_8] +
jz loc_100E1F9  +
test eax eax +
jz loc_100E514  +
mov dword ptr [eax] 1 +
jmp loc_100E514  +
test eax eax +
jz loc_100E514  +
mov dword ptr [eax] 2 +
jmp loc_100E514  +
mov esi offset aPasswordreq +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E239  +
test dx dx +
jz loc_100E235  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E239  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E215  +
xor eax eax +
jmp loc_100E23E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E264  +
push esi  +
push [ebp+var_4]  +
call sub_100C957  +
test eax eax +
mov eax [ebp+arg_0] +
jz loc_100E25B  +
and dword ptr [eax+18h] 0FFFFFFDFh +
jmp loc_100E514  +
or dword ptr [eax+18h] 20h +
jmp loc_100E514  +
mov esi offset aPasswordchg +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E291  +
test dx dx +
jz loc_100E28D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E291  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E26D  +
xor eax eax +
jmp loc_100E296  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E2BC  +
push esi  +
push [ebp+var_4]  +
call sub_100C957  +
test eax eax +
mov eax [ebp+arg_0] +
jz loc_100E2B3  +
and dword ptr [eax+18h] 0FFFFFFBFh +
jmp loc_100E514  +
or dword ptr [eax+18h] 40h +
jmp loc_100E514  +
mov esi offset aLogonpasswordc +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E2E9  +
test dx dx +
jz loc_100E2E5  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E2E9  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E2C5  +
xor eax eax +
jmp loc_100E2EE  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E30C  +
push esi  +
push [ebp+var_4]  +
call sub_100C957  +
mov ecx [ebp+arg_0] +
neg eax  +
sbb eax eax +
neg eax  +
mov [ecx+70h] eax +
jmp loc_100E514  +
mov ecx offset aTimes +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E337  +
test dx dx +
jz loc_100E333  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E337  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E313  +
xor eax eax +
jmp loc_100E33C  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E35A  +
push [ebp+var_4]  +
call sub_100CA2D  +
mov ecx [ebp+arg_0] +
mov [ecx+48h] eax +
mov dword ptr [ecx+44h] 0A8h +
jmp loc_100E514  +
mov ecx offset aWorkstations +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E385  +
test dx dx +
jz loc_100E381  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E385  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E361  +
xor eax eax +
jmp loc_100E38A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E3A1  +
push [ebp+var_4]  +
call sub_100D287  +
mov ecx [ebp+arg_0] +
mov [ecx+30h] eax +
jmp loc_100E514  +
mov ecx offset aCountrycode +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E3CC  +
test dx dx +
jz loc_100E3C8  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E3CC  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E3A8  +
xor eax eax +
jmp loc_100E3D1  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E408  +
push offset aCountrycode  +
push 0F70h  +
push [ebp+var_4]  +
call sub_10103FF  +
mov esi eax +
push esi  +
call sub_100CAE9  +
test eax eax +
jnz loc_100E3FD  +
push 0EBDh  +
call sub_100295A  +
mov eax [ebp+arg_0] +
mov [eax+58h] esi +
jmp loc_100E514  +
mov esi offset aRandom +
mov ecx esi +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E435  +
test dx dx +
jz loc_100E431  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E435  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E411  +
xor eax eax +
jmp loc_100E43A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E475  +
cmp [ebp+arg_C] eax +
jz loc_100E514  +
push esi  +
mov edi 0F70h +
push edi  +
push [ebp+var_4]  +
call sub_10103CB  +
mov ecx [ebp+arg_C] +
movzx eax ax +
cmp eax 100h +
mov [ecx] eax +
jle loc_100E514  +
push esi  +
push edi  +
call sub_101081B  +
jmp loc_100E514  +
mov ecx offset aExpires +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E4A0  +
test dx dx +
jz loc_100E49C  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E4A0  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_100E47C  +
xor eax eax +
jmp loc_100E4A5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100E514  +
push offset aNever  +
push [ebp+var_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E4C6  +
mov eax [ebp+arg_0] +
or dword ptr [eax+3Ch] 0FFFFFFFFh +
jmp loc_100E514  +
push 0  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_4]  +
call sub_1013E83  +
test eax eax +
jnz loc_100E4F5  +
mov eax [ebp+var_4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100E4E2  +
sub eax edx +
sar eax 1 +
cmp [ebp+var_10] eax +
jz loc_100E4FF  +
push 0EB7h  +
call sub_100295A  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_14]  +
call sub_1014786  +
mov eax [ebp+var_18] +
mov ecx [ebp+arg_0] +
mov [ecx+3Ch] eax +
mov ecx [ebp+var_4] +
push 3Ah  +
pop eax  +
mov [ecx-2] ax +
inc [ebp+var_C]  +
mov edi [ebp+var_C] +
lea edi dword_101FC80[edi*4] +
cmp dword ptr [edi] 0 +
jnz loc_100DCF8  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 268h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_25C] eax +
xor eax eax +
lea edi [ebp+Buffer] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
xor ebx ebx +
push eax  +
mov [ebp+username] esi +
mov [ebp+var_260] ebx +
mov [ebp+nSize] 10h +
call ds:GetComputerNameW  +
test eax eax +
jz loc_100E5B5  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E5B5  +
push 8CDh  +
call sub_100295A  +
push 40h  +
push esi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100E5CE  +
push 89Ah  +
call sub_100295A  +
push ebx  +
push 202h  +
push offset unk_1021DB0  +
call sub_1002121  +
mov esi lpDateStr +
push 74h  +
push ebx  +
push esi  +
call memset  +
mov ecx [ebp+var_25C] +
or dword ptr [esi+3Ch] 0FFFFFFFFh +
or dword ptr [esi+40h] 0FFFFFFFFh +
mov eax [ebp+username] +
xor edi edi +
inc edi  +
add esp 0Ch +
mov [esi+0Ch] edi +
mov [esi+18h] edi +
mov dword ptr [esi+24h] offset username +
mov dword ptr [esi+54h] offset asc_10209B8 +
mov dword ptr [esi+64h] 201h +
mov [esi+70h] ebx +
mov [esi] eax +
cmp ecx ebx +
jnz loc_100E633  +
mov [esi+4] ebx +
jmp loc_100E6D8  +
mov eax offset dword_1003944 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100E65E  +
cmp dx bx +
jz loc_100E65A  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100E65E  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_100E638  +
xor eax eax +
jmp loc_100E663  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_100E687  +
push edi  +
push ebx  +
push 1106h  +
push edi  +
push 100h  +
push offset unk_1021DB0  +
call sub_10109A8  +
mov dword ptr [esi+4] offset unk_1021DB0 +
jmp loc_100E6D8  +
push [ebp+var_25C]  +
call sub_1012DF2  +
movzx eax ax +
cmp ax bx +
jz loc_100E6A3  +
movzx eax ax +
push eax  +
call sub_100295A  +
mov eax [ebp+var_25C] +
mov [esi+4] eax +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100E6AF  +
sub eax edx +
sar eax 1 +
cmp eax 0Eh +
jbe loc_100E6D8  +
push edi  +
push 14A0h  +
call sub_1010970  +
test eax eax +
jnz loc_100E6D8  +
push 2  +
call sub_1002992  +
lea eax [ebp+var_260] +
push eax  +
lea eax [ebp+buf] +
push eax  +
push edi  +
push esi  +
call sub_100DCCB  +
cmp [ebp+var_25C] ebx +
jnz loc_100E714  +
cmp [ebp+var_260] ebx +
jz loc_100E714  +
push [ebp+var_260]  +
push offset unk_1021DB0  +
call sub_100CD0C  +
mov dword ptr [esi+4] offset unk_1021DB0 +
cmp [ebp+buf] edi +
jnz loc_100E737  +
push ebx  +
push edi  +
push offset username  +
push esi  +
call sub_100FC10  +
test eax eax +
jz loc_100E737  +
push 0F7Fh  +
call sub_100295A  +
push edi  +
push 10h  +
lea eax [ebp+var_44] +
push eax  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax ebx +
jz loc_100E759  +
push eax  +
call sub_100295A  +
lea eax [ebp+servername] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100E762  +
sub eax edx +
sar eax 1 +
mov [ebp+var_254] eax +
mov eax lpDateStr +
mov eax [eax+48h] +
cmp eax ebx +
jz loc_100E792  +
push edi  +
push 0A8h  +
push eax  +
call sub_1014BC4  +
test al al +
jz loc_100E7B9  +
push ebx  +
push lpDateStr  +
lea eax [ebp+servername] +
push 3  +
push eax  +
call NetUserAdd  +
mov ebx eax +
test ebx ebx +
jz loc_100E7DC  +
cmp ebx 35h +
jz loc_100E7C5  +
cmp ebx 57h +
jnz loc_100E7D6  +
xor ebx ebx +
push 0EBAh  +
call sub_100295A  +
jmp loc_100E7DE  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push ebx  +
call sub_100295A  +
xor ebx ebx +
call sub_10078D8  +
cmp eax edi +
jnz loc_100E816  +
cmp [ebp+var_254] ebx +
jnz loc_100E816  +
push dword ptr [esi]  +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+servername] +
push eax  +
call sub_100CB87  +
cmp eax ebx +
jz loc_100E816  +
push ebx  +
push eax  +
call sub_1001C11  +
push 0EBEh  +
call sub_100295A  +
cmp [ebp+buf] edi +
jnz loc_100E8B6  +
call sub_10078D8  +
test eax eax +
jnz loc_100E834  +
call sub_10078F8  +
test eax eax +
jz loc_100E842  +
cmp [ebp+var_254] ebx +
mov [ebp+var_254] ebx +
jbe loc_100E848  +
mov [ebp+var_254] edi +
lea eax [ebp+buf] +
push eax  +
push 3  +
push [ebp+username]  +
lea eax [ebp+servername] +
push eax  +
call NetUserGetInfo  +
mov edi 0F7Dh +
test eax eax +
jz loc_100E872  +
push edi  +
call sub_100295A  +
push [ebp+var_254]  +
push ebx  +
push dword ptr [esi+4]  +
push [ebp+buf]  +
call sub_100FC10  +
test eax eax +
jz loc_100E891  +
push edi  +
call sub_100295A  +
push ebx  +
push [ebp+buf]  +
lea eax [ebp+servername] +
push 3  +
push [ebp+username]  +
push eax  +
call NetUserSetInfo  +
test eax eax +
jz loc_100E8B6  +
push edi  +
call sub_100295A  +
cmp [ebp+var_25C] ebx +
jnz loc_100E8E7  +
cmp [ebp+var_260] ebx +
jz loc_100E8E7  +
mov eax [ebp+username] +
push 2  +
push 0F80h  +
mov dword_1019DD8 eax +
mov dword_1019DDC offset unk_1021DB0 +
call sub_1010914  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 23Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_224] eax +
push 202h  +
xor eax eax +
mov esi offset word_1021BA8 +
push esi  +
mov [ebp+username] ebx +
mov [ebp+var_218] edi +
mov [ebp+var_21C] edi +
mov [ebp+var_220] edi +
mov word_1021BA8 ax +
call sub_1002121  +
mov eax lpDateStr +
lea ecx [ebp+var_220] +
push ecx  +
lea ecx [ebp+var_22C] +
push ecx  +
push edi  +
push eax  +
mov [ebp+Buffer] eax +
call sub_100DCCB  +
push 1  +
push edi  +
push edi  +
push 105h  +
lea eax [ebp+servername] +
push eax  +
call sub_100F2B3  +
cmp eax edi +
jz loc_100E998  +
push eax  +
call sub_100295A  +
lea eax [ebp+Buffer] +
push eax  +
push 3  +
push ebx  +
lea eax [ebp+servername] +
push eax  +
call NetUserGetInfo  +
mov ebx eax +
cmp ebx edi +
jz loc_100E9BC  +
cmp ebx 0EAh +
jnz loc_100E9DD  +
mov ecx [ebp+Buffer] +
mov eax [ecx+48h] +
mov ecx [ecx+44h] +
cmp eax edi +
jz loc_100E9DD  +
push edi  +
push ecx  +
push eax  +
call sub_1014BC4  +
test al al +
jnz loc_100E9DD  +
mov ebx 85Ch +
cmp ebx edi +
jz loc_100E9FD  +
cmp ebx 35h +
jnz loc_100E9F7  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push ebx  +
call sub_100295A  +
mov ebx [ebp+var_224] +
cmp ebx edi +
jnz loc_100EA2B  +
cmp [ebp+var_220] edi +
jz loc_100EA1D  +
push [ebp+var_220]  +
push esi  +
call sub_100CD0C  +
jmp loc_100EA76  +
mov eax [ebp+Buffer] +
mov [eax+4] edi +
jmp loc_100EAC2  +
mov ecx ebx +
mov eax offset dword_1003944 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100EA58  +
cmp dx di +
jz loc_100EA54  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100EA58  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_100EA32  +
xor eax eax +
jmp loc_100EA5D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_100EA8A  +
push 1  +
push edi  +
push 1106h  +
push 1  +
push 100h  +
push esi  +
call sub_10109A8  +
mov eax [ebp+Buffer] +
mov [eax+4] esi +
mov eax [ebp+Buffer] +
mov [eax+70h] edi +
jmp loc_100EAC2  +
push ebx  +
call sub_1012DF2  +
movzx eax ax +
cmp ax di +
jz loc_100EAA1  +
movzx eax ax +
push eax  +
call sub_100295A  +
mov eax [ebp+Buffer] +
push ebx  +
mov [eax+4] ebx +
mov eax [ebp+Buffer] +
push 101h  +
push esi  +
mov [eax+70h] edi +
call wcscpy_s  +
add esp 0Ch +
push edi  +
push edi  +
push edi  +
push [ebp+Buffer]  +
call sub_100DCCB  +
call sub_10078D8  +
test eax eax +
jnz loc_100EAE2  +
call sub_10078F8  +
test eax eax +
jz loc_100EAFF  +
lea eax [ebp+servername] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100EAEB  +
sub eax edx +
sar eax 1 +
jnz loc_100EAFF  +
xor ebx ebx +
jmp loc_100EB02  +
xor ebx ebx +
inc ebx  +
lea eax [ebp+var_238] +
push eax  +
lea eax [ebp+var_230] +
push eax  +
mov eax [ebp+Buffer] +
push offset aNwpassword  +
push dword ptr [eax+2Ch]  +
call sub_100FB23  +
test eax eax +
jl loc_100EB45  +
cmp [ebp+hMem] edi +
jz loc_100EB45  +
push [ebp+hMem]  +
mov [ebp+var_21C] 1 +
call ds:LocalFree  +
xor eax eax +
inc eax  +
cmp [ebp+var_22C] eax +
jnz loc_100EBA0  +
cmp [ebp+var_224] edi +
jnz loc_100EB94  +
cmp [ebp+var_220] edi +
jnz loc_100EB94  +
cmp [ebp+var_21C] edi +
jnz loc_100EBD4  +
push eax  +
push edi  +
push 1106h  +
push eax  +
push 100h  +
push esi  +
call sub_10109A8  +
mov eax [ebp+Buffer] +
mov [eax+4] esi +
push ebx  +
push edi  +
push esi  +
push [ebp+Buffer]  +
call sub_100FC10  +
jmp loc_100EBCE  +
push ebx  +
cmp [ebp+var_21C] edi +
jz loc_100EB85  +
push eax  +
jmp loc_100EB86  +
cmp [ebp+var_22C] edi +
jnz loc_100EBBB  +
cmp [ebp+var_224] edi +
jz loc_100EBD4  +
cmp [ebp+var_21C] edi +
jz loc_100EBD4  +
push ebx  +
jmp loc_100EB9D  +
cmp [ebp+var_21C] edi +
jz loc_100EBD4  +
push [ebp+Buffer]  +
call sub_100FE53  +
mov [ebp+var_218] eax +
mov eax [ebp+Buffer] +
mov eax [eax+48h] +
cmp eax edi +
jz loc_100EBF7  +
push 1  +
push 0A8h  +
push eax  +
call sub_1014BC4  +
test al al +
jnz loc_100EBF7  +
push 57h  +
pop ebx  +
jmp loc_100EC2E  +
push edi  +
push [ebp+Buffer]  +
lea eax [ebp+servername] +
push 3  +
push [ebp+username]  +
push eax  +
call NetUserSetInfo  +
mov ebx eax +
cmp ebx edi +
jz loc_100EC34  +
cmp ebx 35h +
jnz loc_100EC2E  +
lea eax [ebp+servername] +
push eax  +
push 0E81h  +
call sub_101081B  +
push ebx  +
call sub_100295A  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
cmp [ebp+var_218] edi +
jz loc_100EC53  +
push 0F7Fh  +
call sub_100295A  +
jmp loc_100EC85  +
cmp [ebp+var_224] edi +
jnz loc_100EC80  +
cmp [ebp+var_220] edi +
jz loc_100EC80  +
mov eax [ebp+username] +
push 2  +
push 0F80h  +
mov dword_1019DD8 eax +
mov dword_1019DDC esi +
call sub_1010914  +
call sub_10108DE  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
movzx eax word ptr [eax] +
push 4  +
push eax  +
call ds:iswctype  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 2Dh  +
push [ebp+arg_0]  +
call ds:wcschr  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
push [ebp+arg_0]  +
call sub_1010B8F  +
test eax eax +
jz loc_100ECF7  +
mov eax 0EB8h +
jmp loc_100ED05  +
mov eax [esi] +
push 7  +
inc eax  +
xor edx edx +
pop ecx  +
div  ecx +
xor eax eax +
mov [esi] edx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
inc eax  +
cmp ecx esi +
jnb loc_100ED39  +
test ecx ecx +
jbe loc_100ED2F  +
mov [edx+ecx*4] eax +
dec ecx  +
jnz loc_100ED29  +
push 6  +
mov [edx+ecx*4] eax +
pop ecx  +
cmp esi ecx +
ja loc_100ED43  +
push edi  +
sub ecx esi +
lea edi [edx+esi*4] +
inc ecx  +
stos   +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
push esi  +
xor esi esi +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+esi*4] 0 +
jz loc_100ED74  +
mov eax [ebp+arg_4] +
mov eax [eax] +
push 3  +
pop edx  +
or [ecx] al +
inc ecx  +
shr eax 8 +
dec edx  +
jz loc_100ED77  +
jmp loc_100ED69  +
add ecx 3 +
inc esi  +
cmp esi 7 +
jl loc_100ED58  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
sub ecx [ebp+arg_0] +
xor eax eax +
inc eax  +
shl eax cl +
mov ecx [ebp+arg_0] +
dec eax  +
shl eax cl +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
cmp [ebp+arg_8] 1 +
push 0  +
lea eax [ebp+arg_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
jnz loc_100EDCD  +
call sub_1013F57  +
jmp loc_100EDDF  +
cmp [ebp+arg_8] 2 +
jnz loc_100EDDA  +
call sub_1013FC4  +
jmp loc_100EDDF  +
call sub_1013EED  +
test eax eax +
jz loc_100EDEA  +
mov eax 0EB9h +
jmp locret_100EE2D  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100EDF0  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_8] eax +
jnz loc_100EDE3  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_10145C2  +
cmp [ebp+var_28] 0 +
jnz loc_100EE28  +
cmp [ebp+var_24] 0 +
jnz loc_100EE28  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_20] +
mov [eax] ecx +
xor eax eax +
jmp locret_100EE2D  +
mov eax 0EB4h +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [esi] +
cmp word ptr [edi] 0 +
jnz loc_100EE4C  +
xor eax eax +
jmp loc_100EE6E  +
push [ebp+arg_4]  +
push edi  +
call ds:wcscspn  +
add eax eax +
add [esi] eax +
mov eax [esi] +
cmp word ptr [eax] 0 +
pop ecx  +
pop ecx  +
jz loc_100EE6C  +
xor ecx ecx +
mov [eax] cx +
add dword ptr [esi] 2 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset dword_1003948  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100EE36  +
push [ebp+arg_4]  +
push eax  +
call sub_100ECDA  +
test eax eax +
jnz loc_100EEA4  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100ECDA  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset dword_1003948  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100EE36  +
mov esi eax +
test esi esi +
jnz loc_100EECE  +
mov eax 0EB9h +
jmp loc_100EF15  +
push ebx  +
mov ebx [ebp+arg_0] +
cmp word ptr [ebx] 0 +
push edi  +
mov edi [ebp+arg_4] +
jnz loc_100EF1A  +
push 3  +
push edi  +
push esi  +
call sub_100EDAB  +
test eax eax +
jnz loc_100EF13  +
mov eax [edi] +
push 18h  +
inc eax  +
xor edx edx +
pop ecx  +
div  ecx +
mov esi [ebp+arg_8] +
mov [esi] edx +
cmp dword ptr [esi] 0 +
jnz loc_100EF03  +
mov dword ptr [esi] 18h +
mov eax [edi] +
cmp eax [esi] +
sbb eax eax +
and eax 0FFFFF14Fh +
add eax 0EB1h +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
push 1  +
push edi  +
push esi  +
call sub_100EDAB  +
test eax eax +
jnz loc_100EF39  +
push 1  +
mov esi [ebp+arg_8] +
push esi  +
push ebx  +
call sub_100EDAB  +
test eax eax +
jnz loc_100EF13  +
jmp loc_100EEF8  +
push 2  +
push edi  +
push esi  +
call sub_100EDAB  +
test eax eax +
jnz loc_100EF13  +
push 2  +
jmp loc_100EF29  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
mov edi [ebp+arg_4] +
push 7  +
pop ecx  +
push [ebp+arg_0]  +
xor eax eax +
stos   +
call sub_100EC9B  +
pop edi  +
test eax eax +
jz loc_100EF76  +
mov eax 0EB8h +
jmp locret_100EFE7  +
push esi  +
jmp loc_100EFD0  +
push offset dword_100394C  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100EE36  +
mov esi eax +
test esi esi +
jz loc_100EFEB  +
push esi  +
call sub_100ECBA  +
test eax eax +
jz loc_100EFB0  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call sub_100ECDA  +
test eax eax +
jnz loc_100EFE6  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
push [ebp+var_4]  +
jmp loc_100EFCB  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_100EE79  +
test eax eax +
jnz loc_100EFE6  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call sub_100ED0F  +
push [ebp+arg_0]  +
call sub_100EC9B  +
test eax eax +
jz loc_100EF79  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
mov eax 0EB8h +
jmp loc_100EFE6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push edi  +
mov edi offset dword_100394C +
jmp loc_100F033  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
call sub_100EEAD  +
test eax eax +
jnz loc_100F047  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
call sub_100ED87  +
mov eax [ebp+var_8] +
or [esi] eax +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100EE36  +
test eax eax +
jnz loc_100F00D  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
cmp eax 0EB1h +
jnz loc_100F041  +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_4] +
mov [ecx] edx +
mov ecx [ebp+arg_C] +
mov edx [ebp+var_4] +
mov [ecx] edx +
jmp loc_100F041  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor eax eax +
mov edi ebx +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_8] +
push eax  +
push offset unk_10208E4  +
push 7  +
call sub_1010ADF  +
lea eax [ebp+var_8] +
push eax  +
push offset unk_102091C  +
push 7  +
call sub_1010ADF  +
mov edi offset dword_100F14C +
jmp loc_100F131  +
lea ecx [ebp+var_C] +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push eax  +
call sub_100EF4F  +
test eax eax +
jnz loc_100F143  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+var_C]  +
call sub_100EFF7  +
test eax eax +
jz loc_100F123  +
cmp eax 0EB1h +
jnz loc_100F143  +
push 18h  +
xor eax eax +
pop ecx  +
sub ecx [ebp+var_4] +
inc eax  +
shl eax cl +
mov ecx [ebp+var_4] +
push ebx  +
dec eax  +
shl eax cl +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
call sub_100ED4D  +
mov esi [ebp+var_14] +
push 18h  +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
call ds:memmove  +
mov ecx [ebp+var_10] +
xor eax eax +
inc eax  +
shl eax cl +
add esp 0Ch +
mov [ebp+var_2C] esi +
dec eax  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
call sub_100ED4D  +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100EE36  +
test eax eax +
jnz loc_100F0A7  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
xor eax eax +
and edx 0FFFF7FFFh +
push edi  +
mov edi [ebp+arg_8] +
jz loc_100F19F  +
mov ecx offset aRwcxdap +
push ebx  +
test dl 1 +
jz loc_100F196  +
lea ebx [edi-1] +
cmp eax ebx +
jnb loc_100F19E  +
mov bx [ecx] +
mov [esi+eax*2] bx +
inc eax  +
shr edx 1 +
inc ecx  +
inc ecx  +
test edx edx +
jnz loc_100F182  +
pop ebx  +
xor ecx ecx +
mov [esi+eax*2] cx +
test eax eax +
jnz loc_100F1D9  +
push 10ECh  +
push 3Ch  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1012E19  +
test eax eax +
jz loc_100F1C3  +
push eax  +
call sub_100295A  +
xor eax eax +
mov [ebp+var_6] ax +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
push esi  +
call wcsncpy_s  +
add esp 10h +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx] +
push ebx  +
movzx ebx word ptr [eax] +
push esi  +
mov esi [ebp+arg_4] +
mov ecx [esi] +
push edi  +
movzx edi word ptr [ecx] +
test bx bx +
jz loc_100F215  +
test di di +
jnz loc_100F21A  +
or eax 0FFFFFFFFh +
jmp loc_100F251  +
test di di +
jz loc_100F224  +
test bx bx +
jnz loc_100F224  +
xor eax eax +
inc eax  +
jmp loc_100F251  +
mov edi [edx+10h] +
mov [ebp+arg_0] edi +
mov edi [esi+10h] +
cmp [ebp+arg_0] edi +
jz loc_100F23A  +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_100F251  +
test bx bx +
jz loc_100F243  +
push ecx  +
push eax  +
jmp loc_100F249  +
push dword ptr [esi+4]  +
push dword ptr [edx+4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
cmp dword_10223C0 0 +
jz loc_100F270  +
mov eax dword_1021FB8 +
mov lpDateStr eax +
jmp loc_100F29B  +
push offset lpDateStr  +
push 0FFFFh  +
call sub_1001E19  +
test eax eax +
jz loc_100F287  +
xor eax eax +
inc eax  +
retn   +
mov eax lpDateStr +
mov dword_1021FB8 eax +
mov dword_10223C0 1 +
xor eax eax +
retn   +
***
mov lpDateStr offset unk_101D340 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
mov eax 105h +
mov [ebp+var_8] ebx +
mov [ebp+Buffer] ebx +
cmp [ebp+arg_4] ax +
jnb loc_100F2D8  +
mov eax 84Bh +
jmp loc_100F481  +
mov ecx [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
xor eax eax +
mov [ecx] ax +
cmp edi ebx +
jz loc_100F2FD  +
cmp [ebp+nSize] 10h +
jnb loc_100F2F8  +
mov eax 84Bh +
jmp loc_100F480  +
xor eax eax +
mov [edi] ax +
push esi  +
xor esi esi +
cmp dword_101FC80 ebx +
jz loc_100F330  +
mov eax offset dword_101FC80 +
push dword ptr [eax]  +
push offset aDomain  +
call sub_10121B4  +
test eax eax +
jl loc_100F324  +
mov [ebp+var_8] 1 +
inc esi  +
lea eax dword_101FC80[esi*4] +
cmp [eax] ebx +
jnz loc_100F30D  +
lea eax [ebp+arg_8] +
push eax  +
xor esi esi +
inc esi  +
push esi  +
push ebx  +
call DsRoleGetPrimaryDomainInformation  +
cmp eax ebx +
jz loc_100F348  +
push eax  +
call sub_100295A  +
cmp edi ebx +
jz loc_100F35E  +
mov eax [ebp+arg_8] +
push dword ptr [eax+8]  +
push [ebp+nSize]  +
push edi  +
call wcscpy_s  +
add esp 0Ch +
mov eax [ebp+arg_8] +
mov ecx [eax] +
cmp ecx 4 +
jz loc_100F460  +
cmp ecx 5 +
jz loc_100F460  +
cmp [ebp+var_8] ebx +
jnz loc_100F3B5  +
movzx eax [ebp+arg_4] +
mov esi offset username +
push esi  +
push eax  +
push [ebp+arg_0]  +
call wcscpy_s  +
add esp 0Ch +
cmp edi ebx +
jz loc_100F475  +
lea eax [ebp+nSize] +
push eax  +
push edi  +
call ds:GetComputerNameW  +
test eax eax +
jnz loc_100F475  +
push esi  +
push [ebp+nSize]  +
push edi  +
jmp loc_100F46D  +
cmp dword_10223C4 ebx +
jnz loc_100F3DB  +
cmp [eax+0Ch] ebx +
jnz loc_100F3C7  +
mov eax [eax+8] +
jmp loc_100F3CA  +
mov eax [eax+0Ch] +
push eax  +
push 0E6Dh  +
call sub_1010933  +
mov dword_10223C4 esi +
lea eax [ebp+Buffer] +
push eax  +
mov eax [ebp+arg_10] +
neg eax  +
sbb eax eax +
and eax 1000h +
add eax 20h +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call ds:DsGetDcNameW  +
cmp eax ebx +
jz loc_100F403  +
push eax  +
call sub_100295A  +
push [ebp+arg_8]  +
call DsRoleFreeMemory  +
mov edi [ebp+Buffer] +
cmp [edi] ebx +
jnz loc_100F41C  +
mov ecx [ebp+arg_0] +
xor eax eax +
mov [ecx] ax +
jmp loc_100F47D  +
mov esi [edi] +
mov eax esi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_100F423  +
sub eax ecx +
movzx ecx [ebp+arg_4] +
sar eax 1 +
lea edx [ecx-1] +
cmp eax edx +
jbe loc_100F449  +
push edi  +
call NetApiBufferFree  +
mov eax 84Bh +
jmp loc_100F47F  +
push esi  +
push ecx  +
push [ebp+arg_0]  +
call wcscpy_s  +
add esp 0Ch +
push [ebp+Buffer]  +
call NetApiBufferFree  +
jmp loc_100F47D  +
movzx eax [ebp+arg_4] +
push offset username  +
push eax  +
push [ebp+arg_0]  +
call wcscpy_s  +
add esp 0Ch +
push [ebp+arg_8]  +
call DsRoleFreeMemory  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
cmp dword_101FC80 esi +
jz loc_100F4C0  +
mov eax offset dword_101FC80 +
push dword ptr [eax]  +
push offset aDomain  +
call sub_10121B4  +
test eax eax +
jl loc_100F4B3  +
xor edi edi +
inc edi  +
inc esi  +
lea eax dword_101FC80[esi*4] +
cmp dword ptr [eax] 0 +
jnz loc_100F4A0  +
call sub_10078D8  +
test eax eax +
jz loc_100F4D7  +
test edi edi +
jnz loc_100F4D7  +
push 0DBBh  +
call sub_100295A  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor eax eax +
xor esi esi +
mov [ebp+cchBuffer] 1FFh +
mov word_10223BE ax +
cmp hSCManager esi +
jnz loc_100F521  +
push 80000000h  +
push esi  +
push esi  +
call ds:OpenSCManagerW  +
mov hSCManager eax +
cmp eax esi +
jnz loc_100F521  +
call ds:GetLastError  +
push eax  +
call sub_100295A  +
lea eax [ebp+cchBuffer] +
push eax  +
mov esi offset DisplayName +
push esi  +
push [ebp+lpServiceName]  +
push hSCManager  +
call ds:GetServiceDisplayNameW  +
test eax eax +
mov eax [ebp+lpServiceName] +
jz loc_100F543  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
lea eax [ebp+TotalEntries] +
push eax  +
lea eax [ebp+EntriesRead] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push ebx  +
call NetUseEnum  +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_100F58A  +
cmp eax 6B5h +
jnz loc_100F584  +
mov eax 85Ah +
push eax  +
call sub_100295A  +
push offset sub_100F1EE  +
push 1Ch  +
push [ebp+EntriesRead]  +
push [ebp+Buffer]  +
call ds:qsort  +
add esp 10h +
xor ecx ecx +
cmp [ebp+EntriesRead] ebx +
jbe loc_100F5C7  +
mov eax [ebp+Buffer] +
add eax 14h +
mov edx [eax-14h] +
cmp [edx] bx +
jnz loc_100F5C7  +
cmp [eax+4] ebx +
jnz loc_100F5C7  +
cmp [eax] ebx +
jnz loc_100F5C7  +
inc ecx  +
add eax 1Ch +
cmp ecx [ebp+EntriesRead] +
jb loc_100F5AD  +
cmp ecx [ebp+EntriesRead] +
jz loc_100F637  +
push 0E56h  +
call sub_10108F6  +
mov esi [ebp+Buffer] +
mov [ebp+var_C] ebx +
cmp [ebp+EntriesRead] ebx +
jbe loc_100F617  +
mov edi offset a15_15fwsFws +
mov eax [esi] +
cmp [eax] bx +
jz loc_100F5F2  +
push dword ptr [esi+4]  +
jmp loc_100F5FF  +
cmp [esi+18h] ebx +
jnz loc_100F5FC  +
cmp [esi+14h] ebx +
jz loc_100F609  +
push dword ptr [esi+4]  +
push eax  +
push edi  +
call sub_1010562  +
add esp 0Ch +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
add esi 1Ch +
cmp eax [ebp+EntriesRead] +
jb loc_100F5E6  +
push 0E57h  +
call sub_10108F6  +
push ebx  +
push 14A6h  +
call sub_1010970  +
test eax eax +
jnz loc_100F637  +
push 2  +
call sub_1002992  +
mov [ebp+var_C] ebx +
cmp [ebp+EntriesRead] ebx +
jbe loc_100F719  +
mov esi [ebp+Buffer] +
add esi 18h +
mov eax [esi-18h] +
cmp [eax] bx +
jz loc_100F65F  +
push 1  +
push eax  +
push ebx  +
call NetUseDel  +
mov [ebp+var_8] eax +
jmp loc_100F678  +
xor edi edi +
cmp [esi] ebx +
jbe loc_100F678  +
push 1  +
push dword ptr [esi-14h]  +
push ebx  +
call NetUseDel  +
inc edi  +
mov [ebp+var_8] eax +
cmp edi [esi] +
jb loc_100F665  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_100F707  +
cmp eax 43h +
jz loc_100F707  +
cmp eax 8CAh +
jz loc_100F707  +
cmp eax 961h +
jz loc_100F699  +
push eax  +
jmp loc_100F702  +
mov eax [esi-18h] +
cmp [eax] bx +
jnz loc_100F6A4  +
mov eax [esi-14h] +
push 1  +
push 0E6Bh  +
mov dword_1019DD8 eax +
call sub_1010914  +
push ebx  +
push 14A9h  +
call sub_1010970  +
test eax eax +
jnz loc_100F6CB  +
push 2  +
call sub_1002992  +
mov eax [esi-18h] +
cmp [eax] bx +
jz loc_100F6E1  +
push 2  +
push eax  +
push ebx  +
call NetUseDel  +
mov [ebp+var_8] eax +
jmp loc_100F6FA  +
xor edi edi +
cmp [esi] ebx +
jbe loc_100F6FF  +
push 2  +
push dword ptr [esi-14h]  +
push ebx  +
call NetUseDel  +
inc edi  +
mov [ebp+var_8] eax +
cmp edi [esi] +
jb loc_100F6E7  +
cmp [ebp+var_8] ebx +
jz loc_100F707  +
push [ebp+var_8]  +
call sub_100295A  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
add esi 1Ch +
cmp eax [ebp+EntriesRead] +
jb loc_100F649  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
pop edi  +
pop esi  +
mov lpDateStr offset unk_101D340 +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
mov ebx 1000h +
cmp [ebp+arg_0] 0 +
jnz loc_100F792  +
push edi  +
push [ebp+arg_10]  +
push ebx  +
push lpDateStr  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+dwBytes]  +
call sub_1016CF9  +
jmp loc_100F7AE  +
cmp [ebp+arg_0] 1 +
jnz loc_100F7B2  +
push edi  +
push [ebp+arg_10]  +
push ebx  +
push lpDateStr  +
push [ebp+arg_C]  +
push [ebp+dwBytes]  +
call sub_1016E81  +
mov esi eax +
jmp loc_100F7B5  +
push 7Ch  +
pop esi  +
mov eax esi +
sub eax 6Fh +
jz loc_100F7C8  +
sub eax 7Bh +
jz loc_100F7C8  +
sub eax 761h +
jnz loc_100F7DE  +
call sub_100F25B  +
test eax eax +
jnz loc_100F7DE  +
movzx eax word ptr [edi] +
cmp bx ax +
jnb loc_100F7E2  +
movzx ebx ax +
jmp loc_100F771  +
mov eax esi +
jmp loc_100F7E7  +
mov eax 85Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+lpServices] +
xor ebx ebx +
push eax  +
mov esi 0FA0h +
push esi  +
mov [ebp+hService] ebx +
mov [ebp+lpServices] ebx +
mov [ebp+var_10] ebx +
call sub_1001E19  +
test eax eax +
jz loc_100F823  +
push 8  +
call sub_100295A  +
mov eax hSCManager +
cmp eax ebx +
jnz loc_100F84F  +
push 80000000h  +
push ebx  +
push ebx  +
call ds:OpenSCManagerW  +
mov hSCManager eax +
cmp eax ebx +
jnz loc_100F84F  +
call ds:GetLastError  +
mov edi eax +
jmp loc_100F8E7  +
push 0Ch  +
push [ebp+lpServiceName]  +
push eax  +
call ds:OpenServiceW  +
mov edi eax +
mov [ebp+hService] edi +
cmp edi ebx +
jz loc_100F842  +
lea eax [ebp+ServiceStatus] +
push eax  +
push edi  +
call ds:QueryServiceStatus  +
test eax eax +
jz loc_100F842  +
cmp [ebp+ServiceStatus.dwCurrentState] 1 +
jnz loc_100F88B  +
push [ebp+lpServiceName]  +
mov edi 0DC1h +
call sub_100F4DF  +
mov [ebp+var_10] eax +
jmp loc_100F8E7  +
test byte ptr [ebp+ServiceStatus.dwControlsAccepted] 1 +
jnz loc_100F898  +
mov edi 88Fh +
jmp loc_100F8E7  +
lea eax [ebp+ServicesReturned] +
push eax  +
lea eax [ebp+pcbBytesNeeded] +
push eax  +
push esi  +
push [ebp+lpServices]  +
mov esi ds:EnumDependentServicesW +
push 1  +
push edi  +
call esi  +
test eax eax +
jnz loc_100F940  +
mov ebx ds:GetLastError +
call ebx  +
mov edi eax +
cmp edi 0EAh +
jnz loc_100F8E5  +
push [ebp+lpServices]  +
call sub_1001E31  +
mov edi [ebp+pcbBytesNeeded] +
lea eax [ebp+lpServices] +
push eax  +
push edi  +
call sub_1001E19  +
test eax eax +
jz loc_100F921  +
push 8  +
pop edi  +
xor ebx ebx +
cmp [ebp+lpServices] ebx +
jz loc_100F8F4  +
push [ebp+lpServices]  +
call sub_1001E31  +
cmp [ebp+hService] ebx +
jz loc_100F902  +
push [ebp+hService]  +
call ds:CloseServiceHandle  +
cmp edi ebx +
jz loc_100F9C7  +
cmp [ebp+var_10] ebx +
jz loc_100F9C1  +
push [ebp+var_10]  +
push edi  +
call sub_101081B  +
jmp loc_100F9C7  +
lea eax [ebp+ServicesReturned] +
push eax  +
lea eax [ebp+pcbBytesNeeded] +
push eax  +
push edi  +
push [ebp+lpServices]  +
push 1  +
push [ebp+hService]  +
call esi  +
test eax eax +
jnz loc_100F93E  +
call ebx  +
mov edi eax +
jmp loc_100F8E5  +
xor ebx ebx +
cmp [ebp+ServicesReturned] ebx +
jnz loc_100F949  +
xor edi edi +
jmp loc_100F8E7  +
push [ebp+lpServiceName]  +
call sub_100F4DF  +
push eax  +
push 0DCAh  +
call sub_1010933  +
xor esi esi +
cmp [ebp+ServicesReturned] ebx +
jbe loc_100F986  +
xor edi edi +
mov eax [ebp+lpServices] +
push dword ptr [edi+eax+4]  +
push offset aFws  +
call sub_1010562  +
pop ecx  +
pop ecx  +
call sub_10108A7  +
inc esi  +
add edi 24h +
cmp esi [ebp+ServicesReturned] +
jb loc_100F965  +
call sub_10108A7  +
push ebx  +
push 14A6h  +
call sub_1010970  +
test eax eax +
jnz loc_100F9A1  +
push 2  +
call sub_1002992  +
xor edi edi +
cmp [ebp+ServicesReturned] ebx +
jbe loc_100F945  +
xor esi esi +
mov eax [ebp+lpServices] +
push ebx  +
push dword ptr [esi+eax]  +
call sub_100B7CB  +
inc edi  +
add esi 24h +
cmp edi [ebp+ServicesReturned] +
jnb loc_100F945  +
jmp loc_100F9AA  +
push edi  +
call sub_100295A  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10223C8 +
test eax eax +
jnz loc_100F9F5  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov dword_10223C8 eax +
test eax eax +
jz loc_100F9FF  +
push [ebp+lpProcName]  +
push eax  +
call ds:GetProcAddress  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10223CC +
test eax eax +
jnz loc_100FA45  +
push offset aNwapi32_dll  +
call ds:LoadLibraryW  +
mov dword_10223CC eax +
test eax eax +
jz loc_100FA4F  +
push [ebp+lpProcName]  +
push eax  +
call ds:GetProcAddress  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10223D0 +
test eax eax +
jnz loc_100FA9B  +
push offset aGetncpsecretke  +
call sub_100F9D3  +
mov dword_10223D0 eax +
test eax eax +
jnz loc_100FA9B  +
mov eax 0C00000BBh +
pop ebp  +
retn 4  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10223D4 +
test eax eax +
jnz loc_100FADF  +
push offset aReturnnetwaref  +
call sub_100F9D3  +
mov dword_10223D4 eax +
test eax eax +
jnz loc_100FADF  +
mov eax 0C00000BBh +
pop ebp  +
retn 10h  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1014E5C  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1015245  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10223D8 +
test eax eax +
jnz loc_100FB5B  +
push offset aNwattachtofile  +
call sub_100FA23  +
mov dword_10223D8 eax +
test eax eax +
jnz loc_100FB5B  +
push 32h  +
pop eax  +
pop ebp  +
retn 0Ch  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10223DC +
test eax eax +
jnz loc_100FBA3  +
push offset aNwdetachfromfi  +
call sub_100FA23  +
mov dword_10223DC eax +
test eax eax +
jnz loc_100FBA3  +
push 32h  +
pop eax  +
pop ebp  +
retn 4  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10223E0 +
test eax eax +
jnz loc_100FBEC  +
push offset aNwgetfileserve  +
call sub_100FA23  +
mov dword_10223E0 eax +
test eax eax +
jnz loc_100FBEC  +
push 32h  +
pop eax  +
pop ebp  +
retn 20h  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_C] 0 +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_30] eax +
mov eax [esi+2Ch] +
mov [ebp+var_48] eax +
mov eax [esi+60h] +
mov [ebp+var_44] esi +
mov [ebp+var_40] eax +
jz loc_100FC49  +
or [ebp+var_40] 10000000h +
push offset aSupervisor  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
xor ebx ebx +
pop ecx  +
inc ebx  +
pop ecx  +
test eax eax +
jnz loc_100FC62  +
mov [ebp+var_40] ebx +
lea eax [ebp+var_28] +
push eax  +
call sub_100FA71  +
test eax eax +
jge loc_100FC79  +
mov eax 0F7Eh +
jmp loc_100FE28  +
push edi  +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_30]  +
lea eax [ebp+var_28] +
push [ebp+var_40]  +
push eax  +
call sub_100FAB5  +
test eax eax +
jl loc_100FE22  +
lea eax [ebp+var_50] +
push eax  +
call ds:NtQuerySystemTime  +
test eax eax +
jl loc_100FE22  +
push 8  +
pop ecx  +
mov word ptr [ebp+var_34] cx +
mov word ptr [ebp+var_34+2] cx +
lea ecx [ebp+var_38] +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push ebx  +
lea eax [ebp+var_50] +
push eax  +
push [ebp+var_34]  +
push offset aNwpasswordset  +
push [ebp+var_48]  +
call sub_100FAFB  +
test eax eax +
jl loc_100FE22  +
cmp [ebp+arg_8] 0 +
jnz loc_100FDEC  +
push 2  +
pop edi  +
mov ecx edi +
mov word ptr [ebp+var_34] cx +
mov word ptr [ebp+var_34+2] cx +
lea ecx [ebp+var_38] +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push ebx  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+var_34]  +
mov [ebp+var_3C] 0FFFFh +
push offset aMaxconnections  +
push [ebp+var_2C]  +
call sub_100FAFB  +
test eax eax +
jl loc_100FE22  +
push 6  +
pop esi  +
mov ecx edi +
mov word ptr [ebp+var_34] cx +
mov word ptr [ebp+var_34+2] cx +
lea ecx [ebp+var_38] +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push ebx  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+var_34]  +
mov [ebp+var_3C] esi +
push offset aGraceloginallo  +
push [ebp+var_2C]  +
call sub_100FAFB  +
test eax eax +
jl loc_100FE22  +
mov ecx edi +
mov word ptr [ebp+var_34] cx +
lea ecx [ebp+var_38] +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push ebx  +
lea eax [ebp+var_3C] +
push eax  +
mov word ptr [ebp+var_34+2] di +
push [ebp+var_34]  +
mov [ebp+var_3C] esi +
push offset aGraceloginrema  +
push [ebp+var_2C]  +
call sub_100FAFB  +
test eax eax +
jl loc_100FE22  +
xor ecx ecx +
mov word ptr [ebp+var_34] cx +
mov word ptr [ebp+var_34+2] cx +
lea ecx [ebp+var_38] +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push ebx  +
xor eax eax +
push eax  +
push [ebp+var_34]  +
push offset aNwhomedir  +
push [ebp+var_2C]  +
call sub_100FAFB  +
test eax eax +
jl loc_100FE22  +
xor ecx ecx +
mov word ptr [ebp+var_34] cx +
mov word ptr [ebp+var_34+2] cx +
lea ecx [ebp+var_38] +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push ebx  +
xor eax eax +
push eax  +
push [ebp+var_34]  +
push offset aNwlogonfrom  +
push [ebp+var_2C]  +
call sub_100FAFB  +
test eax eax +
jl loc_100FE22  +
mov eax [ebp+var_44] +
or dword ptr [eax+18h] 20000h +
mov esi eax +
push 10h  +
pop ecx  +
mov word ptr [ebp+var_34] cx +
mov word ptr [ebp+var_34+2] cx +
lea ecx [ebp+var_38] +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push ebx  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_34]  +
push offset aNwpassword  +
push [ebp+var_2C]  +
call sub_100FAFB  +
test eax eax +
jl loc_100FE22  +
mov eax [ebp+var_2C] +
mov [esi+2Ch] eax +
xor eax eax +
jmp loc_100FE27  +
mov eax 0F7Fh +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea ecx [ebp+var_8] +
push ecx  +
xor eax eax +
lea ecx [ebp+var_4] +
push ecx  +
xor ebx ebx +
mov word ptr [ebp+var_C] ax +
mov word ptr [ebp+var_C+2] ax +
mov edi [ebp+var_C] +
mov eax [ebp+arg_0] +
mov eax [eax+2Ch] +
inc ebx  +
push ebx  +
xor esi esi +
push esi  +
push edi  +
push offset aNwpassword  +
push eax  +
call sub_100FAFB  +
test eax eax +
jnz loc_100FF56  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push esi  +
push edi  +
push offset aMaxconnections  +
push [ebp+var_4]  +
call sub_100FAFB  +
test eax eax +
jnz loc_100FF56  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push esi  +
push edi  +
push offset aNwpasswordset  +
push [ebp+var_4]  +
call sub_100FAFB  +
test eax eax +
jnz loc_100FF56  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push esi  +
push edi  +
push offset aGraceloginallo  +
push [ebp+var_4]  +
call sub_100FAFB  +
test eax eax +
jnz loc_100FF56  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push esi  +
push edi  +
push offset aGraceloginrema  +
push [ebp+var_4]  +
call sub_100FAFB  +
test eax eax +
jnz loc_100FF56  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push esi  +
push edi  +
push offset aNwlogonfrom  +
push [ebp+var_4]  +
call sub_100FAFB  +
test eax eax +
jnz loc_100FF56  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push esi  +
push edi  +
push offset aNwhomedir  +
push [ebp+var_4]  +
call sub_100FAFB  +
test eax eax +
jnz loc_100FF56  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
and dword ptr [eax+18h] 0FFFDFFFFh +
mov [eax+2Ch] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1010023  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1010023  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_101001D  +
cmp eax 19930521h +
jz loc_101001D  +
cmp eax 19930522h +
jz loc_101001D  +
cmp eax 1994000h +
jnz loc_1010023  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_101004F  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_101004B  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10100B0  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10100A8  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10100B2  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1010098  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_10017FB  +
and dword ptr [ebp-4] 0 +
mov esi 1000000h +
push esi  +
call sub_1010039  +
pop ecx  +
test eax eax +
jz loc_1010119  +
mov eax [ebp+8] +
sub eax esi +
push eax  +
push esi  +
call sub_1010073  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1010119  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1010122  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor eax eax +
call sub_1002E64  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1002D45  +
push offset dword_1019000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10191E8 eax +
mov dword_10191E4 ecx +
mov dword_10191E0 edx +
mov dword_10191DC ebx +
mov dword_10191D8 esi +
mov dword_10191D4 edi +
mov word_1019200 ss +
mov word_10191F4 cs +
mov word_10191D0 ds +
mov word_10191CC es +
mov word_10191C8 fs +
mov word_10191C4 gs +
pushf   +
pop dword_10191F8  +
mov eax [ebp+0] +
mov dword_10191EC eax +
mov eax [ebp+4] +
mov dword_10191F0 eax +
lea eax [ebp+8] +
mov dword_10191FC eax +
mov eax [ebp-320h] +
mov dword_1019138 10001h +
mov eax dword_10191F0 +
mov dword_10190F4 eax +
mov dword_10190E8 0C0000409h +
mov dword_10190EC 1 +
mov eax dword_1019000 +
mov [ebp-328h] eax +
mov eax dword_1019004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 3Ah  +
push [ebp+arg_0]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1010290  +
xor ecx ecx +
mov [eax] cx +
add eax 2 +
jmp loc_1010292  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 2Ch  +
push [ebp+arg_0]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10102BB  +
xor ecx ecx +
mov [eax] cx +
add eax 2 +
jmp loc_10102BD  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push [ebp+arg_0]  +
xor eax eax +
mov [esi] ax +
call sub_10128F2  +
test eax eax +
jnz loc_10102E5  +
xor eax eax +
inc eax  +
jmp loc_101031C  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10102EB  +
sub eax edx +
sar eax 1 +
cmp eax 5 +
ja loc_10102E0  +
push 0  +
push [ebp+arg_0]  +
call ds:wcstod  +
pop ecx  +
pop ecx  +
call _ftol2_sse  +
cmp eax 0FFFFh +
jg loc_10102E0  +
mov [esi] ax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
call sub_10128F2  +
test eax eax +
jnz loc_1010345  +
xor eax eax +
inc eax  +
jmp loc_10103A9  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101034A  +
sub eax edx +
sar eax 1 +
cmp eax 0Ah +
ja loc_1010340  +
jnz loc_1010395  +
mov ecx offset a4294967295 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101038C  +
test dx dx +
jz loc_1010388  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101038C  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1010366  +
xor eax eax +
jmp loc_1010391  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jg loc_1010340  +
push 0  +
push edi  +
call ds:wcstod  +
pop ecx  +
pop ecx  +
call _ftol2  +
mov [esi] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
call sub_10102C6  +
test ax ax +
jz loc_10103F2  +
movzx eax [ebp+arg_4] +
push [ebp+arg_8]  +
push eax  +
call sub_101081B  +
xor eax eax +
jmp loc_10103F6  +
mov ax word ptr [ebp+arg_0] +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
call sub_1010326  +
test ax ax +
jz loc_1010426  +
movzx eax [ebp+arg_4] +
push [ebp+arg_8]  +
push eax  +
call sub_101081B  +
xor eax eax +
jmp loc_1010429  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
mov esi offset Buffer +
push [ebp+dwMessageId]  +
push 800h  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
call sub_1001EAF  +
mov edi eax +
mov eax hConsoleHandle +
test edi edi +
jnz loc_1010467  +
mov eax [ebp+hConsoleHandle] +
push 1  +
push esi  +
push eax  +
call sub_1001CDF  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
mov esi offset Buffer +
push [ebp+dwMessageId]  +
push 800h  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
call sub_1001EAF  +
mov edi eax +
test edi edi +
jnz loc_10104B5  +
push 1  +
push esi  +
push [ebp+hConsoleHandle]  +
call sub_1001CDF  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax [ebp+arg_0] +
cmp ax 7Fh +
jbe loc_10104F0  +
mov ecx 0FF60h +
cmp ax cx +
jb loc_10104E3  +
add ecx 3Fh +
cmp ax cx +
jbe loc_10104F0  +
mov ecx 300h +
cmp ax cx +
sbb eax eax +
inc eax  +
jmp loc_10104F2  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
call ds:GetConsoleOutputCP  +
cmp eax 3A4h +
jz loc_101053B  +
cmp eax 3A8h +
jz loc_101053B  +
cmp eax 3B4h +
jbe loc_1010525  +
cmp eax 3B6h +
jbe loc_101053B  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101052B  +
sub eax edx +
sar eax 1 +
jmp loc_1010558  +
mov edx [ebp+arg_0] +
jmp loc_101054E  +
push eax  +
call sub_10104C2  +
inc esi  +
test eax eax +
jz loc_101054C  +
inc esi  +
inc edx  +
inc edx  +
movzx eax word ptr [edx] +
test ax ax +
jnz loc_1010540  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
mov esi offset word_1024880 +
push 1000h  +
push 1001h  +
push esi  +
call _vsnwprintf_s  +
add esp 14h +
xor eax eax +
push eax  +
push esi  +
push dword_1019038  +
mov word_1026880 ax +
call sub_1001CDF  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test ebx ebx +
jge loc_10105C1  +
mov [ebp+var_4] 1 +
neg ebx  +
push [ebp+arg_4]  +
mov esi [ebp+arg_8] +
push ebx  +
push ebx  +
push offset a_Ws_0  +
push 0FFFFFFFFh  +
push [ebp+arg_C]  +
push esi  +
call _snwprintf_s  +
mov edi eax +
add esp 1Ch +
test edi edi +
jz loc_1010617  +
jmp loc_10105EB  +
dec edi  +
xor eax eax +
mov [esi+edi*2] ax +
push esi  +
call sub_10104FB  +
cmp eax ebx +
ja loc_10105E4  +
cmp [ebp+var_4] 0 +
jz loc_1010615  +
cmp word ptr [esi+edi*2-2] 20h +
jz loc_1010615  +
push 2Eh  +
pop eax  +
mov [esi+edi*2-2] ax +
mov [esi+edi*2-4] ax +
mov [esi+edi*2-6] ax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+hFile]  +
call ds:GetFileType  +
mov ecx [ebp+arg_4] +
cmp eax 2 +
jnz loc_1010649  +
xor eax eax +
inc eax  +
mov [ecx] ax +
mov ecx [ebp+arg_8] +
mov eax 8082h +
jmp loc_101064B  +
xor eax eax +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
dec [ebp+arg_4]  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:GetStdHandle +
push edi  +
mov edi [ebp+dwMode] +
and dword ptr [edi] 0 +
lea eax [ebp+dwMode] +
push eax  +
push 0FFFFFFF6h  +
mov [ebp+dwMode] 17h +
call esi  +
push eax  +
call ds:GetConsoleMode  +
mov eax [ebp+dwMode] +
and eax 0FFFFFFF9h +
push eax  +
push 0FFFFFFF6h  +
call esi  +
push eax  +
call ds:SetConsoleMode  +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
push 0FFFFFFF6h  +
call esi  +
push eax  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_10106BE  +
cmp [ebp+NumberOfCharsRead] 1 +
jz loc_10106C8  +
mov eax 0FFFFh +
mov [ebp+Buffer] eax +
jmp loc_10106CB  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_10106FD  +
mov ecx 0FFFFh +
cmp ax cx +
jz loc_10106FD  +
cmp ax 8 +
jnz loc_10106EC  +
cmp ebx [ebp+arg_0] +
jz loc_101069D  +
dec ebx  +
dec ebx  +
dec dword ptr [edi]  +
jmp loc_101069D  +
mov [ebx] ax +
mov eax [edi] +
cmp eax [ebp+arg_4] +
jnb loc_10106F8  +
inc ebx  +
inc ebx  +
inc eax  +
mov [edi] eax +
jmp loc_101069D  +
push [ebp+dwMode]  +
push 0FFFFFFF6h  +
call esi  +
push eax  +
call ds:SetConsoleMode  +
xor eax eax +
push 0Ah  +
mov [ebx] ax +
call ds:putchar  +
mov eax [ebp+arg_4] +
cmp eax [edi] +
pop ecx  +
pop edi  +
sbb eax eax +
pop esi  +
and eax 84Bh +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
sub esp 18h +
dec [ebp+arg_4]  +
and dword ptr [eax] 0 +
push ebx  +
mov ebx ds:ReadConsoleW +
push esi  +
mov esi [ebp+NumberOfCharsRead] +
push edi  +
mov edi ds:GetStdHandle +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
push esi  +
push 0FFFFFFF6h  +
call edi  +
push eax  +
call ebx  +
test eax eax +
jz loc_101076E  +
cmp [ebp+NumberOfCharsRead] 1 +
jz loc_1010776  +
mov eax 0FFFFh +
mov [esi] ax +
movzx eax word ptr [esi] +
mov ecx 0FFFFh +
cmp ax cx +
jz loc_10107CC  +
cmp ax 0Dh +
jz loc_10107A3  +
cmp ax 0Ah +
jz loc_10107A3  +
mov ecx [ebp+arg_8] +
mov eax [ecx] +
cmp eax [ebp+arg_4] +
sbb edx edx +
neg edx  +
inc eax  +
lea esi [esi+edx*2] +
mov [ecx] eax +
jmp loc_1010754  +
lea eax [ebp+NumberOfEventsRead] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
push 0FFFFFFF6h  +
call edi  +
push eax  +
call ds:PeekConsoleInputW  +
test eax eax +
jz loc_10107CC  +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
push esi  +
push 0FFFFFFF6h  +
call edi  +
push eax  +
call ebx  +
mov ax [esi] +
mov ecx [ebp+arg_C] +
mov [ecx] ax +
mov ecx [ebp+arg_8] +
xor eax eax +
mov [esi] ax +
mov eax [ebp+arg_4] +
cmp eax [ecx] +
pop edi  +
sbb eax eax +
pop esi  +
and eax 84Bh +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push offset dword_1019DD8  +
push [ebp+dwMessageId]  +
push offset aNetmsg  +
push [ebp+hConsoleHandle]  +
call sub_1010432  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push 1  +
push [ebp+arg_0]  +
mov dword_1019DD8 eax +
call sub_1001C11  +
push 2  +
call sub_1002992  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push 1  +
call sub_1010623  +
test eax eax +
jnz loc_101087C  +
cmp word ptr [ebp+var_4] 1 +
jnz loc_101087C  +
mov ecx [ebp+var_8] +
mov eax 8082h +
and ecx eax +
cmp cx ax +
jnz loc_101087C  +
call sub_1012E3C  +
test ax ax +
jz locret_101088B  +
push 0  +
push off_10209C8  +
call sub_1010562  +
pop ecx  +
pop ecx  +
leave   +
retn   +
***
call sub_1010562  +
pop ecx  +
pop ecx  +
retn   +
***
call sub_1010562  +
pop ecx  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1000h  +
push offset unk_1022880  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10105A4  +
pop ebp  +
retn 0Ch  +
***
push 0DACh  +
call sub_10107F5  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword_1019038  +
push 0  +
push [ebp+dwMessageId]  +
call sub_10107F5  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword_1019038  +
push [ebp+arg_4]  +
push [ebp+dwMessageId]  +
call sub_10107F5  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword_1019038  +
mov eax [ebp+arg_4] +
push 1  +
push [ebp+dwMessageId]  +
mov dword_1019DD8 eax +
call sub_10107F5  +
pop ebp  +
retn 8  +
***
push 0  +
call sub_1002992  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1021AD0 +
test eax eax +
jz loc_1010983  +
add eax 0FFFFFFFEh +
jmp loc_101099F  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1013217  +
mov esi eax +
cmp esi 1 +
jbe loc_101099C  +
push esi  +
call sub_100295A  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
inc [ebp+arg_4]  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 3  +
pop ebx  +
mov esi 0E8Fh +
mov eax [ebp+arg_C] +
test eax eax +
jnz loc_10109DA  +
mov eax 1108h +
push [ebp+arg_10]  +
push eax  +
call sub_1010914  +
lea eax [ebp+dwMode] +
push eax  +
push [ebp+arg_4]  +
push edi  +
call sub_1010659  +
test eax eax +
jz loc_1010A02  +
push esi  +
call sub_10108F6  +
jmp loc_1010AAA  +
cmp [ebp+arg_14] 0 +
jz loc_1010A13  +
push edi  +
call sub_1012DF2  +
test ax ax +
jnz loc_10109F7  +
cmp [ebp+arg_8] 0 +
jz loc_1010ABB  +
push 1109h  +
call sub_10108F6  +
lea eax [ebp+dwMode] +
push eax  +
push 101h  +
lea eax [ebp+var_208] +
push eax  +
call sub_1010659  +
test eax eax +
jz loc_1010A46  +
push esi  +
jmp loc_1010A99  +
cmp [ebp+arg_14] 0 +
jz loc_1010A5D  +
lea eax [ebp+var_208] +
push eax  +
call sub_1012DF2  +
test ax ax +
jnz loc_1010A43  +
lea eax [ebp+var_208] +
mov ecx edi +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_1010A8B  +
test dx dx +
jz loc_1010A87  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_1010A8B  +
add ecx 4 +
add eax 4 +
test dx dx +
jnz loc_1010A65  +
xor eax eax +
jmp loc_1010A90  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1010ACC  +
push 0E90h  +
call sub_10108F6  +
lea eax [ebp+var_208] +
push eax  +
call sub_1002BEA  +
dec ebx  +
jnz loc_10109CE  +
push 0E96h  +
call sub_100295A  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 18h  +
lea eax [ebp+var_208] +
push eax  +
call sub_1002BEA  +
jmp loc_1010ABB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
movzx eax word ptr [ebp+arg_0] +
mov ecx [ebp+arg_4] +
and [ebp+var_4] 0 +
lea eax [ecx+eax*8] +
mov edx ecx +
cmp ecx eax +
jnb loc_1010B7E  +
and dword ptr [edx+4] 0 +
add edx 8 +
cmp edx eax +
jb loc_1010AFD  +
cmp ecx eax +
jnb loc_1010B7E  +
sub eax ecx +
dec eax  +
push ebx  +
shr eax 3 +
inc eax  +
push esi  +
lea esi [ecx+4] +
mov ebx eax +
push 100h  +
call ds:malloc  +
pop ecx  +
mov [esi] eax +
test eax eax +
jnz loc_1010B33  +
push 8  +
call sub_100295A  +
lea eax [ebp+arg_0] +
push eax  +
push dword ptr [esi-4]  +
push 80h  +
push dword ptr [esi]  +
push 0  +
push 0  +
call sub_101406F  +
test eax eax +
jz loc_1010B54  +
push eax  +
call sub_100295A  +
push dword ptr [esi]  +
call sub_10104FB  +
mov ecx [ebp+arg_0] +
cmp ecx eax +
ja loc_1010B6E  +
push dword ptr [esi]  +
call sub_10104FB  +
mov ecx eax +
mov [ebp+arg_0] ecx +
cmp ecx [ebp+var_4] +
jbe loc_1010B76  +
mov [ebp+var_4] ecx +
add esi 8 +
dec ebx  +
jnz loc_1010B1A  +
pop esi  +
pop ebx  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1010C05  +
cmp word ptr [esi] 0 +
jz loc_1010C05  +
mov edi offset off_1020B08 +
push edi  +
push offset unk_1020A10  +
lea eax [ebp+var_20C] +
push eax  +
push 2  +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1014120  +
test eax eax +
jz loc_1010BE7  +
mov eax 85Ch +
jmp loc_1010C08  +
lea eax [ebp+var_208] +
push eax  +
push edi  +
push esi  +
call sub_101402E  +
test eax eax +
jnz loc_1010C05  +
mov eax [ebp+var_208] +
mov [ebx] eax +
xor eax eax +
jmp loc_1010C08  +
push 57h  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1010CBF  +
cmp word ptr [edi] 0 +
jz loc_1010CBF  +
mov esi offset off_1020C98 +
push esi  +
push offset unk_1020C70  +
lea eax [ebp+var_10C] +
push eax  +
push 2  +
push 80h  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1014120  +
test eax eax +
jnz loc_1010CC2  +
lea eax [ebp+var_108] +
push eax  +
push esi  +
push edi  +
call sub_101402E  +
test eax eax +
jz loc_1010CB5  +
mov esi ds:_wcsicmp +
push (offset aYes+2)  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1010C9F  +
mov dword ptr [ebx] 1 +
xor eax eax +
jmp loc_1010CC2  +
push (offset aNo+2)  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1010CBF  +
mov dword ptr [ebx] 2 +
jmp loc_1010C9B  +
mov eax [ebp+var_108] +
mov [ebx] eax +
jmp loc_1010C9B  +
push 57h  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
or ebx 0FFFFFFFFh +
xor edi edi +
cmp dword_1021730 ebx +
jz loc_1010D3A  +
lea ecx [ebp+var_20] +
xor edx edx +
cmp edx 18h +
jnb loc_1010D3A  +
mov eax dword_1021730[edx] +
mov esi [ebp+arg_4] +
add eax esi +
cmp dword ptr [eax] 0 +
jz loc_1010D29  +
mov eax [eax] +
lea esi [eax+2] +
mov [ebp+var_4] esi +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1010D12  +
sub eax [ebp+var_4] +
sar eax 1 +
inc eax  +
mov [ecx] eax +
lea edi [edi+eax*2] +
jmp loc_1010D2C  +
and dword ptr [ecx] 0 +
add edx 8 +
add ecx 4 +
cmp dword_1021730[edx] ebx +
jnz loc_1010CF5  +
cmp dword_1021750 ebx +
jz loc_1010D8C  +
lea ecx [ebp+var_C] +
xor esi esi +
cmp esi 10h +
jnb loc_1010D8C  +
mov eax dword_1021750[esi] +
mov edx [ebp+arg_8] +
add eax edx +
cmp dword ptr [eax] 0 +
jz loc_1010D7B  +
mov eax [eax] +
lea edx [eax+2] +
mov [ebp+var_4] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1010D64  +
sub eax [ebp+var_4] +
sar eax 1 +
inc eax  +
mov [ecx] eax +
lea edi [edi+eax*2] +
jmp loc_1010D7E  +
and dword ptr [ecx] 0 +
add esi 8 +
add ecx 4 +
cmp dword_1021750[esi] ebx +
jnz loc_1010D47  +
cmp [ebp+arg_0] 1 +
jnz loc_1010DE4  +
cmp dword_1021768 ebx +
jz loc_1010DE4  +
lea ecx [ebp+var_14] +
xor edx edx +
cmp edx 10h +
jnb loc_1010DE4  +
mov eax dword_1021768[edx] +
mov esi [ebp+arg_8] +
add eax esi +
cmp dword ptr [eax] 0 +
jz loc_1010DD3  +
mov eax [eax] +
lea esi [eax+2] +
mov [ebp+var_4] esi +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1010DBC  +
sub eax [ebp+var_4] +
sar eax 1 +
inc eax  +
mov [ecx] eax +
lea edi [edi+eax*2] +
jmp loc_1010DD6  +
and dword ptr [ecx] 0 +
add edx 8 +
add ecx 4 +
cmp dword_1021768[edx] ebx +
jnz loc_1010D9F  +
mov esi [ebp+Buffer] +
lea eax [edi+90h] +
push esi  +
push eax  +
mov [ebp+var_4] eax +
call NetapipBufferAllocate  +
test eax eax +
jz loc_1010E03  +
push 8  +
pop eax  +
jmp loc_1010EF7  +
mov eax [esi] +
lea ecx [eax+edi+90h] +
mov edi [ebp+arg_4] +
mov [ebp+Buffer] ecx +
lea ecx [ebp+var_20] +
push ecx  +
push offset dword_1021730  +
push [ebp+var_4]  +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10141A3  +
lea eax [ebp+var_C] +
push eax  +
push offset dword_1021750  +
push [ebp+var_4]  +
lea eax [ebp+Buffer] +
push dword ptr [esi]  +
push [ebp+arg_8]  +
push eax  +
call sub_10141A3  +
mov eax [esi] +
mov ecx [edi+0Ch] +
mov [eax+18h] ecx +
mov eax [esi] +
mov ecx [edi+10h] +
mov [eax+1Ch] ecx +
mov ecx [esi] +
mov eax [ebp+arg_C] +
mov edx [eax] +
mov [ecx+24h] edx +
mov edx [eax+4] +
mov ecx [esi] +
mov [ecx+28h] edx +
mov edx [eax+8] +
mov ecx [esi] +
mov [ecx+2Ch] edx +
mov edx [eax+0Ch] +
mov ecx [esi] +
mov [ecx+38h] edx +
mov ecx [esi] +
mov [ecx+3Ch] ebx +
mov edx [eax+1Ch] +
mov ecx [esi] +
mov [ecx+40h] edx +
mov edx [eax+10h] +
mov ecx [esi] +
mov [ecx+44h] edx +
mov ecx [esi] +
mov [ecx+4Ch] ebx +
mov ecx [esi] +
mov [ecx+50h] ebx +
mov ecx [esi] +
mov [ecx+54h] ebx +
mov edx [eax+14h] +
mov ecx [esi] +
mov [ecx+58h] edx +
mov ecx [esi] +
mov [ecx+5Ch] ebx +
mov ecx [esi] +
mov [ecx+60h] ebx +
mov ecx [esi] +
mov [ecx+64h] ebx +
mov ecx [esi] +
mov [ecx+68h] ebx +
mov ecx [esi] +
mov [ecx+6Ch] ebx +
mov ecx [esi] +
mov [ecx+70h] ebx +
mov eax [eax+18h] +
mov ecx [esi] +
mov [ecx+74h] eax +
mov eax [esi] +
and dword ptr [eax+7Ch] 0 +
cmp [ebp+arg_0] 1 +
mov eax [esi] +
mov [eax+80h] ebx +
jnz loc_1010EF5  +
lea eax [ebp+var_14] +
push eax  +
push offset dword_1021768  +
push [ebp+var_4]  +
lea eax [ebp+Buffer] +
push dword ptr [esi]  +
push [ebp+arg_8]  +
push eax  +
call sub_10141A3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
call sub_10017FB  +
xor ebx ebx +
push dword ptr [ebp-24h]  +
call NetApiBufferFree  +
cmp [ebp-28h] ebx +
jz locret_1011118  +
push dword ptr [ebp-28h]  +
call NetApiBufferFree  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+entriesread] +
push edi  +
mov edi [ebp+bufptr] +
xor ebx ebx +
push ebx  +
push [ebp+domain]  +
lea eax [ebp+servertype] +
push [ebp+servertype]  +
push eax  +
push esi  +
push 0FFFFFFFFh  +
push edi  +
push [ebp+level]  +
push [ebp+servername]  +
call NetServerEnum  +
mov [ebp+domain] eax +
cmp eax ebx +
jz loc_1011179  +
cmp eax 0EAh +
jnz loc_10111CD  +
cmp [ebp+level] 64h +
mov edi [edi] +
jnz loc_10111A8  +
cmp [esi] ebx +
jbe loc_10111CD  +
lea eax [edi+4] +
mov [ebp+level] eax +
push 4  +
push [ebp+level]  +
push edi  +
call ds:memmove  +
add [ebp+level] 8 +
add esp 0Ch +
inc ebx  +
add edi 4 +
cmp ebx [esi] +
jnb loc_10111CD  +
jmp loc_101118B  +
cmp [esi] ebx +
jbe loc_10111CD  +
lea eax [edi+4] +
mov [ebp+level] eax +
push 14h  +
push [ebp+level]  +
push edi  +
call ds:memmove  +
add [ebp+level] 18h +
add esp 0Ch +
inc ebx  +
add edi 14h +
cmp ebx [esi] +
jb loc_10111B2  +
mov eax [ebp+domain] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
cmp dword_1021688 0FFFFFFFFh +
push esi  +
push edi  +
mov [ebp+var_4] edx +
jz loc_1011240  +
lea ecx [ebp+var_14] +
cmp edx 18h +
jnb loc_1011240  +
mov eax dword_1021688[edx] +
add eax ebx +
cmp dword ptr [eax] 0 +
jz loc_101122E  +
mov eax [eax] +
lea edi [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1011212  +
mov esi [ebp+var_4] +
sub eax edi +
sar eax 1 +
inc eax  +
mov [ecx] eax +
lea eax [esi+eax*2] +
mov [ebp+var_4] eax +
jmp loc_1011231  +
and dword ptr [ecx] 0 +
add edx 8 +
add ecx 4 +
cmp dword_1021688[edx] 0FFFFFFFFh +
jnz loc_10111FB  +
cmp dword_10216A8 0FFFFFFFFh +
mov edi [ebp+arg_8] +
jz loc_101129A  +
lea ecx [ebp+var_20] +
xor edx edx +
cmp edx 18h +
jnb loc_101129A  +
mov eax dword_10216A8[edx] +
add eax edi +
cmp dword ptr [eax] 0 +
jz loc_1011288  +
mov eax [eax] +
lea esi [eax+2] +
mov [ebp+arg_4] esi +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_101126B  +
sub eax [ebp+arg_4] +
mov esi [ebp+var_4] +
sar eax 1 +
inc eax  +
mov [ecx] eax +
lea eax [esi+eax*2] +
mov [ebp+var_4] eax +
jmp loc_101128B  +
and dword ptr [ecx] 0 +
add edx 8 +
add ecx 4 +
cmp dword_10216A8[edx] 0FFFFFFFFh +
jnz loc_1011251  +
cmp [ebp+arg_0] 3 +
jnz loc_10112D1  +
mov eax dword_10216C8 +
xor ecx ecx +
jmp loc_10112CC  +
mov eax [eax+edi] +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10112AF  +
sub eax esi +
sar eax 1 +
add [ebp+var_4] eax +
mov [ebp+ecx*4+var_8] eax +
mov eax dword_10216D0[ecx*8] +
inc ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_10112A9  +
mov esi [ebp+Buffer] +
mov eax [ebp+var_4] +
push esi  +
add eax 0BCh +
push eax  +
call NetapipBufferAllocate  +
test eax eax +
jz loc_10112EF  +
push 8  +
pop eax  +
jmp loc_10114BB  +
mov eax [esi] +
mov ecx [ebp+var_4] +
lea edx [eax+ecx+0B0h] +
mov [ebp+arg_4] edx +
lea edx [ebp+var_14] +
push edx  +
push offset dword_1021688  +
add ecx 0B0h +
push ecx  +
push eax  +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
mov [ebp+arg_8] ecx +
call sub_10141A3  +
lea eax [ebp+var_20] +
push eax  +
push offset dword_10216A8  +
push [ebp+arg_8]  +
lea eax [ebp+arg_4] +
push dword ptr [esi]  +
push edi  +
push eax  +
call sub_10141A3  +
mov eax [esi] +
mov ecx [ebx+8] +
mov [eax+4] ecx +
mov eax [esi] +
mov ecx [ebx+0Ch] +
mov [eax+8] ecx +
mov eax [esi] +
mov ecx [ebx+10h] +
mov [eax+0Ch] ecx +
mov eax [esi] +
mov ecx [edi] +
mov [eax+14h] ecx +
mov eax [esi] +
mov ecx [edi+4] +
mov [eax+18h] ecx +
mov eax [esi] +
mov ecx [edi+8] +
mov [eax+1Ch] ecx +
mov eax [esi] +
mov ecx [ebx+18h] +
mov [eax+20h] ecx +
mov eax [esi] +
mov ecx [ebx+1Ch] +
mov [eax+24h] ecx +
mov eax [esi] +
mov ecx [edi+10h] +
mov [eax+2Ch] ecx +
mov eax [esi] +
and dword ptr [eax+30h] 0 +
mov eax [esi] +
mov ecx [edi+14h] +
mov [eax+34h] ecx +
mov eax [esi] +
mov ecx [edi+18h] +
mov [eax+38h] ecx +
mov eax [esi] +
mov ecx [ebx+20h] +
mov [eax+3Ch] ecx +
mov eax [esi] +
mov ecx [ebx+24h] +
mov [eax+40h] ecx +
mov eax [esi] +
mov ecx [ebx+28h] +
mov [eax+44h] ecx +
mov eax [esi] +
mov ecx [ebx+2Ch] +
mov [eax+4Ch] ecx +
mov eax [esi] +
mov ecx [edi+20h] +
mov [eax+54h] ecx +
mov eax [esi] +
mov ecx [edi+24h] +
mov [eax+58h] ecx +
mov eax [esi] +
mov ecx [edi+28h] +
mov [eax+5Ch] ecx +
mov eax [esi] +
cmp [ebp+arg_0] 3 +
mov ecx [edi+2Ch] +
mov [eax+60h] ecx +
mov eax [esi] +
mov ecx [edi+30h] +
mov [eax+64h] ecx +
mov eax [esi] +
mov ecx [edi+34h] +
mov [eax+68h] ecx +
mov eax [esi] +
mov ecx [edi+38h] +
mov [eax+6Ch] ecx +
mov eax [esi] +
mov ecx [edi+3Ch] +
mov [eax+70h] ecx +
mov eax [esi] +
mov ecx [edi+40h] +
mov [eax+74h] ecx +
mov eax [esi] +
mov ecx [edi+44h] +
mov [eax+78h] ecx +
mov eax [esi] +
mov ecx [edi+48h] +
mov [eax+7Ch] ecx +
mov eax [esi] +
mov ecx [edi+4Ch] +
mov [eax+80h] ecx +
mov eax [esi] +
mov ecx [edi+50h] +
mov [eax+84h] ecx +
mov eax [esi] +
mov ecx [edi+54h] +
mov [eax+88h] ecx +
mov eax [esi] +
mov ecx [edi+58h] +
mov [eax+8Ch] ecx +
mov eax [esi] +
mov ecx [edi+5Ch] +
mov [eax+90h] ecx +
mov eax [esi] +
mov ecx [edi+60h] +
mov [eax+94h] ecx +
mov eax [esi] +
mov ecx [edi+64h] +
mov [eax+98h] ecx +
mov eax [esi] +
mov ecx [edi+68h] +
mov [eax+9Ch] ecx +
mov eax [esi] +
mov ecx [edi+6Ch] +
mov [eax+0A0h] ecx +
mov eax [esi] +
mov ecx [edi+70h] +
mov [eax+0A4h] ecx +
mov eax [esi] +
mov ecx [edi+74h] +
mov [eax+0A8h] ecx +
jnz loc_10114B9  +
lea eax [ebp+var_8] +
push eax  +
push offset dword_10216C8  +
push [ebp+arg_8]  +
lea eax [ebp+arg_4] +
push dword ptr [esi]  +
push edi  +
push eax  +
call sub_10141A3  +
mov eax [esi] +
mov ecx [edi+7Ch] +
mov [eax+0B0h] ecx +
mov eax [esi] +
mov ecx [edi+80h] +
mov [eax+0B4h] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor ebx ebx +
cmp dword_1021688 0FFFFFFFFh +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_4] ebx +
jz loc_101152F  +
lea ecx [ebp+var_10] +
xor edx edx +
cmp edx 18h +
jnb loc_101152F  +
mov eax dword_1021688[edx] +
add eax edi +
cmp [eax] ebx +
jz loc_101151E  +
mov eax [eax] +
lea esi [eax+2] +
mov [ebp+arg_4] esi +
mov si [eax] +
inc eax  +
inc eax  +
cmp si bx +
jnz loc_1011501  +
sub eax [ebp+arg_4] +
mov esi [ebp+var_4] +
sar eax 1 +
inc eax  +
mov [ecx] eax +
lea eax [esi+eax*2] +
mov [ebp+var_4] eax +
jmp loc_1011520  +
mov [ecx] ebx +
add edx 8 +
add ecx 4 +
cmp dword_1021688[edx] 0FFFFFFFFh +
jnz loc_10114E8  +
mov esi [ebp+Buffer] +
mov eax [ebp+var_4] +
add eax 0BCh +
push esi  +
push eax  +
mov [ebp+arg_4] eax +
call NetapipBufferAllocate  +
test eax eax +
jz loc_1011550  +
push 8  +
pop eax  +
jmp loc_10116DF  +
mov eax [esi] +
mov ecx [ebp+var_4] +
lea ecx [eax+ecx+0BCh] +
mov [ebp+Buffer] ecx +
lea ecx [ebp+var_10] +
push ecx  +
push offset dword_1021688  +
push [ebp+arg_4]  +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10141A3  +
mov eax [esi] +
mov [eax+28h] ebx +
mov eax [esi] +
mov [eax+48h] ebx +
mov eax [esi] +
mov [eax+0ACh] ebx +
mov eax [esi] +
mov ecx [edi+8] +
mov [eax+4] ecx +
mov eax [esi] +
mov ecx [edi+0Ch] +
mov [eax+8] ecx +
mov eax [esi] +
mov ecx [edi+10h] +
mov [eax+0Ch] ecx +
mov eax [esi] +
mov ecx [edi+18h] +
mov [eax+20h] ecx +
mov eax [esi] +
mov ecx [edi+1Ch] +
mov [eax+24h] ecx +
mov eax [esi] +
mov ecx [edi+20h] +
mov [eax+3Ch] ecx +
mov eax [esi] +
mov ecx [edi+24h] +
mov [eax+40h] ecx +
mov eax [esi] +
mov ecx [edi+28h] +
mov [eax+44h] ecx +
mov eax [esi] +
mov ecx [edi+2Ch] +
mov [eax+4Ch] ecx +
mov ecx [esi] +
mov eax [ebp+arg_8] +
mov edx [eax] +
mov [ecx+6Ch] edx +
mov edx [eax+4] +
mov ecx [esi] +
mov [ecx+70h] edx +
mov edx [eax+8] +
mov ecx [esi] +
mov [ecx+78h] edx +
mov eax [eax+0Ch] +
mov ecx [esi] +
mov [ecx+84h] eax +
mov eax [esi] +
mov [eax+14h] ebx +
mov eax [esi] +
mov [eax+18h] ebx +
mov eax [esi] +
mov [eax+1Ch] ebx +
mov eax [esi] +
mov dword ptr [eax+2Ch] 1 +
mov eax [esi] +
mov [eax+30h] ebx +
mov eax [esi] +
or dword ptr [eax+34h] 0FFFFFFFFh +
mov eax [esi] +
mov dword ptr [eax+38h] 0Fh +
mov ecx [esi] +
mov eax 0FFFFh +
mov [ecx+54h] eax +
mov ecx [esi] +
mov [ecx+58h] eax +
mov ecx [esi] +
mov [ecx+5Ch] eax +
mov ecx [esi] +
cmp [ebp+arg_0] 3 +
mov dword ptr [ecx+60h] 7D0h +
mov ecx [esi] +
mov [ecx+64h] eax +
mov ecx [esi] +
mov dword ptr [ecx+68h] 1F40h +
mov ecx [esi] +
mov [ecx+74h] eax +
mov eax [esi] +
mov dword ptr [eax+7Ch] 40h +
mov eax [esi] +
mov ecx 12Ch +
mov [eax+80h] ecx +
mov eax [esi] +
mov dword ptr [eax+88h] 50h +
mov eax [esi] +
mov dword ptr [eax+8Ch] 8 +
mov edx [esi] +
push 5  +
pop eax  +
mov [edx+90h] eax +
mov edx [esi] +
mov [edx+94h] eax +
mov edx [esi] +
mov [edx+98h] eax +
mov edx [esi] +
mov [edx+9Ch] eax +
mov edx [esi] +
mov [edx+0A0h] ecx +
mov ecx [esi] +
mov [ecx+0A4h] eax +
mov eax [esi] +
mov dword ptr [eax+0A8h] 64h +
jnz loc_10116DD  +
mov eax [esi] +
mov [eax+0B8h] ebx +
mov eax [esi] +
or dword ptr [eax+0B0h] 0FFFFFFFFh +
mov eax [esi] +
mov [eax+0B4h] ebx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
xor ebx ebx +
cmp dword_10216D8 0FFFFFFFFh +
push edi  +
jz loc_101174C  +
lea ecx [ebp+var_C] +
xor edx edx +
cmp edx 18h +
jnb loc_101174C  +
mov eax dword_10216D8[edx] +
add eax esi +
cmp dword ptr [eax] 0 +
jz loc_101173A  +
mov eax [eax] +
lea edi [eax+2] +
mov [ebp+arg_8] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1011723  +
sub eax [ebp+arg_8] +
sar eax 1 +
inc eax  +
mov [ecx] eax +
lea ebx [ebx+eax*2] +
jmp loc_101173D  +
and dword ptr [ecx] 0 +
add edx 8 +
add ecx 4 +
cmp dword_10216D8[edx] 0FFFFFFFFh +
jnz loc_1011709  +
mov edi [ebp+Buffer] +
lea eax [ebx+34h] +
push edi  +
push eax  +
mov [ebp+arg_8] eax +
call NetapipBufferAllocate  +
test eax eax +
jnz loc_1011805  +
mov eax [edi] +
lea ecx [eax+ebx+34h] +
mov [ebp+Buffer] ecx +
lea ecx [ebp+var_C] +
push ecx  +
push offset dword_10216D8  +
push [ebp+arg_8]  +
push eax  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10141A3  +
mov ebx [ebp+bufptr] +
push ebx  +
push 1F6h  +
push [ebp+servername]  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1011805  +
mov eax [edi] +
mov ecx [esi+4] +
mov [eax+8] ecx +
mov eax [edi] +
mov ecx [esi+8] +
mov [eax+0Ch] ecx +
mov eax [edi] +
mov ecx [esi+0Ch] +
mov [eax+10h] ecx +
mov eax [edi] +
mov ecx [esi+20h] +
mov [eax+18h] ecx +
mov eax [edi] +
mov ecx [esi+24h] +
mov [eax+1Ch] ecx +
mov eax [edi] +
mov ecx [esi+3Ch] +
mov [eax+20h] ecx +
mov eax [edi] +
mov ecx [esi+40h] +
mov [eax+24h] ecx +
mov eax [edi] +
mov ecx [esi+44h] +
mov [eax+28h] ecx +
mov eax [edi] +
mov ecx [esi+4Ch] +
mov [eax+2Ch] ecx +
mov eax [ebx] +
mov ecx [esi+6Ch] +
mov [eax] ecx +
mov eax [ebx] +
mov ecx [esi+70h] +
mov [eax+4] ecx +
mov eax [ebx] +
mov ecx [esi+78h] +
mov [eax+8] ecx +
mov eax [ebx] +
mov ecx [esi+84h] +
mov [eax+0Ch] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+Buffer] +
test edi edi +
jz loc_1011921  +
cmp edi 1 +
jz loc_1011902  +
jbe loc_10118FE  +
cmp edi 3 +
ja loc_10118FE  +
and [ebp+bufptr] 0 +
lea eax [ebp+Buffer] +
push eax  +
push 66h  +
push [ebp+servername]  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1011945  +
mov ecx [ebp+Buffer] +
mov eax [ecx] +
cmp eax 1F4h +
jnz loc_10118AC  +
lea eax [ebp+bufptr] +
push eax  +
push 1F6h  +
push [ebp+servername]  +
call NetServerGetInfo  +
mov esi eax +
test esi esi +
jz loc_1011889  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_1011945  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+bufptr]  +
push [ebp+Buffer]  +
push edi  +
call sub_10114C7  +
push [ebp+Buffer]  +
mov esi eax +
test esi esi +
jz loc_10118DC  +
call NetApiBufferFree  +
push [ebp+bufptr]  +
jmp loc_101187D  +
cmp eax 190h +
jnz loc_10118F3  +
lea eax [ebp+bufptr] +
push eax  +
push 192h  +
push [ebp+servername]  +
call NetServerGetInfo  +
mov esi eax +
test esi esi +
jnz loc_101187A  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+bufptr]  +
push [ebp+Buffer]  +
push edi  +
call sub_10111DC  +
jmp loc_1011899  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
call NetApiBufferFree  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
jmp loc_1011943  +
push ecx  +
call NetApiBufferFree  +
push 3Bh  +
pop eax  +
jmp loc_1011945  +
push 7Ch  +
jmp loc_10118FB  +
lea eax [ebp+servername] +
push eax  +
push 65h  +
push [ebp+servername]  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1011945  +
mov edi [ebp+servername] +
push 5  +
lea esi [edi+4] +
pop ecx  +
movs   +
jmp loc_101193B  +
lea eax [ebp+servername] +
push eax  +
push 64h  +
push [ebp+servername]  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1011945  +
mov eax [ebp+servername] +
mov ecx [eax+4] +
mov [eax] ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+servername] +
mov [eax] ecx +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
lea eax [ebp+bufptr] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+arg_0]  +
xor esi esi +
push 2  +
push esi  +
mov [ebp+Buffer] esi +
mov [ebp+bufptr] esi +
call sub_10116EB  +
push esi  +
push [ebp+Buffer]  +
push 66h  +
push esi  +
call NetServerSetInfo  +
push [ebp+Buffer]  +
mov esi eax +
call NetApiBufferFree  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push offset asc_10119BC  +
push esi  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push ebx  +
call sub_10128F2  +
mov esi 0F1Fh +
test eax eax +
jnz loc_10119F1  +
push ebx  +
push esi  +
call sub_101081B  +
lea eax [ebp+arg_0] +
push eax  +
push ebx  +
call sub_10102C6  +
test ax ax +
jz loc_1011A07  +
push ebx  +
push esi  +
call sub_101081B  +
mov edi 834h +
mov eax edi +
cmp word ptr [ebp+arg_0] ax +
jb loc_1011A1F  +
mov eax 0BB7h +
cmp word ptr [ebp+arg_0] ax +
jbe loc_1011A41  +
xor eax eax +
push eax  +
push 0FFFFFFFFh  +
lea ecx [ebp+hMem] +
push ecx  +
movzx ecx word ptr [ebp+arg_0] +
push eax  +
push ecx  +
push eax  +
push 1100h  +
mov [ebp+hMem] eax +
call ds:FormatMessageW  +
test eax eax +
jnz loc_1011A9E  +
cmp word ptr [ebp+arg_0] di +
jb loc_1011A52  +
mov eax 270Fh +
cmp word ptr [ebp+arg_0] ax +
jbe loc_1011A59  +
push ebx  +
push esi  +
call sub_101081B  +
call sub_10108A7  +
movzx eax word ptr [ebp+arg_0] +
push 9  +
mov esi offset off_1019DAC +
push esi  +
push eax  +
push offset aNetmsg  +
push dword_1019038  +
call sub_1010432  +
test eax eax +
jnz loc_1011AB6  +
call sub_10108A7  +
movzx eax word ptr [ebp+arg_0] +
push 9  +
push esi  +
push eax  +
push offset aNeth  +
push dword_1019038  +
call sub_101047D  +
jmp loc_1011AB6  +
push [ebp+hMem]  +
push offset aS  +
call sub_1010562  +
pop ecx  +
pop ecx  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push hFile  +
call ds:GetFileType  +
test al 2 +
jz loc_1011B39  +
lea eax [ebp+Mode] +
push eax  +
push hFile  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_1011B39  +
mov eax [ebp+lpWideCharStr] +
lea edx [eax+2] +
xor esi esi +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1011B14  +
push esi  +
sub eax edx +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
sar eax 1 +
push eax  +
push [ebp+lpWideCharStr]  +
push hFile  +
call ds:WriteConsoleW  +
jmp loc_1011BA4  +
push ebx  +
push edi  +
mov edi ds:GetConsoleOutputCP +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push esi  +
call edi  +
mov ebx ds:WideCharToMultiByte +
push eax  +
call ebx  +
push eax  +
mov [ebp+cchMultiByte] eax +
call ds:malloc  +
pop ecx  +
mov [ebp+lpBuffer] eax +
cmp eax esi +
jz loc_1011BA0  +
push esi  +
push esi  +
push [ebp+cchMultiByte]  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push esi  +
call edi  +
push eax  +
call ebx  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
mov eax [ebp+cchMultiByte] +
dec eax  +
push eax  +
push [ebp+lpBuffer]  +
push hFile  +
call ds:WriteFile  +
push [ebp+lpBuffer]  +
mov esi eax +
call ds:free  +
pop ecx  +
pop edi  +
mov eax esi +
pop ebx  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
and dword ptr [ebp+Buffer] 0 +
cmp dword_10223EC 0 +
lea eax [ebp+arg_4] +
mov [ebp+Arguments] eax +
jnz loc_1011C05  +
push offset aNeth_dll  +
lea eax [ebp+LibFileName] +
push 0Fh  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryW  +
mov dword_10223EC eax +
test eax eax +
jnz loc_1011C05  +
call ds:GetLastError  +
push eax  +
call sub_100295A  +
lea eax [ebp+Arguments] +
push eax  +
push 0  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
push [ebp+dwMessageId]  +
push dword_10223EC  +
push 1900h  +
call ds:FormatMessageW  +
mov ecx [ebp+var_4] +
neg eax  +
sbb eax eax +
and eax dword ptr [ebp+Buffer] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 10h  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+arg_0]  +
call ds:_ultow  +
push 0BFAh  +
call sub_1011BAE  +
mov esi eax +
add esp 10h +
test esi esi +
jnz loc_1011C90  +
push 13Dh  +
call sub_100295A  +
jmp loc_1011C96  +
push esi  +
call sub_1011ADF  +
push esi  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1011CBD  +
push ebx  +
sub eax edx +
push esi  +
mov esi ds:LocalFree +
sar eax 1 +
push edi  +
mov [ebp+var_4] eax +
mov ebx 0BFCh +
push ebx  +
call sub_1011BAE  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_1011D1F  +
push [ebp+var_4]  +
push edi  +
push [ebp+arg_0]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1011D08  +
mov eax [ebp+var_4] +
cmp word ptr [edi+eax*2+2] 0Ah +
jz loc_1011D2E  +
push edi  +
call esi  +
add ebx 3 +
cmp ebx 0C65h +
jbe loc_1011CDC  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push ebx  +
call sub_1011C4F  +
push 0  +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1011D18  +
movsx eax [ebp+arg_4] +
sub eax 0 +
jz loc_1011D63  +
dec eax  +
jz loc_1011D44  +
dec eax  +
jnz loc_1011D69  +
inc ebx  +
push edi  +
inc ebx  +
call esi  +
jmp loc_1011D4E  +
push edi  +
call sub_1011ADF  +
push edi  +
call esi  +
inc ebx  +
push ebx  +
call sub_1011BAE  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_1011D63  +
push ebx  +
call sub_1011C4F  +
jmp loc_1011D69  +
push edi  +
call sub_1011ADF  +
push edi  +
jmp loc_1011D27  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 470h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push offset a_ocp  +
push esi  +
mov [ebp+var_41C] esi +
call ds:setlocale  +
pop ecx  +
pop ecx  +
push esi  +
call ds:SetThreadUILanguage  +
mov eax hConsoleHandle +
mov dword_1022840 offset aNet +
cmp [ebp+arg_4] si +
jz loc_1011DC0  +
mov eax dword_1019038 +
mov ecx [ebp+arg_0] +
mov hFile eax +
movsx eax cx +
xor edi edi +
mov [ebp+var_424] eax +
mov [ebp+var_420] edi +
cmp dword_101A6F0[eax*4] esi +
jz loc_1011E00  +
inc ecx  +
cmp edi 8 +
mov word ptr [ebp+edi*2+var_18] cx +
jge loc_1011DEE  +
inc edi  +
movsx eax cx +
cmp dword_101A6F0[eax*4] esi +
jnz loc_1011DE2  +
mov [ebp+var_420] edi +
xor eax eax +
mov ebx 0C66h +
push ebx  +
mov word ptr [ebp+edi*2+var_18] ax +
mov word ptr [ebp+edi*2+var_18+2] ax +
mov [ebp+var_42C] edi +
call sub_1011BAE  +
cmp eax esi +
mov esi ds:wcstok +
pop ecx  +
jnz loc_1011E79  +
push ebx  +
call sub_1011C4F  +
mov eax [ebp+var_41C] +
and [ebp+var_428] 0 +
add eax 0FFFFFFFEh +
mov [ebp+var_430] eax +
test eax eax +
jle loc_1011F80  +
mov ebx offset asc_1012154 +
mov eax [ebp+var_428] +
push ebx  +
push [ebp+eax*4+var_470]  +
call esi  +
pop ecx  +
pop ecx  +
push eax  +
call sub_101199D  +
push ebx  +
push 0  +
mov [ebp+var_434] eax +
call esi  +
jmp loc_1011F5E  +
mov ebx offset asc_1003744 +
push ebx  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_470] eax +
mov eax [ebp+var_41C] +
mov eax [ebp+eax*4+var_470] +
inc [ebp+var_41C]  +
test eax eax +
jz loc_1011E2E  +
cmp [ebp+var_41C] 0Fh +
jnb loc_1011E2E  +
push ebx  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_41C] +
mov [ebp+ecx*4+var_470] eax +
jmp loc_1011E8A  +
test edi edi +
jz loc_1011F68  +
push eax  +
call sub_101199D  +
xor edi edi +
cmp [ebp+var_420] edi +
mov [ebp+var_41C] eax +
jle loc_1011F53  +
movzx eax word ptr [ebp+edi*2+var_18] +
push dword_101A6EC[eax*4]  +
push [ebp+var_41C]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1011F07  +
inc edi  +
cmp edi [ebp+var_420] +
jge loc_1011F53  +
jmp loc_1011EDE  +
push [ebp+var_434]  +
call ds:_wcsdup  +
lea edi [ebp+edi*2+var_18] +
pop ecx  +
movzx ecx word ptr [edi] +
sub ecx [ebp+var_424] +
mov dword_1022840[ecx*4] eax +
test eax eax +
jnz loc_1011F36  +
push 0E80h  +
call sub_100295A  +
xor eax eax +
mov [edi] ax +
add edi 2 +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call wcscat_s  +
add esp 0Ch +
dec [ebp+var_420]  +
push ebx  +
push 0  +
call esi  +
mov edi [ebp+var_420] +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1011EC0  +
inc [ebp+var_428]  +
mov eax [ebp+var_428] +
cmp eax [ebp+var_430] +
jl loc_1011E51  +
xor ecx ecx +
test edi edi +
jle loc_1011FA6  +
movzx eax word ptr [ebp+ecx*2+var_18] +
mov edx eax +
sub edx [ebp+var_424] +
mov eax dword_101A6EC[eax*4] +
inc ecx  +
cmp ecx edi +
mov dword_1022840[edx*4] eax +
jl loc_1011F86  +
mov edi 0C67h +
xor ebx ebx +
push edi  +
mov [ebp+var_424] ebx +
call sub_1011BAE  +
pop ecx  +
test eax eax +
jnz loc_1011FFF  +
push edi  +
call sub_1011C4F  +
xor edi edi +
cmp dword_1022844 edi +
jz loc_1012039  +
add ebx 0FFFFFFFEh +
cmp ebx edi +
jle loc_1012039  +
lea esi [ebp+edi*4+var_470] +
push dword ptr [esi]  +
call sub_101199D  +
push eax  +
push dword_1022844  +
mov [esi] eax +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101202F  +
inc edi  +
cmp edi ebx +
jge loc_1012039  +
jmp loc_1011FD5  +
mov edi offset asc_1003744 +
push edi  +
push eax  +
call esi  +
mov [ebp+var_470] eax +
mov eax [ebp+ebx*4+var_470] +
pop ecx  +
inc ebx  +
pop ecx  +
test eax eax +
jz loc_1011FC4  +
cmp ebx 0Fh +
jnb loc_1011FC4  +
push edi  +
push 0  +
call esi  +
mov [ebp+ebx*4+var_470] eax +
jmp loc_101200E  +
mov [ebp+var_424] 1 +
mov eax hFile +
cmp eax dword_1019038 +
jnz loc_1012060  +
cmp [ebp+arg_4] 2 +
jnz loc_1012054  +
push 111Eh  +
jmp loc_1012059  +
push 111Dh  +
call sub_10108F6  +
jmp loc_1012080  +
cmp [ebp+arg_4] 2 +
push hConsoleHandle  +
push 0  +
jnz loc_1012076  +
push 111Eh  +
jmp loc_101207B  +
push 111Dh  +
call sub_10107F5  +
xor edi edi +
inc edi  +
lea eax [ebp+var_418] +
cmp [ebp+var_424] edi +
jnz loc_10120B9  +
push dword_1022844  +
push 200h  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
push dword ptr [ebp+arg_4]  +
lea eax [ebp+var_418] +
push eax  +
call sub_1011CB1  +
jmp loc_101213D  +
push dword_1022840  +
mov esi 200h +
push esi  +
push eax  +
call wcscpy_s  +
add esp 0Ch +
cmp [ebp+var_42C] edi +
mov ebx edi +
jl loc_101212A  +
push 0FFFFFFFFh  +
push offset dword_100385C  +
lea eax [ebp+var_418] +
push esi  +
push eax  +
call wcsncat_s  +
push 0FFFFFFFFh  +
push dword_1022840[ebx*4]  +
lea eax [ebp+var_418] +
push esi  +
push eax  +
call wcsncat_s  +
add esp 20h +
inc ebx  +
cmp ebx [ebp+var_42C] +
jg loc_101212A  +
jmp loc_10120D8  +
lea eax [ebp+var_418] +
push 20h  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101213D  +
xor ecx ecx +
mov [eax] cx +
push dword ptr [ebp+arg_4]  +
lea eax [ebp+var_418] +
push eax  +
call sub_1011CB1  +
test eax eax +
jz loc_1012110  +
push edi  +
call sub_1002992  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 8  +
***
xor eax eax +
cmp dword_101FC80 eax +
setz al  +
retn   +
***
xor eax eax +
cmp dword_101FC80 eax +
jz locret_101218D  +
cmp dword_101FC84 eax +
jnz locret_101218D  +
inc eax  +
retn   +
***
xor eax eax +
cmp dword_101FC80 eax +
jz locret_10121AE  +
cmp dword_101FC84 eax +
jz locret_10121AE  +
cmp dword_101FC88 eax +
jnz locret_10121AE  +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset Default  +
push [ebp+arg_4]  +
call ds:wcscspn  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi 2 +
jnb loc_10121D6  +
or eax 0FFFFFFFFh +
jmp loc_101221F  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10121DC  +
sub eax edx +
sar eax 1 +
cmp esi eax +
ja loc_10121D1  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_10121D1  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012208  +
sub eax edx +
sar eax 1 +
xor ecx ecx +
cmp esi eax +
setnz cl  +
mov eax ecx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_101FC80 0 +
push esi  +
mov esi offset dword_101FC80 +
jz loc_1012253  +
push dword ptr [esi]  +
push [ebp+arg_0]  +
call sub_10121B4  +
test eax eax +
jge loc_101225A  +
add esi 4 +
cmp dword ptr [esi] 0 +
jnz loc_101223D  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1012255  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_101FC80 +
test ecx ecx +
jz loc_101228D  +
call sub_101217A  +
test eax eax +
jz loc_1012289  +
push ecx  +
push [ebp+arg_0]  +
call sub_10121B4  +
test eax eax +
jge loc_101228D  +
xor eax eax +
jmp loc_1012290  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_101217A  +
test eax eax +
jnz loc_10122D8  +
call sub_1012193  +
test eax eax +
jz loc_10122D4  +
push dword_101FC80  +
push [ebp+arg_0]  +
call sub_10121B4  +
test eax eax +
jge loc_10122D8  +
push dword_101FC84  +
push [ebp+arg_0]  +
call sub_10121B4  +
test eax eax +
jge loc_10122D8  +
xor eax eax +
jmp loc_10122DB  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_C] 0 +
cmp dword_101FC80 0 +
jz loc_1012501  +
push ebx  +
push esi  +
push edi  +
mov ebx offset dword_101FC80 +
push 3Ah  +
push dword ptr [ebx]  +
call ds:wcschr  +
mov esi eax +
xor edi edi +
pop ecx  +
pop ecx  +
mov [ebp+var_4] esi +
cmp esi edi +
jz loc_1012321  +
xor eax eax +
mov [esi] ax +
push dword ptr [ebx]  +
call ds:_wcsupr  +
pop ecx  +
cmp esi edi +
jz loc_1012334  +
push 3Ah  +
pop eax  +
mov [esi] ax +
mov eax [ebp+arg_4] +
xor esi esi +
mov [ebp+var_8] edi +
cmp [eax] esi +
jz loc_1012381  +
push dword ptr [ebx]  +
push dword ptr [eax]  +
call sub_10121B4  +
mov [ebp+var_10] eax +
test eax eax +
jz loc_101236F  +
cmp eax 1 +
jnz loc_101235C  +
movzx eax si +
inc edi  +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_4] +
inc esi  +
movzx eax si +
imul eax eax +
add eax ecx +
cmp dword ptr [eax] 0 +
jz loc_1012378  +
jmp loc_1012340  +
movzx eax si +
xor edi edi +
mov [ebp+var_8] eax +
inc edi  +
test di di +
jnz loc_1012409  +
mov eax [ebx] +
mov ecx offset aHelp +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_10123AE  +
test dx dx +
jz loc_10123AA  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_10123AE  +
add ecx 4 +
add eax 4 +
test dx dx +
jnz loc_1012388  +
xor eax eax +
jmp loc_10123B3  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_10123C1  +
push 1  +
push [ebp+arg_0]  +
call sub_1011D71  +
mov eax [ebx] +
mov ecx offset a? +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_10123EE  +
test dx dx +
jz loc_10123EA  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_10123EE  +
add ecx 4 +
add eax 4 +
test dx dx +
jnz loc_10123C8  +
xor eax eax +
jmp loc_10123F3  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1012400  +
push eax  +
push [ebp+arg_0]  +
call sub_1011D71  +
push 1  +
push 0DB2h  +
jmp loc_1012416  +
cmp di 1 +
jbe loc_101242C  +
push 1  +
push 0DB3h  +
mov eax [ebx] +
mov dword_1019DD8 eax +
call sub_1001C11  +
push 0  +
push [ebp+arg_0]  +
call sub_1011D71  +
movzx eax word ptr [ebp+var_8] +
mov ecx [ebp+arg_4] +
imul eax eax +
lea esi [eax+ecx] +
mov eax [esi+8] +
xor edi edi +
sub eax edi +
jz loc_101244D  +
dec eax  +
dec eax  +
jnz loc_1012466  +
cmp [ebp+var_4] edi +
jz loc_1012452  +
jmp loc_1012466  +
cmp [ebp+var_4] edi +
jz loc_1012466  +
push edi  +
push 0DB1h  +
call sub_1001C11  +
push edi  +
push [ebp+arg_0]  +
call sub_1011D71  +
cmp [ebp+var_10] edi +
jnz loc_1012470  +
cmp [esi+4] edi +
jz loc_10124E7  +
mov eax [esi+4] +
cmp eax edi +
jnz loc_1012479  +
mov eax [esi] +
mov [ebp+var_8] eax +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_101247F  +
mov ecx [ebp+var_4] +
sub eax edx +
sar eax 1 +
cmp ecx edi +
jz loc_10124A7  +
lea esi [ecx+2] +
mov dx [ecx] +
inc ecx  +
inc ecx  +
cmp dx di +
jnz loc_1012497  +
sub ecx esi +
sar ecx 1 +
add eax ecx +
lea edi [eax+1] +
push 2  +
push edi  +
call ds:calloc  +
pop ecx  +
pop ecx  +
mov [ebx] eax +
test eax eax +
jnz loc_10124C5  +
push 85Ch  +
call sub_100295A  +
push [ebp+var_8]  +
push edi  +
push dword ptr [ebx]  +
call wcscpy_s  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jz loc_10124E7  +
push [ebp+var_4]  +
push edi  +
push dword ptr [ebx]  +
call wcscat_s  +
add esp 0Ch +
inc [ebp+var_C]  +
movzx ebx word ptr [ebp+var_C] +
lea ebx dword_101FC80[ebx*4] +
cmp dword ptr [ebx] 0 +
jnz loc_1012305  +
pop edi  +
pop esi  +
pop ebx  +
xor eax eax +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+Buffer]  +
call NetapipBufferAllocate  +
mov eax [ebp+Buffer] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+NewBuffer] +
push eax  +
push [ebp+NewByteCount]  +
push dword ptr [eax]  +
call NetApiBufferReallocate  +
pop ebp  +
retn 8  +
***
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 3Ah  +
push edi  +
call ds:wcschr  +
mov esi eax +
pop ecx  +
xor eax eax +
pop ecx  +
test esi esi +
jz loc_101267B  +
push 80000000h  +
push 1  +
push edi  +
mov [esi] ax +
call NetpwNameValidate  +
push 3Ah  +
test eax eax +
pop eax  +
mov [esi] ax +
jz loc_1012609  +
xor eax eax +
jmp loc_101267B  +
add esi 2 +
push esi  +
lea eax [ebp+var_28] +
push 11h  +
push eax  +
call wcscpy_s  +
lea eax [ebp+var_28] +
push eax  +
call ds:_wcsupr  +
lea eax [ebp+var_28] +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101262B  +
sub eax edx +
sar eax 1 +
mov esi eax +
lea eax [ebp+var_28] +
push offset aRwcxdap  +
push eax  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jz loc_1012678  +
mov esi ds:_wcsicmp +
lea eax [ebp+var_28] +
push offset word_1012690  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012678  +
lea eax [ebp+var_28] +
push offset word_101268C  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1012605  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call NetpwPathType  +
test eax eax +
jz loc_10126B9  +
xor eax eax +
jmp locret_10126DB  +
mov eax [ebp+var_4] +
cmp eax 2006h +
jz loc_10126D8  +
cmp eax 2002h +
jz loc_10126D8  +
cmp eax 2004h +
jz loc_10126D8  +
cmp eax 2000h +
jnz loc_10126B5  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call NetpwPathType  +
test eax eax +
jz loc_1012704  +
xor eax eax +
jmp locret_101272D  +
mov eax [ebp+var_4] +
cmp eax 2006h +
jz loc_101272A  +
cmp eax 2002h +
jz loc_101272A  +
cmp eax 2004h +
jz loc_101272A  +
cmp eax 2000h +
jz loc_101272A  +
cmp eax 1000h +
jnz loc_1012700  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:_wcsicmp +
push offset aPipe  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012776  +
push offset aPrint_0  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012776  +
push offset aComm_0  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012776  +
xor eax eax +
jmp loc_1012779  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 9  +
push [ebp+arg_0]  +
call NetpwNameValidate  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call NetpwPathType  +
test eax eax +
jz loc_10127EC  +
xor eax eax +
jmp locret_10127F8  +
xor eax eax +
cmp [ebp+var_4] 1030h +
setz al  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 6  +
push [ebp+arg_0]  +
call NetpwNameValidate  +
test eax eax +
jz loc_101282A  +
push 0  +
push 4  +
push [ebp+arg_0]  +
call NetpwNameValidate  +
test eax eax +
jz loc_101282A  +
xor eax eax +
jmp loc_101282D  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call NetpwPathType  +
test eax eax +
jz loc_1012853  +
xor eax eax +
jmp loc_101288D  +
test [ebp+arg_0] 1000h +
jz loc_101284F  +
cmp [ebp+arg_0] 1030h +
jz loc_101284F  +
push edi  +
mov edi offset asc_1012894 +
add esi 4 +
push edi  +
push esi  +
mov esi ds:wcspbrk +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101288C  +
add eax 2 +
push edi  +
push eax  +
call esi  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call NetpwPathType  +
test eax eax +
jnz loc_10128E7  +
mov eax 4000h +
test [ebp+var_4] eax +
jz loc_10128E7  +
cmp [ebp+var_4] eax +
jnz loc_10128CF  +
xor eax eax +
inc eax  +
jmp locret_10128E9  +
push 3Ah  +
push [ebp+arg_0]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10128CA  +
xor ecx ecx +
mov [eax] cx +
jmp loc_10128CA  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp word ptr [esi] 0 +
jz loc_101292F  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012906  +
push edi  +
sub eax edx +
sar eax 1 +
push offset a0123456789  +
push esi  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp edi eax +
pop edi  +
jnz loc_101292F  +
xor eax eax +
inc eax  +
jmp loc_1012931  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 314h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_214] 0 +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
lea eax [ebp+var_214] +
push eax  +
push esi  +
call NetpwPathType  +
cmp [ebp+var_214] 2006h +
jz loc_10129F1  +
cmp [ebp+var_214] 4000h +
jz loc_10129F1  +
push 2FFh  +
push 40h  +
lea eax [ebp+var_314] +
push eax  +
lea eax [ebp+var_210] +
push eax  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push off_1020970  +
push esi  +
call NetpwListCanonicalize  +
test eax eax +
jz loc_10129B7  +
xor eax eax +
jmp loc_10129F4  +
xor eax eax +
cmp [ebp+var_210] eax +
jz loc_10129F4  +
cmp [ebp+var_210] eax +
jbe loc_10129F1  +
mov ecx [ebp+eax*4+var_314] +
cmp ecx 4010h +
jz loc_10129E8  +
cmp ecx 4020h +
jz loc_10129E8  +
cmp ecx 4050h +
jnz loc_10129B3  +
inc eax  +
cmp eax [ebp+var_210] +
jb loc_10129C9  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 310h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push 2FFh  +
push 40h  +
lea ecx [ebp+var_310] +
push ecx  +
lea ecx [ebp+var_210] +
push ecx  +
push 104h  +
lea ecx [ebp+var_20C] +
push ecx  +
push off_1020970  +
push eax  +
call NetpwListCanonicalize  +
test eax eax +
jz loc_1012A55  +
xor eax eax +
jmp loc_1012A60  +
xor eax eax +
cmp [ebp+var_210] eax +
setnz al  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:_wcsicmp +
push offset aIpc  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012AA4  +
push off_1020974  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012AA4  +
xor eax eax +
jmp loc_1012AA7  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 6  +
push offset aPrint_1  +
push esi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1012B17  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012ADE  +
sub eax edx +
sar eax 1 +
cmp eax 6 +
jbe loc_1012B17  +
add esi 0Ch +
push esi  +
call sub_101289F  +
test eax eax +
jz loc_1012B17  +
push 3Ah  +
push esi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012B12  +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
inc eax  +
jmp loc_1012B19  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 80000000h  +
push 1  +
push [ebp+arg_0]  +
call NetpwNameValidate  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012B73  +
sub eax edx +
sar eax 1 +
mov ecx 111h +
cmp eax ecx +
jb loc_1012B8E  +
xor eax eax +
jmp loc_1012C09  +
push esi  +
push edi  +
push ecx  +
lea eax [ebp+var_228] +
push eax  +
call wcscpy_s  +
mov esi ds:wcschr +
lea eax [ebp+var_228] +
push 40h  +
push eax  +
call esi  +
add esp 14h +
test eax eax +
jz loc_1012BD0  +
xor ecx ecx +
mov [eax] cx +
add eax 2 +
push eax  +
call sub_1012801  +
test eax eax +
jz loc_1012BFE  +
lea eax [ebp+var_228] +
push eax  +
jmp loc_1012C03  +
lea eax [ebp+var_228] +
push 5Ch  +
push eax  +
call esi  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1012C02  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+var_228] +
push eax  +
call sub_1012801  +
test eax eax +
jz loc_1012BFE  +
add esi 2 +
push esi  +
jmp loc_1012C03  +
xor eax eax +
jmp loc_1012C08  +
push edi  +
call sub_1012B33  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov edx offset dword_1003944 +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_1012C50  +
test ax ax +
jz loc_1012C4C  +
mov ax [ecx+2] +
cmp ax [edx+2] +
jnz loc_1012C50  +
add ecx 4 +
add edx 4 +
test ax ax +
jnz loc_1012C2A  +
xor eax eax +
jmp loc_1012C55  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1012C5C  +
inc eax  +
jmp loc_1012C70  +
push 80000000h  +
push 4  +
push [ebp+arg_0]  +
call NetpwNameValidate  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov edx offset dword_1003944 +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_1012CAC  +
test ax ax +
jz loc_1012CA8  +
mov ax [ecx+2] +
cmp ax [edx+2] +
jnz loc_1012CAC  +
add ecx 4 +
add edx 4 +
test ax ax +
jnz loc_1012C86  +
xor eax eax +
jmp loc_1012CB1  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1012CB8  +
inc eax  +
jmp loc_1012CC9  +
push 0  +
push 2  +
push [ebp+arg_0]  +
call NetpwNameValidate  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 3  +
push [ebp+arg_0]  +
call NetpwNameValidate  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call NetpwPathType  +
test eax eax +
jz loc_1012D11  +
xor eax eax +
jmp locret_1012D4D  +
mov eax [ebp+var_4] +
cmp eax 2006h +
jz loc_1012D4A  +
cmp eax 2002h +
jz loc_1012D4A  +
cmp eax 4000h +
jz loc_1012D4A  +
cmp eax 2B02h +
jz loc_1012D4A  +
cmp eax 2C02h +
jz loc_1012D4A  +
cmp eax 2D02h +
jz loc_1012D4A  +
push [ebp+arg_0]  +
call sub_1012736  +
test eax eax +
jz loc_1012D0D  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 3Dh  +
push [ebp+arg_0]  +
call ds:wcschr  +
mov esi eax +
pop ecx  +
xor eax eax +
pop ecx  +
test esi esi +
jz loc_1012D9A  +
push [ebp+arg_0]  +
mov [esi] ax +
call sub_10127AD  +
test eax eax +
jz loc_1012D92  +
lea eax [esi+2] +
push eax  +
call sub_101293B  +
test eax eax +
jz loc_1012D92  +
xor eax eax +
inc eax  +
jmp loc_1012D94  +
xor eax eax +
push 3Dh  +
pop ecx  +
mov [esi] cx +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 3Dh  +
push [ebp+arg_0]  +
call ds:wcschr  +
mov esi eax +
pop ecx  +
xor eax eax +
pop ecx  +
test esi esi +
jz loc_1012DE8  +
push [ebp+arg_0]  +
mov [esi] ax +
call sub_10127AD  +
test eax eax +
jz loc_1012DE0  +
lea eax [esi+2] +
push eax  +
call sub_1012A08  +
test eax eax +
jz loc_1012DE0  +
xor eax eax +
inc eax  +
jmp loc_1012DE2  +
xor eax eax +
push 3Dh  +
pop ecx  +
mov [esi] cx +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 2  +
push [ebp+arg_0]  +
call NetpwNameValidate  +
test eax eax +
jz loc_1012E0E  +
mov eax 0E8Fh +
jmp loc_1012E10  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx ecx [ebp+arg_4] +
xor eax eax +
push eax  +
push [ebp+dwMessageId]  +
push ecx  +
push [ebp+lpBuffer]  +
push eax  +
push eax  +
call sub_101406F  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A4h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
push 27h  +
pop ecx  +
push 2Dh  +
pop eax  +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
lea edi [ebp+var_A4] +
stos   +
stos   +
xor eax eax +
mov [ebp+var_6] ax +
lea eax [ebp+var_A4] +
push eax  +
push offset aS_0  +
call sub_1010562  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
xor eax eax +
pop edi  +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_10] +
mov [ebp+var_414] ecx +
mov ecx [ebp+arg_14] +
mov [ebp+hConsoleHandle] ecx +
test bl 4 +
jz loc_1012EE3  +
test bl 0Ah +
jz loc_1012EE3  +
push 57h  +
pop eax  +
jmp loc_1012F97  +
push esi  +
push edi  +
lea ecx [ebp+var_40C] +
push ecx  +
push [ebp+dwMessageId]  +
lea ecx [ebp+Buffer] +
push 200h  +
push ecx  +
push [ebp+arg_4]  +
mov esi ebx +
mov edi ebx +
push eax  +
and esi 8 +
and edi 2 +
call sub_101406F  +
mov [ebp+var_408] eax +
test eax eax +
jz loc_1012F1D  +
test bl 4 +
jnz loc_1012F5A  +
push [ebp+var_40C]  +
lea eax [ebp+Buffer] +
push eax  +
push 1001h  +
mov ebx offset word_1024880 +
push ebx  +
call wcsncpy_s  +
mov ecx [ebp+var_40C] +
add esp 10h +
xor eax eax +
push eax  +
push ebx  +
push [ebp+hConsoleHandle]  +
mov word_1024880[ecx*2] ax +
call sub_1001CDF  +
mov eax [ebp+var_414] +
test eax eax +
jz loc_1012F6C  +
mov ecx [ebp+var_40C] +
mov [eax] ecx +
test si si +
jz loc_1012F86  +
cmp [ebp+var_408] 0 +
jz loc_1012F86  +
push [ebp+var_408]  +
call ds:exit  +
test di di +
pop edi  +
pop esi  +
jz loc_1012F91  +
push 0FFFFFFFFh  +
jmp loc_1012F80  +
mov eax [ebp+var_408] +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 29Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_4] 9 +
push ebx  +
push esi  +
push edi  +
jnb loc_1012FD0  +
movzx ebx [ebp+arg_4] +
jmp loc_1012FD3  +
push 8  +
pop ebx  +
xor eax eax +
cmp ax bx +
jnb loc_1012FE8  +
mov esi [ebp+arg_0] +
movzx ecx bx +
lea edi [ebp+var_29C] +
movs   +
push 10F4h  +
push 3Ch  +
pop edi  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1012E19  +
xor esi esi +
cmp eax esi +
jz loc_1013014  +
push hConsoleHandle  +
push 0Ah  +
push esi  +
push eax  +
push esi  +
push esi  +
call sub_1012EA3  +
push 10F5h  +
push edi  +
lea eax [ebp+var_1E4] +
push eax  +
call sub_1012E19  +
cmp eax esi +
jz loc_101303B  +
push hConsoleHandle  +
push 0Ah  +
push esi  +
push eax  +
push esi  +
push esi  +
call sub_1012EA3  +
push 10F8h  +
push edi  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1012E19  +
cmp eax esi +
jz loc_101305F  +
push hConsoleHandle  +
push 0Ah  +
push esi  +
push eax  +
push esi  +
push esi  +
call sub_1012EA3  +
push 10F9h  +
push edi  +
lea eax [ebp+var_F4] +
push eax  +
call sub_1012E19  +
cmp eax esi +
jz loc_1013086  +
push hConsoleHandle  +
push 0Ah  +
push esi  +
push eax  +
push esi  +
push esi  +
call sub_1012EA3  +
movzx eax bx +
lea ecx [ebp+Buffer] +
cmp [ebp+arg_C] si +
jnz loc_101309B  +
lea ecx [ebp+var_1E4] +
mov edi ds:_wcsnicmp +
inc ebx  +
mov [ebp+eax*4+var_29C] ecx +
movzx eax bx +
mov [ebp+var_260] esi +
mov [ebp+var_270] eax +
mov ebx 0EADh +
cmp word ptr [ebp+var_260] si +
jz loc_10130DB  +
push dword_1019038  +
push 8  +
push esi  +
push 0EACh  +
push esi  +
push esi  +
call sub_1012EA3  +
push dword_1019038  +
lea eax [ebp+var_274] +
push 8  +
push eax  +
movzx eax [ebp+arg_8] +
push eax  +
push [ebp+var_270]  +
lea eax [ebp+var_29C] +
push eax  +
call sub_1012EA3  +
cmp eax esi +
mov [ebp+var_26C] eax +
jl loc_10131F2  +
lea eax [ebp+var_264] +
push eax  +
lea eax [ebp+var_268] +
push eax  +
push 3Ch  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
call sub_1010731  +
test eax eax +
jnz loc_10131C7  +
cmp [ebp+var_268] esi +
jnz loc_101316F  +
mov eax 0FFFFh +
cmp word ptr [ebp+var_264] ax +
jnz loc_1013203  +
call sub_10108A7  +
push hConsoleHandle  +
push 0Ah  +
push esi  +
push ebx  +
push esi  +
push esi  +
call sub_1012EA3  +
cmp [ebp+var_268] esi +
jz loc_1013203  +
lea eax [ebp+var_7C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1013175  +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
lea eax [ebp+var_7C] +
push eax  +
call edi  +
add esp 0Ch +
test eax eax +
jz loc_1013209  +
lea eax [ebp+var_F4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_10131A1  +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
lea eax [ebp+var_F4] +
push eax  +
call edi  +
add esp 0Ch +
test eax eax +
jz loc_101320E  +
inc [ebp+var_260]  +
cmp word ptr [ebp+var_260] 5 +
jb loc_10130BD  +
push hConsoleHandle  +
push 0Ah  +
push esi  +
push ebx  +
push esi  +
push esi  +
call sub_1012EA3  +
mov eax [ebp+var_26C] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 10h  +
movzx eax [ebp+arg_C] +
jmp loc_10131F2  +
xor eax eax +
inc eax  +
jmp loc_10131F2  +
xor eax eax +
jmp loc_10131F2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 0  +
push 0  +
call sub_1012FAB  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jge loc_101324E  +
or eax 0FFFFFFFFh +
jmp loc_101336A  +
push edi  +
mov edi [ebp+arg_4] +
lea eax [edi-1] +
cmp eax 0Bh +
ja loc_1013366  +
cmp [ebp+arg_0] 1 +
jl loc_1013366  +
cmp ebx 46h +
jge loc_1013275  +
add ebx 7D0h +
jmp loc_1013283  +
cmp ebx 0C8h +
jge loc_1013286  +
add ebx 76Ch +
mov [ebp+arg_8] ebx +
mov eax ebx +
and eax 80000003h +
jns loc_1013294  +
dec eax  +
or eax 0FFFFFFFCh +
inc eax  +
mov [ebp+arg_4] eax +
jnz loc_10132BD  +
mov eax ebx +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
test edx edx +
jnz loc_10132B3  +
mov eax ebx +
cdq   +
mov ecx 190h +
idiv  ecx +
test edx edx +
jnz loc_10132BD  +
movsx eax word_1021656[edi*2] +
jmp loc_10132C5  +
movsx eax word_102166E[edi*2] +
cmp [ebp+arg_0] eax +
jg loc_1013366  +
push esi  +
lea ecx [ebx-1] +
mov esi 7B2h +
cmp ecx esi +
jl loc_101331C  +
mov eax ecx +
and eax 80000003h +
jns loc_10132E9  +
dec eax  +
or eax 0FFFFFFFCh +
inc eax  +
jnz loc_101330C  +
mov eax ecx +
push 64h  +
cdq   +
pop ebx  +
idiv  ebx +
test edx edx +
jnz loc_1013305  +
mov eax ecx +
cdq   +
mov ebx 190h +
idiv  ebx +
test edx edx +
jnz loc_101330C  +
mov eax 16Eh +
jmp loc_1013311  +
mov eax 16Dh +
add [ebp+var_4] eax +
dec ecx  +
cmp ecx esi +
jge loc_10132DB  +
mov ebx [ebp+arg_8] +
pop esi  +
jmp loc_1013355  +
cmp [ebp+arg_4] 0 +
jnz loc_1013349  +
mov eax ebx +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
test edx edx +
jnz loc_101333F  +
mov eax ebx +
cdq   +
mov ecx 190h +
idiv  ecx +
test edx edx +
jnz loc_1013349  +
movsx eax word_1021654[edi*2] +
jmp loc_1013351  +
movsx eax word_102166C[edi*2] +
add [ebp+var_4] eax +
dec edi  +
cmp edi 1 +
jg loc_101331F  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
lea eax [ecx+eax-1] +
jmp loc_1013369  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push edi  +
test ecx ecx +
jl loc_10133F2  +
mov edi [eax+4] +
test edi edi +
jl loc_10133F2  +
mov esi [eax+8] +
test esi esi +
jl loc_10133F2  +
cmp edi 3Bh +
jg loc_10133F2  +
cmp esi 3Bh +
jg loc_10133F2  +
mov edx [eax+0Ch] +
cmp edx 2 +
jnz loc_10133C0  +
cmp ecx 0Ch +
jg loc_10133F2  +
cmp ecx 1 +
jl loc_10133F2  +
add ecx 0Ch +
mov [eax] ecx +
cmp ecx 18h +
jnz loc_10133EE  +
mov dword ptr [eax] 0Ch +
jmp loc_10133EE  +
cmp edx 1 +
jnz loc_10133D8  +
cmp ecx 0Ch +
jg loc_10133F2  +
cmp ecx edx +
jl loc_10133F2  +
cmp ecx 0Ch +
jnz loc_10133EE  +
and dword ptr [eax] 0 +
jmp loc_10133EE  +
test edx edx +
jnz loc_10133F2  +
cmp ecx 17h +
jle loc_10133EE  +
cmp ecx 18h +
jnz loc_10133F2  +
test edi edi +
jnz loc_10133F2  +
test esi esi +
jnz loc_10133F2  +
xor eax eax +
jmp loc_10133F5  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
cmp eax 46h +
mov [ebp+arg_0] eax +
jge loc_101341A  +
add eax 7D0h +
jmp loc_1013426  +
cmp eax 0C8h +
jge loc_1013429  +
add eax 76Ch +
mov [ebp+arg_0] eax +
push esi  +
mov esi [ecx+4] +
push edi  +
xor edi edi +
inc edi  +
cmp esi edi +
jl loc_101349A  +
cmp esi 0Ch +
jg loc_101349A  +
mov edx eax +
and edx 80000003h +
push ebx  +
jns loc_101344A  +
dec edx  +
or edx 0FFFFFFFCh +
inc edx  +
jnz loc_101346F  +
push 64h  +
cdq   +
pop ebx  +
idiv  ebx +
test edx edx +
jnz loc_1013465  +
mov eax [ebp+arg_0] +
cdq   +
mov ebx 190h +
idiv  ebx +
test edx edx +
jnz loc_101346F  +
movsx edx word_1021656[esi*2] +
jmp loc_1013477  +
movsx edx word_102166E[esi*2] +
mov eax [ecx] +
pop ebx  +
cmp eax edx +
jz loc_1013483  +
inc eax  +
mov [ecx] eax +
jmp loc_101349A  +
mov [ecx] edi +
cmp esi 0Ch +
jz loc_1013490  +
inc esi  +
mov [ecx+4] esi +
jmp loc_101349A  +
mov eax [ecx+8] +
inc eax  +
mov [ecx+4] edi +
mov [ecx+8] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 208h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:GetProfileStringW +
push edi  +
push 10h  +
lea eax [ebx+20h] +
push eax  +
push offset Default  +
push offset KeyName  +
mov edi offset AppName +
push edi  +
call esi  +
push 10h  +
push ebx  +
push offset word_10135C4  +
push offset aSdate  +
push edi  +
call esi  +
push 10h  +
lea eax [ebx+42h] +
push eax  +
push offset aAm  +
push offset aS1159  +
push edi  +
call esi  +
push 10h  +
lea eax [ebx+62h] +
push eax  +
push offset aPm  +
push offset aS2359  +
push edi  +
call esi  +
push 100h  +
lea eax [ebp+ReturnedString] +
push eax  +
push offset username  +
push offset aSshortdate  +
push edi  +
call esi  +
xor eax eax +
mov [ebx+40h] ax +
cmp [ebp+ReturnedString] ax +
jz loc_10135B1  +
mov esi ds:wcspbrk +
lea eax [ebp+ReturnedString] +
push offset aDd  +
push eax  +
call esi  +
mov [ebp+var_208] eax +
lea eax [ebp+ReturnedString] +
push offset aMm  +
push eax  +
call esi  +
mov edi eax +
lea eax [ebp+ReturnedString] +
push offset aYy  +
push eax  +
call esi  +
mov ecx [ebp+var_208] +
add esp 18h +
test ecx ecx +
jz loc_10135B1  +
test edi edi +
jz loc_10135B1  +
test eax eax +
jz loc_10135B1  +
cmp ecx edi +
jbe loc_1013597  +
cmp ecx eax +
jnb loc_1013595  +
xor eax eax +
jmp loc_10135AD  +
cmp ecx edi +
jnb loc_10135A2  +
cmp eax edi +
jbe loc_10135A4  +
xor eax eax +
inc eax  +
jmp loc_10135AD  +
cmp eax edi +
jnb loc_10135B1  +
cmp edi ecx +
jnb loc_10135B1  +
push 2  +
pop eax  +
mov [ebx+40h] ax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
and [ebp+var_34] 0 +
push ebx  +
mov [ebp+var_30] ecx +
lea ecx [eax+4] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_38] ecx +
push edi  +
mov edx offset aD +
mov ecx eax +
mov di [ecx] +
cmp di [edx] +
jnz loc_1013689  +
test di di +
jz loc_1013685  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_1013689  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_1013663  +
xor ecx ecx +
jmp loc_101368E  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_10136E4  +
mov edi [ebp+var_34] +
cmp [esi] cx +
jz loc_10136CB  +
movzx eax word ptr [esi] +
push 4  +
push eax  +
call ds:iswctype  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10136BE  +
movzx eax word ptr [esi] +
imul edi edi +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
lea edi [edi+eax-30h] +
jnz loc_101369A  +
cmp edi 10000h +
jl loc_10136CB  +
mov edi 0FFFFh +
mov eax [ebp+var_30] +
mov [eax] edi +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 0Ch  +
push 2  +
push offset asc_1013758  +
push eax  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_10136D0  +
push [ebp+var_38]  +
mov ebx [ebp+var_30] +
mov [ebx] ax +
lea eax [ebp+var_2C] +
push 14h  +
push eax  +
call wcscpy_s  +
lea eax [ebp+var_2C] +
push 5Dh  +
push eax  +
call ds:wcschr  +
add esp 14h +
test eax eax +
jz loc_1013750  +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+var_2C] +
push eax  +
push esi  +
call ds:wcscspn  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_1013750  +
push edi  +
push esi  +
push 80h  +
push ebx  +
call wcsncpy_s  +
add esp 10h +
xor eax eax +
mov [ebx+edi*2] ax +
jmp loc_10136D0  +
xor eax eax +
jmp loc_10136D3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_8C] eax +
mov eax [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_10] +
mov [ebp+var_90] eax +
mov eax [ebp+arg_18] +
push offset asc_1003BE4  +
push edi  +
mov [ebp+var_98] eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_98] +
mov [ecx] eax +
lea edi [edi+eax*2] +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10137C5  +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+282h] +
push eax  +
call ds:malloc  +
pop ecx  +
mov [esi] eax +
test eax eax +
jnz loc_10137F0  +
push 1Fh  +
pop eax  +
jmp loc_10139E2  +
mov ecx [ebp+var_8C] +
mov [ecx] eax +
mov eax [esi] +
lea ecx [eax+ebx] +
mov eax [ebp+var_90] +
mov [eax] ecx +
mov eax edi +
lea edx [eax+2] +
mov [ebp+var_90] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1013810  +
sub eax [ebp+var_90] +
push edi  +
sar eax 1 +
sub eax ebx +
add eax 141h +
push eax  +
push ecx  +
call wcscpy_s  +
add esp 0Ch +
push offset off_1021480  +
push offset unk_1021380  +
lea eax [ebp+var_94] +
push eax  +
push 4  +
push ebx  +
push dword ptr [esi]  +
call sub_1014120  +
test eax eax +
jz loc_1013866  +
mov eax [ebp+var_8C] +
push dword ptr [eax]  +
call ds:free  +
pop ecx  +
push 2  +
jmp loc_10137EA  +
mov eax [ebp+var_94] +
mov ecx ebx +
sub ecx eax +
cmp ecx ebx +
ja loc_1013853  +
add [esi] eax +
mov esi [esi] +
push offset off_10214D8  +
push offset unk_10213B8  +
lea eax [ebp+var_94] +
push eax  +
push 0Ch  +
push ecx  +
push esi  +
call sub_1014120  +
test eax eax +
jnz loc_1013853  +
cmp word_1021654 ax +
jz loc_10139E2  +
mov word_1021654 ax +
lea eax [ebp+var_88] +
push eax  +
call sub_10134A5  +
lea eax [ebp+var_46] +
push eax  +
push 10h  +
push offset unk_1019C18  +
call wcscpy_s  +
lea eax [ebp+var_26] +
push eax  +
push 10h  +
push offset unk_1019BF8  +
call wcscpy_s  +
push dword ptr [ebp+var_88]  +
mov edi ds:wcschr +
mov esi offset asc_1019CA8 +
push esi  +
call edi  +
add esp 20h +
test eax eax +
jnz loc_1013902  +
lea eax [ebp+var_88] +
push eax  +
push 12h  +
push esi  +
call wcscat_s  +
add esp 0Ch +
push dword ptr [ebp+var_88]  +
mov esi offset asc_1019E00 +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1013928  +
lea eax [ebp+var_88] +
push eax  +
push 15h  +
push esi  +
call wcscat_s  +
add esp 0Ch +
push dword ptr [ebp+var_88]  +
mov esi offset asc_1019F60 +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101394E  +
lea eax [ebp+var_88] +
push eax  +
push 20h  +
push esi  +
call wcscat_s  +
add esp 0Ch +
push dword ptr [ebp+var_68]  +
mov ebx offset asc_1019CD0 +
push ebx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101396E  +
lea eax [ebp+var_68] +
push eax  +
push 11h  +
push ebx  +
call wcscat_s  +
add esp 0Ch +
push dword ptr [ebp+var_68]  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1013989  +
lea eax [ebp+var_68] +
push eax  +
push 20h  +
push esi  +
call wcscat_s  +
add esp 0Ch +
push offset dword_10139F4  +
push 20h  +
push esi  +
call wcscat_s  +
movzx eax [ebp+var_48] +
add esp 0Ch +
dec eax  +
jz loc_10139C4  +
dec eax  +
jnz loc_10139E0  +
mov byte_1019E69 2 +
mov byte_1019E39 2 +
mov byte_1019E75 1 +
mov byte_1019E81 al +
mov byte_1019E51 al +
jmp loc_10139D9  +
mov byte_1019CFD 0 +
mov byte_1019E39 0 +
mov byte_1019D09 1 +
mov byte_1019E45 1 +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [eax] +
xor edx edx +
mov [ebp+var_118] eax +
mov [ebp+var_11C] esi +
mov [ebp+var_114] ecx +
cmp edi edx +
jz loc_1013BCE  +
cmp [edi] dx +
jz loc_1013BCE  +
lea ebx [esi+8] +
mov [ebp+var_108] edx +
mov [ebp+var_110] edx +
cmp [ebx] dl +
jnz loc_1013AAC  +
cmp edi [ebp+var_108] +
jnz loc_1013A8A  +
push offset asc_1003BE4  +
push [ebp+var_108]  +
call ds:wcspbrk  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_1013A8A  +
push eax  +
push [ebp+var_108]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
mov edi eax +
push offset asc_1003BE4  +
push edi  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_118] +
lea eax [edi+eax*2] +
mov [ecx] eax +
xor eax eax +
jmp loc_1013BD1  +
xor edx edx +
movzx ecx word ptr [edi] +
cmp cx dx +
jz loc_1013A58  +
mov eax [esi] +
cmp edi [ebp+var_108] +
jnz loc_1013ADF  +
cmp [eax] dx +
jz loc_1013BCA  +
push eax  +
push edi  +
call ds:wcspbrk  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_1013AF8  +
xor eax eax +
inc eax  +
jmp loc_1013BD1  +
cmp [eax] dx +
jz loc_1013AFA  +
push ecx  +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1013AD7  +
cmp word ptr [edi] 0 +
jz loc_1013AFA  +
inc edi  +
inc edi  +
push offset asc_1003BE4  +
push edi  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
lea edi [edi+eax*2] +
lea eax [ebp+var_104] +
push eax  +
push dword ptr [esi+4]  +
push edi  +
call sub_1013631  +
cmp ax 1 +
jnz loc_1013AD7  +
mov cl [ebx] +
xor eax eax +
cmp cl 2 +
jnz loc_1013B38  +
lea eax [ebp+var_10C] +
push eax  +
push offset off_1021480  +
jmp loc_1013B49  +
cmp cl 3 +
jnz loc_1013B57  +
lea eax [ebp+var_10C] +
push eax  +
push offset off_10214D8  +
lea eax [ebp+var_104] +
push eax  +
call sub_101402E  +
jmp loc_1013B64  +
movzx ecx [ebp+var_104] +
mov [ebp+var_10C] ecx +
test eax eax +
jnz loc_1013AD7  +
mov eax [ebp+var_10C] +
test eax eax +
jl loc_1013AD7  +
movzx ecx byte ptr [esi+9] +
mov edx [ebp+var_114] +
mov [edx+ecx*4] eax +
cmp byte ptr [ebx] 1 +
mov [ebp+var_108] edi +
jnz loc_1013BA3  +
push offset a0123456789  +
push edi  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
lea edi [edi+eax*2] +
inc [ebp+var_110]  +
movsx esi word ptr [ebp+var_110] +
imul esi esi +
add esi [ebp+var_11C] +
lea ebx [esi+8] +
cmp byte ptr [ebx] 0 +
jz loc_1013A58  +
jmp loc_1013AAA  +
push 2  +
jmp loc_1013BD0  +
push 3  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1013374  +
test ax ax +
jz loc_1013C02  +
mov eax 0A0h +
jmp loc_1013C17  +
mov eax [esi] +
mov ecx [ebp+arg_4] +
imul eax eax +
add eax [esi+4] +
imul eax eax +
add eax [esi+8] +
mov [ecx] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_1013234  +
test eax eax +
jge loc_1013C3F  +
or eax 0FFFFFFFFh +
jmp loc_1013C53  +
mov ecx [ebp+arg_4] +
imul eax eax +
add eax [ecx] +
imul eax eax +
add eax [ecx+4] +
imul eax eax +
add eax [ecx+8] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
sub esp 24h +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
xor edi edi +
push ebx  +
mov [eax] edi +
call sub_1013374  +
test ax ax +
jz loc_1013C85  +
mov eax 0A0h +
jmp loc_1013D18  +
push esi  +
call sub_101472C  +
mov [ebp+arg_4] eax +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_10145C2  +
mov esi [ebp+arg_0] +
mov eax [esi] +
cmp eax edi +
jnz loc_1013CD9  +
cmp [esi+4] edi +
jnz loc_1013CD9  +
cmp dword ptr [esi+8] 0FFFFFFFFh +
jnz loc_1013CFE  +
mov eax [ebp+var_18] +
mov [esi] eax +
mov eax [ebp+var_14] +
inc eax  +
mov [esi+4] eax +
mov eax [ebp+var_10] +
push ebx  +
push esi  +
mov [esi+8] eax +
call sub_1013C21  +
cmp eax edi +
jl loc_1013D09  +
cmp eax [ebp+arg_4] +
jge loc_1013D05  +
push esi  +
call sub_1013400  +
jmp loc_1013CFE  +
cmp dword ptr [esi+8] 0FFFFFFFFh +
jnz loc_1013CFE  +
cmp [esi+4] edi +
jz loc_1013CFE  +
cmp eax edi +
jz loc_1013CFE  +
mov edi [ebp+var_10] +
push ebx  +
push esi  +
mov [esi+8] edi +
call sub_1013C21  +
cmp eax [ebp+arg_4] +
jge loc_1013D05  +
inc edi  +
mov [esi+8] edi +
push ebx  +
push esi  +
call sub_1013C21  +
test eax eax +
jge loc_1013D10  +
mov eax 0A0h +
jmp loc_1013D17  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov [esi] eax +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
mov ebx [ebp+arg_4] +
stos   +
or [ebp+var_C] 0FFFFFFFFh +
xor eax eax +
lea edi [ebp+var_28] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1013DC4  +
and [ebp+arg_C] 0 +
jmp loc_1013DBF  +
lea ecx [ebp+var_14] +
push ecx  +
push dword ptr [eax]  +
push esi  +
call sub_10139FD  +
test ax ax +
jnz loc_1013DB2  +
xor edi edi +
cmp ebx edi +
jz loc_1013E57  +
cmp [ebx] edi +
jz loc_1013DAD  +
mov eax ebx +
lea ecx [ebp+var_28] +
push ecx  +
push dword ptr [eax]  +
push esi  +
call sub_10139FD  +
movzx eax ax +
test ax ax +
jz loc_1013E57  +
cmp ax 3 +
jz loc_1013E57  +
inc edi  +
movsx eax di +
lea eax [ebx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_1013D7F  +
mov eax [ebp+arg_8] +
mov [esi] eax +
inc [ebp+arg_C]  +
movsx eax word ptr [ebp+arg_C] +
mov ecx [ebp+arg_0] +
lea eax [ecx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_1013D5E  +
mov eax [ebp+arg_8] +
mov [esi] eax +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
stos   +
or [ebp+var_C] 0FFFFFFFFh +
test ebx ebx +
jz loc_1013E46  +
and [ebp+arg_4] 0 +
cmp dword ptr [ebx] 0 +
jz loc_1013E46  +
mov eax ebx +
lea ecx [ebp+var_28] +
push ecx  +
push dword ptr [eax]  +
push esi  +
call sub_10139FD  +
test ax ax +
jnz loc_1013E37  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1013E69  +
and [ebp+arg_C] 0 +
cmp dword ptr [edi] 0 +
jz loc_1013E32  +
mov eax edi +
lea ecx [ebp+var_14] +
push ecx  +
push dword ptr [eax]  +
push esi  +
call sub_10139FD  +
movzx eax ax +
test ax ax +
jz loc_1013E69  +
cmp ax 3 +
jz loc_1013E69  +
inc [ebp+arg_C]  +
movsx eax word ptr [ebp+arg_C] +
lea eax [edi+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_1013E09  +
mov eax [ebp+arg_8] +
mov [esi] eax +
inc [ebp+arg_4]  +
movsx eax word ptr [ebp+arg_4] +
lea eax [ebx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_1013DE6  +
mov eax [ebp+arg_8] +
mov [esi] eax +
mov eax 0A0h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
push [ebp+arg_10]  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_1013C5C  +
jmp loc_1013E50  +
cmp [ebp+arg_14] 1 +
push [ebp+arg_10]  +
lea eax [ebp+var_28] +
push eax  +
jnz loc_1013E5E  +
call sub_1013BE7  +
jmp loc_1013E50  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push esi  +
xor edi edi +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+arg_8] +
push eax  +
push 280h  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_101376B  +
test eax eax +
jz loc_1013EB4  +
push 1Fh  +
pop eax  +
jmp loc_1013EE2  +
push edi  +
push [ebp+arg_4]  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_8]  +
push edi  +
push offset off_1021600  +
call sub_1013D23  +
push [ebp+var_4]  +
mov edi eax +
mov eax [ebp+arg_0] +
sub eax [ebp+arg_8] +
sar eax 1 +
add [esi] eax +
call ds:free  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push esi  +
xor edi edi +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+arg_8] +
push eax  +
push 280h  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_101376B  +
test eax eax +
jz loc_1013F1E  +
push 1Fh  +
pop eax  +
jmp loc_1013F4C  +
push edi  +
push [ebp+arg_4]  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_8]  +
push offset off_1021620  +
push edi  +
call sub_1013D23  +
push [ebp+var_4]  +
mov edi eax +
mov eax [ebp+arg_0] +
sub eax [ebp+arg_8] +
sar eax 1 +
add [esi] eax +
call ds:free  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push esi  +
xor edi edi +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+arg_8] +
push eax  +
push 280h  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_101376B  +
test eax eax +
jz loc_1013F88  +
push 1Fh  +
pop eax  +
jmp loc_1013FB6  +
push edi  +
push [ebp+arg_4]  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_8]  +
push offset off_1021638  +
push edi  +
call sub_1013D23  +
push [ebp+var_4]  +
mov edi eax +
mov eax [ebp+arg_0] +
sub eax [ebp+arg_8] +
sar eax 1 +
add [esi] eax +
call ds:free  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push esi  +
xor edi edi +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+arg_8] +
push eax  +
push 280h  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_101376B  +
test eax eax +
jz loc_1013FF5  +
push 1Fh  +
pop eax  +
jmp loc_1014023  +
push edi  +
push [ebp+arg_4]  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_8]  +
push offset off_1021648  +
push edi  +
call sub_1013D23  +
push [ebp+var_4]  +
mov edi eax +
mov eax [ebp+arg_0] +
sub eax [ebp+arg_8] +
sar eax 1 +
add [esi] eax +
call ds:free  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_1014056  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 0Ch  +
push eax  +
push [ebp+arg_0]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101405E  +
add esi 8 +
mov eax [esi] +
test eax eax +
jz loc_101403B  +
jmp loc_1014043  +
mov eax [esi+4] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_101403E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+lpBuffer] +
and [ebp+var_4] 0 +
xor eax eax +
push esi  +
mov [ecx] ax +
push edi  +
mov esi 101h +
mov edi offset word_1022400 +
cmp word_1022400 ax +
jnz loc_10140A5  +
push offset aNetmsg  +
push esi  +
push edi  +
call wcscpy_s  +
add esp 0Ch +
cmp word_1022608 0 +
push ebx  +
mov ebx offset word_1022608 +
jnz loc_10140C4  +
push offset aBase  +
push esi  +
push ebx  +
call wcscpy_s  +
add esp 0Ch +
mov esi [ebp+arg_C] +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push [ebp+dwMessageId]  +
mov edi [ebp+lpBuffer] +
dec esi  +
push esi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001EAF  +
cmp eax 13Dh +
jnz loc_10140FC  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push esi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1001EAF  +
mov edx [ebp+var_4] +
pop ebx  +
cmp edx esi +
jnb loc_1014106  +
mov esi edx +
xor ecx ecx +
mov [edi+esi*2] cx +
mov ecx [ebp+arg_14] +
pop edi  +
pop esi  +
test ecx ecx +
jz locret_1014117  +
mov [ecx] edx +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_C] +
push ebx  +
xor eax eax +
push esi  +
mov esi [ebp+arg_10] +
mov [ecx] eax +
push edi  +
mov [ebp+var_4] eax +
cmp [esi] eax +
jz loc_1014195  +
mov ecx [ebp+arg_14] +
mov edx [ebp+arg_8] +
mov edi [ebp+lpBuffer] +
lea ebx [ecx+edx*8] +
jmp loc_101414A  +
xor eax eax +
lea ecx [ebp+arg_14] +
push ecx  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push edi  +
push eax  +
push eax  +
call sub_101406F  +
test eax eax +
jnz loc_1014197  +
mov ecx [ebp+arg_14] +
mov [ebx] edi +
mov eax [esi+4] +
mov [ebx+4] eax +
lea eax [ecx+ecx] +
or edx 0FFFFFFFFh +
sub edx ecx +
add [ebp+arg_4] edx +
lea ecx [eax+2] +
lea edi [edi+eax+2] +
mov eax [ebp+arg_C] +
add [eax] ecx +
inc [ebp+var_4]  +
mov eax [ebp+arg_10] +
mov ecx [ebp+var_4] +
lea esi [eax+ecx*8] +
add ebx 8 +
cmp dword ptr [esi] 0 +
jnz loc_1014148  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_10] +
cmp dword ptr [esi] 0FFFFFFFFh +
push edi  +
jz loc_1014208  +
mov edi [ebp+arg_0] +
mov ebx [ebp+arg_14] +
mov eax [esi+4] +
cmp eax [ebp+arg_C] +
ja loc_1014212  +
mov ecx [ebx] +
mov eax [edi] +
lea edx [ecx+ecx] +
sub eax edx +
mov edx [ebp+arg_8] +
cmp eax edx +
jb loc_1014212  +
test ecx ecx +
jnz loc_10141DD  +
mov eax [esi+4] +
and [eax+edx] ecx +
jmp loc_10141FD  +
mov edx [ebp+arg_4] +
mov [edi] eax +
mov ecx [esi] +
push dword ptr [ecx+edx]  +
push dword ptr [ebx]  +
push eax  +
call wcscpy_s  +
mov eax [esi+4] +
mov ecx [edi] +
mov edx [ebp+arg_8] +
add esp 0Ch +
mov [edx+eax] ecx +
add esi 8 +
add ebx 4 +
cmp dword ptr [esi] 0FFFFFFFFh +
jnz loc_10141B9  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
xor eax eax +
jmp loc_101420B  +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
lea esi off_1021780[edi] +
mov eax [esi] +
cmp dword ptr [eax] 0 +
jz loc_1014235  +
push dword ptr [eax]  +
call sub_1015444  +
mov eax [esi] +
and dword ptr [eax] 0 +
add edi 10h +
cmp edi 0A0h +
jb loc_101421C  +
xor edi edi +
lea esi off_1021820[edi] +
mov eax [esi] +
cmp dword ptr [eax] 0 +
jz loc_101425B  +
push dword ptr [eax]  +
call sub_1015444  +
mov eax [esi] +
and dword ptr [eax] 0 +
add edi 8 +
cmp edi 48h +
jb loc_1014242  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
call ds:RtlLengthRequiredSid  +
push eax  +
call sub_1015421  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
test eax eax +
jnz loc_101428F  +
mov eax 0C0000017h +
jmp loc_101429E  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:RtlInitializeSid  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ds:RtlSubAuthorityCountSid +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ebx  +
movzx edi byte ptr [eax] +
lea eax [edi+1] +
push eax  +
call ds:RtlLengthRequiredSid  +
push eax  +
mov [ebp+var_4] eax +
call sub_1015421  +
mov esi [ebp+arg_8] +
mov [esi] eax +
test eax eax +
jnz loc_10142DF  +
push 8  +
pop eax  +
jmp loc_1014312  +
push [ebp+arg_0]  +
push eax  +
push [ebp+var_4]  +
call ds:RtlCopySid  +
push dword ptr [esi]  +
test eax eax +
jge loc_10142FE  +
call sub_1015444  +
mov eax 85Ch +
jmp loc_1014312  +
call ebx  +
inc byte ptr [eax]  +
push edi  +
push dword ptr [esi]  +
call ds:RtlSubAuthoritySid  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
xor esi esi +
push 1  +
lea eax dword_1021784[esi] +
push eax  +
lea edi off_1021780[esi] +
push dword ptr [edi]  +
call sub_101426B  +
test eax eax +
jl loc_1014387  +
mov eax [edi] +
push 0  +
push dword ptr [eax]  +
call ds:RtlSubAuthoritySid  +
mov ecx dword_102178C[esi] +
add esi 10h +
mov [eax] ecx +
cmp esi 0A0h +
jb loc_1014324  +
xor esi esi +
push off_1021820[esi]  +
push dword_1021824[esi]  +
push dword_10190AC  +
call sub_10142A7  +
test eax eax +
jnz loc_1014387  +
add esi 8 +
cmp esi 48h +
jb loc_101435F  +
pop edi  +
pop esi  +
retn 4  +
mov eax 0C0000017h +
jmp loc_1014382  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10143A7  +
xor eax eax +
jmp loc_10145B8  +
mov eax 0C00000DCh +
cmp esi eax +
jg loc_10144BF  +
jz loc_1014597  +
add eax 0FFFFFF8Ah +
cmp esi eax +
jg loc_101443D  +
jz loc_1014479  +
cmp esi 80000025h +
jz loc_10143A0  +
cmp esi 0C0000023h +
jz loc_1014433  +
cmp esi 0C0000061h +
jz loc_101442B  +
cmp esi 0C0000062h +
jz loc_1014421  +
cmp esi 0C0000063h +
jz loc_1014417  +
cmp esi 0C0000064h +
jz loc_101440D  +
cmp esi 0C0000065h +
jnz loc_1014577  +
mov eax 8AFh +
jmp loc_10145B8  +
mov eax 8ADh +
jmp loc_10145B8  +
mov eax 8B0h +
jmp loc_10145B8  +
mov eax 89Ah +
jmp loc_10145B8  +
push 5  +
pop eax  +
jmp loc_10145B8  +
mov eax 84Bh +
jmp loc_10145B8  +
cmp esi 0C0000067h +
jz loc_10144B5  +
cmp esi 0C0000068h +
jz loc_10144AB  +
cmp esi 0C000006Ch +
jz loc_10144A1  +
cmp esi 0C000006Fh +
jz loc_1014497  +
cmp esi 0C0000070h +
jz loc_101448D  +
cmp esi 0C0000071h +
jz loc_1014483  +
cmp esi 0C0000073h +
jnz loc_1014577  +
mov eax 8ACh +
jmp loc_10145B8  +
mov eax 8C2h +
jmp loc_10145B8  +
mov eax 8C0h +
jmp loc_10145B8  +
mov eax 8C1h +
jmp loc_10145B8  +
mov eax 8C5h +
jmp loc_10145B8  +
mov eax 8BDh +
jmp loc_10145B8  +
mov eax 8BCh +
jmp loc_10145B8  +
mov eax 0C0000127h +
cmp esi eax +
jg loc_101453F  +
jz loc_1014506  +
cmp esi 0C00000DDh +
jz loc_1014538  +
cmp esi 0C00000DEh +
jz loc_1014597  +
cmp esi 0C00000E4h +
jz loc_101452E  +
cmp esi 0C00000FBh +
jz loc_1014524  +
cmp esi 0C0000107h +
jz loc_101451A  +
cmp esi 0C0000108h +
jz loc_1014510  +
cmp esi 0C0000125h +
jnz loc_1014577  +
mov eax 8BAh +
jmp loc_10145B8  +
mov eax 964h +
jmp loc_10145B8  +
mov eax 961h +
jmp loc_10145B8  +
mov eax 836h +
jmp loc_10145B8  +
mov eax 8C7h +
jmp loc_10145B8  +
mov eax 8B3h +
jmp loc_10145B8  +
cmp esi 0C0000132h +
jz loc_10145B3  +
cmp esi 0C0000133h +
jz loc_10145AC  +
cmp esi 0C0000134h +
jz loc_10145A5  +
cmp esi 0C0000149h +
jz loc_101459E  +
cmp esi 0C0000187h +
jz loc_1014597  +
cmp esi 0C0000193h +
jz loc_1014590  +
cmp esi 0C0000233h +
jz loc_1014589  +
push esi  +
call ds:RtlNtStatusToDosError  +
cmp eax esi +
jnz loc_10145B8  +
mov eax 85Ch +
jmp loc_10145B8  +
mov eax 995h +
jmp loc_10145B8  +
mov eax 8BFh +
jmp loc_10145B8  +
mov eax 8B2h +
jmp loc_10145B8  +
mov eax 963h +
jmp loc_10145B8  +
mov eax 8C9h +
jmp loc_10145B8  +
mov eax 999h +
jmp loc_10145B8  +
mov eax 8A2h +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
cmp eax 12CEA600h +
jge loc_1014603  +
mov ecx [ebp+arg_4] +
xor eax eax +
inc eax  +
xor edx edx +
mov dword ptr [ecx+14h] 50h +
mov [ecx+0Ch] eax +
mov [ecx+20h] edx +
mov [ecx+1Ch] edx +
mov [ecx+10h] edx +
mov [ecx] edx +
mov [ecx+4] edx +
mov [ecx+8] edx +
mov dword ptr [ecx+18h] 2 +
jmp loc_1014722  +
push esi  +
cdq   +
push edi  +
mov edi 1E13380h +
mov ecx edi +
idiv  ecx +
mov ecx [ebp+arg_4] +
mov [ecx+14h] eax +
inc eax  +
cdq   +
and edx 3 +
add eax edx +
mov esi eax +
mov eax [ebx] +
cdq   +
mov ebx edi +
idiv  ebx +
sar esi 2 +
mov ebx esi +
imul ebx ebx +
sub edx ebx +
mov [ebp+arg_4] edx +
jns loc_1014661  +
lea edx [eax+1] +
add [ebp+arg_4] edi +
mov ebx edx +
and ebx 80000003h +
jns loc_101464C  +
dec ebx  +
or ebx 0FFFFFFFCh +
inc ebx  +
jnz loc_1014656  +
add [ebp+arg_4] 15180h +
dec esi  +
dec eax  +
dec edx  +
cmp [ebp+arg_4] 0 +
jl loc_101463A  +
mov [ecx+14h] eax +
add dword ptr [ecx+14h] 7B2h +
mov edi [ecx+14h] +
mov eax edi +
and eax 80000003h +
jns loc_1014679  +
dec eax  +
or eax 0FFFFFFFCh +
inc eax  +
jnz loc_101469C  +
mov eax edi +
push 64h  +
cdq   +
pop ebx  +
idiv  ebx +
test edx edx +
jnz loc_1014695  +
mov eax edi +
cdq   +
mov ebx 190h +
idiv  ebx +
test edx edx +
jnz loc_101469C  +
mov ebx offset unk_1021868 +
jmp loc_10146A1  +
mov ebx offset unk_102189C +
mov eax [ebp+arg_4] +
add edi 0FFFFF894h +
mov [ecx+14h] edi +
cdq   +
mov edi 15180h +
idiv  edi +
mov dword ptr [ecx+10h] 1 +
mov edi eax +
mov [ecx+1Ch] eax +
cmp [ebx+4] edi +
mov [ebp+arg_4] edx +
jge loc_10146D6  +
inc dword ptr [ecx+10h]  +
mov eax [ecx+10h] +
mov eax [ebx+eax*4] +
cmp eax edi +
jl loc_10146C9  +
dec dword ptr [ecx+10h]  +
mov eax [ecx+10h] +
mov edx edi +
sub edx [ebx+eax*4] +
mov eax [ebp+arg_4] +
mov [ecx+0Ch] edx +
cdq   +
mov ebx 0E10h +
idiv  ebx +
push 3Ch  +
pop ebx  +
push 7  +
and dword ptr [ecx+20h] 0 +
mov [ecx+8] eax +
mov eax edx +
cdq   +
idiv  ebx +
mov [ecx+4] eax +
mov eax [ecx+14h] +
imul eax eax +
add eax edi +
lea eax [eax+esi-63CAh] +
mov [ecx] edx +
cdq   +
pop esi  +
idiv  esi +
pop edi  +
xor eax eax +
pop esi  +
mov [ecx+18h] edx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea eax [ebp+var_C] +
push eax  +
call ds:NtQuerySystemTime  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call ds:RtlTimeToSecondsSince1970  +
test al al +
jnz loc_1014754  +
and [ebp+var_4] 0 +
mov eax [ebp+var_4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1014777  +
cmp esi 0FFFFFFFFh +
jz loc_1014777  +
call sub_1014A47  +
sub esi eax +
mov eax [ebp+arg_4] +
mov [eax] esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10147A6  +
cmp esi 0FFFFFFFFh +
jz loc_10147A6  +
call sub_1014A47  +
mov ecx [ebp+arg_4] +
add eax esi +
mov [ecx] eax +
jmp loc_10147AB  +
mov eax [ebp+arg_4] +
mov [eax] esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 18h +
test eax eax +
jz loc_1014842  +
cmp [ebp+arg_4] 0 +
jz loc_1014842  +
mov cx [eax] +
mov word ptr [ebp+var_18] cx +
mov cx [eax+2] +
mov word ptr [ebp+var_18+2] cx +
mov cx [eax+6] +
mov [ebp+var_14] cx +
mov cx [eax+8] +
mov [ebp+var_12] cx +
mov cx [eax+0Ah] +
mov [ebp+var_10] cx +
mov cx [eax+0Ch] +
mov [ebp+var_E] cx +
mov cx [eax+0Eh] +
mov ax [eax+4] +
mov [ebp+var_A] ax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
mov [ebp+var_C] cx +
call ds:RtlTimeFieldsToTime  +
test al al +
jnz loc_1014822  +
mov eax 85Ch +
jmp locret_1014845  +
push [ebp+arg_4]  +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlTimeToSecondsSince1970  +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 0FFFFF7A4h +
add eax 85Ch +
jmp locret_1014845  +
push 57h  +
pop eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
imul eax eax +
add eax 10h +
push eax  +
xor ebx ebx +
push ebx  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax ebx +
jnz loc_101487F  +
call ds:GetLastError  +
jmp loc_1014A0C  +
push edi  +
xor edx edx +
push 2  +
mov [eax] esi +
pop edi  +
cmp esi ebx +
jbe loc_10148A6  +
add eax 0Ch +
mov ecx [ebp+arg_4] +
mov ecx [ecx+edx*4] +
mov [eax-8] ecx +
xor ecx ecx +
mov [eax-4] ecx +
mov [eax] edi +
inc edx  +
add eax 0Ch +
cmp edx esi +
jb loc_101488E  +
mov esi 200h +
push esi  +
lea eax [ebp+var_1C] +
push ebx  +
mov [ebp+var_34] 18h +
mov [ebp+var_30] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_1C] 0Ch +
mov [ebp+var_18] edi +
mov [ebp+var_14] bl +
mov [ebp+var_13] bl +
mov [ebp+var_20] eax +
call ds:LocalAlloc  +
mov [ebp+arg_0] eax +
cmp eax ebx +
jnz loc_10148FB  +
call ds:GetLastError  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1014A0B  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push 0FFFFFFFFh  +
call ds:NtOpenProcessToken  +
cmp eax ebx +
mov [ebp+arg_4] eax +
jge loc_1014922  +
push [ebp+arg_0]  +
mov esi ds:LocalFree +
call esi  +
push [ebp+hMem]  +
jmp loc_10149C9  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push ebx  +
lea eax [ebp+var_34] +
push eax  +
push 2Ch  +
push [ebp+var_C]  +
call ds:NtDuplicateToken  +
mov edi eax +
cmp edi ebx +
jge loc_101495B  +
push [ebp+arg_0]  +
mov esi ds:LocalFree +
call esi  +
push [ebp+hMem]  +
call esi  +
push [ebp+var_C]  +
call ds:NtClose  +
jmp loc_1014A00  +
mov edi ds:NtAdjustPrivilegesToken +
lea eax [ebp+uBytes] +
push eax  +
push [ebp+arg_0]  +
push esi  +
push [ebp+hMem]  +
push ebx  +
push [ebp+var_8]  +
call edi  +
mov esi ds:LocalFree +
mov [ebp+arg_4] eax +
cmp eax 0C0000023h +
jnz loc_10149AC  +
push [ebp+arg_0]  +
call esi  +
mov eax [ebp+uBytes] +
push eax  +
push ebx  +
mov [ebp+arg_4] eax +
call ds:LocalAlloc  +
lea ecx [ebp+uBytes] +
push ecx  +
push eax  +
push [ebp+arg_4]  +
mov [ebp+arg_0] eax +
push [ebp+hMem]  +
push ebx  +
push [ebp+var_8]  +
call edi  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] ebx +
jge loc_10149D0  +
push [ebp+arg_0]  +
call esi  +
push [ebp+hMem]  +
call esi  +
push [ebp+var_C]  +
mov esi ds:NtClose +
call esi  +
push [ebp+var_8]  +
call esi  +
push [ebp+arg_4]  +
jmp loc_1014A01  +
push 4  +
lea eax [ebp+var_8] +
push eax  +
push 5  +
push 0FFFFFFFEh  +
call ds:NtSetInformationThread  +
push [ebp+arg_0]  +
mov edi eax +
call esi  +
push [ebp+hMem]  +
call esi  +
push [ebp+var_C]  +
mov esi ds:NtClose +
call esi  +
push [ebp+var_8]  +
call esi  +
cmp edi ebx +
jge loc_1014A09  +
push edi  +
call ds:RtlNtStatusToDosError  +
jmp loc_1014A0B  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 5  +
push 0FFFFFFFEh  +
call ds:NtSetInformationThread  +
test eax eax +
jge loc_1014A3E  +
push eax  +
call ds:RtlNtStatusToDosError  +
leave   +
retn   +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B0h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+TimeZoneInformation] +
push eax  +
call ds:GetTimeZoneInformation  +
sub eax 0 +
jz loc_1014A8A  +
dec eax  +
jz loc_1014A85  +
dec eax  +
jz loc_1014A78  +
xor eax eax +
jmp loc_1014A93  +
mov ecx [ebp+TimeZoneInformation.DaylightBias] +
mov eax [ebp+TimeZoneInformation.Bias] +
add eax ecx +
jmp loc_1014A90  +
mov ecx [ebp+TimeZoneInformation.StandardBias] +
jmp loc_1014A7B  +
mov eax [ebp+TimeZoneInformation.Bias] +
imul eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1002D45  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B0h +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
lea eax [ebp+var_B0] +
push eax  +
call ds:RtlQueryTimeZoneInformation  +
test eax eax +
jge loc_1014AD2  +
xor al al +
jmp loc_1014AF2  +
mov eax [ebp+var_B0] +
add eax 5BEh +
cdq   +
push 3Ch  +
pop ecx  +
idiv  ecx +
sub eax 18h +
cmp [ebp+arg_0] 0 +
jnz loc_1014AEE  +
neg eax  +
mov [esi] eax +
mov al 1 +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002D45  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
cmp [ebp+arg_4] 0A8h +
jz loc_1014B1E  +
xor al al +
jmp locret_1014BBB  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1014BB9  +
cdq   +
setl cl  +
xor eax edx +
sub eax edx +
cmp eax 1Fh +
jg loc_1014B17  +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 5  +
test cl cl +
mov [ebp+arg_4] 20h +
mov esi edx +
pop ecx  +
jz loc_1014B7E  +
lea edi [ebp+var_1C] +
movs   +
mov ecx [edx] +
movs   +
xor esi esi +
sub [ebp+arg_4] eax +
mov [ebp+var_7] ecx +
mov edi [ebp+esi*4+var_18] +
mov ecx [ebp+arg_4] +
lea edx [ebp+esi*4+var_1C] +
mov ebx [edx] +
shl edi cl +
mov ecx eax +
shr ebx cl +
or edi ebx +
inc esi  +
cmp esi 6 +
mov [edx] edi +
jl loc_1014B5C  +
lea esi [ebp+var_1C] +
jmp loc_1014BAD  +
sub [ebp+arg_4] eax +
lea edi [ebp+var_18] +
movs   +
mov ecx [edx+11h] +
movs   +
push 5  +
mov [ebp+var_1C] ecx +
pop esi  +
mov edi [ebp+esi*4+var_1C] +
mov ecx [ebp+arg_4] +
lea edx [ebp+esi*4+var_18] +
mov ebx [edx] +
shr edi cl +
mov ecx eax +
shl ebx cl +
or edi ebx +
dec esi  +
mov [edx] edi +
jns loc_1014B90  +
lea esi [ebp+var_18] +
mov edi [ebp+arg_0] +
push 5  +
pop ecx  +
movs   +
movs   +
pop edi  +
pop esi  +
pop ebx  +
mov al 1 +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_8]  +
call sub_1014AA4  +
test al al +
jz loc_1014BE7  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1014B06  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp ax cx +
mov ecx [ebp+arg_8] +
jb loc_1014C0C  +
mov [ecx] ax +
xor eax eax +
jmp loc_1014C19  +
mov eax 0FFFFh +
mov [ecx] ax +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
cmp ax word ptr [ebp+arg_4] +
jb loc_1014C3D  +
sub eax [ebp+arg_4] +
mov [ecx] ax +
xor eax eax +
jmp loc_1014C4A  +
mov eax 0FFFFh +
mov [ecx] ax +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+lpString] +
test esi esi +
jz loc_1014CF3  +
push ebx  +
mov ebx ds:lstrlenW +
push esi  +
call ebx  +
add eax eax +
cmp eax 60h +
jbe loc_1014CF2  +
cmp word ptr [esi+60h] 50h +
jnz loc_1014CF2  +
push edi  +
mov edi [ebp+arg_8] +
push [ebp+Source2]  +
lea eax [esi+64h] +
mov [edi] eax +
call ebx  +
mov ebx [ebp+arg_C] +
add eax eax +
movzx ecx ax +
xor eax eax +
inc eax  +
mov [ebx] ax +
mov [ebp+lpString] ecx +
cmp ax [esi+62h] +
jbe loc_1014CAB  +
jmp loc_1014CF1  +
mov ecx [ebp+lpString] +
mov eax [edi] +
cmp cx [eax] +
jnz loc_1014CCB  +
movzx ecx cx +
push ecx  +
push [ebp+Source2]  +
add eax 6 +
push eax  +
call ds:RtlCompareMemory  +
movzx ecx word ptr [ebp+lpString] +
cmp eax ecx +
jz loc_1014CEA  +
mov eax [edi] +
movzx ecx word ptr [eax+2] +
movzx edx word ptr [eax] +
add ecx eax +
lea eax [edx+ecx+6] +
mov [edi] eax +
inc word ptr [ebx]  +
mov ax [ebx] +
cmp ax [esi+62h] +
ja loc_1014CF1  +
jmp loc_1014CA8  +
mov [ebp+var_4] 1 +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
movzx eax word ptr [edi] +
cmp ax 6Ch +
jnb loc_1014D16  +
xor eax eax +
jmp loc_1014D84  +
mov edx [ebp+arg_4] +
movzx ecx word ptr [edx+2] +
push ebx  +
movzx ebx word ptr [edx] +
lea ecx [ecx+ebx+6] +
push esi  +
mov esi [edi+4] +
mov [ebp+arg_0] ecx +
cmp ecx 0FFFFh +
ja loc_1014D80  +
movzx eax ax +
cmp ecx eax +
ja loc_1014D80  +
movzx ecx cx +
add ecx edx +
cmp ecx edx +
jb loc_1014D80  +
mov bx [ebp+arg_8] +
cmp bx [esi+62h] +
jnb loc_1014D66  +
mov ebx ecx +
sub ebx esi +
cmp ebx eax +
jg loc_1014D80  +
sub eax ecx +
add eax esi +
push eax  +
push ecx  +
push edx  +
call ds:memmove  +
add esp 0Ch +
mov ax word ptr [ebp+arg_0] +
sub [edi] ax +
mov ecx [ebp+arg_C] +
mov eax 0FFFFh +
add [esi+62h] ax +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1014D82  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+uBytes] +
push edi  +
push 40h  +
call ds:LocalAlloc  +
mov esi [ebp+arg_8] +
mov [esi+4] eax +
test eax eax +
jnz loc_1014DB5  +
mov eax 0C000009Ah +
jmp loc_1014E51  +
mov ecx [ebp+arg_0] +
mov [esi+2] di +
test ecx ecx +
jz loc_1014DD8  +
mov dx [ecx] +
mov [esi] dx +
movzx edx word ptr [ecx] +
push edx  +
push dword ptr [ecx+4]  +
push eax  +
call memcpy  +
add esp 0Ch +
jmp loc_1014DDD  +
xor eax eax +
mov [esi] ax +
movzx eax word ptr [esi] +
xor ecx ecx +
test eax 0FFFFFFFEh +
jbe loc_1014E06  +
mov eax [esi+4] +
cmp word ptr [eax] 0 +
jz loc_1014E00  +
movzx edx word ptr [esi] +
inc ecx  +
inc eax  +
shr edx 1 +
inc eax  +
cmp ecx edx +
jnb loc_1014E06  +
jmp loc_1014DEC  +
lea eax [ecx+ecx] +
mov [esi] ax +
movzx ecx word ptr [esi] +
mov edx [esi+4] +
movzx eax cx +
shr eax 1 +
lea eax [edx+eax*2] +
cmp cx 60h +
jnb loc_1014E2C  +
push 20h  +
pop ecx  +
mov [eax] cx +
add word ptr [esi] 2 +
inc eax  +
inc eax  +
cmp word ptr [esi] 60h +
jb loc_1014E1A  +
cmp word ptr [esi] 64h +
mov eax [esi+4] +
jb loc_1014E3C  +
cmp word ptr [eax+60h] 50h +
jz loc_1014E4F  +
push 50h  +
pop ecx  +
mov [eax+60h] cx +
xor ecx ecx +
mov [eax+62h] cx +
push 64h  +
pop eax  +
mov [esi] ax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call sub_10017FB  +
xor edi edi +
mov [ebp-1Ch] edi +
mov [ebp-20h] edi +
mov dword ptr [ebp-34h] 1 +
mov [ebp-28h] edi +
cmp [ebp+0Ch] edi +
jnz loc_1014E89  +
mov eax 0C000000Dh +
jmp loc_10151DF  +
mov eax [ebp+20h] +
mov [eax] edi +
mov eax [ebp+1Ch] +
mov [eax] edi +
mov [ebp-4] edi +
push dword ptr [ebp+8]  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
movzx eax ax +
mov [ebp-38h] eax +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1014EC6  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
and dword ptr [ebp+8] 0 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
mov eax [ebp+8] +
mov [ebp-3Ch] eax +
neg eax  +
sbb eax eax +
and eax [ebp-38h] +
mov [ebp-40h] ax +
mov [ebp-3Eh] ax +
push dword ptr [ebp+0Ch]  +
call ds:lstrlenW  +
add eax eax +
movzx eax ax +
mov [ebp-2Ch] eax +
movzx ebx word ptr [ebp+10h] +
mov [ebp-30h] ebx +
cmp [ebp+10h] di +
jz loc_1014F61  +
movzx esi word ptr [ebp+10h] +
lea eax [esi+esi+2] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp-20h] eax +
cmp eax edi +
jnz loc_1014F1B  +
mov eax 0C0000017h +
jmp loc_10151DF  +
mov ecx [ebp+14h] +
xor eax eax +
cmp esi edi +
jle loc_1014F4F  +
movzx edx byte ptr [eax+ecx] +
shr edx 4 +
mov dl ds:byte_10151E8[edx] +
mov edi [ebp-20h] +
mov [edi+eax*2] dl +
movzx edx byte ptr [eax+ecx] +
and edx 0Fh +
mov dl ds:byte_10151E8[edx] +
mov [edi+eax*2+1] dl +
inc eax  +
cmp eax esi +
jl loc_1014F24  +
xor edi edi +
xor eax eax +
mov ecx [ebp-20h] +
mov [ecx+esi*2] ax +
lea eax [ebx+ebx] +
movzx ebx ax +
mov [ebp-30h] ebx +
cmp [ebp+8] edi +
jz loc_1014F6F  +
movzx eax word ptr [ebp-38h] +
mov [ebp-1Ch] eax +
jmp loc_1014F72  +
mov eax [ebp-1Ch] +
cmp ax 6Ch +
jnb loc_1014F7E  +
push 6Ch  +
pop eax  +
mov [ebp-1Ch] eax +
cmp bx di +
jbe loc_1014F8F  +
mov ecx [ebp-2Ch] +
add ecx ebx +
lea eax [eax+ecx+8] +
mov [ebp-1Ch] eax +
mov ecx 7FFFh +
cmp ax cx +
jbe loc_1014FB1  +
cmp [ebp-20h] edi +
jz loc_1014FA7  +
push dword ptr [ebp-20h]  +
call ds:LocalFree  +
mov eax 80000005h +
jmp loc_10151DF  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-48h] +
push ecx  +
movzx eax ax +
push eax  +
lea eax [ebp-40h] +
push eax  +
call sub_1014D8E  +
mov [ebp-24h] eax +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_1015024  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
and dword ptr [ebp-3Ch] 0 +
xor eax eax +
mov [ebp-40h] ax +
mov [ebp-3Eh] ax +
mov dword ptr [ebp-1Ch] 66h +
mov ebx [ebp-30h] +
test bx bx +
jbe loc_1015006  +
mov eax [ebp-2Ch] +
lea eax [ebx+eax+6Eh] +
movzx eax ax +
mov [ebp-1Ch] eax +
lea eax [ebp-48h] +
push eax  +
movzx eax word ptr [ebp-1Ch] +
push eax  +
lea eax [ebp-40h] +
push eax  +
call sub_1014D8E  +
mov [ebp-24h] eax +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
cmp [ebp-24h] edi +
jge loc_1015031  +
cmp [ebp-20h] edi +
jmp loc_10151D1  +
mov eax [ebp-44h] +
mov ecx [ebp+1Ch] +
mov [ecx] eax +
mov [ebp-3Ch] eax +
mov dword ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
push ecx  +
lea ecx [ebp+8] +
push ecx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_1014C53  +
test eax eax +
jz loc_101506D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp+8]  +
lea eax [ebp-48h] +
push eax  +
call sub_1014D00  +
mov [ebp-34h] eax +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_101508D  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
and dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov ebx [ebp-30h] +
xor edi edi +
cmp [ebp-34h] edi +
jnz loc_10150B4  +
mov eax [ebp+20h] +
mov dword ptr [eax] 1 +
mov esi [ebp+1Ch] +
mov eax [esi] +
cmp eax edi +
jz loc_10150AB  +
push eax  +
call ds:LocalFree  +
mov [esi] edi +
mov dword ptr [ebp-24h] 0C000000Dh +
cmp [ebp-24h] edi +
jl loc_1015029  +
cmp bx di +
jbe loc_10151CD  +
mov dword ptr [ebp-4] 3 +
mov eax [ebp-3Ch] +
lea esi [eax+64h] +
mov [ebp+8] esi +
mov dword ptr [ebp-1Ch] 1 +
mov cx [ebp-1Ch] +
cmp cx [eax+62h] +
ja loc_10150FC  +
movzx ecx word ptr [esi+2] +
movzx edx word ptr [esi] +
add edx esi +
lea esi [edx+ecx+6] +
mov [ebp+8] esi +
inc dword ptr [ebp-1Ch]  +
jmp loc_10150DD  +
test byte ptr [ebp+18h] 2 +
push 0  +
pop eax  +
setnz al  +
inc eax  +
mov [esi+4] ax +
mov eax [ebp-2Ch] +
mov [esi] ax +
mov [esi+2] bx +
movzx edi ax +
push edi  +
push dword ptr [ebp+0Ch]  +
lea eax [esi+6] +
push eax  +
call memcpy  +
movzx eax bx +
push eax  +
push dword ptr [ebp-20h]  +
shr edi 1 +
lea eax [esi+edi*2+6] +
push eax  +
call memcpy  +
add esp 18h +
lea eax [ebp-28h] +
push eax  +
push dword ptr [ebp-2Ch]  +
push 8  +
call sub_1014BF0  +
test eax eax +
jl loc_101518C  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
push dword ptr [ebp-28h]  +
call sub_1014BF0  +
test eax eax +
jl loc_101518C  +
lea eax [ebp-28h] +
push eax  +
push 2  +
push dword ptr [ebp-28h]  +
call sub_1014C22  +
test eax eax +
jl loc_101518C  +
lea eax [ebp-48h] +
push eax  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-48h]  +
call sub_1014BF0  +
test eax eax +
jl loc_101518C  +
mov eax [ebp-3Ch] +
inc word ptr [eax+62h]  +
jmp loc_10151BD  +
mov dword ptr [ebp-24h] 0C0000095h +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10151CD  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov esi [ebp+1Ch] +
mov eax [esi] +
test eax eax +
jz loc_10151B3  +
push eax  +
call ds:LocalFree  +
and dword ptr [esi] 0 +
mov dword ptr [ebp-24h] 0C000000Dh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp+20h] +
mov dword ptr [eax] 1 +
cmp dword ptr [ebp-20h] 0 +
jz loc_10151DC  +
push dword ptr [ebp-20h]  +
call ds:LocalFree  +
mov eax [ebp-24h] +
call sub_1002E64  +
retn 1Ch  +
***
mov esp [ebp-18h] +
mov esi [ebp+14h] +
mov eax [esi+4] +
test eax eax +
jz loc_10153D3  +
push eax  +
call ds:LocalFree  +
and dword ptr [esi+4] 0 +
xor eax eax +
mov [esi] ax +
mov dword ptr [ebp-20h] 0C000000Dh +
***
mov [ebp+var_4] 0FFFFFFFEh +
cmp [ebp+hMem] 0 +
jz loc_10153F5  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+var_20] +
call sub_1002E64  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+uBytes] 0 +
jnz loc_1015430  +
xor eax eax +
jmp loc_101543B  +
push [ebp+uBytes]  +
push 0  +
call ds:LocalAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1015456  +
pop ebp  +
jmp ds:LocalFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_10156B4  +
cmp [esi] al +
jz loc_10156B0  +
inc esi  +
dec edx  +
jnz loc_10156A8  +
test edx edx +
jnz loc_10156B9  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_10156CA  +
test eax eax +
jl loc_10156C7  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_10156E3  +
cmp edx [ebp+arg_4] +
jbe loc_10156E8  +
mov eax 80070057h +
test eax eax +
jl loc_10156F6  +
mov eax [ebp+arg_0] +
call sub_101569B  +
jmp loc_10156F9  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1015738  +
cmp [ebp+arg_4] eax +
jz loc_1015734  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1015734  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1015717  +
test esi esi +
jnz loc_1015740  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101574E  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_8] +
and esi 0FFFFFFFEh +
cmp dword ptr [edi] 0FFFFFFFFh +
jz loc_10157C5  +
push ebx  +
mov eax [ebp+arg_0] +
mov edx [eax] +
test edx edx +
jz loc_10157A9  +
mov eax edx +
lea ecx [eax+1] +
mov bl [eax] +
inc eax  +
test bl bl +
jnz loc_101577E  +
sub eax ecx +
add eax eax +
push 0FFFFFFFEh  +
pop ecx  +
sub ecx eax +
mov eax edx +
add esi ecx +
lea ecx [eax+1] +
mov bl [eax] +
inc eax  +
test bl bl +
jnz loc_1015795  +
sub eax ecx +
push edx  +
inc eax  +
push eax  +
push esi  +
call sub_10176EF  +
jmp loc_10157B0  +
dec esi  +
dec esi  +
xor eax eax +
mov [esi] ax +
mov eax [edi] +
mov ecx [ebp+arg_4] +
add [ebp+arg_0] 4 +
add edi 4 +
mov [ecx+eax] esi +
cmp dword ptr [edi] 0FFFFFFFFh +
jnz loc_1015770  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_10157F8  +
dec eax  +
jz loc_10157F4  +
dec eax  +
jz loc_10157F0  +
dec eax  +
jz loc_10157EC  +
xor eax eax +
jmp loc_10157FB  +
push 44h  +
jmp loc_10157FA  +
push 1Ch  +
jmp loc_10157FA  +
push 7Ch  +
jmp loc_10157FA  +
push 2  +
pop eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 1Ch +
sub eax 0 +
push ebx  +
push esi  +
push edi  +
jz loc_1015A7C  +
dec eax  +
jz loc_1015A1D  +
dec eax  +
jz loc_10159BF  +
dec eax  +
jz loc_1015833  +
xor eax eax +
jmp loc_1015A7F  +
mov edi [ebp+arg_4] +
mov eax [edi+0Ch] +
push 2  +
pop ebx  +
test eax eax +
jz loc_1015855  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015843  +
sub eax edx +
lea eax [eax+eax+2] +
mov [ebp+var_1C] eax +
jmp loc_1015858  +
mov [ebp+var_1C] ebx +
mov eax [edi+10h] +
test eax eax +
jz loc_1015876  +
mov ecx eax +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015864  +
sub ecx esi +
lea ecx [ecx+ecx+2] +
mov [ebp+var_18] ecx +
jmp loc_1015879  +
mov [ebp+var_18] ebx +
test eax eax +
jz loc_1015892  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015880  +
sub eax edx +
lea eax [eax+eax+2] +
mov [ebp+var_14] eax +
jmp loc_1015895  +
mov [ebp+var_14] ebx +
mov eax [edi+14h] +
test eax eax +
jz loc_10158B1  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_101589F  +
sub eax edx +
lea eax [eax+eax+2] +
mov [ebp+var_10] eax +
jmp loc_10158B4  +
mov [ebp+var_10] ebx +
mov eax [edi+18h] +
test eax eax +
jz loc_10158D0  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10158BE  +
sub eax edx +
lea eax [eax+eax+2] +
mov [ebp+var_C] eax +
jmp loc_10158D3  +
mov [ebp+var_C] ebx +
mov ecx [edi+20h] +
test ecx ecx +
jz loc_10158F1  +
mov eax ecx +
lea esi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10158DF  +
sub eax esi +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
jmp loc_10158F4  +
mov [ebp+var_8] ebx +
mov eax [edi+2Ch] +
test eax eax +
jz loc_1015910  +
lea esi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10158FE  +
sub eax esi +
lea eax [eax+eax+2] +
mov [ebp+var_4] eax +
jmp loc_1015913  +
mov [ebp+var_4] ebx +
mov eax [ebp+arg_8] +
lea esi [eax+2] +
mov dx [eax] +
add eax ebx +
test dx dx +
jnz loc_1015919  +
mov edx [edi+1Ch] +
sub eax esi +
sar eax 1 +
test edx edx +
jz loc_1015943  +
lea esi [edx+1] +
mov bl [edx] +
inc edx  +
test bl bl +
jnz loc_1015931  +
sub edx esi +
lea edx [edx+edx+2] +
mov [ebp+arg_0] edx +
jmp loc_1015946  +
mov [ebp+arg_0] ebx +
test ecx ecx +
jz loc_101595C  +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_101594D  +
sub ecx esi +
lea edi [ecx+ecx+2] +
jmp loc_101595F  +
push 2  +
pop edi  +
mov ebx [ebp+arg_4] +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_101597B  +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_101596C  +
sub ecx esi +
lea esi [ecx+ecx+2] +
jmp loc_101597E  +
push 2  +
pop esi  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_1015997  +
lea ebx [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015988  +
sub ecx ebx +
lea ecx [ecx+ecx+2] +
jmp loc_101599A  +
push 2  +
pop ecx  +
lea eax [ecx+eax*2+46h] +
add eax esi +
add eax edi +
add eax [ebp+arg_0] +
add eax [ebp+var_4] +
add eax [ebp+var_8] +
add eax [ebp+var_C] +
add eax [ebp+var_10] +
add eax [ebp+var_14] +
add eax [ebp+var_18] +
add eax [ebp+var_1C] +
jmp loc_1015A7F  +
mov esi [ebp+arg_4] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10159DB  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10159CC  +
sub eax edx +
lea edi [eax+eax+2] +
jmp loc_10159DE  +
push 2  +
pop edi  +
mov eax [esi+10h] +
test eax eax +
jz loc_10159F9  +
mov ecx eax +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_10159EA  +
sub ecx esi +
lea esi [ecx+ecx+2] +
jmp loc_10159FC  +
push 2  +
pop esi  +
test eax eax +
jz loc_1015A12  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015A03  +
sub eax edx +
lea eax [eax+eax+2] +
jmp loc_1015A15  +
push 2  +
pop eax  +
add eax esi +
lea eax [eax+edi+1Ch] +
jmp loc_1015A7F  +
mov ebx [ebp+arg_4] +
mov eax [ebx+20h] +
test eax eax +
jz loc_1015A39  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015A2A  +
sub eax edx +
lea edi [eax+eax+2] +
jmp loc_1015A3C  +
push 2  +
pop edi  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_1015A55  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015A46  +
sub eax edx +
lea esi [eax+eax+2] +
jmp loc_1015A58  +
push 2  +
pop esi  +
mov eax [ebx+10h] +
test eax eax +
jz loc_1015A71  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015A62  +
sub eax edx +
lea eax [eax+eax+2] +
jmp loc_1015A74  +
push 2  +
pop eax  +
add eax esi +
lea eax [eax+edi+7Ch] +
jmp loc_1015A7F  +
push 2  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
test eax eax +
jz loc_1015C59  +
jbe loc_1015C55  +
push 2  +
pop ebx  +
cmp eax ebx +
jbe loc_1015BBA  +
cmp eax 4 +
jbe loc_1015ADB  +
cmp eax 5 +
jnz loc_1015C55  +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_1015AC4  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+6] +
jmp loc_1015C5C  +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_1015AE1  +
sub eax edx +
sar eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [eax+20h] +
test ecx ecx +
jz loc_1015B11  +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015AFF  +
sub ecx esi +
lea ecx [ecx+ecx+2] +
mov [ebp+arg_0] ecx +
jmp loc_1015B14  +
mov [ebp+arg_0] ebx +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_1015B30  +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015B1E  +
sub ecx esi +
lea ecx [ecx+ecx+2] +
mov [ebp+arg_8] ecx +
jmp loc_1015B33  +
mov [ebp+arg_8] ebx +
mov ecx [eax+2Ch] +
test ecx ecx +
jz loc_1015B4F  +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015B3D  +
sub ecx esi +
lea ecx [ecx+ecx+2] +
mov [ebp+arg_4] ecx +
jmp loc_1015B52  +
mov [ebp+arg_4] ebx +
mov ecx [eax+14h] +
test ecx ecx +
jz loc_1015B69  +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015B5C  +
sub ecx esi +
lea ebx [ecx+ecx+2] +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_1015B82  +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015B73  +
sub ecx esi +
lea edi [ecx+ecx+2] +
jmp loc_1015B85  +
push 2  +
pop edi  +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_1015B9E  +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015B8F  +
sub ecx esi +
lea ecx [ecx+ecx+2] +
jmp loc_1015BA1  +
push 2  +
pop ecx  +
mov eax [ebp+var_4] +
lea eax [ecx+eax*2+2Eh] +
add eax edi +
add eax ebx +
add eax [ebp+arg_4] +
add eax [ebp+arg_8] +
add eax [ebp+arg_0] +
jmp loc_1015C5C  +
mov esi [ebp+arg_8] +
mov eax [esi+20h] +
test eax eax +
jz loc_1015BD9  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015BC7  +
sub eax edx +
lea eax [eax+eax+2] +
mov [ebp+arg_4] eax +
jmp loc_1015BDC  +
mov [ebp+arg_4] ebx +
mov eax [esi+24h] +
test eax eax +
jz loc_1015BF5  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015BE6  +
sub eax edx +
lea edi [eax+eax+2] +
jmp loc_1015BF7  +
mov edi ebx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1015C0E  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015C01  +
sub eax edx +
lea ebx [eax+eax+2] +
mov eax [esi+2Ch] +
test eax eax +
jz loc_1015C27  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015C18  +
sub eax edx +
lea ecx [eax+eax+2] +
jmp loc_1015C2A  +
push 2  +
pop ecx  +
mov eax [esi+14h] +
test eax eax +
jz loc_1015C43  +
lea esi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1015C34  +
sub eax esi +
lea eax [eax+eax+2] +
jmp loc_1015C46  +
push 2  +
pop eax  +
add eax ecx +
mov ecx [ebp+arg_4] +
add eax ebx +
add eax edi +
lea eax [eax+ecx+3Ch] +
jmp loc_1015C5C  +
xor eax eax +
jmp loc_1015C5C  +
push 1Ah  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_0] 34h +
jz loc_1015C7D  +
xor eax eax +
jmp locret_1015E0D  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi+0Ch]  +
call sub_101719B  +
push dword ptr [esi+10h]  +
mov ebx eax +
call sub_101719B  +
push dword ptr [esi+14h]  +
mov [ebp+arg_4] eax +
call sub_101719B  +
push dword ptr [esi+18h]  +
mov [ebp+var_10] eax +
call sub_101719B  +
mov ecx [esi+4] +
mov [ebp+arg_0] eax +
test ecx ecx +
jz loc_1015CCD  +
lea edi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015CB8  +
sub ecx edi +
lea eax [ecx+ecx+2] +
push 2  +
mov [ebp+var_C] eax +
pop eax  +
jmp loc_1015CD3  +
push 2  +
pop eax  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_1015CEE  +
mov ecx ebx +
lea edi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015CDC  +
sub ecx edi +
lea ecx [ecx+ecx+2] +
mov [ebp+var_8] ecx +
jmp loc_1015CF1  +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_1015D0D  +
lea edi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015CFB  +
sub ecx edi +
lea ecx [ecx+ecx+2] +
mov [ebp+var_4] ecx +
jmp loc_1015D10  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_1015D2C  +
lea edi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_1015D1A  +
sub ecx edi +
lea ecx [ecx+ecx+2] +
mov [ebp+arg_4] ecx +
jmp loc_1015D2F  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_0] 0 +
jz loc_1015D48  +
mov eax [ebp+arg_0] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015D3B  +
sub eax edx +
lea eax [eax+eax+2] +
mov [ebp+arg_0] eax +
mov eax [esi+24h] +
test eax eax +
jz loc_1015D64  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015D55  +
sub eax edx +
lea ebx [eax+eax+2] +
jmp loc_1015D67  +
push 2  +
pop ebx  +
mov eax [esi+20h] +
test eax eax +
jz loc_1015D80  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015D71  +
sub eax edx +
lea ecx [eax+eax+2] +
jmp loc_1015D83  +
push 2  +
pop ecx  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1015D9C  +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1015D8D  +
sub eax edi +
lea eax [eax+eax+2] +
jmp loc_1015D9F  +
push 2  +
pop eax  +
mov edi [ebp+arg_C] +
add eax ecx +
mov ecx [ebp+var_C] +
add eax ebx +
add eax [ebp+arg_0] +
add eax [ebp+arg_4] +
add eax [ebp+var_4] +
add eax [ebp+var_8] +
and dword ptr [edi] 0 +
mov esi [esi+1Ch] +
lea ebx [eax+ecx+128h] +
jmp loc_1015DFE  +
cmp byte ptr [esi] 0 +
jz loc_1015E02  +
push esi  +
call sub_10171CE  +
test eax eax +
jz loc_1015DE5  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015DD6  +
sub eax edx +
lea eax [eax+eax+2] +
jmp loc_1015DE8  +
push 2  +
pop eax  +
add ebx eax +
inc dword ptr [edi]  +
mov eax esi +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1015DF1  +
sub eax ecx +
lea esi [esi+eax+1] +
test esi esi +
jnz loc_1015DC4  +
push 40h  +
pop eax  +
sub eax [edi] +
pop edi  +
pop esi  +
lea eax [ebx+eax*2] +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1015E43  +
jbe loc_1015E3F  +
cmp eax 2 +
jbe loc_1015E3B  +
cmp eax 4 +
jbe loc_1015E37  +
cmp eax 5 +
jnz loc_1015E3F  +
push 4  +
jmp loc_1015E45  +
push 2Ch  +
jmp loc_1015E45  +
push 3Ch  +
jmp loc_1015E45  +
xor eax eax +
jmp loc_1015E46  +
push 1Ah  +
pop eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 124h +
cmp [ebp+arg_C] 34h +
jnz loc_1015F50  +
and [ebp+arg_C] 0 +
push ebx  +
push esi  +
push edi  +
push 124h  +
lea eax [ebp+var_124] +
push 0  +
push eax  +
call memset  +
mov esi [ebp+arg_0] +
mov eax [esi+4] +
add esp 0Ch +
push dword ptr [esi+0Ch]  +
mov [ebp+var_124] eax +
call sub_101719B  +
push dword ptr [esi+10h]  +
mov [ebp+var_120] eax +
call sub_101719B  +
push dword ptr [esi+20h]  +
mov [ebp+var_11C] eax +
call sub_101719B  +
push dword ptr [esi+24h]  +
mov [ebp+var_118] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_114] eax +
call sub_101719B  +
push dword ptr [esi+18h]  +
mov [ebp+var_110] eax +
call sub_101719B  +
push dword ptr [esi+14h]  +
mov [ebp+var_10C] eax +
call sub_101719B  +
mov edi [esi+1Ch] +
mov [ebp+var_108] eax +
lea ebx [ebp+var_104] +
jmp loc_1015F20  +
cmp byte ptr [edi] 0 +
jz loc_1015F24  +
cmp [ebp+arg_C] 40h +
jge loc_1015F24  +
push edi  +
call sub_10171CE  +
mov [ebx] eax +
mov eax edi +
add ebx 4 +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1015F10  +
sub eax ecx +
inc [ebp+arg_C]  +
lea edi [edi+eax+1] +
test edi edi +
jnz loc_1015EF5  +
push [ebp+arg_14]  +
mov edi [ebp+arg_10] +
push offset dword_1015F58  +
push edi  +
lea eax [ebp+var_124] +
push eax  +
call sub_101575A  +
mov [ebp+arg_14] eax +
mov ax [esi] +
mov [edi] ax +
mov ax [ebp+arg_4] +
mov [edi+24h] ax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+arg_14] +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
xor eax eax +
cmp [ebp+arg_4] 2 +
push edi  +
setnz al  +
mov [ebp+dwBytes] esi +
mov [ebp+var_8] esi +
mov [ebp+hMem] esi +
inc eax  +
mov [ebp+var_10] eax +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
push esi  +
push 2  +
push 0FFFFFFFFh  +
push esi  +
push [ebp+arg_8]  +
call sub_1017356  +
mov ebx ds:GetLastError +
test eax eax +
jnz loc_10160F7  +
cmp [ebp+dwBytes] esi +
jnz loc_10160D4  +
mov edi 45Ah +
jmp loc_1016169  +
call ebx  +
mov edi eax +
cmp edi 7Ah +
jnz loc_1016169  +
push [ebp+dwBytes]  +
push esi  +
call ds:GlobalAlloc  +
mov [ebp+hMem] eax +
cmp eax esi +
jnz loc_10160F7  +
push 8  +
pop edi  +
jmp loc_101615B  +
mov edi [ebp+hMem] +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+dwBytes]  +
push edi  +
push 2  +
push 0FFFFFFFFh  +
push esi  +
push [ebp+arg_8]  +
call sub_1017356  +
test eax eax +
jnz loc_101611D  +
call ebx  +
mov edi eax +
jmp loc_101615B  +
cmp [ebp+arg_4] esi +
jnz loc_1016127  +
mov [ebp+var_8] esi +
jmp loc_1016159  +
cmp edi esi +
jnz loc_1016132  +
mov edi 85Ch +
jmp loc_1016169  +
push [ebp+arg_0]  +
dec [ebp+arg_4]  +
push edi  +
push [ebp+var_10]  +
call sub_1015804  +
add [ebp+var_8] eax +
add edi 68h +
cmp [ebp+arg_4] esi +
jnz loc_1016132  +
movzx eax word ptr [ebp+var_8] +
mov ecx [ebp+arg_C] +
or [ebp+arg_4] 0FFFFFFFFh +
mov [ecx] eax +
xor edi edi +
cmp [ebp+hMem] esi +
jz loc_1016169  +
push [ebp+hMem]  +
call ds:GlobalFree  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 2 +
jnz loc_10161A3  +
cmp [ebp+arg_8] 0 +
mov ax [ebp+arg_C] +
mov ecx [ebp+arg_4] +
jz loc_101619D  +
mov [ecx+3Ah] ax +
jmp loc_10161B4  +
mov [ecx+2Ah] ax +
jmp loc_10161B4  +
cmp [ebp+arg_0] 4 +
jnz loc_10161B4  +
mov ax [ebp+arg_C] +
mov ecx [ebp+arg_4] +
mov [ecx+1Eh] ax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10161D3  +
cmp edx 7FFFFFFFh +
jbe loc_10161D8  +
mov eax 80070057h +
test eax eax +
jl loc_10161EE  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1015703  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
mov ecx 80070057h +
test edx edx +
jz loc_1016212  +
cmp edx 7FFFFFFFh +
jbe loc_1016214  +
mov eax ecx +
test eax eax +
jl loc_101623D  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_101622D  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_101623D  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 0  +
call sub_1015703  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
mov ecx 80070057h +
jz loc_1016262  +
cmp edx 7FFFFFFFh +
jbe loc_1016264  +
mov eax ecx +
test eax eax +
jl loc_101628E  +
mov eax [ebp+arg_C] +
shr eax 1 +
cmp eax 7FFFFFFEh +
jbe loc_1016280  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_101628E  +
mov ecx [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
push 0  +
call sub_1015703  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 7FFFFFFFh  +
push esi  +
lea eax [ebp+arg_0] +
call sub_10156D0  +
test eax eax +
jl loc_10162FD  +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ebx  +
push 0  +
lea eax [edx+esi] +
pop ebx  +
jz loc_10162F1  +
mov esi ecx +
sub esi [ebp+arg_4] +
push edi  +
lea edi [esi+edx+7FFFFFFFh] +
mov esi [ebp+arg_8] +
sub esi eax +
test edi edi +
jz loc_10162EC  +
mov dl [esi+eax] +
test dl dl +
jz loc_10162EC  +
mov [eax] dl +
inc eax  +
dec ecx  +
dec edi  +
test ecx ecx +
jnz loc_10162D8  +
pop edi  +
test ecx ecx +
jnz loc_10162F7  +
dec eax  +
mov ebx 8007007Ah +
mov byte ptr [eax] 0 +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
test eax eax +
jz loc_10164C6  +
cmp eax 1 +
jz loc_1016414  +
jbe loc_10164D2  +
cmp eax 3 +
ja loc_10164D2  +
mov esi [ebp+arg_4] +
mov eax [esi+0Ch] +
push [ebp+arg_10]  +
mov edi [ebp+arg_C] +
mov [ebp+var_10] eax +
mov eax [esi+10h] +
push offset dword_10164F0  +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
push edi  +
lea eax [ebp+var_10] +
push eax  +
call sub_101575A  +
mov ebx eax +
mov ax [esi] +
mov [edi] ax +
mov ax [esi+38h] +
mov [edi+2] ax +
mov ax [esi+3Ch] +
mov [edi+8] ax +
push dword ptr [esi+34h]  +
call sub_1017585  +
mov [edi+0Ah] ax +
lea eax [edi+0Ch] +
push eax  +
lea eax [esi+50h] +
push eax  +
call sub_10147B5  +
cmp [ebp+arg_0] 3 +
mov eax [esi+4Ch] +
mov [edi+10h] eax +
jnz loc_10164D5  +
mov eax [ebp+arg_8] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10163A3  +
sub eax ecx +
sar eax 1 +
inc eax  +
lea edx [eax+eax] +
mov ecx ebx +
sub ecx edx +
cmp ecx edi +
jb loc_10163C9  +
push [ebp+arg_8]  +
mov ebx ecx +
push eax  +
push ebx  +
call sub_10161BD  +
mov [edi+2Ch] ebx +
mov eax [esi+14h] +
mov ecx [esi+2Ch] +
mov [ebp+var_34] eax +
mov eax [esi+18h] +
mov [ebp+var_30] eax +
mov eax [esi+20h] +
mov [ebp+var_2C] eax +
mov [ebp+var_20] eax +
mov eax [esi+24h] +
push ebx  +
mov [ebp+var_1C] eax +
mov eax [esi+4] +
push offset dword_1016500  +
mov [ebp+var_18] eax +
mov [ebp+var_28] ecx +
mov ecx [esi+1Ch] +
push edi  +
lea eax [ebp+var_34] +
push eax  +
mov [ebp+var_24] ecx +
call sub_101575A  +
and dword ptr [edi+3Ch] 0 +
mov ebx eax +
jmp loc_10164D5  +
mov esi [ebp+arg_4] +
mov eax [esi+20h] +
push [ebp+arg_10]  +
mov edi [ebp+arg_C] +
mov [ebp+var_10] eax +
mov eax [esi+2Ch] +
mov [ebp+var_C] eax +
mov eax [esi+10h] +
push offset dword_10164E0  +
mov [ebp+var_8] eax +
push edi  +
lea eax [ebp+var_10] +
push eax  +
call sub_101575A  +
mov ebx eax +
mov ax [esi] +
mov [edi] ax +
mov eax [esi+0Ch] +
test eax eax +
jz loc_101645B  +
push 15h  +
push eax  +
lea eax [edi+2] +
push eax  +
call sub_101773B  +
jmp loc_1016461  +
xor eax eax +
mov [edi+2] ax +
mov eax [esi+14h] +
test eax eax +
jz loc_1016476  +
push 10h  +
push eax  +
lea eax [edi+2Eh] +
push eax  +
call sub_101773B  +
jmp loc_101647C  +
xor eax eax +
mov [edi+2Eh] ax +
mov eax [esi+18h] +
test eax eax +
jz loc_1016497  +
push 0Ah  +
push eax  +
lea eax [edi+4Eh] +
push eax  +
call sub_101773B  +
xor eax eax +
mov [edi+60h] ax +
jmp loc_101649D  +
xor eax eax +
mov [edi+4Eh] ax +
mov ax [esi+3Ch] +
mov [edi+68h] ax +
push dword ptr [esi+34h]  +
call sub_1017585  +
mov [edi+6Ah] ax +
lea eax [edi+70h] +
push eax  +
lea eax [esi+50h] +
push eax  +
call sub_10147B5  +
mov eax [esi+4Ch] +
mov [edi+74h] eax +
jmp loc_10164D5  +
mov eax [ebp+arg_4] +
mov ax [eax] +
mov ecx [ebp+arg_C] +
mov [ecx] ax +
mov ebx [ebp+arg_10] +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_8] +
mov eax ebx +
sub eax esi +
push edi  +
test ecx ecx +
jz loc_10166A9  +
jbe loc_10166B5  +
cmp ecx 2 +
jbe loc_1016635  +
cmp ecx 4 +
jbe loc_1016599  +
cmp ecx 5 +
jnz loc_10166B5  +
mov eax [ebp+arg_C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101656C  +
sub eax edx +
sar eax 1 +
inc eax  +
lea edx [eax+eax] +
mov ecx ebx +
sub ecx edx +
cmp ecx esi +
jb loc_1016592  +
push [ebp+arg_C]  +
mov ebx ecx +
push eax  +
push ebx  +
call sub_10161BD  +
mov [esi] ebx +
jmp loc_10166B5  +
mov eax [ebp+arg_C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101659F  +
sub eax edx +
sar eax 1 +
inc eax  +
lea edx [eax+eax] +
mov ecx ebx +
sub ecx edx +
cmp ecx esi +
jb loc_10165C5  +
push [ebp+arg_C]  +
mov ebx ecx +
push eax  +
push ebx  +
call sub_10161BD  +
mov edi [ebp+arg_0] +
mov [esi] ebx +
mov eax [edi+20h] +
mov [ebp+var_1C] eax +
mov eax [edi+24h] +
mov [ebp+var_18] eax +
mov eax [edi+2Ch] +
mov [ebp+var_14] eax +
mov eax [edi+14h] +
mov [ebp+var_10] eax +
mov eax [edi+0Ch] +
push ebx  +
mov [ebp+var_C] eax +
mov eax [edi+10h] +
push offset dword_10166D8  +
mov [ebp+var_8] eax +
push esi  +
lea eax [ebp+var_1C] +
push eax  +
call sub_101575A  +
mov ebx eax +
mov ax [edi+38h] +
mov [esi+4] ax +
mov ax [edi+40h] +
mov [esi+6] ax +
mov ax [edi+44h] +
mov [esi+8] ax +
push dword ptr [edi+48h]  +
call sub_10175B8  +
mov [esi+1Ch] ax +
mov ax [edi+4Ch] +
and dword ptr [esi+28h] 0 +
mov [esi+1Eh] ax +
jmp loc_10166B5  +
mov edi [ebp+arg_0] +
mov eax [edi+20h] +
mov [ebp+var_18] eax +
mov eax [edi+24h] +
mov [ebp+var_14] eax +
mov eax [edi+0Ch] +
mov [ebp+var_10] eax +
mov eax [edi+2Ch] +
push ebx  +
mov [ebp+var_C] eax +
mov eax [edi+14h] +
push offset dword_10166C0  +
mov [ebp+var_8] eax +
push esi  +
lea eax [ebp+var_18] +
push eax  +
call sub_101575A  +
push 0Ch  +
push [ebp+arg_C]  +
mov ebx eax +
push 0Dh  +
push esi  +
call sub_10161F7  +
xor eax eax +
mov [esi+18h] ax +
mov ax [edi+38h] +
mov [esi+1Ch] ax +
mov ax [edi+40h] +
mov [esi+1Eh] ax +
mov ax [edi+44h] +
mov [esi+20h] ax +
push dword ptr [edi+48h]  +
call sub_10175B8  +
mov [esi+38h] ax +
mov ax [edi+4Ch] +
mov [esi+3Ah] ax +
jmp loc_10166B5  +
push 0Ch  +
push [ebp+arg_C]  +
push eax  +
push esi  +
call sub_1016246  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 2  +
pop ebx  +
mov [ebp+dwBytes] edi +
mov [ebp+var_C] edi +
mov [ebp+hMem] edi +
cmp [ebp+arg_4] ebx +
jnz loc_1016727  +
mov [ebp+var_10] 7Ch +
mov [ebp+arg_4] 1 +
jmp loc_1016731  +
mov [ebp+var_10] 1Ch +
mov [ebp+arg_4] ebx +
mov esi [ebp+arg_20] +
push esi  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push edi  +
push ebx  +
push 0FFFFFFFFh  +
push edi  +
push [ebp+arg_8]  +
call sub_1017356  +
test eax eax +
jnz loc_1016788  +
call ds:GetLastError  +
mov edi eax +
cmp edi 7Ah +
jnz loc_1016897  +
cmp [ebp+dwBytes] 0 +
jnz loc_101676C  +
mov edi 45Ah +
jmp loc_1016897  +
push [ebp+dwBytes]  +
push 0  +
call ds:GlobalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_1016786  +
push 8  +
pop edi  +
jmp loc_1016888  +
xor edi edi +
push esi  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+dwBytes]  +
push [ebp+hMem]  +
push ebx  +
push 0FFFFFFFFh  +
push edi  +
push [ebp+arg_8]  +
call sub_1017356  +
test eax eax +
jnz loc_10167B0  +
call ds:GetLastError  +
mov edi eax +
jmp loc_1016888  +
mov edi [esi] +
test edi edi +
jnz loc_10167C0  +
and [ebp+var_C] edi +
xor edi edi +
jmp loc_1016888  +
mov ebx [ebp+hMem] +
test ebx ebx +
jnz loc_10167D1  +
mov edi 85Ch +
jmp loc_1016897  +
push [ebp+arg_0]  +
dec edi  +
push ebx  +
push [ebp+arg_4]  +
call sub_1015804  +
add [ebp+var_C] eax +
add ebx 68h +
test edi edi +
jnz loc_10167D1  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_1C] +
mov [ecx] eax +
mov ecx [ebp+arg_10] +
cmp eax ecx +
ja loc_1016823  +
mov esi [esi] +
mov edi [ebp+hMem] +
test esi esi +
jz loc_10167B9  +
mov ebx [ebp+arg_C] +
push [ebp+arg_14]  +
dec esi  +
push ebx  +
push [ebp+arg_0]  +
push edi  +
push [ebp+arg_4]  +
call sub_1016307  +
add ebx [ebp+var_10] +
add edi 68h +
mov [ebp+arg_14] eax +
test esi esi +
jz loc_10167B9  +
jmp loc_1016803  +
cmp [ebp+arg_24] 1 +
jnz loc_1016883  +
mov esi [esi] +
mov edi [ebp+hMem] +
xor ebx ebx +
mov [ebp+arg_8] ecx +
test esi esi +
jz loc_1016883  +
push [ebp+arg_0]  +
dec esi  +
push edi  +
push [ebp+arg_4]  +
call sub_1015804  +
mov [ebp+arg_10] eax +
cmp eax [ebp+arg_8] +
ja loc_1016875  +
push [ebp+arg_14]  +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
push edi  +
push [ebp+arg_4]  +
call sub_1016307  +
mov [ebp+arg_14] eax +
mov eax [ebp+var_10] +
add [ebp+arg_C] eax +
mov eax [ebp+arg_10] +
sub [ebp+arg_8] eax +
add edi 68h +
inc ebx  +
test esi esi +
jnz loc_1016837  +
test ebx ebx +
jz loc_1016883  +
mov eax [ebp+arg_20] +
mov [eax] ebx +
jmp loc_10167B9  +
mov edi 84Bh +
cmp [ebp+hMem] 0 +
jz loc_1016897  +
push [ebp+hMem]  +
call ds:GlobalFree  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_1C] +
mov [ecx] eax +
mov eax [ebp+arg_18] +
test eax eax +
jz loc_10168AB  +
mov ecx [ebp+arg_14] +
mov [eax] ecx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 12Ch +
mov eax dword_1019000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_14] +
or [ebp+var_110] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_C] +
xor edx edx +
xor ecx ecx +
push esi  +
mov [ebp+var_124] eax +
mov [eax] dx +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_114] edi +
mov [ebp+hMem] ecx +
mov [ebp+var_120] ecx +
mov [ebp+dwBytes] ecx +
cmp eax ecx +
jz loc_101691A  +
cmp [eax] cx +
jz loc_101691A  +
push 32h  +
pop esi  +
jmp loc_1016CD0  +
cmp [ebp+arg_8] 5 +
jbe loc_101692C  +
cmp [ebp+arg_8] 34h +
jz loc_101692C  +
push 7Ch  +
jmp loc_1016914  +
cmp edi ecx +
jz loc_1016C91  +
cmp [edi] cx +
jz loc_1016C91  +
push ecx  +
lea eax [ebp+var_110] +
push eax  +
push edi  +
call sub_101739F  +
test eax eax +
jnz loc_101696D  +
call ds:GetLastError  +
mov esi eax +
cmp esi 709h +
jnz loc_1016C94  +
mov esi 866h +
jmp loc_1016C94  +
cmp [ebp+arg_8] 34h +
lea eax [ebp+dwBytes] +
push eax  +
jnz loc_1016A87  +
lea eax [ebp-106h] +
push eax  +
mov [ebp+dwBytes] 102h +
mov byte ptr [ebp-107h] 5Ch +
mov [ebp+Buffer] 5Ch +
call ds:GetComputerNameA  +
test eax eax +
jnz loc_10169B5  +
call ds:GetLastError  +
mov esi eax +
jmp loc_1016C94  +
lea eax [ebp+Buffer] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10169BE  +
sub eax edx +
lea ecx [eax+10h] +
mov eax 104h +
cmp ecx eax +
jbe loc_10169DA  +
push 8  +
jmp loc_1016C93  +
push offset aPrintWin400  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1016297  +
lea eax [ebp+dwBytes] +
push eax  +
push 0  +
push 0  +
push 3  +
mov edi offset aWindows4_0 +
push edi  +
push [ebp+var_110]  +
call sub_10173EE  +
call ds:GetLastError  +
mov esi eax +
cmp esi 7Ah +
jnz loc_1016C94  +
push [ebp+dwBytes]  +
push 0  +
call ds:GlobalAlloc  +
mov esi eax +
mov [ebp+var_120] esi +
test esi esi +
jz loc_10169D3  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+dwBytes]  +
push esi  +
push 3  +
push edi  +
push [ebp+var_110]  +
call sub_10173EE  +
test eax eax +
jz loc_10169A8  +
lea eax [ebp+var_11C] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
push 34h  +
call sub_1015C68  +
cmp [ebp+var_11C] 40h +
mov [ebp+dwBytes] eax +
ja loc_10169D3  +
jmp loc_1016B08  +
push 0  +
push 0  +
push 2  +
push [ebp+var_110]  +
call sub_101743F  +
test eax eax +
jnz loc_1016AC9  +
call ds:GetLastError  +
mov esi eax +
cmp esi 7Ah +
jnz loc_1016C94  +
push [ebp+dwBytes]  +
push 0  +
call ds:GlobalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_10169D3  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+dwBytes]  +
push [ebp+hMem]  +
push 2  +
push [ebp+var_110]  +
call sub_101743F  +
test eax eax +
jz loc_10169A8  +
push [ebp+hMem]  +
movzx eax [ebp+arg_8] +
push edi  +
push eax  +
call sub_1015A8B  +
mov [ebp+dwBytes] eax +
mov edi 0FFFFh +
cmp eax edi +
ja loc_10169D3  +
movzx esi [ebp+arg_10] +
mov ecx [ebp+var_124] +
mov [ecx] ax +
cmp eax esi +
ja loc_1016C3C  +
cmp [ebp+arg_8] 34h +
jnz loc_1016B60  +
push eax  +
push 0  +
push ebx  +
call memset  +
add esp 0Ch +
add esi ebx +
push esi  +
push ebx  +
push 34h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+var_11C]  +
push [ebp+var_120]  +
call sub_1015E4F  +
jmp loc_1016C38  +
movzx eax [ebp+arg_8] +
lea ecx [esi+ebx] +
push ecx  +
push [ebp+var_114]  +
mov [ebp+var_11C] eax +
push ebx  +
push eax  +
push [ebp+hMem]  +
call sub_1016529  +
cmp [ebp+arg_8] 2 +
mov [ebp+var_12C] eax +
jz loc_1016B99  +
cmp [ebp+arg_8] 4 +
jnz loc_1016C38  +
push [ebp+var_11C]  +
call sub_1015E16  +
sub esi [ebp+dwBytes] +
cmp eax esi +
jbe loc_1016BB8  +
mov esi 84Bh +
jmp loc_1016C94  +
xor edx edx +
mov ecx edi +
cmp [ebp+arg_10] cx +
lea ecx [ebp+var_128] +
setz dl  +
add eax ebx +
push edx  +
push ecx  +
lea ecx [ebp+var_114] +
push ecx  +
push 0  +
push [ebp+var_12C]  +
push esi  +
push eax  +
push [ebp+var_110]  +
push [ebp+var_11C]  +
push [ebp+var_114]  +
call sub_10166F9  +
mov ecx [ebp+dwBytes] +
mov esi eax +
mov eax [ebp+var_114] +
lea edx [eax+ecx] +
cmp edx edi +
jbe loc_1016C15  +
mov eax [ebp+var_124] +
mov [eax] di +
jmp loc_1016C20  +
add eax ecx +
mov ecx [ebp+var_124] +
mov [ecx] ax +
push [ebp+var_128]  +
push 1  +
push ebx  +
push [ebp+var_11C]  +
call sub_101617F  +
test esi esi +
jnz loc_1016C94  +
xor esi esi +
jmp loc_1016C94  +
cmp [ebp+arg_8] 2 +
jz loc_1016C4A  +
cmp [ebp+arg_8] 4 +
jnz loc_1016C7F  +
lea eax [ebp+var_114] +
push eax  +
push [ebp+var_110]  +
movzx eax [ebp+arg_8] +
push eax  +
push [ebp+var_114]  +
call sub_1016081  +
mov esi eax +
test esi esi +
jnz loc_1016C94  +
mov eax [ebp+dwBytes] +
add eax [ebp+var_114] +
mov [ebp+dwBytes] eax +
cmp edi eax +
sbb esi esi +
and esi 0FFFFF7BDh +
add esi 84Bh +
jmp loc_1016C94  +
push 57h  +
pop esi  +
cmp [ebp+var_110] 0FFFFFFFFh +
jz loc_1016CA8  +
push [ebp+var_110]  +
call sub_1017307  +
cmp [ebp+hMem] 0 +
mov edi ds:GlobalFree +
jz loc_1016CBF  +
push [ebp+hMem]  +
call edi  +
cmp [ebp+var_120] 0 +
jz loc_1016CD0  +
push [ebp+var_120]  +
call edi  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002D45  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+arg_18] +
xor eax eax +
push edi  +
mov edi [ebp+arg_14] +
mov [edi] ax +
xor ebx ebx +
mov [esi] ax +
mov eax [ebp+dwBytes] +
mov [ebp+hMem] ebx +
cmp eax ebx +
jz loc_1016D2F  +
cmp [eax] bx +
jz loc_1016D2F  +
push 32h  +
pop ebx  +
jmp loc_1016E73  +
cmp word ptr [ebp+arg_8] 3 +
jbe loc_1016D3A  +
push 7Ch  +
jmp loc_1016D29  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
call sub_101739F  +
test eax eax +
jnz loc_1016D58  +
call ds:GetLastError  +
mov ebx eax +
jmp loc_1016E56  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+dwBytes] +
push eax  +
push ebx  +
push ebx  +
push 2  +
push 0FFFFFFFFh  +
push ebx  +
push [ebp+var_8]  +
call sub_1017356  +
test eax eax +
jnz loc_1016DB4  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx 7Ah +
jnz loc_1016E56  +
push [ebp+dwBytes]  +
push 0  +
call ds:GlobalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_1016DCA  +
lea ecx [ebp+var_10] +
push ecx  +
lea ecx [ebp+dwBytes] +
push ecx  +
push [ebp+dwBytes]  +
push eax  +
push 2  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+var_8]  +
call sub_1017356  +
test eax eax +
jz loc_1016D4B  +
mov ebx [ebp+var_10] +
test ebx ebx +
jnz loc_1016DD2  +
xor eax eax +
mov [edi] ax +
mov [esi] ax +
xor ebx ebx +
jmp loc_1016E56  +
push 8  +
pop ebx  +
jmp loc_1016E56  +
cmp [ebp+hMem] 0 +
jnz loc_1016DDF  +
mov ebx 85Ch +
jmp loc_1016E56  +
mov eax [ebp+hMem] +
and [ebp+var_C] 0 +
mov [esi] bx +
movzx esi word ptr [ebp+arg_8] +
mov edi ebx +
mov [ebp+arg_18] eax +
push [ebp+arg_4]  +
dec edi  +
push [ebp+arg_18]  +
push esi  +
call sub_1015804  +
add [ebp+var_C] eax +
add [ebp+arg_18] 68h +
test edi edi +
jnz loc_1016DF2  +
movzx ecx [ebp+arg_10] +
cmp [ebp+var_C] ecx +
ja loc_1016E51  +
push esi  +
call sub_10157D2  +
mov edi [ebp+arg_C] +
mov [ebp+arg_8] eax +
lea eax [ecx+edi] +
mov ecx [ebp+hMem] +
mov [ebp+arg_18] ecx +
push eax  +
push edi  +
push [ebp+arg_4]  +
dec ebx  +
push [ebp+arg_18]  +
push esi  +
call sub_1016307  +
add [ebp+arg_18] 68h +
add edi [ebp+arg_8] +
test ebx ebx +
jnz loc_1016E28  +
mov ax word ptr [ebp+var_10] +
mov ecx [ebp+arg_14] +
mov [ecx] ax +
jmp loc_1016DC3  +
mov ebx 84Bh +
cmp [ebp+var_8] 0FFFFFFFFh +
jz loc_1016E64  +
push [ebp+var_8]  +
call sub_1017307  +
cmp [ebp+hMem] 0 +
jz loc_1016E73  +
push [ebp+hMem]  +
call ds:GlobalFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov ecx [ebp+arg_10] +
or [ebp+var_4] 0FFFFFFFFh +
xor eax eax +
push esi  +
mov si [ebp+arg_4] +
mov [ecx] ax +
mov ecx [ebp+arg_14] +
push edi  +
xor edi edi +
mov [ebp+var_1C] edi +
mov [ebp+Buffer] edi +
mov [ebp+hMem] edi +
mov [ebp+var_14] edi +
mov [ecx] ax +
cmp si 5 +
jbe loc_1016EC7  +
cmp si 34h +
jz loc_1016EC7  +
mov [ebp+arg_0] 7Ch +
jmp loc_1017132  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1016EDF  +
cmp [eax] di +
jz loc_1016EDF  +
mov [ebp+arg_0] 32h +
jmp loc_1017132  +
push edi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push edi  +
call NetShareEnum  +
mov [ebp+arg_0] eax +
cmp eax edi +
jnz loc_10170FD  +
push ebx  +
movzx ebx word ptr [ebp+arg_C] +
add ebx [ebp+arg_8] +
cmp si 2 +
jnz loc_1016F13  +
push 1  +
jmp loc_1016F1B  +
cmp si 4 +
jnz loc_1016F23  +
push 2  +
call sub_10157D2  +
mov [ebp+var_1C] eax +
mov [ebp+var_28] edi +
cmp [ebp+entriesread] edi +
jbe loc_10170FC  +
mov [ebp+var_10] edi +
mov eax [ebp+Buffer] +
mov ecx [ebp+var_10] +
add eax ecx +
cmp dword ptr [eax+4] 1 +
jnz loc_101709A  +
mov esi [eax] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1016F4B  +
sub eax edx +
sar eax 1 +
cmp eax 0Ch +
ja loc_101709A  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call sub_101739F  +
test eax eax +
jz loc_10170E8  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push edi  +
push 2  +
push [ebp+var_4]  +
call sub_101743F  +
test eax eax +
jnz loc_1016F9A  +
mov esi ds:GetLastError +
call esi  +
cmp eax 7Ah +
jnz loc_10170DB  +
push [ebp+dwBytes]  +
push edi  +
call ds:GlobalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jz loc_10170DF  +
lea ecx [ebp+dwBytes] +
push ecx  +
push [ebp+dwBytes]  +
push eax  +
push 2  +
push [ebp+var_4]  +
call sub_101743F  +
test eax eax +
jz loc_10170E8  +
mov eax [ebp+Buffer] +
mov ecx [ebp+var_10] +
push [ebp+hMem]  +
mov edi [ecx+eax] +
movzx esi [ebp+arg_4] +
push edi  +
push esi  +
call sub_1015A8B  +
cmp [ebp+var_14] 0 +
mov [ebp+var_20] eax +
jnz loc_1017072  +
movzx ecx word ptr [ebp+arg_C] +
cmp ecx eax +
jb loc_1017072  +
mov eax [ebp+arg_8] +
push ebx  +
push edi  +
push eax  +
push esi  +
push [ebp+hMem]  +
mov [ebp+var_34] eax +
call sub_1016529  +
mov ebx eax +
push esi  +
mov [ebp+var_24] ebx +
call sub_1015E16  +
mov edi [ebp+arg_C] +
sub edi [ebp+var_20] +
add [ebp+arg_8] eax +
cmp [ebp+arg_4] 2 +
mov [ebp+arg_C] edi +
jz loc_1017034  +
cmp [ebp+arg_4] 4 +
jz loc_1017034  +
mov eax [ebp+arg_10] +
inc word ptr [eax]  +
jmp loc_1017079  +
cmp [ebp+arg_8] ebx +
jnb loc_10170F3  +
mov ecx [ebp+var_10] +
push 0  +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push ebx  +
movzx eax di +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+Buffer] +
push [ebp+var_4]  +
push esi  +
push dword ptr [ecx+eax]  +
call sub_10166F9  +
mov [ebp+arg_0] eax +
cmp eax 84Bh +
jnz loc_10170AE  +
mov ebx [ebp+var_24] +
mov [ebp+var_14] 1 +
mov eax [ebp+arg_14] +
push [ebp+hMem]  +
inc word ptr [eax]  +
call ds:GlobalFree  +
push [ebp+var_4]  +
and [ebp+hMem] 0 +
call sub_1017307  +
or [ebp+var_4] 0FFFFFFFFh +
xor edi edi +
inc [ebp+var_28]  +
mov eax [ebp+var_28] +
add [ebp+var_10] 0Ch +
cmp eax [ebp+entriesread] +
jnb loc_10170FC  +
jmp loc_1016F32  +
test eax eax +
jnz loc_10170FA  +
mov eax [ebp+var_2C] +
imul eax [ebp+var_1C] +
push [ebp+var_2C]  +
add [ebp+arg_8] eax +
sub edi [ebp+var_20] +
mov eax [ebp+arg_10] +
inc word ptr [eax]  +
push 1  +
push [ebp+var_34]  +
mov [ebp+arg_C] edi +
push esi  +
call sub_101617F  +
mov ebx [ebp+var_24] +
jmp loc_1017079  +
call esi  +
jmp loc_10170EE  +
mov [ebp+arg_0] 8 +
jmp loc_10170FC  +
call ds:GetLastError  +
mov [ebp+arg_0] eax +
jmp loc_10170FC  +
mov [ebp+arg_0] 84Bh +
xor edi edi +
pop ebx  +
cmp [ebp+var_4] 0FFFFFFFFh +
jz loc_101710B  +
push [ebp+var_4]  +
call sub_1017307  +
cmp [ebp+hMem] edi +
jz loc_1017119  +
push [ebp+hMem]  +
call ds:GlobalFree  +
cmp [ebp+Buffer] edi +
jz loc_1017126  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
cmp [ebp+var_14] edi +
jz loc_1017132  +
mov [ebp+arg_0] 84Bh +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_101715A  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1017165  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jb loc_1017187  +
sub eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1017192  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10171AD  +
jmp loc_10171C2  +
lea esi [eax+1] +
push 5Ch  +
push esi  +
call strchr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10171AA  +
cmp byte ptr [esi] 0 +
jnz loc_10171C2  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
call sub_101719B  +
mov esi eax +
test esi esi +
jz loc_101723A  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10171E5  +
sub eax edx +
push edi  +
lea edi [eax+esi-4] +
cmp eax 3 +
jbe loc_1017239  +
push offset a_icm  +
push edi  +
call _stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101721A  +
push offset a_icc  +
push edi  +
call _stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1017239  +
lea edi [esi-7] +
cmp edi [ebp+arg_0] +
jbe loc_1017239  +
push 7  +
push offset aColor  +
push edi  +
call _strnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1017239  +
lea esi [edi+1] +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp hModule 0 +
jnz loc_101727C  +
push offset aWinspool_drv  +
call ds:LoadLibraryW  +
test eax eax +
jnz loc_1017277  +
retn   +
mov hModule eax +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10172B5  +
cmp ecx 7FFFFFFFh +
jbe loc_10172BA  +
mov eax 80070057h +
test eax eax +
jl loc_10172FE  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_10172F1  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_10172EC  +
mov cl [edx+eax] +
test cl cl +
jz loc_10172EC  +
mov [eax] cl +
inc eax  +
dec esi  +
jnz loc_10172D8  +
pop edi  +
test esi esi +
jnz loc_10172F7  +
dec eax  +
mov ebx 8007007Ah +
mov byte ptr [eax] 0 +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1022810 +
test eax eax +
jnz loc_101733E  +
call sub_101725E  +
test eax eax +
jnz loc_1017324  +
xor eax eax +
pop ebp  +
retn 4  +
push offset ProcName  +
push hModule  +
call ds:GetProcAddress  +
test eax eax +
jz loc_101731E  +
mov dword_1022810 eax +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1022814 +
test eax eax +
jnz loc_101738D  +
call sub_101725E  +
test eax eax +
jnz loc_1017373  +
xor eax eax +
pop ebp  +
retn 20h  +
push offset aEnumjobsa  +
push hModule  +
call ds:GetProcAddress  +
test eax eax +
jz loc_101736D  +
mov dword_1022814 eax +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_102281C +
test eax eax +
jnz loc_10173D6  +
call sub_101725E  +
test eax eax +
jnz loc_10173BC  +
xor eax eax +
pop ebp  +
retn 0Ch  +
push offset aOpenprinterw  +
push hModule  +
call ds:GetProcAddress  +
test eax eax +
jz loc_10173B6  +
mov dword_102281C eax +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1022820 +
test eax eax +
jnz loc_1017425  +
call sub_101725E  +
test eax eax +
jnz loc_101740B  +
xor eax eax +
pop ebp  +
retn 18h  +
push offset aGetprinterdriv  +
push hModule  +
call ds:GetProcAddress  +
mov dword_1022820 eax +
test eax eax +
jz loc_1017405  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
cmp dword_1022818 ebx +
jnz loc_1017481  +
call sub_101725E  +
test eax eax +
jnz loc_1017467  +
xor eax eax +
jmp loc_101756E  +
push offset aGetprintera  +
push hModule  +
call ds:GetProcAddress  +
cmp eax ebx +
jz loc_1017460  +
mov dword_1022818 eax +
cmp [ebp+arg_4] 2 +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
jnz loc_1017510  +
lea eax [ebp+arg_C] +
push eax  +
push ebx  +
push ebx  +
push 1  +
mov edi offset aWindows4_0 +
push edi  +
push [ebp+arg_0]  +
mov [ebp+arg_C] ebx +
call sub_10173EE  +
mov eax [ebp+arg_C] +
cmp eax esi +
ja loc_101751D  +
push [ebp+arg_10]  +
push eax  +
push [ebp+arg_8]  +
push 1  +
push edi  +
push [ebp+arg_0]  +
call sub_10173EE  +
test eax eax +
jz loc_10174EE  +
mov ecx [ebp+arg_8] +
mov edx [ecx] +
mov eax edx +
lea edi [eax+1] +
mov bl [eax] +
inc eax  +
test bl bl +
jnz loc_10174D0  +
sub eax edi +
lea ebx [eax+1] +
push edx  +
sub ecx ebx +
lea edi [ecx+esi] +
push ebx  +
push edi  +
call sub_101729F  +
mov [ebp+var_8] edi +
jmp loc_1017510  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_1017510  +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+arg_10] +
push 4  +
push dword ptr [eax]  +
call sub_101716E  +
test eax eax +
jl loc_1017566  +
mov ebx [ebp+var_4] +
mov edi [ebp+arg_10] +
push edi  +
cmp esi ebx +
jbe loc_1017522  +
sub esi ebx +
push esi  +
jmp loc_1017524  +
lea ebx [eax-4] +
jmp loc_1017510  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword_1022818  +
cmp [ebp+arg_4] 2 +
mov esi eax +
jnz loc_101756A  +
test esi esi +
jz loc_101754E  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_101756A  +
mov ecx [ebp+arg_8] +
mov [ecx+10h] eax +
jmp loc_1017559  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_101756A  +
push edi  +
push ebx  +
push dword ptr [edi]  +
call sub_1017140  +
test eax eax +
jge loc_101756A  +
xor eax eax +
jmp loc_101756C  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov cl [ebp+arg_0] +
xor eax eax +
test cl 8 +
jz loc_1017597  +
push 2  +
pop eax  +
test cl 1 +
jz loc_101759F  +
or eax 1 +
test cl 10h +
jz loc_10175A7  +
or eax 3 +
test cl 2 +
jz loc_10175AF  +
or eax 10h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov al [ebp+arg_0] +
test al 1 +
jz loc_10175C9  +
xor eax eax +
inc eax  +
jmp loc_10175DE  +
test al 2 +
jz loc_10175D2  +
push 2  +
pop eax  +
jmp loc_10175DE  +
and al 4 +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 3 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+arg_0] +
push [ebp+arg_8]  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+var_10] +
push eax  +
call ds:RtlInitAnsiString  +
push esi  +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlInitUnicodeString  +
mov eax [ebp+arg_4] +
add eax eax +
mov word ptr [ebp+var_8+2] ax +
push 0  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlOemStringToUnicodeString  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
call sub_101777A  +
mov esi eax +
test esi esi +
jnz loc_1017754  +
push 8  +
pop eax  +
jmp loc_1017770  +
mov eax [ebp+arg_8] +
lea ecx [eax-1] +
push ecx  +
push esi  +
push eax  +
push [ebp+arg_0]  +
call wcsncpy_s  +
add esp 10h +
push esi  +
call NetApiBufferFree  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call ds:RtlInitString  +
mov eax ds:NlsMbOemCodePageTag +
cmp byte ptr [eax] 0 +
jz loc_10177A5  +
lea eax [ebp+var_10] +
push eax  +
call ds:RtlxOemStringToUnicodeSize  +
jmp loc_10177AD  +
movzx eax word ptr [ebp+var_10] +
lea eax [eax+eax+2] +
cmp eax 0FFFFh +
jbe loc_10177B8  +
xor eax eax +
jmp locret_10177ED  +
mov [ebp+var_6] ax +
lea ecx [ebp+Buffer] +
movzx eax ax +
push ecx  +
push eax  +
call NetApiBufferAllocate  +
test eax eax +
jnz loc_10177B4  +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp-8] +
push eax  +
call ds:RtlOemStringToUnicodeString  +
test eax eax +
jge loc_10177EA  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
jmp loc_10177B4  +
mov eax [ebp+Buffer] +
leave   +
retn 4  +
***
mov al 8Ch +
add [eax] eax +
retn 18Ch  +
***
