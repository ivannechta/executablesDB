jmp loc_500088  +
push eax  +
add al ch +
cmp [ebp-2F5C0010h] ecx +
push 5C70050h  +
aam  68h +
push eax  +
add [eax-17FFFFFCh] dh +
or [ebx] edx +
jmp ds:dword_50603C[ebx]  +
***
call sub_408DE4  +
retn   +
***
sub ds:dword_508B58 1 +
jnb locret_5000C0  +
xor eax eax +
mov ds:dword_508B5C eax +
retn   +
***
mov ecx 6 +
jmp loc_500310  +
***
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
add [ebx+5] esi +
call InitCommonControls  +
retn   +
***
xor eax eax +
push ebp  +
push offset loc_5005F3  +
push dword ptr fs:[eax]  +
mov fs:[eax] esp +
sub ds:dword_508CBC 1 +
jnb loc_5005E5  +
mov eax offset dword_414A10 +
call sub_404ED4  +
mov eax offset dword_414B88 +
call sub_404F18  +
cmp ds:byte_508B4D 0 +
jz loc_5005C2  +
mov eax offset off_50297C +
mov edx offset a0x_0 +
call sub_406448  +
call sub_412160  +
call sub_41240C  +
mov eax offset sub_41349C +
call sub_4086AC  +
call sub_4124AC  +
call sub_4136B4  +
call sub_412F90  +
xor eax eax +
pop edx  +
pop ecx  +
pop ecx  +
mov fs:[eax] edx +
push offset loc_5005FA  +
retn   +
jmp sub_404994  +
jmp locret_5005F2  +
pop ebp  +
retn   +
***
add [ebx+0Eh] esi +
call sub_414F1C  +
test al al +
jz locret_500627  +
call sub_414F5C  +
retn   +
***
sub ds:dword_50AE18 1 +
jnb locret_500636  +
call sub_415600  +
retn   +
***
xor eax eax +
push ebp  +
push offset loc_5006D9  +
push dword ptr fs:[eax]  +
mov fs:[eax] esp +
sub ds:dword_50AE3C 1 +
jnb loc_5006CB  +
mov eax offset unk_50AE1C +
call sub_41E798  +
mov eax offset sub_416638 +
mov ds:dword_50AE2C eax +
mov eax offset sub_416188 +
mov ds:dword_50AE30 eax +
mov edx offset sub_416098 +
mov ds:dword_50AE34 edx +
mov ds:dword_50AE38 eax +
mov eax offset sub_416950 +
mov edx off_504D78 +
mov [edx] eax +
mov eax offset sub_41E250 +
mov edx off_5049F0 +
mov [edx] eax +
mov eax offset sub_416CA4 +
mov edx off_504E40 +
mov [edx] eax +
mov eax offset sub_41A3CC +
mov edx off_504FEC +
mov [edx] eax +
mov eax offset sub_41AC80 +
mov edx off_504E68 +
mov [edx] eax +
push offset CriticalSection  +
call InitializeCriticalSection  +
xor eax eax +
pop edx  +
pop ecx  +
pop ecx  +
mov fs:[eax] edx +
push offset loc_5006E0  +
retn   +
jmp sub_404994  +
jmp locret_5006D8  +
pop ebp  +
retn   +
***
xor eax eax +
push ebp  +
push offset loc_500775  +
push dword ptr fs:[eax]  +
mov fs:[eax] esp +
sub ds:dword_50AE6C 1 +
jnb loc_500767  +
call sub_42A24C  +
mov eax offset loc_42BCD8 +
call sub_40869C  +
mov dl 1 +
mov eax ds:off_40BA2C +
call sub_413898  +
mov edx eax +
test edx edx +
jz loc_50072A  +
sub edx 0FFFFFFD4h +
mov eax offset dword_50AE60 +
call sub_408824  +
mov dl 1 +
mov eax ds:off_4220F8 +
call sub_422610  +
mov ds:dword_50AE74 eax +
mov dl 1 +
mov eax ds:off_420E34 +
call sub_423814  +
mov ds:dword_50AE70 eax +
mov dl 1 +
mov eax ds:off_420E34 +
call sub_423814  +
mov ds:dword_50AE7C eax +
xor eax eax +
pop edx  +
pop ecx  +
pop ecx  +
mov fs:[eax] edx +
push offset loc_50077C  +
retn   +
jmp sub_404994  +
jmp locret_500774  +
pop ebp  +
retn   +
***
sub ds:dword_50AEA8 1 +
retn   +
***
sub ds:dword_50AED0 1 +
jnb locret_500796  +
call sub_42E13C  +
retn   +
***
sub ds:dword_50AEE4 1 +
retn   +
***
sub ds:dword_50AEE8 1 +
retn   +
***
sub ds:dword_50AF4C 1 +
jnb locret_5008B2  +
call sub_4383D8  +
retn   +
***
sub ds:dword_50B020 1 +
jnb locret_5008CE  +
mov dl 1 +
mov eax ds:dword_437AF8+8 +
call sub_437FB0  +
mov ds:dword_50B02C eax +
retn   +
***
sub ds:dword_50B040 1 +
retn   +
***
sub ds:dword_50B050 1 +
jnb locret_50095D  +
call sub_408F00  +
xor edx edx +
mov [eax+18h] edx +
call sub_408F00  +
xor edx edx +
mov [eax+1Ch] edx +
call sub_408F00  +
xor edx edx +
mov [eax+20h] edx +
call sub_408F00  +
xor edx edx +
mov [eax+24h] edx +
call sub_408F00  +
xor edx edx +
mov [eax+28h] edx +
call sub_408F00  +
xor edx edx +
mov [eax+2Ch] edx +
call sub_408F00  +
xor edx edx +
mov [eax+30h] edx +
call sub_408F00  +
xor edx edx +
mov [eax+34h] edx +
call sub_408F00  +
xor edx edx +
mov [eax+38h] edx +
xor eax eax +
mov ds:dword_50B05C eax +
retn   +
***
sub ds:dword_50B060 1 +
retn   +
***
sub ds:dword_50B068 1 +
jnb locret_500998  +
push offset aDelphiPicture  +
call RegisterClipboardFormatW  +
mov ds:word_50B064 ax +
push offset aDelphiComponen  +
call RegisterClipboardFormatW  +
mov ds:word_50B066 ax +
xor eax eax +
mov ds:dword_50B06C eax +
retn   +
***
sub ds:dword_50B074 1 +
jnb locret_500A12  +
mov eax ds:off_4558DC +
call sub_422D64  +
mov edx ds:off_4558DC +
mov eax ds:dword_449650+10h +
call sub_422DB0  +
push offset aTaskbarcreated  +
call RegisterWindowMessageW  +
mov ds:dword_50B070 eax +
retn   +
***
sub ds:dword_50B078 1 +
jnb locret_500A6C  +
mov dl 1 +
mov eax ds:off_420DC4 +
call sub_404068  +
mov ds:dword_50B07C eax +
mov edx offset off_5038FC +
mov eax ds:dword_50B07C +
call sub_4233BC  +
mov edx offset off_5038F4 +
mov eax ds:dword_50B07C +
call sub_4233BC  +
retn   +
***
sub ds:dword_50B0B4 1 +
jnb locret_500ABE  +
call sub_44BE74  +
retn   +
***
xor eax eax +
sub ds:dword_50B164 1 +
retn   +
***
sub ds:dword_50B178 1 +
jnb locret_500C01  +
mov edx ds:off_4558DC +
mov eax ds:off_46D350 +
call sub_422DB0  +
mov edx ds:off_4558DC +
mov eax ds:off_46D220 +
call sub_422DB0  +
retn   +
***
sub ds:dword_50B184 1 +
jnb locret_500C3C  +
mov eax offset dword_47E224 +
call sub_404F18  +
call sub_47DE8C  +
push offset aTaskbarcreat_0  +
call RegisterWindowMessageW  +
mov ds:dword_50B188 eax +
mov eax offset sub_470E58 +
call sub_423028  +
xor eax eax +
mov ds:uIDEvent eax +
retn   +
***
sub ds:dword_50B1C0 1 +
jnb locret_500C73  +
mov eax offset dword_481658 +
call sub_404F18  +
retn   +
***
sub ds:dword_50B1E4 1 +
retn   +
***
sub ds:dword_50B1E8 1 +
retn   +
***
sub ds:dword_50B2CC 1 +
jnb locret_500D2A  +
mov eax off_5049BC +
cmp byte ptr [eax] 0 +
jnz loc_500D06  +
mov eax off_504D0C +
mov eax [eax] +
mov ds:dword_50B2E8 eax +
mov eax off_504D0C +
mov dword ptr [eax] offset sub_4A9624 +
call sub_4A95E8  +
call sub_4A4EC4  +
push offset aNotifywinevent  +
push offset aUser32_dll_9  +
call GetModuleHandleW_1  +
push eax  +
call sub_409620  +
mov ds:dword_50B2D4 eax +
retn   +
***
sub ds:dword_50B2F0 1 +
jnb locret_500DB9  +
mov ds:dword_50B2F8 114h +
push offset dword_50B2F8  +
call GetVersionExW  +
test eax eax +
jz locret_500DB9  +
cmp ds:dword_50B2FC 6 +
setnb ds:byte_50B2F5  +
cmp ds:byte_50B2F5 0 +
jnz loc_500DB2  +
cmp ds:dword_50B2FC 5 +
jnz loc_500DAE  +
cmp ds:dword_50B300 1 +
jnb loc_500DB2  +
xor eax eax +
jmp loc_500DB4  +
mov al 1 +
mov ds:byte_50B2F4 al +
retn   +
***
xor eax eax +
push ebp  +
push offset loc_500DEA  +
push dword ptr fs:[eax]  +
mov fs:[eax] esp +
sub ds:dword_50BC00 1 +
xor eax eax +
pop edx  +
pop ecx  +
pop ecx  +
mov fs:[eax] edx +
push offset loc_500DF1  +
retn   +
jmp sub_404994  +
jmp locret_500DE9  +
pop ebp  +
retn   +
***
push 0  +
jmp loc_500EB0  +
***
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
jmp loc_500FF5  +
***
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
xor eax eax +
push ebp  +
push offset loc_5010A1  +
push dword ptr fs:[eax]  +
mov fs:[eax] esp +
sub ds:dword_50BC40 1 +
jnb loc_501093  +
call sub_4B2824  +
xor eax eax +
pop edx  +
pop ecx  +
pop ecx  +
mov fs:[eax] edx +
push offset loc_5010A8  +
retn   +
jmp sub_404994  +
jmp locret_5010A0  +
pop ebp  +
retn   +
***
xor eax eax +
push ebp  +
push offset loc_5010E5  +
push dword ptr fs:[eax]  +
mov fs:[eax] esp +
sub ds:dword_50BC54 1 +
jnb loc_5010D7  +
mov dl 1 +
mov eax ds:off_4B3418 +
call sub_404068  +
mov ds:dword_50BC58 eax +
xor eax eax +
pop edx  +
pop ecx  +
pop ecx  +
mov fs:[eax] edx +
push offset loc_5010EC  +
retn   +
jmp sub_404994  +
jmp locret_5010E4  +
pop ebp  +
retn   +
***
push 0  +
jmp loc_501166  +
***
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
push 0  +
jmp loc_50123C  +
***
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
add [ebx+0Ah] esi +
mov eax offset dword_4CC130 +
call sub_404F18  +
retn   +
***
sub ds:dword_50BCF8 1 +
retn   +
***
sub ds:dword_50BCFC 1 +
retn   +
***
jnb loc_50130E  +
push offset aKernel32_dll_8  +
call GetModuleHandleW_1  +
mov ebx eax +
push offset aVersetconditio  +
push ebx  +
call sub_409620  +
mov ds:dword_50BD24 eax +
push offset aVerifyversioni  +
push ebx  +
call sub_409620  +
mov ds:dword_50BD28 eax +
pop ebx  +
retn   +
***
push 0  +
jmp loc_50149A  +
***
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
add ebx eax +
sub ds:dword_50C158 1 +
jnb locret_50153A  +
mov eax off_504DD4 +
mov dword ptr [eax] offset sub_4FAD5C +
mov eax off_504A7C +
mov dword ptr [eax] offset sub_4FAD70 +
push offset aQuerycancelaut  +
call RegisterWindowMessageW  +
mov ds:dword_50C15C eax +
retn   +
***
sub ds:dword_50C160 1 +
retn   +
***
jmp sub_4046E0  +
***
jmp sub_4046E0  +
***
jmp sub_4046E0  +
***
jmp sub_4046E0  +
***
jmp sub_4046E0  +
***
