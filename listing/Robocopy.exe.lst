mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi] +
push 1  +
push 0Ch  +
push esi  +
call ?AfxIsValidAddress@@YGHPBXIH@Z  +
test eax eax +
jnz loc_1003194  +
call MFC42u_6928  +
mov eax [esi] +
mov [edi] eax +
pop edi  +
lea eax [esi+8] +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [ecx] +
mov cx [eax] +
cmp cx [edx] +
jnz loc_10031ED  +
test cx cx +
jz loc_10031E9  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_10031ED  +
add eax 4 +
add edx 4 +
test cx cx +
jnz loc_10031C7  +
xor eax eax +
jmp loc_10031F2  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1003216  +
cmp [esi] ax +
jz loc_1003212  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_1003208  +
test edx edx +
jnz loc_100321B  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_100322C  +
test eax eax +
jl loc_1003229  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_1003245  +
cmp edx [ebp+arg_4] +
jbe loc_100324A  +
mov eax 80070057h +
test eax eax +
jl loc_1003258  +
mov eax [ebp+arg_0] +
call sub_10031FB  +
jmp loc_100325B  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov eax [ecx+54h] +
lea edx [eax-1] +
mov [ecx+54h] edx +
cmp eax 1 +
jnz locret_100327A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
retn   +
***
jmp loc_1003299  +
mov ecx offset unk_1067EF8 +
call ?RemoveHead@CObList@@QAEPAVCObject@@XZ  +
test eax eax +
jz loc_1003299  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx+4]  +
cmp dword_1067F04 0 +
jnz loc_1003282  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+lpString1] +
movzx eax word ptr [ebx] +
push esi  +
push edi  +
test ax ax +
jz loc_10033D6  +
mov esi ds:CompareStringW +
xor edi edi +
inc edi  +
cmp ax 20h +
jz loc_10033D6  +
cmp ax 9 +
jz loc_10033D6  +
push edi  +
push offset String2  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10032FA  +
or [ebp+var_4] edi +
jmp loc_10033C8  +
push edi  +
push offset word_10013F8  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1003314  +
or [ebp+var_4] 20h +
jmp loc_10033C8  +
push edi  +
push offset word_10013F4  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100332E  +
or [ebp+var_4] 4 +
jmp loc_10033C8  +
push edi  +
push offset word_10013F0  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1003348  +
or [ebp+var_4] 2 +
jmp loc_10033C8  +
push edi  +
push offset word_10013EC  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1003362  +
or [ebp+var_4] 800h +
jmp loc_10033C8  +
push edi  +
push offset word_10013E8  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100337C  +
or [ebp+var_4] 2000h +
jmp loc_10033C8  +
push edi  +
push offset word_10013E4  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1003396  +
or [ebp+var_4] 4000h +
jmp loc_10033C8  +
push edi  +
push offset word_10013E0  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10033B0  +
or [ebp+var_4] 100h +
jmp loc_10033C8  +
push edi  +
push offset word_10013DC  +
push edi  +
push ebx  +
push edi  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10033E0  +
or [ebp+var_4] 1000h +
inc ebx  +
inc ebx  +
movzx eax word ptr [ebx] +
test ax ax +
jnz loc_10032CD  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
or eax 0FFFFFFFFh +
jmp loc_10033D9  +
***
call __EH_prolog3  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-18h] ecx +
xor ebx ebx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_1003415  +
call sub_100CEE7  +
mov edi eax +
jmp loc_1003417  +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp edi ebx +
jnz loc_1003426  +
xor eax eax +
jmp loc_10034E0  +
push dword ptr [ebp+8]  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
lea eax [ebp+8] +
push eax  +
mov ecx edi +
mov dword ptr [ebp-4] 1 +
call sub_100D263  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
push 8  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+8] eax +
mov dword ptr [ebp-4] 2 +
cmp eax ebx +
jz loc_100346E  +
mov ecx eax +
call sub_1010DCA  +
mov ebx eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-18h] +
push eax  +
mov ecx edi +
call sub_100D2E3  +
mov esi eax +
lea eax [ebp-14h] +
push eax  +
mov ecx edi +
mov dword ptr [ebp-4] 3 +
call sub_100D2E3  +
mov ecx [esi] +
mov edx [ecx-8] +
dec edx  +
push edx  +
lea ecx [ebp-10h] +
push ecx  +
mov ecx eax +
mov byte ptr [ebp-4] 4 +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
mov ecx ebx +
mov byte ptr [ebp-4] 5 +
call sub_1010DAB  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
mov ecx edi +
call sub_1003265  +
mov eax ebx +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpString] +
push esi  +
call ds:lstrlenW  +
xor ecx ecx +
cmp eax 4 +
jl loc_100352E  +
cmp word ptr [esi] 5Ch +
jnz loc_100352E  +
cmp word ptr [esi+2] 5Ch +
jnz loc_100352E  +
cmp word ptr [esi+4] 3Fh +
jnz loc_100352E  +
push 4  +
pop ecx  +
jmp loc_100352E  +
movzx edx word ptr [esi+ecx*2] +
cmp dx 2Ah +
jz loc_1003539  +
cmp dx 3Fh +
jz loc_1003539  +
inc ecx  +
cmp ecx eax +
jl loc_100351D  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1003534  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpString] +
push esi  +
call ds:lstrlenW  +
xor ecx ecx +
test eax eax +
jle loc_100356E  +
movzx edx word ptr [esi+ecx*2] +
cmp dx 5Ch +
jz loc_1003575  +
cmp dx 2Fh +
jz loc_1003575  +
inc ecx  +
cmp ecx eax +
jl loc_1003559  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1003570  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
cdq   +
push 64h  +
pop ecx  +
idiv  ecx +
mov esi edx +
cdq   +
idiv  ecx +
mov ecx edx +
mov edi eax +
lea eax [ecx-1] +
cmp eax 0Bh +
ja loc_1003638  +
cmp esi 1 +
jl loc_1003638  +
cmp esi dword_1017000[ecx*4] +
jg loc_1003638  +
cmp edi 76Ch +
jl loc_1003638  +
mov eax edi +
cdq   +
mov ebx 190h +
idiv  ebx +
test edx edx +
jz loc_10035F6  +
mov eax edi +
push 64h  +
cdq   +
pop ebx  +
idiv  ebx +
test edx edx +
jz loc_10035EC  +
mov eax edi +
and eax 80000003h +
jns loc_10035EA  +
dec eax  +
or eax 0FFFFFFFCh +
inc eax  +
jz loc_10035F6  +
cmp ecx 2 +
jnz loc_10035F6  +
cmp esi 1Ch +
jg loc_1003638  +
xor eax eax +
mov [ebp+SystemTime.wDayOfWeek] ax +
mov [ebp+SystemTime.wHour] ax +
mov [ebp+SystemTime.wMinute] ax +
mov [ebp+SystemTime.wSecond] ax +
mov [ebp+SystemTime.wMilliseconds] ax +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
mov [ebp+SystemTime.wYear] di +
mov [ebp+SystemTime.wMonth] cx +
mov [ebp+SystemTime.wDay] si +
call ds:SystemTimeToFileTime  +
push [ebp+lpFileTime]  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:LocalFileTimeToFileTime  +
xor eax eax +
inc eax  +
jmp loc_100363A  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetSystemTime  +
mov esi [ebp+lpFileTime] +
push esi  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:SystemTimeToFileTime  +
cmp dword_1067C5C 0 +
mov edi ds:FileTimeToSystemTime +
mov ebx ds:wprintf +
jz loc_10036A8  +
lea eax [ebp+SystemTime] +
push eax  +
push esi  +
call edi  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
push offset aNow04d02d02d02  +
call ebx  +
add esp 18h +
push 0FFFFFF36h  +
push 0D5964000h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call __allmul  +
add [esi] eax +
adc [esi+4] edx +
cmp dword_1067C5C 0 +
jz loc_10036F5  +
lea eax [ebp+SystemTime] +
push eax  +
push esi  +
call edi  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
push offset aThen04d02d02d0  +
call ebx  +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
xor edi edi +
mov [edx] edi +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_100375F  +
cmp cx 20h +
jz loc_1003748  +
cmp cx 9 +
jz loc_1003748  +
movzx ecx cx +
lea ebx [ecx-30h] +
cmp bx 9 +
ja loc_1003748  +
mov ebx [edx] +
imul ebx ebx +
inc eax  +
movzx ecx cx +
inc eax  +
inc edi  +
cmp edi 9 +
lea ecx [ebx+ecx-30h] +
mov [edx] ecx +
jl loc_1003712  +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_100375F  +
cmp cx 20h +
jz loc_100375F  +
cmp cx 9 +
jz loc_100375F  +
or dword ptr [edx] 0FFFFFFFFh +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov [ebp+var_4] eax +
mov [esi] eax +
mov [esi+4] eax +
movzx eax word ptr [ebx] +
test ax ax +
jz loc_10037E8  +
cmp ax 20h +
jz loc_10037CD  +
cmp ax 9 +
jz loc_10037CD  +
movzx edi ax +
lea eax [edi-30h] +
cmp ax 9 +
ja loc_10037CD  +
push 0  +
push 0Ah  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call __allmul  +
mov [esi] eax +
movzx eax di +
sub eax 30h +
mov [esi+4] edx +
cdq   +
add [esi] eax +
adc [esi+4] edx +
inc ebx  +
inc ebx  +
inc [ebp+var_4]  +
cmp [ebp+var_4] 14h +
jl loc_1003783  +
movzx eax word ptr [ebx] +
test ax ax +
jz loc_10037E8  +
cmp ax 20h +
jz loc_10037E8  +
cmp ax 9 +
jz loc_10037E8  +
or dword ptr [esi] 0FFFFFFFFh +
or dword ptr [esi+4] 0FFFFFFFFh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
lea esi [eax+ecx*2] +
xor edi edi +
cmp [esi] di +
jnz loc_1003821  +
xor eax eax +
jmp loc_100390E  +
push ebx  +
lea eax [ebp+FilePart] +
push eax  +
mov ebx offset Buffer +
push ebx  +
push 104h  +
push esi  +
call ds:GetFullPathNameW  +
test eax eax +
jz loc_1003901  +
cmp Buffer di +
jz loc_1003901  +
mov esi offset aWt +
lea edi [ebp+var_C] +
movs   +
movs   +
xor edi edi +
inc edi  +
cmp [ebp+arg_8] edi +
jnz loc_1003867  +
push 61h  +
pop eax  +
mov [ebp+var_C] ax +
cmp [ebp+arg_C] edi +
jnz loc_1003873  +
push 62h  +
pop eax  +
mov [ebp-0Ah] ax +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call ds:_wfopen  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_100388F  +
push eax  +
push ebx  +
push 23A0h  +
jmp loc_1003908  +
push ebx  +
push 5Bh  +
call sub_100A77B  +
push ebx  +
mov ecx offset dword_1067E94 +
mov dword_10277C8 esi +
call ??4CString@@QAEABV0@PBG@Z  +
xor eax eax +
cmp [ebp+arg_8] edi +
setz al  +
mov dword_1067C30 eax +
xor eax eax +
cmp [ebp+arg_C] edi +
setz al  +
mov dword_1067C34 eax +
test eax eax +
jz loc_10038FD  +
push 8000h  +
push dword_10277C8  +
call ds:_fileno  +
pop ecx  +
push eax  +
call ds:_setmode  +
push 0FEh  +
push 0FFh  +
push offset aCC  +
push dword_10277C8  +
call ds:fprintf  +
add esp 18h +
mov eax edi +
jmp loc_100390D  +
push edi  +
push esi  +
push 23A1h  +
call sub_100B87C  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1011DD7  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-10h] ebx +
cmp dword_1067D0C ebx +
jz loc_100397B  +
mov esi [ebp+8] +
push esi  +
call sub_10034ED  +
test eax eax +
jz loc_100395A  +
push esi  +
call sub_1003543  +
test eax eax +
jz loc_100395A  +
xor eax eax +
jmp loc_1003B7A  +
push esi  +
call sub_10033EA  +
push esi  +
mov edi eax +
call sub_10034ED  +
push edi  +
test eax eax +
jz loc_1003974  +
mov ecx offset unk_1067E18 +
jmp loc_10039B7  +
mov ecx offset unk_1067DC8 +
jmp loc_10039B7  +
cmp dword_1067D10 ebx +
jz loc_10039C1  +
mov esi [ebp+8] +
push esi  +
call sub_10034ED  +
test eax eax +
jz loc_100399A  +
push esi  +
call sub_1003543  +
test eax eax +
jnz loc_1003953  +
push esi  +
call sub_10033EA  +
push esi  +
mov edi eax +
call sub_10034ED  +
push edi  +
mov ecx offset unk_1067E6C +
test eax eax +
jnz loc_10039B7  +
mov ecx offset unk_1067E34 +
call ?AddTail@CObList@@QAEPAU__POSITION@@PAVCObject@@@Z  +
jmp loc_1003B77  +
mov edi [ebp+8] +
cmp dword_1067D08 ebx +
jnz loc_10039FF  +
cmp dword_1067D00 ebx +
jnz loc_10039FF  +
mov ecx dword_1067C20 +
lea eax [ebp-18h] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
mov dword ptr [ebp-10h] 1 +
cmp [eax-8] ebx +
jnz loc_10039FF  +
push edi  +
call sub_10034ED  +
mov byte ptr [ebp+0Bh] 1 +
test eax eax +
jz loc_1003A02  +
mov [ebp+0Bh] bl +
test byte ptr [ebp-10h] 1 +
jz loc_1003A14  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
cmp [ebp+0Bh] bl +
jz loc_1003A7A  +
lea eax [ebp-1Ch] +
push eax  +
mov esi offset word_1017398 +
push esi  +
push 7FFFh  +
push edi  +
call ds:GetFullPathNameW  +
test eax eax +
jnz loc_1003A48  +
push dword_1067C20  +
push 2399h  +
call sub_100B931  +
jmp loc_1003B7A  +
push esi  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
mov ecx dword_1067C20 +
lea eax [ebp+8] +
push eax  +
mov [ebp-4] ebx +
call sub_100D263  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
mov ecx dword_1067C20 +
jmp loc_1003B23  +
cmp dword_1067D08 ebx +
jnz loc_1003AB2  +
cmp dword_1067D04 ebx +
jnz loc_1003AB2  +
mov ecx dword_1027398 +
lea eax [ebp-18h] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
or dword ptr [ebp-10h] 2 +
cmp [eax-8] ebx +
jnz loc_1003AB2  +
push edi  +
call sub_10034ED  +
mov byte ptr [ebp+0Bh] 1 +
test eax eax +
jz loc_1003AB5  +
mov [ebp+0Bh] bl +
test byte ptr [ebp-10h] 2 +
jz loc_1003AC3  +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
cmp [ebp+0Bh] bl +
jz loc_1003B2A  +
lea eax [ebp-1Ch] +
push eax  +
mov esi offset word_1017398 +
push esi  +
push 7FFFh  +
push edi  +
call ds:GetFullPathNameW  +
test eax eax +
jnz loc_1003AF2  +
push dword_1027398  +
push 239Ah  +
jmp loc_1003A3E  +
push esi  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@PBG@Z  +
mov ecx dword_1027398 +
lea eax [ebp-14h] +
push eax  +
mov dword ptr [ebp-4] 1 +
call sub_100D263  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov ecx dword_1027398 +
call sub_100D575  +
jmp loc_1003B77  +
push edi  +
call sub_1003543  +
test eax eax +
jnz loc_1003953  +
cmp dword_1067C58 ebx +
jnz loc_1003B77  +
push edi  +
call sub_10033EA  +
push eax  +
mov ecx offset unk_1067EF8 +
call ?AddTail@CObList@@QAEPAU__POSITION@@PAVCObject@@@Z  +
push 0FFFFFFFFh  +
push offset a_  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jnz loc_1003B77  +
mov dword_1067C58 1 +
call sub_1003280  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push offset dword_10014BC  +
mov ecx esi +
mov [ebp+FilePart] ebx +
call ??4CString@@QAEABV0@PBG@Z  +
push ebx  +
call sub_1003543  +
test eax eax +
jnz loc_1003C26  +
mov edi offset unk_1067DE4 +
push offset asc_10014B4  +
mov ecx edi +
call sub_10031BD  +
test eax eax +
jz loc_1003C26  +
push edi  +
mov ecx esi +
call ??4CString@@QAEABV0@ABV0@@Z  +
push 1  +
lea eax [ebp+var_218] +
push eax  +
mov ecx esi +
call ?Right@CString@@QBE?AV1@H@Z  +
mov edi offset asc_10014B0 +
push edi  +
mov ecx eax +
call sub_10031BD  +
test eax eax +
lea ecx [ebp+var_218] +
setnz bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1003C17  +
push edi  +
mov ecx esi +
call ??YCString@@QAEABV0@PBG@Z  +
push [ebp+FilePart]  +
mov ecx esi +
call ??YCString@@QAEABV0@PBG@Z  +
jmp loc_1003C4E  +
lea eax [ebp+FilePart] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 105h  +
push ebx  +
call ds:GetFullPathNameW  +
lea eax [ebp+Buffer] +
push eax  +
mov ecx esi +
call ??4CString@@QAEABV0@PBG@Z  +
mov ecx esi +
call ?MakeUpper@CString@@QAEXXZ  +
push 4  +
lea eax [ebp+FilePart] +
push eax  +
mov ecx esi +
call ?Right@CString@@QBE?AV1@H@Z  +
mov edi offset a_rcj +
push edi  +
mov ecx eax +
call sub_10031BD  +
test eax eax +
lea ecx [ebp+FilePart] +
setnz bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1003C8E  +
push edi  +
mov ecx esi +
call ??YCString@@QAEABV0@PBG@Z  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1011DD7  +
leave   +
retn 8  +
***
call __EH_prolog3_GS  +
push offset aSoftwareMicros  +
push 80000001h  +
lea ecx [ebp-640h] +
call sub_1010A2B  +
push 1  +
mov edi offset asc_10014B4 +
push edi  +
mov esi 104h +
push esi  +
lea eax [ebp-21Ch] +
push eax  +
xor ebx ebx +
push offset aJobdir  +
lea ecx [ebp-640h] +
mov [ebp-4] ebx +
call sub_1010C75  +
push 0FFFFFFFFh  +
push edi  +
push 0FFFFFFFFh  +
lea eax [ebp-21Ch] +
push eax  +
push ebx  +
push 7Fh  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jz loc_1003DC8  +
push esi  +
lea eax [ebp-634h] +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
call ds:ExpandEnvironmentStringsW  +
lea eax [ebp-644h] +
push eax  +
lea eax [ebp-428h] +
push eax  +
push esi  +
lea eax [ebp-634h] +
push eax  +
call ds:GetFullPathNameW  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-638h] ecx +
mov byte ptr [ebp-4] 1 +
cmp ecx ebx +
jz loc_1003D61  +
call sub_100CEE7  +
mov esi eax +
jmp loc_1003D63  +
xor esi esi +
mov [ebp-4] bl +
cmp esi ebx +
jz loc_1003DD3  +
lea eax [ebp-428h] +
push eax  +
lea ecx [ebp-638h] +
call ??0CString@@QAE@PBG@Z  +
lea eax [ebp-638h] +
push eax  +
mov ecx esi +
mov byte ptr [ebp-4] 2 +
call sub_100D263  +
lea ecx [ebp-638h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov ecx esi +
call sub_100D575  +
push 0FFFFFFFFh  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_100DC87  +
lea eax [ebp-428h] +
push eax  +
mov ecx offset unk_1067DE4 +
call ??4CString@@QAEABV0@PBG@Z  +
mov ecx esi +
call sub_1003265  +
jmp loc_1003DD3  +
push edi  +
mov ecx offset unk_1067DE4 +
call ??4CString@@QAEABV0@PBG@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-640h] +
call sub_1010A70  +
call sub_1011EF1  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 104h  +
mov [ebp+var_210] eax +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
cmp [ebp+Buffer] 0 +
push 2  +
lea ebx [ebp+Buffer] +
pop ecx  +
jz loc_1003E53  +
movzx eax [ebp+Buffer] +
cmp ax 2Fh +
jz loc_1003E53  +
add ebx ecx +
movzx eax word ptr [ebx] +
test ax ax +
jnz loc_1003E43  +
movzx eax word ptr [ebx] +
mov esi ebx +
test ax ax +
jz loc_1003E70  +
movzx eax ax +
cmp ax 3Ah +
jz loc_1003E70  +
add esi ecx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1003E60  +
add esi ecx +
xor eax eax +
mov [esi] ax +
jmp loc_1003E7F  +
cmp ax 3Ah +
jz loc_1003E89  +
add esi ecx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1003E79  +
push dword_1017188  +
mov edi ds:fputws +
push offset asc_100151C  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jge loc_1003EA6  +
xor eax eax +
jmp loc_1003F17  +
push dword_1017188  +
push ebx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_1003EA2  +
push dword_1017188  +
push [ebp+var_210]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_1003EA2  +
push dword_1017188  +
push offset asc_100151C  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_1003EA2  +
push dword_1017188  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_1003EA2  +
push esi  +
call ds:lstrlenW  +
cmp word ptr [esi+eax*2-2] 0Ah +
jnz loc_1003EFF  +
xor eax eax +
inc eax  +
jmp loc_1003F17  +
push dword_1017188  +
push offset asc_1001518  +
call edi  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1011DD7  +
leave   +
retn 8  +
***
call ds:__iob_func  +
add eax 20h +
cmp dword_10277C8 eax +
jnz loc_1003F42  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
xor ecx ecx +
cmp dword_1067C34 eax +
jz loc_1003F5F  +
cmp dword_1067C30 eax +
setnz cl  +
add ecx 650h +
jmp loc_1003F6E  +
cmp dword_1067C30 eax +
setnz cl  +
add ecx 64Eh +
mov eax ecx +
push eax  +
push dword_1067E94  +
call sub_1003DED  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword_1017188  +
mov esi ds:fputws +
push offset asc_1001520  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jge loc_1003FA5  +
xor eax eax +
jmp loc_1003FCE  +
push dword_1017188  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_1003FA1  +
push dword_1017188  +
push offset asc_1001518  +
call esi  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jnz loc_1003FFD  +
xor eax eax +
inc eax  +
jmp loc_10040D7  +
push ebx  +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
lea ebx [ebp+Buffer] +
cmp [ebp+Buffer] si +
jz loc_100403F  +
movzx eax [ebp+Buffer] +
cmp ax 2Fh +
jz loc_100403F  +
inc ebx  +
inc ebx  +
movzx eax word ptr [ebx] +
cmp ax si +
jnz loc_100402F  +
push edi  +
mov edi ebx +
cmp [ebx] si +
jz loc_1004054  +
cmp word ptr [edi] 20h +
jz loc_1004054  +
inc edi  +
inc edi  +
cmp [edi] si +
jnz loc_1004047  +
push dword_1017188  +
mov esi ds:fputws +
xor eax eax +
mov [edi] ax +
inc edi  +
push offset asc_100151C  +
inc edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_10040A5  +
push dword_1017188  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_10040A5  +
push dword_1017188  +
push offset asc_1001520  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_10040A5  +
push dword_1017188  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jge loc_10040A9  +
xor eax eax +
jmp loc_10040D5  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jnz loc_10040BD  +
xor eax eax +
inc eax  +
jmp loc_10040D5  +
push dword_1017188  +
push offset asc_1001518  +
call esi  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1011DD7  +
leave   +
retn 8  +
***
cmp dword_1067CB8 0 +
jz loc_100410E  +
push offset aDcopyTCopyDire  +
push dword_1017188  +
call ds:fwprintf  +
pop ecx  +
pop ecx  +
test eax eax +
jge loc_100410E  +
xor eax eax +
retn   +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 100h  +
lea eax [ebp+String] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
push dword_1017188  +
mov esi ds:fputws +
lea eax [ebp+String] +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jge loc_1004167  +
xor eax eax +
jmp loc_100419C  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
cmp [ebp+eax*2+var_206] 0Ah +
jnz loc_1004184  +
xor eax eax +
inc eax  +
jmp loc_100419C  +
push dword_1017188  +
push offset asc_1001518  +
call esi  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1011DD7  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
or eax [ebp+arg_4] +
jnz loc_10041D8  +
cmp [ebp+arg_C] eax +
jnz loc_10041D8  +
inc eax  +
jmp loc_10042CD  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
cmp [ebp+Buffer] 0 +
push 2  +
lea ecx [ebp+Buffer] +
pop edx  +
jz loc_100421D  +
movzx eax [ebp+Buffer] +
cmp ax 2Fh +
jz loc_100421D  +
add ecx edx +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_100420D  +
movzx eax word ptr [ecx] +
push esi  +
mov esi ecx +
test ax ax +
jz loc_100423B  +
movzx eax ax +
cmp ax 3Ah +
jz loc_100423B  +
add esi edx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_100422B  +
add esi edx +
xor eax eax +
mov [esi] ax +
jmp loc_100424A  +
cmp ax 3Ah +
jz loc_1004254  +
add esi edx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1004244  +
push edi  +
push [ebp+arg_4]  +
mov edi ds:fwprintf +
push [ebp+arg_0]  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call edi  +
add esp 14h +
test eax eax +
jl loc_1004297  +
cmp eax 9 +
push esi  +
jl loc_1004283  +
push offset aS  +
jmp loc_1004288  +
push offset aS_0  +
push dword_1017188  +
call edi  +
add esp 0Ch +
test eax eax +
jge loc_100429B  +
xor eax eax +
jmp loc_10042CB  +
push esi  +
call ds:lstrlenW  +
cmp word ptr [esi+eax*2-2] 0Ah +
jnz loc_10042AF  +
xor eax eax +
inc eax  +
jmp loc_10042CB  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1011DD7  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+4] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1004321  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx esi +
call sub_1003175  +
mov eax [eax] +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx eax +
call sub_1010D89  +
push dword ptr [eax]  +
call sub_1003F82  +
lea ecx [ebp+var_4] +
call ??1CString@@QAE@XZ  +
cmp [ebp+arg_0] 0 +
jnz loc_10042F4  +
pop esi  +
leave   +
retn 4  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
lea ecx [ebp-428h] +
call ??0CString@@QAE@XZ  +
push esi  +
lea eax [ebp-428h] +
xor ebx ebx +
push eax  +
mov [ebp-4] ebx +
call sub_1003B87  +
push offset aR_0  +
push dword ptr [ebp-428h]  +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov dword_1017188 eax +
cmp eax ebx +
jnz loc_10043A2  +
push ebx  +
push dword ptr [ebp-428h]  +
push 23A4h  +
call sub_100B87C  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-428h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call sub_1011EF1  +
retn 4  +
lea eax [ebp-428h] +
push eax  +
mov ecx offset lpWideCharStr +
mov dword_1067C28 1 +
call ??4CString@@QAEABV0@ABV0@@Z  +
push lpWideCharStr  +
push 5Dh  +
call sub_100A77B  +
push dword_1017188  +
lea eax [ebp-424h] +
push 208h  +
push eax  +
mov dword_1067D08 ebx +
mov [ebp-42Ch] ebx +
call ds:fgetws  +
add esp 0Ch +
test eax eax +
jz loc_10045C6  +
mov edi ds:CompareStringW +
inc dword ptr [ebp-42Ch]  +
xor edx edx +
cmp [ebp-424h] bx +
jz loc_1004445  +
lea eax [ebp-424h] +
xor ecx ecx +
cmp word ptr [eax] 3Ah +
jnz loc_1004429  +
cmp word ptr [ebp+ecx-422h] 3Ah +
jz loc_100443B  +
inc edx  +
lea ecx [edx+edx] +
lea eax [ebp+ecx-424h] +
cmp [eax] bx +
jnz loc_1004418  +
jmp loc_1004445  +
xor eax eax +
mov [ebp+edx*2-424h] ax +
lea eax [ebp-424h] +
push eax  +
call ds:lstrlenW  +
cmp eax ebx +
jz loc_1004484  +
lea ecx [ebp+eax*2-426h] +
movzx edx word ptr [ecx] +
cmp dx 20h +
jz loc_1004478  +
cmp dx 9 +
jz loc_1004478  +
cmp dx 0Dh +
jz loc_1004478  +
cmp dx 0Ah +
jnz loc_1004484  +
xor edx edx +
mov [ecx] dx +
dec eax  +
dec ecx  +
dec ecx  +
cmp eax ebx +
jnz loc_100445D  +
xor ecx ecx +
cmp [ebp-424h] cx +
jz loc_10044B1  +
lea eax [ebp-424h] +
movzx eax word ptr [eax] +
cmp ax 20h +
jz loc_10044A4  +
cmp ax 9 +
jnz loc_10044B1  +
inc ebx  +
lea eax [ebp+ebx*2-424h] +
cmp [eax] cx +
jnz loc_1004495  +
lea esi [ebp+ebx*2-424h] +
movzx edx word ptr [esi] +
cmp dx cx +
jz loc_10045A1  +
cmp word ptr [esi] 0 +
mov [ebp-430h] ecx +
mov ecx ebx +
jz loc_10044F7  +
mov eax esi +
movzx eax word ptr [eax] +
cmp ax 2Fh +
jz loc_10044E3  +
cmp ax 5Ch +
jnz loc_10044E9  +
inc dword ptr [ebp-430h]  +
inc ecx  +
lea eax [ebp+ecx*2-424h] +
cmp word ptr [eax] 0 +
jnz loc_10044D4  +
cmp dx 2Dh +
jz loc_1004590  +
push 5  +
push offset aLog  +
push 5  +
push esi  +
push 1  +
push 7Fh  +
call edi  +
dec eax  +
dec eax  +
jz loc_1004590  +
push 6  +
push offset aLog_0  +
push 6  +
push esi  +
push 1  +
push 7Fh  +
call edi  +
dec eax  +
dec eax  +
jz loc_1004590  +
push 8  +
push offset aUnilog  +
push 8  +
push esi  +
push 1  +
push 7Fh  +
call edi  +
dec eax  +
dec eax  +
jz loc_1004590  +
push 9  +
push offset aUnilog_0  +
push 9  +
push esi  +
push 1  +
push 7Fh  +
call edi  +
dec eax  +
dec eax  +
jz loc_1004590  +
push 4  +
push offset aSd  +
push 4  +
push esi  +
push 1  +
push 7Fh  +
call edi  +
dec eax  +
dec eax  +
jz loc_1004590  +
push 4  +
push offset aDd  +
push 4  +
push esi  +
push 1  +
push 7Fh  +
call edi  +
dec eax  +
dec eax  +
jz loc_1004590  +
cmp word ptr [esi] 2Fh +
jnz loc_1004588  +
cmp dword ptr [ebp-430h] 1 +
jz loc_1004590  +
push esi  +
call sub_1003923  +
jmp loc_100459D  +
lea eax [ebp+ebx*2-422h] +
push eax  +
call sub_1005CF0  +
test eax eax +
jz loc_10045F9  +
push dword_1017188  +
lea eax [ebp-424h] +
push 208h  +
push eax  +
call ds:fgetws  +
add esp 0Ch +
xor ebx ebx +
test eax eax +
jnz loc_10043FF  +
push dword_1017188  +
call ds:fclose  +
xor esi esi +
pop ecx  +
mov dword_1067D00 ebx +
mov dword_1067D04 ebx +
mov dword_1067D08 ebx +
mov dword_1067D0C ebx +
mov dword_1067D10 ebx +
inc esi  +
jmp loc_1004389  +
push dword_1017188  +
call ds:fclose  +
pop ecx  +
push 0  +
lea eax [ebp+ebx*2-424h] +
push eax  +
push dword ptr [ebp-42Ch]  +
call sub_100C3D6  +
jmp loc_1004387  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 7FFFFFFFh  +
push esi  +
lea eax [ebp+arg_0] +
call sub_1003232  +
test eax eax +
jl loc_1004692  +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ebx  +
push 0  +
lea eax [esi+edx*2] +
pop ebx  +
jz loc_1004683  +
mov esi ecx +
sub esi [ebp+arg_4] +
push edi  +
lea edi [esi+edx+7FFFFFFFh] +
mov esi [ebp+arg_8] +
sub esi eax +
test edi edi +
jz loc_100467E  +
movzx edx word ptr [esi+eax] +
test dx dx +
jz loc_100467E  +
mov [eax] dx +
inc eax  +
inc eax  +
dec ecx  +
dec edi  +
test ecx ecx +
jnz loc_1004666  +
pop edi  +
test ecx ecx +
jnz loc_100468A  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10046B2  +
cmp ecx 7FFFFFFFh +
jbe loc_10046B7  +
mov eax 80070057h +
test eax eax +
jl loc_10046F3  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10046E3  +
cmp eax esi +
ja loc_10046E3  +
jnz loc_10046EE  +
jmp loc_10046E8  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push 40h  +
push esi  +
call sub_100469C  +
test eax eax +
jge loc_100471D  +
xor eax eax +
mov [esi] ax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push 30Ch  +
push esi  +
call sub_100469C  +
test eax eax +
jge loc_1004749  +
xor eax eax +
mov [esi] ax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push 100h  +
push esi  +
call sub_100469C  +
test eax eax +
jge loc_1004775  +
xor eax eax +
mov [esi] ax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0AB4h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+nSize] 104h +
call ds:GetUserNameW  +
lea eax [ebp+var_AB0] +
push eax  +
call ds:time  +
lea eax [ebp+var_AB0] +
push eax  +
call ds:ctime  +
push eax  +
lea eax [ebp+var_84] +
push offset aHs  +
push eax  +
call sub_10046FC  +
xor eax eax +
add esp 14h +
push 104h  +
mov [ebp+var_54] ax +
mov [ebp+var_5E] ax +
mov [ebp+var_70] ax +
lea eax [ebp+var_494] +
push eax  +
push 140h  +
push hInstance  +
call ds:LoadStringW  +
lea eax [ebp+var_6E] +
push eax  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_84] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [edi]  +
lea eax [ebp+var_494] +
push eax  +
lea eax [ebp+var_AAC] +
push eax  +
call sub_1004725  +
push dword_1017188  +
lea eax [ebp+var_AAC] +
push eax  +
call ds:fputws  +
xor ecx ecx +
add esp 24h +
test eax eax +
setnl cl  +
pop edi  +
mov eax ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1011DD7  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0 +
jnz loc_100488F  +
xor eax eax +
inc eax  +
jmp loc_1004A73  +
push ebx  +
push esi  +
push edi  +
mov edi 100h +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
cmp [ebp+Buffer] 0 +
push 2  +
lea ecx [ebp+Buffer] +
pop ebx  +
jz loc_10048D8  +
movzx eax [ebp+Buffer] +
cmp ax 2Fh +
jz loc_10048D8  +
add ecx ebx +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_10048C8  +
movzx eax word ptr [ecx] +
mov esi ecx +
test ax ax +
jz loc_10048F5  +
movzx eax ax +
cmp ax 3Ah +
jz loc_10048F5  +
add esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_10048E5  +
add esi ebx +
xor eax eax +
mov [esi] ax +
jmp loc_1004904  +
cmp ax 3Ah +
jz loc_100490E  +
add esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_10048FE  +
push ecx  +
lea eax [ebp+String] +
push offset aS_1  +
push eax  +
call sub_1004751  +
add esp 0Ch +
test byte ptr [ebp+arg_0] 1 +
jz loc_100493B  +
push offset String2  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test byte ptr [ebp+arg_0] 20h +
jz loc_1004953  +
push offset word_10013F8  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test byte ptr [ebp+arg_0] 4 +
jz loc_100496B  +
push offset word_10013F4  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test byte ptr [ebp+arg_0] bl +
jz loc_1004982  +
push offset word_10013F0  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test [ebp+arg_0] 800h +
jz loc_100499D  +
push offset word_10013EC  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test [ebp+arg_0] 2000h +
jz loc_10049B8  +
push offset word_10013E8  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test [ebp+arg_0] 4000h +
jz loc_10049D3  +
push offset word_10013E4  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test [ebp+arg_0] edi +
jz loc_10049EA  +
push offset word_10013E0  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test [ebp+arg_0] 1000h +
jz loc_1004A05  +
push offset word_10013DC  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
mov edi ds:lstrlenW +
lea eax [ebp+String] +
push eax  +
call edi  +
cmp eax 8 +
push esi  +
lea eax [ebp+String] +
push eax  +
jl loc_1004A28  +
push offset aSS  +
jmp loc_1004A2D  +
push offset aSS_0  +
push dword_1017188  +
call ds:fwprintf  +
add esp 10h +
test eax eax +
jge loc_1004A44  +
xor eax eax +
jmp loc_1004A70  +
push esi  +
call edi  +
cmp word ptr [esi+eax*2-2] 0Ah +
jnz loc_1004A54  +
xor eax eax +
inc eax  +
jmp loc_1004A70  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1011DD7  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi 100h +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 51Ch  +
push hInstance  +
call ds:LoadStringW  +
cmp [ebp+Buffer] 0 +
push 2  +
lea ecx [ebp+Buffer] +
pop edx  +
jz loc_1004AE5  +
movzx eax [ebp+Buffer] +
cmp ax 2Fh +
jz loc_1004AE5  +
add ecx edx +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1004AD5  +
movzx eax word ptr [ecx] +
mov esi ecx +
test ax ax +
jz loc_1004B02  +
movzx eax ax +
cmp ax 3Ah +
jz loc_1004B02  +
add esi edx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1004AF2  +
add esi edx +
xor eax eax +
mov [esi] ax +
jmp loc_1004B11  +
cmp ax 3Ah +
jz loc_1004B1B  +
add esi edx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1004B0B  +
push ecx  +
lea eax [ebp+String] +
push offset aS_1  +
push eax  +
call sub_1004751  +
add esp 0Ch +
cmp dword_1017040 0 +
jz loc_1004B4B  +
push offset aD  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
cmp dword_1017044 0 +
jz loc_1004B66  +
push offset word_10013F8  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
cmp dword_1017048 0 +
jz loc_1004B81  +
push offset word_10013E0  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test byte ptr dword_1067CBC 4 +
jz loc_1004B9C  +
push offset word_10013F4  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test byte ptr dword_1067CBC 1 +
jz loc_1004BB7  +
push offset word_10013DC  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
test byte ptr dword_1067CBC 8 +
jz loc_1004BD2  +
push offset aU  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1004625  +
mov edi ds:lstrlenW +
lea eax [ebp+String] +
push eax  +
call edi  +
cmp eax 8 +
push esi  +
lea eax [ebp+String] +
push eax  +
jl loc_1004BF5  +
push offset aSS  +
jmp loc_1004BFA  +
push offset aSS_0  +
push dword_1017188  +
call ds:fwprintf  +
add esp 10h +
test eax eax +
jge loc_1004C11  +
xor eax eax +
jmp loc_1004C3D  +
push esi  +
call edi  +
cmp word ptr [esi+eax*2-2] 0Ah +
jnz loc_1004C21  +
xor eax eax +
inc eax  +
jmp loc_1004C3D  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1011DD7  +
leave   +
retn   +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
lea ecx [ebp-22Ch] +
call ??0CString@@QAE@XZ  +
push esi  +
lea eax [ebp-22Ch] +
xor ebx ebx +
push eax  +
mov [ebp-4] ebx +
call sub_1003B87  +
push offset aW_0  +
push dword ptr [ebp-22Ch]  +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov dword_1017188 eax +
cmp eax ebx +
jnz loc_1004CCA  +
push ebx  +
push dword ptr [ebp-22Ch]  +
push 23A4h  +
call sub_100B87C  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-22Ch] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call sub_1011EF1  +
retn 4  +
lea eax [ebp-22Ch] +
push eax  +
call sub_100477D  +
push 141h  +
call sub_1004117  +
mov ecx dword_1067C20 +
lea eax [ebp-224h] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
xor ecx ecx +
cmp [eax-8] ebx +
setz cl  +
mov edi ecx +
lea ecx [ebp-224h] +
call ??1CString@@QAE@XZ  +
mov esi 148h +
cmp edi ebx +
jz loc_1004D26  +
push 6A9h  +
push 1  +
call sub_1003FD8  +
push esi  +
call sub_1004117  +
jmp loc_1004D50  +
mov ecx dword_1067C20 +
lea eax [ebp-224h] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
push 709h  +
push eax  +
call sub_1003DED  +
lea ecx [ebp-224h] +
call ??1CString@@QAE@XZ  +
push 142h  +
call sub_1004117  +
mov ecx dword_1027398 +
lea eax [ebp-224h] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
xor ecx ecx +
cmp [eax-8] ebx +
setz cl  +
mov edi ecx +
lea ecx [ebp-224h] +
call ??1CString@@QAE@XZ  +
cmp edi ebx +
jz loc_1004D9B  +
push 6AAh  +
push 1  +
call sub_1003FD8  +
push esi  +
call sub_1004117  +
jmp loc_1004DC5  +
mov ecx dword_1027398 +
lea eax [ebp-224h] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
push 70Ah  +
push eax  +
call sub_1003DED  +
lea ecx [ebp-224h] +
call ??1CString@@QAE@XZ  +
push 143h  +
call sub_1004117  +
cmp dword_1067C58 ebx +
jnz loc_1004DEB  +
cmp dword_1067F04 ebx +
jz loc_1004DEB  +
push offset unk_1067EF8  +
call sub_10042E0  +
jmp loc_1004DF5  +
push 146h  +
call sub_1004117  +
xor eax eax +
cmp dword_1017054 ebx +
push 585h  +
setz al  +
push eax  +
call sub_1003FD8  +
xor eax eax +
cmp dword_1017058 ebx +
push 586h  +
setz al  +
push eax  +
call sub_1003FD8  +
push 57Ah  +
push dword_1067CE4  +
call sub_1003FD8  +
push 57Bh  +
push dword_1067CE8  +
call sub_1003FD8  +
push 57Ch  +
push dword_1067D14  +
call sub_100486C  +
push 58Eh  +
push dword_1067D1C  +
call sub_1003FD8  +
push 592h  +
push dword_1067D20  +
call sub_1003FD8  +
push 591h  +
push dword_1067D24  +
call sub_1003FD8  +
push 144h  +
call sub_1004117  +
mov esi 147h +
cmp dword_1067E40 ebx +
jnz loc_1004EA8  +
cmp dword_1067E78 ebx +
jnz loc_1004EA8  +
push esi  +
call sub_1004117  +
jmp loc_1004EBC  +
push offset unk_1067E34  +
call sub_10042E0  +
push offset unk_1067E6C  +
call sub_10042E0  +
push 145h  +
call sub_1004117  +
cmp dword_1067DD4 ebx +
jnz loc_1004EDE  +
cmp dword_1067E24 ebx +
jnz loc_1004EDE  +
push esi  +
call sub_1004117  +
jmp loc_1004EF2  +
push offset unk_1067DC8  +
call sub_10042E0  +
push offset unk_1067E18  +
call sub_10042E0  +
push 584h  +
push dword_1067CEC  +
call sub_1003FD8  +
push 583h  +
push dword_1067CF0  +
call sub_1003FD8  +
push 582h  +
push dword_1067CF4  +
call sub_1003FD8  +
push 581h  +
push dword_1067CF8  +
call sub_1003FD8  +
push 580h  +
push dword_1067CFC  +
call sub_1003FD8  +
mov eax dword_1067D40 +
mov ecx dword_1067D44 +
mov esi ds:fwprintf +
mov ebx eax +
or eax ecx +
mov [ebp-21Ch] ecx +
jz loc_100503C  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 587h  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_1004FA7  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_1004FA7  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1004F97  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_1004FC4  +
movzx eax ax +
cmp ax 3Ah +
jz loc_1004FC4  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1004FB4  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_1004FD3  +
cmp ax 3Ah +
jz loc_1004FDD  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1004FCD  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_100503C  +
cmp eax 9 +
push edi  +
jl loc_1005006  +
push offset aS  +
jmp loc_100500B  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_100503C  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_100503C  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067D48 +
mov ecx dword_1067D4C +
mov ebx eax +
or eax ecx +
mov [ebp-21Ch] ecx +
jz loc_1005130  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 588h  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_100509B  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_100509B  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_100508B  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_10050B8  +
movzx eax ax +
cmp ax 3Ah +
jz loc_10050B8  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_10050A8  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_10050C7  +
cmp ax 3Ah +
jz loc_10050D1  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_10050C1  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_1005130  +
cmp eax 9 +
push edi  +
jl loc_10050FA  +
push offset aS  +
jmp loc_10050FF  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_1005130  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_1005130  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067D3C +
cdq   +
mov ebx eax +
or eax edx +
mov [ebp-21Ch] edx +
jz loc_100521F  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 589h  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_100518A  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_100518A  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_100517A  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_10051A7  +
movzx eax ax +
cmp ax 3Ah +
jz loc_10051A7  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1005197  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_10051B6  +
cmp ax 3Ah +
jz loc_10051C0  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_10051B0  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_100521F  +
cmp eax 9 +
push edi  +
jl loc_10051E9  +
push offset aS  +
jmp loc_10051EE  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_100521F  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_100521F  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067D50 +
cdq   +
mov ebx eax +
or eax edx +
mov [ebp-21Ch] edx +
jz loc_100530E  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 58Ah  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_1005279  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_1005279  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1005269  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_1005296  +
movzx eax ax +
cmp ax 3Ah +
jz loc_1005296  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1005286  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_10052A5  +
cmp ax 3Ah +
jz loc_10052AF  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_100529F  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_100530E  +
cmp eax 9 +
push edi  +
jl loc_10052D8  +
push offset aS  +
jmp loc_10052DD  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_100530E  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_100530E  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067D54 +
cdq   +
mov ebx eax +
or eax edx +
mov [ebp-21Ch] edx +
jz loc_10053FD  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 58Bh  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_1005368  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_1005368  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1005358  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_1005385  +
movzx eax ax +
cmp ax 3Ah +
jz loc_1005385  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1005375  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_1005394  +
cmp ax 3Ah +
jz loc_100539E  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_100538E  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_10053FD  +
cmp eax 9 +
push edi  +
jl loc_10053C7  +
push offset aS  +
jmp loc_10053CC  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_10053FD  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_10053FD  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067D58 +
cdq   +
mov ebx eax +
or eax edx +
mov [ebp-21Ch] edx +
jz loc_10054EC  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 58Ch  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_1005457  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_1005457  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1005447  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_1005474  +
movzx eax ax +
cmp ax 3Ah +
jz loc_1005474  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1005464  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_1005483  +
cmp ax 3Ah +
jz loc_100548D  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_100547D  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_10054EC  +
cmp eax 9 +
push edi  +
jl loc_10054B6  +
push offset aS  +
jmp loc_10054BB  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_10054EC  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_10054EC  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
push 57Dh  +
push dword_1067D18  +
call sub_100486C  +
push 514h  +
call sub_1004117  +
push 642h  +
push dword_1067C88  +
call sub_1003FD8  +
push 515h  +
push dword_1067C94  +
call sub_1003FD8  +
push 516h  +
push dword_1067C98  +
call sub_1003FD8  +
mov eax dword_1067D34 +
cdq   +
mov ebx eax +
or eax edx +
mov [ebp-21Ch] edx +
jz loc_1005625  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 517h  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_1005590  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_1005590  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1005580  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_10055AD  +
movzx eax ax +
cmp ax 3Ah +
jz loc_10055AD  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_100559D  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_10055BC  +
cmp ax 3Ah +
jz loc_10055C6  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_10055B6  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_1005625  +
cmp eax 9 +
push edi  +
jl loc_10055EF  +
push offset aS  +
jmp loc_10055F4  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_1005625  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_1005625  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067CA8 +
cdq   +
mov ebx eax +
or eax edx +
mov [ebp-21Ch] edx +
jz loc_1005714  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 52Eh  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_100567F  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_100567F  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_100566F  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_100569C  +
movzx eax ax +
cmp ax 3Ah +
jz loc_100569C  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_100568C  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_10056AB  +
cmp ax 3Ah +
jz loc_10056B5  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_10056A5  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_1005714  +
cmp eax 9 +
push edi  +
jl loc_10056DE  +
push offset aS  +
jmp loc_10056E3  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_1005714  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_1005714  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067CA4 +
cdq   +
mov ebx eax +
or eax edx +
mov [ebp-21Ch] edx +
jz loc_1005803  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 52Fh  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_100576E  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_100576E  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_100575E  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_100578B  +
movzx eax ax +
cmp ax 3Ah +
jz loc_100578B  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_100577B  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_100579A  +
cmp ax 3Ah +
jz loc_10057A4  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1005794  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_1005803  +
cmp eax 9 +
push edi  +
jl loc_10057CD  +
push offset aS  +
jmp loc_10057D2  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_1005803  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_1005803  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067CB0 +
cdq   +
mov ebx eax +
mov eax dword_1067CAC +
mov [ebp-21Ch] edx +
cdq   +
mov [ebp-228h] eax +
or eax edx +
mov [ebp-224h] edx +
jnz loc_1005835  +
mov eax ebx +
or eax [ebp-21Ch] +
jz loc_100591A  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 530h  +
push hInstance  +
call ds:LoadStringW  +
cmp word ptr [ebp-218h] 0 +
lea ecx [ebp-218h] +
jz loc_1005879  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_1005879  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1005869  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_1005896  +
movzx eax ax +
cmp ax 3Ah +
jz loc_1005896  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1005886  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_10058A5  +
cmp ax 3Ah +
jz loc_10058AF  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_100589F  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push dword ptr [ebp-224h]  +
push dword ptr [ebp-228h]  +
push ecx  +
push offset aSI64dI64d  +
push dword_1017188  +
call esi  +
add esp 1Ch +
test eax eax +
jl loc_100591A  +
cmp eax 9 +
push edi  +
jl loc_10058E4  +
push offset aS  +
jmp loc_10058E9  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_100591A  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_100591A  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
push 531h  +
push dword_1067CB4  +
call sub_1003FD8  +
xor edi edi +
cmp dword_1017040 edi +
jz loc_100595C  +
cmp dword_1017044 edi +
jz loc_1005983  +
cmp dword_1017048 edi +
jz loc_1005983  +
mov al byte ptr dword_1067CBC +
test al 4 +
jz loc_1005983  +
test al 1 +
jz loc_1005983  +
test al 8 +
jz loc_1005983  +
push 521h  +
jmp loc_100597A  +
cmp dword_1017044 edi +
jnz loc_1005983  +
cmp dword_1017048 edi +
jnz loc_1005983  +
test byte ptr dword_1067CBC 0Dh +
jnz loc_1005983  +
push 522h  +
push 1  +
call sub_1003FD8  +
jmp loc_1005988  +
call sub_1004A86  +
call sub_10040EB  +
push 523h  +
push dword_1067CC4  +
call sub_1003FD8  +
push 524h  +
push dword_1067CC0  +
call sub_1003FD8  +
push 52Bh  +
push dword_1067C60  +
call sub_1003FD8  +
push 525h  +
push dword_1067CD0  +
call sub_1003FD8  +
mov eax dword_1067CCC +
cmp eax edi +
jz loc_10059DE  +
push 528h  +
push eax  +
jmp loc_10059E9  +
push 527h  +
push dword_1067CC8  +
call sub_1003FD8  +
push 526h  +
push dword_1067CA0  +
call sub_1003FD8  +
push 52Ch  +
push dword_1067D64  +
call sub_1003FD8  +
push 58Fh  +
push dword_1067C54  +
call sub_1003FD8  +
movzx eax byte_1067C24 +
push 590h  +
push eax  +
call sub_1003FD8  +
push 52Dh  +
push dword_1067D28  +
call sub_1003FD8  +
push 529h  +
push dword_1067D2C  +
call sub_100486C  +
push 52Ah  +
push dword_1067D30  +
call sub_100486C  +
mov eax dword_1067D5C +
cdq   +
mov ebx eax +
or eax edx +
mov [ebp-21Ch] edx +
jz loc_1005B4E  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 532h  +
push hInstance  +
call ds:LoadStringW  +
lea ecx [ebp-218h] +
cmp [ebp-218h] di +
jz loc_1005AB9  +
movzx eax word ptr [ebp-218h] +
cmp ax 2Fh +
jz loc_1005AB9  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
cmp ax di +
jnz loc_1005AA9  +
movzx eax word ptr [ecx] +
mov edi ecx +
test ax ax +
jz loc_1005AD6  +
movzx eax ax +
cmp ax 3Ah +
jz loc_1005AD6  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1005AC6  +
inc edi  +
inc edi  +
xor eax eax +
mov [edi] ax +
jmp loc_1005AE5  +
cmp ax 3Ah +
jz loc_1005AEF  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_1005ADF  +
push dword ptr [ebp-21Ch]  +
push ebx  +
push ecx  +
push offset aSI64d  +
push dword_1017188  +
call esi  +
add esp 14h +
test eax eax +
jl loc_1005B4E  +
cmp eax 9 +
push edi  +
jl loc_1005B18  +
push offset aS  +
jmp loc_1005B1D  +
push offset aS_0  +
push dword_1017188  +
call esi  +
add esp 0Ch +
test eax eax +
jl loc_1005B4E  +
push edi  +
call ds:lstrlenW  +
cmp word ptr [edi+eax*2-2] 0Ah +
jz loc_1005B4E  +
push dword_1017188  +
push offset asc_1001518  +
call ds:fputws  +
pop ecx  +
pop ecx  +
mov eax dword_1067CD4 +
xor esi esi +
cmp eax esi +
jz loc_1005B6A  +
cmp dword_1067CD8 esi +
jz loc_1005B6A  +
push 51Ah  +
push 1  +
jmp loc_1005B80  +
push 518h  +
push eax  +
call sub_1003FD8  +
push 519h  +
push dword_1067CD8  +
call sub_1003FD8  +
push 51Bh  +
push dword_1067CDC  +
call sub_1003FD8  +
push 5DDh  +
call sub_1004117  +
mov eax Data +
push esi  +
push 1  +
cdq   +
push 5DEh  +
push edx  +
push eax  +
call sub_10041B0  +
mov eax dwMilliseconds +
cdq   +
mov ecx 3E8h +
idiv  ecx +
push esi  +
push 1  +
push 5DFh  +
cdq   +
push edx  +
push eax  +
call sub_10041B0  +
push 5E1h  +
push dword_1067D60  +
call sub_1003FD8  +
push 641h  +
call sub_1004117  +
push 644h  +
push dword_1067C64  +
call sub_1003FD8  +
push 643h  +
push dword_1067C68  +
call sub_1003FD8  +
push 645h  +
push dword_1067C6C  +
call sub_1003FD8  +
push 646h  +
push dword_1067C70  +
call sub_1003FD8  +
push 647h  +
push dword_1067C78  +
call sub_1003FD8  +
push 648h  +
push dword_1067C74  +
call sub_1003FD8  +
push 649h  +
push dword_1067C7C  +
call sub_1003FD8  +
push 64Bh  +
push dword_1067C80  +
call sub_1003FD8  +
push 64Ah  +
push dword_1067C84  +
call sub_1003FD8  +
push 653h  +
push dword_1067C8C  +
call sub_1003FD8  +
push 654h  +
push dword_1067C90  +
call sub_1003FD8  +
xor eax eax +
cmp dword_1017050 esi +
push 64Ch  +
setz al  +
push eax  +
call sub_1003FD8  +
push 64Dh  +
push dword_1067CE0  +
call sub_1003FD8  +
call sub_1003F2D  +
push 652h  +
push dword_1067C2C  +
call sub_1003FD8  +
push dword_1017188  +
call ds:fclose  +
xor esi esi +
pop ecx  +
inc esi  +
jmp loc_1004CB1  +
***
call __EH_prolog3  +
and dword ptr [ebp-18h] 0 +
mov edi [ebp+8] +
mov esi ds:CompareStringW +
push 0FFFFFFFFh  +
push offset aDebug  +
push 0FFFFFFFFh  +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
xor eax eax +
push 7Fh  +
mov Buffer ax +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005D32  +
mov dword_1067C5C ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aDst  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005D50  +
mov byte_1067C24 bl +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aQuit  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005D6E  +
mov dword_102739C ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aCreate  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005D8C  +
mov dword_1067C60 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aReg  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005DAA  +
mov dword_1067D70 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aUnicode_2  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005DC8  +
mov dword_1067C38 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aTbd  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005DE6  +
mov dword_1067D60 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aFat  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005E04  +
mov dword_1067D64 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aFft  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005E22  +
mov dword_1067C54 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset a256  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005E40  +
mov dword_1067D28 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset word_10013F8  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005E64  +
and dword_1067CE8 eax +
mov dword_1067CE4 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset word_1001958  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005E88  +
and dword_1067CE4 eax +
mov dword_1067CE8 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset word_1001954  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005EA6  +
mov dword_1067C64 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset asc_1001950  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005EC4  +
mov dword_1067C68 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aTs  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005EE2  +
mov dword_1067C6C ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aFp  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005F00  +
mov dword_1067C70 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aBytes  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005F1E  +
mov dword_1067C78 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNs  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005F3C  +
mov dword_1067C74 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNc  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005F5A  +
mov dword_1067C7C ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNdl  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005F78  +
mov dword_1067C80 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNfl  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005F96  +
mov dword_1067C84 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNjh  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005FB4  +
mov dword_1067C8C ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNjs  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005FD2  +
mov dword_1067C90 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset asc_1001900  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1005FF0  +
mov dword_1067C88 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aTee  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100600E  +
mov dword_1067C2C ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aSl  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100602C  +
mov dword_1067C9C ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset word_10013F4  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006050  +
and dword_1067C98 eax +
mov dword_1067C94 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset word_10013E4  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006074  +
mov dword_1067C94 ebx +
mov dword_1067C98 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNocopy  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10060A0  +
mov dword_1017048 eax +
mov dword_1017044 eax +
mov dword_1017040 eax +
mov dword_1067CBC eax +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aCopyall  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10060D1  +
or dword_1067CBC 0Fh +
mov dword_1017048 ebx +
mov dword_1017044 ebx +
mov dword_1017040 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aSec  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006105  +
mov dword_1017048 ebx +
mov dword_1017044 ebx +
mov dword_1017040 ebx +
mov dword_1067CBC 6 +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aSecfix_0  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006123  +
mov dword_1067CC4 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aTimfix  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006141  +
mov dword_1067CC0 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aMove  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100615C  +
mov dword_1067CCC ebx +
jmp loc_100616F  +
push 0FFFFFFFFh  +
push offset aMov  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100617A  +
mov dword_1067CC8 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aPurge  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_10061B2  +
push 0FFFFFFFFh  +
push offset aMir  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10061BD  +
mov dword_1067CA0 ebx +
mov dword_1067C94 ebx +
mov dword_1067C98 ebx +
mov dword_1067CD0 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aZ_0  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10061E1  +
and dword_1067CD8 eax +
mov dword_1067CD4 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aB_0  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10061FC  +
and dword_1067CD4 eax +
jmp loc_1006215  +
push 0FFFFFFFFh  +
push offset aZb  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006220  +
mov dword_1067CD4 ebx +
mov dword_1067CD8 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aEfsraw  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100623E  +
mov dword_1067CDC ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNp  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100625C  +
and dword_1017050 eax +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aEta  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100627A  +
mov dword_1067CE0 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aIs  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006298  +
and dword_1017054 eax +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aIt  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10062B6  +
and dword_1017058 eax +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXl  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10062D4  +
mov dword_1067CEC ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXx  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10062F2  +
mov dword_1067CF0 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXo  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006310  +
mov dword_1067CF4 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXn  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100632E  +
mov dword_1067CF8 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXc  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100634C  +
mov dword_1067CFC ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNosd  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100636A  +
mov dword_1067D00 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aNodd  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006388  +
mov dword_1067D04 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aIoff  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aItem  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXj  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10063D4  +
mov dword_1067D1C ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXjf  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10063F2  +
mov dword_1067D20 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXjd  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006410  +
mov dword_1067D24 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aPf  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100642E  +
mov dword_1067CB4 ebx +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aIf  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100644F  +
and dword_1067D0C eax +
mov dword_1067D08 ebx +
jmp loc_100646E  +
push 0FFFFFFFFh  +
push offset aXf  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100647A  +
and dword_1067D08 eax +
mov dword_1067D0C ebx +
and dword_1067D10 0 +
jmp loc_1006D9B  +
push 0FFFFFFFFh  +
push offset aXd  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10064A4  +
and dword_1067D08 eax +
and dword_1067D0C eax +
mov dword_1067D10 ebx +
jmp loc_1006D9B  +
push 5  +
push offset aCopy  +
push 5  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10065AE  +
xor ecx ecx +
add edi 0Ah +
mov dword_1067CBC ecx +
mov dword_1017048 ecx +
mov dword_1017044 ecx +
mov dword_1017040 ecx +
movzx eax word ptr [edi] +
cmp ax cx +
jz loc_1006D9B  +
cmp ax 20h +
jz loc_1006D9B  +
cmp ax 9 +
jz loc_1006D9B  +
push ebx  +
push offset aD  +
push ebx  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100651A  +
mov dword_1017048 ebx +
mov dword_1017040 ebx +
jmp loc_100659B  +
push ebx  +
push offset word_10013F8  +
push ebx  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006533  +
mov dword_1017044 ebx +
jmp loc_100659B  +
push ebx  +
push offset word_10013E0  +
push ebx  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100654C  +
mov dword_1017048 ebx +
jmp loc_100659B  +
push ebx  +
push offset word_10013F4  +
push ebx  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006566  +
or dword_1067CBC 6 +
jmp loc_100659B  +
push ebx  +
push offset word_10013DC  +
push ebx  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100657F  +
or dword_1067CBC ebx +
jmp loc_100659B  +
push ebx  +
push offset aU  +
push ebx  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10067A2  +
or dword_1067CBC 8 +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_10064E4  +
jmp loc_1006D9B  +
push 6  +
push offset aDcopy  +
push 6  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100660A  +
add edi 0Ch +
and dword_1067CB8 eax +
jmp loc_10065FD  +
cmp ax 20h +
jz loc_1006D9B  +
cmp ax 9 +
jz loc_1006D9B  +
push ebx  +
push offset word_10013E0  +
push ebx  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10067A2  +
inc edi  +
mov dword_1067CB8 ebx +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_10065CC  +
jmp loc_1006D9B  +
push 3  +
push offset aIa  +
push 3  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006639  +
add edi 6 +
push edi  +
call sub_10032A8  +
test eax eax +
jle loc_10067A2  +
or dword_1067D14 eax +
jmp loc_1006D9B  +
push 3  +
push offset aXa  +
push 3  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006668  +
add edi 6 +
push edi  +
call sub_10032A8  +
test eax eax +
jle loc_10067A2  +
or dword_1067D18 eax +
jmp loc_1006D9B  +
push 3  +
push offset aA  +
push 3  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10066A2  +
add edi 6 +
push edi  +
call sub_10032A8  +
test eax eax +
jle loc_10067A2  +
test eax 1000h +
jnz loc_10067A2  +
or dword_1067D2C eax +
jmp loc_1006D9B  +
push 3  +
push offset aA_0  +
push 3  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10066DC  +
add edi 6 +
push edi  +
call sub_10032A8  +
test eax eax +
jle loc_10067A2  +
test eax 1000h +
jnz loc_10067A2  +
or dword_1067D30 eax +
jmp loc_1006D9B  +
push 2  +
push offset aW  +
push 2  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100672A  +
add edi 4 +
push edi  +
push offset dwMilliseconds  +
mov dword_1067D68 ebx +
call sub_1003701  +
mov eax dwMilliseconds +
imul eax eax +
mov dwMilliseconds eax +
test eax eax +
jge loc_1006D9B  +
mov dwMilliseconds 7530h +
jmp loc_1006D9B  +
push 2  +
push offset aR  +
push 2  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100676D  +
add edi 4 +
push edi  +
push offset Data  +
mov dword_1067D6C ebx +
call sub_1003701  +
cmp Data 0 +
jge loc_1006D9B  +
mov Data 0F4240h +
jmp loc_1006D9B  +
push 4  +
push offset aIpg  +
push 4  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10067AC  +
add edi 8 +
push edi  +
push offset dword_1067D5C  +
call sub_1003701  +
cmp dword_1067D5C 0 +
jge loc_1006D9B  +
and dword_1067D5C 0 +
xor eax eax +
call __EH_epilog3  +
retn 4  +
push 4  +
push offset aMot  +
push 4  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10067E3  +
add edi 8 +
push edi  +
push offset dword_1067CA4  +
call sub_1003701  +
cmp dword_1067CA4 0 +
jge loc_1006D9B  +
and dword_1067CA4 0 +
jmp loc_10067A2  +
push 4  +
push offset aMon  +
push 4  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100681A  +
add edi 8 +
push edi  +
push offset dword_1067CA8  +
call sub_1003701  +
cmp dword_1067CA8 0 +
jge loc_1006D9B  +
and dword_1067CA8 0 +
jmp loc_10067A2  +
push 3  +
push offset aRh  +
push 3  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10068E2  +
cmp word ptr [edi+0Eh] 2Dh +
jnz loc_10067A2  +
movzx eax word ptr [edi+18h] +
test ax ax +
jz loc_100684F  +
cmp ax 20h +
jnz loc_10067A2  +
xor eax eax +
mov [edi+18h] ax +
mov [edi+0Eh] ax +
lea eax [edi+6] +
push eax  +
push offset dword_1067CAC  +
call sub_1003701  +
mov eax dword_1067CAC +
test eax eax +
jl loc_10068D2  +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
test eax eax +
jl loc_10068D2  +
cmp eax 17h +
jg loc_10068D2  +
test edx edx +
jl loc_10068D2  +
cmp edx 3Bh +
jg loc_10068D2  +
lea eax [edi+10h] +
push eax  +
push offset dword_1067CB0  +
call sub_1003701  +
mov ecx dword_1067CB0 +
test ecx ecx +
jl loc_10068D2  +
mov eax ecx +
push 64h  +
cdq   +
pop esi  +
idiv  esi +
test eax eax +
jl loc_10068D2  +
cmp eax 17h +
jg loc_10068D2  +
test edx edx +
jl loc_10068D2  +
cmp edx 3Bh +
jg loc_10068D2  +
cmp dword_1067CAC ecx +
jnz loc_1006D9B  +
push 2Dh  +
pop eax  +
mov [edi+0Eh] ax +
jmp loc_10067A2  +
and dword_1067CB0 0 +
and dword_1067CAC 0 +
jmp loc_10068C6  +
push 4  +
push offset aLev  +
push 4  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_100691C  +
add edi 8 +
push edi  +
push offset dword_1067D34  +
call sub_1003701  +
cmp dword_1067D34 0 +
jge loc_1006D9B  +
and dword_1067D34 0 +
jmp loc_10067A2  +
push 4  +
push offset aMax  +
push 4  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006968  +
add edi 8 +
push edi  +
push offset dword_1067D40  +
call sub_100376A  +
xor eax eax +
cmp dword_1067D44 eax +
jg loc_1006D9B  +
jl loc_1006959  +
cmp dword_1067D40 eax +
jnb loc_1006D9B  +
mov dword_1067D40 eax +
mov dword_1067D44 eax +
jmp loc_10067A2  +
push 4  +
push offset aMin  +
push 4  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10069B4  +
add edi 8 +
push edi  +
push offset dword_1067D48  +
call sub_100376A  +
xor eax eax +
cmp dword_1067D4C eax +
jg loc_1006D9B  +
jl loc_10069A5  +
cmp dword_1067D48 eax +
jnb loc_1006D9B  +
mov dword_1067D48 eax +
mov dword_1067D4C eax +
jmp loc_10067A2  +
push 7  +
push offset aMaxage  +
push 7  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006A0A  +
add edi 0Eh +
push edi  +
push offset dword_1067D3C  +
call sub_1003701  +
mov eax dword_1067D3C +
test eax eax +
jge loc_10069EA  +
and dword_1067D3C 0 +
jmp loc_10067A2  +
cmp eax 76Ch +
push offset FileTime  +
jl loc_1006B04  +
push eax  +
call sub_100357F  +
test eax eax +
jnz loc_1006D9B  +
jmp loc_10069DE  +
push 7  +
push offset aMinage  +
push 7  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006A60  +
add edi 0Eh +
push edi  +
push offset dword_1067D50  +
call sub_1003701  +
mov eax dword_1067D50 +
test eax eax +
jge loc_1006A40  +
and dword_1067D50 0 +
jmp loc_10067A2  +
cmp eax 76Ch +
push offset stru_10275B0  +
jl loc_1006B04  +
push eax  +
call sub_100357F  +
test eax eax +
jnz loc_1006D9B  +
jmp loc_1006A34  +
push 7  +
push offset aMaxlad  +
push 7  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006AB2  +
add edi 0Eh +
push edi  +
push offset dword_1067D54  +
call sub_1003701  +
mov eax dword_1067D54 +
test eax eax +
jge loc_1006A96  +
and dword_1067D54 0 +
jmp loc_10067A2  +
cmp eax 76Ch +
push offset stru_10275B8  +
jl loc_1006B04  +
push eax  +
call sub_100357F  +
test eax eax +
jnz loc_1006D9B  +
jmp loc_1006A8A  +
push 7  +
push offset aMinlad  +
push 7  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006B11  +
add edi 0Eh +
push edi  +
push offset dword_1067D58  +
call sub_1003701  +
mov eax dword_1067D58 +
test eax eax +
jge loc_1006AE8  +
and dword_1067D58 0 +
jmp loc_10067A2  +
cmp eax 76Ch +
push offset stru_10275A8  +
jl loc_1006B04  +
push eax  +
call sub_100357F  +
test eax eax +
jnz loc_1006D9B  +
jmp loc_1006ADC  +
cdq   +
push edx  +
push eax  +
call sub_1003646  +
jmp loc_1006D9B  +
push 4  +
push offset aLog_1  +
push 4  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006B3B  +
push eax  +
push eax  +
push 4  +
push edi  +
call sub_10037F6  +
test eax eax +
jnz loc_1006D9B  +
jmp loc_10067A2  +
push 5  +
push offset aLog_2  +
push 5  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006B54  +
push eax  +
push ebx  +
push 5  +
jmp loc_1006B28  +
push 7  +
push offset aUnilog_1  +
push 7  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006B6D  +
push ebx  +
push eax  +
push 7  +
jmp loc_1006B28  +
push 8  +
push offset aUnilog_2  +
push 8  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006B86  +
push ebx  +
push ebx  +
push 8  +
jmp loc_1006B28  +
push 4  +
push offset aJob_0  +
push 4  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006BA4  +
add edi 8 +
push edi  +
call sub_100432B  +
jmp loc_1006B2E  +
push 5  +
push offset aSave_0  +
push 5  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006BC5  +
add edi 0Ah +
push edi  +
call sub_1004C53  +
jmp loc_1006B2E  +
push 3  +
push offset aSd_0  +
push 3  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006C7E  +
mov ecx dword_1067C20 +
lea eax [ebp-14h] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
cmp dword ptr [eax-8] 0 +
jnz loc_1006C04  +
lea eax [edi+6] +
push eax  +
call sub_10034ED  +
mov byte ptr [ebp+0Bh] 0 +
test eax eax +
jz loc_1006C07  +
mov [ebp+0Bh] bl +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
cmp byte ptr [ebp+0Bh] 0 +
jnz loc_10067A2  +
lea eax [ebp-18h] +
push eax  +
mov esi offset word_1017398 +
push esi  +
push 7FFFh  +
add edi 6 +
push edi  +
call ds:GetFullPathNameW  +
test eax eax +
jnz loc_1006C4B  +
push dword_1067C20  +
push 2399h  +
call sub_100B931  +
jmp loc_10067A4  +
push esi  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
mov ecx dword_1067C20 +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
call sub_100D263  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
mov ecx dword_1067C20 +
jmp loc_1006D2C  +
push 3  +
push offset aDd_0  +
push 3  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006D33  +
mov ecx dword_1027398 +
lea eax [ebp-14h] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
cmp dword ptr [eax-8] 0 +
jnz loc_1006CBD  +
lea eax [edi+6] +
push eax  +
call sub_10034ED  +
mov byte ptr [ebp+0Bh] 0 +
test eax eax +
jz loc_1006CC0  +
mov [ebp+0Bh] bl +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
cmp byte ptr [ebp+0Bh] 0 +
jnz loc_10067A2  +
lea eax [ebp-18h] +
push eax  +
mov esi offset word_1017398 +
push esi  +
push 7FFFh  +
add edi 6 +
push edi  +
call ds:GetFullPathNameW  +
test eax eax +
jnz loc_1006CFF  +
push dword_1027398  +
push 239Ah  +
jmp loc_1006C41  +
push esi  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
mov ecx dword_1027398 +
lea eax [ebp-10h] +
push eax  +
mov [ebp-4] ebx +
call sub_100D263  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov ecx dword_1027398 +
call sub_100D575  +
jmp loc_1006D9B  +
push 2  +
push offset aMt  +
push 2  +
push edi  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_10067A2  +
push 3  +
push offset aMt_0  +
push 3  +
push edi  +
push ebx  +
push 7Fh  +
mov dword_1067D8C ebx +
mov dword_1067D90 8 +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006D9B  +
add edi 6 +
push edi  +
push offset dword_1067D90  +
call sub_1003701  +
cmp dword_1067D90 ebx +
jge loc_1006D89  +
mov dword_1067D90 ebx +
mov eax 80h +
cmp dword_1067D90 eax +
jle loc_1006D9B  +
mov dword_1067D90 eax +
mov eax ebx +
jmp loc_10067A4  +
***
call __EH_prolog3  +
mov esi ds:CompareStringW +
xor ebx ebx +
inc ebx  +
cmp [ebp+8] ebx +
mov [ebp-10h] ebx +
jle loc_1006E49  +
mov eax [ebp-10h] +
mov edi [ebp+0Ch] +
push 0FFFFFFFFh  +
push offset aUnicode  +
push 0FFFFFFFFh  +
push dword ptr [edi+eax*4]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_1006DFB  +
mov eax [ebp-10h] +
push 0FFFFFFFFh  +
push offset aUnicode_0  +
push 0FFFFFFFFh  +
push dword ptr [edi+eax*4]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006E3C  +
push 8000h  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call ds:_fileno  +
pop ecx  +
push eax  +
call ds:_setmode  +
push 0FEh  +
push 0FFh  +
push offset aCC  +
call ds:printf  +
add esp 14h +
mov dword_1067C34 ebx +
mov dword_1067C38 ebx +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [ebp+8] +
jl loc_1006DC8  +
jmp loc_1006E4C  +
mov edi [ebp+0Ch] +
push offset asc_10014B4  +
mov ecx offset unk_1067DE4 +
call ??4CString@@QAEABV0@PBG@Z  +
push offset aSoftwareMicros  +
push 80000001h  +
lea ecx [ebp-20h] +
call sub_1010A2B  +
and dword ptr [ebp-4] 0 +
push 7530h  +
push offset dwMilliseconds  +
push offset aWaittime  +
lea ecx [ebp-20h] +
call sub_1010B1B  +
push 0F4240h  +
push offset Data  +
push offset aRetrymax  +
lea ecx [ebp-20h] +
call sub_1010B1B  +
call sub_1003CA4  +
cmp dword ptr [ebp+8] 2 +
jge loc_1006ED0  +
call sub_100CCFF  +
push ebx  +
push 44Dh  +
call sub_100A38C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_1010A70  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
jnz loc_1006F86  +
push 0FFFFFFFFh  +
push offset a???  +
push 0FFFFFFFFh  +
push dword ptr [edi+4]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_1006F2A  +
push 0FFFFFFFFh  +
push offset a???_0  +
push 0FFFFFFFFh  +
push dword ptr [edi+4]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_1006F2A  +
push 0FFFFFFFFh  +
push offset a?  +
push 0FFFFFFFFh  +
push dword ptr [edi+4]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_1006F2A  +
push 0FFFFFFFFh  +
push offset a?_0  +
push 0FFFFFFFFh  +
push dword ptr [edi+4]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jnz loc_1006F86  +
call sub_100CCFF  +
push ebx  +
push 4B1h  +
call sub_100A38C  +
push ebx  +
push 514h  +
call sub_100A38C  +
push ebx  +
push 579h  +
call sub_100A38C  +
push ebx  +
push 5DDh  +
call sub_100A38C  +
push ebx  +
push 641h  +
call sub_100A38C  +
push ebx  +
push 6A5h  +
call sub_100A38C  +
xor ebx ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_1010A70  +
mov eax ebx +
jmp loc_1006EC8  +
cmp [ebp+8] ebx +
mov [ebp-10h] ebx +
jg loc_1006FE0  +
xor edi edi +
cmp dword_1067F04 edi +
jnz loc_1006F9E  +
mov dword_1067C58 ebx +
call ds:GetVersion  +
shr eax 10h +
and eax 7FFFh +
cmp eax 0A28h +
jnb loc_1006FB9  +
mov dword_101704C edi +
cmp dword_102739C edi +
jz loc_10070ED  +
mov eax dword_1067C8C +
add eax eax +
mov dword_1067C8C eax +
call sub_100CCFF  +
call sub_100BAE6  +
jmp loc_1006F73  +
mov edi [ebp+0Ch] +
mov eax [ebp-10h] +
and dword ptr [ebp-14h] 0 +
and dword ptr [ebp-18h] 0 +
lea edi [edi+eax*4] +
mov eax [edi] +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_1007019  +
movzx edx cx +
cmp dx 2Fh +
jz loc_1007007  +
cmp dx 5Ch +
jnz loc_100700A  +
inc dword ptr [ebp-18h]  +
inc dword ptr [ebp-14h]  +
mov edx [ebp-14h] +
movzx edx word ptr [eax+edx*2] +
test dx dx +
jnz loc_1006FFB  +
cmp cx 2Dh +
jz loc_10070AF  +
push 5  +
push offset aJob  +
push 5  +
push eax  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_10070AF  +
push 6  +
push offset aSave  +
push 6  +
push dword ptr [edi]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_10070AF  +
push 5  +
push offset aLog  +
push 5  +
push dword ptr [edi]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_10070AF  +
push 6  +
push offset aLog_0  +
push 6  +
push dword ptr [edi]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_10070AF  +
push 8  +
push offset aUnilog  +
push 8  +
push dword ptr [edi]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_10070AF  +
push 9  +
push offset aUnilog_0  +
push 9  +
push dword ptr [edi]  +
push ebx  +
push 7Fh  +
call esi  +
dec eax  +
dec eax  +
jz loc_10070AF  +
mov eax [edi] +
cmp word ptr [eax] 2Fh +
jnz loc_10070A7  +
cmp [ebp-18h] ebx +
jz loc_10070AF  +
push eax  +
call sub_1003923  +
jmp loc_10070B9  +
mov eax [edi] +
inc eax  +
inc eax  +
push eax  +
call sub_1005CF0  +
test eax eax +
jz loc_10070D1  +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [ebp+8] +
jl loc_1006FDD  +
jmp loc_1006F8E  +
call sub_100CCFF  +
mov eax [ebp-10h] +
mov ecx [ebp+0Ch] +
push ebx  +
push dword ptr [ecx+eax*4]  +
push eax  +
call sub_100C3D6  +
mov ebx eax +
jmp loc_1006F73  +
call sub_100CCFF  +
mov ecx dword_1067C20 +
lea eax [ebp+0Ch] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
cmp [eax-8] edi +
lea ecx [ebp+0Ch] +
setnz byte ptr [ebp+0Bh]  +
call ??1CString@@QAE@XZ  +
cmp byte ptr [ebp+0Bh] 0 +
jz loc_1007146  +
mov ecx dword_1067C20 +
push offset unk_1027808  +
push offset dword_1067C44  +
push offset dword_1067C40  +
push offset dword_1067C3C  +
push offset unk_10273A0  +
push 23A5h  +
call sub_100D375  +
mov dword_1017034 eax +
mov ecx dword_1027398 +
lea eax [ebp+0Ch] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
cmp [eax-8] edi +
lea ecx [ebp+0Ch] +
setnz byte ptr [ebp+0Bh]  +
call ??1CString@@QAE@XZ  +
cmp byte ptr [ebp+0Bh] 0 +
jz loc_100719A  +
mov ecx dword_1027398 +
push offset unk_10275C0  +
push offset dword_1067C50  +
push offset dword_1067C4C  +
push offset dword_1067C48  +
push offset unk_1027A18  +
push 23A6h  +
call sub_100D375  +
mov dword_1017038 eax +
cmp dword_1067C54 edi +
jnz loc_10071B8  +
cmp dword_1017034 edi +
jz loc_10071B8  +
cmp dword_1017038 edi +
jz loc_10071B8  +
mov dword_101703C edi +
call sub_100BAE6  +
mov ecx dword_1067C20 +
lea eax [ebp+8] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
xor ecx ecx +
cmp [eax-8] edi +
setz cl  +
mov esi ecx +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
cmp esi edi +
jz loc_10071F7  +
push ebx  +
push 10h  +
call sub_100A38C  +
push ebx  +
push 44Dh  +
jmp loc_1006F6C  +
mov ecx dword_1027398 +
lea eax [ebp+8] +
push eax  +
call sub_100D2E3  +
mov eax [eax] +
xor ecx ecx +
cmp [eax-8] edi +
setz cl  +
mov esi ecx +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
cmp esi edi +
jz loc_1007223  +
push ebx  +
push 12h  +
jmp loc_10071E7  +
cmp dword_1067CBC edi +
jz loc_1007253  +
cmp dword_1017034 ebx +
jz loc_100723B  +
push ebx  +
push 14h  +
call sub_100A38C  +
cmp dword_1067CBC edi +
jz loc_1007253  +
cmp dword_1017038 ebx +
jz loc_1007253  +
push ebx  +
push 16h  +
call sub_100A38C  +
mov eax dword_1067CBC +
test al 8 +
jz loc_100726C  +
cmp dword_1067D7C edi +
jnz loc_100726C  +
push ebx  +
push 18h  +
jmp loc_10071E7  +
cmp dword_1067CC4 edi +
jz loc_1007280  +
cmp eax edi +
jnz loc_1007280  +
push ebx  +
push 0Ch  +
jmp loc_10071E7  +
cmp dword_1067CD8 edi +
jz loc_10072A0  +
cmp dword_1067D74 edi +
jz loc_1007298  +
cmp dword_1067D78 edi +
jnz loc_10072A0  +
push ebx  +
push 1Bh  +
jmp loc_10071E7  +
push Data  +
mov ecx dword_1067C20 +
mov esi 238Dh +
push esi  +
push dword_1067D60  +
call sub_100DAF5  +
test eax eax +
jnz loc_10072D2  +
push dword_1067C20  +
push esi  +
call sub_100B931  +
jmp loc_10070E6  +
mov ecx dword_1067C20 +
push 3  +
call sub_100D450  +
mov ecx dword_1067C20 +
call sub_100DEDC  +
push Data  +
mov ecx dword_1027398 +
mov esi 238Eh +
push esi  +
push dword_1067D60  +
call sub_100DAF5  +
test eax eax +
jnz loc_100735E  +
call ds:GetLastError  +
cmp eax 10Bh +
jz loc_10073AB  +
cmp eax 7Bh +
jz loc_10073AB  +
cmp dword_1067C88 edi +
jnz loc_1007352  +
push Data  +
mov ecx dword_1027398 +
add esi 6 +
push esi  +
push dword_1067D60  +
push dword_1067C20  +
call sub_100DD9E  +
test eax eax +
jz loc_10073AB  +
mov ecx dword_1067C20 +
push ebx  +
call sub_100D450  +
cmp dword_1067D70 edi +
jz loc_100738C  +
push dwMilliseconds  +
lea ecx [ebp-20h] +
push offset aWaittime  +
call sub_1010AD4  +
push Data  +
lea ecx [ebp-20h] +
push offset aRetrymax  +
call sub_1010AD4  +
cmp dword_1067D8C edi +
jz loc_1006F73  +
cmp dword_1067CDC edi +
jz loc_10073B6  +
push ebx  +
push 456h  +
jmp loc_10071E7  +
push dword_1027398  +
jmp loc_10072C7  +
cmp dword_1067D5C edi +
jle loc_1006F73  +
push ebx  +
push 457h  +
jmp loc_10071E7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1067D8C 0 +
jnz loc_10073EC  +
mov eax [ebp+arg_0] +
mov eax off_1017074[eax*4] +
jmp loc_1007406  +
push dwTlsIndex  +
call ds:TlsGetValue  +
mov ecx eax +
mov eax [ebp+arg_0] +
test ecx ecx +
jz loc_10073E3  +
imul eax eax +
add eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
shr dword ptr [eax] 1 +
mov ecx [eax+4] +
mov edx [eax] +
test cl 1 +
jz loc_100742B  +
or edx 80000000h +
mov [eax] edx +
sar ecx 1 +
and ecx 7FFFFFFFh +
mov [eax+4] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
cmp dword ptr [ebx+4] 0 +
jnz loc_1007459  +
cmp dword ptr [edi+4] 0 +
jz loc_1007467  +
push ebx  +
call sub_100740F  +
push edi  +
call sub_100740F  +
jmp loc_100744D  +
mov esi 0FFFF0000h +
test [ebx] esi +
jnz loc_1007474  +
test [edi] esi +
jz loc_1007482  +
push ebx  +
call sub_100740F  +
push edi  +
call sub_100740F  +
jmp loc_100746C  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jg loc_10074A1  +
xor eax eax +
jmp loc_1007534  +
cmp [ebp+arg_4] eax +
jle loc_10074B4  +
push 1  +
push 0E3h  +
call sub_100A38C  +
jmp loc_100749A  +
push esi  +
push 0  +
call sub_10073D2  +
mov ecx eax +
call sub_100CD75  +
mov esi eax +
test esi esi +
jz loc_10074D7  +
push 0  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
push 1  +
call sub_10073D2  +
mov ecx eax +
call sub_100CDDD  +
mov eax dwMilliseconds +
cdq   +
mov ecx 3E8h +
idiv  ecx +
push eax  +
call sub_100C435  +
push dwMilliseconds  +
call ds:Sleep  +
push 0  +
push 0E1h  +
call sub_100A38C  +
push 1  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
test esi esi +
pop esi  +
jz loc_1007531  +
push 0  +
call sub_10073D2  +
mov ecx eax +
call sub_100CDDD  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jge loc_100754C  +
xor eax eax +
jmp loc_1007562  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_100B931  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_100748E  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1067D8C 0 +
jz loc_100758F  +
call ds:GetLastError  +
mov ecx [ebp+arg_0] +
mov [ecx+20h] eax +
mov eax [ebp+arg_4] +
mov [ecx+24h] eax +
xor eax eax +
jmp loc_10075D3  +
cmp [ebp+arg_8] 0 +
jl loc_100758B  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
push [ebp+arg_4]  +
call sub_100BA0B  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_100748E  +
mov edi eax +
test edi edi +
jz loc_10075CF  +
mov ecx esi +
call sub_100ED58  +
test eax eax +
jz loc_10075CF  +
push 0  +
mov ecx esi +
call sub_100ED58  +
push eax  +
push esi  +
call sub_100C80B  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1067CAC +
sub esp 10h +
push ebx  +
push esi  +
cmp eax dword_1067CB0 +
jz loc_1007643  +
push edi  +
mov edi [ebp+arg_4] +
mov esi eax +
mov [edi] esi +
mov ebx dword_1067CB0 +
cmp esi ebx +
mov [ebp+arg_4] ebx +
jle loc_1007611  +
mov [ebp+arg_4] 937h +
xor esi esi +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wHour] +
movzx ecx [ebp+SystemTime.wMinute] +
imul eax eax +
add eax ecx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
cmp eax [edi] +
pop edi  +
jl loc_1007637  +
cmp eax [ebp+arg_4] +
jle loc_1007643  +
cmp eax esi +
jl loc_100763F  +
cmp eax ebx +
jle loc_1007643  +
xor eax eax +
jmp loc_1007646  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_10075DC  +
test eax eax +
jnz locret_1007692  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_100CBD1  +
jmp loc_1007681  +
push 2710h  +
call ds:Sleep  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_10075DC  +
test eax eax +
jz loc_1007676  +
leave   +
retn   +
***
call __EH_prolog3  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
mov eax dword_1067DCC +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-10h] eax +
cmp eax ebx +
jz loc_1007702  +
lea eax [ebp-10h] +
push eax  +
mov ecx offset unk_1067DC8 +
call sub_1003175  +
lea ecx [ebp-18h] +
push ecx  +
mov ecx [eax] +
call sub_1010D89  +
push eax  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-18h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+8] +
push 9  +
lea eax [ebp-14h] +
push eax  +
call sub_100D7F1  +
cmp [ebp-10h] ebx +
jnz loc_10076BE  +
mov eax dword_1067E38 +
mov [ebp-10h] eax +
cmp eax ebx +
jz loc_1007752  +
lea eax [ebp-10h] +
push eax  +
mov ecx offset unk_1067E34 +
call sub_1003175  +
lea ecx [ebp-18h] +
push ecx  +
mov ecx [eax] +
call sub_1010D89  +
push eax  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 2 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-18h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+8] +
push 9  +
lea eax [ebp-14h] +
push eax  +
call sub_100D80E  +
cmp [ebp-10h] ebx +
jnz loc_100770E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push esi  +
push offset loc_100CD69  +
push offset sub_100CD53  +
push 3  +
mov esi ecx +
push 0Ch  +
lea eax [esi+4] +
push eax  +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
or dword ptr [esi] 0FFFFFFFFh +
mov eax esi +
pop esi  +
retn   +
***
or dword ptr [ecx] 0FFFFFFFFh +
push offset loc_100CD69  +
push 3  +
push 0Ch  +
add ecx 4 +
push ecx  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
call __EH_prolog3  +
push offset unk_10277CC  +
call ds:InitializeSRWLock  +
mov eax dword_1067D90 +
mov edi eax +
xor ecx ecx +
push 28h  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call ??_U@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
xor ebx ebx +
mov [ebp-4] ebx +
cmp eax ebx +
jz loc_1007813  +
push offset sub_1007793  +
push offset loc_100776B  +
push edi  +
lea esi [eax+4] +
push 28h  +
push esi  +
mov [eax] edi +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
jmp loc_1007815  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_1067D94 esi +
cmp esi ebx +
jnz loc_100782F  +
push 8  +
call ds:SetLastError  +
xor al al +
jmp loc_1007863  +
cmp dword_1067D90 ebx +
jle loc_1007861  +
mov [ebp-10h] ebx +
mov esi [ebp-10h] +
push 3  +
pop edi  +
mov eax dword_1067D94 +
lea ecx [esi+eax+4] +
call sub_100CE49  +
add esi 0Ch +
dec edi  +
jnz loc_1007840  +
add dword ptr [ebp-10h] 28h +
inc ebx  +
cmp ebx dword_1067D90 +
jl loc_100783A  +
mov al 1 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 2 +
push edi  +
mov edi ecx +
jz loc_10078A1  +
push esi  +
push offset sub_1007793  +
lea esi [edi-4] +
push dword ptr [esi]  +
push 28h  +
push edi  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
test [ebp+arg_0] 1 +
jz loc_100789C  +
push esi  +
call ??_V@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
jmp loc_10078B5  +
call sub_1007793  +
test [ebp+arg_0] 1 +
jz loc_10078B3  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
cmp dword_1067D8C ebx +
jnz loc_10078D3  +
xor eax eax +
jmp loc_1007905  +
push edi  +
xor edi edi +
cmp dword_1067D90 ebx +
jle loc_1007902  +
push esi  +
mov esi [ebp+arg_0] +
imul esi esi +
mov eax dword_1067D94 +
lea ecx [esi+eax+4] +
call sub_100CD83  +
add ebx eax +
inc edi  +
add esi 28h +
cmp edi dword_1067D90 +
jl loc_10078E5  +
pop esi  +
mov eax ebx +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
cmp dword_1067D90 ebx +
mov [ebp+var_4] ebx +
jle loc_100795E  +
push esi  +
push edi  +
mov esi offset off_1017074 +
mov edi ebx +
mov eax dword_1067D94 +
mov ecx [esi] +
lea eax [edi+eax+4] +
push eax  +
call sub_100CDC0  +
add esi 4 +
add edi 0Ch +
cmp esi offset dword_1017080 +
jl loc_100792C  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add ebx 28h +
cmp eax dword_1067D90 +
jl loc_1007925  +
pop edi  +
pop esi  +
mov ecx dword_1067D94 +
pop ebx  +
test ecx ecx +
jz loc_1007970  +
push 3  +
call sub_100786E  +
and dword_1067D94 0 +
leave   +
retn   +
***
test eax eax +
jz loc_1007991  +
mov al 1 +
retn   +
push ebx  +
push esi  +
push edi  +
mov edi offset unk_10277CC +
push edi  +
call ds:AcquireSRWLockExclusive  +
mov eax dword_1067D90 +
xor esi esi +
test eax eax +
jle loc_10079BE  +
mov ecx dword_1067D94 +
cmp dword ptr [ecx] 0FFFFFFFFh +
jz loc_10079FC  +
inc esi  +
add ecx 28h +
cmp esi eax +
jl loc_10079B1  +
xor esi esi +
test eax eax +
jle loc_10079F8  +
xor ebx ebx +
mov ecx dword_1067D94 +
mov ecx [ebx+ecx] +
cmp ecx 0FFFFFFFFh +
jz loc_10079F0  +
push ecx  +
push 0  +
push 40h  +
call ds:OpenThread  +
cmp eax 0FFFFFFFFh +
jz loc_10079FC  +
push eax  +
call ds:CloseHandle  +
mov eax dword_1067D90 +
inc esi  +
add ebx 28h +
cmp esi eax +
jl loc_10079C6  +
xor bl bl +
jmp loc_1007A26  +
imul esi esi +
call ds:GetCurrentThreadId  +
mov ecx dword_1067D94 +
mov [esi+ecx] eax +
mov eax dword_1067D94 +
lea eax [esi+eax+4] +
push eax  +
push dwTlsIndex  +
call ds:TlsSetValue  +
mov bl 1 +
push edi  +
call ds:ReleaseSRWLockExclusive  +
pop edi  +
pop esi  +
mov al bl +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ds:TlsAlloc +
call esi  +
mov dword_1017080 eax +
cmp eax 0FFFFFFFFh +
jnz loc_1007A54  +
pop esi  +
jmp ds:GetLastError  +
push 1  +
push eax  +
call ds:TlsSetValue  +
test eax eax +
jnz loc_1007A68  +
pop esi  +
jmp ds:GetLastError  +
call esi  +
mov dwTlsIndex eax +
cmp eax 0FFFFFFFFh +
jnz loc_1007A7B  +
pop esi  +
jmp ds:GetLastError  +
call sub_10077AE  +
test al al +
jnz loc_1007A8B  +
pop esi  +
jmp ds:GetLastError  +
xor esi esi +
push esi  +
call ds:CreateThreadpool  +
mov dword_1067D84 eax +
cmp eax esi +
jnz loc_1007AA4  +
pop esi  +
jmp ds:GetLastError  +
push dword_1067D90  +
push eax  +
call ds:SetThreadpoolThreadMaximum  +
call ds:CreateThreadpoolCleanupGroup  +
mov dword_1067D88 eax +
cmp eax esi +
jnz loc_1007AC7  +
pop esi  +
jmp ds:GetLastError  +
mov ecx dword_1067D84 +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword_10277DC ecx +
mov dword_10277E0 eax +
mov dword_10277E4 esi +
call ds:CreateEventW  +
mov hEvent eax +
cmp eax esi +
jz loc_1007AFA  +
cmp eax 0FFFFFFFFh +
jz loc_1007AFA  +
xor eax eax +
pop esi  +
retn   +
pop esi  +
jmp ds:GetLastError  +
***
mov edi edi +
push esi  +
xor esi esi +
cmp dword_1067D8C esi +
jz loc_1007B37  +
push edi  +
call ds:GetLastError  +
push dword_1017080  +
mov edi eax +
call ds:TlsGetValue  +
mov esi eax +
neg esi  +
sbb esi esi +
push edi  +
inc esi  +
call ds:SetLastError  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
xor esi esi +
cmp dword_1067D8C esi +
jz loc_1007B72  +
push edi  +
call ds:GetLastError  +
push dword_1017080  +
mov edi eax +
call ds:TlsGetValue  +
mov esi eax +
neg esi  +
sbb esi esi +
push edi  +
neg esi  +
call ds:SetLastError  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1007BA0  +
push edi  +
mov ecx esi +
call sub_100D25A  +
mov ecx esi +
mov edi eax +
call sub_1003265  +
mov esi edi +
test edi edi +
jnz loc_1007B89  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6A4h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_1067C90 0 +
jnz loc_1007BE9  +
lea ecx [ebp+var_6A4] +
call sub_100B71C  +
lea ecx [ebp+var_6A4] +
call sub_100A813  +
lea ecx [ebp+var_6A4] +
call sub_100B01A  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1011DD7  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
lea eax [ebp+Luid] +
push eax  +
push [ebp+lpName]  +
push 0  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jnz loc_1007C19  +
xor eax eax +
jmp locret_1007C57  +
mov eax [ebp+Luid.LowPart] +
push 0  +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
push 0  +
push 10h  +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
lea eax [ebp+NewState] +
push eax  +
push 0  +
push [ebp+TokenHandle]  +
mov [ebp+NewState.PrivilegeCount] 1 +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:AdjustTokenPrivileges  +
test eax eax +
jz loc_1007C15  +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetCurrentProcessId  +
push eax  +
push 0  +
push 400h  +
call ds:OpenProcess  +
test eax eax +
jz loc_1007C89  +
push [ebp+TokenHandle]  +
push 28h  +
push eax  +
call ds:OpenProcessToken  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov dword ptr [ebp+DueTime] esi +
mov dword ptr [ebp+DueTime+4] esi +
or [ebp+var_4] 0FFFFFFFFh +
mov eax dword_1067CA8 +
mov [ebp+var_8] esi +
cmp dword_1067CA4 esi +
jnz loc_1007CCC  +
cmp eax esi +
jz loc_1007E6F  +
xor ebx ebx +
inc ebx  +
mov dword_1067CA4 ebx +
jmp loc_1007CCF  +
xor ebx ebx +
inc ebx  +
cmp eax esi +
jnz loc_1007CD9  +
mov dword_1067CA8 ebx +
cmp dword_1067C94 esi +
jz loc_1007CE9  +
cmp dword_1067D34 ebx +
jnz loc_1007CEB  +
xor ebx ebx +
push 1Bh  +
pop edi  +
cmp dword_1017044 esi +
jz loc_1007CF9  +
push 1Fh  +
pop edi  +
cmp dword_1067CBC esi +
jz loc_1007D07  +
or edi 100h +
mov ecx dword_1067C20 +
lea eax [ebp+var_C] +
push eax  +
call sub_100D953  +
mov eax [eax] +
push edi  +
push ebx  +
push eax  +
call ds:FindFirstChangeNotificationW  +
lea ecx [ebp+var_C] +
mov [ebp+hChangeHandle] eax +
call ??1CString@@QAE@XZ  +
cmp [ebp+hChangeHandle] 0FFFFFFFFh +
jnz loc_1007D60  +
push dword_1067C20  +
push 23A7h  +
call sub_100B931  +
push esi  +
call sub_100CB4B  +
mov eax dword_1067CA4 +
imul eax eax +
push eax  +
call ds:Sleep  +
cmp [ebp+hChangeHandle] 0FFFFFFFFh +
jz loc_1007D07  +
push esi  +
push esi  +
push esi  +
call ds:CreateWaitableTimerW  +
mov [ebp+hObject] eax +
cmp eax esi +
jz loc_1007E56  +
push esi  +
push esi  +
push esi  +
push 0EA60h  +
lea ecx [ebp+DueTime] +
push ecx  +
push eax  +
call ds:SetWaitableTimer  +
test eax eax +
jz loc_1007E38  +
push dword_1067CA8  +
call sub_100CB4B  +
push 0FFFFFFFFh  +
push esi  +
lea eax [ebp+hChangeHandle] +
push eax  +
push 2  +
call ds:WaitForMultipleObjects  +
cmp eax esi +
jz loc_1007E24  +
cmp eax 1 +
jnz loc_1007E38  +
push [ebp+var_8]  +
inc [ebp+var_4]  +
push [ebp+var_4]  +
call sub_100CB8B  +
mov eax [ebp+var_4] +
cmp eax dword_1067CA4 +
jl loc_1007D9A  +
mov eax [ebp+var_8] +
cmp eax dword_1067CA8 +
jl loc_1007D9A  +
push [ebp+hObject]  +
call ds:CloseHandle  +
push [ebp+hChangeHandle]  +
call ds:FindCloseChangeNotification  +
call sub_1007651  +
mov ecx dword_1067C20 +
push 3  +
call sub_100D450  +
push 1  +
push 7  +
call sub_100A38C  +
push esi  +
call ds:time  +
pop ecx  +
push eax  +
push 20h  +
call sub_100CCBF  +
call sub_100BAE6  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push [ebp+hChangeHandle]  +
inc [ebp+var_8]  +
call ds:FindNextChangeNotification  +
test eax eax +
jnz loc_1007D9A  +
push dword_1067C20  +
push 23A7h  +
call sub_100B931  +
push [ebp+hObject]  +
call ds:CloseHandle  +
jmp loc_1007CA5  +
push dword_1067C20  +
push 23A7h  +
call sub_100B931  +
push [ebp+hChangeHandle]  +
call ds:FindCloseChangeNotification  +
xor eax eax +
jmp loc_1007E1F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
call sub_1007B06  +
xor esi esi +
mov [ebp+var_4] eax +
cmp [ebp+arg_C] esi +
jnz loc_1007E97  +
cmp [ebp+arg_8] esi +
jz loc_1007E9F  +
cmp dword_1067CD4 esi +
jz loc_1007EB5  +
cmp [ebp+hFile] 0FFFFFFFFh +
jz loc_1007EB5  +
push offset LastWriteTime  +
push esi  +
push esi  +
push [ebp+hFile]  +
call ds:SetFileTime  +
cmp [ebp+arg_30] esi +
jz loc_1007F6C  +
cmp dword_1067C84 esi +
jnz loc_1007F6C  +
mov eax [ebp+arg_8] +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_8] eax +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
mov [ebp+var_14] edi +
mov [ebp+var_10] esi +
call sub_100743F  +
mov ebx [ebp+var_14] +
test ebx ebx +
jnz loc_1007F0D  +
cmp [ebp+var_4] ebx +
jnz loc_1007F04  +
push 64h  +
call sub_100CC24  +
jmp loc_1007F72  +
mov eax [ebp+arg_30] +
mov byte ptr [eax+1Ch] 64h +
jmp loc_1007F6C  +
test esi esi +
jnz loc_1007F37  +
test edi edi +
js loc_1007F37  +
cmp edi 5B8D80h +
ja loc_1007F37  +
mov eax [ebp+var_C] +
imul eax eax +
xor edx edx +
div  ebx +
cmp [ebp+var_4] esi +
jnz loc_1007F2F  +
push eax  +
jmp loc_1007EFD  +
mov ecx [ebp+arg_30] +
mov [ecx+1Ch] al +
jmp loc_1007F6C  +
mov eax [ebp+var_C] +
imul eax eax +
xor edx edx +
div  ebx +
cmp [ebp+var_4] 0 +
mov ecx eax +
jnz loc_1007F66  +
mov eax [ebp+var_C] +
imul eax eax +
xor edx edx +
div  ebx +
push 0Ah  +
pop esi  +
xor edx edx +
div  esi +
push edx  +
push ecx  +
call sub_100CC65  +
jmp loc_1007F72  +
mov eax [ebp+arg_30] +
mov [eax+1Ch] cl +
cmp [ebp+var_4] 0 +
jnz loc_1007F82  +
mov eax dword_1067D5C +
test eax eax +
jz loc_1007F82  +
push eax  +
call ds:Sleep  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 34h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp dword_1067CB4 0 +
jz locret_1007FE3  +
call sub_1007B06  +
test eax eax +
jnz locret_1007FE3  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_10075DC  +
test eax eax +
jnz locret_1007FE3  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_100CBD1  +
jmp loc_1007FD2  +
push 2710h  +
call ds:Sleep  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_10075DC  +
test eax eax +
jz loc_1007FC7  +
leave   +
retn   +
***
call __EH_prolog3  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-18h] ecx +
xor ebx ebx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_1008015  +
call sub_100CEE7  +
mov edi eax +
jmp loc_1008017  +
xor edi edi +
mov ecx [ebp+8] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-14h] +
push eax  +
call sub_100D2E3  +
push eax  +
mov ecx edi +
mov dword ptr [ebp-4] 1 +
call sub_100D263  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax dword_1067E1C +
mov [ebp-10h] eax +
cmp eax ebx +
jz loc_10080AC  +
lea eax [ebp-10h] +
push eax  +
mov ecx offset unk_1067E18 +
call sub_1003175  +
lea ecx [ebp-14h] +
push ecx  +
mov ecx [eax] +
call sub_1010D89  +
mov dword ptr [ebp-4] 2 +
call sub_1007F90  +
push Data  +
lea eax [ebp-14h] +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
push dword_1067D64  +
push ebx  +
push 1  +
push eax  +
call sub_100E570  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
cmp eax ebx +
jz loc_10080A7  +
call ??1CString@@QAE@XZ  +
cmp [ebp-10h] ebx +
jnz loc_100804E  +
jmp loc_10080AC  +
call ??1CString@@QAE@XZ  +
mov eax dword_1067E70 +
mov [ebp-10h] eax +
cmp eax ebx +
jz loc_1008116  +
lea eax [ebp-10h] +
push eax  +
mov ecx offset unk_1067E6C +
call sub_1003175  +
lea ecx [ebp-18h] +
push ecx  +
mov ecx [eax] +
call sub_1010D89  +
mov dword ptr [ebp-4] 3 +
call sub_1007F90  +
push Data  +
lea eax [ebp-18h] +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
push dword_1067D64  +
push 1  +
push ebx  +
push eax  +
call sub_100E570  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
cmp eax ebx +
jz loc_1008111  +
call ??1CString@@QAE@XZ  +
cmp [ebp-10h] ebx +
jnz loc_10080B8  +
jmp loc_1008116  +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+8] +
push 9  +
push edi  +
call sub_100E82D  +
mov ecx edi +
call sub_1003265  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
mov eax dword_1067EFC +
mov [ebp-14h] eax +
test eax eax +
jz loc_10081A6  +
lea eax [ebp-14h] +
push eax  +
mov ecx offset unk_1067EF8 +
call sub_1003175  +
lea ecx [ebp-10h] +
push ecx  +
mov ecx [eax] +
call sub_1010D89  +
and dword ptr [ebp-4] 0 +
call sub_1007F90  +
push Data  +
mov ecx [ebp+8] +
push dword ptr [ebp+14h]  +
lea eax [ebp-10h] +
push dword_1067D64  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100E570  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
test eax eax +
jz loc_10081B1  +
call ??1CString@@QAE@XZ  +
cmp dword ptr [ebp-14h] 0 +
jnz loc_100814D  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 14h  +
call ??1CString@@QAE@XZ  +
xor eax eax +
jmp loc_10081A9  +
***
call __EH_prolog3  +
mov eax dword_1067D34 +
xor edi edi +
inc edi  +
test eax eax +
jz loc_10081E1  +
cmp dword_1067D38 eax +
jl loc_10081E1  +
xor edi edi +
cmp dword_1067C58 0 +
jz loc_10082A3  +
call sub_1007F90  +
mov esi offset a_ +
push esi  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
push Data  +
mov ecx [ebp+8] +
and dword ptr [ebp-4] 0 +
push 238Fh  +
push dword_1067D64  +
lea eax [ebp-10h] +
push edi  +
push 1  +
push eax  +
call sub_100E570  +
mov ebx eax +
neg ebx  +
sbb bl bl +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1008241  +
xor eax eax +
jmp loc_100829B  +
mov ecx [ebp+8] +
call sub_100D478  +
xor ebx ebx +
inc ebx  +
cmp eax ebx +
jz loc_1008298  +
call sub_1007F90  +
push esi  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
push Data  +
mov [ebp-4] ebx +
push 2390h  +
push dword_1067D64  +
push edi  +
push ebx  +
mov ecx [ebp+0Ch] +
lea eax [ebp+8] +
push eax  +
call sub_100E570  +
lea ecx [ebp+8] +
mov ebx eax +
neg ebx  +
sbb bl bl +
or dword ptr [ebp-4] 0FFFFFFFFh +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jnz loc_100823D  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 8  +
call sub_1007F90  +
push Data  +
mov ebx 238Fh +
push ebx  +
push edi  +
push 1  +
push dword ptr [ebp+8]  +
call sub_1008135  +
test eax eax +
jz loc_100823D  +
cmp dword_1067C94 0 +
mov esi offset a_ +
jnz loc_10082DE  +
cmp dword_1067C68 0 +
jz loc_100832B  +
call sub_1007F90  +
push esi  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
push Data  +
mov ecx [ebp+8] +
push ebx  +
push dword_1067D64  +
lea eax [ebp-10h] +
push edi  +
push 0  +
push eax  +
mov dword ptr [ebp-4] 2 +
call sub_100E570  +
mov ebx eax +
neg ebx  +
sbb bl bl +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jnz loc_100823D  +
mov ecx [ebp+8] +
call sub_100D478  +
cmp eax 1 +
jz loc_1008298  +
cmp dword_1067C68 0 +
jz loc_1008373  +
call sub_1007F90  +
push esi  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
push Data  +
mov dword ptr [ebp-4] 3 +
push 2390h  +
push dword_1067D64  +
push edi  +
push 1  +
jmp loc_1008274  +
call sub_1007F90  +
push Data  +
mov ebx 2390h +
push ebx  +
push edi  +
push 1  +
push dword ptr [ebp+0Ch]  +
call sub_1008135  +
test eax eax +
jz loc_100823D  +
cmp dword_1067C94 0 +
jz loc_1008298  +
call sub_1007F90  +
push esi  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@PBG@Z  +
push Data  +
mov ecx [ebp+0Ch] +
push ebx  +
push dword_1067D64  +
lea eax [ebp-14h] +
push edi  +
push 0  +
push eax  +
mov dword ptr [ebp-4] 4 +
call sub_100E570  +
lea ecx [ebp-14h] +
jmp loc_1008283  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1007B06  +
test eax eax +
jz loc_100841A  +
mov eax [ebp+arg_0] +
mov cl [eax+1Dh] +
cmp cl 2 +
jnz loc_100840C  +
cmp [ebp+arg_4] offset unk_1067E50 +
setnz cl  +
lea ecx [ecx+ecx+4] +
mov [eax+1Dh] cl +
push hEvent  +
call ds:SetEvent  +
jmp loc_1008456  +
push esi  +
call sub_1007B40  +
mov esi [ebp+arg_0] +
test eax eax +
jz loc_100842E  +
mov al [esi+1Dh] +
cmp al 3 +
jz loc_1008455  +
cmp [ebp+arg_8] 0 +
jz loc_100843F  +
push esi  +
mov ecx offset unk_1067DE8 +
call sub_1010EF6  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_1010EF6  +
test esi esi +
jz loc_1008455  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+4]  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov ebx [ebp+8] +
mov ecx ebx +
call sub_100D478  +
mov [ebp-10h] eax +
call sub_1007B06  +
test eax eax +
jnz loc_100863B  +
cmp dword_1067C88 eax +
jnz loc_100863B  +
cmp dword ptr [ebp-10h] 0Eh +
jz loc_100863B  +
push Data  +
mov edi [ebp+0Ch] +
mov esi 238Eh +
push esi  +
push dword_1067D60  +
mov ecx edi +
call sub_100DAF5  +
mov [ebp-14h] eax +
call sub_1007F90  +
cmp dword ptr [ebp-10h] 1 +
jnz loc_100851C  +
push Data  +
lea ebx [esi+6] +
push ebx  +
push dword_1067D60  +
mov ecx edi +
push dword ptr [ebp+8]  +
call sub_100DD9E  +
test eax eax +
jnz loc_1008519  +
call ds:GetLastError  +
push Data  +
mov ecx edi +
push esi  +
push dword_1067D60  +
mov [ebp+0Ch] eax +
call sub_100DAF5  +
test eax eax +
jnz loc_1008519  +
push dword ptr [ebp+0Ch]  +
call ds:SetLastError  +
push edi  +
push ebx  +
call sub_100B931  +
jmp loc_100863E  +
mov ebx [ebp+8] +
push Data  +
mov ecx ebx +
push esi  +
push edi  +
call sub_100E1D7  +
test eax eax +
jnz loc_1008536  +
xor eax eax +
jmp loc_100863E  +
mov eax dword_1067CBC +
xor esi esi +
cmp eax esi +
jz loc_1008560  +
cmp dword_1067CD8 esi +
jz loc_1008646  +
push esi  +
push 23A2h  +
push eax  +
push edi  +
mov ecx ebx +
call sub_100E056  +
test eax eax +
jz loc_100852F  +
cmp dword_1067CB8 esi +
jz loc_100857F  +
push Data  +
mov ecx ebx +
push 2398h  +
push edi  +
call sub_100E381  +
test eax eax +
jz loc_100852F  +
cmp dword_1067CDC esi +
jz loc_10085FD  +
cmp dword_1067C88 esi +
jnz loc_10085FD  +
cmp dword ptr [ebp-10h] 1 +
jnz loc_10085FD  +
lea eax [ebp+0Ch] +
push eax  +
mov ecx edi +
call sub_100D953  +
push dword ptr [eax]  +
call ds:GetFileAttributesW  +
lea ecx [ebp+0Ch] +
mov esi eax +
call ??1CString@@QAE@XZ  +
cmp esi 0FFFFFFFFh +
jz loc_100852F  +
mov ecx ebx +
call sub_100D694  +
xor eax esi +
mov esi 4000h +
test eax esi +
jz loc_10085FB  +
lea eax [ebp+8] +
push eax  +
mov ecx edi +
call sub_100D953  +
and dword ptr [ebp-4] 0 +
mov ecx ebx +
call sub_100D694  +
and eax esi +
push eax  +
lea eax [ebp+8] +
push eax  +
call sub_100EEFE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
xor esi esi +
cmp dword_1017044 esi +
jz loc_1008632  +
cmp dword ptr [ebp-10h] 3 +
jz loc_1008632  +
push Data  +
mov ecx ebx +
push 239Ch  +
push dword_1067D30  +
push dword_1067D2C  +
push edi  +
call sub_100DF13  +
test eax eax +
jz loc_100852F  +
push 0Eh  +
mov ecx ebx +
call sub_100D450  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 8  +
cmp [ebp-14h] esi +
jz loc_1008657  +
cmp dword_1067CA0 esi +
jz loc_1008560  +
push esi  +
push 23A2h  +
push eax  +
push edi  +
mov ecx ebx +
call sub_100E8C6  +
jmp loc_100855C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
call sub_1007F90  +
cmp dword_1067C88 0 +
mov esi [ebp+arg_0] +
jnz loc_10086A7  +
push 0FFFFFFFFh  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_101048C  +
test eax eax +
jnz loc_10086A7  +
push esi  +
push [ebp+arg_4]  +
call sub_100BA0B  +
mov ecx offset unk_1067EE0 +
jmp loc_10086AC  +
mov ecx offset unk_1067EB0 +
push esi  +
call sub_1010EF6  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
call sub_1007F90  +
cmp dword_1067C88 0 +
mov esi [ebp+arg_0] +
jnz loc_1008706  +
push 0FFFFFFFFh  +
push [ebp+arg_4]  +
mov ecx esi +
push dword_1067D60  +
call sub_100E2CF  +
test eax eax +
jnz loc_1008706  +
call ds:GetLastError  +
cmp eax 91h +
jz loc_10086FF  +
push esi  +
push [ebp+arg_4]  +
call sub_100B931  +
mov ecx offset unk_1067EE0 +
jmp loc_100870B  +
mov ecx offset unk_1067EB0 +
push esi  +
call sub_1010ED7  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
call sub_1007B06  +
mov [ebp+var_4] eax +
call sub_1007F90  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp [ebp+var_4] ebx +
jnz loc_1008750  +
mov edi 1005h +
push edi  +
mov ecx esi +
call sub_100ED61  +
push ebx  +
push edi  +
push esi  +
call sub_100C80B  +
cmp dword_1067C88 ebx +
jz loc_100876B  +
push [ebp+arg_8]  +
push offset unk_1067DB0  +
push esi  +
call sub_10083E2  +
jmp loc_1008910  +
mov edi [ebp+arg_4] +
push edi  +
mov ecx esi +
call sub_100EC57  +
push eax  +
call sub_100845F  +
test eax eax +
jnz loc_100878A  +
push [ebp+arg_8]  +
push offset unk_1067E50  +
jmp loc_1008760  +
push ebx  +
call sub_10073D2  +
mov ecx eax +
call sub_100CDDD  +
cmp dword_1067C60 ebx +
jz loc_10087C3  +
push Data  +
mov ecx esi +
push 2393h  +
push edi  +
call sub_100F107  +
test eax eax +
jnz loc_1008822  +
push [ebp+arg_8]  +
push offset unk_1067E50  +
jmp loc_10088FD  +
cmp dword_1017040 ebx +
jz loc_1008822  +
cmp [ebp+var_4] ebx +
jz loc_10087EF  +
cmp dword_1067CDC ebx +
jz loc_10087EF  +
mov ecx esi +
call sub_100ED29  +
test eax 4000h +
jz loc_10087EF  +
mov byte ptr [esi+1Dh] 3 +
jmp loc_10088F5  +
push Data  +
mov ecx esi +
push 2395h  +
push dword_1017044  +
push dword_101704C  +
push dword_1067CD8  +
push dword_1067CD4  +
push dword_1017050  +
push edi  +
call sub_100FF9C  +
jmp loc_10087B2  +
mov eax dword_1067CBC +
cmp eax ebx +
jz loc_100884A  +
push ebx  +
push 23A3h  +
push eax  +
mov ecx esi +
push edi  +
cmp dword_1067CD8 ebx +
jz loc_10088BA  +
call sub_10102AC  +
test eax eax +
jz loc_10087B6  +
cmp dword_1017048 ebx +
jz loc_1008873  +
push Data  +
mov ecx esi +
push 2397h  +
push dword_1017044  +
push edi  +
call sub_100ED75  +
test eax eax +
jz loc_10087B6  +
mov edi 239Ch +
cmp dword_1017044 ebx +
jz loc_10088A5  +
push Data  +
mov ecx esi +
push edi  +
push dword_1067D30  +
push dword_1067D2C  +
push [ebp+arg_4]  +
call sub_100EFA9  +
test eax eax +
jz loc_10087B6  +
cmp dword_1067CC8 ebx +
jz loc_10088C1  +
push 239Bh  +
push esi  +
call sub_1008670  +
jmp loc_10088F5  +
call sub_1010A10  +
jmp loc_1008842  +
cmp dword_1067CE8 ebx +
jz loc_10088F5  +
mov ecx esi +
call sub_100ED29  +
test al 20h +
jz loc_10088F5  +
push Data  +
mov ecx esi +
push edi  +
call sub_100ED29  +
and eax 0FFFFFFDFh +
push eax  +
mov ecx esi +
call sub_100FF0B  +
test eax eax +
jz loc_10087B6  +
push [ebp+arg_8]  +
push offset unk_1067DB0  +
push esi  +
call sub_10083E2  +
push ebx  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov ecx ebx +
call sub_100ED3B  +
xor esi esi +
cmp eax 3 +
jz loc_1008948  +
cmp eax 5 +
jz loc_1008948  +
cmp eax 4 +
jz loc_1008948  +
cmp eax 6 +
jz loc_1008948  +
xor edi edi +
jmp loc_100894B  +
xor edi edi +
inc edi  +
cmp dword_1067C64 esi +
jz loc_100897B  +
cmp edi esi +
jz loc_100896F  +
cmp dword_1067CC4 esi +
jnz loc_1008967  +
cmp dword_1067CC0 esi +
jz loc_100896F  +
push esi  +
push 11F9h  +
jmp loc_1008975  +
push esi  +
push 1069h  +
push ebx  +
call sub_100C80B  +
cmp dword_1067C88 esi +
jnz loc_1008A53  +
cmp edi esi +
jz loc_1008A53  +
mov edi [ebp+arg_4] +
cmp dword_1067CC4 esi +
jz loc_1008A06  +
push edi  +
mov ecx ebx +
call sub_100EC57  +
push eax  +
call sub_100845F  +
push esi  +
call sub_10073D2  +
mov ecx eax +
call sub_100CDDD  +
push esi  +
push 23A3h  +
push dword_1067CBC  +
mov ecx ebx +
push edi  +
cmp dword_1067CD8 esi +
jz loc_10089F2  +
call sub_10102AC  +
test eax eax +
jnz loc_10089F9  +
push [ebp+arg_8]  +
push offset unk_1067E50  +
push ebx  +
call sub_10083E2  +
push esi  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
jmp loc_1008A61  +
call sub_1010A10  +
jmp loc_10089D1  +
push esi  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
cmp dword_1067CC0 esi +
jz loc_1008A53  +
push edi  +
mov ecx ebx +
call sub_100EC57  +
push eax  +
call sub_100845F  +
push esi  +
call sub_10073D2  +
mov ecx eax +
call sub_100CDDD  +
push Data  +
mov ecx ebx +
push 2397h  +
push dword_1017044  +
push edi  +
call sub_100ED75  +
test eax eax +
jz loc_10089D5  +
push esi  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
push [ebp+arg_8]  +
push offset unk_1067E00  +
push ebx  +
call sub_10083E2  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
call sub_1007F90  +
push offset a_  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
push Data  +
mov ebx [ebp+8] +
push 239Fh  +
push dword_1067D64  +
lea eax [ebp-10h] +
push 1  +
push 1  +
xor edi edi +
push eax  +
mov ecx ebx +
mov [ebp-4] edi +
call sub_100E570  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
jmp loc_1008AFA  +
push 1  +
mov ecx esi +
call sub_100ED44  +
push dword_1067CD0  +
push 1195h  +
push esi  +
call sub_100C80B  +
cmp dword_1067CD0 edi +
jz loc_1008AEE  +
push 239Dh  +
push esi  +
call sub_1008670  +
push edi  +
push offset unk_1067E98  +
push esi  +
call sub_10083E2  +
mov ecx ebx +
call sub_100D82B  +
mov esi eax +
cmp esi edi +
jnz loc_1008AC1  +
jmp loc_1008B72  +
push 1  +
mov ecx esi +
call sub_100ED44  +
push dword_1067CD0  +
push 1131h  +
push esi  +
call sub_100C80B  +
cmp dword_1067CD0 edi +
jz loc_1008B66  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+8] eax +
mov dword ptr [ebp-4] 1 +
cmp eax edi +
jz loc_1008B4A  +
mov ecx eax +
call sub_100CEE7  +
mov edi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
push esi  +
mov ecx edi +
call sub_100D77E  +
push edi  +
call sub_1008A6D  +
mov ecx edi +
call sub_1003265  +
xor edi edi +
push edi  +
push offset unk_1067E98  +
push esi  +
call sub_10083E2  +
mov ecx ebx +
call sub_100D83A  +
mov esi eax +
cmp esi edi +
jnz loc_1008B09  +
push 239Eh  +
push ebx  +
call sub_10086BC  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_100797E  +
push 2  +
call sub_10073D2  +
mov ecx eax +
call sub_100CDDD  +
mov eax [ebp+0Ch] +
push 1  +
push dword ptr [eax+2Ch]  +
mov byte ptr [eax+1Dh] 2 +
push eax  +
call sub_100871B  +
push dword ptr [ebp+10h]  +
call ds:CloseThreadpoolWork  +
push 2  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset unk_10277D8  +
push [ebp+arg_0]  +
push offset loc_1008B97  +
call ds:CreateThreadpoolWork  +
test eax eax +
jnz loc_1008C1C  +
push 1  +
push offset unk_1067E50  +
push [ebp+arg_0]  +
call sub_10083E2  +
push 0  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
jmp loc_1008C23  +
push eax  +
call ds:SubmitThreadpoolWork  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov ebx [ebp+8] +
mov ecx ebx +
mov byte ptr [ebp-0Dh] 0 +
call sub_100D82B  +
mov edi [ebp+0Ch] +
mov esi eax +
test esi esi +
jz loc_1008CC2  +
mov ecx off_101710C +
mov edx ecx +
mov ecx [ecx] +
lea eax [esi+14h] +
mov [eax] ecx +
mov [ecx+4] eax +
mov [edx] eax +
mov [eax+4] edx +
and dword ptr [esi+20h] 0 +
mov byte ptr [esi+1Dh] 1 +
mov byte ptr [esi+1Ch] 0 +
mov [esi+2Ch] edi +
inc dword ptr [edi+54h]  +
cmp byte ptr [ebp-0Dh] 0 +
jnz loc_1008C8D  +
push edi  +
push ebx  +
call sub_100845F  +
and dword ptr [ebx+58h] 0 +
mov byte ptr [ebp-0Dh] 1 +
cmp dword_1067CDC 0 +
jz loc_1008CAA  +
mov ecx esi +
call sub_100ED29  +
test eax 4000h +
jz loc_1008CAA  +
mov byte ptr [esi+1Dh] 3 +
jmp loc_1008CB0  +
push esi  +
call sub_1008BE1  +
mov ecx ebx +
call sub_100D82B  +
mov esi eax +
test esi esi +
jnz loc_1008C4F  +
cmp [ebp-0Dh] al +
jnz loc_1008D10  +
push edi  +
push ebx  +
call sub_100845F  +
xor esi esi +
push 58h  +
mov [ebx+58h] esi +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+8] eax +
mov [ebp-4] esi +
cmp eax esi +
jz loc_1008CE9  +
mov ecx eax +
call sub_100E918  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
mov ecx esi +
call sub_100EA68  +
mov byte ptr [esi+1Dh] 7 +
mov ecx off_101710C +
mov edx ecx +
mov ecx [ecx] +
lea eax [esi+14h] +
mov [eax] ecx +
mov [ecx+4] eax +
mov [edx] eax +
mov [eax+4] edx +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
lea eax [ebp+Frequency] +
push eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_1] bl +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_24] ebx +
mov dword ptr [ebp+Frequency] ebx +
mov dword ptr [ebp+Frequency+4] ebx +
call ds:QueryPerformanceFrequency  +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
add dword ptr [ebp+PerformanceCount] 0FFFFFFFFh +
adc dword ptr [ebp+PerformanceCount+4] 0FFFFFFFFh +
mov eax off_1017108 +
mov ecx offset off_1017108 +
cmp eax ecx +
jnz loc_1008D81  +
cmp off_1017110 offset off_1017110 +
jz loc_100914B  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ecx +
jz loc_100907A  +
add esi 0FFFFFFECh +
cmp esi [ebp+var_C] +
jz loc_1008E56  +
cmp dword_1067C70 ebx +
jnz loc_1008E0D  +
mov ecx esi +
call sub_100EC57  +
cmp [eax+58h] ebx +
jnz loc_1008E0D  +
mov ecx esi +
call sub_100EC57  +
mov ecx eax +
call sub_100D478  +
mov ecx esi +
mov edi eax +
call sub_100EC57  +
mov ecx eax +
call sub_100D481  +
push eax  +
mov ecx esi +
call sub_100EC57  +
mov ecx eax +
call sub_100D450  +
push 1  +
push ebx  +
push 10CDh  +
mov ecx esi +
call sub_100EC57  +
push eax  +
call sub_100C6EE  +
push edi  +
mov ecx esi +
call sub_100EC57  +
mov ecx eax +
call sub_100D450  +
mov ecx esi +
call sub_100EC57  +
mov dword ptr [eax+58h] 1 +
mov al [esi+1Dh] +
cmp al 7 +
jnz loc_1008E41  +
mov eax [ebp+var_8] +
mov eax [eax] +
mov [ebp+var_8] eax +
lea eax [esi+14h] +
mov ecx [eax] +
mov edx [eax+4] +
mov [ecx+4] edx +
mov ecx [eax+4] +
mov edx [eax] +
mov [ecx] edx +
mov [eax] eax +
mov [eax+4] eax +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+4]  +
jmp loc_100906B  +
mov edi 1005h +
push edi  +
mov ecx esi +
call sub_100ED61  +
push ebx  +
push edi  +
push esi  +
call sub_100C80B  +
mov al [esi+1Dh] +
movzx eax al +
dec eax  +
jz loc_1009026  +
dec eax  +
jz loc_1008FAD  +
dec eax  +
jz loc_1008E79  +
dec eax  +
jz loc_1008EBC  +
dec eax  +
dec eax  +
jz loc_1008E8D  +
jmp loc_100903D  +
push 1  +
push dword ptr [esi+2Ch]  +
push esi  +
call sub_100871B  +
cmp [esi+20h] ebx +
jnz loc_1008EBC  +
mov byte ptr [esi+1Dh] 6 +
mov eax [ebp+var_8] +
mov eax [eax] +
mov [ebp+var_8] eax +
lea eax [esi+14h] +
mov ecx [eax] +
mov edx [eax+4] +
mov [ecx+4] edx +
mov ecx [eax+4] +
mov edx [eax] +
mov [ecx] edx +
push 64h  +
mov [eax] eax +
mov [eax+4] eax +
call sub_100CC24  +
push 1  +
push offset unk_1067DB0  +
jmp loc_1008F23  +
mov eax [esi+20h] +
cmp eax 8 +
jz loc_1008EDE  +
cmp eax 0Eh +
jz loc_1008EDE  +
cmp eax 46Ah +
jz loc_1008EDE  +
cmp eax 540h +
jz loc_1008EDE  +
cmp eax 8007000Eh +
jnz loc_1008EE2  +
mov [ebp+var_1] 1 +
mov eax [ebp+var_8] +
mov eax [eax] +
lea edi [esi+14h] +
mov ecx [edi+4] +
mov [ebp+var_8] eax +
mov eax [edi] +
mov [eax+4] ecx +
mov eax [edi+4] +
mov ecx [edi] +
mov [eax] ecx +
mov [edi] edi +
mov [edi+4] edi +
push dword ptr [esi+20h]  +
call ds:SetLastError  +
push esi  +
push dword ptr [esi+24h]  +
call sub_100BA0B  +
mov eax Data +
cmp eax ebx +
jge loc_1008F2E  +
push 1  +
push offset unk_1067E50  +
push esi  +
call sub_10083E2  +
jmp loc_1009068  +
mov ecx [esi+28h] +
cmp ecx eax +
lea edx [ecx+1] +
mov [esi+28h] edx +
jl loc_1008F49  +
push 1  +
push 0E3h  +
call sub_100A38C  +
jmp loc_1008F1C  +
cmp off_1017110 offset off_1017110 +
jnz loc_1008F91  +
lea eax [ebp+var_18] +
push eax  +
call ds:QueryPerformanceCounter  +
push ebx  +
push 3E8h  +
push dword ptr [ebp+Frequency+4]  +
push dword ptr [ebp+Frequency]  +
call __alldiv  +
mov ecx eax +
mov eax dwMilliseconds +
mov ebx edx +
cdq   +
push edx  +
push eax  +
push ebx  +
push ecx  +
call __allmul  +
add eax [ebp+var_18] +
adc edx [ebp+var_14] +
mov [ebp+var_28] eax +
mov [ebp+var_24] edx +
xor ebx ebx +
mov eax off_1017114 +
mov ecx eax +
mov eax [eax] +
mov [edi] eax +
mov [eax+4] edi +
mov [ecx] edi +
mov [edi+4] ecx +
mov byte ptr [esi+1Dh] 5 +
jmp loc_1009068  +
lea eax [ebp+var_18] +
push eax  +
call ds:QueryPerformanceCounter  +
cmp esi [ebp+var_C] +
jnz loc_1008FC7  +
mov al [esi+1Ch] +
movzx eax al +
cmp eax [ebp+var_10] +
jz loc_100903D  +
mov eax [ebp+var_14] +
cmp eax dword ptr [ebp+PerformanceCount+4] +
jl loc_100903D  +
jg loc_1008FD9  +
mov eax [ebp+var_18] +
cmp eax dword ptr [ebp+PerformanceCount] +
jb loc_100903D  +
mov al [esi+1Ch] +
movzx eax al +
mov [ebp+var_10] eax +
mov al [esi+1Ch] +
test al al +
jnz loc_1008FEE  +
cmp [esi+28h] ebx +
jg loc_1009032  +
mov al [esi+1Ch] +
movzx eax al +
push eax  +
call sub_100CC24  +
push ebx  +
push 3E8h  +
push dword ptr [ebp+Frequency+4]  +
push dword ptr [ebp+Frequency]  +
call __alldiv  +
push ebx  +
push 0C8h  +
push edx  +
push eax  +
call __allmul  +
add eax [ebp+var_18] +
adc edx [ebp+var_14] +
mov dword ptr [ebp+PerformanceCount] eax +
mov dword ptr [ebp+PerformanceCount+4] edx +
jmp loc_100903D  +
mov al [esi+1Ch] +
test al al +
jnz loc_100903D  +
cmp [esi+28h] ebx +
jle loc_100903D  +
push ebx  +
push 0E1h  +
call sub_100A38C  +
push ebx  +
push 0C8h  +
push hEvent  +
call ds:WaitForSingleObjectEx  +
sub eax ebx +
jz loc_1009068  +
sub eax 80h +
jz loc_1009068  +
sub eax 40h +
jz loc_1009068  +
sub eax 42h +
jnz loc_1009169  +
mov [ebp+var_C] esi +
mov esi [ebp+var_8] +
cmp esi offset off_1017108 +
jnz loc_1008D8E  +
mov edi offset off_1017110 +
cmp off_1017110 edi +
jz loc_100909A  +
mov eax dwMilliseconds +
cdq   +
mov ecx 3E8h +
idiv  ecx +
push eax  +
call sub_100C435  +
mov esi ds:QueryPerformanceCounter +
lea eax [ebp+var_18] +
push eax  +
call esi  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_24] +
jg loc_10090D2  +
jge loc_10090CA  +
push 1  +
push 64h  +
call ds:SleepEx  +
lea eax [ebp+var_18] +
push eax  +
call esi  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_24] +
jl loc_10090B0  +
jg loc_10090D2  +
mov eax [ebp+var_18] +
cmp eax [ebp+var_28] +
jb loc_10090B0  +
cmp [ebp+var_1] bl +
jz loc_10090E5  +
push 1  +
push dword_1067D84  +
call ds:SetThreadpoolThreadMaximum  +
mov eax off_1017110 +
cmp eax edi +
jz loc_1008D63  +
mov ecx [eax] +
mov edx [eax+4] +
mov [ecx+4] edx +
mov ecx [eax+4] +
mov edx [eax] +
mov [ecx] edx +
mov [eax] eax +
mov [eax+4] eax +
lea esi [eax-14h] +
mov byte ptr [esi+1Dh] 1 +
mov [esi+20h] ebx +
mov [esi+1Ch] bl +
mov ecx off_101710C +
mov edx ecx +
mov ecx [ecx] +
lea eax [esi+14h] +
mov [eax] ecx +
mov [ecx+4] eax +
mov [edx] eax +
mov ecx esi +
mov [eax+4] edx +
call sub_100EC57  +
push esi  +
mov [eax+58h] ebx +
call sub_1008BE1  +
mov eax off_1017110 +
cmp eax offset off_1017110 +
jnz loc_10090F2  +
jmp loc_1008D63  +
push ebx  +
push ebx  +
push dword_1067D88  +
call ds:CloseThreadpoolCleanupGroupMembers  +
push hEvent  +
call ds:CloseHandle  +
xor eax eax +
jmp loc_100916F  +
call ds:GetLastError  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
inc dword_1067D38  +
mov ebx [ebp+8] +
xor esi esi +
cmp dword_1067C9C esi +
jz loc_10091A6  +
mov ecx ebx +
call sub_100D69D  +
cmp eax 0A000000Ch +
jz loc_10091B3  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_10081BF  +
test eax eax +
jz loc_10091CE  +
mov ecx ebx +
call sub_100D478  +
push ebx  +
cmp eax 1 +
jnz loc_10091C7  +
mov ecx offset unk_1067DB0 +
jmp loc_10091D4  +
mov ecx offset unk_1067E00 +
jmp loc_10091D4  +
push ebx  +
mov ecx offset unk_1067E50 +
call sub_1010ED7  +
cmp dword_1067C70 esi +
jnz loc_1009207  +
cmp dword_1067D8C esi +
jz loc_1009207  +
mov ecx ebx +
call sub_100D478  +
push eax  +
mov ecx ebx +
call sub_100D464  +
mov ecx ebx +
call sub_100D48A  +
mov [ebx+60h] eax +
mov [ebx+64h] edx +
jmp loc_1009214  +
push esi  +
push esi  +
push 10CDh  +
push ebx  +
call sub_100C6EE  +
push dword_101703C  +
mov edi [ebp+0Ch] +
xor eax eax +
cmp dword_1017058 esi +
mov ecx ebx +
setz al  +
push eax  +
push edi  +
call sub_100E8D6  +
push dword_101703C  +
xor eax eax +
cmp dword_1017058 esi +
mov ecx edi +
setz al  +
push eax  +
push ebx  +
call sub_100E8D6  +
push ebx  +
call sub_1007699  +
push edi  +
call sub_1007699  +
push 238Fh  +
push ebx  +
call sub_1007FEA  +
mov ecx ebx +
call sub_100D478  +
cmp eax 1 +
jz loc_1009279  +
push 2390h  +
push edi  +
call sub_1007FEA  +
cmp dword_1067C98 esi +
jnz loc_1009297  +
cmp dword_1067C9C esi +
jz loc_100929E  +
mov ecx ebx +
call sub_100D69D  +
cmp eax 0A000000Ch +
jnz loc_100929E  +
push edi  +
push ebx  +
call sub_100845F  +
mov ecx edi +
jmp loc_10092C5  +
cmp dword_1067C64 esi +
jz loc_10092B6  +
push esi  +
push 1131h  +
push edi  +
call sub_100C80B  +
push esi  +
push offset unk_1067E98  +
push edi  +
call sub_10083E2  +
mov ecx [ebp+0Ch] +
push 9  +
call sub_100D863  +
mov edi eax +
cmp edi esi +
jnz loc_10092A2  +
jmp loc_100935F  +
cmp dword_1067CF0 esi +
jz loc_1009323  +
cmp dword_1067C64 esi +
jz loc_10092F5  +
xor eax eax +
push eax  +
push 1131h  +
push edi  +
call sub_100C80B  +
cmp dword_1067CF0 esi +
jnz loc_1009353  +
cmp dword_1067CD0 esi +
jz loc_1009353  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov [ebp-4] esi +
cmp eax esi +
jz loc_1009330  +
mov ecx eax +
call sub_100CEE7  +
mov [ebp-10h] eax +
jmp loc_1009333  +
cmp dword_1067CD0 esi +
jz loc_10092E7  +
xor eax eax +
inc eax  +
jmp loc_10092E9  +
mov [ebp-10h] esi +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push edi  +
call sub_100D77E  +
push dword ptr [ebp-10h]  +
call sub_1008A6D  +
mov ecx [ebp-10h] +
call sub_1003265  +
push esi  +
push offset unk_1067E98  +
push edi  +
call sub_10083E2  +
mov ecx [ebp+0Ch] +
push 1  +
call sub_100D863  +
mov edi eax +
cmp edi esi +
jnz loc_10092D7  +
jmp loc_1009395  +
cmp dword_1067C64 esi +
jz loc_1009389  +
push esi  +
push 1195h  +
push edi  +
call sub_100C80B  +
push esi  +
push offset unk_1067E98  +
push edi  +
call sub_10083E2  +
mov ecx [ebp+0Ch] +
push 9  +
call sub_100D849  +
mov edi eax +
cmp edi esi +
jnz loc_1009375  +
jmp loc_10093EC  +
cmp dword_1067CF0 esi +
jz loc_100940E  +
cmp dword_1067C64 esi +
jz loc_10093C5  +
xor eax eax +
push eax  +
push 1195h  +
push edi  +
call sub_100C80B  +
cmp dword_1067CF0 esi +
jnz loc_10093E0  +
cmp dword_1067CD0 esi +
jz loc_10093E0  +
push 239Dh  +
push edi  +
call sub_1008670  +
push esi  +
push offset unk_1067E98  +
push edi  +
call sub_10083E2  +
mov ecx [ebp+0Ch] +
push 1  +
call sub_100D849  +
mov edi eax +
cmp edi esi +
jnz loc_10093A7  +
cmp dword_1067D1C esi +
jnz loc_100942F  +
cmp dword_1067D20 esi +
jz loc_1009451  +
jmp loc_100942F  +
cmp dword_1067CD0 esi +
jz loc_10093B7  +
xor eax eax +
inc eax  +
jmp loc_10093B9  +
push 10h  +
mov ecx edi +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100891C  +
push 1  +
push dword_1017068  +
mov ecx ebx +
call sub_100D8D9  +
mov edi eax +
cmp edi esi +
jnz loc_100941B  +
jmp loc_1009451  +
push 1  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push 9  +
mov ecx ebx +
call sub_100D849  +
cmp eax esi +
jnz loc_1009446  +
cmp dword_1067CEC esi +
jnz loc_1009483  +
cmp dword_1017040 esi +
jnz loc_1009490  +
cmp dword_1067C60 esi +
jnz loc_1009490  +
jmp loc_1009483  +
push 1  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push 1  +
mov ecx ebx +
call sub_100D849  +
cmp eax esi +
jnz loc_1009478  +
cmp dword_1067CE4 esi +
jnz loc_10094B6  +
cmp dword_1067CE8 esi +
jz loc_10094CA  +
jmp loc_10094B6  +
push 8  +
mov ecx edi +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100891C  +
push esi  +
push dword_101705C  +
mov ecx ebx +
call sub_100D8D9  +
mov edi eax +
cmp edi esi +
jnz loc_10094A2  +
mov eax dword_1067D14 +
cmp eax esi +
jz loc_10094FF  +
push esi  +
push eax  +
jmp loc_10094F2  +
push 7  +
mov ecx edi +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100891C  +
push esi  +
push dword_1067D14  +
mov ecx ebx +
call sub_100D8D9  +
mov edi eax +
cmp edi esi +
jnz loc_10094D7  +
mov eax dword_1067D18 +
cmp eax esi +
jz loc_1009536  +
push 1  +
push eax  +
jmp loc_1009529  +
push 7  +
mov ecx edi +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100891C  +
push 1  +
push dword_1067D18  +
mov ecx ebx +
call sub_100D8D9  +
mov edi eax +
cmp edi esi +
jnz loc_100950D  +
mov eax dword_1067D40 +
mov ecx dword_1067D44 +
mov edx eax +
or edx ecx +
jz loc_100957C  +
push 1  +
push ecx  +
push eax  +
jmp loc_100956F  +
push 0Ah  +
mov ecx edi +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100891C  +
push 1  +
push dword_1067D44  +
push dword_1067D40  +
mov ecx ebx +
call sub_100D913  +
mov edi eax +
cmp edi esi +
jnz loc_100954D  +
mov eax dword_1067D48 +
mov ecx dword_1067D4C +
mov edx eax +
or edx ecx +
jz loc_10095C0  +
push esi  +
push ecx  +
push eax  +
jmp loc_10095B3  +
push 0Bh  +
mov ecx edi +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100891C  +
push esi  +
push dword_1067D4C  +
push dword_1067D48  +
mov ecx ebx +
call sub_100D913  +
mov edi eax +
cmp edi esi +
jnz loc_1009592  +
cmp dword_1067D3C esi +
jz loc_10095F8  +
mov edi offset FileTime +
jmp loc_10095E6  +
mov ecx [ebp-10h] +
push 0Ch  +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-10h]  +
call sub_100891C  +
push esi  +
push 1  +
push edi  +
mov ecx ebx +
call sub_100D933  +
mov [ebp-10h] eax +
cmp eax esi +
jnz loc_10095CF  +
cmp dword_1067D50 esi +
jz loc_100962F  +
mov edi offset stru_10275B0 +
jmp loc_100961E  +
mov ecx [ebp-10h] +
push 0Dh  +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-10h]  +
call sub_100891C  +
push esi  +
push esi  +
push edi  +
mov ecx ebx +
call sub_100D933  +
mov [ebp-10h] eax +
cmp eax esi +
jnz loc_1009607  +
cmp dword_1067D54 esi +
jz loc_1009668  +
mov edi offset stru_10275B8 +
jmp loc_1009655  +
mov ecx [ebp-10h] +
push 0Ch  +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-10h]  +
call sub_100891C  +
push 1  +
push 1  +
push edi  +
mov ecx ebx +
call sub_100D933  +
mov [ebp-10h] eax +
cmp eax esi +
jnz loc_100963E  +
cmp dword_1067D58 esi +
jz loc_10096A0  +
mov edi offset stru_10275A8 +
jmp loc_100968E  +
mov ecx [ebp-10h] +
push 0Dh  +
call sub_100ED44  +
push 1  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-10h]  +
call sub_100891C  +
push 1  +
push esi  +
push edi  +
mov ecx ebx +
call sub_100D933  +
mov [ebp-10h] eax +
cmp eax esi +
jnz loc_1009677  +
cmp dword_1067CF8 esi +
jz loc_10096D1  +
push 4  +
mov ecx ebx +
call sub_100D849  +
cmp eax esi +
jz loc_10096D1  +
xor edi edi +
inc edi  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push 4  +
mov ecx ebx +
call sub_100D849  +
cmp eax esi +
jnz loc_10096B8  +
jmp loc_10096D4  +
xor edi edi +
inc edi  +
cmp dword_1067CF4 esi +
jz loc_10096F5  +
jmp loc_10096E8  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push 5  +
mov ecx ebx +
call sub_100D849  +
cmp eax esi +
jnz loc_10096DE  +
cmp dword_1067CFC esi +
jz loc_1009716  +
jmp loc_1009709  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push 6  +
mov ecx ebx +
call sub_100D849  +
cmp eax esi +
jnz loc_10096FF  +
cmp dword_1017058 esi +
jz loc_1009737  +
jmp loc_100972A  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push 0Fh  +
mov ecx ebx +
call sub_100D849  +
cmp eax esi +
jnz loc_1009720  +
cmp dword_1017054 esi +
jz loc_10097F3  +
jmp loc_100974F  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push 3  +
mov ecx ebx +
call sub_100D849  +
cmp eax esi +
jnz loc_1009745  +
jmp loc_10097F3  +
push dword_1067CD0  +
push 1069h  +
push dword ptr [ebp-10h]  +
call sub_100C80B  +
cmp dword_1067CD0 esi +
jz loc_10097E5  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov [ebp-4] edi +
cmp eax esi +
jz loc_100979A  +
mov ecx eax +
call sub_100CEE7  +
mov [ebp-14h] eax +
jmp loc_100979D  +
mov [ebp-14h] esi +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-14h] +
push dword ptr [ebp-10h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_100D77E  +
push dword ptr [ebp-14h]  +
call sub_1008A6D  +
mov ecx [ebp-14h] +
call sub_1003265  +
mov ecx [ebp-10h] +
push edi  +
call sub_100ED44  +
push edi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-10h]  +
cmp dword_1067CEC esi +
jz loc_10097DE  +
call sub_100891C  +
jmp loc_10097F3  +
call sub_100871B  +
jmp loc_10097F3  +
push edi  +
push offset unk_1067EC8  +
push dword ptr [ebp-10h]  +
call sub_10083E2  +
push 2  +
mov ecx ebx +
call sub_100D849  +
mov [ebp-10h] eax +
cmp eax esi +
jnz loc_1009761  +
cmp dword_1067D8C esi +
jz loc_100982C  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_1008C2C  +
test eax eax +
jnz loc_1009CF9  +
jmp loc_1009837  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100871B  +
mov ecx ebx +
call sub_100D82B  +
cmp eax esi +
jnz loc_1009822  +
cmp dword_1067D1C esi +
jnz loc_100985F  +
cmp dword_1067D24 esi +
jz loc_1009880  +
jmp loc_100985F  +
mov ecx [ebp-10h] +
push 10h  +
call sub_100ED44  +
push edi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-10h]  +
call sub_100891C  +
push edi  +
push dword_1017068  +
mov ecx ebx +
call sub_100D8F6  +
mov [ebp-10h] eax +
cmp eax esi +
jnz loc_1009849  +
jmp loc_1009880  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push 9  +
mov ecx ebx +
call sub_100D863  +
cmp eax esi +
jnz loc_1009876  +
cmp dword_1067CEC esi +
jz loc_10098AD  +
jmp loc_10098A1  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100891C  +
push edi  +
mov ecx ebx +
call sub_100D863  +
cmp eax esi +
jnz loc_1009897  +
cmp dword_1067C9C esi +
jz loc_1009B7F  +
jmp loc_1009A16  +
push dword_1067CD0  +
push 1069h  +
push edi  +
call sub_100C80B  +
cmp dword_1067CD0 esi +
jz loc_1009A09  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov dword ptr [ebp-4] 2 +
cmp eax esi +
jz loc_10098FD  +
mov ecx eax +
call sub_100CEE7  +
mov [ebp-10h] eax +
jmp loc_1009900  +
mov [ebp-10h] esi +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push edi  +
call sub_100D77E  +
mov ecx edi +
call sub_100ED32  +
cmp eax 0A000000Ch +
jnz loc_1009928  +
push dword ptr [ebp-10h]  +
call sub_1008A6D  +
jmp loc_1009935  +
push 239Eh  +
push dword ptr [ebp-10h]  +
call sub_10086BC  +
mov ecx [ebp-10h] +
call sub_1003265  +
push 1  +
mov ecx edi +
call sub_100ED44  +
cmp dword_1067CEC esi +
jz loc_100995E  +
push 1  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100891C  +
jmp loc_1009A16  +
cmp dword_1067C94 esi +
jz loc_10099FA  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov dword ptr [ebp-4] 3 +
cmp eax esi +
jz loc_100998C  +
mov ecx eax +
call sub_100CEE7  +
mov [ebp-10h] eax +
jmp loc_100998F  +
mov [ebp-10h] esi +
mov ecx [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push esi  +
push edi  +
call sub_100D77E  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov dword ptr [ebp-4] 4 +
cmp eax esi +
jz loc_10099BF  +
mov ecx eax +
call sub_100CEE7  +
mov [ebp-14h] eax +
jmp loc_10099C2  +
mov [ebp-14h] esi +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push edi  +
call sub_100D77E  +
push dword ptr [ebp-10h]  +
mov ecx offset unk_1067DE8 +
call sub_1010ED7  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-10h]  +
call sub_1009179  +
mov ecx [ebp-14h] +
call sub_1003265  +
mov ecx [ebp-10h] +
call sub_1003265  +
cmp edi esi +
jz loc_1009A16  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+4]  +
jmp loc_1009A16  +
push 1  +
push offset unk_1067EC8  +
push edi  +
call sub_10083E2  +
push 11h  +
mov ecx ebx +
call sub_100D863  +
mov edi eax +
cmp edi esi +
jnz loc_10098BE  +
jmp loc_1009B7F  +
push dword_1067CD0  +
push 1069h  +
push ebx  +
call sub_100C80B  +
cmp dword_1067CD0 esi +
jz loc_1009B72  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 5 +
cmp ecx esi +
jz loc_1009A6C  +
call sub_100E918  +
mov edi eax +
jmp loc_1009A6E  +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
call sub_100EA25  +
push 1  +
mov ecx edi +
call sub_100ED44  +
push dword_1067CD0  +
push 1195h  +
push edi  +
call sub_100C80B  +
push 239Dh  +
push edi  +
call sub_1008670  +
push esi  +
push offset unk_1067E98  +
push edi  +
call sub_10083E2  +
push 1  +
mov ecx ebx +
call sub_100ED44  +
cmp dword_1067CEC esi +
jz loc_1009ACF  +
push 1  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_100891C  +
jmp loc_1009B7F  +
cmp dword_1067C94 esi +
jz loc_1009B63  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov dword ptr [ebp-4] 6 +
cmp eax esi +
jz loc_1009AFC  +
mov ecx eax +
call sub_100CEE7  +
mov edi eax +
jmp loc_1009AFE  +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
push esi  +
push ebx  +
mov ecx edi +
call sub_100D77E  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov dword ptr [ebp-4] 7 +
cmp eax esi +
jz loc_1009B2D  +
mov ecx eax +
call sub_100CEE7  +
mov [ebp-14h] eax +
jmp loc_1009B30  +
mov [ebp-14h] esi +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
call sub_100D77E  +
push edi  +
mov ecx offset unk_1067DE8 +
call sub_1010ED7  +
push dword ptr [ebp-14h]  +
push edi  +
call sub_1009179  +
mov ecx [ebp-14h] +
call sub_1003265  +
mov ecx edi +
call sub_1003265  +
cmp ebx esi +
jz loc_1009B7F  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax+4]  +
jmp loc_1009B7F  +
push 1  +
push offset unk_1067EC8  +
push ebx  +
call sub_10083E2  +
mov ecx [ebp+8] +
push 2  +
call sub_100D863  +
mov ebx eax +
cmp ebx esi +
jnz loc_1009A2E  +
jmp loc_1009C39  +
cmp dword_1067C94 esi +
jz loc_1009C2C  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov dword ptr [ebp-4] 8 +
cmp eax esi +
jz loc_1009BC5  +
mov ecx eax +
call sub_100CEE7  +
mov edi eax +
jmp loc_1009BC7  +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
push esi  +
push ebx  +
mov ecx edi +
call sub_100D77E  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov dword ptr [ebp-4] 9 +
cmp eax esi +
jz loc_1009BF6  +
mov ecx eax +
call sub_100CEE7  +
mov [ebp-14h] eax +
jmp loc_1009BF9  +
mov [ebp-14h] esi +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
call sub_100D77E  +
push edi  +
mov ecx offset unk_1067DE8 +
call sub_1010ED7  +
push dword ptr [ebp-14h]  +
push edi  +
call sub_1009179  +
mov ecx [ebp-14h] +
call sub_1003265  +
mov ecx edi +
call sub_1003265  +
cmp ebx esi +
jz loc_1009C39  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax+4]  +
mov ecx [ebp+8] +
call sub_100D83A  +
mov ebx eax +
cmp ebx esi +
jnz loc_1009B98  +
cmp dword_1067C88 esi +
jnz loc_1009CDE  +
mov edi 238Eh +
cmp dword_1067CB8 esi +
jz loc_1009C9B  +
push Data  +
mov ecx [ebp+0Ch] +
push edi  +
push dword_1067D60  +
call sub_100DAF5  +
test eax eax +
jz loc_1009C93  +
push Data  +
mov ecx [ebp+8] +
push 2398h  +
push dword ptr [ebp+0Ch]  +
call sub_100E381  +
cmp dword_1067C88 esi +
jnz loc_1009CDE  +
cmp dword_1017044 esi +
jz loc_1009CDE  +
push Data  +
mov ecx [ebp+0Ch] +
push edi  +
push dword_1067D60  +
call sub_100DAF5  +
test eax eax +
jz loc_1009CDE  +
push Data  +
mov ecx [ebp+8] +
push 239Ch  +
push dword_1067D30  +
push dword_1067D2C  +
push dword ptr [ebp+0Ch]  +
call sub_100DF13  +
cmp dword_1067CCC esi +
jz loc_1009CF3  +
push 2391h  +
push dword ptr [ebp+8]  +
call sub_10086BC  +
dec dword_1067D38  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov eax [ebp+0Ch] +
mov esi ds:_wsetlocale +
mov edi offset a_ocp +
push edi  +
push 1  +
mov [ebp-40h] eax +
call esi  +
push edi  +
push 3  +
call esi  +
push edi  +
push 4  +
call esi  +
push edi  +
push 5  +
call esi  +
add esp 20h +
call ds:GetConsoleOutputCP  +
push eax  +
push offset a_D  +
lea eax [ebp-24h] +
push 8  +
push eax  +
call swprintf_s  +
lea eax [ebp-24h] +
push eax  +
push 2  +
pop edi  +
push edi  +
call esi  +
add esp 18h +
xor ebx ebx +
push ebx  +
call ds:SetThreadUILanguage  +
push ebx  +
push ebx  +
push 1  +
push ebx  +
call ds:HeapSetInformation  +
mov [ebp-4] ebx +
call ds:__iob_func  +
add eax 20h +
push ebx  +
mov dword_10277C8 eax +
call ds:GetModuleHandleW  +
mov hInstance eax +
mov eax 7BCh +
mov [ebp-38h] ax +
xor eax eax +
inc eax  +
mov [ebp-36h] ax +
mov eax edi +
mov [ebp-34h] ax +
mov [ebp-32h] ax +
xor eax eax +
mov [ebp-30h] ax +
mov [ebp-2Eh] ax +
mov [ebp-2Ch] ax +
mov [ebp-2Ah] ax +
push offset LastWriteTime  +
lea eax [ebp-38h] +
push eax  +
call ds:SystemTimeToFileTime  +
push edi  +
call sub_10119C1  +
push offset TokenHandle  +
call sub_1007C60  +
test eax eax +
jz loc_1009E32  +
push offset Name  +
push TokenHandle  +
call sub_1007BFA  +
push offset aSerestoreprivi  +
push TokenHandle  +
mov dword_1067D74 eax +
call sub_1007BFA  +
push offset aSesecuritypriv  +
push TokenHandle  +
mov dword_1067D78 eax +
call sub_1007BFA  +
push offset aSetakeownershi  +
push TokenHandle  +
mov dword_1067D7C eax +
call sub_1007BFA  +
mov dword_1067D80 eax +
cmp hInstance ebx +
jnz loc_1009E59  +
call ds:GetLastError  +
mov esi eax +
push esi  +
push esi  +
push offset aErrorD0x08xThi  +
call ds:wprintf  +
add esp 0Ch +
mov eax esi +
jmp loc_100A11D  +
mov esi ds:SetErrorMode +
push ebx  +
call esi  +
mov [ebp-3Ch] eax +
or eax 8001h +
push eax  +
call esi  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-28h] ecx +
mov byte ptr [ebp-4] 1 +
cmp ecx ebx +
jz loc_1009E89  +
call sub_100CEE7  +
jmp loc_1009E8B  +
xor eax eax +
push 68h  +
mov [ebp-4] bl +
mov dword_1067C20 eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-28h] ecx +
mov byte ptr [ebp-4] 2 +
cmp ecx ebx +
jz loc_1009EAF  +
call sub_100CEE7  +
jmp loc_1009EB1  +
xor eax eax +
push dword ptr [ebp-40h]  +
mov [ebp-4] bl +
push dword ptr [ebp+8]  +
mov dword_1027398 eax +
mov dword ptr [ebp-28h] 10h +
call sub_1006DA7  +
cmp eax ebx +
jz loc_100A0BB  +
mov [ebp-28h] ebx +
cmp dword_102739C ebx +
jz loc_1009EEC  +
push 1  +
push 0Eh  +
call sub_100A38C  +
jmp loc_100A0BB  +
call sub_1007651  +
mov edi offset unk_1067EC8 +
mov esi offset unk_1067E98 +
mov ecx offset unk_1067DE8 +
call sub_1010EE2  +
mov ecx offset unk_1067DB0 +
call sub_1010EE2  +
mov ecx offset unk_1067E00 +
call sub_1010EE2  +
mov ecx offset unk_1067E50 +
call sub_1010EE2  +
mov ecx edi +
call sub_1010EE2  +
mov ecx esi +
call sub_1010EE2  +
mov ecx offset unk_1067EB0 +
call sub_1010EE2  +
mov ecx offset unk_1067EE0 +
call sub_1010EE2  +
cmp dword_1067D8C ebx +
jz loc_1009F61  +
call sub_1007A38  +
cmp eax ebx +
jz loc_1009F61  +
call ds:GetLastError  +
jmp loc_100A11D  +
push ebx  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE49  +
push 1  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE49  +
push 2  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE49  +
push 2  +
call sub_10073D2  +
mov ecx eax +
call sub_100CDDD  +
push dword_1067C20  +
mov ecx offset unk_1067DE8 +
call sub_1010ED7  +
mov ecx dword_1067C20 +
call sub_100DA39  +
mov eax dword_1027398 +
mov dword ptr [eax+5Ch] 1 +
push dword_1027398  +
push dword_1067C20  +
call sub_1009179  +
cmp dword_1067D8C ebx +
jz loc_1009FE5  +
call sub_1008D1F  +
cmp eax ebx +
jnz loc_1009F56  +
mov ecx offset unk_1067E50 +
call sub_1010F3F  +
cmp eax ebx +
jnz loc_100A00F  +
mov ecx offset unk_1067E50 +
call sub_1010F2A  +
cmp eax ebx +
jnz loc_100A00F  +
mov ecx offset unk_1067E50 +
call sub_100D25A  +
cmp eax ebx +
jz loc_100A013  +
add dword ptr [ebp-28h] 8 +
mov ecx edi +
call sub_1010F3F  +
cmp eax ebx +
jnz loc_100A034  +
mov ecx edi +
call sub_1010F2A  +
cmp eax ebx +
jnz loc_100A034  +
mov ecx edi +
call sub_100D25A  +
cmp eax ebx +
jz loc_100A038  +
add dword ptr [ebp-28h] 4 +
mov ecx esi +
call sub_1010F3F  +
cmp eax ebx +
jnz loc_100A059  +
mov ecx esi +
call sub_1010F2A  +
cmp eax ebx +
jnz loc_100A059  +
mov ecx esi +
call sub_100D25A  +
cmp eax ebx +
jz loc_100A05D  +
add dword ptr [ebp-28h] 2 +
mov ecx offset unk_1067DB0 +
call sub_1010F3F  +
cmp eax ebx +
jnz loc_100A079  +
mov ecx offset unk_1067DB0 +
call sub_1010F2A  +
cmp eax ebx +
jz loc_100A07C  +
inc dword ptr [ebp-28h]  +
push 2  +
call sub_10073D2  +
mov ecx eax +
call sub_100CE1B  +
cmp dword_1067C90 ebx +
jz loc_100A09C  +
push ebx  +
push 1  +
call sub_100A38C  +
jmp loc_100A0A1  +
call sub_1007BAA  +
cmp dword_1067D8C ebx +
jz loc_100A0AE  +
call sub_100790F  +
call sub_1007C92  +
cmp eax ebx +
jnz loc_1009EFB  +
push dword_1027398  +
call sub_1007B7B  +
push dword_1067C20  +
call sub_1007B7B  +
call sub_1003280  +
mov esi ds:__iob_func +
call esi  +
mov ecx eax +
mov eax dword_10277C8 +
add ecx 20h +
cmp eax ecx +
jz loc_100A0FE  +
push eax  +
call ds:fclose  +
pop ecx  +
call esi  +
add eax 20h +
mov dword_10277C8 eax +
push dword ptr [ebp-3Ch]  +
call ds:SetErrorMode  +
mov eax [ebp-28h] +
jmp loc_100A11D  +
push 1  +
push 1Dh  +
call sub_100A38C  +
mov eax offset loc_100A11B +
retn   +
xor eax eax +
call sub_1011F05  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100A151  +
cmp eax esi +
ja loc_100A151  +
jz loc_100A156  +
jmp loc_100A15E  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100A167  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_0]  +
mov edi ds:fwprintf +
push dword_10277C8  +
call edi  +
cmp dword_1067C2C 0 +
pop ecx  +
pop ecx  +
jz loc_100A1B8  +
push esi  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp dword_10277C8 eax +
jz loc_100A1B7  +
push [ebp+arg_0]  +
call esi  +
add eax 20h +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi ds:fwprintf +
push [ebp+arg_0]  +
push dword_10277C8  +
call esi  +
add esp 0Ch +
cmp dword_1067C2C 0 +
jz loc_100A20E  +
push edi  +
mov edi ds:__iob_func +
call edi  +
add eax 20h +
cmp dword_10277C8 eax +
jz loc_100A20D  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call edi  +
add eax 20h +
push eax  +
call esi  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi ds:fwprintf +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword_10277C8  +
call esi  +
add esp 10h +
cmp dword_1067C2C 0 +
jz loc_100A26A  +
push edi  +
mov edi ds:__iob_func +
call edi  +
add eax 20h +
cmp dword_10277C8 eax +
jz loc_100A269  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call edi  +
add eax 20h +
push eax  +
call esi  +
add esp 10h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
push dword_10277C8  +
call sub_1012E8B  +
cmp dword_1067C2C 0 +
jz loc_100A2B3  +
push esi  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp dword_10277C8 eax +
jz loc_100A2B2  +
push [ebp+lpString]  +
call esi  +
add eax 20h +
push eax  +
call sub_1012E8B  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi ds:fwprintf_s +
push [ebp+arg_0]  +
push dword_10277C8  +
call esi  +
add esp 0Ch +
cmp dword_1067C2C 0 +
jz loc_100A308  +
push edi  +
mov edi ds:__iob_func +
call edi  +
add eax 20h +
cmp dword_10277C8 eax +
jz loc_100A307  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call edi  +
add eax 20h +
push eax  +
call esi  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:LoadStringW +
push 100h  +
push offset word_1078398  +
push [ebp+uID]  +
push hInstance  +
call esi  +
cmp [ebp+arg_4] 0 +
jz loc_100A34B  +
push 40h  +
push offset word_1067F18  +
push [ebp+arg_4]  +
push hInstance  +
call esi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_100A369  +
push 0  +
push 1  +
call sub_100A38C  +
push [ebp+arg_0]  +
push offset aS_1  +
call sub_100A274  +
push dword_10277C8  +
call ds:fflush  +
pop ecx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:LoadStringW +
push edi  +
mov edi 100h +
jmp loc_100A3C4  +
push [ebp+arg_4]  +
lea eax [ebp+var_204] +
push eax  +
call sub_100A355  +
inc ebx  +
push edi  +
lea eax [ebp+var_204] +
push eax  +
push ebx  +
push hInstance  +
call esi  +
test eax eax +
jnz loc_100A3B4  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1011DD7  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push 20h  +
pop ecx  +
mov [eax] cx +
mov ecx [ebp+arg_4] +
mov edx ecx +
and dl 1 +
movzx edx dl +
neg edx  +
sbb edx edx +
and edx 25h +
push 2Dh  +
pop esi  +
add edx esi +
mov [eax+2] dx +
mov edx ecx +
and dl 20h +
movzx edx dl +
neg edx  +
sbb edx edx +
and edx 14h +
add edx esi +
mov [eax+4] dx +
mov edx ecx +
and dl 4 +
movzx edx dl +
neg edx  +
sbb edx edx +
and edx 26h +
add edx esi +
mov [eax+6] dx +
mov edx ecx +
and dl 2 +
movzx edx dl +
neg edx  +
sbb edx edx +
and edx 1Bh +
add edx esi +
mov [eax+8] dx +
mov edx ecx +
and edx 800h +
neg edx  +
sbb edx edx +
and edx 16h +
add edx esi +
mov [eax+0Ah] dx +
mov edx ecx +
and edx 2000h +
neg edx  +
sbb edx edx +
and edx 21h +
add edx esi +
mov [eax+0Ch] dx +
mov edx ecx +
and edx 4000h +
neg edx  +
sbb edx edx +
and edx 18h +
add edx esi +
mov [eax+0Eh] dx +
mov edx ecx +
and edx 100h +
neg edx  +
sbb edx edx +
and edx 27h +
add edx esi +
mov [eax+10h] dx +
mov edx ecx +
and edx 1000h +
neg edx  +
sbb edx edx +
and edx 22h +
add edx esi +
mov [eax+12h] dx +
mov edx ecx +
and edx 200h +
neg edx  +
sbb edx edx +
and edx 46h +
add edx esi +
mov [eax+14h] dx +
mov edx ecx +
and dl 10h +
movzx edx dl +
neg edx  +
sbb edx edx +
and edx 17h +
add edx esi +
mov [eax+16h] dx +
mov edx ecx +
and edx 400h +
neg edx  +
sbb edx edx +
and cl 40h +
movzx ecx cl +
and edx 1Dh +
add edx esi +
neg ecx  +
sbb ecx ecx +
and ecx 29h +
add ecx esi +
mov [eax+1Ah] cx +
xor ecx ecx +
mov [eax+18h] dx +
mov [eax+1Ch] cx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push [ebp+arg_0]  +
push offset aS_1  +
call sub_100A274  +
mov ebx [ebp+arg_4] +
test bl 1 +
jz loc_100A548  +
push offset String2  +
call sub_100A174  +
test bl 20h +
jz loc_100A557  +
push offset word_10013F8  +
call sub_100A174  +
test bl 4 +
jz loc_100A566  +
push offset word_10013F4  +
call sub_100A174  +
test bl 2 +
jz loc_100A575  +
push offset word_10013F0  +
call sub_100A174  +
test ebx 800h +
jz loc_100A587  +
push offset word_10013EC  +
call sub_100A174  +
test ebx 2000h +
jz loc_100A599  +
push offset word_10013E8  +
call sub_100A174  +
test ebx 4000h +
jz loc_100A5AB  +
push offset word_10013E4  +
call sub_100A174  +
test ebx 100h +
jz loc_100A5BD  +
push offset word_10013E0  +
call sub_100A174  +
test ebx 1000h +
pop ebx  +
jz loc_100A5D0  +
push offset word_10013DC  +
call sub_100A174  +
push offset asc_1001B84  +
call sub_100A174  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cdq   +
mov ecx 3E8h +
idiv  ecx +
push esi  +
push 3Ch  +
pop ecx  +
push 3Ch  +
pop esi  +
cdq   +
idiv  ecx +
mov ecx edx +
cdq   +
idiv  esi +
mov esi [ebp+arg_8] +
mov [esi] eax +
mov eax [ebp+arg_C] +
mov [eax] edx +
mov eax [ebp+arg_10] +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
push 0  +
call sub_10073D2  +
mov ecx eax +
call sub_100CD83  +
mov dword ptr [ebp+var_8+4] eax +
fild  dword ptr [ebp+var_8+4] +
mov ecx offset unk_1067DB0 +
fdiv  ds:dbl_1001B98 +
fstp  [ebp+var_10] +
call sub_1010F33  +
mov dword ptr [ebp+var_8] eax +
mov dword ptr [ebp+var_8+4] edx +
fild  [ebp+var_8] +
fld  [ebp+var_10] +
fdivr st st(1) +
call _ftol2  +
fmul  ds:dbl_1001B90 +
fld  [ebp+var_10] +
mov esi eax +
fdiv  ds:dbl_1001B88 +
mov edi edx +
fdivp st(1) st +
fld  st +
call _ftol2  +
mov ecx [ebp+arg_0] +
and dword ptr [ebp+var_8] 0 +
mov [ecx] esi +
mov [ecx+4] edi +
mov ecx [ebp+arg_4] +
mov dword ptr [ebp+var_8+4] edx +
and dword ptr [ebp+var_8+4] 80000000h +
mov [ecx+4] edx +
and edx 7FFFFFFFh +
mov dword ptr [ebp+var_10] eax +
mov dword ptr [ebp+var_10+4] edx +
fild  [ebp+var_10] +
mov [ecx] eax +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
fsubp st(1) st +
fmul  ds:dbl_1001B98 +
call _ftol2_sse  +
mov ecx [ebp+arg_8] +
pop edi  +
mov [ecx] eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100A6E1  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_100A6E6  +
mov eax 80070057h +
test eax eax +
jl loc_100A700  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_100A128  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jz loc_100A71C  +
push edi  +
push 1  +
call sub_100A38C  +
cmp dword_1067C34 edi +
jz loc_100A733  +
push [ebp+lpWideCharStr]  +
push offset aS_1  +
call sub_100A274  +
jmp loc_100A764  +
push esi  +
push edi  +
push edi  +
push 0FFFFh  +
mov esi offset MultiByteStr +
push esi  +
push [ebp+lpWideCharStr]  +
call ds:lstrlenW  +
inc eax  +
push eax  +
push [ebp+lpWideCharStr]  +
push edi  +
push 1  +
call ds:WideCharToMultiByte  +
push esi  +
push offset aS_2  +
call sub_100A2BC  +
pop esi  +
push dword_10277C8  +
call ds:fflush  +
pop ecx  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+arg_0]  +
call sub_100A38C  +
push 0  +
push [ebp+lpWideCharStr]  +
call sub_100A707  +
push 1  +
push offset dword_10014BC  +
call sub_100A355  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov edi [ebp+8] +
mov eax [edi+4] +
mov [ebp+8] eax +
test eax eax +
jz loc_100A806  +
lea eax [ebp+8] +
push eax  +
mov ecx edi +
call sub_1003175  +
mov eax [eax] +
lea ecx [ebp-10h] +
push ecx  +
mov ecx eax +
call sub_1010D89  +
mov eax [eax] +
and dword ptr [ebp-4] 0 +
push 0  +
push eax  +
call sub_100A707  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
push 0  +
push offset asc_1001BA8  +
call sub_100A355  +
cmp dword ptr [ebp+8] 0 +
jnz loc_100A7C2  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov ecx offset unk_1067DE8 +
call sub_100D25A  +
push eax  +
mov edi offset aU_0 +
push edi  +
push 20h  +
push esi  +
call sub_100A6CC  +
mov eax esi +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100A841  +
sub eax edx +
sar eax 1 +
cmp eax [esi+684h] +
jle loc_100A85D  +
mov [esi+684h] eax +
mov ecx offset unk_1067DB0 +
lea ebx [esi+40h] +
call sub_100D25A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100A87C  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+688h] +
jle loc_100A898  +
mov [esi+688h] eax +
mov ecx offset unk_1067E00 +
lea ebx [esi+80h] +
call sub_100D25A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100A8BA  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+68Ch] +
jle loc_100A8D6  +
mov [esi+68Ch] eax +
mov ecx offset unk_1067EC8 +
lea ebx [esi+0C0h] +
call sub_100D25A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100A8F8  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+690h] +
jle loc_100A914  +
mov [esi+690h] eax +
mov ecx offset unk_1067E50 +
lea ebx [esi+100h] +
call sub_100D25A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100A936  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+694h] +
jle loc_100A952  +
mov [esi+694h] eax +
mov ecx offset unk_1067E98 +
lea ebx [esi+140h] +
call sub_100D25A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100A974  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+698h] +
jle loc_100A990  +
mov [esi+698h] eax +
mov ecx offset unk_1067DE8 +
lea ebx [esi+180h] +
call sub_1010F2A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100A9B2  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+684h] +
jle loc_100A9CE  +
mov [esi+684h] eax +
mov ecx offset unk_1067DB0 +
lea ebx [esi+1C0h] +
call sub_1010F2A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100A9F0  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+688h] +
jle loc_100AA0C  +
mov [esi+688h] eax +
mov ecx offset unk_1067E00 +
lea ebx [esi+200h] +
call sub_1010F2A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AA2E  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+68Ch] +
jle loc_100AA4A  +
mov [esi+68Ch] eax +
mov ecx offset unk_1067EC8 +
lea ebx [esi+240h] +
call sub_1010F2A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AA6C  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+690h] +
jle loc_100AA88  +
mov [esi+690h] eax +
mov ecx offset unk_1067E50 +
lea ebx [esi+280h] +
call sub_1010F2A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AAAA  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+694h] +
jle loc_100AAC6  +
mov [esi+694h] eax +
mov ecx offset unk_1067E98 +
lea ebx [esi+2C0h] +
call sub_1010F2A  +
push eax  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
add esp 10h +
mov eax ebx +
push 2  +
lea ecx [eax+2] +
pop ebx  +
mov dx [eax] +
add eax ebx +
test dx dx +
jnz loc_100AAEB  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+698h] +
jle loc_100AB07  +
mov [esi+698h] eax +
lea edi [esi+300h] +
push edi  +
mov ecx offset unk_1067DE8 +
call sub_1010F7A  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100AB1D  +
sub eax edx +
sar eax 1 +
cmp eax [esi+684h] +
jle loc_100AB39  +
mov [esi+684h] eax +
lea edi [esi+340h] +
push edi  +
mov ecx offset unk_1067DB0 +
call sub_1010F7A  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100AB4F  +
sub eax edx +
sar eax 1 +
cmp eax [esi+688h] +
jle loc_100AB6B  +
mov [esi+688h] eax +
lea edi [esi+380h] +
push edi  +
mov ecx offset unk_1067E00 +
call sub_1010F7A  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100AB81  +
sub eax edx +
sar eax 1 +
cmp eax [esi+68Ch] +
jle loc_100AB9D  +
mov [esi+68Ch] eax +
lea edi [esi+3C0h] +
push edi  +
mov ecx offset unk_1067EC8 +
call sub_1010F7A  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100ABB3  +
sub eax edx +
sar eax 1 +
cmp eax [esi+690h] +
jle loc_100ABCF  +
mov [esi+690h] eax +
lea edi [esi+400h] +
push edi  +
mov ecx offset unk_1067E50 +
call sub_1010F7A  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100ABE5  +
sub eax edx +
sar eax 1 +
cmp eax [esi+694h] +
jle loc_100AC01  +
mov [esi+694h] eax +
lea edi [esi+440h] +
push edi  +
mov ecx offset unk_1067E98 +
call sub_1010F7A  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_100AC17  +
sub eax edx +
sar eax 1 +
cmp eax [esi+698h] +
jle loc_100AC33  +
mov [esi+698h] eax +
push 2  +
call sub_10073D2  +
mov ecx eax +
call sub_100CD83  +
cdq   +
mov ebx eax +
push 0  +
mov [ebp+var_18] ebx +
mov edi edx +
call sub_10073D2  +
mov ecx eax +
call sub_100CD83  +
cdq   +
push 1  +
mov [ebp+var_20] eax +
mov [ebp+var_1C] edx +
call sub_10073D2  +
mov ecx eax +
call sub_100CD83  +
cdq   +
sub ebx eax +
mov dword ptr [ebp+var_28] eax +
mov eax edi +
sbb eax edx +
sub ebx [ebp+var_20] +
mov [ebp+var_24] edx +
sbb eax [ebp+var_1C] +
cmp dword_1067D8C 0 +
mov [ebp+var_2C] eax +
jz loc_100ADD9  +
mov ecx offset unk_1067D98 +
call sub_100CD83  +
push 2  +
mov edi eax +
call sub_10078BF  +
add eax edi +
cdq   +
mov ecx offset unk_1067E88 +
mov [ebp+var_18] eax +
mov edi edx +
call sub_100CD83  +
push 0  +
mov ebx eax +
call sub_10078BF  +
add eax ebx +
cdq   +
mov [ebp+var_20] eax +
mov [ebp+var_1C] edx +
cmp edx edi +
jb loc_100ACDA  +
ja loc_100ACD1  +
cmp eax [ebp+var_18] +
jb loc_100ACDA  +
mov eax [ebp+var_18] +
mov [ebp+var_20] eax +
mov [ebp+var_1C] edi +
mov ecx offset unk_1067DA4 +
call sub_100CD83  +
push 1  +
mov ebx eax +
call sub_10078BF  +
add eax ebx +
cdq   +
mov dword ptr [ebp+var_28] eax +
mov [ebp+var_24] edx +
cmp edx edi +
jb loc_100AD12  +
ja loc_100AD01  +
cmp eax [ebp+var_18] +
jb loc_100AD12  +
mov eax [ebp+var_18] +
sub eax [ebp+var_20] +
mov dword ptr [ebp+var_28] eax +
mov eax edi +
sbb eax [ebp+var_1C] +
mov [ebp+var_24] eax +
mov eax [ebp+var_18] +
or eax edi +
mov ebx offset unk_1067D98 +
jz loc_100AD46  +
mov ecx ebx +
call sub_100CD83  +
push [ebp+var_1C]  +
cdq   +
push [ebp+var_20]  +
push edx  +
push eax  +
call __allmul  +
push edi  +
push [ebp+var_18]  +
push edx  +
push eax  +
call __aulldiv  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edx +
jmp loc_100AD4E  +
and [ebp+var_10] 0 +
and [ebp+var_C] 0 +
mov eax [ebp+var_18] +
or eax edi +
jz loc_100AD7D  +
mov ecx ebx +
call sub_100CD83  +
push [ebp+var_24]  +
cdq   +
push dword ptr [ebp+var_28]  +
push edx  +
push eax  +
call __allmul  +
push edi  +
push [ebp+var_18]  +
push edx  +
push eax  +
call __aulldiv  +
mov [ebp+var_8] eax +
mov [ebp+var_4] edx +
jmp loc_100AD85  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
mov eax [ebp+var_18] +
or eax edi +
jz loc_100ADB8  +
mov ecx ebx +
call sub_100CD83  +
mov ecx [ebp+var_18] +
sub ecx [ebp+var_20] +
mov ebx edi +
sbb ebx [ebp+var_1C] +
cdq   +
push ebx  +
push ecx  +
push edx  +
push eax  +
call __allmul  +
push edi  +
push [ebp+var_18]  +
push edx  +
push eax  +
call __aulldiv  +
mov [ebp+var_34] edx +
jmp loc_100ADBD  +
xor eax eax +
mov [ebp+var_34] eax +
and [ebp+var_2C] 0 +
mov ebx eax +
mov eax [ebp+var_10] +
mov [ebp+var_20] eax +
xor eax eax +
mov [ebp+var_1C] eax +
mov eax [ebp+var_8] +
mov dword ptr [ebp+var_28] eax +
xor eax eax +
mov [ebp+var_24] eax +
push 0  +
push 0B5h  +
call sub_100A312  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+var_18]  +
call sub_100A5E3  +
push [ebp+var_4]  +
mov edi offset word_1078398 +
push [ebp+var_C]  +
lea eax [esi+480h] +
push dword ptr [ebp+var_14]  +
push edi  +
push 20h  +
push eax  +
call sub_100A6CC  +
lea eax [esi+480h] +
add esp 18h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AE23  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+684h] +
jle loc_100AE3F  +
mov [esi+684h] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
call sub_100A5E3  +
push [ebp+var_4]  +
lea eax [esi+4C0h] +
push [ebp+var_C]  +
push dword ptr [ebp+var_14]  +
push edi  +
push 20h  +
push eax  +
call sub_100A6CC  +
lea eax [esi+4C0h] +
add esp 18h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AE7A  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+688h] +
jle loc_100AE96  +
mov [esi+688h] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_24]  +
push dword ptr [ebp+var_28]  +
call sub_100A5E3  +
push [ebp+var_4]  +
lea eax [esi+580h] +
push [ebp+var_C]  +
push dword ptr [ebp+var_14]  +
push edi  +
push 20h  +
push eax  +
call sub_100A6CC  +
lea eax [esi+580h] +
add esp 18h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AED1  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+694h] +
jle loc_100AEED  +
mov [esi+694h] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_2C]  +
push ebx  +
call sub_100A5E3  +
push [ebp+var_4]  +
lea ebx [esi+5C0h] +
push [ebp+var_C]  +
push dword ptr [ebp+var_14]  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 18h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AF22  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+698h] +
jle loc_100AF3E  +
mov [esi+698h] eax +
xor ebx ebx +
cmp dword_1067C88 ebx +
jnz loc_100B010  +
push ebx  +
call sub_10073D2  +
mov ecx eax +
call sub_100CD83  +
test eax eax +
jz loc_100B010  +
mov ecx offset unk_1067DB0 +
call sub_1010F33  +
or eax edx +
jz loc_100B010  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_100A61B  +
push ebx  +
push 0A6h  +
call sub_100A312  +
push [ebp+var_2C]  +
lea ebx [esi+600h] +
push dword ptr [ebp+var_30]  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AFAC  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+69Ch] +
jle loc_100AFC8  +
mov [esi+69Ch] eax +
push 0  +
push 0A7h  +
call sub_100A312  +
push dword ptr [ebp+var_14]  +
lea ebx [esi+640h] +
push [ebp+var_24]  +
push dword ptr [ebp+var_28]  +
push edi  +
push 20h  +
push ebx  +
call sub_100A6CC  +
mov eax ebx +
add esp 18h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AFF4  +
sub eax ecx +
sar eax 1 +
cmp eax [esi+69Ch] +
jle loc_100B010  +
mov [esi+69Ch] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 1  +
push 7  +
mov esi ecx +
call sub_100A38C  +
push 0  +
push 97h  +
call sub_100A312  +
mov eax [esi+680h] +
mov ebx offset word_1078398 +
push ebx  +
inc eax  +
push eax  +
push offset aS_3  +
push 400h  +
mov edi offset word_1078598 +
push edi  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B066  +
sub eax ecx +
push 0  +
sar eax 1 +
push 98h  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [esi+684h] +
push ebx  +
inc eax  +
push eax  +
mov eax [ebp+var_4] +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B0B1  +
sub eax ecx +
push 0  +
sar eax 1 +
push 99h  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [esi+688h] +
push ebx  +
inc eax  +
push eax  +
mov eax [ebp+var_4] +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B0FC  +
sub eax ecx +
push 0  +
sar eax 1 +
push 9Ah  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [esi+68Ch] +
push ebx  +
inc eax  +
push eax  +
mov eax [ebp+var_4] +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B147  +
sub eax ecx +
push 0  +
sar eax 1 +
push 9Bh  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [esi+690h] +
push ebx  +
inc eax  +
push eax  +
mov eax [ebp+var_4] +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B192  +
sub eax ecx +
push 0  +
sar eax 1 +
push 9Ch  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [esi+694h] +
push ebx  +
inc eax  +
push eax  +
mov eax [ebp+var_4] +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B1DD  +
sub eax ecx +
push 0  +
sar eax 1 +
push 9Dh  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [esi+698h] +
push ebx  +
inc eax  +
push eax  +
mov eax [ebp+var_4] +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
add esp 14h +
push 1  +
push edi  +
call sub_100A355  +
push 0  +
push 9Eh  +
call sub_100A312  +
lea eax [esi+140h] +
push eax  +
mov eax [esi+698h] +
inc eax  +
push eax  +
lea eax [esi+100h] +
push eax  +
mov eax [esi+694h] +
inc eax  +
push eax  +
lea eax [esi+0C0h] +
push eax  +
mov eax [esi+690h] +
inc eax  +
push eax  +
lea eax [esi+80h] +
push eax  +
mov eax [esi+68Ch] +
inc eax  +
push eax  +
lea eax [esi+40h] +
push eax  +
mov eax [esi+688h] +
inc eax  +
push eax  +
mov eax [esi+684h] +
push esi  +
inc eax  +
push eax  +
mov eax [esi+680h] +
push ebx  +
inc eax  +
push eax  +
push offset aSSSSSSS  +
push 400h  +
push edi  +
call sub_100A6CC  +
add esp 44h +
push 1  +
push edi  +
call sub_100A355  +
push 0  +
push 9Fh  +
call sub_100A312  +
lea eax [esi+2C0h] +
push eax  +
mov eax [esi+698h] +
inc eax  +
push eax  +
lea eax [esi+280h] +
push eax  +
mov eax [esi+694h] +
inc eax  +
push eax  +
lea eax [esi+240h] +
push eax  +
mov eax [esi+690h] +
inc eax  +
push eax  +
lea eax [esi+200h] +
push eax  +
mov eax [esi+68Ch] +
inc eax  +
push eax  +
lea eax [esi+1C0h] +
push eax  +
mov eax [esi+688h] +
inc eax  +
push eax  +
lea eax [esi+180h] +
push eax  +
mov eax [esi+684h] +
inc eax  +
push eax  +
mov eax [esi+680h] +
push ebx  +
inc eax  +
push eax  +
push offset aSSSSSSS  +
push 400h  +
push edi  +
call sub_100A6CC  +
add esp 44h +
push 1  +
push edi  +
call sub_100A355  +
push 0  +
push 0A0h  +
call sub_100A312  +
lea eax [esi+440h] +
push eax  +
mov eax [esi+698h] +
inc eax  +
push eax  +
lea eax [esi+400h] +
push eax  +
mov eax [esi+694h] +
inc eax  +
push eax  +
lea eax [esi+3C0h] +
push eax  +
mov eax [esi+690h] +
inc eax  +
push eax  +
lea eax [esi+380h] +
push eax  +
mov eax [esi+68Ch] +
inc eax  +
push eax  +
lea eax [esi+340h] +
push eax  +
mov eax [esi+688h] +
inc eax  +
push eax  +
lea eax [esi+300h] +
push eax  +
mov eax [esi+684h] +
inc eax  +
push eax  +
mov eax [esi+680h] +
push ebx  +
inc eax  +
push eax  +
push offset aSSSSSSS  +
push 400h  +
push edi  +
call sub_100A6CC  +
add esp 44h +
push 1  +
push edi  +
call sub_100A355  +
push 0  +
push 0A1h  +
call sub_100A312  +
lea eax [esi+5C0h] +
push eax  +
mov eax [esi+698h] +
inc eax  +
push eax  +
lea eax [esi+580h] +
push eax  +
mov eax [esi+694h] +
inc eax  +
push eax  +
lea eax [esi+540h] +
push eax  +
mov eax [esi+690h] +
inc eax  +
push eax  +
lea eax [esi+500h] +
push eax  +
mov eax [esi+68Ch] +
inc eax  +
push eax  +
lea eax [esi+4C0h] +
push eax  +
mov eax [esi+688h] +
inc eax  +
push eax  +
lea eax [esi+480h] +
push eax  +
mov eax [esi+684h] +
inc eax  +
push eax  +
mov eax [esi+680h] +
push ebx  +
inc eax  +
push eax  +
push offset aSSSSSSS  +
push 400h  +
push edi  +
call sub_100A6CC  +
add esp 44h +
push 1  +
push edi  +
call sub_100A355  +
cmp dword_1067C88 0 +
jnz loc_100B685  +
push 0  +
call sub_10073D2  +
mov ecx eax +
call sub_100CD83  +
test eax eax +
jz loc_100B685  +
mov ecx offset unk_1067DB0 +
call sub_1010F33  +
or eax edx +
jz loc_100B685  +
push 1  +
push 96h  +
call sub_100A38C  +
push 0  +
push 0A2h  +
call sub_100A312  +
mov eax [esi+680h] +
push ebx  +
inc eax  +
push eax  +
push offset aS_3  +
push 400h  +
push edi  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B4B8  +
sub eax ecx +
push 0  +
sar eax 1 +
push 97h  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [esi+684h] +
push ebx  +
inc eax  +
push eax  +
mov eax [ebp+var_4] +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B503  +
sub eax ecx +
lea ecx [esi+600h] +
push ecx  +
mov ecx [esi+69Ch] +
sar eax 1 +
inc ecx  +
push ecx  +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B542  +
sub eax ecx +
push 0  +
sar eax 1 +
push 0A3h  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [ebp+var_4] +
push ebx  +
mov ecx 400h +
sub ecx eax +
push offset aS_4  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
add esp 10h +
push 1  +
push edi  +
call sub_100A355  +
push 0  +
push 0A2h  +
call sub_100A312  +
mov eax [esi+680h] +
push ebx  +
inc eax  +
push eax  +
push offset aS_3  +
push 400h  +
push edi  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B5B5  +
sub eax ecx +
push 0  +
sar eax 1 +
push 97h  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [esi+684h] +
push ebx  +
inc eax  +
push eax  +
mov eax [ebp+var_4] +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B600  +
sub eax ecx +
lea ecx [esi+640h] +
push ecx  +
mov ecx [esi+69Ch] +
sar eax 1 +
inc ecx  +
push ecx  +
mov ecx 400h +
sub ecx eax +
push offset aS_3  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B63F  +
sub eax ecx +
push 0  +
sar eax 1 +
push 0A4h  +
mov [ebp+var_4] eax +
call sub_100A312  +
mov eax [ebp+var_4] +
push ebx  +
mov ecx 400h +
sub ecx eax +
push offset aS_4  +
push ecx  +
lea eax word_1078598[eax*2] +
push eax  +
call sub_100A6CC  +
add esp 10h +
push 1  +
push edi  +
call sub_100A355  +
push 1  +
push 96h  +
call sub_100A38C  +
push 0  +
call ds:time  +
pop ecx  +
push 0  +
push 0A8h  +
mov [ebp+var_8] eax +
call sub_100A312  +
mov eax [esi+680h] +
push ebx  +
inc eax  +
push eax  +
push offset aS_3  +
mov esi 400h +
push esi  +
push edi  +
call sub_100A6CC  +
mov eax edi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B6CB  +
sub eax ecx +
push 0  +
sar eax 1 +
push 0A9h  +
mov [ebp+var_4] eax +
call sub_100A312  +
lea eax [ebp+var_8] +
push eax  +
call ds:ctime  +
push eax  +
mov eax [ebp+var_4] +
sub esi eax +
push ebx  +
lea eax word_1078598[eax*2] +
push esi  +
push eax  +
call sub_100A6CC  +
add esp 14h +
push 0  +
push edi  +
call sub_100A355  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
xor eax eax +
push esi  +
mov esi ecx +
push edi  +
push eax  +
push 0AAh  +
mov [esi] ax +
mov [esi+40h] ax +
mov [esi+80h] ax +
mov [esi+0C0h] ax +
mov [esi+100h] ax +
mov [esi+140h] ax +
mov [esi+180h] ax +
mov [esi+1C0h] ax +
mov [esi+200h] ax +
mov [esi+240h] ax +
mov [esi+280h] ax +
mov [esi+2C0h] ax +
mov [esi+300h] ax +
mov [esi+340h] ax +
mov [esi+380h] ax +
mov [esi+3C0h] ax +
mov [esi+400h] ax +
mov [esi+440h] ax +
mov [esi+480h] ax +
mov [esi+4C0h] ax +
mov [esi+500h] ax +
mov [esi+540h] ax +
mov [esi+580h] ax +
mov [esi+5C0h] ax +
mov [esi+600h] ax +
mov [esi+640h] ax +
call sub_100A312  +
push offset dword_10014BC  +
push offset word_1078398  +
push 400h  +
mov edi offset word_1078598 +
push edi  +
call sub_100A6CC  +
mov eax edi +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B7FE  +
sub eax ecx +
push 7  +
sar eax 1 +
pop ecx  +
lea edi [esi+680h] +
stos   +
mov [esi+69Ch] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push 400h  +
push esi  +
call sub_100469C  +
test eax eax +
jge loc_100B84B  +
xor eax eax +
mov [esi] ax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push 20h  +
push esi  +
call sub_100469C  +
test eax eax +
jge loc_100B874  +
xor eax eax +
mov [esi] ax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
call ds:GetLastError  +
mov edi eax +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
push [ebp+arg_0]  +
push 2329h  +
call sub_100A312  +
movzx eax [ebp+SystemTime.wSecond] +
push offset word_1067F18  +
push edi  +
push edi  +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
push offset word_1078398  +
mov esi offset word_1078598 +
push esi  +
call sub_100B827  +
add esp 2Ch +
push 1  +
push esi  +
call sub_100A355  +
xor ebx ebx +
push ebx  +
push [ebp+lpWideCharStr]  +
call sub_100A707  +
cmp [ebp+arg_8] ebx +
jz loc_100B8FF  +
push ebx  +
push [ebp+arg_8]  +
call sub_100A355  +
push ebx  +
push 400h  +
push esi  +
push ebx  +
push edi  +
push ebx  +
push 1000h  +
call ds:FormatMessageW  +
push 1  +
push esi  +
call sub_100A707  +
push edi  +
call ds:SetLastError  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 0Ch  +
***
call __EH_prolog3_GS  +
mov esi [ebp+0Ch] +
xor edi edi +
mov [ebp-94h] edi +
xor eax eax +
mov [ebp-90h] ax +
cmp dword_1067C5C edi +
jz loc_100B995  +
mov ecx esi +
call sub_100D694  +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_100A3EF  +
cmp dword_1067C5C edi +
jz loc_100B995  +
lea eax [ebp-9Ch] +
push eax  +
mov ecx esi +
call sub_100D953  +
mov [ebp-4] edi +
mov dword ptr [ebp-94h] 1 +
jmp loc_100B9B4  +
lea eax [ebp-98h] +
push eax  +
mov ecx esi +
call sub_100D2E3  +
mov dword ptr [ebp-4] 1 +
mov dword ptr [ebp-94h] 2 +
mov eax [eax] +
lea ecx [ebp-90h] +
push ecx  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100B87C  +
test byte ptr [ebp-94h] 2 +
mov [ebp-4] edi +
jz loc_100B9E4  +
and dword ptr [ebp-94h] 0FFFFFFFDh +
lea ecx [ebp-98h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test byte ptr [ebp-94h] 1 +
jz loc_100B9FC  +
lea ecx [ebp-9Ch] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call sub_1011EF1  +
retn 8  +
***
call __EH_prolog3_GS  +
mov esi [ebp+0Ch] +
xor edi edi +
mov [ebp-94h] edi +
xor eax eax +
mov [ebp-90h] ax +
cmp dword_1067C5C edi +
jz loc_100BA6F  +
mov ecx esi +
call sub_100ED29  +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_100A3EF  +
cmp dword_1067C5C edi +
jz loc_100BA6F  +
lea eax [ebp-9Ch] +
push eax  +
mov ecx esi +
call sub_100FE39  +
mov [ebp-4] edi +
mov dword ptr [ebp-94h] 1 +
jmp loc_100BA8E  +
lea eax [ebp-98h] +
push eax  +
mov ecx esi +
call sub_100EC9B  +
mov dword ptr [ebp-4] 1 +
mov dword ptr [ebp-94h] 2 +
mov eax [eax] +
lea ecx [ebp-90h] +
push ecx  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100B87C  +
test byte ptr [ebp-94h] 2 +
mov [ebp-4] edi +
jz loc_100BABE  +
and dword ptr [ebp-94h] 0FFFFFFFDh +
lea ecx [ebp-98h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test byte ptr [ebp-94h] 1 +
jz loc_100BAD6  +
lea ecx [ebp-9Ch] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call sub_1011EF1  +
retn 8  +
***
call __EH_prolog3  +
xor edi edi +
xor ebx ebx +
inc edi  +
mov [ebp-10h] ebx +
cmp dword_1067C8C edi +
jz loc_100C3CB  +
mov esi offset word_1078598 +
cmp dword_1067C5C ebx +
jz loc_100BB4F  +
call ds:GetVersion  +
mov edx eax +
push eax  +
mov ecx eax +
shr edx 10h +
shr ecx 8 +
and edx 7FFFh +
push edx  +
movzx edi al +
and ecx 0FFh +
push ecx  +
push edi  +
push offset aOsversionD_DD0  +
push esi  +
call sub_100B827  +
add esp 18h +
push 1  +
push esi  +
call sub_100A355  +
xor edi edi +
inc edi  +
push ebx  +
push 21h  +
call sub_100A312  +
mov eax dword_1017034 +
movzx eax word_10170A8[eax*2] +
push eax  +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 0Ch +
push ebx  +
push esi  +
call sub_100A355  +
mov ecx dword_1067C20 +
cmp dword_1067C5C ebx +
jz loc_100BB99  +
lea eax [ebp-18h] +
push eax  +
call sub_100D953  +
mov [ebp-4] ebx +
mov [ebp-10h] edi +
jmp loc_100BBAC  +
lea eax [ebp-14h] +
push eax  +
call sub_100D2E3  +
mov [ebp-4] edi +
mov dword ptr [ebp-10h] 2 +
mov eax [eax] +
push ebx  +
push eax  +
call sub_100A707  +
test byte ptr [ebp-10h] 2 +
mov [ebp-4] ebx +
jz loc_100BBCA  +
and dword ptr [ebp-10h] 0FFFFFFFDh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test byte ptr [ebp-10h] 1 +
jz loc_100BBE0  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
mov edi offset aRootSVolnameSS +
cmp dword_1067C5C ebx +
jz loc_100BC3B  +
mov ecx dword_1067C20 +
lea eax [ebp-18h] +
push eax  +
call sub_100D340  +
push dword_1017034  +
mov eax [eax] +
push offset unk_1027808  +
push dword_1067C40  +
push dword_1067C44  +
push dword_1067C3C  +
push offset unk_10273A0  +
push eax  +
push edi  +
push esi  +
call sub_100B827  +
add esp 24h +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
push 1  +
push esi  +
call sub_100A355  +
push ebx  +
push 22h  +
call sub_100A312  +
mov eax dword_1017038 +
movzx eax word_10170A8[eax*2] +
push eax  +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 0Ch +
push ebx  +
push esi  +
call sub_100A355  +
mov ecx dword_1027398 +
cmp dword_1067C5C ebx +
jz loc_100BC8A  +
lea eax [ebp-14h] +
push eax  +
call sub_100D953  +
or dword ptr [ebp-10h] 4 +
mov dword ptr [ebp-4] 2 +
jmp loc_100BC9E  +
lea eax [ebp-18h] +
push eax  +
call sub_100D2E3  +
or dword ptr [ebp-10h] 8 +
mov dword ptr [ebp-4] 3 +
mov eax [eax] +
push ebx  +
push eax  +
call sub_100A707  +
test byte ptr [ebp-10h] 8 +
mov dword ptr [ebp-4] 2 +
jz loc_100BCC0  +
and dword ptr [ebp-10h] 0FFFFFFF7h +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test byte ptr [ebp-10h] 4 +
jz loc_100BCD2  +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
cmp dword_1067C5C ebx +
jz loc_100BD43  +
mov ecx dword_1027398 +
lea eax [ebp-1Ch] +
push eax  +
call sub_100D340  +
push dword_1017038  +
push offset unk_10275C0  +
push dword_1067C4C  +
push dword_1067C50  +
push dword_1067C48  +
push offset unk_1027A18  +
push dword ptr [eax]  +
push edi  +
push esi  +
call sub_100B827  +
add esp 24h +
lea ecx [ebp-1Ch] +
call ??1CString@@QAE@XZ  +
push 1  +
push esi  +
call sub_100A355  +
push dword_101703C  +
push offset aFudgeD  +
push esi  +
call sub_100B827  +
add esp 0Ch +
push 1  +
push esi  +
call sub_100A355  +
xor esi esi +
inc esi  +
push esi  +
push 47h  +
call sub_100A38C  +
cmp dword_1067C58 ebx +
jz loc_100BD63  +
push ebx  +
push offset a__0  +
call sub_100A355  +
jmp loc_100BD6D  +
push offset unk_1067EF8  +
call sub_100A7A9  +
cmp dword_1067DD4 ebx +
jnz loc_100BD7D  +
cmp dword_1067E24 ebx +
jz loc_100BD99  +
push esi  +
push 49h  +
call sub_100A38C  +
push offset unk_1067DC8  +
call sub_100A7A9  +
push offset unk_1067E18  +
call sub_100A7A9  +
cmp dword_1067E40 ebx +
jnz loc_100BDA9  +
cmp dword_1067E78 ebx +
jz loc_100BDC5  +
push esi  +
push 4Bh  +
call sub_100A38C  +
push offset unk_1067E34  +
call sub_100A7A9  +
push offset unk_1067E6C  +
call sub_100A7A9  +
push esi  +
push 51h  +
call sub_100A38C  +
cmp dword_1067C28 ebx +
jz loc_100BDDF  +
push offset aJob_1  +
call sub_100A174  +
cmp dword_1067C58 ebx +
jz loc_100BDF1  +
push offset a__1  +
call sub_100A174  +
cmp dword_1067D60 ebx +
jz loc_100BE03  +
push offset aTbd_0  +
call sub_100A174  +
cmp dword_1067D64 ebx +
jz loc_100BE15  +
push offset aFat_0  +
call sub_100A174  +
cmp dword_1067C54 ebx +
jz loc_100BE27  +
push offset aFft_0  +
call sub_100A174  +
cmp byte_1067C24 bl +
jz loc_100BE39  +
push offset aDst_0  +
call sub_100A174  +
cmp dword_1067D28 ebx +
jz loc_100BE4B  +
push offset a256_0  +
call sub_100A174  +
cmp dword_1067C64 ebx +
jz loc_100BE5D  +
push offset aV  +
call sub_100A174  +
cmp dword_1067C68 ebx +
jz loc_100BE6F  +
push offset asc_1001FBC  +
call sub_100A174  +
cmp dword_1067C6C ebx +
jz loc_100BE81  +
push offset aTs_0  +
call sub_100A174  +
cmp dword_1067C70 ebx +
jz loc_100BE93  +
push offset aFp_0  +
call sub_100A174  +
cmp dword_1067C78 ebx +
jz loc_100BEA5  +
push offset aBytes_0  +
call sub_100A174  +
cmp dword_1067C74 ebx +
jz loc_100BEB7  +
push offset aNs_0  +
call sub_100A174  +
cmp dword_1067C7C ebx +
jz loc_100BEC9  +
push offset aNc_0  +
call sub_100A174  +
cmp dword_1067C80 ebx +
jz loc_100BEDB  +
push offset aNdl_0  +
call sub_100A174  +
cmp dword_1067C84 ebx +
jz loc_100BEED  +
push offset aNfl_0  +
call sub_100A174  +
cmp dword_1067C8C ebx +
jz loc_100BEFF  +
push offset aNjh_0  +
call sub_100A174  +
cmp dword_1067C90 ebx +
jz loc_100BF11  +
push offset aNjs_0  +
call sub_100A174  +
cmp dword_1067C88 ebx +
jz loc_100BF23  +
push offset asc_1001F44  +
call sub_100A174  +
cmp dword_1067C2C ebx +
jz loc_100BF35  +
push offset aTee_0  +
call sub_100A174  +
cmp dword_1067C38 ebx +
jz loc_100BF47  +
push offset aUnicode_1  +
call sub_100A174  +
cmp dword_1067C94 ebx +
jz loc_100BF59  +
push offset aS_5  +
call sub_100A174  +
cmp dword_1067C98 ebx +
jz loc_100BF6B  +
push offset aE  +
call sub_100A174  +
cmp dword_1017040 ebx +
jz loc_100BF9E  +
cmp dword_1017044 ebx +
jz loc_100BFBE  +
cmp dword_1017048 ebx +
jz loc_100BFBE  +
mov al byte ptr dword_1067CBC +
test al 4 +
jz loc_100BFBE  +
test al 1 +
jz loc_100BFBE  +
test al 8 +
jz loc_100BFBE  +
push offset aCopyall_0  +
jmp loc_100C03C  +
cmp dword_1017044 ebx +
jnz loc_100BFBE  +
cmp dword_1017048 ebx +
jnz loc_100BFBE  +
test byte ptr dword_1067CBC 0Dh +
jnz loc_100BFBE  +
push offset aNocopy_0  +
jmp loc_100C03C  +
push offset aCopy_0  +
call sub_100A174  +
cmp dword_1017040 ebx +
jz loc_100BFDA  +
push offset aD  +
call sub_100A174  +
cmp dword_1017044 ebx +
jz loc_100BFEC  +
push offset word_10013F8  +
call sub_100A174  +
cmp dword_1017048 ebx +
jz loc_100BFFE  +
push offset word_10013E0  +
call sub_100A174  +
test byte ptr dword_1067CBC 4 +
jz loc_100C011  +
push offset word_10013F4  +
call sub_100A174  +
test byte ptr dword_1067CBC 1 +
jz loc_100C024  +
push offset word_10013DC  +
call sub_100A174  +
test byte ptr dword_1067CBC 8 +
jz loc_100C037  +
push offset aU  +
call sub_100A174  +
push offset asc_1001B84  +
call sub_100A174  +
cmp dword_1067CB8 ebx +
jz loc_100C053  +
push offset aDcopyT  +
call sub_100A174  +
cmp dword_1067CC4 ebx +
jz loc_100C065  +
push offset aSecfix  +
call sub_100A174  +
cmp dword_1067CC0 ebx +
jz loc_100C077  +
push offset aTimfix_0  +
call sub_100A174  +
cmp dword_1067CCC ebx +
jz loc_100C086  +
push offset aMove_0  +
jmp loc_100C093  +
cmp dword_1067CC8 ebx +
jz loc_100C098  +
push offset aMov_0  +
call sub_100A174  +
cmp dword_1067CD0 ebx +
jz loc_100C0AA  +
push offset aPurge_0  +
call sub_100A174  +
cmp dword_1067CA0 ebx +
jz loc_100C0BC  +
push offset aMir_0  +
call sub_100A174  +
cmp dword_1067C60 ebx +
jz loc_100C0CE  +
push offset aCreate_0  +
call sub_100A174  +
cmp dword_1067CD4 ebx +
jz loc_100C0EF  +
cmp dword_1067CD8 ebx +
jz loc_100C0E5  +
push offset aZb_0  +
jmp loc_100C0FC  +
push offset aZ  +
call sub_100A174  +
cmp dword_1067CD8 ebx +
jz loc_100C101  +
push offset aB  +
call sub_100A174  +
cmp dword_1067CDC ebx +
jz loc_100C113  +
push offset aEfsraw_0  +
call sub_100A174  +
cmp dword_1017050 ebx +
jnz loc_100C125  +
push offset aNp_0  +
call sub_100A174  +
cmp dword_1067CE0 ebx +
jz loc_100C137  +
push offset aEta_0  +
call sub_100A174  +
cmp dword_1017054 ebx +
jnz loc_100C149  +
push offset aIs_0  +
call sub_100A174  +
cmp dword_1017058 ebx +
jnz loc_100C15B  +
push offset aIt_0  +
call sub_100A174  +
cmp dword_1067CEC ebx +
jz loc_100C16D  +
push offset aXl_0  +
call sub_100A174  +
cmp dword_1067CF0 ebx +
jz loc_100C17F  +
push offset aXx_0  +
call sub_100A174  +
cmp dword_1067CF4 ebx +
jz loc_100C191  +
push offset aXo_0  +
call sub_100A174  +
cmp dword_1067CF8 ebx +
jz loc_100C1A3  +
push offset aXn_0  +
call sub_100A174  +
cmp dword_1067CFC ebx +
jz loc_100C1B5  +
push offset aXc_0  +
call sub_100A174  +
cmp dword_1067D1C ebx +
jz loc_100C1C4  +
push offset aXj_0  +
jmp loc_100C1E3  +
cmp dword_1067D20 ebx +
jz loc_100C1D6  +
push offset aXjf_0  +
call sub_100A174  +
cmp dword_1067D24 ebx +
jz loc_100C1E8  +
push offset aXjd_0  +
call sub_100A174  +
cmp dword_1067CE4 ebx +
jz loc_100C1FA  +
push offset aA_1  +
call sub_100A174  +
cmp dword_1067CE8 ebx +
jz loc_100C20C  +
push offset aM  +
call sub_100A174  +
mov eax dword_1067D14 +
cmp eax ebx +
jz loc_100C220  +
push eax  +
push offset aIa_0  +
call sub_100A523  +
mov eax dword_1067D18 +
cmp eax ebx +
jz loc_100C234  +
push eax  +
push offset aXa_0  +
call sub_100A523  +
mov eax dword_1067D2C +
cmp eax ebx +
jz loc_100C248  +
push eax  +
push offset aA_2  +
call sub_100A523  +
mov eax dword_1067D30 +
cmp eax ebx +
jz loc_100C25C  +
push eax  +
push offset aA_3  +
call sub_100A523  +
cmp dword_1067D70 ebx +
jz loc_100C26E  +
push offset aReg_0  +
call sub_100A174  +
cmp dword_1067C5C ebx +
jz loc_100C280  +
push offset aDebug_0  +
call sub_100A174  +
mov eax dword_1067D40 +
mov ecx dword_1067D44 +
mov edx eax +
or edx ecx +
jz loc_100C29D  +
push ecx  +
push eax  +
push offset aMaxI64d  +
call sub_100A218  +
mov eax dword_1067D48 +
mov ecx dword_1067D4C +
mov edx eax +
or edx ecx +
jz loc_100C2BA  +
push ecx  +
push eax  +
push offset aMinI64d  +
call sub_100A218  +
mov eax dword_1067D3C +
cmp eax ebx +
jz loc_100C2CE  +
push eax  +
push offset aMaxageD  +
call sub_100A1C2  +
mov eax dword_1067D50 +
cmp eax ebx +
jz loc_100C2E2  +
push eax  +
push offset aMinageD  +
call sub_100A1C2  +
mov eax dword_1067D54 +
cmp eax ebx +
jz loc_100C2F6  +
push eax  +
push offset aMaxladD  +
call sub_100A1C2  +
mov eax dword_1067D58 +
cmp eax ebx +
jz loc_100C30A  +
push eax  +
push offset aMinladD  +
call sub_100A1C2  +
mov eax dword_1067D34 +
cmp eax ebx +
jz loc_100C31E  +
push eax  +
push offset aLevD  +
call sub_100A1C2  +
mov eax dword_1067CA8 +
cmp eax ebx +
jz loc_100C332  +
push eax  +
push offset aMonD  +
call sub_100A1C2  +
mov eax dword_1067CA4 +
cmp eax ebx +
jz loc_100C346  +
push eax  +
push offset aMotD  +
call sub_100A1C2  +
mov eax dword_1067CAC +
mov ecx dword_1067CB0 +
cmp eax ecx +
jz loc_100C361  +
push ecx  +
push eax  +
push offset aRh04d04d  +
call sub_100A218  +
cmp dword_1067CB4 ebx +
jz loc_100C373  +
push offset aPf_0  +
call sub_100A174  +
mov eax dword_1067D5C +
cmp eax ebx +
jz loc_100C387  +
push eax  +
push offset aIpgD  +
call sub_100A1C2  +
mov eax dword_1067D90 +
cmp eax ebx +
jz loc_100C39B  +
push eax  +
push offset aMtD  +
call sub_100A1C2  +
push Data  +
push offset aRD  +
call sub_100A1C2  +
mov eax dwMilliseconds +
cdq   +
mov ecx 3E8h +
idiv  ecx +
push eax  +
push offset aWD  +
call sub_100A1C2  +
push esi  +
push 7  +
call sub_100A38C  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jz loc_100C3EC  +
call sub_100BAE6  +
push 0  +
push 1Eh  +
jmp loc_100C3F0  +
push 0  +
push 1Fh  +
call sub_100A312  +
push esi  +
push [ebp+arg_4]  +
mov esi offset word_1078598 +
push dword ptr [ebp+arg_0]  +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 10h +
push 1  +
push esi  +
call sub_100A355  +
cmp [ebp+arg_8] 0 +
pop esi  +
jz loc_100C42A  +
push 1  +
push 44Dh  +
call sub_100A38C  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 0E0h  +
call sub_100A312  +
push dword ptr [ebp+arg_0]  +
mov esi offset word_1078598 +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 0Ch +
push 0  +
push esi  +
call sub_100A355  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov dword ptr [ebp+var_54+4] eax +
mov eax [ebp+arg_14] +
push esi  +
push edi  +
mov [ebp+lpWideCharStr] eax +
mov eax [ebp+arg_18] +
xor edi edi +
mov [ebp+var_48] eax +
cmp dword_1067C78 edi +
jz loc_100C4AB  +
push dword ptr [ebp+arg_8+4]  +
push dword ptr [ebp+arg_8]  +
jmp loc_100C537  +
cmp dword_1067C74 edi +
jz loc_100C4BE  +
xor eax eax +
mov [ebp+var_44] ax +
jmp loc_100C548  +
cmp dword ptr [ebp+arg_8+4] edi +
mov ebx dword ptr [ebp+arg_8] +
jl loc_100C533  +
mov esi 40000000h +
jg loc_100C4D1  +
cmp ebx esi +
jb loc_100C4FA  +
push 0Ah  +
pop ecx  +
mov eax ebx +
and eax 3FFFFFFFh +
mul  ecx +
push edi  +
push esi  +
push edx  +
push eax  +
call __alldiv  +
push eax  +
push edi  +
push esi  +
push dword ptr [ebp+arg_8+4]  +
push ebx  +
call __alldiv  +
push eax  +
push offset a4d_01dG  +
jmp loc_100C53C  +
cmp dword ptr [ebp+arg_8+4] edi +
jl loc_100C533  +
mov esi 100000h +
jg loc_100C50A  +
cmp ebx esi +
jb loc_100C533  +
push 0Ah  +
pop ecx  +
mov eax ebx +
and eax 0FFFFFh +
mul  ecx +
push edi  +
push esi  +
push edx  +
push eax  +
call __alldiv  +
push eax  +
push edi  +
push esi  +
push dword ptr [ebp+arg_8+4]  +
push ebx  +
call __alldiv  +
push eax  +
push offset a4d_01dM  +
jmp loc_100C53C  +
push dword ptr [ebp+arg_8+4]  +
push ebx  +
push offset a8i64d  +
lea eax [ebp+var_44] +
push eax  +
call sub_100B853  +
add esp 10h +
push [ebp+arg_4]  +
push [ebp+uID]  +
call sub_100A312  +
cmp dword_1067C7C edi +
jz loc_100C563  +
xor eax eax +
mov word_1067F18 ax +
push [ebp+var_48]  +
lea eax [ebp+var_44] +
push dword ptr [ebp+var_54+4]  +
mov ebx offset word_1067F18 +
push eax  +
push ebx  +
push offset word_1078398  +
mov esi offset word_1078598 +
push esi  +
call sub_100B827  +
add esp 18h +
push 1  +
push esi  +
call sub_100A355  +
push edi  +
push [ebp+lpWideCharStr]  +
xor eax eax +
mov word_1078598 ax +
call sub_100A707  +
cmp [ebp+arg_1C] edi +
jz loc_100C6D8  +
mov edi offset unk_1067DB0 +
mov ecx edi +
call sub_1010F33  +
or eax edx +
jz loc_100C6D8  +
push 0  +
call sub_10073D2  +
mov ecx eax +
call sub_100CD83  +
test eax eax +
jz loc_100C6D8  +
push 0  +
call sub_10073D2  +
mov ecx eax +
call sub_100CD83  +
mov dword ptr [ebp+var_54+4] eax +
fild  dword ptr [ebp+var_54+4] +
mov ecx edi +
fdiv  ds:dbl_1001B98 +
fstp  [ebp+var_68] +
fild  [ebp+arg_8] +
fstp  [ebp+var_60] +
call sub_1010F33  +
mov dword ptr [ebp+var_54] eax +
mov dword ptr [ebp+var_54+4] edx +
fild  [ebp+var_54] +
fdiv  [ebp+var_68] +
fdivr  [ebp+var_60] +
call _ftol2_sse  +
mov edi eax +
lea eax [ebp+var_48] +
push eax  +
call ds:time  +
mov eax [ebp+var_48] +
pop ecx  +
push [ebp+lpWideCharStr]  +
add eax edi +
mov [ebp+var_58] eax +
call ds:lstrlenW  +
cmp eax 8 +
mov edi 400h +
jge loc_100C644  +
push offset asc_100151C  +
push edi  +
push esi  +
call sub_1004625  +
push [ebp+lpWideCharStr]  +
call ds:lstrlenW  +
cmp eax 2 +
jge loc_100C65E  +
push offset asc_100151C  +
push edi  +
push esi  +
call sub_1004625  +
push offset asc_100151C  +
push edi  +
push esi  +
call sub_1004625  +
lea eax [ebp+var_48] +
push eax  +
call ds:ctime  +
push eax  +
push offset aHs  +
push ebx  +
call sub_10046FC  +
add esp 10h +
push offset unk_1067F2E  +
push edi  +
xor eax eax +
push esi  +
mov word_1067F38 ax +
call sub_1004625  +
push offset asc_100217C  +
push edi  +
push esi  +
call sub_1004625  +
lea eax [ebp+var_58] +
push eax  +
call ds:ctime  +
push eax  +
push offset aHs  +
push ebx  +
call sub_10046FC  +
add esp 10h +
push offset unk_1067F2E  +
push edi  +
xor eax eax +
push esi  +
mov word_1067F38 ax +
call sub_1004625  +
push 0  +
push esi  +
call sub_100A355  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1011DD7  +
leave   +
retn 20h  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
xor edi edi +
mov [ebp-94h] edi +
cmp [ebp+14h] edi +
jz loc_100C715  +
mov eax [esi+60h] +
mov edx [esi+64h] +
jmp loc_100C71C  +
mov ecx esi +
call sub_100D48A  +
mov ebx eax +
xor eax eax +
mov [ebp-0A0h] edx +
mov [ebp-90h] ax +
cmp dword_1067C5C edi +
jz loc_100C749  +
mov ecx esi +
call sub_100D694  +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_100A3EF  +
cmp dword_1067C80 edi +
jz loc_100C75A  +
cmp [ebp+10h] edi +
jz loc_100C7FE  +
mov ecx esi +
cmp dword_1067C5C edi +
jz loc_100C77F  +
lea eax [ebp-98h] +
push eax  +
call sub_100D953  +
mov [ebp-4] edi +
mov dword ptr [ebp-94h] 1 +
jmp loc_100C79C  +
lea eax [ebp-9Ch] +
push eax  +
call sub_100D2E3  +
mov dword ptr [ebp-4] 1 +
mov dword ptr [ebp-94h] 2 +
mov eax [eax] +
push edi  +
push offset dword_10014BC  +
push eax  +
lea eax [ebp-90h] +
push eax  +
push dword ptr [ebp-0A0h]  +
mov ecx esi +
push ebx  +
call sub_100D478  +
add eax [ebp+0Ch] +
push eax  +
push 0FA1h  +
call sub_100C46F  +
test byte ptr [ebp-94h] 2 +
mov [ebp-4] edi +
jz loc_100C7E6  +
and dword ptr [ebp-94h] 0FFFFFFFDh +
lea ecx [ebp-9Ch] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test byte ptr [ebp-94h] 1 +
jz loc_100C7FE  +
lea ecx [ebp-98h] +
call ??1CString@@QAE@XZ  +
call sub_1011EF1  +
retn 10h  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
xor ebx ebx +
mov ecx esi +
mov [ebp-114h] ebx +
call sub_100ED0E  +
mov [ebp-130h] eax +
xor eax eax +
mov [ebp-12Ch] edx +
mov [ebp-110h] ax +
cmp dword_1067C5C ebx +
jz loc_100C85D  +
mov ecx esi +
call sub_100ED29  +
push eax  +
lea eax [ebp-110h] +
push eax  +
call sub_100A3EF  +
mov ecx esi +
call sub_100EA96  +
test eax eax +
jz loc_100CA81  +
xor eax eax +
push 7Eh  +
mov [ebp-90h] ax +
lea eax [ebp-8Eh] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
cmp dword_1067C6C ebx +
jz loc_100C93E  +
lea eax [ebp-128h] +
push eax  +
lea eax [esi+4] +
push eax  +
call ds:FileTimeToSystemTime  +
cmp dword_1067C5C ebx +
jz loc_100C8FA  +
movzx eax word ptr [ebp-11Ah] +
push eax  +
movzx eax word ptr [ebp-11Ch] +
push eax  +
movzx eax word ptr [ebp-11Eh] +
push eax  +
movzx eax word ptr [ebp-120h] +
push eax  +
movzx eax word ptr [ebp-122h] +
push eax  +
movzx eax word ptr [ebp-126h] +
push eax  +
movzx eax word ptr [ebp-128h] +
push eax  +
lea eax [ebp-90h] +
push offset aD02d02d02d02d0  +
push eax  +
call sub_10046FC  +
add esp 24h +
jmp loc_100C93E  +
movzx eax word ptr [ebp-11Ch] +
push eax  +
movzx eax word ptr [ebp-11Eh] +
push eax  +
movzx eax word ptr [ebp-120h] +
push eax  +
movzx eax word ptr [ebp-122h] +
push eax  +
movzx eax word ptr [ebp-126h] +
push eax  +
movzx eax word ptr [ebp-128h] +
push eax  +
lea eax [ebp-90h] +
push offset aD02d02d02d02_0  +
push eax  +
call sub_10046FC  +
add esp 20h +
cmp dword_1067C84 ebx +
jz loc_100C94F  +
cmp [ebp+10h] ebx +
jz loc_100CB3E  +
mov ecx esi +
call sub_100ED58  +
xor ebx ebx +
inc ebx  +
test eax eax +
jz loc_100C96F  +
xor eax eax +
cmp dword_1067CE0 eax +
jz loc_100C971  +
mov [ebp-118h] ebx +
jmp loc_100C977  +
xor eax eax +
mov [ebp-118h] eax +
cmp dword_1067C70 eax +
jnz loc_100C9A3  +
cmp dword_1067C80 eax +
jnz loc_100C9A3  +
lea eax [ebp-134h] +
push eax  +
mov ecx esi +
call sub_100EC60  +
mov edi eax +
and dword ptr [ebp-4] 0 +
mov [ebp-114h] ebx +
jmp loc_100C9E7  +
mov ecx esi +
cmp dword_1067C5C eax +
jz loc_100C9C8  +
lea eax [ebp-140h] +
push eax  +
call sub_100FE39  +
mov [ebp-4] ebx +
mov dword ptr [ebp-114h] 2 +
jmp loc_100C9E5  +
lea eax [ebp-13Ch] +
push eax  +
call sub_100EC9B  +
mov dword ptr [ebp-4] 2 +
mov dword ptr [ebp-114h] 4 +
mov edi eax +
xor eax eax +
cmp dword_1067C7C eax +
jnz loc_100C9FB  +
mov ecx esi +
call sub_100ED3B  +
add eax [ebp+0Ch] +
push dword ptr [ebp-118h]  +
mov ecx [edi] +
lea edx [ebp-90h] +
push edx  +
push ecx  +
lea ecx [ebp-110h] +
push ecx  +
push dword ptr [ebp-12Ch]  +
push dword ptr [ebp-130h]  +
push eax  +
push 0FABh  +
call sub_100C46F  +
test byte ptr [ebp-114h] 4 +
mov [ebp-4] ebx +
jz loc_100CA47  +
and dword ptr [ebp-114h] 0FFFFFFFBh +
lea ecx [ebp-13Ch] +
call ??1CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
test byte ptr [ebp-114h] 2 +
jz loc_100CA66  +
and dword ptr [ebp-114h] 0FFFFFFFDh +
lea ecx [ebp-140h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test [ebp-114h] bl +
jz loc_100CB3E  +
lea ecx [ebp-134h] +
jmp loc_100CB39  +
cmp dword_1067C80 ebx +
jz loc_100CA92  +
cmp [ebp+10h] ebx +
jz loc_100CB3E  +
push 3  +
pop edi  +
mov ecx esi +
cmp dword_1067C5C ebx +
jz loc_100CABA  +
lea eax [ebp-138h] +
push eax  +
call sub_100FE39  +
mov [ebp-4] edi +
mov dword ptr [ebp-114h] 8 +
jmp loc_100CAD7  +
lea eax [ebp-118h] +
push eax  +
call sub_100EC9B  +
mov dword ptr [ebp-4] 4 +
mov dword ptr [ebp-114h] 10h +
mov eax [eax] +
push ebx  +
push offset dword_10014BC  +
push eax  +
lea eax [ebp-110h] +
push eax  +
push dword ptr [ebp-12Ch]  +
mov ecx esi +
push dword ptr [ebp-130h]  +
call sub_100ED3B  +
add eax [ebp+0Ch] +
push eax  +
push 0FA1h  +
call sub_100C46F  +
test byte ptr [ebp-114h] 10h +
mov [ebp-4] edi +
jz loc_100CB26  +
and dword ptr [ebp-114h] 0FFFFFFEFh +
lea ecx [ebp-118h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test byte ptr [ebp-114h] 8 +
jz loc_100CB3E  +
lea ecx [ebp-138h] +
call ??1CString@@QAE@XZ  +
call sub_1011EF1  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 0E5h  +
call sub_100A312  +
push [ebp+arg_0]  +
mov esi offset word_1078598 +
push dword_1067CA4  +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 10h +
push 0  +
push esi  +
call sub_100A355  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1017050 0 +
jz loc_100CBC8  +
push esi  +
push 0  +
push 0E7h  +
call sub_100A312  +
push [ebp+arg_4]  +
mov esi offset word_1078598 +
push dword ptr [ebp+arg_0]  +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 10h +
push 0  +
push esi  +
call sub_100A355  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0  +
push 0E9h  +
call sub_100A312  +
mov eax [ebp+arg_4] +
push 64h  +
pop ecx  +
cdq   +
idiv  ecx +
push 64h  +
pop edi  +
mov esi eax +
mov eax [ebp+arg_0] +
mov ecx edx +
cdq   +
idiv  edi +
push ecx  +
push esi  +
mov esi offset word_1078598 +
push edx  +
push eax  +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 18h +
push 0  +
push esi  +
call sub_100A355  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 0FBFh  +
call sub_100A312  +
mov eax [ebp+arg_0] +
push 65h  +
pop ecx  +
cdq   +
idiv  ecx +
mov esi offset word_1078598 +
push edx  +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 0Ch +
push 0  +
push esi  +
call sub_100A355  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 64h +
jnz loc_100CC79  +
push 64h  +
call sub_100CC24  +
jmp loc_100CCB6  +
push esi  +
push 0  +
push 0FB5h  +
call sub_100A312  +
mov eax [ebp+arg_4] +
push 0Ah  +
pop ecx  +
cdq   +
idiv  ecx +
mov eax [ebp+arg_0] +
mov esi offset word_1078598 +
push edx  +
push 65h  +
pop ecx  +
cdq   +
idiv  ecx +
push edx  +
push offset word_1078398  +
push esi  +
call sub_100B827  +
add esp 10h +
push 0  +
push esi  +
call sub_100A355  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+uID]  +
call sub_100A312  +
lea eax [ebp+arg_4] +
push eax  +
call ds:ctime  +
push eax  +
push offset word_1078398  +
mov esi offset word_1078598 +
push esi  +
call sub_100B827  +
add esp 10h +
push 0  +
push esi  +
call sub_100A355  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp dword_1067C8C 1 +
jz locret_100CD34  +
push 1  +
push 3  +
call sub_100A38C  +
push 0  +
push 5  +
call sub_100A38C  +
push 1  +
push 3  +
call sub_100A38C  +
push 0  +
call ds:time  +
pop ecx  +
push eax  +
push 20h  +
call sub_100CCBF  +
retn   +
***
mov eax offset off_1002254 +
retn   +
***
mov eax ecx +
and dword ptr [eax+4] 0 +
and dword ptr [eax+8] 0 +
mov dword ptr [eax] offset off_1002288 +
retn   +
***
mov dword ptr [ecx] offset off_1002270 +
retn   +
***
xor eax eax +
cmp [ecx+4] eax +
setnz al  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call ds:GetLastError  +
cmp dword ptr [esi+4] 0 +
mov edi eax +
jz loc_100CDAE  +
call ds:clock  +
mov ecx [esi+4] +
cmp eax ecx +
jle loc_100CDAB  +
mov edx eax +
sub edx ecx +
add [esi+8] edx +
mov [esi+4] eax +
push edi  +
call ds:SetLastError  +
mov eax [esi+8] +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
call sub_100CD83  +
add [esi+8] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ds:GetLastError  +
mov ecx esi +
mov edi eax +
call sub_100CD83  +
mov ebx eax +
call ds:clock  +
mov [esi+4] eax +
test eax eax +
jnz loc_100CE09  +
mov dword ptr [esi+4] 1 +
push edi  +
call ds:SetLastError  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ds:GetLastError  +
mov ecx esi +
mov edi eax +
call sub_100CD83  +
and dword ptr [esi+4] 0 +
push edi  +
mov ebx eax +
call ds:SetLastError  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ds:GetLastError  +
mov ecx esi +
mov edi eax +
call sub_100CD83  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
push edi  +
mov ebx eax +
call ds:SetLastError  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi] +
push 1  +
push 0Ch  +
push esi  +
call ?AfxIsValidAddress@@YGHPBXIH@Z  +
test eax eax +
jnz loc_100CE9A  +
call MFC42u_6928  +
mov eax [esi+4] +
mov [edi] eax +
pop edi  +
lea eax [esi+8] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jl loc_100CEC6  +
mov eax [ecx] +
cmp edx [eax-8] +
jge loc_100CEC6  +
mov ax [eax+edx*2] +
jmp loc_100CEC8  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov eax ds:?classCObject@CObject@@2UCRuntimeClass@@B +
retn   +
***
mov eax offset off_10022A4 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ebx [esi+8] +
xor edi edi +
mov ecx ebx +
mov [ebp-4] edi +
mov dword ptr [esi] offset off_10022C0 +
call ??0CString@@QAE@XZ  +
push 0Ah  +
lea ecx [esi+1Ch] +
mov byte ptr [ebp-4] 1 +
call ??0CObList@@QAE@H@Z  +
push 0Ah  +
lea ecx [esi+38h] +
mov byte ptr [ebp-4] 2 +
call ??0CObList@@QAE@H@Z  +
mov ecx ebx +
mov byte ptr [ebp-4] 3 +
mov [esi+4] edi +
call ?Empty@CString@@QAEXXZ  +
mov [esi+0Ch] edi +
mov [esi+14h] edi +
mov [esi+18h] edi +
inc dword_1078DA0  +
mov dword ptr [esi+54h] 1 +
mov [esi+5Ch] edi +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+8] +
push edi  +
mov [ebp+arg_0] eax +
jmp loc_100CFB1  +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_0] +
push eax  +
call sub_100CE7B  +
push dword ptr [eax]  +
mov ecx ebx +
call sub_100EB83  +
mov edi eax +
test edi edi +
jnz loc_100CF9D  +
test ebx ebx +
jz loc_100CFBD  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax+4]  +
test edi edi +
jle loc_100CFAA  +
push ebx  +
push [ebp+arg_4]  +
mov ecx esi +
call ?InsertAfter@CObList@@QAEPAU__POSITION@@PAU2@PAVCObject@@@Z  +
test edi edi +
jge loc_100CFBD  +
mov eax [ebp+arg_0] +
mov ecx esi +
test eax eax +
jnz loc_100CF73  +
push ebx  +
call ?AddHead@CObList@@QAEPAU__POSITION@@PAVCObject@@@Z  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+4] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100D017  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx edi +
call sub_1003175  +
mov esi [eax] +
push [ebp+arg_4]  +
mov ecx esi +
call sub_100EB69  +
test eax eax +
jz loc_100D006  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_100FDC2  +
test eax eax +
jnz loc_100D010  +
push [ebp+arg_8]  +
mov ecx esi +
call sub_100ED44  +
cmp [ebp+arg_0] 0 +
jnz loc_100CFDD  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+0Ch] 0 +
jnz loc_100D033  +
xor eax eax +
jmp loc_100D038  +
call ?RemoveHead@CObList@@QAEPAVCObject@@XZ  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx [edi+4] +
mov [ebp+arg_0] ebx +
jmp loc_100D070  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx edi +
call sub_1003175  +
mov esi [eax] +
mov ecx esi +
call sub_100ED3B  +
cmp eax [ebp+arg_4] +
jz loc_100D07D  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_100D054  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
push ebx  +
mov ecx edi +
call ?RemoveAt@CObList@@QAEXPAU__POSITION@@@Z  +
mov eax esi +
jmp loc_100D076  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx [edi+4] +
mov [ebp+arg_0] ebx +
jmp loc_100D0BF  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx edi +
call sub_1003175  +
mov esi [eax] +
push [ebp+arg_4]  +
mov ecx esi +
call sub_100EB83  +
test eax eax +
jz loc_100D0CC  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_100D0A1  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
push ebx  +
mov ecx edi +
call ?RemoveAt@CObList@@QAEXPAU__POSITION@@@Z  +
mov eax esi +
jmp loc_100D0C5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx [edi+4] +
mov [ebp+arg_0] ebx +
jmp loc_100D124  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx edi +
call sub_1003175  +
mov esi [eax] +
mov ecx esi +
call sub_100ED29  +
and eax [ebp+arg_4] +
cmp [ebp+arg_8] 0 +
jz loc_100D11D  +
test eax eax +
jz loc_100D121  +
push ebx  +
mov ecx edi +
call ?RemoveAt@CObList@@QAEXPAU__POSITION@@@Z  +
mov eax esi +
jmp loc_100D12A  +
test eax eax +
jz loc_100D111  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_100D0F0  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx [edi+4] +
mov [ebp+arg_0] ebx +
jmp loc_100D18A  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx edi +
call sub_1003175  +
mov esi [eax] +
mov ecx esi +
call sub_100ED0E  +
cmp [ebp+arg_C] 0 +
jz loc_100D17B  +
cmp edx [ebp+arg_8] +
jg loc_100D16F  +
jl loc_100D187  +
cmp eax [ebp+arg_4] +
jbe loc_100D187  +
push ebx  +
mov ecx edi +
call ?RemoveAt@CObList@@QAEXPAU__POSITION@@@Z  +
mov eax esi +
jmp loc_100D190  +
cmp edx [ebp+arg_8] +
jl loc_100D16F  +
jg loc_100D187  +
cmp eax [ebp+arg_4] +
jb loc_100D16F  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_100D149  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+4] +
push esi  +
push edi  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100D1FD  +
mov edi ds:CompareFileTime +
mov [ebp+var_4] eax +
lea eax [ebp+arg_0] +
push eax  +
mov ecx ebx +
call sub_1003175  +
cmp [ebp+arg_C] 0 +
mov esi [eax] +
lea eax [esi+0Ch] +
jnz loc_100D1D4  +
lea eax [esi+4] +
push eax  +
push [ebp+lpFileTime1]  +
call edi  +
cmp [ebp+arg_8] 0 +
jz loc_100D1F2  +
test eax eax +
jle loc_100D1F6  +
push [ebp+var_4]  +
mov ecx ebx +
call ?RemoveAt@CObList@@QAEXPAU__POSITION@@@Z  +
mov eax esi +
jmp loc_100D1FF  +
test eax eax +
jl loc_100D1E4  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_100D1B8  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
jmp loc_100D22A  +
mov ecx esi +
call ?RemoveHead@CObList@@QAEPAVCObject@@XZ  +
test eax eax +
jz loc_100D22A  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx+4]  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_100D216  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+1Ch] +
push eax  +
call sub_100D20B  +
lea eax [esi+38h] +
push eax  +
mov ecx esi +
call sub_100D20B  +
pop esi  +
retn   +
***
retn   +
***
call __EH_prolog3  +
mov ebx ecx +
mov edi [ebp+8] +
mov eax [edi] +
mov eax [eax-8] +
lea esi [eax-1] +
test esi esi +
jl loc_100D291  +
push esi  +
mov ecx edi +
call sub_100CEAD  +
cmp ax 5Ch +
jnz loc_100D291  +
dec esi  +
jns loc_100D280  +
inc esi  +
push esi  +
lea eax [ebp-10h] +
push eax  +
mov ecx edi +
call ?Left@CString@@QBE?AV1@H@Z  +
and dword ptr [ebp-4] 0 +
push offset asc_10014B0  +
push eax  +
lea eax [ebp+8] +
push eax  +
call ??H@YG?AVCString@@ABV0@PBG@Z  +
push eax  +
lea ecx [ebx+8] +
mov byte ptr [ebp-4] 1 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
and dword ptr [ebp-10h] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_100D324  +
lea eax [ebp-10h] +
push eax  +
call sub_100D2E3  +
and dword ptr [ebp-4] 0 +
add esi 8 +
push esi  +
push eax  +
push dword ptr [ebp+8]  +
call ??H@YG?AVCString@@ABV0@0@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
jmp loc_100D330  +
mov ecx [ebp+8] +
add esi 8 +
push esi  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
mov eax ecx +
mov ecx [eax+4] +
test ecx ecx +
jz loc_100D35D  +
push [ebp+arg_0]  +
call sub_100D340  +
jmp loc_100D369  +
mov ecx [ebp+arg_0] +
add eax 8 +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [ebp+arg_0] +
leave   +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-14h] ecx +
lea eax [ebp-10h] +
push eax  +
call sub_100D340  +
mov eax [ebp+18h] +
mov ecx [ebp+1Ch] +
xor ebx ebx +
mov [eax] ebx +
mov eax [ebp+14h] +
mov [eax] ebx +
mov eax [ebp+10h] +
mov [eax] ebx +
mov eax [ebp+0Ch] +
mov esi 104h +
mov [ebp-4] ebx +
sub ecx eax +
mov edx esi +
xor edi edi +
mov [ecx+eax] di +
mov [eax] di +
inc eax  +
inc eax  +
dec edx  +
jnz loc_100D3B0  +
mov edi ds:SetLastError +
push ebx  +
call edi  +
push esi  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+10h]  +
push esi  +
mov esi [ebp+0Ch] +
push esi  +
push dword ptr [ebp-10h]  +
call ds:GetVolumeInformationW  +
mov ecx [ebp+1Ch] +
mov [ebp+14h] eax +
xor eax eax +
mov [ecx+206h] ax +
mov [esi+206h] ax +
call ds:GetLastError  +
cmp [ebp+14h] ebx +
jnz loc_100D42C  +
push ebx  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-14h]  +
call sub_100753D  +
push ebx  +
call edi  +
push 2  +
pop ebx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn 18h  +
push 0FFFFFFFFh  +
push offset aNtfs  +
push 0FFFFFFFFh  +
push dword ptr [ebp+1Ch]  +
push 1  +
push 7Fh  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jnz loc_100D416  +
xor ebx ebx +
inc ebx  +
jmp loc_100D416  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+0Ch] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+10h] eax +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
cdq   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
lea esi [ecx+8] +
mov eax [esi] +
push edi  +
mov edi [eax-8] +
xor ebx ebx +
cmp edi ebx +
mov [ebp+var_4] ebx +
jle loc_100D4C4  +
push ebx  +
mov ecx esi +
call sub_100CEAD  +
cmp ax 5Ch +
jnz loc_100D4BF  +
inc [ebp+var_4]  +
inc ebx  +
cmp ebx edi +
jl loc_100D4AE  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
mov ebx ecx +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor esi esi +
mov [ebp-4] esi +
cmp ecx esi +
jz loc_100D4FC  +
call sub_100CEE7  +
mov esi eax +
push dword ptr [ebp+8]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-10h] +
lea edi [ebx+8] +
push eax  +
mov ecx edi +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [esi+8] +
mov dword ptr [ebp-4] 1 +
call ??4CString@@QAEABV0@ABV0@@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax [ebx+4] +
mov [esi+4] eax +
mov eax [edi] +
mov eax [eax-8] +
sub eax [ebp+8] +
mov ecx edi +
push eax  +
lea eax [ebp+8] +
push eax  +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
mov ecx edi +
mov dword ptr [ebp-4] 2 +
call ??4CString@@QAEABV0@ABV0@@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
mov [ebx+4] esi +
inc dword ptr [esi+54h]  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ds:CompareStringW +
xor ebx ebx +
inc ebx  +
push ebx  +
push offset word_10013F8  +
lea esi [ecx+8] +
mov eax [esi] +
push ebx  +
push eax  +
push ebx  +
push 7Fh  +
mov [ebp+var_4] ecx +
call edi  +
sub eax 2 +
js loc_100D618  +
mov eax [esi] +
push ebx  +
push offset aZ_0  +
push ebx  +
push eax  +
push ebx  +
push 7Fh  +
call edi  +
dec eax  +
dec eax  +
test eax eax +
jg loc_100D618  +
mov eax [esi] +
cmp [eax-8] ebx +
jle loc_100D5C5  +
movzx eax word ptr [eax+2] +
jmp loc_100D5C7  +
xor eax eax +
cmp ax 3Ah +
jnz loc_100D618  +
mov eax [esi] +
cmp dword ptr [eax-8] 2 +
jle loc_100D5DB  +
movzx eax word ptr [eax+4] +
jmp loc_100D5DD  +
xor eax eax +
cmp ax 5Ch +
jnz loc_100D618  +
mov ecx [ebp+var_4] +
call sub_100D494  +
cmp eax ebx +
jle loc_100D618  +
mov edi [ebp+var_4] +
push 3  +
jmp loc_100D604  +
push offset asc_10014B0  +
mov ecx esi +
call ?Find@CString@@QBEHPBG@Z  +
inc eax  +
push eax  +
mov ecx edi +
call sub_100D4D1  +
mov ecx edi +
call sub_100D494  +
cmp eax ebx +
jg loc_100D5F6  +
jmp loc_100D68A  +
mov eax [esi] +
push 2  +
push offset asc_10022E0  +
push 2  +
push eax  +
push ebx  +
push 7Fh  +
call edi  +
dec eax  +
dec eax  +
jnz loc_100D68A  +
mov ecx [ebp+var_4] +
call sub_100D494  +
cmp eax 4 +
jle loc_100D68A  +
mov eax [esi] +
mov eax [eax-8] +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] eax +
cmp edi [ebp+var_C] +
jge loc_100D664  +
push edi  +
mov ecx esi +
call sub_100CEAD  +
cmp ax 5Ch +
jnz loc_100D65D  +
inc [ebp+var_8]  +
inc edi  +
cmp [ebp+var_8] 4 +
jl loc_100D647  +
push edi  +
mov edi [ebp+var_4] +
jmp loc_100D678  +
push offset asc_10014B0  +
mov ecx esi +
call ?Find@CString@@QBEHPBG@Z  +
inc eax  +
push eax  +
mov ecx edi +
call sub_100D4D1  +
mov ecx edi +
call sub_100D494  +
cmp eax ebx +
jg loc_100D66A  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
retn   +
***
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [esi] offset off_10022C0 +
xor ebx ebx +
mov [ebp-4] ebx +
mov byte ptr [ebp-4] 4 +
call sub_100D23A  +
mov ecx [esi+4] +
cmp ecx ebx +
jz loc_100D6D7  +
call sub_1003265  +
lea ecx [esi+8] +
mov [esi+4] ebx +
call ?Empty@CString@@QAEXXZ  +
mov [esi+0Ch] ebx +
dec dword_1078DA0  +
jnz loc_100D709  +
mov eax hMem +
cmp eax ebx +
jz loc_100D709  +
push eax  +
call ds:GlobalFree  +
mov hMem ebx +
mov dword_1078D9C ebx +
mov dword ptr [ebp-4] 3 +
jmp loc_100D74A  +
call ds:GetLastError  +
cmp dword_1067C5C 0 +
mov esi eax +
jz loc_100D731  +
push esi  +
push offset aExceptionInCzd  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
push esi  +
call ds:SetLastError  +
mov dword ptr [ebp-4] 3 +
mov eax offset loc_100D745 +
retn   +
mov esi [ebp-14h] +
xor ebx ebx +
lea ecx [esi+38h] +
mov byte ptr [ebp-4] 2 +
call ??1CObList@@UAE@XZ  +
lea ecx [esi+1Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CObList@@UAE@XZ  +
lea ecx [esi+8] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov dword ptr [esi] offset off_1002270 +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
test eax eax +
jnz loc_100D79D  +
mov ecx edi +
call sub_100EC57  +
mov [esi+4] eax +
inc dword ptr [eax+54h]  +
lea eax [ebp+0Ch] +
push eax  +
mov ecx edi +
call sub_100EC60  +
and dword ptr [ebp-4] 0 +
push eax  +
mov ecx esi +
call sub_100D263  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
mov ecx edi +
call sub_100ED3B  +
mov ecx edi +
mov [esi+0Ch] eax +
call sub_100ED29  +
mov ecx edi +
mov [esi+14h] eax +
call sub_100ED32  +
mov [esi+18h] eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
lea eax [ecx+1Ch] +
push [ebp+arg_0]  +
push eax  +
call sub_100CFC9  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
lea eax [ecx+38h] +
push [ebp+arg_0]  +
push eax  +
call sub_100CFC9  +
pop ebp  +
retn 8  +
***
lea eax [ecx+1Ch] +
push eax  +
call sub_100D021  +
retn   +
***
lea eax [ecx+38h] +
push eax  +
call sub_100D021  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
lea eax [ecx+1Ch] +
push eax  +
call sub_100D041  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
lea eax [ecx+38h] +
push eax  +
call sub_100D041  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
lea eax [ecx+1Ch] +
push eax  +
call sub_100D08E  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
lea eax [ecx+38h] +
push eax  +
call sub_100D08E  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_100D897  +
test eax eax +
jnz loc_100D8CF  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_100D87D  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
lea eax [ecx+1Ch] +
push [ebp+arg_0]  +
push eax  +
call sub_100D0DD  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
lea eax [ecx+38h] +
push [ebp+arg_0]  +
push eax  +
call sub_100D0DD  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
lea eax [ecx+1Ch] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call sub_100D136  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
lea eax [ecx+1Ch] +
push [ebp+arg_4]  +
push [ebp+lpFileTime1]  +
push eax  +
call sub_100D19C  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
and dword ptr [ebp-14h] 0 +
cmp dword_1067D28 0 +
jz loc_100D97B  +
push dword ptr [ebp+8]  +
call sub_100D2E3  +
jmp loc_100DA03  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_100D9AA  +
lea eax [ebp-10h] +
push eax  +
call sub_100D953  +
and dword ptr [ebp-4] 0 +
add esi 8 +
push esi  +
push eax  +
push dword ptr [ebp+8]  +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ??1CString@@QAE@XZ  +
jmp loc_100DA03  +
push 2  +
push offset asc_10022E0  +
push 2  +
add esi 8 +
mov eax [esi] +
push eax  +
push 1  +
push 7Fh  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jnz loc_100D9F5  +
mov eax [esi] +
mov eax [eax-8] +
add eax 0FFFFFFFEh +
push eax  +
lea eax [ebp-14h] +
push eax  +
mov ecx esi +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
push offset a?Unc  +
push dword ptr [ebp+8]  +
mov dword ptr [ebp-4] 1 +
call ??H@YG?AVCString@@PBGABV0@@Z  +
lea ecx [ebp-14h] +
jmp loc_100D99F  +
push esi  +
push offset a?_1  +
push dword ptr [ebp+8]  +
call ??H@YG?AVCString@@PBGABV0@@Z  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D6A6  +
test byte ptr [ebp+8] 1 +
jz loc_100DA2D  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push edi  +
lea eax [ebp+lpFileName] +
xor edi edi +
push eax  +
mov ebx ecx +
mov [ebp+BytesReturned] edi +
mov [ebp+var_10] edi +
call sub_100D953  +
push edi  +
push 2200080h  +
push 3  +
push edi  +
push 3  +
push 80000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_100DAE1  +
push esi  +
mov esi 4000h +
push esi  +
call ds:malloc  +
pop ecx  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_100DAD7  +
push edi  +
lea ecx [ebp+BytesReturned] +
push ecx  +
push esi  +
push eax  +
push edi  +
push edi  +
push 900A8h  +
push [ebp+hObject]  +
call ds:DeviceIoControl  +
test eax eax +
jz loc_100DACD  +
lea eax [ebp+FileInformation] +
push eax  +
push [ebp+hObject]  +
call ds:GetFileInformationByHandle  +
test eax eax +
jz loc_100DACD  +
mov eax [ebp+FileInformation.dwFileAttributes] +
mov [ebx+14h] eax +
mov eax [ebp+var_8] +
mov eax [eax] +
mov [ebx+18h] eax +
mov [ebp+var_10] 1 +
push [ebp+var_8]  +
call ds:free  +
pop ecx  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop esi  +
lea ecx [ebp+lpFileName] +
call ??1CString@@QAE@XZ  +
mov eax [ebp+var_10] +
pop edi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3_GS  +
lea eax [ebp-264h] +
push eax  +
mov [ebp-270h] ecx +
call sub_100D953  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-268h] 0 +
mov edi ds:SetLastError +
push 0  +
call edi  +
push dword ptr [ebp-264h]  +
call ds:GetFileAttributesW  +
mov ebx eax +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jnz loc_100DB4E  +
test ebx ebx +
jbe loc_100DB9F  +
test bl 10h +
jz loc_100DB53  +
cmp esi 57h +
jnz loc_100DB5F  +
mov ebx 10Bh +
push ebx  +
mov esi ebx +
call edi  +
jmp loc_100DB64  +
mov ebx 10Bh +
cmp esi ebx +
jz loc_100DC69  +
cmp esi 7Bh +
jz loc_100DC69  +
cmp esi 43h +
jnz loc_100DB84  +
cmp dword ptr [ebp+8] 0 +
jz loc_100DC69  +
cmp esi 56h +
jz loc_100DC69  +
cmp esi 2 +
jz loc_100DC69  +
cmp esi 3 +
jz loc_100DC69  +
push offset a_  +
lea eax [ebp-264h] +
push eax  +
lea eax [ebp-26Ch] +
push eax  +
call ??H@YG?AVCString@@ABV0@PBG@Z  +
mov eax [eax] +
lea ecx [ebp-260h] +
push ecx  +
push eax  +
call ds:FindFirstFileW  +
lea ecx [ebp-26Ch] +
mov esi eax +
call ??1CString@@QAE@XZ  +
or ebx 0FFFFFFFFh +
cmp esi ebx +
jnz loc_100DC36  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_100DC50  +
cmp eax 10Bh +
jz loc_100DC65  +
cmp eax 7Bh +
jz loc_100DC65  +
cmp eax 43h +
jnz loc_100DBFD  +
cmp dword ptr [ebp+8] 0 +
jz loc_100DC65  +
cmp eax 56h +
jz loc_100DC65  +
cmp eax 5 +
jz loc_100DC65  +
cmp eax 3 +
jz loc_100DC65  +
inc dword ptr [ebp-268h]  +
push dword ptr [ebp-268h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-270h]  +
call sub_100753D  +
test eax eax +
jnz loc_100DB27  +
mov [ebp-4] ebx +
jmp loc_100DC6D  +
push esi  +
call ds:FindClose  +
lea ecx [ebp-264h] +
mov [ebp-4] ebx +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100DC7A  +
xor esi esi +
inc esi  +
lea ecx [ebp-264h] +
mov [ebp-4] ebx +
call ??1CString@@QAE@XZ  +
mov eax esi +
jmp loc_100DC7A  +
xor esi esi +
jmp loc_100DC53  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-264h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call sub_1011EF1  +
retn 0Ch  +
***
call __EH_prolog3  +
mov [ebp-18h] ecx +
lea eax [ebp-10h] +
push eax  +
call sub_100D953  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-14h] 0 +
mov esi ds:GetLastError +
mov ebx ds:GetFileAttributesW +
push 0  +
push dword ptr [ebp-10h]  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_100DD7B  +
call esi  +
mov edi eax +
cmp edi 0B7h +
jnz loc_100DCE0  +
push dword ptr [ebp-10h]  +
call ebx  +
cmp eax 0FFFFFFFFh +
jnz loc_100DD8E  +
cmp edi 10Bh +
jz loc_100DD65  +
cmp edi 7Bh +
jz loc_100DD65  +
cmp edi 43h +
jnz loc_100DCF8  +
cmp dword ptr [ebp+8] 0 +
jz loc_100DD65  +
cmp edi 56h +
jz loc_100DD65  +
cmp edi 5 +
jz loc_100DD65  +
cmp edi 3 +
jnz loc_100DD49  +
mov eax [ebp-18h] +
mov ecx [eax+4] +
test ecx ecx +
jz loc_100DD95  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100DC87  +
test eax eax +
jz loc_100DD95  +
push 0  +
push dword ptr [ebp-10h]  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_100DD7B  +
call esi  +
cmp eax 0B7h +
jnz loc_100DD49  +
push dword ptr [ebp-10h]  +
call ebx  +
cmp eax 0FFFFFFFFh +
jnz loc_100DD8E  +
inc dword ptr [ebp-14h]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-18h]  +
call sub_100753D  +
test eax eax +
jnz loc_100DCB3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
xor esi esi +
inc esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
jmp loc_100DD73  +
and eax 10h +
mov esi eax +
jmp loc_100DD7E  +
xor esi esi +
jmp loc_100DD7E  +
***
call __EH_prolog3  +
mov [ebp-14h] ecx +
lea eax [ebp-10h] +
push eax  +
call sub_100D953  +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
test dword ptr [eax+14h] 400h +
jz loc_100DDEC  +
push dword ptr [ebp+14h]  +
mov ecx [ebp-14h] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_100DC87  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
jmp loc_100DEB8  +
and dword ptr [ebp+8] 0 +
mov esi ds:GetLastError +
mov ebx ds:GetFileAttributesW +
push 0  +
push dword ptr [ebp-10h]  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_100DEC0  +
call esi  +
mov edi eax +
cmp edi 0B7h +
jnz loc_100DE29  +
push dword ptr [ebp-10h]  +
call ebx  +
cmp eax 0FFFFFFFFh +
jnz loc_100DEC8  +
cmp edi 10Bh +
jz loc_100DEAA  +
cmp edi 7Bh +
jz loc_100DEAA  +
cmp edi 43h +
jnz loc_100DE41  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_100DEAA  +
cmp edi 56h +
jz loc_100DEAA  +
cmp edi 5 +
jz loc_100DEAA  +
cmp edi 3 +
jnz loc_100DE8E  +
mov eax [ebp-14h] +
mov ecx [eax+4] +
test ecx ecx +
jz loc_100DED0  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_100DC87  +
test eax eax +
jz loc_100DED0  +
push 0  +
push dword ptr [ebp-10h]  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_100DEC0  +
call esi  +
cmp eax 0B7h +
jnz loc_100DE8E  +
push dword ptr [ebp-10h]  +
call ebx  +
cmp eax 0FFFFFFFFh +
jnz loc_100DEC8  +
inc dword ptr [ebp+8]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-14h]  +
call sub_100753D  +
test eax eax +
jnz loc_100DDFC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
xor esi esi +
inc esi  +
jmp loc_100DDD9  +
and eax 10h +
jmp loc_100DDD7  +
xor esi esi +
jmp loc_100DDD9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
mov esi ecx +
call sub_100D953  +
push dword ptr [eax]  +
call ds:GetFileAttributesW  +
lea ecx [ebp+var_4] +
mov [esi+14h] eax +
call ??1CString@@QAE@XZ  +
cmp dword ptr [esi+14h] 0FFFFFFFFh +
jnz loc_100DF0B  +
and dword ptr [esi+14h] 0 +
pop esi  +
leave   +
retn   +
***
call __EH_prolog3  +
mov [ebp-20h] ecx +
mov ecx [ebp+8] +
lea eax [ebp-10h] +
push eax  +
call sub_100D953  +
mov ecx [ebp+10h] +
mov eax [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-14h] 0 +
or eax ecx +
mov edi eax +
mov ebx 800h +
and edi 4000h +
mov [ebp-18h] ecx +
not dword ptr [ebp-18h]  +
and eax ebx +
mov [ebp-1Ch] eax +
mov eax [ebp-20h] +
mov esi [eax+14h] +
or esi [ebp+0Ch] +
and esi [ebp-18h] +
and esi 0FFFFFBFFh +
push esi  +
push dword ptr [ebp-10h]  +
call ds:SetFileAttributesW  +
test eax eax +
jz loc_100DFE5  +
test edi edi +
jz loc_100DFC4  +
mov [ebp+10h] esi +
and dword ptr [ebp+10h] 4000h +
push dword ptr [ebp+10h]  +
lea eax [ebp-10h] +
push eax  +
call sub_100EEFE  +
test eax eax +
jz loc_100DFE5  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_100DFB0  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_100DFB0  +
and esi ebx +
push esi  +
lea eax [ebp-10h] +
push eax  +
call sub_100EF2A  +
test eax eax +
jz loc_100DFE5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100E049  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_100DFB0  +
and esi ebx +
push esi  +
lea eax [ebp-10h] +
push eax  +
call sub_100EF2A  +
test eax eax +
jnz loc_100DFB0  +
call ds:GetLastError  +
cmp eax 1 +
jz loc_100DFB0  +
call ds:GetLastError  +
cmp eax 57h +
jnz loc_100DFF9  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+4] 0 +
jz loc_100DFB0  +
cmp eax 7Bh +
jz loc_100E028  +
cmp eax 2 +
jz loc_100E028  +
push eax  +
call ds:SetLastError  +
inc dword ptr [ebp-14h]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+8]  +
call sub_100753D  +
test eax eax +
jnz loc_100DF56  +
jmp loc_100E03B  +
inc dword ptr [ebp-14h]  +
push dword ptr [ebp-14h]  +
push 0  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-20h]  +
call sub_100753D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 14h  +
***
call __EH_prolog3  +
mov edi ecx +
mov ecx [ebp+8] +
lea eax [ebp-10h] +
push eax  +
call sub_100D953  +
lea eax [ebp+8] +
xor ebx ebx +
push eax  +
mov ecx edi +
mov [ebp-4] ebx +
call sub_100D953  +
mov byte ptr [ebp-4] 1 +
xor esi esi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-10h]  +
call sub_100FAA4  +
test eax eax +
jnz loc_100E0C3  +
call ds:GetLastError  +
cmp eax 7Bh +
jz loc_100E0DF  +
cmp eax 2 +
jz loc_100E0DF  +
push eax  +
call ds:SetLastError  +
inc esi  +
push esi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edi  +
call sub_100753D  +
test eax eax +
jnz loc_100E086  +
jmp loc_100E0EB  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100E104  +
inc esi  +
push esi  +
push ebx  +
push dword ptr [ebp+10h]  +
push edi  +
call sub_100753D  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
push 8  +
mov eax offset loc_1013E42 +
call __EH_prolog3  +
mov [ebp+var_14] ecx +
mov esi [ebp+dwErrCode] +
lea eax [ebp+pObjectName] +
push eax  +
mov ecx esi +
call sub_100D953  +
mov ecx [ebp+var_14] +
lea eax [ebp+dwErrCode] +
xor edi edi +
push eax  +
mov [ebp+var_4] edi +
call sub_100D953  +
mov ebx [esi+5Ch] +
mov byte ptr [ebp+var_4] 1 +
push ebx  +
push [ebp+hMem]  +
push [ebp+dwErrCode]  +
push [ebp+pObjectName]  +
call sub_100F8AE  +
test eax eax +
jnz loc_100E184  +
call ds:GetLastError  +
cmp eax 7Bh +
jz loc_100E1A1  +
cmp eax 2 +
jz loc_100E1A1  +
push eax  +
call ds:SetLastError  +
inc edi  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
call sub_100753D  +
test eax eax +
jnz loc_100E146  +
jmp loc_100E1B0  +
lea ecx [ebp+dwErrCode] +
mov byte ptr [ebp+var_4] 0 +
call ??1CString@@QAE@XZ  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+pObjectName] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100E1CA  +
inc edi  +
push edi  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_14]  +
call sub_100753D  +
lea ecx [ebp+dwErrCode] +
mov byte ptr [ebp+var_4] 0 +
call ??1CString@@QAE@XZ  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+pObjectName] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
mov ebx ecx +
xor edi edi +
mov [ebp-10h] edi +
mov dword ptr [ebp-14h] 80h +
cmp dword_1067C9C edi +
jz loc_100E209  +
cmp dword ptr [ebx+18h] 0A000000Ch +
jnz loc_100E209  +
mov dword ptr [ebp-14h] 880h +
cmp dword ptr [ebx+18h] 0A0000003h +
jz loc_100E2BF  +
mov eax 40000h +
test dword_1067C4C eax +
jz loc_100E2BF  +
test dword_1067C40 eax +
jz loc_100E2BF  +
mov ecx [ebp+8] +
lea eax [ebp-1Ch] +
push eax  +
call sub_100D953  +
mov esi eax +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
mov [ebp-4] edi +
call sub_100D953  +
push dword ptr [ebp-14h]  +
mov esi [esi] +
mov eax [eax] +
push edi  +
push edi  +
push edi  +
push esi  +
push eax  +
call ds:PrivCopyFileExW  +
lea ecx [ebp-18h] +
mov esi eax +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CString@@QAE@XZ  +
cmp esi edi +
jnz loc_100E2BF  +
call ds:GetLastError  +
cmp eax 7Bh +
jz loc_100E2AC  +
cmp eax 2 +
jz loc_100E2AC  +
push eax  +
call ds:SetLastError  +
inc dword ptr [ebp-10h]  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100753D  +
test eax eax +
jnz loc_100E233  +
jmp loc_100E2BB  +
mov eax [ebp-10h] +
inc eax  +
push eax  +
push edi  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_100753D  +
xor eax eax +
jmp loc_100E2C2  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov ebx ecx +
lea eax [ebp-10h] +
push eax  +
call sub_100D953  +
xor edi edi +
mov [ebp-4] edi +
push dword ptr [ebp-10h]  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_100E2FB  +
xor eax eax +
and eax 0FFFFFFF8h +
push eax  +
push dword ptr [ebp-10h]  +
call ds:SetFileAttributesW  +
push dword ptr [ebp-10h]  +
call ds:RemoveDirectoryW  +
test eax eax +
jnz loc_100E36B  +
call ds:GetLastError  +
cmp eax 91h +
jz loc_100E355  +
cmp eax 10Bh +
jz loc_100E355  +
cmp eax 7Bh +
jz loc_100E355  +
cmp eax 43h +
jnz loc_100E339  +
cmp dword ptr [ebp+8] 0 +
jz loc_100E355  +
cmp eax 56h +
jz loc_100E355  +
cmp eax 5 +
jz loc_100E355  +
inc edi  +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_100753D  +
test eax eax +
jnz loc_100E2EB  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100E363  +
***
call __EH_prolog3  +
lea eax [ebp-1Ch] +
push eax  +
call sub_100D953  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
mov esi ds:GetLastError +
push 0  +
push 2000080h  +
push 3  +
push 0  +
push 3  +
push 80000000h  +
push dword ptr [ebp-1Ch]  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_100E3EC  +
lea eax [ebp-54h] +
push eax  +
push edi  +
call ds:GetFileInformationByHandle  +
mov ebx eax +
call esi  +
push edi  +
mov [ebp-20h] eax +
call ds:CloseHandle  +
test ebx ebx +
jnz loc_100E42C  +
push dword ptr [ebp-20h]  +
call ds:SetLastError  +
call esi  +
cmp eax 3 +
jz loc_100E53A  +
cmp eax 7Bh +
jz loc_100E524  +
cmp eax 2 +
jz loc_100E524  +
push eax  +
call ds:SetLastError  +
inc dword ptr [ebp-10h]  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100753D  +
test eax eax +
jnz loc_100E3A4  +
mov ecx [ebp+8] +
lea eax [ebp-18h] +
push eax  +
call sub_100D953  +
and dword ptr [ebp-10h] 0 +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-18h]  +
call ds:GetFileAttributesW  +
mov [ebp-14h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100E455  +
and dword ptr [ebp-14h] 0 +
test byte ptr [ebp-14h] 7 +
jz loc_100E46B  +
mov eax [ebp-14h] +
and eax 0FFFFFFF8h +
push eax  +
push dword ptr [ebp-18h]  +
call ds:SetFileAttributesW  +
push 0  +
push 2000080h  +
push 3  +
push 0  +
push 3  +
push 40000000h  +
push dword ptr [ebp-18h]  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_100E4DF  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-48h] +
push eax  +
lea eax [ebp-50h] +
push eax  +
push edi  +
call ds:SetFileTime  +
mov ebx eax +
call esi  +
push edi  +
mov [ebp-20h] eax +
call ds:CloseHandle  +
test ebx ebx +
jnz loc_100E54B  +
mov eax [ebp-20h] +
cmp eax 32h +
jz loc_100E54B  +
cmp eax 6 +
jz loc_100E54B  +
cmp eax 57h +
jnz loc_100E4D8  +
mov ecx [ebp+8] +
cmp [ecx+4] ebx +
jz loc_100E54B  +
push eax  +
call ds:SetLastError  +
inc dword ptr [ebp-10h]  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100753D  +
test eax eax +
jnz loc_100E440  +
test byte ptr [ebp-14h] 7 +
jz loc_100E518  +
call esi  +
push dword ptr [ebp-14h]  +
mov esi eax +
push dword ptr [ebp-18h]  +
call ds:SetFileAttributesW  +
push esi  +
call ds:SetLastError  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100E532  +
test byte ptr [ebp-14h] 7 +
jz loc_100E55D  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-18h]  +
call ds:SetFileAttributesW  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
jmp loc_100E53A  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
xor ebx ebx +
mov [ebp-268h] ecx +
cmp [ebp+0Ch] ebx +
jnz loc_100E59C  +
cmp [ebp+10h] ebx +
jnz loc_100E59C  +
xor eax eax +
inc eax  +
jmp loc_100E7C6  +
lea eax [ebp-278h] +
push eax  +
call sub_100D953  +
push esi  +
push eax  +
lea eax [ebp-274h] +
push eax  +
mov [ebp-4] ebx +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-278h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
mov esi ds:SetLastError +
mov [ebp-26Ch] ebx +
mov edi 250h +
push ebx  +
call esi  +
push edi  +
lea eax [ebp-260h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push 2  +
push ebx  +
push ebx  +
lea eax [ebp-260h] +
push eax  +
push 1  +
push dword ptr [ebp-274h]  +
call ds:FindFirstFileExW  +
mov [ebp-270h] eax +
call ds:GetLastError  +
cmp dword ptr [ebp-270h] 0FFFFFFFFh +
jnz loc_100E638  +
cmp eax 2 +
jnz loc_100E78B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-274h] +
call ??1CString@@QAE@XZ  +
jmp loc_100E594  +
test byte ptr [ebp-260h] 10h +
jz loc_100E6D7  +
cmp [ebp+10h] ebx +
jz loc_100E73B  +
push offset a__2  +
lea eax [ebp-234h] +
push eax  +
call ds:lstrcmpW  +
test eax eax +
jz loc_100E73B  +
push offset a__  +
lea eax [ebp-234h] +
push eax  +
call ds:lstrcmpW  +
test eax eax +
jz loc_100E73B  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-264h] ecx +
mov byte ptr [ebp-4] 3 +
cmp ecx ebx +
jz loc_100E6A7  +
call sub_100E918  +
mov [ebp-264h] eax +
jmp loc_100E6AD  +
mov [ebp-264h] ebx +
push dword ptr [ebp+14h]  +
mov ecx [ebp-264h] +
lea eax [ebp-260h] +
push eax  +
push dword ptr [ebp-268h]  +
mov byte ptr [ebp-4] 2 +
call sub_100E99A  +
mov ecx [ebp-268h] +
lea eax [ecx+38h] +
jmp loc_100E72F  +
cmp [ebp+0Ch] ebx +
jz loc_100E73B  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-264h] ecx +
mov byte ptr [ebp-4] 4 +
cmp ecx ebx +
jz loc_100E701  +
call sub_100E918  +
mov [ebp-264h] eax +
jmp loc_100E707  +
mov [ebp-264h] ebx +
push dword ptr [ebp+14h]  +
mov ecx [ebp-264h] +
lea eax [ebp-260h] +
push eax  +
push dword ptr [ebp-268h]  +
mov byte ptr [ebp-4] 2 +
call sub_100E99A  +
mov ecx [ebp-268h] +
lea eax [ecx+1Ch] +
push dword ptr [ebp-264h]  +
push eax  +
call sub_100CF5D  +
push ebx  +
call esi  +
push edi  +
lea eax [ebp-260h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp-260h] +
push eax  +
push dword ptr [ebp-270h]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_100E638  +
call ds:GetLastError  +
push dword ptr [ebp-270h]  +
mov [ebp-264h] eax +
call ds:FindClose  +
cmp dword ptr [ebp-264h] 12h +
jz loc_100E7B2  +
inc dword ptr [ebp-26Ch]  +
push dword ptr [ebp-26Ch]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-268h]  +
call sub_100753D  +
test eax eax +
jnz loc_100E5D9  +
jmp loc_100E7B5  +
xor ebx ebx +
inc ebx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-274h] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
call sub_1011EF1  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+4] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100E823  +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx ebx +
call sub_1003175  +
mov esi [eax] +
mov ecx [ebp+arg_4] +
push esi  +
call sub_100D8B1  +
push [ebp+arg_C]  +
mov edi eax +
push [ebp+arg_8]  +
mov ecx esi +
push edi  +
call sub_1010952  +
test edi edi +
jz loc_100E81B  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+4]  +
cmp [ebp+arg_0] 0 +
jnz loc_100E7E8  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+20h] +
push edi  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100E878  +
lea eax [ebp+var_4] +
push eax  +
lea ecx [esi+1Ch] +
call sub_1003175  +
mov edi [eax] +
mov ecx [ebp+arg_0] +
push edi  +
call sub_100D87D  +
mov ebx eax +
test ebx ebx +
jz loc_100E872  +
push [ebp+arg_4]  +
mov ecx edi +
call sub_100ED44  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax+4]  +
cmp [ebp+var_4] 0 +
jnz loc_100E842  +
mov eax [esi+3Ch] +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100E8BA  +
lea ebx [esi+38h] +
lea eax [ebp+var_4] +
push eax  +
mov ecx ebx +
call sub_1003175  +
mov esi [eax] +
mov ecx [ebp+arg_0] +
push esi  +
call sub_100D897  +
mov edi eax +
test edi edi +
jz loc_100E8B4  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_100ED44  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+4]  +
cmp [ebp+var_4] 0 +
jnz loc_100E885  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_100E111  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
lea eax [esi+1Ch] +
push [ebp+arg_0]  +
push eax  +
call sub_100E7D3  +
push [ebp+arg_8]  +
lea eax [esi+38h] +
push 1  +
push [ebp+arg_0]  +
mov ecx esi +
push eax  +
call sub_100E7D3  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax offset off_1002370 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea eax [esi+14h] +
mov dword ptr [esi] offset off_100238C +
lea ebx [esi+34h] +
xor edi edi +
mov ecx ebx +
mov [ebp-4] edi +
mov [eax] eax +
mov [eax+4] eax +
call ??0CString@@QAE@XZ  +
mov ecx ebx +
mov byte ptr [ebp-4] 1 +
mov [esi+30h] edi +
mov [esi+2Ch] edi +
call ?Empty@CString@@QAEXXZ  +
or eax 0FFFFFFFFh +
mov [esi+48h] eax +
mov [esi+4Ch] eax +
mov [esi+4] eax +
mov [esi+8] eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+50h] eax +
mov [esi+54h] eax +
mov [esi+40h] edi +
mov [esi+44h] edi +
mov [esi+38h] edi +
mov [esi+3Ch] edi +
mov [esi+20h] edi +
mov [esi+24h] edi +
mov [esi+28h] edi +
inc dword_1078DB0  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi+30h] eax +
inc dword ptr [eax+54h]  +
cmp [ebp+arg_8] 0 +
push edi  +
mov edi [ebp+arg_4] +
jz loc_100E9C1  +
lea eax [edi+234h] +
cmp word ptr [eax] 0 +
jnz loc_100E9C4  +
lea eax [edi+2Ch] +
push eax  +
lea ecx [esi+34h] +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [edi] +
mov [esi+40h] eax +
test eax 400h +
jz loc_100E9DF  +
mov eax [edi+24h] +
mov [esi+44h] eax +
mov eax [edi+4] +
mov [esi+48h] eax +
mov eax [edi+8] +
mov [esi+4Ch] eax +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax [edi+14h] +
mov [esi+4] eax +
mov eax [edi+18h] +
mov [esi+8] eax +
mov eax [edi+1Ch] +
mov edi [edi+20h] +
and dword ptr [esi+38h] 0 +
and dword ptr [esi+3Ch] 0 +
mov [esi+54h] eax +
mov [esi+50h] edi +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_4] +
mov [esi+30h] eax +
inc dword ptr [eax+54h]  +
lea eax [edi+34h] +
push eax  +
lea ecx [esi+34h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [edi+50h] +
mov [esi+50h] eax +
mov eax [edi+54h] +
and dword ptr [esi+38h] 0 +
and dword ptr [esi+3Ch] 0 +
mov [esi+54h] eax +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+30h] eax +
inc dword ptr [eax+54h]  +
and dword ptr [ecx+38h] 0 +
and dword ptr [ecx+3Ch] 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov eax [ecx+40h] +
and eax 10h +
retn   +
***
mov eax [ecx+40h] +
shr eax 4 +
not eax  +
and eax 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
push ebx  +
jz loc_100EABE  +
mov ebx [ecx+40h] +
and ebx 3127h +
jmp loc_100EADB  +
push [ebp+lpFileName]  +
call ds:GetFileAttributesW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_100EAD0  +
xor ebx ebx +
and ebx 3127h +
test bl 7 +
jz loc_100EAEA  +
mov eax ebx +
and eax 0FFFFFFF8h +
push eax  +
push [ebp+lpFileName]  +
call ds:SetFileAttributesW  +
lea ecx [ebp+lpFileName] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+dwFileAttributes] 7 +
jz loc_100EB26  +
push esi  +
call ds:GetLastError  +
push [ebp+dwFileAttributes]  +
mov esi eax +
push [ebp+lpFileName]  +
call ds:SetFileAttributesW  +
push esi  +
call ds:SetLastError  +
pop esi  +
lea ecx [ebp+lpFileName] +
call ??1CString@@QAE@XZ  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi] +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [edi] +
push eax  +
push ecx  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_100EB5E  +
mov eax [edi] +
mov ecx [esi] +
mov eax [eax-8] +
sub eax [ecx-8] +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
lea eax [ecx+34h] +
push eax  +
call sub_100EB37  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 34h +
push eax  +
lea eax [ecx+34h] +
push eax  +
call sub_100EB37  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ecx+8] +
mov eax [ecx+4] +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi+8] +
mov esi [esi+4] +
sub eax esi +
sbb edx ecx +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov ecx [edx+4] +
push esi  +
mov esi [edx] +
mov eax esi +
or eax ecx +
jz loc_100EC0C  +
xor eax eax +
inc eax  +
test ecx ecx +
jg loc_100EBF4  +
jl loc_100EBE5  +
test esi esi +
jnb loc_100EBF4  +
neg esi  +
adc ecx 0 +
neg ecx  +
mov [edx] esi +
mov [edx+4] ecx +
or eax 0FFFFFFFFh +
cmp [ebp+arg_4] 0 +
jz loc_100EC0E  +
mov esi [edx+4] +
xor ecx ecx +
cmp esi ecx +
jg loc_100EC0E  +
jl loc_100EC0C  +
mov ecx [edx] +
cmp ecx [ebp+arg_4] +
ja loc_100EC0E  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [ecx+50h] +
mov ecx [ecx+54h] +
push esi  +
mov esi [eax+50h] +
mov eax [eax+54h] +
cmp ecx eax +
jl loc_100EC46  +
jg loc_100EC37  +
cmp edx esi +
jbe loc_100EC3C  +
xor eax eax +
inc eax  +
jmp loc_100EC4D  +
cmp ecx eax +
jg loc_100EC4B  +
jl loc_100EC46  +
cmp edx esi +
jnb loc_100EC4B  +
or eax 0FFFFFFFFh +
jmp loc_100EC4D  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
test byte ptr [ecx+40h] 10h +
jz loc_100EC83  +
push offset asc_10014B0  +
add ecx 34h +
push ecx  +
push [ebp+arg_0]  +
call ??H@YG?AVCString@@ABV0@PBG@Z  +
jmp loc_100EC8F  +
add ecx 34h +
push ecx  +
mov ecx [ebp+arg_0] +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [ebp+arg_0] +
leave   +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
and dword ptr [ebp-14h] 0 +
cmp dword ptr [esi+30h] 0 +
jz loc_100ECF6  +
lea eax [ebp-14h] +
push eax  +
call sub_100EC60  +
mov edi eax +
mov ecx [esi+30h] +
and dword ptr [ebp-4] 0 +
lea eax [ebp-10h] +
push eax  +
call sub_100D2E3  +
push edi  +
push eax  +
push dword ptr [ebp+8]  +
mov byte ptr [ebp-4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
jmp loc_100ECFE  +
push dword ptr [ebp+8]  +
call sub_100EC60  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 4  +
***
test byte ptr [ecx+40h] 10h +
jz loc_100ED1B  +
or ecx 0FFFFFFFFh +
mov eax ecx +
jmp loc_100ED21  +
mov eax [ecx+50h] +
mov ecx [ecx+54h] +
mov edx ecx +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+38h] eax +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+3Ch] eax +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea eax [ebp-20h] +
push eax  +
call sub_100EC60  +
mov edi eax +
mov ecx [ebp+8] +
lea eax [ebp-1Ch] +
xor ebx ebx +
push eax  +
mov [ebp-4] ebx +
call sub_100D953  +
push edi  +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
xor eax eax +
cmp dword_1067C9C ebx +
jz loc_100EDDA  +
cmp dword ptr [esi+44h] 0A000000Ch +
jnz loc_100EDDA  +
inc eax  +
neg eax  +
sbb eax eax +
and eax 200000h +
mov [ebp-14h] eax +
or dword ptr [ebp-14h] 2000080h +
mov [ebp+8] ebx +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp-28h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAA7  +
push ebx  +
push dword ptr [ebp-14h]  +
mov [ebp-18h] eax +
push 3  +
push ebx  +
push ebx  +
push 100h  +
push dword ptr [ebp-10h]  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_100EE5D  +
lea eax [esi+4] +
push eax  +
lea eax [esi+0Ch] +
push eax  +
lea eax [esi+48h] +
push eax  +
push edi  +
call ds:SetFileTime  +
mov [ebp-24h] eax +
call ds:GetLastError  +
push edi  +
mov [ebp-28h] eax +
call ds:CloseHandle  +
cmp [ebp-24h] ebx +
jnz loc_100EEA9  +
push dword ptr [ebp-28h]  +
call ds:SetLastError  +
call ds:GetLastError  +
cmp eax 7Bh +
jz loc_100EED3  +
cmp eax 2 +
jz loc_100EED3  +
push eax  +
call ds:SetLastError  +
inc dword ptr [ebp+8]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push esi  +
call sub_100756B  +
test eax eax +
jnz loc_100EDF0  +
push dword ptr [ebp-18h]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp+10h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAFE  +
jmp loc_100EEE3  +
push dword ptr [ebp-18h]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp+10h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAFE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100EEF1  +
inc dword ptr [ebp+8]  +
push dword ptr [ebp+8]  +
push ebx  +
push dword ptr [ebp+10h]  +
push esi  +
call sub_100756B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
mov eax [ebp+arg_0] +
jz loc_100EF16  +
push dword ptr [eax]  +
call ds:EncryptFileW  +
jmp loc_100EF21  +
mov eax [eax] +
push 0  +
push eax  +
call ds:DecryptFileW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+InBuffer] +
mov eax [eax] +
push esi  +
push edi  +
xor esi esi +
push esi  +
push 2000080h  +
push 3  +
push esi  +
push esi  +
push 0C0000000h  +
push eax  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_100EF5A  +
xor eax eax +
jmp loc_100EF9E  +
mov [ebp+InBuffer] esi +
cmp [ebp+arg_4] esi +
jz loc_100EF69  +
mov [ebp+InBuffer] 1 +
push ebx  +
push esi  +
lea eax [ebp+BytesReturned] +
push eax  +
push esi  +
push esi  +
push 2  +
lea eax [ebp+InBuffer] +
push eax  +
push 9C040h  +
push edi  +
call ds:DeviceIoControl  +
mov esi eax +
call ds:GetLastError  +
push edi  +
mov ebx eax +
call ds:CloseHandle  +
push ebx  +
call ds:SetLastError  +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov [ebp-18h] ecx +
lea eax [ebp-24h] +
push eax  +
call sub_100EC60  +
mov esi eax +
mov ecx [ebp+8] +
and dword ptr [ebp-4] 0 +
lea eax [ebp-20h] +
push eax  +
call sub_100D953  +
push esi  +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+10h] +
mov eax [ebp+0Ch] +
and dword ptr [ebp+8] 0 +
or eax ecx +
mov edi eax +
mov ebx 800h +
and edi 4000h +
mov [ebp-14h] ecx +
not dword ptr [ebp-14h]  +
and eax ebx +
mov [ebp-1Ch] eax +
mov eax [ebp-18h] +
mov esi [eax+40h] +
or esi [ebp+0Ch] +
and esi [ebp-14h] +
push esi  +
push dword ptr [ebp-10h]  +
call ds:SetFileAttributesW  +
test eax eax +
jz loc_100F0A4  +
test edi edi +
jz loc_100F083  +
mov [ebp+10h] esi +
and dword ptr [ebp+10h] 4000h +
push dword ptr [ebp+10h]  +
lea eax [ebp-10h] +
push eax  +
call sub_100EEFE  +
test eax eax +
jz loc_100F0A4  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_100F072  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_100F072  +
and esi ebx +
push esi  +
lea eax [ebp-10h] +
push eax  +
call sub_100EF2A  +
test eax eax +
jz loc_100F0A4  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100F0FA  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_100F072  +
and esi ebx +
push esi  +
lea eax [ebp-10h] +
push eax  +
call sub_100EF2A  +
test eax eax +
jnz loc_100F072  +
call ds:GetLastError  +
cmp eax 1 +
jz loc_100F072  +
call ds:GetLastError  +
cmp eax 7Bh +
jz loc_100F0D9  +
cmp eax 2 +
jz loc_100F0D9  +
push eax  +
call ds:SetLastError  +
inc dword ptr [ebp+8]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-18h]  +
call sub_100756B  +
test eax eax +
jnz loc_100F01E  +
jmp loc_100F0EC  +
inc dword ptr [ebp+8]  +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-18h]  +
call sub_100756B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 14h  +
***
call __EH_prolog3  +
mov ebx ecx +
lea eax [ebp-18h] +
push eax  +
call sub_100EC60  +
mov esi eax +
mov ecx [ebp+8] +
lea eax [ebp-14h] +
xor edi edi +
push eax  +
mov [ebp-4] edi +
call sub_100D953  +
push esi  +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
xor esi esi +
push edi  +
push 80h  +
push 1  +
push edi  +
push edi  +
push 40000000h  +
push dword ptr [ebp-10h]  +
call ds:CreateFileW  +
cmp eax 0FFFFFFFFh +
jnz loc_100F1A7  +
call ds:GetLastError  +
cmp eax 50h +
jz loc_100F1AE  +
cmp eax 7Bh +
jz loc_100F1BF  +
cmp eax 2 +
jz loc_100F1BF  +
push eax  +
call ds:SetLastError  +
inc esi  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_100756B  +
test eax eax +
jnz loc_100F15A  +
jmp loc_100F1CB  +
push eax  +
call ds:CloseHandle  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100F1D9  +
inc esi  +
push esi  +
push edi  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_100756B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 10034h +
call __alloca_probe  +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpFileName] +
or [ebp+hObject] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
mov edi ds:CreateFileW +
xor esi esi +
push esi  +
push 0A000000h  +
push 3  +
push esi  +
push 1  +
mov [ebp+var_10030] ecx +
mov ecx [ebp+arg_4] +
push 80000000h  +
push eax  +
mov [ebp+var_10034] eax +
mov [ebp+var_1002C] ecx +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfBytesWritten] esi +
mov [ebp+Context] esi +
mov [ebp+var_10020] esi +
xor ebx ebx +
mov [ebp+var_10018] esi +
mov [ebp+var_10028] esi +
call edi  +
mov [ebp+hFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_100F42C  +
push eax  +
push 0A000080h  +
push 2  +
push esi  +
push 1  +
push 40000000h  +
push [ebp+var_1002C]  +
call edi  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_100F410  +
lea eax [ebp+Context] +
push eax  +
push esi  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 10000h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hFile]  +
call ds:BackupRead  +
mov edi [ebp+arg_8] +
jmp loc_100F38F  +
cmp [ebp+NumberOfBytesRead] esi +
jz loc_100F3AD  +
lea eax [ebp+var_10020] +
push eax  +
push esi  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+NumberOfBytesRead]  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hObject]  +
call ds:BackupWrite  +
test eax eax +
jz loc_100F3B9  +
mov eax edi +
neg eax  +
sbb eax eax +
and eax [ebp+var_10030] +
push eax  +
push [ebp+hObject]  +
push [ebp+hFile]  +
push esi  +
push 1  +
push [ebp+var_10018]  +
push ebx  +
push dword ptr [ebp+arg_C+4]  +
push dword ptr [ebp+arg_C]  +
push [ebp+var_10018]  +
push ebx  +
push dword ptr [ebp+arg_C+4]  +
push dword ptr [ebp+arg_C]  +
call ProgressRoutine  +
add ebx [ebp+NumberOfBytesWritten] +
mov eax dword ptr [ebp+arg_C+4] +
adc [ebp+var_10018] esi +
cmp [ebp+var_10018] eax +
jl loc_100F367  +
jg loc_100F35E  +
cmp ebx dword ptr [ebp+arg_C] +
jbe loc_100F367  +
mov ebx dword ptr [ebp+arg_C] +
mov [ebp+var_10018] eax +
lea eax [ebp+Context] +
push eax  +
push esi  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 10000h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hFile]  +
call ds:BackupRead  +
test eax eax +
jnz loc_100F2C8  +
cmp dword_1067C5C esi +
jz loc_100F3D5  +
call ds:GetLastError  +
push eax  +
push offset aErrorBackuprea  +
jmp loc_100F3CD  +
mov [ebp+var_10028] 1 +
jmp loc_100F3D5  +
cmp dword_1067C5C esi +
jz loc_100F3D5  +
call ds:GetLastError  +
push eax  +
push offset aErrorBackupwri  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
neg edi  +
sbb edi edi +
and edi [ebp+var_10030] +
push edi  +
push [ebp+hObject]  +
push [ebp+hFile]  +
push esi  +
push 1  +
push [ebp+var_10018]  +
push ebx  +
push dword ptr [ebp+arg_C+4]  +
push dword ptr [ebp+arg_C]  +
push [ebp+var_10018]  +
push ebx  +
push dword ptr [ebp+arg_C+4]  +
push dword ptr [ebp+arg_C]  +
call ProgressRoutine  +
jmp loc_100F44F  +
cmp dword_1067C5C esi +
jz loc_100F44F  +
call ds:GetLastError  +
push eax  +
push [ebp+var_1002C]  +
push offset aErrorCreatefil  +
jmp loc_100F446  +
cmp dword_1067C5C esi +
jz loc_100F44F  +
call ds:GetLastError  +
push eax  +
push [ebp+var_10034]  +
push offset aErrorCreatef_0  +
call ds:wprintf  +
add esp 0Ch +
cmp [ebp+var_10020] esi +
jz loc_100F470  +
lea eax [ebp+var_10020] +
push eax  +
push esi  +
push 1  +
push esi  +
push esi  +
push esi  +
push [ebp+hObject]  +
call ds:BackupWrite  +
cmp [ebp+hObject] 0FFFFFFFFh +
mov edi ds:CloseHandle +
jz loc_100F487  +
push [ebp+hObject]  +
call edi  +
cmp [ebp+Context] esi +
jz loc_100F4A8  +
lea eax [ebp+Context] +
push eax  +
push esi  +
push 1  +
push esi  +
push esi  +
push esi  +
push [ebp+hFile]  +
call ds:BackupRead  +
cmp [ebp+hFile] 0FFFFFFFFh +
jz loc_100F4B9  +
push [ebp+hFile]  +
call edi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_10028] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1011DD7  +
leave   +
retn 14h  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-0F4h] +
call sub_101116E  +
push dword ptr [esi+54h]  +
xor ebx ebx +
push dword ptr [esi+50h]  +
lea ecx [ebp-0F4h] +
push dword ptr [ebp+10h]  +
mov [ebp-4] ebx +
call sub_10117AB  +
lea ecx [ebp-0F4h] +
test al al +
jnz loc_100F527  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_10113AA  +
xor eax eax +
call __EH_epilog3  +
retn 14h  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1011906  +
test al al +
jnz loc_100F54B  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0F4h] +
call sub_10113AA  +
mov eax esi +
jmp loc_100F51F  +
push dword ptr [ebp-94h]  +
lea eax [ebp-0F4h] +
push eax  +
push offset loc_101146C  +
call ds:ReadEncryptedFileRaw  +
mov esi ds:wprintf +
mov edi eax +
cmp dword_1067C5C ebx +
jz loc_100F57D  +
push edi  +
push offset aEfsReadencrypt  +
call esi  +
pop ecx  +
pop ecx  +
cmp edi ebx +
jz loc_100F58D  +
push dword ptr [ebp-80h]  +
mov [ebp-7Ch] edi +
call ds:SetEvent  +
push 2710h  +
push dword ptr [ebp-0F4h]  +
call ds:WaitForSingleObject  +
cmp eax ebx +
jz loc_100F5BC  +
call ds:GetLastError  +
mov ebx eax +
push ebx  +
push offset aEfsErrorDWaiti  +
call esi  +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_100F5BA  +
mov edi ebx +
xor ebx ebx +
cmp dword_1067C5C ebx +
jz loc_100F5CC  +
push offset aEfsClosingFile  +
call esi  +
pop ecx  +
lea ecx [ebp-0F4h] +
call sub_101125C  +
cmp dword_1067C5C ebx +
jz loc_100F60A  +
push offset aEfsFilesClosed  +
call esi  +
pop ecx  +
cmp dword_1067C5C ebx +
jz loc_100F60A  +
cmp edi ebx +
jz loc_100F60E  +
push dword ptr [ebp-0F0h]  +
push dword ptr [ebp-4Ch]  +
push dword ptr [ebp-7Ch]  +
push edi  +
push offset aEfsErrorLaster  +
call esi  +
add esp 14h +
cmp edi ebx +
jnz loc_100F626  +
mov edi [ebp-0F0h] +
cmp edi ebx +
jnz loc_100F626  +
mov edi [ebp-7Ch] +
cmp edi ebx +
jnz loc_100F626  +
mov edi [ebp-4Ch] +
cmp edi ebx +
jz loc_100F63F  +
cmp dword_1067C5C ebx +
jz loc_100F636  +
push offset aEfsDeletingTar  +
call esi  +
pop ecx  +
push dword ptr [ebp+0Ch]  +
call ds:DeleteFileW  +
cmp edi 1Dh +
jnz loc_100F652  +
cmp [ebp-0F0h] ebx +
jz loc_100F652  +
mov edi [ebp-0F0h] +
push edi  +
call ds:SetLastError  +
xor eax eax +
cmp edi ebx +
setz al  +
mov esi eax +
jmp loc_100F538  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
lea eax [ebp+dwRevision] +
push eax  +
lea eax [ebp+pControl] +
push eax  +
push [ebp+pSecurityDescriptor]  +
xor esi esi +
mov dword ptr [ebp+pControl] esi +
mov [ebp+dwRevision] esi +
call ds:GetSecurityDescriptorControl  +
cmp dword_1067C5C esi +
jz loc_100F80A  +
push offset aSource  +
push [ebp+lpString1]  +
call ds:lstrcmpW  +
mov esi ds:wprintf +
test eax eax +
jnz loc_100F6CB  +
push offset asc_10027B8  +
call esi  +
mov [esp+10h+var_10] offset aSrGroupOwnerDa +
call esi  +
mov [esp+10h+var_10] offset aDDPidpPidp +
call esi  +
pop ecx  +
push offset asc_10026F8  +
call esi  +
test dword ptr [ebp+pControl] 8000h +
pop ecx  +
mov eax offset aSr +
jnz loc_100F6E6  +
mov eax offset aAb +
push ebx  +
push edi  +
push eax  +
mov edi offset aS_1 +
push edi  +
call esi  +
mov ebx offset asc_1001B84 +
push ebx  +
call esi  +
add esp 0Ch +
test byte ptr [ebp+pControl] 2 +
mov eax offset aLD +
jnz loc_100F70C  +
mov eax offset asc_10026CC +
push eax  +
push edi  +
call esi  +
push ebx  +
call esi  +
add esp 0Ch +
test byte ptr [ebp+pControl] 1 +
mov eax offset aD_0 +
jnz loc_100F726  +
mov eax offset asc_10026CC +
push eax  +
push edi  +
call esi  +
push ebx  +
call esi  +
mov al byte ptr [ebp+pControl] +
and al 4 +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 0FFFFFFEBh +
add eax 6Eh +
push eax  +
mov edi offset aC +
push edi  +
call esi  +
mov eax dword ptr [ebp+pControl] +
and eax 400h +
movzx eax ax +
neg eax  +
sbb eax eax +
and eax 1Ch +
add eax 2Dh +
push eax  +
push edi  +
call esi  +
mov al byte ptr [ebp+pControl] +
and al 8 +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 17h +
add eax 2Dh +
push eax  +
push edi  +
call esi  +
mov eax dword ptr [ebp+pControl] +
and eax 1000h +
movzx eax ax +
neg eax  +
sbb eax eax +
and eax 23h +
add eax 2Dh +
push eax  +
push edi  +
call esi  +
push ebx  +
call esi  +
mov al byte ptr [ebp+pControl] +
and al 10h +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 0FFFFFFEBh +
add eax 6Eh +
push eax  +
push edi  +
call esi  +
mov eax dword ptr [ebp+pControl] +
and eax 800h +
movzx eax ax +
neg eax  +
sbb eax eax +
and eax 1Ch +
add eax 2Dh +
push eax  +
push edi  +
call esi  +
mov al byte ptr [ebp+pControl] +
and al 20h +
movzx eax al +
add esp 40h +
neg eax  +
sbb eax eax +
and eax 17h +
add eax 2Dh +
push eax  +
push edi  +
call esi  +
mov eax dword ptr [ebp+pControl] +
and eax 2000h +
movzx eax ax +
neg eax  +
sbb eax eax +
and eax 23h +
add eax 2Dh +
push eax  +
push edi  +
call esi  +
push [ebp+lpString1]  +
push offset aS_6  +
call esi  +
push offset asc_1001518  +
call esi  +
add esp 1Ch +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+dwRevision] +
push esi  +
mov esi [ebp+arg_14] +
push edi  +
xor edi edi +
mov dword ptr [ebp+pControl] edi +
mov [esi] eax +
cmp [ebp+arg_8] edi +
jnz loc_100F833  +
and eax 0FFFFFFFBh +
mov [esi] eax +
cmp [ebp+arg_C] edi +
jnz loc_100F83B  +
and dword ptr [esi] 0FFFFFFF7h +
test byte ptr [esi] 0Ch +
jz loc_100F851  +
lea eax [ebp+dwRevision] +
push eax  +
lea eax [ebp+pControl] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:GetSecurityDescriptorControl  +
mov eax [esi] +
test al 4 +
jz loc_100F87A  +
and eax 5FFFFFFFh +
mov [esi] eax +
cmp [ebp+arg_10] edi +
jnz loc_100F873  +
test dword ptr [ebp+pControl] 1000h +
jnz loc_100F873  +
or eax 20000000h +
jmp loc_100F878  +
or eax 80000000h +
mov [esi] eax +
mov eax [esi] +
test al 8 +
jz loc_100F8A3  +
and eax 0AFFFFFFFh +
mov [esi] eax +
cmp [ebp+arg_10] edi +
jnz loc_100F89C  +
test dword ptr [ebp+pControl] 2000h +
jnz loc_100F89C  +
or eax 10000000h +
jmp loc_100F8A1  +
or eax 40000000h +
mov [esi] eax +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+hMem] +
push esi  +
push edi  +
mov edi ds:GetNamedSecurityInfoW +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
lea eax [ebp+pSacl] +
push eax  +
lea eax [ebp+pDacl] +
push eax  +
lea eax [ebp+psidGroup] +
push eax  +
lea eax [ebp+psidOowner] +
push eax  +
push ebx  +
xor esi esi +
push 1  +
push [ebp+dwErrCode]  +
mov [ebp+psidGroup] esi +
mov [ebp+psidOowner] esi +
mov [ebp+pSacl] esi +
mov [ebp+pDacl] esi +
mov [ebp+pSecurityDescriptor] esi +
call edi  +
mov [ebp+dwErrCode] eax +
cmp eax esi +
jnz loc_100F9B4  +
cmp dword_1067C5C esi +
jz loc_100F93D  +
push offset aSource  +
push [ebp+pSecurityDescriptor]  +
call sub_100F66C  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push ebx  +
push 1  +
push [ebp+pObjectName]  +
mov [ebp+hMem] esi +
call edi  +
push offset String1  +
push [ebp+hMem]  +
call sub_100F66C  +
cmp [ebp+hMem] esi +
jz loc_100F93D  +
push [ebp+hMem]  +
call ds:LocalFree  +
lea eax [ebp+dwErrCode] +
push eax  +
push [ebp+arg_C]  +
push [ebp+pSacl]  +
push [ebp+pDacl]  +
push ebx  +
push [ebp+pSecurityDescriptor]  +
call sub_100F814  +
push [ebp+pSacl]  +
push [ebp+pDacl]  +
push [ebp+psidGroup]  +
push [ebp+psidOowner]  +
push [ebp+dwErrCode]  +
push 1  +
push [ebp+pObjectName]  +
call ds:SetNamedSecurityInfoW  +
mov [ebp+dwErrCode] eax +
cmp [ebp+pSecurityDescriptor] esi +
jz loc_100F97E  +
push [ebp+pSecurityDescriptor]  +
call ds:LocalFree  +
cmp dword_1067C5C esi +
jz loc_100F9B4  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push ebx  +
push 1  +
push [ebp+pObjectName]  +
mov [ebp+hMem] esi +
call edi  +
push offset aResult  +
push [ebp+hMem]  +
call sub_100F66C  +
cmp [ebp+hMem] esi +
jz loc_100F9B4  +
push [ebp+hMem]  +
call ds:LocalFree  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] esi +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
push edi  +
mov [ebp+var_4] edi +
mov [eax] edi +
mov [ebp+var_8] edi +
call memset  +
mov esi ds:NtQuerySecurityObject +
add esp 0Ch +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call esi  +
cmp eax edi +
jge loc_100FA64  +
mov [ebp+var_8] edi +
cmp eax 80000005h +
jz loc_100FA1D  +
cmp eax 0C0000023h +
jnz loc_100FA6E  +
push [ebp+var_C]  +
call ds:malloc  +
mov ebx eax +
pop ecx  +
cmp ebx edi +
jz loc_100FA7A  +
cmp [ebp+var_4] edi +
jz loc_100FA3C  +
push [ebp+var_4]  +
call ds:free  +
pop ecx  +
mov eax [ebp+var_C] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_4] ebx +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_10]  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call esi  +
cmp eax edi +
jl loc_100FA0F  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_100FA95  +
push eax  +
call ds:RtlNtStatusToDosError  +
mov [ebp+var_8] eax +
jmp loc_100FA81  +
mov [ebp+var_8] 8 +
cmp [ebp+var_8] edi +
jz loc_100FA95  +
cmp [ebp+var_4] edi +
jz loc_100FA95  +
push [ebp+var_4]  +
call ds:free  +
pop ecx  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+SecurityInfo] +
push ebx  +
xor ebx ebx +
push esi  +
xor ecx ecx +
push edi  +
mov [ebp+pSecurityDescriptor] ebx +
mov [ebp+hMem] ebx +
mov byte ptr [ebp+var_1] bl +
mov [ebp-3] bl +
mov [ebp+var_18] ebx +
mov [ebp+var_2] bl +
mov [ebp+var_4] bl +
mov [ebp+var_1C] ebx +
mov [ebp+var_10] eax +
mov [ebp+var_14] ebx +
test al 7 +
jz loc_100FADD  +
mov ecx 20000h +
test al 8 +
jz loc_100FAE7  +
or ecx 1000000h +
mov edi ds:CreateFileW +
push ebx  +
push 2000000h  +
push 3  +
push ebx  +
push 1  +
push ecx  +
push [ebp+hObject]  +
call edi  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100FB13  +
call ds:GetLastError  +
mov esi eax +
jmp loc_100FCD1  +
lea ecx [ebp+pSecurityDescriptor] +
push ecx  +
push [ebp+SecurityInfo]  +
push eax  +
call sub_100F9D1  +
mov esi eax +
cmp esi ebx +
jnz loc_100FCB3  +
mov esi ds:GetNamedSecurityInfoW +
cmp dword_1067C5C ebx +
jz loc_100FB75  +
push offset aSource  +
push [ebp+pSecurityDescriptor]  +
call sub_100F66C  +
lea eax [ebp+hMem] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+SecurityInfo]  +
push 1  +
push [ebp+lpFileName]  +
call esi  +
cmp [ebp+hMem] ebx +
jz loc_100FB75  +
push offset String1  +
push [ebp+hMem]  +
call sub_100F66C  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov [ebp+hMem] ebx +
push [ebp+hObject]  +
call ds:CloseHandle  +
or [ebp+hObject] 0FFFFFFFFh +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:RtlGetControlSecurityDescriptor  +
cmp eax ebx +
jl loc_100FC6E  +
xor eax eax +
test [ebp+var_14] 400h +
jz loc_100FBAB  +
mov eax 100h +
test [ebp+var_14] 800h +
jz loc_100FBB9  +
or eax 200h +
push eax  +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:RtlSetControlSecurityDescriptor  +
cmp eax ebx +
jl loc_100FC6E  +
lea eax [ebp-3] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_1] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:RtlGetDaclSecurityDescriptor  +
cmp eax ebx +
jl loc_100FC6E  +
cmp byte ptr [ebp+var_1] bl +
jnz loc_100FBF7  +
mov eax [ebp+SecurityInfo] +
and eax 0FFFFFFFBh +
mov [ebp+var_10] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp-2] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:RtlGetSaclSecurityDescriptor  +
cmp eax ebx +
jl loc_100FC6E  +
cmp [ebp+var_2] bl +
jnz loc_100FC19  +
and [ebp+var_10] 0FFFFFFF7h +
xor eax eax +
test byte ptr [ebp+var_10] 3 +
jz loc_100FC26  +
mov eax 80000h +
test byte ptr [ebp+var_10] 4 +
jz loc_100FC31  +
or eax 40000h +
test byte ptr [ebp+var_10] 8 +
jz loc_100FC3C  +
or eax 1000000h +
push ebx  +
push 2000000h  +
push 3  +
push ebx  +
push 1  +
push eax  +
push [ebp+lpFileName]  +
call edi  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100FC5D  +
call ds:GetLastError  +
jmp loc_100FC75  +
push [ebp+pSecurityDescriptor]  +
push [ebp+var_10]  +
push eax  +
call ds:NtSetSecurityObject  +
cmp eax ebx +
jge loc_100FC79  +
push eax  +
call ds:RtlNtStatusToDosError  +
mov esi eax +
jmp loc_100FCB3  +
cmp dword_1067C5C ebx +
jz loc_100FCB1  +
lea eax [ebp+hMem] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+SecurityInfo]  +
push 1  +
push [ebp+lpFileName]  +
call esi  +
cmp [ebp+hMem] ebx +
jz loc_100FCB1  +
push offset aResult  +
push [ebp+hMem]  +
call sub_100F66C  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov [ebp+hMem] ebx +
xor esi esi +
cmp [ebp+pSecurityDescriptor] ebx +
jz loc_100FCC2  +
push [ebp+pSecurityDescriptor]  +
call ds:free  +
pop ecx  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_100FCD1  +
push [ebp+hObject]  +
call ds:CloseHandle  +
push esi  +
call ds:SetLastError  +
xor eax eax +
cmp esi ebx +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn 0Ch  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [esi] offset off_100238C +
xor edi edi +
mov [ebp-4] edi +
mov ecx [esi+30h] +
mov byte ptr [ebp-4] 2 +
cmp ecx edi +
jz loc_100FD17  +
call sub_1003265  +
mov ecx [esi+2Ch] +
cmp ecx edi +
jz loc_100FD23  +
call sub_1003265  +
lea eax [esi+14h] +
mov ecx [eax] +
mov edx [eax+4] +
mov [ecx+4] edx +
mov ecx [eax+4] +
mov edx [eax] +
mov [ecx] edx +
lea ecx [esi+34h] +
mov [eax] eax +
mov [eax+4] eax +
call ?Empty@CString@@QAEXXZ  +
dec dword_1078DB0  +
jnz loc_100FD66  +
mov eax dword_1078DA8 +
cmp eax edi +
jz loc_100FD66  +
push eax  +
call ds:GlobalFree  +
mov dword_1078DA8 edi +
mov dword_1078DAC edi +
mov dword ptr [ebp-4] 1 +
jmp loc_100FDA5  +
call ds:GetLastError  +
cmp dword_1067C5C 0 +
mov esi eax +
jz loc_100FD8E  +
push esi  +
push offset aExceptionInCze  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
push esi  +
call ds:SetLastError  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_100FDA2 +
retn   +
mov esi [ebp-14h] +
lea ecx [esi+34h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
mov dword ptr [esi] offset off_1002270 +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea eax [ebp-10h] +
push eax  +
call sub_100EC9B  +
and dword ptr [ebp-4] 0 +
test byte ptr [esi+40h] 10h +
jz loc_100FE22  +
mov eax [ebp-10h] +
mov eax [eax-8] +
dec eax  +
push eax  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-10h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push dword ptr [ebp+8]  +
mov ecx esi +
push eax  +
call sub_100EB37  +
lea ecx [ebp-14h] +
mov esi eax +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
mov ecx esi +
call sub_100EB37  +
mov esi eax +
jmp loc_100FE0C  +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-18h] ebx +
cmp dword_1067D28 ebx +
jz loc_100FE61  +
push dword ptr [ebp+8]  +
call sub_100EC9B  +
jmp loc_100FEFB  +
cmp [esi+30h] ebx +
jz loc_100FEA7  +
lea eax [ebp-14h] +
push eax  +
call sub_100EC60  +
mov edi eax +
mov ecx [esi+30h] +
lea eax [ebp-10h] +
push eax  +
mov [ebp-4] ebx +
call sub_100D953  +
push edi  +
push eax  +
push dword ptr [ebp+8]  +
mov byte ptr [ebp-4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-10h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ??1CString@@QAE@XZ  +
jmp loc_100FEFB  +
push 2  +
pop edi  +
push edi  +
add esi 34h +
mov eax [esi] +
push offset asc_10022E0  +
push eax  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100FEED  +
mov eax [esi] +
mov eax [eax-8] +
add eax 0FFFFFFFEh +
push eax  +
lea eax [ebp-18h] +
push eax  +
mov ecx esi +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
push offset a?Unc  +
push dword ptr [ebp+8]  +
mov [ebp-4] edi +
call ??H@YG?AVCString@@PBGABV0@@Z  +
lea ecx [ebp-18h] +
jmp loc_100FE9C  +
push esi  +
push offset a?_1  +
push dword ptr [ebp+8]  +
call ??H@YG?AVCString@@PBGABV0@@Z  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov edi ecx +
lea eax [ebp-10h] +
push eax  +
call sub_100FE39  +
and dword ptr [ebp-4] 0 +
xor esi esi +
push dword ptr [ebp+8]  +
push dword ptr [ebp-10h]  +
call ds:SetFileAttributesW  +
test eax eax +
jnz loc_100FF63  +
call ds:GetLastError  +
cmp eax 7Bh +
jz loc_100FF74  +
cmp eax 2 +
jz loc_100FF74  +
push eax  +
call ds:SetLastError  +
inc esi  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100756B  +
test eax eax +
jnz loc_100FF28  +
jmp loc_100FF81  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100FF8F  +
inc esi  +
push esi  +
push 0  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_100756B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
lea eax [ebp-28h] +
push eax  +
call sub_100EC60  +
mov edi eax +
mov ecx [ebp+8] +
lea eax [ebp-24h] +
xor ebx ebx +
push eax  +
mov [ebp-4] ebx +
call sub_100D953  +
push edi  +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-1Ch] +
push eax  +
mov ecx esi +
call sub_100FE39  +
test dword ptr [esi+40h] 400h +
mov byte ptr [ebp-4] 5 +
jz loc_1010015  +
push dword ptr [ebp+24h]  +
mov ecx esi +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+8]  +
call sub_100F107  +
mov [ebp-20h] ebx +
cmp dword_1067CDC ebx +
jz loc_10100A7  +
mov edi 4000h +
test [esi+40h] edi +
jz loc_10100A7  +
push dword ptr [ebp+1Ch]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp-18h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAA7  +
mov ecx esi +
mov [ebp-14h] eax +
call sub_100ED0E  +
push edx  +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-1Ch]  +
call sub_100F4D5  +
test eax eax +
jz loc_1010207  +
push dword ptr [ebp-14h]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp+20h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAFE  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 20h  +
cmp [ebp+10h] ebx +
jnz loc_10100BF  +
cmp [ebp+14h] ebx +
jz loc_10100BF  +
mov edi 4000h +
test [esi+40h] edi +
jz loc_10101C4  +
push dword ptr [ebp+1Ch]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp-18h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAA7  +
mov [ebp-14h] eax +
mov [ebp-18h] ebx +
cmp [ebp+18h] ebx +
jz loc_10100EA  +
mov dword ptr [ebp-18h] 8 +
cmp [ebp+10h] ebx +
jz loc_10100F3  +
or dword ptr [ebp-18h] 2 +
cmp dword_1067C9C ebx +
jz loc_1010102  +
or dword ptr [ebp-18h] 800h +
cmp dword_1067CDC ebx +
jz loc_1010198  +
push 80h  +
push dword ptr [ebp-10h]  +
call ds:SetFileAttributesW  +
push dword ptr [ebp-10h]  +
call ds:DeleteFileW  +
push 0FFFFFFFFh  +
push dword ptr [ebp+20h]  +
mov ecx esi +
push dword ptr [ebp+8]  +
call sub_100F107  +
test eax eax +
jnz loc_1010144  +
call ds:GetLastError  +
mov edi eax +
cmp edi ebx +
jnz loc_1010189  +
push ebx  +
push dword ptr [ebp-10h]  +
call ds:DecryptFileW  +
cmp eax ebx +
jnz loc_101015E  +
call ds:GetLastError  +
mov edi eax +
cmp edi ebx +
jnz loc_1010189  +
push dword ptr [ebp-10h]  +
call ds:GetFileAttributesW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_101017A  +
call ds:GetLastError  +
mov edi eax +
test edi edi +
jnz loc_1010187  +
test ebx 4000h +
jz loc_1010196  +
mov edi 1771h +
xor ebx ebx +
push edi  +
call ds:SetLastError  +
cmp edi ebx +
jnz loc_10101BF  +
jmp loc_1010198  +
xor ebx ebx +
push dword ptr [ebp-18h]  +
mov eax [ebp+0Ch] +
neg eax  +
push ebx  +
sbb eax eax +
and eax esi +
push eax  +
push offset ProgressRoutine  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-1Ch]  +
call ds:CopyFileExW  +
test eax eax +
jnz loc_101006B  +
mov edi 4000h +
cmp [ebp+14h] ebx +
jz loc_1010207  +
test [esi+40h] edi +
jnz loc_1010207  +
push dword ptr [ebp+1Ch]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp-18h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAA7  +
mov ecx esi +
mov [ebp-14h] eax +
call sub_100ED0E  +
push edx  +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-1Ch]  +
call sub_100F1E6  +
test eax eax +
jnz loc_101023F  +
call ds:GetLastError  +
cmp eax 7Bh +
jnz loc_1010217  +
test [esi+40h] edi +
jz loc_101027A  +
cmp eax 2 +
jz loc_101027A  +
push eax  +
call ds:SetLastError  +
inc dword ptr [ebp-20h]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push esi  +
call sub_100756B  +
test eax eax +
jnz loc_1010018  +
jmp loc_101028A  +
push dword ptr [ebp-14h]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp+20h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAFE  +
xor esi esi +
inc esi  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
jmp loc_101009F  +
inc dword ptr [ebp-20h]  +
push dword ptr [ebp-20h]  +
push ebx  +
push dword ptr [ebp+20h]  +
push esi  +
call sub_100756B  +
push dword ptr [ebp-14h]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp+20h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx esi +
call sub_100EAFE  +
xor esi esi +
jmp loc_101025B  +
***
call __EH_prolog3  +
mov esi ecx +
lea eax [ebp-1Ch] +
push eax  +
call sub_100EC60  +
mov edi eax +
mov ecx [ebp+8] +
and dword ptr [ebp-4] 0 +
lea eax [ebp-18h] +
push eax  +
call sub_100D953  +
push edi  +
push eax  +
lea eax [ebp-14h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-10h] +
push eax  +
mov ecx esi +
call sub_100FE39  +
mov byte ptr [ebp-4] 5 +
xor edi edi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
call sub_100FAA4  +
test eax eax +
jnz loc_101034A  +
call ds:GetLastError  +
cmp eax 7Bh +
jz loc_1010367  +
cmp eax 2 +
jz loc_1010367  +
push eax  +
call ds:SetLastError  +
inc edi  +
push edi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push esi  +
call sub_100756B  +
test eax eax +
jnz loc_101030D  +
jmp loc_1010374  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_101038E  +
inc edi  +
push edi  +
push 0  +
push dword ptr [ebp+10h]  +
push esi  +
call sub_100756B  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
push 10h  +
mov eax offset loc_1014169 +
call __EH_prolog3  +
mov esi ecx +
lea eax [ebp+var_1C] +
push eax  +
call sub_100EC60  +
mov edi eax +
mov ecx [ebp+arg_0] +
and [ebp+var_4] 0 +
lea eax [ebp+var_18] +
push eax  +
call sub_100D953  +
push edi  +
push eax  +
lea eax [ebp+pObjectName] +
push eax  +
mov byte ptr [ebp+var_4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp+var_18] +
mov byte ptr [ebp+var_4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+var_1C] +
mov byte ptr [ebp+var_4] 4 +
call ??1CString@@QAE@XZ  +
lea eax [ebp+dwErrCode] +
push eax  +
mov ecx esi +
call sub_100FE39  +
mov byte ptr [ebp+var_4] 5 +
xor edi edi +
push 0  +
push [ebp+hMem]  +
push [ebp+dwErrCode]  +
push [ebp+pObjectName]  +
call sub_100F8AE  +
test eax eax +
jnz loc_101043B  +
call ds:GetLastError  +
cmp eax 7Bh +
jz loc_1010458  +
cmp eax 2 +
jz loc_1010458  +
push eax  +
call ds:SetLastError  +
inc edi  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
call sub_100756B  +
test eax eax +
jnz loc_10103FC  +
jmp loc_1010465  +
lea ecx [ebp+dwErrCode] +
mov byte ptr [ebp+var_4] 4 +
call ??1CString@@QAE@XZ  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+pObjectName] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_101047F  +
inc edi  +
push edi  +
push 0  +
push [ebp+arg_8]  +
push esi  +
call sub_100756B  +
lea ecx [ebp+dwErrCode] +
mov byte ptr [ebp+var_4] 4 +
call ??1CString@@QAE@XZ  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+pObjectName] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
mov edi ecx +
lea eax [ebp-10h] +
push eax  +
call sub_100FE39  +
and dword ptr [ebp-4] 0 +
xor esi esi +
push 80h  +
push dword ptr [ebp-10h]  +
call ds:SetFileAttributesW  +
push dword ptr [ebp-10h]  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_10104DA  +
inc esi  +
push esi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push edi  +
call sub_100756B  +
test eax eax +
jnz loc_10104A9  +
xor esi esi +
jmp loc_10104DD  +
xor esi esi +
inc esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push 144h  +
push esi  +
call sub_100469C  +
test eax eax +
jge loc_101051C  +
xor eax eax +
mov [esi] ax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100FCEB  +
test byte ptr [ebp+8] 1 +
jz loc_101053E  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea eax [ebp-14h] +
push eax  +
call sub_100FE39  +
xor ebx ebx +
push ebx  +
push 0A000000h  +
push 3  +
push ebx  +
push 1  +
push 80h  +
push dword ptr [ebp-14h]  +
mov [ebp-4] ebx +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_10105D0  +
lea eax [esi+4] +
push eax  +
lea eax [esi+0Ch] +
push eax  +
lea eax [esi+48h] +
push eax  +
push edi  +
call ds:GetFileTime  +
mov [ebp-10h] eax +
call ds:GetLastError  +
push edi  +
mov [ebp-18h] eax +
call ds:CloseHandle  +
push dword ptr [ebp-18h]  +
call ds:SetLastError  +
cmp [ebp-10h] ebx +
jnz loc_10105CD  +
cmp dword_1067C5C ebx +
jz loc_10105CD  +
push esi  +
push 23A8h  +
call sub_100BA0B  +
mov ebx [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
push eax  +
mov [ebp-524h] ecx +
mov [ebp-530h] eax +
call sub_100EBA1  +
mov [ebp-52Ch] eax +
or eax edx +
mov [ebp-528h] edx +
jnz loc_1010624  +
xor eax eax +
jmp loc_1010945  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-524h] +
lea eax [ebp-52Ch] +
push eax  +
call sub_100EBC4  +
xor ebx ebx +
mov [ebp-534h] eax +
cmp eax ebx +
jz loc_101061D  +
mov esi 989680h +
cmp dword_1067C5C ebx +
jz loc_1010743  +
mov eax [ebp-524h] +
test byte ptr [eax+40h] 10h +
jnz loc_1010743  +
push ebx  +
push esi  +
push dword ptr [ebp-528h]  +
push dword ptr [ebp-52Ch]  +
call __alldvrm  +
push 0  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp-53Ch] ecx +
mov [ebp-538h] ebx +
call __alldvrm  +
push 0  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp-548h] ecx +
mov [ebp-544h] ebx +
call __alldvrm  +
mov [ebp-550h] eax +
lea eax [ebp-540h] +
mov [ebp-558h] ecx +
mov ecx [ebp-524h] +
push eax  +
mov [ebp-54Ch] edx +
call sub_100EC9B  +
push dword ptr [ebp-540h]  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp-538h]  +
xor eax eax +
push dword ptr [ebp-53Ch]  +
cmp [ebp-534h] eax +
push dword ptr [ebp-544h]  +
setl al  +
push dword ptr [ebp-548h]  +
push ebx  +
push dword ptr [ebp-558h]  +
push dword ptr [ebp-54Ch]  +
lea eax [eax+eax+2Bh] +
push dword ptr [ebp-550h]  +
push eax  +
lea eax [ebp-520h] +
push offset aFindnextfileDi  +
push eax  +
call sub_10104F8  +
add esp 30h +
push 1  +
lea eax [ebp-520h] +
push eax  +
call sub_100A355  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-540h] +
call ??1CString@@QAE@XZ  +
xor ebx ebx +
cmp byte_1067C24 bl +
jnz loc_1010756  +
mov eax [ebp-534h] +
jmp loc_1010945  +
mov eax [ebp-52Ch] +
mov ecx [ebp-528h] +
sub eax 61C46800h +
sbb ecx 8 +
mov [ebp-53Ch] eax +
or eax ecx +
mov [ebp-538h] ecx +
jz loc_101061D  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-524h] +
lea eax [ebp-53Ch] +
push eax  +
call sub_100EBC4  +
cmp eax ebx +
jz loc_101061D  +
mov ecx [ebp-524h] +
call sub_101054A  +
test eax eax +
jz loc_101074B  +
mov ecx [ebp-530h] +
call sub_101054A  +
test eax eax +
jz loc_101074B  +
push dword ptr [ebp-530h]  +
mov ecx [ebp-524h] +
call sub_100EBA1  +
mov [ebp-52Ch] eax +
or eax edx +
mov [ebp-528h] edx +
jz loc_101061D  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-524h] +
lea eax [ebp-52Ch] +
push eax  +
call sub_100EBC4  +
mov [ebp-540h] eax +
cmp eax ebx +
jz loc_101061D  +
cmp dword_1067C5C ebx +
jz loc_10108FE  +
mov eax [ebp-524h] +
test byte ptr [eax+40h] 10h +
jnz loc_10108FE  +
push ebx  +
push esi  +
mov esi [ebp-528h] +
push esi  +
push dword ptr [ebp-52Ch]  +
call __alldvrm  +
push 0  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp-550h] ecx +
mov [ebp-54Ch] ebx +
call __alldvrm  +
push 0  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp-548h] ecx +
mov [ebp-544h] ebx +
call __alldvrm  +
mov [ebp-558h] eax +
lea eax [ebp-530h] +
mov [ebp-560h] ecx +
mov ecx [ebp-524h] +
push eax  +
mov [ebp-554h] edx +
call sub_100EC9B  +
push dword ptr [ebp-530h]  +
xor eax eax +
push dword ptr [ebp-54Ch]  +
cmp [ebp-534h] eax +
push dword ptr [ebp-550h]  +
setl al  +
push dword ptr [ebp-544h]  +
mov dword ptr [ebp-4] 1 +
push dword ptr [ebp-548h]  +
push ebx  +
push dword ptr [ebp-560h]  +
lea eax [eax+eax+2Bh] +
push dword ptr [ebp-554h]  +
push dword ptr [ebp-558h]  +
push eax  +
lea eax [ebp-298h] +
push offset aGetfiletimeDif  +
push eax  +
call sub_10104F8  +
add esp 30h +
push 1  +
lea eax [ebp-298h] +
push eax  +
call sub_100A355  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-530h] +
call ??1CString@@QAE@XZ  +
jmp loc_1010904  +
mov esi [ebp-528h] +
mov eax [ebp-52Ch] +
sub eax 61C46800h +
sbb esi 8 +
mov [ebp-53Ch] eax +
or eax esi +
mov [ebp-538h] esi +
jz loc_101061D  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-524h] +
lea eax [ebp-53Ch] +
push eax  +
call sub_100EBC4  +
neg eax  +
sbb eax eax +
and eax [ebp-540h] +
call sub_1011EF1  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
test edi edi +
jnz loc_101096A  +
xor eax eax +
inc eax  +
jmp loc_1010A02  +
mov eax [esi+40h] +
mov ecx [edi+40h] +
and eax 10h +
and ecx 10h +
cmp eax ecx +
jz loc_101099C  +
test eax eax +
jz loc_101098C  +
mov eax [edi+50h] +
mov [esi+50h] eax +
mov eax [edi+54h] +
mov [esi+54h] eax +
jmp loc_1010998  +
mov eax [esi+50h] +
mov [edi+50h] eax +
mov eax [esi+54h] +
mov [edi+54h] eax +
push 2  +
jmp loc_1010A01  +
cmp dword_1067C9C 0 +
jz loc_10109C2  +
xor ecx ecx +
mov eax 0A000000Ch +
cmp [edi+44h] eax +
setz cl  +
xor edx edx +
cmp [esi+44h] eax +
setz dl  +
cmp edx ecx +
jz loc_10109C2  +
push 11h  +
jmp loc_1010A01  +
push [ebp+arg_8]  +
mov ecx esi +
push edi  +
call sub_10105E9  +
test eax eax +
jle loc_10109D5  +
push 4  +
jmp loc_1010A01  +
jge loc_10109DB  +
push 5  +
jmp loc_1010A01  +
push edi  +
mov ecx esi +
call sub_100EC18  +
test eax eax +
jz loc_10109EB  +
push 6  +
jmp loc_1010A01  +
cmp [ebp+arg_4] 0 +
jz loc_10109FF  +
mov eax [esi+40h] +
xor eax [edi+40h] +
test al 27h +
jz loc_10109FF  +
push 0Fh  +
jmp loc_1010A01  +
push 3  +
pop eax  +
pop edi  +
mov [esi+38h] eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_101039B  +
***
mov eax offset off_1002960 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea eax [ebp+dwDisposition] +
push eax  +
xor ebx ebx +
lea esi [edi+4] +
push esi  +
push ebx  +
push 0F003Fh  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+dwDisposition]  +
mov dword ptr [edi] offset off_100297C +
push [ebp+hKey]  +
mov [esi] ebx +
call ds:RegCreateKeyExW  +
test eax eax +
jz loc_1010A62  +
mov [esi] ebx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov dword ptr [esi] offset off_100297C +
test eax eax +
jz loc_1010A8D  +
push eax  +
call ds:RegCloseKey  +
and dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_1002270 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+cbData] +
push eax  +
push 0  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push [ebp+Type]  +
push dword ptr [ecx+4]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1010AC9  +
mov eax [ebp+Type] +
cmp eax [ebp+arg_4] +
jnz loc_1010AC9  +
xor eax eax +
inc eax  +
jmp locret_1010ACB  +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 4  +
push [ebp+Type]  +
mov esi ecx +
call sub_1010A9A  +
test eax eax +
jnz loc_1010AF6  +
push [ebp+Type]  +
push dword ptr [esi+4]  +
call ds:RegDeleteValueW  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 0  +
push [ebp+Type]  +
push dword ptr [esi+4]  +
call ds:RegSetValueExW  +
neg eax  +
sbb eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+cbData] +
push esi  +
push 4  +
push ebx  +
mov esi ecx +
call sub_1010A9A  +
test eax eax +
jnz loc_1010B4A  +
push ebx  +
push dword ptr [esi+4]  +
call ds:RegDeleteValueW  +
push [ebp+arg_8]  +
mov ecx esi +
push ebx  +
call sub_1010AD4  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push ebx  +
push dword ptr [esi+4]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
mov ecx [ebp+arg_4] +
mov edx dword ptr [ebp+Data] +
pop esi  +
pop ebx  +
test eax eax +
jz loc_1010B78  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
test eax eax +
setz cl  +
mov eax ecx +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+dwType]  +
mov esi ecx +
push [ebp+Type]  +
call sub_1010A9A  +
test eax eax +
jnz loc_1010BAF  +
push [ebp+Type]  +
push dword ptr [esi+4]  +
call ds:RegDeleteValueW  +
push [ebp+lpData]  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+lpData]  +
push [ebp+dwType]  +
push 0  +
push [ebp+Type]  +
push dword ptr [esi+4]  +
call ds:RegSetValueExW  +
neg eax  +
sbb eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1010BF6  +
cmp ecx 7FFFFFFFh +
jbe loc_1010BFB  +
mov eax 80070057h +
test eax eax +
jl loc_1010C46  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1010C36  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1010C31  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_1010C31  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1010C19  +
pop edi  +
test esi esi +
jnz loc_1010C3D  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1010A70  +
test byte ptr [ebp+8] 1 +
jz loc_1010C69  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 814h +
mov eax dword_1017160 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
push [ebp+dwType]  +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
mov [ebp+var_80C] eax +
mov [ebp+var_814] ebx +
call sub_1010A9A  +
test eax eax +
jnz loc_1010CC7  +
push edi  +
push dword ptr [esi+4]  +
call ds:RegDeleteValueW  +
push [ebp+dwType]  +
mov ecx esi +
push ebx  +
push edi  +
call sub_1010B8C  +
xor eax eax +
push 7FEh  +
push eax  +
mov word ptr [ebp+Data] ax +
lea eax [ebp-802h] +
push eax  +
call memset  +
mov ebx [ebp+arg_8] +
mov eax 800h +
add esp 0Ch +
cmp ebx eax +
jbe loc_1010CF3  +
mov ebx eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push edi  +
push dword ptr [esi+4]  +
mov [ebp+cbData] ebx +
call ds:RegQueryValueExW  +
mov esi eax +
test esi esi +
jnz loc_1010D40  +
mov eax [ebp+Type] +
cmp eax [ebp+dwType] +
jnz loc_1010D40  +
lea eax [ebp+Data] +
push eax  +
push ebx  +
push [ebp+var_80C]  +
call sub_1010BE0  +
jmp loc_1010D56  +
push [ebp+var_814]  +
push ebx  +
push [ebp+var_80C]  +
call sub_1010BE0  +
test esi esi +
jnz loc_1010D66  +
mov eax [ebp+dwType] +
cmp [ebp+Type] eax +
jnz loc_1010D66  +
xor eax eax +
inc eax  +
jmp loc_1010D68  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1011DD7  +
leave   +
retn 14h  +
***
mov eax offset off_100299C +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
add ecx 4 +
push ecx  +
mov ecx [ebp+arg_0] +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [ebp+arg_0] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
lea ecx [esi+4] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
lea edi [esi+4] +
mov ecx edi +
mov dword ptr [esi] offset off_10029B8 +
call ??0CString@@QAE@XZ  +
mov ecx edi +
mov byte ptr [ebp-4] 1 +
call ?Empty@CString@@QAEXXZ  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [esi] offset off_10029B8 +
and dword ptr [ebp-4] 0 +
lea ecx [esi+4] +
mov byte ptr [ebp-4] 2 +
call ?Empty@CString@@QAEXXZ  +
mov dword ptr [ebp-4] 1 +
jmp loc_1010E6D  +
call ds:GetLastError  +
cmp dword_1067C5C 0 +
mov esi eax +
jz loc_1010E56  +
push esi  +
push offset aExceptionInCzs  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
push esi  +
call ds:SetLastError  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1010E6A +
retn   +
mov esi [ebp-14h] +
lea ecx [esi+4] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
mov dword ptr [esi] offset off_1002270 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1010E07  +
test byte ptr [ebp+8] 1 +
jz loc_1010EA4  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax offset off_1002A30 +
retn   +
***
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
retn   +
***
retn 4  +
***
xor eax eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+10h] eax +
mov [ecx+14h] eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
call sub_100EA8A  +
test eax eax +
jz loc_1010F0F  +
inc dword ptr [esi+4]  +
jmp loc_1010F20  +
mov ecx [ebp+arg_0] +
call sub_100ED0E  +
add [esi+10h] eax +
adc [esi+14h] edx +
inc dword ptr [esi+8]  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov eax [ecx+10h] +
mov edx [ecx+14h] +
retn   +
***
mov eax [ecx+10h] +
or eax [ecx+14h] +
jz loc_1010F4B  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002270 +
jz loc_1010F6E  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
cmp dword_1067C78 esi +
jz loc_1010FA8  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
push offset aI64d  +
push [ebp+arg_0]  +
call sub_100B853  +
add esp 10h +
jmp loc_1011163  +
mov edx [ecx+14h] +
mov eax [ecx+10h] +
push edi  +
mov edi 10000000h +
cmp edx edi +
jl loc_1010FF8  +
jg loc_1010FBE  +
cmp eax esi +
jb loc_1010FF8  +
mov ecx edx +
push esi  +
mov [ebp+var_4] ecx +
push 3E8h  +
and ecx 0FFFFFFFh +
mov ebx eax +
push ecx  +
push ebx  +
call __allmul  +
push edi  +
push esi  +
push edx  +
push eax  +
call __alldiv  +
push eax  +
push edi  +
push esi  +
push [ebp+var_4]  +
push ebx  +
call __alldiv  +
push eax  +
push offset aD_03dE  +
jmp loc_1011157  +
mov edi 40000h +
cmp edx edi +
jl loc_1011041  +
jg loc_1011007  +
cmp eax esi +
jb loc_1011041  +
mov ecx edx +
push esi  +
mov [ebp+var_4] ecx +
push 3E8h  +
and ecx 3FFFFh +
mov ebx eax +
push ecx  +
push ebx  +
call __allmul  +
push edi  +
push esi  +
push edx  +
push eax  +
call __alldiv  +
push eax  +
push edi  +
push esi  +
push [ebp+var_4]  +
push ebx  +
call __alldiv  +
push eax  +
push offset aD_03dP  +
jmp loc_1011157  +
mov edi 100h +
cmp edx edi +
jl loc_101108A  +
jg loc_1011050  +
cmp eax esi +
jb loc_101108A  +
mov ecx edx +
push esi  +
mov [ebp+var_4] ecx +
push 3E8h  +
and ecx 0FFh +
mov ebx eax +
push ecx  +
push ebx  +
call __allmul  +
push edi  +
push esi  +
push edx  +
push eax  +
call __alldiv  +
push eax  +
push edi  +
push esi  +
push [ebp+var_4]  +
push ebx  +
call __alldiv  +
push eax  +
push offset aD_03dT  +
jmp loc_1011157  +
cmp edx esi +
jl loc_1011150  +
mov edi 40000000h +
jg loc_101109D  +
cmp eax edi +
jb loc_10110D2  +
mov ebx eax +
mov eax edx +
mov [ebp+var_4] eax +
mov eax ebx +
and eax 3FFFFFFFh +
mov ecx 3E8h +
mul  ecx +
push esi  +
push edi  +
push edx  +
push eax  +
call __alldiv  +
push eax  +
push esi  +
push edi  +
push [ebp+var_4]  +
push ebx  +
call __alldiv  +
push eax  +
push offset aD_03dG  +
jmp loc_1011157  +
cmp edx esi +
jl loc_1011150  +
mov edi 100000h +
jg loc_10110E1  +
cmp eax edi +
jb loc_1011111  +
mov ebx eax +
mov eax edx +
push 64h  +
mov [ebp+var_4] eax +
pop ecx  +
mov eax ebx +
and eax 0FFFFFh +
mul  ecx +
push esi  +
push edi  +
push edx  +
push eax  +
call __alldiv  +
push eax  +
push esi  +
push edi  +
push [ebp+var_4]  +
push ebx  +
call __alldiv  +
push eax  +
push offset aD_02dM  +
jmp loc_1011157  +
cmp edx esi +
jl loc_1011150  +
mov edi 400h +
jg loc_1011120  +
cmp eax edi +
jb loc_1011150  +
mov ebx eax +
mov eax edx +
push 0Ah  +
mov [ebp+var_4] eax +
pop ecx  +
mov eax ebx +
and eax 3FFh +
mul  ecx +
push esi  +
push edi  +
push edx  +
push eax  +
call __alldiv  +
push eax  +
push esi  +
push edi  +
push [ebp+var_4]  +
push ebx  +
call __alldiv  +
push eax  +
push offset aD_01dK  +
jmp loc_1011157  +
push edx  +
push eax  +
push offset aI64d  +
push [ebp+arg_0]  +
call sub_100B853  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax ecx +
xor ecx ecx +
push esi  +
mov [eax] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+24h] cl +
mov esi offset unk_1027C20 +
lea edx [eax+38h] +
mov [edx-10h] esi +
mov [edx] ecx +
mov [edx+10h] ecx +
mov [edx+5Ch] ecx +
mov [edx+2Ch] ecx +
add esi 10000h +
add edx 4 +
cmp esi offset dword_1067C20 +
jl loc_1011186  +
mov [eax+0A4h] ecx +
mov [eax+74h] ecx +
mov [eax+58h] ecx +
mov [eax+5Ch] ecx +
mov [eax+60h] ecx +
mov [eax+78h] ecx +
mov [eax+7Ch] ecx +
mov [eax+80h] ecx +
mov [eax+88h] ecx +
mov [eax+8Ch] ecx +
mov [eax+90h] ecx +
mov [eax+0A8h] ecx +
mov [eax+0ACh] ecx +
mov [eax+0B0h] ecx +
mov [eax+0B8h] ecx +
mov [eax+0BCh] ecx +
mov [eax+0C0h] ecx +
mov [eax+0C4h] ecx +
mov [eax+0C8h] ecx +
mov [eax+0D0h] ecx +
mov [eax+0D4h] ecx +
mov [eax+0D8h] ecx +
mov [eax+0DCh] ecx +
mov dword ptr [eax+0E0h] 1 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp [esi] edi +
jnz loc_101124A  +
push edi  +
push edi  +
push edi  +
push edi  +
call ds:CreateEventW  +
mov [esi] eax +
xor eax eax +
cmp [esi] edi +
pop edi  +
setnz al  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetLastError +
mov esi ecx +
call edi  +
mov [ebp+dwErrCode] eax +
mov eax [esi] +
xor ebx ebx +
cmp eax ebx +
jz loc_10112AE  +
lea ecx [esi+4] +
push ecx  +
push eax  +
call ds:GetExitCodeThread  +
test eax eax +
jnz loc_10112A4  +
call edi  +
mov [esi+8] eax +
cmp dword_1067C5C ebx +
jz loc_10112A4  +
push eax  +
push offset aEfsErrorDGetti  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
push dword ptr [esi]  +
call ds:CloseHandle  +
mov [esi] ebx +
mov edi ds:CloseEncryptedFileRaw +
cmp [esi+90h] ebx +
jz loc_10112DE  +
cmp dword_1067C5C ebx +
jz loc_10112D0  +
push offset aEfsClosingSour  +
call ds:wprintf  +
pop ecx  +
push dword ptr [esi+90h]  +
call edi  +
mov [esi+90h] ebx +
cmp [esi+60h] ebx +
jz loc_10112FF  +
cmp dword_1067C5C ebx +
jz loc_10112F7  +
push offset aEfsClosingTarg  +
call ds:wprintf  +
pop ecx  +
push dword ptr [esi+60h]  +
call edi  +
mov [esi+60h] ebx +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_101134B  +
push eax  +
call ds:CloseHandle  +
test eax eax +
jnz loc_1011348  +
cmp dword_1067C5C eax +
jz loc_1011348  +
call ds:GetLastError  +
push eax  +
push offset aEfsErrorDClosi  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_101125C  +
push 4  +
lea edi [esi+64h] +
pop ebx  +
lea eax [edi+30h] +
push eax  +
mov ecx esi +
call sub_1011312  +
push edi  +
mov ecx esi +
call sub_1011312  +
add edi 4 +
dec ebx  +
jnz loc_1011367  +
lea eax [esi+0A4h] +
push eax  +
mov ecx esi +
call sub_1011312  +
lea eax [esi+74h] +
push eax  +
mov ecx esi +
call sub_1011312  +
cmp [esi+24h] bl +
jz loc_10113A1  +
mov [esi+24h] bl +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetEvent +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [esi+58h] +
push dword ptr [esi+edi*4+64h]  +
call ebx  +
test eax eax +
jz loc_10113E7  +
inc edi  +
and edi 80000003h +
jns loc_10113E0  +
dec edi  +
or edi 0FFFFFFFCh +
inc edi  +
mov [esi+58h] edi +
mov al 1 +
jmp loc_10113F7  +
call ds:GetLastError  +
push dword ptr [esi+74h]  +
mov [esi+78h] eax +
call ebx  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+58h] +
mov eax [esi+eax*4+94h] +
mov [ebp+Handles] eax +
mov eax [esi+0A4h] +
push 0FFFFFFFFh  +
mov [ebp+var_4] eax +
push 0  +
lea eax [ebp+Handles] +
push eax  +
push 2  +
call ds:WaitForMultipleObjects  +
mov [esi+80h] eax +
cmp eax 1 +
jnz loc_101144A  +
mov dword ptr [esi+78h] 1Dh +
xor al al +
jmp loc_1011462  +
test eax eax +
jz loc_1011460  +
mov dword ptr [esi+78h] 1Eh +
call ds:GetLastError  +
mov [esi+7Ch] eax +
jmp loc_1011446  +
mov al 1 +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push esi  +
call sub_1011403  +
test al al +
jnz loc_10114A0  +
cmp dword_1067C5C 0 +
jz loc_1011498  +
push dword ptr [esi+78h]  +
push offset aEfsReadCallbac  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
mov eax [esi+78h] +
jmp loc_1011533  +
lea eax [esi+88h] +
add dword ptr [eax] 1 +
push ebx  +
mov ebx [ebp+10h] +
adc dword ptr [eax+4] 0 +
push edi  +
mov edi [esi+58h] +
push ebx  +
cmp ebx 10000h +
jbe loc_10114EF  +
mov edi ds:wprintf +
push offset aErrorTooMuchDa  +
call edi  +
pop ecx  +
pop ecx  +
push dword ptr [esi+74h]  +
call ds:SetEvent  +
cmp dword_1067C5C 0 +
jz loc_10114EA  +
push 1Eh  +
push offset aEfsReadCallbac  +
call edi  +
pop ecx  +
pop ecx  +
push 1Eh  +
pop eax  +
jmp loc_1011531  +
push dword ptr [ebp+8]  +
push dword ptr [esi+edi*4+28h]  +
call memcpy  +
and dword ptr [esi+edi*4+48h] 0 +
add esp 0Ch +
push esi  +
mov [esi+edi*4+38h] ebx +
call sub_10113B4  +
test al al +
jnz loc_101152F  +
cmp dword_1067C5C 0 +
jz loc_101152A  +
push dword ptr [esi+78h]  +
push offset aEfsReadCallbac  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
mov eax [esi+78h] +
jmp loc_1011531  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetEvent +
push esi  +
mov esi [ebp+arg_0] +
and dword ptr [esi+0C8h] 0 +
push edi  +
mov edi [esi+5Ch] +
push dword ptr [esi+edi*4+94h]  +
call ebx  +
test eax eax +
jz loc_101157A  +
inc edi  +
and edi 80000003h +
jns loc_1011573  +
dec edi  +
or edi 0FFFFFFFCh +
inc edi  +
mov [esi+5Ch] edi +
mov al 1 +
jmp loc_1011590  +
call ds:GetLastError  +
push dword ptr [esi+0A4h]  +
mov [esi+0A8h] eax +
call ebx  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+5Ch] +
mov eax [esi+eax*4+64h] +
mov [ebp+Handles] eax +
mov eax [esi+74h] +
push 0FFFFFFFFh  +
mov [ebp+var_4] eax +
push 0  +
lea eax [ebp+Handles] +
push eax  +
push 2  +
call ds:WaitForMultipleObjects  +
xor ecx ecx +
inc ecx  +
mov [esi+0B0h] eax +
cmp eax ecx +
jnz loc_10115E2  +
mov dword ptr [esi+0A8h] 1Eh +
xor al al +
jmp loc_1011606  +
test eax eax +
jz loc_10115FE  +
mov dword ptr [esi+0A8h] 1Dh +
call ds:GetLastError  +
mov [esi+0ACh] eax +
jmp loc_10115DE  +
mov [esi+0C8h] ecx +
mov al cl +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
lea eax [esi+0B8h] +
add dword ptr [eax] 1 +
push 0  +
pop edi  +
adc [eax+4] edi +
cmp [esi+0C8h] edi +
jnz loc_1011661  +
push esi  +
call sub_101159C  +
test al al +
jnz loc_1011661  +
cmp dword_1067C5C edi +
jz loc_1011656  +
push dword ptr [esi+0A8h]  +
push offset aEfsWriteCallba  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
mov eax [esi+0A8h] +
jmp loc_1011729  +
mov eax [esi+5Ch] +
lea ecx [esi+eax*4+38h] +
mov edx [ecx] +
mov [ebp+0Ch] ecx +
cmp edx edi +
jnz loc_10116D2  +
mov eax [ebp+10h] +
mov [eax] edi +
mov eax [esi+0E0h] +
neg eax  +
sbb eax eax +
and eax [ebp+8] +
push eax  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push edi  +
push 1  +
push dword ptr [esi+0D4h]  +
push dword ptr [esi+0D0h]  +
push dword ptr [esi+0D4h]  +
push dword ptr [esi+0D0h]  +
push dword ptr [esi+0D4h]  +
push dword ptr [esi+0D0h]  +
push dword ptr [esi+0D4h]  +
push dword ptr [esi+0D0h]  +
call ProgressRoutine  +
push esi  +
call sub_101153D  +
test al al +
jz loc_101163B  +
xor eax eax +
jmp loc_1011729  +
push ebx  +
mov ebx edx +
mov edx [ebp+10h] +
mov edx [edx] +
lea edi [esi+eax*4+48h] +
mov ecx [edi] +
sub ebx ecx +
cmp edx ebx +
jnb loc_10116E8  +
mov ebx edx +
mov eax [esi+eax*4+28h] +
push ebx  +
add eax ecx +
push eax  +
push dword ptr [ebp+8]  +
call memcpy  +
mov eax [ebp+10h] +
mov ecx [ebp+0Ch] +
mov [eax] ebx +
add [edi] ebx +
add esp 0Ch +
add [esi+0D8h] ebx +
push 0  +
pop ebx  +
adc [esi+0DCh] ebx +
mov eax [edi] +
cmp eax [ecx] +
jnb loc_101172F  +
add esi 0C0h +
add dword ptr [esi] 1 +
adc [esi+4] ebx +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax [esi+0E0h] +
neg eax  +
sbb eax eax +
and eax [ebp+8] +
push eax  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ebx  +
push 1  +
push dword ptr [esi+0DCh]  +
push dword ptr [esi+0D8h]  +
push dword ptr [esi+0D4h]  +
push dword ptr [esi+0D0h]  +
push dword ptr [esi+0DCh]  +
push dword ptr [esi+0D8h]  +
push dword ptr [esi+0D4h]  +
push dword ptr [esi+0D0h]  +
call ProgressRoutine  +
push esi  +
call sub_101153D  +
test al al +
jnz loc_1011726  +
cmp dword_1067C5C ebx +
jz loc_101179E  +
push dword ptr [esi+0A8h]  +
push offset aEfsWriteCallba  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
mov eax [esi+0A8h] +
jmp loc_1011728  +
***
call __SEH_prolog4  +
mov esi ecx +
mov [ebp+var_1C] esi +
mov eax [ebp+arg_4] +
mov [esi+0D0h] eax +
mov eax [ebp+arg_8] +
mov [esi+0D4h] eax +
mov eax [ebp+arg_0] +
mov [esi+0E0h] eax +
cmp byte ptr [esi+24h] 0 +
jnz loc_101181D  +
and [ebp+ms_exc.disabled] 0 +
mov byte ptr [esi+24h] 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1011817  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000017h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov esi [ebp+var_1C] +
cmp byte ptr [esi+24h] 0 +
jz loc_1011886  +
xor ebx ebx +
lea edi [esi+94h] +
mov [ebp+arg_0] 4 +
lea eax [edi-30h] +
push eax  +
mov ecx esi +
call sub_101122E  +
movzx eax al +
add ebx eax +
push edi  +
mov ecx esi +
call sub_101122E  +
movzx eax al +
add ebx eax +
push dword ptr [edi]  +
call ds:SetEvent  +
neg eax  +
sbb eax eax +
neg eax  +
add ebx eax +
add edi 4 +
dec [ebp+arg_0]  +
jnz loc_101182C  +
lea eax [esi+74h] +
push eax  +
mov ecx esi +
call sub_101122E  +
movzx eax al +
add ebx eax +
lea eax [esi+0A4h] +
push eax  +
mov ecx esi +
call sub_101122E  +
movzx eax al +
add ebx eax +
jmp loc_1011889  +
mov ebx [ebp+arg_0] +
cmp byte ptr [esi+24h] 0 +
jz loc_1011898  +
cmp ebx 0Eh +
jnz loc_1011898  +
mov al 1 +
jmp loc_10118A1  +
mov ecx esi +
call sub_1011355  +
xor al al +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [esi+90h]  +
push esi  +
push offset loc_1011610  +
call ds:WriteEncryptedFileRaw  +
cmp dword_1067C5C 0 +
mov edi eax +
jz loc_10118E3  +
push edi  +
push offset aEfsWriteencryp  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_10118F9  +
push dword ptr [esi+0A4h]  +
mov [esi+0A8h] edi +
call ds:SetEvent  +
push edi  +
call ds:ExitThread  +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:OpenEncryptedFileRawW +
mov esi ecx +
lea eax [esi+90h] +
push eax  +
push 1  +
push [ebp+arg_4]  +
call edi  +
mov ebx eax +
test ebx ebx +
jnz loc_1011988  +
lea eax [esi+60h] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
call edi  +
mov ebx eax +
xor edi edi +
cmp ebx edi +
jnz loc_1011972  +
push edi  +
push 4  +
push esi  +
push offset loc_10118AE  +
push edi  +
push edi  +
call ds:CreateThread  +
mov [esi] eax +
cmp eax edi +
jz loc_1011968  +
push 2  +
push eax  +
call ds:SetThreadPriority  +
push dword ptr [esi]  +
call ds:ResumeThread  +
mov al 1 +
jmp loc_10119B5  +
call ds:GetLastError  +
mov ebx eax +
jmp loc_10119A5  +
cmp dword_1067C5C edi +
jz loc_10119A5  +
call ds:GetLastError  +
push eax  +
push offset aEfsOpenencrypt  +
jmp loc_101199D  +
cmp dword_1067C5C 0 +
jz loc_10119A5  +
call ds:GetLastError  +
push eax  +
push offset aEfsOpenencry_0  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
push ebx  +
call ds:SetLastError  +
mov ecx esi +
call sub_101125C  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push 4  +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
push 27h  +
push 0FFFFFFFFh  +
call ds:NtSetInformationProcess  +
pop ebp  +
retn 4  +
***
jmp ds:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1011B45  +
test eax eax +
jnz loc_1011B4A  +
mov ecx [esi] +
test ecx ecx +
jz loc_1011B42  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1011B36  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1078DE0 +
push offset dword_1078DD0  +
push dword_1078DDC  +
mov dword_1078DD0 eax +
push offset dword_1078DC0  +
push offset dword_1078DC4  +
push offset dword_1078DBC  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1078DCC eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1011BD2  +
cmp eax esi +
jnz loc_1011BC5  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1011BD5  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1011BAC  +
xor esi esi +
inc esi  +
mov eax dword_1079228 +
cmp eax esi +
jnz loc_1011BE8  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1011C23  +
mov eax dword_1079228 +
test eax eax +
jnz loc_1011C1D  +
mov dword_1079228 esi +
push offset dword_10013BC  +
push offset dword_10013B0  +
call sub_1011B29  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1011C23  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1011CED  +
mov dword_1078DD8 esi +
mov eax dword_1079228 +
cmp eax esi +
jnz loc_1011C47  +
push offset dword_10013AC  +
push offset dword_1001350  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1079228 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1011C54  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1079238 ebx +
jz loc_1011C75  +
push offset dword_1079238  +
call sub_1012579  +
pop ecx  +
test eax eax +
jz loc_1011C75  +
push ebx  +
push 2  +
push ebx  +
call dword_1079238  +
push dword_1078DC0  +
push dword_1078DC4  +
push dword_1078DBC  +
call sub_1009D06  +
add esp 0Ch +
mov dword_1078DD4 eax +
cmp dword_1078DC8 ebx +
jnz loc_1011CD3  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1078DD4 eax +
xor ebx ebx +
cmp dword_1078DC8 ebx +
jnz loc_1011CD3  +
push eax  +
call ds:_exit  +
cmp dword_1078DD8 ebx +
jnz loc_1011CE1  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1078DD4 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1011D0A  +
xor eax eax +
jmp loc_1011D57  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1011D06  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1011D44  +
cmp ecx 20Bh +
jnz loc_1011D06  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1011D06  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1011D52  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1011D06  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1078DC8 eax +
call sub_1012687  +
push eax  +
call ds:__set_app_type  +
or dword_1079230 0FFFFFFFFh +
or dword_1079234 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1078DE8 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1078DE4 +
mov [eax] ecx +
call sub_1012619  +
cmp dword_1017178 0 +
jnz loc_1011DB0  +
push offset sub_1012619  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1012601  +
xor eax eax +
retn   +
***
call sub_10126C6  +
jmp sub_1011B8A  +
***
jmp ds:__CxxFrameHandler3  +
***
cmp ecx dword_1017160 +
jnz loc_1011DE2  +
retn 0  +
jmp loc_101275C  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1017160 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1017160 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1017160 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1017160 +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_1011DD7  +
jmp __EH_epilog3  +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_1011DD7  +
jmp __EH_epilog3  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_1011F39  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
call __SEH_prolog4  +
cmp dword ptr [ebp-20h] 0 +
jnz $LN10  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1011FC3  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
dec [ebp+arg_8]  +
js loc_1012013  +
mov ecx [ebp+arg_0] +
sub ecx [ebp+arg_4] +
mov [ebp+arg_0] ecx +
call [ebp+arg_C]  +
jmp loc_1011FD3  +
mov eax [ebp-14h] +
mov [ebp-1Ch] eax +
mov eax [ebp-1Ch] +
mov eax [eax] +
mov [ebp-20h] eax +
mov eax [ebp-20h] +
cmp dword ptr [eax] 0E06D7363h +
jz loc_101200A  +
mov dword ptr [ebp-24h] 0 +
mov eax [ebp-24h] +
retn   +
call ds:?terminate@@YAXXZ  +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 10h  +
***
call __SEH_prolog4  +
cmp dword ptr [ebp-1Ch] 0 +
jnz $LN9  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1011FC3  +
retn   +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_10120D1  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_10120ED  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_1012109  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_101214A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_1012117  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_1012145  +
cmp edx [esp+arg_4] +
ja loc_1012145  +
jb loc_1012146  +
cmp eax [esp+arg_0] +
jbe loc_1012146  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_1012154  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1012186  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_1012192  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_1012282  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_10122C3  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_1012290  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_10122BE  +
cmp edx [esp+arg_4] +
ja loc_10122BE  +
jb loc_10122BF  +
cmp eax [esp+arg_0] +
jbe loc_10122BF  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_1012334  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_1012350  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_101237C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_10123C3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_101238A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_10123B8  +
cmp edx [esp+arg_4] +
ja loc_10123B8  +
jb loc_10123C1  +
cmp eax [esp+arg_0] +
jbe loc_10123C1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_10123D5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_10123E9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1011DD7  +
push offset dword_1017160  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10124C5  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10124C5  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10124BF  +
cmp eax 19930521h +
jz loc_10124BF  +
cmp eax 19930522h +
jz loc_10124BF  +
cmp eax 1994000h +
jnz loc_10124C5  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push offset loc_1012488  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1012506  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1012502  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101256D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1012565  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101256F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1012555  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_10124F0  +
pop ecx  +
test eax eax +
jz loc_10125D6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1012530  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10125D6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10125DF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101267A  +
cmp ecx 0FFFFFFFFh +
jz loc_101267A  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1012673  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1012673  +
cmp edx 10000000h +
jnb loc_1012673  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1012673  +
jmp loc_101266E  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10126BC  +
push eax  +
call sub_1012621  +
test eax eax +
jz loc_10126BC  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10126B1  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10126BC  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1017160 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10126F8  +
test eax ebx +
jz loc_10126F8  +
not eax  +
mov dword_1017164 eax +
jmp loc_1012753  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_101273F  +
test dword_1017160 ebx +
jnz loc_1012744  +
mov esi 0BB40E64Fh +
mov dword_1017160 esi +
not esi  +
mov dword_1017164 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1078EF0 eax +
mov dword_1078EEC ecx +
mov dword_1078EE8 edx +
mov dword_1078EE4 ebx +
mov dword_1078EE0 esi +
mov dword_1078EDC edi +
mov word_1078F08 ss +
mov word_1078EFC cs +
mov word_1078ED8 ds +
mov word_1078ED4 es +
mov word_1078ED0 fs +
mov word_1078ECC gs +
pushf   +
pop dword_1078F00  +
mov eax [ebp+0] +
mov dword_1078EF4 eax +
mov eax [ebp+4] +
mov dword_1078EF8 eax +
lea eax [ebp+8] +
mov dword_1078F04 eax +
mov eax [ebp-320h] +
mov dword_1078E40 10001h +
mov eax dword_1078EF8 +
mov dword_1078DFC eax +
mov dword_1078DF0 0C0000409h +
mov dword_1078DF4 1 +
mov eax dword_1017160 +
mov [ebp-328h] eax +
mov eax dword_1017164 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_1079110 edi +
jnz loc_10128AC  +
push dword_1079118  +
call sub_10130F0  +
test eax eax +
jnz loc_10128A8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012940  +
push 42Bh  +
jmp loc_101293A  +
mov eax edi +
pop edi  +
retn   +
cmp dword_1079118 0 +
jnz loc_1012890  +
call sub_1013111  +
push eax  +
mov dword_1079118 eax +
call sub_10130F0  +
test eax eax +
jz loc_101292E  +
push 0  +
push offset String  +
push dword_1079118  +
call sub_10132FA  +
test eax eax +
jnz loc_101292E  +
push 3  +
push dword_1079118  +
call sub_1013371  +
cmp eax edi +
jnz loc_101292E  +
push 3  +
push dword_1079118  +
call sub_1013371  +
cmp eax 2 +
jnz loc_101292E  +
push 3  +
push dword_1079118  +
call sub_1013371  +
cmp eax 3 +
jnz loc_101292E  +
push 0  +
mov dword_1079110 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1012940  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov eax dword_1079118 +
test eax eax +
jz loc_101296A  +
push eax  +
call sub_10130F0  +
test eax eax +
jz loc_101296A  +
push 0  +
push dword_1079118  +
call sub_10134F6  +
retn   +
mov eax offset String +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_101299E  +
call esi  +
test eax eax +
jnz loc_101299A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10129D1  +
call sub_1012873  +
test eax eax +
jz loc_101299A  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_1079118  +
call sub_101355C  +
test eax eax +
jnz loc_10129C7  +
call esi  +
test eax eax +
jnz loc_101299A  +
push 8  +
jmp loc_1012994  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1012873  +
test eax eax +
jz loc_1012A5B  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1012A35  +
cmp [ebp+hMem] edi +
jz loc_1012A4D  +
push [ebp+hMem]  +
call sub_1012975  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1012A59  +
cmp [ebp+hMem] edi +
jz loc_1012A4D  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1012A4D  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1012A57  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_10129DC  +
test eax eax +
jz loc_1012A85  +
call sub_1012949  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1012E8B  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1012AB5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012AB1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1012B32  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1012B26  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1012B26  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1012B2E  +
sub edi 0 +
jz loc_1012B02  +
dec edi  +
jz loc_1012AFE  +
dec edi  +
jnz loc_1012B2E  +
push 0FFFFFFF4h  +
jmp loc_1012B04  +
push 0FFFFFFF5h  +
jmp loc_1012B04  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1012B2E  +
cmp eax 0FFFFFFFFh +
jz loc_1012B2E  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1012B30  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1012B4B  +
xor eax eax +
jmp loc_1012B54  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1012B76  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012B98  +
push 57h  +
jmp loc_1012B92  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1012B98  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1012B9A  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1012BC9  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012C3D  +
push 57h  +
call ds:SetLastError  +
jmp loc_1012C3D  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1012C3D  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1012C3F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1012C24  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1012C24  +
push 570h  +
call ds:SetLastError  +
call sub_10129DC  +
jmp loc_1012C36  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012C36  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1012C6E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012C69  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1012C90  +
push [ebp+lpMem]  +
call sub_1012B5D  +
test eax eax +
jz loc_1012C69  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1012C69  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1012CCE  +
cmp [ebp+arg_4] eax +
jz loc_1012CCA  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1012CCA  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1012CAD  +
test esi esi +
jnz loc_1012CD6  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1012CE4  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1012D13  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012D0F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1012D61  +
cmp dword ptr [esi] 0 +
jnz loc_1012D1D  +
xor eax eax +
inc eax  +
jmp loc_1012D61  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_1012D41  +
push dword ptr [esi]  +
call sub_1012C4C  +
cmp eax 0FFFFFFFFh +
jnz loc_1012D45  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1012D60  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1012D81  +
cmp edx 7FFFFFFFh +
jbe loc_1012D86  +
mov eax 80070057h +
test eax eax +
jl loc_1012D9C  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1012C99  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_1079118  +
call sub_10130F0  +
cmp eax 1 +
jnz loc_1012E2F  +
push edi  +
push 3  +
push dword_1079118  +
call sub_1013489  +
mov edi eax +
test edi edi +
jz loc_1012E24  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_1079118  +
call sub_1013627  +
cmp eax 10000h +
jnz loc_1012E1D  +
push esi  +
push 3  +
push dword_1079118  +
call sub_1013525  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1012E1D  +
add eax 0Ch +
push eax  +
call sub_1012CF0  +
lea eax [ebp+var_4] +
push eax  +
call sub_1012CF0  +
push esi  +
push 3  +
push dword_1079118  +
call sub_1013452  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1012DD3  +
pop esi  +
push offset dword_1079118  +
call sub_1013186  +
pop edi  +
cmp dword_1079114 1 +
jnz loc_1012E3E  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1012E7B  +
cmp [ebp+arg_4] 0 +
jz loc_1012E7B  +
cmp [ebp+arg_8] 0 +
jle loc_1012E7B  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1012D6B  +
test eax eax +
jge loc_1012E81  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1012E7D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_10130D0  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_10130D0  +
push [ebp+hConsoleOutput]  +
call sub_1012A8E  +
cmp eax 1 +
jnz loc_1012FBD  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1012ED4  +
push 0FFFFFFF5h  +
jmp loc_1012EE4  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1012FA5  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1012B3C  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_1012F18  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1012F7D  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_1012FA1  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1012B3C  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1012F7D  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_1012F4F  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1012F85  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1012F85  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_1012F3F  +
xor eax eax +
inc eax  +
jmp loc_10130E4  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1012A63  +
call sub_1012DA5  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1012F8B  +
call ds:GetLastError  +
test eax eax +
jnz loc_10130E2  +
push 42Bh  +
jmp loc_10130DC  +
push edi  +
push ebx  +
call sub_1012B3C  +
push 100h  +
push edi  +
mov esi offset unk_1079128 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_1012F7D  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_1012FFD  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_101305A  +
cmp eax ebx +
jbe loc_1013068  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_101303A  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_101303D  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_1013006  +
call ds:GetLastError  +
test eax eax +
jnz loc_101305A  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1012F8E  +
cmp eax [ebp+cchWideChar] +
jnb loc_1013070  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_101305A  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS_7  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_1012FE8  +
jmp loc_1012F7D  +
call ds:GetLastError  +
test eax eax +
jnz loc_10130E2  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1013106  +
cmp dword ptr [eax] 9 +
jnz loc_1013106  +
xor eax eax +
inc eax  +
jmp loc_1013108  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_1013121  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10130F0  +
test eax eax +
jz loc_101317C  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1013170  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_101327D  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1012CF0  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_1013154  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_10130F0  +
test eax eax +
jz loc_10131A7  +
push ecx  +
call sub_1013136  +
push esi  +
call sub_1012CF0  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10130F0  +
test eax eax +
jz loc_10131C6  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10130F0  +
test eax eax +
jnz loc_10131E5  +
xor eax eax +
jmp loc_101320A  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_10131E1  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_1013200  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_10131F8  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1013209  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10130F0  +
test eax eax +
jnz loc_101322B  +
or eax 0FFFFFFFFh +
jmp loc_1013273  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_1013226  +
push 14h  +
call sub_1012BA3  +
test eax eax +
jz loc_1013226  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_1013266  +
mov [esi+8] eax +
jmp loc_101326C  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_10132F1  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_10132BC  +
jz loc_10132D8  +
cmp eax 20000h +
jz loc_10132D8  +
cmp eax 30000h +
jz loc_10132D8  +
cmp eax 40000h +
jz loc_10132D8  +
cmp eax 50000h +
jz loc_10132D8  +
cmp eax 60000h +
jz loc_10132D8  +
jmp loc_10132F1  +
cmp eax 80000h +
jz loc_10132E3  +
cmp eax 90000h +
jz loc_10132D8  +
cmp eax 0A0000h +
jz loc_10132D8  +
cmp eax 0B0000h +
jnz loc_10132F1  +
add edx 0Ch +
push edx  +
call sub_1012CF0  +
jmp loc_10132F1  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_1013186  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10130F0  +
test eax eax +
jnz loc_1013315  +
or eax 0FFFFFFFFh +
jmp locret_1013368  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1013328  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1012BA3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1013363  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_1012E48  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1013213  +
cmp eax 0FFFFFFFFh +
jnz loc_1013366  +
lea eax [ebp+var_4] +
push eax  +
call sub_1012CF0  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_10130F0  +
test eax eax +
jz loc_10133DF  +
call sub_1013111  +
push eax  +
mov [ebp+var_4] eax +
call sub_10130F0  +
test eax eax +
jz loc_10133DF  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_10133B9  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_1013213  +
cmp eax 0FFFFFFFFh +
jz loc_10133B9  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_10133A3  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_10133D6  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_1013213  +
cmp eax 0FFFFFFFFh +
jnz loc_10133E2  +
lea eax [ebp+var_4] +
push eax  +
call sub_1013186  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_10131CF  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1013448  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1013425  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_101342B  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_1013433  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_101327D  +
lea eax [ebp+var_4] +
push eax  +
call sub_1012CF0  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10131CF  +
test eax eax +
jz loc_101347E  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101347E  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10133EC  +
jmp loc_1013480  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10131CF  +
test eax eax +
jz loc_10134B2  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10134B2  +
push dword ptr [eax+0Ch]  +
call sub_10131B1  +
jmp loc_10134B4  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10131CF  +
test eax eax +
jnz loc_10134D7  +
xor eax eax +
jmp loc_10134ED  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_10134EA  +
cmp ecx 80000h +
jnz loc_10134D3  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10131CF  +
test eax eax +
jnz loc_1013510  +
xor eax eax +
jmp loc_101351C  +
cmp dword ptr [eax+4] 20000h +
jnz loc_101350C  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10131CF  +
test eax eax +
jz loc_1013551  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1013551  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10134BD  +
jmp loc_1013553  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10131CF  +
mov esi eax +
cmp esi edi +
jnz loc_101357B  +
xor eax eax +
jmp loc_10135FA  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_101358C  +
cmp eax edi +
jnz loc_10135E1  +
cmp [ebp+arg_C] edi +
jnz loc_101359D  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_10135C1  +
lea edi [eax+eax] +
push edi  +
call sub_1012BA3  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_10135E1  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_10135E8  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_10135E8  +
lea edi [esi+0Ch] +
push edi  +
call sub_1012CF0  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1012BA3  +
mov [edi] eax +
test eax eax +
jnz loc_10135E5  +
xor eax eax +
jmp loc_10135F9  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1012E48  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10131CF  +
test eax eax +
jz loc_101361E  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10131CF  +
test eax eax +
jz loc_1013653  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1013653  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1013605  +
jmp loc_1013655  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_10145B0 +
jmp loc_1011DCC  +
***
lea ecx [ebp+8] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014614 +
jmp loc_1011DCC  +
***
lea ecx [ebp-640h] +
jmp sub_1010A70  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-648h] +
xor ecx eax +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014650 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-434h] +
xor ecx eax +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_101467C +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-230h] +
xor ecx eax +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_10146A8 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_10146DC +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014708 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014744 +
jmp loc_1011DCC  +
***
push dword ptr [ebp-10h]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014770 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_10147B4 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_10147D8 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_101482C +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014860 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_101488C +
jmp loc_1011DCC  +
***
inc ebx  +
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_10148B0 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_1011DD7  +
mov ecx [edx-8] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014968 +
jmp loc_1011DCC  +
***
inc ebx  +
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A0h] +
xor ecx eax +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_101499C +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_10149E0 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014A14 +
jmp loc_1011DCC  +
***
mov eax [ebp-114h] +
and eax 1 +
jz locret_1013BA1  +
and dword ptr [ebp-114h] 0FFFFFFFEh +
lea ecx [ebp-134h] +
jmp ??1CString@@QAE@XZ  +
***
retn   +
***
mov eax [ebp-114h] +
and eax 2 +
jz locret_1013BC3  +
and dword ptr [ebp-114h] 0FFFFFFFDh +
lea ecx [ebp-140h] +
jmp ??1CString@@QAE@XZ  +
***
retn   +
***
mov eax [ebp-114h] +
and eax 4 +
jz locret_1013BE5  +
and dword ptr [ebp-114h] 0FFFFFFFBh +
lea ecx [ebp-13Ch] +
jmp ??1CString@@QAE@XZ  +
***
retn   +
***
mov eax [ebp-114h] +
and eax 8 +
jz locret_1013C07  +
and dword ptr [ebp-114h] 0FFFFFFF7h +
lea ecx [ebp-138h] +
jmp ??1CString@@QAE@XZ  +
***
retn   +
***
mov eax [ebp-114h] +
and eax 10h +
jz locret_1013C29  +
and dword ptr [ebp-114h] 0FFFFFFEFh +
lea ecx [ebp-118h] +
jmp ??1CString@@QAE@XZ  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-144h] +
xor ecx eax +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014A38 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014AA4 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014AE0 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014B28 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014B84 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014BB8 +
jmp loc_1011DCC  +
***
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov cl [ebp+edi*8-37CC0001h] +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014BE4 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014C10 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014C3C +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014C70 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014CA4 +
jmp loc_1011DCC  +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014CD0 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014CFC +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014D30 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-27Ch] +
xor ecx eax +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014D54 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014DB0 +
jmp loc_1011DCC  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014DE4 +
jmp loc_1011DCC  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014E08 +
jmp loc_1011DCC  +
***
lea ecx [ebp-24h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014E54 +
jmp loc_1011DCC  +
***
lea ecx [ebp-18h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014EA0 +
jmp loc_1011DCC  +
***
lea ecx [ebp-0F4h] +
jmp sub_10113AA  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0F8h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014EF4 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014F5C +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014F88 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014FC4 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1014FE8 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_101503C +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1015098 +
jmp loc_1011DCC  +
***
fdivr st st(7) +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov bl [edx+edi*8-37CC0001h] +
call sub_1011DD7  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_10150CC +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1015100 +
jmp loc_1011DCC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1011DD7  +
mov eax offset dword_1015168 +
jmp loc_1011DCC  +
***
mov ecx offset unk_1067DE4 +
call ??0CString@@QAE@XZ  +
push offset loc_1014487  +
call sub_101221C  +
pop ecx  +
retn   +
***
mov ecx offset lpWideCharStr +
call ??0CString@@QAE@XZ  +
push offset loc_1014496  +
call sub_101221C  +
pop ecx  +
retn   +
***
mov ecx offset dword_1067E94 +
call ??0CString@@QAE@XZ  +
push offset loc_10144A5  +
call sub_101221C  +
pop ecx  +
retn   +
***
push 0Ah  +
mov ecx offset unk_1067EF8 +
call ??0CObList@@QAE@H@Z  +
push offset loc_10144B4  +
call sub_101221C  +
pop ecx  +
retn   +
***
push 0Ah  +
mov ecx offset unk_1067DC8 +
call ??0CObList@@QAE@H@Z  +
push offset loc_10144C3  +
call sub_101221C  +
pop ecx  +
retn   +
***
push 0Ah  +
mov ecx offset unk_1067E18 +
call ??0CObList@@QAE@H@Z  +
push offset loc_10144D2  +
call sub_101221C  +
pop ecx  +
retn   +
***
push 0Ah  +
mov ecx offset unk_1067E34 +
call ??0CObList@@QAE@H@Z  +
push offset loc_10144E1  +
call sub_101221C  +
pop ecx  +
retn   +
***
push 0Ah  +
mov ecx offset unk_1067E6C +
call ??0CObList@@QAE@H@Z  +
push offset loc_10144F0  +
call sub_101221C  +
pop ecx  +
retn   +
***
call sub_101221C  +
pop ecx  +
retn   +
***
jmp fword ptr [eax+0Eh]  +
***
inc ebp  +
add [ecx] eax +
call sub_101221C  +
pop ecx  +
retn   +
***
aas   +
retf   +
***
push offset loc_101451D  +
call sub_101221C  +
pop ecx  +
retn   +
***
retf   +
***
call sub_101221C  +
pop ecx  +
retn   +
***
call sub_101221C  +
pop ecx  +
retn   +
***
jmp fword ptr [eax+4Ah]  +
***
inc ebp  +
add [ecx] eax +
call sub_101221C  +
pop ecx  +
retn   +
***
push offset loc_1014559  +
call sub_101221C  +
pop ecx  +
retn   +
***
retf 0FFFFh  +
***
push offset loc_1014568  +
call sub_101221C  +
pop ecx  +
retn   +
***
mov ecx offset unk_1067E88 +
call sub_100CD53  +
push offset loc_1014577  +
call sub_101221C  +
pop ecx  +
retn   +
***
mov ecx offset unk_1067DA4 +
call sub_100CD53  +
push offset loc_1014586  +
call sub_101221C  +
pop ecx  +
retn   +
***
mov ecx offset unk_1067D98 +
call sub_100CD53  +
push offset loc_1014595  +
call sub_101221C  +
pop ecx  +
retn   +
***
push offset nullsub_3  +
call sub_101221C  +
pop ecx  +
retn   +
***
push offset nullsub_4  +
call sub_101221C  +
pop ecx  +
retn   +
***
mov ecx offset unk_1067DE4 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset lpWideCharStr +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_1067E94 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset unk_1067EF8 +
jmp ??1CObList@@UAE@XZ  +
***
mov ecx offset unk_1067DC8 +
jmp ??1CObList@@UAE@XZ  +
***
mov ecx offset unk_1067E18 +
jmp ??1CObList@@UAE@XZ  +
***
mov ecx offset unk_1067E34 +
jmp ??1CObList@@UAE@XZ  +
***
mov ecx offset unk_1067E6C +
jmp ??1CObList@@UAE@XZ  +
***
mov ecx offset unk_1067DE8 +
jmp loc_100CD69  +
***
jmp loc_100CD69  +
***
mov ecx offset unk_1067E00 +
jmp loc_100CD69  +
***
mov ecx offset unk_1067E50 +
jmp loc_100CD69  +
***
mov ecx offset unk_1067EC8 +
jmp loc_100CD69  +
***
jmp loc_100CD69  +
***
mov ecx offset unk_1067EB0 +
jmp loc_100CD69  +
***
mov ecx offset unk_1067EE0 +
jmp loc_100CD69  +
***
mov ecx offset unk_1067E88 +
jmp loc_100CD69  +
***
mov ecx offset unk_1067DA4 +
jmp loc_100CD69  +
***
mov ecx offset unk_1067D98 +
jmp loc_100CD69  +
***
retn 4300h  +
***
arpl [ebp+73h] sp +
jnb $+2  +
iret   +
***
